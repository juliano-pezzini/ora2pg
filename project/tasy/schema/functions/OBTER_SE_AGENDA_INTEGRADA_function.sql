-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_agenda_integrada ( cd_agenda_p bigint, nr_seq_agenda_int_p bigint, cd_estabelecimento_p bigint, nr_seq_item_ageint_p bigint, cd_profissional_p text, dt_agenda_p timestamp ) RETURNS varchar AS $body$
DECLARE


ds_Retorno_w		varchar(2)	:= 'N';
nr_seq_proc_interno_w	bigint;
cd_especialidade_w	integer;
cd_medico_w		varchar(10);
ie_tipo_agendamento_w	varchar(15);
cd_tipo_agenda_w	bigint;
cd_espec_agenda_w	integer;
cd_pessoa_fisica_w	varchar(10);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
nr_seq_regra_w		bigint;
qt_exclusivo_w		integer;
ie_Agenda_w		varchar(2);
qt_regra_w		integer;
cd_estabelecimento_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_area_proced_w	area_procedimento.cd_area_procedimento%type;
cd_espec_proced_w	especialidade_proc.cd_especialidade%type;
cd_grupo_proced_w	grupo_proc.cd_grupo_proc%type;
qt_profissionais_w	varchar(10);
cd_profissional_w	varchar(10);
ie_possui_espec_w	varchar(1);
ds_erro_w		varchar(4000);
qt_proc_adic_w		bigint;
nr_seq_regra_final_w	bigint;
ie_permite_w		varchar(1);
cd_conv_item_w		integer;
cd_categ_item_w		varchar(10);
cd_plano_item_w		varchar(10);
nr_seq_grupo_w		bigint;
ie_exclusiva_w		varchar(1)	:= 'N';
ie_perm_grupo_w		varchar(1)	:= 'N';
ie_anestesia_w		varchar(1);
nr_seq_forma_org_w	bigint;
nr_seq_grupo_sus_w	bigint;
nr_seq_subgrupo_w	bigint;
ie_cons_lib_grupo_exames_w	varchar(1);
nr_seq_area_w		bigint;
qt_idade_pac_w		bigint;
cd_funcao_w		funcao.cd_funcao%type;
dia_da_semana_w		varchar(100);
ie_origem_agend_w	varchar(2);
ie_tipo_convenio_w		bigint;
ie_rodizio_especialidade_w	agenda_integrada_item.ie_rodizio_especialidade%type;
nr_seq_topografia_w		agenda_integrada_item.nr_seq_topografia%type;
nr_seq_regra_nova_w		agenda_regra.nr_sequencia%type;
nr_seq_agenda_regra_w	agenda_regra.nr_sequencia%type;
qtd_agenda_proc_w		agenda_regra.nr_seq_regra%type;
qt_regra_proc_w			agenda_regra.nr_seq_regra%type;
nr_seq_agenda_regra_old_w    agenda_regra.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	cd_pessoa_fisica                                                        
	from	agenda_integrada_prof_item                                                
	where	nr_seq_agenda_item	= nr_seq_item_ageint_p;
	
C02 CURSOR FOR
	SELECT	nr_sequencia                                                            
	from	agenda_regra  a                                                            
	where	coalesce(cd_estabelecimento, cd_Estabelecimento_p) = cd_estabelecimento_p     
	and	cd_agenda = cd_agenda_p                                                    
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
	and	((ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(ie_tipo_convenio::text, '') = ''))
	and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))                
	and	((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = ''))          
	and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = ''))              
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))     
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))           
	and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w             
	and	coalesce(nr_seq_grupo, nr_seq_grupo_sus_w)		= nr_seq_grupo_sus_w                
	and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w               
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))       
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))                                                                             
	and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))                                                                        
	and	((cd_medico = cd_profissional_p) or (coalesce(cd_medico::text, '') = ''))                   
	and	((coalesce(ie_somente_anestesia,'N') = 'S' and ie_anestesia_w = 'S') or (coalesce(ie_somente_anestesia,'N') = 'N'))                                                                                                                                  
	and	((coalesce(ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1))))
	and	ie_permite in ('S','N')                                                    
	and	((coalesce(nr_seq_grupo_ageint::text, '') = '')  or (ie_origem_agend_w in ('MS','CP')))
	and	coalesce(qt_idade_pac_w,0) >= coalesce(qt_idade_min,0) 
	and 	coalesce(qt_idade_pac_w,0) <= coalesce(qt_idade_max,999)
	and	((coalesce(dt_inicio_vigencia::text, '') = '') or establishment_timezone_utils.startofday(dt_inicio_vigencia) <= establishment_timezone_utils.startofday(dt_agenda_p)) and
		((coalesce(dt_fim_vigencia::text, '') = '') or establishment_timezone_utils.startofday(dt_fim_vigencia) >= establishment_timezone_utils.startofday(dt_agenda_p))
	and	((nr_seq_topografia = nr_seq_topografia_w) or (coalesce(nr_seq_topografia::text, '') = ''))
	and	coalesce(ie_situacao,'A') = 'A'
	and ((not exists (SELECT 1 from agenda_regra_proc x where x.nr_seq_regra = a.nr_sequencia)) or (a.nr_sequencia = nr_seq_regra_nova_w))
	order by CASE WHEN coalesce(nr_seq_hor_esp,nr_seq_turno,0)=0 THEN  'A'  ELSE CASE WHEN ie_permite='S' THEN  'S'  ELSE 'A' END  END ,
		coalesce(cd_convenio, 0),    
		coalesce(cd_categoria, 0),	
		coalesce(cd_procedimento,0),                                               
		coalesce(nr_seq_proc_interno,0),                                                   
		coalesce(cd_area_proc,0),                                                          
		coalesce(cd_especialidade,0),                                                      
		coalesce(cd_grupo_proc,0),                                                         
		coalesce(nr_seq_forma_org,0),                                                      
		coalesce(nr_seq_subgrupo,0),                                                       
		coalesce(nr_seq_grupo,0),                                                          		
		coalesce(cd_medico, 0),
		ie_permite;
		
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	agenda_cons_regra_proc
	where	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
	and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))
	and	((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = ''))
	and	((cd_area_procedimento = cd_area_proced_w) or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))
	and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	and	ie_permite in ('S','N')
	and	coalesce(nr_seq_grupo_ageint::text, '') = ''
	and	coalesce(nr_seq_area_ageint::text, '') = ''
	and ((ie_agenda = ie_tipo_agendamento_w) or (coalesce(ie_agenda,'A') = 'A'))
	order by coalesce(cd_procedimento,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_area_procedimento,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_convenio, 0);
	
C05 CURSOR FOR
	SELECT	d.nr_sequencia
	from	agenda_regra d,                                                           
		agenda_int_grupo_item b,
		agenda_int_grupo a,
		agenda_integrada_item c
	where	a.nr_sequencia	= b.nr_seq_grupo
	and	c.nr_seq_grupo_selec	=  a.nr_sequencia
	and	a.ie_situacao  = 'A'
	and	ds_retorno_w	<> 'S'
	and	c.nr_sequencia	= nr_seq_item_ageint_p
	and	a.nr_sequencia	= d.nr_seq_grupo_ageint
	and	d.cd_agenda 	= cd_agenda_p
	and	((coalesce(d.ie_somente_anestesia,'N') = 'S' and ie_anestesia_w = 'S') or (coalesce(d.ie_somente_anestesia,'N') = 'N'))
	and	coalesce(d.ie_situacao,'A') = 'A'
	and	coalesce(d.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	and	((d.cd_convenio = cd_convenio_w) or (coalesce(d.cd_convenio::text, '') = ''))
	and	((d.ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(d.ie_tipo_convenio::text, '') = ''))
	and	((d.cd_categoria = cd_categoria_w) or (coalesce(d.cd_categoria::text, '') = ''))
	and	((d.cd_plano_convenio = cd_plano_w) or (coalesce(d.cd_plano_convenio::text, '') = ''))
	and	((d.cd_area_proc = cd_area_proced_w) or (coalesce(d.cd_area_proc::text, '') = ''))
	and	((d.cd_especialidade = cd_espec_proced_w) or (coalesce(d.cd_especialidade::text, '') = ''))
	and	((d.cd_grupo_proc = cd_grupo_proced_w) or (coalesce(d.cd_grupo_proc::text, '') = ''))
	and	coalesce(d.nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w
	and	coalesce(d.nr_seq_grupo, nr_seq_grupo_sus_w)		= nr_seq_grupo_sus_w
	and	coalesce(d.nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w
	and	((d.cd_procedimento = cd_procedimento_w) or (coalesce(d.cd_procedimento::text, '') = ''))
	and	((coalesce(d.cd_procedimento::text, '') = '') or ((d.ie_origem_proced = ie_origem_proced_w) or (coalesce(d.ie_origem_proced::text, '') = '')))
	and	((d.nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(d.nr_seq_proc_interno::text, '') = ''))
	and	((d.cd_medico = cd_profissional_p) or (coalesce(d.cd_medico::text, '') = ''))
	and	((d.nr_seq_topografia = nr_seq_topografia_w) or (coalesce(d.nr_seq_topografia::text, '') = ''))
	and	d.ie_permite in ('S','N')
	and	coalesce(qt_idade_pac_w,0) >= coalesce(d.qt_idade_min,0)
	and 	coalesce(qt_idade_pac_w,0) <= coalesce(d.qt_idade_max,999)
	order by CASE WHEN coalesce(d.nr_seq_hor_esp,d.nr_seq_turno,0)=0 THEN  'A'  ELSE CASE WHEN d.ie_permite='S' THEN  'S'  ELSE 'A' END  END ,
		coalesce(d.cd_convenio, 0),
		coalesce(d.cd_procedimento,0),
		coalesce(d.nr_seq_proc_interno,0),
		coalesce(d.cd_area_proc,0),
		coalesce(d.cd_especialidade,0),
		coalesce(d.cd_grupo_proc,0),
		coalesce(d.nr_seq_forma_org,0),
		coalesce(d.nr_seq_subgrupo,0),
		coalesce(d.nr_seq_grupo,0),
		coalesce(d.cd_medico, 0),
		d.ie_permite;
		
C06 CURSOR FOR
	SELECT	nr_sequencia                                                            
	from	agenda_cons_regra_proc                                                    
	where	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p     
	and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p                                                 
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))                   
	and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))                
	and	((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = ''))          
	and	((nr_seq_grupo_ageint	= nr_seq_grupo_w)
	or (nr_seq_area_ageint	= nr_seq_area_w))          	
	--and	((cd_medico = cd_profissional_p) or (cd_medico is null))                 
	and	ie_permite in ('S','N')                        
    and  ((ie_agenda = ie_tipo_agendamento_w) or (coalesce(ie_agenda,'A') = 'A'))	
	order by coalesce(cd_procedimento,0),                                               
		coalesce(nr_seq_proc_interno,0),                                                   
		coalesce(cd_area_procedimento,0),                                                  
		coalesce(cd_especialidade,0),                                                      
		coalesce(cd_grupo_proc,0),
		coalesce(cd_convenio, 0);
		--nvl(cd_medico, 0);                                                          
		
C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_area
	from	agenda_int_grupo a,
		agenda_int_grupo_item b,                                                      
		agenda_integrada_item c,
		agenda_cons_regra_proc d                                             
	where	a.nr_sequencia	= b.nr_seq_grupo                                          
	and (a.nr_sequencia	= d.nr_seq_grupo_ageint
	or	a.nr_seq_area	= d.nr_seq_area_Ageint)
	and	coalesce(d.cd_agenda,cd_agenda_p) 	= cd_agenda_p 
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = '')) 	
	and	c.nr_seq_grupo_selec	=  a.nr_sequencia                                     
	and	a.ie_situacao  = 'A'                                                       
	and	ds_retorno_w	<> 'S'                                                        
	and	c.nr_sequencia	= nr_seq_item_ageint_p
	and  ((ie_agenda = ie_tipo_agendamento_w) or (coalesce(ie_agenda,'A') = 'A'));

C08 CURSOR FOR
	SELECT	a.nr_sequencia                                                            
	from	agenda_regra a, agenda_regra_proc b                                                         
	where	a.nr_sequencia = b.nr_seq_regra
	and coalesce(a.cd_estabelecimento, cd_Estabelecimento_p) = cd_estabelecimento_p     
	and	a.cd_agenda = cd_agenda_p                                                    
	and	((a.cd_convenio = cd_convenio_w) or (coalesce(a.cd_convenio::text, '') = ''))
	and	((a.ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(a.ie_tipo_convenio::text, '') = ''))
	and	((a.cd_categoria = cd_categoria_w) or (coalesce(a.cd_categoria::text, '') = ''))                
	and	((a.cd_plano_convenio = cd_plano_w) or (coalesce(a.cd_plano_convenio::text, '') = ''))          
	and	((a.cd_area_proc = cd_area_proced_w) or (coalesce(a.cd_area_proc::text, '') = ''))              
	and	((a.cd_especialidade = cd_espec_proced_w) or (coalesce(a.cd_especialidade::text, '') = ''))     
	and	((a.cd_grupo_proc = cd_grupo_proced_w) or (coalesce(a.cd_grupo_proc::text, '') = ''))           
	and	coalesce(a.nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w             
	and	coalesce(a.nr_seq_grupo, nr_seq_grupo_sus_w)		= nr_seq_grupo_sus_w                
	and	coalesce(a.nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w               
	and	((a.cd_procedimento = cd_procedimento_w) or (coalesce(a.cd_procedimento::text, '') = ''))       
	and	((coalesce(a.cd_procedimento::text, '') = '') or ((a.ie_origem_proced = ie_origem_proced_w) or (coalesce(a.ie_origem_proced::text, '') = '')))
	and	((a.nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(a.nr_seq_proc_interno::text, '') = ''))                                                                        
	and	((a.cd_medico = cd_profissional_p) or (coalesce(a.cd_medico::text, '') = ''))                   
	and	((coalesce(a.ie_somente_anestesia,'N') = 'S' and ie_anestesia_w = 'S') or (coalesce(a.ie_somente_anestesia,'N') = 'N'))              
	and	((coalesce(a.ie_dia_semana,dia_da_Semana_w) = dia_da_Semana_w) or ((coalesce(a.ie_dia_semana,dia_da_Semana_w) = 9) and (dia_da_Semana_w not in (7,1))))
	and	a.ie_permite in ('S','N')                                                    
	and	((coalesce(a.nr_seq_grupo_ageint::text, '') = '')  or (ie_origem_agend_w in ('MS','CP')))
	and	coalesce(qt_idade_pac_w,0) >= coalesce(a.qt_idade_min,0) 
	and 	coalesce(qt_idade_pac_w,0) <= coalesce(a.qt_idade_max,999)
	and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or establishment_timezone_utils.startofday(a.dt_inicio_vigencia) <= establishment_timezone_utils.startofday(dt_agenda_p)) and
		((coalesce(a.dt_fim_vigencia::text, '') = '') or establishment_timezone_utils.startofday(a.dt_fim_vigencia) >= establishment_timezone_utils.startofday(dt_agenda_p))
	and	((a.nr_seq_topografia = nr_seq_topografia_w) or (coalesce(a.nr_seq_topografia::text, '') = ''))
	and	coalesce(a.ie_situacao,'A') = 'A'
	order by CASE WHEN coalesce(a.nr_seq_hor_esp,a.nr_seq_turno,0)=0 THEN  'A'  ELSE CASE WHEN a.ie_permite='S' THEN  'S'  ELSE 'A' END  END ,
		coalesce(a.cd_convenio, 0),    
		coalesce(a.cd_categoria, 0),	
		coalesce(a.cd_procedimento,0),                                               
		coalesce(a.nr_seq_proc_interno,0),                                                   
		coalesce(a.cd_area_proc,0),                                                          
		coalesce(a.cd_especialidade,0),                                                      
		coalesce(a.cd_grupo_proc,0),                                                         
		coalesce(a.nr_seq_forma_org,0),                                                      
		coalesce(a.nr_seq_subgrupo,0),                                                       
		coalesce(a.nr_seq_grupo,0),                                                          		
		coalesce(a.cd_medico, 0),
		a.ie_permite;
		

BEGIN

ie_tipo_agendamento_w := AGEINT_OBTER_TIPO_AGENDA(cd_agenda_p);

select coalesce(max(ie_origem_agendamento),'XX')
into STRICT   ie_origem_agend_w
from   agenda_integrada_item
where  nr_sequencia  =  nr_seq_item_ageint_p;

select coalesce(obter_funcao_ativa,0)
into STRICT   cd_funcao_w
;

select  Obter_Cod_Dia_Semana(dt_agenda_p)
into STRICT 	dia_da_semana_w
;

select	coalesce(max(obter_valor_param_usuario(869, 218, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p)), 'S')
into STRICT	ie_cons_lib_grupo_exames_w
;

select	cd_convenio,
	cd_categoria,                                                                  
	cd_estabelecimento,                                                            
	cd_plano ,
	coalesce(obter_idade_pf(cd_pessoa_fisica,clock_timestamp(),'A'),obter_idade(dt_nascimento, clock_timestamp(), 'A'))
into STRICT	cd_convenio_w,                                                             
	cd_categoria_w,                                                                
	cd_estabelecimento_w,                                                          
	cd_plano_w,
	qt_idade_pac_w
from	agenda_integrada                                                           
where	nr_sequencia	= nr_seq_agenda_int_p;

select	max(ie_tipo_convenio)
into STRICT 	ie_tipo_convenio_w
from 	convenio
where 	cd_convenio = cd_convenio_w;

select	max(cd_convenio),                                                        
	max(cd_categoria),                                                             
	max(cd_plano)                                                                  
into STRICT	cd_conv_item_w,                                                            
	cd_categ_item_w,                                                               
	cd_plano_item_w                                                                
from	agenda_integrada_conv_item                                                 
where	nr_seq_agenda_item	= nr_seq_item_ageint_p;

if (cd_conv_item_w IS NOT NULL AND cd_conv_item_w::text <> '') then                                            
	cd_convenio_w	:= cd_conv_item_w;
	cd_categoria_w	:= cd_categ_item_w;
	cd_plano_w	:= cd_plano_item_w;
end if;

select	coalesce(max(cd_convenio), cd_convenio_w)                                     
into STRICT	cd_convenio_w                                                              
from	agenda_integrada_conv_item                                                 
where	nr_seq_agenda_item	= nr_seq_item_ageint_p;


select	max(cd_tipo_agenda),                                                     
	max(cd_especialidade),                                                         
	max(cd_pessoa_fisica)                                                          
into STRICT	cd_tipo_agenda_w,                                                          
	cd_espec_agenda_w,                                                             
	cd_pessoa_fisica_w                                                             
from	agenda                                                                     
where	cd_agenda	= cd_agenda_p;

select	nr_Seq_proc_interno,                                                     
	cd_especialidade,                                                              
	cd_medico,                                                                     
	cd_procedimento,                                                               
	ie_origem_proced,                                                              
	coalesce(ie_anestesia,'N'),                                                          
	coalesce(ie_rodizio_especialidade, 'N'),
	nr_seq_topografia
into STRICT	nr_seq_proc_interno_w,                                                     
	cd_especialidade_w,                                                            
	cd_medico_w,                                                                   
	cd_procedimento_w,                                                             
	ie_origem_proced_w,                                                            
	ie_anestesia_w,                                                                 
	ie_rodizio_especialidade_w,
	nr_seq_topografia_w
from	agenda_integrada_item                                                      
where	nr_sequencia		= nr_seq_item_ageint_p                                      
and	((ie_tipo_agendamento	= 'E'                                                 
and	cd_tipo_agenda_w	in (2,5))                                                  
or (ie_tipo_agendamento	= 'C'                                                   
and	cd_tipo_agenda_w in (3,4))                                                  
or (ie_tipo_agendamento	= 'S'                                                   
and	cd_tipo_agenda_w = 5));

if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and                                      
	((coalesce(cd_procedimento_w::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '')) then                                             
	SELECT * FROM obter_proc_tab_interno_conv(                                                   
				nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;
                                                                                
select	coalesce(max(cd_area_procedimento),0),                                        
	coalesce(max(cd_especialidade),0),                                                  
	coalesce(max(cd_grupo_proc),0),                                                     
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento,ie_origem_proced, 'C', 'F'),'F'),1,10)),0),
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento,ie_origem_proced, 'C', 'G'),'G'),1,10)),0),                                                                                      
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento,ie_origem_proced, 'C', 'S'),'S'),1,10)),0)                                                                                                                    
into STRICT	cd_area_proced_w,                                                          
	cd_espec_proced_w,                                                             
	cd_grupo_proced_w,                                                             
	nr_seq_forma_org_w,                                                            
	nr_seq_grupo_sus_w,                                                           
	nr_seq_subgrupo_w                                                             
from	estrutura_procedimento_v                                                   
where	cd_procedimento = cd_procedimento_w                                       
and	ie_origem_proced = ie_origem_proced_w;
                                                                                
if (cd_tipo_agenda_w = 2) then                                                  
	select	count(*)                                                                
	into STRICT	qt_exclusivo_w                                                            
	from	agenda_regra                                                              
	where	coalesce(cd_estabelecimento, cd_Estabelecimento_p)	= cd_estabelecimento_p     
	and	cd_agenda 		= cd_agenda_p                                                  
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
	and	((ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(ie_tipo_convenio::text, '') = ''))
	and	((cd_medico = cd_profissional_p) or (coalesce(cd_medico::text, '') = ''))                   
	and	((coalesce(ie_somente_anestesia,'N') = 'S' and ie_anestesia_w = 'S') or (coalesce(ie_somente_anestesia,'N') = 'N')) 
	and	((nr_seq_topografia = nr_seq_topografia_w) or (coalesce(nr_seq_topografia::text, '') = ''))	
	and	ie_permite = 'E'
	and	coalesce(ie_situacao,'A') = 'A';
	
	if (qt_exclusivo_w > 0) then                                                   
		select	coalesce(max(nr_sequencia),0)                                               
		into STRICT	nr_seq_regra_w                                                           
		from	agenda_regra                                                             
		where	coalesce(cd_estabelecimento, cd_estabelecimento_p) 	= cd_estabelecimento_p   
		and	cd_agenda 		= cd_agenda_p                                                 
		and	((cd_convenio 		= cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
		and	((ie_tipo_convenio = ie_tipo_convenio_w) or (coalesce(ie_tipo_convenio::text, '') = ''))
		and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))               
		and	((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = ''))         
		and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = ''))             
		and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))    
		and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))          
		and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))      
		and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))                                                                                                                                    
		and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))                                                                                                                                                          
		and	((cd_medico 		= cd_profissional_p) or (coalesce(cd_medico::text, '') = ''))                
		and	((coalesce(ie_somente_anestesia,'N') = 'S' and ie_anestesia_w = 'S') or (coalesce(ie_somente_anestesia,'N') = 'N'))
		and	((nr_seq_topografia = nr_seq_topografia_w) or (coalesce(nr_seq_topografia::text, '') = ''))		
		and	ie_permite = 'E'
		and	coalesce(ie_situacao,'A') = 'A';
		
		ie_exclusiva_w	:= 'S';
		
		if (nr_seq_regra_w = 0) then                                                  
			ds_retorno_w	:= 'N';
		else                                                                          
			ds_retorno_w	:= 'S';
		end if;
	else 
	
		select  coalesce(max(1),0) 
		into STRICT	qtd_agenda_proc_w
		from 	agenda_regra_proc a, agenda_regra b 
		where 	a.nr_seq_Regra = b.nr_sequencia 
		and (b.cd_agenda = cd_agenda_p or (coalesce(b.cd_agenda::text, '') = '' and b.cd_convenio = cd_convenio_w))  LIMIT 1;
		
		if (qtd_agenda_proc_w > 0) then
			nr_seq_agenda_regra_old_w := null;
			open C08;
			loop                                                                          
			fetch C08 into                                                                
				nr_seq_agenda_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin                                                                        
				if (coalesce(nr_seq_agenda_regra_old_w::text, '') = '' or nr_seq_agenda_regra_old_w <> nr_seq_agenda_regra_w) then
					select 	coalesce(max(1),0)
					into STRICT	qt_regra_proc_w
					from 	agenda_regra_proc x, agenda_integrada_item b, estrutura_procedimento_v c
					where	x.nr_seq_regra = nr_seq_agenda_regra_w  
					and		b.nr_seq_agenda_int = nr_seq_agenda_int_p
					and 	b.ie_tipo_agendamento in ('E','S')				
					and		b.nr_sequencia <> nr_seq_item_ageint_p
					and  	c.cd_procedimento = b.cd_procedimento
					and  	c.ie_origem_proced = b.ie_origem_proced
					and 	((b.nr_seq_proc_interno = x.nr_seq_proc_interno) or (coalesce(x.nr_seq_proc_interno::text, '') = ''))
					and		((b.cd_procedimento = x.cd_procedimento) or (coalesce(x.cd_procedimento::text, '') = ''))
					and		((b.ie_origem_proced = x.ie_origem_proced) or (coalesce(x.ie_origem_proced::text, '') = ''))
					and		((c.cd_area_procedimento = x.cd_area_procedimento) or (coalesce(x.cd_area_procedimento::text, '') = ''))
					and		((c.cd_especialidade = x.cd_especialidade) or (coalesce(x.cd_especialidade::text, '') = ''))
					and		((c.cd_grupo_proc = x.cd_grupo_proc) or (coalesce(x.cd_grupo_proc::text, '') = ''));
				end if;
				if (qt_regra_proc_w > 0) then
					nr_seq_regra_nova_w	:= nr_seq_agenda_regra_w;
				end if;
				qt_regra_proc_w := 0;
				nr_seq_agenda_regra_old_w := nr_seq_agenda_regra_w;
				end;
			end loop;
			close C08;
		end if;
		
		open C02;
		loop                                                                          
		fetch C02 into                                                                
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin                                                                        
			nr_seq_regra_final_w	:= nr_seq_regra_w;
			end;
		end loop;
		close C02;
		select	coalesce(max(ie_permite),'N')                                               
		into STRICT	ie_permite_w                                                             
		from	agenda_regra                                                             
		where	nr_sequencia	= nr_seq_regra_final_w;

		ds_retorno_w	:= ie_permite_w;

	end if;
			 
	if (ds_retorno_w	<> 'S') and (ie_exclusiva_w	= 'N') then                                                                                                                                                                                       
		open C05;
		loop                                                                         
		fetch C05 into                                                               
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin                                                                       
			if (ds_retorno_w				<> 'S') or (ie_cons_lib_grupo_exames_w	= 'N')then                                             
				select	coalesce(max(ie_permite),'N')                                            
				into STRICT	ds_retorno_w                                                          
				from	agenda_regra                                                          
				where	nr_sequencia	= nr_seq_regra_w;                                       				
			end if;
			end;
		end loop;
		close C05;
	end if;
	select	count(*)                                                                
	into STRICT	qt_proc_adic_w                                                            
	from	ageint_exame_adic_item                                                    
	where	nr_seq_item	= nr_seq_item_ageint_p;
	if (qt_proc_adic_w	> 0) then                                                   
		ds_erro_w := Ageint_Consiste_Exame_Adic(cd_agenda_p, nr_seq_item_ageint_p, 'E', cd_convenio_w, cd_categoria_w, cd_estabelecimento_p, cd_plano_w, cd_profissional_p, ds_erro_w, dt_agenda_p, dia_da_semana_w);
                                                                                
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then                                               
			ds_retorno_w	:= ds_retorno_w || 'A';
		end if;
	end if;
                                                                                
elsif (cd_tipo_agenda_w in (3,4)) then                                          
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END                                               
	into STRICT	ie_possui_espec_w                                                         
	from	agenda_cons_especialidade                                                 
	where	cd_agenda		= cd_agenda_p                                                 
	and	cd_especialidade	= cd_especialidade_w;
                                                                                
	if	((cd_medico_w		= cd_profissional_p AND ie_rodizio_especialidade_w = 'N') or (coalesce(cd_medico_w::text, '') = '') or (ie_rodizio_especialidade_w = 'S')) and           
		(((cd_espec_agenda_w	= cd_especialidade_w) or (coalesce(cd_especialidade_w::text, '') = '')) or (ie_possui_espec_w	= 'S')) then                                               
		ds_retorno_w	:= 'S';
	else                                                                           
		ds_Retorno_w	:= 'N';
	end if;
                                                                                
	if (ds_retorno_w	<> 'S') and (ie_exclusiva_w	= 'N') then                                                   
		open C07;
		loop                                                                          
		fetch C07 into                                                                
			nr_seq_grupo_w,
			nr_seq_area_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin                                                                        
                                                                                
			open C06;
			loop                                                                         
			fetch C06 into                                                               
				nr_seq_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin                                                                       
				if (ds_retorno_w	<> 'S') then                                               
					select	coalesce(max(ie_permite),'N')                                            
					into STRICT	ds_retorno_w                                                          
					from	agenda_cons_regra_proc                                                
					where	nr_sequencia	= nr_seq_regra_w;
				end if;
				end;
			end loop;
			close C06;
			end;
		end loop;
		close C07;
	end if;
                                                                                
	select	count(*)                                                                
	into STRICT	qt_proc_adic_w                                                            
	from	ageint_exame_adic_item                                                    
	where	nr_seq_item	= nr_seq_item_ageint_p;
                                                                                
	if (qt_proc_adic_w	> 0) then                                                   
		ds_erro_w := Ageint_Consiste_Exame_Adic(cd_agenda_p, nr_seq_item_ageint_p, 'C', cd_convenio_w, cd_categoria_w, cd_estabelecimento_p, cd_plano_w, cd_profissional_p, ds_erro_w, dt_agenda_p, dia_da_semana_w);
		
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then                                               
			ds_retorno_w	:=  ds_retorno_w || 'A';
		end if;
	end if;
else                                                                            
	select	count(*)                                                                
	into STRICT	qt_exclusivo_w                                                            
	from	agenda_cons_regra_proc                                                    
	where	coalesce(cd_estabelecimento, cd_Estabelecimento_p)	= cd_estabelecimento_p     
	and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p                                                  
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))                   
	and	coalesce(ie_permite,'S') = 'E';
                                                                                
	if (qt_exclusivo_w > 0) then                                                   
                                                                                
		select	coalesce(max(nr_sequencia),0)                                               
		into STRICT	nr_seq_regra_w                                                           
		from	agenda_cons_regra_proc                                                   
		where	coalesce(cd_estabelecimento, cd_estabelecimento_p) 	= cd_estabelecimento_p   
		and	coalesce(cd_agenda,cd_agenda_p) = cd_agenda_p                                                
		and	((cd_convenio 		= cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))                
		and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))               
		and	((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = ''))         
		and	((cd_area_procedimento = cd_area_proced_w) or (coalesce(cd_area_procedimento::text, '') = ''))                                                                                                                                                             
		and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))    
		and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))          
		and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))      
		and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))                                                                                                                                    
		and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))                                                                        
		and	coalesce(ie_permite,'S') = 'E'
		and  ((ie_agenda = ie_tipo_agendamento_w) or (coalesce(ie_agenda,'A') = 'A'));
		
		if (qt_regra_w	= 0) then                                                      
			ds_retorno_w	:= 'N';
		else                                                                          
			ds_retorno_w	:= 'S';
		end if;
	else                                                                           
		open C03;
		loop                                                                          
		fetch C03 into                                                                
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin                                                                        
			nr_seq_regra_final_w	:= nr_seq_regra_w;
			end;
		end loop;
		close C03;
		select	coalesce(max(ie_permite),'N')                                               
		into STRICT	ie_permite_w                                                             
		from	agenda_cons_regra_proc                                                   
		where	nr_sequencia	= nr_seq_regra_final_w;
                                                                                
		if (ie_permite_w	<> 'S') then                                                 
			open C07;
			loop                                                                         
			fetch C07 into                                                               
				nr_seq_grupo_w,
				nr_Seq_area_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin                                                                       
                                                                                
				open C06;
				loop                                                                        
				fetch C06 into                                                              
					nr_seq_regra_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin                                                                      
					if (ds_retorno_w	<> 'S') then                                              
						select	coalesce(max(ie_permite),'N')                                           
						into STRICT	ie_permite_w                                                         
						from	agenda_cons_regra_proc                                               
						where	nr_sequencia	= nr_seq_regra_w;
					end if;
					end;
				end loop;
				close C06;
				end;
			end loop;
			close C07;
		end if;
		ds_retorno_w	:= ie_permite_w;
	end if;
end if;
                                                                                
return	ds_retorno_w;
                                                                                
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_agenda_integrada ( cd_agenda_p bigint, nr_seq_agenda_int_p bigint, cd_estabelecimento_p bigint, nr_seq_item_ageint_p bigint, cd_profissional_p text, dt_agenda_p timestamp ) FROM PUBLIC;

