-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_convenio_agenda_atend ( cd_convenio_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


/* 
  Returns
    P - Private/Self Payment
*/
cd_tipo_convenio_w          smallint;
cd_tipo_convenio_atend_w	smallint;
qt_publico_taxa_w           bigint;
qt_private_insurance_w		smallint;
return_w                    varchar(1) := null;


BEGIN

    -- Verifica os convênios do atendimento
    if (coalesce(nr_atendimento_p,0) > 0) then

		-- Private insurance
		select 	count(1)
		into STRICT 	qt_private_insurance_w
		from    convenio 
		where   cd_convenio in (SELECT cd_convenio 
								from atend_categoria_convenio 
								where nr_atendimento = nr_atendimento_p)                          
		and   	ie_tipo_convenio = 2;
		
		if (qt_private_insurance_w > 0) then
			return_w := 'P';
		else
			-- Convenio público com taxa       
			select  count(*)
			into STRICT    qt_publico_taxa_w
			from    atend_categoria_convenio a,                
					pessoa_fisica_taxa t,
					convenio c
			where   a.nr_atendimento = nr_atendimento_p
			and     a.nr_seq_interno =  t.nr_seq_atecaco
			and     t.ie_obriga_pag_adicional = 'S'
			and     a.cd_convenio = c.cd_convenio
			and     c.ie_tipo_convenio = 11;
			
			if (qt_publico_taxa_w = 0) then
				-- Convênio particular
				select  max(ie_tipo_convenio)
				into STRICT    cd_tipo_convenio_atend_w
				from    convenio
				where   cd_convenio in (SELECT cd_convenio 
										from atend_categoria_convenio 
										where nr_atendimento = nr_atendimento_p)                          
				and   ie_tipo_convenio = 1;
				
				if (cd_tipo_convenio_atend_w IS NOT NULL AND cd_tipo_convenio_atend_w::text <> '') then
				  return_w := 'P';
				end if;
			end if;
		end if;
		
    -- Verifica o convênio agenda
    elsif (coalesce(cd_convenio_p,0) > 0) then
    
        select	max(ie_tipo_convenio)
        into STRICT	  cd_tipo_convenio_w
        from	  convenio
        where   cd_convenio	= cd_convenio_p
        and     ie_tipo_convenio in (2,1);

        -- Convênio particular ou privado
        if (cd_tipo_convenio_w IS NOT NULL AND cd_tipo_convenio_w::text <> '') then
          return_w := 'P';
        end if;

    end if;

    return return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_convenio_agenda_atend ( cd_convenio_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

