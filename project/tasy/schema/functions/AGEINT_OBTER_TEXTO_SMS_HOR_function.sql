-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_obter_texto_sms_hor ( DT_AGENDA_P timestamp, CD_AGENDA_P bigint, CD_PESSOA_FISICA_P text, NM_PACIENTE_P text, CD_ESTABELECIMENTO_P bigint, NM_USUARIO_P text, NR_SEQ_AGENDA_P bigint DEFAULT NULL) RETURNS varchar AS $body$
DECLARE

 
DS_RETORNO_W			varchar(4000);
DS_TEXTO_SMS_W			varchar(4000);
DS_ITEM_W			varchar(255);
DT_ITEM_W			timestamp;
DS_ITENS_W			varchar(4000);
NM_PESSOA_FISICA_W		varchar(80);
CD_TIPO_AGENDA_W		bigint;
PRIMEIRO_NOME_W			varchar(80);
NM_MEDICO_W	    	varchar(255);
DT_RESUMIDA_W			timestamp;	
ie_orientacao_SMS_proc_w	varchar(1);
nr_seq_proc_interno_w		agenda_integrada_item.nr_seq_proc_interno%type;
cd_procedimento_w		agenda_integrada_item.cd_procedimento%type;
ie_origem_proced_w		agenda_integrada_item.ie_origem_proced%type;
ds_orientacao_sms_proc_w	varchar(255);
		

BEGIN 
 
nm_pessoa_fisica_w	:= nm_paciente_p;
 
ds_texto_sms_w	:= obter_valor_param_usuario(869, 192, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_orientacao_SMS_proc_w := obter_valor_param_usuario(869, 400, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
 
select	max(cd_tipo_agenda) 
into STRICT	cd_tipo_agenda_w 
from	agenda 
where	cd_agenda = cd_agenda_p;
 
if (cd_tipo_agenda_w = 3) then 
	select	max(b.ds_especialidade) 
	into STRICT	ds_itens_w 
	from	agenda a, 
		especialidade_medica b 
	where	a.cd_especialidade = b.cd_especialidade 
	and	a.cd_agenda = cd_agenda_p;
		 
	ds_itens_w	:= ds_itens_w || ds_item_w || ' data: '||to_char(dt_agenda_p,'dd/mm hh24:mi');
	 
elsif (cd_tipo_agenda_w = 2) then 
	select	substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,240), 
		cd_procedimento, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	into STRICT	ds_itens_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w 
	from	agenda_paciente 
	where	cd_agenda = cd_agenda_p 
	and	hr_inicio = dt_agenda_p;
	 
	ds_itens_w	:= ds_itens_w || ds_item_w || ' data: '||to_char(dt_agenda_p,'dd/mm hh24:mi');
 
elsif (cd_tipo_agenda_w = 5) then 
	select	substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,240), 
		cd_procedimento, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	into STRICT	ds_itens_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w 
	from	agenda_consulta 
	where	cd_agenda = cd_agenda_p 
	and	dt_agenda = dt_agenda_p;
	 
	ds_itens_w	:= ds_itens_w || ds_item_w || ' data: '||to_char(dt_agenda_p,'dd/mm hh24:mi');
end if;
 
if (coalesce(ie_orientacao_SMS_proc_w,'N') = 'S') then 
	if	(nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '' AND nr_seq_proc_interno_w > 0) then 
 
		select	ds_orientacao_sms 
		into STRICT	ds_orientacao_sms_proc_w 
		from	proc_interno 
		where	nr_sequencia = nr_seq_proc_interno_w;
 
	elsif	((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (cd_procedimento_w > 0) and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') and (ie_origem_proced_w > 0)) then 
 
		select	ds_orientacao_sms 
		into STRICT	ds_orientacao_sms_proc_w 
		from	procedimento 
		where	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w;
	end if;
end if;
 
IF (CD_PESSOA_FISICA_P IS NOT NULL AND CD_PESSOA_FISICA_P::text <> '') THEN 
	SELECT	MAX(SUBSTR(OBTER_NOME_PF(CD_PESSOA_FISICA_P),1,80)) 
	INTO STRICT	NM_PESSOA_FISICA_W 
	FROM	PESSOA_FISICA 
	WHERE	CD_PESSOA_FISICA	= CD_PESSOA_FISICA_P;
	 
	SELECT SUBSTR(OBTER_PRIMEIRO_NOME(OBTER_NOME_PF(CD_PESSOA_FISICA)),1,80) 
	INTO STRICT	PRIMEIRO_NOME_W 
	FROM	PESSOA_FISICA 
	WHERE 	CD_PESSOA_FISICA = CD_PESSOA_FISICA_P;
		 
	SELECT	MAX(DT_RESUMIDA), 
		MAX(NM_MEDICO) 
	INTO STRICT	DT_RESUMIDA_W, 
		NM_MEDICO_W 
	FROM (	SELECT	OBTER_HORARIO_ITEM_AGEINT(A.NR_SEQUENCIA, null,null) DT_RESUMIDA, 
			SUBSTR(AGEINT_OBTER_MEDICO_ITEM(NR_SEQUENCIA, null),1,60) NM_MEDICO 
		FROM	AGENDA_CONSULTA A 
		WHERE	A.NR_SEQUENCIA = NR_SEQ_AGENDA_P 
		
UNION
 
		SELECT 	OBTER_HORARIO_ITEM_AGEINT(null, A.NR_SEQUENCIA,null) dt_resumida, 
			SUBSTR(AGEINT_OBTER_MEDICO_ITEM(null, NR_SEQUENCIA),1,60) 
		FROM	AGENDA_PACIENTE A 
		WHERE	A.NR_SEQUENCIA = NR_SEQ_AGENDA_P) alias8;
END IF;
 
DS_TEXTO_SMS_W := substr(replace_macro(DS_TEXTO_SMS_W,'@ITEM@', DS_ITENS_W),1,4000);
DS_TEXTO_SMS_W := substr(replace_macro(DS_TEXTO_SMS_W,'@PACIENTE@', NM_PESSOA_FISICA_W),1,4000);
DS_TEXTO_SMS_W := substr(replace_macro(DS_TEXTO_SMS_W,'@PRIMEIRO_NOME@', PRIMEIRO_NOME_W),1,4000);
DS_TEXTO_SMS_W := substr(replace_macro(DS_TEXTO_SMS_W,'@NM_MEDICO@', NM_MEDICO_W),1,4000);
DS_TEXTO_SMS_W := substr(replace_macro(DS_TEXTO_SMS_W,'@DT_RESUMIDA@', PKG_DATE_FORMATERS.TO_VARCHAR(DT_RESUMIDA_W,'DD/MM/YYYY HH24:MI', PKG_DATE_FORMATERS.GETCALENDAR(CD_ESTABELECIMENTO_P, NM_USUARIO_P))),1,4000);
 
if (ds_orientacao_sms_proc_w IS NOT NULL AND ds_orientacao_sms_proc_w::text <> '') then 
	ds_texto_sms_W := trim(both trim(both ds_texto_sms_W) || ' ' || trim(both ds_orientacao_sms_proc_w));
end if;
 
DS_RETORNO_W	:= DS_TEXTO_SMS_W;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_obter_texto_sms_hor ( DT_AGENDA_P timestamp, CD_AGENDA_P bigint, CD_PESSOA_FISICA_P text, NM_PACIENTE_P text, CD_ESTABELECIMENTO_P bigint, NM_USUARIO_P text, NR_SEQ_AGENDA_P bigint DEFAULT NULL) FROM PUBLIC;

