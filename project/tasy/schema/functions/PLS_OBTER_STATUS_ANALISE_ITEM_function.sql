-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_status_analise_item ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, ie_item_nao_encontrado_p text, ie_informativo_P w_pls_analise_item.ie_informativo%type) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Retornar o status de análise (geral do item) para visualização na nova função
de análise de contas médicas (Análise Nova). O retorno dela é gravado na tabela temporária
para exibir o ícone correspodente.

O ícone irá funcionar como semáforo:
"E" - Vermelho - Tem ocorrências que impedem o andamento do fluxo de análise.
"A" - Amarelo - Tem ocorrências pendentes de análise, o grupo auditor responsável ainda não analisou as
ocorrências.
"V" - Verde - Não há mais ocorrências pendentes de análise (já passou por todos os grupos) ou o item foi
liberado pelo sistema (não gerou glosas ou ocorrências que impediam pagamento)
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_status_analise_w	varchar(1)	:= null;
qt_glosa_nao_vinc_w	bigint;
qt_ocor_sem_fluxo_w	bigint;
qt_glosa_w		bigint;
qt_ocor_w		bigint;
qt_ocor_pend_fluxo_w	bigint;
ie_barra_finalizacao_w	varchar(1);
qt_glosa_pend_w		bigint;
ie_status_item_w	varchar(5);
ie_tipo_guia_w		pls_conta.ie_tipo_guia%type;

C01 CURSOR(	nr_seq_analise_p	pls_conta.nr_seq_analise%type,
		ie_tipo_guia_p		pls_conta.ie_tipo_guia%type) FOR
		SELECT	a.nr_sequencia
		from	pls_conta a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.ie_tipo_guia		= ie_tipo_guia_p;

BEGIN

if (ie_item_nao_encontrado_p = 'S') then
	ie_status_analise_w	:= 'E';
else
	/* Status da conta */

	if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') and (coalesce(nr_seq_conta_proc_p::text, '') = '') and (coalesce(nr_seq_conta_mat_p::text, '') = '') and (coalesce(nr_seq_proc_partic_p::text, '') = '') then
		/* Se tiver alguma ocorrência que não permite finalizar a análise ou fechar conta é vermelho */

		ie_barra_finalizacao_w	:= pls_obter_se_grupo_fim_analise(nr_seq_analise_p,nr_seq_conta_p, null, null, null, null);

		if (ie_barra_finalizacao_w = 'S') then
			ie_status_analise_w	:= 'E';
		else
			/* Verificar se tem ocorrências que estão pendentes de parecer (Não informativas), se tiver é amarelo */

			if ( ie_informativo_p	= 'N') then

				select	count(1)
				into STRICT	qt_ocor_pend_fluxo_w
				from	pls_ocorrencia b,
					pls_ocorrencia_benef a
				where	a.nr_seq_ocorrencia	= b.nr_sequencia
				and	a.nr_seq_conta		= nr_seq_conta_p
				and (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
				and	coalesce(a.nr_seq_conta_proc::text, '') = ''
				and	coalesce(a.nr_seq_conta_mat::text, '') = ''
				and	coalesce(a.nr_seq_proc_partic::text, '') = ''
				and (b.ie_auditoria_conta = 'S' or coalesce(b.ie_auditoria_conta::text, '') = '')
				and (exists (SELECT	1
						from	pls_analise_glo_ocor_grupo x
						where	x.nr_seq_ocor_benef	= a.nr_sequencia
						and	x.ie_status in ('P', 'G'))or
					not exists (select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_ocor_benef	= a.nr_sequencia));
				/*glosa vinculada a ocorrencia tambem bloqueia*/

				select	count(1)
				into STRICT	qt_glosa_pend_w
				from	pls_conta_glosa a
				where (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
				and	a.nr_seq_conta		= nr_seq_conta_p
				and	coalesce(a.nr_seq_conta_proc::text, '') = ''
				and	coalesce(a.nr_seq_conta_mat::text, '') = ''
				and	coalesce(a.nr_seq_proc_partic::text, '') = ''
				and	not exists (SELECT	1
							from	pls_ocorrencia_benef x
							inner join pls_analise_glo_ocor_grupo y ON (y.nr_seq_ocor_benef = x.nr_sequencia)
							where	x.nr_seq_glosa	= a.nr_sequencia)
				and (exists (	select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_conta_glosa	= a.nr_sequencia
							and	x.ie_status in ('P', 'G')) or
					not exists (select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_conta_glosa	= a.nr_sequencia));


				if (qt_ocor_pend_fluxo_w > 0) or (qt_glosa_pend_w > 0) then
					ie_status_analise_w	:= 'A';
				else
					/* Se não tiver pendentes é verde */

					ie_status_analise_w	:= 'V';
				end if;
			else
				select	max(ie_tipo_guia)
				into STRICT	ie_tipo_guia_w
				from	pls_conta
				where	nr_sequencia	= nr_seq_conta_p;

				for r_C01_w in C01(nr_seq_analise_P,
						    ie_tipo_guia_w) loop
					begin
					ie_barra_finalizacao_w	:= pls_obter_se_grupo_fim_analise(nr_seq_analise_p,r_C01_w.nr_sequencia, null, null, null, null);

					if (ie_barra_finalizacao_w = 'S') and (coalesce(ie_status_analise_w::text, '') = '' ) then
						ie_status_analise_w	:= 'E';
					end if;

					end;
				end loop;

				select	count(1)
				into STRICT	qt_ocor_pend_fluxo_w
				from	pls_ocorrencia b,
					pls_ocorrencia_benef a
				where	a.nr_seq_ocorrencia	= b.nr_sequencia
				and	a.nr_seq_conta		in (	SELECT	x.nr_sequencia
										from	pls_conta	x
										where	x.nr_seq_analise 	= nr_seq_analise_p
										and	x.ie_tipo_guia		= ie_tipo_guia_w
										and	x.ie_status		!= 'C')
				and	coalesce(a.nr_seq_conta_proc::text, '') = ''
				and	coalesce(a.nr_seq_conta_mat::text, '') = ''
				and	coalesce(a.nr_seq_proc_partic::text, '') = ''
				and (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
				and (b.ie_auditoria_conta = 'S' or coalesce(b.ie_auditoria_conta::text, '') = '')
				and (exists (select	1
						from	pls_analise_glo_ocor_grupo x
						where	x.nr_seq_ocor_benef	= a.nr_sequencia
						and	x.ie_status in ('P', 'G'))or
					not exists (select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_ocor_benef	= a.nr_sequencia));
				/*glosa vinculada a ocorrencia tambem bloqueia*/

				select	count(1)
				into STRICT	qt_glosa_pend_w
				from	pls_conta_glosa a
				where (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
				and	a.nr_seq_conta		in (	SELECT	x.nr_sequencia
										from	pls_conta	x
										where	x.nr_seq_analise 	= nr_seq_analise_p
										and	x.ie_tipo_guia		= ie_tipo_guia_w
										and	x.ie_status		!= 'C')
				and	coalesce(a.nr_seq_conta_proc::text, '') = ''
				and	coalesce(a.nr_seq_conta_mat::text, '') = ''
				and	coalesce(a.nr_seq_proc_partic::text, '') = ''
				and	not exists (select	1
							from	pls_ocorrencia_benef x
							inner join pls_analise_glo_ocor_grupo y ON (y.nr_seq_ocor_benef = x.nr_sequencia)
							where	x.nr_seq_glosa	= a.nr_sequencia)
				and (exists (	select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_conta_glosa	= a.nr_sequencia
							and	x.ie_status in ('P', 'G')) or
					not exists (select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_conta_glosa	= a.nr_sequencia));

				if (qt_ocor_pend_fluxo_w > 0) or (qt_glosa_pend_w > 0) then
					ie_status_analise_w	:= 'A';
				else
					/* Se não tiver pendentes é verde */

					ie_status_analise_w	:= 'V';
				end if;

			end if;
		end if;
	/* Status do procedimento */

	elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		/* Se tiver alguma ocorrência que não permite finalizar a análise ou fechar conta é vermelho */

		ie_barra_finalizacao_w	:= pls_obter_se_grupo_fim_analise(nr_seq_analise_p,null, nr_seq_conta_proc_p, null, null, null);

		if (ie_barra_finalizacao_w = 'S') then
			ie_status_analise_w	:= 'E';
		else
			/* Verificar se tem ocorrências que estão pendentes de parecer (Não informativas), se tiver é amarelo */

			if (ie_informativo_p	= 'N') then
				select	max(a.ie_status)
				into STRICT	ie_status_item_w
				from	pls_conta_proc a
				where	a.nr_sequencia	= nr_seq_conta_proc_p;

				if (ie_status_item_w = 'D') then
					ie_status_analise_w	:= 'C';
				else
					select	count(1)
					into STRICT	qt_ocor_pend_fluxo_w
					from	pls_ocorrencia b,
						pls_ocorrencia_benef a
					where	a.nr_seq_ocorrencia	= b.nr_sequencia
					and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
					and (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
					and (b.ie_auditoria_conta = 'S' or coalesce(b.ie_auditoria_conta::text, '') = '')
					and	exists (SELECT	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_ocor_benef	= a.nr_sequencia
							and	x.ie_status = 'P');
					/*glosa vinculada a ocorrencia tambem bloqueia*/

					select	count(1)
					into STRICT	qt_glosa_pend_w
					from	pls_conta_glosa a
					where (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
					and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
					and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
					and	not exists (SELECT	1
								from	pls_ocorrencia_benef x
								inner join pls_analise_glo_ocor_grupo y ON (y.nr_seq_ocor_benef = x.nr_sequencia)
								where	x.nr_seq_glosa	= a.nr_sequencia or
									x.nr_sequencia 	= a.nr_seq_ocorrencia_benef )
					and	not exists (select	1
								from	pls_analise_glo_ocor_grupo x
								where	x.nr_seq_conta_glosa	= a.nr_sequencia)
					and	not exists (select 1
								from	tiss_motivo_glosa x
								where	x.nr_sequencia = a.nr_seq_motivo_glosa
								and	x.cd_motivo_tiss in ('1705','1706'));

					if (qt_ocor_pend_fluxo_w > 0) or (qt_glosa_pend_w > 0) then
						ie_status_analise_w	:= 'A';
					else
						/* Se não tiver pendentes é verde */

						ie_status_analise_w	:= 'V';
					end if;
				end if;
			else

				select	count(1)
				into STRICT	qt_ocor_pend_fluxo_w
				from	pls_ocorrencia b,
					pls_ocorrencia_benef a
				where	a.nr_seq_ocorrencia	= b.nr_sequencia
				and	a.nr_seq_conta_proc	in ( 	SELECT	x.nr_sequencia
									from	pls_conta_proc 	x
									where	((x.nr_seq_agrup_analise = nr_seq_conta_proc_p) or (coalesce(x.nr_seq_agrup_analise::text, '') = '' and x.nr_sequencia = nr_seq_conta_proc_p))
									and	x.ie_status	!= 'D')
				and (b.ie_auditoria_conta = 'S' or coalesce(b.ie_auditoria_conta::text, '') = '')
				and (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
				and	exists (SELECT	1
						from	pls_analise_glo_ocor_grupo x
						where	x.nr_seq_ocor_benef	= a.nr_sequencia
						and	x.ie_status = 'P');
				/*glosa vinculada a ocorrencia tambem bloqueia*/

				select	count(1)
				into STRICT	qt_glosa_pend_w
				from	pls_conta_glosa a
				where (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
				and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
				and	not exists (SELECT	1
								from	pls_ocorrencia_benef x
								inner join pls_analise_glo_ocor_grupo y ON (y.nr_seq_ocor_benef = x.nr_sequencia)
								where	x.nr_seq_glosa	= a.nr_sequencia or
									x.nr_sequencia 	= a.nr_seq_ocorrencia_benef)
				and	a.nr_seq_conta_proc	in ( 	SELECT	x.nr_sequencia
									from	pls_conta_proc 	x
									where	((x.nr_seq_agrup_analise = nr_seq_conta_proc_p) or (coalesce(x.nr_seq_agrup_analise::text, '') = '' and x.nr_sequencia = nr_seq_conta_proc_p))
									and	x.ie_status	!= 'D'
									
union all

									select nr_seq_conta_proc_p )
				and	not exists (select	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_conta_glosa	= a.nr_sequencia)
				and	not exists (select 1
								from	tiss_motivo_glosa x
								where	x.nr_sequencia = a.nr_seq_motivo_glosa
								and	x.cd_motivo_tiss in ('1705','1706'));
				if (qt_ocor_pend_fluxo_w > 0) or (qt_glosa_pend_w > 0) then
					ie_status_analise_w	:= 'A';
				else
					/* Se não tiver pendentes é verde */

					ie_status_analise_w	:= 'V';
				end if;

			end if;
		end if;
	/* Status do material */

	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		/* Se tiver alguma ocorrência que não permite finalizar a análise ou fechar conta é vermelho */

		ie_barra_finalizacao_w	:= pls_obter_se_grupo_fim_analise(nr_seq_analise_p,null, null, nr_seq_conta_mat_p, null, null);

		if (ie_barra_finalizacao_w = 'S') then
			ie_status_analise_w	:= 'E';
		else
			/* Verificar se tem ocorrências que estão pendentes de parecer (Não informativas), se tiver é amarelo */

			if (coalesce(ie_status_analise_w::text, '') = '') then
				select	max(a.ie_status)
				into STRICT	ie_status_item_w
				from	pls_conta_mat a
				where	a.nr_sequencia	= nr_seq_conta_mat_p;

				if (ie_status_item_w = 'D') then
					ie_status_analise_w	:= 'C';
				else
					select	count(1)
					into STRICT	qt_ocor_pend_fluxo_w
					from	pls_ocorrencia b,
						pls_ocorrencia_benef a
					where	a.nr_seq_ocorrencia	= b.nr_sequencia
					and (a.ie_situacao		= 'A' or coalesce(a.ie_situacao::text, '') = '')
					and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
					and (b.ie_auditoria_conta 	= 'S' or coalesce(b.ie_auditoria_conta::text, '') = '')
					and	exists (SELECT	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_ocor_benef	= a.nr_sequencia
							and	x.ie_status = 'P');
					/*glosa vinculada a ocorrencia tambem bloqueia*/

					select	count(1)
					into STRICT	qt_glosa_pend_w
					from	pls_conta_glosa a
					where (a.ie_situacao = 'A' 	or coalesce(a.ie_situacao::text, '') = '')
					and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
					and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
					and	not exists (SELECT	1
								from	pls_ocorrencia_benef x
								inner 	join pls_analise_glo_ocor_grupo y ON (y.nr_seq_ocor_benef = x.nr_sequencia)
								where	x.nr_seq_glosa	= a.nr_sequencia or
									x.nr_sequencia 	= a.nr_seq_ocorrencia_benef )
					and	not exists (select	1
								from	pls_analise_glo_ocor_grupo x
								where	x.nr_seq_conta_glosa	= a.nr_sequencia)
					and	not exists (select	1
								from	pls_analise_glo_ocor_grupo y,
									pls_ocorrencia_benef x
								where	x.nr_sequencia = y.nr_seq_ocor_benef
								and	x.nr_sequencia = a.nr_seq_ocorrencia_benef)
					and	not exists (select 1
								from	tiss_motivo_glosa x
								where	x.nr_sequencia = a.nr_seq_motivo_glosa
								and	x.cd_motivo_tiss in ('1705','1706'));

					if (qt_ocor_pend_fluxo_w > 0) or (qt_glosa_pend_w > 0) then
						ie_status_analise_w	:= 'A';
					else
						/* Se não tiver pendentes é verde */

						ie_status_analise_w	:= 'V';
					end if;
				end if;
			end if;
		end if;
	/* Status do participante */

	elsif (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
		/* Se tiver alguma ocorrência que não permite finalizar a análise ou fechar conta é vermelho */

		ie_barra_finalizacao_w	:= pls_obter_se_grupo_fim_analise(nr_seq_analise_p,null, null, null, nr_seq_proc_partic_p, null);

		if (ie_barra_finalizacao_w = 'S') then
			ie_status_analise_w	:= 'E';
		else
			/* Verificar se tem ocorrências que estão pendentes de parecer (Não informativas), se tiver é amarelo */

			if (coalesce(ie_status_analise_w::text, '') = '') then
				select	max(a.ie_status)
				into STRICT	ie_status_item_w
				from	pls_proc_participante a
				where	a.nr_sequencia	= nr_seq_proc_partic_p;

				if (ie_status_item_w = 'C') then
					ie_status_analise_w	:= ie_status_item_w;
				else

					select	count(1)
					into STRICT	qt_ocor_pend_fluxo_w
					from	pls_ocorrencia b,
						pls_ocorrencia_benef a
					where	a.nr_seq_ocorrencia	= b.nr_sequencia
					and (a.ie_situacao		= 'A' or coalesce(a.ie_situacao::text, '') = '')
					and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
					and (b.ie_auditoria_conta = 'S' or coalesce(b.ie_auditoria_conta::text, '') = '')
					and	exists (SELECT	1
							from	pls_analise_glo_ocor_grupo x
							where	x.nr_seq_ocor_benef	= a.nr_sequencia
							and	x.ie_status = 'P');

					/*glosa vinculada a ocorrencia tambem bloqueia*/

					select	count(1)
					into STRICT	qt_glosa_pend_w
					from	pls_conta_glosa a
					where (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
					and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
					and	not exists (SELECT	1
								from	pls_ocorrencia_benef x
								inner join pls_analise_glo_ocor_grupo y ON (y.nr_seq_ocor_benef = x.nr_sequencia)
								where	x.nr_seq_glosa	= a.nr_sequencia or
									x.nr_sequencia 	= a.nr_seq_ocorrencia_benef)
					and	not exists (select	1
								from	pls_analise_glo_ocor_grupo x
								where	x.nr_seq_conta_glosa	= a.nr_sequencia);

					if (qt_ocor_pend_fluxo_w > 0) or (qt_glosa_pend_w > 0) then
						ie_status_analise_w	:= 'A';
					else
						/* Se não tiver pendentes é verde */

						ie_status_analise_w	:= 'V';
					end if;
				end if;
			end if;
		end if;
	end if;
end if;

return	ie_status_analise_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_status_analise_item ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, ie_item_nao_encontrado_p text, ie_informativo_P w_pls_analise_item.ie_informativo%type) FROM PUBLIC;

