-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_eis_etapa ( nr_interno_conta_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_etapas_p text, ie_todas_etapas_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1);
dt_etapa_w		timestamp;
ie_todas_etapas_w		varchar(15);
dt_final_w		timestamp;
dt_inicial_w		timestamp;

C01 CURSOR FOR
	SELECT	dt_etapa
	from	conta_paciente_etapa
	where	nr_interno_conta = nr_interno_conta_p
	and	obter_se_contido(nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1)
	order by dt_etapa;


BEGIN
ie_todas_etapas_w	 	:= coalesce(ie_todas_etapas_p,'U');
dt_inicial_w		:= dt_inicial_p;
dt_final_w		:= dt_final_p;

if (coalesce(cd_etapas_p::text, '') = '') then
	begin
	Select	coalesce(max('S'),'N')
	into STRICT	ds_retorno_w
	from	conta_paciente_etapa
	where	nr_interno_conta = nr_interno_conta_p
	and 	dt_etapa between dt_inicial_w and dt_final_w;
	--and	((dt_etapa >= dt_inicial_p) and (dt_etapa <= dt_final_p));
	end;
else
	begin
	if (ie_todas_etapas_w = 'U') then
		begin
		open C01;
		loop
		fetch C01 into
			dt_etapa_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			Select	coalesce(max('S'),'N')
			into STRICT	ds_retorno_w
			
			where	dt_etapa_w between dt_inicial_w and dt_final_w;
			end;
		end loop;
		close C01;
		end;
	elsif (ie_todas_etapas_w = 'T') then
		Select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ds_retorno_w
		from	conta_paciente_etapa
		where	nr_interno_conta = nr_interno_conta_p
		and 	dt_etapa between dt_inicial_w and dt_final_w
		and	obter_se_contido(nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1);
	elsif (ie_todas_etapas_w in ('P','O')) then
		begin
		if (ie_todas_etapas_w = 'P') then
			select	min(dt_etapa)
			into STRICT	dt_etapa_w
			from	conta_paciente_etapa
			where	nr_interno_conta = nr_interno_conta_p;
		elsif (ie_todas_etapas_w = 'O') then
			select	min(dt_etapa)
			into STRICT	dt_etapa_w
			from	conta_paciente_etapa
			where	nr_interno_conta = nr_interno_conta_p
			and	obter_se_contido(nr_seq_etapa, substr(cd_etapas_p,2,length(cd_etapas_p))) = substr(cd_etapas_p,1,1);
		end if;

		select	coalesce(max('S'),'N')
		into STRICT	ds_retorno_w
		
		where	dt_etapa_w between dt_inicial_w and dt_final_w;
		end;
	end if;
	end;
end if;

RETURN	ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_eis_etapa ( nr_interno_conta_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_etapas_p text, ie_todas_etapas_p text) FROM PUBLIC;

