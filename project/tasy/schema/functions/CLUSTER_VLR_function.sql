-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cluster_vlr ( nr_seq_reg_template_p bigint, nr_seq_temp_conteudo_p bigint, nr_seq_temp_cluster_p bigint, nr_seq_reg_cluster_p bigint, ds_mascara_p text) RETURNS varchar AS $body$
DECLARE


dt_resultado_w		timestamp;
vl_resultado_w		double precision;
nr_seq_elemento_w		bigint;
ie_cliente_cadastra_w	varchar(10);
ie_componente_w		varchar(10);
ds_sql_w			varchar(4000);
ds_resultado_w		varchar(4000);
ds_resultado_lcb_w		varchar(4000);
ds_resultado_rg_w		varchar(4000);
ds_resultado_cb_w		varchar(4000);
ds_resultado_ehr_elem_w	varchar(4000);

nm_coluna_w		varchar(20);
retorno_C01_w		integer;
ds_comando_C01_w		varchar(255);
C01_w			integer;
ds_C01_w			varchar(4000);
dt_C01_w			timestamp;
vl_C01_w			double precision;

retorno_C02_w		integer;
ds_comando_C02_w		varchar(4000);
C02_w			integer;
cd_C02_w			varchar(255);
vl_C02_w			varchar(255);


BEGIN

if (coalesce(nr_seq_temp_conteudo_p,0) > 0) then
	begin
	select	a.column_name
	into STRICT	nm_coluna_w
	from	user_tab_columns a
	where	a.table_name = 'EHR_CLUSTER_' || nr_seq_temp_cluster_p
	and	a.column_name like '%' || nr_seq_temp_conteudo_p;

	ds_comando_C01_w :=
		' select	' || nm_coluna_w ||
		' from	EHR_CLUSTER_' || nr_seq_temp_cluster_p ||
		' where	nr_seq_reg_template = ' || nr_seq_reg_template_p ||
		' and	nr_registro_cluster = ' || nr_seq_reg_cluster_p;

	C01_w := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C01_w, ds_comando_C01_w, DBMS_SQL.NATIVE);
	
	if (substr(nm_coluna_w,1,3) = 'DS_') then
		DBMS_SQL.DEFINE_COLUMN(C01_w,1,ds_C01_w,4000);
		retorno_C01_w := DBMS_SQL.execute(C01_w);

		while(DBMS_SQL.FETCH_ROWS(C01_w) > 0) loop
			begin
			DBMS_SQL.COLUMN_VALUE(C01_w,1,ds_C01_w);
			end;
		end loop;
	elsif (substr(nm_coluna_w,1,3) = 'DT_') then
		DBMS_SQL.DEFINE_COLUMN(C01_w,1,dt_C01_w);
		retorno_C01_w := DBMS_SQL.execute(C01_w);

		while(DBMS_SQL.FETCH_ROWS(C01_w) > 0) loop
			begin
			DBMS_SQL.COLUMN_VALUE(C01_w,1,dt_C01_w);
			end;
		end loop;
	elsif (substr(nm_coluna_w,1,3) = 'VL_') then
		DBMS_SQL.DEFINE_COLUMN(C01_w,1,vl_C01_w);
		retorno_C01_w := DBMS_SQL.execute(C01_w);

		while(DBMS_SQL.FETCH_ROWS(C01_w) > 0) loop
			begin
			DBMS_SQL.COLUMN_VALUE(C01_w,1,vl_C01_w);
			end;
		end loop;
	end if;

	DBMS_SQL.CLOSE_CURSOR(C01_w);

	select	a.nr_seq_elemento
	into STRICT	nr_seq_elemento_w
	from	ehr_template_conteudo a
	where	a.nr_sequencia = nr_seq_temp_conteudo_p;

	if (coalesce(nr_seq_elemento_w,0) > 0) then
		select	max(ie_cliente_cadastra),
			max(ie_componente),
			max(ds_sql)
		into STRICT	ie_cliente_cadastra_w,
			ie_componente_w,
			ds_sql_w
		from	ehr_elemento
		where	nr_sequencia = nr_seq_elemento_w;
	end if;

	if (ie_cliente_cadastra_w = 'S') then
		begin
		if (coalesce(ds_C01_w::text, '') = '') then
			select	max(ds_resultado)
			into STRICT	ds_C01_w
			from	ehr_reg_elemento
			where	nr_seq_reg_template = nr_seq_reg_template_p
			and	nr_seq_elemento = nr_seq_elemento_w
			and	nr_seq_temp_conteudo = nr_seq_temp_conteudo_p
			and	nr_registro_cluster = nr_seq_reg_cluster_p;
		end if;

		select	max(ds_resultado)
		into STRICT	ds_resultado_w
		from	ehr_template_cont_item
		where	cd_resultado = ds_C01_w
		and	nr_seq_item = nr_seq_temp_conteudo_p;

		if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
			ds_C01_w := ds_resultado_w;
		end if;
		return ds_C01_w;
		end;
	elsif (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'lcb') and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
		begin
		if (ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') then
			ds_comando_C02_w := ds_sql_w;
			C02_w := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C02_w,ds_comando_C02_w,DBMS_SQL.Native);
			DBMS_SQL.DEFINE_COLUMN(C02_w,1,cd_C02_w,255);
			DBMS_SQL.DEFINE_COLUMN(C02_w,2,vl_C02_w,255);
			retorno_C02_w := DBMS_SQL.execute(C02_w);

			while(DBMS_SQL.FETCH_ROWS(C02_w) > 0) loop
				begin
				DBMS_SQL.COLUMN_VALUE(C02_w,1,cd_C02_w);
				DBMS_SQL.COLUMN_VALUE(C02_w,2,vl_C02_w);

				if (cd_C02_w = ds_C01_w) then
					ds_C01_w := vl_C02_w;
				end if;
				end;
			end loop;

			DBMS_SQL.CLOSE_CURSOR(C02_w);
		else
		
			if (ds_C01_w IS NOT NULL AND ds_C01_w::text <> '') then
			
				select	max(ds_resultado)
				into STRICT	ds_resultado_lcb_w
				from	ehr_elemento_result a
				where	nr_seq_elemento = nr_seq_elemento_w
				and		cd_resultado = ds_C01_w;
				
			else
			
				select	max(ds_resultado)
				into STRICT	ds_resultado_ehr_elem_w
				from	ehr_reg_elemento
				where	nr_seq_reg_template = nr_seq_reg_template_p
				and	nr_seq_elemento = nr_seq_elemento_w
				and	nr_seq_temp_conteudo = nr_seq_temp_conteudo_p
				and	nr_registro_cluster = nr_seq_reg_cluster_p;
				
				select	max(ds_resultado)
				into STRICT	ds_resultado_lcb_w
				from	ehr_elemento_result a
				where	nr_seq_elemento = nr_seq_elemento_w
				and	cd_resultado = ds_resultado_ehr_elem_w;
				
			end if;
		end if;

		if (ds_resultado_lcb_w IS NOT NULL AND ds_resultado_lcb_w::text <> '') then
			ds_C01_w := ds_resultado_lcb_w;
		end if;
		end;
	elsif (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'rg') and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
		begin
		select	max(ds_resultado)
		into STRICT	ds_resultado_rg_w
		from	ehr_elemento_result a
		where	nr_seq_elemento = nr_seq_elemento_w
		and	cd_resultado = ds_C01_w;

		if (ds_resultado_rg_w IS NOT NULL AND ds_resultado_rg_w::text <> '') then
			ds_C01_w := ds_resultado_rg_w;
		end if;
		end;
	elsif (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'cb') and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
		begin
		if (ds_C01_w IS NOT NULL AND ds_C01_w::text <> '') then
			Select	CASE WHEN upper(max(ds_C01_w))='S' THEN obter_desc_expressao(719927)  ELSE obter_desc_expressao(327114) END
			into STRICT	ds_resultado_cb_w
			;
		end if;

		if (ds_resultado_cb_w IS NOT NULL AND ds_resultado_cb_w::text <> '') then
			ds_C01_w := ds_resultado_cb_w;
		end if;
		end;
	elsif (ie_cliente_cadastra_w <> 'S') and (ie_componente_w in ('me', 'de')) and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '') then
		begin
		if (coalesce(ds_C01_w::text, '') = '') then
			begin
			select	max(ds_resultado),
				max(vl_resultado)
			into STRICT	ds_C01_w,
				vl_C01_w
			from	ehr_reg_elemento
			where	nr_seq_reg_template = nr_seq_reg_template_p
			and	nr_seq_elemento = nr_seq_elemento_w
			and	nr_seq_temp_conteudo = nr_seq_temp_conteudo_p
			and	nr_registro_cluster = nr_seq_reg_cluster_p;
			end;
		end if;
		end;
	end if;

	if (ds_C01_w IS NOT NULL AND ds_C01_w::text <> '') then
		return ds_C01_w;
	elsif (vl_C01_w IS NOT NULL AND vl_C01_w::text <> '') then
		if (position(',' in vl_C01_w) > 0) then
			return to_char(vl_C01_w,'FM999999999999999999990D9999999999999');
		else
			return vl_C01_w;
		end if;
	elsif (dt_C01_w IS NOT NULL AND dt_C01_w::text <> '') then
		return to_char(dt_C01_w,coalesce(ds_mascara_p,'dd/mm/yyyy hh24:mi:ss'));
	else
		return '';
	end if;
	end;
end if;

return	'';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cluster_vlr ( nr_seq_reg_template_p bigint, nr_seq_temp_conteudo_p bigint, nr_seq_temp_cluster_p bigint, nr_seq_reg_cluster_p bigint, ds_mascara_p text) FROM PUBLIC;

