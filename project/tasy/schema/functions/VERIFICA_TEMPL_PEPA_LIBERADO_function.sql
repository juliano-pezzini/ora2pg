-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verifica_templ_pepa_liberado ( NR_SEQ_TIPO_CONS_PEPA_P ATEND_CONSULTA_PEPA.NR_SEQUENCIA%TYPE, NR_SEQ_TIPO_TEMP_P EHR_TIPO_REG_ITEM.NR_SEQ_TEMPLATE%TYPE, NR_SEQUENCIA_REG_TEMPL_P EHR_REG_TEMPLATE.NR_SEQUENCIA%TYPE ) RETURNS varchar AS $body$
DECLARE

/* 
I = Inativo
L = Liberado
A = Pendente Liberacao
*/
dt_liberacao_w 	timestamp;
dt_inativacao_w	timestamp;
ie_pai_liberado varchar(1);
NR_SEQUENCIA_REG_TEMPL_W	EHR_REG_TEMPLATE.NR_SEQUENCIA%TYPE;
NR_SEQ_REG_TEMPLATE_W 		EHR_REG_TEMPLATE.NR_SEQ_TEMPLATE%TYPE;


BEGIN
	
	select coalesce(max('N'),'S')
	into STRICT ie_pai_liberado
	from ATEND_CONSULTA_PEPA 
	where nr_sequencia = NR_SEQ_TIPO_CONS_PEPA_P 
	and coalesce(DT_LIBERACAO::text, '') = '' 
	and coalesce(DT_INATIVACAO::text, '') = '';
	
	if (ie_pai_liberado = 'N') then
	
		if (coalesce(NR_SEQUENCIA_REG_TEMPL_P::text, '') = '' or NR_SEQUENCIA_REG_TEMPL_P = 0) then
			SELECT coalesce(ehr_obter_reg_template(coalesce(MAX(NR_SEQUENCIA),0), 'R'),0) NR_SEQUENCIA
			INTO STRICT NR_SEQUENCIA_REG_TEMPL_W	
			FROM EHR_REGISTRO
			WHERE NR_SEQ_ATEND_CONS_PEPA = NR_SEQ_TIPO_CONS_PEPA_P
			AND NR_SEQ_TEMPL = NR_SEQ_TIPO_TEMP_P
			AND coalesce(DT_INATIVACAO::text, '') = '';
		else
			NR_SEQUENCIA_REG_TEMPL_W := NR_SEQUENCIA_REG_TEMPL_P;
		end if;
		if (NR_SEQUENCIA_REG_TEMPL_W > 0) then
			select max(dt_liberacao), max(dt_inativacao)
			into STRICT dt_liberacao_w, dt_inativacao_w
			from (	SELECT a.dt_liberacao, a.dt_inativacao
				from EHR_REGISTRO a, EHR_REG_TEMPLATE b
				where b.nr_sequencia = NR_SEQUENCIA_REG_TEMPL_W
				and a.nr_sequencia = b.nr_seq_reg
				and a.NR_SEQ_ATEND_CONS_PEPA = NR_SEQ_TIPO_CONS_PEPA_P
				and a.NR_SEQ_TEMPL =  NR_SEQ_TIPO_TEMP_P
				order by a.dt_atualizacao desc) alias3 LIMIT 1;

			if (dt_inativacao_w IS NOT NULL AND dt_inativacao_w::text <> '') then
				return 'I';
			elsif (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
				return 'L';
			else
				return 'A';
			end if;
		else
			return 'X';
		end if;
	else
		return 'C';
	end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verifica_templ_pepa_liberado ( NR_SEQ_TIPO_CONS_PEPA_P ATEND_CONSULTA_PEPA.NR_SEQUENCIA%TYPE, NR_SEQ_TIPO_TEMP_P EHR_TIPO_REG_ITEM.NR_SEQ_TEMPLATE%TYPE, NR_SEQUENCIA_REG_TEMPL_P EHR_REG_TEMPLATE.NR_SEQUENCIA%TYPE ) FROM PUBLIC;

