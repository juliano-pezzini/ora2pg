-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hd_obter_se_existe_cadastro (ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE


ie_retorno_w	varchar(1);


BEGIN

-- QUANDO ALTERAR ESTA FUNCTION, É NECESSÁRIO VERIFICAR SE NÃO NECESSITA DE ALTERAÇÃO TAMBÉM NO OBJETO 61164
if (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then
	if (ie_opcao_p = 1) then --Acesso
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	hd_pac_renal_cronico a
		where	not exists (SELECT 1
				from hd_acesso b
				where b.cd_pessoa_fisica = a.cd_pessoa_fisica)
		and	exists (select	1
				from	hd_unidade_dialise c
				where	c.nr_sequencia = coalesce(hd_obter_unidade_prc(a.cd_pessoa_fisica,'C'),a.nr_seq_unid_dialise)
				and	c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)
		and	exists (select	1
				from	hd_regra_pendencia_cad x
				where	x.ie_situacao = 'A'
				and	obter_se_paciente_tratamento(a.cd_pessoa_fisica,x.ie_tratamento) = 'S'
				and (exists (select	1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.nm_usuario_pendencia = wheb_usuario_pck.get_nm_usuario)
				or	exists ( select	1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.cd_perfil = obter_perfil_ativo)
				or (not exists (	select 1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia)
				and not exists (	select 1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia))));

	elsif (ie_opcao_p = 2) then --Escala
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	hd_pac_renal_cronico a
		where	not exists (SELECT 1
				from hd_escala_dialise b
				where b.cd_pessoa_fisica = a.cd_pessoa_fisica)
		and	exists (select	1
				from	hd_unidade_dialise c
				where	c.nr_sequencia = coalesce(hd_obter_unidade_prc(a.cd_pessoa_fisica,'C'),a.nr_seq_unid_dialise)
				and	c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)
		and	exists (select	1
				from	hd_regra_pendencia_cad x
				where	x.ie_situacao = 'A'
				and	obter_se_paciente_tratamento(a.cd_pessoa_fisica,x.ie_tratamento) = 'S'
				and (exists (select	1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.nm_usuario_pendencia = wheb_usuario_pck.get_nm_usuario)
				or	exists ( select	1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.cd_perfil = obter_perfil_ativo)
				or (not exists (	select 1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia)
				and not exists (	select 1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia))));

	elsif (ie_opcao_p = 3) then --Profissional
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	hd_pac_renal_cronico a
		where	not exists (SELECT 1
				from hd_profissional_resp b
				where b.cd_pessoa_fisica = a.cd_pessoa_fisica)
		and	exists (select	1
				from	hd_unidade_dialise c
				where	c.nr_sequencia = coalesce(hd_obter_unidade_prc(a.cd_pessoa_fisica,'C'),a.nr_seq_unid_dialise)
				and	c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)
		and	exists (select	1
				from	hd_regra_pendencia_cad x
				where	x.ie_situacao = 'A'
				and	obter_se_paciente_tratamento(a.cd_pessoa_fisica,x.ie_tratamento) = 'S'
				and (exists (select	1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.nm_usuario_pendencia = wheb_usuario_pck.get_nm_usuario)
				or	exists ( select	1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.cd_perfil = obter_perfil_ativo)
				or (not exists (	select 1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia)
				and not exists (	select 1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia))));


	elsif (ie_opcao_p = 4) then --Classificação
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	hd_pac_renal_cronico a
		where	not exists (SELECT 1
				from hd_paciente_classif_sor b
				where b.cd_pessoa_fisica = a.cd_pessoa_fisica)
		and	exists (select	1
				from	hd_unidade_dialise c
				where	c.nr_sequencia = coalesce(hd_obter_unidade_prc(a.cd_pessoa_fisica,'C'),a.nr_seq_unid_dialise)
				and	c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)
		and	exists (select	1
				from	hd_regra_pendencia_cad x
				where	x.ie_situacao = 'A'
				and	obter_se_paciente_tratamento(a.cd_pessoa_fisica,x.ie_tratamento) = 'S'
				and (exists (select	1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.nm_usuario_pendencia = wheb_usuario_pck.get_nm_usuario)
				or	exists ( select	1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia
						and	y.cd_perfil = obter_perfil_ativo)
				or (not exists (	select 1
						from	hd_regra_pendencia_usuario y
						where	y.nr_seq_pendencia = x.nr_sequencia)
				and not exists (	select 1
						from	hd_regra_pendencia_perfil y
						where	y.nr_seq_pendencia = x.nr_sequencia))));

	elsif (ie_opcao_p = 5) then --Tratamento
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	hd_pac_renal_cronico a
		where	not exists (SELECT 1
				from paciente_tratamento b
				where b.cd_pessoa_fisica = a.cd_pessoa_fisica)
		and	exists (select	1
				from	hd_unidade_dialise c
				where	c.nr_sequencia = coalesce(hd_obter_unidade_prc(a.cd_pessoa_fisica,'C'),a.nr_seq_unid_dialise)
				and	c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento);

	elsif (ie_opcao_p = 6) then -- Pendencia Soroteca
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	hd_pac_renal_cronico a
		where	exists (SELECT 	1
				from	tx_receptor x,
					tx_recep_controle_central y
				where	x.nr_sequencia	= y.nr_seq_receptor
				and	x.cd_pessoa_fisica = a.cd_pessoa_fisica
				and	trunc(clock_timestamp()) >= trunc(y.dt_vencimento)
				and	coalesce(dt_coleta::text, '') = '');
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hd_obter_se_existe_cadastro (ie_opcao_p bigint) FROM PUBLIC;

