-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_pessoa_escala_gqa (nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10) := '';
qt_reg_w				bigint;
nr_seq_escala_w			bigint;
nr_sequencia_w			bigint;

cd_estabelecimento_w	smallint;
ie_clinica_w			integer;
ie_tipo_atendimento_w	smallint;
qt_reg_plantao_w		bigint := 0;
nm_usuario_w			varchar(15);
cd_pessoa_usuario_w		varchar(15);


C01 CURSOR FOR
	SELECT	nr_seq_escala
	from	regra_escala_atend
	where	cd_estabelecimento				= coalesce(cd_estabelecimento_w,0)
	and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(ie_clinica, ie_clinica_w)			= ie_clinica_w
	order by 1;


BEGIN

if (nr_atendimento_p > 0 ) then

	Select 	max(cd_estabelecimento),
			max(ie_clinica),
			max(ie_tipo_atendimento)
	into STRICT	cd_estabelecimento_w,
			ie_clinica_w,
			ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;


	select	count(*)
	into STRICT	qt_reg_w
	from 	regra_escala_atend
	where	cd_estabelecimento	= coalesce(cd_estabelecimento_w,0);


	if (qt_reg_w	> 0) then
		begin

		open C01;
		loop
		fetch C01 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			nr_seq_escala_w	:= nr_sequencia_w;
			end;
		end loop;
		close C01;
		end;

		if (coalesce(nr_seq_escala_w, 0) > 0) then

			nm_usuario_w := wheb_usuario_pck.get_nm_usuario;

			if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then

				cd_pessoa_usuario_w := Obter_Pessoa_Fisica_Usuario(nm_usuario_w,'C');

				Select  count(*)
				into STRICT	qt_reg_plantao_w
				from	escala_diaria
				where	nr_seq_escala = nr_seq_escala_w
				and		cd_pessoa_fisica = cd_pessoa_usuario_w
				and		(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')
				and		clock_timestamp() between dt_inicio and dt_fim;

				if (qt_reg_plantao_w = 0) then

					Select  count(*)
					into STRICT	qt_reg_plantao_w
					from	escala_diaria a,
							escala_diaria_adic b
					where	a.nr_seq_escala = nr_seq_escala_w
					and		b.nr_seq_escala_diaria = a.nr_sequencia
					and		a.cd_pessoa_fisica = cd_pessoa_usuario_w
					and		(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
					and		clock_timestamp() between a.dt_inicio and a.dt_fim;

				end if;

			end if;

			if (qt_reg_plantao_w > 0) then

				cd_pessoa_fisica_w := cd_pessoa_usuario_w;

			else

				select	min(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	escala_diaria
				where	nr_seq_escala = nr_seq_escala_w
				and		(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')
				and		clock_timestamp() between dt_inicio and dt_fim;

			end if;

		end if;

	end if;

end if;

return cd_pessoa_fisica_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_pessoa_escala_gqa (nr_atendimento_p bigint) FROM PUBLIC;

