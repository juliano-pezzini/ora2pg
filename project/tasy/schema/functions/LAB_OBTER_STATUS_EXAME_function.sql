-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_obter_status_exame (nr_prescricao_p bigint, nr_seq_prescr_p bigint) RETURNS bigint AS $body$
DECLARE


/*
1	Não Digitado
2	Digitado
3	Aprovado
4	Recoleta
5	Liberado
6	Primeira Digitação
*/
dt_aprovacao_w			timestamp;
dt_liberacao_w  		timestamp;
ie_retorno_w			smallint;
qt_exames_dig_w			integer;
ie_recoleta_w			varchar(1);
ie_imagem_recoleta_w	varchar(1) := 'N';
ie_primeira_digitacao_w varchar(1);


BEGIN

if (wheb_usuario_pck.get_cd_funcao = 722) then
	ie_imagem_recoleta_w := obter_param_usuario(722, 245, obter_perfil_ativo, Wheb_usuario_pck.get_nm_usuario, Wheb_usuario_pck.get_cd_estabelecimento, ie_imagem_recoleta_w);
elsif (wheb_usuario_pck.get_cd_funcao = 723) then
	ie_imagem_recoleta_w := obter_param_usuario(723, 61, obter_perfil_ativo, Wheb_usuario_pck.get_nm_usuario, Wheb_usuario_pck.get_cd_estabelecimento, ie_imagem_recoleta_w);
end if;


select 	max(a.dt_aprovacao),
	max(a.dt_liberacao)
into STRICT	dt_aprovacao_w,
	dt_liberacao_w
from 	exame_lab_result_item a,
	exame_lab_resultado b
where 	a.nr_seq_resultado = b.nr_seq_resultado
and	b.nr_prescricao = nr_prescricao_p
and	a.nr_Seq_prescr = nr_seq_prescr_p
and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

select 	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
into STRICT 	ie_primeira_digitacao_w
from	exame_lab_resultado a,
		exame_lab_result_item b
where 	a.nr_seq_resultado = b.nr_seq_resultado
and		a.nr_prescricao = nr_prescricao_p
and		b.nr_seq_prescr = nr_seq_prescr_p
and		exists (SELECT 1 from exame_lab_result_dig where nr_seq_resultado = b.nr_seq_resultado and nr_seq_prescr = b.nr_seq_prescr);

ie_recoleta_w := obter_se_recoleta(nr_prescricao_p, nr_seq_prescr_p);

ie_retorno_w	:= 1;

if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
	ie_retorno_w := 5;
elsif (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') then
	ie_retorno_w	:= 3;
elsif (ie_primeira_digitacao_w = 'S') then

	--verifica se é a primeira ou a segunda digitação
	select 	CASE WHEN count(*)=0 THEN  'S'  ELSE 'N' END
	into STRICT	ie_primeira_digitacao_w
	from 	exame_lab_resultado a,
			exame_lab_result_item b
	where 	a.nr_seq_resultado = b.nr_seq_resultado
	and		a.nr_prescricao = nr_prescricao_p
	and		b.nr_seq_prescr = nr_seq_prescr_p
	and		(b.nm_usuario_seg_dig IS NOT NULL AND b.nm_usuario_seg_dig::text <> '')
	and ((b.qt_resultado IS NOT NULL AND b.qt_resultado::text <> '')
	or 		(b.ds_resultado IS NOT NULL AND b.ds_resultado::text <> '')
	or 		(b.pr_resultado IS NOT NULL AND b.pr_resultado::text <> ''));


	if (ie_primeira_digitacao_w = 'S') then
		ie_retorno_w := 6;
	else
		ie_retorno_w := 2;
	end if;
else
	select 	count(*)
	into STRICT	qt_exames_dig_w
	from 	exame_lab_result_item a,
		exame_lab_resultado b
	where 	a.nr_seq_resultado = b.nr_seq_resultado
	and	b.nr_prescricao = nr_prescricao_p
	and	a.nr_Seq_prescr = nr_seq_prescr_p
	and	a.ie_status = 1;

	if (qt_exames_dig_w > 0) then
		ie_retorno_w	:= 2;
	else
		ie_retorno_w	:= 1;
	end if;
end if;

if (ie_recoleta_w = 'S') and (ie_imagem_recoleta_w = 'S') and (ie_retorno_w <> 3) and (ie_retorno_w <> 5) then
	ie_retorno_w	:= 4;
end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_obter_status_exame (nr_prescricao_p bigint, nr_seq_prescr_p bigint) FROM PUBLIC;

