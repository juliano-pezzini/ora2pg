-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qt_vidas_bonificacao ( nr_seq_grupo_contrato_p pls_grupo_contrato.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_seq_titular%type, ie_possui_bonificacao_p pls_bonificacao_regra.ie_possui_bonificacao%type, ie_tipo_vidas_contrato_p pls_bonificacao_regra.ie_tipo_vidas_contrato%type, ie_demitido_exonerado_p pls_bonificacao_regra.ie_demitido_exonerado%type, ie_acao_contrato_p pls_segurado.ie_acao_contrato%type, nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type ) RETURNS bigint AS $body$
DECLARE


qt_vidas_w			integer;
qt_vidas_aux_w			integer;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_contrato_principal_w		pls_contrato.nr_contrato_principal%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
nr_seq_grupo_contrato_w		pls_grupo_contrato.nr_sequencia%type;
nr_seq_titular_familia_w	pls_segurado.nr_sequencia%type;
dt_referencia_w			timestamp;

C00 CURSOR FOR
	SELECT	nr_seq_contrato,
		nr_seq_intercambio,
		ie_considerar_contrato,
		dt_contratacao_benef
	from	(
		SELECT	a.nr_sequencia			nr_seq_contrato,
			null				nr_seq_intercambio,
			coalesce(a.ie_considerar_contagem_vidas,'S') ie_considerar_contrato,
			(	select	min(x.dt_contratacao)
				from	pls_segurado x
				where	x.nr_seq_contrato = a.nr_sequencia
				and 	coalesce(x.dt_cancelamento::text, '') = ''
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')) dt_contratacao_benef
		from	pls_contrato a
		where	a.nr_sequencia	= nr_seq_contrato_w
		
union all

		select	null				nr_seq_contrato,
			a.nr_sequencia			nr_seq_intercambio,
			'S'				ie_considerar_contrato,
			(	select	min(x.dt_contratacao)
				from	pls_segurado x
				where	x.nr_seq_intercambio = a.nr_sequencia
				and	coalesce(x.dt_cancelamento::text, '') = ''
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')) dt_contratacao_benef
		from	pls_intercambio a
		where	a.nr_sequencia	= nr_seq_intercambio_w
		
union all

		select	a.nr_sequencia			nr_seq_contrato,
			null				nr_seq_intercambio,
			coalesce(a.ie_considerar_contagem_vidas,'S') ie_considerar_contrato,
			(	select	min(x.dt_contratacao)
				from	pls_segurado x
				where	x.nr_seq_contrato = a.nr_sequencia
				and 	coalesce(x.dt_cancelamento::text, '') = ''
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')) dt_contratacao_benef
		from	pls_contrato a
		where	a.nr_contrato_principal = nr_seq_contrato_w
		and	ie_tipo_vidas_contrato_p = 'G'
		
union all
 	--Grupo de contratos
		select	a.nr_sequencia			nr_seq_contrato,
			null				nr_seq_intercambio,
			coalesce(a.ie_considerar_contagem_vidas,'S') ie_considerar_contrato,
			(	select	min(x.dt_contratacao)
				from	pls_segurado x
				where	x.nr_seq_contrato = a.nr_sequencia
				and 	coalesce(x.dt_cancelamento::text, '') = ''
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')) dt_contratacao_benef			
		from	pls_contrato a,
			pls_contrato_grupo b
		where	a.nr_sequencia	= b.nr_seq_contrato
		and	b.nr_seq_grupo	= nr_seq_grupo_contrato_w
		
union all

		select	null				nr_seq_contrato,
			a.nr_sequencia			nr_seq_intercambio,
			'S'				ie_considerar_contrato,
			(	select	min(x.dt_contratacao)
				from	pls_segurado x
				where	x.nr_seq_intercambio = a.nr_sequencia
				and 	coalesce(x.dt_cancelamento::text, '') = ''
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')) dt_contratacao_benef
		from	pls_intercambio a,
			pls_contrato_grupo b
		where	a.nr_sequencia	= b.nr_seq_intercambio
		and	b.nr_seq_grupo	= nr_seq_grupo_contrato_w
		) alias23
	where	(dt_contratacao_benef IS NOT NULL AND dt_contratacao_benef::text <> '');

BEGIN
qt_vidas_w	:= 0;

if (ie_tipo_vidas_contrato_p = 'F') then
	if (nr_seq_titular_p is  not null) then
		nr_seq_titular_familia_w	:= nr_seq_titular_p;
	else	
		nr_seq_titular_familia_w	:= nr_seq_segurado_p;
	end if;
	
	select	count(1)
	into STRICT	qt_vidas_w
	from	pls_segurado a
	where	a.nr_seq_titular	= nr_seq_titular_familia_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	a.dt_contratacao <= dt_referencia_p
	and 	coalesce(a.dt_cancelamento::text, '') = ''
	and (coalesce(a.dt_rescisao::text, '') = '' or a.dt_rescisao >= dt_referencia_p)
	and (coalesce(ie_acao_contrato_p::text, '') = '' or a.ie_acao_contrato = ie_acao_contrato_p)
	and	((ie_demitido_exonerado_p = 'S') or (ie_demitido_exonerado_p = 'N' and coalesce(a.ie_situacao_trabalhista::text, '') = ''))
	and	((ie_possui_bonificacao_p = 'N') or (exists (	SELECT	count(1)
				from	pls_bonificacao_vinculo x
				where	x.nr_seq_segurado	= a.nr_sequencia
				and	x.nr_seq_bonificacao	= nr_seq_bonificacao_p)));
	
	qt_vidas_w	:= qt_vidas_w + 1; --Considerar o titular
	
else
	if (nr_seq_grupo_contrato_p IS NOT NULL AND nr_seq_grupo_contrato_p::text <> '') and (ie_tipo_vidas_contrato_p = 'G') then
		nr_seq_grupo_contrato_w	:= nr_seq_grupo_contrato_p;
		nr_seq_intercambio_w	:= null;
		nr_seq_contrato_w	:= null;
	else
		nr_seq_grupo_contrato_w	:= null;
		nr_seq_intercambio_w	:= nr_seq_intercambio_p;
		if (ie_tipo_vidas_contrato_p = 'G') then
			select	max(nr_contrato_principal)
			into STRICT	nr_contrato_principal_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_p;
			
			nr_seq_contrato_w	:= coalesce(nr_contrato_principal_w, nr_seq_contrato_p);
		else
			nr_seq_contrato_w	:= nr_seq_contrato_p;
		end if;
	end if;
	
	for r_c00_w in C00 loop
		begin
		
		--Considerar contrato na contagem de vidas - Utilizado para contratos vinculados a um principal
		if (r_C00_w.ie_considerar_contrato = 'S') then
			qt_vidas_aux_w	:= 0;
			if (dt_referencia_p = trunc(r_c00_w.dt_contratacao_benef,'month') or add_months(dt_referencia_p,1) = trunc(r_c00_w.dt_contratacao_benef,'month')) and (dt_referencia_p < r_c00_w.dt_contratacao_benef) then --No mês de contratação/mês seguinte deverá considerar a primeira carga de beneficiários no contrato, quando passar a data truncada (dt_referencia_p)
				dt_referencia_w	:= fim_dia(r_c00_w.dt_contratacao_benef);
			else
				dt_referencia_w	:= fim_dia(dt_referencia_p);
			end if;
			

			if (r_C00_w.nr_seq_contrato IS NOT NULL AND r_C00_w.nr_seq_contrato::text <> '') then
				select	count(1)
				into STRICT	qt_vidas_aux_w
				from	pls_segurado a
				where	a.nr_seq_contrato	= r_C00_w.nr_seq_contrato
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	coalesce(a.dt_cancelamento::text, '') = ''
				and	a.dt_contratacao <= dt_referencia_w
				and (coalesce(a.dt_rescisao::text, '') = '' or a.dt_rescisao >= dt_referencia_w)
				and (coalesce(ie_acao_contrato_p::text, '') = '' or a.ie_acao_contrato = ie_acao_contrato_p)
				and	((ie_demitido_exonerado_p = 'S') or (ie_demitido_exonerado_p = 'N' and coalesce(a.ie_situacao_trabalhista::text, '') = ''))
				and	((ie_possui_bonificacao_p = 'N') or (exists (	SELECT	count(1)
							from	pls_bonificacao_vinculo x
							where	x.nr_seq_segurado	= a.nr_sequencia
							and	x.nr_seq_bonificacao	= nr_seq_bonificacao_p)));
										
							
			elsif (r_C00_w.nr_seq_intercambio IS NOT NULL AND r_C00_w.nr_seq_intercambio::text <> '') then
				select	count(1)
				into STRICT	qt_vidas_aux_w
				from	pls_segurado a
				where	a.nr_seq_intercambio	= r_C00_w.nr_seq_intercambio
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	coalesce(a.dt_cancelamento::text, '') = ''
				and	a.dt_contratacao <= dt_referencia_w
				and (coalesce(a.dt_rescisao::text, '') = '' or a.dt_rescisao >= dt_referencia_w)
				and (coalesce(ie_acao_contrato_p::text, '') = '' or a.ie_acao_contrato = ie_acao_contrato_p)
				and	((ie_demitido_exonerado_p = 'S') or (ie_demitido_exonerado_p = 'N' and coalesce(a.ie_situacao_trabalhista::text, '') = ''))
				and	((ie_possui_bonificacao_p = 'N') or (exists (	SELECT	count(1)
							from	pls_bonificacao_vinculo x
							where	x.nr_seq_segurado	= a.nr_sequencia
							and	x.nr_seq_bonificacao	= nr_seq_bonificacao_p)));
			end if;
			
			qt_vidas_w	:= qt_vidas_w + coalesce(qt_vidas_aux_w,0);
		end if;
		
		end;
	end loop; --C00
end if;

return	coalesce(qt_vidas_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qt_vidas_bonificacao ( nr_seq_grupo_contrato_p pls_grupo_contrato.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_seq_titular%type, ie_possui_bonificacao_p pls_bonificacao_regra.ie_possui_bonificacao%type, ie_tipo_vidas_contrato_p pls_bonificacao_regra.ie_tipo_vidas_contrato%type, ie_demitido_exonerado_p pls_bonificacao_regra.ie_demitido_exonerado%type, ie_acao_contrato_p pls_segurado.ie_acao_contrato%type, nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type ) FROM PUBLIC;

