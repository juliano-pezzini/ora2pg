-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_obter_val_cart ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_seq_conta_p bigint) RETURNS PLS_TIPOS_OCOR_PCK.RET_VALID AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se a conta ou item se encaixam na regra de validação associada
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
TIPO DE RETORNO - Tipo específico de package, retornar sempre todos os campos
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
retorno_w			pls_tipos_ocor_pck.ret_valid;
ie_validade_carteira_w		varchar(3);
nr_seq_validacao_w		bigint;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
cd_usuario_plano_w		pls_segurado_carteira.cd_usuario_plano%type;
dt_validade_carteira_w		timestamp;
dt_atendimento_referencia_w	timestamp;


BEGIN
retorno_w.nr_sequencia		:= null;
retorno_w.ie_aplicavel		:= 'N';
retorno_w.ie_gera_ocorrencia	:= 'N';

if (dados_regra_p.nr_sequencia > 0) and (nr_seq_conta_p > 0) then

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_validacao_w
	from	PLS_OC_CTA_VAL_CARTEIRA a
	where	a.nr_seq_oc_cta_comb	= dados_regra_p.nr_sequencia;

	if (nr_seq_validacao_w IS NOT NULL AND nr_seq_validacao_w::text <> '') then
		select	a.ie_validade_carteira
		into STRICT	ie_validade_carteira_w
		from	PLS_OC_CTA_VAL_CARTEIRA a
		where	a.nr_sequencia	= nr_seq_validacao_w;

		select	a.dt_atendimento_referencia,
			a.nr_seq_segurado,
			pls_obter_carteira_segurado(a.nr_seq_segurado)
		into STRICT	dt_atendimento_referencia_w,
			nr_seq_segurado_w,
			cd_usuario_plano_w
		from	pls_conta a
		where	a.nr_sequencia		= nr_seq_conta_p;

		begin
			select	coalesce(dt_validade_carteira,clock_timestamp())
			into STRICT	dt_validade_carteira_w
			from	pls_segurado_carteira
			where	nr_seq_segurado   = nr_seq_segurado_w
			and	cd_usuario_plano  = cd_usuario_plano_w;
		exception
		when others then
			dt_validade_carteira_w := clock_timestamp();
		end;
	end if;

	/* Verificar se vigenet para gerar */

	if (coalesce(ie_validade_carteira_w,'S') = 'V') then
		if (dt_validade_carteira_w >= coalesce(dt_atendimento_referencia_w,clock_timestamp())) then
			retorno_w.nr_sequencia		:= nr_seq_validacao_w;
			retorno_w.ie_aplicavel		:= 'S';
			retorno_w.ie_gera_ocorrencia	:= 'S';
		end if;
	/* Verificar se vencida para gerar */

	elsif (coalesce(ie_validade_carteira_w,'S') = 'VC') then
		if (dt_validade_carteira_w < coalesce(dt_atendimento_referencia_w,clock_timestamp())) then
			retorno_w.nr_sequencia		:= nr_seq_validacao_w;
			retorno_w.ie_aplicavel		:= 'S';
			retorno_w.ie_gera_ocorrencia	:= 'S';
		end if;
	end if;
end if;

return	retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_obter_val_cart ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_seq_conta_p bigint) FROM PUBLIC;

