-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_vl_bonif_seg_rel517 (nr_seq_segurado_p bigint, dt_inicio_vigencia_p timestamp, dt_fim_vigencia_p timestamp) RETURNS bigint AS $body$
DECLARE

qt_idade_w			bigint;
qt_bonificacao_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
qt_vidas_bonificacao_w		bigint;
qt_vidas_ww			bigint;
qt_vidas_w			bigint;
qt_vidas_trabalhista_w		bigint;
qt_vidas_trabalhista_princ_w	bigint;
nr_seq_desconto_w		bigint;
nr_seq_regra_w			bigint;
nr_contrato_principal_w		bigint;
nr_seq_bonificacao_w		bigint;
nr_seq_vinculo_bonificacao_w	bigint;
tx_bonificacao_w		double precision;
tx_desconto_w			double precision := 0;
vl_mensalidade_w		double precision;
vl_bonific_total_w		double precision := 0;
vl_desconto_w			double precision;
vl_bonificacao_w		double precision;
ie_cooperado_w			varchar(1);
ie_possui_bonificacao_w		varchar(1);
ie_tipo_regra_w			varchar(2);
ie_acao_contrato_w		varchar(2);
ie_tipo_vidas_contrato_w	varchar(2);
cd_pessoa_fisica_w		varchar(10);
ie_demitido_exonerado_w		varchar(10);
ie_situacao_trabalhista_w	varchar(10);

C01 CURSOR FOR
	SELECT	c.ie_tipo_regra,
		coalesce(ie_cooperado,'N'),
		c.ie_acao_contrato,
		coalesce(c.ie_possui_bonificacao,'N'),
		c.ie_tipo_vidas_contrato,
		c.tx_bonificacao,
		c.nr_seq_desconto,
		b.nr_sequencia,
		a.nr_sequencia
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c,
		pls_segurado		d
	where	a.nr_seq_segurado	= nr_seq_segurado_p
	and	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	d.nr_sequencia		= a.nr_seq_segurado
	and	((((d.ie_acao_contrato = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	and (d.nr_seq_parentesco	= c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and	((dt_inicio_vigencia_p >= a.dt_inicio_vigencia and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '')) or (coalesce(a.dt_inicio_vigencia::text, '') = ''))
	and	((dt_fim_vigencia_p < a.dt_fim_vigencia and (a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and	c.ie_tipo_item = '1';

BEGIN

select	count(1)
into STRICT	qt_bonificacao_w
from	pls_bonificacao_vinculo
where	nr_seq_segurado	= nr_seq_segurado_p;

if (qt_bonificacao_w > 0) then

	select	cd_pessoa_fisica,
		nr_seq_contrato,
		nr_seq_intercambio,
		pls_obter_idade_segurado(nr_seq_segurado_p,clock_timestamp(),'A'),
		coalesce(pls_obter_valor_segurado(nr_seq_segurado_p,'VCD'),0)
	into STRICT	cd_pessoa_fisica_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w,
		qt_idade_w,
		vl_mensalidade_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;

	open C01;
	loop
	fetch C01 into
		ie_tipo_regra_w,
		ie_cooperado_w,
		ie_acao_contrato_w,
		ie_possui_bonificacao_w,
		ie_tipo_vidas_contrato_w,
		tx_bonificacao_w,
		nr_seq_desconto_w,
		nr_seq_bonificacao_w,
		nr_seq_vinculo_bonificacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_tipo_regra_w = 'M') then
			select	coalesce(max(vl_bonificacao),vl_bonificacao_w),
				coalesce(max(tx_bonificacao),tx_bonificacao_w)
			into STRICT	vl_bonificacao_w,
				tx_bonificacao_w
			from	pls_bonificacao_vinculo	a,
				pls_bonificacao		b
			where	a.nr_seq_bonificacao		= b.nr_sequencia
			and	a.nr_seq_segurado		= nr_seq_segurado_p
			and	b.ie_alteracao_vinculacao	= 'S'
			and	a.nr_sequencia			= nr_seq_vinculo_bonificacao_w;

			if (vl_mensalidade_w <> 0) then
				if	ie_cooperado_w = 'N' then
					vl_bonific_total_w := vl_bonific_total_w + (((coalesce(tx_bonificacao_w,0)/100) * vl_mensalidade_w) + coalesce(vl_bonificacao_w,0));
				elsif	ie_cooperado_w = 'S' then
					vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_bonificacao_w,0)/100) * vl_mensalidade_w);
				end if;
			end if;
		elsif (ie_tipo_regra_w = 'D') then
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				select	max(nr_contrato_principal)
				into STRICT	nr_contrato_principal_w
				from	pls_contrato
				where	nr_sequencia	= nr_seq_contrato_w;

				if (coalesce(ie_possui_bonificacao_w,'N') = 'S') then
					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_bonificacao_w
						from	pls_contrato		a,
							pls_segurado		b,
							pls_bonificacao_vinculo	c
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	c.nr_seq_segurado	= b.nr_sequencia
						and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_bonificacao_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_bonificacao_w
						from	pls_contrato		a,
							pls_segurado		b,
							pls_bonificacao_vinculo	c
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	c.nr_seq_segurado	= b.nr_sequencia
						and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
						and	((a.nr_sequencia = nr_seq_contrato_w) or (a.nr_contrato_principal = nr_seq_contrato_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;

					qt_vidas_ww	:= qt_vidas_bonificacao_w;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'S') then
					if (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						/* Quantidade de vidas da familia do contrato */

						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_bonificacao_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
					else
						select	count(1)
						into STRICT	qt_vidas_trabalhista_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_w) or (a.nr_contrato_principal = nr_seq_contrato_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

						if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
							select	count(1)
							into STRICT	qt_vidas_trabalhista_princ_w
							from	pls_contrato	a,
								pls_segurado	b
							where	b.nr_seq_contrato	= a.nr_sequencia
							and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
							and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
							and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
							and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));
						end if;
					end if;

					qt_vidas_ww	:= qt_vidas_trabalhista_w + qt_vidas_trabalhista_princ_w;
					qt_vidas_trabalhista_princ_w	:= 0;
				elsif (coalesce(ie_demitido_exonerado_w,'N') = 'N') then
					if (nr_contrato_principal_w IS NOT NULL AND nr_contrato_principal_w::text <> '') and (coalesce(ie_tipo_vidas_contrato_w,'G') = 'G') then
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_contrato_principal_w) or (a.nr_contrato_principal = nr_contrato_principal_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					elsif (coalesce(ie_tipo_vidas_contrato_w,'G') = 'F') then
						select	sum(pls_obter_qt_familia_benef(a.nr_sequencia, a.nr_seq_titular, 'L', clock_timestamp()))
						into STRICT	qt_vidas_bonificacao_w
						from	pls_segurado	a
						where	a.nr_sequencia = nr_seq_segurado_p
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and (coalesce(a.dt_rescisao::text, '') = '' or ((a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '') and coalesce(a.dt_reativacao,a.dt_rescisao) > a.dt_rescisao))
						and	((a.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(a.ie_situacao_trabalhista::text, '') = '';
					else
						select	count(1)
						into STRICT	qt_vidas_w
						from	pls_contrato	a,
							pls_segurado	b
						where	b.nr_seq_contrato	= a.nr_sequencia
						and	((a.nr_sequencia = nr_seq_contrato_w) or (a.nr_contrato_principal = nr_seq_contrato_w))
						and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
						and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
						and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''))
						and	coalesce(b.ie_situacao_trabalhista::text, '') = '';
					end if;
					qt_vidas_ww	:= qt_vidas_w;
				end if;
			elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
				if (coalesce(ie_possui_bonificacao_w,'N') = 'S') then
					select	count(1)
					into STRICT	qt_vidas_bonificacao_w
					from	pls_intercambio		a,
						pls_segurado		b,
						pls_bonificacao_vinculo	c
					where	b.nr_seq_intercambio	= a.nr_sequencia
					and	c.nr_seq_segurado	= b.nr_sequencia
					and	a.nr_sequencia		= nr_seq_intercambio_w
					and	c.nr_seq_bonificacao	= nr_seq_bonificacao_w
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
					and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

					qt_vidas_ww	:= qt_vidas_bonificacao_w;
				else
					select	count(1)
					into STRICT	qt_vidas_w
					from	pls_intercambio	a,
						pls_segurado	b
					where	b.nr_seq_intercambio	= a.nr_sequencia
					and	a.nr_sequencia		= nr_seq_intercambio_w
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and (coalesce(b.dt_rescisao::text, '') = '' or ((b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and coalesce(b.dt_reativacao,b.dt_rescisao) > b.dt_rescisao))
					and	((b.ie_acao_contrato	= ie_acao_contrato_w) or (coalesce(ie_acao_contrato_w::text, '') = ''));

					qt_vidas_ww	:= qt_vidas_w;
				end if;
			end if;

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_ww between coalesce(qt_min_vidas,qt_vidas_ww) and coalesce(qt_max_vidas,qt_vidas_ww);

			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') and
				((ie_demitido_exonerado_w = 'N') and (coalesce(ie_situacao_trabalhista_w::text, '') = '') or (ie_demitido_exonerado_w = 'S')) then

				select	max(tx_desconto),
					max(vl_desconto)
				into STRICT	tx_desconto_w,
					vl_desconto_w
				from	pls_preco_regra
				where	nr_sequencia	= nr_seq_regra_w;
			end if;

			vl_bonific_total_w := vl_bonific_total_w + ((coalesce(tx_desconto_w,0)/100) * vl_mensalidade_w) + coalesce(vl_desconto_w,0);
		end if;
		end;
	end loop;
	close C01;
end if;

return vl_bonific_total_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_vl_bonif_seg_rel517 (nr_seq_segurado_p bigint, dt_inicio_vigencia_p timestamp, dt_fim_vigencia_p timestamp) FROM PUBLIC;

