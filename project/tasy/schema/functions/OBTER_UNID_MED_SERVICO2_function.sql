-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_unid_med_servico2 ( cd_convenio_p bigint, cd_categoria_p text, cd_item_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint, nr_seq_ajuste_proc_p bigint) RETURNS varchar AS $body$
DECLARE


/* ie_classificacao 1-Procedimentos 2-Servicos 3-Diarias */

cd_unidade_medida_w		varchar(30);
ie_classificacao_w		varchar(1);
cd_tabela_servico_w		smallint;
cd_tabela_servico_ajuste_w	bigint;


BEGIN
cd_unidade_medida_w	:= 'Un';

begin
select coalesce(ie_classificacao,'1')
into STRICT	 ie_classificacao_w
from	 procedimento
where	 cd_procedimento	= cd_item_p
and	 ie_origem_proced	= ie_origem_proced_p;
exception
	when others then
	ie_classificacao_w	:= '1';
end;

if (ie_classificacao_w	<> '1') then

	if (coalesce(nr_seq_ajuste_proc_p,0) > 0) then

		select	coalesce(max(cd_tabela_servico), 0)
		into STRICT	cd_tabela_servico_ajuste_w
		from	regra_ajuste_proc
		where 	nr_sequencia		= nr_seq_ajuste_proc_p;

		if (cd_tabela_servico_ajuste_w > 0) then

			BEGIN
			select	coalesce(a.cd_unidade_medida,'Un')
			into STRICT	cd_unidade_medida_w
			from	preco_servico a
			where	a.cd_procedimento	= cd_item_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	a.cd_tabela_servico	= cd_tabela_servico_ajuste_w
			and	a.dt_inicio_vigencia	=
				(SELECT	max(x.dt_inicio_vigencia)
				from	preco_servico x
				where	x.cd_procedimento	= cd_item_p
				and	x.ie_origem_proced	= ie_origem_proced_p
				and	x.cd_estabelecimento	= cd_estabelecimento_p
				and	x.cd_tabela_servico	= cd_tabela_servico_ajuste_w);
			exception
				when others then
				cd_unidade_medida_w	:= 'Un';
			END;

		else

			BEGIN
			select	coalesce(a.cd_unidade_medida,'Un')
			into STRICT	cd_unidade_medida_w
			from	preco_servico a
			where	a.cd_procedimento	= cd_item_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	a.cd_tabela_servico in (SELECT distinct(b.cd_tabela_servico)
					from	convenio_servico b
					where	b.cd_convenio 		= cd_convenio_p
					and	b.cd_categoria		= cd_categoria_p
					and	b.cd_estabelecimento	= cd_estabelecimento_p
					and	b.ie_situacao = 'A')
			and	a.dt_inicio_vigencia	=
				(select	max(x.dt_inicio_vigencia)
				from	preco_servico x
				where	x.cd_procedimento	= cd_item_p
				and	x.ie_origem_proced	= ie_origem_proced_p
				and	x.cd_estabelecimento	= cd_estabelecimento_p
				and	x.cd_tabela_servico	in (select	distinct(y.cd_tabela_servico)
						from	convenio_servico y
						where 	y.cd_convenio 		= cd_convenio_p
						and	y.cd_categoria		= cd_categoria_p
						and	y.cd_estabelecimento	= cd_estabelecimento_p
						and	y.ie_situacao = 'A'));
			exception
				when others then
				cd_unidade_medida_w	:= 'Un';
			END;

		end if;


	else

		BEGIN
		select	coalesce(a.cd_unidade_medida,'Un')
		into STRICT	cd_unidade_medida_w
		from	preco_servico a
		where	a.cd_procedimento	= cd_item_p
		and	a.ie_origem_proced	= ie_origem_proced_p
		and	a.cd_estabelecimento	= cd_estabelecimento_p
		and	a.cd_tabela_servico in (SELECT distinct(b.cd_tabela_servico)
				from	convenio_servico b
				where	b.cd_convenio 		= cd_convenio_p
				and	b.cd_categoria		= cd_categoria_p
				and	b.cd_estabelecimento	= cd_estabelecimento_p
				and	b.ie_situacao = 'A')
		and	a.dt_inicio_vigencia	=
			(select	max(x.dt_inicio_vigencia)
			from	preco_servico x
			where	x.cd_procedimento	= cd_item_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.cd_estabelecimento	= cd_estabelecimento_p
			and	x.cd_tabela_servico	in (select	distinct(y.cd_tabela_servico)
					from	convenio_servico y
					where 	y.cd_convenio 		= cd_convenio_p
					and	y.cd_categoria		= cd_categoria_p
					and	y.cd_estabelecimento	= cd_estabelecimento_p
					and	y.ie_situacao = 'A'));
		exception
			when others then
			cd_unidade_medida_w	:= 'Un';
		END;
	end if;
end if;

RETURN cd_unidade_medida_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_unid_med_servico2 ( cd_convenio_p bigint, cd_categoria_p text, cd_item_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint, nr_seq_ajuste_proc_p bigint) FROM PUBLIC;

