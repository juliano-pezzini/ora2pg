-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_exige_laudo_impresso (nr_seq_propaci_p bigint) RETURNS varchar AS $body$
DECLARE



qt_registro_w			bigint:=0;
cd_area_procedimento_w		area_procedimento.cd_area_procedimento%type;
cd_especialidade_w		especialidade_proc.cd_especialidade%type;
cd_grupo_proc_w			grupo_proc.cd_grupo_proc%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_interno_conta_w		conta_paciente.nr_interno_conta%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
ds_retorno_w			varchar(1):='N';
qt_regra_w			bigint:=0;
ie_exige_laudo_imp_w  varchar(1):='N';


BEGIN
	ie_exige_laudo_imp_w := obter_valor_param_usuario(67, 733, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);

	if (ie_exige_laudo_imp_w = 'S') then
	begin

		select	count(1)
		into STRICT 	qt_registro_w
		from	regra_exige_laudo_imp;

		if (qt_registro_w > 0) then


			begin
				select	cd_procedimento,
					ie_origem_proced,
					coalesce(nr_interno_conta,0)
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w,
					nr_interno_conta_w
				from	procedimento_paciente
				where	nr_sequencia = 	nr_seq_propaci_p;
			exception
			when others then
				cd_procedimento_w:=0;
			end;

			if (nr_interno_conta_w > 0) then

				select	cd_estabelecimento,
					cd_convenio_parametro
				into STRICT	cd_estabelecimento_w,
					cd_convenio_parametro_w
				from	conta_paciente
				where	nr_interno_conta  = nr_interno_conta_w;

			end if;



			if (cd_procedimento_w > 0) and (ie_origem_proced_w > 0) then

				begin
					select	a.cd_area_procedimento,
						b.cd_especialidade,
						c.cd_grupo_proc
					into STRICT	cd_area_procedimento_w,
						cd_especialidade_w,
						cd_grupo_proc_w
					from	area_procedimento a,
						especialidade_proc b,
						grupo_proc c,
						procedimento d
					where	a.cd_area_procedimento = b.cd_area_procedimento
					and	b.cd_especialidade  = c.cd_especialidade
					and	c.cd_grupo_proc = d.cd_grupo_proc
					and	d.cd_procedimento = cd_procedimento_w
					and	d.ie_origem_proced = ie_origem_proced_w;
				exception
				when others then
					cd_area_procedimento_w:=0;
					cd_especialidade_w:=0;
					cd_grupo_proc_w:=0;
				end;

				begin
					select	count(1)
					into STRICT	qt_regra_w
					from	regra_exige_laudo_imp
					where	coalesce(cd_area_procedimento,coalesce(cd_area_procedimento_w,0))	= coalesce(cd_area_procedimento_w,0)
					and     coalesce(cd_especialidade,coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
					and     coalesce(cd_grupo_proc,coalesce(cd_grupo_proc_w,0))		= coalesce(cd_grupo_proc_w,0)
					and     coalesce(cd_procedimento,  coalesce(cd_procedimento_w,0))		= coalesce(cd_procedimento_w,0)
					and     ((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, coalesce(ie_origem_proced_w,0))	= coalesce(ie_origem_proced_w,0)))
					and	cd_convenio = coalesce(cd_convenio_parametro_w,0)
					and	ie_situacao = 'A';
				exception
				when others then
					ds_retorno_w:='N';
				end;

				if (qt_regra_w > 0) then
					ds_retorno_w:='S';
				end if;

			end if;
		end if;
	end;
	end if;

	return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_exige_laudo_impresso (nr_seq_propaci_p bigint) FROM PUBLIC;

