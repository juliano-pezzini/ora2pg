-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_bloqueio_atend_futuro (nr_seq_atend_futuro_p bigint, ie_opcao_bloqueio_p text) RETURNS varchar AS $body$
DECLARE

			 
ie_bloqueia_w	varchar(1) := 'N';
ie_permite_atend_proced_w	varchar(1);
ie_permite_atend_prescricao_w  varchar(1);
ie_permite_atend_laudo_w 	varchar(1);
ie_cancelado_w			varchar(1);
cd_especialidade_w		integer;
vl_condicao_especialidade_w	smallint;

 
			 
	/* 	 
	ie_opcao_bloqueio_p 
 
	PRESCR - Prescrição 
	PROC - Procedimento 
	LAUDO - Laudo SUS 
	*/
		 
 

BEGIN 
 
select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
into STRICT	ie_cancelado_w 
from	ATEND_PAC_FUTURO a 
where	a.nr_sequencia = nr_seq_atend_futuro_p 
and	coalesce(a.dt_cancelamento::text, '') = '';
 
select	max(cd_especialidade) 
into STRICT	cd_especialidade_w 
from	atend_pac_futuro 
where	nr_sequencia = nr_seq_atend_futuro_p;
 
if (ie_cancelado_w = 'N') then 
 
	select	count(*), 
		max(coalesce(ie_permite_atend_proced,'N')), 
		max(coalesce(ie_permite_atend_prescricao,'N')), 
		max(coalesce(ie_permite_atend_laudo,'N')) 
	into STRICT	vl_condicao_especialidade_w, 
		ie_permite_atend_proced_w,         
		ie_permite_atend_prescricao_w, 
		ie_permite_atend_laudo_w		 
	from	atend_futuro_regra 
	where  cd_especialidade = coalesce(cd_especialidade_w,0);
 
 
	if (vl_condicao_especialidade_w = 0) then 
		select	max(coalesce(ie_permite_atend_proced,'N')), 
			max(coalesce(ie_permite_atend_prescricao,'N')), 
			max(coalesce(ie_permite_atend_laudo,'N')) 
		into STRICT	ie_permite_atend_proced_w,         
			ie_permite_atend_prescricao_w, 
			ie_permite_atend_laudo_w 
		from	atend_futuro_regra;
	end if;
	 
 
	if (ie_opcao_bloqueio_p = 'PRESCR') and (ie_permite_atend_prescricao_w = 'N') then 
	 
		select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
		into STRICT	ie_bloqueia_w 
		from	prescr_medica 
		where	nr_seq_atend_futuro = nr_seq_atend_futuro_p;
 
	elsif (ie_opcao_bloqueio_p = 'PROC') and (ie_permite_atend_proced_w = 'N')then 
 
		select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
		into STRICT	ie_bloqueia_w 
		from	atend_pac_proced_previsto 
		where	nr_seq_atend_futuro = nr_seq_atend_futuro_p;
 
	elsif (ie_opcao_bloqueio_p = 'LAUDO') and (ie_permite_atend_laudo_w = 'N') then 
 
		select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
		into STRICT	ie_bloqueia_w 
		from	sus_laudo_paciente 
		where	nr_seq_atend_futuro = nr_seq_atend_futuro_p;
	end if;
	 
end if;
 
return	ie_bloqueia_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_bloqueio_atend_futuro (nr_seq_atend_futuro_p bigint, ie_opcao_bloqueio_p text) FROM PUBLIC;

