-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hc_obter_preco_proc_pad (nr_atendimento_p bigint, nr_seq_profissional_p bigint, qt_util_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

 
cd_procedimento_w	bigint;
cd_material_w		integer;
ie_origem_proced_w	bigint;
vl_retorno_w		double precision := 0;		
vl_proc_w		double precision := 0;

vl_tot_prev_w		double precision := 0;
vl_tot_real_w		double precision := 0;	
dt_final_w		timestamp;
dt_inicial_w		timestamp;
dt_entrada_w		timestamp;	
nr_seq_controle_w	bigint;
nr_atendimento_w	bigint;
qt_equipamento_w	integer;
qt_material_w		double precision;
nr_seq_prof_w		bigint;
qt_procedimento_w	double precision;

 
/* 
VP - Valor dos procedimentos previstos no Controle PAD da home care 
VPT - Valor total dos procedimentos previstos no Controle PAD da home care 
QTR - Quantidade realizada total dos procedimentos 
VTR - Valor total dos procedimentos realizados 
PPR - Percentual da quantidade prevista para a quantidade realizada 
TRG - Tempo realizado gerencial (Inativado feito direto no relatório) 
TRS - Tempo realizado por serviço 
PRG - Percentual da quantidade prevista para a quantaide realizada gerencial (Inativado feito direto no relatório) 
QTRT - Qtd realizada total sem considerear os proc/mat do PAD 
VTRT - Valor total dos procedimentos realizados sem considerar proc/mat do PAd 
*/
	 
			 
C01 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced 
	from	hc_pad_prof_proced 
	where	nr_seq_profissional = nr_seq_profissional_p;
	
C02 CURSOR FOR 
	SELECT	b.dt_final, 
		b.dt_inicial, 
		a.nr_atendimento_origem 
	from	paciente_home_care a, 
		hc_pad_controle b, 
		hc_pad_controle_prof c 
	where	a.nr_sequencia = b.nr_seq_paciente 
	and	b.nr_sequencia = c.nr_seq_controle 
	and	c.nr_seq_profissional = nr_seq_profissional_p;
	
C03 CURSOR FOR 
	SELECT	b.cd_procedimento, 
		b.ie_origem_proced, 
		(SELECT	max((trunc(c.dt_final) - trunc(c.dt_inicial)) + 1) 
		from	hc_pad_controle c 
		where	c.nr_sequencia = nr_seq_controle_w) 
	from	hc_pad_equipamento a, 
		hc_equipamento b 
	where	a.nr_seq_equipamento = b.nr_sequencia 
	and	a.nr_seq_controle = nr_seq_controle_w;
	
C04 CURSOR FOR 
	SELECT	cd_material, 
		coalesce(qt_material,0) 
	from	hc_pad_material 
	where	nr_seq_controle = nr_seq_controle_w;
	
C05 CURSOR FOR 
	SELECT	nr_seq_controle, 
		nr_sequencia 
	from	hc_pad_controle_prof 
	where	nr_seq_profissional = nr_seq_profissional_p;	
	 
C06 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced 
	from	hc_pad_prof_proced 
	where	nr_seq_profissional = nr_seq_prof_w;	
	 
C07 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced, 
		coalesce(sum(qt_procedimento),0) 
	from	procedimento_paciente b, 
		HC_PAD_CONTROLE_PROF c, 
		HC_PAD_CONTROLE d 
	where	1 = 1 
	and	b.nr_atendimento = nr_atendimento_p 
	and	c.nr_sequencia = nr_seq_profissional_p 
	and 	c.nr_seq_controle = d.nr_sequencia 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(DT_FINAL) 
	and	not exists (	SELECT	1 
			from	hc_pad_equipamento a, 
				hc_equipamento e 
			where	a.nr_seq_equipamento = e.nr_sequencia 
			and	e.cd_procedimento = b.cd_procedimento 
			and	e.ie_origem_proced = b.ie_origem_proced 
			and	a.nr_seq_controle = c.nr_seq_controle) 
	group by b.cd_procedimento, b.ie_origem_proced;
	
C08 CURSOR FOR 
	SELECT	coalesce(sum(b.qt_material),0), 
		b.cd_material 
	from	material_atend_paciente b, 
		hc_pad_controle d, 
		hc_pad_controle_prof c 
	where	c.nr_seq_controle = d.nr_sequencia 
	and	b.nr_atendimento = nr_atendimento_p	 
	and	c.nr_sequencia = nr_seq_profissional_p 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_atendimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL) 
	group by b.cd_material;
	
								 

BEGIN 
if (ie_opcao_p <> 'PRG') then 
	select	max(nr_seq_controle) 
	into STRICT	nr_seq_controle_w 
	from	hc_pad_controle_prof 
	where	nr_sequencia = nr_seq_profissional_p;
end if;	
 
if (ie_opcao_p = 'VP') then	 
	 
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
		select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P')),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;		
			 
		end;
	end loop;
	close C01;		
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P')),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;		
		end;
	end loop;
	close C03;
	 
	open C04;
	loop 
	fetch C04 into	 
		cd_material_w, 
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		select	coalesce(max(HC_Obter_Preco_Pad_Mat(cd_material_w)),0) 
		into STRICT	vl_proc_w 
		;
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;		
		end;
	end loop;
	close C04;
elsif (ie_opcao_p = 'VPT') then 
	 
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
		select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P')),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;		
			 
		end;
	end loop;
	 
	select	vl_retorno_w * CASE WHEN qt_util_p=0 THEN 1  ELSE qt_util_p END 	 
	into STRICT	vl_retorno_w 
	;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P')),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		select	vl_proc_w * CASE WHEN qt_equipamento_w=0 THEN 1  ELSE qt_equipamento_w END  
		into STRICT 	vl_proc_w 
		;				
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;		
		end;
	end loop;
	close C03;
	 
	open C04;
	loop 
	fetch C04 into	 
		cd_material_w, 
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		select	coalesce(max(HC_Obter_Preco_Pad_Mat(cd_material_w)),0) 
		into STRICT	vl_proc_w 
		;
		 
		select	vl_proc_w * CASE WHEN qt_material_w=0 THEN 1  ELSE qt_material_w END  
		into STRICT	vl_proc_w 
		;				
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;		
		end;
	end loop;
	close C04;
	 
	--vl_retorno_w := vl_retorno_w * qt_util_p; 
elsif (ie_opcao_p = 'QTR') then 
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		select	coalesce(sum(qt_procedimento),0) 
		into STRICT	vl_proc_w 
		from	procedimento_paciente b 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w 
		and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_prof_proced a,					 
					hc_pad_controle_prof c, 
					hc_pad_controle d, 
					paciente_home_care e 
				where	b.cd_procedimento = a.cd_procedimento				 
				and	b.ie_origem_proced = a.ie_origem_proced 
				and	c.nr_sequencia = a.nr_seq_profissional 
				and	c.nr_seq_controle = d.nr_sequencia 
				and	e.nr_sequencia = d.nr_seq_paciente 
				and	e.nr_atendimento_origem = b.nr_atendimento				 
				and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));						
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C01;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(sum(qt_procedimento),0) 
		into STRICT	vl_proc_w 
		from	procedimento_paciente e 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w 
		and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_equipamento a, 
					hc_equipamento b, 
					paciente_home_care c, 
					hc_pad_controle d 
				where	a.nr_seq_equipamento = b.nr_sequencia 
				and	c.nr_atendimento_origem = e.nr_atendimento 
				and	d.nr_seq_paciente = c.nr_sequencia 
				and	d.nr_sequencia = a.nr_seq_controle 
				and	b.cd_procedimento = e.cd_procedimento 
				and	b.ie_origem_proced = e.ie_origem_proced 
				and 	e.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C03;
	 
	 
	open C04;
	loop 
	fetch C04 into	 
		cd_material_w, 
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		 
		select	coalesce(sum(qt_material),0) 
		into STRICT	vl_proc_w 
		from	material_atend_paciente d 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_material = cd_material_w 
		and	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_material a, 
					paciente_home_care b, 
					hc_pad_controle c 
				where	a.nr_seq_controle = c.nr_sequencia 
				and	c.nr_sequencia = a.nr_seq_controle 
				and	b.nr_atendimento_origem = d.nr_atendimento 
				and	a.cd_material = d.cd_material 
				and	b.nr_sequencia = c.nr_seq_paciente 
				and	d.dt_atendimento between inicio_dia(c.DT_INICIAL) and fim_dia(c.DT_FINAL));
				 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C04;
	 
elsif (ie_opcao_p = 'VTR') then	 
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P') * qt_procedimento),0) 
		into STRICT	vl_proc_w	 
		from	procedimento_paciente b 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w 
		and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_prof_proced a,					 
					hc_pad_controle_prof c, 
					hc_pad_controle d, 
					paciente_home_care e 
				where	b.cd_procedimento = a.cd_procedimento				 
				and	b.ie_origem_proced = a.ie_origem_proced 
				and	c.nr_sequencia = a.nr_seq_profissional 
				and	c.nr_seq_controle = d.nr_sequencia 
				and	e.nr_sequencia = d.nr_seq_paciente 
				and	e.nr_atendimento_origem = b.nr_atendimento				 
				and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
		end;
		 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
	end loop;
	close C01;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(e.nr_atendimento), OBTER_CATEGORIA_ATENDIMENTO(e.nr_atendimento), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P') * qt_procedimento),0) 
		into STRICT	vl_proc_w 
		from	procedimento_paciente e 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w 
		and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_equipamento a, 
					hc_equipamento b, 
					paciente_home_care c, 
					hc_pad_controle d 
				where	a.nr_seq_equipamento = b.nr_sequencia 
				and	c.nr_atendimento_origem = e.nr_atendimento 
				and	d.nr_seq_paciente = c.nr_sequencia 
				and	d.nr_sequencia = a.nr_seq_controle 
				and	b.cd_procedimento = e.cd_procedimento 
				and	b.ie_origem_proced = e.ie_origem_proced 
				and 	e.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C03;
	 
	 
	open C04;
	loop 
	fetch C04 into	 
		cd_material_w, 
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		 
		select	coalesce(sum(obter_preco_material(wheb_usuario_pck.get_cd_estabelecimento,obter_convenio_atendimento( d.nr_atendimento ),obter_categoria_atendimento( d.nr_atendimento ), 
				clock_timestamp(),d.cd_material,0,0,0,null,null,null) * d.qt_material),0) 
		into STRICT	vl_proc_w 
		from	material_atend_paciente d 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_material = cd_material_w 
		and	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_material a, 
					paciente_home_care b, 
					hc_pad_controle c 
				where	a.nr_seq_controle = c.nr_sequencia 
				and	c.nr_sequencia = a.nr_seq_controle 
				and	b.nr_atendimento_origem = d.nr_atendimento 
				and	a.cd_material = d.cd_material 
				and	b.nr_sequencia = c.nr_seq_paciente 
				and	d.dt_atendimento between inicio_dia(c.DT_INICIAL) and fim_dia(c.DT_FINAL));
				 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C04;
 
elsif (ie_opcao_p = 'PPR') then 
	vl_tot_prev_w := 0;
	vl_tot_real_w := 0;
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
		select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P')),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		vl_tot_prev_w := vl_proc_w + vl_tot_prev_w;		
			 
		end;
	end loop;
	close C01;
	 
	select	vl_tot_prev_w * CASE WHEN qt_util_p=0 THEN 1  ELSE qt_util_p END  
	into STRICT 	vl_tot_prev_w 
	;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P')),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		select	vl_proc_w * CASE WHEN qt_equipamento_w=0 THEN 1  ELSE qt_equipamento_w END  
		into STRICT	vl_proc_w 
		;
				 
		 
		vl_tot_prev_w := vl_proc_w + vl_tot_prev_w;		
		end;
	end loop;
	close C03;
	 
	open C04;
	loop 
	fetch C04 into	 
		cd_material_w, 
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		select	coalesce(max(HC_Obter_Preco_Pad_Mat(cd_material_w)),0) 
		into STRICT	vl_proc_w 
		;
		 
		select	vl_proc_w * CASE WHEN qt_material_w=0 THEN 1  ELSE qt_material_w END  
		into STRICT	vl_proc_w 
		;
		 
		vl_tot_prev_w := vl_proc_w + vl_tot_prev_w;		
		end;
	end loop;
	close C04;		
			 
	 
	select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
		clock_timestamp(), b.cd_procedimento, b.ie_origem_proced, 
		0, 0, 0, null, null, null, null, null, null, 'P') * coalesce(qt_procedimento,1)),0) 
	into STRICT	vl_proc_w	 
	from	procedimento_paciente b, 
		hc_pad_controle_prof c, 
		hc_pad_controle d, 
		paciente_home_care e 
	where	c.nr_seq_controle = d.nr_sequencia 
	and	e.nr_sequencia = d.nr_seq_paciente 
	and	e.nr_atendimento_origem = b.nr_atendimento		 
	and	b.nr_atendimento = nr_atendimento_p	 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL) 
	and	not exists (	SELECT	1 
				from	hc_pad_equipamento a, 
					hc_equipamento e 
				where	a.nr_seq_equipamento = e.nr_sequencia 
				and	e.cd_procedimento = b.cd_procedimento 
				and	e.ie_origem_proced = b.ie_origem_proced 
				and	a.nr_seq_controle = c.nr_seq_controle);	
	 
	vl_tot_real_w := vl_proc_w + vl_tot_real_w;		
		 
	 
	select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(c.nr_atendimento), OBTER_CATEGORIA_ATENDIMENTO(c.nr_atendimento), 
		clock_timestamp(), c.cd_procedimento, c.ie_origem_proced, 
		0, 0, 0, null, null, null, null, null, null, 'P') * coalesce(qt_procedimento,1)),0) 
	into STRICT	vl_proc_w 
	from	hc_pad_equipamento a, 
		hc_equipamento b, 
		procedimento_paciente c, 
		hc_pad_controle d, 
		paciente_home_care e 
	where	a.nr_seq_equipamento = b.nr_sequencia	 
	and	c.nr_atendimento = nr_atendimento_p 
	and	b.cd_procedimento = c.cd_procedimento 
	and	b.ie_origem_proced = c.ie_origem_proced 
	and	e.nr_atendimento_origem = c.nr_atendimento 
	and	d.nr_sequencia = a.nr_seq_controle 
	and	e.nr_sequencia = d.nr_seq_paciente 
	and 	coalesce(c.cd_motivo_exc_conta::text, '') = '' 
	and 	c.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL);	
	 
	vl_tot_real_w := vl_proc_w + vl_tot_real_w;
		 
	 
	select	coalesce(sum(obter_preco_material(wheb_usuario_pck.get_cd_estabelecimento,obter_convenio_atendimento( b.nr_atendimento ),obter_categoria_atendimento( b.nr_atendimento ), 
		clock_timestamp(),b.cd_material,0,0,0,null,null,null) * coalesce(b.qt_material,1)),0) 
	into STRICT	vl_proc_w 
	from	material_atend_paciente b, 
		hc_pad_controle d, 
		paciente_home_care e 
	where	e.nr_sequencia = d.nr_seq_paciente 
	and	b.nr_atendimento = nr_atendimento_p 
	and	e.nr_atendimento_origem = b.nr_atendimento 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_atendimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL);
	 
	vl_tot_real_w := vl_proc_w + vl_tot_real_w;
	 
	select (vl_tot_real_w * 100) / CASE WHEN vl_tot_prev_w=0 THEN 1  ELSE vl_tot_prev_w END  
	into STRICT	vl_retorno_w 
	;
	 
elsif (ie_opcao_p = 'TRG') then 
	select	count(distinct(trunc(b.dt_procedimento))) 
	into STRICT	vl_retorno_w 
	from	hc_pad_prof_proced a, 
		procedimento_paciente b, 
		HC_PAD_CONTROLE_PROF c, 
		HC_PAD_CONTROLE d 
	where	a.nr_seq_profissional = nr_seq_profissional_p	 
	and 	c.Nr_Sequencia = a.nr_seq_profissional 
	and 	c.nr_seq_controle = d.nr_sequencia 
	and	b.cd_procedimento = a.cd_procedimento 
	and	b.ie_origem_proced = a.ie_origem_proced 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(DT_FINAL);
	 
elsif (ie_opcao_p = 'TRS') then 
 
	select	count(distinct(trunc(b.dt_procedimento))) 
	into STRICT	vl_retorno_w 
	from	hc_pad_prof_proced a, 
		procedimento_paciente b, 
		HC_PAD_CONTROLE_PROF c, 
		HC_PAD_CONTROLE d 
	where	a.nr_seq_profissional = nr_seq_profissional_p 
	and	b.nr_atendimento = nr_atendimento_p 
	and 	c.Nr_Sequencia = a.nr_seq_profissional 
	and 	c.nr_seq_controle = d.nr_sequencia 
	and	b.cd_procedimento = a.cd_procedimento 
	and	b.ie_origem_proced = a.ie_origem_proced 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(DT_FINAL);		
		 
elsif (ie_opcao_p = 'PRG') then 
	vl_tot_prev_w := 0;
	vl_tot_real_w := 0;			
	 
	open C05;
	loop 
	fetch C05 into	 
		nr_seq_controle_w, 
		nr_seq_prof_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		 
		open C06;
		loop 
		fetch C06 into	 
			cd_procedimento_w, 
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin		 
			select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
				clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
				0, 0, 0, null, null, null, null, null, null, 'P')),0) 
			into STRICT	vl_proc_w		 
			;	
			 
			vl_tot_prev_w := vl_proc_w + vl_tot_prev_w;		
				 
			end;
		end loop;
		close C06;
		 
		vl_tot_prev_w := vl_tot_prev_w * qt_util_p;
		 
		 
		open C03;
		loop 
		fetch C03 into	 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			qt_equipamento_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			select	coalesce(max(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
				clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
				0, 0, 0, null, null, null, null, null, null, 'P')),0) 
			into STRICT	vl_proc_w		 
			;	
			 
			vl_proc_w := vl_proc_w * qt_util_p;
			 
			vl_tot_prev_w := vl_proc_w + vl_tot_prev_w;		
			end;
		end loop;
		close C03;
		 
		open C04;
		loop 
		fetch C04 into	 
			cd_material_w, 
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			select	coalesce(max(obter_preco_material(wheb_usuario_pck.get_cd_estabelecimento,obter_convenio_atendimento( nr_atendimento_p ),obter_categoria_atendimento( nr_atendimento_p ), 
					clock_timestamp(),cd_material_w,0,0,0,null,null,null)),0) 
			into STRICT	vl_proc_w 
			;
			 
			vl_proc_w := vl_proc_w * qt_material_w;
			 
			vl_tot_prev_w := vl_proc_w + vl_tot_prev_w;		
			end;
		end loop;
		close C04;		
		 
		--vl_tot_prev_w := vl_tot_prev_w * qt_util_p;	 
 
		 
		open C06;
		loop 
		fetch C06 into	 
			cd_procedimento_w, 
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
				clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
				0, 0, 0, null, null, null, null, null, null, 'P') * qt_procedimento),0) 
			into STRICT	vl_proc_w	 
			from	procedimento_paciente b 
			where	nr_atendimento = nr_atendimento_p 
			and	cd_procedimento = cd_procedimento_w 
			and	ie_origem_proced = ie_origem_proced_w 
			and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
			and	exists (SELECT	1 
					from	hc_pad_prof_proced a,					 
						hc_pad_controle_prof c, 
						hc_pad_controle d, 
						paciente_home_care e 
					where	b.cd_procedimento = a.cd_procedimento				 
					and	b.ie_origem_proced = a.ie_origem_proced 
					and	c.nr_sequencia = a.nr_seq_profissional 
					and	c.nr_seq_controle = d.nr_sequencia 
					and	e.nr_sequencia = d.nr_seq_paciente 
					and	e.nr_atendimento_origem = b.nr_atendimento				 
					and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
			end;
			 
			vl_tot_real_w := vl_proc_w + vl_tot_real_w;		
		end loop;
		close C06;
 
		 
		open C03;
		loop 
		fetch C03 into	 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			qt_equipamento_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(e.nr_atendimento), OBTER_CATEGORIA_ATENDIMENTO(e.nr_atendimento), 
				clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
				0, 0, 0, null, null, null, null, null, null, 'P') * qt_procedimento),0) 
			into STRICT	vl_proc_w 
			from	procedimento_paciente e 
			where	nr_atendimento = nr_atendimento_p 
			and	cd_procedimento = cd_procedimento_w 
			and	ie_origem_proced = ie_origem_proced_w 
			and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
			and	exists (SELECT	1 
					from	hc_pad_equipamento a, 
						hc_equipamento b, 
						paciente_home_care c, 
						hc_pad_controle d 
					where	a.nr_seq_equipamento = b.nr_sequencia 
					and	c.nr_atendimento_origem = e.nr_atendimento 
					and	d.nr_seq_paciente = c.nr_sequencia 
					and	d.nr_sequencia = a.nr_seq_controle 
					and	b.cd_procedimento = e.cd_procedimento 
					and	b.ie_origem_proced = e.ie_origem_proced 
					and 	e.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
 
			vl_tot_real_w := vl_proc_w + vl_tot_real_w;
			 
			end;
		end loop;
		close C03;
		 
		 
		open C04;
		loop 
		fetch C04 into	 
			cd_material_w, 
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			 
			select	coalesce(sum(obter_preco_material(wheb_usuario_pck.get_cd_estabelecimento,obter_convenio_atendimento( d.nr_atendimento ),obter_categoria_atendimento( d.nr_atendimento ), 
					clock_timestamp(),d.cd_material,0,0,0,null,null,null) * d.qt_material),0) 
			into STRICT	vl_proc_w 
			from	material_atend_paciente d 
			where	nr_atendimento = nr_atendimento_p 
			and	cd_material = cd_material_w 
			and	coalesce(cd_motivo_exc_conta::text, '') = '' 
			and	exists (SELECT	1 
					from	hc_pad_material a, 
						paciente_home_care b, 
						hc_pad_controle c 
					where	a.nr_seq_controle = c.nr_sequencia 
					and	c.nr_sequencia = a.nr_seq_controle 
					and	b.nr_atendimento_origem = d.nr_atendimento 
					and	a.cd_material = d.cd_material 
					and	b.nr_sequencia = c.nr_seq_paciente 
					and	d.dt_atendimento between inicio_dia(c.DT_INICIAL) and fim_dia(c.DT_FINAL));
					 
			vl_tot_real_w := vl_proc_w + vl_tot_real_w;
			 
			end;
		end loop;
		close C04;
								 
		end;
	end loop;
	close C05;
	select (vl_tot_real_w * 100) / CASE WHEN vl_tot_prev_w=0 THEN 1  ELSE vl_tot_prev_w END  
	into STRICT	vl_retorno_w 
	;	
	 
elsif (ie_opcao_p = 'QTRT') then 
	select	coalesce(sum(b.qt_procedimento),0) 
	into STRICT	vl_proc_w 
	from	procedimento_paciente b, 
		HC_PAD_CONTROLE_PROF c, 
		HC_PAD_CONTROLE d 
	where	1 = 1 
	and	b.nr_atendimento = nr_atendimento_p 
	and	c.nr_sequencia = nr_seq_profissional_p 
	and 	c.nr_seq_controle = d.nr_sequencia 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL) 
	and	not exists (	SELECT	1 
			from	hc_pad_equipamento a, 
				hc_equipamento e 
			where	a.nr_seq_equipamento = e.nr_sequencia 
			and	e.cd_procedimento = b.cd_procedimento 
			and	e.ie_origem_proced = b.ie_origem_proced 
			and	a.nr_seq_controle = c.nr_seq_controle);
	 
	vl_retorno_w := vl_proc_w;
	 
	select	coalesce(sum(b.qt_material),0) 
	into STRICT	vl_proc_w 
	from	material_atend_paciente b, 
		hc_pad_controle d, 
		hc_pad_controle_prof c 
	where	c.nr_seq_controle = d.nr_sequencia 
	and	b.nr_atendimento = nr_atendimento_p	 
	and	c.nr_sequencia = nr_seq_profissional_p 
	and 	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and 	b.dt_atendimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL);
 
	vl_retorno_w := vl_retorno_w + vl_proc_w;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(sum(qt_procedimento),0) 
		into STRICT	vl_proc_w 
		from	procedimento_paciente e 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w 
		and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_equipamento a, 
					hc_equipamento b, 
					paciente_home_care c, 
					hc_pad_controle d 
				where	a.nr_seq_equipamento = b.nr_sequencia 
				and	c.nr_atendimento_origem = e.nr_atendimento 
				and	d.nr_seq_paciente = c.nr_sequencia 
				and	d.nr_sequencia = a.nr_seq_controle 
				and	b.cd_procedimento = e.cd_procedimento 
				and	b.ie_origem_proced = e.ie_origem_proced 
				and 	e.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C03;	
	 
elsif (ie_opcao_p = 'VTRT') then 
	vl_retorno_w := 0;
	open C07;
	loop 
	fetch C07 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin 
		select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p), OBTER_CATEGORIA_ATENDIMENTO(nr_atendimento_p), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P') * qt_procedimento_w),0)	 
		into STRICT	vl_proc_w 
		;	
 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		end;
	end loop;
	close C07;
	 
	open C08;
	loop 
	fetch C08 into	 
		qt_procedimento_w, 
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin 
		select	coalesce(sum(obter_preco_material(wheb_usuario_pck.get_cd_estabelecimento,obter_convenio_atendimento( nr_atendimento_p ),obter_categoria_atendimento( nr_atendimento_p ), 
			clock_timestamp(),cd_material_w,0,0,0,null,null,null) * qt_procedimento_w),0) 
		into STRICT	vl_proc_w		 
		;	
		 
		vl_retorno_w := vl_retorno_w + vl_proc_w;
		end;
	end loop;
	close C08;
	 
	open C03;
	loop 
	fetch C03 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		select	coalesce(sum(obter_preco_procedimento(wheb_usuario_pck.get_cd_estabelecimento, OBTER_CONVENIO_ATENDIMENTO(e.nr_atendimento), OBTER_CATEGORIA_ATENDIMENTO(e.nr_atendimento), 
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, 
			0, 0, 0, null, null, null, null, null, null, 'P') * qt_procedimento),0) 
		into STRICT	vl_proc_w 
		from	procedimento_paciente e 
		where	nr_atendimento = nr_atendimento_p 
		and	cd_procedimento = cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w 
		and 	coalesce(cd_motivo_exc_conta::text, '') = '' 
		and	exists (SELECT	1 
				from	hc_pad_equipamento a, 
					hc_equipamento b, 
					paciente_home_care c, 
					hc_pad_controle d 
				where	a.nr_seq_equipamento = b.nr_sequencia 
				and	c.nr_atendimento_origem = e.nr_atendimento 
				and	d.nr_seq_paciente = c.nr_sequencia 
				and	d.nr_sequencia = a.nr_seq_controle 
				and	b.cd_procedimento = e.cd_procedimento 
				and	b.ie_origem_proced = e.ie_origem_proced 
				and 	e.dt_procedimento between inicio_dia(d.DT_INICIAL) and fim_dia(d.DT_FINAL));
 
		vl_retorno_w := vl_proc_w + vl_retorno_w;
		 
		end;
	end loop;
	close C03;
end if;
 
return	vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hc_obter_preco_proc_pad (nr_atendimento_p bigint, nr_seq_profissional_p bigint, qt_util_p bigint, ie_opcao_p text) FROM PUBLIC;

