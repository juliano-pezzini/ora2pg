-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obtain_drg_version (nr_atendimento_p bigint ,nr_seq_episodio_paciente_p bigint) RETURNS varchar AS $body$
DECLARE


  cd_version_w ORIGIN_VERSION_RULE.cd_version%type;

  cd_health_fund_w ORIGIN_VERSION_RULE.cd_health_fund%type;

  nr_atendimento_w atendimento_paciente.nr_atendimento%type;

  cd_convenio_w ATEND_CATEGORIA_CONVENIO.CD_CONVENIO%type;

  ie_health_fund_type_w origin_version_rule.ie_health_fund_type%type;

  ds_uso_case_w varchar(1);

  ds_retorno_w	varchar(20);

  qt_existe_w	bigint;


BEGIN

  ds_uso_case_w := OBTER_USO_CASE(wheb_usuario_pck.get_nm_usuario);

  /* If value is 'N' then the input is case number
  If value is 'S' then input is encounter number */
  
  if (ds_uso_case_w = 'N') then 
    if (nr_seq_episodio_paciente_p IS NOT NULL AND nr_seq_episodio_paciente_p::text <> '') then
    
      select max(b.nr_atendimento) 
      into STRICT nr_atendimento_w 
      from EPISODIO_PACIENTE a,atendimento_paciente b 
      where b.nr_seq_episodio = a.NR_SEQUENCIA and a.NR_SEQUENCIA = nr_seq_episodio_paciente_p 
;
      else
        nr_atendimento_w := nr_atendimento_p;
    end if;

  end if;



  if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

    select max(c.CD_CONVENIO)

    into STRICT cd_convenio_w

    from ATEND_CATEGORIA_CONVENIO c, ATENDIMENTO_PACIENTE b

    where c.NR_ATENDIMENTO = b.NR_ATENDIMENTO

    and b.NR_ATENDIMENTO = nr_atendimento_w;

    ie_health_fund_type_w := obter_tipo_convenio_atend(nr_atendimento_w);

  end if;



  if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
  -- check for validity
	begin

	select	max(x.cd_version)
	into STRICT  	cd_version_w
	from 	origin_version_rule x 
	where   x.ie_origem_proced = 15
	and 	x.cd_health_fund = cd_convenio_w
	and	clock_timestamp() between coalesce(x.dt_start,clock_timestamp()) and coalesce(x.dt_end,clock_timestamp());

	if (coalesce(cd_version_w::text, '') = '') then
		begin

		select	max(x.cd_version)
		into STRICT  	cd_version_w
		from 	origin_version_rule x
		where   x.ie_origem_proced = 15
		and     x.ie_health_fund_type = ie_health_fund_type_w
		and	clock_timestamp() between coalesce(x.dt_start,clock_timestamp()) and coalesce(x.dt_end,clock_timestamp());

		end;
	end if;

	if (coalesce(cd_version_w::text, '') = '') then
		select	max(x.cd_version)
		into STRICT  	cd_version_w
		from 	origin_version_rule x
		where   x.ie_origem_proced = 15
		and     coalesce(x.cd_health_fund::text, '') = ''
		and     coalesce(x.ie_health_fund_type::text, '') = ''
		and	clock_timestamp() between coalesce(x.dt_start,clock_timestamp()) and coalesce(x.dt_end,clock_timestamp());
	
	end if;
	
	end;
  end if;

  ds_retorno_w := cd_version_w;

  return ds_retorno_w;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obtain_drg_version (nr_atendimento_p bigint ,nr_seq_episodio_paciente_p bigint) FROM PUBLIC;

