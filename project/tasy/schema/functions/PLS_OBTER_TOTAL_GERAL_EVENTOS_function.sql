-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_total_geral_eventos ( nr_seq_tipo_ocorrencia_p text, nr_seq_operador_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_atendimento_p text, nr_seq_evento_p text, ie_tipo_pessoa_p text, cd_setor_atendimento_p text, ie_status_p text, nr_seq_agente_motivador_p text, nr_seq_grupo_atend_p text) RETURNS bigint AS $body$
DECLARE


nr_seq_operador_w		bigint;
nr_seq_tipo_ocorrencia_w	bigint;
qt_eventos_w			bigint	:= 0;
qt_tot_geral_w			bigint	:= 0;
nr_seq_evento_w			bigint;
ie_tipo_atendimento_w		varchar(2);
ie_tipo_atendimento_ww		varchar(2);

C01 CURSOR FOR
	SELECT	distinct(a.nr_seq_operador),
		b.nr_seq_tipo_ocorrencia,
		a.ie_tipo_atendimento
	from	pessoa_fisica  				d,
		pls_operador   				c,
		pls_atendimento_evento			b,
		pls_atendimento				a
	where	b.nr_seq_atendimento			= a.nr_sequencia
	and	a.nr_seq_operador			= c.nr_sequencia
	and	c.cd_pessoa_fisica			= d.cd_pessoa_fisica
	and	((a.ie_tipo_atendimento			= ie_tipo_atendimento_p) 	  or (ie_tipo_atendimento_p		= '0'))
	and	((b.nr_seq_tipo_ocorrencia		= (nr_seq_tipo_ocorrencia_p)::numeric )	or ((nr_seq_tipo_ocorrencia_p)::numeric 		= 0))
	and	a.nr_seq_operador			= CASE WHEN (nr_seq_operador_p)::numeric =0 THEN a.nr_seq_operador  ELSE (nr_seq_operador_p)::numeric  END
	and	trunc(a.dt_fim_atendimento)		between trunc(dt_inicio_p)		and fim_dia(dt_fim_p)
	and	((a.ie_tipo_pessoa			= ie_tipo_pessoa_p)		  	or (ie_tipo_pessoa_p				= '0'))
	and	((a.cd_setor_atendimento		= (cd_setor_atendimento_p)::numeric )	or ((cd_setor_atendimento_p)::numeric 		= 0))
	and	((a.ie_status				= ie_status_p)		  		or (ie_status_p					= '0'))
	and	((b.nr_seq_evento			= (nr_seq_evento_p)::numeric )		or ((nr_seq_evento_p)::numeric 			= 0))
	and	((a.nr_seq_agente_motivador		= (nr_seq_agente_motivador_p)::numeric ) or ((nr_seq_agente_motivador_p)::numeric 	= 0))
	and	((c.nr_seq_grupo_atend			= (nr_seq_grupo_atend_p)::numeric )	or ((nr_seq_grupo_atend_p)::numeric 		= 0))
	group by	a.ie_tipo_atendimento,
			b.nr_seq_tipo_ocorrencia,
			a.nr_seq_operador;

C02 CURSOR FOR
	SELECT	distinct(d.nr_seq_evento),
		a.ie_tipo_atendimento
	from	pls_atendimento_evento			d,
		pls_evento_ocorrencia 			c,
		pls_tipo_ocorrencia	  		b,
		pls_atendimento				a
	where	d.nr_seq_evento				= c.nr_sequencia
	and	d.nr_seq_tipo_ocorrencia		= b.nr_sequencia
	and	d.nr_seq_atendimento			= a.nr_sequencia
	and	((a.ie_tipo_atendimento			= ie_tipo_atendimento_w) 	  or (ie_tipo_atendimento_w		= '0'))
	and	d.nr_seq_tipo_ocorrencia		= nr_seq_tipo_ocorrencia_w
	and	a.nr_seq_operador			= nr_seq_operador_w
	and	trunc(a.dt_fim_atendimento)		between trunc(dt_inicio_p)		and fim_dia(dt_fim_p)
	and	((d.nr_seq_evento			= (nr_seq_evento_p)::numeric )	or ((nr_seq_evento_p)::numeric 	= 0))
	group by	a.ie_tipo_atendimento,
			d.nr_seq_evento;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_operador_w,
	nr_seq_tipo_ocorrencia_w,
	ie_tipo_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	open C02;
	loop
	fetch C02 into
		nr_seq_evento_w,
		ie_tipo_atendimento_ww;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	coalesce(sum(count(*)),0)
		into STRICT	qt_eventos_w
		from	pls_atendimento_evento		b,
			pls_atendimento			a
		where	b.nr_seq_atendimento		= a.nr_sequencia
		and	((a.ie_tipo_atendimento		= ie_tipo_atendimento_w) 	  or (ie_tipo_atendimento_w		= '0'))
		and	b.nr_seq_tipo_ocorrencia	= nr_seq_tipo_ocorrencia_w
		and	a.nr_seq_operador		= nr_seq_operador_w
		and	trunc(a.dt_fim_atendimento)	between trunc(dt_inicio_p)	and fim_dia(dt_fim_p)
		and	b.nr_seq_evento			= nr_seq_evento_w
		and	((a.ie_tipo_pessoa		= ie_tipo_pessoa_p)			or (ie_tipo_pessoa_p = '0'))
		and	((a.nr_seq_agente_motivador	= (nr_seq_agente_motivador_p)::numeric )	or ((nr_seq_agente_motivador_p)::numeric 	= 0))
		and	((a.cd_setor_atendimento	= (cd_setor_atendimento_p)::numeric )	or ((cd_setor_atendimento_p)::numeric 	= 0))
		and	((a.ie_status			= ie_status_p)		 		or (ie_status_p		= '0'))
		group by	a.ie_tipo_atendimento,
			b.nr_seq_tipo_ocorrencia,
			a.nr_seq_operador;

		qt_tot_geral_w	:= qt_tot_geral_w + qt_eventos_w;

		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

return	qt_tot_geral_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_total_geral_eventos ( nr_seq_tipo_ocorrencia_p text, nr_seq_operador_p text, dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_atendimento_p text, nr_seq_evento_p text, ie_tipo_pessoa_p text, cd_setor_atendimento_p text, ie_status_p text, nr_seq_agente_motivador_p text, nr_seq_grupo_atend_p text) FROM PUBLIC;

