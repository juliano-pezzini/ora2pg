-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_obter_se_regra_proced_evt ( nr_seq_evento_p bigint, nr_prescricao_p bigint, nr_seq_exame_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1);
ie_existe_regra_w	varchar(1);


BEGIN
ds_retorno_w := 'S';

select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT 	ie_existe_regra_w
from	regra_envio_sms_proc a,
		regra_envio_sms b
where   a.nr_seq_regra = b.nr_sequencia
and 	b.nr_seq_evento = nr_seq_evento_p
and		coalesce(b.ie_situacao,'A') = 'A';

if (ie_existe_regra_w = 'S')  then

	if (coalesce(nr_seq_exame_p::text, '') = '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ds_retorno_w
		from	regra_envio_sms_proc a,
				prescr_procedimento b,
				regra_envio_sms c
		where	a.nr_seq_regra = c.nr_sequencia
		and		b.nr_prescricao = nr_prescricao_p
		and		c.nr_seq_evento = nr_seq_evento_p
		and		coalesce(a.nr_seq_proc_interno,coalesce(b.nr_seq_proc_interno,0))	= coalesce(b.nr_seq_proc_interno,0)
		and		coalesce(a.cd_procedimento,coalesce(b.cd_procedimento,0))			= coalesce(b.cd_procedimento,0)
		and		coalesce(a.ie_origem_proced,coalesce(b.ie_origem_proced,0))		= coalesce(b.ie_origem_proced,0)
		and		coalesce(a.nr_seq_exame,coalesce(b.nr_seq_exame,0))				= coalesce(b.nr_seq_exame,0)
		and		obter_se_proc_grupo_env( b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.nr_seq_exame,a.nr_seq_grupo) = 'S';

	else

		select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ds_retorno_w
		from	regra_envio_sms_proc a,
				regra_envio_sms b
		where   a.nr_seq_regra = b.nr_sequencia
		and 	b.nr_seq_evento = nr_seq_evento_p
		and		coalesce(b.ie_situacao,'A') = 'A'
		and		((exists (SELECT 1
					   from exame_laboratorio c
					   where c.nr_seq_exame = nr_seq_exame_p
					   and a.cd_procedimento = c.cd_procedimento
					   and coalesce(a.ie_origem_proced,1) = c.ie_origem_proced))
		or (exists (select 1
					   from exame_laboratorio c
					   where c.nr_seq_exame = nr_seq_exame_p
					   and a.nr_seq_proc_interno = c.nr_seq_proc_interno))
		or (a.nr_seq_exame = nr_seq_exame_p)
		or		 ((a.nr_seq_grupo IS NOT NULL AND a.nr_seq_grupo::text <> '') and (obter_se_proc_grupo_env( null,null,null,nr_seq_exame_p,a.nr_seq_grupo) = 'S')));

	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_obter_se_regra_proced_evt ( nr_seq_evento_p bigint, nr_prescricao_p bigint, nr_seq_exame_p bigint) FROM PUBLIC;

