-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_total_hr_hemodilysis ( nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp) RETURNS bigint AS $body$
DECLARE

  ie_evento_w        varchar(15);
  ie_somar_w         varchar(1);
  qt_minutos_w       bigint := 0;
  qt_minutos_final_w bigint := 0;
  dt_evento_w        timestamp;
  dt_inicio_w        timestamp;
  nr_seq_solucao_w   bigint;
  nr_prescricao_w    bigint;

  c01 CURSOR FOR
    SELECT c.nr_seq_solucao, a.nr_prescricao 
    FROM hd_prescricao a,
      prescr_solucao c,
      prescr_medica d
    WHERE d.nr_atendimento = nr_atendimento_p
    AND a.nr_prescricao    = d.nr_prescricao
    AND a.nr_sequencia     = c.nr_seq_dialise
    AND c.nr_prescricao    = d.nr_prescricao;

  c02 CURSOR(nr_seq_solucao_p bigint, nr_prescricao_p bigint)
  FOR
    SELECT b.dt_evento,
      b.ie_evento
    FROM hd_prescricao a,
      hd_prescricao_evento b,
      prescr_solucao c,
      prescr_medica d
    WHERE d.nr_atendimento = nr_atendimento_p
    AND a.nr_prescricao    = d.nr_prescricao
    AND a.nr_sequencia     = c.nr_seq_dialise
    AND c.nr_prescricao    = d.nr_prescricao
    AND b.nr_prescricao    = c.nr_prescricao
    AND b.nr_seq_solucao   = c.NR_SEQ_SOLUCAO
    AND b.nr_seq_solucao   = nr_seq_solucao_p
    AND a.nr_prescricao   = nr_prescricao_p
    AND b.dt_evento BETWEEN TRUNC(dt_inicial_p) AND fim_dia(dt_final_p)
    ORDER BY dt_evento;


BEGIN
  IF ((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') AND (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') AND (dt_final_p IS NOT NULL AND dt_final_p::text <> '')) THEN
    OPEN C01;
    LOOP
      FETCH C01 INTO nr_seq_solucao_w,nr_prescricao_w;
      EXIT WHEN NOT FOUND; /* apply on C01 */
      OPEN C02(nr_seq_solucao_w,nr_prescricao_w);
      LOOP
      FETCH C02 INTO dt_evento_w, ie_evento_w;
      EXIT WHEN NOT FOUND; /* apply on C02 */
      IF (ie_evento_w IN ('II')) THEN
        dt_inicio_w                                := dt_evento_w;
        ie_somar_w                                 := 'S';
      elsif (ie_evento_w  IN ('IT')) AND (ie_somar_w = 'S') THEN
        qt_minutos_w                               := qt_minutos_w + obter_min_entre_datas(dt_inicio_w, dt_evento_w, 1);
        ie_somar_w                                 := 'N';
      END IF;
    END LOOP;
    CLOSE C02;
    qt_minutos_final_w := qt_minutos_final_w + qt_minutos_w;
  END LOOP;
CLOSE c01;
END IF;
RETURN qt_minutos_final_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_total_hr_hemodilysis ( nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;

