-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dias_atraso ( nr_seq_notific_pagador_p bigint) RETURNS bigint AS $body$
DECLARE

 
dt_vencimento_original_w	titulo_receber.dt_pagamento_previsto%type;
dt_vencimento_w			titulo_receber.dt_vencimento%type;
dt_liquidacao_w			titulo_receber.dt_liquidacao%type;
ie_data_base_w			pls_notificacao_regra.ie_data_base%type;
nr_seq_lote_w			pls_notificacao_lote.nr_sequencia%type;
dt_lote_w			pls_notificacao_lote.dt_lote%type;
qt_dias_atrasados_aux_w		bigint := 0;
qt_dias_atrasados_w		bigint := 0;
ie_erro_data_w			boolean;
dt_ano_contr_inicio_w		timestamp;
dt_ano_contr_fim_w		timestamp;
dt_contrato_w			timestamp;
nr_titulo_w			titulo_receber.nr_titulo%type;
qt_dias_ult_venc_w		bigint := 0;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
dt_lote_yyyy_w			timestamp;
nr_titulo_abert_w		titulo_receber.nr_titulo%type;
ie_dias_acumulativos_w		pls_notificacao_regra.ie_dias_acumulativos%type;

C01 CURSOR FOR 
	SELECT	dt_pagamento_previsto, 
		dt_liquidacao, 
		dt_vencimento 
	from	titulo_receber 
	where	nr_seq_pagador = nr_seq_pagador_w 
	and	vl_titulo	> 0 
	and	((ie_data_base_w = 'VO' and trunc(dt_vencimento, 'dd') between dt_ano_contr_inicio_w and dt_ano_contr_fim_w) or (ie_data_base_w = 'VA' and trunc(dt_pagamento_previsto, 'dd') between dt_ano_contr_inicio_w and dt_ano_contr_fim_w)) 
	and	ie_situacao	= '2';

C02 CURSOR FOR 
	SELECT	a.nr_titulo 
	into STRICT	nr_titulo_w 
	from	pls_notificacao_item a, 
		titulo_receber b 
	where	a.nr_titulo = b.nr_titulo 
	and	a.nr_seq_notific_pagador = nr_seq_notific_pagador_p 
	and	b.ie_situacao = '1' 
	and	b.vl_titulo > 0;


BEGIN 
 
select	b.dt_contrato, 
	c.nr_seq_lote, 
	c.nr_seq_pagador 
into STRICT	dt_contrato_w, 
	nr_seq_lote_w, 
	nr_seq_pagador_w 
from	pls_contrato_pagador a, 
	pls_contrato b, 
	pls_notificacao_pagador c 
where	b.nr_sequencia = a.nr_seq_contrato 
and	c.nr_seq_pagador = a.nr_sequencia 
and	c.nr_sequencia = nr_seq_notific_pagador_p;
 
select	coalesce(b.ie_data_base, 'VA'), 
	a.dt_lote, 
	b.ie_dias_acumulativos 
into STRICT	ie_data_base_w, 
	dt_lote_w, 
	ie_dias_acumulativos_w 
from	pls_notificacao_lote a, 
	pls_notificacao_regra b 
where	a.nr_seq_regra = b.nr_sequencia 
and	a.nr_sequencia = nr_seq_lote_w;
 
if (dt_contrato_w IS NOT NULL AND dt_contrato_w::text <> '') then 
	 
	if (ie_dias_acumulativos_w = 'A') then 
		dt_ano_contr_inicio_w	:= add_months(dt_lote_w,-12);
		dt_ano_contr_fim_w	:= dt_lote_w;
	else 
		if (to_char(dt_contrato_w,'mm') = '02') then 
			ie_erro_data_w	:= false;
			 
			begin 
			dt_ano_contr_inicio_w	:= to_date(to_char(dt_contrato_w,'dd/mm/') || to_char(dt_lote_w,'yyyy'));
			exception 
			when others then 
			ie_erro_data_w	:= true;
			end;
			 
			if (ie_erro_data_w) then 
				dt_ano_contr_inicio_w	:= to_date('28'||to_char(dt_contrato_w,'/mm/') || to_char(dt_lote_w,'yyyy'));
				dt_ano_contr_fim_w	:= last_day(add_months(to_date('28'||to_char(dt_contrato_w,'mm/') || to_char(dt_lote_w,'yyyy')),11));
			else 
				dt_ano_contr_fim_w	:= last_day(add_months(to_date(to_char(dt_contrato_w,'dd/mm/') || to_char(dt_lote_w,'yyyy')),11));
			end if;
		else 
			dt_ano_contr_inicio_w	:= to_date(to_char(dt_contrato_w,'dd/mm/') || to_char(dt_lote_w,'yyyy'));
			dt_ano_contr_fim_w	:= last_day(add_months(to_date(to_char(dt_contrato_w,'dd/mm/') || to_char(dt_lote_w,'yyyy')),11));
		end if;
		 
		if (trunc(dt_ano_contr_inicio_w,'mm') > trunc(dt_lote_w,'mm')) then 
			dt_ano_contr_inicio_w := add_months(dt_ano_contr_inicio_w,-12);
			dt_ano_contr_fim_w  := add_months(dt_ano_contr_fim_w,-12);
		end if;
	end if;
	 
	open C01;
	loop 
	fetch C01 into 
		dt_vencimento_original_w, 
		dt_liquidacao_w, 
		dt_vencimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		qt_dias_atrasados_aux_w := 0;
		 
		if (ie_data_base_w = 'VO') then 
			qt_dias_atrasados_aux_w	:= trunc(coalesce(dt_liquidacao_w,dt_lote_w),'dd') - trunc(dt_vencimento_original_w,'dd');
		elsif (ie_data_base_w = 'VA') then 
			qt_dias_atrasados_aux_w	:= trunc(coalesce(dt_liquidacao_w,dt_lote_w),'dd') - trunc(dt_vencimento_w,'dd');
		end if;
		 
		if (qt_dias_atrasados_aux_w > 0) then 
			qt_dias_atrasados_w	:= qt_dias_atrasados_w + qt_dias_atrasados_aux_w;
		end if;
		 
		end;
	end loop;
	close C01;
	 
	open C02;
	loop 
	fetch C02 into 
		nr_titulo_abert_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		qt_dias_ult_venc_w := 0;
		qt_dias_ult_venc_w := pls_obter_qt_dias_tit_notif(nr_seq_notific_pagador_p,nr_titulo_abert_w,'DTL');
		qt_dias_atrasados_w := coalesce(qt_dias_ult_venc_w,0) + coalesce(qt_dias_atrasados_w,0);
		end;
	end loop;
	close C02;
end if;
 
return	qt_dias_atrasados_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dias_atraso ( nr_seq_notific_pagador_p bigint) FROM PUBLIC;

