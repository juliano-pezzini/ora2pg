-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_minutos_alta_regra_proc (nr_seq_regra_p bigint, nr_atendimento_p bigint) RETURNS bigint AS $body$
DECLARE


qt_minuto_w		bigint := 0;
qt_minuto_atual_w	bigint := 0;
nr_seq_propaci_w	bigint;

c01 CURSOR FOR
	SELECT  distinct b.nr_sequencia
	from	estrutura_procedimento_v d,
		regra_alta_auto_proced a,
		procedimento_paciente b
	where 	nr_seq_regra = nr_seq_regra_p
	and	b.cd_procedimento	= d.cd_procedimento
	and	b.ie_origem_proced	= d.ie_origem_proced
	and	b.nr_atendimento = nr_atendimento_p
	and 	coalesce(a.cd_procedimento,b.cd_procedimento)		= b.cd_procedimento
	and	((coalesce(a.cd_procedimento::text, '') = '') or (coalesce(a.ie_origem_proced,b.ie_origem_proced)= b.ie_origem_proced))
	and (coalesce(a.nr_seq_exame, coalesce(b.nr_seq_exame,0)) 			= coalesce(b.nr_seq_exame,0))
	and (coalesce(a.nr_seq_proc_interno, coalesce(b.nr_seq_proc_interno,0)) 	= coalesce(b.nr_seq_proc_interno,0))
	and	coalesce(a.cd_grupo_proc,d.cd_grupo_proc)			= d.cd_grupo_proc
	and	coalesce(a.cd_especialidade,d.cd_especialidade)		= d.cd_especialidade
	and	coalesce(a.cd_area_procedimento,d.cd_area_procedimento)	= d.cd_area_procedimento
	and	b.nr_sequencia not in (	SELECT m.nr_sequencia
				from  	estrutura_procedimento_v p,
					regra_alta_auto_proced l,
					procedimento_paciente m
				where 	nr_seq_regra = nr_seq_regra_p
				and	m.cd_procedimento				= p.cd_procedimento
				and	m.ie_origem_proced				= p.ie_origem_proced
				and	m.nr_atendimento = nr_atendimento_p
				and 	coalesce(l.cd_procedimento,m.cd_procedimento)	= m.cd_procedimento
				and	((coalesce(l.cd_procedimento::text, '') = '') or (coalesce(l.ie_origem_proced,m.ie_origem_proced)	= m.ie_origem_proced))
				and (coalesce(l.nr_seq_exame, coalesce(m.nr_seq_exame,0)) 			= coalesce(m.nr_seq_exame,0))
				AND (coalesce(l.nr_seq_proc_interno, coalesce(m.nr_seq_proc_interno,0)) 	= coalesce(m.NR_SEQ_PROC_INTERNO,0))
				and	coalesce(l.cd_grupo_proc,p.cd_grupo_proc)			= p.cd_grupo_proc
				and	coalesce(l.cd_especialidade,p.cd_especialidade)		= p.cd_especialidade
				and	coalesce(ie_excecao,'S') = 'S'
				and	coalesce(l.cd_area_procedimento,p.cd_area_procedimento)	= p.cd_area_procedimento)
	ORDER BY b.nr_sequencia;


c02 CURSOR FOR
	SELECT  a.qt_minuto
	from	estrutura_procedimento_v d,
		regra_alta_auto_proced a,
		procedimento_paciente b
	where 	nr_seq_regra = nr_seq_regra_p
	and	b.cd_procedimento	= d.cd_procedimento
	and	b.ie_origem_proced	= d.ie_origem_proced
	and	b.nr_atendimento = nr_atendimento_p
	and 	coalesce(a.cd_procedimento,b.cd_procedimento)		= b.cd_procedimento
	and	((coalesce(a.cd_procedimento::text, '') = '') or (coalesce(a.ie_origem_proced,b.ie_origem_proced)= b.ie_origem_proced))
	and (coalesce(a.nr_seq_exame, coalesce(b.nr_seq_exame,0)) 			= coalesce(b.nr_seq_exame,0))
	and (coalesce(a.nr_seq_proc_interno, coalesce(b.nr_seq_proc_interno,0)) 	= coalesce(b.nr_seq_proc_interno,0))
	and	coalesce(a.cd_grupo_proc,d.cd_grupo_proc)			= d.cd_grupo_proc
	and	coalesce(a.cd_especialidade,d.cd_especialidade)		= d.cd_especialidade
	and	coalesce(a.cd_area_procedimento,d.cd_area_procedimento)	= d.cd_area_procedimento
	and	b.nr_sequencia = nr_seq_propaci_w
	order by
		coalesce(a.cd_procedimento,0),
		coalesce(a.nr_seq_proc_interno,0),
		coalesce(a.nr_seq_exame,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0);

BEGIN

open c01;
loop
fetch c01 into
	nr_seq_propaci_w;
EXIT WHEN NOT FOUND; /* apply on c01 */


	open c02;
	loop
	fetch c02 into
		qt_minuto_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		qt_minuto_w	:= qt_minuto_w;

	end loop;
	close c02;

	if (qt_minuto_w > qt_minuto_atual_w) then
		qt_minuto_atual_w	:= qt_minuto_w;
	end if;

end loop;
close c01;

return	qt_minuto_atual_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_minutos_alta_regra_proc (nr_seq_regra_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

