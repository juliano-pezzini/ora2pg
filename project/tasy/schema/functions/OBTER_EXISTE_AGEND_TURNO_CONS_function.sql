-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_existe_agend_turno_cons ( cd_agenda_p bigint, dt_agenda_p timestamp, nr_min_duracao_p bigint) RETURNS varchar AS $body$
DECLARE

			
			
ie_retorno_w		varchar(1) := 'N';
ie_dia_semana_w		smallint;
ie_feriado_w		varchar(1)	:= 'N';
cd_estabelecimento_w	bigint;

hr_inicial_w		timestamp;
hr_final_w		timestamp;
nr_minuto_intervalo_w	bigint;

hr_atual_w		timestamp;
hr_fim_w		timestamp;


c01 CURSOR FOR
	SELECT 	hr_inicial,
		hr_final,
		nr_minuto_intervalo
	from 	agenda_Turno
	where (cd_agenda     	= cd_agenda_p)
	and (ie_dia_semana	= ie_dia_Semana_w)
	and	to_char(hr_inicial,'hh24:mi:ss') < to_char(hr_final,'hh24:mi:ss')
	and	((coalesce(dt_inicio_vigencia::text, '') = '') 	or (dt_inicio_vigencia 	<= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p)))
	and	((coalesce(dt_final_vigencia::text, '') = '') 	or (dt_final_vigencia 	>= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p)))
	and	coalesce(nr_minuto_intervalo,0) > 0
	and (ie_feriado_w <> 'S')
	and (obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S')
	
union

	SELECT 	hr_inicial,
		hr_final,
		nr_minuto_intervalo
	from 	agenda_Turno
	where 	cd_agenda     	= cd_agenda_p
	and 	ie_dia_semana	= 9
	and	to_char(hr_inicial,'hh24:mi:ss') < to_char(hr_final,'hh24:mi:ss')
	and	coalesce(nr_minuto_intervalo,0) > 0
	and	((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p)))
	and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p)))
	and	ie_dia_semana_w between 2 and 6
	and (ie_feriado_w 	<> 'S')
	and	obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'
	and	not exists (select 1
			from 	agenda_Turno
			where 	cd_agenda     	= cd_agenda_p
			and 	ie_dia_semana	= ie_dia_Semana_w);
			

BEGIN


select 	PKG_DATE_UTILS.get_WeekDay(dt_agenda_p)
into STRICT	ie_dia_semana_w
;

	
BEGIN
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	agenda
	where	cd_agenda 	= cd_agenda_p;
	
	select 	'S'
	into STRICT	ie_feriado_w
	from 	feriado
	where 	cd_estabelecimento 	= cd_estabelecimento_w
	and 	dt_feriado	 	= dt_agenda_p;
	
EXCEPTION
	WHEN others then
		ie_feriado_w := 'N';
END;
	
	
open c01;
loop
fetch c01 into	
	hr_inicial_w,
	hr_final_w,
	nr_minuto_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	hr_atual_w	:= hr_inicial_w;
	
	while(hr_atual_w	< hr_final_w) loop
		
		hr_fim_w	:= hr_atual_w + (nr_minuto_intervalo_w - 1) /1440;
	
		if (to_char(dt_agenda_p ,'hh24:mi')  = to_char(hr_atual_w,'hh24:mi') ) then
			
			ie_retorno_w := 'S';
			
		end if;
		
		hr_atual_w	:= hr_atual_w + (nr_minuto_intervalo_w / 1440);	
		
	end loop;
	
	
	end;
end loop;
close c01;



return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_existe_agend_turno_cons ( cd_agenda_p bigint, dt_agenda_p timestamp, nr_min_duracao_p bigint) FROM PUBLIC;

