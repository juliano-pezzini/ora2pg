-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_grupo_servico ( cd_procedimento_p bigint, ie_origem_proced_p bigint) RETURNS varchar AS $body$
DECLARE


/*
------------------------------------------------------------------------------------------------------------------
ATENCAO !

NÃO UTILIZAR MAIS ESSA FUNCTION
USAR SEMPRE A PLS_SE_GRUPO_PRECO_SERVICO

O procedimento pode estar em mais de um grupo!
-------------------------------------------------------------------------------------------------------------------
*/
cd_area_procedimento_w		bigint	:= 0;
cd_especialidade_w		bigint 	:= 0;
cd_grupo_proc_w			bigint 	:= 0;
nr_seq_grupo_w			bigint;
ie_origem_proced_w		bigint;
ie_estrutura_w			varchar(10);
nr_seq_grupo_ww			bigint;
qt_reg_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.ie_estrutura
	from	pls_preco_servico	a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_w;

C02 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.ie_estrutura
	from	pls_preco_servico	a
	where	a.cd_grupo_proc	= cd_grupo_proc_w;

C03 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.ie_estrutura
	from	pls_preco_servico	a
	where	a.cd_especialidade = cd_especialidade_w;

C04 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.ie_estrutura
	from	pls_preco_servico	a
	where	a.cd_area_procedimento = cd_area_procedimento_w;

C05 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.ie_estrutura
	from	pls_preco_servico	a
	where	coalesce(a.cd_procedimento::text, '') = ''
	and	coalesce(a.ie_origem_proced::text, '') = ''
	and	coalesce(a.cd_grupo_proc::text, '') = ''
	and	coalesce(a.cd_especialidade::text, '') = ''
	and	coalesce(a.cd_area_procedimento::text, '') = '';

TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

BEGIN

/* Obter a estrutura do procedimento */

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

open C01;
loop
FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;

for i in 1..Vetor_c01_w.COUNT loop
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop
		begin
		nr_seq_grupo_ww		:= s_array[z].nr_seq_grupo;
		ie_estrutura_w		:= s_array[z].ie_estrutura;

		if (coalesce(ie_estrutura_w,'S') = 'S') then
			nr_seq_grupo_w	:= nr_seq_grupo_ww;
		end if;
		end;
	end loop;
end loop;

/*open C01;
loop
fetch C01 into
	nr_seq_grupo_ww,
	ie_estrutura_w;
exit when C01%notfound;
	begin
	if	(nvl(ie_estrutura_w,'S') = 'S') then
		nr_seq_grupo_w	:= nr_seq_grupo_ww;
	end if;
	end;
end loop;
close C01;*/
/* Verifica grupo procedimento */

if (coalesce(nr_seq_grupo_w,0) = 0) then
	open C02;
	loop
	fetch C02 into
		nr_seq_grupo_ww,
		ie_estrutura_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(ie_estrutura_w,'S') = 'S') then
			select	count(1)
			into STRICT	qt_reg_w
			from	pls_preco_servico
			where	nr_seq_grupo		= nr_seq_grupo_ww
			and	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	ie_estrutura		= 'N'  LIMIT 1;

			if (qt_reg_w = 0) then
				nr_seq_grupo_w	:= nr_seq_grupo_ww;
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;

/* Verifica especialidade procedimento */

if (coalesce(nr_seq_grupo_w,0) = 0) then
	open C03;
	loop
	fetch C03 into
		nr_seq_grupo_ww,
		ie_estrutura_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (coalesce(ie_estrutura_w,'S') = 'S') then
			select	count(1)
			into STRICT	qt_reg_w
			from	pls_preco_servico
			where	nr_seq_grupo		= nr_seq_grupo_ww
			and	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	ie_estrutura		= 'N'  LIMIT 1;

			if (qt_reg_w = 0) then
				select	count(1)
				into STRICT	qt_reg_w
				from	pls_preco_servico
				where	nr_seq_grupo	= nr_seq_grupo_ww
				and	ie_estrutura	= 'N'
				and	cd_grupo_proc	= cd_grupo_proc_w  LIMIT 1;

				if (qt_reg_w = 0) then
					nr_seq_grupo_w	:= nr_seq_grupo_ww;
				end if;
			end if;
		end if;

		end;
	end loop;
	close C03;
end if;

if (coalesce(nr_seq_grupo_w,0) = 0) then
	open C04;
	loop
	fetch C04 into
		nr_seq_grupo_ww,
		ie_estrutura_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		if (coalesce(ie_estrutura_w,'S') = 'S') then
			/* Verificar se existe procedimento que não está liberado para a regra */

			select	count(1)
			into STRICT	qt_reg_w
			from	pls_preco_servico
			where	nr_seq_grupo		= nr_seq_grupo_ww
			and	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	ie_estrutura		= 'N'  LIMIT 1;

			if (qt_reg_w = 0) then
				/* Verificar se existe grupo de procedimento que não está liberado para a regra */

				select	count(1)
				into STRICT	qt_reg_w
				from	pls_preco_servico
				where	nr_seq_grupo	= nr_seq_grupo_ww
				and	ie_estrutura	= 'N'
				and	cd_grupo_proc	= cd_grupo_proc_w  LIMIT 1;

				if (qt_reg_w = 0) then
					/* Verificar se existe especialidade do procedimento que não está liberado para a regra */

					select	count(1)
					into STRICT	qt_reg_w
					from	pls_preco_servico
					where	nr_seq_grupo		= nr_seq_grupo_ww
					and	ie_estrutura		= 'N'
					and	cd_especialidade	= cd_especialidade_w  LIMIT 1;

					if (qt_reg_w = 0) then
						nr_seq_grupo_w	:= nr_seq_grupo_ww;
					end if;
				end if;
			end if;
		end if;

		end;
	end loop;
	close C04;
end if;

if (coalesce(nr_seq_grupo_w,0) = 0) then
	open C05;
	loop
	fetch C05 into
		nr_seq_grupo_w,
		ie_estrutura_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		if (coalesce(ie_estrutura_w,'S') = 'S') then
			-- Verificar se existe procedimento que não está liberado para a regra
			select	count(1)
			into STRICT	qt_reg_w
			from	pls_preco_servico
			where	nr_seq_grupo		= nr_seq_grupo_ww
			and	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	ie_estrutura		= 'N'  LIMIT 1;

			if (qt_reg_w = 0) then
				--Verificar se existe grupo de procedimento que não está liberado para a regra
				select	count(1)
				into STRICT	qt_reg_w
				from	pls_preco_servico
				where	nr_seq_grupo	= nr_seq_grupo_ww
				and	ie_estrutura	= 'N'
				and	cd_grupo_proc	= cd_grupo_proc_w  LIMIT 1;

				if (qt_reg_w = 0) then
					-- Verificar se existe especialidade do procedimento que não está liberado para a regra
					select	count(1)
					into STRICT	qt_reg_w
					from	pls_preco_servico
					where	nr_seq_grupo		= nr_seq_grupo_ww
					and	ie_estrutura		= 'N'
					and	cd_especialidade	= cd_especialidade_w  LIMIT 1;

					if (qt_reg_w = 0) then
						-- Verificar se existe especialidade do procedimento que não está liberado para a regra
						select	count(1)
						into STRICT	qt_reg_w
						from	pls_preco_servico
						where	nr_seq_grupo		= nr_seq_grupo_ww
						and	ie_estrutura		= 'N'
						and	cd_area_procedimento	= cd_area_procedimento_w  LIMIT 1;

						if (qt_reg_w = 0) then
							nr_seq_grupo_w	:= nr_seq_grupo_ww;
						end if;
					end if;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C05;
end if;

return	nr_seq_grupo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_grupo_servico ( cd_procedimento_p bigint, ie_origem_proced_p bigint) FROM PUBLIC;

