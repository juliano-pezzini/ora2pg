-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_volume_ml_medic_agrup ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_ceil_unitario_p text default 'N', qt_volume_medic_p bigint default null) RETURNS bigint AS $body$
DECLARE


nr_agrupamento_w		double precision;
qt_conversao_ml_w		double precision;
nr_sequencia_w			bigint;

cd_material_w			integer;
qt_dose_w			double precision;
qt_vol_adic_reconst_w		double precision;
cd_unid_med_dose_w		varchar(30) := '';
qt_conv_ml_w			double precision;
qt_conversao_ml_ret_w		double precision := 0;

cd_medic_w			integer;
qt_dose_mat_w			double precision;
cd_unid_med_dose_mat_w		varchar(30);
qt_dose_unid_med_cons_w		double precision;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN ie_ceil_unitario_p='N' THEN 			coalesce(qt_volume_medic_p,coalesce(obter_conversao_ml(cd_material,qt_dose,cd_unidade_medida_dose),0))  ELSE coalesce(obter_conversao_ml(cd_material,ceil(qt_unitaria),cd_unidade_medida),0) END ,
		cd_material,
		CASE WHEN ie_ceil_unitario_p='N' THEN 			cd_unidade_medida_dose  ELSE cd_unidade_medida END ,
		CASE WHEN  ie_ceil_unitario_p='N' THEN 			qt_dose  ELSE ceil(qt_unitaria) END
	from	prescr_material
	where	nr_prescricao	=	nr_prescricao_p
	and	nr_agrupamento	=	nr_agrupamento_w
	and	ie_agrupador	=	1;



BEGIN

select	nr_agrupamento
into STRICT	nr_agrupamento_w
from	prescr_material
where	nr_prescricao	=	nr_prescricao_p
and	nr_sequencia 	=	nr_sequencia_p;


open C01;
loop
fetch C01 into
	nr_sequencia_w,
	qt_conversao_ml_w,
	cd_medic_w,
	cd_unid_med_dose_mat_w,
	qt_dose_mat_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	begin
	select	max(a.cd_material),
		max(a.qt_dose),
		max(coalesce(a.qt_vol_adic_reconst,0)),
		max(a.cd_unidade_medida_dose)
	into STRICT	cd_material_w,
		qt_dose_w,
		qt_vol_adic_reconst_w,
		cd_unid_med_dose_w
	from 	material b,
		prescr_material a
	where 	a.nr_sequencia_diluicao = nr_sequencia_w
	and 	a.nr_prescricao 	= nr_prescricao_p
	and	a.cd_material 		= b.cd_material
	and	a.ie_agrupador IN (9);
	exception
	when others then
		cd_material_w		:= null;
		qt_dose_w		:= null;
		qt_vol_adic_reconst_w	:= null;
		cd_unid_med_dose_w	:= null;
	end;

	if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (qt_dose_w IS NOT NULL AND qt_dose_w::text <> '') and (cd_unid_med_dose_w IS NOT NULL AND cd_unid_med_dose_w::text <> '') then

		select	coalesce(obter_conversao_ml(cd_material_w,qt_dose_w,cd_unid_med_dose_w),0) + qt_vol_adic_reconst_w
		into STRICT	qt_conv_ml_w
		;


		if (upper(cd_unid_med_dose_mat_w) <> upper(obter_unid_med_usua('ML'))) then
			qt_dose_unid_med_cons_w	:= obter_conversao_unid_med_cons(cd_medic_w,cd_unid_med_dose_mat_w,qt_dose_mat_w);
			qt_conv_ml_w		:= qt_dose_unid_med_cons_w * qt_conv_ml_w;
		else
			qt_conv_ml_w	:= qt_conversao_ml_w;
		end if;


	else
		qt_conv_ml_w	:= qt_conversao_ml_w;
	end if;


	qt_conversao_ml_ret_w	:= coalesce(qt_conversao_ml_ret_w,0) + coalesce(qt_conv_ml_w,0);

	end;
end loop;
close C01;

return	qt_conversao_ml_ret_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_volume_ml_medic_agrup ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_ceil_unitario_p text default 'N', qt_volume_medic_p bigint default null) FROM PUBLIC;

