-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_datas_prescricao as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_datas_prescricao (nr_prescricao_p bigint, ie_data_p text) RETURNS timestamp AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	timestamp;
BEGIN
	v_query := 'SELECT * FROM obter_datas_prescricao_atx ( ' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(ie_data_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret timestamp);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_datas_prescricao_atx (nr_prescricao_p bigint, ie_data_p text) RETURNS timestamp AS $body$
DECLARE


dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w	timestamp;
dt_Liberacao_medico_w	timestamp;
dt_prescricao_w			timestamp;
dt_liberacao_w			timestamp;
dt_entrada_unidade_w	timestamp;
/*
L =  Liberação do Médico
I =  Inicio da Prescricao
V = Validade Prescricao
P = Data da Prescricao
DEP = Data de entrada na unidade da prescrição
*/
BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	select	max(dt_inicio_prescr),
			max(dt_validade_prescr),
			max(dt_Liberacao_medico),
			max(dt_prescricao),
			max(dt_liberacao),
			max(dt_entrada_unidade)
	into STRICT	dt_inicio_prescr_w,
			dt_validade_prescr_w,
			dt_Liberacao_medico_w,
			dt_prescricao_w,
			dt_liberacao_w,
			dt_entrada_unidade_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if (ie_data_p = 'I') then
		return dt_inicio_prescr_w;
	elsif (ie_data_p = 'L') then
		return coalesce(dt_Liberacao_medico_w,dt_liberacao_w);
	elsif (ie_data_p = 'V') then
		return dt_validade_prescr_w;
	elsif (ie_data_p = 'P') then
		return dt_prescricao_w;
	elsif (ie_data_p = 'DEP') then
		return dt_entrada_unidade_w;
	else
		return dt_validade_prescr_w;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_datas_prescricao (nr_prescricao_p bigint, ie_data_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_datas_prescricao_atx (nr_prescricao_p bigint, ie_data_p text) FROM PUBLIC;

