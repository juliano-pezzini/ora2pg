-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_desc_tuss_desp (nr_seq_procedimento_p bigint) RETURNS varchar AS $body$
DECLARE


cd_convenio_w		conta_paciente.cd_convenio_parametro%type;
cd_estabelecimento_w	conta_paciente.cd_estabelecimento%type;

cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
cd_procedimento_tuss_w	procedimento_paciente.cd_procedimento_tuss%type;
nr_seq_proc_pacote_w	procedimento_paciente.nr_seq_proc_pacote%type;
cd_proc_conv_w		procedimento_paciente.cd_procedimento_convenio%type;
nr_seq_proc_interno_w	procedimento_paciente.nr_seq_proc_interno%type;
nr_seq_exame_w		procedimento_paciente.nr_seq_exame%type;
dt_procedimento_w	timestamp;

ie_classif_proced_w	procedimento.ie_classificacao%type;

ie_desc_proc_interno_w	tiss_parametros_convenio.ie_desc_proc_interno%type;
ie_desc_tuss_w		tiss_regra_tuss.ie_desc_tuss%type;

ds_retorno_w		varchar(255);
ds_proc_tabela_w	varchar(255);
ds_proc_conv_w		varchar(255);
ds_procedimento_w	varchar(255);

c01 CURSOR FOR
SELECT 	a.ie_desc_tuss
from 	tiss_regra_tuss a
where	a.cd_estabelecimento	= cd_estabelecimento_w
and 	a.cd_convenio		= cd_convenio_w
and 	a.dt_inicio_vigencia	<= dt_procedimento_w
and (exists (select	1
			from	tiss_regra_tuss_filtro x
			where	x.nr_seq_regra						= a.nr_sequencia
			and	coalesce(x.ie_classif_proced,coalesce(ie_classif_proced_w,'X'))	= coalesce(ie_classif_proced_w,'X')) or
	not exists (select	1
			from	tiss_regra_tuss_filtro x
			where	x.nr_seq_regra				= a.nr_sequencia))
order by a.dt_inicio_vigencia;


BEGIN

begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.cd_procedimento_tuss,
		a.nr_seq_proc_pacote,
		b.cd_convenio_parametro,
		b.cd_estabelecimento,
		c.ie_classificacao,
		a.dt_procedimento,
		a.cd_procedimento_convenio,
		a.nr_seq_proc_interno,
		a.nr_seq_exame,
		substr(obter_desc_procedimento(a.cd_procedimento,a.ie_origem_proced),1,255),
		substr(Tiss_Obter_Desc_Proc_Convenio(a.nr_sequencia),1,255)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_procedimento_tuss_w,
		nr_seq_proc_pacote_w,
		cd_convenio_w,
		cd_estabelecimento_w,
		ie_classif_proced_w,
		dt_procedimento_w,
		cd_proc_conv_w,
		nr_seq_proc_interno_w,
		nr_seq_exame_w,
		ds_proc_tabela_w,
		ds_proc_conv_w
	from	procedimento_paciente a,
		conta_paciente b,
		procedimento c
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.cd_procedimento	= c.cd_procedimento
	and	a.ie_origem_proced	= c.ie_origem_proced
	and	a.nr_sequencia		= nr_seq_procedimento_p  LIMIT 1;
exception
when others then
	cd_convenio_w		:= null;
	cd_estabelecimento_w	:= null;
end;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then

	ds_procedimento_w	:= coalesce(ds_proc_conv_w,ds_proc_tabela_w);

	select	coalesce(max(ie_desc_proc_interno), 'N')
	into STRICT	ie_desc_proc_interno_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;

	if (coalesce(cd_procedimento_tuss_w,0) <> 0) then
		open C01;
		loop
		fetch C01 into
			ie_desc_tuss_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ie_desc_proc_interno_w	:= ie_desc_tuss_w;
			end;
		end loop;
		close C01;
	end if;

	if (ie_desc_proc_interno_w = 'S') then

		select	coalesce(tiss_obter_desc_proc_interno(cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_exame_w), coalesce(ds_proc_conv_w,ds_proc_tabela_w))
		into STRICT	ds_procedimento_w
		;

	elsif (ie_desc_proc_interno_w = 'P') then

		ds_procedimento_w	:= coalesce(ds_proc_conv_w,ds_proc_tabela_w);

	elsif (ie_desc_proc_interno_w = 'T') and (coalesce(cd_procedimento_tuss_w,'0') <> '0') then --lhalves OS200562 09/03, gerar descrição TUSS.
		ds_procedimento_w	:= coalesce(obter_descricao_procedimento(cd_procedimento_tuss_w, '8'),ds_proc_tabela_w);

	elsif (ie_desc_proc_interno_w = 'C')	then
		if (coalesce(ds_proc_conv_w::text, '') = '') and --Se for igual, não possui conversão
			(coalesce(cd_procedimento_tuss_w,'0') <> '0') then --Possui proc TUSS
			ds_procedimento_w	:= coalesce(obter_descricao_procedimento(cd_procedimento_tuss_w, '8'),ds_procedimento_w);
		else
			ds_procedimento_w	:= coalesce(ds_proc_conv_w,ds_proc_tabela_w);
		end if;

	end if;

end if;

return	ds_procedimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_desc_tuss_desp (nr_seq_procedimento_p bigint) FROM PUBLIC;

