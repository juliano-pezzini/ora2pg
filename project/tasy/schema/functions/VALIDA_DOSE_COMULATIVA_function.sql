-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION valida_dose_comulativa (cd_material_p bigint, qt_material_p bigint, cd_unidade_medida_p text, cd_pessoa_fisica_p text, nr_ocorrencia_p bigint, dose_cumulativa_p bigint, cd_unidade_cumulativa_p text, ds_mensagem_o out text) AS $body$
DECLARE

  qt_total_dose_prescr_w     double precision;
  qt_dose_total_w            double precision;
  cd_estabelecimento_w       smallint := wheb_usuario_pck.get_cd_estabelecimento;
  materiais_sem_conversao_w  bigint;
  valida_comulativa_o        varchar(1);

  cur_sem_conversao CURSOR FOR
    SELECT prescr_material.cd_material, count(*) materiais_sem_conversao
      from prescr_medica, prescr_material
     where prescr_medica.nr_prescricao = prescr_material.nr_prescricao
       and prescr_medica.cd_pessoa_fisica = cd_pessoa_fisica_p
       and (coalesce(prescr_material.dt_liberacao::text, '') = '' and clock_timestamp() < prescr_medica.dt_validade_prescr)
       and upper(coalesce(prescr_material.ie_status,'N')) not in ('INT', 'V')
       and coalesce(prescr_material.dt_suspensao::text, '') = ''
       and not exists (SELECT 1
              from material_conversao_unidade
             where material_conversao_unidade.cd_material = prescr_material.cd_material
               and material_conversao_unidade.cd_unidade_medida = prescr_material.cd_unidade_medida_dose)
       
       and prescr_material.cd_material in (SELECT material.cd_material
                                  FROM material_estab, 
                                       material, 
                                       medic_ficha_tecnica
                                 WHERE material.nr_seq_ficha_tecnica = medic_ficha_tecnica.nr_sequencia
                                   AND material_estab.cd_material = material.cd_material
                                   AND material_estab.cd_estabelecimento = cd_estabelecimento_w
                                   AND medic_ficha_tecnica.nr_sequencia = (select m.nr_seq_ficha_tecnica 
                                                                             from material m 
                                                                            where m.cd_material = cd_material_p))
     group by prescr_material.cd_material;
BEGIN
  valida_comulativa_o := 'S';

  -- converts the dose in the configured mesurement if necessary qt_dose_total_w := qt_material_p;
  if (upper(cd_unidade_cumulativa_p) <> upper(cd_unidade_medida_p)) then 
    select obter_dose_convertida(cd_material_p,
                                 qt_material_p,
                                 cd_unidade_medida_p,
                                 cd_unidade_cumulativa_p)
      into STRICT qt_dose_total_w
;
  else
    qt_dose_total_w := coalesce(qt_material_p,0);
  end if;

  qt_dose_total_w:=qt_dose_total_w * nr_ocorrencia_p;

  -- validates if there's any prescription without mesurement code informed 
  select count(*)
    into STRICT materiais_sem_conversao_w
    from material_conversao_unidade
   where cd_material = cd_material_p
     and cd_unidade_medida = cd_unidade_cumulativa_p;

  
  if (materiais_sem_conversao_w > 0) then 
    FOR I IN cur_sem_conversao LOOP
      if (I.materiais_sem_conversao > 0) then
        CALL Wheb_mensagem_pck.exibir_mensagem_abort(1171764, 'cd_medicamento='||i.cd_material);
      END IF;
    END LOOP;

     -- sums all the prescripted doses in the same configured mesurement 
    select sum(obter_dose_convertida(pm2.cd_material,
                                     (pm2.qt_dose*pm2.nr_ocorrencia),
                                     pm2.cd_unidade_medida_dose,
                                     cd_unidade_cumulativa_p))
      into STRICT qt_total_dose_prescr_w
      from prescr_medica pm, prescr_material pm2
     where pm.nr_prescricao = pm2.nr_prescricao
       and pm.cd_pessoa_fisica = cd_pessoa_fisica_p
       and pm2.cd_material in (SELECT material.cd_material
                                FROM material_estab, 
                                     material, 
                                     medic_ficha_tecnica
                               WHERE material.nr_seq_ficha_tecnica = medic_ficha_tecnica.nr_sequencia
                                 AND material_estab.cd_material = material.cd_material
                                 AND material_estab.cd_estabelecimento = cd_estabelecimento_w
                                 AND medic_ficha_tecnica.nr_sequencia = (select m.nr_seq_ficha_tecnica 
                                                                           from material m 
                                                                          where m.cd_material = cd_material_p))
       and (coalesce(pm2.dt_liberacao::text, '') = '' and clock_timestamp() < pm.dt_validade_prescr)
       and upper(coalesce(pm2.ie_status,'N')) not in ('INT', 'V')
       and coalesce(pm2.dt_suspensao::text, '') = '';

    qt_dose_total_w := coalesce(qt_dose_total_w,0) + coalesce(qt_total_dose_prescr_w,0);
    -- verifys if the sum and the actual dose pass from the configured amount 
    if (coalesce(qt_dose_total_w,0) < coalesce(dose_cumulativa_p,0)) then
      valida_comulativa_o := 'N';
    else
      ds_mensagem_o := Wheb_mensagem_pck.get_texto(1171765, 'cd_medicamento='||cd_material_p||';soma_dose='||qt_total_dose_prescr_w||';unidade='||cd_unidade_cumulativa_p);
    end if;
  else 
    CALL Wheb_mensagem_pck.exibir_mensagem_abort(1171764, 'cd_medicamento='||cd_material_p);
  end if;
  
  return;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION valida_dose_comulativa (cd_material_p bigint, qt_material_p bigint, cd_unidade_medida_p text, cd_pessoa_fisica_p text, nr_ocorrencia_p bigint, dose_cumulativa_p bigint, cd_unidade_cumulativa_p text, ds_mensagem_o out text) FROM PUBLIC;

