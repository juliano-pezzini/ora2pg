-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_campo_fat_xml ( nr_seq_campo_p pls_fat_regra_campo.nr_seq_campo%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ds_valor_original_p text ) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w			varchar(255);
nr_seq_regra_w			pls_fat_regra_campo_mat.nr_sequencia%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
cd_procedimento_w		pls_fat_regra_campo.cd_procedimento%type;
ie_origem_proced_w		pls_fat_regra_campo.ie_origem_proced%type;
cd_area_procedimento_w		pls_fat_regra_campo.cd_area_procedimento%type;
cd_especialidade_w		pls_fat_regra_campo.cd_especialidade%type;
cd_grupo_proc_w			pls_fat_regra_campo.cd_grupo_proc%type;
tx_reducao_acrescimo_w		double precision := null;
ie_via_acesso_w			pls_fat_regra_campo.ie_via_acesso%type;
ie_origem_w			pls_fat_regra_campo.ie_origem_proced%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_estrut_mat_w		pls_material.nr_seq_estrut_mat%type;
nr_seq_estrut_mat_reg_w		pls_material.nr_seq_estrut_mat%type;
ie_tipo_despesa_mat_w		pls_conta_mat.ie_tipo_despesa%type;
nr_seq_grupo_material_w		pls_preco_grupo_material.nr_sequencia%type;
ie_sem_tag_informada_w		pls_fat_regra_campo.ie_somente_sem_tag%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_fat_regra_campo
	where	nr_seq_campo		= nr_seq_campo_p
	and (nr_seq_pagador		= nr_seq_pagador_w or coalesce(nr_seq_pagador::text, '') = '' or coalesce(nr_seq_pagador_w::text, '') = '')
	and (cd_procedimento	= cd_procedimento_w or coalesce(cd_procedimento::text, '') = '' or coalesce(cd_procedimento_w::text, '') = '')
	and	((ie_origem_proced	= ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '') or (coalesce(cd_procedimento::text, '') = '' and (ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '')))
	and (cd_area_procedimento	= cd_area_procedimento_w or coalesce(cd_area_procedimento::text, '') = '' or coalesce(cd_area_procedimento_w::text, '') = '')
	and (cd_especialidade	= cd_especialidade_w or coalesce(cd_especialidade::text, '') = '' or coalesce(cd_especialidade_w::text, '') = '')
	and (cd_grupo_proc		= cd_grupo_proc_w or coalesce(cd_grupo_proc::text, '') = '' or coalesce(cd_grupo_proc_w::text, '') = '')
	and (tx_reducao_acrescimo	= tx_reducao_acrescimo_w or coalesce(tx_reducao_acrescimo::text, '') = '' or coalesce(tx_reducao_acrescimo_w::text, '') = '')
	and (ie_via_acesso		= ie_via_acesso_w or coalesce(ie_via_acesso::text, '') = '' or coalesce(ie_via_acesso_w::text, '') = '')
	and (ie_somente_sem_tag	= ie_sem_tag_informada_w or ie_somente_sem_tag = 'N')
	order by
		nr_seq_pagador,
		cd_procedimento,
		cd_area_procedimento,
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		tx_reducao_acrescimo,
		ie_via_acesso;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_estrut_mat,
		nr_seq_grupo_material
	from	pls_fat_regra_campo_mat
	where	nr_seq_campo		= nr_seq_campo_p
	and (nr_seq_pagador		= nr_seq_pagador_w or coalesce(nr_seq_pagador::text, '') = '' or coalesce(nr_seq_pagador_w::text, '') = '')
	and (nr_seq_material	= nr_seq_material_w or coalesce(nr_seq_material::text, '') = '' or coalesce(nr_seq_material_w::text, '') = '')
	and (ie_tipo_despesa_mat	= ie_tipo_despesa_mat_w or coalesce(ie_tipo_despesa_mat::text, '') = '' or coalesce(ie_tipo_despesa_mat_w::text, '') = '')
	and (tx_reducao_acrescimo	= tx_reducao_acrescimo_w or coalesce(tx_reducao_acrescimo::text, '') = '' or coalesce(tx_reducao_acrescimo_w::text, '') = '')
	order by
		nr_seq_pagador,
		nr_seq_material,
		nr_seq_estrut_mat,
		ie_tipo_despesa_mat,
		nr_seq_grupo_material,
		tx_reducao_acrescimo;


BEGIN
-- FATURA
if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
	select	max(nr_seq_pagador)
	into STRICT	nr_seq_pagador_w
	from	pls_fatura
	where	nr_sequencia	= nr_seq_fatura_p;
end if;

select	CASE WHEN coalesce(ds_valor_original_p::text, '') = '' THEN 'S'  ELSE 'N' END
into STRICT	ie_sem_tag_informada_w
;

-- PROCEDIMENTO
if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	select	max(cd_procedimento),
		max(ie_origem_proced),
		max(ie_via_acesso),
		max(tx_reducao_acrescimo_imp)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		ie_via_acesso_w,
		tx_reducao_acrescimo_w
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_conta_proc_p;

	SELECT * FROM pls_obter_estrut_proc( cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_w;

	if (coalesce(ie_origem_proced_w::text, '') = '') then
		ie_origem_proced_w := ie_origem_w;
	end if;
end if;

-- PROCEDIMENTO
if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') or (coalesce(nr_seq_conta_mat_p::text, '') = '' and nr_seq_campo_p in (1,2,6,8,9,10)) then
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	max(ds_valor)
		into STRICT	ds_retorno_w
		from	pls_fat_regra_valor
		where	nr_seq_regra = nr_seq_regra_w;

		end;
	end loop;
	close C01;
end if;

-- MATERIAL
if (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	select	max(y.nr_sequencia),
		max(y.nr_seq_estrut_mat),
		max(x.ie_tipo_despesa),
		max(x.tx_reducao_acrescimo)
	into STRICT	nr_seq_material_w,
		nr_seq_estrut_mat_w,
		ie_tipo_despesa_mat_w,
		tx_reducao_acrescimo_w
	from	pls_conta_mat	x,
		pls_material	y
	where	y.nr_sequencia	= x.nr_seq_material
	and	x.nr_sequencia	= nr_seq_conta_mat_p;
end if;

-- MATERIAL
if (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') or (coalesce(ds_retorno_w::text, '') = '' and coalesce(nr_seq_conta_proc_p::text, '') = '' and nr_seq_campo_p in (1,2,6,8,9,10)) then
	open C02;
	loop
	fetch C02 into
		nr_seq_regra_w,
		nr_seq_estrut_mat_reg_w,
		nr_seq_grupo_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		-- Verificar se o material esta dentro da estrutura de material da regra
		if	((coalesce(nr_seq_estrut_mat_reg_w::text, '') = '') or (pls_obter_se_estruturas_mat( nr_seq_estrut_mat_reg_w, nr_seq_material_w) = 'S')) and
			((coalesce(nr_seq_grupo_material_w::text, '') = '') or (pls_se_grupo_preco_material( nr_seq_grupo_material_w, nr_seq_material_w) = 'S'))then
			select	max(ds_valor)
			into STRICT	ds_retorno_w
			from	pls_fat_regra_valor_mat
			where	nr_seq_regra = nr_seq_regra_w;
		end if;

		end;
	end loop;
	close C02;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_campo_fat_xml ( nr_seq_campo_p pls_fat_regra_campo.nr_seq_campo%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ds_valor_original_p text ) FROM PUBLIC;

