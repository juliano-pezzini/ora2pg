-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_obriga_just_proc (nr_prescricao_p bigint, nr_seq_exame_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_prev_execucao_p timestamp, ds_justificativa_p text, cd_material_exame_p text, cd_setor_atendimento_p bigint, cd_intervalo_p text) RETURNS varchar AS $body$
DECLARE


ie_retorno_w	varchar(1);
cd_especialidade_proced_w	integer;
cd_setor_proced_w		integer;
qt_procedimento_w		double precision;
nr_seq_grupo_exame_w		bigint;
cd_area_procedimento_w		integer;
cd_grupo_procedimento_w		bigint;
nr_seq_subgrupo_w		bigint;
cd_estab_prescr_w		integer;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_tipo_atendimento_w		smallint;
cd_setor_prescricao_w		integer;
cd_tipo_convenio_w		smallint;
cd_tipo_procedimento_w		bigint;
cd_perfil_w			bigint;
cd_plano_convenio_w		varchar(10);
ie_erro_autorizacao_w		varchar(255);
ie_regra_plano_w		varchar(2);
nr_seq_regra_plano_w		bigint := null;
cd_pessoa_atend_w		varchar(10);
nr_atendimento_w		prescr_medica.nr_atendimento%type;
dt_prescricao_w			prescr_medica.dt_prescricao%type;
ie_glosa_w			regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w		regra_ajuste_proc.nr_sequencia%type;
c01 CURSOR FOR
SELECT	Obter_Regra_obrig_proc(nr_sequencia, ie_tipo_atendimento_w, cd_material_exame_p )
from	regra_indic_clinica_obrig
where	coalesce(nr_seq_exame_lab,coalesce(nr_seq_exame_p,0))		= coalesce( nr_seq_exame_p,0)
and	coalesce(nr_seq_grupo_lab,coalesce(nr_seq_grupo_exame_w,0))	= coalesce( nr_seq_grupo_exame_w,0)
and	coalesce(nr_seq_exame_interno,coalesce(nr_seq_proc_interno_p,0))	= coalesce( nr_seq_proc_interno_p,0)
and	coalesce(cd_area_procedimento,coalesce(cd_area_procedimento_w,0))	= coalesce( cd_area_procedimento_w,0)
and	coalesce(cd_especialidade,coalesce(cd_especialidade_proced_w,0))	= coalesce( cd_especialidade_proced_w,0)
and	coalesce(cd_grupo_proc,coalesce(cd_grupo_procedimento_w,0))	= coalesce( cd_grupo_procedimento_w,0)
and	coalesce(cd_procedimento,coalesce(cd_procedimento_p,0))		= coalesce( cd_procedimento_p,0)
and	coalesce(ie_origem_proced,coalesce(ie_origem_proced_p,0))		= coalesce( ie_origem_proced_p,0)
and	coalesce(cd_intervalo,coalesce(cd_intervalo_p,0))			= coalesce( cd_intervalo_p,0)
and	coalesce(nr_seq_subgrupo,nr_seq_subgrupo_w)			= nr_seq_subgrupo_w
and	coalesce(cd_perfil,coalesce(cd_perfil_w,0))			= coalesce(cd_perfil_w,0)
and	coalesce(cd_setor_prescricao,coalesce(cd_setor_prescricao_w,0))	= coalesce( cd_setor_prescricao_w,0)
and	coalesce(cd_setor_executor,coalesce(cd_setor_atendimento_p,0))	= coalesce( cd_setor_atendimento_p,0)
and	coalesce(cd_tipo_procedimento, coalesce(cd_tipo_procedimento_w,0)) = coalesce( cd_tipo_procedimento_w,0)
and	coalesce(ie_tipo_convenio, coalesce(cd_tipo_convenio_w,0))	= coalesce( cd_tipo_convenio_w,0)
and coalesce(cd_convenio, coalesce(cd_convenio_w, 0)) = coalesce(cd_convenio_w,0)
and	cd_estabelecimento					= cd_estab_prescr_w
and	((coalesce(hr_prev_inicial::text, '') = '') or (to_char(dt_prev_execucao_p,'hh24:mi')	>= substr(hr_prev_inicial,1,5)))
and	((coalesce(hr_prev_final::text, '') = '') or (to_char( dt_prev_execucao_p,'hh24:mi')	<= substr(hr_prev_final,1,5)))
and	coalesce(ie_campo_obriga,'0') = '6'
and	((coalesce(ie_autorizacao,'N') = 'N') or (coalesce(ie_regra_plano_w,'1') = '5'))
order by coalesce(cd_setor_prescricao,99999) desc;


BEGIN

cd_perfil_w := wheb_usuario_pck.get_cd_perfil;

select	max(c.cd_especialidade),
	max(a.cd_estabelecimento),
	max(c.cd_area_procedimento),
	max(c.cd_grupo_proc),
	max(a.cd_setor_atendimento),
	max(c.cd_tipo_procedimento),
	max(a.nr_atendimento),
	max(a.dt_prescricao),	
	max(a.cd_pessoa_fisica),
	max(d.cd_setor_atendimento),
	max(d.qt_procedimento)	
into STRICT	cd_especialidade_proced_w,
	cd_estab_prescr_w,
	cd_area_procedimento_w,
	cd_grupo_procedimento_w,
	cd_setor_prescricao_w,
	cd_tipo_procedimento_w,
	nr_atendimento_w,
	dt_prescricao_w,	
	cd_pessoa_atend_w,
	cd_setor_proced_w,
	qt_procedimento_w
from	Estrutura_Procedimento_v c,
	prescr_procedimento d,
	prescr_medica a
where	c.cd_procedimento	= cd_procedimento_p
and	c.ie_origem_proced		= ie_origem_proced_p
and	a.nr_prescricao			= nr_prescricao_p
and	d.nr_prescricao 		= a.nr_prescricao
and	c.cd_procedimento       = d.cd_procedimento
and	c.ie_origem_proced      = d.ie_origem_proced;


ie_tipo_atendimento_w	:= obter_tipo_atendimento(nr_atendimento_w);
nr_seq_grupo_exame_w	:= obter_grupo_exame_lab(nr_seq_exame_p);
nr_seq_subgrupo_w	:= coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p,ie_origem_proced_p,'C','S'),'S'),1,10),0);
cd_convenio_w		:= obter_convenio_atendimento(nr_atendimento_w);
cd_tipo_convenio_w	:= Obter_Tipo_Convenio(cd_convenio_w);
cd_plano_convenio_w	:= substr(obter_dados_categ_conv(nr_atendimento_w,'P'),1,10);
cd_categoria_w		:= substr(obter_categoria_atendimento(nr_atendimento_w),1,10);


begin
	SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w,   --ok
				cd_procedimento_p,  --ok
				ie_origem_proced_p,  --ok
				dt_prescricao_w,  --ok
				qt_procedimento_w, ie_tipo_atendimento_w,  --ok
				cd_plano_convenio_w,  --ok
				null,  -- ok
				ie_erro_autorizacao_w,  --ver
				cd_setor_proced_w, nr_seq_exame_p,  --ok
				ie_regra_plano_w,   --ok
				null,   --ok
				nr_seq_regra_plano_w,  --OK
				nr_seq_proc_interno_p,  --ok
				cd_categoria_w,  --ok
				cd_estab_prescr_w,  --ok
				null, null, cd_pessoa_atend_w,  --ok
				ie_glosa_w, nr_seq_regra_preco_W) INTO STRICT 
				ie_erro_autorizacao_w, 
				ie_regra_plano_w, 
				nr_seq_regra_plano_w, 
				ie_glosa_w, nr_seq_regra_preco_W;
exception
when others then
	nr_seq_regra_plano_w := null;
end;		

open C01;
loop
fetch C01 into	
	ie_retorno_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_retorno_w := ie_retorno_w;
	end;
end loop;
close C01;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_obriga_just_proc (nr_prescricao_p bigint, nr_seq_exame_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_prev_execucao_p timestamp, ds_justificativa_p text, cd_material_exame_p text, cd_setor_atendimento_p bigint, cd_intervalo_p text) FROM PUBLIC;

