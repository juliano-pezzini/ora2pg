-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_material_tuss_int_opme ( nr_seq_agenda_p bigint, cd_material_p bigint, ie_opcao_p text ) RETURNS varchar AS $body$
DECLARE


cd_material_tuss_w       material_autorizado.cd_material_tuss%type;
ds_material_tuss_w       material_autorizado.ds_material_tuss%type;
ie_origem_preco_w        material_autorizado.ie_origem_preco%type;
cd_cgc_fabricante_w      material_autorizado.cd_cgc_fabricante%type;
nr_seq_marca_w           material_autorizado.nr_seq_marca%type;
nr_seq_tuss_mat_item_w   material_tuss.nr_seq_tuss_mat_item%type;
cd_convenio_w            autorizacao_convenio.cd_convenio%type;
nr_atendimento_w         autorizacao_convenio.nr_atendimento%type;
cd_categoria_w           agenda_paciente.cd_categoria%type;
ie_tipo_atendimento_w    atendimento_paciente.ie_tipo_atendimento%type;
cd_estabelecimento_w     estabelecimento.cd_estabelecimento%type;
ds_retorno_w             varchar(255);
		

BEGIN

select max(b.cd_material_tuss),
       max(b.ds_material_tuss),
       coalesce(a.cd_estabelecimento,(obter_dados_autor_convenio(a.nr_sequencia, 'E'))::numeric ),
       a.cd_convenio,
       substr(obter_dados_autor_convenio(a.nr_sequencia,'CC'),1,10),
       (substr(obter_tipo_atend_autor(a.nr_atendimento,a.nr_seq_agenda,a.nr_seq_agenda_consulta,a.nr_seq_age_integ,a.nr_seq_paciente_setor,'C'),1,1))::numeric ,
       max(b.ie_origem_preco),
       max(b.cd_cgc_fabricante),
       max(b.nr_seq_marca),
       a.nr_atendimento
into STRICT   cd_material_tuss_w,
       ds_material_tuss_w,
       cd_estabelecimento_w,
       cd_convenio_w,
       cd_categoria_w,
       ie_tipo_atendimento_w,
       ie_origem_preco_w,
       cd_cgc_fabricante_w,
       nr_seq_marca_w,
       nr_atendimento_w
from   autorizacao_convenio a,
       material_autorizado b
where  a.nr_seq_agenda = nr_seq_agenda_p
and    b.nr_sequencia_autor = a.nr_sequencia
and    b.cd_material = cd_material_p
and    (b.cd_material_tuss IS NOT NULL AND b.cd_material_tuss::text <> '')
group by coalesce(a.cd_estabelecimento,(obter_dados_autor_convenio(a.nr_sequencia, 'E'))::numeric ),
         a.cd_convenio,
         substr(obter_dados_autor_convenio(a.nr_sequencia,'CC'),1,10),
         (substr(obter_tipo_atend_autor(a.nr_atendimento,a.nr_seq_agenda,a.nr_seq_agenda_consulta,a.nr_seq_age_integ,a.nr_seq_paciente_setor,'C'),1,1))::numeric ,
         a.nr_atendimento;

if (coalesce(cd_material_tuss_w::text, '') = '' and coalesce(ds_material_tuss_w::text, '') = '') then

    SELECT * FROM define_material_tuss_autor(cd_estabelecimento_w, cd_material_p, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, ie_origem_preco_w, clock_timestamp(), cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w, cd_cgc_fabricante_w, nr_seq_marca_w, nr_atendimento_w) INTO STRICT cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w;

end if;

if (ie_opcao_p = 'C') then
    ds_retorno_w := cd_material_tuss_w;
elsif (ie_opcao_p = 'D') then
    ds_retorno_w := ds_material_tuss_w;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_material_tuss_int_opme ( nr_seq_agenda_p bigint, cd_material_p bigint, ie_opcao_p text ) FROM PUBLIC;

