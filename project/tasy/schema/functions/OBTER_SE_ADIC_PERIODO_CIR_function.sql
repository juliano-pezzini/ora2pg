-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_adic_periodo_cir (dt_inicio_cirurgia_p timestamp, dt_final_cirurgia_p timestamp, dt_inicio_regra_p timestamp, dt_final_regra_p timestamp, dt_procedimento_p timestamp) RETURNS varchar AS $body$
DECLARE

			
ie_periodo_adic_w		varchar(1);
qt_min_cirurgia_w		bigint;
qt_min_cir_dentro_periodo_w	bigint;
qt_min_cir_fora_periodo_w	bigint;

dt_inicio_regra_inicio_cir_w	timestamp:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_inicio_cirurgia_p,clock_timestamp()), coalesce(to_char(dt_inicio_regra_p,'hh24:mi:ss'), '00:00:01'));
dt_inicio_regra_final_cir_w	timestamp:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_final_cirurgia_p,clock_timestamp()), coalesce(to_char(dt_inicio_regra_p,'hh24:mi:ss'), '00:00:01'));
dt_inicio_regra_procedimento_w	timestamp:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_procedimento_p,clock_timestamp()), coalesce(to_char(dt_inicio_regra_p,'hh24:mi:ss'), '00:00:01'));

dt_final_regra_inicio_cir_w	timestamp:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_inicio_cirurgia_p,clock_timestamp()), coalesce(to_char(dt_final_regra_p,'hh24:mi:ss'), '00:00:01'));
dt_final_regra_final_cir_w	timestamp:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_final_cirurgia_p,clock_timestamp()), coalesce(to_char(dt_final_regra_p,'hh24:mi:ss'), '00:00:01'));
dt_final_regra_procedimento_w	timestamp:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_procedimento_p,clock_timestamp()), coalesce(to_char(dt_final_regra_p,'hh24:mi:ss'), '00:00:01'));



BEGIN
/*
Interucoes Gerais da CBHPM

O Horario de emergencia  das 19:00 as 07:00 do dia seguinte (Dias uteis) e sabados, domingos e feriados (qualquer horario).
Para os finais de semana e feriados nao teria nenhuma duvida e nao precisamos nos preocupar com esse item, porem para os dias de semana, no Tasy teremos sempre 2 regras 
19:00 as 00:00 e 00:01 ate 07:00 hrs.

Item 2.1.3  = Procedimento cirurgico iniciado no periodo de cobranca normal e concluido (finalizado) no periodo de urgencia/emergencia, o sistema deve calcular o tempo de execucao em cada periodo (normal e urgencia/emergencia). 
Se o maior tempo do procedimento coincidir com periodo de urgencia/emergencia (= adicional de 30%).
*/
ie_periodo_adic_w:= 'N';

--Calcular o tempo em minutos da cirugia
qt_min_cirurgia_w:= (dt_final_cirurgia_p - dt_inicio_cirurgia_p) * 1440;


if (dt_inicio_cirurgia_p < dt_inicio_regra_inicio_cir_w) and   --Verificar se iniciou fora do periodo
	(dt_final_cirurgia_p > dt_inicio_regra_final_cir_w) and (dt_final_cirurgia_p < dt_final_regra_final_cir_w) then --Verificar se terminou dentro do periodo 
	
	--Calcula o tempo em minutos dentro do periodo
	qt_min_cir_dentro_periodo_w:=	(dt_final_cirurgia_p - dt_inicio_regra_final_cir_w) * 1440;
	
	--Calcula o tempo em minutos fora do periodo
	qt_min_cir_fora_periodo_w  :=	(dt_inicio_regra_inicio_cir_w - dt_inicio_cirurgia_p) * 1440;
	
	if (qt_min_cir_dentro_periodo_w >= qt_min_cir_fora_periodo_w) then
		ie_periodo_adic_w:= 'S';
	end if;
	
elsif (dt_inicio_cirurgia_p IS NOT NULL AND dt_inicio_cirurgia_p::text <> '') and (dt_inicio_cirurgia_p > dt_inicio_regra_inicio_cir_w) and (dt_inicio_cirurgia_p < dt_final_regra_inicio_cir_w) then  --Verificar se iniciou dentro do periodo

	/*
	Importante resalltar que de acordo com orientacao na OS 766071,  historico do dia 08/10/2014 08:47:12, 
	Se a cirurgia iniciar as 05:00 da manha e terminar as 08:00 da manha,  se considerar o que diz no item2.1.3, o procedimento nao comecou em um periodo normal, e nem terminou em um periodo de urgencia, logo o item estaria descartado e nao seria cobrado o adicional, pelo entendimento que tivemos.
	Porem o cliente justifica e responde que:
	RESP: NESSE CASO COMO INICIOU DENTRO DO PERIODO DE URGeNCIA (05:00H), INDEPENDENTE DO TERMINO, PODE INCLUIR O ADICIONAL DE 30%. QUALQUER DIVERGeNCIA SERa TRATADO PELA AUDITORIA. 
	*/
	
	ie_periodo_adic_w:= 'S';
	
	
elsif (coalesce(dt_inicio_cirurgia_p::text, '') = '') and (dt_procedimento_p IS NOT NULL AND dt_procedimento_p::text <> '') and (dt_procedimento_p > dt_inicio_regra_procedimento_w) and (dt_procedimento_p < dt_final_regra_procedimento_w) then  --Verificar se iniciou dentro do periodo

	/*
	Importante resalltar que de acordo com orientacao na OS 766071,  historico do dia 08/10/2014 08:47:12, 
	Se a cirurgia iniciar as 05:00 da manha e terminar as 08:00 da manha,  se considerar o que diz no item2.1.3, o procedimento nao comecou em um periodo normal, e nem terminou em um periodo de urgencia, logo o item estaria descartado e nao seria cobrado o adicional, pelo entendimento que tivemos.
	Porem o cliente justifica e responde que:
	RESP: NESSE CASO COMO INICIOU DENTRO DO PERIODO DE URGeNCIA (05:00H), INDEPENDENTE DO TERMINO, PODE INCLUIR O ADICIONAL DE 30%. QUALQUER DIVERGeNCIA SERa TRATADO PELA AUDITORIA. 
	*/
	
	ie_periodo_adic_w:= 'S';
	
end if;	


return	ie_periodo_adic_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_adic_periodo_cir (dt_inicio_cirurgia_p timestamp, dt_final_cirurgia_p timestamp, dt_inicio_regra_p timestamp, dt_final_regra_p timestamp, dt_procedimento_p timestamp) FROM PUBLIC;

