-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_total_darf_princ ( nr_seq_darf_p bigint) RETURNS bigint AS $body$
DECLARE

 
contador_perdcomp_w		smallint;
cd_estabelecimento_w		smallint;
ie_permite_juros_multas_tit_w	varchar(1);
nm_usuario_w			varchar(15);
vl_juros_titulo_w		double precision;
vl_multa_titulo_w		double precision;	
vl_titulo_w			double precision;
vl_juros_w			double precision;
vl_multa_w			double precision;
vl_perdcomp_w			double precision;


BEGIN 
select	nm_usuario, 
	cd_estabelecimento 
into STRICT	nm_usuario_w, 
	cd_estabelecimento_w 
from	darf 
where	nr_sequencia	= nr_seq_darf_p;
 
ie_permite_juros_multas_tit_w := obter_param_usuario(5500, 23, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_permite_juros_multas_tit_w);
 
if (ie_permite_juros_multas_tit_w <> 'S') then 
	select	coalesce(vl_juros, 0), 
		coalesce(vl_multa, 0) 
	into STRICT	vl_juros_w, 
		vl_multa_w 
	from	darf 
	where	nr_sequencia	= nr_seq_darf_p;
 
	select	sum(coalesce((SUBSTR(obter_dados_tit_pagar(a.nr_titulo,'V'),1,200))::numeric ,0)) --+ nvl(vl_juros_w,0) + nvl(vl_multa_w,0) 
	into STRICT	vl_titulo_w 
	from	darf_titulo_pagar	a, 
		titulo_pagar		b 
	where	a.nr_titulo	= b.nr_titulo 
	and	nr_seq_darf	= nr_seq_darf_p;
	--group by nvl(vl_juros_w,0), 
	--	nvl(vl_multa_w,0); 
		 
	select 	count(nr_sequencia) 
	into STRICT	contador_perdcomp_w 
	from 	darf_perdcomp 
	where  nr_seq_darf	= nr_seq_darf_p;
	 
	if (contador_perdcomp_w > 0) then 
		select	sum(coalesce(vl_perdcomp,0))  
		into STRICT	vl_perdcomp_w 
		from	darf_perdcomp 
		where	nr_seq_darf	= nr_seq_darf_p;
 
		vl_titulo_w	:= vl_titulo_w - vl_perdcomp_w;
	end if;
	 
	return vl_titulo_w;
else 
	select	coalesce(vl_juros, 0), 
		coalesce(vl_multa, 0) 
	into STRICT	vl_juros_w, 
		vl_multa_w 
	from	darf 
	where	nr_sequencia	= nr_seq_darf_p;
 
	select	sum(coalesce(vl_saldo_juros,0)), 
		sum(coalesce(vl_saldo_multa,0)) 
	into STRICT	vl_juros_titulo_w, 
		vl_multa_titulo_w 
	from	titulo_pagar p 
	where	nr_titulo in (SELECT	nr_titulo 
				from	darf_titulo_pagar 
				where	nr_seq_darf	= nr_seq_darf_p);
 
	select	sum(coalesce((SUBSTR(obter_dados_tit_pagar(a.nr_titulo,'V'),1,200))::numeric ,0)) + 
		coalesce(vl_juros_w,0) + 
		coalesce(vl_multa_w,0) + 
		coalesce(vl_juros_titulo_w,0) + 
		coalesce(vl_multa_titulo_w,0) 
	into STRICT	vl_titulo_w 
	from	darf_titulo_pagar	a, 
		titulo_pagar		b 
	where	a.nr_titulo	= b.nr_titulo 
	and	nr_seq_darf	= nr_seq_darf_p;
	 
 
	select 	count(nr_sequencia) 
	into STRICT	contador_perdcomp_w 
	from 	darf_perdcomp 
	where  nr_seq_darf	= nr_seq_darf_p;
	 
	if (contador_perdcomp_w > 0) then 
		select sum(coalesce(vl_perdcomp,0))  
		into STRICT  vl_perdcomp_w 
		from  darf_perdcomp 
		where  nr_seq_darf	= nr_seq_darf_p;
		 
		vl_titulo_w	:= vl_titulo_w - vl_perdcomp_w;
	end if;
	 
	return vl_titulo_w;
end if;			
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_total_darf_princ ( nr_seq_darf_p bigint) FROM PUBLIC;

