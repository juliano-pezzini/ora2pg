-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_infos_aud_pendentes (ie_opcao_p text, ie_opcao_informacao_p text, nr_seq_grupo_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_segurado_p text, ie_tipo_processo_p text, ie_status_p text) RETURNS varchar AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter dados do segurado
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
	ie_opcao_informacao_p
	Q - Quantidade de analise
	N - Numero do grupo

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */qt_analises_w		bigint;
qt_tempo_analises_w 	varchar(255);
nr_grupo_w		pls_auditoria_grupo.nr_seq_grupo%type;
ds_retorno_w		varchar(255);
ie_tipo_processo_w	pls_auditoria.ie_tipo_processo%type;
ie_status_w		pls_auditoria.ie_status%type;


BEGIN

ie_tipo_processo_w 	:= coalesce(ie_tipo_processo_p, 'X');
ie_status_w		:= coalesce(ie_status_p, 'X');

	if (ie_opcao_p = 1) then
		--'N analises pendentes'
		select 	count(*)
		into STRICT 	qt_analises_w
		from 	pls_auditoria a
		where 	ie_status not in ('C', 'F')
		and	ie_status_w in (a.ie_status, 'X')
		and	ie_tipo_processo_w in (a.ie_tipo_processo, 'X')
		and (coalesce(ie_tipo_segurado_p::text, '') = '' or ie_tipo_segurado_p = pls_obter_dados_segurado(a.nr_seq_segurado, 'TP'))
		and	pkg_date_utils.start_of(trunc(a.dt_auditoria), 'DAY') between	pkg_date_utils.start_of(dt_inicio_p,'DAY') and pkg_date_utils.end_of(dt_fim_p, 'DAY');

	elsif (ie_opcao_p = 2) then
		--'N analises pendentes por grupo'
		select	b.nr_seq_grupo,
			count(a.nr_sequencia)
		into STRICT	nr_grupo_w,
			qt_analises_w
		from 	pls_auditoria a,
			pls_auditoria_grupo b
		where 	a.nr_sequencia = b.nr_seq_auditoria
   		and     b.nr_seq_grupo = nr_seq_grupo_p
		and 	a.ie_status not in ('C', 'F')
		and	ie_status_w in (a.ie_status, 'X')
		and	ie_tipo_processo_w in (a.ie_tipo_processo, 'X')
		and (coalesce(ie_tipo_segurado_p::text, '') = '' or ie_tipo_segurado_p = pls_obter_dados_segurado(a.nr_seq_segurado, 'TP'))
		and	pkg_date_utils.start_of(trunc(a.dt_auditoria), 'DAY') between	pkg_date_utils.start_of(dt_inicio_p,'DAY') and pkg_date_utils.end_of(dt_fim_p, 'DAY')
		and     coalesce(b.dt_liberacao::text, '') = ''
		and     b.nr_seq_ordem in ( SELECT  min(x.nr_seq_ordem)
					    from    pls_auditoria_grupo x
					    where   x.nr_seq_auditoria = a.nr_sequencia
					    and     coalesce(x.dt_liberacao::text, '') = '')
		group by b.nr_seq_grupo
		order by b.nr_seq_grupo;

	elsif (ie_opcao_p = 3) then
		-- 'N Analises Assumidas Pendentes Total',
		select 	count(*)
    		into STRICT qt_analises_w
		from 	pls_auditoria a
		where 	a.ie_status not in ('C', 'F')
		and	ie_status_w in (a.ie_status, 'X')
		and	ie_tipo_processo_w in (a.ie_tipo_processo, 'X')
		and (coalesce(ie_tipo_segurado_p::text, '') = '' or ie_tipo_segurado_p = pls_obter_dados_segurado(a.nr_seq_segurado, 'TP'))
		and	pkg_date_utils.start_of(trunc(a.dt_auditoria), 'DAY') between	pkg_date_utils.start_of(dt_inicio_p,'DAY') and pkg_date_utils.end_of(dt_fim_p, 'DAY')
		and    exists (	SELECT  1
				from    pls_auditoria_grupo b
				where   b.nr_seq_auditoria = a.nr_sequencia
				and     b.nr_seq_grupo = nr_seq_grupo_p
				and     coalesce(b.dt_liberacao::text, '') = ''
				and     b.nr_seq_ordem in ( select  min(x.nr_seq_ordem)
							    from    pls_auditoria_grupo x
							    where   x.nr_seq_auditoria = a.nr_sequencia
							    and     coalesce(x.dt_liberacao::text, '') = ''));

	elsif (ie_opcao_p = 4) then
		-- 'N Analises Assumidas Pendentes Por Grupo',
		select	b.nr_seq_grupo,
			count(a.nr_sequencia)
		into STRICT	nr_grupo_w,
			qt_analises_w
		from 	pls_auditoria a,
			pls_auditoria_grupo 	b
		where 	a.nr_sequencia = b.nr_seq_auditoria
		and     b.nr_seq_grupo = nr_seq_grupo_p
		and 	a.ie_status not in ('C', 'F')
		and	ie_status_w in (a.ie_status, 'X')
		and	ie_tipo_processo_w in (a.ie_tipo_processo, 'X')
		and (coalesce(ie_tipo_segurado_p::text, '') = '' or ie_tipo_segurado_p = pls_obter_dados_segurado(a.nr_seq_segurado, 'TP'))
		and	pkg_date_utils.start_of(trunc(a.dt_auditoria), 'DAY') between	pkg_date_utils.start_of(dt_inicio_p,'DAY') and pkg_date_utils.end_of(dt_fim_p, 'DAY')
		and	coalesce(b.dt_liberacao::text, '') = ''
		and     b.nr_seq_ordem in ( SELECT  min(x.nr_seq_ordem)
					    from    pls_auditoria_grupo x
					    where   x.nr_seq_auditoria = a.nr_sequencia
					    and     coalesce(x.dt_liberacao::text, '') = '')
		and	(b.nm_usuario_exec IS NOT NULL AND b.nm_usuario_exec::text <> '')
		group by b.nr_seq_grupo		
		order by b.nr_seq_grupo;

	elsif (ie_opcao_p = 5) then
		-- 'N Analises Nao Assumidas Pendentes Total', 
		select 	count(*)
		into STRICT	qt_analises_w 
		from 	pls_auditoria a
		where 	a.ie_status not in ('C', 'F')
		and	ie_status_w in (a.ie_status, 'X')
		and	ie_tipo_processo_w in (a.ie_tipo_processo, 'X')
		and (coalesce(ie_tipo_segurado_p::text, '') = '' or ie_tipo_segurado_p = pls_obter_dados_segurado(a.nr_seq_segurado, 'TP'))
		and	pkg_date_utils.start_of(trunc(a.dt_auditoria), 'DAY') between	pkg_date_utils.start_of(dt_inicio_p,'DAY') and pkg_date_utils.end_of(dt_fim_p, 'DAY')
		and    exists (	SELECT  1
				from    pls_auditoria_grupo b
				where   b.nr_seq_auditoria = a.nr_sequencia
				and     b.nr_seq_grupo = nr_seq_grupo_p
				and     coalesce(b.dt_liberacao::text, '') = ''
				and     b.nr_seq_ordem in ( select  min(x.nr_seq_ordem)
							    from    pls_auditoria_grupo x
							    where   x.nr_seq_auditoria = a.nr_sequencia
							    and     coalesce(x.dt_liberacao::text, '') = ''));

	elsif (ie_opcao_p = 6) then
		-- 'N Analises Nao Assumidas Pendentes Por Grupo',
		select	b.nr_seq_grupo,
			count(a.nr_sequencia)
		into STRICT	nr_grupo_w,
			qt_analises_w
		from 	pls_auditoria a,
			pls_auditoria_grupo 	b
		where 	a.nr_sequencia = b.nr_seq_auditoria
		and     b.nr_seq_grupo = nr_seq_grupo_p
		and 	a.ie_status not in ('C', 'F')
		and	ie_status_w in (a.ie_status, 'X')
		and	ie_tipo_processo_w in (a.ie_tipo_processo, 'X')
		and (coalesce(ie_tipo_segurado_p::text, '') = '' or ie_tipo_segurado_p = pls_obter_dados_segurado(a.nr_seq_segurado, 'TP'))
		and	pkg_date_utils.start_of(trunc(a.dt_auditoria), 'DAY') between	pkg_date_utils.start_of(dt_inicio_p,'DAY') and pkg_date_utils.end_of(dt_fim_p, 'DAY')
		and	coalesce(b.dt_liberacao::text, '') = ''
		and     b.nr_seq_ordem in ( SELECT  min(x.nr_seq_ordem)
					    from    pls_auditoria_grupo x
					    where   x.nr_seq_auditoria = a.nr_sequencia
					    and     coalesce(x.dt_liberacao::text, '') = '')
		and	coalesce(b.nm_usuario_exec::text, '') = ''
		group by b.nr_seq_grupo		
		order by b.nr_seq_grupo;

	elsif (ie_opcao_p = 7) then
		-- "Tempo de Analise por grupo",
		select  pls_obter_qtd_tempo_aud(nr_seq_grupo_p, dt_inicio_p, dt_fim_p, 	ie_tipo_segurado_p, ie_tipo_processo_w, ie_status_w)
    		into STRICT    qt_tempo_analises_w
    		
    		order by nr_seq_grupo_p;

	/*elsif (ie_opcao_p = 8) then
		select 	substr(pls_obter_tempo_lib_auditor(a.nr_sequencia, b.nr_seq_auditoria), 1,10)
		from 	pls_auditoria 		a,
			pls_auditoria_grupo 	b
		where 	a.nr_sequencia = b.nr_seq_auditoria; -- "Tempo de analise total"*/
	end if;

	if (ie_opcao_informacao_p = 'Q') then
		ds_retorno_w := coalesce(to_char(qt_analises_w), '0');
	elsif (ie_opcao_informacao_p = 'N') then
		ds_retorno_w := to_char(nr_grupo_w);
  	elsif (ie_opcao_informacao_p = 'T') then
    		ds_retorno_w := qt_tempo_analises_w;
	end if;

	return ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_infos_aud_pendentes (ie_opcao_p text, ie_opcao_informacao_p text, nr_seq_grupo_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_segurado_p text, ie_tipo_processo_p text, ie_status_p text) FROM PUBLIC;

