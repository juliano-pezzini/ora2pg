-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_aprov_doc_total (nm_tabela_p text, nr_atendimento_p bigint, nr_cirurgia_p bigint, nr_seq_origem_p bigint default null) RETURNS bigint AS $body$
DECLARE


ds_comando_w varchar(4000);
key_column_w varchar(400);
collum_cirurgia_w varchar(400);
collum_atendimento_w varchar(400);
count_w bigint := 0;
count_approvanle_w  smallint := 0;
status_w  varchar(1) := 'A';


BEGIN

select count(*) into STRICT count_approvanle_w
from mult_aprov_item m, objeto_schematic o
where o.nr_sequencia = m.nr_seq_doc and nm_tabela = UPPER(nm_tabela_p);

if (count_approvanle_w = 0) then
    return 0;
end if;

select max(cols.column_name)
  into STRICT key_column_w
  from all_constraints cons, all_cons_columns cols
 where cols.table_name = nm_tabela_p
   and cons.constraint_type = 'P'
   and cons.constraint_name = cols.constraint_name;

select max(column_name)
  into STRICT collum_cirurgia_w
  from all_tab_cols
 where table_name = upper(nm_tabela_p)
   and column_name = 'NR_CIRURGIA';

select max(column_name)
  into STRICT collum_atendimento_w
  from all_tab_cols
 where table_name = upper(nm_tabela_p)
   and column_name = 'NR_ATENDIMENTO';


 ds_comando_w := 'select count(1) from documento_aprovacao d ';
 ds_comando_w := ds_comando_w || 'inner join ' || nm_tabela_p || ' a ';
 ds_comando_w := ds_comando_w || ' on d.nr_seq_origem = a.' || key_column_w;
 ds_comando_w := ds_comando_w || ' where d.nm_tabela_origem = ' || '''' || nm_tabela_p ||'''';

 if(collum_cirurgia_w IS NOT NULL AND collum_cirurgia_w::text <> '' AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '' AND collum_atendimento_w IS NOT NULL AND collum_atendimento_w::text <> '' AND nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	ds_comando_w := ds_comando_w || ' and ( a.nr_cirurgia = ' || nr_cirurgia_p || ' or a.nr_atendimento = ' || nr_atendimento_p ||')';
 elsif (collum_cirurgia_w IS NOT NULL AND collum_cirurgia_w::text <> '' AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
	ds_comando_w := ds_comando_w || ' and a.nr_cirurgia = ' || nr_cirurgia_p;
 elsif (collum_atendimento_w IS NOT NULL AND collum_atendimento_w::text <> '' AND nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	ds_comando_w := ds_comando_w || ' and a.nr_atendimento = ' || nr_atendimento_p;
 else
	ds_comando_w := ds_comando_w || ' and 0 > 1;';
 end if;

 if (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') then
    ds_comando_w := ds_comando_w || ' and d.nr_seq_origem =  ' || nr_seq_origem_p;
 end if;

 ds_comando_w := ds_comando_w || ' and d.ie_status <>  '||''''||'A'||'''';

 EXECUTE ds_comando_w into STRICT count_w;

return count_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_aprov_doc_total (nm_tabela_p text, nr_atendimento_p bigint, nr_cirurgia_p bigint, nr_seq_origem_p bigint default null) FROM PUBLIC;

