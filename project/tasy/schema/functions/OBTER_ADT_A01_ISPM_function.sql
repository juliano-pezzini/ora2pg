-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_adt_a01_ispm (nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


--PID / ADT_A01
nr_sequencia_pid_w		bigint;
cd_pessoa_fisica_w		varchar(64);
family_name_patient_w		varchar(64);
given_name_patient_w		varchar(64);
middleinitialorname_patient_w		varchar(64);
family_name_mother_w		varchar(64);
given_name_mother_w		varchar(64);
middleinitialorname_mother_w		varchar(64);
date_of_birth_w		 	varchar(30);
sex_w		 		varchar(64);
race_w		 		varchar(64);
street_address_w			varchar(64);
zip_code_w		 	varchar(20);
state_adress_w		 	varchar(64);
city_w		 		varchar(64);
country_w            			varchar(64);
telephone_number_w		varchar(64);
telecommunication_usecode_w	varchar(10);
email_address_w		 	varchar(64);
ie_estado_civil_w			varchar(15);
nr_atendimento_w			bigint;

--DG1 / ADT_A01
diagnosis_code_w 			varchar(10);
coding_system_w 			varchar(5);
diagnosis_description_w 		varchar(40);
dt_avaliacao_w 			varchar(10);
diagnosis_type_w 			varchar(5);

--PV1 / ADT_A01
patient_class_w 			varchar(20);
point_of_care_w 			varchar(120);
room_w 				varchar(255);
bed_w 				varchar(255);
facility_w 				varchar(120);
id_doctor_w 			varchar(10);
family_name_doctor_pep_w 		varchar(100);
given_name_doctor_pep_w 		varchar(100);
middlename_doctor_pep_w 		varchar(100);
family_name_doctor_eup_w 		varchar(100);
given_name_doctor_eup_w 		varchar(100);
middlename_doctor_eup_w 		varchar(100);
visit_number_w 			bigint;


BEGIN
declare
  json_aux_w   philips_json;
  ds_message_w text;

begin
  json_aux_w := philips_json();

select  a.cd_pessoa_fisica,
        substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_pf,lower(obter_desc_expressao(325926)))), 1, 64) family_name_patient,
        substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_pf,'nome')), 1, 64) given_name_patient,
        substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_pf,'restonome')), 1, 64) middleinitialorname_patient,
        substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_mae_pf,lower(obter_desc_expressao(325926)))), 1, 64) family_name_mother,
        substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_mae_pf,'nome')), 1, 64) given_name_mother,
        substr(elimina_acentuacao(obter_parte_nome_pf(a.nome_mae_pf,'restonome')), 1, 64) MiddleInitialOrName_Mother,
        a.data_nascto_pf Date_Of_Birth,
        sex,
        race,
        substr(elimina_acentuacao(street_address), 1, 64) street_address,
        substr(zip_code, 1, 16) zip_code,
        substr(elimina_acentuacao(state_adress), 1, 64) state_adress,
        substr(elimina_acentuacao(city), 1, 64) city,
        substr(elimina_acentuacao(country), 1, 64) country,
        substr(telephone_number, 1, 64) Telephone_Number,
        telecommunication_usecode,
        email_address,
        a.ie_estado_civil,
        nr_atendimento,
        nr_prontuario
into STRICT  cd_pessoa_fisica_w,
        family_name_patient_w,
        given_name_patient_w,
        middleinitialorname_patient_w,
        family_name_mother_w,
        given_name_mother_w,
        middleinitialorname_mother_w,
        date_of_birth_w,
        sex_w,
        race_w,
        street_address_w,
        zip_code_w,
        state_adress_w,
        city_w,
        country_w,
        telephone_number_w,
        telecommunication_usecode_w,
        email_address_w,
        ie_estado_civil_w,
        nr_atendimento_w,
        nr_sequencia_pid_w
from    (SELECT b.cd_pessoa_fisica,
    c.nm_pessoa_fisica nome_pf,
    obter_nome_mae_pf(b.cd_pessoa_fisica) nome_mae_pf,
    to_char(obter_data_nascto_pf(b.cd_pessoa_fisica), 'yyyymmdd') data_nascto_pf,
    coalesce(ie_sexo,'I') Sex,
    d.cd_raca_hl7 Race,
    (e.ds_endereco || CASE WHEN coalesce(e.nr_endereco::text, '') = '' THEN  ''  ELSE ',' || e.nr_endereco END  || CASE WHEN coalesce(e.ds_complemento::text, '') = '' THEN  ''  ELSE ',' || e.ds_complemento END ) street_address,
    e.cd_cep Zip_Code,
    substr(obter_compl_pf(e.cd_pessoa_fisica, e.ie_tipo_complemento, 'DS_UF'), 1, 50) state_adress,
    e.ds_municipio City,
    substr(obter_nome_pais(e.nr_seq_pais),1,20) Country,
    coalesce(obter_telefone_pf(b.cd_pessoa_fisica, 13), obter_telefone_pf(b.cd_pessoa_fisica, 12)) telephone_number,
    'HP' Telecommunication_UseCode,
    obter_email_pf(b.cd_pessoa_fisica) Email_Address,
    c.ie_estado_civil,
    b.nr_atendimento,
    c.nr_prontuario
        from    atendimento_paciente b,
                pessoa_fisica c
                left join cor_pele d on c.nr_seq_cor_pele = d.nr_sequencia
                left join compl_pessoa_fisica e ON (c.cd_pessoa_fisica = e.cd_pessoa_fisica and e.ie_tipo_complemento = 1)
        where b.cd_pessoa_fisica = c.cd_pessoa_fisica
			AND b.nr_atendimento = nr_atendimento_p) a;

SELECT
        'I' ,
        SUBSTR(ELIMINA_ACENTUACAO(a.Point_Of_Care),1,255) Point_Of_Care,
        SUBSTR(ELIMINA_ACENTUACAO(a.Room),1,255),
        SUBSTR(ELIMINA_ACENTUACAO(a.Bed),1,255),
        SUBSTR(ELIMINA_ACENTUACAO(a.Facility),1,255),
        CD_MEDICO_RESP,
        SUBSTR(ELIMINA_ACENTUACAO(obter_parte_nome_pf(a.NOME_MEDICO_PF_EUP,lower(obter_desc_expressao(325926)))), 1, 64),
        SUBSTR(ELIMINA_ACENTUACAO(obter_parte_nome_pf(a.NOME_MEDICO_PF_EUP,'nome')), 1, 64),
        SUBSTR(ELIMINA_ACENTUACAO(obter_parte_nome_pf(a.NOME_MEDICO_PF_EUP,'restonome')), 1, 64) ,
        a.NR_ATENDIMENTO
into STRICT  patient_class_w,
        point_of_care_w,
        room_w,
        bed_w,
        facility_w,
        id_doctor_w,
        family_name_doctor_eup_w,
        given_name_doctor_eup_w,
        middlename_doctor_eup_w,
        visit_number_w
FROM (SELECT obter_desc_setor_atend(Obter_Setor_Atendimento(c.NR_ATENDIMENTO)) Point_Of_Care,
        Obter_Unidade_Atendimento(c.NR_ATENDIMENTO, 'A', 'U') Room,
        Obter_Unidade_Atendimento(c.NR_ATENDIMENTO, 'A', 'UC') Bed,
        c.CD_ESTABELECIMENTO Facility,
        obter_nome_pf(c.CD_MEDICO_RESP) NOME_MEDICO_PF_EUP,
        c.NR_ATENDIMENTO,
        c.CD_MEDICO_RESP
FROM atendimento_paciente c
        WHERE c.nr_atendimento = nr_atendimento_p) a;

json_aux_w.put('MRN_CODE', nr_sequencia_pid_w);
json_aux_w.put('CD_PESSOA_FISICA',cd_pessoa_fisica_w);
json_aux_w.put('FAMILY_NAME_PATIENT',family_name_patient_w);
json_aux_w.put('GIVEN_NAME_PATIENT',given_name_patient_w);
json_aux_w.put('MIDDLEINITIALORNAME_PATIENT',middleinitialorname_patient_w);
json_aux_w.put('FAMILY_NAME_MOTHER',family_name_mother_w);
json_aux_w.put('GIVEN_NAME_MOTHER',given_name_mother_w);
json_aux_w.put('MIDDLEINITIALORNAME_MOTHER',middleinitialorname_mother_w);
json_aux_w.put('DT_MESSAGE',to_char(clock_timestamp(), 'yyyymmdd'));
json_aux_w.put('DATE_OF_BIRTH',date_of_birth_w);
json_aux_w.put('SEX',sex_w);
json_aux_w.put('RACE',race_w);
json_aux_w.put('STREET_ADDRESS',street_address_w);
json_aux_w.put('ZIP_CODE',zip_code_w);
json_aux_w.put('STATE_ADRESS',state_adress_w);
json_aux_w.put('CITY',city_w);
json_aux_w.put('COUNTRY',country_w);
json_aux_w.put('TELEPHONE_NUMBER',telephone_number_w);
json_aux_w.put('TELECOMMUNICATION_USECODE',telecommunication_usecode_w);
json_aux_w.put('EMAIL_ADDRESS',email_address_w);
json_aux_w.put('IE_ESTADO_CIVIL',ie_estado_civil_w);
json_aux_w.put('NR_ATENDIMENTO',coalesce(nr_atendimento_w,''));
json_aux_w.put('DIAGNOSIS_CODE',coalesce(diagnosis_code_w,''));
json_aux_w.put('CODING_SYSTEM',coalesce(coding_system_w,''));
json_aux_w.put('DIAGNOSIS_DESCRIPTION',coalesce(diagnosis_description_w,''));
json_aux_w.put('DT_AVALIACAO',coalesce(dt_avaliacao_w,''));
json_aux_w.put('DIAGNOSIS_TYPE',coalesce(diagnosis_type_w,''));
json_aux_w.put('POINT_OF_CARE',coalesce(point_of_care_w,''));
json_aux_w.put('ROOM',coalesce(room_w,''));
json_aux_w.put('BED',coalesce(bed_w,''));
json_aux_w.put('FACILITY',coalesce(facility_w,''));
json_aux_w.put('ID_DOCTOR',coalesce(id_doctor_w,''));
json_aux_w.put('FAMILY_NAME_DOCTOR_PEP',coalesce(family_name_doctor_pep_w,''));
json_aux_w.put('GIVEN_NAME_DOCTOR_PEP',coalesce(given_name_doctor_pep_w,''));
json_aux_w.put('MIDDLEINITIALORNAME_DOCTOR_PEP',coalesce(middlename_doctor_pep_w,''));
json_aux_w.put('FAMILY_NAME_DOCTOR_EUP',coalesce(family_name_doctor_eup_w,''));
json_aux_w.put('GIVEN_NAME_DOCTOR_EUP',coalesce(given_name_doctor_eup_w,''));
json_aux_w.put('MIDDLEINITIALORNAME_DOCTOR_EUP',coalesce(middlename_doctor_eup_w,''));
json_aux_w.put('VISIT_NUMBER',coalesce(visit_number_w,''));
json_aux_w.put('PATIENT_CLASS',coalesce(patient_class_w,''));
json_aux_w.put('NM_USUARIO_LIB',coalesce(OBTER_USUARIO_ATIVO,''));

dbms_lob.createtemporary(ds_message_w, TRUE);
json_aux_w.(ds_message_w);

return ds_message_w;
end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_adt_a01_ispm (nr_atendimento_p bigint) FROM PUBLIC;

