-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dose_maxima ( cd_material_p bigint, cd_unidade_medida_dose_p text, qt_dose_p bigint, nr_ocorrencia_p bigint, ie_via_aplicacao_p text, ie_agrupador_p bigint, qt_hora_aplicacao_p bigint, qt_min_aplicacao_p bigint, ie_acm_p text, ie_se_necessario_p text, nr_prescricao_p bigint, nr_sequencia_p bigint, ie_utiliza_horarios_p text, ds_horarios_p text, ie_urgencia_p text) RETURNS bigint AS $body$
DECLARE


cd_unidade_medida_consumo_w	varchar(30);
cd_unid_med_limite_w		varchar(30);
qt_limite_pessoa_w			double precision;
qt_limite_pessoa_ww			double precision;
qt_conversao_dose_w			double precision;
qt_conversao_dose_limite_w	double precision;
qt_dose_w					double precision;
qt_dose_ww					double precision;
qt_dose_limite_w			double precision;
cd_pessoa_fisica_w			varchar(30);
ie_dose_limite_w			varchar(15);
nr_ocorrencia_w				double precision;
nr_seq_agrupamento_w		bigint;
cd_prescritor_w				varchar(50);
cd_setor_atendimento_w		integer;
qt_regra_w					bigint;
qt_idade_w					bigint;
qt_idade_dia_w				double precision;
qt_idade_mes_w				double precision;
qt_peso_w					double precision;
nr_horas_validade_w			integer;
cd_estabelecimento_w		bigint;
nr_atendimento_w			bigint;
ie_consistiu_dose_w			varchar(50) := 'S';
ie_consistiu_dose_ww		varchar(50) := 'S';
qt_dose_retorno_w			double precision;
qt_tempo_item_w				bigint;
qt_dose_maxima_w			double precision := 0;
qt_dose_dia_w				double precision := 0;
qt_dose_dia_ww				double precision := 0;
dt_inicio_prescr_w			timestamp;
dt_validade_prescr_w		timestamp;
nr_ocorrencia_ww			prescr_material.nr_ocorrencia%type;
cd_unidade_medida_dose_w	prescr_material.cd_unidade_medida_dose%type;

c01 CURSOR FOR
	SELECT	coalesce(qt_limite_pessoa,0),
			coalesce(ie_dose_limite,'DOSE'),
			cd_unid_med_limite
	from	material_prescr
	where	cd_material = cd_material_p
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
	and		coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_p,0)) = coalesce(ie_via_aplicacao_p,0)
	and		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '')
	and		qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
	and		qt_idade_dia_w between coalesce(qt_idade_min_dia,0) and coalesce(qt_idade_max_dia,55000)
	and		qt_idade_mes_w between coalesce(qt_idade_min_mes,0) and coalesce(qt_idade_max_mes,55000)
	and		((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento = nr_seq_agrupamento_w))
	and		qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999)
	and		coalesce(cd_protocolo::text, '') = ''
	and		ie_tipo = '2'
	and 	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and		Obter_se_setor_regra_prescr(nr_sequencia, cd_setor_atendimento_w) = 'S'
	and		coalesce(ie_obedecer_limite,'N') = 'S'
	and		((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S'))
	and		((coalesce(cd_doenca_cid::text, '') = '') or (obter_se_cid_atendimento(nr_atendimento_w,cd_doenca_cid) = 'S'))
	and		(((coalesce(ie_tipo_item,'TOD') = 'SOL') and (ie_agrupador_p = 4)) or
			 ((coalesce(ie_tipo_item,'TOD') = 'OUT') and (ie_agrupador_p <> 4)) or (coalesce(ie_tipo_item,'TOD') = 'TOD'))
	order by	nr_sequencia,
				cd_especialidade;

c02 CURSOR FOR
	SELECT	coalesce(b.qt_dose,0),
			coalesce(b.nr_ocorrencia,0),
			coalesce(b.cd_unidade_medida_dose,'')
	FROM prescr_material b, prescr_medica a
LEFT OUTER JOIN setor_atendimento d ON (a.cd_setor_atendimento = d.cd_setor_atendimento)
WHERE a.nr_prescricao		= b.nr_prescricao  and a.nr_atendimento	= nr_atendimento_w and b.cd_material		= cd_material_p and ((b.nr_sequencia <> nr_sequencia_p and b.nr_prescricao = nr_prescricao_p) or b.nr_prescricao <> nr_prescricao_p) and coalesce(a.dt_suspensao::text, '') = '' and coalesce(b.ie_suspenso,'N')	= 'N' and a.dt_inicio_prescr between dt_inicio_prescr_w and dt_validade_prescr_w;


BEGIN

qt_dose_ww 		:= qt_dose_p;
nr_ocorrencia_w := nr_ocorrencia_p;

CALL Wheb_assist_pck.set_informacoes_usuario( Wheb_usuario_pck.get_cd_estabelecimento, obter_perfil_ativo, obter_usuario_ativo);

if (coalesce(cd_material_p,0) > 0) and (cd_unidade_medida_dose_p IS NOT NULL AND cd_unidade_medida_dose_p::text <> '') and (coalesce(qt_dose_ww,0) > 0) then
	begin

	select	max(cd_prescritor),
		coalesce(max(nr_horas_validade),24),
		max(cd_estabelecimento),
		max(cd_setor_atendimento),
		max(nr_atendimento),
		max(dt_inicio_prescr),
		max(dt_validade_prescr),
		coalesce(max((obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric ),0),
		coalesce(max(qt_peso),0),
		max(cd_pessoa_fisica)
	into STRICT	cd_prescritor_w,
			nr_horas_validade_w,
			cd_estabelecimento_w,
			cd_setor_atendimento_w,
			nr_atendimento_w,
			dt_inicio_prescr_w,
			dt_validade_prescr_w,
			qt_idade_w,
			qt_peso_w,
			cd_pessoa_fisica_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;

	select	max(nr_seq_agrupamento)
	into STRICT	nr_seq_agrupamento_w
	from	setor_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_w;

	select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA')),
			max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'M'))
	into STRICT	qt_idade_dia_w,
			qt_idade_mes_w
	from	pessoa_fisica b
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;

	select	max(cd_unidade_medida_consumo)
	into STRICT	cd_unidade_medida_consumo_w
	from	material
	where	cd_material	= cd_material_p;

	open c02;
	loop
	fetch c02 into
		qt_dose_dia_w,
		nr_ocorrencia_ww,
		cd_unidade_medida_dose_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

			if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then
				qt_dose_dia_ww := qt_dose_dia_ww + (qt_dose_dia_w * nr_ocorrencia_w);
			else
				begin
				select	coalesce(max(qt_conversao),1)
				into STRICT	qt_conversao_dose_w
				from	material_conversao_unidade
				where	cd_material		= cd_material_p
				and		cd_unidade_medida	= cd_unidade_medida_dose_w;
				exception
					when others then
						qt_conversao_dose_w	:= 1;
				end;

				qt_dose_dia_w := Dividir_18_6(trunc(Dividir_18_6(qt_dose_dia_w * 1000, qt_conversao_dose_w)), 1000);

				qt_dose_dia_ww := qt_dose_dia_ww + (qt_dose_dia_w * nr_ocorrencia_ww);
			end if;
		end;
	end loop;
	close c02;

	open c01;
	loop
	fetch c01 into
		qt_limite_pessoa_w,
		ie_dose_limite_w,
		cd_unid_med_limite_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (coalesce(qt_limite_pessoa_w::text, '') = '') then
			qt_limite_pessoa_ww := 0;
		else
			qt_limite_pessoa_ww := qt_limite_pessoa_w;
		end if;

		if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_p) then
			qt_conversao_dose_w	:= 1;
		else
			begin
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_dose_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_p
			and		cd_unidade_medida	= cd_unidade_medida_dose_p;
			exception
				when others then
					qt_conversao_dose_w	:= 1;
			end;
		end if;

		if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then
			qt_conversao_dose_limite_w	:= 1;
		else
			begin
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_dose_limite_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_p
			and		cd_unidade_medida	= cd_unid_med_limite_w;
			exception
				when others then
					qt_conversao_dose_limite_w	:= 1;
			end;
		end if;

		qt_dose_w			:= Dividir_18_6(trunc(Dividir_18_6(qt_dose_ww * 1000, qt_conversao_dose_w)), 1000);

		qt_dose_limite_w	:= Dividir_18_6(trunc(Dividir_18_6(qt_limite_pessoa_ww * 1000, qt_conversao_dose_limite_w)), 1000);

		if (ie_dose_limite_w = 'DIA') then


			if (ie_acm_p = 'N') and (ie_se_necessario_p = 'N') then

				ie_consistiu_dose_w	:= consiste_dose_periodo_ant(nr_atendimento_w,nr_prescricao_p,nr_sequencia_p,qt_dose_limite_w,'N',null,cd_material_p,qt_dose_p,cd_unidade_medida_dose_p,ds_horarios_p,ie_urgencia_p,'S');

				ie_consistiu_dose_ww	:= consiste_dose_periodo_dep(nr_atendimento_w,nr_prescricao_p,nr_sequencia_p,qt_dose_limite_w,'N',null,cd_material_p,qt_dose_p,cd_unidade_medida_dose_p,ds_horarios_p,ie_urgencia_p,'S');

				if (substr(ie_consistiu_dose_w,1,1) = 'S') then

					ie_consistiu_dose_w := ie_consistiu_dose_ww;
				elsif ((substr(ie_consistiu_dose_w,1,2) = 'NA') and (substr(ie_consistiu_dose_ww,1,2) = 'NA') and ((substr(ie_consistiu_dose_ww,7,25))::numeric  > (substr(ie_consistiu_dose_w,7,25))::numeric )) then

					ie_consistiu_dose_w := ie_consistiu_dose_ww;
				end if;

				if (substr(ie_consistiu_dose_w,1,1) = 'N') then

					qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);

					if (substr(ie_consistiu_dose_w,2,1) = 'A') then
						qt_dose_dia_ww := (substr(ie_consistiu_dose_w,7,25))::numeric;
						qt_dose_w	:= qt_dose_w + qt_dose_dia_ww;
					end if;
				end if;

			end if;

		elsif (ie_dose_limite_w = 'AT') then
			begin

			qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
			qt_dose_w	:= qt_dose_w + qt_dose_dia_ww;
			end;
		elsif (ie_dose_limite_w = 'PF') then

			qt_dose_w := qt_dose_w * coalesce(nr_ocorrencia_w,1);

			select	coalesce(sum(obter_dose_convertida(a.cd_material, a.qt_dose, a.cd_unidade_medida, cd_unidade_medida_consumo_w)),0)
			into STRICT	qt_dose_retorno_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao	= b.nr_prescricao
			and	a.cd_material	= cd_material_p
			and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.nr_prescricao <> nr_prescricao_p;

			qt_dose_w := qt_dose_retorno_w + qt_dose_w;
		elsif (qt_peso_w > 0) then
			if (ie_dose_limite_w = 'KG') then
				qt_dose_w	:= Dividir_18_6(qt_dose_w, coalesce(qt_peso_w,1));
			elsif (ie_dose_limite_w = 'KG/DIA') then
				begin

				qt_dose_w	:= Dividir_18_6(qt_dose_w, coalesce(qt_peso_w,1));
				qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
				qt_dose_w	:= qt_dose_w + qt_dose_dia_ww;
				end;
			elsif (ie_dose_limite_w = 'KG/D') then
				qt_dose_w	:= Dividir_18_6(qt_dose_w, coalesce(qt_peso_w,1));
				qt_dose_w	:= qt_dose_w + qt_dose_dia_ww;
			elsif (ie_dose_limite_w = 'KG/H') then

					if	((qt_hora_aplicacao_p > 0) or (qt_min_aplicacao_p > 0)) then
						qt_tempo_item_w := qt_hora_aplicacao_p + (qt_min_aplicacao_p/60);
						qt_dose_w := qt_dose_w / (qt_peso_w * qt_tempo_item_w);
					end if;
			elsif (ie_dose_limite_w = 'KG/MIN') then

					if	((qt_hora_aplicacao_p > 0) or (qt_min_aplicacao_p > 0)) then
						qt_tempo_item_w := (qt_hora_aplicacao_p * 60) + qt_min_aplicacao_p;
						qt_dose_w := qt_dose_w / (qt_peso_w * qt_tempo_item_w);
					end if;
			end if;
		end if;

		if	((substr(ie_consistiu_dose_w,1,1) = 'N') or
			 (((qt_dose_limite_w > 0) or (qt_limite_pessoa_w = 0)) and (round((qt_dose_limite_w)::numeric,2) < coalesce(round((qt_dose_w)::numeric,2),0)))) then

			if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then

				qt_dose_maxima_w := qt_dose_limite_w;
			else

				qt_dose_maxima_w := qt_dose_limite_w * qt_conversao_dose_w;
				qt_dose_dia_ww	 := qt_dose_dia_ww * qt_conversao_dose_w;
			end if;

			if (qt_peso_w > 0) and (qt_dose_maxima_w > 0) and
			   ((ie_dose_limite_w = 'KG/DIA') or (ie_dose_limite_w = 'KG') or (ie_dose_limite_w = 'KG/D')) then

				qt_dose_maxima_w := qt_dose_maxima_w * qt_peso_w;
			end if;

			if (ie_dose_limite_w <> 'DOSE') then
				qt_dose_maxima_w := qt_dose_maxima_w - qt_dose_dia_ww;
			end if;

			if (coalesce(qt_dose_maxima_w,0) = 0) then

				qt_dose_maxima_w := qt_dose_maxima_w - 1;
			elsif (coalesce(nr_ocorrencia_w,0) > 0) and (ie_dose_limite_w <> 'DOSE') then

				qt_dose_maxima_w := Dividir_18_6(qt_dose_maxima_w,nr_ocorrencia_w);
			end if;
		end if;
		end;
	end loop;
	close c01;
	end;
end if;

return round(qt_dose_maxima_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dose_maxima ( cd_material_p bigint, cd_unidade_medida_dose_p text, qt_dose_p bigint, nr_ocorrencia_p bigint, ie_via_aplicacao_p text, ie_agrupador_p bigint, qt_hora_aplicacao_p bigint, qt_min_aplicacao_p bigint, ie_acm_p text, ie_se_necessario_p text, nr_prescricao_p bigint, nr_sequencia_p bigint, ie_utiliza_horarios_p text, ds_horarios_p text, ie_urgencia_p text) FROM PUBLIC;

