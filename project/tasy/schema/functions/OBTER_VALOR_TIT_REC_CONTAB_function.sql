-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_tit_rec_contab ( nr_titulo_p bigint, cd_conta_contabil_p text, dt_referencia_p timestamp) RETURNS bigint AS $body$
DECLARE

 
vl_retorno_w			double precision :=0;
vl_classificacao_w		double precision :=0;
vl_titulo_original_w		double precision :=0;
vl_titulo_w			double precision :=0;
vl_saldo_w			double precision :=0;
vl_antecipacao_w		double precision :=0;
vl_contab_w			double precision :=0;
vl_total_mens_w			double precision :=0;
vl_coparticipacao_w		double precision;
qt_registro_w			bigint := 0;
ie_baixa_ant_referencia_w	bigint := 0;
nr_seq_segurado_w		bigint;
dt_liquidacao_w			timestamp;
dt_referencia_w			timestamp;
dt_contrato_w			timestamp;
dt_contabilizacao_w		timestamp;


BEGIN 
select	count(1) 
into STRICT	qt_registro_w 
from	titulo_receber_classif 
where	nr_titulo		= nr_titulo_p 
and	cd_conta_contabil	= cd_conta_contabil_p  LIMIT 1;
 
select	max(dt_liquidacao) 
into STRICT	dt_liquidacao_w 
from	titulo_receber 
where	nr_titulo 	= nr_titulo_p;
 
vl_saldo_w	:= pls_obter_saldo_titulo_receber(nr_titulo_p, coalesce(dt_referencia_p, clock_timestamp()), cd_conta_contabil_p);
 
if (coalesce(qt_registro_w,0) = 0) then 
	vl_retorno_w		:= vl_saldo_w;
else 
	select	coalesce(sum(vl_classificacao),0) 
	into STRICT	vl_classificacao_w 
	from	titulo_receber_classif 
	where	nr_titulo		= nr_titulo_p 
	and	cd_conta_contabil	= cd_conta_contabil_p;	
	 
	select	max(d.dt_contrato), 
		coalesce(max(b.vl_antecipacao),0), 
		max(b.dt_referencia), 
		max(c.dt_contabilizacao) 
	into STRICT	dt_contrato_w, 
		vl_antecipacao_w, 
		dt_referencia_w, 
		dt_contabilizacao_w 
	FROM pls_mensalidade b, titulo_receber a, pls_lote_mensalidade c
LEFT OUTER JOIN pls_contrato d ON (c.nr_seq_contrato = d.nr_sequencia)
WHERE b.nr_sequencia 	= a.nr_seq_mensalidade and c.nr_sequencia	= b.nr_seq_lote  and a.nr_titulo 	= nr_titulo_p;		
	 
	select coalesce(sum(e.vl_antecipacao),0) 
	into STRICT	vl_total_mens_w 
	from  pls_mensalidade_seg_item e, 
		pls_mensalidade_segurado d, 
		pls_lote_mensalidade  c, 
		pls_mensalidade     b, 
		titulo_receber     a 
	where  b.nr_sequencia = a.nr_seq_mensalidade 
	and   c.nr_sequencia = b.nr_seq_lote 
	and   b.nr_sequencia = d.nr_seq_mensalidade 
	and   d.nr_sequencia 	= e.nr_seq_mensalidade_seg 
	and (coalesce(a.dt_liquidacao::text, '') = '' or 
		to_char(a.dt_liquidacao,'dd') < to_char(to_date(pls_obter_dados_segurado(d.nr_seq_segurado,'D'),'dd/mm/yyyy'),'dd'))					 
	and	a.nr_titulo 	= nr_titulo_p;	
	 
	select coalesce(sum(e.vl_item),0) 
	into STRICT	vl_coparticipacao_w 
	from  pls_mensalidade_seg_item e, 
		pls_mensalidade_segurado d, 
		pls_lote_mensalidade  c, 
		pls_mensalidade     b, 
		titulo_receber     a 
	where  b.nr_sequencia = a.nr_seq_mensalidade 
	and   c.nr_sequencia = b.nr_seq_lote 
	and   b.nr_sequencia = d.nr_seq_mensalidade 
	and   d.nr_sequencia 	= e.nr_seq_mensalidade_seg 
	and	e.ie_tipo_item = 3 
	and	a.nr_titulo 	= nr_titulo_p;
	 
	select	coalesce(sum(a.vl_contab_pro_rata),0) 
	into STRICT	vl_contab_w 
	from	titulo_rec_liq_cc	a, 
		titulo_receber_liq	b 
	where	b.nr_titulo	= nr_titulo_p 
	and	a.nr_seq_baixa	= b.nr_sequencia 
	and	b.nr_titulo	= a.nr_titulo 
	and	a.cd_conta_rec_pls	= cd_conta_contabil_p 
	and	b.dt_recebimento <= dt_referencia_p 
	and	b.dt_recebimento >= trunc(dt_referencia_p,'month') 
	and	a.ie_lote_pro_rata = 'BA';	
	 
	select	count(1) 
	into STRICT	ie_baixa_ant_referencia_w 
	from	titulo_receber_liq a 
	where	a.nr_titulo = nr_titulo_p	 
	and	a.dt_recebimento < trunc(dt_referencia_p,'month')  LIMIT 1;			
	 
	if (vl_contab_w = 0) and (ie_baixa_ant_referencia_w > 0) then 
		select	coalesce(sum(a.vl_contab_pro_rata),0) 
		into STRICT	vl_contab_w 
		from	titulo_rec_liq_cc	a, 
			titulo_receber_liq	b 
		where	b.nr_titulo	= nr_titulo_p 
		and	a.nr_seq_baixa	= b.nr_sequencia 
		and	b.nr_titulo	= a.nr_titulo 
		and	a.cd_conta_rec_pls	= cd_conta_contabil_p 
		and	b.dt_recebimento <= dt_liquidacao_w 
		and	b.dt_recebimento >= trunc(dt_liquidacao_w,'month');
	end if;
	 
	vl_titulo_original_w	:= obter_dados_titulo_receber(nr_titulo_p, 'V');
	vl_titulo_w		:= obter_dados_titulo_receber(nr_titulo_p, 'VD');
 
	vl_classificacao_w	:= vl_classificacao_w * dividir_sem_round(vl_titulo_w, vl_titulo_original_w);	
	 
	if (vl_classificacao_w <= vl_titulo_w) then 
		if	((dt_contrato_w < dt_liquidacao_w) or coalesce(dt_contrato_w::text, '') = '') or 
			((dt_contabilizacao_w IS NOT NULL AND dt_contabilizacao_w::text <> '') and (trunc(dt_liquidacao_w,'month') >= trunc(dt_referencia_w,'month') or 
			coalesce(dt_liquidacao_w::text, '') = '')) and (trunc(dt_liquidacao_w,'month') >= trunc(dt_referencia_p,'month')) then	 
			if (trunc(dt_liquidacao_w,'month') > trunc(dt_referencia_w,'month')) and (trunc(dt_liquidacao_w,'month') = trunc(dt_referencia_p,'month')) then 
				vl_retorno_w := 0;
			elsif (trunc(dt_liquidacao_w,'month') > trunc(dt_referencia_w,'month')) and (vl_saldo_w > 0) then 
				if (ie_baixa_ant_referencia_w > 0) then 
					vl_retorno_w := vl_classificacao_w * dividir_sem_round(vl_saldo_w, vl_titulo_w);					
				else 
					if (vl_contab_w >= 0) then 
						vl_retorno_w := vl_classificacao_w - vl_contab_w;
					else 
						vl_retorno_w := vl_classificacao_w;
					end if;
				end if;
			elsif (trunc(dt_liquidacao_w,'month') < trunc(dt_referencia_w,'month')) then 
				vl_retorno_w := 0;
			elsif (trunc(dt_liquidacao_w,'month') > trunc(dt_referencia_p,'month')) then 
				vl_retorno_w 	:= vl_classificacao_w;
			elsif (trunc(dt_liquidacao_w,'month') = trunc(dt_referencia_p,'month')) then 
				if (trunc(dt_liquidacao_w,'month') = trunc(dt_referencia_w,'month')) then 
					vl_retorno_w 	:= 0;
				elsif (vl_total_mens_w <> 0) then 
					vl_retorno_w	:= vl_antecipacao_w - vl_total_mens_w;
				else 
					vl_retorno_w	:= vl_antecipacao_w;
				end if;
			elsif (coalesce(dt_liquidacao_w::text, '') = '') and (vl_coparticipacao_w > 0) then 
				if (trunc(dt_referencia_w,'month') <= trunc(dt_referencia_p,'month')) then 
					vl_retorno_w	:= vl_classificacao_w * dividir_sem_round(vl_saldo_w, vl_titulo_w);
				else 
					vl_retorno_w	:= vl_classificacao_w;
				end if;
			else 
				vl_retorno_w	:= vl_saldo_w;
			end if;			
		elsif (vl_saldo_w = 0) or (vl_total_mens_w = 0) or (vl_contab_w = 0) then			 
			vl_retorno_w	:= vl_classificacao_w * dividir_sem_round(vl_saldo_w, vl_titulo_w);
		else	 
			vl_retorno_w	:= 0;
		end if;	
	else 
		vl_retorno_w		:= vl_classificacao_w * dividir_sem_round(vl_saldo_w, vl_titulo_w);
	end if;
end if;
 
return	vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_tit_rec_contab ( nr_titulo_p bigint, cd_conta_contabil_p text, dt_referencia_p timestamp) FROM PUBLIC;

