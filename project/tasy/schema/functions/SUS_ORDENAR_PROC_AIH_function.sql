-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_ordenar_proc_aih (nr_seq_proc_p procedimento_paciente.nr_sequencia%type) RETURNS bigint AS $body$
DECLARE


/* NR_ORDEM_W
	- 1 Procedimento realizado da AIH
	- 2 Procedimento principal
	- 3 Procedimento especial
	- 4 Procedimento secundÃ¡rio
*/
nr_ordem_w		integer;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
vl_procedimento_w		procedimento_paciente.vl_procedimento%type;
cd_procedimento_real_w	sus_aih_unif.cd_procedimento_real%type;
ie_origem_proc_real_w	sus_aih_unif.ie_origem_proc_real%type;
cd_registro_w		sus_procedimento_registro.cd_registro%type;
nr_seq_proc_princ_w	procedimento_paciente.nr_seq_proc_princ%type;
cd_grupo_sus_w		sus_grupo.cd_grupo%type;
cd_reg_proc_w		integer := 0;
cd_proced_princ_w		procedimento_paciente.cd_procedimento%type;
qt_aih_w			bigint;
qt_proc_parto_w		bigint;
nr_seq_aih_w		procedimento_paciente.nr_seq_aih%type := 0;
dt_inicial_w		sus_aih_unif.dt_inicial%type;


BEGIN

select	count(1)
into STRICT	qt_aih_w
from	sus_aih_unif		c,
	conta_paciente		b,
	procedimento_paciente	a
where	a.nr_sequencia		= nr_seq_proc_p
and	a.nr_interno_conta	= b.nr_interno_conta
and	b.nr_interno_conta	= c.nr_interno_conta  LIMIT 1;

if (qt_aih_w > 0) then
	begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.vl_procedimento,
		c.cd_procedimento_real,
		c.ie_origem_proc_real,
		coalesce(a.nr_seq_proc_princ,0),
		coalesce(a.nr_seq_aih,0),
		c.dt_inicial
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		vl_procedimento_w,
		cd_procedimento_real_w,
		ie_origem_proc_real_w,
		nr_seq_proc_princ_w,
		nr_seq_aih_w,
		dt_inicial_w
	from	sus_aih_unif		c,
		conta_paciente		b,
		procedimento_paciente	a
	where	a.nr_sequencia		= nr_seq_proc_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_interno_conta	= c.nr_interno_conta;
	end;
else
	begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.vl_procedimento,
		c.cd_procedimento_solic,
		c.ie_origem_proced,
		coalesce(a.nr_seq_proc_princ,0),
		coalesce(a.nr_seq_aih,0),
		c.dt_emissao
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		vl_procedimento_w,
		cd_procedimento_real_w,
		ie_origem_proc_real_w,
		nr_seq_proc_princ_w,
		nr_seq_aih_w,
		dt_inicial_w
	from	sus_laudo_paciente	c,
		conta_paciente		b,
		procedimento_paciente	a
	where	a.nr_sequencia		= nr_seq_proc_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_interno_conta	= c.nr_interno_conta
	and	c.nr_seq_interno = (	SELECT	max(x.nr_seq_interno)
					from	sus_laudo_paciente x
					where	x.nr_interno_conta = c.nr_interno_conta
					and	x.ie_tipo_laudo_sus in (0,1));
	end;
end if;

if (nr_seq_aih_w = 0) then
	begin
	select	coalesce(min(cd_registro),0)
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	cd_registro in (3,4,5);

	if (cd_procedimento_w	= cd_procedimento_real_w) then
		nr_ordem_w	:= 1;
	elsif (cd_registro_w	= 3) then /* AIH (PROC. PRINCIPAL) */
		nr_ordem_w	:= 2;
	elsif (cd_registro_w	= 4) then /* AIH (PROC. ESPECIAL) */
		nr_ordem_w	:= 5;
	elsif (cd_registro_w	= 5) then /* AIH (PROC. SECUNDARIO) */
		nr_ordem_w	:= 10;
	end if;

	begin
	select	coalesce(d.cd_grupo,0)
	into STRICT	cd_grupo_sus_w
	from	sus_procedimento a,
		sus_forma_organizacao b,
		sus_subgrupo c,
		sus_grupo d
	where	a.cd_procedimento	= cd_procedimento_w
	and	a.ie_origem_proced	= ie_origem_proced_w
	and	a.nr_seq_forma_org	= b.nr_sequencia
	and	b.nr_seq_subgrupo	= c.nr_sequencia
	and	c.nr_seq_grupo		= d.nr_sequencia  LIMIT 1;	
	exception
		when others then
		cd_grupo_sus_w		:= 0;
	end;

	if (coalesce(nr_seq_proc_princ_w,0) <> 0) then
		select	coalesce(sus_obter_tiporeg_proc(cd_procedimento,ie_origem_proced,'C',2),0)
		into STRICT	cd_reg_proc_w
		from	procedimento_paciente
		where	nr_sequencia 	= nr_seq_proc_princ_w;
	end if;

	if (cd_grupo_sus_w		= 7) and (coalesce(cd_reg_proc_w,0)	= 4) then
		nr_ordem_w	:= 5;
	elsif (cd_grupo_sus_w		= 7) then
		/* Tratamento feito para que nos casos de procedimentos da regra 11, as OPM's sejam exportadas logo abaixo do seu procedimento principal */


		--if	(sus_validar_regra(11, cd_procedimento_real_w, ie_origem_proc_real_w) > 0) and OS326897
		if (nr_seq_proc_princ_w	<> 0) then
			begin

			select	coalesce(max(cd_procedimento),0)
			into STRICT	cd_proced_princ_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_proc_princ_w;

			if (cd_procedimento_real_w = cd_proced_princ_w) then
				nr_ordem_w	:= 1;
			else
				nr_ordem_w	:= 2;
			end if;

			end;
		else
			nr_ordem_w	:= 3;
		end if;
	elsif (cd_grupo_sus_w		= 5) and (coalesce(cd_reg_proc_w,0)	in (3,4)) then
		if (nr_seq_proc_princ_w	<> 0) then
			begin
			
			select	coalesce(max(cd_procedimento),0)
			into STRICT	cd_proced_princ_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_proc_princ_w;

			if (cd_procedimento_real_w = cd_proced_princ_w) then
				nr_ordem_w	:= 1;
			elsif (coalesce(cd_reg_proc_w,0) = 4) then
				nr_ordem_w	:= 5;
			else
				nr_ordem_w	:= 2;
			end if;

			end;
		else
			nr_ordem_w	:= 5;
		end if;
	elsif (cd_grupo_sus_w		= 4) and (coalesce(cd_reg_proc_w,0)	= 3) and (cd_procedimento_w	<> cd_procedimento_real_w) then
		nr_ordem_w	:= 2;
	end if;

	if (cd_procedimento_real_w		<> cd_procedimento_w) and (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p => ie_origem_proc_real_w,dt_competencia_p => dt_inicial_w) > 0) then
		begin
		
		select	count(1)
		into STRICT	qt_proc_parto_w
		from	conta_paciente		b,
			procedimento_paciente	a
		where	a.nr_sequencia		= nr_seq_proc_p
		and	a.nr_interno_conta	= b.nr_interno_conta
		and	sus_obter_estrut_proc(a.cd_procedimento,a.ie_origem_proced,'C','G') = '3'
		and	exists (	SELECT	1
				from	procedimento_paciente x
				where	x.nr_interno_conta = a.nr_interno_conta
				and	sus_validar_regra(2,x.cd_procedimento,x.ie_origem_proced,x.dt_procedimento) > 0
				and	sus_obter_se_proc_compativel(x.cd_procedimento,x.ie_origem_proced,a.cd_procedimento) = 'S')  LIMIT 1;
		
		if (qt_proc_parto_w > 0) then
			nr_ordem_w	:= 2;
		end if;
		end;
	end if;
	end;
else
	nr_ordem_w := -1;
end if;

return	nr_ordem_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_ordenar_proc_aih (nr_seq_proc_p procedimento_paciente.nr_sequencia%type) FROM PUBLIC;

