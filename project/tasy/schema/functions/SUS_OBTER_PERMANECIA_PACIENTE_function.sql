-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_permanecia_paciente ( nr_atendimento_p bigint, cd_procedimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(2) := 'N';					
qt_proc_laudo_w		integer;
dt_entrada_w		timestamp;
dt_alta_w		timestamp;
qt_permanencia_w	bigint := 0;
qt_diarias_w		bigint := 0;
qt_dias_alta_prec_w	smallint := 0;
qt_dias_longa_per_w	smallint := 0;


BEGIN 
 
begin 
select	count(*) 
into STRICT	qt_proc_laudo_w 
from	sus_laudo_paciente 
where	nr_atendimento 		= nr_atendimento_p 
and	cd_procedimento_solic 	= cd_procedimento_p 
and	ie_tipo_laudo_sus	in (0,1,9) 
and	dt_emissao = (	SELECT	max(dt_emissao) 
			from	sus_laudo_paciente 
			where	nr_atendimento 		= nr_atendimento_p 
			and	cd_procedimento_solic 	= cd_procedimento_p 
			and	ie_tipo_laudo_sus in (0,1,9));
exception 
	when others then 
	qt_proc_laudo_w := 0;
	end;
 
if (qt_proc_laudo_w > 0) then 
	begin 
	begin 
	select coalesce(a.dt_inicial,b.dt_entrada), 
		 coalesce(a.dt_final,coalesce(b.dt_alta,clock_timestamp())) 
	into STRICT	 dt_entrada_w, 
		 dt_alta_w 
	from	 atendimento_paciente b, 
		 sus_aih a 
	where	 a.nr_atendimento	= nr_atendimento_p 
	and	 a.nr_atendimento	= b.nr_atendimento;
	exception 
		when others then 
		begin 
		Select dt_entrada, 
			coalesce(dt_alta,clock_timestamp()) 
		into STRICT	dt_entrada_w, 
			dt_alta_w 
		from 	atendimento_paciente 
		where	nr_atendimento		= nr_atendimento_p;
		end;
	end;
	 
	qt_diarias_w	:= (trunc(dt_alta_w) - trunc(dt_entrada_w));
	 
	begin 
	if (qt_diarias_w > 0) 				and (AIH_Validar_Regra(1, cd_procedimento_p) = 0)	then 
		begin 
		select 	coalesce(a.qt_permanencia,0) 
		into STRICT	qt_permanencia_w 
		from 	sus_preco_procaih a 
		where 	a.cd_procedimento	= cd_procedimento_p 
		and 	a.ie_origem_proced 	= 2 
		and 	a.dt_competencia 	= (	SELECT	max(x.dt_competencia) 
							from 	sus_preco_procaih x 
							where	x.cd_procedimento	= a.cd_procedimento 
							and	x.ie_origem_proced	= a.ie_origem_proced);
		exception 
			when others then 
				qt_permanencia_w := 0;
		end;
	end if;
	end;
	 
	qt_dias_alta_prec_w	:= trunc(qt_permanencia_w / 2);
	qt_dias_longa_per_w	:= (qt_permanencia_w * 2);
	 
	if (qt_diarias_w <= qt_dias_alta_prec_w) then 
		ds_retorno_w := 'A';
	elsif (qt_diarias_w >= qt_dias_longa_per_w) then 
		ds_retorno_w := 'L';
	end if;
 	 
	end;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_permanecia_paciente ( nr_atendimento_p bigint, cd_procedimento_p bigint) FROM PUBLIC;

