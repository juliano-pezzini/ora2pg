-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_mensuracao_atual ( nr_seq_cp_indicator_p bigint, nr_seq_prescr_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(255);
nr_sequencia_w	bigint;
nr_seq_aux_w 	bigint;


BEGIN

if (nr_seq_prescr_p IS NOT NULL AND nr_seq_prescr_p::text <> '') and (nr_seq_cp_indicator_p IS NOT NULL AND nr_seq_cp_indicator_p::text <> '') then

	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	patient_cp_indic_measure
	where	nr_seq_cp_indicator   = nr_seq_cp_indicator_p
	and		nr_seq_prescr		= nr_seq_prescr_p
	and ((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or nm_usuario = wheb_usuario_pck.get_nm_usuario)
	order 	by dt_evaluation desc;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
	
		if (ie_opcao_p = 'SC') then
		
			Select 	coalesce(max(a.nr_score),0) nr_score
			into STRICT	ds_retorno_w
			from 	patient_cp_indic_measure a
			where 	nr_seq_cp_indicator   = nr_seq_cp_indicator_p
			and		nr_seq_prescr		= nr_seq_prescr_p
			and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and		nr_score > 0
			order 	by a.dt_evaluation desc;
		
		elsif (ie_opcao_p = 'DSM') then
		
			select	coalesce(a.ds_alternative,a.ds_display_name) ds_display_name
			into STRICT	ds_retorno_w
			from	cp_measure a
			where 	a.nr_sequencia = (SELECT 	max(b.nr_seq_measure)
									from 		patient_cp_indic_measure b
									where 	b.nr_sequencia = nr_sequencia_w);
									
		elsif (ie_opcao_p = 'CDM') then
		
			Select 	coalesce(a.nr_seq_measure,0) nr_seq_measure
			into STRICT	nr_seq_aux_w
			from 	patient_cp_indic_measure a
			where 	a.nr_sequencia = nr_sequencia_w
			order 	by a.dt_evaluation desc;
			
			select
					max(coalesce(b.ds_alternative,b.ds_display_name)) ds
			into STRICT	ds_retorno_w
			from 	cp_measure_type a,
					cp_measure b,
					cp_indicator c
			where 	a.nr_sequencia = b.nr_seq_measure_type
			and 	c.nr_seq_measure_type = a.nr_sequencia
			and     b.nr_sequencia = nr_seq_aux_w;
			
			if (coalesce(ds_retorno_w::text, '') = '') then
				select
						max(coalesce(b.ds_alternative,b.ds_display_name)) ds
				into STRICT	ds_retorno_w
				from 	cp_indicator_measure a,
						cp_measure b,
						cp_indicator c
				where 	a.nr_seq_measure = b.nr_sequencia
				and 	c.nr_sequencia = a.nr_seq_indicator
				and     b.nr_sequencia = nr_seq_aux_w
				and 	coalesce(c.nr_seq_measure_type::text, '') = '';
			end if;
	
		elsif (ie_opcao_p = 'NT') then
		
			Select 	a.ds_note
			into STRICT	ds_retorno_w
			from 	patient_cp_indic_measure a
			where 	a.nr_sequencia = nr_sequencia_w
			order 	by a.dt_evaluation desc;
			
		elsif (ie_opcao_p = 'SEQ') then
		
			ds_retorno_w := nr_sequencia_w;
		
		elsif (ie_opcao_p = 'EVL') then
		
			Select 	a.ie_evolution
			into STRICT	ds_retorno_w
			from 	patient_cp_indic_measure a
			where 	a.nr_sequencia = nr_sequencia_w
			order 	by a.dt_evaluation desc;
			
		elsif (ie_opcao_p = 'IEM') then
		
			Select 	obter_valor_dominio(10106, a.IE_MEASURE)
			into STRICT	ds_retorno_w
			from 	patient_cp_indic_measure a
			where 	a.nr_sequencia = nr_sequencia_w
			order 	by a.dt_evaluation desc;
			
		elsif (ie_opcao_p = 'NRM') then
		
			select 	max(a.NR_SEQ_MEASURE)
            into STRICT	nr_seq_aux_w
			from 	PATIENT_CP_INDIC_PLAN a,
					PATIENT_CP_INDIC_MEASURE b 
			where 	b.nr_seq_plan_indic = a.nr_sequencia 
			and 	b.nr_seq_cp_indicator   = nr_seq_cp_indicator_p
			and		b.nr_seq_prescr		= nr_seq_prescr_p
			order 	by b.dt_evaluation desc;
		
			select
					max(coalesce(b.ds_alternative,b.ds_display_name)) ds
			into STRICT	ds_retorno_w
			from 	cp_measure_type a,
					cp_measure b,
					cp_indicator c
			where 	a.nr_sequencia = b.nr_seq_measure_type
			and 	c.nr_seq_measure_type = a.nr_sequencia
			and     b.nr_sequencia = nr_seq_aux_w;
			
			if (coalesce(ds_retorno_w::text, '') = '') then
				select
						max(coalesce(b.ds_alternative,b.ds_display_name)) ds
				into STRICT	ds_retorno_w
				from 	cp_indicator_measure a,
						cp_measure b,
						cp_indicator c
				where 	a.nr_seq_measure = b.nr_sequencia
				and 	c.nr_sequencia = a.nr_seq_indicator
				and     b.nr_sequencia = nr_seq_aux_w
				and 	coalesce(c.nr_seq_measure_type::text, '') = '';
			end if;
			
		
		elsif (ie_opcao_p = 'NMG') then
		
			select 	max(a.NR_SEQ_MEASURE_GOAL)
            into STRICT	nr_seq_aux_w
			from 	PATIENT_CP_INDIC_PLAN a,
					PATIENT_CP_INDIC_MEASURE b 
			where 	b.nr_seq_plan_indic = a.nr_sequencia 
			and 	b.nr_seq_cp_indicator   = nr_seq_cp_indicator_p
			and		b.nr_seq_prescr		= nr_seq_prescr_p
			order 	by b.dt_evaluation desc;
			
			select
					max(coalesce(b.ds_alternative,b.ds_display_name)) ds
			into STRICT	ds_retorno_w
			from 	cp_measure_type a,
					cp_measure b,
					cp_indicator c
			where 	a.nr_sequencia = b.nr_seq_measure_type
			and 	c.nr_seq_measure_type = a.nr_sequencia
			and     b.nr_sequencia = nr_seq_aux_w;
			
			if (coalesce(ds_retorno_w::text, '') = '') then
				select
						max(coalesce(b.ds_alternative,b.ds_display_name)) ds
				into STRICT	ds_retorno_w
				from 	cp_indicator_measure a,
						cp_measure b,
						cp_indicator c
				where 	a.nr_seq_measure = b.nr_sequencia
				and 	c.nr_sequencia = a.nr_seq_indicator
				and     b.nr_sequencia = nr_seq_aux_w
				and 	coalesce(c.nr_seq_measure_type::text, '') = '';
			end if;

    elsif (ie_opcao_p = 'IPM') THEN
        select max(coalesce(a.ie_planned_measure,'N'))
        into STRICT ds_retorno_w
        from patient_cp_indic_measure a
        where a.nr_sequencia = nr_sequencia_w
        order by a.dt_evaluation desc;

		elsif (ie_opcao_p = 'NRSEQ') THEN
			Select 	coalesce(a.nr_seq_measure,0) nr_seq_measure
			into STRICT	ds_retorno_w
			from 	patient_cp_indic_measure a
			where 	a.nr_sequencia = nr_sequencia_w
			order 	by a.dt_evaluation desc;
		end if;
	end if;
	
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_mensuracao_atual ( nr_seq_cp_indicator_p bigint, nr_seq_prescr_p bigint, ie_opcao_p text) FROM PUBLIC;

