-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_ret_movto_glosa ( nr_seq_ret_glosa_p bigint, ie_opcao_p bigint, nr_seq_ret_item_p bigint, nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_p bigint, qt_glosa_p bigint, vl_glosa_p bigint, cd_setor_atendimento_p bigint, nr_seq_partic_p bigint, vl_amaior_p bigint, ie_custo_operacional_p convenio_retorno_glosa.ie_custo_operacional%type , vl_desconto_p convenio_retorno_glosa.vl_desconto_item%type, qt_cobrada_p convenio_retorno_glosa.qt_cobrada%type DEFAULT NULL, vl_cobrado_p convenio_retorno_glosa.vl_cobrado%type DEFAULT NULL, qt_informada_p convenio_retorno_glosa.QT_INFORMADA%type DEFAULT NULL, vl_informado_p convenio_retorno_glosa.VL_INFORMADO%type DEFAULT NULL, qt_liberada_p convenio_retorno_glosa.qt_liberada%type DEFAULT NULL, vl_liberado_p convenio_retorno_glosa.vl_liberado%type DEFAULT NULL, ie_acao_glosa_p convenio_retorno_glosa.ie_acao_glosa%type DEFAULT NULL) RETURNS varchar AS $body$
DECLARE


					
						
nr_seq_ret_item_w		bigint := nr_seq_ret_item_p;
nr_seq_propaci_w		bigint := nr_seq_propaci_p;
nr_seq_matpaci_w		bigint := nr_seq_matpaci_p;
cd_procedimento_w		bigint := cd_procedimento_p;
ie_origem_proced_w		bigint := ie_origem_proced_p;
cd_material_w			integer := cd_material_p;
qt_glosa_w			double precision := qt_glosa_p;
vl_glosa_w			double precision := vl_glosa_p;
cd_setor_atendimento_w		integer := cd_setor_atendimento_p;
dt_execucao_w			timestamp;
qt_cobrada_w			double precision;
qt_negativo_w			double precision := 0;
vl_total_w			double precision;
vl_total_negativo_w		double precision := 0;
vl_unitario_w			double precision;
vl_unitario_negativo_w		double precision := 0;
ds_retorno_w			varchar(20);
vl_unit_glosa_w			double precision;
nr_interno_conta_w		bigint;
nr_seq_item_movto_w		bigint;
qt_partic_w			bigint;
qt_registros_w			integer;
nr_seq_partic_w			bigint := nr_seq_partic_p;
ie_participante_w		varchar(20);
ie_repasse_vinculado_w		varchar(20);
vl_amaior_w			double precision := vl_amaior_p;
ie_custo_operacional_w		convenio_retorno_glosa.ie_custo_operacional%type := coalesce(ie_custo_operacional_p,'N');
ie_agrup_w			varchar(1);
ie_partic_w			varchar(1) := 'S';
vl_desconto_w			convenio_retorno_glosa.vl_desconto_item%type := coalesce(vl_desconto_p,0);
ie_gerar_custo_operacional_w varchar(1) := 'N';
ie_valor_medico_partic_w		varchar(10) := 'N';
ie_gerou_partic_custo_oper_w varchar(1) := 'N';
vl_total_glosa_w		double precision := 0;
vl_pago_grg_w       lote_audit_hist_item.vl_pago%type;


BEGIN

ie_agrup_w := obter_param_usuario(27, 24, obter_perfil_ativo(), wheb_usuario_pck.get_nm_usuario(), wheb_usuario_pck.get_cd_estabelecimento(), ie_agrup_w);
ie_valor_medico_partic_w := obter_param_usuario(27, 233, obter_perfil_ativo(), wheb_usuario_pck.get_nm_usuario(), wheb_usuario_pck.get_cd_estabelecimento(), ie_valor_medico_partic_w);
ie_gerar_custo_operacional_w := obter_param_usuario(27, 236, obter_perfil_ativo(), wheb_usuario_pck.get_nm_usuario(), wheb_usuario_pck.get_cd_estabelecimento(), ie_gerar_custo_operacional_w);

if (ie_valor_medico_partic_w = 'S' and ie_gerar_custo_operacional_w = 'S') then
  ie_gerou_partic_custo_oper_w := 'S';
end if;

select	nr_interno_conta
into STRICT	nr_interno_conta_w
from	convenio_retorno_item
where	nr_sequencia = nr_seq_ret_item_w;

ie_participante_w	:= 'N';

if (ie_agrup_w not in ('N')) then
	if (nr_seq_matpaci_w IS NOT NULL AND nr_seq_matpaci_w::text <> '') then

		select	count(*)
		into STRICT	qt_registros_w
		from	material_atend_paciente
		where	cd_material = cd_material_w
		and		nr_interno_conta = nr_interno_conta_w
		and		cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);

		if (qt_registros_w > 1) then
			nr_seq_matpaci_w 	:= null;
		end if;
	elsif (nr_seq_propaci_w IS NOT NULL AND nr_seq_propaci_w::text <> '') and (ie_agrup_w not in ('N','M')) then

		select	count(*)
		into STRICT	qt_registros_w
		from	procedimento_paciente
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w
		and	nr_interno_conta = nr_interno_conta_w
		and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);
		
		select	CASE WHEN coalesce(obter_participantes_proc(nr_seq_propaci_w)::text, '') = '' THEN 'N'  ELSE 'S' END
		into STRICT	ie_partic_w
		;

		if (qt_registros_w > 1) and (ie_partic_w = 'N') then
			nr_seq_propaci_w 	:= null;
			nr_seq_partic_w		:= null;
		end if;
	end if;
end if;

if (nr_seq_propaci_w IS NOT NULL AND nr_seq_propaci_w::text <> '') then
	if (coalesce(nr_seq_partic_w,0) <> 0) then
		select	dt_procedimento,
			qt_procedimento,
			b.vl_participante,
			dividir(b.vl_participante, qt_procedimento),
			'S' ie_participante
		into STRICT	dt_execucao_w,
			qt_cobrada_w,
			vl_total_w,
			vl_unitario_w,
			ie_participante_w
		from	procedimento_paciente a,
			procedimento_participante b
		where	a.nr_sequencia	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_propaci_w
		and	b.nr_seq_partic	= nr_seq_partic_w;
	elsif (ie_custo_operacional_w = 'N') then
		select	coalesce(count(*),0)
		into STRICT	qt_partic_w
		from	convenio_retorno_glosa
		where	nr_seq_ret_item	= nr_seq_ret_item_w
		and	nr_seq_propaci	= nr_seq_propaci_w
		and	(nr_seq_partic IS NOT NULL AND nr_seq_partic::text <> '');

		if (qt_partic_w > 0) then
			select	dt_procedimento,
				qt_procedimento,
				vl_medico + CASE WHEN ie_gerou_partic_custo_oper_w='S' THEN  0.0  ELSE coalesce(vl_custo_operacional,0) END  + coalesce(vl_materiais,0) + coalesce(vl_auxiliares,0) + coalesce(vl_anestesista,0),
				dividir(vl_medico + CASE WHEN ie_gerou_partic_custo_oper_w='S' THEN  0.0  ELSE coalesce(vl_custo_operacional,0) END  + coalesce(vl_materiais,0) + coalesce(vl_auxiliares,0) + coalesce(vl_anestesista,0), qt_procedimento),
				'S' ie_participante
			into STRICT	dt_execucao_w,
				qt_cobrada_w,
				vl_total_w,
				vl_unitario_w,
				ie_participante_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_propaci_w;
		else
			select	dt_procedimento,
				qt_procedimento,
				vl_procedimento,
				dividir(vl_procedimento, qt_procedimento),
				'N' ie_participante
			into STRICT	dt_execucao_w,
				qt_cobrada_w,
				vl_total_w,
				vl_unitario_w,
				ie_participante_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_propaci_w;
		end if;

		if (ie_agrup_w not in ('N','M')) then
			select	coalesce(sum(vl_procedimento * -1),0),
				coalesce(sum(qt_procedimento * -1),0),
				coalesce(dividir_sem_round(sum(vl_procedimento),sum(qt_procedimento)),0)
			into STRICT	vl_total_negativo_w,
				qt_negativo_w,
				vl_unitario_negativo_w		
			from	procedimento_paciente a
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w
			and	nr_interno_conta = nr_interno_conta_w
			and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
			and	nr_sequencia <> nr_seq_propaci_w
			and	qt_procedimento < 0;
		end if;
		
	elsif (ie_custo_operacional_w = 'S') then
		
		select	dt_procedimento,
			qt_procedimento,
			VL_CUSTO_OPERACIONAL,
			dividir(VL_CUSTO_OPERACIONAL, qt_procedimento)
		into STRICT	dt_execucao_w,
			qt_cobrada_w,
			vl_total_w,
			vl_unitario_w
		from	procedimento_paciente
		where	nr_sequencia = nr_seq_propaci_w;
		
		if (ie_agrup_w not in ('N','M')) then
			select	coalesce(sum(VL_CUSTO_OPERACIONAL * -1),0),
				coalesce(sum(qt_procedimento * -1),0),
				coalesce(dividir_sem_round(sum(VL_CUSTO_OPERACIONAL),sum(qt_procedimento)),0)
			into STRICT	vl_total_negativo_w,
				qt_negativo_w,
				vl_unitario_negativo_w		
			from	procedimento_paciente a
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w
			and	nr_interno_conta = nr_interno_conta_w
			and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
			and	nr_sequencia <> nr_seq_propaci_w
			and	qt_procedimento < 0;
		end if;
	end if;
	
	
elsif (nr_seq_matpaci_w IS NOT NULL AND nr_seq_matpaci_w::text <> '') then
	select	dt_atendimento,
		qt_material,
		vl_material,
		vl_unitario
	into STRICT	dt_execucao_w,
		qt_cobrada_w,
		vl_total_w,
		vl_unitario_w
	from material_atend_paciente
	where nr_sequencia = nr_seq_matpaci_w;
	
	if (ie_agrup_w not in ('N')) then
		select	coalesce(sum(vl_material * -1),0),
			coalesce(sum(qt_material * -1),0),
			coalesce(dividir_sem_round(sum(vl_material),sum(qt_material)),0)
		into STRICT	vl_total_negativo_w,
			qt_negativo_w,
			vl_unitario_negativo_w		
		from	material_atend_paciente a
		where	cd_material = cd_material_w
		and	nr_interno_conta = nr_interno_conta_w
		and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
		and	nr_sequencia <> nr_seq_matpaci_w
		and	qt_material < 0;
	end if;
	
elsif (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
	select	/*+ index(a PROPACI_CONPACI_I) */	
		max(dt_procedimento),	
		sum(qt_procedimento),
		sum(vl_procedimento),
		dividir_sem_round(sum(vl_procedimento), sum(qt_procedimento))
	into STRICT	dt_execucao_w,
		qt_cobrada_w,
		vl_total_w,
		vl_unitario_w
	from	procedimento_paciente a
	where	cd_procedimento = cd_procedimento_w
	and	ie_origem_proced = ie_origem_proced_w
	and	nr_interno_conta = nr_interno_conta_w
	and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);
elsif (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
	select	/*+ index(a MATPACI_CONPACI_I) */	
		max(dt_atendimento),	
		sum(qt_material),
		sum(vl_material),
		dividir_sem_round(sum(vl_material),sum(qt_material))
	into STRICT	dt_execucao_w,
		qt_cobrada_w,
		vl_total_w,
		vl_unitario_w
	from	material_atend_paciente a
	where	cd_material = cd_material_w
	and	nr_interno_conta = nr_interno_conta_w
	and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);
end if;

if (ie_opcao_p = 1) then
	select coalesce(to_char(max(hr_execucao)),to_char(dt_execucao_w,'hh24:mi'))
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
elsif (ie_opcao_p = 2) then

	select CASE WHEN coalesce(sum(vl_cobrado),0)=0 THEN vl_total_w  ELSE coalesce(sum(vl_cobrado),0) END
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	
elsif (ie_opcao_p = 3) then

	select  coalesce(max(nr_Sequencia),0)
	into STRICT	nr_seq_item_movto_w
	from	convenio_retorno_movto
	where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	if (nr_seq_item_movto_w > 0) then
		select coalesce(sum(CASE WHEN vl_amaior_w=0 THEN  vl_total_pago  ELSE vl_total_pago - vl_amaior_w END ),0)
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
		
	elsif	((nr_seq_propaci_p > 0) or (nr_seq_matpaci_p > 0)) and (coalesce(vl_informado_p,0) > 0) then
		
		if (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '') then
            begin
            select	sum(vl_glosa),
                    sum(vl_pago)
            into STRICT	vl_total_glosa_w,
                    vl_pago_grg_w
            from	lote_audit_hist_item
            where	nr_seq_propaci = nr_seq_propaci_w;
            exception
			when no_data_found then
				vl_total_glosa_w := null;
                vl_pago_grg_w := null;
			end;
        end if;

        if (nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') then
            begin
            select	sum(vl_glosa),
                    sum(vl_pago)
            into STRICT	vl_total_glosa_w,
                    vl_pago_grg_w
            from	lote_audit_hist_item
            where	nr_seq_matpaci = nr_seq_matpaci_p;
            exception
			when no_data_found then
				vl_total_glosa_w := null;
                vl_pago_grg_w := null;
			end;
        end if;
		
		if (coalesce(vl_total_glosa_w,0) > 0) then
			
			ds_retorno_w := ((vl_informado_p - vl_total_glosa_w - coalesce(vl_liberado_p,0)) + coalesce(vl_amaior_w,0));
		else
			if (ie_acao_glosa_p = 'A')then
				ds_retorno_w := ((vl_informado_p - coalesce(vl_glosa_w,0) - coalesce(vl_liberado_p,0)) + coalesce(vl_amaior_w,0));
            elsif (vl_pago_grg_w IS NOT NULL AND vl_pago_grg_w::text <> '') then
                ds_retorno_w := vl_pago_grg_w;
			else
				ds_retorno_w := ((vl_informado_p - coalesce(vl_liberado_p,0)) + coalesce(vl_amaior_w,0));
			end if;
		end if;
		
	else
		
		if	vl_total_w < vl_cobrado_p then
			vl_total_w := vl_cobrado_p;
		end if;
	
		select	CASE WHEN coalesce(sum(vl_total_pago),0)=0 THEN  vl_total_w - vl_total_negativo_w - vl_glosa_w  ELSE coalesce(sum(vl_total_pago),0) END  + coalesce(vl_amaior_w,0)
		into STRICT	ds_retorno_w
		from	convenio_retorno_movto
		where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
		
		if ((ds_retorno_w)::numeric  > 0) then
			ds_retorno_w := ds_retorno_w - vl_desconto_w;
		end if;
	end if;	
	
elsif (ie_opcao_p = 4) then

	select CASE WHEN coalesce(sum(qt_cobrada),0)=0 THEN qt_cobrada_w  ELSE coalesce(sum(qt_cobrada),0) END
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;

elsif (ie_opcao_p = 5) then

	select  coalesce(max(nr_Sequencia),0)
	into STRICT	nr_seq_item_movto_w
	from	convenio_retorno_movto
	where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	if (nr_seq_item_movto_w > 0) then
	
		select coalesce(sum(qt_paga),0)
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	elsif (nr_seq_propaci_p > 0) or (nr_seq_matpaci_p > 0) and (coalesce(qt_cobrada_p,0) > 0) then
	
		ds_retorno_w := coalesce(qt_cobrada_p,0) - coalesce(qt_glosa_p,0);
		
		
	else
		select CASE WHEN coalesce(sum(qt_paga),0)=0 THEN qt_cobrada_w - qt_glosa_w - qt_negativo_w  ELSE coalesce(sum(qt_paga),0) END
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	end if;
elsif (ie_opcao_p = 6) then

	select CASE WHEN coalesce(sum(dividir(vl_cobrado,qt_cobrada)),0)=0 THEN vl_unitario_w  ELSE coalesce(sum(dividir(vl_cobrado,qt_cobrada)),0) END
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	if	((nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') or (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '')) and (vl_cobrado_p > 0 AND qt_cobrada_p > 0) then
		ds_retorno_w := dividir(vl_cobrado_p,qt_cobrada_p);
	end if;
	
elsif (ie_opcao_p = 7) then


	if (nr_seq_propaci_p > 0) or (nr_seq_matpaci_p > 0) and (coalesce(vl_cobrado_p,0) > 0) then
		if (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '') then
            begin
            select	sum(vl_pago)
            into STRICT	vl_pago_grg_w
            from	lote_audit_hist_item
            where	nr_seq_propaci = nr_seq_propaci_w;
            exception
			when no_data_found then
                vl_pago_grg_w := null;
			end;
        end if;

        if (nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') then
            begin
            select	sum(vl_pago)
            into STRICT	vl_pago_grg_w
            from	lote_audit_hist_item
            where	nr_seq_matpaci = nr_seq_matpaci_p;
            exception
			when no_data_found then
                vl_pago_grg_w := null;
			end;
        end if;

        if ( vl_pago_grg_w = 0 ) then
            ds_retorno_w := 0;
        else
            vl_unit_glosa_w := dividir_sem_round(coalesce(vl_cobrado_p,0) - coalesce(vl_glosa_p,0), coalesce(qt_cobrada_p,0) - coalesce(qt_glosa_p,0));	
            ds_retorno_w := vl_unit_glosa_w;
        end if;					
	else
	
		select	dividir(vl_total_w - vl_total_negativo_w - vl_glosa_w, qt_cobrada_w - coalesce(qt_glosa_w,0))
		into STRICT	vl_unit_glosa_w
		;
		
		if (vl_unit_glosa_w = 0) then
			if (dividir_sem_round(vl_glosa_w * qt_glosa_w, vl_total_w) > 0.00) then
				vl_unit_glosa_w := dividir_sem_round(vl_total_w - vl_total_negativo_w - vl_glosa_w, qt_cobrada_w);
			else		
				vl_unit_glosa_w := dividir_sem_round(vl_glosa_w, dividir_sem_round(vl_glosa_w * qt_glosa_w, vl_total_w)) - vl_glosa_w;
			end if;
		end 	if;
		
		select  coalesce(max(nr_Sequencia),0)
		into STRICT	nr_seq_item_movto_w
		from	convenio_retorno_movto
		where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
		
		if (nr_seq_item_movto_w > 0) then
			select coalesce(sum(vl_pago),0)
			into STRICT ds_retorno_w
			from convenio_retorno_movto
			where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
		else
			select CASE WHEN coalesce(sum(vl_pago),0)=0 THEN  CASE WHEN vl_total_w=vl_glosa_w THEN 0  ELSE CASE WHEN vl_unit_glosa_w=0 THEN  vl_unitario_w - vl_unitario_negativo_w - vl_glosa_w  ELSE vl_unit_glosa_w END  END    ELSE coalesce(sum(vl_pago),0) END
			into STRICT ds_retorno_w
			from convenio_retorno_movto
			where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
			
			if ((ds_retorno_w)::numeric  > 0) then
				ds_retorno_w := ds_retorno_w - vl_desconto_w;
			end if;		
		end if;
		
	end if;


	
elsif (ie_opcao_p = 8) then
        select  max(nr_sequencia)
        into STRICT    ie_repasse_vinculado_w
        from    procedimento_repasse
        where   nr_seq_ret_glosa = nr_seq_ret_glosa_p;

        if (coalesce(ie_repasse_vinculado_w::text, '') = '') then
                select  max(nr_sequencia)
                into STRICT    ie_repasse_vinculado_w
                from    material_repasse
                where   nr_seq_ret_glosa = nr_seq_ret_glosa_p;
        end if;
	
	if (ie_repasse_vinculado_w IS NOT NULL AND ie_repasse_vinculado_w::text <> '') then
		ds_retorno_w	:= 'S';
	else
		ds_retorno_w	:= 'N';
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_ret_movto_glosa ( nr_seq_ret_glosa_p bigint, ie_opcao_p bigint, nr_seq_ret_item_p bigint, nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_p bigint, qt_glosa_p bigint, vl_glosa_p bigint, cd_setor_atendimento_p bigint, nr_seq_partic_p bigint, vl_amaior_p bigint, ie_custo_operacional_p convenio_retorno_glosa.ie_custo_operacional%type , vl_desconto_p convenio_retorno_glosa.vl_desconto_item%type, qt_cobrada_p convenio_retorno_glosa.qt_cobrada%type DEFAULT NULL, vl_cobrado_p convenio_retorno_glosa.vl_cobrado%type DEFAULT NULL, qt_informada_p convenio_retorno_glosa.QT_INFORMADA%type DEFAULT NULL, vl_informado_p convenio_retorno_glosa.VL_INFORMADO%type DEFAULT NULL, qt_liberada_p convenio_retorno_glosa.qt_liberada%type DEFAULT NULL, vl_liberado_p convenio_retorno_glosa.vl_liberado%type DEFAULT NULL, ie_acao_glosa_p convenio_retorno_glosa.ie_acao_glosa%type DEFAULT NULL) FROM PUBLIC;

