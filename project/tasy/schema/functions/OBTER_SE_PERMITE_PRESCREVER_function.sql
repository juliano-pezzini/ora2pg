-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_permite_prescrever ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_origem_inf_p text, cd_perfil_p bigint) RETURNS varchar AS $body$
DECLARE


cd_procedimento_w	bigint;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w		bigint;
ie_permite_w		varchar(1) := 'S';
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
cd_convenio_w		bigint;
qt_regra_w		bigint;
cd_setor_atendimento_w	integer;


BEGIN

select	count(*)
into STRICT	qt_regra_w
from	regra_proced_nao_medico;

if (qt_regra_w > 0) then
	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		nr_seq_exame
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		nr_seq_exame_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	nr_sequencia = nr_sequencia_p;

	select	max(cd_setor_atendimento),
		max(obter_convenio_atendimento(nr_atendimento))
	into STRICT	cd_setor_atendimento_w,
		cd_convenio_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if	(cd_procedimento_w > 0 AND ie_origem_proced_w > 0) then
		select	cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc
		into STRICT	cd_area_procedimento_w,
			cd_especialidade_w,
			cd_grupo_proc_w
		from	estrutura_procedimento_v
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;
	end if;

	select	coalesce(max(ie_permite),'S')
	into STRICT	ie_permite_w
	from	regra_proced_nao_medico
	where	coalesce(nr_seq_exame,coalesce(nr_seq_exame_w,0))			=	coalesce(nr_seq_exame_w,0)
	and	coalesce(nr_seq_proc_interno,coalesce(nr_seq_proc_interno_w,0))	=	coalesce(nr_seq_proc_interno_w,0)
	and	((coalesce(ie_somente_medico,'S') = 'N') or (ie_origem_inf_p <> '1'))
	and	coalesce(cd_procedimento,coalesce(cd_procedimento_w,0))		=	coalesce(cd_procedimento_w,0)
	and	coalesce(ie_origem_proced,coalesce(ie_origem_proced_w,0))		=	coalesce(ie_origem_proced_w,0)
	and	coalesce(cd_area_procedimento,coalesce(cd_area_procedimento_w,0))	=	coalesce(cd_area_procedimento_w,0)
	and	coalesce(cd_especialidade,coalesce(cd_especialidade_w,0))		=	coalesce(cd_especialidade_w,0)
	and	((coalesce(cd_convenio::text, '') = '') or (cd_convenio = cd_convenio_w))
	and	coalesce(cd_perfil,coalesce(cd_perfil_p,0))			= 	cd_perfil_p
	and	coalesce(cd_grupo_proc,coalesce(cd_grupo_proc_w,0))		=	coalesce(cd_grupo_proc_w,0)
	and	coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0)) = 	coalesce(cd_setor_atendimento_w,0);
end if;

return	ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_permite_prescrever ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_origem_inf_p text, cd_perfil_p bigint) FROM PUBLIC;

