-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_obter_rest_pres_pad (dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_prest_p pls_tipos_ocor_pck.dados_filtro_prest) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Obter o acesso a tabela pls_prestador que será utilizado  para verificar o select
	dos filtros de prestador.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Realizar tratamento para os campos IMP quando hourver necessidade

Alterações:
------------------------------------------------------------------------------------------------------------------
jjung OS 597795 10/06/2013 -	Criação da function.
------------------------------------------------------------------------------------------------------------------
jjung 23/10/2013 -  Reorganização dos fontes para aceitar o novo padrão.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_filtro_prest_w	varchar(4000);

BEGIN

--Inicializar as variáveis.
ds_filtro_prest_w	:= null;

-- Aqui verifca qual prestador da conta será utilizado, se atendimento, executor, solicitante ou de pagamento.
-- Atendimento
if (dados_filtro_prest_p.ie_tipo_prestador = 'A') then
	if (dados_regra_p.ie_evento = 'IMP') then

		ds_filtro_prest_w :=	ds_filtro_prest_w || pls_tipos_ocor_pck.enter_w ||
					'			and	prest.nr_sequencia = prot.nr_seq_prestador_imp ';
	else

		ds_filtro_prest_w :=	ds_filtro_prest_w || pls_tipos_ocor_pck.enter_w ||
					'			and	prest.nr_sequencia = prot.nr_seq_prestador ';
	end if;
-- Executor
elsif (dados_filtro_prest_p.ie_tipo_prestador = 'E') then
	if (dados_regra_p.ie_evento = 'IMP') then

		ds_filtro_prest_w := 	ds_filtro_prest_w || pls_tipos_ocor_pck.enter_w ||
					'			and	prest.nr_sequencia = conta.nr_seq_prestador_exec_imp ';
	else

		ds_filtro_prest_w := 	ds_filtro_prest_w || pls_tipos_ocor_pck.enter_w ||
					'			and	prest.nr_sequencia = conta.nr_seq_prestador_exec ';
	end if;
--  Solicitante.
elsif (dados_filtro_prest_p.ie_tipo_prestador = 'S') then
	if (dados_regra_p.ie_evento = 'IMP') then

		ds_filtro_prest_w :=	ds_filtro_prest_w || pls_tipos_ocor_pck.enter_w ||
					'			and	prest.nr_sequencia = conta.nr_seq_prestador_imp ';
	else

		ds_filtro_prest_w :=	ds_filtro_prest_w || pls_tipos_ocor_pck.enter_w ||
					'			and	prest.nr_sequencia = conta.nr_seq_prestador ';
	end if;
end if;

return	ds_filtro_prest_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_obter_rest_pres_pad (dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_prest_p pls_tipos_ocor_pck.dados_filtro_prest) FROM PUBLIC;

