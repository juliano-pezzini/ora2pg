-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_int_prescr_fleury ( nr_prescricao_p bigint, ds_method_p text default null) RETURNS varchar AS $body$
DECLARE


cd_sigla_w			varchar(20) := null;
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w		bigint;
qt_regra_w			bigint;
ie_exame_fleury_w	varchar(2);
nr_seq_prescr_w		bigint;

C01 CURSOR FOR
	SELECT	p.nr_sequencia	
	from	prescr_procedimento p,
			proc_interno i,
			prescr_medica a
	where	a.nr_prescricao = p.nr_prescricao
	and		p.nr_seq_proc_interno = i.nr_sequencia
	and		p.nr_prescricao	= nr_prescricao_p
	and		coalesce(a.dt_liberacao_medico::text, '') = ''
	and		p.cd_cgc_laboratorio = '60840055000131'
	and		i.ie_tipo in ('AP','APH','APC');

C02 CURSOR FOR
		SELECT	p.nr_sequencia
		from	exame_laboratorio e,
				prescr_procedimento p,
				prescr_medica a
		where	p.nr_prescricao = nr_prescricao_p
		and		e.nr_seq_exame 	= p.nr_seq_exame
		and		a.nr_prescricao = p.nr_prescricao
		and		(p.cd_material_exame IS NOT NULL AND p.cd_material_exame::text <> '')
		and		((ds_method_p = 'cancelar_ficha_item') or (ds_method_p = 'cancelar_ficha') or (ds_method_p = 'regerar_fichas') or (coalesce(coalesce(a.nr_controle, p.nr_controle_ext)::text, '') = ''))
		and		e.cd_cgc_externo = '60840055000131';
	
	
/*
efetuar_todas_validacoes_exames
manter_clientes
abrir_ficha
cancelar_ficha_item
cancelar_ficha
regerar_fichas
*/
	

BEGIN

open C01;
loop
fetch C01 into	
	nr_seq_prescr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select 	max(nr_seq_proc_interno)
	into STRICT	nr_seq_proc_interno_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = nr_seq_prescr_w;
	
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then

		select	max(cd_integracao)
		into STRICT	cd_sigla_w
		from	regra_proc_interno_integra
		where	nr_seq_proc_interno 	= nr_seq_proc_interno_w
		and		ie_tipo_integracao 	= 3;
		
		if (coalesce(cd_sigla_w::text, '') = '')	then
			
			select	count(*)
			into STRICT	qt_regra_w
			from	regra_proc_interno_integra
			where	nr_seq_proc_interno = nr_seq_proc_interno_w
			and	ie_tipo_integracao 	= 3;
			
			if (qt_regra_w > 0) then
			
				select	coalesce(max(cd_integracao), to_char(nr_seq_proc_interno_w))	
				into STRICT	cd_sigla_w
				from	proc_interno
				where	nr_sequencia = nr_seq_proc_interno_w;
				
			end if;
			
		end if;

	end if;

	if (cd_sigla_w IS NOT NULL AND cd_sigla_w::text <> '') then
		exit;
	end if;
	
	end;
end loop;
close C01;

if (coalesce(cd_sigla_w::text, '') = '') then

	open C02;
	loop
	fetch C02 into	
		nr_seq_prescr_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_exame_fleury_w
		from	exame_laboratorio e,
				prescr_procedimento p
		where	p.nr_prescricao = nr_prescricao_p
		and		p.nr_sequencia = nr_seq_prescr_w
		and		e.nr_seq_exame 	= p.nr_seq_exame
		and		e.cd_cgc_externo = '60840055000131';
		
		if (ie_exame_fleury_w = 'S') then
			cd_sigla_w := obter_codigo_exame_equip_presc('FLEURY', nr_prescricao_p, nr_seq_prescr_w);
		end if;
		
		if (cd_sigla_w IS NOT NULL AND cd_sigla_w::text <> '') then
			exit;
		end if;
		
		end;
	end loop;
	close C02;

end if;

if (coalesce(cd_sigla_w::text, '') = '') then
     cd_sigla_w := OBTER_PRESCR_FLEURY_ASYNC(nr_prescricao_p,ds_method_p);	
end if;

return	cd_sigla_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_int_prescr_fleury ( nr_prescricao_p bigint, ds_method_p text default null) FROM PUBLIC;

