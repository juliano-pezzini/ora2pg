-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION fa_calcular_execesso_disp (nr_seq_entrega_p bigint, nr_seq_rec_item_p bigint, cd_material_p bigint, qt_dispensar_conver_p bigint, qt_dispensar_p bigint, nr_seq_paciente_entr_p bigint, nm_usuario_p text) RETURNS bigint AS $body$
DECLARE

qt_dispensar_ori_w		bigint;
cd_unidade_origem_w		varchar(10);
cd_unidade_destino_w		varchar(10);
qt_saldo_w			bigint;
qt_dias_saldo_w			bigint;
nr_seq_entrega_ant_w		bigint;
qt_saldo_atual_ant_w		double precision;
nr_seq_receita_amb_w		bigint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
cd_pessoa_fisica_w		varchar(10);
nr_seq_entrega_item_ant_w	bigint;
nr_seq_receita_amb_ant_w	bigint;
ie_cancela_saldo_ant_w		varchar(1);
ds_observacao_w			varchar(255);


BEGIN
qt_saldo_w := 0;
qt_dias_saldo_w := obter_param_usuario(10015, 3, obter_perfil_ativo, nm_usuario_p, 0, qt_dias_saldo_w);
ie_cancela_saldo_ant_w := obter_param_usuario(10015, 39, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,0), ie_cancela_saldo_ant_w);

--verificar se a entrega anterior estiver dentro do mesmo período e a quantidade dispensada for maior que a gerada  o execesso vai ser o saldo atual da entrega anterior
select	max(nr_seq_receita_amb),
	max(dt_periodo_inicial),
	max(dt_periodo_final),
	max(cd_pessoa_fisica)
into STRICT	nr_seq_receita_amb_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w,
	cd_pessoa_fisica_w
from	fa_entrega_medicacao
where	nr_sequencia	= nr_seq_entrega_p
and	coalesce(dt_cancelamento::text, '') = '';

select	max(i.nr_sequencia),
	max(nr_seq_receita_amb)
into STRICT	nr_seq_entrega_item_ant_w,
	nr_seq_receita_amb_ant_w
FROM	fa_entrega_medicacao f,
	fa_entrega_medicacao_item i
WHERE	f.nr_sequencia <> nr_seq_entrega_p
AND	f.nr_sequencia = i.nr_seq_fa_entrega
AND (TRUNC(dt_periodo_inicial_w) BETWEEN TRUNC(f.dt_periodo_inicial) AND TRUNC(f.dt_periodo_final))
AND (TRUNC(dt_periodo_final_w) BETWEEN TRUNC(f.dt_periodo_inicial) AND TRUNC(f.dt_periodo_final))
AND	cd_pessoa_fisica	= cd_pessoa_fisica_w
AND	i.cd_material 		= cd_material_p
ANd	i.qt_dispensar > i.qt_gerado
and	coalesce(f.dt_cancelamento::text, '') = ''
and (ie_cancela_saldo_ant_w <> 'T' or coalesce(i.ie_cancelar_saldo,'N') = 'N');

SELECT 	coalesce(max(qt_saldo_atual),0)
into STRICT	qt_saldo_atual_ant_w
from	fa_entrega_medicacao_item
where	nr_sequencia	= nr_seq_entrega_item_ant_w;

if (qt_saldo_atual_ant_w > 0) and (nr_seq_receita_amb_ant_w = nr_seq_receita_amb_w) then
	qt_dispensar_ori_w := qt_saldo_atual_ant_w;
else

	--*** Unidade de Origem
	select 	i.cd_unidade_medida
	into STRICT	cd_unidade_origem_w
	from	fa_receita_farmacia_item i
	where	i.nr_sequencia =  nr_seq_rec_item_p;

	--*** Unidade Destino
	select	max(cd_unidade_medida)
	into STRICT	cd_unidade_destino_w
	from	fa_medic_farmacia_amb
	where	cd_material = cd_material_p;

	-- Verificar na entrega anterior se existe saldo para este medicamento
	--qt_saldo_w := fa_obter_saldo_anterior(nr_seq_entrega_p,nr_seq_paciente_entr_p,cd_material_p,nm_usuario_p,qt_dispensar_p);
	SELECT * FROM fa_obter_saldo_ant_intervalo(nr_seq_entrega_p, nr_seq_paciente_entr_p, cd_material_p, nm_usuario_p, ds_observacao_w, qt_saldo_w, qt_dispensar_p) INTO STRICT ds_observacao_w, qt_saldo_w;

	-- Busca valor de conversão das unidades
	qt_dispensar_ori_w := Obter_dose_convertida(cd_material_p,qt_dispensar_conver_p,cd_unidade_destino_w,cd_unidade_origem_w); --inverte as unidades para retornar para a unidade padrao
	qt_dispensar_ori_w := qt_saldo_w-qt_dispensar_p; --qt_dispensar_ori_w - (qt_dispensar_p - qt_saldo_w);
	if (qt_dispensar_ori_w < 0) then
		qt_dispensar_ori_w := 0;
	end if;
end if;

return	qt_dispensar_ori_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION fa_calcular_execesso_disp (nr_seq_entrega_p bigint, nr_seq_rec_item_p bigint, cd_material_p bigint, qt_dispensar_conver_p bigint, qt_dispensar_p bigint, nr_seq_paciente_entr_p bigint, nm_usuario_p text) FROM PUBLIC;

