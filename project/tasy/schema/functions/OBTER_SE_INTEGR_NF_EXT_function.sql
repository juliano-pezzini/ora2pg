-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_integr_nf_ext ( nr_sequencia_nf_p bigint, ie_sistema_ext_p text) RETURNS varchar AS $body$
DECLARE


ie_tipo_servico_w				varchar(15);
nr_seq_regra_w				bigint;
cd_material_w				bigint;
cd_grupo_material_w			smallint;
cd_subgrupo_material_w			smallint;
cd_classe_material_w			integer;
nr_seq_familia_w			integer;
ie_integra_w				varchar(1) := 'N';
qt_integra_w				bigint := 0;
qt_itens_w				bigint := 0;
cd_estabelecimento_w			bigint;
ie_padronizado_w			varchar(1);
ie_estoque_w				varchar(1);
cd_perfil_w				integer;
cd_centro_custo_w			integer;
ie_sistema_ext_w			varchar(15);
ie_entrada_saida_w			varchar(1);
ie_tipo_nota_w				varchar(15);
cd_operacao_nf_w			nota_fiscal.cd_operacao_nf%type;
cd_procedimento_w			procedimento.cd_procedimento%type;
nr_interno_conta_w			conta_paciente.nr_interno_conta%type;
nr_seq_protocolo_w			protocolo_convenio.nr_seq_protocolo%type;
cd_convenio_w				convenio.cd_convenio%type;

c01 CURSOR FOR
SELECT	cd_material,
	cd_procedimento
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_nf_p;

c02 CURSOR FOR
SELECT	ie_integra
from	(
SELECT	coalesce(ie_integra,'S') ie_integra,
	cd_material,
	cd_classe_material,
	cd_subgrupo_material,
	cd_grupo_material
from	regra_integr_nf_estrut
where	nr_seq_regra = nr_seq_regra_w
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
and (coalesce(cd_material, cd_material_w) 			= cd_material_w or cd_material_w = 0)
and	coalesce(ie_tipo_regra,'M') = 'M'
and	coalesce(cd_procedimento_w::text, '') = ''
and	((coalesce(ie_estoque,'T') = 'T') or
	((coalesce(ie_estoque,'T') = 'S') and (ie_estoque_w = 'S')) or
	((coalesce(ie_estoque,'T') = 'N') and (ie_estoque_w = 'N')))
and	((coalesce(ie_padronizado,'T') = 'T') or
	((coalesce(ie_padronizado,'T') = 'S') and (ie_padronizado_w = 'S')) or
	((coalesce(ie_padronizado,'T') = 'N') and (ie_padronizado_w = 'N')))

union

select	coalesce(ie_integra,'S') ie_integra,
	cd_material,
	cd_classe_material,
	cd_subgrupo_material,
	cd_grupo_material
from	regra_integr_nf_estrut
where	nr_seq_regra = nr_seq_regra_w
and	coalesce(ie_tipo_regra,'M') = 'P'
and	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')) alias33
order by
	coalesce(cd_material, 0),
	coalesce(cd_classe_material, 0),
	coalesce(cd_subgrupo_material, 0),
	coalesce(cd_grupo_material, 0);

c03 CURSOR FOR
SELECT	a.nr_sequencia
from	regra_integr_nota_fiscal a
where	1 = 1
and	a.ie_integracao = ie_sistema_ext_w
and (cd_perfil = cd_perfil_w or coalesce(cd_perfil::text, '') = '')
and (coalesce(cd_operacao_nf, cd_operacao_nf_w) = cd_operacao_nf_w)
and (a.cd_convenio = cd_convenio_w or coalesce(a.cd_convenio::text, '') = '')
and	((coalesce(ie_entrada_saida,'A') = 'A') or (coalesce(ie_entrada_saida,'E') = ie_entrada_saida_w) or (coalesce(ie_entrada_saida,'S') = ie_entrada_saida_w))
and exists(
	SELECT	1
	from	regra_integr_nf_estrut x
	where	x.nr_seq_regra = a.nr_sequencia
	and	coalesce(x.cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
	and	coalesce(x.cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
	and	coalesce(x.cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
	and (coalesce(x.cd_material, cd_material_w) 			= cd_material_w or cd_material_w = 0)
	and	coalesce(x.ie_tipo_regra,'M') = 'M'
	and	coalesce(cd_procedimento_w::text, '') = ''
	and	((coalesce(x.ie_estoque,'T') = 'T') or
		((coalesce(x.ie_estoque,'T') = 'S') and (ie_estoque_w = 'S')) or
		((coalesce(x.ie_estoque,'T') = 'N') and (ie_estoque_w = 'N')))
	and	((coalesce(x.ie_padronizado,'T') = 'T') or
		((coalesce(x.ie_padronizado,'T') = 'S') and (ie_padronizado_w = 'S')) or
		((coalesce(x.ie_padronizado,'T') = 'N') and (ie_padronizado_w = 'N')))
	
union

	select	1
	from	regra_integr_nf_estrut x
	where	x.nr_seq_regra = a.nr_sequencia
	and	coalesce(x.ie_tipo_regra,'M') = 'P'
	and	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> ''))
order by 	coalesce(ie_entrada_saida,'A') desc,
	coalesce(cd_perfil,99999) desc;

	

BEGIN

ie_sistema_ext_w	:= upper(ie_sistema_ext_p);

select	ie_tipo_nota,
	cd_estabelecimento,
	Obter_perfil_Ativo,
	cd_operacao_nf,
	nr_interno_conta,
	nr_seq_protocolo
into STRICT	ie_tipo_nota_w,
	cd_estabelecimento_w,
	cd_perfil_w,
	cd_operacao_nf_w,
	nr_interno_conta_w,
	nr_seq_protocolo_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_nf_p;

if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
	begin
	select	cd_convenio_parametro
	into STRICT	cd_convenio_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_w;
	exception
	when no_data_found or too_many_rows then
		cd_convenio_w := null;
	end;

elsif (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
	begin
	select	cd_convenio
	into STRICT	cd_convenio_w
	from	protocolo_convenio
	where	nr_seq_protocolo = nr_seq_protocolo_w;
	exception
	when no_data_found or too_many_rows then
		cd_convenio_w := null;
	end;
end if;

if (ie_tipo_nota_w in ('EN','EF','EP')) then
	ie_entrada_saida_w	:= 'E';
else
	ie_entrada_saida_w	:= 'S';
end if;

ie_integra_w := 'N';

open C01;
loop
fetch C01 into	
	cd_material_w,
	cd_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/* Parar assim que ja houver um item para integrar */

	if (ie_integra_w <> 'S') then
		begin

		begin
		select	a.cd_grupo_material,
			a.cd_subgrupo_material,
			a.cd_classe_material,
			b.ie_padronizado,
			b.ie_material_estoque
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			ie_padronizado_w,
			ie_estoque_w
		from	estrutura_material_v a,
			material_estab b
		where	a.cd_material = b.cd_material
		and	b.cd_estabelecimento = cd_estabelecimento_w
		and	a.cd_material = cd_material_w;
		exception
		when no_data_found or too_many_rows then
			cd_grupo_material_w := null;
			cd_subgrupo_material_w := null;
			cd_classe_material_w := null;
			ie_padronizado_w := null;
			ie_estoque_w := null;
		end;

		open C03;
		loop
		fetch C03 into	
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			nr_seq_regra_w := nr_seq_regra_w;
			end;
		end loop;
		close C03;

		if (nr_seq_regra_w > 0) then
			begin
		
			open C02;
			loop
			fetch C02 into	
				ie_integra_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin	
				ie_integra_w	:= ie_integra_w;
				end;
			end loop;
			close C02;		
	
			end;
		end if;

		end;
	end if;

	end;
end loop;
close C01;	

return ie_integra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_integr_nf_ext ( nr_sequencia_nf_p bigint, ie_sistema_ext_p text) FROM PUBLIC;

