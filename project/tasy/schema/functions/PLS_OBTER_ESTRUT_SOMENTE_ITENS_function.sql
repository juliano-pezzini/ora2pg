-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_estrut_somente_itens ( nr_seq_estrutura_p bigint, nr_seq_guia_p bigint, nr_seq_conta_p bigint, nr_seq_proc_p bigint, nr_seq_mat_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint) RETURNS varchar AS $body$
DECLARE


nr_seq_conta_proc_w		bigint;
nr_seq_guia_proc_w		bigint;
ie_estrutura_w			varchar(1)	:= 'N';
ie_retorno_w                    varchar(1)     := 'N';
cd_procedimento_w               bigint := 0;
cd_area_procedimento_w          bigint := 0;
cd_especialidade_w              bigint := 0;
cd_grupo_proc_w                 bigint := 0;
ie_origem_proced_w              bigint;
ie_origem_proced_ww             bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_material_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_regra_estrutura_w	bigint;
nr_seq_guia_mat_w		bigint;
qt_itens_estrutura_w		bigint;
qt_itens_procs_mats_w		bigint 	:= 0;
ie_existe_fora_estrut_w		varchar(1)	:= 'N';
cd_guia_w			varchar(20);
cd_guia_referencia_w		varchar(20);
nr_seq_segurado_w		bigint;
cd_area_w			bigint;
cd_especialidade_ww		bigint;
cd_grupo_w			bigint;
ie_origem_proced_out_w		bigint;
ie_existe_pacote_w		varchar(1)	:= 'N';

C01 CURSOR FOR
        SELECT  nr_sequencia,
		cd_procedimento,
                ie_origem_proced
        from    pls_guia_plano_proc
        where   nr_seq_guia = nr_seq_guia_p
        order by 1;

C02 CURSOR FOR
        SELECT  a.nr_sequencia,
		a.cd_procedimento,
                a.ie_origem_proced
        from    pls_conta_proc a,
		pls_conta b
        where   a.nr_seq_conta = b.nr_sequencia
	and	b.nr_seq_segurado = nr_seq_segurado_w
	and	((a.nr_seq_conta = nr_seq_conta_p)
	or (b.cd_guia = cd_guia_referencia_w)
	or (b.cd_guia_referencia = cd_guia_w))
        order by 1;

C04 CURSOR FOR
        SELECT  a.nr_sequencia,
		a.nr_seq_material
        from    pls_conta_mat a,
		pls_conta b
        where   a.nr_seq_conta = b.nr_sequencia
	and	b.nr_seq_segurado = nr_seq_segurado_w
	and	((a.nr_seq_conta = nr_seq_conta_p)
	or (b.cd_guia = cd_guia_referencia_w)
	or (b.cd_guia_referencia = cd_guia_w))
        order by 1;

C05 CURSOR FOR
        SELECT  nr_sequencia,
		nr_seq_material
        from    pls_guia_plano_mat
        where   nr_seq_guia = nr_seq_guia_p
        order by 1;


BEGIN
/* Definição; Somente itens da regra
     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    Para a ocorrência ser válida deve haver todos os procedimentos informados na estrutura, e no campo procedimento se houver, mais procedimentos que não estão na regra.

   No caso de uma regra Autorização / Conta é gerado  ocorrência na guia/conta por haver mais do que os procedimentos cadastrados em regra

   No caso de uma regra Itens é gerado ocorrência nos Itens que não estão cadastrados na regra.

    OS 309863 - Diego - 25/04/2011  - Ajustado para que o sistema verifique e considere como parte de estruturas os materiais cadastrados na pasta estruturas;
			- Ajustado também para que o sistema somente verifique os campos Procedimentos e materiais.
			Isto foi realizado porque ao cadastrar uma aréa na estrutura por exemplo esta se dizendo que todos os procedimento da área fazem parte da estrutura.
			Assim para ser gerado a ocorrência por somente os itens das regras a conta teria que apresentar todos os procedimentos da área, o que seria inviavel.

    OS 309863 - Diego - 18/06/2011 - Ajustado para que seja necessário haver todos os procedimentos e materiais da regra para a ocorrência se tornar válida.

    Retorno = 'S' Se deve gerar ocorrência
	'N' Se não feve gerar ocorrencia

   Obs: O procedimento da regra (cd_procedimento_p) funciona como uma adendo da estrutura ou seja
             Caso exista funciona como se fosse parte da estrutura
*/
/*Verificado quantas regras existem nas estrutura (valendo somente procedimento e material)*/

select	count(*)
into STRICT	qt_itens_estrutura_w
from	pls_ocorrencia_estrut_item
where	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') or (nr_seq_material IS NOT NULL AND nr_seq_material::text <> ''))
and	nr_seq_estrutura = nr_seq_estrutura_p
and	ie_estrutura = 'S';

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
	qt_itens_estrutura_w := qt_itens_estrutura_w + 1;
end if;

if (coalesce(nr_seq_conta_p,0) > 0) then
	select	nr_seq_segurado,
		cd_guia,
		cd_guia_referencia
	into STRICT	nr_seq_segurado_w,
		cd_guia_w,
		cd_guia_referencia_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;
	/* OS 466061 - Alterado tratamento para quando for conta médica */

	/*Obtem os procedimentos da conta.*/

	open C02;
	loop
	fetch C02 into
		nr_seq_conta_proc_w,
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_ww, cd_grupo_w, ie_origem_proced_out_w) INTO STRICT cd_area_w, cd_especialidade_ww, cd_grupo_w, ie_origem_proced_out_w;

		select  CASE WHEN count(nr_sequencia)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_estrutura_w
		from    pls_ocorrencia_estrut_item a
		where   nr_seq_estrutura        = nr_seq_estrutura_p
		and     coalesce(a.cd_procedimento,cd_procedimento_w) 	= cd_procedimento_w
		and     coalesce(a.ie_origem_proced,ie_origem_proced_out_w) 	= ie_origem_proced_out_w
		and	coalesce(a.cd_grupo_proc,cd_grupo_w) = cd_grupo_w
		and	coalesce(a.cd_especialidade,cd_especialidade_ww) = cd_especialidade_ww
		and	coalesce(a.cd_area_procedimento,cd_area_w) = cd_area_w
		and	ie_estrutura =  'S';

		/*Se a regra selecionda diz que este procedimento não faz parte da estrtura*/

		if (coalesce(ie_estrutura_w,'N') = 'N') then
			/*Se este procedimento não faz parte da regra é verificado se este procedimento faz parte da regra(vide observação no inicio da rotina)*/

			--if	((cd_procedimento_w  = cd_procedimento_p) and
			--	 (ie_origem_proced_w = ie_origem_proced_p))then
				qt_itens_procs_mats_w := qt_itens_procs_mats_w + 1;
			--else
			ie_existe_fora_estrut_w := 'S';
			--end if;
		else
			ie_existe_pacote_w	:= 'S';
			qt_itens_procs_mats_w	:= qt_itens_procs_mats_w + 1;
		end if;
		end;
	end loop;
	close C02;

	/*Obtem os mats da conta*/

	open C04;
	loop
	fetch C04 into
		nr_seq_conta_mat_w,
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		select	max(a.nr_seq_estrut_mat)
		into STRICT	nr_seq_estrut_mat_w
		from	pls_material	a
		where	a.nr_sequencia	= nr_seq_material_w;

		select  CASE WHEN count(nr_sequencia)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_estrutura_w
		from    pls_ocorrencia_estrut_item a
		where   nr_seq_estrutura        = nr_seq_estrutura_p
		and	coalesce(a.nr_seq_material,nr_seq_material_w)	= nr_seq_material_w
		and	coalesce(a.nr_seq_estrut_mat,nr_seq_estrut_mat_w)	= nr_seq_estrut_mat_w
		and	((a.nr_seq_estrut_mat IS NOT NULL AND a.nr_seq_estrut_mat::text <> '') or (a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> ''))
		and	ie_estrutura =  'S';

		/*Se a regra selecionda diz que este procedimento não faz parte da estrtura*/

		if (coalesce(ie_estrutura_w,'N') = 'N') then
			ie_existe_fora_estrut_w := 'S';
		else
			ie_existe_pacote_w	:= 'S';
			qt_itens_procs_mats_w	:= qt_itens_procs_mats_w + 1;
		end if;
		end;
	end loop;
	close C04;
elsif (coalesce(nr_seq_guia_p,0) > 0) then
	/*Obtem os procedimentos da guia.*/

	open C01;
	loop
	fetch C01 into
		nr_seq_guia_proc_w,
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		/*Obtem se o procedimento faz parte da estrutura*/

		select  CASE WHEN count(nr_sequencia)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_estrutura_w
		from    pls_ocorrencia_estrut_item a
		where   nr_seq_estrutura        = nr_seq_estrutura_p
		and     a.cd_procedimento 	= cd_procedimento_w
		and     a.ie_origem_proced 	= ie_origem_proced_w
		and	ie_estrutura =  'S';

		/*Se a regra selecionda diz que este procedimento não faz parte da estrtura*/

		if (coalesce(ie_estrutura_w,'N') = 'N') then
			/*Se este procedimento não faz parte da regra é verificado se este procedimento faz parte da regra(vide observação no inicio da rotina)*/

			if	(cd_procedimento_w  = cd_procedimento_p AND ie_origem_proced_w = ie_origem_proced_p)then
				qt_itens_procs_mats_w := qt_itens_procs_mats_w + 1;
			else
				ie_existe_fora_estrut_w := 'S';
			end if;
		else
			qt_itens_procs_mats_w := qt_itens_procs_mats_w + 1;
		end if;
		end;
	end loop;
	close C01;

	/*Obtem os mats da conta*/

	open C05;
	loop
	fetch C05 into
		nr_seq_guia_mat_w,
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		select  CASE WHEN count(nr_sequencia)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_estrutura_w
		from    pls_ocorrencia_estrut_item a
		where   nr_seq_estrutura        = nr_seq_estrutura_p
		and	nr_seq_material		= nr_seq_material_w
		and	ie_estrutura =  'S';

		/*Se a regra selecionda diz que este procedimento não faz parte da estrtura*/

		if (coalesce(ie_estrutura_w,'N') = 'N') then
			ie_existe_fora_estrut_w := 'S';
		else
			qt_itens_procs_mats_w := qt_itens_procs_mats_w + 1;
		end if;
		end;
	end loop;
	close C05;
end if;

if (coalesce(nr_seq_guia_p,0) > 0) then
	if (qt_itens_procs_mats_w = qt_itens_estrutura_w) and (ie_existe_fora_estrut_w = 'S') then
		ie_retorno_w := 'S';
	end if;
else
	if (ie_existe_fora_estrut_w = 'S') and (ie_existe_pacote_w = 'S') then
		ie_retorno_w := 'S';
	end if;
end if;

if (ie_retorno_w = 'S') then
	if (coalesce(nr_seq_guia_p,0) > 0) then
		if (coalesce(nr_seq_proc_p,0) > 0) then
			select  cd_procedimento,
				ie_origem_proced
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w
			from	pls_guia_plano_proc
			where   nr_seq_guia	= nr_seq_guia_p
			and	nr_sequencia	= nr_seq_proc_p;
		elsif (coalesce(nr_seq_mat_p,0) > 0) then
			select  nr_seq_material
			into STRICT	nr_seq_material_w
			from    pls_guia_plano_mat
			where   nr_seq_guia	= nr_seq_guia_p
			and	nr_sequencia	= nr_seq_mat_p;
		end if;
	elsif (coalesce(nr_seq_conta_p,0) > 0) then
		if (coalesce(nr_seq_proc_p,0) > 0) then
			select 	cd_procedimento,
				ie_origem_proced
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w
			from    pls_conta_proc
			where   nr_seq_conta	= nr_seq_conta_p
			and	nr_sequencia	= nr_seq_proc_p;
		elsif (coalesce(nr_seq_mat_p,0) > 0) then
			select  nr_seq_material
			into STRICT	nr_seq_material_w
			from    pls_conta_mat
			where   nr_seq_conta	= nr_seq_conta_p
			and	nr_sequencia	= nr_seq_mat_p;
		end if;
	end if;

	if (coalesce(nr_seq_guia_p,0) > 0) then
		if (coalesce(nr_seq_proc_p,0) > 0) then
			select  CASE WHEN count(nr_sequencia)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_retorno_w
			from    pls_ocorrencia_estrut_item a
			where   nr_seq_estrutura        = nr_seq_estrutura_p
			and     a.cd_procedimento 	= cd_procedimento_w
			and     a.ie_origem_proced 	= ie_origem_proced_w
			and	ie_estrutura =  'S';

			if	(cd_procedimento_w  = cd_procedimento_p AND ie_origem_proced_w = ie_origem_proced_p)then
				ie_retorno_w := 'N';
			end if;
		elsif (coalesce(nr_seq_mat_p,0) > 0) then
			select  CASE WHEN count(nr_sequencia)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_retorno_w
			from    pls_ocorrencia_estrut_item a
			where   nr_seq_estrutura        = nr_seq_estrutura_p
			and	nr_seq_material		= nr_seq_material_w
			and	ie_estrutura =  'S';
		end if;
	else
		if (coalesce(nr_seq_proc_p,0) > 0) then
			SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_ww, cd_grupo_w, ie_origem_proced_out_w) INTO STRICT cd_area_w, cd_especialidade_ww, cd_grupo_w, ie_origem_proced_out_w;

			select  CASE WHEN count(nr_sequencia)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_retorno_w
			from    pls_ocorrencia_estrut_item a
			where   nr_seq_estrutura        = nr_seq_estrutura_p
			and     coalesce(a.cd_procedimento,cd_procedimento_w) 	= cd_procedimento_w
			and     coalesce(a.ie_origem_proced,ie_origem_proced_out_w) 	= ie_origem_proced_out_w
			and	coalesce(a.cd_grupo_proc,cd_grupo_w) = cd_grupo_w
			and	coalesce(a.cd_especialidade,cd_especialidade_ww) = cd_especialidade_ww
			and	coalesce(a.cd_area_procedimento,cd_area_w) = cd_area_w
			and	ie_estrutura =  'S';
		elsif (coalesce(nr_seq_mat_p,0) > 0) then
			select	max(a.nr_seq_estrut_mat)
			into STRICT	nr_seq_estrut_mat_w
			from	pls_material	a
			where	a.nr_sequencia	= nr_seq_material_w;

			select  CASE WHEN count(nr_sequencia)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_retorno_w
			from    pls_ocorrencia_estrut_item a
			where   nr_seq_estrutura        = nr_seq_estrutura_p
			and	coalesce(a.nr_seq_material,nr_seq_material_w)	= nr_seq_material_w
			and	coalesce(a.nr_seq_estrut_mat,nr_seq_estrut_mat_w)	= nr_seq_estrut_mat_w
			and	((a.nr_seq_estrut_mat IS NOT NULL AND a.nr_seq_estrut_mat::text <> '') or (a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> ''))
			and	ie_estrutura =  'S';
		end if;
	end if;
end if;

return  ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_estrut_somente_itens ( nr_seq_estrutura_p bigint, nr_seq_guia_p bigint, nr_seq_conta_p bigint, nr_seq_proc_p bigint, nr_seq_mat_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint) FROM PUBLIC;

