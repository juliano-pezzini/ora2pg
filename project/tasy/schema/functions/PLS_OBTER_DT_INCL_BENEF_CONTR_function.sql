-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dt_incl_benef_contr ( nr_seq_contrato_p bigint, ie_tipo_contratacao_p text, dt_contratacao_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) RETURNS timestamp AS $body$
DECLARE


ie_estipulante_contrato_w	varchar(10);
nr_seq_regra_incl_benef_w	bigint;
dt_dia_inclusao_w		integer;
ie_tipo_data_w			varchar(2);

dt_contratacao_w	timestamp;

ie_manter_data_inclusao_w	varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_data,
		dt_dia_inclusao,
		coalesce(ie_manter_data_inclusao,'N')
	from	(	SELECT	a.nr_sequencia,
				a.ie_acao_contrato,
				a.ie_estipulante_contrato,
				a.dt_limite_movimentacao,
				a.ie_tipo_data,
				a.dt_dia_inclusao,
				a.ie_manter_data_inclusao
			from	pls_regra_inclusao_benef	a,
				pls_contrato			b
			where	a.nr_seq_contrato	= b.nr_sequencia
			and	a.nr_seq_contrato 	= nr_seq_contrato_p
			and	clock_timestamp() between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp())
			and	((coalesce(a.ie_estipulante_contrato,'A') = ie_estipulante_contrato_w) or (coalesce(a.ie_estipulante_contrato,'A') = 'A'))
			and	coalesce(a.ie_acao_contrato,'L')	= 'L'
			and	(to_char(dt_contratacao_p,'dd'))::numeric  <= a.dt_limite_movimentacao
			and	coalesce(a.ie_aplicacao_regra,'T') in ('T','I')
			
union all

			select	a.nr_sequencia,
				a.ie_acao_contrato,
				a.ie_estipulante_contrato,
				a.dt_limite_movimentacao,
				a.ie_tipo_data,
				a.dt_dia_inclusao,
				a.ie_manter_data_inclusao
			from	pls_regra_inclusao_benef	a
			where	coalesce(a.nr_seq_contrato::text, '') = ''
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	clock_timestamp() between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp())
			and	((coalesce(a.ie_estipulante_contrato,'A') = ie_estipulante_contrato_w) or (coalesce(a.ie_estipulante_contrato,'A') = 'A'))
			and	coalesce(a.ie_acao_contrato,'L')	= 'L'
			and	((a.ie_tipo_contratacao = ie_tipo_contratacao_p) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
			and	(to_char(dt_contratacao_p,'dd'))::numeric 	<= a.dt_limite_movimentacao
			and	coalesce(a.ie_aplicacao_regra,'T') in ('T','I')
			and	not exists (	select	1
							from	pls_regra_inclusao_benef	x,
								pls_contrato			y
							where	x.nr_seq_contrato	= y.nr_sequencia
							and	x.nr_seq_contrato 	= nr_seq_contrato_p)) alias33
	order by coalesce(ie_acao_contrato,'-1'),
		 coalesce(ie_estipulante_contrato,'-1'),
		 dt_limite_movimentacao desc;


BEGIN
select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF' WHEN cd_cgc_estipulante=cd_pf_estipulante THEN null  ELSE 'PJ' END
into STRICT	ie_estipulante_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

open C01;
loop
fetch C01 into
	nr_seq_regra_incl_benef_w,
	ie_tipo_data_w,
	dt_dia_inclusao_w,
	ie_manter_data_inclusao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

if (nr_seq_regra_incl_benef_w IS NOT NULL AND nr_seq_regra_incl_benef_w::text <> '') and (ie_manter_data_inclusao_w <> 'S') then
	if (ie_tipo_data_w = 'P') then
		select	add_months(trunc(dt_contratacao_p,'mm')-1 +(dt_dia_inclusao_w),+1)
		into STRICT	dt_contratacao_w
		;
	elsif (ie_tipo_data_w = 'SP') then
		select	add_months(trunc(dt_contratacao_p,'mm')-1 +(dt_dia_inclusao_w),+2)
		into STRICT	dt_contratacao_w
		;
	elsif (ie_tipo_data_w = 'A') then
		select	trunc(dt_contratacao_p,'mm')-1 +(dt_dia_inclusao_w)
		into STRICT	dt_contratacao_w
		;
	end if;
end if;

if (coalesce(dt_contratacao_w::text, '') = '') then
	dt_contratacao_w	:= dt_contratacao_p;
end if;

return	dt_contratacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dt_incl_benef_contr ( nr_seq_contrato_p bigint, ie_tipo_contratacao_p text, dt_contratacao_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

