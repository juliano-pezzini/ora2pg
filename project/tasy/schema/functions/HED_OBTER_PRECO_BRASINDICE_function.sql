-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (vl_medicamento double precision);


CREATE OR REPLACE FUNCTION hed_obter_preco_brasindice ( CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, CD_MATERIAL_P bigint, DT_VIGENCIA_P timestamp, IE_TIPO_PRECO_P text, IE_VERSAO_ATUAL_P bigint) RETURNS bigint AS $body$
DECLARE

type Vetor is table of campos index by integer;

CD_LABORATORIO_W	varchar(6);
CD_MEDICAMENTO_W	varchar(6);
CD_APRESENTACAO_W	varchar(6);
VL_MEDICAMENTO_W	double precision	:= 0;
IE_TIPO_PRECO_W		varchar(3);
TX_PRECO_FABRICA_W	CONVENIO_BRASINDICE.TX_PRECO_FABRICA%type       :=1;--NUMBER(15,4)	:= 1;
QT_CONVERSAO_W		double precision	:= 1;
DT_ULT_VIGENCIA_W	timestamp		:= clock_timestamp();
DT_VIGENCIA_BRAS_W	timestamp		:= clock_timestamp();
IE_RELACIONADO_BRAS_W	varchar(1)	:= 'S';
TX_BRASINDICE_PMC_W	CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type      :=1;--NUMBER(15,4)	:= 1;
TX_PMC_NEG_W		CONVENIO_BRASINDICE.TX_PMC_NEG%type;--NUMBER(15,4);
TX_PMC_POS_W		CONVENIO_BRASINDICE.TX_PMC_POS%type;--NUMBER(15,4);
IE_BRASINDICE_W		varchar(1)	:= 'N';
IE_PRECO_PORT_W		varchar(1)	:= '';
pr_ipi_w		real;
ie_exige_lib_w		varchar(01);
ie_pis_cofins_w		varchar(1);

TX_PFB_NEG_W		CONVENIO_BRASINDICE.TX_PFB_NEG%type;--NUMBER(15,4);
TX_PFB_POS_W		CONVENIO_BRASINDICE.TX_PFB_POS%type;--NUMBER(15,4);
ie_dividir_indice_pmc_w	varchar(1);
ie_dividir_indice_pfb_w	varchar(1);
cd_grupo_material_w	 smallint;
ie_tipo_convenio_w	smallint;
IE_VALOR_BRASINDICE_w	varchar(1);
i			bigint := 1;
qt_reg_w		bigint := 0;
vl_bras_w		double precision := 0;
ie_preco_medio_bras_w	varchar(1) := 'N';
vetor_valor_w		Vetor;
ie_tipo_preco_regra_w	varchar(3);
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
ie_tipo_material_w	varchar(3);

ie_div_indice_pmc_conv_w	varchar(1);
ie_div_indice_pfb_conv_w	varchar(1);
ie_div_indice_pmc_regra_w	varchar(1);
ie_div_indice_pfb_regra_w	varchar(1);
tx_brasindice_pmc_ww	CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type      :=1;--NUMBER(15,4)	:= 1;
tx_brasindice_pfb_ww	CONVENIO_BRASINDICE.TX_PRECO_FABRICA%TYPE;--NUMBER(15,4);
tx_pmc_neg_ww		CONVENIO_BRASINDICE.TX_PMC_NEG%type;--NUMBER(15,4);
tx_pmc_pos_ww		CONVENIO_BRASINDICE.TX_PMC_POS%type;--NUMBER(15,4);
tx_pfb_neg_ww		CONVENIO_BRASINDICE.TX_PFB_NEG%type;--NUMBER(15,4);
tx_pfb_pos_ww		CONVENIO_BRASINDICE.TX_PFB_POS%type;--NUMBER(15,4);
C00 CURSOR FOR
	SELECT	coalesce(tx_brasindice_pmc,0),
		coalesce(tx_preco_fabrica,0),
		coalesce(tx_pmc_neg,0),
		coalesce(tx_pmc_pos,0),
		tx_pfb_neg,
		tx_pfb_pos
	from	convenio_brasindice
	where	cd_convenio		= cd_convenio_p
	and	((coalesce(cd_categoria::text, '') = '')	or (cd_categoria = cd_categoria_p))
	and 	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
	and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
	and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
	and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
	and 	((coalesce(ie_tipo_material::text, '') = '') or (ie_tipo_material = ie_tipo_material_w))
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	dt_inicio_vigencia	= (	SELECT	max(dt_inicio_vigencia)
						from	convenio_brasindice
						where	cd_convenio		= cd_convenio_p
						and	((coalesce(cd_categoria::text, '') = '')	or (cd_categoria = cd_categoria_p))
						and 	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
						and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
						and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
						and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
						and 	((coalesce(ie_tipo_material::text, '') = '') or (ie_tipo_material = ie_tipo_material_w))
						and	dt_inicio_vigencia	<= clock_timestamp())
	order by coalesce(cd_categoria,'0'),
		coalesce(nr_seq_estrutura,0),
		coalesce(cd_grupo_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_classe_material,0),
		coalesce(ie_tipo_material,'0');

C01 CURSOR FOR
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL						= CD_MATERIAL_P
	and	coalesce(IE_SITUACAO, 'A')					= 'A'
	--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
	and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
	and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
	order by coalesce(dt_vigencia,clock_timestamp() - interval '10000 days'),
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(cd_estabelecimento,0);

C02 CURSOR FOR
	SELECT  'S'
	from	convenio_brasindice
	where	cd_convenio		= cd_convenio_p
	and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
	and 	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
	and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
	and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
	and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
	and 	((coalesce(ie_tipo_material::text, '') = '') or (ie_tipo_material = ie_tipo_material_w))
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(ie_situacao,'A')	= 'A'
	order by coalesce(cd_categoria,'0'),
		coalesce(nr_seq_estrutura,0),
		coalesce(cd_grupo_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_classe_material,0),
		coalesce(ie_tipo_material,'0');


C03 CURSOR FOR
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL						= CD_MATERIAL_P
	and	coalesce(IE_SITUACAO, 'A')					= 'A'
	--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
	and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
	and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
	order by coalesce(dt_vigencia,clock_timestamp() - interval '10000 days'),
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							TX_BRASINDICE_PFB_ww,
							TX_BRASINDICE_PMC_ww,
							TX_PMC_NEG_ww,
							TX_PMC_POS_ww,
							TX_PFB_POS_ww,
							tx_pfb_neg_ww,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null),0);

C04 CURSOR FOR
		SELECT	coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							TX_BRASINDICE_PFB_ww,
							TX_BRASINDICE_PMC_ww,
							TX_PMC_NEG_ww,
							TX_PMC_POS_ww,
							TX_PFB_POS_ww,
							tx_pfb_neg_ww,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null),0)
		FROM	MATERIAL_BRASINDICE
		WHERE	CD_MATERIAL						= CD_MATERIAL_P
		and	coalesce(IE_SITUACAO, 'A')					= 'A'
		--and	nvl(dt_vigencia,dt_vigencia_bras_w)			<= dt_vigencia_bras_w
		and 	dt_vigencia_bras_w between coalesce(dt_vigencia, dt_vigencia_bras_w) and coalesce(dt_final_vigencia, dt_vigencia_bras_w)
		and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
		and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w)		= ie_tipo_convenio_w
		and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0))	= coalesce(cd_estabelecimento_p,0)
		order by coalesce(obter_valor_medic_brasindice(	cd_estabelecimento_p,
							cd_medicamento,
							cd_apresentacao,
							cd_laboratorio,
							qt_conversao,
							dt_vigencia_bras_w,
							TX_BRASINDICE_PFB_ww,
							TX_BRASINDICE_PMC_ww,
							TX_PMC_NEG_ww,
							TX_PMC_POS_ww,
							TX_PFB_POS_ww,
							tx_pfb_neg_ww,
							cd_convenio_p,
							cd_categoria_p,
							cd_material_p,
							null),0) asc;

C05 CURSOR FOR
	SELECT	ie_tipo_preco
	from	regra_prior_brasindice
	where	dt_vigencia <= dt_vigencia_bras_w
	order by 	dt_vigencia desc,
		nr_prioridade;

/*Cursor C06 is
	select	nvl(max(ie_dividir_indice_pmc),'N')
	from 	convenio_brasindice
	where	cd_convenio = cd_convenio_p
	and	((cd_categoria is null) or (cd_categoria = cd_categoria_p))
	and 	((cd_grupo_material is null) or (cd_grupo_material = cd_grupo_material_w))
	and 	((cd_subgrupo_material is null) or (cd_subgrupo_material = cd_subgrupo_material_w))
	and 	((cd_classe_material is null) or (cd_classe_material = cd_classe_material_w))
	and	((nr_seq_estrutura is null) or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
	and 	((ie_tipo_material is null) or (ie_tipo_material = ie_tipo_material_w))
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	nvl(ie_situacao,'A')	= 'A'
	order by nvl(cd_categoria,'0'),
		nvl(nr_seq_estrutura,0),
		nvl(cd_grupo_material,0),
		nvl(cd_subgrupo_material,0),
		nvl(cd_classe_material,0),
		nvl(ie_tipo_material,'0');

Cursor C07 is
	select	nvl(max(ie_dividir_indice_pfb),'N')
	from 	convenio_brasindice
	where	cd_convenio = cd_convenio_p
	and	((cd_categoria is null) or (cd_categoria = cd_categoria_p))
	and 	((cd_grupo_material is null) or (cd_grupo_material = cd_grupo_material_w))
	and 	((cd_subgrupo_material is null) or (cd_subgrupo_material = cd_subgrupo_material_w))
	and 	((cd_classe_material is null) or (cd_classe_material = cd_classe_material_w))
	and	((nr_seq_estrutura is null) or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
	and 	((ie_tipo_material is null) or (ie_tipo_material = ie_tipo_material_w))
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	nvl(ie_situacao,'A')	= 'A'
	order by nvl(cd_categoria,'0'),
		nvl(nr_seq_estrutura,0),
		nvl(cd_grupo_material,0),
		nvl(cd_subgrupo_material,0),
		nvl(cd_classe_material,0),
		nvl(ie_tipo_material,'0');		*/
BEGIN

select 	max(cd_grupo_material),
	max(cd_subgrupo_material),
	max(cd_classe_material),
	max(ie_tipo_material)
into STRICT	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	ie_tipo_material_w
from 	estrutura_material_v
where 	cd_material = cd_material_p;

/* Obter regra do Brasíndice para cargas com dois tipos de preços (PFB e PMC)  */

select	substr(Obter_Regra_Brasindice_Preco(cd_convenio_p,
					cd_categoria_p,
					cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					cd_material_p,
					dt_vigencia_p,
					cd_estabelecimento_p,
					null),1,3)
into STRICT	ie_tipo_preco_regra_w
;

open C00;
loop
fetch C00 into
	tx_brasindice_pmc_ww,
	tx_brasindice_pfb_ww,
	tx_pmc_neg_ww,
	tx_pmc_pos_ww,
	tx_pfb_neg_ww,
	tx_pfb_pos_ww;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	tx_brasindice_pmc_ww	:= 	tx_brasindice_pmc_ww;
	tx_brasindice_pfb_ww	:=	tx_brasindice_pfb_ww;
	tx_pmc_neg_ww		:=	tx_pmc_neg_ww;
	tx_pmc_pos_ww		:=	tx_pmc_pos_ww;
	tx_pfb_neg_ww		:=	tx_pfb_neg_ww;
	tx_pfb_pos_ww		:=	tx_pfb_pos_ww;
	end;
end loop;
close C00;

if (ie_tipo_preco_regra_w = 'REG') then

	dt_vigencia_bras_w 	:= coalesce(dt_vigencia_p,clock_timestamp());

	open C05;
	loop
	fetch C05 into
		ie_tipo_preco_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin

		tx_preco_fabrica_w	:= TX_BRASINDICE_PFB_ww;
		tx_pfb_neg_w		:= coalesce(tx_pfb_neg_ww, TX_BRASINDICE_PFB_ww);
		tx_pfb_pos_w		:= coalesce(TX_PFB_POS_ww, TX_BRASINDICE_PFB_ww);

		tx_brasindice_pmc_w	:= TX_BRASINDICE_PMC_ww;
		tx_pmc_neg_w		:= coalesce(TX_PMC_NEG_ww, TX_BRASINDICE_PMC_ww);
		tx_pmc_pos_w		:= coalesce(TX_PMC_POS_ww, TX_BRASINDICE_PMC_ww);

		select	coalesce(max(ie_exige_lib_bras),'N'),
			coalesce(max(ie_dividir_indice_pmc),'N'),
			coalesce(max(ie_dividir_indice_pfb),'N'),
			coalesce(max(IE_VALOR_BRASINDICE),'N')
		into STRICT	ie_exige_lib_w,
			ie_dividir_indice_pmc_w,
			ie_dividir_indice_pfb_w,
			ie_valor_brasindice_w
		from	Parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_p;

		ie_tipo_convenio_w	:= coalesce(obter_tipo_convenio(cd_convenio_p),0);
		if (ie_valor_brasindice_w	= 'N') then
			OPEN C01;
			LOOP
			FETCH C01 into
					cd_laboratorio_w,
					cd_medicamento_w,
					cd_apresentacao_w,
					qt_conversao_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
			END LOOP;
			CLOSE C01;
		elsif (ie_valor_brasindice_w	= 'S') then
			OPEN C03;
			LOOP
			FETCH C03 into
					cd_laboratorio_w,
					cd_medicamento_w,
					cd_apresentacao_w,
					qt_conversao_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
			END LOOP;
			CLOSE C03;
		end if;

		select 	max(ie_preco_medio_bras)
		into STRICT	ie_preco_medio_bras_w
		from 	convenio_estabelecimento
		where	cd_convenio = cd_convenio_p
		and		cd_estabelecimento = cd_estabelecimento_p;

		/* Obter preço do medicamento */

		if (IE_EXIGE_LIB_W	= 'S') then
			begin
			SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */				coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
				IE_TIPO_PRECO,
				DT_INICIO_VIGENCIA,
				coalesce(IE_PRECO_PORT,'T'),
				coalesce(pr_ipi,0),
				coalesce(ie_pis_cofins,'T')
			INTO STRICT	VL_MEDICAMENTO_W,
				IE_TIPO_PRECO_W,
				DT_ULT_VIGENCIA_W,
				IE_PRECO_PORT_W,
				pr_ipi_w,
				ie_pis_cofins_w
			FROM	BRASINDICE_PRECO
			WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
			AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
			AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
			--AND	IE_TIPO_PRECO		= NVL(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
			AND	DT_INICIO_VIGENCIA	=
				(SELECT /*+ INDEX (A BRAPREC_PK) */					MAX(A.DT_INICIO_VIGENCIA)
				FROM	BRASINDICE_PRECO A
				WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
				AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
				AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
				--AND	A.IE_TIPO_PRECO	      = NVL(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
				AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
				AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
			exception
				when others then
					begin
					SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */						coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
						IE_TIPO_PRECO,
						DT_INICIO_VIGENCIA,
						coalesce(IE_PRECO_PORT,'T'),
						coalesce(pr_ipi,0),
						coalesce(ie_pis_cofins,'T')
					INTO STRICT	VL_MEDICAMENTO_W,
						IE_TIPO_PRECO_W,
						DT_ULT_VIGENCIA_W,
						IE_PRECO_PORT_W,
						pr_ipi_w,
						ie_pis_cofins_w
					FROM	BRASINDICE_PRECO
					WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
					AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
					AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
					AND	IE_TIPO_PRECO		= coalesce(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
					AND	DT_INICIO_VIGENCIA	=
						(SELECT /*+ INDEX (A BRAPREC_PK) */							MAX(A.DT_INICIO_VIGENCIA)
						FROM	BRASINDICE_PRECO A
						WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
						AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
						AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
						AND	A.IE_TIPO_PRECO	      = IE_TIPO_PRECO_P
						AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
						AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
					exception
						when others then
						IE_TIPO_PRECO_W	:= '';
					end;
			end;
		else
			begin
			SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */				coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
				IE_TIPO_PRECO,
				DT_INICIO_VIGENCIA,
				coalesce(IE_PRECO_PORT,'T'),
				coalesce(pr_ipi,0),
				coalesce(ie_pis_cofins,'T')
			INTO STRICT	VL_MEDICAMENTO_W,
				IE_TIPO_PRECO_W,
				DT_ULT_VIGENCIA_W,
				IE_PRECO_PORT_W,
				pr_ipi_w,
				ie_pis_cofins_w
			FROM	BRASINDICE_PRECO
			WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
			AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
			AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
			--AND	IE_TIPO_PRECO		= NVL(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
			AND	DT_INICIO_VIGENCIA	=
				(SELECT /*+ INDEX (A BRAPREC_I3) */					MAX(A.DT_INICIO_VIGENCIA)
				FROM	BRASINDICE_PRECO A
				WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
				AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
				AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
				--AND	A.IE_TIPO_PRECO	      = NVL(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
				AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
				AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
			exception
				when others then
					begin
					SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */						coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
						IE_TIPO_PRECO,
						DT_INICIO_VIGENCIA,
						coalesce(IE_PRECO_PORT,'T'),
						coalesce(pr_ipi,0),
						coalesce(ie_pis_cofins,'T')
					INTO STRICT	VL_MEDICAMENTO_W,
						IE_TIPO_PRECO_W,
						DT_ULT_VIGENCIA_W,
						IE_PRECO_PORT_W,
						pr_ipi_w,
						ie_pis_cofins_w
					FROM	BRASINDICE_PRECO
					WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
					AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
					AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
					AND	IE_TIPO_PRECO		= coalesce(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
					AND	DT_INICIO_VIGENCIA	=
						(SELECT /*+ INDEX (A BRAPREC_I3) */							MAX(A.DT_INICIO_VIGENCIA)
						FROM	BRASINDICE_PRECO A
						WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
						AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
						AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
						AND	A.IE_TIPO_PRECO	      = IE_TIPO_PRECO_P
						AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
						AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
					exception
						when others then
						IE_TIPO_PRECO_W	:= '';
					end;
			end;
		end if;

		if (ie_dividir_indice_pfb_w = 'N') then

			if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (IE_TIPO_PRECO_W = 'PFB') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
				else
					vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
				end if;
			end if;

		elsif (ie_dividir_indice_pfb_w = 'S') then

			if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (IE_TIPO_PRECO_W = 'PFB') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
				else
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
				end if;
			end if;

		elsif (ie_dividir_indice_pfb_w = 'R') then

			select	coalesce(max(ie_dividir_indice_pfb),'N')
			into STRICT	ie_div_indice_pfb_conv_w
			from 	convenio_estabelecimento
			where	cd_convenio		= cd_convenio_p
			and	cd_estabelecimento	= cd_estabelecimento_p;

			if (ie_div_indice_pfb_conv_w = 'S') then

				if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
					else
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
					end if;
				end if;

			elsif (ie_div_indice_pfb_conv_w = 'N') then

				if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
					else
						vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
					end if;
				end if;

			elsif (ie_div_indice_pfb_conv_w = 'R') then

				/*open C07;
				loop
				fetch C07 into
					ie_div_indice_pfb_regra_w;
				exit when C07%notfound;
					begin
					ie_div_indice_pfb_regra_w	:= ie_div_indice_pfb_regra_w;
					end;
				end loop;
				close C07;*/
				if (ie_div_indice_pfb_regra_w = 'S') then

					if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
						if (ie_pis_cofins_w = 'S') then
							vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
						elsif (ie_pis_cofins_w = 'N') then
							vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
						else
							vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
						end if;
					end if;

				elsif (ie_div_indice_pfb_regra_w = 'N') then

					if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
						if (ie_pis_cofins_w = 'S') then
							vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
						elsif (ie_pis_cofins_w = 'N') then
							vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
						else
							vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
						end if;
					end if;
				end if;
			end if;

		end if;

		/* Conforme resolução CMED nº 2, de 10 de março de 2006

		Art. 4º O Preço Máximo ao Consumidor - PMC será obtido por meio da divisão do Preço
		Fabricante - PF pelos fatores constantes da tabela abaixo, observadas as cargas tributárias do
		ICMS praticadas nos Estados de destino e a incidência da contribuição para o PIS/PASEP e
		COFINS, conforme o disposto na Lei nº 10.147, de 21 de dezembro de 2001.

		ICMS            Lista Positiva               Lista Negativa                     Lista Neutra
		19%   	0,7234   		0,7523    		0,7071
		18%               0,7234     		0,7519      		0,7073
		17%   	0,7234   		0,7515    		0,7075
		12%   	0,7234   		0,7499    		0,7084
		0%   	0,7234   		0,7465     		0,7103  */
		if (ie_dividir_indice_pmc_w = 'N') then

			if (TX_BRASINDICE_PMC_W IS NOT NULL AND TX_BRASINDICE_PMC_W::text <> '') and (IE_TIPO_PRECO_W = 'PMC') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= (vl_medicamento_w * TX_PMC_POS_W);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= (vl_medicamento_w * TX_PMC_NEG_W);
				else
					vl_medicamento_w	:= (vl_medicamento_w * TX_BRASINDICE_PMC_W);
				end if;
			end if;

		elsif (ie_dividir_indice_pmc_w = 'S') then

			if (TX_BRASINDICE_PMC_W IS NOT NULL AND TX_BRASINDICE_PMC_W::text <> '') and (IE_TIPO_PRECO_W = 'PMC') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , TX_PMC_POS_W);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , TX_PMC_NEG_W);
				else
					vl_medicamento_w	:= dividir(vl_medicamento_w , TX_BRASINDICE_PMC_W);
				end if;
			end if;

		elsif (ie_dividir_indice_pmc_w = 'R') then

			select	coalesce(max(ie_dividir_indice_pmc),'N')
			into STRICT	ie_div_indice_pmc_conv_w
			from 	convenio_estabelecimento
			where	cd_convenio		= cd_convenio_p
			and	cd_estabelecimento	= cd_estabelecimento_p;

			if (ie_div_indice_pmc_conv_w = 'S') then

				if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_neg_w);
					else
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_brasindice_pmc_w);
					end if;
				end if;

			elsif (ie_div_indice_pmc_conv_w = 'N') then

				if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_neg_w);
					else
						vl_medicamento_w	:= (vl_medicamento_w * tx_brasindice_pmc_w);
					end if;
				end if;

			elsif (ie_div_indice_pmc_conv_w = 'R') then

				/*open C06;
				loop
				fetch C06 into
					ie_div_indice_pmc_regra_w;
				exit when C06%notfound;
					begin
					ie_div_indice_pmc_regra_w	:= ie_div_indice_pmc_regra_w;
					end;
				end loop;
				close C06; */
				if (ie_div_indice_pmc_regra_w = 'S') then

					if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
						if (ie_pis_cofins_w = 'S') then
							vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_pos_w);
						elsif (ie_pis_cofins_w = 'N') then
							vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_neg_w);
						else
							vl_medicamento_w	:= dividir(vl_medicamento_w , tx_brasindice_pmc_w);
						end if;
					end if;

				elsif (ie_div_indice_pmc_regra_w = 'N') then

					if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
						if (ie_pis_cofins_w = 'S') then
							vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_pos_w);
						elsif (ie_pis_cofins_w = 'N') then
							vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_neg_w);
						else
							vl_medicamento_w	:= (vl_medicamento_w * tx_brasindice_pmc_w);
						end if;
					end if;
				end if;
			end if;

		end if;

		/*      converte o preco para consumo material */

		if (qt_conversao_w = 0) then
			qt_conversao_w := 1;
		end if;

		if (vl_medicamento_w > 0) then
			vl_medicamento_w := vl_medicamento_w + (vl_medicamento_w * pr_ipi_w / 100);
			vl_medicamento_w := (vl_medicamento_w / qt_conversao_w);
		end if;

		if (IE_RELACIONADO_BRAS_W = 'N') then
			vl_medicamento_w := 0;
		end if;

		IE_BRASINDICE_W		:= 'N';

		/* Passei para o início da function - Heckmann 19/05/2010 - OS 214864
		select 	max(cd_grupo_material)
		into	cd_grupo_material_w
		from 	estrutura_material_v
		where 	cd_material = cd_material_p;
		*/
		if (CD_CATEGORIA_P IS NOT NULL AND CD_CATEGORIA_P::text <> '') and (coalesce(CD_CATEGORIA_P,'0') <> '0') then
			begin

			open C02;
			loop
			fetch C02 into
				ie_brasindice_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ie_brasindice_w:= ie_brasindice_w;
				end;
			end loop;
			close C02;

			end;
		end if;

		if (ie_preco_medio_bras_w = 'S') then
			open C04;
			loop
			fetch C04 into
				vl_bras_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				vetor_valor_w[i].vl_medicamento := vl_bras_w;
				i := i + 1;
				end;
			end loop;
			close C04;

			select	round(dividir(i,2))
			into STRICT	qt_reg_w
			;

			if (i >= 3) then
				vl_medicamento_w := vetor_valor_w[qt_reg_w].vl_medicamento;
			end if;
		end if;

		if (ie_brasindice_w = 'N') then
			begin
			vl_medicamento_w	:= 0;
			dt_ult_vigencia_w	:= clock_timestamp();
			end;
		end if;

		end;
	end loop;
	close C05;

else

	tx_preco_fabrica_w	:= TX_BRASINDICE_PFB_ww;
	tx_pfb_neg_w		:= coalesce(tx_pfb_neg_ww, TX_BRASINDICE_PFB_ww);
	tx_pfb_pos_w		:= coalesce(TX_PFB_POS_ww, TX_BRASINDICE_PFB_ww);

	tx_brasindice_pmc_w	:= TX_BRASINDICE_PMC_ww;
	tx_pmc_neg_w		:= coalesce(TX_PMC_NEG_ww, TX_BRASINDICE_PMC_ww);
	tx_pmc_pos_w		:= coalesce(TX_PMC_POS_ww, TX_BRASINDICE_PMC_ww);

	select	coalesce(max(ie_exige_lib_bras),'N'),
		coalesce(max(ie_dividir_indice_pmc),'N'),
		coalesce(max(ie_dividir_indice_pfb),'N'),
		coalesce(max(IE_VALOR_BRASINDICE),'N')
	into STRICT	ie_exige_lib_w,
		ie_dividir_indice_pmc_w,
		ie_dividir_indice_pfb_w,
		ie_valor_brasindice_w
	from	Parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_p;

	DT_VIGENCIA_BRAS_W 	:= coalesce(DT_VIGENCIA_P,clock_timestamp());

	/* Obter laboratorio, medicamento e apresentacao do material até 10/12/2003 Marcus
	begin
	SELECT	CD_LABORATORIO,
		CD_MEDICAMENTO,
		CD_APRESENTACAO,
		QT_CONVERSAO
	INTO
		CD_LABORATORIO_W,
		CD_MEDICAMENTO_W,
		CD_APRESENTACAO_W,
		QT_CONVERSAO_W
	FROM	MATERIAL_BRASINDICE
	WHERE	CD_MATERIAL		= CD_MATERIAL_P
	AND	nvl(IE_SITUACAO, 'A')	= 'A'
	AND	IE_PRIORIDADE 		= 1;
	exception
	when others then
		CD_LABORATORIO_W := '';
	end;
	*/
	ie_tipo_convenio_w	:= coalesce(obter_tipo_convenio(cd_convenio_p),0);
	if (ie_valor_brasindice_w	= 'N') then
		OPEN C01;
		LOOP
		FETCH C01 into
				cd_laboratorio_w,
				cd_medicamento_w,
				cd_apresentacao_w,
				qt_conversao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		END LOOP;
		CLOSE C01;
	elsif (ie_valor_brasindice_w	= 'S') then
		OPEN C03;
		LOOP
		FETCH C03 into
				cd_laboratorio_w,
				cd_medicamento_w,
				cd_apresentacao_w,
				qt_conversao_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		END LOOP;
		CLOSE C03;
	end if;

	select 	max(ie_preco_medio_bras)
	into STRICT	ie_preco_medio_bras_w
	from 	convenio_estabelecimento
	where	cd_convenio = cd_convenio_p
	and		cd_estabelecimento = cd_estabelecimento_p;

	/* Obter preço do medicamento */

	if (IE_EXIGE_LIB_W	= 'S') then
		begin
		SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */			coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
			IE_TIPO_PRECO,
			DT_INICIO_VIGENCIA,
			coalesce(IE_PRECO_PORT,'T'),
			coalesce(pr_ipi,0),
			coalesce(ie_pis_cofins,'T')
		INTO STRICT	VL_MEDICAMENTO_W,
			IE_TIPO_PRECO_W,
			DT_ULT_VIGENCIA_W,
			IE_PRECO_PORT_W,
			pr_ipi_w,
			ie_pis_cofins_w
		FROM	BRASINDICE_PRECO
		WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
		AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
		AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
		--AND	IE_TIPO_PRECO		= NVL(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
		AND	DT_INICIO_VIGENCIA	=
			(SELECT /*+ INDEX (A BRAPREC_PK) */				MAX(A.DT_INICIO_VIGENCIA)
			FROM	BRASINDICE_PRECO A
			WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
			AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
			AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
			--AND	A.IE_TIPO_PRECO	      = NVL(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
			AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
			AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
		exception
			when others then
				begin
				SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */					coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
					IE_TIPO_PRECO,
					DT_INICIO_VIGENCIA,
					coalesce(IE_PRECO_PORT,'T'),
					coalesce(pr_ipi,0),
					coalesce(ie_pis_cofins,'T')
				INTO STRICT	VL_MEDICAMENTO_W,
					IE_TIPO_PRECO_W,
					DT_ULT_VIGENCIA_W,
					IE_PRECO_PORT_W,
					pr_ipi_w,
					ie_pis_cofins_w
				FROM	BRASINDICE_PRECO
				WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
				AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
				AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
				AND	IE_TIPO_PRECO		= coalesce(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
				AND	DT_INICIO_VIGENCIA	=
					(SELECT /*+ INDEX (A BRAPREC_PK) */						MAX(A.DT_INICIO_VIGENCIA)
					FROM	BRASINDICE_PRECO A
					WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
					AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
					AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
					AND	A.IE_TIPO_PRECO	      = IE_TIPO_PRECO_P
					AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
					AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
				exception
					when others then
					IE_TIPO_PRECO_W	:= '';
				end;
		end;
	else
		begin
		SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */			coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
			IE_TIPO_PRECO,
			DT_INICIO_VIGENCIA,
			coalesce(IE_PRECO_PORT,'T'),
			coalesce(pr_ipi,0),
			coalesce(ie_pis_cofins,'T')
		INTO STRICT	VL_MEDICAMENTO_W,
			IE_TIPO_PRECO_W,
			DT_ULT_VIGENCIA_W,
			IE_PRECO_PORT_W,
			pr_ipi_w,
			ie_pis_cofins_w
		FROM	BRASINDICE_PRECO
		WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
		AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
		AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
		--AND	IE_TIPO_PRECO		= NVL(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
		AND	DT_INICIO_VIGENCIA	=
			(SELECT /*+ INDEX (A BRAPREC_I3) */				MAX(A.DT_INICIO_VIGENCIA)
			FROM	BRASINDICE_PRECO A
			WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
			AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
			AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
			--AND	A.IE_TIPO_PRECO	      = NVL(IE_TIPO_PRECO_REGRA_W,A.IE_TIPO_PRECO)
			AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
			AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
		exception
			when others then
				begin
				SELECT /*+ INDEX (BRASINDICE_PRECO BRAPREC_PK) */					coalesce(vl_preco_final, VL_PRECO_MEDICAMENTO),
					IE_TIPO_PRECO,
					DT_INICIO_VIGENCIA,
					coalesce(IE_PRECO_PORT,'T'),
					coalesce(pr_ipi,0),
					coalesce(ie_pis_cofins,'T')
				INTO STRICT	VL_MEDICAMENTO_W,
					IE_TIPO_PRECO_W,
					DT_ULT_VIGENCIA_W,
					IE_PRECO_PORT_W,
					pr_ipi_w,
					ie_pis_cofins_w
				FROM	BRASINDICE_PRECO
				WHERE	CD_LABORATORIO		= CD_LABORATORIO_W
				AND	CD_MEDICAMENTO		= CD_MEDICAMENTO_W
				AND	CD_APRESENTACAO		= CD_APRESENTACAO_W
				AND	IE_TIPO_PRECO		= coalesce(IE_TIPO_PRECO_REGRA_W,IE_TIPO_PRECO)
				AND	DT_INICIO_VIGENCIA	=
					(SELECT /*+ INDEX (A BRAPREC_I3) */						MAX(A.DT_INICIO_VIGENCIA)
					FROM	BRASINDICE_PRECO A
					WHERE	A.CD_LABORATORIO      = CD_LABORATORIO_W
					AND	A.CD_MEDICAMENTO      = CD_MEDICAMENTO_W
					AND	A.CD_APRESENTACAO     = CD_APRESENTACAO_W
					AND	A.IE_TIPO_PRECO	      = IE_TIPO_PRECO_P
					AND	A.IE_VERSAO_ATUAL = IE_VERSAO_ATUAL_P
					AND 	((IE_EXIGE_LIB_W	= 'N') OR (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')));
				exception
					when others then
					IE_TIPO_PRECO_W	:= '';
				end;
		end;
	end if;

	if (ie_dividir_indice_pfb_w = 'N') then

		if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (IE_TIPO_PRECO_W = 'PFB') then
			if (ie_pis_cofins_w = 'S') then
				vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
			elsif (ie_pis_cofins_w = 'N') then
				vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
			else
				vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
			end if;
		end if;

	elsif (ie_dividir_indice_pfb_w = 'S') then

		if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (IE_TIPO_PRECO_W = 'PFB') then
			if (ie_pis_cofins_w = 'S') then
				vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
			elsif (ie_pis_cofins_w = 'N') then
				vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
			else
				vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
			end if;
		end if;

	elsif (ie_dividir_indice_pfb_w = 'R') then

		select	coalesce(max(ie_dividir_indice_pfb),'N')
		into STRICT	ie_div_indice_pfb_conv_w
		from 	convenio_estabelecimento
		where	cd_convenio		= cd_convenio_p
		and	cd_estabelecimento	= cd_estabelecimento_p;

		if (ie_div_indice_pfb_conv_w = 'S') then

			if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
				else
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
				end if;
			end if;

		elsif (ie_div_indice_pfb_conv_w = 'N') then

			if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
				else
					vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
				end if;
			end if;

		elsif (ie_div_indice_pfb_conv_w = 'R') then

			/*open C07;
			loop
			fetch C07 into
				ie_div_indice_pfb_regra_w;
			exit when C07%notfound;
				begin
				ie_div_indice_pfb_regra_w	:= ie_div_indice_pfb_regra_w;
				end;
			end loop;
			close C07;*/
			if (ie_div_indice_pfb_regra_w = 'S') then

				if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pfb_neg_w);
					else
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_preco_fabrica_w);
					end if;
				end if;

			elsif (ie_div_indice_pfb_regra_w = 'N') then

				if (tx_preco_fabrica_w IS NOT NULL AND tx_preco_fabrica_w::text <> '') and (ie_tipo_preco_w = 'PFB') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pfb_neg_w);
					else
						vl_medicamento_w	:= (vl_medicamento_w * tx_preco_fabrica_w);
					end if;
				end if;
			end if;
		end if;

	end if;

	/* Conforme resolução CMED nº 2, de 10 de março de 2006

	Art. 4º O Preço Máximo ao Consumidor - PMC será obtido por meio da divisão do Preço
	Fabricante - PF pelos fatores constantes da tabela abaixo, observadas as cargas tributárias do
	ICMS praticadas nos Estados de destino e a incidência da contribuição para o PIS/PASEP e
	COFINS, conforme o disposto na Lei nº 10.147, de 21 de dezembro de 2001.

	ICMS            Lista Positiva               Lista Negativa                     Lista Neutra
	19%   	0,7234   		0,7523    		0,7071
	18%               0,7234     		0,7519      		0,7073
	17%   	0,7234   		0,7515    		0,7075
	12%   	0,7234   		0,7499    		0,7084
	0%   	0,7234   		0,7465     		0,7103  */
	if (ie_dividir_indice_pmc_w = 'N') then

		if (TX_BRASINDICE_PMC_W IS NOT NULL AND TX_BRASINDICE_PMC_W::text <> '') and (IE_TIPO_PRECO_W = 'PMC') then
			if (ie_pis_cofins_w = 'S') then
				vl_medicamento_w	:= (vl_medicamento_w * TX_PMC_POS_W);
			elsif (ie_pis_cofins_w = 'N') then
				vl_medicamento_w	:= (vl_medicamento_w * TX_PMC_NEG_W);
			else
				vl_medicamento_w	:= (vl_medicamento_w * TX_BRASINDICE_PMC_W);
			end if;
		end if;

	elsif (ie_dividir_indice_pmc_w = 'S') then

		if (TX_BRASINDICE_PMC_W IS NOT NULL AND TX_BRASINDICE_PMC_W::text <> '') and (IE_TIPO_PRECO_W = 'PMC') then
			if (ie_pis_cofins_w = 'S') then
				vl_medicamento_w	:= dividir(vl_medicamento_w , TX_PMC_POS_W);
			elsif (ie_pis_cofins_w = 'N') then
				vl_medicamento_w	:= dividir(vl_medicamento_w , TX_PMC_NEG_W);
			else
				vl_medicamento_w	:= dividir(vl_medicamento_w , TX_BRASINDICE_PMC_W);
			end if;
		end if;

	elsif (ie_dividir_indice_pmc_w = 'R') then

		select	coalesce(max(ie_dividir_indice_pmc),'N')
		into STRICT	ie_div_indice_pmc_conv_w
		from 	convenio_estabelecimento
		where	cd_convenio		= cd_convenio_p
		and	cd_estabelecimento	= cd_estabelecimento_p;

		if (ie_div_indice_pmc_conv_w = 'S') then

			if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_pos_w);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_neg_w);
				else
					vl_medicamento_w	:= dividir(vl_medicamento_w , tx_brasindice_pmc_w);
				end if;
			end if;

		elsif (ie_div_indice_pmc_conv_w = 'N') then

			if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
				if (ie_pis_cofins_w = 'S') then
					vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_pos_w);
				elsif (ie_pis_cofins_w = 'N') then
					vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_neg_w);
				else
					vl_medicamento_w	:= (vl_medicamento_w * tx_brasindice_pmc_w);
				end if;
			end if;

		elsif (ie_div_indice_pmc_conv_w = 'R') then

			/*open C06;
			loop
			fetch C06 into
				ie_div_indice_pmc_regra_w;
			exit when C06%notfound;
				begin
				ie_div_indice_pmc_regra_w	:= ie_div_indice_pmc_regra_w;
				end;
			end loop;
			close C06;*/
			if (ie_div_indice_pmc_regra_w = 'S') then

				if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_pmc_neg_w);
					else
						vl_medicamento_w	:= dividir(vl_medicamento_w , tx_brasindice_pmc_w);
					end if;
				end if;

			elsif (ie_div_indice_pmc_regra_w = 'N') then

				if (tx_brasindice_pmc_w IS NOT NULL AND tx_brasindice_pmc_w::text <> '') and (ie_tipo_preco_w = 'PMC') then
					if (ie_pis_cofins_w = 'S') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_pos_w);
					elsif (ie_pis_cofins_w = 'N') then
						vl_medicamento_w	:= (vl_medicamento_w * tx_pmc_neg_w);
					else
						vl_medicamento_w	:= (vl_medicamento_w * tx_brasindice_pmc_w);
					end if;
				end if;
			end if;
		end if;

	end if;

	/*      converte o preco para consumo material */

	if (qt_conversao_w = 0) then
		qt_conversao_w := 1;
	end if;

	if (vl_medicamento_w > 0) then
		vl_medicamento_w := vl_medicamento_w + (vl_medicamento_w * pr_ipi_w / 100);
		vl_medicamento_w := (vl_medicamento_w / qt_conversao_w);
	end if;

	if (IE_RELACIONADO_BRAS_W = 'N') then
		vl_medicamento_w := 0;
	end if;

	IE_BRASINDICE_W		:= 'N';

	/* Passei para o início da function - Heckmann 19/05/2010 - OS 214864
	select 	max(cd_grupo_material)
	into	cd_grupo_material_w
	from 	estrutura_material_v
	where 	cd_material = cd_material_p;
	*/
	if (CD_CATEGORIA_P IS NOT NULL AND CD_CATEGORIA_P::text <> '') and (coalesce(CD_CATEGORIA_P,'0') <> '0') then
		begin

		open C02;
		loop
		fetch C02 into
			ie_brasindice_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_brasindice_w:= ie_brasindice_w;
			end;
		end loop;
		close C02;

		end;
	end if;

	if (ie_preco_medio_bras_w = 'S') then
		open C04;
		loop
		fetch C04 into
			vl_bras_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			vetor_valor_w[i].vl_medicamento := vl_bras_w;
			i := i + 1;
			end;
		end loop;
		close C04;

		select	round(dividir(i,2))
		into STRICT	qt_reg_w
		;

		if (i >= 3) then
			vl_medicamento_w := vetor_valor_w[qt_reg_w].vl_medicamento;
		end if;
	end if;

	if (ie_brasindice_w = 'N') then
		begin
		vl_medicamento_w	:= 0;
		dt_ult_vigencia_w	:= clock_timestamp();
		end;
	end if;

return 	vl_medicamento_w;

end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hed_obter_preco_brasindice ( CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text, CD_MATERIAL_P bigint, DT_VIGENCIA_P timestamp, IE_TIPO_PRECO_P text, IE_VERSAO_ATUAL_P bigint) FROM PUBLIC;

