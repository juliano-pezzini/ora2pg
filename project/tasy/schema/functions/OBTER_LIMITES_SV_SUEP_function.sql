-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_limites_sv_suep ( nr_atendimento_p bigint, nm_campo_p text, vl_sinal_p bigint, nm_usuario_p text, cd_escala_dor_p text default '0') RETURNS varchar AS $body$
DECLARE
				

qt_idade_pf_w		double precision;
qt_idade_dia_w		double precision;
nr_sequencia_sv_w		bigint;
vl_minimo_aviso_sv_w	double precision;
vl_maximo_aviso_sv_w	double precision;
vl_minimo_permitido_sv_w	double precision;
vl_maximo_permitido_sv_w	double precision;
vl_minimo_aviso_sv_ww	double precision;
vl_maximo_aviso_sv_ww	double precision;
vl_minimo_permitido_sv_ww	double precision;
vl_maximo_permitido_sv_ww	double precision;
nr_sequencia_w		bigint;
nr_seq_sinal_w		bigint;
ds_retorno_w		varchar(10);
cd_perfil_w		varchar(10);
cd_escala_dor_w		w_suep_item_data.cd_escala_dor%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(a.qt_min_aviso,0),
	coalesce(a.qt_max_aviso,0),
	coalesce(a.qt_minimo,0),
	coalesce(a.vl_maximo,0)
from	sinal_vital a
where	a.nr_sequencia	= nr_seq_sinal_w
order by
	a.nr_sequencia;

c02 CURSOR FOR
SELECT	coalesce(b.qt_min_aviso,0),
	coalesce(b.qt_max_aviso,0),
	coalesce(b.qt_minimo,0),
	coalesce(b.vl_maximo,0)
from	sinal_vital_regra b
where	b.nr_seq_sinal = nr_sequencia_sv_w
and	((qt_idade_pf_w between coalesce(b.qt_idade_min,qt_idade_pf_w) and coalesce(b.qt_idade_max,qt_idade_pf_w)) or (qt_idade_dia_w between b.qt_idade_min_dias and b.qt_idade_max_dias))
and	coalesce(b.cd_perfil, cd_perfil_w) = cd_perfil_w
and	coalesce(b.cd_escala_dor, cd_escala_dor_w) = cd_escala_dor_w
order by b.nr_sequencia;


BEGIN

cd_perfil_w	:= coalesce(obter_perfil_ativo,0);
cd_escala_dor_w	:= coalesce(cd_escala_dor_p, '0');

if (nm_campo_p = 'QT_PESO') then
	nr_seq_sinal_w := 12;
elsif (nm_campo_p = 'QT_ALTURA_CM') then
	nr_seq_sinal_w := 13;				
elsif (nm_campo_p = 'QT_TEMP') then
	nr_seq_sinal_w := 4;
elsif (nm_campo_p = 'QT_FREQ_CARDIACA') then
	nr_seq_sinal_w := 9;	
elsif (nm_campo_p = 'QT_PA_SISTOLICA') then
	nr_seq_sinal_w := 1;				
elsif (nm_campo_p = 'QT_PA_DIASTOLICA') then
	nr_seq_sinal_w := 2;
elsif (nm_campo_p = 'QT_FREQ_RESP') then
	nr_seq_sinal_w := 3;
elsif (nm_campo_p = 'QT_SATURACAO_O2') then
	nr_seq_sinal_w := 6;	
elsif (nm_campo_p = 'QT_GLICEMIA_CAPILAR') then
	nr_seq_sinal_w := 7;
elsif (nm_campo_p = 'QT_ESCALA_DOR') then
	nr_seq_sinal_w := 10;
end if;

if (coalesce(nr_atendimento_p,0) 	> 0) then
	begin
	
	begin
	select	obter_idade_pf(b.cd_pessoa_fisica, coalesce(b.dt_obito,clock_timestamp()), 'A')
	into STRICT	qt_idade_pf_w
	from	pessoa_fisica b,
		atendimento_paciente a
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	a.nr_atendimento	= nr_atendimento_p;
	
	select	obter_idade(dt_nascimento,clock_timestamp(),'DIA')
	into STRICT	qt_idade_dia_w
	from	pessoa_fisica b,
		atendimento_paciente a
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	a.nr_atendimento	= nr_atendimento_p;
	exception
		when no_data_found then
		null;
		end;

	open c01;
	loop
	fetch c01 into	nr_sequencia_sv_w,
			vl_minimo_aviso_sv_w,
			vl_maximo_aviso_sv_w,
			vl_minimo_permitido_sv_w,
			vl_maximo_permitido_sv_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		open c02;
		loop
		fetch c02 into	vl_minimo_aviso_sv_ww,
				vl_maximo_aviso_sv_ww,
				vl_minimo_permitido_sv_ww,
				vl_maximo_permitido_sv_ww;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			vl_minimo_aviso_sv_w	:= vl_minimo_aviso_sv_ww;
			vl_maximo_aviso_sv_w	:= vl_maximo_aviso_sv_ww;
			vl_minimo_permitido_sv_w	:= vl_minimo_permitido_sv_ww;
			vl_maximo_permitido_sv_w	:= vl_maximo_permitido_sv_ww;
			end;
		end loop;
		close c02;

			
		end;
	end loop;
	close c01;
	
	end;
end if;

ds_retorno_w	:= 'N';

if (nr_sequencia_sv_w IS NOT NULL AND nr_sequencia_sv_w::text <> '') and
	((vl_Sinal_p < vl_minimo_aviso_sv_w) or (vl_Sinal_p > vl_maximo_aviso_sv_w)) then
	ds_retorno_w	:= 'S';
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_limites_sv_suep ( nr_atendimento_p bigint, nm_campo_p text, vl_sinal_p bigint, nm_usuario_p text, cd_escala_dor_p text default '0') FROM PUBLIC;

