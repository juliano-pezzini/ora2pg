-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_agendamentos_bloqueio (cd_estabelecimento_p text, cd_agenda_p text, dt_inicial_p text, dt_final_p text, hr_inicial_p text, hr_final_p text, ie_dia_Semana_p text, ie_classif_bloqueio_p text) RETURNS bigint AS $body$
DECLARE

 
qt_agenda_w			bigint := 0;


BEGIN 
 
if (hr_inicial_p <> '00:00:00') and (hr_final_p <> '00:00:00') then 
	begin 
	select	count(*) 
	into STRICT	qt_agenda_w 
	from	agenda_consulta a, 
			agenda b 
	where	a.cd_agenda = cd_agenda_p 
	and		a.cd_agenda = b.cd_agenda 
	and		b.cd_estabelecimento = cd_estabelecimento_p 
	and		pkg_date_utils.start_of(a.dt_agenda,'DD',0) between dt_inicial_p and dt_final_p 
	and		to_char(a.dt_agenda,'hh24:mi:ss') between hr_inicial_p and hr_final_p 
	and		a.ie_status_agenda not in ('L', 'C', 'B') 
	and		((pkg_date_utils.get_weekday(a.dt_agenda) = ie_dia_semana_p) or (ie_dia_semana_p = 9 and pkg_date_utils.is_business_day(a.dt_agenda, 0) = 1) or (coalesce(ie_dia_semana_p::text, '') = '')) 
	and (a.ie_classif_agenda = ie_classif_bloqueio_p or coalesce(ie_classif_bloqueio_p::text, '') = '');
	end;
elsif (hr_inicial_p <> '00:00:00') then 
	begin 
	select	count(*) 
	into STRICT	qt_agenda_w 
	from	agenda_consulta a, 
			agenda b 
	where	a.cd_agenda = cd_agenda_p 
	and		a.cd_agenda = b.cd_agenda 
	and		b.cd_estabelecimento = cd_estabelecimento_p 
	and		pkg_date_utils.start_of(a.dt_agenda,'DD',0) between dt_inicial_p and dt_final_p 
	and		to_char(a.dt_agenda,'hh24:mi:ss') > hr_inicial_p 
	and		a.ie_status_agenda not in ('L', 'C', 'B') 
	and		((pkg_date_utils.get_weekday(a.dt_agenda) = ie_dia_semana_p) or (ie_dia_semana_p = 9 and pkg_date_utils.is_business_day(a.dt_agenda, 0) = 1) or (coalesce(ie_dia_semana_p::text, '') = '')) 
	and (a.ie_classif_agenda = ie_classif_bloqueio_p or coalesce(ie_classif_bloqueio_p::text, '') = '');
	end;
elsif (hr_final_p <> '00:00:00') then 
	begin 
	select	count(*) 
	into STRICT	qt_agenda_w 
	from	agenda_consulta a, 
			agenda b 
	where	a.cd_agenda = cd_agenda_p 
	and		a.cd_agenda = b.cd_agenda 
	and		b.cd_estabelecimento = cd_estabelecimento_p 
	and		pkg_date_utils.start_of(a.dt_agenda,'DD',0) between dt_inicial_p and dt_final_p 
	and		to_char(a.dt_agenda,'hh24:mi:ss') < hr_final_p 
	and		a.ie_status_agenda not in ('L', 'C', 'B') 
	and		((pkg_date_utils.get_weekday(a.dt_agenda) = ie_dia_semana_p) or (ie_dia_semana_p = 9 and pkg_date_utils.is_business_day(a.dt_agenda, 0) = 1) or (coalesce(ie_dia_semana_p::text, '') = '')) 
	and (a.ie_classif_agenda = ie_classif_bloqueio_p or coalesce(ie_classif_bloqueio_p::text, '') = '');	
	end;
else 
	begin 
	select	count(*) 
	into STRICT	qt_agenda_w 
	from	agenda_consulta a, 
			agenda b 
	where	a.cd_agenda = cd_agenda_p 
	and		a.cd_agenda = b.cd_agenda 
	and		b.cd_estabelecimento = cd_estabelecimento_p 
	and		pkg_date_utils.start_of(a.dt_agenda,'DD',0) between dt_inicial_p and dt_final_p 
	and		a.ie_status_agenda not in ('L', 'C', 'B') 
	and		((pkg_date_utils.get_weekday(a.dt_agenda) = ie_dia_semana_p) or (ie_dia_semana_p = 9 and pkg_date_utils.is_business_day(a.dt_agenda, 0) = 1) or (coalesce(ie_dia_semana_p::text, '') = '')) 
	and (a.ie_classif_agenda = ie_classif_bloqueio_p or coalesce(ie_classif_bloqueio_p::text, '') = '');
	end;
end if;
return qt_agenda_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_agendamentos_bloqueio (cd_estabelecimento_p text, cd_agenda_p text, dt_inicial_p text, dt_final_p text, hr_inicial_p text, hr_final_p text, ie_dia_Semana_p text, ie_classif_bloqueio_p text) FROM PUBLIC;

