-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_cabecalho_tiss ( nr_sequencia_p bigint, ie_tipo_transacao_p text, ie_campo_p text, nr_mes_competencia_p bigint default 0, nr_seq_prestador_p bigint default 0) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(255);
dt_transacao_w			timestamp;
cd_interno_w			bigint;
cd_ans_w			bigint;
ie_nova_importacao_w		varchar(1);

/*Codigo do prestador utilizado quando precisa retornar o codigo no cabecalho do XML */

cd_prestador_w			pls_prestador.cd_prestador%type;
ie_codigo_prest_operadora_w	pls_param_importacao_guia.ie_codigo_prest_operadora%type;


BEGIN

/*Regra utilizada para importacao de Guia e elegibilidade
C - Codigo prestador
S - Sequencia do prestador
*/
select	max(ie_codigo_prest_operadora)
into STRICT	ie_codigo_prest_operadora_w
from	pls_param_importacao_guia;

select	coalesce(max(pls_imp_xml_cta_pck.usar_nova_imp_xml(obter_estabelecimento_ativo)),'N')
into STRICT	ie_nova_importacao_w
;

-- Cabecalho da transacao
if (ie_campo_p = 'TT') then

	if ( ie_tipo_transacao_p = '1' or ie_tipo_transacao_p = '10' ) then
		ds_retorno_w := 'RESPOSTA_SOLICITACAO';
		
	elsif (ie_tipo_transacao_p = '2') then
		ds_retorno_w := 'PROTOCOLO_RECEBIMENTO';
		
	elsif (ie_tipo_transacao_p = '3') then
		ds_retorno_w := 'STATUS_AUTORIZACAO';
		
	elsif (ie_tipo_transacao_p = '4') then
		ds_retorno_w := 'CANCELAMENTO_GUIA_RECIBO';
		
	elsif (ie_tipo_transacao_p = '5') or (ie_tipo_transacao_p = '6') then
		ds_retorno_w := 'SITUACAO_PROTOCOLO';
		
	elsif (ie_tipo_transacao_p = '7') then
		ds_retorno_w := 'DEMONSTRATIVO_PAGAMENTO';
		
	elsif (ie_tipo_transacao_p = '8') then
		ds_retorno_w := 'DEMONSTRATIVO_ANALISE_CONTA';
		
	elsif (ie_tipo_transacao_p = '9') then
		ds_retorno_w := 'SITUACAO_ELEGIBILIDADE';
		
	elsif (ie_tipo_transacao_p = '20') then	
		ds_retorno_w := 'RECIBO_COMUNICACAO';
		
	elsif (ie_tipo_transacao_p = '21') then
		ds_retorno_w := 'PROTOCOLO_RECEBIMENTO_ANEXO';
		
	elsif (ie_tipo_transacao_p = '22') then
		ds_retorno_w := 'RECEBIMENTO_RECURSO_GLOSA';
		
	elsif (ie_tipo_transacao_p = '23') then
		ds_retorno_w := 'RESPOSTA_RECURSO_GLOSA';
		
	elsif (ie_tipo_transacao_p = '25') then
		ds_retorno_w := 'RECURSO_GLOSA';
		
	elsif (ie_tipo_transacao_p = '26') then
		ds_retorno_w := 'ENVIO_DOCUMENTO';
	end if;

else
	begin
	if (ie_tipo_transacao_p = '1') then

		select	coalesce(a.dt_emissao,clock_timestamp()) dt_transacao,
			nr_seq_prestador cd_interno,
			nr_seq_prestador_imp
		into STRICT	dt_transacao_w,
			cd_interno_w,
			cd_prestador_w
		from	pls_guia_plano	a
		where	a.nr_sequencia	= nr_sequencia_p
		and	ie_status in ('1','2','3')
		and	coalesce(a.dt_cancelamento::text, '') = '';

	elsif (ie_tipo_transacao_p = '2') then
		if (ie_nova_importacao_w = 'N') then
			select	coalesce(dt_mes_competencia,clock_timestamp()) dt_transacao,
				coalesce(nr_seq_prestador, nr_seq_prestador_imp_ref) cd_interno,
				cd_prestador_imp
			into STRICT	dt_transacao_w,
				cd_interno_w,
				cd_prestador_w
			from	pls_protocolo_conta
			where	nr_sequencia	= nr_sequencia_p;
		else			
			select	coalesce(dt_transacao,clock_timestamp()) dt_transacao,
				nr_seq_prestador_conv,
				cd_prestador
			into STRICT	dt_transacao_w,
				cd_interno_w,
				cd_prestador_w
			from	pls_protocolo_conta_imp
			where	nr_sequencia	= nr_sequencia_p;
		end if;
		
		--aaschlote 02/11/2015 - Se existir a informacao do codigo do prestador do XML, limpa a informacao do prestador interno
		if (cd_prestador_w IS NOT NULL AND cd_prestador_w::text <> '') then
			cd_interno_w	 := '';
		end if;

	elsif (ie_tipo_transacao_p = '3') then

		select	coalesce(a.dt_emissao,clock_timestamp()) dt_transacao,
			nr_seq_prestador cd_interno
		into STRICT	dt_transacao_w,
			cd_interno_w
		from	pls_guia_plano	a
		where	nr_sequencia	= nr_sequencia_p;

	elsif (ie_tipo_transacao_p = '4') then
	
		select	dt_geracao_lote dt_transacao,
			nr_seq_prestador cd_interno
		into STRICT    dt_transacao_w,
			cd_interno_w
		from	pls_guia_plano_lote_cancel
		where	nr_sequencia	= nr_sequencia_p;

	elsif (ie_tipo_transacao_p = '5') then

		select	coalesce(dt_mes_competencia,clock_timestamp()) dt_transacao,
			nr_seq_prestador cd_interno
		into STRICT	dt_transacao_w,
			cd_interno_w
		from	pls_protocolo_conta
		where	nr_sequencia	= nr_sequencia_p;

	elsif (ie_tipo_transacao_p = '6') then

		select  coalesce(a.dt_mes_competencia, clock_timestamp()) dt_transacao,
			nr_seq_prestador cd_interno
		into STRICT    dt_transacao_w,
			cd_interno_w
		from	pls_protocolo_conta	a
		where	nr_sequencia			= nr_sequencia_p
		and	coalesce(a.nr_seq_prestador_imp,0)	= 0;

	elsif (ie_tipo_transacao_p = '7') then
		
		if (coalesce(nr_mes_competencia_p,'0') <> '0') then

			begin
				select	coalesce(a.dt_mes_competencia, clock_timestamp()) dt_transacao,
					nr_seq_prestador cd_interno
				into STRICT    dt_transacao_w,
					cd_interno_w
				from	pls_protocolo_conta	a
				where	nr_seq_prestador = nr_seq_prestador_P
				--and	to_char(dt_mes_competencia, 'yyyymm') = to_char(nr_mes_competencia_p)
				and	dt_mes_competencia between to_date(nr_mes_competencia_p||'01', 'yyyymmdd') and fim_dia(last_day(to_date(nr_mes_competencia_p||'01', 'yyyymmdd')))
				--and	nvl(a.nr_seq_prestador_imp,0) = 0
  LIMIT 1;
			exception
				when others then null;
			end;
		end if;
		
		dt_transacao_w 	:= coalesce(dt_transacao_w, clock_timestamp());
		cd_prestador_w 	:= pls_obter_dados_prestador(nr_seq_prestador_p, 'CD');
		cd_interno_w 	:= coalesce(cd_interno_w, nr_seq_prestador_p);

	elsif (ie_tipo_transacao_p = '8') then

		begin
			select	coalesce(a.dt_mes_competencia, clock_timestamp()) dt_transacao,
				coalesce(nr_seq_prestador, nr_seq_prestador_imp) cd_interno
			into STRICT    dt_transacao_w,
				cd_interno_w
			from	pls_protocolo_conta	a,
				w_tiss_demonstra_ret_itens c
			where	c.nr_seq_demonstra_ret = nr_sequencia_p	
			and   	a.nr_sequencia = c.nr_seq_protocolo
			--and     nvl(nr_seq_prestador, nr_seq_prestador_imp) is not null
  LIMIT 1;
		exception
		  when others then null;
		end;
		
	elsif (ie_tipo_transacao_p = '9') then

		select	coalesce(a.dt_transacao, clock_timestamp()) dt_transacao,
			cd_prestador_interno
		into STRICT    dt_transacao_w,
			cd_prestador_w
		from	pls_elegibilidade	a
		where	a.nr_sequencia	= nr_sequencia_p;
		
		
		/* Se apresentar erro ao procurar pela sequencia do prestador, ira buscar pelo codigo */

		if ( ie_codigo_prest_operadora_w = 'C' ) then
			select	max(nr_sequencia)
			into STRICT	cd_interno_w
			from	pls_prestador
			where 	cd_prestador = cd_prestador_w;
		
		else
			begin
				select	max(nr_sequencia)
				into STRICT	cd_interno_w
				from	pls_prestador
				where 	nr_sequencia = cd_prestador_w;
			exception
			when others then
				select	max(nr_sequencia)
				into STRICT	cd_interno_w
				from	pls_prestador
				where 	cd_prestador = cd_prestador_w;
			end;	
		end if;
					
	elsif (ie_tipo_transacao_p = '10') then	
	
		select	clock_timestamp() dt_transacao,
			null cd_interno,
			cd_prestador_solic
		into STRICT	dt_transacao_w,
			cd_interno_w,
			cd_prestador_w
		from	pls_guia_plano_imp	a
		where	a.nr_sequencia	= nr_sequencia_p;
		
	elsif (ie_tipo_transacao_p = '20') then
	
		select  a.dt_recebimento,
			c.nr_seq_prestador
		into STRICT	dt_transacao_w,
			cd_interno_w
		FROM pls_lote_comunicacao_inter a, pls_comunicacao_internacao b
LEFT OUTER JOIN pls_guia_plano c ON (b.nr_seq_guia = c.nr_sequencia)
WHERE b.nr_seq_lote_inter = a.nr_sequencia  and a.nr_sequencia = nr_sequencia_p   LIMIT 1;
		
	elsif (ie_tipo_transacao_p = '21') then

		select	coalesce(a.dt_envio_lote, clock_timestamp()) dt_transacao,
			c.nr_seq_prestador cd_interno
		into STRICT    dt_transacao_w,
			cd_interno_w
		FROM pls_lote_anexo_aut a, pls_lote_anexo_guias_imp b
LEFT OUTER JOIN pls_guia_plano c ON (b.nr_seq_guia = c.nr_sequencia)
WHERE b.nr_seq_lote_anexo = a.nr_sequencia  and a.nr_sequencia = nr_sequencia_p   LIMIT 1;

	elsif (ie_tipo_transacao_p = '22') then

		select	coalesce(a.dt_envio_lote, clock_timestamp()) dt_transacao,
			coalesce(b.nr_seq_prestador, c.nr_seq_prestador) cd_interno,
			c.cd_prestador_executor
		into STRICT    dt_transacao_w,
			cd_interno_w,
			cd_prestador_w
		FROM pls_rec_glosa_lote a, pls_rec_glosa_protocolo b
LEFT OUTER JOIN pls_rec_glosa_prot_cta_imp c ON (b.nr_sequencia = c.nr_seq_protocolo)
WHERE b.nr_seq_lote		= a.nr_sequencia  and a.nr_sequencia		= nr_sequencia_p   LIMIT 1;
		
		--aaschlote 02/11/2015 - Se existir a informacao do codigo do prestador do XML, limpa a informacao do prestador interno
		if (cd_prestador_w IS NOT NULL AND cd_prestador_w::text <> '') then
			cd_interno_w	 := '';
		end if;
		
	elsif (ie_tipo_transacao_p = '23') then
	
		select	clock_timestamp() dt_transacao,
			b.nr_seq_prestador cd_interno,
			coalesce(c.cd_prestador_executor, pls_obter_dados_prestador(b.nr_seq_prestador, 'CD'))
		into STRICT    dt_transacao_w,
			cd_interno_w,
			cd_prestador_w
		FROM pls_rec_glosa_lote a, pls_rec_glosa_protocolo b
LEFT OUTER JOIN pls_rec_glosa_prot_cta_imp c ON (b.nr_sequencia = c.nr_seq_protocolo)
WHERE b.nr_seq_lote	= a.nr_sequencia  and b.nr_sequencia	= nr_sequencia_p   LIMIT 1;
		
		--aaschlote 16/03/2016 - Se existir a informacao do codigo do prestador do XML, limpa a informacao do prestador interno
		if (cd_prestador_w IS NOT NULL AND cd_prestador_w::text <> '') then
			cd_interno_w	 := '';
		end if;
	elsif (ie_tipo_transacao_p = '25') then
	
		select	max(a.dt_geracao_arquivo) dt_transacao,
			max(c.cd_prestador) cd_interno,
			max(c.cd_prestador) cd_prestador
		into STRICT	dt_transacao_w,
			cd_interno_w,
			cd_prestador_w
		from	pls_erg_recurso		a,
			pls_erg_cabecalho	b,
			pls_erg_prestador	c
		where	b.nr_seq_erg_recurso	= a.nr_sequencia
		and	c.nr_seq_erg_cabecalho	= b.nr_sequencia
		and	a.nr_sequencia		= nr_sequencia_p
		-- So busca as informacoes de um unico prestador
		and	c.nr_sequencia		= (	SELECT	 max(z.nr_sequencia)
							from	pls_erg_recurso		x,
								pls_erg_cabecalho	y,
								pls_erg_prestador	z
							where	y.nr_seq_erg_recurso	= x.nr_sequencia
							and	z.nr_seq_erg_cabecalho	= y.nr_sequencia
							and	x.nr_sequencia		= nr_sequencia_p);
							
	elsif (ie_tipo_transacao_p = '26') then
		select	dt_atualizacao_nrec dt_transacao,
				nr_seq_prestador,
				cd_prestador
		into STRICT	dt_transacao_w,
				cd_interno_w,
				cd_prestador_w
		from	pls_anexo_imp
		where	nr_sequencia	= nr_sequencia_p;		
	end if;

	if (ie_campo_p = 'DT') then
		ds_retorno_w := to_char(dt_transacao_w, 'dd/mm/yyyy hh24:mi:ss');
		
	elsif (ie_campo_p = 'HR') then
		ds_retorno_w := to_char(dt_transacao_w, 'hh24:mi:ss');
		
	elsif (ie_campo_p = 'CD') then
		ds_retorno_w := to_char(cd_interno_w);
		
	elsif ( ie_campo_p = 'CDI') then
	
		ds_retorno_w := cd_prestador_w;	
	end if;

	exception
	when others then
		ds_retorno_w := null;
	end;

end if;

return	ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_cabecalho_tiss ( nr_sequencia_p bigint, ie_tipo_transacao_p text, ie_campo_p text, nr_mes_competencia_p bigint default 0, nr_seq_prestador_p bigint default 0) FROM PUBLIC;

