-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_temp_umid_fora_padrao ( cd_setor_atendimento_p bigint, nr_seq_turno_p bigint, qt_temp_inicial_p bigint, qt_temp_min_p bigint, qt_temp_max_p bigint, qt_umidade_p bigint, qt_umidade_min_p bigint, qt_umidade_max_p bigint) RETURNS varchar AS $body$
DECLARE
			

qt_temp_min_w				double precision;
qt_temp_max_w				double precision;
qt_umidade_min_w			double precision;
qt_umidade_max_w			double precision;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type	:= wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w				usuario.nm_usuariO%type			:= wheb_usuario_pck.get_nm_usuario;
ie_consiste_umid_temp_w			varchar(1);
ie_retorno_w				varchar(1);

c01 CURSOR FOR
	SELECT	qt_temp_min,
		qt_temp_max,
		qt_umidade_min,
		qt_umidade_max
	from	turno_temp_setor
	where	cd_setor_atendimento	= cd_setor_atendimento_p
	and	nr_seq_turno		= nr_seq_turno_p;


BEGIN

ie_retorno_w	:= 'N';

ie_consiste_umid_temp_w := obter_param_usuario(1300, 30, obter_perfil_Ativo, nm_usuario_w, cd_estabelecimento_w, ie_consiste_umid_temp_w);

open c01;
loop
fetch c01 into
	qt_temp_min_w,
	qt_temp_max_w,
	qt_umidade_min_w,
	qt_umidade_max_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (ie_consiste_umid_temp_w = 'S') or (ie_consiste_umid_temp_w = 'T') then
		begin

		if (qt_temp_inicial_p IS NOT NULL AND qt_temp_inicial_p::text <> '') then

			if (qt_temp_inicial_p < qt_temp_min_w) or (qt_temp_inicial_p > qt_temp_max_w) then
				ie_retorno_w	:= 'S';			
			end if;

		end if;

		if (qt_temp_min_p IS NOT NULL AND qt_temp_min_p::text <> '') then

			if (qt_temp_min_p < qt_temp_min_w) or (qt_temp_min_p > qt_temp_max_w) then
				ie_retorno_w	:= 'S';
			end if;

		end if;

		if (qt_temp_max_p IS NOT NULL AND qt_temp_max_p::text <> '') then

			if (qt_temp_max_p < qt_temp_min_w) or (qt_temp_max_p > qt_temp_max_w) then
				ie_retorno_w	:= 'S';
			end if;

		end if;

		end;
	end if;

	if (ie_consiste_umid_temp_w = 'S') or (ie_consiste_umid_temp_w = 'U') then
		begin

		if	((qt_umidade_min_w IS NOT NULL AND qt_umidade_min_w::text <> '') or (qt_umidade_max_w IS NOT NULL AND qt_umidade_max_w::text <> '')) and (qt_umidade_p IS NOT NULL AND qt_umidade_p::text <> '') then

			if (qt_umidade_p < qt_umidade_min_w) or (qt_umidade_p > qt_umidade_max_w) then
				ie_retorno_w	:= 'S';
			end if;

		end if;
		
		if (qt_umidade_min_p IS NOT NULL AND qt_umidade_min_p::text <> '') then
			if (qt_umidade_min_p < qt_umidade_min_w) or (qt_umidade_min_p > qt_umidade_max_w) then
				ie_retorno_w	:= 'S';
			end if;
		end if;

		if (qt_umidade_max_p IS NOT NULL AND qt_umidade_max_p::text <> '') then
			if (qt_umidade_max_p < qt_umidade_min_w) or (qt_umidade_max_p > qt_umidade_max_w) then
				ie_retorno_w	:= 'S';
			end if;
		end if;
		end;
	end if;

	end;
end loop;
close c01;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_temp_umid_fora_padrao ( cd_setor_atendimento_p bigint, nr_seq_turno_p bigint, qt_temp_inicial_p bigint, qt_temp_min_p bigint, qt_temp_max_p bigint, qt_umidade_p bigint, qt_umidade_min_p bigint, qt_umidade_max_p bigint) FROM PUBLIC;

