-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_regra_cid ( nr_atendimento_p bigint, cd_cid_p text) RETURNS varchar AS $body$
DECLARE


ie_retorno_w	varchar(01);
cd_estabelecimento_w		smallint;
cd_pessoa_fisica_w		varchar(10);
ie_tipo_atendimento_w		smallint;
cd_convenio_w			integer;
cd_setor_atendimento_w		integer;
cd_medico_resp_w		varchar(10);
qt_retorno_w			smallint;
nr_atendimento_w		bigint;
cd_medico_w			varchar(10);
ie_regra_w			varchar(1);
qt_dia_w			integer;
nr_seq_classificacao_w		bigint;
ie_dentro_mes_w			varchar(1)	:= 'N';
nr_seq_queixa_w			bigint;
nr_seq_queixa_origem_w		bigint;
ie_consiste_setor_w		varchar(10);
cd_cid_principal_w		varchar(10);
cd_cid_principal_origem_w	varchar(10);
cd_categoria_cid_origem_w	varchar(10);
ie_mesmo_tipo_atend_w		varchar(1);
qt_existe_w			bigint;

C01 CURSOR FOR
	SELECT	ie_regra,
		qt_dia,
		coalesce(qt_retorno,0),
		coalesce(ie_dentro_mes,'N'),
		coalesce(ie_consiste_setor,'S'),
		ie_mesmo_tipo_atend
	from	regra_atend_retorno
	where (coalesce(cd_estabelecimento, cd_estabelecimento_w)		= cd_estabelecimento_w or coalesce(cd_estabelecimento_w::text, '') = '')
	and (coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w or coalesce(ie_tipo_atendimento_w::text, '') = '')
	and (coalesce(cd_convenio, cd_convenio_w) 			= cd_convenio_w or coalesce(cd_convenio_w::text, '') = '')
	and (coalesce(cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w or coalesce(cd_setor_atendimento_w::text, '') = '')
	and (coalesce(nr_seq_classificacao, nr_seq_classificacao_w)	= nr_seq_classificacao_w or coalesce(nr_seq_classificacao_w::text, '') = '')
	and clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp())
	and coalesce(ie_situacao,'A') = 'A'
	order by qt_dia;

C02 CURSOR FOR
	SELECT	nr_atendimento,
		cd_medico_resp,
		nr_seq_queixa,
		cd_cid_principal
	from 	atendimento_paciente_v
	where (coalesce(cd_estabelecimento, cd_estabelecimento_w)		= cd_estabelecimento_w or coalesce(cd_estabelecimento_w::text, '') = '')
	and (coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w or coalesce(ie_tipo_atendimento_w::text, '') = '')
	and (coalesce(cd_convenio, cd_convenio_w) 			= cd_convenio_w or coalesce(cd_convenio_w::text, '') = '')
	and	((coalesce(cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w or coalesce(cd_setor_atendimento_w::text, '') = ''
	and 	ie_consiste_setor_w = 'S') or (ie_consiste_setor_w = 'N'))
	and (coalesce(nr_seq_classificacao, nr_seq_classificacao_w)	= nr_seq_classificacao_w or coalesce(nr_seq_classificacao_w::text, '') = '')
	and 	cd_pessoa_fisica					= cd_pessoa_fisica_w
	and 	nr_atendimento						<> nr_atendimento_p
	and 	dt_entrada between clock_timestamp() - qt_dia_w and clock_timestamp()
	and	coalesce(nr_atend_original::text, '') = ''
	order by nr_atendimento desc;


BEGIN

begin
select	cd_estabelecimento,
	cd_pessoa_fisica,
	ie_tipo_Atendimento,
	cd_convenio,
	cd_setor_atendimento,
	cd_medico_resp,
	coalesce(nr_seq_classificacao,''),
	nr_seq_queixa,
	cd_cid_principal,
	Obter_Categoria_Cid(cd_cid_principal)
into STRICT	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	ie_tipo_atendimento_w,
	cd_convenio_w,
	cd_setor_atendimento_w,
	cd_medico_resp_w,
	nr_seq_classificacao_w,
	nr_seq_queixa_origem_w,
	cd_cid_principal_origem_w,
	cd_categoria_cid_origem_w
from	atendimento_paciente_v
where	nr_atendimento = nr_atendimento_p;
exception
when others then
	cd_estabelecimento_w		:= null;
	cd_pessoa_fisica_w		:= null;
	ie_tipo_atendimento_w		:= null;
	cd_convenio_w			:= null;
	cd_setor_atendimento_w		:= null;
	cd_medico_resp_w		:= null;
	nr_seq_classificacao_w		:= null;
	cd_cid_principal_origem_w	:= null;
	cd_categoria_cid_origem_w	:= null;
end;

open C01;
loop
	fetch C01 into	ie_regra_w,
			qt_dia_w,
			qt_retorno_w,
			ie_dentro_mes_w,
			ie_consiste_setor_w,
			ie_mesmo_tipo_atend_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

ie_retorno_w	:= 'N';

if (qt_dia_w > 0) and (ie_regra_w = 'K') then
	begin
		
	open C02;
	loop
	fetch C02 into	nr_atendimento_w,
			cd_medico_w,
			nr_seq_queixa_w,
			cd_cid_principal_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		if (cd_cid_principal_w = cd_cid_p) and (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') and (cd_cid_principal_origem_w IS NOT NULL AND cd_cid_principal_origem_w::text <> '') and
			((cd_cid_principal_origem_w = cd_cid_principal_w) or (obter_se_cid_equivalente(cd_cid_principal_w,cd_cid_principal_origem_w) = 'S')) then
			begin
			select	count(*)
			into STRICT	qt_existe_w
			from	atendimento_paciente_v
			where cd_estabelecimento	= cd_estabelecimento_w
			  and ((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
			  and cd_convenio		= cd_convenio_w
			  and cd_medico_resp		= cd_medico_resp_w
			  and dt_entrada		>= clock_timestamp() - qt_dia_w
			  and cd_pessoa_fisica		= cd_pessoa_fisica_w
			  and coalesce(nr_atend_original::text, '') = ''
			  and nr_atendimento		<> nr_atendimento_p
			  and nr_atendimento		= nr_atendimento_w;
			
			if (qt_existe_w > 0) then
				ie_retorno_w	:= 'S';
			else
				ie_retorno_w	:= 'N';
			end if;

			end;
		end if;
	end loop;
	close C02;
	end;
end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_regra_cid ( nr_atendimento_p bigint, cd_cid_p text) FROM PUBLIC;

