-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_desc_agenda_servico ( cd_estabelecimento_p bigint, cd_agenda_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w	varchar(255);
ds_agenda_w		varchar(50);
ds_especialidade_w	varchar(100);
ds_complemento_w	varchar(60);


BEGIN 
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then 
	begin 
	 
	select	ds_agenda, 
		substr(Obter_Nome_Especialidade(cd_especialidade),1,100) ds_especialidade, 
		ds_complemento 
	into STRICT	ds_agenda_w, 
		ds_especialidade_w, 
		ds_complemento_w 
	from	agenda 
	where	cd_agenda		= cd_agenda_p 
	and	cd_tipo_agenda	= 5 
	and	cd_estabelecimento	= cd_estabelecimento_p;
	 
	if (ie_opcao_p = 'CED') then 
		begin 
		if (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') then			 
			ds_retorno_w := ds_complemento_w || ' - ' || ds_especialidade_w || ' - ' || ds_agenda_w;
		elsif (coalesce(ds_complemento_w::text, '') = '') and (ds_especialidade_w IS NOT NULL AND ds_especialidade_w::text <> '') then 
			ds_retorno_w := ds_especialidade_w || ' - ' || ds_agenda_w;
		else			 
			ds_retorno_w := ds_agenda_w;
		end if;
		end;
	elsif (ie_opcao_p = 'EDC') then 
		begin 
		if (ds_especialidade_w IS NOT NULL AND ds_especialidade_w::text <> '') then			 
			ds_retorno_w := ds_especialidade_w || ' - ' || ds_agenda_w || ' - ' || ds_complemento_w;
		elsif (coalesce(ds_especialidade_w::text, '') = '') and (ds_complemento_w IS NOT NULL AND ds_complemento_w::text <> '') then 
			ds_retorno_w := ds_agenda_w || ' - ' || ds_complemento_w;
		else			 
			ds_retorno_w := ds_agenda_w;
		end if;
		end;
	elsif (ie_opcao_p = 'DEC') then 
		begin 
		if (ds_agenda_w IS NOT NULL AND ds_agenda_w::text <> '') then			 
			ds_retorno_w := ds_agenda_w || ' - ' || ds_especialidade_w || ' - ' || ds_complemento_w;
		elsif (coalesce(ds_agenda_w::text, '') = '') and (ds_especialidade_w IS NOT NULL AND ds_especialidade_w::text <> '') then 
			ds_retorno_w := ds_especialidade_w || ' - ' || ds_complemento_w;
		else			 
			ds_retorno_w := ds_complemento_w;
		end if;
		end;		
	end if;
	end;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_desc_agenda_servico ( cd_estabelecimento_p bigint, cd_agenda_p bigint, ie_opcao_p text) FROM PUBLIC;

