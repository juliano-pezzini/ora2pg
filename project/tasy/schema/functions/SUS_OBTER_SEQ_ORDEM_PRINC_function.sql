-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_seq_ordem_princ (nr_sequencia_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_proc_princ_w		bigint;			
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w		bigint;
nr_interno_conta_w		bigint;
qt_proc_principal_w		bigint;
nr_seq_proc_valor_w		bigint;
i				bigint := 1;
nr_sequencia_w			bigint;
ie_ordena_proc_valor_w		varchar(15);
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_interno_conta 	= nr_interno_conta_w
	and	nr_seq_proc_princ 	= nr_seq_proc_princ_w
	order by vl_procedimento desc;


BEGIN

select	max(nr_seq_proc_princ),
	max(nr_interno_conta)
into STRICT	nr_seq_proc_princ_w,
	nr_interno_conta_w
from	procedimento_paciente
where	nr_sequencia	= nr_sequencia_p;

select	coalesce(ie_ordena_proc_valor,'N')
into STRICT	ie_ordena_proc_valor_w
from	sus_parametros_aih
where	cd_estabelecimento	= Obter_Estab_Conta_Paciente(nr_interno_conta_w);

if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
	
	select	cd_procedimento,
		ie_origem_proced,
		dt_procedimento
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_procedimento_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_princ_w;
	
	if (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_w,ie_origem_proced_p => ie_origem_proced_w,dt_competencia_p => dt_procedimento_w) > 0) then
		nr_seq_proc_princ_w	:= null;
	end if;
	
end if;

if (nr_seq_proc_princ_w	= nr_sequencia_p) then
	nr_seq_proc_princ_w	:= null;
end if;

if (ie_ordena_proc_valor_w = 'N') then
	nr_sequencia_w := coalesce(nr_seq_proc_princ_w,0);
elsif (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_proc_valor_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
			if (nr_seq_proc_valor_w = nr_sequencia_p) then
				nr_sequencia_w := i;
			end if;
		end if;
		i := i + 1;
		end;
	end loop;
	close C01;
end if;

return	coalesce(nr_sequencia_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_seq_ordem_princ (nr_sequencia_p bigint) FROM PUBLIC;

