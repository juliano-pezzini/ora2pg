-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_se_pac_agend_out_estab as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_se_pac_agend_out_estab (cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_se_pac_agend_out_estab_atx ( ' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(nr_seq_agenda_p) || ',' || quote_nullable(cd_agenda_p) || ',' || quote_nullable(dt_agenda_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_se_pac_agend_out_estab_atx (cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp) RETURNS varchar AS $body$
DECLARE

			 
ds_msg_agend_w  	varchar(1000) := '';
qt_agendado_agepac_w	smallint 		:= 0;
qt_agendado_agecon_w	smallint 		:= 0;
cd_estab_agenda_w		bigint;

ds_sala_w				varchar(255)	:= null;
dt_horario_w			varchar(255);
qt_duracao_w			smallint 		:= 0;
nm_estabelecimento_w	varchar(255);	
ds_enter_w				varchar(10) 	:= chr(13) || chr(10);
BEGIN
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') then 
 
	cd_estab_agenda_w := obter_estab_agenda(cd_agenda_p);
 
	select	max(b.ds_agenda), 
				max(to_char(a.HR_INICIO,'hh24:mi')), 
				max(a.nr_minuto_duracao), 
				max(substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255)) 
	into STRICT		ds_sala_w,			 
				dt_horario_w,		 
				qt_duracao_w,		 
				nm_estabelecimento_w 
	from 		agenda_paciente a, 
				agenda b 
	where 	a.cd_agenda 			= b.cd_agenda 
	and 		((a.nr_sequencia 		<> nr_seq_agenda_p) or (coalesce(nr_seq_agenda_p::text, '') = '')) 
	and 		a.cd_agenda 			<> cd_agenda_p 
	and 		b.cd_estabelecimento <> cd_estab_agenda_w 
	and 		a.cd_pessoa_fisica 	= cd_pessoa_fisica_p 
	and 		trunc(a.dt_agenda) 	= trunc(dt_agenda_p) 
	and 		a.ie_status_agenda 	not in ('C','B');
	 
	if (coalesce(ds_sala_w::text, '') = '') then 
		select	max(b.ds_agenda), 
					max(to_char(a.dt_agenda,'hh24:mi')), 
					max(a.nr_minuto_duracao), 
					max(substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255)) 
		into STRICT		ds_sala_w,			 
					dt_horario_w,		 
					qt_duracao_w,		 
					nm_estabelecimento_w 
		from 		agenda_consulta a, 
					agenda b 
		where 	a.cd_agenda 			= b.cd_agenda 
		and 		((a.nr_sequencia 		<> nr_seq_agenda_p) or (coalesce(nr_seq_agenda_p::text, '') = '')) 
		and 		a.cd_agenda 			<> cd_agenda_p 
		and 		b.cd_estabelecimento	<> cd_estab_agenda_w 
		and 		a.cd_pessoa_fisica 	= cd_pessoa_fisica_p 
		and 		trunc(a.dt_agenda) 	= trunc(dt_agenda_p) 
		and 		a.ie_status_agenda 	not in ('C','B');
	end if;
	 
	if (ds_sala_w IS NOT NULL AND ds_sala_w::text <> '') then 
		ds_msg_agend_w 	:= 	substr(WHEB_MENSAGEM_PCK.get_texto(357431,null) 									|| ds_enter_w || 
										WHEB_MENSAGEM_PCK.get_texto(357432,'DS_SALA=' 				|| ds_sala_w) 		|| ds_enter_w || 
										WHEB_MENSAGEM_PCK.get_texto(357433,'HORA=' 					|| dt_horario_w) 	|| ds_enter_w || 
										WHEB_MENSAGEM_PCK.get_texto(357434,'QT_DURACAO=' 			|| qt_duracao_w) 	|| ds_enter_w || 
										WHEB_MENSAGEM_PCK.get_texto(357435,'NM_ESTABELECIMENTO=' || nm_estabelecimento_w) || ds_enter_w || 
										WHEB_MENSAGEM_PCK.get_texto(357470,null),1,1000);
					 
	end if;
end if;
 
return	ds_msg_agend_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pac_agend_out_estab (cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_se_pac_agend_out_estab_atx (cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp) FROM PUBLIC;

