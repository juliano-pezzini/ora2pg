-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_analise_aut ( nr_seq_analise_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
/* 
IE_OPCAO_P 
TP - Tipo processo 
OE - Operadora executora 
OO - Operadora de origem do beneficiário 
G - Número da guia 
R - Sequência da requisição 
CMS - Código do médico solicitante 
NMS - Nome do médico solicitante 
*/
 
 
ds_retorno_w			varchar(255);
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_execucao_w		pls_execucao_requisicao.nr_sequencia%type;
nr_seq_req_exec_w		bigint;
cd_medico_solicitante_w		pessoa_fisica.cd_pessoa_fisica%type;
nm_medico_solicitante_w		varchar(255);
cd_guia_w			pls_auditoria.cd_guia%type;


BEGIN 
 
begin 
	select	nr_seq_guia, 
		nr_seq_requisicao, 
		nr_seq_execucao, 
		cd_medico_solicitante, 
		substr(obter_nome_pf(cd_medico_solicitante),1,255) nm_medico_solic, 
		cd_guia 
	into STRICT	nr_seq_guia_w, 
		nr_seq_requisicao_w, 
		nr_seq_execucao_w, 
		cd_medico_solicitante_w, 
		nm_medico_solicitante_w, 
		cd_guia_w 
	from	pls_auditoria 
	where	nr_sequencia	= nr_seq_analise_p;
exception 
when others then 
	nr_seq_guia_w		:= null;
	nr_seq_requisicao_w	:= null;
	nr_seq_execucao_w	:= null;	
end;
 
if (ie_opcao_p	= 'G') then 
	ds_retorno_w	:= cd_guia_w;			
elsif (ie_opcao_p 	= 'R') then 
	ds_retorno_w	:= nr_seq_requisicao_w;	
elsif (ie_opcao_p 	= 'CMS') then 
	ds_retorno_w	:= cd_medico_solicitante_w;
elsif (ie_opcao_p 	= 'NMS') then 
	ds_retorno_w	:= nm_medico_solicitante_w;
else 
	if (coalesce(nr_seq_requisicao_w,0)	<> 0) then 
		if (ie_opcao_p	= 'TP') then 
			begin 
				select	ie_tipo_processo 
				into STRICT	ds_retorno_w 
				from	pls_requisicao 
				where	nr_sequencia = nr_seq_requisicao_w;
			exception 
			when others then 
				ds_retorno_w	:= '';
			end;
		elsif (ie_opcao_p	= 'OE') then 
			begin 
				select	substr(pls_obter_dados_cooperativa(nr_seq_uni_exec,'C'),1,255) 
				into STRICT	ds_retorno_w 
				from	pls_requisicao 
				where	nr_sequencia = nr_seq_requisicao_w;
			exception 
			when others then 
				ds_retorno_w	:= '';
			end;
		elsif (ie_opcao_p	= 'OO') then 
			begin 
				select	substr(pls_obter_dados_cooperativa(a.nr_seq_congenere,'C'),1,255) 
				into STRICT	ds_retorno_w 
				from	pls_segurado	a, 
					pls_auditoria	b 
				where	a.nr_sequencia	= b.nr_seq_segurado 
				and	b.nr_sequencia	= nr_seq_analise_p;
			exception 
			when others then 
				ds_retorno_w	:= '';
			end;
		end if;
	elsif (coalesce(nr_seq_guia_w,0)	<> 0) then 
		if (ie_opcao_p	= 'TP') then 
			begin 
				select	ie_tipo_processo 
				into STRICT	ds_retorno_w 
				from	pls_guia_plano 
				where	nr_sequencia = nr_seq_guia_w;
			exception 
			when others then 
				ds_retorno_w	:= '';
			end;
		elsif (ie_opcao_p	= 'OE') then 
			begin 
				select	substr(pls_obter_dados_cooperativa(nr_seq_uni_exec,'C'),1,255) 
				into STRICT	ds_retorno_w 
				from	pls_guia_plano 
				where	nr_sequencia = nr_seq_guia_w;
			exception 
			when others then 
				ds_retorno_w	:= '';
			end;
		elsif (ie_opcao_p	= 'OO') then 
			begin 
				select	substr(pls_obter_dados_cooperativa(a.nr_seq_congenere,'C'),1,255) 
				into STRICT	ds_retorno_w 
				from	pls_segurado	a, 
					pls_auditoria	b 
				where	a.nr_sequencia	= b.nr_seq_segurado 
				and	b.nr_sequencia	= nr_seq_analise_p;
			exception 
			when others then 
				ds_retorno_w	:= '';
			end;
		end if;
	elsif (coalesce(nr_seq_execucao_w,0)	<> 0) then 
		begin 
			select	nr_seq_requisicao 
			into STRICT	nr_seq_req_exec_w 
			from	pls_execucao_requisicao 
			where	nr_sequencia	= nr_seq_execucao_w;
		exception 
		when others then 
			nr_seq_req_exec_w	:= 0;
		end;
		 
		if (coalesce(nr_seq_req_exec_w,0)	<> 0) then 
			if (ie_opcao_p	= 'TP') then 
				begin 
					select	ie_tipo_processo 
				into STRICT	ds_retorno_w 
				from	pls_requisicao 
				where	nr_sequencia = nr_seq_req_exec_w;
				exception 
				when others then 
					ds_retorno_w	:= '';
				end;
			end if;
		end if;
	end if;	
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_analise_aut ( nr_seq_analise_p bigint, ie_opcao_p text) FROM PUBLIC;

