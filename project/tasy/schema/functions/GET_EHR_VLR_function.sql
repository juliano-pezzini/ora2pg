-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_ehr_vlr (nr_seq_reg_template_p bigint, nr_seq_temp_conteudo_p bigint, ds_mascara_p text DEFAULT null, ie_juntar_localizador_p text default null, ie_descritivo_p text default 'S') RETURNS varchar AS $body$
DECLARE


ds_resultado_w		varchar(4000);
ds_resultado_ww		varchar(4000);
ds_resultado_lcb_w		varchar(4000);
ds_resultado_cb_w		varchar(4000);
ds_resultado_rg_w		varchar(4000);
dt_resultado_w		timestamp;
vl_resultado_w		double precision;
nr_seq_elemento_w		bigint;
ie_cliente_cadastra_w	varchar(10);
ie_componente_w		varchar(10);
ds_sql_w			varchar(4000);
ds_comando_w		varchar(4000);
C04					integer;
cd_retorno_w		varchar(255);
vl_retorno_w		varchar(255);
retorno_w			integer;
ds_bind_w		varchar(255);


BEGIN

select	max(ds_resultado),
	max(dt_resultado),
	max(vl_resultado),
	max(nr_seq_elemento)
into STRICT	ds_resultado_w,
	dt_resultado_w,
	vl_resultado_w,
	nr_seq_elemento_w
from	ehr_reg_elemento
where	nr_seq_reg_template = nr_seq_reg_template_p
and     	lower(coalesce(ds_resultado,' ')) not like 'regra=%'
and	nr_seq_temp_conteudo = nr_seq_temp_conteudo_p;

if (coalesce(nr_seq_elemento_w,0)	> 0) then

	select	max(ie_cliente_cadastra),
			max(ie_componente),
			max(ds_sql)
	into STRICT	ie_cliente_cadastra_w,
			ie_componente_w,
			ds_sql_w
	from	ehr_elemento
	where	nr_sequencia = nr_seq_elemento_w;
end if;

if (ie_cliente_cadastra_w	= 'S') and (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '')then
	
	select	max(ds_resultado)
	into STRICT	ds_resultado_ww
	from	ehr_template_cont_item
	where	cd_resultado = ds_resultado_w
	and	nr_seq_item	= nr_seq_temp_conteudo_p;

	if (ds_resultado_ww IS NOT NULL AND ds_resultado_ww::text <> '') then
		ds_resultado_w	:= ds_resultado_ww;
	end if;
	return ds_resultado_w;
	
elsif (ie_descritivo_p = 'S') and (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'lcb')	and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '')	then
	
		if (ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') then		
			
			ds_comando_w	:= ds_sql_w;
			
			C04 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C04, ds_comando_w, dbms_sql.Native);
			
			DBMS_SQL.DEFINE_COLUMN(C04,1,cd_retorno_w,255);
			DBMS_SQL.DEFINE_COLUMN(C04,2,vl_retorno_w,255);
	
	
			retorno_w := DBMS_SQL.execute(C04);
			
			while( DBMS_SQL.FETCH_ROWS(C04) > 0 ) loop
				begin
				DBMS_SQL.COLUMN_VALUE(C04,1,cd_retorno_w);
				DBMS_SQL.COLUMN_VALUE(C04,2,vl_retorno_w);
			
				if (cd_retorno_w	= ds_resultado_w) then
					ds_resultado_w	:= vl_retorno_w;
				end if;				
								
				end;
			end loop;
			DBMS_SQL.CLOSE_CURSOR(C04);
		
		else
		
			select  max(ds_resultado)
			into STRICT	ds_resultado_lcb_w
			from 	ehr_elemento_result a
			where 	nr_seq_elemento = nr_seq_elemento_w
			and		cd_resultado = ds_resultado_w;

		end if;		
		
		if (ds_resultado_lcb_w IS NOT NULL AND ds_resultado_lcb_w::text <> '') then
			ds_resultado_w := ds_resultado_lcb_w;
		end if;
		
elsif (ie_descritivo_p = 'S') and (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'rg')	and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '')	then
		
		select  max(ds_resultado)
		into STRICT	ds_resultado_rg_w
		from 	ehr_elemento_result a
		where 	nr_seq_elemento = nr_seq_elemento_w
		and		cd_resultado = ds_resultado_w;
		
		if (ds_resultado_rg_w IS NOT NULL AND ds_resultado_rg_w::text <> '') then
			ds_resultado_w := ds_resultado_rg_w;
		end if;		
		
elsif (ie_descritivo_p = 'S') and (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'cb')	and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '')	then
		
		if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
			if (expressao_pck.obter_locale_idioma(coalesce(philips_param_pck.get_nr_seq_idioma, 0)) = 'pt_BR') then
				Select CASE WHEN upper(max(ds_resultado_w))='S' THEN 'sim'  ELSE 'n'||chr(227)||'o' END -- Letra minuscula
				into STRICT	ds_resultado_cb_w
				;	
			else
				Select CASE WHEN upper(max(ds_resultado_w))='S' THEN obter_desc_expressao(327113)  ELSE obter_desc_expressao(327114) END -- Sim, Nao
				into STRICT	ds_resultado_cb_w
				;	
			end if;	
		end if;
		
		if (ds_resultado_cb_w IS NOT NULL AND ds_resultado_cb_w::text <> '') then
			ds_resultado_w := ds_resultado_cb_w;
		end if;		
		
elsif (ie_descritivo_p = 'S') and (ie_cliente_cadastra_w <> 'S') and (ie_componente_w = 'loc')	and (nr_seq_elemento_w IS NOT NULL AND nr_seq_elemento_w::text <> '')	and (ie_juntar_localizador_p = 'S') then

		if (ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') then

			ds_comando_w	:= ' select ' || ds_sql_w || ' from dual ';

			select REGEXP_SUBSTR(ds_sql_w, ':[a-z_]+')
			into STRICT ds_bind_w
			;

			C04 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C04, ds_comando_w, dbms_sql.Native);
			DBMS_SQL.BIND_VARIABLE(C04, ds_bind_w, ds_resultado_w);
			DBMS_SQL.DEFINE_COLUMN(C04,1,vl_retorno_w,255);

			retorno_w := DBMS_SQL.execute(C04);

			if (DBMS_SQL.FETCH_ROWS(C04) > 0) then
				begin
				DBMS_SQL.COLUMN_VALUE(C04,1,vl_retorno_w);
				if (vl_retorno_w IS NOT NULL AND vl_retorno_w::text <> '') then
					ds_resultado_w	:= ds_resultado_w || ' - ' || vl_retorno_w;
				end if;
				end;
			end if;
			DBMS_SQL.CLOSE_CURSOR(C04);

		end if;

end if;
if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
	return	ds_resultado_w;
elsif (vl_resultado_w IS NOT NULL AND vl_resultado_w::text <> '') then
	if (position(',' in vl_resultado_w) > 0) then
		return to_char(vl_resultado_w, 'FM999999999999999999990D9999999999999');
	else
		return	vl_resultado_w;
	end if;
elsif (dt_resultado_w IS NOT NULL AND dt_resultado_w::text <> '') then
	return	to_char(dt_resultado_w, coalesce(ds_mascara_p,'dd/mm/yyyy hh24:mi:ss'));
else
	return	'';
end	if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_ehr_vlr (nr_seq_reg_template_p bigint, nr_seq_temp_conteudo_p bigint, ds_mascara_p text DEFAULT null, ie_juntar_localizador_p text default null, ie_descritivo_p text default 'S') FROM PUBLIC;

