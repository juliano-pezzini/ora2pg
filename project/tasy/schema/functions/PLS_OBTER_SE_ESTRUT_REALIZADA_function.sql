-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_estrut_realizada ( nr_seq_estrutura_p bigint, cd_procedimento_conta_p bigint, ie_origem_proced_conta_p bigint, nr_seq_segurado_p bigint, nr_seq_conta_proc_p bigint, ie_tipo_item_p bigint, cd_procedimento_regra_p bigint, ie_origem_proced_regra_p bigint, nr_seq_conta_p bigint) RETURNS varchar AS $body$
DECLARE


ie_inserido_w			varchar(1)	:= 'N';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_regra_item_w		bigint;
qt_vezes_executadas_w		bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
ie_origem_proced_obtido_w	bigint;
nr_seq_conta_proc_w		bigint;
cd_guia_referencia_w		varchar(20);
cd_pessoa_fisica_w		varchar(10);
qt_procedimento_imp_w		bigint;
/*
* Esta procedure é uma derivação da rotina pls_obter_se_estrut_ocorrencia.
* Realizada de modo a retornar se algum dos procedimentos da estrutura já foram inseridos em outras contas anteriormente
*
* Retorna:
* S : Se já inserido em outra conta
* N : Se não existe este procedimento em outra conta do beneficiário
*/
C01 CURSOR FOR 	--lista os procedimentos da conta ou da conta_proc
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_sequencia,
		qt_procedimento_imp
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_p
	and	ie_tipo_item_p	= 8
	and	ie_inserido_w = 'N'
	
union

	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_sequencia,
		qt_procedimento_imp
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_conta_proc_p
	and	ie_tipo_item_p	= 3
	and	ie_inserido_w = 'N'
	order by 1;

C02 CURSOR FOR	/* estrutura do procedimento*/
	SELECT	a.nr_sequencia
	from	pls_ocorrencia_estrut_item	a
	where	a.nr_seq_estrutura	= nr_seq_estrutura_p
	and	coalesce(a.cd_procedimento, coalesce(cd_procedimento_w,0))		= coalesce(cd_procedimento_w,0)
	and	coalesce(a.ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
	and	coalesce(a.cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
	and	coalesce(a.cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
	and	coalesce(a.cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) 	= coalesce(cd_area_procedimento_w,0)
	and	a.ie_estrutura = 'S'
	order by
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_material,0),
		coalesce(a.nr_seq_estrut_mat,0);


BEGIN

/* Obter dados da conta */

begin
	select	coalesce(cd_guia_referencia,cd_guia),
		cd_pessoa_fisica
	into STRICT	cd_guia_referencia_w,
		cd_pessoa_fisica_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;
exception
when others then
	cd_guia_referencia_w := null;
end;

/*Obter os procedimentos que estão sendo verificados*/

open C01;
loop
fetch C01 into	--para cada procedimento da conta
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_conta_proc_w,
	qt_procedimento_imp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*Se foi informado estrutura na regra*/

	if (coalesce(nr_seq_estrutura_p,0) > 0) then
		/* Obter a estrutura do procedimento */

		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_obtido_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_obtido_w;

		/*lista os itens da estrutura, se encaixarem no cursor */

		open C02;
		loop
		fetch C02 into
			nr_seq_regra_item_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			begin
			select	coalesce(sum(a.qt_procedimento_imp),0)
			into STRICT	qt_vezes_executadas_w
			from	pls_conta_proc  a,
				pls_conta	b
			where	b.nr_sequencia 	  	= a.nr_seq_conta
			and	a.cd_procedimento 	= cd_procedimento_w
			and	a.ie_origem_proced 	= ie_origem_proced_w
			and	b.nr_seq_segurado	= nr_seq_segurado_p
			and	coalesce(a.nr_seq_proc_ref::text, '') = '';

			if (qt_vezes_executadas_w > 1) or (coalesce(qt_procedimento_imp_w,0) > 1) then
				ie_inserido_w := 'S';
				goto final;
			end if;

			end;
		end loop;
		close C02;
	end if;

	/*Se até este ponto não existir motivo para gerar a ocorrencia
	   é verificado se existe um procedimento cadastrado na regra e se este já foi executado previamente*/
	if (ie_inserido_w = 'N') and (coalesce(cd_procedimento_regra_p,0) > 0) and (cd_procedimento_regra_p = cd_procedimento_w) and (ie_origem_proced_regra_p = ie_origem_proced_w) then

		select	coalesce(sum(a.qt_procedimento_imp),0)
		into STRICT	qt_vezes_executadas_w
		from	pls_conta_proc  a,
			pls_conta	b
		where	b.nr_sequencia 	  	= a.nr_seq_conta
		and	a.cd_procedimento 	= cd_procedimento_w
		and	a.ie_origem_proced 	= ie_origem_proced_w
		and	b.nr_seq_segurado	= nr_seq_segurado_p
		and	coalesce(a.nr_seq_proc_ref::text, '') = '';

		--ASKONO, identificar  se procedimento está em outro ato
		-- Falta identificar se o procedimento esta no mesmo ato. PROC_REF
		-- Falta Identificar a regra para uma pessoa fisica, pois um segurado PF pode ter mais que uma sequencia de segurado, mas é vinculado a mesma PF.
		/* - verifica se o proprio procedimento verificado tem qtde apresentada maior que 1*/

		/* - verifica se o mesmo procedimento existe em outras contas do mesmo beneficiario*/

		if (qt_vezes_executadas_w > 1) or (coalesce(qt_procedimento_imp_w,0) > 1) then
			ie_inserido_w := 'S';
			goto final;
		end if;

	end if;

	end;
end loop;
close C01;

<<final>>
/*fechar cursores se estiverem abertos*/

if (C02%ISOPEN) then
	close C02;
end if;
if (C01%ISOPEN) then
	close C01;
end if;


return	ie_inserido_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_estrut_realizada ( nr_seq_estrutura_p bigint, cd_procedimento_conta_p bigint, ie_origem_proced_conta_p bigint, nr_seq_segurado_p bigint, nr_seq_conta_proc_p bigint, ie_tipo_item_p bigint, cd_procedimento_regra_p bigint, ie_origem_proced_regra_p bigint, nr_seq_conta_p bigint) FROM PUBLIC;

