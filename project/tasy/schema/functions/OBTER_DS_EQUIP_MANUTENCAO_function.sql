-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_ds_equip_manutencao ( nr_seq_classif_equip_p bigint, cd_equipamento_p bigint, ie_opcao_p text, dt_agenda_p timestamp default null) RETURNS varchar AS $body$
DECLARE


cd_imobilizado_w		varchar(20);
nr_seq_equipamento_w	bigint;
qt_ordem_servico_w	bigint;
qt_equip_man_w		bigint;
nr_seq_ordem_w		bigint;
ds_dano_breve_w		varchar(255);
DT_INICIO_DESEJADO_w	timestamp;
DT_CONCLUSAO_DESEJADA_w	timestamp;
ds_retorno_w		varchar(255);
ie_periodo_parado_w	varchar(1);

/*
D- Dano breve
DI - DT_INICIO_DESEJADO
CF - DT_CONCLUSAO_DESEJADA

*/
c01 CURSOR FOR
	SELECT	cd_imobilizado
	from	equipamento
	where	((nr_seq_classif_equip_p IS NOT NULL AND nr_seq_classif_equip_p::text <> '' AND cd_classificacao = nr_seq_classif_equip_p) or
		 (cd_equipamento_p IS NOT NULL AND cd_equipamento_p::text <> '' AND cd_equipamento = cd_equipamento_p))
	and	ie_situacao = 'A';


BEGIN

ie_periodo_parado_w := Obter_Param_Usuario(871, 474, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_periodo_parado_w);

qt_equip_man_w	:= 0;

OPEN C01;
LOOP
FETCH C01 into
	cd_imobilizado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_equipamento_w
	from	man_equipamento
	where	cd_imobilizado = cd_imobilizado_w;

	if (ie_periodo_parado_w = 'N') then
		select	count(*)
		into STRICT	qt_ordem_servico_w
		from	man_ordem_servico
		where	ie_status_ordem <> '3'
		and	nr_seq_equipamento = nr_seq_equipamento_w;
	elsif (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (ie_periodo_parado_w = 'S') then
		select	count(*)
		into STRICT	qt_ordem_servico_w
		from   	man_equip_periodo_parado a,
			man_ordem_servico b
		where  	a.nr_seq_equipamento 	= b.nr_seq_equipamento
		and	a.nr_seq_equipamento 	= nr_seq_equipamento_w
		and	b.ie_parado		= 'S'
		and	dt_agenda_p		between a.dt_periodo_inicial and a.dt_periodo_final;
	end if;

	if (qt_ordem_servico_w > 0) then

		if (ie_periodo_parado_w = 'N') then
			select 	max(nr_sequencia)
			into STRICT	nr_seq_ordem_w
			from	man_ordem_servico
			where	ie_status_ordem <> '3'
			and	nr_seq_equipamento = nr_seq_equipamento_w;
		elsif (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (ie_periodo_parado_w = 'S') then
			select 	max(b.nr_sequencia)
			into STRICT	nr_seq_ordem_w
			from   	man_equip_periodo_parado a,
				man_ordem_servico b
			where  	a.nr_seq_equipamento 	= b.nr_seq_equipamento
			and	a.nr_seq_equipamento 	= nr_seq_equipamento_w
			and	b.ie_parado		= 'S'
			and	dt_agenda_p		between a.dt_periodo_inicial and a.dt_periodo_final;
		end if;


		select	ds_dano_breve,
			DT_INICIO_DESEJADO,
			DT_CONCLUSAO_DESEJADA
		into STRICT	ds_dano_breve_w,
			DT_INICIO_DESEJADO_w,
			DT_CONCLUSAO_DESEJADA_w
		from	man_ordem_servico
		where	nr_sequencia = nr_seq_ordem_w;

	end if;
	end;
END LOOP;
CLOSE C01;

if (ie_opcao_p = 'D') then
	ds_retorno_w	:= ds_dano_breve_w;
elsif (ie_opcao_p = 'DI') then
	ds_retorno_w	:= to_char(DT_INICIO_DESEJADO_w,'dd/mm/yyyy hh24:mi:ss');
elsif (ie_opcao_p = 'DF') then
	ds_retorno_w	:= to_char(DT_CONCLUSAO_DESEJADA_w,'dd/mm/yyyy hh24:mi:ss');
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_ds_equip_manutencao ( nr_seq_classif_equip_p bigint, cd_equipamento_p bigint, ie_opcao_p text, dt_agenda_p timestamp default null) FROM PUBLIC;

