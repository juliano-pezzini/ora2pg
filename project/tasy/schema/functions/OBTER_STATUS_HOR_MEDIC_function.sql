-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_hor_medic ( dt_administracao_p timestamp, dt_suspensao_p timestamp, ie_dose_especial_p text, nr_seq_processo_p bigint, nr_seq_area_prep_p bigint, nr_seq_mat_hor_p bigint default null) RETURNS varchar AS $body$
DECLARE


ie_status_processo_w	varchar(15)	:= 'X';
ie_status_w		varchar(15);
nr_seq_mat_cpoe_w	bigint;
ie_awainting_result_w	varchar(15);
dt_horario_w		timestamp;
qt_reg_w		bigint;


BEGIN
if (coalesce(dt_administracao_p::text, '') = '') and (coalesce(dt_suspensao_p::text, '') = '') then
	begin
	
	if (nr_seq_mat_hor_p IS NOT NULL AND nr_seq_mat_hor_p::text <> '') then
		select	max(b.nr_seq_mat_cpoe),
			max(a.dt_horario)
		into STRICT	nr_seq_mat_cpoe_w,
			dt_horario_w
		from	prescr_mat_hor a,
			prescr_material b
		where	a.nr_prescricao 	= b.nr_prescricao
		and	a.nr_seq_material 	= b.nr_sequencia
		and	a.nr_sequencia 		= nr_seq_mat_hor_p;
		
		if (nr_seq_mat_cpoe_w IS NOT NULL AND nr_seq_mat_cpoe_w::text <> '') then
		
			select 	count(1)
			into STRICT	qt_reg_w
			from 	cpoe_variable_dose
			where 	nr_seq_mat_cpoe = nr_seq_mat_cpoe_w;
			
			if (qt_reg_w > 0) then
				select	coalesce(max(ie_awaiting_result), 'S')
				into STRICT	ie_awainting_result_w
				from	cpoe_variable_dose
				where	nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
				and	trunc(dt_dose) = trunc(dt_horario_w);
				
				if (ie_awainting_result_w	= 'S') then
					return 'B';--Blocked
				end if;
			end if;
			
			select	count(1)
			into STRICT	qt_reg_w
			from	cpoe_susp_medication
			where	nr_seq_mat_cpoe = nr_seq_mat_cpoe_w
			and	dt_horario_w between dt_start and dt_end
			and	coalesce(dt_inactive::text, '') = '';
			
			if (qt_reg_w > 0) then
				return 'S'; --Suspenso
			end if;
			
		end if;
	end if;
	
	if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') then
		begin
		ie_status_processo_w	:= obter_status_proc_area_adep(nr_seq_processo_p,nr_seq_area_prep_p);
		end;
	end if;
	if (ie_status_processo_w = 'D') then
		begin
		ie_status_w	:= ie_status_processo_w;
		end;
	elsif (ie_status_processo_w = 'H') then
		begin
		ie_status_w	:= ie_status_processo_w;
		end;	
	elsif (ie_status_processo_w = 'P') then		
		begin
		ie_status_w	:= 'P';
		end;
	elsif (ie_status_processo_w = 'L') then
		begin
		ie_status_w	:= 'L';		
		end;
	elsif (ie_status_processo_w = 'R') then
		begin
		ie_status_w	:= ie_status_processo_w;
		end;		
	elsif (ie_status_processo_w = 'E') then
		begin
		ie_status_w	:= 'X';
		end;		
	elsif (ie_dose_especial_p = 'S') then
		begin
		ie_status_w	:= 'E';
		end;
	else
		begin
		ie_status_w	:= 'N';
		end;
	end if;	
	end;
elsif (dt_administracao_p IS NOT NULL AND dt_administracao_p::text <> '') and (coalesce(dt_suspensao_p::text, '') = '') then
	begin
	ie_status_w	:= 'A';
	end;
elsif (coalesce(dt_administracao_p::text, '') = '') and (dt_suspensao_p IS NOT NULL AND dt_suspensao_p::text <> '') then
	begin
	ie_status_w	:= 'S';
	end;
end if;
return ie_status_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_hor_medic ( dt_administracao_p timestamp, dt_suspensao_p timestamp, ie_dose_especial_p text, nr_seq_processo_p bigint, nr_seq_area_prep_p bigint, nr_seq_mat_hor_p bigint default null) FROM PUBLIC;

