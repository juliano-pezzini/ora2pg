-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_agend_confirm_sms ( cd_agenda_p bigint, nr_seq_forma_confirmacao_p bigint, nr_seq_agenda_p bigint) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(50) := Wheb_mensagem_pck.get_texto(309775); --'NÃ£o enviada';
nr_seq_forma_confirmacao_w	bigint;
qt_sms_w			bigint;
dt_agenda_w			agenda_consulta.dt_agenda%type;
cd_paciente_w			agenda_consulta.cd_pessoa_fisica%type;
nr_seq_agenda_w			agenda_consulta.nr_sequencia%type;
cd_empresa_sms_w		varchar(255);
ie_status_w		AGENDA_RETORNO_SMS.IE_STATUS%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from 	agenda_consulta 
	where 	cd_pessoa_fisica = cd_paciente_w 
	and 	dt_agenda between trunc(dt_agenda_w) and trunc(dt_agenda_w) + 86399/86400
	and	nr_sequencia <> nr_seq_agenda_p;


BEGIN

cd_empresa_sms_w := obter_valor_param_usuario(0,89,0,wheb_usuario_pck.get_nm_usuario,1);

if (cd_empresa_sms_w in ('4','5')) then  /* 4 - human, 5 - spring */
	begin
	select	1
	into STRICT	qt_sms_w
	from	log_envio_sms
	where	nr_seq_agenda = nr_seq_agenda_p
	and	coalesce(id_sms,0) <> 0  LIMIT 1;
	exception
		when no_data_found then
			qt_sms_w	:= 0;
	end;
	
else

	begin
	select	1
	into STRICT	qt_sms_w
	from	log_envio_sms
	where	nr_seq_agenda = nr_seq_agenda_p  LIMIT 1;
	exception
		when no_data_found then
			qt_sms_w	:= 0;
	end;	

end if;

if (qt_sms_w = 0) then
	select	max(dt_agenda),
			max(cd_pessoa_fisica)
	into STRICT	dt_agenda_w,
			cd_paciente_w
	from	agenda_consulta
	where	nr_sequencia = nr_seq_agenda_p;
	
	if (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '') and (cd_paciente_w IS NOT NULL AND cd_paciente_w::text <> '') then
		open C01;
		loop
		fetch C01 into	
			nr_seq_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
	
			if (qt_sms_w = 0) then
				begin
				select	1
				into STRICT	qt_sms_w
				from	log_envio_sms
				where	nr_seq_agenda = nr_seq_agenda_w
				and		coalesce(ie_envio_regra,'N') = 'S'
				and		coalesce(id_sms,0) <> 0  LIMIT 1;
				exception
					when no_data_found then
						qt_sms_w	:= 0;
				end;			
			end if;
			end;
		end loop;
		close C01;
	end if;
end if;


select	max(p.nr_seq_forma_confirmacao_sms)
into STRICT	nr_seq_forma_confirmacao_w
from	parametro_agenda p,
	agenda a
where	p.cd_estabelecimento = a.cd_estabelecimento
and	a.cd_agenda	= cd_agenda_p;

if (qt_sms_w > 0) then
	ie_retorno_w := Wheb_mensagem_pck.get_texto(309776); --'Enviada';
	
	begin
   select b.ie_status
     into STRICT ie_status_w
	 from agenda_paciente a,
		     agenda_retorno_sms b
	where b.nr_seq_agepac = a.nr_sequencia
	  and a.nr_sequencia = nr_seq_agenda_p
	  AND b.nr_sequencia = (SELECT Max(c.nr_sequencia) FROM agenda_retorno_sms c WHERE c.nr_seq_agepac = a.nr_sequencia);
	exception
		when no_data_found then
			ie_status_w	:= null;
	end;

	if (coalesce(ie_status_w::text, '') = '') then
		begin
	  select max(b.ie_status)
		into STRICT ie_status_w
		from agenda_consulta a,
			 agenda_retorno_sms b
	  where b.nr_seq_agecons = a.nr_sequencia
		and (a.nr_sequencia = nr_seq_agenda_w or
			a.nr_sequencia = nr_seq_agenda_p)
		and b.nr_sequencia = (SELECT Max(c.nr_sequencia) FROM agenda_retorno_sms c WHERE c.nr_seq_agecons = a.nr_sequencia );
		exception
			when no_data_found then
				ie_status_w	:= null;
		end;
	end if;
	
	if (ie_status_w = 'N') then
		ie_retorno_w := obter_desc_expressao(302747);
	end if;

end if;		

if (nr_seq_forma_confirmacao_p = nr_seq_forma_confirmacao_w) then
	ie_retorno_w := Wheb_mensagem_pck.get_texto(309777); --'Confirmada';
end if;		

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_agend_confirm_sms ( cd_agenda_p bigint, nr_seq_forma_confirmacao_p bigint, nr_seq_agenda_p bigint) FROM PUBLIC;

