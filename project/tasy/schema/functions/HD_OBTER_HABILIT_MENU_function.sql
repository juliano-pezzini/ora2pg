-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hd_obter_habilit_menu ( nr_seq_dialise_p bigint, cd_pessoa_fisica_p text, ie_perm_reg_controle_p text, ie_perm_reg_evento_p text, ie_perm_reg_evolucao_p text, ie_peritoneal_p text, nm_usuario_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE

/* Processos de dialise
	101 - Gerar hemodialise
	102 - Montar dialisador
	103 - Realizar primeiro teste
	104 - Realizar segundo teste
	105 - Colocar paciente
	106 - Iniciar hemodialise
	107 - Novo controle
	108 - Registrar eventos
	109 - Retirar dialisador
	110 - Substituir dialisador
	111 - Finalizar hemodialise
	112 - Cancelar hemodialise
	113 - Registrar evolucao/eventos
	114 - Desfazer inicio dialise
	115 - Substituir maquina*/
	
ie_gerar_dialise_w		varchar(1)	:= 'N';
ie_montar_dialisador_w		varchar(1)	:= 'N';
ie_realizar_pri_teste_w		varchar(1)	:= 'N';
ie_realizar_seg_teste_w		varchar(1)	:= 'N';
ie_colocar_paciente_w		varchar(1)	:= 'N';
ie_iniciar_dialise_w		varchar(1)	:= 'N';
ie_novo_controle_w		varchar(1)	:= 'N';
ie_registrar_eventos_w		varchar(1)	:= 'N';
ie_registrar_evolucao_w		varchar(1)	:= 'N';
ie_retirar_dialisa_w		varchar(1)	:= 'N';
ie_substituir_dialisa_w		varchar(1)	:= 'N';
ie_finalizar_dialise_w		varchar(1)	:= 'N';
ie_cancelar_dialise_w		varchar(1)	:= 'N';
ie_desfazer_inicio_w		varchar(1)	:= 'N';
ie_substituir_maquina_w		varchar(1)	:= 'N';
ie_tipo_dializador_w		varchar(1);

ds_retorno_w			varchar(255);
qt_registro_w			bigint;
qt_dial_montado_w		bigint;
qt_dial_retirado_w		bigint;
dt_dialise_w			timestamp;
dt_cancelamento_w		timestamp;
dt_fim_dialise_w		timestamp;
dt_instalacao_w			timestamp;
dt_inicio_dialise_w		timestamp;
dt_retirada_w			timestamp;
nr_seq_dialisador_atual_w	bigint;
ie_teste1_w			varchar(1);
ie_teste2_w			varchar(1);
ie_teste3_w			varchar(1);
ie_parametro_90_w		varchar(1);
ie_parametro_92_2		varchar(1);
ie_habilita_desfazer_inicio_w	varchar(1);
ie_situacao_pac_w		varchar(1);
ie_dialise_w		hd_gestao_ir_v.ie_dialise%TYPE;

BEGIN

ie_parametro_92_2 := obter_valor_param_usuario(7009, 92, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);


/* Saber se precisa gerar nova dialise */

select	hd_obter_hemodialise_atual(cd_pessoa_fisica_p, 'A')
into STRICT	qt_registro_w
;

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_situacao_pac_w
FROM	paciente_tratamento
WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p;



if	(qt_registro_w = 0 AND ie_situacao_pac_w = 'S') then
	ie_gerar_dialise_w	:= 'S';
end if;

if (nr_seq_dialise_p > 0) and (ie_peritoneal_p = 'N') then
	
	/* Obtem o restante dos dados para habilitacoes dos menus */

	select	dt_dialise,
		dt_cancelamento,
		dt_fim_dialise,
		dt_instalacao,
		dt_inicio_dialise
	into STRICT	dt_dialise_w,
		dt_cancelamento_w,
		dt_fim_dialise_w,
		dt_instalacao_w,
		dt_inicio_dialise_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_p;
	
	select	count(*)
	into STRICT	qt_dial_montado_w
	from	hd_dialise_dialisador
	where	nr_seq_dialise	= nr_seq_dialise_p
	and	(dt_montagem IS NOT NULL AND dt_montagem::text <> '');

	select	count(*)
	into STRICT	qt_dial_retirado_w
	from	hd_dialise_dialisador
	where	nr_seq_dialise	= nr_seq_dialise_p
	and	(dt_montagem IS NOT NULL AND dt_montagem::text <> '')
	and 	(dt_retirada IS NOT NULL AND dt_retirada::text <> '');				
	
	select	coalesce(hd_obter_seq_dialisador_atual(nr_seq_dialise_p),0)
	into STRICT	nr_seq_dialisador_atual_w
	;
	
	if (nr_seq_dialisador_atual_w > 0) then
		select	dt_retirada
		into STRICT	dt_retirada_w
		from	hd_dialise_dialisador
		where	nr_sequencia	= nr_seq_dialisador_atual_w;
	else
		dt_retirada_w	:= null;
	end if;
		
	select	coalesce(substr(hd_obter_dados_teste(nr_seq_dialisador_atual_w, '1'),1,1),'N'),
		coalesce(substr(hd_obter_dados_teste(nr_seq_dialisador_atual_w, '2'),1,1),'N'),
		coalesce(substr(hd_obter_dados_teste(nr_seq_dialisador_atual_w, '3'),1,1),'N')
	into STRICT	ie_teste1_w,
		ie_teste2_w,
		ie_teste3_w
	;
	
	select
		max(a.ie_tipo) ie_tipo
	into STRICT 
		ie_tipo_dializador_w
	from 
		hd_dializador a,
		hd_dialise_dialisador b
	where a.nr_sequencia = b.nr_seq_dialisador
	and   b.nr_seq_dialise = nr_seq_dialise_p;
	
	select	max(hd_habilita_desfazer_dialise(nr_seq_dialise_p))
	into STRICT	ie_habilita_desfazer_inicio_w
	;
	
	/* Inicia processo de verificacao dos menus */


	/* Montar dialisador */

	if (coalesce(dt_inicio_dialise_w::text, '') = '') and (qt_dial_montado_w = 0) and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_montar_dialisador_w	:= 'S';
	end if;
	
	ie_parametro_90_w	:= Obter_Valor_Param_Usuario(7009,90,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
	
	
	/* Realizar primeiro teste de presenca de APC */

	if	(((ie_parametro_90_w = 'S') and (ie_teste3_w = 'N') and (ie_teste1_w = 'N')) or (ie_teste1_w = 'N' AND ie_teste3_w = 'N')) and (coalesce(dt_fim_dialise_w::text, '') = '') and (qt_dial_montado_w > 0) and (coalesce(dt_cancelamento_w::text, '') = '') and (nr_seq_dialisador_atual_w > 0) and (ie_tipo_dializador_w <> 'U') then
		ie_realizar_pri_teste_w	:= 'S';
	end if;
	/* Realizar segundo teste de presenca de APC */

	if (ie_teste1_w = 'S') and (ie_teste2_w = 'N') and (qt_dial_montado_w > 0) and (coalesce(dt_cancelamento_w::text, '') = '') and (coalesce(dt_retirada_w::text, '') = '') and (ie_tipo_dializador_w <> 'U') then
		ie_realizar_seg_teste_w	:= 'S';
	end if;	
	/* Colocar paciente */

	if	(((ie_teste2_w = 'S') or (ie_teste3_w = 'S' AND ie_parametro_90_w = 'S')) or (ie_tipo_dializador_w = 'U')) and (coalesce(dt_instalacao_w::text, '') = '') and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_colocar_paciente_w	:= 'S';
	end if;
	/* Iniciar dialise */

	if (qt_dial_montado_w > 0) and (dt_instalacao_w IS NOT NULL AND dt_instalacao_w::text <> '') and (coalesce(dt_inicio_dialise_w::text, '') = '') and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_iniciar_dialise_w	:= 'S';
	end if;	
	
	/*Desfazer inicio dialise*/

	if (ie_habilita_desfazer_inicio_w = 'S') and (dt_inicio_dialise_w IS NOT NULL AND dt_inicio_dialise_w::text <> '') and (coalesce(dt_fim_dialise_w::text, '') = '') then
		ie_desfazer_inicio_w := 'S';
	end if;
	/* Novo controle */
	
	if (dt_inicio_dialise_w IS NOT NULL AND dt_inicio_dialise_w::text <> '') and
		((ie_perm_reg_controle_p = 'S') or (coalesce(dt_fim_dialise_w::text, '') = '')) and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_novo_controle_w	:= 'S';
	end if;
	/* Registar eventos */

	if (dt_inicio_dialise_w IS NOT NULL AND dt_inicio_dialise_w::text <> '') and
		((ie_perm_reg_evento_p = 'S') or (coalesce(dt_fim_dialise_w::text, '') = '')) and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_registrar_eventos_w	:= 'S';
	end if;
	/* Registrar evolucao */

	if (dt_inicio_dialise_w IS NOT NULL AND dt_inicio_dialise_w::text <> '') and
		((ie_perm_reg_evolucao_p = 'S') or (coalesce(dt_fim_dialise_w::text, '') = '')) and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_registrar_evolucao_w	:= 'S';
	end if;
	/* Finalizar hemodialise */

	if (dt_inicio_dialise_w IS NOT NULL AND dt_inicio_dialise_w::text <> '') and (coalesce(dt_fim_dialise_w::text, '') = '') and (coalesce(dt_cancelamento_w::text, '') = '') and
		((qt_dial_retirado_w > 0) or (ie_parametro_92_2 = 'S')) then

		ie_finalizar_dialise_w	:= 'S';
	end if;
	/* Retirar dialisador */

	if (qt_dial_montado_w > 0) and (coalesce(dt_cancelamento_w::text, '') = '') and
		((qt_dial_retirado_w = 0) or (qt_dial_retirado_w < qt_dial_montado_w)) and (coalesce(dt_retirada_w::text, '') = '') then
		ie_retirar_dialisa_w	:= 'S';
	end if;
	/* Substituir dialisador */

	if (coalesce(dt_fim_dialise_w::text, '') = '') and (qt_dial_montado_w > 0) and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_substituir_dialisa_w	:= 'S';
	end if;
	/* Cancelar dialise */

	if (coalesce(dt_fim_dialise_w::text, '') = '') and (qt_dial_montado_w > 0) and (coalesce(dt_cancelamento_w::text, '') = '') then
		ie_cancelar_dialise_w	:= 'S';
	end if;
	/*Substituir maquina*/

	if (coalesce(dt_fim_dialise_w::text, '') = '') and (qt_dial_montado_w > 0) and
		((qt_dial_retirado_w = 0) or (qt_dial_retirado_w < qt_dial_montado_w)) and (coalesce(dt_cancelamento_w::text, '') = '') and (dt_instalacao_w IS NOT NULL AND dt_instalacao_w::text <> '') then
		ie_substituir_maquina_w := 'S';
	end if;
end if;

if (ie_peritoneal_p = 'S') then
	ie_registrar_evolucao_w	:= 'S';
end if;

begin
if ((coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') and (nr_seq_dialise_p > 0)) then
  select max(ie_dialise), max(nr_seq_dialise_atual)
  into STRICT ie_dialise_w, nr_seq_dialisador_atual_w
  from hd_gestao_ir_v
  where cd_pessoa_fisica=cd_pessoa_fisica_p and nr_seq_dialise_ultima=nr_seq_dialise_p;

  if (coalesce(ie_dialise_w,'N') = 'S' or  coalesce(nr_seq_dialisador_atual_w,0) > 0) then
      ie_gerar_dialise_w := 'N';
      ie_montar_dialisador_w := 'N';
  end if;

end if;
end;

/* Monta string de retorno */

ds_retorno_w	:= '101='||ie_gerar_dialise_w||';'||
                   '102='||ie_montar_dialisador_w||';'||
                   '103='||ie_realizar_pri_teste_w||';'||
                   '104='||ie_realizar_seg_teste_w||';'||
                   '105='||ie_colocar_paciente_w||';'||
                   '106='||ie_iniciar_dialise_w||';'||
                   '107='||ie_novo_controle_w||';'||
                   '108='||ie_registrar_eventos_w||';'||
                   '109='||ie_retirar_dialisa_w||';'||
                   '110='||ie_substituir_dialisa_w||';'||
                   '111='||ie_finalizar_dialise_w||';'||
                   '112='||ie_cancelar_dialise_w||';'||
		   '113='||ie_registrar_evolucao_w||';'||
		   '114='||ie_desfazer_inicio_w||';'||
		   '115='||ie_substituir_maquina_w;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hd_obter_habilit_menu ( nr_seq_dialise_p bigint, cd_pessoa_fisica_p text, ie_perm_reg_controle_p text, ie_perm_reg_evento_p text, ie_perm_reg_evolucao_p text, ie_peritoneal_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

