-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_regra_alta_proc ( nr_atendimento_p bigint, nr_sequencia_p bigint) RETURNS varchar AS $body$
DECLARE



qt_regra_w		bigint 	:= 0;
ie_retorno_w		varchar(1)	:= 'S';
ie_regra_disp_w		varchar(1);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_forma_regra_proced_w	varchar(1);
qt_proc_w		bigint;
qt_mat_w		bigint;

c01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	regra_fecha_alta_proc
	where	nr_seq_regra = nr_sequencia_p
	order by cd_procedimento;


BEGIN

select	coalesce(max(ie_forma_regra_proced),'T')
into STRICT	ie_forma_regra_proced_w
from	regra_fechar_conta_alta
where	nr_sequencia = nr_sequencia_p;

select	count(*)
into STRICT	qt_regra_w
from	regra_fecha_alta_proc
where	nr_seq_regra = nr_sequencia_p;

if (qt_regra_w = 0) then
	ie_retorno_w	:= 'S';

else


	if (coalesce(ie_forma_regra_proced_w,'T') = 'T') then

		open C01;
		loop
		fetch C01 into
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			select	count(*)
			into STRICT	qt_regra_w
			from	procedimento_paciente
			where	nr_atendimento 	= nr_atendimento_p
			and	cd_procedimento	= cd_procedimento_w
			and 	ie_origem_proced = ie_origem_proced_w;

			if (qt_regra_w = 0) then
				ie_retorno_w	:= 'N';
			end if;

			end;
		end loop;
		close C01;

	elsif (coalesce(ie_forma_regra_proced_w,'T') = 'S') then

		ie_retorno_w	:= 'N';

		select	count(*)
		into STRICT	qt_mat_w
		from	material_atend_paciente
		where	nr_atendimento = nr_atendimento_p
		and 	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
		and	coalesce(cd_motivo_exc_conta::text, '') = '';

		if (qt_mat_w = 0) then

			select	count(*)
			into STRICT 	qt_proc_w
			from	procedimento_paciente a
			where	a.nr_atendimento = nr_atendimento_p
			and 	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and	not exists (SELECT	1
						from	regra_fecha_alta_proc x
						where	x.cd_procedimento	=	a.cd_procedimento
						and	x.ie_origem_proced	=	a.ie_origem_proced
						and	x.nr_seq_regra	= nr_sequencia_p);

			if (qt_proc_w = 0) then
				ie_retorno_w := 'S';
			end if;
		end if;

	else

		ie_retorno_w	:= 'N';

		select	count(*)
		into STRICT 	qt_proc_w
		from	procedimento_paciente a
		where	a.nr_atendimento = nr_atendimento_p
		and 	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	exists (SELECT	1
				from	regra_fecha_alta_proc x
				where	x.cd_procedimento	=	a.cd_procedimento
				and	x.ie_origem_proced	=	a.ie_origem_proced
				and	x.nr_seq_regra	= nr_sequencia_p);

		if (qt_proc_w = 0) then
			ie_retorno_w := 'S';
		end if;

	end if;

end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_regra_alta_proc ( nr_atendimento_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

