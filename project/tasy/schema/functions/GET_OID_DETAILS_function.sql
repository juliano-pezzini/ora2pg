-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_oid_details (nr_seq_oid_p bigint, option_p text, ie_tipo_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_return_w		varchar(2000)	:= null;
ds_oid_w		cadastro_oid.ds_oid%type;
ds_oid_record_w		cadastro_oid.ds_oid%type;WITH RECURSIVE cte AS (


c01 CURSOR FOR
SELECT	a.nr_oid,a.nr_sequencia
from	system_oid a WHERE nr_sequencia = nr_seq_oid_p
  UNION ALL


c01 CURSOR FOR
SELECT	a.nr_oid,a.nr_sequencia
from	system_oid a JOIN cte c ON (c.prior nr_seq_superior = a.nr_sequencia)

) SELECT * FROM cte WHERE ie_finalidade = ie_tipo_p;
;

BEGIN

if (option_p = 'OID_NUMBER') then

	if (ie_tipo_p = 'NOM') then

		begin
		select ds_oid_sistema
		into STRICT ds_oid_record_w
		from cadastro_oid
		where ie_tipo_oid = 'E'
		and cd_estabelecimento = cd_estabelecimento_p
		and coalesce(cd_cgc::text, '') = '';
		exception
			when no_data_found then
				ds_oid_record_w	:= null;
		end;
		
		/* Remove dot at the end, if informed */

		if (ds_oid_record_w IS NOT NULL AND ds_oid_record_w::text <> '') and (substr(ds_oid_record_w,length(ds_oid_record_w)-1,1) = '.') then
			ds_oid_record_w	:= substr(ds_oid_record_w,1,length(ds_oid_record_w)-1);
		end if;
		
		for	r_c01 in c01 loop
			/* Philips and Tasy OID should not replace*/

			if (ds_oid_record_w IS NOT NULL AND ds_oid_record_w::text <> '') and (nr_seq_oid_p not in (1,5)) then
				
				/* For others should replace Philips OID to theirs */

				if (r_c01.nr_sequencia = 1) then
					ds_oid_w	:= substr(ds_oid_record_w || ds_oid_w,1,255);
				else
					ds_oid_w	:= substr(r_c01.nr_oid || ds_oid_w,1,255);
				end if;
			else
				ds_oid_w	:= substr(r_c01.nr_oid || ds_oid_w,1,255);
			end if;
		end loop;
		
		ds_return_w	:= ds_oid_w;
	else
		for	r_c01 in c01 loop
			ds_oid_w	:= substr(r_c01.nr_oid || ds_oid_w,1,255);
		end loop;
		ds_return_w	:= ds_oid_w;
	end if;
elsif (option_p = 'OID_SHORTNAME') then
	select	obter_desc_expressao(cd_exp_shortname,null)
	into STRICT	ds_return_w
	from	system_oid a
	where	a.nr_sequencia	= nr_seq_oid_p
	and ie_finalidade = ie_tipo_p;
elsif (option_p = 'OID_DESCRIPTION') then
	select	obter_desc_expressao(cd_exp_description,null)
	into STRICT	ds_return_w
	from	system_oid a
	where	a.nr_sequencia	= nr_seq_oid_p
	and ie_finalidade = ie_tipo_p;
end if;

return	ds_return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_oid_details (nr_seq_oid_p bigint, option_p text, ie_tipo_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

