-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION rep_obter_maior_valor_compra (cd_material_p text, data_p timestamp, qt_dias_p bigint) RETURNS bigint AS $body$
DECLARE


vl_unitario_item_nf_w		double precision;
cd_unid_med_nf_w			varchar(30);
cd_uni_medida_compra_w		varchar(30);
cd_uni_medida_estoque_w		varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
qt_conv_compra_estoque_w	double precision;
qt_conv_estoque_consumo_w	double precision;
vl_retorno_w			double precision;
cd_estabelecimento_w		smallint := wheb_usuario_pck.get_cd_estabelecimento;

C01 CURSOR FOR
	SELECT	a.cd_unidade_medida_compra,
		a.vl_unitario_item_nf
	from 	nota_fiscal_item	a,
		nota_fiscal b,
		operacao_nota c
	where 	a.cd_material		= cd_material_p
	and	a.nr_sequencia		= b.nr_sequencia
	and	b.cd_operacao_nf		= c.cd_operacao_nf
	and	c.ie_operacao_fiscal	= 'E'
	and	trunc(b.dt_emissao)	between(data_p - qt_dias_p) and data_p;

BEGIN

select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra,
	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
	qt_conv_compra_estoque,
	cd_unidade_medida_consumo,
	qt_conv_estoque_consumo
into STRICT	cd_uni_medida_compra_w,
	cd_uni_medida_estoque_w,
	qt_conv_compra_estoque_w,
	cd_unidade_medida_consumo_w,
	qt_conv_estoque_consumo_w
from	material
where	cd_material = cd_material_p;

vl_retorno_w:= 0;

open C01;
loop fetch C01 into
	cd_unid_med_nf_w	,
	vl_unitario_item_nf_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (cd_unid_med_nf_w = cd_uni_medida_estoque_w) then
		if (vl_unitario_item_nf_w > vl_retorno_w) then
			vl_retorno_w	:= vl_unitario_item_nf_w;
		end if;
	elsif (cd_unid_med_nf_w = cd_unidade_medida_consumo_w) then
		if	((vl_unitario_item_nf_w / qt_conv_estoque_consumo_w) > vl_retorno_w) then
			vl_retorno_w	:= (vl_unitario_item_nf_w / qt_conv_estoque_consumo_w);
		end if;
	elsif (cd_unid_med_nf_w = cd_uni_medida_compra_w) then
		if	((vl_unitario_item_nf_w / qt_conv_compra_estoque_w) > vl_retorno_w) then
			vl_retorno_w	:= (vl_unitario_item_nf_w / qt_conv_compra_estoque_w);
		end if;
	end if;
	end;
end loop;
close c01;

/* Caso n√£o encontrar ninguem */

if (vl_retorno_w = 0) then
	begin
		select	a.cd_unidade_medida_compra,
 			a.vl_unitario_item_nf
		into STRICT	cd_unid_med_nf_w,
			vl_unitario_item_nf_w
		from 	nota_fiscal_item	a,
			nota_fiscal		b,
			operacao_nota		c
		where 	a.cd_material	= cd_material_p
		and	a.nr_sequencia	= b.nr_sequencia
		and	b.cd_operacao_nf	= c.cd_operacao_nf
		and	c.ie_operacao_fiscal	= 'E'
		and 	b.nr_sequencia =(	SELECT	max(b.nr_sequencia)
						from 	nota_fiscal_item	a,
							nota_fiscal		b,
							operacao_nota		c
						where 	a.cd_material		= cd_material_p
						and	a.nr_sequencia	= b.nr_sequencia
						and	b.cd_operacao_nf	= c.cd_operacao_nf
						and	c.ie_operacao_fiscal	= 'E') LIMIT 1;

	if (cd_unid_med_nf_w = cd_uni_medida_estoque_w) then
		vl_retorno_w	:= vl_unitario_item_nf_w;
	elsif (cd_unid_med_nf_w = cd_unidade_medida_consumo_w) then
		vl_retorno_w	:= (vl_unitario_item_nf_w / qt_conv_estoque_consumo_w);
	elsif (cd_unid_med_nf_w = cd_uni_medida_compra_w) then
		vl_retorno_w	:= (vl_unitario_item_nf_w / qt_conv_compra_estoque_w);
	else
		vl_retorno_w	:= vl_unitario_item_nf_w;  /* Acrescentado */
	end if;
	end;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION rep_obter_maior_valor_compra (cd_material_p text, data_p timestamp, qt_dias_p bigint) FROM PUBLIC;

