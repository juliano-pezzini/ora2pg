-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dt_limite_depend ( nr_seq_segurado_p bigint) RETURNS timestamp AS $body$
DECLARE


dt_retorno_w			timestamp	:= null;
dt_validade_doc_w		pls_tipo_documento_pf.dt_validade%type;
dt_nascimento_w			pessoa_fisica.dt_nascimento%type;

qt_regra_geral_w		integer;
qt_regra_contrato_w		integer;
qt_deficiencia_w		integer;
qt_anos_w			integer;

cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
nr_seq_contrato_w		pls_segurado.nr_seq_contrato%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;

nr_seq_regra_dependencia_w	pls_contrato_dependencia.nr_seq_regra_dependencia%type;
ie_sexo_w			pessoa_fisica.ie_sexo%type;
ie_estado_civil_w		pessoa_fisica.ie_estado_civil%type;
qt_idade_max_w			regra_grau_parent_contrato.qt_idade_max%type;
ie_possui_comp_esc_valido_w	regra_grau_parent_contrato.ie_possui_comp_esc_valido%type;
ie_possui_procuracao_valida_w	regra_grau_parent_contrato.ie_possui_procuracao_valida%type;
ie_data_limite_w		regra_grau_parent_contrato.ie_data_limite%type;
nr_seq_doc_escolaridade_w	pls_tipo_documento_pf.nr_sequencia%type;
nr_seq_doc_procuracao_w		pls_tipo_documento_pf.nr_sequencia%type;

C01 CURSOR FOR
	SELECT  qt_idade_max,
		ie_possui_comp_esc_valido,
		ie_possui_procuracao_valida,
		coalesce(ie_data_limite, '1') ie_data_limite
	from	regra_grau_parent_contrato
	where	nr_seq_lote_parentesco		= nr_seq_regra_dependencia_w
	and	nr_seq_parentesco		= nr_seq_parentesco_w
	and	qt_anos_w			>= qt_idade_min
	--and 	qt_anos_w			<= qt_idade_max
	and	((ie_benef_deficiencia 		= 'N') or (qt_deficiencia_w > 0))
	and	((ie_possui_comp_esc_valido 	= 'N') or (nr_seq_doc_escolaridade_w IS NOT NULL AND nr_seq_doc_escolaridade_w::text <> ''))
	and	((ie_possui_procuracao_valida	= 'N') or (nr_seq_doc_procuracao_w IS NOT NULL AND nr_seq_doc_procuracao_w::text <> ''))
	and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
	and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''))
	order by coalesce(qt_idade_min,0),
		coalesce(qt_idade_max,0);

C02 CURSOR FOR
	SELECT  qt_idade_max,
		ie_possui_comp_esc_valido,
		ie_possui_procuracao_valida,
		coalesce(ie_data_limite, '1') ie_data_limite
	from	regra_grau_parent_contrato
	where	nr_seq_parentesco		= nr_seq_parentesco_w
	and	coalesce(nr_seq_lote_parentesco::text, '') = ''
	and	qt_anos_w			>= qt_idade_min
	--and 	qt_anos_w			<= qt_idade_max
	and	((ie_benef_deficiencia		= 'N') or (qt_deficiencia_w > 0))
	and	((ie_possui_comp_esc_valido	= 'N') or (nr_seq_doc_escolaridade_w IS NOT NULL AND nr_seq_doc_escolaridade_w::text <> ''))
	and	((ie_possui_procuracao_valida	= 'N') or (nr_seq_doc_procuracao_w IS NOT NULL AND nr_seq_doc_procuracao_w::text <> ''))
	and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
	and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''))
	order by coalesce(qt_idade_min,0),
		coalesce(qt_idade_max,0);


BEGIN

select	cd_pessoa_fisica,
	nr_seq_parentesco,
	nr_seq_contrato,
	nr_seq_intercambio
into STRICT	cd_pessoa_fisica_w,
	nr_seq_parentesco_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	max(nr_seq_regra_dependencia)
		into STRICT	nr_seq_regra_dependencia_w
		from	pls_contrato_dependencia
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	ie_situacao = 'A';
		
		if (nr_seq_regra_dependencia_w IS NOT NULL AND nr_seq_regra_dependencia_w::text <> '') then
			select 	count(1)
			into STRICT	qt_regra_contrato_w
			from	regra_grau_parent_contrato
			where	nr_seq_lote_parentesco	= nr_seq_regra_dependencia_w
			and	nr_seq_parentesco	= nr_seq_parentesco_w;
		else
			qt_regra_contrato_w := 0;
		end if;
	elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		select	max(nr_seq_regra_dependencia)
		into STRICT	nr_seq_regra_dependencia_w
		from	pls_contrato_dependencia
		where	nr_seq_intercambio = nr_seq_intercambio_w
		and	ie_situacao = 'A';
		
		if (nr_seq_regra_dependencia_w IS NOT NULL AND nr_seq_regra_dependencia_w::text <> '') then
			select 	count(1)
			into STRICT	qt_regra_contrato_w
			from	regra_grau_parent_contrato
			where	nr_seq_lote_parentesco	= nr_seq_regra_dependencia_w
			and	nr_seq_parentesco	= nr_seq_parentesco_w;
		else
			qt_regra_contrato_w := 0;
		end if;
	else
		qt_regra_contrato_w := 0;
	end if;
	
	select	count(1)
	into STRICT	qt_regra_geral_w
	from	regra_grau_parent_contrato
	where	nr_seq_parentesco = nr_seq_parentesco_w
	and	coalesce(nr_seq_lote_parentesco::text, '') = '';
	
	if (qt_regra_contrato_w > 0) or (qt_regra_geral_w > 0) then
		select	dt_nascimento,
			ie_sexo,
			ie_estado_civil
		into STRICT	dt_nascimento_w,
			ie_sexo_w,
			ie_estado_civil_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
		
		if (coalesce(dt_nascimento_w::text, '') = '') then
			goto final;
		else
			qt_anos_w := trunc(months_between(clock_timestamp(), trunc(dt_nascimento_w,'month')) / 12);
		end if;
		
		select	count(1)
		into STRICT	qt_deficiencia_w
		from	pf_tipo_deficiencia
		where	cd_pessoa_fisica = cd_pessoa_fisica_w  LIMIT 1;
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_doc_escolaridade_w
		from	pls_tipo_documento_pf		a,
			tipo_documentacao		b
		where	a.nr_seq_tipo_documento		= b.nr_sequencia
		and	a.cd_pessoa_fisica		= cd_pessoa_fisica_w
		and	b.ie_finalidade			= 'P'
		and	b.ie_escolaridade		= 'S';
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_doc_procuracao_w
		from	pls_tipo_documento_pf		a,
			tipo_documentacao		b
		where	a.nr_seq_tipo_documento		= b.nr_sequencia
		and	a.cd_pessoa_fisica		= cd_pessoa_fisica_w
		and	b.ie_finalidade			= 'P'
		and	b.ie_procuracao			= 'S';
	end if;
	
	if (qt_regra_contrato_w > 0) then
		open C01;
		loop
		fetch C01 into
			qt_idade_max_w,
			ie_possui_comp_esc_valido_w,
			ie_possui_procuracao_valida_w,
			ie_data_limite_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;
	elsif (qt_regra_geral_w > 0) then
		open C02;
		loop
		fetch C02 into
			qt_idade_max_w,
			ie_possui_comp_esc_valido_w,
			ie_possui_procuracao_valida_w,
			ie_data_limite_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
	else
		goto final;
	end if;
	
	if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') then
		if (ie_possui_comp_esc_valido_w = 'S') then
			select	max(a.dt_validade)
			into STRICT	dt_validade_doc_w
			from	pls_tipo_documento_pf	a,
				tipo_documentacao	b
			where	a.nr_seq_tipo_documento	= b.nr_sequencia
			and	a.nr_sequencia		= nr_seq_doc_escolaridade_w;
		elsif (ie_possui_procuracao_valida_w = 'S') then
			select	max(a.dt_validade)
			into STRICT	dt_validade_doc_w
			from	pls_tipo_documento_pf	a,
				tipo_documentacao	b
			where	a.nr_seq_tipo_documento	= b.nr_sequencia
			and	a.nr_sequencia		= nr_seq_doc_procuracao_w;
		end if;
		
		if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then
			dt_retorno_w := dt_validade_doc_w;
		else
			if (ie_data_limite_w = '1') then
				dt_retorno_w := add_months(dt_nascimento_w,qt_idade_max_w*12);
			elsif (ie_data_limite_w = '2') then
				dt_retorno_w := fim_mes(add_months(dt_nascimento_w,(qt_idade_max_w*12)-1));
			end if;
		end if;
	end if;
end if;

<<final>>

return	dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dt_limite_depend ( nr_seq_segurado_p bigint) FROM PUBLIC;

