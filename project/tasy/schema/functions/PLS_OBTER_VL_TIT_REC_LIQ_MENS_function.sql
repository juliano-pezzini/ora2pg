-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_vl_tit_rec_liq_mens ( nr_titulo_p bigint, nr_seq_baixa_p bigint, cd_conta_contabil_p text, dt_referencia_p timestamp) RETURNS bigint AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_classif_w		double precision;
dt_liquidacao_w		timestamp;




BEGIN
select	max(a.dt_liquidacao)
into STRICT	dt_liquidacao_w
from	titulo_receber	a
where	a.nr_titulo	= nr_titulo_p;

select	sum(vl_classif)
into STRICT	vl_classif_w
from	(SELECT	coalesce(sum(a.vl_lancamento),0) vl_classif
	from	pls_titulo_rec_liq_mens	a
	where	a.nr_titulo		= nr_titulo_p
	and	((a.nr_seq_baixa = nr_seq_baixa_p) or (coalesce(nr_seq_baixa_p::text, '') = ''))
	and	a.cd_conta_credito	= cd_conta_contabil_p
	and	a.dt_contabil		<= dt_referencia_p
	
union all

	SELECT	coalesce(sum(a.vl_lancamento),0) vl_classif
	from	pls_titulo_rec_liq_mens	a
	where	a.nr_titulo		= nr_titulo_p
	and	((a.nr_seq_baixa = nr_seq_baixa_p) or (coalesce(nr_seq_baixa_p::text, '') = ''))
	and	a.cd_conta_debito	= cd_conta_contabil_p
	and	CASE WHEN a.ie_tipo_lancamento='BA' THEN add_months(a.dt_contabil,-1)  ELSE a.dt_contabil END 		<= dt_referencia_p
	
union all

	select	coalesce(sum(a.vl_lancamento),0) vl_classif
	from	pls_titulo_rec_liq_mens	a
	where	a.nr_titulo		= nr_titulo_p
	and	((a.nr_seq_baixa = nr_seq_baixa_p) or (coalesce(nr_seq_baixa_p::text, '') = ''))
	and	a.cd_conta_debito	= cd_conta_contabil_p
	and	CASE WHEN a.ie_tipo_lancamento='EA' THEN add_months(a.dt_contabil,-1)  ELSE a.dt_contabil END  <= dt_referencia_p
	and	trunc(dt_liquidacao_w,'month') = trunc(dt_referencia_p, 'month')
	and	not exists	(select	1
				from	pls_titulo_rec_liq_mens	x
				where	x.nr_titulo		= nr_titulo_p
				and	((x.nr_seq_baixa = nr_seq_baixa_p) or (coalesce(nr_seq_baixa_p::text, '') = ''))
				and	x.cd_conta_debito	= cd_conta_contabil_p
				and	x.ie_tipo_lancamento = 'BA')
	and	not exists	(select	1
				from	pls_titulo_rec_liq_mens	a
				where	a.nr_titulo		= nr_titulo_p
				and	((a.nr_seq_baixa = nr_seq_baixa_p) or (coalesce(nr_seq_baixa_p::text, '') = ''))
				and	a.cd_conta_credito	= cd_conta_contabil_p
				and	a.dt_contabil		<= dt_referencia_p)) alias33;


select	CASE WHEN nr_titulo_p=594294 THEN  vl_classif_w + 0.01 WHEN nr_titulo_p=592140 THEN  vl_classif_w + 0.02 WHEN nr_titulo_p=591530 THEN  vl_classif_w - 60  ELSE vl_classif_w END
into STRICT	vl_classif_w
;

return vl_classif_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_vl_tit_rec_liq_mens ( nr_titulo_p bigint, nr_seq_baixa_p bigint, cd_conta_contabil_p text, dt_referencia_p timestamp) FROM PUBLIC;

