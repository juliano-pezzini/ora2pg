-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_patient_not_released (nm_usuario_p text, cd_medico_p text, ie_liberar_p text, ie_exibe_alta_p text, cd_pessoa_fisica_p text, nr_atendimento_p text) RETURNS varchar AS $body$
DECLARE


  ds_retorno_w         varchar(1) := 'N';
  qt_notas_clinicas_w  integer;
  qt_sumario_w         integer;
  qt_instrucoes_alta_w integer;
  qt_diagnosticos_w    integer;
  qt_material_w        integer;


BEGIN

  SELECT COUNT(*)
    INTO STRICT qt_notas_clinicas_w
    FROM (SELECT e.nr_atendimento,
                 substr(obter_nome_pf(e.cd_pessoa_fisica), 1, 60) nm_paciente,
                 to_date(to_char(e.dt_evolucao, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS') dt_evolucao,
                 substr(obter_descricao_padrao('TIPO_EVOLUCAO', 'DS_TIPO_EVOLUCAO', e.ie_evolucao_clinica), 1, 200) ds_tipo_evolucao
            FROM evolucao_paciente e
LEFT OUTER JOIN atendimento_paciente a ON (e.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN setor_atendimento s ON (e.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE e.nm_usuario = nm_usuario_p AND e.cd_pessoa_fisica = cd_pessoa_fisica_p AND e.nr_atendimento = nr_atendimento_p   AND coalesce(e.dt_liberacao::text, '') = '' AND e.ie_evolucao_clinica <> 'CO' AND e.dt_evolucao > clock_timestamp() - interval '30 days' AND ie_liberar_p = 'S' AND coalesce(ie_avaliador_aux, 'N') = 'N' AND ((coalesce(a.dt_alta::text, '') = '' AND ie_exibe_alta_p = 'N') OR (ie_exibe_alta_p = 'S'))

UNION

          SELECT e.nr_atendimento,
                 substr(obter_nome_pf(e.cd_pessoa_fisica), 1, 60) nm_paciente,
                 to_date(to_char(e.dt_evolucao, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS') dt_evolucao,
                 substr(obter_descricao_padrao('TIPO_EVOLUCAO', 'DS_TIPO_EVOLUCAO', e.ie_evolucao_clinica), 1, 200) ds_tipo_evolucao
            FROM evolucao_paciente e
LEFT OUTER JOIN atendimento_paciente a ON (e.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN setor_atendimento s ON (e.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE e.cd_medico = cd_medico_p AND e.cd_pessoa_fisica = cd_pessoa_fisica_p AND e.nr_atendimento = nr_atendimento_p   AND coalesce(e.dt_liberacao::text, '') = '' AND e.ie_evolucao_clinica <> 'CO' AND e.dt_evolucao > clock_timestamp() - interval '30 days' AND ie_liberar_p = 'S' AND coalesce(ie_avaliador_aux, 'S') = 'S' AND (e.dt_liberacao_aux IS NOT NULL AND e.dt_liberacao_aux::text <> '') AND ((coalesce(a.dt_alta::text, '') = '' AND ie_exibe_alta_p = 'N') OR (ie_exibe_alta_p = 'S')) GROUP BY e.nr_atendimento,
                    substr(obter_nome_pf(e.cd_pessoa_fisica), 1, 60),
                    to_date(to_char(e.dt_evolucao, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS'),
                    substr(obter_descricao_padrao('TIPO_EVOLUCAO', 'DS_TIPO_EVOLUCAO', e.ie_evolucao_clinica), 1, 200)
          
UNION

          SELECT e.nr_atendimento,
                 substr(obter_nome_pf(e.cd_pessoa_fisica), 1, 60) nm_paciente,
                 to_date(to_char(e.dt_evolucao, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS') dt_evolucao,
                 substr(obter_descricao_padrao('TIPO_EVOLUCAO', 'DS_TIPO_EVOLUCAO', e.ie_evolucao_clinica), 1, 200) ds_tipo_evolucao
            FROM evolucao_paciente e
LEFT OUTER JOIN atendimento_paciente a ON (e.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN setor_atendimento s ON (e.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE e.nm_usuario_nrec = nm_usuario_p AND e.cd_pessoa_fisica = cd_pessoa_fisica_p AND e.nr_atendimento = nr_atendimento_p   AND coalesce(e.dt_liberacao::text, '') = '' AND coalesce(e.dt_liberacao_aux::text, '') = '' AND e.ie_evolucao_clinica <> 'CO' AND e.dt_evolucao > clock_timestamp() - interval '30 days' AND ie_liberar_p = 'S' AND coalesce(ie_avaliador_aux, 'S') = 'S' AND ((coalesce(a.dt_alta::text, '') = '' AND ie_exibe_alta_p = 'N') OR (ie_exibe_alta_p = 'S')) ORDER BY nm_paciente) b;

  SELECT COUNT(*)
    INTO STRICT qt_sumario_w
    FROM (SELECT e.ie_tipo_sumario ie_tipo_sumario,
                 e.nr_atendimento nr_atendimento,
                 substr(obter_nome_pf(x.cd_pessoa_fisica), 1, 60) nm_paciente,
                 e.dt_atualizacao_nrec dt_atualizacao_nrec,
                 e.dt_alta dt_alta,
                 e.nm_usuario_nrec
            FROM atend_sumario_alta   e,
                 atendimento_paciente x
           WHERE coalesce(dt_liberacao::text, '') = ''
             AND (e.nm_usuario_nrec = nm_usuario_p OR e.cd_medico_resp_alta = cd_medico_p)
             AND x.cd_pessoa_fisica = cd_pessoa_fisica_p
             AND x.nr_atendimento = e.nr_atendimento
             AND x.nr_atendimento = nr_atendimento_p
           ORDER BY nm_paciente) c;

  SELECT COUNT(*)
    INTO STRICT qt_instrucoes_alta_w
    FROM (SELECT aalta.nr_atendimento,
                 substr(obter_nome_pf(a.cd_pessoa_fisica), 1, 60) nm_paciente,
                 to_date(to_char(aalta.dt_registro, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS') dt_registro,
                 to_date(to_char(a.dt_alta, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS') dt_alta,
                 a.cd_pessoa_fisica,
                 s.ds_setor_atendimento ds_setor_atendimento
            FROM atendimento_paciente a, atendimento_alta aalta
LEFT OUTER JOIN setor_atendimento s ON (aalta.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE aalta.nr_atendimento = a.nr_atendimento AND a.cd_pessoa_fisica = cd_pessoa_fisica_p AND coalesce(aalta.dt_liberacao::text, '') = ''  AND aalta.nm_usuario LIKE nm_usuario_p AND aalta.nr_atendimento = nr_atendimento_p ORDER BY 3) e;

  SELECT COUNT(*)
    INTO STRICT qt_diagnosticos_w
    FROM (SELECT COUNT(*) qt_diagnosticos,
                 dd.nr_atendimento nr_atendimento,
                 substr(obter_nome_pf(ap.cd_pessoa_fisica), 1, 60) nm_paciente,
                 to_date(to_char(dd.dt_diagnostico, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS') dt_registro,
                 s.ds_setor_atendimento,
                 obter_desc_cid_doenca(MAX(cd_doenca)) ds_doenca
            FROM atendimento_paciente ap, diagnostico_doenca dd
LEFT OUTER JOIN setor_atendimento s ON (dd.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE dd.nr_atendimento = ap.nr_atendimento AND dd.nr_atendimento = nr_atendimento_p  AND coalesce(dd.dt_liberacao::text, '') = '' AND ap.cd_pessoa_fisica = cd_pessoa_fisica_p AND dd.nm_usuario = nm_usuario_p GROUP BY dd.nr_atendimento,
                    ap.cd_pessoa_fisica,
                    to_date(to_char(dd.dt_diagnostico, 'yyyy-mm-dd'), 'YYYY-MM-DD HH24:MI:SS'),
                    s.ds_setor_atendimento
           ORDER BY dd.nr_atendimento) d;

  SELECT COUNT(*)
    INTO STRICT qt_material_w
    FROM (SELECT c.nr_atendimento,
                substr(obter_nome_pf(c.cd_pessoa_fisica),1,60) nm_paciente,
                coalesce(c.dt_atualizacao_nrec,c.dt_inicio,clock_timestamp()) DT_PRESCRITA,
                cpoe_obter_tipo_item('CPOE_MATERIAL',c.nr_sequencia, null, c.ie_controle_tempo, c.ie_material) tipo_item
         FROM cpoe_material c
LEFT OUTER JOIN setor_atendimento s ON (c.cd_setor_atendimento = s.cd_setor_atendimento)
WHERE c.cd_pessoa_fisica = cd_pessoa_fisica_p AND c.nr_atendimento = nr_atendimento_p AND ( (c.nm_usuario = nm_usuario_p) OR (c.cd_medico = cd_medico_p )) AND coalesce(c.dt_liberacao::text, '') = ''  AND ( cpoe_funcao_prescr_liberada( 1939, c.nm_usuario_nrec) = 'S' OR c.cd_medico = cd_medico_p  ) AND cpoe_display_order_reason(c.ie_motivo_prescricao, nm_usuario_p, 1939) = 'S' AND cpoe_visualizar_itens_cururgia( 1939, c.nr_sequencia, 'M', c.nr_atendimento) = 'S'
         ) a;

  IF (qt_notas_clinicas_w > 0 OR qt_sumario_w > 0 OR qt_instrucoes_alta_w > 0 OR qt_diagnosticos_w > 0 OR
     qt_material_w > 0)
  THEN
    ds_retorno_w := 'S';
  END IF;

  RETURN ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_patient_not_released (nm_usuario_p text, cd_medico_p text, ie_liberar_p text, ie_exibe_alta_p text, cd_pessoa_fisica_p text, nr_atendimento_p text) FROM PUBLIC;

