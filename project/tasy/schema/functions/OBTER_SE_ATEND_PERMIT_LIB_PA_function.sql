-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_atend_permit_lib_pa ( nr_atendimento_p bigint, cd_estabelecimento_p bigint default null) RETURNS varchar AS $body$
DECLARE


ds_retorno_w				varchar(255);
qt_mat_tot_w				integer;
qt_mat_adm_w 				integer;
dt_referencia_w				timestamp;
dt_fim_horario_w			timestamp;
qt_prescricao_w				bigint;
qt_prescr_criadas_w			bigint;
qt_prescr_atend_w			bigint;
qt_total_pend_w				bigint;
qt_prescr_pend_lib_w			bigint;
qt_prescr_pend_lib_ww		bigint;
cd_estabelecimento_w		bigint	:= cd_estabelecimento_p;
ie_mostra_medic_estagio_pa_w	varchar(10);


BEGIN

if (coalesce(cd_estabelecimento_w::text, '') = '') then

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;

end if;

dt_referencia_w				:= clock_timestamp() - interval '2 days';
ds_retorno_w				:= 'S';

select 	coalesce(max(ie_mostra_medic_estagio_pa),'N')
into STRICT	ie_mostra_medic_estagio_pa_w
from	parametro_medico
where 	cd_estabelecimento = cd_estabelecimento_w;


select	count(nr_prescricao)
into STRICT	qt_prescricao_w
from	prescr_medica
where	nr_atendimento = nr_atendimento_p;

if (qt_prescricao_w > 0) and (ie_mostra_medic_estagio_pa_w	= 'S')then
	select	count(*)
	into STRICT	qt_mat_tot_w
	from	prescr_medica
	where	nr_atendimento	= nr_atendimento_p
	and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
	and	coalesce(DT_SUSPENSAO::text, '') = '';

	if (qt_mat_tot_w	> 0) then
		Select count(*)
		into STRICT	qt_prescr_pend_lib_w
		from prescr_medica a
		where a.nr_atendimento = nr_atendimento_p
		and	(a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '')
		and	coalesce(a.dt_liberacao::text, '') = ''
		and not exists (SELECT 1
				from prescr_mat_hor x
				where x.nr_prescricao = a.nr_prescricao
				and OBTER_SE_HORARIO_LIBERADO(x.dt_horario, x.dt_lib_horario) = 'S'
				
union all

				SELECT 1
				from prescr_proc_hor x
				where x.nr_prescricao = a.nr_prescricao
				and OBTER_SE_HORARIO_LIBERADO(x.dt_horario, x.dt_lib_horario) = 'S'
				
union all

				Select 1
				from prescr_rec_hor x
				where x.nr_prescricao = a.nr_prescricao
				and OBTER_SE_HORARIO_LIBERADO(x.dt_horario, x.dt_lib_horario) = 'S');

		select	count(*)
		into STRICT	qt_mat_adm_w
		from	adep_pend_pa_v
		where	nr_atendimento	= nr_atendimento_p
		and		dt_prescricao between clock_timestamp() - interval '2 days' and clock_timestamp() + interval '1 days';


		select	count(*)
		into STRICT	qt_prescr_pend_lib_ww
		from	prescr_medica
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
		and	coalesce(dt_liberacao::text, '') = '';


		if	((qt_mat_adm_w	= 0) and (qt_prescr_pend_lib_w = 0) and (qt_prescr_pend_lib_ww	= 0)) then
			ds_retorno_w	:= 'S';
		elsif (qt_mat_adm_w	> 0) or (qt_prescr_pend_lib_ww	> 0)then
			ds_retorno_w	:= 'N';
		end if;
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_atend_permit_lib_pa ( nr_atendimento_p bigint, cd_estabelecimento_p bigint default null) FROM PUBLIC;

