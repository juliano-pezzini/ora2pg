-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_hor_previsto_prescr ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nr_atendimento_p bigint, qt_hora_incosistencia_p bigint, dt_inicio_filtro_P timestamp, dt_final_filtro_P timestamp, ie_opcao_p bigint, qt_minuto_p bigint) RETURNS bigint AS $body$
DECLARE

 
qt_hor_pendente_w		bigint := 0;
qt_sol_pendente_w		bigint := 0;
qt_glic_pendente_w		bigint := 0;
ie_exibe_dietas_w		varchar(1);
ie_horarios_dietas_orais_w	varchar(1);
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_filtro_aux_w			timestamp;
nr_prescr_min_w			prescr_medica.nr_prescricao%type;
nr_prescr_max_w			prescr_medica.nr_prescricao%type;

 

BEGIN 
ie_horarios_dietas_orais_w := Wheb_assist_pck.obterParametroFuncao(1113,148, cd_perfil_p, obter_usuario_ativo, cd_estabelecimento_p);
 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then 
	dt_filtro_aux_w	:= clock_timestamp() + qt_minuto_p/1440;
	 
	/* vigentes */
 
	if (ie_opcao_p = 1) then 
		/*Tratar validade com between */
 
		dt_inicial_w	:= clock_timestamp();
		dt_final_w		:= clock_timestamp() + interval '3 days';		
		 
		select	min(nr_prescricao), 
				max(nr_prescricao) 
		into STRICT	nr_prescr_min_w, 
				nr_prescr_max_w 
		from	prescr_medica 
		where	dt_validade_prescr 	between dt_inicial_w and dt_final_w 
		and		nr_atendimento		= nr_atendimento_p;
		 
		/* gestão / coletas e SAE's*/
 
		select	count(*) + qt_hor_pendente_w 
		into STRICT	qt_hor_pendente_w 
		from	adep_pend_prev_v 
		where	dt_horario 		< dt_filtro_aux_w 
		and	dt_validade_prescr 	between dt_inicial_w and dt_final_w 
		AND 	((ie_horarios_dietas_orais_w = 'S') or (ie_horarios_dietas_orais_w = 'N' and ie_tipo_item <> 'D')) 
		and		nr_atendimento		= nr_atendimento_p 
		and		((ie_tipo_item = 'E') or 
				 ((nr_prescricao between nr_prescr_min_w and nr_prescr_max_w) and (adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item), 
												cd_estabelecimento_p, 
												cd_setor_atendimento_p, 
												cd_perfil_p, 
												cd_item, 
												cd_item, 
												ie_origem_proced, 
												nr_seq_proc_interno, 
												cd_setor_prescr, 
												null, 
												null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
												null)	= 'S'))); -- nr_seq_exame_p 
		 
		/* glicemia */
		select	count(*) 
		into STRICT	qt_glic_pendente_w 
		from	adep_glic_pend_v 
		where	dt_horario < dt_filtro_aux_w 
		and		nr_prescricao between nr_prescr_min_w and nr_prescr_max_w 
		and		dt_validade_prescr 	between dt_inicial_w and dt_final_w 
		and		nr_atendimento 		= nr_atendimento_p 
		and		adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item), 
											cd_estabelecimento_p, 
											cd_setor_atendimento_p, 
											cd_perfil_p, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
											null)	= 'S'; -- nr_seq_exame_p 
 
		/* soluções */
		select	count(*) 
		into STRICT	qt_sol_pendente_w 
		from	adep_sol_prescr_v 
		where	coalesce(ie_status_solucao,'N') = 'N' 
		and		dt_status < dt_filtro_aux_w 
		and		nr_prescricao between nr_prescr_min_w and nr_prescr_max_w 
		and		dt_validade_prescr	between dt_inicial_w and dt_final_w 
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
		and		coalesce(dt_susp_prescr::text, '') = '' 
		and		coalesce(ie_suspenso,'N') = 'N' 
		and		coalesce(ie_acm,'N') = 'N' 
		and		nr_atendimento = nr_atendimento_p 
		and		adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_solucao), 
											cd_estabelecimento_p, 
											cd_setor_atendimento_p, 
											cd_perfil_p, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
											null)	= 'S'; -- nr_seq_exame_p 
 
	/* período */
	elsif (ie_opcao_p = 2) then 
		/* Tratar filtro entre datas */
 
		if (coalesce(qt_hora_incosistencia_p,0) > 0) then 
			dt_inicial_w	:= clock_timestamp() - qt_hora_incosistencia_p / 24;
			dt_final_w	:= clock_timestamp() + interval '3 days';
		else 
			if (coalesce(dt_inicio_filtro_P::text, '') = '') or (coalesce(dt_final_filtro_P::text, '') = '') then 
				return 0;
			end if;
			dt_inicial_w	:= dt_inicio_filtro_P;
			dt_final_w	:= dt_final_filtro_P;
		end if;
		 
		select	min(nr_prescricao), 
				max(nr_prescricao) 
		into STRICT	nr_prescr_min_w, 
				nr_prescr_max_w 
		from	prescr_medica 
		where	dt_validade_prescr 	between dt_inicial_w and dt_final_w 
		and		nr_atendimento		= nr_atendimento_p;
 
		/* gestão / coletas e SAE's*/
 
		select	count(*) + qt_hor_pendente_w 
		into STRICT	qt_hor_pendente_w 
		from	adep_pend_prev_v 
		where	dt_horario < dt_filtro_aux_w 
		and 	((ie_horarios_dietas_orais_w = 'S') or (ie_horarios_dietas_orais_w ='N' and ie_tipo_item <> 'D')) 
		and		dt_validade_prescr between dt_inicial_w and dt_final_w 
		and		nr_atendimento = nr_atendimento_p 
		and		ie_tipo_item <> 'MAP' 
		and		((ie_tipo_item = 'E') or 
				 ((nr_prescricao between nr_prescr_min_w and nr_prescr_max_w) and (adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item), 
												cd_estabelecimento_p, 
												cd_setor_atendimento_p, 
												cd_perfil_p, 
												cd_item, 
												cd_item, 
												ie_origem_proced, 
												nr_seq_proc_interno, 
												cd_setor_prescr, 
												null, 
												null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
												null)	= 'S'))); -- nr_seq_exame_p 
 
		/* glicemia */
		select	count(*) 
		into STRICT	qt_glic_pendente_w 
		from	adep_glic_pend_v 
		where	dt_horario < dt_filtro_aux_w 
		and		nr_prescricao between nr_prescr_min_w and nr_prescr_max_w 
		and		dt_validade_prescr	between dt_inicial_w and dt_final_w 
		and		nr_atendimento		= nr_atendimento_p 
		and		adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item), 
											cd_estabelecimento_p, 
											cd_setor_atendimento_p, 
											cd_perfil_p, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
											null)	= 'S'; -- nr_seq_exame_p 
 
		/* soluções */
		select	count(*) 
		into STRICT	qt_sol_pendente_w 
		from	adep_sol_prescr_v 
		where	coalesce(ie_status_solucao,'N') = 'N' 
		and		dt_status < dt_filtro_aux_w 
		and		nr_prescricao between nr_prescr_min_w and nr_prescr_max_w 
		and		dt_validade_prescr	between dt_inicial_w and dt_final_w 
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
		and		coalesce(dt_susp_prescr::text, '') = '' 
		and		coalesce(ie_suspenso,'N') = 'N' 
		and		coalesce(ie_acm,'N') = 'N' 
		and		nr_atendimento		= nr_atendimento_p 
		and		adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_solucao), 
											cd_estabelecimento_p, 
											cd_setor_atendimento_p, 
											cd_perfil_p, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, 
											null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
											null)	= 'S'; -- nr_seq_exame_p 
	end if;
end if;
 
return	qt_hor_pendente_w + qt_sol_pendente_w + qt_glic_pendente_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_hor_previsto_prescr ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_p bigint, nr_atendimento_p bigint, qt_hora_incosistencia_p bigint, dt_inicio_filtro_P timestamp, dt_final_filtro_P timestamp, ie_opcao_p bigint, qt_minuto_p bigint) FROM PUBLIC;

