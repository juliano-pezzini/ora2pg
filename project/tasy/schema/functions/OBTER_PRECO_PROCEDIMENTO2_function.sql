-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_preco_procedimento2 ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_p text, cd_funcao_medico_p text, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/* P - Procedimento	M - Médico	C - Custo Op.	F - Filme   PM - Ponto Médico*/

/* H Honorario*/

qt_pontos_w			preco_amb.qt_pontuacao%type;
vl_procedimento_w			double precision;
vl_custo_operacional_w		double precision;
vl_anestesista_w			double precision;
vl_medico_w			double precision;
vl_auxiliares_w			double precision;
vl_materiais_w			double precision;
vl_pto_procedimento_w		double precision;
vl_pto_custo_operac_w		double precision;
vl_pto_anestesista_w		double precision;
vl_pto_medico_w			double precision;
vl_pto_auxiliares_w			double precision;
vl_pto_materiais_w			double precision;
qt_porte_anestesico_w		double precision;
cd_edicao_amb_w			integer;
vl_resultado_w			double precision;
cd_area_procedimento_w		double precision;
ie_preco_informado_w		varchar(01);
ie_classificacao_w			varchar(01);
nr_seq_ajuste_proc_w		bigint;


BEGIN

select	max(ie_classificacao)
into STRICT	ie_classificacao_w
from	procedimento
where	cd_procedimento	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

if (ie_classificacao_w = '1') then
	begin
	SELECT * FROM Define_Preco_Procedimento(
		CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, DT_CONTA_P, CD_PROCEDIMENTO_P, CD_TIPO_ACOMODACAO_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, CD_MEDICO_P, CD_FUNCAO_MEDICO_P, Null, Null, Null, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, null, VL_PROCEDIMENTO_W, VL_CUSTO_OPERACIONAL_W, VL_ANESTESISTA_W, VL_MEDICO_W, VL_AUXILIARES_W, VL_MATERIAIS_W, VL_PTO_PROCEDIMENTO_W, VL_PTO_CUSTO_OPERAC_W, VL_PTO_ANESTESISTA_W, VL_PTO_MEDICO_W, VL_PTO_AUXILIARES_W, VL_PTO_MATERIAIS_W, QT_PORTE_ANESTESICO_W, qt_pontos_w, CD_EDICAO_AMB_W, ie_preco_informado_w, nr_seq_ajuste_proc_w, 0, null, 0, null, null, NULL, NULL, null, null, null, null, null, null, null, null, null, ie_origem_proced_p, null, null, null) INTO STRICT VL_PROCEDIMENTO_W, VL_CUSTO_OPERACIONAL_W, VL_ANESTESISTA_W, VL_MEDICO_W, VL_AUXILIARES_W, VL_MATERIAIS_W, VL_PTO_PROCEDIMENTO_W, VL_PTO_CUSTO_OPERAC_W, VL_PTO_ANESTESISTA_W, VL_PTO_MEDICO_W, VL_PTO_AUXILIARES_W, VL_PTO_MATERIAIS_W, QT_PORTE_ANESTESICO_W, qt_pontos_w, CD_EDICAO_AMB_W, ie_preco_informado_w, nr_seq_ajuste_proc_w;
	end;
else	begin
	SELECT * FROM Define_Preco_servico(
		CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, dt_conta_p, cd_procedimento_p, CD_SETOR_ATENDIMENTO_P, IE_TIPO_ATENDIMENTO_P, CD_TIPO_ACOMODACAO_P, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, null, vl_procedimento_w, nr_seq_ajuste_proc_w, null, 0, null, null, null, null, null, null, null, null, null, null, null, CD_MEDICO_P) INTO STRICT vl_procedimento_w, nr_seq_ajuste_proc_w;
	end;

end if;

if (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then
	begin
	if (ie_opcao_p	= 'P') then
		vl_resultado_w	:= vl_procedimento_w;
	elsif (ie_opcao_p	= 'C') then
		vl_resultado_w	:= vl_custo_operacional_w;
	elsif (ie_opcao_p	= 'M') then
		vl_resultado_w	:= vl_medico_w;
	elsif (ie_opcao_p	= 'F') then
		vl_resultado_w	:= vl_materiais_w;
	elsif (ie_opcao_p	= 'PP') then
		vl_resultado_w	:= vl_pto_procedimento_w;
	elsif (ie_opcao_p	= 'PM') then
		vl_resultado_w	:= VL_PTO_MEDICO_W;
	elsif (ie_opcao_p	= 'H') then
		vl_resultado_w	:= VL_AUXILIARES_W + vl_medico_w + VL_ANESTESISTA_W;
	end if;

	end;
end if;

RETURN vl_resultado_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_preco_procedimento2 ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_p text, cd_funcao_medico_p text, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, ie_opcao_p text) FROM PUBLIC;

