-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tre_obter_ultima_data_presenca (nr_seq_evento_p bigint) RETURNS timestamp AS $body$
DECLARE


dt_inicio_real_w	timestamp;
dt_fim_real_w		timestamp;
qt_carga_horaria_w	double precision;
hr_inicial_w		timestamp;
ht_final_w		timestamp;
ie_dia_semana_w		smallint;
dt_atual_w		timestamp;
ie_dia_atual_w		smallint;
nr_seq_agenda_w		bigint;
dt_alteracao_w		timestamp;

C01 CURSOR FOR
	SELECT	to_date(to_Char(c.hr_inicial,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
		to_date(to_Char(c.hr_final,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),		
		(c.ie_dia_semana)::numeric
	from	tre_agenda_turno c
	where	c.nr_seq_agenda_tre = nr_seq_agenda_w
	and	((dt_atual_w between c.dt_inicio_vigencia and fim_dia(c.dt_fim_vigencia)) or ((coalesce(c.dt_inicio_vigencia::text, '') = '') or (coalesce(c.dt_fim_vigencia::text, '') = '')));


BEGIN


if (nr_seq_evento_p IS NOT NULL AND nr_seq_evento_p::text <> '') then		
	begin

	select	a.dt_inicio_real,
                a.dt_fim_real,
                coalesce(a.qt_carga_horaria,0),
                a.nr_seq_agenda
	into STRICT	dt_inicio_real_w,
		dt_fim_real_w,
		qt_carga_horaria_w,
		nr_seq_agenda_w
	from	tre_evento a
	where	a.nr_sequencia = nr_seq_evento_p  LIMIT 1;

	select	max(dt_alteracao)
	into STRICT	dt_alteracao_w
	from	tre_alteracao_dia_aula
	where	nr_seq_agenda = nr_seq_agenda_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	ie_acao = 'A';



	dt_atual_w := dt_inicio_real_w;
	while(qt_carga_horaria_w > 0) and (dt_atual_w < dt_fim_real_w ) loop

		select pkg_date_utils.get_WeekDay(dt_atual_w) --Busca como dia da semana
		into STRICT	ie_dia_atual_w
		;

		open C01;
		loop
		fetch C01 into	
			hr_inicial_w,
			ht_final_w,
			ie_dia_semana_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin	-- compara os dias da semana. Se ie_dia_semana = 9, traz apenas os dias de trabalho
			if ((ie_dia_atual_w = ie_dia_semana_w) or ((ie_dia_semana_w = 9) and (pkg_date_utils.IS_BUSINESS_DAY(dt_atual_w) = 1))) and (obter_se_feriado(obter_estabelecimento_ativo, dt_atual_w) = 0) then			
			
				qt_carga_horaria_w := qt_carga_horaria_w - to_number(((ht_final_w - hr_inicial_w)*24));
			end if;
			end;
		end loop;
		close C01;

		dt_atual_w := trunc(dt_atual_w) + 1;		

		end loop;
		end;
	end if;

if (dt_alteracao_w > dt_atual_w) then	
	dt_atual_w := trunc(dt_alteracao_w+1);
end if;

return	dt_atual_w-1;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tre_obter_ultima_data_presenca (nr_seq_evento_p bigint) FROM PUBLIC;

