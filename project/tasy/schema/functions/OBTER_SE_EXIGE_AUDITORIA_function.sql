-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_exige_auditoria ( nr_sequencia_p bigint, ie_mat_proc_p bigint) RETURNS varchar AS $body$
DECLARE


qt_existe_w	bigint;
ie_retorno_w	varchar(1) := 'N';

cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
cd_material_w		integer;

cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_grupo_proc_w		bigint;
cd_especialidade_w	grupo_proc.cd_especialidade%type;
cd_area_procedimento_w	integer;
ie_exige_auditoria_w	varchar(1);
vl_item_w		double precision;

C01 CURSOR FOR
	SELECT	coalesce(ie_exige_auditoria,'N')
	from	regra_exige_auditoria
	where	ie_situacao = 'A'
	and	coalesce(cd_material, cd_material_w) = cd_material_w
	and	coalesce(cd_classe_material, cd_classe_material_w) = cd_classe_material_w
	and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w) = cd_subgrupo_material_w
	and	coalesce(cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
	and 	coalesce(vl_item_w,0) between coalesce(vl_minimo, coalesce(vl_item_w,0)) and coalesce(vl_maximo, coalesce(vl_item_w,0))
	and	((cd_material IS NOT NULL AND cd_material::text <> '') or (cd_classe_material IS NOT NULL AND cd_classe_material::text <> '')
		or (cd_subgrupo_material IS NOT NULL AND cd_subgrupo_material::text <> '') or (cd_grupo_material IS NOT NULL AND cd_grupo_material::text <> ''))
	order by coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0);


C02 CURSOR FOR
	SELECT	coalesce(ie_exige_auditoria,'N')
	from	regra_exige_auditoria
	where	ie_situacao = 'A'
	and	coalesce(cd_procedimento, cd_procedimento_w) = cd_procedimento_w
	and	coalesce(ie_origem_proced, ie_origem_proced_w) = ie_origem_proced_w
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w) = cd_grupo_proc_w
	and	coalesce(cd_especialidade, cd_especialidade_w) = cd_especialidade_w
	and	coalesce(cd_area_procedimento, cd_area_procedimento_w) = cd_area_procedimento_w
	and 	coalesce(vl_item_w,0) between coalesce(vl_minimo, coalesce(vl_item_w,0)) and coalesce(vl_maximo, coalesce(vl_item_w,0))
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') or (cd_grupo_proc IS NOT NULL AND cd_grupo_proc::text <> '')
		or (cd_especialidade IS NOT NULL AND cd_especialidade::text <> '') or (cd_area_procedimento IS NOT NULL AND cd_area_procedimento::text <> ''))
	order by coalesce(cd_procedimento, 0),
		coalesce(cd_grupo_proc, 0),
		coalesce(cd_especialidade, 0),
		coalesce(cd_area_procedimento, 0);


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	regra_exige_auditoria
where	ie_situacao = 'A';

if (qt_existe_w > 0) then

	if (ie_mat_proc_p = 1) then

		select	max(cd_grupo_material),
			max(cd_subgrupo_material),
			max(cd_classe_material),
			max(cd_material)
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			cd_material_w
		from	estrutura_material_v
		where	cd_material = obter_cod_material_atend_pac(nr_sequencia_p);

		select 	coalesce(max(vl_material),0)
		into STRICT	vl_item_w
		from 	material_atend_paciente
		where 	nr_sequencia = nr_sequencia_p;

		open C01;
		loop
		fetch C01 into
			ie_exige_auditoria_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ie_retorno_w := ie_exige_auditoria_w;
			end;
		end loop;
		close C01;

	else

		select	max(cd_procedimento),
			max(ie_origem_proced),
			coalesce(max(vl_procedimento),0)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			vl_item_w
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_p;

		select	max(cd_grupo_proc),
			max(cd_especialidade),
			max(cd_area_procedimento)
		into STRICT	cd_grupo_proc_w,
			cd_especialidade_w,
			cd_area_procedimento_w
		from	estrutura_procedimento_v
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;

		open C02;
		loop
		fetch C02 into
			ie_exige_auditoria_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_retorno_w := ie_exige_auditoria_w;
			end;
		end loop;
		close C02;

	end if;

end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_exige_auditoria ( nr_sequencia_p bigint, ie_mat_proc_p bigint) FROM PUBLIC;

