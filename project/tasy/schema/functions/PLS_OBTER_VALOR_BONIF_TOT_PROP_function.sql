-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_valor_bonif_tot_prop ( nr_seq_proposta_p bigint, nr_seq_bonificacao_p bigint, nr_seq_proposta_benef_p bigint) RETURNS bigint AS $body$
DECLARE


vl_retorno_w			double precision := 0;
nr_seq_bonificacao_w		bigint;
nr_seq_tabela_w			bigint;
vl_bonificacao_w		double precision := 0;
vl_preco_atual_w		double precision := 0;
vl_bonificacao_tot_w		double precision := 0;
nr_seq_desconto_w		bigint;
ie_tipo_proposta_w		smallint;
vl_desconto_w			double precision := 0;
tx_desconto_w			double precision;
ie_tipo_regra_w			varchar(2);

ie_tipo_item_w			varchar(255);
vl_tot_bonificacao_w		double precision;
tx_bonificacao_w		double precision;
qt_idade_benef_w		bigint;
vl_proposta_sca_w		double precision;
vl_proposta_benef_w		double precision;
tx_inscricao_w			double precision;
vl_inscricao_w			double precision;
dt_inicio_proposta_w		timestamp;
nr_seq_regra_w			bigint;
ie_grau_parentesco_w		varchar(2);
nr_seq_sca_vinculo_w		bigint;
vl_sca_w			double precision;
ie_acao_contrato_w		varchar(10);
qt_vidas_w			bigint;
ie_possui_bonificacao_w		varchar(10);
cd_estabelecimento_w		pls_proposta_adesao.cd_estabelecimento%type;
nr_seq_regra_desconto_w		integer;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;

C00 CURSOR FOR
	SELECT	coalesce(vl_preco_atual,0)
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_w
	and	qt_idade_benef_w between qt_idade_inicial and qt_idade_final
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	order	by	coalesce(ie_grau_titularidade,' ');

C01 CURSOR FOR
	SELECT	coalesce(c.vl_bonificacao,coalesce(a.vl_bonificacao,0)),
		coalesce(c.tx_bonificacao,coalesce(a.tx_bonificacao,0)),
		a.ie_tipo_item,
		coalesce(a.ie_tipo_regra,'M'),
		a.nr_seq_desconto,
		coalesce(a.ie_possui_bonificacao,'N')
	from	pls_bonificacao_regra	a,
		pls_bonificacao		b,
		pls_bonificacao_vinculo	c
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_bonificacao_p
	and	c.nr_seq_proposta	= nr_seq_proposta_p
	and	1 between coalesce(nr_parcela_inicial,1) and coalesce(nr_parcela_final,1)
	
union all

	SELECT	coalesce(c.vl_bonificacao,coalesce(a.vl_bonificacao,0)),
		coalesce(c.tx_bonificacao,coalesce(a.tx_bonificacao,0)),
		a.ie_tipo_item,
		coalesce(a.ie_tipo_regra,'M'),
		a.nr_seq_desconto,
		coalesce(a.ie_possui_bonificacao,'N')
	from	pls_bonificacao_regra	a,
		pls_bonificacao		b,
		pls_bonificacao_vinculo	c
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_bonificacao_p
	and	c.nr_seq_contrato	= nr_seq_contrato_w
	and	1 between coalesce(nr_parcela_inicial,1) and coalesce(nr_parcela_final,1);
	
C02 CURSOR FOR  --Valor total SCA
	SELECT	nr_sequencia
	from	pls_sca_vinculo
	where	nr_seq_benef_proposta	= nr_seq_proposta_benef_p;


BEGIN

select	trunc(months_between(clock_timestamp(), c.dt_nascimento) / 12),
	a.nr_seq_tabela,
	coalesce(substr(pls_obter_garu_dependencia_seg(a.nr_sequencia,'P'),1,2),'X'),
	b.dt_inicio_proposta,
	b.ie_tipo_proposta,
	b.cd_estabelecimento,
	(	select	x.nr_sequencia
		from	pls_contrato x
		where	x.nr_contrato = b.nr_seq_contrato) nr_seq_contrato
into STRICT	qt_idade_benef_w,
	nr_seq_tabela_w,
	ie_grau_parentesco_w,
	dt_inicio_proposta_w,
	ie_tipo_proposta_w,
	cd_estabelecimento_w,
	nr_seq_contrato_w
from	pessoa_fisica			c,
	pls_proposta_beneficiario	a,
	pls_proposta_adesao		b
where	c.cd_pessoa_fisica	= a.cd_beneficiario
and	a.nr_seq_proposta	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_proposta_benef_p;

if (ie_tipo_proposta_w in (1,6,7)) then
	ie_acao_contrato_w	:= 'A';
elsif (ie_tipo_proposta_w in (2,8)) then
	ie_acao_contrato_w	:= 'L';
elsif (ie_tipo_proposta_w in (3,4,7,8)) then
	ie_acao_contrato_w	:= 'M';
end if;

vl_preco_atual_w	:= 0;

open c00;
loop
fetch c00 into
	vl_preco_atual_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
end loop;
close c00;

SELECT * FROM pls_obter_regra_desconto(nr_seq_proposta_benef_p, 2, cd_estabelecimento_w, tx_desconto_w, nr_seq_regra_desconto_w) INTO STRICT tx_desconto_w, nr_seq_regra_desconto_w;

vl_preco_atual_w	:= vl_preco_atual_w - dividir((vl_preco_atual_w * tx_desconto_w), 100);

vl_proposta_sca_w	:= 0;

open c02;
loop
fetch c02 into
	nr_seq_sca_vinculo_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	
	select	pls_obter_valores_propostas(nr_seq_proposta_benef_p,nr_seq_sca_vinculo_w,'S')
	into STRICT	vl_sca_w
	;
		
	vl_proposta_sca_w	:= vl_proposta_sca_w + vl_sca_w;
	
	end;
end loop;
close c02;

SELECT * FROM pls_obter_taxa_inscricao(nr_seq_proposta_benef_p, null, null, null, nr_seq_proposta_p, 1, dt_inicio_proposta_w, null, ie_acao_contrato_w, nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w) INTO STRICT nr_seq_regra_w, vl_inscricao_w, tx_inscricao_w;

if (coalesce(tx_inscricao_w,0) <> 0) then
	vl_inscricao_w := dividir((vl_preco_atual_w * tx_inscricao_w), 100);
elsif (coalesce(vl_inscricao_w,0) <> 0) then
	vl_inscricao_w := vl_inscricao_w;
end if;

open C01;
loop
fetch C01 into
	vl_bonificacao_w,
	tx_bonificacao_w,
	ie_tipo_item_w,
	ie_tipo_regra_w,
	nr_seq_desconto_w,
	ie_possui_bonificacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	vl_tot_bonificacao_w	:= 0;
	
	if (ie_tipo_regra_w = 'M') then
	
		if (pls_obter_se_item_lista(ie_tipo_item_w,'1') = 'S') then
			vl_tot_bonificacao_w	:= (((tx_bonificacao_w /100) * vl_preco_atual_w) + vl_bonificacao_w);
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		end if;		
		
		if (pls_obter_se_item_lista(ie_tipo_item_w,'15') = 'S') then
			vl_tot_bonificacao_w	:= (((tx_bonificacao_w /100) * vl_proposta_sca_w) + vl_bonificacao_w);
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		end if;
		
		if (pls_obter_se_item_lista(ie_tipo_item_w,'2') = 'S') then
			vl_tot_bonificacao_w	:= (((tx_bonificacao_w /100) * vl_inscricao_w) + vl_bonificacao_w);
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		end if;
		
	elsif (ie_tipo_regra_w = 'D') and (nr_seq_desconto_w IS NOT NULL AND nr_seq_desconto_w::text <> '') then
		
		qt_vidas_w	:= pls_obter_qt_vidas_bonif_prop(nr_seq_proposta_p,nr_seq_bonificacao_p,ie_possui_bonificacao_w);
		
		select	max(tx_desconto)
		into STRICT	tx_desconto_w
		from	pls_preco_regra
		where	nr_seq_regra = nr_seq_desconto_w
		and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);
		
		if (pls_obter_se_item_lista(ie_tipo_item_w,'1') = 'S') then
			vl_tot_bonificacao_w	:= (((tx_desconto_w /100) * vl_preco_atual_w));
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		end if;
		
		if (pls_obter_se_item_lista(ie_tipo_item_w,'15') = 'S') then
			vl_tot_bonificacao_w	:= (((tx_desconto_w /100) * vl_proposta_sca_w));
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		end if;
		
		if (pls_obter_se_item_lista(ie_tipo_item_w,'2') = 'S') then
			vl_tot_bonificacao_w	:= (((tx_desconto_w /100) * vl_inscricao_w));
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		end if;
	
	end if;
	
	end;
end loop;
close C01;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_valor_bonif_tot_prop ( nr_seq_proposta_p bigint, nr_seq_bonificacao_p bigint, nr_seq_proposta_benef_p bigint) FROM PUBLIC;

