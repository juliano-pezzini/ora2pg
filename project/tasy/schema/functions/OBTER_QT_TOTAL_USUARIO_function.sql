-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_total_usuario ( cd_tipo_agenda_p text, cd_agenda_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_exame_p bigint, cd_medico_p text, cd_setor_atendimento_p bigint, nm_usuario_p text, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

			 
ds_retorno_w			integer;

qt_total_agendam_cons_w		integer;
qt_total_agendam_exam_w		integer;
qt_total_cp_transf_cons_w	integer;
qt_total_cp_transf_exam_w	integer;
qt_total_cancel_cons_w		integer;
qt_total_cancel_exam_w		integer;
ds_retorno_cons_w		integer;
ds_retorno_exam_w		integer;

/* ie_opcao 
1 - Total de Agendamentos 
2 - Total de CÃ³pias/Transferencias 
3 - Total de Cancelamentos 
4 - Total geral */
 
 

BEGIN 
 
if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') then 
	if ((cd_tipo_agenda_p = '3') or (cd_tipo_agenda_p = '0')) then 
		if (ie_opcao_p = '1') then	  
			select 	count(a.nm_usuario_origem) 
			into STRICT	qt_total_agendam_cons_w 
			from  	agenda_consulta a, 
				agenda b 
			where 	a.cd_agenda = b.cd_agenda 
			and	a.cd_agenda = cd_agenda_p 
			and	b.ie_situacao = 'A' 
			and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
			and	b.cd_tipo_agenda = 3 
			and	trunc(a.dt_agendamento) between dt_inicial_p and fim_dia( dt_final_p) 
			and	((a.nr_seq_exame = nr_seq_exame_p) or ( nr_seq_exame_p = '0')) 
			and	((b.cd_pessoa_fisica = cd_medico_p) or ( cd_medico_p = '0')) 
			and	((a.cd_setor_atendimento = cd_setor_atendimento_p) or ( cd_setor_atendimento_p = '0')) 
			and	upper(a.nm_usuario_origem) = upper(nm_usuario_p);
			 
			ds_retorno_w := qt_total_agendam_cons_w;
			ds_retorno_cons_w := qt_total_agendam_cons_w;
		 
		elsif (ie_opcao_p = '2') then		 
			select	count(a.nm_usuario_copia_trans) 
			into STRICT	qt_total_cp_transf_cons_w 
			from  	agenda_consulta a, 
				agenda b 
			where 	a.cd_agenda = b.cd_agenda 
			and	a.cd_agenda = cd_agenda_p 
			and	b.ie_situacao = 'A' 
			and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
			and	b.cd_tipo_agenda = 3 
			and	trunc(a.dt_agendamento) between dt_inicial_p and fim_dia( dt_final_p) 
			and	((a.nr_seq_exame = nr_seq_exame_p) or ( nr_seq_exame_p = '0')) 
			and	((b.cd_pessoa_fisica = cd_medico_p) or ( cd_medico_p = '0')) 
			and	((a.cd_setor_atendimento = cd_setor_atendimento_p) or ( cd_setor_atendimento_p = '0')) 
			and	upper(a.nm_usuario_copia_trans) = upper(nm_usuario_p);
			 
			ds_retorno_w := qt_total_cp_transf_cons_w;
			ds_retorno_cons_w := qt_total_cp_transf_cons_w;
		 
		elsif (ie_opcao_p = '3') then		 
			select	count(a.nm_usuario_cancelamento) 
			into STRICT	qt_total_cancel_cons_w 
			from  	agenda_consulta a, 
				agenda b 
			where 	a.cd_agenda = b.cd_agenda 
			and	a.cd_agenda = cd_agenda_p 
			and	b.ie_situacao = 'A' 
			and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
			and	b.cd_tipo_agenda = 3 
			and	trunc(a.dt_agendamento) between dt_inicial_p and fim_dia( dt_final_p) 
			and	((a.nr_seq_exame = nr_seq_exame_p) or ( nr_seq_exame_p = '0')) 
			and	((b.cd_pessoa_fisica = cd_medico_p) or ( cd_medico_p = '0')) 
			and	((a.cd_setor_atendimento = cd_setor_atendimento_p) or ( cd_setor_atendimento_p = '0')) 
			and	upper(a.nm_usuario_cancelamento) = upper(nm_usuario_p);
			 
			ds_retorno_w := qt_total_cancel_cons_w;
			ds_retorno_cons_w := qt_total_cancel_cons_w;
			 
		end if;
		 
	end if;	
		 
	if ((cd_tipo_agenda_p = '2') or (cd_tipo_agenda_p = '0')) then 
		if (ie_opcao_p = '1') then	  
			select 	count(a.nm_usuario_orig) 
			into STRICT	qt_total_agendam_exam_w 
			from  	agenda_paciente a, 
				agenda b 
			where 	a.cd_agenda = b.cd_agenda 
			and	a.cd_agenda = cd_agenda_p 
			and	b.ie_situacao = 'A' 
			and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
			and	b.cd_tipo_agenda = 2 
			and	trunc(a.dt_agendamento) between dt_inicial_p and fim_dia( dt_final_p) 
			and	((b.cd_pessoa_fisica = cd_medico_p) or ( cd_medico_p = '0')) 
			and	((a.cd_setor_atendimento = cd_setor_atendimento_p) or ( cd_setor_atendimento_p = '0')) 
			and	upper(a.nm_usuario_orig) = upper(nm_usuario_p);
 
			ds_retorno_w := qt_total_agendam_exam_w;
			ds_retorno_exam_w := qt_total_agendam_exam_w;
		 
		elsif (ie_opcao_p = '2') then		 
			select	count(a.nm_usuario_copia_trans) 
			into STRICT	qt_total_cp_transf_exam_w 
			from  	agenda_paciente a, 
				agenda b 
			where 	a.cd_agenda = b.cd_agenda 
			and	a.cd_agenda = cd_agenda_p 
			and	b.ie_situacao = 'A' 
			and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
			and	b.cd_tipo_agenda = 2 
			and	trunc(a.dt_agendamento) between dt_inicial_p and fim_dia( dt_final_p) 
			and	((b.cd_pessoa_fisica = cd_medico_p) or ( cd_medico_p = '0')) 
			and	((a.cd_setor_atendimento = cd_setor_atendimento_p) or ( cd_setor_atendimento_p = '0')) 
			and	upper(a.nm_usuario_copia_trans) = upper(nm_usuario_p);
			 
			ds_retorno_w := qt_total_cp_transf_exam_w;
			ds_retorno_exam_w := qt_total_cp_transf_exam_w;
		 
		elsif (ie_opcao_p = '3') then		 
			select	count(a.nm_usuario_cancel) 
			into STRICT	qt_total_cancel_exam_w 
			from  	agenda_paciente a, 
				agenda b 
			where 	a.cd_agenda = b.cd_agenda 
			and	a.cd_agenda = cd_agenda_p 
			and	b.ie_situacao = 'A' 
			and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
			and	b.cd_tipo_agenda = 2 
			and	trunc(a.dt_agendamento) between dt_inicial_p and fim_dia( dt_final_p) 
			and	((b.cd_pessoa_fisica = cd_medico_p) or ( cd_medico_p = '0')) 
			and	((a.cd_setor_atendimento = cd_setor_atendimento_p) or ( cd_setor_atendimento_p = '0')) 
			and	upper(a.nm_usuario_cancel) = upper(nm_usuario_p);
			 
			ds_retorno_w := qt_total_cancel_exam_w;
			ds_retorno_exam_w := qt_total_cancel_exam_w;
			 
		end if;		
	end if;	
end if;
 
if (cd_tipo_agenda_p = '0') then 
	ds_retorno_w := ds_retorno_cons_w + ds_retorno_exam_w;	
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_total_usuario ( cd_tipo_agenda_p text, cd_agenda_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_exame_p bigint, cd_medico_p text, cd_setor_atendimento_p bigint, nm_usuario_p text, ie_opcao_p text) FROM PUBLIC;

