-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION san_obter_se_exame_auxiliar ( nr_seq_exame_lote_p bigint, nr_seq_exame_p bigint, cd_estabelecimento_p bigint, ie_pasta_p text) RETURNS varchar AS $body$
DECLARE



nr_seq_exame_w		bigint;
ds_resultado_w		varchar(100);
qt_valida_w		bigint;
ds_retorno_w		varchar(1);

C01 CURSOR FOR
	SELECT	nr_seq_exame,
		ds_resultado
	from	san_exame_realizado
	where	nr_seq_exame_lote = nr_seq_exame_lote_p
	and	san_obter_destino_exame(nr_seq_exame,3) = 'S';

C02 CURSOR FOR
	SELECT	nr_seq_exame,
		ds_resultado
	from	san_exame_realizado
	where	nr_seq_exame_lote = nr_seq_exame_lote_p
	and	san_obter_destino_exame(nr_seq_exame,0) = 'S';

C03 CURSOR FOR
	SELECT	nr_seq_exame,
		ds_resultado
	from	san_exame_realizado
	where	nr_seq_exame_lote = nr_seq_exame_lote_p
	and	san_obter_destino_exame(nr_seq_exame,6) = 'S';


BEGIN
ds_retorno_w := 'N';


if (nr_seq_exame_lote_p IS NOT NULL AND nr_seq_exame_lote_p::text <> '') and (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '') and (ie_pasta_p = 'S') then


	open C01;
	loop
	fetch C01 into
		nr_seq_exame_w,
		ds_resultado_w;
	EXIT WHEN NOT FOUND or ds_retorno_w = 'S';  /* apply on C01 */
		begin
		select	count(*)
		into STRICT	qt_valida_w
		from	san_exame_adicional
		where	nr_seq_exame 	   = nr_seq_exame_w
		and	ds_resultado 	   = ds_resultado_w
		and	nr_seq_exame_adic  = nr_seq_exame_p
		and	san_obter_destino_exame(nr_seq_exame_adic,3) = 'S'
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_p;

		if (qt_valida_w > 0) then
			ds_retorno_w	:= 'S';
		end if;
		end;
	end loop;
	close C01;

	if (ds_retorno_w = 'N') then
		select	count(*)
		into STRICT	qt_valida_w
		from	san_exame_adicional a
		where	a.nr_seq_exame_adic = nr_seq_exame_p
		and	a.ie_situacao = 'A'
		and	a.cd_estabelecimento = cd_estabelecimento_p
		and	exists (SELECT	1
				from	san_exame_realizado b
				where	b.nr_seq_exame_lote = nr_seq_exame_lote_p
				and	a.nr_seq_exame = b.nr_seq_exame
				and	san_obter_destino_exame(nr_seq_exame,3) = 'S');

		if (qt_valida_w = 0) then
			select	san_obter_destino_exame(nr_seq_exame_p,3)
			into STRICT	ds_retorno_w
			;
		end if;
	end if;

end if;


if (nr_seq_exame_lote_p IS NOT NULL AND nr_seq_exame_lote_p::text <> '') and (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '') and (ie_pasta_p = 'O') then

	open C02;
	loop
	fetch C02 into
		nr_seq_exame_w,
		ds_resultado_w;
	EXIT WHEN NOT FOUND or ds_retorno_w = 'S';  /* apply on C02 */
		begin
		select	count(*)
		into STRICT	qt_valida_w
		from	san_exame_adicional
		where	nr_seq_exame 	   = nr_seq_exame_w
		and	ds_resultado 	   = ds_resultado_w
		and	nr_seq_exame_adic  = nr_seq_exame_p
		and	san_obter_destino_exame(nr_seq_exame_adic,0) = 'S'
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_p;

		if (qt_valida_w > 0) then
			ds_retorno_w	:= 'S';
		end if;
		end;
	end loop;
	close C02;

	if (ds_retorno_w = 'N') then
		select	count(*)
		into STRICT	qt_valida_w
		from	san_exame_adicional a
		where	a.nr_seq_exame_adic = nr_seq_exame_p
		and	a.ie_situacao = 'A'
		and	a.cd_estabelecimento = cd_estabelecimento_p
		and	exists (SELECT	1
				from	san_exame_realizado b
				where	b.nr_seq_exame_lote = nr_seq_exame_lote_p
				and	a.nr_seq_exame = b.nr_seq_exame
				and	san_obter_destino_exame(nr_seq_exame,0) = 'S');

		if (qt_valida_w = 0) then
			select	san_obter_destino_exame(nr_seq_exame_p,0)
			into STRICT	ds_retorno_w
			;
		end if;
	end if;

end if;

if (nr_seq_exame_lote_p IS NOT NULL AND nr_seq_exame_lote_p::text <> '') and (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '') and (ie_pasta_p = 'E') then

	open C03;
	loop
	fetch C03 into
		nr_seq_exame_w,
		ds_resultado_w;
	EXIT WHEN NOT FOUND or ds_retorno_w = 'S';  /* apply on C03 */
		begin
		select	count(*)
		into STRICT	qt_valida_w
		from	san_exame_adicional
		where	nr_seq_exame 	   = nr_seq_exame_w
		and	ds_resultado 	   = ds_resultado_w
		and	nr_seq_exame_adic  = nr_seq_exame_p
		and	san_obter_destino_exame(nr_seq_exame_adic,6) = 'S'
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_p;

		if (qt_valida_w > 0) then
			ds_retorno_w	:= 'S';
		end if;
		end;
	end loop;
	close C03;

	if (ds_retorno_w = 'N') then
		select	count(*)
		into STRICT	qt_valida_w
		from	san_exame_adicional a
		where	a.nr_seq_exame_adic = nr_seq_exame_p
		and	a.ie_situacao = 'A'
		and	a.cd_estabelecimento = cd_estabelecimento_p
		and	exists (SELECT	1
				from	san_exame_realizado b
				where	b.nr_seq_exame_lote = nr_seq_exame_lote_p
				and	a.nr_seq_exame = b.nr_seq_exame
				and	san_obter_destino_exame(nr_seq_exame,6) = 'S');

		if (qt_valida_w = 0) then
			select	san_obter_destino_exame(nr_seq_exame_p,6)
			into STRICT	ds_retorno_w
			;
		end if;
	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION san_obter_se_exame_auxiliar ( nr_seq_exame_lote_p bigint, nr_seq_exame_p bigint, cd_estabelecimento_p bigint, ie_pasta_p text) FROM PUBLIC;

