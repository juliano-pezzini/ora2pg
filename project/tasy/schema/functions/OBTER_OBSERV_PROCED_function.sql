-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_observ_proced ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_tipo_p text) RETURNS varchar AS $body$
DECLARE

 
nr_atendimento_w		bigint;
ie_tipo_atend_w			smallint;
ie_tipo_conv_w			smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_estabelecimento_w		smallint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_proc_interno_w		bigint;
ds_observacao_w			varchar(4000);
ds_orientacao_usuario_w	varchar(4000);

c01 CURSOR FOR 
	SELECT	a.cd_procedimento, 
		a.ie_origem_proced, 
		a.nr_proc_interno, 
		null 
	from	procedimento_rotina a 
	where	coalesce(a.nr_seq_rotina,a.nr_sequencia)		= nr_sequencia_p 
	and	ie_tipo_p		= 1 
	
union
 
	SELECT	coalesce(c.cd_procedimento, a.cd_procedimento), 
		coalesce(c.ie_origem_proced, a.ie_origem_proced), 
		(b.nr_proc_interno)::numeric , 
		a.DS_ORIENTACAO_USUARIO 
	FROM exame_lab_rotina x, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w) = c.ie_origem_proced)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE x.nr_seq_rotina		= nr_sequencia_p and x.nr_seq_exame		= a.nr_seq_exame      and ie_tipo_p		= 0 and not exists (	select	y.cd_procedimento 
				from	prescr_procedimento y 
				where	y.nr_prescricao		= nr_prescricao_p 
				and	y.cd_procedimento	= b.cd_procedimento 
				and	y.ie_origem_proced	= b.ie_origem_proced) and coalesce(a.ie_orientacao, 'N') = 'S' 
	 
union
 
	select	coalesce(c.cd_procedimento, a.cd_procedimento), 
		coalesce(c.ie_origem_proced, a.ie_origem_proced), 
		(b.nr_proc_interno)::numeric , 
		a.DS_ORIENTACAO_USUARIO 
	FROM exame_lab_rotina x, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w) = c.ie_origem_proced)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE x.nr_sequencia		= nr_sequencia_p and x.nr_seq_exame		= a.nr_seq_exame    and ie_tipo_p		= 0   and coalesce(a.ie_orientacao, 'N') = 'S';
				

BEGIN 
 
/* Seleciona os dados da prescrição */
 
select	nr_atendimento, 
	obter_convenio_atendimento(nr_atendimento), 
	obter_categoria_atendimento(nr_atendimento), 
	cd_estabelecimento 
into STRICT	nr_atendimento_w, 
	cd_convenio_w, 
	cd_categoria_w, 
	cd_estabelecimento_w 
from	prescr_medica 
where 	nr_prescricao		= nr_prescricao_p;
 
/* Obtem o tipo do atendimento */
 
select	max(coalesce(ie_tipo_atendimento,'1')) 
into STRICT	ie_tipo_atend_w 
from	atendimento_paciente 
where	nr_atendimento		= nr_atendimento_w;
 
/* Obtem o tipo do convênio */
 
select	coalesce(max(ie_tipo_convenio),0) 
into STRICT	ie_tipo_conv_w 
from	convenio 
where	cd_convenio 		= cd_convenio_w;
 
ds_observacao_w		:= '';
 
open c01;
loop 
fetch c01 into 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	nr_proc_interno_w, 
	ds_orientacao_usuario_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
		 
	if (ds_orientacao_usuario_w IS NOT NULL AND ds_orientacao_usuario_w::text <> '') then 
		ds_observacao_w		:= ds_orientacao_usuario_w;
	elsif (coalesce(ds_observacao_w::text, '') = '') then 
		ds_observacao_w		:= obter_obs_proc_prescr(nr_proc_interno_w, cd_procedimento_w, ie_origem_proced_w);
	end if;
					 
end loop;
close c01;		
 
return ds_observacao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_observ_proced ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_tipo_p text) FROM PUBLIC;

