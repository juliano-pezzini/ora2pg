-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_se_integra_sc as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_se_integra_sc ( nr_solic_compra_p bigint, ie_tipo_integracao_p text default 'W') RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_se_integra_sc_atx ( ' || quote_nullable(nr_solic_compra_p) || ',' || quote_nullable(ie_tipo_integracao_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_se_integra_sc_atx ( nr_solic_compra_p bigint, ie_tipo_integracao_p text default 'W') RETURNS varchar AS $body$
DECLARE
						

/*
T - Integra todos os materiais da SC
N - Nenhum material da SC sera integrado
P - Integra somente alguns materiais da solicitacao
*/
ie_tipo_servico_w           solic_compra.ie_tipo_servico%type;
nr_seq_regra_w              regra_integr_solic_compra.nr_sequencia%type;
cd_material_w               solic_compra_item.cd_material%type;
cd_grupo_material_w         grupo_material.cd_grupo_material%type;
cd_subgrupo_material_w      subgrupo_material.cd_subgrupo_material%type;
cd_classe_material_w        classe_material.cd_classe_material%type;
ie_integra_w                regra_integr_sc_estrut.ie_integra%type := 'N';
ie_integra_item_w           varchar(1) := 'N';
ie_nao_integra_item_w       varchar(1) := 'N';
cd_estabelecimento_w        solic_compra.cd_estabelecimento%type;
ie_padronizado_w            material_estab.ie_padronizado%type;
ie_estoque_w                material_estab.ie_material_estoque%type;
cd_perfil_w                 perfil.cd_perfil%type;
cd_centro_custo_w           solic_compra.cd_centro_custo%type;
nr_prescricao_w             solic_compra.nr_prescricao%type;
ie_envia_integracao_w       solic_compra.ie_envia_integracao%type;

c01 CURSOR FOR
SELECT cd_material
from solic_compra_item
where nr_solic_compra = nr_solic_compra_p;

c02 CURSOR FOR
SELECT coalesce(ie_integra,'S')
from regra_integr_sc_estrut
where nr_seq_regra = nr_seq_regra_w
and coalesce(cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
and coalesce(cd_subgrupo_material, cd_subgrupo_material_w) = cd_subgrupo_material_w
and coalesce(cd_classe_material, cd_classe_material_w) = cd_classe_material_w
and (coalesce(cd_material, cd_material_w) = cd_material_w or cd_material_w = 0)
and ((coalesce(ie_estoque,'T') = 'T') or
    ((coalesce(ie_estoque,'T') = 'S') and (ie_estoque_w = 'S')) or
    ((coalesce(ie_estoque,'T') = 'N') and (ie_estoque_w = 'N')))
and ((coalesce(ie_padronizado,'T') = 'T') or
    ((coalesce(ie_padronizado,'T') = 'S') and (ie_padronizado_w = 'S')) or
    ((coalesce(ie_padronizado,'T') = 'N') and (ie_padronizado_w = 'N')))
and ((coalesce(ie_solic_prescr,'T') = 'T') or
    ((coalesce(ie_solic_prescr,'T') = 'S') and (nr_prescricao_w > 0)) or
    ((coalesce(ie_solic_prescr,'T') = 'N') and (nr_prescricao_w = 0)))
order by coalesce(cd_material, 0),
         coalesce(cd_classe_material, 0),
         coalesce(cd_subgrupo_material, 0),
         coalesce(cd_grupo_material, 0);

c03 CURSOR FOR
SELECT a.nr_sequencia
from regra_integr_solic_compra a
where a.ie_tipo_servico = ie_tipo_servico_w
and ((ie_tipo_integracao_p = 'W' and a.ie_integracao('S','BI')) or (ie_tipo_integracao_p = 'T' and a.ie_integracao = 'TIE'))
and (coalesce(cd_centro_custo, cd_centro_custo_w) = cd_centro_custo_w or coalesce(cd_centro_custo::text, '') = '')
and (cd_perfil = cd_perfil_w or coalesce(cd_perfil::text, '') = '')
and exists( SELECT 1
            from regra_integr_sc_estrut x
            where x.nr_seq_regra = a.nr_sequencia
            and coalesce(x.cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
            and coalesce(x.cd_subgrupo_material, cd_subgrupo_material_w) = cd_subgrupo_material_w
            and coalesce(x.cd_classe_material, cd_classe_material_w) = cd_classe_material_w
            and (coalesce(x.cd_material, cd_material_w) = cd_material_w or cd_material_w = 0)
            and ((coalesce(x.ie_estoque,'T') = 'T') or
                ((coalesce(x.ie_estoque,'T') = 'S') and (ie_estoque_w = 'S')) or
                ((coalesce(x.ie_estoque,'T') = 'N') and (ie_estoque_w = 'N')))
            and ((coalesce(x.ie_padronizado,'T') = 'T') or
                ((coalesce(x.ie_padronizado,'T') = 'S') and (ie_padronizado_w = 'S')) or
                ((coalesce(x.ie_padronizado,'T') = 'N') and (ie_padronizado_w = 'N')))
            and ((coalesce(x.ie_solic_prescr,'T') = 'T') or
                ((coalesce(x.ie_solic_prescr,'T') = 'S') and (nr_prescricao_w > 0)) or
                ((coalesce(x.ie_solic_prescr,'T') = 'N') and (nr_prescricao_w = 0))))
order by coalesce(cd_centro_custo,999999) desc,
         coalesce(cd_perfil,99999) desc;


BEGIN

begin

select coalesce(ie_tipo_servico,'ES'),
       cd_estabelecimento,
       obter_perfil_ativo,
       cd_centro_custo,
       coalesce(nr_prescricao,0),
       coalesce(ie_envia_integracao,'N')
into STRICT ie_tipo_servico_w,
     cd_estabelecimento_w,
     cd_perfil_w,
     cd_centro_custo_w,
     nr_prescricao_w,
     ie_envia_integracao_w
from solic_compra
where nr_solic_compra = nr_solic_compra_p;
exception when no_data_found or too_many_rows then return null;

end;

if (ie_envia_integracao_w = 'S') then
	ie_integra_w := 'T';
else

    open C01;
    loop
    fetch C01 into	
    	cd_material_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */

        begin

        ie_integra_w := 'N';
		
		begin

		select a.cd_grupo_material,
		       a.cd_subgrupo_material,
		       a.cd_classe_material,
		       b.ie_padronizado,
		       b.ie_material_estoque
		into STRICT cd_grupo_material_w,
		     cd_subgrupo_material_w,
		     cd_classe_material_w,
		     ie_padronizado_w,
		     ie_estoque_w
		from estrutura_material_v a,
		     material_estab b
		where a.cd_material = b.cd_material
		and	b.cd_estabelecimento = cd_estabelecimento_w
		and	a.cd_material = cd_material_w;
		exception when no_data_found or too_many_rows then return null;
		
		end;

        open C03;
        loop
        fetch C03 into	
        	nr_seq_regra_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			nr_seq_regra_w := nr_seq_regra_w;
			end;
        end loop;
        close C03;

        if (nr_seq_regra_w > 0) then
        
        	open C02;
        	loop
        	fetch C02 into	
        		ie_integra_w;
        	EXIT WHEN NOT FOUND; /* apply on C02 */
        		begin	
        		ie_integra_w	:= ie_integra_w;
        		end;
        	end loop;
        	close C02;		

			if (ie_integra_w = 'S') then
				ie_integra_item_w := 'S';
			else
				ie_nao_integra_item_w := 'S';
			end if;

        end if;
	
        end;

    end loop;
    close C01;

    if (ie_integra_item_w = 'S' and ie_nao_integra_item_w = 'N') then
	    ie_integra_w := 'T';
    elsif (ie_integra_item_w = 'S' and ie_nao_integra_item_w = 'S') then
	    ie_integra_w := 'P';
    else
	    ie_integra_w := 'N';
    end if;

end if;


if (ie_envia_integracao_w = 'S') then
	ie_integra_w := 'T';
end if;	

return ie_integra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_integra_sc ( nr_solic_compra_p bigint, ie_tipo_integracao_p text default 'W') FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_se_integra_sc_atx ( nr_solic_compra_p bigint, ie_tipo_integracao_p text default 'W') FROM PUBLIC;

