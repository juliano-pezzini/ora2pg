-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_consiste_regra_diaria_uti (nr_interno_conta_p bigint) RETURNS varchar AS $body$
DECLARE


ie_inconsistente_w	varchar(1)	:= 'N';
cd_estabelecimento_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	bigint;
dt_procedimento_w	timestamp;
dt_proced_fim_mes_w	timestamp;
qt_proc_perm_w		bigint;
qt_dias_mes_w		bigint;
qt_proc_diaria_uti_w	bigint;
ds_retorno_w		varchar(1);
			
C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_diaria_uti
	from	sus_regra_diaria_uti_mes
	where	cd_estabelecimento	= cd_estabelecimento_w;

C02 CURSOR FOR
	SELECT	coalesce(sum(qt_procedimento),0),
		establishment_timezone_utils.startofmonth(dt_procedimento)
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_p
	and	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	group by establishment_timezone_utils.startofmonth(dt_procedimento);
	

BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;

open C01;
loop
fetch C01 into	
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_proc_perm_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	open C02;
	loop
	fetch C02 into	
		qt_procedimento_w,
		dt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		dt_proced_fim_mes_w := last_day(dt_procedimento_w);
		
		select	sum(qt_procedimento)
		into STRICT	qt_proc_diaria_uti_w
		from	procedimento_paciente
		where	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	dt_procedimento	between dt_procedimento_w and dt_proced_fim_mes_w
		and	cd_procedimento			= cd_procedimento_w
		and	ie_origem_proced		= ie_origem_proced_w;
		
		select	to_char(last_day(dt_procedimento_w),'dd')
		into STRICT	qt_dias_mes_w
		;
		
		if	(qt_proc_diaria_uti_w > (qt_proc_perm_w * qt_dias_mes_w)) then
			begin
			ie_inconsistente_w	:= 'S';
			end;
		end if;
		
		end;
	end loop;
	close C02;
	
	end;
end loop;
close C01;

ds_retorno_w	:= ie_inconsistente_w;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_consiste_regra_diaria_uti (nr_interno_conta_p bigint) FROM PUBLIC;

