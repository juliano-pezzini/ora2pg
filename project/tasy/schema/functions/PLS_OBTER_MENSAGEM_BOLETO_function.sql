-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_mensagem_boleto ( nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, ie_tipo_mensagem_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS varchar AS $body$
DECLARE

 
ds_mensagem_w			text;
dt_referencia_w			timestamp;
dt_nascimento_w			timestamp;
ie_aniversariante_w		varchar(1)	:= 'N';
ds_observacao_w			varchar(2000);
nr_seq_pagador_w		bigint;
nr_seq_plano_w			bigint;
ie_regulamentacao_w		varchar(1);
pos_fim_macro_w			bigint;
ds_macro_w			varchar(30);
nm_atributo_w			varchar(50);
pos_macro_w			bigint;
ds_resultado_macro_w		varchar(4000);
ds_texto_alterado_w		varchar(4000);
i				bigint := 0;
nr_seq_pagador_fin_w		bigint;
nr_seq_conta_banco_w		bigint;
nr_seq_contrato_w		bigint;
ds_segurados_w			varchar(2000);
ds_valores_pre_w		varchar(2000);
qt_registro_w			bigint := 0;
ie_tipo_estipulante_w		varchar(255);
dt_mesano_referencia_w		timestamp;
nr_seq_classif_itens_w		bigint;
nr_ano_w			pls_pagador_quitacao_anual.nr_ano%type;

ds_retorno_w			varchar(4000);

C01 CURSOR FOR 
	SELECT	a.ds_mensagem, 
		a.qt_meses_portabilidade, 
		a.nr_seq_tipo_portabilidade, 
		a.ie_mensalidade_em_dia 
	from	pls_mensagem_mensalidade a 
	where (dt_mesano_referencia_w between trunc(coalesce(a.dt_inicial,dt_mesano_referencia_w),'dd') and fim_dia(coalesce(a.dt_final,dt_mesano_referencia_w))) 
	and	((a.ie_aniversario		= 'S' and ie_aniversariante_w = 'S') or (a.ie_aniversario = 'N')) 
	and	a.cd_estabelecimento		= cd_estabelecimento_p 
	and	((nr_seq_conta_banco_w		= a.nr_seq_conta_banco and (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') and (a.nr_seq_conta_banco IS NOT NULL AND a.nr_seq_conta_banco::text <> '')) or (coalesce(a.nr_seq_conta_banco::text, '') = '')) 
	and	((nr_seq_classif_itens_w	= a.nr_seq_classif_itens and (nr_seq_classif_itens_w IS NOT NULL AND nr_seq_classif_itens_w::text <> '') and (a.nr_seq_classif_itens IS NOT NULL AND a.nr_seq_classif_itens::text <> '')) or (coalesce(nr_seq_classif_itens::text, '') = '')) 
	and	coalesce(a.ie_regulamentacao,ie_regulamentacao_w)	= ie_regulamentacao_w 
	and	((coalesce(a.ie_tipo_estipulante,'A')	= coalesce(ie_tipo_estipulante_w,coalesce(a.ie_tipo_estipulante,'A'))) or 
		coalesce(a.ie_tipo_estipulante,'A')	= 'A') 
	and (exists (SELECT x.nr_ano 
			from 	pls_pagador_quitacao_anual x 
			where 	x.nr_ano		= (to_char(a.ie_mensalidade_em_dia, 'yyyy'))::numeric  
			and 	x.nr_seq_pagador	= nr_seq_pagador_w 
			and	coalesce(x.nr_seq_mensalidade::text, '') = '') or (coalesce(a.ie_mensalidade_em_dia::text, '') = ''));

C02 CURSOR FOR 
	SELECT	c.dt_nascimento, 
		a.nr_seq_plano 
	from	pessoa_fisica	c, 
		pls_segurado	b, 
		pls_mensalidade_segurado a 
	where	b.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	a.nr_seq_segurado	= b.nr_sequencia 
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_p 
	and	ie_aniversariante_w	= 'N';

BEGIN 
 
 
ie_aniversariante_w	:= 'N';
 
select	trunc(a.dt_referencia,'month'), 
	a.nr_seq_pagador, 
	a.nr_seq_pagador_fin, 
	b.nr_seq_contrato, 
	c.dt_mesano_referencia, 
	b.nr_seq_classif_itens 
into STRICT	dt_referencia_w, 
	nr_seq_pagador_w, 
	nr_seq_pagador_fin_w, 
	nr_seq_contrato_w, 
	dt_mesano_referencia_w, 
	nr_seq_classif_itens_w 
from	pls_mensalidade a, 
	pls_contrato_pagador b, 
	pls_lote_mensalidade c 
where	a.nr_seq_pagador	= b.nr_sequencia 
and	a.nr_seq_lote		= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_mensalidade_p;
 
if (nr_seq_pagador_fin_w IS NOT NULL AND nr_seq_pagador_fin_w::text <> '') then 
	select	nr_seq_conta_banco 
	into STRICT	nr_seq_conta_banco_w 
	from	pls_contrato_pagador_fin 
	where	nr_sequencia	= nr_seq_pagador_fin_w;
end if;
 
if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
	select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END  
	into STRICT	ie_tipo_estipulante_w 
	from	pls_contrato 
	where	nr_sequencia	= nr_seq_contrato_w;
end if;
 
for r_c02_w in C02 loop 
	begin 
	if (coalesce(r_c02_w.dt_nascimento,clock_timestamp()) <> clock_timestamp()) then 
		if	to_char(r_c02_w.dt_nascimento,'mm') = to_char(dt_referencia_w,'mm') then 
			ie_aniversariante_w	:= 'S';
		elsif (ie_aniversariante_w	<> 'S') then 
			ie_aniversariante_w	:= 'N';
		end if;
	end if;
	 
	select	max(ie_regulamentacao) 
	into STRICT	ie_regulamentacao_w 
	from	pls_plano 
	where	nr_sequencia	= r_c02_w.nr_seq_plano;
	end;
end loop;
 
/* Verifica se ha regra de portabilidade */
 
select	count(1) 
into STRICT	qt_registro_w 
from	pls_portab_regra_direito 
where	cd_estabelecimento = cd_estabelecimento_p;
 
for r_c01_w in C01 loop 
	begin	 
	ds_segurados_w 		:= '';
	ds_valores_pre_w	:= '';
	ds_mensagem_w		:= r_c01_w.ds_mensagem || ' ';
	ds_texto_alterado_w	:= ds_mensagem_w;
	 
	if (r_c01_w.qt_meses_portabilidade IS NOT NULL AND r_c01_w.qt_meses_portabilidade::text <> '') then 
		if (qt_registro_w > 0) then 
			/* Verifica se na mensagem quais segurados estarao com portabilidade */
 
			SELECT * FROM pls_obter_se_seg_portabilidade(nr_seq_mensalidade_p, dt_referencia_w, cd_estabelecimento_p, r_c01_w.qt_meses_portabilidade, r_c01_w.nr_seq_tipo_portabilidade, ds_segurados_w, ds_valores_pre_w) INTO STRICT ds_segurados_w, ds_valores_pre_w;
			 
			/* Se não retornar beneficiários, não emite mensagem nenhuma */
 
			if (coalesce(ds_segurados_w::text, '') = '') then 
				ds_mensagem_w	:= null;
			end if;
		else 
			ds_mensagem_w	:= null;
		end if;	
	end if;
	 
	--aaschlote 08/02/2011 OS - 284461 
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
		i := 0;
		WHILE(ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (i < 5) LOOP 
			begin 
			i := i + 1;
			 
			select	replace(replace(ds_mensagem_w,'',' '),chr(13) || chr(10),' ') 
			into STRICT	ds_mensagem_w 
			;
			 
			select	position('@' in ds_mensagem_w) 
			into STRICT	pos_macro_w 
			;
			 
			if (pos_macro_w > 0) then 
				select	substr(ds_mensagem_w,pos_macro_w,length(ds_mensagem_w)) 
				into STRICT	ds_mensagem_w 
				;
				 
				select	position(' ' in ds_mensagem_w) 
				into STRICT	pos_fim_macro_w 
				;
				 
				select	Elimina_Caracteres_Especiais(substr(ds_mensagem_w,1,pos_fim_macro_w -1)) 
				into STRICT	ds_macro_w 
				;
				 
				if ((coalesce(ds_macro_w,null) IS NOT NULL AND (coalesce(ds_macro_w,null))::text <> '')) then 
					begin 
					select nm_atributo 
					into STRICT  nm_atributo_w 
					from  pls_macro_mensalidade 
					where  upper(ds_macro) = upper(ds_macro_w);
					exception 
					when others then 
						nm_atributo_w := null;
					end;
					 
					if ((coalesce(nm_atributo_w,null) IS NOT NULL AND (coalesce(nm_atributo_w,null))::text <> '')) and (upper(ds_macro_w) <> upper('@BENEF_PORTAB')) and (upper(ds_macro_w) <> upper('@BENEF_VAL_PORTAB')) then 
						select	pls_obter_macro_mensalidade(nr_seq_mensalidade_p,nm_atributo_w,ds_macro_w) 
						into STRICT	ds_resultado_macro_w 
						;
						 
						select	replace(ds_texto_alterado_w, ds_macro_w, ds_resultado_macro_w) 
						into STRICT	ds_texto_alterado_w 
						;
						 
					--Tratamento para a portabilidade 
					elsif (upper(nm_atributo_w) = upper('NR_SEQ_MENSALIDADE')) and (upper(ds_macro_w) = upper('@BENEF_PORTAB')) then 
						ds_resultado_macro_w := ds_segurados_w;
						 
						select	replace(ds_texto_alterado_w, ds_macro_w, ds_resultado_macro_w) 
						into STRICT	ds_texto_alterado_w 
						;
						 
						if (coalesce(ds_resultado_macro_w::text, '') = '') then 
							ds_texto_alterado_w := null;
						end if;
					elsif (upper(nm_atributo_w) = upper('NR_SEQ_MENSALIDADE')) and (upper(ds_macro_w) = upper('@BENEF_VAL_PORTAB')) then 
						ds_resultado_macro_w := ds_valores_pre_w;
						 
						select	replace(ds_texto_alterado_w, ds_macro_w, ds_resultado_macro_w) 
						into STRICT	ds_texto_alterado_w 
						;
						 
						if (coalesce(ds_resultado_macro_w::text, '') = '') then 
							ds_texto_alterado_w := null;
						end if;
					end if;
				end if;
				 
				select	substr(ds_mensagem_w,pos_fim_macro_w, length(ds_mensagem_w)) 
				into STRICT	ds_mensagem_w 
				;
			else 
				ds_mensagem_w := '';
			end if;
			 
			end;
		end loop;
		 
		if (r_c01_w.ie_mensalidade_em_dia IS NOT NULL AND r_c01_w.ie_mensalidade_em_dia::text <> '') then 
			update	pls_pagador_quitacao_anual 
			set	nr_seq_mensalidade	= nr_seq_mensalidade_p 
			where	nr_seq_pagador		= nr_seq_pagador_w 
			and	nr_ano			= (to_char(r_c01_w.ie_mensalidade_em_dia,'yyyy'))::numeric;
		end if;
		 
		if (ie_tipo_mensagem_p = 'P') and (ds_segurados_w IS NOT NULL AND ds_segurados_w::text <> '') then 
			ds_retorno_w := ds_texto_alterado_w;
			exit;
		elsif (ie_tipo_mensagem_p = 'Q') and (r_c01_w.ie_mensalidade_em_dia IS NOT NULL AND r_c01_w.ie_mensalidade_em_dia::text <> '') then 
			ds_retorno_w := ds_texto_alterado_w;
			exit;
		elsif (ie_tipo_mensagem_p = 'A') and (coalesce(ds_segurados_w::text, '') = '') and (coalesce(r_c01_w.ie_mensalidade_em_dia::text, '') = '') then 
			 
			ds_retorno_w := ds_texto_alterado_w;
			exit;
		end if;
	end if;
	end;
end loop;
 
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obter_mensagem_boleto ( nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, ie_tipo_mensagem_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

