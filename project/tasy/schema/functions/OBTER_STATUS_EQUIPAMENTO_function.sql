-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_equipamento ( nr_seq_agenda_p bigint, cd_equipamento_p text, ie_codigo_p text) RETURNS varchar AS $body$
DECLARE

					
dt_inicial_w		timestamp;
dt_final_w		timestamp;
qt_equip_man_w		bigint;
qt_equipamento_w	bigint;
qt_equip_agenda_w	bigint;
cd_classif_equip_w	bigint;
qt_tempo_esterilizacao_w	bigint;
qt_equip_agenda_exec_w	bigint;
cd_equipamento_w	bigint;
ie_codigo_w		varchar(15)	:='D';
cd_estabelecimento_w	smallint;
cd_estab_agenda_w	smallint;
ie_status_agenda_w 	agenda_paciente.ie_status_agenda%type;
nr_minuto_duracao_w	agenda_paciente.nr_minuto_duracao%type;


BEGIN

cd_equipamento_w := cd_equipamento_p;
if (coalesce(nr_seq_agenda_p,0) > 0) then

	select	max(a.hr_inicio),
			max(b.cd_estabelecimento),
			max(a.ie_status_agenda),
			max(a.nr_minuto_duracao)
	into STRICT	dt_inicial_w,
			cd_estab_agenda_w,
			ie_status_agenda_w,
			nr_minuto_duracao_w
	from	agenda_paciente a,
			agenda b
	where	nr_sequencia	= nr_seq_agenda_p
	and		a.cd_agenda	= b.cd_agenda;
			
	qt_equip_man_w	:= obter_qt_equip_manutencao(null, cd_equipamento_w,dt_inicial_w);

	select	coalesce(sum(coalesce(qt_compartilhamento,qt_equipamento)) - qt_equip_man_w, 1),
			coalesce(max(cd_classificacao),0)
	into STRICT	qt_equipamento_w,
			cd_classif_equip_w
	from	equipamento
	where	cd_equipamento	= cd_equipamento_w
	and		ie_situacao	= 'A';

	if (qt_equipamento_w = 0) then
		ie_codigo_w := 'M';	
	else
		qt_tempo_esterilizacao_w	:= 0;

		if (cd_classif_equip_w <> 0) then
			select	coalesce(max(qt_tempo_esterelizacao),0)
			into STRICT	qt_tempo_esterilizacao_w
			from	classif_equipamento
			where	nr_sequencia = cd_classif_equip_w;
		end if;
		
		if (ie_status_agenda_w = 'E') then
			dt_final_w := (dt_inicial_w + (qt_tempo_esterilizacao_w / 1440) - (1/86400));
		else
			dt_final_w := (dt_inicial_w + ((nr_minuto_duracao_w + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400));
		end if;

		/* qt_equip_agenda_exec_w - Obter qtde de agendamentos que foram executadas no periodo - neste so e contado o tempo de esterilizacao e nao considera mais o tempo de duracao pois o mesmo ja foi realizado */


		/* qt_equip_agenda_w - Obter qtde de agendamentos que nao foram executados e/ou cancelados no periodo */

		
		select 	max(qt_equip_agenda_exec),
				max(qt_equip_agenda),
				max(cd_estabelecimento)
		into STRICT	qt_equip_agenda_exec_w,
				qt_equip_agenda_w,
				cd_estabelecimento_w
		from (
			SELECT	count(*) 	qt_equip_agenda_exec,
					null 		qt_equip_agenda,
					max(c.cd_estabelecimento) cd_estabelecimento
			from	agenda_pac_equip a,
					agenda_paciente b,
					agenda c
			where	b.nr_sequencia	= a.nr_seq_agenda
			and		b.cd_agenda = c.cd_agenda			
			and		((hr_inicio between dt_inicial_w and dt_final_w) or
					(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
					((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))	
			and		a.cd_equipamento = cd_equipamento_w
			and		ie_status_agenda = 'E'
			and		ie_origem_inf = 'I'
			
union

			SELECT	null		qt_equip_agenda_exec,
					count(*) 	qt_equip_agenda,
					max(c.cd_estabelecimento) cd_estabelecimento
			from	agenda_pac_equip a,
					agenda_paciente b,
					agenda c
			where	b.nr_sequencia	= a.nr_seq_agenda
			and		b.cd_agenda = c.cd_agenda
			and		((hr_inicio between dt_inicial_w and dt_final_w) or  
					(hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
					((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))	
			and		a.cd_equipamento = cd_equipamento_w
			and		ie_status_agenda not in ('C','E')
			and		ie_origem_inf = 'I'
		) alias32;
		
		qt_equip_agenda_w	:= qt_equip_agenda_exec_w + qt_equip_agenda_w+1;

		if (qt_equipamento_w < qt_equip_agenda_w) then
			if (cd_estab_agenda_w <> cd_estabelecimento_w) then	
				ie_codigo_w := 'E';
			else	
				ie_codigo_w := 'I';
			end if;	
		end if;
	end if;	
end if;	

if (ie_codigo_p = 'S') then
	return	ie_codigo_w;
elsif (ie_codigo_w = 'D') then
	return 	wheb_mensagem_pck.get_texto(309380);-- Disponivel
elsif (ie_codigo_w = 'M') then	
	return 	wheb_mensagem_pck.get_texto(309382); -- Manutencao
elsif (ie_codigo_w = 'E') then	
	return 	wheb_mensagem_pck.get_texto(309383); -- Emprestado
elsif (ie_codigo_w = 'I') then	
	return 	wheb_mensagem_pck.get_texto(309381); -- Indisponivel
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_equipamento ( nr_seq_agenda_p bigint, cd_equipamento_p text, ie_codigo_p text) FROM PUBLIC;

