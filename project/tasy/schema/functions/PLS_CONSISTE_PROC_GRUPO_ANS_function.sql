-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_consiste_proc_grupo_ans ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_tipo_atend_p bigint, cd_estabelecimento_p bigint, ie_tipo_guia_p text) RETURNS varchar AS $body$
DECLARE


cd_grupo_proc_w			bigint;
cd_especialidade_w		integer;
cd_area_procedimento_w		integer;
nr_seq_grupo_ans_w		bigint;
ds_retorno_w			varchar(255)	:= '';
qt_reg_desp_regra_w		integer	:= 0;

C01 CURSOR FOR
	SELECT	a.nr_seq_grupo_ans
	from	ans_grupo_desp_proc	c,
		ans_grupo_despesa	b,
		ans_grupo_desp_regra	a
	where	a.nr_seq_grupo_ans	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_grupo_ans
	and	b.ie_situacao		= 'A'
	and	c.ie_liberado		= 'S'
	and (coalesce(a.ie_tipo_guia,ie_tipo_guia_P)	= ie_tipo_guia_p or coalesce(ie_tipo_guia_p::text, '') = '')
	and (coalesce(b.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p or coalesce(cd_estabelecimento_p::text, '') = '')
	and	coalesce(a.nr_seq_tipo_atendimento, coalesce(nr_seq_tipo_atend_p, 0)) = coalesce(nr_seq_tipo_atend_p,0)
	and (coalesce(c.cd_procedimento, cd_procedimento_p) = cd_procedimento_p or coalesce(cd_procedimento_p::text, '') = '')
	and (coalesce(c.ie_origem_proced, ie_origem_proced_p) = ie_origem_proced_p or coalesce(ie_origem_proced_p::text, '') = '')
	and (coalesce(c.cd_grupo_proc, cd_grupo_proc_w) = cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')
	and (coalesce(c.cd_especialidade, cd_especialidade_w) = cd_especialidade_w or coalesce(cd_especialidade_w::text, '') = '')
	and (coalesce(c.cd_area_procedimento, cd_area_procedimento_w) = cd_area_procedimento_w or coalesce(cd_area_procedimento_w::text, '') = '');



BEGIN

begin
select 	cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento
into STRICT	cd_grupo_proc_w,
	cd_especialidade_w,
	cd_area_procedimento_w
from	estrutura_procedimento_v
where	cd_procedimento 	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p
order by coalesce(cd_procedimento,-1),
	coalesce(cd_grupo_proc,-1),
	coalesce(cd_especialidade,-1),
	coalesce(cd_area_procedimento,-1);
exception
	when others then
	cd_grupo_proc_w		:= '';
	cd_especialidade_w	:= '';
	cd_area_procedimento_w	:= '';
end;

open C01;
loop
fetch C01 into
	nr_seq_grupo_ans_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if	((length(ds_retorno_w) + 10) < 255) or (coalesce(ds_retorno_w::text, '') = '') then
		ds_retorno_w	:= ds_retorno_w || nr_seq_grupo_ans_w || '; ';
	end if;
	end;
end loop;
close C01;

select	count(*)
into STRICT	qt_reg_desp_regra_w
from	ans_grupo_desp_proc;

if (qt_reg_desp_regra_w	= 0) then
	ds_retorno_w	:= 'X';
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_consiste_proc_grupo_ans ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_tipo_atend_p bigint, cd_estabelecimento_p bigint, ie_tipo_guia_p text) FROM PUBLIC;

