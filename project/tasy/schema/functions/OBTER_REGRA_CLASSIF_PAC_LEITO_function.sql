-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_classif_pac_leito ( nr_atendimento_p bigint, dt_sinal_vital_p timestamp ) RETURNS varchar AS $body$
DECLARE


	response_w         varchar(1) := 'S';
	nr_seq_classif_pac_leito_w   bigint;
	interval_w     bigint;
	date_w     timestamp;
	date1_w     timestamp;
	date2_w     timestamp;
	date3_w     timestamp;


BEGIN
    if (coalesce(dt_sinal_vital_p::text, '') = '' or coalesce(nr_atendimento_p::text, '') = '') then
        return response_w;
    end if;

    begin
        select nr_seq_classif_pac_leito
        into STRICT nr_seq_classif_pac_leito_w
        from atend_paciente_adic
        where nr_atendimento = nr_atendimento_p;
    exception when others then
        nr_seq_classif_pac_leito_w := null;
    end;

    if (coalesce(nr_seq_classif_pac_leito_w::text, '') = '') then
        begin
            select a.nr_seq_classif_pac_leito
            into STRICT nr_seq_classif_pac_leito_w
            from
                    unidade_atendimento a, (
                    SELECT
                            cd_setor_atendimento, 
                            cd_unidade_basica 
                        from atend_paciente_unidade 
                        where nr_atendimento = nr_atendimento_p 
                            and nr_sequencia = (
                                                SELECT max(nr_sequencia) 
                                                from atend_paciente_unidade 
                                                where nr_atendimento = nr_atendimento_p
                                               )
                    ) b where a.cd_setor_atendimento = b.cd_setor_atendimento 
                          and a.cd_unidade_basica = b.cd_unidade_basica  LIMIT 1;
        exception when others then
            nr_seq_classif_pac_leito_w := null;
        end;
    end if;

    if (coalesce(nr_seq_classif_pac_leito_w::text, '') = '') then --não configurado
        response_w := 'S';
    else
        select qt_tempo_monit
            into STRICT interval_w 
            from classif_pac_leito 
        where nr_sequencia = nr_seq_classif_pac_leito_w;

        if (coalesce(interval_w::text, '') = '') then --não configurado
            response_w := 'S';
        elsif (interval_w = 0 ) then --sempre retornar positivamente
            response_w := 'S';
        else
            begin
                select dt_sinal_vital into STRICT date1_w from atendimento_sinal_vital
                where nr_sequencia = (
                                        SELECT max(nr_sequencia) from atendimento_sinal_vital 
                                        where nr_atendimento = nr_atendimento_p 
                                        and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
                                        and coalesce(dt_inativacao::text, '') = ''
                                     );
            exception when others then --atendimento não possui SV
                date1_w := null;
            end;

            begin
                select dt_monitorizacao into STRICT date2_w from atendimento_monit_resp
                where nr_sequencia = (
                                        SELECT max(nr_sequencia) from atendimento_monit_resp 
                                        where nr_atendimento = nr_atendimento_p 
                                        and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
                                        and coalesce(dt_inativacao::text, '') = ''
                                     );
            exception when others then --atendimento não possui SV
                date2_w := null;
            end;

            begin
            select dt_monitoracao into STRICT date3_w from atend_monit_hemod
            where nr_sequencia = (
                                    SELECT max(nr_sequencia) from atend_monit_hemod
                                    where nr_atendimento = nr_atendimento_p 
                                    and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
                                    and coalesce(dt_inativacao::text, '') = ''
                                 );
            exception when others then --atendimento não possui SV
                date3_w := null;
            end;

            if (coalesce(date1_w::text, '') = '' and coalesce(date2_w::text, '') = '' and coalesce(date3_w::text, '') = '') then
                response_w := 'S';
            else
                with temp as (
                    select date1_w dt
                    
union all

                    select date2_w dt 
                    
union all

                    select date3_w dt 
                ) select max(dt) into STRICT date_w from temp;

                if ((date_w + (interval_w / (24 * 60)) - dt_sinal_vital_p) > 0) then
                    response_w := 'N'; -- A > B
                else
                    response_w := 'S'; -- A <= B
                end if;
            end if;
        end if;
    end if;
    return response_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_classif_pac_leito ( nr_atendimento_p bigint, dt_sinal_vital_p timestamp ) FROM PUBLIC;

