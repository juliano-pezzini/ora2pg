-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_end_pf ( cd_pessoa_fisica_p text, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
qt_endereco_residencial_w		bigint;
qt_endereco_comercial_w		bigint;
ie_tipo_logradouro_w		varchar(1);
ds_logradouro_w			varchar(100);
ds_numero_w			varchar(5);
ds_complemento_w			varchar(40);
ds_bairro_w			varchar(80);
ds_municipio_w			varchar(255);
uf_w				compl_pessoa_fisica.sg_estado%type;
cep_w				varchar(15);
desc_cidade_w			varchar(255);

cd_municipio_ibge_resid_w		varchar(10);
IE_TIPO_ENDERECO_w		varchar(10);
cd_cgc_estipulante_w		varchar(14);


BEGIN 
 
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
	select	count(1) 
	into STRICT	qt_endereco_residencial_w 
	from	compl_pessoa_fisica 
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p 
	and	ie_tipo_complemento	= 1 
	and	(cd_cep IS NOT NULL AND cd_cep::text <> '') 
	and	(ds_endereco IS NOT NULL AND ds_endereco::text <> '') 
	and	(sg_estado IS NOT NULL AND sg_estado::text <> '')  LIMIT 1;
 
	 /* endereço residencial */
 
	if (qt_endereco_residencial_w > 0) then 
		ie_tipo_logradouro_w	:= '2';
		begin 
			select	b.ds_endereco, 
				to_char(b.nr_endereco), 
				b.ds_complemento, 
				b.ds_bairro, 
				b.cd_municipio_ibge, 
				b.sg_estado, 
				b.cd_cep 
			into STRICT	ds_logradouro_w, 
				ds_numero_w, 
				ds_complemento_w, 
				ds_bairro_w, 
				ds_municipio_w, 
				uf_w, 
				cep_w 
			from	pessoa_fisica a, 
				compl_pessoa_fisica b 
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p 
			and	b.ie_tipo_complemento	= 1  LIMIT 1;
		exception 
		when others then 
			ds_logradouro_w		:= '';
			ds_numero_w		:= '';
			ds_complemento_w	:= '';
			ds_bairro_w		:= '';
			ds_municipio_w		:= '';
			uf_w			:= '';
			cep_w			:= '00000000';
		end;
		 
		desc_cidade_w := substr(obter_desc_municipio_ibge_guia(ds_municipio_w),1,255);
		 
		 
	else 
		select	count(1) 
		into STRICT	qt_endereco_comercial_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	ie_tipo_complemento	= 2;
 
		/* endereço comercial */
 
		if (qt_endereco_comercial_w > 0) then 
			ie_tipo_logradouro_w	:= '1';
			begin 
			select	b.ds_endereco, 
				to_char(b.nr_endereco), 
				b.ds_complemento, 
				b.ds_bairro, 
				b.cd_municipio_ibge, 
				b.sg_estado, 
				b.cd_cep 
			into STRICT	ds_logradouro_w, 
				ds_numero_w, 
				ds_complemento_w, 
				ds_bairro_w, 
				ds_municipio_w, 
				uf_w, 
				cep_w 
			from	pessoa_fisica a, 
				compl_pessoa_fisica b 
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p 
			and	b.ie_tipo_complemento	= 2  LIMIT 1;
			exception 
			when others then 
				ds_logradouro_w		:= '';
				ds_numero_w		:= '';
				ds_complemento_w	:= '';
				ds_bairro_w		:= '';
				ds_municipio_w		:= '';
				uf_w			:= '';
				cep_w			:= '00000000';
			end;
			 
			desc_cidade_w := substr(obter_desc_municipio_ibge_guia(ds_municipio_w),1,255);
			 
			cd_municipio_ibge_resid_w	:= substr(obter_compl_pf(cd_pessoa_fisica_p,1,'CDM'),1,10);
			 
			if (coalesce(cd_municipio_ibge_resid_w::text, '') = '') or (cd_municipio_ibge_resid_w = '0') then 
				cd_municipio_ibge_resid_w	:= ds_municipio_w;
			end if;
		end if;
	end if;
end if;
 
if (ie_opcao_p	= 'ED') then 
	return ds_logradouro_w;
elsif (ie_opcao_P	= 'CEP') then 
	return cep_w;
elsif (ie_opcao_p = 'CID') then 
	return desc_cidade_w;
elsif (ie_opcao_p = 'UF') then 
	return uf_w;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_end_pf ( cd_pessoa_fisica_p text, ie_opcao_p text) FROM PUBLIC;

