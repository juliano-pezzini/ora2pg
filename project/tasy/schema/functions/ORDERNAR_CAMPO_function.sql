-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ordernar_campo ( param_p text) RETURNS varchar AS $body$
DECLARE


qt_param_w	bigint := 0;

ds_operacao_w	varchar(4000);
ds_operacao_ww	varchar(4000);
ds_operacao_ret varchar(4000);

param_132_ww	varchar(4000);
param_133_ww	varchar(4000);
param_134_ww	varchar(4000);
param_135_ww	varchar(4000);


C02 CURSOR FOR
SELECT	ds_operacao_nf
from 	operacao_nota
where	cd_operacao_nf in (param_132_ww);

C03 CURSOR FOR
SELECT	ds_natureza_operacao ds
from	natureza_operacao
where	cd_natureza_operacao in (param_133_ww);

C04 CURSOR FOR
SELECT	a.ds_modelo_nf ds
from	modelo_nota_fiscal a
where	a.nr_Sequencia in (param_134_ww);

C05 CURSOR FOR
SELECT 	ds_condicao_pagamento ds
from  	condicao_pagamento
where	cd_condicao_pagamento in (param_135_ww);


BEGIN
param_132_ww := Obter_Param_Usuario(913, 132, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, param_132_ww);
param_133_ww := Obter_Param_Usuario(913, 133, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, param_133_ww);
param_134_ww := Obter_Param_Usuario(913, 134, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, param_134_ww);
param_135_ww := Obter_Param_Usuario(913, 135, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, param_135_ww);

if (param_p = 132) then
	open C02;
	loop
	fetch C02 into
		ds_operacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		qt_param_w := qt_param_w + 1;
		if (coalesce(ds_operacao_ww::text, '') = '') then
			ds_operacao_ww := ds_operacao_ww || ds_operacao_w || ',';
		else
			ds_operacao_ww := ds_operacao_ww || ',' || ds_operacao_w;
		end if;
		end;
	end loop;
	close C02;

	if (qt_param_w > 1) then
		ds_operacao_ret := replace(ds_operacao_ww,',,',',');
	end if;

	return ds_operacao_ret;

elsif (param_p = 133) then
	open C03;
	loop
	fetch C03 into
		ds_operacao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		qt_param_w := qt_param_w + 1;
		if (coalesce(ds_operacao_ww::text, '') = '') then
			ds_operacao_ww := ds_operacao_ww || ds_operacao_w || ',';
		else
			ds_operacao_ww := ds_operacao_ww || ',' || ds_operacao_w;
		end if;
		end;
	end loop;
	close C03;

	if (qt_param_w > 1) then
		ds_operacao_ret := replace(ds_operacao_ww,',,',',');
	end if;

	return ds_operacao_ret;

elsif (param_p = 134) then
	open C04;
	loop
	fetch C04 into
		ds_operacao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		qt_param_w := qt_param_w + 1;
		if (coalesce(ds_operacao_ww::text, '') = '') then
			ds_operacao_ww := ds_operacao_ww || ds_operacao_w || ',';
		else
			ds_operacao_ww := ds_operacao_ww || ',' || ds_operacao_w;
		end if;
		end;
	end loop;
	close C04;

	if (qt_param_w > 1) then
		ds_operacao_ret := replace(ds_operacao_ww,',,',',');
	end if;

	return ds_operacao_ret;

elsif (param_p = 135) then
	open C05;
	loop
	fetch C05 into
		ds_operacao_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		qt_param_w := qt_param_w + 1;
		if (coalesce(ds_operacao_ww::text, '') = '') then
			ds_operacao_ww := ds_operacao_ww || ds_operacao_w || ',';
		else
			ds_operacao_ww := ds_operacao_ww || ',' || ds_operacao_w;
		end if;
		end;
	end loop;
	close C05;

	if (qt_param_w > 1) then
		ds_operacao_ret := replace(ds_operacao_ww,',,',',');
	end if;

	return ds_operacao_ret;

end if;

end ordernar_campo;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ordernar_campo ( param_p text) FROM PUBLIC;

