-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_upp ( dt_inicio_p timestamp, dt_final_p timestamp, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

/* 
Total Pacientes Dia			'PD' 
Total Avaliação UPP   Adulto		'TA' 
Total Avaliação braden Adulto		'TB' 
Total Avaliação UPP  Pediatria	'TP' 
*/
			 
ds_retorno_w	bigint;
	

BEGIN 
 
 
if (ie_opcao_p = 'PD') then 
 
	select	count(distinct nr_atendimento) 
	into STRICT	ds_retorno_w 
	from	resumo_atendimento_paciente_v 
	where	trunc(dt_entrada) <= trunc(dt_inicio_p) 
	and	coalesce(dt_alta,fim_dia(dt_inicio_p)) >= fim_dia(dt_inicio_p);
 
elsif (ie_opcao_p = 'TP') then 
	 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(distinct nr_atendimento) 
		into STRICT	ds_retorno_w 
		from  	atend_escala_braden_q 
		where	coalesce(dt_inativacao::text, '') = '' 
		and	trunc(dt_avaliacao) = trunc(dt_inicio_p);
	else 
		select 	count(distinct nr_atendimento) 
		into STRICT	ds_retorno_w 
		from  	atend_escala_braden_q 
		where	coalesce(dt_inativacao::text, '') = '' 
		and	trunc(dt_avaliacao) between trunc(dt_inicio_p) and trunc(dt_final_p);
	end if;
	 
elsif (ie_opcao_p = 'TA') then 
	 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(distinct d.nr_atendimento) 
		into STRICT	ds_retorno_w		 
		FROM atend_escala_braden d, qua_evento_paciente b
LEFT OUTER JOIN cur_ferida c ON (b.nr_sequencia = c.nr_seq_evento)
WHERE c.ie_admitido_ferida = 'N'  and coalesce(c.dt_inativacao::text, '') = '' and b.nr_atendimento = d.nr_atendimento and d.nr_sequencia = ( SELECT max(e.nr_sequencia) 
									from	 atend_escala_braden e 
									where e.nr_atendimento = d.nr_atendimento 
									and	 trunc(e.dt_avaliacao)<= trunc(c.dt_atualizacao)) and trunc(c.dt_atualizacao) >= trunc(d.dt_avaliacao) and trunc(b.dt_evento) = trunc(dt_inicio_p);		
		 
	else 
		select 	count(distinct d.nr_atendimento) 
		into STRICT	ds_retorno_w		 
		FROM atend_escala_braden d, qua_evento_paciente b
LEFT OUTER JOIN cur_ferida c ON (b.nr_sequencia = c.nr_seq_evento)
WHERE c.ie_admitido_ferida = 'N'  and coalesce(c.dt_inativacao::text, '') = '' and b.nr_atendimento = d.nr_atendimento and d.nr_sequencia = ( SELECT max(e.nr_sequencia) 
									from	 atend_escala_braden e 
									where e.nr_atendimento = d.nr_atendimento 
									and	 trunc(e.dt_avaliacao)<= trunc(c.dt_atualizacao)) and trunc(c.dt_atualizacao) >= trunc(d.dt_avaliacao) and trunc(b.dt_evento) between trunc(dt_inicio_p) and trunc(dt_final_p);
	end if;
	 
elsif (ie_opcao_p = 'TB') then 
	 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(distinct d.nr_atendimento) 
		into STRICT	ds_retorno_w		 
		from  	atend_escala_braden d  
		where 	coalesce(d.dt_inativacao::text, '') = '' 
		and		obter_se_classif_braden(d.nr_sequencia,'DR') = 'S' 
		and		trunc(d.dt_avaliacao) = trunc(dt_inicio_p);		
		 
	else 
		select 	count(distinct d.nr_atendimento) 
		into STRICT	ds_retorno_w		 
		from  	atend_escala_braden d	  
		where  coalesce(d.dt_inativacao::text, '') = '' 
		and		obter_se_classif_braden(d.nr_sequencia,'DR') = 'S' 
		and		trunc(d.dt_avaliacao) between trunc(dt_inicio_p) and trunc(dt_final_p);
	end if;
 
else 
 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(distinct d.nr_atendimento) 
		into STRICT	ds_retorno_w		 
		from  	atend_escala_braden d  
		where 	coalesce(d.dt_inativacao::text, '') = '' 
		and		obter_resultado_braden(qt_ponto) = coalesce(ie_opcao_p,'XPT') 
		and		trunc(d.dt_avaliacao) = trunc(dt_inicio_p);		
		 
	else 
		select 	count(distinct d.nr_atendimento) 
		into STRICT	ds_retorno_w		 
		from  	atend_escala_braden d	  
		where  coalesce(d.dt_inativacao::text, '') = '' 
		and		obter_resultado_braden(qt_ponto) = coalesce(ie_opcao_p,'XPT')	 
		and		trunc(d.dt_avaliacao) between trunc(dt_inicio_p) and trunc(dt_final_p);
	end if;
	 
end if;
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_upp ( dt_inicio_p timestamp, dt_final_p timestamp, ie_opcao_p text) FROM PUBLIC;

