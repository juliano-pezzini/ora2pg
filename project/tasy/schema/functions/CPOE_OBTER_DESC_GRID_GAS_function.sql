-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_desc_grid_gas ( ds_gas_p text, qt_gasoterapia_p bigint, ds_unidade_medida_p text, ds_respiracao_p text, ds_intervalo_p text, dt_lib_suspensao_p timestamp default null, dt_suspensao_p timestamp default null, ie_administracao_p text default null, ie_baixado_por_alta_p cpoe_recomendacao.ie_baixado_por_alta%type default null, dt_alta_medico_p cpoe_recomendacao.dt_alta_medico%type default null, ds_horarios_p cpoe_gasoterapia.ds_horarios%type default null, ie_respiracao_p text default null, ie_disp_resp_esp_p text default null, cd_modalidade_vent_p text default null, ie_adep_p text default 'N', dt_fim_grid_p timestamp default null, ie_revalidacao_p text default 'N', nr_seq_cpoe_p cpoe_gasoterapia.nr_sequencia%type default null) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(500);
ds_bold_w		varchar(200);
ds_tempo_adm_grid_w			varchar(100);
ds_retorno_tag_w varchar(1000);
ds_class_tag_w   varchar(5);
ie_needs_ackn_interface_w 	varchar(2);
ie_confirm_ackn_interface_w	varchar(2);
rule_quantity_w		integer;

	function bold( ds_valor_p text) return text is	
	;
BEGIN
		return '<strong>' ||ds_valor_p||'</strong>';	
	end;


    function dose_unidade_medida return varchar2 is
        qt_gaso_w           varchar2(50);
    begin
        --Colocar '0' antes da virgula
        qt_gaso_w := qt_gasoterapia_p;
        if (substr(qt_gasoterapia_p,1,1) = ',') then
            qt_gaso_w	:= '0' || qt_gasoterapia_p;
            qt_gaso_w	:= replace(qt_gaso_w,'.',',');
        end if;
		return ' ' || qt_gaso_w || ' ';
	end;
	
	function cpoe_add_span_adic_info(ds_informacao_p	varchar2, ds_style_adic_p varchar2) return  varchar2 is
	ds_span_w	varchar2(2000);
	begin
		if ((trim(both ds_informacao_p) IS NOT NULL AND (trim(both ds_informacao_p))::text <> '')) then
			begin
			ds_span_w	:= '<span class=''material-adic-info '|| ds_style_adic_p ||'''> '||ds_informacao_p||'</span>';
			end;
		end if;
		return ds_span_w;

	end;
	
	function obter_se_item_futuro(nr_seq_cpoe_p cpoe_gasoterapia.nr_sequencia%type, ie_revalidacao_p varchar2)  return varchar2 is
	begin
		if (coalesce(ie_revalidacao_p,'N') = 'S') then
			select max(CPOE_obter_prox_adm_grid_ang( nr_sequencia, 'G',					
							nm_usuario, nr_atendimento, 			
							ie_administracao, cd_intervalo,			
							coalesce(dt_prox_geracao, clock_timestamp()),			
							dt_inicio, dt_fim,						
							'prescr_gasoterapia',  'nr_seq_gas_cpoe',  	
							'prescr_gasoterapia_hor', 'nr_seq_gasoterapia', null, dt_fim_grid_p, obter_funcao_ativa, ie_revalidacao_p)) ds_tempo_adm_grid
			 into STRICT ds_tempo_adm_grid_w
			 from cpoe_gasoterapia			
			 where nr_sequencia = nr_seq_cpoe_p
			 and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 		 
			 and coalesce(dt_lib_suspensao::text, '') = '';
			
			if (ds_tempo_adm_grid_w IS NOT NULL AND ds_tempo_adm_grid_w::text <> '') then
				return cpoe_add_span_adic_info(ds_tempo_adm_grid_w, 'cpoe_color_yellow cpoe_text_legend');
			end if;
		end if;
		
        return null;
    end;
	
	function get_order_interface(	ie_tipo_item_p in varchar2,
									nr_sequencia_p in number) return varchar2 is
	
	begin
		ie_needs_ackn_interface_w := cpoe_integracao_count(ie_tipo_item_p, nr_sequencia_p, 'BTN');
		ie_confirm_ackn_interface_w := cpoe_integracao_count(ie_tipo_item_p, nr_sequencia_p, 'TAG');
		
		if (ie_adep_p = 'S') then
			ds_class_tag_w := 'adep';
		else
			ds_class_tag_w := 'gpt';
		end if;
		
		ds_retorno_tag_w := '</div><div class="legend-cell-status-text-' || ds_class_tag_w ||'" style="cursor: default; flex-wrap: wrap;">
                <div class="legend-cell-content-tag-' || ds_class_tag_w ||'" style="cursor: default;">';

                        
    
		if (ie_adep_p = 'S') then
			ds_retorno_tag_w := ds_retorno_tag_w || '<div class="legend-cell-tag-adep" style="background-color: #FFE9AB; cursor: default; margin-top: 4px;"</div>';			
		else
			ds_retorno_tag_w := ds_retorno_tag_w || '<div class="legend-cell-tag-gpt" style="background-color: #FFE9AB; cursor: default; margin-top: 4px;" </div>';
		end if;
		
		if (ie_needs_ackn_interface_w = 'S') then
			ds_retorno_tag_w :=  ds_retorno_tag_w || obter_desc_expressao_idioma(1000214, null, wheb_usuario_pck.get_nr_seq_idioma)
			|| ' </div>
              </div>
          </div><div style="display:none">;';
		elsif (ie_confirm_ackn_interface_w = 'S') then
			ds_retorno_tag_w :=  ds_retorno_tag_w || obter_desc_expressao_idioma(1012943, null, wheb_usuario_pck.get_nr_seq_idioma)
			|| ' </div>
              </div>
          </div><div style="display:none">;';
    else
      ds_retorno_tag_w := null;
		end if;

		return ds_retorno_tag_w;
	end;
	
begin

if (ds_gas_p IS NOT NULL AND ds_gas_p::text <> '') then
	begin
	if (ie_respiracao_p IS NOT NULL AND ie_respiracao_p::text <> '') then
		begin
		if (ie_respiracao_p = 'ESPONT') then
			begin
			ds_retorno_w := substr(bold(ds_gas_p)
				|| cpoe_add_span(substr(obter_valor_dominio(1612, ie_disp_resp_esp_p),1,200)), 1, 500);
			end;
		else
			begin
			ds_bold_w := substr(ds_respiracao_p, 1, 200);
			if (cd_modalidade_vent_p IS NOT NULL AND cd_modalidade_vent_p::text <> '') then
				begin
				ds_bold_w := substr(ds_bold_w || ' ' || obter_desc_mod_ventilatoria(cd_modalidade_vent_p),1,200);
				end;
			end if;
			ds_retorno_w := substr(bold(ds_bold_w) || ' ' || ds_gas_p, 1, 500);
			end;
		end if;
		
		ds_retorno_w :=  substr(ds_retorno_w
			|| cpoe_add_span(dose_unidade_medida())
			|| cpoe_add_span(ds_unidade_medida_p)
			|| cpoe_add_span(ds_intervalo_p)
			|| cpoe_add_span(ds_horarios_p)
			|| cpoe_obter_sigla_tipo_adm(ie_administracao_p), 1, 500);
		end;
	else
		begin
		ds_retorno_w := bold(ds_gas_p)
		||cpoe_add_span(dose_unidade_medida())
		||cpoe_add_span(ds_unidade_medida_p)
		||cpoe_add_span(ds_respiracao_p)
		||cpoe_add_span(ds_intervalo_p)
		||cpoe_add_span(ds_horarios_p)
		||cpoe_obter_sigla_tipo_adm(ie_administracao_p);
		end;
	end if;
	end;
end if;

if 	((dt_lib_suspensao_p IS NOT NULL AND dt_lib_suspensao_p::text <> '') and (dt_suspensao_p IS NOT NULL AND dt_suspensao_p::text <> '')         and (dt_suspensao_p <=clock_timestamp())           and (ie_adep_p <> 'S'))                  or
	((coalesce(dt_lib_suspensao_p::text, '') = '')        and (dt_fim_grid_p <= clock_timestamp())           and 
	ie_adep_p = 'N')
	then
	ds_retorno_w	:= '<del> '||ds_retorno_w|| '</del>';
end if;

ds_retorno_w := substr(ds_retorno_w || obter_se_item_futuro(nr_seq_cpoe_p, ie_revalidacao_p),1,500);

select	count(*)
into STRICT	rule_quantity_w
from	cpoe_regra_ator LIMIT 1;
		
if (rule_quantity_w > 0 and (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '')) then
	ds_retorno_w := substr(ds_retorno_w || get_order_interface('G',nr_seq_cpoe_p),1,500);
end if;

return ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_desc_grid_gas ( ds_gas_p text, qt_gasoterapia_p bigint, ds_unidade_medida_p text, ds_respiracao_p text, ds_intervalo_p text, dt_lib_suspensao_p timestamp default null, dt_suspensao_p timestamp default null, ie_administracao_p text default null, ie_baixado_por_alta_p cpoe_recomendacao.ie_baixado_por_alta%type default null, dt_alta_medico_p cpoe_recomendacao.dt_alta_medico%type default null, ds_horarios_p cpoe_gasoterapia.ds_horarios%type default null, ie_respiracao_p text default null, ie_disp_resp_esp_p text default null, cd_modalidade_vent_p text default null, ie_adep_p text default 'N', dt_fim_grid_p timestamp default null, ie_revalidacao_p text default 'N', nr_seq_cpoe_p cpoe_gasoterapia.nr_sequencia%type default null) FROM PUBLIC;

