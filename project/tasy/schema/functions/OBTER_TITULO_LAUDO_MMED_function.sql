-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_titulo_laudo_mmed (ds_lista_exames_p text) RETURNS varchar AS $body$
DECLARE


ds_lista_w				varchar(2000);
qt_existe_virgula_w		bigint;
tam_lista_w				bigint;
ie_pos_virgula_w		bigint;
nr_seq_proced_w			bigint;
ds_exames_w				varchar(4000);
ds_procedimento_w		varchar(255);
nr_seq_interno_w		bigint;
nr_prescricao_w			bigint;
nr_sequencia_prescricao_w	 bigint;
nr_seq_proc_interno_prescr_w bigint;
cd_procedimento_prescr_w	 bigint;
ie_origem_proced_prescr_w	 bigint;



BEGIN


ds_lista_w := ds_lista_exames_p;
	
select	position(',' in ds_lista_w)
into STRICT	qt_existe_virgula_w
;

if (qt_existe_virgula_w = 0)  then
	ds_lista_w := ds_lista_w || ',';
end if;

if (ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') then
	begin
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '')  loop
		begin
		tam_lista_w		:= length(ds_lista_w);
		ie_pos_virgula_w		:= position(',' in ds_lista_w);
	
		if (ie_pos_virgula_w <> 0) then
			nr_seq_interno_w		:= (substr(ds_lista_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_w				:= substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;		
		
		if (obtain_user_locale(wheb_usuario_pck.get_nm_usuario) in ('de_DE', 'de_AT')) then
		
			select	max(NR_SEQ_PROC_INTERNO),
					max(cd_procedimento),
					max(ie_origem_proced)
			into STRICT	nr_seq_proc_interno_prescr_w,
					cd_procedimento_prescr_w,
					ie_origem_proced_prescr_w
			from	prescr_procedimento a
			where	a.nr_seq_interno = nr_seq_interno_w;
			
			select	substr(coalesce(obter_desc_proc_interno(nr_seq_proc_interno_prescr_w), obter_desc_procedimento(cd_procedimento_prescr_w, ie_origem_proced_prescr_w)), 1, 255)
			into STRICT	ds_procedimento_w
			;
			
		
		else
		
			select	max(a.nr_prescricao),
					max(a.nr_sequencia)
			into STRICT	nr_prescricao_w,
					nr_sequencia_prescricao_w
			from	prescr_procedimento a
			where	a.nr_seq_interno = nr_seq_interno_w;		
			
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_proced_w
			from	procedimento_paciente
			where	nr_prescricao = nr_prescricao_w
			and		nr_sequencia_prescricao = nr_sequencia_prescricao_w;			
			
			select	substr(coalesce(obter_desc_proc_interno(a.nr_seq_proc_interno), obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced)), 1, 255)
			into STRICT	ds_procedimento_w
			from	procedimento_paciente a
			where	a.nr_sequencia = nr_seq_proced_w;
			
		end if;
			
		
		if (coalesce(length(ds_exames_w),0) = 0) then
			
			ds_exames_w := 	ds_procedimento_w;
		else
			
			ds_exames_w := 	ds_exames_w || ' + ' || ds_procedimento_w;
			
		end if;
		
		end;
	end loop;
	end;
end if;

return	ds_exames_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_titulo_laudo_mmed (ds_lista_exames_p text) FROM PUBLIC;

