-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_info_ptu_compl_linha (nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, ds_complemento_p pls_info_ptu_compl_linha.ds_complemento%type) RETURNS varchar AS $body$
DECLARE


ds_complemento_w		varchar(4000)	:= '';
qt_macro_w			integer;
nr_seq_conta_cobr_w		ptu_nota_cobranca.nr_seq_conta%type;
ds_indicacao_clinica_w		pls_conta.ds_indicacao_clinica%type;
nr_seq_guia_w			pls_conta.nr_seq_guia%type;
ds_observacao_w			varchar(5000)	:= '';
ds_justificativa_w		pls_lote_anexo_guias_aut.ds_justificativa%type;
ds_especif_material_w		pls_conta_proc.ds_especif_material%type;
ds_observacao_conta_w		pls_conta.ds_observacao%type;

C01 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		ds_observacao_conta_pc	pls_conta.ds_observacao%type) FOR
	SELECT	distinct trim(both ds_observacao) ds_observacao
	from	pls_conta_observacao_a500
	where	nr_seq_conta = nr_seq_conta_pc
	and	trim(both ds_observacao) <> trim(both coalesce(ds_observacao_conta_pc, 'X'));

BEGIN
if (ds_complemento_p IS NOT NULL AND ds_complemento_p::text <> '') then
	ds_complemento_w	:= ds_complemento_p;

	-- VERIFICA SE HÁ ALGUMAS DAS MACROS @DS_INDICACAO_CLINICA ou @DS_JUSTIFICATIVA ou @DS_OBSERVACAO NO TEXTO
	select	count(1)
	into STRICT	qt_macro_w
	
	where	((ds_complemento_w like '%@DS_INDICACAO_CLINICA%') or (ds_complemento_w like '%@DS_JUSTIFICATIVA%') or (ds_complemento_w like '%@DS_OBSERVACAO%') or (ds_complemento_w like '%@DS_ESPECIF_MATERIAL%') or (ds_complemento_w like '%@SEM_INDICACAO_CLINICA%') or (ds_complemento_w like '%@SEM_JUSTIFICATIVA%') or (ds_complemento_w like '%@SEM_OBSERVACAO%') or (ds_complemento_w like '%@SEM_ESPECIF_MATERIAL%'));

	if (coalesce(qt_macro_w,0) > 0) then

		select	max(nr_seq_conta)
		into STRICT	nr_seq_conta_cobr_w
		from	ptu_nota_cobranca
		where	nr_sequencia	= nr_seq_cobranca_p;

		select	max(ds_indicacao_clinica),
			max(nr_seq_guia),
			substr(max(ds_observacao),1,500)
		into STRICT	ds_indicacao_clinica_w,
			nr_seq_guia_w,
			ds_observacao_conta_w
		from	pls_conta
		where	nr_sequencia	= nr_seq_conta_cobr_w;
		
		ds_observacao_w	:= ds_observacao_conta_w;
		
		for r_c01_w in c01( nr_seq_conta_cobr_w, ds_observacao_conta_w ) loop
			ds_observacao_w := ds_observacao_w || ' ' || r_c01_w.ds_observacao;
		end loop;
		
		ds_observacao_w	:= substr(ds_observacao_w, 1, 500);
		
		if (coalesce(ds_indicacao_clinica_w::text, '') = '') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
			select	substr(max(ds_indicacao_clinica),1,500)
			into STRICT	ds_indicacao_clinica_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_w;
		end if;

		select	max(ds_justificativa)
		into STRICT	ds_justificativa_w
		from (SELECT	ds_justificativa
			from	pls_conta_proc
			where	nr_seq_conta	= nr_seq_conta_cobr_w
			
union all

			SELECT	ds_justificativa
			from	pls_conta_mat
			where	nr_seq_conta	= nr_seq_conta_cobr_w) alias1;
			
		if (coalesce(ds_justificativa_w::text, '') = '') then
			select	substr(max(ds_especificacao),1,500)
			into STRICT	ds_justificativa_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_guia	= nr_seq_guia_w;
		end if;
		
		select	max(ds_especif_material)
		into STRICT	ds_especif_material_w
		from (SELECT	ds_especif_material
			from	pls_conta_proc
			where	nr_seq_conta	= nr_seq_conta_cobr_w
			
union all

			SELECT	ds_especif_material
			from	pls_conta_mat
			where	nr_seq_conta	= nr_seq_conta_cobr_w) alias1;
			
		if (coalesce(ds_especif_material_w::text, '') = '') then
			select	substr(max(ds_especificacao),1,500)
			into STRICT	ds_especif_material_w
			from	pls_lote_anexo_guias_aut
			where	nr_seq_guia	= nr_seq_guia_w;
		end if;

		if ((trim(both ds_indicacao_clinica_w) IS NOT NULL AND (trim(both ds_indicacao_clinica_w))::text <> '')) then
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_INDICACAO_CLINICA', ds_indicacao_clinica_w),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_INDICACAO_CLINICA', ''),1,4000);
		else
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_INDICACAO_CLINICA', ''),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_INDICACAO_CLINICA', 'SEM INDICACAO CLINICA'),1,4000);
		end if;
		
		if ((trim(both ds_justificativa_w) IS NOT NULL AND (trim(both ds_justificativa_w))::text <> '')) then
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_JUSTIFICATIVA', ds_justificativa_w),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_JUSTIFICATIVA', ''),1,4000);
		else	
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_JUSTIFICATIVA', ''),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_JUSTIFICATIVA', 'SEM JUSTIFICATIVA'),1,4000);
		end if;
		
		if ((trim(both ds_observacao_w) IS NOT NULL AND (trim(both ds_observacao_w))::text <> '')) then
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_OBSERVACAO', ds_observacao_w),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_OBSERVACAO', ''),1,4000);
		else
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_OBSERVACAO', ''),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_OBSERVACAO', 'SEM OBSERVACAO'),1,4000);
		end if;
		
		if ((trim(both ds_especif_material_w) IS NOT NULL AND (trim(both ds_especif_material_w))::text <> '')) then
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_ESPECIF_MATERIAL', ds_especif_material_w),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_ESPECIF_MATERIAL', ''),1,4000);
		else
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@DS_ESPECIF_MATERIAL', ''),1,4000);
			ds_complemento_w	:= substr(replace_macro(ds_complemento_w,'@SEM_ESPECIF_MATERIAL', 'SEM ESPECIFICAO MATERIAL'),1,4000);
		end if;
		
		--ds_complemento_w	:= substr(ds_complemento_w, 1, 100);
	end if;
end if;

return	substr(ptu_somente_caracter_permitido(ds_complemento_w, 'ANS'), 1, 500);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_info_ptu_compl_linha (nr_seq_cobranca_p ptu_nota_cobranca.nr_sequencia%type, ds_complemento_p pls_info_ptu_compl_linha.ds_complemento%type) FROM PUBLIC;

