-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_data_geracao_sip ( nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type, ds_comando pls_sip_nv_tempo_geracao.ds_comando%type, ie_opcao_p text) RETURNS timestamp AS $body$
DECLARE


/* ie_opcao_p
	I	-	Data de início
	F	- 	Data de fim
	T	- 	Tempo de geração
*/
dt_retorno_w	timestamp;
sql_w		varchar(1000);
campo_sql_w	varchar(100);
filtro_sql_w	varchar(500);


BEGIN
	dt_retorno_w := null;
	campo_sql_w := null;
	filtro_sql_w := null;
	sql_w := null;

	-- se for a data de início
	if (ie_opcao_p = 'I') then
		if (coalesce(ds_comando::text, '') = '') then
			campo_sql_w := 'min(dt_inicio)';
		else
			campo_sql_w := 'dt_inicio';
		end if;
	-- se for a data de fim
	elsif (ie_opcao_p = 'F') then
		if (coalesce(ds_comando::text, '') = '') then
			campo_sql_w := 'max(dt_fim)';
		else
			campo_sql_w := 'dt_fim';
		end if;
	-- se for para buscar a diferença entre as datas
	elsif (ie_opcao_p = 'T') then
		if (coalesce(ds_comando::text, '') = '') then
			campo_sql_w := 'max(dt_fim) - min(dt_inicio)';
		else
			campo_sql_w := 'dt_fim - dt_inicio';
		end if;
	end if;

	if (ds_comando IS NOT NULL AND ds_comando::text <> '') then
		filtro_sql_w := 'and ds_comando = :ds_comando';
	end if;

	if (campo_sql_w IS NOT NULL AND campo_sql_w::text <> '') then
		sql_w := 'select ' || campo_sql_w || ' from pls_sip_nv_tempo_geracao where nr_seq_lote = :nr_seq_lote ' || filtro_sql_w;
	end if;

	if (sql_w IS NOT NULL AND sql_w::text <> '') then

		if (ds_comando IS NOT NULL AND ds_comando::text <> '') then
			EXECUTE sql_w into STRICT dt_retorno_w using nr_seq_lote_sip_p, ds_comando;
		else
			EXECUTE sql_w into STRICT dt_retorno_w using nr_seq_lote_sip_p;
		end if;

	end if;

	return dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_data_geracao_sip ( nr_seq_lote_sip_p pls_lote_sip.nr_sequencia%type, ds_comando pls_sip_nv_tempo_geracao.ds_comando%type, ie_opcao_p text) FROM PUBLIC;

