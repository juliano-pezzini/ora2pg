-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_se_exibe_proced as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_se_exibe_proced ( nr_prescricao_p bigint, nr_seq_proced_p bigint, ie_tipo_proced_p text, ie_tipo_proc_int_p text) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_se_exibe_proced_atx ( ' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(nr_seq_proced_p) || ',' || quote_nullable(ie_tipo_proced_p) || ',' || quote_nullable(ie_tipo_proc_int_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_se_exibe_proced_atx ( nr_prescricao_p bigint, nr_seq_proced_p bigint, ie_tipo_proced_p text, ie_tipo_proc_int_p text) RETURNS varchar AS $body$
DECLARE


vl_result_w	varchar(1) := 'N';
qt_existe_w	bigint  := 0;
BEGIN

if (ie_tipo_proced_p = ie_tipo_proc_int_p) then
	vl_result_w	:= 'S';
else
	begin
	if (ie_tipo_proc_int_p = 'O') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	coalesce(nr_seq_solic_sangue::text, '') = ''
		and	((coalesce(nr_seq_proc_interno::text, '') = '') or (Obter_tipo_proc_interno(nr_seq_proc_interno) = 'O'));

	elsif (ie_tipo_proc_int_p = 'AP') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'AP';

	elsif (ie_tipo_proc_int_p = 'G') then /* Gases */
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'G';

	elsif (ie_tipo_proc_int_p = 'BS') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'BS';

	elsif (ie_tipo_proc_int_p = 'BSHE') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento a,
				san_derivado b
		where	a.nr_prescricao	= nr_prescricao_p
		and	a.nr_sequencia	= nr_seq_proced_p
		and	(a.nr_seq_solic_sangue IS NOT NULL AND a.nr_seq_solic_sangue::text <> '')
		and	(a.nr_seq_derivado IS NOT NULL AND a.nr_seq_derivado::text <> '')
		and a.nr_seq_derivado = b.nr_sequencia
		and	coalesce(b.ie_proced_hemoterapico,'N') = 'N';

	elsif (ie_tipo_proc_int_p = 'BSST') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
		and	(nr_seq_exame_sangue IS NOT NULL AND nr_seq_exame_sangue::text <> '');

	elsif (ie_tipo_proc_int_p = 'APH') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'APH';

	elsif (ie_tipo_proc_int_p = 'APC') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'APC';

	elsif (ie_tipo_proc_int_p = 'AT') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'AT';

	elsif (ie_tipo_proc_int_p = 'IVC') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_seq_proced_p
		and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'IVC';

	elsif (ie_tipo_proc_int_p = 'PH') then
		select 	count(*)
		into STRICT 	qt_existe_w
		from 	prescr_procedimento a,
			san_derivado b
		where	a.nr_prescricao	= nr_prescricao_p
		and	a.nr_sequencia	= nr_seq_proced_p
		and	(a.nr_seq_proc_interno IS NOT NULL AND a.nr_seq_proc_interno::text <> '')
		and	a.ie_tipo_proced	in ('BS', 'AT', 'ST')
		and	((coalesce(a.nr_seq_derivado::text, '') = '') or
			((a.nr_seq_derivado = b.nr_sequencia) and (coalesce(b.ie_proced_hemoterapico, 'N') = 'S')));

	elsif (ie_tipo_proc_int_p = 'ST') then
		select	count(*)
		into STRICT	qt_existe_w
		from 	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_proced_p
		and		(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
		and		Obter_tipo_proc_interno(nr_seq_proc_interno) = 'ST';

	end if;

	if (qt_existe_w > 0) then
		vl_result_w	:= 'S';
	end if;
	end;
end if;

return	vl_result_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_exibe_proced ( nr_prescricao_p bigint, nr_seq_proced_p bigint, ie_tipo_proced_p text, ie_tipo_proc_int_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_se_exibe_proced_atx ( nr_prescricao_p bigint, nr_seq_proced_p bigint, ie_tipo_proced_p text, ie_tipo_proc_int_p text) FROM PUBLIC;

