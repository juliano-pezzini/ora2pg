-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_valida_matricula_cesp (cd_matricula_p text) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: verificar se a matricula informada da CESP é válida  conforme validação da function.

-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [X] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Valores de retorno:
MV - Matrirula válida
MI - Matricula inválida

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_tamanho_parametro_w  smallint;
vl_multiplicador_w      smallint;
vl_soma_w               smallint;
vl_digito_w             smallint;

vl_ultimo_digito_w	smallint;
vl_ret_w		bigint := null;
cd_matricula_w		varchar(255);

BEGIN

if (cd_matricula_p IS NOT NULL AND cd_matricula_p::text <> '') then

	begin

	vl_ultimo_digito_w := substr(cd_matricula_p,length(cd_matricula_p),1);
	cd_matricula_w :=  substr(cd_matricula_p,0,length(cd_matricula_p)-1);

	vl_soma_w := 0;
	vl_tamanho_parametro_w := length(cd_matricula_w);
	vl_multiplicador_w := 2;

	for x in 1..vl_tamanho_parametro_w loop
		vl_soma_w := vl_soma_w + ((substr(cd_matricula_w,vl_tamanho_parametro_w-x+1,1) * vl_multiplicador_w)::numeric );
		vl_multiplicador_w := vl_multiplicador_w + 1;
		if (vl_multiplicador_w = 12) then
			vl_multiplicador_w := 2;
		end if;
	end loop;

	if (substr(cd_matricula_w,12,2) = '00') then
		vl_ret_w := 0;
	else
		vl_digito_w := mod(vl_soma_w, 11);
		if  ( (vl_digito_w = 0) or (vl_digito_w = 1) ) then
			vl_ret_w := 0;
		else
			vl_ret_w := 11 - vl_digito_w;
		end if;
	end if;

	exception
	when others then
		return 'MI';
	end;

	if ((vl_ret_w IS NOT NULL AND vl_ret_w::text <> '') and vl_ret_w = vl_ultimo_digito_w) then
		return 'MV';
	end if;
end if;

return 'MI';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_valida_matricula_cesp (cd_matricula_p text) FROM PUBLIC;

