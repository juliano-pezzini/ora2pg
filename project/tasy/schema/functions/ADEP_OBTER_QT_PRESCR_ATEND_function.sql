-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION adep_obter_qt_prescr_atend ( nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w				varchar(255);
ds_proc_w				varchar(255);
nm_curto_w				varchar(03);
qt_item_w				bigint;
qt_amostra_w				bigint;
qt_exec_w				bigint;
ds_virgula_w				varchar(02);
qt_proc_w				bigint := 0;
dt_referencia_w				timestamp;

c01 CURSOR FOR
SELECT	coalesce(nm_curto,'out'),
	sum(CASE WHEN coalesce(nr_seq_exame::text, '') = '' THEN  -1  ELSE CASE WHEN coalesce(ie_amostra,'N')='S' THEN 0  ELSE 1 END  END ),
	sum(CASE WHEN b.cd_motivo_baixa=0 THEN 0  ELSE qt_procedimento END ) qt_exec,
	count(*)
FROM prescr_medica a, prescr_procedimento b
LEFT OUTER JOIN setor_atendimento c ON (b.cd_setor_atendimento = c.cd_setor_atendimento)
WHERE a.nr_prescricao		= b.nr_prescricao and coalesce(b.nr_seq_origem::text, '') = '' and a.nr_atendimento	= nr_atendimento_p and a.dt_prescricao		> dt_referencia_w and exists (	select	1
			from	prescr_proc_hor x
			where	x.nr_prescricao	= a.nr_prescricao
			and	x.nr_seq_procedimento	= b.nr_sequencia
			and	coalesce(x.dt_fim_horario::text, '') = ''
			and	coalesce(x.dt_suspensao::text, '') = '')  and (coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '') and b.ie_suspenso		= 'N' group by coalesce(nm_curto,'out');



BEGIN

ds_proc_w				:= '';
ds_virgula_w				:= '';
dt_referencia_w				:= clock_timestamp() - interval '2 days';

open c01;
loop
fetch c01 into
	nm_curto_w,
	qt_amostra_w,
	qt_exec_w,
	qt_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	ds_proc_w		:= ds_proc_w || ds_virgula_w || qt_item_w || nm_curto_w;
	if (qt_amostra_w > -1) then
		ds_proc_w	:= ds_proc_w || '(' || qt_amostra_w || '-' || qt_exec_w ||') ';
	else
		ds_proc_w	:= ds_proc_w || '(' || qt_exec_w ||') ';
	end if;
	ds_virgula_w		:= ', ';
end loop;
close c01;

select	count(b.cd_procedimento)
into STRICT	qt_proc_w
from	prescr_procedimento b,
	prescr_medica a
where	a.nr_prescricao		= b.nr_prescricao
and	coalesce(b.nr_seq_origem::text, '') = ''
and	a.nr_atendimento	= nr_atendimento_p
and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')
and	b.cd_motivo_baixa	= 0
and	b.ie_suspenso		= 'N'
and	not exists (	SELECT	1
			from	prescr_proc_hor x
			where	x.nr_prescricao	= a.nr_prescricao
			and	x.nr_seq_procedimento	= b.nr_sequencia
			and	coalesce(x.dt_fim_horario::text, '') = ''
			and	coalesce(x.dt_suspensao::text, '') = '')
and	a.dt_prescricao		> dt_referencia_w
and	substr(obter_se_proc_enfermagem_pa(b.cd_procedimento,b.ie_origem_proced),1,1) = 'S';

ds_retorno_w	:= ds_proc_w;
if (qt_proc_w > 0) then
	ds_retorno_w	:= ds_retorno_w ||' Enf('||to_char(qt_proc_w)||')';
end if;

RETURN ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION adep_obter_qt_prescr_atend ( nr_atendimento_p bigint) FROM PUBLIC;

