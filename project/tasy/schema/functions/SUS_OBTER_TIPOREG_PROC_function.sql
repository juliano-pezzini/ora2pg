-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_tiporeg_proc ( cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_retorno_p text, ie_tipo_proc_p bigint) RETURNS varchar AS $body$
DECLARE



/* IE_TIPO_RETORNO_P
	- C codigo do registro;
	- D descricao do registro;
*/


/* IE_TIPO_PROC_P
	- 0 TODOS
	- 1 BPA
	- 2 AIH
	- 3 APAC
	- 4 RAAS
	- 11 BPA Consolidado
	- 12 BPA Individualizado
	- 13 AIH Prncipal
	- 14 AIH Especial
	- 15 AIH Secundario 
	- 16 APAC Principal
	- 17 APAC Secundario
	- 18 RAAS Atencao Domiciliar
	- 19 RAAS Atencao Psicossocial
*/


/* ESSA FUNCAO E UTILIZADA NO DICIONARIO DE DADOS NA TABELA PROCEDIMENTO_PACIENTE */

cd_registro_w		smallint;
ds_retorno_w		varchar(50);
qt_regra_bpa_w		bigint;
qt_hab_bpa_w		bigint;
qt_serv_bpa_w		bigint;
cd_estab_usuario_w	integer := 0;
ie_tipo_proc_w		bigint;



BEGIN

ie_tipo_proc_w	:= ie_tipo_proc_p;

begin
cd_estab_usuario_w	:= coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
exception
when others then
	cd_estab_usuario_w := 0;
end;

if (ie_tipo_proc_w in (1,11,12)) and (Sus_Obter_Se_Detalhe_Proc(cd_procedimento_p,ie_origem_proced_p,'020') > 0) then
	begin
	
	select	count(1)
	into STRICT	qt_regra_bpa_w
	from	sus_procedimento a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_p
	and	exists (SELECT	1
			from	sus_procedimento_registro x
			where	x.cd_procedimento	= a.cd_procedimento
			and	x.ie_origem_proced	= a.ie_origem_proced
			and	x.cd_registro 		= 1  LIMIT 1)
	and	exists (select	1
			from	sus_procedimento_registro x
			where	x.cd_procedimento	= a.cd_procedimento
			and	x.ie_origem_proced	= a.ie_origem_proced
			and	x.cd_registro 		= 2  LIMIT 1)  LIMIT 1;
			
	if (qt_regra_bpa_w > 0) then
		begin		
		
		select	count(1)
		into STRICT	qt_hab_bpa_w
		from	sus_habilitacao_hospital
		where	cd_estabelecimento = cd_estab_usuario_w
		and	cd_habilitacao in (403,404,405)  LIMIT 1;
		
		select 	count(1)
		into STRICT	qt_serv_bpa_w
		from	sus_serv_classif_hosp x,
			sus_servico_hospital y
		where	x.nr_seq_serv_classif = 6761
		and	y.nr_seq_servico = 1351
		and	x.nr_seq_serv_hosp = y.nr_sequencia  LIMIT 1;
		
		if (qt_hab_bpa_w > 0) and (qt_serv_bpa_w > 0) then
			begin
			if (ie_tipo_proc_w in (1,12)) then
				cd_registro_w := 2;				
			else
				cd_registro_w := 0;
			end if;
			end;
		else
			begin
			if (ie_tipo_proc_w in (1,11)) then
				cd_registro_w := 1;				
			else
				cd_registro_w := 0;
			end if;
			end;
		end if;
		
		ie_tipo_proc_w := 99;
		
		end;
	end if;
	
	end;
end if;

if (ie_tipo_proc_w in (1,11,12)) and (coalesce(Sus_Obter_Se_Detalhe_Proc(cd_procedimento_p,ie_origem_proced_p,'020'),0) = 0) and (coalesce(sus_obter_se_proc_bpa_duplo(cd_procedimento_p,ie_origem_proced_p),'N') = 'S') then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_proc_registro_bpa
	where	cd_procedimento = cd_procedimento_p
	and	ie_origem_proced = ie_origem_proced_p
	and	coalesce(cd_estabelecimento,cd_estab_usuario_w) = cd_estab_usuario_w;
	exception
	when others then
		cd_registro_w := 0;
	end;
	
	if (coalesce(cd_registro_w,0) = 0) then
		begin
		
		if (ie_tipo_proc_w  = 1) then
			select	coalesce(max(cd_registro),0)
			into STRICT	cd_registro_w
			from	sus_procedimento_registro
			where	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	cd_registro		in (1,2);			
		elsif (ie_tipo_proc_w	= 11) then
			begin
			
			begin
			select	cd_registro
			into STRICT	cd_registro_w
			from	sus_procedimento_registro
			where	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	cd_registro		= 1  LIMIT 1;			
			exception
			when others then
				cd_registro_w := 0;
			end;
			
			end;
		elsif (ie_tipo_proc_w	= 12) then
			begin
			
			begin
			select	cd_registro
			into STRICT	cd_registro_w
			from	sus_procedimento_registro
			where	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	cd_registro		= 2  LIMIT 1;			
			exception
			when others then
				cd_registro_w := 0;
			end;
			
			end;
		end if;	
		
		end;
	end if;		
	
	ie_tipo_proc_w := 99;
	
	end;
end if;

if (ie_tipo_proc_w	= 0) then
	select	coalesce(max(cd_registro),0)
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;
elsif (ie_tipo_proc_w	= 1) then
	select	coalesce(max(cd_registro),0)
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro	in (1,2);
elsif (ie_tipo_proc_w	= 2) then
	select	coalesce(max(cd_registro),0)
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro	in (3,4,5);
elsif (ie_tipo_proc_w	= 3) then
	select	coalesce(max(cd_registro),0)
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro	in (6,7);
elsif (ie_tipo_proc_w	= 4) then
	select	coalesce(max(cd_registro),0)
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro	in (8,9);
elsif (ie_tipo_proc_w	= 11) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 1  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;
	end;
	
	end;
elsif (ie_tipo_proc_w	= 12) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 2  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;		
	end;
	
	end;
elsif (ie_tipo_proc_w	= 13) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 3  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;		
	end;	
	
	end;
elsif (ie_tipo_proc_w	= 14) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 4  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;				
	end;
	
	end;
elsif (ie_tipo_proc_w	= 15) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 5  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;		
	end;
	
	end;
elsif (ie_tipo_proc_w	= 16) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 6  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;
	end;
	
	end;
elsif (ie_tipo_proc_w	= 17) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 7  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;
	end;
	
	end;
elsif (ie_tipo_proc_w	= 18) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 8  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;
	end;
	
	end;
elsif (ie_tipo_proc_w	= 19) then
	begin
	
	begin
	select	cd_registro
	into STRICT	cd_registro_w
	from	sus_procedimento_registro
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	cd_registro		= 9  LIMIT 1;	
	exception
	when others then
		cd_registro_w := 0;		
	end;
	
	end;
end if;

if (ie_tipo_retorno_p	= 'D') then
	select	coalesce(max(ds_registro),'')
	into STRICT	ds_retorno_w
	from	sus_registro
	where	cd_registro	= cd_registro_w;
elsif (ie_tipo_retorno_p	= 'C') then
	ds_retorno_w		:= cd_registro_w;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_tiporeg_proc ( cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_retorno_p text, ie_tipo_proc_p bigint) FROM PUBLIC;

