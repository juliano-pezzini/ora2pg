-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION substituir_macro_texto (ds_macro_p text, nm_atributo_p text, vl_atributo_p text) RETURNS varchar AS $body$
DECLARE

 
ds_resultado_w			varchar(2000) := '';
qt_idade_w				varchar(20);
dt_nascimento_w			timestamp;
ds_pronome_w				varchar(20);
ds_pronome_art_w			varchar(20);
nm_paciente_w				varchar(80);
nm_prim_nome_w			varchar(80);
nm_sobrenome_w			varchar(80);
ds_endereco_w				varchar(100);
dt_sistema_w				timestamp;
ie_artigo_w				varchar(01);
cd_cid_w				varchar(10);
ds_sexo_w				varchar(15);
nm_mae_w			varchar(100);
nm_pai_w				varchar(100);
ds_idade_w			varchar(15);
ds_periodo_w			varchar(50);
ds_macro_w			varchar(50);


BEGIN 
 
ds_macro_w := ds_macro_p;
 
if (nm_atributo_p		= 'NR_SEQ_CLIENTE') then 
	begin 
	if (ds_macro_w	= '@CID') then 
		begin 
	 
		select	max(a.cd_doenca_cid) 
		into STRICT	ds_resultado_w 
		from	med_pac_cid a 
		where	a.nr_seq_cliente	= vl_atributo_p 
		and	a.dt_diagnostico	= 
				(SELECT	max(x.dt_diagnostico) 
				from	med_pac_cid x 
				where	x.nr_seq_cliente	= vl_atributo_p);
 
		end;
	end if;
	if (ds_macro_w	= '@DIAGNOSTICO') then 
		begin 
		select	ds_diagnostico 
		into STRICT		ds_resultado_w 
		from		med_pac_diagnostico 
		where 	nr_seq_cliente	= vl_atributo_p;
		end;
	end if;
	if (ds_macro_w	= '@MEDICO') then 
		begin 
		select	substr(obter_nome_pf(cd_medico),1,120) ds_medico 
		into STRICT	ds_resultado_w 
		from	med_cliente 
		where	nr_sequencia	= vl_atributo_p;
		end;
	end if;
	if (ds_macro_w	= '@CONVENIO') then 
		begin 
		select	substr(obter_nome_convenio(cd_convenio),1,100) ds_convenio 
		into STRICT	ds_resultado_w 
		from	med_cliente 
		where	nr_sequencia	= vl_atributo_p;
		end;
	end if;
	end;
elsif (nm_atributo_p		= 'CD_PESSOA_FISICA') then 
	begin 
	select	substr(OBTER_NOME_PF(CD_PESSOA_FISICA),1,80), 
		dt_nascimento, 
		substr(obter_idade(dt_nascimento, clock_timestamp(), 'D'),1,20), 
		substr(obter_artigo_pf(cd_pessoa_fisica),1,1), 
		substr(obter_pronome_pf(cd_pessoa_fisica, 'N'),1,20), 
		substr(obter_pronome_pf(cd_pessoa_fisica, 'S'),1,20), 
		substr(obter_nome_sobrenome_pessoa(cd_pessoa_fisica, 'P'),1,80), 
		substr(obter_nome_sobrenome_pessoa(cd_pessoa_fisica, 'S'),1,80), 
		substr(obter_compl_pf(cd_pessoa_fisica, 1, 'EC'),1,100), 
		substr(obter_sexo_pf(cd_pessoa_fisica,'D'),1,15), 
		substr(coalesce(obter_compl_pf(cd_pessoa_fisica,4,'N'),wheb_mensagem_pck.get_texto(293923, null)),1,100), -- Não informado 
		substr(coalesce(obter_compl_pf(cd_pessoa_fisica,5,'N'),wheb_mensagem_pck.get_texto(293923, null)),1,100), -- Não informado 
		substr(obter_idade(dt_nascimento,clock_timestamp(),'S'),1,15) 
	into STRICT	nm_paciente_w, 
		dt_nascimento_w, 
		qt_idade_w, 
		ie_artigo_w, 
		ds_pronome_w, 
		ds_pronome_art_w, 
		nm_prim_nome_w, 
		nm_sobrenome_w, 
		ds_endereco_w, 
		ds_sexo_w, 
		nm_pai_w, 
		nm_mae_w, 
		ds_idade_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica	= vl_atributo_p;
 
	if (ds_macro_w	= '@NOME') then 
		ds_resultado_w	:= nm_paciente_w;
	elsif (ds_macro_w	= '@ENDERECO') then 
		ds_resultado_w	:= ds_endereco_w;
	elsif (ds_macro_w	= '@IDADE') then 
		ds_resultado_w	:= qt_idade_w;
	elsif (ds_macro_w	= '@PRONOME') then 
		ds_resultado_w	:= ds_pronome_w;
	elsif (ds_macro_w = '@ARTIGO_PRONOME') then 
		ds_resultado_w	:= ds_pronome_art_w;
	elsif (ds_macro_w	= '@NASCIMENTO') then 
		ds_resultado_w	:= to_char(dt_nascimento_w, 'dd/mm/yyyy');
	elsif (ds_macro_w	= '@PRIMEIRO_NOME') then 
		ds_resultado_w	:= nm_prim_nome_w;
	elsif (ds_macro_w	= '@SOBRENOME') then 
		ds_resultado_w	:= nm_sobrenome_w;
	elsif (ds_macro_w	= '@ARTIGO') then 
		ds_resultado_w	:= ie_artigo_w;
	elsif (ds_macro_w	= '@SEXO') then 
		ds_resultado_w	:= ds_sexo_w;
	elsif (ds_macro_w	= '@PAI') then 
		ds_resultado_w	:= nm_pai_w;
	elsif (ds_macro_w	= '@MAE') then 
		ds_resultado_w	:= nm_mae_w;
	elsif (ds_macro_w	= '@AMD') then 
		ds_resultado_w	:= ds_idade_w;
	end if;
	end;
elsif (nm_atributo_p		= 'SISTEMA') then 
	begin 
	select	clock_timestamp() 
	into STRICT	dt_sistema_w 
	;
 
	if (ds_macro_w	= '@HORA_DATA') then 
		ds_resultado_w	:= TO_CHAR(dt_sistema_w, 'dd/mm/yyyy hh24:mi');
	elsif (ds_macro_w	= '@DATA') then 
		ds_resultado_w	:= to_char(dt_sistema_w, 'dd/mm/yyyy');
	elsif (ds_macro_w	= '@DATAEXT') then 
		ds_resultado_w	:= obter_data_extenso(dt_sistema_w, 0);
	elsif (ds_macro_w	= '@TURNO') then 
		begin		 
		ds_periodo_w	:= to_char(dt_sistema_w, 'hh24');
		 
		if (ds_periodo_w <= 12) then 
			ds_resultado_w	:= lower(wheb_mensagem_pck.get_texto(307213, null)); -- matutino 
		elsif (ds_periodo_w > 12) then
			ds_resultado_w	:= lower(wheb_mensagem_pck.get_texto(307214, null)); -- vespertino 
		end if;
		 
		end;
	end if;
 
	end;
end if;
 
return	ds_resultado_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION substituir_macro_texto (ds_macro_p text, nm_atributo_p text, vl_atributo_p text) FROM PUBLIC;

