-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_inconsist_nfse_regra (nr_seq_nota_fiscal_p bigint, ie_tipo_nota_p text) RETURNS varchar AS $body$
DECLARE


nr_inconsistencia_w	bigint;
ds_retorno_w		varchar(10);
cd_pessoa_fisica_w      	varchar(10);
cd_cgc_w                	varchar(14);
nr_sequencia_w          	bigint;
nr_cep_tomador_w        	varchar(15);
nr_ddd_tomador_w        	varchar(40);
nr_telefone_w           	varchar(8);
cd_mun_w                	varchar(8);
cd_item_lista_serv_w	varchar(20);
cd_tributacao_mun_w	varchar(20);
ds_endereco_tomador_w	varchar(255);
ds_email_tomador_w	varchar(255);
contador_w              	bigint := 0;
qt_registro_regra_w		bigint := 0;
cd_operacao_nf_w		smallint;
nr_cpf_w			varchar(11);
nr_cpf_resp_w		varchar(11);
ie_status_envio_w		varchar(2);
ie_tipo_nota_w		varchar(1);
ie_nota_entrada_w		varchar(1);
ds_existe_transp_w		varchar(1) := 'S';
nr_danfe_referencia_w	varchar(255);
sg_estado_w		pessoa_juridica.sg_estado%type;
ds_endereco_adic_w	varchar(255);
nr_endereco_adic_w	bigint;
ds_complemento_adic_w 	varchar(255);
ds_bairro_adic_w		varchar(60);
sg_uf_adic_w		varchar(2);
cd_cep_adic_w		varchar(10);
cd_municipio_ibge_adic_w	bigint;
nr_telefone_adic_w		varchar(10);
ie_tomador_estrangeiro_w	varchar(1);
nr_ddd_telefone_adic_w	pessoa_juridica.nr_ddd_telefone%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_empresa_w		empresa.cd_empresa%type;
ie_campo_consistir_w	regra_consistencia_nfe.ie_campo_consistir%type;
dt_emissao_w			nota_fiscal.dt_emissao%type;


	
C01 CURSOR FOR
	SELECT	coalesce(ie_campo_consistir,0)
	from   	regra_consistencia_nfe
	where	ie_tipo_nota = ie_tipo_nota_w
	and	coalesce(cd_emp_exclusiva, cd_empresa_w) = cd_empresa_w
	and	coalesce(cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w;
	
C03 CURSOR FOR
SELECT  cd_pessoa_fisica,
	cd_cgc,
	nr_sequencia,
	substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'),1,15) nr_cep_tomador,
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'DDT'),1,40) nr_ddd_tomador,
	substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'T')), 1, 8) nr_telefone,
	substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'),1,8) cd_mun,
	substr(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O'),a.cd_estabelecimento), 'GR'),1,20) cd_item_lista_serv,--------------
	substr(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O'),a.cd_estabelecimento), 'CD'),1,20) cd_tributacao_mun,----------
	substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'EN'), 1, 255) ds_endereco,
	substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'),1,11) nr_cpf,
	ie_status_envio,	
	substr(obter_compl_pf(cd_pessoa_fisica,3,'C'),1,11) nr_cpf_resp,
	a.cd_operacao_nf,
	substr(nfe_obter_dados_transportadora(nr_sequencia,'EX'),1,1) ds_existe_transp,
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'UF'),1,4),--
	nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'EN') ds_endereco_adic,
	nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'NR') nr_endereco_adic,
	substr(nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'UF'),1,2) sg_us_adic,
	substr(nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'B'),1,60) ds_bairro_adic,
	substr(nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'),1,10) cd_cep_adic,
	substr(nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc,'CDMDV'),1,10) cd_municipio_ibge_adic,
	substr(nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc,'T'),1,10) nr_telefone_adic,
	substr(nfse_obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc,'DDT'),1,3) nr_ddd_telefone_adic,
	cd_estabelecimento,
	obter_empresa_estab(cd_estabelecimento) cd_empresa,
	coalesce(substr(obter_se_pf_pj_estrangeiro(cd_pessoa_fisica,cd_cgc),1,1),'N'),
	substr(CASE WHEN coalesce(nr_seq_mensalidade::text, '') = '' THEN 				coalesce(CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  CASE WHEN coalesce(nfse_obter_compl_pf(cd_pessoa_fisica,'M')::text, '') = '' THEN obter_dados_pf_pj(cd_pessoa_fisica, null, 'M')  ELSE nfse_obter_compl_pf(cd_pessoa_fisica,'M') END   ELSE obter_dados_pf_pj_estab(cd_estabelecimento, null, cd_cgc, 'M') END ,'')  ELSE coalesce(nfseops_obter_pf_pj_estab(cd_estabelecimento,cd_pessoa_fisica, cd_cgc, nr_seq_mensalidade,'M'),'') END ,1,255) ds_email,
	a.dt_emissao
from    	nota_fiscal a
where   	a.nr_sequencia = nr_seq_nota_fiscal_p;


BEGIN

select	count(*)
into STRICT	qt_registro_regra_w
from	regra_consistencia_nfe
where	ie_tipo_nota = ie_tipo_nota_p;

if	((nr_seq_nota_fiscal_p <> 0) or (nr_seq_nota_fiscal_p IS NOT NULL AND nr_seq_nota_fiscal_p::text <> '')) then
        open C03;
        loop
        fetch C03 into
                cd_pessoa_fisica_w,
                cd_cgc_w,
                nr_sequencia_w,
                nr_cep_tomador_w,
                nr_ddd_tomador_w,
                nr_telefone_w,
                cd_mun_w,
		cd_item_lista_serv_w,
		cd_tributacao_mun_w,
		ds_endereco_tomador_w,
		nr_cpf_w,
		ie_status_envio_w,
		nr_cpf_resp_w,
		cd_operacao_nf_w,
		ds_existe_transp_w,
		sg_estado_w,
		ds_endereco_adic_w,
		nr_endereco_adic_w,
		sg_uf_adic_w,
		ds_bairro_adic_w,
		cd_cep_adic_w,
		cd_municipio_ibge_adic_w,
		nr_telefone_adic_w,
		nr_ddd_telefone_adic_w,
		cd_estabelecimento_w,
		cd_empresa_w,
		ie_tomador_estrangeiro_w,
		ds_email_tomador_w,
		dt_emissao_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */

        if (coalesce(ie_status_envio_w::text, '') = '') then
		
		if (qt_registro_regra_w > 0) then
			begin
		
			select	CASE WHEN ie_nf_eletronica='V' THEN 1 WHEN ie_nf_eletronica='S' THEN 2  ELSE 0 END
			into STRICT	ie_tipo_nota_w
			from	operacao_nota
			where	cd_operacao_nf = cd_operacao_nf_w;
		
			open C01;
			loop
			fetch C01 into
			ie_campo_consistir_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 3) and (coalesce(nr_cep_tomador_w::text, '') = '') and (ie_tomador_estrangeiro_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;
		
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 4) and (coalesce(nr_DDD_Tomador_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 5) and (coalesce(nr_Telefone_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 6) and (coalesce(cd_MUN_w::text, '') = '') and (ie_tomador_estrangeiro_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 9) and (length(nr_cep_tomador_w) > 8) and (ie_tomador_estrangeiro_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;

				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 7) and (coalesce(cd_item_lista_serv_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 8) and (coalesce(cd_tributacao_mun_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;	
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 10) and (coalesce(ds_endereco_tomador_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;	
				
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 12) and (coalesce(nr_cpf_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tomador_estrangeiro_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;		
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 13) and (ds_existe_transp_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;			
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 15) and (coalesce(nr_cpf_resp_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tomador_estrangeiro_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;				
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 16) and
					((coalesce(nr_cpf_resp_w::text, '') = '') and (coalesce(nr_cpf_w::text, '') = '')) and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tomador_estrangeiro_w = 'N') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 17) and (coalesce(sg_estado_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 18) and (coalesce(ds_endereco_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 19) and (coalesce(nr_endereco_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 20) and (coalesce(sg_uf_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 21) and (coalesce(ds_bairro_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 22) and (coalesce(cd_cep_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 23) and (coalesce(cd_municipio_ibge_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 24) and (coalesce(nr_telefone_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
			
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 25) and (coalesce(nr_ddd_telefone_adic_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
				
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 26) and (coalesce(ds_email_tomador_w::text, '') = '') then
					ds_retorno_w := 'S';
					exit;
				end if;
				
				if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ie_campo_consistir_w,0) = 27) and (trunc(dt_emissao_w) <= trunc(clock_timestamp() - interval '5 days')) then
					ds_retorno_w := 'S';
					exit;
				end if;
				
				end;
			end loop;
			close C01;
			
			end;
		else
			begin
			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(nr_cep_tomador_w::text, '') = '') and (ie_tomador_estrangeiro_w = 'N') then
				ds_retorno_w := 'S';
				exit;
			end if;

			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(nr_DDD_Tomador_w::text, '') = '') then
				ds_retorno_w := 'S';
				exit;
			end if;

			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(nr_Telefone_w::text, '') = '') then
				ds_retorno_w := 'S';
				exit;
			end if;

			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(cd_MUN_w::text, '') = '') and (ie_tomador_estrangeiro_w = 'N') then
				ds_retorno_w := 'S';
				exit;
			end if;

			if (coalesce(ds_retorno_w,'N') = 'N') and (length(nr_cep_tomador_w) > 8) and (ie_tomador_estrangeiro_w = 'N') then
				ds_retorno_w := 'S';
				exit;
			end if;

			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(cd_item_lista_serv_w::text, '') = '') then
				ds_retorno_w := 'S';
				exit;
			end if;
			
			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(cd_tributacao_mun_w::text, '') = '') then
				ds_retorno_w := 'S';
				exit;
			end if;	
			
			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(ds_endereco_tomador_w::text, '') = '') then
				ds_retorno_w := 'S';
				exit;
			end if;			
			
			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(nr_cpf_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tomador_estrangeiro_w = 'N') then
				ds_retorno_w := 'S';
				exit;
			end if;			
			
			if (coalesce(ds_retorno_w,'N') = 'N') and (coalesce(nr_cpf_resp_w::text, '') = '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tomador_estrangeiro_w = 'N') then
				ds_retorno_w := 'S';
				exit;
			end if;					
			
			if (coalesce(ds_retorno_w,'N') = 'N') and
				((coalesce(nr_cpf_resp_w::text, '') = '') and (coalesce(nr_cpf_w::text, '') = '')) and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tomador_estrangeiro_w = 'N') then
				ds_retorno_w := 'S';
				exit;
			end if;
			
			if (coalesce(ds_retorno_w,'N') = 'N') and (ds_existe_transp_w = 'N')  then
				ds_retorno_w := 'S';
				exit;
			end if;			
					
			end;
		end if;	
	else
		ds_retorno_w := '';
	end if;
	end loop;
	close C03;
end if;


select	obter_se_nota_entrada_saida(nr_seq_nota_fiscal_p),
	nr_danfe_referencia
into STRICT	ie_nota_entrada_w,
	nr_danfe_referencia_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_fiscal_p;

if (ds_retorno_w = 'S') and (ie_nota_entrada_w = 'E') and (coalesce(nr_danfe_referencia_w::text, '') = '') then
	begin
	ds_retorno_w := 'N';
	end;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_inconsist_nfse_regra (nr_seq_nota_fiscal_p bigint, ie_tipo_nota_p text) FROM PUBLIC;

