-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_mostra_evento ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, nr_seq_evento_p bigint, cd_perfil_ativo_p bigint, nm_usuario_p w_evento_cirurgia_paciente.nm_usuario%type default null) RETURNS varchar AS $body$
DECLARE


qt_repeticao_w      evento_cirurgia.qt_repeticao%type;
qt_evento_w         integer(3,0);
nr_seq_evento_dep_w    evento_cirurgia.nr_seq_evento_dep%type;
ds_retorno_w      varchar(1) := 'S';
qt_evento_real_w    integer(10,0);
nr_seq_proc_interno_w    evento_cirurgia_proc.nr_seq_proc_interno%type;
nr_sequencia_w      varchar(255);

c01 CURSOR FOR
  SELECT nr_seq_proc_interno
  from   cirurgia
  where (nr_cirurgia  =  nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p);


BEGIN

select  count(*)
into STRICT  qt_evento_w
from  evento_cirurgia_paciente
where (nr_cirurgia  =  nr_cirurgia_p or nr_seq_pepo = nr_seq_pepo_p)
and  nr_seq_evento  =  nr_seq_evento_p
and  IE_SITUACAO   <>  'I';

select  coalesce(max(qt_repeticao),0),
  max(nr_seq_evento_dep)
into STRICT  qt_repeticao_w,
  nr_seq_evento_dep_w
from  evento_cirurgia
where  nr_sequencia  =  nr_seq_evento_p;


if (qt_evento_w >= qt_repeticao_w) then
  ds_retorno_w  := 'N';
end if;


if (ds_retorno_w = 'S') then
  ds_retorno_w  := 'N';
  if (nr_seq_evento_dep_w IS NOT NULL AND nr_seq_evento_dep_w::text <> '') then
    select  count(*)
    into STRICT  qt_evento_real_w
    from  evento_cirurgia_paciente
    where  ((nr_cirurgia  =  nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p))
    and (nr_seq_evento  =  nr_seq_evento_dep_w)
    and  IE_SITUACAO   <>   'I';

    if (qt_evento_real_w = 0 or coalesce(qt_evento_real_w::text, '') = '') then
      select  count(*)
      into STRICT  qt_evento_real_w
      from  evento_cirurgia_paciente a,
          evento_cirurgia b,
          cirurgia c
      where    c.nr_cirurgia     = a.nr_cirurgia
      and      a.nr_seq_evento     = b.nr_sequencia
      and      c.nr_seq_pepo       = nr_seq_pepo_p
      and    a.nr_seq_evento   = nr_seq_evento_dep_w
      and    a.IE_SITUACAO     <> 'I';
    end if;

    if (coalesce(qt_evento_real_w, 0) = 0 and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')) then
      select  count(*)
      into STRICT  qt_evento_real_w
      from  w_evento_cirurgia_paciente
      where  ((nr_cirurgia  =  nr_cirurgia_p) or (nr_seq_pepo = nr_seq_pepo_p))
      and (nr_seq_evento  =  nr_seq_evento_dep_w)
      and  nm_usuario = nm_usuario_p;
    end if;
  end if;

  if (qt_evento_real_w > 0) or (coalesce(nr_seq_evento_dep_w::text, '') = '') then
    ds_retorno_w  := 'S';
  end if;

  if (ds_retorno_w = 'S') then
    select  count(*)
    into STRICT  qt_evento_w
    from  evento_cirurgia_lib
    where  nr_seq_evento = nr_seq_evento_p;

    if (qt_evento_w > 0) then
      select  count(*)
      into STRICT  qt_evento_w
      from  evento_cirurgia_lib
      where  nr_seq_evento  = nr_seq_evento_p
      and  coalesce(cd_perfil,coalesce(cd_perfil_ativo_p,0))  = coalesce(cd_perfil_ativo_p,0)
      and  coalesce(cd_estabelecimento,coalesce(wheb_usuario_pck.get_cd_estabelecimento,0))  = coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);

      if (qt_evento_w = 0) then
        ds_retorno_w  := 'N';
      end if;
    end if;
    if (ds_retorno_w = 'S') then
      select  count(*)
      into STRICT  qt_evento_w
      from  evento_cirurgia_proc
      where  nr_seq_evento = nr_seq_evento_p;

      if (qt_evento_w > 0) then
        nr_sequencia_w := null;
        open c01;
        loop
        fetch c01 into  nr_seq_proc_interno_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
          begin
          if (coalesce(nr_sequencia_w::text, '') = '') then
            nr_sequencia_w := nr_seq_proc_interno_w;
          else
            nr_sequencia_w := nr_sequencia_w||','||nr_seq_proc_interno_w;
          end if;
          end;
        end loop;
        close c01;


        if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
          select  count(*)
          into STRICT  qt_evento_w
          from  evento_cirurgia_proc
          where  nr_seq_evento    = nr_seq_evento_p
          and  obter_se_contido(nr_seq_proc_interno,nr_seq_proc_interno_w) = 'S';

          if (qt_evento_w = 0) then
            ds_retorno_w  := 'N';
          end if;
        end if;
      end if;
    end if;
  end if;
end if;

return  ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_mostra_evento ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, nr_seq_evento_p bigint, cd_perfil_ativo_p bigint, nm_usuario_p w_evento_cirurgia_paciente.nm_usuario%type default null) FROM PUBLIC;

