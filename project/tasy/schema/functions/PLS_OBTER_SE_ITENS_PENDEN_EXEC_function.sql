-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_itens_penden_exec ( nr_seq_execucao_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Obter se os itens da execucao ainda estao pendentes para execucao.
Rotina chamada antes de habilitar a opcao de  "Liberar execucao negada", na OSP _ Execucao da Requisicao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x] Tasy (Delphi/Java) [   ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(2)	:= 'S';
qt_item_exec_w		pls_execucao_req_item.qt_item%type;
qt_item_pend_w		pls_execucao_req_item.qt_item%type;

C01 CURSOR FOR
	SELECT 	coalesce(a.qt_item,0),
		pls_quant_itens_pendentes_exec(b.qt_material, b.qt_mat_executado)
	from	pls_execucao_req_item a,
		pls_requisicao_mat b
	where	b.nr_seq_requisicao	= a.nr_seq_requisicao
	and	a.nr_seq_material	= b.nr_seq_material
	and	a.nr_seq_req_mat 	= b.nr_sequencia
	and	a.nr_seq_execucao	= nr_seq_execucao_p
	and	b.ie_status		in ('S', 'P', 'T')
	
union	all

	PERFORM 	coalesce(a.qt_item,0),
		pls_quant_itens_pendentes_exec(b.qt_procedimento, b.qt_proc_executado)
	from	pls_execucao_req_item a,
		pls_requisicao_proc b
	where	b.nr_seq_requisicao	= a.nr_seq_requisicao
	and	a.nr_seq_req_proc	= b.nr_sequencia
	and	a.nr_seq_req_proc 	= b.nr_sequencia
	and	a.nr_seq_execucao	= nr_seq_execucao_p
	and	b.ie_status		in ('S', 'P', 'T');


BEGIN

open C01;
loop
fetch C01 into	
	qt_item_exec_w,
	qt_item_pend_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		if (qt_item_pend_w < qt_item_exec_w) then
			ds_retorno_w	:= 'N';
			exit;
		end if;
	end;
end loop;
close C01;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_itens_penden_exec ( nr_seq_execucao_p bigint) FROM PUBLIC;

