-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE altura_m AS (altura_m integer[73]);
CREATE TYPE altura_f AS (altura_f integer[73]);
CREATE TYPE peso_m AS (peso_m integer[73]);
CREATE TYPE peso_f AS (peso_f integer[73]);


CREATE OR REPLACE FUNCTION obter_deficit_crescimento (qt_meses_p bigint, qt_altura_p bigint, qt_peso_p bigint, ie_sexo_p text) RETURNS bigint AS $body$
DECLARE


alturaM altura_m;
alturaF altura_f;
pesoM   peso_m;
pesoF   peso_f;

pos_w bigint;
total_w bigint;
ie_deficit_w varchar(1);
peld_w double precision;


BEGIN

  alturaM := altura_m(46.0200, 55.8000, 62.4000, 67.0200, 70.7000, 73.7000, 76.3200, 78.6400, 79.2400, 81.3800, 83.3600, 85.3600, 87.2800, 89.1400, 91.0000, 92.6800, 94.3800,
    96.0800, 97.7200, 99.2600, 100.7000, 102.1600, 103.6200, 105.0000, 106.3800, 107.6600, 109.0400, 110.2200, 111.5000, 112.6800, 113.9600, 115.1400, 116.3000,
    117.4600, 118.6000, 119.7200, 120.8400, 121.9600, 123.0400, 124.1200, 125.2800, 126.4000, 127.5200, 128.7200, 129.8800, 131.0200, 132.2400, 133.4200,
    134.6800, 135.8600, 137.1600, 138.5800, 139.9400, 141.3600, 142.8800, 144.3600, 145.9800, 147.6800, 149.4000, 151.1200, 152.8800, 154.6000, 156.2400,
    157.7800, 159.1200, 160.4200, 161.5800, 162.4600, 163.0600, 163.4600, 163.6600, 163.7200, 163.6000);

  pesoM := peso_m(2.4800, 4.1000, 5.8400, 7.2600, 8.1600, 8.7200, 9.1400, 9.4800, 9.6400, 10.1000, 10.5800, 11.0800, 11.4000,11.8200, 12.1600, 12.5200, 12.9000, 13.2800, 13.6800,
    14.0600, 14.4600, 14.8600, 15.2600, 15.6600, 16.0400, 16.4000, 16.7600, 17.2200, 17.6400, 17.9400, 18.3200, 18.7800, 19.1000, 19.5000, 19.8600, 20.2000, 20.5200,
    20.9000, 21.2800, 21.7400, 22.1000, 22.6400, 23.0800, 23.6000, 24.1400, 24.7800, 25.4000, 26.0600, 26.8200, 27.5800, 28.4600, 29.3800, 30.4000, 31.4400, 32.5200,
    33.7200, 34.9400, 36.1800, 37.4400, 38.6200, 39.9400, 41.1600, 42.4000, 43.5400, 44.7200, 45.8000, 46.8000, 47.7200, 48.5400, 49.2800, 49.9400, 50.4800, 50.9400);

  alturaF := altura_f(45.5600, 54.5200, 60.6200, 64.9400, 68.6200, 71.9000, 74.7600, 77.4400, 78.0000, 80.2800, 82.4200, 84.5200, 86.4800, 88.3200, 90.1200, 91.9000, 93.5600, 95.1000,
    96.6000, 98.1000, 99.5800, 100.9400, 102.2800, 103.5200, 104.7600, 106.0800, 107.2000, 108.4000, 109.6200, 110.8400, 111.9600, 113.0800, 114.3200, 115.4600,
    116.7200, 118.0000, 119.1800, 120.4800, 121.8200, 123.2600, 124.6400, 126.1400, 127.6600, 129.2200, 130.9200, 132.6400, 134.4000, 136.1800, 137.8600, 139.5400,
    141.1200, 142.5000, 143.7400, 144.8600, 145.6600, 146.4600, 147.0200, 147.4000, 147.7600, 148.0400, 148.3200, 148.5200, 148.6400, 148.7600, 149.0800, 149.4000,
    149.6600, 150.0200, 150.3000, 150.7200, 151.1200, 151.5000, 151.7800);

  pesoF := peso_f(2.2000, 3.9200, 5.4600, 6.6600, 7.4000, 7.9600, 8.4600, 8.9800, 9.4600, 9.8800, 10.3200, 10.7800, 11.1400, 11.5200, 11.9200, 12.2000, 12.6000, 12.8800, 13.1800,
    13.4600, 13.8400, 14.1000, 14.4400, 14.6800, 14.9800, 15.2800, 15.6400, 15.9800, 16.3000, 16.6800, 17.1200, 17.4400, 17.8400, 18.3200, 18.7800, 19.2400, 19.7600,
    20.2000, 20.8200, 21.3400, 21.8600, 22.4800, 23.1200, 23.7600, 24.5000, 25.1800, 25.8600, 26.6600, 27.4000, 28.2600, 29.0200, 29.9600, 30.8000, 31.6800, 32.5800,
    33.4000, 34.2600, 35.0400, 35.8800, 36.6200, 37.4000, 38.1200, 38.7600, 39.3400, 39.8600, 40.3000, 40.6600, 41.0600, 41.3600, 41.5600, 41.7800, 41.9800, 42.0800);

  SELECT FLOOR(qt_meses_p/3) INTO STRICT pos_w;

  total_w := alturaM.count;
  ie_deficit_w := 'N';
	peld_w := 0;

  IF (pos_w > 72) THEN
    pos_w := 72;
  END IF;

  IF (ie_sexo_p = 'M') THEN
    IF (qt_altura_p <= alturaM(pos_w) OR qt_peso_p <= pesoM(pos_w)) THEN
      ie_deficit_w := 'S';
    END IF;
  ELSE
    IF (qt_altura_p <= alturaF(pos_w) OR qt_peso_p <= pesoF(pos_w)) THEN
      ie_deficit_w := 'S';
    END IF;
  END IF;

  IF (qt_meses_p <= 24) THEN
    peld_w := 4.36;
  END IF;

  IF (ie_deficit_w = 'S') THEN
    peld_w := peld_w + 6.67;
  END IF;

	return peld_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_deficit_crescimento (qt_meses_p bigint, qt_altura_p bigint, qt_peso_p bigint, ie_sexo_p text) FROM PUBLIC;

