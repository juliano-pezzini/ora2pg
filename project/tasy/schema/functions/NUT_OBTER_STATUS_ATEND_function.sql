-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION nut_obter_status_atend (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, dt_referencia_p timestamp, dt_referencia_fim_p timestamp default null) RETURNS varchar AS $body$
DECLARE


ie_status_pac_w		varchar(05);	
dt_inicial_w		timestamp;	
dt_final_w		timestamp;
nr_sequencia_w		bigint;	
nr_prescricao_w		bigint;
dt_servico_w		timestamp;
controle_w		bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		c.nr_prescricao,
		a.dt_servico
	from	nut_atend_serv_dia a,
		nut_atend_serv_prescr_aval c
	where	a.nr_sequencia 	= c.nr_seq_serv_dia
	and	a.cd_setor_atendimento 	= cd_setor_atendimento_p
	and	a.nr_atendimento 	= nr_atendimento_p
	and	a.dt_servico between dt_inicial_w and dt_final_w;
	

BEGIN


dt_inicial_w		:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p);	
dt_final_w		:= pkg_date_utils.end_of(coalesce(dt_referencia_fim_p, dt_referencia_p), 'DAY');

begin
	select	a.nr_sequencia
	into STRICT	nr_sequencia_w
	from	nut_atend_serv_dia a,
		nut_atend_serv_dia_rep b
	where	b.nr_seq_serv_dia 	= a.nr_sequencia
	and	a.nr_atendimento 	= nr_atendimento_p
	and	a.cd_setor_atendimento 	= cd_setor_atendimento_p
	and	a.dt_servico between dt_inicial_w and dt_final_w  LIMIT 1;

exception
	when others then
		nr_sequencia_w := 0;
	end;

if (nr_sequencia_w <> 0) then
	ie_status_pac_w := 'S';
end if;
	
if (coalesce(ie_status_pac_w::text, '') = '') then

	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w,
		nr_prescricao_w,
		dt_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		begin
		
		select 	1
		into STRICT	controle_w
		from 	prescr_medica b
		where	((dt_servico_w between b.dt_inicio_prescr and b.dt_validade_prescr) or (coalesce(b.dt_validade_prescr::text, '') = ''))
		and	(coalesce(b.dt_liberacao, b.dt_liberacao_medico) IS NOT NULL AND (coalesce(b.dt_liberacao, b.dt_liberacao_medico))::text <> '')
		and	nr_prescricao = nr_prescricao_w;
		
		exception
		when others then
			
			nr_sequencia_w	:= null;		
		end;
		
		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then		
			ie_status_pac_w := 'A';
			exit;
		
		end if;
		
		end;
	end loop;
	close C01;


end if;	

if (coalesce(ie_status_pac_w::text, '') = '') then	
	begin
		select	a.nr_prescricao
		into STRICT	nr_sequencia_w
		from	prescr_medica a,
			nut_atend_serv_prescr_aval b
		where	a.nr_prescricao = b.nr_prescricao
		and	a.nr_atendimento = nr_atendimento_p
		and	((dt_inicio_prescr between dt_inicial_w and dt_final_w) or (dt_validade_prescr between dt_inicial_w and dt_final_w) or
			 ((dt_inicio_prescr < dt_inicial_w) and (coalesce(dt_validade_prescr::text, '') = '')))
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')  LIMIT 1;
	exception
	when others then
		nr_sequencia_w := 0;
	end;	
	
	if (nr_sequencia_w <> 0) then
		ie_status_pac_w := 'P';
	end if;
end if;

if (coalesce(ie_status_pac_w::text, '') = '') then	

	--r(-20011,'#@#@'||to_char(dt_inicial_w,'dd/mm/yyyy hh24:mi:ss')||' - '||PKG_DATE_FORMATERS.TO_VARCHAR(dt_final_w,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)||' - '||nr_atendimento_p||' - '||cd_setor_atendimento_p);
	
	ie_status_pac_w := 'SP';
end if;

return	ie_status_pac_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION nut_obter_status_atend (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, dt_referencia_p timestamp, dt_referencia_fim_p timestamp default null) FROM PUBLIC;

