-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_obter_exames_atend ( nr_atendimento_p prescr_medica.nr_atendimento%TYPE, ie_status_min_p prescr_procedimento.ie_status_atend%TYPE DEFAULT NULL, ie_status_max_p prescr_procedimento.ie_status_atend%TYPE DEFAULT NULL) RETURNS varchar AS $body$
DECLARE


    ds_exames_atendimento_w   varchar(4000) := '';
    ds_item_w                 varchar(20);
    qt_item                   integer;

    c01 CURSOR FOR
    SELECT
        el.cd_exame ds_item,
        COUNT(1) qt_item
    FROM
        prescr_medica         pm
        INNER JOIN prescr_procedimento   pp ON ( pm.nr_prescricao = pp.nr_prescricao )
        INNER JOIN exame_laboratorio     el ON ( pp.nr_seq_exame = el.nr_seq_exame )
    WHERE
        pp.ie_status_atend <= coalesce(ie_status_max_p, pp.ie_status_atend)
        AND (pp.nr_seq_exame IS NOT NULL AND pp.nr_seq_exame::text <> '')
        AND coalesce(pp.ie_suspenso, 'N') = 'N'
        AND coalesce(pp.cd_motivo_suspensao::text, '') = ''
        AND coalesce(pp.dt_cancelamento::text, '') = ''
        AND pm.nr_atendimento = nr_atendimento_p
    GROUP BY
        el.cd_exame;

    c02 CURSOR FOR
    SELECT
        el.cd_exame ds_item,
        COUNT(1) qt_item
    FROM
        prescr_medica         pm
        INNER JOIN prescr_procedimento   pp ON ( pm.nr_prescricao = pp.nr_prescricao )
        INNER JOIN exame_laboratorio     el ON ( pp.nr_seq_exame = el.nr_seq_exame )
    WHERE
        pp.ie_status_atend >= coalesce(ie_status_min_p, pp.ie_status_atend)
        AND (pp.nr_seq_exame IS NOT NULL AND pp.nr_seq_exame::text <> '')
        AND coalesce(pp.ie_suspenso, 'N') = 'N'
        AND coalesce(pp.cd_motivo_suspensao::text, '') = ''
        AND coalesce(pp.dt_cancelamento::text, '') = ''
        AND pm.nr_atendimento = nr_atendimento_p
    GROUP BY
        el.cd_exame;


BEGIN
    ds_exames_atendimento_w := '';

    if (ie_status_max_p IS NOT NULL AND ie_status_max_p::text <> '') then
        OPEN c01;
        LOOP
            FETCH c01 INTO
                ds_item_w,
                qt_item;
            EXIT WHEN NOT FOUND; /* apply on c01 */
            BEGIN
                ds_exames_atendimento_w := ds_exames_atendimento_w
                                           || ' '
                                           || ds_item_w
                                           || '('
                                           || qt_item
                                           || ')';
            END;

        END LOOP;

        CLOSE c01;
    else
        OPEN c02;
        LOOP
            FETCH c02 INTO
                ds_item_w,
                qt_item;
            EXIT WHEN NOT FOUND; /* apply on c02 */
            BEGIN
                ds_exames_atendimento_w := ds_exames_atendimento_w
                                           || ' '
                                           || ds_item_w
                                           || '('
                                           || qt_item
                                           || ')';
            END;

        END LOOP;

        CLOSE c02;
    end if;

    RETURN ltrim(ds_exames_atendimento_w);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_obter_exames_atend ( nr_atendimento_p prescr_medica.nr_atendimento%TYPE, ie_status_min_p prescr_procedimento.ie_status_atend%TYPE DEFAULT NULL, ie_status_max_p prescr_procedimento.ie_status_atend%TYPE DEFAULT NULL) FROM PUBLIC;

