-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_procedimento_lab ( NR_SEQ_PRESCR_P bigint , NR_PRESCRICAO_P bigint , CD_MEDICO_SOLICITANTE_P bigint , IE_ACEITA_NULO_P text ) RETURNS varchar AS $body$
DECLARE


procedimentos_w	varchar(600);


  c1_procedimentos CURSOR FOR
    SELECT nr_sequencia from prescr_procedimento pp
    where (Obter_Equipamento_Exame(pp.nr_seq_exame,null,'MATRIX') IS NOT NULL AND (Obter_Equipamento_Exame(pp.nr_seq_exame,null,'MATRIX'))::text <> '')
    and pp.nr_prescricao = NR_PRESCRICAO_P  
    and pp.nr_sequencia = CASE WHEN coalesce(NR_SEQ_PRESCR_P, 0)=0 THEN pp.nr_sequencia  ELSE NR_SEQ_PRESCR_P END 
    and pp.cd_medico_solicitante = CD_MEDICO_SOLICITANTE_P;
    c2_procedimentos CURSOR FOR
   SELECT pp.nr_sequencia
     from (
            SELECT cd_medico_solicitante, nr_sequencia,nr_prescricao,nr_seq_exame 
            from prescr_procedimento 
            where nr_prescricao = NR_PRESCRICAO_P 
            group by cd_medico_solicitante,nr_sequencia,nr_prescricao,nr_seq_exame
          ) pp
     where 
     (Obter_Equipamento_Exame(pp.nr_seq_exame,null,'MATRIX') IS NOT NULL AND (Obter_Equipamento_Exame(pp.nr_seq_exame,null,'MATRIX'))::text <> '')
     and pp.nr_prescricao = NR_PRESCRICAO_P  
     and pp.nr_sequencia = CASE WHEN coalesce(NR_SEQ_PRESCR_P, 0)=0 THEN pp.nr_sequencia  ELSE NR_SEQ_PRESCR_P END 
     and (coalesce(pp.cd_medico_solicitante::text, '') = '' or pp.cd_medico_solicitante = CD_MEDICO_SOLICITANTE_P);

BEGIN

   if (IE_ACEITA_NULO_P = 'S') then
       FOR r2_procedimento IN c2_procedimentos
             LOOP
                procedimentos_w := ltrim(procedimentos_w||','||r2_procedimento.nr_sequencia, ',');
        END LOOP;
    END IF;
    if (IE_ACEITA_NULO_P = 'N') then
        FOR r1_procedimento IN c1_procedimentos
          LOOP
             procedimentos_w := ltrim(procedimentos_w||','||r1_procedimento.nr_sequencia, ',');
        END LOOP;
   end if;

    RETURN procedimentos_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_procedimento_lab ( NR_SEQ_PRESCR_P bigint , NR_PRESCRICAO_P bigint , CD_MEDICO_SOLICITANTE_P bigint , IE_ACEITA_NULO_P text ) FROM PUBLIC;

