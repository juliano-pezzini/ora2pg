-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_grupo_ans ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_conselho_p bigint, nr_seq_tipo_atendimento_p bigint, ie_tipo_guia_p text, ie_regime_internacao_p text, ie_tipo_despesa_mat_p text, ie_tipo_retorno_p text, cd_estabelecimento_p bigint, nr_seq_conta_p pls_conta.nr_sequencia%type default null) RETURNS bigint AS $body$
DECLARE


nr_seq_grupo_ans_w		bigint:= null;
nr_seq_grupo_ans_ww		bigint	:= 0;
cd_area_procedimento_w		integer;
cd_especialidade_w		integer;
cd_grupo_proc_w			bigint;
nr_seq_grupo_superior_w		bigint;
qt_reg_desp_proc_w		integer	:= 0;
qt_reg_desp_regra_w		integer	:= 0;
qt_reg_desp_mat_w		integer	:= 0;
ie_liberado_w			varchar(10);
nr_seq_grupo_regra_w		bigint	:= null;
qt_regra_w			bigint;
ds_ordem_w			varchar(2);
cd_estabelecimento_w		smallint;
ie_tipo_protocolo_w		pls_protocolo_conta.ie_tipo_protocolo%type;
nr_seq_tipo_atend_princ_w	pls_conta.nr_seq_tipo_atendimento%type;
ie_tipo_guia_princ_w		pls_conta.ie_tipo_guia%type;
nr_seq_conta_princ_w		pls_conta.nr_seq_conta_princ%type;


C00 CURSOR(nr_seq_grupo_ans_pc	ans_grupo_desp_regra.nr_seq_grupo_ans%type)FOR
	SELECT	b.nr_seq_grupo_ans
	from	ans_grupo_desp_regra	b
	where	b.nr_seq_grupo_ans		= nr_seq_grupo_ans_pc
	and		((coalesce(b.nr_seq_conselho::text, '') = '') or (b.nr_seq_conselho 			= nr_seq_conselho_p))
	and		((coalesce(b.nr_seq_tipo_atendimento::text, '') = '') or (b.nr_seq_tipo_atendimento 	= nr_seq_tipo_atendimento_p))
	and		((coalesce(b.ie_tipo_guia::text, '') = '') or (b.ie_tipo_guia 			= ie_tipo_guia_p))
	and		((coalesce(b.ie_regime_internacao::text, '') = '') or (b.ie_regime_internacao 	= ie_regime_internacao_p))
	and  	((coalesce(b.ie_tipo_protocolo::text, '') = '') or (ie_tipo_protocolo_w IS NOT NULL AND ie_tipo_protocolo_w::text <> '' AND b.ie_tipo_protocolo = ie_tipo_protocolo_w))
	and  	((coalesce(b.nr_seq_tipo_atend_princ::text, '') = '') or (nr_seq_tipo_atend_princ_w IS NOT NULL AND nr_seq_tipo_atend_princ_w::text <> '' AND b.nr_seq_tipo_atend_princ = nr_seq_tipo_atend_princ_w))
	and 	((coalesce(b.ie_tipo_guia_princ::text, '') = '') or (ie_tipo_guia_princ_w IS NOT NULL AND ie_tipo_guia_princ_w::text <> '' AND b.ie_tipo_guia_princ = ie_tipo_guia_princ_w))
	order by
		coalesce(nr_seq_tipo_atendimento,-1);

C01 CURSOR(nr_seq_grupo_ans_pc	ans_grupo_desp_proc.nr_seq_grupo_ans%type) FOR
	SELECT	/*+ USE_CONCAT */ b.nr_seq_grupo_ans,
		b.ie_liberado ie_liberado,
		1 ds_ordem
	from	ans_grupo_desp_proc 	b
	where	b.nr_seq_grupo_ans	= nr_seq_grupo_ans_pc
	and	b.cd_procedimento  	= cd_procedimento_p
	and	b.ie_origem_proced 	= ie_origem_proced_p
	and	coalesce(b.cd_grupo_proc::text, '') = ''
	and	coalesce(b.cd_especialidade::text, '') = ''
	and	coalesce(b.cd_area_procedimento::text, '') = ''
	
union all

	SELECT	/*+ USE_CONCAT */ b.nr_seq_grupo_ans,
		b.ie_liberado ie_liberado,
		2 ds_ordem
	from	ans_grupo_desp_proc 	b
	where	b.nr_seq_grupo_ans	= nr_seq_grupo_ans_pc
	and	coalesce(b.cd_procedimento::text, '') = ''
	and	b.cd_grupo_proc		= cd_grupo_proc_w
	and	coalesce(b.cd_especialidade::text, '') = ''
	and	coalesce(b.cd_area_procedimento::text, '') = ''
	
union all

	select	/*+ USE_CONCAT */ b.nr_seq_grupo_ans,
		b.ie_liberado ie_liberado,
		3 ds_ordem
	from	ans_grupo_desp_proc 	b
	where	b.nr_seq_grupo_ans	= nr_seq_grupo_ans_pc
	and	coalesce(b.cd_procedimento::text, '') = ''
	and	coalesce(b.cd_grupo_proc::text, '') = ''
	and	b.cd_especialidade	= cd_especialidade_w
	and	coalesce(b.cd_area_procedimento::text, '') = ''
	
union all

	select	/*+ USE_CONCAT */ b.nr_seq_grupo_ans,
		b.ie_liberado ie_liberado,
		4 ds_ordem
	from	ans_grupo_desp_proc 	b
	where	b.nr_seq_grupo_ans	= nr_seq_grupo_ans_pc
	and	coalesce(b.cd_procedimento::text, '') = ''
	and	coalesce(b.cd_grupo_proc::text, '') = ''
	and	coalesce(b.cd_especialidade::text, '') = ''
	and	b.cd_area_procedimento	= cd_area_procedimento_w
	
union 	all

	select	/*+ USE_CONCAT */ b.nr_seq_grupo_ans,
		b.ie_liberado ie_liberado,
		5 ds_ordem
	from	ans_grupo_desp_proc 	b
	where	b.nr_seq_grupo_ans	= nr_seq_grupo_ans_pc
	and	coalesce(b.cd_procedimento::text, '') = ''
	and	coalesce(b.cd_grupo_proc::text, '') = ''
	and	coalesce(b.cd_especialidade::text, '') = ''
	and	coalesce(b.cd_area_procedimento::text, '') = ''
	order by ds_ordem;

C02 CURSOR FOR
	SELECT	/*+ USE_CONCAT */ a.nr_sequencia,
		b.ie_liberado
	from	ans_grupo_desp_mat	b,
		ans_grupo_despesa 	a
	where	a.nr_sequencia		= b.nr_seq_grupo_desp
	and	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	((coalesce(b.ie_tipo_despesa::text, '') = '') or (b.ie_tipo_despesa = ie_tipo_despesa_mat_p))
	order by
		coalesce(a.nr_seq_apresentacao,0), --se nulo, eu defino como últimos registros, caso todos forem nulos, mantém comportamento de leitura
		coalesce(b.ie_tipo_despesa,'0');

C03 CURSOR(cd_estabelecimento_pc	ans_grupo_despesa.cd_estabelecimento%type)FOR
	SELECT	nr_sequencia
	from	ans_grupo_despesa
	where	cd_estabelecimento	= cd_estabelecimento_pc
	and	ie_situacao		= 'A'
	order by
		coalesce(nr_seq_apresentacao,0), --se nulo, eu defino como últimos registros, caso todos forem nulos, mantém comportamento de leitura;
		nr_sequencia;
BEGIN


if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

	select	a.nr_seq_conta_princ,
		b.ie_tipo_protocolo
	into STRICT	nr_seq_conta_princ_w,
		ie_tipo_protocolo_w
	from	pls_conta a,
		pls_protocolo_conta b
	where	a.nr_seq_protocolo = b.nr_sequencia
	and	a.nr_sequencia = nr_seq_conta_p;
end if;

if (nr_seq_conta_princ_w IS NOT NULL AND nr_seq_conta_princ_w::text <> '') then

	select 	max(nr_seq_tipo_atendimento),
		max(ie_tipo_guia)
	into STRICT	nr_seq_tipo_atend_princ_w,
		ie_tipo_guia_princ_w
	from	pls_conta
	where 	nr_sequencia = nr_seq_conta_princ_w;

end if;

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
	cd_estabelecimento_w	:= cd_estabelecimento_p;
else
	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
end if;

if (coalesce(cd_procedimento_p,0) > 0) or
	((coalesce(ie_tipo_despesa_mat_p::text, '') = '') and (coalesce(cd_procedimento_p::text, '') = ''))then
	begin
	select 	cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
	into STRICT	cd_grupo_proc_w,
		cd_especialidade_w,
		cd_area_procedimento_w
	from	estrutura_procedimento_v
	where	cd_procedimento 	= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;
	exception
		when others then
		cd_grupo_proc_w		:= '';
		cd_especialidade_w	:= '';
		cd_area_procedimento_w	:= '';
	end;

	for r_c03_w in C03(cd_estabelecimento_w) loop
		begin

		for r_c01_w in C01(r_c03_w.nr_sequencia) loop
			begin

			nr_seq_grupo_ans_ww	:= r_c01_w.nr_seq_grupo_ans;
			ie_liberado_w		:= r_c01_w.ie_liberado;
			ds_ordem_w		:= r_c01_w.ds_ordem;
			/* Se estiver liberado para o procedimento, verificar ainda para a regra */

			nr_seq_grupo_regra_w	:= null;

			for r_c00_w in C00(nr_seq_grupo_ans_ww) loop
				begin
				nr_seq_grupo_regra_w := r_c00_w.nr_seq_grupo_ans;
				end;
			end loop;

			if (nr_seq_grupo_regra_w IS NOT NULL AND nr_seq_grupo_regra_w::text <> '') and (ie_liberado_w		= 'S') then
				nr_seq_grupo_ans_w	:= nr_seq_grupo_ans_ww;
				exit;
			elsif (nr_seq_grupo_regra_w IS NOT NULL AND nr_seq_grupo_regra_w::text <> '') and (ie_liberado_w		= 'N') then
				nr_seq_grupo_ans_w	:= null;
				exit;
			end if;
			end;
		end loop;
		if (nr_seq_grupo_ans_w IS NOT NULL AND nr_seq_grupo_ans_w::text <> '') then

			exit;
		end if;
		end;
	end loop;

	/* Os testes abaixo são feitos para garantir que exista pelo menos uma regra cadastrada*/

	select	count(1)
	into STRICT	qt_reg_desp_proc_w
	from	ans_grupo_desp_proc
	where	nr_seq_grupo_ans	= nr_seq_grupo_ans_w;
elsif (coalesce(ie_tipo_despesa_mat_p,'X') <> 'X') then
	open C02;
	loop
	fetch C02 into
		nr_seq_grupo_ans_ww,
		ie_liberado_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		/* Se estiver liberado para o procedimento, verificar ainda para a regra */

		if (ie_liberado_w		= 'S') then
			nr_seq_grupo_ans_ww	:= nr_seq_grupo_ans_ww;
		elsif (ie_liberado_w		= 'N') then
			nr_seq_grupo_ans_ww	:= null;
		end if;
		nr_seq_grupo_regra_w	:= null;
		for r_c00_w in C00(nr_seq_grupo_ans_ww) loop
			begin
			nr_seq_grupo_regra_w := r_c00_w.nr_seq_grupo_ans;
			end;
		end loop;

		if (nr_seq_grupo_regra_w IS NOT NULL AND nr_seq_grupo_regra_w::text <> '') then
			nr_seq_grupo_ans_w	:= nr_seq_grupo_ans_ww;
			exit;
		else
			select	count(1)
			into STRICT	qt_regra_w
			from	ans_grupo_desp_regra a
			where	a.nr_seq_grupo_ans	= nr_seq_grupo_ans_ww;

			if (qt_regra_w = 0) then
				nr_seq_grupo_ans_w	:= nr_seq_grupo_ans_ww;
				exit;
			else
				nr_seq_grupo_ans_w	:= null;
			end if;
		end if;
	end loop;
	close C02;

	select	count(1)
	into STRICT	qt_reg_desp_mat_w
	from	ans_grupo_desp_mat
	where	nr_seq_grupo_desp	= nr_seq_grupo_ans_w;
end if;

select	count(1)
into STRICT	qt_reg_desp_regra_w
from	ans_grupo_desp_regra
where	nr_seq_grupo_ans	= nr_seq_grupo_ans_w;

if (qt_reg_desp_proc_w	= 0) and (qt_reg_desp_regra_w	= 0) and (qt_reg_desp_mat_w	= 0) then
	nr_seq_grupo_ans_w	:= null;
end if;

return	nr_seq_grupo_ans_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_grupo_ans ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_conselho_p bigint, nr_seq_tipo_atendimento_p bigint, ie_tipo_guia_p text, ie_regime_internacao_p text, ie_tipo_despesa_mat_p text, ie_tipo_retorno_p text, cd_estabelecimento_p bigint, nr_seq_conta_p pls_conta.nr_sequencia%type default null) FROM PUBLIC;

