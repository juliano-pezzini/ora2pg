-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_media_ponderada_sazonal ( vl_mes1_p bigint, vl_mes2_p bigint, vl_mes3_p bigint, vl_mes4_p bigint, vl_mes5_p bigint, vl_mes6_p bigint, vl_mes7_p bigint, vl_mes8_p bigint, vl_mes9_p bigint, vl_mes10_p bigint, vl_mes11_p bigint, vl_mes12_p bigint, qt_meses_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

/*
ie_opcao_p
P = Ponderada
S = Sazonal
*/
vl_ret_media_w			double precision := 0;
vl_total_w			double precision;
vl_media_mes_w			double precision;
vl_dividir_w			smallint;
vl_mes1_w			double precision;
vl_mes2_w			double precision;
vl_mes3_w			double precision;
vl_mes4_w			double precision;
vl_mes5_w			double precision;
vl_mes6_w			double precision;
vl_mes7_w			double precision;
vl_mes8_w			double precision;
vl_mes9_w			double precision;
vl_mes10_w			double precision;
vl_mes11_w			double precision;
vl_mes12_w			double precision;
vl_ulti_mes_w			double precision;


BEGIN

/*
Média Ponderada:

vl_dividir_w é obtido através da soma dos meses (fórmula passada pelo cliente).

Fórmula dos meses
3 meses : 1+2+3				= 6
6 meses : 1+2+3+4+5+6			= 21
12 meses: 1+2+3+4+5+6+7+8+9+10+11+12 	= 78

Exemplo:

1 mês = 100
2 mês = 80
3 mês = 90

3 meses = 6

MP = ((100*1) + (80*2) + (90*3)) = (530/6) = 88,3

========================================================================================

Média Sazonal:

1 mês = 10
2 mês = 20
3 mês = 30

MM = (10+20+30)/3 = 20

MS = 30 (ultimo mês) / MM = X
MS = 30 (ultimo mês)* X

Fórmulas do cliente na OS 465483.
*/
vl_mes12_w	:= (coalesce(vl_mes12_p,0));
vl_mes11_w	:= (coalesce(vl_mes11_p,0) * 2);
vl_mes10_w	:= (coalesce(vl_mes10_p,0) * 3);
vl_dividir_w	:= 6;
vl_ulti_mes_w	:= vl_mes10_w;
vl_total_w	:= (vl_mes12_p + vl_mes11_p + vl_mes10_p);
if qt_meses_p > 3 then
	begin
	vl_mes9_w := (coalesce(vl_mes9_p,0) * 4);
	vl_mes8_w := (coalesce(vl_mes8_p,0) * 5);
	vl_mes7_w := (coalesce(vl_mes7_p,0) * 6);
	vl_dividir_w := 21;
	vl_ulti_mes_w	:= vl_mes7_w;
	vl_total_w := (	vl_total_w + vl_mes9_w + vl_mes8_w + vl_mes7_w);
	if qt_meses_p > 6 then
		begin
		vl_mes6_w := (coalesce(vl_mes6_p,0) * 7);
		vl_mes5_w := (coalesce(vl_mes5_p,0) * 8);
		vl_mes4_w := (coalesce(vl_mes4_p,0) * 9);
		vl_mes3_w := (coalesce(vl_mes3_p,0) * 10);
		vl_mes2_w := (coalesce(vl_mes2_p,0) * 11);
		vl_mes1_w := (coalesce(vl_mes1_p,0) * 12);
		vl_dividir_w := 78;
		vl_ulti_mes_w	:= vl_mes1_w;
		vl_total_w := (	vl_total_w + vl_mes6_w + vl_mes5_w + vl_mes4_w +
				vl_mes3_w + vl_mes2_w + vl_mes1_w);
		end;
	end if;
	end;
end if;

if (ie_opcao_p = 'P') then
	vl_ret_media_w := dividir(vl_total_w,vl_dividir_w);
else if (ie_opcao_p = 'S') then
	begin
	--vl_media_mes_w := dividir(vl_total_w,qt_meses_p);
	--vl_media_mes_w := dividir(vl_ulti_mes_w,vl_media_mes_w);
	vl_ret_media_w := dividir(vl_ulti_mes_w,dividir(vl_ulti_mes_w,dividir(vl_total_w,qt_meses_p)));
	end;
	end if;
end if;

return	vl_ret_media_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_media_ponderada_sazonal ( vl_mes1_p bigint, vl_mes2_p bigint, vl_mes3_p bigint, vl_mes4_p bigint, vl_mes5_p bigint, vl_mes6_p bigint, vl_mes7_p bigint, vl_mes8_p bigint, vl_mes9_p bigint, vl_mes10_p bigint, vl_mes11_p bigint, vl_mes12_p bigint, qt_meses_p bigint, ie_opcao_p text) FROM PUBLIC;

