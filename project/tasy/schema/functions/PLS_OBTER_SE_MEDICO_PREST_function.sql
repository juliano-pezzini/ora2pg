-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_medico_prest ( nr_seq_conta_p bigint, nr_seq_proc_p bigint, dt_referencia_p timestamp) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(1)	:= 'S';
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_prestador_w		bigint	:= null;
cd_medico_exec_w		varchar(10);
ie_consistir_cooperados_w	varchar(2);
ie_consistir_executor_w		varchar(2);
ie_cooperado_w			varchar(1);
ie_profissional_w		varchar(1);
ie_anestesista_w		varchar(1);
nr_seq_proc_partic_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_grau_partic_w		bigint;
ie_entrou_w			varchar(1);
ie_tipo_prest_exec_w		varchar(3);
cd_medico_executor_w		varchar(20);
cd_pessoa_fisica_w		varchar(20);
dt_referencia_w			timestamp;
qt_participante_w		integer;

c01 CURSOR FOR
	SELECT	a.cd_medico
	from	pls_proc_participante a,
		pls_conta_proc b,
		pls_conta c
	where	a.nr_seq_conta_proc	= b.nr_sequencia
	and	b.nr_seq_conta		= c.nr_sequencia
	and	a.nr_seq_conta_proc	= nr_seq_proc_p
	and	(a.cd_medico IS NOT NULL AND a.cd_medico::text <> '')
	
union

	SELECT	cd_medico_executor
	from	pls_conta
	where	nr_sequencia		= nr_seq_conta_p
	and	(cd_medico_executor IS NOT NULL AND cd_medico_executor::text <> '');

/*Diego OS 363500 - Não será considerado o ie_situação por uma consistência de dt_vigencia e ie_situacao implementada no form do OPS - Prestadores*/

BEGIN

if (nr_seq_proc_p IS NOT NULL AND nr_seq_proc_p::text <> '') then
	ie_entrou_w	:= 'N';
	select	b.nr_seq_prestador_exec,
		c.nr_seq_prestador,
		b.cd_medico_executor,
		coalesce(a.dt_procedimento,clock_timestamp())
	into STRICT	nr_seq_prestador_exec_w,
		nr_seq_prestador_atend_w,
		cd_medico_executor_w,
		dt_referencia_w
	from	pls_protocolo_conta c,
		pls_conta b,
		pls_conta_proc a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= c.nr_sequencia
	and	a.nr_sequencia		= nr_seq_proc_p;

	if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then
		dt_referencia_w	:= dt_referencia_p;
	end if;

	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		select	CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_prest_exec_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;
	end if;
	/* Tratar para consistir os profissionais do Hospital - OS 283005 */

	if (ie_tipo_prest_exec_w = 'PF') then
		nr_seq_prestador_w	:= nr_seq_prestador_atend_w;
	else
		nr_seq_prestador_w	:= nr_seq_prestador_exec_w;
	end if;

	if (coalesce(nr_seq_prestador_w,0) > 0) then
		select	coalesce(a.ie_consistir_cooperados,'N')
		into STRICT	ie_consistir_cooperados_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_w;

		/* Robson e Felipe - 20/04/2011 - OS 307599 */

		select	coalesce(max(a.ie_consistir_cooperados),'N')
		into STRICT	ie_consistir_executor_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;

		select	count(1)
		into STRICT	qt_participante_w
		from	pls_proc_participante
		where	nr_seq_conta_proc	= nr_seq_proc_p
		and	ie_status		!= 'C'
		and	(cd_medico IS NOT NULL AND cd_medico::text <> '');

		if (coalesce(ie_consistir_cooperados_w,'N') <> 'N') and (coalesce(cd_medico_executor_w,'X') = 'X') and (qt_participante_w	= 0) then
			ie_retorno_w	:= 'N';
			goto final;
		end if;

		/* Executante deve estar vinculado ao prestador caso seja cooperado */

		if (ie_consistir_cooperados_w = 'C') then
			open C01;
			loop
			fetch C01 into
				cd_medico_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

				if (ie_cooperado_w = 'S') then
					select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_profissional_w
					from	pls_prestador_medico a
					where	a.nr_seq_prestador	= nr_seq_prestador_w
					and	a.cd_medico		= cd_medico_exec_w
					and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

					if (ie_profissional_w = 'N') then
						ie_retorno_w	:= 'N';
					end if;
				end if;
				end;
			end loop;
			close C01;
		/* Executante deve ser cooperado e estar vinculado ao prestador */

		elsif (ie_consistir_cooperados_w = 'CV') then

			open C01;
			loop
			fetch C01 into
				cd_medico_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

				if (ie_cooperado_w = 'N') then
					ie_retorno_w	:= 'N';
				else
					if (ie_cooperado_w = 'S') then
						select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ie_profissional_w
						from	pls_prestador_medico a
						where	a.nr_seq_prestador	= nr_seq_prestador_w
						and	a.cd_medico		= cd_medico_exec_w
						and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

						if (ie_profissional_w = 'N') then
							ie_retorno_w	:= 'N';
						end if;
					end if;
				end if;
				end;
			end loop;
			close C01;
		/* Executante deve ser cooperado e estar vinculado ao prestador  ou ser anestesista*/

		elsif (ie_consistir_cooperados_w = 'CA') then
			open C01;
			loop
			fetch C01 into
				cd_medico_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				ie_entrou_w	:= 'S';

				ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

				if (ie_cooperado_w = 'S') then
					select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_profissional_w
					from	pls_prestador_medico a
					where	a.nr_seq_prestador	= nr_seq_prestador_w
					and	a.cd_medico		= cd_medico_exec_w
					and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

					if (ie_profissional_w = 'S') then
						ie_retorno_w	:= 'S';
					else
						select	coalesce(max(ie_anestesista),'N')
						into STRICT	ie_anestesista_w
						from	pls_grau_participacao	b,
							pls_proc_participante	a
						where	a.nr_sequencia		= nr_seq_proc_partic_w
						and	a.nr_seq_grau_partic	= b.nr_sequencia;

						if (ie_anestesista_w = 'N') then
							ie_retorno_w	:= 'N';
						end if;
					end if;
				else
					ie_retorno_w	:= 'N';
				end if;
				end;
			end loop;
			close C01;

			if (ie_entrou_w = 'N') then
				select	max(nr_seq_conta)
				into STRICT	nr_seq_conta_w
				from	pls_conta_proc
				where	nr_sequencia	= nr_seq_proc_p;

				select	max(nr_seq_grau_partic),
					max(cd_medico_executor)
				into STRICT	nr_seq_grau_partic_w,
					cd_medico_exec_w
				from	pls_conta
				where	nr_sequencia	= nr_seq_conta_w;

				ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

				if (ie_cooperado_w = 'S') then
					select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_profissional_w
					from	pls_prestador_medico a
					where	a.nr_seq_prestador	= nr_seq_prestador_w
					and	a.cd_medico		= cd_medico_exec_w
					and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

					if (ie_profissional_w = 'S') then
						ie_retorno_w	:= 'S';
					else
						select	coalesce(max(ie_anestesista),'N')
						into STRICT	ie_anestesista_w
						from	pls_grau_participacao
						where	nr_sequencia	= nr_seq_grau_partic_w;

						if (ie_anestesista_w = 'N') then
							ie_retorno_w	:= 'N';
						end if;
					end if;
				else
					ie_retorno_w	:= 'N';
				end if;
			end if;
		/* Executante deve estar vinculado ao prestador*/

		elsif (ie_consistir_cooperados_w = 'V') then
			open C01;
			loop
			fetch C01 into
				cd_medico_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				ie_entrou_w	:= 'S';

				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_retorno_w
				from	pls_prestador_medico a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.cd_medico		= cd_medico_exec_w
				and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));
				end;
			end loop;
			close C01;

			if (ie_entrou_w = 'N') then
				select	max(nr_seq_conta)
				into STRICT	nr_seq_conta_w
				from	pls_conta_proc a
				where	a.nr_sequencia	= nr_seq_proc_p;

				select	cd_medico_executor
				into STRICT	cd_medico_exec_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_w;

				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_retorno_w
				from	pls_prestador_medico a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.cd_medico		= cd_medico_exec_w
				and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));
			end if;
		elsif (ie_consistir_cooperados_w	= 'PF') then

			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_exec_w;

			open C01;
			loop
			fetch C01 into
				cd_medico_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				if (coalesce(cd_medico_exec_w,0) != coalesce(cd_pessoa_fisica_w,0)) then
					ie_retorno_w	:= 'N';

				end if;
				end;
			end loop;
			close C01;
		end if;


		if ( ie_consistir_executor_w	= 'PF') and (ie_consistir_cooperados_w	!= 'PF') and (ie_retorno_w	= 'S') then
			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_exec_w;

			open C01;
			loop
			fetch C01 into
				cd_medico_exec_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				if (coalesce(cd_medico_exec_w,0) != coalesce(cd_pessoa_fisica_w,0)) then
					ie_retorno_w	:= 'N';

				end if;
				end;
			end loop;
			close C01;
		end if;
	end if;
elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

	select	b.cd_medico_executor,
		b.nr_seq_prestador_exec,
		c.nr_seq_prestador,
		b.cd_medico_executor,
		coalesce(b.dt_atendimento_referencia,clock_timestamp())
	into STRICT	cd_medico_exec_w,
		nr_seq_prestador_exec_w,
		nr_seq_prestador_atend_w,
		cd_medico_executor_w,
		dt_referencia_w
	from	pls_protocolo_conta c,
		pls_conta b
	where	b.nr_seq_protocolo	= c.nr_sequencia
	and	b.nr_sequencia		= nr_seq_conta_p;

	if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then
		dt_referencia_w	:= dt_referencia_p;
	end if;

	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		select	CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_prest_exec_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;
	end if;

	/* Tratar para consistir os profissionais do Hospiatl - OS 283005 */

	if (ie_tipo_prest_exec_w = 'PF') then
		nr_seq_prestador_w	:= coalesce(nr_seq_prestador_atend_w,nr_seq_prestador_exec_w);
	else
		nr_seq_prestador_w	:= nr_seq_prestador_exec_w;
	end if;

	if (coalesce(nr_seq_prestador_w,0) > 0) and (coalesce(cd_medico_exec_w,'X') <> 'X') then

		select	coalesce(a.ie_consistir_cooperados,'N')
		into STRICT	ie_consistir_cooperados_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_w;

		/* Robson e Felipe - 20/04/2011 - OS 307599 */

		select	coalesce(max(a.ie_consistir_cooperados),'N')
		into STRICT	ie_consistir_executor_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_exec_w;

		if (coalesce(ie_consistir_cooperados_w,'N') <> 'N') and (coalesce(cd_medico_executor_w,'X') = 'X')	then
			ie_retorno_w	:= 'N';
			goto final;
		end if;

		/*Executante deve estar vinculado ao prestador caso seja cooperado*/

		if (ie_consistir_cooperados_w = 'C') then
			ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

			if (ie_cooperado_w = 'S') then
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_profissional_w
				from	pls_prestador_medico a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.cd_medico		= cd_medico_exec_w
				and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

				if (ie_profissional_w = 'N') then
					ie_retorno_w	:= 'N';
				end if;
			end if;
		/* Executante deve ser cooperado e estar vinculado ao prestador */

		elsif (ie_consistir_cooperados_w = 'CV') then
			ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

			if (ie_cooperado_w = 'N') then
				ie_retorno_w	:= 'N';
			else
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_profissional_w
				from	pls_prestador_medico a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.cd_medico		= cd_medico_exec_w
				and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

				if (ie_profissional_w = 'N') then
					ie_retorno_w	:= 'N';
				end if;
			end if;
		/* Executante deve ser cooperado e estar vinculado ao prestador ou ser anestesista */

		elsif (ie_consistir_cooperados_w = 'CA') then

			ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_exec_w,dt_referencia_w,null);

			if (ie_cooperado_w = 'S') then
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_profissional_w
				from	pls_prestador_medico a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.cd_medico		= cd_medico_exec_w
				and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

				if (ie_profissional_w = 'S') then
					ie_retorno_w	:= 'S';
				else
					select	coalesce(max(ie_anestesista),'N')
					into STRICT	ie_anestesista_w
					from	pls_grau_participacao	b,
						pls_conta		a
					where	a.nr_sequencia		= nr_seq_conta_p
					and	a.nr_seq_grau_partic	= b.nr_sequencia;

					if (ie_anestesista_w = 'N') then
						ie_retorno_w	:= 'N';
					end if;
				end if;
			else
				ie_retorno_w	:= 'N';
			end if;
		/* Executante deve estar vinculado ao prestador*/

		elsif (ie_consistir_cooperados_w = 'V') then
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_retorno_w
			from	pls_prestador_medico a
			where	a.nr_seq_prestador	= nr_seq_prestador_w
			and	a.cd_medico		= cd_medico_exec_w
			and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));
		elsif (ie_consistir_cooperados_w	=  'PF') then
			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	pls_prestador
			where	nr_sequencia	= (coalesce(nr_seq_prestador_w,nr_seq_prestador_exec_w));

			if (coalesce(cd_medico_executor_w,0) = coalesce(cd_pessoa_fisica_w,0)) then
				ie_retorno_w	:= 'S';
			else
				ie_retorno_w	:= 'N';
			end if;
		end if;
	end if;
end if;
<<final>>
return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_medico_prest ( nr_seq_conta_p bigint, nr_seq_proc_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

