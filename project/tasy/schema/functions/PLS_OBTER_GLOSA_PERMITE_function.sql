-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_glosa_permite ( nr_seq_glosa_p bigint, cd_glosa_p text, ie_tipo_inconsistencia_p text) RETURNS varchar AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Verificar o tipo de inconsistência da conta, e se o motivo da glosa permite ou não a importação
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ds_retorno_w		varchar(255) := '';
ie_importa_w		varchar(2);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
ie_ocorrencia_w		pls_controle_estab.ie_ocorrencia%type := 'N';


BEGIN
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
ie_ocorrencia_w := pls_obter_se_controle_estab('GO');

if (ie_tipo_inconsistencia_p = 'G') then

	if (nr_seq_glosa_p IS NOT NULL AND nr_seq_glosa_p::text <> '') then
		if (ie_ocorrencia_w = 'S') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
			select  coalesce(max(a.ie_importacao_ops), 'S')
			into STRICT	ie_importa_w
			from	tiss_motivo_glosa 	a,
				pls_glosa_evento 	b
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	b.ie_evento		= 'IA'
			and	a.nr_sequencia		= nr_seq_glosa_p
			and	b.ie_plano		= 'S'
			and	b.cd_estabelecimento	= cd_estabelecimento_w;
		else
			select  coalesce(max(a.ie_importacao_ops), 'S')
			into STRICT	ie_importa_w
			from	tiss_motivo_glosa 	a,
				pls_glosa_evento 	b
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	b.ie_evento		= 'IA'
			and	a.nr_sequencia		= nr_seq_glosa_p
			and	b.ie_plano		= 'S';
		end if;
	else
		if (ie_ocorrencia_w = 'S') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
			select  coalesce(max(a.ie_importacao_ops), 'S')
			into STRICT	ie_importa_w
			from	tiss_motivo_glosa 	a,
				pls_glosa_evento 	b
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	b.ie_evento		= 'IA'
			and	a.cd_motivo_tiss	= cd_glosa_p
			and	b.ie_plano		= 'S'
			and	b.cd_estabelecimento	= cd_estabelecimento_w;
		else
			select  coalesce(max(a.ie_importacao_ops), 'S')
			into STRICT	ie_importa_w
			from	tiss_motivo_glosa 	a,
				pls_glosa_evento 	b
			where	a.nr_sequencia 		= b.nr_seq_motivo_glosa
			and	b.ie_evento		= 'IA'
			and	a.cd_motivo_tiss	= cd_glosa_p
			and	b.ie_plano		= 'S';
		end if;
	end if;

	if (ie_importa_w = 'S') then
		ds_retorno_w := 'Permite importação';
	else
		ds_retorno_w := 'Não permite importação';
	end if;
elsif (ie_tipo_inconsistencia_p = 'O') then
	ds_retorno_w := 'Não permite importação';
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_glosa_permite ( nr_seq_glosa_p bigint, cd_glosa_p text, ie_tipo_inconsistencia_p text) FROM PUBLIC;

