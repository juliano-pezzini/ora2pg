-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verifica_se_excesao_pacote ( nr_seq_regra_P bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, ie_tipo_processo_p text, nr_seq_prestador_p pls_prestador.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se deverá ser adicionado o pacote na guia/requisição.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w			varchar(1);
ie_gerou_excecao_w		varchar(1)	:= 'N';
nr_seq_ops_congenere_w		bigint;
nr_seq_congenere_w		bigint;
nr_seq_uni_exec_w		bigint;
ie_tipo_intercambio_w		varchar(1);
ie_tipo_intercambio_regra_w	varchar(1);
qt_regra_w			bigint;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
sg_estado_w			pessoa_juridica.sg_estado%type;


BEGIN
-- Obter a UF da operadora  - Tasy
select	coalesce(max(sg_estado),'X')
into STRICT	sg_estado_w
from	pessoa_juridica
where	cd_cgc	= (	SELECT	cd_cgc_outorgante
			from	pls_outorgante
			where	cd_estabelecimento	= cd_estabelecimento_p);

-- Obter se beneficiário possui fundação cadastrada
select	max(nr_seq_congenere),
	max(nr_seq_ops_congenere)
into STRICT	nr_seq_congenere_w,
	nr_seq_ops_congenere_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

-- Obter a UF do plano beneficiário
select	coalesce(max(a.sg_estado),'X')
into STRICT	sg_estado_int_w
from	pessoa_juridica	a,
	pls_congenere	b
where	a.cd_cgc	= b.cd_cgc
and	b.nr_sequencia	= nr_seq_congenere_w;

-- Obter o tipo de intercâmbio
if (sg_estado_int_w <> 'X') and (sg_estado_w <> 'X') then
	if (sg_estado_w	= sg_estado_int_w) then
		ie_tipo_intercambio_w	:= 'E';
	else
		ie_tipo_intercambio_w	:= 'N';
	end if;
else
	ie_tipo_intercambio_w	:= 'A';
end if;

-- Verificar as regras de exceção cadastradas no pacote
select	count(qt_regra)
into STRICT	qt_regra_w
from	(SELECT	1 qt_regra
	from	pls_excecao_conver_pacote
	where	nr_seq_regra_conversao = nr_seq_regra_P
	and	((ie_tipo_intercambio = 'T') and ((coalesce(nr_seq_prestador::text, '') = '') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '')))
	and	ie_tipo_processo_p = 'I'
	
union all

	SELECT	1 qt_regra
	from	pls_excecao_conver_pacote
	where	nr_seq_regra_conversao = nr_seq_regra_P
	and	((ie_tipo_intercambio = 'S') and ((coalesce(nr_seq_prestador::text, '') = '') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '')))
	and	ie_tipo_processo_p <> 'I') alias13;

if (qt_regra_w = 0) and (ie_tipo_processo_p = 'I') then
	if (nr_seq_ops_congenere_w IS NOT NULL AND nr_seq_ops_congenere_w::text <> '') then
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_excecao_conver_pacote
		where	nr_seq_regra_conversao	= nr_seq_regra_P
		and	ie_tipo_intercambio 	= 'F';

		if (qt_regra_w > 0) then
			ie_gerou_excecao_w := 'S';
		end if;

	elsif (ie_tipo_intercambio_w = 'E') then
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_excecao_conver_pacote
		where	nr_seq_regra_conversao	= nr_seq_regra_P
		and	ie_tipo_intercambio 	= 'E';

		if (qt_regra_w > 0) then
			ie_gerou_excecao_w := 'S';
		end if;

	elsif (ie_tipo_intercambio_w = 'N') then
		select	count(1)
		into STRICT	qt_regra_w
		from	pls_excecao_conver_pacote
		where	nr_seq_regra_conversao	= nr_seq_regra_P
		and	ie_tipo_intercambio 	= 'N';

		if (qt_regra_w > 0) then
			ie_gerou_excecao_w := 'S';
		end if;
	end if;

elsif (qt_regra_w = 0) and (ie_tipo_processo_p <> 'I') then
	select	count(1)
	into STRICT	qt_regra_w
	from	pls_excecao_conver_pacote
	where	nr_seq_regra_conversao = nr_seq_regra_P
	and	((ie_tipo_intercambio = 'S') and ((coalesce(nr_seq_prestador::text, '') = '') or (coalesce(nr_seq_prestador,0) = coalesce(nr_seq_prestador_p,0))));

	if (qt_regra_w > 0) then
		ie_gerou_excecao_w := 'S';
	end if;
else
	ie_gerou_excecao_w := 'S';
end if;

ds_retorno_w := ie_gerou_excecao_w;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verifica_se_excesao_pacote ( nr_seq_regra_P bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, ie_tipo_processo_p text, nr_seq_prestador_p pls_prestador.nr_sequencia%type) FROM PUBLIC;

