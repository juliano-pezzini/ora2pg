-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_mot_bloq_agenda (cd_agenda_p bigint, dt_horario_p timestamp, ie_dia_semana_p bigint) RETURNS varchar AS $body$
DECLARE


ie_bloqueio_w 	varchar(1) 	:= 'N';
nr_seq_periodo_w	bigint	:= 0;
nr_Seq_horario_w	bigint	:= 0;
nr_Seq_dia_w		bigint	:= 0;
nr_Seq_dia_hor_w	bigint	:= 0;
nr_sequencia_w		bigint;
ds_retorno_w		varchar(255);


BEGIN
if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_horario_p IS NOT NULL AND dt_horario_p::text <> '') and (ie_dia_semana_p IS NOT NULL AND ie_dia_semana_p::text <> '') then
	/* consistir bloqueio período */

	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_periodo_w
	from	agenda_bloqueio
	where	cd_agenda = cd_agenda_p
	and	trunc(dt_horario_p) between dt_inicial and dt_final
	and	coalesce(hr_inicio_bloqueio::text, '') = ''
	and	coalesce(hr_final_bloqueio::text, '') = ''
	and	coalesce(ie_dia_semana::text, '') = '';
	exception
		when others then
		nr_seq_periodo_w := null;
	end;

	/* consistir bloqueio horário */

	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_horario_w
	from	agenda_bloqueio
	where	cd_agenda = cd_agenda_p
	and	trunc(dt_horario_p) between dt_inicial and dt_final
	and	dt_horario_p between	to_date(to_char(dt_horario_p,'dd/mm/yyyy') ||' '|| to_char(hr_inicio_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and 						to_date(to_char(dt_horario_p,'dd/mm/yyyy') ||' '|| to_char(hr_final_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
	and	(hr_inicio_bloqueio IS NOT NULL AND hr_inicio_bloqueio::text <> '')
	and	(hr_final_bloqueio IS NOT NULL AND hr_final_bloqueio::text <> '')
	and	hr_inicio_bloqueio < hr_final_bloqueio
	and	coalesce(ie_dia_semana::text, '') = '';
	exception
		when others then
		nr_seq_horario_w := null;
	end;

	/* consistir bloqueio dia */

	begin
	select 	max(nr_sequencia)
	into STRICT	nr_seq_dia_w
	from	agenda_bloqueio
	where	cd_agenda = cd_agenda_p
	and	trunc(dt_horario_p) between dt_inicial and dt_final
	and	coalesce(hr_inicio_bloqueio::text, '') = ''
	and	coalesce(hr_final_bloqueio::text, '') = ''
	and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
	and	((ie_dia_semana = ie_dia_semana_p) or (ie_dia_semana = 9));
	exception
		when others then
		nr_seq_dia_w := null;
	end;

	/* consistir bloqueio dia e horário */

	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_dia_hor_w
	from	agenda_bloqueio
	where	cd_agenda = cd_agenda_p
	and	trunc(dt_horario_p) between dt_inicial and dt_final
	and	dt_horario_p between	to_date(to_char(dt_horario_p,'dd/mm/yyyy') ||' '|| to_char(hr_inicio_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and 						to_date(to_char(dt_horario_p,'dd/mm/yyyy') ||' '|| to_char(hr_final_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
	and	(hr_inicio_bloqueio IS NOT NULL AND hr_inicio_bloqueio::text <> '')
	and	(hr_final_bloqueio IS NOT NULL AND hr_final_bloqueio::text <> '')
	and	hr_inicio_bloqueio < hr_final_bloqueio
	and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
	and	((ie_dia_semana = ie_dia_semana_p) or (ie_dia_semana = 9));
	exception
		when others then
		nr_seq_dia_hor_w := null;
	end;

	/* verificar horário bloqueado */

	if (coalesce(nr_Seq_periodo_w,0) > 0) or (coalesce(nr_Seq_horario_w,0) > 0) or (coalesce(nr_Seq_dia_w,0) > 0) or (coalesce(nr_Seq_dia_hor_w,0) > 0) then
		select	CASE WHEN coalesce(nr_Seq_dia_hor_w,0)=0 THEN  coalesce(coalesce(nr_Seq_dia_w, nr_Seq_horario_w),nr_Seq_periodo_w)  ELSE nr_Seq_dia_hor_w END
		into STRICT	nr_sequencia_w
		;

		select	ie_motivo_bloqueio
		into STRICT	ds_retorno_w
		from	agenda_bloqueio
		where	nr_sequencia	= nr_sequencia_w;
	end if;
end if;

return	ds_Retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_mot_bloq_agenda (cd_agenda_p bigint, dt_horario_p timestamp, ie_dia_semana_p bigint) FROM PUBLIC;

