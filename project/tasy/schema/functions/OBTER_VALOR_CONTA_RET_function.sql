-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_conta_ret ( nr_interno_conta_p bigint, cd_autorizacao_p text, ie_valor_p text, dt_saldo_p timestamp, ie_status_retorno_p text) RETURNS bigint AS $body$
DECLARE


vl_pago_w	double precision;

/*
Opções:

P - Pago
G - Glosa
A - Adicional
S - Saldo
M - Amenor
IG - Glosa
PER - Perdas
DESC - Descontos
PPD - Pago + Perdas + Descontos,
GUIA - Valor da guia no retorno
*/
BEGIN

if (ie_valor_p = 'P') then
	select	coalesce(sum(vl_pago),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	nr_interno_conta = nr_interno_conta_p
	  and	cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'G') then
	select	coalesce(sum(CASE WHEN a.ie_glosa='S' THEN vl_glosado  ELSE 0 END ),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	nr_interno_conta = nr_interno_conta_p
	  and	cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'A') then
	select	coalesce(sum(a.vl_adicional),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	nr_interno_conta = nr_interno_conta_p
	  and	cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());

elsif (ie_valor_p = 'S') then
	select (obter_valor_guia_conta(nr_interno_conta_p) - sum(coalesce(vl_pago,0)) - sum(coalesce(vl_glosado,0)) - sum(coalesce(vl_desconto,0)) - sum(coalesce(vl_perdas,0)))
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	nr_interno_conta = nr_interno_conta_p
	  and	cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'M') then
	select	coalesce(sum(a.vl_amenor),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	a.nr_interno_conta = nr_interno_conta_p
	  and	cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'IG') then
	select	coalesce(sum(c.vl_glosa),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_glosa c,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	a.nr_sequencia	 = c.nr_seq_ret_item
	  and	a.nr_interno_conta = nr_interno_conta_p
	  and	a.cd_autorizacao   = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'PER') then
	select	coalesce(sum(vl_perdas),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	a.nr_interno_conta = nr_interno_conta_p
	  and	a.cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'DESC') then
	select	coalesce(sum(vl_desconto),0)
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno = b.nr_sequencia
	  and	nr_interno_conta = nr_interno_conta_p
	  and	cd_autorizacao	 = cd_autorizacao_p
	  and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp());
elsif (ie_valor_p = 'PPD') then
	select	vl_pago+vl_desconto+vl_perdas
	into STRICT	vl_pago_w
	from (SELECT	coalesce(sum(vl_pago),0) vl_pago,
			coalesce(sum(vl_desconto),0) vl_desconto,
			coalesce(sum(vl_perdas),0) vl_perdas
		from	convenio_retorno b,
			convenio_retorno_item a
		where	a.nr_seq_retorno = b.nr_sequencia
	  	and	nr_interno_conta = nr_interno_conta_p
	  	and	cd_autorizacao	 = cd_autorizacao_p
	  	and	b.ie_status_retorno = coalesce(ie_status_retorno_p,  b.ie_status_retorno)
	  	and	b.dt_baixa_cr	 <= coalesce(dt_saldo_p, clock_timestamp())
		) alias10;
elsif (ie_valor_p = 'GUIA') then
	select	coalesce(max(c.vl_guia),0) --max pq a guia pode estar em mais de um retorno
	into STRICT	vl_pago_w
	from	convenio_retorno b,
		convenio_retorno_item a,
		conta_paciente_guia c
	where	a.nr_seq_retorno 	= b.nr_sequencia
	and	c.nr_interno_conta	= a.nr_interno_conta
	and	c.cd_autorizacao	= a.cd_autorizacao
	and	a.nr_interno_conta 	= nr_interno_conta_p
	and	a.cd_autorizacao	 = cd_autorizacao_p
	and	b.ie_status_retorno 	= coalesce(ie_status_retorno_p,  b.ie_status_retorno);
	--and	b.dt_baixa_cr	 	<= nvl(dt_saldo_p, sysdate);
end if;

return vl_pago_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_conta_ret ( nr_interno_conta_p bigint, cd_autorizacao_p text, ie_valor_p text, dt_saldo_p timestamp, ie_status_retorno_p text) FROM PUBLIC;

