-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_val_cta_obter_restr_padrao ( ie_opcao_p text, dados_consistencia_p pls_tipos_cta_val_pck.dados_consistencia, nr_id_transacao_p pls_rp_cta_selecao.nr_id_transacao%type, nr_cursor_p integer, dados_filtro_p pls_tipos_cta_val_pck.dados_filtro, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) RETURNS PLS_TIPOS_CTA_VAL_PCK.DADOS_RESTRICAO_SELECT AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Retornar ou atualizar os binds dos selects padrão da PLS_OC_CTA_APLICAR_FILTROS
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Cuidar com os ALIAS... Dar nome padronizado, para facilitar identificação e não repetir..

ie_opcao_p

RESTRICAO - Irá retorna as restrições dos selects.
BINDS - Irá atualizar o valor das binds do curso no sql dinâmico

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_restricao_w	pls_tipos_cta_val_pck.dados_restricao_select;
ds_qt_filtro_conta_w	varchar(1000);


BEGIN
-- Inicializar o retorno
dados_restricao_w.ds_restricao_lote		:= null;
dados_restricao_w.ds_restricao_protocolo	:= null;
dados_restricao_w.ds_restricao_conta		:= null;
dados_restricao_w.ds_restricao_proc		:= null;
dados_restricao_w.ds_restricao_partic		:= null;
dados_restricao_w.ds_campos_sql			:= null;

-- Verificações dos parâmetros, caso tenha valor informado será adicionado a restrição para o mesmo.
-- Sempre agrupar cada adição de restrição com a atualização da variável.
-- Sempre esta verificação por primeiro.
if (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		-- Verificar o tipo de incidência da regra para identificar os itens a serem buscados.
		-- Procedimento
		dados_restricao_w.ds_campos_sql :=	',' || pls_tipos_cta_val_pck.enter_w ||
							'	pls_tipos_cta_val_pck.obter_sequencia_selecao ( ' || pls_tipos_cta_val_pck.enter_w ||
							'		proc.nr_seq_conta, proc.nr_sequencia, ' || pls_tipos_cta_val_pck.enter_w ||
							'		:nr_id_transacao_campo, :nr_seq_filtro_campo, ' || pls_tipos_cta_val_pck.enter_w ||
							'		''F'') nr_seq_selecao';
	-- Quando for para atualizar o valor das BINDS.
	elsif (ie_opcao_p = 'BINDS') then

		dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_filtro_campo', dados_filtro_p.nr_sequencia);
		dbms_sql.bind_variable(nr_cursor_p, ':nr_id_transacao_campo', nr_id_transacao_p);
	end if;

	-- obter a restricao padrão quando houver filtro de conta
	ds_qt_filtro_conta_w := pls_tipos_cta_val_pck.obter_restricao_fil_conta(nr_id_transacao_p, dados_filtro_p);

	-- só adicionar se existir filtro de conta.
	if (ds_qt_filtro_conta_w IS NOT NULL AND ds_qt_filtro_conta_w::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then

			-- Se for por item da conta será verificado se a conta já está na tabela de seleção, pois se não estiver não será gerado a ocorrência para o item
			-- por que as informações da conta não se enquadraram nos filtros da regra.
			dados_restricao_w.ds_restricao_conta := dados_restricao_w.ds_restricao_conta ||pls_util_pck.enter_w ||ds_qt_filtro_conta_w;

		elsif (ie_opcao_p = 'BINDS') then

			--atualizar as binds se existir filtro de conta
			dbms_sql.bind_variable(nr_cursor_p, ':nr_id_transacao', nr_id_transacao_p);
			dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_filtro', dados_filtro_p.nr_sequencia);

		end if;
	end if;
	-- Se for para filtrar por estabelecimento será verificado o estabelecimento do protocolo apenas.
	if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then

		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_protocolo := dados_restricao_w.ds_restricao_protocolo ||pls_util_pck.enter_w || 'and 	proc.cd_estabelecimento_prot = :cd_estabelecimento';
		elsif (ie_opcao_p = 'BINDS') then

			dbms_sql.bind_variable(nr_cursor_p, ':cd_estabelecimento', cd_estabelecimento_p);
		end if;
	end if;
	-- Se houver número do lote informado buscar os protocolos do lote.
	if (dados_consistencia_p.nr_seq_lote IS NOT NULL AND dados_consistencia_p.nr_seq_lote::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_lote := dados_restricao_w.ds_restricao_lote || pls_util_pck.enter_w || 'and	proc.nr_seq_lote_conta = :nr_seq_lote_conta';
		elsif (ie_opcao_p = 'BINDS') then

			dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_lote_conta', dados_consistencia_p.nr_seq_lote);
		end if;
	end if;
	-- Se houver protocolo informado buscar apenas aquele protocolo.
	if (dados_consistencia_p.nr_seq_protocolo IS NOT NULL AND dados_consistencia_p.nr_seq_protocolo::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_protocolo := dados_restricao_w.ds_restricao_protocolo || pls_util_pck.enter_w || 'and	proc.nr_seq_protocolo = :nr_seq_protocolo';
		elsif (ie_opcao_p = 'BINDS') then

			dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_protocolo', dados_consistencia_p.nr_seq_protocolo);
		end if;
	end if;
		-- Se for infromado o lote da função OPS - Produção - Processo contas médicas então busca apenas as contas que estiverem no lote.
	if (dados_consistencia_p.nr_seq_lote_processo IS NOT NULL AND dados_consistencia_p.nr_seq_lote_processo::text <> '') then

		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_conta :=	dados_restricao_w.ds_restricao_conta || pls_tipos_ocor_pck.enter_w ||
								'and     exists (select 1 ' || pls_tipos_ocor_pck.enter_w ||
								'		from   pls_cta_lote_proc_cta_temp processo ' || pls_tipos_ocor_pck.enter_w ||
								'		where  processo.nr_seq_conta = proc.nr_seq_conta)';
		elsif (ie_opcao_p = 'BINDS') then
			null;
		end if;
	end if;
	-- Se houver conta informada só irá consistir a conta e seus itens.
	if (dados_consistencia_p.nr_seq_conta IS NOT NULL AND dados_consistencia_p.nr_seq_conta::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_conta := dados_restricao_w.ds_restricao_conta || pls_util_pck.enter_w || 'and	proc.nr_seq_conta = :nr_seq_conta';
		elsif (ie_opcao_p = 'BINDS') then

			dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_conta', dados_consistencia_p.nr_seq_conta);
		end if;
	end if;

	if (dados_consistencia_p.nr_seq_analise IS NOT NULL AND dados_consistencia_p.nr_seq_analise::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_conta := dados_restricao_w.ds_restricao_conta || pls_util_pck.enter_w || 'and	proc.nr_seq_analise = :nr_seq_analise';
		elsif (ie_opcao_p = 'BINDS') then

			dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_analise', dados_consistencia_p.nr_seq_analise);
		end if;
	end if;

	-- Só irá verificar se é para verificar um único procedimento quando a incidência da regra permitir trabalhar com itens.
	if (dados_consistencia_p.nr_seq_conta_proc IS NOT NULL AND dados_consistencia_p.nr_seq_conta_proc::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then

			dados_restricao_w.ds_restricao_proc := dados_restricao_w.ds_restricao_proc || pls_util_pck.enter_w || 'and	proc.nr_sequencia = :nr_seq_conta_proc';
		elsif (ie_opcao_p = 'BINDS') then

			dbms_sql.bind_variable(nr_cursor_p, ':nr_seq_conta_proc', dados_consistencia_p.nr_seq_conta_proc);
		end if;
	end if;

end if;

return dados_restricao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_val_cta_obter_restr_padrao ( ie_opcao_p text, dados_consistencia_p pls_tipos_cta_val_pck.dados_consistencia, nr_id_transacao_p pls_rp_cta_selecao.nr_id_transacao%type, nr_cursor_p integer, dados_filtro_p pls_tipos_cta_val_pck.dados_filtro, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

