-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_obter_restr_conta ( ie_opcao_p text, dados_regra_p pls_tipos_ocor_pck.dados_regra, cursor_p integer, dados_filtro_conta_p pls_tipos_ocor_pck.dados_filtro_conta) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Montar as restri__es e binds dos campos de filtro de conta das ocorr_ncias
combinadas
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicion_rio [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relat_rios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de aten__o:
Quando houver campo IMP, n_o esquecer de tratar..

IE_OPCAO_P:
RESTRICAO -Obter restri__es
BIND - Atualizar Binds

Altera__es:
-------------------------------------------------------------------------------------------------------------------

jjung OS 631698 - 20/09/2013 -

Altera__o:	* Campo CD_CID:	Removido function que fazia a verifica__o. Substitu_do por um 
			exsists na PLS_DIAGNOSTICO_CONTA
			
	** Campo NR_SEQ_GRUPO_DOENCA:	 Foi criado a restri__o para buscar os CIDs do
					do grupo de doen_a e verificar se os mesmos existem
					no diagn_stico.
					
Motivo:	* Campo CD_CID	Foi identificado durante o desenvolvimento do  campo
			NR_SEQ_GRUPO_DOENCA que a function que era usada,
			al_m de deixar a consulta mais lenta, poderia retornar algo errado
			tendo em vista que ela fazia um max(CD_DOENCA)  na  function
			portanto n_o funcionava na importa__o e n_o funciona
			quando tem mais de um cid diferente na conta.
			
	** Campo NR_SEQ_GRUPO_DOENCA:	Solicita__o da Unimed Litoral, pois o campo 
					N_o funciona corretamente na estrutura antiga.
-------------------------------------------------------------------------------------------------------------------

jjung 680507 - 04/02/2014 -

Altera__o: 	Campo ie_internado para importa__o XML

Motivo:	Ao desenvolver o tratamento do campo IE_INTERNAD n_o foi previsto que o mesmo 
	poderia mudar na importa__o do XML.
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_restricao_w		varchar(4000);


BEGIN

-- Inicializar as vari_veis.
ds_restricao_w := null;

if (dados_filtro_conta_p.nr_sequencia IS NOT NULL AND dados_filtro_conta_p.nr_sequencia::text <> '') then
	/* Tipo de Guia */

	if (dados_filtro_conta_p.ie_tipo_guia IS NOT NULL AND dados_filtro_conta_p.ie_tipo_guia::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.ie_tipo_guia = :ie_tipo_guia';
		else
			dbms_sql.bind_variable(cursor_p, ':ie_tipo_guia', dados_filtro_conta_p.ie_tipo_guia);
		end if;
	end if;
	/* Regime Interna__o */

	if (dados_filtro_conta_p.ie_regime_internacao IS NOT NULL AND dados_filtro_conta_p.ie_regime_internacao::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			/* Se a regra for para Importa__o do XML tem que filtrar o campo IMP */

			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_regime_internacao_imp = :ie_regime_internacao';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_regime_internacao = :ie_regime_internacao';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_regime_internacao', dados_filtro_conta_p.ie_regime_internacao);
		end if;
	end if;
	/* Tipo interna__o */

	if (dados_filtro_conta_p.ie_tipo_internado IS NOT NULL AND dados_filtro_conta_p.ie_tipo_internado::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.ie_tipo_internado = :ie_tipo_internado';
		else
			dbms_sql.bind_variable(cursor_p, ':ie_tipo_internado', dados_filtro_conta_p.ie_tipo_internado);
		end if;
	end if;
	/* Car_ter Interna__o */

	if (dados_filtro_conta_p.ie_carater_internacao IS NOT NULL AND dados_filtro_conta_p.ie_carater_internacao::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_carater_internacao_imp = :ie_carater_internacao';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_carater_internacao = :ie_carater_internacao';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_carater_internacao', dados_filtro_conta_p.ie_carater_internacao);
		end if;
	end if;
	/* Tipo consulta */

	if (dados_filtro_conta_p.ie_tipo_consulta IS NOT NULL AND dados_filtro_conta_p.ie_tipo_consulta::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_tipo_consulta_imp = :ie_tipo_consulta';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_tipo_consulta = :ie_tipo_consulta';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_tipo_consulta', dados_filtro_conta_p.ie_tipo_consulta);
		end if;
	end if;
	/* Motivo sa_da Interna__o */

	if (dados_filtro_conta_p.nr_seq_saida_int IS NOT NULL AND dados_filtro_conta_p.nr_seq_saida_int::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.nr_seq_saida_int = :nr_seq_saida_int';
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_saida_int', dados_filtro_conta_p.nr_seq_saida_int);
		end if;
	end if;
	/* Indica__o Cl_nica */

	if (dados_filtro_conta_p.nr_seq_clinica IS NOT NULL AND dados_filtro_conta_p.nr_seq_clinica::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.nr_seq_clinica_imp = :nr_seq_clinica';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.nr_seq_clinica = :nr_seq_clinica';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_clinica', dados_filtro_conta_p.nr_seq_clinica);
		end if;
	end if;
	/* Interna__o Obst_trica */

	if (dados_filtro_conta_p.ie_internacao_obstetrica = 'S') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.ie_internacao_obstetrica = :ie_internacao_obstetrica';
		else
			dbms_sql.bind_variable(cursor_p, ':ie_internacao_obstetrica', dados_filtro_conta_p.ie_internacao_obstetrica);
		end if;
	end if;
	
	/* Verifica se o benefici_rio esta internado  */

	if (dados_filtro_conta_p.ie_internado = 'S') then
		if (ie_opcao_p = 'RESTRICAO') then
		
			if (dados_regra_p.ie_evento = 'IMP') then
			
			
				ds_restricao_w	:= ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						' and conta.ie_internado_imp = ''S'' ';
			else
				ds_restricao_w	:= ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						' and conta.ie_internado = ''S'' ';
			end if;
		end if;
	end if;
	
	/* Tipo acomoda__o */

	if (dados_filtro_conta_p.nr_seq_tipo_acomod_conta IS NOT NULL AND dados_filtro_conta_p.nr_seq_tipo_acomod_conta::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.nr_seq_tipo_acomod_imp = :nr_seq_tipo_acomodacao';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.nr_seq_tipo_acomodacao = :nr_seq_tipo_acomodacao';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_tipo_acomodacao', dados_filtro_conta_p.nr_seq_tipo_acomod_conta);
		end if;
	end if;
	/* Origem conta */

	if (dados_filtro_conta_p.ie_origem_conta IS NOT NULL AND dados_filtro_conta_p.ie_origem_conta::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.ie_origem_conta = :ie_origem_conta';
		else
			dbms_sql.bind_variable(cursor_p, ':ie_origem_conta', dados_filtro_conta_p.ie_origem_conta);
		end if;
	end if;
	/* Tipo conta */

	if (dados_filtro_conta_p.ie_tipo_conta IS NOT NULL AND dados_filtro_conta_p.ie_tipo_conta::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.ie_tipo_conta = :ie_tipo_conta';
		else
			dbms_sql.bind_variable(cursor_p, ':ie_tipo_conta', dados_filtro_conta_p.ie_tipo_conta);
		end if;
	end if;
	/* Tipo Atendimento */

	if (dados_filtro_conta_p.nr_seq_tipo_atendimento IS NOT NULL AND dados_filtro_conta_p.nr_seq_tipo_atendimento::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.nr_seq_tipo_atend_imp = :nr_seq_tipo_atendimento';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.nr_seq_tipo_atendimento = :nr_seq_tipo_atendimento';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_tipo_atendimento', dados_filtro_conta_p.nr_seq_tipo_atendimento);
		end if;
	end if;
	/* Regime Atendimento */

	if (dados_filtro_conta_p.nr_seq_tipo_atendimento IS NOT NULL AND dados_filtro_conta_p.nr_seq_tipo_atendimento::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_regime_atendimento = :ie_regime_atendimento';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_regime_atendimento = :ie_regime_atendimento';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_regime_atendimento', dados_filtro_conta_p.ie_regime_atendimento);
		end if;
	end if;
	/* Saude ocupacional */
	
	if (dados_filtro_conta_p.ie_saude_ocupacional IS NOT NULL AND dados_filtro_conta_p.ie_saude_ocupacional::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_saude_ocupacional = :ie_saude_ocupacional';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_saude_ocupacional1 = :ie_saude_ocupacional';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_saude_ocupacional', dados_filtro_conta_p.ie_saude_ocupacional);
		end if;
	end if;
	/* CID */

	if (dados_filtro_conta_p.cd_doenca_cid IS NOT NULL AND dados_filtro_conta_p.cd_doenca_cid::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			
			-- Quando a ocorr_ncia for gerada durante a importa__o deve se olhar para o campo IMP, 

			-- Do contr_rio se olha no campo quente.
			if (dados_regra_p.ie_evento = 'IMP') then
			
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	exists ( ' || pls_tipos_ocor_pck.enter_w || 
							'		select	1 ' || pls_tipos_ocor_pck.enter_w || 
							'		from	pls_diagnostico_conta diag ' || pls_tipos_ocor_pck.enter_w || 
							'		where	diag.nr_seq_conta = conta.nr_sequencia ' || pls_tipos_ocor_pck.enter_w || 
							'		and	diag.cd_doenca_imp = :cd_doenca_cid ' || pls_tipos_ocor_pck.enter_w || 
							'	) ';
			else
			
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w || 
							'and	exists ( ' || pls_tipos_ocor_pck.enter_w || 
							'		select	1 ' || pls_tipos_ocor_pck.enter_w || 
							'		from	pls_diagnostico_conta diag ' || pls_tipos_ocor_pck.enter_w || 
							'		where	diag.nr_seq_conta = conta.nr_sequencia ' || pls_tipos_ocor_pck.enter_w || 
							'		and	diag.cd_doenca = :cd_doenca_cid ' || pls_tipos_ocor_pck.enter_w || 
							'	) ';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':cd_doenca_cid', dados_filtro_conta_p.cd_doenca_cid);
		end if;
	end if;
	
	-- Grupo doen_a
	if (dados_filtro_conta_p.nr_seq_grupo_doenca IS NOT NULL AND dados_filtro_conta_p.nr_seq_grupo_doenca::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			
			-- Quando a ocorr_ncia for gerada durante a importa__o deve se olhar para o campo IMP, 

			-- Do contr_rio se olha no campo quente.
			if (dados_regra_p.ie_evento = 'IMP') then
			
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	exists ( ' || pls_tipos_ocor_pck.enter_w || 
							'		select	1 ' || pls_tipos_ocor_pck.enter_w || 
							'		from	pls_diagnostico_conta	diag, ' || pls_tipos_ocor_pck.enter_w || 
							'			pls_preco_doenca_v	grupo ' || pls_tipos_ocor_pck.enter_w || 
							'		where	diag.nr_seq_conta	= conta.nr_sequencia ' || pls_tipos_ocor_pck.enter_w || 
							'		and	grupo.nr_seq_grupo	= :nr_seq_grupo ' || pls_tipos_ocor_pck.enter_w || 
							'		and	diag.cd_doenca_imp	= grupo.cd_doenca_cid ' || pls_tipos_ocor_pck.enter_w || 
							'	) ';
			else
			
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w || 
							'and	exists ( ' || pls_tipos_ocor_pck.enter_w || 
							'		select	1 ' || pls_tipos_ocor_pck.enter_w || 
							'		from	pls_diagnostico_conta	diag, ' || pls_tipos_ocor_pck.enter_w || 
							'			pls_preco_doenca_v	grupo ' || pls_tipos_ocor_pck.enter_w || 
							'		where	diag.nr_seq_conta	= conta.nr_sequencia ' || pls_tipos_ocor_pck.enter_w || 
							'		and	grupo.nr_seq_grupo	= :nr_seq_grupo ' || pls_tipos_ocor_pck.enter_w || 
							'		and	diag.cd_doenca		= grupo.cd_doenca_cid ' || pls_tipos_ocor_pck.enter_w || 
							'	) ';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo', dados_filtro_conta_p.nr_seq_grupo_doenca);
		end if;
	end if;
	
	/* Indicacao acidente */

	if (dados_filtro_conta_p.ie_indicacao_acidente IS NOT NULL AND dados_filtro_conta_p.ie_indicacao_acidente::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			if (dados_regra_p.ie_evento = 'IMP') then
				ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_indicacao_acidente_imp = :ie_indicacao_acidente';
			else
				ds_restricao_w	:= 	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
							'and	conta.ie_indicacao_acidente = :ie_indicacao_acidente';
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_indicacao_acidente', dados_filtro_conta_p.ie_indicacao_acidente);
		end if;
	end if;
	
	
	if (dados_filtro_conta_p.ie_conta_autorizada IS NOT NULL AND dados_filtro_conta_p.ie_conta_autorizada::text <> '') then
		begin
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w	:=	ds_restricao_w || pls_tipos_ocor_pck.enter_w ||
						'and	conta.nr_seq_guia is not null';
		end if;
		
		end;
	end if;
end if;

return	ds_restricao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_obter_restr_conta ( ie_opcao_p text, dados_regra_p pls_tipos_ocor_pck.dados_regra, cursor_p integer, dados_filtro_conta_p pls_tipos_ocor_pck.dados_filtro_conta) FROM PUBLIC;

