-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_existe_item_assoc ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_atendimento_p prescr_medica.nr_atendimento%type, nr_seq_horario_p prescr_proc_hor.nr_sequencia%type, ie_alteracao_p prescr_mat_alteracao.ie_alteracao%type) RETURNS varchar AS $body$
DECLARE


nr_sequencia_procedimento_w		prescr_proc_hor.nr_seq_procedimento%type;
dt_horario_procedimento_w		prescr_proc_hor.dt_horario%type;
cd_setor_paciente_w				atend_paciente_unidade.cd_setor_atendimento%type;

ie_existe_w						varchar(1);


BEGIN

ie_existe_w := 'N';

/*
Retorna 'S' se existir um item associado, com checagem separada na ADEP, que possui o mesmo horario do procedimento
*/
if (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then

	select	max(a.nr_seq_procedimento),
			max(a.dt_horario)
	into STRICT	nr_sequencia_procedimento_w,
			dt_horario_procedimento_w
	from	prescr_proc_hor a
	where	a.nr_sequencia = nr_seq_horario_p;

	if (nr_sequencia_procedimento_w IS NOT NULL AND nr_sequencia_procedimento_w::text <> '') then
		cd_setor_paciente_w := obter_unidade_atendimento(nr_atendimento_p, 'IA', 'CS');
		
		if (ie_alteracao_p = 3) then

			select	CASE WHEN count(b.nr_sequencia)=0 THEN  'N'  ELSE 'S' END  ie_existe_w
			into STRICT	ie_existe_w
			from	prescr_mat_hor c,
					prescr_material b,
					prescr_medica a
			where	c.nr_prescricao = b.nr_prescricao
			and		c.nr_seq_material = b.nr_sequencia
			and		b.nr_prescricao = a.nr_prescricao
			and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_w, a.cd_setor_atendimento, coalesce(a.ie_adep, 'S')) = 'S'
			and		b.ie_agrupador in (5, 15)
			and		coalesce(c.ie_situacao, 'A') = 'A'
			and		a.nr_prescricao = nr_prescricao_p
			and		coalesce(b.ie_checar_adep,'N') = 'S'
			and		b.nr_sequencia_proc = nr_sequencia_procedimento_w
			and		c.dt_horario = dt_horario_procedimento_w
			and		coalesce(c.ie_horario_especial,'N') <> 'S'
			and		obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
			and		coalesce(c.dt_fim_horario::text, '') = '';

		elsif (ie_alteracao_p = 4) then

			select	CASE WHEN count(b.nr_sequencia)=0 THEN  'N'  ELSE 'S' END  ie_existe_w
			into STRICT	ie_existe_w
			from	prescr_mat_hor c,
					prescr_material b,
					prescr_medica a
			where	c.nr_prescricao = b.nr_prescricao
			and		c.nr_seq_material = b.nr_sequencia
			and		b.nr_prescricao = a.nr_prescricao
			and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_w, a.cd_setor_atendimento, coalesce(a.ie_adep, 'S')) = 'S'
			and		b.ie_agrupador in (5, 15)
			and		coalesce(c.ie_situacao, 'A') = 'A'
			and		a.nr_prescricao = nr_prescricao_p
			and		coalesce(b.ie_checar_adep,'N') = 'S'
			and		b.nr_sequencia_proc = nr_sequencia_procedimento_w
			and		c.dt_horario = dt_horario_procedimento_w
			and		coalesce(c.ie_horario_especial,'N') <> 'S'
			and		obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
			and		(c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '');

		end if;
	end if;

end if;

return ie_existe_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_existe_item_assoc ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_atendimento_p prescr_medica.nr_atendimento%type, nr_seq_horario_p prescr_proc_hor.nr_sequencia%type, ie_alteracao_p prescr_mat_alteracao.ie_alteracao%type) FROM PUBLIC;

