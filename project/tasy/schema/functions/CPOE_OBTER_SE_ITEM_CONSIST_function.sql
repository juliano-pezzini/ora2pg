-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_se_item_consist ( nr_sequencia_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
															 
															 
/* DIETA */
													 
cd_dieta_w					bigint;
ds_dieta_w					varchar(80);

/* MATERIAL E SOLUÇÕES */
		 
cd_material_w				integer;
ds_material_w				varchar(100);

 
/* EXAMES E PROCEDIMENTOS */
 
nr_seq_proce_interno_w		bigint;
ds_procedimento_w			procedimento.ds_procedimento%TYPE;

/* RECOMENDAÇÕES */
 
cd_recomendacao_w			bigint;
ds_recomendacao_w			varchar(4000);

ds_retorno_w				varchar(4000);

c01 CURSOR FOR 
	SELECT		cd_dieta, 
				substr(obter_nome_dieta(cd_dieta),1,100) 
	from		cpoe_dieta 
	where		nr_sequencia 	=	nr_sequencia_p 
	and			ie_opcao_p		=	'DIE';
	
c02 CURSOR FOR 
	SELECT		cd_material, 
				substr(obter_desc_material(cd_material),1,100) 
	from		cpoe_material 
	where		nr_sequencia 	=	nr_sequencia_p 
	and			ie_opcao_p		=	'SOL';

 
c03 CURSOR FOR 
	SELECT		cd_material, 
				substr(obter_desc_material(cd_material),1,100) 
	from		cpoe_material 
	where		nr_sequencia 	=	nr_sequencia_p 
	and			ie_opcao_p		=	'MED';
	
c04 CURSOR FOR 
	SELECT		nr_seq_proc_interno, 
				substr(obter_desc_proc_interno(nr_seq_proc_interno),1,255) 
	from		cpoe_procedimento 
	where		nr_sequencia 	=	nr_sequencia_p 
	and			ie_opcao_p		=	'PROC';
	
c05 CURSOR FOR 
	SELECT		cd_recomendacao, 
				substr(obter_desc_recomendacao(cd_recomendacao),1,255) 
	from		cpoe_recomendacao 
	where		nr_sequencia 	=	nr_sequencia_p 
	and			ie_opcao_p		=	'REC';
	

BEGIN 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then 
 
	open c01;
	loop 
	fetch c01 into	 
		cd_dieta_w, 
		ds_dieta_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			if (cd_dieta_w = 11) then 
			 
				ds_retorno_w 	:= Wheb_mensagem_pck.get_texto(307264, 'DS_DIETA_W='||ds_dieta_w); --'A dieta ' || ds_dieta_w || ' esta com inconsistências !'; 
			
			end if;
			end;
		end loop;
	close c01;
 
	open c02;
	loop 
	fetch c02 into	 
		cd_material_w, 
		ds_material_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
 
			if (cd_material_w = 66) then 
 
				ds_retorno_w 	:= Wheb_mensagem_pck.get_texto(307266, 'DS_MATERIAL_W='||ds_material_w); --'A solução ' || ds_material_w || ' esta com inconsistências !'; 
			end if;
			end;
		end loop;
	close c02;
 
	open c03;
	loop 
	fetch c03 into	 
		cd_material_w, 
		ds_material_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin 
 
			if (cd_material_w = 66) then 
 
				ds_retorno_w 	:= Wheb_mensagem_pck.get_texto(307269, 'DS_MATERIAL_W='||ds_material_w); --'O medicamento ' || ds_material_w || ' esta com inconsistências !'; 
			end if;
			end;
		end loop;
	close c03;
	 
	open c04;
	loop 
	fetch c04 into	 
		nr_seq_proce_interno_w, 
		ds_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin 
 
			if (nr_seq_proce_interno_w = 65) then 
 
				ds_retorno_w 	:= Wheb_mensagem_pck.get_texto(307272, 'DS_PROCEDIMENTO_W='||ds_procedimento_w); --'O procedimento ' || ds_procedimento_w || ' esta com inconsistências !'; 
			end if;
			end;
		end loop;
	close c04;
 
	open c05;
	loop 
	fetch c05 into	 
		cd_recomendacao_w, 
		ds_recomendacao_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin 
 
			if (cd_recomendacao_w = 4) then 
 
				ds_retorno_w 	:= Wheb_mensagem_pck.get_texto(307275, 'DS_RECOMENDACAO_W='||ds_recomendacao_w); --'A recomendação ' || ds_recomendacao_w || ' esta com inconsistências !'; 
			end if;
			end;
		end loop;
	close c05;
	 
end if;
 
if (coalesce(ds_retorno_w::text, '') = '') then 
	ds_retorno_w := 'N';
end if;
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_se_item_consist ( nr_sequencia_p bigint, ie_opcao_p text) FROM PUBLIC;

