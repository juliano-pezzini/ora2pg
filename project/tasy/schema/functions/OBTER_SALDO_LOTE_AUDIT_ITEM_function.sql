-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_saldo_lote_audit_item ( nr_seq_lote_item_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

 
/*	ie_opcao_p 
'SI'	saldo inicial (saldo do item antes dele entrar na reapresentação de contas) 
'SA'	saldo atual do procedimento/material dentro do lote (considerando todas as análises do lote) 
'SAR'	saldo atual real (vl_amenor) 
'SIA'	saldo inicial do item dentro de uma mesma análise (antes de alterar os valores pago e glosado) 
'SAN'	saldo anterior à análise atual 
'SNN'	saldo atual do item dentro da análise 
'SIP'	saldo do item na análise anterior 
*/
 
 
vl_amenor_w		double precision;
vl_glosa_w		double precision;
vl_pago_w		double precision;
vl_retorno_w		double precision;
nr_seq_ret_glosa_w	bigint;
nr_seq_propaci_w	bigint;
nr_seq_matpaci_w	bigint;
nr_seq_lote_w		bigint;
nr_seq_analise_w	bigint;
nr_analise_w		bigint;
vl_saldo_titulo_w	double precision;
nr_titulo_w		bigint;
vl_saldo_w		double precision;


BEGIN 
 
select	max(a.nr_seq_ret_glosa), 
	max(a.nr_seq_propaci), 
	max(a.nr_seq_matpaci), 
	max(c.nr_seq_lote_audit), 
	max(c.nr_sequencia), 
	max(c.nr_analise), 
	max((obter_titulo_conta_guia(b.nr_interno_conta,b.cd_autorizacao,null,null))::numeric ), 
	max(vl_saldo) 
into STRICT	nr_seq_ret_glosa_w, 
	nr_seq_propaci_w, 
	nr_seq_matpaci_w, 
	nr_seq_lote_w, 
	nr_seq_analise_w, 
	nr_analise_w, 
	nr_titulo_w, 
	vl_saldo_w 
from	lote_audit_hist c, 
	lote_audit_hist_guia b, 
	lote_audit_hist_item a 
where	a.nr_sequencia		= nr_seq_lote_item_p 
and	a.nr_seq_guia		= b.nr_sequencia 
and	b.nr_seq_lote_hist		= c.nr_sequencia;
 
if (coalesce(nr_seq_ret_glosa_w,0) > 0) and (ie_opcao_p <> 'SAN') and (ie_opcao_p <> 'SNN') then /* se for de retorno com saldo, busca do item glosado */
 
 
	select	a.vl_glosa 
	into STRICT	vl_amenor_w 
	from	convenio_retorno_glosa a 
	where	a.nr_sequencia		= nr_seq_ret_glosa_w;
 
else	/* senão busca do próprio procedimento/material */
 
 
	select	coalesce(vl_item,0) 
	into STRICT	vl_amenor_w 
	from (SELECT	a.vl_procedimento vl_item 
		from	procedimento_paciente a 
		where	a.nr_sequencia	= nr_seq_propaci_w 
		
union
 
		SELECT	a.vl_material vl_item 
		from	material_atend_paciente a 
		where	a.nr_sequencia	= nr_seq_matpaci_w) alias1;
 
end if;
 
if (ie_opcao_p = 'SI') then 
	vl_retorno_w	:= vl_amenor_w;
 
elsif (ie_opcao_p = 'SA') then 
 
	select	coalesce(sum(a.vl_glosa),0), 
		coalesce(sum(a.vl_pago),0) 
	into STRICT	vl_glosa_w, 
		vl_pago_w 
	from	lote_audit_hist c, 
		lote_audit_hist_guia b, 
		lote_audit_hist_item a 
	where (a.nr_seq_propaci = nr_seq_propaci_w or a.nr_seq_matpaci = nr_seq_matpaci_w) 
	and	a.nr_seq_guia		= b.nr_sequencia 
	and	b.nr_seq_lote_hist		= c.nr_sequencia 
	and	c.nr_seq_lote_audit	= nr_seq_lote_w;
 
	vl_retorno_w	:= (vl_amenor_w - vl_glosa_w - vl_pago_w);
 
elsif (ie_opcao_p = 'SAR') then 
 
	select	a.vl_amenor 
	into STRICT	vl_retorno_w 
	from	lote_audit_hist_item a 
	where	a.nr_sequencia	= nr_seq_lote_item_p;
 
elsif (ie_opcao_p = 'SIA') then 
 
	if (coalesce(nr_analise_w,1) = 1) then	/* se for a primeira análise, busca o saldo do retorno convênio, antes de entra na reapresentação de contas */
 
	 
		select	max(a.vl_saldo_titulo) 
		into STRICT	vl_saldo_titulo_w 
		from	titulo_receber a 
		where	a.nr_titulo	= nr_titulo_w;
 
		if (coalesce(vl_saldo_titulo_w,0) = 0) and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
			vl_retorno_w	:= 0;
		else 
			vl_retorno_w	:= coalesce(vl_saldo_w, vl_amenor_w);
		end if;
	else					/* senão, busca o saldo da análise anterior */
 
		select	coalesce(max(a.vl_amenor),0) 
		into STRICT	vl_retorno_w 
		from	lote_audit_hist c, 
			lote_audit_hist_guia b, 
			lote_audit_hist_item a 
		where (a.nr_seq_propaci = nr_seq_propaci_w or a.nr_seq_matpaci = nr_seq_matpaci_w) 
		and	a.nr_seq_guia		= b.nr_sequencia 
		and	b.nr_seq_lote_hist		= c.nr_sequencia 
		and	c.nr_seq_lote_audit	= nr_seq_lote_w 
		and	c.nr_analise		= nr_analise_w - 1;
	end if;
 
elsif (ie_opcao_p = 'SAN') then 
 
	select	sum(vl_glosa), 
		sum(vl_pago) 
	into STRICT	vl_glosa_w, 
		vl_pago_w 
	from (SELECT	CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa END  vl_glosa, 
			coalesce((obter_dados_ret_movto_glosa(a.nr_sequencia, 3))::numeric ,0) vl_pago 
		from	convenio_retorno d, 
			convenio_retorno_item c, 
			motivo_glosa b, 
			convenio_retorno_glosa a 
		where	a.nr_seq_propaci	= nr_seq_propaci_w 
		and	a.cd_motivo_glosa	= b.cd_motivo_glosa 
		and	a.nr_seq_ret_item	= c.nr_sequencia 
		and	c.nr_seq_retorno	= d.nr_sequencia 
		and	d.ie_status_retorno	= 'F' 
		
union
 
		SELECT	CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa END  vl_glosa, 
			coalesce((obter_dados_ret_movto_glosa(a.nr_sequencia, 3))::numeric ,0) vl_pago 
		from	convenio_retorno d, 
			convenio_retorno_item c, 
			motivo_glosa b, 
			convenio_retorno_glosa a 
		where	a.nr_seq_matpaci	= nr_seq_matpaci_w 
		and	a.cd_motivo_glosa	= b.cd_motivo_glosa 
		and	a.nr_seq_ret_item	= c.nr_sequencia 
		and	c.nr_seq_retorno	= d.nr_sequencia 
		and	d.ie_status_retorno	= 'F' 
		
union
 
		select	a.vl_glosa, 
			a.vl_pago 
		from	lote_audit_hist c, 
			lote_audit_hist_guia b, 
			lote_audit_hist_item a 
		where	a.nr_seq_propaci	= nr_seq_propaci_w 
		and	a.nr_seq_guia		= b.nr_sequencia 
		and	b.nr_seq_lote_hist	= c.nr_sequencia 
		and	c.nr_analise		< nr_analise_w 
		and	(c.dt_envio IS NOT NULL AND c.dt_envio::text <> '') 
		
union
 
		select	a.vl_glosa, 
			a.vl_pago 
		from	lote_audit_hist c, 
			lote_audit_hist_guia b, 
			lote_audit_hist_item a 
		where	a.nr_seq_matpaci	= nr_seq_matpaci_w 
		and	a.nr_seq_guia		= b.nr_sequencia 
		and	b.nr_seq_lote_hist	= c.nr_sequencia 
		and	c.nr_analise		< nr_analise_w 
		and	(c.dt_envio IS NOT NULL AND c.dt_envio::text <> '')) alias13;
 
	vl_retorno_w	:= coalesce(vl_amenor_w,0) - coalesce(vl_glosa_w,0) - coalesce(vl_pago_w,0);
 
elsif (ie_opcao_p = 'SNN') then 
 
	select	sum(vl_glosa), 
		sum(vl_pago) 
	into STRICT	vl_glosa_w, 
		vl_pago_w 
	from (SELECT	CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa END  vl_glosa, 
			coalesce((obter_dados_ret_movto_glosa(a.nr_sequencia, 3))::numeric ,0) vl_pago 
		from	convenio_retorno d, 
			convenio_retorno_item c, 
			motivo_glosa b, 
			convenio_retorno_glosa a 
		where	a.nr_seq_propaci	= nr_seq_propaci_w 
		and	a.cd_motivo_glosa	= b.cd_motivo_glosa 
		and	a.nr_seq_ret_item	= c.nr_sequencia 
		and	c.nr_seq_retorno	= d.nr_sequencia 
		and	d.ie_status_retorno	= 'F' 
		
union
 
		SELECT	CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa END  vl_glosa, 
			coalesce((obter_dados_ret_movto_glosa(a.nr_sequencia, 3))::numeric ,0) vl_pago 
		from	convenio_retorno d, 
			convenio_retorno_item c, 
			motivo_glosa b, 
			convenio_retorno_glosa a 
		where	a.nr_seq_matpaci	= nr_seq_matpaci_w 
		and	a.cd_motivo_glosa	= b.cd_motivo_glosa 
		and	a.nr_seq_ret_item	= c.nr_sequencia 
		and	c.nr_seq_retorno	= d.nr_sequencia 
		and	d.ie_status_retorno	= 'F' 
		
union
 
		select	a.vl_glosa, 
			a.vl_pago 
		from	lote_audit_hist c, 
			lote_audit_hist_guia b, 
			lote_audit_hist_item a 
		where	a.nr_seq_propaci	= nr_seq_propaci_w 
		and	a.nr_seq_guia		= b.nr_sequencia 
		and	b.nr_seq_lote_hist	= c.nr_sequencia 
		and	c.nr_analise		<= nr_analise_w 
		
union
 
		select	a.vl_glosa, 
			a.vl_pago 
		from	lote_audit_hist c, 
			lote_audit_hist_guia b, 
			lote_audit_hist_item a 
		where	a.nr_seq_matpaci	= nr_seq_matpaci_w 
		and	a.nr_seq_guia		= b.nr_sequencia 
		and	b.nr_seq_lote_hist	= c.nr_sequencia 
		and	c.nr_analise		<= nr_analise_w) alias11;
 
	vl_retorno_w	:= coalesce(vl_amenor_w,0) - coalesce(vl_glosa_w,0) - coalesce(vl_pago_w,0);
 
elsif (ie_opcao_p = 'SIP') then 
 
	if (nr_analise_w = 1) then 
 
		select	coalesce(max(a.vl_glosa_informada),0) 
		into STRICT	vl_retorno_w 
		from	lote_audit_hist_item a 
		where	a.nr_sequencia	= nr_seq_lote_item_p;
 
	else 
 
		select	coalesce(sum(vl_amenor),0) 
		into STRICT	vl_retorno_w 
		from (SELECT	c.vl_amenor 
			from	lote_audit_hist_item c, 
				lote_audit_hist_guia b, 
				lote_audit_hist a 
			where	a.nr_seq_lote_audit	= nr_seq_lote_w 
			and	a.nr_analise		= coalesce(nr_analise_w,2) - 1 
			and	a.nr_sequencia		= b.nr_seq_lote_hist 
			and	b.nr_sequencia		= c.nr_seq_guia 
			and	c.nr_seq_propaci	= nr_seq_propaci_w 
			
union all
 
			SELECT	c.vl_amenor 
			from	lote_audit_hist_item c, 
				lote_audit_hist_guia b, 
				lote_audit_hist a 
			where	a.nr_seq_lote_audit	= nr_seq_lote_w 
			and	a.nr_analise		= coalesce(nr_analise_w,2) - 1 
			and	a.nr_sequencia		= b.nr_seq_lote_hist 
			and	b.nr_sequencia		= c.nr_seq_guia 
			and	c.nr_seq_matpaci	= nr_seq_matpaci_w) alias4;
 
	end if;
 
end if;
 
return vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_lote_audit_item ( nr_seq_lote_item_p bigint, ie_opcao_p text) FROM PUBLIC;

