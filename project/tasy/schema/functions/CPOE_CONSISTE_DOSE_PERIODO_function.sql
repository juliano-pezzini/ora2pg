-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_consiste_dose_periodo ( nr_atendimento_p bigint, cd_material_p bigint, qt_dose_p bigint, cd_unid_med_dose_p text, ds_horarios_p text, ie_urgencia_p text, qt_dose_limite_p bigint, cd_unid_med_limite_p text, dt_inicio_p timestamp, nr_seq_cpoe_p bigint default null, ie_tipo_item_p text default null, nr_ocorrencia_p bigint default null, qt_dose_adicional_p bigint default null, cd_materiais_ficha_tecnica_p text default null) RETURNS varchar AS $body$
DECLARE


qt_dose_limite_w		double precision;
qt_dose_adm_w			double precision;
qt_total_dose_adm_w		double precision;
qt_total_dose_pres_w		double precision := 0;
qt_total_dose_sem_lib_w		double precision := 0;
cd_unid_med_dose_adm_w		prescr_mat_hor.cd_unidade_medida_dose%type;
dt_horario_w			prescr_mat_hor.dt_horario%type;
ds_horarios_w			prescr_material.ds_horarios%type;
ds_retorno_w			char(1)	:= 'N';
k				integer;
qt_dia_adic_w			bigint := 0;
ds_hora_w			varchar(07);
ie_urgente_w			char(1);
dt_inicio_valida_w		timestamp;
dt_fim_valida_w			timestamp;
ie_tipo_item_w			varchar(1) := 'X';
nr_seq_cpoe_atenrior_w		cpoe_material.nr_sequencia%type;
nr_ocorrencia_w			cpoe_material.nr_ocorrencia%type	:= coalesce(nr_ocorrencia_p,1);
qt_dose_adicional_w		cpoe_material.qt_dose_adicional%type;
cd_material_w           varchar(4000);

c01 CURSOR FOR
	SELECT (coalesce(a.qt_dose, 0) * coalesce(a.nr_ocorrencia, 1)) qt_dose,
			a.cd_unidade_medida
	from	cpoe_material_vig_v a,
            table(lista_pck.obter_lista_char(cd_material_w)) b
	where	a.nr_atendimento  = nr_atendimento_p
	and	a.cd_material = b.cd_registro
	and	((a.nr_sequencia <> nr_seq_cpoe_p AND a.ie_tipo_item <> ie_tipo_item_p)
						or (a.nr_sequencia <> nr_seq_cpoe_p AND a.ie_tipo_item = ie_tipo_item_p)
						or (a.nr_sequencia = nr_seq_cpoe_p AND a.ie_tipo_item <> ie_tipo_item_p))
	and coalesce(a.dt_liberacao::text, '') = ''
	and coalesce(a.dt_suspensao::text, '') = ''
	and coalesce(a.nr_seq_cpoe_anterior::text, '') = '';

c02 CURSOR FOR
	SELECT 	coalesce(sum(c.qt_dose),0),
			c.cd_unidade_medida_dose			
	from   	prescr_medica a,
			prescr_material b,
			prescr_mat_hor c,
            table(lista_pck.obter_lista_char(cd_material_w)) d
	where  	a.nr_prescricao = b.nr_prescricao
	and	a.nr_prescricao  = c.nr_prescricao
	and	c.nr_seq_material = b.nr_sequencia
	and	b.cd_material = d.cd_registro
	and	a.nr_atendimento = nr_atendimento_p
	and	((b.ie_acm = 'N' and b.ie_se_necessario = 'N') or (b.ie_acm = 'S' or b.ie_se_necessario = 'S'))
	and	c.dt_horario between dt_inicio_valida_w + (1/86000) and dt_fim_valida_w + (1/86000)
	and	c.ie_horario_especial	= 'N'
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	coalesce(c.dt_suspensao::text, '') = ''
	and	((coalesce(nr_seq_cpoe_p::text, '') = '' or coalesce(ie_tipo_item_p::text, '') = '' or  ie_tipo_item_w = 'X') or (ie_tipo_item_w = 'M' and b.nr_seq_mat_cpoe not in (coalesce(nr_seq_cpoe_atenrior_w, 0), nr_seq_cpoe_p)) or (ie_tipo_item_w = 'P' and not exists (SELECT 1 from prescr_procedimento x where x.nr_prescricao = b.nr_prescricao and x.nr_sequencia = b.nr_sequencia_proc and x.nr_seq_proc_cpoe in (coalesce(nr_seq_cpoe_atenrior_w, 0), nr_seq_cpoe_p))) or (ie_tipo_item_w = 'G' and not exists (select 1 from prescr_gasoterapia x where x.nr_prescricao = b.nr_prescricao and x.nr_sequencia = b.nr_seq_gasoterapia and x.nr_seq_gas_cpoe in (coalesce(nr_seq_cpoe_atenrior_w, 0), nr_seq_cpoe_p))))
	group by	c.cd_unidade_medida_dose;


BEGIN
if (ie_tipo_item_p in ('MCOMP1', 'MCOMP2', 'MCOMP3', 'MCOMP4', 'MCOMP5', 'MCOMP6', 'MDIL', 'MAT', 'MRECONS')) then
	ie_tipo_item_w := 'M';
	
	select	max(nr_seq_cpoe_anterior)
	into STRICT	nr_seq_cpoe_atenrior_w
	from	cpoe_material
	where	nr_sequencia = nr_seq_cpoe_p;
elsif (ie_tipo_item_p in ('PMAT1', 'PMAT2', 'PMAT3', 'PMAT4', 'PMAT5')) then
	ie_tipo_item_w := 'P';
	
	select	max(nr_seq_cpoe_anterior)
	into STRICT	nr_seq_cpoe_atenrior_w
	from	cpoe_procedimento
	where	nr_sequencia = nr_seq_cpoe_p;
elsif (ie_tipo_item_p in ('GMAT1', 'GMAT2', 'GMAT3')) then
	ie_tipo_item_w := 'G';
	
	select	max(nr_seq_cpoe_anterior)
	into STRICT	nr_seq_cpoe_atenrior_w
	from	cpoe_gasoterapia
	where	nr_sequencia = nr_seq_cpoe_p;
end if;

if (nr_ocorrencia_w	<= 0) then
	nr_ocorrencia_w	:= 1;
end if;

if (cd_materiais_ficha_tecnica_p IS NOT NULL AND cd_materiais_ficha_tecnica_p::text <> '') then
    cd_material_w := cd_materiais_ficha_tecnica_p;
else
    cd_material_w := to_char(cd_material_p);
end if;

qt_dose_limite_w := obter_conversao_unid_med_cons(cd_material_p, cd_unid_med_limite_p, qt_dose_limite_p);

qt_dose_adicional_w := obter_conversao_unid_med_cons(cd_material_p, cd_unid_med_dose_p, coalesce(qt_dose_adicional_p, 0));

ds_horarios_w	:= replace(replace(replace(ds_horarios_p,'  ',' '),'  ',' '),'  ',' ');

if (ds_horarios_p <> 'ACM') and (ds_horarios_p <> 'SN') and (ds_horarios_p IS NOT NULL AND ds_horarios_p::text <> '')	then	
	select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_inicio_p,'dd/mm/yyyy hh24:mi')) || ' '
	into STRICT	ds_horarios_w
	;

	begin
		if (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '' AND ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') then
			open c01;
			loop
			fetch c01 into	
				qt_dose_adm_w,
				cd_unid_med_dose_adm_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				qt_total_dose_sem_lib_w	:= qt_total_dose_sem_lib_w + obter_conversao_unid_med_cons(cd_material_p, cd_unid_med_dose_adm_w, qt_dose_adm_w);														
			end;
			end loop;
			close c01;
		end if;
	exception when others then
		qt_total_dose_sem_lib_w := 0;
	end;
	
	while (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') loop
	begin
				
		select	position(' ' in ds_horarios_w)
		into STRICT	k
		;
		
		if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
		begin
				
			ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
			ds_hora_w		:= replace(ds_hora_w, ' ','');
			ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
			if (coalesce(ie_urgente_w,'N') = 'N') then
			
				if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w	= 0) then
					qt_dia_adic_w	:= 1;
				elsif (position('AA' in ds_hora_w) > 0) then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;
			
			end if;
			
			ds_hora_w	:= replace(ds_hora_w,'A','');
			ds_hora_w	:= replace(ds_hora_w,'A','');

			dt_horario_w	:= pkg_date_utils.get_time(dt_inicio_p + qt_dia_adic_w, replace(ds_hora_w, 'A', ''), 0);
										
			qt_total_dose_adm_w := 0;
			qt_total_dose_pres_w := qt_total_dose_pres_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_p,qt_dose_p);
						
			if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
				ds_retorno_w	:=  'S';
			else
				dt_inicio_valida_w := dt_horario_w - 1;
				dt_fim_valida_w := dt_horario_w;
				open c02;
				loop
				fetch c02 into	
					qt_dose_adm_w,
					cd_unid_med_dose_adm_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
					qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_adm_w,qt_dose_adm_w);												
										
					if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3) + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
						ds_retorno_w	:=  'S';
					end if;
					
				end;
				end loop;
				close c02;
				
				if (ds_retorno_w = 'N') then
					qt_total_dose_adm_w := 0;
					dt_inicio_valida_w := dt_horario_w;
					dt_fim_valida_w := dt_horario_w + 1;
					open c02;
					loop
					fetch c02 into	
						qt_dose_adm_w,
						cd_unid_med_dose_adm_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
					begin
						qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_adm_w,qt_dose_adm_w);												
											
						if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3) + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
							ds_retorno_w	:=  'S';
						end if;
						
					end;
					end loop;
					close c02;
					
					if (ds_retorno_w = 'N') then
						qt_total_dose_adm_w := 0;
						dt_inicio_valida_w := dt_horario_w - (12/24);
						dt_fim_valida_w := dt_horario_w + (12/24);
						open c02;
						loop
						fetch c02 into	
							qt_dose_adm_w,
							cd_unid_med_dose_adm_w;
						EXIT WHEN NOT FOUND; /* apply on c02 */
						begin
							qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_adm_w,qt_dose_adm_w);												
												
							if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3) + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
								ds_retorno_w	:=  'S';
							end if;
							
						end;
						end loop;
						close c02;
					end if;					
				end if;
			end if;

		end;
		elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then				
			ds_horarios_w		:= '';
		end if;
		
	end;
	end loop;
	
elsif (coalesce(ds_horarios_p::text, '') = '') then
	dt_horario_w := dt_inicio_p;
	qt_total_dose_adm_w := 0;
	qt_total_dose_pres_w := obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_p,(qt_dose_p * nr_ocorrencia_w));

	begin
		if (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '' AND ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') then
			open c01;
			loop
			fetch c01 into	
				qt_dose_adm_w,
				cd_unid_med_dose_adm_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				qt_total_dose_sem_lib_w	:= qt_total_dose_sem_lib_w + obter_conversao_unid_med_cons(cd_material_p, cd_unid_med_dose_adm_w, qt_dose_adm_w);														
			end;
			end loop;
			close c01;
		end if;
	exception when others then
		qt_total_dose_sem_lib_w := 0;
	end;
	
	if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
		ds_retorno_w	:=  'S';
	else
		dt_inicio_valida_w := dt_horario_w - 1;
		dt_fim_valida_w := dt_horario_w;
		open c02;
		loop
		fetch c02 into	
			qt_dose_adm_w,
			cd_unid_med_dose_adm_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
			qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_adm_w,qt_dose_adm_w);												
								
			if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3)  + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
				ds_retorno_w	:=  'S';
			end if;
			
		end;
		end loop;
		close c02;
		if (ds_retorno_w = 'N') then
			dt_inicio_valida_w := dt_horario_w;
			dt_fim_valida_w := dt_horario_w + 1;
			open c02;
			loop
			fetch c02 into	
				qt_dose_adm_w,
				cd_unid_med_dose_adm_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
				qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_adm_w,qt_dose_adm_w);												
									
				if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3)  + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
					ds_retorno_w	:=  'S';
				end if;
				
			end;
			end loop;
			close c02;
			if (ds_retorno_w = 'N') then
				dt_inicio_valida_w := dt_horario_w - (12/24);
				dt_fim_valida_w := dt_horario_w + (12/24);
				open c02;
				loop
				fetch c02 into	
					qt_dose_adm_w,
					cd_unid_med_dose_adm_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
					qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_p,cd_unid_med_dose_adm_w,qt_dose_adm_w);												
										
					if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3) + trunc(qt_total_dose_sem_lib_w, 3) + trunc(qt_dose_adicional_w, 3)) > trunc(qt_dose_limite_w,3)) then
						ds_retorno_w	:=  'S';
					end if;
					
				end;
				end loop;
				close c02;
			end if;
			
		end if;
	end if;	
end if;


return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_consiste_dose_periodo ( nr_atendimento_p bigint, cd_material_p bigint, qt_dose_p bigint, cd_unid_med_dose_p text, ds_horarios_p text, ie_urgencia_p text, qt_dose_limite_p bigint, cd_unid_med_limite_p text, dt_inicio_p timestamp, nr_seq_cpoe_p bigint default null, ie_tipo_item_p text default null, nr_ocorrencia_p bigint default null, qt_dose_adicional_p bigint default null, cd_materiais_ficha_tecnica_p text default null) FROM PUBLIC;

