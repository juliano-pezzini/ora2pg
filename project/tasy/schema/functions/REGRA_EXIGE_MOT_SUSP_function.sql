-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION regra_exige_mot_susp ( nr_sequencia_p bigint, nr_prescricao_p bigint, nm_tabela_p text) RETURNS varchar AS $body$
DECLARE

						
cd_grupo_material_w		smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
ie_exige_motivo_w		varchar(1);
nr_sequencia_w 	        integer;
item_w               	smallint;
cd_material_w           bigint;
nr_seq_proc_interno_w	prescr_procedimento.nr_seq_proc_interno%type;
cd_procedimento_w		prescr_procedimento.cd_procedimento%type;

c01 CURSOR FOR
	SELECT	coalesce(ie_exige_motivo,'N')
	from	regra_exige_motivo_susp
	where	coalesce(cd_material, cd_material_w)				= cd_material_w
	and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
	and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
	and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
	and 	coalesce(ie_tipo_item,item_w) 				= item_w
	order	by  coalesce(cd_material,0),
		    coalesce(cd_classe_material,0),
		    coalesce(cd_subgrupo_material,0),
		    coalesce(cd_grupo_material,0);

c02 CURSOR FOR
	SELECT 	null cd_material,
		nr_sequencia,
		12 item,
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_procedimento,0)
	from 	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_p
	and 	((upper(nm_tabela_p) = 'PRESCR_PROCEDIMENTO')
		or coalesce(nm_tabela_p::text, '') = '')
	and 	nr_sequencia = coalesce(nr_sequencia_p,nr_sequencia)
	
union all

	SELECT 	cd_material,
		nr_sequencia,
		CASE WHEN ie_agrupador=1 THEN 7  ELSE CASE WHEN ie_agrupador=4 THEN 16  ELSE CASE WHEN ie_agrupador=5 THEN 12  ELSE 0 END  END  END  item,
		null,
		null
	from 	prescr_material
	where 	nr_prescricao = nr_prescricao_p
	and 	((upper(nm_tabela_p) = 'PRESCR_MATERIAL')
		or coalesce(nm_tabela_p::text, '') = '')
	and 	nr_sequencia = coalesce(nr_sequencia_p,nr_sequencia)
	
union all

	select 	cd_material,
		nr_sequencia,
		16 item,
		null,
		null
	from 	prescr_material
	where 	nr_prescricao = nr_prescricao_p
	and 	((upper(nm_tabela_p) = 'PRESCR_SOLUCAO')
		or coalesce(nm_tabela_p::text, '') = '')
	and 	nr_sequencia_solucao = coalesce(nr_sequencia_p,nr_sequencia_solucao)	
	order by item;
	
c03 CURSOR FOR
	SELECT 	ie_exige_motivo
	from 	regra_exige_motivo_susp
	where 	ie_tipo_item = 12
	and (coalesce(nr_seq_proc_interno,nr_seq_proc_interno_w) = nr_seq_proc_interno_w
	or		coalesce(cd_procedimento,cd_procedimento_w) = cd_procedimento_w)
	order by dt_atualizacao;
		

BEGIN
	open c02;
	loop
	fetch c02 into
	cd_material_w,
	nr_sequencia_w,
	item_w,
	nr_seq_proc_interno_w,
	cd_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		if (item_w in (7,16)) then
			begin
			
				select	a.cd_grupo_material,
					a.cd_subgrupo_material,
					a.cd_classe_material
				into STRICT	cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w
				from 	estrutura_material_v a
				where 	a.cd_material = cd_material_w;
				
				open c01;				
				loop
				fetch c01 into
				ie_exige_motivo_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
					
					-- Caso seja prescrito dois itens sendo que um deles "não é" necessário justificar

					-- a suspensão, quando ele vier por último no cursor não vai exigir a justificativa

					--ao realizar a suspensão completa da prescrição.
					if	((coalesce(nr_sequencia_p,0) = 0) and (ie_exige_motivo_w = 'S')) then
						return ie_exige_motivo_w;
					end if;
					
					ie_exige_motivo_w := ie_exige_motivo_w;
					end;
				end loop;
				close c01;
			
			end;
		end if;
		
		if (item_w = 12) then
				open c03;
				loop
				fetch c03 into
				ie_exige_motivo_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin
					ie_exige_motivo_w := ie_exige_motivo_w;
					end;
				end loop;
				close c03;			
		end if;
		
	end loop;
	close c02;

return ie_exige_motivo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION regra_exige_mot_susp ( nr_sequencia_p bigint, nr_prescricao_p bigint, nm_tabela_p text) FROM PUBLIC;

