-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_vl_comprometido ( nr_seq_proj_rec_p bigint) RETURNS bigint AS $body$
DECLARE


/* Projeto Recurso */

vl_comprometido_proj_rec_w	projeto_recurso_saldo.vl_comprometido%type;

/* Solicitação de Compra */

vl_comprometido_solic_w		projeto_recurso_saldo.vl_comprometido%type;
nr_solic_compra_w		solic_compra.nr_solic_compra%type;
ie_cons_solic_acum_proj_rec_w   parametro_compras.ie_cons_solic_acum_proj_rec%type;

/* Ordem de Compra */

vl_comprometido_ordem_w		projeto_recurso_saldo.vl_comprometido%type;
nr_ordem_compra_w		ordem_compra.nr_ordem_compra%type;

/* Nota Fiscal */

vl_comprometido_nf_w		projeto_recurso_saldo.vl_comprometido%type;
nr_seq_nf_w			nota_fiscal.nr_sequencia%type;

/*Título a Pagar */

vl_comprometido_tit_pag_w	projeto_recurso_saldo.vl_comprometido%type;

/* Solicitação de Compra */

c01 CURSOR FOR
	SELECT  a.nr_solic_compra
	from    solic_compra a
	where   coalesce(a.nr_seq_motivo_cancel::text, '') = ''
	and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and     exists (SELECT  1
			from    solic_compra_item b
			where   b.nr_seq_proj_rec = nr_seq_proj_rec_p
			and     a.nr_solic_compra = b.nr_solic_compra);

/* Ordem de Compra */

c02 CURSOR FOR
	SELECT  a.nr_ordem_compra
	from    ordem_compra a
	where   (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and     coalesce(a.nr_seq_motivo_cancel::text, '') = ''
	and     exists (SELECT  1
			from    ordem_compra_item b
			where   a.nr_ordem_compra = b.nr_ordem_compra
			and     b.nr_seq_proj_rec = nr_seq_proj_rec_p);

/* Nota Fiscal */

c03 CURSOR FOR
	SELECT  a.nr_sequencia
	from    nota_fiscal a,
		operacao_nota b
	where   a.ie_situacao = 1
	and     (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '')
	and	a.cd_operacao_nf = b.cd_operacao_nf
	and	b.ie_operacao_fiscal = 'E'
	and     exists (SELECT 1
			from nota_fiscal_item b
			where a.nr_sequencia = b.nr_sequencia
			and b.nr_seq_proj_rec = nr_seq_proj_rec_p);



BEGIN

vl_comprometido_proj_rec_w := 0;
vl_comprometido_solic_w := 0;
vl_comprometido_ordem_w := 0;
vl_comprometido_nf_w := 0;

/* Solicitação de Compra */

select 	coalesce(ie_cons_solic_acum_proj_rec,'N')
into STRICT	ie_cons_solic_acum_proj_rec_w
from   	parametro_compras
where  	cd_estabelecimento = obter_estabelecimento_ativo();

if (ie_cons_solic_acum_proj_rec_w = 'S') then
	open C01;
	loop
	fetch C01 into
		nr_solic_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select obter_vl_comprometido_solic(nr_seq_proj_rec_p,nr_solic_compra_w)
		into STRICT vl_comprometido_solic_w
		;

		vl_comprometido_proj_rec_w := vl_comprometido_proj_rec_w + vl_comprometido_solic_w;

		end;
	end loop;
	close C01;
end if;

/* Ordem de Compra */

open C02;
loop
fetch C02 into
	nr_ordem_compra_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select obter_vl_comprometido_ordem(nr_seq_proj_rec_p,nr_ordem_compra_w)
	into STRICT vl_comprometido_ordem_w
	;

	vl_comprometido_proj_rec_w := vl_comprometido_proj_rec_w + vl_comprometido_ordem_w;

	end;
end loop;
close C02;

/* Nota Fiscal */

open C03;
loop
fetch C03 into
	nr_seq_nf_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select obter_vl_comprometido_nf(nr_seq_proj_rec_p,nr_seq_nf_w)
	into STRICT vl_comprometido_nf_w
	;

	vl_comprometido_proj_rec_w := vl_comprometido_proj_rec_w + vl_comprometido_nf_w;

	end;
end loop;
close C03;

select 	obter_vl_comprometido_tit_pag(nr_seq_proj_rec_p)
into STRICT 	vl_comprometido_tit_pag_w
;

/* Título a pagar gerados manualmente */

vl_comprometido_proj_rec_w := vl_comprometido_proj_rec_w + vl_comprometido_tit_pag_w;

return	vl_comprometido_proj_rec_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_vl_comprometido ( nr_seq_proj_rec_p bigint) FROM PUBLIC;

