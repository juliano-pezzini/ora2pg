-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prescr_proced_duplic ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_proced_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_exame_p text, dt_prev_execucao_p timestamp, qt_hora_proced_duplic_p bigint) RETURNS varchar AS $body$
DECLARE

	
dt_prev_execucao_w	timestamp;
ds_prescr_dupl_w		varchar(2000);
nr_prescricao_w		bigint;
nm_prescritor_w		varchar(90);
dt_prescricao_w		timestamp;

c01 CURSOR FOR
SELECT	a.nr_prescricao,
	a.dt_prescricao,
	substr(obter_nome_medico(a.cd_prescritor,'NC'),1,90)
from	prescr_procedimento b,
	prescr_medica a
where	b.nr_prescricao			= a.nr_prescricao
and	b.cd_procedimento			= cd_procedimento_p
and	b.ie_origem_proced			= ie_origem_proced_p
and	coalesce(b.cd_material_exame,'0')		= coalesce(cd_material_exame_p,'0')
and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prev_execucao)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p)	
and	a.nr_prescricao			<> nr_prescricao_p	
and	a.nr_atendimento			= nr_atendimento_p
and	coalesce(b.ie_modificado,'N')	<> 'S'
group by
	a.nr_prescricao,
	a.dt_prescricao,
	a.cd_prescritor
order by
	a.dt_prescricao desc,
	3;

c02 CURSOR FOR
SELECT	a.nr_prescricao,
	a.dt_prescricao,
	substr(obter_nome_medico(a.cd_prescritor,'NC'),1,90)
from	prescr_procedimento b,
	prescr_medica a
where	b.nr_prescricao			= a.nr_prescricao
and	b.cd_procedimento			= cd_procedimento_p
and	b.ie_origem_proced			= ie_origem_proced_p
and	coalesce(b.cd_material_exame,'0')		= coalesce(cd_material_exame_p,'0')
and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prev_execucao)	between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_w) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p)
and	a.nr_prescricao			<> nr_prescricao_p	
and	a.nr_atendimento			= nr_atendimento_p
and	coalesce(b.ie_modificado,'N')	<> 'S'
group by
	a.nr_prescricao,
	a.dt_prescricao,
	a.cd_prescritor
order by
	a.dt_prescricao desc,
	3;
				

BEGIN

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') and (dt_prev_execucao_p IS NOT NULL AND dt_prev_execucao_p::text <> '') then
	if (coalesce(qt_hora_proced_duplic_p,0) = 0) then
		begin
		open c01;
		loop
		fetch c01 into	nr_prescricao_w,
				dt_prescricao_w,
				nm_prescritor_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (coalesce(ds_prescr_dupl_w::text, '') = '') then
				ds_prescr_dupl_w	:= to_char(nr_prescricao_w) || ' - ' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_prescricao_w, 'short', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO) || ' - ' || nm_prescritor_w;
			elsif (length(ds_prescr_dupl_w) <= 1950) then
				ds_prescr_dupl_w	:= ds_prescr_dupl_w || chr(10) || to_char(nr_prescricao_w) || ' - ' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_prescricao_w, 'short', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO) || ' - ' || nm_prescritor_w;
			end if;
			end;
		end loop;
		close c01;
		end;
	else
		begin	
		dt_prev_execucao_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prev_execucao_p) - qt_hora_proced_duplic_p / 24;
		open c02;
		loop
		fetch c02 into	nr_prescricao_w,
				dt_prescricao_w,
				nm_prescritor_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (coalesce(ds_prescr_dupl_w::text, '') = '') then
				ds_prescr_dupl_w	:= to_char(nr_prescricao_w) || ' - ' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_prescricao_w, 'short', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO) || ' - ' || nm_prescritor_w;
			elsif (length(ds_prescr_dupl_w) <= 1950) then
				ds_prescr_dupl_w	:= ds_prescr_dupl_w || chr(10) || to_char(nr_prescricao_w) || ' - ' || PKG_DATE_FORMATERS.TO_VARCHAR(dt_prescricao_w, 'short', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO) || ' - ' || nm_prescritor_w;
			end if;
			end;
		end loop;
		close c02;		
		end;		
	end if;		
end if;

return ds_prescr_dupl_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prescr_proced_duplic ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_proced_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_exame_p text, dt_prev_execucao_p timestamp, qt_hora_proced_duplic_p bigint) FROM PUBLIC;

