-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_atendimento_conta ( nr_atendimento_p bigint, cd_convenio_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

		 
/* 
ie_opcao_p 
pc - plano de conta; 
usu - código usuário; 
cid - cid; 
ma - médico atendimento; 
*/
	 
 
cd_plano_w		bigint;
cd_usuario_convenio_w	numeric(20);
cd_medico_resp_w		bigint;
nr_seq_interno_w		bigint;

ds_plano_w		varchar(80);
cd_doenca_w		varchar(10);
nm_medico_resp_w		varchar(100);

ds_retorno_w		varchar(255);


BEGIN 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	begin 
 
	if (ie_opcao_p = 'PC') then 
		begin 
		begin 
		nr_seq_interno_w := obter_atecaco_atend_conv(nr_atendimento_p, cd_convenio_p);
		 
		if (nr_seq_interno_w > 0) then 
			begin 
			select	cd_plano_convenio	 
			into STRICT 	cd_plano_w 
			from	atend_categoria_convenio 
			where	nr_seq_interno = nr_seq_interno_w;
			 
			select	ds_plano 
			into STRICT	ds_plano_w 
			from	convenio_plano 
			where	cd_convenio = cd_convenio_p 
			and	cd_plano = cd_plano_w;	
			end;
		end if;
		exception 
		when others then 
			ds_plano_w := null;
		end;
		 
		ds_retorno_w := ds_plano_w;
		end;
	elsif (ie_opcao_p = 'USU') then 
		begin 
		 
		begin 
		nr_seq_interno_w := obter_atecaco_atend_conv(nr_atendimento_p, cd_convenio_p);
		 
		if (nr_seq_interno_w > 0) then 
			begin 
			select	cd_usuario_convenio 
			into STRICT 	cd_usuario_convenio_w 
			from	atend_categoria_convenio 
			where	nr_seq_interno = nr_seq_interno_w;
			end;
		end if;
		exception 
		when others then 
			cd_usuario_convenio_w := null;
		end;
		 
		ds_retorno_w 	:= cd_usuario_convenio_w;
		 
		end;
	elsif (ie_opcao_p = 'CID') then 
		begin 
		 
		begin 
		cd_doenca_w	:= obter_cid_atendimento(nr_atendimento_p, 'P');
		 
		if (coalesce(cd_doenca_w::text, '') = '') then 
			cd_doenca_w	:= obter_cid_atendimento(nr_atendimento_p, 'S');
		end if;	
		exception 
		when others then 
			cd_doenca_w := null;
		end;
		 
		ds_retorno_w	:= cd_doenca_w;
		end;
	elsif (ie_opcao_p = 'MA') then 
		begin 
		 
		begin 
		select	cd_medico_resp 
		into STRICT	cd_medico_resp_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_p;
		 
		if (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') then 
			nm_medico_resp_w	:= substr(obter_nome_medico(cd_medico_resp_w, 'N'),1,100);
		end if;
		exception 
		when others then 
			nm_medico_resp_w := null;
		end;
		 
		ds_retorno_w	:= nm_medico_resp_w;
		end;
	end if;
	end;
end if;
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_atendimento_conta ( nr_atendimento_p bigint, cd_convenio_p bigint, ie_opcao_p text) FROM PUBLIC;

