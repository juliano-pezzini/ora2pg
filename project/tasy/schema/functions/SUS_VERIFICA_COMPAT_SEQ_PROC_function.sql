-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_verifica_compat_seq_proc ( cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_procedimento_comp_p bigint) RETURNS varchar AS $body$
DECLARE


cd_procedimento_w	bigint;
qt_registro_w		bigint;
ds_retorno_w		varchar(10)	:= 'S';
qt_proc_secundario_w	bigint := 0;
qt_proc_principal_w	bigint := 0;
qt_proc_opm_w		bigint := 0;
cd_estut_proc_w		varchar(15) := '0';

c01 CURSOR FOR
	SELECT	cd_proc_secundario
	from	sus_proc_compativel
	where	cd_proc_principal    	= cd_procedimento_p
	and	ie_origem_proc_princ 	= ie_origem_proced_p
	and	ie_tipo_compatibilidade	= 4;

c02 CURSOR FOR
	SELECT	cd_proc_principal
	from	sus_proc_compativel
	where 	cd_proc_secundario    	= cd_procedimento_p
	and   	ie_origem_proc_sec 	= ie_origem_proced_p
	and	ie_tipo_compatibilidade	= 4;


BEGIN

select	count(1)
into STRICT	qt_proc_secundario_w
from	sus_proc_compativel
where	cd_proc_principal    	= cd_procedimento_p
and	ie_origem_proc_princ 	= ie_origem_proced_p
and	ie_tipo_compatibilidade	= 4  LIMIT 1;

select	count(1)
into STRICT	qt_proc_principal_w
from	sus_proc_compativel
where 	cd_proc_secundario    	= cd_procedimento_p
and   	ie_origem_proc_sec 	= ie_origem_proced_p
and	ie_tipo_compatibilidade	= 4  LIMIT 1;

qt_proc_opm_w	:= coalesce(sus_validar_regra(4,cd_procedimento_p,ie_origem_proced_p,null),0);
cd_estut_proc_w	:= coalesce(sus_obter_estrut_proc(cd_procedimento_p,ie_origem_proced_p,'C','G'),'0');

if	((qt_proc_secundario_w > 0) or (qt_proc_principal_w > 0)) then
	begin
	if (qt_proc_opm_w = 0) then
		begin
		
		open c01;
		loop
		fetch c01 into
			cd_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ds_retorno_w		:= 'N';
			if (cd_procedimento_w	= cd_procedimento_comp_p) then
				ds_retorno_w	:= 'S';
				exit;
			end if;
			end;
		end loop;
		close c01;
		
		end;
	end if;
	
	if (ds_retorno_w = 'N') then
		begin
		if	((qt_proc_opm_w > 0) or (cd_estut_proc_w in ('6','4','3','2','5'))) then
			begin
			
			open c02;
			loop
			fetch c02 into
				cd_procedimento_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				ds_retorno_w		:= 'N';
				if (cd_procedimento_w	= cd_procedimento_comp_p) then
					ds_retorno_w	:= 'S';
					exit;
				end if;
				end;
			end loop;
			close c02;
			
			end;
		end if;
		
		end;
	end if;
	end;
else
	ds_retorno_w := 'S';	
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_verifica_compat_seq_proc ( cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_procedimento_comp_p bigint) FROM PUBLIC;

