-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_get_info_liberacao (itens_liberar_p text, cd_material_p material.cd_material%type, cd_classe_p material.cd_classe_material%type, cd_subgrupo_p classe_material.cd_subgrupo_material%type, cd_grupo_p subgrupo_material.cd_grupo_material%type, ie_informacao_p text, cd_area_procedimento_p area_procedimento.cd_area_procedimento%type default null, cd_especialidade_p especialidade_medica.cd_especialidade%type default null, cd_grupo_proc_p procedimento.cd_grupo_proc%type default null, nr_seq_proc_interno_p proc_interno.nr_sequencia%type default null, cd_procedimento_regra_p procedimento.cd_procedimento%type default null, nr_atendimento_p bigint default null) RETURNS varchar AS $body$
DECLARE

 
ie_existe_lab_w			varchar(1);
ds_proc_parecer_w		varchar(255);
item_w					varchar(255);
ie_opcao_prescr_w		varchar(255);
ie_opcao_prescr_ww		varchar(2000);
cd_material_w			material.cd_material%type;
cd_classe_w				material.cd_classe_material%type;
cd_subgrupo_w			classe_material.cd_subgrupo_material%type;
cd_grupo_w				subgrupo_material.cd_grupo_material%type;
nr_seq_reg_item_w		cpoe_material.nr_sequencia%type;
cd_area_procedimento_w	area_procedimento.cd_area_procedimento%type;
nr_seq_proc_interno_w	proc_interno.nr_sequencia%type := null;
cd_procedimento_w		prescr_procedimento.cd_procedimento%type;
ie_origem_proced_w		prescr_procedimento.ie_origem_proced%type;
cd_especialidade_w		especialidade_medica.cd_especialidade%type;
cd_grupo_proc_w			procedimento.cd_grupo_proc%type;

/* ie_informacao_p 
	M = Material 
	C = Classe do Material 
	S = SubGrupo do Material 
	G = Grupo do Material 
	DDP = Procedimento 
	PM = Parecer Médico 
	AP = Area Procedimento 
	EP = Especialidade Procedimento 
	GP = Grupo Procedimento 
	PI = Proc Interno 
	PR = Procedimento da Regra 
*/
 

BEGIN 
 
if (itens_liberar_p IS NOT NULL AND itens_liberar_p::text <> '') then 
	ie_opcao_prescr_ww := itens_liberar_p;
 
	while(ie_opcao_prescr_ww IS NOT NULL AND ie_opcao_prescr_ww::text <> '') loop 
		-- R,12;M,12345;D,1233;M,2312; 
		if (position(';' in ie_opcao_prescr_ww) = 0) and (ie_opcao_prescr_ww IS NOT NULL AND ie_opcao_prescr_ww::text <> '') then 
			ie_opcao_prescr_ww	:= ie_opcao_prescr_ww||';';
		end if;	
		 
		item_w := substr(ie_opcao_prescr_ww, 1, position(';' in ie_opcao_prescr_ww) - 1);
		ie_opcao_prescr_w := substr(item_w, 1, position(',' in item_w) - 1);
		nr_seq_reg_item_w := (substr(item_w, position(',' in item_w) + 1, length(item_w)))::numeric;
		ie_opcao_prescr_ww := substr(ie_opcao_prescr_ww, position(';' in ie_opcao_prescr_ww) + 1, length(ie_opcao_prescr_ww));
			 
		if (ie_opcao_prescr_w IS NOT NULL AND ie_opcao_prescr_w::text <> '') then 
			 
			if (ie_opcao_prescr_w in ('M','MA')) then 
				select	max(a.cd_material), 
						max(Obter_estrutura_material(a.cd_material,'C')), 
						max(Obter_estrutura_material(a.cd_material,'S')), 
						max(Obter_estrutura_material(a.cd_material,'G')) 
				into STRICT	cd_material_w, 
						cd_classe_w, 
						cd_subgrupo_w, 
						cd_grupo_w 
				from	cpoe_material a 
				where	a.nr_sequencia = nr_seq_reg_item_w;
			 
			elsif (ie_opcao_prescr_w in ('S','E','L')) then 
					 
				if (ie_opcao_prescr_w = 'L') then 
					select	max(a.cd_mat_prod1), 
							max(Obter_estrutura_material(a.cd_mat_prod1,'C')), 
							max(Obter_estrutura_material(a.cd_mat_prod1,'S')), 
							max(Obter_estrutura_material(a.cd_mat_prod1,'G')) 
					into STRICT	cd_material_w, 
							cd_classe_w, 
							cd_subgrupo_w, 
							cd_grupo_w 
					from	cpoe_dieta a 
					where	a.nr_sequencia = nr_seq_reg_item_w;					
 
				else 
					select	max(a.cd_material), 
							max(Obter_estrutura_material(a.cd_material,'C')), 
							max(Obter_estrutura_material(a.cd_material,'S')), 
							max(Obter_estrutura_material(a.cd_material,'G')) 
					into STRICT	cd_material_w, 
							cd_classe_w, 
							cd_subgrupo_w, 
							cd_grupo_w 
					from	cpoe_dieta a 
					where	a.nr_sequencia = nr_seq_reg_item_w;	
					 
				end if;
			end if;
			 
			if (ie_informacao_p = 'M') and --Material 
				(coalesce(cd_material_p,0) > 0) and (cd_material_p = cd_material_w) then							 
				return 'S';	
			 
			elsif (ie_informacao_p = 'C') and (coalesce(cd_classe_p,0) > 0) and (cd_classe_p = cd_classe_w) then --Classe do material 
					return 'S';	
			 
			elsif (ie_informacao_p = 'S') and (coalesce(cd_subgrupo_p,0) > 0) and (cd_subgrupo_p = cd_subgrupo_w) then --SubGrupo do material 
					return 'S';	
			 
			elsif (ie_informacao_p = 'G') and (coalesce(cd_grupo_p,0) > 0) and (cd_grupo_p = cd_grupo_w) then --Grupo do material 
					return 'S';	
					 
			elsif (ie_informacao_p = 'DDP') and (ie_opcao_prescr_w = 'P') then 
 
					select	coalesce(max('S'),'N') 
					into STRICT	ie_existe_lab_w 
					from	cpoe_procedimento a, 
							proc_interno b, 
							exame_laboratorio c, 
							lab_exame_equip d, 
							equipamento_lab e 
					where a.nr_seq_proc_interno = b.nr_sequencia 
					and b.nr_seq_exame_lab = c.nr_seq_exame 
					and	c.nr_seq_exame = d.nr_seq_exame 
					and	d.cd_equipamento = e.cd_equipamento 
					and	e.ds_sigla = 'TLAB' 
					and a.nr_sequencia = nr_seq_reg_item_w;
						 
					return coalesce(ie_existe_lab_w,'N');
					 
			elsif (ie_informacao_p = 'PM') and --parecer médico 
					(ie_opcao_prescr_w = 'P') then		 
					 
					select	max(substr(obter_desc_proc_interno(b.nr_sequencia),1,255)) 
					into STRICT	ds_proc_parecer_w 
					from cpoe_procedimento a, 
						proc_interno b 
					where 	a.nr_seq_proc_interno = b.nr_sequencia 
					and	coalesce(a.dt_suspensao::text, '') = '' 
					and (a.dt_lib_suspensao IS NOT NULL AND a.dt_lib_suspensao::text <> '') 
					and	coalesce(b.ie_parecer,'N') = 'S' 
					and a.nr_sequencia = nr_seq_reg_item_w;
					 
					return coalesce(ds_proc_parecer_w,null);
 
			elsif (ie_opcao_prescr_w = 'P') then 
 
					select max(nr_seq_proc_interno) 
					into STRICT nr_seq_proc_interno_w 
					from cpoe_procedimento 
					where nr_sequencia = nr_seq_reg_item_w;
 
					if (ie_informacao_p = 'PI') and --Proc Interno 
						(coalesce(nr_seq_proc_interno_p,0) > 0) then 
						 
						if (nr_seq_proc_interno_p = nr_seq_proc_interno_w) then 
							return 'S';
						end if;
						 
					else						 
						SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_p, 0, cd_procedimento_w, ie_origem_proced_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
						 
						if (ie_informacao_p = 'AP') and --Área Procedimento 
							(coalesce(cd_area_procedimento_p,0) > 0) then 						 
							cd_area_procedimento_w := obter_area_procedimento(cd_procedimento_w, ie_origem_proced_w);						
							 
							if (cd_area_procedimento_p = cd_area_procedimento_w) then 
								return 'S';
							end if;
						 
						elsif (ie_informacao_p = 'EP') and --Especialidade Procedimento 
								(coalesce(cd_especialidade_p,0) > 0) then 
								cd_especialidade_w := Obter_Especialidade_Proced(cd_procedimento_w, ie_origem_proced_w);
							 
								if (cd_especialidade_p = cd_especialidade_w) then 
									return 'S';
								end if;
						 
						elsif (ie_informacao_p = 'GP') and --Grupo Procedimento 
								(coalesce(cd_grupo_proc_p,0) > 0) then 
								cd_grupo_proc_w := obter_grupo_procedimento(cd_procedimento_w, ie_origem_proced_w, 'C');
							 
								if (cd_grupo_proc_p = cd_grupo_proc_w) then 
									return 'S';
								end if;		
						elsif (ie_informacao_p = 'PR') and --Procedimento Regra 
								(coalesce(cd_procedimento_regra_p,0) > 0) then 
								 
								if (cd_procedimento_regra_p = cd_procedimento_w) then 
									return 'S';
								end if;							
						end if;
						 
					end if;
			end if;	
		end if;			
	end loop;		
 
end if;
 
return	'N';
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_get_info_liberacao (itens_liberar_p text, cd_material_p material.cd_material%type, cd_classe_p material.cd_classe_material%type, cd_subgrupo_p classe_material.cd_subgrupo_material%type, cd_grupo_p subgrupo_material.cd_grupo_material%type, ie_informacao_p text, cd_area_procedimento_p area_procedimento.cd_area_procedimento%type default null, cd_especialidade_p especialidade_medica.cd_especialidade%type default null, cd_grupo_proc_p procedimento.cd_grupo_proc%type default null, nr_seq_proc_interno_p proc_interno.nr_sequencia%type default null, cd_procedimento_regra_p procedimento.cd_procedimento%type default null, nr_atendimento_p bigint default null) FROM PUBLIC;

