-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION recep_obter_se_recep_exame ( cd_pessoa_fisica_p bigint, nr_seq_age_proc_p bigint, nr_seq_agenda_p bigint, nr_seq_exame_p bigint) RETURNS varchar AS $body$
DECLARE


ie_recepcionado_w		varchar(1) := 'N';
ie_presc_procedimento_w	varchar(1) := 'N';
cd_procedimento_w 		bigint;
nr_seq_ficha_w			bigint;
nr_atendimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w	integer;


BEGIN

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	begin

	ie_recepcionado_w := 'N';

	select 	max(nr_sequencia),
			max(nr_atendimento)
	into STRICT 	nr_seq_ficha_w,
			nr_atendimento_w
	from 	recep_ficha_pre
	where 	cd_pessoa_fisica = cd_pessoa_fisica_p
	and 	ie_status <> 1
	and 	TRUNC(dt_pre_recepcao) = TRUNC(clock_timestamp());

	if (nr_seq_ficha_w IS NOT NULL AND nr_seq_ficha_w::text <> '')
		and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		begin

		select 	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
		into STRICT 	ie_presc_procedimento_w
		from 	prescr_medica a,
				prescr_procedimento b
		where 	a.nr_atendimento = nr_atendimento_w
		and   	b.nr_prescricao = a.nr_prescricao
		and 	coalesce(a.dt_suspensao::text, '') = '';


		if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '')
			and (ie_presc_procedimento_w = 'S') then

			begin
			if (coalesce(nr_seq_age_proc_p::text, '') = '') then
				begin
						select 	max(cd_procedimento),
								max(ie_origem_proced),
								max(nr_seq_proc_interno)
						into STRICT	cd_procedimento_w,
								ie_origem_proced_w,
								nr_seq_proc_interno_w
						from 	agenda_paciente
						where 	nr_sequencia = nr_seq_agenda_p;

				end;
				else
				begin
						select 	max(cd_procedimento),
								max(ie_origem_proced),
								max(nr_seq_proc_interno)
						into STRICT	cd_procedimento_w,
								ie_origem_proced_w,
								nr_seq_proc_interno_w
						from 	agenda_paciente_proc
						where 	nr_sequencia = nr_seq_agenda_p
						and		nr_seq_agenda = nr_seq_age_proc_p;
				end;
			end if;

			if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
				select 	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
				into STRICT 	ie_recepcionado_w
				from 	prescr_medica b,
						prescr_procedimento c
				where 	b.nr_prescricao = c.nr_prescricao
				and 	c.cd_procedimento = cd_procedimento_w
				and 	c.ie_origem_proced = ie_origem_proced_w
				and		c.nr_seq_proc_interno = nr_seq_proc_interno_w
				and 	b.nr_atendimento = nr_atendimento_w
				and		c.nr_seq_agenda = nr_seq_agenda_p
				and		coalesce(c.ie_suspenso,'N') = 'N';
			else
				select 	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
				into STRICT 	ie_recepcionado_w
				from 	prescr_medica b,
						prescr_procedimento c
				where 	b.nr_prescricao = c.nr_prescricao
				and 	b.nr_atendimento = nr_atendimento_w
				and		c.nr_seq_exame = nr_seq_exame_p
				and		coalesce(c.ie_suspenso,'N') = 'N';
			end if;
			end;

		else
			begin

			select 	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
			into STRICT 	ie_recepcionado_w
			from 	prescr_medica b,
					prescr_procedimento c
			where 	b.nr_prescricao = c.nr_prescricao
			and 	b.nr_atendimento = nr_atendimento_w
			and		c.nr_seq_exame = nr_seq_exame_p
			and		coalesce(c.ie_suspenso,'N') = 'N';
		end;
		end if;
		end;
	end if;
	end;
end if;
return	ie_recepcionado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION recep_obter_se_recep_exame ( cd_pessoa_fisica_p bigint, nr_seq_age_proc_p bigint, nr_seq_agenda_p bigint, nr_seq_exame_p bigint) FROM PUBLIC;

