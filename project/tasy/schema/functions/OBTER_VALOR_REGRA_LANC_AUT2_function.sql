-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_regra_lanc_aut2 ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, nr_seq_evento_p bigint, nr_seq_exame_p bigint, ie_opcao_p text, nr_seq_orcamento_p bigint, nm_usuario_p text) RETURNS bigint AS $body$
DECLARE


qt_pontos_w			preco_amb.qt_pontuacao%type;
vl_retorno_w			double precision	:=0;
cd_convenio_w			bigint;
cd_categoria_w			varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w	bigint;
ie_tipo_convenio_w		smallint;
cd_area_proc_w			bigint;
cd_especial_proc_w		bigint;
cd_grupo_proc_w			bigint;
dt_execucao_w			timestamp;
cd_edicao_amb_w			integer;
qt_procedimento_w		bigint:=1;
nr_seq_regra_w			bigint;
cd_setor_atendimento_w	bigint;
nr_seq_exame_w			bigint;
cd_material_w      		integer:= 0;
cd_unid_medida_w		varchar(30);
cd_medico_executor_w	varchar(10);
qt_lancamento_w			double precision:= 0;
ie_Medico_atendimento_w	varchar(1);
ie_Local_Estoque_w		varchar(1);
ie_funcao_medico_w		smallint;
tx_procedimento_w		double precision;
vl_auxiliar_w			double precision;
vl_procedimento_w		double precision;
vl_servico_w			double precision;
ds_aux_w				varchar(200);
ie_classificacao_w		varchar(10);
vl_material_w			double precision;
vl_kit_material_w		double precision;
dt_aux_w				timestamp;
cd_kit_material_w		bigint;
ds_erro_w				varchar(255);
ds_ret_w				integer;
ie_adic_orcamento_w		varchar(1);
ie_autorizacao_w		varchar(3);
nr_seq_proc_interno_aux_w	bigint;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_proc_w		bigint;
nr_seq_ajuste_mat_w		bigint;
ie_situacao_w  varchar(1);
ie_regra_w			orcamento_paciente_proc.ie_regra_plano%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.cd_setor_atendimento
	from	regra_Lanc_Automatico a
	where	a.cd_estabelecimento				= cd_estabelecimento_p
	and	a.nr_seq_evento					= nr_seq_evento_p
	and	coalesce(a.cd_convenio, cd_convenio_w)		= cd_convenio_w
	and	coalesce(a.cd_categoria, cd_categoria_w)		= cd_categoria_w
	and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
	and	coalesce(a.cd_procedimento,cd_procedimento_w)	= cd_procedimento_w
	and	coalesce(a.nr_seq_proc_interno,nr_seq_proc_interno_w) = nr_seq_proc_interno_w
	and	coalesce(a.ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
	and	coalesce(a.cd_area_procedimento,cd_area_proc_w)	= cd_area_proc_w
	and	coalesce(a.cd_especialidade_proc,cd_especial_proc_w) = cd_especial_proc_w
	and	coalesce(a.cd_grupo_proc,cd_grupo_proc_w)		= cd_grupo_proc_w
	and	coalesce(a.cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w
	and	coalesce(a.nr_seq_exame,nr_seq_exame_w)		= nr_seq_exame_w
	and	ie_situacao					= 'A'
	order by
		coalesce(a.cd_medico,0),
		coalesce(a.cd_setor_atendimento,0),
		coalesce(a.ie_tipo_atendimento,0),
		coalesce(a.cd_convenio,0),
		coalesce(a.ie_tipo_convenio,0),
		coalesce(a.cd_edicao_amb,0),
		coalesce(a.nr_seq_proc_interno,0),
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade_proc,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_exame,0);
		
C02 CURSOR FOR
	SELECT 	a.cd_procedimento,
			a.ie_origem_proced,
			a.nr_seq_exame,
			a.cd_material,
			substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
			CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
			coalesce(a.ie_medico_atendimento,'N'),
			coalesce(a.ie_local_estoque,'N'),
			coalesce(a.ie_funcao_medico,0),
			coalesce(a.tx_procedimento,100),
			a.nr_seq_proc_interno,
			a.ie_adic_orcamento
	from 	material b, regra_Lanc_Aut_pac a
	where	a.nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	--and 	nvl(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	
union all

	SELECT	cd_procedimento,
			ie_origem_proced,
			nr_seq_exame,
			cd_material,
			'XX',
			CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
			coalesce(ie_medico_atendimento,'N'),
			coalesce(ie_local_estoque,'N'),
			coalesce(ie_funcao_medico,0),
			coalesce(tx_procedimento,100),
			nr_seq_proc_interno,
			ie_adic_orcamento
	from 	regra_Lanc_Aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	--and 	nvl(ie_adic_orcamento,'N') = 'N'
	and	nr_seq_regra_w <> 0
	and ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''));


BEGIN

cd_convenio_w			:= coalesce(cd_convenio_p,0);
cd_categoria_w			:= coalesce(cd_categoria_p,'0');
cd_procedimento_w		:= coalesce(cd_procedimento_p,0);
ie_origem_proced_w		:= coalesce(ie_origem_proced_p,0);
nr_seq_proc_interno_w		:= coalesce(nr_seq_proc_interno_p,0);
nr_seq_exame_w			:= coalesce(nr_seq_exame_p,0);
dt_execucao_w			:= clock_timestamp();
vl_retorno_w			:= 0;

select	coalesce(max(ie_tipo_convenio),0)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_w;

if (nr_seq_proc_interno_w	<> 0) then

	SELECT * FROM Obter_Proc_Tab_Interno_Conv(	nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;
					
if (nr_seq_exame_w <> 0) then
	SELECT * FROM Obter_Exame_Lab_Convenio(	nr_seq_exame_w, cd_convenio_w, cd_categoria_w, null, cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_proc_interno_w, null, null, ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;

end if;
begin
select	b.cd_grupo_proc,
		b.cd_especialidade,
		b.cd_area_procedimento
into STRICT	cd_grupo_proc_w,
		cd_especial_proc_w,
		cd_area_proc_w
from	estrutura_procedimento_v b
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;
exception
	when others then
	cd_grupo_proc_w		:= 0;
	cd_especial_proc_w	:= 0;
	cd_area_proc_w		:= 0;
end;


begin
select	obter_edicao(cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_execucao_w, null)
into STRICT	cd_edicao_amb_w
;
exception
	when others then
		select	max(cd_edicao_amb)
		into STRICT	cd_edicao_amb_w
		from	convenio_amb
		where	cd_estabelecimento	= cd_estabelecimento_p
		  and	cd_convenio		= cd_convenio_w
		  and	cd_categoria		= cd_categoria_w
		  and (coalesce(ie_situacao,'A')	= 'A')
		  and	dt_inicio_vigencia	=
			(SELECT	max(a.dt_inicio_vigencia)
			from	convenio_amb a
			where	a.cd_estabelecimento  = cd_estabelecimento_p
			and	a.cd_convenio         = cd_convenio_w
			and	a.cd_categoria        = cd_categoria_w
			and (coalesce(a.ie_situacao,'A')= 'A')
			and	a.dt_inicio_vigencia <=  dt_execucao_w);
end;
cd_edicao_amb_w		:= coalesce(cd_edicao_amb_w,0);

open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;



open C02;
loop
fetch C02 into	
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_exame_w,
	cd_material_w,
	cd_unid_medida_w,
	qt_lancamento_w,
	ie_Medico_atendimento_w,
	ie_Local_Estoque_w,
	ie_funcao_medico_w,
	tx_procedimento_w,
	nr_seq_proc_interno_w,
	ie_adic_orcamento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	ie_regra_w	:= null;
	
	SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, '', 0, 0, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;



   if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
    select 	coalesce(max(ie_situacao),'A')
    into STRICT	ie_situacao_w
    from	procedimento
    where	cd_procedimento	 = cd_procedimento_w
    and	ie_origem_proced = ie_origem_proced_w;
		
    if (ie_situacao_w = 'I') then
      goto continue_loop;
    end if;
   end if;

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
	
		SELECT * FROM consiste_proc_orc(	nr_seq_orcamento_p, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_estabelecimento_p, nm_usuario_p, ie_autorizacao_w, null, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
	
	
		if ((coalesce(ie_adic_orcamento_w,0) = 'N') or (ie_autorizacao_w = 'B')) then
			
			select	coalesce(max(ie_classificacao),1)
			into STRICT	ie_classificacao_w
			from	procedimento
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced;
			
			vl_servico_w		:=	0;
			vl_procedimento_w	:=	0;
			
			if (ie_classificacao_w		= 1 ) then
			
				SELECT * FROM define_preco_procedimento( 	cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_execucao_w, cd_procedimento_w, 0, 1, 0, null, 0, 0, 0, nr_seq_proc_interno_w, null, null, 0, 0, null, vl_procedimento_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, qt_pontos_w, vl_auxiliar_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, null, null, NULL, NULL, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, vl_auxiliar_w, qt_pontos_w, vl_auxiliar_w, ds_aux_w, nr_seq_ajuste_proc_w;
			else
			
			SELECT * FROM define_preco_servico(	cd_estabelecimento_p, cd_convenio_p, cd_categoria_w, dt_execucao_w, cd_procedimento_w, 0, 1, 0, null, null, 0, 0, null, vl_servico_w, nr_seq_ajuste_proc_w, null, 0, null, nr_seq_proc_interno_p, null, null, null, null, null, null, null, null, null, cd_medico_executor_w) INTO STRICT vl_servico_w, nr_seq_ajuste_proc_w;
			end if;		
			

			if (ie_opcao_p 	= 'P') then
				vl_retorno_w:= 	vl_retorno_w + coalesce(vl_procedimento_w,0);
			elsif (ie_opcao_p 	= 'S') then
				vl_retorno_w:= 	vl_retorno_w + coalesce(vl_servico_w,0);
			elsif (ie_opcao_p 	= 'T') then
				vl_retorno_w:= 	vl_retorno_w + coalesce(vl_procedimento_w,0) + coalesce(vl_servico_w,0);
			end if;
		end if;		
	elsif (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
	
		SELECT * FROM consiste_mat_orc(nr_seq_orcamento_p, cd_material_W, qt_lancamento_w, cd_estabelecimento_p, nm_usuario_p, ie_autorizacao_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
		
	
		
		if ((coalesce(ie_adic_orcamento_w,'N') = 'N') or (ie_autorizacao_w = 'B')) then
			
			SELECT * FROM define_preco_material(	cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_execucao_w, cd_material_w, 0, 0, 0, null, 0, 0, null, 0, 0, null, null, null, null, null, vl_material_w, dt_aux_w, vl_auxiliar_w, vl_auxiliar_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_aux_w, vl_auxiliar_w, vl_auxiliar_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;


			select	coalesce(max(cd_kit_material),0)
			into STRICT	cd_kit_material_w
			from	material_estab
			where	cd_material		= cd_material_w
			and	cd_estabelecimento	= cd_estabelecimento_p;		

			if (cd_kit_material_w	= 0) then
				select	coalesce(max(cd_kit_material),0)
				into STRICT	cd_kit_material_w
				from	material
				where	cd_material		= cd_material_w;		
			end if;



			vl_kit_material_w		:= 0;

			if (cd_kit_material_w  <> 0) then
				select	coalesce(Obter_Valor_Kit_Material(cd_kit_material_w,
							dt_execucao_w, qt_lancamento_w, cd_estabelecimento_p,
							cd_convenio_p, cd_categoria_p), 0)
				into STRICT	vl_kit_material_w
				;

			end if;

			RAISE NOTICE '% % %', wheb_mensagem_pck.get_Texto(310349), cd_kit_material_w, vl_kit_material_w;

			
			vl_material_w		:= coalesce(vl_material_w,0) * qt_lancamento_w;
			
			if (ie_opcao_p 	in ('M','T')) then		
				vl_retorno_w:= 	vl_retorno_w	+ coalesce(vl_material_w,0) + coalesce(vl_kit_material_w, 0);
			end if;
		end if;
	END IF;
	end;
	<<continue_loop>>
	ie_situacao_w := null;
end loop;
close C02;

return	vl_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_regra_lanc_aut2 ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, nr_seq_evento_p bigint, nr_seq_exame_p bigint, ie_opcao_p text, nr_seq_orcamento_p bigint, nm_usuario_p text) FROM PUBLIC;

