-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_inicio_cih ( cd_material_p bigint, dt_referencia_p timestamp, dt_fim_p timestamp, dt_fim_cih_p timestamp, dt_suspensao_p timestamp, dt_lib_suspensao_p timestamp, hr_prim_horario_p text, nr_dia_util_p bigint, nr_atendimento_p bigint, ie_reset_atb_p text default null, nr_seq_cpoe_anterior_p bigint default null, dt_inicio_p timestamp default null, dt_inicio_medic_p timestamp default null) RETURNS timestamp AS $body$
DECLARE


ie_dias_util_medic_w	material.ie_dias_util_medic%type;
hr_prim_horario_w	cpoe_material.hr_prim_horario%type;
nr_dia_util_w	cpoe_material.nr_dia_util%type := nr_dia_util_p;
qt_dia_util_w	smallint := 0;
dt_inicio_w		timestamp := dt_referencia_p;
dt_fim_w	timestamp;
ie_possui_hor_adm_w	varchar(1);


BEGIN

select	coalesce(max(ie_dias_util_medic),'N')
into STRICT	ie_dias_util_medic_w
from	material
where	cd_material	= cd_material_p;

if (ie_dias_util_medic_w = 'S') then
	qt_dia_util_w := 1;
elsif (ie_dias_util_medic_w = 'O') then
	qt_dia_util_w := 0;
end if;

if (coalesce(nr_dia_util_w::text, '') = '') then
	nr_dia_util_w := coalesce(qt_dia_util_w,0);
end if;

if (dt_inicio_medic_p IS NOT NULL AND dt_inicio_medic_p::text <> '') and (obter_funcao_ativa = 896) and (coalesce(dt_fim_cih_p::text, '') = '') and (dt_referencia_p < dt_inicio_medic_p) and
      ((ie_dias_util_medic_w = 'O' and nr_dia_util_w > 0) or (nr_dia_util_w > 1)) then

       /* Tratado para quando o item for liberado pelo CIH e ja possuir uma copia realizada, desconsiderar 
		esse dia util visto que podera gerar uma data de inicio do cih retrograda e consequentemente
			a data de fim do cih */
	if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_medic_p) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())) then
		nr_dia_util_w := nr_dia_util_w - 1;
	end if;
end if;

ie_possui_hor_adm_w := 'S';

if (nr_seq_cpoe_anterior_p IS NOT NULL AND nr_seq_cpoe_anterior_p::text <> '') then
	select	coalesce(max('S'),'N')
	into STRICT	ie_possui_hor_adm_w
	from	prescr_material a,
			prescr_mat_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and		a.nr_sequencia = b.nr_seq_material
	and		a.nr_seq_mat_cpoe = nr_seq_cpoe_anterior_p
	and		(b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> '');
end if;

if ((dt_lib_suspensao_p IS NOT NULL AND dt_lib_suspensao_p::text <> '') and (dt_suspensao_p IS NOT NULL AND dt_suspensao_p::text <> '') and dt_suspensao_p < coalesce(dt_fim_cih_p, dt_fim_p) and dt_suspensao_p < clock_timestamp()) then
	dt_fim_w := dt_suspensao_p;
	/* Quando o dia da suspensao for no mesmo dia do dt_fim do item tambem desconta um dia, mesma situacao do item abaixo  */

	if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_fim_cih_p, dt_fim_p)) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_w)) then
		dt_fim_w := dt_fim_w -1;
	end if;	
elsif (coalesce(dt_fim_cih_p, dt_fim_p) < clock_timestamp()) then
	/* Quando o dt_fim pegar pegar o verdadeiro fim do item, entao deve descontar um dia, 
		pois na verdade os horarios pertencem ao dia anterior  */
	dt_fim_w := coalesce(dt_fim_cih_p, dt_fim_p) - 1;
elsif ((coalesce(ie_reset_atb_p, 'N') = 'S' or coalesce(nr_seq_cpoe_anterior_p::text, '') = '' or ie_possui_hor_adm_w = 'N') and dt_inicio_p > dt_referencia_p and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())) then
	dt_fim_w := dt_inicio_p;
elsif (dt_referencia_p > clock_timestamp()) then
    dt_fim_w := dt_referencia_p;
else
	dt_fim_w := coalesce(dt_inicio_medic_p, clock_timestamp());
end if;

dt_inicio_w := (dt_referencia_p - (nr_dia_util_w - (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_w) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)))) + qt_dia_util_w;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	select	min(hr_prim_horario)
	into STRICT	hr_prim_horario_w
	from	cpoe_material
	where	nr_atendimento = nr_atendimento_p
	and	cd_material = cd_material_p
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_w);
end if;

if (((coalesce(hr_prim_horario_w, hr_prim_horario_p) IS NOT NULL AND (coalesce(hr_prim_horario_w, hr_prim_horario_p))::text <> '')) and (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '')) then
	dt_inicio_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_w, coalesce(hr_prim_horario_w, hr_prim_horario_p));
end if;

return(coalesce(dt_inicio_w, dt_referencia_p));

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_inicio_cih ( cd_material_p bigint, dt_referencia_p timestamp, dt_fim_p timestamp, dt_fim_cih_p timestamp, dt_suspensao_p timestamp, dt_lib_suspensao_p timestamp, hr_prim_horario_p text, nr_dia_util_p bigint, nr_atendimento_p bigint, ie_reset_atb_p text default null, nr_seq_cpoe_anterior_p bigint default null, dt_inicio_p timestamp default null, dt_inicio_medic_p timestamp default null) FROM PUBLIC;

