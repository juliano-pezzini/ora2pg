-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_benef_carencia ( nr_seq_segurado_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*
ie_opcao_p
N - Nome da carência não cumprida
D - Descreve S ou N se o beneficiário não está cumprindo carência
*/
ds_retorno_w			varchar(255) := 'N';
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_carencia_w		bigint;
qt_dias_w			bigint;
nr_seq_tipo_carencia_w		bigint;
dt_inclusao_operadora_w		timestamp;
dt_inicio_vigencia_w		timestamp;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia) = 'S'
	and	coalesce(nr_seq_grupo_carencia::text, '') = ''
	and	ie_cpt		= 'N';

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_carencia	a
	where	a.nr_seq_plano	= nr_seq_plano_w
	and	pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia) = 'S'
	and	not exists (	SELECT	1
				from	pls_carencia	x
				where	x.nr_seq_segurado	= nr_seq_segurado_p
				and	x.ie_cpt		= 'N')
	and	not exists (	select	1
				from	pls_carencia	x
				where	x.nr_seq_contrato	= nr_seq_contrato_w
				and	x.ie_cpt		= 'N')
	and	coalesce(nr_seq_grupo_carencia::text, '') = ''
	and	ie_cpt		= 'N';

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia a
	where	nr_seq_contrato	= nr_seq_contrato_w
	and	pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia) = 'S'
	and	not exists (	SELECT	1
				from	pls_carencia	x
				where	x.nr_seq_segurado	= nr_seq_segurado_p
				and	x.ie_cpt		= 'N')
	and	coalesce(nr_seq_grupo_carencia::text, '') = ''
	and	ie_cpt		= 'N';


BEGIN

select	nr_seq_plano,
	nr_seq_contrato,
	dt_inclusao_operadora
into STRICT	nr_seq_plano_w,
	nr_seq_contrato_w,
	dt_inclusao_operadora_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

if (ie_opcao_p = 'N') then
	ds_retorno_w	:= '';
end if;

open C01;
loop
fetch C01 into
	nr_seq_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	qt_dias,
		dt_inicio_vigencia,
		nr_seq_tipo_carencia
	into STRICT	qt_dias_w,
		dt_inicio_vigencia_w,
		nr_seq_tipo_carencia_w
	from	pls_carencia
	where	nr_sequencia	= nr_seq_carencia_w;

	if	((coalesce(dt_inicio_vigencia_w,dt_inclusao_operadora_w)+qt_dias_w) >= clock_timestamp()) then
		if (ie_opcao_p = 'D') then
			ds_retorno_w	:= 'S';
		elsif (ie_opcao_p = 'N') then
			ds_retorno_w	:= wheb_mensagem_pck.get_texto(779661, 'DS_ORIGEM=' || obter_desc_expressao(623685) || ';DS_TIPO_CARENCIA=' || upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',nr_seq_tipo_carencia_w),1,200)));
		end if;
		exit;
	end if;

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	qt_dias,
		dt_inicio_vigencia,
		nr_seq_tipo_carencia
	into STRICT	qt_dias_w,
		dt_inicio_vigencia_w,
		nr_seq_tipo_carencia_w
	from	pls_carencia
	where	nr_sequencia	= nr_seq_carencia_w;

	if	((coalesce(dt_inicio_vigencia_w,dt_inclusao_operadora_w)+qt_dias_w) >= clock_timestamp()) then
		if (ie_opcao_p = 'D') then
			ds_retorno_w	:= 'S';
		elsif (ie_opcao_p = 'N') then
			ds_retorno_w := wheb_mensagem_pck.get_texto(779661, 'DS_ORIGEM=' || obter_desc_expressao(296491) || ';DS_TIPO_CARENCIA=' || upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',nr_seq_tipo_carencia_w),1,200)));
		end if;
		exit;
	end if;

	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	select	qt_dias,
		dt_inicio_vigencia,
		nr_seq_tipo_carencia
	into STRICT	qt_dias_w,
		dt_inicio_vigencia_w,
		nr_seq_tipo_carencia_w
	from	pls_carencia
	where	nr_sequencia	= nr_seq_carencia_w;

	if	((coalesce(dt_inicio_vigencia_w,dt_inclusao_operadora_w)+qt_dias_w) >= clock_timestamp()) then
		if (ie_opcao_p = 'D') then
			ds_retorno_w	:= 'S';
		elsif (ie_opcao_p = 'N') then
			ds_retorno_w 	:= wheb_mensagem_pck.get_texto(779661, 'DS_ORIGEM=' || obter_desc_expressao(286142) || ';DS_TIPO_CARENCIA=' || upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',nr_seq_tipo_carencia_w),1,200)));
		end if;
		exit;
	end if;

	end;
end loop;
close C03;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_benef_carencia ( nr_seq_segurado_p bigint, ie_opcao_p text) FROM PUBLIC;

