-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_ehr_registro_pepa ( NR_SEQ_TIPO_CONS_PEPA_P ATEND_CONSULTA_PEPA.NR_SEQUENCIA%TYPE, NR_SEQ_TIPO_TEMP_P EHR_TIPO_REG_ITEM.NR_SEQ_TEMPLATE%TYPE, IE_ACAO_P text, NR_SEQUENCIA_P EHR_REG_TEMPLATE.NR_SEQUENCIA%TYPE, NM_USUARIO_P USUARIO.NM_USUARIO%TYPE) RETURNS EHR_REGISTRO.NR_SEQUENCIA%TYPE AS $body$
DECLARE

/*
A = Anterior
P = Proximo
*/
ds_retorno_w	bigint;
NR_SEQ_REG_W	EHR_REGISTRO.NR_SEQUENCIA%TYPE;
NR_SEQUENCIA_W	EHR_REG_TEMPLATE.NR_SEQUENCIA%TYPE;

BEGIN

if (coalesce(NR_SEQUENCIA_P::text, '') = '' or NR_SEQUENCIA_P = 0) then
	SELECT ehr_obter_reg_template(coalesce(MAX(NR_SEQUENCIA),0), 'R') NR_SEQUENCIA
	INTO STRICT NR_SEQUENCIA_W	
	FROM EHR_REGISTRO
	WHERE NR_SEQ_ATEND_CONS_PEPA = NR_SEQ_TIPO_CONS_PEPA_P
	AND NR_SEQ_TEMPL = NR_SEQ_TIPO_TEMP_P
	AND coalesce(DT_INATIVACAO::text, '') = '';
else
	NR_SEQUENCIA_W := NR_SEQUENCIA_P;
end if;

select NR_SEQ_REG
into STRICT NR_SEQ_REG_W 
from EHR_REG_TEMPLATE 
where nr_sequencia = NR_SEQUENCIA_W;

if (NR_SEQ_REG_W IS NOT NULL AND NR_SEQ_REG_W::text <> '') then
	if (IE_ACAO_P = 'A') then
		select nr_sequencia
		into STRICT ds_retorno_w
		from (
			SELECT nr_sequencia
			from ehr_registro 
			where nr_seq_atend_cons_pepa = NR_SEQ_TIPO_CONS_PEPA_P
			and nr_seq_templ = NR_SEQ_TIPO_TEMP_P
			and ((DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')
				or NM_USUARIO = NM_USUARIO_P)
			and coalesce(dt_inativacao::text, '') = ''
			and nr_sequencia < NR_SEQ_REG_W
			order by nr_sequencia desc) alias5 LIMIT 1;
	elsif (IE_ACAO_P = 'P') then
		select nr_sequencia
		into STRICT ds_retorno_w
		from (
			SELECT nr_sequencia
			from ehr_registro 
			where nr_seq_atend_cons_pepa = NR_SEQ_TIPO_CONS_PEPA_P
			and nr_seq_templ = NR_SEQ_TIPO_TEMP_P
			and ((DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')
				or NM_USUARIO = NM_USUARIO_P)
			and coalesce(dt_inativacao::text, '') = ''
			and nr_sequencia > NR_SEQ_REG_W 
			order by nr_sequencia asc) alias4 LIMIT 1;
	else
		return 0;
	end if;
	return	ehr_obter_reg_template(ds_retorno_w, 'R');
end if;
return 0;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_ehr_registro_pepa ( NR_SEQ_TIPO_CONS_PEPA_P ATEND_CONSULTA_PEPA.NR_SEQUENCIA%TYPE, NR_SEQ_TIPO_TEMP_P EHR_TIPO_REG_ITEM.NR_SEQ_TEMPLATE%TYPE, IE_ACAO_P text, NR_SEQUENCIA_P EHR_REG_TEMPLATE.NR_SEQUENCIA%TYPE, NM_USUARIO_P USUARIO.NM_USUARIO%TYPE) FROM PUBLIC;

