-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consistir_acoes_vanco_nvs ( nr_sequencia_p bigint, ie_tipo_seq_p text) RETURNS varchar AS $body$
DECLARE


nr_prescricao_w			bigint;
nr_atendimento_w		bigint;
ie_retorno_w			varchar(1);
ie_dialise_w			varchar(15);
nr_seq_regra_pai_w		bigint;
ie_ajuste_dose_w		varchar(15);
qt_nivel_serico_w		double precision;
dt_inicio_vig_result_w	timestamp;

C02 CURSOR FOR
	SELECT	qt_nivel_serico
	from	rep_result_vanco
	where	1 = 1
	and		dt_resultado > dt_inicio_vig_result_w
	and		ie_novo_resultado = 'S'
	and		nr_atendimento = nr_atendimento_w
	order by dt_resultado;

C03 CURSOR FOR
	SELECT	ie_ajuste_dose
	from	rep_nivel_serico
	where	ie_risco in ('I', 'C')
	and		(((coalesce(nr_seq_superior::text, '') = '') and (coalesce(nr_seq_regra_pai_w::text, '') = '')) or (nr_seq_superior = nr_seq_regra_pai_w))
	and		qt_nivel_serico_w between qt_inicial and qt_final
	and		ie_paciente_dialise = ie_dialise_w
	order by nr_sequencia;


BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (ie_tipo_seq_p IS NOT NULL AND ie_tipo_seq_p::text <> '') then

	if (ie_tipo_seq_p = 'PROCESSO') then
		select	max(nr_prescricao)
		into STRICT	nr_prescricao_w
		from	adep_processo
		where	nr_sequencia = nr_sequencia_p;
	end if;

	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then

		select	max(nr_atendimento),
				max(dt_inicio_prescr),
				coalesce(max(ie_paciente_dialise), 'N')
		into STRICT	nr_atendimento_w,
				dt_inicio_vig_result_w,
				ie_dialise_w
		from	prescr_medica
		where	coalesce(dt_suspensao::text, '') = ''
		and		nr_prescricao = nr_prescricao_w;

		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			select	coalesce(max('S'), 'N')
			into STRICT	ie_retorno_w
			from	prescr_material
			where	obter_se_mat_vancomicina(cd_material) = 'S'
			and		coalesce(dt_suspensao::text, '') = ''
			and		ie_agrupador = 1
			and		nr_prescricao = nr_prescricao_w;

			if (ie_retorno_w = 'S') then
				select	trunc(dt_inicio_vig_result_w) - round(coalesce(max(qt_horas_proced), 168)/24)
				into STRICT	dt_inicio_vig_result_w
				from	rep_nivel_serico;

				-- Verifica se possui resultado de vancomicinemia/vancocinemia
				select	coalesce(max('S'), 'N')
				into STRICT	ie_retorno_w
				from	rep_result_vanco
				where	dt_resultado > dt_inicio_vig_result_w
				and		ie_novo_resultado = 'S'
				and		nr_atendimento = nr_atendimento_w;

				if (ie_retorno_w = 'S') then

					-- Busca novos resultados do atendimento
					open C02;
					loop
					fetch C02 into
						qt_nivel_serico_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin

						-- Verificar qual regra assumida para o Ãºltimo resultado
						select	max(nr_seq_regra_resultado)
						into STRICT	nr_seq_regra_pai_w
						from	rep_result_vanco
						where	dt_resultado > dt_inicio_vig_result_w
						and		ie_novo_resultado = 'N'
						and		nr_atendimento = nr_atendimento_w
						and		dt_atualizacao = (	SELECT	max(dt_atualizacao)
													from	rep_result_vanco
													where	dt_resultado > dt_inicio_vig_result_w
													and		ie_novo_resultado = 'N'
													and		nr_atendimento = nr_atendimento_w);

						-- Verificar se a regra assumida possui regras dependentes
						select	max(nr_seq_superior)
						into STRICT	nr_seq_regra_pai_w
						from	rep_nivel_serico
						where	qt_nivel_serico_w between qt_inicial and qt_final
						and		ie_paciente_dialise = ie_dialise_w
						and		nr_seq_superior = nr_seq_regra_pai_w;

						-- Buscar regras conforme resultado // Regras pais || ou || Regras filhas
						open C03;
						loop
						fetch C03 into
							ie_ajuste_dose_w;
						EXIT WHEN NOT FOUND; /* apply on C03 */

							if (ie_ajuste_dose_w <> 'M') then
								return 'S';
							end if;

						end loop;
						close C03;

						end;
					end loop;
					close C02;

				end if;
			end if;
		end if;
	end if;
end if;

return 'N';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consistir_acoes_vanco_nvs ( nr_sequencia_p bigint, ie_tipo_seq_p text) FROM PUBLIC;

