-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_exce_regra_taxa_pos ( nr_seq_regra_p pls_regra_pos_estab.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, ie_origem_protocolo_p pls_protocolo_conta.ie_origem_protocolo%type, ie_tipo_guia_p pls_conta.ie_tipo_guia%type, nr_seq_clinica_p pls_conta.nr_seq_clinica%type, nr_seq_prest_exec_p pls_prestador.nr_sequencia%type, nr_seq_prest_solic_p pls_prestador.nr_sequencia%type, nr_seq_prest_atend_p pls_prestador.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


ds_retorno_w 		varchar(1) := 'N';
ie_prest_valido_w	varchar(1) := 'S';
ie_grupo_servico_w	varchar(1) := 'S';

C01 CURSOR FOR
	SELECT	nr_seq_grupo_servico,
			nr_seq_prestador,
			ie_tipo_prestador
	from	pls_regra_pos_estab_exce a
	where	a.nr_seq_regra = nr_seq_regra_p
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento	= cd_procedimento_p AND cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> ''))
	and	((coalesce(a.ie_origem_proced::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_p AND ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> ''))
	and	((coalesce(a.ie_origem_protocolo::text, '') = '') or (a.ie_origem_protocolo = ie_origem_protocolo_p AND ie_origem_protocolo_p IS NOT NULL AND ie_origem_protocolo_p::text <> ''))
	and	((coalesce(a.ie_tipo_guia::text, '') = '') or ( a.ie_tipo_guia = ie_tipo_guia_p AND ie_tipo_guia_p IS NOT NULL AND ie_tipo_guia_p::text <> ''))
	and	((coalesce(a.nr_seq_clinica::text, '') = '') or (a.nr_seq_clinica = nr_seq_clinica_p AND nr_seq_clinica_p IS NOT NULL AND nr_seq_clinica_p::text <> ''));
BEGIN

for r_c01_w in C01 loop

	ie_grupo_servico_w  := 'S';
	ie_prest_valido_w	:= 'S';
	--Quando encontrar uma regra de exceção já é o suficiente, não precisando mais processar as demais.
	if (ds_retorno_w = 'N') then
		if (r_c01_w.nr_seq_prestador IS NOT NULL AND r_c01_w.nr_seq_prestador::text <> '') then

			ie_prest_valido_w := 'N';

			if ( r_c01_w.ie_tipo_prestador = 'A') then

				if (nr_seq_prest_atend_p IS NOT NULL AND nr_seq_prest_atend_p::text <> '' AND r_c01_w.nr_seq_prestador = nr_seq_prest_atend_p) then
					ie_prest_valido_w := 'S';
				end if;

			elsif ( r_c01_w.ie_tipo_prestador = 'E') then
				if (nr_seq_prest_exec_p IS NOT NULL AND nr_seq_prest_exec_p::text <> '' AND r_c01_w.nr_seq_prestador = nr_seq_prest_exec_p) then
					ie_prest_valido_w := 'S';
				end if;
			else
				if (nr_seq_prest_solic_p IS NOT NULL AND nr_seq_prest_solic_p::text <> '' AND r_c01_w.nr_seq_prestador = nr_seq_prest_solic_p) then
					ie_prest_valido_w := 'S';
				end if;
			end if;
		end if;

		if (r_c01_w.nr_seq_grupo_servico IS NOT NULL AND r_c01_w.nr_seq_grupo_servico::text <> '') then

			ie_grupo_servico_w := 'N';

			if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
				ie_grupo_servico_w	:= pls_se_grupo_preco_servico(r_c01_w.nr_seq_grupo_servico, cd_procedimento_p, ie_origem_proced_p);
			end if;
		end if;

		if (ie_prest_valido_w = 'S' AND ie_grupo_servico_w = 'S') then
			ds_retorno_w	:= 'S';
		else
			ds_retorno_w := 'N';
		end if;
	end if;

end loop;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_exce_regra_taxa_pos ( nr_seq_regra_p pls_regra_pos_estab.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, ie_origem_protocolo_p pls_protocolo_conta.ie_origem_protocolo%type, ie_tipo_guia_p pls_conta.ie_tipo_guia%type, nr_seq_clinica_p pls_conta.nr_seq_clinica%type, nr_seq_prest_exec_p pls_prestador.nr_sequencia%type, nr_seq_prest_solic_p pls_prestador.nr_sequencia%type, nr_seq_prest_atend_p pls_prestador.nr_sequencia%type) FROM PUBLIC;

