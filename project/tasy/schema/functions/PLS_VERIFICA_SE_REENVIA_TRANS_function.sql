-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verifica_se_reenvia_trans ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, ie_tipo_transacao_p text, nr_seq_ordem_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Verifca se a ultima transação foi enviada dentro do período de 90 segundos.

ie_tipo_transacao_p:
CA - Cancelamento
PC - Pedido de complemento
DP - Decurso de prazo
PA - Pedido de autorização
PI - pedido de insistência
PS - Pedido de status
RA - resposta de auditoria
OR - Ordem de serviço
OA -  Autorização Ordem de serviço
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [   ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w			varchar(1)	:= 'S';
nm_tabela_w			varchar(30);
ds_restricao_w			varchar(255);
dt_atualizacao_w		timestamp;
ds_sql_w			varchar(1000);
nr_seq_execucao_w		bigint;
nr_sequencia_w			bigint;
qt_req_ordem_serv_w		bigint;

C01 CURSOR FOR
	SELECT	nr_seq_execucao
	from	ptu_pedido_autorizacao
	where	nr_seq_guia		= nr_seq_guia_p
	
union

	SELECT	nr_seq_execucao
	from	ptu_pedido_autorizacao
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	
union

	select	nr_seq_execucao
	from	ptu_pedido_compl_aut
	where	nr_seq_guia		= nr_seq_guia_p
	
union

	select	nr_seq_execucao
	from	ptu_pedido_compl_aut
	where	nr_seq_requisicao	= nr_seq_requisicao_p;


BEGIN

if (ie_tipo_transacao_p  ('CA', 'DP', 'PS', 'RA')) then
	open C01;
	loop
	fetch C01 into
		nr_seq_execucao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

if (ie_tipo_transacao_p = 'CA') then
	if (nr_seq_execucao_w IS NOT NULL AND nr_seq_execucao_w::text <> '') then
		select 	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from 	ptu_cancelamento
		where	nr_seq_execucao	= nr_seq_execucao_w;

		nm_tabela_w		:= 'ptu_cancelamento';
	end if;
elsif (ie_tipo_transacao_p = 'PC') then
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from 	ptu_pedido_compl_aut
	where	((nr_seq_guia 		=  nr_seq_guia_p)
	or (nr_seq_requisicao 	=  nr_seq_requisicao_p ));

	nm_tabela_w	:= 'ptu_pedido_compl_aut';
elsif (ie_tipo_transacao_p = 'DP') then
	if (nr_seq_execucao_w IS NOT NULL AND nr_seq_execucao_w::text <> '') then
		select 	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from 	ptu_decurso_prazo
		where	nr_seq_execucao	= nr_seq_execucao_w;

		nm_tabela_w	:= 'ptu_decurso_prazo';
	end if;
elsif (ie_tipo_transacao_p = 'PA') then
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from 	ptu_pedido_autorizacao
	where	((nr_seq_requisicao	= nr_seq_requisicao_p)
	or (nr_seq_guia		= nr_seq_guia_p));

	nm_tabela_w	:= 'ptu_pedido_autorizacao';
elsif (ie_tipo_transacao_p = 'PI') then
	begin
		select	nr_seq_execucao
		into STRICT	nr_seq_execucao_w
		from	ptu_pedido_autorizacao b
		where	((b.nr_seq_requisicao	= nr_seq_requisicao_p)
		or (b.nr_seq_guia		= nr_seq_guia_p))
		and	exists	(SELECT 	1
					from	ptu_resposta_autorizacao x
					where	((x.nr_seq_requisicao	= b.nr_seq_requisicao)
					or (x.nr_seq_guia		= b.nr_seq_guia)));
	exception
	when others then
		begin
			select	nr_seq_execucao
			into STRICT	nr_seq_execucao_w
			from	ptu_pedido_compl_aut b
			where	((b.nr_seq_requisicao	= nr_seq_requisicao_p)
			or (b.nr_seq_guia		= nr_seq_guia_p))
			and	exists	(SELECT 	1
					from	ptu_resposta_autorizacao x
					where	((x.nr_seq_requisicao	= b.nr_seq_requisicao)
					or (x.nr_seq_guia		= b.nr_seq_guia)));
		exception
		when others then
			nr_seq_execucao_w	:= null;
		end;
	end;
	if (nr_seq_execucao_w IS NOT NULL AND nr_seq_execucao_w::text <> '') then
		select 	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from 	ptu_pedido_insistencia
		where	nr_seq_execucao	= nr_seq_execucao_w;

		nm_tabela_w	:= 'ptu_pedido_insistencia';
	end if;
elsif (ie_tipo_transacao_p = 'PS') then
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	ptu_pedido_status
	where	((nr_seq_guia		 = nr_seq_guia_p )
	or (nr_seq_requisicao	 = nr_seq_requisicao_p));

	nm_tabela_w	:= 'ptu_pedido_status';
elsif (ie_tipo_transacao_p = 'RA') then
	if (nr_seq_execucao_w IS NOT NULL AND nr_seq_execucao_w::text <> '') then
		select 	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from 	ptu_resposta_auditoria
		where	nr_seq_execucao	= nr_seq_execucao_w;

		nm_tabela_w	:= 'ptu_resposta_auditoria';
	end if;
elsif (ie_tipo_transacao_p = 'OR') then
	-- OS 1235602 - deve ser realizada a validação somente se a ordem de serviço já tiver sido enviada (possua nr_transacao_solicitante)
	select 	count(1)
	into STRICT	qt_req_ordem_serv_w
	from   	ptu_requisicao_ordem_serv
	where  	nr_sequencia	= nr_seq_ordem_p
	and    	(nr_transacao_solicitante IS NOT NULL AND nr_transacao_solicitante::text <> '');

	if (qt_req_ordem_serv_w > 0) then
		nr_sequencia_w	:= nr_seq_ordem_p;
		nm_tabela_w	:= 'ptu_requisicao_ordem_serv';
	end if;
elsif (ie_tipo_transacao_p = 'OA') then
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from 	ptu_autorizacao_ordem_serv
	where	((nr_seq_guia 		= nr_seq_guia_p )
	or (nr_seq_requisicao	= nr_seq_requisicao_p));

	nm_tabela_w	:= 'ptu_autorizacao_ordem_serv';
end if;
if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
	begin
	ds_sql_w	:=	' select	''N'' ' ||
				' from ' 	|| nm_tabela_w ||
				' where 	to_number((sysdate - dt_atualizacao) * 86400) <= 60 ' ||
				' and		nr_sequencia	= ' || nr_sequencia_w;

	execute	immediate 	ds_sql_w
		into STRICT		ds_retorno_w;
	exception
	when others then
		ds_retorno_w	:= 'S';
	end;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verifica_se_reenvia_trans ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, ie_tipo_transacao_p text, nr_seq_ordem_p bigint) FROM PUBLIC;

