-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_emails_envio_compra ( nr_documento_p bigint, ie_tipo_documento_p text, nr_seq_aprovacao_p bigint, nr_seq_proc_aprov_p bigint, nr_seq_regra_envio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE

 
nm_usuario_receb_w	varchar(15);
nm_usuario_resp_w	varchar(15);
cd_pessoa_resp_w		varchar(10);
ds_email_w		varchar(255);
ds_lista_email_w		varchar(4000);
cd_centro_custo_w	integer;
cd_local_estoque_w	integer;
ie_usuario_w		varchar(15);
ie_aprov_dif_regra_w	varchar(1);
nm_usuario_aprov_w	varchar(15);
ds_lista_email_aprov_w	varchar(2000);
ie_existe_w		varchar(1);
cd_pessoa_resp_cc_w	varchar(10);
nm_usuario_resp_cc_w	varchar(15);
cd_pessoa_solicitante_w	varchar(10);
ie_envia_pessoa_deleg_w	varchar(1);

c00 CURSOR FOR 
SELECT	nm_usuario_aprov 
from	processo_aprov_compra 
where	nr_sequencia in (SELECT	x.nr_seq_aprovacao 
			from	solic_compra_item x 
			where	x.nr_solic_compra = nr_documento_p) 
group by	nm_usuario_aprov;

c01 CURSOR FOR 
SELECT	nm_usuario_receb, 
	coalesce(max(ie_aprov_dif_regra),'N') 
from	regra_envio_email_usu 
where	nr_seq_regra = nr_seq_regra_envio_p 
and	(nm_usuario_receb IS NOT NULL AND nm_usuario_receb::text <> '') 
group by	nm_usuario_receb;

c02 CURSOR FOR 
SELECT	ie_usuario_receb, 
	coalesce(max(ie_aprov_dif_regra),'N') 
from	regra_envio_email_usu 
where	nr_seq_regra = nr_seq_regra_envio_p 
and	(ie_usuario_receb IS NOT NULL AND ie_usuario_receb::text <> '') 
group by	ie_usuario_receb;

c03 CURSOR FOR 
SELECT	distinct 
	cd_pessoa_resp 
from	setor_atendimento 
where	cd_estabelecimento = cd_estabelecimento_p 
and	cd_centro_custo_w <> 0 
and	cd_centro_custo = cd_centro_custo_w 

union all
 
SELECT	distinct 
	cd_pessoa_resp 
from	setor_atendimento 
where	cd_estabelecimento = cd_estabelecimento_p 
and	cd_centro_custo_w = 0 
and	cd_local_estoque = cd_local_estoque_w;

 
c04 CURSOR FOR 
SELECT distinct 
	coalesce(cd_pessoa_resp,0) 
from	centro_custo_resp 
where	cd_centro_custo = cd_centro_custo_w;

c05 CURSOR FOR 
SELECT	distinct 
	ds_email 
from	processo_aprov_compra a, 
	usuario b 
where	a.nm_usuario_aprov = b.nm_usuario 
and	a.nr_sequencia = nr_seq_aprovacao_p 
and	a.ie_aprov_reprov = 'A';

c06 CURSOR FOR 
SELECT	ds_email 
from	(SELECT	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		usuario b 
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and	a.nr_sequencia = nr_seq_aprovacao_p 
	and	a.ie_aprov_reprov = 'P' 
	and	ie_envia_pessoa_deleg_w <> 'S' 
	
union all
 
	select	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		usuario b 
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and	a.nr_sequencia = nr_seq_aprovacao_p 
	and	a.ie_aprov_reprov = 'P' 
	and	ie_envia_pessoa_deleg_w = 'S' 
	and	not exists (select	1 
			from	pessoa_fisica_delegacao x 
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica 
			and	((coalesce(pkg_date_utils.get_time(x.dt_inicio_limite,0,0,0),pkg_date_utils.get_time(clock_timestamp(),0,0,0)) <= pkg_date_utils.get_time(clock_timestamp(),0,0,0)) and (pkg_date_utils.get_time(x.dt_limite,0,0,0) >= pkg_date_utils.get_time(clock_timestamp(),0,0,0)))) 
	
union all
 
	select	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		pessoa_fisica_delegacao c, 
		usuario b 
	where	a.cd_pessoa_fisica = c.cd_pessoa_fisica 
	and	c.cd_pessoa_substituta = b.cd_pessoa_fisica 
	and	((coalesce(pkg_date_utils.get_time(c.dt_inicio_limite,0,0,0),pkg_date_utils.get_time(clock_timestamp(),0,0,0)) <= pkg_date_utils.get_time(clock_timestamp(),0,0,0)) and (pkg_date_utils.get_time(c.dt_limite,0,0,0) >= pkg_date_utils.get_time(clock_timestamp(),0,0,0))) 
	and	a.nr_sequencia = nr_seq_aprovacao_p 
	and	a.ie_aprov_reprov = 'P' 
	and	ie_envia_pessoa_deleg_w = 'S') alias25 
group by	ds_email;

c07 CURSOR FOR 
SELECT	ds_email 
from	(SELECT	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		usuario b 
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and	a.nr_sequencia = nr_seq_aprovacao_p 
	and	ie_envia_pessoa_deleg_w <> 'S' 
	
union all
 
	select	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		usuario b 
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and	a.nr_sequencia = nr_seq_aprovacao_p 
	and	ie_envia_pessoa_deleg_w = 'S' 
	and	not exists (select	1 
			from	pessoa_fisica_delegacao x 
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica 
			and	((coalesce(pkg_date_utils.get_time(x.dt_inicio_limite,0,0,0),pkg_date_utils.get_time(clock_timestamp(),0,0,0)) <= pkg_date_utils.get_time(clock_timestamp(),0,0,0)) and (pkg_date_utils.get_time(x.dt_limite,0,0,0) >= pkg_date_utils.get_time(clock_timestamp(),0,0,0)))) 
	
union all
 
	select	b.ds_email 
	from	pessoas_processo_aprovacao_v a, 
		pessoa_fisica_delegacao c, 
		usuario b 
	where	a.cd_pessoa_fisica = c.cd_pessoa_fisica 
	and	c.cd_pessoa_substituta = b.cd_pessoa_fisica 
	and	((coalesce(pkg_date_utils.get_time(c.dt_inicio_limite,0,0,0),pkg_date_utils.get_time(clock_timestamp(),0,0,0)) <= pkg_date_utils.get_time(clock_timestamp(),0,0,0)) and (pkg_date_utils.get_time(c.dt_limite,0,0,0) >= pkg_date_utils.get_time(clock_timestamp(),0,0,0))) 
	and	a.nr_sequencia = nr_seq_aprovacao_p 
	and	ie_envia_pessoa_deleg_w = 'S') alias25 
group by	ds_email;


BEGIN 
 
select	coalesce(max(ie_envia_pessoa_deleg),'N') 
into STRICT	ie_envia_pessoa_deleg_w 
from	regra_envio_email_compra 
where	nr_sequencia = nr_seq_regra_envio_p;
 
if (ie_tipo_documento_p = 'SC') then 
	begin 
 
	open c00;
	loop 
	fetch c00 into 
		nm_usuario_aprov_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		begin 
	 
		select	ds_email 
		into STRICT	ds_email_w 
		from	usuario 
		where	nm_usuario = nm_usuario_aprov_w;
	 
		if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then 
			ds_lista_email_aprov_w	:= ds_lista_email_aprov_w || ds_email_w || ' ';
		end if;
 
		end;
	end loop;
	close c00;
		 
	exception when no_data_found then 
		ds_lista_email_aprov_w	:= '';
	end;
end if;
 
open c01;
loop 
fetch c01 into 
	nm_usuario_receb_w, 
	ie_aprov_dif_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	 
	select	ds_email 
	into STRICT	ds_email_w 
	from	usuario 
	where	nm_usuario = nm_usuario_receb_w;
	 
	 
	if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then 
		begin 
 
		select	coalesce(max('S'),'N') 
		into STRICT	ie_existe_w 
		 
		where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');
 
		if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
			ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
		end if;
 
		end;
	end if;
 
	end;
end loop;
close c01;
 
open c02;
loop 
fetch c02 into 
	ie_usuario_w, 
	ie_aprov_dif_regra_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
	if (ie_usuario_w IS NOT NULL AND ie_usuario_w::text <> '') then 
		begin 
 
		if (ie_tipo_documento_p = 'SC') then 
			begin 
 
			select	coalesce(max(cd_centro_custo),0), 
				coalesce(max(cd_local_estoque),0), 
				coalesce(max(cd_pessoa_solicitante),'X') 
			into STRICT	cd_centro_custo_w, 
				cd_local_estoque_w, 
				cd_pessoa_solicitante_w 
			from	solic_compra 
			where	nr_solic_compra = nr_documento_p;
 
			end;
		end if;
		 
		if (ie_usuario_w = 1) or (ie_usuario_w = 2) then 
		 
			open c03;
			loop 
			fetch c03 into 
				cd_pessoa_resp_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin 
 
				select	max(nm_usuario) 
				into STRICT	nm_usuario_resp_w 
				from	usuario 
				where	cd_pessoa_fisica = cd_pessoa_resp_w;
 
				if (nm_usuario_resp_w IS NOT NULL AND nm_usuario_resp_w::text <> '') then 
					begin 
	 
					select	ds_email 
					into STRICT	ds_email_w 
					from	usuario 
					where	nm_usuario = nm_usuario_resp_w;
 
					select	coalesce(max('S'),'N') 
					into STRICT	ie_existe_w 
					 
					where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');
 
					if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
						ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
					end if;
 
					end;
				end if;
 
				end;
			end loop;
			close c03;
		end if;
 
		if (ie_usuario_w = 3)	 then 
		 
			open C04;
			loop 
			fetch C04 into	 
				cd_pessoa_resp_cc_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				select	max(nm_usuario) 
				into STRICT	nm_usuario_resp_w 
				from	usuario 
				where	cd_pessoa_fisica = cd_pessoa_resp_cc_w;
			 
				if (nm_usuario_resp_w IS NOT NULL AND nm_usuario_resp_w::text <> '') then 
					begin 
		 
					select	ds_email 
					into STRICT	ds_email_w 
					from	usuario 
					where	nm_usuario = nm_usuario_resp_w;
					 
					select	coalesce(max('S'),'N') 
					into STRICT	ie_existe_w 
					 
					where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');	
					 
					if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
						ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
					end if;
					end;	
				end if;
				end;
			end loop;
			close C04;
			end if;	
		end;
		end if;
 
		if (ie_usuario_w = 4) and (cd_pessoa_solicitante_w <> 'X') then 
			begin 
 
			select	max(nm_usuario) 
			into STRICT	nm_usuario_resp_w 
			from	usuario 
			where	cd_pessoa_fisica = cd_pessoa_solicitante_w;
 
			if (nm_usuario_resp_w IS NOT NULL AND nm_usuario_resp_w::text <> '') then 
				begin 
	 
				select	ds_email 
				into STRICT	ds_email_w 
				from	usuario 
				where	nm_usuario = nm_usuario_resp_w;
 
				select	coalesce(max('S'),'N') 
				into STRICT	ie_existe_w 
				 
				where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');
 
				if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
					ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
				end if;
 
				end;
			end if;
	 
			end;
		end if;
 
		if (ie_usuario_w = 5) then 
			begin 
 
			open c05;
			loop 
			fetch c05 into 
				ds_email_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin 
 
				select	coalesce(max('S'),'N') 
				into STRICT	ie_existe_w 
				 
				where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');
 
				if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
					ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
				end if;
 
				end;
			end loop;
			close c05;			
 
			end;
		end if;
 
		if (ie_usuario_w = 6) then 
			begin 
 
			open c06;
			loop 
			fetch c06 into 
				ds_email_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */
				begin 
 
				select	coalesce(max('S'),'N') 
				into STRICT	ie_existe_w 
				 
				where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');
 
				if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
					ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
				end if;
 
				end;
			end loop;
			close c06;
 
			end;
		end if;
 
		if (ie_usuario_w = 7) then 
			begin 
 
			open c07;
			loop 
			fetch c07 into 
				ds_email_w;
			EXIT WHEN NOT FOUND; /* apply on c07 */
				begin 
 
				select	coalesce(max('S'),'N') 
				into STRICT	ie_existe_w 
				 
				where	upper(ds_lista_email_aprov_w) like upper('%' || ds_email_w || '%');
 
				if (ie_aprov_dif_regra_w = 'N') or (ie_aprov_dif_regra_w = 'S') and (ie_existe_w = 'N') then 
					ds_lista_email_w	:= ds_lista_email_w || ds_email_w || ';';
				end if;
 
				end;
			end loop;
			close c07;
 
			end;
		end if;
 
	end;
end loop;
close c02;
 
return	ds_lista_email_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_emails_envio_compra ( nr_documento_p bigint, ie_tipo_documento_p text, nr_seq_aprovacao_p bigint, nr_seq_proc_aprov_p bigint, nr_seq_regra_envio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

