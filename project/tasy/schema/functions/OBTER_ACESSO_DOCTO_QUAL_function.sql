-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_acesso_docto_qual ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_visualiza_setor_usuario_p text, ie_consid_toda_regra_p text ) RETURNS varchar AS $body$
 -- Troca OR por AND
DECLARE


ds_resultado_w			varchar(1);
qt_reg_w			bigint;
cd_cargo_w			bigint;
cd_estabelecimento_w		smallint;
cd_setor_atendimento_w		integer;
cd_perfil_w			integer := obter_perfil_ativo;
ie_libera_estab_w		varchar(1);
cd_classif_setor_w		varchar(02);
nr_seq_superior_w		varchar(10);


BEGIN
ds_resultado_w	:= 'N';

select	max(a.cd_setor_atendimento),
	max(b.cd_classif_setor)
into STRICT	cd_setor_atendimento_w,
	cd_classif_setor_w
from	setor_atendimento b,
	usuario a
where	a.nm_usuario 		= nm_usuario_p
and	a.cd_setor_atendimento 	= b.cd_setor_atendimento;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	qua_documento
where	nr_sequencia = nr_sequencia_p;

select	count(*)
into STRICT	qt_reg_w
from	qua_doc_lib
where	nr_seq_doc	= nr_sequencia_p;

/*Se nao tiver nenhuma regra, esta liberado*/

if (qt_reg_w = 0) then
	ds_resultado_w	:= 'S';
else
	/*Se tiver alguma regra em branco, esta liberado*/

	begin
	select	count(*)
	into STRICT	qt_reg_w
	from	qua_doc_lib
	where	nr_seq_doc	= nr_sequencia_p
	and	coalesce(cd_cargo::text, '') = ''
	and	coalesce(cd_setor_atendimento::text, '') = ''
	and	coalesce(cd_perfil::text, '') = ''
	and	coalesce(nm_usuario_lib::text, '') = ''
	and	coalesce(nr_seq_grupo_cargo::text, '') = ''
	and 	coalesce(nr_seq_grupo_usuario::text, '') = ''
	and	coalesce(cd_classif_setor::text, '') = ''
	and	coalesce(nr_seq_grupo_perfil::text, '') = ''
	and	coalesce(nr_seq_grupo_gerencia::text, '') = ''
	and	coalesce(nr_seq_funcao::text, '') = ''
	and     ( ((coalesce(dt_inicio_vigencia::text, '') = '') and (coalesce(dt_fim_vigencia::text, '') = '')) or
		((clock_timestamp() >= dt_inicio_vigencia) and (coalesce(dt_fim_vigencia::text, '') = ''))or
		((clock_timestamp() <= dt_fim_vigencia) and (coalesce(dt_inicio_vigencia::text, '') = ''))or
		((clock_timestamp() >= dt_inicio_vigencia) and (clock_timestamp() <= dt_fim_vigencia)));
	
	if (qt_reg_w > 0) then
		ds_resultado_w	:= 'S';
	end if;

	select	coalesce(b.cd_cargo,0)
	into STRICT	cd_cargo_w
	from	usuario a,
		pessoa_fisica b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nm_usuario 	= nm_usuario_p;
	exception when no_data_found then
		cd_cargo_w	:= 0;
	end;
end	if;

if (coalesce(ie_consid_toda_regra_p,'N') = 'N') then
	begin
	/*Se tiver regra para usuario ou cargo do usuario, esta liberado*/

	select	count(*)
	into STRICT	qt_reg_w
	from	qua_doc_lib
	where	nr_seq_doc	= nr_sequencia_p
	and (nm_usuario_lib	= nm_usuario_p or cd_cargo = cd_cargo_w)
	and     ( ((coalesce(dt_inicio_vigencia::text, '') = '') and (coalesce(dt_fim_vigencia::text, '') = '')) or
		((clock_timestamp() >= dt_inicio_vigencia) and (coalesce(dt_fim_vigencia::text, '') = ''))or
		((clock_timestamp() <= dt_fim_vigencia) and (coalesce(dt_inicio_vigencia::text, '') = ''))or
		((clock_timestamp() >= dt_inicio_vigencia) and (clock_timestamp() <= dt_fim_vigencia)));
	if (qt_reg_w > 0) then
		ds_resultado_w	:= 'S';
	else
		/*Se tiver regra para algum perfil liberado ao usuario, esta liberado*/

		select count(*)
		into STRICT	qt_reg_w
		from	usuario_perfil b,
			qua_doc_lib a
		where	a.nr_seq_doc	= nr_sequencia_p
		and	a.cd_perfil	= b.cd_perfil
		and	b.nm_usuario	= nm_usuario_p
		and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
			((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
		if (qt_reg_w > 0) then
			ds_resultado_w	:= 'S';
		end if;
	end if;
	
	/*Se tiver regra para algum setor liberado ao usuario, esta liberado*/

	if (ds_resultado_w = 'N') then
		if (ie_visualiza_setor_usuario_p = 'S') then
			select	coalesce(max(obter_se_setor_usuario(a.cd_setor_atendimento, nm_usuario_p)), 'N')
			into STRICT	ds_resultado_w
			from	qua_doc_lib a
			where	a.nr_seq_doc = nr_sequencia_p
			and	(a.cd_setor_atendimento IS NOT NULL AND a.cd_setor_atendimento::text <> '')
			and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
				((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
		else
			/* Compara o setor da regra com o setor do usuário logado (buscando pela package) */

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ds_resultado_w
			from	qua_doc_lib a
			where	a.nr_seq_doc	       = nr_sequencia_p
			and	a.cd_setor_atendimento = cd_setor_atendimento_w
			and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
				((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
		end if;
	end if;
	
	/* Se tiver regra para algum agrupamento liberado ao usuario, esta liberado*/

	if (ds_resultado_w = 'N') then
		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_lib a,
			qua_grupo_cargo b,
			qua_cargo_agrup c
		where	a.nr_seq_grupo_cargo	= b.nr_sequencia
		and	b.nr_sequencia 		= c.nr_seq_agrup
		and	a.nr_seq_doc   		= nr_sequencia_p
		and	c.cd_cargo     		= cd_cargo_w
		and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
			((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));

		if (qt_reg_w > 0) then
			ds_resultado_w := 'S';
		end if;
	end if;
	
	/* Se tiver regra para algum 'grupo de usuário' liberado ao usuário, esta liberado*/

	if (ds_resultado_w = 'N') then
		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_lib a,
			grupo_usuario b,
			usuario_grupo c
		where	a.nr_seq_grupo_usuario	= b.nr_sequencia
		and	b.nr_sequencia 		= c.nr_seq_grupo
		and	a.nr_seq_doc   		= nr_sequencia_p
		and	((c.nm_usuario_grupo 	= nm_usuario_p) or (nm_usuario_exclusivo = nm_usuario_p))
		and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
			((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));

		if (qt_reg_w > 0) then
			ds_resultado_w := 'S';
		end if;
	end if;
	
	/*Se tiver regra para algum 'grupo perfil' liberado ao usuário, está liberado*/

	if (ds_resultado_w = 'N') then
		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_lib a,
			grupo_perfil b,
			grupo_perfil_item c
		where	a.nr_seq_grupo_perfil	= b.nr_sequencia
		and	b.nr_sequencia 		= c.nr_seq_grupo_perfil
		and	a.nr_seq_doc   		= nr_sequencia_p
		and	c.cd_perfil		= cd_perfil_w
		and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
			((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
	
		if (qt_reg_w > 0) then
			ds_resultado_w := 'S';
		end if;
	end if;
	
	
	/*Se tiver regra para algum classif setor liberado ao usuario, esta liberado*/

	if (ds_resultado_w = 'N') then
		if (ie_visualiza_setor_usuario_p = 'S') then
			select	coalesce(max(obter_se_setor_usuario(b.cd_setor_atendimento, nm_usuario_p)), 'N')
			into STRICT	ds_resultado_w
			from	setor_atendimento b,
				qua_doc_lib a
			where	a.nr_seq_doc = nr_sequencia_p
			and	(a.cd_classif_setor IS NOT NULL AND a.cd_classif_setor::text <> '')
			and	b.cd_classif_setor = a.cd_classif_setor
			and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
				((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
		else
			/* Compara o setor da regra com o setor do usuário logado (buscando pela package) */

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ds_resultado_w
			from	setor_atendimento b,
				qua_doc_lib a
			where	a.nr_seq_doc	       = nr_sequencia_p
			and	b.cd_setor_atendimento = cd_setor_atendimento_w
			and	a.cd_classif_setor = b.cd_classif_setor
			and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
				((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
				((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
		end if;
	end if;
	
	if (ds_resultado_w = 'N') then
		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_lib a,
				usuario b,
				pessoa_fisica c
		where	a.nr_seq_doc = nr_sequencia_p
		and		(a.nr_seq_funcao IS NOT NULL AND a.nr_seq_funcao::text <> '')
		and		b.nm_usuario = nm_usuario_p
		and		b.cd_pessoa_fisica = c.cd_pessoa_fisica
		and		a.nr_seq_funcao = c.nr_seq_funcao_pf;
	
		if (qt_reg_w > 0) then
			ds_resultado_w := 'S';
		end if;
	
	end if;
	
	if (ds_resultado_w = 'N') then
		begin
		select	count(*)
		into STRICT	qt_reg_w
		from 	qua_doc_lib a
		where	a.nr_seq_doc = nr_sequencia_p
		and	exists (	SELECT 	1
					from	gerencia_wheb e,
						gerencia_wheb_grupo b,
						gerencia_wheb_grupo_usu c,
						usuario d
					where	e.nr_sequencia = b.nr_seq_gerencia
					and	b.nr_sequencia = c.nr_seq_grupo
					and	c.nm_usuario_grupo = d.nm_usuario
					and	b.nr_sequencia = a.nr_seq_grupo_gerencia
					and	e.ie_situacao = 'A'
					and	b.ie_situacao = 'A'
					and	d.nm_usuario = nm_usuario_p)
		and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
			((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
			((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)));
			
		if (qt_reg_w > 0)	then
			ds_resultado_w := 'S';
		end if;
		end;
	end if;
	
	end;
else
	begin
	select	count(*)
	into STRICT	qt_reg_w
	from	qua_doc_lib a
	where	a.nr_seq_doc			= nr_sequencia_p
	and	coalesce(a.cd_perfil,cd_perfil_w)		= cd_perfil_w   	-- Perfil
	and	coalesce(a.cd_cargo,cd_cargo_w)		= cd_cargo_w	-- Cargo
	and	coalesce(a.nm_usuario_lib,nm_usuario_p)	= nm_usuario_p	-- Usuário
	and	coalesce(a.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w	-- Setor 
	and	coalesce(a.cd_classif_setor,cd_classif_setor_w)	= cd_classif_setor_w	-- Classif setor 
	and	(((a.nr_seq_grupo_cargo IS NOT NULL AND a.nr_seq_grupo_cargo::text <> '') and ( SELECT	count(*)
						from	qua_grupo_cargo x,
							qua_cargo_agrup y
						where	x.nr_sequencia		= y.nr_seq_agrup
						and	y.cd_cargo 		= cd_cargo_w
						and	a.nr_seq_grupo_cargo	= x.nr_sequencia) > 0) or
		coalesce(a.nr_seq_grupo_cargo::text, '') = '')		-- Agrupamento de cargo
	and	(((a.nr_seq_grupo_usuario IS NOT NULL AND a.nr_seq_grupo_usuario::text <> '') and ( select	count(*)
						from	grupo_usuario x,
							usuario_grupo y
						where	x.nr_sequencia 		= y.nr_seq_grupo
						and	a.nr_seq_grupo_usuario 	= x.nr_sequencia
						and	((y.nm_usuario_grupo 	= nm_usuario_p) or (x.nm_usuario_exclusivo = nm_usuario_p))) > 0) or
		coalesce(a.nr_seq_grupo_usuario::text, '') = '')
	and     ( ((coalesce(a.dt_inicio_vigencia::text, '') = '') and (coalesce(a.dt_fim_vigencia::text, '') = '')) or
		((clock_timestamp() >= a.dt_inicio_vigencia) and (coalesce(a.dt_fim_vigencia::text, '') = ''))or
		((clock_timestamp() <= a.dt_fim_vigencia) and (coalesce(a.dt_inicio_vigencia::text, '') = ''))or
		((clock_timestamp() >= a.dt_inicio_vigencia) and (clock_timestamp() <= a.dt_fim_vigencia)))
	and	(((a.nr_seq_grupo_perfil IS NOT NULL AND a.nr_seq_grupo_perfil::text <> '') and (select	count(*)
							from	grupo_perfil x,
								grupo_perfil_item y
							where	x.nr_sequencia		= y.nr_seq_grupo_perfil
							and	x.nr_sequencia = a.nr_seq_grupo_perfil
							and	y.cd_perfil = cd_perfil_w) > 0) or
		coalesce(a.nr_seq_grupo_perfil::text, '') = '')
	and	((coalesce(a.nr_seq_grupo_gerencia::text, '') = '') or
				exists (	select 	1 
						from	gerencia_wheb e,
							gerencia_wheb_grupo b,
							gerencia_wheb_grupo_usu c,
							usuario d
						where	e.nr_sequencia = b.nr_seq_gerencia
						and	b.nr_sequencia = c.nr_seq_grupo
						and	c.nm_usuario_grupo = d.nm_usuario
						and	b.nr_sequencia = a.nr_seq_grupo_gerencia
						and	e.ie_situacao = 'A'
						and	b.ie_situacao = 'A'
						and	d.nm_usuario = nm_usuario_p))
	and ((coalesce(a.nr_seq_funcao::text, '') = '') or exists (select 1
											 from 	usuario t,
													pessoa_fisica j
											 where  t.nm_usuario = nm_usuario_p
											 and	j.cd_pessoa_fisica = t.cd_pessoa_fisica
											 and 	j.nr_seq_funcao_pf = a.nr_seq_funcao));				
						
	if (qt_reg_w > 0) then
		ds_resultado_w	:= 'S';
	end if;	
	end;
end if;

/*Verifica liberação por estabelecimento  -- Deixar sempre no final */

select	nr_seq_superior
into STRICT	nr_seq_superior_w
from	qua_documento
where	nr_sequencia = nr_sequencia_p;

if coalesce(nr_seq_superior_w, 0) <> 0 then
	select	count(*)
	into STRICT	qt_reg_w
	from	qua_doc_lib_estab
	where	nr_seq_doc = nr_seq_superior_w;
	
	if (qt_reg_w = 0) and (cd_estabelecimento_w <> cd_estabelecimento_p) and (cd_estabelecimento_p <> 0) and (cd_estabelecimento_w <> 0) then
		begin
		ie_libera_estab_w := obter_param_usuario(4000, 199, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_libera_estab_w);
		
		if (ie_libera_estab_w = 'S') then
			ds_resultado_w	:= 'S';
		else	
			ds_resultado_w	:= 'N';
		end if;	
		end;
	elsif (qt_reg_w > 0) then
		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_lib_estab
		where	nr_seq_doc = nr_seq_superior_w
		and		((cd_estabelecimento   = cd_estabelecimento_p) or (cd_estabelecimento_w = cd_estabelecimento_p));
		
		if (qt_reg_w = 0) then
			ds_resultado_w	:= 'N';
		end if;
	end if;	
else
	select	count(*)
	into STRICT	qt_reg_w
	from	qua_doc_lib_estab
	where	nr_seq_doc = nr_sequencia_p;

	if (qt_reg_w = 0) and (cd_estabelecimento_w <> cd_estabelecimento_p) and (cd_estabelecimento_p <> 0) and (cd_estabelecimento_w <> 0) then
		begin
		ie_libera_estab_w := obter_param_usuario(4000, 199, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_libera_estab_w);
		
		if (ie_libera_estab_w = 'S') then
			ds_resultado_w	:= 'S';
		else	
			ds_resultado_w	:= 'N';
		end if;	
		end;
	elsif (qt_reg_w > 0) then
		select	count(*)
		into STRICT	qt_reg_w
		from	qua_doc_lib_estab
		where	nr_seq_doc = nr_sequencia_p
		and		((cd_estabelecimento   = cd_estabelecimento_p) or (cd_estabelecimento_w = cd_estabelecimento_p));
		
		if (qt_reg_w = 0) then
			ds_resultado_w	:= 'N';
		end if;
	end if;
end if;

RETURN ds_resultado_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_acesso_docto_qual ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_visualiza_setor_usuario_p text, ie_consid_toda_regra_p text ) FROM PUBLIC;

