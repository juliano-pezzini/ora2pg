-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_lib_conv_turno (cd_agenda_p bigint, cd_convenio_p bigint, hr_inicial_p timestamp) RETURNS varchar AS $body$
DECLARE


ie_liberado_w		varchar(01)	:= 'S';
ie_dia_semana_w		varchar(01);
qt_turnos_w		bigint;
cd_agenda_w		bigint;
hr_inicial_w		timestamp;


BEGIN

ie_dia_semana_w := to_char(pkg_date_utils.get_WeekDay(hr_inicial_p));

/* Tratar quando existe um convênio que pode set atendido */

select	coalesce(max(cd_agenda), 0),
	max(hr_inicial)
into STRICT	cd_agenda_w,
	hr_inicial_w
from	agenda_turno a
where	cd_agenda	= cd_agenda_p
and	ie_dia_semana	= ie_dia_semana_w
and	to_date('01/01/2000 ' || to_char(hr_inicial, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') <=	to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	to_date('01/01/2000 ' || to_char(hr_final, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')   >=	to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	exists (
	SELECT	1
	from	agenda_turno_conv x
	where	x.cd_agenda	= a.cd_agenda
	and	x.ie_dia_semana	= a.ie_dia_semana
	and	x.hr_inicial	= a.hr_inicial
	and	x.ie_atende_convenio 	= 'S'
	);


if (cd_agenda_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_turnos_w
	from	agenda_turno_conv
	where	cd_agenda		= cd_agenda_w
	and	ie_dia_semana		= ie_dia_semana_w
	and	hr_inicial		= hr_inicial_w
	and	cd_convenio		= cd_convenio_p
	and	ie_atende_convenio 	= 'S';


	if (qt_turnos_w = 0) then
		ie_liberado_w	:= 'N';
	else
		ie_liberado_w	:= 'S';
	end if;

	end;
end if;

/* Tratar quando existe um convênio que não pode ser atendido */

select	coalesce(max(cd_agenda), 0),
	max(hr_inicial)
into STRICT	cd_agenda_w,
	hr_inicial_w
from	agenda_turno a
where	cd_agenda	= cd_agenda_p
and	ie_dia_semana	= ie_dia_semana_w
and	to_date('01/01/2000 ' || to_char(hr_inicial, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') <=	to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	to_date('01/01/2000 ' || to_char(hr_final, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')   >=	to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	exists (SELECT	1
	from	agenda_turno_conv x
	where	x.cd_agenda	= a.cd_agenda
	and	x.ie_dia_semana	= a.ie_dia_semana
	and	x.hr_inicial	= a.hr_inicial
	and	x.ie_atende_convenio 	= 'N');


if (cd_agenda_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_turnos_w
	from	agenda_turno_conv
	where	cd_agenda		= cd_agenda_w
	and	ie_dia_semana		= ie_dia_semana_w
	and	hr_inicial		= hr_inicial_w
	and	cd_convenio		= cd_convenio_p
	and	ie_atende_convenio 	= 'N';

	if (qt_turnos_w = 0) then
		ie_liberado_w	:= 'S';
	else
		ie_liberado_w	:= 'N';
	end if;

	end;
end if;










/* Tratar quando existe um convênio que pode set atendido */

select	coalesce(max(cd_agenda), 0),
	max(hr_inicial)
into STRICT	cd_agenda_w,
	hr_inicial_w
from	agenda_turno_esp a
where	cd_agenda	=  cd_agenda_p
and	hr_inicial 	<= hr_inicial_p
and	hr_final   	>= hr_inicial_p
and	exists (SELECT	1
	from	agenda_turno_esp_conv x
	where	x.cd_agenda	= a.cd_agenda
	and	x.hr_inicial	= a.hr_inicial
	and	x.ie_atende_convenio 	= 'S');

if (cd_agenda_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_turnos_w
	from	agenda_turno_esp_conv
	where	cd_agenda		= cd_agenda_w
	and	hr_inicial		= hr_inicial_w
	and	cd_convenio		= cd_convenio_p
	and	ie_atende_convenio 	= 'S';


	if (qt_turnos_w = 0) then
		ie_liberado_w	:= 'N';
	else
		ie_liberado_w	:= 'S';
	end if;

	end;
end if;

/* Tratar quando existe um convênio que não pode ser atendido */

select	coalesce(max(cd_agenda), 0),
	max(hr_inicial)
into STRICT	cd_agenda_w,
	hr_inicial_w
from	agenda_turno_esp a
where	cd_agenda	= cd_agenda_p
and	to_date('01/01/2000 ' || to_char(hr_inicial, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') <= to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	to_date('01/01/2000 ' || to_char(hr_final, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')   >= to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	exists (SELECT	1
	from	agenda_turno_conv x
	where	x.cd_agenda	= a.cd_agenda
	and	x.hr_inicial	= a.hr_inicial
	and	x.ie_atende_convenio 	= 'N');


if (cd_agenda_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_turnos_w
	from	agenda_turno_esp_conv
	where	cd_agenda		= cd_agenda_w
	and	hr_inicial		= hr_inicial_w
	and	cd_convenio		= cd_convenio_p
	and	ie_atende_convenio 	= 'N';


	if (qt_turnos_w = 0) then
		ie_liberado_w	:= 'S';
	else
		ie_liberado_w	:= 'N';
	end if;

	end;
end if;




return ie_liberado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_lib_conv_turno (cd_agenda_p bigint, cd_convenio_p bigint, hr_inicial_p timestamp) FROM PUBLIC;

