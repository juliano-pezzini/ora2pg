-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_simpro ( cd_simpro_p text, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

ie_tipo_embalagem_w			varchar(3);
ie_tipo_fracao_w			varchar(4);
qt_embalagem_w				double precision;
qt_fracao_w 				double precision;
vl_preco_fabrica_fracao_w	double precision;
ds_referencia_produto_w		varchar(100);
ie_generico_w				varchar(1);
cd_estab_simpro_w			estabelecimento.cd_estabelecimento%type;
dt_validade_w				varchar(100);
nr_reg_anvisa_w 			simpro_preco.nr_reg_anvisa%type;
qt_reg_w					smallint;
dt_inicio_w					timestamp;
dt_fim_w					timestamp;
ds_retorno_w				varchar(20) := '';
idx 						bigint;

C01 CURSOR(dt_inicio_p timestamp, dt_fim_p timestamp) FOR
SELECT	dt_vigencia,
	coalesce(ie_tipo_embalagem,'0'),		
	coalesce(ie_tipo_fracao,'0'),		
	coalesce(qt_embalagem,0),
	coalesce(qt_fracao,0),
	coalesce(vl_preco_fabrica_fracao,0),
	ds_referencia_produto,
	ie_generico,
	dt_validade,
	nr_reg_anvisa
from	simpro_preco
where	cd_simpro = cd_simpro_p
and  	coalesce(cd_estabelecimento, coalesce(cd_estab_simpro_w, 0)) = coalesce(cd_estab_simpro_w, 0)
and		dt_vigencia between dt_inicio_p and dt_fim_p;


BEGIN

cd_estab_simpro_w := wheb_usuario_pck.get_cd_estabelecimento;

begin
select 	1
into STRICT	qt_reg_w
from 	simpro_preco
where 	coalesce(cd_estabelecimento, coalesce(cd_estab_simpro_w, 0)) = coalesce(cd_estab_simpro_w, 0)
and		cd_simpro = cd_simpro_p  LIMIT 1;
exception
when others then
	qt_reg_w := 0;
end;

if (qt_reg_w > 0) then
	begin
	dt_inicio_w 	:= clock_timestamp() - interval '30 days';
	dt_fim_w 		:= clock_timestamp();
	idx				:= 1;

	while coalesce(ds_retorno_w::text, '') = '' loop
	
	   idx := idx + 1;
	
	   open C01(dt_inicio_w, dt_fim_w);
	   loop
	   fetch C01 into	
		ds_retorno_w,
		ie_tipo_embalagem_w,		
		ie_tipo_fracao_w,		
		qt_embalagem_w,			 
		qt_fracao_w, 			
		vl_preco_fabrica_fracao_w,
		ds_referencia_produto_w,
		ie_generico_w,
		dt_validade_w,
		nr_reg_anvisa_w;
	   EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		
		ds_retorno_w 	:= ds_retorno_w;
		exit;		
		end;
	   end loop;
	   close C01;
	   
	   dt_inicio_w := clock_timestamp() - (30 * idx);
	
	end loop;
	
	end;
end if;

if (ie_opcao_p = 'TP') then
	return	ie_tipo_embalagem_w;
elsif (ie_opcao_p = 'TF') then
	return	ie_tipo_fracao_w;
elsif (ie_opcao_p = 'EM') then
	return	qt_embalagem_w;
elsif (ie_opcao_p = 'FR') then
	return	qt_fracao_w;
elsif (ie_opcao_p = 'PF') then
	return	vl_preco_fabrica_fracao_w;
elsif (ie_opcao_p = 'RP') then
	return	ds_referencia_produto_w;
elsif (ie_opcao_p = 'G') then
	return	ie_generico_w;
elsif (ie_opcao_p = 'DV') then
	if (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
		if	((length(dt_validade_w) = 6) or (length(dt_validade_w) = 8)) and (obter_se_somente_numero(dt_validade_w) = 'S') then
			dt_validade_w := to_char(to_date(dt_validade_w, 'dd/mm/yyyy'),'dd/MM/yyyy');
		end if;
		return	dt_validade_w;
	else
		return	dt_validade_w;
	end if;
elsif (ie_opcao_p = 'RA') then
	return nr_reg_anvisa_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_simpro ( cd_simpro_p text, ie_opcao_p text) FROM PUBLIC;

