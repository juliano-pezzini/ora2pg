-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_audit_estagio ( nr_seq_auditoria_p bigint, nr_interno_conta_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE



vl_novo_lancto_pos_w	double precision;
vl_novo_lancto_neg_w	double precision;
vl_ajuste_positivo_w	double precision;
nr_seq_item_w		bigint;
ie_tipo_w		bigint;
vl_retorno_w		double precision;
vl_ajuste_negativo_w	double precision;
vl_excluido_w		double precision;
vl_alteracao_valor_w	double precision;
vl_transferido_w	double precision;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		2 ie_tipo
	from	material_atend_paciente a,
		auditoria_matpaci b
	where	a.nr_sequencia	    = b.nr_seq_matpaci
	and	b.nr_seq_auditoria  = nr_seq_auditoria_p
	and 	a.nr_interno_conta  = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
	and 	(b.qt_ajuste IS NOT NULL AND b.qt_ajuste::text <> '')
	and 	b.qt_ajuste > b.qt_original
	
union all

	SELECT	a.nr_sequencia,
		1 ie_tipo
	from	procedimento_paciente a,
		auditoria_propaci b
	where	a.nr_sequencia	    = b.nr_seq_propaci
	and 	a.nr_interno_conta  = nr_interno_conta_p
	and	b.nr_seq_auditoria  = nr_seq_auditoria_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
	and 	(b.qt_ajuste IS NOT NULL AND b.qt_ajuste::text <> '')
	and 	b.qt_ajuste > b.qt_original
	order by ie_tipo;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		2 ie_tipo
	from	material_atend_paciente a,
		auditoria_matpaci b
	where	a.nr_sequencia	    = b.nr_seq_matpaci
	and	b.nr_seq_auditoria  = nr_seq_auditoria_p
	and 	a.nr_interno_conta  = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
	and 	(b.qt_ajuste IS NOT NULL AND b.qt_ajuste::text <> '')
	and 	b.qt_ajuste < b.qt_original
	
union all

	SELECT	a.nr_sequencia,
		1 ie_tipo
	from	procedimento_paciente a,
		auditoria_propaci b
	where	a.nr_sequencia	    = b.nr_seq_propaci
	and 	a.nr_interno_conta  = nr_interno_conta_p
	and	b.nr_seq_auditoria  = nr_seq_auditoria_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
	and 	(b.qt_ajuste IS NOT NULL AND b.qt_ajuste::text <> '')
	and 	b.qt_ajuste < b.qt_original
	order by ie_tipo;

C03 CURSOR FOR
	SELECT	b.vl_material vl_item,
		b.vl_material_ajuste vl_ajuste,
		2 ie_tipo
	from	auditoria_matpaci b
	where	b.nr_seq_auditoria  = nr_seq_auditoria_p
	and 	(b.vl_material_ajuste IS NOT NULL AND b.vl_material_ajuste::text <> '')
	
union all

	SELECT	b.vl_procedimento vl_item,
		b.vl_procedimento_ajuste vl_ajuste,
		1 ie_tipo
	from	auditoria_propaci b
	where	b.nr_seq_auditoria  = nr_seq_auditoria_p
	and 	(b.vl_procedimento_ajuste IS NOT NULL AND b.vl_procedimento_ajuste::text <> '')
	order by ie_tipo;

c03_w	C03%rowtype;



BEGIN

if (ie_opcao_p = 'I') then -- Incluído
	vl_novo_lancto_pos_w:= 0;

	select 	coalesce(sum(vl_item),0)
	into STRICT	vl_novo_lancto_pos_w
	from (
		SELECT	coalesce(sum(a.vl_material),0) vl_item
		from	material_atend_paciente a,
			auditoria_matpaci b
		where	a.nr_sequencia	    = b.nr_seq_matpaci
		and	b.nr_seq_auditoria  = nr_seq_auditoria_p
		and 	a.nr_interno_conta  = nr_interno_conta_p
		and 	coalesce(b.ie_original,'N') = 'N' -- Esse campo identifica que o item não foi gerado na criação da auditoria, logo ele eh um novo que foi lancado.
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
		and 	a.qt_material > 0
		
union all

		SELECT	coalesce(sum(a.vl_procedimento),0) vl_item
		from	procedimento_paciente a,
			auditoria_propaci b
		where	a.nr_sequencia	    = b.nr_seq_propaci
		and 	a.nr_interno_conta  = nr_interno_conta_p
		and	b.nr_seq_auditoria  = nr_seq_auditoria_p
		and 	coalesce(b.ie_original,'N') = 'N' -- Esse campo identifica que o item não foi gerado na criação da auditoria, logo ele eh um novo que foi lancado.
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
		and 	a.qt_procedimento > 0
		) alias12;


	vl_ajuste_positivo_w:= 0;

	open C01;
	loop
	fetch C01 into
		nr_seq_item_w,
		ie_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		vl_ajuste_positivo_w:= vl_ajuste_positivo_w + Obter_Valor_Auditoria_item(nr_seq_item_w, ie_tipo_w);
		end;
	end loop;
	close C01;


	vl_alteracao_valor_w:= 0;

	open C03;
	loop
	fetch C03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if	((c03_w.vl_ajuste - c03_w.vl_item) > 0) then -- alteração de valor para mais (positivo)
			vl_alteracao_valor_w:= vl_alteracao_valor_w + (c03_w.vl_ajuste - c03_w.vl_item);
		end if;
		end;
	end loop;
	close C03;



	vl_retorno_w:= vl_ajuste_positivo_w + vl_novo_lancto_pos_w + vl_alteracao_valor_w;

elsif (ie_opcao_p = 'E') then -- Excluído
	vl_novo_lancto_neg_w:= 0;

	select 	coalesce(sum(vl_item),0)
	into STRICT	vl_novo_lancto_neg_w
	from (
		SELECT	coalesce(sum(a.vl_material),0) vl_item
		from	material_atend_paciente a,
			auditoria_matpaci b
		where	a.nr_sequencia	    = b.nr_seq_matpaci
		and	b.nr_seq_auditoria  = nr_seq_auditoria_p
		and 	a.nr_interno_conta  = nr_interno_conta_p
		and 	coalesce(b.ie_original,'N') = 'N' -- Esse campo identifica que o item não foi gerado na criação da auditoria, logo ele eh um novo que foi lancado.
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
		and 	a.qt_material < 0
		
union all

		SELECT	coalesce(sum(a.vl_procedimento),0) vl_item
		from	procedimento_paciente a,
			auditoria_propaci b
		where	a.nr_sequencia	    = b.nr_seq_propaci
		and 	a.nr_interno_conta  = nr_interno_conta_p
		and	b.nr_seq_auditoria  = nr_seq_auditoria_p
		and 	coalesce(b.ie_original,'N') = 'N' -- Esse campo identifica que o item não foi gerado na criação da auditoria, logo ele eh um novo que foi lancado.
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia
		and 	a.qt_procedimento < 0
		) alias12;


	vl_excluido_w:= 0;

	select 	coalesce(sum(vl_item),0)
	into STRICT	vl_excluido_w
	from (
		SELECT	coalesce(sum(b.vl_material),0) vl_item
		from	auditoria_matpaci b
		where	b.nr_seq_auditoria  = nr_seq_auditoria_p
		and 	b.ie_tipo_auditoria = 'X'
		
union all

		SELECT	coalesce(sum(b.vl_procedimento),0) vl_item
		from	auditoria_propaci b
		where	b.nr_seq_auditoria  = nr_seq_auditoria_p
		and 	b.ie_tipo_auditoria = 'X'
		) alias6;

	vl_ajuste_negativo_w:= 0;

	open C02;
	loop
	fetch C02 into
		nr_seq_item_w,
		ie_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		vl_ajuste_negativo_w:= vl_ajuste_negativo_w + Obter_Valor_Auditoria_item(nr_seq_item_w, ie_tipo_w);
		end;
	end loop;
	close C02;

	vl_alteracao_valor_w:= 0;

	open C03;
	loop
	fetch C03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if	((c03_w.vl_ajuste - c03_w.vl_item) < 0) then -- alteração de valor para menos (Negativo)
			vl_alteracao_valor_w:= vl_alteracao_valor_w + (c03_w.vl_ajuste - c03_w.vl_item);
		end if;
		end;
	end loop;
	close C03;

	vl_retorno_w:= vl_ajuste_negativo_w - vl_excluido_w + vl_alteracao_valor_w + vl_novo_lancto_neg_w;

elsif (ie_opcao_p = 'T') then -- Transferido
	vl_transferido_w:= 0;

	select 	coalesce(sum(vl_item),0)
	into STRICT	vl_transferido_w
	from 	audit_hist_transferencia
	where 	nr_conta_origem = nr_interno_conta_p
	and 	nr_seq_audit_origem = nr_seq_auditoria_p;

	vl_retorno_w:= vl_transferido_w;

end if;

return vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_audit_estagio ( nr_seq_auditoria_p bigint, nr_interno_conta_p bigint, ie_opcao_p text) FROM PUBLIC;

