-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_disp_equip_clas_agecir (nr_seq_agenda_p bigint, nr_seq_classif_equip_p bigint, cd_equipamento_p bigint, nr_minuto_duracao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ie_tipo_equip_w			varchar(01);
dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_equipamento_w		bigint;
qt_tempo_esterilizacao_w	bigint	:= 0;
qt_equip_agenda_w		bigint;
ie_disponivel_w			varchar(255)	:= 'S';


BEGIN

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and
	((nr_seq_classif_equip_p IS NOT NULL AND nr_seq_classif_equip_p::text <> '') or (cd_equipamento_p IS NOT NULL AND cd_equipamento_p::text <> '')) then
	begin
	select	coalesce(max(obter_valor_param_usuario(870, 17, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'C')
	into STRICT	ie_tipo_equip_w
	;

	/* Obter a data inicial e final do agendamento */

	select	hr_inicio,
		hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440 - (1/86400))
	into STRICT	dt_inicial_w,
		dt_final_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	/* Obter a quantidade do equipamentos */

	select	coalesce(sum(qt_equipamento), 1)
	into STRICT	qt_equipamento_w
	from	equipamento
	where	((nr_seq_classif_equip_p IS NOT NULL AND nr_seq_classif_equip_p::text <> '' AND cd_classificacao	= nr_seq_classif_equip_p) or
		 (cd_equipamento_p IS NOT NULL AND cd_equipamento_p::text <> '' AND cd_equipamento = cd_equipamento_p))
	and	ie_situacao	= 'A';

	if (ie_tipo_equip_w = 'C') and (nr_seq_classif_equip_p IS NOT NULL AND nr_seq_classif_equip_p::text <> '') then
		begin

		/* Obter o tempo de esterilizacao pela classificação */

		select	coalesce(max(qt_tempo_esterelizacao),0)
		into STRICT	qt_tempo_esterilizacao_w
		from	classif_equipamento
		where	nr_sequencia = nr_seq_classif_equip_p;

		/* Obter a quantidade de equipamento agendados pela classificação */

		select	count(*)
		into STRICT	qt_equip_agenda_w
		from	agenda_pac_equip a,
			agenda_paciente b
		where	b.nr_sequencia	= a.nr_seq_agenda
		and	((b.hr_inicio between dt_inicial_w and dt_final_w) or
			(hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
			((hr_inicio < dt_inicial_w) and (hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))
		and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
		and	ie_status_agenda <> 'C'
		and	ie_origem_inf = 'I';

		end;
	elsif (ie_tipo_equip_w = 'E') and (cd_equipamento_p IS NOT NULL AND cd_equipamento_p::text <> '') then
		begin

		/* Obter a quantidade de equipamento agendados por equipamento */

		select	count(*)
		into STRICT	qt_equip_agenda_w
		from	agenda_pac_equip a,
			agenda_paciente b
		where	b.nr_sequencia	= a.nr_seq_agenda
		and	((b.hr_inicio between dt_inicial_w and dt_final_w) or
			(hr_inicio + (coalesce(nr_minuto_duracao_p, nr_minuto_duracao) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
			((hr_inicio < dt_inicial_w) and (hr_inicio + (coalesce(nr_minuto_duracao_p, nr_minuto_duracao) / 1440) - (1/86400) > dt_final_w)))
		and	a.cd_equipamento = cd_equipamento_p
		and	ie_status_agenda <> 'C'
		and	ie_origem_inf = 'I';

		end;
	end if;

	/* Verificação se o equipamento está disponível ou não */

	--if 	(nr_minuto_duracao_p is null) then
	if (qt_equipamento_w >= qt_equip_agenda_w) then
		ie_disponivel_w := 'S';
	else
		ie_disponivel_w := 'N';
	end if;
--	else
--		if	(qt_equipamento_w > qt_equip_agenda_w) then
--			ie_disponivel_w := 'S';
--		else
--			ie_disponivel_w := 'N';
--		end if;
--	end if;
	end;
end if;

--ie_disponivel_w := ie_disponivel_w || '*' ||qt_equipamento_w || '*' || qt_equip_agenda_w || '*' ||nr_minuto_duracao_p;
return	ie_disponivel_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_disp_equip_clas_agecir (nr_seq_agenda_p bigint, nr_seq_classif_equip_p bigint, cd_equipamento_p bigint, nr_minuto_duracao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

