-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consiste_dose_periodo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_material_p bigint, qt_dose_limite_p bigint, ie_solucao_p text, dt_aprazamento_p timestamp default null) RETURNS varchar AS $body$
DECLARE


cd_material_w			prescr_mat_hor.cd_material%type;
qt_dose_w				prescr_mat_hor.qt_dose%type;
qt_dose_adm_w			double precision;
qt_total_dose_adm_w		double precision;
qt_total_dose_pres_w	double precision;
cd_unid_med_dose_adm_w	prescr_mat_hor.cd_unidade_medida_dose%type;
cd_unid_med_dose_w		prescr_mat_hor.cd_unidade_medida_dose%type;
dt_horario_w			prescr_mat_hor.dt_horario%type;
dt_horario_consist_w	prescr_mat_hor.dt_horario%type;
dt_horario_consist_ww	prescr_mat_hor.dt_horario%type;
ds_horarios_w			prescr_material.ds_horarios%type;
ds_retorno_w			char(1)	:= 'S';
k						integer;
qt_dia_adic_w			bigint := 0;
dt_inicio_prescr_w		timestamp;
ds_hora_w				varchar(07);
ie_urgente_w			char(1);

c01 CURSOR FOR
	SELECT 	cd_material,
			qt_dose,
			cd_unidade_medida_dose,
			ds_horarios,
			coalesce(ie_urgencia,'N')
	from   	prescr_material
	where  	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= nr_seq_material_p;

c02 CURSOR FOR
	SELECT 	coalesce(sum(c.qt_dose),0),
			c.cd_unidade_medida_dose
	from   	prescr_medica a,
			prescr_material b,
			prescr_mat_hor c
	where  	a.nr_prescricao 	= b.nr_prescricao
	and	   	a.nr_prescricao  	= c.nr_prescricao
	and	   	c.nr_seq_material 	= b.nr_sequencia
	and	   	b.cd_material	 	= cd_material_w
	and	   	a.nr_atendimento	= nr_atendimento_p
	and	   	((a.nr_prescricao 	<> nr_prescricao_p and (b.ie_acm = 'N' and b.ie_se_necessario = 'N')) or (b.ie_acm = 'S' or b.ie_se_necessario = 'S'))
	and    	c.dt_horario 		between(dt_horario_w - 1) + (1/86000) and (dt_horario_w + 1) + (1/86000)
	and		c.ie_horario_especial	= 'N'
	and	  	coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(c.dt_suspensao::text, '') = ''
	group by
			c.cd_unidade_medida_dose;

c03 CURSOR FOR
	SELECT	a.cd_material,
			a.qt_dose,
			a.cd_unidade_medida_dose,
			b.ds_horarios,
			coalesce(a.ie_urgencia,'N')
	from	prescr_material a,
			prescr_solucao b
	where	a.nr_prescricao 		= b.nr_prescricao
	and		a.nr_prescricao 		= nr_prescricao_p
	and		a.nr_sequencia			= nr_seq_material_p
	and		a.nr_sequencia_solucao	= b.nr_seq_solucao;


BEGIN

select	dt_inicio_prescr
into STRICT	dt_inicio_prescr_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

if (ie_solucao_p = 'N') then

	open c01;
	loop
	fetch c01 into
		cd_material_w,
		qt_dose_w,
		cd_unid_med_dose_w,
		ds_horarios_w,
		ie_urgente_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

			qt_total_dose_pres_w	:= 0;

			ds_horarios_w	:= replace(replace(replace(ds_horarios_w,'  ',' '),'  ',' '),'  ',' ');

			if (ds_horarios_w <> 'ACM') and (ds_horarios_w <> 'SN') then

				select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_inicio_prescr_w,'dd/mm/yyyy hh24:mi:ss')) || ' '
				into STRICT	ds_horarios_w
				;

				while (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') loop
				begin

					select	position(' ' in ds_horarios_w)
					into STRICT	k
					;

					if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
					begin

						ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
						ds_hora_w		:= replace(ds_hora_w, ' ','');
						ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
						if (ie_urgente_w = 'N') then

							if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w	= 0) then
								qt_dia_adic_w	:= 1;
							elsif (position('AA' in ds_hora_w) > 0) then
								qt_dia_adic_w	:= qt_dia_adic_w + 1;
							end if;

						end if;

						ds_hora_w	:= replace(ds_hora_w,'A','');
						ds_hora_w	:= replace(ds_hora_w,'A','');

						dt_horario_w	:= pkg_date_utils.get_time(dt_inicio_prescr_w + qt_dia_adic_w, replace(ds_hora_w, 'A', ''), 0);

						if (coalesce(dt_horario_consist_w::text, '') = '') then
							dt_horario_consist_w  := dt_horario_w;
						elsif (coalesce(dt_horario_consist_ww::text, '') = '') then
							dt_horario_consist_ww := dt_horario_w;
						end if;

						qt_total_dose_adm_w	:= 0;

						if ((pkg_date_utils.get_DiffDate(dt_horario_consist_w, dt_horario_w, 'HOUR') < 24) or (qt_total_dose_pres_w = 0)) then
							qt_total_dose_pres_w	:= qt_total_dose_pres_w + obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_w,qt_dose_w);
						else
							qt_total_dose_pres_w	:= obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_w,qt_dose_w);
							dt_horario_consist_w	:= dt_horario_consist_ww;
							dt_horario_consist_ww	:= null;
						end if;

						if (trunc(qt_total_dose_pres_w,3) > trunc(qt_dose_limite_p,3)) then
							ds_retorno_w	:=  'N';
						end if;

						if (ds_retorno_w = 'S') then

							open c02;
							loop
							fetch c02 into
								qt_dose_adm_w,
								cd_unid_med_dose_adm_w;
							EXIT WHEN NOT FOUND; /* apply on c02 */
							begin

								qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_adm_w,qt_dose_adm_w);

								if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3)) > trunc(qt_dose_limite_p,3)) then
									ds_retorno_w	:=  'N';
								end if;

							end;
							end loop;
							close c02;

						end if;

					end;
					elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
						ds_horarios_w		:= '';
					end if;

				end;
				end loop;

			elsif (dt_aprazamento_p IS NOT NULL AND dt_aprazamento_p::text <> '') then

				qt_total_dose_pres_w	:= obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_w,qt_dose_w);

				if (trunc(qt_total_dose_pres_w,3) > trunc(qt_dose_limite_p,3)) then
					ds_retorno_w	:=  'N';
				end if;

				if (ds_retorno_w = 'S') then

					qt_total_dose_adm_w	:= 0;
					dt_horario_w	:= dt_aprazamento_p;

					open c02;
					loop
					fetch c02 into
						qt_dose_adm_w,
						cd_unid_med_dose_adm_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
					begin

						qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_adm_w,qt_dose_adm_w);

						if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3)) > trunc(qt_dose_limite_p,3)) then
							ds_retorno_w	:=  'N';
						end if;

					end;
					end loop;
					close c02;

				end if;

			end if;

		end;
	end loop;
	close c01;

else

	open c03;
	loop
	fetch c03 into
		cd_material_w,
		qt_dose_w,
		cd_unid_med_dose_w,
		ds_horarios_w,
		ie_urgente_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

			qt_total_dose_pres_w	:= 0;

			ds_horarios_w	:= replace(replace(replace(ds_horarios_w,'  ',' '),'  ',' '),'  ',' ');

			if (ds_horarios_w <> 'ACM') and (ds_horarios_w <> 'SN') then

				select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_inicio_prescr_w,'dd/mm/yyyy hh24:mi:ss')) || ' '
				into STRICT	ds_horarios_w
				;

				while (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') loop
				begin

					select	position(' ' in ds_horarios_w)
					into STRICT	k
					;

					if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
					begin

						ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
						ds_hora_w		:= replace(ds_hora_w, ' ','');
						ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);

						if (ie_urgente_w = 'N') then

							if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w	= 0) then
								qt_dia_adic_w	:= 1;
							elsif (position('AA' in ds_hora_w) > 0) then
								qt_dia_adic_w	:= qt_dia_adic_w + 1;
							end if;

						end if;

						ds_hora_w	:= replace(ds_hora_w,'A','');
						ds_hora_w	:= replace(ds_hora_w,'A','');

						dt_horario_w	:= pkg_date_utils.get_time(dt_inicio_prescr_w + qt_dia_adic_w, replace(ds_hora_w,'A',''), 0);

						qt_total_dose_adm_w	:= 0;
						qt_total_dose_pres_w	:= qt_total_dose_pres_w + obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_w,qt_dose_w);
						if (trunc(qt_total_dose_pres_w,3) > trunc(qt_dose_limite_p,3)) then
							ds_retorno_w	:=  'N';
						end if;

						if (ds_retorno_w = 'S') then

							open c02;
							loop
							fetch c02 into
								qt_dose_adm_w,
								cd_unid_med_dose_adm_w;
							EXIT WHEN NOT FOUND; /* apply on c02 */
							begin

								qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_adm_w,qt_dose_adm_w);

								if ((trunc(qt_total_dose_pres_w,3) + trunc(qt_total_dose_adm_w,3)) > trunc(qt_dose_limite_p,3)) then
									ds_retorno_w	:=  'N';
								end if;

							end;
							end loop;
							close c02;

						end if;

					end;
					elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
						ds_horarios_w		:= '';
					end if;

				end;
				end loop;

			end if;

		end;
	end loop;
	close c03;

end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consiste_dose_periodo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_material_p bigint, qt_dose_limite_p bigint, ie_solucao_p text, dt_aprazamento_p timestamp default null) FROM PUBLIC;

