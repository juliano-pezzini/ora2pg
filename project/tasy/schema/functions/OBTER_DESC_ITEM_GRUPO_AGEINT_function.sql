-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_desc_item_grupo_ageint (nr_seq_grupo_p bigint, nm_curto_p text, ds_proc_exame_p text, cd_pessoa_fisica_p text, ds_especialidade_P text, ds_grupo_proc_p text, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, qt_idade_p bigint, ie_tipo_atendimento_p bigint, ie_sexo_p text, nr_seq_ageint_p bigint, dt_nascimento_p timestamp, nm_usuario_p text, dt_agendamento_p timestamp, cd_usuario_convenio_p text, cd_medico_p text, cd_especialidade_p bigint, ie_buscar_valor_p text default 'N') RETURNS varchar AS $body$
DECLARE


ie_tipo_agendamento_w	agenda_int_grupo.ie_tipo_agendamento%type;
vl_total_w				varchar(30);
vl_item_w				double precision := 0;
vl_item_assoc_w			double precision := 0;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
ds_item_w				varchar(255);
nr_seq_proc_interno_w	proc_int_proc_prescr.nr_seq_proc_int_adic%type;
ie_tipo_item_w			agenda_int_grupo.ie_tipo_agendamento%type;/*Corrigido para pegar o tamanho do campo da tabela*/
ie_apres_valor_exame_w	varchar(1);
ie_apres_valor_cons_w	varchar(1);
ie_trazer_valor_w	varchar(1) := 'N';

--Vetor usado na ageint_gerar_proc_Assoc;
c01 CURSOR FOR
	SELECT	coalesce(nr_seq_proc_int_adic,0)
	from	proc_int_proc_prescr
	where	nr_seq_proc_interno	= nr_seq_proc_interno_p
	and 	coalesce(cd_convenio,cd_convenio_p) = cd_convenio_p
	and (coalesce(cd_convenio_excluir::text, '') = '' or cd_convenio_excluir <> cd_convenio_p)
	and		Obter_conv_excluir_proc_assoc(nr_sequencia, cd_convenio_p)	= 'S'
	and		coalesce(ie_somente_agenda_cir,'N') = 'N'
	and		(((coalesce(qt_idade_p::text, '') = '') or (coalesce(qt_idade_min::text, '') = '' and coalesce(qt_idade_max::text, '') = '')) or
			((qt_idade_p IS NOT NULL AND qt_idade_p::text <> '') and (qt_idade_p between coalesce(qt_idade_min,qt_idade_p) and
			coalesce(qt_idade_max,qt_idade_p))))
	and 	Obter_se_proc_interno_ativo(nr_seq_proc_int_adic) = 'A';


BEGIN

select	max(y.ie_tipo_agendamento)
into STRICT	ie_tipo_item_w
from	agenda_int_grupo y
where	y.nr_sequencia = nr_seq_grupo_p;

select 	max( ie_apres_valor_exame ),
	max( ie_apres_valor_cons )
into STRICT	ie_apres_valor_exame_w,
	ie_apres_valor_cons_w
from 	parametro_agenda_integrada
where 	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

select 	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio = cd_convenio_p;

if (ie_tipo_convenio_w = 1) and
	((ie_tipo_item_w = 'C' AND  ie_apres_valor_cons_w = 'S' ) or
	(ie_tipo_item_w = 'E' AND  ie_apres_valor_exame_w = 'S' )) then
        --Obter valor caso seja particular
	ie_trazer_valor_w := 'S';
	if (ie_buscar_valor_p = 'S') then
		vl_item_w := ageint_obter_valor_item(
											cd_convenio_p,
											cd_categoria_p,
											cd_plano_p,
											nr_seq_proc_interno_p,
											cd_estabelecimento_p,
											qt_idade_p,
											ie_tipo_atendimento_p,
											ie_sexo_p,
											nr_seq_ageint_p,
											NULL,
											NULL,
											dt_nascimento_p,
											nm_usuario_p,
											NULL,
											dt_agendamento_p,
											cd_usuario_convenio_p,
											cd_medico_p,
											cd_especialidade_p);


		--Busca valor de itens associados.
		open c01;
		loop
		fetch c01 into
			nr_seq_proc_interno_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				vl_item_assoc_w := vl_item_assoc_w + ageint_obter_valor_item(
													cd_convenio_p,
													cd_categoria_p,
													cd_plano_p,
													nr_seq_proc_interno_w,
													cd_estabelecimento_p,
													qt_idade_p,
													ie_tipo_atendimento_p,
													ie_sexo_p,
													nr_seq_ageint_p,
													NULL,
													NULL,
													dt_nascimento_p,
													nm_usuario_p,
													NULL,
													dt_agendamento_p,
													cd_usuario_convenio_p,
													cd_medico_p,
													cd_especialidade_p);

			end;
		end loop;
		close c01;

		vl_total_w := TO_CHAR(vl_item_w + vl_item_assoc_w,'999g999g999g999g990d00');
	end if;
else
	vl_total_w := null;
end if;

--Monta a descrição do item
select	max(ie_tipo_agendamento)
into STRICT	ie_tipo_agendamento_w
from	agenda_int_grupo
where	nr_sequencia = nr_seq_grupo_p;

if (nm_curto_p IS NOT NULL AND nm_curto_p::text <> '') then
	ds_item_w := nm_curto_p;
elsif 	(ie_tipo_agendamento_w <> 'C' AND ds_proc_exame_p IS NOT NULL AND ds_proc_exame_p::text <> '') then
	ds_item_w := ds_proc_exame_p;
elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	ds_item_w := obter_nome_pf(cd_pessoa_fisica_p);
elsif (ds_especialidade_p IS NOT NULL AND ds_especialidade_p::text <> '') then
	ds_item_w := ds_especialidade_p;
else
	ds_item_w := ds_grupo_proc_p;
end if;

if (ie_trazer_valor_w = 'S') then
	if (ie_buscar_valor_p = 'S') then
		if (vl_item_w IS NOT NULL AND vl_item_w::text <> '') then
			ds_item_w := substr(ds_item_w || ' - '|| wheb_mensagem_pck.get_texto(1034795) ||' '|| vl_total_w,1,255);
		end if;
	else
		ds_item_w := substr(ds_item_w || ' - '|| wheb_mensagem_pck.get_texto(1034795) || ' $$v',1,255);
	end if;
end if;

return	ds_item_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_desc_item_grupo_ageint (nr_seq_grupo_p bigint, nm_curto_p text, ds_proc_exame_p text, cd_pessoa_fisica_p text, ds_especialidade_P text, ds_grupo_proc_p text, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, qt_idade_p bigint, ie_tipo_atendimento_p bigint, ie_sexo_p text, nr_seq_ageint_p bigint, dt_nascimento_p timestamp, nm_usuario_p text, dt_agendamento_p timestamp, cd_usuario_convenio_p text, cd_medico_p text, cd_especialidade_p bigint, ie_buscar_valor_p text default 'N') FROM PUBLIC;

