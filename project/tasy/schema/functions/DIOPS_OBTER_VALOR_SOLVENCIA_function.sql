-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION diops_obter_valor_solvencia ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nr_seq_conta_solvencia_p bigint) RETURNS bigint AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
	DIOPS_FIN_GERAR_SOLVENCIA 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_origem_conta_w		varchar(2000)	:= '';
cd_conta_w			varchar(40);
ie_sinal_w			varchar(1)	:= '+';
ie_normal_encerramento_w	varchar(1);
vl_solvencia_w			double precision;
vl_conta_w			double precision;
vl_result_w			double precision;
ie_pos_mais_w			integer;
ie_pos_menos_w			integer;
ie_pos_w			integer;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;


BEGIN 
begin /* Obter o período trimestral do DIOPS */
 
select	coalesce(a.dt_periodo_inicial, ''), 
	coalesce(a.dt_periodo_final, ''), 
	coalesce(a.ie_normal_encerramento, 'N') 
into STRICT	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	ie_normal_encerramento_w 
from	diops_periodo	a 
where	a.nr_sequencia	= nr_seq_periodo_p;
exception 
when others then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(174234, 'NR_SEQ_OPERADORA=' || nr_seq_operadora_p || ';' || 
							'NR_SEQ_PERIODO=' || nr_seq_periodo_p);
end;
 
select	coalesce(max(a.ds_origem_conta), '') 
into STRICT	ds_origem_conta_w 
from	diops_trans_conta_solv	a 
where	a.nr_sequencia	= nr_seq_conta_solvencia_p;
 
ds_origem_conta_w	:= replace(ds_origem_conta_w, ' ', '');
vl_result_w		:= 0;
 
while(length(ds_origem_conta_w) > 0) loop 
	begin 
	cd_conta_w	:= null;
	ie_pos_mais_w	:= position('+' in ds_origem_conta_w);
	ie_pos_menos_w 	:= position('-' in ds_origem_conta_w);
	 
	if (ie_pos_mais_w = 0) and (ie_pos_menos_w = 0) then 
		ie_pos_w	:= 0;
	elsif (ie_pos_menos_w > 0) and 
		((ie_pos_menos_w < ie_pos_mais_w) or (ie_pos_mais_w = 0)) then 
		ie_pos_w	:= ie_pos_menos_w;
	else 
		ie_pos_w	:= ie_pos_mais_w;
	end if;
	 
	if (ie_pos_w > 0) then 
		cd_conta_w		:= substr(ds_origem_conta_w,1, ie_pos_w - 1);
		ds_origem_conta_w	:= substr(ds_origem_conta_w, ie_pos_w, 2000);
	else 
		cd_conta_w		:= ds_origem_conta_w;
		ds_origem_conta_w	:= null;
	end if;
	 
	if (cd_conta_w IS NOT NULL AND cd_conta_w::text <> '') then 
		select	sum(CASE WHEN trunc(b.dt_referencia, 'month')=trunc(dt_periodo_final_w, 'month') THEN  a.vl_saldo  ELSE 0 END ) 
		into STRICT	vl_solvencia_w 
		from	ctb_mes_ref			b, 
			ctb_balancete_v			a 
		where	a.nr_seq_mes_ref		= b.nr_sequencia 
		and	a.ie_normal_encerramento	= ie_normal_encerramento_w--'N' 
		and	b.dt_referencia between dt_periodo_inicial_w and dt_periodo_final_w 
		and	a.cd_conta_contabil		= cd_conta_w;
	end if;
	 
	vl_conta_w	:= coalesce(vl_solvencia_w, 0);
	 
	if (ie_sinal_w = '-') then 
		vl_result_w	:= vl_result_w - vl_conta_w;
	else 
		vl_result_w	:= vl_result_w + vl_conta_w;
	end if;
	 
	if (ds_origem_conta_w IS NOT NULL AND ds_origem_conta_w::text <> '') and 
		((substr(ds_origem_conta_w, 1, 1) = '+') or (substr(ds_origem_conta_w, 1, 1) = '-')) then 
		ie_sinal_w		:= substr(ds_origem_conta_w, 1, 1);
		ds_origem_conta_w	:= substr(ds_origem_conta_w, 2, 2000);
	end if;
	end;
end loop;
 
return vl_result_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION diops_obter_valor_solvencia ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nr_seq_conta_solvencia_p bigint) FROM PUBLIC;

