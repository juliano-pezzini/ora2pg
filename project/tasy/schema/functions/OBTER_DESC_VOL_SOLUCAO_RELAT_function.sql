-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_desc_vol_solucao_relat ( nr_prescricao_p bigint, nr_Seq_solucao_p bigint) RETURNS varchar AS $body$
DECLARE



qt_solucao_total_w			double precision;
cd_unidade_medida_w			varchar(30);
qt_tempo_aplicacao_w		double precision;
ds_total_w					varchar(60);
ds_bomba_w					varchar(255);
ds_dosagem_w				varchar(60);
ds_solucao_w				varchar(100);
ds_retorno_w				varchar(255);
ie_esquema_alternado_w		varchar(1);
ds_acm_agora_w				varchar(20);
ie_acm_sn_w					varchar(1);
qt_dosagem_w				double precision;
qt_dosagem_ww				prescr_solucao.qt_dosagem%type;
cd_funcao_origem_w			prescr_medica.cd_funcao_origem%type;
cd_estabelecimento_w		prescr_medica.cd_estabelecimento%type;
ie_etapa_interv_w			varchar(1);


BEGIN
if (coalesce(nr_prescricao_p,0) <> 0) then
	begin

	select 	max(cd_funcao_origem),
			max(cd_estabelecimento)
	into STRICT	cd_funcao_origem_w,
			cd_estabelecimento_w
	from 	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if (coalesce(cd_funcao_origem_w,924)	= 950) then
		ie_etapa_interv_w := obter_param_usuario(950, 42, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w, ie_etapa_interv_w);
	else
		ie_etapa_interv_w := obter_param_usuario(924, 590, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w, ie_etapa_interv_w);
	end if;

	select	qt_dosagem,
		qt_solucao_total,
		cd_unidade_medida,
		qt_tempo_aplicacao,
		ds_solucao,
		CASE WHEN coalesce(ie_bomba_infusao,'N')='N' THEN ''  ELSE Wheb_mensagem_pck.get_texto(307087) || ' ' /*'em '*/||obter_valor_dominio(1537,ie_bomba_infusao) END ,
		--decode(ie_bomba_infusao, 'S' , 'em bomba infusão','A','em bomba seringa', ''),
		CASE WHEN upper(ie_tipo_dosagem)='ACM' THEN  ' ' || Wheb_mensagem_pck.get_texto(309502) /*'(ACM)'*/  ELSE CASE WHEN coalesce(ie_etapa_interv_w,'N')='S' THEN round((qt_dosagem)::numeric,2)  ELSE round((qt_dosagem)::numeric,1) END   || CASE WHEN upper(ie_tipo_dosagem)='MGM' THEN  Wheb_mensagem_pck.get_texto(309503) /*'mcg/m'*/  ELSE CASE WHEN upper(ie_tipo_dosagem)='MLH' THEN Wheb_mensagem_pck.get_texto(309504) /*'ml/h'*/  ELSE CASE WHEN upper(ie_tipo_dosagem)='GTM' THEN Wheb_mensagem_pck.get_texto(309506) /*'gt/m'*/  ELSE ie_tipo_dosagem END  END  END  || CASE WHEN ie_acm='S' THEN  ' ' || Wheb_mensagem_pck.get_texto(309509) /*' ACM'*/  ELSE '' END  END  || CASE WHEN ie_urgencia='S' THEN  ' ' || Wheb_mensagem_pck.get_texto(309507) /*' Agora'*/  ELSE '' END  || CASE WHEN ie_se_necessario='S' THEN  ' ' || Wheb_mensagem_pck.get_texto(309508) /*' SN'*/  ELSE '' END ,
		CASE WHEN ie_acm='S' THEN  ' ' || Wheb_mensagem_pck.get_texto(309509) /*' ACM'*/  ELSE '' END  || CASE WHEN ie_urgencia='S' THEN  ' ' || Wheb_mensagem_pck.get_texto(309507) /*' Agora'*/  ELSE '' END  || CASE WHEN ie_se_necessario='S' THEN  Wheb_mensagem_pck.get_texto(309508) /*'SN'*/  ELSE '' END ,
		ie_esquema_alternado,
		obter_se_acm_sn(ie_acm, ie_se_necessario)
	into STRICT	qt_dosagem_w,
		qt_solucao_total_w,
		cd_unidade_medida_w,
		qt_tempo_aplicacao_w,
		ds_solucao_w,
		ds_bomba_w,
		ds_dosagem_w,
		ds_acm_agora_w,
		ie_esquema_alternado_w,
		ie_acm_sn_w
	from 	prescr_solucao
	where	nr_prescricao 	= nr_prescricao_p
	and	nr_seq_solucao	= nr_seq_solucao_p;

	if (coalesce(qt_solucao_total_w, 0) <> 0) then
		ds_total_w	:= Wheb_mensagem_pck.get_texto(309270) || ' ' /*'Vol. '*/ || qt_solucao_total_w || cd_unidade_medida_w || '/'|| qt_tempo_aplicacao_w || lower(Wheb_mensagem_pck.get_texto(309513)); --'h';
	else
		ds_total_w	:= '';
	end if;

/*	if	(ds_bomba_w = 'A') then
		ds_bomba_w	:= 'em bomba seringa';
	elsif	(ds_bomba_w <> 'N') then
		ds_bomba_w	:= 'em bomba infusão';
	end if;
*/
	if	((ie_esquema_alternado_w = 'N' AND ie_acm_sn_w = 'S') or (coalesce(qt_dosagem_w::text, '') = '')) then
		ds_retorno_w	:= ds_total_w || ' ' || ds_dosagem_w || ' ' || ds_bomba_w;
	elsif (ie_esquema_alternado_w = 'N') and (ie_acm_sn_w = 'N') then
		ds_retorno_w	:= ds_total_w || ' ' || Wheb_mensagem_pck.get_texto(309269) || ' ' /*' a '*/ || ds_dosagem_w || ' ' || ds_bomba_w;
	else
		ds_retorno_w	:= ds_total_w || ' ' || Wheb_mensagem_pck.get_texto(309268) || ' ' /*' Esquema Alternado '*/ || ds_acm_agora_w ||' '|| ds_bomba_w;
	end if;
	if (ds_solucao_w IS NOT NULL AND ds_solucao_w::text <> '') then
		ds_retorno_w	:= ds_retorno_w || ' (' || ds_solucao_w || ')';
	end if;
	end;
end if;

RETURN replace(replace(replace(ds_retorno_w,' .',' 0,'),' ,',' 0,'),'/,','/0,');
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_desc_vol_solucao_relat ( nr_prescricao_p bigint, nr_Seq_solucao_p bigint) FROM PUBLIC;

