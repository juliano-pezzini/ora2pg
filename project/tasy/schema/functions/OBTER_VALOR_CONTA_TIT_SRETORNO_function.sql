-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_conta_tit_sretorno (nr_titulo_p bigint, dt_referencia_p timestamp) RETURNS bigint AS $body$
DECLARE

ie_tipo_convenio_w	bigint;
nr_seq_protocolo_w	bigint;
nr_interno_conta_w	bigint;
vl_conta_w		double precision := 0;
vl_saldo_titulo_w	double precision := 0;
ie_titulO_receber_w	varchar(255);
ie_tit_ret_senha_w	varchar(255);


BEGIN 
vl_conta_w		:= 0;
 
select	nr_seq_protocolo, 
	nr_interno_conta, 
	obter_saldo_titulo_receber(nr_titulo, dt_referencia_p) 
into STRICT	nr_seq_protocolo_w, 
	nr_interno_conta_w, 
	vl_saldo_titulo_w 
from	titulo_receber 
where	nr_titulo = nr_titulo_p;
 
 
 
if (vl_saldo_titulo_w > 0) and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') and (coalesce(nr_interno_conta_w::text, '') = '') then 
 
	select	max(ie_tipo_convenio), 
		max(ie_tit_ret_senha) 
	into STRICT	ie_tipo_convenio_w, 
		ie_tit_ret_senha_w 
	from	convenio_estabelecimento c, 
		convenio b, 
		protocolo_convenio a 
	where	a.cd_convenio		= b.cd_convenio 
	and	a.cd_estabelecimento	= c.cd_estabelecimento 
	and	a.cd_convenio		= c.cd_convenio 
	and	a.nr_seq_protocolo	= nr_seq_protocolo_w;
 
	if (ie_tipo_convenio_w = 1) then 
		vl_conta_w := vl_saldo_titulo_w;
	else 
		select	coalesce(sum(vl_guia),0) 
		into STRICT	vl_conta_w 
		from	conta_paciente_guia b, 
			conta_paciente a 
		where	a.nr_interno_conta = b.nr_interno_conta 
		and	a.nr_seq_protocolo = nr_seq_protocolo_w 
		and	coalesce(a.dt_cancelamento,dt_referencia_p) >= dt_referencia_p 
		and	not exists (SELECT 1 
					from	convenio_retorno y, 
						convenio_retorno_item x 
					where	x.nr_interno_conta	= a.nr_interno_conta 
					and	x.cd_autorizacao	= b.cd_autorizacao 
					and	y.nr_sequencia		= x.nr_seq_retorno 
					and	y.ie_status_retorno	= 'F' 
					and	coalesce(y.dt_baixa_cr,dt_referencia_p) <= dt_referencia_p);
	 
	end if;
elsif (vl_saldo_titulo_w > 0) and (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then 
 
	select 	coalesce(max(Obter_Valor_Conv_Estab(cd_convenio_parametro,cd_estabelecimento, 'IE_TITULO_RECEBER')),'P') 
	into STRICT	ie_titulO_receber_w 
	from 	conta_paciente 
	where 	nr_interno_conta = nr_interno_conta_w;
 
	select	ie_tipo_convenio, 
		ie_tit_ret_senha 
	into STRICT	ie_tipo_convenio_w, 
		ie_tit_ret_senha_w 
	from	convenio_estabelecimento c, 
		convenio b, 
		conta_paciente a 
	where	a.cd_convenio_parametro		= b.cd_convenio 
	and	a.cd_estabelecimento		= c.cd_estabelecimento 
	and	a.cd_convenio_parametro		= c.cd_convenio 
	and	a.nr_interno_conta		= nr_interno_conta_w;
 
	if (ie_tipo_convenio_w = 1) then 
		vl_conta_w := vl_saldo_titulo_w;
	else 
		select	coalesce(sum(vl_guia),0) 
		into STRICT	vl_conta_w 
		from	conta_paciente_guia a, 
			conta_paciente b 
		where	b.nr_interno_conta = nr_interno_conta_w 
		and	a.nr_interno_conta = b.nr_interno_conta 
		and	coalesce(b.dt_cancelamento,dt_referencia_p) >= dt_referencia_p 
		and	not exists (	SELECT	1 
					from	convenio_retorno y, 
						convenio_retorno_item x 
					where	x.nr_interno_conta		= a.nr_interno_conta 
					and	((x.cd_autorizacao = a.cd_autorizacao) or 
						 (x.nr_interno_conta = a.nr_interno_conta AND ie_titulO_receber_w = 'C') or 
						 --((ie_tit_ret_senha_w = 'S') and (nvl(x.cd_autorizacao, 'NÃ£o Informada') = obter_senha_atendimento(a.nr_atendimento)))) 
						 ((ie_tit_ret_senha_w = 'S') and (coalesce(x.cd_autorizacao, WHEB_MENSAGEM_PCK.get_texto(298671)) = obter_senha_atendimento(a.nr_atendimento)))) 
					and	y.nr_sequencia = x.nr_seq_retorno 
					and	y.ie_status_retorno = 'F' 
					and	coalesce(y.dt_baixa_cr,dt_referencia_p) <= dt_referencia_p);
 
	end if;				
end if;
 
Return coalesce(vl_conta_w,0);
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_conta_tit_sretorno (nr_titulo_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

