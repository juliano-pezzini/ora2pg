-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_legend_vital_sign (nm_campo_p text, valor_p bigint,nr_atendimento_p bigint,nr_seq_sinal_p bigint) RETURNS bigint AS $body$
DECLARE

  valor_w                   double precision;
  qt_idade_w				double precision;
  qt_idade_dia_w			double precision;
  ie_rn_w                   varchar(1):='N';
  cd_pessoa_fisica_w  pessoa_fisica.cd_pessoa_fisica%type;
  cd_setor_Atendimento_w	bigint	:=0;
  cd_escala_dor_w           varchar(5):= null;
  cd_perfil_w				bigint:=0;
  ie_sexo_w				    varchar(1);
  qt_min_aviso_w			double precision;
  qt_max_aviso_w			double precision;
  qt_minimo_per_w			double precision;
  vl_maximo_per_w			double precision;
  nr_seq_item_w      		bigint;
  cd_unidade_medida_w	varchar(5):= CHR(176)||'C';
  ie_legenda_w bigint:=0;

c03 CURSOR FOR
SELECT	b.qt_min_aviso,
	b.qt_max_aviso,
	b.qt_minimo,
	b.vl_maximo,
	b.nr_seq_sinal
from	sinal_vital_regra b,
	sinal_vital a
where	a.nm_atributo	= nm_campo_p
and	a.nr_sequencia	= b.nr_seq_sinal
and (qt_idade_w  between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,9999999999))
and (qt_idade_dia_w between coalesce(b.qt_idade_min_dias,0) and coalesce(b.qt_idade_max_dias,9999999999))
and	coalesce(b.cd_setor_Atendimento,cd_setor_Atendimento_w)	= cd_setor_Atendimento_w
and (coalesce(b.cd_escala_dor::text, '') = '' or
	coalesce(cd_escala_dor_w::text, '') = '' or 
	b.cd_escala_dor = cd_escala_dor_w)
and	coalesce(b.cd_estabelecimento,Wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
and	coalesce(b.cd_perfil,cd_perfil_w) = cd_perfil_w
and	coalesce(b.ie_sexo,ie_sexo_w) = ie_sexo_w
order by coalesce(b.cd_setor_atendimento,0), coalesce(b.cd_escala_dor,'0') desc, coalesce(b.cd_estabelecimento,0), coalesce(b.ie_sitio,0) asc;


BEGIN
	
valor_w :=valor_p;
cd_perfil_w	:= coalesce(obter_perfil_ativo,0);
cd_pessoa_fisica_w	:= obter_pessoa_atendimento(nr_atendimento_p,'C');
select OBTER_SE_RECEM_NASC(nr_atendimento_p) into STRICT ie_rn_w;
if (coalesce(ie_rn_w,'N') = 'S') then
	qt_idade_w	:= null;
	qt_idade_dia_w	:= 0;
else
	select	max(obter_idade(dt_nascimento,clock_timestamp(),'A')),max(obter_idade(dt_nascimento,clock_timestamp(),'DIA'))
	into STRICT	qt_idade_w, qt_idade_dia_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
end if;
begin
if (coalesce(nr_atendimento_p,0) > 0) then
	cd_setor_Atendimento_w	:= coalesce(obter_setor_atendimento(nr_atendimento_p),0);
end if;
exception
when others then
	cd_setor_Atendimento_w	:= 0;
end;
	
if (coalesce(nr_atendimento_p,0) > 0) then
	select	max(coalesce(obter_dados_pf_sbis(nr_atendimento_p,'SEXO'),ie_sexo))
	into STRICT	ie_sexo_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;
else
	select	max(ie_sexo)
	into STRICT	ie_sexo_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;
end if;	

if (nr_seq_sinal_p IS NOT NULL AND nr_seq_sinal_p::text <> '') then
	select coalesce(max(IE_UM_TEMP),CHR(176)||'C') ,max(cd_escala_dor) into STRICT cd_unidade_medida_w ,cd_escala_dor_w from  atendimento_sinal_vital where nr_atendimento =  nr_atendimento_p
	and nr_sequencia = nr_seq_sinal_p;
end if;
	
	
	open C03;
	loop
	fetch C03 into	
		qt_min_aviso_w,
		qt_max_aviso_w,
		qt_minimo_per_w,
		vl_maximo_per_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	end loop;
	close C03;
	if	((coalesce(qt_min_aviso_w::text, '') = '')and (coalesce(qt_max_aviso_w::text, '') = '')    and (coalesce(qt_minimo_per_w::text, '') = '')   and (coalesce(vl_maximo_per_w::text, '') = '')) then
		begin
			select	coalesce(max(a.qt_min_aviso),0),
				coalesce(max(a.qt_max_aviso),0),
				coalesce(max(a.qt_minimo),0),
				coalesce(max(a.vl_maximo),0),
				max(nr_sequencia)
			into STRICT	qt_min_aviso_w,
				qt_max_aviso_w,
				qt_minimo_per_w,
				vl_maximo_per_w,
				nr_seq_item_w
			from	sinal_vital a
			where	a.nm_atributo	= nm_campo_p;
		end;
	end if;
	
if (valor_w > 0) and (nr_seq_item_w = 4) and (cd_unidade_medida_w = CHR(176)||'F') then
	valor_w := ((valor_w - 32) / 1.8); -- Converter de FAHRENHEIT para CELSIUS
end if;
	
if	((qt_min_aviso_w = 0) and (qt_max_aviso_w = 0) and (qt_minimo_per_w = 0) and (vl_maximo_per_w = 0)) or ((valor_w = 0) or (valor_w between qt_min_aviso_w and qt_max_aviso_w)) then
	ie_legenda_w := 0;
elsif	((qt_minimo_per_w > 0) or (vl_maximo_per_w > 0)) and
	((qt_min_aviso_w > 0) or (qt_max_aviso_w > 0)) and (not(valor_w between qt_minimo_per_w and vl_maximo_per_w)) then
	ie_legenda_w := 11244;
elsif	((qt_minimo_per_w > 0) or (vl_maximo_per_w > 0)) and
	((qt_min_aviso_w > 0) or (qt_max_aviso_w > 0)) and (not(valor_w between qt_min_aviso_w and qt_max_aviso_w)) then
	ie_legenda_w := 11244;
elsif (qt_minimo_per_w = 0) and (vl_maximo_per_w = 0) and
	((qt_min_aviso_w > 0) or (qt_max_aviso_w > 0)) and (not(valor_w between qt_min_aviso_w and qt_max_aviso_w)) then	
	ie_legenda_w := 11244;
elsif (qt_min_aviso_w = 0) and (qt_max_aviso_w = 0) and
	((qt_minimo_per_w > 0) or (vl_maximo_per_w > 0)) and (not(valor_w between qt_minimo_per_w and vl_maximo_per_w)) then
	ie_legenda_w := 11244;
elsif (not(valor_w between qt_minimo_per_w and vl_maximo_per_w)) then
	ie_legenda_w := 11244;
end if;		
	
return ie_legenda_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_legend_vital_sign (nm_campo_p text, valor_p bigint,nr_atendimento_p bigint,nr_seq_sinal_p bigint) FROM PUBLIC;

