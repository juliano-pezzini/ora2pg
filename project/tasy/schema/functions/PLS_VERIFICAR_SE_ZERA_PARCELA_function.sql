-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verificar_se_zera_parcela ( nr_seq_segurado_p bigint, nr_seq_bonificacao_vinculo_p bigint, dt_mesano_referencia_p timestamp) RETURNS varchar AS $body$
DECLARE


qt_meses_restricao_w	pls_bonificacao_restricao.qt_meses_restricao%type;
ie_tipo_data_w		pls_bonificacao_restricao.ie_tipo_data%type;
cd_procedimento_w	pls_conta_proc.cd_procedimento%type;
ie_origem_proced_w	pls_conta_proc.ie_origem_proced%type;
nr_seq_tipo_restricao_w pls_bonificacao_restricao.nr_seq_tipo_restricao%type;
ie_zerar_parcela_w	varchar(1);
qt_cobertura_w		bigint;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
cd_grupo_proc_w		bigint;
cd_especialidade_w	bigint;
cd_area_procedimento_w	bigint;

C01 CURSOR FOR
	SELECT	c.qt_meses_restricao,
		coalesce(c.ie_tipo_data,'P'),
		c.nr_seq_tipo_restricao
	from	pls_bonificacao_v a,
		pls_bonificacao b,
		pls_bonificacao_restricao c
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_bonificacao
	and	a.nr_seq_vinculo	= nr_seq_bonificacao_vinculo_p
	and	a.nr_seq_segurado	= nr_seq_segurado_p;

C02 CURSOR FOR
	SELECT	c.cd_procedimento,
		c.ie_origem_proced
	from	pls_conta_proc c,
		pls_conta b,
		pls_protocolo_conta a
	where	b.nr_sequencia		= c.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_seq_segurado	= nr_seq_segurado_p
	and	a.ie_situacao in ('D','T')
	and	a.dt_mes_competencia	between dt_inicial_w and dt_final_w
	and	ie_tipo_data_w		= 'P'
	
union all

	SELECT	c.cd_procedimento,
		c.ie_origem_proced
	from	pls_conta_proc c,
		pls_conta b,
		pls_mensalidade_segurado	d,
		pls_conta_coparticipacao a
	where	b.nr_sequencia			= c.nr_seq_conta
	and	a.nr_seq_conta_proc		= c.nr_sequencia
	and	a.nr_seq_mensalidade_seg	= d.nr_sequencia
	and	b.nr_seq_segurado		= nr_seq_segurado_p
	and	d.dt_mesano_referencia	between dt_inicial_w and dt_final_w
	and	ie_tipo_data_w		= 'CO';

C03 CURSOR FOR
	SELECT	count(*)
	from	pls_bonific_restr_regra a
	where	a.nr_seq_tipo_restricao	= nr_seq_tipo_restricao_w
	and	coalesce(a.cd_procedimento, cd_procedimento_w)	= cd_procedimento_w
	and	coalesce(a.ie_origem_proced, ie_origem_proced_w) 	= ie_origem_proced_w
	and	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)		= cd_grupo_proc_w
	and	coalesce(a.cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
	and	coalesce(a.cd_area_procedimento, cd_area_procedimento_w) = cd_area_procedimento_w
	and	coalesce(a.ie_liberado,'N')	= 'S'
	order by
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento,
		CASE WHEN a.ie_liberado='S' THEN  0  ELSE 1 END;


BEGIN
ie_zerar_parcela_w	:= 'N';
dt_inicial_w		:= trunc(dt_mesano_referencia_p,'mm');
dt_final_w		:= fim_mes(dt_mesano_referencia_p);

open C01;
loop
fetch C01 into
	qt_meses_restricao_w,
	ie_tipo_data_w,
	nr_seq_tipo_restricao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(qt_meses_restricao_w,0) <> 0) then
		open C02;
		loop
		fetch C02 into
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				select	cd_grupo_proc,
					cd_especialidade,
					cd_area_procedimento
				into STRICT	cd_grupo_proc_w,
					cd_especialidade_w,
					cd_area_procedimento_w
				from	estrutura_procedimento_v
				where	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				open C03;
				loop
				fetch C03 into
					qt_cobertura_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					ie_zerar_parcela_w := 'S';
					end;
				end loop;
				close C03;
			end if;
			end;
		end loop;
		close C02;
	end if;
	end;
end loop;
close C01;

return	ie_zerar_parcela_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verificar_se_zera_parcela ( nr_seq_segurado_p bigint, nr_seq_bonificacao_vinculo_p bigint, dt_mesano_referencia_p timestamp) FROM PUBLIC;

