-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_primeiro_horario_agenda (cd_agenda_p bigint, cd_tipo_agenda_p bigint, dt_agenda_p timestamp, ie_dia_semana_p text, ie_feriado_p text, cd_estabelecimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE

		
ds_retorno_w			varchar(11);
nr_seq_especial_w		bigint;
ie_horario_adicional_w	varchar(1);
nr_seq_esp_w			bigint := 0;
dt_agenda_trunc_w		timestamp;
ie_gerar_hor_passado_w	varchar(1)	:= 'S';
qt_dia_final_w			bigint;
ie_todos_dias_regra_w	varchar(1) := 'N';
cd_estab_agenda_w	estabelecimento.cd_estabelecimento%type;


BEGIN
select 	coalesce(max(cd_estabelecimento),cd_estabelecimento_p)
into STRICT	cd_estab_agenda_w
from 	agenda
where	cd_agenda = cd_agenda_p;

if (cd_tipo_agenda_p = 2) then
	
	select	coalesce(max(nr_sequencia),0),
			coalesce(max(ie_horario_adicional),'N')
	into STRICT	nr_seq_especial_w,
			ie_horario_adicional_w
	from	agenda_horario_esp
	where	cd_agenda = cd_agenda_p
	and		((ie_dia_semana = ie_dia_semana_p) or ((ie_dia_semana = 9) and (ie_dia_semana_p not in (7, 1))) or (coalesce(ie_dia_semana::text, '') = ''))
	and 	dt_agenda_p between pkg_date_utils.start_of(dt_agenda,'DAY') and pkg_date_utils.end_of(coalesce(dt_agenda_fim,dt_agenda),'DAY');
	
	begin
		select 	a.primeiro_horario
		into STRICT	ds_retorno_w
		from	(
			SELECT	to_char(hr_inicial,'hh24:mi:ss') primeiro_horario
			from 	agenda_horario
			where 	cd_agenda = cd_agenda_p
			and		to_char(hr_inicial,'hh24:mi:ss') < to_char(hr_final,'hh24:mi:ss')
			and		((coalesce(dt_inicio_vigencia::text, '') = '') or (trunc(dt_inicio_vigencia) <= trunc(dt_agenda_p)))
			and		((coalesce(dt_final_vigencia::text, '') = '') or (trunc(dt_final_vigencia) >= trunc(dt_agenda_p)))
			and		nr_minuto_intervalo > 0
			and		((dt_dia_semana = ie_dia_semana_p) or ((dt_dia_semana = 9) and (ie_dia_semana_p not in (7, 1))))
			and		((((ie_feriado_p <> 'S') and (coalesce(ie_feriado,'X') <> 'F')) or (coalesce(ie_feriado,obter_se_agenda_feriado(cd_agenda_p)) = 'S')) or (ie_feriado = 'F' AND ie_feriado_p = 'S'))
			and		((nr_seq_especial_w = 0) or (ie_horario_adicional_w = 'S'))
			and		obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'
			and		((Obter_Semana_Dia_Agecons(dt_agenda_p,dt_dia_semana) = coalesce(ie_semana,0)) or (coalesce(ie_semana,0) = 0))
			
union

			SELECT	to_char(hr_inicial,'hh24:mi:ss') primeiro_horario
			from	agenda_horario_esp
			where 	cd_agenda = cd_agenda_p
			and		to_char(hr_inicial,'hh24:mi:ss') < to_char(hr_final,'hh24:mi:ss')
			and		nr_minuto_intervalo > 0
			and		((ie_dia_semana = ie_dia_semana_p) or ((ie_dia_semana = 9) and (ie_dia_semana_p not in (7, 1))) or (coalesce(ie_dia_semana::text, '') = ''))
			and 	dt_agenda_p between pkg_date_utils.start_of(dt_agenda,'DAY') and pkg_date_utils.end_of(coalesce(dt_agenda_fim,dt_agenda),'DAY')
			order by	primeiro_horario
		) a LIMIT 1;
	exception
	when no_data_found then
		ds_retorno_w := null;
	end;
	
	
elsif (cd_tipo_agenda_p IN (3,4)) then

	select		coalesce(max(nr_sequencia),0),
				coalesce(max(ie_horario_adicional), 'N')
	into STRICT		nr_seq_esp_w,
				ie_horario_adicional_w
	from		agenda_turno_esp
	where		cd_agenda	= cd_agenda_p
	and			((ie_dia_semana = ie_dia_semana_p) or ((ie_dia_semana = 9) and (ie_dia_semana_p not in (7, 1))) or (coalesce(ie_dia_semana::text, '') = ''))
	and			obter_se_turno_esp_agecons_vig(dt_agenda,dt_agenda_fim,dt_agenda_p) = 'S';
	
	dt_agenda_trunc_w := PKG_DATE_UTILS.start_of(dt_agenda_p,'dd');

	begin
		select 	a.primeiro_horario
		into STRICT	ds_retorno_w
		from	(
			SELECT 	to_char(hr_inicial,'hh24:mi:ss') primeiro_horario
			from 	agenda_Turno_Esp a
			where 	cd_agenda     	= cd_agenda_p
			and		((ie_dia_semana = ie_dia_semana_p) or ((ie_dia_semana = 9) and (ie_dia_semana_p not in (7, 1))) or (coalesce(ie_dia_semana::text, '') = ''))
			and		((obter_se_feriado(cd_estab_agenda_w, dt_agenda_p) = 0) or (obter_se_agenda_feriado(cd_agenda_p) = 'S'))
			and		obter_se_turno_esp_agecons_vig(dt_agenda,dt_agenda_fim,dt_agenda_p) = 'S'
			and 	PKG_DATE_UTILS.get_datetime(dt_agenda_p,hr_inicial) < PKG_DATE_UTILS.get_datetime(dt_agenda_p,hr_final)
			and		nr_minuto_intervalo	> 0
			and		nr_seq_esp_w		> 0
			
union

			SELECT 	to_char(hr_inicial,'hh24:mi:ss') primeiro_horario
			from 	agenda_Turno a
			where 	cd_agenda     		= cd_agenda_p
			and		((ie_dia_semana = ie_dia_semana_p) or ((ie_dia_semana = 9) and (ie_dia_semana_p not in (7, 1))))
			and 	PKG_DATE_UTILS.get_datetime(dt_agenda_p,hr_inicial) < PKG_DATE_UTILS.get_datetime(dt_agenda_p,hr_final)
			and		((coalesce(dt_inicio_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(dt_inicio_vigencia,'dd') <= dt_agenda_trunc_w))
			and		((coalesce(dt_final_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(dt_final_vigencia,'dd') >= dt_agenda_trunc_w))
			and		coalesce(nr_minuto_intervalo,0) > 0
			and		((((ie_feriado_p <> 'S') and (coalesce(ie_feriado,'X') <> 'F')) or (coalesce(ie_feriado,obter_se_agenda_feriado(cd_agenda_p)) = 'S')) or (ie_feriado = 'F' AND ie_feriado_p = 'S'))
			and (nr_seq_esp_w = 0 or ie_horario_adicional_w = 'S')
			and		obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'
			and		((Obter_Semana_Dia_Agecons(dt_agenda_p,ie_dia_semana) = coalesce(ie_semana,0)) or (coalesce(ie_semana,0) = 0))
			order by primeiro_horario
		) a LIMIT 1;
	exception
	when no_data_found then
		ds_retorno_w := null;
	end;
	
elsif (cd_tipo_agenda_p = 5) then

	ie_gerar_hor_passado_w := Obter_Param_Usuario(866, 133, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estabelecimento_ativo,cd_estabelecimento_p), ie_gerar_hor_passado_w);
	ie_todos_dias_regra_w := Obter_Param_Usuario(866, 120, obter_perfil_ativo, nm_usuario_p, coalesce(obter_estabelecimento_ativo,cd_estabelecimento_p), ie_todos_dias_regra_w);

	begin
		select 	a.primeiro_horario
		into STRICT	ds_retorno_w
		from	(
			SELECT	to_char(hr_inicial,'hh24:mi:ss') primeiro_horario
			FROM 	agenda_Turno a
			WHERE 	cd_agenda	= cd_agenda_p
			AND 	ie_dia_semana	= ie_dia_semana_p
			AND 	hr_inicial 	< hr_final
			AND		((coalesce(dt_inicio_vigencia::text, '') = '') OR (trunc(dt_inicio_vigencia) <= TRUNC(dt_agenda_p)))
			AND		((coalesce(dt_final_vigencia::text, '') = '') OR (trunc(dt_final_vigencia) >= TRUNC(dt_agenda_p)))
			AND (ie_feriado_p <> 'S')
			AND		obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'
			AND (TO_DATE(TO_CHAR(dt_agenda_p,'dd/mm/yyyy') || ' ' ||TO_CHAR(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi:ss') > clock_timestamp() and (ie_gerar_hor_passado_w = 'N')
			or (ie_gerar_hor_passado_w = 'S'))
			and		((Obter_Semana_Dia_Agecons(dt_agenda_p,ie_dia_semana) = coalesce(ie_semana,0)) or (coalesce(ie_semana,0) = 0))
			
UNION

			SELECT 	to_char(hr_inicial,'hh24:mi:ss') primeiro_horario
			FROM 	agenda_Turno
			WHERE 	cd_agenda     	= cd_agenda_p
			AND 	ie_dia_semana		= 9
			AND 	hr_inicial 		< hr_final
			AND		((coalesce(dt_inicio_vigencia::text, '') = '') OR (trunc(dt_inicio_vigencia) <= TRUNC(dt_agenda_p)))
			AND		((coalesce(dt_final_vigencia::text, '') = '') OR (trunc(dt_final_vigencia) >= TRUNC(dt_agenda_p)))
			AND		ie_dia_semana_p BETWEEN 2 and 6
			AND (ie_feriado_p 	<> 'S')
			AND		obter_se_gerar_turno_agecons(dt_inicio_vigencia,ie_frequencia,dt_agenda_p) = 'S'
			and		((Obter_Semana_Dia_Agecons(dt_agenda_p,ie_dia_semana) = coalesce(ie_semana,0)) or (coalesce(ie_semana,0) = 0))
			AND (TO_DATE(TO_CHAR(dt_agenda_p,'dd/mm/yyyy') || ' ' ||TO_CHAR(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi:ss') > clock_timestamp() and (ie_gerar_hor_passado_w = 'N') 
			or (ie_gerar_hor_passado_w = 'S'))
			AND	NOT EXISTS	(SELECT	1
							FROM 	agenda_Turno
							WHERE 	cd_agenda				= cd_agenda_p
							AND 	ie_dia_semana			= ie_dia_semana_p
							and		ie_todos_dias_regra_w 	= 'N'
							AND		((coalesce(dt_inicio_vigencia::text, '') = '') OR (trunc(dt_inicio_vigencia) <= TRUNC(dt_agenda_p)))
							AND		((coalesce(dt_final_vigencia::text, '') = '') OR (trunc(dt_final_vigencia) >= TRUNC(dt_agenda_p)))
							and		((ie_dia_semana	= ie_dia_semana_p) or ((ie_dia_semana = 9) and ie_dia_semana_p BETWEEN 2 and 6)))
			order by primeiro_horario
		) a LIMIT 1;
	exception
	when no_data_found then
		ds_retorno_w := null;
	end;
	
end if;
		
	
return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_primeiro_horario_agenda (cd_agenda_p bigint, cd_tipo_agenda_p bigint, dt_agenda_p timestamp, ie_dia_semana_p text, ie_feriado_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

