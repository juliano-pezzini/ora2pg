-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_atend_pendente_adm ( nr_atendimento_p bigint, ie_considera_data_p text) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w				varchar(255);
qt_mat_tot_w				real;
qt_mat_adm_w 				real;
qt_dias_w					double precision;
dt_referencia_w				timestamp;
dt_fim_horario_w			timestamp;
ie_consiste_proc_rec_w			varchar(1);

 

BEGIN 
 
ie_consiste_proc_rec_w := Obter_Param_Usuario(3111, 107, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_proc_rec_w);
qt_dias_w := Obter_Param_Usuario(3111, 269, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, qt_dias_w);
dt_referencia_w				:= clock_timestamp() - coalesce(qt_dias_w,2);
ds_retorno_w				:= 'N';
 
select count(*) 
into STRICT	qt_mat_tot_w 
from 	prescr_mat_hor c, 
	prescr_material b, 
	prescr_medica a 
where	a.nr_prescricao	= b.nr_prescricao 
and	c.NR_SEQ_MATERIAL	= b.nr_sequencia 
and	c.nr_prescricao		= a.nr_prescricao 
and	a.nr_atendimento	= nr_atendimento_p 
and	a.dt_prescricao		> dt_referencia_w 
and	adep_obter_regra_inclusao(	CASE WHEN b.ie_agrupador=1 THEN 'MED' WHEN b.ie_agrupador=2 THEN 'MAT' WHEN b.ie_agrupador=8 THEN 'SNE' WHEN b.ie_agrupador=12 THEN 'SO' WHEN b.ie_agrupador=4 THEN 'SOL' END , 
								wheb_usuario_pck.get_cd_estabelecimento, 
								0, 
								obter_perfil_ativo, 
								b.cd_material, 
								null, 
								null, 
								null, 
								a.cd_setor_Atendimento, 
								null, 
								a.nr_prescricao, 
								null) = 'S' -- nr_seq_exame_p 
and	((ie_considera_data_p = 'N') or (c.dt_horario < clock_timestamp())) 
and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '') 
and	coalesce(c.dt_suspensao::text, '') = '' 
and	b.ie_suspenso		= 'N' 
and	coalesce(c.dt_fim_horario::text, '') = '' 
and coalesce(c.dt_recusa::text, '') = '' 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	coalesce(c.ie_adep,'S') = 'S' 
and	b.ie_Agrupador in (1,12) 
and	coalesce(c.ie_horario_especial,'N') <> 'S' 
and	coalesce(a.ie_adep,'S') = 'S';
 
if (qt_mat_tot_w = 0) then 
	ds_retorno_w	:= 'S';
else 
	ds_retorno_w	:= 'N';
end if;
 
if (ds_retorno_w	= 'S') and (ie_consiste_proc_rec_w = 'S') then 
	 
	select	count(*) 
	into STRICT	qt_mat_adm_w 
	from	procedimento y, 
		prescr_procedimento x, 
		prescr_proc_hor c, 
		prescr_medica a 
	where	y.cd_procedimento = x.cd_procedimento 
	and	y.ie_origem_proced = x.ie_origem_proced 
	and	y.cd_procedimento = c.cd_procedimento 
	and	y.ie_origem_proced = c.ie_origem_proced 
	and	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_sequencia = c.nr_seq_procedimento 
	and	x.nr_prescricao = a.nr_prescricao 
	and	c.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(Obter_Unidade_Atendimento(nr_atendimento_p, 'IA', 'CS'),a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_p 
	and	a.dt_prescricao	> dt_referencia_w 
	and	((ie_considera_data_p = 'N') or (c.dt_horario < clock_timestamp())) 
	and	coalesce(x.nr_seq_proc_interno::text, '') = '' 
	and	coalesce(x.nr_seq_exame::text, '') = '' 
	and	coalesce(x.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(x.nr_seq_derivado::text, '') = '' 
	and	coalesce(x.nr_seq_exame_sangue::text, '') = '' 
	and	coalesce(x.dt_suspensao::text, '') = '' 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'PROC', 
									wheb_usuario_pck.get_cd_estabelecimento, 
									0, 
									obter_Perfil_ativo, 
									null, 
									x.cd_procedimento, 
									x.ie_origem_proced, 
									x.nr_seq_proc_interno, 
									a.cd_setor_atendimento, 
									x.cd_setor_atendimento, 
									a.nr_prescricao, 
									x.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S';
	 
	if (qt_mat_adm_w = 0) then 
		select	count(*) 
		into STRICT	qt_mat_adm_w 
		from	procedimento y, 
			proc_interno w, 
			prescr_procedimento x, 
			prescr_proc_hor c, 
			prescr_medica a 
		where	y.cd_procedimento = x.cd_procedimento 
		and	y.ie_origem_proced = x.ie_origem_proced 
		and	y.cd_procedimento = c.cd_procedimento 
		and	y.ie_origem_proced = c.ie_origem_proced		 
		and	w.nr_sequencia = x.nr_seq_proc_interno 
		and	w.nr_sequencia = c.nr_seq_proc_interno 
		and	x.nr_prescricao = c.nr_prescricao 
		and	x.nr_sequencia = c.nr_seq_procedimento 
		and	x.nr_prescricao = a.nr_prescricao 
		and	c.nr_prescricao = a.nr_prescricao 
		and	a.nr_atendimento = nr_atendimento_p 
		and	a.dt_prescricao	> dt_referencia_w 
		and	((ie_considera_data_p = 'N') or (c.dt_horario < clock_timestamp())) 
		and	w.ie_tipo <> 'G' 
		and	w.ie_tipo <> 'BS' 
		and	coalesce(w.ie_ivc,'N') <> 'S' 
		and	coalesce(w.ie_ctrl_glic,'NC') = 'NC' 
		and	(x.nr_seq_proc_interno IS NOT NULL AND x.nr_seq_proc_interno::text <> '') 
		and	coalesce(x.nr_seq_prot_glic::text, '') = '' 
		and	coalesce(x.nr_seq_exame::text, '') = '' 
		and	coalesce(x.nr_seq_solic_sangue::text, '') = '' 
		and	coalesce(x.nr_seq_derivado::text, '') = '' 
		and	coalesce(x.nr_seq_exame_sangue::text, '') = '' 
		and	coalesce(x.dt_suspensao::text, '') = '' 
		and	coalesce(c.dt_fim_horario::text, '') = '' 
		and	coalesce(c.dt_suspensao::text, '') = '' 
		and	coalesce(c.ie_situacao,'A') = 'A' 
		and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
		and	obter_se_exibir_rep_adep_setor(Obter_Unidade_Atendimento(nr_atendimento_p, 'IA', 'CS'),a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
		and	adep_obter_regra_inclusao(	'PROC', 
										wheb_usuario_pck.get_cd_estabelecimento, 
										0, 
										obter_Perfil_ativo, 
										null, 
										x.cd_procedimento, 
										x.ie_origem_proced, 
										x.nr_seq_proc_interno, 
										a.cd_setor_atendimento, 
										x.cd_setor_atendimento, 
										a.nr_prescricao, 
										x.nr_seq_exame) = 'S' -- nr_seq_exame_p 
		and	coalesce(c.ie_horario_especial,'N') <> 'S';
	end if;
	 
	if (qt_mat_adm_w = 0) then 
		ds_retorno_w	:= 'S';
	else 
		ds_retorno_w	:= 'N';
	end if;
	if (ds_retorno_w	= 'S') then 
		 
		select count(*) 
		into STRICT	qt_mat_adm_w 
		from 	prescr_rec_hor c, 
			prescr_recomendacao b, 
			prescr_medica a 
		where	a.nr_prescricao	= b.nr_prescricao 
		and	c.nr_seq_recomendacao	= b.nr_sequencia 
		and	c.nr_prescricao		= b.nr_prescricao 
		and	a.nr_atendimento	= nr_atendimento_p 
		and	a.dt_prescricao		> dt_referencia_w 
		and	((ie_considera_data_p = 'N') or (c.dt_horario < clock_timestamp())) 
		and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '') 
		and	adep_obter_regra_inclusao(	'REC', 
										wheb_usuario_pck.get_cd_estabelecimento, 
										0, 
										obter_perfil_ativo, 
										null, 
										null, 
										null, 
										null, 
										a.cd_setor_Atendimento, 
										null, 
										null, 
										null) = 'S' -- nr_seq_exame_p 
		and	coalesce(c.dt_suspensao::text, '') = '' 
		and	b.ie_suspenso		= 'N' 
		and	coalesce(c.dt_fim_horario::text, '') = '' 
		and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';
		 
		if (qt_mat_adm_w = 0) then 
			ds_retorno_w	:= 'S';
		else 
			ds_retorno_w	:= 'N';
		end if;
	end if;
end if;
 
RETURN ds_retorno_w;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_atend_pendente_adm ( nr_atendimento_p bigint, ie_considera_data_p text) FROM PUBLIC;

