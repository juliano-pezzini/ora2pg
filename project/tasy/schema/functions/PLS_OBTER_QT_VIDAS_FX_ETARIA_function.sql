-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qt_vidas_fx_etaria ( qt_idade_inicial_p bigint, qt_idade_final_p bigint, nr_seq_plano_p bigint, cd_estabelecimento_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/* ie_opcao: (grau de parentesco dos beneficiários)
	TI - Titular;
	C - Cônjuge/Companheiro(a);
	F - Filho (a);
	E - Enteado(a);
	PM - Pai/Mãe;
	AO - Agregado/Outros;
	T - Total de cada produto;
*/
nr_seq_segurado_w	bigint;
cd_pessoa_fisica_w	varchar(20);
qt_idade_benef_w	bigint;
qt_beneficiarios_w	bigint;
contador_w		bigint;
cd_sib_w		varchar(20);
dt_nascimento_w		timestamp;
nr_seq_plano_w		bigint;
ie_tipo_parentesco_w	smallint;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.dt_nascimento
	from	pls_segurado		b,
		pessoa_fisica		c,
		pls_plano		a
	where	c.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_sequencia 		= b.nr_seq_plano
	and	((a.nr_sequencia	= nr_seq_plano_p and nr_seq_plano_p <> '0') or (nr_seq_plano_p = '0'))
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and 	coalesce(b.nr_seq_titular::text, '') = ''
	and	coalesce(b.dt_rescisao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = '';

C02 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.cd_sib,
		d.dt_nascimento,
		b.ie_tipo_parentesco
	from	pls_segurado		b,
		pessoa_fisica		d,
		grau_parentesco		c,
		pls_plano		a
	where	d.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_sequencia 		= b.nr_seq_plano
	and	b.nr_seq_parentesco 	= c.nr_sequencia
	and	((a.nr_sequencia	= nr_seq_plano_p and nr_seq_plano_p <> '0') or (nr_seq_plano_p = '0'))
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	(b.nr_seq_titular IS NOT NULL AND b.nr_seq_titular::text <> '')
	and	coalesce(b.dt_rescisao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = '';

C03 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.dt_nascimento
	from	estabelecimento		d,
		pls_segurado		b,
		pessoa_fisica		c,
		pls_plano		a
	where	c.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.cd_estabelecimento	= d.cd_estabelecimento
	and	a.nr_sequencia 		= b.nr_seq_plano
	and	((a.nr_sequencia	= nr_seq_plano_p and nr_seq_plano_p <> '0') or (nr_seq_plano_p = '0'))
	and	d.cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(b.dt_rescisao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = '';


BEGIN

qt_beneficiarios_w := 0;

if (nr_seq_plano_p = '0') then
	nr_seq_plano_w := null;
else
	nr_seq_plano_w := nr_seq_plano_p;
end if;

if (ie_opcao_p = 'TI') then
	begin
	open C01;
	loop
	fetch C01 into
		nr_seq_segurado_w,
		dt_nascimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (qt_idade_inicial_p <> -1 and qt_idade_final_p <> -1) then
			qt_idade_benef_w	:= trunc(months_between(clock_timestamp(), trunc(add_months(dt_nascimento_w,1),'month')) / 12);
			if (qt_idade_benef_w between qt_idade_inicial_p and qt_idade_final_p) then
				qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
			end if;
		else
			qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
		end if;

		end;
	end loop;
	close C01;
	end;
elsif (ie_opcao_p in ('C','F','E','PM','AO')) then
	begin
	open C02;
	loop
	fetch C02 into
		nr_seq_segurado_w,
		cd_sib_w,
		dt_nascimento_w,
		ie_tipo_parentesco_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if	((ie_opcao_p = 'C' and cd_sib_w = 3)   or (ie_opcao_p = 'F' and cd_sib_w = 4)   or (ie_opcao_p = 'E' and cd_sib_w = 6)   or (ie_opcao_p = 'PM' and	cd_sib_w = 8)  or (ie_opcao_p = 'AO' and (cd_sib_w = 10 or coalesce(ie_tipo_parentesco_w,0) = 2))) then

			 if (qt_idade_inicial_p <> -1 and qt_idade_final_p <> -1) then
				qt_idade_benef_w	:= trunc(months_between(clock_timestamp(), trunc(add_months(dt_nascimento_w,1),'month')) / 12);
				if (qt_idade_benef_w between qt_idade_inicial_p and qt_idade_final_p) then
					qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
				end if;
			else
				qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
			end if;
		end if;
		end;
	end loop;
	close C02;
	end;
elsif (ie_opcao_p = 'T') then
	begin
	open C03;
	loop
	fetch C03 into
		nr_seq_segurado_w,
		dt_nascimento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		 if (qt_idade_inicial_p <> -1 and qt_idade_final_p <> -1) then
				qt_idade_benef_w	:= trunc(months_between(clock_timestamp(), trunc(add_months(dt_nascimento_w,1),'month')) / 12);
			if (qt_idade_benef_w between qt_idade_inicial_p and qt_idade_final_p) then

				qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
			end if;
		else
			qt_beneficiarios_w	:= qt_beneficiarios_w + 1;
		end if;
		end;
	end loop;
	close C03;
	end;
end if;

return	qt_beneficiarios_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qt_vidas_fx_etaria ( qt_idade_inicial_p bigint, qt_idade_final_p bigint, nr_seq_plano_p bigint, cd_estabelecimento_p bigint, ie_opcao_p text) FROM PUBLIC;

