-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_se_medico_lib_tudo (cd_setor_atendimento_p bigint, ds_itens_liberar_p text) RETURNS varchar AS $body$
DECLARE

/*
	ds_itens_liberar_p
-- R,12;M,12345;D,1233;M,2312; 

*/
ie_permite_w			varchar(1) := 'N';
ie_permite_ww			varchar(1) := 'N';
ie_permite_proced_w		varchar(1) := 'N';
ie_possui_mater_w	    varchar(1);
ie_possui_recomen_w	    varchar(1);
ie_possui_hemoter_w	    varchar(1);
ie_possui_gasot_w	    varchar(1);
ie_possui_diet_w		varchar(1);
ie_possui_supl_w		varchar(1);
ie_possui_jejum_w		varchar(1);
ie_possui_leit_w		varchar(1);
ie_possui_npt_w			varchar(1);
ie_possui_medici_w      varchar(1);
ie_possui_proced_w      varchar(1);
ie_possui_exame_w		varchar(1);
ie_libera_se_proced_w	varchar(15);
ie_opcao_prescr_ww      varchar(2000);
ie_opcao_prescr_w		varchar(255);
item_w					varchar(255);
nr_seq_reg_item_w		cpoe_dieta.nr_sequencia%type;
qt_soma_bloqueados_w	bigint;
qt_prescr_mat_w			bigint;
qt_prescr_proc_w		bigint;
qt_prescr_solucao_w		bigint;
nr_seq_regra_w			bigint;
qt_reg_mat_regra_W		bigint;
ie_dieta_w				varchar(1);
ie_recomendacao_w		varchar(1);
ie_hemoterapia_w		varchar(1);
ie_gasoterapia_w		varchar(1);
ie_medico_Lib_proc_w	varchar(1);
ie_jejum_w				varchar(1);
ie_leite_deriv_w		varchar(1);
ie_material_w			varchar(1);
ie_suplemento_w			varchar(1);
ie_npt_w				varchar(1);
ds_mater_w              varchar(2000);
ds_nutr_w                varchar(2000);
ds_proced_w             varchar(2000);
ds_gasot_w              varchar(2000);
ds_recomen_w            varchar(2000);
ds_hemoter_w            varchar(2000);


C01 CURSOR FOR
	SELECT		coalesce(ie_permite, 'N'),
			nr_sequencia,
			coalesce(ie_dieta,'N'),
			coalesce(ie_recomendacao,'N'),
			coalesce(ie_hemoterapia,'N'),
			coalesce(ie_gasoterapia,'N'),
			coalesce(ie_jejum,'N'),
			coalesce(ie_leite,'N'),
			coalesce(ie_suplemento,'N'),
			coalesce(ie_materiais,'N'),
			coalesce(ie_npt,'N')
	from	rep_regra_setor_lib_rep
	where (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) is null or coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) = coalesce(cd_setor_atendimento_p,0))
	and		((coalesce(ie_dieta,'N') 		= 'N'	and
			  coalesce(ie_recomendacao,'N') 	= 'N'	and 
			  coalesce(ie_hemoterapia,'N')	= 'N'	and   
			  coalesce(ie_gasoterapia,'N')	= 'N'	and 
			  coalesce(ie_suplemento,'N') 	= 'N'	and
			  coalesce(ie_jejum,'N') 		= 'N'	and
			  coalesce(ie_leite,'N') 		= 'N'	and
			  coalesce(ie_materiais,'N')		= 'N'	and
			  coalesce(ie_npt,'N')			= 'N')	or	
			 ((coalesce(ie_possui_mater_w,'N')	= 'N'	or	ie_possui_mater_w	=	coalesce(ie_materiais,'N')	) and (coalesce(ie_possui_recomen_w,'N')	= 'N'	or	ie_possui_recomen_w	=	coalesce(ie_recomendacao,'N')) and (coalesce(ie_possui_hemoter_w,'N')	= 'N'	or	ie_possui_hemoter_w	=	coalesce(ie_hemoterapia,'N')	) and (coalesce(ie_possui_gasot_w,'N')	= 'N'	or	ie_possui_gasot_w	=	coalesce(ie_gasoterapia,'N')	) and (coalesce(ie_possui_diet_w,'N')	= 'N'	or	ie_possui_diet_w	= 	coalesce(ie_dieta,'N')		) and (coalesce(ie_possui_supl_w,'N')	= 'N'	or	ie_possui_supl_w	= 	coalesce(ie_suplemento,'N')	) and (coalesce(ie_possui_jejum_w,'N')	= 'N'	or	ie_possui_jejum_w	= 	coalesce(ie_jejum,'N')		) and (coalesce(ie_possui_leit_w,'N')	= 'N'	or	ie_possui_leit_w	= 	coalesce(ie_leite,'N')		) and (coalesce(ie_possui_npt_w,'N')		= 'N'	or	ie_possui_npt_w		= 	coalesce(ie_npt,'N'))			  
			  ))		 			 
	order by coalesce(cd_setor_atendimento,99999) desc;
	


BEGIN
ie_libera_se_proced_w := Obter_Param_Usuario(924, 586, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_libera_se_proced_w);
ie_opcao_prescr_ww := ds_itens_liberar_p;

while(ie_opcao_prescr_ww IS NOT NULL AND ie_opcao_prescr_ww::text <> '') loop
	if (position(';' in ie_opcao_prescr_ww) = 0) and (ie_opcao_prescr_ww IS NOT NULL AND ie_opcao_prescr_ww::text <> '') then
		ie_opcao_prescr_ww  := ie_opcao_prescr_ww||';';
	end if;
	item_w := substr(ie_opcao_prescr_ww, 1, position(';' in ie_opcao_prescr_ww) - 1);
	ie_opcao_prescr_w := substr(item_w, 1, position(',' in item_w) - 1);
	nr_seq_reg_item_w := (substr(item_w, position(',' in item_w) + 1, length(item_w)))::numeric;
	ie_opcao_prescr_ww := substr(ie_opcao_prescr_ww, position(';' in ie_opcao_prescr_ww) + 1, length(ie_opcao_prescr_ww));
	
	if (ie_opcao_prescr_w in ('MA', 'M')) then -- Materiais e materiais associados
		if (coalesce(ds_mater_w::text, '') = '') then
			ds_mater_w := nr_seq_reg_item_w;
		else
			ds_mater_w := ds_mater_w ||','||nr_seq_reg_item_w;
		end if;
	end if; 	
	
	if (ie_opcao_prescr_w = 'N') then	--Nutricao
		if (coalesce(ds_nutr_w::text, '') = '') then
			ds_nutr_w := nr_seq_reg_item_w;
		else
			ds_nutr_w := ds_nutr_w ||','||nr_seq_reg_item_w;
		end if;		
	end if;
	
	if (ie_opcao_prescr_w = 'P') then	--Procedimentos
		if (coalesce(ds_proced_w::text, '') = '') then
			ds_proced_w := nr_seq_reg_item_w;
		else
			ds_proced_w := ds_proced_w ||','||nr_seq_reg_item_w;
		end if;		
	end if;
	
	if (ie_opcao_prescr_w = 'G') then	--Gasoterapia
		if (coalesce(ds_gasot_w::text, '') = '') then
			ds_gasot_w := nr_seq_reg_item_w;
		else
			ds_gasot_w := ds_gasot_w ||','||nr_seq_reg_item_w;
		end if;
	end if;
	
	if (ie_opcao_prescr_w = 'R') then	--Recomendacao
		if (coalesce(ds_recomen_w::text, '') = '') then
			ds_recomen_w := nr_seq_reg_item_w;
		else
			ds_recomen_w := ds_recomen_w ||','||nr_seq_reg_item_w;
		end if;
	end if;
	
	if (ie_opcao_prescr_w = 'H') then	--Hemoterapia
		if (coalesce(ds_hemoter_w::text, '') = '') then
			ds_hemoter_w := nr_seq_reg_item_w;
		else
			ds_hemoter_w := ds_hemoter_w ||','||nr_seq_reg_item_w;
		end if;
	end if;
	
	if (ie_opcao_prescr_w = 'DI') then	--Dialysis
		return 'N';
	end if;	
	if (ie_opcao_prescr_w = 'DP') then	--Dialysis
		return 'N';
	end if;
	
	if (ie_opcao_prescr_w = 'AP') then	--Anatomia Patologica
		return 'N';
	end if;
end loop;
		if (ds_nutr_w IS NOT NULL AND ds_nutr_w::text <> '') then
			select	coalesce(max('S'), 'N')
			into STRICT	ie_possui_diet_w
			from	cpoe_dieta a,
					table(lista_pck.obter_lista(ds_nutr_w)) b
			where	a.nr_sequencia = b.nr_registro
			and		ie_tipo_dieta in ('O','E');

			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_supl_w
			from	cpoe_dieta a,
					table(lista_pck.obter_lista(ds_nutr_w)) b
			where	a.nr_sequencia = b.nr_registro
			and		ie_tipo_dieta = 'S';

			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_jejum_w
			from	cpoe_dieta a,
					table(lista_pck.obter_lista(ds_nutr_w)) b
			where	a.nr_sequencia = b.nr_registro
			and		ie_tipo_dieta = 'J';

			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_leit_w
			from	cpoe_dieta a,
					table(lista_pck.obter_lista(ds_nutr_w)) b
			where	a.nr_sequencia = b.nr_registro
			and		ie_tipo_dieta = 'L';
		
			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_npt_w
			from	cpoe_dieta a,
					table(lista_pck.obter_lista(ds_nutr_w)) b
			where	a.nr_sequencia = b.nr_registro
			and		ie_tipo_dieta in ('P','I');		
		end if;
		if (ds_proced_w IS NOT NULL AND ds_proced_w::text <> '') then
			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_proced_w
			from	cpoe_procedimento a,
					table(lista_pck.obter_lista(ds_proced_w)) b
			where	a.nr_sequencia = b.nr_registro
			and 	coalesce(obter_exame_lab_proc_int(a.nr_seq_proc_interno),0) = 0;
		end if;
		if (ds_mater_w IS NOT NULL AND ds_mater_w::text <> '') then
			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_mater_w
			from	CPOE_MATERIAL a,
					table(lista_pck.obter_lista(ds_mater_w)) b
			where	a.nr_sequencia = b.nr_registro;
		end if;
		if (ds_recomen_w IS NOT NULL AND ds_recomen_w::text <> '') then	
			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_recomen_w
			from	cpoe_recomendacao a,
					table(lista_pck.obter_lista(ds_recomen_w)) b
			where	a.nr_sequencia = b.nr_registro;
		end if;
		if (ds_hemoter_w IS NOT NULL AND ds_hemoter_w::text <> '') then	
			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_hemoter_w
			from	cpoe_hemoterapia a,
					table(lista_pck.obter_lista(ds_hemoter_w)) b
			where	a.nr_sequencia = b.nr_registro;
		end if;
		if (ds_gasot_w IS NOT NULL AND ds_gasot_w::text <> '') then	
			select  coalesce(max('S'), 'N')
			into STRICT	ie_possui_gasot_w
			from	cpoe_gasoterapia a,
					table(lista_pck.obter_lista(ds_gasot_w)) b
			where	a.nr_sequencia = b.nr_registro;
		end if;
	
if (ie_libera_se_proced_w	<> 'N' and (ds_proced_w IS NOT NULL AND ds_proced_w::text <> '')) then

	select  coalesce(max('S'), 'N')
	into STRICT	ie_possui_exame_w
	from	cpoe_procedimento a,
		    table(lista_pck.obter_lista(ds_proced_w)) b
	where	a.nr_sequencia = b.nr_registro
	and	coalesce(obter_exame_lab_proc_int(nr_seq_proc_interno),0) > 0;

	if (ds_mater_w IS NOT NULL AND ds_mater_w::text <> '') then
		select  coalesce(max('S'), 'N')
		into STRICT	ie_possui_medici_w
		from    CPOE_MATERIAL  a,
				table(lista_pck.obter_lista(ds_mater_w)) b
		where	a.nr_sequencia = b.nr_registro
		and		a.ie_material  = 'N';		
	end if;
	
	if	((coalesce(ie_possui_medici_w,'N') = 'N') and (coalesce(ie_possui_recomen_w,'N') = 'N')) then	
		if	((ie_libera_se_proced_w = 'S') and (ie_possui_exame_w = 'N') and (ie_possui_proced_w	= 'S')) THEN
			ie_permite_proced_w := 'S';
		elsif ((ie_libera_se_proced_w = 'A') and ((ie_possui_exame_w = 'S') or (ie_possui_proced_w = 'S'))) THEN
			ie_permite_proced_w := 'S';
		elsif (ie_libera_se_proced_w = 'R') then
			select	coalesce(max(CPOE_Obter_se_lib_tudo_proced(ds_proced_w)),'N')
			into STRICT	ie_permite_proced_w
			;
		end if;
	end if;
end if;

if ((ds_proced_w IS NOT NULL AND ds_proced_w::text <> '') and ie_permite_proced_w = 'N')	then

	return 'N';
end if;
	
open C01;
loop
fetch C01 into	
	ie_permite_ww,
	nr_seq_regra_w,
	ie_dieta_w,
	ie_recomendacao_w,
	ie_hemoterapia_w,
	ie_gasoterapia_w,
	ie_jejum_w,
	ie_leite_deriv_w,
	ie_suplemento_w,
	ie_material_W,
	ie_npt_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	Select	count(*)
	into STRICT	qt_reg_mat_regra_w
	from	rep_material_lib_rep b
	where	b.nr_seq_regra = nr_seq_regra_w;
	
	if (coalesce(ds_mater_w::text, '') = '') then
		qt_prescr_mat_w := 0;
	else
		Select 	count(*)
		into STRICT	qt_prescr_mat_w
		from	CPOE_material a,
				table(lista_pck.obter_lista(ds_mater_w)) c
		where	a.nr_sequencia = c.nr_registro
		and 	a.ie_material = 'N'
		and	(((not exists (SELECT 1
					from	rep_material_lib_rep b
					where	b.nr_seq_regra = nr_seq_regra_w
					and	a.cd_material = coalesce(b.cd_material,a.cd_material)
					and 	Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material,	Obter_estrutura_material(a.cd_material,'G'))
					and 	Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material,	obter_estrutura_material(a.cd_material,'S'))
					and 	Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material,	Obter_estrutura_material(a.cd_material,'C')))
		and	((coalesce(cd_mat_comp1::text, '') = '') or (not exists (Select 1 
					from	rep_material_lib_rep b
					where	b.nr_seq_regra = nr_seq_regra_w
					and	a.cd_material = coalesce(b.cd_material,a.cd_mat_comp1)
					and 	Obter_estrutura_material(a.cd_mat_comp1,'G') = coalesce(cd_grupo_material,	Obter_estrutura_material(a.cd_mat_comp1,'G'))
					and 	Obter_estrutura_material(a.cd_mat_comp1,'S') = coalesce(cd_subgrupo_material,	obter_estrutura_material(a.cd_mat_comp1,'S'))
					and 	Obter_estrutura_material(a.cd_mat_comp1,'C') = coalesce(cd_classe_material,	Obter_estrutura_material(a.cd_mat_comp1,'C')))))
		and	((coalesce(cd_mat_comp2::text, '') = '') or (not exists (Select 1 
					from	rep_material_lib_rep b
					where	b.nr_seq_regra = nr_seq_regra_w
					and	a.cd_material = coalesce(b.cd_material,a.cd_mat_comp2)
					and 	Obter_estrutura_material(a.cd_mat_comp2,'G') = coalesce(cd_grupo_material,	Obter_estrutura_material(a.cd_mat_comp2,'G'))
					and 	Obter_estrutura_material(a.cd_mat_comp2,'S') = coalesce(cd_subgrupo_material,	obter_estrutura_material(a.cd_mat_comp2,'S'))
					and 	Obter_estrutura_material(a.cd_mat_comp2,'C') = coalesce(cd_classe_material,	Obter_estrutura_material(a.cd_mat_comp2,'C')))))
		and	((coalesce(cd_mat_comp3::text, '') = '') or (not exists (Select 1 
					from	rep_material_lib_rep b
					where	b.nr_seq_regra = nr_seq_regra_w
					and	a.cd_material = coalesce(b.cd_material,a.cd_mat_comp3)
					and 	Obter_estrutura_material(a.cd_mat_comp3,'G') = coalesce(cd_grupo_material,	Obter_estrutura_material(a.cd_mat_comp3,'G'))
					and 	Obter_estrutura_material(a.cd_mat_comp3,'S') = coalesce(cd_subgrupo_material, obter_estrutura_material(a.cd_mat_comp3,'S'))
					and 	Obter_estrutura_material(a.cd_mat_comp3,'C') = coalesce(cd_classe_material,	Obter_estrutura_material(a.cd_mat_comp3,'C')))))
		and	((coalesce(cd_mat_comp4::text, '') = '') or (not exists (Select 1 
					from	rep_material_lib_rep b
					where	b.nr_seq_regra = nr_seq_regra_w
					and	a.cd_material = coalesce(b.cd_material,a.cd_mat_comp4)
					and 	Obter_estrutura_material(a.cd_mat_comp4,'G') = coalesce(cd_grupo_material,	Obter_estrutura_material(a.cd_mat_comp4,'G'))
					and 	Obter_estrutura_material(a.cd_mat_comp4,'S') = coalesce(cd_subgrupo_material,	obter_estrutura_material(a.cd_mat_comp4,'S'))
					and 	Obter_estrutura_material(a.cd_mat_comp4,'C') = coalesce(cd_classe_material,	Obter_estrutura_material(a.cd_mat_comp4,'C'))))))
		or (qt_reg_mat_regra_w = 0)));
	end if;
			
	if (qt_prescr_mat_w = 0) or
		((ie_dieta_w		= 'N') and (ie_recomendacao_w	= 'N') and (ie_hemoterapia_w	= 'N') and (ie_gasoterapia_w	= 'N') and (ie_jejum_w		= 'N') and (ie_leite_deriv_w	= 'N') and (ie_material_w		= 'N') and (ie_suplemento_w	= 'N') and (ie_npt_w		= 'N')) then
		ie_permite_w := ie_permite_ww;
	end if;
	
	end;
end loop;
close C01;

return	ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_se_medico_lib_tudo (cd_setor_atendimento_p bigint, ds_itens_liberar_p text) FROM PUBLIC;

