-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_mat_regra_adep ( nr_atendimento_p bigint, nr_prescricao_p bigint, cd_material_p bigint, cd_setor_prescr_p bigint, ie_opcao_p text, ie_momento_p text default null) RETURNS varchar AS $body$
DECLARE

						
cd_classe_material_w		bigint;
cd_grupo_material_w		bigint;
cd_subgrupo_material_w		bigint;
nr_seq_familia_w		bigint;
qt_limite_w			bigint;
ie_limite_w			varchar(2);
cd_unidade_medida_w		varchar(50);
ie_cobrar_w			varchar(1);
ds_retorno_w			varchar(255);
qt_item_w			bigint;
qt_item_estorno_w		bigint;
ie_momento_lancamento_w		varchar(10);
cd_motivo_baixa_w		smallint;


c01 CURSOR FOR
	SELECT 	coalesce(qt_limite,0),
		ie_limite,
		cd_unidade_medida,
		coalesce(ie_cobrar,'S'),
		coalesce(cd_motivo_baixa,0)
	from	regra_cobranca_mat_adep
	where	((coalesce(cd_material::text, '') = '') or (cd_material = cd_material_p))
	and	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
	and	((coalesce(cd_grupo_material::text, '') = '') or (cd_grupo_material = cd_grupo_material_w))
	and	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
	and	((coalesce(nr_seq_familia::text, '') = '') or (nr_seq_familia = nr_seq_familia_w))
	and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_prescr_p) or (coalesce(cd_setor_prescr_p::text, '') = ''))
	and	ie_momento_lancamento_w = 'CR' --Abrir o cursor somente se o parametro 97 for CR
	order by
		coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_grupo_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(nr_seq_familia_w,0),
		coalesce(cd_setor_atendimento,0);


BEGIN

ie_momento_lancamento_w := obter_param_usuario(1113, 97, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_momento_lancamento_w);

select	obter_dados_material(cd_material_p,'CSUB'),
		obter_dados_material(cd_material_p,'CGRU'),
		obter_dados_material(cd_material_p,'CCLA'),
		obter_dados_material(cd_material_p,'FA')
into STRICT	cd_subgrupo_material_w,
		cd_grupo_material_w,
		cd_classe_material_w,
		nr_seq_familia_w
;

	open c01;
		loop
		fetch c01 into
			qt_limite_w,
			ie_limite_w,
			cd_unidade_medida_w,
			ie_cobrar_w,
			cd_motivo_baixa_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			qt_limite_w 	    := qt_limite_w;
			ie_limite_w 	    := ie_limite_w;
			cd_unidade_medida_w := cd_unidade_medida_w;
			ie_cobrar_w 	    := ie_cobrar_w;
			cd_motivo_baixa_w   := cd_motivo_baixa_w;
	end loop;
	close c01;
	
if (ie_opcao_p = 'MB') then
	ds_retorno_w := to_char(cd_motivo_baixa_w);
elsif (ie_opcao_p	= 'UN') then
	ds_retorno_w := cd_unidade_medida_w;
elsif (ie_opcao_p = 'CB') then	
	if (ie_momento_lancamento_w = 'CR') and (ie_momento_p = 'PP') then
		ds_retorno_w := 'N';
	elsif (ie_momento_lancamento_w = 'CR') and (ie_momento_p = 'SP') then		
		if (coalesce(ie_cobrar_w,'S') = 'S') then
			ds_retorno_w := 'N';
		elsif (coalesce(ie_cobrar_w,'S') = 'N') then
			ds_retorno_w := 'S';
		end if;
	elsif (ie_momento_p = 'PP') and (ie_momento_lancamento_w = 'PP') then
		--Quando o parametro 97 nao for CR nao deve-se considerar a regra de cobranca no adep				
		ds_retorno_w := 'S';	
	elsif (ie_momento_p = 'SP') and (ie_momento_lancamento_w = 'SP') then
		--Quando o parametro 97 nao for CR nao deve-se considerar a regra de cobranca no adep				
    ds_retorno_w := 'S';
	else
		ds_retorno_w := coalesce(ie_cobrar_w,'S');
	end if;		
elsif (ie_opcao_p = 'LM') then
	ds_retorno_w := 'S';
	if (qt_limite_w > 0) then
		if (ie_limite_w = 'D') then
		
			select	count(*) + 1
			into STRICT		qt_item_w
			from		material_atend_paciente
			where	cd_material = cd_material_p
			and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
			and		qt_material >0;
			
			select	count(*)
			into STRICT		qt_item_estorno_w
			from		material_atend_paciente
			where	cd_material = cd_material_p
			and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
			and		qt_material < 0;
			if	((qt_item_w - qt_item_estorno_w) > qt_limite_w) then
				ds_retorno_w := 'N';
			end if;
		elsif (ie_limite_w = 'A') then
			select	count(*) + 1
			into STRICT		qt_item_w
			from		material_atend_paciente
			where	cd_material = cd_material_p
			and		nr_atendimento = nr_atendimento_p
			and		qt_material >0;
			
			select	count(*)
			into STRICT		qt_item_estorno_w
			from		material_atend_paciente
			where	cd_material = cd_material_p
			and		nr_atendimento = nr_atendimento_p
			and		qt_material < 0;
			
			if	((qt_item_w - qt_item_estorno_w) > qt_limite_w) then
				ds_retorno_w := 'N';
			end if;
		elsif (ie_limite_w = 'P') then
			select	count(*) + 1
			into STRICT		qt_item_w
			from		material_atend_paciente
			where	cd_material = cd_material_p
			and		nr_prescricao = nr_prescricao_p
			and		qt_material > 0;
			
			select	count(*)
			into STRICT		qt_item_estorno_w
			from		material_atend_paciente
			where	cd_material = cd_material_p
			and		nr_prescricao = nr_prescricao_p
			and		qt_material < 0;
			
			if	((qt_item_w - qt_item_estorno_w) > qt_limite_w) then
				ds_retorno_w := 'N';
			end if;		
		end if;
	end if;
end if;

return ds_retorno_w;
		
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_mat_regra_adep ( nr_atendimento_p bigint, nr_prescricao_p bigint, cd_material_p bigint, cd_setor_prescr_p bigint, ie_opcao_p text, ie_momento_p text default null) FROM PUBLIC;

