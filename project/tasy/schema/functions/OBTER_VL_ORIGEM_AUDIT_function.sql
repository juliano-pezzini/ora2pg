-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_vl_origem_audit ( nr_seq_auditoria_p bigint, vl_auditoria_orig_p bigint) RETURNS bigint AS $body$
DECLARE


ie_calculo_vl_original_w	varchar(1);
vl_retorno_w			double precision:= 0;


BEGIN
ie_calculo_vl_original_w := obter_param_usuario(1116, 202, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_calculo_vl_original_w);

if (nr_seq_auditoria_p IS NOT NULL AND nr_seq_auditoria_p::text <> '') then
	if (ie_calculo_vl_original_w = 'S') then
		begin
		select  coalesce(sum(x.vl_retorno), 0)
		into STRICT	vl_retorno_w
		from (  SELECT	CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.vl_material END 		vl_retorno,
				a.nr_sequencia							nr_seq_auditoria
			from	auditoria_conta_paciente	a,
				auditoria_matpaci		b,
				material_atend_paciente		c
			where	a.nr_sequencia			= b.nr_seq_auditoria
			and     b.nr_seq_matpaci		= c.nr_sequencia
			and	a.ie_tipo_auditoria		= 'I'
			and	coalesce(c.nr_seq_proc_pacote,0)	<> c.nr_sequencia
			
union all

			SELECT	CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.vl_procedimento END 		vl_retorno,
				a.nr_sequencia							nr_seq_auditoria
			from	auditoria_conta_paciente	a,
				auditoria_propaci		b,
				procedimento_paciente		c
			where	a.nr_sequencia			= b.nr_seq_auditoria
			and     b.nr_seq_propaci		= c.nr_sequencia
			and	a.ie_tipo_auditoria		= 'I'
			and 	coalesce(c.cd_motivo_exc_conta::text, '') = ''
			and	coalesce(c.nr_seq_proc_pacote,0) 	<> c.nr_sequencia
			
union all
 --Esse union e devido ao parametro [57] da auditoria que exclui o proc. e faz um novo lancamento,
			select	CASE WHEN coalesce(b.ie_original,'N')='S' THEN  b.vl_procedimento  ELSE null END 	vl_retorno,
				a.nr_sequencia							nr_seq_auditoria
			from    auditoria_conta_paciente	a,
				auditoria_propaci		b,
				procedimento_paciente		c
			where   a.nr_sequencia			= b.nr_seq_auditoria
			and     b.nr_seq_propaci		= c.nr_sequencia
			and	a.ie_tipo_auditoria		= 'I'
			and     (c.cd_motivo_exc_conta IS NOT NULL AND c.cd_motivo_exc_conta::text <> '')
			and     substr(c.ds_compl_motivo_excon,1,4) = '999#'
			
union all

			select	a.vl_material_original						vl_retorno,
				d.nr_sequencia							nr_seq_auditoria
			from	auditoria_externa_item		a,
				auditoria_externa		b,
				material_atend_paciente		c,
				auditoria_conta_paciente	d
			where 	d.nr_sequencia			= b.nr_seq_auditoria
			and     a.nr_seq_audit_ext		= b.nr_sequencia
			and	a.nr_seq_item			= c.nr_sequencia
			and	b.ie_tipo_item			= 'M'
			and 	d.ie_tipo_auditoria		= 'E'
			and	coalesce(c.cd_motivo_exc_conta::text, '') = ''
			and	coalesce(c.nr_seq_proc_pacote,0)	<> c.nr_sequencia
			
union all

			select	a.vl_procedimento_orig						vl_retorno,
				d.nr_sequencia							nr_seq_auditoria
			from	auditoria_externa_item		a,
				auditoria_externa		b,
				procedimento_paciente		c,
				auditoria_conta_paciente	d
			where	d.nr_sequencia              	= b.nr_seq_auditoria
			and	a.nr_seq_audit_ext		= b.nr_sequencia
			and	a.nr_seq_item			= c.nr_sequencia
			and	b.ie_tipo_item			= 'P'
			and     d.ie_tipo_auditoria		= 'E'
			and	coalesce(c.cd_motivo_exc_conta::text, '') = ''
			and	coalesce(c.nr_seq_proc_pacote, 0)	<> c.nr_sequencia) x
		where	x.nr_seq_auditoria          		= nr_seq_auditoria_p;
		exception
			when others then
			vl_retorno_w := 0;
		end;
	else
		vl_retorno_w := vl_auditoria_orig_p;
	end if;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_vl_origem_audit ( nr_seq_auditoria_p bigint, vl_auditoria_orig_p bigint) FROM PUBLIC;

