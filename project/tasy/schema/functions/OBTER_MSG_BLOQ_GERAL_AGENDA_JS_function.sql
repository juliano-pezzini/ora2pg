-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_msg_bloq_geral_agenda_js (cd_estabelecimento_p bigint, cd_agenda_p bigint, nr_seq_agenda_p bigint, nr_seq_agenda_adic_p bigint, dt_agenda_p timestamp default null, ie_geracao_horarios_p text default 'N', ie_valida_agendamento_p text default 'N', nr_seq_proc_interno_p bigint default null, cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null, ie_tipo_agenda_p text default null, nr_seq_exame_p bigint default null, cd_medico_adic_p text default null) RETURNS varchar AS $body$
DECLARE


nr_seq_regra_bloq_w		agenda_bloqueio_geral.nr_sequencia%type := 0;
ds_retorno_w			varchar(4000) := '';
cd_tipo_agenda_w		agenda.cd_tipo_agenda%type;
ie_classif_agenda_w		agenda_consulta.ie_classif_agenda%type;
nr_seq_classif_agenda_w		agenda_paciente.nr_seq_classif_agenda%type;
cd_espec_agendamento_w		especialidade_medica.cd_especialidade%type;
cd_setor_agendamento_w		setor_atendimento.cd_setor_atendimento%type;
nr_seq_proc_interno_w		proc_interno.nr_sequencia%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
cd_profissional_agendamento_w	pessoa_fisica.cd_pessoa_fisica%type;
dt_agenda_w			timestamp;
nr_seq_exame_w			exame_laboratorio.nr_seq_exame%type;
cd_agenda_w			agenda.cd_agenda%type;

C01 CURSOR FOR
	SELECT 	max(nr_seq_exame) nr_seq_exame,
		max(cd_procedimento) cd_procedimento,
		max(ie_origem_proced) ie_origem_proced,
		max(nr_seq_proc_interno) nr_seq_proc_interno
	from 	agenda_consulta_proc
	where	nr_seq_agenda = nr_seq_agenda_p
	and	cd_tipo_agenda_w in (3,4,5)
	
union all

	SELECT	null nr_seq_exame,
		max(cd_procedimento),
		max(ie_origem_proced),
		max(nr_seq_proc_interno)
	from	agenda_paciente_proc
	where	nr_seq_agenda = nr_seq_agenda_p
	and	cd_tipo_agenda_w = 2;

procedure preenche_procedimento(nr_seq_exame_pp bigint, cd_procedimento_pp bigint, ie_origem_proced_pp bigint, nr_seq_proc_interno_pp bigint) is
	;
BEGIN
	if (coalesce(cd_procedimento_pp::text, '') = '') and (nr_seq_proc_interno_pp IS NOT NULL AND nr_seq_proc_interno_pp::text <> '') then
		select 	max(cd_procedimento),
			max(ie_origem_proced)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from	proc_interno
		where 	nr_sequencia = nr_seq_proc_interno_pp;
	end if;
	if (coalesce(cd_procedimento_w::text, '') = '') and (nr_seq_exame_pp IS NOT NULL AND nr_seq_exame_pp::text <> '') then
		select 	max(cd_procedimento),
			max(ie_origem_proced)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from 	exame_laboratorio
		where 	nr_seq_exame = nr_seq_exame_pp;
	end if;
	end;

begin

if (ie_tipo_agenda_p = 'E') then
	select max(cd_agenda)
	into STRICT cd_agenda_w
	from agenda_paciente
	where nr_sequencia = nr_seq_agenda_p;
elsif (ie_tipo_agenda_p in ('S','C')) then
	select max(cd_agenda)
	into STRICT cd_agenda_w
	from agenda_consulta
	where nr_sequencia = nr_seq_agenda_p;
end if;

cd_agenda_w := coalesce(cd_agenda_w,cd_agenda_p);

select 	max(cd_tipo_agenda)
into STRICT	cd_tipo_agenda_w
from 	agenda
where 	cd_agenda = cd_agenda_w;

if (cd_tipo_agenda_w = 2) then
	select 	null ie_classif_agenda,
		max(nr_seq_classif_agenda),
		null cd_espec_agendamento,
		max(cd_setor_atendimento),
		max(nr_seq_proc_interno),
		max(cd_procedimento),
		max(ie_origem_proced),
		coalesce(cd_medico_adic_p, max(cd_medico_exec)),
		max(hr_inicio)
	into STRICT	ie_classif_agenda_w,
		nr_seq_classif_agenda_w,
		cd_espec_agendamento_w,
		cd_setor_agendamento_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_profissional_agendamento_w,
		dt_agenda_w
	from 	agenda_paciente
	where 	nr_sequencia = nr_seq_agenda_p;
	if (coalesce(nr_seq_agenda_adic_p,0) > 0) then -- utilizado para beforepost dos procedimentos adicionais
		select 	null nr_seq_exame,
			max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proc_interno)
		into STRICT	nr_seq_exame_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w
		from 	agenda_paciente_proc
		where	nr_sequencia = nr_seq_agenda_adic_p
		and	nr_seq_agenda = nr_seq_agenda_p;
	end if;
else
	select 	max(ie_classif_agenda),
		null nr_seq_classif_agenda,
		max(cd_especialidade) cd_espec_agendamento,
		max(cd_setor_atendimento),
		max(nr_seq_proc_interno),
		max(cd_procedimento),
		max(ie_origem_proced),
		coalesce(cd_medico_adic_p,max(cd_medico)),
		max(dt_agenda)
	into STRICT	ie_classif_agenda_w,
		nr_seq_classif_agenda_w,
		cd_espec_agendamento_w,
		cd_setor_agendamento_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_profissional_agendamento_w,
		dt_agenda_w
	from 	agenda_consulta
	where 	nr_sequencia = nr_seq_agenda_p;
	if (coalesce(nr_seq_agenda_adic_p,0) > 0) then -- nr_seq_agenda_adic_p utilizado para eventos do dbpanel dos procedimentos adicionais
		select 	max(nr_seq_exame),
			max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proc_interno)
		into STRICT	nr_seq_exame_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w
		from 	agenda_consulta_proc
		where	nr_sequencia = nr_seq_agenda_adic_p
		and	nr_seq_agenda = nr_seq_agenda_p;
	end if;
end if;

if (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') then
	dt_agenda_w := dt_agenda_p;
end if;

if (coalesce(nr_seq_proc_interno_p,0) > 0) then
	nr_seq_proc_interno_w := nr_seq_proc_interno_p;
end if;
if (coalesce(cd_procedimento_p,0) > 0) then
	cd_procedimento_w := cd_procedimento_p;
	ie_origem_proced_w := ie_origem_proced_p;
end if;
if (coalesce(nr_seq_exame_p, 0) > 0) then
	nr_seq_exame_w := nr_seq_exame_p;
end if;

preenche_procedimento(nr_seq_exame_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w);

nr_seq_regra_bloq_w := obter_se_bloq_geral_agenda(cd_estabelecimento_p,
					cd_agenda_w,
					ie_classif_agenda_w,
					nr_seq_classif_agenda_w,
					cd_espec_agendamento_w,
					cd_setor_agendamento_w,
					nr_seq_proc_interno_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					cd_profissional_agendamento_w,
					dt_agenda_w,
					coalesce(ie_geracao_horarios_p,'N'),
					coalesce(ie_valida_agendamento_p,'N'));
nr_seq_proc_interno_w := null;
cd_procedimento_w := null;
ie_origem_proced_w := null;
nr_seq_exame_w := null;
if (coalesce(nr_seq_agenda_adic_p::text, '') = '') then -- se nÃ£o for evento do dbpanel de adicionais, deve considerar todos exames adicionais ao validar regra
	for exame_adic in c01 loop
		if (nr_seq_regra_bloq_w = 0) then
			preenche_procedimento(exame_adic.nr_seq_exame, exame_adic.cd_procedimento, exame_adic.ie_origem_proced, exame_adic.nr_seq_proc_interno);
			nr_seq_regra_bloq_w := obter_se_bloq_geral_agenda( cd_estabelecimento_p,
							cd_agenda_w,
							ie_classif_agenda_w,
							nr_seq_classif_agenda_w,
							cd_espec_agendamento_w,
							cd_setor_agendamento_w,
							nr_seq_proc_interno_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							cd_profissional_agendamento_w,
							dt_agenda_w,
							coalesce(ie_geracao_horarios_p,'N'),
							coalesce(ie_valida_agendamento_p,'N') );
		end if;
	end loop;
end if;

if (coalesce(nr_seq_regra_bloq_w,0) > 0) then
	ds_retorno_w := obter_mensagem_bloq_geral_age(nr_seq_regra_bloq_w);
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_msg_bloq_geral_agenda_js (cd_estabelecimento_p bigint, cd_agenda_p bigint, nr_seq_agenda_p bigint, nr_seq_agenda_adic_p bigint, dt_agenda_p timestamp default null, ie_geracao_horarios_p text default 'N', ie_valida_agendamento_p text default 'N', nr_seq_proc_interno_p bigint default null, cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null, ie_tipo_agenda_p text default null, nr_seq_exame_p bigint default null, cd_medico_adic_p text default null) FROM PUBLIC;

