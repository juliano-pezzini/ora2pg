-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_medico_lib_tudo ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


ie_permite_w			varchar(1) := 'N';
ie_permite_ww			varchar(1) := 'N';
qt_nut_pac_w			bigint;
qt_nut_paciente_w		bigint;
qt_prescr_dieta_w		bigint;
qt_prescr_gas_w			bigint;
qt_prescr_mat_w			bigint;
qt_prescr_proc_w		bigint;
qt_prescr_rec_w			bigint;
qt_prescr_solic_bco_w		bigint;
qt_prescr_solucao_w 		bigint;
qt_rep_jejum_w			bigint;
qt_soma_bloqueados_w		bigint;
nr_seq_regra_w			bigint;
qt_prescr_supl_w		bigint;
qt_opm_w			bigint;
qt_reg_mat_regra_W		bigint;
qt_prescr_material_w		bigint;
qt_material_w			bigint;
ie_libera_se_proced_w		varchar(1);
ie_opm_w			varchar(1);
qt_proced_w			bigint;
ie_dieta_w			varchar(1);
ie_recomendacao_w		varchar(1);
ie_hemoterapia_w		varchar(1);
ie_gasoterapia_w		varchar(1);
qt_exame_w			bigint;
qt_nr_seq_leite_deriv_w		bigint;
ie_medico_Lib_proc_w		varchar(1);
ie_jejum_w			varchar(1);
ie_leite_deriv_w		varchar(1);
ie_material_w			varchar(1);
ie_suplemento_w			varchar(1);
ie_npt_w			varchar(1);
qt_recomendacao_w			bigint;

C01 CURSOR FOR
	SELECT		coalesce(ie_permite, 'N'),
			nr_sequencia,
			coalesce(ie_dieta,'N'),
			coalesce(ie_recomendacao,'N'),
			coalesce(ie_hemoterapia,'N'),
			coalesce(ie_gasoterapia,'N'),
			coalesce(ie_jejum,'N'),
			coalesce(ie_leite,'N'),
			coalesce(ie_suplemento,'N'),
			coalesce(ie_opm,'N'),
			coalesce(ie_materiais,'N'),
			coalesce(ie_npt,'N')
	from	rep_regra_setor_lib_rep
	where (coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) is null or coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) = coalesce(cd_setor_atendimento_p,0))
	and		((coalesce(ie_dieta,'N') 		= 'N'	and
			  coalesce(ie_recomendacao,'N') 	= 'N'	and
			  coalesce(ie_hemoterapia,'N')	= 'N'	and
			  coalesce(ie_gasoterapia,'N')	= 'N'	and
			  coalesce(ie_suplemento,'N') 	= 'N'	and
			  coalesce(ie_jejum,'N') 		= 'N'	and
			  coalesce(ie_leite,'N') 		= 'N'	and
			  coalesce(ie_opm,'N') 		= 'N'	and
			  coalesce(ie_npt,'N')		= 'N')	or (qt_soma_bloqueados_w 						 +
			  CASE WHEN coalesce(ie_dieta,'N')	 ='S' THEN  0  ELSE qt_prescr_dieta_w END  	 +
			  CASE WHEN coalesce(ie_recomendacao,'N')='S' THEN  0  ELSE qt_prescr_rec_w END  	 +
			  CASE WHEN coalesce(ie_suplemento,'N')  ='S' THEN  0  ELSE qt_prescr_supl_w END  	 +
			  CASE WHEN coalesce(ie_opm,'N')	 ='S' THEN  0  ELSE qt_opm_w END  		 +
			  CASE WHEN coalesce(ie_hemoterapia,'N') ='S' THEN  0  ELSE qt_prescr_solic_bco_w END  +
			  CASE WHEN coalesce(ie_gasoterapia,'N') ='S' THEN  0  ELSE qt_prescr_gas_w END  	 +
			  CASE WHEN coalesce(ie_materiais,'N')   ='S' THEN  0  ELSE qt_prescr_material_w END   +
			  CASE WHEN coalesce(ie_jejum,'N')	 ='S' THEN  0  ELSE qt_rep_jejum_w END  	 +
			  CASE WHEN coalesce(ie_leite, 'N')	 ='S' THEN  0  ELSE qt_nr_seq_leite_deriv_w END  +
			  CASE WHEN coalesce(ie_npt, 'N')	 ='S' THEN  0  ELSE qt_nut_pac_w+qt_nut_paciente_w END  = 0))
	order by coalesce(cd_setor_atendimento,99999) desc;

BEGIN

ie_libera_se_proced_w := Obter_Param_Usuario(924, 586, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_libera_se_proced_w);

qt_prescr_mat_w := 0;
/* vhkrausser  - Prescr_material é lida com regra diferenciada....
select	count(*)
into	qt_prescr_mat_w
from 	prescr_material
where	nr_prescricao = nr_prescricao_p;*/
select	count(*)
into STRICT	qt_prescr_proc_w
from 	prescr_procedimento
where	nr_prescricao = nr_prescricao_p
and	coalesce(nr_seq_solic_sangue::text, '') = '';

select	count(*)
into STRICT	qt_prescr_solucao_w
from 	prescr_solucao
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_prescr_rec_w
from 	prescr_recomendacao
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_prescr_supl_w
from 	prescr_material
where	nr_prescricao = nr_prescricao_p
and		ie_agrupador in (8,12)
and		coalesce(nr_seq_kit::text, '') = '';

select	count(*)
into STRICT	qt_prescr_material_w
from 	prescr_material
where	nr_prescricao 	= nr_prescricao_p
and	ie_agrupador 	= 2;

select	sum(qt_itens)
into STRICT	qt_opm_w
from (
SELECT count(*) qt_itens
from	PRESCR_OPME
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_PROTESE_MS
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_PROTESE_MI
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_ORTESE_MS
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_ORTESE_MI
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_MEIO_LOCOMOCAO
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_COMPL_OPM
where	nr_prescricao = nr_prescricao_p

union

select count(*) qt_itens
from	PRESCR_ORTESE_COLUNA
where	nr_prescricao = nr_prescricao_p) alias9;

select	count(*)
into STRICT	qt_prescr_dieta_w
from 	prescr_dieta
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_rep_jejum_w
from 	rep_jejum
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_nut_paciente_w
from 	nut_paciente
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_nut_pac_w
from 	nut_pac
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_prescr_solic_bco_w
from 	prescr_solic_bco_sangue
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_prescr_gas_w
from 	prescr_gasoterapia
where	nr_prescricao = nr_prescricao_p;

Select 	count(*)
into STRICT	qt_nr_seq_leite_deriv_w
from	prescr_leite_deriv
where	nr_prescricao = nr_prescricao_p;

if (ie_libera_se_proced_w	<> 'N') then

	select  count(*)
	into STRICT	qt_exame_w
	from    prescr_procedimento m
	where   m.nr_prescricao = nr_prescricao_p
	and	(m.nr_seq_exame IS NOT NULL AND m.nr_seq_exame::text <> '')
	and	coalesce(m.nr_seq_solic_sangue::text, '') = '';

	select  count(*)
	into STRICT	qt_material_w
	from    prescr_material m
	where   m.nr_prescricao = nr_prescricao_p
	and	ie_agrupador in (1,4,5);

	select  count(nr_sequencia)
	into STRICT	qt_recomendacao_w
	from    prescr_recomendacao m
	where   m.nr_prescricao = nr_prescricao_p;

	select  count(*)
	into STRICT	qt_proced_w
	from    prescr_procedimento m
	where   m.nr_prescricao = nr_prescricao_p
	and	coalesce(m.nr_seq_exame::text, '') = ''
	and	coalesce(m.nr_seq_solic_sangue::text, '') = '';

	ie_medico_Lib_proc_w	:= 'N';
	if (qt_material_w = 0) and (qt_recomendacao_w = 0) then
		if (ie_libera_se_proced_w = 'S') and (qt_exame_w = 0) and (qt_proced_w	> 0) THEN
			ie_medico_Lib_proc_w := 'S';
		elsif (ie_libera_se_proced_w = 'A') and
			((qt_exame_w > 0) or (qt_proced_w	> 0)) THEN
			ie_medico_Lib_proc_w := 'S';
		elsif (ie_libera_se_proced_w = 'R') then
			select	coalesce(max(Obter_se_lib_tudo_proced(nr_prescricao_p)),'N')
			into STRICT	ie_medico_Lib_proc_w
			;
		end if;
	end if;
	if (ie_medico_Lib_proc_w = 'S') then
		qt_prescr_proc_w := 0;
	end if;
end if;

-- Soma todos os itens não tratandos na regra, se > 0 e algum campo de restrição = 'S' entao a regra é excluida!
qt_soma_bloqueados_w := qt_prescr_mat_w + qt_prescr_solucao_w;

if (Obter_se_lib_tudo_proced(nr_prescricao_p) = 'N')then
	qt_soma_bloqueados_w := qt_soma_bloqueados_w + qt_prescr_proc_w;
end if;

open C01;
loop
fetch C01 into
	ie_permite_ww,
	nr_seq_regra_w,
	ie_dieta_w,
	ie_recomendacao_w,
	ie_hemoterapia_w,
	ie_gasoterapia_w,
	ie_jejum_w,
	ie_leite_deriv_w,
	ie_suplemento_w,
	ie_opm_w,
	ie_material_W,
	ie_npt_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	Select	count(*)
	into STRICT	qt_reg_mat_regra_w
	from	rep_material_lib_rep b
	where	b.nr_seq_regra = nr_seq_regra_w;

	Select 	count(*)
	into STRICT	qt_prescr_mat_w
	from	prescr_material a
	where	a.nr_prescricao = nr_prescricao_p
	and 	a.ie_agrupador	not in (16, 17, 8, 12, 2)
	and (not exists (SELECT 1
				from	rep_material_lib_rep b
				where	b.nr_seq_regra = nr_seq_regra_w
				and	a.cd_material = coalesce(b.cd_material,a.cd_material)
				and 	Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material,	Obter_estrutura_material(a.cd_material,'G'))
				and 	Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material,	obter_estrutura_material(a.cd_material,'S'))
				and 	Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material,	Obter_estrutura_material(a.cd_material,'C')))
	or (qt_reg_mat_regra_w = 0));


	if (qt_prescr_mat_w = 0) or
		((ie_dieta_w		= 'N') and (ie_recomendacao_w	= 'N') and (ie_hemoterapia_w	= 'N') and (ie_gasoterapia_w	= 'N') and (ie_jejum_w		= 'N') and (ie_leite_deriv_w	= 'N') and (ie_material_w		= 'N') and (ie_suplemento_w	= 'N') and (ie_opm_w		= 'N') and (ie_npt_w		= 'N')) then
		ie_permite_w := ie_permite_ww;
	end if;

	end;
end loop;
close C01;

return	ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_medico_lib_tudo ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

