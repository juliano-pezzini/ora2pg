-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_item_fora_period_int ( nr_seq_conta_p bigint, nr_seq_item_p bigint, ie_tipo_item_p bigint) RETURNS varchar AS $body$
DECLARE


dt_item_w		timestamp;
dt_inicio_w		timestamp;
dt_final_w		timestamp;
hr_inicio_w		timestamp;
hr_fim_w		timestamp;
ie_tipo_guia_w		varchar(2);
ie_retorno_w		varchar(1) := 'S';
cd_guia_referencia_w	varchar(20);
nr_seq_conta_w		bigint;
nr_seq_segurado_w	bigint;
qt_registros_w		bigint;


BEGIN

nr_seq_conta_w := nr_seq_conta_p;


/*Obtido os dados da conta*/

select	ie_tipo_guia,
	cd_guia_referencia,
	nr_seq_segurado
into STRICT	ie_tipo_guia_w,
	cd_guia_referencia_w,
	nr_seq_segurado_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_p;

if (ie_tipo_item_p = 3) then
	select	dt_procedimento,
		dt_inicio_proc,
		dt_fim_proc
	into STRICT	dt_item_w,
		hr_inicio_w,
		hr_fim_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_item_p;
elsif (ie_tipo_item_p = 4) then
	select	dt_atendimento,
		dt_inicio_atend,
		dt_fim_atend
	into STRICT	dt_item_w,
		hr_inicio_w,
		hr_fim_w
	from	pls_conta_mat
	where	nr_sequencia = nr_seq_item_p;
end if;

if (ie_tipo_guia_w in ('4', '6')) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_conta_w
	from	pls_conta
	where	ie_tipo_guia = '5'
	and	cd_guia_referencia = cd_guia_referencia_w
	and	nr_seq_segurado	   = nr_seq_segurado_w;
end if;

/*O campo data de procedimento Ã© segmentado para isso sereve este tratamento*/

if (dt_item_w IS NOT NULL AND dt_item_w::text <> '') then
	dt_inicio_w := to_date(to_char(dt_item_w,'dd/mm/yyyy'));
	dt_final_w := to_date(to_char(dt_item_w,'dd/mm/yyyy'));
end if;

begin
if (hr_inicio_w IS NOT NULL AND hr_inicio_w::text <> '') then
	dt_inicio_w	:= to_date(to_char(dt_inicio_w,'dd/mm/yyyy') ||' '||to_char(hr_inicio_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
else
	dt_inicio_w	:= to_date(to_char(dt_inicio_w,'dd/mm/yyyy') ||' '||'00:00:00','dd/mm/yyyy hh24:mi:ss');
end if;
exception
when others then
	dt_inicio_w	:= null;
end;

begin
if (hr_fim_w IS NOT NULL AND hr_fim_w::text <> '') then
	dt_final_w	:= to_date(to_char(dt_final_w,'dd/mm/yyyy') ||' '||to_char(hr_fim_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
else
	if (hr_inicio_w IS NOT NULL AND hr_inicio_w::text <> '') then
		dt_final_w	:= to_date(to_char(dt_final_w,'dd/mm/yyyy') ||' '||to_char(hr_inicio_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	else
		dt_final_w	:= to_date(to_char(dt_final_w,'dd/mm/yyyy') ||' '||'00:00:00','dd/mm/yyyy hh24:mi:ss');
	end if;
end if;
exception
when others then
	dt_final_w	:= null;
end;

if (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '') or (dt_final_w IS NOT NULL AND dt_final_w::text <> '') then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_w
	and	(((dt_inicio_w < dt_entrada or dt_final_w > dt_alta) AND hr_inicio_w IS NOT NULL AND hr_inicio_w::text <> '') or
		((not(trunc(dt_item_w) between trunc(dt_entrada) and trunc(dt_alta))) and (coalesce(hr_inicio_w::text, '') = '')));

	if (qt_registros_w = 0) then
		ie_retorno_w	:= 'S';
	else
		ie_retorno_w	:= 'N';
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_item_fora_period_int ( nr_seq_conta_p bigint, nr_seq_item_p bigint, ie_tipo_item_p bigint) FROM PUBLIC;

