-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION validar_perfil_paciente ( cd_pf_paciente_p pessoa_fisica.cd_pessoa_fisica%TYPE DEFAULT NULL, nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE DEFAULT NULL, nr_episodio_p atendimento_paciente.nr_seq_episodio%TYPE DEFAULT NULL) RETURNS PRIVACY_RULE.IE_ADD_LOG_MESSAGE%TYPE AS $body$
DECLARE


    nm_usuario_w                     usuario.nm_usuario%TYPE;
    cd_pf_usuario_w                  usuario.cd_pessoa_fisica%TYPE;
    cd_perfil_w                      perfil.cd_perfil%TYPE;
    cd_estabelecimento_w             usuario.cd_estabelecimento%TYPE;
    cd_setor_usuario_w               usuario.cd_setor_atendimento%TYPE;
    nr_seq_privacy_rule_w            bigint;
    nr_seq_rec_access_encounter_w    bigint;
    nr_seq_rec_access_med_record_w   bigint;
    ie_access_w                      varchar(2);
    ie_type_release_access_w         varchar(2);
    ds_msg_permission_w              varchar(1000);
    ie_require_justify_w             privacy_rule.ie_require_justify%TYPE;
    ie_require_reason_w              varchar(2);
    ie_require_second_user_w         privacy_rule.ie_require_second_user%TYPE;
    ie_permission_w                  varchar(2);
    ie_release_access_encounter_w    privacy_rule.ie_release_access_encounter%TYPE;
    ie_release_access_med_record_w   privacy_rule.ie_release_access_medical%TYPE;
    ds_rule_w                        privacy_rule.ds_rule%TYPE;
    ie_add_log_message_w             privacy_rule.ie_add_log_message%TYPE;
    ds_retorno_w                     varchar(1);
    ie_encounter_discharge_w         privacy_rule.ie_encounter_discharge%TYPE;
    ie_encounter_closed_account_w    privacy_rule.ie_encounter_closed_account%TYPE;
    ie_encounter_previous_w          privacy_rule.ie_encounter_previous%TYPE;
    ie_encounter_deceased_w          privacy_rule.ie_encounter_deceased%TYPE;
    dt_alta_w                        atendimento_paciente.dt_alta%TYPE;
    dt_obito_w                       pessoa_fisica.dt_obito%TYPE;
    ie_conta_fechada_w               atendimento_paciente.ie_fim_conta%TYPE;
    nr_adt_time_discharge_w          privacy_rule.nr_adt_time_discharge%TYPE;
    ie_existe_setor_ant_w            varchar(2);
    nr_seq_perfil_w                  pessoa_fisica.nr_seq_perfil%TYPE;
    nr_seq_episodio_w                atendimento_paciente.nr_seq_episodio%TYPE;
    nr_seq_episodio_ww               atendimento_paciente.nr_seq_episodio%TYPE;
    nr_last_encounter_w              atendimento_paciente.nr_atendimento%TYPE;
    ie_exist_profile_rule_w          privacy_rule.ie_situacao%TYPE;
    ie_count_encounters_w            privacy_rule.nr_seq_message%TYPE;
    ie_default_action_w              privacy_establishment.ie_default_action%TYPE;
    ie_default_action_ww             privacy.ie_default_action%TYPE;
    peu_nr_seq_privacy_rule_w        privacy_rule.ie_situacao%TYPE;
    pet_nr_seq_privacy_rule_w        privacy_rule.ie_situacao%TYPE;
    ped_nr_seq_privacy_rule_w        privacy_rule.ie_situacao%TYPE;
    pep_nr_seq_privacy_rule_w        privacy_rule.ie_situacao%TYPE;

BEGIN

/*Search user information*/

    nm_usuario_w := wheb_usuario_pck.get_nm_usuario;
    cd_pf_usuario_w := obter_cod_pf_usuario(nm_usuario_w);
    cd_perfil_w := wheb_usuario_pck.get_cd_perfil;
    cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
    cd_setor_usuario_w := wheb_usuario_pck.get_cd_setor_atendimento;

/*Run the access rules validation procedure*/

    SELECT * FROM validate_access_rules(
        nm_usuario_w, cd_pf_usuario_w, cd_perfil_w, cd_estabelecimento_w, cd_setor_usuario_w, nr_atendimento_p, cd_pf_paciente_p, clock_timestamp(), nr_seq_privacy_rule_w, nr_seq_rec_access_encounter_w, nr_seq_rec_access_med_record_w, ie_access_w, ie_type_release_access_w, ds_msg_permission_w, ie_require_justify_w, ie_require_reason_w, ie_require_second_user_w, ie_permission_w, ie_release_access_encounter_w, ie_release_access_med_record_w, ds_rule_w, ie_add_log_message_w) INTO STRICT nr_seq_privacy_rule_w, nr_seq_rec_access_encounter_w, nr_seq_rec_access_med_record_w, ie_access_w, ie_type_release_access_w, ds_msg_permission_w, ie_require_justify_w, ie_require_reason_w, ie_require_second_user_w, ie_permission_w, ie_release_access_encounter_w, ie_release_access_med_record_w, ds_rule_w, ie_add_log_message_w
;

/*Search the access rule information*/

        IF (nr_seq_privacy_rule_w IS NOT NULL AND nr_seq_privacy_rule_w::text <> '') THEN

            SELECT
                CASE WHEN coalesce(MAX(peu.nr_seq_privacy_rule)::text, '') = '' THEN  'N'  ELSE 'Y' END ,
                CASE WHEN coalesce(MAX(pet.nr_seq_privacy_rule)::text, '') = '' THEN  'N'  ELSE 'Y' END ,
                CASE WHEN coalesce(MAX(ped.nr_seq_privacy_rule)::text, '') = '' THEN  'N'  ELSE 'Y' END ,
                CASE WHEN coalesce(MAX(pep.nr_seq_privacy_rule)::text, '') = '' THEN  'N'  ELSE 'Y' END
            INTO STRICT 
                peu_nr_seq_privacy_rule_w,
                pet_nr_seq_privacy_rule_w,
                ped_nr_seq_privacy_rule_w,
                pep_nr_seq_privacy_rule_w
            FROM
                privacy_rule pr
                LEFT JOIN privacy_estab_usergroup    peu ON peu.nr_seq_privacy_rule = pr.nr_sequencia AND peu.cd_estabelecimento = cd_estabelecimento_w
                LEFT JOIN privacy_estab_team         pet ON pet.nr_seq_privacy_rule = pr.nr_sequencia AND pet.cd_estabelecimento = cd_estabelecimento_w
                LEFT JOIN privacy_estab_department   ped ON ped.nr_seq_privacy_rule = pr.nr_sequencia AND ped.cd_estabelecimento = cd_estabelecimento_w
                LEFT JOIN privacy_estab_profile      pep ON pep.nr_seq_privacy_rule = pr.nr_sequencia AND pep.cd_estabelecimento = cd_estabelecimento_w
            WHERE
                pr.ie_situacao = 'A'
                AND pr.nr_sequencia = nr_seq_privacy_rule_w;

            IF ( peu_nr_seq_privacy_rule_w = 'Y' ) 
                OR ( pet_nr_seq_privacy_rule_w = 'Y' ) 
                OR ( ped_nr_seq_privacy_rule_w = 'Y' ) 
                OR ( pep_nr_seq_privacy_rule_w = 'Y' ) THEN

                SELECT
                MAX(nr_seq_perfil)
                INTO STRICT nr_seq_perfil_w
                FROM
                    pessoa_fisica
                WHERE
                    cd_pessoa_fisica = cd_pf_paciente_p;

            IF (nr_seq_perfil_w IS NOT NULL AND nr_seq_perfil_w::text <> '') THEN

                SELECT
                    CASE WHEN coalesce(MAX(nr_sequencia)::text, '') = '' THEN  'N'  ELSE 'Y' END 
                INTO STRICT ie_exist_profile_rule_w
                FROM
                    privacy_rule_patient_profi
                WHERE
                    nr_seq_patient_profile = nr_seq_perfil_w
                    AND nr_seq_privacy_rule = nr_seq_privacy_rule_w;

                IF ( ie_exist_profile_rule_w = 'Y' ) THEN
                    SELECT
                        MAX(a.nr_atendimento)
                    INTO STRICT ie_count_encounters_w
                    FROM
                        atendimento_paciente   a,
                        pessoa_fisica          b
                    WHERE
                        a.cd_pessoa_fisica = cd_pf_paciente_p
                        AND b.cd_pessoa_fisica = a.cd_pessoa_fisica;

                    IF ( coalesce(ie_count_encounters_w::text, '') = '' ) THEN

                        SELECT
                            MAX(p.ie_default_action),
                            MAX(pe.ie_default_action)
                        INTO STRICT ie_default_action_w, 
                            ie_default_action_ww 
                        FROM
                            privacy                 p,
                            privacy_establishment   pe
                        WHERE
                            pe.nr_seq_privacy = p.nr_sequencia
                            AND p.ie_situacao = 'A'
                            AND p.ds_locale = obtain_user_locale(nm_usuario_w)
                            AND pe.cd_estabelecimento = cd_estabelecimento_w;

                        IF ( ie_default_action_w = 'B' ) OR ( ie_default_action_ww = 'B' ) THEN
                            ie_access_w := 'N';
                        END IF;

                    ELSE
                        SELECT
                            MAX(ie_encounter_discharge),
                            MAX(ie_encounter_closed_account),
                            MAX(ie_encounter_previous),
                            MAX(ie_encounter_deceased)
                        INTO STRICT
                            ie_encounter_discharge_w,
                            ie_encounter_closed_account_w,
                            ie_encounter_previous_w,
                            ie_encounter_deceased_w
                        FROM
                            privacy_rule
                        WHERE
                            nr_sequencia = nr_seq_privacy_rule_w;

                        IF ( ie_encounter_discharge_w = 'N' ) 
                            AND ( ie_encounter_closed_account_w = 'N' ) 
                            AND ( ie_encounter_previous_w = 'N' ) 
                            AND ( ie_encounter_deceased_w = 'N' ) 
                            AND (ie_release_access_encounter_w = 'N') 
                            AND (ie_release_access_med_record_w = 'N') THEN
                            ie_access_w := 'N';

                        ELSE

                            SELECT
                                MAX(a.dt_alta),
                                MAX(b.dt_obito),
                                CASE WHEN coalesce(MAX(a.dt_fim_conta)::text, '') = '' THEN  'N'  ELSE 'Y' END 
                            INTO STRICT
                                dt_alta_w,
                                dt_obito_w,
                                ie_conta_fechada_w
                            FROM
                                atendimento_paciente   a,
                                pessoa_fisica          b
                            WHERE
                                a.cd_pessoa_fisica = cd_pf_paciente_p
                                AND b.cd_pessoa_fisica = a.cd_pessoa_fisica;


                            IF (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') AND ( ie_encounter_discharge_w = 'N' ) THEN
                                IF (nr_adt_time_discharge_w IS NOT NULL AND nr_adt_time_discharge_w::text <> '') THEN
                                    IF ( clock_timestamp() > dt_alta_w + ( nr_adt_time_discharge_w / 24 ) ) THEN
                                        ie_access_w := 'N';
                                    END IF;
                                ELSE
                                    ie_access_w := 'N';
                                END IF;                            END IF;

                            IF (dt_obito_w IS NOT NULL AND dt_obito_w::text <> '') AND ( ie_encounter_deceased_w = 'N' ) THEN
                                ie_access_w := 'N';
                            END IF;

                            IF ( ie_conta_fechada_w = 'Y' ) AND ( ie_encounter_closed_account_w = 'N' ) THEN
                                ie_access_w := 'N';
                            END IF;

                            /*validate encounter*/

                            IF ( ie_encounter_previous_w = 'N' ) THEN
                                SELECT
                                    MAX(ep.nr_sequencia)
                                INTO STRICT nr_seq_episodio_ww
                                FROM
                                    episodio_paciente        ep
                                    INNER JOIN atendimento_paciente     ap ON ep.nr_sequencia = ap.nr_seq_episodio
                                    LEFT JOIN pessoa_fisica            pf ON ep.cd_pessoa_fisica = pf.cd_pessoa_fisica
                                    LEFT JOIN atend_paciente_unidade   au ON ap.nr_atendimento = au.nr_atendimento
                                WHERE
                                    1 = 1
                                    AND coalesce(au.cd_departamento, 0) = coalesce(obter_ultimo_depto_medico(ap.nr_atendimento), 0)
                                    AND coalesce(ap.nr_atendimento, 0) = coalesce((
                                        SELECT
                                            MAX(b.nr_atendimento)
                                        FROM
                                            atendimento_paciente b
                                        WHERE
                                            b.nr_seq_episodio = ep.nr_sequencia
                                    ), 0)
                                    AND ep.cd_pessoa_fisica = cd_pf_paciente_p
                                    AND patient_already_deleted(pf.cd_pessoa_fisica) = 'N'
                                    AND obter_se_acesso_paciente_lib(pf.cd_pessoa_fisica) = 'S'
                                    AND coalesce(ep.dt_fim_episodio::text, '') = '';

                                IF (nr_episodio_p IS NOT NULL AND nr_episodio_p::text <> '') THEN
                                    IF ( nr_seq_episodio_ww <> nr_episodio_p ) THEN
                                        ie_access_w := 'N';
                                    END IF;
                                ELSE
                                    SELECT
                                        MAX(nr_seq_episodio)
                                    INTO STRICT nr_seq_episodio_w
                                    FROM
                                        atendimento_paciente
                                    WHERE
                                        nr_atendimento = nr_atendimento_p;

                                    IF (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') THEN
                                        IF ( nr_seq_episodio_w <> nr_seq_episodio_ww ) THEN
                                            ie_access_w := 'N';
                                        END IF;
                                    ELSE
                                        SELECT
                                            MAX(nr_atendimento)
                                        INTO STRICT nr_last_encounter_w
                                        FROM
                                            atendimento_paciente
                                        WHERE
                                            cd_pessoa_fisica = cd_pf_paciente_p;

                                        IF ( nr_last_encounter_w <> nr_atendimento_p ) THEN
                                            ie_access_w := 'N';
                                        END IF;
                                    END IF;

                                END IF;

                            END IF;

                        END IF;

                    END IF;

                ELSE
                    ie_access_w := 'Y';
                END IF;

            END IF;

            END IF;

        END IF;

/*User Access Denied N = (Not)*/

/*User access allowed Y = (Yes)*/

    IF ( ie_access_w = 'Y' ) THEN
        ds_retorno_w := 'S';
    ELSE
        ds_retorno_w := 'N';
    END IF;

    RETURN ds_retorno_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION validar_perfil_paciente ( cd_pf_paciente_p pessoa_fisica.cd_pessoa_fisica%TYPE DEFAULT NULL, nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE DEFAULT NULL, nr_episodio_p atendimento_paciente.nr_seq_episodio%TYPE DEFAULT NULL) FROM PUBLIC;

