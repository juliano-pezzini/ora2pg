-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_se_estagio_aut_valido ( nr_seq_guia_p bigint, nr_seq_estagio_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se o estágio da guia que está sendo alterado é compatível com o dos itens
Sempre tem que atualizar o estágio dos itens primeiro
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_item_invalido_w	bigint;
ie_retorno_w		varchar(1)	:= 'S';

/* Domínio estágio da autorização
2055 - IE_ESTAGIO*/
/* Domínio estágio do item da autorização
1832 - IE_STATUS*/
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	/* 1
	Se o estágio novo da autorização for "Em auditoria" todos os itens da guia
	devem estar com os seguintes estágios(Aguardando autorização intercâmbio,Auditoria médica,Liberado pelo sistema,Negado pelo sistema) */
	if (nr_seq_estagio_p = 1) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia 		= nr_seq_guia_p
			and	a.ie_status 		not in ('I','A','S','N')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia 		= nr_seq_guia_p
			and	a.ie_status 		not in ('I','A','S','N')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias9;
	/* 4
	Se o estágio da autorização for mudado para "Negado" todos os itens da guia
	devem estar com status negado (Negado pelo auditor, Negado pelo sistema, Negado pelo usuário) */
	elsif (nr_seq_estagio_p = 4) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('M','N','K','S','P','L')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('M','N','K','S','P','L')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 5
	Se o novo estágio da autorização for "Autorizado com glosa",
	não pode haver itens com estágio (Usuário (aguardando ação), Cancelado, Aguardando autorização intercâmbio, Auditoria médica) */
	elsif (nr_seq_estagio_p = 5) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status in ('U','D','I','A')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status in ('U','D','I','A')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 6
	Se o novo estágio da autorização for "Autorizado sem glosa" todos os itens da guia
	devem estar com estágios (Liberado pelo auditor. Liberado pelo sistema, Liberado pelo usuário) */
	elsif (nr_seq_estagio_p = 6) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('P','S','L')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('P','S','L')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 7
	Se o estágio da autorização for mudado para "Usuário (aguardando ação)" todos os
	itens da guia tem que estar com este estágio */
	elsif (nr_seq_estagio_p = 7) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('U')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('U')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 8
	Se o estágio da autorização for mudado para "Cancelado" todos os itens da guia
	devem estar cancelados também*/
	elsif (nr_seq_estagio_p = 8) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('D')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('D')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 9
	Se o novo estágio da autorização for "Aguardando autorização do contratante",  não podem haver itens com estágio
	(Auditoria médica, Cancelado, Usuário (aguardando ação))*/
	elsif (nr_seq_estagio_p = 9) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status in ('A','D','U')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status in ('A','D','U')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 10
	Se o novo estágio da autorização for "Autorizado parcialmente" deve haver itens
	com estágios (Liberado pelo auditor,Liberado pelo sistema,Liberado pelo usuário)
	e com estágio (Negado pelo auditor, Negado pelo sistema, Negado pelo usuário) ou que a quantidade solicitada x autorizada seja dif)*/
	elsif (nr_seq_estagio_p = 10) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('P','S','L','M','N','K')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('P','S','L','M','N','K')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 11
	Se o novo estágio da autorização for "Auditoria intercâmbio", todos os itens
	da guia devem estar com estágio (Auditoria médica) */
	elsif (nr_seq_estagio_p = 11) then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('A','K','M','N','D')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('A','K','M','N','D')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias8;
	/* 12
	Se o novo estágio da autorização for "Aguardando autorização intercâmbio", todos os itens devem
	estar com estágio (Aguardando autorização intercâmbio) */
	elsif (nr_seq_estagio_p = 12) and (pls_obter_se_scs_ativo	= 'A') then
		select	sum(qt_registro)
		into STRICT	qt_item_invalido_w
		from (SELECT	count(1) qt_registro
			from	pls_guia_plano_proc a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('I','N','M','K')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			
union all

			SELECT	count(1) qt_registro
			from	pls_guia_plano_mat a
			where	a.nr_seq_guia = nr_seq_guia_p
			and	a.ie_status not in ('I','N','M','K')
			and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
			) alias9;
	end if;
end if;

if (qt_item_invalido_w > 0) then
	ie_retorno_w	:= 'N';
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_se_estagio_aut_valido ( nr_seq_guia_p bigint, nr_seq_estagio_p bigint) FROM PUBLIC;

