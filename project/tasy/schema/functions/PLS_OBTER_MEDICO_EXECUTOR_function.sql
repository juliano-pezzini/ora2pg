-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_medico_executor ( nr_seq_item_p pls_conta_proc.nr_sequencia%type, ie_mat_proc_p text) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter o código do médico executor da conta.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		pls_conta.cd_medico_executor%type;
cd_medico_executor_w	pls_conta.cd_medico_executor%type;
nr_seq_conta_w		pls_conta.nr_sequencia%type;


BEGIN
--Busca o sequencial da conta do item
select	max(nr_seq_conta)
into STRICT	nr_seq_conta_w
from (
	SELECT	nr_seq_conta
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_item_p
	and	ie_mat_proc_p = 'P'
	
union all

	SELECT	nr_seq_conta
	from	pls_conta_mat
	where	nr_sequencia = nr_seq_item_p
	and	ie_mat_proc_p = 'M') alias1;

--Verifica se na conta possui médico executor
select	max(cd_medico_executor)
into STRICT	cd_medico_executor_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

--Caso sim, retorna o mesmo.
if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
	ds_retorno_w := cd_medico_executor_w;
--Caso não, irá procurar pelos participantes
elsif (coalesce(cd_medico_executor_w::text, '') = '') then
	--Procedimento
	if (ie_mat_proc_p = 'P') then
		--Irá verificar primeiramente por participantes do tipo cirurgião
		select	max(cd_medico)
		into STRICT	cd_medico_executor_w
		from	pls_proc_participante a
		where	nr_seq_conta_proc = nr_seq_item_p
		and	exists (	SELECT	1
				from	pls_grau_participacao b
				where	b.nr_sequencia = a.nr_seq_grau_partic
				and	cd_tiss = '00');
		--Caso não possua cirurgião, irá procurar por anestesista
		if (coalesce(cd_medico_executor_w::text, '') = '') then
			select	max(cd_medico)
			into STRICT	cd_medico_executor_w
			from	pls_proc_participante a
			where	nr_seq_conta_proc = nr_seq_item_p
			and	exists (	SELECT	1
					from	pls_grau_participacao b
					where	b.nr_sequencia = a.nr_seq_grau_partic
					and	cd_tiss = '06');
		end if;
		--Caso não encontre anestesista, irá procurar por primeiro auxiliar
		if (coalesce(cd_medico_executor_w::text, '') = '') then
			select	max(cd_medico)
			into STRICT	cd_medico_executor_w
			from	pls_proc_participante a
			where	nr_seq_conta_proc = nr_seq_item_p
			and	exists (	SELECT	1
					from	pls_grau_participacao b
					where	b.nr_sequencia = a.nr_seq_grau_partic
					and	cd_tiss = '01');
		end if;
		--Caso não encontre primeiro auxiliar, irá pegar o maior código (tratativa atual)
		if (coalesce(cd_medico_executor_w::text, '') = '') then
			select	max(cd_medico)
			into STRICT	cd_medico_executor_w
			from	pls_proc_participante a
			where	nr_seq_conta_proc = nr_seq_item_p;
		end if;
		--Irá retornar o código do médico, mesmo que este seja nulo.
		ds_retorno_w := cd_medico_executor_w;
	else
		--Caso não seja procedimento, irá retornar nulo, pois no caso de materiais
		--não temos como identificar qual o médico executor que utilizou o material,
		--desta forma, para materiais, deve-se cadastrar regra de ato cooperado
		--restringindo pelo prestador pagador do item, assim podendo gerar as informações
		--do ato cooperado com mais integridade.
		ds_retorno_w := null;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_medico_executor ( nr_seq_item_p pls_conta_proc.nr_sequencia%type, ie_mat_proc_p text) FROM PUBLIC;

