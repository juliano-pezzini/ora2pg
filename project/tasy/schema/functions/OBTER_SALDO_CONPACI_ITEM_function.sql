-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_saldo_conpaci_item (nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint, nr_seq_proc_partic_p bigint default null, ie_proc_partic_p text default 'N') RETURNS bigint AS $body$
DECLARE


vl_retorno_w		double precision;
vl_lote_auditoria_w	double precision;
vl_item_w		double precision;
vl_saldo_w		double precision;
vl_participante_w	double precision;
vl_medico_w		double precision;
nr_interno_conta_w	bigint;
qt_glosa_conta_w	bigint;
nr_doc_convenio_w	varchar(20);
cd_medico_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_considerar_repasse_w varchar(1);


function	obter_qt_guia_ret_glosa(nr_interno_conta_p bigint,
					nr_doc_convenio_p text) return bigint is
					
qt_conv_ret_glosa_w	integer;

BEGIN

select 	count(*)
into STRICT	qt_conv_ret_glosa_w
from	convenio_retorno_glosa a,
	convenio_retorno_item b
where	a.nr_seq_ret_item = b.nr_sequencia
and	b.nr_interno_conta = nr_interno_conta_w
and	UPPER(coalesce(b.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)));

if (qt_conv_ret_glosa_w = 0 and coalesce(ie_considerar_repasse_w,'N') = 'S') then
  select 	count(*)
  into STRICT	qt_conv_ret_glosa_w
  from	convenio_retorno_item b
  where	b.nr_interno_conta = nr_interno_conta_w
  and		upper(coalesce(b.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)));			
end if;

return qt_conv_ret_glosa_w;
end;
					
BEGIN

ie_considerar_repasse_w := obter_param_usuario(69, 84, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_considerar_repasse_w);
if	(nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then

	select	max(b.vl_participante),
		max(a.nr_interno_conta),
		max(a.nr_doc_convenio)
	into STRICT	vl_item_w,
		nr_interno_conta_w,
		nr_doc_convenio_w
	from	procedimento_paciente a,
		procedimento_participante b
	where	a.nr_sequencia		= nr_seq_propaci_p
	and	b.nr_sequencia		= a.nr_sequencia
	and 	b.nr_seq_partic 	= nr_seq_proc_partic_p;
	


	qt_glosa_conta_w := 0;
	if (obter_qt_guia_ret_glosa(nr_interno_conta_w,nr_doc_convenio_w) > 0) then
	
		select	count(*)
		into STRICT	qt_glosa_conta_w
		from	convenio_retorno b,
			convenio_retorno_item a
		where	not exists (SELECT	1
			from	convenio_retorno x
			where	x.nr_seq_ret_estorno	= b.nr_sequencia)
		and	coalesce(b.nr_seq_ret_estorno::text, '') = ''
		and	b.ie_status_retorno	= 'F'
		and	a.nr_seq_retorno	= b.nr_sequencia
		and	not exists (select	1
			from	convenio_retorno_glosa x
			where	x.nr_seq_propaci	= nr_seq_propaci_p
			and	x.nr_seq_ret_item	= a.nr_sequencia
			and	x.nr_seq_partic 	= nr_seq_proc_partic_p)		
		and	UPPER(coalesce(a.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)))
		and	a.vl_pago		> 0
		and	a.nr_interno_conta	= nr_interno_conta_w;
	
	end if;
	
	if (qt_glosa_conta_w > 0) then
		vl_saldo_w	:= 0;		
	else

		select	coalesce(sum(CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa  ELSE 0 END ),0) + coalesce(sum((obter_dados_ret_movto_glosa(a.nr_sequencia,3))::numeric ),0)
		into STRICT	vl_retorno_w
		from	motivo_glosa b,
			convenio_retorno_glosa a
		where	a.nr_seq_propaci	=   nr_seq_propaci_p
		and 	a.nr_seq_partic		= nr_seq_proc_partic_p	
		and	a.cd_motivo_glosa	= b.cd_motivo_glosa;

		select	coalesce(sum(a.vl_glosa),0) + coalesce(sum(a.vl_pago),0)
		into STRICT	vl_lote_auditoria_w
		from	lote_audit_hist_item a
		where	a.nr_seq_propaci	= nr_seq_propaci_p
		and	a.nr_seq_partic		= nr_seq_proc_partic_p;

		vl_saldo_w	:= coalesce(vl_item_w,0) - coalesce(vl_retorno_w,0) - coalesce(vl_lote_auditoria_w,0);

	end if;	

elsif (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '') then

	begin
	select	a.vl_procedimento,
		a.nr_interno_conta,
		a.nr_doc_convenio,
		a.vl_medico + a.vl_custo_operacional + a.vl_materiais,
		a.cd_medico_executor,
		a.vl_medico
	into STRICT	vl_item_w,
		nr_interno_conta_w,
		nr_doc_convenio_w,
		vl_participante_w,
		cd_medico_w,
		vl_medico_w
	from	procedimento_paciente a
	where	a.nr_sequencia		= nr_seq_propaci_p;
	exception
	when others then
		vl_item_w := null;
		nr_interno_conta_w := null;
		nr_doc_convenio_w := null;
		vl_participante_w := null;
		cd_medico_w
:= null;
		vl_medico_w := null;
	end;
	
	if ie_proc_partic_p = 'S' and (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
		vl_item_w := vl_participante_w;
	elsif ie_proc_partic_p = 'T' then
		vl_item_w := vl_medico_w;
	end if;
	
	qt_glosa_conta_w := 0;
	if (obter_qt_guia_ret_glosa(nr_interno_conta_w,nr_doc_convenio_w) > 0) then
	
	
		if ie_proc_partic_p = 'N' then
			select	count(*)
			into STRICT	qt_glosa_conta_w
			from	convenio_retorno b,
				convenio_retorno_item a
			where	not exists (SELECT	1
				from	convenio_retorno x
				where	x.nr_seq_ret_estorno	= b.nr_sequencia)
			and	coalesce(b.nr_seq_ret_estorno::text, '') = ''
			and	b.ie_status_retorno	= 'F'
			and	a.nr_seq_retorno	= b.nr_sequencia
			and	not exists (select	1
				from	convenio_retorno_glosa x
				where	x.nr_seq_propaci	= nr_seq_propaci_p
				and	x.nr_seq_ret_item	= a.nr_sequencia)
			/*and	a.vl_amenor		<= 0*/

			and	UPPER(coalesce(a.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)))
			and	a.vl_pago		> 0
			and	a.nr_interno_conta	= nr_interno_conta_w;
		else
			select sum(qt)
			into STRICT
			qt_glosa_conta_w
			from (
				SELECT	count(*) qt
				from	convenio_retorno b,
					convenio_retorno_item a
				where	not exists (SELECT	1
					from	convenio_retorno x
					where	x.nr_seq_ret_estorno	= b.nr_sequencia)
				and	coalesce(b.nr_seq_ret_estorno::text, '') = ''
				and	b.ie_status_retorno	= 'F'
				and	a.nr_seq_retorno	= b.nr_sequencia
				and	not exists (select	1
					from	convenio_retorno_glosa x
					where	x.nr_seq_propaci	= nr_seq_propaci_p 
					and	x.nr_seq_ret_item	= a.nr_sequencia
					and	a.nr_interno_conta	= nr_interno_conta_w)
					and	UPPER(coalesce(a.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)))
					and	a.vl_pago		> 0
					and	a.nr_interno_conta	= nr_interno_conta_w
				
union all

				select	count(*) qt
				from	convenio_retorno b,
					convenio_retorno_item a
				where	not exists (select	1
					from	convenio_retorno x
					where	x.nr_seq_ret_estorno	= b.nr_sequencia)
					and	coalesce(b.nr_seq_ret_estorno::text, '') = ''
					and	b.ie_status_retorno	= 'F'
					and	a.nr_seq_retorno	= b.nr_sequencia
				and	not exists (select	1
					from	convenio_retorno_glosa x
					where	x.nr_seq_propaci	= nr_seq_propaci_p 
					and	x.nr_seq_ret_item	= a.nr_sequencia
					and	a.nr_interno_conta	= nr_interno_conta_w
					and 	coalesce(x.nr_seq_partic::text, '') = '')
				and	UPPER(coalesce(a.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)))
				and	a.vl_pago		> 0
				and	a.nr_interno_conta	= nr_interno_conta_w    ) alias22;
		end if;
	end if;
	
	/* ahoffelder - OS 346392 - 25/08/2011 - se existir um retorno com valor pago onde o item nao esta, significa que ele ja foi pago */

	if (qt_glosa_conta_w > 0) then

		vl_saldo_w	:= 0;

	/* senao, e necessario consultar os valores do item no retorno e na GRG */

	else

		select	coalesce(sum(CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa  ELSE 0 END ),0) + coalesce(sum((obter_dados_ret_movto_glosa(a.nr_sequencia,3))::numeric ),0)
		into STRICT	vl_retorno_w
		from	motivo_glosa b,
			convenio_retorno_glosa a
		where	a.nr_seq_propaci	= nr_seq_propaci_p
		and	a.cd_motivo_glosa	= b.cd_motivo_glosa;

		select	coalesce(sum(a.vl_glosa),0) + coalesce(sum(a.vl_pago),0)
		into STRICT	vl_lote_auditoria_w
		from	lote_audit_hist_item a
		where	a.nr_seq_propaci	= nr_seq_propaci_p;

		vl_saldo_w	:= coalesce(vl_item_w,0) - coalesce(vl_retorno_w,0) - coalesce(vl_lote_auditoria_w,0);

	end if;

elsif (nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') then

	select	max(a.vl_material),
		max(a.nr_interno_conta),
		max(a.nr_doc_convenio)
	into STRICT	vl_item_w,
		nr_interno_conta_w,
		nr_doc_convenio_w
	from	material_atend_paciente a
	where	a.nr_sequencia		= nr_seq_matpaci_p;
	
	qt_glosa_conta_w := 0;
	
	if (obter_qt_guia_ret_glosa(nr_interno_conta_w,nr_doc_convenio_w) > 0) then

		select	count(*)
		into STRICT	qt_glosa_conta_w
		from	convenio_retorno b,
			convenio_retorno_item a
		where	not exists (SELECT	1
			from	convenio_retorno x
			where	x.nr_seq_ret_estorno	= b.nr_sequencia)
		and	coalesce(b.nr_seq_ret_estorno::text, '') = ''
		and	b.ie_status_retorno	= 'F'
		and	a.nr_seq_retorno	= b.nr_sequencia
		and	not exists (select	1
			from	convenio_retorno_glosa x
			where	x.nr_seq_matpaci	= nr_seq_matpaci_p
			and	x.nr_seq_ret_item	= a.nr_sequencia)
		/*and	a.vl_amenor		<= 0*/

		and	a.vl_pago		> 0
		and	UPPER(coalesce(a.cd_autorizacao, Wheb_mensagem_pck.get_Texto(1028876)))	= UPPER(coalesce(nr_doc_convenio_w, Wheb_mensagem_pck.get_Texto(1028876)))
		and	a.nr_interno_conta	= nr_interno_conta_w;
	
	end if;

	/* ahoffelder - OS 346392 - 25/08/2011 - se existir um retorno com valor pago onde o item nao esta, significa que ele ja foi pago */

	if (qt_glosa_conta_w > 0) then

		vl_saldo_w	:=  0;

	/* senao, e necessario consultar os valores do item no retorno e na GRG */

	else

		select	coalesce(sum(CASE WHEN coalesce(a.ie_acao_glosa,b.ie_acao_glosa)='A' THEN a.vl_glosa  ELSE 0 END ),0) + coalesce(sum((obter_dados_ret_movto_glosa(a.nr_sequencia, 3))::numeric ),0)
		into STRICT	vl_retorno_w
		from	motivo_glosa b,
			convenio_retorno_glosa a
		where	a.nr_seq_matpaci	= nr_seq_matpaci_p
		and	a.cd_motivo_glosa   = b.cd_motivo_glosa;

		select	coalesce(sum(a.vl_glosa),0) + coalesce(sum(a.vl_pago),0)
		into STRICT	vl_lote_auditoria_w
		from	lote_audit_hist_item a
		where	a.nr_seq_matpaci	= nr_seq_matpaci_p;

		vl_saldo_w	:= coalesce(vl_item_w,0) - coalesce(vl_retorno_w,0) - coalesce(vl_lote_auditoria_w,0);
	end if;

end if;

RETURN	vl_saldo_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_conpaci_item (nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint, nr_seq_proc_partic_p bigint default null, ie_proc_partic_p text default 'N') FROM PUBLIC;

