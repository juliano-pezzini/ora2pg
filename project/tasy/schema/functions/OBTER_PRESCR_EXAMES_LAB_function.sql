-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prescr_exames_lab ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_material_p text, nr_seq_grupo_p bigint, ie_equipamento_p text, ie_opcao_p text, ie_separador_p text, dt_inicial_p timestamp, dt_final_p timestamp, dt_prev_execucao_p timestamp default null) RETURNS varchar AS $body$
DECLARE



ie_opcao_w				varchar(10);
ie_status_atend_w			varchar(2);
cd_procedimento_w			bigint;
nr_seq_exame_w				bigint;
nr_sequencia_w				integer;
cd_exame_w				varchar(20);
cd_exame_integracao_w			varchar(20);
Resultado_w	 			varchar(2000);
qt_linha_w				smallint := 0;
ie_gerar_w				varchar(1);
dt_aprovacao_w				timestamp;
nm_exame_w				varchar(80);
nr_seq_apresent_w			bigint;
cd_exame_integr_w			varchar(20);
nr_seq_mat_w				bigint;

c01 CURSOR FOR
	SELECT  distinct
		a.nr_sequencia,
		a.cd_procedimento,
		b.nr_seq_exame,
		b.cd_exame,
		coalesce(b.cd_exame_integracao, b.cd_exame),
		b.nm_exame,
		coalesce(e.nr_seq_apresent,0) nr_seq_apresent,
		b.cd_exame_integracao
	from	exame_lab_material d,
		grupo_exame_lab e,
		material_exame_lab c,
		exame_laboratorio b,
		prescr_procedimento a
	where a.nr_seq_exame		= b.nr_seq_exame

	  and a.nr_seq_exame		= d.nr_seq_exame
	  and d.nr_seq_material		= c.nr_sequencia
	  and e.nr_sequencia		= b.nr_seq_grupo
	  and a.nr_prescricao		= nr_prescricao_p
	  and coalesce(a.cd_setor_atendimento,0)	= coalesce(coalesce(cd_setor_atendimento_p, a.cd_setor_atendimento),0)
--	  and (a.cd_material_exame	= nvl(cd_material_p, a.cd_material_exame) or
	  and (Obter_Mat_Exame_Lab_prescr(a.nr_prescricao,a.nr_sequencia,1) =
coalesce(nr_seq_mat_w,Obter_Mat_Exame_Lab_prescr(a.nr_prescricao,a.nr_sequencia,1))	or (c.cd_material_exame	= cd_material_p and d.ie_prioridade = 888))
	  and b.nr_seq_grupo		= coalesce(nr_seq_grupo_p, b.nr_seq_grupo)
	  and coalesce(d.qt_coleta,1) 	>= (coalesce(ie_equipamento_p,'1'))::numeric
	  and a.ie_status_atend		= coalesce(ie_status_atend_w, a.ie_status_atend)
	  and ((coalesce(dt_prev_execucao_p::text, '') = '') or (a.dt_prev_execucao = dt_prev_execucao_p));


BEGIN

/* Opções
	CP	- Código Procedimento
	EX	- Exame
	CE	- Código Exame
	DE	- Descrição Exame
	CI	- Código Integração
	CI3	- Código Integração com 3 dígitos
	CI8	- Código Integração com 8 dígitos
	CEI	- Exames com codigo de integração
*/
ie_opcao_w := ie_opcao_p;

if (position(';' in ie_opcao_p) > 0) then
	ie_opcao_w		:= substr(ie_opcao_p,1, position(';' in ie_opcao_p) - 1);
	ie_status_atend_w	:= substr(ie_opcao_p,position(';' in ie_opcao_p) + 1,2);
end if;

select	max(nr_sequencia)
into STRICT 	nr_seq_mat_w
from	material_exame_lab
where	cd_material_exame = cd_material_p;


OPEN C01;
LOOP
FETCH C01 	into
		nr_sequencia_w,
		cd_procedimento_w,
		nr_seq_exame_w,
		cd_exame_w,
		cd_exame_integracao_w,
		nm_exame_w,
		nr_seq_apresent_w,
		cd_exame_integr_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

	begin
	ie_gerar_w := 'S';
	if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '' AND dt_final_p IS NOT NULL AND dt_final_p::text <> '')	then
		select coalesce(max(h.dt_aprovacao),null)
		into STRICT 	 dt_aprovacao_w
		from	 exame_lab_result_item h,
			 exame_lab_resultado i
		where	 i.nr_seq_resultado = h.nr_seq_resultado
		and	 (h.nr_seq_material IS NOT NULL AND h.nr_seq_material::text <> '')
		and 	 h.nr_seq_prescr = nr_sequencia_w
		and	 i.nr_prescricao = nr_prescricao_p;

		if (coalesce(dt_aprovacao_w::text, '') = '' or (dt_aprovacao_w < dt_inicial_p or dt_aprovacao_w > dt_final_p)) then
				ie_gerar_w := 'N';
		end if;
	end if;

	if (ie_gerar_w = 'S') then
		if (ie_opcao_w = 'CP') then
			Resultado_w	:= Resultado_w || cd_procedimento_w || ie_separador_p;
		elsif (ie_opcao_w = 'EX') then
			Resultado_w	:= Resultado_w || nr_seq_exame_w || ie_separador_p;
		elsif (ie_opcao_w = 'CE') then
			Resultado_w	:= Resultado_w || cd_exame_w || ie_separador_p;
		elsif (ie_opcao_w = 'DE') then
			Resultado_w	:= Resultado_w || nm_exame_w || ie_separador_p;
		elsif (ie_opcao_w = 'CI') then
			Resultado_w	:= Resultado_w || cd_exame_integracao_w || ie_separador_p;
		elsif (ie_opcao_w = 'CI3') then
			Resultado_w	:= Resultado_w || substr(cd_exame_integracao_w || '   ',1,3) || ie_separador_p;
		elsif (ie_opcao_w = 'CI8') then
			Resultado_w	:= Resultado_w || substr(cd_exame_integracao_w || '        ',1,8) || ie_separador_p;
		elsif (ie_opcao_w = 'CEI') and (cd_exame_integr_w IS NOT NULL AND cd_exame_integr_w::text <> '') then
			Resultado_w	:= Resultado_w || cd_exame_w || ie_separador_p;
		end if;
	end if;
	end;
END LOOP;

RETURN resultado_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prescr_exames_lab ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_material_p text, nr_seq_grupo_p bigint, ie_equipamento_p text, ie_opcao_p text, ie_separador_p text, dt_inicial_p timestamp, dt_final_p timestamp, dt_prev_execucao_p timestamp default null) FROM PUBLIC;

