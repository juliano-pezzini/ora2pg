-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_qtd_tipo ( nr_sequencia_p bigint, ie_tipo_item_p bigint, qt_liberada_p bigint, ie_tipo_qtde_p text, qt_tipo_quantidade_p bigint, ie_tipo_pessoa_qtde_p text, ie_regra_tipo_quant_p text, ie_somar_estrutura_p text, nr_seq_estrutura_p bigint, nr_seq_ocorrencia_p bigint, ie_qt_lib_posterior_p text, ie_somente_solicitacao_p text, ds_parametro_1_p text, ie_valida_cod_prestador_p text, cd_estabelecimento_p text, ie_tipo_calculo_p text) RETURNS varchar AS $body$
DECLARE


/*PARA A CONTA UTILIZAR A PLS_OBTER_SE_QTD_OC_CONTA*/

/* IE_TIPO_ITEM_P
	3 - Procedimento da Conta
	4 - Material da Conta
	7 -  Procedimento da importação
	8 - Material da Importação
*/
/* IE_TIPO_QTDE_P - Domínio 3540
	D - Dia
	M - Mês
	A - Ano
	G - Guia
	C - Conta
*/
ie_retorno_w			varchar(1)	:= 'S';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_guia_plano_w		bigint;
qt_solicitada_w			double precision	:= 0;
qt_liberacao_w			double precision;
dt_liberacao_w			timestamp;
dt_liberacao_ww			timestamp;
cd_guia_w			varchar(20);
cd_medico_executor_w		bigint;
nr_seq_conta_w			bigint;
cd_medico_solic_w		bigint;
nr_seq_proc_ref_w		bigint;
nr_seq_req_proc_w		bigint;
cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;
qt_procedimento_w		bigint;
nr_seq_requisicao_w		bigint;
qt_solicitacao_w		bigint := 0;
cd_prestador_w			varchar(30);
ie_cursor_valida_restricao_w	varchar(1) := 'N';
nr_seq_segurado_cursor_w	bigint;
nr_seq_prestador_cursor_w	bigint;


BEGIN

if (ie_tipo_item_p	= 3) then
	select	a.cd_procedimento,
		a.ie_origem_proced,
		coalesce(a.dt_procedimento,b.dt_emissao),
		b.nr_seq_segurado,
		b.nr_seq_prestador_exec,
		coalesce(b.cd_guia_referencia, b.cd_guia),
		b.cd_medico_executor,
		b.nr_sequencia,
		a.nr_seq_proc_ref
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_liberacao_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		cd_guia_w,
		cd_medico_executor_w,
		nr_seq_conta_w,
		nr_seq_proc_ref_w
	from	pls_conta	b,
		pls_conta_proc	a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_tipo_item_p	= 4) then
	select	a.nr_seq_material,
		coalesce(a.dt_atendimento,b.dt_emissao),
		b.nr_seq_segurado,
		b.nr_seq_prestador_exec,
		b.cd_medico_executor,
		b.nr_sequencia,
		coalesce(b.cd_guia_referencia, b.cd_guia)
	into STRICT	nr_seq_material_w,
		dt_liberacao_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		cd_medico_executor_w,
		nr_seq_conta_w,
		cd_guia_w
	from	pls_conta		b,
		pls_conta_mat	a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_tipo_item_p = 7) then/* Procedimento da  conta - importação */
	begin
	select	coalesce(a.cd_procedimento_imp,0),
		a.ie_origem_proced,
		coalesce(a.dt_procedimento_imp,b.dt_emissao_imp),
		substr(pls_obter_segurado_carteira(b.cd_usuario_plano_imp,cd_estabelecimento_p),1,10),
		b.nr_seq_prestador_exec_imp_ref nr_seq_prestador_exec_imp,
		coalesce(b.cd_guia_solic_imp, b.cd_guia_imp),
		coalesce(b.cd_medico_executor_imp,substr(pls_obter_dados_gerar_conta(b.nr_Sequencia,'M'),1,20)),
		b.nr_sequencia
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_liberacao_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		cd_guia_w,
		cd_medico_executor_w,
		nr_seq_conta_w
	from	pls_conta	b,
		pls_conta_proc	a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_sequencia		= nr_sequencia_p;
	exception
	when others then
		cd_procedimento_w := 0;
	end;


elsif (ie_tipo_item_p = 8) then/* Material da  conta - importação*/
	begin
	select	a.nr_seq_material,
		coalesce(a.dt_atendimento_imp,b.dt_emissao_imp),
		substr(pls_obter_segurado_carteira(b.cd_usuario_plano_imp,cd_estabelecimento_p),1,10),
		b.nr_seq_prestador_exec_imp_ref nr_seq_prestador_exec_imp,
		coalesce(b.cd_medico_executor_imp,substr(pls_obter_dados_gerar_conta(b.nr_Sequencia,'M'),1,20) ),
		b.nr_sequencia,
		coalesce(b.cd_guia_solic_imp, b.cd_guia_imp)
	into STRICT	nr_seq_material_w,
		dt_liberacao_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		cd_medico_executor_w,
		nr_seq_conta_w,
		cd_guia_w
	from	pls_conta	b,
		pls_conta_mat	a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_sequencia		= nr_sequencia_p;
	exception
	when others then
		nr_seq_material_w := 0;
	end;
end if;

begin
	select	cd_prestador
	into STRICT	cd_prestador_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_w;
exception
when others then
	cd_prestador_w := null;
end;

if (ie_tipo_qtde_p	= 'D') then
	/*Diego OPS - OS 284525 - Tratamento realizado para que seja mantida uma lógica quanto a quantiade de dias.
			        Ou seja anteriormente se quisese que o não pode-se repetir o proedimento duas vezes no mesmo dia eu teria que cadastrar
			        a qt_dias como zero o que dificultava o entendimento do cliente.
	dt_liberacao_ww	:= trunc(dt_liberacao_w - qt_tipo_quantidade_p);*/
	dt_liberacao_ww	:= trunc(dt_liberacao_w - (qt_tipo_quantidade_p - 1));
	if (ie_qt_lib_posterior_p	= 'S') then
		dt_liberacao_w	:= trunc(dt_liberacao_w + (qt_tipo_quantidade_p - 1));
	end if;
elsif (ie_tipo_qtde_p	= 'M') then
	/*Diego OPS - OS 284577 - Removi os truncs por month pois pela definição do cliente deve-se haver a lógica de ano precisa.
	    Ou seja existindo a regra de 2º incidencia em 1 ano, eu posso executar hoje a exatamente 366 dias após.*/
	dt_liberacao_ww	:= (add_months(dt_liberacao_w, -qt_tipo_quantidade_p) + 1);
	if (ie_qt_lib_posterior_p	= 'S') then
		dt_liberacao_w	:= (add_months(dt_liberacao_w, qt_tipo_quantidade_p) + 1);
	end if;
elsif (ie_tipo_qtde_p	= 'A') then
	/*Diego OPS - OS 284577 - A lógica vista com o Srº Felipe Ambrósio é de que ao executar o procedimento dia 26/01/2011 poderei executa-lo exatamente dia 26/01/2012*/

	dt_liberacao_ww	:= (add_months(dt_liberacao_w, -qt_tipo_quantidade_p * 12) + 1); /* Vezes 12 meses ao ano */
	if (ie_qt_lib_posterior_p	= 'S') then
		dt_liberacao_w	:= (add_months(dt_liberacao_w, qt_tipo_quantidade_p * 12) + 1); /* Vezes 12 meses ao ano */
	end if;
elsif (ie_tipo_qtde_p = 'G') then
	dt_liberacao_ww := clock_timestamp();
end if;

if (ie_tipo_calculo_p = 'U')	then
	if (ie_tipo_item_p	in (3,7)) then
		begin
		select 	a.qt_procedimento_imp
		into STRICT	qt_liberacao_w
		from	pls_conta		b,
			pls_conta_proc		a
		where	a.nr_seq_conta			= b.nr_sequencia
		and	a.nr_sequencia 			= nr_sequencia_p;
		exception
		when others then
			qt_liberacao_w	:= 0;
		end;
	elsif (ie_tipo_item_p	in (4,8)) then
		begin
		select 	coalesce(a.qt_material_imp,0)
		into STRICT	qt_liberacao_w
		from	pls_conta		b,
			pls_conta_mat		a
		where	a.nr_seq_conta			= b.nr_sequencia
		and	a.nr_sequencia			= nr_sequencia_p;
		exception
		when others then
			qt_liberacao_w	:= 0;
		end;
	end if;
elsif (ie_tipo_calculo_p = 'I')	then
	if (ie_tipo_item_p	in (3,7)) then

		select 	count(a.nr_sequencia)
		into STRICT	qt_liberacao_w
		from	pls_conta		b,
			pls_conta_proc		a
		where	a.nr_seq_conta			= b.nr_sequencia
		and	coalesce(a.nr_seq_proc_ref,0)	= 0 /*Diego OS 314640 - Eliminar procedimentos referenciados*/
		and	((b.nr_seq_segurado		= nr_seq_segurado_w and ie_tipo_pessoa_qtde_p  = 'B')
		or (b.nr_seq_prestador_exec 	= nr_seq_prestador_w and ie_tipo_pessoa_qtde_p = 'P'))
		and	(((ie_tipo_qtde_p not in ('G','C')) and (trunc(coalesce(a.dt_procedimento,b.dt_emissao)) between dt_liberacao_ww and trunc(dt_liberacao_w))) or
			((ie_tipo_qtde_p = 'G') and (coalesce(b.cd_guia_referencia,b.cd_guia) = cd_guia_w)) or
			((ie_tipo_qtde_p = 'G') and (coalesce(cd_guia_pesquisa,'X') = cd_guia_w)) or
			((ie_tipo_qtde_p = 'G') and (coalesce(b.cd_guia_solic_imp,b.cd_guia_imp) = cd_guia_w)) or
			(ie_tipo_qtde_p = 'C' AND b.nr_sequencia = nr_seq_conta_w))
		and	((ie_regra_tipo_quant_p = 'N') or (b.cd_medico_executor = cd_medico_executor_w))
		and	(((ie_somar_estrutura_p = 'N') and (a.cd_procedimento = cd_procedimento_w) and (a.ie_origem_proced = ie_origem_proced_w))--ie_origem_proced_w
		or	((ie_somar_estrutura_p = 'S')  and (pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, a.cd_procedimento, a.ie_origem_proced, null) = 'S')))
		and	((not exists (	SELECT	1 					--Diego OS 292510 - Acrescentado o not exists para que seja contabilizado somente
					from	pls_ocorrencia_benef	x
					where	coalesce(x.nr_seq_guia_plano,0) = 0		--a sequencia que seja consistido sempre será aproveitado o máximo possivel de contas.
					and	coalesce(x.nr_seq_requisicao,0) = 0
					and	x.nr_seq_proc = a.nr_sequencia
					and	x.nr_seq_ocorrencia = nr_seq_ocorrencia_p)) or (a.nr_sequencia = nr_seq_proc_ref_w)); --Para o caso do procedimento principal ter gerado ocorrencia. No anterior caso o proc principal tivesse ocorrencia o filho talvez não geraria
	elsif (ie_tipo_item_p	in (4,8)) then
		select count(a.nr_sequencia)
		into STRICT	qt_liberacao_w
		from	pls_conta		b,
			pls_conta_mat		a
		where	a.nr_seq_conta			= b.nr_sequencia
		and	((b.nr_seq_segurado		= nr_seq_segurado_w and ie_tipo_pessoa_qtde_p  = 'B')
		or (b.nr_seq_prestador_exec	= nr_seq_prestador_w and ie_tipo_pessoa_qtde_p = 'P'))
		and	(((ie_tipo_qtde_p not in ('G','C')) and (trunc(coalesce(a.dt_atendimento,b.dt_emissao)) between dt_liberacao_ww and trunc(dt_liberacao_w))) or
			((ie_tipo_qtde_p = 'G') and (coalesce(b.cd_guia_referencia,b.cd_guia) = cd_guia_w)) or
			((ie_tipo_qtde_p = 'G') and (coalesce(cd_guia_pesquisa,'X') = cd_guia_w)) or
			((ie_tipo_qtde_p = 'G') and (coalesce(b.cd_guia_solic_imp,b.cd_guia_imp) = cd_guia_w))or
			(ie_tipo_qtde_p = 'C' AND b.nr_sequencia = nr_seq_conta_w))
		and	((ie_regra_tipo_quant_p = 'N') or (b.cd_medico_executor = cd_medico_executor_w))
		and	((ie_somar_estrutura_p = 'N' AND a.nr_seq_material = nr_seq_material_w)
		or	((ie_somar_estrutura_p = 'S')  and (pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, null, null, a.nr_seq_material) = 'S')))
		and	not exists (	SELECT	1 					--Diego OS 292510 - Acrescentado o not exists para que seja contabilizado somente
					from	pls_ocorrencia_benef	x
					where	coalesce(x.nr_seq_guia_plano,0) = 0		--a sequencia que seja consistido sempre será aproveitado o máximo possivel de contas.
					and	coalesce(x.nr_seq_requisicao,0) = 0
					and	x.nr_seq_mat = a.nr_sequencia
					and	x.nr_seq_ocorrencia = nr_seq_ocorrencia_p);
	end if;
end if;


qt_liberacao_w := qt_liberacao_w + qt_solicitada_w;

if (qt_liberacao_w	>= qt_liberada_p) then
	ie_retorno_w	:= 'N';
end if;

if (coalesce(ie_somente_solicitacao_p,'N') = 'S') and (ie_tipo_item_p in (5,6,10,11)) then
	qt_solicitacao_w := qt_solicitacao_w + 1;
	if (qt_solicitacao_w >= qt_liberada_p) then
		ie_retorno_w	:= 'N';
	else
		ie_retorno_w	:= 'S';
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_qtd_tipo ( nr_sequencia_p bigint, ie_tipo_item_p bigint, qt_liberada_p bigint, ie_tipo_qtde_p text, qt_tipo_quantidade_p bigint, ie_tipo_pessoa_qtde_p text, ie_regra_tipo_quant_p text, ie_somar_estrutura_p text, nr_seq_estrutura_p bigint, nr_seq_ocorrencia_p bigint, ie_qt_lib_posterior_p text, ie_somente_solicitacao_p text, ds_parametro_1_p text, ie_valida_cod_prestador_p text, cd_estabelecimento_p text, ie_tipo_calculo_p text) FROM PUBLIC;

