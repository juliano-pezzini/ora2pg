-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_pf_sbis ( nr_atendimento_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


nm_pf_w				varchar(255);
qt_reg_w			bigint;
qt_reg_compl_w		bigint;
dt_entrada_w		timestamp;
cd_pessoa_fisica_w	varchar(10);
ie_sexo_w			varchar(10);
ie_estado_civil_w	varchar(2);
ds_endereco_w		varchar(255);

C01 CURSOR FOR
	SELECT	nm_pessoa_fisica,
			ie_sexo,
			ie_estado_civil
	from	pessoa_fisica_alteracao
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and		dt_atualizacao > dt_entrada_w
	order by dt_atualizacao;

C02 CURSOR FOR
	SELECT	ds_endereco
	from	compl_pessoa_fisica_hist
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and		dt_atualizacao > dt_entrada_w
	and		ie_tipo_complemento = 1
	order by dt_atualizacao;


BEGIN
/*

ESTA FUNCTION É UTILIZADA DENTRO DO COMPONENTE PACIENTE    ---  CUIDADO AO ALTERAR EM QUESTÃO DE PERFORMANCE

*/
if (coalesce(nr_atendimento_p,0) > 0) then

	select	max(dt_entrada),
			max(cd_pessoa_fisica)
	into STRICT	dt_entrada_w,
			cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	select	count(1)
	into STRICT	qt_reg_w
	from	pessoa_fisica_alteracao
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and		dt_atualizacao > dt_entrada_w;

	select	count(1)
	into STRICT	qt_reg_compl_w
	from	compl_pessoa_fisica_hist
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and		dt_atualizacao > dt_entrada_w
	and		ie_tipo_complemento = 1;

	if (qt_reg_w > 0) then

		open C01;
		loop
		fetch C01 into
			nm_pf_w,
			ie_sexo_w,
			ie_estado_civil_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			if (ie_opcao_p = 'SEXO') and ((trim(both ie_sexo_w) IS NOT NULL AND (trim(both ie_sexo_w))::text <> '')) then
				exit;
			elsif (ie_opcao_p = 'NOME') and ((trim(both nm_pf_w) IS NOT NULL AND (trim(both nm_pf_w))::text <> '')) then
				exit;
			elsif (ie_opcao_p = 'ESCI') and ((trim(both ie_estado_civil_w) IS NOT NULL AND (trim(both ie_estado_civil_w))::text <> '')) then
				exit;
			end if;

			end;
		end loop;
		close C01;

	end if;

	if (qt_reg_compl_w > 0) then

		open C02;
		loop
		fetch C02 into
			ds_endereco_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			if (ie_opcao_p = 'ENDE') and ((trim(both ds_endereco_w) IS NOT NULL AND (trim(both ds_endereco_w))::text <> '')) then
				exit;
			end if;

			end;
		end loop;
		close C02;

	end if;

	if (ie_opcao_p = 'SEXO') then
		return ie_sexo_w;
	elsif (ie_opcao_p = 'NOME') then
		return nm_pf_w;
	elsif (ie_opcao_p = 'ESCI') then
		return ie_estado_civil_w;
	elsif (ie_opcao_p = 'ENDE') then
		return ds_endereco_w;
	else
		return '';
	end if;
else
	return '';

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_pf_sbis ( nr_atendimento_p bigint, ie_opcao_p text) FROM PUBLIC;

