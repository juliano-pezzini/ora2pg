-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_local_aplic_ccg ( nr_sequencia_p bigint) RETURNS varchar AS $body$
DECLARE


ie_local_aplicacao_w		varchar(15);
ie_primeiro_local_w			varchar(15);
ie_local_anterior_w			varchar(15);
nr_seq_protocolo_w			bigint;
nr_seq_glicemia_w			bigint;
nr_seq_anterior_w			bigint;
ds_local_w					varchar(255);

c01 CURSOR FOR
SELECT	a.ie_local_aplicacao
from	prot_glic_local_insulina a
where	a.nr_seq_protocolo_glic = nr_seq_protocolo_w
and		(a.ie_local_aplicacao IS NOT NULL AND a.ie_local_aplicacao::text <> '')
order by	a.nr_seq_prioridade;


BEGIN

select	max(nr_seq_protocolo),
		max(nr_seq_glicemia)
into STRICT	nr_seq_protocolo_w,
		nr_seq_glicemia_w
from	atendimento_glicemia
where	nr_sequencia = nr_sequencia_p;

open C01;
loop
fetch C01 into
	ie_primeiro_local_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	exit;
	end;
end loop;
close C01;

Select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_anterior_w
from	atendimento_glicemia
where	nr_seq_glicemia = nr_seq_glicemia_w
and		nr_sequencia 	< nr_sequencia_p;

Select	max(ie_local_aplicacao)
into STRICT	ie_local_anterior_w
from	atend_glicemia_evento
where	nr_seq_glicemia = nr_seq_anterior_w;

if (ie_local_anterior_w IS NOT NULL AND ie_local_anterior_w::text <> '') then
	Select	max(a.ie_local_aplicacao)
	into STRICT	ie_local_aplicacao_w
	from	prot_glic_local_insulina a
	where	a.nr_seq_protocolo_glic = nr_seq_protocolo_w
	and		nr_seq_prioridade > (SELECT max(b.nr_seq_prioridade)
								 from 	prot_glic_local_insulina b
								 where	b.nr_seq_protocolo_glic = nr_seq_protocolo_w
								 and	b.ie_local_aplicacao = ie_local_anterior_w)  LIMIT 1;
end if;

if (coalesce(ie_local_aplicacao_w::text, '') = '') then
	ie_local_aplicacao_w	:= ie_primeiro_local_w;
end if;

if (ie_local_aplicacao_w IS NOT NULL AND ie_local_aplicacao_w::text <> '') then
	ds_local_w	:= substr(obter_valor_dominio(6166,ie_local_aplicacao_w),1,50);
end if;

return	ds_local_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_local_aplic_ccg ( nr_sequencia_p bigint) FROM PUBLIC;

