-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_conteudo_email ( nr_seq_agenda_p bigint, cd_declaracao_p text ) RETURNS varchar AS $body$
DECLARE


    nm_medico_w                    varchar(150);
    nm_paciente_w                  varchar(150);
    nm_procedimento_w              varchar(150);
    dt_procedimento_w              varchar(20);
    dt_procedimento_ww             varchar(20);
    nr_minuto_duracao_w            bigint;
    nr_cirurgia_w                  bigint;
    ds_declaracao_w                varchar(4000);
    ds_convenio_w                  varchar(255);
    cd_usuario_convenio_w          varchar(30);
    ds_observacao_w                varchar(255);
    ds_proc_adic_w                 varchar(1000);
    ds_proc_adic2_w                varchar(1000);
    ds_proc_adic3_w                varchar(1000);
    ds_proc_adic4_w                varchar(1000);
    ds_proc_adic5_w                varchar(1000);
    ds_proc_adic_aux_w             varchar(270);
    ds_proc_adic_aux2_w            varchar(270);
    ds_proc_adic_aux3_w            varchar(270);
    ds_proc_adic_aux4_w            varchar(270);
    ds_proc_adic_aux5_w            varchar(270);
    cd_procedimento_w              bigint;
    ds_procedimento_w              varchar(270);
    ds_anestesia_w                 varchar(255);
    qt_idade_paciente_w            smallint;
    ds_proc_interno_w              varchar(255);
    dt_chegada_prevista_w          varchar(20);
    nm_usuario_w                   varchar(255);
    ds_conteudo_email_opme_w       varchar(255);
    ds_email_solic_medica_w        varchar(255);
    ds_conteudo_email_equip_w      varchar(255);
    ds_conteudo_email_cme_w        varchar(255);
    ds_conteudo_email_sangue_w     varchar(255);
    ds_conteudo_email_servicos_w   varchar(255);
    nm_anestesista_w               varchar(100);
    ds_proc_lib_realizacao_w       varchar(270);
    ds_proc_bloq_realizacao_w      varchar(270);
    ds_proc_pende_hosp_w           varchar(270);
    ds_proc_pende_pac_w            varchar(270);
    ds_conteudo_sem_cod_matmed_w   varchar(2000);
    ds_conteudo_sem_cod_opme_w     varchar(2000);
    ds_reserva_w                   varchar(20);
    ds_estabelecimento_agenda_w    varchar(255);
    c01 CURSOR FOR
    SELECT
        substr(cd_procedimento
               || ' - '
               || substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 255), 1, 270)
    FROM
        agenda_paciente_proc
    WHERE
        nr_sequencia = nr_seq_agenda_p
    ORDER BY
        1;

    c02 CURSOR FOR
    SELECT
        substr(cd_procedimento
               || ' - '
               || substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 255), 1, 270)
    FROM
        agenda_paciente_proc
    WHERE
        nr_sequencia = nr_seq_agenda_p
        AND ie_cobertura_conv = 'L'
    ORDER BY
        1;

    c03 CURSOR FOR
    SELECT
        substr(cd_procedimento
               || ' - '
               || substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 255), 1, 270)
    FROM
        agenda_paciente_proc
    WHERE
        nr_sequencia = nr_seq_agenda_p
        AND ie_cobertura_conv = 'B'
    ORDER BY
        1;

    c04 CURSOR FOR
    SELECT
        substr(cd_procedimento
               || ' - '
               || substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 255), 1, 270)
    FROM
        agenda_paciente_proc
    WHERE
        nr_sequencia = nr_seq_agenda_p
        AND ie_cobertura_conv = 'PAH'
    ORDER BY
        1;

    c05 CURSOR FOR
    SELECT
        substr(cd_procedimento
               || ' - '
               || substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 245), 1, 270)
    FROM
        agenda_paciente_proc
    WHERE
        nr_sequencia = nr_seq_agenda_p
        AND ie_cobertura_conv = 'PAP'
    ORDER BY
        1;


BEGIN
    IF (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') AND (cd_declaracao_p IS NOT NULL AND cd_declaracao_p::text <> '') THEN
        SELECT
            MAX(substr(cd_procedimento
                       || ' - '
                       || substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 240), 1, 270))
        INTO STRICT ds_proc_lib_realizacao_w
        FROM
            agenda_paciente
        WHERE
            nr_sequencia = nr_seq_agenda_p
            AND ie_cobertura_conv = 'L';

        SELECT
            MAX(substr(cd_procedimento
                       || ' - '
                       || substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 240), 1, 270))
        INTO STRICT ds_proc_bloq_realizacao_w
        FROM
            agenda_paciente
        WHERE
            nr_sequencia = nr_seq_agenda_p
            AND ie_cobertura_conv = 'B';

        SELECT
            MAX(substr(cd_procedimento
                       || ' - '
                       || substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 240), 1, 270))
        INTO STRICT ds_proc_pende_hosp_w
        FROM
            agenda_paciente
        WHERE
            nr_sequencia = nr_seq_agenda_p
            AND ie_cobertura_conv = 'PAH';

        SELECT
            MAX(substr(cd_procedimento
                       || ' - '
                       || substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 240), 1, 270))
        INTO STRICT ds_proc_pende_pac_w
        FROM
            agenda_paciente
        WHERE
            nr_sequencia = nr_seq_agenda_p
            AND ie_cobertura_conv = 'PAP';

        SELECT
            obter_nome_pf(cd_medico),
            coalesce(obter_nome_pf(cd_pessoa_fisica), nm_paciente),
            substr(obter_descricao_procedimento(cd_procedimento, ie_origem_proced)
                   || CASE WHEN coalesce(ds_cirurgia::text, '') = '' THEN  NULL  ELSE obter_desc_expressao(313423)/*' description: '*/
 END
                   || ds_cirurgia
                   || CASE WHEN coalesce(ie_lado::text, '') = '' THEN  NULL  ELSE ' Lado: ' END 
                   || obter_valor_dominio(1372, ie_lado), 1, 100),
            to_char(hr_inicio, 'dd/mm/yyyy hh24:mi:ss'),
            nr_minuto_duracao,
            nr_cirurgia,
            substr(obter_nome_convenio(cd_convenio), 1, 255),
            cd_usuario_convenio,
            substr(ds_observacao, 1, 255),
            cd_procedimento,
            substr(obter_valor_dominio(36, cd_tipo_anestesia), 1, 60),
            qt_idade_paciente,
            substr(obter_desc_proc_interno(nr_seq_proc_interno), 1, 255),
            to_char(dt_chegada_prev, 'dd/mm/yyyy hh24:mi:ss'),
            substr(obter_conteudo_email_opme(nr_sequencia), 1, 255),
            substr(obter_cont_email_solic_medica(nr_sequencia), 1, 255),
            substr(obter_conteudo_email_equip(nr_sequencia), 1, 255),
            substr(obter_conteudo_email_cme(nr_sequencia), 1, 255),
            substr(obter_conteudo_email_sangue(nr_sequencia), 1, 255),
            substr(obter_conteudo_email_servicos(nr_sequencia), 1, 255),
            substr(obter_nome_medico(cd_anestesista, 'NC'), 1, 100),
            to_char(hr_inicio, 'dd/mm/yyyy'),
            substr(obter_conteudo_itens_sem_cod(nr_sequencia, 1), 1, 2000), --1 = Materiais / Medicamentos.
            substr(obter_conteudo_itens_sem_cod(nr_sequencia, 2), 1, 2000), --2 = OPME.
            substr(nr_reserva, 1, 20),
            substr(obter_nome_estabelecimento(obter_estab_agenda(cd_agenda)), 1, 255)
        INTO STRICT
            nm_medico_w,
            nm_paciente_w,
            nm_procedimento_w,
            dt_procedimento_w,
            nr_minuto_duracao_w,
            nr_cirurgia_w,
            ds_convenio_w,
            cd_usuario_convenio_w,
            ds_observacao_w,
            cd_procedimento_w,
            ds_anestesia_w,
            qt_idade_paciente_w,
            ds_proc_interno_w,
            dt_chegada_prevista_w,
            ds_conteudo_email_opme_w,
            ds_email_solic_medica_w,
            ds_conteudo_email_equip_w,
            ds_conteudo_email_cme_w,
            ds_conteudo_email_sangue_w,
            ds_conteudo_email_servicos_w,
            nm_anestesista_w,
            dt_procedimento_ww,
            ds_conteudo_sem_cod_matmed_w,
            ds_conteudo_sem_cod_opme_w,
            ds_reserva_w,
            ds_estabelecimento_agenda_w
        FROM
            agenda_paciente
        WHERE
            nr_sequencia = nr_seq_agenda_p;

        OPEN c01;
        LOOP
            FETCH c01 INTO ds_proc_adic_aux_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */
            BEGIN
                ds_proc_adic_w := ds_proc_adic_w
                                  || ', '
                                  || ds_proc_adic_aux_w;
            END;
        END LOOP;

        CLOSE c01;
        OPEN c02;
        LOOP
            FETCH c02 INTO ds_proc_adic_aux2_w;
            EXIT WHEN NOT FOUND; /* apply on c02 */
            BEGIN
                ds_proc_adic2_w := ds_proc_adic2_w
                                   || ', '
                                   || ds_proc_adic_aux2_w;
            END;
        END LOOP;

        CLOSE c02;
        OPEN c03;
        LOOP
            FETCH c03 INTO ds_proc_adic_aux3_w;
            EXIT WHEN NOT FOUND; /* apply on c03 */
            BEGIN
                ds_proc_adic3_w := ds_proc_adic3_w
                                   || ', '
                                   || ds_proc_adic_aux3_w;
            END;
        END LOOP;

        CLOSE c03;
        OPEN c04;
        LOOP
            FETCH c04 INTO ds_proc_adic_aux4_w;
            EXIT WHEN NOT FOUND; /* apply on c04 */
            BEGIN
                ds_proc_adic4_w := ds_proc_adic4_w
                                   || ', '
                                   || ds_proc_adic_aux4_w;
            END;
        END LOOP;

        CLOSE c04;
        OPEN c05;
        LOOP
            FETCH c05 INTO ds_proc_adic_aux5_w;
            EXIT WHEN NOT FOUND; /* apply on c05 */
            BEGIN
                ds_proc_adic5_w := ds_proc_adic5_w
                                   || ', '
                                   || ds_proc_adic_aux5_w;
            END;
        END LOOP;

        CLOSE c05;
        nm_usuario_w := obter_nome_usuario(wheb_usuario_pck.get_nm_usuario);
        SELECT
            ds_declaracao
        INTO STRICT ds_declaracao_w
        FROM
            declaracao
        WHERE
            cd_declaracao = cd_declaracao_p;

        ds_procedimento_w := substr(cd_procedimento_w
                                    || ' - '
                                    || nm_procedimento_w, 1, 270);
        ds_proc_adic_w := substr(ds_proc_adic_w, 3, 1000);
        IF (ds_proc_lib_realizacao_w IS NOT NULL AND ds_proc_lib_realizacao_w::text <> '') THEN
            ds_proc_adic2_w := substr(ds_proc_lib_realizacao_w
                                      || ' '
                                      || ds_proc_adic2_w, 1, 1000);
        ELSE
            ds_proc_adic2_w := substr(ds_proc_adic2_w, 3, 1000);
        END IF;

        IF (ds_proc_bloq_realizacao_w IS NOT NULL AND ds_proc_bloq_realizacao_w::text <> '') THEN
            ds_proc_adic3_w := substr(ds_proc_bloq_realizacao_w
                                      || ' '
                                      || ds_proc_adic3_w, 1, 1000);
        ELSE
            ds_proc_adic3_w := substr(ds_proc_adic3_w, 3, 1000);
        END IF;

        IF (ds_proc_pende_hosp_w IS NOT NULL AND ds_proc_pende_hosp_w::text <> '') THEN
            ds_proc_adic4_w := substr(ds_proc_pende_hosp_w
                                      || ' '
                                      || ds_proc_adic4_w, 1, 1000);
        ELSE
            ds_proc_adic4_w := substr(ds_proc_adic4_w, 3, 1000);
        END IF;

        IF (ds_proc_pende_pac_w IS NOT NULL AND ds_proc_pende_pac_w::text <> '') THEN
            ds_proc_adic5_w := substr(ds_proc_pende_pac_w
                                      || ' '
                                      || ds_proc_adic5_w, 1, 1000);
        ELSE
            ds_proc_adic5_w := substr(ds_proc_adic5_w, 3, 1000);
        END IF;

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@numeroagenda', nr_seq_agenda_p), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@idade', qt_idade_paciente_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@procedimento', nm_procedimento_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@cirurgiao', nm_medico_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@paciente', nm_paciente_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@data', dt_procedimento_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@duracao', nr_minuto_duracao_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@cirurgia', nr_cirurgia_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@convenio', ds_convenio_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@docusuconv', cd_usuario_convenio_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@observacao', ds_observacao_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@procadic', ds_proc_adic_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@proclibrealizacao', ds_proc_adic2_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@procbloqconvenio', ds_proc_adic3_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@procpendautorhospital', ds_proc_adic4_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@procpendautorpac', ds_proc_adic5_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@coddescproced', ds_procedimento_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@anestesia', ds_anestesia_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@proc_interno', ds_proc_interno_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@dtchegadaprev', dt_chegada_prevista_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@usuario', nm_usuario_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@opme', ds_conteudo_email_opme_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@solic_medica', ds_email_solic_medica_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@equipamento', ds_conteudo_email_equip_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@cme', ds_conteudo_email_cme_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@bancodesangue', ds_conteudo_email_sangue_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@servicos', ds_conteudo_email_servicos_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@anestesista', nm_anestesista_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@dt_sem_hora', dt_procedimento_ww), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@sem_codigo_mat_med', ds_conteudo_sem_cod_matmed_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@sem_codigo_opme', ds_conteudo_sem_cod_opme_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@numero_reserva', ds_reserva_w), 1, 4000);

        ds_declaracao_w := substr(replace_macro(ds_declaracao_w, '@estab_agenda', ds_estabelecimento_agenda_w), 1, 4000);

    END IF;		

-- Ao incluir uma nova macro, disponibilizar a macro e a description da mesma. Este IF is para disponibilizar ao cliente as macros e a description. Campo function --DS_MACROS_AGENDA_CIRURGICA da tabela DECLARATION.
    IF ( coalesce(nr_seq_agenda_p::text, '') = '' ) AND ( coalesce(cd_declaracao_p::text, '') = '' ) THEN
        ds_declaracao_w := '@numeroagenda: N'
                           || chr(250)
                           || 'mero/Sequ'
                           || chr(234)
                           || 'ncia do agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@idade: Idade do paciente do agendamento.'
                           || chr(13);
        ds_declaracao_w := ds_declaracao_w
                           || '@procedimento:Descri'
                           || chr(231)
                           || chr(227)
                           || 'o do procedimento principal do agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@cirurgiao: Descri'
                           || chr(231)
                           || chr(227)
                           || 'o do m'
                           || chr(233)
                           || 'dico cirurgi'
                           || chr(227)
                           || 'o do agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@paciente: Nome do paciente do agendamento.'
                           || chr(13);
        ds_declaracao_w := ds_declaracao_w
                           || '@data: Data/Hora da agenda.'
                           || chr(13);
        ds_declaracao_w := ds_declaracao_w
                           || '@duracao: Dura'
                           || chr(231)
                           || chr(227)
                           || ' o de minutos previstos do agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@cirurgia: N'
                           || chr(250)
                           || 'mero da cirurgia do agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@convenio: Conv'
                           || chr(234)
                           || 'nio informado no agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@observacao: Observa'
                           || chr(231)
                           || chr(227)
                           || ' o informada no agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@procadic: Procedimentos adicionais do agendamento.'
                           || chr(13);
        ds_declaracao_w := ds_declaracao_w
                           || '@proclibrealizacao: Procedimento liberado para realiza'
                           || chr(231)
                           || chr(227)
                           || ' o.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@procbloqconvenio: Procedimento bloqueado pelo conv'
                           || chr(234)
                           || 'nio.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@procpendautorhospital: Procedimento pendente autoriza'
                           || chr(231)
                           || chr(227)
                           || ' o (Guia Hospital).'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@procpendautorpac: Procedimento pendente autoriza'
                           || chr(231)
                           || chr(227)
                           || 'o (Guia Paciente).'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@coddescproced: C'
                           || chr(243)
                           || 'digo e Descri'
                           || chr(231)
                           || chr(227)
                           || ' o do procedimento principal do agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@proc_interno: Descri'
                           || chr(231)
                           || chr(227)
                           || 'o do procedimento interno.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@anestesia: Descri'
                           || chr(231)
                           || chr(227)
                           || 'o da anestesia informada no agendamento.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@dtchegadaprev: Data/Hora de preparo da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@opme: OPME da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@equipamento: Equipamento da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@cme: CME da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@bancodesangue: Banco de sangue da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@servicos: Servi'
                           || chr(231)
                           || 'os da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@solic_medica: Solicita'
                           || chr(231)
                           || chr(227)
                           || 'o m'
                           || chr(233)
                           || 'dica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@usuario: Usu'
                           || chr(225)
                           || 'rio logado.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@anestesista: M'
                           || chr(233)
                           || 'd anestesista.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@dt_sem_hora: Data sem hora da agenda.'
                           || chr(13);
        ds_declaracao_w := ds_declaracao_w
                           || '@sem_codigo_mat_med: Itens sem c'
                           || chr(243)
                           || 'digo materiais e medicamentos .'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@sem_codigo_opme: Itens sem c'
                           || chr(243)
                           || 'digo OPME.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@numero_reserva: N'
                           || chr(250)
                           || 'mero reserva da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@estab_agenda: Estabelecimento da agenda cir'
                           || chr(250)
                           || 'rgica.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@orientacaousuario: Orienta'
                           || chr(231)
                           || chr(245)
                           || 'es de preparo do procedimento interno para o usu'
                           || chr(225)
                           || 'rio.'
                           || chr(13);

        ds_declaracao_w := ds_declaracao_w
                           || '@orientacaopaciente: Orienta'
                           || chr(231)
                           || chr(227)
                           || 'o sobre o procedimento para o paciente.'
                           || chr(13);

    END IF;

    RETURN substr(ds_declaracao_w, 1, 4000);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_conteudo_email ( nr_seq_agenda_p bigint, cd_declaracao_p text ) FROM PUBLIC;

