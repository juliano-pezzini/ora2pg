-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_exame_convenio (cd_estabelecimento_p bigint, nr_seq_exame_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_vigencia_p timestamp, nr_seq_proc_interno_p bigint default null) RETURNS varchar AS $body$
DECLARE


cd_categoria_w			varchar(10);
cd_convenio_w			convenio.cd_convenio%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
ie_prioridade_edicao_w	varchar(2);
cd_edicao_amb_w			bigint;
vl_aux_w				double precision;
dt_aux_w				timestamp;
ds_retorno_w			char(1);
nr_seq_cbhpm_edicao_w	bigint;
ie_utiliza_proc_interno_w lab_parametro.ie_proc_interno%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;

c01 CURSOR FOR
	SELECT	cd_edicao_amb
	from 	convenio_amb
	where 	cd_estabelecimento     = cd_estabelecimento_p
	and 	cd_convenio            = cd_convenio_w
	and (coalesce(ie_situacao,'A')   = 'A')
	and 	(dt_inicio_vigencia     =
			(SELECT	max(dt_inicio_vigencia)
			from 	convenio_amb a	
			where 	a.cd_estabelecimento  	= cd_estabelecimento_p
			and 	a.cd_convenio         	= cd_convenio_w
			and 	coalesce(a.ie_situacao,'A')	= 'A'
			and 	a.dt_inicio_vigencia 	<=  dt_vigencia_p))
	order by ie_prioridade;

BEGIN

cd_categoria_w			:= coalesce(cd_categoria_p,'0');
cd_convenio_w			:= coalesce(cd_convenio_p,0);
ie_tipo_atendimento_w	:= coalesce(ie_tipo_atendimento_p,0);


Select	coalesce(max(ie_proc_interno),'N')
into STRICT	ie_utiliza_proc_interno_w
from	lab_parametro;	

select	coalesce(max(ie_prioridade_edicao_amb), 'N')
into STRICT	ie_prioridade_edicao_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ie_prioridade_edicao_w		= 'N') then
	open C01;
	loop
	fetch C01 into	
		cd_edicao_amb_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

else
	SELECT * FROM Obter_Edicao_Proc_Conv(		cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_vigencia_p, cd_procedimento_p, cd_edicao_amb_w, vl_aux_w, vl_aux_w, vl_aux_w, dt_aux_w, vl_aux_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_aux_w, vl_aux_w, vl_aux_w, dt_aux_w, vl_aux_w, nr_seq_cbhpm_edicao_w;
end if;

cd_edicao_amb_w		:= coalesce(cd_edicao_amb_w,0);


if (ie_utiliza_proc_interno_w	= 'S') and (coalesce(nr_seq_proc_interno_p,0)> 0) then
	
	SELECT * FROM Obter_Proc_Tab_Interno_Conv2(nr_seq_proc_interno_p, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, null, dt_vigencia_p, null, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_p) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
					
	select	coalesce(max('S'),'N')
	into STRICT	ds_retorno_w
	from	procedimento b
	where	b.cd_procedimento	= cd_procedimento_w
	and	b.ie_origem_proced	= ie_origem_proced_w;
	
	if (ds_retorno_w = 'N')	then
	
		select	coalesce(max('S'),'N')
		into STRICT	ds_retorno_w
		from	exame_lab_convenio where	coalesce(cd_convenio,cd_convenio_w) 			= cd_convenio_w
		and	nr_seq_exame					= nr_seq_exame_p
		and	coalesce(cd_categoria,cd_categoria_w) 		= cd_categoria_w
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w
		and	coalesce(cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w
		and	upper(ie_situacao) 				= 'A' LIMIT 1;
		
	end if;
else
	select	coalesce(max('S'),'N')
	into STRICT	ds_retorno_w
	from	exame_lab_convenio where	coalesce(cd_convenio,cd_convenio_w) 			= cd_convenio_w
	and	nr_seq_exame					= nr_seq_exame_p
	and	coalesce(cd_categoria,cd_categoria_w) 		= cd_categoria_w
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w
	and	coalesce(cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w
	and	upper(ie_situacao) 				= 'A' LIMIT 1;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_exame_convenio (cd_estabelecimento_p bigint, nr_seq_exame_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_vigencia_p timestamp, nr_seq_proc_interno_p bigint default null) FROM PUBLIC;

