-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION qt_obter_dur_aplicacao_sim (ds_dia_ciclo_p text, nr_seq_prot_medic_p bigint, cd_protocolo_p bigint, nr_seq_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) RETURNS bigint AS $body$
DECLARE


qt_retorno_w			bigint;
ie_tempo_medic_w		varchar(1)	:= 'N';

qt_hora_aplicacao_w		smallint;
qt_tempo_aplic_soluc_w		double precision;
qt_min_dispositivo_w		bigint;
qt_min_aplicacao_w		smallint;
qt_min_dispositivo_soluc_w 	bigint;
qt_tempo_agenda_w		bigint;
nr_ciclo_w			integer;

qt_duracao_w			bigint    := 0;

C01 CURSOR FOR
	SELECT	coalesce(qt_hora_aplicacao,0),
		coalesce(qt_min_aplicacao,0),
		qt_duracao_dispositivo_inf(ie_bomba_infusao)
	from	paciente_atend_medic_sim
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	--and	nr_seq_diluicao is null
	--and	nr_seq_solucao is null
	order by 1;

C02 CURSOR FOR
	SELECT	coalesce(qt_tempo_aplicacao,0),
		qt_duracao_dispositivo_inf(ie_bomba_infusao)
	from	paciente_atend_soluc_sim
	where	nr_seq_atendimento	= nr_seq_atendimento_p;


BEGIN

ie_tempo_medic_w	:= coalesce(Obter_Valor_Param_Usuario(865, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

select	max(nr_ciclo)
into STRICT	nr_ciclo_w
from	paciente_atendimento
where	nr_seq_atendimento = nr_seq_atendimento_p;

if (ie_tempo_medic_w = 'C') then

	qt_retorno_w	:= coalesce(qt_obter_tempo_dur_dia(ds_dia_ciclo_p, nr_seq_prot_medic_p, cd_protocolo_p, nr_ciclo_w),0);

elsif (ie_tempo_medic_w = 'S') then


	open C01;
	loop
	fetch C01 into
		qt_hora_aplicacao_w,
		qt_min_aplicacao_w,
		qt_min_dispositivo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (qt_min_dispositivo_w IS NOT NULL AND qt_min_dispositivo_w::text <> '') then
			qt_duracao_w	:= qt_duracao_w + qt_min_dispositivo_w;
		else
			qt_duracao_w	:= qt_duracao_w + qt_min_aplicacao_w + (coalesce(qt_hora_aplicacao_w,0) * 60);
		end if;

		end;
	end loop;
	close C01;


	open C02;
	loop
	fetch C02 into
		qt_tempo_aplic_soluc_w,
		qt_min_dispositivo_soluc_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (qt_min_dispositivo_soluc_w IS NOT NULL AND qt_min_dispositivo_soluc_w::text <> '') then
			qt_duracao_w	:= qt_duracao_w + qt_min_dispositivo_soluc_w;
		else
			qt_duracao_w	:= qt_duracao_w + (coalesce(qt_tempo_aplic_soluc_w,0) * 60);
		end if;

		end;
	end loop;
	close C02;

	qt_retorno_w	:= qt_duracao_w;

else
	select	max(a.qt_tempo_medic)
	into STRICT	qt_retorno_w
	from	paciente_setor_sim a
	where	a.nr_sequencia	= nr_seq_atendimento_p;
end if;

return	qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION qt_obter_dur_aplicacao_sim (ds_dia_ciclo_p text, nr_seq_prot_medic_p bigint, cd_protocolo_p bigint, nr_seq_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

