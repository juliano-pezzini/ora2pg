-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_secao_per_agenda ( nr_seq_agenda_p bigint, ie_diario_p text, ie_final_semana_p text, qt_intervalo_p bigint, dt_termino_p timestamp, ds_dias_p text) RETURNS bigint AS $body$
DECLARE


qt_dia_w		smallint;
nr_secao_w		smallint;
dt_agenda_w		timestamp;
dt_atual_w		timestamp;
dt_termino_w	timestamp;
cd_dia_semana_w	varchar(1);
dt_dia_semana_w	smallint;
ds_dias_w		varchar(255);
ie_gerar_dia_w	varchar(1);
qt_feriado_dia_w	bigint;
ie_agenda_feriado_w	varchar(1);
cd_agenda_w			bigint;


BEGIN

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
	begin
	/* Gett schedule data */

	select	dt_agenda,
			coalesce(max(nr_secao), 1)
	into STRICT	dt_agenda_w,
			nr_secao_w
	from	agenda_consulta
	where	nr_sequencia = nr_seq_agenda_p
	group by dt_agenda;
	
	/* Generate schedules per week or daily */

	if (ie_diario_p = 'S') then
		qt_dia_w	:= 1;
	elsif (ie_diario_p = 'N') and (qt_intervalo_p > 0) then
		qt_dia_w	:= qt_intervalo_p;
	elsif (ie_diario_p = 'N') then
		qt_dia_w	:= 7;
	end if;

	dt_termino_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_termino_p, coalesce(dt_agenda_w, trunc(clock_timestamp())));
	
	dt_atual_w  	:= dt_agenda_w + qt_dia_w;
	
	--SEARCH CODE. THE SCHEDULE TO VERIFY IF SCHEDULE IS ALLOWED ON DAYS THAT ARE HOLIDAYS
	select	coalesce(max(cd_agenda), 0)
	into STRICT	cd_agenda_w
	from	agenda_consulta
	where	nr_sequencia	= nr_seq_agenda_p;
	
	if (ds_dias_p IS NOT NULL AND ds_dias_p::text <> '') then
		select	substr(ds_dias_p,1,length(ds_dias_p) -2)
		into STRICT	ds_dias_w
		;
	end if;
	
	while(dt_atual_w <= dt_termino_w) loop
		begin
		
		select	obter_cod_dia_semana(dt_atual_w)
		into STRICT	dt_dia_semana_w
		;			
		
		if (ie_final_semana_p = 'N') and
				((dt_dia_semana_w = 1) or (dt_dia_semana_w = 7))then

				if (dt_dia_semana_w = 1) then
					dt_atual_w	:= dt_atual_w + 1;
				elsif (dt_dia_semana_w = 7) then
                    dt_atual_w	:= dt_atual_w + 2;
				end if;

				select	substr(Obter_Cod_Dia_Semana(dt_atual_w),1,1)
				into STRICT	dt_dia_semana_w
				;

        end if;

        ie_gerar_dia_w	:=  coalesce(obter_se_contido(dt_dia_semana_w, ds_dias_w), 'N');
		
		--VALIDATE IF THERE IS A HOLIDAY IN THE MIDDLE OF THE GENERATION PERIOD OF THE SCHEDULE DAYS
		select	coalesce(count(*), 0)		
		into STRICT	qt_feriado_dia_w
		from	feriado
		where	dt_feriado 			= PKG_DATE_UTILS.start_of(dt_atual_w, 'dd', 0)
		and		cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
		
		if (cd_agenda_w > 0)then			
			select 	coalesce(max(ie_feriado),'N')
			into STRICT	ie_agenda_feriado_w
			from	agenda
			where	cd_agenda = cd_agenda_w;			
		end if;
		
		if (qt_feriado_dia_w > 0) and (ie_gerar_dia_w = 'S') and (ie_agenda_feriado_w = 'N')then			
			ie_gerar_dia_w	:= 'N';			
		end if;
		
		if (ie_gerar_dia_w	= 'S') then
			nr_secao_w	:= nr_secao_w + 1;				
		end if;
		
		end;
	dt_atual_w	:= dt_atual_w + qt_dia_w;
	end loop;		
	
	end;
end if;
	

return nr_secao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_secao_per_agenda ( nr_seq_agenda_p bigint, ie_diario_p text, ie_final_semana_p text, qt_intervalo_p bigint, dt_termino_p timestamp, ds_dias_p text) FROM PUBLIC;

