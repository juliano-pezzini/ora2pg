-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION phi_obter_valor_usu_grupo ( dt_referencia_p timestamp, nm_usuario_grupo_p text, nr_seq_grupo_des_p bigint, nr_seq_grupo_sup_p bigint, ie_opcao_p bigint default 1) RETURNS bigint AS $body$
DECLARE


dt_inicio_mes_w		timestamp;
qt_reg_w		bigint;
vl_alocacao_w		double precision := 0;
vl_ausencia_w		double precision := 0;

/*	ie_opcao_p
	1 - Alocacao
	2 - Ausencia
	3 - Alocacao real (alocacao - ausencia)
*/
c01 CURSOR(dt_inicio_p timestamp, dt_fim_p timestamp) FOR
	SELECT	a.dt_base_vigencia,
		(SELECT	coalesce(max(x.pr_alocacao / 100),0)
		from	alocacao_usuario_grupo x
		where	x.nm_usuario_grupo = nm_usuario_grupo_p
		and	coalesce(x.nr_seq_grupo_des,coalesce(nr_seq_grupo_des_p,0)) = coalesce(nr_seq_grupo_des_p,0)
		and	coalesce(x.nr_seq_grupo_sup,coalesce(nr_seq_grupo_sup_p,0)) = coalesce(nr_seq_grupo_sup_p,0)
		and	a.dt_base_vigencia between x.dt_inicio_vigencia and coalesce(x.dt_fim_vigencia,a.dt_base_vigencia)) vl_alocacao,
		count(1) over () cnt
	from	(WITH RECURSIVE cte AS (

		select	dt_inicio_p + (level-1) dt_base_vigencia
		
		dt_inicio_p + (level-1) <= dt_fim_p
		  UNION ALL

		select	dt_inicio_p + (level-1) dt_base_vigencia
		
		dt_inicio_p + (level-1) <= dt_fim_p
		 JOIN cte c ON ()

) SELECT * FROM cte;
) a
	where	pkg_date_utils.is_business_day(a.dt_base_vigencia) = 1;

BEGIN

dt_inicio_mes_w := pkg_date_utils.start_of(dt_referencia_p,'month',0);

for c01_w in c01(dt_inicio_mes_w, trunc(dt_referencia_p)) loop
	begin
	vl_alocacao_w := vl_alocacao_w + c01_w.vl_alocacao;

	if (ie_opcao_p in (2,3)) and (c01_w.vl_alocacao > 0) then
		begin
		select	count(1)
		into STRICT	qt_reg_w
		from	ausencia_tasy a
		where	a.nm_usuario_ausente = nm_usuario_grupo_p
		and	coalesce(a.nr_seq_grupo_des,coalesce(nr_seq_grupo_des_p,0)) = coalesce(nr_seq_grupo_des_p,0)
		and	coalesce(a.nr_seq_grupo_sup,coalesce(nr_seq_grupo_sup_p,0)) = coalesce(nr_seq_grupo_sup_p,0)
		and ((a.nr_seq_grupo_des IS NOT NULL AND a.nr_seq_grupo_des::text <> '') or (a.nr_seq_grupo_sup IS NOT NULL AND a.nr_seq_grupo_sup::text <> ''))
		and	coalesce(a.cd_motivo_ausencia,'0') <> '16' --Loan
		and	c01_w.dt_base_vigencia between a.dt_inicio and a.dt_fim  LIMIT 1;

		if (qt_reg_w = 1) then
			vl_ausencia_w := vl_ausencia_w + c01_w.vl_alocacao;
		end if;
		end;
	end if;

	if (c01_w.cnt = c01%rowcount) then
		begin
		vl_alocacao_w := vl_alocacao_w / c01_w.cnt;

		if (vl_ausencia_w > 0) then
			vl_ausencia_w := vl_ausencia_w / c01_w.cnt;
		end if;
		
		if (coalesce(ie_opcao_p,1) = 1) then
			return vl_alocacao_w;
		elsif (ie_opcao_p = 2) then
			return vl_ausencia_w;
		elsif (ie_opcao_p = 3) and (vl_alocacao_w > vl_ausencia_w) then
			return vl_alocacao_w - vl_ausencia_w;
		end if;
		end;
	end if;
	end;
end loop;

return 0;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION phi_obter_valor_usu_grupo ( dt_referencia_p timestamp, nm_usuario_grupo_p text, nr_seq_grupo_des_p bigint, nr_seq_grupo_sup_p bigint, ie_opcao_p bigint default 1) FROM PUBLIC;

