-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_treatment_status ( nr_seq_tumor_p rxt_tumor.nr_sequencia%TYPE ) RETURNS varchar AS $body$
DECLARE


nr_count_w smallint;


BEGIN

    /* Tratamento Cancelado */

    SELECT COUNT(tratamento.nr_sequencia)
    INTO STRICT nr_count_w
    FROM
        rxt_tumor tumor,
        rxt_tratamento tratamento
    WHERE tumor.nr_sequencia = nr_seq_tumor_p
    AND tratamento.nr_seq_tumor = tumor.nr_sequencia
    AND NOT EXISTS (
        SELECT nr_sequencia
        FROM rxt_tratamento
        WHERE rxt_tratamento.nr_seq_tumor = nr_seq_tumor_p
        AND coalesce(rxt_tratamento.dt_cancelamento::text, '') = ''
    );

    IF (nr_count_w > 0) THEN
        RETURN 'TC';
    END IF;

    /* Tratamento Finalizado */

    SELECT COUNT(tratamento.nr_sequencia)
    INTO STRICT nr_count_w
    FROM
        rxt_tumor tumor,
        rxt_tratamento tratamento
    WHERE tumor.nr_sequencia = nr_seq_tumor_p
    AND tratamento.nr_seq_tumor = tumor.nr_sequencia;

    if (nr_count_w > 0) then
        SELECT COUNT(tratamento.nr_sequencia)
        INTO STRICT nr_count_w
        FROM
            rxt_tumor tumor,
            rxt_tratamento tratamento
        WHERE tumor.nr_sequencia = nr_seq_tumor_p
        AND tratamento.nr_seq_tumor = tumor.nr_sequencia
        AND substr(rxt_tratamento_finalizado(tratamento.nr_sequencia),1,1) = 'N';

        IF (nr_count_w = 0) THEN
    
            RETURN 'TF';

        END IF;
    end if;

    /* Aguardando Autorizacao */

    SELECT COUNT(nr_sequencia)
    INTO STRICT nr_count_w
    FROM rxt_tratamento tratamento
    WHERE tratamento.nr_seq_tumor = nr_seq_tumor_p
    AND coalesce(tratamento.dt_liberacao::text, '') = ''
    AND EXISTS (
        SELECT 1
        FROM autorizacao_convenio
        WHERE nr_seq_rxt_tratamento = tratamento.nr_sequencia
    )
    AND obter_se_tratamento_autorizado(tratamento.nr_sequencia) = 'N';

    IF (nr_count_w > 0) THEN
        RETURN 'AA';
    END IF;

    /* Em planejamento */

    SELECT COUNT(nr_sequencia)
    INTO STRICT nr_count_w
    FROM rxt_tratamento tratamento
    WHERE tratamento.nr_seq_tumor = nr_seq_tumor_p
    AND coalesce(tratamento.dt_liberacao::text, '') = ''
    AND NOT EXISTS (
        SELECT 1
        FROM autorizacao_convenio
        WHERE nr_seq_rxt_tratamento = tratamento.nr_sequencia
    )
    AND (coalesce(tratamento.ie_replanejamento::text, '') = '' OR tratamento.ie_replanejamento = 'N');

    IF (nr_count_w > 0) THEN
        RETURN 'EP';
    END IF;

    /* Tratamento em replanejamento */

    SELECT COUNT(nr_sequencia)
    INTO STRICT nr_count_w
    FROM rxt_tratamento tratamento
    WHERE tratamento.nr_seq_tumor = nr_seq_tumor_p
    AND coalesce(tratamento.dt_liberacao::text, '') = ''
    AND NOT EXISTS (
        SELECT 1
        FROM autorizacao_convenio
        WHERE nr_seq_rxt_tratamento = tratamento.nr_sequencia
    )
    AND tratamento.ie_replanejamento = 'S';

    IF (nr_count_w > 0) THEN
        RETURN 'TR';
    END IF;

    /* Agendamento de tratamento pendente */

    SELECT COUNT(tratamento.nr_sequencia)
    INTO STRICT nr_count_w
    FROM
        rxt_tumor tumor,
        rxt_tratamento tratamento
    WHERE tumor.nr_sequencia = nr_seq_tumor_p
    AND tratamento.nr_seq_tumor = tumor.nr_sequencia
    AND (tratamento.dt_liberacao IS NOT NULL AND tratamento.dt_liberacao::text <> '')
    AND rxt_obter_se_agendamento(tumor.cd_pessoa_fisica, tumor.nr_sequencia) = 'N';

    IF (nr_count_w > 0) THEN
        RETURN 'AP';
    END IF;

    /* Tratamento em andamento */

    SELECT COUNT(tratamento.nr_sequencia)
    INTO STRICT nr_count_w
    FROM
        rxt_tumor tumor,
        rxt_tratamento tratamento
    WHERE tumor.nr_sequencia = nr_seq_tumor_p
    AND tratamento.nr_seq_tumor = tumor.nr_sequencia
    AND (tratamento.dt_liberacao IS NOT NULL AND tratamento.dt_liberacao::text <> '')
    AND rxt_obter_se_agendamento(tumor.cd_pessoa_fisica, tumor.nr_sequencia) = 'S'
    AND rx_obter_se_trat_canc(tumor.nr_sequencia) = 'N'
    AND rxt_possui_agenda_fases_trat(tumor.nr_sequencia) = 'N'
    AND EXISTS (
        SELECT 1
        FROM rxt_agenda agenda
        WHERE agenda.nr_seq_tratamento = tratamento.nr_sequencia
        AND agenda.ie_status_agenda IN ('A','AP','E','T')
    );

    IF (nr_count_w > 0) THEN
        RETURN 'TA';
    END IF;

    /* Inicio de tratamento pendente */

    SELECT COUNT(tratamento.nr_sequencia)
    INTO STRICT nr_count_w
    FROM
        rxt_tumor tumor,
        rxt_tratamento tratamento
    WHERE tumor.nr_sequencia = nr_seq_tumor_p
    AND tratamento.nr_seq_tumor = tumor.nr_sequencia
    AND (tratamento.dt_liberacao IS NOT NULL AND tratamento.dt_liberacao::text <> '')
    AND rxt_obter_se_agendamento(tumor.cd_pessoa_fisica, tumor.nr_sequencia) = 'S'
    AND rx_obter_se_trat_canc(tumor.nr_sequencia) = 'N'
    AND rxt_possui_agenda_fases_trat(tumor.nr_sequencia) = 'N'
    AND NOT EXISTS (
        SELECT 1
        FROM rxt_agenda agenda
        WHERE agenda.nr_seq_tratamento = tratamento.nr_sequencia
        AND agenda.ie_status_agenda IN ('A','AP','E','T')
    );

    IF (nr_count_w > 0) THEN
        RETURN 'IP';
    END IF;

    RETURN '';

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_treatment_status ( nr_seq_tumor_p rxt_tumor.nr_sequencia%TYPE ) FROM PUBLIC;

