-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_procedimento_regulacao (ie_tipo_p text, cd_especialidade_p bigint default null, cd_medico_dest_p text default null, cd_material_exame_p text default null, nr_seq_exame_p bigint default null, ie_origem_proced_p bigint default null, nr_seq_motivo_solic_ext_p bigint default null, cd_material_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_seq_exame_lab_p bigint default null, cd_procedimento_p bigint default null, cd_tipo_solicitacao_p text default null, cd_tipo_vaga_p text default null, ie_opcao_p text default 'P', ie_classificacao_p text default null, nr_seq_equip_control_p bigint default null) RETURNS varchar AS $body$
DECLARE

				

nr_seq_regra_regu_w bigint;

cd_proc_w	varchar(255);	
cd_proced_operadora_w	varchar(255);
return_w	varchar(255);


nr_seq_regra_proc_w			bigint	;
cd_grupo_proc_w				bigint;
cd_especialidade_w			bigint;
cd_area_procedimento_w		bigint;
nr_seq_grupo_exame_lab_w	bigint;
ie_origem_proced_w			bigint;

nr_seq_tipo_equip_w			man_tipo_equipamento.nr_sequencia%type;	


C01 CURSOR FOR
	SELECT 	b.nr_sequencia
	from	regra_regulacao a,
			regra_regulacao_conversao b
	where	a.nr_sequencia = b.nr_seq_regra_reg
	and		a.ie_tipo = 'SE'
	and		COALESCE(a.cd_procedimento, COALESCE(cd_procedimento_p,0))			= COALESCE(cd_procedimento_p,0)
	and		((coalesce(a.ie_origem_proced::text, '') = '') or (a.ie_origem_proced = COALESCE(ie_origem_proced_p,a.ie_origem_proced)))
	and		COALESCE(a.cd_area_procedimento, COALESCE(cd_area_procedimento_w,0))	= COALESCE(cd_area_procedimento_w,0)
	and		COALESCE(a.cd_espec_proc, COALESCE(cd_especialidade_w,0))		= COALESCE(cd_especialidade_w,0)
	and		COALESCE(a.cd_grupo_proc, COALESCE(cd_grupo_proc_w,0))			= COALESCE(cd_grupo_proc_w,0)
	and		COALESCE(a.cd_grupo_proc, COALESCE(cd_grupo_proc_w,0))			= COALESCE(cd_grupo_proc_w,0)
	and		COALESCE(a.nr_seq_proc_interno, COALESCE(nr_seq_proc_interno_p,0))		= COALESCE(nr_seq_proc_interno_p,0)
	and		COALESCE(a.nr_seq_grupo, COALESCE(nr_seq_grupo_exame_lab_w,0))	= COALESCE(nr_seq_grupo_exame_lab_w,0)
	and		COALESCE(a.nr_seq_exame, COALESCE(nr_seq_exame_lab_p,0))			= COALESCE(nr_seq_exame_lab_p,0)
	and		COALESCE(a.nr_seq_exame_cad, COALESCE(nr_seq_exame_p,0))			= COALESCE(nr_seq_exame_p,0)
	and		COALESCE(a.ie_classificacao, COALESCE(ie_classificacao_p,'0'))			= COALESCE(ie_classificacao_p,'0')
	and		((coalesce(trim(both a.cd_material_exame)::text, '') = '') or (trim(both a.cd_material_exame) = trim(both cd_material_exame_p)))
	order by   COALESCE(a.cd_procedimento, 0),
				COALESCE(a.cd_grupo_proc, 0),
				COALESCE(a.cd_espec_proc, 0),
				COALESCE(a.cd_area_procedimento, 0),
				COALESCE(a.nr_seq_proc_interno,0),
				COALESCE(a.nr_seq_grupo,0),
				COALESCE(a.nr_seq_exame,0),
				COALESCE(a.nr_seq_exame_cad,0),
				COALESCE(a.ie_classificacao,'0');

C02 CURSOR FOR
	SELECT 	b.nr_sequencia
	from	regra_regulacao a,
			regra_regulacao_conversao b
	where	a.nr_sequencia = b.nr_seq_regra_reg
	and		a.ie_tipo = 'SV'
	and		COALESCE(a.ie_solicitacao, COALESCE(cd_tipo_solicitacao_p, ''))			= COALESCE(cd_tipo_solicitacao_p, '')
	and		COALESCE(a.ie_tipo_vaga, COALESCE(cd_tipo_vaga_p, ''))			= COALESCE(cd_tipo_vaga_p, '')
	order by   COALESCE(a.ie_solicitacao, ''),
				COALESCE(a.ie_tipo_vaga, '');
				
C03 CURSOR FOR
	SELECT 	b.nr_sequencia
	from	regra_regulacao a,
			regra_regulacao_conversao b
	where	a.nr_sequencia = b.nr_seq_regra_reg
	and		a.ie_tipo = 'SH'
	and		COALESCE(a.ie_classificacao, COALESCE(ie_classificacao_p, ''))			= COALESCE(ie_classificacao_p, '')
	order by   COALESCE(a.ie_classificacao, '');
	
C04 CURSOR FOR
	SELECT 	b.nr_sequencia
	from	regra_regulacao a,
			regra_regulacao_conversao b
	where	a.nr_sequencia = b.nr_seq_regra_reg
	and		a.ie_tipo = 'EQ'
	and		COALESCE(a.nr_seq_equipamento, COALESCE(nr_seq_equip_control_p, 0))			= COALESCE(nr_seq_equip_control_p, 0)
	and		COALESCE(a.nr_seq_tipo_equip, COALESCE(nr_seq_tipo_equip_w, 0))				= COALESCE(nr_seq_tipo_equip_w, 0)
	order by   COALESCE(a.nr_seq_tipo_equip, COALESCE(a.nr_seq_equipamento, 0));
				


BEGIN

if ((ie_tipo_p = 'EN') or (ie_tipo_p = 'EV')) then

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_regu_w
	from	regra_regulacao
	where	ie_tipo = ie_tipo_p
	and		coalesce(cd_especialidade,coalesce(cd_especialidade_p,0)) = coalesce(cd_especialidade_p,0)
	and		coalesce(cd_medico_dest,coalesce(cd_medico_dest_p,0)) = coalesce(cd_medico_dest_p,0);

elsif (ie_tipo_p = 'SE') then


	select	max(cd_grupo_proc),
			max(cd_especialidade),
			max(cd_area_procedimento)
	into STRICT	cd_grupo_proc_w,
			cd_especialidade_w,
			cd_area_procedimento_w
	from	estrutura_procedimento_v
	where	cd_procedimento		= cd_procedimento_p
	and		ie_origem_proced	= ie_origem_proced_p;

	select	max(nr_seq_grupo)
	into STRICT	nr_seq_grupo_exame_lab_w
	from	exame_laboratorio
	where	nr_seq_exame	= nr_seq_exame_lab_p;
	
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_regra_regu_w := nr_seq_regra_proc_w;
		end;
	end loop;
	close C01;

elsif (ie_tipo_p = 'TC') then
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_regu_w
	from	regra_regulacao
	where	ie_tipo = ie_tipo_p
	and		nr_seq_motivo_solic_externa = nr_seq_motivo_solic_ext_p;

elsif (ie_tipo_p = 'EQ') then

	select	max(c.nr_sequencia)
	into STRICT	nr_seq_tipo_equip_w
	from	man_equipamento b,
			man_tipo_equipamento c
	where	b.nr_seq_tipo_equip = c.nr_sequencia
	and		b.nr_sequencia = nr_seq_equip_control_p;
		
	open C04;
	loop
	fetch C04 into	
		nr_seq_regra_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		nr_seq_regra_regu_w := nr_seq_regra_proc_w;
		end;
	end loop;
	close C04;
			

elsif (ie_tipo_p = 'ME') then
	
	
	select 	max(b.nr_sequencia)
	into STRICT	nr_seq_regra_regu_w
	from	regra_regulacao a,
			regra_regulacao_conversao b
	where	a.nr_sequencia = b.nr_seq_regra_reg
	and		ie_tipo = ie_tipo_p
	and		a.cd_material = cd_material_p;
	
	if ( coalesce(nr_seq_regra_regu_w::text, '') = '') then
	
		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_regu_w
		from	regra_regulacao
		where	ie_tipo = ie_tipo_p
		and		cd_material = cd_material_p;
		
		if (nr_seq_regra_regu_w IS NOT NULL AND nr_seq_regra_regu_w::text <> '') then
		
			return_w := cd_material_p;
		
		end if;
		
	
	else
	
			Select  max(cd_proced_operadora)
			into STRICT	cd_proced_operadora_w
			from	regra_regulacao_conversao
			where	nr_Sequencia = nr_seq_regra_regu_w;
			
			return_w :=  cd_proced_operadora_w;
	
	end if;
	
	
	
elsif (ie_tipo_p =  'CPOE') then	

	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_regu_w
	from	regra_regulacao
	where	ie_tipo = ie_tipo_p
	and		nr_seq_proc_interno = nr_seq_proc_interno_p
	and 	cd_material_exame = cd_material_exame_p;

elsif (ie_tipo_p =  'SV') then	

	open C02;
	loop
	fetch C02 into	
		nr_seq_regra_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_seq_regra_regu_w := nr_seq_regra_proc_w;
		end;
	end loop;
	close C02;
	
elsif (ie_tipo_p =  'SH') then	

	open C03;
	loop
	fetch C03 into	
		nr_seq_regra_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		nr_seq_regra_regu_w := nr_seq_regra_proc_w;
		end;
	end loop;
	close C03;

end if;

if ( ie_tipo_p in ('SV','SE','SH','EQ') ) then

	select	max(cd_procedimento),
			max(cd_proced_operadora),
			max(ie_origem_proced)
	into STRICT 	cd_proc_w,
			cd_proced_operadora_w,
			ie_origem_proced_w
	from	regra_regulacao_conversao 	
	where	nr_sequencia = nr_seq_regra_regu_w;
	
else

	select	max(a.cd_procedimento),
			max(a.cd_proced_operadora),
			max(a.ie_origem_proced)
	into STRICT 	cd_proc_w,
			cd_proced_operadora_w,
			ie_origem_proced_w
	from	regra_regulacao_conversao a 	
	where	a.nr_sequencia = ( SELECT max(b.nr_sequencia)
							   from		regra_regulacao_conversao b
							   where	NR_SEQ_REGRA_REG = nr_seq_regra_regu_w);

end if;

if (COALESCE(ie_opcao_p,'P') = 'P') then

    return_w := COALESCE(cd_proc_w, cd_proced_operadora_w);

elsif ( COALESCE(ie_opcao_p,'P') = 'I') and (cd_proc_w IS NOT NULL AND cd_proc_w::text <> '') then

		return_w := ie_origem_proced_w;

end if;

return	return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_procedimento_regulacao (ie_tipo_p text, cd_especialidade_p bigint default null, cd_medico_dest_p text default null, cd_material_exame_p text default null, nr_seq_exame_p bigint default null, ie_origem_proced_p bigint default null, nr_seq_motivo_solic_ext_p bigint default null, cd_material_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_seq_exame_lab_p bigint default null, cd_procedimento_p bigint default null, cd_tipo_solicitacao_p text default null, cd_tipo_vaga_p text default null, ie_opcao_p text default 'P', ie_classificacao_p text default null, nr_seq_equip_control_p bigint default null) FROM PUBLIC;

