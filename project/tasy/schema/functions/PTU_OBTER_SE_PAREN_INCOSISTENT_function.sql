-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ptu_obter_se_paren_incosistent ( nr_seq_empresa_p bigint, cd_familia_p bigint, nr_seq_parentesco_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(10);
nr_seq_regra_cons_paren_w	bigint;
cd_dependencia_w		bigint;
nr_seq_parentesco_w		bigint;
qt_registros_w			bigint;
ie_sexo_w			varchar(10);
qt_benef_existente_w		bigint := 0;
qt_beneficiario_w		bigint;
ds_w			varchar(255);

C01 CURSOR FOR
	SELECT	cd_dependencia,
		ie_sexo
	from	ptu_intercambio_benef
	where	nr_seq_empresa	= nr_seq_empresa_p
	and	cd_familia	= cd_familia_p
	and	cd_dependencia	<> 0;


BEGIN

ds_retorno_w	:= 'N';

select	max(b.nr_sequencia)
into STRICT	nr_seq_regra_cons_paren_w
from	ptu_consist_parentesco	b
where	exists (	SELECT	1
			from	PTU_CONSIST_GRAU_PAREN	a
			where	a.nr_seq_regra		= b.nr_sequencia
			and	a.nr_seq_parentesco	= nr_seq_parentesco_p);

if (nr_seq_regra_cons_paren_w IS NOT NULL AND nr_seq_regra_cons_paren_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		cd_dependencia_w,
		ie_sexo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_registros_w
		from	grau_parentesco
		where	cd_ptu	= cd_dependencia_w;

		/*Caso houver mais q 2 cadastro de parentesco do código do PTU, então busca da regra de conversão*/

		if (qt_registros_w > 1) then
			nr_seq_parentesco_w	:= ptu_conversao_obter_parentesco(cd_dependencia_w,ie_sexo_w);
		end if;

		if (coalesce(nr_seq_parentesco_w::text, '') = '') then
			begin
			select	max(nr_sequencia)
			into STRICT	nr_seq_parentesco_w
			from	grau_parentesco
			where	cd_ptu	= cd_dependencia_w;
			exception
			when others then
				nr_seq_parentesco_w	:= null;
			end;
		end if;

		if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') and (nr_seq_parentesco_p = nr_seq_parentesco_w) then
			qt_benef_existente_w	:= qt_benef_existente_w + 1;
		end if;

		nr_seq_parentesco_w	:= null;
		end;
	end loop;
	close C01;

	select	qt_beneficiario
	into STRICT	qt_beneficiario_w
	from	ptu_consist_parentesco
	where	nr_sequencia	= nr_seq_regra_cons_paren_w;

	if (qt_benef_existente_w > qt_beneficiario_w) then
		ds_retorno_w	:= 'S';
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ptu_obter_se_paren_incosistent ( nr_seq_empresa_p bigint, cd_familia_p bigint, nr_seq_parentesco_p bigint) FROM PUBLIC;

