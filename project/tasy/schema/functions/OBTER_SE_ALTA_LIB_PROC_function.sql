-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_alta_lib_proc ( cd_motivo_alta_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

				

qt_existe_regra_w		integer;	
qt_existe_regra_parto_w		bigint;
cd_motivo_alta_w		integer;	
ie_liberado_w			varchar(1)	:= 'X';
ie_consist_proced_parto_w	varchar(1);	
ie_nascidos_w			varchar(1);
c01 CURSOR FOR
SELECT	a.cd_motivo_alta
from	regra_motivo_alta_proc a
where	exists (select 1
		from	procedimento_paciente x
		where	x.nr_atendimento = nr_atendimento_p
		and 	x.cd_procedimento  = a.cd_procedimento
		and	x.ie_origem_proced = a.ie_origem_proced);
	

BEGIN

ie_consist_proced_parto_w := Obter_param_Usuario(3111, 263, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_consist_proced_parto_w);	

begin
	select	count(*)
	into STRICT	qt_existe_regra_w
	from	regra_motivo_alta_proc
	where	cd_motivo_alta = cd_motivo_alta_p  LIMIT 1;
exception
	when others then
		qt_existe_regra_w := 0;
end;

if (qt_existe_regra_w > 0) then
	open C01;
	loop
	fetch C01 into	
		cd_motivo_alta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		if (cd_motivo_alta_w = cd_motivo_alta_p) then
			ie_liberado_w	:=	'S';			
		end if;
		
		if (ie_liberado_w <> 'S') and (cd_motivo_alta_w <> cd_motivo_alta_p) then
			ie_liberado_w	:=	'N';
		end if;
		
		end;
	end loop;
	close C01;
else	
	ie_liberado_w := 'S';
end if;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_nascidos_w
from	nascimento
where	nr_atendimento = nr_atendimento_p;	
	
if (ie_consist_proced_parto_w = 'P' and ie_nascidos_w = 'S') THEN
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_liberado_w
	from	regra_motivo_alta_proc a
	where	a.cd_motivo_alta = cd_motivo_alta_p
	and	coalesce(ie_proced_parto,'N') = 'S'
	and coalesce(ie_situacao,'A') = 'A'
	and exists (SELECT 1 
				from	procedimento_paciente x
				where	x.nr_atendimento = nr_atendimento_p
				and 	x.cd_procedimento  = a.cd_procedimento
				and	x.ie_origem_proced = a.ie_origem_proced);
elsif (ie_consist_proced_parto_w = 'S' and ie_nascidos_w = 'S') then
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_liberado_w
	from	regra_motivo_alta_proc
	where	cd_motivo_alta = cd_motivo_alta_p
	and	coalesce(ie_proced_parto,'N') = 'S';
end if;
return	ie_liberado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_alta_lib_proc ( cd_motivo_alta_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

