-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_emails_envio ( ie_origem_p text, qt_emails_selecoinar_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) RETURNS bigint AS $body$
DECLARE

 
nr_seq_process_w			pls_email.nr_seq_processamento%type;
tb_nr_seq_process_w			pls_util_cta_pck.t_number_table;
qt_registro_w				bigint;

c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from (	SELECT	nr_sequencia 
		from	pls_email 
		where	ie_status 		= 'P' 
		and	cd_estabelecimento	= cd_estabelecimento_p 
		and	ie_origem		= ie_origem_p 
		order by coalesce(cd_prioridade,5),nr_sequencia asc) alias1 LIMIT (qt_emails_selecoinar_p);
	
c02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_email 
	where	ie_status 		= 'P' 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_origem		= ie_origem_p 
	order by coalesce(cd_prioridade,5),nr_sequencia asc;
	
/* 
Prioridade 
1        Imediata 
2        Alta prioridade 
3        MÃ©dia prioridade 
4        Baixa prioridade 
5        Sem prioridade 
*/
 

BEGIN 
 
select	count(1) 
into STRICT	qt_registro_w 
from	pls_email 
where	ie_status 		= 'P' 
and	cd_estabelecimento	= cd_estabelecimento_p 
and	ie_origem		= ie_origem_p;
 
--Verifica se tem email pendente 
if (qt_registro_w > 0) then 
	select	nextval('pls_email_process_seq') 
	into STRICT	nr_seq_process_w 
	;
 
	--Limpa a tabela 
	tb_nr_seq_process_w.delete;
	--Com limitador de quantidade para consulta 
	if (coalesce(qt_emails_selecoinar_p,0) > 0) then 
		--Abre cursor 
		open c01;
		loop 
		fetch c01 bulk collect into tb_nr_seq_process_w 
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_seq_process_w.count = 0;
			-- Se encontrou algum registro faz o update 
			forall i in tb_nr_seq_process_w.first..tb_nr_seq_process_w.last 
				update 	pls_email 
				set	ie_status 		= 'EP', 
					nr_seq_processamento 	= nr_seq_process_w, 
					nm_usuario		= nm_usuario_p 
				where	nr_sequencia		= tb_nr_seq_process_w(i);
			commit;	
 
		end loop;
		close c01;
	--Sem limitador de quantidade 
	else 
		--Abre cursor 
		open c02;
		loop 
		fetch c02 bulk collect into tb_nr_seq_process_w 
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_seq_process_w.count = 0;
			-- Se encontrou algum registro faz o update 
			forall i in tb_nr_seq_process_w.first..tb_nr_seq_process_w.last 
				update 	pls_email 
				set	ie_status 		= 'EP', 
					nr_seq_processamento 	= nr_seq_process_w, 
					nm_usuario		= nm_usuario_p 
				where	nr_sequencia		= tb_nr_seq_process_w(i);
			commit;	
		end loop;
		close c02;
	end if;
end if;
--Limpa a tabela 
tb_nr_seq_process_w.delete;
--retorna sequencial de processamento 
return nr_seq_process_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obter_emails_envio ( ie_origem_p text, qt_emails_selecoinar_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

