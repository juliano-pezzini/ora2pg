-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION spa_obter_valores ( nr_seq_spa_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


vl_retorno_w		double precision := 0;
vl_conta_w		double precision := 0;
vl_desconto_w		double precision := 0;
vl_original_w		double precision := 0;
vl_desconto_ant_w	double precision := 0;
vl_desconto_ant_tot_w	double precision := 0;
vl_desconto_atual_w	double precision := 0;
vl_desconto_acum_w	double precision := 0;
vl_desconto_tit_w	double precision := 0;
vl_perc_desc_acum_w	double precision := 0;
cd_classificacao_w	integer;
nr_atendimento_w	bigint;
nr_interno_conta_w	bigint;
nr_interno_conta_ant_w	bigint := 0;
nr_seq_nf_w		bigint;
nr_titulo_w		bigint;
nr_seq_tipo_w		bigint;
ie_tipo_convenio_w	smallint;
nr_seq_protocolo_w	bigint;
nr_seq_protocolo_ant_w	bigint := 0;
nr_interno_conta_nf_w	bigint;
nr_interno_conta_tit_w	bigint;
ds_pedido_parecer_w	spa_parecer.ds_pedido_parecer%type;
ds_resposta_parecer_w	spa_parecer.ds_resposta_parecer%type;
ie_desconto_data_ctb_w	varchar(1):='N';
dt_contabil_w		spa_movimento.dt_contabil%type;
vl_desc_w		double precision := 0;
vl_abatimento_w		double precision := 0;
ie_classif_desconto_w 	conta_paciente_desconto.ie_classificacao%type;
vl_abatimento_tot_w	double precision := 0;
vl_abatimento_acum_w	double precision := 0;
vl_abatimento_atual_w	double precision := 0;
vl_desc_apos_dtcontabil_w	double precision := 0;

C01 CURSOR FOR
	SELECT	cd_classificacao,
		nr_atendimento,
		nr_interno_conta,
		nr_seq_nf,
		nr_titulo,
		nr_seq_protocolo,
		dt_contabil
	from	spa_movimento
	where	nr_seq_spa = nr_seq_spa_p
	order by nr_interno_conta,
		nr_seq_protocolo;

C02 CURSOR FOR
	SELECT	a.nr_interno_conta
	from	conta_paciente a,
		atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	a.cd_estabelecimento = b.cd_estabelecimento
	and	a.nr_atendimento = nr_atendimento_w
	and	(((ie_tipo_convenio_w = 1) and (obter_tipo_convenio(a.cd_convenio_parametro) = 1)) or
		((ie_tipo_convenio_w = 2) and (obter_tipo_convenio(a.cd_convenio_parametro) <> 1)))
	and	coalesce(a.ie_cancelamento::text, '') = '';

C03 CURSOR FOR
	SELECT	nr_interno_conta
	from	conta_paciente
	where	nr_seq_protocolo = nr_seq_protocolo_w;
/*
ie_opcao_p:
VOR - Valor Original
DAN - Desconto Anterior
DAT - Desconto Atual
DAC - Desconto Acumulado
PDO - Percentual (  Desconto Acumulado X Valor Original)
AAN - Abatimento anterior
AAC-  Abatimento acumulado
AAT-  Abatimento atual
*/
BEGIN

ie_desconto_data_ctb_w := obter_param_usuario(7053, 22, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_desconto_data_ctb_w);

select	max(nr_seq_tipo),
	max(ie_tipo_convenio)
into STRICT	nr_seq_tipo_w,
	ie_tipo_convenio_w
from	spa
where	nr_sequencia = nr_seq_spa_p;

select	max(ds_pedido_parecer),
	max(ds_resposta_parecer)
into STRICT	ds_pedido_parecer_w,
	ds_resposta_parecer_w
from	spa_parecer
where	nr_seq_spa = nr_seq_spa_p;

open C01;
loop
fetch C01 into
	cd_classificacao_w,
	nr_atendimento_w,
	nr_interno_conta_w,
	nr_seq_nf_w,
	nr_titulo_w,
	nr_seq_protocolo_w,
	dt_contabil_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (cd_classificacao_w = 1) then

		open C02;
		loop
		fetch C02 into
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			vl_conta_w	:= 0;
			vl_desconto_w	:= 0;
			vl_abatimento_w := 0;
			vl_desc_apos_dtcontabil_w := 0;

			select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
			into STRICT	vl_conta_w
			from	conta_paciente
			where	nr_interno_conta = nr_interno_conta_w;

			select	coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='D' THEN vl_desconto  ELSE 0 END ),0),
				coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='A' THEN vl_desconto  ELSE 0 END ),0)
			into STRICT 	vl_desconto_w,
				vl_abatimento_w
			from	conta_paciente_desconto
			where	nr_interno_conta = nr_interno_conta_w
			and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_desconto <= coalesce(dt_contabil_w,dt_desconto)));

			if (coalesce(ie_desconto_data_ctb_w,'N') = 'S') then
				select	coalesce(sum(vl_desconto),0)
				into STRICT 	vl_desc_apos_dtcontabil_w
				from	conta_paciente_desconto
				where	nr_interno_conta = nr_interno_conta_w
				and (dt_desconto >= coalesce(dt_contabil_w,dt_desconto));
			end if;

			select	coalesce(sum(vl_descontos),0)
			into STRICT	vl_desconto_tit_w
			from	titulo_receber a,
				titulo_receber_liq b
			where	a.nr_titulo = b.nr_titulo
			and	a.nr_interno_conta = nr_interno_conta_w
			and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (b.dt_recebimento <= coalesce(dt_contabil_w, b.dt_recebimento)));

			vl_original_w		:= vl_original_w + vl_conta_w + vl_desc_apos_dtcontabil_w;
			vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
			vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w + vl_desconto_tit_w;
			vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;
			end;
		end loop;
		close C02;

	elsif (cd_classificacao_w = 2) then

		vl_conta_w	:= 0;
		vl_desconto_w	:= 0;
		vl_abatimento_w := 0;
		vl_desc_apos_dtcontabil_w := 0;

		select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
		into STRICT	vl_conta_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_w;

		select	coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='D' THEN vl_desconto  ELSE 0 END ),0),
			coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='A' THEN vl_desconto  ELSE 0 END ),0)
		into STRICT 	vl_desconto_w,
			vl_abatimento_w
		from	conta_paciente_desconto
		where	nr_interno_conta = nr_interno_conta_w
		and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_desconto <= coalesce(dt_contabil_w,dt_desconto)));

 		if (coalesce(ie_desconto_data_ctb_w,'N') = 'S') then
			select	coalesce(sum(vl_desconto),0)
			into STRICT 	vl_desc_apos_dtcontabil_w
			from	conta_paciente_desconto
			where	nr_interno_conta = nr_interno_conta_w
			and (dt_desconto >= coalesce(dt_contabil_w,dt_desconto));
		end if;

		select	coalesce(sum(vl_descontos),0)
		into STRICT	vl_desconto_tit_w
		from	titulo_receber a,
			titulo_receber_liq b
		where	a.nr_titulo = b.nr_titulo
		and	a.nr_interno_conta = nr_interno_conta_w
		and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (b.dt_recebimento <= coalesce(dt_contabil_w, b.dt_recebimento)));

		vl_original_w		:= vl_original_w + vl_conta_w + vl_desc_apos_dtcontabil_w;
		vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
		vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w + vl_desconto_tit_w;
		vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;
	elsif (cd_classificacao_w = 3) then

		select	coalesce(max(nr_interno_conta),0),
			coalesce(max(nr_seq_protocolo),0)
		into STRICT	nr_interno_conta_w,
			nr_seq_protocolo_w
		from	nota_fiscal
		where	nr_sequencia = nr_seq_nf_w;

		if (nr_interno_conta_w > 0) then

			vl_conta_w	:= 0;
			vl_desconto_w	:= 0;
			vl_abatimento_w := 0;
			vl_desc_apos_dtcontabil_w := 0;

			select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
			into STRICT	vl_conta_w
			from	conta_paciente
			where	nr_interno_conta = nr_interno_conta_w;

			select	coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='D' THEN vl_desconto  ELSE 0 END ),0),
				coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='A' THEN vl_desconto  ELSE 0 END ),0)
			into STRICT 	vl_desconto_w,
				vl_abatimento_w
			from	conta_paciente_desconto
			where	nr_interno_conta = nr_interno_conta_w
			and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_desconto <= coalesce(dt_contabil_w,dt_desconto)));

			if (coalesce(ie_desconto_data_ctb_w,'N') = 'S') then
				select	coalesce(sum(vl_desconto),0)
				into STRICT 	vl_desc_apos_dtcontabil_w
				from	conta_paciente_desconto
				where	nr_interno_conta = nr_interno_conta_w
				and (dt_desconto >= coalesce(dt_contabil_w,dt_desconto));
			end if;

			select	coalesce(sum(vl_descontos),0)
			into STRICT	vl_desconto_tit_w
			from	titulo_receber a,
				titulo_receber_liq b
			where	a.nr_titulo = b.nr_titulo
			and	a.nr_interno_conta = nr_interno_conta_w
			and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (b.dt_recebimento <= coalesce(dt_contabil_w, b.dt_recebimento)));

			vl_original_w		:= vl_original_w + vl_conta_w + vl_desc_apos_dtcontabil_w;
			vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
			vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w + vl_desconto_tit_w;
			vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;

		elsif (nr_seq_protocolo_w > 0) then

			open C03;
			loop
			fetch C03 into
				nr_interno_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				vl_conta_w	:= 0;
				vl_desconto_w	:= 0;
				vl_abatimento_w	:= 0;
				vl_desc_apos_dtcontabil_w := 0;

				select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
				into STRICT	vl_conta_w
				from	conta_paciente
				where	nr_interno_conta = nr_interno_conta_w;

			select	coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='D' THEN vl_desconto  ELSE 0 END ),0),
				coalesce(sum(CASE WHEN coalesce(ie_classificacao,'D')='A' THEN vl_desconto  ELSE 0 END ),0)
				into STRICT 	vl_desconto_w,
					vl_abatimento_w
				from	conta_paciente_desconto
				where	nr_interno_conta = nr_interno_conta_w
				and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_desconto <= coalesce(dt_contabil_w,dt_desconto)));

				if (coalesce(ie_desconto_data_ctb_w,'N') = 'S') then
					select	coalesce(sum(vl_desconto),0)
					into STRICT 	vl_desc_apos_dtcontabil_w
					from	conta_paciente_desconto
					where	nr_interno_conta = nr_interno_conta_w
					and (dt_desconto >= coalesce(dt_contabil_w,dt_desconto));
				end if;

				select	coalesce(sum(vl_descontos),0)
				into STRICT	vl_desconto_tit_w
				from	titulo_receber a,
					titulo_receber_liq b
				where	a.nr_titulo = b.nr_titulo
				and	a.nr_interno_conta = nr_interno_conta_w
				and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (b.dt_recebimento <= coalesce(dt_contabil_w, b.dt_recebimento)));

				vl_original_w		:= vl_original_w + vl_conta_w + vl_desc_apos_dtcontabil_w;
				vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
				vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w + vl_desconto_tit_w;
				vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;

				end;
			end loop;
			close C03;

		end if;

	elsif (cd_classificacao_w = 4) then

		select	coalesce(max(nr_interno_conta),0),
			coalesce(max(nr_seq_protocolo),0)
		into STRICT	nr_interno_conta_w,
			nr_seq_protocolo_w
		from	titulo_receber
		where	nr_titulo = nr_titulo_w;

		select  coalesce(sum(vl_descontos),0)
		into STRICT    vl_desconto_tit_w
		from    titulo_receber_liq
		where   nr_titulo = nr_titulo_w
		and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_recebimento <= coalesce(dt_contabil_w, dt_recebimento)));


		vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_tit_w;

		if (nr_interno_conta_w > 0) and (coalesce(nr_interno_conta_ant_w,0) <> coalesce(nr_interno_conta_w,0)) then

			nr_interno_conta_ant_w:=nr_interno_conta_w;

			vl_conta_w	:= 0;
			vl_desconto_w	:= 0;
			vl_abatimento_w	:= 0;
			vl_desc_apos_dtcontabil_w := 0;

			select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
			into STRICT	vl_conta_w
			from	conta_paciente
			where	nr_interno_conta = nr_interno_conta_w;

			select	coalesce(sum(CASE WHEN ie_classificacao='D' THEN vl_desconto  ELSE 0 END ),0),
				coalesce(sum(CASE WHEN ie_classificacao='A' THEN vl_desconto  ELSE 0 END ),0)
			into STRICT 	vl_desconto_w,
				vl_abatimento_w
			from	conta_paciente_desconto
			where	nr_interno_conta = nr_interno_conta_w
			and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_desconto <= coalesce(dt_contabil_w,dt_desconto)));

			if (coalesce(ie_desconto_data_ctb_w,'N') = 'S') then
				select	coalesce(sum(vl_desconto),0)
				into STRICT 	vl_desc_apos_dtcontabil_w
				from	conta_paciente_desconto
				where	nr_interno_conta = nr_interno_conta_w
				and (dt_desconto >= coalesce(dt_contabil_w,dt_desconto));
			end if;

			vl_original_w		:= vl_original_w + vl_conta_w + vl_desc_apos_dtcontabil_w;
			vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
			vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w;
			vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;

		elsif (nr_seq_protocolo_w > 0) and (coalesce(nr_seq_protocolo_ant_w,0) <> coalesce(nr_seq_protocolo_w,0))then

			nr_seq_protocolo_ant_w:=nr_seq_protocolo_w;

			open C03;
			loop
			fetch C03 into
				nr_interno_conta_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				vl_conta_w	:= 0;
				vl_desconto_w	:= 0;
				vl_abatimento_w	:= 0;
				vl_desc_apos_dtcontabil_w := 0;

				select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
				into STRICT	vl_conta_w
				from	conta_paciente
				where	nr_interno_conta = nr_interno_conta_w;

				select	coalesce(sum(CASE WHEN ie_classificacao='D' THEN vl_desconto  ELSE 0 END ),0),
					coalesce(sum(CASE WHEN ie_classificacao='A' THEN vl_desconto  ELSE 0 END ),0)
				into STRICT 	vl_desconto_w,
					vl_abatimento_w
				from	conta_paciente_desconto
				where	nr_interno_conta = nr_interno_conta_w
				and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (dt_desconto <= coalesce(dt_contabil_w,dt_desconto)));

				if (coalesce(ie_desconto_data_ctb_w,'N') = 'S') then
					select	coalesce(sum(vl_desconto),0)
					into STRICT 	vl_desc_apos_dtcontabil_w
					from	conta_paciente_desconto
					where	nr_interno_conta = nr_interno_conta_w
					and (dt_desconto >= coalesce(dt_contabil_w,dt_desconto));
				end if;

				vl_original_w		:= vl_original_w + vl_conta_w + vl_desc_apos_dtcontabil_w;
				vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
				vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w;
				vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;

				end;
			end loop;
			close C03;

		end if;

	elsif (cd_classificacao_w = 5) then

		open C03;
		loop
		fetch C03 into
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			vl_conta_w	:= 0;
			vl_desconto_w	:= 0;
			vl_abatimento_w := 0;

			select	coalesce(max(obter_valor_conta(nr_interno_conta,0)),0)
			into STRICT	vl_conta_w
			from	conta_paciente
			where	nr_interno_conta = nr_interno_conta_w;

			select	coalesce(sum(vl_descontos),0)
			into STRICT	vl_desconto_tit_w
			from	titulo_receber a,
				titulo_receber_liq b
			where	a.nr_titulo = b.nr_titulo
			and	a.nr_interno_conta = nr_interno_conta_w
			and	((coalesce(ie_desconto_data_ctb_w,'N') = 'N') or (b.dt_recebimento <= coalesce(dt_contabil_w, b.dt_recebimento)));

			vl_original_w		:= vl_original_w + vl_conta_w;
			vl_desconto_ant_w	:= vl_desconto_ant_w + vl_desconto_w;
			vl_desconto_ant_tot_w	:= vl_desconto_ant_tot_w + vl_desconto_w + vl_desconto_tit_w;
			vl_abatimento_tot_w	:= vl_abatimento_tot_w + vl_abatimento_w;

			end;
		end loop;
		close C03;

	end if;

	end;
end loop;
close C01;

/*select	nvl(sum(vl_negociado),0)
into	vl_desconto_atual_w
from	spa_negociacao
where	nr_seq_spa = nr_seq_spa_p
and	cd_forma_negociacao = 1;
*/
select	coalesce(sum(CASE WHEN cd_forma_negociacao=1 THEN vl_negociado  ELSE 0 END ),0),
	coalesce(sum(CASE WHEN cd_forma_negociacao=2 THEN vl_negociado  ELSE 0 END ),0)
into STRICT	vl_desconto_atual_w,
	vl_abatimento_atual_w
from	spa_negociacao
where	nr_seq_spa = nr_seq_spa_p;

vl_desconto_acum_w	:= vl_desconto_ant_tot_w + vl_desconto_atual_w;
vl_perc_desc_acum_w	:= round(dividir(vl_desconto_acum_w, (coalesce(vl_original_w,0) + coalesce(vl_desconto_ant_w,0))) * 100, 2);
vl_abatimento_acum_w	:= vl_abatimento_tot_w + vl_abatimento_atual_w;

if (ie_opcao_p = 'VOR') then
	vl_retorno_w	:= coalesce(vl_original_w,0) + coalesce(vl_desconto_ant_w,0);
elsif (ie_opcao_p = 'DAN') then
	vl_retorno_w	:= coalesce(vl_desconto_ant_tot_w,0);
elsif (ie_opcao_p = 'DAT') then
	vl_retorno_w	:= coalesce(vl_desconto_atual_w,0);
elsif (ie_opcao_p = 'DAC') then
	vl_retorno_w	:= coalesce(vl_desconto_acum_w,0);
elsif (ie_opcao_p = 'PDO') then
	vl_retorno_w	:= coalesce(vl_perc_desc_acum_w,0);
elsif (ie_opcao_p = 'ST') then
	if (coalesce(ds_pedido_parecer_w::text, '') = '') and (coalesce(ds_resposta_parecer_w::text, '') = '') then
		vl_retorno_w	:= 5215;
	elsif (ds_pedido_parecer_w IS NOT NULL AND ds_pedido_parecer_w::text <> '') and (coalesce(ds_resposta_parecer_w::text, '') = '') then
		vl_retorno_w	:= 5217;
	else
		vl_retorno_w	:= 5216;
	end if;
elsif (ie_opcao_p = 'AAN') then
	vl_retorno_w  	:= vl_abatimento_tot_w;
elsif (ie_opcao_p = 'AAC') then
	vl_retorno_w  	:= vl_abatimento_acum_w;
elsif (ie_opcao_p = 'AAT') then
	vl_retorno_w  	:= vl_abatimento_atual_w;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION spa_obter_valores ( nr_seq_spa_p bigint, ie_opcao_p text) FROM PUBLIC;

