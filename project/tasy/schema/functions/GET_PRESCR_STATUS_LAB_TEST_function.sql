-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_prescr_status_lab_test ( nr_prescricao_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


/* Return
R -	Requested
P -	Partially Fulfilled
F -	Fulfilled
C -	Canceled
*/
qt_resultado_w	bigint := 0;
qt_suspencao_w	bigint := 0;
qt_prescricao_w	bigint := 0;

qt_total_exam_w bigint := 0;
qt_canc_exam_w  bigint := 0;
qt_susp_exam_w  bigint := 0;
qt_resu_exam_w  bigint := 0;

ds_retorno_w	varchar(1) := 'R';


BEGIN
	select	count(*)
	into STRICT	qt_suspencao_w
	from	prescr_procedimento a,
			cpoe_procedimento b
	where	b.nr_sequencia		= a.nr_seq_proc_cpoe
	and		a.nr_prescricao		= nr_prescricao_p
	and		b.nr_atendimento	= nr_atendimento_p
	and		(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '');

    SELECT COUNT(1)
        , COUNT(d.dt_cancelamento)
        , COUNT(d.dt_suspensao)
    INTO STRICT qt_total_exam_w
        , qt_canc_exam_w
        , qt_susp_exam_w
    FROM  valor_dominio            f
        , atend_paciente_unidade   j
        , material_exame_lab       k
        , exame_laboratorio        e
        , pessoa_fisica            c
        , pessoa_fisica            b
        , atendimento_paciente_v   g
        , prescr_procedimento      d
        , prescr_medica            a
        , lab_parametro            l
    WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica
    AND a.cd_medico = c.cd_pessoa_fisica
    AND j.nr_atendimento = g.nr_atendimento
    AND k.cd_material_exame = d.cd_material_exame
    AND j.nr_seq_interno = ( obter_atepacu_paciente(g.nr_atendimento, 'A') )
    AND d.nr_prescricao = a.nr_prescricao
    AND a.nr_atendimento = g.nr_atendimento
    AND a.cd_estabelecimento = l.cd_estabelecimento
    AND (d.nr_seq_exame IS NOT NULL AND d.nr_seq_exame::text <> '')
    AND d.nr_seq_exame = e.nr_seq_exame
    AND d.ie_status_atend = f.vl_dominio
    AND f.cd_dominio = 1030
    AND d.nr_prescricao = a.nr_prescricao
    AND ( lab_obter_regra_estab(1, a.cd_estabelecimento) = 'S' )
    AND a.nr_atendimento = nr_atendimento_p
    AND a.nr_prescricao = nr_prescricao_p
    AND d.cd_motivo_baixa = 0;

    SELECT COUNT(d.dt_resultado)
    INTO STRICT qt_resu_exam_w
    FROM  valor_dominio            f
        , atend_paciente_unidade   j
        , material_exame_lab       k
        , exame_laboratorio        e
        , pessoa_fisica            c
        , pessoa_fisica            b
        , atendimento_paciente_v   g
        , prescr_procedimento      d
        , prescr_medica            a
        , lab_parametro            l
    WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica
    AND a.cd_medico = c.cd_pessoa_fisica
    AND j.nr_atendimento = g.nr_atendimento
    AND k.cd_material_exame = d.cd_material_exame
    AND j.nr_seq_interno = ( obter_atepacu_paciente(g.nr_atendimento, 'A') )
    AND d.nr_prescricao = a.nr_prescricao
    AND a.nr_atendimento = g.nr_atendimento
    AND a.cd_estabelecimento = l.cd_estabelecimento
    AND (d.nr_seq_exame IS NOT NULL AND d.nr_seq_exame::text <> '')
    AND d.nr_seq_exame = e.nr_seq_exame
    AND d.ie_status_atend = f.vl_dominio
    AND f.cd_dominio = 1030
    AND d.nr_prescricao = a.nr_prescricao
    AND ( lab_obter_regra_estab(1, a.cd_estabelecimento) = 'S' )
    AND a.nr_atendimento = nr_atendimento_p
    AND a.nr_prescricao = nr_prescricao_p
    AND d.cd_motivo_baixa = 0
    AND coalesce(d.dt_cancelamento::text, '') = ''
    AND coalesce(d.dt_suspensao::text, '') = '';

	if (qt_suspencao_w > 0) or (qt_canc_exam_w + qt_susp_exam_w) > 0 then
		ds_retorno_w := 'C';
	elsif (qt_resu_exam_w > 0 and
            qt_total_exam_w > (qt_resu_exam_w - (qt_canc_exam_w + qt_susp_exam_w))) then
        ds_retorno_w := 'P';
    elsif (qt_total_exam_w > 0 and
            qt_total_exam_w = (qt_resu_exam_w - (qt_canc_exam_w + qt_susp_exam_w))) then
        ds_retorno_w := 'F';
    end if;

	return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_prescr_status_lab_test ( nr_prescricao_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

