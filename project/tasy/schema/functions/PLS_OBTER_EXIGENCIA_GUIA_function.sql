-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_exigencia_guia ( nr_seq_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(255);
cd_area_procedimento_w		integer;
cd_grupo_proc_w			bigint;
cd_especialidade_w		integer;
nr_seq_estrut_mat_w		bigint;
nr_seq_contrato_w			bigint;
nr_seq_contrato_intercambio_w	bigint;
cd_estabelecimento_w		integer;
nr_seq_prestador_w		bigint;
nr_seq_tipo_atendimento_w		bigint;
ie_tipo_guia_w			varchar(255);
ie_exige_guia_w			varchar(255);
ie_liberado_w			varchar(255);
nr_seq_grupo_contrato_w		bigint;
ie_grupo_contrato_w		varchar(255);

cd_cgc_outorgante_w		varchar(255);
cd_cgc_cooperativa_w		varchar(255);
cd_cooperativa_w			varchar(10);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_operadora_w		pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		varchar(1);

nr_seq_grupo_w			bigint;
nr_seq_grupo_servico_w		bigint;
ie_grupo_servico_w			varchar(1);

ie_tipo_congenere_w		varchar(1) := 'A';
cd_cgc_congenere_w		varchar(14);
sg_estado_congenere_w		pessoa_juridica.sg_estado%type;
ie_tipo_segurado_w			varchar(3);
ie_tipo_conta_w			varchar(2);
ie_restricao_intercambio_w	varchar(1) := 'A';
nr_seq_grupo_produto_w		bigint;
nr_seq_plano_w			bigint;
ie_grupo_produto_w		varchar(1);
nr_seq_cbo_conta_w		bigint;
ie_carater_internacao_w		pls_regra_autorizacao.ie_carater_internacao%type;
ie_preco_w			pls_plano.ie_preco%type;
ie_regime_atendimento_w	pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w	pls_conta.ie_saude_ocupacional%type;

C01 CURSOR FOR
	SELECT 	ie_liberado,
		nr_seq_grupo_contrato,
		nr_seq_grupo_servico,
		nr_seq_grupo_produto
	from	pls_regra_autorizacao
	where	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_p AND ie_origem_proced	= ie_origem_proced_p))
	and 	coalesce(cd_area_procedimento,coalesce(cd_area_procedimento_w,0)) = coalesce(cd_area_procedimento_w,0)
	and 	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0)) 	= coalesce(cd_especialidade_w,0)
	and 	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))      	= coalesce(cd_grupo_proc_w,0)
	and	coalesce(ie_tipo_guia, coalesce(ie_tipo_guia_w,'0'))		= coalesce(ie_tipo_guia_w,'0')
	and	coalesce(nr_seq_material, coalesce(nr_seq_material_p,0))		= coalesce(nr_seq_material_p,0)
	and	((coalesce(ie_tipo_segurado::text, '') = '') or (ie_tipo_segurado = ie_tipo_segurado_w))
	and	coalesce(nr_seq_tipo_atendimento,coalesce(nr_seq_tipo_atendimento_w,0))	= coalesce(nr_seq_tipo_atendimento_w,0)
	and	 ((coalesce(ie_regime_atendimento::text, '') = '') or (ie_regime_atendimento = ie_regime_atendimento_w))
	and	 ((coalesce(ie_saude_ocupacional::text, '') = '') or (ie_saude_ocupacional = ie_saude_ocupacional_w))
	and	coalesce(nr_seq_prestador,coalesce(nr_seq_prestador_w,0))		= coalesce(nr_seq_prestador_w,0)
	and	coalesce(nr_seq_estrut_mat,coalesce(nr_seq_estrut_mat_w,0)) 	= coalesce(nr_seq_estrut_mat_w,0)
	and	((coalesce(ie_restricao_intercambio,'A') = 'A') or (coalesce(ie_restricao_intercambio,'A') = ie_restricao_intercambio_w))	
	and	(((coalesce(ie_tipo_intercambio,'A')	= 'A') or (coalesce(ie_tipo_intercambio,'A') = ie_tipo_intercambio_w))
	or (coalesce(ie_restricao_intercambio,'A') = 'N'))
	and	((coalesce(ie_tipo_congenere,'A')	= 'A') or (coalesce(ie_tipo_congenere,'A') = ie_tipo_congenere_w))
	and 	cd_estabelecimento					= cd_estabelecimento_w
	and 	ie_situacao            					= 'A'
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp() - interval '1 days') and coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')
	and	((coalesce(ie_preco::text, '') = '') or (ie_preco = ie_preco_w))
	and	((coalesce(cd_especialidade_medica::text, '') = '') or (cd_especialidade_medica = (	SELECT	cd_especialidade
											from	especialidade_medica
											where	nr_seq_cbo_saude = nr_seq_cbo_conta_w)))
	and	((coalesce(ie_carater_internacao::text, '') = '') or (ie_carater_internacao = ie_carater_internacao_w))
	order by
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_tipo_atendimento,0),
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_tipo_segurado;


BEGIN
ie_exige_guia_w	:= 'N';

/*Obter  dados do  segurado da conta */

select	a.nr_seq_contrato,
	a.nr_seq_intercambio,
	b.cd_estabelecimento,
	b.nr_seq_prestador_exec,
	coalesce(b.nr_seq_tipo_atendimento,0),
	b.ie_tipo_guia,
	a.ie_tipo_segurado,
	--a.nr_seq_plano,
	pls_obter_produto_benef(a.nr_sequencia, b.dt_atendimento_referencia),
	b.nr_seq_cbo_saude,
	b.ie_carater_internacao,
	b.ie_regime_atendimento,
	b.ie_saude_ocupacional
into STRICT	nr_seq_contrato_w,
	nr_seq_contrato_intercambio_w,
	cd_estabelecimento_w,
	nr_seq_prestador_w,
	nr_seq_tipo_atendimento_w,
	ie_tipo_guia_w,
	ie_tipo_segurado_w,
	nr_seq_plano_w,
	nr_seq_cbo_conta_w,
	ie_carater_internacao_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_segurado 	a,
	pls_conta 	b	
where	b.nr_seq_segurado = a.nr_sequencia
and	b.nr_sequencia	= nr_seq_conta_p;

select	max(ie_preco)
into STRICT	ie_preco_w
from	pls_plano
where	nr_sequencia = nr_seq_plano_w;

begin
select	ie_tipo_conta
into STRICT	ie_tipo_conta_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_p;
exception
when others then
	ie_tipo_conta_w := null;
end;

select	max(cd_cgc_outorgante)
into STRICT	cd_cgc_outorgante_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(cd_cgc_outorgante_w,'0') <> '0') then
	select	max(sg_estado) /* Obter a UF da operadora  - Tasy */
	into STRICT	sg_estado_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cgc_outorgante_w;
end if;

select	max(cd_cooperativa)
into STRICT	cd_cooperativa_w
from	pls_conta
where 	nr_sequencia	= nr_seq_conta_p;

if (coalesce(cd_cooperativa_w,'0') <> '0') then
	select 	max(cd_cgc)
	into STRICT	cd_cgc_cooperativa_w
	from 	pls_congenere
	where 	cd_cooperativa = cd_cooperativa_w;
	
	if (coalesce(sg_estado_operadora_w,'0') <> '0') then
		select	max(sg_estado)
		into STRICT	sg_estado_operadora_w
		from	pessoa_juridica
		where	cd_cgc	= cd_cgc_cooperativa_w;
	end if;
end if;

if (coalesce(sg_estado_w,'X') <> 'X') and (coalesce(sg_estado_operadora_w,'X') <> 'X') then /* Verifica o estado da congenere e da outorgante e o mesmo, se nao for o mesmo entao e intercambio nacional */
	if ( sg_estado_w	= sg_estado_operadora_w ) then
		ie_tipo_intercambio_w	:= 'E'; --ESTADUAL
	else
		ie_tipo_intercambio_w	:= 'N'; -- NACIONAL
	end if;
else
	ie_tipo_intercambio_w	:= 'A';
end if;

if (ie_tipo_conta_w in ('I', 'C')) then
	ie_restricao_intercambio_w	:= 'I';
else
	ie_restricao_intercambio_w	:= 'N';
end if;

-- jjung OS 490482 - Obter o estado da operadora congenere  do segurado.				
select	max(cd_cgc)	
into STRICT	cd_cgc_congenere_w
from	pls_congenere
where	nr_sequencia = (	SELECT	max(a.nr_seq_ops_congenere)
				from	pls_segurado	a,
					pls_conta	b
				where	a.nr_sequencia = b.nr_seq_segurado
				and	b.nr_sequencia = nr_seq_conta_p
			);
select	max(sg_estado)
into STRICT	sg_estado_congenere_w
from	pessoa_juridica
where	cd_cgc = cd_cgc_congenere_w;

-- jjung OS 490482 - Verificar a abragencia da congenere do beneficiario.
if ( sg_estado_w <> 'X') and (coalesce(sg_estado_congenere_w,'X') <> 'X') then
	if ( sg_estado_w	= sg_estado_congenere_w ) then
		ie_tipo_congenere_w	:= 'E'; --ESTADUAL
	else
		ie_tipo_congenere_w	:= 'N'; -- NACIONAL
	end if;
else
	ie_tipo_congenere_w	:= 'A';--AMBOS/Regra para todos. pls_regra_autorizacao ie_tipo_congenere
end if;

if (coalesce(cd_procedimento_p,0) <> 0) then
	select	cd_area_procedimento,
		cd_grupo_proc,
		cd_especialidade
	into STRICT	cd_area_procedimento_w,
		cd_grupo_proc_w,
		cd_especialidade_w
	from	estrutura_procedimento_v
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;
	
	nr_seq_grupo_w	:= pls_obter_grupo_servico(cd_procedimento_p, ie_origem_proced_p);
elsif (coalesce(nr_seq_material_p,0) <> 0)	then
	select	max(nr_seq_estrut_mat)
	into STRICT	nr_seq_estrut_mat_w
	from	pls_material
	where	nr_sequencia = nr_seq_material_p;
end if;

open C01;
loop
fetch C01 into
	ie_liberado_w,
	nr_seq_grupo_contrato_w,
	nr_seq_grupo_servico_w,
	nr_seq_grupo_produto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */	
	begin
	ie_grupo_contrato_w	:= 'N';
	ie_grupo_servico_w	:= 'N';
	ie_grupo_produto_w	:= 'S';
	
	if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
		if	((coalesce(nr_seq_contrato_w,0) > 0) or (coalesce(nr_seq_contrato_intercambio_w,0) > 0)) then
			ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_w, nr_seq_contrato_intercambio_w);
		else
			ie_grupo_contrato_w	:= 'N';
		end if;
	else
		ie_exige_guia_w		:= ie_liberado_w;
		ie_grupo_contrato_w	:= 'S';
	end if;
	
	if (coalesce(nr_seq_grupo_w,0) > 0) then
		if (nr_seq_grupo_servico_w = nr_seq_grupo_w) then
			ie_grupo_servico_w	:= 'S';
		end if;
	else
		ie_grupo_servico_w	:= 'S';
	end if;
	
	if (coalesce(nr_seq_grupo_produto_w,0) > 0) then
		ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_w);
	end if;
			
	if (ie_grupo_contrato_w = 'S') and (ie_grupo_servico_w = 'S') and (ie_grupo_produto_w = 'S') then
		ie_exige_guia_w		:= ie_liberado_w;
	end if;
	
	end;
end loop;
close C01;

ds_retorno_w	:= ie_exige_guia_w;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_exigencia_guia ( nr_seq_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) FROM PUBLIC;

