-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_orcamento_proc_pacote ( cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_setor_atendimento_p bigint, nr_sequencia_orcamento_p bigint) RETURNS varchar AS $body$
DECLARE


nr_atendimento_w		              	orcamento_paciente.nr_atendimento%type;
cd_convenio_w			              	orcamento_paciente.cd_convenio%type;
cd_categoria_w			              	orcamento_paciente.cd_categoria%type;
cd_estabelecimento_w		          	orcamento_paciente.cd_estabelecimento%type;
cd_plano_w			                  	orcamento_paciente.cd_plano%type;
cd_tipo_acomodacao_w		          	orcamento_paciente.cd_tipo_acomodacao%type;
ie_clinica_w			              	orcamento_paciente.ie_clinica%type;
dt_nascimento_w			              	orcamento_paciente.dt_nascimento%type;

ie_tipo_atendimento_w		          	atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_pacote_w			              	pacote.nr_seq_pacote%type;
nr_seq_pacote_acomodacao_w	     		pacote_tipo_acomodacao.nr_sequencia%type;
ie_carater_inter_sus_w            		pacote_tipo_acomodacao.ie_carater_inter_sus%type;
ie_tipo_acomod_w		              	varchar(2);
ie_atend_retorno_w		            	varchar(1);
ie_sexo_w			                    varchar(1);
qt_idade_paciente_w		            	smallint;
dt_entrada_w			                atendimento_paciente.dt_entrada%type;
dt_alta_w			                    atendimento_paciente.dt_alta%type;
qt_dias_inter_w			              	bigint;
ie_acomp_w			                  	varchar(1);
cd_centro_custo_w		              	setor_atendimento.cd_centro_custo%type;
ie_pacote_w			                  	varchar(1) := 'N';

c01 CURSOR FOR
SELECT 	nr_seq_pacote
from 	pacote a
where	cd_convenio = cd_convenio_w
and	cd_proced_pacote = cd_procedimento_p
and	ie_origem_proced = ie_origem_proced_p
and	cd_estabelecimento = cd_estabelecimento_w
and	ie_situacao = 'A';


BEGIN

select	nr_atendimento,
	cd_convenio,
	cd_categoria,
	cd_estabelecimento,
	cd_plano,
	cd_tipo_acomodacao,
	ie_clinica,
	ie_tipo_atendimento,
	ie_sexo,
	dt_nascimento,
	ie_carater_inter_sus
into STRICT	nr_atendimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_estabelecimento_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	ie_clinica_w,
	ie_tipo_atendimento_w,
	ie_sexo_w,
	dt_nascimento_w,
	ie_carater_inter_sus_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_sequencia_orcamento_p;

select	max(cd_centro_custo)
into STRICT	cd_centro_custo_w
from	setor_atendimento
where	cd_setor_atendimento = cd_setor_atendimento_p;
	
select	coalesce(ie_tipo_atendimento_w, max(ie_tipo_atendimento)),
	max(CASE WHEN coalesce(nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END ),
	max(dt_entrada),
	max(dt_alta)
into STRICT	ie_tipo_atendimento_w,
	ie_atend_retorno_w,
	dt_entrada_w,
	dt_alta_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_w;

select	trunc(coalesce(dt_alta_w, clock_timestamp()) - dt_entrada_w) + 1,
	CASE WHEN coalesce(max(obter_qt_acomp_atendimento(nr_atendimento_w)),0)=0 THEN  'N'  ELSE 'S' END
into STRICT	qt_dias_inter_w,
	ie_acomp_w
;

select	max(obter_idade(coalesce(dt_nascimento_w, b.dt_nascimento), clock_timestamp(), 'A')),
	coalesce(ie_sexo_w, coalesce(max(ie_sexo),'A'))
into STRICT	qt_idade_paciente_w,
	ie_sexo_w
from	pessoa_fisica b,
	atendimento_paciente a
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	a.nr_atendimento	= nr_atendimento_w;

select	coalesce(max(ie_classificacao), 0)
into STRICT	ie_tipo_acomod_w
from	tipo_acomodacao
where	cd_tipo_acomodacao = cd_tipo_acomodacao_w;

if (ie_tipo_acomod_w = 0 and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '')) then
	select	coalesce(max(ie_classificacao), 0)
	into STRICT	ie_tipo_acomod_w
	from	tipo_acomodacao b,
		atend_categoria_convenio a
	where	a.nr_atendimento	= nr_atendimento_w
	and	a.cd_convenio		= cd_convenio_w
	and	a.cd_tipo_acomodacao	= b.cd_tipo_acomodacao
	and	a.dt_inicio_vigencia	= (	SELECT	max(x.dt_inicio_vigencia)
						from	atend_categoria_convenio x
						where	x.nr_atendimento = nr_atendimento_w
						and	x.cd_convenio = cd_convenio_w);
end if;

open c01;
loop
fetch c01 into	
	nr_seq_pacote_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_pacote_acomodacao_w
	from	pacote_tipo_acomodacao
	where	nr_seq_pacote = nr_seq_pacote_w
	and	ie_tipo_acomod = ie_tipo_acomod_w
	and	coalesce(cd_categoria, cd_categoria_w) = cd_categoria_w
	and	coalesce(cd_plano, coalesce(cd_plano_w, 'X')) = coalesce(cd_plano_w, 'X')
	and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0)) = coalesce(ie_clinica_w, 0)
	and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p, 0)) = coalesce(cd_setor_atendimento_p, 0)
	and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_atend_retorno_w))
	and	coalesce(qt_idade_paciente_w, 0) between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)
	and	coalesce(qt_dias_inter_w, 0) between coalesce(qt_dias_inter_inicio, coalesce(qt_dias_inter_w, 0)) and coalesce(qt_dias_inter_final, coalesce(qt_dias_inter_w, 0))
	and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
	and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)
	and	coalesce(ie_classificacao, 'N') = 'N'
	and	coalesce(cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
	and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w,0)) = coalesce(ie_carater_inter_sus_w,0);

	if (nr_seq_pacote_acomodacao_w <> 0) then
		ie_pacote_w := 'S';
		return ie_pacote_w;
	end if;

end loop;
close c01;

return ie_pacote_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_orcamento_proc_pacote ( cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_setor_atendimento_p bigint, nr_sequencia_orcamento_p bigint) FROM PUBLIC;

