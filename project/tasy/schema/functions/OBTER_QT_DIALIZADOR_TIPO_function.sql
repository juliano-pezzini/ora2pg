-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_dializador_tipo (nr_seq_unidade_dialise_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

qt_dialisador_w	bigint	:= 0;

/*

ie_opcao_p:

X - Externo data de descarte
E - Emergência data de descarte
N - Normal data de descarte
U - Único data de descarte

XP - Externo data do priming
EP - Emergência data do priming
NP - Normal data do priming
UP - Único data do priming

*/
BEGIN

if (ie_opcao_p = 'X') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	dt_descarte between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status = 'D'
	and	IE_TIPO  = 'E';

elsif (ie_opcao_p = 'E') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	dt_descarte between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status = 'D'
	and	IE_TIPO  = 'M';

elsif (ie_opcao_p = 'N') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	dt_descarte between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status = 'D'
	and	IE_TIPO  = 'N';

elsif (ie_opcao_p = 'U') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	dt_descarte between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status = 'D'
	and	IE_TIPO  = 'U';

elsif (ie_opcao_p = 'XP') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	DT_PRIMING between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'E';


elsif (ie_opcao_p = 'EP') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	DT_PRIMING between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'M';


elsif (ie_opcao_p = 'NP') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	DT_PRIMING between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'N';


elsif (ie_opcao_p = 'UP') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	DT_PRIMING between dt_inicio_p and  dt_fim_p
	and	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'U';
elsif (ie_opcao_p = 'XT') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'E';


elsif (ie_opcao_p = 'ET') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'M';


elsif (ie_opcao_p = 'NT') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	ie_status <> 'D'
	and	IE_TIPO  = 'N';


elsif (ie_opcao_p = 'UT') then

	select 	count(*)
	into STRICT	qt_dialisador_w
	from 	hd_dializador
	where	NR_SEQ_UNID_DIALISE = nr_seq_unidade_dialise_p
	and	IE_TIPO  = 'U';



end if;

return qt_dialisador_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_dializador_tipo (nr_seq_unidade_dialise_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_opcao_p text) FROM PUBLIC;

