-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_horario (nr_seq_horario_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
nr_prescricao_w		bigint;
nr_sequencia_w		integer;
nm_prescritor_w		varchar(60);
cd_material_w		integer;
ds_material_w		varchar(100);
ds_intervalo_w		varchar(80);
cd_um_dose_w		varchar(30);
qt_dose_w		double precision;
ds_diluicao_w		varchar(2000);
ds_observacao_w		varchar(4000);
ds_observacao_enf_w	varchar(4000);
ds_tempo_infusao_w	varchar(50);

vl_retorno_w		varchar(2000);


BEGIN 
if (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then 
 
	select	substr(obter_usuario_prescritor(b.nr_prescricao),1,60), 
		b.nr_prescricao, 
		b.nr_sequencia, 
		a.cd_material, 
		substr(obter_desc_material(a.cd_material),1,100), 
		a.qt_dose, 
		a.cd_unidade_medida_dose, 
		substr(obter_desc_intervalo_prescr(b.cd_intervalo),1,80), 
		substr(obter_diluicao_medic(b.nr_sequencia,b.nr_prescricao),1,2000) ds_diluicao, 
		b.ds_observacao, 
		b.ds_observacao_enf, 
		CASE WHEN qt_min_aplicacao||coalesce(qt_hora_aplicacao::text, '') = '' THEN ''  ELSE coalesce(qt_hora_aplicacao,'00') || ':' 		|| to_char(coalesce(qt_min_aplicacao,0),'00') || 'min' END  
	into STRICT	nm_prescritor_w, 
		nr_prescricao_w, 
		nr_sequencia_w, 
		cd_material_w, 
		ds_material_w, 
		qt_dose_w, 
		cd_um_dose_w, 
		ds_intervalo_w, 
		ds_diluicao_w, 
		ds_observacao_w, 
		ds_observacao_enf_w, 
		ds_tempo_infusao_w 
	from	prescr_material b, 
		prescr_mat_hor a 
	where	b.nr_prescricao 	= a.nr_prescricao 
	and	b.nr_sequencia	= a.nr_seq_material 
	and	a.nr_sequencia	= nr_seq_horario_p 
	and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';
 
	if (ie_opcao_p = 'CI') then 
		vl_retorno_w	:= cd_material_w;
	elsif (ie_opcao_p = 'DI') then 
		vl_retorno_w	:= ds_material_w;
	elsif (ie_opcao_p = 'QT') then 
		vl_retorno_w	:= qt_dose_w;
	elsif (ie_opcao_p = 'UM') then 
		vl_retorno_w	:= cd_um_dose_w;
	elsif (ie_opcao_p = 'INT') then 
		vl_retorno_w	:= ds_intervalo_w;
	elsif (ie_opcao_p = 'UP') then 
		vl_retorno_w	:= nm_prescritor_w;
	elsif (ie_opcao_p = 'NP') then 
		vl_retorno_w	:= nr_prescricao_w;
	elsif (ie_opcao_p = 'NS') then 
		vl_retorno_w	:= nr_sequencia_w;
	elsif (ie_opcao_p = 'DL') then 
		vl_retorno_w	:= ds_diluicao_w;
	elsif (ie_opcao_p = 'OM') then 
		vl_retorno_w	:= ds_observacao_w;
	elsif (ie_opcao_p = 'OE') then 
		vl_retorno_w	:= ds_observacao_enf_w;
	elsif (ie_opcao_p = 'TI') then 
		vl_retorno_w	:= ds_tempo_infusao_w;
	end if;
 
end if;
 
if (substr(vl_retorno_w,1,1) = ',') then 
	vl_retorno_w := '0' || vl_retorno_w;
end if;
 
return vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_horario (nr_seq_horario_p bigint, ie_opcao_p text) FROM PUBLIC;

