-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consiste_tempo_exames_ag_exame ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_seq_proc_interno_p bigint, nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1)	:= 'S';
hr_agenda_w		timestamp;
nr_minuto_duracao_w	bigint;
qt_sobra_w		bigint;
nr_seq_agenda_w		agenda_paciente.nr_sequencia%type;
nr_Seq_regra_w		bigint;
nr_seq_proc_interno_w	bigint;
qt_Tempo_w		bigint;
ie_regra_exclusiva_w	ageint_tempo_entre_exames.ie_regra_exclusiva%type;
ie_tempo_exclusivo_w	ageint_tempo_entre_exames.ie_tempo_exclusivo%type;
cd_exame_pri_w		ageint_tempo_entre_exames.cd_exame_pri%type;
cd_exame_seg_w		ageint_tempo_entre_exames.cd_exame_seg%type;

C01 CURSOR FOR
	SELECT	nr_Sequencia,
		ie_regra_exclusiva,
		ie_tempo_exclusivo,
		cd_exame_pri,
		cd_exame_seg
	from	ageint_tempo_entre_exames
	where	((cd_exame_pri	= nr_Seq_proc_interno_p)
	or (cd_exame_seg = nr_seq_proc_interno_p))
	and	ie_situacao	= 'A';

C02 CURSOR FOR
	SELECT	b.hr_inicio,
		b.nr_minuto_duracao,
		b.nr_sequencia
	from	agenda_paciente b,
		agenda a
	where	a.cd_agenda		= b.cd_agenda
	and	a.cd_tipo_agenda	= 2
	and	b.nr_seq_proc_interno	= nr_seq_proc_interno_w
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	b.nr_sequencia		<> nr_seq_agenda_p
	and	b.ie_status_agenda not in ('C','I');
		

BEGIN

/*
cursor das regras a qual o exame do item se aplica
*/
open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	ie_regra_exclusiva_w,
	ie_tempo_exclusivo_w,
	cd_exame_pri_w,
	cd_exame_seg_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	CASE WHEN cd_Exame_pri=nr_Seq_proc_interno_p THEN  cd_exame_Seg  ELSE cd_exame_pri END ,
		qt_tempo
	into STRICT	nr_seq_proc_interno_w,
		qt_tempo_w
	from	ageint_tempo_entre_exames
	where	nr_sequencia	= nr_seq_regra_w;
	
	/*
	cursor das marcacoes com os exames ao qual a regra se aplica
	*/
	open C02;
	loop
	fetch C02 into	
		hr_agenda_w,
		nr_minuto_duracao_w,
		nr_seq_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (ie_regra_exclusiva_w = 'N') or (cd_exame_pri_w = nr_seq_proc_interno_w and hr_agenda_w >= hr_agenda_p) or (cd_exame_seg_w = nr_seq_proc_interno_w and hr_agenda_w <= hr_agenda_p) then
			if (ds_retorno_w	<> 'N') then
				if (hr_agenda_w	< hr_Agenda_p) then
					select	Obter_Min_Entre_Datas((hr_agenda_w + nr_minuto_duracao_w / 1440), hr_Agenda_p, 1)
					into STRICT	qt_sobra_w
					;		
				else
					select	Obter_Min_Entre_Datas((hr_Agenda_p + nr_minuto_duracao_p / 1440), hr_agenda_w, 1)
					into STRICT	qt_sobra_w
					;		
				end if;
				
				if (qt_sobra_w	< qt_tempo_w) or (((qt_sobra_w - qt_tempo_w) <> 0) and (ie_tempo_exclusivo_w = 'S')) then
					ds_retorno_w	:= 'N';
				else
					ds_Retorno_w	:= 'S';
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;
			
	end;
end loop;
close C01;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consiste_tempo_exames_ag_exame ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_seq_proc_interno_p bigint, nr_seq_agenda_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text) FROM PUBLIC;

