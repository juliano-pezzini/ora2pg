-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_cod_tuss_desp (nr_seq_procedimento_p bigint) RETURNS varchar AS $body$
DECLARE


cd_convenio_w		conta_paciente.cd_convenio_parametro%type;
cd_estabelecimento_w	conta_paciente.cd_estabelecimento%type;

cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
cd_procedimento_tuss_w	procedimento_paciente.cd_procedimento_tuss%type;
nr_seq_proc_pacote_w	procedimento_paciente.nr_seq_proc_pacote%type;
cd_proc_conv_w		procedimento_paciente.cd_procedimento_convenio%type;
dt_procedimento_w	timestamp;

ie_classif_proced_w	procedimento.ie_classificacao%type;

ie_proc_tuss_w		tiss_parametros_convenio.ie_proc_tuss%type;
ie_codigo_tuss_w	tiss_regra_tuss.ie_codigo_tuss%type;

ds_retorno_w		varchar(80);

c01 CURSOR FOR
SELECT 	a.ie_codigo_tuss
from 	tiss_regra_tuss a
where	a.cd_estabelecimento	= cd_estabelecimento_w
and 	a.cd_convenio		= cd_convenio_w
and 	a.dt_inicio_vigencia	<= dt_procedimento_w
and (exists (select	1
			from	tiss_regra_tuss_filtro x
			where	x.nr_seq_regra						= a.nr_sequencia
			and	coalesce(x.ie_classif_proced,coalesce(ie_classif_proced_w,'X'))	= coalesce(ie_classif_proced_w,'X')) or
	not exists (select	1
			from	tiss_regra_tuss_filtro x
			where	x.nr_seq_regra				= a.nr_sequencia))
order by a.dt_inicio_vigencia;


BEGIN

begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
		a.cd_procedimento_tuss,
		a.nr_seq_proc_pacote,
		b.cd_convenio_parametro,
		b.cd_estabelecimento,
		c.ie_classificacao,
		a.dt_procedimento,
		a.cd_procedimento_convenio
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_procedimento_tuss_w,
		nr_seq_proc_pacote_w,
		cd_convenio_w,
		cd_estabelecimento_w,
		ie_classif_proced_w,
		dt_procedimento_w,
		cd_proc_conv_w
	from	procedimento_paciente a,
		conta_paciente b,
		procedimento c
	where	a.nr_interno_conta	= b.nr_interno_conta
	and	a.cd_procedimento	= c.cd_procedimento
	and	a.ie_origem_proced	= c.ie_origem_proced
	and	a.nr_sequencia		= nr_seq_procedimento_p  LIMIT 1;
exception
when others then
	cd_convenio_w		:= null;
	cd_estabelecimento_w	:= null;
end;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then

	select	coalesce(max(ie_proc_tuss), 'N')
	into STRICT	ie_proc_tuss_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;

	if (coalesce(cd_procedimento_tuss_w,0) <> 0) then
		open C01;
		loop
		fetch C01 into
			ie_codigo_tuss_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ie_proc_tuss_w	:= ie_codigo_tuss_w;
			end;
		end loop;
		close C01;
	end if;

	if (ie_proc_tuss_w = 'S') and --Gerar para todos
		(coalesce(cd_procedimento_tuss_w,0) <> 0) then

		ds_retorno_w	:= to_char(cd_procedimento_tuss_w);

	elsif (ie_proc_tuss_w = 'P') and --Gerar para todos exceto pacote
		(coalesce(cd_procedimento_tuss_w,0) <> 0) and (coalesce(nr_seq_proc_pacote_w::text, '') = '') then

		ds_retorno_w	:= to_char(cd_procedimento_tuss_w);

	elsif (ie_proc_tuss_w = 'C') then --Conversão ou TUSS
		if (coalesce(cd_proc_conv_w,'0') <> '0') and (cd_proc_conv_w <> to_char(cd_procedimento_w)) then --Conversão
			ds_retorno_w	:= cd_proc_conv_w;
		elsif	(((coalesce(cd_proc_conv_w,'0') = '0') or (cd_proc_conv_w = to_char(cd_procedimento_w))) and --Proc TUSS
			 (coalesce(cd_procedimento_tuss_w,'0') <> '0'))  then
			ds_retorno_w	:= to_char(cd_procedimento_tuss_w);
		end if;

	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_cod_tuss_desp (nr_seq_procedimento_p bigint) FROM PUBLIC;

