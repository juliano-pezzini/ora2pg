-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_vl_bonif_seg_pre ( nr_seq_segurado_p bigint, nr_seq_vinculo_p bigint) RETURNS bigint AS $body$
DECLARE


vl_retorno_w		double precision;
vl_bonificacao_w	double precision;
vl_tot_bonificacao_w	double precision;
vl_beneficiario_w	double precision;

tx_bonificacao_w	double precision;
tx_desconto_w		double precision;

ie_tipo_regra_w		varchar(2);
ie_tipo_item_w		varchar(255);
ie_acao_contrato_w	varchar(2);
ie_titularidade_w	varchar(1);

qt_idade_w		bigint;
qt_vidas_w		bigint;

nr_seq_parentesco_w	bigint;
nr_seq_contrato_w	bigint;
nr_seq_pagador_w	bigint;
nr_seq_desconto_w	bigint;

C01 CURSOR FOR
	SELECT	coalesce(a.vl_bonificacao,c.vl_bonificacao),
		coalesce(a.tx_bonificacao,c.tx_bonificacao),
		c.ie_tipo_item,
		c.ie_tipo_regra,
		c.nr_seq_desconto
	from	pls_bonificacao_vinculo	a,
		pls_bonificacao		b,
		pls_bonificacao_regra	c
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	c.nr_seq_bonificacao	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_vinculo_p
	and	((qt_idade_w	>= c.qt_idade_inicial and (c.qt_idade_inicial IS NOT NULL AND c.qt_idade_inicial::text <> '')) or (coalesce(c.qt_idade_inicial::text, '') = ''))
	and	((qt_idade_w	<= c.qt_idade_final and (c.qt_idade_final IS NOT NULL AND c.qt_idade_final::text <> '')) or (coalesce(c.qt_idade_final::text, '') = ''))
	and (ie_titularidade_w = c.ie_titularidade or c.ie_titularidade = 'A' or coalesce(c.ie_titularidade::text, '') = '')
	and (nr_seq_parentesco_w = c.nr_seq_parentesco or coalesce(c.nr_seq_parentesco::text, '') = '')
	and	((((ie_acao_contrato_w = c.ie_acao_contrato) or (coalesce(c.ie_acao_contrato::text, '') = '')) and (c.nr_seq_desconto IS NOT NULL AND c.nr_seq_desconto::text <> '')) or (coalesce(c.nr_seq_desconto::text, '') = ''))
	order by	c.ie_tipo_item;


BEGIN
vl_retorno_w	:= 0;

select	nr_seq_contrato,
	nr_seq_pagador,
	pls_obter_idade_segurado(nr_sequencia, clock_timestamp(), 'A'),
	nr_seq_parentesco,
	ie_acao_contrato,
	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
	pls_obter_valor_segurado(nr_sequencia,'VSD')
into STRICT	nr_seq_contrato_w,
	nr_seq_pagador_w,
	qt_idade_w,
	nr_seq_parentesco_w,
	ie_acao_contrato_w,
	ie_titularidade_w,
	vl_beneficiario_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	count(*)
into STRICT	qt_vidas_w
from	pls_segurado
where	nr_seq_contrato	= nr_seq_contrato_w
and	coalesce(dt_rescisao::text, '') = ''
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

open C01;
loop
fetch C01 into
	vl_bonificacao_w,
	tx_bonificacao_w,
	ie_tipo_item_w,
	ie_tipo_regra_w,
	nr_seq_desconto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if	((pls_obter_se_item_lista(ie_tipo_item_w,'1') = 'S') or (coalesce(ie_tipo_item_w::text, '') = '')) then
		if (ie_tipo_regra_w = 'M') then
			vl_tot_bonificacao_w	:= (((coalesce(tx_bonificacao_w,0) /100) * vl_beneficiario_w) + coalesce(vl_bonificacao_w,0));
			vl_retorno_w	:= vl_retorno_w + coalesce(vl_tot_bonificacao_w,0)*-1;
		elsif (ie_tipo_regra_w = 'D') then
			select	max(tx_desconto)
			into STRICT	tx_desconto_w
			from	pls_preco_regra
			where	nr_seq_regra = nr_seq_desconto_w
			and	qt_vidas_w between coalesce(qt_min_vidas,qt_vidas_w) and coalesce(qt_max_vidas,qt_vidas_w);

			vl_retorno_w := vl_retorno_w + ((tx_desconto_w/100) * vl_beneficiario_w);
		end if;
	end if;
	end;
end loop;
close C01;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_vl_bonif_seg_pre ( nr_seq_segurado_p bigint, nr_seq_vinculo_p bigint) FROM PUBLIC;

