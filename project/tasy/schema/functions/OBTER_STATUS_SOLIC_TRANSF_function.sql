-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_solic_transf ( nr_ordem_compra_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(2);

qt_prevista_entrega_w	double precision;
qt_real_entrega_w		double precision;
qt_material_atend_w             ordem_compra_item_cb.qt_material%type;
nr_item_oci_w                   ordem_compra_item.nr_item_oci%type;

qt_existe_w		bigint;

c01 CURSOR FOR
SELECT	sum(c.qt_prevista_entrega),
	obter_qt_oci_trans_nota(b.nr_ordem_compra, b.nr_item_oci,'E')
from	ordem_compra_item_entrega c,
	ordem_compra_item b,
	ordem_compra a
where	a.nr_ordem_compra = b.nr_ordem_compra
and	b.nr_ordem_compra = c.nr_ordem_compra
and	b.nr_item_oci = c.nr_item_oci
and	coalesce(c.dt_cancelamento::text, '') = ''
and	a.nr_ordem_compra = nr_ordem_compra_p
group by b.nr_ordem_compra, b.nr_item_oci;

c02 CURSOR FOR
SELECT	sum(c.qt_prevista_entrega),
	obter_qt_oci_trans_nota(b.nr_ordem_compra, b.nr_item_oci,'S')
from	ordem_compra_item_entrega c,
	ordem_compra_item b,
	ordem_compra a
where	a.nr_ordem_compra = b.nr_ordem_compra
and	b.nr_ordem_compra = c.nr_ordem_compra
and	b.nr_item_oci = c.nr_item_oci
and	coalesce(c.dt_cancelamento::text, '') = ''
and	a.nr_ordem_compra = nr_ordem_compra_p
group by b.nr_ordem_compra, b.nr_item_oci;

c03 CURSOR FOR
SELECT	sum(c.qt_prevista_entrega),
    b.nr_item_oci
from	ordem_compra_item_entrega c,
	ordem_compra_item b,
	ordem_compra a
where	a.nr_ordem_compra = b.nr_ordem_compra
and	b.nr_ordem_compra = c.nr_ordem_compra
and	b.nr_item_oci = c.nr_item_oci
and	coalesce(c.dt_cancelamento::text, '') = ''
and	a.nr_ordem_compra = nr_ordem_compra_p
group by b.nr_ordem_compra, b.nr_item_oci;

c04 CURSOR FOR
SELECT	sum(c.qt_prevista_entrega) - obter_qt_oci_trans_nota(b.nr_ordem_compra, b.nr_item_oci,'E'),
    b.nr_item_oci
from	ordem_compra_item_entrega c,
	ordem_compra_item b,
	ordem_compra a
where	a.nr_ordem_compra = b.nr_ordem_compra
and	b.nr_ordem_compra = c.nr_ordem_compra
and	b.nr_item_oci = c.nr_item_oci
and	coalesce(c.dt_cancelamento::text, '') = ''
and	a.nr_ordem_compra = nr_ordem_compra_p
group by b.nr_ordem_compra, b.nr_item_oci;





BEGIN
select	count(*)
into STRICT	qt_existe_w
from	ordem_compra a,
	ordem_compra_item b
where	a.nr_ordem_compra = b.nr_ordem_compra
and	a.ie_tipo_ordem = 'T'
and	a.nr_ordem_compra = nr_ordem_compra_p;

if (qt_existe_w > 0) then
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	ordem_compra_item_entrega c,
		ordem_compra_item b,
		ordem_compra a
	where	a.nr_ordem_compra = b.nr_ordem_compra
	and	b.nr_ordem_compra = c.nr_ordem_compra
	and	b.nr_item_oci = c.nr_item_oci
	and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
	and	coalesce(c.dt_cancelamento::text, '') = ''
	and	a.nr_ordem_compra = nr_ordem_compra_p;
	
	if (qt_existe_w = 0) then
		ds_retorno_w := 'CA';
	else
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	ordem_compra_item b,
			ordem_compra a
		where	a.nr_ordem_compra = b.nr_ordem_compra
		and	obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci, 'E') > 0
		and	a.nr_ordem_compra = nr_ordem_compra_p;
		
		if (qt_existe_w = 0) then
			begin

            select	count(*)
            into STRICT	qt_existe_w
            from	ordem_compra_item b,
			ordem_compra a
            where	a.nr_ordem_compra = b.nr_ordem_compra
            and	obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci, 'S') > 0
            and	a.nr_ordem_compra = nr_ordem_compra_p;

            if (qt_existe_w = 0) then     
                select	count(*)
                into STRICT	qt_existe_w
                from	ordem_compra a
                where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
                and	a.nr_ordem_compra = nr_ordem_compra_p;
			
                if (qt_existe_w > 0) then
                	ds_retorno_w := 'PE';
            	end if;
            else
                qt_existe_w := 0;
                open c02;
                loop
                fetch c02 into	
                    qt_prevista_entrega_w,
                    qt_real_entrega_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */
                begin
				if (qt_prevista_entrega_w > qt_real_entrega_w) then
					qt_existe_w := qt_existe_w + 1;
				end if;
				end;
                end loop;
                close c02;

                if (qt_existe_w = 0) then
                  
                    qt_existe_w := 0;
                    open c03;
                    loop
                    fetch c03 into
                        qt_prevista_entrega_w,
                        nr_item_oci_w;
                    EXIT WHEN NOT FOUND; /* apply on c03 */
                    begin

                        select coalesce(max(qt_material),0)
                        into STRICT qt_material_atend_w
                        from ordem_compra_item_cb
                        where nr_ordem_compra = nr_ordem_compra_p
                        and ie_atende_recebe = 'R'
                        and nr_item_oci = nr_item_oci_w;

                        if (qt_prevista_entrega_w > qt_material_atend_w) then
                            qt_existe_w := qt_existe_w + 1;
                        end if;
                   end;
                   end loop;
                   close c03;
             
                   if (qt_existe_w = 0) then
                        ds_retorno_w := 'AG';
                   else
                        ds_retorno_w := 'AD';
                   end if;
                else
                    select	count(*)
                    into STRICT	qt_existe_w
                    from	ordem_compra a
                    where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
                    and	a.nr_ordem_compra = nr_ordem_compra_p;

                    if (qt_existe_w > 0) then
                        ds_retorno_w := 'DP';
                    end if;
                end if;
            end if;

            
			end;
		else
			begin
			qt_existe_w := 0;
			
			open c01;
			loop
			fetch c01 into	
				qt_prevista_entrega_w,
				qt_real_entrega_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin
				if (qt_prevista_entrega_w > qt_real_entrega_w) then
					qt_existe_w := qt_existe_w + 1;
				end if;
				end;
			end loop;
			close c01;
			
			if (qt_existe_w > 0) then
                    qt_existe_w := 0;
                    open c04;
                    loop
                    fetch c04 into
                        qt_prevista_entrega_w,
                        nr_item_oci_w;
                    EXIT WHEN NOT FOUND; /* apply on c04 */
                    begin

                        select coalesce(max(qt_material),0)
                        into STRICT qt_material_atend_w
                        from ordem_compra_item_cb
                        where nr_ordem_compra = nr_ordem_compra_p
                        and ie_atende_recebe = 'R'
                        and nr_item_oci = nr_item_oci_w;

                        if (qt_prevista_entrega_w > qt_material_atend_w) then
                            qt_existe_w := qt_existe_w + 1;
                        end if;
                   end;
                   end loop;
                   close c04;
             
                   if (qt_existe_w = 0) then
                        ds_retorno_w := 'AG';
                   else
                        ds_retorno_w := 'PA';
                   end if;
			else
				ds_retorno_w := 'AT';
			end if;
			end;
		end if;
		end;
	end if;
	end;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_solic_transf ( nr_ordem_compra_p bigint) FROM PUBLIC;

