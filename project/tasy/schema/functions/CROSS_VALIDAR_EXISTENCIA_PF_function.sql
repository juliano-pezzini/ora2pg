-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cross_validar_existencia_pf ( cd_paciente_externo_p text, nr_cpf_p text, nr_cartao_nac_sus_p text, nm_mae_p text, dt_nascimento_p timestamp, nm_pessoa_fisica_p text ) RETURNS AGENDA.CD_PESSOA_FISICA%TYPE AS $body$
DECLARE

    paciente_existe_w agenda.cd_pessoa_fisica%TYPE;
    paciente_nao_existe_w agenda.cd_pessoa_fisica%TYPE := 'N';
    cd_paciente_externo_w  gercon_solic_consulta.cd_paciente_externo%TYPE := cd_paciente_externo_p;
    nr_cpf_w gercon_solic_consulta.nr_cpf%TYPE := nr_cpf_p;
    nr_cartao_nac_sus_w gercon_solic_consulta.nr_cartao_nac_sus%TYPE := nr_cartao_nac_sus_p;
    nm_mae_w gercon_solic_consulta.nm_mae%TYPE := nm_mae_p;
    dt_nascimento_w gercon_solic_consulta.dt_nascimento%TYPE := dt_nascimento_p;
    nm_pessoa_fisica_w gercon_solic_consulta.nm_pessoa_fisica%TYPE := nm_pessoa_fisica_p;
    ie_complemento_mae_w compl_pessoa_fisica.ie_tipo_complemento%TYPE := 5;

BEGIN
    IF (cd_paciente_externo_w IS NOT NULL AND cd_paciente_externo_w::text <> '') THEN
        SELECT
            MAX(a.cd_pessoa_fisica)
        INTO STRICT paciente_existe_w
        FROM
            pessoa_fisica      a
             INNER JOIN pf_codigo_externo  b
                ON  b.cd_pessoa_fisica = a.cd_pessoa_fisica
        WHERE
            b.cd_pessoa_fisica_externo = cd_paciente_externo_w  LIMIT 1;

    END IF;

    IF (coalesce(paciente_existe_w::text, '') = '' AND (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '')) THEN
        SELECT
            MAX(cd_pessoa_fisica)
        INTO STRICT paciente_existe_w
        FROM
            pessoa_fisica
        WHERE
            nr_cpf = nr_cpf_w  LIMIT 1;

    END IF;

    IF (coalesce(paciente_existe_w::text, '') = '' AND (nr_cartao_nac_sus_w IS NOT NULL AND nr_cartao_nac_sus_w::text <> '')) THEN
        SELECT
            MAX(cd_pessoa_fisica)
        INTO STRICT paciente_existe_w
        FROM
            pessoa_fisica
        WHERE
            nr_cartao_nac_sus = nr_cartao_nac_sus_w  LIMIT 1;

    END IF;

    IF (coalesce(paciente_existe_w::text, '') = '' AND (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '')) THEN
        IF (nm_mae_w IS NOT NULL AND nm_mae_w::text <> '') THEN
            SELECT
                MAX(pf.cd_pessoa_fisica)
            INTO STRICT paciente_existe_w
            FROM
                pessoa_fisica        pf
                INNER JOIN compl_pessoa_fisica  cpf
                    ON pf.cd_pessoa_fisica = cpf.cd_pessoa_fisica
            WHERE   
                pf.dt_nascimento = dt_nascimento_w
                AND cpf.nm_contato = nm_mae_w
                AND cpf.ie_tipo_complemento = ie_complemento_mae_w  LIMIT 1;

        END IF;

        IF (coalesce(paciente_existe_w::text, '') = '' AND (nm_pessoa_fisica_w IS NOT NULL AND nm_pessoa_fisica_w::text <> '')) THEN
            SELECT
                MAX(cd_pessoa_fisica)
            INTO STRICT paciente_existe_w
            FROM
                pessoa_fisica
            WHERE
                    dt_nascimento = dt_nascimento_w
                AND nm_pessoa_fisica = nm_pessoa_fisica_w  LIMIT 1;

        END IF;

    END IF;
    IF coalesce(paciente_existe_w::text, '') = '' THEN
        paciente_existe_w := paciente_nao_existe_w;
    END IF;
    RETURN paciente_existe_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION cross_validar_existencia_pf ( cd_paciente_externo_p text, nr_cpf_p text, nr_cartao_nac_sus_p text, nm_mae_p text, dt_nascimento_p timestamp, nm_pessoa_fisica_p text ) FROM PUBLIC;

