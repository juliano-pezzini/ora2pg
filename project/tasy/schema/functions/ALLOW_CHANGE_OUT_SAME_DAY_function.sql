-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION allow_change_out_same_day ( nr_seq_tipo_admissao_p subtipo_episodio.nr_seq_tipo_admissao%type, nr_case_p bigint, nr_atendimento_p bigint, dt_entrada_p timestamp) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1);
ie_permite_internar_w	subtipo_episodio.ie_permite_internar%type;
nr_seq_tipo_episodio_w	episodio_paciente.nr_seq_tipo_episodio%type;
ie_tipo_episodio_w	tipo_episodio.ie_tipo%type;
ie_tipo_atendimento_w	tipo_admissao_fat.ie_tipo_atendimento%type;

c01 CURSOR(nr_case_p bigint, nr_atendimento_p bigint) FOR
	SELECT  ap.dt_entrada,
			ap.nr_atendimento,
			ep.nr_seq_tipo_episodio,
			ap.nr_seq_tipo_admissao_fat,
			ap.ie_tipo_atendimento
	from    atendimento_paciente ap,
			episodio_paciente ep
	where   ap.nr_seq_episodio = ep.nr_sequencia
	and		ep.nr_sequencia    = nr_case_p
	and		ap.nr_atendimento <> nr_atendimento_p
	and		coalesce(ap.dt_cancelamento::text, '') = ''
	and		coalesce(ap.dt_alta::text, '') = '';
BEGIN

ds_retorno_w := 'S';

if ((nr_seq_tipo_admissao_p IS NOT NULL AND nr_seq_tipo_admissao_p::text <> '') and
	 (nr_case_p IS NOT NULL AND nr_case_p::text <> '') and
	 (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and
	 (dt_entrada_p IS NOT NULL AND dt_entrada_p::text <> '')) then

	if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT')) then

		select	max(t.ie_tipo),
				max(e.nr_seq_tipo_episodio)
		into STRICT	ie_tipo_episodio_w,
				nr_seq_tipo_episodio_w
		from	atendimento_paciente a,
				episodio_paciente e,
				tipo_episodio t
		where   e.nr_seq_tipo_episodio = t.nr_sequencia
		and		a.nr_seq_episodio = e.nr_sequencia
		and		a.nr_atendimento = nr_atendimento_p
		and		e.nr_sequencia = nr_case_p;

		if (ie_tipo_episodio_w = 1) then

			 select max(ie_permite_internar),
				max(b.ie_tipo_atendimento)
			 into STRICT	ie_permite_internar_w,
				ie_tipo_atendimento_w
			 from 	subtipo_episodio a,
				tipo_admissao_fat b
			 where 	a.nr_seq_tipo_admissao = b.nr_sequencia
			 and	a.nr_seq_tipo_episodio = nr_seq_tipo_episodio_w	
			 and 	a.nr_seq_tipo_admissao = nr_seq_tipo_admissao_p;

			 if (ie_tipo_atendimento_w  = 8) then
				 for C01_W in C01(nr_case_p, nr_atendimento_p) loop
					 if (ie_permite_internar_w IS NOT NULL AND ie_permite_internar_w::text <> '') then
					
						if (ie_permite_internar_w = 1 and trunc(dt_entrada_p) > trunc(C01_W.dt_entrada)) then
							 ds_retorno_w := 'N';
						elsif (ie_permite_internar_w = 2 and trunc(dt_entrada_p) >= trunc(C01_W.dt_entrada)) then
							 ds_retorno_w := 'N';
						end if;

					end if;
				end loop C01_W;
			else
				 for C01_W in C01(nr_case_p, nr_atendimento_p) loop

					 select max(ie_permite_internar)
					 into STRICT	ie_permite_internar_w
					 from 	subtipo_episodio a,
						tipo_admissao_fat b
					 where 	a.nr_seq_tipo_admissao = b.nr_sequencia
					 and	a.nr_seq_tipo_episodio = C01_W.nr_seq_tipo_episodio
					 and 	a.nr_seq_tipo_admissao = C01_W.nr_seq_tipo_admissao_fat
					 and	b.ie_tipo_atendimento  = 8;

					if (ie_permite_internar_w IS NOT NULL AND ie_permite_internar_w::text <> '') then

						if (ie_permite_internar_w = 1 and trunc(dt_entrada_p) < trunc(C01_W.dt_entrada)) then
							 ds_retorno_w := 'N';
						elsif (ie_permite_internar_w = 2 and trunc(dt_entrada_p) <= trunc(C01_W.dt_entrada)) then
							 ds_retorno_w := 'N';
						end if;

					end if;

				 end loop C01_W;
			end if;
		end if;
	end if;
  end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION allow_change_out_same_day ( nr_seq_tipo_admissao_p subtipo_episodio.nr_seq_tipo_admissao%type, nr_case_p bigint, nr_atendimento_p bigint, dt_entrada_p timestamp) FROM PUBLIC;

