-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION consistir_numero_apac ( nr_apac_p bigint, nr_sequencia_p bigint, cd_pessoa_fisica_p text, dt_competencia_p timestamp) RETURNS varchar AS $body$
DECLARE

 
 
nr_apac_w		bigint;
qt_atendimento_apac_w	integer;
dt_competencia_w	timestamp;
cd_varia_atrib_w	varchar(2);
ie_digito_apac_w	varchar(1);
qt_reg_w		bigint;
cd_pessoa_fisica_w	varchar(10);

nr_seq_inconsistencia_w		bigint;
ds_erro_proccbo_w		varchar(255)	:= '';
ds_erro_procaih_w		varchar(255)	:= '';
ds_erro_proc_w			varchar(255)	:= '';
ds_erro_procpac_w		varchar(255)	:= '';
ds_erro_w			varchar(2000)	:= '';
ds_inco_w			varchar(255);
cd_inconsistencia_w		bigint;
ds_inconsistencia_w		varchar(255);
ds_retorno_w			varchar(2000);
i				integer;

 

BEGIN 
 
/*2020*/
 
select	count(*) 
into STRICT	qt_atendimento_apac_w 
from	sus_apac_movto 
where	nr_apac		= nr_apac_p 
and	coalesce(ie_status_apac::text, '') = '' 
and	nr_sequencia	<> nr_sequencia_p 
and	ie_tipo_apac <> 2;
if (qt_atendimento_apac_w	> 0 ) then 
	ds_erro_w		:= ds_erro_w || '2020, ';
end if;
 
/*2046*/
 
if (nr_apac_p > 0) then 
	begin 
	select	consistir_digito('AIH',to_char(nr_apac_p)) 
	into STRICT	ie_digito_apac_w 
	;
	if (ie_digito_apac_w = 'N') then 
		ds_erro_w		:= ds_erro_w || '2046, ';
	end if;
	end;
end if;
 
/*2159*/
 
select   count(*) 
into STRICT    qt_reg_w 
from    atendimento_paciente b, 
  sus_apac_movto a 
where   a.nr_atendimento    = b.nr_atendimento 
and    coalesce(a.ie_status_apac::text, '') = '' 
and    b.cd_pessoa_fisica   = cd_pessoa_fisica_p 
and    a.dt_competencia    = dt_competencia_p 
and    a.cd_motivo_cobranca not in (72,74) 
and    a.cd_varia_atrib not in ('11','21') 
and    a.ie_tipo_apac     <> 3;
if (qt_reg_w   > 1) then 
  ds_erro_w        := ds_erro_w || '2159, ';
end if;
 
/* Teste se há algum erro */
 
if (length(ds_erro_w) > 0) then 
	ds_inco_w	:= ds_erro_w;
	while (ds_inco_w IS NOT NULL AND ds_inco_w::text <> '') LOOP 
		begin 
		/* Busca a posição do separados das inconsistencias, no caso a virgula */
 
		i	:= position(', ' in ds_inco_w);
		if (i > 1) then 
			cd_inconsistencia_w	:= substr(ds_inco_w, 1, i-1);
			ds_inco_w		:= substr(ds_inco_w, i+1, 255);	
		end if;
		/* Se existir apenas um espaço em branco entao limpa a variavel para sair do loop */
 
		if (ds_inco_w = ' ') then 
			ds_inco_w	:= '';
		end if;
 
		/* Busca a descricao da inconsistencia */
 
		select	coalesce(max(ds_inconsistencia),'') 
		into STRICT	ds_inconsistencia_w 
		from	inconsistencia 
		where	cd_inconsistencia	= cd_inconsistencia_w;
 
		ds_retorno_w	:= ds_retorno_w || ' - ' || ds_inconsistencia_w || chr(10);
 
		end;
	END LOOP;
end if;
 
return	ds_retorno_w;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION consistir_numero_apac ( nr_apac_p bigint, nr_sequencia_p bigint, cd_pessoa_fisica_p text, dt_competencia_p timestamp) FROM PUBLIC;

