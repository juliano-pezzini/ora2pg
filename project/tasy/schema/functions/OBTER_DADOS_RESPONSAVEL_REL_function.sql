-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_responsavel_rel ( NR_ATENDIMENTO_P bigint, IE_RESPONSAVEL_P bigint, DS_CAMPO_P text) RETURNS varchar AS $body$
DECLARE


DS_RETORNO_W		varchar(255);
NR_TELEFONE_W		varchar(40);
NM_CONTATO_W		varchar(60);
DS_ENDERECO_W		varchar(255);
SG_ESTADO_W		varchar(15);
DS_MUNICIPIO_W		varchar(40);
DS_MUNICIPIO_IBGE_W	varchar(40);
DS_OBSERVACAO_W		varchar(2000);
CD_CEP_W		varchar(15);
NR_CPF_W		varchar(11);
NR_IDENTIDADE_W		varchar(15);
IE_EXISTE_W		varchar(1);
NR_DDD_TELEFONE_W	compl_pessoa_fisica.nr_ddd_telefone%type;
NR_DDI_TELEFONE_W	compl_pessoa_fisica.nr_ddi_telefone%type;
DS_TELEFONE_PF_w	varchar(60);

BEGIN

SELECT	CASE WHEN COUNT(1)=0 THEN 'N'  ELSE 'S' END
INTO STRICT	IE_EXISTE_W
FROM	COMPL_PESSOA_FISICA A,
	ATENDIMENTO_PACIENTE T
WHERE	A.CD_PESSOA_FISICA = T.CD_PESSOA_FISICA
AND	T.NR_ATENDIMENTO = NR_ATENDIMENTO_P
AND	(	(	TO_CHAR(A.IE_TIPO_COMPLEMENTO) = T.IE_RESPONSAVEL
			AND IE_RESPONSAVEL_P = 3
		) OR (
			TO_CHAR(A.IE_TIPO_COMPLEMENTO) = IE_RESPONSAVEL_P
			AND IE_RESPONSAVEL_P < 3
		)
	);

IF (IE_EXISTE_W = 'S') THEN
	SELECT	A.NR_TELEFONE,
		A.NR_DDD_TELEFONE,
		A.NR_DDI_TELEFONE,
		CASE WHEN coalesce(A.NR_TELEFONE::text, '') = '' THEN NULL  ELSE SUBSTR(OBTER_DADOS_PF(A.CD_PESSOA_FISICA, 'TCD'), 1, 15) END  DS_TELEFONE_PF,
		A.NM_CONTATO,
		A.DS_ENDERECO || coalesce(A.NR_ENDERECO, A.DS_COMPL_END) || ' - ' || A.DS_BAIRRO || CASE WHEN coalesce(A.DS_COMPLEMENTO::text, '') = '' THEN  NULL  ELSE ' - ' || A.DS_COMPLEMENTO END  DS_ENDERECO,
		A.SG_ESTADO,
		A.DS_MUNICIPIO,
		SUBSTR(OBTER_DESC_MUNICIPIO_IBGE(A.CD_MUNICIPIO_IBGE), 1, 40) DS_MUNICIPIO_IBGE,
		A.DS_OBSERVACAO,
		A.CD_CEP,
		coalesce(A.NR_CPF, OBTER_DADOS_PF(A.CD_PESSOA_FISICA, 'CPF')) NR_CPF,
		coalesce(NR_IDENTIDADE, OBTER_DADOS_PF(A.CD_PESSOA_FISICA, 'RG')) NR_IDENTIDADE
	INTO STRICT	NR_TELEFONE_W,
		NR_DDD_TELEFONE_W,
		NR_DDI_TELEFONE_W,
		DS_TELEFONE_PF_w,
		NM_CONTATO_W,
		DS_ENDERECO_W,
		SG_ESTADO_W,
		DS_MUNICIPIO_W,
		DS_MUNICIPIO_IBGE_W,
		DS_OBSERVACAO_W,
		CD_CEP_W,
		NR_CPF_W,
		NR_IDENTIDADE_W
	FROM	COMPL_PESSOA_FISICA A,
		ATENDIMENTO_PACIENTE T
	WHERE	A.CD_PESSOA_FISICA = T.CD_PESSOA_FISICA
	AND	T.NR_ATENDIMENTO = NR_ATENDIMENTO_P
	AND	(	(	TO_CHAR(A.IE_TIPO_COMPLEMENTO) = T.IE_RESPONSAVEL
				AND IE_RESPONSAVEL_P = 3
			) OR (
				TO_CHAR(A.IE_TIPO_COMPLEMENTO) = IE_RESPONSAVEL_P
				AND IE_RESPONSAVEL_P < 3
			)
		);
	
	if (NR_TELEFONE_W IS NOT NULL AND NR_TELEFONE_W::text <> '') then
		if (substr(somente_numero(NR_TELEFONE_W),1,2) = substr(somente_numero(NR_DDD_TELEFONE_W),1,2)) and (length(somente_numero(NR_TELEFONE_W)) > 9) then
			NR_TELEFONE_W := NR_DDI_TELEFONE_W || NR_TELEFONE_W;
		else
			NR_TELEFONE_W := NR_DDI_TELEFONE_W || NR_DDD_TELEFONE_W || NR_TELEFONE_W;
		end if;
	else
		NR_TELEFONE_W := DS_TELEFONE_PF_w;
	end if;
	
ELSE
	SELECT	OBTER_DADOS_PF(A.CD_PESSOA_FISICA, 'TCD') NR_TELEFONE,
		SUBSTR(A.NM_PESSOA_FISICA, 1, 40) NM_CONTATO,
		'' DS_ENDERECO,
		'' SG_ESTADO,
		'' DS_MUNICIPIO,
		'' DS_MUNICIPIO_IBGE,
		'' DS_OBSERVACAO,
		'' CD_CEP,
		A.NR_CPF,
		A.NR_IDENTIDADE
	INTO STRICT	NR_TELEFONE_W,
		NM_CONTATO_W,
		DS_ENDERECO_W,
		SG_ESTADO_W,
		DS_MUNICIPIO_W,
		DS_MUNICIPIO_IBGE_W,
		DS_OBSERVACAO_W,
		CD_CEP_W,
		NR_CPF_W,
		NR_IDENTIDADE_W
	FROM	PESSOA_FISICA A,
		ATENDIMENTO_PACIENTE T
	WHERE	A.CD_PESSOA_FISICA = T.CD_PESSOA_FISICA
	AND	T.NR_ATENDIMENTO = NR_ATENDIMENTO_P;
END IF;
	
DS_RETORNO_W :=
CASE DS_CAMPO_P
  WHEN 'NR_TELEFONE' THEN NR_TELEFONE_W
  WHEN 'NM_CONTATO' THEN NM_CONTATO_W
  WHEN 'DS_ENDERECO' THEN DS_ENDERECO_W
  WHEN 'SG_ESTADO' THEN SG_ESTADO_W
  WHEN 'DS_MUNICIPIO' THEN DS_MUNICIPIO_W
  WHEN 'DS_MUNICIPIO_IBGE' THEN DS_MUNICIPIO_IBGE_W
  WHEN 'DS_OBSERVACAO' THEN SUBSTR(DS_OBSERVACAO_W, 1,255)
  WHEN 'CD_CEP' THEN CD_CEP_W
  WHEN 'NR_CPF' THEN NR_CPF_W
  WHEN 'NR_IDENTIDADE' THEN NR_IDENTIDADE_W
END;

RETURN	DS_RETORNO_W;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_responsavel_rel ( NR_ATENDIMENTO_P bigint, IE_RESPONSAVEL_P bigint, DS_CAMPO_P text) FROM PUBLIC;

