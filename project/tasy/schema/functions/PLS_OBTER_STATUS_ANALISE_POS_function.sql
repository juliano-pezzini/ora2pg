-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_status_analise_pos ( nr_seq_analise_p bigint, nr_seq_conta_pos_estab_p bigint, ie_item_nao_encontrado_p text) RETURNS varchar AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Retornar o status de análise (geral do item) para visualização na nova função 
de análise de contas médicas (Análise Nova). O retorno dela é gravado na tabela temporária 
para exibir o ícone correspodente. 
 
O ícone irá funcionar como semáforo: 
"E" - Vermelho - Tem ocorrências que impedem o andamento do fluxo de análise. 
"A" - Amarelo - Tem ocorrências pendentes de análise, o grupo auditor responsável ainda não analisou as 
ocorrências. 
"V" - Verde - Não há mais ocorrências pendentes de análise (já passou por todos os grupos) ou o item foi 
liberado pelo sistema (não gerou glosas ou ocorrências que impediam pagamento) 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_status_analise_w	varchar(1)	:= null;
qt_glosa_nao_vinc_w	bigint;
qt_ocor_sem_fluxo_w	bigint;
qt_glosa_w		bigint;
qt_ocor_w		bigint;
qt_ocor_pend_fluxo_w	bigint;
ie_barra_finalizacao_w	varchar(1);
qt_glosa_pend_w		bigint;
ie_status_item_w	varchar(1);


BEGIN 
 
if (ie_item_nao_encontrado_p = 'S') then 
	ie_status_analise_w	:= 'E';
elsif (nr_seq_conta_pos_estab_p IS NOT NULL AND nr_seq_conta_pos_estab_p::text <> '') then 
	/* Se tiver alguma ocorrência que não permite finalizar a análise ou fechar conta é vermelho */
 
	--ie_barra_finalizacao_w	:= pls_obter_se_grupo_fim_analise(nr_seq_analise_p,null, nr_seq_conta_proc_p, null, null, null); 
	 
	if (ie_barra_finalizacao_w = 'S') then 
		ie_status_analise_w	:= 'E';
	else 
		/* Verificar se tem ocorrências que estão pendentes de parecer (Não informativas), se tiver é amarelo */
 
		if (coalesce(ie_status_analise_w::text, '') = '') then 
			select	max(ie_status) 
			into STRICT	ie_status_item_w 
			from	(SELECT	a.ie_status 
				from	pls_conta_mat			a, 
					pls_conta_pos_estabelecido	b 
				where	a.nr_sequencia	= b.nr_seq_conta_mat 
				and	b.nr_sequencia	= nr_seq_conta_pos_estab_p 
				and	((b.ie_situacao	= 'A') or (coalesce(b.ie_situacao::text, '') = '')) 
				
union all
 
				SELECT	a.ie_status 
				from	pls_conta_proc			a, 
					pls_conta_pos_estabelecido	b 
				where	a.nr_sequencia	= b.nr_seq_conta_proc 
				and	((b.ie_situacao	= 'A') or (coalesce(b.ie_situacao::text, '') = '')) 
				and	b.nr_sequencia	= nr_seq_conta_pos_estab_p) alias11;
				 
			if (ie_status_item_w = 'D') then 
				ie_status_analise_w	:= 'C';
			else 
				select	max(ie_status_faturamento) 
				into STRICT	ie_status_item_w 
				from	pls_conta_pos_estabelecido 
				where	nr_sequencia	= nr_seq_conta_pos_estab_p 
				and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
				 
				if (ie_status_item_w	= 'C') then 
					ie_status_analise_w	:= 'C';
				else 
					select	count(1) 
					into STRICT	qt_ocor_pend_fluxo_w 
					from	pls_ocorrencia b, 
						pls_ocorrencia_benef a 
					where	a.nr_seq_ocorrencia	= b.nr_sequencia 
					--and	a.ie_situacao		= 'A' 
					--and	b.ie_glosar_pagamento	= 'S' /* Não considerar as informativas */ 
					--and	b.nr_seq_motivo_glosa is not null /* Considerar apenas as com motivo de glosa vinculados */ 
					and	a.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_p 
					and (b.ie_glosar_faturamento = 'S') 
					and (coalesce(b.ie_auditoria_conta::text, '') = '' or b.ie_auditoria_conta = 'S') 
					and	exists (SELECT	1 
							from	pls_analise_glo_ocor_grupo x 
							where	x.nr_seq_ocor_benef	= a.nr_sequencia 
							and	x.ie_status = 'P');
					 
					if (qt_ocor_pend_fluxo_w > 0) then 
						ie_status_analise_w	:= 'A';
					else 
						/* Se não tiver pendentes é verde */
 
						ie_status_analise_w	:= 'V';
					end if;
				end if;
			end if;
		end if;
	end if;
end if;
 
return	ie_status_analise_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_status_analise_pos ( nr_seq_analise_p bigint, nr_seq_conta_pos_estab_p bigint, ie_item_nao_encontrado_p text) FROM PUBLIC;

