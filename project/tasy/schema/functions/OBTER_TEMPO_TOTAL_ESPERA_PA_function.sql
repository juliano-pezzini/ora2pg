-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tempo_total_espera_pa ( nr_atendimento_p bigint, qt_horas_passadas_p bigint, ie_regra_estab_p text, ds_clinica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, qt_medicos_p bigint) RETURNS bigint AS $body$
DECLARE


qt_tempo_tot_espera_w		bigint := 0;
qt_tempo_paciente_w		bigint := 0;
nr_atendimento_w		bigint;
dt_entrada_w			timestamp;
qt_prioridade_w			bigint;
ie_clinica_w			bigint;
qt_tempo_w			bigint;
qt_tempo_transf_w	bigint;

C01 CURSOR FOR
SELECT   obter_prior_triagem_class(a.nr_seq_triagem),
	 a.dt_entrada,
	 trunc(obter_tempo_espera_pa(a.ie_clinica,a.nr_seq_triagem,'') / qt_medicos_p) qt_tempo,
	 a.nr_atendimento
FROM     pessoa_fisica p,
         atendimento_paciente a
WHERE    a.cd_pessoa_fisica      = p.cd_pessoa_fisica
AND      a.dt_entrada            BETWEEN clock_timestamp() - (1/24 * qt_horas_passadas_p) AND clock_timestamp()
AND ((a.dt_fim_triagem IS NOT NULL AND a.dt_fim_triagem::text <> '') AND coalesce(a.dt_atend_medico::text, '') = '')
and      ie_regra_estab_p = '1'
AND      a.cd_estabelecimento    = cd_estabelecimento_p
AND      (a.ie_chamado IS NOT NULL AND a.ie_chamado::text <> '')
AND      (a.ie_clinica IS NOT NULL AND a.ie_clinica::text <> '')
AND      dt_alta_interno =  TO_DATE('30/12/2999','dd/mm/yyyy')
and      ((obter_se_contido(a.ie_clinica, ds_clinica_p) = 'S') or (coalesce(ds_clinica_p::text, '') = ''))

union

SELECT   obter_prior_triagem_class(a.nr_seq_triagem),
	 a.dt_entrada,
	 trunc(obter_tempo_espera_pa(a.ie_clinica,a.nr_seq_triagem,'') / qt_medicos_p)  qt_tempo,
	 a.nr_atendimento
FROM     pessoa_fisica p,
         atendimento_paciente a
WHERE    a.cd_pessoa_fisica      = p.cd_pessoa_fisica
AND      a.dt_entrada            BETWEEN clock_timestamp() - (1/24 * qt_horas_passadas_p) AND clock_timestamp()
AND ((a.dt_fim_triagem IS NOT NULL AND a.dt_fim_triagem::text <> '') AND coalesce(a.dt_atend_medico::text, '') = '')
and      ie_regra_estab_p <> '1'
AND      a.cd_estabelecimento   IN (SELECT x.cd_estabelecimento
                                    FROM usuario_estabelecimento_v x
                                    WHERE x.nm_usuario =  nm_usuario_p)
AND      (a.ie_chamado IS NOT NULL AND a.ie_chamado::text <> '')
AND      (a.ie_clinica IS NOT NULL AND a.ie_clinica::text <> '')
AND     dt_alta_interno =  TO_DATE('30/12/2999','dd/mm/yyyy')
and      ((obter_se_contido(a.ie_clinica, ds_clinica_p) = 'S') or (coalesce(ds_clinica_p::text, '') = ''))

union all

SELECT   obter_prior_triagem_class(a.nr_seq_triagem),
	 a.dt_entrada,
	15 qt_tempo,
	 a.nr_atendimento
FROM     pessoa_fisica p,
         atendimento_paciente a
WHERE    a.cd_pessoa_fisica      = p.cd_pessoa_fisica
AND      a.dt_entrada            BETWEEN clock_timestamp() - (1/24 * qt_horas_passadas_p) AND clock_timestamp()
AND      (dt_reavaliacao_medica IS NOT NULL AND dt_reavaliacao_medica::text <> '')
and      ie_regra_estab_p = '1'
AND      a.cd_estabelecimento    = cd_estabelecimento_p
AND      (a.ie_chamado IS NOT NULL AND a.ie_chamado::text <> '')
AND      (a.ie_clinica IS NOT NULL AND a.ie_clinica::text <> '')
AND      dt_alta_interno =  TO_DATE('30/12/2999','dd/mm/yyyy')
and      ((obter_se_contido(a.ie_clinica, ds_clinica_p) = 'S') or (coalesce(ds_clinica_p::text, '') = ''))
ORDER BY 1 desc, 2;



BEGIN

open C01;
loop
fetch C01 into
	qt_prioridade_w,
	dt_entrada_w,
	qt_tempo_paciente_w,
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nr_atendimento_w = nr_atendimento_p) then
		qt_tempo_tot_espera_w := qt_tempo_tot_espera_w + qt_tempo_paciente_w;
		exit;
	end if;

	qt_tempo_tot_espera_w := qt_tempo_tot_espera_w + qt_tempo_paciente_w;

	end;
end loop;
close C01;

select	max(ie_clinica)
into STRICT	ie_clinica_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

if (ie_clinica_w IS NOT NULL AND ie_clinica_w::text <> '') then
	select	coalesce(max(qt_tempo),0)
	into STRICT	qt_tempo_w
	from	tempo_adic_espera_pa
	where	ie_clinica = ie_clinica_w
	and		dt_atualizacao between clock_timestamp() -(qt_tempo/60/24) and clock_timestamp();

	qt_tempo_tot_espera_w	:= qt_tempo_tot_espera_w + qt_tempo_w;

end if;

SELECT  coalesce(sum(30),0) qt_tempo
into STRICT	qt_tempo_transf_w
FROM     pessoa_fisica p,
         atendimento_paciente a ,
		atendimento_alta b,
		parametro_medico m,
	MOTIVO_ALTA c
WHERE   a.cd_pessoa_fisica      = p.cd_pessoa_fisica
and		a.nr_atendimento         = b.nr_atendimento
and		c.cd_motivo_alta = b.cd_motivo_alta
and     m.cd_estabelecimento = cd_estabelecimento_p
and     ((b.ie_tipo_orientacao <> 'P')
or (coalesce(m.ie_liberar_desfecho,'N')  = 'N')
or      ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')))
and		c.IE_TRANSFERENCIA = 'S'
AND     a.dt_entrada            BETWEEN clock_timestamp() - (1/24 * qt_horas_passadas_p) AND clock_timestamp()
and     ie_regra_estab_p = '1'
AND     a.cd_estabelecimento    = cd_estabelecimento_p
AND     (a.ie_chamado IS NOT NULL AND a.ie_chamado::text <> '')
AND     (a.ie_clinica IS NOT NULL AND a.ie_clinica::text <> '')
AND     dt_alta_interno =  TO_DATE('30/12/2999','dd/mm/yyyy')
and     ((obter_se_contido(a.ie_clinica, ds_clinica_p) = 'S') or (coalesce(ds_clinica_p::text, '') = ''));


return	qt_tempo_tot_espera_w + qt_tempo_transf_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tempo_total_espera_pa ( nr_atendimento_p bigint, qt_horas_passadas_p bigint, ie_regra_estab_p text, ds_clinica_p text, cd_estabelecimento_p bigint, nm_usuario_p text, qt_medicos_p bigint) FROM PUBLIC;

