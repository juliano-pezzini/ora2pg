-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_prescr_pend_serv (nr_Seq_nut_serv_p bigint) RETURNS varchar AS $body$
DECLARE


ie_existe_w		varchar(1) := 'N';
dt_liberacao_w		timestamp;
dt_servico_w		timestamp;
nr_atendimento_w	bigint;
qt_minutos_w		bigint;
ie_nutricionista_w	varchar(1);
nr_prescricao_w		bigint;
ds_funcao_prescritor_w	varchar(255);
ie_prescr_definida_w	varchar(1);


BEGIN

ie_nutricionista_w := Obter_param_Usuario(1003, 107, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_nutricionista_w);

select	dt_liberacao,
	(replace(obter_dif_horario(clock_timestamp(), dt_servico),':',''))::numeric ,
	dt_servico,
	nr_atendimento
into STRICT	dt_liberacao_w,
	qt_minutos_w,
	dt_servico_w,
	nr_atendimento_w
from	nut_atend_serv_dia
where	nr_seq_nut_serv_p = nr_sequencia;

if (coalesce(dt_liberacao_w::text, '') = '') then
	ie_existe_w := 'N';
else
	ie_existe_w := 'S';
end if;

if (coalesce(ie_nutricionista_w,'N') = 'N') then

	if (ie_existe_w = 'S') then

		select	coalesce(max('S'),'N')
		into STRICT	ie_existe_w
		from 	prescr_medica a
		where 	nr_atendimento = nr_atendimento_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	dt_servico_w between a.DT_INICIO_PRESCR and a.DT_VALIDADE_PRESCR
		and	dt_liberacao > dt_liberacao_w
		and	coalesce(a.dt_ignora_prescr_nut::text, '') = ''
		and	((exists (SELECT 1 from prescr_dieta b where (a.nr_prescricao = b.nr_prescricao))) or (exists (select 1 from rep_jejum c where (a.nr_prescricao = c.nr_prescricao))) or (exists (select 1 from prescr_material d where (a.nr_prescricao = d.nr_prescricao and d.ie_agrupador in (8,12)))) or (exists (select 1 from nut_pac e where (a.nr_prescricao = e.nr_prescricao))));

	end if;

elsif (coalesce(ie_nutricionista_w,'N') = 'S') then
	select	max(nr_prescricao) nm_usuario_lib
	into STRICT	nr_prescricao_w
	from  	prescr_medica
	where 	nr_atendimento = nr_atendimento_w
	and		dt_liberacao = (SELECT max(a.dt_liberacao)
				from prescr_medica a
				where a.nr_atendimento = nr_atendimento_w
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	dt_servico_w between a.DT_INICIO_PRESCR and a.DT_VALIDADE_PRESCR
				and	coalesce(a.dt_ignora_prescr_nut::text, '') = ''
				and	((exists (select 1 from prescr_dieta b where (a.nr_prescricao = b.nr_prescricao))) or (exists (select 1 from rep_jejum c where (a.nr_prescricao = c.nr_prescricao))) or (exists (select 1 from prescr_material d where (a.nr_prescricao = d.nr_prescricao and d.ie_agrupador in (8,12)))) or (exists (select 1 from nut_pac e where (a.nr_prescricao = e.nr_prescricao)))));

	select	substr(Obter_funcao_usuario_orig(NM_USUARIO_ORIGINAL),1,240)
	into STRICT	ds_funcao_prescritor_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;

	ie_prescr_definida_w := obter_se_prescricao_nut_dia(nr_prescricao_w, nr_seq_nut_serv_p);

	if (ds_funcao_prescritor_w = obter_desc_expressao(310527)) or (ie_prescr_definida_w = 'S') then
		ie_existe_w := 'N';
	else
		ie_existe_w := 'S';
	end if;

end if;

return	ie_existe_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_prescr_pend_serv (nr_Seq_nut_serv_p bigint) FROM PUBLIC;

