-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION gqa_obter_resumo_etapa_txt (NR_SEQ_ETAPA_P bigint, IE_RTF text, IE_TIPO text) RETURNS varchar AS $body$
DECLARE


dummy      varchar(4000) := '';
localdummy varchar(4000) := '';
localtext  varchar(2000);
ds_cabecalho_w  varchar(1000);
ds_rodape_w			varchar(1000);
cd_perfil_ativo_w		bigint;
ds_fonte_w			    varchar(100);
ds_tam_fonte_w			varchar(100);
nr_tam_fonte_w			integer;

nm_usuario_w          gqa_protocolo_resumo.nm_usuario%type;
nr_seq_resumo_w       gqa_protocolo_resumo.nr_sequencia%type;
cd_doenca_w           gqa_acao.cd_doenca%type;
etapa                 gqa_protocolo_etapa_pac%rowtype;

  FUNCTION gqa_gerar_resumo_protocol_bold(text text) RETURN text IS
  
  item RECORD;
  acao RECORD;

BEGIN
  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    return '\b ' || text || '\b0 ';
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    return '<strong>' || text || '</strong>';
  else
    return text;
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocol_lb(text varchar2, space number) RETURN varchar2 IS
  localtextfunction varchar2(4000) := '';
  BEGIN

  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..(space * 2) LOOP
         localtextfunction := localtextfunction || ' ';
      END LOOP;
    end if;

    return localtextfunction || text || '\par ';
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    if ((space IS NOT NULL AND space::text <> '') and space >= 0) then
      localtextfunction := replace(' style="text-indent : @@em;"', '@@', space);
    else
      localtextfunction := '';
    end if;
    return '<p'|| localtextfunction ||'>' || text || '</p>';
  else
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..space LOOP
         localtextfunction := localtextfunction || ' ';
      END LOOP;
    end if;
    return localtextfunction || text || chr(13) || chr(10);
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocol_canc RETURN varchar2 IS
  BEGIN
  if (coalesce(IE_RTF::text, '') = '' or IE_RTF = 'S') then
    return gqa_gerar_resumo_protocol_bold(upper(obter_desc_expressao(322155))); -- colocar underline e italic
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    return '<span style="text-decoration:underline; color:#da2935;"><em>' || gqa_gerar_resumo_protocol_bold(upper(obter_desc_expressao(322155))) || '</em></span>';
  else
    return obter_desc_expressao(322155);
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_av(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(4000);
    localtextfunction2 varchar2(4000);
    responsefunction varchar2(4000) := '';
    resposta varchar2(4000);
  BEGIN
    responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select ds_tipo into STRICT localtextfunction from med_tipo_avaliacao a where nr_sequencia = acao.NR_SEQ_AVALIACAO;
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);

      if (etapa.qt_resultado IS NOT NULL AND etapa.qt_resultado::text <> '') then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(296046) || ': ' ||  etapa.qt_resultado, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(284510) || ': ', 6);

        resposta := obter_desc_expressao(297817);

        for item in (
            SELECT
                     x.DS_ITEM
                    ,x.IE_RESULTADO
                    ,c.QT_RESULTADO
                    ,c.DS_RESULTADO
            from MED_AVALIACAO_RESULT c,
                 MED_ITEM_AVALIAR x
            where c.NR_SEQ_AVALIACAO = etapa.NR_SEQ_AVALIACAO
              and c.NR_SEQ_ITEM = x.NR_SEQUENCIA
              and x.IE_RESULTADO not in (
               'L' -- Calculos
              ,'E' -- Resultado de Select
              ,'F' -- Resultado de Select Longo
              )
            order by x.NR_SEQ_APRESENT asc
        ) loop
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('> ' || item.DS_ITEM, 8);

          if (item.DS_RESULTADO IS NOT NULL AND item.DS_RESULTADO::text <> '') then
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.DS_RESULTADO, 10);
          else
            if (item.IE_RESULTADO = 'B') then
              select CASE WHEN item.QT_RESULTADO=0 THEN  obter_desc_expressao(327114)  ELSE obter_desc_expressao(327113) END  into STRICT localtextfunction2;
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || localtextfunction2, 10);
            else
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.QT_RESULTADO, 10);
            end if;
          end if;
        end loop;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 8);
      end if;

    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_dl(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '' and coalesce(etapa.QT_RESULTADO::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(327114), 6);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(287694) || ': ', 4);
        begin
            select t.cd_doenca
            into STRICT cd_doenca_w
            from gqa_acao t where t.nr_sequencia = etapa.nr_seq_acao  LIMIT 1;
        exception when no_data_found then
          cd_doenca_w := null;
        end;

        begin
          select zz.DS_DOENCA_CID into STRICT localtextfunction from CID_DOENCA zz where zz.CD_DOENCA_CID = cd_doenca_w;
        exception when no_data_found then
          localtextfunction := null;
        end;
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(cd_doenca_w || ' - ' || localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(487395), 6);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_es(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    localtextfunction2 varchar2(2000);
    resposta varchar2(200);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select  trim(both t.ds_escala) ds into STRICT localtextfunction from eif_escala_ii t where nr_sequencia = acao.NR_SEQ_SCORE_FLEX_II;
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);

      if (etapa.qt_resultado IS NOT NULL AND etapa.qt_resultado::text <> '') then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(296046) || ': ' ||  etapa.qt_resultado, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(284510) || ': ', 6);

        resposta := obter_desc_expressao(297817);

        for item in (
            SELECT
                    x.DS_ITEM
                    ,x.IE_RESULTADO
                    ,c.QT_RESULTADO
                    ,c.DS_RESULTADO
            from SCORE_AVALIACAO_RESULT c,
                 MED_ITEM_AVALIAR x
            where c.NR_SEQ_AVALIACAO = etapa.NR_SEQ_SCORE_FLEX_II
              and c.NR_SEQ_ITEM = x.NR_SEQUENCIA
              and x.IE_RESULTADO not in (
               'L' -- Calculos
              ,'E' -- Resultado de Select
              ,'F' -- Resultado de Select Longo
              )
            order by x.NR_SEQ_APRESENT asc
        ) loop
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('> ' || item.DS_ITEM, 8);

          if (item.DS_RESULTADO IS NOT NULL AND item.DS_RESULTADO::text <> '') then
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.DS_RESULTADO, 10);
          else
            if (item.IE_RESULTADO = 'B') then
              select CASE WHEN item.QT_RESULTADO=0 THEN  obter_desc_expressao(327114)  ELSE obter_desc_expressao(327113) END  into STRICT localtextfunction2;
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || localtextfunction2, 10);
            else
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.QT_RESULTADO, 10);
            end if;
          end if;
        end loop;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction || ' | ' || obter_desc_expressao(293938), 6);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_ep(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      -- consulta obtida na visao que mostra o campo no atepacSD...
      Select a.DS_REGRA ds
      into STRICT localtextfunction
            from   GQA_PENDENCIA_REGRA a,
                   GQA_ACAO b              
            where  b.nr_Seq_pend_regra = a.nr_sequencia
            and    b.IE_TIPO_ACAO = 'PP'
            and    a.ie_evento = '9'
            and    coalesce(b.ie_situacao,'A') = 'A'
            and    coalesce(a.ie_situacao,'A') = 'A'
            and    a.NR_SEQ_PENDENCIA =  ( SELECT max(t.NR_SEQ_PENDENCIA) 
                                                from   GQA_PENDENCIA_REGRA t         
                                              where  t.nr_sequencia  = acao.NR_SEQ_PEND_REGRA);

      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_me(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if ((acao.QT_PONTO_CANCELAR IS NOT NULL AND acao.QT_PONTO_CANCELAR::text <> '') and acao.QT_PONTO_CANCELAR = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(331217), 4);
      elsif ((acao.QT_PONTO_CONFIRMA IS NOT NULL AND acao.QT_PONTO_CONFIRMA::text <> '') and acao.QT_PONTO_CONFIRMA = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(285693), 4);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_nc(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction long;
    responsefunction varchar2(4000) := '';
    ds_evolucao varchar2(1000);
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      if ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        begin
          select DS_EVOLUCAO, Obter_desc_tipo_evolucao(IE_EVOLUCAO_CLINICA)
          into STRICT localtextfunction, ds_evolucao 
          from evolucao_paciente where cd_evolucao = etapa.nr_seq_evolucao;
        exception when no_data_found then
          localtextfunction := '';
        end;
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(792029) || ': ' || ds_evolucao, 4);

        if (IE_RTF = 'H') then
          responsefunction := responsefunction || '<div style="text-indent : 6em;">' || localtextfunction || '</div>';
        else
          responsefunction := responsefunction || localtextfunction;
        end if;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(792029) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pe(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pp(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if (acao.CD_PROTOCOLO IS NOT NULL AND acao.CD_PROTOCOLO::text <> '') then
        if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
        elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
        else
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
        end if;

        localtextfunction := OBTER_DESC_PROTOCOLO(acao.CD_PROTOCOLO);

        if (acao.NR_SEQ_PROTOCOLO IS NOT NULL AND acao.NR_SEQ_PROTOCOLO::text <> '') then
          localtextfunction := localtextfunction || ' | ' || obter_desc_expressao(298930) || ': ' || obter_desc_subtipo_protoc(acao.NR_SEQ_PROTOCOLO);
          localtextfunction := localtextfunction || ' | ' || obter_desc_expressao(691611) || ': ';

          if (acao.IE_EXECUTAR = 'S') then
            localtextfunction := localtextfunction || obter_desc_expressao(327113);
          else
            localtextfunction := localtextfunction || obter_desc_expressao(327114);
          end if;
        end if;

        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction || '', 6);

      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pg(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN varchar2 IS
    localtextfunction varchar2(2000);
    responsefunction varchar2(4000) := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '' and coalesce(etapa.QT_RESULTADO::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select DS_PENDENCIA into STRICT localtextfunction from GQA_PENDENCIA where nr_sequencia = acao.NR_SEQ_PROTOCOLO_GER;

      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

begin

    select a.*
    into STRICT etapa
    from GQA_PROTOCOLO_ETAPA_PAC a,
         ( SELECT 
                   y.nr_sequencia, 
                   y.nr_seq_etapa,
                   obter_dependencia_etapa(y.nr_seq_prot_pac, y.nr_seq_etapa, 'O') hierarquia
           from GQA_PROTOCOLO_ETAPA_PAC y
           where y.NR_SEQUENCIA = NR_SEQ_ETAPA_P
         ) b
    where a.NR_SEQUENCIA = NR_SEQ_ETAPA_P
    and a.nr_sequencia = b.nr_sequencia
    order by b.hierarquia asc;

    if (etapa.NR_SEQ_MOTIVO_CANCELAR IS NOT NULL AND etapa.NR_SEQ_MOTIVO_CANCELAR::text <> '') then
      SELECT t.nm_justificativa
      into STRICT localtext
      FROM gqa_pend_justificativa t
      WHERE nr_sequencia = etapa.NR_SEQ_MOTIVO_CANCELAR;

      if (coalesce(IE_TIPO::text, '') = '' or IE_TIPO = 'Z1') then
        dummy := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(etapa.DS_NOME_ETAPA) || ' - ' || gqa_gerar_resumo_protocol_canc, 2);
      end if;

      if (coalesce(IE_TIPO::text, '') = '' or IE_TIPO = 'Z2') then
        localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(929133) || ': ' || to_char(etapa.DT_CANCELAR_USUARIO, 'dd/mon/yyyy hh24:mi:ss'), 4);
        localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(569370) || ': ' || obter_pf_usuario(etapa.NM_USUARIO_CANCELAR, 'NOME') || ' (' || etapa.NM_USUARIO_CANCELAR || ')', 4);
        localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293478) || ': ' || localtext, 4);
        localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(292337) || ': ' || etapa.DS_JUSTIFICATIVA_CANCELAR, 4);
        dummy := dummy || localdummy;
      end if;
        GOTO end_loop_continue;
    end if;

    if (coalesce(IE_TIPO::text, '') = '' or IE_TIPO = 'Z1') then
      dummy := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(etapa.DS_NOME_ETAPA), 2);
    end if;

    if (coalesce(IE_TIPO::text, '') = '' or IE_TIPO = 'Z2') then
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(291978) || ': ' || to_char(etapa.DT_INICIO, 'dd/mon/yyyy hh24:mi:ss') 
                     || ', ' || obter_desc_expressao(290101) || ': ' || to_char(etapa.DT_FIM, 'dd/mon/yyyy hh24:mi:ss'), 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(289772) || ': ' || obter_pf_usuario(etapa.nm_usuario_executor, 'NOME') || ' (' || etapa.nm_usuario_executor || ')', 4);
      dummy := dummy || localdummy;
    end if;

    if (coalesce(IE_TIPO::text, '') = '' or IE_TIPO = 'Z3') then
      for acao in (SELECT * from GQA_ACAO where NR_SEQUENCIA = etapa.NR_SEQ_ACAO) loop
        if (acao.IE_TIPO_ACAO = 'AV') then
          dummy := dummy || gqa_gerar_resumo_protocolo_av(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'DL') then
          dummy := dummy || gqa_gerar_resumo_protocolo_dl(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'ES') then
          dummy := dummy || gqa_gerar_resumo_protocolo_es(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'EP') then
          dummy := dummy || gqa_gerar_resumo_protocolo_ep(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'ME') then
          dummy := dummy || gqa_gerar_resumo_protocolo_me(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'NC') then
          dummy := dummy || gqa_gerar_resumo_protocolo_nc(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'PE') then
          dummy := dummy || gqa_gerar_resumo_protocolo_pe(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'PP') then
          dummy := dummy || gqa_gerar_resumo_protocolo_pp(etapa, acao);
        elsif (acao.IE_TIPO_ACAO = 'PG') then
          dummy := dummy || gqa_gerar_resumo_protocolo_pg(etapa, acao);
        end if;
        dummy := dummy || gqa_gerar_resumo_protocol_lb('', null);
      end loop;
    end if;

   <<end_loop_continue>>

  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    ds_cabecalho_w := '{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fswiss\fcharset0 '
      || ds_fonte_w
      || ';}}'
      || '{\*\generator msftedit 5.41.15.1507;}\viewkind4\uc1\pard\f0\fs'
      || nr_tam_fonte_w
      || ' ';

    ds_rodape_w := '}';
    dummy := ds_cabecalho_w || dummy || ds_rodape_w;
  end if;
    dummy := regexp_replace(dummy, '<html.*?>|</html>', '');

  RAISE NOTICE '%', dummy;
  return dummy;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION gqa_obter_resumo_etapa_txt (NR_SEQ_ETAPA_P bigint, IE_RTF text, IE_TIPO text) FROM PUBLIC;

