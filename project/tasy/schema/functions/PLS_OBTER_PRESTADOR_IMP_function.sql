-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_prestador_imp ( cd_cgc_prestador_p text, cd_cpf_prestador_p text, nr_seq_prestador_p text, nr_crm_prest_solic_imp_p text, sg_cons_prest_solic_imp_p text, uf_crm_prest_solic_imp_p text, ie_origem_p text default 'C', cd_estabelecimento_p bigint default null, dt_referencia_p timestamp default null) RETURNS bigint AS $body$
DECLARE


/* ie_origem_p -Origem da solicitacao
	C : Conta
	G : Guia
*/
nr_seq_prestador_w		bigint;
nr_seq_prestador_aux_w		bigint;
nr_seq_prestador_ww		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_ww		varchar(10);
cd_cgc_w			varchar(20);
ie_codigo_prest_operadora_w	varchar(1);
cd_prestador_w			varchar(255);
cd_prestador_aux_w		varchar(255);
cd_cgc_prestador_w		varchar(255);
dt_referencia_w			timestamp;


BEGIN

dt_referencia_w := coalesce(dt_referencia_p,clock_timestamp());

if (coalesce(nr_seq_prestador_p,'0') <> '0') then
	
	/* OS -  787507 */

	if (ie_origem_p = 'G') then
		select	max(ie_codigo_prest_operadora)
		into STRICT 	ie_codigo_prest_operadora_w
		from	pls_param_importacao_guia;
	else	
		select	max(ie_codigo_prest_operadora)
		into STRICT 	ie_codigo_prest_operadora_w
		from	pls_param_importacao_conta
		where	coalesce(cd_estabelecimento_p,cd_estabelecimento) = cd_estabelecimento;
	end if;
	
	if (coalesce(ie_codigo_prest_operadora_w,'S') = 'S') then
		
		begin
		nr_seq_prestador_w	:= (nr_seq_prestador_p)::numeric;
		nr_seq_prestador_aux_w	:= (nr_seq_prestador_p)::numeric;
		exception
		when others then
			nr_seq_prestador_w	:= null;
			nr_seq_prestador_aux_w	:= null;
		end;
	
		select	max(nr_sequencia)
		into STRICT	nr_seq_prestador_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_aux_w
		and	ie_situacao 	= 'A'
		and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= clock_timestamp()))
		and	dt_cadastro	<= clock_timestamp();
		
		if (coalesce(nr_seq_prestador_w,0) = 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_aux_w
			and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= clock_timestamp()))
			and	dt_cadastro	<= clock_timestamp();
		end if;
		
		if (coalesce(nr_seq_prestador_w,0) = 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_aux_w;
		end if;
		
	elsif (ie_codigo_prest_operadora_w = 'C') then	
	
		cd_prestador_w	:= nr_seq_prestador_p;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_prestador_w
		from	pls_prestador
		where	cd_prestador		= cd_prestador_w
		and	ie_prestador_matriz	= 'S'
		and	ie_situacao 		= 'A'
		and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= dt_referencia_w))
		and	dt_cadastro	<= dt_referencia_w;
			
		/* Verifica os prestadores ativos */

		if (coalesce(nr_seq_prestador_w,0) = 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_prestador	= cd_prestador_w
			and	ie_situacao 	= 'A'
			and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= dt_referencia_w))
			and	dt_cadastro	<= dt_referencia_w;
		end if;
		
		if (coalesce(nr_seq_prestador_w,0) = 0) then
			/* Verifica prestadores ativos ou inativos */

			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_prestador_upper = upper(cd_prestador_w)
			and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= dt_referencia_w))
			and	dt_cadastro	<= dt_referencia_w;
		end if;
		
		if (coalesce(nr_seq_prestador_w,0) = 0)	then
			/* Verifica o prestador eliminando os caracteres especiais do codigo */

			cd_prestador_aux_w := elimina_caractere_especial(cd_prestador_w);
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_prestador_upper_espe = upper(cd_prestador_aux_w)
			and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= dt_referencia_w))
			and	dt_cadastro	<= dt_referencia_w;
			
			if (coalesce(nr_seq_prestador_w,0) = 0)	then
				select	max(nr_sequencia)
				into STRICT	nr_seq_prestador_w
				from	pls_prestador
				where	cd_prestador_upper_espe = upper(cd_prestador_aux_w);
			end if;
			
		end if;
		
		if (coalesce(nr_seq_prestador_w,0) = 0)	then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_prestador_upper = upper(cd_prestador_w);
		end if;
	end if;	

	if (coalesce(nr_seq_prestador_w,'0') = '0')	then
		begin
		nr_seq_prestador_w	:= (nr_seq_prestador_p)::numeric;
		exception
		when others then
			nr_seq_prestador_w	:= null;	
		end;

		begin
			select	nr_sequencia
			into STRICT	nr_seq_prestador_ww
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_w  LIMIT 1;
		exception
		when others then
			nr_seq_prestador_w := null;
		end;

		/*SE HOUVER UM PRESTADOR INATIVO COM O CODIGO PROCURA O CD_PESSOA_FISICA DELE PARA PROCURAR SE NAO EXISTE OUTRO COM O REGISTRO ATIVO*/

		if (nr_seq_prestador_ww IS NOT NULL AND nr_seq_prestador_ww::text <> '') then
			select	max(cd_cgc),
				max(cd_pessoa_fisica)
			into STRICT	cd_cgc_w,
				cd_pessoa_fisica_ww
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_w;
			
			if (coalesce(cd_pessoa_fisica_ww,'X') <> 'X')	then
				select	max(nr_sequencia)
				into STRICT	nr_seq_prestador_w
				from	pls_prestador
				where	cd_pessoa_fisica	= cd_pessoa_fisica_ww
				and	ie_situacao 		= 'A';
				
				if (coalesce(nr_seq_prestador_w::text, '') = '') then
					nr_seq_prestador_w	:= nr_seq_prestador_ww;
				end if;
			elsif (coalesce(cd_cgc_w,'X') <> 'X')	then

				select	max(nr_sequencia)
				into STRICT	nr_seq_prestador_w
				from	pls_prestador
				where	cd_cgc	= cd_cgc_w
				and	ie_situacao 		= 'A';
				
				if (coalesce(nr_seq_prestador_w::text, '') = '') then
					nr_seq_prestador_w	:= nr_seq_prestador_ww;
				end if;
			end if;
		end if;	
	end if;
end if;

/* Verifica prestador pelo CNPJ */

if (coalesce(nr_seq_prestador_w,'0') = '0') and (cd_cgc_prestador_p IS NOT NULL AND cd_cgc_prestador_p::text <> '') then
	nr_seq_prestador_w	:= pls_obter_prestador_cgc(cd_cgc_prestador_p,null, cd_estabelecimento_p);
	
	if (coalesce(nr_seq_prestador_w,'0') = '0') then
		cd_cgc_prestador_w	:= substr(elimina_caractere_especial(cd_cgc_prestador_p),1,14);
		nr_seq_prestador_w	:= pls_obter_prestador_cgc(cd_cgc_prestador_w,null, cd_estabelecimento_p);
	end if;
end if;

/* Verifica prestador pelo CPF */

if (coalesce(nr_seq_prestador_w,'0') = '0') and (cd_cpf_prestador_p IS NOT NULL AND cd_cpf_prestador_p::text <> '') then

	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pessoa_fisica	a
	where	nr_cpf	= cd_cpf_prestador_p
	and	exists ( SELECT 1
			 from	medico	z
			 where	a.cd_pessoa_fisica = z.cd_pessoa_fisica
			 and	z.ie_situacao = 'A');
			
	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
		select	max(a.cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica	a
		where	nr_cpf	= cd_cpf_prestador_p
		and	exists ( SELECT 1
				 from	medico	z
				 where	a.cd_pessoa_fisica = z.cd_pessoa_fisica);
	end if;
		
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			
			-- ira identificar o prestador matriz (sem prestador matriz informado)
			select	max(pr.nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador pr
			where	pr.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	((coalesce(pr.dt_exclusao::text, '') = '') or (pr.dt_exclusao 	>= dt_referencia_w))
			and	pr.dt_cadastro	<= dt_referencia_w		
			and	pr.ie_situacao = 'A'
			and 	coalesce(pr.nr_seq_prest_princ::text, '') = '';

		if (coalesce(nr_seq_prestador_w::text, '') = '') then
			-- ira identificar o maior prestador vigente e ativo
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and		((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= dt_referencia_w))
			and		dt_cadastro	<= dt_referencia_w		
			and		ie_situacao = 'A';
		end if;

		if (coalesce(nr_seq_prestador_w::text, '') = '') then
			-- ira identificar o maior prestador ativo
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	ie_situacao = 'A';

			if (coalesce(nr_seq_prestador_w::text, '') = '') then
				-- ira identificar o maior prestador
				select	max(nr_sequencia)
				into STRICT	nr_seq_prestador_w
				from	pls_prestador
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
			end if;
		end if;
	end if;
end if;

/* Verifica atraves do CRM do medico */

if (coalesce(nr_seq_prestador_w,'0') = '0') and (nr_crm_prest_solic_imp_p IS NOT NULL AND nr_crm_prest_solic_imp_p::text <> '') and (uf_crm_prest_solic_imp_p IS NOT NULL AND uf_crm_prest_solic_imp_p::text <> '') and (sg_cons_prest_solic_imp_p IS NOT NULL AND sg_cons_prest_solic_imp_p::text <> '') then
	begin
		select	a.cd_pessoa_fisica
		into STRICT	cd_pessoa_fisica_w
		from	conselho_profissional	c,
			pessoa_fisica 		b,
			medico 			a
		where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and	b.nr_seq_conselho	= c.nr_sequencia
		and	a.nr_crm		= nr_crm_prest_solic_imp_p
		and	a.uf_crm		= uf_crm_prest_solic_imp_p
		and	c.sg_conselho		= sg_cons_prest_solic_imp_p  LIMIT 1;	
		
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	nr_sequencia
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica 	= cd_pessoa_fisica_w  LIMIT 1;
		end if;
	exception
	when others then
		nr_seq_prestador_w	:= null;
		cd_pessoa_fisica_w	:= null;
	end;
end if;

if (coalesce(nr_seq_prestador_w,'0') = '0') then
	nr_seq_prestador_w	:= null;
end if;

return	nr_seq_prestador_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_prestador_imp ( cd_cgc_prestador_p text, cd_cpf_prestador_p text, nr_seq_prestador_p text, nr_crm_prest_solic_imp_p text, sg_cons_prest_solic_imp_p text, uf_crm_prest_solic_imp_p text, ie_origem_p text default 'C', cd_estabelecimento_p bigint default null, dt_referencia_p timestamp default null) FROM PUBLIC;

