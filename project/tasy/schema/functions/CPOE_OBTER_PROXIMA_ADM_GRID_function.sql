-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_proxima_adm_grid ( nr_seq_item_cpoe_p bigint, ie_tipo_item_p text, nm_usuario_p text default null, nr_atendimento_p bigint default null, ie_administracao_p text default null, cd_intervalo_p text default null, dt_inicio_base_p timestamp default null, dt_inicio_p timestamp default null, hr_prim_horario_p text default null, dt_fim_p timestamp default null, nm_rep_tabela_cpoe_p text default null, nm_rep_chave_cpoe_p text default null, nm_hor_tabela_rep_p text default null, nm_hor_chave_rep_p text default null, nr_prescricao_p bigint default null) RETURNS varchar AS $body$
DECLARE


nr_prescricao_w			prescr_medica.nr_prescricao%type;
nr_seq_item_w			prescr_material.nr_sequencia%type;

ie_operacao_w			intervalo_prescricao.ie_operacao%type;
dt_prox_adm_w			timestamp;
dt_fim_w				timestamp;

qt_controle_w			double precision;

	procedure Localizar_inicio_item is
		ds_sql_w	varchar(4000);
	
BEGIN
		if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') and (coalesce(hr_prim_horario_p,'__:__') <> '__:__') then
			dt_prox_adm_w	:= to_date(to_char(dt_inicio_p,'dd/mm/yyyy ') || hr_prim_horario_p,'dd/mm/yyyy hh24:mi');
		else
			dt_prox_adm_w	:= dt_inicio_base_p;
		end if;

		-- Localizar última prescrição gerada pela CPOE, não pode ser a prescrição que está sendo gerada
		ds_sql_w	:=
				' select	max(b.nr_prescricao) ' ||
				' from		prescr_medica a, ' ||
				' 			' || nm_rep_tabela_cpoe_p || ' b ' ||
				' where		a.nr_prescricao = b.nr_prescricao ' ||
				' and		a.nr_atendimento = :nr_atendimento ' ||
				' and		a.dt_inicio_prescr > :dt_inicio_busca ' ||
				' and		b.' || nm_rep_chave_cpoe_p || ' = :nr_seq_item_cpoe ';

		if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
			ds_sql_w	:= ds_sql_w || ' and		a.nr_prescricao < ' || nr_prescricao_p || ' ';
		end if;

		EXECUTE
				ds_sql_w
		into STRICT	nr_prescricao_w
		using	nr_atendimento_p,
				dt_inicio_base_p-10,
				nr_seq_item_cpoe_p;

		-- Localizar o item principal da última prescrição gerada pela CPOE
		EXECUTE
				' select	min(b.nr_sequencia) ' ||
				' from		' || nm_rep_tabela_cpoe_p || ' b ' ||
				' where		b.nr_prescricao = :nr_prescricao ' ||
				' and		b.' || nm_rep_chave_cpoe_p || ' = :nr_seq_item_cpoe '
		into STRICT	nr_seq_item_w
		using	nr_prescricao_w,
				nr_seq_item_cpoe_p;

		EXECUTE
				' select	nvl(max(c.dt_horario), :dt_inicio) ' ||
				' from		' || nm_hor_tabela_rep_p || ' c ' ||
				' where		c.nr_prescricao = :nr_prescricao ' ||
				' and		c.' || nm_hor_chave_rep_p || ' = :nr_seq_item '
		into STRICT	dt_prox_adm_w
		using	dt_prox_adm_w,
				nr_prescricao_w,
				nr_seq_item_w;
	end;

	procedure Gera_prox_adm_por_dias_espec is
		ds_dias_utilizacao_w	varchar2(30);
	begin
		-- Verificar o tipo e quantidade de operação ou dias específicos para o intervalo
		select	CASE WHEN max(ie_domingo)='S' THEN '1,' END  ||
				CASE WHEN max(ie_segunda)='S' THEN '2,' END  ||
				CASE WHEN max(ie_terca)='S' THEN '3,' END  ||
				CASE WHEN max(ie_quarta)='S' THEN '4,' END  ||
				CASE WHEN max(ie_quinta)='S' THEN '5,' END  ||
				CASE WHEN max(ie_sexta)='S' THEN '6,' END  ||
				CASE WHEN max(ie_sabado)='S' THEN '7,' END
		into STRICT	ds_dias_utilizacao_w
		from	intervalo_prescricao
		where	cd_intervalo = cd_intervalo_p;

		-- Caso estes tenham sido definidos, verificar qual é o próximo dia
		if (ds_dias_utilizacao_w IS NOT NULL AND ds_dias_utilizacao_w::text <> '') then
			--dt_prox_adm_w				:= dt_prox_adm_w+1;
			Localizar_inicio_item;

			-- CUIDADO: Está repetição pode travar a CPOE, se manipulada sem atenção
			--  Enquanto o início for menor que
			loop
				begin
				dt_prox_adm_w		:= dt_prox_adm_w + 1;
				qt_controle_w		:= qt_controle_w + 24;

				if (qt_controle_w > 5000) then
					return;
				end if;
				end;
			exit when(dt_prox_adm_w > dt_inicio_base_p) and (obter_se_valor_contido(pkg_date_utils.get_WeekDay(dt_prox_adm_w),ds_dias_utilizacao_w) = 'S');
			end loop;
		end if;

	end;

	procedure Gerar_prox_adm_por_horas is
		qt_horas_adic_w		number(18,6);
	begin
		qt_horas_adic_w		:= Obter_ocorrencia_intervalo(cd_intervalo_p, 24, 'H');

		if (qt_horas_adic_w > 24) then
			Localizar_inicio_item;

			-- CUIDADO: Está repetição pode travar a CPOE, se manipulada sem atenção
			--  Enquanto o início for menor que
			loop
				begin
				dt_prox_adm_w	:= dt_prox_adm_w + dividir(qt_horas_adic_w, 24);
				qt_controle_w	:= qt_controle_w + qt_horas_adic_w;

				if (qt_controle_w > 5000) then
					return;
				end if;

				end;
			exit when(dt_prox_adm_w > dt_inicio_base_p);
			end loop;
		end if;
	end;
begin
if (dt_inicio_p > clock_timestamp() + ((24 - cpoe_obter_quant_horas_ant(obter_perfil_ativo))/24)) then
	dt_prox_adm_w := dt_inicio_p;
end if;


-- Itens ACM e SN não devem definir próxima geração
if (ie_administracao_p not in ('C', 'N')) and (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then

	-- Verificar o tipo de operação para o intervalo
	select	coalesce(max(ie_operacao),'X')
	into STRICT	ie_operacao_w
	from	intervalo_prescricao
	where	cd_intervalo = cd_intervalo_p;

	-- Para intervalos em horas (H) e por dias específicos (D), deve-se recalcular conforme o último horário do item
	if (ie_operacao_w in ('H','D')) then

		-- Se intervalo liberado em dias específicos, verificar
		if (ie_operacao_w = 'D') then
			Gera_prox_adm_por_dias_espec;
		else
			Gerar_prox_adm_por_horas;
		end if;
	end if;

	-- Se a data de próxima administração foi gerada, retornar
end if;


if (dt_prox_adm_w IS NOT NULL AND dt_prox_adm_w::text <> '') then
	dt_fim_w	:= coalesce(dt_fim_p, dt_prox_adm_w+1);

	if (dt_prox_adm_w < dt_fim_w) then
		return to_char(dt_prox_adm_w,'hh24:mi') || '@' || to_char(dt_prox_adm_w,'dd-Mon-yyyy');
	end if;
end if;


return null;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_proxima_adm_grid ( nr_seq_item_cpoe_p bigint, ie_tipo_item_p text, nm_usuario_p text default null, nr_atendimento_p bigint default null, ie_administracao_p text default null, cd_intervalo_p text default null, dt_inicio_base_p timestamp default null, dt_inicio_p timestamp default null, hr_prim_horario_p text default null, dt_fim_p timestamp default null, nm_rep_tabela_cpoe_p text default null, nm_rep_chave_cpoe_p text default null, nm_hor_tabela_rep_p text default null, nm_hor_chave_rep_p text default null, nr_prescricao_p bigint default null) FROM PUBLIC;

