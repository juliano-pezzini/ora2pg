-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qtd_horarios_periodo ( ds_horarios_p text, dt_inicio_item_p timestamp, dt_inicio_range_p timestamp, dt_fim_range_p timestamp) RETURNS bigint AS $body$
DECLARE


nr_ocorrencia_w     cpoe_material.nr_ocorrencia%type := 1;
ds_horarios_w		cpoe_material.ds_horarios%type;
ds_horarios_fixo_w	cpoe_material.ds_horarios%type;
ds_hora_w           varchar(7);
qt_dia_adic_w       integer := 0;
qt_pertence_w       integer := 0;
dt_horario_w        timestamp;
k                   integer;
mascara_data_w      varchar(10);


BEGIN

if (pkg_date_utils.extract_field('MINUTE', dt_inicio_item_p, 0) <> 0) or
	((position(':1' in ds_horarios_p) > 0)  or (position(':2' in ds_horarios_p) > 0)  or (position(':3' in ds_horarios_p) > 0)  or (position(':4' in ds_horarios_p) > 0)  or (position(':5' in ds_horarios_p) > 0)) then
	mascara_data_w  := 'hh24:mi';
else
	mascara_data_w  := 'hh24';
end if;

ds_horarios_w := replace(replace(replace(ds_horarios_p,'  ',' '),'  ',' '),'  ',' ');

if (ds_horarios_w <> 'ACM') and (ds_horarios_w <> 'SN') then

   select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_inicio_item_p,'dd/mm/yyyy hh24:mi:ss')) || ' '
	 into STRICT	ds_horarios_w
	;

	while (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') LOOP
	begin
        select	position(' ' in ds_horarios_w)
		into STRICT	k
		;

		if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
			begin
			ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
			ds_hora_w		:= replace(ds_hora_w, ' ', null);
			ds_horarios_w	:= substr(ds_horarios_w, k + 1, 2000);

			if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w	= 0) then
				qt_dia_adic_w	:= 1;
			elsif (position('AA' in ds_hora_w) > 0) then
				qt_dia_adic_w	:= qt_dia_adic_w + 1;
			end if;
			ds_hora_w	:= replace(ds_hora_w,'A', null);
			ds_hora_w	:= replace(ds_hora_w,'A', null);

            dt_horario_w    := 	pkg_date_utils.get_time(dt_inicio_item_p + qt_dia_adic_w, replace(ds_hora_w,'A',null), 0);

            select	count(*)
			into STRICT	qt_pertence_w
			
			where	dt_horario_w >= dt_inicio_range_p
			and 	dt_horario_w < dt_fim_range_p;

            if (qt_pertence_w > 0) then
				ds_horarios_fixo_w	:= ds_horarios_fixo_w || to_char(dt_horario_w, mascara_data_w) || ' ';
			end if;

            end;
        elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
            ds_horarios_w := null;
        end if;
    end;
    end loop;

end if;

return coalesce(obter_ocorrencias_horarios_rep(ds_horarios_fixo_w), 1);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qtd_horarios_periodo ( ds_horarios_p text, dt_inicio_item_p timestamp, dt_inicio_range_p timestamp, dt_fim_range_p timestamp) FROM PUBLIC;

