-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verifica_se_assinado (nm_tabela_p text, nr_project_code_p bigint, nr_sequencia_p bigint, ie_tipo_assinatura_p text) RETURNS varchar AS $body$
DECLARE


nm_atributo_w				INDICE_ATRIBUTO.NM_ATRIBUTO%type;
nr_seq_assinatura_w 		TASY_ASSINATURA_DIGITAL.NR_SEQUENCIA%type;
nr_seq_assin_inat_w 		TASY_ASSINATURA_DIGITAL.NR_SEQUENCIA%type;
nm_atrib_assinat_w			INTEGRIDADE_ATRIBUTO.NM_ATRIBUTO%type;
nm_atrib_assin_inat_w		INTEGRIDADE_ATRIBUTO.NM_ATRIBUTO%type;
sql_w						varchar(2000);
ie_assinado_w				varchar(1) := 'S';


BEGIN
	
	if (nm_tabela_p IS NOT NULL AND nm_tabela_p::text <> '') then
	
		if (nr_project_code_p in (25173,25232,50792,50793,50723,50724,53693,53694)) then
            nm_atributo_w := 'NR_SEQ_INTERNO';
		elsif (nr_project_code_p = 1) then
			nm_atributo_w := 'NR_PRESCRICAO';
		else
			--Atributo PRIMARY KEY
			select max(b.nm_atributo)
			into STRICT   nm_atributo_w
			from   INDICE a, INDICE_ATRIBUTO b
			where  a.nm_indice = b.nm_indice
			and    a.nm_tabela = b.nm_tabela
			and    a.nm_tabela = nm_tabela_p
			and    a.ie_tipo = 'PK';
		end if;
		
		--Atributo assinatura de liberacao
		select 	max(b.nm_atributo)
		into STRICT	nm_atrib_assinat_w
		from 	INTEGRIDADE_REFERENCIAL a, INTEGRIDADE_ATRIBUTO b
		where 	a.nm_integridade_referencial = b.nm_integridade_referencial 
		and 	a.nm_tabela = nm_tabela_p
		and 	a.nm_tabela_referencia = 'TASY_ASSINATURA_DIGITAL'
		and 	position('INATIV' in upper(b.nm_atributo)) = 0;
		
		--Atributo assinatura de inativacao
		select 	max(b.nm_atributo)
		into STRICT	nm_atrib_assin_inat_w
		from 	INTEGRIDADE_REFERENCIAL a, INTEGRIDADE_ATRIBUTO b
		where 	a.nm_integridade_referencial = b.nm_integridade_referencial 
		and 	a.nm_tabela = nm_tabela_p
		and 	a.nm_tabela_referencia = 'TASY_ASSINATURA_DIGITAL'
		and 	position('INATIV' in upper(b.nm_atributo)) > 0;
		
		if (nm_atributo_w IS NOT NULL AND nm_atributo_w::text <> '') then
			begin
			if (nm_atrib_assinat_w IS NOT NULL AND nm_atrib_assinat_w::text <> '') then
				begin
				sql_w := ' select max(' || nm_atrib_assinat_w || ') ' ||
						 ' from ' || nm_tabela_p ||
						 ' where ' || nm_atributo_w || ' = ' || nr_sequencia_p;
		
				EXECUTE sql_w into STRICT nr_seq_assinatura_w;
				end;
			end if;
			
			if (nm_atrib_assin_inat_w IS NOT NULL AND nm_atrib_assin_inat_w::text <> '') then
				begin
				sql_w := ' select max(' || nm_atrib_assin_inat_w || ') ' ||
						 ' from ' || nm_tabela_p ||
						 ' where ' || nm_atributo_w || ' = ' || nr_sequencia_p;
		
				EXECUTE sql_w into STRICT nr_seq_assin_inat_w;
				end;
			end if;
			
			if (nr_seq_assinatura_w > 0) or (nr_seq_assin_inat_w > 0) then
				select  CASE WHEN coalesce(OBTER_DATA_ASSINATURA_DIGITAL(							CASE WHEN ie_tipo_assinatura_p='L' THEN nr_seq_assinatura_w WHEN ie_tipo_assinatura_p='I' THEN nr_seq_assin_inat_w END 						)::text, '') = '' THEN 'N'  ELSE 'S' END
				into STRICT    ie_assinado_w
				;
			elsif ((ie_tipo_assinatura_p = 'L') and (coalesce(nr_seq_assinatura_w::text, '') = '') and (nm_atrib_assinat_w IS NOT NULL AND nm_atrib_assinat_w::text <> ''))
					or ((ie_tipo_assinatura_p = 'I') and (coalesce(nr_seq_assin_inat_w::text, '') = '') and (nm_atrib_assin_inat_w IS NOT NULL AND nm_atrib_assin_inat_w::text <> ''))  then
				ie_assinado_w := 'N';
			end if;
			end;
		end if;
					
	end if;	

	return ie_assinado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verifica_se_assinado (nm_tabela_p text, nr_project_code_p bigint, nr_sequencia_p bigint, ie_tipo_assinatura_p text) FROM PUBLIC;

