-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qtd_liberada_opm ( nr_seq_conta_mat_p bigint) RETURNS varchar AS $body$
DECLARE

				
nr_seq_material_w		bigint;
qt_material_imp_w		pls_conta_mat.qt_material_imp%Type;
nr_seq_conta_w			bigint;
qt_opm_regra_w			integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_lib_w			integer;
qt_libereda_w			integer	:= 0;
nr_seq_regra_w			bigint;
ds_retorno_w			varchar(1)	:= 'S';
dt_procedimento_w		timestamp;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		dt_procedimento
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_w;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_glosa_proc_opm
	where	1 = 1
	and	((coalesce(cd_procedimento::text, '') = '') or(cd_procedimento = cd_procedimento_w AND ie_origem_proced = ie_origem_proced_w))
	and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
	and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
	and	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) 	= coalesce(cd_area_procedimento_w,0)     	
	and	dt_procedimento_w between coalesce(dt_inicio_vigencia,dt_procedimento_w) and coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')
	order by
		coalesce(cd_procedimento,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);

BEGIN

select	nr_seq_material,
	qt_material_imp,
	nr_seq_conta
into STRICT	nr_seq_material_w,
	qt_material_imp_w,
	nr_seq_conta_w
from	pls_conta_mat
where	nr_sequencia = nr_seq_conta_mat_p;

select	count(1)
into STRICT	qt_opm_regra_w
from	pls_procedimento_opm
where	1 = 1
and	((coalesce(nr_seq_material::text, '') = '')or (nr_seq_material = nr_seq_material_w))
and 	((coalesce(nr_seq_estrutura_mat::text, '') = '') or (pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrutura_mat) = 'S'))
and	ie_situacao = 'A';

if (qt_opm_regra_w > 0) then
	open C01;
	loop
	fetch C01 into	
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	max(qt_liberada)
			into STRICT	qt_lib_w
			from	pls_procedimento_opm
			where	nr_seq_regra 	= nr_seq_regra_w
			and	((coalesce(nr_seq_material::text, '') = '')or (nr_seq_material = nr_seq_material_w))
			and 	((coalesce(nr_seq_estrutura_mat::text, '') = '') or (pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrutura_mat) = 'S'))
			and	ie_situacao = 'A';
			end;

			/*Se encontrar na regra um material ativo com quantidade sai do cursor*/

			if (coalesce(qt_lib_w,0) > 0)	then
				exit;
			end if;
			
		end loop;
		close C02;
		
		if (coalesce(qt_lib_w,0) > qt_libereda_w) then
			qt_libereda_w := qt_lib_w;
		end if;
		
		end;
	end loop;
	close C01;
	
	if (qt_material_imp_w > qt_libereda_w)  and (qt_libereda_w <> 0)then
		ds_retorno_w := 'N';
	end if;	
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qtd_liberada_opm ( nr_seq_conta_mat_p bigint) FROM PUBLIC;

