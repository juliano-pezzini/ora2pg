-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prim_horario_prescricao (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, dt_prescricao_p timestamp, nm_usuario_p text, ie_funcao_p text, ie_via_aplicacao_p text default null) RETURNS timestamp AS $body$
DECLARE

			
cd_unidade_w		varchar(10);
dt_prim_horario_w	timestamp;	
dt_prim_horario_ww	timestamp;	
hr_inicio_w		varchar(10);
hr_inicio_wW		varchar(10);
ie_atualiza_Hora_setor_w varchar(10);
dt_prescricao_w		timestamp;
dt_hora_atual_w		timestamp;
ie_dia_w		bigint;
qt_hora_adicional_w	double precision := 0;
cd_perfil_w		bigint;
ie_proxima_hora_w	varchar(1);
cd_classif_setor_w	varchar(2);
ie_prescr_liberada_w	varchar(2);
ie_regra_horario_w	varchar(15);	--Ivan em 11/09/2007 OS68086
qt_prescr_w		bigint;
cd_estabelecimento_w	bigint;
hr_fixa_w		varchar(5);
ie_primeiro_horario_w	varchar(2);
qt_regra_funcao_w	bigint;
qt_prescr_2w		bigint;
nr_seq_regra_w		bigint;
qt_minutos_anteriores_w	smallint;
ie_consiste_meia_noite_w	varchar(1);
qt_minuto_adicional_w	double precision;
nr_rule_number_w smallint;
nr_day_week_w smallint;
nr_difference_w smallint;
nr_days_to_add_w smallint := 0;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_regra_horario,
		ie_prescr_liberada,
		hr_fixa,
		coalesce(qt_minutos_anteriores,0)
	from	prescr_horario_setor
	where	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0)
	and	coalesce(nm_usuario_regra, coalesce(nm_usuario_p, 0))			= coalesce(nm_usuario_p, 0)
	and	coalesce(cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
	and	coalesce(cd_perfil, cd_perfil_w)			= cd_perfil_w
	and	((coalesce(ie_funcao_p,'A')	= coalesce(ie_funcao,'A')) or (coalesce(ie_funcao,'A')	= 'A'))
	and	dt_prescricao_p between	obter_prim_hor_prescr_regra(dt_prescricao_p,
						coalesce(hr_inicio,pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01)), 
						coalesce(hr_fim,pkg_date_utils.get_dateTime(1900,01,01,23,59,59)), 'I') and
					obter_prim_hor_prescr_regra(dt_prescricao_p, 
						coalesce(hr_inicio,pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01)), 
						coalesce(hr_fim,pkg_date_utils.get_dateTime(1900,01,01,23,59,59)), 'F')
	and	coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_p, 0)) = coalesce(ie_via_aplicacao_p, 0)
	order by coalesce(nr_seq_prioridade,0),
		coalesce(cd_setor_atendimento,99999999) desc,
		coalesce(cd_perfil,9999999) desc,
		coalesce(nm_usuario_regra, 'XXXX') desc,
		hr_fixa desc;


BEGIN

if (coalesce(ie_funcao_p,'A') = 'S') then

	qt_minuto_adicional_w := obter_param_usuario(281, 1297, Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_minuto_adicional_w);
	
	if (coalesce(qt_minuto_adicional_w,0) > 0 )then
		qt_hora_adicional_w := (qt_minuto_adicional_w / 60);
	end if;
else
	qt_hora_adicional_w := obter_param_usuario(924, 103, Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_hora_adicional_w);
end if;

cd_perfil_w	:= coalesce(Obter_perfil_ativo,0);

Select	max(cd_classif_setor),
	max(cd_estabelecimento)
into STRICT	cd_classif_setor_w,
	cd_estabelecimento_w
from	setor_atendimento
where	cd_setor_atendimento = (SELECT	Obter_Unidade_Atendimento(nr_atendimento_p,'A','CS') );

open c01;
loop
fetch c01 into
	nr_seq_regra_w,
	ie_regra_horario_w,
	ie_prescr_liberada_w,
	hr_fixa_w,
	qt_minutos_anteriores_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_regra_horario_w 	:= ie_regra_horario_w;
	ie_prescr_liberada_w	:= ie_prescr_liberada_w;
	hr_fixa_w		:= hr_fixa_w;
	qt_minutos_anteriores_w	:= qt_minutos_anteriores_w;
end loop;
close c01;

ie_primeiro_horario_w := obter_param_usuario(924, 351, Obter_Perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_primeiro_horario_w);

if (cd_classif_setor_w		= '1') and (coalesce(ie_primeiro_horario_w,'A')	= 'A') then
	dt_prim_horario_w	:= clock_timestamp();
elsif (ie_regra_horario_w IS NOT NULL AND ie_regra_horario_w::text <> '') then
	begin

	if (ie_regra_horario_w = 'A') then 	--Agora
		dt_prim_horario_w	:= dt_prescricao_p + qt_hora_adicional_w/24;
	elsif (ie_regra_horario_w = 'F') and (hr_fixa_w IS NOT NULL AND hr_fixa_w::text <> '') then		--horario fixo
		dt_prim_horario_w	:= pkg_date_utils.get_time(dt_prescricao_p,hr_fixa_w || ':00');
	elsif (ie_regra_horario_w = 'PHA') then	--Proxima hora ou duas horas se maior que 30 min
		if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p)  > 30) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24 + qt_hora_adicional_w/24;
		else	
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24 + qt_hora_adicional_w/24;
		end if;
	elsif (ie_regra_horario_w = 'PH') then	--Proxima hora (independe da hora atual)
		if to_char(dt_prescricao_p, 'mi:ss') = '00:00' then
			dt_prim_horario_W	:= dt_prescricao_p;
		else
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
		end if;
	elsif (ie_regra_horario_w = 'PHPA') then	--Proxima hora se nao existir prescr medica para o atendimento. Senao 1 hora do setor
		select	count(*)
		into STRICT	qt_prescr_w
		from	prescr_medica
		where	nr_atendimento	= nr_atendimento_p
		and	((coalesce(ie_prescr_liberada_w,'N') = 'N') or (dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> ''));

		if (coalesce(qt_prescr_w,0) = 0) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
		else
			begin

			ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

			Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
			into STRICT 	cd_unidade_w
			;

			Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
			into STRICT	dt_prim_horario_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_unidade_w;

			select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
			into STRICT	ie_dia_w
			;

			dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

			if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			else
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		end if;

	elsif (ie_regra_horario_w = 'PHPS') then	/*Pr0xima hora par (independe da hora atual). Se ja passou o 1 horario setor */
		begin

		Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
		into STRICT 	cd_unidade_w
		;

		Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
		into STRICT	dt_prim_horario_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_unidade_w;

		select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
		into STRICT	ie_dia_w
		;

		dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

		if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
			begin
			hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
			hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
			if (hr_inicio_w < hr_inicio_ww) then
				begin
				if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;	
				else	
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	elsif (ie_regra_horario_w = 'PHP') then --Proxima hora par (independe da hora atual)
		begin
		if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;	
		else	
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
		end if;
		end;
	elsif (ie_regra_horario_w = 'PHPM') then --Proxima hora par considerando os minutos
		begin
		
		
		if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;	
			
		else	
			if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p)  > 30) then
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;	
			else
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
			end if;
		end if;
		end;
	elsif (ie_regra_horario_w = 'PHP2') then -- Proximas 2 horas (horario par) , Independente da hora atual.
		begin
		if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;	
		else	
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;
		end if;
		end;
	elsif (ie_regra_horario_w = 'PHP5') then -- Proxima hora cheia, caso ja tenha passado o 1 horario setor. Independente da hora atual
		Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
		into STRICT 	cd_unidade_w
		;
		
		if (cd_unidade_w = '0') then
			cd_unidade_w	:= cd_setor_atendimento_p;
		end if;

		Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
		into STRICT	dt_prim_horario_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_unidade_w;

		select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
		into STRICT	ie_dia_w
		;

		dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);
		
		--if 	(dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then

		--	begin			
			hr_inicio_w  := to_char(dt_prim_horario_w,'hh24:mi:ss');
			hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
			
			select	count(*)
			into STRICT	qt_prescr_w
			from	prescr_medica
			where	nr_atendimento	= nr_atendimento_p
			and	((coalesce(ie_prescr_liberada_w,'N') = 'N') or (dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> ''));
				
			/* Se houver prescricao em edicao para amanha (se esta extendendo o plano), entao deve ser da proxima hora cheia ate o final de validade da prescricao de extensao. */


			/*SO-2225714*/

			select	count(*)
			into STRICT	qt_prescr_2w
			from	prescr_medica
			where	nr_atendimento	= nr_atendimento_p
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_prescr) > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());

			if (coalesce(qt_prescr_w,0) = 0) or (qt_prescr_2w > 0) then
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
			elsif (hr_inicio_w < hr_inicio_ww) then
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
			else
				begin

				ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

				Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
				into STRICT	dt_prim_horario_w
				from 	setor_atendimento
				where 	cd_setor_atendimento = cd_unidade_w;

				select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
				into STRICT	ie_dia_w
				;

				dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

				if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
					begin
					hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
					hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
					if (hr_inicio_w < hr_inicio_ww) then
						begin
						if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
						else
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
						end if;
						end;
					end if;
					end;
				else
					begin
					hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
					hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
					if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
						begin
						if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
						else
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
						end if;
						end;
					end if;
					end;
				end if;

				hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
				hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

				if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
					dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
				end if;

		--		end;

		--	end if;
			end;
		end if;
	
	elsif (ie_regra_horario_w = 'PHP3') then -- Proximas 3 horas (horario par) . Independente da hora atual. Se ja passou o 1o.horario do setor.
		begin
		Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
		into STRICT 	cd_unidade_w
		;

		Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
		into STRICT	dt_prim_horario_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_unidade_w;

		select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
		into STRICT	ie_dia_w
		;

		dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

		if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
			begin
			hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
			hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
			
			if (hr_inicio_w < hr_inicio_ww) then
				begin
				if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 5/24;
				else	
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	elsif (ie_regra_horario_w = 'PHP4') then -- Proximas 3 horas (horario par) . Independente da hora atual
		begin
		if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 4/24;
		else
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;
		end if;
		end;
	elsif (ie_regra_horario_w = 'ASS') then
		begin

		Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
		into STRICT 	cd_unidade_w
		;
		
		if (cd_unidade_w = '0') then
			cd_unidade_w	:= cd_setor_atendimento_p;
		end if;

		Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
		into STRICT	dt_prim_horario_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_unidade_w;

		select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
		into STRICT	ie_dia_w
		;

		dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);
		
		--if 	(dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then

		--	begin			
			hr_inicio_w  := to_char(dt_prim_horario_w,'hh24:mi:ss');
			hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
			if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
				dt_prim_horario_w	:= dt_prescricao_p + qt_hora_adicional_w/24;
			else
				begin

				ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

				Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
				into STRICT	dt_prim_horario_w
				from 	setor_atendimento
				where 	cd_setor_atendimento = cd_unidade_w;

				select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
				into STRICT	ie_dia_w
				;

				dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

				if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
					begin
					hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
					hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
					if (hr_inicio_w < hr_inicio_ww) then
						begin
						if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
						else
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
						end if;
						end;
					end if;
					end;
				else
					begin
					hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
					hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
					if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
						begin
						if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
						else
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
						end if;
						end;
					end if;
					end;
				end if;

				hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
				hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

				if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
					dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
				end if;

		--		end;

		--	end if;
			end;
		end if;

		end;		

	elsif (ie_regra_horario_w = 'APV') or	/*Agora se nao existir prescr medica valendo. Senao 1 hora do setor*/
		(ie_regra_horario_w = 'APVS') then /*Agora se nao existir prescr medica valendo no setor. Senao 1 hora do setor*/
		begin

		if (ie_regra_horario_w = 'APV') then

			select	count(*)
			into STRICT	qt_prescr_w
			from	prescr_medica
			where	nr_atendimento	= nr_atendimento_p
			and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
			and	coalesce(dt_suspensao::text, '') = ''
			--and	ie_origem_inf	= '1'
			and	dt_prescricao_p between dt_inicio_prescr and dt_validade_prescr;
		
		elsif (ie_regra_horario_w = 'APVS') then
		
			select	count(*)
			into STRICT	qt_prescr_w
			from	prescr_medica
			where	nr_atendimento	= nr_atendimento_p
			and	cd_setor_atendimento = cd_setor_atendimento_p
			and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
			and	coalesce(dt_suspensao::text, '') = ''
			--and	ie_origem_inf	= '1'
			and	dt_prescricao_p between dt_inicio_prescr and dt_validade_prescr;

		end if;

		ie_atualiza_Hora_setor_w := Obter_Param_Usuario(924, 256, obter_perfil_ativo, nm_usuario_p, 0, ie_atualiza_Hora_setor_w);

		if (coalesce(ie_atualiza_Hora_setor_w,'N') = 'S') and (pkg_date_utils.get_time(dt_prescricao_p,0,0,0) > pkg_date_utils.get_time(clock_timestamp(),0,0,0)) then
			ie_atualiza_Hora_setor_w	:= 'S';
		else
			ie_atualiza_Hora_setor_w	:= 'N';
		end if;

		if (qt_prescr_w = 0) and (coalesce(ie_atualiza_Hora_setor_w,'N') = 'N') then
			begin
			dt_prim_horario_w	:= dt_prescricao_p + qt_hora_adicional_w/24;
			end;
		else
			begin

			Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
			into STRICT 	cd_unidade_w
			;

			Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
			into STRICT	dt_prim_horario_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_unidade_w;

			if (qt_prescr_w = 0) then
			
				ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);
					
				select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
				into STRICT	ie_dia_w
				;

				dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (2/1440);
			
				if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
					begin
					hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
					hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
					if (hr_inicio_w < hr_inicio_ww) then
						begin
						if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
						else
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
						end if;
						end;
					end if;
					end;
				else
					begin
					hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
					hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
					if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
						begin
						if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
						else
							dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
						end if;
						end;
					end if;
					end;
				end if;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		end if;
		end;
		
	elsif (ie_regra_horario_w = 'P2HP') then /*Proximas 2 horas (horario par) se nao existir prescricao medica valendo. Senao 1 horario do setor*/
	
		select	coalesce(count(*),0)
		into STRICT	qt_regra_funcao_w
		from	REGRA_FUNCAO_PRIM_HORARIO 
		where	nr_seq_regra = nr_seq_regra_w;
		
		if (qt_regra_funcao_w = 0) then
			select	count(*)
			into STRICT	qt_prescr_w
			from	prescr_medica
			where	nr_atendimento	= nr_atendimento_p
			and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
			and	cd_setor_atendimento	= cd_setor_atendimento_p
			and	dt_prescricao_p between dt_inicio_prescr and dt_validade_prescr;
		else
			select	count(*)
			into STRICT	qt_prescr_w
			from	prescr_medica
			where	nr_atendimento	= nr_atendimento_p
			and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
			and	dt_prescricao_p between dt_inicio_prescr and dt_validade_prescr
			and	cd_setor_atendimento	= cd_setor_atendimento_p
			and	IE_FUNCAO_PRESCRITOR     in (SELECT	ie_funcao_medica
												from	REGRA_FUNCAO_PRIM_HORARIO
												where 	nr_seq_regra = nr_seq_regra_w);
		end if;

		if (coalesce(qt_prescr_w,0) = 0) then
			if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
				if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p) <> '00') then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 4/24;
				else
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
				end if;
			else	
				if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p) <> '00') then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;
				else
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
				end if;
			end if;
		else
			begin

			ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

			Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
			into STRICT 	cd_unidade_w
			;

			Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
			into STRICT	dt_prim_horario_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_unidade_w;

			select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
			into STRICT	ie_dia_w
			;

			dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

			if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
				begin
				hr_inicio_w  := to_char(dt_prim_horario_w,'hh24:mi:ss');
				hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			else
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
					begin					
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_ww	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		end if;

	elsif (ie_regra_horario_w = 'P2M') then /*Proximas 2 horas considerando os minutos*/
	
		if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p)  > 30) then
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;
		else
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
		end if;
	
	elsif (ie_regra_horario_w = 'P2HM') then /*Proximas 2 horas (horario par, desconsidera minutos) se nao existir prescricao medica valendo. Senao 1  horario do setor*/
	
		select	count(*)
		into STRICT	qt_prescr_w
		from	prescr_medica
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '')
		and	cd_setor_atendimento	= cd_setor_atendimento_p
		and	dt_prescricao_p between dt_inicio_prescr and dt_validade_prescr;

		if (coalesce(qt_prescr_w,0) = 0) then		
			if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
				if ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 4/24;
				else
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
				end if;
			else	
				if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p) <> '00') then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;
				else
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
				end if;
			end if;
		else
			begin

			ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

			Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
			into STRICT 	cd_unidade_w
			;

			Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
			into STRICT	dt_prim_horario_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_unidade_w;

			select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
			into STRICT	ie_dia_w
			;

			dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

			if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
				begin
				hr_inicio_w  := to_char(dt_prim_horario_w,'hh24:mi:ss');
				hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			else
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
					begin					
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_ww	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		end if;
		
	elsif (ie_regra_horario_w = 'PHP6') then /*Proximas 2 horas considerando minutos anteriores ao horario do setor, senao 1 horario do setor*/
	
		ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

		Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
		into STRICT 	cd_unidade_w
		;

		Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
		into STRICT	dt_prim_horario_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_unidade_w;

		select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
		into STRICT	ie_dia_w
		;

		dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);
		
		hr_inicio_w  := to_char(dt_prim_horario_w,'hh24:mi:ss');
		hr_inicio_ww := to_char(clock_timestamp() + qt_minutos_anteriores_w/1440,'hh24:mi:ss');
			
		if (hr_inicio_w > hr_inicio_ww) then
			begin
			dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

			if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			else
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		else
			dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
		end if;
		
		hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
		hr_inicio_ww	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

		if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
			dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
		end if;

	elsif (ie_regra_horario_w = 'PHS2') then /* Primeiro horario do setor se nao tiver passado o 1 horario ou proximas 2 horas se nao existir prescricao vigente */
	
		Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
		into STRICT 	cd_unidade_w
		;

		Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
		into STRICT	dt_prim_horario_w
		from 	setor_atendimento
		where 	cd_setor_atendimento = cd_unidade_w;
		
		/*SO-2225714*/

		if (to_char(dt_prescricao_p, 'hh24:mi') > to_char(dt_prim_horario_w, 'hh24:mi')) and (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prescricao_p) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())) then

			dt_prim_horario_w := PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
		
		end if;
	
	elsif (ie_regra_horario_w = 'PHPX') then	--Proxima hora PAR se nao existir prescr medica para o atendimento. Senao 1 hora do setor
		select	count(*)
		into STRICT	qt_prescr_w
		from	prescr_medica
		where	nr_atendimento	= nr_atendimento_p
		and	((coalesce(ie_prescr_liberada_w,'N') = 'N') or (dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> ''));

		if (coalesce(qt_prescr_w,0) = 0) then
			if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;	
			else	
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
			end if;
			
		else
			begin

			ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

			Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
			into STRICT 	cd_unidade_w
			;

			Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
			into STRICT	dt_prim_horario_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_unidade_w;

			select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
			into STRICT	ie_dia_w
			;

			dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

			if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			else
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		end if;
	
	elsif (ie_regra_horario_w = 'PHPY') then		-- Proxima hora PAR, considerando os minutos, se nao existir prescr medica para o atendimento. Senao 1 hora do setor
		select	count(*)
		into STRICT	qt_prescr_w
		from	prescr_medica
		where	nr_atendimento	= nr_atendimento_p
		and	((coalesce(ie_prescr_liberada_w,'N') = 'N') or (dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> ''));

		if (coalesce(qt_prescr_w,0) = 0) then
			if (mod((pkg_date_utils.extract_field('HOUR',dt_prescricao_p))::numeric ,2) = 0) then
				dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;	
				
			else	
				if (pkg_date_utils.extract_field('MINUTE', dt_prescricao_p)  > 30) then
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 3/24;	
				else
					dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
				end if;
			end if;
		else
			begin

			ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);

			Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
			into STRICT 	cd_unidade_w
			;

			Select 	coalesce(max(hr_inicio_prescricao),pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
			into STRICT	dt_prim_horario_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_unidade_w;

			select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
			into STRICT	ie_dia_w
			;

			dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

			if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			else
				begin
				hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
				hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
				if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
					begin
					if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
					else
						dt_prim_horario_w	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
					end if;
					end;
				end if;
				end;
			end if;

			hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
			hr_inicio_wW	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

			if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
				dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
			end if;

			end;
		end if;
	
	elsif (ie_regra_horario_w = 'D1') or		-- Sunday according interval first time
        (ie_regra_horario_w = 'D2') or		-- Monday according interval first time
        (ie_regra_horario_w = 'D3') or		-- Tuesday according interval first time
        (ie_regra_horario_w = 'D4') or		-- Wednesday according interval first time
        (ie_regra_horario_w = 'D5') or		-- Thursday according interval first time
        (ie_regra_horario_w = 'D6') or		-- Friday according interval first time
        (ie_regra_horario_w = 'D7') then		-- Saturday according interval first time
		nr_rule_number_w := (substr(ie_regra_horario_w,2,1))::numeric;

		select pkg_date_utils.get_WeekDay(clock_timestamp())
		into STRICT nr_day_week_w
		;

		nr_difference_w := nr_day_week_w - nr_rule_number_w;

		if (nr_difference_w > 0) then
			nr_days_to_add_w := 7 - nr_day_week_w + nr_rule_number_w;
		elsif (nr_difference_w < 0) then
			nr_days_to_add_w := abs(nr_difference_w);
		end if;

		if (hr_fixa_w IS NOT NULL AND hr_fixa_w::text <> '') then
			hr_inicio_w := hr_fixa_w;
		end if;

		if (coalesce(hr_inicio_w::text, '') = '') then
			hr_inicio_w := to_char(PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24, 'hh24:mi:ss');
		end if;

		dt_prim_horario_w := pkg_date_utils.get_time(clock_timestamp() + nr_days_to_add_w, hr_inicio_w);

	end if;
	
	end;
else
	begin

	ie_proxima_hora_w := Obter_Param_Usuario(924, 110, obter_perfil_ativo, nm_usuario_p, 0, ie_proxima_hora_w);
	ie_consiste_meia_noite_w := Obter_Param_Usuario(924, 842, obter_perfil_ativo, nm_usuario_p, 0, ie_consiste_meia_noite_w);

	Select 	coalesce(obter_unidade_atendimento(coalesce(nr_atendimento_p,0),'IAA','CS'),0)
	into STRICT 	cd_unidade_w
	;
	--Obter Primeiro Horario da prescricao no setor.
	Select 	coalesce(max(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_p, hr_inicio_prescricao)),
			pkg_date_utils.get_dateTime(1900, 1, 1, 00, 00, 01))
	into STRICT	dt_prim_horario_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_unidade_w;
	
	
	--obter se a prescricao e futura (ie_dia_w > 0)  ou atual/passada(ie_dia_w <= 0)
	select	pkg_date_utils.get_time(dt_prescricao_p,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0)
	into STRICT	ie_dia_w
	;

	dt_prescricao_w 	:= trunc(clock_timestamp(),'mi') + (1/1440);

	if (dt_prescricao_p < dt_prescricao_w) and (ie_dia_w <= 0) then
		begin
		hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
		hr_inicio_ww := to_char(clock_timestamp(),'hh24:mi:ss');
		if (hr_inicio_w < hr_inicio_ww) then
			begin
			if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', clock_timestamp()))::numeric  > 30) then
				dt_prim_horario_ww	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 2/24;
			else
				dt_prim_horario_ww	:= PKG_DATE_UTILS.start_of(clock_timestamp(),'hh',0) + 1/24;
			end if;
			if (pkg_date_utils.get_time(dt_prim_horario_ww,0,0,0) - pkg_date_utils.get_time(clock_timestamp(),0,0,0) <= 0) or (not(ie_consiste_meia_noite_w = 'S')) then
				dt_prim_horario_w := dt_prim_horario_ww;
			end if;
			end;
		end if;
		end;
	else
		begin
		hr_inicio_w  := to_char(dt_prim_horario_W,'hh24:mi:ss');
		hr_inicio_ww := to_char(dt_prescricao_p,'hh24:mi:ss');
		if (hr_inicio_w < hr_inicio_ww) and (ie_dia_w <= 0) then
			begin
			if (ie_proxima_hora_w = 'N') and ((pkg_date_utils.extract_field('MINUTE', dt_prescricao_p))::numeric  > 30) then
				dt_prim_horario_ww	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 2/24;
			else
				dt_prim_horario_ww	:= PKG_DATE_UTILS.start_of(dt_prescricao_p,'hh',0) + 1/24;
			end if;
			if (pkg_date_utils.get_time(dt_prim_horario_ww,0,0,0) - pkg_date_utils.get_time(dt_prescricao_p,0,0,0) <= 0) or (not(ie_consiste_meia_noite_w = 'S')) then
				dt_prim_horario_w := dt_prim_horario_ww;
			end if;
			end;
		end if;
		end;
	end if;

	hr_inicio_w	:= pkg_date_utils.extract_field('HOUR',dt_prescricao_p);
	hr_inicio_ww	:= pkg_date_utils.extract_field('HOUR',dt_prim_horario_w);

	if (qt_hora_adicional_w > 0) and (((hr_inicio_ww)::numeric  - (hr_inicio_w)::numeric ) < qt_hora_adicional_w) then
		dt_prim_horario_w	:= dt_prim_horario_w + qt_hora_adicional_w/24;
	end if;
	end;
end if;

if (length(dt_prim_horario_w) = 8) then
	dt_prim_horario_w	:= pkg_date_utils.get_time(dt_prescricao_p + nr_days_to_add_w,TO_CHAR(dt_prim_horario_w,'hh24:mi:ss'));
end if;

RETURN dt_prim_horario_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prim_horario_prescricao (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, dt_prescricao_p timestamp, nm_usuario_p text, ie_funcao_p text, ie_via_aplicacao_p text default null) FROM PUBLIC;

