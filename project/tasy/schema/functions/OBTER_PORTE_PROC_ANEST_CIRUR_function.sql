-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_porte_proc_anest_cirur (nr_cirurgia_p bigint, nr_seq_agenda_p bigint, nr_seq_interno_p bigint default null) RETURNS varchar AS $body$
DECLARE


qt_porte_anestesico_w	smallint := null;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_porte_w		varchar(15) := null;
dt_cirurgia_w		timestamp;
cd_convenio_W		bigint;
CD_EDICAO_AMB_W		integer:= 0;
nr_atendimento_w	bigint;
cd_estabelecimento_w	smallint;
ie_prioridade_edicao_w	varchar(1);
cd_categoria_w		varchar(10);
VL_CH_HONORARIOS_W		double precision := 1;
VL_CH_CUSTO_OPER_W		double precision := 1;
VL_M2_FILME_W			double precision := 0;
dt_inicio_vigencia_w		timestamp;
tx_ajuste_geral_w		double precision;
nr_seq_cbhpm_edicao_w		bigint;
nr_porte_anest_w		smallint := null;
ds_retorno_w			varchar(255):= null;
nr_cirurgia_w			bigint;	
nr_porte_anest_cobranca_w	smallint;
cd_area_procedimento_w		area_procedimento.cd_area_procedimento%type;
cd_especialidade_w		especialidade_proc.cd_especialidade%type;
cd_grupo_proc_w			grupo_proc.cd_grupo_proc%type;
ie_status_agenda_w   agenda_paciente.ie_status_agenda%type := 'X';

C06 CURSOR FOR
	SELECT	nr_porte_anest_cobranca
	from	regra_porte_anest_cbhpm
	where	nr_porte_anest = coalesce(nr_porte_anest_w,0)
	and	coalesce(cd_procedimento, cd_procedimento_w)	= cd_procedimento_w
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, ie_origem_proced_w) = ie_origem_proced_w))
	and	coalesce(cd_area_procedimento, cd_area_procedimento_w) = cd_area_procedimento_w
	and	coalesce(cd_especialidade, cd_especialidade_w) = cd_especialidade_w
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w) = cd_grupo_proc_w
	order by nr_porte_anest;



BEGIN

if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (nr_seq_interno_p IS NOT NULL AND nr_seq_interno_p::text <> '') then
	begin
	if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
		select	cd_procedimento_princ,
			ie_origem_proced,
			coalesce(dt_inicio_real, dt_inicio_prevista),
			coalesce(nr_atendimento,0)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			dt_cirurgia_w,
			nr_atendimento_w
		from	cirurgia
		where	nr_cirurgia	= nr_cirurgia_p;

		select	obter_convenio_atendimento(nr_atendimento_w),
			obter_categoria_atendimento(nr_atendimento_w)
		into STRICT	cd_convenio_w,
			cd_categoria_w
		;
		
		if (coalesce(cd_convenio_w,0) = 0) then
			select	max(cd_convenio),
				max(cd_categoria)
			into STRICT	cd_convenio_w,
				cd_categoria_w
			from 	cirurgia
			where	nr_cirurgia = 	nr_cirurgia_p;
		end if;	
	else
		select	max(a.cd_procedimento),
			max(a.ie_origem_proced),
			coalesce(max(b.dt_inicio_real), max(b.dt_inicio_prevista)),
			coalesce(max(b.nr_atendimento),0),
			max(a.cd_convenio),
			max(a.cd_categoria),
			max(b.nr_cirurgia)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			dt_cirurgia_w,
			nr_atendimento_w,
			cd_convenio_w,
			cd_categoria_w,
			nr_cirurgia_w
		from	prescr_procedimento a,
			cirurgia b
		where	a.nr_prescricao		= b.nr_prescricao
		and	a.nr_seq_interno	= nr_seq_interno_p;
		
		if (coalesce(cd_convenio_w::text, '') = '') then
			select	obter_convenio_atendimento(nr_atendimento_w),
				obter_categoria_atendimento(nr_atendimento_w)
			into STRICT	cd_convenio_w,
				cd_categoria_w
			;
		
			if (coalesce(cd_convenio_w,0) = 0) then
				select	max(cd_convenio),
					max(cd_categoria)
				into STRICT	cd_convenio_w,
					cd_categoria_w
				from 	cirurgia
				where	nr_cirurgia = 	nr_cirurgia_w;
			end if;	
		end if;	
	end if;	
		

	select 	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;
	
	if (coalesce(cd_estabelecimento_w,0) > 0) then
		select	coalesce(max(ie_prioridade_edicao_amb), 'N')
		into STRICT	ie_prioridade_edicao_w
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;
		
		/*      obter a edicao do convenio  */

		if (ie_prioridade_edicao_w	= 'N') then
			begin
			select 	coalesce(max(cd_edicao_amb),0)
			into STRICT   	cd_edicao_amb_w
			from 	convenio_amb
			where (cd_estabelecimento     = cd_estabelecimento_w)
			and (cd_convenio            = cd_convenio_w)
			and (cd_categoria           = cd_categoria_w)
			and (coalesce(ie_situacao,'A')	= 'A')
			and 	(dt_inicio_vigencia     =
				(SELECT max(dt_inicio_vigencia)
				from 	convenio_amb a
				where (a.cd_estabelecimento  = cd_estabelecimento_w)
				and (a.cd_convenio         = cd_convenio_w)
				and (a.cd_categoria        = cd_categoria_w)
				and (coalesce(a.ie_situacao,'A')= 'A')
				and (a.dt_inicio_vigencia <=  dt_cirurgia_w)));
			end;
		else
			SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_cirurgia_w, cd_procedimento_w, cd_edicao_amb_w, vl_ch_honorarios_W, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_W, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
		end if;
		
	end if;

	end;
elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
	begin
	select	max(cd_procedimento),
		max(ie_origem_proced),
		max(dt_agenda),
		max(cd_convenio),
      coalesce(max(ie_status_agenda),'L')
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		dt_cirurgia_w,
		cd_convenio_W,
      ie_status_agenda_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;
	end;
end if;	

if (ie_status_agenda_w <> 'L') then
   if (ie_origem_proced_w = 5) and
      ((coalesce(CD_EDICAO_AMB_W,0) = 0) or (cd_edicao_amb_w in (2004,2005,2008,2010,2011,2012,2013,2014,2015,2016,2017,2018))) then
      begin

      select	max(a.cd_porte),
         max(a.nr_porte_anest)
      into STRICT	cd_porte_w,
         nr_porte_anest_w
      from	cbhpm_preco a
      where	a.cd_procedimento	= cd_procedimento_w
      and	a.ie_origem_proced	= ie_origem_proced_w
      and	a.dt_vigencia		=
         (SELECT max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
         from 	cbhpm_preco x
         where	x.cd_procedimento	= cd_procedimento_w
         and	x.ie_origem_proced	= ie_origem_proced_w
         and	x.dt_vigencia		<= dt_cirurgia_w);
      end;

      select	coalesce(max(cd_area_procedimento),0),
         coalesce(max(cd_especialidade),0),
         coalesce(max(cd_grupo_proc),0)
      into STRICT	cd_area_procedimento_w,
         cd_especialidade_w,
         cd_grupo_proc_w
      from	estrutura_procedimento_v
      where	cd_procedimento = cd_procedimento_w
      and	ie_origem_proced = ie_origem_proced_w;

      nr_porte_anest_cobranca_w:= null;
      open C06;
      loop
      fetch C06 into	
         nr_porte_anest_cobranca_w;
      EXIT WHEN NOT FOUND; /* apply on C06 */
         begin
         nr_porte_anest_cobranca_w:= nr_porte_anest_cobranca_w;
         end;
      end loop;
      close C06;

      if (nr_porte_anest_cobranca_w IS NOT NULL AND nr_porte_anest_cobranca_w::text <> '') then
         nr_porte_anest_w	:= nr_porte_anest_cobranca_w;
      end if;

   else
      begin

      if (coalesce(CD_CONVENIO_w,0) > 0) then
         if (coalesce(CD_EDICAO_AMB_W,0) = 0) then
            SELECT	max(CD_EDICAO_AMB)
            into STRICT	CD_EDICAO_AMB_W
            FROM 	CONVENIO_AMB
            WHERE (CD_CONVENIO            = CD_CONVENIO_w)
            and (cd_categoria				= cd_categoria_w)
            and (cd_estabelecimento		= cd_estabelecimento_w)
            AND (coalesce(IE_SITUACAO,'A')	= 'A')
            AND 	(DT_INICIO_VIGENCIA     =
               (SELECT MAX(DT_INICIO_VIGENCIA)
               FROM 	CONVENIO_AMB A
               WHERE (A.CD_CONVENIO         = CD_CONVENIO_w)
               AND (coalesce(A.IE_SITUACAO,'A')= 'A')
               AND (A.DT_INICIO_VIGENCIA <=  dt_cirurgia_w)));
         end if;
      end if;	


      select	coalesce(max(qt_porte_anestesico),0)
      into STRICT	qt_porte_anestesico_w
      FROM 	PRECO_AMB A
      WHERE (A.CD_EDICAO_AMB    	= CD_EDICAO_AMB_W)
      AND (A.CD_PROCEDIMENTO  	= CD_PROCEDIMENTO_w)
      and (a.ie_origem_proced		= ie_origem_proced_w)
      and 	 coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
            (SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
            from  	preco_amb b
            where 	b.cd_edicao_amb		= cd_edicao_amb_w
            and	b.cd_procedimento		= CD_PROCEDIMENTO_w
            and	b.ie_origem_proced	= ie_origem_proced_w
            and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days') <= dt_cirurgia_w);
      end;
   end if;

   if (nr_porte_anest_w IS NOT NULL AND nr_porte_anest_w::text <> '') or (qt_porte_anestesico_w IS NOT NULL AND qt_porte_anestesico_w::text <> '') or (cd_porte_w IS NOT NULL AND cd_porte_w::text <> '') then
      ds_retorno_w := substr(obter_desc_expressao(595077)/*'Anest: '*/
||coalesce(nr_porte_anest_w,qt_porte_anestesico_w) || ' / Proc: '||cd_porte_w,1,255);
   end if;	
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_porte_proc_anest_cirur (nr_cirurgia_p bigint, nr_seq_agenda_p bigint, nr_seq_interno_p bigint default null) FROM PUBLIC;

