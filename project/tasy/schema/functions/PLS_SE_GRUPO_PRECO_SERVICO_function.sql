-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_se_grupo_preco_servico ( nr_seq_grupo_p pls_preco_servico.nr_seq_grupo%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type) RETURNS varchar AS $body$
DECLARE


ie_estrutura_w			varchar(1)	:= 'N';
cd_area_procedimento_w		bigint	:= 0;
cd_especialidade_w		bigint 	:= 0;
cd_grupo_proc_w			bigint 	:= 0;
ie_origem_proced_w		bigint;
cd_procedimento_w		bigint;
ie_regra_procedimento_w		varchar(1)	:= 'N';
qt_registro_w			integer;

C01 CURSOR FOR
	SELECT	ie_estrutura
	from (	SELECT	coalesce(a.ie_estrutura,'S') ie_estrutura,
				5 ie_ordem
			from	pls_preco_servico	a
			where	a.nr_seq_grupo	= nr_seq_grupo_p
			and	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_w
			
UNION ALL

			select	coalesce(a.ie_estrutura,'S') ie_estrutura,
				4 ie_ordem
			from	pls_preco_servico	a
			where	a.nr_seq_grupo	= nr_seq_grupo_p
			and	a.cd_grupo_proc	= cd_grupo_proc_w
			
UNION ALL

			select	coalesce(a.ie_estrutura,'S') ie_estrutura,
				3 ie_ordem
			from	pls_preco_servico	a
			where	a.nr_seq_grupo	= nr_seq_grupo_p
			and	a.cd_especialidade = cd_especialidade_w
			
UNION ALL

			select	coalesce(a.ie_estrutura,'S') ie_estrutura,
				2 ie_ordem
			from	pls_preco_servico	a
			where	a.nr_seq_grupo	= nr_seq_grupo_p
			and	a.cd_area_procedimento = cd_area_procedimento_w
			
UNION ALL

			select	coalesce(a.ie_estrutura,'S') ie_estrutura,
				1 ie_ordem
			from	pls_preco_servico	a
			where	a.nr_seq_grupo	= nr_seq_grupo_p
			and	coalesce(a.cd_procedimento::text, '') = ''
			and	coalesce(a.ie_origem_proced::text, '') = ''
			and	coalesce(a.cd_grupo_proc::text, '') = ''
			and	coalesce(a.cd_especialidade::text, '') = ''
			and	coalesce(a.cd_area_procedimento::text, '') = '') alias10
	order by	ie_ordem;

C02 CURSOR FOR
	SELECT	ie_estrutura
	from (	SELECT	a.ie_estrutura
			from	pls_preco_servico	a
			where	a.nr_seq_grupo		= nr_seq_grupo_p
			and	a.cd_procedimento	= cd_procedimento_w
			and	a.ie_origem_proced	= ie_origem_proced_w) alias0;

TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

TYPE 		fetch_array2 IS TABLE OF C02%ROWTYPE;
s_array2 	fetch_array2;
i2		integer := 1;
type Vetor2 is table of fetch_array2 index by integer;
Vetor_c02_w			Vetor2;
BEGIN

if (pls_util_cta_pck.usar_novo_agrup = 'S') then

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_grupo_servico_tm grupox
	where	grupox.nr_seq_grupo_servico = nr_seq_grupo_p
	and	grupox.ie_origem_proced = ie_origem_proced_p
	and	grupox.cd_procedimento = cd_procedimento_p;

	if (qt_registro_w > 0) then
		ie_estrutura_w := 'S';
	else
		ie_estrutura_w := 'N';
	end if;

else

	select	max(ie_regra_procedimento)
	into STRICT	ie_regra_procedimento_w
	from	pls_preco_grupo_servico a
	where	a.nr_sequencia	= nr_seq_grupo_p;

	if (coalesce(ie_regra_procedimento_w::text, '') = '') then
		ie_regra_procedimento_w := 'N';
	end if;

	if (ie_regra_procedimento_w = 'S') then
		cd_procedimento_w	:= cd_procedimento_p;
		ie_origem_proced_w	:= ie_origem_proced_p;

		open C02;
		loop
		FETCH C02 BULK COLLECT INTO s_array2 LIMIT 1000;
			Vetor_c02_w(i2) := s_array2;
			i2 := i2 + 1;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		END LOOP;
		CLOSE C02;

		for i2 in 1..Vetor_c02_w.COUNT loop
			s_array2 := Vetor_c02_w(i2);
			for y in 1..s_array2.COUNT loop
				begin
				ie_estrutura_w	:= s_array2[y].ie_estrutura;
				end;
			end loop;
		end loop;
	else
		/* Obter a estrutura do procedimento */

		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

		open C01;
		loop
		FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
			Vetor_c01_w(i) := s_array;
			i := i + 1;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		END LOOP;
		CLOSE C01;

		for i in 1..Vetor_c01_w.COUNT loop
			s_array := Vetor_c01_w(i);
			for z in 1..s_array.COUNT loop
				begin
				ie_estrutura_w	:= s_array[z].ie_estrutura;
				end;
			end loop;
		end loop;
	end if;
end if;

return	ie_estrutura_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_se_grupo_preco_servico ( nr_seq_grupo_p pls_preco_servico.nr_seq_grupo%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type) FROM PUBLIC;

