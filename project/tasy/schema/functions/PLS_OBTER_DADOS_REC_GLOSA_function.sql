-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_rec_glosa ( nr_seq_pag_prest_p pls_pagamento_prestador.nr_sequencia%type, nr_seq_lote_p pls_pagamento_prestador.nr_seq_lote%type, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(255) := null;

-- 	ie_opcao_p 
--	'VR' 	- 	Valor Recursado 
--	'VRP'	- 	Valor Recursado de Procedimento 
--	'VRM'	- 	Valor Recursado de Material 
--	'VA' 	- 	Valor Acatado 
--	'VAP'	- 	Valor Acatado de Procedimento 
--	'VAM'	- 	Valor Acatado de Material 
--	'VNA'	- 	Valor NÃ£o Acatado (Recursado - Acatado) 
 
nr_seq_prestador_w	pls_pagamento_prestador.nr_seq_prestador%type;


BEGIN 
 
if (nr_seq_pag_prest_p IS NOT NULL AND nr_seq_pag_prest_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then 
	if (ie_opcao_p = 'VR') then	 
		select	sum(coalesce(vl_recursado,0)) 
		into STRICT	ds_retorno_w 
		from (SELECT	coalesce(b.vl_recursado,0) vl_recursado 
			from	pls_conta_medica_resumo	a, 
				pls_rec_glosa_proc 	b 
			where	a.nr_seq_conta_proc	= b.nr_seq_conta_proc 
			and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
			and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
			and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '') 
			
union all
 
			SELECT	coalesce(b.vl_recursado,0) vl_recursado 
			from	pls_conta_medica_resumo	a, 
				pls_rec_glosa_mat 	b 
			where	a.nr_seq_conta_mat	= b.nr_seq_conta_mat 
			and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
			and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
			and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '')) alias11;
 
	elsif (ie_opcao_p = 'VRP') then 
		select	sum(coalesce(b.vl_recursado,0)) 
		into STRICT	ds_retorno_w 
		from	pls_conta_medica_resumo	a, 
			pls_rec_glosa_proc 	b 
		where	a.nr_seq_conta_proc	= b.nr_seq_conta_proc 
		and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
		and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
		and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '');
 
	elsif (ie_opcao_p = 'VRM') then 
		select	sum(coalesce(b.vl_recursado,0)) 
		into STRICT	ds_retorno_w			 
		from	pls_conta_medica_resumo	a, 
			pls_rec_glosa_mat 	b 
		where	a.nr_seq_conta_mat	= b.nr_seq_conta_mat 
		and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
		and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
		and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '');
 
	elsif (ie_opcao_p = 'VA') then 
		select	sum(coalesce(vl_acatado,0)) 
		into STRICT	ds_retorno_w 
		from (SELECT	coalesce(b.vl_acatado,0) vl_acatado 
			from	pls_conta_medica_resumo	a, 
				pls_rec_glosa_proc 	b 
			where	a.nr_seq_conta_proc	= b.nr_seq_conta_proc 
			and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
			and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
			and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '') 
			
union all
 
			SELECT	coalesce(b.vl_acatado,0) vl_acatado 
			from	pls_conta_medica_resumo	a, 
				pls_rec_glosa_mat 	b 
			where	a.nr_seq_conta_mat	= b.nr_seq_conta_mat 
			and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
			and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
			and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '')) alias9;
 
	elsif (ie_opcao_p = 'VAP') then 
		select	sum(coalesce(b.vl_acatado,0)) 
		into STRICT	ds_retorno_w 
		from	pls_conta_medica_resumo	a, 
			pls_rec_glosa_proc 	b 
		where	a.nr_seq_conta_proc	= b.nr_seq_conta_proc 
		and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
		and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
		and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '');
 
	elsif (ie_opcao_p = 'VAM') then 
		select	sum(coalesce(b.vl_acatado,0)) 
		into STRICT	ds_retorno_w 
		from	pls_conta_medica_resumo	a, 
			pls_rec_glosa_mat 	b 
		where	a.nr_seq_conta_mat	= b.nr_seq_conta_mat 
		and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
		and	(a.nr_seq_prestador_pgto IS NOT NULL AND a.nr_seq_prestador_pgto::text <> '') 
		and	(b.nr_seq_evento IS NOT NULL AND b.nr_seq_evento::text <> '');
 
	elsif (ie_opcao_p = 'VNA') then 
 
		select	max(nr_seq_prestador) 
		into STRICT	nr_seq_prestador_w 
		from	pls_pagamento_prestador 
		where	nr_sequencia	= nr_seq_pag_prest_p;
	 
		select	sum(coalesce(a.vl_glosa,0)) 
		into STRICT	ds_retorno_w 
		from	pls_conta_rec_resumo_item	a 
		where	a.nr_seq_prestador_pgto = nr_seq_prestador_w 
		and	a.nr_seq_lote_pgto = nr_seq_lote_p 
		and	(a.nr_seq_evento IS NOT NULL AND a.nr_seq_evento::text <> '');
		 
		if (coalesce(ds_retorno_w::text, '') = '') then 
			ds_retorno_w := '0';
		end if;
	 
		/*select	sum(nvl(vl_recursado,0)) - sum(nvl(vl_acatado,0)) 
		into ds_retorno_w 
		from	(select	nvl(b.vl_recursado,0) vl_recursado, 
				nvl(b.vl_acatado,0) vl_acatado 
			from	pls_conta_rec_resumo_item	a, 
				pls_rec_glosa_proc 		b 
			where	a.nr_seq_proc_rec	= b.nr_sequencia 
			and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
			and	a.nr_seq_prestador_pgto is not null 
			and	a.nr_seq_lote_pgto = nr_seq_lote_p 
			and	a.nr_seq_evento is not null 
			union all 
			select	nvl(b.vl_recursado,0) vl_recursado, 
				nvl(b.vl_acatado,0) vl_acatado 
			from	pls_conta_rec_resumo_item	a, 
				pls_rec_glosa_mat 		b 
			where	a.nr_seq_mat_rec	= b.nr_sequencia 
			and	b.nr_seq_pag_prest	= nr_seq_pag_prest_p 
			and	a.nr_seq_prestador_pgto is not null 
			and	a.nr_seq_lote_pgto = nr_seq_lote_p 
			and	a.nr_seq_evento is not null);*/
 
	end if;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_rec_glosa ( nr_seq_pag_prest_p pls_pagamento_prestador.nr_sequencia%type, nr_seq_lote_p pls_pagamento_prestador.nr_seq_lote%type, ie_opcao_p text) FROM PUBLIC;

