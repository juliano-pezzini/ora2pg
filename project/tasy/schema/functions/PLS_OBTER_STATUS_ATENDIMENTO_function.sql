-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_status_atendimento ( nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, ie_status_p text, ie_tipo_pessoa_p text) RETURNS varchar AS $body$
DECLARE


qt_pendencia			integer := 0;
ds_pendencia			varchar(1);
qt_ordem_servico_w		integer := 0;
qt_guia_w 			integer := 0;
qt_sac_boletim_w		integer := 0;
qt_requisicao_w			integer := 0;
cd_pessoa_w			varchar(15);
qt_agendado_w 			integer := 0;
qt_pendencia_evento_w		integer := 0;
qt_reembolso_pend_w		integer := 0;
qt_reembolso_pg_w		integer := 0;


BEGIN
/* Eventos exclusivos para pessoa f√≠sica */

if (ie_tipo_pessoa_p = 'PF') then
	select	count(*)
	into STRICT	qt_guia_w
	from 	pls_segurado	b,
		pls_guia_plano	a
	where 	a.nr_seq_segurado	= b.nr_sequencia
	and	a.ie_status 		= '2'
	and	a.ie_estagio		<> 11
	and (a.nr_seq_atend_pls	= nr_seq_atendimento_p
	or	a.nr_seq_evento_atend	= nr_seq_evento_atend_p);

	select	count(*)
	into STRICT	qt_requisicao_w
	from	pls_requisicao
	where	ie_estagio 		not in (2,3,5,6,7,9,10)
	and (nr_seq_atend_pls	= nr_seq_atendimento_p
	or	nr_seq_evento_atend	= nr_seq_evento_atend_p);

	select 	count(1)
	into STRICT	qt_agendado_w
	from 	pls_atendimento a,
		pls_atendimento_evento b,
		pls_atend_evt_agenda_ext c
	where 	a.nr_sequencia	= b.nr_seq_atendimento
	and	b.nr_sequencia	= c.nr_seq_atend_evento
	and (a.nr_sequencia	= nr_seq_atendimento_p
	or	b.nr_sequencia	= nr_seq_evento_atend_p)
	and	coalesce(c.dt_agendada::text, '') = ''
	and	coalesce(c.dt_cancelamento::text, '') = '';
end if;

if (ie_tipo_pessoa_p in ('PF','PJ')) then
	select	count(*)
	into STRICT	qt_sac_boletim_w
	from	sac_resp_bol_ocor	b,
		sac_boletim_ocorrencia	a,
		sac_responsavel		c
	where	a.nr_sequencia 		= b.nr_seq_bo
	and	b.nr_seq_responsavel	= c.nr_sequencia
	and	b.ie_status not in ('E','S','C')
	and 	coalesce(a.dt_cancelamento::text, '') = ''
	and (a.nr_atend_pls 	= nr_seq_atendimento_p
	or	a.nr_seq_evento_atend	= nr_seq_evento_atend_p);

	select	count(*)
	into STRICT	qt_ordem_servico_w
	from 	man_ordem_servico
	where	ie_status_ordem <> 3
	and (nr_seq_atend_pls	= nr_seq_atendimento_p
	or	nr_seq_evento_atend	= nr_seq_evento_atend_p);


	/*Verifica se tem algum evento Pendente de resposta*/

	select	count(1)
	into STRICT	qt_pendencia_evento_w
	from	pls_atendimento a,
		pls_atendimento_evento b,
		pls_atend_evt_pend_resp c
	where	a.nr_sequencia	= b.nr_seq_atendimento
	and	b.nr_sequencia 	= c.nr_seq_atend_evento
	and (b.nr_sequencia = nr_seq_evento_atend_p
	or	a.nr_sequencia 	= nr_seq_atendimento_p)
	and	coalesce(c.dt_solucao::text, '') = '';

	select	count(1)
	into STRICT	qt_reembolso_pend_w
	from	pls_protocolo_conta
	where	ie_tipo_protocolo = 'R'
	and	nr_seq_atend_call = nr_seq_atendimento_p
	and	ie_status in ('1','2','3','5');

	select	count(1)
	into STRICT	qt_reembolso_pg_w
	from	pls_protocolo_conta
	where	ie_tipo_protocolo = 'R'
	and	nr_seq_atend_call = nr_seq_atendimento_p
	and	ie_status in ('4','6','7');

end if;

qt_pendencia	:= qt_guia_w + qt_sac_boletim_w + qt_ordem_servico_w + qt_requisicao_w + qt_agendado_w + qt_pendencia_evento_w + qt_reembolso_pend_w;

if (0 < qt_pendencia) then
	ds_pendencia := 'P';
elsif	((ie_status_p not in ('C','G','A')) or (qt_reembolso_pg_w > 0)) then
	ds_pendencia := 'G';
else
	ds_pendencia := 'C';
end if;

return	ds_pendencia;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_status_atendimento ( nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, ie_status_p text, ie_tipo_pessoa_p text) FROM PUBLIC;

