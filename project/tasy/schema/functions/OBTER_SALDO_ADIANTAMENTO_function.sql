-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_saldo_adiantamento ( nr_adiantamento_p bigint, dt_referencia_p timestamp) RETURNS bigint AS $body$
DECLARE


vl_adiantamento_w	double precision	:= 0;
vl_saldo_w		double precision	:= 0;
vl_baixa_w		double precision	:= 0;
vl_receb_conv_w		double precision	:= 0;
vl_devolucao_w		double precision	:= 0;
dt_referencia_w		timestamp;
dt_baixa_w		timestamp;
vl_baixa_titulo_w	double precision	:= 0;
vl_vinculado_audit_w	double precision;
vl_receb_adiant_w	double precision	:= 0;
vl_troco_adiant_w	double precision	:= 0;
/* Projeto Multimoeda - VariAveis */

cd_moeda_w		integer;
vl_adto_estrang_w	double precision;


BEGIN

dt_referencia_w	:= trunc(dt_referencia_p,'dd') + 86399/86400;

select	coalesce(max(vl_adiantamento),0),
	coalesce(max(vl_adto_estrang),0),
	max(cd_moeda)
into STRICT	vl_adiantamento_w,
	vl_adto_estrang_w,
	cd_moeda_w
from	adiantamento
where	nr_adiantamento			= nr_adiantamento_p
and	coalesce(dt_contabil,dt_adiantamento)	<= dt_referencia_w;

/* Projeto Multimoeda - Verifica se existe valor em moeda estrangeira e moeda cadastrada no adiantamento, se sim calcula o saldo em moeda estrangeira, caso contrArio mantEm o processo normal*/

if (coalesce(vl_adto_estrang_w,0) <> 0 and (cd_moeda_w IS NOT NULL AND cd_moeda_w::text <> '')) then
	if (vl_adto_estrang_w > 0) then
		select	coalesce(sum(vl_devolucao_estrang),0)
		into STRICT	vl_devolucao_w
		from	adiantamento_dev
		where	nr_adiantamento	= nr_adiantamento_p
		and	dt_devolucao	<= dt_referencia_w;

		select	coalesce(sum(vl_recebido_estrang),0)
		into STRICT	vl_baixa_titulo_w
		from	Titulo_Receber_liq
		where	nr_adiantamento	= nr_adiantamento_p
		and	coalesce(ie_lib_caixa, 'S') = 'S'
		and	dt_recebimento	<= dt_referencia_w;
	end if;

	vl_saldo_w	:= vl_adto_estrang_w - vl_devolucao_w - vl_baixa_titulo_w;

else
	if (vl_adiantamento_w > 0) then
		select	coalesce(sum(vl_devolucao),0)
		into STRICT	vl_devolucao_w
		from	adiantamento_dev
		where	nr_adiantamento	= nr_adiantamento_p
		and	dt_devolucao	<= dt_referencia_w;

		select	coalesce(sum(vl_recebido),0) + coalesce(sum(vl_rec_maior),0) + coalesce(sum(vl_juros),0) + coalesce(sum(vl_multa),0)
		into STRICT	vl_baixa_titulo_w
		from	Titulo_Receber_liq
		where	nr_adiantamento	= nr_adiantamento_p
		and	coalesce(ie_lib_caixa, 'S') = 'S'
		and	dt_recebimento	<= dt_referencia_w;

		select	coalesce(sum(a.vl_troco_informado),0)
		into STRICT	vl_troco_adiant_w
		from	caixa_receb a,
			tipo_recebimento b
		where	a.cd_tipo_receb_caixa	= b.cd_tipo_recebimento
		and	coalesce(a.dt_cancelamento::text, '') = ''
		and	exists (SELECT	1
			from	adiantamento x
			where	x.nr_adiantamento	= nr_adiantamento_p
			and	coalesce(x.ie_lib_caixa,'S') = 'S'
			and	x.nr_seq_caixa_rec	= a.nr_sequencia);

	end if;

	/*
	QUANDO O ADIANTAMENTO GERA O RECEBIMENTO
	*/
	select	coalesce(sum(b.vl_vinculacao),0)
	into STRICT	vl_receb_conv_w
	from	convenio_retorno c,
		convenio_ret_receb b,
		convenio_receb a
	where	b.nr_seq_receb		= a.nr_sequencia
	and	b.nr_seq_retorno	= c.nr_sequencia
	and	c.ie_status_retorno	<> 'F'
	and	a.nr_adiantamento	= nr_adiantamento_p;

	/*
		QUANDO OS ADIANTAMENTOS SAO VINCULADOS AO RECEBIMENTO
		ANTES OBTINHA O VALOR DOS RETORNOS VINCULADOS E NAO BAIXADAS PARA COMPOR O SALDO, POIS
		HAVIA O ENTENDIMENTO QUE SE O RETORNO ESTIVESSE FECHADO, HAVERIA VINCULO COM O TITULO O QUE NAO OCORRERA
		CASO EXISTA MAIS QUE UM ADIANTAMENTO VINCULADO AO RECEBIMENTO.
		REALIZADO TRATAMENTO PARA OBTER OS VALORES VINCULADOS INDEPENDENTE DO STATUS DO RETORNO, POREM SE JA EXISTIR
		TITULO BAIXADO NO RETORNO, IRA DESCONSIDERAR ESTES VALORES E CONSIDERAR O VALOR DE BAIXA.
	*/
	select	coalesce(sum(a.vl_vinculado),0)
	into STRICT	vl_receb_adiant_w
	from	convenio_receb_adiant a
	where	a.dt_atualizacao	<= dt_referencia_w
    and (not exists (SELECT	1
		from	convenio_retorno y,
			convenio_ret_receb x
		where	y.ie_status_retorno	= 'F'
		and	x.nr_seq_retorno	= y.nr_sequencia
		and	x.nr_seq_receb	= a.nr_seq_receb) or
		not exists (select	1
		from	titulo_receber_liq x
		where	x.nr_adiantamento	= a.nr_adiantamento))
	and	a.nr_adiantamento	= nr_adiantamento_p;

	select	coalesce(sum(b.vl_vinculado),0)
	into STRICT	vl_vinculado_audit_w
	from	lote_audit_hist c,
		lote_audit_hist_receb b,
		convenio_receb a
	where	b.nr_seq_receb		= a.nr_sequencia
	and	b.nr_seq_lote		= c.nr_sequencia
	and	coalesce(c.dt_fechamento::text, '') = ''
	and	a.nr_adiantamento	= nr_adiantamento_p;

	vl_saldo_w	:= vl_adiantamento_w - vl_devolucao_w - vl_baixa_titulo_w - vl_receb_conv_w - vl_vinculado_audit_w - vl_receb_adiant_w - vl_troco_adiant_w;

end if;

return	vl_saldo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_adiantamento ( nr_adiantamento_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

