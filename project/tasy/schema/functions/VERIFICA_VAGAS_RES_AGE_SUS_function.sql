-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verifica_vagas_res_age_sus (nr_seq_ageint_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, Cd_Setor_P bigint, Cd_Perfil_P bigint, dt_agenda_p timestamp, cd_convenio_p bigint default null) RETURNS varchar AS $body$
DECLARE

 
 ie_permite_agendamento_w varchar(1);
 Cd_Tipo_Agenda_W     bigint;
 nr_seq_regra_w	     bigint := null;
 cd_estabelecimento_w	  bigint;
 cd_agenda_w				    bigint;
 Nr_Seq_Agenda_W     bigint;
 dt_agenda_w       timestamp;
 dt_inicio_regra_w		   timestamp;
 dt_final_regra_w		   timestamp;
 qt_regra_w		    	 bigint	:= 0;
 Pr_Permissao_W		   	 bigint	:= 0;
 qt_agendados_w		   bigint	:= 0;
 qt_total_w        bigint	:= 0;
 qt_restante_w      bigint	:= 0;
 pr_restante_w		    	 bigint	:= 0;
 pr_agendamento_w		  	 bigint	:= 0;

 C01 CURSOR FOR 
	SELECT nr_sequencia, cd_estabelecimento 
  from agenda_regra_estab 
	 where cd_estabelecimento = cd_estabelecimento_p 
	  and ((cd_agenda = cd_agenda_w) or (coalesce(cd_agenda::text, '') = '')) 
	  and ((ie_tipo_atendimento = ie_tipo_atendimento_p) or (coalesce(ie_tipo_atendimento::text, '') = '')) 
	  and ((cd_tipo_agenda	= cd_tipo_agenda_w) 	or (coalesce(cd_tipo_agenda, 0) = 0)) 
   and ((cd_setor = cd_setor_p) or (coalesce(cd_setor::text, '') = '')) 
   and ((cd_perfil = cd_perfil_p) or (coalesce(cd_perfil::text, '') = '')) 
	  and ((obter_cod_dia_semana(dt_agenda_w) = ie_dia_semana) or (ie_dia_semana = 9) or (coalesce(ie_dia_semana::text, '') = ''))	 
	  and dt_agenda_w between to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_inicial,'hh24:mi:ss'), '00:00:00'),'dd/mm/yyyy hh24:mi:ss') 	 
             and to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || coalesce(to_char(hr_final,'hh24:mi:ss'), '23:59:59'),'dd/mm/yyyy hh24:mi:ss')	 
   and ie_situacao = 'A'           
Order By coalesce(Qt_Regra, 0), coalesce(Pr_Permissao, 0), coalesce(Cd_Agenda, 0), coalesce(Ie_Tipo_Atendimento,0);


BEGIN 
 Ie_Permite_Agendamento_W := 'S';
  
 Select Max(Hr_Agenda) 
 Into STRICT Dt_Agenda_W 
 From Ageint_Marcacao_Usuario 
 Where Nr_Seq_ageint = Nr_Seq_ageint_p;
  
 select max(cd_agenda), max(nr_seq_agenda) 
  into STRICT cd_agenda_w, nr_seq_agenda_w  
  from ageint_marcacao_usuario 
  where nr_seq_ageint = nr_seq_ageint_p;
  
 select coalesce(max(cd_tipo_agenda), 0) 
  into STRICT cd_tipo_agenda_w 
  from agenda 
  where cd_agenda = cd_agenda_w;
 
 open C01;
  loop 
  fetch C01 into	 
   nr_seq_regra_w, 
   cd_estabelecimento_w;
   EXIT WHEN NOT FOUND; /* apply on C01 */
	  begin 
    nr_seq_regra_w 		:= nr_seq_regra_w;
 
    select to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')||' '||to_char(coalesce(hr_inicial, to_date('30/12/1899 00:00:01', 'dd/mm/yyyy hh24:mi:ss')), 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss'), 
		      to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')||' '||to_char(coalesce(hr_final, to_date('30/12/1899 23:59:59', 'dd/mm/yyyy hh24:mi:ss')), 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') 
	    Into STRICT Dt_Inicio_Regra_W, Dt_Final_Regra_W 
	    from agenda_regra_estab 
	    where nr_sequencia	= nr_seq_regra_w;
 	 end;
  end loop;
 close C01;
 
 if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then 
  select max(qt_regra), max(pr_permissao) 
	  into STRICT qt_regra_w, pr_permissao_w 
   from agenda_regra_estab 
   where nr_sequencia = nr_seq_regra_w;
   
  if (cd_tipo_agenda_w = 2) then 
   select count(*) 
    into STRICT qt_agendados_w 
    From Agenda_Paciente 
    where ie_status_agenda not in ('F','I','C','L','B','R') 
     and hr_inicio between dt_inicio_regra_w and dt_final_regra_w 
		   and cd_agenda = coalesce(cd_agenda_w, cd_agenda) 
		   and nr_sequencia	<> nr_seq_agenda_w;
       
     
   select count(*) 
    into STRICT qt_total_w 
    from agenda_paciente     
    where hr_inicio between dt_inicio_regra_w and dt_final_regra_w 
		   and cd_agenda = coalesce(cd_agenda_w, cd_agenda);
     
  elsif (cd_tipo_agenda_w in (3,5)) then 
  		select count(*) 
		  into STRICT qt_agendados_w 
		  From Agenda_Consulta 
    where ie_status_agenda not in ('F','I','C','L','B','R') 
		   and dt_agenda between dt_inicio_regra_w and dt_final_regra_w 
     and cd_agenda = coalesce(cd_agenda_w, cd_agenda) 
		   and nr_sequencia 	<> nr_seq_agenda_w;		
     
     
   select count(*) 
    into STRICT qt_total_w 
    from agenda_consulta 
    where dt_agenda between dt_inicio_regra_w and dt_final_regra_w 
		   and cd_agenda = coalesce(cd_agenda_w, cd_agenda);
     
  end if;
   
  if (cd_estabelecimento_w = cd_estabelecimento_p) then 
    qt_agendados_w := qt_agendados_w + 1;
  end if;
   
  If (Pr_Permissao_W > 0) Then 
    pr_agendamento_w := ROUND(((100 * qt_agendados_w) / qt_total_w),0);
     
    if (pr_agendamento_w > pr_permissao_w) then 
     Ie_Permite_Agendamento_W:= 'N';
    end if;
    
    Else 
 
    if (qt_agendados_w > qt_regra_w) then 
     ie_permite_agendamento_w:= 'N';
   end if;
  end if;
 end if;
  
 Return Ie_Permite_Agendamento_W;
End;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verifica_vagas_res_age_sus (nr_seq_ageint_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, Cd_Setor_P bigint, Cd_Perfil_P bigint, dt_agenda_p timestamp, cd_convenio_p bigint default null) FROM PUBLIC;

