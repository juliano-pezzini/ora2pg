-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION fis_obter_coaseguro_deducible (nr_interno_conta_p bigint, ie_tipo_p text, nr_sequencia_nf_p nota_fiscal.nr_sequencia%type default null) RETURNS bigint AS $body$
DECLARE


vl_retorno_w		double precision := null;
vl_coaseguro1_w		double precision;
vl_coaseguro2_w		double precision;
vl_coaseg_nivel_hosp_w	double precision;
vl_deducible_w		double precision;
qt_processamento_w	bigint;
qt_nf_credito_w		bigint := 0;


BEGIN

/*Caso a nota fiscal for de credito nao deve levar valor OS 2156739*/

if (coalesce(nr_sequencia_nf_p,0) > 0) then

	SELECT 	coalesce(count(a.nr_seq_nf_gerada),0)
	INTO STRICT	qt_nf_credito_w
	FROM	NF_CREDITO a,
			NOTA_FISCAL b
	WHERE	a.nr_seq_nf_gerada = b.nr_sequencia
	AND		b.nr_sequencia = nr_sequencia_nf_p
	AND		(b.nr_sequencia_ref IS NOT NULL AND b.nr_sequencia_ref::text <> '');
	
end if;

if ((nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') and (ie_tipo_p IS NOT NULL AND ie_tipo_p::text <> '') and (coalesce(qt_nf_credito_w,0) = 0)) then

	/*Verificar se a conta ainda esta processada da nova forma*/

	select	count(*)
	into STRICT	qt_processamento_w
	from 	conta_pac_deducao_conv
	where 	nr_seq_conta_orig = nr_interno_conta_p
	and 	(dt_processamento IS NOT NULL AND dt_processamento::text <> '');	
	
	if (coalesce(qt_processamento_w,0) > 0) then
	
		if (ie_tipo_p = 'C') then
			select	coalesce(sum(coalesce(a.vl_rateio,0)),0) vl
			into STRICT	vl_retorno_w
			from	conta_pac_ded_conv_item a,
				conta_pac_deducao_conv b
			where	a.nr_seq_deducao_conv = b.nr_sequencia
			and	b.nr_seq_conta_orig = nr_interno_conta_p
			and	b.ie_tipo_calculo <> 'D';
		elsif (ie_tipo_p = 'D') then
			select	coalesce(sum(coalesce(a.vl_rateio,0)),0) vl
			into STRICT	vl_retorno_w
			from	conta_pac_ded_conv_item a,
				conta_pac_deducao_conv b
			where	a.nr_seq_deducao_conv = b.nr_sequencia
			and	b.nr_seq_conta_orig = nr_interno_conta_p
			and	b.ie_tipo_calculo = 'D';
		end if;
	
	else

		if ie_tipo_p = 'C' then
			select  coalesce(max(a.vl_procedimento),0)
			into STRICT	vl_coaseguro1_w
			from 	procedimento_paciente a,
				conta_paciente b
			where 	a.nr_interno_conta = b.nr_interno_conta
			and 	a.nr_interno_conta = nr_interno_conta_p
			and exists (SELECT	1
					from  	conv_regra_calculo_conta x
					where   x.cd_proc_calculo = a.cd_procedimento
					and 	x.ie_situacao = 'A'
					and 	x.ie_tipo_calculo = 'N' --Coaseguro
					and 	x.cd_convenio = b.cd_convenio_parametro
					and 	b.cd_estabelecimento = x.cd_estabelecimento );
					
			select  coalesce(max(a.vl_procedimento),0)
			into STRICT	vl_coaseguro2_w
			from 	procedimento_paciente a,
				conta_paciente b
			where 	a.nr_interno_conta = b.nr_interno_conta
			and 	a.nr_interno_conta = nr_interno_conta_p
			and exists (SELECT	1
					from  	conv_regra_calculo_conta x
					where   x.cd_proc_calculo = a.cd_procedimento
					and 	x.ie_situacao = 'A'
					and 	x.ie_tipo_calculo = 'H' --Coaseguro
					and 	x.cd_convenio = b.cd_convenio_parametro
					and 	b.cd_estabelecimento = x.cd_estabelecimento );
					
			select  coalesce(max(a.vl_procedimento),0)
			into STRICT	vl_coaseg_nivel_hosp_w
			from 	procedimento_paciente a,
				conta_paciente b
			where 	a.nr_interno_conta = b.nr_interno_conta
			and 	a.nr_interno_conta = nr_interno_conta_p
			and exists (SELECT	1
					from  	conv_regra_calculo_conta x
					where   x.cd_proc_calculo = a.cd_procedimento
					and 	x.ie_situacao = 'A'
					and 	x.ie_tipo_calculo = 'A' --Coaseguro Nivel Hosp
					and 	x.cd_convenio = b.cd_convenio_parametro
					and 	b.cd_estabelecimento = x.cd_estabelecimento );
					
			vl_retorno_w := (vl_coaseguro1_w + vl_coaseguro2_w + vl_coaseg_nivel_hosp_w) * -1;
		end if;
		
		if ie_tipo_p = 'D' then	
			select  coalesce(max(a.vl_procedimento),0)
			into STRICT	vl_deducible_w
			from 	procedimento_paciente a,
				conta_paciente b
			where 	a.nr_interno_conta = b.nr_interno_conta
			and 	a.nr_interno_conta = nr_interno_conta_p
			and exists (SELECT	1
					from  	conv_regra_calculo_conta x
					where   x.cd_proc_calculo = a.cd_procedimento
					and 	x.ie_situacao = 'A'
					and 	x.ie_tipo_calculo = 'D' --Deducible
					and 	x.cd_convenio = b.cd_convenio_parametro
					and 	b.cd_estabelecimento = x.cd_estabelecimento );
					
			vl_retorno_w := vl_deducible_w * -1;
		end if;
		
	end if;
	
end if;	

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION fis_obter_coaseguro_deducible (nr_interno_conta_p bigint, ie_tipo_p text, nr_sequencia_nf_p nota_fiscal.nr_sequencia%type default null) FROM PUBLIC;

