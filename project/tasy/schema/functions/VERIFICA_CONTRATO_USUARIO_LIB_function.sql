-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verifica_contrato_usuario_lib ( nr_sequencia_p bigint, nm_usuario_lib_p text) RETURNS varchar AS $body$
DECLARE


qt_regras_w			integer;
qt_liberado_w			integer;
cd_perfil_w			integer;
cd_perfil_ativo_w			integer;
cd_setor_w			setor_atendimento.cd_setor_atendimento%type;
cd_setor_usuario_w			setor_atendimento.cd_setor_atendimento%type;
ie_classificacao_w			varchar(15);
ie_permite_w			varchar(1)	:= 'N';
nm_usuario_lib_w			varchar(15);
nr_seq_contrato_w			bigint;

c01 CURSOR FOR
SELECT	coalesce(a.ie_permite,'N') ie_permite,
	a.cd_perfil,
	a.cd_setor,
	a.nm_usuario_lib
from	contrato_usuario_lib a
where	nr_seq_contrato			= nr_seq_contrato_w
and	coalesce(cd_perfil, cd_perfil_ativo_w)	= cd_perfil_ativo_w
and	coalesce(nm_usuario_lib, nm_usuario_lib_p)	= nm_usuario_lib_p
and	coalesce(cd_setor, cd_setor_usuario_w)	= cd_setor_usuario_w
order by	coalesce(nm_usuario_lib,'A'),
		coalesce(cd_perfil,0),
		coalesce(cd_setor,0);



BEGIN

cd_perfil_ativo_w	:= coalesce(Obter_perfil_ativo,0);
cd_setor_usuario_w	:= wheb_usuario_pck.get_cd_setor_atendimento;
nr_seq_contrato_w	:= nr_sequencia_p;

if (coalesce(cd_perfil_ativo_w,0) = 0) then
	--'Ocorreu um erro ao obter o perfil na liberação do contrato!' || 'Avise o administrador do sistema!#@#@');
	CALL WHEB_MENSAGEM_PCK.exibir_mensagem_abort(201139);
end if;

select	max(ie_classificacao)
into STRICT	ie_classificacao_w
from	contrato
where	nr_sequencia	= nr_sequencia_p;


/* Retirado na OS 1349873 porque foi alterado a função Controle de contratos para que a pasta Liberação usuário apareça para todas as classificações

if	(ie_classificacao_w in ('AD','ER')) then

	select	nvl(max(nr_seq_contrato_atual), nr_sequencia_p)
	into	nr_seq_contrato_w
	from	contrato
	where	nr_sequencia	= nr_sequencia_p;

end if;*/
select	count(*)
into STRICT	qt_regras_w
from	contrato_usuario_lib
where	nr_seq_contrato	= nr_seq_contrato_w;

if (qt_regras_w > 0) then
	begin

	ie_permite_w	:= 'N';

	open C01;
	loop
	fetch C01 into
		ie_permite_w,
		cd_perfil_w,
		cd_setor_w,
		nm_usuario_lib_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (coalesce(nm_usuario_lib_w::text, '') = '') and (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then

			select	coalesce(max('S'),'N')
			into STRICT	ie_permite_w
			from	usuario_perfil b
			where	b.cd_perfil	= cd_perfil_w
			and	b.nm_usuario	= nm_usuario_lib_p
			and	ie_permite_w	= 'S';

		end if;

		if (coalesce(nm_usuario_lib_w::text, '') = '') and (cd_setor_w IS NOT NULL AND cd_setor_w::text <> '') and (ie_permite_w = 'N') then

			select	coalesce(max('S'),'N')
			into STRICT	ie_permite_w
			from	usuario_setor_v b
			where	b.cd_setor_atendimento	= cd_setor_w
			and	b.nm_usuario		= nm_usuario_lib_p
			and	ie_permite_w	= 'S';

		end if;

		ie_permite_w	:= ie_permite_w;
		end;
	end loop;
	close C01;

	end;
end if;

return ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verifica_contrato_usuario_lib ( nr_sequencia_p bigint, nm_usuario_lib_p text) FROM PUBLIC;

