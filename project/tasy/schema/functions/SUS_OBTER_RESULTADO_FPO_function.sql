-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_resultado_fpo ( nr_seq_regra_p bigint, ie_tipo_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

/*
IE_TIPO_P:
1 - QUANTIDADE
2 - VALOR
IE_OPCAO_P:
P - PROTOCOLO
E - EXECUCAO
*/
vl_retorno_w		double precision := 0;

qt_procedimento_w		bigint := 0;
vl_procedimento_w		double precision := 0;
cd_estabelecimento_w	smallint;
dt_competencia_w		timestamp;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;
ie_tipo_atendimento_w	varchar(20);
ie_tipo_financiamento_w	varchar(4);
ie_complexidade_w		varchar(2);
cd_cbo_w		varchar(6);
cd_convenio_sus_w	integer;
qt_fisico_exet_w		bigint := 0;
vl_orcamento_exet_w	double precision := 0;
cd_carater_internacao_w	varchar(2);
cd_procedencia_w	varchar(20);
qt_regra_setor_w                bigint;
qt_regra_desconsid_w            bigint;
qt_regra_proc_w                 bigint;
qt_regra_cbo_w                  bigint;
ie_soma_proc_w                  varchar(1);

C01 CURSOR FOR
        SELECT	coalesce(a.qt_procedimento,0) qt_procedimento,
                coalesce(a.vl_procedimento,0) vl_procedimento,
                a.nr_sequencia,
                a.cd_setor_atendimento,
                a.cd_cbo,
                a.cd_procedimento,
                a.ie_origem_proced,
                d.nr_seq_forma_org,
                d.nr_seq_grupo,
                d.nr_seq_subgrupo,
                b.nr_interno_conta
        FROM sus_estrutura_procedimento_v d, atendimento_paciente c, procedimento_paciente a, conta_paciente b
LEFT OUTER JOIN sus_aih_unif e ON (b.nr_interno_conta = e.nr_interno_conta)
WHERE a.cd_procedimento		= coalesce(cd_procedimento_w,a.cd_procedimento) and a.ie_origem_proced		= coalesce(ie_origem_proced_w,a.ie_origem_proced) and coalesce(a.cd_cbo,'0') 		= coalesce(cd_cbo_w,coalesce(a.cd_cbo,'0')) and ((coalesce(cd_carater_internacao_w,'X') = 'X') or
                ((coalesce(cd_carater_internacao_w,'X') <> 'X')  and ((	SELECT	count(1)
                                                                                from	sus_aih_unif s
                                                                                where	s.nr_interno_conta 	= b.nr_interno_conta
                                                                                and	s.cd_carater_internacao	= cd_carater_internacao_w) > 0 )) or
                ((coalesce(cd_carater_internacao_w,'X') <> 'X') and (c.ie_carater_inter_sus = cd_carater_internacao_w))) and d.ie_complexidade		= coalesce(ie_complexidade_w,d.ie_complexidade) and ((coalesce(ie_tipo_atendimento_w,'X') = 'X') or (obter_se_contido(c.ie_tipo_atendimento,ie_tipo_atendimento_w) = 'S')) and ((coalesce(cd_procedencia_w,'X') = 'X') or (obter_se_contido(c.cd_procedencia, cd_procedencia_w) = 'S'))  and (e.ie_tipo_financiamento = coalesce(ie_tipo_financiamento_w,e.ie_tipo_financiamento) or (coalesce(e.ie_tipo_financiamento::text, '') = '' and d.ie_tipo_financiamento = coalesce(ie_tipo_financiamento_w,d.ie_tipo_financiamento))) and d.nr_seq_forma_org		= coalesce(nr_seq_forma_org_w,d.nr_seq_forma_org) and d.nr_seq_grupo			= coalesce(nr_seq_grupo_w,d.nr_seq_grupo) and d.nr_seq_subgrupo		= coalesce(nr_seq_subgrupo_w,d.nr_seq_subgrupo) and a.nr_interno_conta 		= b.nr_interno_conta and b.nr_atendimento 		= c.nr_atendimento and a.cd_procedimento		= d.cd_procedimento and coalesce(a.ie_origem_proced,7)	= d.ie_origem_proced and b.cd_estabelecimento	= coalesce(cd_estabelecimento_w,b.cd_estabelecimento) and establishment_timezone_utils.startofmonth(a.dt_procedimento) = establishment_timezone_utils.startofmonth(dt_competencia_w) and coalesce(a.cd_motivo_exc_conta::text, '') = '' and b.cd_convenio_parametro	= cd_convenio_sus_w LIMIT 1;

C02 CURSOR FOR
        SELECT	coalesce(a.qt_procedimento,0) qt_procedimento,
                coalesce(a.vl_procedimento,0) vl_procedimento,
                a.nr_sequencia,
                a.cd_setor_atendimento,
                a.cd_cbo,
                a.cd_procedimento,
                a.ie_origem_proced,
                d.nr_seq_forma_org,
                d.nr_seq_grupo,
                d.nr_seq_subgrupo,
                b.nr_interno_conta
        FROM sus_estrutura_procedimento_v d, atendimento_paciente c, procedimento_paciente a, conta_paciente b
LEFT OUTER JOIN sus_aih_unif e ON (b.nr_interno_conta = e.nr_interno_conta)
WHERE a.cd_procedimento		= coalesce(cd_procedimento_w,a.cd_procedimento) and a.ie_origem_proced		= coalesce(ie_origem_proced_w,a.ie_origem_proced) and coalesce(a.cd_cbo,'0') 			= coalesce(cd_cbo_w,coalesce(a.cd_cbo,'0')) and ((coalesce(cd_carater_internacao_w,'X') = 'X') or
                ((coalesce(cd_carater_internacao_w,'X') <> 'X')  and ((	SELECT	count(1)
                                                                        from	sus_aih_unif s
                                                                        where	s.nr_interno_conta 	= b.nr_interno_conta
                                                                        and	s.cd_carater_internacao	= cd_carater_internacao_w  LIMIT 1) > 0)) or
                ((coalesce(cd_carater_internacao_w,'X') <> 'X') and (c.ie_carater_inter_sus = cd_carater_internacao_w))) and b.ie_status_acerto		= 2  and d.ie_complexidade		= coalesce(ie_complexidade_w,d.ie_complexidade) and ((coalesce(ie_tipo_atendimento_w,'X') = 'X') or (obter_se_contido(c.ie_tipo_atendimento,ie_tipo_atendimento_w) = 'S')) and ((coalesce(cd_procedencia_w,'X') = 'X') or (obter_se_contido(c.cd_procedencia, cd_procedencia_w) = 'S')) and (e.ie_tipo_financiamento = coalesce(ie_tipo_financiamento_w,e.ie_tipo_financiamento) or (coalesce(e.ie_tipo_financiamento::text, '') = '' and d.ie_tipo_financiamento = coalesce(ie_tipo_financiamento_w,d.ie_tipo_financiamento))) and d.nr_seq_forma_org		= coalesce(nr_seq_forma_org_w,d.nr_seq_forma_org) and d.nr_seq_grupo			= coalesce(nr_seq_grupo_w,d.nr_seq_grupo) and d.nr_seq_subgrupo		= coalesce(nr_seq_subgrupo_w,d.nr_seq_subgrupo) and (b.nr_seq_protocolo IS NOT NULL AND b.nr_seq_protocolo::text <> '') and coalesce(a.cd_motivo_exc_conta::text, '') = '' and a.nr_interno_conta 		= b.nr_interno_conta and b.nr_atendimento 		= c.nr_atendimento and a.cd_procedimento		= d.cd_procedimento and coalesce(a.ie_origem_proced,7)	= d.ie_origem_proced and b.cd_estabelecimento		= coalesce(cd_estabelecimento_w,b.cd_estabelecimento) and establishment_timezone_utils.startofmonth(b.dt_mesano_referencia) = establishment_timezone_utils.startofmonth(dt_competencia_w) and b.cd_convenio_parametro		= cd_convenio_sus_w;

BEGIN

        if (coalesce(nr_seq_regra_p,0) > 0) then
                begin

                select	cd_estabelecimento,
                        dt_competencia,
                        cd_cbo,
                        cd_procedimento,
                        coalesce(ie_origem_proced,7),
                        ie_complexidade,
                        ie_tipo_atendimento,
                        ie_tipo_financiamento,
                        nr_seq_forma_org,
                        nr_seq_grupo,
                        nr_seq_subgrupo,
                        cd_carater_internacao,
                        cd_procedencia
                into STRICT	cd_estabelecimento_w,
                        dt_competencia_w,
                        cd_cbo_w,
                        cd_procedimento_w,
                        ie_origem_proced_w,
                        ie_complexidade_w,
                        ie_tipo_atendimento_w,
                        ie_tipo_financiamento_w,
                        nr_seq_forma_org_w,
                        nr_seq_grupo_w,
                        nr_seq_subgrupo_w,
                        cd_carater_internacao_w,
                        cd_procedencia_w
                from	sus_fpo_regra
                where	nr_sequencia = nr_seq_regra_p;
                end;

                begin
                select	coalesce(max(cd_convenio_sus),0)
                into STRICT	cd_convenio_sus_w
                from	parametro_faturamento
                where	cd_estabelecimento = cd_estabelecimento_w;
                exception
                when others then
                        cd_convenio_sus_w        := 0;
                end;

                begin
                select	1
                into STRICT    qt_regra_proc_w
                from 	sus_fpo_regra_proc w
                where	w.nr_seq_regra	= nr_seq_regra_p;
                exception
                when others then
                        qt_regra_proc_w        := 0;
                end;

                begin
                select	1
                into STRICT    qt_regra_setor_w
                from    sus_fpo_regra_setor y
                where	y.nr_seq_regra	= nr_seq_regra_p
                and	y.ie_situacao 	= 'A';
                exception
                when others then
                        qt_regra_setor_w        := 0;
                end;

                begin
                select	1
                into STRICT    qt_regra_cbo_w        
                from	sus_fpo_regra_cbo z
                where	z.nr_seq_fpo_regra	= nr_seq_regra_p;
                exception
                when others then
                        qt_regra_cbo_w        := 0;
                end;

                begin
                select	1
                into STRICT    qt_regra_desconsid_w
                from	sus_fpo_regra_desconsid x
                where	x.nr_seq_fpo_regra	= nr_seq_regra_p;
                exception
                when others then
                        qt_regra_desconsid_w        := 0;
                end;

                if (ie_opcao_p = 'E') then
                        begin
                        select	coalesce(sum(qt_fisico_exec),0),
                                coalesce(sum(vl_orcamento_exec),0)
                        into STRICT	qt_fisico_exet_w,
                                vl_orcamento_exet_w
                        from	sus_fpo_regra_externo
                        where 	nr_seq_fpo_regra = nr_seq_regra_p;
                        exception
                        when others then
                                qt_fisico_exet_w        := 0;
                                vl_orcamento_exet_w	:= 0;
                        end;
                        for C01_w in C01 loop
                                begin
                                ie_soma_proc_w := 'S';

                                if (qt_regra_proc_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_proc_w
                                        from 	sus_fpo_regra_proc w
                                        where	w.nr_seq_regra	= nr_seq_regra_p
                                        and	w.cd_procedimento	= C01_w.cd_procedimento
                                        and	w.ie_origem_proced	= C01_w.ie_origem_proced
                                        and	w.ie_situacao 	= 'A';
                                        exception
                                        when others then
                                                qt_regra_proc_w        := 0;
                                        end;

                                        if (qt_regra_proc_w = 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (qt_regra_setor_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_setor_w
                                        from	sus_fpo_regra_setor q
                                        where	q.nr_seq_regra	= nr_seq_regra_p
                                        and	q.ie_situacao	= 'A'
                                        and	q.cd_setor_atendimento = C01_w.cd_setor_atendimento;
                                        exception
                                        when others then
                                                qt_regra_setor_w        := 0;
                                        end;

                                        if (qt_regra_setor_w = 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (qt_regra_cbo_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_cbo_w
                                        from	sus_fpo_regra_cbo z
                                        where	z.cd_cbo		= coalesce(C01_w.cd_cbo,'0')
                                        and	z.nr_seq_fpo_regra	= nr_seq_regra_p;
                                        exception
                                        when others then
                                                qt_regra_cbo_w        := 0;
                                        end;

                                        if (qt_regra_cbo_w = 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (qt_regra_desconsid_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_desconsid_w
                                        from	sus_fpo_regra_desconsid x
                                        where	x.nr_seq_fpo_regra	= nr_seq_regra_p
                                        and	coalesce(C01_w.cd_cbo,'0')	= coalesce(x.cd_cbo,coalesce(C01_w.cd_cbo,'0'))
                                        and	C01_w.cd_procedimento	= coalesce(x.cd_procedimento,C01_w.cd_procedimento)
                                        and	C01_w.ie_origem_proced	= coalesce(x.ie_origem_proced,C01_w.ie_origem_proced)
                                        and	C01_w.nr_seq_forma_org	= coalesce(x.nr_seq_forma_org,C01_w.nr_seq_forma_org)
                                        and	C01_w.nr_seq_grupo	= coalesce(x.nr_seq_grupo,C01_w.nr_seq_grupo)
                                        and	C01_w.nr_seq_subgrupo	= coalesce(x.nr_seq_subgrupo,C01_w.nr_seq_subgrupo);
                                        exception
                                        when others then
                                                qt_regra_desconsid_w        := 0;
                                        end;

                                        if (qt_regra_desconsid_w > 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (ie_soma_proc_w = 'S') then
                                        begin
                                                qt_procedimento_w := qt_procedimento_w + coalesce(C01_w.qt_procedimento,0);
                                                vl_procedimento_w := vl_procedimento_w + coalesce(C01_w.vl_procedimento,0);
                                        end;
                                end if;
                                end;
                        end loop;
                end if;

                if (ie_opcao_p = 'P') then
                begin
		select	coalesce(sum(qt_fisico_prot),0),
			coalesce(sum(vl_orcamento_prot),0)
		into STRICT	qt_fisico_exet_w,
			vl_orcamento_exet_w
		from	sus_fpo_regra_externo
		where 	nr_seq_fpo_regra = nr_seq_regra_p;
		exception
                when others then
			qt_fisico_exet_w        := 0;
			vl_orcamento_exet_w	:= 0;
		end;
                        for C02_w in C02 loop
                                begin
                                ie_soma_proc_w := 'S';

                                if (qt_regra_proc_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_proc_w
                                        from 	sus_fpo_regra_proc w
                                        where	w.nr_seq_regra	= nr_seq_regra_p
                                        and	w.cd_procedimento	= C02_w.cd_procedimento
                                        and	w.ie_origem_proced	= C02_w.ie_origem_proced
                                        and	w.ie_situacao 	= 'A';
                                        exception
                                        when others then
                                                qt_regra_proc_w        := 0;
                                        end;

                                        if (qt_regra_proc_w = 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (qt_regra_setor_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_setor_w
                                        from	sus_fpo_regra_setor q
                                        where	q.nr_seq_regra	= nr_seq_regra_p
                                        and	q.ie_situacao	= 'A'
                                        and	q.cd_setor_atendimento = C02_w.cd_setor_atendimento;
                                        exception
                                        when others then
                                                qt_regra_setor_w        := 0;
                                        end;

                                        if (qt_regra_setor_w = 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (qt_regra_cbo_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_cbo_w
                                        from	sus_fpo_regra_cbo z
                                        where	z.cd_cbo		= coalesce(C02_w.cd_cbo,'0')
                                        and	z.nr_seq_fpo_regra	= nr_seq_regra_p;
                                        exception
                                        when others then
                                                qt_regra_cbo_w        := 0;
                                        end;

                                        if (qt_regra_cbo_w = 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (qt_regra_desconsid_w > 0) then
                                        begin
                                        select	1
                                        into STRICT    qt_regra_desconsid_w
                                        from	sus_fpo_regra_desconsid x
                                        where	x.nr_seq_fpo_regra	= nr_seq_regra_p
                                        and	coalesce(C02_w.cd_cbo,'0')	= coalesce(x.cd_cbo,coalesce(C02_w.cd_cbo,'0'))
                                        and	C02_w.cd_procedimento	= coalesce(x.cd_procedimento,C02_w.cd_procedimento)
                                        and	C02_w.ie_origem_proced	= coalesce(x.ie_origem_proced,C02_w.ie_origem_proced)
                                        and	C02_w.nr_seq_forma_org	= coalesce(x.nr_seq_forma_org,C02_w.nr_seq_forma_org)
                                        and	C02_w.nr_seq_grupo	= coalesce(x.nr_seq_grupo,C02_w.nr_seq_grupo)
                                        and	C02_w.nr_seq_subgrupo	= coalesce(x.nr_seq_subgrupo,C02_w.nr_seq_subgrupo);
                                        exception
                                        when others then
                                                qt_regra_desconsid_w        := 0;
                                        end;

                                        if (qt_regra_desconsid_w > 0) then
                                                ie_soma_proc_w := 'N';
                                        end if;
                                end if;

                                if (ie_soma_proc_w = 'S') then
                                        begin
                                                qt_procedimento_w := qt_procedimento_w + coalesce(C02_w.qt_procedimento,0);
                                                vl_procedimento_w := vl_procedimento_w + coalesce(C02_w.vl_procedimento,0);
                                        end;
                                end if;
                                end;
                        end loop;
                end if;

        if (ie_opcao_p = 'A') then

                begin
                select	coalesce(sum(1),0),
                        sum(coalesce(CASE WHEN b.ie_tipo_atendimento=1 THEN                                 sus_obter_preco_proced(b.cd_estabelecimento,a.dt_agenda,b.ie_tipo_atendimento,a.cd_procedimento,a.ie_origem_proced,1)  ELSE sus_obter_preco_proced(b.cd_estabelecimento,a.dt_agenda,b.ie_tipo_atendimento,a.cd_procedimento,a.ie_origem_proced,2) END ,0))
                into STRICT	qt_procedimento_w,
                        vl_procedimento_w
                from	agenda_paciente a,
                        agenda b,
                        sus_estrutura_procedimento_v d
                where	((a.cd_procedimento		= coalesce(cd_procedimento_w,a.cd_procedimento) and
                        a.ie_origem_proced		= coalesce(ie_origem_proced_w,a.ie_origem_proced)) or
                        exists (SELECT	1
                                from 	sus_fpo_regra_proc w
                                where	w.nr_seq_regra	= nr_seq_regra_p
                                and	w.cd_procedimento	= a.cd_procedimento
                                and	w.ie_origem_proced	= a.ie_origem_proced
                                and	w.ie_situacao 	= 'A'  LIMIT 1))
                and (not exists (select	1
                                from 	sus_fpo_regra_setor y
                                where	y.nr_seq_regra	= nr_seq_regra_p
                                and	y.ie_situacao 	= 'A'  LIMIT 1)	or
                        exists (select	1
                                from	sus_fpo_regra_setor q
                                where	q.nr_seq_regra	= nr_seq_regra_p
                                and	q.ie_situacao	= 'A'
                                and	q.cd_setor_atendimento	= a.cd_setor_atendimento  LIMIT 1))
                and (coalesce(sus_obter_cbo_medico(a.cd_medico,a.cd_procedimento,a.dt_agenda,'0'),'0') = coalesce(cd_cbo_w,coalesce(sus_obter_cbo_medico(a.cd_medico,a.cd_procedimento,a.dt_agenda,'0'),'0')) or
                        exists (select	1
                                from	sus_fpo_regra_cbo z
                                where	z.cd_cbo		= coalesce(sus_obter_cbo_medico(a.cd_medico,a.cd_procedimento,a.dt_agenda,'0'),'0')
                                and	z.nr_seq_fpo_regra	= nr_seq_regra_p))
                and	not exists (	select	1
                                        from	sus_fpo_regra_desconsid x
                                        where	x.nr_seq_fpo_regra	= nr_seq_regra_p
                                        and	coalesce(sus_obter_cbo_medico(a.cd_medico,a.cd_procedimento,a.dt_agenda,'0'),'0') = coalesce(x.cd_cbo,coalesce(sus_obter_cbo_medico(a.cd_medico,a.cd_procedimento,a.dt_agenda,'0'),'0'))
                                        and	a.cd_procedimento	= coalesce(x.cd_procedimento,a.cd_procedimento)
                                        and	a.ie_origem_proced	= coalesce(x.ie_origem_proced,a.ie_origem_proced)
                                        and	d.nr_seq_forma_org	= coalesce(x.nr_seq_forma_org,d.nr_seq_forma_org)
                                        and	d.nr_seq_grupo	= coalesce(x.nr_seq_grupo,d.nr_seq_grupo)
                                        and	d.nr_seq_subgrupo	= coalesce(x.nr_seq_subgrupo,d.nr_seq_subgrupo)  LIMIT 1)
                and	d.ie_complexidade		= coalesce(ie_complexidade_w,d.ie_complexidade)
                and	((coalesce(ie_tipo_atendimento_w,'X') = 'X') or (obter_se_contido(b.ie_tipo_atendimento,ie_tipo_atendimento_w) = 'S'))
                and	((coalesce(cd_procedencia_w,'X') = 'X') or (obter_se_contido(a.cd_procedencia, cd_procedencia_w) = 'S'))
                and	d.ie_tipo_financiamento 	= coalesce(ie_tipo_financiamento_w,d.ie_tipo_financiamento)
                and	d.nr_seq_forma_org		= coalesce(nr_seq_forma_org_w,d.nr_seq_forma_org)
                and	d.nr_seq_grupo			= coalesce(nr_seq_grupo_w,d.nr_seq_grupo)
                and	d.nr_seq_subgrupo		= coalesce(nr_seq_subgrupo_w,d.nr_seq_subgrupo)
                and	a.cd_procedimento		= d.cd_procedimento
                and	coalesce(a.ie_origem_proced,7)	= d.ie_origem_proced
                and	b.cd_estabelecimento		= coalesce(cd_estabelecimento_w,b.cd_estabelecimento)
                and	establishment_timezone_utils.startofmonth(a.dt_agenda)	= establishment_timezone_utils.startofmonth(dt_competencia_w)
                and	a.cd_convenio	= cd_convenio_sus_w;
                exception
                        when others then
                        qt_procedimento_w	:= 0;
                        vl_procedimento_w	:= 0;
                end;

                begin
		select	coalesce(sum(qt_fisico_prot),0),
			coalesce(sum(vl_orcamento_prot),0)
		into STRICT	qt_fisico_exet_w,
			vl_orcamento_exet_w
		from	sus_fpo_regra_externo
		where 	nr_seq_fpo_regra = nr_seq_regra_p;
		exception
                when others then
                        qt_fisico_exet_w        := 0;
			vl_orcamento_exet_w	:= 0;
		end;

        end if;
end if;

if (ie_tipo_p = 1) then
        vl_retorno_w := coalesce(qt_procedimento_w,0) + coalesce(qt_fisico_exet_w,0);
elsif (ie_tipo_p = 2) then
        vl_retorno_w := coalesce(vl_procedimento_w,0) + coalesce(vl_orcamento_exet_w,0);
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_resultado_fpo ( nr_seq_regra_p bigint, ie_tipo_p bigint, ie_opcao_p text) FROM PUBLIC;

