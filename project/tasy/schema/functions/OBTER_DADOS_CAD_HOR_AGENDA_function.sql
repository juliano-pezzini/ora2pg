-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_cad_hor_agenda (cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

dt_dia_semana_w	smallint;
ie_feriado_w		varchar(1);
nr_seq_esp_w		bigint;
ie_hor_adic_w		varchar(1);
nr_seq_medico_w	bigint;
cd_medico_w		varchar(10);
nr_seq_sala_w		bigint;
ds_retorno_w		varchar(10);

/* obter dados cadastro horário agenda */
 
c01 CURSOR FOR 
SELECT	nr_seq_medico_exec, 
	nr_seq_sala 
from	agenda_horario 
where	cd_agenda = cd_agenda_p 
and	((dt_dia_semana = dt_dia_semana_w) or (dt_dia_semana = 9)) 
and	((nr_seq_esp_w = 0) or (ie_hor_adic_w = 'S')) 
and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= trunc(dt_agenda_p))) 
and	((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= trunc(dt_agenda_p))) 
and 	hr_inicial < hr_final 
and	coalesce(nr_minuto_intervalo,0) > 0 
and	ie_feriado_w <> 'S';
	

BEGIN 
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') then 
	/* obter dia semana */
 
	select	obter_cod_dia_semana(dt_agenda_p) 
	into STRICT	dt_dia_semana_w 
	;
	 
	/* obter se feriado */
		 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_feriado_w 
	from 	feriado a, 
		agenda b 
	where 	a.cd_estabelecimento = cd_estabelecimento_p 
	and	a.dt_feriado = dt_agenda_p 
	and 	b.cd_agenda = cd_agenda_p;
 
	/* obter se horário especial */
 
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_horario_adicional),'N') 
	into STRICT	nr_seq_esp_w, 
		ie_hor_adic_w 
	from	agenda_horario_esp 
	where	cd_agenda = cd_agenda_p 
	and	dt_agenda = trunc(dt_agenda_p,'dd');
 
	/* gerar dados cadastro horário agenda */
 
	open c01;
	loop 
	fetch c01 into	nr_seq_medico_w, 
				nr_seq_sala_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		if (nr_seq_medico_w IS NOT NULL AND nr_seq_medico_w::text <> '') then 
			select	cd_medico 
			into STRICT	cd_medico_w 
			from	agenda_medico 
			where	nr_sequencia = nr_seq_medico_w 
			and	cd_agenda = cd_agenda_p;
		else 
			cd_medico_w := null;
		end if;
		cd_medico_w	:= cd_medico_w;
		nr_seq_sala_w 	:= nr_seq_sala_w;
		end;
	end loop;
	close c01;
 
	/* definir retorno */
 
	if (coalesce(ie_opcao_p,'M') = 'M') then 
		ds_retorno_w := cd_medico_w;
	elsif (coalesce(ie_opcao_p,'M') = 'S') then 
		ds_retorno_w := nr_seq_sala_w;
	end if;
end if;
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_cad_hor_agenda (cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, ie_opcao_p text) FROM PUBLIC;

