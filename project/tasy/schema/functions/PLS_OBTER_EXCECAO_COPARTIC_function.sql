-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_excecao_copartic ( nr_seq_regra_copartic_p pls_regra_copartic_exce.nr_seq_regra_copartic%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_grupo_servico_p pls_preco_grupo_servico.nr_sequencia%type, nr_seq_saida_int_p pls_motivo_saida.nr_sequencia%type, nr_seq_saida_int_princ_p pls_motivo_saida.nr_sequencia%type, ie_tipo_guia_p pls_conta.ie_tipo_guia%type, dt_autorizacao_p pls_conta.dt_atendimento_referencia%type, nr_seq_conta_proc_P pls_conta_proc.nr_sequencia%type default null, ie_tipo_protocolo_p pls_regra_copartic_exce.ie_tipo_protocolo%type DEFAULT NULL, nr_seq_tipo_atendimento_p pls_conta.nr_seq_tipo_atendimento%type DEFAULT NULL, ie_tipo_atend_tiss_p pls_regra_copartic_exce.ie_tipo_atend_tiss%type DEFAULT NULL, ie_apresentacao_p pls_protocolo_conta.ie_apresentacao%type DEFAULT NULL, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) RETURNS bigint AS $body$
DECLARE


nr_seq_regra_excecao_w		pls_regra_copartic_exce.nr_sequencia%type := null;
ie_grupo_servico_valido_w	varchar(1) := 'N';
cd_procedimento_w		pls_conta_proc.cd_procedimento%type;
ie_origem_proced_w		pls_conta_proc.ie_origem_proced%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_fim_vigencia_ref,
		dt_inicio_vigencia,
		ie_tipo_guia,
		nr_seq_grupo_prestador,
		nr_seq_grupo_servico,
		nr_seq_saida_int,
		nr_seq_saida_int_princ
	from	pls_regra_copartic_exce
	where	nr_seq_regra_copartic  = nr_seq_regra_copartic_p
	and	((coalesce(ie_tipo_protocolo::text, '') = '') or (ie_tipo_protocolo = ie_tipo_protocolo_p))
	and ((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p))
	and ((coalesce(ie_regime_atendimento::text, '') = '') or (ie_regime_atendimento = ie_regime_atendimento_p))
	and ((coalesce(ie_saude_ocupacional::text, '') = '') or (ie_saude_ocupacional = ie_saude_ocupacional_p))
	and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_w and ie_origem_proced = ie_origem_proced_w))
	and ((coalesce(nr_seq_prestador::text, '') = '') or ( nr_seq_prestador = nr_seq_prestador_p))
	and ((coalesce(ie_tipo_atend_tiss::text, '') = '') or (ie_tipo_atend_tiss = ie_tipo_atend_tiss_p))
	and ((coalesce(ie_apresentacao::text, '') = '') or (ie_apresentacao =  'N') or (ie_apresentacao = ie_apresentacao_p));
	
BEGIN

	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '')  then
		--Obtem o procedimento e origem
		select 	cd_procedimento,
				ie_origem_proced
		into STRICT	cd_procedimento_w,
				ie_origem_proced_w
		from	pls_conta_proc
		where	nr_sequencia = nr_seq_conta_proc_p;
	end if;


for r_C01_w in C01 loop
	
	--Se uma das condicoes da regra for falsa, ja avanca para a proxima regra de excecao
	if (coalesce(r_C01_w.ie_tipo_guia::text, '') = '' or (r_C01_w.ie_tipo_guia = ie_tipo_guia_p)) then
			
		if (coalesce(r_C01_w.nr_seq_grupo_servico::text, '') = '') then
			ie_grupo_servico_valido_w := 'S';
		else
			if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
				
				--Verifica se o procedimento esta no grupo que a regra esta restringindo
				ie_grupo_servico_valido_w := pls_se_grupo_preco_servico(r_C01_w.nr_seq_grupo_servico, cd_procedimento_w, ie_origem_proced_w);
			end if;
						
		end if;
				
		if (ie_grupo_servico_valido_w = 'S') then
			--Ja tratado inicio vigencia com horario 00:00:00 e fim vigencia 23:59:59 na propria regra de excecao
			if (r_C01_w.dt_inicio_vigencia < dt_autorizacao_p and dt_autorizacao_p < r_C01_w.dt_fim_vigencia_ref) then
			
				--Na regra, existe a excecao para saida internacao na conta, ou entao na conta principal. Se os dois campos tiverem valor, caso um deles combinar com a conta, entao

				--a regra essa verificacao e considerada valida
				if	((coalesce(r_C01_w.nr_seq_saida_int::text, '') = '' and coalesce(r_C01_w.nr_seq_saida_int_princ::text, '') = '') or (r_C01_w.nr_seq_saida_int = nr_seq_saida_int_p) or ( r_C01_w.nr_seq_saida_int_princ = nr_seq_saida_int_princ_p)) then
					
					if (coalesce(r_C01_w.nr_seq_grupo_prestador::text, '') = '' or (pls_obter_se_grupo_prestador(nr_seq_prestador_p, r_C01_w.nr_seq_grupo_prestador) = 'S')) then
						nr_seq_regra_excecao_w := r_C01_w.nr_sequencia;
						exit;
					end if;						
				end if;
			end if;
		end if;
	
	end if;
	
end loop;

return	nr_seq_regra_excecao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_excecao_copartic ( nr_seq_regra_copartic_p pls_regra_copartic_exce.nr_seq_regra_copartic%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_grupo_servico_p pls_preco_grupo_servico.nr_sequencia%type, nr_seq_saida_int_p pls_motivo_saida.nr_sequencia%type, nr_seq_saida_int_princ_p pls_motivo_saida.nr_sequencia%type, ie_tipo_guia_p pls_conta.ie_tipo_guia%type, dt_autorizacao_p pls_conta.dt_atendimento_referencia%type, nr_seq_conta_proc_P pls_conta_proc.nr_sequencia%type default null, ie_tipo_protocolo_p pls_regra_copartic_exce.ie_tipo_protocolo%type DEFAULT NULL, nr_seq_tipo_atendimento_p pls_conta.nr_seq_tipo_atendimento%type DEFAULT NULL, ie_tipo_atend_tiss_p pls_regra_copartic_exce.ie_tipo_atend_tiss%type DEFAULT NULL, ie_apresentacao_p pls_protocolo_conta.ie_apresentacao%type DEFAULT NULL, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) FROM PUBLIC;

