-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION man_obter_se_it_lib_grupo_usu ( nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1) := 'S';
qt_existe_w			bigint;

/*	A - Atividade
	C - Ação
	R - Resultado	*/
BEGIN

if (ie_opcao_p = 'A') then
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	man_inspecao_atividade_lib
	where	nr_seq_atividade = nr_sequencia_p;

	if (qt_existe_w > 0) then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	man_inspecao_atividade_lib
		where	nr_seq_atividade = nr_sequencia_p
		and	coalesce(nr_seq_grupo_planej::text, '') = ''
		and	coalesce(nr_seq_grupo_trab::text, '') = '';

		if (qt_existe_w = 0) then
			begin
			select	'S'
			into STRICT	ds_retorno_w
			from	man_inspecao_atividade_lib a
			where	a.nr_seq_atividade = nr_sequencia_p
			and exists (	SELECT	1
					from	man_grupo_trab_usuario z,
						man_grupo_planej_trab y,
						man_grupo_trabalho x
					where	x.nr_sequencia = y.nr_seq_grupo_trab
					and	x.nr_sequencia = z.nr_seq_grupo_trab
					and	y.nr_seq_grupo_planej = coalesce(a.nr_seq_grupo_planej,y.nr_seq_grupo_planej)
					and	x.nr_sequencia = coalesce(a.nr_seq_grupo_trab,x.nr_sequencia)
					and	z.nm_usuario_param = nm_usuario_p)  LIMIT 1;
			exception
			when others then
				ds_retorno_w := 'N';
			end;
		end if;
		end;
	end if;
	end;
elsif (ie_opcao_p = 'C') then
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	man_inspecao_acao_lib
	where	nr_seq_acao = nr_sequencia_p;

	if (qt_existe_w > 0) then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	man_inspecao_acao_lib
		where	nr_seq_acao = nr_sequencia_p
		and	coalesce(nr_seq_grupo_planej::text, '') = ''
		and	coalesce(nr_seq_grupo_trab::text, '') = '';

		if (qt_existe_w = 0) then
			begin
			select	'S'
			into STRICT	ds_retorno_w
			from	man_inspecao_acao_lib a
			where	a.nr_seq_acao = nr_sequencia_p
			and exists (	SELECT	1
					from	man_grupo_trab_usuario z,
						man_grupo_planej_trab y,
						man_grupo_trabalho x
					where	x.nr_sequencia = y.nr_seq_grupo_trab
					and	x.nr_sequencia = z.nr_seq_grupo_trab
					and	y.nr_seq_grupo_planej = coalesce(a.nr_seq_grupo_planej,y.nr_seq_grupo_planej)
					and	x.nr_sequencia = coalesce(a.nr_seq_grupo_trab,x.nr_sequencia)
					and	z.nm_usuario_param = nm_usuario_p)  LIMIT 1;
			exception
			when others then
				ds_retorno_w := 'N';
			end;
		end if;
		end;
	end if;
	end;
elsif (ie_opcao_p = 'R') then
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	man_inspecao_resultado_lib
	where	nr_seq_resultado = nr_sequencia_p;

	if (qt_existe_w > 0) then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	man_inspecao_resultado_lib
		where	nr_seq_resultado = nr_sequencia_p
		and	coalesce(nr_seq_grupo_planej::text, '') = ''
		and	coalesce(nr_seq_grupo_trab::text, '') = '';

		if (qt_existe_w = 0) then
			begin
			select	'S'
			into STRICT	ds_retorno_w
			from	man_inspecao_resultado_lib a
			where	a.nr_seq_resultado = nr_sequencia_p
			and exists (	SELECT	1
					from	man_grupo_trab_usuario z,
						man_grupo_planej_trab y,
						man_grupo_trabalho x
					where	x.nr_sequencia = y.nr_seq_grupo_trab
					and	x.nr_sequencia = z.nr_seq_grupo_trab
					and	y.nr_seq_grupo_planej = coalesce(a.nr_seq_grupo_planej,y.nr_seq_grupo_planej)
					and	x.nr_sequencia = coalesce(a.nr_seq_grupo_trab,x.nr_sequencia)
					and	z.nm_usuario_param = nm_usuario_p)  LIMIT 1;
			exception
			when others then
				ds_retorno_w := 'N';
			end;
		end if;
		end;
	end if;
	end;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION man_obter_se_it_lib_grupo_usu ( nr_sequencia_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

