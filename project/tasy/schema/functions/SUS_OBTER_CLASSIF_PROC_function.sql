-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_classif_proc (cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_servico_p bigint, cd_estabelecimento_p bigint default null, dt_procedimento_p timestamp default clock_timestamp()) RETURNS bigint AS $body$
DECLARE


/*
lhalves OS 872173 em 14/05/2015
 - Incluído o cd_estabelecimento_p, pois  em algumas integrações, não é definido o estabelecimento para a wheb_usuario_pck, fazendo com que a classificação do procedimento
 não fosse obtida. Agora, irá considerar o estabelecimento do atendimento, passado de parâmetro nas triggers PROCEDIMENTO_PACIENTE_INSERT E PROCEDIMENTO_PACIENTE_UPDATE
*/
nr_seq_retorno_w		bigint := null;
cd_estab_usuario_w	integer;
ie_informa_classif_sus_w	varchar(15) := 'S';
qt_classif_proc_w		bigint;
qt_regra_bpa_w		bigint;
qt_hab_bpa_w		bigint;
qt_serv_bpa_w		bigint;


BEGIN


if (coalesce(nr_seq_servico_p,0) > 0) then
	begin

	begin
	cd_estab_usuario_w	:= coalesce(cd_estabelecimento_p,coalesce(wheb_usuario_pck.get_cd_estabelecimento,0));
	exception
	when others then
		cd_estab_usuario_w := 0;
	end;

	begin
	select	coalesce(max(ie_informa_classif_sus),'S')
	into STRICT	ie_informa_classif_sus_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estab_usuario_w;
	exception
	when others then
		ie_informa_classif_sus_w := 'S';
	end;

	select	count(1)
	into STRICT	qt_classif_proc_w
	from	sus_servico_classif b,
		sus_proced_serv_classif c
	where	b.nr_seq_servico = nr_seq_servico_p
	and	b.nr_sequencia = c.nr_seq_serv_classif
	and	c.cd_procedimento = cd_procedimento_p
	and	c.ie_origem_proced = ie_origem_proced_p
	and	exists (	SELECT 	1
			from	sus_serv_classif_hosp x,
				sus_servico_hospital y
			where	x.nr_seq_serv_classif = c.nr_seq_serv_classif
			and	x.nr_seq_serv_hosp = y.nr_sequencia
			and	y.nr_seq_servico = b.nr_seq_servico
			and	y.cd_estabelecimento = cd_estab_usuario_w);

	if (coalesce(ie_informa_classif_sus_w,'S') = 'N') and (qt_classif_proc_w > 1) then
		nr_seq_retorno_w := null;
	else
		begin

		if (nr_seq_servico_p = 1351) and (Sus_Obter_Se_Detalhe_Proc(cd_procedimento_p,ie_origem_proced_p,'020',dt_procedimento_p) > 0) then
			begin

			select	count(1)
			into STRICT	qt_regra_bpa_w
			from	sus_procedimento a
			where	a.cd_procedimento	= cd_procedimento_p
			and	a.ie_origem_proced	= ie_origem_proced_p
			and	exists (	SELECT	1
					from	sus_procedimento_registro x
					where	x.cd_procedimento	= a.cd_procedimento
					and	x.ie_origem_proced	= a.ie_origem_proced
					and	x.cd_registro 		= 1)
			and	exists (	select	1
					from	sus_procedimento_registro x
					where	x.cd_procedimento	= a.cd_procedimento
					and	x.ie_origem_proced	= a.ie_origem_proced
					and	x.cd_registro 		= 2)  LIMIT 1;

			if (qt_regra_bpa_w > 0) then
				begin

				select	count(1)
				into STRICT	qt_hab_bpa_w
				from	sus_habilitacao_hospital
				where	cd_estabelecimento = cd_estab_usuario_w
				and	cd_habilitacao in (403,404,405)  LIMIT 1;

				select 	count(1)
				into STRICT	qt_serv_bpa_w
				from	sus_serv_classif_hosp x,
					sus_servico_hospital y
				where	x.nr_seq_serv_classif = 6761
				and	y.nr_seq_servico = 1351
				and	x.nr_seq_serv_hosp = y.nr_sequencia  LIMIT 1;

				if (qt_hab_bpa_w > 0) and (qt_serv_bpa_w > 0) then
					begin
					nr_seq_retorno_w := 6761;
					end;
				end if;

				end;
			end if;
			end;
		end if;

		if (coalesce(nr_seq_retorno_w::text, '') = '') then
			begin

			begin
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_retorno_w
			from	sus_servico_classif b,
				sus_proced_serv_classif c
			where	b.nr_seq_servico = nr_seq_servico_p
			and	b.nr_sequencia = c.nr_seq_serv_classif
			and	c.cd_procedimento = cd_procedimento_p
			and	c.ie_origem_proced = ie_origem_proced_p
			and	exists (	SELECT 	1
					from	sus_serv_classif_hosp x,
						sus_servico_hospital y
					where	x.nr_seq_serv_classif = c.nr_seq_serv_classif
					and	x.nr_seq_serv_hosp = y.nr_sequencia
					and	y.nr_seq_servico = b.nr_seq_servico
					and	y.cd_estabelecimento = cd_estab_usuario_w);
			exception
			when others then
				nr_seq_retorno_w := null;
			end;

			end;
		end if;

		end;
	end if;

	end;
end if;

return	nr_seq_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_classif_proc (cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_servico_p bigint, cd_estabelecimento_p bigint default null, dt_procedimento_p timestamp default clock_timestamp()) FROM PUBLIC;

