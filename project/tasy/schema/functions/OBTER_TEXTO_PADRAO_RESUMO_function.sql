-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_texto_padrao_resumo (nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_primeiro_exame_p text, --ds_texto_retorno_p		out varchar2,
 cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, nr_seq_grupo_p bigint, nr_seq_item_grupo_p bigint, ie_resumo_p text, ie_resumo_long_p text, nr_seq_agenda_int_p bigint, cd_pessoa_fisica_p text, ie_tipo_agenda_p text default 'X') RETURNS varchar AS $body$
DECLARE


nr_seq_regra_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ds_texto_retorno_w	varchar(2000) := '';
qt_reg_w		bigint;
cd_grupo_proced_w	bigint;
cd_espec_proced_w	bigint;
cd_area_proced_w	bigint;
ds_texto_w		varchar(2000);
ds_enter_w		varchar(255);
ds_retorno_w		varchar(4000);
nr_seq_grupo_w		bigint;
nr_seq_item_grupo_w	bigint;
qt_exame_lab_w		bigint;
cd_medico_w		varchar(10);

nr_seq_proc_interno_w	bigint;


C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	ageint_texto_padrao_proc a
	where	((cd_area_procedimento = cd_area_proced_w) or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_procedimento = cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_origem_proced::text, '') = '')))
	and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	and (coalesce(cd_convenio, cd_convenio_p)	= cd_convenio_p or (coalesce(cd_convenio_p::text, '') = '' and coalesce(cd_convenio::text, '') = ''))
	and (coalesce(cd_categoria, cd_categoria_p)	= cd_categoria_p or (coalesce(cd_categoria_p::text, '') = '' and coalesce(cd_categoria::text, '') = ''))
	and (coalesce(cd_plano, cd_plano_p)		= cd_plano_p or (coalesce(cd_plano_p::text, '') = '' and coalesce(cd_plano::text, '') = ''))
	and (coalesce(nr_seq_grupo, nr_seq_grupo_w)	= nr_seq_grupo_w)
	and (coalesce(nr_seq_item_grupo, nr_seq_item_grupo_w)	= nr_seq_item_grupo_w)
	and	((ie_primeiro_exame_p = 'S' and ie_somente_pri_exame ='S') or (ie_primeiro_exame_p = 'N' and ie_somente_pri_exame = 'N'))
	and	((coalesce(ie_email, 'S')	= 'S' and ie_resumo_p	= 'S') or ie_resumo_p =	'N')
	and	coalesce(a.cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
	and (coalesce(cd_pessoa_fisica, cd_pessoa_fisica_p) = cd_pessoa_fisica_p or (coalesce(cd_pessoa_fisica_p::text, '') = '' and coalesce(cd_pessoa_fisica::text, '') = ''))
	and	((coalesce(ie_tipo_agenda,'T')	= ie_tipo_agenda_p) or (coalesce(ie_tipo_agenda,'T')	= 'T'))
	order by a.nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced
	from	ageint_exame_lab
	where	nr_seq_ageint	= nr_seq_agenda_int_p
	order by 1;


BEGIN

nr_seq_proc_interno_w	:= nr_seq_proc_interno_p;

if (ie_resumo_long_p	= 'N') then
	ds_enter_w	:= chr(10);
else
	ds_enter_w	:= '\par ';
end if;
select	count(*)
into STRICT	qt_reg_w
from	ageint_texto_padrao_proc;

nr_seq_grupo_w		:= coalesce(nr_seq_grupo_p,0);
nr_seq_item_grupo_w	:= coalesce(nr_seq_item_grupo_p,0);

if (qt_reg_w > 0) then

	select	count(*)
	into STRICT	qt_exame_lab_w
	from	ageint_exame_lab
	where	nr_Seq_ageint	= nr_Seq_agenda_int_p;

	if (qt_exame_lab_w	= 0) then

		select	coalesce(max(a.cd_area_procedimento),0),
			coalesce(max(a.cd_especialidade),0),
			coalesce(max(a.cd_grupo_proc),0)
		into STRICT	cd_area_proced_w,
			cd_espec_proced_w,
			cd_grupo_proced_w
		from	estrutura_procedimento_v a
		where	cd_procedimento = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_p;

		open C01;
		loop
		fetch C01 into
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
				select	substr(max(ds_texto),1,2000)
				into STRICT	ds_texto_w
				from 	ageint_texto_padrao_proc
				where	nr_sequencia = nr_seq_regra_w;

				ds_texto_retorno_w	:= substr(ds_texto_retorno_w || ds_enter_w || ds_texto_w,1,2000);
			end;
		end loop;
		close C01;
	else
		open C02;
		loop
		fetch C02 into
			nr_seq_proc_interno_w,
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			if (coalesce(ds_texto_retorno_w::text, '') = '') then
				select	coalesce(max(a.cd_area_procedimento),0),
					coalesce(max(a.cd_especialidade),0),
					coalesce(max(a.cd_grupo_proc),0)
				into STRICT	cd_area_proced_w,
					cd_espec_proced_w,
					cd_grupo_proced_w
				from	estrutura_procedimento_v a
				where	cd_procedimento = cd_procedimento_w
				and	ie_origem_proced = ie_origem_proced_w;

				open C01;
				loop
				fetch C01 into
					nr_seq_regra_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin
						select	substr(max(ds_texto),1,2000)
						into STRICT	ds_texto_w
						from 	ageint_texto_padrao_proc
						where	nr_sequencia = nr_seq_regra_w;

						ds_texto_retorno_w	:= substr(ds_texto_retorno_w || ds_enter_w || ds_texto_w,1,2000);
					end;
				end loop;
				close C01;
			end if;
			end;
		end loop;
		close C02;
	end if;

end if;

ds_retorno_w := ds_texto_retorno_w;


return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_texto_padrao_resumo (nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_primeiro_exame_p text,  cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, nr_seq_grupo_p bigint, nr_seq_item_grupo_p bigint, ie_resumo_p text, ie_resumo_long_p text, nr_seq_agenda_int_p bigint, cd_pessoa_fisica_p text, ie_tipo_agenda_p text default 'X') FROM PUBLIC;

