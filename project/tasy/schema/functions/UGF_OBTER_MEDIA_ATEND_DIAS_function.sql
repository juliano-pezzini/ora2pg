-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ugf_obter_media_atend_dias ( qt_total_registros_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, cd_especialidade_p bigint, cd_tipo_agenda_p bigint, cd_agenda_p bigint) RETURNS varchar AS $body$
DECLARE

											 
ds_retorno_w				varchar(255);
cd_especialidade_agenda_w	integer;
qt_dias_media_atend_w		bigint;
qt_dias_portaria_w			bigint;
qt_dias_atend_rn259_w		bigint;
					

BEGIN 
 
select	coalesce(obter_especialidade_agenda(cd_agenda_p), 0) 
into STRICT	cd_especialidade_agenda_w
;
 
if (qt_total_registros_p IS NOT NULL AND qt_total_registros_p::text <> '') and (cd_tipo_agenda_p IS NOT NULL AND cd_tipo_agenda_p::text <> '') then 
	 
	--Calcula a média de dias de atendimento no período, baseado na quantidade de registros retornados no select 
	--AGENDA DE CONSULTAS 
	if (cd_tipo_agenda_p = 3)then 
	 
		select	round((dividir(sum(obter_dias_entre_datas_uteis(dt_agendamento, dt_agenda)), qt_total_registros_p))::numeric,0) 
		into STRICT	qt_dias_media_atend_w 
		from (SELECT	distinct		 
						b.dt_agenda dt_agenda, 
						b.dt_agendamento dt_agendamento 
				from	agenda a, 
						agenda_consulta b	 
				where	a.cd_agenda				= b.cd_agenda 
				and		a.ie_situacao 			= 'A' 
				and		a.cd_tipo_agenda		= 3 
				and		a.cd_estabelecimento	= cd_estabelecimento_p 
				and		a.cd_especialidade		= cd_especialidade_p 
				and		b.dt_agendamento		between dt_inicial_p	and fim_dia(dt_final_p) 
				and		(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '') 
				and		b.nr_seq_motivo_agendamento	= 2	 
				) alias10;		
				 
		if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (cd_especialidade_p in (3, 4, 9, 20)) then 
			qt_dias_atend_rn259_w		:= 7;	
		elsif (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (cd_especialidade_p not in (3, 4, 9, 20)) then 
				qt_dias_atend_rn259_w	:= 14;				
		end if;
	else 
	--AGENDA DE EXAMES 
		select	round((dividir(sum(obter_dias_entre_datas_uteis(dt_agendamento, dt_agenda)),qt_total_registros_p))::numeric,0) 
		into STRICT	qt_dias_media_atend_w 
		from (SELECT	distinct				 
						b.hr_inicio dt_agenda, 
						b.dt_agendamento 
				from	agenda a, 
						agenda_paciente b	 
				where	a.cd_agenda				= b.cd_agenda 
				and		a.ie_situacao 			= 'A' 
				and		a.cd_tipo_agenda		= 2 
				and		a.cd_estabelecimento	= cd_estabelecimento_p 
				and		a.cd_agenda				= cd_agenda_p 
				and		b.dt_agendamento		between dt_inicial_p	and fim_dia(dt_final_p) 
				and		(a.cd_agenda IS NOT NULL AND a.cd_agenda::text <> '') 
				and		b.nr_seq_motivo_agendamento	= 2 
				) alias7;
				 
		select	coalesce(CASE WHEN cd_agenda_p=1265 THEN  21 WHEN cd_agenda_p=1225 THEN  21 WHEN cd_agenda_p=1285 THEN  10 WHEN cd_agenda_p=1275 THEN  21 WHEN cd_agenda_p=1205 THEN  10 WHEN cd_agenda_p=1215 THEN  10 WHEN cd_agenda_p=1905 THEN  10 WHEN cd_agenda_p=1625 THEN  10 WHEN cd_agenda_p=1615 THEN  10 WHEN cd_agenda_p=1845 THEN  10 WHEN cd_agenda_p=1835 THEN  10 WHEN cd_agenda_p=1605 THEN  10 WHEN cd_agenda_p=2345 THEN  10 WHEN cd_agenda_p=2305 THEN  10 WHEN cd_agenda_p=1985 THEN  10 END , 0) 
		into STRICT	qt_dias_atend_rn259_w 
		;
		 
	end if;
	 
	if (qt_dias_media_atend_w > qt_dias_atend_rn259_w)then 
		ds_retorno_w := 'Não Atende Portaria';
	else 
		ds_retorno_w := 'Atende Portaria';
	end if;	
else 
	ds_retorno_w := 'Não Atende Portaria';
	 
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ugf_obter_media_atend_dias ( qt_total_registros_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, cd_especialidade_p bigint, cd_tipo_agenda_p bigint, cd_agenda_p bigint) FROM PUBLIC;

