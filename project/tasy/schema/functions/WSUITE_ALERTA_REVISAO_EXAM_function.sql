-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION wsuite_alerta_revisao_exam (nr_seq_prescr_p bigint, nr_seq_prescr_item_p bigint, ds_login_p text, ie_tipo_item_p text, nr_seq_exame_p bigint default null, ie_tipo_retorno_p text default 'I', cd_pessoa_fisica_p text default null, dt_coleta_p timestamp default null, cd_medico_p text default null) RETURNS varchar AS $body$
DECLARE


ie_revisado_w			varchar(1) := 'N';
nr_seq_prescr_w			prescr_procedimento.nr_prescricao%type;
nr_seq_prescr_item_w	prescr_procedimento.nr_sequencia%type;
nr_seq_exame_w			prescr_procedimento.nr_seq_exame%type;

C01 CURSOR FOR
	SELECT 	a.nr_sequencia,
			a.nr_prescricao,
			a.nr_seq_exame
	FROM	prescr_procedimento a
			INNER JOIN prescr_medica b ON (b.nr_prescricao = a.nr_prescricao)
			INNER JOIN exame_laboratorio s ON (s.nr_seq_exame = a.nr_seq_exame)
			LEFT JOIN tipo_baixa_prescricao z ON (z.cd_tipo_baixa = a.cd_motivo_baixa AND z.ie_prescricao_devolucao = 'P')
	WHERE ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') OR (b.dt_liberacao_medico IS NOT NULL AND b.dt_liberacao_medico::text <> ''))
	AND   b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND   coalesce(a.ie_suspenso,'N') = 'N'
	AND   (a.nr_seq_exame IS NOT NULL AND a.nr_seq_exame::text <> '')
	AND   a.ie_status_atend >= 35
	AND (coalesce(a.ie_pendente_amostra,'N') = 'N')
	AND   (a.cd_material_exame IS NOT NULL AND a.cd_material_exame::text <> '')
	AND   coalesce(ie_mostrar_web,'S') = 'S'
	AND   trunc(a.dt_coleta) = to_date(dt_coleta_p)
	AND   s.ie_anatomia_patologica = 'N'
	AND   (a.dt_coleta IS NOT NULL AND a.dt_coleta::text <> '')
	AND (ie_conta_paciente IS  NULL OR ie_conta_paciente = 'S')
	AND   b.cd_medico = cd_medico_p
	AND	  substr(obter_se_exame_bloqueado(a.nr_sequencia, b.nr_prescricao), 1, 1) = 'N';
	
function obter_se_lib_pos_leitura(
								nr_seq_prescr_p 		bigint,
								nr_seq_prescr_item_p 	bigint,
								ds_login_p				text,
								ie_tipo_item_p			text,
								nr_seq_exame_P			bigint)
					return text is	
	ie_retorno_w		varchar(1) := 'N';				
	dt_aprovacao_w		laudo_paciente.dt_aprovacao%type;
	dt_visualizado_w	wsuite_result_view.dt_visualizacao%type;
	
BEGIN
		select	dt_visualizacao
		into STRICT	dt_visualizado_w
		from	wsuite_result_view
		where	nr_seq_prescr = nr_seq_prescr_p
		and		nr_seq_prescr_item = nr_seq_prescr_item_p
		and		ds_login = ds_login_p;
		
		if (ie_tipo_item_p = 'L') then --Laboratorial
		
			select 	x.dt_aprovacao
			into STRICT	dt_aprovacao_w
			from	exame_lab_result_item x,
					exame_lab_resultado y
			where   x.nr_seq_resultado = y.nr_seq_resultado
			and     y.nr_prescricao = nr_seq_prescr_p
			and     x.nr_seq_prescr = nr_seq_prescr_item_p
			and		x.nr_seq_exame = nr_seq_exame_p;
			
		elsif (ie_tipo_item_p = 'P') or (ie_tipo_item_p = 'N') then --Patologia e Nao laboratorial
		
			select	dt_aprovacao
			into STRICT	dt_aprovacao_w
			from	laudo_paciente
			where	nr_prescricao = nr_seq_prescr_p
			and		nr_seq_prescricao = nr_seq_prescr_item_p;
			
		end if;

		if (dt_visualizado_w IS NOT NULL AND dt_visualizado_w::text <> '') and (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') and (dt_aprovacao_w > dt_visualizado_w) then
			ie_retorno_w := 'S';
		end if;
	
	return	ie_retorno_w;
	
	end;

BEGIN

/* ie_tipo_retorno_p = Tipo de dado para retorno
I - Retorna o status de um item
P - Retorna o status de um agrupador para item laboratorial
*/
if (ie_tipo_retorno_p = 'I') and (nr_seq_prescr_p > 0) and (nr_seq_prescr_item_p > 0) and (ds_login_p IS NOT NULL AND ds_login_p::text <> '') then

	ie_revisado_w := obter_se_lib_pos_leitura(nr_seq_prescr_p, nr_seq_prescr_item_p, ds_login_p, ie_tipo_item_p, nr_seq_exame_p);


elsif (ie_tipo_retorno_p = 'P') and (ds_login_p IS NOT NULL AND ds_login_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (dt_coleta_p IS NOT NULL AND dt_coleta_p::text <> '') and (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then

	open C01;
	loop
	fetch C01 into	
		nr_seq_prescr_item_w,
		nr_seq_prescr_w,	
		nr_seq_exame_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		if (ie_revisado_w = 'N') then
			ie_revisado_w := obter_se_lib_pos_leitura(nr_seq_prescr_w, nr_seq_prescr_item_w, ds_login_p, ie_tipo_item_p,nr_seq_exame_w);
		end if;
	end;
	end loop;
	close C01;

end if;

return ie_revisado_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION wsuite_alerta_revisao_exam (nr_seq_prescr_p bigint, nr_seq_prescr_item_p bigint, ds_login_p text, ie_tipo_item_p text, nr_seq_exame_p bigint default null, ie_tipo_retorno_p text default 'I', cd_pessoa_fisica_p text default null, dt_coleta_p timestamp default null, cd_medico_p text default null) FROM PUBLIC;

