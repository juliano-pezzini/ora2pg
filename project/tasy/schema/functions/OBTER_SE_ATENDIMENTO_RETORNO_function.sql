-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_atendimento_retorno ( nr_atendimento_p bigint, nr_atend_lista_p bigint) RETURNS bigint AS $body$
DECLARE


cd_estabelecimento_w		smallint;
cd_pessoa_fisica_w			varchar(10);
ie_tipo_atendimento_w		smallint;
cd_convenio_w				integer;
cd_setor_atendimento_w		integer;
cd_medico_resp_w			varchar(10);
qt_retorno_w				smallint;
nr_atendimento_w			bigint;
cd_medico_w					varchar(10);
ie_regra_w					varchar(1);
qt_dia_w					integer;
ie_ok_w						integer;
ie_ok_atual_w				integer;
qt_reg_w					smallint;
nr_seq_classificacao_w		bigint;
nr_seq_classificacao_regra_w	bigint;
ie_dentro_mes_w				varchar(1)	:= 'N';
ie_dentro_dia_w				varchar(1)	:= 'N';
dt_entrada_w				timestamp;
dt_atual_w					timestamp;
nr_seq_queixa_w				bigint;
nr_seq_queixa_origem_w		bigint;
ie_consiste_setor_w			varchar(10);
cd_cid_principal_w			varchar(10);
cd_cid_principal_origem_w	varchar(10);
cd_categoria_cid_w			varchar(10);
cd_categoria_cid_origem_w	varchar(10);
ie_mesmo_tipo_atend_w		varchar(1);
qt_existe_w					bigint;
cd_espec_atend_w			integer;
cd_espec_atend_retorno_w	integer;
qt_hora_w					integer;
ie_considera_atend_retorno_w	varchar(1);
ie_tipo_atend_tiss_w		varchar(2);
ie_clinica_w				integer;
cd_categoria_w				varchar(10);
nr_seq_origem_w				bigint;
cd_plano_convenio_w			varchar(10);
nr_pos_inicial_w			smallint;
nr_pos_final_w				smallint;
cd_usuario_padrao_w			varchar(30);
nr_seq_regra_w				bigint;
ie_atendimento_cancelado_w	varchar(1);
ie_consiste_classif_w		varchar(1);
cd_usuario_convenio_w		varchar(30);
ie_tipo_convenio_w		    smallint;
ds_mensagem_w				varchar(4000);

ds_retorno_proc_w			varchar(255);
ie_consiste_categ_w			varchar(10);
ie_consiste_plano_w			varchar(10);

ie_mesmo_estab_w		 	regra_atend_retorno.ie_mesmo_estab%TYPE;
ie_data_alta_w		 		regra_atend_retorno.ie_data_alta%TYPE;
ie_consiste_mot_alt_atend_w regra_atend_retorno.ie_consiste_mot_alt_atend%TYPE;
cd_motivo_alta_w            regra_atend_retorno.cd_motivo_alta%TYPE;
IE_ESPEC_MEDICO_RETORNO_w	REGRA_ATEND_RETORNO.IE_ESPEC_MEDICO_RETORNO%type;

nr_atend_retorno_w			bigint;

C01 CURSOR FOR
	SELECT	ie_regra,
		qt_dia,
		coalesce(qt_horas,0),
		coalesce(qt_retorno,0),
		coalesce(ie_dentro_mes,'N'),
		coalesce(ie_dentro_dia,'N'),
		coalesce(ie_consiste_setor,'S'),
		ie_mesmo_tipo_atend,
		coalesce(ie_considera_atend_retorno,'N'),
		coalesce(ie_atendimento_cancelado,'S'),
		nr_pos_inicial,
		nr_pos_final,
		cd_usuario_padrao,
		nr_sequencia,
		ie_consiste_classificacao,
		nr_seq_classificacao,
		ds_mensagem,
		coalesce(ie_consiste_categoria,'S'),
		coalesce(ie_consiste_plano,'S'),
		coalesce(ie_mesmo_estab,'S'),
		coalesce(ie_data_alta,'N'),
		cd_motivo_alta,
		coalesce(ie_consiste_mot_alt_atend,'N'),
		coalesce(IE_ESPEC_MEDICO_RETORNO, 'N')
	from	regra_atend_retorno
	where (coalesce(cd_estabelecimento, cd_estabelecimento_w)		= cd_estabelecimento_w or (coalesce(cd_estabelecimento_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w or (coalesce(ie_tipo_atendimento_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(cd_convenio, cd_convenio_w) 			= cd_convenio_w or (coalesce(cd_convenio_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w or (coalesce(cd_setor_atendimento_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and	((coalesce(nr_seq_classificacao, nr_seq_classificacao_w)	= nr_seq_classificacao_w or (coalesce(nr_seq_classificacao_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N')) or (ie_consiste_classificacao = 'N')) -- amramos - Nao consistir a classificacao do atend. anterior - OS 304565
	and (coalesce(ie_tipo_atend_tiss, ie_tipo_atend_tiss_w)		= ie_tipo_atend_tiss_w or (coalesce(ie_tipo_atend_tiss_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(cd_especialidade_medica,cd_espec_atend_w)		= cd_espec_atend_w or (coalesce(cd_espec_atend_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(ie_clinica,ie_clinica_w)				= ie_clinica_w	   or (coalesce(ie_clinica_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(cd_categoria,cd_categoria_w)			= cd_categoria_w or (coalesce(cd_categoria_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(nr_seq_origem,nr_seq_origem_w)			= nr_seq_origem_w or (coalesce(nr_seq_origem_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(cd_plano_convenio,cd_plano_convenio_w)             = cd_plano_convenio_w or (coalesce(cd_plano_convenio_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and (coalesce(ie_tipo_convenio,ie_tipo_convenio_w)               = ie_tipo_convenio_w or (coalesce(ie_tipo_convenio_w::text, '') = '' and coalesce(ie_validar_campo_vazio, 'N') = 'N'))
	and	(((coalesce(cd_usuario_padrao::text, '') = '') and (obter_se_uso_conv_reg_retorno(cd_convenio_w, cd_usuario_convenio_w) = 'N')) or
		 (substr(cd_usuario_convenio_w, nr_pos_inicial, (nr_pos_final - nr_pos_inicial) + 1) = cd_usuario_padrao))
	and coalesce(ie_regra_agenda,'A') not in ('G','O')
	and clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp())
	and coalesce(ie_situacao,'A') = 'A'
	order by coalesce(cd_convenio,0), coalesce(cd_estabelecimento,0), coalesce(ie_tipo_atendimento,0), coalesce(cd_setor_atendimento,0),
	         coalesce(nr_seq_classificacao,0), coalesce(ie_tipo_atend_tiss,'0'), coalesce(cd_especialidade_medica,0), coalesce(ie_clinica,0), coalesce(cd_categoria,'0'),
		     coalesce(nr_seq_origem,0), coalesce(cd_plano_convenio,'0'), coalesce(ie_tipo_convenio,0), coalesce(qt_dia,0);


C02 CURSOR FOR
	SELECT	nr_atendimento,
		cd_medico_resp,
		nr_seq_queixa,
		cd_cid_principal
	from 	Atendimento_paciente_v3 a
	where	((ie_mesmo_estab_w = 'N' AND coalesce(a.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
	and (coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w or coalesce(ie_tipo_atendimento_w::text, '') = '')
	and (coalesce(a.cd_convenio, cd_convenio_w) 			= cd_convenio_w or coalesce(cd_convenio_w::text, '') = '')
	and (coalesce(a.ie_clinica, ie_clinica_w) 			= ie_clinica_w or coalesce(ie_clinica_w::text, '') = '')
	and	((coalesce(a.cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w or coalesce(cd_setor_atendimento_w::text, '') = ''
	and 	ie_consiste_setor_w = 'S') or (ie_consiste_setor_w = 'N'))
	and	((coalesce(a.nr_seq_classificacao, nr_seq_classificacao_w)	= nr_seq_classificacao_w or coalesce(nr_seq_classificacao_w::text, '') = '') or (ie_consiste_classif_w = 'N')) -- amramos - Nao consistir a classificacao do atend. anterior - OS 304565)
	and (coalesce(a.ie_tipo_atend_tiss, ie_tipo_atend_tiss_w)	= ie_tipo_atend_tiss_w or coalesce(ie_tipo_atend_tiss_w::text, '') = '')
	and	(((coalesce(Obter_Espec_medico_atend(a.nr_atendimento,a.cd_medico_resp,'C'),cd_espec_atend_w)		= cd_espec_atend_w)
	or (ie_regra_w = 'Q'))
	or 	coalesce(cd_espec_atend_w::text, '') = '')
	and 	a.cd_pessoa_fisica					= cd_pessoa_fisica_w
	and 	a.nr_atendimento					= nr_atend_lista_p
	and     a.nr_atendimento					<> nr_atendimento_p
	and	((coalesce(a.cd_categoria, cd_categoria_w)	= cd_categoria_w or coalesce(cd_categoria_w::text, '') = ''
	and 	ie_consiste_categ_w = 'S') or (ie_consiste_categ_w = 'N'))
	and (coalesce(a.nr_seq_origem,nr_seq_origem_w)			= nr_seq_origem_w or coalesce(nr_seq_origem_w::text, '') = '')
	and	((coalesce(a.cd_plano_convenio, cd_plano_convenio_w)	= cd_plano_convenio_w or coalesce(cd_plano_convenio_w::text, '') = ''
	and 	ie_consiste_plano_w = 'S') or (ie_consiste_plano_w = 'N'))
	and 	((qt_dia_w > 0  and a.dt_entrada between clock_timestamp() - qt_dia_w and clock_timestamp()) or
		(qt_dia_w  = 0 and qt_hora_w > 0  and a.dt_entrada between clock_timestamp() - (qt_hora_w/24) and clock_timestamp()))
	and	((ie_data_alta_w = 'S' AND ((qt_dia_w > 0  AND coalesce(a.dt_alta,a.DT_ENTRADA) BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
		 (qt_dia_w  = 0 AND qt_hora_w > 0  AND coalesce(a.dt_alta,a.DT_ENTRADA) BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))) OR
		 (ie_data_alta_w = 'N' AND ((qt_dia_w > 0  AND a.dt_entrada BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
		 (qt_dia_w  = 0 AND qt_hora_w > 0  AND a.dt_entrada BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))))
	and	((coalesce(a.nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S')) -- Dalcastagne em 06/08/2007 OS 64644
	and	(((coalesce(cd_usuario_padrao_w::text, '') = '') and (obter_se_uso_conv_reg_retorno(a.cd_Convenio, a.cd_usuario_convenio) = 'N')) or
		 (substr(a.cd_usuario_convenio, nr_pos_inicial_w, (nr_pos_final_w - nr_pos_inicial_w) + 1) = cd_usuario_padrao_w))
	and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(a.dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S'))     --  whwestphal  em  19/04/2011 OS 311972
	and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'))
	order by a.nr_atendimento;





BEGIN

begin
select	cd_estabelecimento,
	cd_pessoa_fisica,
	ie_tipo_Atendimento,
	cd_convenio,
	cd_setor_atendimento,
	cd_medico_resp,
	coalesce(nr_seq_classificacao,''),
	nr_seq_queixa,
	cd_cid_principal,
	Obter_Categoria_Cid(cd_cid_principal),
	ie_tipo_atend_tiss,
	ie_clinica,
	cd_categoria,
	nr_seq_origem,
	cd_plano_convenio,
	cd_usuario_convenio,
	ie_tipo_convenio
into STRICT	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	ie_tipo_atendimento_w,
	cd_convenio_w,
	cd_setor_atendimento_w,
	cd_medico_resp_w,
	nr_seq_classificacao_w,
	nr_seq_queixa_origem_w,
	cd_cid_principal_origem_w,
	cd_categoria_cid_origem_w,
	ie_tipo_atend_tiss_w,
	ie_clinica_w,
	cd_categoria_w,
	nr_seq_origem_w,
	cd_plano_convenio_w,
	cd_usuario_convenio_w,
	ie_tipo_convenio_w
from	Atendimento_paciente_v3
where	nr_atendimento = nr_atendimento_p;
exception
when others then
	cd_estabelecimento_w		:= null;
	cd_pessoa_fisica_w		:= null;
	ie_tipo_atendimento_w		:= null;
	cd_convenio_w			:= null;
	cd_setor_atendimento_w		:= null;
	cd_medico_resp_w		:= null;
	nr_seq_classificacao_w		:= null;
	cd_cid_principal_origem_w	:= null;
	cd_categoria_cid_origem_w	:= null;
	ie_tipo_atend_tiss_w		:= null;
	ie_clinica_w			:= null;
	cd_categoria_w			:= null;
	nr_seq_origem_w			:= null;
	cd_plano_convenio_w		:= null;
	ie_tipo_convenio_w              := null;
end;


cd_espec_atend_w		:= Obter_Espec_medico_atend(nr_atendimento_p,cd_medico_resp_w,'C');
open C01;
loop
	fetch C01 into	ie_regra_w,
			qt_dia_w,
			qt_hora_w,
			qt_retorno_w,
			ie_dentro_mes_w,
			ie_dentro_dia_w,
			ie_consiste_setor_w,
			ie_mesmo_tipo_atend_w,
			ie_considera_atend_retorno_w,
			ie_atendimento_cancelado_w,
			nr_pos_inicial_w,
			nr_pos_final_w,
			cd_usuario_padrao_w,
			nr_seq_regra_w,
			ie_consiste_classif_w,
			nr_seq_classificacao_regra_w,
			ds_mensagem_w,
			ie_consiste_categ_w,
			ie_consiste_plano_w,
			ie_mesmo_estab_w,
			ie_data_alta_w,
			cd_motivo_alta_w,
			ie_consiste_mot_alt_atend_w,
			IE_ESPEC_MEDICO_RETORNO_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

end loop;
close C01;

if (qt_dia_w > 0)  or (qt_hora_w > 0) then

	begin

	if (qt_retorno_w > 0) then

		if (IE_ESPEC_MEDICO_RETORNO_w = 'N') then
			select	1 /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/			into STRICT	qt_reg_w
			from	Atendimento_paciente_v3
			where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
			and	((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
			and	cd_convenio		= cd_convenio_w
			and 	ie_clinica		= ie_clinica_w
			and	cd_medico_resp		= cd_medico_resp_w
			and	((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_atendimento		<> nr_atendimento_p
			and	((nr_atend_original IS NOT NULL AND nr_atend_original::text <> '') or (ie_considera_atend_retorno_w = 'S'))
			and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S'))
			and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'))  LIMIT 1;

			select	count(*) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/			into STRICT	qt_reg_w
			from	Atendimento_paciente_v3
			where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
			and	((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
			and	cd_convenio		= cd_convenio_w
			and 	ie_clinica		= ie_clinica_w
			and	cd_medico_resp		= cd_medico_resp_w
			and	((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_atendimento		<> nr_atendimento_p
			and	((nr_atend_original IS NOT NULL AND nr_atend_original::text <> '') or (ie_considera_atend_retorno_w = 'S'))
			and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S'))	--  whwestphal  em  19/04/2011 OS 311972
			and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));

		else
			select	1 /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/			into STRICT	qt_reg_w
			from	Atendimento_paciente_v3 a
			where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
			and	((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
			and	cd_convenio		= cd_convenio_w
			and 	ie_clinica		= ie_clinica_w
			and	((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.nr_atendimento		<> nr_atendimento_p
			and	((nr_atend_original IS NOT NULL AND nr_atend_original::text <> '') or (ie_considera_atend_retorno_w = 'S'))
			and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S'))
			and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'))
			and	exists (SELECT 1 from atendimento_troca_medico b where b.nr_atendimento = a.nr_atendimento and b.cd_medico_atual = a.cd_medico_resp and b.cd_especialidade = cd_espec_atend_w  LIMIT 1)  LIMIT 1;

			select	count(*) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/			into STRICT	qt_reg_w
			from	Atendimento_paciente_v3 a
			where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
			and	((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
			and	cd_convenio		= cd_convenio_w
			and 	ie_clinica		= ie_clinica_w
			and	((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_atendimento		<> nr_atendimento_p
			and	((nr_atend_original IS NOT NULL AND nr_atend_original::text <> '') or (ie_considera_atend_retorno_w = 'S'))
			and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S'))	--  whwestphal  em  19/04/2011 OS 311972
			and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'))
			and	exists (SELECT 1 from atendimento_troca_medico b where b.nr_atendimento = a.nr_atendimento and b.cd_medico_atual = a.cd_medico_resp and b.cd_especialidade = cd_espec_atend_w  LIMIT 1);

		end if;
	else
		qt_reg_w := 0;
	end if;

	exception
	when others then
		qt_reg_w := 0;
	end;

	if (qt_retorno_w > 0)	and (qt_reg_w >= qt_retorno_w)	then
		nr_atend_retorno_w	:= 0;
	elsif (ie_regra_w = 'M') then

		select	coalesce(max(nr_atendimento),0) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/		into STRICT 	nr_atend_retorno_w
		from	Atendimento_paciente_v3
		where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
		and 	((ie_tipo_atendimento = ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
		and 	cd_convenio		  = cd_convenio_w
		and 	ie_clinica		  = ie_clinica_w
		and	 cd_medico_resp	  = cd_medico_resp_w
		and	((coalesce(nr_seq_classificacao, nr_seq_classificacao_regra_w)	= nr_seq_classificacao_regra_w or coalesce(nr_seq_classificacao_regra_w::text, '') = '') or (ie_consiste_classif_w = 'N')) -- amramos - Nao consistir a classificacao do atend. anterior - OS 304565)
		and	((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
		and 	cd_pessoa_fisica	  = cd_pessoa_fisica_w
		and 	((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S')) -- Dalcastagne em 06/08/2007 OS 64644
		and 	nr_atendimento 	  <> nr_atendimento_p
		and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S')) --  whwestphal  em  19/04/2011 OS 311972
		and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));

	elsif (ie_regra_w = 'F') then
	--criado para a OS 261747
		select	coalesce(max(nr_atendimento),0) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/		into STRICT 	nr_atend_retorno_w
		from	Atendimento_paciente_v3
		where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
		  and	((coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
		--  and	((cd_convenio		  = cd_convenio_w) or (cd_convenio is null))

		-- and	((ie_clinica		  = ie_clinica_w) or (ie_clinica is null))

		--  and	((cd_medico_resp	  = cd_medico_resp_w) or (cd_medico_resp is null))
		  and 	((ie_data_alta_w = 'S' AND ((qt_dia_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
			(qt_dia_w  = 0 AND qt_hora_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))) OR
			(ie_data_alta_w = 'N' AND ((qt_dia_w > 0  AND dt_entrada BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
			(qt_dia_w  = 0 AND qt_hora_w > 0  AND dt_entrada BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))))
		  and	cd_pessoa_fisica	  = cd_pessoa_fisica_w
		  and	((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S'))
		  and 	nr_atendimento 	  <> nr_atendimento_p
		  and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S')) --  whwestphal  em  19/04/2011 OS 311972
		  and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));
	elsif (ie_regra_w = 'H') then

		select	coalesce(max(nr_atendimento),0) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/		into STRICT 	nr_atend_retorno_w
		from	Atendimento_paciente_v3
		where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
		and	((coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
		and	((cd_convenio		  = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
		-- and	((ie_clinica		  = ie_clinica_w) or (ie_clinica is null))

		--  and	((cd_medico_resp	  = cd_medico_resp_w) or (cd_medico_resp is null))
		and 	((ie_data_alta_w = 'S' AND ((qt_dia_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
			(qt_dia_w  = 0 AND qt_hora_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))) OR
			(ie_data_alta_w = 'N' AND ((qt_dia_w > 0  AND dt_entrada BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
			(qt_dia_w  = 0 AND qt_hora_w > 0  AND dt_entrada BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))))
		and	cd_pessoa_fisica	  = cd_pessoa_fisica_w
		and	((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S'))
		and 	nr_atendimento 	  <> nr_atendimento_p
		and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S')) --  whwestphal  em  19/04/2011 OS 311972
		and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));

	elsif (ie_regra_w = 'E') then
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			select count(*)
			into STRICT	ie_ok_w
			from	medico_especialidade a
			where	a.cd_pessoa_fisica = cd_medico_w
			  and	exists (SELECT 1 from medico_especialidade x
				where x.cd_pessoa_fisica = cd_medico_resp_w
				  and x.cd_especialidade = a.cd_especialidade);

			if (ie_ok_w > 0) then
				nr_atend_retorno_w := nr_atendimento_w;
			else
				select count(*)
				into STRICT	ie_ok_w
				from	medico_especialidade a
				where	a.cd_pessoa_fisica = cd_medico_w;

				select count(*)
				into STRICT	ie_ok_atual_w
				from	medico_especialidade a
				where	a.cd_pessoa_fisica = cd_medico_resp_w;

				if	((ie_ok_w + ie_ok_atual_w) = 0) then
					nr_atend_retorno_w := nr_atendimento_w;
				end if;
			end if;

		end loop;
		close C02;
	elsif (ie_regra_w = 'Y') then
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			--cd_espec_atend_w		:= Obter_Espec_medico_atend(nr_atendimento_p,cd_medico_resp_w,'C');
			cd_espec_atend_retorno_w	:= Obter_Espec_medico_atend(nr_atendimento_w,cd_medico_w,'C');

/*			select 	count(*)
			into	ie_ok_w
			from	medico_especialidade a
			where	a.cd_pessoa_fisica = cd_medico_w
			  and	exists
				(select 1 from medico_especialidade x
				where x.cd_pessoa_fisica = cd_medico_resp_w
				  and x.cd_especialidade = a.cd_especialidade); */
			if	/* (ie_ok_w > 0) and */
 (cd_espec_atend_w = cd_espec_atend_retorno_w) then
				nr_atend_retorno_w := nr_atendimento_w;
			end if;

		end loop;
		close C02;
	elsif (ie_regra_w = 'U') then
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			if (nr_seq_queixa_w IS NOT NULL AND nr_seq_queixa_w::text <> '') and (nr_seq_queixa_origem_w IS NOT NULL AND nr_seq_queixa_origem_w::text <> '') and (nr_seq_queixa_origem_w = nr_seq_queixa_w) then
				nr_atend_retorno_w := nr_atendimento_w;
			end if;
		end loop;
		close C02;
	elsif (ie_regra_w = 'C') then
		begin
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			if (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') and (cd_cid_principal_origem_w IS NOT NULL AND cd_cid_principal_origem_w::text <> '') and
				((cd_cid_principal_origem_w = cd_cid_principal_w) or (obter_se_cid_equivalente(cd_cid_principal_w,cd_cid_principal_origem_w) = 'S')) then
				nr_atend_retorno_w := nr_atendimento_w;
			end if;
		end loop;
		close C02;
		end;
	elsif (ie_regra_w = 'T') then
		begin
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			select	Obter_Categoria_Cid(cd_cid_principal_w)
			into STRICT	cd_categoria_cid_w
			;
			if (cd_categoria_cid_w IS NOT NULL AND cd_categoria_cid_w::text <> '') and (cd_categoria_cid_origem_w IS NOT NULL AND cd_categoria_cid_origem_w::text <> '') and (cd_categoria_cid_origem_w = cd_categoria_cid_w) then
				nr_atend_retorno_w := nr_atendimento_w;
			end if;
		end loop;
		close C02;
		end;
	elsif (ie_regra_w = 'K') then
		begin

		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			if (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') and (cd_cid_principal_origem_w IS NOT NULL AND cd_cid_principal_origem_w::text <> '') and
				((cd_cid_principal_origem_w = cd_cid_principal_w) or (obter_se_cid_equivalente(cd_cid_principal_w,cd_cid_principal_origem_w) = 'S')) then
				begin
				select	count(*) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/				into STRICT	qt_existe_w
				from	Atendimento_paciente_v3
				where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
				  and ((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
				  and cd_convenio		= cd_convenio_w
				  and ie_clinica		= ie_clinica_w
				  and cd_medico_resp		= cd_medico_resp_w
				  and ((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
				  and cd_pessoa_fisica		= cd_pessoa_fisica_w
				  and ((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S'))
				  and nr_atendimento		<> nr_atendimento_p
				--  and cd_categoria		= cd_categoria_w
				  and nr_atendimento		= nr_atendimento_w
				    and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S')) --  whwestphal  em  19/04/2011 OS 311972
				  and ((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));

				if (qt_existe_w > 0) then
					nr_atend_retorno_w := nr_atendimento_w;
				end if;
				end;
			end if;
		end loop;
		close C02;
		end;
	elsif (ie_regra_w = 'R') then
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			select 	count(*)
			into STRICT 	ie_ok_w
			from	cirurgia
			where	nr_atendimento = nr_atendimento_w;

			if (ie_ok_w > 0) then
				nr_atend_retorno_w := nr_atendimento_w;
			end if;
		end loop;
		close C02;
	elsif (ie_regra_w = 'G') then
	/*OS 298226  tvvieira - Nao considerar clinica nem convenio para mesmo medico*/

		select	coalesce(max(nr_atendimento),0) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/		into STRICT 	nr_atend_retorno_w
		from	Atendimento_paciente_v3
		where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
		  and ((ie_tipo_atendimento = ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
		  --and cd_convenio		  = cd_convenio_w

		  --and ie_clinica		  = ie_clinica_w
		  and cd_medico_resp	  = cd_medico_resp_w
		  and ((ie_data_alta_w = 'S' AND coalesce(dt_alta,DT_ENTRADA) >= clock_timestamp() - qt_dia_w) OR (ie_data_alta_w = 'N' AND DT_ENTRADA >= clock_timestamp() - qt_dia_w))
		  and cd_pessoa_fisica	  = cd_pessoa_fisica_w
		  and ((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S')) -- Dalcastagne em 06/08/2007 OS 64644
		  and nr_atendimento 	  <> nr_atendimento_p
		  and (((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S')) --  whwestphal  em  19/04/2011 OS 311972
		  and ((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));
	elsif (ie_regra_w = 'D') then

			open C02;
			loop
			fetch C02 into
					nr_atendimento_w,
					cd_medico_w,
					nr_seq_queixa_w,
					cd_cid_principal_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */

				if (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') and (cd_cid_principal_origem_w IS NOT NULL AND cd_cid_principal_origem_w::text <> '') and
					((cd_cid_principal_origem_w = cd_cid_principal_w) or (obter_se_cid_equivalente(cd_cid_principal_w,cd_cid_principal_origem_w) = 'S')) then
					begin

					select	count(*) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/					into STRICT	qt_existe_w
					from	Atendimento_paciente_v3
					where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
					  and cd_pessoa_fisica		= cd_pessoa_fisica_w
					  and ie_clinica			= ie_clinica_w
					  and ((ie_tipo_atendimento	= ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
					  and cd_convenio			= cd_convenio_w
					  and cd_medico_resp		= cd_medico_resp_w
					  and ((ie_data_alta_w = 'S' AND ((qt_dia_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
					      (qt_dia_w  = 0 AND qt_hora_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))) OR
					      (ie_data_alta_w = 'N' AND ((qt_dia_w > 0  AND dt_entrada BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
					      (qt_dia_w  = 0 AND qt_hora_w > 0  AND dt_entrada BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))))
					  and ((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S'))
					  and nr_atendimento		<> nr_atendimento_p
					  and nr_atendimento		= nr_atendimento_w
						and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S'))
					  and ((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));

					if (qt_existe_w > 0) then
						nr_atend_retorno_w := nr_atendimento_w;
					end if;

					end;
				end if;
			end loop;
			close C02;

	elsif (ie_regra_w = 'N') then

		select	coalesce(max(nr_atendimento),0) /*+ index(b atepacu_i1) index(a atepaci_pk) index (c.atecaco_pk)*/		into STRICT 	nr_atend_retorno_w
		from	Atendimento_paciente_v3
		where	((ie_mesmo_estab_w = 'N' AND coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w) OR (ie_mesmo_estab_w = 'S'))
		and 	cd_pessoa_fisica	  = cd_pessoa_fisica_w
		and 	cd_convenio		  = cd_convenio_w
		and 	ie_clinica		  = ie_clinica_w
		and 	((ie_tipo_atendimento = ie_tipo_atendimento_w) or (ie_mesmo_tipo_atend_w = 'N'))
		and	((coalesce(nr_seq_classificacao, nr_seq_classificacao_regra_w)	= nr_seq_classificacao_regra_w or coalesce(nr_seq_classificacao_regra_w::text, '') = '') or (ie_consiste_classif_w = 'N')) -- amramos - Nao consistir a classificacao do atend. anterior - OS 304565)
		and 	((ie_data_alta_w = 'S' AND ((qt_dia_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
			(qt_dia_w  = 0 AND qt_hora_w > 0  AND coalesce(dt_alta,DT_ENTRADA) BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))) OR
			(ie_data_alta_w = 'N' AND ((qt_dia_w > 0  AND dt_entrada BETWEEN clock_timestamp() - qt_dia_w AND clock_timestamp()) OR
			(qt_dia_w  = 0 AND qt_hora_w > 0  AND dt_entrada BETWEEN clock_timestamp() - (qt_hora_w/24) AND clock_timestamp()))))
		and 	((coalesce(nr_atend_original::text, '') = '') or (ie_considera_atend_retorno_w = 'S')) -- Dalcastagne em 06/08/2007 OS 64644
		and 	nr_atendimento 	  <> nr_atendimento_p
		and	(((ie_atendimento_cancelado_w = 'N') and (coalesce(dt_cancelamento::text, '') = ''))  or (ie_atendimento_cancelado_w = 'S')) --  whwestphal  em  19/04/2011 OS 311972
		and	((((cd_motivo_alta = cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = '')) and (ie_consiste_mot_alt_atend_w = 'S')) or (ie_consiste_mot_alt_atend_w = 'N'));

	else
		open C02;
		loop
		fetch C02 into	nr_atendimento_w,
				cd_medico_w,
				nr_seq_queixa_w,
				cd_cid_principal_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */


			nr_atend_retorno_w := nr_atendimento_w;
		end loop;
		close C02;

	end if;

	if (nr_atend_retorno_w > 0) then

		ds_retorno_proc_w := consiste_regra_retorno_proc(nr_seq_regra_w, nr_atend_retorno_w, ds_retorno_proc_w);

		if (ds_retorno_proc_w = 'N') then		--A regra de retorno possuia regra por procedimento, porem nao encontrou o procedimento no atendimento anterior.
			nr_atend_retorno_w	:= 0;
		end if;

	end if;

	if (nr_atend_retorno_w	> 0) and (ie_dentro_mes_w	= 'S') then
		select	to_date('01/'||to_char(dt_entrada,'mm/yyyy')),
			to_date('01/'||to_char(clock_timestamp(),'mm/yyyy'))
		into STRICT	dt_entrada_w,
			dt_atual_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atend_retorno_w;


		if (dt_atual_w > dt_entrada_w) then
			nr_atend_retorno_w	:= 0;
		end if;
	end if;


	if (nr_atend_retorno_w	> 0) and (ie_dentro_dia_w	= 'S') then
		select	to_date(dt_entrada,'dd/mm/yyyy'),
			to_date(clock_timestamp(),'dd/mm/yyyy')
		into STRICT	dt_entrada_w,
			dt_atual_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atend_retorno_w;


		if (dt_atual_w > dt_entrada_w) then
			nr_atend_retorno_w	:= 0;
		end if;
	end if;
end if;

return	nr_atend_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_atendimento_retorno ( nr_atendimento_p bigint, nr_atend_lista_p bigint) FROM PUBLIC;

