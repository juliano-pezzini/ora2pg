-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION man_obter_regra_local_os_equip ( nr_seq_equipamento_p bigint, nm_usuario_p text, cd_pessoa_solicitante_p text, ie_opcao_p text, ie_evt_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_ativo_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Definir a a localização para a ordem de serviço

Regra dos cadastros gerais
	Manutenção Hospitalar
		- Cadastros
			- Regra de localização de equipamentos na OS
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
	IE_OPCAO_P
		C -  código da regra
		L -  código da localização
		D - descrição da localização
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w			varchar(255);
ie_situacao_w			varchar(01);
qt_existe_w			bigint;
cd_setor_usuario_w			usuario.cd_setor_atendimento%type	:= cd_setor_atendimento_p;
cd_estabelecimento_usuario_w	usuario.cd_estabelecimento%type		:= cd_estabelecimento_p;
cd_perfil_w			perfil.cd_perfil%type			:= cd_perfil_ativo_p;
ie_regra_w			regra_local_os_equip.ie_regra%type;
nr_seq_grupo_trabalho_w		man_equipamento.nr_seq_trab%type;
nr_seq_grupo_planejamento_w	man_equipamento.nr_seq_planej%type;
nr_seq_tipo_equip_w		man_equipamento.nr_seq_tipo_equip%type;
nr_seq_local_w			man_equipamento.nr_seq_local%type;
nr_seq_localizacao_w		man_localizacao.nr_sequencia%type;
ds_localizacao_w			man_localizacao.ds_localizacao%type;
ie_param_139_w			varchar(15);
ie_param_185_w			varchar(15);
ie_opcao_w			varchar(01);

C01 CURSOR FOR
	SELECT	e.ie_regra
	from	regra_local_os_equip e
	where	coalesce(e.nr_seq_tipo_equip,coalesce(nr_seq_tipo_equip_w,0))			= coalesce(nr_seq_tipo_equip_w,0)
	and	coalesce(e.nr_seq_equipamento ,coalesce(nr_seq_equipamento_p,0))			= coalesce(nr_seq_equipamento_p,0)
	and	coalesce(e.nr_seq_grupo_planejamento,coalesce(nr_seq_grupo_planejamento_w,0))	= coalesce(nr_seq_grupo_planejamento_w,0)
	and	coalesce(e.nr_seq_grupo_trabalho,coalesce(nr_seq_grupo_trabalho_w,0))		= coalesce(nr_seq_grupo_trabalho_w,0)
	and	coalesce(cd_setor_atendimento,coalesce(cd_setor_usuario_w,0))			= coalesce(cd_setor_usuario_w,0)
	and	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_usuario_w,0))		= coalesce(cd_estabelecimento_usuario_w,0)
	and	coalesce(cd_perfil,coalesce(cd_perfil_w,0))					= coalesce(cd_perfil_w,0)
	and	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia,clock_timestamp())) and trunc(coalesce(dt_fim_vigencia,clock_timestamp()))
	order by
		coalesce(e.cd_setor_atendimento,0),
		coalesce(e.cd_perfil,0),
		coalesce(e.cd_estabelecimento,0),
		coalesce(e.nr_seq_equipamento,0),
		coalesce(e.nr_seq_grupo_trabalho,0),
		coalesce(e.nr_seq_grupo_planejamento,0),
		coalesce(e.nr_Seq_tipo_equip,0);


c02 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(nr_seq_apres,0)
	from	man_localizacao
	where	cd_setor	= cd_setor_usuario_w
	and	ie_situacao	= 'A'
	and	ie_opcao_w	= 'U'
	
union all

	SELECT	nr_sequencia,
		coalesce(nr_seq_apres,0)
	from	man_localizacao
	where	cd_setor	= obter_setor_usuario_pf(cd_pessoa_solicitante_p)
	and	ie_situacao	= 'A'
	and	ie_opcao_w	= 'P'
	order by
		2 desc,
		nr_sequencia;

c02_w c02%rowtype;


BEGIN
select	count(1)
into STRICT	qt_existe_w
from	regra_local_os_equip LIMIT 1;

if (nr_seq_equipamento_p <> 0) then
	select	coalesce(a.ie_situacao,'A')
	into STRICT	ie_situacao_w
	from	man_localizacao a,
		man_equipamento	b
	where	a.nr_sequencia	= b.nr_seq_local
	and	b.nr_sequencia	= nr_seq_equipamento_p;
end if;

if (nr_seq_equipamento_p > 0) then
	select	coalesce(nr_seq_trab,0),
		coalesce(nr_seq_planej,0),
		nr_seq_tipo_equip,
		nr_seq_local
	into STRICT	nr_seq_grupo_trabalho_w,
		nr_seq_grupo_planejamento_w,
		nr_seq_tipo_equip_w,
		nr_seq_local_w
	from 	man_equipamento
	where 	nr_sequencia 	= nr_seq_equipamento_p;
end if;

if (qt_existe_w > 0) then
	begin
	select	count(1)
	into STRICT	qt_existe_w
	from	man_localizacao
	where	cd_setor 	= cd_setor_usuario_w
	and	ie_situacao 	= 'A'  LIMIT 1;

	open C01;
	loop
	fetch C01 into
		ie_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (coalesce(ie_regra_w,'0') <> '0') then
			begin
			if (ie_opcao_p = 'C') then
				ds_retorno_w	:= ie_regra_w;
			elsif (ie_opcao_p in ('L','D')) then
				--begin
				if (ie_evt_p = 'N') then /* Parâmetro criado para pegar as regras referentes apenas ao parametro 139 */
					if (ie_regra_w = 'S') and (qt_existe_w > 0) then
						ie_opcao_w	:= 'U';

						open C02;
						loop
						fetch C02 into
							c02_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin
							nr_seq_localizacao_w	:= c02_w.nr_sequencia;
							end;
						end loop;
						close C02;
					elsif (ie_regra_w = 'U') then
						select	max(a.nr_sequencia)
						into STRICT	nr_seq_localizacao_w
						from	man_localizacao			a,
							man_localizacao_usu_exec	b
						where	b.nr_seq_localizacao 		= a.nr_sequencia
						and	b.nm_usuario_exec 		= nm_usuario_p
						and	b.ie_situacao 			= 'A'
						and	b.ie_localizacao_padrao_usu	= 'S'
						and	a.ie_situacao			= 'A';
					end if;
				elsif (ie_evt_p = 'D') then /* Parâmetro criado para pegar as regras referentes apenas ao parametro 139  no  exit do solicitante*/
					if (ie_regra_w = 'P') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_localizacao_w
						from	man_localizacao
						where	cd_setor	= obter_setor_usuario_pf(cd_pessoa_solicitante_p)
						and	ie_situacao	= 'A';
					end if;
				elsif (ie_evt_p = 'C') then /* Parâmetro criado  para definir o evento change referente ao parametro 185 da funçao. */
					if (ie_regra_w = 'A') and (ie_situacao_w = 'A') then
						begin
						select	x.nr_seq_local
						into STRICT	nr_seq_localizacao_w
						from (SELECT	a.nr_seq_local,
								b.cd_estabelecimento
							from	man_localizacao		b,
								man_equip_local_adic	a
							where	b.nr_sequencia 		= a.nr_seq_local
							and	a.nr_seq_equipamento 	= nr_seq_equipamento_p
							and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_usuario_w,0)) = coalesce(cd_estabelecimento_usuario_w,0)
							and	b.ie_situacao 		= 'A'
							order by 2,1 desc) x LIMIT 1;
						exception
						when others then
							nr_seq_localizacao_w	:= nr_seq_local_w;
						end;
					elsif (ie_regra_w = 'O') then
						begin
						select	x.nr_seq_local
						into STRICT	nr_seq_localizacao_w
						from (SELECT	a.nr_seq_local,
								b.cd_estabelecimento
							from  	man_localizacao		b,
								man_equip_local_adic	a
							where	b.nr_sequencia		= a.nr_seq_local
							and	a.nr_seq_equipamento 	= nr_seq_equipamento_p
							and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_usuario_w,0)) = coalesce(cd_estabelecimento_usuario_w,0)
							and	b.cd_setor 		= coalesce(cd_setor_usuario_w,0)
							and	b.ie_situacao		= 'A'
							order by 2,1 desc) x LIMIT 1;
						exception
						when others then
							nr_seq_localizacao_w	:= nr_seq_local_w;
						end;
					elsif (ie_regra_w = 'E') and (ie_situacao_w = 'A') then
						nr_seq_localizacao_w	:= nr_seq_local_w;
					elsif (ie_regra_w = 'L') then
						ie_opcao_w	:= 'U';

						open C02;
						loop
						fetch C02 into
							c02_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin
							nr_seq_localizacao_w	:= c02_w.nr_sequencia;
							end;
						end loop;
						close C02;

						if (coalesce(nr_seq_localizacao_w,0) = 0) then
							nr_seq_localizacao_w	:= nr_seq_local_w;
						end if;
					end if;
				end if;

				if (coalesce(nr_seq_localizacao_w,0) <> 0) then
					select	ds_localizacao
					into STRICT	ds_localizacao_w
					from	man_localizacao
					where	nr_sequencia	= nr_seq_localizacao_w;
				end if;

				ds_retorno_w	:= nr_seq_localizacao_w;

				if (ie_opcao_p = 'D') then
					ds_retorno_w	:= ds_localizacao_w;
				end if;
				--end;
			end if;
			end;
		end if;
		end;

	end loop;
	close C01;
	end;
else
	begin
	ie_param_139_w := obter_param_usuario(	299, 139, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_usuario_w, ie_param_139_w);

	ie_param_185_w := obter_param_usuario(	299, 185, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_usuario_w, ie_param_185_w);

	if (ie_param_139_w = 'S') and (ie_evt_p = 'N') then
		select	count(1)
		into STRICT	qt_existe_w
		from	man_localizacao
		where	cd_setor 	= cd_setor_usuario_w
		and	ie_situacao 	= 'A'  LIMIT 1;

		if (qt_existe_w > 0) then
			ie_opcao_w := 'U';
			open C02;
			loop
			fetch C02 into
				c02_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ds_retorno_w 	:= c02_w.nr_sequencia;
				end;
			end loop;
			close C02;
		end if;
	elsif (ie_param_139_w = 'U') then
		select	max(a.nr_sequencia)
		--into	nr_seq_localizacao_w
		into STRICT	ds_retorno_w
		from	man_localizacao			a,
			man_localizacao_usu_exec	b
		where	b.nr_seq_localizacao 		= a.nr_sequencia
		and	b.nm_usuario_exec 		= nm_usuario_p
		and	b.ie_situacao 			= 'A'
		and	b.ie_localizacao_padrao_usu	= 'S'
		and	a.ie_situacao			= 'A';
	elsif (ie_param_139_w = 'P') and (ie_evt_p = 'D') then /* este parametro serve para definir o evento change do parametro 139 da função para ser executado apenas esta ação e não o change do parametro 185 como ocorria antes*/
		ie_opcao_w	:= 'P';

		open C02;
		loop
		fetch C02 into
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			--nr_seq_localizacao_w := c02_w.nr_sequencia;
			ds_Retorno_w	:= c02_w.nr_sequencia;
			end;
		end loop;
		close C02;
	end if;

	if (ie_param_185_w = 'S') then
		begin
		if (coalesce(nr_seq_equipamento_p,0) <> 0) then
			begin
			select	x.nr_seq_local
			into STRICT	ds_retorno_w
			from (SELECT	a.nr_seq_local,
					b.cd_estabelecimento
				from	man_localizacao		b,
					man_equip_local_adic	a
				where	b.nr_sequencia 		= a.nr_seq_local
				and	a.nr_seq_equipamento 	= nr_seq_equipamento_p
				and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_usuario_w,0)) = coalesce(cd_estabelecimento_usuario_w,0)
				and	b.ie_situacao		= 'A'
				order by 2,1 desc) x LIMIT 1;
			exception
			when others then
				ds_retorno_w	:= nr_seq_local_w;
			end;
		end if;
		end;
	elsif (ie_param_185_w = 'E') and (ie_situacao_w = 'A') then
		select	max(a.nr_seq_local)
		into STRICT	ds_retorno_w
		from	man_equipamento	a
		where	nr_sequencia		= nr_seq_equipamento_p
		and	nr_seq_tipo_equip	= nr_seq_tipo_equip_w;
	elsif (ie_param_185_w = 'O') and (ie_evt_p = 'C') then
		begin
		select	x.nr_seq_local
		into STRICT	ds_retorno_w
		from (SELECT	a.nr_seq_local,
				b.cd_estabelecimento
			from  	man_localizacao		b,
				man_equip_local_adic	a
			where	b.nr_sequencia		= a.nr_seq_local
			and	a.nr_seq_equipamento 	= nr_seq_equipamento_p
			and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_usuario_w,0)) = coalesce(cd_estabelecimento_usuario_w,0)
			and	b.cd_setor 		= coalesce(cd_setor_usuario_w,0)
			and	b.ie_situacao		= 'A'
			and	coalesce(nr_seq_equipamento_p,0) > 0
			order by 2,1 desc) x LIMIT 1;
		exception
		when others then
			ds_retorno_w	:= nr_seq_local_w;
		end;
	end if;
	end;
end if;

return ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION man_obter_regra_local_os_equip ( nr_seq_equipamento_p bigint, nm_usuario_p text, cd_pessoa_solicitante_p text, ie_opcao_p text, ie_evt_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, cd_perfil_ativo_p bigint) FROM PUBLIC;

