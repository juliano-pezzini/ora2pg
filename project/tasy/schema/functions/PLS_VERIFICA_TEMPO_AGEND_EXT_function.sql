-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verifica_tempo_agend_ext ( cd_especialidade_prest_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Verificar os atendimentos que estão aguardando agendamento externo. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_area_proc_w			estrutura_procedimento_v.cd_area_procedimento%type;
cd_espec_proc_w			estrutura_procedimento_v.cd_especialidade%type;
cd_grupo_proc_w			estrutura_procedimento_v.cd_grupo_proc%type;

ie_origem_w			procedimento.ie_origem_proced%type;

ie_dut_w			pls_rol_grupo_proc.ie_diretriz_utilizacao%type;
ie_pac_w			pls_rol_grupo_proc.ie_complexidade%type;

ie_proc_grupo_servico_w		varchar(1);
qt_dias_alerta_w		bigint;
dt_aux_w			timestamp;
ie_dia_semana_w			smallint;
ie_feriado_w			smallint;
qt_dias_atend_w			smallint;
ie_dia_util			varchar(1);

 
C00 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_area_procedimento, 
		cd_especialidade, 
		cd_grupo_proc, 
		cd_procedimento, 
		ie_origem_proced, 
		qt_dias_alerta, 
		nr_seq_grupo_servico, 
		cd_espec_medica, 
		ie_diretriz_utilizacao, 
		ie_complexidade, 
		ie_funcao_regra 
	from ( 
		SELECT	nr_sequencia, 
			cd_area_procedimento, 
			cd_especialidade, 
			cd_grupo_proc, 
			cd_procedimento, 
			ie_origem_proced, 
			qt_dias_alerta, 
			nr_seq_grupo_servico, 
			cd_espec_medica, 
			ie_diretriz_utilizacao, 
			ie_complexidade, 
			ie_funcao_regra 
		from	pls_regra_prazo_auditoria 
		where	ie_situacao	= 'A' 
		and (cd_estabelecimento = cd_estabelecimento_p 
		and 	pls_obter_se_controle_estab('RE') = 'S') 
		
union all
 
		select	nr_sequencia, 
			cd_area_procedimento, 
			cd_especialidade, 
			cd_grupo_proc, 
			cd_procedimento, 
			ie_origem_proced, 
			qt_dias_alerta, 
			nr_seq_grupo_servico, 
			cd_espec_medica, 
			ie_diretriz_utilizacao, 
			ie_complexidade, 
			ie_funcao_regra 
		from	pls_regra_prazo_auditoria 
		where	ie_situacao	= 'A' 
		and 	pls_obter_se_controle_estab('RE') = 'N') alias3 
	order by qt_dias_alerta desc;	
 
BEGIN 
 
for r_C00_w in C00 loop 
	begin 
	 
	SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_p, ie_origem_proced_p, cd_area_proc_w, cd_espec_proc_w, cd_grupo_proc_w, ie_origem_w) INTO STRICT cd_area_proc_w, cd_espec_proc_w, cd_grupo_proc_w, ie_origem_w;
				 
	ie_dut_w	:= pls_obter_dados_grupo_rol(cd_procedimento_p, ie_origem_proced_p, 'DUT');
	ie_pac_w	:= pls_obter_dados_grupo_rol(cd_procedimento_p, ie_origem_proced_p, 'PAC');
	 
	ie_proc_grupo_servico_w := pls_se_grupo_preco_servico(	r_C00_w.nr_seq_grupo_servico, cd_procedimento_p, ie_origem_proced_p);
 
	if	((coalesce(r_C00_w.cd_area_procedimento::text, '') = '') 	or (r_C00_w.cd_area_procedimento	= cd_area_proc_w)) and 
		((coalesce(r_C00_w.cd_especialidade::text, '') = '') 		or (r_C00_w.cd_especialidade 		= cd_espec_proc_w)) and 
		((coalesce(r_C00_w.cd_grupo_proc::text, '') = '') 		or (r_C00_w.cd_grupo_proc 		= cd_grupo_proc_w)) and 
		((coalesce(r_C00_w.cd_procedimento::text, '') = '') 		or (r_C00_w.cd_procedimento 		= cd_procedimento_p AND r_C00_w.ie_origem_proced		= ie_origem_proced_p)) and 
		((coalesce(r_C00_w.nr_seq_grupo_servico::text, '') = '')		or (ie_proc_grupo_servico_w 	= 'S')) and 
		((coalesce(r_C00_w.cd_espec_medica::text, '') = '')		or (r_C00_w.cd_espec_medica		= cd_especialidade_prest_p)) and 
		((coalesce(r_C00_w.ie_diretriz_utilizacao::text, '') = '') 	or (r_C00_w.ie_diretriz_utilizacao 	= coalesce(ie_dut_w,'N'))) and 
		((coalesce(r_C00_w.ie_complexidade::text, '') = '')		or (r_C00_w.ie_complexidade		= coalesce(ie_pac_w,'N'))) and 
		((coalesce(r_C00_w.ie_funcao_regra::text, '') = '')		or (r_C00_w.ie_funcao_regra		= 'AE')) then 
 
		qt_dias_alerta_w	:= r_C00_w.qt_dias_alerta;
	end if;		
	end;
end loop; -- C00	 
if (qt_dias_alerta_w > 0) then 
	dt_aux_w		:= trunc(clock_timestamp(), 'dd');	
	ie_dia_util		:= obter_se_dia_util(dt_aux_w, cd_estabelecimento_p);	
	qt_dias_atend_w 	:= qt_dias_alerta_w;
	 
	if (qt_dias_atend_w > 0) then 
		qt_dias_atend_w := qt_dias_atend_w - 1;
	end if;
	 
	while	((qt_dias_atend_w > 0) or (ie_dia_util = 'N')) loop 
		begin 
 
		ie_dia_semana_w := obter_cod_dia_semana(dt_aux_w);
		ie_feriado_w := obter_se_feriado(cd_estabelecimento_p, dt_aux_w);
 
		If (ie_feriado_w = 0) and (ie_dia_semana_w in (2,3,4,5,6)) then 
						 
			qt_dias_atend_w	:= qt_dias_atend_w - 1;
			dt_aux_w	:= dt_aux_w + 1;
		 
		elsif	((ie_feriado_w > 0) or (ie_dia_semana_w in (1, 7))) then 
			 
			if (ie_dia_semana_w = 7) then 
				dt_aux_w	:= dt_aux_w + 2;
			else 
				dt_aux_w	:= dt_aux_w + 1;
			end if;
			 
		end if;
		 
		ie_dia_util := obter_se_dia_util(dt_aux_w, cd_estabelecimento_p);
		 
		end;		
	end loop;	
else 
	dt_aux_w	:= clock_timestamp();
end if;
 
RETURN to_char(dt_aux_w, 'dd/mm/yyyy');
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verifica_tempo_agend_ext ( cd_especialidade_prest_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

