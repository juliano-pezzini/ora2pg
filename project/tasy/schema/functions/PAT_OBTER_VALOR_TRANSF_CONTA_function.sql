-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pat_obter_valor_transf_conta ( nr_seq_bem_p bigint, dt_referencia_p timestamp, cd_conta_contabil_p text, ie_valor_p text) RETURNS bigint AS $body$
DECLARE


vl_retorno_w    double precision;
dt_inicial_w	timestamp := trunc(dt_referencia_p,'mm');
dt_final_w	timestamp := fim_mes(dt_referencia_p);


BEGIN

if (ie_valor_p = 'E') then

	select	coalesce(sum(vl_original),0)
	into STRICT	vl_retorno_w
	from	pat_conta_alteracao a
	where	a.dt_transacao between dt_inicial_w and dt_final_w
	and	a.nr_seq_bem	= coalesce(nr_seq_bem_p, a.nr_seq_bem)
	and	a.cd_conta_nova  = cd_conta_contabil_p;

elsif (ie_valor_p = 'S') then

	select	coalesce(sum(vl_original),0)
	into STRICT	vl_retorno_w
	from	pat_conta_alteracao a
	where	a.dt_transacao between dt_inicial_w and dt_final_w
	and	a.nr_seq_bem	= coalesce(nr_seq_bem_p, a.nr_seq_bem)
	and	a.cd_conta_antiga = cd_conta_contabil_p
	and (	SELECT 	count(*) -- Se não teve depreciação no mês então não contabiliza saida porque o bem foi cadastrado e já foi trasnferido
		from	pat_valor_bem b
		where	b.nr_seq_bem = a.nr_seq_bem
		and	b.dt_valor < dt_final_w) > 1;
elsif (ie_valor_p = 'EDA') then /* Entrada depreciação acumulada */
	select	coalesce(sum(vl_deprec_acum),0)
	into STRICT	vl_retorno_w
	from	pat_conta_alteracao a
	where	a.dt_transacao between dt_inicial_w and dt_final_w
	and	a.nr_seq_bem	= coalesce(nr_seq_bem_p, a.nr_seq_bem)
	and	a.cd_conta_nova  = cd_conta_contabil_p
	and (	SELECT 	count(*)
		from	pat_valor_bem b
		where	b.nr_seq_bem = a.nr_seq_bem
		and	b.dt_valor < dt_final_w) > 1;

elsif (ie_valor_p = 'SDA') then	/* Depreciação acumulada */
	select	coalesce(sum(vl_deprec_acum),0)
	into STRICT	vl_retorno_w
	from	pat_conta_alteracao a
	where	a.dt_transacao between dt_inicial_w and dt_final_w
	and	a.nr_seq_bem	= coalesce(nr_seq_bem_p, a.nr_seq_bem)
	and	a.cd_conta_antiga = cd_conta_contabil_p
	and (	SELECT 	count(*)
		from	pat_valor_bem b
		where	b.nr_seq_bem = a.nr_seq_bem
		and	b.dt_valor < dt_final_w) > 1;
end if;

return vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pat_obter_valor_transf_conta ( nr_seq_bem_p bigint, dt_referencia_p timestamp, cd_conta_contabil_p text, ie_valor_p text) FROM PUBLIC;

