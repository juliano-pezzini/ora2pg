-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_lista_carencia ( nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, nr_seq_plano_p bigint, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(4000)	:= '';
nr_seq_carencia_w	bigint;
ds_carencia_w		varchar(255) := '';
dt_validade_w		varchar(100);
cont_w			integer	:= 1;

C01 CURSOR FOR 
	SELECT	x.nr_sequencia, 
		upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',x.nr_seq_tipo_carencia),1,200)) ds_carencia, 
		'Isento' dt_validade 
	from	pls_carencia x 
	where	x.nr_seq_segurado	= nr_seq_segurado_p 
	and (coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) < trunc(clock_timestamp(),'dd') 
	
union
 
	SELECT	x.nr_sequencia, 
		upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',x.nr_seq_tipo_carencia),1,200)) ds_carencia, 
		to_char(coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) dt_validade 
	from	pls_carencia x 
	where	x.nr_seq_segurado	= nr_seq_segurado_p 
	and (coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) >= trunc(clock_timestamp(),'dd') 
	
union
 
	select	x.nr_sequencia, 
		upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',x.nr_seq_tipo_carencia),1,255)) ds_carencia, 
		'Isento' dt_validade 
	from	pls_carencia x 
	where	x.nr_seq_contrato	= nr_seq_contrato_p 
	and	not exists (select	1 
				from	pls_carencia x 
				where	x.nr_seq_segurado	= nr_seq_segurado_p 
				and	pls_obter_se_cpt(x.nr_seq_tipo_carencia)	= 'N') 
	and (coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) < trunc(clock_timestamp(),'dd') 
	
union
 
	select	x.nr_sequencia, 
		upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',x.nr_seq_tipo_carencia),1,255)) ds_carencia, 
		to_char(coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) dt_validade 
	from	pls_carencia x 
	where	x.nr_seq_contrato	= nr_seq_contrato_p 
	and	not exists (select	1 
				from	pls_carencia x 
				where	x.nr_seq_segurado	= nr_seq_segurado_p 
				and	pls_obter_se_cpt(x.nr_seq_tipo_carencia)	= 'N') 
	and (coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) >= trunc(clock_timestamp(),'dd') 
	
union
 
	select	x.nr_sequencia, 
		upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',x.nr_seq_tipo_carencia),1,255)) ds_carencia, 
		'Isento' dt_validade 
	from	pls_carencia x 
	where	nr_seq_plano		= nr_seq_plano_p 
	and	not exists (select	1 
			from	pls_carencia x 
			where	x.nr_seq_segurado	= nr_seq_segurado_p 
			and	pls_obter_se_cpt(x.nr_seq_tipo_carencia)	= 'N') 
	and	not exists (select	1 
				from	pls_carencia x 
				where	x.nr_seq_contrato	= nr_seq_contrato_p 
				and	pls_obter_se_cpt(x.nr_seq_tipo_carencia)	= 'N') 
	and (coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) < trunc(clock_timestamp(),'dd') 
	
union
 
	select	x.nr_sequencia, 
		upper(substr(obter_descricao_padrao('PLS_TIPO_CARENCIA','DS_CARENCIA',x.nr_seq_tipo_carencia),1,255)) ds_carencia, 
		to_char(coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) dt_validade 
	from	pls_carencia x 
	where	nr_seq_plano		= nr_seq_plano_p 
	and	not exists (select	1 
				from	pls_carencia x 
				where	x.nr_seq_segurado	= nr_seq_segurado_p 
				and	pls_obter_se_cpt(x.nr_seq_tipo_carencia)	= 'N') 
	and	not exists (select	1 
				from	pls_carencia x 
				where	x.nr_seq_contrato	= nr_seq_contrato_p 
				and	pls_obter_se_cpt(x.nr_seq_tipo_carencia)	= 'N') 
	and (coalesce(x.dt_inicio_vigencia,to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_p,'D'),1,10),'dd/mm/yyyy')) + coalesce(x.qt_dias,0)) >= trunc(clock_timestamp(),'dd') 
	order	by 1;
	

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_carencia_w, 
	ds_carencia_w, 
	dt_validade_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	if (cont_w = ie_opcao_p) then 
		ds_retorno_w	:= ds_retorno_w	|| substr(ds_carencia_w || '                         ',1,40) || dt_validade_w || chr(10);
	end if;
	cont_w := cont_w + 1;
end loop;
close C01;
	 
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_lista_carencia ( nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, nr_seq_plano_p bigint, ie_opcao_p bigint) FROM PUBLIC;

