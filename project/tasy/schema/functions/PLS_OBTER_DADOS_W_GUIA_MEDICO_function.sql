-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_w_guia_medico ( nr_seq_guia_medico_p w_pls_guia_medico.nr_sequencia%type, ie_opcao_p text, ie_atrib_qualif_p pls_atrib_qualif_prest.ie_atrib_qualif%type ) RETURNS varchar AS $body$
DECLARE


-- IE_ATRIB_QUALIF_P
-- A	Programa de acreditação
-- G	Certificações de Entidades Gestoras de Outros Programas de Qualidade
-- I	Certificação ISO9001
-- N	Comunicação de eventos adversos
-- P	Profissional com especialização
-- R	Profissional com residência
-- E	Título de Especialista
-- Q	Qualidade monitorada
-- D	Profissional com Doutorado ou PósDoutorado
-- IE_OPCAO_P
-- SG	Se existe sigla, retornando S ou N
-- SD	Se existe sigla, retornando Sim ou Não
-- OB	Observação do atributo de qualificação
-- DQ	Descrição do atributo de qualificação
-- DA	Descrição da instituição de acreditação
qt_registro_w			integer	:= 0;
ds_retorno_w			varchar(4000)	:= null;

c01 CURSOR(	nr_seq_guia_medico_pc		w_pls_guia_medico.nr_sequencia%type,
		ie_atrib_qualif_pc		pls_atrib_qualif_prest.ie_atrib_qualif%type) FOR
	SELECT	ds_instituicao_acred
	from	w_pls_guia_med_qualif
	where	nr_seq_guia_medico	= nr_seq_guia_medico_pc
	and	ie_atrib_qualif		= ie_atrib_qualif_pc
	group by ds_instituicao_acred;

BEGIN
if	((ie_opcao_p = 'SG') or (ie_opcao_p = 'SD')) and (ie_atrib_qualif_p IS NOT NULL AND ie_atrib_qualif_p::text <> '') then
	select	count(1)
	into STRICT	qt_registro_w
	from	w_pls_guia_med_qualif
	where	nr_seq_guia_medico	= nr_seq_guia_medico_p
	and	ie_atrib_qualif		= ie_atrib_qualif_p;

	if (ie_opcao_p = 'SG') then
		ds_retorno_w := 'N';
		if (qt_registro_w > 0) then
			ds_retorno_w := 'S';
		end if;
	else
		ds_retorno_w := 'Não';
		if (qt_registro_w > 0) then
			ds_retorno_w := 'Sim';
		end if;
	end if;

elsif (ie_opcao_p = 'OB') and (ie_atrib_qualif_p IS NOT NULL AND ie_atrib_qualif_p::text <> '') then
	select	max(ds_observacao)
	into STRICT	ds_retorno_w
	from	w_pls_guia_med_qualif
	where	nr_seq_guia_medico	= nr_seq_guia_medico_p
	and	ie_atrib_qualif		= ie_atrib_qualif_p;

elsif (ie_opcao_p = 'DQ') and (ie_atrib_qualif_p IS NOT NULL AND ie_atrib_qualif_p::text <> '') then
	select	max(ds_qualificacao)
	into STRICT	ds_retorno_w
	from	w_pls_guia_med_qualif
	where	nr_seq_guia_medico	= nr_seq_guia_medico_p
	and	ie_atrib_qualif		= ie_atrib_qualif_p;

elsif (ie_opcao_p = 'DA') and (ie_atrib_qualif_p IS NOT NULL AND ie_atrib_qualif_p::text <> '') then

	for r_c01_w in c01( nr_seq_guia_medico_p, ie_atrib_qualif_p ) loop

		if ((trim(both ds_retorno_w) IS NOT NULL AND (trim(both ds_retorno_w))::text <> '')) then
			ds_retorno_w	:= substr(ds_retorno_w ||', '|| r_c01_w.ds_instituicao_acred,1,4000);
		else
			ds_retorno_w	:= substr(r_c01_w.ds_instituicao_acred,1,4000);
		end if;

	end loop;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_w_guia_medico ( nr_seq_guia_medico_p w_pls_guia_medico.nr_sequencia%type, ie_opcao_p text, ie_atrib_qualif_p pls_atrib_qualif_prest.ie_atrib_qualif%type ) FROM PUBLIC;

