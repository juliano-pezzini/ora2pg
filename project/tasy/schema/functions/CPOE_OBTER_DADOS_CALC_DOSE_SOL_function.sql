-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_dados_calc_dose_sol ( cd_material_p bigint, qt_dose_p bigint, cd_unidade_medida_p text, qt_dosagem_p bigint, cd_mat_dil_p bigint, qt_dose_dil_p bigint, cd_unid_med_dil_p text, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_tipo_info_p text) RETURNS bigint AS $body$
DECLARE

				

cd_unid_med_usua_w			varchar(30);
qt_dose_ml_w				cpoe_material.qt_dose%type;
qt_solucao_w				double precision := 0;
qt_base_solucao_w			double precision := 0;
qt_diluente_w				double precision := 0;
qt_concentracao_final_w		double precision := 0;
qt_retorno_w				double precision;
dt_ultimo_horario_w			timestamp;
qt_dosagem_w			double precision := 0;
qt_dosagem_calc_w			double precision := 0;
qt_dosagem_calc_24_w		double precision := 0;
qt_horas_alteracao_w		double precision;
dt_inicio_solucao_w			timestamp;
dt_inicio_horario_w			timestamp;
nr_seq_event_inicio_w		prescr_solucao_evento.nr_sequencia%type;
nr_etapa_evento_w			prescr_solucao_evento.nr_etapa_evento%type;
qt_volume_w				prescr_solucao.qt_volume%type;

c01 CURSOR FOR
	SELECT	a.ie_alteracao,
			a.dt_alteracao,
			a.qt_dosagem,
			a.nr_sequencia
	from	prescr_solucao_evento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_solucao_p
	and 	a.nr_sequencia > nr_seq_event_inicio_w
	and		a.nr_etapa_evento = nr_etapa_evento_w
	order by nr_sequencia;
	
c02 CURSOR FOR
	SELECT	a.ie_alteracao,
			a.dt_alteracao,
			a.qt_dosagem,
			a.nr_sequencia
	from	prescr_solucao_evento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_solucao_p
	and 	a.nr_sequencia > nr_seq_event_inicio_w
	order by nr_sequencia;

procedure calcularSolucao(	cd_material_p	bigint,
							qt_dose_p		bigint,
							cd_unid_med_p	text ) is
		;
BEGIN		
	qt_solucao_w := obter_dose_convertida(cd_material_p, qt_dose_p, cd_unid_med_p, 'mg');
end;

procedure calcularBaseSolucao(	cd_material_p	number,
								qt_dose_p		number,
								cd_unid_med_p	varchar2 ) is

begin		
	cd_unid_med_usua_w := obter_unid_med_usua('ml');
	if (upper(cd_unid_med_p) <> upper(cd_unid_med_usua_w)) then
		qt_base_solucao_w := obter_dose_convertida(cd_material_p, qt_dose_p, cd_unid_med_p, cd_unid_med_usua_w);
	else
		qt_base_solucao_w := qt_dose_p;
	end if;
end;

procedure calcularDiluente(	cd_mat_dil_p	number,
							qt_dose_dil_p		number,
							cd_unid_med_dil_p	varchar2 ) is

begin		
	cd_unid_med_usua_w := obter_unid_med_usua('ml');
	if (upper(cd_unid_med_dil_p) <> upper(cd_unid_med_usua_w)) then
		qt_diluente_w := obter_dose_convertida(cd_mat_dil_p, qt_dose_dil_p, cd_unid_med_dil_p, cd_unid_med_usua_w);
	else
		qt_diluente_w := qt_dose_dil_p;
	end if;
end;
	
begin

if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '') and (cd_material_p <> cd_mat_dil_p) then

	calcularSolucao(cd_material_p, qt_dose_p, cd_unidade_medida_p);
	calcularBaseSolucao(cd_material_p, qt_dose_p, cd_unidade_medida_p);
	calcularDiluente(cd_mat_dil_p, qt_dose_dil_p, cd_unid_med_dil_p);
	
	
	select	max(qt_volume)
	into STRICT	qt_volume_w
	from	prescr_solucao
	where	nr_prescricao	= nr_prescricao_p
	and	nr_seq_solucao	= nr_seq_solucao_p;
	
	if (qt_solucao_w > 0) and
		((qt_volume_w) > 0) then 
		qt_concentracao_final_w := qt_solucao_w / (qt_volume_w);
	end if;
	
	if (coalesce(dt_inicio_solucao_w::text, '') = '') then
		if (ie_tipo_info_p = 'FC') then
			return qt_concentracao_final_w;
		end if;
	end if;
	
	select 	max(a.nr_etapa_evento)
	into STRICT	nr_etapa_evento_w
	from	prescr_solucao_evento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_solucao_p;
	
	select 	min(a.dt_alteracao),
			min(a.nr_sequencia)
	into STRICT	dt_inicio_solucao_w,
			nr_seq_event_inicio_w
	from	prescr_solucao_evento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_solucao_p
	and		a.nr_etapa_evento = nr_etapa_evento_w;
	
	qt_dosagem_w := null;
	for r_c01_w in c01 loop
		if (r_c01_w.ie_alteracao in (1,3,5,35)) then
			
			if (coalesce(qt_dosagem_w,0) > 0) and (qt_dosagem_w <> r_c01_w.qt_dosagem) then
				qt_horas_alteracao_w 	:= (pkg_date_utils.get_DiffDate(dt_ultimo_horario_w, r_c01_w.dt_alteracao, 'MINUTE') / 60);
				qt_dosagem_calc_w	:= qt_dosagem_calc_w + ((qt_horas_alteracao_w * qt_dosagem_w) * qt_concentracao_final_w);
			end if;
			
			dt_ultimo_horario_w	:= r_c01_w.dt_alteracao;
			qt_dosagem_w := r_c01_w.qt_dosagem;
		end if;
	end loop;
	
	qt_horas_alteracao_w 	:= (pkg_date_utils.get_DiffDate(dt_ultimo_horario_w, clock_timestamp(), 'MINUTE') / 60);
	qt_dosagem_calc_w	:= qt_dosagem_calc_w + ((qt_horas_alteracao_w * qt_dosagem_w) * qt_concentracao_final_w);

	select 	case
				when(clock_timestamp() - interval '1 days') < min(a.dt_alteracao)
				then min(a.dt_alteracao)
				else clock_timestamp() - interval '1 days'
			end as dt_alteracao,
			min(a.nr_sequencia)
	into STRICT	dt_inicio_horario_w,
			nr_seq_event_inicio_w
	from	prescr_solucao_evento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_solucao_p;
	
	qt_horas_alteracao_w := null;
	qt_dosagem_w := null;
	for r_c02_w in c02 loop
		if (r_c02_w.ie_alteracao in (1,3,5,35)) then
			
			if (coalesce(qt_dosagem_w,0) > 0) and (qt_dosagem_w <> r_c02_w.qt_dosagem) then
				qt_horas_alteracao_w 	:= (pkg_date_utils.get_DiffDate(dt_ultimo_horario_w, r_c02_w.dt_alteracao, 'MINUTE') / 60);
				qt_dosagem_calc_24_w	:= qt_dosagem_calc_24_w + ((qt_horas_alteracao_w * qt_dosagem_w) * qt_concentracao_final_w);
			end if;
			
			dt_ultimo_horario_w	:= r_c02_w.dt_alteracao;
			qt_dosagem_w := r_c02_w.qt_dosagem;
		end if;
	end loop;
	
	qt_horas_alteracao_w 	:= (pkg_date_utils.get_DiffDate(dt_ultimo_horario_w, clock_timestamp(), 'MINUTE') / 60);
	qt_dosagem_calc_24_w	:= qt_dosagem_calc_24_w + ((qt_horas_alteracao_w * qt_dosagem_w) * qt_concentracao_final_w);
	
	if (qt_concentracao_final_w IS NOT NULL AND qt_concentracao_final_w::text <> '') then
		if (ie_tipo_info_p = 'FC') then
			qt_retorno_w := qt_concentracao_final_w;
		elsif (ie_tipo_info_p = 'HD') then
			qt_retorno_w := qt_concentracao_final_w * qt_dosagem_p;
		elsif (ie_tipo_info_p = 'DD') then
			qt_retorno_w := qt_dosagem_calc_w;
		elsif (ie_tipo_info_p = '24DD') then
			qt_retorno_w := qt_dosagem_calc_24_w;
		end if;
	end if;	
	
	if (qt_retorno_w = 0) then
		return null;
	end if;
	
	return qt_retorno_w;
	
end if;

return qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_dados_calc_dose_sol ( cd_material_p bigint, qt_dose_p bigint, cd_unidade_medida_p text, qt_dosagem_p bigint, cd_mat_dil_p bigint, qt_dose_dil_p bigint, cd_unid_med_dil_p text, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_tipo_info_p text) FROM PUBLIC;

