-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_regra_intercambio ( nr_seq_conta_p bigint, ie_cobranca_pagamento_p text) RETURNS bigint AS $body$
DECLARE


qt_dias_envio_conta_w		bigint;
nr_seq_intercambio_w		bigint	:= null;
cd_estabelecimento_w		smallint;
ie_envia_w			varchar(1)	:= 'S';
qt_atraso_w			bigint;
qt_prestador_a400_w		integer;
ie_consiste_prest_w		varchar(1)	:= 'N';
nr_seq_plano_w			bigint;
ie_seguro_obito_w		varchar(1);
ie_pcmso_w			varchar(10);
nr_sequencia_w			bigint	:= null;
nr_seq_fatura_w			bigint;
nr_seq_segurado_w		bigint;
dt_conta_w			timestamp;
nr_seq_congenere_w		bigint;
cd_unimed_origem_w		varchar(20);
nr_seq_grupo_coop_w		bigint;
dt_recebimento_fatura_w		timestamp;
dt_postagem_w			timestamp;
dt_atendimento_w		timestamp;

c01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_regra_intercambio	a
	where	dt_postagem_w	between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_conta_w)
	and	((pls_obter_tipo_intercambio(nr_seq_congenere_w,cd_estabelecimento_w) = a.ie_tipo_intercambio) or (a.ie_tipo_intercambio = 'A'))
	and	coalesce(a.nr_seq_congenere_sup,coalesce(a.nr_seq_congenere,coalesce(nr_seq_congenere_w,0)))= coalesce(nr_seq_congenere_w,0)
	and	coalesce(ie_cobranca_pagamento,coalesce(ie_cobranca_pagamento_p,'P')) = coalesce(ie_cobranca_pagamento_p,'P')
	and (a.nr_seq_intercambio = nr_seq_intercambio_w or coalesce(a.nr_seq_intercambio::text, '') = '')
	and (a.nr_seq_grupo_coop_seg = nr_seq_grupo_coop_w or coalesce(a.nr_seq_grupo_coop_seg::text, '') = '')
	and (coalesce(a.nr_seq_plano::text, '') = '' or a.nr_seq_plano = nr_seq_plano_w)
	and (coalesce(a.nr_seq_grupo_congenere::text, '') = '' or
		exists (SELECT	1
			from	pls_cooperativa_grupo	x
			where	x.nr_seq_grupo 		= a.nr_seq_grupo_congenere
			and	x.nr_seq_congenere 	= nr_seq_congenere_w))
	and	((ie_seguro_obito_w = 'B' and coalesce(a.ie_beneficio_obito,'N') = 'S') or ie_seguro_obito_w = 'N')
	and	((ie_pcmso	= ie_pcmso_w) or (ie_pcmso = 'N'))
	and 	((coalesce(a.ie_tipo_data::text, '') = '') or
		((a.ie_tipo_data = 'R') and ((dt_recebimento_fatura_w - dt_atendimento_w) <= a.qt_dias_envio_taxa)) or
		((a.ie_tipo_data = 'P')	and ((dt_postagem_w - dt_atendimento_w) <= a.qt_dias_envio_taxa)));


BEGIN

if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	select	a.dt_atendimento_referencia,
		a.nr_seq_segurado,
		a.nr_seq_fatura,
		coalesce(dt_alta,dt_atendimento)
	into STRICT	dt_conta_w,
		nr_seq_segurado_w,
		nr_seq_fatura_w,
		dt_atendimento_w
	from	pls_conta a
	where	a.nr_sequencia	= nr_seq_conta_p;

	if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then
		select	a.cd_unimed_origem,
			a.dt_recebimento_fatura,
			a.dt_postagem
		into STRICT	cd_unimed_origem_w,
			dt_recebimento_fatura_w,
			dt_postagem_w
		from	ptu_fatura a
		where	a.nr_sequencia	= nr_seq_fatura_w;

		if (cd_unimed_origem_w IS NOT NULL AND cd_unimed_origem_w::text <> '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_congenere_w
			from	pls_congenere a
			where	a.cd_cooperativa	= cd_unimed_origem_w;

			if (coalesce(nr_seq_congenere_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_congenere_w
				from	pls_congenere a
				where	somente_numero(a.cd_cooperativa)	= somente_numero(cd_unimed_origem_w);
			end if;
		end if;
	end if;

	/* Quantidade de dias envio*/

	begin
	select	max(nr_seq_intercambio),
		max(cd_estabelecimento),
		max(nr_seq_plano),
		max(ie_pcmso),
		max(nr_seq_grupo_coop)
	into STRICT	nr_seq_intercambio_w,
		cd_estabelecimento_w,
		nr_seq_plano_w,
		ie_pcmso_w,
		nr_seq_grupo_coop_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_intercambio_w	:= null;
	end;

	if (coalesce(ie_pcmso_w::text, '') = '') then
		ie_pcmso_w	:= 'N';
	end if;

	begin
	select	coalesce(ie_seguro_obito,'N')
	into STRICT	ie_seguro_obito_w
	from	pls_plano
	where	nr_sequencia = nr_seq_plano_w;
	exception
	when others then
		ie_seguro_obito_w := 'N';
	end;

	nr_sequencia_w	:= null;
	open c01;
	loop
	fetch c01 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		null;
		end;
	end loop;
	close c01;
end if;

return nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_regra_intercambio ( nr_seq_conta_p bigint, ie_cobranca_pagamento_p text) FROM PUBLIC;

