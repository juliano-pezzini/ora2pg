-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_se_item_glosa (nr_seq_proc_autor_p bigint, nr_seq_mat_autor_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(10);


BEGIN

if coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'es_AR' then

    if (nr_seq_proc_autor_p IS NOT NULL AND nr_seq_proc_autor_p::text <> '') then

        BEGIN
            select 'S'
            into STRICT ds_retorno_w
            from procedimento_autorizado b
            where b.nr_sequencia = nr_seq_proc_autor_p
            and coalesce(b.qt_autorizada,0)  = 0
	    and exists (SELECT c.nr_seq_proc_autor from tiss_retorno_autorizacao c where c.nr_seq_proc_autor = b.nr_sequencia);
        EXCEPTION
            WHEN no_data_found THEN
                ds_retorno_w := 'N';
        END;

    elsif (nr_seq_mat_autor_p IS NOT NULL AND nr_seq_mat_autor_p::text <> '') then

       BEGIN
            select 'S'
            into STRICT ds_retorno_w
            from material_autorizado b
            where b.nr_sequencia = nr_seq_mat_autor_p
            and coalesce(b.qt_autorizada,0)  = 0
	    and exists (SELECT c.nr_seq_mat_autor from tiss_retorno_autorizacao c where c.nr_seq_mat_autor = b.nr_sequencia);
        EXCEPTION
            WHEN no_data_found THEN
                ds_retorno_w := 'N';
        END;
    end if;

elsif (nr_seq_proc_autor_p IS NOT NULL AND nr_seq_proc_autor_p::text <> '') then

	begin --Verifica se existe glosa para o procedimento
		select	'S'
		into STRICT	ds_retorno_w
		from	tiss_retorno_autorizacao a,
			procedimento_autorizado b
		where	a.nr_seq_autorizacao	= b.nr_sequencia_autor
		and	a.nr_seq_proc_autor	= b.nr_sequencia
		and 	coalesce(b.qt_solicitada,0)	< coalesce(b.qt_autorizada,0)
		and	b.nr_sequencia		= nr_seq_proc_autor_p  LIMIT 1;
	exception
	when others then
		begin --Verifica se existe glosa para a autorizacao
			select	'S'
			into STRICT	ds_retorno_w
			from	tiss_retorno_autorizacao a,
				procedimento_autorizado b
			where	a.nr_seq_autorizacao	= b.nr_sequencia_autor
			and	b.nr_sequencia		= nr_seq_proc_autor_p
			and 	coalesce(b.qt_solicitada,0)	< coalesce(b.qt_autorizada,0)  LIMIT 1;
		exception
		when others then
			ds_retorno_w	:= 'N';
		end;

	end;

elsif (nr_seq_mat_autor_p IS NOT NULL AND nr_seq_mat_autor_p::text <> '') then

	begin --Verifica se existe glosa para o material
		select	'S'
		into STRICT	ds_retorno_w
		from	tiss_retorno_autorizacao a,
			material_autorizado b
		where	a.nr_seq_autorizacao	= b.nr_sequencia_autor
		and	a.nr_seq_mat_autor    	= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_mat_autor_p
		and 	coalesce(b.qt_solicitada,0)	< coalesce(b.qt_autorizada,0)  LIMIT 1;
	exception
	when others then
		begin --Verifica se existe glosa para a autorizacao
			select	'S'
			into STRICT	ds_retorno_w
			from	tiss_retorno_autorizacao a,
				material_autorizado b
			where	a.nr_seq_autorizacao	= b.nr_sequencia_autor
			and 	coalesce(b.qt_solicitada,0)	< coalesce(b.qt_autorizada,0)
			and	b.nr_sequencia		= nr_seq_mat_autor_p  LIMIT 1;
		exception
		when others then
			ds_retorno_w	:= 'N';
		end;

	end;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_se_item_glosa (nr_seq_proc_autor_p bigint, nr_seq_mat_autor_p bigint) FROM PUBLIC;

