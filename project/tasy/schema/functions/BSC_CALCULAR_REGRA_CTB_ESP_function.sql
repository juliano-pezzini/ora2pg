-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION bsc_calcular_regra_ctb_esp ( cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, nr_seq_regra_calc_p bigint) RETURNS bigint AS $body$
DECLARE


ds_origem_w				varchar(2000);
ds_valores_w			varchar(2000);
i						integer	:= 0;
j						integer	:= 0;
ie_pos_regra_w			integer;
ds_caracter_w			varchar(1);
vl_retorno_w			double precision;
ds_regra_w				varchar(10);
ds_erro_w				varchar(1000);
qt_tamanho_w			integer;
ie_caracter_w			varchar(1);
dt_atualizacao_nrec_w	bsc_regra_calc_ind.dt_atualizacao_nrec%type;
dt_nova_validacao_w		bsc_regra_calc_ind.dt_atualizacao_nrec%type;


BEGIN

select	ds_origem,
		dt_atualizacao_nrec
into STRICT	ds_origem_w,
		dt_atualizacao_nrec_w
from	bsc_regra_calc_ind
where	nr_sequencia	= nr_seq_regra_calc_p;

dt_nova_validacao_w	:= to_date('25/03/2020','dd/mm/yyyy');

qt_tamanho_w	:= coalesce(length(ds_origem_w),0);

ds_valores_w	:= ds_origem_w;

for i in 1..qt_tamanho_w loop
	begin
	/* Caracter */

	ie_caracter_w	:= substr(ds_origem_w,i,1);
	
	if (ie_caracter_w = '#') then
		ie_pos_regra_w	:= i;
	elsif (ie_caracter_w in ('0','1','2','3','4','5','6','7','8','9')) then /* Numeros valor fixo ou Seq formula*/
		ds_regra_w	:= ds_regra_w || ie_caracter_w;
	end if;

	/* Verifica se tem valor a calcular */

	if	((ie_caracter_w not in ('0','1','2','3','4','5','6','7','8','9','#')) or (i = qt_tamanho_w)) and (ds_regra_w IS NOT NULL AND ds_regra_w::text <> '') then
		begin
		if (ie_pos_regra_w <> 0) and /* Calcula valor da regra */
			(ie_pos_regra_w < i) then
			begin	
			vl_retorno_w	:= coalesce(bsc_obter_valor_conta(cd_estabelecimento_p, nr_seq_mes_ref_p, ds_regra_w),0);
			exception when others then
				vl_retorno_w	:= 0;
			end;
			ds_regra_w	:= '#' || ds_regra_w;
			ie_pos_regra_w	:= 0;
		else /* Valor fixo*/
			vl_retorno_w	:= campo_numerico(ds_regra_w);
		end if;
		/* Substitui valor na expressao correspondente */

		
		if (dt_atualizacao_nrec_w > dt_nova_validacao_w) then
			ds_regra_w	:= ds_regra_w || ' ';
		end if;
		
		if (vl_retorno_w >= 0) then			
			ds_valores_w	:= replace(ds_valores_w,ds_regra_w,replace(vl_retorno_W,',','.'));
		else
			ds_valores_w	:= replace(ds_valores_w,ds_regra_w, '(' || replace(vl_retorno_W,',','.') || ')');
			
		end if;
		ds_regra_w	:= '';
		end;
	end if;
	
	end;
end loop;

if (ds_valores_w IS NOT NULL AND ds_valores_w::text <> '') then /* Calcula a expressao correspondente */
	vl_retorno_w := obter_valor_dinamico('select nvl(' || replace(ds_valores_w,',','.') || ',0) from dual', vl_retorno_w);
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION bsc_calcular_regra_ctb_esp ( cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, nr_seq_regra_calc_p bigint) FROM PUBLIC;

