-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_atributo_lookup2 (nm_tabela_p text, nm_atributo_p text) RETURNS SETOF LT_ATRIBUTO_LOOKUP_TABLE AS $body$
DECLARE


  nm_tabela_w           varchar(255);
  nm_atributo_w         varchar(255);
  nm_atributo_cd_w      varchar(255);
  nm_atributo_ds_w      varchar(255);
  nm_tabela_ref_w       varchar(50) := '';
  ds_sql_w              varchar(4000) := '';
  ie_restrige_estab_w   varchar(01);
  ie_restrige_empresa_w varchar(01);
  ds_complemento_w      varchar(255);
  i                     integer;
  cursor_w              integer;
  col_cnt               integer;
  campos_w              dbms_sql.desc_tab2;
  temp_excp_w           varchar(4000);

	procedure inserirDadosPadrao is
	;
BEGIN
	    temp_excp_w      := UPPER(ds_sql_w);
	    temp_excp_w      := replace(temp_excp_w, 'SELECT', '');
	    temp_excp_w      := replace(temp_excp_w, chr(13) || chr(10), '');
	    temp_excp_w      := substr(temp_excp_w, 1, position('FROM' in temp_excp_w) -1);
	    temp_excp_w      := replace(temp_excp_w, ',',' ');
	  /*temp_excp_w      := replace(temp_excp_w, '  ',' ');*/

	    temp_excp_w      := substr(temp_excp_w, 2, length(temp_excp_w) -1);
	    i                := position(' ' in temp_excp_w);
	    nm_atributo_cd_w := replace(substr(temp_excp_w,1, i-1), ' ', '');
	    nm_atributo_ds_w := ltrim(substr(temp_excp_w,i + 1, length(temp_excp_w)));
	
	    if (position(' ' in nm_atributo_ds_w) <> 0) then
	      nm_atributo_ds_w := replace(substr(nm_atributo_ds_w, 1, position(' ' in nm_atributo_ds_w)), ' ', '');
	    else
	      nm_atributo_ds_w := replace(substr(nm_atributo_ds_w, 1, length(nm_atributo_ds_w)), ' ', '');
	    end if;
	end;


BEGIN
  nm_tabela_w   := nm_tabela_p;
  nm_atributo_w := nm_atributo_p;

  begin
    select b.nm_tabela_referencia
      into STRICT nm_tabela_ref_w
      from integridade_referencial b,
           integridade_atributo a
     where a.nm_tabela	= b.nm_tabela
       and a.nm_integridade_referencial	= b.nm_integridade_referencial
       and a.nm_tabela		= nm_tabela_p
       and a.nm_atributo	= nm_atributo_p
       and b.nm_integridade_referencial not in ('PLSPRES_PESJUCP_FK', 'PRESMAT_MATMARC_FK', 'PROINOP_CONPLAN_FK') /* Francisco - 28/06/2011 - Caso espec√≠fico / Almir - 22/05/2014 - iOS */
       and 0	< ( SELECT count(*)
                    from integridade_atributo x
                   where a.nm_integridade_referencial	= x.nm_integridade_referencial
                     and a.nm_tabela	= x.nm_tabela );
  exception
	  when others then
		  nm_tabela_ref_w	:= '';
  end;

  select 	coalesce(max(ie_restringe_estab), 'N'),
			coalesce(max(ie_restringe_empresa), 'N'),
			max(ds_sql_lookup)
    into STRICT 	ie_restrige_estab_w,
			ie_restrige_empresa_W,
			ds_sql_w
    from 	tabela_sistema
	where 	nm_tabela	= nm_tabela_ref_w;
	
	if (ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') then
		begin
		cursor_w	:= DBMS_SQL.OPEN_CURSOR;
		DBMS_SQL.PARSE(cursor_w, ds_sql_w, dbms_sql.native);
		dbms_sql.describe_columns2(cursor_w, col_cnt, campos_w);

		for i in 1 .. col_cnt loop
		  if (i = 1) then
			nm_atributo_cd_w	:= campos_w[i].col_name;
		  elsif (i = 2) then
			nm_atributo_ds_w	:= campos_w[i].col_name;
			exit;
		  end if;
		end loop;

		dbms_sql.close_cursor(cursor_w);

	  exception when others then
		dbms_sql.close_cursor(cursor_w);
		inserirDadosPadrao;
		end;
	else
		inserirDadosPadrao;
	end if;
  /* cria uma linha no resultset com os antigos parametros out */

  RETURN NEXT LT_Atributo_Lookup(nm_tabela_w,
                              nm_atributo_w,
                              nm_atributo_cd_w,
                              nm_atributo_ds_w,
                              nm_tabela_ref_w,
                              ds_sql_w,
                              ie_restrige_estab_w,
                              ie_restrige_empresa_w,
                              ds_complemento_w);
  RETURN;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_atributo_lookup2 (nm_tabela_p text, nm_atributo_p text) FROM PUBLIC;

