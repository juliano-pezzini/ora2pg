-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_integra_obx_data_hl7 ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_sequencia_p prescr_procedimento.nr_sequencia%TYPE) RETURNS varchar AS $body$
DECLARE


    json_aux_w        philips_json;
    json_list_aux_w   philips_json_list;
    ds_message_w      text;
    c_dados_exame CURSOR FOR
    SELECT obter_equipamento_exame(a.nr_seq_exame, NULL, lab_obter_conversao_externa(NULL, 'EQUIPAMENTO_LAB', 'CD_EQUIPAMENTO', c.cd_equipamento)) id_exam,
           lab_obter_conversao_externa(NULL, 'EQUIPAMENTO_LAB', 'CD_EQUIPAMENTO', c.cd_equipamento) equip,
           to_char(b.ie_status_atend) atend_status,
           to_char(b.nr_seq_exame) seq_exam,
           to_char(b.nr_sequencia) seq_order,
           substr(obter_lab_exec_etapa_coleta(b.nr_prescricao, b.nr_sequencia, 1/*ie_status_atend*/
, '20', 'D'), 1, 100) date_collect,
           coalesce(obter_conversao_externa(NULL, 'PRESCR_PROCEDIMENTO', 'CD_MATERIAL_EXAME', b.cd_material_exame), b.cd_material_exame) id_material_exam,
           to_char(b.nr_seq_interno) seq_internal,
           substr(a.nm_exame, 0, 255) nm_exam,
           'O' result_status
    FROM prescr_medica         e,
         prescr_procedimento   b,
         exame_laboratorio     a,
         lab_exame_equip       c
    WHERE a.nr_seq_exame = c.nr_seq_exame
    AND a.nr_seq_exame = b.nr_seq_exame
    AND e.nr_prescricao = b.nr_prescricao
    AND (b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
    AND coalesce(a.ie_anatomia_patologica, 'N') = 'N'
    AND (e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '')
    AND obter_equipamento_exame(a.nr_seq_exame, NULL, lab_obter_conversao_externa(NULL, 'EQUIPAMENTO_LAB', 'CD_EQUIPAMENTO', c.cd_equipamento)) IS NOT NULL
    AND b.nr_prescricao = nr_prescricao_p
	AND b.nr_sequencia = nr_sequencia_p;

BEGIN
    json_aux_w := philips_json();
    json_list_aux_w := philips_json_list();
    BEGIN
        FOR c_dados_exame_w IN c_dados_exame LOOP
            json_aux_w.put('id_exam', c_dados_exame_w.id_exam);
            json_aux_w.put('equip', c_dados_exame_w.equip);
            json_aux_w.put('atend_status', c_dados_exame_w.atend_status);
            json_aux_w.put('seq_exam', c_dados_exame_w.seq_exam);
            json_aux_w.put('seq_order', c_dados_exame_w.seq_order);
            json_aux_w.put('date_collect', c_dados_exame_w.date_collect);
            json_aux_w.put('id_material_exam', c_dados_exame_w.id_material_exam);
            json_aux_w.put('seq_internal', c_dados_exame_w.seq_internal);
            json_aux_w.put('nm_exam', c_dados_exame_w.nm_exam);
            json_aux_w.put('result_status', c_dados_exame_w.result_status);
            json_list_aux_w.append(json_aux_w.to_json_value());
        END LOOP;

        dbms_lob.createtemporary(ds_message_w, true);
        json_list_aux_w.(ds_message_w);
    EXCEPTION
        WHEN no_data_found OR too_many_rows THEN
            ds_message_w := '';
    END;
	
    RETURN ds_message_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_integra_obx_data_hl7 ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_sequencia_p prescr_procedimento.nr_sequencia%TYPE) FROM PUBLIC;

