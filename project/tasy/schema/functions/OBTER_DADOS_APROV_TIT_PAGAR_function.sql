-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_aprov_tit_pagar ( nr_titulo_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(4000);
nr_ordem_compra_w	bigint;
nr_seq_nota_fiscal_w	bigint;
ds_aprovador_ordem_w	w_titulo_pagar_liberacao.ds_dados_aprov%type;
nm_pessoa_solic_w	varchar(60);
nm_pessoa_aprov_w	varchar(60);
nr_seq_aprovacao_w	bigint;

nr_solic_compra_w	bigint;

/* buscar dados dos itens da nota */

c01 CURSOR FOR
SELECT	distinct nr_ordem_compra
from	nota_fiscal_item
where	nr_sequencia	= nr_seq_nota_fiscal_w
and	nr_ordem_compra <> nr_ordem_compra_w
and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '')
order by 1;

c02 CURSOR FOR
SELECT	distinct nr_solic_compra
from	ordem_compra_item
where	nr_ordem_compra	= nr_ordem_compra_w
and	(nr_solic_compra IS NOT NULL AND nr_solic_compra::text <> '')
order by 1;

c03 CURSOR FOR
SELECT	distinct nm_usuario_aprov
from	processo_aprov_compra
where	nr_documento	= nr_ordem_compra_w
and	(nm_usuario_aprov IS NOT NULL AND nm_usuario_aprov::text <> '')
and	ie_aprov_reprov = 'A';


BEGIN

ds_retorno_w		:= '';

select	b.nr_seq_nota_fiscal
into STRICT	nr_seq_nota_fiscal_w
from	titulo_pagar b
where	b.nr_titulo	= nr_titulo_p;

if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then

	select	a.nr_ordem_compra
	into STRICT	nr_ordem_compra_w
	from	nota_fiscal a
	where	a.nr_sequencia	= nr_seq_nota_fiscal_w;

	if (nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> '') then
		
		open c02;
		loop
		fetch c02 into
			nr_solic_compra_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			select	substr(obter_nome_pf(a.cd_pessoa_solicitante),1,60),
				substr(obter_nome_pf(a.cd_pessoa_autoriza),1,60)
			into STRICT	nm_pessoa_solic_w,
				nm_pessoa_aprov_w
			from	solic_compra a
			where	a.nr_solic_compra = nr_solic_compra_w;

			ds_retorno_w	:= substr(ds_retorno_w || 'Solicitacao de compra: ' || nr_solic_compra_w ||
					' - Solicitante: ' || nm_pessoa_solic_w || 
					' - Aprovador: ' || nm_pessoa_aprov_w || chr(13) || chr(10),1,4000);	
		end loop;
		close c02;
		
        open c03;
        loop
        fetch c03 into
        nm_pessoa_aprov_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */

            if (nm_pessoa_aprov_w IS NOT NULL AND nm_pessoa_aprov_w::text <> '') then
                case     
                WHEN coalesce(ds_aprovador_ordem_w::text, '') = ''  THEN 
					ds_aprovador_ordem_w :=substr(obter_pessoa_fisica_usuario(nm_pessoa_aprov_w,'D'),1,60);
				else
					ds_aprovador_ordem_w := ds_aprovador_ordem_w ||','|| substr(obter_pessoa_fisica_usuario(nm_pessoa_aprov_w,'D'),1,60);
				END case;
			end if;

		end loop;
		close c03;

		ds_retorno_w	:=  substr(ds_retorno_w || 'Ordem compra: ' || nr_ordem_compra_w ||
					' - Aprovador(es): ' || ds_aprovador_ordem_w || chr(13) || chr(10),1,4000);
	end if;

	open c01;
	loop
	fetch c01 into
		nr_ordem_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */	
		
        open c03;
        loop
        fetch c03 into
        nm_pessoa_aprov_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */

            if (nm_pessoa_aprov_w IS NOT NULL AND nm_pessoa_aprov_w::text <> '') then
                case     
                WHEN coalesce(ds_aprovador_ordem_w::text, '') = ''  THEN 
					ds_aprovador_ordem_w :=substr(obter_pessoa_fisica_usuario(nm_pessoa_aprov_w,'D'),1,60);
				else
					ds_aprovador_ordem_w := ds_aprovador_ordem_w ||','|| substr(obter_pessoa_fisica_usuario(nm_pessoa_aprov_w,'D'),1,60);
				END case;
			end if;

		end loop;
		close c03;
	
		ds_retorno_w	:= substr(ds_retorno_w || 'Ordem compra: ' || nr_ordem_compra_w ||
						' - Aprovador: ' || ds_aprovador_ordem_w || chr(13) || chr(10),1,4000);
	end loop;
	close c01;

end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_aprov_tit_pagar ( nr_titulo_p bigint) FROM PUBLIC;

