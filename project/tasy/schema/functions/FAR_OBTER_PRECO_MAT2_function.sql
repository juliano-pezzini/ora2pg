-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION far_obter_preco_mat2 (cd_material_p bigint, cd_estabelecimento_p bigint, nr_seq_item_pedido_p bigint) RETURNS bigint AS $body$
DECLARE

 
cd_tab_preco_mat_w		bigint;
vl_preco_w			double precision;
nr_seq_fabricante_w		bigint;
nr_seq_divisao_w			bigint;
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w 		integer;
ie_classif_medic_w			varchar(15);
pr_despesa_fabric_w		double precision;
pr_despesa_divisao_w		double precision;
tx_ajuste_similar_w		        double precision;
tx_ajuste_generico_w		double precision;
tx_ajuste_etico_w			double precision;
tx_ajuste_classif_w		        double precision;
vl_despesa_fabric_w		double precision;
vl_despesa_divisao_w		double precision;
tx_ajuste_w			double precision;
vl_ajuste_estrutura_w		double precision;
vl_ajuste_total_w			double precision;
vl_ajuste_classif_w			double precision;
ie_abcfarma_w                    varchar(1);
vl_preco_tabela_w		        double precision;
vl_preco_fixo_w			double precision;
vl_desconto_w			double precision;
pr_pis_w				double precision:=0;
pr_cofins_w			double precision:=0;
verifica_lista_w        		integer;

c01 CURSOR FOR 
SELECT	coalesce(tx_ajuste,0) 
from	far_regra_preco_mat a 
where	coalesce(a.cd_grupo_material,cd_grupo_material_w) 		= cd_grupo_material_w 
and	coalesce(a.cd_subgrupo_material,cd_subgrupo_material_w)	= cd_subgrupo_material_w 
and	coalesce(a.cd_classe_material,cd_classe_material_w) 	    = cd_classe_material_w 
and	coalesce(a.cd_material,cd_material_p) 			= cd_material_p 
and	cd_tab_preco_mat                    = cd_tab_preco_mat_w 
and	cd_estabelecimento				    = cd_estabelecimento_p;


BEGIN 
 
ie_abcfarma_w:= far_obter_se_abcfarma(cd_material_p, cd_estabelecimento_p);
 
select	coalesce(max(cd_tab_preco_mat),0), 
	coalesce(max(tx_ajuste_similar),0), 
	coalesce(max(tx_ajuste_generico),0), 
	coalesce(max(tx_ajuste_etico),0), 
	coalesce(max(pr_pis),0), 
	coalesce(max(pr_cofins),0) 
into STRICT	cd_tab_preco_mat_w, 
	tx_ajuste_similar_w, 
	tx_ajuste_generico_w, 
	tx_ajuste_etico_w, 
	pr_pis_w, 
	pr_cofins_w 
from	far_parametros_gerais 
where	cd_estabelecimento = cd_estabelecimento_p;
 
if (ie_abcfarma_w = 'S') then 
 
	select 	coalesce(max(vl_preco_venda),0) 
	into STRICT	vl_preco_w 
	from 	preco_material a 
	where 	cd_material = cd_material_p 
	and	cd_tab_preco_mat = cd_tab_preco_mat_w 
	and	ie_situacao = 'A' 
	and	trunc(dt_inicio_vigencia) =	(SELECT	trunc(max(x.dt_inicio_vigencia)) 
					from	preco_material x 
					where	x.cd_tab_preco_mat = a.cd_tab_preco_mat 
					and	x.cd_material = a.cd_material 
					and	x.ie_situacao = 'A' 
					and	x.cd_estabelecimento = cd_estabelecimento_p 
					and	trunc(x.dt_inicio_vigencia) <= trunc(clock_timestamp()));
else 
 
	select	coalesce(max(vl_preco_venda),0), 
		max(cd_tab_preco_mat) 
	into STRICT	vl_preco_w, 
		cd_tab_preco_mat_w 
	from	preco_material a 
	where	a.cd_material = cd_material_p 
	and		a.ie_situacao = 'A' 
	and	trunc(a.dt_inicio_vigencia) =	(SELECT	trunc(max(x.dt_inicio_vigencia)) 
						from	preco_material x 
						where	x.cd_material = a.cd_material 
						and	x.ie_situacao = 'A' 
						and	x.cd_estabelecimento = cd_estabelecimento_p 
						and	trunc(x.dt_inicio_vigencia) <= trunc(clock_timestamp()) 
						and	x.cd_tab_preco_mat <>	cd_tab_preco_mat_w);
											 
	select	count(*) 
	into STRICT	verifica_lista_w 
	from	material_fiscal 
	where	cd_material = cd_material_p 
	and		ie_lista = 2;
	 
	if (verifica_lista_w <> 0) then 
 
		if (coalesce(pr_pis_w,0) > 0 ) then 
			pr_pis_w:= dividir((vl_preco_w * coalesce(pr_pis_w,0)),100);
		end if;
 
		if (coalesce(pr_cofins_w,0) > 0 ) then 
			pr_cofins_w:= dividir((vl_preco_w * coalesce(pr_cofins_w,0)),100);
		end if;		
 
	end if;
 
end if;
 
select 	cd_grupo_material, 
	cd_subgrupo_material, 
	cd_classe_material 
into STRICT	cd_grupo_material_w, 
	cd_subgrupo_material_w, 
	cd_classe_material_w 
from 	estrutura_material_v 
where	cd_material = cd_material_p;
 
if (vl_preco_w > 0) then 
	begin 
 
	select	coalesce(max(nr_seq_fabric),0), 
		coalesce(max(nr_seq_divisao),0), 
		coalesce(max(ie_classif_medic),'x') 
	into STRICT	nr_seq_fabricante_w, 
		nr_seq_divisao_w, 
		ie_classif_medic_w 
	from	material 
	where	cd_material = cd_material_p;
 
	if (ie_classif_medic_w = 'E') then 
		tx_ajuste_classif_w	:= tx_ajuste_etico_w;
	elsif (ie_classif_medic_w = 'G') then 
		tx_ajuste_classif_w	:= tx_ajuste_generico_w;
	elsif (ie_classif_medic_w = 'S') then 
		tx_ajuste_classif_w	:= tx_ajuste_similar_w;
	end if;
 
	if (coalesce(tx_ajuste_classif_w,0) > 0 ) then 
		vl_ajuste_classif_w:= dividir((vl_preco_w * coalesce(tx_ajuste_classif_w,0)),100);
	end if;
	 
	select	coalesce(max(pr_despesa_venda),0) 
	into STRICT	pr_despesa_fabric_w 
	from	mat_fabricante 
	where	nr_sequencia = nr_seq_fabricante_w;
 
	if (pr_despesa_fabric_w > 0) then 
 
		select	dividir((vl_preco_w * coalesce(pr_despesa_fabric_w,0)),100) 
		into STRICT	vl_despesa_fabric_w 
		;
 
	end if;
 
	select	coalesce(max(pr_despesa_venda),0) 
	into STRICT	pr_despesa_divisao_w 
	from	mat_fabric_divisao 
	where	nr_seq_fabricante = nr_seq_fabricante_w 
	and	nr_seq_divisao = nr_seq_divisao_w;
 
	if (pr_despesa_divisao_w > 0) then 
 
		select	dividir((vl_preco_w * coalesce(pr_despesa_divisao_w,0)),100) 
		into STRICT	vl_despesa_divisao_w 
		;
 
	end if;
 
	open c01;
	loop 
	fetch c01 into 
		tx_ajuste_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		 
		select	dividir((vl_preco_w * coalesce(tx_ajuste_w,0)),100) 
		into STRICT	vl_ajuste_estrutura_w 
		;
 
		vl_ajuste_total_w	:= (coalesce(vl_ajuste_total_w,0) + coalesce(vl_ajuste_estrutura_w,0));
 
		end;
	end loop;
	close c01;
 
	if (ie_abcfarma_w = 'S') then 
		vl_preco_w	:= (coalesce(vl_preco_w,0) + coalesce(vl_ajuste_classif_w,0) + coalesce(vl_despesa_fabric_w,0) + coalesce(vl_despesa_divisao_w,0) + coalesce(vl_ajuste_total_w,0));
	else 
		vl_preco_w	:= (coalesce(vl_preco_w,0) + coalesce(vl_despesa_fabric_w,0) + coalesce(vl_despesa_divisao_w,0) + coalesce(vl_ajuste_total_w,0) + coalesce(pr_cofins_w,0) + coalesce(pr_pis_w,0));
	end if;
	end;
end if;
 
 
SELECT * FROM far_obter_valor_promocao(cd_material_p, vl_preco_w, cd_estabelecimento_p, vl_preco_tabela_w, vl_preco_fixo_w, vl_desconto_w) INTO STRICT vl_preco_tabela_w, vl_preco_fixo_w, vl_desconto_w;
 
 
-- Retonar o Desconto, conforme regra de promoção	 
if (coalesce(nr_seq_item_pedido_p,0) <> 0) then 
	 
	if (coalesce(vl_preco_tabela_w,0) <> 0)	and (coalesce(vl_preco_tabela_w,0) < vl_preco_w) then 
		vl_preco_w:= (vl_preco_w - vl_preco_tabela_w);
	elsif (coalesce(vl_preco_fixo_w,0) <> 0)	and (coalesce(vl_preco_fixo_w,0) < vl_preco_w) then 
		vl_preco_w:= (vl_preco_w - vl_preco_fixo_w);
	elsif (coalesce(vl_desconto_w,0) between 1 and 99) then 
		vl_preco_w:= dividir((vl_preco_w * coalesce(vl_desconto_w,0)),100);
	else 
		vl_preco_w:=0;
	end if;
	 
end if;	
 
return vl_preco_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION far_obter_preco_mat2 (cd_material_p bigint, cd_estabelecimento_p bigint, nr_seq_item_pedido_p bigint) FROM PUBLIC;

