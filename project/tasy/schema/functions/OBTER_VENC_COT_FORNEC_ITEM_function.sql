-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_venc_cot_fornec_item ( nr_cot_compra_p bigint, nr_item_cot_compra_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_item_fornec_w		bigint;
ie_regra_preco_w			varchar(01);
cd_estabelecimento_w		smallint;
ie_somente_encerrada_w		varchar(01);
ie_rentabilidade_w			varchar(01) := 'N';
qt_existe_w			bigint;
ie_utiliza_conv_fornec_w		varchar(01);
ie_forma_venc_cotacao_w			varchar(15);
cd_cgc_fornecedor_venc_alt_w		cot_compra_item.cd_cgc_fornecedor_venc_alt%type;
ie_gerar_oc_itens_confirm_w		parametro_compras.ie_gerar_oc_itens_confirm%type;
ie_status_w	cot_compra_forn.ie_status%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(b.ie_status,'AH')
	from	cot_compra_forn b,
		cot_compra_forn_item a
	where	a.nr_seq_cot_forn	= b.nr_sequencia
	and	a.nr_cot_compra 	= nr_cot_compra_p
	and	a.nr_item_cot_compra 	= nr_item_cot_compra_p
	and	a.vl_unitario_material	> 0
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((cd_cgc_fornecedor_venc_alt_w = 'X') or (b.cd_cgc_fornecedor = cd_cgc_fornecedor_venc_alt_w))
	order by
		CASE WHEN ie_utiliza_conv_fornec_w='S' THEN 			CASE WHEN coalesce(a.qt_conv_unid_fornec,0)=0 THEN 				dividir(a.vl_presente, (obter_dados_material(a.cd_material,'QCE'))::numeric )  ELSE dividir(a.vl_presente, a.qt_conv_unid_fornec) END   ELSE 0 END  desc,
		CASE WHEN obter_se_qt_dif_item_forn_cot(nr_cot_compra_p, nr_item_cot_compra_p)='N' THEN 			a.vl_presente  ELSE coalesce(a.vl_unitario_liquido, a.vl_presente) END  desc,
		a.qt_prioridade,
		a.vl_preco_liquido desc;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(b.ie_status,'AH')
	from	cot_compra_forn b,
		cot_compra_forn_item a
	where	a.nr_seq_cot_forn	= b.nr_sequencia
	and	a.nr_cot_compra 	= nr_cot_compra_p
	and	a.nr_item_cot_compra 	= nr_item_cot_compra_p
	and	a.vl_unitario_material	> 0
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((cd_cgc_fornecedor_venc_alt_w = 'X') or (b.cd_cgc_fornecedor = cd_cgc_fornecedor_venc_alt_w))
	order by
		CASE WHEN ie_utiliza_conv_fornec_w='S' THEN 			CASE WHEN coalesce(a.qt_conv_unid_fornec,0)=0 THEN 				dividir(a.vl_presente, (obter_dados_material(a.cd_material,'QCE'))::numeric )  ELSE dividir(a.vl_presente, a.qt_conv_unid_fornec) END   ELSE 0 END  desc,
		CASE WHEN obter_se_qt_dif_item_forn_cot(a.nr_cot_compra, a.nr_item_cot_compra)='N' THEN 			a.vl_presente  ELSE coalesce(a.vl_unitario_liquido, a.vl_presente) END  desc,
		a.vl_presente desc,
		a.qt_prioridade,
		a.vl_preco_liquido desc;

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(b.ie_status,'AH')
	from	cot_compra_forn b,
		cot_compra_forn_item a
	where	a.nr_seq_cot_forn	= b.nr_sequencia
	and	a.nr_cot_compra 	= nr_cot_compra_p
	and	a.nr_item_cot_compra 	= nr_item_cot_compra_p
	and	a.vl_unitario_material	> 0
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((cd_cgc_fornecedor_venc_alt_w = 'X') or (b.cd_cgc_fornecedor = cd_cgc_fornecedor_venc_alt_w))
	order by
		CASE WHEN ie_utiliza_conv_fornec_w='S' THEN 			CASE WHEN coalesce(a.qt_conv_unid_fornec,0)=0 THEN 				dividir(a.vl_presente, (obter_dados_material(a.cd_material,'QCE'))::numeric )  ELSE dividir(a.vl_presente, a.qt_conv_unid_fornec) END   ELSE 0 END  desc,
		obter_result_cot_fornec_item(a.nr_sequencia),
		CASE WHEN obter_se_qt_dif_item_forn_cot(a.nr_cot_compra, a.nr_item_cot_compra)='N' THEN 			a.vl_presente  ELSE coalesce(a.vl_unitario_liquido, a.vl_presente) END  desc,
		a.vl_presente desc,
		a.qt_prioridade,
		a.vl_preco_liquido desc;

C04 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(b.ie_status,'AH')
	from	cot_compra_forn b,
		cot_compra_forn_item a
	where	a.nr_seq_cot_forn	= b.nr_sequencia
	and	a.nr_cot_compra 	= nr_cot_compra_p
	and	a.nr_item_cot_compra 	= nr_item_cot_compra_p
	and	a.vl_unitario_material	> 0
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((cd_cgc_fornecedor_venc_alt_w = 'X') or (b.cd_cgc_fornecedor = cd_cgc_fornecedor_venc_alt_w))
	order by
		CASE WHEN ie_utiliza_conv_fornec_w='S' THEN 			CASE WHEN coalesce(a.qt_conv_unid_fornec,0)=0 THEN 				dividir(a.vl_presente, (obter_dados_material(a.cd_material,'QCE'))::numeric )  ELSE dividir(a.vl_presente, a.qt_conv_unid_fornec) END   ELSE 0 END  desc,
		coalesce(a.vl_unitario_material, a.vl_presente) desc,
		a.vl_presente desc,
		a.qt_prioridade,
		a.vl_preco_liquido desc;


BEGIN

select	coalesce(max(nr_seq_cot_item_forn),'0'),
	coalesce(max(ie_regra_preco),'N')
into STRICT	nr_seq_item_fornec_w,
	ie_regra_preco_w
from	cot_compra_item
where	nr_cot_compra		= nr_cot_compra_p
and	nr_item_cot_compra	= nr_item_cot_compra_p;

select	cd_estabelecimento,
	ie_forma_venc_cotacao
into STRICT	cd_estabelecimento_w,
	ie_forma_venc_cotacao_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

select	coalesce(max(ie_somente_cot_encerrada),'N'),
	coalesce(max(coalesce(ie_forma_venc_cotacao_w, ie_forma_venc_cotacao)),'N'),
	coalesce(max(ie_utiliza_conv_fornec),'N'),
	coalesce(max(ie_gerar_oc_itens_confirm),'N')
into STRICT	ie_somente_encerrada_w,
	ie_rentabilidade_w,
	ie_utiliza_conv_fornec_w,
	ie_gerar_oc_itens_confirm_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

begin
select	1
into STRICT	qt_existe_w
from	regra_conv_calc_cotacao
where	cd_estabelecimento = cd_estabelecimento_w
and	ie_situacao = 'A'  LIMIT 1;
exception
when others then
	qt_existe_w	:=	0;
end;

if (qt_existe_w > 0) then
	begin
	nr_seq_item_fornec_w := obter_venc_cot_for_item_regra(nr_cot_compra_p,nr_item_cot_compra_p);
	end;
else
	begin

	/*Para processos da bionexo. É quando já vem o fornecedor selecionado no XML da bionexo. Entao independente do preço, esse fornecedor é sempre o vencedor.*/

	cd_cgc_fornecedor_venc_alt_w := 'X';

	if (ie_gerar_oc_itens_confirm_w = 'S') then

		select	coalesce(cd_cgc_fornecedor_venc_alt,'X')
		into STRICT	cd_cgc_fornecedor_venc_alt_w
		from	cot_compra_item
		where	nr_cot_compra = nr_cot_compra_p
		and	nr_item_cot_compra = nr_item_cot_compra_p;
	end if;
	/*Fim*/

	if (nr_seq_item_fornec_w = 0) then
		begin
		if (coalesce(ie_rentabilidade_w,'N') = 'N') then
			if (ie_regra_preco_w = 'N') then
				open c01;
				loop
				FETCH C01 into
					nr_seq_item_fornec_w,
					ie_status_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					if (ie_somente_encerrada_w = 'N') or
						((ie_somente_encerrada_w = 'S') and (ie_status_w in ('AH','FF','FH'))) then
						nr_seq_item_fornec_w		:= nr_seq_item_fornec_w;
					end if;
				END LOOP;
				CLOSE C01;
			else
				open c02;
				loop
				FETCH C02 into
					nr_seq_item_fornec_w,
					ie_status_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					if (ie_somente_encerrada_w = 'N') or
						((ie_somente_encerrada_w = 'S') and (ie_status_w in ('AH','FF','FH'))) then
						nr_seq_item_fornec_w		:= nr_seq_item_fornec_w;
					end if;
				END LOOP;
				CLOSE C02;
			end if;
		elsif (coalesce(ie_rentabilidade_w,'N') = 'S') then
			open c03;
				loop
				FETCH C03 into
					nr_seq_item_fornec_w,
					ie_status_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					if (ie_somente_encerrada_w = 'N') or
						((ie_somente_encerrada_w = 'S') and (ie_status_w in ('AH','FF','FH'))) then
						nr_seq_item_fornec_w		:= nr_seq_item_fornec_w;
					end if;
				END LOOP;
				CLOSE C03;
		elsif (coalesce(ie_rentabilidade_w,'N') = 'U') then
			open c04;
				loop
				FETCH C04 into
					nr_seq_item_fornec_w,
					ie_status_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
					if (ie_somente_encerrada_w = 'N') or
						((ie_somente_encerrada_w = 'S') and (ie_status_w in ('AH','FF','FH'))) then
						nr_seq_item_fornec_w		:= nr_seq_item_fornec_w;
					end if;
				END LOOP;
				CLOSE C04;
		end if;
		end;
	end if;
	end;
end if;

RETURN	nr_seq_item_fornec_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_venc_cot_fornec_item ( nr_cot_compra_p bigint, nr_item_cot_compra_p bigint) FROM PUBLIC;

