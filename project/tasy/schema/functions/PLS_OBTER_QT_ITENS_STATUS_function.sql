-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qt_itens_status ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, ie_tipo_consulta_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint) RETURNS bigint AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter a quantidade de itens do status soliictado pela variável ie_tipo_consulta_p, onde:

IE_TIPO_CONSULTA_P
S - Itens autorizados
N - Itens negados
A - Itens em auditoria
I - Aguardando autorização intercâmbio
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_retorno_w			bigint;
qt_proc_autorizado_w		bigint;
qt_mat_autorizado_w		bigint;
qt_proc_negado_w		bigint;
qt_mat_negado_w			bigint;
qt_proc_auditoria_w		bigint;
qt_mat_auditoria_w		bigint;
qt_proc_interc_w		bigint;
qt_mat_interc_w			bigint;


BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	if (ie_tipo_consulta_p	= 'S') then
		select	count(1)
		into STRICT	qt_proc_autorizado_w
		from	pls_guia_plano_proc
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	in ('L', 'P', 'S');

		select	count(1)
		into STRICT	qt_mat_autorizado_w
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	in ('L', 'P', 'S');

		qt_retorno_w	:= qt_proc_autorizado_w + qt_mat_autorizado_w;
	elsif (ie_tipo_consulta_p	= 'N') then
		select	count(1)
		into STRICT	qt_proc_negado_w
		from	pls_guia_plano_proc
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	in ('K', 'M', 'N');

		select	count(1)
		into STRICT	qt_mat_negado_w
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	in ('K', 'M', 'N');

		qt_retorno_w	:= qt_proc_negado_w + qt_mat_negado_w;
	elsif (ie_tipo_consulta_p	= 'A') then
		select	count(1)
		into STRICT	qt_proc_auditoria_w
		from	pls_guia_plano_proc
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'A';

		select	count(1)
		into STRICT	qt_mat_auditoria_w
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'A';

		qt_retorno_w	:= qt_proc_auditoria_w + qt_mat_auditoria_w;
	elsif (ie_tipo_consulta_p	= 'I') then
		select	count(1)
		into STRICT	qt_proc_interc_w
		from	pls_guia_plano_proc
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'I';

		select	count(1)
		into STRICT	qt_mat_interc_w
		from	pls_guia_plano_mat
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_status	= 'I';

		qt_retorno_w	:= qt_proc_interc_w + qt_mat_interc_w;
	end if;
end if;

return	qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qt_itens_status ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, ie_tipo_consulta_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint) FROM PUBLIC;

