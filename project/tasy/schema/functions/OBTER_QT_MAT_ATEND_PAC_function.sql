-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_mat_atend_pac ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_opcao_p bigint default 1) RETURNS bigint AS $body$
DECLARE



qt_suspensos_w			double precision;
qt_atend_w				double precision;
ds_retorno_w			double precision;
qt_inativos_w			double precision;
qt_etapa_especial_w		double precision := 0;
ie_etapa_especial_w		varchar(1);
qt_material_w			prescr_material.qt_material%type;
qt_total_dispensar_w	prescr_material.qt_total_dispensar%type;
qt_disp_dialise_w 		prescr_mat_hor.qt_dispensar_hor%type := 0;
qt_disp_peritoneal_w 	prescr_mat_hor.qt_dispensar_hor%type := 0;
qt_aprazados_w 			prescr_mat_hor.qt_dispensar%type := 0;
cd_intervalo_w			prescr_material.cd_intervalo%type;


BEGIN

select	max(qt_material),
		max(qt_total_dispensar),
		max(cd_intervalo)
into STRICT	qt_material_w,
		qt_total_dispensar_w,
		cd_intervalo_w
from	prescr_material
where	nr_prescricao 	= nr_prescricao_p
and		nr_sequencia	= nr_seq_prescr_p;

select	coalesce(sum(coalesce(qt_estoque,qt_material)),0)
into STRICT	qt_atend_w
from	material_atend_paciente
where	nr_prescricao 		= nr_prescricao_p
and		nr_sequencia_prescricao	= nr_seq_prescr_p;

select	coalesce(sum(qt_dispensar_hor),0)
into STRICT	qt_suspensos_w
from	prescr_mat_hor
where	nr_prescricao 		= nr_prescricao_p
and		nr_seq_material		= nr_seq_prescr_p
and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '')
and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

select	coalesce(sum(qt_dispensar_hor),0)
into STRICT	qt_inativos_w
from	prescr_mat_hor
where	nr_prescricao 	= nr_prescricao_p
and		nr_seq_material	= nr_seq_prescr_p
and		coalesce(dt_suspensao::text, '') = ''
and		ie_situacao = 'I'
and		coalesce(obter_se_horario_valido_inter(dt_horario, cd_intervalo_w), 'A') = 'I'
and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

select	coalesce(sum(qt_dispensar_hor),0)
into STRICT	qt_etapa_especial_w
from	prescr_mat_hor
where	nr_prescricao 		= nr_prescricao_p
and		nr_seq_material		= nr_seq_prescr_p
and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S'
and		coalesce(ie_etapa_especial, 'N') = 'S'
and		ie_agrupador = 4;

--Específico para peritoneal
select 	coalesce(max(qt_disp_peritoneal ), 0)
into STRICT	qt_disp_peritoneal_w
from (
	SELECT	coalesce(sum(d.qt_dispensar_hor),0) qt_disp_peritoneal
	from 	hd_prescricao a,
			prescr_solucao b,
			prescr_mat_hor d
	where 	a.nr_sequencia		= b.nr_seq_dialise
	and  	b.nr_prescricao   	= d.nr_prescricao
	and  	b.nr_seq_solucao   	= d.nr_seq_solucao
	and		a.nr_prescricao 	= nr_prescricao_p
	and		d.nr_seq_material	= nr_seq_prescr_p
	and 	(a.ie_tipo_peritoneal IS NOT NULL AND a.ie_tipo_peritoneal::text <> '')
	and 	b.ie_hemodialise 	= 'P'
	having	sum(a.nr_etapas) 	> 1) alias6;

--Específico para hemodiálise
select	coalesce(sum(d.qt_dispensar_hor),0)
into STRICT	qt_disp_dialise_w
from 	hd_prescricao a,
		prescr_solucao b,
		prescr_mat_hor d
where 	a.nr_sequencia		= b.nr_seq_dialise
and  	b.nr_seq_solucao   	= d.nr_seq_solucao
and  	b.nr_prescricao   	= d.nr_prescricao
and		a.nr_prescricao 	= nr_prescricao_p
and		d.nr_seq_material	= nr_seq_prescr_p
and 	b.ie_hemodialise 	<> 'P'
and 	(a.ie_tipo_hemodialise IS NOT NULL AND a.ie_tipo_hemodialise::text <> '');

--Verifica itens aprazados
select	coalesce(sum(qt_dispensar),0)
into STRICT 	qt_aprazados_w
from	prescr_mat_hor
where	nr_prescricao 		= nr_prescricao_p
and		nr_seq_material		= nr_seq_prescr_p
and		coalesce(dt_suspensao::text, '') = ''
and		coalesce(ie_situacao::text, '') = ''
and 	coalesce(ie_aprazado,'N') = 'S'
and 	coalesce(cd_motivo_baixa,0) = 0
and		obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

if (qt_disp_peritoneal_w > 0)then
	qt_disp_peritoneal_w := (qt_disp_peritoneal_w - qt_total_dispensar_w);
end if;

if (qt_disp_dialise_w > 0)then
	qt_disp_dialise_w := (qt_disp_dialise_w - qt_total_dispensar_w);
end if;

if (ie_opcao_p = 1) then
	ds_retorno_w	:= (qt_suspensos_w + qt_atend_w + qt_inativos_w) - qt_etapa_especial_w - qt_disp_dialise_w - qt_disp_peritoneal_w - qt_aprazados_w;
elsif (ie_opcao_p = 2) then
	ds_retorno_w	:= (qt_material_w + qt_etapa_especial_w + qt_disp_dialise_w + qt_disp_peritoneal_w);

end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_mat_atend_pac ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_opcao_p bigint default 1) FROM PUBLIC;

