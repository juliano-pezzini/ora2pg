-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_marcas ( cd_material_p bigint, ie_opcao_p text, ie_quebra_linha_p text) RETURNS varchar AS $body$
DECLARE


cd_material_w		integer;
ds_marca_w		varchar(120);
Resultado_w	 	varchar(2000);
Quebra_w		varchar(10) 	:= chr(13) || chr(10);
cd_referencia_w		varchar(80);
ds_marca_ref_w		varchar(2000);

c01 CURSOR FOR
SELECT	a.cd_material,
	d.ds_marca,
	c.cd_referencia,
	substr(CASE WHEN c.cd_referencia='' THEN d.ds_marca  ELSE d.ds_marca || ' (' || c.cd_referencia || ')' END ,1,2000) ds_marca_ref
from	material a,
	material_marca c,
	marca d
where	a.cd_material	= c.cd_material
and	c.nr_sequencia	= d.nr_sequencia
and	coalesce(c.ie_situacao,'A') = 'A'
and	a.cd_material	= cd_material_p
order by	coalesce(c.qt_prioridade, 0) desc;

c02 CURSOR FOR
SELECT	a.cd_material,
	d.ds_marca,
	c.cd_referencia,
	substr(CASE WHEN c.cd_referencia='' THEN d.ds_marca  ELSE d.ds_marca || ' (' || c.cd_referencia || ')' END ,1,2000) ds_marca_ref
from	material a,
	material_marca c,
	marca d
where	a.cd_material	= c.cd_material
and	c.nr_sequencia	= d.nr_sequencia
and	coalesce(c.ie_situacao,'A') = 'A'
and	a.cd_material	= cd_material_p
and (c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento or coalesce(c.cd_estabelecimento::text, '') = '')
order by	coalesce(c.qt_prioridade, 0) desc;


BEGIN

/* Opções
D	- Descrição
D#	- Descrição separado por #
C	- Código
CD	- Código e Descrição
D;	- Descricao separado por ;
DR	- Descricao concatenado com a Referência
R	- Referência
D/	- Descrição separado por /
DC	- Descrição, marcas do estabelecimento logado
*/
if (coalesce(ie_quebra_Linha_p,'N') <> 'S') then
	quebra_w		:= '  ';
end if;

if (ie_opcao_p = 'DC') then
	OPEN c02;
	LOOP
	FETCH c02 into
		cd_material_w,
		ds_marca_w,
		cd_referencia_w,
		ds_marca_ref_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		Resultado_w	:=	substr(Resultado_w || ds_marca_w || quebra_w,1,2000);
		end;
	END LOOP;
else
	OPEN C01;
	LOOP
	FETCH C01 into
		cd_material_w,
		ds_marca_w,
		cd_referencia_w,
		ds_marca_ref_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_opcao_p = 'CD') then
			Resultado_w	:=	substr(Resultado_w || cd_material_w || ' - ' || ds_marca_w || quebra_w,1,2000);
		elsif (ie_opcao_p = 'D') then
			Resultado_w	:=	substr(Resultado_w || ds_marca_w || quebra_w,1,2000);
		elsif (ie_opcao_p = 'D#') then
			if (coalesce(Resultado_w::text, '') = '') then
				Resultado_w	:=	substr(Resultado_w || ds_marca_w,1,2000);
			else
				Resultado_w	:=	substr(Resultado_w || '#' || ds_marca_w,1,2000);
			end if;
		elsif (ie_opcao_p = 'D;') then
			if (coalesce(Resultado_w::text, '') = '') then
				Resultado_w	:=	substr(Resultado_w || ds_marca_w,1,2000);
			else
				Resultado_w	:=	substr(Resultado_w || '; ' || ds_marca_w,1,2000);
			end if;
		elsif (ie_opcao_p = 'D/') then
			if (coalesce(Resultado_w::text, '') = '') then
				Resultado_w	:=	substr(Resultado_w || ds_marca_w,1,2000);
			else
				Resultado_w	:=	substr(Resultado_w || '/' || ds_marca_w,1,2000);
			end if;
		elsif (ie_opcao_p = 'DR') then
			if (coalesce(Resultado_w::text, '') = '') then
				Resultado_w	:=	substr(Resultado_w || ds_marca_ref_w,1,2000);
			else
				Resultado_w	:=	substr(Resultado_w || '; ' || ds_marca_ref_w,1,2000);
			end if;
		elsif (ie_opcao_p = 'C') then
			Resultado_w	:=	substr(Resultado_w || cd_material_w || quebra_w,1,2000);
		elsif (ie_opcao_p = 'R') then
			Resultado_w	:= 	substr(cd_referencia_w,1,2000);
		end if;
		end;
	END LOOP;
end if;

RETURN resultado_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_marcas ( cd_material_p bigint, ie_opcao_p text, ie_quebra_linha_p text) FROM PUBLIC;

