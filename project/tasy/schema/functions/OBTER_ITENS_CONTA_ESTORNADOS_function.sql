-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_itens_conta_estornados ( nr_interno_conta_p bigint, ie_proc_mat_p text, nr_seq_item_p bigint) RETURNS varchar AS $body$
DECLARE


/*	ie_proc_mat_p

P	Procedimentos
M	Materiais

*/
ds_lista_itens_w	varchar(255);
qt_item_param_w		double precision;
cd_item_param_w		bigint;
cd_item_w		bigint;
qt_item_w		double precision;
nr_sequencia_w		bigint;
nr_seq_positivo_w	bigint;
dt_conta_w		timestamp;

c01 CURSOR FOR
SELECT	a.cd_procedimento cd_item,
	a.qt_procedimento qt_item,
	a.nr_sequencia,
	coalesce(a.dt_conta,clock_timestamp()) dt_conta
from	procedimento_paciente a
where	abs(a.qt_procedimento)	= abs(coalesce(qt_item_param_w,a.qt_procedimento))
and	a.cd_procedimento	= coalesce(cd_item_param_w,a.cd_procedimento)
and	a.qt_procedimento	< 0
and	a.nr_interno_conta	= nr_interno_conta_p
order by	1;

c02 CURSOR FOR
SELECT	a.cd_material cd_item,
	a.qt_material qt_item,
	a.nr_sequencia,
	coalesce(a.dt_conta,clock_timestamp()) dt_conta
from	material_atend_paciente a
where	abs(a.qt_material)	= abs(coalesce(qt_item_param_w,a.qt_material))
and	a.cd_material		= coalesce(cd_item_param_w,a.cd_material)
and	a.qt_material		< 0
and	a.nr_interno_conta	= nr_interno_conta_p
order by	1;


BEGIN

if (ie_proc_mat_p	= 'P') then

	select	max(a.cd_procedimento),
		max(a.qt_procedimento)
	into STRICT	cd_item_param_w,
		qt_item_param_w
	from	procedimento_paciente a
	where	a.nr_sequencia	= nr_seq_item_p;

	/* percorre os itens negativos da conta */

	open	c01;
	loop
	fetch	c01 into
		cd_item_w,
		qt_item_w,
		nr_sequencia_w,
		dt_conta_w;
	exit	when(c01%notfound or length(ds_lista_itens_w) >= 235);

		/* procura um item positivo correspondente ao negativo para anular ambos, adicionando-os à lista */

		select	min(a.nr_sequencia)
		into STRICT	nr_seq_positivo_w
		from	procedimento_paciente a
		where (coalesce(ds_lista_itens_w::text, '') = '' or position(' ' || a.nr_sequencia in ds_lista_itens_w) = 0)
		and	trunc(coalesce(a.dt_conta,clock_timestamp()),'dd')	= trunc(dt_conta_w,'dd')	/* itens estornados terão a mesma data de atendimento */
		and	a.qt_procedimento	= abs(qt_item_w)
		and	a.cd_procedimento	= cd_item_w
		and	a.qt_procedimento	> 0
		and	a.nr_interno_conta	= nr_interno_conta_p;

		/* se existe um item positivo correspondente, ambos entram na lista. Senão, o item negativo não pode ser considerado como um estorno */

		if (nr_seq_positivo_w IS NOT NULL AND nr_seq_positivo_w::text <> '') then

			if (coalesce(ds_lista_itens_w::text, '') = '') then
				/* o espaço server para evitar que uma sequência seja identificada dentro de outra sequência */

				ds_lista_itens_w	:= ' ' || nr_sequencia_w || ', ' || nr_seq_positivo_w;
			else
				ds_lista_itens_w	:= ds_lista_itens_w || ', ' || nr_sequencia_w || ', ' || nr_seq_positivo_w;
			end if;

		end if;

	end	loop;
	close	c01;

elsif (ie_proc_mat_p	= 'M') then

	select	max(a.cd_material),
		max(a.qt_material)
	into STRICT	cd_item_param_w,
		qt_item_param_w
	from	material_atend_paciente a
	where	a.nr_sequencia	= nr_seq_item_p;

	/* percorre os itens negativos da conta */

	open	c02;
	loop
	fetch	c02 into
		cd_item_w,
		qt_item_w,
		nr_sequencia_w,
		dt_conta_w;
	exit	when(c02%notfound or length(ds_lista_itens_w) >= 235);

		/* procura um item positivo correspondente ao negativo para anular ambos, adicionando-os à lista */

		select	min(a.nr_sequencia)
		into STRICT	nr_seq_positivo_w
		from	material_atend_paciente a
		where (coalesce(ds_lista_itens_w::text, '') = '' or position(' ' || a.nr_sequencia in ds_lista_itens_w) = 0)
		and	trunc(coalesce(a.dt_conta,clock_timestamp()),'dd')	= trunc(dt_conta_w,'dd')	/* itens estornados terão a mesma data de atendimento */
		and	a.qt_material		= abs(qt_item_w)
		and	a.cd_material		= cd_item_w
		and	a.qt_material		> 0
		and	a.nr_interno_conta	= nr_interno_conta_p;

		/* se existe um item positivo correspondente, ambos entram na lista. Senão, o item negativo não pode ser considerado como um estorno */

		if (nr_seq_positivo_w IS NOT NULL AND nr_seq_positivo_w::text <> '') then

			if (coalesce(ds_lista_itens_w::text, '') = '') then
				/* o espaço server para evitar que uma sequência seja identificada dentro de outra sequência */

				ds_lista_itens_w	:= ' ' || nr_sequencia_w || ', ' || nr_seq_positivo_w;
			else
				ds_lista_itens_w	:= ds_lista_itens_w || ', ' || nr_sequencia_w || ', ' || nr_seq_positivo_w;
			end if;

		end if;

	end	loop;
	close	c02;

end if;

return ds_lista_itens_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_itens_conta_estornados ( nr_interno_conta_p bigint, ie_proc_mat_p text, nr_seq_item_p bigint) FROM PUBLIC;

