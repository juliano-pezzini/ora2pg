-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION check_kv_date_between_quarter ( nr_seq_tipo_admissao_fat_p atendimento_paciente.nr_seq_tipo_admissao_fat%type, nr_seq_tipo_episodio_p episodio_paciente.nr_seq_tipo_episodio%type, dt_episodio_p episodio_paciente.dt_episodio%type, dt_entrada_p atendimento_paciente.dt_entrada%type) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1);
nr_quarter_episode_w	integer;
nr_quarter_entrada_w	integer;
is_kv_w			varchar(1);
ie_stop_w		varchar(1);

months_c CURSOR FOR
SELECT	suepva.ie_mes ie_mes
from	subtipo_episodio subepi,
	subtipo_episodio_validade suepva
where	suepva.nr_seq_tipo = subepi.nr_sequencia
and	subepi.nr_seq_tipo_admissao = nr_seq_tipo_admissao_fat_p
and	subepi.nr_seq_tipo_episodio = nr_seq_tipo_episodio_p
order by (suepva.ie_mes)::numeric;

BEGIN

ds_retorno_w := 'N';
ie_stop_w    := 'N';

if ((nr_seq_tipo_admissao_fat_p IS NOT NULL AND nr_seq_tipo_admissao_fat_p::text <> '') and
	(nr_seq_tipo_episodio_p IS NOT NULL AND nr_seq_tipo_episodio_p::text <> '') and
		(dt_entrada_p IS NOT NULL AND dt_entrada_p::text <> '') and 
			(dt_episodio_p IS NOT NULL AND dt_episodio_p::text <> ''))then

	select  coalesce(max('S'), 'N')
	into STRICT	is_kv_w
	from    tipo_admissao_fat taf
	where   taf.nr_sequencia in ( SELECT  max(se.nr_seq_tipo_admissao)
				      from    subtipo_episodio se 
				      where   se.nr_seq_tipo_admissao = nr_seq_tipo_admissao_fat_p 
				      and     se.nr_seq_tipo_episodio = nr_seq_tipo_episodio_p)
	and     taf.ie_tipo_kv = 'S'
	and     taf.ie_situacao = 'A';

	if (is_kv_w = 'S') then

		if ((to_char(dt_episodio_p,'mm'))::numeric  <= 3) then
			nr_quarter_episode_w := 1;
		elsif ((to_char(dt_episodio_p,'mm'))::numeric  <= 6) then
			nr_quarter_episode_w := 2;
		elsif ((to_char(dt_episodio_p,'mm'))::numeric  <= 9) then
			nr_quarter_episode_w := 3;		
		else
			nr_quarter_episode_w := 4;
		end if;

		if ((to_char(dt_entrada_p,'mm'))::numeric  <= 3) then
			nr_quarter_entrada_w := 1;
		elsif ((to_char(dt_entrada_p,'mm'))::numeric  <= 6) then
			nr_quarter_entrada_w := 2;
		elsif ((to_char(dt_entrada_p,'mm'))::numeric  <= 9) then
			nr_quarter_entrada_w := 3;		
		else
			nr_quarter_entrada_w := 4;
		end if;

		if (nr_quarter_episode_w <> nr_quarter_entrada_w) then
			for item in months_c loop
				if (ie_stop_w = 'N') then
					if (item.ie_mes <= 3) then
						if (nr_quarter_episode_w = 1) then
							ds_retorno_w := 'S';
							ie_stop_w := 'S';
						end if;
					elsif (item.ie_mes <= 6) then
						if (nr_quarter_episode_w = 2) then
							ds_retorno_w := 'S';
							ie_stop_w := 'S';
						end if;
					elsif (item.ie_mes <= 9) then
						if (nr_quarter_episode_w = 3) then
							ds_retorno_w := 'S';
							ie_stop_w := 'S';
						end if;	
					else
						if (nr_quarter_episode_w = 4) then
							ds_retorno_w := 'S';
							ie_stop_w := 'S';
						end if;	
					end if;
				end if;
			end loop;
		end if;
	end if;
	
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION check_kv_date_between_quarter ( nr_seq_tipo_admissao_fat_p atendimento_paciente.nr_seq_tipo_admissao_fat%type, nr_seq_tipo_episodio_p episodio_paciente.nr_seq_tipo_episodio%type, dt_episodio_p episodio_paciente.dt_episodio%type, dt_entrada_p atendimento_paciente.dt_entrada%type) FROM PUBLIC;

