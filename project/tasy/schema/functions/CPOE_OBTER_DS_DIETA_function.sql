-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_ds_dieta ( ie_tipo_dieta_p text, CD_DIETA_p bigint, cd_material_p bigint, cd_mat_prod1_p bigint, nr_seq_tipo_p bigint, dt_liberacao_p timestamp default null, ie_negrito_p text default 'N', dt_lib_suspensao_p timestamp default null, dt_suspensao_p timestamp default null, ie_administracao_p text default null, cd_intervalo_p text default null, cd_unid_med_prod1_p text default null, ie_via_leite1_p text default null, qt_dose_prod1_p bigint default null, cd_mat_prod2_p bigint default null, cd_unid_med_prod2_p text default null, qt_dose_prod2_p bigint default null, cd_mat_prod3_p bigint default null, cd_unid_med_prod3_p text default null, qt_dose_prod3_p bigint default null, cd_mat_prod4_p bigint default null, cd_unid_med_prod4_p text default null, qt_dose_prod4_p bigint default null, cd_mat_prod5_p bigint default null, cd_unid_med_prod5_p text default null, qt_dose_prod5_p bigint default null, ie_forma_p text default null, qt_dose_p bigint default null, cd_unidade_medida_dose_p text default null, ie_baixado_por_alta_p cpoe_dieta.ie_baixado_por_alta%type default null, dt_alta_medico_p cpoe_dieta.dt_alta_medico%type default null, ie_adep_p text default 'N', ie_via_aplicacao_p text default null, nr_seq_cpoe_p bigint default null, ds_horarios_p text default null, ie_revalidacao_p text default 'N', dt_fim_grid_p timestamp default null, ie_cpoe_p text default 'S') RETURNS varchar AS $body$
DECLARE


ds_retorno_w	 			varchar(4000);
ds_html_result_w    varchar(4000);
ds_components_w  			varchar(4000);
cd_unidade_medida_dose_w  	varchar(255);
ds_indentific_dieta_w			varchar(30);-- NAO REMOVER - Verfificar OS: 979988
ds_inf_npt_w				varchar(1000);
ie_dieta_enteral_w			cpoe_dieta.ie_dieta_enteral%type;
ie_via_aplicacao_w			cpoe_dieta.ie_via_aplicacao%type;
ds_tempo_adm_grid_w			varchar(100);
ds_retorno_tag_w varchar(1000);
ds_class_tag_w   varchar(5);
ie_needs_ackn_interface_w 	varchar(2);
ie_confirm_ackn_interface_w	varchar(2);
rule_quantity_w		integer;
ie_dbcheck_material_w	varchar(1);
ie_dbcheck_mat_prod1_w	varchar(1);
ie_dbcheck_mat_prod2_w	varchar(1);
ie_dbcheck_mat_prod3_w	varchar(1);
ie_dbcheck_mat_prod4_w	varchar(1);
ie_dbcheck_mat_prod5_w	varchar(1);
			
		function bold( ds_valor_p text) return text is

		;
BEGIN
		return '<strong ' ||ds_indentific_dieta_w||'>' ||ds_valor_p||'</strong>';

		end;

    function add_div_item(ds_conteudo_p in varchar2) return varchar2 is
		
    start_html varchar2(100);
		end_html varchar2(50);

	  begin
		start_html := '<br> ';
		end_html := null;

		if (ie_cpoe_p = 'S') then
			start_html := '<div class="cpoe-div-item-comp">';
			end_html := '</div>';
		end if;

    ds_html_result_w := start_html || ds_conteudo_p || end_html;

		return ds_html_result_w;
	
    end;
	
	function get_UoM( ds_valor_p varchar2) return varchar2 is
	begin
		if (ds_valor_p = 'ml') and (pkg_i18n.get_user_locale() = 'en_AU') then
			return 'mL';
		else
			return ds_valor_p;
		end if;
	end;

        function dose_unidade_medida return varchar2 is	
            qt_dose_w           varchar2(50);
        begin
            --Colocar '0' antes da virgula			
            qt_dose_w := qt_dose_prod1_p;
            if (substr(qt_dose_prod1_p,1,1) = ',') then				
                qt_dose_w	:= '0' || qt_dose_prod1_p;

                qt_dose_w	:= replace(qt_dose_w,'.',',');			
            end if;			

            return ' ' || qt_dose_w || ' ' || get_UoM(cd_unid_med_prod1_p) || ' ';	
        end;

		function adep_dose_unidade_medida return varchar2 is	
            qt_dose_w           varchar2(50 char);
        begin
            --Colocar '0' antes da virgula			
            qt_dose_w := qt_dose_prod1_p;
            if (substr(qt_dose_prod1_p,1,1) = ',') then				
                qt_dose_w	:= '0' || qt_dose_prod1_p;

                qt_dose_w	:= replace(qt_dose_w,'.',',');			
            end if;			

            return ' ' || qt_dose_w || ' ' || Obter_Desc_Unid_Med(cd_unid_med_prod1_p) || ' ';	
        end;
		
		function cpoe_add_span_adic_info(ds_informacao_p	varchar2, ds_style_adic_p varchar2) return  varchar2 is
				ds_span_w	varchar2(2000);
		begin
			if ((trim(both ds_informacao_p) IS NOT NULL AND (trim(both ds_informacao_p))::text <> '')) then
			begin
				ds_span_w	:= '<span class=''material-adic-info '|| ds_style_adic_p ||'''> '||ds_informacao_p||'</span>';
				end;
			end if;
			return ds_span_w;

		end;
		
		function obter_se_item_futuro(nr_seq_cpoe_p cpoe_dieta.nr_sequencia%type, ie_revalidacao_p varchar2)  return varchar2 is
		begin
			if (coalesce(ie_revalidacao_p,'N') = 'S') then
				select max(ds_tempo_adm_grid)
				into STRICT ds_tempo_adm_grid_w
				from (
						SELECT max(CPOE_obter_prox_adm_grid_ang(  nr_sequencia, 'N',			
										nm_usuario, nr_atendimento,
										ie_administracao, cd_intervalo,	
										coalesce(dt_prox_geracao, clock_timestamp()),	
										dt_inicio, dt_fim,				
										'prescr_dieta',  'nr_seq_dieta_cpoe',  					
										'prescr_dieta_hor', 'nr_seq_dieta', null, dt_fim_grid_p, obter_funcao_ativa, ie_revalidacao_p)) ds_tempo_adm_grid
						from cpoe_dieta								
						where nr_sequencia = nr_seq_cpoe_p		
						and ie_tipo_dieta  = 'O'						
						and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 					
						and coalesce(dt_lib_suspensao::text, '') = ''
						
union

						SELECT max(CPOE_obter_prox_adm_grid_ang( nr_sequencia, 'D', 
										nm_usuario, nr_atendimento,
										ie_administracao, cd_intervalo,
										coalesce(dt_prox_geracao, clock_timestamp()),
										dt_inicio, dt_fim,
										'prescr_material',  'nr_seq_dieta_cpoe',
										'prescr_mat_hor', 'nr_seq_material', null, dt_fim_grid_p, obter_funcao_ativa, ie_revalidacao_p)) ds_tempo_adm_grid
						from cpoe_dieta
						where nr_sequencia = nr_seq_cpoe_p
						and ie_tipo_dieta  = 'E'
						and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
						and coalesce(dt_lib_suspensao::text, '') = ''
						
union

						select max(CPOE_obter_prox_adm_grid_ang( nr_sequencia, 'R',
										nm_usuario, nr_atendimento, 	
										ie_administracao, cd_intervalo,	
										coalesce(dt_prox_geracao, clock_timestamp()),	
										dt_inicio, dt_fim,				
										'prescr_material',  'nr_seq_dieta_cpoe',  	
										'prescr_mat_hor', 'nr_seq_material', null, dt_fim_grid_p, obter_funcao_ativa, ie_revalidacao_p)) ds_tempo_adm_grid
						from cpoe_dieta								
						where nr_sequencia = nr_seq_cpoe_p			
						and ie_tipo_dieta  = 'S'						
						and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 					
						and coalesce(dt_lib_suspensao::text, '') = ''  
						
union

						select max(CPOE_obter_prox_adm_grid_ang(nr_sequencia,'N', null,null,null,null,null,null,null,null,null,null,null,null, dt_fim_grid_p, obter_funcao_ativa, ie_revalidacao_p)) ds_tempo_adm_grid
						from cpoe_dieta							
						where nr_sequencia = nr_seq_cpoe_p			
						and ie_tipo_dieta  = 'J'						
						and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 					
						and coalesce(dt_lib_suspensao::text, '') = '' 						
						
union

						select max(CPOE_obter_prox_adm_grid_ang(nr_sequencia,'N', null,null,null,null,null,null,null,null,null,null,null,null, dt_fim_grid_p, obter_funcao_ativa, ie_revalidacao_p)) ds_tempo_adm_grid
						from cpoe_dieta
						where nr_sequencia = nr_seq_cpoe_p		
						and ie_tipo_dieta  = 'L'					
						and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 					
						and coalesce(dt_lib_suspensao::text, '') = ''
						) alias30;
				
				if (ds_tempo_adm_grid_w IS NOT NULL AND ds_tempo_adm_grid_w::text <> '') then
					return cpoe_add_span_adic_info(ds_tempo_adm_grid_w, 'cpoe_color_yellow cpoe_text_legend');
				end if;
			end if;
			return null;
		end;
		
	function get_order_interface(	ie_tipo_item_p in varchar2,
									nr_sequencia_p in number) return varchar2 is
	
	begin
		ie_needs_ackn_interface_w := cpoe_integracao_count(ie_tipo_item_p, nr_sequencia_p, 'BTN');
		ie_confirm_ackn_interface_w := cpoe_integracao_count(ie_tipo_item_p, nr_sequencia_p, 'TAG');
		
		if (ie_adep_p = 'S') then
			ds_class_tag_w := 'adep';
		else
			ds_class_tag_w := 'gpt';
		end if;
		
		ds_retorno_tag_w := '</div><div class="legend-cell-status-text-' || ds_class_tag_w ||'" style="cursor: default; flex-wrap: wrap;">
                <div class="legend-cell-content-tag-' || ds_class_tag_w ||'" style="cursor: default;">';

                        
    
		if (ie_adep_p = 'S') then
			ds_retorno_tag_w := ds_retorno_tag_w || '<div class="legend-cell-tag-adep" style="background-color: #FFE9AB; cursor: default; margin-top: 4px;"</div>';			
		else
			ds_retorno_tag_w := ds_retorno_tag_w || '<div class="legend-cell-tag-gpt" style="background-color: #FFE9AB; cursor: default; margin-top: 4px;" </div>';
		end if;
		
		if (ie_needs_ackn_interface_w = 'S') then
			ds_retorno_tag_w :=  ds_retorno_tag_w || obter_desc_expressao_idioma(1000214, null, wheb_usuario_pck.get_nr_seq_idioma)
			|| ' </div>
              </div>
          </div><div style="display:none">;';
		elsif (ie_confirm_ackn_interface_w = 'S') then
			ds_retorno_tag_w :=  ds_retorno_tag_w || obter_desc_expressao_idioma(1012943, null, wheb_usuario_pck.get_nr_seq_idioma)
			|| ' </div>
              </div>
          </div><div style="display:none">;';
    else
      ds_retorno_tag_w := null;
		end if;

		return ds_retorno_tag_w;
	end;
	
	function verifyDoubleCheckItem(	ie_double_check_w in varchar2) return varchar2 is

	begin

		ds_class_tag_w := 'adep';

		ds_retorno_tag_w := '</div><div class="legend-cell-status-text-' || ds_class_tag_w ||'" style="cursor: default; flex-wrap: wrap;">
                <div class="legend-cell-content-tag-' || ds_class_tag_w ||'" style="cursor: default;">';

		ds_retorno_tag_w := ds_retorno_tag_w || '<div class="legend-cell-tag-adep" style="background-color: #97B326; cursor: default; margin-top: 4px;"</div>';
		
		if (ie_double_check_w = 'S') then
			ds_retorno_tag_w :=  ds_retorno_tag_w || obter_desc_expressao_idioma(729215, null, wheb_usuario_pck.get_nr_seq_idioma)
			|| ' </div>
              </div>';
		else
			ds_retorno_tag_w := null;
		end if;

		return ds_retorno_tag_w;
	end;
	
begin

ds_indentific_dieta_w := 'class='''||'DS_DIETA_IDENTIFIC'||''''; -- NAO REMOVER - Verfificar OS: 979988
cd_unidade_medida_dose_w := cd_unidade_medida_dose_p;

ie_dbcheck_material_w := obter_se_medic_dupla_chec(cd_material_p, wheb_usuario_pck.get_cd_estabelecimento, null);

if (ie_tipo_dieta_p = 'O') and (CD_DIETA_p IS NOT NULL AND CD_DIETA_p::text <> '') then
	begin

	ds_retorno_w	:= substr(obter_nome_dieta(CD_DIETA_p),1,80);
    cd_unidade_medida_dose_w := Substr(Obter_Unid_Med_Dieta(CD_DIETA_p),1,150);

   	end;
elsif (ie_tipo_dieta_p = 'S') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
   	begin

	ds_retorno_w	:= obter_desc_material(cd_material_p);

	end;
elsif (ie_tipo_dieta_p = 'L') then
   	begin

		ds_retorno_w	:= obter_desc_material(cd_mat_prod1_p);
		ie_dbcheck_mat_prod1_w := obter_se_medic_dupla_chec(cd_mat_prod1_p, wheb_usuario_pck.get_cd_estabelecimento, null);

		if (coalesce(ie_adep_p, 'N') = 'N') then

			ds_components_w := CPOE_ADD_SPAN( dose_unidade_medida() ) || CPOE_ADD_SPAN(ie_via_leite1_p) || CPOE_ADD_SPAN(cd_intervalo_p) || CPOE_ADD_SPAN(ds_horarios_p);

			if (cd_mat_prod2_p IS NOT NULL AND cd_mat_prod2_p::text <> '') then
				ds_components_w := ds_components_w || add_div_item(CPOE_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod2_p)) || CPOE_ADD_SPAN(qt_dose_prod2_p ||' '|| get_UoM(cd_unid_med_prod2_p)));
			end if;

			if (cd_mat_prod3_p IS NOT NULL AND cd_mat_prod3_p::text <> '') then
				ds_components_w := ds_components_w || add_div_item(CPOE_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod3_p)) || CPOE_ADD_SPAN(qt_dose_prod3_p ||' '||get_UoM(cd_unid_med_prod3_p)));
			end if;

			if (cd_mat_prod4_p IS NOT NULL AND cd_mat_prod4_p::text <> '') then
				ds_components_w := ds_components_w || add_div_item(CPOE_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod4_p)) || CPOE_ADD_SPAN(qt_dose_prod4_p ||' '|| get_UoM(cd_unid_med_prod4_p)));
			end if;

			if (cd_mat_prod5_p IS NOT NULL AND cd_mat_prod5_p::text <> '') then
				ds_components_w := ds_components_w || add_div_item(CPOE_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod5_p)) || CPOE_ADD_SPAN(qt_dose_prod5_p ||' '|| get_UoM(cd_unid_med_prod5_p)));
			end if;

		else

			ds_components_w := CPOE_ADD_SPAN(adep_dose_unidade_medida) || CPOE_ADD_SPAN(obter_desc_via(ie_via_leite1_p)) || CPOE_ADD_SPAN(Obter_desc_interv_prescr(cd_intervalo_p) || CPOE_ADD_SPAN(ds_horarios_p));

			if (cd_mat_prod2_p IS NOT NULL AND cd_mat_prod2_p::text <> '') then
				ds_components_w := ds_components_w || '</br>' || ADEP_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod2_p)) || CPOE_ADD_SPAN(qt_dose_prod2_p ||' '|| Obter_Desc_Unid_Med(cd_unid_med_prod2_p));
				ie_dbcheck_mat_prod2_w := obter_se_medic_dupla_chec(cd_mat_prod2_p, wheb_usuario_pck.get_cd_estabelecimento, null);
			end if;

			if (cd_mat_prod3_p IS NOT NULL AND cd_mat_prod3_p::text <> '') then
				ds_components_w := ds_components_w || '</br>' || ADEP_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod3_p)) || CPOE_ADD_SPAN(qt_dose_prod3_p ||' '||Obter_Desc_Unid_Med(cd_unid_med_prod3_p));
				ie_dbcheck_mat_prod3_w := obter_se_medic_dupla_chec(cd_mat_prod3_p, wheb_usuario_pck.get_cd_estabelecimento, null);
			end if;

			if (cd_mat_prod4_p IS NOT NULL AND cd_mat_prod4_p::text <> '') then
				ds_components_w := ds_components_w || '</br>' || ADEP_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod4_p)) || CPOE_ADD_SPAN(qt_dose_prod4_p ||' '|| Obter_Desc_Unid_Med(cd_unid_med_prod4_p));
				ie_dbcheck_mat_prod4_w := obter_se_medic_dupla_chec(cd_mat_prod4_p, wheb_usuario_pck.get_cd_estabelecimento, null);
			end if;

			if (cd_mat_prod5_p IS NOT NULL AND cd_mat_prod5_p::text <> '') then
				ds_components_w := ds_components_w || '</br>' || ADEP_ADD_SPAN_MAT_COMP(obter_desc_material(cd_mat_prod5_p)) || CPOE_ADD_SPAN(qt_dose_prod5_p ||' '|| Obter_Desc_Unid_Med(cd_unid_med_prod5_p));
				ie_dbcheck_mat_prod5_w := obter_se_medic_dupla_chec(cd_mat_prod5_p, wheb_usuario_pck.get_cd_estabelecimento, null);
			end if;

		end if;

   	end;

elsif (ie_tipo_dieta_p = 'E') then
   begin

	if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
		ds_retorno_w	:= obter_desc_material(cd_material_p);
	elsif (CD_DIETA_p IS NOT NULL AND CD_DIETA_p::text <> '') then
		ds_retorno_w	:= obter_nome_dieta(CD_DIETA_p);
	end if;

   end;
elsif (ie_tipo_dieta_p = 'J')  and (nr_seq_tipo_p IS NOT NULL AND nr_seq_tipo_p::text <> '')then
   begin

   select   max(ds_tipo)
   into STRICT     ds_retorno_w
   from     rep_tipo_jejum
   where    nr_sequencia = nr_seq_tipo_p;

   end;

elsif (ie_tipo_dieta_p = 'P')then --Nutricao Parenteral
    begin

		select max(ie_dieta_enteral),
				max(ie_via_aplicacao)
			into STRICT ie_dieta_enteral_w,
			ie_via_aplicacao_w
		from cpoe_dieta
		where nr_sequencia = nr_seq_cpoe_p;
		
		if (ie_dieta_enteral_w = 'S') then
			ds_retorno_w	:= obter_desc_expressao(304204) ||' '||cpoe_add_span(coalesce(obter_desc_via(ie_via_aplicacao_w), ''));
		else
			ds_retorno_w	:= obter_desc_expressao(305331);
		end if;
	end;
elsif (ie_tipo_dieta_p = 'I') then --Nutricao Parenteral Infantil
	ds_retorno_w	:= obter_desc_expressao(722485);
end if;

if (ie_negrito_p = 'S') then
	ds_retorno_w:= bold(ds_retorno_w);
end if;

if ((ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ie_tipo_dieta_p in ('O','E','S'))) then

	if (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '') then
		if (coalesce(ie_adep_p, 'N') = 'N') then
			ds_retorno_w := ds_retorno_w || cpoe_add_span(to_char(qt_dose_p|| ' ' || coalesce(get_UoM(cd_unidade_medida_dose_w), '')));
		else
			ds_retorno_w := ds_retorno_w || cpoe_add_span(to_char(qt_dose_p|| ' ' || coalesce(Obter_Desc_Unid_Med(cd_unidade_medida_dose_w), '')));
			if (ie_tipo_dieta_p in ('E','S')) then
				ds_retorno_w := ds_retorno_w || ' ' || cpoe_add_span(coalesce(obter_desc_via(ie_via_aplicacao_p), ''));
			end if;
		end if;
	end if;

	if (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
		ds_retorno_w := ds_retorno_w || cpoe_add_span(Obter_desc_interv_prescr(cd_intervalo_p) || CPOE_ADD_SPAN(ds_horarios_p));
	else
		ds_retorno_w := ds_retorno_w || CPOE_ADD_SPAN(ds_horarios_p);
	end if;

end if;

if (coalesce(ie_adep_p, 'N') = 'S' and (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') and ie_tipo_dieta_p = 'P') then
	select	obter_desc_inf_npt_adulta(nr_prescricao,nr_sequencia)
	into STRICT	ds_inf_npt_w
	from	nut_pac
	where	nr_seq_npt_cpoe = nr_seq_cpoe_p  LIMIT 1;

	if (ds_inf_npt_w IS NOT NULL AND ds_inf_npt_w::text <> '') then
		ds_retorno_w := ds_retorno_w||cpoe_add_span(ds_inf_npt_w);
	end if;
end if;

if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ie_administracao_p IS NOT NULL AND ie_administracao_p::text <> '') then
	ds_retorno_w := ds_retorno_w ||CPOE_OBTER_SIGLA_TIPO_ADM(ie_administracao_p);
end if;

if	((dt_lib_suspensao_p IS NOT NULL AND dt_lib_suspensao_p::text <> '') and (dt_suspensao_p IS NOT NULL AND dt_suspensao_p::text <> '') 	 and (dt_suspensao_p <= clock_timestamp()) 	 and (coalesce(ie_adep_p,'N') <> 'S'))				 or
	  	((coalesce(dt_lib_suspensao_p::text, '') = '')    and (dt_fim_grid_p <= clock_timestamp())       and 
		coalesce(ie_adep_p,'N') = 'N') 
	then
	ds_retorno_w	:= '<del> '||ds_retorno_w|| '</del>';
end if;

if (ds_components_w IS NOT NULL AND ds_components_w::text <> '') then
	ds_retorno_w := ds_retorno_w || ds_components_w;
end if;

ds_retorno_w := ds_retorno_w || obter_se_item_futuro(nr_seq_cpoe_p, ie_revalidacao_p);

if (ie_adep_p = 'S' and ie_dbcheck_material_w = 'S' and ie_tipo_dieta_p = 'S') then
	ds_retorno_w := ds_retorno_w || verifyDoubleCheckItem('S');
end if;

select	count(*)
into STRICT	rule_quantity_w
from	cpoe_regra_ator LIMIT 1;
		
if (rule_quantity_w > 0 and ie_cpoe_p = 'N') then
	ds_retorno_w := ds_retorno_w || get_order_interface('N',nr_seq_cpoe_p);
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_ds_dieta ( ie_tipo_dieta_p text, CD_DIETA_p bigint, cd_material_p bigint, cd_mat_prod1_p bigint, nr_seq_tipo_p bigint, dt_liberacao_p timestamp default null, ie_negrito_p text default 'N', dt_lib_suspensao_p timestamp default null, dt_suspensao_p timestamp default null, ie_administracao_p text default null, cd_intervalo_p text default null, cd_unid_med_prod1_p text default null, ie_via_leite1_p text default null, qt_dose_prod1_p bigint default null, cd_mat_prod2_p bigint default null, cd_unid_med_prod2_p text default null, qt_dose_prod2_p bigint default null, cd_mat_prod3_p bigint default null, cd_unid_med_prod3_p text default null, qt_dose_prod3_p bigint default null, cd_mat_prod4_p bigint default null, cd_unid_med_prod4_p text default null, qt_dose_prod4_p bigint default null, cd_mat_prod5_p bigint default null, cd_unid_med_prod5_p text default null, qt_dose_prod5_p bigint default null, ie_forma_p text default null, qt_dose_p bigint default null, cd_unidade_medida_dose_p text default null, ie_baixado_por_alta_p cpoe_dieta.ie_baixado_por_alta%type default null, dt_alta_medico_p cpoe_dieta.dt_alta_medico%type default null, ie_adep_p text default 'N', ie_via_aplicacao_p text default null, nr_seq_cpoe_p bigint default null, ds_horarios_p text default null, ie_revalidacao_p text default 'N', dt_fim_grid_p timestamp default null, ie_cpoe_p text default 'S') FROM PUBLIC;

