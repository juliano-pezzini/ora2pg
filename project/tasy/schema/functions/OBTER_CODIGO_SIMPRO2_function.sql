-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_codigo_simpro2 ( cd_material_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, dt_atendimento_p timestamp, nr_seq_conv_simp_p bigint, nr_seq_marca_p bigint default null, nr_seq_mat_simp_p material_simpro.nr_sequencia%type default 0) RETURNS bigint AS $body$
DECLARE


cd_simpro_w		bigint 	:= 0;
ie_tipo_convenio_w	smallint;
ie_valor_simpro_w	varchar(1);

tx_pfb_w		convenio_simpro.tx_preco_fabrica%type		:= 1;
tx_pmc_w		convenio_simpro.tx_pmc%type			:= 1;
tx_pmc_neg_w		convenio_simpro.tx_pmc_neg%type			:= 1;
tx_pmc_pos_w		convenio_simpro.tx_pmc_pos%type			:= 1;
tx_pfb_neg_w		convenio_simpro.tx_pfb_neg%type			:= 1;
tx_pfb_pos_w		convenio_simpro.tx_pfb_pos%type			:= 1;
ie_tipo_preco_conv_w	convenio_simpro.ie_tipo_preco%type		:= 'C';
ie_dividir_indice_pmc_w	convenio_simpro.ie_dividir_indice_pmc%type	:= 'N';
ie_dividir_indice_pfb_w	convenio_simpro.ie_dividir_indice_pfb%type	:= 'N';

C01 CURSOR FOR
	SELECT 	a.cd_simpro
	from	material_simpro a
	where	a.cd_material	= cd_material_p
	and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p, 0))	= coalesce(nr_seq_marca_p, 0)
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_p,0)) = coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) =	coalesce(cd_estabelecimento_p,0)
	and	dt_atendimento_p between coalesce(a.dt_vigencia, dt_atendimento_p) and coalesce(a.dt_final_vigencia, dt_atendimento_p)
	and	coalesce(a.ie_situacao,'A')	= 'A'
	order by	
		coalesce(nr_seq_marca_p, 0),
		coalesce(a.cd_estabelecimento, 0),		
		coalesce(a.cd_convenio,0),
		coalesce(a.ie_tipo_convenio,0),
		coalesce(a.dt_vigencia, dt_atendimento_p - 5000);
		
C02 CURSOR FOR
	SELECT 	a.cd_simpro
	from 	simpro_preco b,
		material_simpro a
	where	a.cd_simpro						= b.cd_simpro
	and	a.cd_material						= cd_material_p
	and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p, 0))	= coalesce(nr_seq_marca_p, 0)
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_p,0)) 		= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
	and 	dt_atendimento_p between coalesce(a.dt_vigencia, dt_atendimento_p) and coalesce(a.dt_final_vigencia, dt_atendimento_p)
	and 	b.dt_vigencia 						<= coalesce(dt_atendimento_p,clock_timestamp())
	and	coalesce(a.ie_situacao,'A')					= 'A'
	order by	
		coalesce(b.vl_preco_fabrica,0) asc,
		coalesce(b.vl_preco_venda,0) asc;
		
C03 CURSOR FOR
	SELECT 	a.cd_simpro
	from 	simpro_preco b,
		material_simpro a
	where	a.cd_simpro						= b.cd_simpro
	and	a.cd_material						= cd_material_p
	and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p, 0))	= coalesce(nr_seq_marca_p, 0)
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_p,0)) 		= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
	and 	dt_atendimento_p between coalesce(a.dt_vigencia, dt_atendimento_p) and coalesce(a.dt_final_vigencia, dt_atendimento_p)
	and 	b.dt_vigencia 						<= coalesce(dt_atendimento_p,clock_timestamp())
	and	coalesce(a.ie_situacao,'A')					= 'A'
	order by	
		coalesce(dividir(b.vl_preco_fabrica, a.qt_conversao),0) asc,
		coalesce(dividir(b.vl_preco_venda, a.qt_conversao),0) asc;
	
C04 CURSOR FOR
	SELECT	a.cd_simpro
	from	simpro_cadastro b,
		material_simpro a
	where	a.cd_simpro						= b.cd_simpro
	and	a.cd_material						= cd_material_p
	and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p,0))		= coalesce(nr_seq_marca_p,0)
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(b.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_p,0)) 		= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0))	= coalesce(ie_tipo_convenio_w,0)
	and 	dt_atendimento_p between coalesce(a.dt_vigencia, dt_atendimento_p) and coalesce(a.dt_final_vigencia, dt_atendimento_p)
	and	coalesce(a.ie_situacao,'A')					= 'A'
	order by
		coalesce(nr_seq_marca_p,0),
		coalesce(a.cd_estabelecimento, 0),		
		coalesce(a.cd_convenio,0),
		coalesce(a.ie_tipo_convenio,0),
		coalesce(obter_valor_preco_simpro(	cd_estabelecimento_p,
						cd_convenio_p,
						cd_material_p,
						a.cd_simpro,
						tx_pfb_w,
						tx_pmc_w,
						dt_atendimento_p,
						ie_tipo_preco_conv_w,
						tx_pmc_neg_w,
						tx_pmc_pos_w,
						tx_pfb_neg_w,
						tx_pfb_pos_w,
						ie_dividir_indice_pmc_w,
						ie_dividir_indice_pfb_w,
						nr_seq_marca_p),0),
		coalesce(a.dt_vigencia, dt_atendimento_p - 5000);
		

BEGIN

if	(nr_seq_mat_simp_p IS NOT NULL AND nr_seq_mat_simp_p::text <> '') and coalesce(nr_seq_mat_simp_p, 0) > 0 then

	select	max(cd_simpro)
	into STRICT	cd_simpro_w
	from	material_simpro
	where	nr_sequencia = nr_seq_mat_simp_p;
	
else	

	if (coalesce(cd_convenio_p,0) > 0) then
		select	coalesce(max(ie_tipo_convenio),0)
		into STRICT	ie_tipo_convenio_w
		from	convenio
		where	cd_convenio = cd_convenio_p;
	end if;

	if (coalesce(cd_estabelecimento_p,0) > 0) then
		select	coalesce(max(ie_valor_simpro),'N')
		into STRICT	ie_valor_simpro_w
		from	parametro_faturamento
		where	cd_estabelecimento = cd_estabelecimento_p;
	end if;

	if (coalesce(ie_valor_simpro_w,'N') = 'N') then

		open C01;
		loop
		fetch C01 into	
			cd_simpro_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			cd_simpro_w	:= cd_simpro_w;
			end;
		end loop;
		close C01;
		
	elsif (coalesce(ie_valor_simpro_w,'N') = 'S') then

		open C02;
		loop
		fetch C02 into	
			cd_simpro_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			cd_simpro_w	:= cd_simpro_w;
			end;
		end loop;
		close C02;
		
	elsif (coalesce(ie_valor_simpro_w,'N') = 'C') then

		open C03;
		loop
		fetch C03 into	
			cd_simpro_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			cd_simpro_w	:= cd_simpro_w;
			end;
		end loop;
		close C03;
		
	elsif (coalesce(ie_valor_simpro_w,'N') = 'V') then

		if (coalesce(nr_seq_conv_simp_p,0) > 0) then
			select	tx_preco_fabrica,
				tx_pmc,
				tx_pmc_neg,
				tx_pmc_pos,
				tx_pfb_neg,
				tx_pfb_pos,
				ie_tipo_preco,
				ie_dividir_indice_pmc,
				ie_dividir_indice_pfb
			into STRICT	tx_pfb_w,
				tx_pmc_w,
				tx_pmc_neg_w,
				tx_pmc_pos_w,
				tx_pfb_neg_w,
				tx_pfb_pos_w,
				ie_tipo_preco_conv_w,
				ie_dividir_indice_pmc_w,
				ie_dividir_indice_pfb_w
			from	convenio_simpro
			where	nr_sequencia = nr_seq_conv_simp_p;
		end if;

		open C04;
		loop
		fetch C04 into	
			cd_simpro_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			cd_simpro_w	:= cd_simpro_w;
			end;
		end loop;
		close C04;

	end if;

end if;
	
return 	cd_simpro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_codigo_simpro2 ( cd_material_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, dt_atendimento_p timestamp, nr_seq_conv_simp_p bigint, nr_seq_marca_p bigint default null, nr_seq_mat_simp_p material_simpro.nr_sequencia%type default 0) FROM PUBLIC;

