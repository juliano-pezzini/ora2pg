-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION mprev_val_prof_func (dt_inclusao_p timestamp, dt_exclusao_p timestamp, nr_seq_equipe_p bigint, cd_pessoa_fisica_p bigint, nr_seq_atual_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(10);
dt_inclusao_w	timestamp;
dt_exclusao_w	timestamp;
nr_seq_prof_w	bigint	:= null;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar o registro de um novo profissional, impedindo o cadastro de uma mesma pessoa ativa na função.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN
/* Quando houver duas datas informadas */

if (dt_exclusao_p IS NOT NULL AND dt_exclusao_p::text <> '') then
	/* Datas entre o período */

	select	max(nr_sequencia)
	into STRICT	nr_seq_prof_w
	from	mprev_equipe_profissional
	where	nr_seq_equipe = nr_seq_equipe_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	nr_seq_atual_p <> nr_sequencia
	and	(
		(dt_inclusao_p between dt_inclusao and dt_exclusao) or (dt_exclusao_p between dt_inclusao and dt_exclusao) or (dt_inclusao between dt_inclusao_p and dt_exclusao_p) or (dt_exclusao between dt_inclusao_p and dt_exclusao_p)
		)
	and	(dt_exclusao IS NOT NULL AND dt_exclusao::text <> '');

	/* ((dt_inclusao_p >= dt_inclusao and dt_exclusao_p <= dt_exclusao) or
		(dt_inclusao_p >= dt_inclusao and dt_exclusao_p >= dt_exclusao) or
		(dt_inclusao_p <= dt_inclusao and dt_exclusao_p >= dt_exclusao))*/
	if (coalesce(nr_seq_prof_w::text, '') = '') then
		/* Se não achou, procurar para os casos onde tem só data de inclusão */

		select	max(nr_sequencia)
		into STRICT	nr_seq_prof_w
		from	mprev_equipe_profissional
		where	nr_seq_equipe = nr_seq_equipe_p
		and	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	nr_seq_atual_p <> nr_sequencia
		and (dt_inclusao_p >= dt_inclusao or dt_exclusao_p >= dt_inclusao)
		and	coalesce(dt_exclusao::text, '') = '';
	end if;
else
	/* Se foi informada no novo registro apenas a data de inclusão */

	/* Neste caso a data de inclusão tem que ser obrigatoriamente maior que a data de exclusão*/

	select	max(nr_sequencia)
	into STRICT	nr_seq_prof_w
	from	mprev_equipe_profissional
	where	nr_seq_equipe = nr_seq_equipe_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	nr_seq_atual_p <> nr_sequencia
	and	(
		(dt_inclusao_p < dt_exclusao) or (coalesce(dt_exclusao::text, '') = '')
		);
end if;

if (nr_seq_prof_w IS NOT NULL AND nr_seq_prof_w::text <> '') then
	select dt_inclusao
	into STRICT dt_inclusao_w
	from mprev_equipe_profissional
	where nr_sequencia = nr_seq_prof_w;
	select dt_exclusao
	into STRICT dt_exclusao_w
	from mprev_equipe_profissional
	where nr_sequencia = nr_seq_prof_w;

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(248535, 'DT_INCLUSAO=' || to_char(dt_inclusao_w) || ';DT_EXCLUSAO=' || coalesce(to_char(dt_exclusao_w),wheb_mensagem_pck.get_texto(799555)));
else
	ds_retorno_w := 'S';
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION mprev_val_prof_func (dt_inclusao_p timestamp, dt_exclusao_p timestamp, nr_seq_equipe_p bigint, cd_pessoa_fisica_p bigint, nr_seq_atual_p bigint) FROM PUBLIC;

