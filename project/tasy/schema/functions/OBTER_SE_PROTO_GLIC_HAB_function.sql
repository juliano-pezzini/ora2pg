-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proto_glic_hab ( nr_sequencia_p bigint, nr_prescricao_p bigint default null, cd_estabelecimento_p bigint default null, cd_perfil_p bigint default null, nm_usuario_p text default null) RETURNS varchar AS $body$
DECLARE


ie_tipo_w					varchar(1)		:= 'C';
ie_idoso_w					varchar(1) 	:= 'N';
ie_funcao_renal_alt_w		varchar(1) 	:= 'N';
ie_basal_bolus_w			varchar(1) 	:= 'N';
qt_peso_ini_w				bigint  	:= 0;
qt_peso_fin_w				bigint  	:= 0;

qt_cl_cr_renal_w			double precision	:= 0;
qt_idade_idoso_w			smallint		:= 0;
qt_idade_pf_w				bigint;
qt_peso_w					double precision	:= 0;
qt_clearence_w				double precision	:= 0;
ie_classif_idoso_w 			varchar(1) 	:= 'N';
ie_regra_peso_w				varchar(1)     := 'N';


BEGIN

select 	coalesce(ie_tipo,'C'),
		coalesce(ie_basal_bolus,'N'),
		coalesce(ie_idoso,'N'),
		coalesce(qt_peso_ini,0),
		coalesce(qt_peso_fin,0)
into STRICT	ie_tipo_w,
		ie_basal_bolus_w,
		ie_idoso_w,
		qt_peso_ini_w,
		qt_peso_fin_w
from	pep_protocolo_glicemia
where	nr_sequencia = nr_sequencia_p;

if (ie_tipo_w = 'C') and (ie_basal_bolus_w = 'S') then
	begin

	select	coalesce(qt_cl_cr_renal,0),
			coalesce(qt_idade_idoso,0)
	into STRICT 	qt_cl_cr_renal_w,
			qt_idade_idoso_w
	from	parametro_medico
	where	cd_estabelecimento = cd_estabelecimento_p; --wheb_usuario_pck.get_cd_estabelecimento
	if (coalesce(nr_prescricao_p,0) <> 0) then

		select 	obter_idade_pf(cd_pessoa_fisica,clock_timestamp(), 'A'),
				coalesce(qt_clearence,0)
		into STRICT	qt_idade_pf_w,
				qt_clearence_w
		from	prescr_medica
		where  	nr_prescricao = nr_prescricao_p;
	end if;

	if	((qt_idade_pf_w >= qt_idade_idoso_w) or (qt_clearence_w >= qt_cl_cr_renal_w)) then
		ie_classif_idoso_w := 'S';
	else
		ie_classif_idoso_w := 'N';
	end if;

	if (qt_peso_ini_w >= 0) and (qt_peso_fin_w > 0) then
		begin

		select 	coalesce(qt_peso,coalesce(obter_ultimo_sinal_vital_pf(cd_pessoa_fisica,'Peso'),0))
		into STRICT 	qt_peso_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		if (qt_peso_w = 0) then
			begin
			ie_regra_peso_w := 'S';
			end;
		elsif (qt_peso_w >= qt_peso_ini_w) and (qt_peso_w <= qt_peso_fin_w) then
			begin
			ie_regra_peso_w := 'S';
			end;
		else
			return 'N';
		end if;

		end;

	if	((ie_classif_idoso_w = 'N') and (ie_idoso_w = 'N') and (ie_regra_peso_w = 'S')) then
		return 'S';
	elsif ((ie_classif_idoso_w) = 'S' and (ie_idoso_w = 'S') and (ie_regra_peso_w = 'S')) then
		return 'S';
	else
		return 'N';
	end if;

	end if;

	end;
else
	return 'S';
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proto_glic_hab ( nr_sequencia_p bigint, nr_prescricao_p bigint default null, cd_estabelecimento_p bigint default null, cd_perfil_p bigint default null, nm_usuario_p text default null) FROM PUBLIC;

