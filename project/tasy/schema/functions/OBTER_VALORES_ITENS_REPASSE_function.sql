-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valores_itens_repasse (nr_sequencia_p bigint, nr_seq_terceiro_p bigint, ie_opcao_p text, cd_medico_p bigint) RETURNS bigint AS $body$
DECLARE


/* ie_opção_p
PR - valor total do repasse		(procedimento)
PG - valor glosado do repasse 		(procedimento)
PA - valor amaior do repasse		(procedimento)
PL - valor liberado do repasse		(procedimento)
PRE - valor reapresentado do repasse	(procedimento)
VPP - valor repasse - glosado - reapresentado + amaior

MR - valor total do repasse		(material)
MG - valor glosado do repasse 		(material)
MA - valor amaior do repasse		(material)
ML - valor liberado do repasse		(material)
MRE - valor reapresentado do repasse	(material)
VMP - valor repasse - glosado - reapresentado + amaior
*/
vl_repasse_proc_w		double precision;
vl_glosado_proc_w		double precision;
vl_amaior_proc_w		double precision;
vl_liberado_proc_w		double precision;
vl_reapresentado_proc_w		double precision;
vl_repasse_mat_w		double precision;
vl_glosado_mat_w		double precision;
vl_amaior_mat_w			double precision;
vl_liberado_mat_w		double precision;
vl_reapresentado_mat_w		double precision;
ds_retorno_w			double precision;


BEGIN

select	coalesce(sum(a.vl_repasse),0),
	coalesce(sum(CASE WHEN a.ie_status='G' THEN a.vl_repasse  ELSE 0 END ),0),
	coalesce(sum(somente_positivo(a.vl_liberado - a.vl_repasse)),0),
	coalesce(sum(a.vl_liberado),0),
	coalesce(sum(CASE WHEN a.ie_status='U' THEN a.vl_repasse WHEN a.ie_status='A' THEN a.vl_repasse WHEN a.ie_status='D' THEN a.vl_repasse  ELSE 0 END ),0)
into STRICT	vl_repasse_proc_w,
	vl_glosado_proc_w,
	vl_amaior_proc_w,
	vl_liberado_proc_w,
	vl_reapresentado_proc_w
from 	procedimento_repasse	a
where	a.nr_seq_procedimento 	= nr_sequencia_p
and	a.nr_seq_terceiro	= nr_seq_terceiro_p
and	a.cd_medico		= coalesce(cd_medico_p,a.cd_medico);

select	coalesce(sum(a.vl_repasse),0),
	coalesce(sum(CASE WHEN a.ie_status='G' THEN a.vl_repasse  ELSE 0 END ),0),
	coalesce(sum(somente_positivo(a.vl_liberado - a.vl_repasse)),0),
	coalesce(sum(a.vl_liberado),0),
	coalesce(sum(CASE WHEN a.ie_status='U' THEN a.vl_repasse WHEN a.ie_status='A' THEN a.vl_repasse WHEN a.ie_status='D' THEN a.vl_repasse  ELSE 0 END ),0)
into STRICT	vl_repasse_mat_w,
	vl_glosado_mat_w,
	vl_amaior_mat_w,
	vl_liberado_mat_w,
	vl_reapresentado_mat_w
from 	material_repasse	a
where	a.nr_seq_material 	= nr_sequencia_p
and	a.nr_seq_terceiro	= nr_seq_terceiro_p;

if (ie_opcao_p = 'PR') then
	ds_retorno_w := vl_repasse_proc_w;
elsif (ie_opcao_p = 'PG') then
	ds_retorno_w := vl_glosado_proc_w;
elsif (ie_opcao_p = 'PA') then
	ds_retorno_w := vl_amaior_proc_w;
elsif (ie_opcao_p = 'PL') then
	ds_retorno_w := vl_liberado_proc_w;
elsif (ie_opcao_p = 'PRE') then
	ds_retorno_w := vl_reapresentado_proc_w;
elsif (ie_opcao_p = 'VPP') then
	ds_retorno_w := vl_repasse_proc_w - vl_glosado_proc_w - vl_reapresentado_proc_w + vl_amaior_proc_w;
elsif (ie_opcao_p = 'MR') then
	ds_retorno_w := vl_repasse_mat_w;
elsif (ie_opcao_p = 'MG') then
	ds_retorno_w := vl_glosado_mat_w;
elsif (ie_opcao_p = 'MA') then
	ds_retorno_w := vl_amaior_mat_w;
elsif (ie_opcao_p = 'ML') then
	ds_retorno_w := vl_liberado_mat_w;
elsif (ie_opcao_p = 'MRE') then
	ds_retorno_w := vl_reapresentado_mat_w;
elsif (ie_opcao_p = 'VMP') then
	ds_retorno_w := vl_repasse_mat_w - vl_glosado_mat_w - vl_reapresentado_mat_w + vl_amaior_mat_w;
end if;
return ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valores_itens_repasse (nr_sequencia_p bigint, nr_seq_terceiro_p bigint, ie_opcao_p text, cd_medico_p bigint) FROM PUBLIC;

