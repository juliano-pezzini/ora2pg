-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds_horario	varchar(07));


CREATE OR REPLACE FUNCTION cpoe_padroniza_horario_prescr ( ds_horario_p text, dt_hora_inicio_p text ) RETURNS varchar AS $body$
DECLARE


ds_horarios_w		varchar(4000);
ds_texto_w			varchar(4000);
ds_horario_w		varchar(07);
ds_horario_ant_w	varchar(07) := '';
i					bigint;
k					integer;
ie_dia_seguinte_w	varchar(1);
qt_hora_w			smallint;
qt_min_w			smallint;
x					varchar(1);
x_num				boolean;
y_num				boolean;
dt_hora_w			timestamp;
dt_hora_ww			timestamp;
dt_inicio_w			timestamp;
dt_horario_w		timestamp;
ds_item_w			varchar(10);
cont_w				smallint := 0;
dt_hora_inicio_w	varchar(50);
dt_hora_ante_w		timestamp	:= clock_timestamp();
ds_continuo_w		varchar(255);

ds_valido_w 		varchar(12)		:= '1234567890A ';
ds_validos_ww		varchar(20)		:= '1234567890A: ';
type vetor is table of campos index by integer;
horario_w		vetor;


BEGIN

begin
dt_hora_inicio_w	:= dt_hora_inicio_p;

if (length(dt_hora_inicio_w) < 12) then
	dt_hora_inicio_w := substr(dt_hora_inicio_w,1,10)||' 00:00:01';
end if;

dt_hora_ww		:= to_date('01/01/2000',  'dd/mm/yyyy');
ds_horarios_w	:= ds_horario_p ||' ';
dt_inicio_w		:= to_date('01/01/2000 ' || substr(dt_hora_inicio_w,12,8), 'dd/mm/yyyy hh24:mi:ss');

if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	begin
	ds_horarios_w	:= replace(ds_horarios_w,',',' ');
	ds_texto_w	:= '';

	-- Eliminar caracteres indevidos
	for i in 1..length(ds_horarios_w) loop
		x	:= substr(ds_horarios_w, i, 1);
		if (position(x in ds_validos_ww) > 0) then
			ds_texto_w	:= ds_texto_w || x;
		else
			ds_texto_w	:= ds_texto_w ||' ';
		end if;
	end loop;

	ds_horarios_w	:= ds_texto_w;

	if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
		begin
		-- Verifica se horários de item contínuo, separados por vírgula
		if (position(';' in ds_horarios_w) > 0) then
			-- Remover espaçamentos duplos
			ds_horarios_w	:= replace(replace(replace(ds_horarios_w,'  ',' '),'  ',' '),'  ',' ');
			-- Remover espaçamentos entre horários
			ds_horarios_w	:= replace(replace(ds_horarios_w||';','; ',';'),' ;',';');
			-- Remover espaçamento inicial
			while(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (substr(ds_horarios_w,1,1) = ' ') loop
				ds_horarios_w	:= substr(ds_horarios_w,2,length(ds_horarios_w));
			end loop;

			ds_texto_w		:= ds_horarios_w;
			ds_horarios_w	:= '';

			--
			while(ds_texto_w IS NOT NULL AND ds_texto_w::text <> '') loop
				ds_horarios_w	:= substr(ds_horarios_w || substr(ds_texto_w,1,position(' ' in ds_texto_w)),1,4000);
				ds_texto_w		:= substr(substr(ds_texto_w,position(';' in ds_texto_w)+1,length(ds_texto_w)),1,4000);
			end loop;
		end if;

		if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			begin
			x_num		:= false;
			y_num		:= false;
			ds_texto_w	:= '';
			for i in 1..length(ds_horarios_w) loop
				x	:= substr(ds_horarios_w, i, 1);
				x_num	:= false;
				if (position(x in ds_valido_w) > 0) then
					x_num		:= (x <> 'A') and (x <> ' ');
				end if;
				if (x_num or y_num) then
					ds_texto_w	:= ds_texto_w || x;
				end if;
				y_num	:= x_num;
			end loop;
			ds_horarios_w	:= ds_texto_w;

			if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
				begin
				if (position(' ' in ds_horarios_w) = 0) then
					ds_horarios_w	:= ds_horarios_w||' ';
				end if;
				ds_item_w	:= substr(ds_horarios_w,1,position(' ' in ds_horarios_w)-1);
				if (ds_item_w = '24') then
					ds_item_w := '00';
				elsif (position('24:' in ds_item_w) > 0) then
					ds_item_w := '00:'||substr(ds_item_w,4,5);
				end if;
				if (ds_item_w < '24') then
					dt_horario_w	:= to_date('01/01/2000 ' || ds_item_w, 'dd/mm/yyyy hh24:mi:ss');
				end if;

				i	:= 0;
				if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
					begin
						while	(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') loop
							begin
							k := position(' ' in ds_horarios_w);
							if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
								ds_horario_w		:= substr(ds_horarios_w, 1, k-1);
								ds_horario_w		:= replace(ds_horario_w, ' ','');
								ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
							elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
								ds_horario_w 		:= replace(ds_horarios_w,' ','');
								ds_horarios_w		:= '';
							end if;
							ie_dia_seguinte_w		:= '';
							if (substr(upper(ds_horario_w),1,1) = 'A') then
								ie_dia_seguinte_w	:= 'A';
								ds_horario_w		:= substr(ds_horario_w,2,6);
							end if;
							k := position(':' in ds_horario_w);
							qt_hora_w			:= 0;
							qt_min_w			:= 0;
							if (k > 0) then
								qt_min_w		:= substr(ds_horario_w,k + 1, 2);
								qt_hora_w		:= substr(ds_horario_w, 1, k -1);
							else
								qt_hora_w		:= substr(ds_horario_w, 1, 2);
							end if;
							if (qt_hora_w = 24) then
								qt_hora_w		:= 0;
								--ie_dia_seguinte_w	:= 'A';
							end if;

							ds_horario_w			:= to_char(qt_hora_w,'FM00') || ':';
							ds_horario_w			:= ds_horario_w || to_char(qt_min_w,'FM00');

							if (ds_horario_ant_w >= ds_horario_w) then
								ds_horario_ant_w	:= ds_horario_w;
								ds_horario_w		:= 'A'||ds_horario_w;
							else
								ds_horario_ant_w	:= ds_horario_w;
							end if;

							begin
							if (substr(upper(ds_horario_w),1,1) = 'A') then
								dt_hora_w		:= to_date('01/01/2000 ' || substr(ds_horario_w,2,5), 'dd/mm/yyyy hh24:mi:ss') + 1;
							else
								dt_hora_w		:= to_date('01/01/2000 ' || ds_horario_w, 'dd/mm/yyyy hh24:mi:ss');
							end if;
							exception
							when others then
								ds_horario_w	:= null;
							end;
								/*Edilson em 14/12/07 modifiquei a linha abaixo (dt_hora_w <= dt_hora_ww) */

							if (dt_hora_w < dt_hora_ww) or (dt_inicio_w > dt_hora_w) or (dt_hora_ante_w = dt_hora_w) then
								dt_hora_w		:= dt_hora_w + 1;
								ds_horario_w		:= 'A' || ds_horario_w;
							end if;
							dt_hora_ww			:= dt_hora_w;
							dt_hora_ante_w			:= dt_hora_w;
							i := I + 1;
							horario_w[i].ds_horario		:= ds_horario_w;
							end;
						end loop;

						ds_horario_w	:= '';
						i				:= 1;

						for i in 1..horario_w.count loop
							begin
							if (i = horario_w.count) then
								ds_horarios_w	:= ds_horarios_w || horario_w[i].ds_horario;
							else
								ds_horarios_w	:= ds_horarios_w || horario_w[i].ds_horario || ' ';
							end if;
							end;
						end loop;
					end;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
end if;
exception
when others then
	ds_horarios_w	:= '';
end;

return ds_horarios_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_padroniza_horario_prescr ( ds_horario_p text, dt_hora_inicio_p text ) FROM PUBLIC;

