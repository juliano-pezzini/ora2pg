-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_setor_classif ( nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE

/*
1       grupo da escala
2       escala
3       escala di√°ria
*/
qt_registro_w		bigint;
ie_resultado_w		varchar(1) := 'S';

BEGIN
if (ie_opcao_p = 1) then
	select count(*)
	into STRICT qt_registro_w
	from (	SELECT 	1
		from	escala_classif_setor a,
			escala_classif b,
			escala_grupo c
		where 	c.nr_sequencia	= nr_sequencia_p
		and 	c.nr_seq_classif	= b.nr_sequencia
		and 	b.nr_sequencia	= a.nr_seq_escala_classif
		and 	((a.cd_setor_atendimento = obter_setor_usuario(nm_usuario_p))or
			exists (	select 	1
				from 	usuario_setor_v x
				where 	x.nm_usuario		= nm_usuario_p
				and 	x.cd_setor_atendimento 	= a.cd_setor_atendimento))
		
union

		SELECT 	1
		from 	escala_classif b,
			escala_grupo c
		where 	c.nr_sequencia 	= nr_sequencia_p
		and 	c.nr_seq_classif 	= b.nr_sequencia
		and 	not exists (select 1
				from escala_classif_setor x
				where x.nr_seq_escala_classif = b.nr_sequencia)) alias7;
elsif (ie_opcao_p = 2) then
	select 	count(*)
	into STRICT 	qt_registro_w
	from (	SELECT 	1
		from 	escala_classif_setor a,
			escala_classif b,
			escala_grupo c,
			escala d
		where 	d.nr_sequencia	= nr_sequencia_p
		and 	d.nr_seq_grupo	= c.nr_sequencia
		and	c.nr_seq_classif	= b.nr_sequencia
		and 	b.nr_sequencia	= a.nr_seq_escala_classif
		and 	((a.cd_setor_atendimento = obter_setor_usuario(nm_usuario_p))or
			exists (	select 	1
				from 	usuario_setor_v x
				where	x.nm_usuario	= nm_usuario_p
				and 	x.cd_setor_atendimento = a.cd_setor_atendimento))
		
union

		SELECT 	1
		from 	escala_classif b,
			escala_grupo c,
			escala d
		where 	d.nr_sequencia 	= nr_sequencia_p
		and 	d.nr_seq_grupo   	= c.nr_sequencia
		and 	c.nr_seq_classif 	= b.nr_sequencia
		and 	not exists (	select 	1
				from 	escala_classif_setor x
				where 	x.nr_seq_escala_classif = b.nr_sequencia)) alias7;
elsif (ie_opcao_p = 3) then
	select count(*)
	into STRICT qt_registro_w
	from (	SELECT 	1
		from 	escala_classif_setor a,
			escala_classif b,
			escala_grupo c,
			escala d,
			escala_diaria e
		where 	e.nr_sequencia	= nr_sequencia_p
		and 	e.nr_seq_escala	= d.nr_sequencia
		and 	d.nr_seq_grupo	= c.nr_sequencia
		and 	c.nr_seq_classif	= b.nr_sequencia
		and 	b.nr_sequencia	= a.nr_seq_escala_classif
		and 	((a.cd_setor_atendimento = obter_setor_usuario(nm_usuario_p)) or
			exists (	select 	1
				from	usuario_setor_v x
				where	x.nm_usuario         = nm_usuario_p
				and 	x.cd_setor_atendimento = a.cd_setor_atendimento))
		
union

		SELECT 	1
		from 	escala_classif b,
			escala_grupo c,
			escala d,
			escala_diaria e
		where 	e.nr_sequencia 	= nr_sequencia_p
		and 	e.nr_seq_escala	= d.nr_sequencia
		and 	d.nr_seq_grupo	= c.nr_sequencia
		and 	c.nr_seq_classif	= b.nr_sequencia
		and 	not exists (select 	1
				from 	escala_classif_setor x
				where 	x.nr_seq_escala_classif = b.nr_sequencia)) alias7;
end if;
if (coalesce(qt_registro_w,0) = 0) then
	ie_resultado_w         := 'N';
end if;

return ie_resultado_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_setor_classif ( nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p bigint) FROM PUBLIC;

