-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_exige_guia ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_prestador_exec_p pls_prestador.nr_sequencia%type default 0) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1)	:= 'N';
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_procedimento_w		area_procedimento.cd_area_procedimento%type;
cd_grupo_proc_w			bigint;
cd_especialidade_w		grupo_proc.cd_especialidade%type;
nr_seq_conta_w			bigint;
ie_liberado_w			varchar(2);
cd_estabelecimento_w		smallint;
ie_tipo_guia_plano_w		varchar(2);
cd_guia_referencia_w		varchar(20);
ie_tipo_atend_w			varchar(2);
ie_tipo_guia_w			varchar(2);
ie_internado_w			varchar(1);
ie_liberado_ww			varchar(2);
ie_grupo_contrato_w		varchar(1);
ie_estrut_mat_w			varchar(1);

cd_procedimento_ww		bigint;
cd_area_procedimento_ww		area_procedimento.cd_area_procedimento%type;
cd_grupo_proc_ww		bigint;
cd_especialidade_ww		grupo_proc.cd_especialidade%type;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_prestador_w		bigint;
nr_seq_material_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_grupo_contrato_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_contrato_intercambio_w	bigint;
nr_seq_estrut_regra_w		bigint;
nr_seq_grupo_w			bigint;
nr_seq_prest_prot_w		numeric(30);
nr_seq_protocolo_w		numeric(30);
cd_guia_solic_imp_w		varchar(20);
cd_guia_imp_w			varchar(20);

cd_cgc_cooperativa_w		varchar(20);
nr_seq_congenere_protocolo_w	numeric(30);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_operadora_w		pessoa_juridica.sg_estado%type;
ie_tipo_conta_w			varchar(2);
ie_tipo_intercambio_w		varchar(1) := 'A';

ie_tipo_congenere_w		varchar(1) := 'A';
cd_cgc_congenere_w		varchar(14);
sg_estado_congenere_w		pessoa_juridica.sg_estado%type;
ie_origem_conta_w		varchar(2);
ie_tipo_segurado_w		varchar(3);
ie_restricao_intercambio_w	varchar(1) := 'A';
nr_seq_grupo_produto_w		bigint;
ie_grupo_produto_w		varchar(1);
nr_seq_plano_w			bigint;
nr_seq_cbo_conta_w		bigint;
nr_seq_grupo_servico_w		pls_regra_autorizacao.nr_seq_grupo_servico%type;
ie_preco_w			pls_plano.ie_preco%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		null,
		a.cd_procedimento,
		a.ie_origem_proced,
		null,
		a.nr_seq_conta,
		c.cd_estabelecimento,
		coalesce(b.ie_tipo_guia,'0'),
		coalesce(b.nr_seq_tipo_atendimento,0),
		b.nr_seq_prestador_exec,
		b.ie_origem_conta,
		b.cd_guia_imp,
		b.cd_guia_solic_imp,		
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	pls_protocolo_conta	c,
		pls_conta_proc		a,
		pls_conta 		b
	where	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia		= coalesce(nr_seq_conta_p,0)
	
union all

	SELECT	a.nr_sequencia,
		null,
		a.cd_procedimento,
		a.ie_origem_proced,
		null,
		a.nr_seq_conta,
		c.cd_estabelecimento,
		coalesce(b.ie_tipo_guia,'0'),
		coalesce(b.nr_seq_tipo_atendimento,0),
		b.nr_seq_prestador_exec,
		b.ie_origem_conta,
		b.cd_guia_imp,
		b.cd_guia_solic_imp,		
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	pls_protocolo_conta	c,
		pls_conta 		b,
		pls_conta_proc		a
	where	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= b.nr_seq_protocolo
	and	a.nr_sequencia		= coalesce(nr_seq_conta_proc_p,0)
	and	coalesce(nr_seq_conta_proc_p,0) > 0
	and	coalesce(nr_seq_conta_p,0) = 0
	
union all

	select	null,
		a.nr_sequencia,
		null,
		null,
		a.nr_seq_material,
		b.nr_sequencia,
		c.cd_estabelecimento,
		coalesce(b.ie_tipo_guia,'0'),
		coalesce(b.nr_seq_tipo_atendimento,0),
		b.nr_seq_prestador_exec,
		b.ie_origem_conta,
		b.cd_guia_imp,
		b.cd_guia_solic_imp,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	pls_conta_mat 		a,
		pls_conta 		b,
		pls_protocolo_conta	c
	where	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= b.nr_seq_protocolo
	and	a.nr_seq_conta		= coalesce(nr_seq_conta_p,0);

c02 CURSOR FOR
	SELECT 	ie_liberado,
		nr_seq_grupo_contrato,
		nr_seq_estrut_mat,
		nr_seq_grupo_produto,
		nr_seq_grupo_servico
	from	pls_regra_autorizacao
	where	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_w	and ie_origem_proced = ie_origem_proced_w))
	and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_procedimento_w))
	and	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade	= cd_especialidade_w))
	and	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc	= cd_grupo_proc_w))
	and	((coalesce(ie_tipo_guia::text, '') = '') or (ie_tipo_guia	= ie_tipo_guia_w))
	and	((coalesce(nr_seq_material::text, '') = '') or (nr_seq_material	= nr_seq_material_w))
	and	((coalesce(ie_tipo_segurado::text, '') = '') or (ie_tipo_segurado 	= ie_tipo_segurado_w))
	and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_w))
	and	((coalesce(ie_regime_atendimento::text, '') = '') or (ie_regime_atendimento = ie_regime_atendimento_w))
	and	((coalesce(ie_saude_ocupacional::text, '') = '') or (ie_saude_ocupacional = ie_saude_ocupacional_w))
	and	((coalesce(ie_restricao_intercambio::text, '') = '') or (ie_restricao_intercambio = 'A') or (ie_restricao_intercambio = ie_restricao_intercambio_w))	
	and	((((ie_tipo_intercambio	= 'A') or (coalesce(ie_tipo_intercambio::text, '') = '')) or (coalesce(ie_tipo_intercambio,'A') = ie_tipo_intercambio_w))
	or (coalesce(ie_restricao_intercambio,'A') = 'N'))
	and	(((ie_tipo_congenere	= 'A') or (coalesce(ie_tipo_congenere::text, '') = '')) or (ie_tipo_congenere = ie_tipo_congenere_w))
	and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador	= coalesce(nr_seq_prestador_w,nr_seq_prestador_exec_p)))
	and 	cd_estabelecimento				= cd_estabelecimento_w
	and 	ie_situacao            				= 'A'
	and	((coalesce(ie_preco::text, '') = '') or (ie_preco = ie_preco_w))
	and	((ie_guia_valida	= 'S') or (coalesce(ie_origem_conta_w,'D') <> 'E'))
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp() - interval '1 days') and coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')
	and	((coalesce(cd_especialidade_medica::text, '') = '') or (cd_especialidade_medica in (	SELECT	cd_especialidade
											from	especialidade_medica
											where	nr_seq_cbo_saude = nr_seq_cbo_conta_w)))
	and	((coalesce(nr_seq_grupo_servico::text, '') = '') or (exists (select	1 from	table(pls_grupos_pck.obter_procs_grupo_servico(nr_seq_grupo_servico, ie_origem_proced_w,cd_procedimento_w)) grupo)))
	order by
		ie_liberado desc,
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_tipo_atendimento,0),
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_tipo_segurado;
		
c03 CURSOR FOR
	SELECT 	ie_liberado,
		nr_seq_grupo_contrato,
		nr_seq_estrut_mat,
		nr_seq_grupo_produto,
		nr_seq_grupo_servico
	from	pls_regra_autorizacao
	where	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento 		= cd_procedimento_w	and ie_origem_proced = ie_origem_proced_w))
	and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento 	= cd_area_procedimento_w))
	and	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade		= cd_especialidade_w))
	and	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc		= cd_grupo_proc_w))
	and	((coalesce(ie_tipo_guia::text, '') = '') or (ie_tipo_guia		= ie_tipo_guia_w))
	and	((coalesce(nr_seq_material::text, '') = '') or (nr_seq_material		= nr_seq_material_w))
	and	((coalesce(ie_tipo_segurado::text, '') = '') or (ie_tipo_segurado 		= ie_tipo_segurado_w))
	and	((coalesce(nr_seq_tipo_atendimento::text, '') = '') or (nr_seq_tipo_atendimento	= nr_seq_tipo_atendimento_w))
	and	((coalesce(ie_regime_atendimento::text, '') = '') or (ie_regime_atendimento = ie_regime_atendimento_w))
	and	((coalesce(ie_saude_ocupacional::text, '') = '') or (ie_saude_ocupacional = ie_saude_ocupacional_w))
	and	((coalesce(ie_restricao_intercambio::text, '') = '') or (ie_restricao_intercambio = 'A') or (ie_restricao_intercambio = ie_restricao_intercambio_w))	
	and	((((ie_tipo_intercambio	= 'A') or (coalesce(ie_tipo_intercambio::text, '') = '')) or (coalesce(ie_tipo_intercambio,'A') = ie_tipo_intercambio_w))
	or (coalesce(ie_restricao_intercambio,'A') = 'N'))
	and	(((ie_tipo_congenere	= 'A') or (coalesce(ie_tipo_congenere::text, '') = '')) or (ie_tipo_congenere = ie_tipo_congenere_w))
	and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador	= coalesce(nr_seq_prestador_w,nr_seq_prestador_exec_p)))
	and 	cd_estabelecimento				= cd_estabelecimento_w
	and 	ie_situacao            				= 'A'
	and	((coalesce(ie_preco::text, '') = '') or (ie_preco = ie_preco_w))
	and	((ie_guia_valida	= 'S') or (coalesce(ie_origem_conta_w,'D') <> 'E'))
	and	clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp() - interval '1 days') and coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')
	and	((coalesce(cd_especialidade_medica::text, '') = '') or (cd_especialidade_medica in (	SELECT	cd_especialidade
											from	especialidade_medica
											where	nr_seq_cbo_saude = nr_seq_cbo_conta_w)))
	and	((coalesce(nr_seq_grupo_servico::text, '') = '') or (exists (select	1
								 from	pls_grupo_servico_tm grupo
								 where	grupo.nr_seq_grupo_servico	= nr_seq_grupo_servico
								 and	grupo.ie_origem_proced		= ie_origem_proced_w
								 and	grupo.cd_procedimento		= cd_procedimento_w)))
	order by
		ie_liberado desc,
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_tipo_atendimento,0),
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_tipo_segurado;


BEGIN	
ie_liberado_w	:= 'N';

/*Obter  dados do  segurado da conta */

begin
	select	a.nr_seq_contrato,
		a.nr_seq_intercambio,
		b.nr_seq_protocolo,
		a.ie_tipo_segurado,
		--a.nr_seq_plano,
		pls_obter_produto_benef(a.nr_sequencia, b.dt_atendimento_referencia),
		b.nr_seq_cbo_saude,
		c.nr_seq_prestador,
		c.nr_seq_congenere,
		coalesce(b.ie_tipo_conta,'X')
	into STRICT	nr_seq_contrato_w,
		nr_seq_contrato_intercambio_w,
		nr_seq_protocolo_w,
		ie_tipo_segurado_w,
		nr_seq_plano_w,
		nr_seq_cbo_conta_w,
		nr_seq_prest_prot_w,
		nr_seq_congenere_protocolo_w,
		ie_tipo_conta_w
	from	pls_segurado 		a,
		pls_conta 		b,
		pls_protocolo_conta	c
	where	b.nr_seq_segurado 	= a.nr_sequencia
	and	c.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_sequencia 		= nr_seq_conta_p;
exception
when others then
	nr_seq_contrato_w 		:= null;
	nr_seq_contrato_intercambio_w	:= null;
	ie_tipo_segurado_w		:= null;
	nr_seq_prest_prot_w		:= null;
end;

select	max(ie_preco)
into STRICT	ie_preco_w
from	pls_plano
where	nr_sequencia = nr_seq_plano_w;

select	coalesce(max(sg_estado),'X') /* Obter a UF da operadora  - Tasy */
into STRICT	sg_estado_w
from	pessoa_juridica
where	cd_cgc	=	(SELECT	max(cd_cgc_outorgante)
			from	pls_outorgante
			where	cd_estabelecimento	= cd_estabelecimento_w );

if (ie_tipo_conta_w = 'I')	then
	select	max(sg_estado) /* Obter estado da operadora congenere */
	into STRICT	sg_estado_operadora_w
	from	pls_congenere	a,
		pessoa_juridica	b
	where	b.cd_cgc	= a.cd_cgc
	and	a.nr_sequencia	= nr_seq_congenere_protocolo_w;
	
elsif (ie_tipo_conta_w = 'C')	then
	select 	max(cd_cgc)
	into STRICT	cd_cgc_cooperativa_w
	from 	pls_congenere
	where 	cd_cooperativa =	(SELECT	cd_cooperativa
					from	pls_conta
					where 	nr_sequencia	= nr_seq_conta_p);

	select	max(sg_estado)
	into STRICT	sg_estado_operadora_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cgc_cooperativa_w;
end if;

if ( coalesce(sg_estado_w,'X') <> 'X') and (coalesce(sg_estado_operadora_w,'X') <> 'X') then /* Verifica o estado da congenere e da outorgante _ o mesmo, se nao for o mesmo entao _ interc_mbio nacional */
	if ( sg_estado_w	= sg_estado_operadora_w ) then
		ie_tipo_intercambio_w	:= 'E'; --ESTADUAL
	else
		ie_tipo_intercambio_w	:= 'N'; -- NACIONAL
	end if;
else
	ie_tipo_intercambio_w	:= 'A';
end if;

if (ie_tipo_conta_w in ('I', 'C')) then
	ie_restricao_intercambio_w	:= 'I';
else
	ie_restricao_intercambio_w	:= 'N';
end if;

-- jjung OS 490482 - Obter o estado da operadora congenere  do segurado.				
select	max(cd_cgc)	
into STRICT	cd_cgc_congenere_w
from	pls_congenere
where	nr_sequencia = (	SELECT	max(a.nr_seq_ops_congenere)
				from	pls_segurado	a,
					pls_conta	b
				where	a.nr_sequencia = b.nr_seq_segurado
				and	b.nr_sequencia = nr_seq_conta_p
			);
select	max(sg_estado)
into STRICT	sg_estado_congenere_w
from	pessoa_juridica
where	cd_cgc = cd_cgc_congenere_w;

-- jjung OS 490482 - Verificar a abragencia da congenere do beneficiario.
if ( sg_estado_w <> 'X') and (coalesce(sg_estado_congenere_w,'X') <> 'X') then
	if ( sg_estado_w	= sg_estado_congenere_w ) then
		ie_tipo_congenere_w	:= 'E'; --ESTADUAL
	else
		ie_tipo_congenere_w	:= 'N'; -- NACIONAL
	end if;
else
	ie_tipo_congenere_w	:= 'A';--AMBOS/Regra para todos. pls_regra_autorizacao ie_tipo_congenere
end if;

open C01;
loop
fetch C01 into	
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_material_w,
	nr_seq_conta_w,
	cd_estabelecimento_w,
	ie_tipo_guia_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_prestador_w,
	ie_origem_conta_w,
	cd_guia_imp_w,
	cd_guia_solic_imp_w,	
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w;	
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin		
	cd_area_procedimento_w	:= null;
	cd_grupo_proc_w		:= null;
	cd_especialidade_w	:= null;
	nr_seq_estrut_mat_w	:= null;
	
	-- Se for material n_o tem procedimento
	if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
		ie_origem_proced_w	:= null;
		cd_procedimento_w	:= null;
		
	-- Se for procedimento n_o tem material
	elsif (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
		nr_seq_material_w	:= null;
	end if;
	
	if (coalesce(cd_procedimento_w,0) <> 0) then
		select	max(cd_area_procedimento),
			max(cd_grupo_proc),
			max(cd_especialidade)
		into STRICT	cd_area_procedimento_w,
			cd_grupo_proc_w,
			cd_especialidade_w
		from	estrutura_procedimento_v
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;
		
	elsif (coalesce(nr_seq_material_w,0) <> 0)	then
		select	max(nr_seq_estrut_mat)
		into STRICT	nr_seq_estrut_mat_w
		from	pls_material
		where	nr_sequencia = nr_seq_material_w;
		
		nr_seq_grupo_w	:= null;
	end if;	
	
	if (pls_util_cta_pck.usar_novo_agrup = 'S') then
		
		open c03;
		loop
		fetch c03 into
			ie_liberado_ww,
			nr_seq_grupo_contrato_w,
			nr_seq_estrut_regra_w,
			nr_seq_grupo_produto_w,
			nr_seq_grupo_servico_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */	
			begin
			ie_grupo_contrato_w	:= 'S';
			ie_estrut_mat_w		:= 'S';
			ie_grupo_produto_w	:= 'S';
			
			if (nr_seq_grupo_servico_w IS NOT NULL AND nr_seq_grupo_servico_w::text <> '') and (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				nr_seq_estrut_regra_w	:= null;
				ie_estrut_mat_w		:= 'N';
			end if;
			
			if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
				if (pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrut_regra_w) = 'N') then
					ie_estrut_mat_w	:= 'N';
				end if;
			end if;
			
			if (ie_estrut_mat_w = 'S') then
				if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
					if	((coalesce(nr_seq_contrato_w,0) > 0) or (coalesce(nr_seq_contrato_intercambio_w,0) > 0)) then
						ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_w, nr_seq_contrato_intercambio_w);
					else
						ie_grupo_contrato_w	:= 'N';
					end if;
				end if;
			
				if (coalesce(nr_seq_grupo_produto_w,0) > 0) and (ie_grupo_contrato_w	= 'S')then
					ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_w);
				end if;

				if (ie_grupo_produto_w = 'S') and (ie_grupo_contrato_w = 'S') then
					ie_liberado_w		:= ie_liberado_ww;		
				end if;
			end if;
			end;
		end loop;
		close c03;	
	else
		open C02;
		loop
		fetch C02 into
			ie_liberado_ww,
			nr_seq_grupo_contrato_w,
			nr_seq_estrut_regra_w,
			nr_seq_grupo_produto_w,
			nr_seq_grupo_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */	
			begin
							
			ie_grupo_contrato_w	:= 'S';
			ie_estrut_mat_w		:= 'S';
			ie_grupo_produto_w	:= 'S';
			
			if (nr_seq_grupo_servico_w IS NOT NULL AND nr_seq_grupo_servico_w::text <> '') and (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				nr_seq_estrut_regra_w	:= null;
				ie_estrut_mat_w		:= 'N';
			end if;
			
			if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
				if (pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrut_regra_w) = 'N') then
					ie_estrut_mat_w	:= 'N';
				end if;
			end if;
			
			if (ie_estrut_mat_w = 'S') then
				if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
					if	((coalesce(nr_seq_contrato_w,0) > 0) or (coalesce(nr_seq_contrato_intercambio_w,0) > 0)) then
						ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_w, nr_seq_contrato_intercambio_w);
					else
						ie_grupo_contrato_w	:= 'N';
					end if;
				end if;
			
				if (coalesce(nr_seq_grupo_produto_w,0) > 0) and (ie_grupo_contrato_w	= 'S')then
					ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_w);
				end if;

				if (ie_grupo_produto_w = 'S') and (ie_grupo_contrato_w = 'S') then
					ie_liberado_w		:= ie_liberado_ww;		
				end if;
			end if;
			end;
		end loop;
		close C02;
	end if;
	end;
end loop;
close C01;

ds_retorno_w	:= ie_liberado_w;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_exige_guia ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_prestador_exec_p pls_prestador.nr_sequencia%type default 0) FROM PUBLIC;

