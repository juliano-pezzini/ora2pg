-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_lista_pacientes_medico ( cd_estabelecimento_p bigint, nm_usuario_p text, cd_funcao_ativa_p bigint, cd_pessoa_fisica_medico_p text) RETURNS varchar AS $body$
DECLARE

 
ds_lista_pac_w					varchar(10000) := '';				
 
cd_pessoa_fisica_paciente_w			varchar(10);
ie_exibe_alerta_w				varchar(1);
ie_profissional_w				varchar(1);
ie_mostra_PA_w					varchar(1);

nr_atendimento_w				bigint;
								
									 
/*médico principal*/
									 
c01 CURSOR FOR 
		SELECT c.cd_pessoa_fisica, 
            c.nr_atendimento	 
		from  atendimento_paciente c, 
		    unidade_atendimento b 
		where b.nr_atendimento    = c.nr_atendimento 
		and to_char(c.cd_estabelecimento) = to_char(cd_estabelecimento_p) 
		and (b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '') 
		and exists (SELECT 1  
			where c.cd_medico_resp = cd_pessoa_fisica_medico_p) 
		
union
 
		select  a.cd_pessoa_fisica, 
			 a.nr_atendimento 
		from   atendimento_ps_v a 
		where (ie_mostra_PA_w = 'S') 
		and (coalesce(a.dt_alta::text, '') = '') and (Obter_Unidade_Atendimento(a.nr_atendimento,'A','CL') = '1') 
		and   to_char(a.cd_estabelecimento) = to_char(cd_estabelecimento_p) 
		and (a.cd_medico_resp = cd_pessoa_fisica_medico_p) 
		order by cd_pessoa_fisica;
				
				 
							 
--médico auxiliar*/									 
c02 CURSOR FOR 
	SELECT c.cd_pessoa_fisica, 
	    c.nr_atendimento 
	from  atendimento_paciente c, 
	    unidade_atendimento b 
	where c.cd_medico_resp    <> cd_pessoa_fisica_medico_p 
	 and to_char(c.cd_estabelecimento) = to_char(cd_estabelecimento_p) 
	 and b.nr_atendimento    = c.nr_atendimento 
	 and (b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '') 
	 and exists 
		(SELECT /*+INDEX (x PRESMED_I5) */ 
	      1 
		from prescr_medica x 
		where	 b.nr_atendimento    = x.nr_atendimento 
		 and x.dt_prescricao > clock_timestamp() - interval '36 days'/24 
		 and x.nm_usuario_original = nm_usuario_p 
		 and x.cd_medico      = cd_pessoa_fisica_medico_p 
		
union
 
		select /*+INDEX (x EVOPACI_I4) */ 
	      1 
	  from	evolucao_paciente x 
		where 	b.nr_atendimento    = x.nr_atendimento 
		 and x.dt_evolucao > clock_timestamp() - interval '36 days'/24 
		 and ((x.cd_medico   = cd_pessoa_fisica_medico_p 
		 and x.nm_usuario	 = nm_usuario_p) 
	   or (x.cd_medico_parecer = cd_pessoa_fisica_medico_p))) 
	
union
 
	select c.cd_pessoa_fisica, 
        c.nr_atendimento 
	from  atendimento_paciente c, 
	    unidade_atendimento b, 
	    atend_profissional a 
	where c.cd_medico_resp    <> cd_pessoa_fisica_medico_p 
	and  to_char(c.cd_estabelecimento) = to_char(cd_estabelecimento_p) 
	and  b.nr_atendimento = c.nr_atendimento 
	and  (b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '') 
	and  a.nr_atendimento = c.nr_atendimento 
	and  a.cd_pessoa_fisica = cd_pessoa_fisica_medico_p 
	and  'S' = ie_profissional_w 
	and  a.dt_inicio_vigencia <= clock_timestamp();
		
	 

BEGIN 
 
ie_profissional_w := obter_valor_param_usuario(281, 349, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
ie_mostra_PA_w  := obter_valor_param_usuario(281, 430, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
 
 
open c01;
loop 
fetch c01 into	 
	cd_pessoa_fisica_paciente_w, 
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	if ((obter_se_exibe_alerta(	cd_pessoa_fisica_paciente_w,nr_atendimento_w,nm_usuario_p,cd_funcao_ativa_p) ) = 'S') then 
		ds_lista_pac_w := 	ds_lista_pac_w || cd_pessoa_fisica_paciente_w || ';';	
	end if;
		 
	end;
end loop;
close c01;
 
 
 
open c02;
loop 
fetch c02 into	 
	cd_pessoa_fisica_paciente_w, 
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
 
	if ((obter_se_exibe_alerta(	cd_pessoa_fisica_paciente_w,nr_atendimento_w,nm_usuario_p,cd_funcao_ativa_p) ) = 'S') then 
		ds_lista_pac_w := 	ds_lista_pac_w || cd_pessoa_fisica_paciente_w || ';';	
	end if;
		 
	end;
end loop;
close c02;
 
 
return	substr(ds_lista_pac_w,1,2000);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_lista_pacientes_medico ( cd_estabelecimento_p bigint, nm_usuario_p text, cd_funcao_ativa_p bigint, cd_pessoa_fisica_medico_p text) FROM PUBLIC;

