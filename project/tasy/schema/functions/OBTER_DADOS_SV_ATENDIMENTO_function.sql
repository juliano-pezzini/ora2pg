-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_sv_atendimento ( ie_opcao_p text, ie_sinal_p text, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
/* 
U	-	Último registro 
HUR	-	Horas do último registro 
*/
 
 
dt_registro_w	timestamp;
ds_retorno_w	varchar(255);
qt_horas_w	double precision;
dt_alta_w	timestamp;
dt_entrada_w	timestamp;
ie_sinal_w	varchar(15);
vl_resultado_w	varchar(255);
	

BEGIN 
if (coalesce(nr_atendimento_p,0) > 0) then 
	ie_sinal_w	:= upper(ie_sinal_p);
	select	dt_alta, 
		dt_entrada 
	into STRICT	dt_alta_w, 
		dt_entrada_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
 
 
	if (ie_sinal_w = 'QT_PESO') then 
		select	max(DT_SINAL_VITAL), 
			max(qt_peso) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_PESO IS NOT NULL AND QT_PESO::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
	elsif (ie_sinal_w = 'QT_ALTURA_CM') then 
 
		select	max(DT_SINAL_VITAL), 
			max(qt_altura_cm) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_ALTURA_CM IS NOT NULL AND QT_ALTURA_CM::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
					 
	elsif (ie_sinal_w = 'QT_TEMP') then 
 
		select	max(DT_SINAL_VITAL), 
			max(qt_temp) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_TEMP IS NOT NULL AND QT_TEMP::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
 
	elsif (ie_sinal_w = 'QT_FREQ_CARDIAC') then 
 
		select	max(DT_SINAL_VITAL), 
			max(QT_FREQ_CARDIACA) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_FREQ_CARDIACA IS NOT NULL AND QT_FREQ_CARDIACA::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
					 
	elsif (ie_sinal_w = 'QT_PA_SISTOLICA') then 
 
		select	max(DT_SINAL_VITAL), 
			max(QT_PA_SISTOLICA) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_PA_SISTOLICA IS NOT NULL AND QT_PA_SISTOLICA::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
					 
	elsif (ie_sinal_w = 'QT_PA_DIASTOLIC') then 
 
		select	max(DT_SINAL_VITAL), 
			max(QT_PA_DIASTOLICA) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_PA_DIASTOLICA IS NOT NULL AND QT_PA_DIASTOLICA::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
					 
	elsif (ie_sinal_w = 'QT_ESCALA_DOR') then 
 
		select	max(DT_SINAL_VITAL), 
			max(QT_ESCALA_DOR) 
		into STRICT	dt_registro_w, 
			vl_resultado_w 
		from	atendimento_sinal_vital	 
		where	nr_sequencia = (SELECT	coalesce(max(nr_sequencia),0) 
					from	atendimento_sinal_vital 
					where	(QT_ESCALA_DOR IS NOT NULL AND QT_ESCALA_DOR::text <> '') 
					and	nr_atendimento	= nr_atendimento_p 
					and	ie_situacao = 'A' 
					and	coalesce(IE_RN,'N')	= 'N');
 
	end if;
 
 
	if (ie_opcao_p = 'U') then 
		ds_retorno_w	:= to_char(dt_registro_w,'dd/mm/yyyy hh24:mi:ss');
	elsif (ie_opcao_p = 'HUR') then 
 
		ds_retorno_w	:= trunc(((coalesce(dt_alta_w,clock_timestamp()) - coalesce(dt_registro_w,dt_entrada_w)) * 24),2);
 
	elsif (ie_opcao_p = 'V') then 
		ds_retorno_w	:= vl_resultado_w;
	end if;	
end if;
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_sv_atendimento ( ie_opcao_p text, ie_sinal_p text, nr_atendimento_p bigint) FROM PUBLIC;

