-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hd_obter_dados_pressao (cd_pessoa_fisica_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nr_seq_unid_dialise_p bigint, ie_opcao_p text, ie_tipo_pressao_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(20);
ds_pressao_sist_w	varchar(10);
ds_pressao_diast_w	varchar(10);

ds_pressao_sist_pos_w	varchar(10);
ds_pressao_diast_pos_w	varchar(10);

/* Tipo pressao
PRE
POS
*/
c01 CURSOR FOR
	SELECT	d.qt_pa_sist_pre_deitado,
		d.qt_pa_diast_pre_deitado,
		d.qt_pa_sist_pos_deitado,
		d.qt_pa_diast_pos_deitado
	from	hd_pac_renal_cronico p,
		hd_unidade_dialise u,
		hd_dialise d
	where	u.nr_sequencia	 	= d.nr_seq_unid_dialise
	and	p.cd_pessoa_fisica 	= d.cd_pessoa_fisica
	and	((u.cd_estabelecimento	= cd_estabelecimento_p) or (cd_estabelecimento_p = '0'))
	and	((u.nr_sequencia	= nr_seq_unid_dialise_p) or (nr_seq_unid_dialise_p = '0'))
	and	substr(hd_obter_se_paciente_ativo(p.cd_pessoa_fisica),1,1) = 'S'
	and	p.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	d.dt_dialise between dt_inicial_p and fim_dia(dt_final_p)
	and	coalesce(d.dt_cancelamento::text, '') = ''
	and	(d.qt_pa_sist_pre_deitado IS NOT NULL AND d.qt_pa_sist_pre_deitado::text <> '')
	and	coalesce(d.nr_seq_motivo_pa_deitado_pre::text, '') = ''
	and	coalesce(d.nr_seq_motivo_pa_deitado_pos::text, '') = ''
	order by
		d.qt_pa_sist_pre_deitado,
		d.qt_pa_diast_pre_deitado;

c02 CURSOR FOR
	SELECT	d.qt_pa_sist_pre_deitado,
		d.qt_pa_diast_pre_deitado,
		d.qt_pa_sist_pos_deitado,
		d.qt_pa_diast_pos_deitado
	from	hd_pac_renal_cronico p,
		hd_unidade_dialise u,
		hd_dialise d
	where	u.nr_sequencia	 	= d.nr_seq_unid_dialise
	and	p.cd_pessoa_fisica 	= d.cd_pessoa_fisica
	and	((u.cd_estabelecimento	= cd_estabelecimento_p) or (cd_estabelecimento_p = '0'))
	and	((u.nr_sequencia	= nr_seq_unid_dialise_p) or (nr_seq_unid_dialise_p = '0'))
	and	substr(hd_obter_se_paciente_ativo(p.cd_pessoa_fisica),1,1) = 'S'
	and	p.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	d.dt_dialise between dt_inicial_p and fim_dia(dt_final_p)
	and	coalesce(d.dt_cancelamento::text, '') = ''
	and	(d.qt_pa_sist_pre_deitado IS NOT NULL AND d.qt_pa_sist_pre_deitado::text <> '')
	and	coalesce(d.nr_seq_motivo_pa_deitado_pre::text, '') = ''
	and	coalesce(d.nr_seq_motivo_pa_deitado_pos::text, '') = ''
	order by
		d.qt_pa_sist_pre_deitado desc,
		d.qt_pa_diast_pre_deitado desc;


BEGIN

if (ie_opcao_p = 'MAX') then
	open C01;
	loop
	fetch C01 into
		ds_pressao_sist_w,
		ds_pressao_diast_w,
		ds_pressao_sist_pos_w,
		ds_pressao_diast_pos_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			if (ie_tipo_pressao_p = 'PRE') then
				ds_retorno_w := ds_pressao_sist_w || ' / ' || ds_pressao_diast_w;
			elsif (ie_tipo_pressao_p = 'POS') then
				ds_retorno_w := ds_pressao_sist_pos_w || ' / ' || ds_pressao_diast_pos_w;
			end if;
		end;
	end loop;
	close C01;
elsif (ie_opcao_p = 'MIN') then
	open C02;
	loop
	fetch C02 into
		ds_pressao_sist_w,
		ds_pressao_diast_w,
		ds_pressao_sist_pos_w,
		ds_pressao_diast_pos_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
			if (ie_tipo_pressao_p = 'PRE') then
				ds_retorno_w := ds_pressao_sist_w || ' / ' || ds_pressao_diast_w;
			elsif (ie_tipo_pressao_p = 'POS') then
				ds_retorno_w := ds_pressao_sist_pos_w || ' / ' || ds_pressao_diast_pos_w;
			end if;
		end;
	end loop;
	close C02;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hd_obter_dados_pressao (cd_pessoa_fisica_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nr_seq_unid_dialise_p bigint, ie_opcao_p text, ie_tipo_pressao_p text) FROM PUBLIC;

