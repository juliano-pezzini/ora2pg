-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_proc_mat_cob_prev ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, nr_seq_guia_mat_p pls_guia_plano_mat.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_req_proc_p pls_requisicao_proc.nr_sequencia%type, nr_seq_req_mat_p pls_requisicao_mat.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se:
		- A guia/requisicao possui alguma dessas glosas geradas: 1423, 1410, 1420
		- Os procedimentos/materiais não possui o campo NR_SEQ_COBERTURA preenchido ou os campos NR_SEQ_TIPO_LIMITACAO e NR_SEQ_TIPO_CARENCIA preenchido
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(1) := 'N';
qt_guia_glosa_w		bigint;
qt_req_glosa_w		bigint;
qt_glosa_limitacao_w	bigint;
qt_glosa_carencia_w	bigint;
qt_glosa_cobertura_w	bigint;
nr_seq_cobertura_w	bigint;
nr_seq_tipo_limitacao_w	bigint;
nr_seq_tipo_carencia_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_cobertura,
		nr_seq_tipo_limitacao,
		nr_seq_tipo_carencia
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p
	
union

	SELECT	nr_sequencia,
		nr_seq_cobertura,
		nr_seq_tipo_limitacao,
		nr_seq_tipo_carencia
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_p;

BEGIN
if (coalesce(nr_seq_guia_p,0) <> 0) then

	select	count(1)
	into STRICT	qt_guia_glosa_w
	from	pls_guia_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_guia		= nr_seq_guia_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	= '1423'
	and	(a.nr_seq_ocorrencia IS NOT NULL AND a.nr_seq_ocorrencia::text <> '');

	if (qt_guia_glosa_w	> 0) then
		ds_retorno_w		:= 'S';
	end if;

	if (ds_retorno_w	= 'N') then
		for r_C01_w in C01 loop

			select	count(1)
			into STRICT	qt_glosa_limitacao_w
			from	pls_guia_glosa	a,
				tiss_motivo_glosa b
			where	((a.nr_seq_guia_proc	= r_C01_w.nr_sequencia)
			or (a.nr_seq_guia_mat 	= r_C01_w.nr_sequencia))
			and	a.nr_seq_motivo_glosa	= b.nr_sequencia
			and	b.cd_motivo_tiss	= '1423';
			--and	a.nr_seq_ocorrencia	is not null;
			--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
			select	count(1)
			into STRICT	qt_glosa_carencia_w
			from	pls_guia_glosa	a,
				tiss_motivo_glosa b
			where	((a.nr_seq_guia_proc	= r_C01_w.nr_sequencia)
			or (a.nr_seq_guia_mat 	= r_C01_w.nr_sequencia))
			and	a.nr_seq_motivo_glosa	= b.nr_sequencia
			and	b.cd_motivo_tiss	= '1410';
			--and	a.nr_seq_ocorrencia	is not null;
			--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
			select	count(1)
			into STRICT	qt_glosa_cobertura_w
			from	pls_guia_glosa	a,
				tiss_motivo_glosa b
			where	((a.nr_seq_guia_proc	= r_C01_w.nr_sequencia)
			or (a.nr_seq_guia_mat 	= r_C01_w.nr_sequencia))
			and	a.nr_seq_motivo_glosa	= b.nr_sequencia
			and	b.cd_motivo_tiss	in ('1420', '2006');
			--and	a.nr_seq_ocorrencia	is not null;
			--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
			if	((r_C01_w.nr_seq_tipo_limitacao IS NOT NULL AND r_C01_w.nr_seq_tipo_limitacao::text <> '') 	or (qt_glosa_limitacao_w > 0))	or
				((coalesce(r_C01_w.nr_seq_cobertura::text, '') = '') 		or (qt_glosa_cobertura_w > 0)) or
				((r_C01_w.nr_seq_tipo_carencia IS NOT NULL AND r_C01_w.nr_seq_tipo_carencia::text <> '') 	or (qt_glosa_carencia_w > 0)) then

				ds_retorno_w	:= 'S';
				exit;
			end if;
		end loop;
	end if;
elsif (coalesce(nr_seq_requisicao_p,0) <> 0) then
	select	count(1)
	into STRICT	qt_req_glosa_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_requisicao	= nr_seq_requisicao_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	= '1423'
	and	(a.nr_seq_ocorrencia IS NOT NULL AND a.nr_seq_ocorrencia::text <> '');

	if (qt_req_glosa_w > 0) then
		ds_retorno_w	:= 'S';
	end if;
elsif (coalesce(nr_seq_req_proc_p,0) <> 0) then
	select	nr_seq_cobertura,
		nr_seq_tipo_limitacao,
		nr_seq_tipo_carencia
	into STRICT	nr_seq_cobertura_w,
		nr_seq_tipo_limitacao_w,
		nr_seq_tipo_carencia_w
	from	pls_requisicao_proc
	where	nr_sequencia		= nr_seq_req_proc_p;

	select	count(1)
	into STRICT	qt_glosa_limitacao_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_req_proc	= nr_seq_req_proc_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	= '1423';
	--and	a.nr_seq_ocorrencia	is not null;
	--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
	select	count(1)
	into STRICT	qt_glosa_carencia_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_req_proc	= nr_seq_req_proc_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	= '1410';
	--and	a.nr_seq_ocorrencia	is not null;
	--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
	select	count(1)
	into STRICT	qt_glosa_cobertura_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_req_proc	= nr_seq_req_proc_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	in ('1420', '2006');
	--and	a.nr_seq_ocorrencia	is not null;
	--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
	if	((nr_seq_tipo_limitacao_w IS NOT NULL AND nr_seq_tipo_limitacao_w::text <> '') 	or (qt_glosa_limitacao_w > 0)) or
		((coalesce(nr_seq_cobertura_w::text, '') = '') 		or (qt_glosa_cobertura_w > 0)) or
		((nr_seq_tipo_carencia_w IS NOT NULL AND nr_seq_tipo_carencia_w::text <> '') 	or (qt_glosa_carencia_w > 0)) then
		ds_retorno_w	:= 'S';
	end if;
elsif (coalesce(nr_seq_req_mat_p,0) <> 0) then
	select	nr_seq_cobertura,
		nr_seq_tipo_limitacao,
		nr_seq_tipo_carencia
	into STRICT	nr_seq_cobertura_w,
		nr_seq_tipo_limitacao_w,
		nr_seq_tipo_carencia_w
	from	pls_requisicao_mat
	where	nr_sequencia		= nr_seq_req_mat_p;

	select	count(1)
	into STRICT	qt_glosa_limitacao_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_req_mat 	= nr_seq_req_mat_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	= '1423';
	--and	a.nr_seq_ocorrencia	is not null;
	--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
	select	count(1)
	into STRICT	qt_glosa_carencia_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_req_mat 	= nr_seq_req_mat_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	= '1410';
	--and	a.nr_seq_ocorrencia	is not null;
	--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
	select	count(1)
	into STRICT	qt_glosa_cobertura_w
	from	pls_requisicao_glosa	a,
		tiss_motivo_glosa b
	where	a.nr_seq_req_mat 	= nr_seq_req_mat_p
	and	a.nr_seq_motivo_glosa	= b.nr_sequencia
	and	b.cd_motivo_tiss	in ('1420', '2006');
	--and	a.nr_seq_ocorrencia	is not null;
	--Comentado a linha de cima para habilitar o botão 'Liberar item com cobrança prevista' caso a glosa seja adicionada na auditoria.
	if	((nr_seq_tipo_limitacao_w IS NOT NULL AND nr_seq_tipo_limitacao_w::text <> '') 	or (qt_glosa_limitacao_w > 0)) or
		((coalesce(nr_seq_cobertura_w::text, '') = '') 		or (qt_glosa_cobertura_w > 0)) or
		((nr_seq_tipo_carencia_w IS NOT NULL AND nr_seq_tipo_carencia_w::text <> '') 	or (qt_glosa_carencia_w > 0)) then
		ds_retorno_w	:= 'S';
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_proc_mat_cob_prev ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, nr_seq_guia_mat_p pls_guia_plano_mat.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_req_proc_p pls_requisicao_proc.nr_sequencia%type, nr_seq_req_mat_p pls_requisicao_mat.nr_sequencia%type) FROM PUBLIC;

