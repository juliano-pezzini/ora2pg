-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_obter_restr_prod (ie_opcao_p text, dados_regra_p pls_tipos_ocor_pck.dados_regra, cursor_p integer, dados_filtro_prod_p pls_tipos_ocor_pck.dados_filtro_prod) RETURNS varchar AS $body$
DECLARE


ds_restricao_w		varchar(4000);
ds_select_prod_w	varchar(4000);
ds_filtro_prod_w	varchar(4000);

BEGIN

--Inicializar as variáveis.
ds_filtro_prod_w	:= null;
ds_restricao_w		:= null;

-- Montar o subselect base.
ds_select_prod_w := 	pls_tipos_ocor_pck.enter_w ||
			'and	exists (' || pls_tipos_ocor_pck.enter_w||
			'			select	1 ' || pls_tipos_ocor_pck.enter_w||
			'			from	pls_segurado_conta_v benef ' || pls_tipos_ocor_pck.enter_w||
			'			where	benef.nr_sequencia = conta.nr_seq_segurado ';

-- Produto
if (dados_filtro_prod_p.nr_seq_plano IS NOT NULL AND dados_filtro_prod_p.nr_seq_plano::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		ds_filtro_prod_w :=	ds_filtro_prod_w || pls_tipos_ocor_pck.enter_w ||
					'			and	benef.nr_seq_plano = :nr_seq_plano ';
	else
		dbms_sql.bind_variable(cursor_p, ':nr_seq_plano', dados_filtro_prod_p.nr_seq_plano);
	end if;
end if;
-- Formação de preço
if (dados_filtro_prod_p.ie_preco IS NOT NULL AND dados_filtro_prod_p.ie_preco::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		ds_filtro_prod_w :=	ds_filtro_prod_w || pls_tipos_ocor_pck.enter_w ||
					'			and	benef.ie_preco = :ie_preco ';
	else
		dbms_sql.bind_variable(cursor_p, ':ie_preco', dados_filtro_prod_p.ie_preco);
	end if;
end if;
-- Grupo de produto
if (dados_filtro_prod_p.nr_seq_grupo_produto IS NOT NULL AND dados_filtro_prod_p.nr_seq_grupo_produto::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		ds_filtro_prod_w := 	ds_filtro_prod_w || pls_tipos_ocor_pck.enter_w ||
					'			and	exists	(select	1' || pls_tipos_ocor_pck.enter_w ||
					'				from	pls_preco_produto x ' || pls_tipos_ocor_pck.enter_w ||
					'				where	x.nr_seq_plano = benef.nr_seq_plano ' || pls_tipos_ocor_pck.enter_w ||
					'				and	x.nr_seq_grupo = :nr_seq_grupo_produto)';
	else
		dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo_produto', dados_filtro_prod_p.nr_seq_grupo_produto);
	end if;
end if;
-- Acomodação
if (dados_filtro_prod_p.nr_seq_tipo_acomodacao IS NOT NULL AND dados_filtro_prod_p.nr_seq_tipo_acomodacao::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		ds_filtro_prod_w := 	ds_filtro_prod_w || pls_tipos_ocor_pck.enter_w ||
					'			and	exists	(select	1' || pls_tipos_ocor_pck.enter_w ||
					'				from	pls_plano_acomodacao x ' || pls_tipos_ocor_pck.enter_w ||
					'				where	x.nr_seq_plano = benef.nr_seq_plano ' || pls_tipos_ocor_pck.enter_w ||
					'				and	x.nr_seq_tipo_acomodacao = :nr_seq_tipo_acomodacao)';
	else
		dbms_sql.bind_variable(cursor_p, ':nr_seq_tipo_acomodacao', dados_filtro_prod_p.nr_seq_tipo_acomodacao);
	end if;
end if;

-- Só monta o select se o filtro for em branco,  caso ele esteja em branco nem monta a restrição.
if (ds_filtro_prod_w IS NOT NULL AND ds_filtro_prod_w::text <> '') then

	ds_restricao_w  := ds_select_prod_w || pls_tipos_ocor_pck.enter_w || ds_filtro_prod_w ||'		)';
end if;


return	ds_restricao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_obter_restr_prod (ie_opcao_p text, dados_regra_p pls_tipos_ocor_pck.dados_regra, cursor_p integer, dados_filtro_prod_p pls_tipos_ocor_pck.dados_filtro_prod) FROM PUBLIC;

