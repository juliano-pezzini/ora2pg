-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_med_exame_externo (nr_sequencia_p bigint, ie_desc_solic_exame_p text) RETURNS varchar AS $body$
DECLARE


ds_exame_w		varchar(255);
nr_seq_exame_w		bigint;
ds_exame_sem_cad_w	varchar(255);
nr_seq_exame_lab_w	bigint;
nr_proc_interno_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_tipo_desc_w varchar(1);
ie_desc_solic_exame_w varchar(5);
BEGIN

/*
E - Exame Padrão
S - Exame sem cadastro 
L - Exame de Laboratório 
I - Tabela Interna
P - Proc. Faturamento
*/
ie_desc_solic_exame_w := ie_desc_solic_exame_p;
if (coalesce(ie_desc_solic_exame_w::text, '') = '') then
  ie_desc_solic_exame_w := 'ESLIP';
end if;

select	nr_seq_exame,
	ds_exame_sem_cad,
	nr_seq_exame_lab,
	nr_proc_interno,
	cd_procedimento,
	ie_origem_proced
into STRICT	nr_seq_exame_w,
	ds_exame_sem_cad_w,
	nr_seq_exame_lab_w,
	nr_proc_interno_w,
	cd_procedimento_w,
	ie_origem_proced_w
from	pedido_exame_externo_item
where	nr_sequencia	= nr_sequencia_p;

for pos in 1..length(ie_desc_solic_exame_w)
loop
  ie_tipo_desc_w := substr(ie_desc_solic_exame_w, pos, 1);

  if (coalesce(ds_exame_w::text, '') = '') then  
    begin
      if (ie_tipo_desc_w = 'E' AND nr_seq_exame_w > 0) then
      begin
        select	ds_exame
        into STRICT	ds_exame_w
        from	med_exame_padrao
        where	nr_sequencia	= nr_seq_exame_w;
      end;
      elsif (ie_tipo_desc_w = 'S' AND ds_exame_sem_cad_w IS NOT NULL AND ds_exame_sem_cad_w::text <> '') then
        ds_exame_w	:= ds_exame_sem_cad_w;
      elsif (ie_tipo_desc_w = 'L' AND nr_seq_exame_lab_w IS NOT NULL AND nr_seq_exame_lab_w::text <> '') then
        ds_exame_w	:= substr(obter_desc_exame(nr_seq_exame_lab_w),1,255);
      elsif (ie_tipo_desc_w = 'I' AND nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then
        ds_exame_w	:= substr( obter_desc_proc_interno(nr_proc_interno_w),1,255);
      elsif ((ie_tipo_desc_w = 'P') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '')) then
        ds_exame_w	:= substr(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255);
      end if;
    end;
  end if;

end loop;

return	ds_exame_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_med_exame_externo (nr_sequencia_p bigint, ie_desc_solic_exame_p text) FROM PUBLIC;

