-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_lista_pend_resposta ( nr_prescricao_p bigint) RETURNS varchar AS $body$
DECLARE

			 
			 
ds_lista_seq_w		varchar(2000);
nr_seq_prescr_w		bigint;
ie_pergunta_tecnica_obrig_w	varchar(1);

c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	prescr_procedimento r 
	where	r.nr_prescricao	= nr_prescricao_p 
	and	(r.nr_seq_exame IS NOT NULL AND r.nr_seq_exame::text <> '') 
	and	ie_pergunta_tecnica_obrig_w = 'N' 
	and not exists (	SELECT 	1 
				from 	fleury_prescr_proced_valid v 
				where 	v.nr_prescricao 	= r.nr_prescricao 
				and 	v.nr_seq_prescr 	= r.nr_sequencia ) 
	
union
 
	select	nr_sequencia 
	from	prescr_procedimento r 
	where	r.nr_prescricao	= nr_prescricao_p 
	--and	r.nr_seq_exame is not null 
	and	(obter_sigla_exame_fleury_diag(r.nr_prescricao, r.nr_sequencia) IS NOT NULL AND (obter_sigla_exame_fleury_diag(r.nr_prescricao, r.nr_sequencia))::text <> '') 
	and	ie_pergunta_tecnica_obrig_w = 'N' 
	and not exists (	select 	1 
				from 	fleury_prescr_proced_valid v 
				where 	v.nr_prescricao 	= r.nr_prescricao 
				and 	v.nr_seq_prescr 	= r.nr_sequencia )							 
	
union
 
	select	nr_sequencia 
	from	prescr_procedimento r 
	where	r.nr_prescricao	= nr_prescricao_p 
	and	(r.nr_seq_exame IS NOT NULL AND r.nr_seq_exame::text <> '') 
	and	ie_pergunta_tecnica_obrig_w = 'S' 
	and not exists (	select 	1 
				from 	fleury_prescr_proced_valid v 
				where 	v.nr_prescricao 	= r.nr_prescricao 
				and 	v.nr_seq_prescr 	= r.nr_sequencia 
				and		coalesce(v.ie_pergunta_finalizada,'N') = 'S') 
	
union
 
	select	nr_sequencia 
	from	prescr_procedimento r 
	where	r.nr_prescricao	= nr_prescricao_p 
	--and	r.nr_seq_exame is not null 
	and	(obter_sigla_exame_fleury_diag(r.nr_prescricao, r.nr_sequencia) IS NOT NULL AND (obter_sigla_exame_fleury_diag(r.nr_prescricao, r.nr_sequencia))::text <> '') 
	and	ie_pergunta_tecnica_obrig_w = 'S' 
	and not exists (	select 	1 
				from 	fleury_prescr_proced_valid v 
				where 	v.nr_prescricao 	= r.nr_prescricao 
				and 	v.nr_seq_prescr 	= r.nr_sequencia 
				and		coalesce(v.ie_pergunta_finalizada,'N') = 'S') 
	/*and not exists (select 	1 
				  from 	fleury_prescr_perg_tec v, fleury_prescr_perg_resp u 
				  where 	v.nr_prescricao = r.nr_prescricao 
				  and 	v.nr_seq_prescr = r.nr_sequencia 
					and   v.nr_sequencia = u.nr_seq_perg_tec)*/
			  
	order 	by nr_sequencia;


BEGIN 
 
ds_lista_seq_w	:= null;
 
select	coalesce(max(b.IE_PERGUNTA_TECNICA_OBRIG), 'N') 
into STRICT	ie_pergunta_tecnica_obrig_w 
from 	prescr_medica a, lab_parametro b 
where 	a.cd_estabelecimento = b.cd_estabelecimento 
and 	a.nr_prescricao = nr_prescricao_p;
 
open c01;
loop 
fetch c01 into	 
	nr_seq_prescr_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	ds_lista_seq_w 	:= ds_lista_seq_w ||','|| nr_seq_prescr_w;
	 
	end;
end loop;
close c01;
 
if (ds_lista_seq_w IS NOT NULL AND ds_lista_seq_w::text <> '') then 
	ds_lista_seq_w := substr(ds_lista_seq_w, 2, length(ds_lista_seq_w));
end if;
 
return	ds_lista_seq_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_lista_pend_resposta ( nr_prescricao_p bigint) FROM PUBLIC;

