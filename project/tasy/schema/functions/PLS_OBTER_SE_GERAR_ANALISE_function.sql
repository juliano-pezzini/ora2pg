-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_gerar_analise ( nr_seq_guia_req_p bigint, nr_seq_item_p bigint, ie_tipo_item_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obtém se gera análise.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retornor_w			varchar(1) := 'S';
qt_glosa_w			bigint;


BEGIN

if (ie_tipo_item_p = 1) then
	select	count(1)
	into STRICT	qt_glosa_w
	from	pls_guia_glosa
	where	nr_seq_guia_proc  = nr_seq_item_p
	and	coalesce(nr_seq_ocorrencia::text, '') = '';

	if (qt_glosa_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_ocorrencia		b,
			pls_ocorrencia_benef	a
		where	a.nr_seq_ocorrencia	= b.nr_sequencia
		and	a.nr_seq_guia_plano	= nr_seq_guia_req_p
		and	a.nr_seq_proc 		= nr_seq_item_p
		and	coalesce(a.nr_seq_mat::text, '') = ''
		and	(b.nr_seq_motivo_glosa IS NOT NULL AND b.nr_seq_motivo_glosa::text <> '')
		and	b.ie_auditoria 		= 'N';
	end if;

elsif (ie_tipo_item_p = 2) then
	select	count(1)
	into STRICT	qt_glosa_w
	from	pls_guia_glosa
	where	nr_seq_guia_mat = nr_seq_item_p
	and	coalesce(nr_seq_ocorrencia::text, '') = '';

	if (qt_glosa_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_ocorrencia		b,
			pls_ocorrencia_benef	a
		where	a.nr_seq_ocorrencia	= b.nr_sequencia
		and	a.nr_seq_guia_plano	= nr_seq_guia_req_p
		and	a.nr_seq_mat 		= nr_seq_item_p
		and	coalesce(a.nr_seq_proc::text, '') = ''
		and	(b.nr_seq_motivo_glosa IS NOT NULL AND b.nr_seq_motivo_glosa::text <> '')
		and	b.ie_auditoria 		= 'N';
	end if;

elsif (ie_tipo_item_p = 5) then
	select	count(1)
	into STRICT	qt_glosa_w
	from	pls_requisicao_glosa
	where	nr_seq_req_proc  = nr_seq_item_p
	and	coalesce(nr_seq_ocorrencia::text, '') = '';

	if (qt_glosa_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_ocorrencia		b,
			pls_ocorrencia_benef	a
		where	a.nr_seq_ocorrencia	= b.nr_sequencia
		and	a.nr_seq_requisicao	= nr_seq_guia_req_p
		and	a.nr_seq_proc 		= nr_seq_item_p
		and	coalesce(a.nr_seq_mat::text, '') = ''
		and	(b.nr_seq_motivo_glosa IS NOT NULL AND b.nr_seq_motivo_glosa::text <> '')
		and	b.ie_auditoria 		= 'N';
	end if;

elsif (ie_tipo_item_p = 6) then
	select	count(1)
	into STRICT	qt_glosa_w
	from	pls_requisicao_glosa
	where	nr_seq_req_mat = nr_seq_item_p
	and	coalesce(nr_seq_ocorrencia::text, '') = '';

	if (qt_glosa_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_ocorrencia		b,
			pls_ocorrencia_benef	a
		where	a.nr_seq_ocorrencia	= b.nr_sequencia
		and	a.nr_seq_requisicao	= nr_seq_guia_req_p
		and	a.nr_seq_mat 		= nr_seq_item_p
		and	coalesce(a.nr_seq_proc::text, '') = ''
		and	(b.nr_seq_motivo_glosa IS NOT NULL AND b.nr_seq_motivo_glosa::text <> '')
		and	b.ie_auditoria 		= 'N';
	end if;

elsif (ie_tipo_item_p = 0) then
	select	count(1)
	into STRICT	qt_glosa_w
	from	pls_requisicao_glosa
	where	nr_seq_requisicao  = nr_seq_guia_req_p
	and	coalesce(nr_seq_ocorrencia::text, '') = '';

	if (qt_glosa_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_ocorrencia		b,
			pls_ocorrencia_benef	a
		where	a.nr_seq_ocorrencia	= b.nr_sequencia
		and	a.nr_seq_requisicao	= nr_seq_guia_req_p
		and	coalesce(a.nr_seq_proc::text, '') = ''
		and	coalesce(a.nr_seq_mat::text, '') = ''
		and	(b.nr_seq_motivo_glosa IS NOT NULL AND b.nr_seq_motivo_glosa::text <> '')
		and	b.ie_auditoria 		= 'N';
	end if;
end if;

if (qt_glosa_w > 0) then
	ds_retornor_w	:= 'N';
end if;

return	ds_retornor_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_gerar_analise ( nr_seq_guia_req_p bigint, nr_seq_item_p bigint, ie_tipo_item_p bigint) FROM PUBLIC;

