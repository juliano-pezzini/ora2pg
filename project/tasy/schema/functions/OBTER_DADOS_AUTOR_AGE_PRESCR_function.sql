-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_autor_age_prescr ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, nr_seq_proc_prescr_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(255);
nr_sequencia_autor_w	bigint;
dt_inicio_vigencia_w	timestamp;
dt_autorizacao_w	timestamp;
dt_entrada_prevista_w	timestamp;
dt_fim_vigencia_w	timestamp;

/*ie_opcao_p
P	- Data pedido médico
A	- Data da autorização
V	- Data da validade auto
*/
BEGIN

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

	begin
	select	a.nr_sequencia
	into STRICT	nr_sequencia_autor_w
	from 	autorizacao_convenio a,
		estagio_autorizacao b
	where	a.nr_seq_estagio	= b.nr_sequencia
	and	b.ie_interno		<> '70' --Desconsidera se estiver cancelado
	and	a.nr_seq_agenda		= nr_seq_agenda_p  LIMIT 1;
	exception
	when others then
		nr_sequencia_autor_w	:= null;
	end;

elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then

	begin
	select	a.nr_sequencia
	into STRICT	nr_sequencia_autor_w
	from 	procedimento_autorizado c,
		autorizacao_convenio a,
		estagio_autorizacao b
	where	a.nr_sequencia		= c.nr_sequencia_autor
	and	a.nr_seq_estagio	= b.nr_sequencia
	and	b.ie_interno		<> '70' --Desconsidera se estiver cancelado
	and	c.nr_prescricao		= nr_prescricao_p
	and	c.nr_seq_prescricao	= nr_seq_proc_prescr_p  LIMIT 1;
	exception
	when others then
		nr_sequencia_autor_w	:= null;
	end;

	if (coalesce(nr_sequencia_autor_w::text, '') = '') then

		begin
		select	a.nr_sequencia
		into STRICT	nr_sequencia_autor_w
		from 	autorizacao_convenio a,
			estagio_autorizacao b
		where	a.nr_seq_estagio	= b.nr_sequencia
		and	b.ie_interno		<> '70' --Desconsidera se estiver cancelado
		and	a.nr_prescricao		= nr_prescricao_p  LIMIT 1;
		exception
		when others then
			nr_sequencia_autor_w	:= null;
		end;
	end if;
end if;

if (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') then

	select	dt_inicio_vigencia,
		dt_autorizacao,
		dt_entrada_prevista,
		dt_fim_vigencia
	into STRICT	dt_inicio_vigencia_w,
		dt_autorizacao_w,
		dt_entrada_prevista_w,
		dt_fim_vigencia_w
	from	autorizacao_convenio
	where	nr_sequencia	= nr_sequencia_autor_w;

	if (ie_opcao_p = 'P') then
		ds_retorno_w	:= to_char(coalesce(dt_entrada_prevista_w,dt_autorizacao_w),'dd/mm/yyyy hh24:mi:ss');
	elsif (ie_opcao_p = 'A') then
		ds_retorno_w	:= to_char(coalesce(dt_inicio_vigencia_w,dt_autorizacao_w),'dd/mm/yyyy hh24:mi:ss');
	elsif (ie_opcao_p = 'V') then
		ds_retorno_w	:= to_char(dt_fim_vigencia_w,'dd/mm/yyyy hh24:mi:ss');
	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_autor_age_prescr ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, nr_seq_proc_prescr_p bigint, ie_opcao_p text) FROM PUBLIC;

