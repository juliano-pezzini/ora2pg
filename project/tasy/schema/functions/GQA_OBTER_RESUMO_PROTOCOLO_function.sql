-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION gqa_obter_resumo_protocolo (NR_SEQ_PROTOCOLO_P GQA_PROTOCOLO_PAC.NR_SEQUENCIA%type, IE_RTF text) RETURNS text AS $body$
DECLARE


dummy      text := '';
localdummy text := '';
localtext  varchar(2000);
ds_cabecalho_w  varchar(1000);
ds_rodape_w			varchar(1000);
cd_perfil_ativo_w		bigint;
ds_fonte_w			varchar(100);
ds_tam_fonte_w			varchar(100);
nr_tam_fonte_w			integer;

NM_USUARIO_W          GQA_PROTOCOLO_RESUMO.NM_USUARIO%type;
NR_SEQ_RESUMO_W       GQA_PROTOCOLO_RESUMO.NR_SEQUENCIA%type;

cd_doenca_w           gqa_acao.cd_doenca%type;

protocolo             GQA_PROTOCOLO_PAC%rowtype;

  FUNCTION gqa_gerar_resumo_protocol_bold(text text) RETURN text IS
  
  item RECORD;
  etapa RECORD;
  acao RECORD;

BEGIN
  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    return '\b ' || text || '\b0 ';
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    return '<strong>' || text || '</strong>';
  else
    return text;
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocol_lb(text clob, space number) RETURN clob IS
  localtextfunction varchar2(100) := '';
  BEGIN

  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..(space * 2) LOOP
         localtextfunction := localtextfunction || ' ';
      END LOOP;
    end if;

    return localtextfunction || text || '\par ';
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    if ((space IS NOT NULL AND space::text <> '') and space >= 0) then
      localtextfunction := replace(' style="text-indent : @@em;"', '@@', space);
    else
      localtextfunction := '';
    end if;
    return '<p'|| localtextfunction ||'>' || text || '</p>';
  else
    if ((space IS NOT NULL AND space::text <> '') and space > 0) then
      FOR aux IN 1..space LOOP
         localtextfunction := localtextfunction || ' ';
      END LOOP;
    end if;
    return localtextfunction || text || chr(13) || chr(10);
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocol_canc RETURN clob IS
  BEGIN
  if (coalesce(IE_RTF::text, '') = '' or IE_RTF = 'S') then
    return gqa_gerar_resumo_protocol_bold(upper(obter_desc_expressao(322155))); -- colocar underline e italic
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    return '<span style="text-decoration:underline; color:#da2935;"><em>' || gqa_gerar_resumo_protocol_bold(upper(obter_desc_expressao(322155))) || '</em></span>';
  else
    return obter_desc_expressao(322155);
  end if;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_av(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction clob;
    localtextfunction2 varchar2(2000);
    responsefunction clob := '';
    resposta varchar2(200);
  BEGIN
    responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select ds_tipo into STRICT localtextfunction from med_tipo_avaliacao a where nr_sequencia = acao.NR_SEQ_AVALIACAO;
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);

      if (etapa.qt_resultado IS NOT NULL AND etapa.qt_resultado::text <> '') then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(296046) || ': ' ||  etapa.qt_resultado, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(284510) || ': ', 6);

        resposta := obter_desc_expressao(297817);

        for item in (
            SELECT
                     x.DS_ITEM
                    ,x.IE_RESULTADO
                    ,c.QT_RESULTADO
                    ,c.DS_RESULTADO
            from MED_AVALIACAO_RESULT c,
                 MED_ITEM_AVALIAR x
            where c.NR_SEQ_AVALIACAO = etapa.NR_SEQ_AVALIACAO
              and c.NR_SEQ_ITEM = x.NR_SEQUENCIA
              and x.IE_RESULTADO not in (
               'L' -- Calculos
              ,'E' -- Resultado de Select
              ,'F' -- Resultado de Select Longo
              )
            order by x.NR_SEQ_APRESENT asc
        ) loop
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('> ' || item.DS_ITEM, 8);

          if (item.DS_RESULTADO IS NOT NULL AND item.DS_RESULTADO::text <> '') then
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.DS_RESULTADO, 10);
          else
            if (item.IE_RESULTADO = 'B') then
              select CASE WHEN item.QT_RESULTADO=0 THEN  obter_desc_expressao(327114)  ELSE obter_desc_expressao(327113) END  into STRICT localtextfunction2;
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || localtextfunction2, 10);
            else
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.QT_RESULTADO, 10);
            end if;
          end if;
        end loop;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 8);
      end if;

    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_dl(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    responsefunction clob := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '' and coalesce(etapa.QT_RESULTADO::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(327114), 6);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(287694) || ': ', 4);
        begin
            select t.cd_doenca
            into STRICT cd_doenca_w
            from gqa_acao t where t.nr_sequencia = etapa.nr_seq_acao  LIMIT 1;
        exception when no_data_found then
          cd_doenca_w := null;
        end;

        begin
          select zz.DS_DOENCA_CID into STRICT localtextfunction from CID_DOENCA zz where zz.CD_DOENCA_CID = cd_doenca_w;
        exception when no_data_found then
          localtextfunction := null;
        end;
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(cd_doenca_w || ' - ' || localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(487395), 6);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_es(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    localtextfunction2 varchar2(2000);
    resposta varchar2(200);
    responsefunction clob := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select  trim(both t.ds_escala) ds into STRICT localtextfunction from eif_escala_ii t where nr_sequencia = acao.NR_SEQ_SCORE_FLEX_II;
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);

      if (etapa.qt_resultado IS NOT NULL AND etapa.qt_resultado::text <> '') then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(296046) || ': ' ||  etapa.qt_resultado, 6);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(284510) || ': ', 6);

        resposta := obter_desc_expressao(297817);

        for item in (
            SELECT
                    x.DS_ITEM
                    ,x.IE_RESULTADO
                    ,c.QT_RESULTADO
                    ,c.DS_RESULTADO
            from SCORE_AVALIACAO_RESULT c,
                 MED_ITEM_AVALIAR x
            where c.NR_SEQ_AVALIACAO = etapa.NR_SEQ_SCORE_FLEX_II
              and c.NR_SEQ_ITEM = x.NR_SEQUENCIA
              and x.IE_RESULTADO not in (
               'L' -- Calculos
              ,'E' -- Resultado de Select
              ,'F' -- Resultado de Select Longo
              )
            order by x.NR_SEQ_APRESENT asc
        ) loop
          responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('> ' || item.DS_ITEM, 8);

          if (item.DS_RESULTADO IS NOT NULL AND item.DS_RESULTADO::text <> '') then
            responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.DS_RESULTADO, 10);
          else
            if (item.IE_RESULTADO = 'B') then
              select CASE WHEN item.QT_RESULTADO=0 THEN  obter_desc_expressao(327114)  ELSE obter_desc_expressao(327113) END  into STRICT localtextfunction2;
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || localtextfunction2, 10);
            else
              responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb('' || resposta || ': ' || item.QT_RESULTADO, 10);
            end if;
          end if;
        end loop;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction || ' | ' || obter_desc_expressao(293938), 6);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_ep(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    responsefunction clob := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      -- consulta obtida na visao que mostra o campo no atepacSD...
      Select a.DS_REGRA ds
      into STRICT localtextfunction
            from   GQA_PENDENCIA_REGRA a,
                   GQA_ACAO b              
            where  b.nr_Seq_pend_regra = a.nr_sequencia
            and    b.IE_TIPO_ACAO = 'PP'
            and    a.ie_evento = '9'
            and    coalesce(b.ie_situacao,'A') = 'A'
            and    coalesce(a.ie_situacao,'A') = 'A'
            and    a.NR_SEQ_PENDENCIA =  ( SELECT max(t.NR_SEQ_PENDENCIA) 
                                                from   GQA_PENDENCIA_REGRA t         
                                              where  t.nr_sequencia  = acao.NR_SEQ_PEND_REGRA);

      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_me(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    responsefunction clob := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if ((acao.QT_PONTO_CANCELAR IS NOT NULL AND acao.QT_PONTO_CANCELAR::text <> '') and acao.QT_PONTO_CANCELAR = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(331217), 4);
      elsif ((acao.QT_PONTO_CONFIRMA IS NOT NULL AND acao.QT_PONTO_CONFIRMA::text <> '') and acao.QT_PONTO_CONFIRMA = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(285693), 4);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_nc(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction long;
    responsefunction clob := '';
    ds_evolucao varchar2(1000);
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      if ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        begin
          select DS_EVOLUCAO, Obter_desc_tipo_evolucao(IE_EVOLUCAO_CLINICA)
          into STRICT localtextfunction, ds_evolucao 
          from evolucao_paciente where cd_evolucao = etapa.nr_seq_evolucao;
        exception when no_data_found then
          localtextfunction := '';
        end;
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(792029) || ': ' || ds_evolucao, 4);

        if (IE_RTF = 'H') then
          responsefunction := responsefunction || '<div style="text-indent : 6em;">' || localtextfunction || '</div>';
        else
          responsefunction := responsefunction || localtextfunction;
        end if;
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(792029) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pe(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    responsefunction clob := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else
      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pp(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    responsefunction clob := '';
    ds_resumo_c clob := '';
    DS_RESUMO_W long;

    NR_SEQ_PROTOCOLO_P1 NUMBER;
    NR_SEQ_PEND_PAC_ACAO_P1 NUMBER;
    NM_USUARIO_P1 VARCHAR2(200);
    NM_MEDICACAO_P1 VARCHAR2(200);
    NM_PROTOCOLO_P1 VARCHAR2(200);
    NR_PRESCRICAO_P1 NUMBER;
    CD_PROTOCOLO_P1 NUMBER;
    NR_SEQUENCIA_P1 NUMBER;

    CD_PROTOCOLO_P2 NUMBER;
    NR_SEQ_MEDICACAO_P2 NUMBER;
    IE_RTF_HTML_P2 VARCHAR2(200);
    NM_USUARIO_P2 VARCHAR2(200);

    aux1 varchar2(100);
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(293938), 4);
    else

        if (acao.CD_PROTOCOLO IS NOT NULL AND acao.CD_PROTOCOLO::text <> '' AND acao.NR_SEQ_PROTOCOLO IS NOT NULL AND acao.NR_SEQ_PROTOCOLO::text <> '') then
          NR_SEQ_PROTOCOLO_P1 := acao.NR_SEQ_PROTOCOLO;
          NM_USUARIO_P1 := nm_usuario_w;

          SELECT * FROM OBTER_INFORM_PRESCR_PROTOCOLO(
             NR_SEQ_PROTOCOLO_P1, NR_SEQ_PEND_PAC_ACAO_P1, NM_USUARIO_P1, NM_MEDICACAO_P1, NM_PROTOCOLO_P1, NR_PRESCRICAO_P1, CD_PROTOCOLO_P1, NR_SEQUENCIA_P1
          ) INTO STRICT NM_MEDICACAO_P1, NM_PROTOCOLO_P1, NR_PRESCRICAO_P1, CD_PROTOCOLO_P1, NR_SEQUENCIA_P1
;

          CALL EXECUTAR_PEP_GERAR_RESUMO_PCK(
             acao.CD_PROTOCOLO,
             NR_SEQUENCIA_P1,
             'HTML5',
             nm_usuario_w
          );

          SELECT DS_RESUMO
          INTO STRICT DS_RESUMO_W
          FROM	PROTOCOLO_MEDIC_RESUMO 
          WHERE CD_PROTOCOLO = acao.CD_PROTOCOLO
          
            AND	NR_SEQ_MEDICACAO = NR_SEQUENCIA_P1
          
            AND	NM_USUARIO = nm_usuario_w 
          ORDER BY CD_PROTOCOLO LIMIT 1;

          aux1 := substr(obter_desc_expressao(328907, 'Resumo protocolo'), 1, 255);

          ds_resumo_c := (DS_RESUMO_W);

          ds_resumo_c := regexp_replace(ds_resumo_c, '<head.*?>*</head>', '');
          ds_resumo_c := regexp_replace(ds_resumo_c, '<title.*?>*</title>', '');
          ds_resumo_c := replace(ds_resumo_c, '<h1>', '<p style="margin-left: -2em;">');
          ds_resumo_c := replace(ds_resumo_c, '</h1>', '</p>');
          ds_resumo_c := replace(ds_resumo_c, 'width="70%" colspan="5', 'width="100%" colspan="6');
          ds_resumo_c := regexp_replace(ds_resumo_c, '<html.*?>|</html>', '');
          ds_resumo_c := replace(ds_resumo_c, '<br>', '');
          ds_resumo_c := replace(ds_resumo_c, aux1, aux1 || ':');

          responsefunction := responsefunction || '<div style="margin-left: 6em;">' || ds_resumo_c || '</div>';

        end if;

    end if;
  return responsefunction;
  END;

  FUNCTION gqa_gerar_resumo_protocolo_pg(etapa GQA_PROTOCOLO_ETAPA_PAC%rowtype, acao GQA_ACAO%rowtype) RETURN clob IS
    localtextfunction varchar2(2000);
    responsefunction clob := '';
  BEGIN
    if (coalesce(etapa.DT_FIM::text, '') = '' and coalesce(etapa.QT_RESULTADO::text, '') = '') then
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ', 4);
      responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293938), 6);
    else
      select DS_PENDENCIA into STRICT localtextfunction from GQA_PENDENCIA where nr_sequencia = acao.NR_SEQ_PROTOCOLO_GER;

      if ((acao.QT_PONTO_NAO IS NOT NULL AND acao.QT_PONTO_NAO::text <> '') and acao.QT_PONTO_NAO = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327114), 4);
      elsif ((acao.QT_PONTO_SIM IS NOT NULL AND acao.QT_PONTO_SIM::text <> '') and acao.QT_PONTO_SIM = etapa.QT_RESULTADO)then
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(327113), 4);
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(localtextfunction, 6);
      else
        responsefunction := responsefunction || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(297781) || ': ' || obter_desc_expressao(487395), 4);
      end if;
    end if;
  return responsefunction;
  END;

begin
  /*PARAMETROS*/

  select obter_usuario_ativo into STRICT nm_usuario_w;
  cd_perfil_ativo_w := obter_perfil_ativo;
  ds_fonte_w := obter_param_usuario(281, 5, cd_perfil_ativo_w, nm_usuario_w, cd_perfil_ativo_w, ds_fonte_w);
  ds_tam_fonte_w := obter_param_usuario(281, 6, cd_perfil_ativo_w, nm_usuario_w, cd_perfil_ativo_w, ds_tam_fonte_w);
  nr_tam_fonte_w := somente_numero(ds_tam_fonte_w) * 2;
  /*PARAMETROS*/

  select * into STRICT protocolo from gqa_protocolo_pac where NR_SEQUENCIA = NR_SEQ_PROTOCOLO_P;

  dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(761566) || ': ' || protocolo.DS_NOME_PROTOCOLO, 0); /*Nome do protocolo*/
  dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(762976) || ': ' || obter_pf_usuario(protocolo.nm_usuario_liberacao, 'NOME') || ' (' || protocolo.nm_usuario_liberacao || '), ' || obter_desc_expressao(341615) || ' ' || to_char(protocolo.DT_LIBERACAO, 'dd/mon/yyyy hh24:mi:ss'), 0);

  if (protocolo.nr_seq_motivo IS NOT NULL AND protocolo.nr_seq_motivo::text <> '' AND protocolo.dt_termino IS NOT NULL AND protocolo.dt_termino::text <> '') then -- SE FOI FINALIZADO
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(300994) || ': ' || obter_pf_usuario(protocolo.nm_usuario_termino, 'NOME') || ' (' || protocolo.nm_usuario_termino || '), ' || obter_desc_expressao(341615) || ' ' || to_char(protocolo.DT_TERMINO, 'dd/mon/yyyy hh24:mi:ss'), 0);
    select nm_justificativa into STRICT localtext from gqa_pend_justificativa where NR_SEQUENCIA = protocolo.nr_seq_motivo;
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293478) || ': ' || localtext, 0);
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(292337) || ': ' || protocolo.ds_justificativa, 0);
  elsif (protocolo.nm_usuario_inativacao IS NOT NULL AND protocolo.nm_usuario_inativacao::text <> '' AND protocolo.nr_seq_motivo IS NOT NULL AND protocolo.nr_seq_motivo::text <> '') then --SE FOI INATIVADO
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(343620) || ': ' || obter_pf_usuario(protocolo.nm_usuario_inativacao, 'NOME') || ' (' || protocolo.nm_usuario_inativacao || '), ' || obter_desc_expressao(341615) || ' ' || to_char(protocolo.dt_inativacao, 'dd/mon/yyyy hh24:mi:ss'), 0); /*Profissional que inativou o protocolo*/
    select nm_justificativa into STRICT localtext from gqa_pend_justificativa where NR_SEQUENCIA = protocolo.nr_seq_motivo;
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293478) || ': ' || localtext, 0);
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(292337) || ': ' || protocolo.ds_justificativa, 0);
  else
    dummy := dummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(298834) || ': ' || obter_desc_expressao(802158), 0); /*Status atual*/
  end if;

  dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || obter_desc_expressao(289637);

  for etapa in (
                  select a.* 
                  from GQA_PROTOCOLO_ETAPA_PAC a,
                       ( select 
                                 y.nr_sequencia, 
                                 y.nr_seq_etapa,
                                 obter_dependencia_etapa(protocolo.nr_seq_protocolo, y.nr_seq_etapa, 'O') hierarquia
                         from GQA_PROTOCOLO_ETAPA_PAC y
                         where y.NR_SEQ_PROT_PAC = NR_SEQ_PROTOCOLO_P
                       ) b
                  where a.NR_SEQ_PROT_PAC = NR_SEQ_PROTOCOLO_P
                  and a.nr_sequencia = b.nr_sequencia
                  order by b.hierarquia asc
               ) loop
  
    if (etapa.NR_SEQ_MOTIVO_CANCELAR IS NOT NULL AND etapa.NR_SEQ_MOTIVO_CANCELAR::text <> '') then
      SELECT t.nm_justificativa
      into STRICT localtext
      FROM gqa_pend_justificativa t
      WHERE nr_sequencia = etapa.NR_SEQ_MOTIVO_CANCELAR;

      localdummy := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(etapa.DS_NOME_ETAPA) || ' - ' || gqa_gerar_resumo_protocol_canc, 2);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb('@#@#1tipo_etapa1@#@#', 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(929133) || ': ' || to_char(etapa.DT_CANCELAR_USUARIO, 'dd/mon/yyyy hh24:mi:ss'), 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(569370) || ': ' || obter_pf_usuario(etapa.NM_USUARIO_CANCELAR, 'NOME') || ' (' || etapa.NM_USUARIO_CANCELAR || ')', 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(293478) || ': ' || localtext, 4);
      localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(292337) || ': ' || etapa.DS_JUSTIFICATIVA_CANCELAR, 4);
      dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || localdummy;

      for acao in (SELECT IE_TIPO_ACAO from GQA_ACAO where NR_SEQUENCIA = etapa.NR_SEQ_ACAO) loop
        dummy := replace(dummy, '@#@#1tipo_etapa1@#@#', obter_desc_expressao(299368) || ': ' || OBTER_VALOR_DOMINIO(9520, acao.IE_TIPO_ACAO));
      end loop;
      GOTO end_loop_continue;
    elsif (coalesce(etapa.DT_FIM::text, '') = '') then --regra informada por marcelo (se a etapa nao estiver finalizada, nao mostrar)
      GOTO end_loop_continue;
    end if;

    localdummy := gqa_gerar_resumo_protocol_lb(gqa_gerar_resumo_protocol_bold(etapa.DS_NOME_ETAPA), 2);
    localdummy := localdummy || gqa_gerar_resumo_protocol_lb('@#@#1tipo_etapa1@#@#', 4);
    localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(291978) || ': ' || to_char(etapa.DT_INICIO, 'dd/mon/yyyy hh24:mi:ss')
                   || ', ' || obter_desc_expressao(290101) || ': ' || to_char(etapa.DT_FIM, 'dd/mon/yyyy hh24:mi:ss'), 4);
    localdummy := localdummy || gqa_gerar_resumo_protocol_lb(obter_desc_expressao(289772) || ': ' || obter_pf_usuario(etapa.nm_usuario_executor, 'NOME') || ' (' || etapa.nm_usuario_executor || ')', 4);

    dummy := dummy || gqa_gerar_resumo_protocol_lb('', null) || localdummy;

    for acao in (SELECT * from GQA_ACAO where NR_SEQUENCIA = etapa.NR_SEQ_ACAO) loop
      dummy := replace(dummy, '@#@#1tipo_etapa1@#@#', obter_desc_expressao(299368) || ': ' || OBTER_VALOR_DOMINIO(9520, acao.IE_TIPO_ACAO));
      if (acao.IE_TIPO_ACAO = 'AV') then
        dummy := dummy || gqa_gerar_resumo_protocolo_av(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'DL') then
        dummy := dummy || gqa_gerar_resumo_protocolo_dl(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'ES') then
        dummy := dummy || gqa_gerar_resumo_protocolo_es(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'EP') then
        dummy := dummy || gqa_gerar_resumo_protocolo_ep(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'ME') then
        dummy := dummy || gqa_gerar_resumo_protocolo_me(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'NC') then
        dummy := dummy || gqa_gerar_resumo_protocolo_nc(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'PE') then
        dummy := dummy || gqa_gerar_resumo_protocolo_pe(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'PP') then
        dummy := dummy || gqa_gerar_resumo_protocolo_pp(etapa, acao);
      elsif (acao.IE_TIPO_ACAO = 'PG') then
        dummy := dummy || gqa_gerar_resumo_protocolo_pg(etapa, acao);
      end if;
    end loop;

   <<end_loop_continue>>
   NULL; -- evitar erro apos declaracao de label
  end loop;

  if ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'S') then
    ds_cabecalho_w := '{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fswiss\fcharset0 '
      || ds_fonte_w
      || ';}}'
      || '{\*\generator msftedit 5.41.15.1507;}\viewkind4\uc1\pard\f0\fs'
      || nr_tam_fonte_w
      || ' ';

    ds_rodape_w := '}';
    dummy := ds_cabecalho_w
      || dummy
      || ds_rodape_w;
  elsif ((IE_RTF IS NOT NULL AND IE_RTF::text <> '') and IE_RTF = 'H') then
    dummy := regexp_replace(dummy, '<html.*?>|</html>', '');
  end if;

RAISE NOTICE '%', dummy;
  return dummy;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION gqa_obter_resumo_protocolo (NR_SEQ_PROTOCOLO_P GQA_PROTOCOLO_PAC.NR_SEQUENCIA%type, IE_RTF text) FROM PUBLIC;

