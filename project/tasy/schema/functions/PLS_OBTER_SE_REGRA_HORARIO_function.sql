-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_regra_horario ( hr_inicio_regra_p timestamp, hr_fim_regra_p timestamp, ie_hora_inicial_p pls_proc_criterio_horario.ie_hora_inicial%type, ie_hora_final_p pls_proc_criterio_horario.ie_hora_final%type, dt_inicio_proc_p timestamp, dt_final_proc_p timestamp, ie_percentual_p pls_proc_criterio_horario.ie_percentual%type) RETURNS varchar AS $body$
DECLARE


nr_retorno_w		double precision;
ds_retorno_w		varchar(1) := 'N';
qt_minutos_w		double precision;
qt_minutos_regra_w	double precision;
qt_comum_w		double precision;
dt_inicio_regra_w	timestamp;
dt_fim_regra_w		timestamp;
dt_inicio_proc_w	timestamp;
dt_final_proc_w		timestamp;
ie_nao_obrigatorio_w	boolean;


BEGIN

ds_retorno_w := 'S';
ie_nao_obrigatorio_w := true;

if (hr_inicio_regra_p IS NOT NULL AND hr_inicio_regra_p::text <> '') then
	dt_inicio_regra_w := pls_manipulacao_datas_pck.obter_data_mais_hora(dt_inicio_proc_p, hr_inicio_regra_p);
end if;

if (hr_fim_regra_p IS NOT NULL AND hr_fim_regra_p::text <> '') then
	dt_fim_regra_w := pls_manipulacao_datas_pck.obter_data_mais_hora(dt_final_proc_p, hr_fim_regra_p);
end if;

-- quando a regra obriga hora inicial
if (ie_hora_inicial_p = 'O') and
	((dt_inicio_proc_p < dt_inicio_regra_w) or
	coalesce(dt_inicio_proc_p::text, '') = '') then

	ds_retorno_w := 'N';
	ie_nao_obrigatorio_w := false;
end if;

-- quando a regra obriga hora final
if (ie_hora_final_p = 'O') and
	((dt_final_proc_p > dt_fim_regra_w) or
	coalesce(dt_final_proc_p::text, '') = '') then

	ds_retorno_w := 'N';
	ie_nao_obrigatorio_w := false;
end if;

-- se ficou inválido por algum dos motivos acima não precisa entrar aqui
if (ie_nao_obrigatorio_w) then
	-- se foi informado hora de início e fim na regra
	if (hr_inicio_regra_p IS NOT NULL AND hr_inicio_regra_p::text <> '') and (hr_fim_regra_p IS NOT NULL AND hr_fim_regra_p::text <> '') then

		ds_retorno_w := 'N';

		--Atenção sempre que houver a internção de uma regra iniciar em um dia e terminar em outro devem ser criadas duas regras distintas EX. 22:01:00 até as 05:59:59
		--deverá ser criada uma regra das 22:01:00 até as 23:59:59 e outra das 00:00:00 até as 05:59:59 para que a aplicação das mesmas ocorra de forma correta
		if (dt_inicio_regra_w >= dt_fim_regra_w) then
			dt_fim_regra_w := dt_fim_regra_w + 1;
		end if;

		-- se a data estiver dentro do estabelecido para a regra, retorna S direto
		if	(dt_inicio_proc_p between dt_inicio_regra_w and dt_fim_regra_w AND dt_final_proc_p between  dt_inicio_regra_w and dt_fim_regra_w) then
			ds_retorno_w := 'S';

		else
			-- se foram informados os dois checkbox, cai fora automaticamente porque só entra nestas condições se o período do atendimento estiver fora do da regra
			if (ie_hora_inicial_p = 'S' and ie_hora_final_p = 'S') then

				ds_retorno_w := 'N';
			else
				--Quando a data de inicio do proc estiver dentro da regra, porém a data final do proc for superior, irá verificar se o campo para respeitar
				--a hora inicial está checado na regra(IE_HORA_INICIAL_P)  se o mesmo estiver checado irá retornar a regra como válida pois o procedimento
				--iniciou dentro do horário da regra
				if (ie_hora_inicial_p = 'S') then
					if (dt_inicio_proc_p between dt_inicio_regra_w and dt_fim_regra_w) then

						ds_retorno_w := 'S';
					else
						ds_retorno_w := 'N';
					end if;
				end if;

				--Quando a data de final do proc estiver dentro da regra, porém a data inicial do proc for inferior, irá verificar se o campo para respeitar
				--a hora final está checado na regra(IE_HORA_FINAL_P)  se o mesmo estiver checado irá retornar a regra como válida pois o procedimento
				--finalizou dentro do horário da regra
				if (ie_hora_final_p = 'S') then
					if (dt_final_proc_p between dt_inicio_regra_w and dt_fim_regra_w) then

						ds_retorno_w := 'S';
					else
						ds_retorno_w := 'N';
					end if;
				end if;
			end if;

			-- se acima não deu nada certo, verifica se o tempo de execução do procedimento esta 50% dentro da data da regra
			 if (ds_retorno_w = 'N') then

				--Quantidade de segundos do tempo de execução do procedimento
				dt_inicio_proc_w := dt_inicio_proc_p;
				dt_final_proc_w := dt_final_proc_p;

				if (dt_final_proc_w < dt_inicio_proc_w) then

					dt_final_proc_w	:= dt_final_proc_w  + 1;
				end if;

				select 	count(1)
				into STRICT	qt_minutos_w
				from	table(pls_manipulacao_datas_pck.obter_intervalo_datas(dt_inicio_proc_w, dt_final_proc_w, 'MI', 'N'));

				--Quantidade de segundos do intervalo dos campos hora da regra
				select 	count(1)
				into STRICT	qt_minutos_regra_w
				from	table(pls_manipulacao_datas_pck.obter_intervalo_datas(hr_inicio_regra_p, hr_fim_regra_p, 'MI', 'N'));

				--Obtém a união(Horário de execução em comum) entre o intervalo de execução do procedimento e o intervalo de horas da regra
				select 	count(1)
				into STRICT	qt_comum_w
				from (
					SELECT	dt_retorno
					from	table(pls_manipulacao_datas_pck.obter_intervalo_datas(dt_inicio_proc_w, dt_final_proc_w,'MI', 'S')) dt_proc
					intersect
					SELECT	dt_retorno
					from	table(pls_manipulacao_datas_pck.obter_intervalo_datas(hr_inicio_regra_p, hr_fim_regra_p, 'MI','S'))) alias5;

				--Se pelo menos 50% do tempo da execução do procedimento coincidir com a horário de execução da regra,
				--então considera que horario de execução é compatível com  o esperado pela regra.
				if (qt_comum_w >= dividir(qt_minutos_w, 2)) and (ie_percentual_p = 'S') then

					ds_retorno_w := 'S';

				--Se menos de 50 % do horário de execução do procedimento, for compatível com o horário da regra, entõa
				--verifica se o procedimento foi executado durante todo o tempo da regra(
				--Hora ini proc =08:00:00, Hora fim proc =12:00:00), hora ini regra 11:00:00, hora fim regra 12:00:00
				elsif (qt_comum_w = qt_minutos_regra_w) then

					ds_retorno_w := 'S';
				else
					--tratamento includi oara situação onde a data de inicio é em um dia e a data de fim em outro
					--Obtém a união(Horário de execução em comum) entre o intervalo de execução do procedimento e o intervalo de horas da regra
					if (hr_inicio_regra_p IS NOT NULL AND hr_inicio_regra_p::text <> '') then
						dt_inicio_regra_w := pls_manipulacao_datas_pck.obter_data_mais_hora(dt_final_proc_w, hr_inicio_regra_p);
					end if;

					if (hr_fim_regra_p IS NOT NULL AND hr_fim_regra_p::text <> '') then
						dt_fim_regra_w := pls_manipulacao_datas_pck.obter_data_mais_hora(dt_final_proc_w, hr_fim_regra_p);
					end if;

					select 	count(1)
					into STRICT	qt_comum_w
					from (
						SELECT	dt_retorno
						from	table(pls_manipulacao_datas_pck.obter_intervalo_datas(dt_inicio_proc_w, dt_final_proc_w,'MI', 'S')) dt_proc
						intersect
						SELECT	dt_retorno
						from	table(pls_manipulacao_datas_pck.obter_intervalo_datas(dt_inicio_regra_w, dt_fim_regra_w, 'MI','S'))) alias5;

					--Se pelo menos 50% do tempo da execução do procedimento coincidir com a horário de execução da regra,
					--então considera que horario de execução é compatível com  o esperado pela regra.
					if (qt_comum_w >= dividir(qt_minutos_w, 2)) and (ie_percentual_p = 'S') then

						ds_retorno_w := 'S';

					--Se menos de 50 % do horário de execução do procedimento, for compatível com o horário da regra, entõa
					--verifica se o procedimento foi executado durante todo o tempo da regra(
					--Hora ini proc =08:00:00, Hora fim proc =12:00:00), hora ini regra 11:00:00, hora fim regra 12:00:00
					elsif (qt_comum_w = qt_minutos_regra_w) then

						ds_retorno_w := 'S';
					end if;
				end if;
			end if;
		end if;
	else
		ds_retorno_w := 'S';
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_regra_horario ( hr_inicio_regra_p timestamp, hr_fim_regra_p timestamp, ie_hora_inicial_p pls_proc_criterio_horario.ie_hora_inicial%type, ie_hora_final_p pls_proc_criterio_horario.ie_hora_final%type, dt_inicio_proc_p timestamp, dt_final_proc_p timestamp, ie_percentual_p pls_proc_criterio_horario.ie_percentual%type) FROM PUBLIC;

