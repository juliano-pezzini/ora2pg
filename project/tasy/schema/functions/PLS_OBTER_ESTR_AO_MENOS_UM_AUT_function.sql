-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_estr_ao_menos_um_aut ( nr_seq_estrutura_p pls_ocorrencia_estrutura.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar se há ao menos um item da estrutura no atendimento
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_estrutura_w                  varchar(1)     := 'N';

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_p
	group 	by cd_procedimento,
                ie_origem_proced
        order 	by 1;

C02 CURSOR FOR
	SELECT	nr_seq_material
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_p
	group 	by nr_seq_material
        order 	by 1;
C03 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	group 	by cd_procedimento,
                ie_origem_proced
        order 	by 1;

C04 CURSOR FOR
	SELECT	nr_seq_material
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	group 	by nr_seq_material
        order 	by 1;

C05 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p
	and	coalesce(nr_seq_material::text, '') = ''
	group 	by cd_procedimento,
                ie_origem_proced
        order 	by 1;

C06 CURSOR FOR
	SELECT	nr_seq_material
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p
	and	coalesce(cd_procedimento::text, '') = ''
	group 	by nr_seq_material
        order 	by 1;
BEGIN
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	for r_C01_w in C01 loop
		begin
			ie_estrutura_w	:= 'N';
			/*Se o procedimento da guia fazer parte da estrutura NÂO recebe ocorrência*/

			ie_estrutura_w := pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced, null);
			if (ie_estrutura_w = 'S') then
				exit;
			end if;
		end;
	end loop;
	if (ie_estrutura_w = 'N') then
		for r_C02_w in C02 loop
			begin
				ie_estrutura_w	:= 'N';
				/*Se o material da guia fazer parte da estrutura NÂO recebe ocorrência*/

				ie_estrutura_w := pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, null, null, r_C02_w.nr_seq_material);
				if (ie_estrutura_w = 'S') then
					exit;
				end if;
			end;
		end loop;
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	for r_C03_w in C03 loop
		begin
			ie_estrutura_w	:= 'N';
			/*Se o procedimento da guia fazer parte da estrutura NÂO recebe ocorrência*/

			ie_estrutura_w := pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, r_C03_w.cd_procedimento, r_C03_w.ie_origem_proced, null);
			if (ie_estrutura_w = 'S') then
				exit;
			end if;
		end;
	end loop;
	if (ie_estrutura_w = 'N') then
		for r_C04_w in C04 loop
			begin
				ie_estrutura_w	:= 'N';
				/*Se o material da guia fazer parte da estrutura NÂO recebe ocorrência*/

				ie_estrutura_w := pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, null, null, r_C04_w.nr_seq_material);
				if (ie_estrutura_w = 'S') then
					exit;
				end if;
			end;
		end loop;
	end if;
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	for r_C05_w in C05 loop
		begin
			ie_estrutura_w	:= 'N';
			/*Se o procedimento da guia fazer parte da estrutura NÂO recebe ocorrência*/

			ie_estrutura_w := pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, r_C05_w.cd_procedimento, r_C05_w.ie_origem_proced, null);
			if (ie_estrutura_w = 'S') then
				exit;
			end if;
		end;
	end loop;
	if (ie_estrutura_w = 'N') then
		for r_C06_w in C06 loop
			begin
				ie_estrutura_w	:= 'N';
				/*Se o material da guia fazer parte da estrutura NÂO recebe ocorrência*/

				ie_estrutura_w := pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, null, null, r_C06_w.nr_seq_material);
				if (ie_estrutura_w = 'S') then
					exit;
				end if;
			end;
		end loop;
	end if;
end if;

/*Tratamento realizado para que se mantenha uma lógica no valor da variável*/

select	CASE WHEN ie_estrutura_w='N' THEN 'S' WHEN ie_estrutura_w='S' THEN 'N' END
into STRICT	ie_estrutura_w
;

return  ie_estrutura_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_estr_ao_menos_um_aut ( nr_seq_estrutura_p pls_ocorrencia_estrutura.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type) FROM PUBLIC;

