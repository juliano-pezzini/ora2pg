-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_data_liquidacao_prot (nr_seq_protocolo_p bigint) RETURNS timestamp AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicion?rio [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relat?rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de aten??o:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_liquidacao_w		timestamp	:= null;
nr_seq_lote_w		bigint;
ie_status_w		varchar(1);
nr_seq_prestador_w	bigint;
nr_seq_pag_prestador_w	bigint;
nr_titulo_pagar_w	bigint;
nr_seq_pp_lote_w	pls_conta_medica_resumo.nr_seq_pp_lote%type;


BEGIN
if (coalesce(nr_seq_protocolo_p,0) > 0) then
	select	ie_status
	into STRICT	ie_status_w
	from	pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_p;

	if (ie_status_w = '6') then
		select	max(nr_seq_lote_pgto),
			max(nr_seq_prestador_pgto),
			max(nr_seq_pp_lote)
		into STRICT	nr_seq_lote_w,
			nr_seq_prestador_w,
			nr_seq_pp_lote_w
		from	pls_conta_medica_resumo
		where	nr_seq_protocolo = nr_seq_protocolo_p
		and	((ie_situacao != 'I') or (coalesce(ie_situacao::text, '') = ''));
		
		if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_pag_prestador_w
			from	pls_pagamento_prestador
			where	nr_seq_prestador = nr_seq_prestador_w
			and	nr_seq_lote	= nr_seq_lote_w;
			
			select	max(nr_titulo)
			into STRICT	nr_titulo_pagar_w
			from	pls_pag_prest_vencimento
			where	nr_seq_pag_prestador = nr_seq_pag_prestador_w;
			
			if (coalesce(nr_titulo_pagar_w,0) > 0) then
				begin
					select	dt_liquidacao
					into STRICT	dt_liquidacao_w
					from	titulo_pagar
					where	nr_titulo = nr_titulo_pagar_w;
				exception
				when others then
					dt_liquidacao_w := null;
				end;
			else
				dt_liquidacao_w := null;
			end if;
		elsif (nr_seq_pp_lote_w IS NOT NULL AND nr_seq_pp_lote_w::text <> '') then		
			select	max(c.dt_liquidacao) dt_liquidacao	
			into STRICT	dt_liquidacao_w
			from	pls_pp_prestador		a,
				titulo_pagar			c				
			where 	a.nr_seq_prestador = nr_seq_prestador_w
			and 	a.nr_seq_lote = nr_seq_pp_lote_w
			and 	c.nr_titulo = a.nr_titulo_pagar;
		else
			dt_liquidacao_w := null;
		end if;
	else
		dt_liquidacao_w := null;
	end if;
end if;
return	dt_liquidacao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_data_liquidacao_prot (nr_seq_protocolo_p bigint) FROM PUBLIC;

