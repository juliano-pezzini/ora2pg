-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_espec_solic_oc ( nr_seq_proc_p bigint, nr_seq_proc_espec_p bigint, cd_medico_p bigint ) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1) := 'S';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_w			bigint;
nr_seq_regra_proc_espec_w	bigint := 0;
qt_regra_valida_w		bigint;
ie_ocorrencia_w			pls_controle_estab.ie_ocorrencia%type := pls_obter_se_controle_estab('GO');
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(a.ie_liberado,'S')
	from	pls_oc_proc_espec_regra	a,
		pls_oc_proc_especialidade b
	where	a.nr_seq_regra = b.nr_sequencia
	and	((coalesce(cd_procedimento::text, '') = '') or ((cd_procedimento = coalesce(cd_procedimento_w,0)) and (ie_origem_proced = coalesce(ie_origem_w,0))))
	and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
	and	coalesce(cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
	and	coalesce(cd_area_procedimento, cd_area_w) 		= cd_area_w
	and	a.nr_seq_regra		 			= nr_seq_proc_espec_p
	and	a.ie_situacao		 			= 'A'
	and	exists (	SELECT	x.cd_especialidade
				from	medico_especialidade x
				where	x.cd_pessoa_fisica = cd_medico_p
				and	x.cd_especialidade = b.cd_espec_medica  LIMIT 1)
	order by
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0);


BEGIN

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

/*Obter procedimento da conta*/

begin
select	coalesce(a.cd_procedimento,0),
	coalesce(a.ie_origem_proced,0)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w
from	pls_conta_proc	a,
	pls_conta	b
where	a.nr_seq_conta	= b.nr_sequencia
and	a.nr_sequencia  = nr_seq_proc_p
and	ie_tipo_despesa = 1; /* Regra válida apenas para procedimentos */
exception
when others then
	cd_procedimento_w	:= 0;
end;

if (cd_procedimento_w > 0) then
	/*Obter area, grupo, especialidade do procedimentos  */

	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w;

	/*Verificar entre as especialidade do médico solic/exec se existe alguma com regra que se encaixa*/

	open c02;
	loop
	fetch c02 into
		nr_seq_regra_proc_espec_w,
		ds_retorno_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	end loop;
	close c02;

	if (ds_retorno_w	= 'N') then
		if (ie_ocorrencia_w = 'S') and (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
			select	count(1)
			into STRICT	qt_regra_valida_w
			from	pls_oc_proc_espec_regra	a,
				pls_oc_proc_especialidade b
			where	a.nr_seq_regra = b.nr_sequencia
			and	((coalesce(cd_procedimento::text, '') = '') or ((cd_procedimento = coalesce(cd_procedimento_w,0)) and (ie_origem_proced = coalesce(ie_origem_w,0))))
			and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
			and	coalesce(cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
			and	coalesce(cd_area_procedimento, cd_area_w) 		= cd_area_w
			and	a.ie_situacao		 			= 'A'
			and	a.ie_liberado					= 'S'
			and	exists (	SELECT	x.cd_especialidade
						from	medico_especialidade x
						where	x.cd_pessoa_fisica = cd_medico_p
						and	x.cd_especialidade = b.cd_espec_medica  LIMIT 1)  LIMIT 1;
		else
			select	count(1)
			into STRICT	qt_regra_valida_w
			from	pls_oc_proc_espec_regra	a,
				pls_oc_proc_especialidade b
			where	a.nr_seq_regra = b.nr_sequencia
			and	((coalesce(cd_procedimento::text, '') = '') or ((cd_procedimento = coalesce(cd_procedimento_w,0)) and (ie_origem_proced = coalesce(ie_origem_w,0))))
			and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
			and	coalesce(cd_especialidade, cd_especialidade_w)	= cd_especialidade_w
			and	coalesce(cd_area_procedimento, cd_area_w) 		= cd_area_w
			and	a.ie_situacao		 			= 'A'
			and	a.ie_liberado					= 'S'
			and	b.cd_estabelecimento 				= cd_estabelecimento_w
			and	exists (	SELECT	x.cd_especialidade
						from	medico_especialidade x
						where	x.cd_pessoa_fisica = cd_medico_p
						and	x.cd_especialidade = b.cd_espec_medica  LIMIT 1)  LIMIT 1;
		end if;

		if (qt_regra_valida_w > 0) then
			ds_retorno_w	:= 'S';
		end if;
	end if;

else
	ds_retorno_w	:= 'S';
end if;

/*
ds_retorno_w;
-------------------
N - Não Liberado - gera oc
S - Liberado - Não gera oc
*/
return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_espec_solic_oc ( nr_seq_proc_p bigint, nr_seq_proc_espec_p bigint, cd_medico_p bigint ) FROM PUBLIC;

