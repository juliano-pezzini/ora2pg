-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qtd_pacientes_medico ( nm_usuario_p text, cd_funcao_ativa_p bigint) RETURNS bigint AS $body$
DECLARE

 
ds_lista_pac_w					varchar(10000) := '';				
 
cd_pessoa_fisica_paciente_w		varchar(10);
ie_exibe_alerta_w				varchar(1);
ie_profissional_w				varchar(1);

nr_atendimento_w				bigint;
qt_temp_w						bigint := 0;
qt_eventos_principal_w			bigint := 0;
qt_eventos_auxiliar_w			bigint := 0;
								
								 
cd_pessoa_fisica_medico_w		varchar(10);								
cd_estabelecimento_w			integer;								
									 
/*médico principal*/
									 
c01 CURSOR FOR 
		SELECT c.cd_pessoa_fisica 
		from  atendimento_paciente c, 
		    unidade_atendimento b 
		where 	b.nr_atendimento    = c.nr_atendimento 
		and 	to_char(c.cd_estabelecimento) = to_char(cd_estabelecimento_w) 
		and 	(b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '') 
		and 	c.cd_medico_resp = cd_pessoa_fisica_medico_w		 
		
union
 
		SELECT  a.cd_pessoa_fisica		 
		from	atendimento_paciente a 
		where (coalesce(a.dt_alta::text, '') = '') and (Obter_Unidade_Atendimento(a.nr_atendimento,'A','CL') = '1') 
		and   to_char(a.cd_estabelecimento) = to_char(cd_estabelecimento_w) 
		and (a.cd_medico_resp = cd_pessoa_fisica_medico_w)	 
		and	exists (select 1 
			from	setor_atendimento x, 
				atend_paciente_unidade y 
			where	a.nr_atendimento = y.nr_atendimento 
			and	y.cd_setor_atendimento	= x.cd_setor_atendimento 
			and	x.cd_classif_setor	= '1')		 
		order by cd_pessoa_fisica;
									
							 
--médico auxiliar*/									 
c02 CURSOR FOR 
	SELECT c.cd_pessoa_fisica 
	from  atendimento_paciente c, 
	    unidade_atendimento b 
	where c.cd_medico_resp    <> cd_pessoa_fisica_medico_w 
	 and to_char(c.cd_estabelecimento) = to_char(cd_estabelecimento_w) 
	 and b.nr_atendimento    = c.nr_atendimento	  
	 and exists 
		(SELECT 1 
		from prescr_medica x 
		where	 b.nr_atendimento    = x.nr_atendimento		  
		 and x.nm_usuario_original = nm_usuario_p 
		 and x.cd_medico      = cd_pessoa_fisica_medico_w 
		 and x.dt_prescricao > clock_timestamp() - interval '36 days'/24 
		
union
 
		select	1 
		from	evolucao_paciente x 
		where 	b.nr_atendimento    = x.nr_atendimento		  
		 and 	((x.cd_medico   = cd_pessoa_fisica_medico_w  and 	x.nm_usuario	 = nm_usuario_p) or (x.cd_medico_parecer = cd_pessoa_fisica_medico_w)) 
		and 	x.dt_evolucao > clock_timestamp() - interval '36 days'/24) 
	  and (b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '') 
	
union
 
	select c.cd_pessoa_fisica 
	from  atendimento_paciente c, 
	    unidade_atendimento b, 
	    atend_profissional a 
	where b.nr_atendimento 		= c.nr_atendimento	 
	and  a.nr_atendimento 		= c.nr_atendimento		 
	and  c.cd_medico_resp    <> cd_pessoa_fisica_medico_w 
	and  to_char(c.cd_estabelecimento) 	= to_char(cd_estabelecimento_w) 
	and  a.dt_inicio_vigencia <= clock_timestamp() 
	and  a.cd_pessoa_fisica 		= cd_pessoa_fisica_medico_w 
	and  (b.nr_atendimento IS NOT NULL AND b.nr_atendimento::text <> '') 
	and  'S' = ie_profissional_w;
		
	 

BEGIN 
 
ie_profissional_w := obter_valor_param_usuario(281, 349, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);
 
select 	cd_pessoa_fisica, 
		cd_estabelecimento 
into STRICT	cd_pessoa_fisica_medico_w, 
		cd_estabelecimento_w 
from 	usuario 
where	nm_usuario = nm_usuario_p;
 
 
open c01;
loop 
fetch c01 into	 
	cd_pessoa_fisica_paciente_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
		 
	select	count(*) 
	into STRICT	qt_temp_w 
	from 	ev_evento e, 
		ev_evento_pac_destino a, 
		ev_evento_paciente b, 
		ev_evento_regra_dest d, 
		ev_regra_dest_tela c 
	where 	e.nr_sequencia 		= b.nr_seq_evento 
	and 	b.nr_sequencia 		= a.nr_seq_ev_pac 
	and 	e.nr_sequencia 		= d.nr_seq_evento 
	and 	d.nr_sequencia 		= c.nr_seq_regra_dest 
	and	c.ie_funcao		= cd_funcao_ativa_p 
	and (b.cd_pessoa_fisica	= cd_pessoa_fisica_paciente_w) 
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_medico_w 
	and	a.ie_status		= 'G' 
	and	b.ie_status		in ('G','C') 
	and	coalesce(a.dt_ciencia::text, '') = '';
	 
		 
	qt_eventos_principal_w := qt_eventos_principal_w + qt_temp_w;	
		 
	end;
end loop;
close c01;
 
 
 
open c02;
loop 
fetch c02 into	 
	cd_pessoa_fisica_paciente_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
 
	select	count(*) 
	into STRICT	qt_temp_w 
	from 	ev_evento e, 
		ev_evento_pac_destino a, 
		ev_evento_paciente b, 
		ev_evento_regra_dest d, 
		ev_regra_dest_tela c 
	where 	e.nr_sequencia 		= b.nr_seq_evento 
	and 	b.nr_sequencia 		= a.nr_seq_ev_pac 
	and 	e.nr_sequencia 		= d.nr_seq_evento 
	and 	d.nr_sequencia 		= c.nr_seq_regra_dest 
	and	c.ie_funcao		= cd_funcao_ativa_p 
	and (b.cd_pessoa_fisica	= cd_pessoa_fisica_paciente_w) 
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_medico_w 
	and	a.ie_status		= 'G' 
	and	b.ie_status		in ('G','C') 
	and	coalesce(a.dt_ciencia::text, '') = '';
	 
	qt_eventos_auxiliar_w := qt_eventos_auxiliar_w + qt_temp_w;	
	 
	end;
end loop;
close c02;
 
 
/*sem paciente*/
 
select	count(*) 
into STRICT	qt_temp_w 
from 	ev_evento e, 
	ev_evento_pac_destino a, 
	ev_evento_paciente b, 
	ev_evento_regra_dest d, 
	ev_regra_dest_tela c 
where 	e.nr_sequencia 		= b.nr_seq_evento 
and 	b.nr_sequencia 		= a.nr_seq_ev_pac 
and 	e.nr_sequencia 		= d.nr_seq_evento 
and 	d.nr_sequencia 		= c.nr_seq_regra_dest 
and	c.ie_funcao		= cd_funcao_ativa_p 
and	a.cd_pessoa_fisica	= cd_pessoa_fisica_medico_w 
and	coalesce(b.cd_pessoa_fisica::text, '') = '' 
and	a.ie_status		= 'G' 
and	b.ie_status		in ('G','C') 
and	coalesce(a.dt_ciencia::text, '') = '';
 
 
return(qt_eventos_principal_w + qt_eventos_auxiliar_w + qt_temp_w);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qtd_pacientes_medico ( nm_usuario_p text, cd_funcao_ativa_p bigint) FROM PUBLIC;

