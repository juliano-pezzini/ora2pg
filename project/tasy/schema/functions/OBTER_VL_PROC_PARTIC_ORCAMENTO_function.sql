-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_vl_proc_partic_orcamento (cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, cd_medico_p text, ie_clinica_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_p bigint, nr_seq_orcamento_p bigint, nm_usuario_P text, nr_seq_proc_orc_p bigint ) RETURNS bigint AS $body$
DECLARE


cd_convenio_w		orcamento_paciente.cd_convenio%type;
cd_categoria_w		orcamento_paciente.cd_categoria%type;
vl_procedimento_w	double precision;
vl_Retorno_w		double precision;
vl_lanc_automatico_w	double precision;
cd_estabelecimento_w	smallint;
ie_classsif_proced_w	varchar(10);



ie_calculo_valor_w	orcamento_paciente.ie_calculo_valor%type := '';
ie_regra_plano_w	orcamento_paciente_proc.ie_regra_plano%type := '';
ie_regra_w		orcamento_paciente_proc.ie_regra_plano%type := '';

cd_convenio_particular_w	parametro_faturamento.cd_convenio_partic%type;
cd_categoria_particular_w	parametro_faturamento.cd_categoria_partic%type;
nr_seq_proc_interno_w		orcamento_paciente_proc.nr_seq_proc_interno%type;
ds_erro_w			varchar(2000)	:= null;
nr_seq_regra_retorno_w		regra_convenio_plano.nr_sequencia%type;
ie_glosa_w			varchar(1);
nr_seq_regra_preco_w		bigint;
cd_tipo_acomodacao_w		orcamento_paciente.cd_tipo_acomodacao%type;
cd_procedimento_w		orcamento_paciente_proc.cd_procedimento%type;
ie_origem_proced_w              orcamento_paciente_proc.ie_origem_proced%type;
ie_tipo_atendimento_w		orcamento_paciente.ie_tipo_atendimento%type;
nr_atendimento_w		orcamento_paciente.nr_atendimento%type;
dt_orcamento_w			orcamento_paciente.dt_orcamento%type;
cd_plano_w			orcamento_paciente.cd_plano%type;
cd_pessoa_fisica_w		orcamento_paciente.cd_pessoa_fisica%type;
cd_proced_convertido_w		orcamento_paciente_proc.cd_procedimento%type;
ie_origem_proced_convert_w	orcamento_paciente_proc.ie_origem_proced%type;
qt_procedimento_w		orcamento_paciente_proc.qt_procedimento%type;
cd_setor_atendimento_w		orcamento_paciente_proc.cd_setor_atendimento%type;
nr_seq_exame_w			orcamento_paciente_proc.nr_seq_exame%type;
cd_medico_w			orcamento_paciente_proc.cd_medico%type;
cd_exame_w 			exame_laboratorio.cd_exame%type;


BEGIN

begin
select  ie_calculo_valor,
	nr_atendimento,
	cd_convenio,
	cd_categoria,
	dt_orcamento,
	cd_plano,
	cd_pessoa_fisica,
	cd_tipo_acomodacao,
	ie_tipo_atendimento
into STRICT	ie_calculo_valor_w,
	nr_atendimento_w,
	cd_convenio_w,
	cd_categoria_w,
	dt_orcamento_w,
	cd_plano_w,
	cd_pessoa_fisica_w,
	cd_tipo_acomodacao_w,
	ie_tipo_atendimento_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_seq_orcamento_p;
exception when others then
	ie_calculo_valor_w := '';
end;

if (ie_calculo_valor_w <> 'B') then
	vl_retorno_w := obter_valor_proc_partic_orc2(
			cd_procedimento_p,
			ie_origem_proced_p,
			ie_tipo_atendimento_p,
			cd_medico_p,
			ie_clinica_p,
			nr_seq_proc_interno_p,
			nr_seq_exame_p,
			nr_seq_orcamento_p,
			nm_usuario_p );
	return vl_retorno_w;
end if;


select ie_regra_plano,
       nr_seq_proc_interno,
       qt_procedimento,
       cd_setor_atendimento,
       nr_seq_exame,
       cd_medico,
       cd_procedimento,
       ie_origem_proced
into STRICT   ie_regra_plano_w,
       nr_seq_proc_interno_w,
       qt_procedimento_w,
       cd_setor_atendimento_w,
       nr_seq_exame_w,
       cd_medico_w,
       cd_procedimento_w,
       ie_origem_proced_w
from   orcamento_paciente_proc
where  nr_sequencia = nr_seq_proc_orc_p;

select	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estabelecimento_w
;

if (coalesce(ie_regra_plano_w, 0) = 0) then
	/*Cadastro do convenio\Regras\Regra plano proced material\Procedimento */

	SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_p, ie_origem_proced_p, dt_orcamento_w, qt_procedimento_w, null, cd_plano_w, null, ds_erro_w,  -- out
				cd_setor_atendimento_w, coalesce(nr_seq_exame_w,0), ie_regra_plano_w,  -- out
				null, nr_seq_regra_retorno_w,  -- out
				nr_seq_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, null, cd_medico_w, cd_pessoa_fisica_w, ie_glosa_w,  --out
				nr_seq_regra_preco_w) INTO STRICT ds_erro_w, ie_regra_plano_w, nr_seq_regra_retorno_w, ie_glosa_w, 
				nr_seq_regra_preco_w; --out
end if;


/* pegar o convenio particular do estabelecimento */

SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_particular_w, cd_categoria_particular_w ) INTO STRICT cd_convenio_particular_w, cd_categoria_particular_w;

/*  	ie_regra_plano_w:
	1 - Bloqueio atendimento,
	2 - Bloqueio execucao,
	5 - Bloqueia prescricao,
	8 - Sem cobertura/glosa particular
*/
if	(( ie_regra_plano_w in (1,2,5,8)) or ( ie_regra_plano_w = 0)) then
	
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
	
		SELECT * FROM obter_proc_tab_interno_conv(	nr_seq_proc_interno_w, cd_estabelecimento_w, coalesce(cd_convenio_particular_w, cd_convenio_w), coalesce(cd_categoria_particular_w, cd_categoria_w), cd_plano_w, cd_setor_atendimento_w, cd_proced_convertido_w,  -- out
						ie_origem_proced_convert_w,  --out
						cd_setor_atendimento_w, dt_orcamento_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proced_convertido_w, 
						ie_origem_proced_convert_w;

		cd_procedimento_w	:= cd_proced_convertido_w;
		ie_origem_proced_w	:= ie_origem_proced_convert_w;
		
		
	elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
	
		select	max(cd_exame)
		into STRICT	cd_exame_w
		from 	exame_laboratorio
		where 	nr_seq_exame = nr_seq_exame_w;

		SELECT * FROM Obter_Proc_Exame_Laborat(cd_exame_w, coalesce(cd_convenio_particular_w, cd_convenio_w), cd_estabelecimento_w, coalesce(cd_categoria_particular_w, cd_categoria_w), cd_procedimento_w,  --out
					 ie_origem_proced_w,  --out
					 nr_seq_exame_w,  --out
					 0) INTO STRICT cd_procedimento_w, 
					 ie_origem_proced_w, 
					 nr_seq_exame_w;
	end if;

end if;

ie_classsif_proced_w := obter_classificacao_proced(cd_procedimento_w,ie_origem_proced_w,'C');

if (ie_classsif_proced_w <> 1) then
	nr_seq_proc_interno_w := null;
end if;

select	obter_preco_proced(	cd_estabelecimento_w,
				coalesce(cd_convenio_particular_w,cd_convenio_w),
				coalesce(cd_categoria_particular_w,cd_categoria_w),
				clock_timestamp(),
				cd_procedimento_w,
				ie_origem_proced_w,
				null,
				ie_tipo_atendimento_w,
				null,
				cd_medico_w,
				null,
				null,
				null,
				null, --ie_clinica_p,
				null,
				'P',
				nr_seq_exame_w,
				nr_seq_proc_interno_w)
into STRICT	vl_procedimento_w
; /*pega o preco do procedimento cadastrado para particular*/
		
vl_lanc_automatico_w:= 0;
begin
select  obter_valor_regra_lanc_aut2(	cd_estabelecimento_w,
					coalesce(cd_convenio_particular_w,cd_convenio_w),
					coalesce(cd_categoria_particular_w,cd_categoria_w),
					cd_procedimento_w,
					ie_origem_proced_w,
					nr_seq_proc_interno_w,
					34, 
					nr_seq_exame_w,
					'T', 
					nr_seq_orcamento_p,
					nm_usuario_p)
into STRICT    vl_lanc_automatico_w
;
exception
when others then
        vl_lanc_automatico_w    := 0;
end;

vl_retorno_w	:= vl_procedimento_w + vl_lanc_automatico_w;

return	vl_Retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_vl_proc_partic_orcamento (cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, cd_medico_p text, ie_clinica_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_p bigint, nr_seq_orcamento_p bigint, nm_usuario_P text, nr_seq_proc_orc_p bigint ) FROM PUBLIC;

