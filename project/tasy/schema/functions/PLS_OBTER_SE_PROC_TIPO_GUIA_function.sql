-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_proc_tipo_guia ( nr_sequencia_p bigint, ie_tipo_glosa_p text) RETURNS varchar AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_guia_w			varchar(2);
qt_reg_w			bigint;
ds_retorno_w			varchar(1) := 'S';
cd_grupo_w			bigint;
cd_especialidade_w		bigint;
cd_area_w			bigint;
ie_origem_w			bigint;


BEGIN

if (ie_tipo_glosa_p = 'CP') then
	begin
		select	cd_procedimento, /*Diego OS 337435 - Quando o sistema desconhece o procedimento não é necessário verificar*/
			ie_origem_proced,
			ie_tipo_guia
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			ie_tipo_guia_w
		from	pls_conta_proc	b,
			pls_conta	a
		where	a.nr_sequencia = b.nr_seq_conta
		and	b.nr_sequencia = nr_sequencia_p;
	exception
	when others then
		cd_procedimento_w := null;
	end;
elsif (ie_tipo_glosa_p = 'AP') then
	begin
		select	cd_procedimento,
			ie_origem_proced,
			ie_tipo_guia
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			ie_tipo_guia_w
		from	pls_guia_plano_proc	b,
			pls_guia_plano		a
		where	a.nr_sequencia = b.nr_seq_guia
		and	b.nr_sequencia = nr_sequencia_p;
	exception
	when others then
		cd_procedimento_w := null;
	end;
end if;

SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w;

if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
	select	count(1)
	into STRICT	qt_reg_w
	from	pls_tipo_guia_procedimento
	where	((coalesce(cd_procedimento::text, '') = '') 	or (cd_procedimento 	= cd_procedimento_w))
	and 	((coalesce(ie_origem_proced::text, '') = '') 	or (ie_origem_proced 	= ie_origem_proced_w))
	and 	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_w))
	and 	((coalesce(cd_especialidade::text, '') = '') 	or (cd_especialidade	= cd_especialidade_w))
	and 	((coalesce(cd_grupo_proc::text, '') = '') 	or (cd_grupo_proc 	= cd_grupo_w))
	and	((coalesce(nr_seq_grupo_servico::text, '') = '')
	or (pls_se_grupo_preco_servico(nr_seq_grupo_servico,cd_procedimento_w,ie_origem_proced_w) = 'S'))
	and	ie_tipo_guia			= ie_tipo_guia_w
	order by coalesce(cd_procedimento,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);

	if (qt_reg_w = 0) then
		/*Diego - OS 337435 -  No caso de não haver o procedimento cadastrado para a guia é verificado se o procedimento existe em algum tipo de guia;
				Caso esteja cadastrado em algum tipo de guia é gerado a glosa.*/
		select	count(1)
		into STRICT	qt_reg_w
		from	pls_tipo_guia_procedimento
		where	((coalesce(cd_procedimento::text, '') = '') 	or (cd_procedimento 	= cd_procedimento_w))
		and 	((coalesce(ie_origem_proced::text, '') = '') 	or (ie_origem_proced 	= ie_origem_proced_w))
		and 	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_w))
		and 	((coalesce(cd_especialidade::text, '') = '') 	or (cd_especialidade	= cd_especialidade_w))
		and 	((coalesce(cd_grupo_proc::text, '') = '') 	or (cd_grupo_proc 	= cd_grupo_w))
		and	((coalesce(nr_seq_grupo_servico::text, '') = '')
		or (pls_se_grupo_preco_servico(nr_seq_grupo_servico,cd_procedimento_w,ie_origem_proced_w) = 'S'))
		and	((ie_tipo_glosa_p = 'CP' and ie_tipo_guia in ('4','5','6','3')) /* Alexandre - OS 363369 - Crie essa verificação por tipo de guia, para que os tipos utilizados na conta não interfiram na guia e vice-versa */
		or (ie_tipo_glosa_p = 'AP' and ie_tipo_guia in ('1','2','3','8')))
		order by coalesce(cd_procedimento,0),
			coalesce(cd_grupo_proc,0),
			coalesce(cd_especialidade,0),
			coalesce(cd_area_procedimento,0);

		/*Se existir em alhum tipo de guia, é gerado a ocorrência*/

		if (qt_reg_w > 0) then
			ds_retorno_w := 'N';
		end if;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_proc_tipo_guia ( nr_sequencia_p bigint, ie_tipo_glosa_p text) FROM PUBLIC;

