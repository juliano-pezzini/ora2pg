-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_mostra_proced ( nr_prescricao_p bigint, nr_seq_proced_p bigint, ie_tipo_proced_p text) RETURNS varchar AS $body$
DECLARE


vl_result_w	varchar(1) := 'N';
qt_existe_w	bigint  := 0;


BEGIN

/* NÃ£o utilizar mais essa function. Utilizar a obter_se_exibe_proced */

if (ie_tipo_proced_p = 'O') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	coalesce(nr_seq_solic_sangue::text, '') = ''
	and	((coalesce(nr_seq_proc_interno::text, '') = '') or (Obter_tipo_proc_interno(nr_seq_proc_interno) = 'O'));

elsif (ie_tipo_proced_p = 'AP') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'AP';

elsif (ie_tipo_proced_p = 'G') then /* Gases */
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'G';

elsif (ie_tipo_proced_p = 'BS') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'BS';

elsif (ie_tipo_proced_p = 'BSHE') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
	and	(nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '');

elsif (ie_tipo_proced_p = 'BSST') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
	and	(nr_seq_exame_sangue IS NOT NULL AND nr_seq_exame_sangue::text <> '');

elsif (ie_tipo_proced_p = 'APH') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'APH';

elsif (ie_tipo_proced_p = 'APC') then
	select	count(*)
	into STRICT	qt_existe_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_seq_proced_p
	and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and	Obter_tipo_proc_interno(nr_seq_proc_interno) = 'APC';
end if;

if (qt_existe_w > 0) then
	vl_result_w	:= 'S';
end if;

return	vl_result_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_mostra_proced ( nr_prescricao_p bigint, nr_seq_proced_p bigint, ie_tipo_proced_p text) FROM PUBLIC;

