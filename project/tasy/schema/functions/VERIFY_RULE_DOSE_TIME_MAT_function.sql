-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verify_rule_dose_time_mat ( cd_material_p regra_interv_sol_mat_med.cd_material%type, qt_dose_p regra_interv_sol_mat_med.qt_permitida%type default null, nr_ocorrencia_p cpoe_material.nr_ocorrencia%type default null, cd_intervalo_p cpoe_material.cd_intervalo%type default null, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type default null) RETURNS varchar AS $body$
DECLARE


--N = pass
--S = block
--J = justify
ie_return_w                 varchar(1) := 'N';
cd_grupo_material_w			subgrupo_material.cd_grupo_material%type;
cd_subgrupo_material_w		classe_material.cd_subgrupo_material%type;
cd_classe_material_w		material.cd_classe_material%type;
qt_dose_convert_w			cpoe_material.qt_dose%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
		a.cd_grupo_material,
		a.cd_subgrupo_material,
		a.cd_classe_material,
		a.qt_permitida,
		a.cd_unid_med_permitida,
		a.qt_horas_intervalo,
		a.ie_permite_justif
from	regra_interv_sol_mat_med a
where	((a.cd_material = cd_material_p) or (coalesce(a.cd_material::text, '') = ''))
and		((a.cd_grupo_material = cd_grupo_material_w) or (coalesce(a.cd_grupo_material::text, '') = ''))
and		((a.cd_subgrupo_material = cd_subgrupo_material_W) or (coalesce(a.cd_subgrupo_material::text, '') = ''))
and		((a.cd_classe_material = cd_classe_material_w) or (coalesce(a.cd_classe_material::text, '') = ''))
order by coalesce(cd_material, 0),
         coalesce(cd_classe_material, 0),
         coalesce(cd_subgrupo_material, 0),
         coalesce(cd_grupo_material, 0);

BEGIN

if ((cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '')
and (nr_ocorrencia_p IS NOT NULL AND nr_ocorrencia_p::text <> '') 
and (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '')
and (cd_unidade_medida_p IS NOT NULL AND cd_unidade_medida_p::text <> '')) then

	cd_classe_material_w := obter_dados_material(cd_material_p, 'CCLA');
	cd_grupo_material_w := obter_dados_material(cd_material_p, 'CGRU');
	cd_subgrupo_material_w := obter_dados_material(cd_material_p, 'CSUB');

    for rule_w in c01 loop

        if ((nr_ocorrencia_p IS NOT NULL AND nr_ocorrencia_p::text <> '')
            and (nr_ocorrencia_p > 0)
            and (rule_w.qt_horas_intervalo IS NOT NULL AND rule_w.qt_horas_intervalo::text <> '')
            and (rule_w.qt_horas_intervalo > 0)) then
			
			qt_dose_convert_w := OBTER_DOSE_CONVERTIDA(cd_material_p, qt_dose_p, cd_unidade_medida_p, rule_w.cd_unid_med_permitida);
			
			if((dividir(nr_ocorrencia_p, rule_w.qt_horas_intervalo) * qt_dose_convert_w) > rule_w.qt_permitida) then
			
				if rule_w.ie_permite_justif = 'S' then
					ie_return_w := 'J';
				else
					ie_return_w := 'S';
				end if;
			
			end if;

        end if;

    end loop;
end if;

return ie_return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verify_rule_dose_time_mat ( cd_material_p regra_interv_sol_mat_med.cd_material%type, qt_dose_p regra_interv_sol_mat_med.qt_permitida%type default null, nr_ocorrencia_p cpoe_material.nr_ocorrencia%type default null, cd_intervalo_p cpoe_material.cd_intervalo%type default null, cd_unidade_medida_p cpoe_material.cd_unidade_medida%type default null) FROM PUBLIC;

