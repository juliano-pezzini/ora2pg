-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION via_obter_aprov_regra_valor ( nr_seq_viagem_p bigint, qt_dias_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w			varchar(10);
cd_cnpj_w			varchar(14);
vl_reserva_w			double precision;
vl_media_w			double precision;
vl_limite_w			double precision;
vl_limite_sup_w			double precision;
nr_seq_aero_ori_w		bigint;
nr_seq_aero_des_w		bigint;
qt_diretor_w			bigint;
qt_gerente_w			bigint;
qt_func_w			bigint;
qt_dias_w			bigint;
cd_aprovador_w			varchar(10);
cd_sub_aprov_w			varchar(10);
qt_registro_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_classif_w		bigint;
cd_coordenador_w		varchar(10);
cd_gerente_projeto_w		varchar(10);
nr_seq_projeto_w		bigint;
vl_transp_w			double precision;
cd_aprovador_ww			varchar(10);
ie_consistir_w			varchar(1);
vl_retorno_medio_w		double precision;

cd_aprov_diretor_geral_w	varchar(10);
cd_aprov_diretor_w		varchar(10);
cd_aprov_subdiretor_w		varchar(10);
cd_aprov_gerente_w		varchar(10);
cd_aprov_subgerente_w		varchar(10);
ie_cargo_viajante_w		varchar(1);
nr_seq_origem_proj_w		proj_projeto.nr_seq_origem_proj%type;

c01 CURSOR FOR 
SELECT	a.cd_cnpj, 
	a.nr_seq_aeroporto_ori, 
	a.nr_seq_aeroporto_des, 
	b.vl_reserva 
from	via_reserva b, 
	via_transporte a 
where	a.nr_sequencia = b.nr_seq_itinerario 
and	b.nr_seq_viagem = nr_seq_viagem_p 
and	b.ie_responsavel_custo = 'N' 
and	(b.nr_seq_meio_transp IS NOT NULL AND b.nr_seq_meio_transp::text <> '');

c02 CURSOR FOR 
SELECT	CASE WHEN qt_dias_w=7 THEN a.vl_medio_7_dias WHEN qt_dias_w=30 THEN a.vl_medio_30_dias WHEN qt_dias_w=60 THEN a.vl_medio_60_dias END , 
	CASE WHEN qt_dias_w=7 THEN a.vl_limite_7_dias WHEN qt_dias_w=30 THEN a.vl_limite_30_dias WHEN qt_dias_w=60 THEN a.vl_limite_60_dias END , 
	CASE WHEN qt_dias_w=7 THEN a.vl_limite_sup_7_dias WHEN qt_dias_w=30 THEN a.vl_limite_sup_30_dias WHEN qt_dias_w=60 THEN a.vl_limite_sup_60_dias END  
from	via_regra_valor_viagem a 
where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
and	a.cd_cgc_agencia = cd_cnpj_w 
and	a.nr_seq_aero_origem = nr_seq_aero_ori_w 
and	a.nr_seq_aero_destino = nr_seq_aero_des_w;


BEGIN 
select	sum(b.vl_reserva) 
into STRICT	vl_transp_w 
from	via_reserva b 
where	b.nr_seq_viagem = nr_seq_viagem_p 
and	coalesce(b.vl_reserva::text, '') = '';
 
if (coalesce(qt_dias_p,0) <= 7) then 
	qt_dias_w := 7;
elsif (coalesce(qt_dias_p,0) > 7) and (coalesce(qt_dias_p,0) <= 30) then 
	qt_dias_w := 30;
elsif (coalesce(qt_dias_p,0) > 30) then 
	qt_dias_w := 60;
end if;
 
select 	count(nr_sequencia) 
into STRICT 	qt_registro_w 
from 	fin_gv_pend_aprov 
where 	nr_seq_viagem = nr_seq_viagem_p;
 
select 	max(cd_pessoa_fisica) 
into STRICT 	cd_pessoa_fisica_w 
from 	via_viagem 
where 	nr_sequencia = nr_seq_viagem_p;
 
---carga das informações de aprovação: 
select	max(cd_diretoria_geral), 
	max(cd_diretor), 
	max(cd_aprov_substituto), 
	max(cd_aprov_gerente), 
	max(cd_sub_gerente), 
	max(ie_cargo) 
INTO STRICT	cd_aprov_diretor_geral_w, 
	cd_aprov_diretor_w, 
	cd_aprov_subdiretor_w, 
	cd_aprov_gerente_w, 
	cd_aprov_subgerente_w, 
	ie_cargo_viajante_w 
FROM  organograma_v 
WHERE cd_viajante = cd_pessoa_fisica_w;
 
 
select 	count(*) 
into STRICT 	qt_func_w 
from 	gerencia_wheb_grupo_usu a 
where 	a.nm_usuario_grupo = obter_usuario_pf(cd_pessoa_fisica_w);
 
select 	count(*) 
into STRICT	qt_gerente_w 
from 	gerencia_wheb a 
where 	a.cd_responsavel = cd_pessoa_fisica_w;
 
select	count(*) 
into STRICT	qt_diretor_w 
from	departamento_philips a 
where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
 
select	distinct 
	CASE WHEN coalesce(a.nr_seq_classif::text, '') = '' THEN 19  ELSE a.nr_seq_classif END , 
	coalesce(a.nr_seq_origem_proj,0) 
into STRICT	nr_seq_classif_w, 
	nr_seq_origem_proj_w 
FROM via_destino b
LEFT OUTER JOIN proj_projeto a ON (b.nr_seq_proj = a.nr_sequencia)
WHERE b.nr_seq_viagem = nr_seq_viagem_p;
 
 
if	((coalesce(nr_seq_classif_w,19) in (19,15)) or (nr_seq_origem_proj_w in (4,7))) then -- organograma 
	begin	 
	if (ie_cargo_viajante_w IN ('F', 'L')) then	--funcionário, líder 
		begin 
		cd_aprovador_w := cd_aprov_gerente_w;
		cd_sub_aprov_w := cd_aprov_subgerente_w;
		end;
	elsif (ie_cargo_viajante_w = 'G') then		--gerente 
		begin 
		cd_aprovador_w := cd_aprov_diretor_w;
		cd_sub_aprov_w := cd_aprov_subdiretor_w;
		end;
	elsif (ie_cargo_viajante_w = 'D') then		--diretor 
		begin 
		cd_aprovador_w := cd_aprov_diretor_geral_w;
		cd_sub_aprov_w := null;
		end;
	end if;
	end;
else -- Projeto 
	begin 
	select	max(coalesce(a.nr_seq_proj,0)) 
	into STRICT	nr_seq_projeto_w 
	from	via_destino a 
	where	a.nr_seq_viagem = nr_seq_viagem_p;
 
	select	cd_coordenador, 
		cd_gerente_projeto 
	into STRICT	cd_coordenador_w, 
		cd_gerente_projeto_w 
	from	proj_projeto 
	where	nr_sequencia = nr_seq_projeto_w;
 
	if (cd_pessoa_fisica_w = cd_coordenador_w) then 
		begin 
		cd_aprovador_w := cd_gerente_projeto_w;
 
		select	max(obter_cd_pessoa_substituta(obter_cd_pessoa_responsavel(a.nr_seq_gerencia))) 
		into STRICT	cd_sub_aprov_w 
		from	depto_gerencia_philips a, 
			gerencia_wheb b 
		where	a.nr_seq_gerencia = b.nr_sequencia 
		and	b.cd_responsavel = cd_aprovador_w;
		end;
	elsif (cd_pessoa_fisica_w = cd_gerente_projeto_w) then 
		begin 
		select	max(a.cd_pessoa_fisica), 
				max(obter_cd_pessoa_substituta(a.cd_pessoa_fisica)) 
		into STRICT 	cd_aprovador_w, 
				cd_sub_aprov_w 
		from 	departamento_philips a, 
			depto_gerencia_philips b, 
			gerencia_wheb c 
		where 	b.nr_seq_gerencia = c.nr_sequencia 
		and	b.nr_seq_departamento = a.nr_sequencia 
		and	c.cd_responsavel = cd_pessoa_fisica_w;
		end;
	else 
		begin 
		cd_aprovador_w := cd_coordenador_w;
		select	max(obter_cd_pessoa_substituta(obter_cd_pessoa_responsavel(a.nr_seq_gerencia))) 
		into STRICT	cd_sub_aprov_w 
		from	depto_gerencia_philips a, 
			gerencia_wheb b, 
			gerencia_wheb_grupo c 
		where	b.nr_sequencia = a.nr_seq_gerencia 
		and	b.nr_sequencia = c.nr_seq_gerencia 
		and	c.nm_usuario_lider = obter_usuario_pf(cd_coordenador_w);
		end;
	end if;
	end;
end if;
ie_consistir_w := 'N';
if (qt_dias_p >= 7) then -- verificar regra de valor (aprovador) 
	begin 
	cd_aprovador_ww := cd_aprovador_w;
	if (coalesce(qt_dias_w,0) > 0) then 
		begin 
		open C01;
		loop 
		fetch C01 into	 
			cd_cnpj_w, 
			nr_seq_aero_ori_w, 
			nr_seq_aero_des_w, 
			vl_reserva_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			open C02;
			loop 
			fetch C02 into	 
				vl_media_w, 
				vl_limite_w, 
				vl_limite_sup_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				if (vl_reserva_w > vl_limite_w) then 
					begin 
					if (ie_cargo_viajante_w in ('F', 'L')) then 
						begin 
						ie_consistir_w := 'S';
						vl_retorno_medio_w := vl_reserva_w;
						cd_aprovador_w := cd_aprov_diretor_w;
						cd_sub_aprov_w := cd_aprov_subdiretor_w;
						end;
					end if;
					end;
				end if;				
				end;
			end loop;
			close C02;
			end;
		end loop;
		close C01;
		end;
	end if;
	end;
end if;
if (ie_opcao_p = 'A') then 
	ds_retorno_w := cd_aprovador_w;
elsif (ie_opcao_p = 'S') then 
	ds_retorno_w := cd_sub_aprov_w;
elsif (ie_opcao_p = 'VT') then 
	ds_retorno_w := vl_transp_w;
elsif (ie_opcao_p = 'VM') then 
	ds_retorno_w := vl_media_w;
elsif (ie_opcao_p = 'VL') then 
	ds_retorno_w := vl_limite_w;
elsif (ie_opcao_p = 'VS') then 
	ds_retorno_w := vl_limite_sup_w;
elsif (ie_opcao_p = 'C') then -- Consistir 
	ds_retorno_w := ie_consistir_w;
elsif (ie_opcao_p = 'VI') then -- valor individual 
	ds_retorno_w := vl_retorno_medio_w;
elsif (ie_opcao_p = 'V') then 
	begin 
	if (vl_transp_w >= vl_limite_w) and (vl_transp_w < vl_limite_sup_w) then 
		ds_retorno_w := vl_limite_w;
	else	ds_retorno_w := vl_limite_sup_w;
	end if;
	end;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION via_obter_aprov_regra_valor ( nr_seq_viagem_p bigint, qt_dias_p bigint, ie_opcao_p text) FROM PUBLIC;

