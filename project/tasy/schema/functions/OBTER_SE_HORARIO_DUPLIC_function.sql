-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_horario_duplic (nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, nr_seq_horario_p bigint, ie_laboratorio_p text) RETURNS varchar AS $body$
DECLARE


ie_duplicidade_w		varchar(1);
dt_horario_w			timestamp;
cd_item_w			varchar(255);
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w	bigint;


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') and (cd_item_p IS NOT NULL AND cd_item_p::text <> '') and (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') and (ie_laboratorio_p IS NOT NULL AND ie_laboratorio_p::text <> '') then

	if (ie_tipo_item_p = 'D') then
		/* obter horário */

		select	dt_horario,
			cd_refeicao
		into STRICT	dt_horario_w,
			cd_item_w
		from	prescr_dieta_hor
		where	nr_sequencia = nr_seq_horario_p
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		/* verificar duplicidade */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_duplicidade_w
		from	prescr_dieta_hor
		where	dt_horario = dt_horario_w
		and	nr_sequencia <> nr_seq_horario_p
		and	cd_refeicao = cd_item_w
		and	coalesce(ie_situacao,'A') = 'A'
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	elsif (ie_tipo_item_p = 'S') then
		/* obter horário */

		select	dt_horario,
			cd_material
		into STRICT	dt_horario_w,
			cd_item_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_seq_horario_p
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		/* verificar duplicidade */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_duplicidade_w
		from	prescr_mat_hor
		where	dt_horario = dt_horario_w
		and	nr_sequencia <> nr_seq_horario_p
		and	cd_material = (cd_item_w)::numeric 
		and	coalesce(ie_situacao,'A') = 'A'
		and	ie_agrupador = 12
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	elsif (ie_tipo_item_p = 'M') then
		/* obter horário */

		select	dt_horario,
			cd_material
		into STRICT	dt_horario_w,
			cd_item_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_seq_horario_p
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		/* verificar duplicidade */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_duplicidade_w
		from	prescr_mat_hor
		where	dt_horario = dt_horario_w
		and	nr_sequencia <> nr_seq_horario_p
		and	cd_material = (cd_item_w)::numeric 
		and	coalesce(ie_situacao,'A') = 'A'
		and	coalesce(ie_adep,'S') = 'S'
		and	ie_agrupador = 1
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	elsif (ie_tipo_item_p = 'P') then
		/* obter horário */

		select	dt_horario,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno
		into STRICT	dt_horario_w,
			cd_item_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w
		from	prescr_proc_hor
		where	nr_sequencia = nr_seq_horario_p
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		/* verificar duplicidade */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_duplicidade_w
		from	prescr_procedimento b,
			prescr_proc_hor a
		where	b.nr_prescricao = a.nr_prescricao
		and	b.nr_sequencia = a.nr_seq_procedimento
		and	((ie_laboratorio_p = 'N' and coalesce(b.nr_seq_exame::text, '') = '') or (ie_laboratorio_p = 'S' and (b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')))
		and	a.dt_horario = dt_horario_w
		and	a.nr_sequencia <> nr_seq_horario_p
		and	a.cd_procedimento = (cd_item_w)::numeric 
		and	a.ie_origem_proced = ie_origem_proced_w
		and	coalesce(a.nr_seq_proc_interno,0) = coalesce(nr_seq_proc_interno_w,0)
		and	coalesce(ie_situacao,'A') = 'A'
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	elsif (ie_tipo_item_p = 'R') then
		/* obter horário */

		select	dt_horario,
			cd_recomendacao
		into STRICT	dt_horario_w,
			cd_item_w
		from	prescr_rec_hor
		where	nr_sequencia = nr_seq_horario_p
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

		/* verificar duplicidade */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_duplicidade_w
		from	prescr_rec_hor
		where	dt_horario = dt_horario_w
		and	nr_sequencia <> nr_seq_horario_p
		and	cd_recomendacao = cd_item_w
		and	coalesce(ie_situacao,'A') = 'A'
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

	elsif (ie_tipo_item_p = 'E') then
		/* obter horário */

		select	dt_horario,
			nr_seq_proc
		into STRICT	dt_horario_w,
			cd_item_w
		from	pe_prescr_proc_hor
		where	nr_sequencia = nr_seq_horario_p;

		/* verificar duplicidade */

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_duplicidade_w
		from	pe_prescr_proc_hor
		where	dt_horario = dt_horario_w
		and	nr_sequencia <> nr_seq_horario_p
		and	nr_seq_proc = (cd_item_w)::numeric 
		and	coalesce(ie_situacao,'A') = 'A';
	end if;
end if;

return ie_duplicidade_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_horario_duplic (nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, nr_seq_horario_p bigint, ie_laboratorio_p text) FROM PUBLIC;

