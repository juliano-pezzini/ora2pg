-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cih_obter_regra_acomp_cirurgia (nr_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1)	:= 'N';
nr_sequencia_w		bigint;
qt_dias_w		integer;
ie_forma_acomp_w	varchar(1);
dt_alta_w		timestamp;
qt_dif_atual_alta_w	integer;
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
cd_procedimento_w	bigint;
qt_periodo_ref_w	integer;
ie_existe_regra_w	varchar(1);

C01 CURSOR FOR
	SELECT	coalesce(a.nr_sequencia,0)
	FROM	cih_regra_proced_acomp a
	WHERE	coalesce(a.cd_estabelecimento, cd_estabelecimento_p)		= cd_estabelecimento_p
	AND	coalesce(a.cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w
	AND	coalesce(a.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w
	AND	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w
	AND	coalesce(a.cd_procedimento, cd_procedimento_p)		= cd_procedimento_p
	AND	((coalesce(a.cd_procedimento::text, '') = '') OR ((a.ie_origem_proced = ie_origem_proced_p) OR (coalesce(a.ie_origem_proced::text, '') = '')))
	AND	a.ie_situacao	= 'A'
	AND	a.ie_tipo_acomp	= 'N'
	AND (coalesce(a.nr_seq_equipamento::text, '') = ''
	OR EXISTS (	SELECT	1
			FROM	cirurgia b,
				agenda_paciente c,
				agenda_pac_equip d
			WHERE	b.nr_cirurgia = c.nr_cirurgia
			AND	c.nr_sequencia = d.nr_seq_agenda
			AND	b.cd_procedimento_princ = cd_procedimento_p
			AND	b.ie_origem_proced = ie_origem_proced_p
			AND	d.nr_seq_classif_equip = a.nr_seq_equipamento
			AND	b.nr_atendimento = nr_atendimento_p))
	ORDER BY coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0);


BEGIN

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
INTO STRICT	ie_existe_regra_w
FROM	cih_regra_proced_acomp a
WHERE	coalesce(a.cd_estabelecimento, cd_estabelecimento_p)		= cd_estabelecimento_p
AND	a.ie_tipo_acomp	= 'N';

IF (ie_existe_regra_w = 'S') THEN
	SELECT	coalesce(MAX(cd_grupo_proc), 0),
		coalesce(MAX(cd_especialidade), 0),
		coalesce(MAX(cd_area_procedimento), 0)
	INTO STRICT	cd_grupo_proc_w,
		cd_especialidade_w,
		cd_area_procedimento_w
	FROM	estrutura_procedimento_v
	WHERE	cd_procedimento		= cd_procedimento_p
	AND	ie_origem_proced	= ie_origem_proced_p;

	OPEN C01;
	LOOP
	FETCH C01 INTO
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN

		ds_retorno_w	:= 'S';

		END;
	END LOOP;
	CLOSE C01;
ELSE
	ds_retorno_w := 'S';
END IF;

RETURN	ds_Retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cih_obter_regra_acomp_cirurgia (nr_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

