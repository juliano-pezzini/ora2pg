-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE diluente AS (
    cd_material prescr_material.cd_material%type,
    qt_dose prescr_material.qt_dose%type,
    cd_unidade_medida_dose prescr_material.cd_unidade_medida_dose%type
);


CREATE OR REPLACE FUNCTION obter_orientacao_preparo_onc (nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_material_p prescr_material.nr_seq_material%type) RETURNS varchar AS $body$
DECLARE


diluente_w diluente;
rediluente_w diluente;

ds_orientacao_w varchar(2000);
ds_desc_unidade_w varchar(200);
qt_conversao_w material_conversao_unidade.qt_conversao%type;
qt_dose_ml bigint;

-- para calculos do reconstituinte
dose_w bigint;
dose_reconstituinte_w bigint;

total_separar_w bigint;
total_administrar_w bigint;
co_nova_linha_w constant varchar(2) := chr(13) || chr(10);

co_texto_aspirar_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1195671));
co_texto_administrar_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(307088));
co_texto_diluir_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1139148));
co_texto_rediluir_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1139149));
co_texto_reconstituir_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1139151));
co_texto_em_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(307087));
co_texto_de_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(307090));
co_texto_com_dose_de_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1139150));
co_texto_do_material_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1195240));
co_texto_medicamentos_em_w constant varchar(200) := trim(both wheb_mensagem_pck.get_texto(1139153));

co_unidade_ml_w constant varchar(200) := trim(both obter_unid_med_usua('ml'));

nr_sequencia_w prescr_material.nr_sequencia%type;

-- medicamentos da prescricao
c01 CURSOR FOR
SELECT  p.nr_sequencia,
        p.cd_material,
        p.cd_unidade_medida,
        p.cd_unidade_medida_dose,
        p.qt_dose,
        obter_desc_material(p.cd_material) ds_material
from    prescr_material p
where   p.nr_prescricao = nr_prescricao_p
and     p.nr_seq_material = nr_seq_material_p
order by p.nr_sequencia;

-- componentes
c02 CURSOR FOR
SELECT  p.cd_material,
        p.cd_unidade_medida_dose,
        p.ie_agrupador,
        p.qt_dose
from    prescr_material p
where   p.nr_prescricao = nr_prescricao_p
and     p.nr_sequencia_diluicao = nr_sequencia_w
and     ie_agrupador in (3, 7, 9);

-- para adicionar linhas ao texto
procedure append_orientacao(trecho_p text)
is;
BEGIN
    if (ds_orientacao_w IS NOT NULL AND ds_orientacao_w::text <> '') then
        ds_orientacao_w := substr(ds_orientacao_w || co_nova_linha_w, 1, 2000);
    end if;

    ds_orientacao_w := substr(ds_orientacao_w || trecho_p, 1, 2000);
end;

begin
    total_administrar_w := 0;
    total_separar_w := 0;

    for material in c01 loop
        select	obter_conversao_ml(material.cd_material, material.qt_dose, material.cd_unidade_medida_dose)
        into STRICT	qt_conversao_w
;

        -- para cada material adicionamos a dose em ml
        qt_dose_ml := obter_conversao_ml(material.cd_material, material.qt_dose, material.cd_unidade_medida_dose);
        if (qt_dose_ml IS NOT NULL AND qt_dose_ml::text <> '') then
            total_administrar_w := total_administrar_w + qt_dose_ml;
        end if;

        -- texto da orientacao
        if (ds_orientacao_w IS NOT NULL AND ds_orientacao_w::text <> '') then
            append_orientacao(''); -- nova linha
        end if;

        append_orientacao(material.ds_material || ' '
            || co_texto_com_dose_de_w || ' ' -- com dose de
            || to_char(material.qt_dose, 'FM999999999999990D00') || material.cd_unidade_medida_dose
            || ':');

        nr_sequencia_w := material.nr_sequencia;
        for componente in c02 loop
            case
                -- diluente
                when componente.ie_agrupador = 3 then
                begin
                    diluente_w.qt_dose := componente.qt_dose;
                    diluente_w.cd_material := componente.cd_material;
                    diluente_w.cd_unidade_medida_dose := componente.cd_unidade_medida_dose;
                end;
                -- rediluente
                when componente.ie_agrupador = 7 then
                begin
                    rediluente_w.qt_dose := componente.qt_dose;
                    rediluente_w.cd_material := componente.cd_material;
                    rediluente_w.cd_unidade_medida_dose := componente.cd_unidade_medida_dose;
                end;
                -- reconstituinte
                when componente.ie_agrupador = 9 then
                begin
                    select	max(qt_conversao)
                    into STRICT	qt_conversao_w
                    from	material_conversao_unidade
                    where	cd_material		= material.cd_material
                    and	cd_unidade_medida	= material.cd_unidade_medida_dose;

                    dose_w := material.qt_dose / qt_conversao_w;
                    dose_reconstituinte_w := dose_w * componente.qt_dose;

                    ds_desc_unidade_w := ceil(dose_w) || ' ' || material.cd_unidade_medida;

                    append_orientacao(co_texto_reconstituir_w || ' '
                        || ds_desc_unidade_w || ' ' -- {desc_conversao}
                        || co_texto_em_w || ' ' -- em
                        || (ceil(dose_w) * to_char(componente.qt_dose, 'FM999999999999990D00')) || ' ' || componente.cd_unidade_medida_dose || ' ' -- {dose} {unidade}
                        || co_texto_de_w || ' ' -- de
                        || obter_desc_material(componente.cd_material) -- {material}
                    );

                    if (coalesce(qt_dose_ml::text, '') = '') then
                        append_orientacao(co_texto_aspirar_w || ' ' -- Aspirar
                            || to_char(dose_reconstituinte_w, 'FM999999999999990D00') || ' ' -- dose
                            || componente.cd_unidade_medida_dose || ' '
                            || co_texto_do_material_w
                        );
                    end if;
                end;
                else null;
            end case;
        end loop;

        if (qt_dose_ml IS NOT NULL AND qt_dose_ml::text <> '') then
            append_orientacao(co_texto_aspirar_w || ' ' -- Aspirar
                || to_char(qt_dose_ml, 'FM999999999999990D00') -- dose
                || obter_unid_med_usua('ml') || ' '
                || co_texto_do_material_w);
        end if;
    end loop;

    append_orientacao('');

    -- diluente
    if (diluente_w.cd_material IS NOT NULL AND diluente_w.cd_material::text <> '') then
        append_orientacao(co_texto_diluir_w || ' ' -- diluir
            || to_char(total_administrar_w, 'FM999999999999990D00') || ' ' || obter_unid_med_usua('ml') || ' '
            || co_texto_medicamentos_em_w || ' '
            || to_char(diluente_w.qt_dose, 'FM999999999999990D00') || ' ' || diluente_w.cd_unidade_medida_dose || ' '
            || co_texto_de_w || ' '
            || obter_desc_material(diluente_w.cd_material));

        -- somar a diluicao na dose final
        total_administrar_w := total_administrar_w + diluente_w.qt_dose;
    end if;

    -- rediluente
    if (rediluente_w.cd_material IS NOT NULL AND rediluente_w.cd_material::text <> '') then
        append_orientacao(co_texto_rediluir_w || ' ' -- rediluir
            || to_char(total_administrar_w, 'FM999999999999990D00') || ' ' || obter_unid_med_usua('ml') || ' '
            || co_texto_medicamentos_em_w || ' '
            || to_char(rediluente_w.qt_dose, 'FM999999999999990D00') || ' ' || rediluente_w.cd_unidade_medida_dose || ' '
            || co_texto_de_w || ' '
            || obter_desc_material(rediluente_w.cd_material));

        -- somar a diluicao na dose final
        total_administrar_w := total_administrar_w + rediluente_w.qt_dose;
    end if;

    append_orientacao(co_texto_administrar_w || ' ' -- administrar
        || to_char(total_administrar_w, 'FM999999999999990D00') || ' ' --  {total}
        || co_unidade_ml_w -- ml
    );

    return ds_orientacao_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_orientacao_preparo_onc (nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_material_p prescr_material.nr_seq_material%type) FROM PUBLIC;

