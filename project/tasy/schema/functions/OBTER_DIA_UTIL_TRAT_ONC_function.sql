-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dia_util_trat_onc ( cd_convenio_p bigint, cd_estabelecimento_p bigint, nr_seq_paciente_p bigint) RETURNS timestamp AS $body$
DECLARE

 
QT_HORAS_INICIO_CICLO_w	bigint;			
dt_referencia_w		timestamp;
ie_dia_util_w		varchar(50);
ie_regra_w		varchar(10);
cd_protocolo_w		bigint;
nr_seq_medicacao_w	bigint;
qt_reg_w		bigint;
cd_pessoa_fisica_w	varchar(10);
ie_segunda_w		varchar(1);	
ie_terca_w		varchar(1);
ie_quarta_w		varchar(1);
ie_quinta_w		varchar(1);
ie_sexta_w		varchar(1);
ie_sabado_w		varchar(1);
ie_domingo_w		varchar(1);
ie_dia_valido_w		varchar(10);

 
 
 
C01 CURSOR FOR 
	SELECT	trunc(qt_horas_inicio_ciclo / 24) 
	from	regra_inicio_ciclo 
	where	cd_convenio	= cd_convenio_p 
	and	ie_regra	= ie_regra_w;
	
	 
	function obter_Se_Dia_Semana_Lib(	dt_referencia_p	timestamp) 
							return text is 
	ie_dia_w	bigint;
	
BEGIN
	ie_dia_w	:= pkg_date_utils.get_WeekDay(dt_referencia_p);
	 
	if (ie_dia_w	= 1) and (ie_domingo_w	= 'N') then 
		return 'N';
	elsif (ie_dia_w	= 2) and (ie_segunda_w	= 'N') then 
		return 'N';
	elsif (ie_dia_w	= 3) and ( ie_terca_w	= 'N') then 
		return 'N';
	elsif (ie_dia_w	= 4) and ( ie_quarta_w	= 'N') then 
		return 'N';
	elsif (ie_dia_w	= 5) and ( ie_quinta_w	= 'N') then 
		return 'N';
	elsif (ie_dia_w	= 6) and ( ie_sexta_w	= 'N') then 
		return 'N';
	elsif (ie_dia_w	= 7) and ( ie_sabado_w	= 'N') then 
		return 'N';
	end if;
 
	return 'S';
	end;
	 
	 
	 
	function Obter_Se_Dia_Util_Onc_Conv(	dt_referencia_p	date, 
						cd_estabelecimento_p	number, 
						nm_usuario_p		varchar) 
			return varchar2 is 
 
	ie_dia_semana_w	varchar2(01);
	ie_feriado_w	varchar2(01);
	ie_dia_util_w	varchar2(01)	:= 'N';
	vl_parametro_w	varchar2(255);
 
	BEGIN 
 
	select	max(IE_REGRA_HORAS_ONC_CICLO) 
	into STRICT	vl_parametro_w 
	from	convenio_Estabelecimento 
	where	cd_convenio	= cd_convenio_p 
	and	cd_Estabelecimento	= cd_estabelecimento_p;
	 
	if (coalesce(vl_parametro_w::text, '') = '') then 
		select	coalesce(obter_valor_param_usuario(281, 92, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),'TD') 
		into STRICT	vl_parametro_w 
		;
		end if;
		 
	ie_dia_semana_w := to_char(pkg_date_utils.get_WeekDay(dt_referencia_p));
 
	select	coalesce(max('S'), 'N') 
	into STRICT	ie_feriado_w 
	from 	feriado 
	where 	dt_feriado		between trunc(dt_referencia_p) and trunc(dt_referencia_P) + 86399/86400 
	and	cd_estabelecimento	= cd_estabelecimento_p;
 
	if (vl_parametro_w		= 'TD') then 
		ie_dia_util_w		:= 'S';
	elsif (vl_parametro_w		= 'SU') and (ie_dia_semana_w	in ('2', '3', '4', '5', '6')) and (ie_feriado_w		= 'N') then 
		ie_dia_util_w		:= 'S';
	elsif (vl_parametro_w		= 'DUS') and (ie_dia_semana_w	in ('2', '3', '4', '5', '6', '7')) and (ie_feriado_w		= 'N') then 
		ie_dia_util_w		:= 'S';
	elsif (vl_parametro_w		= 'MF') and (ie_feriado_w		= 'N') then 
		ie_dia_util_w		:= 'S';
	elsif (vl_parametro_w		= 'DUF') and (ie_dia_semana_w	in ('2', '3', '4', '5', '6')) then 
		ie_dia_util_w		:= 'S';
	end if;
 
	return ie_dia_util_w;
 
	END;
	 
 
 
begin 
dt_referencia_w	:= clock_timestamp();
 
select	max(cd_pessoa_fisica), 
	max(cd_protocolo), 
	max(nr_seq_medicacao) 
into STRICT	cd_pessoa_fisica_w, 
	cd_protocolo_w, 
	nr_seq_medicacao_w 
from	paciente_setor 
where	nr_seq_paciente	 = nr_seq_paciente_p;
 
 
select	CASE WHEN count(*)=0 THEN 'P'  ELSE 'D' END  
into STRICT	ie_regra_w 
from	paciente_atendimento 
where	nr_seq_paciente	= nr_seq_paciente_p;
 
select	count(*) 
into STRICT	qt_reg_w 
from	paciente_setor 
where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
and	nr_seq_paciente		<> nr_seq_paciente_p 
and	cd_protocolo		= cd_protocolo_w 
and	nr_seq_medicacao	= nr_seq_medicacao_w;
 
if (qt_reg_w	> 0) then 
	ie_regra_w	:= 'D';
end if;
 
open C01;
loop 
fetch C01 into	 
	QT_HORAS_INICIO_CICLO_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;
 
if ( coalesce(QT_HORAS_INICIO_CICLO_w::text, '') = '') then 
 
 
	select	trunc(max(QT_HORAS_INICIO_CICLO)/ 24) 
	into STRICT	QT_HORAS_INICIO_CICLO_w 
	from	convenio_estabelecimento 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	cd_convenio		= cd_convenio_p;
	 
	if (coalesce(QT_HORAS_INICIO_CICLO_w::text, '') = '') then 
		select	trunc(	max(QT_HORAS_INICIO_CICLO) / 24) 
		into STRICT	QT_HORAS_INICIO_CICLO_w 
		from	parametro_medico 
		where	cd_estabelecimento	= cd_estabelecimento_p;	
	 
	end if;
 
end if;
 
 
select	max(coalesce(ie_segunda,'S')), 
	max(coalesce(ie_terca,'S')), 
	max(coalesce(ie_quarta,'S')), 
	max(coalesce(ie_quinta,'S')), 
	max(coalesce(ie_sexta,'S')), 
	max(coalesce(ie_sabado,'S')), 
	max(coalesce(ie_domingo,'S')) 
into STRICT	ie_segunda_w, 
	ie_terca_w, 
	ie_quarta_w, 
	ie_quinta_w, 
	ie_sexta_w, 
	ie_sabado_w, 
	ie_domingo_w	 
from	protocolo_medicacao 
where	cd_protocolo 	= cd_protocolo_w 
and	nr_sequencia 	= nr_seq_medicacao_w;
 
if (QT_HORAS_INICIO_CICLO_w IS NOT NULL AND QT_HORAS_INICIO_CICLO_w::text <> '') then 
	for i in 1..QT_HORAS_INICIO_CICLO_w loop 
		begin 
		dt_referencia_w	:= dt_referencia_w + 1;
		ie_dia_util_w	:= Obter_Se_Dia_Util_Onc_Conv(dt_referencia_w,cd_estabelecimento_p,wheb_usuario_pck.get_nm_usuario);
		 
		while(ie_dia_util_w	= 'N') loop 
			begin 
			dt_referencia_w	:= dt_referencia_w + 1;
			ie_dia_util_w:= Obter_Se_Dia_Util_Onc_Conv(dt_referencia_w,cd_estabelecimento_p,wheb_usuario_pck.get_nm_usuario);
			 
			end;
		end loop;	
		 
		end;
	end loop;
 
end if;
 
select	max(coalesce(ie_segunda,'S')), 
	max(coalesce(ie_terca,'S')), 
	max(coalesce(ie_quarta,'S')), 
	max(coalesce(ie_quinta,'S')), 
	max(coalesce(ie_sexta,'S')), 
	max(coalesce(ie_sabado,'S')), 
	max(coalesce(ie_domingo,'S')) 
into STRICT	ie_segunda_w, 
	ie_terca_w, 
	ie_quarta_w, 
	ie_quinta_w, 
	ie_sexta_w, 
	ie_sabado_w, 
	ie_domingo_w	 
from	protocolo_medicacao 
where	cd_protocolo 	= cd_protocolo_w 
and	nr_sequencia 	= nr_seq_medicacao_w;
 
 
ie_dia_valido_w	:= obter_Se_Dia_Semana_Lib(dt_referencia_w);
while(ie_dia_valido_w = 'N') loop 
	 begin 
	 dt_referencia_w	:= dt_referencia_w + 1;
	 ie_dia_valido_w	:= obter_Se_Dia_Semana_Lib(dt_referencia_w);
	 end;
end loop;	
 
 
return	dt_referencia_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dia_util_trat_onc ( cd_convenio_p bigint, cd_estabelecimento_p bigint, nr_seq_paciente_p bigint) FROM PUBLIC;

