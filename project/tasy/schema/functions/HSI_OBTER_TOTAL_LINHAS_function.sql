-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hsi_obter_total_linhas (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint) RETURNS bigint AS $body$
DECLARE


nr_total_linhas_w	bigint:= 0;
qt_reg_10_w		bigint:= 1;
qt_reg_11_w		bigint:= 0;
qt_reg_12_w		bigint:= 0;
qt_reg_13_w		bigint:= 0;
qt_reg_19_w		bigint:= 1;


BEGIN

/* Registro 11 */

select 	count(*)
into STRICT	qt_reg_11_w
from   	w_interf_conta_cab  a
where	ie_tipo_atend_real = 1
and   	nr_seq_protocolo = nr_seq_protocolo_p
and 	nr_interno_conta = nr_interno_conta_p;

/* Registro 12 */

select 	count(*)
into STRICT	qt_reg_12_w
from (
	SELECT 	a.nr_interno_conta,
		a.nr_seq_protocolo,
		substr(x.nr_doc_convenio,1,8) nr_documento,
		Campo_numerico(a.cd_item_convenio) cd_procedimento,
		a.dt_entrada_unidade 	dt_entrada,
		coalesce(a.dt_saida_unidade,x.dt_periodo_final) dt_saida,
		sum(a.qt_item) 		qt_procedimento,
		sum(a.vl_total_item) 	vl_procedimento,
		a.cd_item,
		obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) nr_cpf_solic
	from	w_interf_conta_cab 	x,
		w_interf_conta_item 	a
	where	a.nr_interno_conta	= x.nr_interno_conta
	and	coalesce(a.ie_total_interf,0)	= 5
	and	ie_tipo_atend_real	= 1
	and 	coalesce(a.ie_responsavel_credito,'H') <> 'PRC'
	and	x.nr_seq_protocolo = nr_seq_protocolo_p
	and 	x.nr_interno_conta = nr_interno_conta_p
	group by Campo_numerico(a.cd_item_convenio),
       		a.nr_interno_conta,
		obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) ,
       		a.nr_seq_protocolo,
		a.cd_item,
   		a.dt_entrada_unidade,
   		coalesce(a.dt_saida_unidade,x.dt_periodo_final),
	   	substr(x.nr_doc_convenio,1,8)) t;

/* Registro 13 */

select 	count(*)
into STRICT	qt_reg_13_w
from (
	SELECT 	a.nr_interno_conta,
   		a.nr_seq_protocolo,
	  	substr(x.nr_doc_convenio,1,8) nr_documento,
   		Campo_numerico(a.cd_item_convenio) cd_procedimento,
	   	CASE WHEN a.ie_tipo_item=1 THEN sum(a.qt_item)  ELSE 1 END  qt_procedimento,
	   	sum(CASE WHEN a.cd_area_proc=1 THEN (a.vl_honorario + a.vl_custo_oper) WHEN a.cd_area_proc=4 THEN (a.vl_honorario + a.vl_custo_oper)  ELSE a.vl_total_item END ) 	vl_procedimento,
	   	coalesce(a.nr_cpf_executor,a.cd_cgc_hospital) cd_cgc_cpf_exec,
	   	coalesce(a.cd_cgc_cpf_resp_cred, a.cd_cgc_hospital) 	cd_cgc_cpf_resp_cred,
	   	CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END  dt_procedimento,
	   	a.cd_funcao_executor 	cd_atividade_prestador,
	   	a.nr_porte_anestesico 	ie_porte_anestesico,
	   	CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END  hr_atendimento,
	   	a.pr_funcao_participante * 100 	tx_procedimento,
	   	CASE WHEN a.cd_classif_setor='4' THEN 'S'  ELSE 'N' END  	ie_procedimento_uti,
	   	a.cd_item
	from	w_interf_conta_cab 	x,
		w_interf_conta_item 	a
	where	a.nr_interno_conta	= x.nr_interno_conta
	and	coalesce(a.ie_total_interf,0)	<> 5
	and 	coalesce(a.ie_responsavel_credito,'H') <> 'PRC'
	and	x.nr_seq_protocolo = nr_seq_protocolo_p
	and 	x.nr_interno_conta = nr_interno_conta_p
	group by Campo_numerico(a.cd_item_convenio),
		a.nr_interno_conta,
		a.nr_seq_protocolo,
		obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) ,
		coalesce(a.nr_cpf_executor,a.cd_cgc_hospital),
		coalesce(a.cd_cgc_cpf_resp_cred, a.cd_cgc_hospital),
		CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END ,
		a.cd_funcao_executor,
		a.nr_porte_anestesico,
		a.pr_via_acesso,
		a.pr_funcao_participante,
		a.ie_emite_conta,
		a.cd_classif_setor,
		CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END ,
		a.cd_item,
		a.ie_tipo_item,
		substr(x.nr_doc_convenio,1,8)
	having 	sum(CASE WHEN a.ie_tipo_item=1 THEN  a.qt_item  ELSE a.vl_total_item END ) > 0) t;


nr_total_linhas_w:= 	qt_reg_10_w + qt_reg_11_w + qt_reg_12_w +
			qt_reg_13_w + qt_reg_19_w;

return	nr_total_linhas_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hsi_obter_total_linhas (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint) FROM PUBLIC;

