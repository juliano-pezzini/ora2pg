-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_ult_cirurgia_atend ( nr_atendimento_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


cd_medico_w		varchar(10);
cd_anestesista_w	varchar(10);
nm_medico_w		varchar(255);
nm_anestesista_w	varchar(255);
ds_procedimento_w	varchar(255);
ds_procedimento_inter_w varchar(255);
cd_procedimento_w	bigint;
cd_procedimento_inter_w bigint;
ds_setor_w		varchar(255);
ds_tipo_anestesia_w	varchar(255);
qt_min_duracao_w	bigint;
ds_duracao_w		varchar(10);
ds_retorno_w		varchar(255);
nr_prescricao_w		bigint;
dt_cirurgia_w		timestamp;

/* ie_opcao_p

M	= Codigo do medico cirurgiao.
A	= Codigo do medico anestesista.
NM	= Codigo do medico cirurgiao.
NA	= Codigo do medico anestesista.
P	= Descricao do procedimento princ da cirurgia.
CP	= Codigo do procedimento princ da cirurgia.
S	= Setor em que foi realizada a cirurgia.
DTA	= Descricao do Tipo de Anestesia.
DUR	= Duracao da cirurgia em HH:MM.
CDTP	= Codigo - Descricao de Todos os Procedimentos da cirurgia.
CDTPV   = Codigo - Descricao de Todos os Procedimentos internos da cirurgia.

*/
c01 CURSOR FOR
	SELECT	cd_procedimento,
		    substr(obter_desc_prescr_proc(cd_procedimento,ie_origem_proced, nr_seq_proc_interno),1,240)
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w;


c02 CURSOR FOR
	SELECT (SELECT MAX(CD_PROCEDIMENTO) FROM PROC_INTERNO WHERE NR_SEQUENCIA = NR_SEQ_PROC_INTERNO),
	SUBSTR((SELECT obter_descricao_procedimento(MAX(CD_PROCEDIMENTO), MAX(IE_ORIGEM_PROCED)) FROM PROC_INTERNO WHERE NR_SEQUENCIA = NR_SEQ_PROC_INTERNO),1,200)
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w;



BEGIN

select	c.cd_medico_cirurgiao,
	c.cd_medico_anestesista,
	substr(obter_descricao_procedimento(c.cd_procedimento_princ, c.ie_origem_proced),1,255),
	c.cd_procedimento_princ,
	obter_unid_setor_cirurgia(c.nr_cirurgia,'SS'),
	obter_valor_dominio(36,c.cd_tipo_anestesia),
	c.nr_min_duracao_real,
	c.nr_prescricao,
	DT_INICIO_REAL,
	(SELECT MAX(CD_PROCEDIMENTO) FROM PROC_INTERNO WHERE NR_SEQUENCIA = C.NR_SEQ_PROC_INTERNO),
	SUBSTR((SELECT obter_descricao_procedimento(MAX(CD_PROCEDIMENTO), MAX(IE_ORIGEM_PROCED)) FROM PROC_INTERNO WHERE NR_SEQUENCIA = C.NR_SEQ_PROC_INTERNO),1,200)
into STRICT	cd_medico_w,
	cd_anestesista_w,
	ds_procedimento_w,
	cd_procedimento_w,
	ds_setor_w,
	ds_tipo_anestesia_w,
	qt_min_duracao_w,
	nr_prescricao_w,
	dt_cirurgia_w,
	cd_procedimento_inter_w,
	ds_procedimento_inter_w
from	cirurgia c
where	nr_cirurgia	= (	SELECT	max(d.nr_cirurgia)
				from 	cirurgia d
				where	ie_status_cirurgia	<> '3'
				and	nr_atendimento	= nr_atendimento_p);

if (ie_opcao_p	= 'M') then
	ds_retorno_w	:= cd_medico_w;
elsif (ie_opcao_p	= 'A') then
	ds_retorno_w	:= cd_anestesista_w;
elsif (ie_opcao_p	= 'NM') then
	ds_retorno_w	:= obter_nome_medico(cd_medico_w,'N');
elsif (ie_opcao_p	= 'NA') then
	ds_retorno_w	:= obter_nome_medico(cd_anestesista_w,'N');
elsif (ie_opcao_p	= 'P') then
	ds_retorno_w	:= ds_procedimento_w;
elsif (ie_opcao_p	= 'CP') then
	ds_retorno_w	:= cd_procedimento_w;
elsif (ie_opcao_p	= 'S') then
	ds_retorno_w	:= ds_setor_w;
elsif (ie_opcao_p	= 'DTA') then
	ds_retorno_w	:= ds_tipo_anestesia_w;
elsif (ie_opcao_p	= 'DT') then
	ds_retorno_w	:= PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_cirurgia_w,'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
elsif (ie_opcao_p	= 'DUR') then
	ds_duracao_w := trim(both to_char(trunc(dividir(qt_min_duracao_w,60))));
	if (length(ds_duracao_w) = 1) then
		ds_duracao_w := '0' || ds_duracao_w;
	end if;
	if (ds_duracao_w IS NOT NULL AND ds_duracao_w::text <> '') then
		ds_retorno_w := ds_duracao_w || ':' || trim(to_char((dividir(qt_min_duracao_w,60) - trunc(dividir(qt_min_duracao_w,60))) * 60, '00'));
	end if;	
elsif (ie_opcao_p	= 'CDTPV') then
	ds_retorno_w	:= cd_procedimento_inter_w || ' - ' || ds_procedimento_inter_w;
	open c02;
	loop
		fetch c02 into
			cd_procedimento_inter_w,
			ds_procedimento_inter_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		ds_retorno_w	:= ds_retorno_w || chr(13) || chr(10) || cd_procedimento_inter_w || ' - ' || ds_procedimento_inter_w;
	end loop;
	close c02;	
elsif (ie_opcao_p	= 'CDTP') then
	ds_retorno_w	:= cd_procedimento_w || ' - ' || ds_procedimento_w;
	open c01;
	loop
		fetch c01 into
			cd_procedimento_w,
			ds_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		ds_retorno_w	:= ds_retorno_w || chr(13) || chr(10) || cd_procedimento_w || ' - ' || ds_procedimento_w;
	end loop;
	close c01;
end if;


return ds_retorno_w;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_ult_cirurgia_atend ( nr_atendimento_p bigint, ie_opcao_p text) FROM PUBLIC;

