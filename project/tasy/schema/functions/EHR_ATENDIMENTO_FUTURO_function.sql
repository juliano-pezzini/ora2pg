-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ehr_atendimento_futuro ( nr_seq_atend_futuro_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_atend_w	varchar(4000);
ds_retorno_prescr_w	varchar(4000);
ds_retorno_laudo_sus_w	varchar(4000);
ds_retorno_w		varchar(4000);

nr_atend_origem_w	bigint;
nr_atendimento_w	bigint;
lb_nr_atend_origem_w	varchar(255);
lb_nr_atendimento_w	varchar(255);
ds_asa_w		varchar(255);
ds_status_w		varchar(255);
ds_procedimento_w	varchar(255);
nm_medico_w		varchar(255);

nr_prescricao_w		bigint;
dt_prescricao_w		timestamp;
ds_lista_prescricao_w	varchar(4000);
ds_lista_proc_w		varchar(4000);



nr_laudo_sus_w		smallint;
lb_nr_laudo_sus_w	varchar(20);
dt_emissao_w		timestamp;
lb_dt_emissao_w		varchar(30);
ds_procedimento_laudo_w	varchar(255);
nm_medico_req_w		varchar(255);
cd_cid_principal_w	varchar(4);
cd_cid_secundario_w	varchar(4);
cd_cid_causa_assoc_w	varchar(4);

lb_cd_cid_principal_w	varchar(255);
lb_cd_cid_secundario_w	varchar(255);
lb_cd_cid_causa_assoc_w	varchar(255);
ie_transfusao_w		bigint;
ds_transfusao_w		varchar(255);

c01 CURSOR FOR
SELECT	nr_prescricao,
	dt_prescricao
from   	prescr_medica
where  	nr_seq_atend_futuro = nr_seq_atend_futuro_p;

c02 CURSOR FOR
SELECT	substr(obter_desc_proc_interno(nr_seq_proc_interno),1,255)
from   	atend_pac_proced_previsto
where  	nr_seq_atend_futuro = nr_seq_atend_futuro_p
order by ie_proc_principal desc;


BEGIN


open c01;
loop
fetch c01 into
	nr_prescricao_w,
	dt_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (ds_lista_prescricao_w IS NOT NULL AND ds_lista_prescricao_w::text <> '') then
		ds_lista_prescricao_w := substr(ds_lista_prescricao_w ||chr(13) ,1,2000);
	end if;

	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
		select 	count(*)
		into STRICT 	ie_transfusao_w
		from 	prescr_medica a, prescr_solic_bco_sangue b
		where 	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao = nr_prescricao_w;
	end if;

	if (coalesce(ie_transfusao_w,0) >= 1) then
		ds_transfusao_w := wheb_mensagem_pck.get_texto(306747, null); -- Pedido de transfusão: Sim
	else
		ds_transfusao_w := wheb_mensagem_pck.get_texto(306749, null); -- Pedido de transfusão: Não
	end if;

	ds_lista_prescricao_w	:= substr(wheb_mensagem_pck.get_texto(306755,	'DS_LISTA_PRESCRICAO_W=' || ds_lista_prescricao_w || ';' ||
																			'NR_PRESCRICAO_W=' || nr_prescricao_w || ';' ||
																			'DT_PRESCRICAO_W=' || to_char(dt_prescricao_w,'dd/mm/yyyy hh24:mi:ss') || ';' ||
																			'DS_TRANSFUSAO_W=' || ds_transfusao_w),1,2000);
										/*
											#@DS_LISTA_PRESCRICAO_W#@ Prescrição : #@NR_PRESCRICAO_W#@          #@Data : #@DT_PRESCRICAO_W#@
											#@DS_TRANSFUSAO_W#@
										*/
	end;
end loop;
close c01;


--Dados básicos do atendimento futuro
select	coalesce(a.nr_atend_origem,0),
	coalesce(a.nr_atendimento,0),
	substr(obter_valor_dominio(1287, a.ie_asa_estado_paciente),1,255) ds_asa,
	substr(obter_desc_status_atend_fut(a.nr_seq_status),1,255) ds_status,
	substr(obter_nome_pf(a.cd_medico),1,255) nm_medico
into STRICT	nr_atend_origem_w,
	nr_atendimento_w,
	ds_asa_w,
	ds_status_w,
	nm_medico_w
from	atend_pac_futuro a
where	a.nr_sequencia = nr_seq_atend_futuro_p;

open c02;
loop
fetch c02 into
	ds_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	ds_lista_proc_w	:= substr(ds_lista_proc_w ||ds_procedimento_w||', ',1,2000);
	end;
end loop;
close c02;

if (ds_lista_proc_w IS NOT NULL AND ds_lista_proc_w::text <> '') then
	ds_lista_proc_w := substr(wheb_mensagem_pck.get_texto(306746, 'DS_LISTA_PROC=' || ds_lista_proc_w),1,2000); -- Procedimentos: #@DS_LISTA_PROC#@
	ds_lista_proc_w := substr(ds_lista_proc_w,1,length(ds_lista_proc_w)-2);
end if;

if (nr_atend_origem_w > 0) then
	lb_nr_atend_origem_w := wheb_mensagem_pck.get_texto(306742,  'NR_ATEND_ORIGEM=' || nr_atend_origem_w); -- Atendimento origem #@NR_ATEND_ORIGEM#@
end if;
if (nr_atendimento_w > 0) then
	lb_nr_atendimento_w := wheb_mensagem_pck.get_texto(294581, 'NR_ATENDIMENTO=' || nr_atendimento_w); -- Atendimento: #@NR_ATENDIMENTO#@
end if;
if (ds_asa_w IS NOT NULL AND ds_asa_w::text <> '') then
	ds_asa_w := wheb_mensagem_pck.get_texto(306737, 'DS_ASA=' || ds_asa_w); -- ASA: #@DS_ASA#@
end if;
if (ds_status_w IS NOT NULL AND ds_status_w::text <> '') then
	ds_status_w := wheb_mensagem_pck.get_texto(306736, 'DS_STATUS=' || ds_status_w); -- Status: #@DS_STATUS#@
end if;
if (nm_medico_w IS NOT NULL AND nm_medico_w::text <> '') then
	nm_medico_w := wheb_mensagem_pck.get_texto(306731, 'NM_MEDICO_W=' || nm_medico_w); -- Médico cirurgião: #@NM_MEDICO_W#@
end if;

select	max(coalesce(a.nr_laudo_sus,0)),
	max(a.dt_emissao),
	max(substr(obter_descricao_procedimento(a.cd_procedimento_solic,a.ie_origem_proced),1,255)),
	max(substr(obter_nome_medico(a.cd_medico_requisitante,'N'),1,255)),
	max(cd_cid_principal),
	max(cd_cid_secundario),
	max(cd_cid_causa_assoc)
into STRICT	nr_laudo_sus_w,
	dt_emissao_w,
	ds_procedimento_laudo_w,
	nm_medico_req_w,
	cd_cid_principal_w,
	cd_cid_secundario_w,
	cd_cid_causa_assoc_w
from   	sus_laudo_paciente a
where  	a.nr_seq_atend_futuro = nr_seq_atend_futuro_p
and	a.ie_tipo_laudo_sus = 0;


if (nr_laudo_sus_w > 0) then
	lb_nr_laudo_sus_w := wheb_mensagem_pck.get_texto(306729, 'NM_PACIENTE=' || nr_laudo_sus_w); --  Laudo: #@NM_PACIENTE#@
	lb_dt_emissao_w := wheb_mensagem_pck.get_texto(306727, 'DS_DATA=' || to_char(dt_emissao_w,'dd/mm/yyyy hh24:mi:ss')); -- Data: #@DS_DATA#@
end if;
if (ds_procedimento_laudo_w IS NOT NULL AND ds_procedimento_laudo_w::text <> '') then
	ds_procedimento_laudo_w := wheb_mensagem_pck.get_texto(306725, 'DS_MATERIAL=' || ds_procedimento_laudo_w); -- Procedimento: #@DS_MATERIAL#@
end if;
if (nm_medico_req_w IS NOT NULL AND nm_medico_req_w::text <> '') then
	nm_medico_req_w := wheb_mensagem_pck.get_texto(306724, 'NM_MEDICO_REQ_W=' || nm_medico_req_w); -- Médico req: #@NM_MEDICO_REQ_W#@
end if;

if (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') then
	lb_cd_cid_principal_w := wheb_mensagem_pck.get_texto(306717, 'CD_CID_PRINCIPAL_W=' || cd_cid_principal_w); -- CID 10 Principal : #@CD_CID_PRINCIPAL_W#@
end if;
if (cd_cid_secundario_w IS NOT NULL AND cd_cid_secundario_w::text <> '') then
	lb_cd_cid_secundario_w := wheb_mensagem_pck.get_texto(306720, 'CD_CID_SECUNDARIO_W=' || cd_cid_secundario_w); -- CID 10 Secundário : #@CD_CID_SECUNDARIO_W#@
end if;
if (cd_cid_causa_assoc_w IS NOT NULL AND cd_cid_causa_assoc_w::text <> '')  then
	lb_cd_cid_causa_assoc_w := wheb_mensagem_pck.get_texto(306722, 'CD_CID_CAUSA_ASSOC_W=' || cd_cid_causa_assoc_w); -- CID 10 Causas associadas : #@CD_CID_CAUSA_ASSOC_W#@
end if;


ds_retorno_atend_w := 	wheb_mensagem_pck.get_texto(732369, 'LB_NR_ATEND_ORIGEM_W=' || lb_nr_atend_origem_w || ';' ||
															'LB_NR_ATENDIMENTO_W=' || lb_nr_atendimento_w || ';' ||
															'NM_MEDICO_W=' || nm_medico_w || ';' ||
															'DS_ASA_W=' || ds_asa_w || ';' ||
															'DS_STATUS_W=' || ds_status_w || ';' ||
															'DS_LISTA_PROC_W=' || ds_lista_proc_w) ||  chr(13) || chr(13);
if (nr_laudo_sus_w > 0) then
	ds_retorno_laudo_sus_w	:= 	wheb_mensagem_pck.get_texto(306713, 'LB_NR_LAUDO_SUS_W=' || lb_nr_laudo_sus_w || ';' ||
																	'LB_DT_EMISSAO_W=' || lb_dt_emissao_w || ';' ||
																	'DS_PROCEDIMENTO_LAUDO_W=' || ds_procedimento_laudo_w || ';' ||
																	'NM_MEDICO_REQ_W=' || nm_medico_req_w || ';' ||
																	'LB_CD_CID_PRINCIPAL_W=' || lb_cd_cid_principal_w || ';' ||
																	'LB_CD_CID_SECUNDARIO_W=' || lb_cd_cid_secundario_w || ';' ||
																	'LB_CD_CID_CAUSA_ASSOC_W=' || lb_cd_cid_causa_assoc_w) ||  chr(13) || chr(13);
else
	ds_retorno_laudo_sus_w := null;
end if;

if (ds_lista_prescricao_w IS NOT NULL AND ds_lista_prescricao_w::text <> '') then
	ds_retorno_prescr_w :=	wheb_mensagem_pck.get_texto(306711, 'DS_LISTA_PRESCRICAO_W=' || ds_lista_prescricao_w);
							/*	Prescrições

								#@DS_LISTA_PRESCRICAO_W#@	*/
else
	ds_retorno_prescr_w:= null;
end if;


ds_retorno_w := substr(ds_retorno_atend_w || ds_retorno_laudo_sus_w || ds_retorno_prescr_w,1,4000);


return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ehr_atendimento_futuro ( nr_seq_atend_futuro_p bigint) FROM PUBLIC;

