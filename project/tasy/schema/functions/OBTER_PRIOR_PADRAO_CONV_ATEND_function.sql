-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prior_padrao_conv_atend (nr_atendimento_p bigint, cd_convenio_p bigint) RETURNS bigint AS $body$
DECLARE


nr_prioridade_w		atend_categoria_convenio.nr_prioridade%type;
cd_convenio_igual_w	atend_categoria_convenio.cd_convenio%type;


BEGIN

if (coalesce(cd_convenio_p,0) > 0) then

	/*	Verifica se o convenio possui prioridade no titular convenio	*/

	select 	coalesce(max(ptc.nr_prioridade), 0)
	into STRICT	nr_prioridade_w
	from 	pessoa_titular_convenio ptc
	where 	ptc.cd_pessoa_fisica = (SELECT 	ap.cd_pessoa_fisica
					from 	atendimento_paciente ap	
					where 	ap.nr_atendimento = nr_atendimento_p)
	and	ptc.nr_prioridade > 0					
	and 	ptc.cd_convenio = cd_convenio_p;

	if (nr_prioridade_w = 0) then

		/*	Verifica se o convenio possui prioridade padrao		*/

		select	max(nr_prioridade_padrao)
		into STRICT	nr_prioridade_w
		from	convenio
		where	cd_convenio	= cd_convenio_p
		and	nr_prioridade_padrao > 0;

		if (coalesce(nr_prioridade_w::text, '') = '') then

			/*	Verifica se existe o mesmo convenio em outro atendimento no mesmo case	*/

			select  coalesce(max(acc.nr_prioridade), 0)
			into STRICT	nr_prioridade_w
			from    atend_categoria_convenio acc,
				atendimento_paciente ap
			where   acc.nr_atendimento = ap.nr_atendimento
			and     acc.cd_convenio = cd_convenio_p
			and     ap.nr_seq_episodio in ( SELECT  ap2.nr_seq_episodio
							from    atendimento_paciente ap2 
							where   ap2.nr_atendimento = nr_atendimento_p)
			and     ap.nr_atendimento <> nr_atendimento_p;

			if (nr_prioridade_w = 0) then

			/*  Retorna a maior prioridade no mesmo case  */

				select	coalesce(max(acc.nr_prioridade), 0)
				into STRICT	nr_prioridade_w
				from	atend_categoria_convenio acc,
					convenio c,
					atendimento_paciente ap
				where	c.cd_convenio	= acc.cd_convenio
				and     acc.nr_atendimento = ap.nr_atendimento
				and	coalesce(acc.nr_prioridade,0) <> coalesce(c.nr_prioridade_padrao,0)
				and     ap.nr_seq_episodio in ( SELECT	nr_seq_episodio 
								from 	atendimento_paciente ap2 
								where 	ap2.nr_atendimento = nr_atendimento_p)
				and	(acc.nr_prioridade IS NOT NULL AND acc.nr_prioridade::text <> '');

				if (nr_prioridade_w < 9999) then
					nr_prioridade_w := nr_prioridade_w + 1;
				end if;	

			end if;

		end if;

	end if;

	/* Retorna o convenio que utiliza a mesma prioridade no case */

	select	coalesce(max(acc.cd_convenio), 0)
	into STRICT	cd_convenio_igual_w
	from	atend_categoria_convenio acc,
		atendimento_paciente ap
	where   acc.nr_atendimento = ap.nr_atendimento
	and  	acc.nr_prioridade = nr_prioridade_w
    and coalesce(ap.dt_cancelamento::text, '') = ''
	and     ap.nr_seq_episodio in ( SELECT	ap2.nr_seq_episodio 
					from 	atendimento_paciente ap2 
					where 	ap2.nr_atendimento = nr_atendimento_p);
					
	if (cd_convenio_igual_w > 0 and cd_convenio_igual_w <> cd_convenio_p and nr_prioridade_w < 9999) then
		nr_prioridade_w := nr_prioridade_w + 1;
	end if;

end if;

return	nr_prioridade_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prior_padrao_conv_atend (nr_atendimento_p bigint, cd_convenio_p bigint) FROM PUBLIC;

