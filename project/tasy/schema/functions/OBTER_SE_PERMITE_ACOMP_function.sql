-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_permite_acomp (cd_pessoa_fisica_p text, cd_convenio_p bigint) RETURNS varchar AS $body$
DECLARE


qt_existe_w bigint;
ie_retorno_w varchar(225) := 'XPTO';
ie_idade_w varchar(225);
cd_estabelecimento_w	smallint;
nr_seq_classif_w	bigint;
ie_permite_w	varchar(255);

C01 CURSOR FOR
	SELECT	nr_seq_classif
	from	pessoa_classif
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and		((to_date(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') >= to_date(dt_inicio_vigencia, 'dd/mm/yyyy hh24:mi:ss')) or (coalesce(dt_inicio_vigencia::text, '') = ''))
	and		((to_date(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') <= to_date(dt_final_vigencia, 'dd/mm/yyyy hh24:mi:ss')) or (coalesce(dt_final_vigencia::text, '') = ''))
	and		cd_estabelecimento = cd_estabelecimento_w;

C02 CURSOR FOR
	SELECT	coalesce(ie_permite_acomp,'S')
	from	permissao_acompanhante
	where	ie_idade_w between qt_idade_inicial and qt_idade_final
	and 	((coalesce(cd_convenio,0) = cd_convenio_p) or (coalesce(cd_convenio::text, '') = ''))
	and		coalesce(nr_seq_classif_pf, nr_seq_classif_w)	= nr_seq_classif_w
	order by coalesce(nr_seq_classif_pf,0);


BEGIN

cd_estabelecimento_w	:= coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

select count(*)
into STRICT qt_existe_w
from  permissao_acompanhante;

if (qt_existe_w > 0) then
	begin
		select	1
		into STRICT	qt_existe_w
		from	permissao_acompanhante
		where	(nr_seq_classif_pf IS NOT NULL AND nr_seq_classif_pf::text <> '')
		and		coalesce(ie_situacao,'A')	= 'A'  LIMIT 1;
	exception
		when no_data_found then
		qt_existe_w	:= 0;
	end;
	if (qt_existe_w > 0) then
		begin
			select	1
			into STRICT	qt_existe_w
			from	pessoa_classif
			where	cd_pessoa_fisica = cd_pessoa_fisica_p
			and		((to_date(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') >= to_date(dt_inicio_vigencia, 'dd/mm/yyyy hh24:mi:ss')) or (coalesce(dt_inicio_vigencia::text, '') = ''))
			and		((to_date(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') <= to_date(dt_final_vigencia, 'dd/mm/yyyy hh24:mi:ss')) or (coalesce(dt_final_vigencia::text, '') = ''))
			and		cd_estabelecimento = cd_estabelecimento_w  LIMIT 1;
		exception
			when no_data_found then
			qt_existe_w	:= 0;
		end;
	end if;
	if (cd_pessoa_fisica_p > '0') then
		ie_idade_w := Obter_Idade_PF(cd_pessoa_fisica_p,clock_timestamp(),'A');
	end if;
	if (qt_existe_w	= 0) then
		select	coalesce(max(ie_permite_acomp),'S')
		into STRICT	ie_retorno_w
		from	permissao_acompanhante
		where	ie_idade_w between qt_idade_inicial and qt_idade_final
		and 	((coalesce(cd_convenio,0) = cd_convenio_p) or (coalesce(cd_convenio::text, '') = ''))
		and		coalesce(nr_seq_classif_pf::text, '') = '';
	else
		open C01;
		loop
		fetch C01 into
			nr_seq_classif_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			open C02;
			loop
			fetch C02 into
				ie_permite_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ie_retorno_w := ie_permite_w;
				end;
			end loop;
			close C02;
			if (ie_retorno_w	= 'S') then
				exit;
			end if;
			if (ie_retorno_w = 'XPTO') then
				ie_retorno_w := 'S';
			end if;
			end;
		end loop;
		close C01;
	end if;

end if;
return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_permite_acomp (cd_pessoa_fisica_p text, cd_convenio_p bigint) FROM PUBLIC;

