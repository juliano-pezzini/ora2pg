-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_marcas_concat_integracao ( cd_material_p bigint, ie_opcao_p text, ie_quebra_linha_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


cd_material_w		integer;
ds_marca_w		varchar(120);
resultado_w	 	varchar(4000);
Quebra_w		varchar(10) 	:= chr(13) || chr(10);
cd_referencia_w		varchar(80);
ds_marca_ref_w		varchar(2000);
qt_prioridade_w		integer;

/* Opcoes
D	- Descricao
D-	- Descricao separadas por -
D#	- Descricao separado por #
C	- Codigo
CD	- Codigo e Descricao
D;	- Descricao separado por ;
DR	- Descricao concatenado com a Referencia
R	- Referencia
D/	- Descricao separado por /
DP/	- Descricao e Prioridade separado por /
DOP	- Descricao ordenada pela prioridade crescente
*/
c01 CURSOR FOR
SELECT *
from (SELECT a.cd_material,
		     d.ds_marca,
		     c.cd_referencia,
		     substr(CASE WHEN c.cd_referencia='' THEN d.ds_marca  ELSE d.ds_marca || ' (' || c.cd_referencia || ')' END ,1,2000) ds_marca_ref,
		     c.qt_prioridade
	    from material a,
		     material_marca c,
		     marca d,
		     material_marca_estab e
	   where a.cd_material	= c.cd_material
		 and c.nr_sequencia	= d.nr_sequencia
		 and e.cd_material = a.cd_material
		 and e.nr_seq_marca = d.nr_sequencia
		 and e.cd_estabelecimento = cd_estabelecimento_p
		 and coalesce(c.ie_situacao,'A') = 'A'
		 and a.cd_material	= cd_material_p
		 and coalesce(obter_tipo_status_aval_marca(c.nr_seq_status_aval),'X') <> 'R'
	
union
 
	  select a.cd_material,
		     d.ds_marca,
		     c.cd_referencia,
			 substr(CASE WHEN c.cd_referencia='' THEN d.ds_marca  ELSE d.ds_marca || ' (' || c.cd_referencia || ')' END ,1,2000) ds_marca_ref,
			 c.qt_prioridade 
	    from material a,
		     material_marca c,
		     marca d
	   where a.cd_material	= c.cd_material
		 and c.nr_sequencia	= d.nr_sequencia
	     and coalesce(c.ie_situacao,'A') = 'A'
	     and a.cd_material	= cd_material_p
	     and coalesce(obter_tipo_status_aval_marca(c.nr_seq_status_aval),'X') <> 'R'
	     and ((c.cd_estabelecimento = cd_estabelecimento_p and not exists (select 1
													      from material_marca_estab e
														 where e.cd_material = a.cd_material
														   and e.nr_seq_marca = d.nr_Sequencia)) or coalesce(c.cd_estabelecimento::text, '') = '')) alias12
order by	coalesce(qt_prioridade, -9999) desc,
	ds_marca;


BEGIN

if (coalesce(ie_quebra_Linha_p,'N') <> 'S') then
	quebra_w		:= '  ';
end if;

open c01;
loop
fetch c01 into	
	cd_material_w,
	ds_marca_w,
	cd_referencia_w,
	ds_marca_ref_w,
	qt_prioridade_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_opcao_p = 'CD') then
		resultado_w	:= substr(resultado_w || cd_material_w || ' - ' || ds_marca_w || quebra_w,1,4000);
	elsif (ie_opcao_p = 'D') then
		resultado_w	:= substr(resultado_w || ds_marca_w || quebra_w,1,4000);
	elsif (ie_opcao_p = 'D#') then
		if (coalesce(resultado_w::text, '') = '') then
			resultado_w	:= substr(resultado_w || ds_marca_w,1,4000);
		else
			resultado_w	:= substr(resultado_w || '#' || ds_marca_w,1,4000);
		end if;
	elsif (ie_opcao_p = 'DP/') then
		if (coalesce(resultado_w::text, '') = '') then			
			if (coalesce(qt_prioridade_w::text, '') = '') then
				resultado_w	:= substr(resultado_w || ds_marca_w,1,4000);				
			else
				resultado_w	:= substr(resultado_w || ds_marca_w || ' ' || qt_prioridade_w,1,4000);
			end if;			
		else
			if (coalesce(qt_prioridade_w::text, '') = '') then
				resultado_w	:= substr(resultado_w || ' / ' || ds_marca_w,1,4000);
			else
				resultado_w	:= substr(resultado_w || ' / ' || ds_marca_w || ' ' || qt_prioridade_w,1,4000);
			end if;		
		end if;
	elsif (ie_opcao_p = 'D-') then
		if (coalesce(resultado_w::text, '') = '') then
			resultado_w	:= substr(resultado_w || ds_marca_w,1,4000);
		else
			resultado_w	:= substr(resultado_w || ' - ' || ds_marca_w,1,4000);
		end if;
	elsif (ie_opcao_p = 'D;') then
		if (coalesce(resultado_w::text, '') = '') then
			resultado_w	:= substr(resultado_w || ds_marca_w,1,4000);
		else
			resultado_w	:= substr(resultado_w || '; ' || ds_marca_w,1,4000);
		end if;
	elsif (ie_opcao_p = 'D/') then
		if (coalesce(resultado_w::text, '') = '') then
			resultado_w	:= substr(resultado_w || ds_marca_w,1,4000);
		else
			resultado_w	:= substr(resultado_w || '/' || ds_marca_w,1,4000);
		end if;
	elsif (ie_opcao_p = 'DR') then
		if (coalesce(resultado_w::text, '') = '') then
			resultado_w	:= substr(resultado_w || ds_marca_ref_w,1,4000);
		else
			resultado_w	:= substr(resultado_w || '; ' || ds_marca_ref_w,1,4000);
		end if;
	elsif (ie_opcao_p = 'C') then
		resultado_w	:= substr(resultado_w || cd_material_w || quebra_w,1,4000);
	elsif (ie_opcao_p = 'R') then
		resultado_w	:= substr(cd_referencia_w,1,4000);
	elsif (ie_opcao_p = 'DOP') then
		if (qt_prioridade_w IS NOT NULL AND qt_prioridade_w::text <> '') then
			resultado_w	:= substr(ds_marca_w || quebra_w || resultado_w,1,4000);
		else
			resultado_w	:= substr(resultado_w || ds_marca_w || quebra_w,1,4000);
		end if;
	end if;
	end;
end loop;

return resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_marcas_concat_integracao ( cd_material_p bigint, ie_opcao_p text, ie_quebra_linha_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

