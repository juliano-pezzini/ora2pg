-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_get_next_prior_status (ie_current_status_p bigint, ie_prior_p text) RETURNS bigint AS $body$
DECLARE


ie_status_return_w		smallint;
ds_status_param_value_w	funcao_parametro.vl_parametro%type;
ie_comma_index_w		bigint;
ie_status_w				bigint;
ie_prior_w				varchar(1);

function get_max_status(ie_current_status_p	bigint,
						ie_max_status_p		bigint,
						ie_next_status_p	bigint,
						ie_prior_p			text) return bigint AS
;
BEGIN
	if ((ie_next_status_p IS NOT NULL AND ie_next_status_p::text <> '') and (coalesce(ie_max_status_p::text, '') = '' or ie_max_status_p <= ie_next_status_p)) then
		if (ie_prior_p = 'S' and ie_next_status_p < ie_current_status_p) then
			return ie_next_status_p;
		elsif (ie_prior_p <> 'S' and ie_next_status_p > ie_current_status_p) then
			return ie_next_status_p;
		end if;
		return ie_max_status_p;
	end if;
	return null;
end;

begin

	ie_prior_w := coalesce(ie_prior_p, 'N');

	ds_status_param_value_w := obter_parametro_usuario_js(722, 2);

	ie_comma_index_w := position(',' in ds_status_param_value_w);

	if (ie_comma_index_w = 0) then
		begin
			ie_status_return_w := (trim(both ds_status_param_value_w))::numeric;
		exception
		when others then
			ie_status_return_w := null;
		end;
		if (ie_prior_w = 'S' and (ie_status_return_w IS NOT NULL AND ie_status_return_w::text <> '') and ie_status_return_w >= ie_current_status_p) then
			ie_status_return_w := null;
		elsif (ie_prior_w <> 'S' and (ie_status_return_w IS NOT NULL AND ie_status_return_w::text <> '') and ie_status_return_w <= ie_current_status_p) then
			ie_status_return_w := null;
		end if;
	end if;

	while(ie_comma_index_w > 0) loop
		begin
			ie_status_w := (trim(both substr(ds_status_param_value_w, 1, ie_comma_index_w-1)))::numeric;
		exception
		when others then
			ie_status_w := null;
		end;
		ie_status_return_w := get_max_status(ie_current_status_p, ie_status_return_w, ie_status_w, ie_prior_w);
		if (ie_status_return_w >= ie_current_status_p) then
			exit;
		end if;
		ds_status_param_value_w := substr(ds_status_param_value_w, ie_comma_index_w+1, length(ds_status_param_value_w));
		ie_comma_index_w := position(',' in ds_status_param_value_w);
	end loop;

	if (coalesce(ie_status_return_w::text, '') = '' or ie_status_return_w < ie_current_status_p) then
		if ((ds_status_param_value_w IS NOT NULL AND ds_status_param_value_w::text <> '') and length(trim(both ds_status_param_value_w)) > 0) then
			begin
				ie_status_return_w := get_max_status(ie_current_status_p, ie_status_return_w, (trim(both ds_status_param_value_w))::numeric , ie_prior_w);
			exception
			when others then
				ie_status_return_w := null;
			end;
		end if;
	end if;

	if (ie_status_return_w = 99) then
		ie_status_return_w := null;
	end if;
	return ie_status_return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_get_next_prior_status (ie_current_status_p bigint, ie_prior_p text) FROM PUBLIC;

