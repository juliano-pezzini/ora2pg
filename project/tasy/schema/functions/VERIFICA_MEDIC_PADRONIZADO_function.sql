-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verifica_medic_padronizado ( nr_prescricao_p bigint, cd_material_p bigint, ie_padronizado_p text) RETURNS varchar AS $body$
DECLARE


ie_permite_w			varchar(1) := 'S';
ie_padronizado_w		varchar(1);
ie_prescricao_w			varchar(1);
ie_lib_paciente_w		bigint := 0;
cd_pessoa_fisica_w		varchar(10);
ie_prescr_nao_padrao_w		varchar(10);
nr_atendimento_w		bigint;
qt_prescricao_w			bigint;
qt_dias_tratamento_w		bigint;
dt_inicio_validade_w		timestamp;
cd_estabelecimento_w		integer;
nm_usuario_w		varchar(50);
ie_usa_liberacao_w	varchar(50);
			

BEGIN

Select	cd_pessoa_fisica,
	nr_atendimento,
	nm_usuario,
	cd_estabelecimento
into STRICT	cd_pessoa_fisica_w,
	nr_atendimento_w,
	nm_usuario_w,
	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_usa_liberacao_w := obter_param_usuario(47, 1, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_usa_liberacao_w);

Select	count(*)
into STRICT	ie_lib_paciente_w
from	lib_material_paciente
where	cd_material = cd_material_p
and	((ie_usa_liberacao_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
and	cd_pessoa_fisica = cd_pessoa_fisica_w
and	coalesce(dt_suspenso::text, '') = '';

/*select	nvl(max(ie_padronizado),'N'),		Nao e necessario pois ja atualiza a variavel mais abaixo
	nvl(max(ie_prescricao),'N')
into	ie_padronizado_w,
	ie_prescricao_w
from	material
where	cd_material = cd_material_p;*/
if (cd_estabelecimento_w > 0) then
	ie_padronizado_w	:= substr(obter_se_material_padronizado(cd_estabelecimento_w, cd_material_p),1,1);
end if;

ie_prescr_nao_padrao_w	:= OBTER_PRESCR_NAO_PADRONIZADO(nr_atendimento_w);

if (ie_padronizado_w = 'N') and
	((ie_padronizado_p = 'O') or
	 (ie_padronizado_p = 'R' AND ie_prescr_nao_padrao_w = 'N')) and (ie_lib_paciente_w = 0) then
	ie_permite_w := 'N';	
end if;

if (ie_lib_paciente_w = 0) and
	((ie_padronizado_p = 'O') or
	 (ie_padronizado_p = 'R' AND ie_prescr_nao_padrao_w = 'N')) and (ie_padronizado_w = 'N') then
	ie_permite_w := 'N';	
end if;	

if (ie_lib_paciente_w > 0) and
	((ie_padronizado_p = 'O') or
	 (ie_padronizado_p = 'R' AND ie_prescr_nao_padrao_w = 'N')) and (ie_padronizado_w = 'N') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

	Select	coalesce(max(qt_dias_tratamento),0),
		max(coalesce(dt_inicio_validade,dt_atualizacao))
	into STRICT	qt_dias_tratamento_w,
		dt_inicio_validade_w
	from	lib_material_paciente
	where	cd_material 	= cd_material_p
	and	((ie_usa_liberacao_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	coalesce(dt_suspenso::text, '') = '';

	if (qt_dias_tratamento_w > 0) then

		select	count(*)
		into STRICT	qt_prescricao_w
		from	prescr_medica a
		where	a.nr_prescricao = nr_prescricao_p
		and	establishment_timezone_utils.startofday(a.dt_prescricao)	>= establishment_timezone_utils.startofday(dt_inicio_validade_w + qt_dias_tratamento_w)
		and (coalesce(a.dt_liberacao::text, '') = '' or coalesce(a.dt_liberacao_medico::text, '') = '');
	
		if (qt_prescricao_w > 0) then
			ie_permite_w := 'N';		
		end if;
	end if;

end if;

if (ie_lib_paciente_w > 0) and
	((ie_padronizado_p = 'O') or
	 (ie_padronizado_p = 'R' AND ie_prescr_nao_padrao_w = 'N')) and (ie_padronizado_w = 'N') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	
	Select	max(qt_dias_tratamento),
		max(coalesce(dt_inicio_validade,dt_atualizacao))
	into STRICT	qt_dias_tratamento_w,
		dt_inicio_validade_w
	from	lib_material_paciente
	where	cd_material = cd_material_p
	and	((ie_usa_liberacao_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	coalesce(dt_suspenso::text, '') = '';

	select	count(distinct(establishment_timezone_utils.startofday(a.dt_prescricao)))
	into STRICT	qt_prescricao_w
	from	prescr_material b,
		prescr_medica a
	where	a.nr_prescricao = b.nr_prescricao
	and	b.cd_material = cd_material_p
	and	a.nr_atendimento = nr_atendimento_w
	and	establishment_timezone_utils.startofday(a.dt_prescricao)	>= establishment_timezone_utils.startofday(dt_inicio_validade_w)
	and ((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or (a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> ''));
	
	if (qt_prescricao_w >= qt_dias_tratamento_w) then
		ie_permite_w := 'N';		
	end if;

end if;

if (cd_estabelecimento_w > 0) and (ie_permite_w = 'S') then
	ie_prescricao_w	:= substr(obter_se_material_prescricao(cd_estabelecimento_w, cd_material_p),1,1);
end if;

if (ie_prescricao_w = 'N') then
	ie_permite_w := 'N';	
end if;

return	ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verifica_medic_padronizado ( nr_prescricao_p bigint, cd_material_p bigint, ie_padronizado_p text) FROM PUBLIC;

