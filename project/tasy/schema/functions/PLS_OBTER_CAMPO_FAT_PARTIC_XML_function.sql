-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_campo_fat_partic_xml ( nr_seq_campo_p pls_regra_campos_part_xml.nr_seq_campo%type, nr_seq_pagador_p pls_regra_campos_part_xml.nr_seq_pagador%type, ds_valor_atual_p text, nr_seq_grupo_rec_p procedimento.nr_seq_grupo_rec%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, ie_partic_proc_p pls_regra_campos_part_xml.ie_partic_proc%type, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Obter o valor que deverá ser gerado no XML segundo regra cadastrada na função
	"OPS - Faturamento" pasta "Cadastros / Conversões / Regras XML / Participante / Participante"
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
			
ds_retorno_w			varchar(255);
ie_cpf_participante_w		pls_regra_campos_part_xml.ie_cpf_participante%type;

C01 CURSOR FOR  --Cursor de regras
	SELECT	ds_valor
	from	pls_regra_campos_part_xml
	where	nr_seq_campo 		= nr_seq_campo_p
	and	((nr_seq_pagador 	= nr_seq_pagador_p)		or (coalesce(nr_seq_pagador::text, '') = ''))
	and	((nr_seq_grupo_rec 	= nr_seq_grupo_rec_p)		or (coalesce(nr_seq_grupo_rec::text, '') = ''))
	and	((cd_procedimento	= cd_procedimento_p)		or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced::text, '') = '') or (ie_origem_proced = ie_origem_proced_p))
	and (ie_partic_proc		= ie_partic_proc_p		or ie_partic_proc = 'A')
	order by coalesce(nr_seq_pagador, 0),
		coalesce(nr_seq_grupo_rec, 0),
		coalesce(cd_procedimento, 0);
	
C02 CURSOR FOR  --Cursor de regras
	SELECT	CASE WHEN ie_gerar_tag='A' THEN 'S'  ELSE ie_gerar_tag END  ie_gerar_tag,
		nr_seq_partic_padrao
	from	pls_regra_campos_part_xml
	where	nr_seq_campo 		= nr_seq_campo_p
	and (ie_cpf_participante	= ie_cpf_participante_w		or ie_cpf_participante = 'A')
	and	((nr_seq_pagador 	= nr_seq_pagador_p)		or (coalesce(nr_seq_pagador::text, '') = ''))
	and	((nr_seq_grupo_rec 	= nr_seq_grupo_rec_p)		or (coalesce(nr_seq_grupo_rec::text, '') = ''))
	and	((cd_procedimento	= cd_procedimento_p)		or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced::text, '') = '') or (ie_origem_proced = ie_origem_proced_p))
	and (ie_partic_proc		= ie_partic_proc_p		or ie_partic_proc = 'A')
	order by coalesce(nr_seq_pagador, 0),
		coalesce(nr_seq_grupo_rec, 0),
		coalesce(cd_procedimento, 0);
		
BEGIN

if (nr_seq_campo_p != 31) then
	for r_C01_w in C01 loop --Abre cursor de regras
		begin
		--Retorno recebe o valor cadastrado na regra
		ds_retorno_w	:= r_C01_w.ds_valor;
		end;
	end loop;

--identificacaoEquipe - Validar se gera se tiver CPF
elsif (nr_seq_campo_p = 31) then

	ie_cpf_participante_w := 'N';
	if (ds_valor_atual_p IS NOT NULL AND ds_valor_atual_p::text <> '') then
		ie_cpf_participante_w := 'S';
	end if;
	
	if (coalesce(ie_opcao_p::text, '') = '') then
		ds_retorno_w := 'S';
	end if;
	
	for r_C02_w in C02 loop
		begin		
		
		if (ie_opcao_p = 'PP') then
			ds_retorno_w := r_C02_w.nr_seq_partic_padrao;
		else
			--Retorno recebe o valor cadastrado na regra
			ds_retorno_w	:= r_C02_w.ie_gerar_tag;
		end if;
		
		end;
	end loop;
end if;

--Caso o valor seja nulo, ou não possua regra cadastrada para o campo e pagador

--o retorno será o valor original
if (coalesce(ds_retorno_w,'X') = 'X') then
	ds_retorno_w := ds_valor_atual_p;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_campo_fat_partic_xml ( nr_seq_campo_p pls_regra_campos_part_xml.nr_seq_campo%type, nr_seq_pagador_p pls_regra_campos_part_xml.nr_seq_pagador%type, ds_valor_atual_p text, nr_seq_grupo_rec_p procedimento.nr_seq_grupo_rec%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, ie_partic_proc_p pls_regra_campos_part_xml.ie_partic_proc%type, ie_opcao_p text) FROM PUBLIC;

