-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_amenor_ult_ret (nr_seq_retorno_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_interno_conta_p bigint, NR_SEQ_PROPACI_p bigint, NR_SEQ_MATPACI_p bigint, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(50);
vl_glosa_w		double precision;
nr_seq_retorno_w	bigint;
nr_seq_ult_retorno_w	bigint;
vl_amenor_w		double precision;
vl_material_w		double precision;
vl_procedimento_w		double precision;
qt_item_w		integer;
vl_amenor_grg_w		double precision;
qt_retorno_w		bigint;
qt_retorno_item_w	bigint;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
vl_glosa_ww		lote_audit_hist_item.vl_glosa%type;
vl_pago_w		lote_audit_hist_item.vl_pago%type;
vl_cobrado_item_w	procedimento_paciente.vl_procedimento%type;
vl_glosa_aceita_w	lote_audit_hist_item.vl_glosa%type;
vl_saldo_item_w		procedimento_paciente.vl_procedimento%type;



BEGIN

select 	coalesce(max(a.nr_seq_retorno),0)
into STRICT	nr_seq_ult_retorno_w
from 	convenio_retorno b,
	convenio_retorno_item a
where	nr_interno_conta = nr_interno_conta_p
and	b.nr_sequencia 	 = a.nr_seq_retorno
and	b.dt_retorno between coalesce(dt_inicial_p,b.dt_retorno) and trunc(coalesce(dt_final_p,b.dt_retorno)) + 89399/89400;

select 	coalesce(max(nr_seq_retorno),0)
into STRICT	nr_seq_retorno_w
from 	convenio_retorno_item
where	nr_seq_retorno < coalesce(nr_seq_retorno_p,nr_seq_ult_retorno_w)
and	nr_interno_conta = nr_interno_conta_p
and	nr_seq_ult_retorno_w = coalesce(nr_seq_retorno_p,nr_seq_ult_retorno_w);


select 	coalesce(count(*),0)
into STRICT	qt_item_w
from 	convenio_retorno_glosa b,
	convenio_retorno_item a
where	a.nr_sequencia = b.nr_seq_ret_item
and (nr_seq_propaci = nr_seq_propaci_p or nr_seq_matpaci = nr_seq_matpaci_p)
and	a.nr_interno_conta = nr_interno_conta_p;

select	cd_procedimento,
	ie_origem_proced
into STRICT	cd_procedimento_w,
	ie_origem_proced_w
from	procedimento_paciente
where	nr_Sequencia = nr_seq_propaci_p;

select	vl_procedimento
into STRICT	vl_cobrado_item_w
from	procedimento_paciente
where	cd_procedimento = cd_procedimento_w
and	nr_interno_conta = nr_interno_conta_p
and	coalesce(cd_motivo_exc_conta::text, '') = ''
and	nr_sequencia = nr_seq_propaci_p
and	cd_procedimento_w > 0;

--select para descobrir se é o primeiro retorno da conta
select	count(*)
into STRICT	qt_retorno_w
from	convenio_retorno_item a
where	a.nr_interno_conta = nr_interno_conta_p;

select	count(*)
into STRICT	qt_retorno_item_w
from	convenio_retorno_item a,
	convenio_retorno_glosa b
where	b.nr_seq_ret_item	= b.nr_sequencia
and	a.nr_interno_conta 	= nr_interno_conta_p
and	b.nr_seq_propaci	= nr_seq_propaci_p;

if (ie_opcao_p in (0,1)) then

	if (nr_seq_retorno_w > 0) and
	   ((qt_item_w > 0 and ie_opcao_p = 1) or (ie_opcao_p = 0)) then

		ds_retorno_w := 0;

		if (NR_SEQ_PROPACI_p > 0 ) then

			begin

			select	cd_procedimento,
				ie_origem_proced
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w
			from	procedimento_paciente
			where	nr_Sequencia = nr_seq_propaci_p;

			select	sum(vl_procedimento)
			into STRICT	vl_cobrado_item_w
			from	procedimento_paciente
			where	cd_procedimento = cd_procedimento_w
			and	nr_interno_conta = nr_interno_conta_p
			and	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	cd_procedimento_w > 0;

			select	coalesce(sum(a.vl_amenor),0)
			into STRICT	vl_glosa_ww
			from	lote_audit_hist_item a,
				lote_audit_hist_guia b,
				lote_audit_hist c,
				procedimento_paciente p
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_lote_hist     	= c.nr_sequencia
			and	a.nr_seq_propaci	= p.nr_sequencia
			and	p.nr_interno_conta	= b.nr_interno_conta
			and	p.ie_origem_proced	= ie_origem_proced_w
			and	p.cd_procedimento	= cd_procedimento_w
			and	coalesce(p.cd_motivo_exc_conta,0) = 0
			and	b.nr_interno_conta	= nr_interno_conta_p;

			select	coalesce(sum(a.vl_glosa),0)
			into STRICT	vl_glosa_aceita_w
			from	lote_audit_hist_item a,
				lote_audit_hist_guia b,
				lote_audit_hist c,
				procedimento_paciente p
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_lote_hist     	= c.nr_sequencia
			and	a.nr_seq_propaci	= p.nr_sequencia
			and	p.nr_interno_conta	= b.nr_interno_conta
			and	p.ie_origem_proced	= ie_origem_proced_w
			and	p.cd_procedimento	= cd_procedimento_w
			and	coalesce(p.cd_motivo_exc_conta,0) = 0
			and	b.nr_interno_conta	= nr_interno_conta_p;

			vl_pago_w := vl_cobrado_item_w - vl_glosa_aceita_w - vl_glosa_ww;
			vl_saldo_item_w := vl_cobrado_item_w - vl_pago_w;
			ds_retorno_w	:= vl_saldo_item_w;

			select 	a.vl_glosa
			into STRICT	vl_amenor_w
			from 	motivo_glosa c,
				convenio_retorno_glosa a,
				convenio_retorno_item b
			where	a.nr_seq_ret_item = b.nr_sequencia
			and	c.cd_motivo_glosa = a.cd_motivo_glosa
			and	a.NR_SEQ_PROPACI  = NR_SEQ_PROPACI_p
			and	b.nr_seq_retorno  = nr_seq_retorno_w
			and	coalesce(a.ie_acao_glosa,c.ie_acao_glosa) = 'R'
			and	b.nr_interno_conta = nr_interno_conta_p;

			exception
				when others then
				vl_amenor_w := 0;
			end;

			if (vl_amenor_w > 0 and ds_retorno_w = 0)	then
				ds_retorno_w := vl_amenor_w;
			end if;

			select 	coalesce(sum(a.vl_glosa),0),
				coalesce(max(d.vl_procedimento),0)
			into STRICT	vl_glosa_w,
				vl_procedimento_w
			FROM procedimento_paciente d, convenio_retorno_item b, convenio_retorno_glosa a
LEFT OUTER JOIN motivo_glosa c ON (a.cd_motivo_glosa = c.cd_motivo_glosa)
WHERE a.nr_seq_ret_item = b.nr_sequencia  and d.nr_sequencia	  = a.NR_SEQ_PROPACI and a.NR_SEQ_PROPACI  = NR_SEQ_PROPACI_p --			and	b.nr_seq_retorno  = nr_seq_retorno_w
  and coalesce(a.ie_acao_glosa,c.ie_acao_glosa) <> 'R' and b.nr_interno_conta = nr_interno_conta_p;

			if (vl_glosa_w > 0) and (vl_glosa_w >= vl_procedimento_w) and (vl_amenor_w = 0) then

				ds_retorno_w := 0;
			end if;

		else
			begin

			select 	a.vl_glosa
			into STRICT	vl_amenor_w
			from 	motivo_glosa c,
				convenio_retorno_glosa a,
				convenio_retorno_item b
			where	a.nr_seq_ret_item = b.nr_sequencia
			and	c.cd_motivo_glosa = a.cd_motivo_glosa
			and 	a.NR_SEQ_MATPACI  = NR_SEQ_MATPACI_p
			and	b.nr_seq_retorno  <  coalesce(nr_seq_retorno_p,nr_seq_ult_retorno_w)
			and	coalesce(a.ie_acao_glosa,c.ie_acao_glosa) = 'R'
			and	b.nr_interno_conta = nr_interno_conta_p;
			exception
				when others then
				vl_amenor_w := 0;
			end;

			if (vl_amenor_w > 0)	then
				ds_retorno_w := vl_amenor_w;
			end if;

			select 	coalesce(sum(a.vl_glosa),0),
				coalesce(max(d.vl_material),0)
			into STRICT	vl_glosa_w,
				vl_material_w
			FROM material_atend_paciente d, convenio_retorno_item b, convenio_retorno_glosa a
LEFT OUTER JOIN motivo_glosa c ON (a.cd_motivo_glosa = c.cd_motivo_glosa)
WHERE a.nr_seq_ret_item = b.nr_sequencia  and d.nr_sequencia	  = a.NR_SEQ_matpaci and a.NR_SEQ_matpaci  = NR_SEQ_MATPACI_p --			and	b.nr_seq_retorno  <  nvl(nr_seq_retorno_p,nr_seq_ult_retorno_w)
  and coalesce(a.ie_acao_glosa,c.ie_acao_glosa) <> 'R' and b.nr_interno_conta = nr_interno_conta_p;

			if (vl_glosa_w > 0)  and (vl_glosa_w >= vl_material_w) and (vl_amenor_w = 0) then
				ds_retorno_w := 0;
			end if;


		end if;

	else
		if (qt_retorno_w = 1) or (nr_seq_retorno_w = 0) or --Se o item nao esta nos itens glosados e for o primeiro retorno retorna o valor do item, pois ainda nao teve glosas, caso contrario se o item não esta nos itens glosados e a conta esta em mais de um retorno significa que o item foi pago integralmente
			(qt_retorno_item_w = 0) then --Se a conta tem mais de um retorno, porém nao foi lançado nos retornos anteriores.
			ds_retorno_w := vl_cobrado_item_w;
		else
			ds_retorno_w := 0;
		end if;

	end if;

	/*lhalves em 17/12/2013 OS 640602
	Busca os valores da GRG, pois estes teem prioridade sobre o retorno*/
	if (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '') then

		select	sum(a.vl_amenor)
		into STRICT	vl_amenor_grg_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b,
			lote_audit_hist c
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_seq_lote_hist     	= c.nr_sequencia
		and	a.nr_seq_propaci	= nr_seq_propaci_p
		and	b.nr_interno_conta	= nr_interno_conta_p
		and	(c.dt_fechamento IS NOT NULL AND c.dt_fechamento::text <> '')
		and	b.nr_sequencia		=
						(SELECT	max(x.nr_sequencia)
						from	lote_audit_hist_guia x,
							lote_audit_hist y
						where	x.nr_seq_lote_hist	= y.nr_sequencia
						and	x.nr_interno_conta	= nr_interno_conta_p
						and	(y.dt_fechamento IS NOT NULL AND y.dt_fechamento::text <> ''));

		ds_retorno_w	:= coalesce(vl_amenor_grg_w,ds_retorno_w);

	elsif (nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') then

		select	sum(a.vl_amenor)
		into STRICT	vl_amenor_grg_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b,
			lote_audit_hist c
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_seq_lote_hist     	= c.nr_sequencia
		and	a.nr_seq_matpaci	= nr_seq_matpaci_p
		and	b.nr_interno_conta	= nr_interno_conta_p
		and	(c.dt_fechamento IS NOT NULL AND c.dt_fechamento::text <> '')
		and	b.nr_sequencia		=
						(SELECT	max(x.nr_sequencia)
						from	lote_audit_hist_guia x,
							lote_audit_hist y
						where	x.nr_seq_lote_hist	= y.nr_sequencia
						and	x.nr_interno_conta	= nr_interno_conta_p
						and	(y.dt_fechamento IS NOT NULL AND y.dt_fechamento::text <> ''));

		ds_retorno_w	:= coalesce(vl_amenor_grg_w,ds_retorno_w);

	end if;

end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_amenor_ult_ret (nr_seq_retorno_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_interno_conta_p bigint, NR_SEQ_PROPACI_p bigint, NR_SEQ_MATPACI_p bigint, ie_opcao_p bigint) FROM PUBLIC;

