-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_cpoe_jp (ie_grupo_cpoe_p text, nr_seq_cpoe_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(1)	:= 'T'; -- by default returns as temporarily saved.
qt_retorno_w	bigint	:= 0;
qt_cirurgia_espera_w agenda_lista_espera.nr_seq_exame%type := 0;
qt_cirurgia_executada_w agenda_paciente.nr_cirurgia%type := 0;
qt_bacteria_w   cpoe_procedimento.nr_seq_rotina%type := 0;
qt_anatomo_w    cpoe_anatomia_patologica.nr_sequencia%type := 0;
dt_anatomo_lib_w    cpoe_anatomia_patologica.dt_liberacao%type;
qt_medicine_accepted_w    cpoe_material.nr_seq_mat_protocolo%type := 0;
ie_anatomo_w    cpoe_anatomia_patologica.nr_sequencia%type := 0;
ie_status_dialise_w    hd_prescricao.ie_tipo_dialise%type;
ds_blood_status cpoe_hemoterapia.ie_adep%type := 'X';
ds_nut_guidance_status nut_orientacao_list.ie_status%type := 'T';
qt_retorno_nut_guidance_w   nut_orientacao_list.nr_seq_nut_guidance%type := 0;
nr_status_w     prescr_procedimento.ie_status_atend%type   := 0;
qt_retorno_dialise_executed_w   paciente_tratamento.nr_sequencia%type	:= 0;

/*
======================== Input parameters ========================
ie_grupo_cpoe_p	->	dom 7768
						N	- Nutrition
						M	- Infusions and Medicines
						P	- Exams and Procedures
						G	- Gas Therapy
						R	- Interventions and recommendations
						H	- Blood Therapy
						D	- Dialysis
						MA	- Materials
						AP	- Pathologic anatomy

nr_seq_cpoe_p	-> field NR_SEQUENCIA from table CPOE_...
==================================================================

============================= Result =============================
T - Temporarily Saved (default)
R - Requested
A - Accepted by department
E - Executed
L - Reported (exams)
C - withdrawn (withdrawn after order confirmation)
==================================================================
*/
BEGIN

	if (ie_grupo_cpoe_p = 'N') then -- Nutrition
		select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_dieta
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then
			ds_retorno_w := 'R';
		end if;

	elsif (ie_grupo_cpoe_p = 'M') then -- Infusions and Medicines
		select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_material
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then

            select coalesce(count(1), 0) 
            into STRICT qt_medicine_accepted_w 
            from CPOE_MATERIAL cm 
            inner join PRESCR_MATERIAL pm on pm.NR_SEQ_MAT_CPOE = cm.NR_SEQUENCIA
            inner join material_atend_paciente map on map.nr_sequencia_prescricao = pm.nr_sequencia 
            inner join ap_lote al on al.nr_sequencia = map.nr_seq_lote_ap
            inner join PRESCR_MAT_HOR pmh on pmh.NR_PRESCRICAO = pm.nr_prescricao and pmh.CD_MATERIAL = cm.CD_MATERIAL
            where cm.NR_SEQUENCIA = nr_seq_cpoe_p
            and map.nr_prescricao = pm.NR_PRESCRICAO
            and (al.dt_atend_farmacia IS NOT NULL AND al.dt_atend_farmacia::text <> '')
            and coalesce(cm.DT_SUSPENSAO::text, '') = ''
            and cm.CD_MATERIAL = map.CD_MATERIAL
            and coalesce(pmh.DT_FIM_HORARIO::text, '') = '' 
            and (pmh.dt_lib_horario IS NOT NULL AND pmh.dt_lib_horario::text <> '');

            if (qt_medicine_accepted_w > 0) then 
                ds_retorno_w := 'A';
            else
                ds_retorno_w := 'R';

            end if;

		end if;
		
	elsif (ie_grupo_cpoe_p = 'P') then -- Exams and Procedures
        select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_procedimento
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then

			ds_retorno_w := 'R'; -- Requested
		end if;
		
		select 	max(a.ie_status_atend)
        	into STRICT 	nr_status_w
        	from 	prescr_procedimento a,
                	exame_lab_result_item b,
                	exame_lab_resultado c
        	where 	a.nr_seq_proc_cpoe = nr_seq_cpoe_p
        	and     a.nr_sequencia = b.nr_seq_prescr
        	and		c.nr_seq_resultado = b.nr_seq_resultado
        	and		a.nr_prescricao = c.nr_prescricao
        	and		(b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '');

        	if (nr_status_w = 40) then
            		ds_retorno_w := 'L'; -- Reported
        	end if;

		/*
		CARESTREAM - BEGIN
		Status logic implementation for radiology exams interfaced with Carestream Interface
		*/
		
		select  coalesce(max(1),0)
		into STRICT	qt_retorno_w
		from 	prescr_procedimento_compl a,
				prescr_procedimento b,
				cpoe_procedimento c,
				ris_exam_exec_info d
		where	b.nr_seq_proc_compl 	= a.nr_sequencia
		and		b.nr_seq_proc_cpoe		= c.nr_sequencia
		and		d.nr_prescricao			= b.nr_prescricao 
		and		d.nr_seq_order			= b.nr_sequencia
		and		c.nr_sequencia	 		= nr_seq_cpoe_p;
		
		if (qt_retorno_w > 0) then
		
			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia 			= nr_seq_cpoe_p
			and		a.ie_status_report		= 7; -- Received
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'A'; -- Accepted by department
			end if;
			
			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia	 		= nr_seq_cpoe_p
			and		a.ie_status_report		= 8; -- Executed
			
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'E'; -- Executed
			end if;
			

			-- Status Reported: Based on JRS 504 - This status will not be used			
			
			
		end if;
		/*
		CARESTREAM - END
		Status logic implementation for radiology exams interfaced with Carestream Interface
		*/
		
		/*
		CARESTREAM - BEGIN
		Status logic implementation for physiology exams interfaced with Carestream Interface
		*/
		
		select  coalesce(max(1),0)
		into STRICT	qt_retorno_w
		from 	prescr_procedimento_compl a,
				prescr_procedimento b,
				cpoe_procedimento c,
				phy_exam_exec_info d
		where	b.nr_seq_proc_compl 	= a.nr_sequencia
		and		b.nr_seq_proc_cpoe			= c.nr_sequencia
		and		d.nr_prescricao			= b.nr_prescricao
		and		d.nr_seq_order			= b.nr_sequencia
		and		c.nr_sequencia	 		= nr_seq_cpoe_p;
		
		if (qt_retorno_w > 0) then
		
			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia 			= nr_seq_cpoe_p
			and		a.ie_status_report		= 7; -- Received
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'A'; -- Accepted by department
			end if;
			
			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia	 		= nr_seq_cpoe_p
			and		a.ie_status_report		= 8; -- Executed
			
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'E'; -- Executed
			end if;
			
			-- Status Reported: Based on JRS 504 - This status will not be used			
			
			
		end if;
		
		/*
		CARESTREAM - END
		Status logic implementation  for physiology exams interfaced with Carestream Interface
		*/
		/*
		ITECH - BEGIN
		Status logic implementation for pathologic exams interfaced with ITECH Interface
		*/
		select  coalesce(max(1),0)
		into STRICT	qt_retorno_w
		from 	prescr_procedimento_compl a,
				prescr_procedimento b,
				cpoe_procedimento c
		where	b.nr_seq_proc_compl 	= a.nr_sequencia
		and		b.nr_seq_proc_cpoe		= c.nr_sequencia
		and		(b.nr_seq_lab_ext IS NOT NULL AND b.nr_seq_lab_ext::text <> '')
		and		c.nr_sequencia	 		= nr_seq_cpoe_p;

		if (qt_retorno_w > 0) then

			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia 			= nr_seq_cpoe_p
			and		a.ie_status_report		in (2,3); -- Partially received, Received all
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'A'; -- Accepted by department
			end if;

		end if;

		select  coalesce(max(1),0)
		into STRICT	qt_retorno_w
		from 	prescr_procedimento_compl a,
				prescr_procedimento b,
				cpoe_procedimento c,
				result_laboratorio d
		where	b.nr_seq_proc_compl 	= a.nr_sequencia
		and		b.nr_seq_proc_cpoe		= c.nr_sequencia
		and		d.nr_prescricao			= b.nr_prescricao
		and		d.nr_seq_prescricao		= b.nr_sequencia
		and		c.nr_sequencia	 		= nr_seq_cpoe_p;

		if (qt_retorno_w > 0) then

			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia 			= nr_seq_cpoe_p
			and		a.ie_status_report		in (5,4,6); -- Completed, Urgency, Intermediate
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'L'; -- Reported
			end if;

		end if;

		/*
		ITECH - END
		Status logic implementation for pathologic exams interfaced with ITECH Interface
		*/
        select coalesce(max(1), 0)
        into STRICT qt_cirurgia_espera_w
        from agenda_lista_espera
        where NR_SEQ_CPOE_PROCEDIMENTO = nr_seq_cpoe_p
        and IE_STATUS_ESPERA = 'E';

        if (qt_cirurgia_espera_w > 0) then
            ds_retorno_w := 'A';
        end if;
		
        select coalesce(max(1), 0)
        into STRICT qt_cirurgia_executada_w
        from agenda_lista_espera ale
        inner join agenda_paciente ap on ap.nr_seq_lista = ale.nr_sequencia
        inner join cirurgia c on c.nr_cirurgia = ap.nr_cirurgia
        where ale.nr_seq_cpoe_procedimento = nr_seq_cpoe_p
        and (ap.nr_cirurgia IS NOT NULL AND ap.nr_cirurgia::text <> '')
        and (c.dt_inicio_real IS NOT NULL AND c.dt_inicio_real::text <> '')
        and (c.dt_termino IS NOT NULL AND c.dt_termino::text <> '');

        if (qt_cirurgia_executada_w > 0) then
            ds_retorno_w := 'E';
        end if;

        select coalesce(max(1),0) 
        into STRICT qt_bacteria_w 
        from CPOE_PROCEDIMENTO cp
        inner join CPOE_ORDER_UNIT cou on cou.NR_SEQUENCIA = cp.NR_SEQ_CPOE_ORDER_UNIT 
        inner join CPOE_TIPO_PEDIDO ctp on ctp.NR_SEQUENCIA = cou.NR_SEQ_CPOE_TIPO_PEDIDO
        inner join prescr_procedimento pp on pp.NR_SEQ_PROC_CPOE = cp.NR_SEQUENCIA 
        where cp.NR_SEQUENCIA = nr_seq_cpoe_p
        and ctp.NR_SEQ_SUB_GRP = 'B'
        and pp.IE_STATUS_EXECUCAO <> 10;

        if (qt_bacteria_w > 0) then
            ds_retorno_w := 'A';
        end if;

	elsif (ie_grupo_cpoe_p = 'G') then -- Gas Therapy
	
		select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_gasoterapia
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then
			ds_retorno_w := 'R';
		end if;

	elsif (ie_grupo_cpoe_p = 'R') then -- Interventions and recommendations
		select	coalesce(count(*), 0)
		into STRICT	qt_retorno_w
		from	cpoe_recomendacao
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then

            select 
                coalesce(count(*), 0) 
            into STRICT qt_retorno_nut_guidance_w 
            from nut_orientacao_list nol 
            where NR_SEQ_RECOMENDACAO = nr_seq_cpoe_p;

            if (qt_retorno_nut_guidance_w > 0) then 
            
                select 
                    max(nol.ie_status) 
                into STRICT ds_nut_guidance_status 
                from nut_orientacao_list nol 
                where NR_SEQ_RECOMENDACAO = nr_seq_cpoe_p;

                if (ds_nut_guidance_status = 'A') then 
                    ds_retorno_w := 'A';
                elsif (ds_nut_guidance_status = 'F') then
                    ds_retorno_w := 'E';
                else
                    ds_retorno_w := 'R';
                end if;

            end if;
            
		end if;

	elsif (ie_grupo_cpoe_p = 'H') then -- Blood Therapy
		select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_hemoterapia
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		ds_blood_status := get_blood_product_status(nr_seq_cpoe_p);

		if (qt_retorno_w > 0) then

			if (coalesce(ds_blood_status,'X') = 'L') then
			ds_retorno_w := 'A';
			else
			ds_retorno_w := 'R';
			end if;

		end if;

	elsif (ie_grupo_cpoe_p = 'D') then -- Dialysis
		select	coalesce(count(*), 0)
		into STRICT	qt_retorno_w
		from	cpoe_dialise
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then
			
            select
                coalesce(max(obter_ie_prescricao_conferida(hp.NR_PRESCRICAO)), 'N') ie_aceito 
            into STRICT ie_status_dialise_w 
            from hd_prescricao hp 
            where NR_SEQ_DIALISE_CPOE = nr_seq_cpoe_p;

            if (ie_status_dialise_w = 'S') then  
            
                select 
                    coalesce(count(*), 0) 
                    into STRICT	qt_retorno_dialise_executed_w 
                from 
                    CPOE_DIALISE cd 
                    inner join PACIENTE_TRATAMENTO pt on pt.NR_ATEND_ORIGEM = cd.NR_ATENDIMENTO 
                where 
                    cd.nr_sequencia = nr_seq_cpoe_p 
                    and clock_timestamp() > DT_FIM;

                if (qt_retorno_dialise_executed_w > 0) then
                
                    ds_retorno_w := 'E';

                else 
                
                    ds_retorno_w := 'A';

                end if;

            else 
            
                ds_retorno_w := 'R';

            end if;
            
		end if;

	elsif (ie_grupo_cpoe_p = 'MA') then -- Materials
		select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_material
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_retorno_w > 0) then
			ds_retorno_w := 'R';
		end if;

	elsif (ie_grupo_cpoe_p = 'AP') then -- Pathologic anatomy
		select	count(*)
		into STRICT	qt_retorno_w
		from	cpoe_anatomia_patologica
		where	nr_sequencia = nr_seq_cpoe_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		/*
		ITECH - BEGIN
		Status logic implementation for pathologic exams interfaced with ITECH Interface
		*/
		select  coalesce(max(1),0)
		into STRICT	qt_retorno_w
		from 	prescr_procedimento_compl a,
				prescr_procedimento b,
				cpoe_procedimento c
		where	b.nr_seq_proc_compl 	= a.nr_sequencia
		and		b.nr_seq_proc_cpoe		= c.nr_sequencia
		and		(b.nr_seq_lab_ext IS NOT NULL AND b.nr_seq_lab_ext::text <> '')
		and		c.nr_sequencia	 		= nr_seq_cpoe_p;

		if (qt_retorno_w > 0) then

			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia 			= nr_seq_cpoe_p
			and		a.ie_status_report		in (2,3); -- Partially received, Received all
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'A'; -- Accepted by department
			end if;

		end if;

		select  coalesce(max(1),0)
		into STRICT	qt_retorno_w
		from 	prescr_procedimento_compl a,
				prescr_procedimento b,
				cpoe_procedimento c,
				result_laboratorio d
		where	b.nr_seq_proc_compl 	= a.nr_sequencia
		and		b.nr_seq_proc_cpoe		= c.nr_sequencia
		and		d.nr_prescricao			= b.nr_prescricao
		and		d.nr_seq_prescricao		= b.nr_sequencia
		and		c.nr_sequencia	 		= nr_seq_cpoe_p;

		if (qt_retorno_w > 0) then

			select  coalesce(max(1),0)
			into STRICT	qt_retorno_w
			from 	prescr_procedimento_compl a,
					prescr_procedimento b,
					cpoe_procedimento c
			where	b.nr_seq_proc_compl 	= a.nr_sequencia
			and		b.nr_seq_proc_cpoe		= c.nr_sequencia
			and		c.nr_sequencia 			= nr_seq_cpoe_p
			and		a.ie_status_report		in (5,4,6); -- Completed, Urgency, Intermediate
			if (qt_retorno_w > 0) then
				ds_retorno_w := 'L'; -- Reported
			end if;


		end if;
                 
		/*
		ITECH - END
		Status logic implementation for pathologic exams interfaced with ITECH Interface
		*/
        
        select coalesce(count(1),0) 
        into STRICT qt_anatomo_w 
        from CPOE_ANATOMIA_PATOLOGICA cap
        inner join CPOE_ORDER_UNIT cou on cou.NR_SEQUENCIA = cap.NR_SEQ_CPOE_ORDER_UNIT 
        inner join CPOE_TIPO_PEDIDO ctp on ctp.NR_SEQUENCIA = cou.NR_SEQ_CPOE_TIPO_PEDIDO
        inner join prescr_procedimento pp on pp.NR_SEQ_PROC_CPOE = cap.NR_SEQUENCIA 
        where cap.NR_SEQUENCIA = nr_seq_cpoe_p
        and ctp.NR_SEQ_CPOE_GROUP = 'AP';

        if (qt_anatomo_w > 0) then 
        
            select	count(*)
            into STRICT	qt_retorno_w
            from	cpoe_anatomia_patologica
            where	nr_sequencia = nr_seq_cpoe_p
            and		(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

            if (qt_retorno_w > 0) then 
            
                ds_retorno_w := 'C';

            else 
        
                select coalesce(max(pp.IE_STATUS_EXECUCAO),0) 
                into STRICT ie_anatomo_w 
                from CPOE_ANATOMIA_PATOLOGICA cap
                inner join CPOE_ORDER_UNIT cou on cou.NR_SEQUENCIA = cap.NR_SEQ_CPOE_ORDER_UNIT 
                inner join CPOE_TIPO_PEDIDO ctp on ctp.NR_SEQUENCIA = cou.NR_SEQ_CPOE_TIPO_PEDIDO
                inner join prescr_procedimento pp on pp.NR_SEQ_PROC_CPOE = cap.NR_SEQUENCIA 
                where cap.NR_SEQUENCIA = nr_seq_cpoe_p
                and ctp.NR_SEQ_CPOE_GROUP = 'AP';

                if (ie_anatomo_w <> 10 AND ie_anatomo_w <> 20) then
                    
                    ds_retorno_w := 'A';

                elsif (ie_anatomo_w = 10) then
                    
                    select max(cap.DT_LIBERACAO) 
                    into STRICT dt_anatomo_lib_w 
                    from CPOE_ANATOMIA_PATOLOGICA cap
                    inner join CPOE_ORDER_UNIT cou on cou.NR_SEQUENCIA = cap.NR_SEQ_CPOE_ORDER_UNIT 
                    inner join CPOE_TIPO_PEDIDO ctp on ctp.NR_SEQUENCIA = cou.NR_SEQ_CPOE_TIPO_PEDIDO
                    inner join prescr_procedimento pp on pp.NR_SEQ_PROC_CPOE = cap.NR_SEQUENCIA 
                    where cap.NR_SEQUENCIA = nr_seq_cpoe_p
                    and ctp.NR_SEQ_CPOE_GROUP = 'AP';

                    if (coalesce(dt_anatomo_lib_w::text, '') = '') then 
                    
                        ds_retorno_w := 'T';

                    else 
                    
                        ds_retorno_w := 'R';

                    end if;
                    
                elsif (ie_anatomo_w = 20) then
                
                    ds_retorno_w := 'E';

                else 
                    
                    ds_retorno_w := 'T';

                end if;

            end if;

        end if;

	end if;

	return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_cpoe_jp (ie_grupo_cpoe_p text, nr_seq_cpoe_p bigint) FROM PUBLIC;

