-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION w_ctb_obter_contrapartida_m ( nr_seq_movimento_p bigint, nr_lote_contabil_p bigint, ie_contrapartida_p text, ie_debito_credito_p text) RETURNS varchar AS $body$
DECLARE


cd_classif_contrapartida_w			varchar(40);
cd_conta_credito_w			varchar(20);
cd_conta_debito_w				varchar(20);
cd_contrapartida_w				varchar(20);
ds_contrapartida_w				varchar(4000);
ie_apres_contrapartida_w			varchar(15)	:= 'CL';
nr_seq_agrupamento_w			bigint;
nr_seq_movimento_w			bigint;
ie_existe_w				bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_conta_credito,
	coalesce(a.cd_classif_credito, b.cd_classificacao)
from	conta_contabil b,
	ctb_movimento a
where	a.cd_conta_credito		= b.cd_conta_contabil
and	a.nr_lote_contabil		= nr_lote_contabil_p
and	coalesce(a.nr_seq_agrupamento,0)	= nr_seq_agrupamento_w
and	a.nr_sequencia		<> nr_seq_movimento_p
and	cd_conta_debito_w		<> '0'
and	cd_conta_credito_w	= '0'

union all

select	a.nr_sequencia,
	a.cd_conta_debito,
	coalesce(a.cd_classif_debito, b.cd_classificacao)
from	conta_contabil b,
	ctb_movimento a
where	a.cd_conta_debito		= b.cd_conta_contabil
and	a.nr_lote_contabil		= nr_lote_contabil_p
and	coalesce(a.nr_seq_agrupamento,0)	= nr_seq_agrupamento_w
and	a.nr_sequencia		<> nr_seq_movimento_p
and	cd_conta_credito_w	<> '0'
and	cd_conta_debito_w		= '0'
order by 1;

-- Cursor feito para aqueles lotes de digitação cujos movimentos possuam crédito e débito.
--Situação identificada na OS 584762.
c02 CURSOR FOR
SELECT	a.nr_sequencia,
	CASE WHEN ie_debito_credito_p='C' THEN a.cd_conta_debito  ELSE a.cd_conta_credito END ,
	coalesce(CASE WHEN ie_debito_credito_p='C' THEN a.cd_classif_debito  ELSE a.cd_classif_credito END ,b.cd_classificacao)
from	conta_contabil b,
	ctb_movimento a
where	CASE WHEN ie_debito_credito_p='C' THEN a.cd_conta_debito  ELSE a.cd_conta_credito END 		= b.cd_conta_contabil
and	a.nr_lote_contabil		= nr_lote_contabil_p
and	coalesce(a.nr_seq_agrupamento,0)	= nr_seq_agrupamento_w
and	a.nr_sequencia		= nr_seq_movimento_p
and	cd_conta_credito_w	<> '0'
and	cd_conta_debito_w	<> '0'
order by 1;


BEGIN

if (ie_contrapartida_p = 'TCA') then
	ie_apres_contrapartida_w	:= 'CL';
elsif (ie_contrapartida_p = 'TCR') then
	ie_apres_contrapartida_w	:= 'CT';
end if;

select	coalesce(max(nr_seq_agrupamento),0),
	coalesce(max(cd_conta_credito),'0'),
	coalesce(max(cd_conta_debito),'0')
into STRICT	nr_seq_agrupamento_w,
	cd_conta_credito_w,
	cd_conta_debito_w
from	ctb_movimento
where	nr_sequencia		= nr_seq_movimento_p;

open C01;
loop
fetch C01 into
	nr_seq_movimento_w,
	cd_contrapartida_w,
	cd_classif_contrapartida_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_apres_contrapartida_w = 'CL') then
		ie_existe_w := position(cd_classif_contrapartida_w in ds_contrapartida_w);
		if (coalesce(ds_contrapartida_w,'X') = 'X') then
			ds_contrapartida_w	:= cd_classif_contrapartida_w;
		else
			if (ie_existe_w = 0) then
					ds_contrapartida_w	:= substr(ds_contrapartida_w || chr(13) || chr(10) || cd_classif_contrapartida_w,1,4000);
			end if;
		end if;

	elsif (ie_apres_contrapartida_w = 'CT') then
		ie_existe_w := position(cd_contrapartida_w in ds_contrapartida_w);
		if (coalesce(ds_contrapartida_w,'X') = 'X') then
			ds_contrapartida_w	:= cd_contrapartida_w;
		else
			if (ie_existe_w = 0) then
					ds_contrapartida_w	:= substr(ds_contrapartida_w || chr(13) || chr(10) || cd_contrapartida_w,1,4000);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

if (coalesce(ds_contrapartida_w,'X') = 'X') then
	open c02;
	loop
	fetch c02 into
		nr_seq_movimento_w,
		cd_contrapartida_w,
		cd_classif_contrapartida_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (ie_apres_contrapartida_w = 'CL') then
			ie_existe_w := position(cd_classif_contrapartida_w in ds_contrapartida_w);
			if (coalesce(ds_contrapartida_w,'X') = 'X') then
				ds_contrapartida_w	:= cd_classif_contrapartida_w;
			else
				if (ie_existe_w = 0) then
						ds_contrapartida_w	:= substr(ds_contrapartida_w || chr(13) || chr(10) || cd_classif_contrapartida_w,1,4000);
				end if;
			end if;

		elsif (ie_apres_contrapartida_w = 'CT') then
			ie_existe_w := position(cd_contrapartida_w in ds_contrapartida_w);
			if (coalesce(ds_contrapartida_w,'X') = 'X') then
				ds_contrapartida_w	:= cd_contrapartida_w;
			else
				if (ie_existe_w = 0) then
						ds_contrapartida_w	:= substr(ds_contrapartida_w || chr(13) || chr(10) || cd_contrapartida_w,1,4000);
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;

return	ds_contrapartida_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION w_ctb_obter_contrapartida_m ( nr_seq_movimento_p bigint, nr_lote_contabil_p bigint, ie_contrapartida_p text, ie_debito_credito_p text) FROM PUBLIC;

