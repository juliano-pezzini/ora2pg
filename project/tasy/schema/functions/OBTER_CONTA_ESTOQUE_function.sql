-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_conta_estoque ( CD_ESTABELECIMENTO_P bigint, CD_MATERIAL_P bigint, IE_TIPO_CONTA_P bigint, CD_SETOR_ATENDIMENTO_P bigint, IE_CLASSIF_CONVENIO_P text, IE_TIPO_ATENDIMENTO_P bigint, ie_tipo_convenio_p bigint, CD_CONVENIO_P bigint, cd_local_estoque_P bigint, DT_VIGENCIA_P timestamp) RETURNS varchar AS $body$
DECLARE


/* -------------- Tipo de Conta -------
	1 - Receita
	2 - Estoque
	3 - Passagem Direta
*/
CD_CLASSE_MATERIAL_W      	integer  := 0;
CD_SUBGRUPO_MATERIAL_W    	smallint  := 0;
CD_GRUPO_MATERIAL_W       	smallint  := 0;
CD_CONTA_CONTABIL_W           varchar(20);
CD_CONTA_RECEITA_W        	varchar(40);
CD_CONTA_ESTOQUE_W        	varchar(40);
CD_CONTA_PASSAG_DIRETA_W  	varchar(40);
IE_TIPO_SELECAO_W			varchar(1);
cd_empresa_w			smallint;
ie_considera_dt_vig_w		varchar(1);

C001 CURSOR FOR
/* Obter contas do material  */

SELECT	cd_conta_receita,
	cd_conta_estoque,
	cd_conta_passag_direta
from 	parametros_conta_contabil
where	cd_empresa					= cd_empresa_w
and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
and	coalesce(cd_material,cd_material_p) 			= cd_material_p
and	coalesce(cd_grupo_material,cd_grupo_material_w)	= cd_grupo_material_w
and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)= cd_subgrupo_material_w
and	coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
and 	coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0))	 = coalesce(ie_tipo_atendimento_p,0)
and	coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0)) = coalesce(cd_setor_atendimento_p,0)
and	coalesce(ie_classif_convenio,coalesce(ie_classif_convenio_p,0))	 = coalesce(ie_classif_convenio_p,0)
and	coalesce(cd_local_estoque,coalesce(cd_local_estoque_p,0))	= coalesce(cd_local_estoque_p,0)
and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_p,0))	= coalesce(ie_tipo_convenio_p,0)
and	coalesce(cd_convenio,coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0)
and	((IE_TIPO_CONTA_P = 1 AND cd_conta_receita IS NOT NULL AND cd_conta_receita::text <> '') or
	(IE_TIPO_CONTA_P = 2 AND cd_conta_estoque IS NOT NULL AND cd_conta_estoque::text <> '') or
	(IE_TIPO_CONTA_P = 3 AND cd_conta_passag_direta IS NOT NULL AND cd_conta_passag_direta::text <> ''))
and	coalesce(cd_procedimento::text, '') = ''
and	coalesce(cd_grupo_proced::text, '') = ''
and	coalesce(cd_especial_proced::text, '') = ''
and	coalesce(cd_area_proced::text, '') = ''
and	coalesce(nr_seq_forma_org::text, '') = ''
and	coalesce(nr_seq_grupo::text, '') = ''
and	coalesce(nr_seq_subgrupo::text, '') = ''
and (coalesce(dt_inicio_vigencia, dt_vigencia_p) <= dt_vigencia_p and coalesce(dt_fim_vigencia, dt_vigencia_p) >= dt_vigencia_p)
order by	CASE WHEN ie_considera_dt_vig_w='S' THEN dt_inicio_vigencia  ELSE null END ,
		coalesce(cd_convenio,0),
		coalesce(ie_classif_convenio,0),
		coalesce(cd_setor_atendimento,0),
		coalesce(ie_tipo_atendimento,0),
		coalesce(cd_material,0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material,0),
		coalesce(cd_grupo_material,0),
		coalesce(cd_local_estoque,0);


BEGIN
ie_considera_dt_vig_w := coalesce(obter_valor_param_usuario(7050, 20, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo), 'S');

select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_p;


/*      Obter Estrutura Material */

begin
select	cd_classe_material,
		cd_subgrupo_material,
		cd_grupo_material
into STRICT		cd_classe_material_w,
		cd_subgrupo_material_w,
		cd_grupo_material_w
from		estrutura_material_v
where		cd_material	 	= cd_material_p;
exception
    		when others then
			cd_classe_material_w 	:= 0;
			cd_subgrupo_material_w 	:= 0;
			cd_grupo_material_w 	:= 0;
end;
	
OPEN C001;
LOOP
FETCH	C001	INTO
		cd_conta_receita_w,
		cd_conta_estoque_w,
		cd_conta_passag_direta_w;
EXIT WHEN NOT FOUND; /* apply on c001 */
		begin
			If (IE_TIPO_CONTA_P = 1) then
				cd_conta_Contabil_w	:= cd_conta_receita_w;
			elsif (IE_TIPO_CONTA_P = 2) then
				cd_conta_Contabil_w	:= cd_conta_estoque_w;
			elsif (IE_TIPO_CONTA_P = 3) then
				cd_conta_Contabil_w 	:= cd_conta_passag_direta_w;
			end if;
		end;
END LOOP;
CLOSE C001;
return cd_conta_contabil_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_conta_estoque ( CD_ESTABELECIMENTO_P bigint, CD_MATERIAL_P bigint, IE_TIPO_CONTA_P bigint, CD_SETOR_ATENDIMENTO_P bigint, IE_CLASSIF_CONVENIO_P text, IE_TIPO_ATENDIMENTO_P bigint, ie_tipo_convenio_p bigint, CD_CONVENIO_P bigint, cd_local_estoque_P bigint, DT_VIGENCIA_P timestamp) FROM PUBLIC;

