-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_permit_devol_fat ( nr_seq_ptu_fatura_p ptu_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1) := 'S';
dt_vencimento_fatura_w		ptu_fatura.dt_vencimento_fatura%type;
ie_dia_util_w			varchar(1);
qt_dias_corridos_w		integer;
qt_dias_uteis_w			integer;
dt_temporario_w			timestamp;

c01 CURSOR(	dt_vencimento_fatura_pc		ptu_fatura.dt_vencimento_fatura%type,
		cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type) FOR
	SELECT	qt_dias,
		coalesce(ie_somente_dia_util,'N') ie_somente_dia_util,
		ie_data_referencia,
		dt_vencimento_fatura_pc dt_vencimento_fatura
	from	ptu_regra_acao_fatura_a500
	where	ie_consiste_devolucao = 'S'
	and	clock_timestamp() between trunc(dt_inicio_vigencia) and fim_dia(dt_fim_vigencia)
	and	(dt_vencimento_fatura_pc IS NOT NULL AND dt_vencimento_fatura_pc::text <> '')
	and	cd_estabelecimento = cd_estabelecimento_pc;

BEGIN

-- Busca a 'dt_vencimento_fatura' da  'ptu_fatura'
select	dt_vencimento_fatura
into STRICT	dt_vencimento_fatura_w
from	ptu_fatura
where	nr_sequencia = nr_seq_ptu_fatura_p;

-- Percorre todas as regras vigentes, que esteja configuradas para 'Consistir devolução da fatura', desde que a 'ptu_fatura' tenha 'dt_vencimento_fatura' informada
for r_C01_w in C01(dt_vencimento_fatura_w, cd_estabelecimento_p) loop

	-- Enquando o retorno da function for 'S' (permite devolução), o sistema continua percorrendo as regras, afim de encontrar alguma regra que elimine a possibilidade de devolução, encontrando uma regra que elimine esta possibilidade o sistema para de percorrer as regras
	if (ds_retorno_w = 'S') then

		-- Se a ptu_fatura já estiver vencida não permite devolução, senão, continua verificando as regras
		if (trunc(dt_vencimento_fatura_w) < fim_dia(clock_timestamp())) then
			ds_retorno_w := 'N';
		else
			-- Trata as regras com a 'Data referência' igual a 'Dt  vencimento do A500'
			if (r_C01_w.ie_data_referencia = 'DV') then

				-- Seta o dia temporário com a data atual
				dt_temporario_w := clock_timestamp();

				-- Limpa os contadores antes de entrar no loop de contagem
				qt_dias_corridos_w := 0;
				qt_dias_uteis_w := 0;

				-- Percorrer dia-a-dia partindo de hoje até o dia do vencimento contando os dias normais e dias úteis
				while(trunc(dt_temporario_w) <= trunc(dt_vencimento_fatura_w)) loop
					-- Incrementa o contador de dias normais
					qt_dias_corridos_w := qt_dias_corridos_w + 1;

					-- Verifica se o dia temporário é útil
					ie_dia_util_w := obter_se_dia_util(dt_temporario_w, cd_estabelecimento_p);

					-- Verifica se o dia temporário é útil
					if (ie_dia_util_w = 'S') then
						-- Incrementa o contador de dias normais
						qt_dias_uteis_w	:= qt_dias_uteis_w + 1;
					end if;

					-- Seta o dia temporário para o próximo dia
					dt_temporario_w := dt_temporario_w + 1;
				end loop;

				-- Se a regras está configurada para se basear em dias úteis
				if (r_C01_w.ie_somente_dia_util = 'S') then
					-- Verifica se os dias úteis restantes até o vencimento é menor do que o definido em regra, se é menor do que o configurado em regra, retorna 'N' para que não seja permitido a devolução
					if (qt_dias_uteis_w < r_C01_w.qt_dias) then
						ds_retorno_w := 'N';
					end if;
				else
					-- Verifica se os dias corridos restantes até o vencimento é menor do que o definido em regra, se é menor do que o configurado em regra, retorna 'N' para que não seja permitido a devolução
					if (qt_dias_corridos_w < r_C01_w.qt_dias) then
						ds_retorno_w := 'N';
					end if;
				end if;
			end if;
		end if;
	end if;
end loop;

-- Retornando 'S' o sistema está autorizado a devolver a fatura, em caso de 'N' o sistema deverá impedir que seja realizada a devolução
return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_permit_devol_fat ( nr_seq_ptu_fatura_p ptu_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

