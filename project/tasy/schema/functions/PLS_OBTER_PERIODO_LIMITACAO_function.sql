-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_periodo_limitacao ( nr_seq_segurado_p bigint, nr_seq_limitacao_p bigint, cd_procedimento_p bigint, ie_periodo_p text, ie_tipo_periodo_p text, ie_opcao_p text) RETURNS timestamp AS $body$
DECLARE

			
/* ie_opcao_p
	I - data inicial
	F - data final
*/
dt_retorno_w			timestamp;
dt_contrato_w			timestamp;
dt_adesao_w			timestamp;
dt_primeira_utilizacao_w	timestamp;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_inicio_w			timestamp;
dt_atual_w			timestamp;
qt_intervalo_w			bigint;


BEGIN

begin
select	dt_contrato,
	b.dt_contratacao
into STRICT	dt_contrato_w,
	dt_adesao_w
from	pls_segurado	b,
	pls_contrato	a
where	a.nr_sequencia = b.nr_seq_contrato
and	b.nr_sequencia = nr_seq_segurado_p;
exception
when no_data_found then
	begin
	select	a.dt_inclusao,
		b.dt_contratacao
	into STRICT	dt_contrato_w,
		dt_adesao_w
	from	pls_segurado	b,
		pls_intercambio	a
	where	a.nr_sequencia = b.nr_seq_intercambio
	and	b.nr_sequencia = nr_seq_segurado_p;
	exception
	when no_data_found then
		select	dt_contratacao,
			dt_contratacao
		into STRICT	dt_contrato_w,
			dt_adesao_w
		from	pls_segurado
		where nr_sequencia = nr_seq_segurado_p;
	end;
end;

if (ie_periodo_p = 'CO') then
	if (to_char(dt_contrato_w,'dd/mm') = '29/02') then
		dt_contrato_w := to_date('28/02' || to_char(dt_contrato_w,'yyyy'), 'dd/mm/rrrr');
	end if;
	
	if (to_date(to_char(dt_contrato_w,'dd/mm') || to_char(clock_timestamp(), 'yyyy'), 'dd/mm/rrrr') > clock_timestamp()) then
		dt_inicial_w 	:= to_date(to_char(dt_contrato_w,'dd/mm') || (to_char(clock_timestamp(), 'yyyy') - 1), 'dd/mm/rrrr');
		dt_final_w 	:= to_date(to_char(dt_contrato_w,'dd/mm') || to_char(clock_timestamp(), 'yyyy'), 'dd/mm/rrrr') - 1;
	else
		dt_inicial_w	:= to_date(to_char(dt_contrato_w,'dd/mm') || to_char(clock_timestamp(), 'yyyy'), 'dd/mm/rrrr');
		dt_final_w	:= to_date(to_char(dt_contrato_w,'dd/mm') || (to_char(clock_timestamp(), 'yyyy') + 1), 'dd/mm/rrrr') - 1;
	end if;
elsif (ie_periodo_p = 'CA') then
	dt_inicial_w := trunc(clock_timestamp(), 'year');
	dt_final_w := last_day(add_months(trunc(clock_timestamp(), 'year'),11));
elsif (ie_periodo_p = 'A') then
	if (to_date(to_char(dt_adesao_w,'dd/mm') || to_char(clock_timestamp(), 'yyyy'), 'dd/mm/rrrr') > clock_timestamp()) then
		dt_inicial_w 	:= to_date(to_char(dt_adesao_w,'dd/mm') || (to_char(clock_timestamp(), 'yyyy') - 1), 'dd/mm/rrrr');
		dt_final_w 	:= to_date(to_char(dt_adesao_w,'dd/mm') || to_char(clock_timestamp(), 'yyyy'), 'dd/mm/rrrr') - 1;
	else
		dt_inicial_w	:= to_date(to_char(dt_adesao_w,'dd/mm') || to_char(clock_timestamp(), 'yyyy'), 'dd/mm/rrrr');
		dt_final_w	:= to_date(to_char(dt_adesao_w,'dd/mm') || (to_char(clock_timestamp(), 'yyyy') + 1), 'dd/mm/rrrr') - 1;
	end if;
elsif (ie_periodo_p = 'D') then
	
	begin
	select	max(coalesce(a.dt_autorizacao,a.dt_solicitacao))
	into STRICT	dt_atual_w
	from	pls_guia_plano_proc		b,
		pls_guia_plano			a
	where	a.nr_sequencia 		= b.nr_seq_guia
	and	a.nr_seq_segurado 	= nr_seq_segurado_p
	and	b.cd_procedimento 	= cd_procedimento_p
	and	coalesce(b.nr_seq_motivo_exc::text, '') = ''
	and	a.ie_status = '1';
	exception
	when others then
		dt_atual_w := null;
	end;	
	
	--pls_gravar_primeira_limi_benef(nr_seq_segurado_p,nr_seq_limitacao_p,dt_atual_w,'PHILIPS');
	select	max(dt_primeira_utilizacao)
	into STRICT	dt_inicio_w
	from	pls_segurado_limitacao
	where	nr_seq_segurado		= nr_seq_segurado_p
	and	nr_seq_limitacao	= nr_seq_limitacao_p;
	
	begin
	select	qt_meses_intervalo
	into STRICT	qt_intervalo_w
	from	pls_limitacao
	where	nr_sequencia = nr_seq_limitacao_p;
	exception
	when others then
		qt_intervalo_w := 0;
	end;
	
	if (qt_intervalo_w = 0) then
		select	dt_inicio_w
		into STRICT	dt_final_w
		;
	else
		if (ie_tipo_periodo_p = 'M') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	add_months(dt_inicio_w,qt_intervalo_w)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	add_months(dt_inicio_w, -qt_intervalo_w),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'S') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + (qt_intervalo_w*7)
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - (qt_intervalo_w*7),
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;
		elsif (ie_tipo_periodo_p = 'D') then
			while(dt_inicio_w < dt_atual_w) loop	
				select	dt_inicio_w + qt_intervalo_w
				into STRICT	dt_inicio_w
				;
			end loop;
			
			select	dt_inicio_w - qt_intervalo_w,
				dt_inicio_w
			into STRICT	dt_inicial_w,
				dt_final_w
			;			
		end if;	
	end if;
end if;

if (ie_opcao_p = 'I') then
	dt_retorno_w	:= trunc(dt_inicial_w, 'dd');
elsif (ie_opcao_p = 'F') then
	dt_retorno_w	:= trunc(dt_final_w,'dd') + 86399/86400;
end if;

return	dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_periodo_limitacao ( nr_seq_segurado_p bigint, nr_seq_limitacao_p bigint, cd_procedimento_p bigint, ie_periodo_p text, ie_tipo_periodo_p text, ie_opcao_p text) FROM PUBLIC;

