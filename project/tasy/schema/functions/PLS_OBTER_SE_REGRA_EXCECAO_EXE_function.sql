-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_regra_excecao_exe ( nr_seq_ocorrencia_p bigint, nr_seq_requisicao_p bigint, nr_seq_item_exec_p bigint, nr_seq_proc_p bigint, nr_seq_mat_p bigint, dt_solicitacao_p timestamp, ie_tipo_item_p bigint, nr_seq_prestador_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_segurado_p bigint, ie_tipo_guia_p text, nr_seq_plano_p bigint, ie_tipo_processo_p text, ie_tipo_repasse_p text, ie_carater_atendimento_p text, cd_estabelecimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


qt_ocorrencia_w			bigint;
qt_dias_w			bigint;
ie_porte_anestesico_w		varchar(1);
nr_seq_estrutura_w		bigint;
ds_retorno_w			varchar(1) := 'N';
cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
ie_estrutura_w			varchar(1);
ie_porte_w			varchar(1);
cd_medico_executor_regra_w	varchar(10);
ie_medico_exec_solic_w		varchar(1);
nr_seq_proc_espec_w		bigint;
ie_oc_medico_exec_w		varchar(1);
ie_espec_solic_proc_w		varchar(1);
ie_tipo_processo_w		varchar(1);
ie_tipo_atend_tiss_w		varchar(2);
cd_espec_medica_w		bigint;
cd_especialidade_w		bigint;
ie_preco_w			varchar(10);
ie_regulamentacao_w		varchar(1);
nr_contrato_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
ie_tipo_contrato_inter_w	varchar(2);
nr_seq_grupo_prestador_w	bigint;
ie_grupo_prest_w		varchar(1);
nr_seq_prestador_w		bigint;
nr_seq_tipo_prestador_w		bigint;
nr_seq_classificacao_w		bigint;
nr_seq_classificacao_regra_w	bigint;
nr_seq_tipo_prestador_regra_w	bigint;
ie_beneficiario_tratamento_w	varchar(1);
ie_tratamento_w			varchar(1)	:= 'N';
cd_doenca_cid_w			varchar(10);
ie_cid_regra_w			varchar(1);
ie_tipo_segurado_w		varchar(3);
ie_sexo_w			varchar(2);
qt_idade_w			integer;
qt_idade_min_w			smallint;
qt_idade_max_w			smallint;
qt_idade_meses_w		integer;
ie_unid_tempo_idade_w		varchar(2);
ie_possui_liminar_w		varchar(2);
ie_liminar_benef_w		varchar(1);
nr_seq_grupo_contrato_w		bigint;
qt_existe_grupo_w		integer;
ie_tipo_gat_regra_w		varchar(2);
qt_gat_w			bigint;
ie_cobranca_previa_w		varchar(2);
qt_cobranca_previa_w		bigint;
nr_seq_local_atend_w		bigint;
nm_usuario_solic_w		varchar(255);
nr_seq_grupo_servico_w		bigint;
nr_seq_grupo_material_w		bigint;
ie_grupo_material_w		varchar(1) := 'X';
ie_grupo_servico_w		varchar(1) := 'X';
nr_sequencia_w        		varchar(10);
ie_carater_internacao_con_w	varchar(1);
ie_carater_internacao_w		varchar(1);

C01 CURSOR FOR
	SELECT	nr_Sequencia,
		qt_dias,
		ie_porte_anestesico,
		nr_seq_estrutura,
		cd_procedimento,
		ie_origem_proced,
		cd_medico_executor,
		ie_medico,
		nr_seq_proc_espec,
		cd_especialidade_medica,
		nr_seq_grupo_prestador,
		nr_seq_classificacao,
		nr_seq_tipo_prestador,
		ie_beneficiario_tratamento,
		cd_doenca_cid,
		qt_idade_min,
		qt_idade_max,
		coalesce(ie_unid_tempo_idade,'A'),
		ie_possui_liminar,
		nr_seq_grupo_contrato,
		ie_tipo_gat,
		ie_cobranca_previa,
		nr_seq_grupo_servico,
		nr_seq_grupo_material,
		ie_carater_internacao
	from	pls_excecao_ocorrencia
	where	nr_seq_ocorrencia = nr_seq_ocorrencia_p
	and	ie_execucao_requisicao	= 'S'
	and	ie_situacao	= 'A'
	and	((coalesce(ie_tipo_guia::text, '') = '') or (ie_tipo_guia = ie_tipo_guia_p))
	and	((coalesce(ie_tipo_processo_autor::text, '') = '') or (ie_tipo_processo_autor = ie_tipo_processo_p AND ie_tipo_processo_autor IS NOT NULL AND ie_tipo_processo_autor::text <> ''))
	and	((coalesce(ie_tipo_atend_tiss::text, '') = '') or (ie_tipo_atend_tiss = ie_tipo_atend_tiss_w))
	and	((coalesce(ie_preco::text, '') = '') or (ie_preco = ie_preco_w))
	and	((coalesce(ie_regulamentacao::text, '') = '') or (ie_regulamentacao = ie_regulamentacao_w))
	and	((coalesce(nr_seq_prestador::text, '') = '') or (nr_seq_prestador = nr_seq_prestador_p))
	and	((coalesce(nr_contrato::text, '') = '') or (nr_contrato = nr_contrato_w))
	and	((coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio = nr_seq_intercambio_w))
	and	((coalesce(ie_tipo_segurado::text, '') = '') or (ie_tipo_segurado = ie_tipo_segurado_w))
	and	((coalesce(ie_sexo::text, '') = '') or (ie_sexo = ie_sexo_w))
	and	((coalesce(nr_seq_local_atend::text, '') = '') or (nr_seq_local_atend = nr_seq_local_atend_w))
	and	((coalesce(ie_tipo_repasse::text, '') = '')	or (ie_tipo_repasse = ie_tipo_repasse_p))
	and	trunc(dt_solicitacao_p) between trunc(dt_inicio_vigencia)	and fim_dia(coalesce(dt_fim_vigencia,dt_solicitacao_p));


BEGIN

ie_carater_internacao_con_w	:= ie_carater_atendimento_p;

begin
	select	ie_tipo_atendimento,
		nm_usuario_solic,
		cd_especialidade
	into STRICT	ie_tipo_atend_tiss_w,
		nm_usuario_solic_w,
		cd_especialidade_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
exception
when others then
	ie_tipo_atend_tiss_w := 'X';
end;

/* Obter local de atendimento */

if (coalesce(nm_usuario_solic_w,'X') <> 'X') and (ie_tipo_processo_p = 'P') then
	nr_seq_local_atend_w := pls_obter_local_atend_usuario(nm_usuario_solic_w,cd_estabelecimento_p);
end if;

/* Obter dados do segurado */

begin
select	b.nr_seq_contrato,
	b.ie_tipo_segurado,
	a.ie_sexo,
	substr(obter_idade_pf(a.cd_pessoa_fisica, clock_timestamp(), 'A'),1,10),
	substr(obter_idade_pf(a.cd_pessoa_fisica, clock_timestamp(), 'M'),1,10)
into STRICT	nr_seq_contrato_w,
	ie_tipo_segurado_w,
	ie_sexo_w,
	qt_idade_w,
	qt_idade_meses_w
from	pls_segurado	b,
	pessoa_fisica	a
where	b.nr_sequencia		= nr_seq_segurado_p
and	b.cd_pessoa_fisica	= a.cd_pessoa_fisica;
exception
when others then
	nr_seq_contrato_w 	:= 0;
	ie_tipo_segurado_w	:= '0';
end;

/* Obter dados do contrato */

begin
select	nr_contrato
into STRICT	nr_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;
exception
when others then
	nr_contrato_w	:= 0;
end;

/*Se o beneficiário não tiver um contrato verificamos se este é um beneficiário de intercâmbio*/

begin
select	coalesce(nr_seq_intercambio,0)
into STRICT	nr_seq_intercambio_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

select	coalesce(ie_tipo_contrato,'0')
into STRICT	ie_tipo_contrato_inter_w
from	pls_intercambio
where	nr_sequencia = nr_seq_intercambio_w;
exception
when others then
	nr_seq_intercambio_w	:= 0;
	ie_tipo_contrato_inter_w := '0';
end;

/* Obter dados do produto */

begin
select	ie_preco,
	ie_regulamentacao
into STRICT	ie_preco_w,
	ie_regulamentacao_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_p;
exception
when others then
	ie_preco_w	:= '0';
end;

/* Obter dados do prestador */

begin
select	nr_seq_tipo_prestador,
	nr_seq_classificacao
into STRICT	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_p;
exception
when others then
	nr_seq_tipo_prestador_w	:= 0;
end;

open C01;
loop
fetch C01 into nr_sequencia_w,
	qt_dias_w,
	ie_porte_anestesico_w,
	nr_seq_estrutura_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_medico_executor_regra_w,
	ie_medico_exec_solic_w,
	nr_seq_proc_espec_w,
	cd_espec_medica_w,
	nr_seq_grupo_prestador_w,
	nr_seq_classificacao_regra_w,
	nr_seq_tipo_prestador_regra_w,
	ie_beneficiario_tratamento_w,
	cd_doenca_cid_w,
	qt_idade_min_w,
	qt_idade_max_w,
	ie_unid_tempo_idade_w,
	ie_possui_liminar_w,
	nr_seq_grupo_contrato_w,
	ie_tipo_gat_regra_w,
	ie_cobranca_previa_w,
	nr_seq_grupo_servico_w,
	nr_seq_grupo_material_w,
	ie_carater_internacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_tipo_item_p in (10,11)) then
		/*Se for uma regra de procedimento*/

		if (cd_procedimento_w > 0)and (coalesce(nr_seq_estrutura_w,0) = 0) then
			/*Verifica se o procedimento da regra consiste com o do procedimento da conta / guia*/

			if (cd_procedimento_w <> coalesce(cd_procedimento_p,0)) or (ie_origem_proced_w <> coalesce(ie_origem_proced_p,0)) then
				goto final;
			end if;
		/*Se for regra de estrutura*/

		elsif (nr_seq_estrutura_w > 0) and (coalesce(cd_procedimento_w,0) = 0) then
			/*Verifica-se se algum dos procedimentos daestrutura existe na conta / guia*/

			ie_estrutura_w	:= pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_w, cd_procedimento_p, ie_origem_proced_p, nr_seq_material_p);
			if (ie_estrutura_w = 'N') then
				/*Se não existe */

				goto final;
			end if;
		/*Se for regra de estrutura e procedimento verifica-se os dois*/

		elsif (cd_procedimento_w > 0)and (nr_seq_estrutura_w > 0) then
			/*Se na regra já coincidiu o procedimento com o da conta já é gerado ocorrencia sem necessidadse de verificar a estrutura.	*/

			if	(((cd_procedimento_w <> cd_procedimento_p) or (ie_origem_proced_w <> ie_origem_proced_p)) or (coalesce(cd_procedimento_p,0) = 0)) then
				/*Se for regar de material ou o procedimento não consistir com a regra é verificado a estrutura.*/

				if (pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_w, cd_procedimento_p, ie_origem_proced_p, nr_seq_material_p) = 'N') then
					goto final;
				end if;
			end if;
		end if;
	end if;


	/*Verificar se o prestador pertence ao grupo dos prestador*/

	if (coalesce(nr_seq_grupo_prestador_w,0) > 0) then
		ie_grupo_prest_w	:= pls_se_grupo_preco_prestador(nr_seq_grupo_prestador_w, nr_seq_prestador_w, nr_seq_classificacao_w);
		if (ie_grupo_prest_w = 'N') then
			goto final;
		end if;
	end if;

	/*Obter se a regra é para uma classificacao do prestador*/

	if (coalesce(nr_seq_classificacao_regra_w,0) > 0) then
		if (nr_seq_classificacao_regra_w <> nr_seq_classificacao_w) then
			goto final;
		end if;
	end if;

	/*Se for uma regra para o tipo do prestador*/

	if (coalesce(nr_seq_tipo_prestador_regra_w,0) > 0) then
		/*Se for é verificado se o prestador é do tipo do prestador da regra*/

		if (nr_seq_tipo_prestador_regra_w <> nr_seq_tipo_prestador_w) then
			goto final;
		end if;
	end if;

	/* Verificar se for regra de quantidade de idade minima ou maxima da regra, sendo "A" por ano e "M" por meses*/

	if (ie_unid_tempo_idade_w = 'A') then
		if	(qt_idade_min_w IS NOT NULL AND qt_idade_min_w::text <> '' AND qt_idade_min_w > qt_idade_w) or
			(qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '' AND qt_idade_max_w < qt_idade_w) then
			goto final;
		end if;
	elsif (ie_unid_tempo_idade_w = 'M') then
		if	(qt_idade_min_w IS NOT NULL AND qt_idade_min_w::text <> '' AND qt_idade_min_w > qt_idade_meses_w) or
			(qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '' AND qt_idade_max_w < qt_idade_meses_w) then
			goto final;
		end if;
	end if;

	/* Verificar se o beneficiário está em tratamento. Valido somente para a requisição e execução da requisição */

	if (coalesce(ie_beneficiario_tratamento_w,'N') = 'S') then
		if (ie_tipo_item_p in (10,11)) then
			ie_tratamento_w := pls_obter_se_tratamento_benef(dt_solicitacao_p,nr_seq_segurado_p);
			if (ie_tratamento_w = 'N') then
				goto final;
			end if;
		else
			goto final;
		end if;
	end if;

	/* Verificar se o contrato do beneficiário pertence ao grupo de contrato cadastrado na regra */

	if (coalesce(nr_seq_grupo_contrato_w,0) <> 0) then
		select	count(*)
		into STRICT	qt_existe_grupo_w
		from	pls_preco_contrato	a
		where	a.nr_seq_grupo	= nr_seq_grupo_contrato_w
		and	nr_seq_contrato	= nr_seq_contrato_w
		or	nr_seq_intercambio	= nr_seq_intercambio_w;
		if (qt_existe_grupo_w = 0) then
			goto final;
		end if;
	end if;

	/*Grupo serviço*/

	if (coalesce(nr_seq_grupo_servico_w,0) > 0) then
		ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_p, ie_origem_proced_p);
		if (ie_grupo_servico_w	= 'N') then
			goto final;
		end if;
	end if;

	/* Grupo de material */

	if (coalesce(nr_seq_grupo_material_w,0) > 0) and (coalesce(nr_seq_material_p,0) > 0) then
		ie_grupo_material_w	:= pls_se_grupo_preco_material(nr_seq_grupo_material_w, nr_seq_material_p);
		if (ie_grupo_material_w	= 'N') then
			goto final;
		end if;
	end if;

	/* Se for uma excessão para as requisições GAT */

	if (coalesce(ie_tipo_gat_regra_w,'N')	= 'S') then
		if (ie_tipo_item_p in (10,11)) then
			select	count(1)
			into STRICT	qt_gat_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p
			and	ie_tipo_gat	= 'S';

			if (qt_gat_w = 0) then
				goto final;
			end if;
		else
			goto final;
		end if;
	end if;
	/* */

	/* Se for  uma regra de exceção para itens já pagos em cobrança prévia*/

	if (coalesce(ie_cobranca_previa_w,'N')	= 'S') then
		if (ie_tipo_item_p = 10) then
			select	count(1)
			into STRICT	qt_cobranca_previa_w
			from	pls_requisicao_proc
			where	nr_sequencia			= nr_seq_proc_p
			and	ie_cobranca_previa_servico	= 'S';

			if (qt_cobranca_previa_w = 0) then
				goto final;
			end if;
		elsif (ie_tipo_item_p = 11) then
			select	count(1)
			into STRICT	qt_cobranca_previa_w
			from	pls_requisicao_mat
			where	nr_sequencia			= nr_seq_mat_p
			and	ie_cobranca_previa_servico	= 'S';

			if (qt_cobranca_previa_w = 0) then
				goto final;
			end if;
		else
			goto final;
		end if;
	end if;

	if (cd_espec_medica_w IS NOT NULL AND cd_espec_medica_w::text <> '') then
		if (ie_tipo_item_p	in (10,11))  then
			if (cd_espec_medica_w	<> cd_especialidade_w) then
				goto final;
			end if;
		else
			goto final;
		end if;
	end if;

	/* Verifica se o carater de atendimento é igual ao cadastrado em  uma regra de exceção de Execução*/

	if (ie_carater_internacao_w IS NOT NULL AND ie_carater_internacao_w::text <> '') then
		if (ie_carater_internacao_w <> ie_carater_internacao_con_w) then
			goto final;
		end if;
	end if;

	ds_retorno_w := 'S';

	<<final>>
	qt_ocorrencia_w	:= 0;
	end;
end loop;
close C01;


return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_regra_excecao_exe ( nr_seq_ocorrencia_p bigint, nr_seq_requisicao_p bigint, nr_seq_item_exec_p bigint, nr_seq_proc_p bigint, nr_seq_mat_p bigint, dt_solicitacao_p timestamp, ie_tipo_item_p bigint, nr_seq_prestador_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_segurado_p bigint, ie_tipo_guia_p text, nr_seq_plano_p bigint, ie_tipo_processo_p text, ie_tipo_repasse_p text, ie_carater_atendimento_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

