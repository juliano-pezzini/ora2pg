-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_inconsiste_laudo ( nr_seq_laudo_p bigint, ie_tipo_consiste_p bigint) RETURNS varchar AS $body$
DECLARE


qt_inconsistencia_laudo_w		bigint;
ie_inconsiste_w			varchar(1) := 'N';

/*
ie_tipo_consiste_p

1 - Todas inconsistência ativas do laudo
2 - Somente as ativas e que não permitem liberar o laudo
*/
BEGIN

if (nr_seq_laudo_p IS NOT NULL AND nr_seq_laudo_p::text <> '') and (ie_tipo_consiste_p IS NOT NULL AND ie_tipo_consiste_p::text <> '') then
	begin

	if (ie_tipo_consiste_p = 1) then
		begin
		select	count(*)
		into STRICT	qt_inconsistencia_laudo_w
		from	sus_inconsistencia_laudo b,
			sus_inco_reg_laudo	 a
		where	a.nr_seq_inconsistencia = b.nr_sequencia
		and	a.nr_seq_laudo = nr_seq_laudo_p
		and	coalesce(sus_obter_se_cons_laudo_estab(b.nr_sequencia,b.cd_estabelecimento,'C'),b.ie_consiste) =  'S';
		end;
	elsif (ie_tipo_consiste_p = 2) then
		begin
		select	count(*)
		into STRICT	qt_inconsistencia_laudo_w
		from    sus_inconsistencia_laudo   b,
			sus_inco_reg_laudo a
		where	a.nr_seq_inconsistencia = b.nr_sequencia
		and	a.nr_seq_laudo = nr_seq_laudo_p
		and	coalesce(sus_obter_se_cons_laudo_estab(b.nr_sequencia,b.cd_estabelecimento,'C'),b.ie_consiste) = 'S'
		and	coalesce(sus_obter_se_cons_laudo_estab(b.nr_sequencia,b.cd_estabelecimento,'L'),b.ie_permite_liberar) = 'N';
		end;
	end if;

	if (qt_inconsistencia_laudo_w > 0) then
		begin

		ie_inconsiste_w	:= 'S';

		end;
	end if;

	end;
end if;

return	ie_inconsiste_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_inconsiste_laudo ( nr_seq_laudo_p bigint, ie_tipo_consiste_p bigint) FROM PUBLIC;

