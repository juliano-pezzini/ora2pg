-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_regra_compl_guia () RETURNS varchar AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Obter quantidade de dias na regra para o complemento da guia no portal
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/dt_dia_final_w		integer;
qt_mes_w			integer;
dia_atual_w			varchar(2);
mes_atual_w			varchar(2);
dt_retorno_w		varchar(10);
qt_dias_mes_w		integer;


BEGIN

select	to_char(clock_timestamp() - interval '60 days','dd/mm/yyyy')
into STRICT	dt_retorno_w
;

if (pls_obter_se_controle_estab('RE') = 'S')then
	begin
		select	coalesce(qt_mes_complemento, 0),
			coalesce(dt_dia_complemento, 0)
		into STRICT	qt_mes_w,
			dt_dia_final_w
		from	pls_regra_compl_guia_web
		where	ie_situacao = 'A'
		and 	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento  LIMIT 1;
	exception
	when others then
		dt_dia_final_w := 0;
		qt_mes_w := 0;
	end;
else
	begin
		select	coalesce(qt_mes_complemento, 0),
			coalesce(dt_dia_complemento, 0)
		into STRICT	qt_mes_w,
			dt_dia_final_w
		from	pls_regra_compl_guia_web
		where	ie_situacao = 'A'  LIMIT 1;
	exception
	when others then
		dt_dia_final_w := 0;
		qt_mes_w := 0;
	end;
end if;

if (qt_mes_w > 0 and dt_dia_final_w > 0)then

	qt_dias_mes_w := obter_qt_dias_mes(clock_timestamp());

	if (dt_dia_final_w >  qt_dias_mes_w) then
		dt_dia_final_w := qt_dias_mes_w;
	end if;

	if ((dia_atual_w)::numeric  > dt_dia_final_w ) then
		qt_mes_w := qt_mes_w - 1;
		if (qt_mes_w > 0) then
			dt_retorno_w := '01/'||to_char(add_months(clock_timestamp(), - qt_mes_w), 'mm/yyyy');
		else
			dt_retorno_w := '01/'||to_char(clock_timestamp(), 'mm/yyyy');
		end if;
	else
		dt_retorno_w := '01/'||to_char(add_months(clock_timestamp(), - qt_mes_w), 'mm/yyyy');
	end if;
else
	dt_retorno_w := clock_timestamp() - interval '60 days';
end if;

return	dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_regra_compl_guia () FROM PUBLIC;

