-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_ativ_fora_previsao ( nr_seq_ordem_serv_p bigint, nm_usuario_prev_p text, qt_porcent_toleravel_p bigint, qt_porcent_consistir_p bigint) RETURNS varchar AS $body$
DECLARE


nr_seq_ativ_atual_w	bigint;
qt_minutos_executados_w	bigint;
qt_minutos_previstos_w	bigint;
qt_porcent_concluida_w	bigint;
ie_fora_previsao_w	varchar(1);
qt_minutos_executados_os_w	bigint;
qt_minutos_previstos_os_w	bigint;
qt_diferenca_consist_w		bigint;

/* Retorno
N - Não está fora do limite de previsão
A - Abaixo do limte mínimo da margem de erro de previsão
S - Acima do limite máximo da margem de erro de previsão
*/
C01 CURSOR FOR
	SELECT	nr_seq_ativ_prev
	from	man_ordem_serv_ativ
	where	nr_seq_ordem_serv = nr_seq_ordem_serv_p
	and		nm_usuario_exec = nm_usuario_prev_p
	and	trunc(DT_ATIVIDADE) = trunc(clock_timestamp());


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_ativ_atual_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	-- Tempo realizado na atividade no dia
	select	sum(coalesce(Obter_Min_Entre_Datas(dt_atividade, coalesce(dt_fim_atividade,clock_timestamp()), 1),1))
	into STRICT	qt_minutos_executados_os_w
	from	man_ordem_serv_ativ
	where	nr_seq_ordem_serv = nr_seq_ordem_serv_p
	and	nm_usuario_exec = nm_usuario_prev_p
	and	trunc(DT_ATIVIDADE) = trunc(clock_timestamp())
	and	nr_seq_ativ_prev = nr_seq_ativ_atual_w;

	qt_minutos_executados_w	:= coalesce(qt_minutos_executados_w,0) + coalesce(qt_minutos_executados_os_w,0);

	-- Tempo previsto para a atividade no dia
	select	coalesce(sum(qt_min_prev),0)
	into STRICT	qt_minutos_previstos_os_w
	from	man_ordem_ativ_prev
	where	nr_seq_ordem_serv = nr_seq_ordem_serv_p
	and	nm_usuario_prev = nm_usuario_prev_p
	and	nr_sequencia = nr_seq_ativ_atual_w
	and	qt_min_prev > 10
	and	trunc(DT_PREVISTA) = trunc(clock_timestamp())
	and	coalesce(nr_seq_motivo_assert::text, '') = '';

	qt_minutos_previstos_w	:= coalesce(qt_minutos_previstos_w,0) + coalesce(qt_minutos_previstos_os_w,0);
end loop;
close C01;

ie_fora_previsao_w := 'N';

if (qt_porcent_consistir_p = 0) then
	qt_porcent_concluida_w := ((qt_minutos_executados_w * 100) / qt_minutos_previstos_w);
	If (qt_porcent_concluida_w < 100) then
		If	((100 - qt_porcent_concluida_w) > qt_porcent_toleravel_p) then
			ie_fora_previsao_w := 'A';
		end if;
	else
		If	((qt_porcent_concluida_w - 100) > qt_porcent_toleravel_p) then
			ie_fora_previsao_w := 'S';
		end if;
	end if;
elsif (qt_minutos_previstos_w > 0) then
	qt_diferenca_consist_w	:= (((qt_minutos_previstos_w * qt_porcent_consistir_p) / 100));

	if (qt_minutos_executados_w > qt_minutos_previstos_w) and
		((qt_minutos_executados_w - qt_minutos_previstos_w) > qt_diferenca_consist_w) then
		ie_fora_previsao_w	:= 'S';
	elsif (qt_minutos_executados_w < qt_minutos_previstos_w) and
		((qt_minutos_previstos_w - qt_minutos_executados_w) > qt_diferenca_consist_w) then
		ie_fora_previsao_w	:= 'A';
	end if;
end if;

return	ie_fora_previsao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_ativ_fora_previsao ( nr_seq_ordem_serv_p bigint, nm_usuario_prev_p text, qt_porcent_toleravel_p bigint, qt_porcent_consistir_p bigint) FROM PUBLIC;

