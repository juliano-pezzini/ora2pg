-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_permite_edit_exam_exec ( nr_seq_cpoe_p cpoe_procedimento.nr_sequencia%type , nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ie_susp_glicemia_w 			varchar(1);
ie_consiste_BE_w			varchar(1);
ie_em_exame_w 				varchar(1);
ie_exame_w 					varchar(1);
ie_perm_susp_proc_integ_w 	varchar(1);
cd_estabelecimento_w        estabelecimento.cd_estabelecimento%type;

nr_atendimento_w		cpoe_material.nr_atendimento%type;
nr_prescricao_w			prescr_medica.nr_prescricao%type;
nr_seq_procedimento_w	prescr_procedimento.nr_sequencia%type;
cd_procedimento_w		prescr_procedimento.cd_procedimento%type;
cd_pessoa_fisica_w		cpoe_material.cd_pessoa_fisica%type;
qt_registro_w 			integer;
ie_permite_w			varchar(1);


BEGIN


cd_estabelecimento_w := obter_estabelecimento_ativo();
ie_exame_w := Obter_Param_Usuario(924, 91, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_exame_w);
ie_em_exame_w := Obter_Param_Usuario(924, 117, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_em_exame_w);
ie_susp_glicemia_w := Obter_Param_Usuario(924, 407, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_susp_glicemia_w);
ie_consiste_BE_w := Obter_Param_Usuario(924, 660, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_BE_w);
ie_perm_susp_proc_integ_w := Obter_Param_Usuario(924, 1100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_perm_susp_proc_integ_w);

qt_registro_w := 0;
ie_permite_w := 'S';

select		max(nr_atendimento),
max(cd_pessoa_fisica)
into STRICT		nr_atendimento_w,
        cd_pessoa_fisica_w
from	cpoe_procedimento
where  	nr_sequencia = nr_seq_cpoe_p;

nr_prescricao_w := obter_prescr_item_cpoe(nr_seq_cpoe_p, 'P', nr_atendimento_w, cd_pessoa_fisica_w);

select	coalesce(max(a.nr_sequencia),0)	
into STRICT	nr_seq_procedimento_w
from	prescr_procedimento a,
    prescr_medica b,
    cpoe_procedimento c
where   a.nr_prescricao = b.nr_prescricao
and 	a.nr_seq_proc_cpoe = c.nr_sequencia
and 	b.nr_prescricao = nr_prescricao_w
and	nr_seq_proc_cpoe = nr_seq_cpoe_p;		

select	max(cd_procedimento)
into STRICT	cd_procedimento_w
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_w
and	nr_sequencia	= nr_seq_procedimento_w;

if (ie_perm_susp_proc_integ_w = 'N') then
	select	count(1)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	(dt_integracao IS NOT NULL AND dt_integracao::text <> '')
	and		NR_SEQ_PROC_CPOE = nr_seq_cpoe_p;

    if qt_registro_w > 0 then
        ie_permite_w := 'N';
    end if;
end if;

if (ie_exame_w = 'N') then 	/*Nao pemite*/
	select	count(*)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia		= nr_seq_procedimento_w
	and	((coalesce(nr_seq_prot_glic::text, '') = '') or (ie_susp_glicemia_w = 'S'))
	and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
	and	((cd_motivo_baixa <> 0) or (ie_status_execucao in ('20', '40')) or
		 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
elsif (ie_exame_w = 'A') then		/*Permite ambos*/
			
	select	count(*)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia		= nr_seq_procedimento_w
	and	((ie_status_execucao	<> 'BE') or ( ie_consiste_BE_w	= 'S'))
	and	(ie_status_execucao = '15' AND ie_em_exame_w = 'N');
elsif (ie_exame_w = 'S') then		/*Somente exames laboratoriais*/
	select	count(*)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia		= nr_seq_procedimento_w
	and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
	and	coalesce(nr_seq_exame::text, '') = ''
	and	((coalesce(nr_seq_prot_glic::text, '') = '') or (ie_susp_glicemia_w = 'N'))
	and	((cd_motivo_baixa <> 0) or
		 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
elsif (ie_exame_w = 'P') then		/*Somente exames nao laboratoriais*/
	select	count(*)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia		= nr_seq_procedimento_w
	and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
	and	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '')
	and	((cd_motivo_baixa <> 0) or
		 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
elsif (ie_exame_w = 'X') and (coalesce(cd_procedimento_w,0) > 0) then		/*Somente exames que sao executados automaticamente */
	select	count(*)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w
	and	nr_sequencia	= nr_seq_procedimento_w
	and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
	and	coalesce(ie_executado_automatico,'N') <> 'S'
	and	((cd_motivo_baixa <> 0) or (ie_status_execucao in ('20', '40')) or
		 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
elsif (ie_exame_w = 'E') then		/*Somente exames que NAO sao executados automaticamente*/
	select	count(*)
	into STRICT	qt_registro_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w
	and	nr_sequencia	= nr_seq_procedimento_w
	and	((ie_status_execucao	<> 'BE') or (ie_consiste_BE_w	= 'S'))
	and	coalesce(ie_executado_automatico,'N') = 'S'
	and	((cd_motivo_baixa <> 0) or (ie_status_execucao in ('20', '40')) or
		 (ie_status_execucao = '15' AND ie_em_exame_w = 'N'));
end if;

if (qt_registro_w > 0) then
	ie_permite_w:= 'N';
end if;

return ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_permite_edit_exam_exec ( nr_seq_cpoe_p cpoe_procedimento.nr_sequencia%type , nm_usuario_p text) FROM PUBLIC;

