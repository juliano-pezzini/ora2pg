-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_sus_consiste_campo ( nm_campo_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_profissional_exec_p text, nm_usuario_p text, cd_procedimento_solic_p bigint, ie_origem_proc_solic_p bigint, ie_mudanca_proc_p text, qt_procedimento_p bigint, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_seq_proc_p bigint, nr_seq_proc_princ_p bigint, ie_funcao_p bigint, nr_interno_conta_p bigint, cd_estabelecimento_p bigint, dt_procedimento_p timestamp) RETURNS varchar AS $body$
DECLARE



/*
 PROFISSIONAL	- Sus_Consiste_ProcCbo
 PROCAIH	- Sus_Consiste_ProcAih
 PROC		- Sus_Consiste_Proc
 PROCPAC	- Sus_Consiste_ProcPac
 OPM		- Sus_Consiste_ProcOpm
*/
nr_seq_inconsistencia_w		bigint;
ds_erro_proccbo_w			varchar(255)	:= '';
ds_erro_procaih_w			varchar(255)	:= '';
ds_erro_proc_w			varchar(255)	:= '';
ds_erro_procpac_w			varchar(255)	:= '';
ds_erro_procopm_w		varchar(255)	:= '';
ds_erro_w			varchar(2000)	:= '';
ds_inco_w			varchar(255);
cd_inconsistencia_w		bigint;
ds_inconsistencia_w		varchar(255);
ds_retorno_w			varchar(2000) 	:= '';
i				integer;


BEGIN

/* Identificador de qual campo será feita a consistencia */

if (ie_origem_proced_p = 7) then
	begin
	if (nm_campo_p = 'PROFISSIONAL') then
		ds_erro_w := sus_consiste_proccbo(nr_interno_conta_p, cd_procedimento_p, ie_origem_proced_p, cd_profissional_exec_p, nr_seq_proc_p, ie_funcao_p, nm_usuario_p, 2, null, ds_erro_w);
	elsif (nm_campo_p = 'PROCAIH') then
		ds_erro_w := sus_consiste_procaih(nr_interno_conta_p, cd_procedimento_solic_p, ie_origem_proc_solic_p, cd_procedimento_p, ie_origem_proced_p, ie_mudanca_proc_p, nm_usuario_p, 2, ds_erro_w);
	elsif (nm_campo_p = 'PROC') then
		ds_erro_proc_w := sus_consiste_proc(nr_interno_conta_p, cd_procedimento_p, ie_origem_proced_p, cd_profissional_exec_p, qt_procedimento_p, nr_atendimento_p, 0, nm_usuario_p, 2, dt_procedimento_p);
		ds_erro_procpac_w := sus_consiste_procpac(nr_interno_conta_p, cd_procedimento_p, ie_origem_proced_p, cd_pessoa_fisica_p, nm_usuario_p, 2, ds_erro_procpac_w, nr_seq_proc_p);
		ds_erro_w	:= ds_erro_proc_w || ds_erro_procpac_w;
	elsif (nm_campo_p = 'OPM') and (sus_validar_regra(4, cd_procedimento_p, ie_origem_proced_p,dt_procedimento_p) > 0) then
		ds_erro_w := sus_consiste_procopm(nr_interno_conta_p, nr_atendimento_p, cd_procedimento_p, ie_origem_proced_p, qt_procedimento_p, nr_seq_proc_p, nr_seq_proc_princ_p, nm_usuario_p, cd_estabelecimento_p, 2, ds_erro_w);
	end if;	
	end;
end if;

/* Teste se há algum erro */

if (length(ds_erro_w) > 0) then
	ds_inco_w	:= ds_erro_w;
	ds_retorno_w	:= wheb_mensagem_pck.get_Texto(311881); /*'Inconsistência(s) do campo:'||chr(10)||chr(13);*/
	
	
	while (ds_inco_w IS NOT NULL AND ds_inco_w::text <> '') loop
		begin
		/* Busca a posição do separados das inconsistencias, no caso a virgula */

		i	:= position(', ' in ds_inco_w);
		if (i > 1) then
			cd_inconsistencia_w	:= substr(ds_inco_w, 1, i-1);
			ds_inco_w		:= substr(ds_inco_w, i+1, 255);
		end if;
		/* Se existir apenas um espaço em branco entao limpa a variavel para sair do loop */

		if (ds_inco_w = ' ') then
			ds_inco_w	:= '';
		end if;

		/* Busca a descricao da inconsistencia */

		select	coalesce(max(ds_inconsistencia),'')
		into STRICT	ds_inconsistencia_w
		from	sus_inconsistencia
		where	cd_inconsistencia	= cd_inconsistencia_w;

		ds_retorno_w	:= ds_retorno_w || ' - ' ||'['|| cd_inconsistencia_w||'] '|| ds_inconsistencia_w ||';'|| chr(10);

		end;
	end loop;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_sus_consiste_campo ( nm_campo_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_profissional_exec_p text, nm_usuario_p text, cd_procedimento_solic_p bigint, ie_origem_proc_solic_p bigint, ie_mudanca_proc_p text, qt_procedimento_p bigint, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_seq_proc_p bigint, nr_seq_proc_princ_p bigint, ie_funcao_p bigint, nr_interno_conta_p bigint, cd_estabelecimento_p bigint, dt_procedimento_p timestamp) FROM PUBLIC;

