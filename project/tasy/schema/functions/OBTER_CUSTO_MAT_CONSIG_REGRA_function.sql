-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_custo_mat_consig_regra ( cd_estabelecimento_p bigint, nr_prescricao_p bigint, cd_material_p bigint, cd_cgc_fornecedor_p text, nr_atendimento_p bigint) RETURNS bigint AS $body$
DECLARE


vl_retorno_w						double precision;
nr_ordem_compra_w					ordem_compra.nr_ordem_compra%type;

/* Criado na OS 1475588 por Adilson Bortoloso em 09/03/2018*/

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_regra,
		a.ie_tipo_ordem,
		a.cd_convenio,
		a.ie_tipo_calculo
	from	cus_regra_custo_consig a
	where	a.cd_estabelecimento = cd_estabelecimento_p
	order by
		a.nr_seq_regra,
		a.ie_tipo_ordem,
		a.cd_convenio;

c01_w		c01%rowtype;

function get_custo_material(
		cd_material_consulta_p			bigint,
		nr_ordem_compra_consulta_p		bigint)
 		return bigint is

vl_retorno_consulta_w					double precision;
vl_custo_w						double precision;
qt_conversao_w						double precision;

BEGIN
vl_retorno_consulta_w := 0;
if (coalesce(nr_ordem_compra_consulta_p,0) <> 0) then
	begin
	select	dividir(sum(obter_valor_liquido_oci(a.nr_ordem_compra,a.nr_item_oci)), sum(a.qt_material))
	into STRICT	vl_custo_w
	from	ordem_compra_item a
	where	a.nr_ordem_compra = nr_ordem_compra_consulta_p
	and	a.cd_material = cd_material_consulta_p;

	select	coalesce(a.qt_conv_estoque_consumo,1) * coalesce(a.qt_conv_compra_estoque,1)
	into STRICT	qt_conversao_w
	from	material a
	where	a.cd_material = cd_material_consulta_p;

	vl_retorno_consulta_w := dividir(vl_custo_w, qt_conversao_w);

	end;
end if;

return vl_retorno_consulta_w;

end;

begin
/*
REGRA_ALOC_CUSTO_CONSIG
seOrdem		| tipoOrdem		| Convenio		| cálculo		| domCálculo
1		| 0		| 0		| OPF		| Ordem compra da prescrição
2		| 0		| 0		| OAF		| Ordem compra do atendimento
3		| 0		| 0		| OSA		| OC s/ Presc/Atend
4		| 0		| 0		| TBC		| TC - Obtém da tabela de custo
*/
nr_ordem_compra_w	:= 0;
vl_retorno_w		:= 0;


open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* Ordem compra da prescrição */

	if (c01_w.ie_tipo_calculo = 'OPF') then
		begin
		/*
		Custo da última ordem de compra gerada para a o material e prescrição do mesmo fornecedor
		*/
		select	max(a.nr_ordem_compra)
		into STRICT	nr_ordem_compra_w
		from	ordem_compra a
		where	a.nr_prescricao = nr_prescricao_p
		and	a.cd_cgc_fornecedor = cd_cgc_fornecedor_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
		and	coalesce(c01_w.ie_tipo_ordem,a.ie_tipo_ordem,'0') = coalesce(a.ie_tipo_ordem,'0')
		and	coalesce(c01_w.cd_convenio,a.cd_convenio,0) = coalesce(a.cd_convenio,0)
		and	exists (SELECT	1
			from	ordem_compra_item b
			where	a.nr_ordem_compra = b.nr_ordem_compra
			and	b.cd_material = cd_material_p  LIMIT 1);

		vl_retorno_w := get_custo_material(cd_material_p,nr_ordem_compra_w);
		if (vl_retorno_w <> 0) then
			begin
			exit;
			end;
		end if;
		end;
	end if;

	/* Ordem compra do atendimento */

	if (c01_w.ie_tipo_calculo = 'OAF') then
		begin
		/*
		Custo da última ordem de compra gerada para a o material e atendimento do mesmo fornecedor
		*/
		select	max(a.nr_ordem_compra)
		into STRICT	nr_ordem_compra_w
		from	ordem_compra a
		where	a.nr_atendimento = nr_atendimento_p
		and	a.cd_cgc_fornecedor = cd_cgc_fornecedor_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
		and	coalesce(c01_w.ie_tipo_ordem,a.ie_tipo_ordem,'0') = coalesce(a.ie_tipo_ordem,'0')
		and	coalesce(c01_w.cd_convenio,a.cd_convenio,0) = coalesce(a.cd_convenio,0)
		and	exists (SELECT	1
			from	ordem_compra_item b
			where	a.nr_ordem_compra = b.nr_ordem_compra
			and	b.cd_material = cd_material_p  LIMIT 1);

		vl_retorno_w := get_custo_material(cd_material_p,nr_ordem_compra_w);
		if (vl_retorno_w <> 0) then
			begin
			exit;
			end;
		end if;
		end;
	end if;

	/* Ordem de compra sem prescrição e atendimento */

	if (c01_w.ie_tipo_calculo = 'OSA') then
		begin
		/*
		Custo da última ordem de compra gerada para a o material do mesmo fornecedor
		*/
		select	max(a.nr_ordem_compra)
		into STRICT	nr_ordem_compra_w
		from	ordem_compra a
		where	a.cd_cgc_fornecedor = cd_cgc_fornecedor_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
		and	coalesce(c01_w.ie_tipo_ordem,a.ie_tipo_ordem,'0') = coalesce(a.ie_tipo_ordem,'0')
		and	coalesce(c01_w.cd_convenio,a.cd_convenio,0) = coalesce(a.cd_convenio,0)
		and	exists (SELECT	1
			from	ordem_compra_item b
			where	a.nr_ordem_compra = b.nr_ordem_compra
			and	b.cd_material = cd_material_p  LIMIT 1);

		vl_retorno_w := get_custo_material(cd_material_p,nr_ordem_compra_w);
		if (vl_retorno_w <> 0) then
			begin
			exit;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close c01;

return vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_custo_mat_consig_regra ( cd_estabelecimento_p bigint, nr_prescricao_p bigint, cd_material_p bigint, cd_cgc_fornecedor_p text, nr_atendimento_p bigint) FROM PUBLIC;

