-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION nfse_obter_dados_pf_pj_hist ( cd_pessoa_fisica_p text, cd_cgc_p text, ie_opcao_p text, dt_emissao_nf_p timestamp) RETURNS varchar AS $body$
DECLARE


ds_razao_social_w		varchar(255);
cd_cep_w		varchar(255);
ds_endereco_w		varchar(255);
ds_bairro_w		varchar(255);
sg_estado_w		varchar(255);
ds_retorno_w		varchar(255);
ds_complemento_w		varchar(255);
nr_telefone_w		varchar(255);
nr_endereco_w		varchar(255);
ds_email_w		varchar(255);
nr_inscricao_municipal_w	varchar(255);
nr_ddd_telefone_w		varchar(255);
cd_municipio_ibge_dv_w	varchar(255);
cd_municipio_ibge_w	varchar(255);
cd_municipio_nfe_w	varchar(255);
nr_sequencia_w		bigint;
ds_municipio_w		varchar(255);
retorno_w			varchar(255);

/*
   t - telefone
   en - so endereco
   uf - estado
   cep - cep
   b - bairro
   m - email
   co - complemento
   nr - numero
   cdm - codigo municipio
   cdmnf - Codigo do municipio NFe, NFSe ( Para cidades que nao usam o codigo de municipio IBGE).
   ddt - numero ddd telefone
*/
BEGIN
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '')	then
	retorno_w := nfse_obter_compl_pf_hist(cd_pessoa_fisica_p,ie_opcao_p, dt_emissao_nf_p);
else
	select 	max(nr_sequencia)
	into STRICT 	nr_sequencia_w
	from 	fis_pessoa_juridica_hist
	where	cd_cgc = cd_cgc_p
	and	dt_emissao_nf_p <= dt_atualizacao_nrec
	order by dt_atualizacao asc;

	if (coalesce(nr_sequencia_w::text, '') = '') then
		retorno_w := nfse_obter_dados_pf_pj(cd_pessoa_fisica_p, cd_cgc_p, ie_opcao_p);
	else
		select	cd_cep,
			cd_municipio_ibge,
			ds_bairro,
			ds_complemento,
			ds_endereco,
			ds_municipio,
			nr_ddd_telefone,
			nr_endereco,
			nr_telefone,
			sg_estado,
			ds_email
		into STRICT	cd_cep_w,
			cd_municipio_ibge_w,			
			ds_bairro_w,
			ds_complemento_w,
			ds_endereco_w,
			ds_municipio_w,
			nr_ddd_telefone_w,
			nr_endereco_w,
			nr_telefone_w,
			sg_estado_w,
			ds_email_w
		from	fis_pessoa_juridica_hist
		where	nr_sequencia = nr_sequencia_w;
		
		if (ie_opcao_p = 'T')	then
			retorno_w:= substr(somente_numero(nr_telefone_w),1,15);
		elsif (ie_opcao_p = 'UF')	then
			retorno_w:= sg_estado_w;
		elsif (ie_opcao_p = 'CEP')	then
			retorno_w:= substr(somente_numero(cd_cep_w),1,8);
		elsif (ie_opcao_p = 'B')	then
			retorno_w:= tiss_eliminar_caractere(elimina_acentuacao(ds_bairro_w));
		elsif (ie_opcao_p = 'M')	then
			retorno_w:= ds_email_w;
		elsif (ie_opcao_p = 'EN')	then
			retorno_w:= tiss_eliminar_caractere(elimina_acentuacao(ds_endereco_w));
		elsif (ie_opcao_p = 'NR') then
			retorno_w:=  substr(somente_numero(nr_endereco_w),1,5);
		elsif (ie_opcao_p = 'DM') then
			retorno_w := substr(ds_municipio_w,1,100);
		elsif (ie_opcao_p = 'CO') then
			retorno_w:= tiss_eliminar_caractere(elimina_acentuacao(ds_complemento_w));	
		elsif (ie_opcao_p = 'CDM') then
			retorno_w:= cd_municipio_ibge_w;
		elsif (ie_opcao_p = 'CDMDV') then
			begin
				
			if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
				case cd_municipio_ibge_w
				when '430587' then retorno_w := '4305871';
				when '220191' then retorno_w := '2201919';
				when '220225' then retorno_w := '2202251';
				when '220198' then retorno_w := '2201988';
				when '261153' then retorno_w := '2611533';
				when '311783' then retorno_w := '3117836';
				when '315213' then retorno_w := '3152131';
				when '520393' then retorno_w := '5203939';
				when '520396' then retorno_w := '5203962';
				else retorno_w := substr(cd_municipio_ibge_w || substr(calcula_digito('MODULO10',cd_municipio_ibge_w),1,1),1,255);
				end case;	
			
			end if;
					
			end;
		elsif (ie_opcao_p = 'CDMNF') then
			begin
			select	cd_municipio_nfe
			into STRICT	cd_municipio_nfe_w
			from	sus_municipio
			where	cd_municipio_ibge = cd_municipio_ibge_w;
			
			retorno_w := cd_municipio_nfe_w;
			end;
		elsif (ie_opcao_p = 'DDT') then
			retorno_w:= nr_ddd_telefone_w;	
		end if;
	end if;
end if;

return retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION nfse_obter_dados_pf_pj_hist ( cd_pessoa_fisica_p text, cd_cgc_p text, ie_opcao_p text, dt_emissao_nf_p timestamp) FROM PUBLIC;

