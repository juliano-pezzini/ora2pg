-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_info_multipla_aprovacao (ds_nr_laudo_lista_p text) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			  varchar(32000);
nr_laudo_lista_w          numeric(20);
ds_possib_w	        	  varchar(6000);
qt_controle_w			  bigint;
qt_pos_separador_w		  bigint;
ds_possib_aux_w			  varchar(6000);

ie_controle_digitacao_w   varchar(4000);
ie_controle_ditado_w      varchar(4000);
ie_controle_status_w      varchar(4000);

cd_pessoa_fisica_w        varchar(255);
nm_pessoa_fisica_w        varchar(255);
nr_prontuario_w           varchar(255);
cd_estabelecimento_w      varchar(255);
cd_setor_atendimento_w    varchar(255);
cd_setor_execucao_w       varchar(255);
nr_atendimento_w          varchar(255);
nr_prescricao_w           varchar(255);
nr_seq_interno_w          varchar(255);
cd_procedimento_w         varchar(255);
ie_origem_proced_w        varchar(255);
nr_sequencia_prescricao_w varchar(255);
nr_acesso_dicom_w         varchar(255);
cd_tipo_procedimento_w    varchar(255);
nr_seq_proc_interno_w     varchar(255);
nr_laudo_w                varchar(255);
cd_protocolo_w            varchar(255);
nm_usuario_aprovacao_w    varchar(255);
ie_status_execucao_w      varchar(255);
dt_laudo_ditado_w         timestamp;

c01 CURSOR FOR

SELECT DISTINCT prescr_med.cd_pessoa_fisica,
		   substr(obter_nome_pf(prescr_med.cd_pessoa_fisica),1,255) nm_pessoa_fisica,
		   substr(obter_prontuario_pf(prescr_med.cd_estabelecimento, prescr_med.cd_pessoa_fisica), 1, 255) nr_prontuario,
		   prescr_med.cd_estabelecimento,
		   proc_pac.cd_setor_atendimento,
		   laudo_pac.cd_setor_execucao,
           prescr_med.nr_atendimento,
           prescr_proc.nr_prescricao,
           prescr_proc.nr_seq_interno,
           prescr_proc.cd_procedimento,
           prescr_proc.ie_origem_proced,
           prescr_proc.nr_sequencia nr_sequencia_prescricao,
           prescr_proc.nr_acesso_dicom,
           proc.cd_tipo_procedimento,
           prescr_proc.nr_seq_proc_interno,
           laudo_pac.nr_sequencia nr_laudo,
           laudo_pac.cd_protocolo,
           laudo_pac.nm_usuario_aprovacao,
           prescr_proc.ie_status_execucao,
           prescr_proc_dit.dt_atualizacao dt_laudo_ditado
	FROM	prescr_procedimento prescr_proc
	INNER JOIN prescr_medica prescr_med ON prescr_proc.nr_prescricao = prescr_med.nr_prescricao
	LEFT JOIN procedimento_paciente proc_pac ON prescr_proc.nr_prescricao = proc_pac.nr_prescricao
												AND	prescr_proc.nr_sequencia = proc_pac.nr_sequencia_prescricao
	LEFT JOIN laudo_paciente laudo_pac ON proc_pac.nr_laudo = laudo_pac.nr_sequencia
	INNER JOIN atend_categoria_convenio atend_cat_conv ON prescr_med.nr_atendimento = atend_cat_conv.nr_atendimento
	INNER JOIN procedimento proc ON prescr_proc.cd_procedimento = proc.cd_procedimento
									AND	prescr_proc.ie_origem_proced = proc.ie_origem_proced
	LEFT JOIN conta_paciente conta_pac ON proc_pac.nr_interno_conta = conta_pac.nr_interno_conta
	LEFT JOIN prescr_proc_ditado prescr_proc_dit ON prescr_proc.nr_seq_interno = prescr_proc_dit.nr_seq_prescr_proc
	WHERE proc_pac.qt_procedimento > 0
	AND	coalesce(conta_pac.ie_cancelamento,'N') = 'N'
	AND	atend_cat_conv.nr_seq_interno = obter_atecaco_atendimento(atend_cat_conv.nr_atendimento)
	AND	coalesce(prescr_proc.dt_suspensao::text, '') = ''
	AND	((coalesce(prescr_proc_dit.nr_sequencia::text, '') = '')
		OR (prescr_proc_dit.nr_sequencia IN (SELECT max(nr_sequencia)
			 FROM  prescr_proc_ditado
			WHERE prescr_proc.nr_seq_interno = prescr_proc_ditado.nr_seq_prescr_proc)))
   and proc_pac.nr_laudo = nr_laudo_lista_w;


BEGIN

ds_possib_w := ds_nr_laudo_lista_p;

if (position('(' in ds_possib_w) > 0 ) and (position(')' in ds_possib_w) > 0 ) then
	ds_possib_w		:= substr(ds_nr_laudo_lista_p,(position('(' in ds_nr_laudo_lista_p)+1),(position(')' in ds_nr_laudo_lista_p)-2));
end if;

qt_controle_w 		:= 0;

qt_pos_separador_w 	:= position(',' in ds_possib_w);

if (qt_pos_separador_w = 0) then
  qt_pos_separador_w := -1;
end if;


while( qt_pos_separador_w >= 0 )  and ( qt_controle_w < 1000 ) loop

	cd_pessoa_fisica_w        := '';
	nm_pessoa_fisica_w        := '';
    nr_prontuario_w           := '';
    cd_estabelecimento_w      := '';
	cd_setor_atendimento_w    := '';
	cd_setor_execucao_w       := '';
	nr_atendimento_w          := '';
	nr_prescricao_w           := '';
	nr_seq_interno_w          := '';
	cd_procedimento_w         := '';
	ie_origem_proced_w        := '';
	nr_sequencia_prescricao_w := '';
	nr_acesso_dicom_w         := '';
	cd_tipo_procedimento_w    := '';
	nr_seq_proc_interno_w     := '';
	nr_laudo_w                := '';
	cd_protocolo_w            := '';
	nm_usuario_aprovacao_w    := '';
	ie_status_execucao_w      := '';
	dt_laudo_ditado_w         := '';
	ie_controle_digitacao_w   := '';
	ie_controle_ditado_w      := '';
	ie_controle_status_w      := '';

  if (qt_pos_separador_w = 0) then
    nr_laudo_lista_w := (ds_possib_w)::numeric;
    qt_pos_separador_w := -1;
  else
    nr_laudo_lista_w := (substr(ds_possib_w,1,qt_pos_separador_w-1))::numeric;
  end if;

	open c01;
	loop
	fetch c01 INTO  cd_pessoa_fisica_w,
					nm_pessoa_fisica_w,
					nr_prontuario_w,
					cd_estabelecimento_w,
					cd_setor_atendimento_w,
					cd_setor_execucao_w,
					nr_atendimento_w,
					nr_prescricao_w,
					nr_seq_interno_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					nr_sequencia_prescricao_w,
					nr_acesso_dicom_w,
					cd_tipo_procedimento_w,
					nr_seq_proc_interno_w,
					nr_laudo_w,
					cd_protocolo_w,
					nm_usuario_aprovacao_w,
					ie_status_execucao_w,
					dt_laudo_ditado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	  begin
	  ie_retorno_w := ie_retorno_w || cd_pessoa_fisica_w ||',';
	  ie_retorno_w := ie_retorno_w || nm_pessoa_fisica_w ||',';
	  ie_retorno_w := ie_retorno_w || nr_prontuario_w ||',';
	  ie_retorno_w := ie_retorno_w || cd_estabelecimento_w ||',';
	  ie_retorno_w := ie_retorno_w || cd_setor_atendimento_w ||',';
	  ie_retorno_w := ie_retorno_w || cd_setor_execucao_w||',';
	  ie_retorno_w := ie_retorno_w || nr_atendimento_w||',';
	  ie_retorno_w := ie_retorno_w || nr_prescricao_w||',';
	  ie_retorno_w := ie_retorno_w || nr_seq_interno_w||',';
	  ie_retorno_w := ie_retorno_w || cd_procedimento_w ||',';
	  ie_retorno_w := ie_retorno_w || ie_origem_proced_w ||',';
	  ie_retorno_w := ie_retorno_w || nr_sequencia_prescricao_w ||',';
	  ie_retorno_w := ie_retorno_w || nr_acesso_dicom_w||',';
	  ie_retorno_w := ie_retorno_w || cd_tipo_procedimento_w ||',';
	  ie_retorno_w := ie_retorno_w || nr_seq_proc_interno_w ||',';
	  ie_retorno_w := ie_retorno_w || nr_laudo_w ||',';
	  ie_retorno_w := ie_retorno_w || cd_protocolo_w||',';
	  ie_retorno_w := ie_retorno_w || nm_usuario_aprovacao_w ||',';
	  ie_retorno_w := ie_retorno_w || ie_status_execucao_w ||',';
	  ie_retorno_w := ie_retorno_w || dt_laudo_ditado_w ||';';


	  end;
	end loop;
	close c01;

  if (qt_pos_separador_w > 0 ) then
     ds_possib_w		:= substr(ds_possib_w,qt_pos_separador_w+1,length(ds_possib_w));
     qt_pos_separador_w 	:= position(',' in ds_possib_w);
  end if;

	qt_controle_w		:= qt_controle_w + 1;
end loop;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_info_multipla_aprovacao (ds_nr_laudo_lista_p text) FROM PUBLIC;

