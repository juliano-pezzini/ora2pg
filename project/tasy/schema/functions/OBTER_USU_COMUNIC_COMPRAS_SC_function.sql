-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_usu_comunic_compras_sc ( nr_solic_compra_p bigint, cd_evento_p bigint, nr_seq_regra_evento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE

 
cd_estabelecimento_w			smallint;
nr_seq_evento_w				bigint;
nm_usuarios_w				varchar(255) := '';
ie_usuario_w				varchar(03);
nm_usuario_solicitante_w			varchar(15);
nm_usuario_del_solicitante_w			varchar(15);
nm_usuario_item_solic_w			varchar(15);
nm_usuario_del_comprador_w		varchar(15);
nm_usuario_solic_padrao_w			varchar(15);
nm_usuario_del_solic_padrao_w		varchar(15);
nm_usuario_comprador_padrao_w		varchar(15);
nm_usuario_resp_compras_w			varchar(15);
nm_usuario_compr_resp_w			varchar(15);
nm_usuario_lib_w				varchar(15);
nm_usuarios_adic_w			varchar(255);
	
c01 CURSOR FOR 
SELECT	distinct ie_usuario 
from	regra_envio_comunic_usu 
where	nr_seq_evento = nr_seq_evento_w 
and	nr_seq_evento = nr_seq_regra_evento_p;


BEGIN 
 
if (cd_evento_p = 16) then 
 
	select	cd_estabelecimento, 
		substr(obter_usuario_pessoa(cd_pessoa_solicitante),1,15), 
		substr(obter_usuario_pessoa(obter_pessoa_delegacao(cd_pessoa_solicitante,'RC',clock_timestamp())),1,15), 
		substr(obter_usuario_pessoa(cd_comprador_resp),1,15), 
		substr(obter_usuario_pessoa(obter_pessoa_delegacao(cd_comprador_resp,'RC',clock_timestamp())),1,15), 
		nm_usuario_lib 
	into STRICT	cd_estabelecimento_w, 
		nm_usuario_solicitante_w, 
		nm_usuario_del_solicitante_w, 
		nm_usuario_compr_resp_w, 
		nm_usuario_del_comprador_w, 
		nm_usuario_lib_w 
	from	solic_compra 
	where	nr_solic_compra = nr_solic_compra_p;
	 
	select	max(nm_usuario) 
	into STRICT	nm_usuario_item_solic_w 
	from	solic_compra_item 
	where	nr_solic_compra = nr_solic_compra_p;
 
	select	nm_usuario_lib 
	into STRICT	nm_usuario_lib_w 
	from	solic_compra 
	where	nr_solic_compra = nr_solic_compra_p;
			 
	select	substr(obter_usuario_pessoa(cd_pessoa_solic_padrao),1,15), 
		substr(obter_usuario_pessoa(obter_pessoa_delegacao(cd_pessoa_solic_padrao,'RC',clock_timestamp())),1,15), 
		substr(obter_usuario_pessoa(cd_comprador_padrao),1,15), 
		substr(obter_usuario_pessoa(cd_responsavel_compras),1,15) 
	into STRICT	nm_usuario_solic_padrao_w, 
		nm_usuario_del_solic_padrao_w, 
		nm_usuario_comprador_padrao_w, 
		nm_usuario_resp_compras_w 
	from	parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
	 
	select	coalesce(max(b.nr_sequencia),0), 
		max(b.nm_usuarios_adic) 
	into STRICT	nr_seq_evento_w, 
		nm_usuarios_adic_w 
	from	regra_envio_comunic_compra a, 
		regra_envio_comunic_evento b 
	where	a.nr_sequencia = b.nr_seq_regra 
	and	b.cd_evento = cd_evento_p 
	and	a.cd_estabelecimento = cd_estabelecimento_w 
	and	b.nr_sequencia = nr_seq_regra_evento_p;
	 
	open C01;
	loop 
	fetch C01 into	 
		ie_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (ie_usuario_w = 'SSC') and (nm_usuario_solicitante_w IS NOT NULL AND nm_usuario_solicitante_w::text <> '') and (obter_se_contido_char(nm_usuario_solicitante_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_solicitante_w || ',',1,255);
		elsif (ie_usuario_w = 'UDS') and (nm_usuario_del_solicitante_w IS NOT NULL AND nm_usuario_del_solicitante_w::text <> '') and (obter_se_contido_char(nm_usuario_del_solicitante_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_del_solicitante_w || ',',1,255);
		elsif (ie_usuario_w = 'CRS') and (nm_usuario_compr_resp_w IS NOT NULL AND nm_usuario_compr_resp_w::text <> '') and (obter_se_contido_char(nm_usuario_compr_resp_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_compr_resp_w || ',',1,255);	
		elsif (ie_usuario_w = 'UDC') and (nm_usuario_del_comprador_w IS NOT NULL AND nm_usuario_del_comprador_w::text <> '') and (obter_se_contido_char(nm_usuario_del_comprador_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_del_comprador_w || ',',1,255);
		elsif (ie_usuario_w = 'SPC') and (nm_usuario_solic_padrao_w IS NOT NULL AND nm_usuario_solic_padrao_w::text <> '') and (obter_se_contido_char(nm_usuario_solic_padrao_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_solic_padrao_w || ',',1,255);
		elsif (ie_usuario_w = 'UDS') and (nm_usuario_del_solic_padrao_w IS NOT NULL AND nm_usuario_del_solic_padrao_w::text <> '') and (obter_se_contido_char(nm_usuario_del_solic_padrao_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_del_solic_padrao_w || ',',1,255);
		elsif (ie_usuario_w = 'CPC') and (nm_usuario_comprador_padrao_w IS NOT NULL AND nm_usuario_comprador_padrao_w::text <> '') and (obter_se_contido_char(nm_usuario_comprador_padrao_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_comprador_padrao_w || ',',1,255);
		elsif (ie_usuario_w = 'RSC') and (nm_usuario_resp_compras_w IS NOT NULL AND nm_usuario_resp_compras_w::text <> '') and (obter_se_contido_char(nm_usuario_resp_compras_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_resp_compras_w || ',',1,255);
		elsif (ie_usuario_w = 'USI') and (nm_usuario_item_solic_w IS NOT NULL AND nm_usuario_item_solic_w::text <> '') and (obter_se_contido_char(nm_usuario_item_solic_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_item_solic_w || ',',1,255);
		elsif (ie_usuario_w = 'ULS') and (nm_usuario_lib_w IS NOT NULL AND nm_usuario_lib_w::text <> '') and (obter_se_contido_char(nm_usuario_lib_w,nm_usuarios_w) = 'N') then 
			nm_usuarios_w := substr(nm_usuarios_w || nm_usuario_lib_w || ',',1,255);			
		end if;		
		end;
	end loop;
	close C01;
end if;
 
nm_usuarios_w := substr(nm_usuarios_w || nm_usuarios_adic_w,1,255);
 
return	nm_usuarios_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_usu_comunic_compras_sc ( nr_solic_compra_p bigint, cd_evento_p bigint, nr_seq_regra_evento_p bigint, nm_usuario_p text) FROM PUBLIC;

