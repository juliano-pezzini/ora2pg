-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION gather_eligibility_values ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_social_segurity_p text, cd_insurance_p atend_categoria_convenio.cd_convenio%type) RETURNS text AS $body$
DECLARE


json_data_w		text;			
ds_clob_return		text;
json_w			philips_json;
cuit_prestador_aux_w	pessoa_juridica.cd_cgc%type;
cuit_prestador_w	pessoa_juridica.cd_rfc%type;	
matric_efec_nac_w	atendimento_paciente.cd_medico_resp%type;		
cd_usuario_convenio_w	atend_categoria_convenio.cd_usuario_convenio%type;
cd_complemento_w	atend_categoria_convenio.cd_complemento%type;
cd_convenio_w		atend_categoria_convenio.cd_convenio%type;
nr_dni_w		pessoa_fisica.nr_identidade%type;
dt_entrada_w		atendimento_paciente.dt_entrada%type;		
dt_atualizacao_w	atendimento_paciente.dt_atualizacao%type;


BEGIN

select  obter_cgc_estabelecimento(obter_estabelecimento_ativo)
into STRICT    cuit_prestador_aux_w
;

select  max(cd_rfc)
into STRICT    cuit_prestador_w
from    pessoa_juridica
where   cd_cgc = cuit_prestador_aux_w;

begin
    select  obter_crm_medico(cd_medico_resp),
            dt_entrada,
            dt_atualizacao
    into STRICT    matric_efec_nac_w,
            dt_entrada_w,
            dt_atualizacao_w
    from    atendimento_paciente
    where   nr_atendimento = nr_atendimento_p;
    exception
        when no_data_found or data_exception or too_many_rows then
            matric_efec_nac_w := null;
            dt_entrada_w := null;
            dt_atualizacao_w := null;
end;

begin
	select  cd_usuario_convenio,
            cd_complemento
	into STRICT    cd_usuario_convenio_w,
            cd_complemento_w
	from	atend_categoria_convenio
	where	nr_atendimento = nr_atendimento_p;
	exception
        when no_data_found or data_exception or too_many_rows then
            cd_usuario_convenio_w := 0;
            cd_complemento_w := 0;
end;

begin
    select  nr_identidade
    into STRICT    nr_dni_w
    from    pessoa_fisica
    where   cd_pessoa_fisica = cd_pessoa_fisica_p;
    exception
            when no_data_found or data_exception or too_many_rows then
            nr_dni_w := null;
end;

json_w := philips_json();
json_w.put(pair_name =>'EstablishmentCgc', pair_value => cuit_prestador_w);
json_w.put(pair_name =>'DoctorRegistration', pair_value => matric_efec_nac_w);
json_w.put(pair_name =>'BeneficiaryNumber', pair_value => coalesce(nr_social_segurity_p,cd_usuario_convenio_w));
json_w.put(pair_name =>'SegCode', pair_value => cd_complemento_w);
json_w.put(pair_name =>'TypeOfDocument', pair_value => 1);
json_w.put(pair_name =>'DocumentNumber', pair_value => nr_dni_w);
json_w.put(pair_name =>'ProvisionDate', pair_value => dt_entrada_w);
json_w.put(pair_name =>'InsuranceCode', pair_value => cd_insurance_p);
json_w.put(pair_name =>'SystemDate', pair_value => dt_atualizacao_w);
dbms_lob.createtemporary(lob_loc => json_data_w, cache => true);
json_w.(json_data_w);

ds_clob_return := json_data_w;

return ds_clob_return;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION gather_eligibility_values ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_social_segurity_p text, cd_insurance_p atend_categoria_convenio.cd_convenio%type) FROM PUBLIC;

