-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_esp_atua_guia_medico ( cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_prestador_p text, nr_seq_pres_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter informações quanto as especialidades e áreas de atuação dos prestadores
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:

 +=+=+=+=+=+=+=+=+=+=+=+=	NÃO UTILIZAR MAIS !	=+=+=+=+=+=+=+=+=+

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(80);
ie_guia_medico_w	varchar(80)	:= 'S';
qt_analise_w		bigint;
cd_area_atuacao_w	smallint;
cd_especialidade_w	smallint;
ie_tipo_prestador_w	varchar(2);


BEGIN
if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	select	max(b.ie_guia_medico)
	into STRICT 	ie_guia_medico_w
	from	pls_cooperado_ausencia 		b,
		pls_cooperado 			c
	where	b.nr_seq_cooperado		= c.nr_sequencia
	and	((clock_timestamp() between b.dt_inicio 	and b.dt_fim)
	or (coalesce(b.dt_fim::text, '') = '' and clock_timestamp() 	>= b.dt_inicio))
	and	c.cd_cgc 			= cd_cgc_p;

elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	select	max(b.ie_guia_medico)
	into STRICT 	ie_guia_medico_w
	from	pls_cooperado_ausencia 		b,
		pls_cooperado 			c
	where	b.nr_seq_cooperado		= c.nr_sequencia
	and	((clock_timestamp() between b.dt_inicio 	and b.dt_fim)
	or (coalesce(b.dt_fim::text, '') = '' and clock_timestamp() 	>= b.dt_inicio))
	and	c.cd_pessoa_fisica		= cd_pessoa_fisica_p;
end if;

if (coalesce(ie_guia_medico_w::text, '') = '') then
	ie_guia_medico_w := 'S';
end if;

if (ie_guia_medico_w = 'S') then
	if (ie_opcao_p = 'IE_GUIA_ESPEC') then
		select	max(b.ie_guia_medico_espec),
			max(b.cd_especialidade),
			max(a.ie_tipo_prestador)
		into STRICT	ds_retorno_w,
			cd_especialidade_w,
			ie_tipo_prestador_w
		from	ptu_prestador_espec	b,
			ptu_prestador		a
		where	b.nr_seq_prestador	= a.nr_sequencia
		and	b.nr_seq_apres		= nr_seq_pres_p
		and	a.nr_sequencia		= nr_seq_prestador_p;

		if (coalesce(ds_retorno_w::text, '') = '') or (cd_especialidade_w = 0) or (coalesce(cd_especialidade_w::text, '') = '') then
			ds_retorno_w := ' ';
		end if;
	elsif (ie_opcao_p = 'IE_GUIA_ATUA') then
		select	max(b.ie_guia_medico_atuacao),
			max(b.cd_area_atuacao),
			max(a.ie_tipo_prestador)
		into STRICT	ds_retorno_w,
			cd_area_atuacao_w,
			ie_tipo_prestador_w
		from	ptu_prestador_espec	b,
			ptu_prestador		a
		where	b.nr_seq_prestador	= a.nr_sequencia
		and	b.nr_seq_apres		= nr_seq_pres_p
		and	a.nr_sequencia		= nr_seq_prestador_p;

		if (coalesce(ds_retorno_w::text, '') = '') or (cd_area_atuacao_w = 0) then
			ds_retorno_w	:= ' ';
		end if;
	end if;

elsif (ie_guia_medico_w = 'N') then
	ds_retorno_w	:= 'N';
end if;

if (ie_opcao_p = 'IE_GUIA_ESPEC') then
	select	count(1)
	into STRICT	qt_analise_w
	from	pls_prestador_med_espec	c,
		ptu_prestador_espec	b,
		ptu_prestador		a,
		ptu_movimento_prestador	d
	where	d.nr_sequencia		= a.nr_seq_movimento
	and	a.nr_sequencia		= b.nr_seq_prestador
	and	a.nr_seq_prestador	= c.nr_seq_prestador
	and	c.cd_especialidade	= b.cd_especialidade_tasy
	and	b.cd_especialidade	= 99
	and	b.ie_guia_medico_espec	= 'N'
	and	c.ie_guia_medico	= 'S'
	and	b.nr_seq_apres		= nr_seq_pres_p
	and	a.nr_sequencia		= nr_seq_prestador_p
	and	d.dt_referencia between trunc(coalesce(c.dt_inicio_vigencia, d.dt_referencia), 'dd') and fim_dia(coalesce(c.dt_fim_vigencia, d.dt_referencia));

	if (qt_analise_w > 0) then
		ds_retorno_w	:= 'S';
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_esp_atua_guia_medico ( cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_prestador_p text, nr_seq_pres_p bigint, ie_opcao_p text) FROM PUBLIC;

