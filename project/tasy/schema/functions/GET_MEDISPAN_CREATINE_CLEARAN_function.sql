-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_medispan_creatine_clearan ( nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE) RETURNS bigint AS $body$
DECLARE


	EXEC_W					varchar(2000);
	qt_clearence_w			pac_clereance_creatinina.qt_clearence_medido%type;
	qt_creatinina_serica_w	pac_clereance_creatinina.qt_creatinina_serica%type;	
	qt_cockcroft_gault_w	pac_clereance_creatinina.qt_cockcroft_gault%type;
	qt_schwartz_w			pac_clereance_creatinina.qt_schwartz%type;
	vl_mult_w				double precision;
	vl_const_schwartz_w		double precision;
	qt_anos_w				bigint;
	ds_sexo_pf_w			varchar(100);
	

BEGIN

	if (coalesce(nr_atendimento_p,0) > 0) then
		begin
			/* RETORNO DE INTEGRACAO LABORATORIAL */

			select 	max(to_number(trim(both resultado), '999999999D999999999', 'NLS_NUMERIC_CHARACTERS = ''.,'''))
			  into STRICT 	qt_clearence_w
			  from (
					SELECT 	b.dt_resultado,
							trim(both lab_obter_resultado_exame(a.nr_seq_resultado, a.nr_sequencia)) as resultado
					  from 	exame_lab_result_item a,
							exame_lab_resultado b,
							table(lista_pck.obter_lista(get_medispan_seq_exame_creatin('PAC_CLEREANCE_CREATININA', 'QT_CLEARENCE_MEDIDO', 39))) x
					 where 	a.nr_seq_resultado = b.nr_seq_resultado
					   and 	a.nr_seq_exame = x.nr_registro
					   and  b.nr_atendimento = nr_atendimento_p
					   and 	trim(both lab_obter_resultado_exame(a.nr_seq_resultado, a.nr_sequencia)) is not null
					 order by b.dt_resultado desc
					) alias12 LIMIT 1;
		exception
			when others then
				/* ALGUNS RESULTADOS DE EXAME VEM COM LETRAS E INVALIDA TODA A INTEGRACAO */

				qt_clearence_w := 0;
		end;

		/* CALCULAR A CLEARENCE COM BASE NO RESULTADO DA SERUM */

		if ((coalesce(qt_clearence_w, 0) = 0) and (coalesce(cd_pessoa_fisica_p,'XPTO') <> 'XPTO')) then
			qt_creatinina_serica_w := get_medispan_creatine_serum(nr_atendimento_p, cd_pessoa_fisica_p);

			if (coalesce(qt_creatinina_serica_w, 0) > 0) then
				select	max((obter_idade(coalesce(x.dt_nascimento, clock_timestamp()), coalesce(x.dt_obito, clock_timestamp()), 'A'))::numeric )
				  into STRICT	qt_anos_w
				  from	pessoa_fisica x
				 where	x.cd_pessoa_fisica = cd_pessoa_fisica_p;	

				ds_sexo_pf_w := obter_sexo_pf(cd_pessoa_fisica_p, 'C');

				if (qt_anos_w >= 16) then
					select	coalesce(CASE WHEN ds_sexo_pf_w='F' THEN  0.85  ELSE 1 END , 1)
					  into STRICT	vl_mult_w
					;

					begin
						EXEC_W := 'CALL PAC_CLEREANCE_CR_BEF_MD_PCK.OBTER_COCKCRIFT_GAULT_MD(:1,:2,:3,:4) INTO :result';

						EXECUTE EXEC_W USING IN qt_anos_w,
													   IN obter_sinal_vital(nr_atendimento_p, 'PESO'),
													   IN qt_creatinina_serica_w,
													   IN vl_mult_w,
													   OUT qt_cockcroft_gault_w;
					exception
						when others then
							qt_cockcroft_gault_w := null;
					end;
					
					if (coalesce(qt_cockcroft_gault_w, 0) > 0) then
						qt_clearence_w := qt_cockcroft_gault_w;
					end if;
				else
					begin
						EXEC_W := 'CALL PAC_CLEREANCE_CR_BEF_MD_PCK.OBTER_CONST_SCHWARTZ_MD(:1,:2,:3) INTO :result';

						EXECUTE EXEC_W USING IN obter_se_atend_rn(nr_atendimento_p),
													   IN qt_anos_w,
													   IN ds_sexo_pf_w,
													   OUT vl_const_schwartz_w;
					exception
						when others then
							vl_const_schwartz_w := null;
					end;
					
					begin
						EXEC_W := 'CALL PAC_CLEREANCE_CR_BEF_MD_PCK.OBTER_SCHWARTZ_MD(:1,:2,:3) INTO :result';

						EXECUTE EXEC_W USING IN vl_const_schwartz_w,
													   IN obter_sinal_vital(nr_atendimento_p, 'ALTURA'),
													   IN qt_creatinina_serica_w,
													   OUT qt_schwartz_w;
					exception
						when others then
							qt_schwartz_w := null;
					end;

					if (coalesce(qt_schwartz_w, 0) > 0) then
						qt_clearence_w := qt_schwartz_w;
					end if;
				end if;
			end if;
		end if;

		/* CADASTRO DE ESCALAS E INDICES - QT_CLEARENCE_MEDIDO */

		if (coalesce(qt_clearence_w, 0) = 0) then
			select	max(a.qt_clearence_medido)
			  into STRICT	qt_clearence_w
			  from	pac_clereance_creatinina a
			 where	a.nr_sequencia	= (	SELECT	max(x.nr_sequencia)
										  from	pac_clereance_creatinina x
										 where	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
										   and 	coalesce(x.ie_situacao,'A') = 'A'
										   and	x.nr_atendimento = nr_atendimento_p);
		end if;
	end if;
	
	if (coalesce(qt_clearence_w, 0) = 0) then
		/* RETORNO PADRAO - CALCULO AUTOMATICO DO TASY */

		qt_clearence_w := obter_qt_clear_creatinina(nr_atendimento_p, cd_pessoa_fisica_p);
	end if;

	return qt_clearence_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_medispan_creatine_clearan ( nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE) FROM PUBLIC;

