-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_esas ( ie_opcao_p text, dt_inicio_p timestamp, dt_final_p timestamp, ds_filtro_p text default null) RETURNS bigint AS $body$
DECLARE

/* 
Total de avaliaçãoes			'TA' 
Total de avaliaçãoes antes da acupuntura	'TT' 
Total de avaliaçãoes depois da acupuntura	'TD' 
*/
			 
qt_retorno_w	bigint;
	

BEGIN 
 
If (ie_opcao_p = 'TA') then 
	 
	select 	count(*) 
	into STRICT	qt_retorno_w	 
	from	escala_edmonton a, 
		atendimento_paciente b 
	where	a.nr_atendimento = b.nr_atendimento 
	and	coalesce(a.dt_inativacao::text, '') = '' 
	and	trunc(a.dt_avaliacao) between trunc(dt_inicio_p) and trunc(coalesce(dt_final_p,dt_inicio_p));
	 
elsif (ie_opcao_p = 'TT') then 
	 
	select 	count(*) 
	into STRICT	qt_retorno_w	 
	from	escala_edmonton a, 
		atendimento_paciente b 
	where	a.nr_atendimento = b.nr_atendimento 
	and	coalesce(a.dt_inativacao::text, '') = '' 
	and	trunc(a.dt_avaliacao) between trunc(dt_inicio_p) and trunc(coalesce(dt_final_p,dt_inicio_p)) 
 	and	not exists ( 	SELECT	1 
				from	pe_prescricao x, 
					pe_prescr_proc y 
				where	y.nr_seq_prescr = x.nr_sequencia 
				and	x.nr_atendimento = a.nr_atendimento 
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '') 
				and	coalesce(x.dt_inativacao::text, '') = '' 
				and	(x.nr_prescricao IS NOT NULL AND x.nr_prescricao::text <> '') 
				and	UPPER(obter_desc_intervencoes(y.nr_seq_proc)) like('%ACUPUNTURA%') 
				and	TRUNC(x.dt_prescricao) < TRUNC(a.dt_avaliacao));
 
elsif (ie_opcao_p = 'TD') then 
 
	select 	count(*) 
	into STRICT	qt_retorno_w	 
	from	escala_edmonton a, 
		atendimento_paciente b 
	where	a.nr_atendimento = b.nr_atendimento 
	and	coalesce(a.dt_inativacao::text, '') = '' 
	and	trunc(a.dt_avaliacao) between trunc(dt_inicio_p) and trunc(coalesce(dt_final_p,dt_inicio_p)) 
 	and	exists ( 	SELECT	1 
				from	pe_prescricao x, 
					pe_prescr_proc y 
				where	y.nr_seq_prescr = x.nr_sequencia 
				and	x.nr_atendimento = a.nr_atendimento 
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '') 
				and	coalesce(x.dt_inativacao::text, '') = '' 
				and	(x.nr_prescricao IS NOT NULL AND x.nr_prescricao::text <> '') 
				and	UPPER(obter_desc_intervencoes(y.nr_seq_proc)) like('%ACUPUNTURA%') 
				and	TRUNC(x.dt_prescricao) <= TRUNC(a.dt_avaliacao));
 
	 
end if;
 
return	qt_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_esas ( ie_opcao_p text, dt_inicio_p timestamp, dt_final_p timestamp, ds_filtro_p text default null) FROM PUBLIC;

