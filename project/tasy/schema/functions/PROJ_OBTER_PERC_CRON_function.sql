-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION proj_obter_perc_cron ( nr_seq_projeto_p bigint, ie_tipo_percentual_p text, ie_cronograma_desenv_p text default 'N') RETURNS bigint AS $body$
DECLARE

/* ie_tipo_percentual_p
	T - Previsão conforme os dias do projeto
	P - Previsão conforme as horas do projeto
	R - Realizado conforme as horas do projeto
 */
pr_retorno_w			double precision := 0;
pr_realizacao_w			double precision := 0;
pr_previsao_w			double precision := 0;
dt_inicio_real_w		timestamp;
dt_fim_prev_w			timestamp;
qt_dias_uteis_w			bigint;
qt_hora_prev_proj_w		double precision;
pr_prev_dia_w			double precision := 0;
pr_por_dia_w			double precision;
qt_hora_prev_por_dia_w		double precision;
qt_dias_trab_w			bigint;
dt_fim_real_w			timestamp;
ie_status_w			varchar(5);
qt_reg_w			bigint;


BEGIN
if (nr_seq_projeto_p IS NOT NULL AND nr_seq_projeto_p::text <> '') then
	begin

	if (ie_cronograma_desenv_p	= 'S') and (ie_tipo_percentual_p	= 'R') then

		select	count(*)
		into STRICT	qt_reg_w
		from	proj_cronograma
		where	nr_seq_proj = nr_seq_projeto_p
		and		(dt_aprovacao IS NOT NULL AND dt_aprovacao::text <> '')
		and		coalesce(ie_situacao,'A') = 'A';

			if (qt_reg_w	> 0) then
				return obter_pr_real_projeto(nr_seq_projeto_p);
			end if;

	end if;



	select	a.dt_inicio_real,
		a.dt_fim_prev,
		proj_obter_qt_total_horas_cron(a.nr_sequencia, 0, 'T', 'E'),
		a.dt_fim_real,
		a.ie_status
	into STRICT	dt_inicio_real_w,
		dt_fim_prev_w,
		qt_hora_prev_proj_w,
		dt_fim_real_w,
		ie_status_w
	from	proj_projeto a
	where	a.nr_sequencia = nr_seq_projeto_p;

	if (dt_inicio_real_w IS NOT NULL AND dt_inicio_real_w::text <> '') and (dt_fim_prev_w IS NOT NULL AND dt_fim_prev_w::text <> '') then

		qt_dias_uteis_w	:= OBTER_DIAS_UTEIS_PERIODO(dt_inicio_real_w, dt_fim_prev_w, 1);

		select	dividir(100, qt_dias_uteis_w),
			dividir(qt_hora_prev_proj_w, qt_dias_uteis_w)
		into STRICT	pr_por_dia_w,
			qt_hora_prev_por_dia_w
		;

		if (ie_status_w <> 'F') then
			qt_dias_trab_w	:= OBTER_DIAS_UTEIS_PERIODO(dt_inicio_real_w, clock_timestamp(), 1);
		else
			qt_dias_trab_w	:= OBTER_DIAS_UTEIS_PERIODO(dt_inicio_real_w, coalesce(dt_fim_real_w,dt_inicio_real_w), 1);
		end if;

		pr_prev_dia_w		:= (pr_por_dia_w * qt_dias_trab_w);
	end if;

	begin
	select	coalesce(pr_realizacao,0),
		coalesce(pr_previsao,0)
	into STRICT	pr_realizacao_w,
		pr_previsao_w
	from	proj_cronograma	a
	where	a.nr_seq_proj = nr_seq_projeto_p
	and	a.ie_tipo_cronograma = 'E'
	and	coalesce(ie_situacao, 'A') = 'A'
	--and	dt_aprovacao is not null
	and	a.nr_sequencia = (
				SELECT	max(b.nr_sequencia)
				from	proj_cronograma b
				where	b.nr_seq_proj = nr_seq_projeto_p
				and	coalesce(ie_situacao, 'A') = 'A'
				and	b.ie_tipo_cronograma = 'E'
				and	((ie_cronograma_desenv_p = 'S' and b.ie_classificacao = 'D') or (ie_cronograma_desenv_p <> 'S' or coalesce(ie_cronograma_desenv_p::text, '') = ''))
				--and	b.dt_aprovacao is not null);
				);
	exception
	when others then
		pr_realizacao_w	:= 0;
		pr_previsao_w	:= 0;
		pr_retorno_w	:= 0;
	end;

	if (ie_tipo_percentual_p = 'T') then
		pr_retorno_w := pr_prev_dia_w;
	elsif (ie_tipo_percentual_p = 'P') then
		pr_retorno_w := pr_previsao_w;
	else
		pr_retorno_w := pr_realizacao_w;
	end if;
	end;
end if;
return pr_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION proj_obter_perc_cron ( nr_seq_projeto_p bigint, ie_tipo_percentual_p text, ie_cronograma_desenv_p text default 'N') FROM PUBLIC;

