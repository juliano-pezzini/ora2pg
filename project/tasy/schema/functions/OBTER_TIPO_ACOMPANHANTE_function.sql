-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tipo_acompanhante (nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


    ie_acompanhante_w   varchar(1) := null;
    ie_tipo_acomp_w     varchar(3) := null;


BEGIN
    if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
        select CASE WHEN count(coalesce(a.nr_acompanhante, b.nr_acompanhante))=0 THEN  'N'  ELSE 'S' END  ie_acompanhante
        into STRICT    ie_acompanhante_w
        from  atend_paciente_unidade  a,
                atendimento_acompanhante b
        where  b.ie_alojamento = 'S'
        and (coalesce(b.dt_saida::text, '') = '' or b.dt_saida > clock_timestamp())
        and     a.nr_atendimento =  b.nr_atendimento
        and     b.nr_atendimento = nr_atendimento_p
        and     b.nr_acompanhante = (SELECT max(c.nr_acompanhante)
		                        from atendimento_acompanhante c
	                                        where c.nr_atendimento = b.nr_atendimento);

        if (ie_acompanhante_w = 'S') then -- CA (Com acompanhamento em alojamento)
            ie_tipo_acomp_w := 'CA';
        else
            select CASE WHEN count(coalesce(a.nr_acompanhante, b.nr_acompanhante))=0 THEN  'N'  ELSE 'S' END  ie_acompanhante
            into STRICT    ie_acompanhante_w
            from  atend_paciente_unidade  a,
                    atendimento_acompanhante b
            where (coalesce(b.dt_saida::text, '') = '' or b.dt_saida > clock_timestamp())
            and     a.nr_atendimento =  b.nr_atendimento
            and     b.nr_atendimento = nr_atendimento_p
            and     b.nr_acompanhante = (SELECT max(c.nr_acompanhante)
		                           from atendimento_acompanhante c
	                                          where c.nr_atendimento = b.nr_atendimento);

            if (ie_acompanhante_w = 'S') then -- SA (Com acompanhante sem alojamento)
                ie_tipo_acomp_w := 'SA';
            else
                ie_tipo_acomp_w := 'SAC';  -- SAC (Sem acompanhante)
            end if;
        end if;
    end if;

    return ie_tipo_acomp_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tipo_acompanhante (nr_atendimento_p bigint) FROM PUBLIC;

