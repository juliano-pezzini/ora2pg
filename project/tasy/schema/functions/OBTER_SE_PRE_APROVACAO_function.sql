-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_pre_aprovacao ( nr_solic_compra_p bigint) RETURNS varchar AS $body$
DECLARE

 
cd_estabelecimento_w			smallint;			
ie_pre_aprovacao_w			varchar(1) := 'N';
ie_considerar_param_w			varchar(1) := 'S';	
cd_material_w				integer;
cd_grupo_material_w			smallint;
cd_subgrupo_material_w			smallint;
cd_classe_material_w			integer;
ie_consiste_qt_maior_w			varchar(1);
qt_material_w				double precision;
qt_estoque_maximo_w			double precision;
dt_pre_aprovacao_w			timestamp;

c01 CURSOR FOR 
SELECT	b.cd_material, 
	b.qt_material, 
	obter_mat_estabelecimento(a.cd_estabelecimento, a.cd_estabelecimento, b.cd_material, 'MA') 
from	solic_compra a, 
	solic_compra_item b 
where	a.nr_solic_compra = b.nr_solic_compra 
and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
and	coalesce(a.dt_pre_aprovacao::text, '') = '' 
and	coalesce(a.dt_autorizacao::text, '') = '' 
and	coalesce(a.dt_baixa::text, '') = '' 
and	coalesce(a.nr_seq_motivo_cancel::text, '') = '' 
and	coalesce(b.dt_reprovacao::text, '') = '' 
and	a.nr_solic_compra = nr_solic_compra_p 
and	coalesce(dt_pre_aprovacao_w::text, '') = '';

c02 CURSOR FOR 
SELECT	ie_consiste_qt_maior, 
	coalesce(ie_considerar_param,'S') 
from	regra_pre_aprovacao_compra 
where	cd_estabelecimento = cd_estabelecimento_w 
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w 
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w 
and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w 
and (coalesce(cd_material, cd_material_w) = cd_material_w or cd_material_w = 0) 
order by 
	coalesce(cd_material, 0), 
	coalesce(cd_classe_material, 0), 
	coalesce(cd_subgrupo_material, 0), 
	coalesce(cd_grupo_material, 0);
	

BEGIN 
 
select	cd_estabelecimento, 
	dt_pre_aprovacao 
into STRICT	cd_estabelecimento_w, 
	dt_pre_aprovacao_w 
from	solic_compra 
where	nr_solic_compra = nr_solic_compra_p;
 
open C01;
loop 
fetch C01 into	 
	cd_material_w, 
	qt_material_w, 
	qt_estoque_maximo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	cd_grupo_material, 
		cd_subgrupo_material, 
		cd_classe_material 
	into STRICT	cd_grupo_material_w, 
		cd_subgrupo_material_w, 
		cd_classe_material_w 
	from	estrutura_material_v 
	where	cd_material = cd_material_w;
	 
	open C02;
	loop 
	fetch C02 into	 
		ie_consiste_qt_maior_w, 
		ie_considerar_param_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		 
		if (ie_considerar_param_w = 'N') then 
			ie_pre_aprovacao_w := 'S';
		elsif (ie_pre_aprovacao_w = 'N') and (ie_consiste_qt_maior_w = 'S') and (qt_material_w > qt_estoque_maximo_w) then 
			 
			ie_pre_aprovacao_w := 'S';
		end if;			
		 
		 
		end;
	end loop;
	close C02;	
	 
	end;
end loop;
close C01;
 
return	ie_pre_aprovacao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pre_aprovacao ( nr_solic_compra_p bigint) FROM PUBLIC;

