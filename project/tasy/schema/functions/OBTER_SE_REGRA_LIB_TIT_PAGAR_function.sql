-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_regra_lib_tit_pagar (nr_titulo_p text, nm_usuario_p text, cd_perfil_p bigint) RETURNS varchar AS $body$
DECLARE


ds_resultado_w		varchar(1);
ds_result_usuario_w	varchar(1);
ds_result_perfil_w	varchar(1);

cd_estabelecimento_w	smallint;
ie_tipo_pessoa_w	varchar(1);
vl_titulo_w		double precision;
qt_regra_w		bigint;
nr_seq_regra_w		bigint;
cd_tipo_pessoa_w	smallint;
nr_seq_nota_fiscal_w	bigint;
cd_cgc_w		varchar(255);
qt_usuario_w		bigint;
qt_perfil_w		bigint;
ie_nivel_w		bigint;
qt_nivel_menor_w	bigint;
ie_nivel_lib_w		varchar(1);
dt_emissao_w		timestamp;
ie_nivel_menor_w	bigint;
ie_liberar_w		bigint;
nr_seq_proj_rec_w	bigint;
ie_tipo_titulo_w	varchar(2);
nr_seq_classe_w		bigint;
ie_origem_titulo_w	varchar(10);
cd_operacao_nf_w	nota_fiscal.cd_operacao_nf%type;
vl_total_nota_w		nota_fiscal.vl_total_nota%type;
nr_ordem_compra_w	nota_fiscal.nr_ordem_compra%type;

dt_emissao_ini_w	timestamp;
dt_emissao_fim_w	timestamp;
ie_regra_obtida_w	varchar(1)	:= 'N';


BEGIN

select	count(*)
into STRICT	qt_regra_w
from	regra_lib_tit_pagar;

if (qt_regra_w = 0) then
	ds_resultado_w := 'S';
else
	begin

	if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then

		select	a.cd_estabelecimento,
			CASE WHEN coalesce(a.cd_pessoa_fisica,'0')='0' THEN 'J'  ELSE 'F' END ,
			coalesce(a.vl_titulo,0),
			b.cd_tipo_pessoa,
			a.nr_seq_nota_fiscal,
			coalesce(b.cd_cgc,0),
			coalesce(a.dt_emissao,clock_timestamp()),
			a.nr_seq_proj_rec,
			a.ie_tipo_titulo,
			a.nr_seq_classe,
			ie_origem_titulo
		into STRICT	cd_estabelecimento_w,
			ie_tipo_pessoa_w,
			vl_titulo_w,
			cd_tipo_pessoa_w,
			nr_seq_nota_fiscal_w,
			cd_cgc_w,
			dt_emissao_w,
			nr_seq_proj_rec_w,
			ie_tipo_titulo_w,
			nr_seq_classe_w,
			ie_origem_titulo_w
		FROM titulo_pagar a
LEFT OUTER JOIN pessoa_juridica b ON (a.cd_cgc = b.cd_cgc)
WHERE a.nr_titulo	= nr_titulo_p;

	end if;

	select	max(a.cd_operacao_nf),
		max(a.vl_total_nota),
		max(a.nr_ordem_compra)
	into STRICT	cd_operacao_nf_w,
		vl_total_nota_w,
		nr_ordem_compra_w
	from	nota_fiscal a
	where	a.nr_sequencia	= nr_seq_nota_fiscal_w;

	dt_emissao_ini_w	:= trunc(dt_emissao_w);
	dt_emissao_fim_w	:= fim_dia(dt_emissao_w);

	select	count(*),
		max(CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN 1  ELSE null END )
	into STRICT	qt_usuario_w,
		ie_liberar_w
	from	regra_lib_tit_pagar b,
		conta_pagar_lib a
	where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
	and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
	and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
	and	(a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '')
	and	(a.ie_nivel IS NOT NULL AND a.ie_nivel::text <> '')
	and	a.nr_titulo			= nr_titulo_p;

	if (qt_usuario_w	> 0) then	/* ahoffelder - OS 388850 - 30/01/2012 */
		if (coalesce(ie_liberar_w::text, '') = '') then	/* se todos os usuario ja liberaram o titulo */
			ds_result_perfil_w	:= 'S';
		else

			select	min(a.ie_nivel)
			into STRICT	ie_nivel_w
			from	regra_lib_tit_pagar b,
				conta_pagar_lib a
			where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
			and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
			and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
			and	coalesce(a.dt_liberacao::text, '') = ''
			and	a.nm_usuario_lib		= nm_usuario_p
			and	(a.ie_nivel IS NOT NULL AND a.ie_nivel::text <> '')
			and	a.nr_titulo			= nr_titulo_p;

			if (coalesce(ie_nivel_w::text, '') = '') then	/* se nao tiver regra de liberacao para o usuario */
				ds_result_usuario_w	:= 'N';

			else

				SELECT * FROM obter_regra_nivel_tit_pag(	nr_seq_nota_fiscal_w, nr_seq_proj_rec_w, dt_emissao_ini_w, dt_emissao_fim_w, cd_estabelecimento_w, vl_titulo_w, ie_tipo_pessoa_w, cd_tipo_pessoa_w, cd_cgc_w, ie_tipo_titulo_w, nr_seq_classe_w, ie_origem_titulo_w, cd_operacao_nf_w, vl_total_nota_w, nr_ordem_compra_w, nr_seq_regra_w, ie_nivel_lib_w) INTO STRICT nr_seq_regra_w, ie_nivel_lib_w;

				ie_regra_obtida_w	:= 'S';

				if (ie_nivel_lib_w = 'N') then	/* exige liberacao de pelo menos um usuario de cada nivel */


					/* verificar se existe algum usuario com nivel de liberacao inferior */

					select	max(a.ie_nivel)
					into STRICT	ie_nivel_menor_w
					from	regra_lib_tit_pagar b,
						conta_pagar_lib a
					where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
					and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
					and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
					and	(a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '')
					and	a.ie_nivel			< ie_nivel_w
					and	a.nr_titulo			= nr_titulo_p;

					if (coalesce(ie_nivel_menor_w::text, '') = '') then

						ds_result_usuario_w	:= 'S';

					else

						/* veririficar se pelo menos um dos usuarios do nivel inferior ja liberou o titulo */

						select	count(*)
						into STRICT	qt_nivel_menor_w
						from	regra_lib_tit_pagar b,
							conta_pagar_lib a
						where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
						and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
						and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '')
						and	a.ie_nivel			= ie_nivel_menor_w
						and	a.nr_titulo			= nr_titulo_p;

						if (qt_nivel_menor_w = 0) then
							ds_result_usuario_w	:= 'N';
						else
							ds_result_usuario_w	:= 'S';
						end if;

					end if;

				else	/* exige liberacao de todos os usuarios do nivel */
					select	count(*)
					into STRICT	qt_nivel_menor_w
					from	regra_lib_tit_pagar b,
						conta_pagar_lib a
					where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
					and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
					and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
					and	coalesce(a.dt_liberacao::text, '') = ''
					and	(a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '')
					and	a.ie_nivel			< ie_nivel_w
					and	a.nr_titulo			= nr_titulo_p;

					if (qt_nivel_menor_w = 0) then
						ds_result_usuario_w	:= 'S';
					else
						ds_result_usuario_w	:= 'N';
					end if;
				end if;

			end if;

		end if;

	else

		ds_result_usuario_w	:= 'S';

	end if;

	/* se tiver usuario na regra e o usuario nao estiver liberado, nao precisa verificar o perfil */

	if (ds_result_usuario_w	= 'N') and (qt_usuario_w		> 0) then

		ds_resultado_w	:= 'N';

	else

		select	count(*),
			max(CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN 1  ELSE null END )
		into STRICT	qt_perfil_w,
			ie_liberar_w
		from	regra_lib_tit_pagar b,
			conta_pagar_lib a
		where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
		and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
		and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
		and	(a.cd_perfil IS NOT NULL AND a.cd_perfil::text <> '')
		and	(a.ie_nivel IS NOT NULL AND a.ie_nivel::text <> '')
		and	a.nr_titulo			= nr_titulo_p;

		if (qt_perfil_w	> 0) then	/* ahoffelder - OS 419900 - 09/05/2012 */
			if (coalesce(ie_liberar_w::text, '') = '') then	/* se todos os perfis ja liberaram o titulo */
				ds_result_perfil_w	:= 'S';
			else

				select	min(a.ie_nivel)
				into STRICT	ie_nivel_w
				from	regra_lib_tit_pagar b,
					conta_pagar_lib a
				where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
				and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
				and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
				and	coalesce(a.dt_liberacao::text, '') = ''
				and	a.cd_perfil			= cd_perfil_p
				and	(a.ie_nivel IS NOT NULL AND a.ie_nivel::text <> '')
				and	a.nr_titulo			= nr_titulo_p;

				if (coalesce(ie_nivel_w::text, '') = '') then	/* se nao tiver regra de liberacao para o perfil */
					ds_result_perfil_w	:= 'N';

				else

					if (ie_regra_obtida_w	= 'N') then

						SELECT * FROM obter_regra_nivel_tit_pag(	nr_seq_nota_fiscal_w, nr_seq_proj_rec_w, dt_emissao_ini_w, dt_emissao_fim_w, cd_estabelecimento_w, vl_titulo_w, ie_tipo_pessoa_w, cd_tipo_pessoa_w, cd_cgc_w, ie_tipo_titulo_w, nr_seq_classe_w, ie_origem_titulo_w, cd_operacao_nf_w, vl_total_nota_w, nr_ordem_compra_w, nr_seq_regra_w, ie_nivel_lib_w) INTO STRICT nr_seq_regra_w, ie_nivel_lib_w;

						ie_regra_obtida_w	:= 'S';

					end if;

					if (ie_nivel_lib_w = 'N') then	/* exige liberacao de pelo menos um perfil de cada nivel */


						/* verificar se existe algum perfil com nivel de liberaco inferior */

						select	max(a.ie_nivel)
						into STRICT	ie_nivel_menor_w
						from	regra_lib_tit_pagar b,
							conta_pagar_lib a
						where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
						and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
						and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
						and	(a.cd_perfil IS NOT NULL AND a.cd_perfil::text <> '')
						and	a.ie_nivel			< ie_nivel_w
						and	a.nr_titulo			= nr_titulo_p;

						if (coalesce(ie_nivel_menor_w::text, '') = '') then

							ds_result_perfil_w	:= 'S';

						else

							/* verificar se pelo menos um dos perfis do nivel inferior ja liberou o titulo */

							select	count(*)
							into STRICT	qt_nivel_menor_w
							from	regra_lib_tit_pagar b,
								conta_pagar_lib a
							where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
							and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
							and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
							and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
							and	(a.cd_perfil IS NOT NULL AND a.cd_perfil::text <> '')
							and	a.ie_nivel			= ie_nivel_menor_w
							and	a.nr_titulo			= nr_titulo_p;

							if (qt_nivel_menor_w = 0) then
								ds_result_perfil_w	:= 'N';
							else
								ds_result_perfil_w	:= 'S';
							end if;

						end if;

					else	/* exige liberacao de todos os perfis do nivel */
						select	count(*)
						into STRICT	qt_nivel_menor_w
						from	regra_lib_tit_pagar b,
							conta_pagar_lib a
						where	dt_emissao_fim_w		>= coalesce(b.dt_inicio_vigencia,dt_emissao_fim_w)
						and	dt_emissao_ini_w		<= coalesce(b.dt_fim_vigencia,dt_emissao_ini_w)
						and	a.nr_seq_regra_tit_pagar	= b.nr_sequencia
						and	coalesce(a.dt_liberacao::text, '') = ''
						and	(a.cd_perfil IS NOT NULL AND a.cd_perfil::text <> '')
						and	a.ie_nivel			< ie_nivel_w
						and	a.nr_titulo			= nr_titulo_p;

						if (qt_nivel_menor_w = 0) then
							ds_result_perfil_w	:= 'S';
						else
							ds_result_perfil_w	:= 'N';
						end if;
					end if;

				end if;

			end if;

		else

			ds_result_perfil_w	:= 'S';

			if (qt_usuario_w = 0) then

				/* verifica se existe regra para o tipo de pessoa do titulo */

				select	count(*)
				into STRICT	qt_regra_w
				from	regra_lib_tit_pagar a
				where	dt_emissao_fim_w		>= coalesce(a.dt_inicio_vigencia,dt_emissao_fim_w)
				and	dt_emissao_ini_w		<= coalesce(a.dt_fim_vigencia,dt_emissao_ini_w)
				and	a.cd_estabelecimento		= cd_estabelecimento_w
				and (a.ie_tipo_pessoa = 'A' or a.ie_tipo_pessoa = ie_tipo_pessoa_w);

				if (qt_regra_w	> 0) then

					if (ie_regra_obtida_w	= 'N') then

						SELECT * FROM obter_regra_nivel_tit_pag(	nr_seq_nota_fiscal_w, nr_seq_proj_rec_w, dt_emissao_ini_w, dt_emissao_fim_w, cd_estabelecimento_w, vl_titulo_w, ie_tipo_pessoa_w, cd_tipo_pessoa_w, cd_cgc_w, ie_tipo_titulo_w, nr_seq_classe_w, ie_origem_titulo_w, cd_operacao_nf_w, vl_total_nota_w, nr_ordem_compra_w, nr_seq_regra_w, ie_nivel_lib_w) INTO STRICT nr_seq_regra_w, ie_nivel_lib_w;

						ie_regra_obtida_w	:= 'S';

					end if;

					if (coalesce(nr_seq_regra_w::text, '') = '') then
						ds_resultado_w	:= 'N';
					else
						select	count(*)
						into STRICT	qt_regra_w
						from	regra_lib_tit_usuario a
						where	a.nr_seq_regra	= nr_seq_regra_w;

						/* verifica se o usuario tem permissao para liberar o titulo */

						if (qt_regra_w	> 0) then
							select	coalesce(max('S'),'N')
							into STRICT	ds_resultado_w
							from	regra_lib_tit_usuario a
							where	a.nr_seq_regra		= nr_seq_regra_w
							and	a.nm_usuario_lib	= nm_usuario_p;
						else
							ds_resultado_w	:= 'S';
						end if;

						if (ds_resultado_w = 'S') then

							select	count(*)
							into STRICT	qt_regra_w
							from	regra_lib_tit_perfil a
							where	a.nr_seq_regra	= nr_seq_regra_w;

							/* verifica se o perfil tem permissao para liberar o titulo */

							if (qt_regra_w > 0) then

								select	coalesce(max('S'),'N')
								into STRICT	ds_resultado_w
								from	regra_lib_tit_perfil a
								where	a.cd_perfil	= cd_perfil_p
								and	a.nr_seq_regra	= nr_seq_regra_w;
							end if;
						end if;
					end if;

				else
					ds_resultado_w	:= 'S';
				end if;

			end if;
		end if;

		if (ds_result_usuario_w	= 'S') and (ds_result_perfil_w	= 'S') and (coalesce(ds_resultado_w::text, '') = '') then
			ds_resultado_w	:= 'S';
		elsif ((ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') and ds_resultado_w = 'S') then
			ds_resultado_w	:= 'S';
    else
      ds_resultado_w	:= 'N';
		end if;
	end if;
	end;
end if;

RETURN ds_resultado_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_regra_lib_tit_pagar (nr_titulo_p text, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

