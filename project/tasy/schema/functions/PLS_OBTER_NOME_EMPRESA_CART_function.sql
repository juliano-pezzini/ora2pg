-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_nome_empresa_cart ( cd_usuario_plano_p text, ie_tipo_retorno_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


/*
ie_tipo_retorno_p
N - Nome da empresa
C - CGC
E - Código empresarial
P - Produto
*/
ds_retorno_w		varchar(255);
cd_cooperativa_w	varchar(10);
cd_empresa_w		varchar(10);
cd_cgc_w		varchar(14);
qt_incial_cooperativa_w	bigint;
nr_seq_congenere_w	bigint;
nr_seq_plano_w		bigint;
nr_seq_regra_usua_w	bigint;
qt_posicao_inicial_w	bigint;
qt_posicao_final_w	bigint;
qt_final_empresa_w	bigint;
qt_regras_empresa_w	bigint;
ie_entrou_regra_w	varchar(10);

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_usuario_eventual
	where	ie_situacao	= 'A'
	and	trunc(clock_timestamp()) between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia, clock_timestamp() + interval '1 days'))
	and	nr_seq_congenere	= nr_seq_congenere_w
	order by CASE WHEN coalesce(qt_posicao_inicial::text, '') = '' THEN +1  ELSE -1 END;


BEGIN

select	CASE WHEN length(cd_usuario_plano_p)=16 THEN 1  ELSE 2 END
into STRICT	qt_incial_cooperativa_w
;

cd_cooperativa_w	:= substr(cd_usuario_plano_p,qt_incial_cooperativa_w,3);

select	max(nr_sequencia)
into STRICT	nr_seq_congenere_w
from	pls_congenere
where	(cd_cooperativa)::numeric 	= (cd_cooperativa_w)::numeric
and	ie_tipo_congenere	= 'CO';

ie_entrou_regra_w	:= 'N';
if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_usua_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		/*Caso entrou na regra sai do cursor*/

		if (ie_entrou_regra_w	= 'S') then
			exit;
		end if;

		/*Buscar informações da regra*/

		select	qt_posicao_inicial,
			qt_posicao_final,
			nr_seq_plano
		into STRICT	qt_posicao_inicial_w,
			qt_posicao_final_w,
			nr_seq_plano_w
		from	pls_plano_usuario_eventual
		where	nr_sequencia	= nr_seq_regra_usua_w;

		if (qt_posicao_final_w IS NOT NULL AND qt_posicao_final_w::text <> '') and (qt_posicao_inicial_w IS NOT NULL AND qt_posicao_inicial_w::text <> '') then
			qt_final_empresa_w	:= (qt_posicao_final_w - qt_posicao_inicial_w) + 1;
			/*Busca o código da empresa da carteira do beneficiário*/

			cd_empresa_w		:= substr(cd_usuario_plano_p,qt_posicao_inicial_w,qt_final_empresa_w);

			if (cd_empresa_w IS NOT NULL AND cd_empresa_w::text <> '') then
				/*Verificar se exista aquela empresa na regra do usuário eventual*/

				select	count(*)
				into STRICT	qt_regras_empresa_w
				from	pls_plano_eventual_faixa
				where	nr_seq_regra_plano	= nr_seq_regra_usua_w
				and	cd_empresa	= cd_empresa_w;

				/*Caso existir, verificar se existe uma empresa PJ com o código de empresa*/

				if (qt_regras_empresa_w	> 0) then
					select	max(a.cd_cgc)
					into STRICT	cd_cgc_w
					from	pessoa_juridica		a,
						pls_pj_empresa		b
					where	a.cd_cgc	= b.cd_cgc
					and	b.cd_empresa	= cd_empresa_w
					and 	exists (	SELECT	1
								from	pls_regra_pessoa_juridica	x
								where	x.cd_cgc			= a.cd_cgc
								and	x.cd_estabelecimento		= cd_estabelecimento_p
								and	x.ie_cartao_usuario_eventual	= 'S');

					/*Caso encontrar a PJ diz que encontrou a regra e joga o valor para o retorno*/

					if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
						ie_entrou_regra_w	:= 'S';
						if (ie_tipo_retorno_p	= 'N') then
							select	ds_razao_social
							into STRICT	ds_retorno_w
							from	pessoa_juridica
							where	cd_cgc	= cd_cgc_w;
						elsif (ie_tipo_retorno_p	= 'C') then
							ds_retorno_w	:= cd_cgc_w;
						elsif (ie_tipo_retorno_p	= 'E') then
							ds_retorno_w	:= cd_empresa_w;
						elsif (ie_tipo_retorno_p	= 'P') then
							ds_retorno_w	:= to_char(nr_seq_plano_w);
						end if;
					elsif (ie_tipo_retorno_p	= 'P') then
						ie_entrou_regra_w	:= 'S';
						ds_retorno_w	:= to_char(nr_seq_plano_w);
					end if;
				end if;
			end if;
		else
			if (ie_tipo_retorno_p	= 'P') then
				ie_entrou_regra_w	:= 'S';
				ds_retorno_w	:= to_char(nr_seq_plano_w);
			end if;
		end if;

		end;
	end loop;
	close C01;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_nome_empresa_cart ( cd_usuario_plano_p text, ie_tipo_retorno_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

