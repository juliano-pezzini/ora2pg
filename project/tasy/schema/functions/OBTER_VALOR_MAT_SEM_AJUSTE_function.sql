-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_mat_sem_ajuste ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_vigencia_p timestamp, cd_material_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_cgc_fornecedor_p text, qt_idade_p bigint, nr_sequencia_p bigint) RETURNS bigint AS $body$
DECLARE


vl_material_w		double precision 	:= 0;
dt_ult_vigencia_w	timestamp;
cd_tab_preco_mat_w	bigint;
ie_origem_preco_w	varchar(05);
vl_retorno_w		double precision;
tx_indice_w		double precision    :=1;
cd_simpro_w		bigint;
cd_brasindice_w		varchar(80);
cd_laboratorio_w		varchar(06);
cd_medicamento_w		varchar(06);
cd_apresentacao_w	varchar(06);
ie_pis_cofins_w		varchar(1);
ie_tipo_preco_w		varchar(3);
nr_seq_bras_preco_w	bigint;
nr_seq_mat_bras_w	bigint;
nr_seq_conv_bras_w	bigint;
nr_seq_conv_simpro_w	bigint;
nr_seq_mat_simpro_w	bigint;
nr_seq_simpro_preco_w	bigint;
nr_seq_ajuste_mat_w	bigint;
nr_seq_lote_fornec_w		material_lote_fornec.nr_sequencia%type;
nr_seq_marca_w 			material_lote_fornec.nr_seq_marca%type;

nr_seq_conv_simp_w		material_atend_paciente.nr_seq_conv_simp%type;
nr_seq_simp_preco_w		material_atend_paciente.nr_seq_simp_preco%type;

C01 CURSOR FOR
	SELECT 	ie_pis_cofins,
		ie_tipo_preco
	from 	brasindice_preco
	where 	cd_laboratorio = cd_laboratorio_w
	and 	cd_medicamento = cd_medicamento_w
	and 	cd_apresentacao = cd_apresentacao_w
	order by  dt_inicio_vigencia;

C02 CURSOR FOR
	SELECT  tx_ajuste_tabela_mat
	from    convenio_preco_mat b
	where   b.ie_situacao		= 'A'
	and 	b.cd_convenio = cd_convenio_p
	and 	b.cd_categoria = cd_categoria_p
	and 	b.cd_estabelecimento 	= cd_estabelecimento_p
	and 	coalesce(dt_vigencia_p,clock_timestamp()) between coalesce(b.dt_inicio_vigencia, coalesce(dt_vigencia_p,clock_timestamp())) and
							coalesce(b.dt_final_vigencia, coalesce(dt_vigencia_p,clock_timestamp()))
	order by b.nr_prioridade desc;

C03 CURSOR FOR
	SELECT  CASE WHEN ie_tipo_preco_w='PMC' THEN  CASE WHEN ie_pis_cofins_w='N' THEN  tx_pmc_neg  WHEN ie_pis_cofins_w='S' THEN   tx_pmc_pos  ELSE tx_brasindice_pmc END  WHEN ie_tipo_preco_w='PFB' THEN  CASE WHEN ie_pis_cofins_w='N' THEN  tx_pfb_neg WHEN ie_pis_cofins_w='S' THEN  tx_pfb_pos  ELSE tx_preco_fabrica END   ELSE tx_preco_fabrica END
	from    convenio_brasindice b
	where   b.ie_situacao		= 'A'
	and     cd_categoria_p	= coalesce(b.cd_categoria, cd_categoria_p)
	and 	cd_convenio_p	= coalesce(b.cd_convenio, cd_convenio_p)
	and	((coalesce(b.cd_grupo_material::text, '') = '') or (obter_estrutura_material(cd_material_p, 'G') = b.cd_grupo_material))
	and 	((coalesce(b.cd_subgrupo_material::text, '') = '') or (obter_estrutura_material(cd_material_p, 'S') = b.cd_subgrupo_material))
	and 	((coalesce(b.cd_classe_material::text, '') = '') or (obter_estrutura_material(cd_material_p, 'C') = b.cd_classe_material))
	and	((coalesce(b.nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrutura(b.nr_seq_estrutura,cd_material_p) = 'S'))
	and     b.cd_estabelecimento = cd_estabelecimento_p
	order by  b.dt_inicio_vigencia, b.cd_grupo_material,
		coalesce(b.cd_subgrupo_material,0),
		coalesce(b.cd_classe_material,0),
		coalesce(b.nr_seq_estrutura,0);

C04 CURSOR FOR
	SELECT 	ie_tipo_preco
	from 	simpro_preco
	where 	cd_simpro = cd_simpro_w
	order by dt_vigencia;

C05 CURSOR FOR
	SELECT  CASE WHEN b.ie_tipo_preco='F' THEN  tx_preco_fabrica WHEN b.ie_tipo_preco='V' THEN   tx_pmc  ELSE tx_preco_fabrica END
	from    convenio_simpro b
	where   b.ie_situacao	= 'A'
	and 	b.cd_convenio = cd_convenio_p
	and 	b.cd_categoria = cd_categoria_p
	order by b.dt_inicio_vigencia;

/*
 1  (Brasindice)
 2  (Tabela de Material)
 4  (Simpro)
 */
BEGIN

SELECT * FROM define_preco_material(
		cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_vigencia_p, cd_material_p, cd_tipo_acomodacao_p, ie_tipo_atendimento_p, cd_setor_atendimento_p, cd_cgc_fornecedor_p, qt_idade_p, nr_sequencia_p, null, null, null, null, null, null, null, null, vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;


if (ie_origem_preco_w = 1) then -- Brasindice
	nr_seq_marca_w := 0;
	if (coalesce(nr_sequencia_p,0) > 0) then
		select	max(b.nr_seq_lote_fornec)
		into STRICT	nr_seq_lote_fornec_w
		from 	material_atend_paciente b,
			conta_paciente a
		where 	a.nr_interno_conta = b.nr_interno_conta
		and 	b.nr_sequencia = nr_sequencia_p;

		if (coalesce(nr_seq_lote_fornec_w,0) > 0) then
			select	max(coalesce(nr_seq_marca,0))
			into STRICT	nr_seq_marca_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_fornec_w;
		end if;
	end if;

	select 	obter_codigo_brasindice(cd_estabelecimento_p, cd_material_p ,clock_timestamp(), cd_convenio_p, nr_seq_marca_w)
	into STRICT	cd_brasindice_w
	;

	cd_laboratorio_w		:= substr(cd_brasindice_w,1,3);
	cd_medicamento_w		:= substr(cd_brasindice_w,5,5);
	cd_apresentacao_w		:= substr(cd_brasindice_w,11,4);

	open C01;
	loop
	fetch C01 into
		ie_pis_cofins_w,
		ie_tipo_preco_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_pis_cofins_w  := ie_pis_cofins_w;
		ie_tipo_preco_w	 := ie_tipo_preco_w;
		end;
	end loop;
	close C01;

	open C03;
	loop
	fetch C03 into
		tx_indice_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		tx_indice_w:= tx_indice_w;
		end;
	end loop;
	close C03;

elsif (ie_origem_preco_w = 2) then -- Tabela Material
	open C02;
	loop
	fetch C02 into
		tx_indice_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		tx_indice_w:= tx_indice_w;
		end;
	end loop;
	close C02;

	tx_indice_w:= tx_indice_w;

elsif (ie_origem_preco_w = 4) then -- Simpro
	select 	max(cd_simpro)
	into STRICT	cd_simpro_w
	from 	material_simpro
	where 	cd_material = cd_material_p
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

	if (coalesce(nr_sequencia_p,0) > 0) then
		select	max(b.nr_seq_conv_simp),
			max(b.nr_seq_simp_preco)
		into STRICT	nr_seq_conv_simp_w,
			nr_seq_simp_preco_w
		from 	material_atend_paciente b,
			conta_paciente a
		where 	a.nr_interno_conta = b.nr_interno_conta
		and 	b.nr_sequencia = nr_sequencia_p;
	end if;

	if (coalesce(nr_seq_simp_preco_w,0) > 0) then
		select	max(ie_tipo_preco)
		into STRICT	ie_tipo_preco_w
		from	simpro_preco
		where	nr_sequencia = nr_seq_simp_preco_w;
	else
		open C04;
		loop
		fetch C04 into
			ie_tipo_preco_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			ie_tipo_preco_w:= ie_tipo_preco_w;
			end;
		end loop;
		close C04;
	end if;

	if (coalesce(nr_seq_conv_simp_w,0) > 0)	 then
		select  CASE WHEN ie_tipo_preco='F' THEN  tx_preco_fabrica WHEN ie_tipo_preco='V' THEN   tx_pmc  ELSE tx_preco_fabrica END
		into STRICT	tx_indice_w
		from	convenio_simpro
		where	nr_sequencia = nr_seq_conv_simp_w;
	else
		open C05;
		loop
		fetch C05 into
			tx_indice_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			tx_indice_w:= tx_indice_w;
			end;
		end loop;
		close C05;
	end if;

end if;

vl_retorno_w	:= dividir(vl_material_w, coalesce(tx_indice_w,1));

Return vl_retorno_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_mat_sem_ajuste ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_vigencia_p timestamp, cd_material_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_cgc_fornecedor_p text, qt_idade_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

