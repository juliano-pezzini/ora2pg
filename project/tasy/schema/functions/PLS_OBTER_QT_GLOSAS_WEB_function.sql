-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qt_glosas_web ( nr_seq_conta_p bigint, nr_seq_protocolo_p bigint, ie_tipo_p text) RETURNS bigint AS $body$
DECLARE

				 
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade:  Verificar se possui glosa(s) no(s) iten(s) da conta 
---------------------------------------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ x ] Portal [ ] Relatórios [ ] Outros: 
 ---------------------------------------------------------------------------------------------------------------------------------------------------- 
Pontos de atenção:  
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
 
	IE_TIPO_P 
	T - Busca todas as glosas 
	I - Busca somente as glosas dos itens Proc/Mat 
*/ 
				 
qt_glosas_w		bigint := 0;
nr_seq_conta_w		bigint;
nr_seq_proc_w		bigint;
nr_seq_mat_w		bigint;
qt_glosas_proc_w	bigint := 0;
qt_glosas_mat_w		bigint := 0;
qt_glosas_proc_aux_w	bigint := 0;
qt_glosas_mat_aux_w	bigint := 0;
qt_glosas_conta_w	bigint := 0;

 
C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta_proc 
	where	nr_seq_conta = nr_seq_conta_w;
	
C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta_mat 
	where	nr_seq_conta = nr_seq_conta_w;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_conta 
	where	((nr_seq_protocolo = nr_seq_protocolo_p and (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '')) 
	or (nr_sequencia = nr_seq_conta_p and (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '')));
	

BEGIN 
 
open C03;
loop 
fetch C03 into 
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select count(*) 
		into STRICT  qt_glosas_proc_aux_w 
		from  pls_conta_glosa 
		where nr_seq_conta_proc = nr_seq_proc_w;
		 
		qt_glosas_proc_w := qt_glosas_proc_w + qt_glosas_proc_aux_w;
		 
		end;
	end loop;
	close C01;
 
	open C02;
	loop 
	fetch C02 into 
		nr_seq_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		select count(*) 
		into STRICT  qt_glosas_mat_aux_w 
		from  pls_conta_glosa 
		where nr_seq_conta_mat = nr_seq_mat_w;
		 
		qt_glosas_mat_w := qt_glosas_mat_w + qt_glosas_mat_aux_w;
		 
		end;
	end loop;
	close C02;
 
	--Glosas da conta 
	if (ie_tipo_p = 'T') then 
		select	count(*) 
		into STRICT	qt_glosas_conta_w 
		from	pls_conta_glosa_ocorrencia_v 
		where	nr_seq_conta	= nr_seq_conta_w 
		and 	coalesce(nr_seq_proc::text, '') = '' 
		and 	coalesce(nr_seq_mat::text, '') = '';
	end if;
 
	qt_glosas_w := qt_glosas_w + qt_glosas_mat_w + qt_glosas_proc_w + qt_glosas_conta_w;
	 
	end;
end loop;
close C03;	
 
return	qt_glosas_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qt_glosas_web ( nr_seq_conta_p bigint, nr_seq_protocolo_p bigint, ie_tipo_p text) FROM PUBLIC;

