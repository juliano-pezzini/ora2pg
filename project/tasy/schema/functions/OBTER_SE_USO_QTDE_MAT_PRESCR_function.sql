-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_uso_qtde_mat_prescr (nr_atendimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_setor_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_opcao_p text, ds_justificativa_p text, nr_prescricao_p bigint, nr_sequencia_p bigint) RETURNS varchar AS $body$
DECLARE


/*
ie_opcao_p		1 - IE_ACAO_EXCESSO
			2 - QT_EXCEDIDA
			3 - DS_ERRO
			4 - DS_ERRO + QT_EXERCIDA + QT_PERMITIDA
*/
ds_retorno_w			varchar(255);
ie_acao_excesso_w		varchar(5);
ds_erro_w			varchar(255);
qt_registros_w			integer;
ie_tipo_atendimento_w		smallint;
cd_convenio_w			integer;
ie_tipo_qtde_w			varchar(1);
qt_permitida_w			double precision;
qt_horas_intervalo_w		integer;
qt_executada_w			double precision;
dt_material_w			timestamp;
ds_material_w			varchar(255);
qt_executada_dia_w		double precision;
qt_executada_mes_w		double precision;
qt_executada_atend_w		double precision;
qt_executada_periodo_w		double precision;
qt_executada_conta_w		double precision	:= 0;
qt_exec_total_conta_w		double precision	:= 0;
qt_excedida_w			double precision	:= 0;
nr_seq_regra_uso_w		bigint;

cd_area_proc_w			bigint;
cd_especialidade_proc_w		bigint;
cd_grupo_proc_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_estabelecimento_w		smallint;
qt_minutos_intervalo_w		bigint;
cd_tipo_acomodacao_w		smallint;
ds_mensagem_w			varchar(255);
cd_pessoa_fisica_w		varchar(10);
qt_idade_w			double precision;
ie_paciente_isolado_w 		varchar(1);
cd_grupo_material_w			convenio_regra_qtde_mat.cd_grupo_material%type;
cd_subgrupo_material_w		convenio_regra_qtde_mat.cd_subgrupo_material%type;
cd_classe_material_w		convenio_regra_qtde_mat.cd_classe_material%type;

cd_material_regra_w					convenio_regra_qtde_mat.cd_material%type;
cd_grupo_material_regra_w		convenio_regra_qtde_mat.cd_grupo_material%type;
cd_subgrupo_material_regra_w	convenio_regra_qtde_mat.cd_subgrupo_material%type;
cd_classe_material_regra_w		convenio_regra_qtde_mat.cd_classe_material%type;

cd_plano_w						Atend_categoria_convenio.cd_plano_convenio%type;
cd_categoria_w					Atend_categoria_convenio.cd_categoria%type;


c01 CURSOR FOR
	SELECT	a.qt_permitida,
		a.ie_acao_excesso,
		a.qt_horas_intervalo,
		a.ie_tipo_qtde,
		a.nr_sequencia,
		a.qt_minutos_intervalo,
		a.ds_mensagem,
		a.cd_material,
		a.cd_grupo_material,
		a.cd_subgrupo_material,
		a.cd_classe_material
    from 	convenio_regra_qtde_mat	a
	where	a.cd_convenio		= cd_convenio_w
      	and (a.ie_tipo_atendimento	= ie_tipo_atendimento_w 	or coalesce(ie_tipo_atendimento::text, '') = '')
      	and (a.cd_setor_atendimento	= cd_setor_atendimento_p	or coalesce(cd_setor_atendimento::text, '') = '')
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0)
	and	coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_w,0)) = coalesce(cd_tipo_acomodacao_w,0)
	and	coalesce(qt_idade_w,1) between coalesce(obter_idade_regra_uso(a.nr_sequencia,'MIN','M'),0) and coalesce(obter_idade_regra_uso(a.nr_sequencia,'MAX','M'),9999999)
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((coalesce(a.ie_paciente_isolado,'A') = 'A') or (coalesce(a.ie_paciente_isolado,'A') = ie_paciente_isolado_w))
	and	coalesce(cd_perfil, coalesce(obter_perfil_ativo, 0)) = coalesce(obter_perfil_ativo, 0)
	and	coalesce(a.cd_material, coalesce(cd_material_p, 0)) = coalesce(cd_material_p, 0)
	and	coalesce(a.cd_grupo_material, coalesce(cd_grupo_material_w, 0)) = coalesce(cd_grupo_material_w, 0)
	and	coalesce(a.cd_subgrupo_material, coalesce(cd_subgrupo_material_w, 0)) = coalesce(cd_subgrupo_material_w, 0)
	and	coalesce(a.cd_classe_material, coalesce(cd_classe_material_w, 0)) = coalesce(cd_classe_material_w, 0)
	and     ((coalesce(a.cd_plano::text, '') = '') or (a.cd_plano = cd_plano_w))
	and		((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = cd_categoria_w))
	order by
		coalesce(a.ie_tipo_atendimento,'0'),
		coalesce(a.cd_setor_atendimento,'0'),
		coalesce(a.cd_estabelecimento,0),
		coalesce(cd_perfil, 0);

c02 CURSOR FOR
	SELECT 	b.cd_area_procedimento,
		b.cd_especialidade,
		b.cd_grupo_proc,
		b.cd_procedimento,
		b.ie_origem_proced
	from	Estrutura_Procedimento_V	b,
		procedimento_paciente	a
	where	a.cd_procedimento		= b.cd_procedimento
	and	a.ie_origem_proced		= b.ie_origem_proced
	and	a.nr_atendimento		= nr_atendimento_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');

c03 CURSOR FOR
	SELECT 	b.cd_area_procedimento,
		b.cd_especialidade,
		b.cd_grupo_proc,
		b.cd_procedimento,
		b.ie_origem_proced
	from	Estrutura_Procedimento_V	b,
		procedimento_paciente	a
	where	a.cd_procedimento		= b.cd_procedimento
	and	a.ie_origem_proced		= b.ie_origem_proced
	and	a.nr_atendimento		= nr_atendimento_p
	and	a.nr_seq_atepacu		= nr_seq_atepacu_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');



BEGIN

ds_erro_w		:= '';
ie_acao_excesso_w	:= '';
dt_material_w		:= clock_timestamp();

select	Obter_estrutura_material(cd_material,'G'),
	Obter_estrutura_material(cd_material,'S'),
	cd_classe_material
into STRICT	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w
from	material
where	cd_material	= cd_material_p;

select	coalesce(max(obter_convenio_atendimento(nr_atendimento_p)),0),
        coalesce(max((obter_tipo_acomod_atend(nr_atendimento_p,'C'))::numeric ),0),
		coalesce(max(Obter_Plano_Atendimento(nr_atendimento_p, 'C')),'XPTO'),
		coalesce(max(Obter_Categoria_Atendimento(nr_atendimento_p)),'XPTO')
into STRICT	cd_convenio_w,
		cd_tipo_acomodacao_w,
		cd_plano_w,
		cd_categoria_w
;

select 	coalesce(max(ie_tipo_atendimento),0),
		coalesce(max(cd_estabelecimento),0),
		max(cd_pessoa_fisica),
		coalesce(max(ie_paciente_isolado),'A')
into STRICT	ie_tipo_atendimento_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		ie_paciente_isolado_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

select	count(*)
into STRICT	qt_registros_w
from	convenio_regra_qtde_mat
where	coalesce(ie_situacao,'A') = 'A'
and		coalesce(cd_material, coalesce(cd_material_p, 0)) = coalesce(cd_material_p, 0)
and		coalesce(cd_grupo_material, coalesce(cd_grupo_material_w, 0)) = coalesce(cd_grupo_material_w, 0)
and		coalesce(cd_subgrupo_material, coalesce(cd_subgrupo_material_w, 0)) = coalesce(cd_subgrupo_material_w, 0)
and		coalesce(cd_classe_material, coalesce(cd_classe_material_w, 0)) = coalesce(cd_classe_material_w, 0)
and     ((coalesce(cd_plano::text, '') = '') or (cd_plano = cd_plano_w))
and		((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_w))
and		((coalesce(ie_paciente_isolado,'A') = 'A') or (coalesce(ie_paciente_isolado,'A') = ie_paciente_isolado_w))
and 	((ie_tipo_atendimento	= ie_tipo_atendimento_w) 	or (coalesce(ie_tipo_atendimento::text, '') = ''))
and 	((cd_setor_atendimento	= cd_setor_atendimento_p)	or (coalesce(cd_setor_atendimento::text, '') = ''))
and		((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''))
and		((cd_tipo_acomodacao = cd_tipo_acomodacao_w) or (coalesce(cd_tipo_acomodacao::text, '') = ''))  LIMIT 1;

if (qt_registros_w	> 0) then

	begin

	/*select	nvl(max(obter_convenio_atendimento(nr_atendimento_p)),0),
        	nvl(max(to_number(obter_tipo_acomod_atend(nr_atendimento_p,'C'))),0)
	into	cd_convenio_w,
		cd_tipo_acomodacao_w
	from	dual;


	select 	nvl(ie_tipo_atendimento,0),
		nvl(cd_estabelecimento,0),
		cd_pessoa_fisica,
		nvl(ie_paciente_isolado,'A')
	into	ie_tipo_atendimento_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		ie_paciente_isolado_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;*/
	
	begin
	select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA'))	
	into STRICT	qt_idade_w	
	from	pessoa_fisica b
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception
	when others then
		qt_idade_w	:= 0;
	end;
	
	exception
		when others then
			ie_tipo_qtde_w  :=  'X';
	end;

	open c01;
	loop
	fetch C01 into
		qt_permitida_w,
		ie_acao_excesso_w,
		qt_horas_intervalo_w,
		ie_tipo_qtde_w,
		nr_seq_regra_uso_w,
		qt_minutos_intervalo_w,
		ds_mensagem_w,
		cd_material_regra_w,
		cd_grupo_material_regra_w,
		cd_subgrupo_material_regra_w,
		cd_classe_material_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		qt_permitida_w		:= qt_permitida_w;
		ie_acao_excesso_w	:= ie_acao_excesso_w;
		qt_horas_intervalo_w	:= qt_horas_intervalo_w;
		ie_tipo_qtde_w		:= ie_tipo_qtde_w;
		nr_seq_regra_uso_w	:= nr_seq_regra_uso_w;
		qt_minutos_intervalo_w	:= qt_minutos_intervalo_w;
		end;
	end loop;
	close c01;
/*	Comentado em 10/02/2009
	if	(ie_tipo_qtde_w <> 'X') then

		select 	nvl(max(a.qt_unitaria * a.nr_ocorrencia),0),
			nvl(max(c.dt_prescricao), sysdate),
			max(b.ds_material)
		into	qt_executada_w,
			dt_material_w,
			ds_material_w
		from	material b,
			prescr_material a,
			prescr_medica c
		where	a.nr_prescricao		= c.nr_prescricao
		and	a.cd_material		= b.cd_material
		and	a.nr_sequencia		= 0;

	end if;
*/
	if ((cd_material_regra_w IS NOT NULL AND cd_material_regra_w::text <> '')
		or (cd_grupo_material_regra_w IS NOT NULL AND cd_grupo_material_regra_w::text <> '')
		or (cd_subgrupo_material_regra_w IS NOT NULL AND cd_subgrupo_material_regra_w::text <> '')
		or (cd_classe_material_regra_w IS NOT NULL AND cd_classe_material_regra_w::text <> '')) then

		/* Restricao por Dia */

		if (ie_tipo_qtde_w = 'D') then

			select	coalesce(sum(a.qt_unitaria * a.nr_ocorrencia),0)
			into STRICT	qt_executada_dia_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao			= b.nr_prescricao
			and	b.nr_atendimento		= nr_atendimento_p
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prescricao)		= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_material_w)
			and	coalesce(coalesce(a.dt_suspensao, b.dt_suspensao)::text, '') = ''
			and a.cd_material = coalesce(cd_material_regra_w, a.cd_material)
			and Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material_regra_w,Obter_estrutura_material(a.cd_material,'G'))
			and Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material_regra_w,Obter_estrutura_material(a.cd_material,'S'))
			and Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material_regra_w,Obter_estrutura_material(a.cd_material,'C'))
			and (a.nr_prescricao <> nr_prescricao_p or (a.nr_prescricao = nr_prescricao_p and a.nr_sequencia <> nr_sequencia_p));

			if	((qt_executada_dia_w + qt_material_p)	> qt_permitida_w) then
				qt_excedida_w	:= qt_executada_dia_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297772); --'A quantidade informada ultrapassou a quantidade maxima para o dia.';
			end if;

		end if;

		/* Restricao por Mes */

		if (ie_tipo_qtde_w = 'M') then

			select 	coalesce(sum(a.qt_unitaria * a.nr_ocorrencia),0)
			into STRICT	qt_executada_mes_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao		= b.nr_prescricao
			and	b.nr_atendimento		= nr_atendimento_p
			and	PKG_DATE_UTILS.START_OF(b.dt_prescricao, 'month')	= PKG_DATE_UTILS.START_OF(dt_material_w, 'month')
			and	coalesce(coalesce(a.dt_suspensao, b.dt_suspensao)::text, '') = ''
			and a.cd_material = coalesce(cd_material_regra_w, a.cd_material)
			and Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material_regra_w,Obter_estrutura_material(a.cd_material,'G'))
			and Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material_regra_w,Obter_estrutura_material(a.cd_material,'S'))
			and Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material_regra_w,Obter_estrutura_material(a.cd_material,'C'))
			and (a.nr_prescricao <> nr_prescricao_p or (a.nr_prescricao = nr_prescricao_p and a.nr_sequencia <> nr_sequencia_p));

			if	((qt_executada_mes_w + qt_material_p)  > qt_permitida_w) then
				qt_excedida_w	:= qt_executada_mes_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297773); --'A quantidade informada ultrapassou a quantidade maxima para o mes.'
			end if;

		end if;

		/* Restricao por Atendimento */

		
		if (ie_tipo_qtde_w = 'A') then

			select 	coalesce(sum(a.qt_unitaria * a.nr_ocorrencia),0)
			into STRICT	qt_executada_atend_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao		= b.nr_prescricao
			and	b.nr_atendimento		= nr_atendimento_p
			and	coalesce(coalesce(a.dt_suspensao, b.dt_suspensao)::text, '') = ''
			and a.cd_material = coalesce(cd_material_regra_w, a.cd_material)
			and Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material_regra_w,Obter_estrutura_material(a.cd_material,'G'))
			and Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material_regra_w,Obter_estrutura_material(a.cd_material,'S'))
			and Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material_regra_w,Obter_estrutura_material(a.cd_material,'C'))
			and (a.nr_prescricao <> nr_prescricao_p or (a.nr_prescricao = nr_prescricao_p and a.nr_sequencia <> nr_sequencia_p));
			
			if	((qt_executada_atend_w + qt_material_p) > qt_permitida_w ) then
				qt_excedida_w	:= qt_executada_atend_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297774); --'A quantidade informada ultrapassou a quantidade maxima para o atendimento.'
			end if;

		end if;

		/* Restricao por Horas */

		if (ie_tipo_qtde_w = 'H') then

			select 	coalesce(sum(a.qt_unitaria * a.nr_ocorrencia),0)
			into STRICT	qt_executada_periodo_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao			= b.nr_prescricao
			and	b.nr_atendimento		= nr_atendimento_p
			and	b.dt_prescricao between (dt_material_w - (qt_horas_intervalo_w * 60 /1440)) and dt_material_w
			and	coalesce(coalesce(a.dt_suspensao, b.dt_suspensao)::text, '') = ''
			and a.cd_material = coalesce(cd_material_regra_w, a.cd_material)
			and Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material_regra_w,Obter_estrutura_material(a.cd_material,'G'))
			and Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material_regra_w,Obter_estrutura_material(a.cd_material,'S'))
			and Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material_regra_w,Obter_estrutura_material(a.cd_material,'C'))
			and (a.nr_prescricao <> nr_prescricao_p or (a.nr_prescricao = nr_prescricao_p and a.nr_sequencia <> nr_sequencia_p));
			
			if	((qt_executada_periodo_w + qt_material_p) > qt_permitida_w) then
				qt_excedida_w	:= qt_executada_periodo_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297775); --'A quantidade informada ultrapassou a quantidade maxima por periodo.'
			end if;

		end if;
		
		/* Restricao por Minutos */

		if (ie_tipo_qtde_w = 'B') then

			select 	coalesce(sum(a.qt_unitaria * a.nr_ocorrencia),0)
			into STRICT	qt_executada_periodo_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao			= b.nr_prescricao
			and	b.nr_atendimento		= nr_atendimento_p
			and	b.dt_prescricao between (dt_material_w - (qt_minutos_intervalo_w / 1440)) and dt_material_w
			and	coalesce(coalesce(a.dt_suspensao, b.dt_suspensao)::text, '') = ''
			and a.cd_material = coalesce(cd_material_regra_w, a.cd_material)
			and Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material_regra_w,Obter_estrutura_material(a.cd_material,'G'))
			and Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material_regra_w,Obter_estrutura_material(a.cd_material,'S'))
			and Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material_regra_w,Obter_estrutura_material(a.cd_material,'C'))
			and (a.nr_prescricao <> nr_prescricao_p or (a.nr_prescricao = nr_prescricao_p and a.nr_sequencia <> nr_sequencia_p));

			if	((qt_executada_periodo_w + qt_material_p) > qt_permitida_w) then
				qt_excedida_w	:= qt_executada_periodo_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297775); --'A quantidade informada ultrapassou a quantidade maxima por periodo.';
			end if;

		end if;

		/* Restricao por Setor de Atendimento */

		if (ie_tipo_qtde_w = 'S') then

			select 	coalesce(sum(a.qt_unitaria * a.nr_ocorrencia),0)
			into STRICT	qt_executada_atend_w
			from	prescr_material a,
				prescr_medica b
			where	a.nr_prescricao			= b.nr_prescricao
			and	b.nr_atendimento		= nr_atendimento_p
			and	b.cd_setor_atendimento		= cd_setor_atendimento_p
			and	coalesce(coalesce(a.dt_suspensao, b.dt_suspensao)::text, '') = ''
			and a.cd_material = coalesce(cd_material_regra_w, a.cd_material)
			and Obter_estrutura_material(a.cd_material,'G') = coalesce(cd_grupo_material_regra_w,Obter_estrutura_material(a.cd_material,'G'))
			and Obter_estrutura_material(a.cd_material,'S') = coalesce(cd_subgrupo_material_regra_w,Obter_estrutura_material(a.cd_material,'S'))
			and Obter_estrutura_material(a.cd_material,'C') = coalesce(cd_classe_material_regra_w,Obter_estrutura_material(a.cd_material,'C'))
			and (a.nr_prescricao <> nr_prescricao_p or (a.nr_prescricao = nr_prescricao_p and a.nr_sequencia <> nr_sequencia_p));

			if	((qt_executada_atend_w + qt_material_p) > qt_permitida_w ) then
				qt_excedida_w	:= qt_executada_atend_w - qt_permitida_w;
				ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297776); --'A quantidade informada ultrapassou a quantidade maxima do atendimento neste setor.';
			end if;

		end if;
	
	end if;

	/* Restricao exclusivo por unidade de atendimento */

	if (ie_tipo_qtde_W = 'U') then
		OPEN C03;
		LOOP
		FETCH C03 into
			cd_area_proc_w,
			cd_especialidade_proc_w,
			cd_grupo_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			select	count(*)
			into STRICT	qt_executada_conta_w	
			from	conv_regra_proc_exclusivo
			where	coalesce(cd_procedimento, cd_procedimento_w)		= cd_procedimento_w
			and	coalesce(ie_origem_proced, ie_origem_proced_w)	= ie_origem_proced_w
			and	coalesce(cd_grupo_proc, cd_grupo_proc_w) 		= cd_grupo_proc_w
			and	coalesce(cd_especialidade, cd_especialidade_proc_w)	= cd_especialidade_proc_w
			and	coalesce(cd_area_procedimento, cd_area_proc_w) 	= cd_area_proc_w
			and	nr_seq_regra_uso_mat				= nr_seq_regra_uso_w;
			qt_exec_total_conta_w	:= qt_exec_total_conta_w + qt_executada_conta_w;
			end;
		END LOOP;
		CLOSE C03;
		if (qt_exec_total_conta_w	= 0) then
			ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297777); --'Nao ha na conta o procedimento exclusivo desse material.';
		end if;
	end if;

	/* Restricao exclusivo por atendimento */

	if (ie_tipo_qtde_W = 'E') then
		OPEN C02;
		LOOP
		FETCH C02 into
			cd_area_proc_w,
			cd_especialidade_proc_w,
			cd_grupo_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	count(*)
			into STRICT	qt_executada_conta_w	
			from	conv_regra_proc_exclusivo
			where	coalesce(cd_procedimento, cd_procedimento_w)		= cd_procedimento_w
			and	coalesce(ie_origem_proced, ie_origem_proced_w)	= ie_origem_proced_w
			and	coalesce(cd_grupo_proc, cd_grupo_proc_w) 		= cd_grupo_proc_w
			and	coalesce(cd_especialidade, cd_especialidade_proc_w)	= cd_especialidade_proc_w
			and	coalesce(cd_area_procedimento, cd_area_proc_w) 	= cd_area_proc_w
			and	nr_seq_regra_uso_mat				= nr_seq_regra_uso_w;
			qt_exec_total_conta_w	:= qt_exec_total_conta_w + qt_executada_conta_w;
			end;
		END LOOP;
		CLOSE C02;
		if (qt_exec_total_conta_w	= 0) then
			ds_erro_w 	:= WHEB_MENSAGEM_PCK.get_texto(297777); -- 'Nao ha na conta o procedimento exclusivo desse material.'
		end if;
	end if;

end if;

if (ie_opcao_p	= '1') then
	ds_retorno_w	:= IE_ACAO_EXCESSO_w;
elsif (ie_opcao_p	= '2') then
	ds_retorno_w	:= qt_excedida_w;
elsif (ie_opcao_p	= '3') then
	ds_retorno_w	:= ds_erro_w;
elsif (ie_opcao_p	= '4') then
	begin
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	
		if (ie_acao_excesso_w = 'J') and (ds_justificativa_p IS NOT NULL AND ds_justificativa_p::text <> '') then
			ds_retorno_w := null;
		else
			ds_retorno_w	:= ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(297778) || substr(campo_mascara_virgula(qt_permitida_w),1,100) ||'.';
			if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
				ds_retorno_w := ds_mensagem_w;
			else
				ds_retorno_w	:= ds_erro_w;
			end if;
		end if;
	end if;
	end;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_uso_qtde_mat_prescr (nr_atendimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_setor_atendimento_p bigint, nr_seq_atepacu_p bigint, ie_opcao_p text, ds_justificativa_p text, nr_prescricao_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

