-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_mat_prestador ( nr_seq_prestador_p bigint, nr_seq_prest_fornec_p bigint, nr_seq_material_p bigint, dt_atendimento_p timestamp, nr_seq_prestador_exec_p bigint, ie_internacao_p text, cd_estabelecimento_p bigint, nr_seq_fornec_mat_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se o material esta liberado para o prestador
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
	QUALQUER ATELRACAO FEITA NESTA ROTINA DEVERA SER FEITA NA
	PROCEDURE 'PLS_VALIDAR_LIB_MAT_PRESTADOR'
-------------------------------------------------------------------------------------------------------------------

Referencias:
	PLS_CONSISTIR_MAT_PRESTADOR
	PLS_GERAR_OCORRENCIA
	PLS_GERAR_OCORRENCIA_CONTA_WEB
	PLS_GERAR_W_ITENS_EXECUCAO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_atendimento_w		varchar(3)	:= null;
ie_liberar_w			varchar(2);
ie_retorno_w			varchar(2)	:= 'N';
ie_grupo_material_w		varchar(2)	:= 'S';
ie_estrut_mat_w			varchar(1);
nr_seq_regra_w			bigint;
nr_seq_grupo_material_w		bigint;
nr_seq_estrut_mat_w		bigint;
nr_seq_regra_prest_ww		bigint;
nr_seq_estrut_regra_w		bigint;
nr_seq_tipo_prestador_w		bigint;
dt_atendimento_w		timestamp;
nr_seq_material_w		pls_prestador_mat.nr_seq_material%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_liberar,
		a.nr_seq_grupo_material,
		a.nr_seq_estrutura_mat,
		a.nr_seq_material
	from	pls_prestador_mat	a
	where	coalesce(a.nr_seq_material, nr_seq_material_p)		= nr_seq_material_p
	and	a.nr_seq_prestador					= nr_seq_prestador_p
	and	coalesce(a.nr_seq_prest_fornec, coalesce(nr_seq_prest_fornec_p,0))	= coalesce(nr_seq_prest_fornec_p, coalesce(a.nr_seq_prest_fornec, 0))
	and	dt_atendimento_w between trunc(coalesce(a.dt_inicio_vigencia, dt_atendimento_w),'dd') and fim_dia(coalesce(a.dt_fim_vigencia, dt_atendimento_w))
	and (a.nr_seq_tipo_prestador = coalesce(nr_seq_tipo_prestador_w, a.nr_seq_tipo_prestador) 	or coalesce(a.nr_seq_tipo_prestador::text, '') = '')
	and (a.ie_internado = coalesce(ie_tipo_atendimento_w, a.ie_internado) or (coalesce(a.ie_internado::text, '') = '') or (a.ie_internado = 'N'))
	and	((exists (SELECT	1
				from	pls_material_fornec	x
				where	x.nr_seq_material	= nr_seq_material_p
				and	x.nr_seq_fornecedor	= a.nr_seq_fornec_mat)) or (coalesce(a.nr_seq_fornec_mat::text, '') = ''))
	and	((a.nr_seq_fornec_mat = coalesce(nr_seq_fornec_mat_p,a.nr_seq_fornec_mat)) or (coalesce(a.nr_seq_fornec_mat::text, '') = ''))
	order by
		coalesce(a.nr_seq_material, -1) desc,
		coalesce(a.nr_seq_estrutura_mat, -1),
		coalesce(a.nr_seq_grupo_material, 0),
		coalesce(a.nr_seq_fornec_mat, 0),
		a.nr_sequencia;		


BEGIN
if (ie_internacao_p = 'S') then
	ie_tipo_atendimento_w	:= 'S'; /* Internado */
else
	ie_tipo_atendimento_w	:= 'A'; /* Ambulatorial */
end if;

dt_atendimento_w	:= coalesce(dt_atendimento_p, clock_timestamp());

begin
select	nr_seq_tipo_prestador
into STRICT	nr_seq_tipo_prestador_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_exec_p;
exception
when others then
	nr_seq_tipo_prestador_w	:= null;
end;

begin
select	a.nr_seq_estrut_mat
into STRICT	nr_seq_estrut_mat_w
from	pls_material	a
where	a.nr_sequencia	= nr_seq_material_p;
exception
when others then
	nr_seq_estrut_mat_w	:= 0;
end;

open C01;
loop
fetch C01 into	
	nr_seq_regra_w,
	ie_liberar_w,
	nr_seq_grupo_material_w,
	nr_seq_estrut_regra_w,
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_grupo_material_w	:= 'S';
	ie_estrut_mat_w		:= 'S';
	
	if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
		if (pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w) = 'N') then
			ie_estrut_mat_w	:= 'N';
		end if;
	end if;
	
	if (ie_estrut_mat_w = 'S') then
		
		/* Grupo de material */

		if (coalesce(nr_seq_grupo_material_w,0) > 0) then
			ie_grupo_material_w	:= pls_se_grupo_preco_material(nr_seq_grupo_material_w, nr_seq_material_p);
		end if;	
		
		if (ie_grupo_material_w = 'N') then
			ie_retorno_w	:= 'N';
		elsif (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') and (ie_liberar_w = 'N') then
			ie_retorno_w	:= 'N';
			exit;
		elsif (ie_liberar_w = 'S') then
			ie_retorno_w	:= 'S';
			exit;
		end if;
	end if;
	end;
end loop;
close C01;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_mat_prestador ( nr_seq_prestador_p bigint, nr_seq_prest_fornec_p bigint, nr_seq_material_p bigint, dt_atendimento_p timestamp, nr_seq_prestador_exec_p bigint, ie_internacao_p text, cd_estabelecimento_p bigint, nr_seq_fornec_mat_p bigint) FROM PUBLIC;

