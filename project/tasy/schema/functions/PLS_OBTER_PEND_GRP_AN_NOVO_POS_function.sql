-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_pend_grp_an_novo_pos ( nr_seq_analise_p bigint, nr_seq_conta_pos_estab_p bigint, nr_seq_grupo_atual_p bigint, ie_informativo_p text, ie_tipo_item_p text) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(1)	:= null;
qt_glo_ocor_grupo_w		bigint;
nr_seq_analise_w		bigint;
qt_fluxo_grupo_w		bigint	:= 0;
qt_fluxo_pend_w			bigint	:= 0;
nr_seq_conta_w			bigint;
qt_fluxo_grupo_conta_w		bigint;
qt_fluxo_pend_conta_w		bigint;
nr_seq_conta_pos_estab_w	bigint;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter grupos pendentes novo pós-estabelecido

ie_tipo_item_p 'P' = 'Procedimento 'M' = 'Material'   A = 'Ambos'
-------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
C01 CURSOR FOR
	SELECT	'P' ie_tipo_item,
		a.nr_sequencia
	from	pls_conta_pos_proc a
	where	a.nr_seq_analise	= nr_seq_analise_p
	
union all

	SELECT	'M' ie_tipo_item,
		a.nr_sequencia
	from	pls_conta_pos_mat a
	where	a.nr_seq_analise	= nr_seq_analise_p;

BEGIN
/* Se for para a análise inteira */

if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') and (coalesce(nr_seq_conta_pos_estab_p::text, '') = '') then

	for r_c01_w in C01 loop

		select 	count(1)
		into STRICT	qt_fluxo_grupo_conta_w
		from (
			SELECT	a.nr_sequencia
			from	pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	a.nr_seq_conta_pos_proc = r_c01_w.nr_sequencia
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p
			and	r_c01_w.ie_tipo_item	= 'P'
			
union all

			SELECT	a.nr_sequencia
			from	pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	a.nr_seq_conta_pos_mat 	= r_c01_w.nr_sequencia
			and	r_c01_w.ie_tipo_item	= 'M') alias4;

		select	count(1) qt_pend
		into STRICT	qt_fluxo_pend_conta_w
		from (
			SELECT	a.nr_sequencia
			from	pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	a.nr_seq_conta_pos_proc = r_c01_w.nr_sequencia
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p
			and	b.ie_status		= 'P'
			and	r_c01_w.ie_tipo_item	= 'P'
			
union all

			SELECT	a.nr_sequencia
			from	pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	a.nr_seq_conta_pos_mat	= r_c01_w.nr_sequencia
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p
			and	b.ie_status		= 'P'
			and	r_c01_w.ie_tipo_item	= 'M'
		) alias1;

		qt_fluxo_grupo_w	:= qt_fluxo_grupo_w + coalesce(qt_fluxo_grupo_conta_w,0);
		qt_fluxo_pend_w		:= qt_fluxo_pend_w + coalesce(qt_fluxo_pend_conta_w,0);

	end loop;

else
	if (nr_seq_conta_pos_estab_p IS NOT NULL AND nr_seq_conta_pos_estab_p::text <> '') then

		if (ie_tipo_item_p = 'P') then

			select	count(1) qt_fluxo
			into STRICT	qt_fluxo_grupo_w
			from	pls_conta_pos_proc		c,
				pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	a.nr_seq_conta_pos_proc	= c.nr_sequencia
			and	c.nr_sequencia		= nr_seq_conta_pos_estab_p
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p  LIMIT 1;

			select	count(1) qt_pend
			into STRICT	qt_fluxo_pend_w
			from	pls_conta_pos_proc		c,
				pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	a.nr_seq_conta_pos_proc = c.nr_sequencia
			and	c.nr_sequencia		= nr_seq_conta_pos_estab_p
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p
			and	b.ie_status		= 'P'  LIMIT 1;

		elsif (ie_tipo_item_p = 'M') then

			select	count(1) qt_fluxo
			into STRICT	qt_fluxo_grupo_w
			from	pls_conta_pos_mat		c,
				pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	a.nr_seq_conta_pos_mat	= c.nr_sequencia
			and	c.nr_sequencia		= nr_seq_conta_pos_estab_p
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p  LIMIT 1;

			select	count(1) qt_pend
			into STRICT	qt_fluxo_pend_w
			from	pls_conta_pos_mat		c,
				pls_ocorrencia_benef		a,
				pls_analise_glo_ocor_grupo	b
			where	a.nr_sequencia		= b.nr_seq_ocor_benef
			and	a.nr_seq_conta_pos_mat	= c.nr_sequencia
			and	c.nr_sequencia		= nr_seq_conta_pos_estab_p
			and	b.nr_seq_analise	= nr_seq_analise_p
			and	b.nr_seq_grupo		= nr_seq_grupo_atual_p
			and	b.ie_status		= 'P'  LIMIT 1;

		end if;


	end if;
end if;

/* Se o item tem fluxo pendente pro grupo  */

if (qt_fluxo_pend_w > 0) then
	ie_retorno_w	:= 'S';
/* Verificar se tem fluxo para o grupo, para trazer o ícone de analisado */

elsif (qt_fluxo_grupo_w > 0) then
	ie_retorno_w	:= 'N';
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_pend_grp_an_novo_pos ( nr_seq_analise_p bigint, nr_seq_conta_pos_estab_p bigint, nr_seq_grupo_atual_p bigint, ie_informativo_p text, ie_tipo_item_p text) FROM PUBLIC;

