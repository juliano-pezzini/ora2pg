-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_aux_maior_porte_cir (nr_cirurgia_p bigint, nr_interno_conta_p bigint, dt_conta_p timestamp, ie_origem_proced_p bigint, cd_edicao_amb_p bigint, dt_vigencia_cbhpm_p timestamp) RETURNS bigint AS $body$
DECLARE


nr_aux_w		bigint;
nr_auxiliares_w		bigint;
cd_porte_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
vl_porte_w		double precision;
vl_porte_maior_w	double precision	:= 0;
qt_porte_anestesico_w	smallint;
qt_maior_porte_w	smallint	:= 0;
cd_edicao_amb_w		varchar(240);
ie_origem_proc_edicao_w	bigint;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		cd_edicao_amb
	from	procedimento_paciente
	where	nr_cirurgia		= nr_cirurgia_p
	and	nr_interno_conta	= nr_interno_conta_p
	order by cd_procedimento;


BEGIN

open C01;
loop
fetch 	C01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_edicao_amb_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	cd_edicao_amb_w	:= coalesce(cd_edicao_amb_w, cd_edicao_amb_p);

	select	coalesce(max(ie_origem_proced),ie_origem_proced_p)
	into STRICT	ie_origem_proc_edicao_w
	from	edicao_amb
	where	cd_edicao_amb = cd_edicao_amb_w;

	if (ie_origem_proced_p	= 5) and (ie_origem_proc_edicao_w <> 1) then
		begin

		select 	coalesce(max(a.nr_auxiliar),0),
			coalesce(max(a.cd_porte),'0')
		into STRICT	nr_auxiliares_w,
			cd_porte_w
		from	cbhpm_preco a
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') =
				(SELECT max(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days'))
					from cbhpm_preco b
					where b.cd_procedimento		= cd_procedimento_w
					and	b.ie_origem_proced	= ie_origem_proced_w
					and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days') <= dt_conta_p
					and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days') = coalesce(dt_vigencia_cbhpm_p, coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')));

		select	max(a.vl_porte)
		into STRICT	vl_porte_w
		from	cbhpm_porte	a
		where	a.cd_porte	= substr(cd_porte_w,1,8)
		and	a.dt_vigencia	=
				(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from 	cbhpm_porte x
				where 	x.cd_porte = substr(cd_porte_w,1,8)
				and	x.dt_vigencia <= dt_conta_p);

		if (vl_porte_maior_w < vl_porte_w) then
			vl_porte_maior_w	:= vl_porte_w;
			nr_aux_w		:= nr_auxiliares_w;
		end if;
		end;
	else
		begin

		select	coalesce(max(a.nr_auxiliares),0),
			coalesce(max(a.qt_porte_anestesico),0)
		into STRICT	nr_auxiliares_w,
			qt_porte_anestesico_w
		from	preco_amb a
		where	a.cd_procedimento		= cd_procedimento_w
		and	a.cd_edicao_amb			= cd_edicao_amb_w
		and 	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
			(SELECT	max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
			from 	preco_amb b
			where 	b.cd_edicao_amb		= cd_edicao_amb_w
			and	b.cd_procedimento	= cd_procedimento_w
			and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_p);

		if (qt_maior_porte_w < qt_porte_anestesico_w) or
			(qt_maior_porte_w = qt_porte_anestesico_w AND nr_aux_w < nr_auxiliares_w) then
			qt_maior_porte_w	:= qt_porte_anestesico_w;
			nr_aux_w		:= nr_auxiliares_w;
		end if;

		end;
	end if;

	end;
end loop;
close C01;

return	nr_aux_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_aux_maior_porte_cir (nr_cirurgia_p bigint, nr_interno_conta_p bigint, dt_conta_p timestamp, ie_origem_proced_p bigint, cd_edicao_amb_p bigint, dt_vigencia_cbhpm_p timestamp) FROM PUBLIC;

