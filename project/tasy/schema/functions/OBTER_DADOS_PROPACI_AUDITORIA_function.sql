-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_propaci_auditoria ( nr_seq_procedimento_p bigint, nr_seq_atepacu_ajuste_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

ds_setor_atendimento_w		varchar(250);
ds_retorno_w			varchar(250);
nr_seq_proc_pacote_w		bigint;
nr_sequencia_w			bigint;
ie_classificacao_w			varchar(10);
cd_medico_executor_w		varchar(10);
cd_cgc_prestador_w		varchar(14);
cd_procedimento_convenio_w	varchar(20);
cd_setor_atendimento_w		integer;
ds_medico_autenticacao_w		varchar(100);
nr_interno_conta_w		bigint;
dt_entrada_unidade_w		timestamp;
nr_seq_atepacu_w		bigint;
/* 
ie_opcao_p 
DS - Descrição Setor 
NP - Número sequência do pacote 
DP - Descrição do pacote 
C - Classificacao 
PP - Obter se pasta Procedimento 
PH - Obter se Pasta Honorário 
PT - Obter se Pasta Taxa 
PD - Obter se Pasta Diária 
M - Médico Executor 
CGC - CGC Prestador 
CPC - Código Procedimento Convênio 
CS - Código Setor 
NC - Número da conta 
DU - Data de entrada na unidade 
SU - Seq. Atepacu 
NMA 
*/
BEGIN 
begin 
select	coalesce(obter_setor_atepacu(nr_seq_atepacu_ajuste_p,1),obter_setor_exec_item(nr_sequencia,0)), 
	b.nr_seq_proc_pacote, 
	b.nr_sequencia, 
	obter_classif_material_proced(null, cd_procedimento, ie_origem_proced), 
	cd_medico_executor, 
	cd_cgc_prestador, 
	cd_procedimento_convenio, 
	coalesce(obter_setor_atepacu(nr_seq_atepacu_ajuste_p,0), b.cd_setor_atendimento), 
	substr(obter_nome_pf(cd_medico_autenticacao),1,100) ds_medico_autenticacao, 
	b.nr_interno_conta, 
	b.dt_entrada_unidade, 
	coalesce(nr_seq_atepacu_ajuste_p, b.nr_seq_atepacu) 
into STRICT	ds_setor_atendimento_w, 
	nr_seq_proc_pacote_w, 
	nr_sequencia_w, 
	ie_classificacao_w, 
	cd_medico_executor_w, 
	cd_cgc_prestador_w, 
	cd_procedimento_convenio_w, 
	cd_setor_atendimento_w, 
	ds_medico_autenticacao_w, 
	nr_interno_conta_w, 
	dt_entrada_unidade_w, 
	nr_seq_atepacu_w 
from	procedimento_paciente b 
where	b.nr_sequencia		=nr_seq_procedimento_p;
exception 
	when others then 
		ds_retorno_w	:= null;
	end;
if (ie_opcao_p		= 'DS') then 
	ds_retorno_w		:= ds_setor_atendimento_w;
elsif (ie_opcao_p		= 'NP') then 
	ds_retorno_w		:= nr_seq_proc_pacote_w;
elsif (ie_opcao_p		= 'M') then 
	ds_retorno_w		:= cd_medico_executor_w;
elsif (ie_opcao_p		= 'CGC') then 
	ds_retorno_w		:= cd_cgc_prestador_w;
elsif (ie_opcao_p		= 'CPC') then 
	ds_retorno_w		:= cd_procedimento_convenio_w;
elsif (ie_opcao_p		= 'CS')then 
	ds_retorno_w		:= cd_setor_atendimento_w;
elsif (ie_opcao_p		= 'DP') then 
	select 	max(substr(obter_descricao_procedimento(p.cd_procedimento, p.ie_origem_proced),1,120)) 
	into STRICT	ds_retorno_w 
	from 	Pacote c, 
		atendimento_pacote a, 
		Procedimento_paciente p 
	where	c.nr_seq_pacote = a.nr_seq_pacote 
	and 	a.nr_seq_procedimento = p.nr_sequencia 
	and 	p.nr_sequencia = nr_seq_proc_pacote_w;
elsif (ie_opcao_p		= 'C') then 
	ds_retorno_w	:= ie_classificacao_w;
	 
elsif (ie_opcao_p		= 'PP') then /*Mesmo tratamento da Conta Paciente*/
 
	if (somente_numero(ie_classificacao_w)	= 1) then 
	 
	select coalesce(max('S'),'N') 
	into STRICT	ds_retorno_w 
	from	procedimento_paciente 
	where	nr_sequencia				= nr_Sequencia_w 
	and (coalesce(ie_responsavel_credito::text, '') = '' or (coalesce(vl_custo_operacional, 0) + coalesce(vl_materiais, 0)) > 0    
		or obter_se_pasta_honorario(ie_responsavel_credito) = 'N');
	else 
		ds_retorno_w	:= 'N';
	end if;
elsif (ie_opcao_p		= 'PH') then /*Mesmo tratamento da Conta Paciente*/
 
	if (somente_numero(ie_classificacao_w) 	= 1) then 
	 
		select coalesce(max('S'),'N') 
		into STRICT	ds_retorno_w 
		from	procedimento_paciente 
		where	nr_sequencia				= nr_Sequencia_w 
		and 	(ie_responsavel_credito IS NOT NULL AND ie_responsavel_credito::text <> '') 
		and 	obter_se_pasta_honorario(ie_responsavel_credito) = 'S';
	else 
		ds_retorno_w	:= 'N';
	end if;
elsif (ie_opcao_p		= 'PT') then 
	if (somente_numero(ie_classificacao_w) 	= 2) then 
		ds_retorno_w	:= 'S';
	else 
		ds_retorno_w	:= 'N';
	end if;
elsif (ie_opcao_p		= 'PD') then 
	if (somente_numero(ie_classificacao_w) 	= 3) then 
		ds_retorno_w	:= 'S';
	else 
		ds_retorno_w	:= 'N';
	end if;
elsif (ie_opcao_p = 'NMA') then 
 
	ds_retorno_w := ds_medico_autenticacao_w;
	 
elsif (ie_opcao_p = 'NC') then 
 
	ds_retorno_w := nr_interno_conta_w;
	 
elsif (ie_opcao_p = 'DU') then 
 
	if (nr_seq_atepacu_ajuste_p IS NOT NULL AND nr_seq_atepacu_ajuste_p::text <> '') then 
		select	max(dt_entrada_unidade) 
		into STRICT	dt_entrada_unidade_w 
		from	atend_paciente_unidade 
		where	nr_seq_interno = nr_seq_atepacu_ajuste_p;
	end if;
 
	ds_retorno_w := to_char(dt_entrada_unidade_w,'dd/mm/yyyy hh24:mi:ss');
	 
elsif (ie_opcao_p = 'SU') then 
	 
	ds_retorno_w := nr_seq_atepacu_w;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_propaci_auditoria ( nr_seq_procedimento_p bigint, nr_seq_atepacu_ajuste_p bigint, ie_opcao_p text) FROM PUBLIC;

