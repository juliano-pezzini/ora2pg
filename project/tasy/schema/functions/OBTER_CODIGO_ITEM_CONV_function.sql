-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_codigo_item_conv (cd_convenio_p bigint, ie_tipo_item_p bigint, cd_item_p bigint, ie_origem_proced_p bigint, ie_estrutura_completa_p text, cd_especialidade_med_p bigint, cd_medico_p text, ie_tipo_atendimento_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


/* tipo do item    1-Procedimentos/serviços 2-Materiais/Medicamentos */


/* estrutura completa S-Sim (validade toda estrutura) N-Não (valida só proc) */

cd_codigo_convenio_w	varchar(20);
cd_grupo_proc_w		conversao_proc_convenio.cd_grupo_proced%type;
cd_espec_proc_w		conversao_proc_convenio.cd_especial_proced%type;
cd_area_proc_w		conversao_proc_convenio.cd_area_proced%type;
cd_grupo_mat_w		smallint;
cd_subgrupo_mat_w		smallint;
cd_classe_mat_w		integer;
ie_tipo_mat_w		varchar(03);
cd_especial_medica_w	integer;
ie_tipo_atendimento_w	integer;

cd_setor_atendimento_w		bigint;

c00 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	procedimento_paciente
	where	nr_atendimento		= nr_atendimento_p
	and	cd_procedimento		= cd_item_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	coalesce(cd_motivo_exc_conta::text, '') = '';

c01 CURSOR FOR
	SELECT	cd_proc_convenio
	from	conversao_proc_convenio
	where	cd_convenio					= cd_convenio_p
	and	coalesce(cd_procedimento,cd_item_p)			= cd_item_p
	and	coalesce(ie_origem_proced,ie_origem_proced_p)	= ie_origem_proced_p
	and	coalesce(cd_area_proced,cd_area_proc_w)		= cd_area_proc_w
	and	coalesce(cd_especial_proced,cd_espec_proc_w)		= cd_espec_proc_w
	and	coalesce(cd_grupo_proced,cd_grupo_proc_w)		= cd_grupo_proc_w
	and (coalesce(cd_especialidade_medica, cd_especial_medica_w)	= cd_especial_medica_w)
	and (coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w)
	and (coalesce(cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w)
	and	ie_situacao	= 'A'
	order by	coalesce(cd_procedimento,0),
			coalesce(cd_grupo_proced,0),
			coalesce(cd_especial_proced,0),
			coalesce(cd_area_proced,0);

c02 CURSOR FOR
	SELECT	cd_material_convenio
	from	conversao_material_convenio
	where	cd_convenio				= cd_convenio_p
	and	coalesce(cd_material,cd_item_p) 		= cd_item_p
	and	coalesce(cd_grupo_material,cd_grupo_mat_w) 	= cd_grupo_mat_w
	and	coalesce(cd_subgrupo_material,cd_subgrupo_mat_w)	= cd_subgrupo_mat_w
	and	coalesce(cd_classe_material,cd_classe_mat_w) 	= cd_classe_mat_w
	and	coalesce(ie_tipo_material,ie_tipo_mat_w) 	= ie_tipo_mat_w
	and	ie_situacao	= 'A'
	order by
			coalesce(cd_material,0),
			coalesce(cd_grupo_material,0),
			coalesce(cd_subgrupo_material,0),
			coalesce(cd_classe_material,0),
			coalesce(ie_tipo_material,'0');


BEGIN
cd_codigo_convenio_w		:= cd_item_p;
cd_especial_medica_w		:= coalesce(cd_especialidade_med_p, 0);
ie_tipo_atendimento_w		:= coalesce(ie_tipo_atendimento_p, 0);

if (ie_tipo_item_p	= 1) then
	begin
	/* busca estrutura procedimento */

	if (ie_estrutura_completa_p	= 'N') then
		begin
		cd_grupo_proc_w	:= 99999999;
		cd_espec_proc_w	:= 99999999;
		cd_area_proc_w	:= 99999999;
		end;
	else
		begin
		select 	cd_grupo_proc,
			cd_especialidade,
			cd_area_procedimento
		into STRICT	cd_grupo_proc_w,
			cd_espec_proc_w,
			cd_area_proc_w
		from	estrutura_procedimento_v
		where	cd_procedimento 	= cd_item_p
		and	ie_origem_proced	= ie_origem_proced_p;
		exception
     			when others then
			cd_grupo_proc_w	:= 0;
			end;
	end if;

	cd_setor_atendimento_w	:= 0;

	open	c00;
	loop
	fetch	c00 into
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		begin

		cd_setor_atendimento_w	:= cd_setor_atendimento_w;

		end;
	end loop;
	close c00;

	/* busca descriçao do procedimento para o convênio */

	begin
	open c01;
	loop
	fetch c01 into
		cd_codigo_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		cd_codigo_convenio_w	:= cd_codigo_convenio_w;
		end;
	end loop;
	close c01;
	end;
	end;
else
	begin
	/* busca estrutura material */

	begin
	select 	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material,
		ie_tipo_material
	into STRICT	cd_grupo_mat_w,
		cd_subgrupo_mat_w,
		cd_classe_mat_w,
		ie_tipo_mat_w
	from 	estrutura_material_v
	where 	cd_material		= cd_item_p;
	exception
     			when others then
			cd_grupo_mat_w			:= 0;
	end;

	/* busca descriçao do material para o convênio */

	begin
	open c02;
	loop
	fetch c02 into
		cd_codigo_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		cd_codigo_convenio_w	:= cd_codigo_convenio_w;
		end;
	end loop;
	close c02;
	end;
	end;
end if;

return cd_codigo_convenio_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_codigo_item_conv (cd_convenio_p bigint, ie_tipo_item_p bigint, cd_item_p bigint, ie_origem_proced_p bigint, ie_estrutura_completa_p text, cd_especialidade_med_p bigint, cd_medico_p text, ie_tipo_atendimento_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

