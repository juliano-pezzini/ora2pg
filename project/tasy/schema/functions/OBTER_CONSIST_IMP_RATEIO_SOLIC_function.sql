-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_consist_imp_rateio_solic ( nr_solic_compra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


qt_existe_w			bigint;
cd_centro_custo_w		integer;
cd_conta_contabil_w		varchar(20);
cd_conta_financ_w		bigint;
cd_empresa_w			smallint;
ds_consistencia_w			varchar(4000);
ds_descricao_w			varchar(255);
ds_descricao_padrao_w			varchar(255);

c01 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ
from	w_importa_rateio_solic
where	nr_solic_compra = nr_solic_compra_p
and	nm_usuario = nm_usuario_p
and	(vl_rateio IS NOT NULL AND vl_rateio::text <> '')
and	vl_rateio > 0
and	((cd_centro_custo IS NOT NULL AND cd_centro_custo::text <> '') or (cd_conta_contabil IS NOT NULL AND cd_conta_contabil::text <> '') or (cd_conta_financ IS NOT NULL AND cd_conta_financ::text <> ''));


BEGIN

ds_descricao_padrao_w := '('||WHEB_MENSAGEM_PCK.get_texto(795697)||')';--'(Não Existe)'
select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento_v
where	cd_estabelecimento = cd_estabelecimento_p;

open c01;
loop
fetch c01 into
	cd_centro_custo_w,
	cd_conta_contabil_w,
	cd_conta_financ_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (coalesce(cd_centro_custo_w,0) <> 0) then
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	centro_custo
		where	cd_centro_custo = cd_centro_custo_w
		and	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_p;

		if (qt_existe_w = 0) then
			
			select	max(ds_centro_custo)
			into STRICT	ds_descricao_w
			from	centro_custo
			where	cd_centro_custo = cd_centro_custo_w
			and	cd_estabelecimento = cd_estabelecimento_p;
			
			ds_consistencia_w	:= 	substr(ds_consistencia_w ||
						WHEB_MENSAGEM_PCK.get_texto(313997, 'CD_CENTRO_CUSTO_W=' || cd_centro_custo_w || ';DS_DESCRICAO_W=' || coalesce(ds_descricao_w, ds_descricao_padrao_w)) || chr(10) || chr(13), 0, 4000); --'O centro de custo ' || cd_centro_custo_w || ' - ' || nvl(ds_descricao_w,'(Não Existente)') || ' está inativo ou não existe no Tasy.
		end if;

		end;
	end if;

	if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	conta_contabil
		where	cd_conta_contabil = cd_conta_contabil_w
		and	ie_situacao = 'A'
		and	cd_empresa = cd_empresa_w;

		if (qt_existe_w = 0) then
						
			select	max(ds_conta_contabil)
			into STRICT	ds_descricao_w
			from	conta_contabil
			where	cd_conta_contabil = cd_conta_contabil_w
			and	cd_empresa = cd_empresa_w;

			ds_consistencia_w	:= 	substr(ds_consistencia_w ||
						WHEB_MENSAGEM_PCK.get_texto(313999, 'CD_CONTA_CONTABIL_W=' || CD_CONTA_CONTABIL_W || ';DS_DESCRICAO_W=' || coalesce(ds_descricao_w,ds_descricao_padrao_w)) || chr(10) || chr(13), 0, 4000); --'A conta contábil ' || cd_conta_contabil_w || ' - ' || nvl(ds_descricao_w,'(Não Existente)') || ' está inativa ou não existe no Tasy.'
		end if;

		end;
	end if;
	
	
	if (coalesce(cd_conta_financ_w,0) <> 0) then
		begin

		select	count(*)
		into STRICT	qt_existe_w
		from	conta_financeira
		where	cd_conta_financ = cd_conta_financ_w
		and	ie_situacao = 'A'
		and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

		if (qt_existe_w = 0) then

			select	max(ds_conta_financ)
			into STRICT	ds_descricao_w
			from	conta_financeira
			where	cd_conta_financ = cd_conta_financ_w
			and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;
		
			ds_consistencia_w	:= 	substr(ds_consistencia_w ||
						WHEB_MENSAGEM_PCK.get_texto(314000, 'CD_CONTA_FINANC_W=' || CD_CONTA_FINANC_W || ';DS_DESCRICAO_W=' || coalesce(ds_descricao_w,ds_descricao_padrao_w)) || chr(10) || chr(13), 0, 4000); --'A conta financeira ' || cd_conta_financ_w ||  ' - ' || nvl(ds_descricao_w,'(Não Existente)') || ' está inativa ou não existe no Tasy'
		end if;

		end;
	end if;

	end;
end loop;
close c01;

return ds_consistencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_consist_imp_rateio_solic ( nr_solic_compra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

