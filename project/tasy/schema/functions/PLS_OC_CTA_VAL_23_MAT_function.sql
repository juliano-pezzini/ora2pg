-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_val_23_mat ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_validacao_p pls_tipos_ocor_pck.dados_regra_val_util_item, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, dados_conta_mat_p pls_tipos_ocor_pck.dados_conta_mat) RETURNS PLS_TIPOS_OCOR_PCK.DADOS_RET_VAL_23 AS $body$
DECLARE


ds_observacao_w		varchar(32000);
dados_outro_mat_w	pls_tipos_ocor_pck.dados_conta_mat;
ds_sql_w		varchar(4000);
ds_campo_sql_w		varchar(500);
dados_restricao_w	pls_tipos_ocor_pck.dados_restricao_select;
qt_mat_lib_total_w	double precision;
bind_sql_valor_w	sql_pck.t_dado_bind;
cursor_w		sql_pck.t_cursor;
ie_valido_extra_w	varchar(1);
dados_ret_val_23_w	pls_tipos_ocor_pck.dados_ret_val_23;
qt_saldo_w		pls_conta_mat.qt_material_imp%type;
qt_excedido_w		pls_conta_mat.qt_material_imp%type;


BEGIN

if (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '') then

	-- Inicializa as variáveis
	ds_observacao_w := null;
	dados_restricao_w.ds_restricao_proc := '';
	dados_restricao_w.ds_restricao_mat := '';
	qt_mat_lib_total_w := 0;

	-- Obtém as restrições conforme cadastrado na regra para que sejam buscados os itens que estão de acordo com a estrutura montada para contabilizar e verificar a quantidade total utilizada deste material em outros itens
	bind_sql_valor_w := pls_oc_cta_obter_rest_val_23(	dados_validacao_p, dados_regra_p, null, dados_conta_mat_p, 'M', null, bind_sql_valor_w);

	-- se for intercâmbio filtra os campos
	-- isso diminui um acesso as tabelas de fatura e melhora a performance
	if (dados_conta_mat_p.ie_tipo_conta = 'I') then
		ds_campo_sql_w := ds_campo_sql_w || 'outro_mat.nr_nota_cobranca, ' || pls_util_pck.enter_w ||
						    'outro_mat.nr_fatura, ' || pls_util_pck.enter_w ||
						    'outro_mat.cd_congenere, ' || pls_util_pck.enter_w;
	else
		ds_campo_sql_w := ds_campo_sql_w || 'null nr_nota_cobranca, ' || pls_util_pck.enter_w ||
						    'null nr_fatura, ' || pls_util_pck.enter_w ||
						    'null cd_congenere, ' || pls_util_pck.enter_w;
	end if;

	-- Aqui é montado o select para recuperar os procedimentos que foram executados e se encaixam na regra montada.
	ds_sql_w :=	'select	outro_mat.nr_seq_conta, 		' || pls_util_pck.enter_w ||
			'	outro_mat.nr_sequencia, 		' || pls_util_pck.enter_w ||
			'	outro_mat.cd_guia_referencia, 		' || pls_util_pck.enter_w ||
			'	outro_mat.qt_ok qt_material, 		' || pls_util_pck.enter_w ||
			ds_campo_sql_w ||
			'	outro_mat.ie_tipo_conta, 		' || pls_util_pck.enter_w ||
			'	outro_mat.dt_atendimento,	 	' || pls_util_pck.enter_w ||
			'	outro_mat.nr_seq_prestador_exec,	' || pls_util_pck.enter_w ||
			'	outro_mat.cd_cid_principal_conta, 	' || pls_util_pck.enter_w ||
			'	outro_mat.cd_cat_cid_principal_conta, 	' || pls_util_pck.enter_w ||
			'	outro_mat.nr_seq_cbo_saude,	 	' || pls_util_pck.enter_w ||
			'	outro_mat.cd_medico_executor, 		' || pls_util_pck.enter_w ||
			'	outro_mat.nr_seq_material	 	' || pls_util_pck.enter_w ||
			'from	pls_conta_mat_ocor_v outro_mat 		' || pls_util_pck.enter_w ||
			'where	1 = 1 					' || pls_util_pck.enter_w ||
			dados_restricao_w.ds_restricao_mat 		  || pls_util_pck.enter_w ||
			'order by outro_mat.dt_atendimento, outro_mat.qt_ok desc ';

	-- Executa o comando e devolve o cursor
	bind_sql_valor_w := sql_pck.executa_sql_cursor(ds_sql_w, bind_sql_valor_w);

	loop
		fetch 	cursor_w
		into	dados_outro_mat_w.nr_seq_conta, dados_outro_mat_w.nr_seq_conta_mat,
			dados_outro_mat_w.cd_guia_referencia, dados_outro_mat_w.qt_material,
			dados_outro_mat_w.nr_nota_cobranca, dados_outro_mat_w.nr_fatura,
			dados_outro_mat_w.cd_congenere, dados_outro_mat_w.ie_tipo_conta,
			dados_outro_mat_w.dt_atendimento, dados_outro_mat_w.nr_seq_prestador_exec,
			dados_outro_mat_w.cd_cid, dados_outro_mat_w.cd_cat_cid,
			dados_outro_mat_w.nr_seq_cbo_saude, dados_outro_mat_w.cd_medico_executor,
			dados_outro_mat_w.nr_seq_material;
		EXIT WHEN NOT FOUND; /* apply on cursor_w */

		-- verificações extras que foram retiradas da clausula where do select acima por motivos de performance
		ie_valido_extra_w := pls_oc_cta_val_23_if_extra(	dados_validacao_p, dados_regra_p,
									null, dados_conta_mat_p,
									null, dados_outro_mat_w,
									'M');

		-- se retornar S, significa que as condições foram atendidas
		if (ie_valido_extra_w = 'S') then

			-- Incrementa a quantidade total com a quantidade utilizada para a contabilização
			qt_mat_lib_total_w := qt_mat_lib_total_w + dados_outro_mat_w.qt_material;

			ds_observacao_w := substr(ds_observacao_w || pls_util_pck.enter_w ||
					   'Conta: ' || dados_outro_mat_w.nr_seq_conta ||
					   ' | Guia: ' || dados_outro_mat_w.cd_guia_referencia ||
					   ' | Seq Mat: ' || dados_outro_mat_w.nr_seq_conta_mat ||
					   ' | Cód Mat: ' || pls_obter_seq_codigo_material(dados_outro_mat_w.nr_seq_material,'') ||
					   ' | Quant: ' || dados_outro_mat_w.qt_material,1,2000);

			-- se for intercâmbio
			if (dados_outro_mat_w.ie_tipo_conta = 'I') then
				ds_observacao_w := ds_observacao_w ||
						   ' | Nota Cobr: ' || dados_outro_mat_w.nr_nota_cobranca ||
						   ' | Fatura: ' || dados_outro_mat_w.nr_fatura ||
						   ' | Operadora: ' || dados_outro_mat_w.cd_congenere;
			end if;
		end if;
		-- já sai direto (performance)
		-- se precisar colocar todas as observações vai ser preciso rever essa situação
		if (qt_mat_lib_total_w > dados_validacao_p.qt_liberada) then
			exit;
		end if;
	end loop;
	close cursor_w;

	-- Se não ultrapassou a quantidade definida pela regra então limpa a observação pois não precisa gerar nada
	if (qt_mat_lib_total_w <= dados_validacao_p.qt_liberada) then
		ds_observacao_w := null;
	else
		-- Complementar a observação
		ds_observacao_w := 	'Este item ultrapassa a quantidade permitida!' || pls_util_pck.enter_w ||
					'Quantidade permitida pela regra: ' || dados_validacao_p.qt_liberada || pls_util_pck.enter_w ||
					'Itens utilizados no período verificado: ' || pls_util_pck.enter_w ||
					ds_observacao_w;

		qt_excedido_w := dados_validacao_p.qt_liberada;

	end if;
end if;

dados_ret_val_23_w.ds_observacao := substr(ds_observacao_w,1,2000);
dados_ret_val_23_w.qt_excedido := qt_excedido_w;

return dados_ret_val_23_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_val_23_mat ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_validacao_p pls_tipos_ocor_pck.dados_regra_val_util_item, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, dados_conta_mat_p pls_tipos_ocor_pck.dados_conta_mat) FROM PUBLIC;

