-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (dt_hora		timestamp);


CREATE OR REPLACE FUNCTION hqs_obter_horario_imp_recom ( nr_prescricao_p bigint, nr_sequencia_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(2000)	:= null;
ds_horario_w		varchar(2000);
ds_hora_w		varchar(010);
ds_hor_res_w		varchar(2000);
ds_pos_res_w		varchar(2000);
ds_cor_res_w		varchar(2000);
ds_estilo_res_w		varchar(2000);
type Vetor is table of campos index by integer;
horarios_w		Vetor;
horario_w			Vetor;
i			integer	:= 0;
k			integer := 0;
z			integer;
dt_hora_w		timestamp;
dt_inic_w			timestamp;
dt_fim_w			timestamp;
ie_separador_w		varchar(1)	:= '';
ds_noturno_w		varchar(5)	:= '19/06';
ie_cor_fonte_w		varchar(2)	:= 'V';
ie_Estilo_w		varchar(1)	:= '';
ie_Cor_w			varchar(5)	:= '';
qt_reg_w			integer;
nr_seq_w			integer;
ie_horarios_w		varchar(10);
ie_se_necessario_w	varchar(1);
ie_estilo_padrao_w		varchar(1);
ie_operacao_w		varchar(1);

C01 CURSOR FOR
	SELECT	padroniza_horario_prescr(CASE WHEN coalesce(c.ie_operacao,'')='F' THEN Reordenar_Horarios(coalesce(to_date('01/01/2000'||to_char(a.dt_primeiro_horario,'hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss'), a.dt_primeiro_horario),b.ds_horarios)  ELSE b.ds_horarios END , CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,null),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END )
	FROM prescr_medica a, prescr_recomendacao b
LEFT OUTER JOIN intervalo_prescricao c ON (b.cd_intervalo = c.cd_intervalo)
WHERE b.nr_prescricao	= nr_prescricao_p  and a.nr_prescricao = b.nr_prescricao and padroniza_horario_prescr(CASE WHEN coalesce(c.ie_operacao,'')='F' THEN Reordenar_Horarios(coalesce(to_date('01/01/2000'||to_char(a.dt_primeiro_horario,'hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss'),a.dt_primeiro_horario),b.ds_horarios)  ELSE b.ds_horarios END , CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,null),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END ) is not null;


BEGIN

select	a.ie_operacao
into STRICT	ie_operacao_w
FROM prescr_recomendacao b
LEFT OUTER JOIN intervalo_prescricao a ON (b.cd_intervalo = a.cd_intervalo)
WHERE b.nr_prescricao	= nr_prescricao_p and b.nr_sequencia	= nr_sequencia_p;

begin
select	coalesce(vl_parametro, vl_parametro_padrao)
into STRICT	ds_noturno_w
from	funcao_parametro
where	cd_funcao	= 924
and	nr_sequencia	= 71;
dt_inic_w	:= To_date('01/01/2000 ' || substr(ds_noturno_w,1,2), 'dd/mm/yyyy hh24');
dt_fim_w	:= To_date('02/01/2000 ' || substr(ds_noturno_w,4,2), 'dd/mm/yyyy hh24');
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(282062);
end;

select	coalesce(vl_parametro, vl_parametro_padrao)
into STRICT	ie_horarios_w
from	funcao_parametro
where	cd_funcao = 924
and	nr_sequencia = 70;

select	coalesce(coalesce(vl_parametro, vl_parametro_padrao),'V')
into STRICT	ie_cor_fonte_w
from	funcao_parametro
where	cd_funcao = 924
and	nr_sequencia = 86;

select	coalesce(coalesce(vl_parametro, vl_parametro_padrao),'N')
into STRICT	ie_estilo_padrao_w
from	funcao_parametro
where	cd_funcao = 924
and	nr_sequencia = 132;

select	count(*),
	min(nr_sequencia)
into STRICT	qt_reg_w,
	nr_seq_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
  and	ie_agrupador	= 1
  and	nr_agrupamento	=
	(SELECT nr_agrupamento
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	  and	nr_sequencia	= nr_sequencia_p);
if (qt_reg_w > 1) and (nr_sequencia_p <> nr_seq_w) then
	ds_retorno_w		:= '';
	ds_horario_w		:= '';
else
	select	CASE WHEN ie_operacao_w='F' THEN Reordenar_Horarios(coalesce(to_date('01/01/2000'||to_char(a.dt_primeiro_horario,'hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss'),a.dt_primeiro_horario),b.ds_horarios)  ELSE b.ds_horarios END ,
		padroniza_horario_prescr(CASE WHEN ie_operacao_w='F' THEN Reordenar_Horarios(coalesce(to_date('01/01/2000'||to_char(a.dt_primeiro_horario,'hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss'),a.dt_primeiro_horario),b.ds_horarios)  ELSE b.ds_horarios END , CASE WHEN substr(Obter_Se_horario_hoje(a.dt_prescricao,a.dt_primeiro_horario,null),1,1)='N' THEN '01/01/2000 23:59:59'  ELSE to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'dd/mm/yyyy hh24:mi:ss') END ),
		'N'
	into STRICT	ds_retorno_w,
		ds_horario_w,
		ie_se_necessario_w
	from	Prescr_recomendacao b,
		prescr_medica a
	where	b.nr_prescricao	= nr_prescricao_p
	  and	b.nr_sequencia	= nr_sequencia_p
	  and	b.nr_prescricao = a.nr_prescricao;
end if;

if (coalesce(ds_horario_w::text, '') = '') or (ie_se_necessario_w = 'S') then
	ds_retorno_w		:= '1#1#'  || ds_retorno_w || '#1#;#;';
else
	begin
	i	:= 0;
	while	(ds_horario_w IS NOT NULL AND ds_horario_w::text <> '') LOOP
		begin
		select position(' ' in ds_horario_w) into STRICT k;
		if (k > 1) then
			ds_hora_w	:= substr(ds_horario_w, 1, k-1);
			ds_horario_w	:= substr(ds_horario_w, k + 1, 2000);
		elsif (ds_horario_w IS NOT NULL AND ds_horario_w::text <> '') then
			ds_hora_w 	:= replace(ds_horario_w, ' ','');
			ds_horario_w	:= '';
		end if;
		i	:= i + 1;
		if (substr(upper(ds_hora_w),1,1) = 'A') then
			horario_w[i].dt_hora	:= To_date('01/01/2000 ' || replace(ds_hora_w,'A',''), 'dd/mm/yyyy hh24:mi') + 1;
		else
			horario_w[i].dt_hora	:= To_date('01/01/2000 ' || ds_hora_w, 'dd/mm/yyyy hh24:mi');
		end if;
		end;
	END LOOP;
/* Selecionar os horários de toda prescrição */

	i	:= 0;
	OPEN C01;
	LOOP
	FETCH C01 into ds_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		while	(ds_horario_w IS NOT NULL AND ds_horario_w::text <> '') LOOP
			begin
			select position(' ' in ds_horario_w) into STRICT k;
			if (k > 1) then
				ds_hora_w	:= substr(ds_horario_w, 1, k-1);
				ds_horario_w	:= substr(ds_horario_w, k + 1, 2000);
			elsif (ds_horario_w IS NOT NULL AND ds_horario_w::text <> '') then
				ds_hora_w 	:= replace(ds_horario_w, ' ','');
				ds_horario_w	:= '';
			end if;
			z			:= 0;
			k			:= 1;
			if (substr(upper(ds_hora_w),1,1) = 'A') then
				dt_hora_w	:= To_date('02/01/2000 ' || replace(ds_hora_w,'A',''), 'dd/mm/yyyy hh24:mi');
			else
				dt_hora_w	:= To_date('01/01/2000 ' || ds_hora_w, 'dd/mm/yyyy hh24:mi');
			end if;
			FOR k in 1..Horarios_w.count LOOP
				if (horarios_w[k].dt_hora = dt_hora_w) then
					z	:= k;
				end if;
			END LOOP;
			if (z = 0) then
				i	:= i + 1;
				horarios_w[i].dt_hora	:= dt_hora_w;
			end if;
			end;
		END LOOP;
	END LOOP;
	CLOSE C01;



/* Classificar os horários */

	k		:= 1;
	z		:= 0;
	while	z = 0 LOOP
		z	:= 1;
		FOR k in 1..Horarios_w.count LOOP
			if (k < Horarios_w.count) and (horarios_w[k].dt_hora > horarios_w[k+ 1].dt_hora) then
				dt_hora_w		:= horarios_w[k].dt_hora;
				horarios_w[k].dt_hora	:= horarios_w[K + 1].dt_hora;
				horarios_w[k+1].dt_hora	:= dt_hora_w;
				z			:= 0;
			end if;
		END LOOP;
	END LOOP;

/* Retorno dos horários na sequencia */

	k	:= 1;
	FOR k in 1..Horario_w.count LOOP
		begin
		i	:= 1;
		for i in 1..horarios_w.count LOOP
			if (horario_w[k].dt_hora = horarios_w[i].dt_hora) then
				z	:= i;
			end if;
		END LOOP;
		ds_hora_w		:= to_char(horario_w[k].dt_hora,'hh24:mi');
		if (substr(ds_hora_w,1,2) = '00') then
			ds_hora_w	:= '24:' || substr(ds_hora_w,4,2);
		end if;
		if (substr(ds_hora_w,4,2) = '00') then
			ds_hora_w	:= substr(ds_hora_w,1,2);
		end if;
		if (horario_w[k].dt_hora >= dt_inic_w) and (horario_w[k].dt_hora <= dt_fim_w) then
			ie_Cor_w	:= ie_cor_fonte_w;
			ie_estilo_w	:= ie_estilo_padrao_w;
		else
			ie_Cor_w	:= '';
			ie_estilo_w	:= '';
		end if;
		ds_hor_res_w		:= ds_hor_res_w || ie_separador_w || ds_hora_w;
		ds_pos_res_w		:= ds_pos_res_w || ie_separador_w || z;
		ds_cor_res_w		:= ds_cor_res_w  || ie_separador_w || ie_cor_w;
		ds_estilo_res_w		:= ds_estilo_res_w || ie_separador_w || ie_estilo_w;
		ie_separador_w		:= ';';
		end;
	END LOOP;
	ds_retorno_w	:= horarios_w.count || '#' || horario_w.count || '#' ||
			ds_hor_res_w || '#' || ds_pos_res_w ||
			'#' || ds_estilo_res_w || '#' || ds_cor_res_w;
	end;
end if;

return	substr(ds_retorno_w,1,2000);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hqs_obter_horario_imp_recom ( nr_prescricao_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

