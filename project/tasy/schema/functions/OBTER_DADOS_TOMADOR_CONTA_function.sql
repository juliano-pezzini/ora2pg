-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_tomador_conta (nr_sequencia_p nota_fiscal.nr_sequencia%type, ie_tipo_tomador_p text, ie_tipo_p text) RETURNS varchar AS $body$
DECLARE

 
/* 
ie_tipo_tomador_p 
 
C - Paciente da conta paciente no qual gerou a NF 
-------------------------- 
ie_tipo_p 
 
IM - InscricaoMunicipalTomador 
IE - InscricaoEstadualTomador 
RS - RazaoSocialTomador 
TL - TipoLogradouro 
L  - Logradouro 
NE - NumeroEndereco 
CE - ComplementoEndereco 
B  - Bairro 
C  - Cidade 
UF - UF 
CEP - CEP 
ET - Email 
CPF - CPF 
CF - CD_PESSOA_FISICA 
 
*/
 
ds_insc_mun_w		varchar(255);
ds_insc_estadual_w	varchar(255);
ds_razao_social_w		varchar(255);
ds_tipo_logradouro_w	varchar(255);
ds_logradouro_w		varchar(255);
ds_numero_endereco_w	varchar(255);
ds_compl_endereco_w	varchar(255);
ds_bairro_w		varchar(255);
ds_cidade_w		varchar(255);
ds_uf_w			varchar(255);
ds_cep_w		varchar(255);
ds_email_w		varchar(255);
ds_cpf_w			varchar(255);
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
ds_retorno_w		varchar(255);

BEGIN
 
if (ie_tipo_tomador_p = 'C') then 
	begin 
	 
	select max(a.cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	conta_paciente c, 
		atendimento_paciente a, 
		nota_fiscal b 
	where	c.nr_interno_conta = b.nr_interno_conta 
	and	c.nr_atendimento = a.nr_atendimento 
	and	b.nr_sequencia = nr_sequencia_p;
	 
	select	substr(lpad(obter_dados_nfse_sp(cd_pessoa_fisica_w,null,'IM'),8,'0'),1,30), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w,null,'IE'),1,19), 
		substr(nfe_elimina_caractere_especial(obter_nome_pf_pj(cd_pessoa_fisica_w,null)),1,255), 
		coalesce(obter_logr_abreviado_sp(obter_dados_pf_pj(cd_pessoa_fisica_w,null,'LO')),'Rua'), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'LG') ,1,50), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'NR'),1,25), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'COM'),1,30), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'BAI'),1,30), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'CID'),1,7), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'UF'),1,2), 
		lpad(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'CEP'),8,'0'), 
		substr(obter_dados_nfse_sp(cd_pessoa_fisica_w, null, 'EML'),1,75), 
		substr(obter_dados_pf(cd_pessoa_fisica_w, 'CPF'), 1, 11)		 
	into STRICT	ds_insc_mun_w, 
		ds_insc_estadual_w, 
		ds_razao_social_w, 
		ds_tipo_logradouro_w, 
		ds_logradouro_w, 
		ds_numero_endereco_w, 
		ds_compl_endereco_w, 
		ds_bairro_w, 
		ds_cidade_w, 
		ds_uf_w, 
		ds_cep_w, 
		ds_email_w, 
		ds_cpf_w 
	;
	 
	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then 
		ds_tipo_logradouro_w := null;
		ds_bairro_w := null;
		ds_cep_w := null;
	end if;
	 
	if (ie_tipo_p = 'IM') then 
		ds_retorno_w := substr(ds_insc_mun_w,1,255);
	elsif (ie_tipo_p = 'IE') then 
		ds_retorno_w := substr(ds_insc_estadual_w,1,255);
	elsif (ie_tipo_p = 'RS') then 
		ds_retorno_w := substr(ds_razao_social_w,1,255);
	elsif (ie_tipo_p = 'TL') then	 
		ds_retorno_w := substr(ds_tipo_logradouro_w,1,255);
	elsif (ie_tipo_p = 'L') then 
		ds_retorno_w := substr(ds_logradouro_w,1,255);
	elsif (ie_tipo_p = 'NE') then 
		ds_retorno_w := substr(ds_numero_endereco_w,1,255);
	elsif (ie_tipo_p = 'CE') then 
		ds_retorno_w := substr(ds_compl_endereco_w,1,255);
	elsif (ie_tipo_p = 'B') then 
		ds_retorno_w := substr(ds_bairro_w,1,255);
	elsif (ie_tipo_p = 'C') then 
		ds_retorno_w := substr(ds_cidade_w,1,255);
	elsif (ie_tipo_p = 'UF') then 
		ds_retorno_w := substr(ds_uf_w,1,255);
	elsif (ie_tipo_p = 'CEP') then 
		ds_retorno_w := substr(ds_cep_w,1,255);
	elsif (ie_tipo_p = 'ET') then 
		ds_retorno_w := substr(ds_email_w,1,255);
	elsif (ie_tipo_p = 'CPF') then 
		ds_retorno_w := substr(ds_cpf_w,1,255);
	elsif (ie_tipo_p = 'CF') then 
		ds_retorno_w := cd_pessoa_fisica_w;
	end if;
		 
	end;
end if;
		 
return	substr(ds_retorno_w,1,255);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_tomador_conta (nr_sequencia_p nota_fiscal.nr_sequencia%type, ie_tipo_tomador_p text, ie_tipo_p text) FROM PUBLIC;

