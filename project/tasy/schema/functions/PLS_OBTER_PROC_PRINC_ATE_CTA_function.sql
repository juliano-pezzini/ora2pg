-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_proc_princ_ate_cta ( nr_seq_conta_p pls_conta.nr_sequencia%type, ie_opcao_p text ) RETURNS varchar AS $body$
DECLARE

 
					 
-- ESTA ROTINA DEVE RETORNAR O PROCEDIMENTO PRINCIPAL DO ATENDIMENTO DA CONTA MÉDICA 
-- Variavel de retorno 
ds_retorno_w				varchar(4000) := null;

-- Dados da conta 
cd_guia_ok_w				pls_conta.cd_guia_ok%type;
nr_seq_segurado_w			pls_conta.nr_seq_segurado%type;
dt_atendimento_referencia_w		pls_conta.dt_atendimento_referencia%type;

-- Dados do procedimento princ 
nr_seq_conta_proc_w			pls_conta_proc.nr_sequencia%type;
cd_procedimento_w			procedimento.cd_procedimento%type;
ie_origem_proced_w			procedimento.ie_origem_proced%type;
ds_procedimento_w			procedimento.ds_procedimento%type;
dt_procedimento_w			pls_conta_proc.dt_procedimento%type;

c01 CURSOR(cd_guia_ok_pc		pls_conta.cd_guia_ok%type, 
		nr_seq_segurado_pc	pls_conta.nr_seq_segurado%type) FOR 
	SELECT	p.nr_sequencia, 
		p.cd_procedimento, 
		p.ie_origem_proced, 
		p.ds_procedimento, 
		p.dt_procedimento 
	from	pls_conta_proc_v	p 
	where	p.cd_guia_referencia	= cd_guia_ok_pc 
	and	p.nr_seq_segurado	= nr_seq_segurado_pc 
	and	p.ie_tipo_despesa	= '1' 
	order by 
		CASE WHEN vl_procedimento_imp=0 THEN vl_procedimento  ELSE vl_procedimento_imp END  desc, p.tx_item desc;

BEGIN 
if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then 
	-- Obter dados da conta 
	select	max(cd_guia_ok), 
		max(nr_seq_segurado), 
		max(dt_atendimento_referencia) 
	into STRICT	cd_guia_ok_w, 
		nr_seq_segurado_w, 
		dt_atendimento_referencia_w 
	from	pls_conta 
	where	nr_sequencia	= nr_seq_conta_p;
	 
	-- Obter dados da conta principal 
	select	max(dt_atendimento_referencia) 
	into STRICT	dt_atendimento_referencia_w 
	from	pls_conta 
	where	nr_seq_conta_princ	= nr_seq_conta_p;
	 
	-- Obter procedimento principal 
	for r_C01_w in C01( cd_guia_ok_w, nr_seq_segurado_w) loop 
		nr_seq_conta_proc_w	:= r_C01_w.nr_sequencia;
		cd_procedimento_w	:= r_C01_w.cd_procedimento;
		ie_origem_proced_w	:= r_C01_w.ie_origem_proced;
		ds_procedimento_w	:= r_C01_w.ds_procedimento;
		dt_procedimento_w	:= r_C01_w.dt_procedimento;
	end loop;
	 
	-- Retonar informação consultada 
	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then 
		if (ie_opcao_p = 'C') then -- Código do procedimento 
			ds_retorno_w	:= cd_procedimento_w;
 
		elsif (ie_opcao_p = 'O') then -- Origem do procedimento 
			ds_retorno_w	:= ie_origem_proced_w;
			 
		elsif (ie_opcao_p = 'D') then -- Descrição do procedimento 
			ds_retorno_w	:= ds_procedimento_w;
		 
		elsif (ie_opcao_p = 'N') then -- Código com Descrição do procedimento 
			ds_retorno_w	:= substr(cd_procedimento_w ||' - '|| ds_procedimento_w,1,4000);
		 
		elsif (ie_opcao_p = 'S') then -- Sequência do conta proc 
			ds_retorno_w	:= nr_seq_conta_proc_w;
		 
		elsif (ie_opcao_p = 'DT') then 
			ds_retorno_w	:= to_char(coalesce(dt_procedimento_w, dt_atendimento_referencia_w), 'dd/mm/yyyy');
			 
		end if;
	end if;	
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_proc_princ_ate_cta ( nr_seq_conta_p pls_conta.nr_sequencia%type, ie_opcao_p text ) FROM PUBLIC;

