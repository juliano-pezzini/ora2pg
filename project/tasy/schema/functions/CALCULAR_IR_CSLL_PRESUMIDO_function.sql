-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION calcular_ir_csll_presumido ( cd_estabelecimento_p bigint, dt_inicial_p text, dt_final_p text, ie_tributo_p text, vl_adicionais_p text, vl_descontos_p text, ie_opcao_p bigint, cd_tributo_p text default null, ie_opcao_tributo_p bigint default 1) RETURNS bigint AS $body$
DECLARE


adicionais_w		double precision;
aliquota_w		double precision;
auxiliar_w			double precision;
descontos_w		double precision;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
ie_tipo_tributo_w		varchar(15);
lucro_presumido_w		double precision;
nr_meses_bonificacao_w	double precision;
nr_sequencia_w		bigint;
receita_bruta_w		double precision;
retorno_w			double precision;
vl_bonificacao_w		double precision;
vl_imposto_w		double precision;
vl_lucro_presumido_w	double precision;
vl_minimo_bonificacao_w	double precision;
vl_taxa_acrescimo_w	double precision;

/* OPÇÔES

	IE_OPCAO_P
5:  valor da receita bruta
10: valor do lucro presumido
15: valor dos adicionais
20: valor do lucro presumido mais os adicionais
25: contribuição do IR
30: nº de meses da bonificação
35: bonificação total
40: contribuição do IR - bonificações
45: valor a somar na contribuição do IR
50: valor da contribuição mais o acréscimo
55: descontos
60: retenções
65: IR a pagar
70: percentual para cálculo do lucro presumido
75: alíquota do imposto
80: valor da bonificação
85: taxa de acréscimo

			IE_OPCAO_TRIBUTO_P
1: Busca os resultados por tipo de tributo (utiliza o campo "IE_TIPO_TRIBUTO" da tabela "TRIBUTO")
2: Busca os resultados por tributo (utiliza o campo "CD_TRIBUTO" da tabela "TRIBUTO")

*/
BEGIN

dt_inicial_w := to_date(dt_inicial_p, 'dd/mm/yyyy');
dt_final_w := to_date(dt_final_p, 'dd/mm/yyyy');

if (ie_opcao_tributo_p = 1)  then

	--Somar os valores das contas contábeis, verificando aquelas que deverão ser adicionadas e aquelas que deverão ser subtraídas
	select 	coalesce(sum(CASE WHEN c.ie_soma_diminui='S' THEN  vl_saldo  ELSE 0 END ),0),
		coalesce(sum(CASE WHEN c.ie_soma_diminui='D' THEN  vl_saldo  ELSE 0 END ),0)
	into STRICT	adicionais_w,
		descontos_w
	from	tributo_regra_ctb c,
		tributo d,
		ctb_mes_ref b,
		ctb_saldo a
	where	b.nr_sequencia = a.nr_seq_mes_ref
	and	c.cd_conta_contabil = a.cd_conta_contabil
	and	c.cd_tributo = d.cd_tributo
	and	b.cd_empresa = obter_empresa_estab(cd_estabelecimento_p)
	and	to_char(b.dt_referencia,'mm/yyyy') = to_char(dt_final_w, 'mm/yyyy')
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	d.ie_tipo_tributo = ie_tributo_p;

	--Calcular a receita bruta no período selecionado
	select	sum(vl_mercadoria)
	into STRICT	receita_bruta_w
	from	nota_fiscal n,
		operacao_nota o
	where	n.cd_operacao_nf = o.cd_operacao_nf
	and	o.ie_servico = 'S' -- nota de serviço
	and	o.ie_operacao_fiscal = 'S' --saida
	and	n.ie_situacao = 1 -- ativa
	and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
	and	n.dt_emissao between to_char(dt_inicial_w, 'dd/mm/yyyy') and to_char(dt_final_w, 'dd/mm/yyyy');

	-- Seleceionar o maior número de sequência da tabela tributo_calc_presumido para possibilitar que seja selecionada a alíquota mais recentemente cadastrada para um tributo.
	select	max(a.nr_sequencia)
	into STRICT	nr_sequencia_w
	from	tributo_calc_presumido a,
		tributo d
	where	a.cd_tributo = d.cd_tributo
	and	d.ie_tipo_tributo = ie_tributo_p
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.dt_inicio_vigencia <= clock_timestamp()
	and	a.dt_fim_vigencia >= clock_timestamp();

	-- Selecionar a alíquota e os demais dados do tributo
	if (nr_sequencia_w > 0) then
		select	a.vl_lucro_presumido,
			a.vl_bonificacao,
			a.nr_meses_bonificacao,
			a.vl_taxa_acrescimo,
			a.vl_minimo_bonificacao,
			a.vl_aliquota_imposto
		into STRICT	vl_lucro_presumido_w,
			vl_bonificacao_w,
			nr_meses_bonificacao_w,
			vl_taxa_acrescimo_w,
			vl_minimo_bonificacao_w,
			aliquota_w
		from	tributo_calc_presumido a
		where	a.nr_sequencia = nr_sequencia_w;
	end if;

	--Calcular o valor da receita bruta
	if (ie_opcao_p >= 5) then
		retorno_w := receita_bruta_w;
	end if;

	--Calcular o valor do lucro presumido (Receita Bruta * vl_lucro_presumido)
	if (ie_opcao_p >= 10) then
		lucro_presumido_w := receita_bruta_w * (vl_lucro_presumido_w/100);
		retorno_w := lucro_presumido_w;
	end if;

	-- Calcular os valores que deverão ser somados ao lucro presumido (estes valores são obtidos das contas contábeis {primeiro select desta função] ou são informados pelo usuário)
	if (ie_opcao_p >= 15) then
		if (vl_adicionais_p IS NOT NULL AND vl_adicionais_p::text <> '') then
			adicionais_w := (vl_adicionais_p)::numeric;
		end if;
		retorno_w := adicionais_w;
	end if;

	-- Somar o valor do lucro presumido ao dos adicionais
	if (ie_opcao_p >= 20) then
		lucro_presumido_w:= lucro_presumido_w + adicionais_w;
		retorno_w := lucro_presumido_w;
	end if;

	-- Calcular a contribuição do imposto de renda, ou seja, o valor do lucro presumido + os adicionados ( valor armazenado na variável lucro_presumido_w) pela alíquota do imposto(alíquota_w)
	if (ie_opcao_p >= 25) then
		vl_imposto_w := lucro_presumido_w * (aliquota_w/100);
		retorno_w := vl_imposto_w;
	end if;

	-- Calcular o número de meses entre as duas datas passadas como parâmetro, para que após isto seja possível realizar o cálculo do valor da bonificação total
	if (ie_opcao_p >= 30) then
		if (to_char(dt_final_w,'mm') >= to_char(dt_inicial_w,'mm')) then
			select (to_char(dt_final_w,'mm') - to_char(dt_inicial_w, 'mm') + 1)
			into STRICT	retorno_w
			;
		else
			select (to_char(dt_final_w,'mm') + 12 - to_char(dt_inicial_w, 'mm') + 1)
			into STRICT	retorno_w
			;
		end if;
	end if;

	-- Cálculo da bonificação total, isto é, o valor da bonificação multiplicado pelo número de meses
	if (ie_opcao_p >= 35) then
		if (nr_meses_bonificacao_w <= retorno_w) then
			retorno_w := vl_bonificacao_w * nr_meses_bonificacao_w;
		else
			retorno_w := vl_bonificacao_w * retorno_w;
		end if;
	end if;

	-- Cálculo para identificação do quanto a base de cálculo (lucro presumido_w) é maior do que o valor da bonificação total. Este cálculo só pode ser realizado se a base de cálculo for maior do que a bonificação mínima.
	if (ie_opcao_p >= 40) then
		if (lucro_presumido_w > vl_minimo_bonificacao_w) then
			retorno_w := (lucro_presumido_w) - (retorno_w);
		end if;
	end if;

	-- Cálculo do valor que será acrescido à base de cálculo para posteriormente calcular o total do imposto. É obtido tomando-se o quanto a base de cálculo ultrapassa a bonificação mínima e multilpicando este valor pela taxa de acréscimo
	if (ie_opcao_p >= 45) then
		if (lucro_presumido_w > vl_minimo_bonificacao_w) then
			retorno_w := retorno_w * (vl_taxa_acrescimo_w/100);
		end if;
	end if;

	-- Cálculo do novo valor da base de cálculo. Este valor é a soma da contribuição (vl_imposto_w) com o valor que deveria ser acrescentado (retorno_w calculado na etapa anterior)
	if (ie_opcao_p >= 50) then
		if (lucro_presumido_w >= vl_minimo_bonificacao_w) then
			vl_imposto_w := vl_imposto_w + retorno_w;
			retorno_w := vl_imposto_w;
		end if;
	end if;

	-- Cálculo do valor do desconto. Este valor pode ser informado pelo usuário ou calculado por meio das contas contábeis. Caso o usuário passe um valor para descontos como parâmetro, será desprezado o valor das contas contábeis.
	--Este valor será descontado do total a pagar do imposto.
	if (ie_opcao_p >= 55) then
		if (vl_descontos_p IS NOT NULL AND vl_descontos_p::text <> '' AND ie_tributo_p = 'IR') then
			descontos_w := (vl_descontos_p)::numeric;
		end if;
		retorno_w := descontos_w;
		auxiliar_w := vl_imposto_w - descontos_w;
	end if;

	-- Cálculo do imposto retido nas notas fiscais (imposto retido na fonte). Este valor será descontado do total a pagar do imposto.
	if (ie_opcao_p >= 60) then

		select	coalesce(sum(c.vl_tributo),0)
		into STRICT	retorno_w
		from 	nota_fiscal n,
			nota_fiscal_trib c,
			tributo d,
			operacao_nota o
		where 	n.nr_sequencia = c.nr_sequencia
		and	d.cd_tributo = c.cd_tributo
		and	o.cd_operacao_nf = n.cd_operacao_nf
		and	o.ie_servico = 'S' -- nota de serviço
		and	o.ie_operacao_fiscal = 'S' --saida
		and	n.ie_situacao = 1 -- ativa
		and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
		and	n.dt_emissao between to_char(dt_inicial_w, 'dd/mm/yyyy') and to_char(dt_final_w, 'dd/mm/yyyy')
		and	d.ie_tipo_tributo = ie_tributo_p;
	end if;

	-- Cálculo do valor do imposto a pagar, ou seja, o valor anterior subtraido do total retido na fonte.
	if (ie_opcao_p >= 65) then
		retorno_w := auxiliar_w - retorno_w;
	end if;

	-- Retorno para apresentar o percentual do lucro presumido (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 70) then
		retorno_w := vl_lucro_presumido_w;
	end if;

	-- Retorno para apresentar o percentual da alíquota do imposto (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 75) then
		retorno_w := aliquota_w;
	end if;

	-- Retorno para apresentar o valor da bonificação mensal (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 80) then
		retorno_w := vl_bonificacao_w;
	end if;

	--  Retorno para apresentar o valor da taxa de acréscimo do imposto (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 85) then
		retorno_w := vl_taxa_acrescimo_w;
	end if;

else
--Somar os valores das contas contábeis, verificando aquelas que deverão ser adicionadas e aquelas que deverão ser subtraídas
	select 	coalesce(sum(CASE WHEN c.ie_soma_diminui='S' THEN  vl_saldo  ELSE 0 END ),0),
		coalesce(sum(CASE WHEN c.ie_soma_diminui='D' THEN  vl_saldo  ELSE 0 END ),0)
	into STRICT	adicionais_w,
		descontos_w
	from	tributo_regra_ctb c,
		tributo d,
		ctb_mes_ref b,
		ctb_saldo a
	where	b.nr_sequencia = a.nr_seq_mes_ref
	and	c.cd_conta_contabil = a.cd_conta_contabil
	and	c.cd_tributo = d.cd_tributo
	and	b.cd_empresa = obter_empresa_estab(cd_estabelecimento_p)
	and	to_char(b.dt_referencia,'mm/yyyy') = to_char(dt_final_w, 'mm/yyyy')
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	d.cd_tributo = cd_tributo_p;

	--Calcular a receita bruta no período selecionado
	select	sum(vl_mercadoria)
	into STRICT	receita_bruta_w
	from	nota_fiscal n,
		operacao_nota o
	where	n.cd_operacao_nf = o.cd_operacao_nf
	and	o.ie_servico = 'S' -- nota de serviço
	and	o.ie_operacao_fiscal = 'S' --saida
	and	n.ie_situacao = 1 -- ativa
	and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
	and	n.dt_emissao between to_char(dt_inicial_w, 'dd/mm/yyyy') and to_char(dt_final_w, 'dd/mm/yyyy');

	-- Seleceionar o maior número de sequência da tabela tributo_calc_presumido para possibilitar que seja selecionada a alíquota mais recentemente cadastrada para um tributo.
	select	max(a.nr_sequencia)
	into STRICT	nr_sequencia_w
	from	tributo_calc_presumido a,
		tributo d
	where	a.cd_tributo = d.cd_tributo
	and	d.cd_tributo = cd_tributo_p
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.dt_inicio_vigencia <= clock_timestamp()
	and	a.dt_fim_vigencia >= clock_timestamp();

	-- Selecionar a alíquota e os demais dados do tributo
	if (nr_sequencia_w > 0) then
		select	a.vl_lucro_presumido,
			a.vl_bonificacao,
			a.nr_meses_bonificacao,
			a.vl_taxa_acrescimo,
			a.vl_minimo_bonificacao,
			a.vl_aliquota_imposto
		into STRICT	vl_lucro_presumido_w,
			vl_bonificacao_w,
			nr_meses_bonificacao_w,
			vl_taxa_acrescimo_w,
			vl_minimo_bonificacao_w,
			aliquota_w
		from	tributo_calc_presumido a
		where	a.nr_sequencia = nr_sequencia_w;
	end if;

	--Calcular o valor da receita bruta
	if (ie_opcao_p >= 5) then
		retorno_w := receita_bruta_w;
	end if;

	--Calcular o valor do lucro presumido (Receita Bruta * vl_lucro_presumido)
	if (ie_opcao_p >= 10) then
		lucro_presumido_w := receita_bruta_w * (vl_lucro_presumido_w/100);
		retorno_w := lucro_presumido_w;
	end if;

	-- Calcular os valores que deverão ser somados ao lucro presumido (estes valores são obtidos das contas contábeis {primeiro select desta função] ou são informados pelo usuário)
	if (ie_opcao_p >= 15) then
		if (vl_adicionais_p IS NOT NULL AND vl_adicionais_p::text <> '') then
			adicionais_w := (vl_adicionais_p)::numeric;
		end if;
		retorno_w := adicionais_w;
	end if;

	-- Somar o valor do lucro presumido ao dos adicionais
	if (ie_opcao_p >= 20) then
		lucro_presumido_w:= lucro_presumido_w + adicionais_w;
		retorno_w := lucro_presumido_w;
	end if;

	-- Calcular a contribuição do imposto de renda, ou seja, o valor do lucro presumido + os adicionados ( valor armazenado na variável lucro_presumido_w) pela alíquota do imposto(alíquota_w)
	if (ie_opcao_p >= 25) then
		vl_imposto_w := lucro_presumido_w * (aliquota_w/100);
		retorno_w := vl_imposto_w;
	end if;

	-- Calcular o número de meses entre as duas datas passadas como parâmetro, para que após isto seja possível realizar o cálculo do valor da bonificação total
	if (ie_opcao_p >= 30) then
		if (to_char(dt_final_w,'mm') >= to_char(dt_inicial_w,'mm')) then
			select (to_char(dt_final_w,'mm') - to_char(dt_inicial_w, 'mm') + 1)
			into STRICT	retorno_w
			;
		else
			select (to_char(dt_final_w,'mm') + 12 - to_char(dt_inicial_w, 'mm') + 1)
			into STRICT	retorno_w
			;
		end if;
	end if;

	-- Cálculo da bonificação total, isto é, o valor da bonificação multiplicado pelo número de meses
	if (ie_opcao_p >= 35) then
		if (nr_meses_bonificacao_w <= retorno_w) then
			retorno_w := vl_bonificacao_w * nr_meses_bonificacao_w;
		else
			retorno_w := vl_bonificacao_w * retorno_w;
		end if;
	end if;

	-- Cálculo para identificação do quanto a base de cálculo (lucro presumido_w) é maior do que o valor da bonificação total. Este cálculo só pode ser realizado se a base de cálculo for maior do que a bonificação mínima.
	if (ie_opcao_p >= 40) then
		if (lucro_presumido_w > vl_minimo_bonificacao_w) then
			retorno_w := (lucro_presumido_w) - (retorno_w);
		end if;
	end if;

	-- Cálculo do valor que será acrescido à base de cálculo para posteriormente calcular o total do imposto. É obtido tomando-se o quanto a base de cálculo ultrapassa a bonificação mínima e multilpicando este valor pela taxa de acréscimo
	if (ie_opcao_p >= 45) then
		if (lucro_presumido_w > vl_minimo_bonificacao_w) then
			retorno_w := retorno_w * (vl_taxa_acrescimo_w/100);
		end if;
	end if;

	-- Cálculo do novo valor da base de cálculo. Este valor é a soma da contribuição (vl_imposto_w) com o valor que deveria ser acrescentado (retorno_w calculado na etapa anterior)
	if (ie_opcao_p >= 50) then
		if (lucro_presumido_w >= vl_minimo_bonificacao_w) then
			vl_imposto_w := vl_imposto_w + retorno_w;
			retorno_w := vl_imposto_w;
		end if;
	end if;

	-- Cálculo do valor do desconto. Este valor pode ser informado pelo usuário ou calculado por meio das contas contábeis. Caso o usuário passe um valor para descontos como parâmetro, será desprezado o valor das contas contábeis.
	--Este valor será descontado do total a pagar do imposto.
	if (ie_opcao_p >= 55) then

		select ie_tipo_tributo
		into STRICT   ie_tipo_tributo_w
		from   tributo
		where  cd_tributo = cd_tributo_p;

		if (vl_descontos_p IS NOT NULL AND vl_descontos_p::text <> '' AND ie_tipo_tributo_w = 'IR') then
			descontos_w := (vl_descontos_p)::numeric;
		end if;
		retorno_w := descontos_w;
		auxiliar_w := vl_imposto_w - descontos_w;
	end if;

	-- Cálculo do imposto retido nas notas fiscais (imposto retido na fonte). Este valor será descontado do total a pagar do imposto.
	if (ie_opcao_p >= 60) then

		select	coalesce(sum(c.vl_tributo),0)
		into STRICT	retorno_w
		from 	nota_fiscal n,
			nota_fiscal_trib c,
			tributo d,
			operacao_nota o
		where 	n.nr_sequencia = c.nr_sequencia
		and	d.cd_tributo = c.cd_tributo
		and	o.cd_operacao_nf = n.cd_operacao_nf
		and	o.ie_servico = 'S' -- nota de serviço
		and	o.ie_operacao_fiscal = 'S' --saida
		and	n.ie_situacao = 1 -- ativa
		and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
		and	n.dt_emissao between to_char(dt_inicial_w, 'dd/mm/yyyy') and to_char(dt_final_w, 'dd/mm/yyyy')
		and	d.cd_tributo = cd_tributo_p;
	end if;

	-- Cálculo do valor do imposto a pagar, ou seja, o valor anterior subtraido do total retido na fonte.
	if (ie_opcao_p >= 65) then
		retorno_w := auxiliar_w - retorno_w;
	end if;

	-- Retorno para apresentar o percentual do lucro presumido (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 70) then
		retorno_w := vl_lucro_presumido_w;
	end if;

	-- Retorno para apresentar o percentual da alíquota do imposto (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 75) then
		retorno_w := aliquota_w;
	end if;

	-- Retorno para apresentar o valor da bonificação mensal (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 80) then
		retorno_w := vl_bonificacao_w;
	end if;

	--  Retorno para apresentar o valor da taxa de acréscimo do imposto (valor cadastrado na regra para cálculo pelo lucro presumido shift + F11)
	if (ie_opcao_p = 85) then
		retorno_w := vl_taxa_acrescimo_w;
	end if;

end if;

return	retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION calcular_ir_csll_presumido ( cd_estabelecimento_p bigint, dt_inicial_p text, dt_final_p text, ie_tributo_p text, vl_adicionais_p text, vl_descontos_p text, ie_opcao_p bigint, cd_tributo_p text default null, ie_opcao_tributo_p bigint default 1) FROM PUBLIC;

