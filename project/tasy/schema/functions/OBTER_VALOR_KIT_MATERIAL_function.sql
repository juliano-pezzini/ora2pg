-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_kit_material (CD_KIT_MATERIAL_P bigint, DT_ATENDIMENTO_P timestamp, qt_lancamento_p bigint, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text) RETURNS bigint AS $body$
DECLARE



CD_MATERIAL_w			integer;
QT_MATERIAL_w			double precision;
qt_item_w			double precision;
CD_UNIDADE_MEDIDA_CONSUMO_w	varchar(30);
IE_VIA_APLICACAO_w		varchar(10);
ie_entra_conta_w			varchar(01);
ie_baixa_estoque_w		varchar(1);

vl_retorno_w			double precision	:= 0;
dt_aux_w			timestamp;
vl_auxiliar_w			double precision	:= 0;
vl_material_w			double precision	:= 0;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_mat_w		bigint;


C001 CURSOR FOR
	SELECT 	A.CD_MATERIAL,
		A.QT_MATERIAL,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) CD_UNIDADE_MEDIDA_CONSUMO,
		B.IE_VIA_APLICACAO,
		a.ie_entra_conta,
		a.ie_baixa_estoque
	FROM	MATERIAL B, COMPONENTE_KIT A
	WHERE (A.CD_MATERIAL = B.CD_MATERIAL)
	AND 	A.CD_KIT_MATERIAL = CD_KIT_MATERIAL_P
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_p,0))	= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio, coalesce(obter_tipo_convenio(cd_convenio_p),0)) = coalesce(obter_tipo_convenio(cd_convenio_p),0)
	AND 	A.IE_SITUACAO = 'A'
	AND 	B.IE_SITUACAO = 'A'
	AND	((coalesce(A.CD_ESTAB_REGRA::text, '') = '') OR (A.CD_ESTAB_REGRA = cd_estabelecimento_p));


BEGIN

OPEN C001;
LOOP
	FETCH C001 INTO
		CD_MATERIAL_w,
		QT_MATERIAL_w,
		CD_UNIDADE_MEDIDA_CONSUMO_w,
		IE_VIA_APLICACAO_w,
		ie_entra_conta_w,
		ie_baixa_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on c001 */
	begin

	if (ie_entra_conta_w 	= 'S') then
		SELECT * FROM define_preco_material(	cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, DT_ATENDIMENTO_P, cd_material_w, 0, 0, 0, null, 0, 0, null, 0, 0, null, null, null, null, null, vl_material_w, dt_aux_w, vl_auxiliar_w, vl_auxiliar_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_aux_w, vl_auxiliar_w, vl_auxiliar_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

		qt_item_w		:= qt_material_w * qt_lancamento_p;
		vl_material_w		:= (qt_item_w * vl_material_w);

		vl_retorno_w		:= vl_retorno_w	+ coalesce(vl_material_w, 0);
	end if;

	end;
END LOOP;

CLOSE C001;

return	vl_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_kit_material (CD_KIT_MATERIAL_P bigint, DT_ATENDIMENTO_P timestamp, qt_lancamento_p bigint, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text) FROM PUBLIC;

