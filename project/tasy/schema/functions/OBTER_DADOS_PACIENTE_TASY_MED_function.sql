-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_paciente_tasy_med ( nr_seq_cliente_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
ds_Retorno_w		varchar(255)	:=null;
qt_pa_sistolica_w	smallint	:=null;
qt_peso_w		real	:=null;
qt_altura_cm_w		real	:=null;			
qt_pa_sistolica_ww	smallint	:=null;
qt_peso_ww		real	:=null;
qt_altura_cm_ww		real	:=null;
qt_hdl_w		double precision	:=null;
qt_colesterol_w		double precision	:=null;
qt_creatinina_serica_w	double precision	:=null;
qt_resultado_ww 	double precision	:=null;
qt_resultado_w		double precision	:=null;
ds_resultado_w		varchar(4000)	:=null;
ds_resultado_ww		varchar(4000)	:=null;
pr_resultado_w		double precision	:=null;
pr_resultado_ww		double precision	:=null;
cd_pessoa_fisica_w	varchar(10)	:=null;
cd_medico_w		varchar(10)	:=null;
nr_seq_exame_w		bigint	:=null;
vl_padrao_w		bigint	:=null;
nr_parametro_w		bigint	:=0;
					
c00 CURSOR FOR 
	SELECT	coalesce(qt_pa_sistolica,0), 
		coalesce(qt_peso,0), 
		coalesce(qt_altura_cm,0) 
	from	med_evolucao 
	where	nr_seq_cliente = nr_seq_cliente_p 
	order	by dt_evolucao;

c01 CURSOR FOR	 
	SELECT	coalesce(qt_pa_sistolica,0), 
		coalesce(qt_peso,0), 
		coalesce(qt_altura_cm,0) 
	from	med_consulta 
	where	nr_seq_cliente = nr_seq_cliente_p 
	order	by dt_atualizacao;
	
c02 CURSOR FOR 
	SELECT	qt_resultado, 
		ds_resultado, 
		pr_resultado 
	from	(SELECT coalesce(e.qt_resultado,0) qt_resultado, 
			substr(e.ds_resultado,1,255) ds_resultado, 
			coalesce(e.pr_resultado,0) pr_resultado, 
			e.dt_aprovacao 
		from 	result_laboratorio a, 
			prescr_medica b, 
			exame_lab_result_item e, 
			exame_lab_resultado d, 
			prescr_procedimento c 
		where 	1 = 2 
		and	a.nr_prescricao   	= b.nr_prescricao 
		and 	a.nr_prescricao   	= c.nr_prescricao 
		and 	a.nr_seq_prescricao 	= c.nr_sequencia 
		and	d.nr_seq_resultado 	= e.nr_seq_resultado 
		and 	d.nr_prescricao 	= b.nr_prescricao 
		and 	c.nr_sequencia 	= e.nr_seq_prescr 
		and 	c.nr_prescricao 	= b.nr_prescricao 
		and 	e.nr_seq_exame 	= nr_seq_exame_w 
		and	(e.dt_aprovacao IS NOT NULL AND e.dt_aprovacao::text <> '') 
		and	exists (select	1 
				from  	atendimento_paciente x 
				where 	x.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
				and 	b.nr_atendimento 	= x.nr_atendimento) 
		and 	c.ie_status_atend 	>= 35 
		and 	((e.qt_resultado IS NOT NULL AND e.qt_resultado::text <> '') or (e.ds_resultado IS NOT NULL AND e.ds_resultado::text <> '') or (e.pr_resultado IS NOT NULL AND e.pr_resultado::text <> '')) 
		
union all
 
		select	coalesce(a.vl_exame,0) qt_resultado, 
			substr(a.ds_valor_exame,1,255) ds_resultado, 
			0 pr_resultado, 
			a.dt_exame dt_aprovacao 
		from  	med_exame_padrao b, 
			med_result_exame a 
		where 	a.nr_seq_exame  = b.nr_sequencia 
		and 	a.nr_seq_cliente = nr_seq_cliente_p 
		and	b.nr_seq_exame  = nr_seq_exame_w 
		and	coalesce(b.ie_situacao,'A') = 'A') alias12 
	order by dt_aprovacao;


BEGIN 
 
select	max(cd_pessoa_fisica), 
	max(cd_medico) 
into STRICT	cd_pessoa_fisica_w, 
	cd_medico_w 
from	med_cliente 
where	nr_sequencia = nr_seq_cliente_p;
 
if (ie_opcao_p = 'QT_PA_SISTOLICA') or (ie_opcao_p = 'QT_PESO') or (ie_opcao_p = 'QT_ALTURA_CM') then 
	open c00;
	loop 
	fetch c00 into 
		qt_pa_sistolica_w, 
		qt_peso_w, 
		qt_altura_cm_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		if (qt_pa_sistolica_w > 0) then 
			qt_pa_sistolica_ww := qt_pa_sistolica_w;
		end if;
		if (qt_peso_w > 0) then 
			qt_peso_ww := qt_peso_w;
		end if;
		if (qt_altura_cm_w > 0) then 
			qt_altura_cm_ww := qt_altura_cm_w;
		end if;
	end loop;
	close c00;
	if	(ie_opcao_p = 'QT_PA_SISTOLICA' AND qt_pa_sistolica_ww = 0) or 
		(ie_opcao_p = 'QT_PESO' AND qt_peso_ww = 0) or 
		(ie_opcao_p = 'QT_ALTURA_CM' AND qt_altura_cm_ww = 0) then 
		open c01;
		loop 
		fetch c01 into 
			qt_pa_sistolica_w, 
			qt_peso_w, 
			qt_altura_cm_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			if (qt_pa_sistolica_w > 0) then 
				qt_pa_sistolica_ww := qt_pa_sistolica_w;
			end if;
			if (qt_peso_w > 0) then 
				qt_peso_ww := qt_peso_w;
			end if;
			if (qt_altura_cm_w > 0) then 
				qt_altura_cm_ww := qt_altura_cm_w;
			end if;
		end loop;
		close c01;
	end if;
end if;
 
if (ie_opcao_p = 'QT_HDL') or (ie_opcao_p = 'QT_COLESTEROL') or (ie_opcao_p = 'QT_CREATININA_SERICA') then 
	if (ie_opcao_p = 'QT_HDL') then 
		nr_parametro_w := 101;
	elsif (ie_opcao_p = 'QT_COLESTEROL') then 
		nr_parametro_w := 102;
	elsif (ie_opcao_p = 'QT_CREATININA_SERICA') then 
		nr_parametro_w := 103;
	end if;
	 
	if (nr_parametro_w > 0) then 
		select coalesce(max(vl_padrao),0) 
		into STRICT  vl_padrao_w 
		from  med_parametro 
		where nr_sequencia = nr_parametro_w;
 
		select 	coalesce(max(vl_parametro),vl_padrao_w) 
		into STRICT	nr_seq_exame_w 
		from  	med_parametro_medico 
		where 	nr_seq_parametro 	= nr_parametro_w 
		and	cd_medico 		= cd_medico_w;
	end if;	
 
	open c02;
	loop 
	fetch c02 into 
		qt_resultado_w, 
		ds_resultado_w, 
		pr_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		if (qt_resultado_w > 0) then 
			qt_resultado_ww := qt_resultado_w;
		elsif (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then 
			ds_resultado_ww := ds_resultado_w;
		elsif (pr_resultado_w > 0) then	 
			pr_resultado_ww := pr_resultado_w;
		end if;	
	end loop;
	close c02;
end if;
 
if (ie_opcao_p = 'QT_PA_SISTOLICA') then 
	ds_Retorno_w := qt_pa_sistolica_ww;
elsif (ie_opcao_p = 'QT_PESO') then 
	ds_Retorno_w := qt_peso_ww;
elsif (ie_opcao_p = 'QT_ALTURA_CM') then 
	ds_Retorno_w := qt_altura_cm_ww;
elsif (ie_opcao_p = 'QT_HDL') then 
	ds_Retorno_w := coalesce(qt_resultado_ww,pr_resultado_ww);
elsif (ie_opcao_p = 'QT_COLESTEROL') then 
	ds_Retorno_w := coalesce(qt_resultado_ww,pr_resultado_ww);
elsif (ie_opcao_p = 'QT_CREATININA_SERICA') then 
	ds_Retorno_w := coalesce(qt_resultado_ww,pr_resultado_ww);
end if;
 
return	ds_Retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_paciente_tasy_med ( nr_seq_cliente_p bigint, ie_opcao_p text) FROM PUBLIC;

