-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_conv_regra_atend ( nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(10);
cd_convenio_w		bigint;
ie_tipo_atendimento_w	varchar(10);
cd_estabelecimento_w	integer;
cd_pessoa_fisica_w	varchar(10);
dt_entrada_w		timestamp;
qt_atend_w		integer;
qt_regra_w		bigint;
qt_dias_w		bigint;
dt_entrada_passada_w	timestamp;
ie_regra_w		varchar(10);
cd_municipio_ibge_w	varchar(6) := '';
cd_mun_ibge_regra_w	varchar(6);
ie_complexidade_sus_w	varchar(15) := '';
ie_complex_regra_w	varchar(15);
cd_plano_convenio_w	varchar(10);
cd_plano_conv_w		varchar(10);
nr_seq_cobertura_w	bigint;

c01 CURSOR FOR 
SELECT	a.cd_convenio, 
	b.ie_tipo_atendimento, 
	b.cd_estabelecimento, 
	b.cd_pessoa_fisica, 
	b.dt_entrada, 
	substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CDM'),1,6), 
	'', 
	a.cd_plano_convenio, 
	a.nr_seq_cobertura 
from	atend_categoria_convenio a, 
	atendimento_paciente b 
where	a.nr_atendimento	= b.nr_atendimento 
and	obter_tipo_convenio(a.cd_convenio) <> 3 
and	b.nr_atendimento	= nr_atendimento_p 

union
 
SELECT	a.cd_convenio, 
	b.ie_tipo_atendimento, 
	b.cd_estabelecimento, 
	b.cd_pessoa_fisica, 
	b.dt_entrada, 
	substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CDM'),1,6), 
	sus_obter_complexidade_proced(c.cd_procedimento_solic,c.ie_origem_proced,'C'), 
	a.cd_plano_convenio, 
	a.nr_seq_cobertura 
from	atend_categoria_convenio a, 
	atendimento_paciente b, 
	sus_laudo_paciente c 
where	a.nr_atendimento	= b.nr_atendimento 
and	b.nr_atendimento	= c.nr_atendimento 
and	c.nr_seq_interno 	= (	select	max(x.nr_seq_interno) 
				from	sus_laudo_paciente x 
				where	x.nr_atendimento = a.nr_atendimento 
				and	x.ie_classificacao = 1) 
and	obter_tipo_convenio(a.cd_convenio) = 3 
--and	c.dt_liberacao is not null 
and	b.nr_atendimento	= nr_atendimento_p;

c02 CURSOR FOR 
	SELECT	ie_regra, 
		qt_regra, 
		cd_municipio_ibge, 
		ie_complexidade, 
		cd_plano 
	from	convenio_regra_atend 
	where	cd_convenio = cd_convenio_w 
	and	ie_tipo_atendimento = ie_tipo_atendimento_w 
	and	cd_estabelecimento = cd_estabelecimento_w 
	and	((coalesce(cd_municipio_ibge,cd_municipio_ibge_w) = cd_municipio_ibge_w) or (coalesce(cd_municipio_ibge_w::text, '') = '')) 
	and	((coalesce(ie_complexidade,ie_complexidade_sus_w) = ie_complexidade_sus_w) or (coalesce(ie_complexidade_sus_w::text, '') = '')) 
	and	coalesce(cd_plano, coalesce(cd_plano_convenio_w,'0')) = coalesce(cd_plano_convenio_w,'0') 
	and	coalesce(nr_seq_cobertura, coalesce(nr_seq_cobertura_w,0)) = coalesce(nr_seq_cobertura_w,0) 
	order by 
		cd_municipio_ibge desc;


BEGIN 
 
ds_retorno_w	:= 'S';
 
open c01;
loop 
fetch c01 into 
	cd_convenio_w, 
	ie_tipo_atendimento_w, 
	cd_estabelecimento_w, 
	cd_pessoa_fisica_w, 
	dt_entrada_w, 
	cd_municipio_ibge_w, 
	ie_complexidade_sus_w, 
	cd_plano_convenio_w, 
	nr_seq_cobertura_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	open c02;
	loop 
	fetch c02 into 
		ie_regra_w, 
		qt_regra_w, 
		cd_mun_ibge_regra_w, 
		ie_complex_regra_w, 
		cd_plano_conv_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		if (ie_regra_w = 'D') then 
 
			select	max(a.dt_entrada) 
			into STRICT	dt_entrada_passada_w 
			from	atend_categoria_convenio b, 
				atendimento_paciente a 
			where	a.nr_atendimento = b.nr_atendimento 
			and	b.cd_convenio = cd_convenio_w 
			and	a.cd_pessoa_fisica = cd_pessoa_fisica_w 
			and	a.ie_tipo_atendimento = ie_tipo_atendimento_w 
			and	a.nr_atendimento <> nr_atendimento_p 
			and	coalesce(cd_plano_conv_w, b.cd_plano_convenio) = b.cd_plano_convenio;
 
			qt_dias_w	:= dt_entrada_w - dt_entrada_passada_w;
 
			if (qt_dias_w < qt_regra_w) then 
				ds_retorno_w := 'N';
			end if;
 
		elsif (ie_regra_w = 'N') then 
 
			select	count(*) 
			into STRICT	qt_atend_w 
			from	atend_categoria_convenio b, 
				atendimento_paciente a 
			where	a.nr_atendimento = b.nr_atendimento 
			and	b.cd_convenio = cd_convenio_w 
			and	a.cd_pessoa_fisica = cd_pessoa_fisica_w 
			and	a.ie_tipo_atendimento = ie_tipo_atendimento_w 
			and	PKG_DATE_UTILS.START_OF(a.dt_entrada, 'month') = PKG_DATE_UTILS.START_OF(dt_entrada_w, 'month') 
			and	coalesce(cd_plano_conv_w, b.cd_plano_convenio) = b.cd_plano_convenio;
 
			if (qt_atend_w > qt_regra_w) then 
				ds_retorno_w := 'N';
			end if;
 
		elsif (ie_regra_w = 'M') then 
 
			select	count(*) 
			into STRICT	qt_atend_w 
			from	atend_categoria_convenio b, 
				atendimento_paciente	a 
			where	a.nr_atendimento	= b.nr_atendimento 
			and	b.cd_convenio		= cd_convenio_w 
			and	a.ie_tipo_atendimento	= ie_tipo_atendimento_w 
			and	PKG_DATE_UTILS.START_OF(a.dt_entrada, 'month')	= PKG_DATE_UTILS.START_OF(dt_entrada_w, 'month') 
			and	cd_municipio_ibge_w	= cd_mun_ibge_regra_w 
			and	ie_complexidade_sus_w	= ie_complex_regra_w 
			and	coalesce(cd_plano_conv_w, b.cd_plano_convenio) = b.cd_plano_convenio;
 
			if (qt_atend_w > qt_regra_w) then 
				ds_retorno_w	:= 'N';
			end if;
		end if;
		end;
	end loop;
	close c02;
	exception 
		when others then 
			ds_retorno_w	:= ds_retorno_w;
	end;
 
end loop;
close c01;
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_conv_regra_atend ( nr_atendimento_p bigint) FROM PUBLIC;

