-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function pls_obter_sis_status_pacote as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION pls_obter_sis_status_pacote ( cd_unimed_origem_p text, cd_procedimento_p bigint, cd_procedimento_princ_p bigint, tp_acomodacao_p text, ie_situacao_pacote_p bigint, cd_especialidade_p bigint, tp_pacote_p bigint, cd_prest_autorizacao_p bigint, cd_cnpj_cpf_prest_p text, ie_pacote_local_p text, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_p bigint, ie_search_type text) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM pls_obter_sis_status_pacote_atx ( ' || quote_nullable(cd_unimed_origem_p) || ',' || quote_nullable(cd_procedimento_p) || ',' || quote_nullable(cd_procedimento_princ_p) || ',' || quote_nullable(tp_acomodacao_p) || ',' || quote_nullable(ie_situacao_pacote_p) || ',' || quote_nullable(cd_especialidade_p) || ',' || quote_nullable(tp_pacote_p) || ',' || quote_nullable(cd_prest_autorizacao_p) || ',' || quote_nullable(cd_cnpj_cpf_prest_p) || ',' || quote_nullable(ie_pacote_local_p) || ',' || quote_nullable(dt_referencia_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(ie_origem_p) || ',' || quote_nullable(ie_search_type) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION pls_obter_sis_status_pacote_atx ( cd_unimed_origem_p text, cd_procedimento_p bigint, cd_procedimento_princ_p bigint, tp_acomodacao_p text, ie_situacao_pacote_p bigint, cd_especialidade_p bigint, tp_pacote_p bigint, cd_prest_autorizacao_p bigint, cd_cnpj_cpf_prest_p text, ie_pacote_local_p text, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_p bigint, ie_search_type text) RETURNS varchar AS $body$
DECLARE
return_w varchar(100);
id_request_w bigint;
ie_status_request varchar(1);
ie_situacao_pac varchar(1);


BEGIN

	if (coalesce(cd_procedimento_p::text, '') = '') then
		return_w := 98;
	else

		if (ie_search_type = 'T') then
			if (coalesce(cd_unimed_origem_p::text, '') = '') then
				return_w := 98;
			else
				begin
					select ie_situacao_pacote 
					  into STRICT return_w 
					  from (SELECT ie_situacao_pacote 
							  from pls_sis_pac_retorno_pacote rp
							 inner join pls_sis_pac_ret_prestador pp on pp.nr_seq_retorno = rp.nr_sequencia
							 where rp.cd_unimed_origem = cd_unimed_origem_p
							   and rp.cd_procedimento = cd_procedimento_p
							   and (rp.cd_procedimento_princ = cd_procedimento_princ_p or coalesce(cd_procedimento_princ_p,0) = 0)
							   and (rp.ie_tp_acomodacao = tp_acomodacao_p or coalesce(tp_acomodacao_p,'X') = 'X')
							   and (rp.cd_especialidade = cd_especialidade_p or coalesce(cd_especialidade_p,0) = 0)
							   and (rp.ie_tp_pacote = tp_pacote_p or coalesce(tp_pacote_p,0) = 0)
							   and (rp.dt_atualizacao_nrec = dt_referencia_p or coalesce(dt_referencia_p,clock_timestamp()) = clock_timestamp() )
							   and (pp.cd_cpf_cnpj = cd_cnpj_cpf_prest_p or coalesce(cd_cnpj_cpf_prest_p,'X') = 'X')
							   and (pp.cd_prestador = cd_prest_autorizacao_p or coalesce(cd_prest_autorizacao_p,0) = 0)
							 order by rp.nr_sequencia desc) alias16 LIMIT 1;
				exception when no_data_found then
					return_w := 98;
				end;
			end if;
			
		elsif (ie_search_type = 'L') then
			begin
				select ie_status_sispac, ie_situacao
				  into STRICT return_w, ie_situacao_pac
				  from (SELECT ie_status_sispac, ie_situacao
						  from pls_pacote 
						 where cd_procedimento = cd_procedimento_p
						   and (ie_origem_proced = ie_origem_p or coalesce(ie_origem_p,0) = 0)
						  order by ie_situacao, nr_sequencia desc
						) alias3 LIMIT 1;
			exception when no_data_found then
				return_w := 98;
				ie_situacao_pac := 'X';
			end;
			
			if (ie_situacao_pac = 'I') then
				return_w:= 99;
			end if;

		elsif (ie_search_type = 'W') then
			if (coalesce(cd_unimed_origem_p::text, '') = '') then
				return_w := 98;
			else		
				select nextval('pls_sis_pac_requisicao_seq')
				  into STRICT id_request_w
				;
				
				insert into 
				pls_sis_pac_requisicao(nr_sequencia, cd_estabelecimento, dt_atualizacao,
										nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
										cd_unimed_origem, cd_procedimento, cd_procedimento_princ,
										ie_tp_acomodacao, ie_situacao_pacote, cd_especialidade,
										ie_tp_pacote, dt_referencia, cd_prest_autorizacao,
										cd_cnpj_cpf_prest, ie_status_transacao, ie_pacote_local
										)
								 values (id_request_w, cd_estabelecimento_p, clock_timestamp(),
										nm_usuario_p, clock_timestamp(), nm_usuario_p,
										cd_unimed_origem_p, cd_procedimento_p, cd_procedimento_princ_p,
										tp_acomodacao_p, ie_situacao_pacote_p, cd_especialidade_p,
										tp_pacote_p, dt_referencia_p, cd_prest_autorizacao_p,
										cd_cnpj_cpf_prest_p, 'N', coalesce(ie_pacote_local_p,'N')
										);
				commit;
				
				CALL pls_executa_consulta_pacotes(id_request_w, nm_usuario_p, cd_estabelecimento_p);
					
				dbms_lock.sleep(7);
				begin
					select ie_status_transacao
					  into STRICT ie_status_request
					  from pls_sis_pac_requisicao 
					 where nr_sequencia = id_request_w;
				 exception when no_data_found then
					ie_status_request := 'N';
				end;
				
				if (ie_status_request = 'S') then
					begin
						select ie_situacao_pacote 
						  into STRICT return_w 
						  from ( SELECT ie_situacao_pacote           
								   from pls_sis_pac_retorno_pacote 
								  where nr_seq_requisicao = id_request_w
									and cd_procedimento = cd_procedimento_p) alias1 LIMIT 1;
					exception when no_data_found then
						return_w := 99;
					end;
				else
					return_w := 99;
				end if;
			end if;
		else return_w := 98;
		end if;
	end if;
return return_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obter_sis_status_pacote ( cd_unimed_origem_p text, cd_procedimento_p bigint, cd_procedimento_princ_p bigint, tp_acomodacao_p text, ie_situacao_pacote_p bigint, cd_especialidade_p bigint, tp_pacote_p bigint, cd_prest_autorizacao_p bigint, cd_cnpj_cpf_prest_p text, ie_pacote_local_p text, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_p bigint, ie_search_type text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION pls_obter_sis_status_pacote_atx ( cd_unimed_origem_p text, cd_procedimento_p bigint, cd_procedimento_princ_p bigint, tp_acomodacao_p text, ie_situacao_pacote_p bigint, cd_especialidade_p bigint, tp_pacote_p bigint, cd_prest_autorizacao_p bigint, cd_cnpj_cpf_prest_p text, ie_pacote_local_p text, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_p bigint, ie_search_type text) FROM PUBLIC;

