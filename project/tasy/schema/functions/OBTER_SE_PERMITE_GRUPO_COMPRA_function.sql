-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_permite_grupo_compra ( nr_solic_compra_p bigint, cd_material_p bigint) RETURNS varchar AS $body$
DECLARE


nr_seq_grupo_compra_w			bigint;
nr_seq_grupo_item_solic_w			bigint;
cd_grupo_material_w			smallint;
cd_subgrupo_material_w			smallint;
cd_classe_material_w			integer;
ie_permite_w				varchar(1) := 'S';
ie_liberado_w				varchar(1);
qt_regra_w				bigint;
qt_itens_solic_compra_w			bigint;
ds_lista_grupo_compra_w			varchar(255);
ds_lista_grupo_item_solic_w			varchar(4000);
cd_material_w				integer;

c01 CURSOR FOR
SELECT	distinct
	a.cd_material
from	solic_compra_item a
where	a.nr_solic_compra = nr_solic_compra_p
and	a.cd_material <> cd_material_p;

c02 CURSOR FOR
SELECT	c.nr_sequencia nr_seq_grupo
from	sup_estrut_compras a,
	sup_subgrupo_compra b,
	sup_grupo_compra c
where	a.nr_seq_subgrupo_compra = b.nr_sequencia
and	b.nr_seq_grupo_compra = c.nr_sequencia
and	((a.cd_grupo_material = obter_estrutura_material(cd_material_w,'G')) or (a.cd_subgrupo_material = obter_estrutura_material(cd_material_w,'S')) or (a.cd_classe_material = obter_estrutura_material(cd_material_w,'C')) or (a.cd_material = cd_material_w))
and	coalesce(c.ie_situacao,'A') = 'A'
and	coalesce(b.ie_situacao,'A') = 'A';

c03 CURSOR FOR
SELECT	distinct
	c.nr_sequencia nr_seq_grupo
from	sup_estrut_compras a,
	sup_subgrupo_compra b,
	sup_grupo_compra c
where	a.nr_seq_subgrupo_compra = b.nr_sequencia
and	b.nr_seq_grupo_compra = c.nr_sequencia
and	coalesce(a.cd_grupo_material, cd_grupo_material_w)     	= cd_grupo_material_w
and	coalesce(a.cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(a.cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
and (coalesce(a.cd_material, cd_material_p)			= cd_material_p or cd_material_p = 0)
and	(ds_lista_grupo_item_solic_w IS NOT NULL AND ds_lista_grupo_item_solic_w::text <> '')
and	coalesce(c.ie_situacao,'A') = 'A'
and	coalesce(b.ie_situacao,'A') = 'A';


BEGIN

select	count(*)
into STRICT	qt_regra_w
from	sup_estrut_compras;

select	count(*)
into STRICT	qt_itens_solic_compra_w
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p;

if (qt_regra_w > 0) and (qt_itens_solic_compra_w > 0) then
	begin
	open C01;
	loop
	fetch C01 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C02;
		loop
		fetch C02 into
			nr_seq_grupo_item_solic_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ds_lista_grupo_item_solic_w := substr(ds_lista_grupo_item_solic_w || nr_seq_grupo_item_solic_w || ',', 0, 4000);
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;
	end;

	select	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material = cd_material_p;

	open C03;
	loop
	fetch C03 into
		nr_seq_grupo_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (obter_se_contido(nr_seq_grupo_compra_w,ds_lista_grupo_item_solic_w) = 'S') then
			ie_permite_w := 'S';
		else
			ie_permite_w := 'N';
		end if;
		end;
	end loop;
	close C03;
end if;

return ie_permite_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_permite_grupo_compra ( nr_solic_compra_p bigint, cd_material_p bigint) FROM PUBLIC;

