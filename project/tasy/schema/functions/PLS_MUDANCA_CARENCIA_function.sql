-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_mudanca_carencia ( nr_seq_plano_ant_p bigint, nr_seq_plano_novo_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*
OBJETIVO: Verificar se ao mudar de plano as carências sofreram alterações.

ie_opcao_p

'MC' =	'Mudança Carência' - Verifica se houve mudança de carência apenas retornando 'S' SIM ou 'N' NÃO.
'MD' = 	'Mudança Carência Descrição' - Verifica se houve mudança de carencia, caso sim retorna uma mensagem
	 com as carências novas.
*/
nr_seq_tipo_car_novo_w	bigint;
nr_seq_grupo_car_novo_w	bigint;
nr_seq_tipo_car_ant_w	bigint;
nr_seq_grupo_car_ant_w	bigint;
qt_dias_ant_w		bigint;
qt_caren_plano_ant_w	bigint;
qt_caren_plano_novo_w	bigint;
qt_dias_car_ant_w	bigint;
qt_dias_car_novo_w	bigint;
ds_carencias_w		varchar(1000);
nr_seq_carencia_w	bigint;
qt_dias_w		bigint;


--busca carências do plano
C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_carencia,
		nr_seq_grupo_carencia,
		qt_dias
	from	pls_carencia
	where	nr_seq_plano = nr_seq_plano_novo_p;

BEGIN
--verifica se existe novas carencias no plano novo pela quantidade de carencias
if (ie_opcao_p = 'MC' )then

	select	count(1)
	into STRICT	qt_caren_plano_ant_w
	from	pls_carencia
	where	nr_seq_plano = nr_seq_plano_ant_p;

	select	count(1)
	into STRICT	qt_caren_plano_novo_w
	from	pls_carencia
	where	nr_seq_plano = nr_seq_plano_novo_p;


	if (qt_caren_plano_ant_w < qt_caren_plano_novo_w)then

		return 'S';
	end if;

end if;
open c01;
loop
fetch c01 into
	nr_seq_carencia_w,
	nr_seq_tipo_car_novo_w,
	nr_seq_grupo_car_novo_w,
	qt_dias_car_novo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */


--verifica se a carência do produto novo existe no produto anterior, seleciona os dias pelo tipo de carência ou o grupo de carência
if (nr_seq_tipo_car_novo_w IS NOT NULL AND nr_seq_tipo_car_novo_w::text <> '')then
	begin
	select	qt_dias
	into STRICT	qt_dias_w
	from	pls_carencia
	where	nr_seq_tipo_carencia = nr_seq_tipo_car_novo_w
	and	nr_seq_plano = nr_seq_plano_ant_p;
	exception
	when others then
	qt_dias_w := null;
	end;
elsif (nr_seq_grupo_car_novo_w IS NOT NULL AND nr_seq_grupo_car_novo_w::text <> '')then
	begin
	select	qt_dias
	into STRICT	qt_dias_w
	from	pls_carencia
	where	nr_seq_grupo_carencia = nr_seq_grupo_car_novo_w
	and	nr_seq_plano = nr_seq_plano_ant_p;
	exception
	when others then
	qt_dias_w := null;
	end;
end if;

-- Carência do plano novo não existe no plano antigo
if (coalesce(qt_dias_w::text, '') = '') then
	if (ie_opcao_p = 'MC') then
		return 'S';
	elsif (ie_opcao_p = 'MD')then
		ds_carencias_w := ds_carencias_w||wheb_mensagem_pck.get_texto(494916, 'CARENCIA_P='||pls_obter_dados_carencia(nr_seq_carencia_w,null,'N'))||' | '||chr(13);
	end if;
elsif (qt_dias_w <> qt_dias_car_novo_w ) then
	if (ie_opcao_p = 'MC') then
		return 'S';
	elsif (ie_opcao_p = 'MD')then
		ds_carencias_w := ds_carencias_w||wheb_mensagem_pck.get_texto(494917,'CARENCIA_P='||pls_obter_dados_carencia(nr_seq_carencia_w,null,'N')||';QT_DIAS_P='||qt_dias_w)||' | '||chr(13);
	end if;
end if;

end loop;
close c01;
if (ie_opcao_p = 'MC') then
	return 'N';
else
	return ds_carencias_w;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_mudanca_carencia ( nr_seq_plano_ant_p bigint, nr_seq_plano_novo_p bigint, ie_opcao_p text) FROM PUBLIC;

