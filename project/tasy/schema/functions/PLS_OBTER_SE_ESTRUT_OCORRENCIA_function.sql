-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_estrut_ocorrencia ( nr_seq_estrutura_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) RETURNS varchar AS $body$
DECLARE


ie_estrutura_ww			varchar(3);
ie_estrutura_w			varchar(1)	:= 'N';
ie_estrut_mat_w			varchar(1);
cd_area_procedimento_w		bigint := 0;
cd_especialidade_w		bigint := 0;
cd_grupo_proc_w			bigint := 0;
nr_seq_estrutura_mat_w		bigint := 0;
ie_origem_proced_w		bigint;
nr_seq_estrut_regra_w		bigint;

C01 CURSOR FOR
	SELECT	a.ie_estrutura,
		a.nr_seq_estrut_mat
	from	pls_ocorrencia_estrut_item	a
	where	a.nr_seq_estrutura	= nr_seq_estrutura_p
	and	((coalesce(a.cd_procedimento::text, '') = '')		or (a.cd_procedimento		= cd_procedimento_p))
	and	((coalesce(a.ie_origem_proced::text, '') = '')		or (a.ie_origem_proced		= ie_origem_proced_w))
	and	((coalesce(a.cd_grupo_proc::text, '') = '')		or (a.cd_grupo_proc		= cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '')		or (a.cd_especialidade		= cd_especialidade_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '')	or (a.cd_area_procedimento	= cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_material::text, '') = '')		or (a.nr_seq_material		= nr_seq_material_p))
	order by
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_material,0),
		coalesce(a.nr_seq_estrut_mat,0);

TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c01_w			Vetor;

BEGIN
if	(cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '' AND ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then /* Obter a estrutura do procedimento */
	SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
end if;

if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then /* Obter dados do material */
	begin
	select	nr_seq_estrut_mat
	into STRICT	nr_seq_estrutura_mat_w
	from	pls_material
	where	nr_sequencia = nr_seq_material_p;
	exception
	when others then
		nr_seq_estrutura_mat_w	:= 0;
	end;
end if;
/*
insert into logxxxx_tasy
	(cd_log, ds_log, dt_atualizacao, nm_usuario)
values	(11055, 'nr_seq_estrutura_p='||to_Char(nr_seq_estrutura_p)||chr(10)||
		'cd_procedimento_p='||to_Char(cd_procedimento_p)||chr(10)||
		'ie_origem_proced_w='||to_Char(ie_origem_proced_w)||chr(10)||
		'cd_grupo_proc_w='||to_Char(cd_grupo_proc_w)||chr(10)||
		'cd_especialidade_w='||to_Char(cd_especialidade_w)||chr(10)||
		'cd_area_procedimento_w='||to_Char(cd_area_procedimento_w)||chr(10)||
		'nr_seq_material_p='||to_Char(nr_seq_material_p)||chr(10)||
		'nr_seq_estrutura_mat_w='||to_Char(nr_seq_estrutura_mat_w)||chr(10), sysdate, 'Tasy');	*/
open C01;
loop
FETCH C01 BULK COLLECT INTO s_array LIMIT 1000;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;

for i in 1..Vetor_c01_w.COUNT loop
	s_array := Vetor_c01_w(i);
	for z in 1..s_array.COUNT loop
		begin
		nr_seq_estrut_regra_w	:= s_array[z].nr_seq_estrut_mat;

		ie_estrut_mat_w		:= 'S';

		if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
			if (pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w) = 'N') then
				ie_estrut_mat_w		:= 'N';
			end if;
		end if;

		if (ie_estrut_mat_w = 'S') then
			ie_estrutura_w	:= s_array[z].ie_estrutura;
		end if;
		end;
	end loop;
end loop;

/*open C01;
loop
fetch C01 into
	ie_estrutura_ww,
	nr_seq_estrut_regra_w;
exit when C01%notfound;
	begin
	ie_estrut_mat_w	:= 'S';
	if	(nr_seq_estrut_regra_w is not null) then
		if	(pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w) = 'N') then
			ie_estrut_mat_w		:= 'N';
		end if;
	end if;

	if	(ie_estrut_mat_w = 'S') then
		ie_estrutura_w	:= ie_estrutura_ww;
	end if;
	end;
end loop;
close C01;*/
return ie_estrutura_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_estrut_ocorrencia ( nr_seq_estrutura_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) FROM PUBLIC;

