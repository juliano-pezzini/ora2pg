-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_regra_matricula_valida_web ( nr_seq_congenere_p bigint, ie_origem_p text, ds_matricula_p text) RETURNS varchar AS $body$
DECLARE


ie_valido_w			varchar(1) := 'S';
ie_numero_igual_w		varchar(1);
ie_somente_numero_w		varchar(1);
ds_codigo_inicial_w		varchar(5);
qt_caracter_matricula_w		bigint;
qt_caracter_igual_w		bigint;
ie_regra_especifica_w		bigint;
ds_regra_especifica_w		varchar(255);
i				bigint;
ds_primeiro_caracter_w		varchar(1);
/*Variáveis criadas para controles de loop, verificações, etc...*/

ie_auxiliar_w			varchar(1);
nr_auxiliar_w			bigint := 0;

/*
T - Tasy
P - Portal
*/
C01 CURSOR FOR
	SELECT	ie_numero_igual,
		qt_caracter_matricula,
		ie_somente_numero,
		qt_caracter_igual,
		ds_codigo_inicial,
		ie_regra_especifica
	from	pls_regra_bloq_matricula
	where	nr_seq_congenere = nr_seq_congenere_p
	and	ie_situacao = 'A'
	and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S')
	
union all

	SELECT	ie_numero_igual,
		qt_caracter_matricula,
		ie_somente_numero,
		qt_caracter_igual,
		ds_codigo_inicial,
		ie_regra_especifica
	from	pls_regra_bloq_matricula
	where	nr_seq_congenere = nr_seq_congenere_p
	and	ie_situacao = 'A'
	and 	pls_obter_se_controle_estab('RE') = 'N';


BEGIN

open C01;
loop
fetch C01 into
	ie_numero_igual_w,
	qt_caracter_matricula_w,
	ie_somente_numero_w,
	qt_caracter_igual_w,
	ds_codigo_inicial_w,
	ie_regra_especifica_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

		-- CESP -  possui uma regra de vaidação específica
		if(ie_regra_especifica_w IS NOT NULL AND ie_regra_especifica_w::text <> '' AND ie_regra_especifica_w = 1) then
			ds_regra_especifica_w := pls_valida_matricula_cesp(ds_matricula_p);
			if (ds_regra_especifica_w <> 'MV') then
				ie_valido_w := 'N';
				exit;
			end if;
		end if;

		--Se diferente de 0, é a quantidade exata obrigatória de caracteres
		if (coalesce(qt_caracter_matricula_w, 0) > 0) then
			if (qt_caracter_matricula_w <> length(ds_matricula_p)) then
				ie_valido_w :='N';
				exit;
			end if;
		end if;

		--Se sim, só podem haver números
		if (coalesce(ie_somente_numero_w,'N') = 'S') then
			select	coalesce(max('S'),'N')
			into STRICT	ie_auxiliar_w
			
			where 	REGEXP_LIKE(ds_matricula_p, '^[[:digit:]]+$');
			if (ie_auxiliar_w = 'N') then
				ie_valido_w := ie_auxiliar_w;
				exit;
			end if;
		end if;

		--Código inicial
		if ((ds_codigo_inicial_w IS NOT NULL AND ds_codigo_inicial_w::text <> '') and ds_codigo_inicial_w <> substr(ds_matricula_p,1,length(ds_codigo_inicial_w))) then
			ie_valido_w := 'N';
			exit;
		end if;

		--Se sim, não podem ser todos os caracteres iguais
		if (coalesce(ie_numero_igual_w, 'N') = 'S') then
			i := 2;
			ds_primeiro_caracter_w := substr(ds_matricula_p,1,1);

			while(i <= length(ds_matricula_p)) loop
				if (ds_primeiro_caracter_w <> substr(ds_matricula_p,i,1)) then
					exit;
				end if;
				if (i = length(ds_matricula_p)) then
					ie_valido_w := 'N';
					exit;
				end if;
				i := i + 1;
			end loop;

			if (ie_valido_w = 'N') then
				exit;
			end if;
		end if;

		--Se maior que zero, é a quantidade de caracteres iguais permitidos
		if (coalesce(qt_caracter_igual_w, 0) > 0) then
			i :=2;
			ds_primeiro_caracter_w := substr(ds_matricula_p,1,1);
			while(i <= length(ds_matricula_p)) loop
				if (ds_primeiro_caracter_w = substr(ds_matricula_p,i,1)) then
					nr_auxiliar_w := nr_auxiliar_w + 1;
					if (nr_auxiliar_w = qt_caracter_igual_w) then
						ie_valido_w := 'N';
						exit;
					end if;
				else
					ds_primeiro_caracter_w := substr(ds_matricula_p,i,1);
					nr_auxiliar_w := 0;
				end if;
				i := i + 1;
			end loop;
		end if;

	end;
end loop;
close C01;

return	ie_valido_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_regra_matricula_valida_web ( nr_seq_congenere_p bigint, ie_origem_p text, ds_matricula_p text) FROM PUBLIC;

