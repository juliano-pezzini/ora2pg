-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION avf_gerar_nota_avaliacao ( nr_sequencia_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_pergunta_w			bigint;
nr_seq_nota_item_w		bigint;
nr_seq_tipo_nota_w		bigint;
vl_nota_maxima_w			double precision;
nr_seq_grupo_pergunta_w		bigint;
pr_peso_grupo_w			real;
qt_perguntas_w			bigint	:= 0;
vl_media_w			double precision	:= 0;
vl_media_acum_w			double precision	:= 0;
vl_media_final_w			double precision	:= 0;
vl_nota_w			double precision;

ie_pontuacao_pergunta_w		varchar(1) 	:= 'N';
ie_apresentacao_media_w		varchar(1)	:= '1';
cd_estabelecimento_w		bigint	:= wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w			varchar(15)	:= wheb_usuario_pck.get_nm_usuario;
pr_peso_pergunta_w		avf_pergunta.pr_peso_pergunta%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_seq_nota_item,
		a.nr_seq_tipo_nota
	from	avf_resultado_item b,
		avf_pergunta a
	where	a.nr_sequencia	= b.nr_seq_pergunta
	and	b.nr_seq_resultado	= nr_sequencia_p
	and	(b.nr_seq_pergunta IS NOT NULL AND b.nr_seq_pergunta::text <> '')
	and	(b.nr_seq_nota_item IS NOT NULL AND b.nr_seq_nota_item::text <> '')
	and	substr(avf_obter_se_nota_se_aplica(b.nr_seq_nota_item),1,1) = 'S';

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(a.pr_peso_grupo,100)
	from	avf_resultado_item b,
		avf_grupo_pergunta a
	where	a.nr_sequencia	= b.nr_seq_grupo_pergunta
	and	b.nr_seq_resultado	= nr_sequencia_p;

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_seq_nota_item,
		a.pr_peso_pergunta
	from	avf_resultado_item b,
		avf_pergunta a
	where	a.nr_sequencia		= b.nr_seq_pergunta
	and	b.nr_seq_resultado		= nr_sequencia_p
	and	a.nr_seq_grupo_pergunta	= nr_seq_grupo_pergunta_w
	and	(b.nr_seq_pergunta IS NOT NULL AND b.nr_seq_pergunta::text <> '')
	and	(b.nr_seq_nota_item IS NOT NULL AND b.nr_seq_nota_item::text <> '')
	and	substr(avf_obter_se_nota_se_aplica(b.nr_seq_nota_item),1,1) = 'S';


BEGIN

/* Verifica se a geração da nota será pelo processo já existente ou irá considerar os pontos de cada pergunta  */

ie_pontuacao_pergunta_w := obter_param_usuario(6, 73, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_pontuacao_pergunta_w);
/*Forma de apresentação da média da avaliacao*/

ie_apresentacao_media_w := obter_param_usuario(6, 76, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_apresentacao_media_w);

begin
select	(ie_apresentacao_media_w)::numeric
into STRICT	ie_apresentacao_media_w
;
exception
when others then
	ie_apresentacao_media_w := '1';
end;

if (coalesce(ie_pontuacao_pergunta_w, 'N') = 'N') then
	begin
	if (ie_apresentacao_media_w in ('0','1','2')) then
		begin
		open C01;
		loop
		fetch C01 into
			nr_seq_pergunta_w,
			nr_seq_nota_item_w,
			nr_seq_tipo_nota_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			qt_perguntas_w := qt_perguntas_w + 1;

			select	coalesce(max(vl_tipo_nota),0)
			into STRICT	vl_nota_w
			from	avf_tipo_nota_item
			where	nr_sequencia = nr_seq_nota_item_w;

			select	coalesce(max(vl_tipo_nota),0)
			into STRICT	vl_nota_maxima_w
			from	avf_tipo_nota_item
			where	nr_seq_tipo_nota = nr_seq_tipo_nota_w;

			if (ie_apresentacao_media_w = '1') then
				vl_media_w	:= dividir(vl_nota_w, dividir(vl_nota_maxima_w, 100));
			elsif (ie_apresentacao_media_w = '0') then
				vl_media_w	:= dividir(dividir(vl_nota_w, dividir(vl_nota_maxima_w, 100)),10);
			elsif (ie_apresentacao_media_w = '2') then
				vl_media_w	:= vl_nota_w;
			end if;

			vl_media_acum_w		:= vl_media_acum_w + vl_media_w;
			end;
		end loop;
		close C01;

		if (ie_apresentacao_media_w = '2') then
			vl_media_final_w := vl_media_acum_w;
		else
			vl_media_final_w := dividir(vl_media_acum_w, qt_perguntas_w);
		end if;
		end;
	elsif (ie_apresentacao_media_w = '3') then
		begin
		open C02;
		loop
		fetch C02 into
			nr_seq_grupo_pergunta_w,
			pr_peso_grupo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			qt_perguntas_w	:= 0;
			vl_media_acum_w	:= 0;

			open C03;
			loop
			fetch C03 into
				nr_seq_pergunta_w,
				nr_seq_nota_item_w,
				pr_peso_pergunta_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				qt_perguntas_w := qt_perguntas_w + 1;

				select	coalesce(max(vl_tipo_nota),0)
				into STRICT	vl_nota_w
				from	avf_tipo_nota_item
				where	nr_sequencia = nr_seq_nota_item_w;

				vl_media_acum_w	:= vl_media_acum_w + (vl_nota_w * dividir(coalesce(pr_peso_pergunta_w,100),100));
				end;
			end loop;
			close C03;

			vl_media_acum_w		:= dividir(dividir(vl_media_acum_w, qt_perguntas_w) * pr_peso_grupo_w,100);
			vl_media_final_w	:= vl_media_final_w + vl_media_acum_w;
			end;
		end loop;
		close C02;
		end;
	end if;
	end;
elsif (coalesce(ie_pontuacao_pergunta_w, 'N') = 'S') then
	begin
	select	coalesce(sum(qt_pontos),0) qt_pontos
	into STRICT	vl_media_w
	from	avf_pergunta_tipo a,
		avf_resultado_item b
	where	a.nr_seq_pergunta	= b.nr_seq_pergunta
	and	a.nr_seq_tipo_nota_item	= b.nr_seq_nota_item
	and	b.nr_seq_resultado	= nr_sequencia_p;

	vl_media_final_w := vl_media_w;
	end;
end if;

return	vl_media_final_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION avf_gerar_nota_avaliacao ( nr_sequencia_p bigint) FROM PUBLIC;

