-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verif_est_finger_web ( nr_seq_prestador_p bigint, nr_seq_usuario_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verficar em qual estagio o prestador se encontra na validacao do finger no portal web
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  X] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
retorno: 	HAB - Habilitado
	NAO - Nao esta habilitado
	NEU - Neutro
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(3) := 'NEU';
nr_seq_regra_bio_w	bigint;
qt_registros_w		bigint;
cd_cgc_w		varchar(14);
cd_prestador_w		varchar(30);


BEGIN

begin
	select	cd_cgc,
		cd_prestador
	into STRICT	cd_cgc_w,
		cd_prestador_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
exception
when others then
	cd_cgc_w	:= null;
	cd_prestador_w 	:= null;
end;

if (coalesce(cd_cgc_w::text, '') = '') then
	
	if (pls_obter_se_controle_estab('RE') = 'S') then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_regra_bio_w
		from	pls_regra_biometria_prest a
		where	a.ie_situacao = 'A'
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_inicio_vigencia) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(a.dt_fim_vigencia,clock_timestamp()))
		and 	coalesce(a.cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
		and	exists (SELECT	1
				from	pls_prest_exige_biometria b,
						pls_prestador c
				where	b.nr_seq_regra_biometria = a.nr_sequencia
				and		b.nr_seq_prestador = c.nr_sequencia
				and (c.nr_sequencia = nr_seq_prestador_p
				or (coalesce(b.ie_valida_cod_prest, 'N') = 'S'
				and		c.cd_prestador = cd_prestador_w
				and		(c.cd_prestador IS NOT NULL AND c.cd_prestador::text <> '')
				and		(cd_prestador_w IS NOT NULL AND cd_prestador_w::text <> '')))
				and		b.ie_situacao = 'A')
		and	coalesce(a.ie_aplicacao_regra, 1) = 1;
	else
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_regra_bio_w
		from	pls_regra_biometria_prest a
		where	a.ie_situacao = 'A'
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp()) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_inicio_vigencia) and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(a.dt_fim_vigencia,clock_timestamp()))
		and	exists (SELECT	1
				from	pls_prest_exige_biometria b,
						pls_prestador c
				where	b.nr_seq_regra_biometria = a.nr_sequencia
				and		b.nr_seq_prestador = c.nr_sequencia
				and (c.nr_sequencia = nr_seq_prestador_p
				or (coalesce(b.ie_valida_cod_prest, 'N') = 'S'
				and		c.cd_prestador = cd_prestador_w
				and		(c.cd_prestador IS NOT NULL AND c.cd_prestador::text <> '')
				and		(cd_prestador_w IS NOT NULL AND cd_prestador_w::text <> '')))
				and		b.ie_situacao = 'A')
		and	coalesce(a.ie_aplicacao_regra, 1) = 1;
	end if;

	if (nr_seq_regra_bio_w IS NOT NULL AND nr_seq_regra_bio_w::text <> '') then
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_controle_biomet_prest
		where	nr_seq_usuario_prest = nr_seq_usuario_p
		and	nr_seq_prestador = nr_seq_prestador_p
		and	coalesce(dt_desativacao::text, '') = '';
		
		if (qt_registros_w > 0) then
			ds_retorno_w := 'HAB';
		else
			ds_retorno_w := 'NAO';
		end if;
		
	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verif_est_finger_web ( nr_seq_prestador_p bigint, nr_seq_usuario_p bigint) FROM PUBLIC;

