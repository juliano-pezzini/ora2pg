-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_med_prest_oco_partic ( nr_seq_proc_p bigint, cd_medico_p bigint, nr_seq_grau_partic_p bigint, dt_referencia_p timestamp ) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(1)	:= 'S';
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_prestador_w		bigint	:= null;
cd_medico_exec_w		varchar(10);
ie_consistir_cooperados_w	varchar(2);
ie_consistir_executor_w		varchar(2);
ie_cooperado_w			varchar(1);
ie_profissional_w		varchar(1);
ie_anestesista_w		varchar(1);
nr_seq_proc_partic_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_grau_partic_w		bigint;
ie_entrou_w			varchar(1);
ie_tipo_prest_exec_w		varchar(3);
cd_pessoa_fisica_w		varchar(20);
dt_referencia_w			timestamp;

/*
ds_retorno_w
S	Não deve gerar ocorrência
N	Deve gerar a ocorrência
*/
/*Diego OS 363500 - Não será considerado o ie_situação por uma consistência de dt_vigencia e ie_situacao implementada no form do OPS - Prestadores*/

BEGIN

select	b.nr_seq_prestador_exec,
	c.nr_seq_prestador
into STRICT	nr_seq_prestador_exec_w,
	nr_seq_prestador_atend_w
from	pls_protocolo_conta c,
	pls_conta b,
	pls_conta_proc a
where	a.nr_seq_conta		= b.nr_sequencia
and	b.nr_seq_protocolo	= c.nr_sequencia
and	a.nr_sequencia		= nr_seq_proc_p;

if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
	select	CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN 'PJ'  ELSE 'PF' END
	into STRICT	ie_tipo_prest_exec_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_exec_w;
end if;

/* Tratar para consistir os profissionais do Hospital - OS 283005 */

if (ie_tipo_prest_exec_w = 'PF') then
	nr_seq_prestador_w	:= nr_seq_prestador_atend_w;
else
	nr_seq_prestador_w	:= nr_seq_prestador_exec_w;
end if;

if (coalesce(nr_seq_prestador_w,0) > 0) then
	select	coalesce(a.ie_consistir_cooperados,'N')
	into STRICT	ie_consistir_cooperados_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_w;

	/* Robson e Felipe - 20/04/2011 - OS 307599 */

	select	coalesce(max(a.ie_consistir_cooperados),'N')
	into STRICT	ie_consistir_executor_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_exec_w;
	if (ie_consistir_executor_w	= 'PF') then
		ie_consistir_cooperados_w	:= ie_consistir_executor_w;
	end if;

	/* Executante deve estar vinculado ao prestador caso seja cooperado */

	if (ie_consistir_cooperados_w = 'C') then

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_cooperado_w
		from	pls_cooperado a
		where	a.cd_pessoa_fisica	= cd_medico_p;

		if (ie_cooperado_w = 'S') then
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_profissional_w
			from	pls_prestador_medico a
			where	a.nr_seq_prestador	= nr_seq_prestador_w
			and	a.cd_medico		= cd_medico_p
			and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

			if (ie_profissional_w = 'N') then
				ie_retorno_w	:= 'N';
			end if;
		end if;

	/* Executante deve ser cooperado e estar vinculado ao prestador */

	elsif (ie_consistir_cooperados_w = 'CV') then

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_cooperado_w
		from	pls_cooperado a
		where	a.cd_pessoa_fisica	= cd_medico_p;

		if (ie_cooperado_w = 'N') then
			ie_retorno_w	:= 'N';
		else
			if (ie_cooperado_w = 'S') then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_profissional_w
				from	pls_prestador_medico a
				where	a.nr_seq_prestador	= nr_seq_prestador_w
				and	a.cd_medico		= cd_medico_p
				and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

				if (ie_profissional_w = 'N') then
					ie_retorno_w	:= 'N';
				end if;
			end if;
		end if;

	/* Executante deve ser cooperado e estar vinculado ao prestador  ou ser anestesista*/

	elsif (ie_consistir_cooperados_w = 'CA') then

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_cooperado_w
		from	pls_cooperado a
		where	a.cd_pessoa_fisica	= cd_medico_p;

		if (ie_cooperado_w = 'S') then
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_profissional_w
			from	pls_prestador_medico a
			where	a.nr_seq_prestador	= nr_seq_prestador_w
			and	a.cd_medico		= cd_medico_p
			and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

			if (ie_profissional_w = 'S') then
				ie_retorno_w	:= 'S';
			else
				select	coalesce(max(ie_anestesista),'N')
				into STRICT	ie_anestesista_w
				from	pls_grau_participacao	b
				where	b.nr_sequencia		= nr_seq_grau_partic_p;

				if (ie_anestesista_w = 'N') then
					ie_retorno_w	:= 'N';
				end if;
			end if;
		else
			ie_retorno_w	:= 'N';
		end if;

	/* Executante deve estar vinculado ao prestador*/

	elsif (ie_consistir_cooperados_w = 'V') then

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_retorno_w
		from	pls_prestador_medico a
		where	a.nr_seq_prestador	= nr_seq_prestador_w
		and	a.cd_medico		= cd_medico_p
		and	trunc(dt_referencia_w,'dd') between trunc(coalesce(a.dt_inclusao,dt_referencia_w),'dd') and  fim_dia(coalesce(a.dt_exclusao - 1,dt_referencia_w));

	elsif (ie_consistir_cooperados_w	= 'PF') then

		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_exec_w;

		if (coalesce(cd_medico_p,0) = coalesce(cd_pessoa_fisica_w,0)) then
			ie_retorno_w	:= 'S';
		else
			ie_retorno_w	:= 'N';
		end if;

	end if;

end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_med_prest_oco_partic ( nr_seq_proc_p bigint, cd_medico_p bigint, nr_seq_grau_partic_p bigint, dt_referencia_p timestamp ) FROM PUBLIC;

