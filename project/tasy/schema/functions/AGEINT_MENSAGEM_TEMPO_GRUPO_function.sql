-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_mensagem_tempo_grupo ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_Seq_ageint_p bigint, nr_seq_ageint_item_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(2000);
nr_Seq_marcacao_w		bigint;
hr_Agenda_w				timestamp;
nr_minuto_duracao_w		bigint;
cd_Agenda_w				bigint;
qt_tempo_sala_w			bigint;
qt_sobra_w				bigint;
hr_max_agenda_w			timestamp;
hr_min_agenda_w			timestamp;
ds_retorno_max_w		varchar(1)	:= 'S';
ds_Retorno_min_w		varchar(1)	:= 'S';
nr_Seq_ageint_item_w	bigint;
nr_seq_grupo_selec_w	bigint;
nr_Seq_proc_marc_w		bigint;
qt_Tempo_Exame_w		bigint;
nr_Seq_regra_w			bigint;
cd_exame_w				bigint;
qt_Tempo_w				bigint;

C01 CURSOR FOR
	SELECT	nr_Sequencia
	from	ageint_tempo_entre_grupos
	where (cd_grupo_pri	= nr_seq_grupo_selec_w)
	or (cd_grupo_seg	= nr_seq_grupo_selec_w)
	and		ie_situacao	= 'A';

C02 CURSOR FOR
	SELECT	a.hr_Agenda,
			a.nr_minuto_duracao
	from	agenda_integrada_item b,
			ageint_marcacao_usuario a
	where	a.nr_seq_Ageint			= b.nr_seq_agenda_int
	and		a.nr_Seq_Ageint_item	= b.nr_sequencia
	and		a.nm_usuario			= nm_usuario_p
	and		a.nr_Seq_ageint			= nr_seq_ageint_p
	and		b.nr_seq_grupo_selec	= cd_exame_w;


BEGIN

select	max(nr_seq_grupo_selec)
into STRICT	nr_seq_grupo_selec_w
from	agenda_integrada_item
where	nr_sequencia	= nr_Seq_Ageint_item_p;

open C01;
loop
fetch C01 into
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	CASE WHEN cd_grupo_pri=nr_seq_grupo_selec_w THEN  cd_grupo_seg  ELSE cd_grupo_pri END ,
			qt_tempo
	into STRICT	cd_exame_w,
			qt_tempo_w
	from	ageint_tempo_entre_grupos
	where	nr_sequencia	= nr_seq_regra_w;

	open C02;
	loop
	fetch C02 into
		hr_Agenda_w,
		nr_minuto_duracao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(ds_retorno_w::text, '') = '') then
			if (hr_Agenda_w	< hr_Agenda_p) then
				select	Obter_Min_Entre_Datas((hr_Agenda_w + nr_minuto_duracao_w / 1440), hr_Agenda_p, 1)
				into STRICT	qt_sobra_w
				;
			else
				select	Obter_Min_Entre_Datas((hr_Agenda_p + nr_minuto_duracao_p / 1440), hr_Agenda_w, 1)
				into STRICT	qt_sobra_w
				;
			end if;

			if (qt_sobra_w	< qt_tempo_w) then
				ds_retorno_w	:= wheb_mensagem_pck.get_texto(306939 ,	'QT_HORAS=' || substr(OBTER_HORAS_MINUTOS(qt_tempo_w),1,3) || ';' ||
																		'QT_MINUTOS=' || substr(OBTER_HORAS_MINUTOS(qt_tempo_w),4,2) || ';' ||
																		'NM_GRUPO=' || substr(ageint_obter_nome_grupo(nr_seq_grupo_selec_w),1,90) || ';' ||
																		'NM_GRUPO_2=' || substr(ageint_obter_nome_grupo(cd_exame_w),1,90));
								/*
									Intervalo entre grupos: #@QT_HORAS#@ horas #@QT_MINUTOS#@ minutos
									Grupos: #@NM_GRUPO#@ - #@NM_GRUPO_2#@
								*/
			end if;
		end if;
		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_mensagem_tempo_grupo ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_Seq_ageint_p bigint, nr_seq_ageint_item_p bigint, nm_usuario_p text) FROM PUBLIC;

