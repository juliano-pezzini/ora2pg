-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION plt_obter_final_extensao ( dt_prescricao_p timestamp, hr_primeiro_horario_p text, nr_prescricao_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint) RETURNS timestamp AS $body$
DECLARE

 
dt_validade_prescr_w		timestamp;
dt_inicio_prescr_w		timestamp;
dt_primeiro_horario_w		timestamp;
dt_prescrPronto_w		timestamp;
ie_prescr_validade_w		varchar(1);
hr_prescr_copia_w		varchar(10);
nr_horas_diferen_w		bigint;
nr_horas_validade_w		integer;
ie_estender_w			varchar(3);
ie_informa_validade_copia_w	varchar(1);
hr_inicio_setor_w		varchar(10);
hr_inicio_prescr_w		varchar(10);
cd_setor_atendimento_w		bigint;	
ie_pac_ps_w			varchar(2);
ie_atend_alta_w			varchar(1);
nr_atendimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
dt_prim_hor_prescr_w		timestamp;
VarQuestionaSetorEstender_w	varchar(2);
ie_transferencia_w		varchar(1)	:= 'N';
VarHorasValidadePS_w		varchar(1)	:= 'S';
VarQtHorasExtensao_w	bigint;
VarQtHorasMaxExtensao_w	bigint;
dt_inicio_prescr_ww		timestamp;
dtQuebra_w				timestamp;


BEGIN 
ie_informa_validade_copia_w := Obter_Param_Usuario(924, 523, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_informa_validade_copia_w);
hr_prescr_copia_w := Obter_Param_Usuario(924, 532, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, hr_prescr_copia_w);
ie_prescr_validade_w := Obter_Param_Usuario(924, 753, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_validade_w);
VarQuestionaSetorEstender_w := Obter_Param_Usuario(950, 161, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarQuestionaSetorEstender_w);
VarHorasValidadePS_w := Obter_Param_Usuario(950, 180, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarHorasValidadePS_w);
VarQtHorasExtensao_w := Obter_Param_Usuario(950, 73, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarQtHorasExtensao_w);
VarQtHorasMaxExtensao_w := Obter_Param_Usuario(924, 154, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, VarQtHorasMaxExtensao_w);
ie_atend_alta_w		:= obter_se_atendimento_alta(nr_atendimento_p);	
 
 
select	max(cd_pessoa_fisica) 
into STRICT	cd_pessoa_fisica_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_p;
 
nr_atendimento_w	:= nr_atendimento_p;
 
cd_setor_atendimento_w	:= Obter_Setor_nova_prescr(nr_atendimento_w,nm_usuario_p,cd_perfil_p,cd_estabelecimento_p);
 
if (coalesce(nr_atendimento_w,0)	> 0) and (ie_atend_alta_w		= 'S') then 
	 
	nr_atendimento_w	:= obter_atendimento_paciente(cd_pessoa_fisica_w, cd_estabelecimento_p);
	 
	if (coalesce(nr_atendimento_w,0)	> 0) then 
		 
		select	max(dt_validade_prescr) 
		into STRICT	dt_validade_prescr_w 
		from	prescr_medica 
		where	nr_prescricao	= nr_prescricao_p;
		 
		if	((dt_prescricao_p - 1)	> dt_validade_prescr_w) then 
		 
			cd_setor_atendimento_w	:= Obter_Setor_nova_prescr(nr_atendimento_w,nm_usuario_p,cd_perfil_p,cd_estabelecimento_p);
		 
			dt_prim_hor_prescr_w	:= to_date(	to_char(clock_timestamp(),'dd/mm/yyyy')||' '|| 
								to_char(PLT_Obter_Prim_Hor_Plano(nr_atendimento_w,cd_setor_atendimento_w,clock_timestamp(),nm_usuario_p), 
								'hh24:mi')||':00','dd/mm/yyyy hh24:mi:ss');
			if (dt_prescricao_p	= dt_prim_hor_prescr_w) then 
				ie_estender_w	:= 'SE';
			end if;
		 
		end if;
	end if;
elsif (coalesce(ie_estender_w,'XPTO')		<> 'SE') and (VarQuestionaSetorEstender_w	= 'S') and (ie_atend_alta_w		<> 'S') and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (cd_setor_atendimento_p		<> coalesce(cd_setor_atendimento_w,0)) then 
	ie_estender_w	:= 'SE';
	cd_setor_atendimento_w	:= cd_setor_atendimento_p;
	ie_transferencia_w	:= 'S';
end if;	
 
if (coalesce(ie_estender_w::text, '') = '') then 
	ie_estender_w := Obter_Param_Usuario(924, 249, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_estender_w);
end if;	
 
dt_primeiro_horario_w	:= to_date('30/12/1899' || substr(hr_primeiro_horario_p,1,5)||':59','dd/mm/yyyy hh24:mi:ss');
 
if (coalesce(cd_setor_atendimento_w::text, '') = '') then 
	select	max(coalesce(obter_unidade_atendimento(nr_atendimento,'IA','CS'), 
			obter_unidade_atendimento(nr_atendimento,'A','CS'))) 
	into STRICT	cd_setor_atendimento_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_w;
end if;
	 
nr_horas_validade_w	:= obter_horas_validade_prescr(dt_primeiro_horario_w, nr_atendimento_w, ie_estender_w,null, clock_timestamp(),null);
 
select 	max(to_char(hr_inicio_prescricao,'hh24:mi:ss')) 
into STRICT	hr_inicio_setor_w 
from 	setor_atendimento 
where 	cd_setor_atendimento = cd_setor_atendimento_w;	
 
hr_inicio_prescr_w	:= coalesce(to_char(dt_primeiro_horario_w,'hh24:mi:ss'),'00:00:00');
 
 
if (hr_inicio_prescr_w > hr_inicio_setor_w) and (ie_estender_w = 'SE') and (nr_horas_validade_w	> 24) then 
	nr_horas_validade_w	:= nr_horas_validade_w - 24;
end if;	
 
if (to_char(dt_primeiro_horario_w,'ss') <> '00') then 
	dt_primeiro_horario_w	:= trunc(dt_primeiro_horario_w,'mi') + 1/1440;
end if;
 
if (ie_prescr_validade_w <> 'S') then 
	if (coalesce(hr_prescr_copia_w::text, '') = '') or (to_char(dt_primeiro_horario_w,'hh24:mi') <> hr_prescr_copia_w) then 
		begin 
 
		if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then 
			if (to_char(dt_primeiro_horario_w,'hh24:mi:ss') < to_char(dt_prescricao_p,'hh24:mi:ss')) then 
				dt_inicio_prescr_w := to_date(to_char(dt_prescricao_p+1,'dd/mm/yyyy') || ' ' || to_char(dt_primeiro_horario_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			else 
				dt_inicio_prescr_w := to_date(to_char(dt_prescricao_p,'dd/mm/yyyy') || ' ' || to_char(dt_primeiro_horario_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			end if;
		else 
			dt_inicio_prescr_w := dt_prescricao_p;
		end if;
		 
		end;
	else 
		begin	 
		if (dt_primeiro_horario_w IS NOT NULL AND dt_primeiro_horario_w::text <> '') then 
			dt_inicio_prescr_w := to_date(to_char(dt_prescricao_p,'dd/mm/yyyy') || ' ' || to_char(dt_primeiro_horario_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		else 
			dt_inicio_prescr_w := dt_prescricao_p;
		end if;
		 
		end;
	end if;
elsif (ie_prescr_validade_w = 'S') then 
	if (coalesce(dt_inicio_prescr_w::text, '') = '') then 
		dt_inicio_prescr_w := to_date(to_char(dt_prescricao_p,'dd/mm/yyyy') || ' ' || to_char(dt_primeiro_horario_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	end if;
end if;
 
ie_pac_ps_w	:= 	obter_se_pac_PS(nr_atendimento_w);
 
 
if (ie_pac_ps_w		= 'S') or (ie_transferencia_w	= 'S') then 
	 
	nr_horas_diferen_w		:= coalesce(Obter_Horas_Validade_Prescr_PS(cd_setor_atendimento_w,dt_prescricao_p),0);
 
	dtQuebra_w				:= to_date(to_char(clock_timestamp(),'dd/mm/yyyy') ||' '||coalesce(hr_inicio_setor_w,'00:00:00'),'dd/mm/yyyy hh24:mi:ss');
	dt_inicio_prescr_ww		:= to_date(((dtQuebra_w - 1) + VarQtHorasExtensao_w / 24),'dd/mm/yyyy hh24:mi:ss');
 
	 
	 
 
	if (ie_transferencia_w	<> 'S') and (nr_horas_diferen_w	> 24) and (dtQuebra_w > dt_inicio_prescr_w) and (VarQtHorasMaxExtensao_w > 0) and (nr_horas_diferen_w > VarQtHorasMaxExtensao_w) and (VarHorasValidadePS_w = 'N') then 
	 	nr_horas_diferen_w	:= nr_horas_diferen_w - 24;
  elsif (nr_horas_diferen_w	< 24) and (ie_transferencia_w	<> 'S') and (VarHorasValidadePS_w  = 'S') and (VarQtHorasExtensao_w > 0) and (dt_inicio_prescr_w > dt_inicio_prescr_ww) and (dt_inicio_prescr_w < dtQuebra_w) then 
		nr_horas_diferen_w	:= nr_horas_diferen_w	+ 24;
		if (nr_horas_diferen_w > VarQtHorasMaxExtensao_w) and (VarQtHorasMaxExtensao_w >= 24) then 
			nr_horas_diferen_w := nr_horas_diferen_w - (nr_horas_diferen_w - VarQtHorasMaxExtensao_w);
	  end if;	
	end if;	
 
			 
	dt_validade_prescr_w	:= dt_inicio_prescr_w + (nr_horas_diferen_w / 24);
	dt_validade_prescr_w 	:= trunc(dt_validade_prescr_w,'hh24') - 1/86400;
else  
	dt_validade_prescr_w	:= dt_inicio_prescr_w + coalesce(nr_horas_validade_w,24) / 24;
	dt_validade_prescr_w 	:= trunc(dt_validade_prescr_w,'hh24') - 1/86400;
end if;
 
return	dt_validade_prescr_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION plt_obter_final_extensao ( dt_prescricao_p timestamp, hr_primeiro_horario_p text, nr_prescricao_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint) FROM PUBLIC;

