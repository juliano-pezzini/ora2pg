-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_dados_prescricao as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_dados_prescricao ( nr_prescricao_p prescr_medica.nr_prescricao%type, ie_opcao_p text ) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_dados_prescricao_atx ( ' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(ie_opcao_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_dados_prescricao_atx ( nr_prescricao_p prescr_medica.nr_prescricao%type, ie_opcao_p text ) RETURNS varchar AS $body$
DECLARE


/*
D    - Data prescricao
P    - Pessoa Fisica
CP   - Prescritor
NP   - Nome do Prescritor
E    - Cod estabelecimento
VI   - Validade inicio
VF   - Validade final
ST   - Setor
RN   - Rem nato
A    - Atendimento
DL   - Data Liberacao
DLM  - Data Liberacao Medico
OBS  - Observacao
DN   - Data de nascimento
QP   - Peso
DE   - Data de entrada atendimento
PE   - Prescricao de emergencia
HR   - Horas de validade
CFO  - Codigo da funcao de origem (CD_FUNCAO_ORIGEM)
*/
ds_retorno_w		varchar(255);
BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	if (coalesce(ie_opcao_p,'D') = 'D') then
		
		select	PKG_DATE_FORMATERS.TO_VARCHAR(dt_prescricao,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)     -- internacionalizacao de formato de data --
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	elsif (coalesce(ie_opcao_p,'HR') = 'HR') then
		
		select	NR_HORAS_VALIDADE
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'P') then
		
		select	cd_pessoa_fisica
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'DP') then
		
		select	substr(obter_nome_pf(cd_pessoa_fisica),1,200)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'CP') then
		
		select	cd_prescritor
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'NP') then
		
		select	substr(obter_nome_pf(cd_prescritor),1,200)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'E') then

		select	cd_estabelecimento
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'NUO') then

		select	substr(obter_pessoa_fisica_usuario(nm_usuario_original,'N'),1,200)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'VI') then

		select PKG_DATE_FORMATERS.TO_VARCHAR(dt_inicio_prescr,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)	
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'VF') then	

		select PKG_DATE_FORMATERS.TO_VARCHAR(dt_validade_prescr,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)	
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'ST') then

		select	cd_setor_atendimento
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'RN') then	

		select	ie_recem_nato
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'DC') then	

		select	nr_doc_conv
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'A') then

		select	nr_atendimento
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'DL') then

		select	dt_liberacao
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'DLM') then

		select	dt_liberacao_medico
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'OBS') then

		select	substr(ds_observacao,1,255)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'DN') then

		select	obter_data_nascto_pf(cd_pessoa_fisica)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'QP') then

		select	coalesce(qt_peso, obter_sinal_vital(nr_atendimento, 'Peso'))
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	elsif (ie_opcao_p = 'DE') then

		select	substr(obter_dados_atendimento(nr_atendimento,'DE'),1,20)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'PE') then
	
		select	coalesce(max(ie_prescr_emergencia), 'N')
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
	elsif (ie_opcao_p = 'CFO') then
	
		select	coalesce(max(cd_funcao_origem),924)
		into STRICT	ds_retorno_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
	
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_prescricao ( nr_prescricao_p prescr_medica.nr_prescricao%type, ie_opcao_p text ) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_dados_prescricao_atx ( nr_prescricao_p prescr_medica.nr_prescricao%type, ie_opcao_p text ) FROM PUBLIC;

