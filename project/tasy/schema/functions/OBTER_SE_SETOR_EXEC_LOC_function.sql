-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_setor_exec_loc (cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_setor_prescr_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1) := 'S';
qt_setor_adic_w			bigint;
qt_setor_exclusivo_w		bigint;
qt_setor_interno_w		bigint;
ie_outro_estab_w		varchar(1);
cd_classif_setor_w		varchar(2);
cd_estabelecimento_base_w	smallint;


BEGIN
if (coalesce(cd_setor_atendimento_p,0) > 0) then
	select	coalesce(vl_parametro, vl_parametro_padrao)
	into STRICT	ie_outro_estab_w
	from	funcao_parametro
	where	cd_funcao	= 0
	and	nr_sequencia	= 60;

	select	MAX(cd_classif_setor),
		MAX(cd_estabelecimento_base)
	into STRICT	cd_classif_setor_w,
		cd_estabelecimento_base_w
	from	setor_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_p;

	if (cd_classif_setor_w in (6,7)) or
		(ie_outro_estab_w = 'N' AND cd_estabelecimento_base_w <> cd_estabelecimento_p) then
		ds_retorno_w	:= 'N';
	end if;

	if (ds_retorno_w = 'S') then
		select	count(*)
		into STRICT	qt_setor_exclusivo_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p
		and	(cd_setor_exclusivo IS NOT NULL AND cd_setor_exclusivo::text <> '');

		select	count(*)
		into STRICT	qt_setor_adic_w
		from	procedimento_setor_atend
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	coalesce(cd_setor_origem, coalesce(cd_setor_prescr_p,0)) = coalesce(cd_setor_prescr_p,0);

		select	count(*)
		into STRICT	qt_setor_interno_w
		from	proc_interno_setor
		where	nr_seq_proc_interno	= nr_seq_proc_interno_p;

		if (qt_setor_exclusivo_w > 0) or (qt_setor_adic_w > 0) or (qt_setor_interno_w > 0) then
			ds_retorno_w	:= 'N';

			select	count(*)
			into STRICT	qt_setor_exclusivo_w
			from	procedimento
			where	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	cd_setor_exclusivo	= cd_setor_atendimento_p;

			select	count(*)
			into STRICT	qt_setor_adic_w
			from	procedimento_setor_atend
			where	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p
			and	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_setor_atendimento	= cd_setor_atendimento_p
			and	coalesce(cd_setor_origem, coalesce(cd_setor_prescr_p,0)) = coalesce(cd_setor_prescr_p,0);

			select	count(*)
			into STRICT	qt_setor_interno_w
			from	proc_interno_setor
			where	nr_seq_proc_interno	= nr_seq_proc_interno_p
			and	cd_setor_atendimento	= cd_setor_atendimento_p
			and	obter_se_proc_int_lib_estab(nr_seq_proc_interno,cd_estabelecimento_p) = 'S'
			and	coalesce(cd_perfil,obter_perfil_ativo) = obter_perfil_ativo;

			if (qt_setor_exclusivo_w > 0) or (qt_setor_adic_w > 0) or (qt_setor_interno_w > 0) then
				ds_retorno_w	:= 'S';
			end if;
		end if;
	end if;
end if;

return	ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_setor_exec_loc (cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_setor_prescr_p bigint) FROM PUBLIC;

