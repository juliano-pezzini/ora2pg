-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_med_turno_agenda_cir (nr_seq_agenda_p bigint, cd_medico_p text) RETURNS varchar AS $body$
DECLARE

 
nr_seq_turno_w			bigint;
cd_agenda_w			bigint;
hr_inicio_w			timestamp;	
ie_dia_semana_w			bigint;	
ie_liberado_w			varchar(01) := 'N';
qt_reg_w			bigint;
		

BEGIN 
 
select	max(cd_agenda), 
		max(hr_inicio) 
into STRICT	cd_agenda_w, 
		hr_inicio_w 
from	agenda_paciente 
where	nr_sequencia	= nr_seq_agenda_p;
 
 
select	count(*) 
into STRICT	qt_reg_w 
from 	agenda_medico 
where (coalesce(cd_medico, cd_medico_p) = cd_medico_p AND obter_se_especialidade_medico(cd_medico_p, cd_especialidade) = 'S') 
and		(nr_seq_turno IS NOT NULL AND nr_seq_turno::text <> '') 
and		cd_agenda = cd_agenda_w 
and		coalesce(ie_permite,'S') = 'S' 
and 	ie_situacao = 'A';
 
if (qt_reg_w > 0) then 
	begin 
	 
	select	cd_agenda, 
		hr_inicio 
	into STRICT	cd_agenda_w, 
		hr_inicio_w 
	from	agenda_paciente 
	where	nr_sequencia	= nr_seq_agenda_p;
 
	select 	pkg_date_utils.get_WeekDay(hr_inicio_w) 
	into STRICT	ie_dia_semana_w 
	;
 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_turno_w 
	from 	agenda_horario 
	where	cd_agenda	= cd_agenda_w 
	and		(dt_dia_semana	= ie_dia_semana_w or ((dt_dia_semana = 9) and (ie_dia_semana_w not in (7,1)))) 
	and	to_date(trunc(clock_timestamp(), 'dd') || ' ' || to_char(hr_inicio_w, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') between 
			to_date(trunc(clock_timestamp(), 'dd') || ' ' || to_char(hr_inicial, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') and 
			to_date(trunc(clock_timestamp(), 'dd') || ' ' || to_char(hr_final, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss');
	 
	 
	select	coalesce(max('S'),'N') 
	into STRICT	ie_liberado_w 
	from	agenda_medico 
	where	cd_agenda	= cd_agenda_w 
	and (coalesce(cd_medico, cd_medico_p) = cd_medico_p AND obter_se_especialidade_medico(cd_medico_p, cd_especialidade) = 'S') 
	and   ((nr_seq_turno_w = nr_seq_turno) or ((nr_seq_turno = 9) and (nr_seq_turno_w not in (7,1)))) 
	and		coalesce(ie_permite,'S') = 'S' 
	and 	ie_situacao = 'A';
	end;
end if;
 
if (ie_liberado_w <> 'S') then /* Se não há regra nenhuma, vai retornar S se houver alguma regra, vai retornar o resultado da regra.*/
 
	select	coalesce(max('N'),'S') 
	into STRICT	ie_liberado_w 
	from	agenda_medico 
	where	cd_agenda	= cd_agenda_w 
	and		(nr_seq_turno IS NOT NULL AND nr_seq_turno::text <> '') 
	and 	ie_situacao = 'A';
end if;
	 
return	ie_liberado_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_med_turno_agenda_cir (nr_seq_agenda_p bigint, cd_medico_p text) FROM PUBLIC;

