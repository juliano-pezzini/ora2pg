-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_perc_item_repasse ( nr_seq_procmat_rep_p bigint, nr_seq_terceiro_p bigint, cd_procmat_p bigint, ie_origem_proced_p bigint) RETURNS bigint AS $body$
DECLARE


vl_retorno_w		double precision;
pr_calcular_w		double precision;
vl_proc_repasse_w	double precision;
vl_mat_repasse_w	double precision;
cd_grupo_proc_w		bigint;
cd_especialidade_proc_w	bigint;
cd_area_proc_w		bigint;
cd_classe_material_w	bigint;
cd_grupo_material_w	bigint;
cd_subgrupo_material_w	bigint;
qt_regra_w		bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;


BEGIN

select	count(*)
into STRICT	qt_regra_w
from	regra_calc_item_repasse x
where	x.nr_seq_terceiro	= nr_seq_terceiro_P
and	coalesce(x.ie_situacao,'A')	= 'A';

vl_retorno_w	:= 0;

if (qt_regra_w	> 0) then
	begin
	select	max(c.cd_grupo_proc),
		max((obter_dados_estrut_proc(c.cd_procedimento,c.ie_origem_proced,'C','E'))::numeric ),
		max((obter_dados_estrut_proc(c.cd_procedimento,c.ie_origem_proced,'C','A'))::numeric )
	into STRICT	cd_grupo_proc_w,
		cd_especialidade_proc_w,
		cd_area_proc_w
	from	procedimento c,
		procedimento_paciente b,
		procedimento_repasse a
	where	a.nr_seq_procedimento	= b.nr_sequencia
	and	b.cd_procedimento	= c.cd_procedimento
	and	b.ie_origem_proced	= c.ie_origem_proced
	and	a.nr_sequencia		= nr_seq_procmat_rep_p
	and	a.nr_seq_terceiro	= nr_seq_terceiro_p
	and	b.cd_procedimento	= cd_procmat_p
	and	b.ie_origem_proced	= ie_origem_proced_p;

	select	max(c.cd_classe_material),
		max(Obter_estrutura_material(c.cd_material,'G')),
		max(Obter_estrutura_material(c.cd_material,'S'))
	into STRICT	cd_classe_material_w,
		cd_grupo_material_w,
		cd_subgrupo_material_w
	from	material C,
		material_atend_paciente b,
		material_repasse a
	where	a.nr_seq_material	= b.nr_sequencia
	and	b.cd_material		= c.cd_material
	and	a.nr_sequencia		= nr_seq_procmat_rep_p
	and	a.nr_seq_terceiro	= nr_seq_terceiro_p
	and	b.cd_material		= cd_procmat_p;

	begin
	select	c.nr_seq_grupo,
		b.nr_seq_subgrupo,
		a.nr_seq_forma_org
	into STRICT	nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w
	from	sus_procedimento a,
		sus_forma_organizacao b,
		sus_subgrupo c
	where	b.nr_seq_subgrupo	= c.nr_sequencia
	and	a.nr_seq_forma_org	= b.nr_sequencia
	and	a.cd_procedimento	= cd_procmat_p
	and	a.ie_origem_proced	= ie_origem_proced_p  LIMIT 1;
	exception
	when others then
		nr_seq_grupo_w		:= 0;
		nr_seq_subgrupo_w	:= 0;
		nr_seq_forma_org_w	:= 0;
	end;

	select	coalesce(max(c.pr_calcular),0)
	into STRICT	pr_calcular_w
	from	regra_calc_item_rep_trans c,
		regra_calc_item_repasse b
	where	c.nr_seq_regra	= b.nr_sequencia
	and	b.nr_seq_terceiro = nr_seq_terceiro_p
	and	coalesce(b.ie_situacao,'A') 				= 'A'
	and	coalesce(coalesce(c.cd_procedimento,c.cd_material),0)	= CASE WHEN coalesce(coalesce(c.cd_procedimento,c.cd_material)::text, '') = '' THEN 0  ELSE cd_procmat_p END
	and	coalesce(c.ie_origem_proced,0) 			= CASE WHEN coalesce(c.ie_origem_proced::text, '') = '' THEN 0  ELSE ie_origem_proced_p END 
	and	coalesce(c.cd_grupo_proc,0)				= CASE WHEN coalesce(c.cd_grupo_proc::text, '') = '' THEN 0  ELSE cd_grupo_proc_w END 
	and	coalesce(c.cd_especialidade,0)			= CASE WHEN coalesce(c.cd_especialidade::text, '') = '' THEN 0  ELSE cd_especialidade_proc_w END 
	and	coalesce(c.cd_area_procedimento,0)			= CASE WHEN coalesce(c.cd_area_procedimento::text, '') = '' THEN 0  ELSE cd_area_proc_w END 
	and	coalesce(c.cd_classe_material,0)			= CASE WHEN coalesce(c.cd_classe_material::text, '') = '' THEN 0  ELSE cd_classe_material_w END 
	and	coalesce(c.cd_grupo_material,0)			= CASE WHEN coalesce(c.cd_grupo_material::text, '') = '' THEN 0  ELSE cd_grupo_material_w END 
	and	coalesce(c.cd_subgrupo_material,0)			= CASE WHEN coalesce(c.cd_subgrupo_material::text, '') = '' THEN 0  ELSE cd_subgrupo_material_w END 
	and	coalesce(c.nr_seq_grupo,0)				= CASE WHEN coalesce(c.nr_seq_grupo::text, '') = '' THEN 0  ELSE nr_seq_grupo_w END 
	and	coalesce(c.nr_seq_subgrupo,0)			= CASE WHEN coalesce(c.nr_seq_subgrupo::text, '') = '' THEN 0  ELSE nr_seq_subgrupo_w END;

	vl_retorno_w	:= pr_calcular_w;


	select	coalesce(sum(a.vl_repasse),0)
	into STRICT	vl_proc_repasse_w
	from	procedimento_paciente b,
		procedimento_repasse a
	where	a.nr_seq_procedimento	= b.nr_sequencia
	and	a.nr_seq_terceiro	= nr_seq_terceiro_p
	and	a.nr_sequencia		= nr_seq_procmat_rep_p
	and	b.cd_procedimento	= cd_procmat_p
	and	b.ie_origem_proced	= coalesce(ie_origem_proced_p,0);

	select	coalesce(sum(a.vl_repasse),0)
	into STRICT	vl_mat_repasse_w
	from	material_atend_paciente b,
		material_repasse a
	where	a.nr_seq_material	= b.nr_sequencia
	and	b.cd_material		= cd_procmat_p
	and	a.nr_seq_terceiro	= nr_seq_terceiro_p
	and	a.nr_sequencia		= nr_seq_procmat_rep_p;

	if (coalesce(pr_calcular_w,0) <> 0) then
		if (coalesce(vl_proc_repasse_w,0) <> 0) then
			vl_retorno_w	:= ((coalesce(vl_proc_repasse_w,0) * coalesce(pr_calcular_w,0))/100);
		else
			vl_retorno_w	:= ((coalesce(vl_mat_repasse_w,0) * coalesce(pr_calcular_w,0))/100);
		end if;
	end if;
	end;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_perc_item_repasse ( nr_seq_procmat_rep_p bigint, nr_seq_terceiro_p bigint, cd_procmat_p bigint, ie_origem_proced_p bigint) FROM PUBLIC;

