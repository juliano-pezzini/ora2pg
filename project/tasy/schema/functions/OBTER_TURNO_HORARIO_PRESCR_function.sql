-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_turno_horario_prescr ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ds_horario_p text, cd_local_estoque_p bigint) RETURNS bigint AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_seq_turno_w		bigint;
hr_inicial_w		varchar(5);
hr_final_w			varchar(5);
dt_inicial_w		timestamp;
dt_final_w			timestamp;
dt_horario_w		timestamp;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
			to_char(b.hr_inicial,'hh24:mi'),
			to_char(b.hr_final,'hh24:mi')
	from	regra_turno_disp_param b,
			regra_turno_disp a
	where	a.nr_sequencia		= b.nr_seq_turno
	and (coalesce(b.cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0))
	and (coalesce(a.cd_local_estoque,coalesce(cd_local_estoque_p,0))		= coalesce(cd_local_estoque_p,0))
	and		a.cd_estabelecimento	= cd_estabelecimento_p
	and		a.ie_situacao		= 'A'
	order by
			coalesce(b.cd_setor_atendimento,0),
			coalesce(a.cd_local_estoque,0),
			to_char(b.hr_inicial,'hh24:mi');


BEGIN

if (ds_horario_p IS NOT NULL AND ds_horario_p::text <> '') then
	dt_horario_w		:= to_date('01/01/2000 '||ds_horario_p||':00','dd/mm/yyyy hh24:mi:ss');



	open c01;
	loop
		fetch c01 into
			nr_sequencia_w,
			hr_inicial_w,
			hr_final_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			-- Jonas e Thiago porque nÃ£o buscava corretamente o dt_horario_w  durante a rotina ele recebia outro valor.
			dt_horario_w		:= to_date('01/01/2000 '||ds_horario_p||':00','dd/mm/yyyy hh24:mi:ss');

			dt_inicial_w	:= to_date('01/01/2000 '||hr_inicial_w||':00','dd/mm/yyyy hh24:mi:ss');
			dt_final_w	:= to_date('01/01/2000 '||hr_final_w||':00','dd/mm/yyyy hh24:mi:ss');

		if (dt_inicial_w > dt_final_w) then
				dt_final_w	:= dt_final_w + 1;
				if (to_char(dt_horario_w,'hh24:mi') < hr_inicial_w) then
					dt_horario_w	:= dt_horario_w + 1;
				end if;
			end if;

			if (dt_horario_w >= dt_inicial_w) and (dt_horario_w <= dt_final_w) then
				nr_seq_turno_w	:= nr_sequencia_w;
			end if;
			end;
	end loop;
	close c01;
end if;

return nr_seq_turno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_turno_horario_prescr ( cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ds_horario_p text, cd_local_estoque_p bigint) FROM PUBLIC;

