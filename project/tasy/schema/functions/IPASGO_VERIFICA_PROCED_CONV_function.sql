-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ipasgo_verifica_proced_conv ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(15) := 'S';
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
cd_tipo_fatura_w		fatur_tipo_fatura.cd_tipo_fatura%type;
nr_seq_tipo_fatura_w		conta_paciente.nr_seq_tipo_fatura%type;
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
qt_pacote_w			bigint := 0;
qt_proc_pric_w			bigint := 0;
qt_proc_conv_w			bigint := 0;
ie_considera_proc_interno_w	varchar(15) := 'N';


BEGIN

ie_considera_proc_interno_w := obter_param_usuario(999, 59, obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_p, ie_considera_proc_interno_w);

begin
select	nr_atendimento,
	nr_seq_tipo_fatura,
	cd_convenio_parametro
into STRICT	nr_atendimento_w,
	nr_seq_tipo_fatura_w,
	cd_convenio_parametro_w
from	conta_paciente
where	nr_interno_conta = nr_interno_conta_p;
exception
when others then
	nr_atendimento_w	:= 0;
	nr_seq_tipo_fatura_w	:= 0;
	cd_convenio_parametro_w	:= 0;
end;

begin
select	cd_tipo_fatura
into STRICT	cd_tipo_fatura_w
from	fatur_tipo_fatura
where	nr_sequencia = nr_seq_tipo_fatura_w;
exception
when others then
	cd_tipo_fatura_w := 0;
end;

select	count(1)
into STRICT	qt_pacote_w
from	procedimento_paciente
where	nr_interno_conta 	= nr_interno_conta_p
and	nr_atendimento		= nr_atendimento_w
and	nr_sequencia		= nr_seq_proc_pacote  LIMIT 1;

select	count(1)
into STRICT	qt_proc_pric_w
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	cd_tipo_fatura_w 	= 3
and	coalesce(b.ie_proc_princ_atend,'S') = 'S'
and	somente_numero(b.cd_procedimento_convenio) in (70025,70033)
and	qt_pacote_w 		= 0  LIMIT 1;

if (qt_proc_pric_w = 0) then
	begin

	if (coalesce(ie_considera_proc_interno_w,'N') = 'S') then
		begin

		begin
		select	count(1)
		into STRICT	qt_proc_conv_w
		from	procedimento_paciente b
		where	b.nr_interno_conta 	= nr_interno_conta_p
		and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
		and	(b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> '')
		and	coalesce(b.nr_seq_proc_pacote,0) 	<> b.nr_sequencia
		and	not exists (	SELECT	1
					from	conversao_proc_convenio a
					where	a.nr_seq_proc_interno = b.nr_seq_proc_interno
					and	coalesce(a.cd_proc_convenio,'0') <> '0'
					and	cd_convenio		= cd_convenio_parametro_w);
		exception
		when others then
			qt_proc_conv_w := 0;
		end;

		end;
	else
		begin

		begin
		select	count(1)
		into STRICT	qt_proc_conv_w
		from	procedimento_paciente b
		where	b.nr_interno_conta 	= nr_interno_conta_p
		and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
		and	coalesce(b.nr_seq_proc_pacote,0) 	<> b.nr_sequencia
		and	not exists (	SELECT	1
					from	conversao_proc_convenio a
					where	a.cd_procedimento	= b.cd_procedimento
					and	a.ie_origem_proced	= b.ie_origem_proced
					and	coalesce(a.cd_proc_convenio,'0') <> '0'
					and	cd_convenio		= cd_convenio_parametro_w);
		exception
		when others then
			qt_proc_conv_w := 0;
		end;

		end;
	end if;

	if (qt_proc_conv_w > 0) then
		begin
		ds_retorno_w := 'N';
		end;
	end if;

	end;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ipasgo_verifica_proced_conv ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

