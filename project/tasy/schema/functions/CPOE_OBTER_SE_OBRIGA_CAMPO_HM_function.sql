-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_se_obriga_campo_hm ( nr_atendimento_p bigint, cd_pessoa_fisica_p text) RETURNS varchar AS $body$
DECLARE


/*  (Informação obrigar)
V - Volume
Q - Quantidade
A - Ambos
*/
-- OBTER_SE_OBRIGA_CAMPO_HM
-- Atenção! Esta function foi migrada para o Servidor java (GWT Apenas). Caso houver alguma alteração nesta function, deve ser avisado o responsável pela CPOE GWT!
cd_pessoa_fisica_w	varchar(10);
qt_peso_w		real;
qt_peso_min_w		double precision;
qt_peso_max_w		double precision;
qt_dias_min_w		bigint;
qt_dias_max_w		bigint;
qt_idade_w		double precision;
qt_idade_min_w		integer;
qt_idade_min_mes_w	integer;
qt_idade_min_dia_w	integer;
qt_idade_max_w		integer;
qt_idade_max_mes_w	integer;
qt_idade_max_dia_w	integer;
ie_obrigar_w		varchar(10);
ie_inf_obrigar_w		varchar(10);
ie_regra_valida_w		varchar(1);
dt_referencia_min_w	timestamp;
dt_referencia_max_w	timestamp;

C01 CURSOR FOR
SELECT	coalesce(ie_obrigar,'A'),
	coalesce(qt_idade_min,0),
	coalesce(qt_idade_min_mes,0),
	coalesce(qt_idade_min_dia,0),
	coalesce(qt_idade_max,0),
	coalesce(qt_idade_max_mes,0),
	coalesce(qt_idade_max_dia,0),
	coalesce(qt_peso_min,0),
	coalesce(qt_peso_max,999999)
from	regra_informacao_hemocomp;


BEGIN

select	max(obter_idade(dt_nascimento, coalesce(dt_obito,clock_timestamp()),'DIA'))
into STRICT	qt_idade_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p;

select 	coalesce(obter_sinal_vital(nr_atendimento_p,'Peso'),0)
into STRICT	qt_peso_w
;

open C01;
loop
fetch C01 into
	ie_obrigar_w,
	qt_idade_min_w,
	qt_idade_min_mes_w,
	qt_idade_min_dia_w,
	qt_idade_max_w,
	qt_idade_max_mes_w,
	qt_idade_max_dia_w,
	qt_peso_min_w,
	qt_peso_max_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	--Obter dias de referência (mínimo)
	dt_referencia_min_w	:= clock_timestamp() - qt_idade_min_dia_w;
	dt_referencia_min_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_min_w,qt_idade_min_mes_w * -1,0);
	dt_referencia_min_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_min_w,qt_idade_min_w * 12 * -1,0);
	qt_dias_min_w 		:= clock_timestamp() - dt_referencia_min_w;
	--Obter dias de referência (máximo)
	dt_referencia_max_w	:= clock_timestamp() - qt_idade_max_dia_w;
	dt_referencia_max_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_max_w,qt_idade_max_mes_w * -1,0);
	dt_referencia_max_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_max_w,qt_idade_max_w * 12 * -1,0);
	qt_dias_max_w 		:= clock_timestamp() - dt_referencia_max_w;

	if (qt_dias_max_w = 0) then
		qt_dias_max_w := 9999999999;
	end if;

	select	coalesce(max('S'),'N')
	into STRICT	ie_regra_valida_w
	
	where	qt_idade_w between qt_dias_min_w and qt_dias_max_w
	and	qt_peso_w  between qt_peso_min_w and qt_peso_max_w;

	if (ie_regra_valida_w = 'S') then
		if (coalesce(ie_inf_obrigar_w::text, '') = '') then
			ie_inf_obrigar_w := ie_obrigar_w;
		elsif (ie_inf_obrigar_w <> ie_obrigar_w) then
			ie_inf_obrigar_w := 'A';
		end if;
	end if;

end loop;
close C01;

return	coalesce(ie_inf_obrigar_w,'N');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_se_obriga_campo_hm ( nr_atendimento_p bigint, cd_pessoa_fisica_p text) FROM PUBLIC;

