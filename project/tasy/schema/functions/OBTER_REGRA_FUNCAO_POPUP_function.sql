-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_funcao_popup ( nr_seq_objeto_p bigint, ie_opcao_p text default 'E', cd_perfil_p bigint default 0) RETURNS varchar AS $body$
DECLARE


ds_sep_w	varchar(2) := ';';
c02		integer;
ds_retorno_w	varchar(2000);
ds_config_w	varchar(254);
nr_sequencia_w	bigint;
ds_comando_w	varchar(2000);
ds_erro_w	varchar(2000);
retorno_w	integer;
cd_perfil_w	bigint;

C01 CURSOR FOR
	SELECT	d.nr_sequencia
	from	dic_objeto d,
		funcao_popup_regra r
	where 	d.nr_seq_obj_sup = nr_seq_objeto_p
	and	r.nr_seq_objeto = d.nr_sequencia
	group by d.nr_sequencia
	order by d.nr_sequencia;


BEGIN

if (cd_perfil_p > 0) then
	cd_perfil_w := cd_perfil_p;
else
	cd_perfil_w := wheb_usuario_pck.get_cd_perfil;
end if;

ds_comando_w := ' from funcao_popup_regra r ' ||
		' where r.nr_seq_objeto = :nr_sequencia ' ||
		' and r.ie_tipo_regra = ''E'' ' ||
		' and nvl(r.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento ' ||
		' and nvl(r.cd_perfil, :cd_perfil) = :cd_perfil  ' ||
		' and nvl(r.nm_usuario_regra,wheb_usuario_pck.get_nm_usuario) = wheb_usuario_pck.get_nm_usuario ' ||		
		' ORDER BY NVL(r.nm_usuario_regra,''AAAAAAAA''),NVL(r.cd_perfil,0),NVL(r.cd_estabelecimento,0)';
	
ds_retorno_w := NULL;
	
if (ie_opcao_p = 'E') then
	
	ds_comando_w := 'select nvl(r.ie_enable,''S'') || ''#'' || nvl(r.ie_visible,''S'') || ''#'' ||  nvl(r.nr_seq_apresent,-1) || '';'' ' || ds_comando_w;
		
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
				
		ds_retorno_w := ds_retorno_w || nr_sequencia_w || '#';			
				
			begin
			C02 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C02, ds_comando_w, dbms_sql.Native);
			DBMS_SQL.DEFINE_COLUMN(C02, 1, ds_config_w,254);
			DBMS_SQL.BIND_VARIABLE(C02, 'NR_SEQUENCIA', nr_sequencia_w,255);
			DBMS_SQL.BIND_VARIABLE(C02, 'CD_PERFIL', cd_perfil_w,10);						
			retorno_w := DBMS_SQL.execute(c02);
			retorno_w := DBMS_SQL.fetch_rows(c02);
			
			if (retorno_w = 0) then
				ds_config_w := 'S#S#-1;';   --Ajustes padrão para quando é permitido personalizar, mas não há nenhuma regra de exibição definida.
			end if;
			
			while(retorno_w <> 0) loop
				begin
				DBMS_SQL.COLUMN_VALUE(C02, 1, ds_config_w);				
				retorno_w := DBMS_SQL.fetch_rows(c02);
				end;
			end loop;
		
			DBMS_SQL.CLOSE_CURSOR(C02);
			exception
			when others then
				ds_retorno_w := '';
			end;	
			
		ds_retorno_w := ds_retorno_w || ds_config_w;
		
		end;
	end loop;
	close C01;
	
	ds_retorno_w := substr(ds_retorno_w,1, length(ds_retorno_w) - 1);


elsif (ie_opcao_p = 'P') then		
	
	select	count(*)
	into STRICT	ds_retorno_w
	from	dic_objeto d,
		funcao_popup_regra r
	where 	d.nr_seq_obj_sup = nr_seq_objeto_p
	and	r.nr_seq_objeto = d.nr_sequencia
	and 	r.ie_tipo_regra = 'P'
	and	coalesce(r.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	and	coalesce(r.cd_perfil, wheb_usuario_pck.get_cd_perfil) = wheb_usuario_pck.get_cd_perfil
	and	coalesce(r.nm_usuario_regra,wheb_usuario_pck.get_nm_usuario) = wheb_usuario_pck.get_nm_usuario;
	
else
	ds_comando_w   := 'select r.' || ie_opcao_p || ' ' || ds_comando_w;
	nr_sequencia_w := nr_seq_objeto_p;

	C02 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C02, ds_comando_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(C02, 1, ds_config_w,254);
	DBMS_SQL.BIND_VARIABLE(C02, 'NR_SEQUENCIA', nr_sequencia_w,255);
	DBMS_SQL.BIND_VARIABLE(C02, 'CD_PERFIL', cd_perfil_w,10);						
	retorno_w := DBMS_SQL.execute(c02);
	retorno_w := DBMS_SQL.fetch_rows(c02);
	
	if (retorno_w = 0) then			--Ajustes padrão para quando é permitido personalizar, mas não há nenhuma regra de exibição definida.
		if (ie_opcao_p = 'IE_VISIBLE') then
			ds_config_w := 'S';
		elsif (ie_opcao_p = 'NR_SEQ_APRESENT') then
			ds_config_w := '-1';
		end if;
	end if;
	
	while(retorno_w <> 0) loop
		begin
		DBMS_SQL.COLUMN_VALUE(C02, 1, ds_config_w);				
		retorno_w := DBMS_SQL.fetch_rows(c02);
		end;
	end loop;	
	
	DBMS_SQL.CLOSE_CURSOR(C02);
	
	ds_retorno_w := ds_config_w;

end if;
	
return ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_funcao_popup ( nr_seq_objeto_p bigint, ie_opcao_p text default 'E', cd_perfil_p bigint default 0) FROM PUBLIC;

