-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tipo_nomenclador_regra ( cd_convenio_p bigint, cd_material_p bigint default null, cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null) RETURNS varchar AS $body$
DECLARE

	
cd_procedimento_w	varchar(255);
cd_material_w		bigint;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	integer;
cd_classe_material_w	integer;
ds_valor_adicional_w	varchar(10);
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
si_expenses_type_w      varchar(10);
si_ret_external_code_w  varchar(10);
ds_return_w             varchar(255);
	
c01 CURSOR FOR
SELECT	cd_external_code,
        si_expenses_type,
        coalesce(si_ret_external_code, 'N')
from	expenses_code_rule
where	coalesce(cd_convenio,coalesce(cd_convenio_p,0))			        = coalesce(cd_convenio_p,0)
and	coalesce(cd_material,coalesce(cd_material_p,0))			        = coalesce(cd_material_p,0)
and	coalesce(cd_grupo_material,coalesce(cd_grupo_material_w,0))		= coalesce(cd_grupo_material_w,0)
and	coalesce(cd_subgrupo_material,coalesce(cd_subgrupo_material_w,0))	= coalesce(cd_subgrupo_material_w,0)
and	coalesce(cd_classe_material,coalesce(cd_classe_material_w,0))		= coalesce(cd_classe_material_w,0)
and	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0))	= coalesce(cd_area_procedimento_w,0)
and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
and	coalesce(cd_procedimento, coalesce(cd_procedimento_p,0))	        = coalesce(cd_procedimento_p,0)
order by coalesce(cd_convenio,0),
	coalesce(cd_material,0),
	coalesce(cd_classe_material,0),
	coalesce(cd_subgrupo_material,0),
	coalesce(cd_grupo_material,0),
	coalesce(cd_procedimento,0),
	coalesce(cd_grupo_proc,0),
	coalesce(cd_especialidade,0),
	coalesce(cd_area_procedimento,0);
	

BEGIN

if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then

	select	max(cd_grupo_material),
		max(cd_subgrupo_material),
		max(cd_classe_material)
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material	= cd_material_p;
	
elsif (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
	
	select	max(cd_area_procedimento),
		max(cd_especialidade),
		max(cd_grupo_proc)
	into STRICT	cd_area_procedimento_w,
		cd_especialidade_w,
		cd_grupo_proc_w
	from	estrutura_procedimento_v
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced 	= ie_origem_proced_p;

end if;


open C01;
loop
fetch C01 into	
	ds_valor_adicional_w,
        si_expenses_type_w,
        si_ret_external_code_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

ds_return_w := si_expenses_type_w;

if (si_ret_external_code_w = 'S') then
        ds_return_w := ds_valor_adicional_w;
end if;

return ds_return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tipo_nomenclador_regra ( cd_convenio_p bigint, cd_material_p bigint default null, cd_procedimento_p bigint default null, ie_origem_proced_p bigint default null) FROM PUBLIC;

