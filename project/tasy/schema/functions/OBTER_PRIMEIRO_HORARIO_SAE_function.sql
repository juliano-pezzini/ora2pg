-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_primeiro_horario_sae ( cd_intervalo_p text, nr_prescricao_p bigint) RETURNS varchar AS $body$
DECLARE


ds_prim_horario_w			varchar(255);
dt_prescricao_w				timestamp := clock_timestamp();
hr_prescricao_w				varchar(5);
hr_inicial_w				varchar(5);
ds_retorno_w				varchar(5);
i							integer;
hr_ref_w					timestamp;
hr_atual_w					timestamp;
ds_horario_w				varchar(5);
ds_hora_inicio_w			varchar(5);
dt_primeiro_horario_w		timestamp := clock_timestamp();
ie_dia_w					bigint;
cd_setor_atendimento_w		integer;
hr_prim_horario_w			timestamp;
nr_atendimento_w			bigint;


BEGIN

select	max(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(clock_timestamp(), coalesce(coalesce(DT_PRIMEIRO_HORARIO,Obter_Prim_Horario_Setor_SAE(cd_setor_atendimento)),clock_timestamp()))),
		max(cd_setor_atendimento),
		coalesce(max(dt_primeiro_horario),clock_timestamp()),
		max(nr_atendimento)
into STRICT		hr_prim_horario_w,
		cd_setor_atendimento_w,
		dt_primeiro_horario_w,
		nr_atendimento_w
from		pe_prescricao
where	nr_sequencia	=	nr_prescricao_p;

	
if (trunc(hr_prim_horario_w,'mi') < trunc(clock_timestamp(),'mi')) and (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') or (dt_primeiro_horario_w	<> clock_timestamp()) then

	if (cd_setor_atendimento_w > 0) then
		select	coalesce(max(b.ds_prim_horario) || ' ', ' ')
		into STRICT		ds_prim_horario_w
		from		intervalo_prescricao a,
				intervalo_setor b
		where	a.cd_intervalo 			= b.cd_intervalo
		and		b.cd_setor_atendimento	= cd_setor_atendimento_w
		and		a.cd_intervalo 			= cd_intervalo_p
		and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''));
	end if;

	if (coalesce(ds_prim_horario_w::text, '') = '') or (ds_prim_horario_w = ' ') then
		select	coalesce(max(ds_prim_horario) || ' ', ' ')
		into STRICT		ds_prim_horario_w
		from		intervalo_prescricao
		where	cd_intervalo = cd_intervalo_p;
	end if;

	ds_horario_w		:= '';

	FOR i 	IN 1.. length(ds_prim_horario_w) LOOP
		begin
		if (substr(ds_prim_horario_w,i,1) = ' ') then
			begin
			if (coalesce(ds_hora_inicio_w::text, '') = '') then
				ds_hora_inicio_w	:= ds_horario_w;
			end if;
			if (substr(ds_horario_w,1,2) = '00') or (substr(ds_horario_w,1,2) = '24') then
				hr_atual_w	:= trunc(dt_prescricao_w,'dd') + 1;
			else
				if (length(ds_horario_w) = 5) and (position(':' in ds_horario_w)	> 0)then

					hr_atual_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, coalesce(ds_horario_w, '00:00')),'mi');
				else
					hr_atual_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, coalesce(ds_horario_w, '00:00')),'hh');
				end if;
			end if;
			if (hr_atual_w < dt_prescricao_w) then
				hr_atual_w	:= hr_atual_w + 1;
			end if;
			if (length(ds_horario_w) = 2) then
				ds_horario_w	:= ds_horario_w || ':00';
			end if;
			if (ds_horario_w >= to_char(dt_primeiro_horario_w,'hh24:mi')) then
				begin
				hr_inicial_w	:= ds_horario_w;
				ds_hora_inicio_w:= ds_horario_w;
				exit;
				end;
			end if;
			ds_horario_w		:= '';
			end;
		else
			begin
			ds_horario_w	:= ds_horario_w || substr(ds_prim_horario_w,i,1);
			end;
		end if;
		
		end;
	END LOOP;
	
	if (hr_inicial_w <> ds_hora_inicio_w) or
		((coalesce(hr_inicial_w::text, '') = '') and (ds_hora_inicio_w IS NOT NULL AND ds_hora_inicio_w::text <> '')) or
		((coalesce(ds_hora_inicio_w::text, '') = '') and (hr_inicial_w IS NOT NULL AND hr_inicial_w::text <> ''))then
		hr_inicial_w	:= ds_hora_inicio_w;
	end if;

	if (length(hr_inicial_w) = 2) then
		hr_inicial_w	:= hr_inicial_w || ':00';
	end if;

	ds_retorno_w	:= coalesce(hr_inicial_w, hr_prescricao_w);
	
	if (ds_retorno_w = '24:00') or (ds_retorno_w = '24') then
		ds_retorno_w	:= '00:00';
	end if;

	if (coalesce(ds_retorno_w::text, '') = '') and (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then
		ds_retorno_w	:= to_char(dt_primeiro_horario_w,'hh24:mi');
	end if;

else
	if (trunc(hr_prim_horario_w,'mi') < trunc(clock_timestamp(),'mi')) then
		ds_retorno_w := to_char(trunc(clock_timestamp() + (1/24),'hh24'),'hh24:mi');
	else
		ds_retorno_w := to_char(hr_prim_horario_w,'hh24:mi');
	end if;
end if;

RETURN ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_primeiro_horario_sae ( cd_intervalo_p text, nr_prescricao_p bigint) FROM PUBLIC;

