-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_resume_score_epicrisis ( NR_ATENDIMENTO_P ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%TYPE ) RETURNS text AS $body$
DECLARE

    CURSORESCALA    REFCURSOR;
    $if dbms_db_version.version=10 $then
        sqlescala varchar(32000);
    $else
        sqlescala text;
    $end

    NR_SEQUENCIA_W  bigint;
    IE_ESCALA_W     bigint;
    NM_TABELA_W     varchar(30);
    NM_ATTRIBUTE_W  varchar(30);
    dt_register_w  timestamp;
    NR_SEQ_ESCALA_W varchar(20);
    ds_result_w   varchar(200);
    ds_score_w   bigint;
    -- 
    DS_PARAM_ESCALA_W   varchar(1);
    IE_LAST_ESCALA_W    varchar(20) := 0;
    NM_LAST_TABELA_W     varchar(30);
    DS_LAST_ESCALA_W DIC_EXPRESSAO.DS_EXPRESSAO_BR%TYPE := 0;
    --
    NR_SEQ_LAST_REGISTER_W bigint:= NULL;
    DT_LAST_REGISTER_W    timestamp := null;
    NR_SEQ_FIRST_REGISTER_W bigint:= 0;
    IE_TEMPORARY_REGISTER varchar(1) := 'N';
    DS_LAST_RESUME_W     varchar(1000) := null;
    --
    DS_EXP_PONTUACAO_W  varchar(255) := null;
    DS_EXP_SCALES_TITLE_W varchar(255) := null;
    DS_EXP_DATE_W  varchar(255) := null;
    DS_EXP_RESULTADO_W  varchar(255) := null;

    --
    DS_RESUME_W     text;
    DS_DESCRIPTION_W     varchar(255);
    NR_COUNT_W      bigint:= 0;
    C_ESCALAS CURSOR FOR
        SELECT 
            ' SELECT                                   ' ||
            '    NR_SEQUENCIA,                         ' ||
            '''' || IE_ESCALA || '''   IE_ESCALA,      ' ||
            '''' || NM_TABELA || '''   NM_TABELA,      ' ||
            NM_ATRIBUTO_DATA  || '     DT_REGISTER,    ' ||
            '''' || 
            CASE WHEN a.nm_tabela in ('ESCALA_EIF','ESCALA_EIF_II') THEN '1'
                ELSE nm_atributo_inf END   || '''     NM_ATTRIBUTE,   ' ||
            CASE 
                WHEN a.NM_TABELA = 'ATEND_ESCALA_INDICE' THEN 'TO_NUMBER(NVL(IE_ESCALA,''' || IE_ESCALA || '''))'
                WHEN a.nm_tabela in ('ESCALA_EIF','ESCALA_EIF_II') THEN 'NR_SEQ_ESCALA' 
                ELSE TO_CHAR(IE_ESCALA) END  || ' NR_SEQ_ESCALA,' ||
            '    TO_CHAR(' || CASE 
                WHEN a.nm_tabela = 'ESCALA_EIF_II' THEN 'qt_pontos'
                WHEN IE_TIPO_ATRIBUTO = 'FUNCTION' OR (a.ds_function IS NOT NULL AND a.ds_function::text <> '') THEN a.ds_function
                ELSE a.nm_atributo_inf END  || ') DS_RESULT' ||
            ' FROM ' || NM_TABELA ||' a ' ||    
            ' WHERE                     ' ||
            '   DT_LIBERACAO IS NOT NULL AND ' ||
            '   DT_INATIVACAO IS NULL AND    ' ||
            CASE WHEN a.NM_TABELA = 'ATEND_ESCALA_INDICE' THEN 'IE_ESCALA = ''' || IE_ESCALA || ''' AND ' ELSE null END ||
            '   NR_ATENDIMENTO = '|| NR_ATENDIMENTO_P DS_QUERY,
            NM_TABELA

          FROM VICE_ESCALA A
          WHERE EXISTS (SELECT 1
                         FROM USER_TAB_COLUMNS
                        WHERE TABLE_NAME = A.NM_TABELA
                          AND COLUMN_NAME = 'NR_ATENDIMENTO')
           AND EXISTS (SELECT 1
                         FROM USER_TAB_COLUMNS
                        WHERE TABLE_NAME = A.NM_TABELA
                          AND COLUMN_NAME = 'NR_SEQUENCIA')
           AND EXISTS (SELECT 1
                         FROM USER_TAB_COLUMNS
                        WHERE TABLE_NAME = A.NM_TABELA
                          AND COLUMN_NAME = 'DT_LIBERACAO')
           AND EXISTS (SELECT 1
                         FROM USER_TAB_COLUMNS
                        WHERE TABLE_NAME = A.NM_TABELA
                          AND COLUMN_NAME = UPPER(NM_ATRIBUTO_DATA)
                          AND DATA_TYPE = 'DATE')     
           AND EXISTS (SELECT 1
                         FROM USER_TAB_COLUMNS
                        WHERE TABLE_NAME = A.NM_TABELA
                          AND COLUMN_NAME = 'DT_INATIVACAO')
           AND ((IE_TIPO_ATRIBUTO = 'FUNCTION' AND (a.ds_function IS NOT NULL AND a.ds_function::text <> '')) OR (a.ds_function IS NOT NULL AND a.ds_function::text <> '') OR 
                    EXISTS (SELECT 1
                         FROM USER_TAB_COLUMNS
                        WHERE TABLE_NAME = A.NM_TABELA
                          AND COLUMN_NAME = UPPER(a.nm_atributo_inf)))
           AND (
                DS_PARAM_ESCALA_W <> 'R' 
                OR NOT EXISTS (SELECT 1 FROM ESCALA_EXCECAO_EPICRISE x WHERE x.IE_ESCALA = a.IE_ESCALA)
           )
           AND EXISTS (SELECT 1 
                         FROM ESCALA_DOCUMENTACAO_PAIS b
                         INNER JOIN ESCALA_DOCUMENTACAO c ON
                            c.NR_SEQUENCIA = b.NR_SEQ_ESCALA
                        WHERE Obter_Nr_Seq_Locale(wheb_usuario_pck.get_nm_usuario()) = b.CD_PAIS 
                          AND b.IE_LIBERADO  = 'S' 
                          AND a.ie_escala = c.IE_ESCALA
            )
            GROUP BY 
                IE_ESCALA,NM_TABELA, NM_ATRIBUTO_DATA, IE_TIPO_ATRIBUTO, ds_function, nm_atributo_inf
            ORDER BY 
                IE_ESCALA,NM_TABELA;
    PROCEDURE INSERT_TEXT_REGISTER(NM_TABELA_W in text,NM_ATTRIBUTE_W in text, ds_result_w in text,NR_SEQUENCE_W in bigint , ie_temporary in text := 'N') AS
        DS_TEXT_W varchar(1000) := null;
        ds_result_score_flex_w varchar(255) := null;
        ds_pont_score_flex_w varchar(255) := null;

BEGIN
        SELECT 
            OBTER_DESC_EXPRESSAO(COALESCE(MAX(b.CD_EXP_LABEL),MAX(b.CD_EXP_LABEL_GRID)))
        INTO STRICT DS_DESCRIPTION_W
        FROM TABELA_VISAO a
        INNER JOIN TABELA_VISAO_ATRIBUTO b ON
            a.NR_SEQUENCIA = b.NR_SEQUENCIA
        WHERE
            a.NM_TABELA = NM_TABELA_W AND
            b.NM_ATRIBUTO = NM_ATTRIBUTE_W;

        IF (NM_TABELA_W IN ('ESCALA_EIF','ESCALA_EIF_II')) THEN
            
            IF (NM_TABELA_W = 'ESCALA_EIF') THEN
            
                SELECT 
                    obter_resultado_escala_eif(NR_SEQUENCE_W,'T'), substr(obter_resultado_escala_eif(NR_SEQUENCE_W,'D'),1,255) 
                INTO STRICT ds_pont_score_flex_w, ds_result_score_flex_w
;

            ELSIF (NM_TABELA_W = 'ESCALA_EIF_II') THEN
            
                ds_pont_score_flex_w := ds_result_w;
                SELECT
                    substr(obter_desc_resul_score_flex_2(ds_result_w,NR_SEQ_ESCALA),1,255) 
                INTO STRICT ds_result_score_flex_w
                FROM ESCALA_EIF_II a 
                WHERE NR_SEQUENCIA = NR_SEQUENCE_W;

            END IF;

            DS_TEXT_W := DS_TEXT_W || DS_EXP_PONTUACAO_W;
            DS_TEXT_W := DS_TEXT_W || ': ';
            DS_TEXT_W := DS_TEXT_W || ds_pont_score_flex_w;
            DS_TEXT_W := DS_TEXT_W || '<BR>';
            DS_TEXT_W := DS_TEXT_W || DS_EXP_RESULTADO_W;
            DS_TEXT_W := DS_TEXT_W || ': ';
            DS_TEXT_W := DS_TEXT_W || ds_result_score_flex_w;
            DS_TEXT_W := DS_TEXT_W || '<BR>';

        ELSE
            DS_TEXT_W := DS_TEXT_W || DS_DESCRIPTION_W;
            DS_TEXT_W := DS_TEXT_W || ': ';
            DS_TEXT_W := DS_TEXT_W || ds_result_w;
            DS_TEXT_W := DS_TEXT_W || '<BR>';
        END IF;
        IF (ie_temporary = 'N') THEN
            DS_RESUME_W := DS_RESUME_W || DS_TEXT_W;
        ELSE
            DS_LAST_RESUME_W := DS_LAST_RESUME_W || DS_TEXT_W;
        END IF;

    END;
BEGIN

    DS_PARAM_ESCALA_W := wheb_assist_pck.obterParametroFuncao('281','1693');
    IF (DS_PARAM_ESCALA_W <> 'N') THEN
    
        SELECT OBTER_DESC_EXPRESSAO(296046), OBTER_DESC_EXPRESSAO(297817), OBTER_DESC_EXPRESSAO(860842), OBTER_DESC_EXPRESSAO(314487)
        INTO STRICT DS_EXP_PONTUACAO_W, DS_EXP_RESULTADO_W, DS_EXP_DATE_W, DS_EXP_SCALES_TITLE_W
;
        
    
        FOR R_ESCALAS IN C_ESCALAS LOOP
            NR_COUNT_W := NR_COUNT_W + 1;

            IF NR_COUNT_W = 1 THEN
            SQLESCALA :=  'SELECT * FROM ( ' || R_ESCALAS.DS_QUERY;

            ELSE
            SQLESCALA := SQLESCALA||' UNION ALL '||R_ESCALAS.DS_QUERY;
            END IF;

        END LOOP;

        NR_COUNT_W := 0;
        IF (SQLESCALA IS NOT NULL AND SQLESCALA::text <> '') THEN
            SQLESCALA := SQLESCALA || ') group by NR_SEQUENCIA,IE_ESCALA,NM_TABELA, DT_REGISTER, NM_ATTRIBUTE,NR_SEQ_ESCALA, DS_RESULT ';
            SQLESCALA := SQLESCALA ||' ORDER BY NR_SEQ_ESCALA, IE_ESCALA, DT_REGISTER, NM_ATTRIBUTE desc, NR_SEQUENCIA';

            <<CURSOR_DINAMICO_ESCALAS>>
            OPEN CURSORESCALA FOR EXECUTE SQLESCALA;
            LOOP FETCH CURSORESCALA INTO NR_SEQUENCIA_W, IE_ESCALA_W, NM_TABELA_W, dt_register_w, NM_ATTRIBUTE_W, NR_SEQ_ESCALA_W, ds_result_w;
            EXIT WHEN NOT FOUND; /* apply on CURSORESCALA */

                IF (NR_COUNT_W = 0) THEN
                    /* - Title Score and Index - */

                    DS_RESUME_W := '<B>* ';
                    DS_RESUME_W := DS_RESUME_W || DS_EXP_SCALES_TITLE_W;
                    DS_RESUME_W := DS_RESUME_W ||'<BR><BR>';
                    DS_RESUME_W := DS_RESUME_W || '</B>';
                    NR_COUNT_W := 1;
                END IF;

                IF ((TRUNC(DT_LAST_REGISTER_W) <> TRUNC(dt_register_w) OR IE_LAST_ESCALA_W <> NR_SEQ_ESCALA_W or NM_LAST_TABELA_W <> NM_TABELA_W)
                    and (DS_LAST_RESUME_W IS NOT NULL AND DS_LAST_RESUME_W::text <> '')) THEN
                   DS_RESUME_W := DS_RESUME_W || DS_LAST_RESUME_W;
                END IF;

                IF (IE_LAST_ESCALA_W <> NR_SEQ_ESCALA_W or NM_LAST_TABELA_W <> NM_TABELA_W) THEN

                    IF (NM_TABELA_W = 'ESCALA_EIF') THEN
                    
                        SELECT
                            MAX(a.DS_ESCALA)
                        INTO STRICT DS_LAST_ESCALA_W
                        FROM EIF_ESCALA a
                        INNER JOIN ESCALA_EIF b ON
                            b.NR_SEQ_ESCALA = a.NR_SEQUENCIA
                        WHERE
                            b.NR_SEQUENCIA = NR_SEQUENCIA_W;

                    ELSIF (NM_TABELA_W = 'ESCALA_EIF_II') THEN
                    
                        SELECT
                            MAX(a.DS_ESCALA)
                        INTO STRICT DS_LAST_ESCALA_W
                        FROM EIF_ESCALA_II a
                        INNER JOIN ESCALA_EIF_II b ON
                            b.NR_SEQ_ESCALA = a.NR_SEQUENCIA
                        WHERE
                            b.NR_SEQUENCIA = NR_SEQUENCIA_W;

                    ELSIF (NM_TABELA_W = 'ATEND_ESCALA_INDICE') THEN
                    
                        SELECT 
                             OBTER_DESC_EXPRESSAO(a.cd_exp_caption) 
                        INTO STRICT DS_LAST_ESCALA_W 
                        FROM ESCALA_DOCUMENTACAO a 
                        WHERE 
                            a.IE_ESCALA = NR_SEQ_ESCALA_W;
                    ELSE

                        SELECT
                            OBTER_VALOR_DOMINIO(1799,IE_ESCALA_W)
                        INTO STRICT DS_LAST_ESCALA_W 
;

                    END IF;

                    DS_RESUME_W := DS_RESUME_W || '<BR>';
                    DS_RESUME_W := DS_RESUME_W || '<b>';
                    DS_RESUME_W := DS_RESUME_W || DS_LAST_ESCALA_W;
                    DS_RESUME_W := DS_RESUME_W || '</b>';
                    DS_RESUME_W := DS_RESUME_W || '<BR>';
                    IE_LAST_ESCALA_W := NR_SEQ_ESCALA_W;
                    NM_LAST_TABELA_W := NM_TABELA_W;
                    DT_LAST_REGISTER_W := null;
                END IF;
                IF (coalesce(DT_LAST_REGISTER_W::text, '') = '' or TRUNC(DT_LAST_REGISTER_W) <> TRUNC(dt_register_w)) THEN
                    DS_RESUME_W := DS_RESUME_W || '<BR>';
                    DS_RESUME_W := DS_RESUME_W || DS_EXP_DATE_W;
                    DS_RESUME_W := DS_RESUME_W || ': ';
                    DS_RESUME_W := DS_RESUME_W || TO_CHAR(dt_register_w,'dd/mm/yyyy hh24:mi:ss');
                    DS_RESUME_W := DS_RESUME_W || '<BR>';
                    DT_LAST_REGISTER_W := dt_register_w;
                    DS_LAST_RESUME_W := null;
                    NR_SEQ_FIRST_REGISTER_W := null;
                    IE_TEMPORARY_REGISTER := 'N';
                ELSE
                    IF (coalesce(NR_SEQ_LAST_REGISTER_W::text, '') = '' OR NR_SEQ_LAST_REGISTER_W <> NR_SEQUENCIA_W) THEN
                        DS_LAST_RESUME_W := '<BR>' || DS_EXP_DATE_W;
                        DS_LAST_RESUME_W := DS_LAST_RESUME_W || ': ';
                        DS_LAST_RESUME_W := DS_LAST_RESUME_W || TO_CHAR(dt_register_w,'dd/mm/yyyy hh24:mi:ss');
                        DS_LAST_RESUME_W := DS_LAST_RESUME_W || '<BR>';
                        IE_TEMPORARY_REGISTER := 'S';
                    END IF;
                    IF (IE_TEMPORARY_REGISTER = 'S') THEN
                        INSERT_TEXT_REGISTER(NM_TABELA_W, NM_ATTRIBUTE_W, ds_result_w,NR_SEQUENCIA_W,  'S');
                    END IF;
                END IF;
                IF (coalesce(NR_SEQ_FIRST_REGISTER_W::text, '') = '' OR NR_SEQ_FIRST_REGISTER_W = NR_SEQUENCIA_W) THEN

                    INSERT_TEXT_REGISTER(NM_TABELA_W, NM_ATTRIBUTE_W, ds_result_w, NR_SEQUENCIA_W);
                    NR_SEQ_FIRST_REGISTER_W := NR_SEQUENCIA_W;
                END IF;
                NR_SEQ_LAST_REGISTER_W := NR_SEQUENCIA_W;
            END LOOP CURSOR_DINAMICO_ESCALAS;
            CLOSE CURSORESCALA;
            IF (DS_LAST_RESUME_W IS NOT NULL AND DS_LAST_RESUME_W::text <> '') THEN
               DS_RESUME_W := DS_RESUME_W || DS_LAST_RESUME_W;
            END IF;
        END IF;
    END IF;
    RETURN DS_RESUME_W;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_resume_score_epicrisis ( NR_ATENDIMENTO_P ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%TYPE ) FROM PUBLIC;

