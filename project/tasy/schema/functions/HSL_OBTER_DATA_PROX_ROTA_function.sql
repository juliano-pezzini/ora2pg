-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hsl_obter_data_prox_rota ( nr_seq_plano_inspecao_p bigint) RETURNS timestamp AS $body$
DECLARE


ie_gerar_w			varchar(01) := 'N';
nr_seq_regra_w			bigint;
nr_seq_frequencia_w		bigint;
qt_dia_freq_w			smallint;
ie_dia_semana_w			varchar(15);
qt_dias_geracao_w			smallint := 0;
dt_ultima_rota_w			timestamp;
dt_prev_rota_w			timestamp := clock_timestamp();

ie_dia_nao_util_w			varchar(15);
ie_acao_feriado_w			varchar(15);
ie_data_acao_w			varchar(15);
qt_existe_w			bigint;
ie_converter_mes_w		varchar(1);


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	man_plano_insp_regra
where	nr_seq_plano_inspecao = nr_seq_plano_inspecao_p;

select	max(nr_sequencia)
into STRICT	nr_seq_regra_w
from	man_plano_insp_regra
where	coalesce(dt_inicial,clock_timestamp()) - coalesce(qt_dias_geracao,0) <= clock_timestamp()
and	coalesce((ie_dia_semana)::numeric ,PKG_DATE_UTILS.get_WeekDay(clock_timestamp())) = PKG_DATE_UTILS.get_WeekDay(clock_timestamp())
and	nr_seq_plano_inspecao = nr_seq_plano_inspecao_p;

if (qt_existe_w = 0) or (coalesce(nr_seq_regra_w,0) <> 0) then
	begin
	ie_gerar_w := 'S';

	if (coalesce(nr_seq_regra_w,0) <> 0) then
		begin
		select	max(ie_dia_semana),
			coalesce(max(qt_dias_geracao),0),
			max(nr_seq_frequencia),
			max(ie_dia_nao_util),
			max(ie_acao_feriado),
			coalesce(max(ie_data_acao),'C')
		into STRICT	ie_dia_semana_w,
			qt_dias_geracao_w,
			nr_seq_frequencia_w,
			ie_dia_nao_util_w,
			ie_acao_feriado_w,
			ie_data_acao_w
		from	man_plano_insp_regra
		where	nr_sequencia = nr_seq_regra_w;

		if (coalesce(nr_seq_frequencia_w,0) <> 0) then
			begin
			select	qt_dia,
					ie_converter_mes
			into STRICT	qt_dia_freq_w,
					ie_converter_mes_w
			from	man_freq_planej
			where	nr_sequencia = nr_seq_frequencia_w;

			select	max(dt_atualizacao_nrec)
			into STRICT	dt_ultima_rota_w
			from	man_rota_inspecao
			where	nr_seq_plano_inspecao = nr_seq_plano_inspecao_p;

			if (dt_ultima_rota_w IS NOT NULL AND dt_ultima_rota_w::text <> '') then
				dt_prev_rota_w := obter_data_prev_futura(dt_ultima_rota_w, qt_dia_freq_w, ie_converter_mes_w) - qt_dias_geracao_w;
			end if;

			end;
		elsif (coalesce(ie_dia_semana_w,'X') <> 'X') then

			if ((ie_dia_semana_w)::numeric ) <> PKG_DATE_UTILS.get_WeekDay(clock_timestamp()) then
				while((ie_dia_semana_w)::numeric ) <> PKG_DATE_UTILS.get_WeekDay(dt_prev_rota_w) loop
					begin
					dt_prev_rota_w := dt_prev_rota_w + 1;
					if (dt_prev_rota_w > pkg_date_utils.get_datetime(PKG_DATE_UTILS.END_OF(dt_prev_rota_w, 'MONTH', 0), dt_prev_rota_w)) then
						dt_prev_rota_w := PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_prev_rota_w,'month',0),1,0);
					end if;
					end;
				end loop;
			end if;

		end if;
		end;
	end if;

	end;
end if;

return	dt_prev_rota_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hsl_obter_data_prox_rota ( nr_seq_plano_inspecao_p bigint) FROM PUBLIC;

