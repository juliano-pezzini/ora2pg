-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_autorizacao_conv (nr_atendimento_p bigint default null, nr_seq_agenda_p bigint default null, nr_seq_agenda_consulta_p bigint default null, nr_seq_agenda_proc_p bigint default null, nr_seq_gestao_p bigint default null, nr_seq_paciente_setor_p bigint default null, nr_seq_paciente_p bigint default null, nr_seq_age_integ_p bigint default null, cd_convenio_p bigint default null, cd_estab_p bigint default null, ie_opcao_p text DEFAULT NULL) RETURNS varchar AS $body$
DECLARE

		 
		 
/* 
FUNCTION USADA PARA CASOS ONDE A SEQUENCIA DE AUTORIZAÇÃO AINDA NÃO ESTÁ GRAVADA. 
ENTÃO OBTEM-SE AS INFORMAÇÕES ATRAVÉS DOS SEUS VÍNCULOS 
*/
		 
		 
		 
		 
		 
		 
/* ie_opcao 
 
	E - Estabelecimento	- recebe parâmetro nr_sequencia da autorização_convenio 
	CC - Categoria do convênio	- recebe parâmetro nr_sequencia da autorização_convenio 
	CP - Código do plano 
	TA - Tipo atendimento 
	RMS - Regra máscara senha 
*/
 
cd_senha_w					varchar(20);
cd_autorizacao_w				varchar(20);
ds_retorno_w					varchar(100);
cd_estabelecimento_w				bigint;
dt_agenda_w					timestamp;
cd_categoria_conv_w				varchar(10) := null;
cd_usuario_convenio_w				varchar(30);
nr_prontuario_w					varchar(30);
cd_convenio_w					bigint;
cd_plano_w					varchar(10);
cd_procedimento_w				bigint;
ie_origem_proced_w				bigint;
hr_inicio_w					timestamp;
ie_tipo_atendimento_w				smallint;
nm_pessoa_fisica_w				varchar(100);
nr_telefone_agen_int_w				agenda_integrada.nr_telefone%type;
nr_seq_etapa_w					autorizacao_conv_etapa.nr_seq_etapa%type;

ds_masc_guia_senha_w			varchar(30);

BEGIN
 
if (ie_opcao_p = 'E') then 
	if (coalesce(nr_seq_agenda_p,0) > 0) then 
		select	b.cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	agenda b, 
			agenda_paciente a 
		where	a.cd_agenda	= b.cd_agenda 
		and	a.nr_sequencia	= nr_seq_agenda_p;
	elsif (coalesce(nr_atendimento_p,0) > 0) then 
		select	cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	atendimento_paciente 
		where	nr_atendimento	= nr_atendimento_p;
	elsif (coalesce(nr_seq_agenda_consulta_p, 0) > 0) then 
		select	cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	agenda b, 
			agenda_consulta a 
		where	a.cd_agenda	= b.cd_agenda 
		and	a.nr_sequencia	= nr_seq_agenda_consulta_p;
	elsif (coalesce(nr_seq_gestao_p,0) > 0) then 
		select	cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	gestao_vaga 
		where	nr_sequencia	= nr_seq_gestao_p;
	elsif (coalesce(nr_seq_paciente_setor_p,0) > 0) then 
		select	cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	paciente_setor 
		where	nr_seq_paciente = nr_seq_paciente_setor_p;
	end if;
	ds_retorno_w		:= cd_estabelecimento_w;
elsif (ie_opcao_p = 'CC') then 
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
		select	a.cd_categoria 
		into STRICT	cd_categoria_conv_w 
		from	atend_categoria_convenio a 
		where	a.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento) 
		and	a.nr_atendimento	= nr_atendimento_p;
	elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then 
		select	a.cd_categoria 
		into STRICT	cd_categoria_conv_w 
		from	agenda_paciente a 
		where	a.nr_sequencia	= nr_seq_agenda_p;
	elsif (nr_seq_gestao_p IS NOT NULL AND nr_seq_gestao_p::text <> '') then 
		select	a.cd_categoria 
		into STRICT	cd_categoria_conv_w 
		from	gestao_vaga a 
		where	a.nr_sequencia	= nr_seq_gestao_p;
	elsif (nr_seq_age_integ_p IS NOT NULL AND nr_seq_age_integ_p::text <> '') then 
		select	a.cd_categoria 
		into STRICT	cd_categoria_conv_w 
		from	agenda_integrada a 
		where	a.nr_sequencia = nr_seq_age_integ_p;
	elsif (nr_seq_paciente_setor_p IS NOT NULL AND nr_seq_paciente_setor_p::text <> '') then 
		select	max(cd_categoria) 
		into STRICT	cd_categoria_conv_w 
		from	paciente_setor_convenio 
		where	nr_seq_paciente = nr_seq_paciente_setor_p;
	end if;
	ds_retorno_w		:= cd_categoria_conv_w;
elsif (ie_opcao_p = 'TA') then 
 
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	 
		select	max(ie_tipo_atendimento) 
		into STRICT	ie_tipo_atendimento_w 
		from 	atendimento_paciente 
		where 	nr_atendimento = nr_atendimento_p;
		 
	elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then 
	 
		select	max(ie_tipo_atendimento) 
		into STRICT	ie_tipo_atendimento_w 
		from 	agenda_paciente 
		where 	nr_sequencia = nr_seq_agenda_p;
		 
	elsif (nr_seq_age_integ_p IS NOT NULL AND nr_seq_age_integ_p::text <> '') then 
	 
		select	max(ie_tipo_atendimento) 
		into STRICT	ie_tipo_atendimento_w 
		from 	agenda_integrada 
		where 	nr_sequencia = nr_seq_age_integ_p;
	elsif (nr_seq_agenda_consulta_p IS NOT NULL AND nr_seq_agenda_consulta_p::text <> '') then 
	 
		select	max(ie_tipo_atendimento) 
		into STRICT	ie_tipo_atendimento_w 
		from 	agenda_consulta 
		where 	nr_sequencia = nr_seq_agenda_consulta_p;
		 
	elsif (nr_seq_paciente_setor_p IS NOT NULL AND nr_seq_paciente_setor_p::text <> '') then 
	 
		select	max(ie_tipo_atendimento) 
		into STRICT	ie_tipo_atendimento_w 
		from 	paciente_setor_convenio 
		where 	nr_seq_paciente = nr_seq_paciente_setor_p;
		 
	end if;
	ds_retorno_w := ie_tipo_atendimento_w;
 
elsif (ie_opcao_p = 'RMS') then /* Regra máscara senha */
 
 
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	 
		select	substr(obter_mascara_senha(coalesce(cd_estab_p,a.cd_estabelecimento),coalesce(cd_convenio_p,b.cd_convenio), b.cd_categoria,a.ie_tipo_atendimento),1,30) 
		into STRICT	ds_masc_guia_senha_w 
		from 	atendimento_paciente a , 
			atend_categoria_convenio b 
		where 	a.nr_atendimento = nr_atendimento_p 
		and	a.nr_atendimento = b.nr_atendimento 
		and	b.nr_seq_interno = obter_atecaco_atendimento(a.nr_atendimento);
		 
	elsif (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then 
		select	substr(obter_mascara_senha(coalesce(cd_estab_p,b.cd_estabelecimento),coalesce(cd_convenio_p,a.cd_convenio), a.cd_categoria,a.ie_tipo_atendimento),1,30) 
		into STRICT	ds_masc_guia_senha_w 
		from	agenda_paciente a, 
			agenda b 
		where	a.cd_agenda = b.cd_agenda 
		and	a.nr_sequencia	= nr_seq_agenda_p;
	elsif (nr_seq_gestao_p IS NOT NULL AND nr_seq_gestao_p::text <> '') then 
		select	substr(obter_mascara_senha(coalesce(cd_estab_p,a.cd_estabelecimento),coalesce(cd_convenio_p,a.cd_convenio), a.cd_categoria,null),1,30) 
		into STRICT	ds_masc_guia_senha_w 
		from	gestao_vaga a 
		where	a.nr_sequencia	= nr_seq_gestao_p;
	elsif (nr_seq_age_integ_p IS NOT NULL AND nr_seq_age_integ_p::text <> '') then 
		select	substr(obter_mascara_senha(coalesce(cd_estab_p,a.cd_estabelecimento),coalesce(cd_convenio_p,a.cd_convenio), a.cd_categoria,a.ie_tipo_atendimento),1,30) 
		into STRICT	ds_masc_guia_senha_w 
		from	agenda_integrada a 
		where	a.nr_sequencia = nr_seq_age_integ_p;
	elsif (nr_seq_paciente_setor_p IS NOT NULL AND nr_seq_paciente_setor_p::text <> '') then 
		select	substr(obter_mascara_senha(coalesce(cd_estab_p,b.cd_estabelecimento),coalesce(cd_convenio_p,a.cd_convenio), a.cd_categoria,a.ie_tipo_atendimento),1,30) 
		into STRICT	ds_masc_guia_senha_w 
		from	paciente_setor_convenio a, 
			paciente_setor b 
		where	a.nr_seq_paciente = nr_seq_paciente_setor_p 
		and	a.nr_seq_paciente = b.nr_seq_paciente;
		 
	end if;
	ds_retorno_w := ds_masc_guia_senha_w;
end if;
 
return	ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_autorizacao_conv (nr_atendimento_p bigint default null, nr_seq_agenda_p bigint default null, nr_seq_agenda_consulta_p bigint default null, nr_seq_agenda_proc_p bigint default null, nr_seq_gestao_p bigint default null, nr_seq_paciente_setor_p bigint default null, nr_seq_paciente_p bigint default null, nr_seq_age_integ_p bigint default null, cd_convenio_p bigint default null, cd_estab_p bigint default null, ie_opcao_p text DEFAULT NULL) FROM PUBLIC;

