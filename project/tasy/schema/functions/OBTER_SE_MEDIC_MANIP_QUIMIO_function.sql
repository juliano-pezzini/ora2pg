-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_se_medic_manip_quimio as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_se_medic_manip_quimio (nr_seq_ordem_p bigint) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_se_medic_manip_quimio_atx ( ' || quote_nullable(nr_seq_ordem_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_se_medic_manip_quimio_atx (nr_seq_ordem_p bigint) RETURNS varchar AS $body$
DECLARE


ie_medic_manip_w	varchar(1) := 'N';
qt_dose_w		double precision;
qt_dose_ww		double precision;
cd_material_w		integer;
cd_material_ww		integer;
ie_possui_medic_w	varchar(1);
cd_unidade_medida_w 	varchar(5);
cd_unidade_medida_real_w varchar(30);
nr_seq_ficha_tecnica_w	bigint;
nr_seq_item_prescr_w	bigint;
qt_dispensados_w	bigint;
ie_existe_w		varchar(1);
nr_seq_prescricao_w 	bigint;
nr_prescricao_w			bigint;
ie_tipo_manipulacao_w	varchar(1);
c01 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_dose,
		a.cd_unidade_medida ,
		nr_seq_ficha_tecnica,
		nr_sequencia
	from 	material b,
		can_ordem_item_prescr a
	where 	b.cd_material = a.cd_material
	and 	nr_seq_ordem = nr_seq_ordem_p;

c02 CURSOR FOR
	SELECT 	b.nr_seq_ficha_tecnica,
		b.cd_material
	from 	material b,
		w_preparo_quimio_lote c
	where 	b.cd_material = c.cd_material
	and 	nr_seq_ordem = nr_seq_ordem_p
	and (substr(obter_tipo_material(c.cd_material,'C'),1,1) <> '1');

C03 CURSOR FOR
	SELECT 		d.nr_seq_prescricao,
				b.nr_prescricao
	from		can_ordem_item_prescr d,
				can_ordem_prod b
	where 		d.nr_seq_ordem = b.nr_sequencia
	and			b.nr_sequencia = nr_seq_ordem_p
	and			ie_tipo_manipulacao_w = 'T';
BEGIN

ie_medic_manip_w := 'N';
ie_tipo_manipulacao_w := Obter_Param_Usuario(3130, 218, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_manipulacao_w);

open C01;
loop
fetch C01 into
	cd_material_w,
	qt_dose_w,
	cd_unidade_medida_w,
	nr_seq_ficha_tecnica_w,
	nr_seq_item_prescr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	max(a.cd_Material),
		sum(a.qt_dose_real),
		max(a.cd_unidade_medida_real)
	into STRICT	cd_material_ww,
		qt_dose_ww,
		cd_unidade_medida_real_w
	from 	material b,
		can_ordem_prod_mat a
	where	b.cd_material  = a.cd_material
	and	nr_seq_ordem =  nr_seq_ordem_p
	and 	a.nr_seq_item_prescr = nr_seq_item_prescr_w
	and 	((a.cd_material  = cd_material_w) or (b.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w));

	select	coalesce(max('N'),'S')
	into STRICT	ie_possui_medic_w
	from 	material b,
		can_ordem_prod_mat a
	where	b.cd_material  = a.cd_material
	and 	a.nr_seq_ordem =  nr_seq_ordem_p
	and 	((a.cd_material  = cd_material_w) or (b.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w));

	if (coalesce(ie_possui_medic_w::text, '') = '') or (ie_possui_medic_w = 'S') then
		delete from can_ordem_prod_mat where nr_seq_ordem = nr_seq_ordem_p;
		commit;
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(194958);
		ie_medic_manip_w := 'N';
	end if;

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_ficha_tecnica_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	coalesce(max('S'),'N')
	into STRICT 	ie_existe_w
	from 	material c,
		prescr_material a
	where	a.cd_material = c.cd_material
	and 	a.nr_prescricao = (SELECT 	max(b.nr_prescricao)
				   from		can_ordem_item_prescr d,
						can_ordem_prod b
				   where 	d.nr_seq_ordem = b.nr_sequencia
				   and		b.nr_sequencia = nr_seq_ordem_p
				   and		a.nr_sequencia = d.nr_seq_prescricao)
	and 	((a.cd_material  = cd_material_w) or (c.nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w));

	if (ie_existe_w = 'N') then
		delete from can_ordem_prod_mat where nr_seq_ordem = nr_seq_ordem_p;
		commit;
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(194957);
	end if;
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_prescricao_w,
	nr_prescricao_w	;
EXIT WHEN NOT FOUND; /* apply on C03 */

	begin
	select	count(1)
	into STRICT	qt_dispensados_w
	from 	material b,
			prescr_material a
	where	a.cd_material = b.cd_material
	and 	b.ie_mistura = 'S'
	and		a.nr_seq_kit = nr_seq_prescricao_w
	and 	a.nr_prescricao = nr_prescricao_w
	and 	not exists (	SELECT 	1
							from 	w_preparo_quimio_lote c
							where 	c.nr_seq_ordem = nr_seq_ordem_p
							and  	c.cd_material = a.cd_material);

	if (coalesce(qt_dispensados_w,0) = 0) then
		select	count(1)
		into STRICT	qt_dispensados_w
		from 	material b,
				prescr_material a
		where	a.cd_material = b.cd_material
		and 	b.ie_mistura = 'S'
		and		a.nr_seq_mat_disp = nr_seq_prescricao_w
		and 	nr_prescricao_original = nr_prescricao_w
		and 	not exists (	SELECT 	1
								from 	w_preparo_quimio_lote c
								where 	c.nr_seq_ordem = nr_seq_ordem_p
								and  	c.cd_material = a.cd_material);
	end if;

	if (coalesce(qt_dispensados_w,0) > 0) then
		delete from can_ordem_prod_mat where nr_seq_ordem = nr_seq_ordem_p;
		commit;
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(194956);
	end if;
	end;
end loop;
close c03;

return	ie_medic_manip_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION obter_se_medic_manip_quimio (nr_seq_ordem_p bigint) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_se_medic_manip_quimio_atx (nr_seq_ordem_p bigint) FROM PUBLIC;

