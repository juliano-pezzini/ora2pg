-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION gerar_url_pacs ( nr_seq_proc_p bigint, nr_acesso_dicom_p text, nr_prescricao_p bigint, nr_seq_prescricao_p bigint, cd_pessoa_fisica_p bigint, nr_prontuario_p bigint, cd_estabelecimento_p bigint, nr_ultima_pasta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ds_url_pacs_w			varchar(4000);
cd_tipo_procedimento_w		bigint;
ds_caminho_result_w		varchar(4000);
nm_usuario_integr_w		varchar(4000);
ds_senha_usuario_integr_w	varchar(4000);
ds_servico_w			varchar(4000);				
nm_usuario_pixeon_w		varchar(4000);
ds_senha_pixeon_w		varchar(4000);
ds_diretorio_pacs_w		varchar(4000);
ds_url_ep12_w			varchar(4000);
NR_CRM_w			varchar(30);
UF_CRM_w			varchar(30);
ds_senha_laudo_w		varchar(30);
qt_reg_w			bigint;
nr_seq_agenda_w			prescr_procedimento.nr_seq_agenda%type;
ie_sexo_w			pessoa_fisica.ie_sexo%type;
nr_identidade_w			pessoa_fisica.nr_identidade%type;



	function replaceRegExp(	ds_url_p 	text,
				nm_macro_p	text, 
				vl_macro_p	text) 
				return text is
	ds_retorno_w	varchar(4000);
	nm_macro_w	varchar(4000);
	
BEGIN
	
	
	nm_macro_w	:= substr(nm_macro_p,1,length(nm_macro_p)-1);
	
	nm_macro_w	:= '\'||nm_macro_w||'\'||chr(36);
	
	
	ds_retorno_w	:= REGEXP_replace(ds_url_p, nm_macro_w||'(.*?)',vl_macro_p, 1, 0, 'i');
	null;
	return ds_retorno_w;
	end;


begin

select	max(ds_url_pacs),
	max(ds_diretorio_pacs)
into STRICT	ds_url_pacs_w,
	ds_diretorio_pacs_w
from	PARAMETRO_MEDICO
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ds_url_pacs_w IS NOT NULL AND ds_url_pacs_w::text <> '') then

	select	max(ie_sexo),
		max(nr_identidade)
	into STRICT	ie_sexo_w,
		nr_identidade_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	
	
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_acesso_dicom$',nr_acesso_dicom_p);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$esp_acesso_dicom$',somente_numero(nr_acesso_dicom_p));
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_prontuario$',nr_prontuario_p);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nm_usuario$',nm_usuario_p);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_atendimento$',obter_atendimento_dicom(nr_acesso_dicom_p));
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_prescricao$',nr_prescricao_p);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$cd_pessoa_fisica$',cd_pessoa_fisica_p);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$cd_tipo_procedimento$',cd_tipo_procedimento_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$cd_estabelecimento$',cd_estabelecimento_p);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ie_sexo$',ie_sexo_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_identidade$',nr_identidade_w);
	
	
	
	
	select	count(*)
	into STRICT	qt_reg_w
	from	empresa_integr_dados 
	where	nr_seq_empresa_integr = 4;
	
	if (qt_reg_w	= 0) then
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$cd_pessoa_fisica$',cd_pessoa_fisica_p);
	else
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$cd_pessoa_fisica$',obter_codigo_pessoa_isite(cd_pessoa_fisica_p));
	
	end if;
	
	
	
	if (nr_ultima_pasta_p	= 43925) then
	
		select	max(cd_tipo_procedimento)
		into STRICT	cd_tipo_procedimento_w
		from	procedimento_paciente a,
			procedimento b
		where	a.cd_procedimento = b.cd_procedimento
		and	a.ie_origem_proced = b.ie_origem_proced
		and	a.nr_sequencia = nr_seq_proc_p;
	else
		select	max(cd_tipo_procedimento)
		into STRICT	cd_tipo_procedimento_w
		from	procedimento b
		where	b.cd_procedimento = cd_procedimento_p
		and	b.ie_origem_proced = ie_origem_proced_p;
		
	end if;
	
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$cd_tipo_procedimento$',cd_tipo_procedimento_w);
	
	SELECT * FROM pep_ver_imagens_js(	nm_usuario_p, nr_prescricao_p, nr_seq_prescricao_p, ds_caminho_result_w, nm_usuario_integr_w, ds_senha_usuario_integr_w, ds_servico_w, cd_tipo_procedimento_w, nm_usuario_pixeon_w, ds_senha_pixeon_w) INTO STRICT ds_caminho_result_w, nm_usuario_integr_w, ds_senha_usuario_integr_w, ds_servico_w, cd_tipo_procedimento_w, nm_usuario_pixeon_w, ds_senha_pixeon_w;
				
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_senha_pacs$',ds_senha_pixeon_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_usuario_pacs$',nm_usuario_pixeon_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_organizacao$',ds_servico_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_senha_isite$',ds_senha_usuario_integr_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nm_usuario_isite$',nm_usuario_integr_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_endereco_isite$',ds_caminho_result_w);
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_diretorio_pacs$',ds_diretorio_pacs_w);
	
	select 	max(ds_url_ep12)
	into STRICT	ds_url_ep12_w 
	from 	parametro_cdi;
	
	ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_diretorio_ep12$',ds_url_ep12_w);
	
	
	if (obter_se_usuario_medico(nm_usuario_p)	= 'S') then
	
		select	max(substr(obter_crm_medico(a.cd_pessoa_fisica), 1, 255)),
			max(substr(obter_uf_crm_medico(a.cd_pessoa_fisica), 1, 255)),
			max(b.ds_senha_laudo)
		into STRICT	NR_CRM_w,
			UF_CRM_w,
			ds_senha_laudo_w
		from	medico a,
			usuario b
		where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and	b.nm_usuario	= nm_usuario_p;
	
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_crm$',NR_CRM_w);
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$uf_crm$',UF_CRM_w);
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_senha_laudo_medico$',ds_senha_laudo_w);
		
	else

		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_crm$','X');
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$uf_crm$','X');
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$ds_senha_laudo_medico$','X');
	end if;
	
	if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_prescricao_p IS NOT NULL AND nr_seq_prescricao_p::text <> '') then
		begin
		select	max(nr_seq_agenda)
		into STRICT	nr_seq_agenda_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_prescricao_p;
		
		ds_url_pacs_w	:= replaceRegExp(ds_url_pacs_w,'$nr_seq_agenda$',nr_seq_agenda_w);
		end;
	end if;
end if;

return ds_url_pacs_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION gerar_url_pacs ( nr_seq_proc_p bigint, nr_acesso_dicom_p text, nr_prescricao_p bigint, nr_seq_prescricao_p bigint, cd_pessoa_fisica_p bigint, nr_prontuario_p bigint, cd_estabelecimento_p bigint, nr_ultima_pasta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nm_usuario_p text) FROM PUBLIC;

