-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_disp_equip_agenda_cirur (nr_seq_agenda_p bigint, nr_seq_classif_equip_p bigint, nr_minuto_duracao_p bigint) RETURNS varchar AS $body$
DECLARE


ie_disponivel_w			varchar(01) := 'S';
dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_equipamento_w		bigint;
qt_equip_agenda_w		bigint;
qt_tempo_esterilizacao_w	bigint := 0;
qt_min_fim_cirur_w		bigint;


BEGIN

select	coalesce(max(qt_tempo_esterelizacao),0),
	coalesce(max(qt_min_fim_cirur),0)
into STRICT	qt_tempo_esterilizacao_w,
	qt_min_fim_cirur_w
from	classif_equipamento
where	nr_sequencia = nr_seq_classif_equip_p;


select	coalesce(sum(qt_equipamento), 1)
into STRICT	qt_equipamento_w
from	equipamento
where	cd_classificacao	= nr_seq_classif_equip_p
and	ie_situacao	= 'A';


if (qt_min_fim_cirur_w = 0) then
	select	hr_inicio,
		hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440)
	into STRICT	dt_inicial_w,
		dt_final_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	select	count(*)
	into STRICT	qt_equip_agenda_w
	from	agenda_pac_equip a,
		agenda_paciente b
	where	b.nr_sequencia	= a.nr_seq_agenda
	and	((b.hr_inicio between dt_inicial_w and dt_final_w) or
		(hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) between dt_inicial_w and dt_final_w) or
		((hr_inicio < dt_inicial_w) and (hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) > dt_final_w)))
	and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
	and	ie_status_agenda <> 'C'
	and	ie_origem_inf = 'I';
else
	select	hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (qt_min_fim_cirur_w/1440),
		hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400)
	into STRICT	dt_inicial_w,
		dt_final_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_p;

	select	count(*)
	into STRICT	qt_equip_agenda_w
	from	agenda_pac_equip a,
		agenda_paciente b
	where	b.nr_sequencia	= a.nr_seq_agenda
	and	(((hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (qt_min_fim_cirur_w/1440)) between dt_inicial_w and dt_final_w) or
		(hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		(((hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (qt_min_fim_cirur_w/1440)) < dt_inicial_w) and (hr_inicio + ((coalesce(nr_minuto_duracao_p, nr_minuto_duracao) + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))
	and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
	and	ie_status_agenda <> 'C'
	and	ie_origem_inf = 'I';
end if;

if (coalesce(nr_minuto_duracao_p::text, '') = '') then
	if (qt_equipamento_w >= qt_equip_agenda_w) then
  		ie_disponivel_w := 'S';
 	else
		ie_disponivel_w := 'N';
	end if;
else
	if (qt_equipamento_w > qt_equip_agenda_w) then
		ie_disponivel_w := 'S';
	else
		ie_disponivel_w := 'N';
	end if;
end if;

return	ie_disponivel_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_disp_equip_agenda_cirur (nr_seq_agenda_p bigint, nr_seq_classif_equip_p bigint, nr_minuto_duracao_p bigint) FROM PUBLIC;

