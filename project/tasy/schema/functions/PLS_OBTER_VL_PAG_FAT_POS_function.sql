-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_vl_pag_fat_pos ( nr_seq_pos_contab_p pls_conta_pos_estab_contab.nr_sequencia%type, ie_opcao_p text, nr_seq_conta_rec_p pls_conta_pos_estabelecido.nr_seq_conta_rec%type default null) RETURNS bigint AS $body$
DECLARE


--	Function utilizada para contabiliza¿¿o da diferen¿a entre os registros de pagamento e os registros de faturamento

--	'F' - Valor faturado do item (sum da PLS_CONTA_POS_ESTABELECIDO)

--	'S' - Valor faturado do item excluindo-se a taxa de administra¿ao

--	'P' - Valor pago do item (sum da PLS_CONTA_MEDICA_RESUMO)

--	'D' - Diferen¿a entre os dois acima (Faturado menos pago)

--	'T''- Diferen¿a entre os dois casos mencionados excluindo-se a taxa de interc¿mbio do valor faturado
vl_faturado_w			pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_liberado_w			pls_conta_medica_resumo.vl_liberado%type;
vl_retorno_w			pls_conta_proc.vl_liberado%type;
ie_tipo_conta_w			pls_conta.ie_tipo_conta%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_prestador_pgto_w		pls_conta_medica_resumo.nr_seq_prestador_pgto%type;
nr_seq_conta_rec_w		pls_conta_pos_estabelecido.nr_seq_conta_rec%type;


BEGIN
select	max(nr_seq_conta),
	max(nr_seq_conta_proc),
	max(nr_seq_conta_mat),
	max(nr_seq_prestador_pgto)
into STRICT	nr_seq_conta_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_prestador_pgto_w
from	pls_conta_pos_estab_contab
where	nr_sequencia = nr_seq_pos_contab_p;

nr_seq_conta_rec_w := nr_seq_conta_rec_p;

if (ie_opcao_p	 = 'F') then
	select	CASE WHEN sum(vl_administracao)=0 THEN  sum(vl_custo_operacional)  ELSE sum(vl_provisao) END
	into STRICT	vl_retorno_w
	from	pls_conta_pos_estab_contab
	where	nr_sequencia = nr_seq_pos_contab_p
	and	vl_provisao > 0;

elsif (ie_opcao_p = 'S') then
	select	CASE WHEN sum(b.vl_administracao)=0 THEN  sum(b.vl_custo_operacional)  ELSE (sum(b.vl_provisao) - sum(b.vl_administracao)) END
	into STRICT	vl_retorno_w
	from	pls_conta_pos_estab_contab	b
	where	b.nr_sequencia	= nr_seq_pos_contab_p
	and	b.vl_provisao > 0;

elsif (ie_opcao_p = 'P') then
	if (coalesce(nr_seq_conta_rec_w::text, '') = '') then
		select	max(a.nr_seq_conta_rec)
		into STRICT	nr_seq_conta_rec_w
		from	pls_conta_pos_estab_contab	b,
			pls_conta_pos_estabelecido	a
		where	a.nr_sequencia	= b.nr_seq_conta_pos
		and	b.nr_sequencia	= nr_seq_pos_contab_p
		and	b.vl_provisao > 0;
	end if;

	if ( coalesce(nr_seq_conta_rec_w, 0) <> 0) then
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
			select	coalesce(sum(coalesce(b.vl_liberado, 0)), 0)
			into STRICT	vl_retorno_w
			from	pls_conta_rec_resumo_item	b,
				pls_rec_glosa_proc		a
			where	a.nr_sequencia			= b.nr_seq_proc_rec
			and	a.nr_seq_conta_rec		= nr_seq_conta_rec_w
			and	a.nr_seq_conta_proc		= nr_seq_conta_proc_w;

		elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
			select	coalesce(sum(coalesce(b.vl_liberado, 0)), 0)
			into STRICT	vl_retorno_w
			from	pls_conta_rec_resumo_item	b,
				pls_rec_glosa_mat		a
			where	a.nr_sequencia			= b.nr_seq_mat_rec
			and	a.nr_seq_conta_rec		= nr_seq_conta_rec_w
			and	a.nr_seq_conta_mat		= nr_seq_conta_mat_w;
		end if;
		
	else
	
		select 	max(ie_tipo_conta)
		into STRICT	ie_tipo_conta_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_w;
	
		if ( ie_tipo_conta_w = 'I') then
			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				select	sum(vl_liberado)
				into STRICT	vl_retorno_w
				from	pls_conta_proc
				where	nr_sequencia = nr_seq_conta_proc_w;

			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				select 	sum(vl_liberado)
				into STRICT	vl_retorno_w
				from	pls_conta_mat
				where	nr_sequencia = nr_seq_conta_mat_w;
			end if;
		else
			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				select	sum(vl_liberado)
				into STRICT	vl_retorno_w
				from	pls_conta_medica_resumo
				where	nr_seq_conta_proc	= nr_seq_conta_proc_w
				and	nr_seq_conta		= nr_seq_conta_w
				and	ie_situacao		= 'A'
				and	ie_tipo_item		!= 'I'
				and	((nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w) or (coalesce(nr_seq_prestador_pgto_w::text, '') = ''));

			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				select	sum(vl_liberado)
				into STRICT	vl_retorno_w
				from	pls_conta_medica_resumo
				where	nr_seq_conta_mat	= nr_seq_conta_mat_w
				and	nr_seq_conta		= nr_seq_conta_w
				and	ie_situacao		= 'A'
				and	ie_tipo_item		!= 'I'
				and	((nr_seq_prestador_pgto	= nr_seq_prestador_pgto_w) or (coalesce(nr_seq_prestador_pgto_w::text, '') = ''));
			end if;
		end if;
	end if;

elsif (ie_opcao_p in ('D','T')) then
	if (ie_opcao_p = 'D') then
		vl_faturado_w	:= coalesce(pls_obter_vl_pag_fat_pos(nr_seq_pos_contab_p ,'F'), 0);

	elsif (ie_opcao_p = 'T') then
		vl_faturado_w	:= coalesce(pls_obter_vl_pag_fat_pos(nr_seq_pos_contab_p ,'S'), 0);
	end if;

	vl_liberado_w	:= coalesce(pls_obter_vl_pag_fat_pos(nr_seq_pos_contab_p ,'P', nr_seq_conta_rec_p), 0);

	vl_retorno_w	:= vl_faturado_w - vl_liberado_w;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_vl_pag_fat_pos ( nr_seq_pos_contab_p pls_conta_pos_estab_contab.nr_sequencia%type, ie_opcao_p text, nr_seq_conta_rec_p pls_conta_pos_estabelecido.nr_seq_conta_rec%type default null) FROM PUBLIC;

