-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_proced_vinculados_laudo ( nr_prescricao_p bigint, nr_seq_proc_p bigint, ie_vincular_tudo_p text, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE





cd_setor_atendimento_w		integer	:= 0;
nr_laudo_proc_w			bigint	:= 0;
ds_retorno_w			varchar(4000);
nr_sequencia_w			bigint	:= 0;
nr_seq_prescricao_w		integer	:= 0;
nr_seq_interno_w		bigint;
nr_seq_interno_princ_w		bigint;
ds_arquivo_w			varchar(80);
ie_vincula_tipo_proced_w	varchar(10);
cd_tipo_procedimento_w		smallint;

nr_seq_regra_vinc_w		bigint;

ie_gerar_padrao_amostra_w	varchar(1) := 'N';
nr_seq_lab_w			varchar(20);


c01 CURSOR FOR
	SELECT	a.nr_seq_interno
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica p,
		procedimento c
	where	p.nr_prescricao	= nr_prescricao_p
	and	p.nr_prescricao	= a.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.cd_procedimento = c.cD_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	and (a.nr_sequencia	= b.nr_sequencia_prescricao OR coalesce(b.nr_sequencia_prescricao::text, '') = '')
	and	b.cd_setor_atendimento = cd_setor_atendimento_w
	and	b.nr_sequencia <> nr_seq_proc_p
	and (coalesce(b.nr_laudo::text, '') = '' or (ie_vincula_tipo_proced_w = 'S' and c.cd_tipo_procedimento = cd_tipo_procedimento_w ));


c02 CURSOR FOR
	SELECT	/*+ ALL_ROWS*/		a.nr_seq_interno
	from	procedimento_paciente b,
		prescr_proc_ditado c,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	a.nr_seq_interno= c.nr_seq_prescr_proc
	and	c.ds_arquivo	= ds_arquivo_w
	and	b.nr_sequencia <> nr_seq_proc_p
	and	b.cd_setor_atendimento = cd_setor_atendimento_w;

c03 CURSOR FOR
	SELECT	/*+ ALL_ROWS*/		a.nr_seq_interno
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	b.nr_sequencia <> nr_seq_proc_p
	and	a.nr_seq_proc_princ = nr_seq_interno_princ_w;

C04 CURSOR FOR
	SELECT	a.nr_sequencia
	from	regra_vinculo_laudo a,
		procedimento_paciente c
	where 	a.cd_procedimento = c.cd_procedimento
	and 	a.ie_origem_proced = c.ie_origem_proced
	and	c.nr_sequencia	 = nr_seq_proc_p
	
union

	SELECT	distinct
		b.nr_seq_regra_vinculo_laudo
	from	regra_vinculo_laudo_proc b,
		procedimento_paciente c
	where	b.cd_procedimento = c.cd_procedimento
	and 	b.ie_origem_proced = c.ie_origem_proced
	and	c.nr_sequencia	= nr_seq_proc_p
	order 	by 1;


C05 CURSOR FOR
	SELECT	b.nr_seq_interno
	from	regra_vinculo_laudo_proc a,
		prescr_procedimento b,
		procedimento_paciente c
	where	c.cd_procedimento = a.cd_procedimento
	and	c.ie_origem_proced = a.ie_origem_proced
	and	coalesce(c.nr_laudo::text, '') = ''
	and	coalesce(c.DT_VINC_PROCED_ADIC::text, '') = ''
	and	c.nr_sequencia <> nr_seq_proc_p
	and	a.nr_seq_regra_vinculo_laudo = nr_seq_regra_vinc_w
	and	c.nr_prescricao = nr_prescricao_p
	and	b.nr_prescricao = c.nr_prescricao
	and	b.nr_sequencia = c.nr_sequencia_prescricao
	
union

	SELECT	b.nr_seq_interno
	from	regra_vinculo_laudo a,
		prescr_procedimento b,
		procedimento_paciente c
	where	c.cd_procedimento = a.cd_procedimento
	and	c.ie_origem_proced = a.ie_origem_proced
	and	coalesce(c.nr_laudo::text, '') = ''
	and	c.nr_sequencia <> nr_seq_proc_p
	and	coalesce(c.DT_VINC_PROCED_ADIC::text, '') = ''
	and	a.nr_sequencia = nr_seq_regra_vinc_w
	and	c.nr_prescricao = nr_prescricao_p
	and	b.nr_prescricao = c.nr_prescricao
	and	b.nr_sequencia = c.nr_sequencia_prescricao
	and	exists ( select  1
			from 	  regra_vinculo_laudo_proc b,
				  procedimento_paciente d
			where	  a.nr_sequencia = b.nr_seq_regra_vinculo_laudo
			and	  b.cd_procedimento = d.cd_procedimento
			and	  b.ie_origem_proced = d.ie_origem_proced
			and	  coalesce(c.nr_laudo::text, '') = ''
			and	  c.nr_prescricao = d.nr_prescricao
		      );


C06 CURSOR FOR
	SELECT	a.nr_seq_interno
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_p
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	b.nr_sequencia	<> nr_seq_proc_p
	and	a.nr_seq_lab	= nr_seq_lab_w
	and	coalesce(b.nr_laudo::text, '') = '';


BEGIN
ie_vincula_tipo_proced_w	:= coalesce(Obter_Valor_Param_Usuario(28, 222, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
nr_seq_interno_w := 0;

select	coalesce(max(ie_gerar_padrao_amostra),'N')
into STRICT	ie_gerar_padrao_amostra_w
from	lab_parametro;

if (nr_seq_proc_p > 0) then

	select	coalesce(max(a.nr_seq_interno),0),
		coalesce(max(a.nr_sequencia),0),
		coalesce(max(b.cd_setor_atendimento),0),
		coalesce(max(c.cd_tipo_procedimento),0),
		max(a.nr_seq_lab)
	into STRICT	nr_seq_interno_princ_w,
		nr_seq_prescricao_w,
		cd_setor_atendimento_w,
		cd_tipo_procedimento_w,
		nr_seq_lab_w
	from	prescr_procedimento a,
		procedimento_paciente b,
		procedimento c
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	a.cd_procedimento = c.cd_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	and	b.nr_sequencia 	= nr_seq_proc_p;

	ds_retorno_w := ds_retorno_w || nr_seq_interno_princ_w || ', ';

	begin
	select	b.ds_arquivo
	into STRICT	ds_arquivo_w
	from	prescr_proc_ditado b,
		prescr_procedimento a
	where	a.nr_prescricao	= nr_prescricao_p
	and	a.nr_sequencia	= nr_seq_prescricao_w
	and	a.nr_seq_interno= b.nr_seq_prescr_proc;
	exception
		when others then
			ds_arquivo_w	:= null;
	end;
	nr_seq_interno_w := 0;

	open C02;
	loop
	fetch C02 into
		nr_seq_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_retorno_w := ds_retorno_w || nr_seq_interno_w || ', ';
		end;
	end loop;
	close C02;


	nr_seq_interno_w := 0;
	open C03;
	loop
	fetch C03 into
		nr_seq_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ds_retorno_w := ds_retorno_w || nr_seq_interno_w || ', ';
		end;
	end loop;
	close C03;


	if (ie_vincular_tudo_p = 'S') then

		open C01;
		loop
		fetch C01 into
			nr_seq_interno_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ds_retorno_w := ds_retorno_w || nr_seq_interno_w || ', ';
			end;
		end loop;
		close C01;

	end if;

	open C04;
	loop
	fetch C04 into
		nr_seq_regra_vinc_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		open C05;
		loop
		fetch C05 into
			nr_seq_interno_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			ds_retorno_w := ds_retorno_w || nr_seq_interno_w || ', ';
			end;
		end loop;
		close C05;
		end;
	end loop;
	close C04;


	if (ie_gerar_padrao_amostra_w = 'S') and (nr_seq_lab_w IS NOT NULL AND nr_seq_lab_w::text <> '') then

		open C06;
		loop
		fetch C06 into
			nr_seq_interno_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			ds_retorno_w := ds_retorno_w || nr_seq_interno_w || ', ';
			end;
		end loop;
		close C06;


	end if;

	ds_retorno_w := substr(ds_retorno_w,1,length(ds_retorno_w) -2);

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_proced_vinculados_laudo ( nr_prescricao_p bigint, nr_seq_proc_p bigint, ie_vincular_tudo_p text, nm_usuario_p text) FROM PUBLIC;

