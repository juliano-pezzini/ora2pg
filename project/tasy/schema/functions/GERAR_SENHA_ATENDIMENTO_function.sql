-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION gerar_senha_atendimento (ie_tipo_atendimento_p bigint, nr_seq_regra_funcao_p bigint, cd_pessoa_fisica_p text, ie_tipo_senha_p text, nr_atendimento_p atendimento_paciente.nr_atendimento%type default null) RETURNS varchar AS $body$
DECLARE

 
ie_regra_w    varchar(3);
ds_senha_w    atendimento_paciente.ds_senha%type;
cd_estabelecimento_w    bigint;
ie_tipo_senha_w         regra_senha_atend.ie_tipo_senha%type;
nr_seq_episodio_w       atendimento_paciente.nr_seq_episodio%type;
nr_seq_episodio_ant_w   atendimento_paciente.nr_seq_episodio%type;
ds_senha_aux_w          atendimento_paciente.ds_senha%type;

c01 CURSOR FOR 
  SELECT ie_regra, ie_tipo_senha
  from regra_senha_atend 
  where  cd_estabelecimento  = coalesce(cd_estabelecimento_w,cd_estabelecimento) 
  and  coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0) 
  and coalesce(nr_seq_regra_funcao, coalesce(nr_seq_regra_funcao_p,0)) = coalesce(nr_seq_regra_funcao_p,0) 
  and ((ie_tipo_senha_p IS NOT NULL AND ie_tipo_senha_p::text <> '') and coalesce(ie_tipo_senha, 'A') = ie_tipo_senha_p 
      or coalesce(ie_tipo_senha_p::text, '') = '')   
  order by coalesce(ie_tipo_atendimento_p,0), 
     coalesce(nr_seq_regra_funcao_p,0);

BEGIN
cd_estabelecimento_w  := wheb_usuario_pck.get_cd_estabelecimento;
 
open c01;
loop 
fetch c01 into ie_regra_w, ie_tipo_senha_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
  ie_regra_w := ie_regra_w;
end loop;
close c01;

if (coalesce(ds_senha_w::text, '') = '') then

  if (ie_regra_w = 'NS') then 
    select to_char(nextval('atendimento_senha_seq')) 
    into STRICT ds_senha_w 
;
  elsif (ie_regra_w = 'SP') then
    select max(ds_senha)
	into STRICT 	ds_senha_w
	from pessoa_fisica
	where cd_pessoa_fisica = cd_pessoa_fisica_p;
  elsif (ie_regra_w = 'LN') then
    select  obter_Senha_Letra_Numero(6)
    into STRICT  ds_senha_w 
;
  elsif (ie_regra_w = 'NA') then   
    ds_senha_w    := obter_numero_randomico;
  elsif (ie_regra_w = 'NC') then   
		select 	replace(replace(replace(dbms_random.string('P', 3)||trunc(dbms_random.value(1,9))||replace(dbms_random.string('P', 4), chr(39), ''), '|', '!'), '[', '@'), ']', '@')
    	into STRICT  ds_senha_w 
	;
  elsif (ie_regra_w = 'DS') then 
    select  REPLACE(obter_dados_pf(cd_pessoa_fisica_p,'DN'),'/','') 
    into STRICT  ds_senha_w 
;
   
  end if;

end if;

if (ie_tipo_senha_w = 'C') then

  nr_seq_episodio_w := obter_episodio_atendimento(nr_atendimento_p);

  if (nr_seq_episodio_w != 0) then
  begin
    select obter_episodio_atendimento(max(nr_atendimento))
      into STRICT nr_seq_episodio_ant_w
      from atendimento_paciente
     where cd_pessoa_fisica = cd_pessoa_fisica_p;

    if (nr_seq_episodio_w = nr_seq_episodio_ant_w) then
    begin
      select max(ds_senha)
        into STRICT ds_senha_aux_w
        from atendimento_paciente 
       where coalesce(dt_cancelamento::text, '') = ''
         and nr_atendimento = (SELECT max(nr_atendimento) 
                                 from atendimento_paciente 
                                where nr_seq_episodio = nr_seq_episodio_w 
                                  and (ds_senha IS NOT NULL AND ds_senha::text <> ''));

       if (ds_senha_aux_w IS NOT NULL AND ds_senha_aux_w::text <> '') then
         ds_senha_w := ds_senha_aux_w;
      end if;
    end;
    end if;
  end;
  end if;
end if;
 
/* O Elemar retirou a parte do randomico sem um comentario a respeito*/
 
 
return ds_senha_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION gerar_senha_atendimento (ie_tipo_atendimento_p bigint, nr_seq_regra_funcao_p bigint, cd_pessoa_fisica_p text, ie_tipo_senha_p text, nr_atendimento_p atendimento_paciente.nr_atendimento%type default null) FROM PUBLIC;

