-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_exames_prescr_lab_inter ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_material_p text, nr_seq_grupo_p bigint, ie_equipamento_p text, ie_opcao_p text, ie_separador_p text, ie_tam_linha_p bigint) RETURNS varchar AS $body$
DECLARE

ie_opcao_w				varchar(255);
ie_status_atend_w			varchar(2);
cd_procedimento_w			bigint;
nr_seq_exame_w				bigint;
cd_exame_w				varchar(20);
cd_exame_integracao_w			varchar(20);
Resultado_w	 			varchar(1000);
qt_linha_w				smallint := 0;
ds_material_especial_w			varchar(255);
nr_sequencia_w				bigint;
ds_aux_w				varchar(100);
nr_seq_amostra_w			varchar(2);
nm_exame_w				varchar(80);
c01 CURSOR FOR
	SELECT		a.cd_procedimento,
			b.nr_seq_exame,
			b.cd_exame,
			coalesce(b.cd_exame_integracao, b.cd_exame),
			MAX(a.nr_sequencia),
			b.nm_exame
	FROM	exame_lab_material d,
		material_exame_lab c,
		exame_laboratorio b,
		prescr_procedimento a
	WHERE a.nr_seq_exame		= b.nr_seq_exame
	  AND a.nr_seq_exame		= d.nr_seq_exame
	  AND d.nr_seq_material	= c.nr_sequencia
	  AND a.nr_prescricao		= nr_prescricao_p
	  AND coalesce(a.cd_setor_atendimento,0)	= coalesce(coalesce(cd_setor_atendimento_p, a.cd_setor_atendimento),0)
	  AND (a.cd_material_exame	= coalesce(cd_material_p, a.cd_material_exame) OR (c.cd_material_exame	= cd_material_p AND d.ie_prioridade = 888))
	  AND b.nr_seq_grupo		= coalesce(nr_seq_grupo_p, b.nr_seq_grupo)
	  AND coalesce(d.qt_coleta,1) >= (coalesce(ie_equipamento_p,'1'))::numeric
	  AND a.ie_status_atend		= coalesce(ie_status_atend_w, a.ie_status_atend)
	  AND coalesce(b.cd_cgc_externo::text, '') = ''
	  AND (	(ds_material_especial_w = 'X' AND coalesce(a.ds_material_especial::text, '') = '') OR (a.ds_material_especial = ds_material_especial_w))
	GROUP BY 	a.cd_procedimento,
			b.nr_seq_exame,
			b.cd_exame,
			coalesce(b.cd_exame_integracao, b.cd_exame),
			b.nm_exame
	ORDER BY 5;

BEGIN
/* Opções
	CP	- Código Procedimento
	EX	- Exame
	CE	- Código Exame
	CI	- Código Integração
	CI3	- Código Integração com 3 dígitos
	CI8	- Código Integração com 8 dígitos
	NME3	- Nome do exame com 3 digitos
*/
ie_opcao_w	:= ie_opcao_p;
resultado_w	:= '';
IF (position(';' in ie_opcao_p) > 0) THEN
	ie_opcao_w		:= SUBSTR(ie_opcao_p, 1, position(';' in ie_opcao_p) - 1);
	ie_status_atend_w	:= SUBSTR(ie_opcao_p, position(';' in ie_opcao_p) + 1, 2);
	ds_aux_w		:= REPLACE(ie_opcao_p, ie_opcao_w || ';' || ie_status_atend_w,'');
	ds_aux_w		:= SUBSTR(ds_aux_w, 2, 255);
	ds_material_especial_w  := SUBSTR(ds_aux_w, 1, position(';' in ds_aux_w) - 1);
	IF (position(';' in ds_aux_w) = 0) THEN
		ds_material_especial_w := ds_aux_w;
	ELSE
		nr_seq_amostra_w	:= SUBSTR(ds_aux_w, position(';' in ds_aux_w) + 1, 255);
	END IF;
END IF;
IF (coalesce(ds_material_especial_w::text, '') = '') THEN
	ds_material_especial_w := 'X';
END IF;
OPEN C01;
LOOP
FETCH C01 INTO	cd_procedimento_w,
			nr_seq_exame_w,
			cd_exame_w,
			cd_exame_integracao_w,
			nr_sequencia_w,
			nm_exame_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN
	IF (ie_opcao_w = 'CP') THEN
		Resultado_w	:= Resultado_w || cd_procedimento_w || ie_separador_p;
	ELSIF (ie_opcao_w = 'EX') THEN
		Resultado_w	:= Resultado_w || nr_seq_exame_w || ie_separador_p;
	ELSIF (ie_opcao_w = 'CE') THEN
		Resultado_w	:= Resultado_w || cd_exame_w || ie_separador_p;
	ELSIF (ie_opcao_w = 'CI') THEN
		Resultado_w	:= Resultado_w || cd_exame_integracao_w || ie_separador_p;
	ELSIF (ie_opcao_w = 'CI3') THEN
		Resultado_w	:= Resultado_w || SUBSTR(cd_exame_integracao_w || '   ',1,3) || ie_separador_p;
	ELSIF (ie_opcao_w = 'CI8') THEN
		IF (nr_seq_amostra_w IS NOT NULL AND nr_seq_amostra_w::text <> '') THEN
			SELECT	coalesce(cd_exame_integracao, cd_exame)
			INTO STRICT	cd_exame_integracao_w
			FROM	exame_laboratorio
			WHERE nr_seq_superior = nr_seq_exame_w
			  AND nr_seq_apresent = nr_seq_amostra_w;
			Resultado_w	:= Resultado_w || SUBSTR(cd_exame_integracao_w || '        ',1,8) || ie_separador_p;
		ELSE
			Resultado_w	:= Resultado_w || SUBSTR(cd_exame_integracao_w || '        ',1,8) || ie_separador_p;
		END IF;
	ELSIF (ie_opcao_w = 'NME3') THEN
		Resultado_w	:= Resultado_w || SUBSTR(nm_exame_w || '   ',1,3) || ie_separador_p;
	ELSIF (ie_opcao_w = 'NM') THEN
		Resultado_w	:= Resultado_w || nm_exame_w || ie_separador_p;
	END IF;
	IF (ie_tam_linha_p <> 0) AND
		((LENGTH(resultado_w)/ (qt_linha_w + 1)) >= ie_tam_linha_p) THEN
		Resultado_w := Resultado_w || CHR(13) || CHR(10);
		qt_linha_w := qt_linha_w + 1;
	END IF;
	END;
END LOOP;
RETURN trim(both resultado_w || ' ');
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_exames_prescr_lab_inter ( nr_prescricao_p bigint, cd_setor_atendimento_p bigint, cd_material_p text, nr_seq_grupo_p bigint, ie_equipamento_p text, ie_opcao_p text, ie_separador_p text, ie_tam_linha_p bigint) FROM PUBLIC;

