-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_requisicao_glosa ( nr_seq_requisicao_p bigint, ie_consistencia_p text) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obtém se é requisição possui glosa.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/*
ie_consistencia_p
R - Requisição
P - Procedimentos da requisição
M - Materiais da Requisição
*/
ie_retorno_w			varchar(1)	:= 'N';

qt_glosa_w			integer	:= 0;
qt_glosa_req_w			integer	:= 0;
qt_glosa_req_proc_w		integer	:= 0;
qt_glosa_req_mat_w		integer	:= 0;
ie_tipo_processo_w		varchar(1)	:= 'X';
ie_tipo_gat_w			varchar(1);
ie_tipo_intercambio_w		varchar(1)	:= 'X';


BEGIN

begin
	select	ie_tipo_processo,
		ie_tipo_gat,
		ie_tipo_intercambio
	into STRICT	ie_tipo_processo_w,
		ie_tipo_gat_w,
		ie_tipo_intercambio_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
exception
when others then
	ie_tipo_processo_w	:= 'X';
	ie_tipo_gat_w		:= 'N';
	ie_tipo_intercambio_w	:= 'X';
end;

if (ie_consistencia_p	= 'R') then
	select	count(1)
	into STRICT	qt_glosa_req_w
	from	pls_requisicao_glosa	a
	where	a.nr_seq_requisicao 	= nr_seq_requisicao_p
	and	coalesce(a.nr_seq_req_proc::text, '') = ''
	and 	coalesce(a.nr_seq_req_mat::text, '') = ''
	and	not exists (	SELECT	1
				from	pls_auditoria		x,
					pls_auditoria_item	y
				where	x.nr_seq_requisicao	= a.nr_seq_requisicao
				and	x.nr_sequencia		= y.nr_seq_auditoria
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
				and	y.ie_status		= 'A')
	and	not exists (	select	1
				from	pls_requisicao_proc		z
				where	z.nr_seq_requisicao		= a.nr_seq_requisicao
				and	z.ie_cobranca_previa_servico	= 'S')
	and	not exists (	select	1
				from	pls_requisicao_mat		z
				where	z.nr_seq_requisicao		= a.nr_seq_requisicao
				and	z.ie_cobranca_previa_servico	= 'S');

	qt_glosa_w	:= qt_glosa_req_w;
elsif (ie_consistencia_p	= 'P') then
	select	count(1)
	into STRICT	qt_glosa_req_proc_w
	from	pls_requisicao_glosa	a
	where	exists (	SELECT	1
					from	pls_requisicao_proc	x
					where	x.nr_seq_requisicao	= nr_seq_requisicao_p
					and	x.nr_sequencia		= a.nr_seq_req_proc
					and	ie_status		<>  'P')
	and	not exists (	select 1
					from	pls_ocorrencia z,
						pls_ocorrencia_benef w
					where	z.nr_sequencia 		= w.nr_seq_ocorrencia
					and	w.nr_seq_requisicao 	= nr_seq_requisicao_p
					and	z.ie_auditoria 		= 'S'
					and	z.nr_sequencia		= a.nr_seq_ocorrencia)
	and	not exists (	select	1
					from	pls_auditoria		x,
						pls_auditoria_item	y
					where	x.nr_seq_requisicao	= a.nr_seq_requisicao
					and	x.nr_sequencia		= y.nr_seq_auditoria
					and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
					and	y.ie_status		= 'A')
	and	not exists (	select	1
					from	pls_requisicao_proc		z
					where	z.nr_seq_requisicao		= nr_seq_requisicao_p
					and	z.nr_sequencia			= a.nr_seq_req_proc
					and	z.ie_cobranca_previa_servico	= 'S');

	if (coalesce(ie_tipo_processo_w,'X')	= 'I') and (coalesce(ie_tipo_intercambio_w,'X')	= 'E') and (coalesce(ie_tipo_gat_w,'N') <> 'S') and (qt_glosa_req_proc_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_req_proc_w
		from	ptu_intercambio_consist a
		where	a.nr_seq_requisicao	= nr_seq_requisicao_p
		and	exists (	SELECT	1
				from	pls_requisicao_proc	x
				where	x.nr_seq_requisicao	= nr_seq_requisicao_p
				and	x.nr_sequencia		= a.nr_seq_procedimento
				and x.ie_status in ('N','G'));
	end if;

	qt_glosa_w	:= qt_glosa_req_proc_w;
elsif (ie_consistencia_p	= 'M') then
	select	count(1)
	into STRICT	qt_glosa_req_mat_w
	from	pls_requisicao_glosa	a
	where	exists (	SELECT	1
					from	pls_requisicao_mat	x
					where	x.nr_seq_requisicao	= nr_seq_requisicao_p
					and	x.nr_sequencia		= a.nr_seq_req_mat
					and	ie_status		<>  'P')
	and	not exists (	select 1
					from	pls_ocorrencia z,
						pls_ocorrencia_benef w
					where	z.nr_sequencia 		= w.nr_seq_ocorrencia
					and	w.nr_seq_requisicao 	= nr_seq_requisicao_p
					and	z.ie_auditoria 		= 'S'
					and	z.nr_sequencia		= a.nr_seq_ocorrencia)
	and	not exists (	select	1
					from	pls_auditoria		x,
						pls_auditoria_item	y
					where	x.nr_seq_requisicao	= a.nr_seq_requisicao
					and	x.nr_sequencia		= y.nr_seq_auditoria
					and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
					and	y.ie_status		= 'A')
	and	not exists (	select	1
					from	pls_requisicao_mat		z
					where	z.nr_seq_requisicao		= nr_seq_requisicao_p
					and	z.nr_sequencia			= a.nr_seq_req_mat
					and	z.ie_cobranca_previa_servico	= 'S');

	if (coalesce(ie_tipo_processo_w,'X')	= 'I') and (coalesce(ie_tipo_intercambio_w,'X')	= 'E') and (coalesce(ie_tipo_gat_w,'N') <> 'S') and (qt_glosa_req_mat_w = 0) then
		select	count(1)
		into STRICT	qt_glosa_req_mat_w
		from	ptu_intercambio_consist a
		where	a.nr_seq_requisicao	= nr_seq_requisicao_p
		and	exists (	SELECT	1
				from	pls_requisicao_mat	x
				where	x.nr_seq_requisicao	= nr_seq_requisicao_p
				and	x.nr_sequencia		= a.nr_seq_material
				and x.ie_status in ('N','G'));
	end if;

	qt_glosa_w	:= qt_glosa_req_mat_w;
end if;

if (qt_glosa_w	> 0) then
	ie_retorno_w	:= 'S';
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_requisicao_glosa ( nr_seq_requisicao_p bigint, ie_consistencia_p text) FROM PUBLIC;

