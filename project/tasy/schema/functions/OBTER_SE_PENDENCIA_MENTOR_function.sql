-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_pendencia_mentor ( nr_atendimento_p bigint, nr_seq_sinal_vital_p bigint default null, nm_usuario_integracao_p text default null, cd_estab_integracao_p bigint default null, nr_seq_regra_p bigint default null, ie_exige_justificativa_p text default 'S|N', ie_html5_p text default 'S') RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(1) := 'N';
ie_medico_w             varchar(1) := 'N';
qt_horas_retroativa_w	double precision;
cd_estabelecimento_w	smallint;
nm_usuario_w		    varchar(15);
qt_reg_w		        bigint;
qt_pendencia_w		    bigint;
cd_pessoa_usuario_w		bigint;


BEGIN

cd_estabelecimento_w := coalesce(cd_estab_integracao_p,wheb_usuario_pck.get_cd_estabelecimento);
nm_usuario_w := coalesce(nm_usuario_integracao_p,wheb_usuario_pck.get_nm_usuario);

qt_horas_retroativa_w := obter_param_usuario(355, 2, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, qt_horas_retroativa_w);

select obter_pf_usuario(nm_usuario_w, 'C')
into STRICT cd_pessoa_usuario_w
;

select OBTER_SE_PF_MEDICO(cd_pessoa_usuario_w)
into STRICT ie_medico_w
;

qt_horas_retroativa_w := coalesce( ((1/24)* qt_horas_retroativa_w),0);

Select  count(*)
into STRICT	qt_reg_w
from	gqa_pendencia_pac
where	nr_atendimento = nr_atendimento_p
  and   ((qt_horas_retroativa_w = 0) or (dt_atualizacao_nrec >= clock_timestamp() - qt_horas_retroativa_w));

if (qt_reg_w > 0) then

	if (ie_html5_p = 'S') then

	select  count(*)
	into STRICT	qt_pendencia_w
	from    gqa_pendencia_pac      a,
		    gqa_pend_pac_acao      b,
		    gqa_pend_pac_acao_dest c,
		    gqa_pendencia_regra    d
	where	a.nr_sequencia  = b.nr_seq_pend_pac
	and	b.nr_sequencia      = c.nr_seq_pend_pac_acao
	and	d.nr_sequencia      = a.nr_seq_pend_regra
	and	a.nr_atendimento    = nr_atendimento_p
    and coalesce(c.dt_encerramento::text, '') = ''
    and coalesce(c.dt_justificativa::text, '') = ''
	and	coalesce(b.dt_encerramento::text, '') = ''
and	(   (c.cd_pessoa_fisica = cd_pessoa_usuario_w and c.IE_PROFISSIONAL_MEDICO <> 'S')
    or ( ie_medico_w = 'S' and c.IE_PROFISSIONAL_MEDICO = 'S' and c.nr_seq_pend_pac_acao not in (SELECT p.nr_seq_pend_pac_acao 
                                                                                          from GQA_PEND_PAC_ACAO_DEST p,
                                                                                          gqa_pendencia_pac m,
                                                                                          GQA_PEND_PAC_ACAO v
                                                                                          where   m.nr_sequencia = v.nr_seq_pend_pac
                                                                                          and     (p.dt_ciencia IS NOT NULL AND p.dt_ciencia::text <> '')
                                                                                          and     v.nr_sequencia = p.nr_seq_pend_pac_acao
                                                                                          and     m.nr_atendimento = nr_atendimento_p
                                                                                          and     p.cd_pessoa_fisica = cd_pessoa_usuario_w))
    or (nr_seq_sinal_vital_p > 0))
	and	((qt_horas_retroativa_w = 0) or (a.dt_atualizacao_nrec >= clock_timestamp() - qt_horas_retroativa_w))
	and	coalesce(d.nr_seq_sinal_vital,0) = coalesce(nr_seq_sinal_vital_p, coalesce(d.nr_seq_sinal_vital,0))
	and	coalesce(d.nr_sequencia,0) = coalesce(nr_seq_regra_p, coalesce(d.nr_sequencia,0))
    and regexp_like(pep_obter_info_pend_mentor(c.nr_seq_pend_pac_acao, 'J'), ie_exige_justificativa_p)
	and	( (((b.nr_seq_proc IS NOT NULL AND b.nr_seq_proc::text <> '') or (b.nr_seq_proc_saps IS NOT NULL AND b.nr_seq_proc_saps::text <> ''))
		and not exists (select	1
				from	pe_prescricao e
				where	e.nr_seq_pend_pac_acao in (select nr_sequencia
								   from   gqa_pend_pac_acao
								   where  nr_seq_pend_pac = a.nr_sequencia)))
		or ((b.nr_seq_protocolo IS NOT NULL AND b.nr_seq_protocolo::text <> '')
		and not exists (select	1
				from	prescr_medica f
				where	f.nr_seq_pend_pac_acao = b.nr_sequencia))
		or ((b.nr_seq_mprev_programa IS NOT NULL AND b.nr_seq_mprev_programa::text <> '')
		and not exists (select	1
				from	atend_programa_saude g
				where	g.nr_seq_pend_pac_acao = b.nr_sequencia))
		or ((b.nr_seq_escala IS NOT NULL AND b.nr_seq_escala::text <> '')
		and not exists (select	1
				from	escala_pend_pac_acao e
				where	e.nr_seq_pend_pac_acao = b.nr_sequencia))
    or ((b.nr_seq_protocolo_ger IS NOT NULL AND b.nr_seq_protocolo_ger::text <> '')      
    and not exists (
        SELECT    1
        from    gqa_protocolo_pac f
        where    f.nr_seq_pend_pac_acao = b.nr_sequencia)));
	
	else
	
		select  count(*)
	into STRICT	qt_pendencia_w
	from    gqa_pendencia_pac a,
		    gqa_pend_pac_acao b,
		    gqa_pend_pac_acao_dest c,
		    gqa_pendencia_regra d
	where 	a.nr_sequencia = b.nr_seq_pend_pac
	and		b.nr_sequencia = c.nr_seq_pend_pac_acao
	and		d.nr_sequencia = a.nr_seq_pend_regra
	and		a.nr_atendimento = nr_atendimento_p
    and 	coalesce(c.dt_encerramento::text, '') = ''
    and 	coalesce(c.dt_justificativa::text, '') = ''
	and		coalesce(b.dt_encerramento::text, '') = ''
	and		((c.cd_pessoa_fisica = cd_pessoa_usuario_w) or (nr_seq_sinal_vital_p > 0))
	and		((qt_horas_retroativa_w = 0) or (a.dt_atualizacao_nrec >= clock_timestamp() - (qt_horas_retroativa_w/24)))
	and		coalesce(d.nr_seq_sinal_vital,0) = coalesce(nr_seq_sinal_vital_p, d.nr_seq_sinal_vital, 0)		
	and		coalesce(d.nr_sequencia,0) = coalesce(nr_seq_regra_p, d.nr_sequencia, 0)
    and 	regexp_like(pep_obter_info_pend_mentor(c.nr_seq_pend_pac_acao, 'J'), ie_exige_justificativa_p)
	and		((((b.nr_seq_proc IS NOT NULL AND b.nr_seq_proc::text <> '') or (b.nr_seq_proc_saps IS NOT NULL AND b.nr_seq_proc_saps::text <> ''))
			   and not exists (SELECT 	1
							   from		pe_prescricao e
						       where	e.nr_seq_pend_pac_acao in (select h.nr_sequencia 
															       from   gqa_pend_pac_acao h
															       where  h.nr_seq_pend_pac = a.nr_sequencia)))
			 or ((b.nr_seq_protocolo IS NOT NULL AND b.nr_seq_protocolo::text <> '')		
			     and not exists (select	1
							     from		prescr_medica f
							     where		f.nr_seq_pend_pac_acao = b.nr_sequencia)));
	
	end if;
	
	if (qt_pendencia_w > 0) then

		ie_retorno_w := 'S';

	end if;

end if;


return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pendencia_mentor ( nr_atendimento_p bigint, nr_seq_sinal_vital_p bigint default null, nm_usuario_integracao_p text default null, cd_estab_integracao_p bigint default null, nr_seq_regra_p bigint default null, ie_exige_justificativa_p text default 'S|N', ie_html5_p text default 'S') FROM PUBLIC;

