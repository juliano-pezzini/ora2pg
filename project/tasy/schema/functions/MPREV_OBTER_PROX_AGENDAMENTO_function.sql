-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION mprev_obter_prox_agendamento (nr_seq_participante_p bigint, ie_opcao_p text, nr_linha_p bigint, dt_referencia_p timestamp default clock_timestamp()) RETURNS varchar AS $body$
DECLARE

ds_retorno_w		varchar(255)	:= null;
dt_prevista_w		timestamp;
dt_agendamento_w	timestamp;
i			bigint;
ie_forma_atend_prev_w	mprev_partic_ciclo_item_v.ie_forma_atend_prev%type;
nm_grupo_w		mprev_agendamento_turma_v.nm_grupo%type;
nm_turma_w		mprev_agendamento_turma_v.nm_turma%type;

/*				 
ie_opcao_p					 
'PA' - Data prevista para atendimento (conforme plano) 
'AA' - Data agendada para atendimento 
'T' - Telemonitoramento 
'G' - Reunião em Grupo 
*/
 
 
c_atend_prev CURSOR FOR 
	SELECT	a.dt_prevista, 
		a.dt_agendamento 
	from	mprev_partic_ciclo_item_v a 
	where	a.nr_seq_participante = nr_seq_participante_p 
	and	a.dt_prevista >= dt_referencia_p 
	and (a.ie_status <> 'C' or coalesce(a.ie_status::text, '') = '') 
	and	a.ie_forma_atend_prev = ie_forma_atend_prev_w 
	order by 
		a.dt_prevista;
		
c_agenda_grupo CURSOR FOR 
	SELECT	a.dt_agenda, 
		a.nm_grupo, 
		a.nm_turma 
	from	mprev_agendamento_turma_v a 
	where	a.nr_seq_participante = nr_seq_participante_p 
	and	a.dt_agenda >= dt_referencia_p 
	and (a.ie_status_agenda <> 'C' or coalesce(a.ie_status_agenda::text, '') = '') 
	order by 
		a.dt_agenda;
		

BEGIN 
 
if (nr_seq_participante_p IS NOT NULL AND nr_seq_participante_p::text <> '') and (ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') and (nr_linha_p IS NOT NULL AND nr_linha_p::text <> '') then 
 
	if (ie_opcao_p in ('PA','AA')) then 
		/* Buscar atendimentos previstos presenciais */
 
		ie_forma_atend_prev_w	:= 'P';
		i	:= 1;
		open c_atend_prev;
		loop 
		fetch c_atend_prev into	 
			dt_prevista_w, 
			dt_agendamento_w;
		EXIT WHEN NOT FOUND; /* apply on c_atend_prev */
			begin 
			if (i = nr_linha_p) then 
				if (ie_opcao_p = 'PA') then 
					ds_retorno_w	:= to_char(dt_prevista_w,'dd/mm/yy');
				elsif (ie_opcao_p = 'AA') then 
					ds_retorno_w	:= to_char(dt_agendamento_w,'dd/mm/yy hh24:mi');
				end if;
			end if;
			i	:= i + 1;
			end;
		end loop;
		close c_atend_prev;
	elsif (ie_opcao_p = 'T') then 
		/* Buscar atendimentos previstos por telefone */
 
		ie_forma_atend_prev_w	:= 'T';
		i	:= 1;
		open c_atend_prev;
		loop 
		fetch c_atend_prev into	 
			dt_prevista_w, 
			dt_agendamento_w;
		EXIT WHEN NOT FOUND; /* apply on c_atend_prev */
			begin 
			if (i = nr_linha_p) then 
				/* No caso da tele, não existe agendamento será uma lista apenas */
 
				ds_retorno_w	:= to_char(dt_prevista_w,'mm/yyyy');
			end if;
			i	:= i + 1;
			end;
		end loop;
		close c_atend_prev;		
	elsif (ie_opcao_p = 'G') then 
		i	:= 1;
		open c_agenda_grupo;
		loop 
		fetch c_agenda_grupo into	 
			dt_agendamento_w, 
			nm_grupo_w, 
			nm_turma_w;
		EXIT WHEN NOT FOUND; /* apply on c_agenda_grupo */
			begin 
			if (i = nr_linha_p) then 
				ds_retorno_w	:= 	initcap(substr(to_char(dt_agendamento_w,'day'),1,3)) || ' ' || 
							to_char(dt_agendamento_w,'dd/mm/yy') || ' - ' || 
							substr(nm_grupo_w,1,60) || ', ' || 
							substr(nm_turma_w,1,30);
			end if;
			i	:= i + 1;
			end;
		end loop;
		close c_agenda_grupo;
	end if;
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION mprev_obter_prox_agendamento (nr_seq_participante_p bigint, ie_opcao_p text, nr_linha_p bigint, dt_referencia_p timestamp default clock_timestamp()) FROM PUBLIC;

