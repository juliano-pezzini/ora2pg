-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_comunicado_cih_concat as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_comunicado_cih_concat (nr_prescricao_p bigint, nr_seq_prescricao_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_comunicado_cih_concat_atx ( ' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(nr_seq_prescricao_p) || ',' || quote_nullable(nm_usuario_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_comunicado_cih_concat_atx (nr_prescricao_p bigint, nr_seq_prescricao_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE
dt_registro_w		varchar(30);
nm_profissional_w	varchar(255);	
ds_tipo_w		varchar(255);							
ds_retorno_w		varchar(4000);	
ds_enter_w		varchar(10)	:=  chr(13) || chr(10);	
ds_espaco_w		varchar(255) 	:= 	lpad(' ',1,' ');
nr_sequencia_w		bigint;	
ds_geral_w		varchar(3500);
ds_quebra_w		varchar(255) 	:=  	chr(13) || chr(10);
nr_seq_rtf_srtring_w	bigint;	
ds_sep_bv_w		varchar(50);	

expressao1_w	varchar(255) := obter_desc_expressao_idioma(327202, null, wheb_usuario_pck.get_nr_seq_idioma);--Data:
expressao2_w	varchar(255) := obter_desc_expressao_idioma(728918, null, wheb_usuario_pck.get_nr_seq_idioma);--Profissional
expressao3_w	varchar(255) := obter_desc_expressao_idioma(602302, null, wheb_usuario_pck.get_nr_seq_idioma);--Tipo:
C01 CURSOR FOR
	SELECT  to_char(a.dt_registro, 'dd/mm/yyyy hh24:mi:ss')  dt_registro,
	        substr(obter_nome_pf(cd_profissional),1,255) ds_profissional,
		substr(obter_desc_tipo_comunic_cih(nr_seq_tipo),1,255) ds_tipo,
		a.nr_sequencia
	from prescr_mat_comunic_cih a
	where nr_prescricao  = nr_prescricao_p
	and nr_seq_prescricao  = nr_seq_prescricao_p
	order by a.dt_registro desc;

BEGIN
begin

ds_sep_bv_w := obter_separador_bv;

open c01;
loop
fetch c01 into
		dt_registro_w,
		nm_profissional_w,
		ds_tipo_w,
		nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	ds_retorno_w	:= 	substr(ds_retorno_w || expressao1_w || ' ' || dt_registro_w || ds_espaco_w ||
						' '||expressao2_w||' ' || nm_profissional_w ||
						' '||expressao3_w||': '|| ds_tipo_w ||ds_enter_w ||ds_enter_w,1,4000);
			
			if (nr_sequencia_w > 0 ) then
				begin
				nr_seq_rtf_srtring_w  := converte_rtf_string('select	ds_comunicado
								from	prescr_mat_comunic_cih 
								where	nr_sequencia = :nr_sequencia_w', nr_sequencia_w, nm_usuario_p, nr_seq_rtf_srtring_w );
				select	ds_texto
				into STRICT	ds_geral_w
				from	tasy_conversao_rtf
				where	nr_sequencia = nr_seq_rtf_srtring_w;
				end;
			ds_retorno_w := substr(ds_retorno_w || ds_geral_w || ds_enter_w ||ds_enter_w,1,4000);	
			end if;
	end;
end loop;
close c01;

exception
when others then
null;	
end;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_comunicado_cih_concat (nr_prescricao_p bigint, nr_seq_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_comunicado_cih_concat_atx (nr_prescricao_p bigint, nr_seq_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

