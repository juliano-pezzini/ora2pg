-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_preco_venda_cot_compra ( cd_estabelecimento_p bigint, cd_material_p bigint, ie_regra_preco_p text, cd_convenio_p bigint, cd_categoria_p bigint, cd_unidade_medida_cotado_p text) RETURNS bigint AS $body$
DECLARE

 
 
dt_ult_vigencia_w			timestamp;
nr_seq_mat_simpro_w			bigint;
nr_seq_simpro_preco_w			bigint;
cd_unidade_medida_compra_w		unidade_medida.cd_unidade_medida%type;
cd_unidade_medida_estoque_w		unidade_medida.cd_unidade_medida%type;
qt_conv_compra_estoque_w		material.qt_conv_compra_estoque%type;
qt_conv_estoque_consumo_w		material.qt_conv_estoque_consumo%type;
vl_preco_w				cot_compra_forn_item.vl_preco%type;


BEGIN 
vl_preco_w	:= 0;
 
if (ie_regra_preco_p = 'B') then /*Brasindice*/
 
 
	vl_preco_w := coalesce(obter_valor_brasindice(cd_material_p,'C'),0);
 
elsif (ie_regra_preco_p = 'S') then /*Simpro*/
 
 
	SELECT * FROM calcular_preco_simpro( 
		cd_estabelecimento_p, cd_convenio_p, cd_material_p, 1, 1, clock_timestamp(), 'C', vl_preco_w, dt_ult_vigencia_w, 1, 1, 1, 1, 'N', 'N', obter_marca_material_estab(cd_estabelecimento_p, cd_material_p,'C'), nr_seq_mat_simpro_w, nr_seq_simpro_preco_w) INTO STRICT vl_preco_w, dt_ult_vigencia_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w;
	 
	vl_preco_w := coalesce(vl_preco_w,0);
	 
 
elsif (ie_regra_preco_p = 'C') then /*ConvÃªnio*/
 
 
	vl_preco_w := coalesce(obter_preco_material(cd_estabelecimento_p,cd_convenio_p,cd_categoria_p,clock_timestamp(),cd_material_p,0,0,0,null,0,0),0);
 
end if;
 
select	cd_unidade_medida_compra, 
	cd_unidade_medida_estoque, 
	qt_conv_compra_estoque, 
	qt_conv_estoque_consumo 
into STRICT	cd_unidade_medida_compra_w, 
	cd_unidade_medida_estoque_w, 
	qt_conv_compra_estoque_w, 
	qt_conv_estoque_consumo_w 
from	material 
where	cd_material = cd_material_p;
 
if (cd_unidade_medida_cotado_p = cd_unidade_medida_compra_w) then 
	vl_preco_w	:= ((vl_preco_w * qt_conv_compra_estoque_w) * qt_conv_estoque_consumo_w);
elsif (cd_unidade_medida_cotado_p = cd_unidade_medida_estoque_w) then 
	vl_preco_w	:= (vl_preco_w * qt_conv_estoque_consumo_w);
end if;
 
 
return	vl_preco_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_preco_venda_cot_compra ( cd_estabelecimento_p bigint, cd_material_p bigint, ie_regra_preco_p text, cd_convenio_p bigint, cd_categoria_p bigint, cd_unidade_medida_cotado_p text) FROM PUBLIC;

