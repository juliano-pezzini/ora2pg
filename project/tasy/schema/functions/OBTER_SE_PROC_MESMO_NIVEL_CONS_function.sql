-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proc_mesmo_nivel_cons (nr_seq_aprovacao_p bigint, nr_seq_proc_aprov_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, ie_somente_pendente_p text default 'S') RETURNS varchar AS $body$
DECLARE


ie_mesmo_nivel_w		varchar(1)	:= 'N';
ie_aprovacao_nivel_w	varchar(1)	:= 'N';
nr_nivel_atual_w		processo_aprov_resp.nr_nivel_aprovacao%type;
nr_nivel_aprovacao_w	processo_aprov_resp.nr_nivel_aprovacao%type;
cd_cargo_w				pessoa_fisica.cd_cargo%type;
nr_seq_proc_aprov_w		processo_aprov_compra.nr_seq_proc_aprov%type;
nm_usuario_w			pessoa_fisica.nm_usuario%type;
ie_responsavel_w		processo_aprov_resp.ie_responsavel%type;
qt_registro_w			bigint;
nr_documento_w            	processo_aprov_compra.nr_documento%type;
qt_nova_estrutura_w        	bigint;

c01 CURSOR FOR
SELECT	cd_cargo,
	nm_usuario
from	(
	SELECT	coalesce(a.cd_cargo,0) cd_cargo,
		obter_usuario_pf(a.cd_pessoa_fisica) nm_usuario
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	
union all

	select	coalesce(a.cd_cargo,0) cd_cargo,
		obter_usuario_pf(a.cd_pessoa_fisica) nm_usuario
	from	pessoa_fisica a,
		pessoa_fisica_delegacao b
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	b.cd_pessoa_substituta = cd_pessoa_fisica_p
	and	((coalesce(trunc(dt_inicio_limite),trunc(clock_timestamp())) <= trunc(clock_timestamp())) and (trunc(dt_limite) >= trunc(clock_timestamp())))) alias16
group by	cd_cargo,
	nm_usuario;


BEGIN

select	obter_se_proc_por_nivel(nr_seq_aprovacao_p, cd_estabelecimento_p)
into STRICT	ie_aprovacao_nivel_w
;

select	max(nr_documento)
into STRICT	nr_documento_w
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p
and	nr_seq_proc_aprov = nr_seq_proc_aprov_p;

select obter_estrutura_aprovacao(nr_seq_proc_aprov_p, nr_documento_w)
into STRICT   qt_nova_estrutura_w
;
	
if (ie_aprovacao_nivel_w in ('S', 'A')) then
	begin
	
	if (qt_nova_estrutura_w > 0) then

		select	coalesce(max(ie_responsavel),'C')
		into STRICT	ie_responsavel_w
		from	processo_aprov_compra
		where	nr_seq_proc_aprov = nr_seq_proc_aprov_p
		and	nr_documento	  = nr_documento_w;
		
		select	coalesce(max(1), 0)
		into STRICT	qt_registro_w
		from	processo_aprovacao a,
			processo_aprov_compra b
		where	a.cd_processo_aprov	= b.cd_processo_aprov
		and	b.nr_sequencia		= nr_seq_aprovacao_p
		and	b.nr_documento		= nr_documento_w
		and	b.nm_usuario_regra	= nm_usuario_w
		and	b.ie_responsavel	= 'F';
	else
		select	coalesce(max(ie_responsavel),'C')
		into STRICT	ie_responsavel_w
		from	processo_aprov_resp
		where	nr_sequencia = nr_seq_proc_aprov_p;
		
		select	coalesce(max(1), 0)
		into STRICT	qt_registro_w
		from	processo_aprovacao a,
			processo_aprov_resp b,
			processo_aprov_compra c
		where	a.cd_processo_aprov	= b.cd_processo_aprov
		and	c.nr_seq_proc_aprov	= b.nr_sequencia
		and	c.nr_sequencia		= nr_seq_aprovacao_p
		and	b.nm_usuario_regra	= nm_usuario_w
		and	b.ie_responsavel	= 'F';
	end if;
		
	if (qt_registro_w > 0) then
		ie_responsavel_w := 'F';
	end if;

	open c01;
	loop
	fetch c01 into
		cd_cargo_w,
		nm_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		if (ie_mesmo_nivel_w = 'N') then
			begin
			
			if (qt_nova_estrutura_w > 0) then
            	
				select	coalesce(min(nr_nivel_aprovacao),0)
				into STRICT	nr_nivel_atual_w
				from	processo_aprov_compra
				where	((ie_somente_pendente_p = 'N') or (coalesce(dt_definicao::text, '') = ''))
				and	((ie_somente_pendente_p = 'N') or (ie_aprov_reprov = 'P'))
				and	nr_sequencia		= nr_seq_aprovacao_p
				and 	nr_seq_proc_aprov 	= nr_seq_proc_aprov_p
				and	nr_documento		= nr_documento_w
				and	((ie_responsavel_w = 'C' AND cd_cargo = cd_cargo_w) or
					(ie_responsavel_w = 'F' AND nm_usuario_regra = nm_usuario_w));

				select	coalesce(min(nr_nivel_aprovacao),0),
					coalesce(min(nr_seq_proc_aprov),0)
				into STRICT	nr_nivel_aprovacao_w,
					nr_seq_proc_aprov_w
				from	processo_aprov_compra
				where	nr_sequencia = nr_seq_aprovacao_p
				and	nr_documento = nr_documento_w
				and	((ie_responsavel_w = 'C' AND cd_cargo = cd_cargo_w) or
					(ie_responsavel_w = 'F' AND nm_usuario_regra = nm_usuario_w))
				and	((ie_somente_pendente_p = 'N') or (ie_aprov_reprov = 'P'));
			else
				select	coalesce(min(a.nr_nivel_aprovacao),0)
				into STRICT	nr_nivel_atual_w
				from	processo_aprov_resp a,
					processo_aprov_compra b
				where	b.nr_seq_proc_aprov = a.nr_sequencia
				and	((ie_somente_pendente_p = 'N') or (coalesce(b.dt_definicao::text, '') = ''))
				and	((ie_somente_pendente_p = 'N') or (b.ie_aprov_reprov = 'P'))
				and	b.nr_sequencia		= nr_seq_aprovacao_p
				and b.nr_seq_proc_aprov = nr_seq_proc_aprov_p
				and	((ie_responsavel_w = 'C' AND a.cd_cargo = cd_cargo_w) or
					(ie_responsavel_w = 'F' AND a.nm_usuario_regra = nm_usuario_w));

				select	coalesce(min(a.nr_nivel_aprovacao),0),
					coalesce(min(b.nr_seq_proc_aprov),0)
				into STRICT	nr_nivel_aprovacao_w,
					nr_seq_proc_aprov_w
				from	processo_aprov_resp a,
					processo_aprov_compra b
				where	b.nr_seq_proc_aprov = a.nr_sequencia
				and	b.nr_sequencia = nr_seq_aprovacao_p
				and	((ie_responsavel_w = 'C' AND a.cd_cargo = cd_cargo_w) or
					(ie_responsavel_w = 'F' AND a.nm_usuario_regra = nm_usuario_w))
				and	((ie_somente_pendente_p = 'N') or (b.ie_aprov_reprov = 'P'));
			end if;

			if (nr_nivel_aprovacao_w = nr_nivel_atual_w) and (nr_seq_proc_aprov_w = nr_seq_proc_aprov_p)then
				ie_mesmo_nivel_w := 'S';
			end if;

			end;
		end if;

		end;
	end loop;
	close c01;

	end;
end if;	

return	ie_mesmo_nivel_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION obter_se_proc_mesmo_nivel_cons (nr_seq_aprovacao_p bigint, nr_seq_proc_aprov_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, ie_somente_pendente_p text default 'S') FROM PUBLIC;

