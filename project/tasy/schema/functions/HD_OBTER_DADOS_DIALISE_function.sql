-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hd_obter_dados_dialise ( nr_seq_dialise_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

					 
nr_seq_paciente_w				bigint;					
nr_seq_unid_dialise_w				bigint;
nr_seq_dialisador_ativo_w			bigint;
nr_seq_dialise_dialis_ativo_w			bigint;
nr_seq_ponto_acesso_w				bigint;
nr_seq_maquina_w				bigint;
qt_pa_diast_pre_deitado_w			smallint;
qt_pa_diast_pre_pe_w				smallint;
qt_pa_sist_pre_deitado_w			smallint;
qt_pa_sist_pre_pe_w				smallint;
qt_peso_pre_w					real;
qt_peso_pos_w					real;
dt_dialise_w					timestamp;
nm_pessoa_fisica_w				varchar(90);
cd_pessoa_fisica_w				varchar(10);
nr_atendimento_w				bigint;
ie_tipo_dialise_w				varchar(15);

ds_retorno_w					varchar(255);


BEGIN 
 
/* obtem dados da diálise */
 
begin 
select	coalesce(nr_seq_paciente,0), 
	coalesce(nr_seq_unid_dialise,0), 
	qt_pa_diast_pre_deitado, 
	qt_pa_diast_pre_pe, 
	qt_pa_sist_pre_deitado, 
	qt_pa_sist_pre_pe, 
	qt_peso_pre, 
	qt_peso_pos, 
	dt_dialise, 
	substr(obter_nome_pf(cd_pessoa_fisica),1,90), 
	cd_pessoa_fisica, 
	nr_atendimento, 
	ie_tipo_dialise 
into STRICT	nr_seq_paciente_w, 
	nr_seq_unid_dialise_w, 
	qt_pa_diast_pre_deitado_w, 
	qt_pa_diast_pre_pe_w, 
	qt_pa_sist_pre_deitado_w, 
	qt_pa_sist_pre_pe_w, 
	qt_peso_pre_w, 
	qt_peso_pos_w, 
	dt_dialise_w, 
	nm_pessoa_fisica_w, 
	cd_pessoa_fisica_w, 
	nr_atendimento_w, 
	ie_tipo_dialise_w 
from	hd_dialise 
where	nr_sequencia		= nr_seq_dialise_p;
exception 
	when others then 
	nr_seq_paciente_w	:= 0;
end;
 
/* obtem dados do dialisador da diálise */
 
begin 
select	max(nr_seq_dialisador), 
	max(nr_sequencia), 
	max(nr_seq_ponto_acesso), 
	max(nr_seq_maquina) 
into STRICT	nr_seq_dialisador_ativo_w, 
	nr_seq_dialise_dialis_ativo_w, 
	nr_seq_ponto_acesso_w, 
	nr_seq_maquina_w	 
from	hd_dialise_dialisador 
where	nr_seq_dialise		= nr_seq_dialise_p 
and	coalesce(dt_retirada::text, '') = '';	
exception 
	when others then 
	nr_seq_dialise_dialis_ativo_w	:= 0;		
end;
	 
/* retornos*/
 
if (ie_opcao_p = 'SP') then 
	ds_retorno_w	:= coalesce(nr_seq_paciente_w,0);
elsif (ie_opcao_p = 'SU') then 
	ds_retorno_w	:= coalesce(nr_seq_unid_dialise_w,0);
elsif (ie_opcao_p = 'DA') then 
	ds_retorno_w	:= coalesce(nr_seq_dialisador_ativo_w,0);
elsif (ie_opcao_p = 'DS') then 
	ds_retorno_w	:= coalesce(nr_seq_dialise_dialis_ativo_w,0);
elsif (ie_opcao_p = 'DP') then 
	ds_retorno_w	:= coalesce(nr_seq_ponto_acesso_w,0);
elsif (ie_opcao_p = 'DM') then 
	ds_retorno_w	:= coalesce(nr_seq_maquina_w,0);
elsif (ie_opcao_p = 'PDD') then 
	ds_retorno_w	:= qt_pa_diast_pre_deitado_w;
elsif (ie_opcao_p = 'PSD') then 
	ds_retorno_w	:= qt_pa_sist_pre_deitado_w;
elsif (ie_opcao_p = 'PDP') then 
	ds_retorno_w	:= qt_pa_diast_pre_pe_w;
elsif (ie_opcao_p = 'PSP') then 
	ds_retorno_w	:= qt_pa_sist_pre_pe_w;
elsif (ie_opcao_p = 'PP') then 
	ds_retorno_w	:= qt_peso_pre_w;
elsif (ie_opcao_p = 'PPS') then 
	ds_retorno_w	:= qt_peso_pos_w;	
elsif (ie_opcao_p = 'NP') then 
	ds_retorno_w	:= nm_pessoa_fisica_w;
elsif (ie_opcao_p = 'PF') then 
	ds_retorno_w	:= cd_pessoa_fisica_w;
elsif (ie_opcao_p = 'AT') then 
	ds_retorno_w	:= nr_atendimento_w;	
elsif (ie_opcao_p = 'TD') then 
	ds_retorno_w	:= ie_tipo_dialise_w;	
end if;
 
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hd_obter_dados_dialise ( nr_seq_dialise_p bigint, ie_opcao_p text) FROM PUBLIC;

