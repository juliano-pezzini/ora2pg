-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_obter_se_proc_check (nr_seq_proc_interno_p bigint, nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, cd_especialidade_p bigint default null) RETURNS varchar AS $body$
DECLARE


ie_retorno_w		varchar(1);
ie_existe_regra_w	varchar(1);
cd_procedimento_w 	bigint;
ie_origem_proced_w	bigint;
nr_seq_grupo_check_list_w bigint;
cd_convenio_w		integer;	
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_estabelecimento_w	smallint;

C01 CURSOR FOR
	SELECT	x.nr_seq_grupo_check_list
	from	ageint_regra_checklist x,
		ageint_grupo_check_list y
	where	x.nr_seq_grupo_check_list = y.nr_sequencia
	and	coalesce(y.ie_situacao,'A') = 'A'
	and	((x.cd_convenio = cd_convenio_w) or (coalesce(x.cd_convenio::text, '') = '')) and
		((x.ie_tipo_convenio = Obter_Tipo_Convenio(cd_convenio_w)) or (coalesce(x.ie_tipo_convenio::text, '') = '')) and
		((x.cd_plano_convenio = cd_plano_w) or (coalesce(x.cd_plano_convenio::text, '') = '')) and
		((x.cd_categoria = cd_categoria_w) or (coalesce(x.cd_categoria::text, '') = '')) and							
		((x.cd_area_procedimento = obter_area_procedimento(cd_procedimento_w, ie_origem_proced_w)) or (coalesce(x.cd_area_procedimento::text, '') = '')) and
		((x.cd_especialidade = obter_especialidade_proced(cd_procedimento_w, ie_origem_proced_w)) or (coalesce(x.cd_especialidade::text, '') = '')) and 
		((x.cd_grupo_proc = obter_grupo_procedimento(cd_procedimento_w, ie_origem_proced_w,'C')) or (coalesce(x.cd_grupo_proc::text, '') = '')) and 
		((x.cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = '')) and 
		((coalesce(x.cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(x.ie_origem_proced::text, '') = ''))) and 
		((x.nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(x.nr_seq_proc_interno::text, '') = '')) and
		((x.cd_especialidade_item = cd_especialidade_p) or (coalesce(x.cd_especialidade_item::text, '') = ''))		   
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
	order by coalesce(x.cd_convenio,0),
		coalesce(x.ie_tipo_convenio,0),		
		coalesce(x.cd_plano_convenio,0),
		coalesce(x.cd_procedimento,0),
		coalesce(x.nr_seq_proc_interno,0),
		coalesce(x.cd_grupo_proc,0),
		coalesce(x.cd_especialidade,0),
		coalesce(x.cd_area_procedimento,0);


BEGIN

select	cd_estabelecimento,
	cd_convenio,
	cd_categoria,
	cd_plano
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w
from	agenda_integrada
where	nr_sequencia = nr_seq_ageint_p;

SELECT * FROM obter_proc_tab_interno_conv(
				nr_seq_proc_interno_p, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_existe_regra_w
from	ageint_regra_checklist
where	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = '')) and
		((ie_tipo_convenio = Obter_Tipo_Convenio(cd_convenio_w)) or (coalesce(ie_tipo_convenio::text, '') = '')) and
		((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = '')) and
		((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = '')) and							
		((cd_area_procedimento = obter_area_procedimento(cd_procedimento_w, ie_origem_proced_w)) or (coalesce(cd_area_procedimento::text, '') = '')) and 
		((cd_especialidade = obter_especialidade_proced(cd_procedimento_w, ie_origem_proced_w)) or (coalesce(cd_especialidade::text, '') = '')) and 
		((cd_grupo_proc = obter_grupo_procedimento(cd_procedimento_w, ie_origem_proced_w,'C')) or (coalesce(cd_grupo_proc::text, '') = '')) and 
		((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = '')) and 
		((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = ''))) and 
		((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) and
		((cd_especialidade_item = cd_especialidade_p) or (coalesce(cd_especialidade_item::text, '') = ''))		   
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p;

if (ie_existe_regra_w = 'S') then

	open	c01;
	loop
	fetch	c01 into nr_seq_grupo_check_list_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		
		begin

		select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
		into STRICT	ie_retorno_w
		from	ageint_check_list_pac_item_v a
		where	nr_seq_ageint = nr_seq_ageint_p
		and	a.nr_seq_grupo = nr_seq_grupo_check_list_w;

		end;
	end loop;
	close c01;
else
	ie_retorno_w := 'N';
	
end if;
	

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_obter_se_proc_check (nr_seq_proc_interno_p bigint, nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, cd_especialidade_p bigint default null) FROM PUBLIC;

