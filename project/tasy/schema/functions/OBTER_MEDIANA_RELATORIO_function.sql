-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_mediana_relatorio (dt_inicial_p timestamp, dt_final_p timestamp, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/*
ie_opcao_p
 MD - Matrícula / Diagnóstico
 DT - Diagnóstico / Tratamento
 MT - Matrícula / Tratamento
*/
qt_mat_diag_w	bigint;
vl_contador_w	bigint;
vl_result_w	bigint;
vl_par1_w	bigint;
vl_par2_w	bigint;

c01 CURSOR FOR
	SELECT *
	from   (SELECT	trunc((dt_preench_ficha) - (dt_diagnostico)) qt_mat_diag
		from	can_ficha_admissao
	   	where	dt_diagnostico between dt_inicial_p AND dt_final_p
	   	order by	1) alias3 LIMIT (-1);

c02 CURSOR FOR
	SELECT	*
	from	(SELECT trunc((dt_preench_ficha) - (dt_diagnostico)) qt_mat_diag
		from	can_ficha_admissao
	   	where	dt_diagnostico BETWEEN dt_inicial_p AND dt_final_p
	   	order by	1) alias3 LIMIT (-1);

c03 CURSOR FOR
	SELECT *
	from   (SELECT	trunc((dt_diagnostico) - (dt_inicio_trat)) qt_mat_diag
		from	can_ficha_admissao
	   	where	dt_diagnostico between dt_inicial_p AND dt_final_p
	   	order by	1) alias3 LIMIT (-1);

c04 CURSOR FOR
	SELECT	*
	from	(SELECT	trunc((dt_diagnostico) - (dt_inicio_trat)) qt_mat_diag
		from	can_ficha_admissao
	   	where	dt_diagnostico BETWEEN dt_inicial_p AND dt_final_p
	   	order by	1) alias3 LIMIT (-1);

c05 CURSOR FOR
	SELECT *
	from   (SELECT	trunc((dt_preench_ficha) - (dt_inicio_trat)) qt_mat_diag
		from	can_ficha_admissao
	   	where	dt_diagnostico between dt_inicial_p AND dt_final_p
	   	order by	1) alias3 LIMIT (-1);

c06 CURSOR FOR
	SELECT	*
	from	(SELECT trunc((dt_preench_ficha) - (dt_inicio_trat)) qt_mat_diag
		from	can_ficha_admissao
	   	where	dt_diagnostico BETWEEN dt_inicial_p AND dt_final_p
	   	order by	1) alias3 LIMIT (-1);





BEGIN

if (ie_opcao_p = 'MD') then

	select	count(trunc((dt_diagnostico) - (dt_inicio_trat))) qt_mat_diag
	into STRICT	qt_mat_diag_w
	from	can_ficha_admissao
	where	dt_diagnostico between dt_inicial_p and dt_final_p
	order by 1;

	select	mod(qt_mat_diag_w,2)
	into STRICT	vl_contador_w
	;

	if (vl_contador_w = 0) then

		open c01;
		loop
		fetch c01 into vl_par1_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
		end loop;

		close c01;


		open c02;
		loop
		fetch c02 into vl_par2_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
		end loop;

		close c02;


	select	dividir((vl_par1_w + vl_par2_w), 2)
	into STRICT	vl_result_w
	;

	elsif (vl_contador_w = 1) then

		open c01;
		loop
		fetch c01 into vl_result_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		end loop;

	end if;

elsif (ie_opcao_p = 'DT') then

	select	count(trunc((dt_preench_ficha) - (dt_inicio_trat))) qt_mat_diag
	into STRICT	qt_mat_diag_w
	from	can_ficha_admissao
	where	dt_diagnostico between dt_inicial_p and dt_final_p
	order by 1;

	select	mod(qt_mat_diag_w,2)
	into STRICT	vl_contador_w
	;

	if (vl_contador_w = 0) then

		open c03;
		loop
		fetch c03 into vl_par1_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
		end loop;

		close c03;


		open c04;
		loop
		fetch c04 into vl_par2_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
		end loop;

		close c04;


	select	dividir((vl_par1_w + vl_par2_w), 2)
	into STRICT	vl_result_w
	;

	elsif (vl_contador_w = 1) then

		open c03;
		loop
		fetch c03 into vl_result_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		end loop;

	end if;

elsif (ie_opcao_p = 'MT') then

	select	count(trunc((dt_preench_ficha) - (dt_diagnostico))) qt_mat_diag
	into STRICT	qt_mat_diag_w
	from	can_ficha_admissao
	where	dt_diagnostico between dt_inicial_p and dt_final_p
	order by 1;

	select	mod(qt_mat_diag_w,2)
	into STRICT	vl_contador_w
	;

	if (vl_contador_w = 0) then

		open c05;
		loop
		fetch c05 into vl_par1_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
		end loop;

		close c05;


		open c06;
		loop
		fetch c06 into vl_par2_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */
		end loop;

		close c06;


	select	dividir((vl_par1_w + vl_par2_w), 2)
	into STRICT	vl_result_w
	;

	elsif (vl_contador_w = 1) then

		open c05;
		loop
		fetch c05 into vl_result_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
		end loop;

	end if;

end if;


RETURN vl_result_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_mediana_relatorio (dt_inicial_p timestamp, dt_final_p timestamp, ie_opcao_p text) FROM PUBLIC;

