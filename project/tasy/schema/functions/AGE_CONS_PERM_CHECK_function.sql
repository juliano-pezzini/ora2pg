-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION age_cons_perm_check (cd_agenda_p bigint, cd_pessoa_fisica_p text, cd_setor_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

ds_retorno_w		varchar(1) :=	'N';
ie_agenda_w			varchar(1);
cd_pesso_fisica_w	usuario.cd_pessoa_fisica%type;
cd_med_espec_w		varchar(1000);


BEGIN

	if (coalesce(cd_agenda_p::text, '') = '') then
		goto final;
	end if;

    select	max(b.cd_pessoa_fisica)
    into STRICT	cd_pesso_fisica_w
    from	usuario b
    where	b.nm_usuario = wheb_usuario_pck.get_nm_usuario;

    if ((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and cd_pessoa_fisica_p = cd_pesso_fisica_w) then
        ds_retorno_w := 'S';
        goto final;
    end if;

	select	coalesce(max('N'), 'S')
	into STRICT	ds_retorno_w
	from	med_permissao a
	where	a.cd_agenda =	cd_agenda_p;

	if (ds_retorno_w = 'S')	then
		goto final;
	end if;

	begin
		 select	ie_agenda
        into STRICT    ie_agenda_w
        from (SELECT	a.nr_sequencia, a.ie_agenda
				from	med_permissao a
				where	a.cd_agenda = cd_agenda_p
				and		a.cd_pessoa_fisica = cd_pesso_fisica_w
				and (coalesce(a.cd_perfil::text, '') = '' or a.cd_perfil = wheb_usuario_pck.get_cd_perfil)
				and (coalesce(a.cd_especialidade::text, '') = '' or a.cd_especialidade IN (select	b.cd_especialidade
                                from	medico_especialidade b
                                where	b.cd_pessoa_fisica = cd_pesso_fisica_w))
				and (coalesce(a.cd_setor_atendimento::text, '') = '' or a.cd_setor_atendimento = cd_setor_atendimento_p)
				order   by nr_sequencia desc
		) alias7 LIMIT 1;

		if (ie_agenda_w <> 'N')	then
			ds_retorno_w := 'S';
			goto final;
		else
			ds_retorno_w := 'N';
			goto final;
		end if;
		exception when no_data_found then
			ds_retorno_w := 'N';
	end;

	begin

		select	ie_agenda
        into STRICT    ie_agenda_w
        from (SELECT	a.nr_sequencia, a.ie_agenda
				from	med_permissao a
				where	a.cd_agenda =   cd_agenda_p
				and		a.cd_perfil =	wheb_usuario_pck.get_cd_perfil
				and (coalesce(a.cd_pessoa_fisica::text, '') = '' or a.cd_pessoa_fisica = cd_pesso_fisica_w)
				and (coalesce(a.cd_especialidade::text, '') = '' or a.cd_especialidade IN (select    b.cd_especialidade
                                from	medico_especialidade b
                                where	b.cd_pessoa_fisica = cd_pesso_fisica_w))
				and (coalesce(a.cd_setor_atendimento::text, '') = '' or a.cd_setor_atendimento = cd_setor_atendimento_p)
				order   by nr_sequencia desc
		) alias7 LIMIT 1;

		if (ie_agenda_w <> 'N') then
			ds_retorno_w := 'S';
			goto final;
		else
			ds_retorno_w := 'N';
			goto final;
		end if;
		exception when no_data_found then
			ds_retorno_w := 'N';
	end;

	begin

        select  ie_agenda
        into STRICT    ie_agenda_w
        from (SELECT	a.nr_sequencia, a.ie_agenda
				from	med_permissao a
				where	a.cd_agenda =	cd_agenda_p
				and		a.cd_especialidade IN (select	b.cd_especialidade
                                from	medico_especialidade b
                                where	b.cd_pessoa_fisica = cd_pesso_fisica_w)
				and (coalesce(a.cd_pessoa_fisica::text, '') = '' or a.cd_pessoa_fisica = cd_pesso_fisica_w)
				and (coalesce(a.cd_perfil::text, '') = '' or a.cd_perfil = wheb_usuario_pck.get_cd_perfil)
				and (coalesce(a.cd_setor_atendimento::text, '') = '' or a.cd_setor_atendimento = cd_setor_atendimento_p)
				order   by a.nr_sequencia desc
		) alias7 LIMIT 1;

		if (ie_agenda_w <> 'N') then
			ds_retorno_w := 'S';
			goto final;
		else
			ds_retorno_w := 'N';
			goto final;
		end if;
		exception when no_data_found then
			ds_retorno_w := 'N';
	end;

	begin

        select  ie_agenda
        into STRICT    ie_agenda_w
        from (SELECT	a.ie_agenda
				from	med_permissao a
				where	a.cd_agenda =	cd_agenda_p
				and		a.cd_setor_atendimento =	cd_setor_atendimento_p
				and (coalesce(a.cd_pessoa_fisica::text, '') = '' or a.cd_pessoa_fisica = cd_pesso_fisica_w)
				and (coalesce(a.cd_perfil::text, '') = '' or a.cd_perfil = wheb_usuario_pck.get_cd_perfil)
				and (coalesce(a.cd_especialidade::text, '') = '' or a.cd_especialidade in (select	b.cd_especialidade
                                from	medico_especialidade b
                                where	b.cd_pessoa_fisica = cd_pesso_fisica_w))
				order   by a.nr_sequencia desc
		) alias7 LIMIT 1;

		if (ie_agenda_w <> 'N') then
			ds_retorno_w := 'S';
		else
			ds_retorno_w := 'N';
		end if;
		exception when no_data_found then
			ds_retorno_w := 'N';
    end;

	<<final>>
	return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION age_cons_perm_check (cd_agenda_p bigint, cd_pessoa_fisica_p text, cd_setor_atendimento_p bigint) FROM PUBLIC;

