-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_unidade_periodo ( nr_sequencia_p bigint, cd_setor_desejado_p bigint, dt_prevista_p timestamp, qt_dia_p bigint, ie_consiste_p text, nr_seq_interno_p bigint) RETURNS varchar AS $body$
DECLARE

qt_reg_w		bigint;
ie_retorno_w		varchar(1)	:= 'S';
cd_unidade_compl_w	varchar(10);
cd_unidade_basica_w	varchar(10);
nr_atendimento_w	bigint;
dt_previsto_alta_w	timestamp		:= null;


BEGIN 
 
if (ie_consiste_p = 'S') then 
 
	select	cd_unidade_basica, 
		cd_unidade_compl, 
		nr_atendimento 
	into STRICT	cd_unidade_basica_w, 
		cd_unidade_compl_w, 
		nr_atendimento_w 
	from	unidade_atendimento 
	where	nr_seq_interno = nr_seq_interno_p;
 
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
		 
		select	dt_previsto_alta 
		into STRICT	dt_previsto_alta_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w;
 
		if (dt_previsto_alta_w IS NOT NULL AND dt_previsto_alta_w::text <> '') then 
	 
			if (dt_previsto_alta_w <= dt_prevista_p) then 
	 
				SELECT	COUNT(*) 
				into STRICT	qt_reg_w 
				FROM	gestao_vaga 
				WHERE	cd_setor_desejado	= cd_setor_desejado_p 
				AND	cd_unidade_basica	= cd_unidade_basica_w 
				AND	cd_unidade_compl	= cd_unidade_compl_w 
				and	nr_sequencia		<> nr_sequencia_p 
				AND	((TRUNC(dt_prevista_p)			BETWEEN TRUNC(dt_prevista) AND TRUNC(dt_prevista + qt_dia-1)) 
				OR (TRUNC(dt_prevista_p + qt_dia_p-1)	BETWEEN TRUNC(dt_prevista) AND TRUNC(dt_prevista + qt_dia-1)));
			else 
				ie_retorno_W	:= 'N';
			end	if;
		else 
			ie_retorno_W	:= 'N';
		end	if;
		 
	else 
		 
		SELECT	COUNT(*) 
		into STRICT	qt_reg_w 
		FROM	gestao_vaga 
		WHERE	cd_setor_desejado	= cd_setor_desejado_p 
		AND	cd_unidade_basica	= cd_unidade_basica_w 
		AND	cd_unidade_compl	= cd_unidade_compl_w 
		and	nr_sequencia		<> nr_sequencia_p 
		AND	((TRUNC(dt_prevista_p)			BETWEEN TRUNC(dt_prevista) AND TRUNC(dt_prevista + qt_dia-1)) 
		OR (TRUNC(dt_prevista_p + qt_dia_p-1)	BETWEEN TRUNC(dt_prevista) AND TRUNC(dt_prevista + qt_dia-1)));
 
	end	if;
 
	if (qt_reg_w > 0) then 
		ie_retorno_w := 'N';
	end	if;
 
end	if;
 
return	ie_retorno_w;
	 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_unidade_periodo ( nr_sequencia_p bigint, cd_setor_desejado_p bigint, dt_prevista_p timestamp, qt_dia_p bigint, ie_consiste_p text, nr_seq_interno_p bigint) FROM PUBLIC;

