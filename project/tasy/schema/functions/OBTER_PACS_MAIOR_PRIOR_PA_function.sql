-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_pacs_maior_prior_pa ( nr_atendimento_p bigint, ie_ordenacao_p text, qt_horas_p bigint, cd_estabelecimento_p bigint, ie_tipo_guia_p text default null, ie_clinica_p bigint default null, cd_setor_atendimento_p bigint default null, ds_mult_selecao_p text default null, ds_paciente_group_p text default null, cd_medico_resp_p text default null) RETURNS varchar AS $body$
DECLARE

			
ds_sql_w			varchar(32000);
guampa_w		varchar(10) := chr(39);
ds_order_by_w		varchar(2000);
retorno_w			integer;
C04			integer;
nr_atendimento_w		bigint;
nm_pessoa_fisica_w	varchar(80);
ds_lista_pac_w		varchar(2000);
ie_chamado_w		varchar(10);
dt_atend_medico_w	timestamp;
ie_triagem_w		varchar(10);
ie_ordenacao_w		varchar(10)	:= ie_ordenacao_p;
ie_ordenacao_ww		varchar(10);
ie_regra_assumir_pa_w	bigint;
cd_medico_usuario_w		varchar(10);
cd_medico_resp_atend_w	varchar(10);
ie_consiste_w		varchar(2) := 'N';
ie_param_161_w      	varchar(2) := 'N';


BEGIN

ie_param_161_w := Obter_param_Usuario(935, 161, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_param_161_w);

if (coalesce(ie_param_161_w, 'N') <> 'N') then

ds_sql_w	:=	'	select	a.nr_atendimento,a.nm_pessoa_fisica,nvl(ie_chamado,''N'') ie_chamado, decode(a.ie_prioridade,999,0,ie_prioridade) ie_sem_prioridade, Obter_seq_apres_pa(a.ie_status,a.cd_estabelecimento) NR_SEQ_APRESENT '||
				'	from	PEP_ATENDIMENTO_PS_V a '||
				'	where	a.dt_entrada between :DT_ENTRADA and sysdate '||
				'	and		a.dt_alta_interno = TO_DATE('||guampa_w||'30/12/2999'||guampa_w||','||guampa_w||'dd/mm/yyyy'||guampa_w||') '||
				'	and		a.dt_atend_medico is null '||
				'	and		nvl(ie_chamado,''N'')	<> ''X'' '||
				'	and		cd_estabelecimento = :CD_ESTABELECIMENTO '||
				'	and		dt_chamada_paciente is null ';
				
if (ie_tipo_guia_p IS NOT NULL AND ie_tipo_guia_p::text <> '') then
	ds_sql_w	:= ds_sql_w||
		'	and		a.ie_tipo_guia = :ie_tipo_guia ';
end if;

if (ie_clinica_p IS NOT NULL AND ie_clinica_p::text <> '') then
	ds_sql_w	:= ds_sql_w||
		'	and		a.ie_clinica = :ie_clinica ';
end if;

if (ds_paciente_group_p = 1) and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
	ds_sql_w	:= ds_sql_w||
		'	and		a.cd_setor_atendimento = :cd_setor_atendimento ';
end if;

if (ds_mult_selecao_p IS NOT NULL AND ds_mult_selecao_p::text <> '') then
	ds_sql_w	:= ds_sql_w||' '|| ds_mult_selecao_p;
end if;

if (ds_paciente_group_p = 0) then
   ds_sql_w	:= ds_sql_w||
		'	 and a.cd_medico_resp = :cd_medico_resp';
end if;

Select 	count(*)
into STRICT	ie_regra_assumir_pa_w
from	regra_assumir_pac_pa;

if (ie_regra_assumir_pa_w > 0 ) then	
		
	Select	max(cd_medico_resp)				
	into STRICT	cd_medico_resp_atend_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;	
	
	if (cd_medico_resp_atend_w = cd_medico_resp_p) then
		
		ie_consiste_w := 'S';
		
		 ds_sql_w	:= ds_sql_w||
		'	 and a.cd_medico_resp = :cd_medico_resp ';		
	
	else
	
		ie_consiste_w := 'S';
	
		ds_sql_w	:= ds_sql_w||
	'	 and ((Obter_se_regra_assumir_pa(a.cd_medico_resp) = ''S'') or (a.cd_medico_resp = :cd_medico_resp))';
	
	end if;		
		
	
end if;

ie_triagem_w := Obter_param_Usuario(935, 3, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_triagem_w);
ie_ordenacao_ww := Obter_param_Usuario(935, 174, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_ordenacao_ww);

if (ie_triagem_w	='N') then
	ds_sql_w	:= ds_sql_w||
		'	and	a.hr_fim_enfermagem is not null ';
end if;
				
ie_ordenacao_w	:= coalesce(ie_ordenacao_ww,ie_ordenacao_w);
	
if (ie_ordenacao_w = 'N') then
	ds_order_by_w	:=' order by dt_entrada ';
elsif (ie_ordenacao_w = 'S') then
	ds_order_by_w	:=' order by ie_prioridade, dt_entrada ';
elsif (ie_ordenacao_w = 'NUNP') then
	ds_order_by_w	:=' order by ie_prioridade,IE_PRIORIDADE_CLASSIF, dt_entrada';
elsif (ie_ordenacao_w = 'D') then
	ds_order_by_w	:=' order by dt_entrada desc ';
elsif (ie_ordenacao_w = 'P') then
	ds_order_by_w	:=' order by nm_pessoa_fisica ';
elsif (ie_ordenacao_w = 'AC') then
	ds_order_by_w	:=' order by nr_seq_apresent, dt_entrada ';
elsif (ie_ordenacao_w = 'AD') then
	ds_order_by_w	:=' order by nr_seq_apresent, dt_entrada desc ';
elsif (ie_ordenacao_w = 'IC') then
	ds_order_by_w	:=' order by dt_atend_medico, dt_entrada ';
elsif (ie_ordenacao_w = 'FC') then
	ds_order_by_w	:=' order by a.dt_fim_consulta, dt_entrada ';
elsif (ie_ordenacao_w = 'NC') then
	ds_order_by_w	:='order by ie_prioridade, dt_atend_medico desc';
elsif (ie_ordenacao_w = 'ICNUDE') then
	ds_order_by_w	:=' ORDER BY dt_atend_medico, ie_sem_prioridade desc, dt_entrada';
elsif (ie_ordenacao_w = 'NA') then
	ds_order_by_w	:=' ORDER BY ie_sem_prioridade desc, dt_entrada';
elsif (ie_ordenacao_w = 'NPDE') then
	ds_order_by_w	:=' Order by nvl(a.ie_prioridade_classif,0) desc, dt_entrada';
elsif (ie_ordenacao_w = 'CADT') then
	ds_order_by_w	:=' Order by IE_CARATER_INTER_SUS, dt_entrada';
elsif (ie_ordenacao_w = 'PHICDE') then
	ds_order_by_w	:=' Order by ie_prioridade DESC ,NVL(HR_INICIO_CONSULTA,''23:59'') DESC,dt_entrada';
elsif (ie_ordenacao_w = 'NUFE') then
	ds_order_by_w	:=' order by ie_prioridade,dt_fim_triagem,dt_entrada';
elsif (ie_ordenacao_w = 'IFPCE') then
	ds_order_by_w	:=' Order by decode(dt_atend_medico,null,1,0), decode(dt_fim_triagem,null,1,0), ie_prioridade desc,ie_prioridade_classif,dt_entrada';
elsif (ie_ordenacao_w = 'NUDD') then
	ds_order_by_w	:=' order by ie_prioridade, dt_entrada desc';
elsif (ie_ordenacao_w = 'NCAC') then
	ds_order_by_w	:=' order by ie_prioridade, dt_entrada';
elsif (ie_ordenacao_w = 'NUNPSD') then
	ds_order_by_w	:=' order by ie_prioridade desc, ie_prioridade_classif desc, obter_seq_apres_pa(ie_status, cd_estabelecimento), dt_entrada';
elsif (ie_ordenacao_w = 'REGRA') then
	ds_order_by_w	:= obter_regra_ordenacao_pa(wheb_usuario_pck.get_nm_usuario);
elsif (ie_ordenacao_w = 'FCESNN') then
	ds_order_by_w 	:= ' order by decode(hr_fim_enfermagem,null,to_char(ie_prior_classif_atend) , ie_prioridade), decode(hr_fim_enfermagem,null, to_char(dt_entrada,''dd/mm/yyyy hh24:mi:ss''), ie_prioridade_classif), dt_entrada ';
end if;


ds_sql_w	:= ds_sql_w||ds_order_by_w;

C04 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C04, ds_sql_w, dbms_sql.Native);

DBMS_SQL.DEFINE_COLUMN(C04,1,nr_atendimento_w);
DBMS_SQL.DEFINE_COLUMN(C04,2,nm_pessoa_fisica_w,80);
DBMS_SQL.DEFINE_COLUMN(C04,3,ie_chamado_w,10);

DBMS_SQL.BIND_VARIABLE(C04,'CD_ESTABELECIMENTO', cd_estabelecimento_p);
DBMS_SQL.BIND_VARIABLE(C04,'DT_ENTRADA', (clock_timestamp() - (qt_horas_p / 24)));

if (ie_tipo_guia_p IS NOT NULL AND ie_tipo_guia_p::text <> '') then
	DBMS_SQL.BIND_VARIABLE(C04,'IE_TIPO_GUIA', ie_tipo_guia_p);
end if;

if (ie_clinica_p IS NOT NULL AND ie_clinica_p::text <> '') then
	DBMS_SQL.BIND_VARIABLE(C04,'IE_CLINICA', ie_clinica_p);
end if;

if (ds_paciente_group_p = 1) and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
	DBMS_SQL.BIND_VARIABLE(C04,'CD_SETOR_ATENDIMENTO', cd_setor_atendimento_p);
end if;


if (ds_paciente_group_p = 0) or (ie_consiste_w = 'S') then
	DBMS_SQL.BIND_VARIABLE(C04,'CD_MEDICO_RESP', cd_medico_resp_p);
end if;

retorno_w := DBMS_SQL.execute(C04);

Select	dt_atend_medico
into STRICT	dt_atend_medico_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

if (coalesce(dt_atend_medico_w::text, '') = '') then

	while( DBMS_SQL.FETCH_ROWS(C04) > 0 ) loop
		begin
		DBMS_SQL.COLUMN_VALUE(C04,1,nr_atendimento_w);
		DBMS_SQL.COLUMN_VALUE(C04,2,nm_pessoa_fisica_w);
		DBMS_SQL.COLUMN_VALUE(C04,3,ie_chamado_w);
		
		
		
		if (nr_atendimento_w	= nr_atendimento_p) then
			exit;
		end if;
		
		if (ie_chamado_w	<> 'C') then
		
			if (coalesce(ds_lista_pac_w::text, '') = '') then
				ds_lista_pac_w	:= substr( nr_atendimento_w||' - '|| nm_pessoa_fisica_w,1,2000);
			else
				ds_lista_pac_w	:= substr(ds_lista_pac_w||chr(13)||chr(10)||  nr_atendimento_w||' - '|| nm_pessoa_fisica_w,1,2000);
			end if;
		end if;
		end;
	end loop;
end if;

DBMS_SQL.CLOSE_CURSOR(C04);

end if;

return	trim(both ds_lista_pac_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_pacs_maior_prior_pa ( nr_atendimento_p bigint, ie_ordenacao_p text, qt_horas_p bigint, cd_estabelecimento_p bigint, ie_tipo_guia_p text default null, ie_clinica_p bigint default null, cd_setor_atendimento_p bigint default null, ds_mult_selecao_p text default null, ds_paciente_group_p text default null, cd_medico_resp_p text default null) FROM PUBLIC;

