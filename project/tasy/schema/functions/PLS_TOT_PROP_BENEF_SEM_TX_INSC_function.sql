-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_tot_prop_benef_sem_tx_insc ( nr_seq_proposta_benef_p bigint) RETURNS bigint AS $body$
DECLARE

 
				 
vl_retorno_w			double precision := 0;
nr_seq_tabela_sca_w		bigint;
vl_bonificacao_w		double precision := 0;
vl_tot_bonificacao_w		double precision := 0;
vl_bonific_w			double precision := 0;
tx_bonificacao_w		double precision;
qt_idade_benef_w		smallint;
cd_beneficiario_w		varchar(15);
nr_seq_tabela_benef_w		bigint;
vl_proposta_benef_w		double precision := 0;
vl_proposta_sca_w		double precision := 0;
vl_tot_sca_w			double precision := 0;
nr_seq_bonificacao_w		bigint;
nr_seq_sca_w			bigint;
nr_seq_proposta_w		bigint;
nr_seq_proposta_bonif_w		bigint;
vl_bonificacao_propos_w		double precision := 0;
vl_tot_bonif_propos_w		double precision := 0;
tx_desconto_w			double precision := 0;
nr_seq_regra_desconto_w		bigint;
cd_estabelecimento_w		integer;
dt_inicio_proposta_w		timestamp;
nr_seq_regra_w			bigint;
nr_seq_plano_w			bigint;
ie_tipo_proposta_w		bigint;
vl_total_agravo_w		double precision;
ie_grau_parentesco_w		varchar(2);
ie_tipo_item_w			varchar(255);

 
C00 CURSOR FOR 
	SELECT	a.nr_seq_bonificacao 
	from	pls_bonificacao_vinculo		a, 
		pls_proposta_beneficiario	b 
	where	a.nr_seq_segurado_prop	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_proposta_benef_p;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_sca_vinculo			a, 
		pls_proposta_beneficiario	b 
	where	a.nr_seq_benef_proposta	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_proposta_benef_p;

C02 CURSOR FOR 
	SELECT	coalesce(c.vl_bonificacao,coalesce(a.vl_bonificacao,0)), 
		coalesce(c.tx_bonificacao,coalesce(a.tx_bonificacao,0)), 
		a.ie_tipo_item 
	from	pls_bonificacao_regra	a, 
		pls_bonificacao		b, 
		pls_bonificacao_vinculo	c, 
		pls_proposta_beneficiario d 
	where	a.nr_seq_bonificacao	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_bonificacao_w 
	and	c.nr_seq_bonificacao	= b.nr_sequencia 
	and	c.nr_seq_segurado_prop	= d.nr_sequencia 
	and	d.nr_sequencia		= nr_seq_proposta_benef_p 
	and	a.ie_tipo_regra		= 'M' 
	and	1 between coalesce(nr_parcela_inicial,1) and coalesce(nr_parcela_final,1);/*Lepinski - OS 331378 - Considerar somente bonificação para a primeira parcela */
 
 
/*Cursor C03 is 
	select	pls_obter_dados_agravo(nr_seq_agravo,'VT') 
	from	pls_proposta_benef_agravo 
	where	nr_seq_proposta_benef	= nr_seq_proposta_benef_p; */
	 
C04 CURSOR FOR 
	SELECT	a.nr_seq_bonificacao 
	from	pls_bonificacao_vinculo		a, 
		pls_proposta_adesao		b 
	where	a.nr_seq_proposta		= b.nr_sequencia 
	and	b.nr_sequencia			= nr_seq_proposta_w;


BEGIN 
 
select	b.cd_beneficiario, 
	b.nr_seq_proposta 
into STRICT	cd_beneficiario_w, 
	nr_seq_proposta_w 
from	pls_proposta_beneficiario	b, 
	pls_proposta_adesao		a 
where	a.nr_sequencia	= b.nr_seq_proposta 
and	b.nr_sequencia	= nr_seq_proposta_benef_p 
and	((coalesce(b.dt_cancelamento::text, '') = '') 
or (b.dt_cancelamento > a.dt_inicio_proposta));
 
select	ie_tipo_proposta 
into STRICT	ie_tipo_proposta_w 
from	pls_proposta_adesao 
where 	nr_sequencia = nr_seq_proposta_w;
 
select	substr(Obter_Idade_PF(cd_beneficiario_w,clock_timestamp(),'A'),1,3) 
into STRICT	qt_idade_benef_w
;
 
if (ie_tipo_proposta_w = 5) then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_sca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin				 
		select	nr_seq_tabela 
		into STRICT	nr_seq_tabela_sca_w 
		from	pls_sca_vinculo 
		where	nr_sequencia	= nr_seq_sca_w;
		 
		select	a.vl_preco_atual 
		into STRICT	vl_proposta_sca_w 
		from	pls_plano_preco		a, 
			pls_tabela_preco	b 
		where	a.nr_seq_tabela	= b.nr_sequencia 
		and	b.nr_sequencia	= nr_seq_tabela_sca_w 
		and	qt_idade_benef_w	between a.qt_idade_inicial and a.qt_idade_final;
					 
		vl_tot_sca_w	:= vl_tot_sca_w + vl_proposta_sca_w;
		end;
	end loop;
	close C01;
	 
	vl_retorno_w := vl_tot_sca_w;
else 
 
	ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_proposta_benef_p,'P'),1,2),'X');
	 
	select	nr_seq_plano, 
		nr_seq_tabela 
	into STRICT	nr_seq_plano_w, 
		nr_seq_tabela_benef_w 
	from	pls_proposta_beneficiario 
	where	nr_sequencia = nr_seq_proposta_benef_p;
	 
	select	dt_inicio_proposta 
	into STRICT	dt_inicio_proposta_w 
	from	pls_proposta_adesao 
	where	nr_sequencia	= nr_seq_proposta_w;
 
	select	a.vl_preco_atual 
	into STRICT	vl_proposta_benef_w 
	from	pls_plano_preco		a, 
		pls_tabela_preco	b 
	where	a.nr_seq_tabela	= b.nr_sequencia 
	and	b.nr_sequencia	= nr_seq_tabela_benef_w 
	and	qt_idade_benef_w between a.qt_idade_inicial and a.qt_idade_final 
	and	coalesce(a.ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w;
 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	pls_proposta_adesao 
	where	nr_sequencia	= nr_seq_proposta_w;
 
	SELECT * FROM pls_obter_regra_desconto(nr_seq_proposta_benef_p, 2, cd_estabelecimento_w, tx_desconto_w, nr_seq_regra_desconto_w) INTO STRICT tx_desconto_w, nr_seq_regra_desconto_w;
 
	vl_proposta_benef_w	:= vl_proposta_benef_w - dividir((vl_proposta_benef_w * tx_desconto_w), 100);
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_sca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		select	nr_seq_tabela 
		into STRICT	nr_seq_tabela_sca_w 
		from	pls_sca_vinculo 
		where	nr_sequencia	= nr_seq_sca_w;
 
		select	a.vl_preco_atual 
		into STRICT	vl_proposta_sca_w 
		from	pls_plano_preco		a, 
			pls_tabela_preco	b 
		where	a.nr_seq_tabela	= b.nr_sequencia 
		and	b.nr_sequencia	= nr_seq_tabela_sca_w 
		and	qt_idade_benef_w	between a.qt_idade_inicial and a.qt_idade_final;
		 
		vl_tot_sca_w	:= vl_tot_sca_w + vl_proposta_sca_w;
		end;
	end loop;
	close C01;
	 
	open C00;
	loop 
	fetch C00 into	 
		nr_seq_bonificacao_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin 
			 
		open C02;
		loop 
		fetch C02 into	 
			vl_bonificacao_w, 
			tx_bonificacao_w, 
			ie_tipo_item_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin		 
			if (pls_obter_se_item_lista(ie_tipo_item_w,'1') = 'S') then 
				vl_bonific_w	:= (((tx_bonificacao_w /100) * vl_proposta_benef_w) + vl_bonificacao_w);
				vl_tot_bonificacao_w	:= vl_tot_bonificacao_w + coalesce(vl_bonific_w,0);
			end if;
			 
			if (pls_obter_se_item_lista(ie_tipo_item_w,'15') = 'S') then 
				vl_bonific_w	:= (((tx_bonificacao_w /100) * vl_tot_sca_w) + vl_bonificacao_w);
				vl_tot_bonificacao_w	:= vl_tot_bonificacao_w + coalesce(vl_bonific_w,0);
			end if;
			 
			end;
		end loop;
		close C02;
				 
	end;
	end loop;
	close C00;
	 
	open C04;
	loop 
	fetch C04 into	 
		nr_seq_proposta_bonif_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		vl_bonificacao_propos_w	:= pls_obter_valor_bonif_tot_prop(nr_seq_proposta_w,nr_seq_proposta_bonif_w,nr_seq_proposta_benef_p);
		vl_tot_bonif_propos_w	:= vl_tot_bonif_propos_w + vl_bonificacao_propos_w;
		end;
	end loop;
	close C04;
	 
	vl_retorno_w		:= vl_tot_sca_w + ((vl_tot_bonificacao_w)*-1) + vl_proposta_benef_w + vl_tot_bonif_propos_w;
 
end if;
	 
return	vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_tot_prop_benef_sem_tx_insc ( nr_seq_proposta_benef_p bigint) FROM PUBLIC;

