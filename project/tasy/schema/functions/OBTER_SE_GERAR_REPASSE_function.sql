-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_gerar_repasse (nr_repasse_terceiro_p bigint, nr_seq_proc_repasse_p bigint, nr_seq_mat_repasse_p bigint) RETURNS varchar AS $body$
DECLARE

 
/* 
procedure para identificar se o proc/mat repasse pode ser gerado para o repasse 
conforme regras adicionai de geração de repasse 
*/
 
 
 
CD_REGRA_w			varchar(255);
IE_TIPO_CONVENIO_w		varchar(255);
CD_CONVENIO_w			varchar(255);
cd_convenio_fora_w		varchar(255);
IE_TIPO_ATENDIMENTO_w		varchar(255);
cd_regra_aceita_w			varchar(2000);
ie_tipo_convenio_aceito_w		varchar(2000);
cd_convenio_aceito_w		varchar(2000);
ie_tipo_atend_aceito_w		varchar(2000);
cd_plano_w			varchar(255);
cd_plano_aceito_w			varchar(2000);
cd_setor_aceito_w			varchar(2000);
ds_protocolos_w			varchar(255);
ds_protocolos_aceito_w		varchar(2000);
cd_medico_executor_w		varchar(255);
cd_medico_executor_aceito_w	varchar(2000);
cd_convenio_fora_aceito_w	varchar(2000);
cont_w				bigint;
cd_setor_atendimento_w		bigint;
dt_prot_inicial_w			timestamp;
dt_prot_final_w			timestamp;
dt_prot_par_inicial_w		timestamp;
dt_prot_par_final_w			timestamp;
dt_ditado_inicial_w			timestamp;
dt_ditado_final_w			timestamp;
qt_regra_w			bigint;
ie_retorno_w			varchar(1)	:= 'S';
cd_regra_fora_w			varchar(255);
cd_setor_atend_fora_w		varchar(255);
cd_regra_fora_aceito_w		varchar(2000);
cd_setor_atend_fora_aceito_w	varchar(2000);

 
c01 CURSOR FOR 
SELECT	CD_REGRA, 
	IE_TIPO_CONVENIO, 
	CD_CONVENIO, 
	IE_TIPO_ATENDIMENTO, 
	dt_prot_inicial, 
	dt_prot_final, 
	dt_prot_par_inicial, 
	dt_prot_par_final, 
	cd_plano, 
	cd_setor_atendimento, 
	ds_protocolos, 
	cd_medico_executor, 
	dt_ditado_inicial, 
	dt_ditado_final, 
	cd_convenio_fora, 
	to_char(cd_regra_fora), 
	to_char(cd_setor_atend_fora) 
from	repasse_terceiro_regra 
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;


BEGIN 
 
cd_regra_aceita_w		:= '';
ie_tipo_convenio_aceito_w	:= '';
cd_convenio_aceito_w		:= '';
ie_tipo_atend_aceito_w		:= '';
cd_setor_aceito_w		:= '';
ds_protocolos_aceito_w		:= '';
dt_prot_par_inicial_w		:= null;
dt_prot_par_final_w		:= null;
cd_regra_fora_aceito_w		:= '';
cd_setor_atend_fora_aceito_w	:= '';
 
select	count(*) 
into STRICT	qt_regra_w 
from	repasse_terceiro_regra a 
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p;
 
if (qt_regra_w	> 0) then 
	-- definir convenios, tipo atend, tipo conv, e regras permitidas 
	ie_retorno_w	:= 'N';
	open c01;
	loop 
	fetch c01 into 
		CD_REGRA_w, 
		IE_TIPO_CONVENIO_w, 
		CD_CONVENIO_w, 
		IE_TIPO_ATENDIMENTO_w, 
		dt_prot_inicial_w, 
		dt_prot_final_w, 
		dt_prot_par_inicial_w, 
		dt_prot_par_final_w, 
		cd_plano_w, 
		cd_setor_atendimento_w, 
		ds_protocolos_w, 
		cd_medico_executor_w, 
		dt_ditado_inicial_w, 
		dt_ditado_final_w, 
		cd_convenio_fora_w, 
		cd_regra_fora_w, 
		cd_setor_atend_fora_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
		if (CD_REGRA_w IS NOT NULL AND CD_REGRA_w::text <> '') then 
			cd_regra_aceita_w		:= substr(cd_regra_aceita_w || ' ' || CD_REGRA_w || ' ',1,2000);
		end if;
 
		if (IE_TIPO_CONVENIO_w IS NOT NULL AND IE_TIPO_CONVENIO_w::text <> '') then 
			ie_tipo_convenio_aceito_w	:= substr(ie_tipo_convenio_aceito_w || ' ' || IE_TIPO_CONVENIO_w || ' ',1,2000);
		end if;
 
		if (CD_CONVENIO_w IS NOT NULL AND CD_CONVENIO_w::text <> '') then 
			cd_convenio_aceito_w		:= substr(cd_convenio_aceito_w || ' ' || CD_CONVENIO_w || ' ',1,2000);
		end if;
 
		if (IE_TIPO_ATENDIMENTO_w IS NOT NULL AND IE_TIPO_ATENDIMENTO_w::text <> '') then 
			ie_tipo_atend_aceito_w		:= substr(ie_tipo_atend_aceito_w || ' ' || IE_TIPO_ATENDIMENTO_w || ' ',1,2000);
		end if;
 
		if (cd_plano_w IS NOT NULL AND cd_plano_w::text <> '') then 
			cd_plano_aceito_w		:= substr(cd_plano_aceito_w || ' ' || cd_plano_w || ' ',1,2000);
		end if;
 
		if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then 
			cd_setor_aceito_w		:= substr(cd_setor_aceito_w || ' ' || cd_setor_atendimento_w || ' ',1,2000);
		end if;
		 
		if (ds_protocolos_w IS NOT NULL AND ds_protocolos_w::text <> '') then 
			ds_protocolos_aceito_w		:= substr(ds_protocolos_aceito_w || ' ' || replace(ds_protocolos_w, ',', ' ') || ' ',1,2000);
		end if;
 
		if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then 
			cd_medico_executor_aceito_w	:= substr(cd_medico_executor_aceito_w || ' ' || cd_medico_executor_w || ' ',1,2000);
		end if;
 
		if (cd_convenio_fora_w IS NOT NULL AND cd_convenio_fora_w::text <> '') then 
			cd_convenio_fora_aceito_w	:= substr(cd_convenio_fora_aceito_w || ' ' || cd_convenio_fora_w || ' ',1,2000);
		end if;
		 
		if (cd_regra_fora_w IS NOT NULL AND cd_regra_fora_w::text <> '') then 
			cd_regra_fora_aceito_w		:= substr(cd_regra_fora_aceito_w || ' ' || cd_regra_fora_w || ' ',1,2000);
		end if;
		 
		if (cd_setor_atend_fora_w IS NOT NULL AND cd_setor_atend_fora_w::text <> '') then 
			cd_setor_atend_fora_aceito_w	:= substr(cd_setor_atend_fora_aceito_w || ' ' || cd_setor_atend_fora_w || ' ',1,2000);
		end if;
	end loop;
	close c01;
 
 
	-- identificar se o proc/mat repasse respeita as regras 
	cont_w		:= 0;
	if (coalesce(nr_seq_proc_repasse_p,0) > 0) then 
		select	count(*) 
		into STRICT	cont_w 
		FROM convenio e, atendimento_paciente d, procedimento_paciente b, procedimento_repasse a, conta_paciente c
LEFT OUTER JOIN protocolo_convenio f ON (c.nr_seq_protocolo = f.nr_seq_protocolo)
WHERE a.nr_seq_procedimento		= b.nr_sequencia and b.nr_interno_conta		= c.nr_interno_conta and c.nr_atendimento		= d.nr_atendimento and c.cd_convenio_parametro		= e.cd_convenio and ' ' || coalesce(cd_regra_aceita_w, a.cd_regra) || ' ' 			like '% ' || a.cd_regra || ' %' and ' ' || coalesce(ie_tipo_convenio_aceito_w, e.ie_tipo_convenio) || ' '	like '% ' || e.ie_tipo_convenio || ' %' and ' ' || coalesce(cd_convenio_aceito_w, e.cd_convenio) || ' ' 			like '% ' || e.cd_convenio || ' %' and ' ' || coalesce(ie_tipo_atend_aceito_w, d.ie_tipo_atendimento) || ' ' 	like '% ' || d.ie_tipo_atendimento || ' %' and (coalesce(dt_prot_inicial_w::text, '') = '' or dt_prot_inicial_w <= f.dt_mesano_referencia) and (coalesce(dt_prot_final_w::text, '') = '' or dt_prot_final_w >= f.dt_mesano_referencia) and (coalesce(dt_prot_par_inicial_w::text, '') = '' or dt_prot_par_inicial_w <= f.dt_mesano_ref_par) and (coalesce(dt_prot_par_final_w::text, '') = '' or dt_prot_par_final_w >= f.dt_mesano_ref_par) and ((coalesce(dt_ditado_inicial_w::text, '') = '') or (dt_ditado_inicial_w <= to_date(obter_data_ditado(OBTER_SEQ_INT_PRESCR_PROCMAT(b.nr_prescricao, b.nr_sequencia_prescricao, 'P')), 'dd/mm/yyyy'))) and ((coalesce(dt_ditado_final_w::text, '') = '') or (dt_ditado_final_w >= to_date(obter_data_ditado(OBTER_SEQ_INT_PRESCR_PROCMAT(b.nr_prescricao, b.nr_sequencia_prescricao, 'P')), 'dd/mm/yyyy'))) and a.nr_sequencia			= nr_seq_proc_repasse_p and ' ' || coalesce(cd_plano_aceito_w, Obter_Plano_Atendimento(d.nr_atendimento, 'C')) || ' ' like '% ' || Obter_Plano_Atendimento(d.nr_atendimento, 'C') || ' %' and ' ' || coalesce(cd_setor_aceito_w, b.cd_setor_atendimento) || ' ' 		like '% ' || b.cd_setor_atendimento || ' %' and ' ' || coalesce(ds_protocolos_aceito_w, c.nr_seq_protocolo) || ' ' like '% ' || c.nr_seq_protocolo || ' %' and ' ' || coalesce(cd_medico_executor_aceito_w, b.cd_medico_executor) || ' ' like '% ' || b.cd_medico_executor || ' %' and ' ' || coalesce(cd_convenio_fora_aceito_w, 'X') || ' ' not like '% ' || e.cd_convenio || ' %' and ' ' || coalesce(cd_setor_atend_fora_aceito_w,'X') || ' ' not like '% ' || b.cd_setor_atendimento || ' %' and ' ' || coalesce(cd_regra_fora_aceito_w,'X') || ' ' not like '% ' || a.cd_regra || ' %';
 
	elsif (coalesce(nr_seq_mat_repasse_p,0) > 0) then 
		select	count(*) 
		into STRICT	cont_w 
		from	convenio e, 
			atendimento_paciente d, 
			conta_paciente c, 
			material_atend_paciente b, 
			material_repasse a 
		where	a.nr_seq_material		= b.nr_sequencia 
		and	b.nr_interno_conta		= c.nr_interno_conta 
		and	c.nr_atendimento		= d.nr_atendimento 
		and	c.cd_convenio_parametro		= e.cd_convenio 
		and	' ' || coalesce(cd_regra_aceita_w, a.cd_regra) || ' ' 			like '% ' || a.cd_regra || ' %' 
		and	' ' || coalesce(ie_tipo_convenio_aceito_w, e.ie_tipo_convenio) || ' ' 	like '% ' || e.ie_tipo_convenio || ' %' 
		and	' ' || coalesce(cd_convenio_aceito_w, e.cd_convenio) || ' ' 			like '% ' || e.cd_convenio || ' %' 
		and	' ' || coalesce(ie_tipo_atend_aceito_w, d.ie_tipo_atendimento) || ' ' 	like '% ' || d.ie_tipo_atendimento || ' %' 
		and	((coalesce(dt_prot_inicial_w::text, '') = '') or (dt_prot_inicial_w <= to_date(obter_dados_protocolo(c.nr_seq_protocolo, 'DT'), 'dd/mm/yyyy'))) 
		and	((coalesce(dt_prot_final_w::text, '') = '') or (dt_prot_final_w >= to_date(obter_dados_protocolo(c.nr_seq_protocolo, 'DT'), 'dd/mm/yyyy'))) 
		and	((coalesce(dt_prot_par_inicial_w::text, '') = '') or (dt_prot_par_inicial_w <= to_date(obter_dados_protocolo(c.nr_seq_protocolo, 'DTP'), 'dd/mm/yyyy'))) 
		and	((coalesce(dt_prot_par_final_w::text, '') = '') or (dt_prot_par_final_w >= to_date(obter_dados_protocolo(c.nr_seq_protocolo, 'DTP'), 'dd/mm/yyyy'))) 
		and	((coalesce(dt_ditado_inicial_w::text, '') = '') or (dt_ditado_inicial_w <= to_date(obter_data_ditado(OBTER_SEQ_INT_PRESCR_PROCMAT(b.nr_prescricao, b.nr_sequencia_prescricao, 'M')), 'dd/mm/yyyy'))) 
		and	((coalesce(dt_ditado_final_w::text, '') = '') or (dt_ditado_final_w >= to_date(obter_data_ditado(OBTER_SEQ_INT_PRESCR_PROCMAT(b.nr_prescricao, b.nr_sequencia_prescricao, 'M')), 'dd/mm/yyyy'))) 
		and	a.nr_sequencia			= nr_seq_mat_repasse_p 
		and	' ' || coalesce(cd_plano_aceito_w, Obter_Plano_Atendimento(d.nr_atendimento, 'C')) || ' ' like '% ' || Obter_Plano_Atendimento(d.nr_atendimento, 'C') || ' %' 
		and	' ' || coalesce(cd_setor_aceito_w, b.cd_setor_atendimento) || ' ' 		like '% ' || b.cd_setor_atendimento || ' %' 
		and	' ' || coalesce(ds_protocolos_aceito_w, c.nr_seq_protocolo) || ' ' like '% ' || c.nr_seq_protocolo || ' %' 
		and	' ' || coalesce(cd_convenio_fora_aceito_w, 'X') || ' ' not like '% ' || e.cd_convenio || ' %' 
		and	' ' || coalesce(cd_setor_atend_fora_aceito_w,'X') || ' ' not like '% ' || b.cd_setor_atendimento || ' %' 
		and	' ' || coalesce(cd_regra_fora_aceito_w,'X') || ' ' not like '% ' || a.cd_regra || ' %';
	end if;
 
	if (cont_w = 0) then 
		ie_retorno_w	:= 'N';
	else 
		ie_retorno_w	:= 'S';
	end if;
end if;	
 
return ie_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_gerar_repasse (nr_repasse_terceiro_p bigint, nr_seq_proc_repasse_p bigint, nr_seq_mat_repasse_p bigint) FROM PUBLIC;

