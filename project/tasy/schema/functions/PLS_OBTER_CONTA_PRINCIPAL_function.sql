-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_conta_principal ( cd_guia_p text, nr_seq_analise_p bigint, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type) RETURNS bigint AS $body$
DECLARE


nr_retorno_w		bigint;
ie_origem_analise_w	bigint;
ie_novo_pos_w		pls_visible_false.ie_novo_pos_estab%type;


BEGIN

select	coalesce(max(ie_novo_pos_estab), 'N')
into STRICT	ie_novo_pos_w
from	pls_visible_false;

select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia = nr_seq_analise_p;

if (coalesce(ie_origem_analise_w,1) = 5) then
	select	min(b.nr_seq_conta)
	into STRICT	nr_retorno_w
	from	pls_contestacao b,
		pls_contestacao_discussao a
	where	a.nr_seq_contestacao	= b.nr_sequencia
	and	a.nr_seq_analise	= nr_seq_analise_p;
elsif (coalesce(ie_origem_analise_w,1) in (2,7, 8)) then

	--Necessário buscar primeiramente na tabela antiga, pois quando mudar a forma de geração, 

	--ainda é possível que análises geradas da forma antiga sejam abertas.
	select	min(b.nr_sequencia)
	into STRICT	nr_retorno_w
	from	pls_conta 		b,
		pls_conta 		c,
		pls_conta_pos_estabelecido a
	where	a.nr_seq_analise 	= nr_seq_analise_p
	and	a.nr_seq_conta 		= c.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_conta_referencia
	and	((a.ie_situacao		= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
	and	b.ie_tipo_guia		in ('3','5')
	and	not exists	(SELECT	1
				 from	pls_conta_pos_estabelecido	d
				 where	d.nr_seq_conta	= b.nr_sequencia
				  and	((d.ie_situacao		= 'A') or (coalesce(d.ie_situacao::text, '') = '')))
	and	exists (select 1
			from 	ptu_nota_cobranca c
			where 	c.nr_sequencia		= b.nr_seq_nota_cobranca
			and	c.id_nota_principal	= 'S');
	
	if (coalesce(nr_retorno_w,0) = 0) then
		select	min(b.nr_sequencia)
		into STRICT	nr_retorno_w
		from	pls_conta 		b,
			pls_conta 		c,
			pls_conta_pos_estabelecido a
		where	a.nr_seq_analise 	= nr_seq_analise_p
		and	a.nr_seq_conta 		= c.nr_sequencia
		and	b.nr_sequencia		= c.nr_seq_conta_referencia
		and	((a.ie_situacao		= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
		and	b.ie_tipo_guia		in ('3','5')
		and	not exists	(SELECT	1
					 from	pls_conta_pos_estabelecido	d
					 where	d.nr_seq_conta	= b.nr_sequencia
					  and	((d.ie_situacao		= 'A') or (coalesce(d.ie_situacao::text, '') = '')));
	end if;
	
	if (coalesce(nr_retorno_w,0) = 0) then
		select	min(pos.nr_seq_conta)
		into STRICT	nr_retorno_w
		from	pls_conta_pos_estabelecido	pos,
			pls_conta			conta
		where	pos.nr_seq_analise	= nr_seq_analise_p
		and	pos.nr_seq_conta	= conta.nr_sequencia
		and	((pos.ie_situacao	= 'A') or (coalesce(pos.ie_situacao::text, '') = ''))
		and	conta.ie_tipo_guia	in ('3','5')
		and	exists (SELECT 1
				from 	ptu_nota_cobranca c
				where 	c.nr_sequencia		= conta.nr_seq_nota_cobranca
				and	c.id_nota_principal	= 'S');
		
		if (coalesce(nr_retorno_w,0) = 0) then
			select	min(pos.nr_seq_conta)
			into STRICT	nr_retorno_w
			from	pls_conta_pos_estabelecido	pos,
				pls_conta			conta
			where	pos.nr_seq_analise	= nr_seq_analise_p
			and	pos.nr_seq_conta	= conta.nr_sequencia
			and	((pos.ie_situacao	= 'A') or (coalesce(pos.ie_situacao::text, '') = ''))
			and	conta.ie_tipo_guia	in ('3','5');
		end if;
		
		if (coalesce(nr_retorno_w,0) = 0) then
			select	min(pos.nr_seq_conta)
			into STRICT	nr_retorno_w
			from	pls_conta_pos_estabelecido	pos,
				pls_conta			conta
			where	pos.nr_seq_analise	= nr_seq_analise_p
			and	((pos.ie_situacao	= 'A') or (coalesce(pos.ie_situacao::text, '') = ''))
			and	pos.nr_seq_conta	= conta.nr_sequencia
			and	conta.ie_tipo_guia	= '4'
			and	coalesce(conta.nr_seq_conta_referencia::text, '') = ''
			and	coalesce(conta.cd_guia_referencia::text, '') = '';
			
			if (coalesce(nr_retorno_w,0) = 0) then
				select	min(pos.nr_seq_conta)
				into STRICT	nr_retorno_w
				from	pls_conta_pos_estabelecido	pos,
					pls_conta			conta
				where	pos.nr_seq_analise	= nr_seq_analise_p
				and	((pos.ie_situacao	= 'A') or (coalesce(pos.ie_situacao::text, '') = ''))
				and	pos.nr_seq_conta	= conta.nr_sequencia
				and	conta.ie_tipo_guia	= '4'
				and	coalesce(conta.nr_seq_conta_referencia::text, '') = '';
			end if;
			
			if (coalesce(nr_retorno_w,0) = 0) then
				select	min(pos.nr_seq_conta)
				into STRICT	nr_retorno_w
				from	pls_conta_pos_estabelecido	pos,
					pls_conta			conta
				where	pos.nr_seq_analise	= nr_seq_analise_p
				and	((pos.ie_situacao	= 'A') or (coalesce(pos.ie_situacao::text, '') = ''))
				and	pos.nr_seq_conta	= conta.nr_sequencia;
			end if;
		end if;
	end if;
	
	--Se não achou ainda a conta principal, talvez seja por que análise foi gerada com novo pós. Necessário buscar primeiramente na tabela antiga, pois quando mudar a forma de geração, 

	--ainda é possível que análises geradas da forma antiga sejam abertas.
	if (coalesce(nr_retorno_w::text, '') = '') then
		select	min(nr_sequencia)
		into STRICT	nr_retorno_w
		from (SELECT b.nr_sequencia
			from	pls_conta 		b,
				pls_conta 		c,
				pls_conta_pos_proc a
			where	a.nr_seq_analise 	= nr_seq_analise_p
			and	a.nr_seq_conta 		= c.nr_sequencia
			and	b.nr_sequencia		= c.nr_seq_conta_referencia
			and	b.ie_tipo_guia		in ('3','5')
			and	not exists (select	1
						from	pls_conta_pos_proc	d
						where	d.nr_seq_conta	= b.nr_sequencia)
			
union all

			SELECT b.nr_sequencia
			from	pls_conta 		b,
				pls_conta 		c,
				pls_conta_pos_mat a
			where	a.nr_seq_analise 	= nr_seq_analise_p
			and	a.nr_seq_conta 		= c.nr_sequencia
			and	b.nr_sequencia		= c.nr_seq_conta_referencia
			and	b.ie_tipo_guia		in ('3','5')
			and	not exists (select	1
						from	pls_conta_pos_mat	d
						where	d.nr_seq_conta	= b.nr_sequencia)
		) alias7;
		
		if (coalesce(nr_retorno_w::text, '') = '') then
			
			select min(nr_seq_conta)
			into STRICT	nr_retorno_w
			from (
					SELECT	pos.nr_seq_conta
					from	pls_conta_pos_proc	pos,
						pls_conta			conta
					where	pos.nr_seq_analise	= nr_seq_analise_p
					and	pos.nr_seq_conta	= conta.nr_sequencia
					and	conta.ie_tipo_guia	in ('3','5')
					
union all

					SELECT	pos.nr_seq_conta
					from	pls_conta_pos_mat	pos,
						pls_conta			conta
					where	pos.nr_seq_analise	= nr_seq_analise_p
					and	pos.nr_seq_conta	= conta.nr_sequencia
					and	conta.ie_tipo_guia	in ('3','5')
				) alias5;
			
			
			
			if (coalesce(nr_retorno_w::text, '') = '') then
				
				select min(nr_seq_conta)
				into STRICT	nr_retorno_w
				from (
					SELECT	pos.nr_seq_conta
					from	pls_conta_pos_proc	pos,
						pls_conta		conta
					where	pos.nr_seq_analise	= nr_seq_analise_p
					and	pos.nr_seq_conta	= conta.nr_sequencia
					and	conta.ie_tipo_guia	= '4'
					and	coalesce(conta.nr_seq_conta_referencia::text, '') = ''
					
union all

					SELECT	pos.nr_seq_conta
					from	pls_conta_pos_mat	pos,
						pls_conta		conta
					where	pos.nr_seq_analise	= nr_seq_analise_p
					and	pos.nr_seq_conta	= conta.nr_sequencia
					and	conta.ie_tipo_guia	= '4'
					and	coalesce(conta.nr_seq_conta_referencia::text, '') = ''
				) alias5;
				
				if (coalesce(nr_retorno_w::text, '') = '') then
					
					select	min(nr_seq_conta)
					into STRICT	nr_retorno_w
					from (
						SELECT	pos.nr_seq_conta
						from	pls_conta_pos_proc	pos,
							pls_conta		conta
						where	pos.nr_seq_analise	= nr_seq_analise_p
						and	pos.nr_seq_conta	= conta.nr_sequencia
						
union all

						SELECT	pos.nr_seq_conta
						from	pls_conta_pos_mat	pos,
							pls_conta		conta
						where	pos.nr_seq_analise	= nr_seq_analise_p
						and	pos.nr_seq_conta	= conta.nr_sequencia
					) alias3;
										
				end if;
			end if;
		end if;
	end if;
elsif (coalesce(ie_origem_analise_w,1) in (1,3,6)) then
	
	-- se foi passado prestador no parâmetro o mesmo é utilizado no select
	if (coalesce(nr_seq_prestador_p::text, '') = '') then

		select	min(a.nr_sequencia)
		into STRICT	nr_retorno_w
		from	pls_conta a
		where	a.ie_tipo_guia in ('3','5')
		and	a.nr_seq_analise = nr_seq_analise_p
		and	exists (SELECT 1
				from 	ptu_nota_cobranca c
				where 	c.nr_sequencia		= a.nr_seq_nota_cobranca
				and	c.id_nota_principal	= 'S');
				
		if (coalesce(nr_retorno_w::text, '') = '') then
			select	min(a.nr_sequencia)
			into STRICT	nr_retorno_w
			from	pls_conta a
			where	a.ie_tipo_guia in ('3','5')
			and	a.nr_seq_analise = nr_seq_analise_p;
		end if;
		
		-- se não encontrou e não foi passado segurado
		if (coalesce(nr_retorno_w::text, '') = '') and (coalesce(nr_seq_segurado_p::text, '') = '') then

			/*Se só existir uma conta de sp/sadt*/
 
			/*Tratamento realizado para buscar a menor sequencia com prestador executor igual ao prestador da análise OS 562882 dgkorz*/
			select	min(a.nr_sequencia)
			into STRICT	nr_retorno_w
			from	pls_conta a
			where	a.cd_guia = cd_guia_p
			and	a.ie_tipo_guia = '4'
			and	nr_seq_analise = nr_seq_analise_p
			and	coalesce(a.nr_seq_conta_referencia::text, '') = ''
			and	coalesce(cd_guia_referencia::text, '') = '';
			
			if (coalesce(nr_retorno_w::text, '') = '') then
				
				select	min(a.nr_sequencia)
				into STRICT	nr_retorno_w
				from	pls_conta a
				where	a.cd_guia = cd_guia_p
				and	a.ie_tipo_guia = '4'
				and	nr_seq_analise = nr_seq_analise_p
				and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
			
				if (coalesce(nr_retorno_w::text, '') = '') then
					select	min(a.nr_sequencia)
					into STRICT	nr_retorno_w
					from	pls_conta a
					where	a.cd_guia_referencia = cd_guia_p
					and	a.ie_tipo_guia = '4'
					and	nr_seq_analise = nr_seq_analise_p
					and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
				end if;
			end if;
			
			/*Caso não exista deverá ser verificado o tratamento anterior de modo a evitar que não seja buscado nenhuma conta*/

			if (coalesce(nr_retorno_w::text, '') = '') then

				select	min(a.nr_sequencia)
				into STRICT	nr_retorno_w
				from	pls_conta a,
					pls_protocolo_conta b 
				where	a.nr_seq_protocolo = b.nr_sequencia
				and	a.cd_guia_ok = cd_guia_p
				and	a.ie_tipo_guia = '4'
				and	nr_seq_analise = nr_seq_analise_p
				and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
			end if;

		-- se foi passado segurado entra aqui
		elsif (coalesce(nr_retorno_w::text, '') = '') then
		
			select	min(a.nr_sequencia)
			into STRICT	nr_retorno_w
			from	pls_conta a
			where	a.nr_seq_segurado = nr_seq_segurado_p
			and	a.cd_guia = cd_guia_p
			and	a.ie_tipo_guia = '4'
			and	nr_seq_analise = nr_seq_analise_p
			and	coalesce(a.nr_seq_conta_referencia::text, '') = ''
			and	coalesce(a.cd_guia_referencia::text, '') = '';

			if (coalesce(nr_retorno_w::text, '') = '') then
				select	min(a.nr_sequencia)
				into STRICT	nr_retorno_w
				from	pls_conta a
				where	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.cd_guia = cd_guia_p
				and	a.ie_tipo_guia = '4'
				and	nr_seq_analise = nr_seq_analise_p
				and	coalesce(a.nr_seq_conta_referencia::text, '') = '';

				if (coalesce(nr_retorno_w::text, '') = '') then
					select	min(a.nr_sequencia)
					into STRICT	nr_retorno_w
					from	pls_conta a
					where	a.nr_seq_segurado = nr_seq_segurado_p
					and 	a.cd_guia_referencia = cd_guia_p
					and	a.ie_tipo_guia = '4'
					and	nr_seq_analise = nr_seq_analise_p
					and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
				end if;
			end if;
			
			/*Caso não exista deverá ser verificado o tratamento anterior de modo a evitar que não seja buscado nenhuma conta*/

			if (coalesce(nr_retorno_w::text, '') = '') then

				select	min(a.nr_sequencia)
				into STRICT	nr_retorno_w
				from	pls_conta a,
					pls_protocolo_conta b 
				where	a.nr_seq_protocolo = b.nr_sequencia
				and	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.cd_guia_ok = cd_guia_p
				and	a.ie_tipo_guia = '4'
				and	nr_seq_analise = nr_seq_analise_p
				and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
			end if;
		end if;
	else
		--tratamento incluido devido ao fato de começarmos a trabalhar com 'N' prestadores diferentes
		select	min(a.nr_sequencia)
		into STRICT	nr_retorno_w
		from	pls_conta a
		where	a.ie_tipo_guia = '5'
		and	nr_seq_analise = nr_seq_analise_p;
		
		if (coalesce(nr_retorno_w::text, '') = '') then
			select	min(a.nr_sequencia)
			into STRICT	nr_retorno_w
			from	pls_conta a,
				pls_protocolo_conta b
			where	a.nr_seq_protocolo = b.nr_sequencia 
			and	b.nr_seq_prestador = nr_seq_prestador_p
			and	a.ie_tipo_guia in ('3','5')
			and	nr_seq_analise = nr_seq_analise_p;
			
			-- se não encontrou e não foi passado segurado
			if (coalesce(nr_retorno_w::text, '') = '') and (coalesce(nr_seq_segurado_p::text, '') = '') then
				/*Se só existir uma conta de sp/sadt*/
 
				/*Tratamento realizado para buscar a menor sequencia com prestador executor igual ao prestador da análise OS 562882 dgkorz*/
				select	min(a.nr_sequencia)
				into STRICT	nr_retorno_w
				from	pls_conta a
				where	a.cd_guia = cd_guia_p
				and	a.nr_seq_prestador_exec = nr_seq_prestador_p
				and	a.ie_tipo_guia = '4'
				and	nr_seq_analise = nr_seq_analise_p
				and	coalesce(a.nr_seq_conta_referencia::text, '') = '';

				-- se não 
				if (coalesce(nr_retorno_w::text, '') = '') then
					select	min(a.nr_sequencia)
					into STRICT	nr_retorno_w
					from	pls_conta a
					where	a.cd_guia = cd_guia_p
					and	a.nr_seq_prestador_exec = nr_seq_prestador_p
					and	a.ie_tipo_guia = '4'
					and	nr_seq_analise = nr_seq_analise_p
					and	coalesce(a.nr_seq_conta_referencia::text, '') = '';

					-- se não 
					if (coalesce(nr_retorno_w::text, '') = '') then
						select	min(a.nr_sequencia)
						into STRICT	nr_retorno_w
						from	pls_conta a
						where	a.cd_guia_referencia = cd_guia_p
						and	a.nr_seq_prestador_exec = nr_seq_prestador_p
						and	a.ie_tipo_guia = '4'
						and	nr_seq_analise = nr_seq_analise_p
						and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
					end if;
				end if;
				
				/*Caso não exista deverá ser verificado o tratamento anterior de modo a evitar que não seja buscado nenhuma conta*/

				if (coalesce(nr_retorno_w::text, '') = '') then

					select	min(a.nr_sequencia)
					into STRICT	nr_retorno_w
					from	pls_conta a,
						pls_protocolo_conta b 
					where	a.nr_seq_protocolo = b.nr_sequencia
					and	b.nr_seq_prestador = nr_seq_prestador_p
					and	a.cd_guia_ok = cd_guia_p
					and	a.ie_tipo_guia = '4'
					and	nr_seq_analise = nr_seq_analise_p
					and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
				end if;
			-- se foi passado segurado entra aqui
			elsif (coalesce(nr_retorno_w::text, '') = '') then
				
				select	min(a.nr_sequencia)
				into STRICT	nr_retorno_w
				from	pls_conta a
				where	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.nr_seq_prestador_exec = nr_seq_prestador_p
				and	a.cd_guia = cd_guia_p
				and	a.ie_tipo_guia = '4'
				and	nr_seq_analise = nr_seq_analise_p
				and	coalesce(a.nr_seq_conta_referencia::text, '') = '';

				if (coalesce(nr_retorno_w::text, '') = '') then

					select	min(a.nr_sequencia)
					into STRICT	nr_retorno_w
					from	pls_conta a
					where	a.nr_seq_segurado = nr_seq_segurado_p
					and	a.nr_seq_prestador_exec = nr_seq_prestador_p
					and	a.cd_guia_referencia = cd_guia_p
					and	a.ie_tipo_guia = '4'
					and	nr_seq_analise = nr_seq_analise_p
					and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
				end if;

				/*Caso não exista deverá ser verificado o tratamento anterior de modo a evitar que não seja buscado nenhuma conta*/

				if (coalesce(nr_retorno_w::text, '') = '') then

					select	min(a.nr_sequencia)
					into STRICT	nr_retorno_w
					from	pls_conta a,
						pls_protocolo_conta b 
					where	a.nr_seq_protocolo = b.nr_sequencia
					and	a.nr_seq_segurado = nr_seq_segurado_p
					and	b.nr_seq_prestador = nr_seq_prestador_p
					and	a.cd_guia_ok = cd_guia_p
					and	a.ie_tipo_guia = '4'
					and	nr_seq_analise = nr_seq_analise_p
					and	coalesce(a.nr_seq_conta_referencia::text, '') = '';
				end if;
			end if;
		end if;
	end if;

	if (coalesce(nr_retorno_w::text, '') = '') then
		select	min(nr_sequencia)
		into STRICT	nr_retorno_w
		from	pls_conta
		where	nr_seq_analise = nr_seq_analise_p;
	end if;
end if;

return	nr_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_conta_principal ( cd_guia_p text, nr_seq_analise_p bigint, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type) FROM PUBLIC;

