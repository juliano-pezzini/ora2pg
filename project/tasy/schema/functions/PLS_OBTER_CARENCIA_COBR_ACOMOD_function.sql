-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_carencia_cobr_acomod ( nr_seq_segurado_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obtém a carência da acomodação
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w			varchar(10);
qt_carencias_seg_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tipo_carencia_w		bigint;
qt_registros_w			bigint;
dt_solicitacao_w		timestamp;
dt_contratacao_w		timestamp;
nr_seq_tipo_acomodacao_w	bigint;
dt_inicio_vigencia_w		timestamp;
qt_dias_carencias_w		bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		c.dt_inicio_vigencia,
		c.qt_dias
	from	pls_carencia		c,
		pls_segurado		b,
		pls_tipo_carencia	a
	where	c.nr_seq_tipo_carencia	= a.nr_sequencia
	and	c.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_segurado_p
	and	c.ie_cpt		= 'N'
	and	a.ie_cobertura		= 'S'
	and	qt_carencias_seg_w	> 0
	
union all

	SELECT	a.nr_sequencia,
		c.dt_inicio_vigencia,
		c.qt_dias
	from	pls_carencia		c,
		pls_plano		b,
		pls_tipo_carencia	a
	where	c.nr_seq_tipo_carencia	= a.nr_sequencia
	and	c.nr_seq_plano		= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_plano_w
	and	c.ie_cpt		= 'N'
	and	a.ie_cobertura		= 'S'
	and	qt_carencias_seg_w	= 0;



BEGIN

ds_retorno_w	:= 'N';

select	nr_seq_plano,
	dt_inclusao_operadora
into STRICT	nr_seq_plano_w,
	dt_contratacao_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	count(1)
into STRICT	qt_carencias_seg_w
from	pls_carencia
where	nr_seq_segurado	= nr_seq_segurado_p
and	ie_cpt		= 'N';

if (coalesce(nr_seq_guia_p,0) > 0) then
	select	coalesce(dt_solicitacao,clock_timestamp()),
		nr_seq_tipo_acomodacao
	into STRICT	dt_solicitacao_w,
		nr_seq_tipo_acomodacao_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

elsif (coalesce(nr_seq_requisicao_p,0) > 0) then
	select	coalesce(dt_requisicao,clock_timestamp()),
		nr_seq_tipo_acomodacao
	into STRICT	dt_solicitacao_w,
		nr_seq_tipo_acomodacao_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
end if;

open C01;
loop
fetch C01 into
	nr_seq_tipo_carencia_w,
	dt_inicio_vigencia_w,
	qt_dias_carencias_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (dt_solicitacao_w	< coalesce(dt_inicio_vigencia_w,dt_contratacao_w)+qt_dias_carencias_w) then
		select	count(1)
		into STRICT	qt_registros_w
		from	PLS_COBERTURA_CARENCIA
		where	nr_seq_tipo_carencia		= nr_seq_tipo_carencia_w
		and	nr_seq_tipo_acomodacao		= nr_seq_tipo_acomodacao_w;

		if (qt_registros_w = 0) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_plano_acomodacao a
			where	a.nr_seq_plano	= nr_seq_plano_w
			and	exists (	SELECT	1
						from	pls_regra_categoria b
						where	b.nr_seq_categoria		= a.nr_seq_categoria
						and	b.nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w);
		end if;

		if (qt_registros_w > 0) then
			ds_retorno_w	:= 'S';
			exit;
		end if;

	end if;
	end;
end loop;
close C01;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_carencia_cobr_acomod ( nr_seq_segurado_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint) FROM PUBLIC;

