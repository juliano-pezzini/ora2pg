-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pda_status_solic_trans_estoque ( nr_ordem_compra_p bigint, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w				varchar(2);
qt_existe_parcial_w			integer;
qt_existe_pendente_w			integer;
qt_existe_atendida_w			integer;


BEGIN

select  count(*) -- Parcialmente Atendida
into STRICT	qt_existe_parcial_w
from 	ordem_compra_item b,
 	ordem_compra a
where  	a.nr_ordem_compra = b.nr_ordem_compra
and   	a.ie_tipo_ordem   ='T'
and   	a.cd_estab_transf = cd_estabelecimento_p
and   	a.nr_ordem_compra = nr_ordem_compra_p
and (sup_obter_saldo_item_transf(a.nr_ordem_compra, b.nr_item_oci) > 0)
and (obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci,'S') > 0);

select  count(*) -- Pendente
into STRICT	qt_existe_pendente_w
from 	ordem_compra_item b,
	ordem_compra a
where 	a.nr_ordem_compra = b.nr_ordem_compra
and   	a.cd_estab_transf = cd_estabelecimento_p
and   	a.nr_ordem_compra = nr_ordem_compra_p
and   	a.ie_tipo_ordem   = 'T'
and	b.nr_item_oci not in (	SELECT	i.nr_item_oci
				from	nota_fiscal n,
					nota_fiscal_item i
				where	n.nr_sequencia = i.nr_sequencia
				and	i.nr_ordem_compra = b.nr_ordem_compra
				and	n.ie_situacao = '1'
				and	n.cd_estabelecimento = a.cd_estab_transf);

select  count(*) -- Atendida
into STRICT	qt_existe_atendida_w
from 	ordem_compra_item b,
	ordem_compra a
where 	a.nr_ordem_compra = b.nr_ordem_compra
and   	a.cd_estab_transf = cd_estabelecimento_p
and   	a.nr_ordem_compra = nr_ordem_compra_p
and   	a.ie_tipo_ordem   = 'T'
and 	b.nr_item_oci in (	SELECT	i.nr_item_oci
				from	nota_fiscal n,
					nota_fiscal_item i
				where	n.nr_sequencia = i.nr_sequencia
				and	i.nr_ordem_compra = b.nr_ordem_compra
				and	n.ie_situacao = '1'
				and	n.cd_estabelecimento = a.cd_estab_transf);

if (qt_existe_parcial_w > 0) then
	ds_retorno_w := 'PA'; -- Parcialmente Atendida
elsif (qt_existe_pendente_w > 0) then
	ds_retorno_w := 'PE'; -- Pendente
elsif (qt_existe_atendida_w > 0) then
	ds_retorno_w := 'AT'; -- Atendida
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pda_status_solic_trans_estoque ( nr_ordem_compra_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

