-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_permissao_modelo_carta ( NR_SEQ_MODELO_P bigint, IE_TIPO_PERMISSAO_P text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(1) := 'N';

nm_usuario_regra_w		carta_medica_modelo_lib.nm_usuario_regra%type;
cd_perfil_w				carta_medica_modelo_lib.cd_perfil%type;
cd_setor_atendimento_w	carta_medica_modelo_lib.cd_setor_atendimento%type;
ie_permite_editar_w 	carta_medica_modelo_lib.ie_permite_editar%type;
ie_permite_utilizar_w	carta_medica_modelo_lib.ie_permite_utilizar%type;

ie_permite_editar_modelo_w 		CONSTANT varchar(2) := 'PE';
ie_permite_utilizar_modelo_w 	CONSTANT varchar(2) := 'PU';
ie_permite_versao_final_w 		CONSTANT varchar(3) := 'GVF';
ie_permite_versao_adicional_w	CONSTANT varchar(3) := 'GVA';

c1 CURSOR FOR
SELECT 	ie_permite_editar,
		ie_permite_utilizar
from	carta_medica_modelo_lib
where	nr_seq_modelo = nr_seq_modelo_p
and		((coalesce(nm_usuario_regra::text, '') = '') 	or ((nm_usuario_regra IS NOT NULL AND nm_usuario_regra::text <> '') and nm_usuario_regra = nm_usuario_regra_w))
and 	((coalesce(cd_perfil::text, '') = '') 			or ((cd_perfil IS NOT NULL AND cd_perfil::text <> '') and cd_perfil  = cd_perfil_w))
and 	((coalesce(cd_setor_atendimento::text, '') = '') or ((cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '') and cd_setor_atendimento  = cd_setor_atendimento_w))
and 	((coalesce(cd_departamento::text, '') = '') 		or ((cd_departamento IS NOT NULL AND cd_departamento::text <> '') and cd_departamento in (select 	cd_departamento
																						   from		departamento_setor
																						   where 	cd_setor_atendimento = cd_setor_atendimento_w)))
order by nm_usuario_regra desc, cd_perfil desc, cd_setor_atendimento desc, cd_departamento desc;

c2 CURSOR FOR
SELECT 	coalesce(b.ie_permissao, 'N') ie_permissao
FROM carta_medica_modelo_lib a
LEFT OUTER JOIN carta_medica_lib_status b ON (a.nr_sequencia = b.nr_seq_carta_med_mod_lib AND CASE = b.ie_status WHEN IE_TIPO_PERMISSAO_P)
WHERE a.nr_seq_modelo = nr_seq_modelo_p and ((coalesce(a.nm_usuario_regra::text, '') = '') 	or ((a.nm_usuario_regra IS NOT NULL AND a.nm_usuario_regra::text <> '') and a.nm_usuario_regra = nm_usuario_regra_w)) and ((coalesce(a.cd_perfil::text, '') = '') 			or ((a.cd_perfil IS NOT NULL AND a.cd_perfil::text <> '') and a.cd_perfil  = cd_perfil_w)) and ((coalesce(a.cd_setor_atendimento::text, '') = '') or ((a.cd_setor_atendimento IS NOT NULL AND a.cd_setor_atendimento::text <> '') and a.cd_setor_atendimento  = cd_setor_atendimento_w)) and ((coalesce(a.cd_departamento::text, '') = '') 		or ((a.cd_departamento IS NOT NULL AND a.cd_departamento::text <> '') and a.cd_departamento in (select 	cd_departamento
																						   from		departamento_setor
																						   where 	cd_setor_atendimento = cd_setor_atendimento_w)))   order by nm_usuario_regra desc, cd_perfil desc, cd_setor_atendimento desc, cd_departamento desc;
BEGIN

nm_usuario_regra_w := wheb_usuario_pck.get_nm_usuario;
cd_perfil_w := wheb_usuario_pck.get_cd_perfil;
cd_setor_atendimento_w := wheb_usuario_pck.get_cd_setor_atendimento;

if (IE_TIPO_PERMISSAO_P = ie_permite_editar_modelo_w) then
	select 	coalesce(max('N'),'S')
	into STRICT	ds_retorno_w
	from 	carta_medica_modelo_lib
	where	nr_seq_modelo = nr_seq_modelo_p
	and		coalesce(ie_permite_editar,'N') = 'S';
elsif (IE_TIPO_PERMISSAO_P = ie_permite_utilizar_modelo_w) then
	select 	coalesce(max('N'),'S')
	into STRICT	ds_retorno_w
	from 	carta_medica_modelo_lib
	where	nr_seq_modelo = nr_seq_modelo_p;
elsif (IE_TIPO_PERMISSAO_P = ie_permite_versao_final_w) then
	select 	coalesce(max('N'),'S')
	into STRICT	ds_retorno_w
	from   	carta_medica_lib_status
	where  	nr_seq_carta_med_mod_lib in (SELECT nr_sequencia
										from    carta_medica_modelo_lib
										where   nr_seq_modelo = nr_seq_modelo_p)
	and   ie_status = 'N'
	and   ie_permissao = 'S';
elsif (IE_TIPO_PERMISSAO_P = ie_permite_versao_adicional_w) then
	select 	coalesce(max('N'),'S')
	into STRICT	ds_retorno_w
	from   	carta_medica_lib_status
	where  	nr_seq_carta_med_mod_lib in (SELECT nr_sequencia
										from    carta_medica_modelo_lib
										where   nr_seq_modelo = nr_seq_modelo_p)
	and   ie_status = 'A'
	and   ie_permissao = 'S';
end if;

if (ds_retorno_w = 'N') then
	if (IE_TIPO_PERMISSAO_P = ie_permite_editar_modelo_w or
		IE_TIPO_PERMISSAO_P = ie_permite_utilizar_modelo_w) then
		ie_permite_editar_w := 'N';
		ie_permite_utilizar_w := 'N';

		for carta_medica_modelo_lib_rec in c1
		loop
			ie_permite_editar_w := carta_medica_modelo_lib_rec.ie_permite_editar;
			ie_permite_utilizar_w := carta_medica_modelo_lib_rec.ie_permite_utilizar;
		end loop;

		if (ie_tipo_permissao_p = ie_permite_editar_modelo_w) then
			ds_retorno_w := ie_permite_editar_w;
		else
			ds_retorno_w := ie_permite_utilizar_w;
		end if;
	elsif (IE_TIPO_PERMISSAO_P = ie_permite_versao_final_w) then
		for carta_medica_lib_status_rec in c2
		loop
			ds_retorno_w := carta_medica_lib_status_rec.ie_permissao;
		end loop;
	elsif (IE_TIPO_PERMISSAO_P = ie_permite_versao_adicional_w) then
		for carta_medica_lib_status_rec in c2
		loop
			ds_retorno_w := carta_medica_lib_status_rec.ie_permissao;
		end loop;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_permissao_modelo_carta ( NR_SEQ_MODELO_P bigint, IE_TIPO_PERMISSAO_P text) FROM PUBLIC;

