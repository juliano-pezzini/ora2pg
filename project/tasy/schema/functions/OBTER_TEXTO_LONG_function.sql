-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_texto_long (ds_tabela_p text, ds_campo_long_p text, ds_campo_chave_p text, ds_valor_chave_p bigint) RETURNS varchar AS $body$
DECLARE


   cursor_w       integer;
   sql_w          varchar(100);
   value_w        varchar(32760);
   clob_w         text;
   value_length_w integer := 32760;
   length_w       integer := 0;

   in_html        boolean := false;
   caracter_w     varchar(1);
   clob_tmp_w     text;


BEGIN

   sql_w := 'select ' || ds_campo_long_p || ' from ' || ds_tabela_p;

   if (trim(both ds_campo_chave_p) IS NOT NULL AND (trim(both ds_campo_chave_p))::text <> '') and
      (trim(both ds_valor_chave_p) IS NOT NULL AND (trim(both ds_valor_chave_p))::text <> '')
   then
     sql_w := sql_w || ' where ' || ds_campo_chave_p || ' = ' || ds_valor_chave_p;
   end if;

   cursor_w := dbms_sql.open_cursor;
   dbms_sql.parse(cursor_w, sql_w, dbms_sql.native);
   dbms_sql.define_column_long(cursor_w, 1);

   if dbms_sql.execute_and_fetch(cursor_w) = 1 then
     loop
       dbms_sql.column_value_long(cursor_w,
                                  1,
                                  32760,
                                  length_w,
                                  value_w,
                                  value_length_w);
       clob_w   := clob_w || value_w;
       length_w := length_w + 32760;
       exit when value_length_w < 32760;
     end loop;
   end if;

   if dbms_sql.is_open(cursor_w) then
     dbms_sql.close_cursor(cursor_w);
   end if;

   clob_w := trim(both replace(replace(rtrim(rtrim(ltrim(ltrim(clob_w,
                                                          chr(13) || chr(10)),
                                                    chr(10)),
                                              chr(13) || chr(10)),
                                         chr(10)),
                                   chr(160),
                                   ' '),
                           chr(9),
                           ' '));

  if (clob_w IS NOT NULL AND clob_w::text <> '') then

    if substr(clob_w, 1, 1) = '{' then --rtf
      clob_w := trim(both ltrim(ltrim(regexp_replace(regexp_replace(clob_w, '(\\par |\\par)', ''), '(\\.* |\\.*|{.*|}.*)', ''), chr(13) || chr(10)), chr(10)));

    end if;

    if substr(clob_w, 1, 1) = '<' then

      for i in 1 .. octet_length( clob_w ) loop

        caracter_w := substr( clob_w, i, 1 );

        if in_html then

          if caracter_w = '>' then

            in_html := false;

            if (clob_tmp_w IS NOT NULL AND clob_tmp_w::text <> '') then
              clob_tmp_w := clob_tmp_w || ' ';
            end if;

          end if;

        elsif caracter_w = '<' then

          in_html := true;

        end if;

        if not in_html and caracter_w <> '>' then

          clob_tmp_w := clob_tmp_w || caracter_w;

        end if;

      end loop;

      clob_w := rtrim(replace(clob_tmp_w, chr(38)||'#x200B;', ''), chr(10));

    end if;

    clob_w := trim(both ltrim(regexp_replace(trim(both replace(replace(clob_w, chr(13) || chr(10), ' '), chr(10), ' ')), '[[:space:]]{2,}', ' '), '.'));

  end if;

  return substr(clob_w, 32767, 1);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_texto_long (ds_tabela_p text, ds_campo_long_p text, ds_campo_chave_p text, ds_valor_chave_p bigint) FROM PUBLIC;

