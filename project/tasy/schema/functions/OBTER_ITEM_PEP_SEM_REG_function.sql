-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_item_pep_sem_reg (nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(255);
ds_retorno_aux	varchar(255);
ds_evolucao_w	varchar(255);
qt_reg_w	bigint;


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	begin
	select  count(*)
	into STRICT	qt_reg_w
	from	evolucao_paciente
	where	nr_atendimento = nr_atendimento_p
	and	ie_evolucao_clinica = 'ANM';

	if (qt_reg_w = 0) then
		begin
		select substr(obter_desc_tipo_evolucao('ANM'),1,255)
		into STRICT ds_evolucao_w
		;
		end;
	ds_retorno_aux := wheb_mensagem_pck.get_texto(308396) || ' ' || ds_evolucao_w || chr(13); -- Evolução tipo
	end if;

	select	count(*)
	into STRICT	qt_reg_w
	from	evolucao_paciente
	where	nr_atendimento = nr_atendimento_p
	and	ie_evolucao_clinica = 'E';

	if (qt_reg_w = 0) then
		begin
		select substr(obter_desc_tipo_evolucao('E'),1,255)
		into STRICT ds_evolucao_w
		;
		end;
	ds_retorno_aux := ds_retorno_aux || wheb_mensagem_pck.get_texto(308396) || ' ' || ds_evolucao_w || chr(13); -- Evolução tipo
	end if;

	select	count(*)
	into STRICT	qt_reg_w
	from	evolucao_Paciente
	where	nr_atendimento = nr_atendimento_p
	and	ie_evolucao_clinica = 'ETC';

	if (qt_reg_w = 0) then
		begin
		select substr(obter_desc_tipo_evolucao('ETC'),1,255)
		into STRICT ds_evolucao_w
		;
		end;
	ds_retorno_aux := ds_retorno_aux || wheb_mensagem_pck.get_texto(308396) || ' ' || ds_evolucao_w || chr(13); --  Evolução tipo
	end if;

	select  count(*)
	into STRICT	qt_reg_w
	from	med_receita
	where	nr_atendimento_hosp = nr_atendimento_p;

	if (qt_reg_w = 0) then
		ds_retorno_aux := ds_retorno_aux || wheb_mensagem_pck.get_texto(308397) ||chr(13); -- Receitas
	end if;

	select  count(*)
	into STRICT	qt_reg_w
	from	atestado_paciente
	where	nr_atendimento = nr_atendimento_p;

	if (qt_reg_w = 0) then
		ds_retorno_aux := ds_retorno_aux || wheb_mensagem_pck.get_texto(308398) || chr(13); -- Atestados
	end if;

	select  count(a.nr_sequencia)
	into STRICT	qt_reg_w
	from	atendimento_alta a, parametro_medico p
	where	nr_atendimento = nr_atendimento_p
	and     p.cd_estabelecimento = obter_estabelecimento_ativo
	and 	((a.ie_tipo_orientacao <> 'P')
	or (coalesce(p.ie_liberar_desfecho,'N')  = 'N')
	or  	((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and (coalesce(a.dt_inativacao::text, '') = '')));

	if (qt_reg_w = 0) then
		ds_retorno_aux := ds_retorno_aux || wheb_mensagem_pck.get_texto(308399) ||chr(13); -- Orientações de Alta
	end if;
	end;
end if;

return	ds_retorno_aux;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_item_pep_sem_reg (nr_atendimento_p bigint) FROM PUBLIC;

