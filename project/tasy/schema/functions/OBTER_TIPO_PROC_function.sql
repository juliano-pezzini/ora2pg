-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tipo_proc (nr_sequencia_p bigint, nr_prescricao_p bigint) RETURNS varchar AS $body$
DECLARE


ie_tipo_w		varchar(4);
ie_ivc_w		varchar(4);
ie_ctrl_glic_w		varchar(4);
nr_seq_proc_interno_w	bigint;
nr_seq_prot_glic_w	bigint;
nr_seq_exame_w		bigint;
nr_seq_solic_sangue_w	bigint;
nr_seq_derivado_w	bigint;
nr_seq_exame_sangue_w	bigint;
ie_classif_adep_w	varchar(4);
ds_retorno_w		varchar(10) := 'P';

BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	begin

	select	b.nr_seq_proc_interno,
		b.nr_seq_prot_glic,
		b.nr_seq_exame,
		b.nr_seq_solic_sangue,
		b.nr_seq_derivado,
		b.nr_seq_exame_sangue
	into STRICT	nr_seq_proc_interno_w,
		nr_seq_prot_glic_w,
		nr_seq_exame_w,
		nr_seq_solic_sangue_w,
		nr_seq_derivado_w,
		nr_seq_exame_sangue_w
	from	prescr_procedimento b
	where	b.nr_sequencia = nr_sequencia_p
	and	b.nr_prescricao = nr_prescricao_p;
	/* Ínicio das comparações */

	if (nr_seq_solic_sangue_w IS NOT NULL AND nr_seq_solic_sangue_w::text <> '')	then
		ds_retorno_w := 'HM';	-- Hemoterapia
	elsif (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		/* Faz o select na tabela PROC_INTERNO caso o campo nr_seq_proc_interno não  esteja nulo */

		select	a.ie_classif_adep,
			coalesce(a.ie_ivc,'N') ie_ivc,
			coalesce(a.ie_ctrl_glic,'NC') ie_ctrl_glic,
			a.ie_tipo
		into STRICT	ie_classif_adep_w,
			ie_ivc_w,
			ie_ctrl_glic_w,
			ie_tipo_w
		from	proc_interno a
		where	a.ie_tipo <> 'G'
		and 	a.nr_sequencia = nr_seq_proc_interno_w;
		/* Faz as verificações necessárias e retorna o tipo */

		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '')	and (coalesce(nr_seq_prot_glic_w::text, '') = '')	and (coalesce(nr_seq_derivado_w::text, '') = '')	and (coalesce(nr_seq_exame_sangue_w::text, '') = '') and (ie_classif_adep_w <> 'SADT')	and (ie_ctrl_glic_w = 'NC')		and (ie_tipo_w <> 'BS')		and (ie_ivc_w <> 'S')		then
			ds_retorno_w := 'L';			-- Coleta
		elsif (coalesce(nr_seq_exame_w::text, '') = '')	and (coalesce(nr_seq_prot_glic_w::text, '') = '')	and (coalesce(nr_seq_derivado_w::text, '') = '')	and (coalesce(nr_seq_exame_sangue_w::text, '') = '') and (ie_classif_adep_w <> 'SADT')	and (ie_ctrl_glic_w = 'NC')		and (ie_tipo_w <> 'BS')		and (ie_ivc_w = 'S')		then
			ds_retorno_w := 'I';			-- IVC
		elsif (coalesce(nr_seq_derivado_w::text, '') = '')	and (coalesce(nr_seq_exame_sangue_w::text, '') = '') and (ie_classif_adep_w <> 'SADT')	and (ie_ctrl_glic_w <> 'NC')	and (ie_tipo_w <> 'BS')		and (ie_ivc_w <> 'S')		then
			ds_retorno_w := ie_ctrl_glic_w;		-- Controle de Glicemia
		elsif (ie_classif_adep_w = 'SADT')	then
			ds_retorno_w := ie_classif_adep_w;	-- Exames SADT
		else
			ds_retorno_w := 'P';  			-- Procedimentos
		end if;
	elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '')	and (coalesce(nr_seq_prot_glic_w::text, '') = '')	and (coalesce(nr_seq_derivado_w::text, '') = '')	and (coalesce(nr_seq_exame_sangue_w::text, '') = '') then
		ds_retorno_w := 'L';	-- Coleta
	else
		ds_retorno_w := 'P';	-- Procedimento
	end if;

	exception
	when others then
	ds_retorno_w := 'P';	-- Procedimento
	end;
end if;

return coalesce(ds_retorno_w,'P');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tipo_proc (nr_sequencia_p bigint, nr_prescricao_p bigint) FROM PUBLIC;

