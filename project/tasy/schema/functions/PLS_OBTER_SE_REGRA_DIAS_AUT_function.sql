-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_regra_dias_aut ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, cd_especialidade_medica_p especialidade_medica.cd_especialidade%type, qt_dias_regra_p pls_validacao_aut_ret_espc.qt_dias_regra_prest%type, ie_valida_execucao_p pls_validacao_aut_ret_espc.ie_valida_execucao%type) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Validar a quantidade de dias aplicada a regra de prestador, na ocorrência combinada
Valida especialidade/quantidade dias retorno especialidade.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [   ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_solicitacao_w		timestamp;
ie_regra_dias_w			varchar(1) 	:= 'N';
qt_reg_w			bigint 	:= 0;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
cd_especialidade_w		especialidade_medica.cd_especialidade%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;


BEGIN
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	dt_solicitacao,
		nr_seq_segurado,
		cd_especialidade
	into STRICT	dt_solicitacao_w,
		nr_seq_segurado_w,
		cd_especialidade_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	if (cd_especialidade_medica_p = cd_especialidade_w) then
		select	count(1)
		into STRICT	qt_reg_w
		from	pls_guia_plano
		where	nr_sequencia		<> nr_seq_guia_p
		and	nr_seq_segurado		= nr_seq_segurado_w
		and	cd_especialidade	= cd_especialidade_medica_p
		and	ie_estagio		in (2,3,5,6,10)
		and	dt_solicitacao_w between trunc(dt_autorizacao) and fim_dia(dt_autorizacao + qt_dias_regra_p);
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') or (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then

	nr_seq_requisicao_w	:= nr_seq_requisicao_p;

	if (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
		select	nr_seq_requisicao
		into STRICT	nr_seq_requisicao_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	end if;

	select	dt_requisicao,
		nr_seq_segurado,
		cd_especialidade
	into STRICT	dt_solicitacao_w,
		nr_seq_segurado_w,
		cd_especialidade_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_w;

	if (cd_especialidade_medica_p = cd_especialidade_w) then
		if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') and (coalesce(ie_valida_execucao_p,'N') = 'N') then
			select	count(1)
			into STRICT	qt_reg_w
			from	pls_requisicao
			where	nr_sequencia		<> nr_seq_requisicao_p
			and	nr_seq_segurado		= nr_seq_segurado_w
			and	cd_especialidade	= cd_especialidade_medica_p
			and	ie_estagio		in (2,6)
			and	dt_solicitacao_w between trunc(dt_requisicao) and fim_dia(dt_requisicao + qt_dias_regra_p);

		elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') or (coalesce(ie_valida_execucao_p,'N') = 'S')then

			dt_solicitacao_w := clock_timestamp();

			select	count(1)
			into STRICT	qt_reg_w
			from	pls_requisicao	c,
				pls_execucao_requisicao b,
				pls_execucao_req_item a,
				pls_guia_plano d
			where	a.nr_seq_execucao	= b.nr_sequencia
			and	a.nr_seq_requisicao	= c.nr_sequencia
			and	a.nr_seq_guia		= d.nr_sequencia
			and	c.nr_seq_segurado	= nr_seq_segurado_w
			and	(((nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') and b.nr_sequencia <> nr_seq_execucao_p)
			or ((nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') and c.nr_sequencia <> nr_seq_requisicao_p))
			and	c.cd_especialidade	= cd_especialidade_medica_p
			and	a.ie_situacao		in ('S','P')
			and	c.ie_estagio		not in (3,7)
			and 	d.ie_status		not in (3)
			and	dt_solicitacao_w 	between trunc(b.dt_execucao) and fim_dia(b.dt_execucao + qt_dias_regra_p);
		end if;
	end if;
end if;

if (qt_reg_w > 0) then
	ie_regra_dias_w	:= 'S';
end if;

return ie_regra_dias_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_regra_dias_aut ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, cd_especialidade_medica_p especialidade_medica.cd_especialidade%type, qt_dias_regra_p pls_validacao_aut_ret_espc.qt_dias_regra_prest%type, ie_valida_execucao_p pls_validacao_aut_ret_espc.ie_valida_execucao%type) FROM PUBLIC;

