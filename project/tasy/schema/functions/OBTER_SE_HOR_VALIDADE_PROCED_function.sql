-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_hor_validade_proced ( nr_prescricao_p bigint, nr_seq_item_p bigint) RETURNS varchar AS $body$
DECLARE


ds_horarios_w		varchar(2000);
ds_hora_w		varchar(2000);
ds_horarios_retorno_w	varchar(2000) := '';
dt_inicio_prescr_w	timestamp;
dt_validade_prescr_w	timestamp;
dt_prescricao_w		timestamp;
dt_horario_w		timestamp;
dt_prev_execucao_w	timestamp;
dt_prescr_w		timestamp;
qt_dia_adic_w		bigint;
k			bigint;
qt_w		bigint := 0;


BEGIN

select  substr(padroniza_horario_prescr(b.ds_horarios,CASE WHEN to_char(b.dt_prev_execucao, 'hh24:mi')='00:00' THEN  to_char(b.dt_prev_execucao,'dd/mm/yyyy hh24:mi:ss')  ELSE to_char(b.dt_prev_execucao,'dd/mm/yyyy hh24:mi')||':00' END ),1,2000),
	a.dt_inicio_prescr,
	a.dt_validade_prescr,
	b.dt_prev_execucao,
	trunc(a.dt_inicio_prescr,'mi'),
	a.dt_prescricao
into STRICT	ds_horarios_w,
	dt_inicio_prescr_w,
	dt_validade_prescr_w,
	dt_prev_execucao_w,
	dt_prescricao_w,
	dt_prescr_w
from	prescr_procedimento b,
	prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p
and	a.nr_prescricao	= b.nr_prescricao
and	b.nr_sequencia	= nr_seq_item_p;

qt_dia_adic_w:= 0;

if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	while(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') LOOP
		select	position(' ' in ds_horarios_w)
		into STRICT	k
		;

		if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
			ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
			ds_hora_w		:= replace(ds_hora_w, ' ','');
			ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
		elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			ds_hora_w 		:= replace(ds_horarios_w,' ','');
			ds_horarios_w	:= '';
		end if;

		if (position('AA' in ds_hora_w) > 0) then
			qt_dia_adic_w	:= qt_dia_adic_w + 1;
		elsif (position('A' in ds_hora_w) > 0) then
			qt_dia_adic_w	:= 1;
		end if;

		ds_hora_w	:= replace(ds_hora_w,'A','');
		ds_hora_w	:= replace(ds_hora_w,'A','');
		if (dt_prev_execucao_w >= dt_prescr_w) then
			dt_horario_w	:=	pkg_date_utils.get_time(
						dt_prev_execucao_w,
						replace(ds_hora_w,'A',''),
						0);
		else
			dt_horario_w	:= 	pkg_date_utils.get_time(
						dt_prev_execucao_w + coalesce(qt_dia_adic_w,0),
						replace(ds_hora_w,'A',''),
						0);
		end if;


		if	((dt_horario_w <  trunc(dt_prescr_w,'mi')) or (qt_dia_adic_w > 0)) then
			dt_horario_w	:= dt_horario_w + 1;
		end if;

		if (dt_horario_w		< trunc(dt_prescr_w,'mi')) or (dt_horario_w		> dt_validade_prescr_w) then
			ds_horarios_retorno_w	:= ds_horarios_retorno_w || ' - ' ||ds_hora_w;
		end if;

	end loop;
end if;

return	ds_horarios_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_hor_validade_proced ( nr_prescricao_p bigint, nr_seq_item_p bigint) FROM PUBLIC;

