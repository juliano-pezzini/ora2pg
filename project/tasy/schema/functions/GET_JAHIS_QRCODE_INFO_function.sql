-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_jahis_qrcode_info ( nr_sequencia_p bigint) RETURNS text AS $body$
DECLARE


TYPE type_fields IS TABLE OF varchar(255);

ds_retorno_w text;
ds_info_atual_w varchar(4000);
nr_count_w bigint := 1;
addres_w varchar(200);
ds_prefecture_code_w varchar(2);
nm_fantasia_estab_w estabelecimento.nm_fantasia_estab%type;
ds_department_w varchar(40);
cd_external_code_w smallint;
cd_physician_w varchar(10);
nm_physician_main_w varchar(200);
nm_physician_translated_w varchar(200);
age_w smallint;
cd_patient_w atendimento_paciente.cd_pessoa_fisica%type;
public_expense_w bigint;
nm_patient_main_w varchar(200);
nm_patient_translated_w varchar(200);
cd_patient_sex_w pessoa_fisica.ie_sexo%type;
dt_birthdate_w varchar(30);
cd_insurer_number_w convenio.cd_externo%type;
cd_insurer_symbol_w atend_categoria_convenio.cd_usuario_convenio%type;
cd_insurer_id_w atend_categoria_convenio.cd_usuario_convenio%type;
cd_insurer_dependent_w atend_categoria_convenio.cd_dependente%type;
cd_job_ground_w smallint;
dt_initial_w varchar(30);
dt_final_w varchar(30);
sequencia_w bigint;
qt_dias_padrao_w smallint;
standard_adm_code_w bigint;
yjcode_w varchar(1);
nr_atendimento_w bigint;
cd_estab_w bigint;
nm_usuario_w varchar(200);
cd_departamento_w bigint;
si_type_of_prescription_w varchar(200);

--get prescription information
c_medic CURSOR FOR
SELECT cm.cd_intervalo,
      cm.cd_mat_comp1,
      cm.cd_mat_comp2,
      cm.cd_mat_comp3,
      cm.cd_mat_comp4,
      cm.cd_mat_comp5,
      cm.cd_mat_comp6,
      cm.cd_mat_comp7,
      cm.cd_mat_dil,
      cm.cd_material,
      cm.cd_mat_recons,
      cm.cd_mat_red,
      cm.cd_mat_soluc1,
      cm.cd_mat_soluc2,
      cm.cd_mat_soluc3,
      cm.cd_mat_soluc4,
      cm.cd_mat_soluc5,
      obter_desc_unidade_medida(cm.cd_unidade_medida) cd_unidade_medida,
      cm.cd_unid_med_dose_comp1,
      cm.cd_unid_med_dose_comp2,
      cm.cd_unid_med_dose_comp3,
      cm.cd_unid_med_dose_comp4,
      cm.cd_unid_med_dose_comp5,
      cm.cd_unid_med_dose_comp6,
      cm.cd_unid_med_dose_comp7,
      cm.cd_unid_med_dose_dil,
      cm.cd_unid_med_dose_recons,
      cm.cd_unid_med_dose_red,
      cm.cd_unid_med_dose_sol1,
      cm.cd_unid_med_dose_sol2,
      cm.cd_unid_med_dose_sol3,
      cm.cd_unid_med_dose_sol4,
      cm.cd_unid_med_dose_sol5,
      cm.ds_dose_dif_dom,
      cm.ds_dose_diferenciada,
      cm.ds_dose_diferenciada_comp1,
      cm.ds_dose_diferenciada_comp2,
      cm.ds_dose_diferenciada_comp3,
      cm.ds_dose_diferenciada_comp4,
      cm.ds_dose_diferenciada_comp5,
      cm.ds_dose_diferenciada_comp6,
      cm.ds_dose_diferenciada_comp7,
      cm.ds_dose_diferenciada_dil,
      cm.ds_dose_diferenciada_rec,
      cm.ds_dose_diferenciada_red,
      cm.ie_via_aplicacao,
      cm.nr_sequencia,
      cm.qt_dose,
      cm.qt_dose_comp1,
      cm.qt_dose_comp2,
      cm.qt_dose_comp3,
      cm.qt_dose_comp4,
      cm.qt_dose_comp5,
      cm.qt_dose_comp6,
      cm.qt_dose_comp7,
      cm.qt_dose_dil,
      cm.qt_dose_recons,
      cm.qt_dose_red,
      cm.qt_dose_soluc1,
      cm.qt_dose_soluc2,
      cm.qt_dose_soluc3,
      cm.qt_dose_soluc4,
      cm.qt_dose_soluc5,
      cm.qt_solucao,
      cm.qt_solucao_dil,
      cm.qt_solucao_red,
      cm.qt_solucao_total,
      cm.qt_unitaria,
      cm.qt_volume,
	  obter_quantidade_horarios(cm.ds_horarios) qt_total_dia,
	  cm.qt_dosagem_diferenciada,
	  i.standard_adm_code,
	
	--validation for differentiated dose, 1st dose
	case qt_dose
    when 0 then separar_dose_diferenciada(ds_dose_diferenciada, 1)
	else to_char(qt_dose)
	end   as qt_dose_dif,

	--validation for differentiated dose, 2st dose
	case qt_dose
    when 0 then separar_dose_diferenciada(ds_dose_diferenciada, 2)
	else to_char(qt_dose)
	end   as qt_dose_dif_1,

	--converting and multiplying the dose amount * number of days
	to_number(case qt_dose
    when 0 then separar_dose_diferenciada(ds_dose_diferenciada, 1)
	else to_char(qt_dose)
	end,   '99.99') * qt_dias_padrao_w * obter_quantidade_horarios(cm.ds_horarios)
	as qt_dose_conv,
	
	--validate of yjcode
	case
	when yjcode_w = '4' then (select x.cd_yj_code from material x where x.cd_material = cm.cd_material)
	when yjcode_w = '7' then (select concat(substr(x.cd_yj_code, 1, length(x.cd_yj_code) - 3), 'ZZZ')  from material x where x.cd_material = cm.cd_material) 
	else '1'
	end as ds_yj_code

from 	intervalo_prescricao i,
		cpoe_material cm
where 	cm.nr_atendimento = nr_atendimento_w
and 	cm.nr_seq_cpoe_order_unit = nr_sequencia_p
and 	(cm.dt_liberacao IS NOT NULL AND cm.dt_liberacao::text <> '')
and 	coalesce(cm.dt_suspensao::text, '') = ''
and 	coalesce(cm.dt_lib_suspensao::text, '') = ''
and 	i.cd_intervalo = cm.cd_intervalo;

function get_break_line return text is;
BEGIN
  return chr(13) || chr(10);
end;

function put_comma(ds_output_p varchar2) return varchar2 is
begin
  return ',' || ds_output_p;
end;

begin

--get nr_seq order_unit, type_of_general_name, establishment, dt_start/dt_end
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	
	select	nr_sequencia as sequencia,
			case
			when si_general_name_type = 'G' then  7
			when si_general_name_type = 'N' then 4
			else 1
			end as yjcode,
			nr_atendimento,
			obter_estab_atendimento(nr_atendimento) as cd_estab,
			to_char((dt_start), 'yyyymmdd'),
			to_char(dt_start, 'yyyymmdd') + 4,
			substr(obter_dados_pf_pj(null, (obter_cgc_estabelecimento(obter_estab_atendimento(nr_atendimento))), 'UF'),0,2),
			obter_nome_fantasia_estab(obter_estab_atendimento(nr_atendimento)),
			si_type_of_prescription,
			cd_departamento_med,
			nm_usuario
	into STRICT	sequencia_w,
			yjcode_w,
			nr_atendimento_w,
			cd_estab_w,
			dt_initial_w,
			dt_final_w,
			ds_prefecture_code_w,
			nm_fantasia_estab_w,
			si_type_of_prescription_w,
			cd_departamento_w,
			nm_usuario_w
	from 	cpoe_order_unit
	where 	nr_sequencia = nr_sequencia_p;

	if (si_type_of_prescription_w = 'OPOOH') then

		if (cd_departamento_w IS NOT NULL AND cd_departamento_w::text <> '') then
			select	cd_external_code,
					ds_departamento
			into STRICT 	cd_external_code_w,
					ds_department_w
			from 	departamento_medico
			where 	cd_departamento =	cd_departamento_w;
		end if;
		
		begin
		select	b.cd_pessoa_fisica
		into STRICT	cd_physician_w
		from	medico b,
				usuario a
		where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and		a.nm_usuario = nm_usuario_w;
		
		exception
			when others then
			cd_physician_w := null;
			RAISE EXCEPTION '%', 'cd_physician_w is null' USING ERRCODE = '45002';
		end;
		
		 --get physician name
		if (coalesce(cd_physician_w::text, '') = '') then
			select a.cd_medico_resp
			into STRICT cd_physician_w
			from atendimento_paciente a
			where a.nr_atendimento = nr_atendimento_w;
		end if;

		 --get physician name
		if (cd_physician_w IS NOT NULL AND cd_physician_w::text <> '') then
			select a.cd_pessoa_fisica,
				  t_main.nm_pessoa_fisica nm_physician_main,
				  t_translated.nm_pessoa_fisica nm_physician_translated
			into STRICT cd_physician_w,
				nm_physician_main_w,
				nm_physician_translated_w
			from 	table(search_names_dev(null, cd_physician_w, null, null, 'main')) t_main,
					table(search_names_dev(null, cd_physician_w, null, null, 'translated')) t_translated,
					medico a
			where a.cd_pessoa_fisica = t_main.cd_pessoa_fisica
			and a.cd_pessoa_fisica = t_translated.cd_pessoa_fisica
			and	a.cd_pessoa_fisica = cd_physician_w;
		end if;

		 --get the patient's name, age, type of accident
		select	a.cd_pessoa_fisica,
				t_main.nm_pessoa_fisica nm_physician_main,
				t_translated.nm_pessoa_fisica nm_physician_translated,
						case
							when(obter_dados_pf(a.cd_pessoa_fisica,'I') < 6) then '3'
							when(obter_dados_pf(a.cd_pessoa_fisica,'I') > 6) then '2'
						else '1'
					end as age,
				a.nr_seq_tipo_acidente
		into STRICT	cd_patient_w,
				nm_patient_main_w,
				nm_patient_translated_w,
				age_w,
				cd_job_ground_w
		from 	atendimento_paciente a,
				table(search_names_dev(null, a.cd_pessoa_fisica, null, null, 'main')) t_main,
				table(search_names_dev(null, a.cd_pessoa_fisica, null, null, 'translated')) t_translated
		where 	a.nr_atendimento = nr_atendimento_w
		and 	a.cd_pessoa_fisica = t_main.cd_pessoa_fisica
		and 	a.cd_pessoa_fisica = t_translated.cd_pessoa_fisica;

		 --get patient gender
		if (cd_patient_w IS NOT NULL AND cd_patient_w::text <> '') then
			select	CASE WHEN a.ie_sexo='M' THEN  1 WHEN a.ie_sexo='F' THEN  2  ELSE 0 END ,
					to_char(dt_nascimento, 'yyyymmdd')
			into STRICT 	cd_patient_sex_w,
					dt_birthdate_w
			from 	pessoa_fisica a
			where 	a.cd_pessoa_fisica = cd_patient_w;
		end if;

		--get patented address
		addres_w := obter_compl_pf(cd_patient_w,1,'EC');

		--get the insurance number and dependent code
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			select	b.cd_externo,
					a.cd_usuario_convenio,
					a.cd_usuario_convenio,
					CASE WHEN a.cd_dependente=1 THEN  1  ELSE 2 END
			into STRICT 	cd_insurer_number_w,
					cd_insurer_symbol_w,
					cd_insurer_id_w,
					cd_insurer_dependent_w
			from 	atend_categoria_convenio a,
					convenio b
			where 	a.nr_atendimento = nr_atendimento_w
			and 	b.cd_convenio = obter_convenio_atendimento(nr_atendimento_w)
			and 	a.cd_convenio = b.cd_convenio;
		end if;

		--get number of days
		if (sequencia_w IS NOT NULL AND sequencia_w::text <> '') then
			select	qt_dias_padrao
			into STRICT	qt_dias_padrao_w
			from	cpoe_rp 
			where	nr_seq_cpoe_order_unit = sequencia_w;
		end if;

		--get insunrace number when public
		if (cd_patient_w IS NOT NULL AND cd_patient_w::text <> '') then
			select	max(
						na.cd_public_expense_defrayer) as public_expense
			into STRICT  	public_expense_w
			from 	nais_insurance ni
			left outer join nais_insurance_accessory na on na.nr_seq_nais_insurance = ni.cd_insurance_number
			where	cd_pessoa_fisica = cd_patient_w;
		end if;
		
		/*return*/

		dbms_lob.createtemporary(ds_retorno_w,FALSE,DBMS_LOB.CALL);
		dbms_lob.open(ds_retorno_w,dbms_lob.lob_readwrite);

		ds_info_atual_w := 'JAHIS7' || get_break_line();
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '1' || put_comma('1') || put_comma('0208850') || put_comma('11') || put_comma(nm_fantasia_estab_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '4' || put_comma('2') || put_comma(cd_external_code_w) ||put_comma(ds_department_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '5' || put_comma(cd_physician_w) || put_comma(nm_physician_translated_w) || put_comma(nm_physician_main_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '11' || put_comma(cd_patient_w) || put_comma(nm_patient_main_w) || put_comma(nm_patient_translated_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '12' || put_comma(cd_patient_sex_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '13' || put_comma(dt_birthdate_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '14' || put_comma(age_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '22' || put_comma(cd_insurer_number_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '23' || put_comma('') || put_comma(cd_insurer_id_w) || put_comma(cd_insurer_dependent_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '25' || put_comma(cd_job_ground_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		if (public_expense_w IS NOT NULL AND public_expense_w::text <> '') then
		ds_info_atual_w := '27' || put_comma(public_expense_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		end if;

		if (public_expense_w IS NOT NULL AND public_expense_w::text <> '') then
		ds_info_atual_w := '28' || put_comma(public_expense_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		end if;

		if (public_expense_w IS NOT NULL AND public_expense_w::text <> '') then
		ds_info_atual_w := '29' || put_comma(public_expense_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		end if;

		if (public_expense_w IS NOT NULL AND public_expense_w::text <> '')then
		ds_info_atual_w := '30' || put_comma(public_expense_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		end if;

		ds_info_atual_w := '51' || put_comma(dt_initial_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '52' || put_comma(dt_final_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		ds_info_atual_w := '61' || put_comma('') || put_comma(addres_w) || get_break_line;
		dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		for c_medic_w in c_medic loop

		  ds_info_atual_w := '101' || put_comma(nr_count_w) || put_comma(c_medic_w.qt_dose_dif) || put_comma(null) || put_comma(qt_dias_padrao_w) || get_break_line;
		  dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		  ds_info_atual_w := '111' || put_comma(nr_count_w) || put_comma('1') || put_comma(c_medic_w.standard_adm_code) || put_comma(c_medic_w.qt_total_dia) || get_break_line;
		  dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		  ds_info_atual_w := '201' || put_comma(nr_count_w) || put_comma(c_medic_w.qt_dose_dif) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_material), 1, 50)) || put_comma(c_medic_w.qt_dose_dif) || put_comma('1') || put_comma(c_medic_w.cd_unidade_medida) || get_break_line;
		  dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);

		  ds_info_atual_w := '211' || put_comma(nr_count_w) || put_comma('1') || put_comma(c_medic_w.qt_dose_conv) || get_break_line;
		  dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w),ds_info_atual_w);

			  if (c_medic_w.qt_dose_dif_1 != 0) then
		  ds_info_atual_w := '221' || put_comma(nr_count_w) || put_comma(c_medic_w.qt_total_dia) || put_comma(c_medic_w.qt_dose_dif_1) || get_break_line;
		  dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w),ds_info_atual_w);

		  end if;

		  if (c_medic_w.cd_mat_comp1 IS NOT NULL AND c_medic_w.cd_mat_comp1::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp1), 1, 50)) || put_comma(c_medic_w.qt_dose) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp1) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_comp2 IS NOT NULL AND c_medic_w.cd_mat_comp2::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) ||  put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp2), 1, 50)) || put_comma(c_medic_w.qt_dose_comp2) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp2) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_comp3 IS NOT NULL AND c_medic_w.cd_mat_comp3::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp3), 1, 50)) || put_comma(c_medic_w.qt_dose_comp3) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp3) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_comp4 IS NOT NULL AND c_medic_w.cd_mat_comp4::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp4), 1, 50)) || put_comma(c_medic_w.qt_dose_comp4) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp4) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_comp5 IS NOT NULL AND c_medic_w.cd_mat_comp5::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp5), 1, 50)) || put_comma(c_medic_w.qt_dose_comp5) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp5) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_comp6 IS NOT NULL AND c_medic_w.cd_mat_comp6::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp6), 1, 50)) || put_comma(c_medic_w.qt_dose_comp6) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp6) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_comp7 IS NOT NULL AND c_medic_w.cd_mat_comp7::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_comp7), 1, 50)) || put_comma(c_medic_w.qt_dose_comp7) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_comp7) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_dil IS NOT NULL AND c_medic_w.cd_mat_dil::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_dil), 1, 50)) || put_comma(c_medic_w.qt_dose_dil) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_dil) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_recons IS NOT NULL AND c_medic_w.cd_mat_recons::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_recons), 1, 50)) || put_comma(c_medic_w.qt_dose_recons) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_recons) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_red IS NOT NULL AND c_medic_w.cd_mat_red::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_red), 1, 50)) || put_comma(c_medic_w.qt_dose_red) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_red) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_soluc1 IS NOT NULL AND c_medic_w.cd_mat_soluc1::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_soluc1), 1, 50)) || put_comma(c_medic_w.qt_dose_soluc1) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_sol1) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_soluc2 IS NOT NULL AND c_medic_w.cd_mat_soluc2::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_soluc2), 1, 50)) || put_comma(c_medic_w.qt_dose_soluc2) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_sol2) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_soluc3 IS NOT NULL AND c_medic_w.cd_mat_soluc3::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_soluc3), 1, 50)) || put_comma(c_medic_w.qt_dose_soluc3) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_sol3) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_soluc4 IS NOT NULL AND c_medic_w.cd_mat_soluc4::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) || put_comma(substr(obter_desc_material(c_medic_w.cd_mat_soluc4), 1, 50)) || put_comma(c_medic_w.qt_dose_soluc4) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_sol4) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;

		  if (c_medic_w.cd_mat_soluc5 IS NOT NULL AND c_medic_w.cd_mat_soluc5::text <> '') then
			ds_info_atual_w := '201' || put_comma(sequencia_w) || put_comma(yjcode_w) || put_comma(c_medic_w.ds_yj_code) ||  put_comma(substr(obter_desc_material(c_medic_w.cd_mat_soluc5), 1, 50)) || put_comma(c_medic_w.qt_dose_soluc5) || put_comma('1') || put_comma(c_medic_w.cd_unid_med_dose_sol5) || get_break_line;
			dbms_lob.writeAppend(ds_retorno_w, length(ds_info_atual_w), ds_info_atual_w);
		  end if;


			nr_count_w :=nr_count_w + 1;

		end loop;
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_jahis_qrcode_info ( nr_sequencia_p bigint) FROM PUBLIC;

