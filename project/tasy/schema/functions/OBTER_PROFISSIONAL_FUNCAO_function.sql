-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_profissional_funcao ( nr_seq_agenda_p bigint, ie_type_p text) RETURNS varchar AS $body$
DECLARE


/*
  M  - Médico                               - IE_MEDICO
  A  - Anestesista                          - IE_ANESTESISTA
  MC - Médico e Cirurgião                   - IE_CIRURGIAO + IE_MEDICO
  AP - Anestesista e Anestesista Principal  - IE_ANESTESISTA_PRINCIPAL + IE_ANESTESISTA
  E  - Enfermeiro                           - IE_ENFERMEIRA
  O  - Outros                               - IE_AUXILIAR + IE_INSTRUMENTADOR + IE_OBSTETRA + IE_PEDIATRA              
*/
ds_return_w			varchar(255) := '';
ds_names_w			varchar(255);
ds_cirurgiao_w    	varchar(255) := null;
ds_anestesista_w	varchar(255) := null;

c01 CURSOR FOR
	SELECT  obter_nome_pessoa_fisica(pa.cd_profissional, null) ds_names
	from    profissional_agenda pa,
		funcao_medico fm
	where   pa.nr_seq_agenda = nr_seq_agenda_p
	and     pa.cd_funcao = fm.cd_funcao
	and     coalesce(fm.ie_medico, 'N')= 'S';	

c02 CURSOR FOR
	SELECT  obter_nome_pessoa_fisica(pa.cd_profissional, null) ds_names
	from    profissional_agenda pa,
		funcao_medico fm
	where   pa.nr_seq_agenda = nr_seq_agenda_p
	and     pa.cd_funcao = fm.cd_funcao
	and     coalesce(fm.ie_anestesista,'N') = 'S';

c03 CURSOR FOR
	SELECT  obter_nome_pessoa_fisica(pa.cd_profissional, null) ds_names
	from    profissional_agenda pa,
		funcao_medico fm
	where   pa.nr_seq_agenda = nr_seq_agenda_p
	and     pa.cd_funcao = fm.cd_funcao
  and (coalesce(fm.ie_medico, 'N') = 'S' or coalesce(fm.ie_cirurgiao, 'N') = 'S');

c04 CURSOR FOR
	SELECT  obter_nome_pessoa_fisica(pa.cd_profissional, null) ds_names
	from    profissional_agenda pa,
		funcao_medico fm
	where   pa.nr_seq_agenda = nr_seq_agenda_p
	and     pa.cd_funcao = fm.cd_funcao
  and (coalesce(fm.ie_anestesista, 'N') = 'S' or coalesce(fm.ie_anestesista_principal, 'N') = 'S');

c05 CURSOR FOR
	SELECT  obter_nome_pessoa_fisica(pa.cd_profissional, null) ds_names
	from    profissional_agenda pa,
		funcao_medico fm
	where   pa.nr_seq_agenda = nr_seq_agenda_p
	and     pa.cd_funcao = fm.cd_funcao
	and     coalesce(ie_enfermeira, 'N') = 'S';

c06 CURSOR FOR
	SELECT  obter_nome_pessoa_fisica(pa.cd_profissional, null) ds_names
	from    profissional_agenda pa,
			funcao_medico fm
	where   pa.nr_seq_agenda = nr_seq_agenda_p
	and     pa.cd_funcao = fm.cd_funcao
	and (coalesce(fm.IE_CIRURGIAO, 'N')                 = 'N' 
            and coalesce(fm.IE_MEDICO, 'N')                = 'N' 
            and coalesce(fm.IE_ANESTESISTA_PRINCIPAL, 'N') = 'N' 
            and coalesce(fm.IE_ANESTESISTA, 'N')           = 'N'   
            and coalesce(fm.IE_ENFERMEIRA, 'N')            = 'N');

BEGIN

if (ie_type_p = 'M')then
	open c01;
	loop
	fetch c01 into
		ds_names_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			ds_return_w := ds_return_w||ds_names_w||', ';	
		end;
	end loop;
	close c01;
elsif (ie_type_p = 'A')then
	open c02;
	loop
	fetch c02 into
		ds_names_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
			ds_return_w := ds_return_w||ds_names_w||', ';	
		end;
	end loop;
	close c02;

elsif (ie_type_p = 'MC')then
	open c03;
	loop
	fetch c03 into
		ds_names_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
			ds_return_w := ds_return_w||ds_names_w||', ';	
		end;
	end loop;
	close c03;
	
	select 	obter_nome_pessoa_fisica(cd_medico, null)
	into STRICT 	ds_cirurgiao_w
	from 	agenda_paciente
	where 	nr_sequencia = nr_seq_agenda_p;

	if(((ds_cirurgiao_w IS NOT NULL AND ds_cirurgiao_w::text <> '')
		and    position(upper(ds_cirurgiao_w) in upper(ds_return_w)) = 0)
		or coalesce(ds_return_w::text, '') = '')  then
		ds_return_w := ds_cirurgiao_w || ', ' || ds_return_w;
	end if;

elsif (ie_type_p = 'AP')then
	open c04;
	loop
	fetch c04 into
		ds_names_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
			ds_return_w := ds_return_w||ds_names_w||', ';	
		end;
	end loop;
	close c04;
	
	select 	obter_nome_pessoa_fisica(cd_anestesista, null)
	into STRICT 	ds_anestesista_w
	from 	agenda_paciente
	where 	nr_sequencia = nr_seq_agenda_p;

	if (ds_anestesista_w IS NOT NULL AND ds_anestesista_w::text <> '') then
		ds_return_w := ds_anestesista_w || ', ' || ds_return_w;
	end if;

elsif (ie_type_p = 'E')then
	open c05;
	loop
	fetch c05 into
		ds_names_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
		begin
			ds_return_w := ds_return_w||ds_names_w||', ';	
		end;
	end loop;
	close c05;

elsif (ie_type_p = 'O')then
	open c06;
	loop
	fetch c06 into
		ds_names_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
		begin
			ds_return_w := ds_return_w||ds_names_w||', ';	
		end;
	end loop;
	close c06;
end if;

if (length(ds_return_w) > 0) then
	ds_return_w := substr(ds_return_w,1,length(ds_return_w) - 2);
end if;

return	ds_return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_profissional_funcao ( nr_seq_agenda_p bigint, ie_type_p text) FROM PUBLIC;

