-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_reg_valido_ativacao ( dt_fim_p timestamp, dt_inicio_p timestamp, dt_referencia_p timestamp, cd_funcao_origem bigint default null, cd_perfil_p bigint default null, ie_retrogrado_p text default null, dt_liberacao_p timestamp default null, ie_dia_inteiro_p text default 'N', ie_futuro_p text default null, dt_liberacao_fut_p timestamp default null, qt_horas_quimio_p bigint default 0, ie_timeline_today_p text default 'N', ie_oculta_nao_iniciado_p text default 'N') RETURNS char AS $body$
DECLARE


nr_fim_w			bigint;
dt_ref_inicio_w		timestamp;
dt_ref_fim_w		timestamp;
qt_hor_w			bigint := 0;
qt_horas_ant_w		cpoe_presentation_rule.qt_horas_anteriores%type;
dt_referencia_w    timestamp;
dt_limite_timeline_w    timestamp;

BEGIN

if (coalesce(dt_referencia_p::text, '') = '') then
	dt_referencia_w := clock_timestamp();
else
	dt_referencia_w := dt_referencia_p;
end if;

if (ie_oculta_nao_iniciado_p = 'S') then
	if (ie_timeline_today_p = 'N') then
		dt_limite_timeline_w := to_date(to_char(dt_referencia_w + 1,'dd/mm/yyyy')||' 08:00' ,'dd/mm/yyyy hh24:mi');
		if (to_date(to_char(dt_inicio_p,'dd/mm/yyyy hh24:mi'),'dd/mm/yyyy hh24:mi') >= dt_limite_timeline_w) then
		   return 'N';
		end if;
	else
		qt_horas_ant_w := cpoe_obter_quant_horas_ant(cd_perfil_p);
		dt_limite_timeline_w := to_date(to_char(dt_referencia_w + ((24 - qt_horas_ant_w)/24) ,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		if (to_date(to_char(dt_inicio_p,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') >= dt_limite_timeline_w) then
		   return 'N';
		end if;
	end if;
end if;

if (coalesce(ie_retrogrado_p,'N') = 'S') and (coalesce(dt_liberacao_p::text, '') = '') then
	return 'S';
end if;

if (coalesce(ie_futuro_p, 'N') = 'S') and (coalesce(dt_liberacao_fut_p::text, '') = '') then
	return 'S';
end if;

if (coalesce(dt_fim_p::text, '') = '') then
	return 'S';
end if;

nr_fim_w := (to_char( dt_fim_p , 'hh24'))::numeric;

if (nr_fim_w = '24') then
	nr_fim_w  := 00;
end if;

if (cd_funcao_origem = 281 or cd_funcao_origem = 3130) then
	if (trunc(dt_referencia_w) > trunc(clock_timestamp())) then
		dt_ref_inicio_w := (to_date(TO_CHAR(dt_referencia_w, 'dd/mm/yyyy')||' 08:00:00', 'dd/mm/yyyy hh24:mi:ss'));
	else
		qt_horas_ant_w := cpoe_obter_quant_horas_ant(cd_perfil_p);

		dt_ref_inicio_w := (to_date(TO_CHAR(dt_referencia_w, 'dd/mm/yyyy')||to_char(clock_timestamp(),' hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') -(qt_horas_ant_w/24));
	end if;

	dt_ref_fim_w := (dt_ref_inicio_w + 1) - (1/1440);

	if ((dt_ref_inicio_w between dt_inicio_p and dt_fim_p)
		or (dt_ref_fim_w between dt_inicio_p and dt_fim_p)) then
		return 'S';
	end if;

	if ((trunc(dt_fim_p) = trunc(clock_timestamp())) and
	   to_date(to_char(dt_fim_p,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') >=  to_date(to_char(clock_timestamp() -(qt_horas_ant_w/24) ,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')) then
	   return 'S';
	end if;	

	if	(coalesce(qt_horas_quimio_p,0) > 0 and
		trunc(dt_inicio_p,'mi') < (trunc(dt_referencia_w,'mi') + (qt_horas_quimio_p / 24)) and
		trunc(dt_fim_p,'dd') > trunc(clock_timestamp(),'dd')) then
		return 'S';
	end if;

elsif (trunc(dt_referencia_w) = trunc(clock_timestamp()) and ie_dia_inteiro_p = 'S') then
	if (trunc(dt_fim_p) = trunc(dt_referencia_w + 1) and nr_fim_w between 00 and 08) then
	   return 'S';
	end if;
	if ((trunc(dt_fim_p) >= trunc(dt_referencia_w + 1) or
		trunc(dt_fim_p) = trunc(clock_timestamp())) and
		 to_date(to_char(dt_fim_p,'dd/mm/yyyy hh24'),'dd/mm/yyyy hh24:mi') >=  to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' 08:00' ,'dd/mm/yyyy hh24:mi')) then
	   return 'S';
	end if;
elsif (trunc(dt_referencia_w) = trunc(clock_timestamp())) then
	begin

	if (trunc(dt_fim_p) = trunc(dt_referencia_w + 1) and
		nr_fim_w between 00 and 08) then
	   return 'S';
	end if;
	qt_horas_ant_w := cpoe_obter_quant_horas_ant(cd_perfil_p);
	if ((trunc(dt_fim_p) >= trunc(dt_referencia_w + 1) or
		trunc(dt_fim_p) = trunc(clock_timestamp())) and
		to_date(to_char(dt_fim_p,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') >=  to_date(to_char(clock_timestamp() -(qt_horas_ant_w/24) ,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')) then
	   return 'S';
	end if;

	end;
elsif (trunc(dt_referencia_w) = trunc(clock_timestamp() + interval '1 days')) then
	if (trunc(dt_fim_p) >= trunc(dt_referencia_w)) then
		if (trunc(dt_fim_p) > trunc(dt_referencia_w)) then
			return 'S';
		elsif (trunc(dt_fim_p) = trunc(dt_referencia_w) and
			nr_fim_w > 08) then
			return 'S';
		end if;
	end if;

elsif (trunc(dt_fim_p) >= trunc(dt_referencia_w)) then
	if ((nr_fim_w < 08) and
		((to_date(to_char(dt_fim_p,'dd/mm/yyyy hh24'),'dd/mm/yyyy hh24')
		between to_date(to_char(dt_referencia_w,'dd/mm/yyyy ')||' 08','dd/mm/yyyy hh24')
		and to_date(to_char(dt_referencia_w + 1,'dd/mm/yyyy ')||' 07','dd/mm/yyyy hh24')) or
		trunc(dt_fim_p) > to_char(dt_referencia_w + 1))) then
		return 'S';
	elsif (nr_fim_w between 09 and 23) then
		return 'S';
	end if;
end if;

return 'N';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION cpoe_reg_valido_ativacao ( dt_fim_p timestamp, dt_inicio_p timestamp, dt_referencia_p timestamp, cd_funcao_origem bigint default null, cd_perfil_p bigint default null, ie_retrogrado_p text default null, dt_liberacao_p timestamp default null, ie_dia_inteiro_p text default 'N', ie_futuro_p text default null, dt_liberacao_fut_p timestamp default null, qt_horas_quimio_p bigint default 0, ie_timeline_today_p text default 'N', ie_oculta_nao_iniciado_p text default 'N') FROM PUBLIC;

