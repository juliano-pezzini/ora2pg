-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_valores_pendente_ge ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, cd_estabelecimento_p bigint, ie_parametro_p text, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE

/* ie_opcao_p	 
1 - Somente particular. 
*/
				 
 
count_w			bigint := 0;
ds_retorno_w		varchar(255);				
qt_convenio_part_w	bigint;
		

BEGIN 
if (ie_opcao_p	= 1) then 
	select count(*) 
	into STRICT	qt_convenio_part_w 
	from  convenio x 
	where	x.cd_convenio = (  	SELECT coalesce(max(cd_convenio),0) 
					from  Atend_categoria_convenio a 
					where a.nr_atendimento		= nr_atendimento_p 
					and  a.dt_inicio_vigencia	= 
						  (	  SELECT max(dt_inicio_vigencia) 
								  from Atend_categoria_convenio b 
								  where nr_atendimento	= nr_atendimento_p)) 
	and	x.ie_tipo_convenio	= 1;
else 
	qt_convenio_part_w := 1;
end if;
 
if (qt_convenio_part_w > 0) then 
	select	count(*) 
	into STRICT	count_w 
	from ( 
	/* 
		select	1 
		from	atend_categoria_convenio d, 
			convenio c, 
			atendimento_paciente a, 
			titulo_receber b       
		where	b.nr_atendimento 	= a.nr_atendimento 
		and	a.nr_atendimento 	= d.nr_atendimento 
		and	obter_atecaco_atendimento(a.nr_atendimento) = d.nr_seq_interno 
		and	(b.ie_situacao  	= '1' or exists 
							(select	1  
							from	cobranca o 
							where 	o.nr_titulo = b.nr_titulo 
							and 	o.ie_status = 'P')) 
		and	b.nr_interno_conta 	is null 
		and	d.cd_convenio		= c.cd_convenio 
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	c.ie_tipo_convenio	= 1 
		and	(0 = cd_estabelecimento_p or 
			b.cd_estabelecimento 	= cd_estabelecimento_p or 
			obter_estab_financeiro(b.cd_estabelecimento) = cd_estabelecimento_p) 
		and	((nvl(trunc(b.dt_pagamento_previsto),sysdate -1) < trunc(sysdate)) or 
			 (ie_parametro_p = 'N')) 
		union 
		select	1 
		from	convenio d,                  
			titulo_receber c,               
			conta_paciente b,               
			atendimento_paciente a             
		where	a.nr_atendimento	= b.nr_atendimento  
		and	b.nr_interno_conta	= c.nr_interno_conta   
		and	b.cd_convenio_parametro	= d.cd_convenio    
		and	d.ie_tipo_convenio	= 1 
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p           
		and	(c.ie_situacao     = '1' or exists(	select	1               
								from   cobranca o         
								where  o.nr_titulo = c.nr_titulo  
								and   o.ie_status = 'P')) 
		and	(0 = cd_estabelecimento_p or 
			c.cd_estabelecimento 	= cd_estabelecimento_p or 
			obter_estab_financeiro(c.cd_estabelecimento) = cd_estabelecimento_p)						 
		and	((nvl(trunc(c.dt_pagamento_previsto),sysdate -1) < trunc(sysdate)) or 
			 (ie_parametro_p = 'N')) 
		union                          
		select	1 
		from	convenio d,                  
			titulo_receber c                
		where	c.cd_convenio_conta 	= d.cd_convenio  
		and	c.cd_pessoa_fisica	= cd_pessoa_fisica_p     
		and	c.nr_atendimento 	is null            
		and	c.nr_interno_conta 	is null           
		and	c.nr_seq_protocolo 	is null           
		and	d.ie_tipo_convenio	= 1             
		and	(c.ie_situacao     = '1' or exists(	select	1               
								from   cobranca o 
								where  o.nr_titulo = c.nr_titulo 
								and   o.ie_status = 'P')) 
		and	(0 = cd_estabelecimento_p or 
			c.cd_estabelecimento = cd_estabelecimento_p or 
			obter_estab_financeiro(c.cd_estabelecimento) = cd_estabelecimento_p)						 
		and	((nvl(trunc(c.dt_pagamento_previsto),sysdate -1) < trunc(sysdate)) or 
			 (ie_parametro_p = 'N')) 
		union                          
		select	1 
		from	titulo_receber c                
		where	c.cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	c.nr_atendimento 	is null            
		and	c.nr_interno_conta 	is null           
		and	c.nr_seq_protocolo 	is null           
		and	c.cd_convenio_conta 	is null           
		and	(c.ie_situacao     	= '1' or exists( select	1               
								from   cobranca o         
								where  o.nr_titulo = c.nr_titulo 
								and   o.ie_status = 'P')) 
		and	(0 = cd_estabelecimento_p or 
			c.cd_estabelecimento = cd_estabelecimento_p or 
			obter_estab_financeiro(c.cd_estabelecimento) = cd_estabelecimento_p)						 
		and	((nvl(trunc(c.dt_pagamento_previsto),sysdate -1) < trunc(sysdate)) or 
			 (ie_parametro_p = 'N')) 
		union 
		/* Cheques */
 
		/* 
		select	1 
		from	atendimento_paciente c, 
			titulo_receber b, 
			cheque_cr a 
		where	a.nr_titulo		= b.nr_titulo(+) 
		and	b.nr_atendimento	= c.nr_atendimento(+) 
		and	obter_status_cheque(a.nr_seq_cheque) in (3,5,10) 
		and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	(0 = cd_estabelecimento_p or 
			a.cd_estabelecimento = cd_estabelecimento_p or 
			obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p) 
		union 
		/* OS 76007 - 12/12/2007 - Trazer cheques do recebimento de caixa */
 
		/* 
		select	1 
		from	atendimento_paciente d, 
			titulo_receber c, 
			titulo_receber_liq b, 
			cheque_cr a 
		where	b.nr_titulo		= c.nr_titulo 
		and	c.nr_atendimento	= d.nr_atendimento 
		and	a.nr_seq_caixa_rec	= b.nr_seq_caixa_rec 
		and	d.cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	(0 = cd_estabelecimento_p or 
			a.cd_estabelecimento = cd_estabelecimento_p or 
			obter_estab_financeiro(a.cd_estabelecimento) = cd_estabelecimento_p) 
		and	obter_status_cheque(a.nr_seq_cheque) in (3,5,10) 
		and	a.nr_titulo is null); */
 
		 
		SELECT	1 
		from	atendimento_paciente d, 
			titulo_receber c, 
			titulo_receber_liq b 
		where	b.nr_titulo		= c.nr_titulo 
		and	c.nr_atendimento	= d.nr_atendimento 
		and	d.cd_pessoa_fisica	= cd_pessoa_fisica_p 
		and	d.nr_atendimento 	= nr_atendimento_p ) alias2;
		 
	if (count_w > 0) then 
		ds_retorno_w	:= 'S';	
	else 
		ds_retorno_w	:= 'N';
	end if;
else	 
	-- Retornar vazio caso o atendimento n√£o for particular. 
	ds_retorno_w	:= '';
end if;		
 
 
 
return 	ds_retorno_w;	
	 
end 	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_valores_pendente_ge ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, cd_estabelecimento_p bigint, ie_parametro_p text, ie_opcao_p bigint) FROM PUBLIC;

