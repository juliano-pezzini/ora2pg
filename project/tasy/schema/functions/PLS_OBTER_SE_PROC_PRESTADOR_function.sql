-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_proc_prestador ( nr_seq_prestador_p bigint, nr_seq_prestador_exec_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_guia_p text, dt_procedimento_p timestamp, cd_estabelecimento_p bigint, ie_carater_internacao_p text, nr_seq_tipo_atendimento_p bigint, ie_conta_internacao_p text, nr_seq_plano_p bigint, ie_tipo_verific_p text default null, nr_seq_prestador_prot_p pls_protocolo_conta.nr_seq_prestador%type default null, cd_especialidade_p bigint default null, nr_seq_cbo_saude_p bigint default null, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) RETURNS varchar AS $body$
DECLARE

/*antigo*/

cd_prestador_w			varchar(30);
ie_tipo_atendimento_w		varchar(3)	:= null;
ie_retorno_w			varchar(2)	:= 'N';
ie_liberar_w			varchar(2);
ie_grupo_servico_w		varchar(1)	:= 'N';
ie_inclusao_prestador_w		varchar(1)	:= 'S';
cd_grupo_w			bigint;
nr_seq_grupo_servico_w		bigint;
ie_origem_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_tipo_prestador_w		bigint;
cd_area_w			area_procedimento.cd_area_procedimento%type;
cd_especialidade_w		grupo_proc.cd_especialidade%type;
dt_cadastro_w			timestamp;
nr_seq_tipo_prest_prot_w	pls_prestador.nr_seq_tipo_prestador%type;

/* ATENCAO !! 
Se for alterados parametros da function favor alterar tambem no form CorPLSLP - OPS - Localizador de Prestadores !

QUALQUER ATELRACAO FEITA NESTA ROTINA DEVERA SER FEITA NA PROCEDURE 'PLS_VALIDAR_LIB_PROC_PRESTADOR'
COM EXCESSAO DO PARAMETROS NR_SEQ_PRESTADOR_PROT_P POIS E USADAO PARA VALIDAR O PRETADOR DO PROTOCOLO O QUE NA ROTINA A CIMA NAO VALIDA

!! ATENCAO 	*/
C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_liberar,
		nr_seq_grupo_serv
	from	pls_prestador_proc
	where	((coalesce(nr_seq_prestador_prot, nr_seq_prestador)	= nr_seq_prestador_p) 	or (cd_prestador_princ = cd_prestador_w))
	and	((coalesce(nr_seq_prestador_exec::text, '') = '') 	or (nr_seq_prestador_exec = nr_seq_prestador_exec_p))
	and	((coalesce(cd_area_procedimento::text, '') = '') 	or ( cd_area_procedimento = cd_area_w))
	and	((coalesce(cd_especialidade_proc::text, '') = '') 	or (cd_especialidade_proc =  cd_especialidade_w))
	and	((coalesce(cd_grupo_proc::text, '') = '')	or ( cd_grupo_proc = cd_grupo_w))
	and	((coalesce(cd_procedimento::text, '') = '') 	or ( cd_procedimento = cd_procedimento_p AND ie_origem_proced = ie_origem_w))
	and	((coalesce(nr_seq_plano::text, '') = '') 	or (nr_seq_plano 	= nr_seq_plano_p))
	and	((coalesce(ie_tipo_guia::text, '') = '') 	or (ie_tipo_guia	= ie_tipo_guia_p))
	and	trunc(dt_procedimento_p,'dd') 	between trunc(coalesce(dt_inicio_vigencia,dt_procedimento_p-1),'dd') and trunc(coalesce(dt_fim_vigencia,dt_procedimento_p+1))
	and	((coalesce(ie_carater_internacao::text, '') = '') 	or (ie_carater_internacao = coalesce(ie_carater_internacao_p,ie_carater_internacao)))
	and	((nr_seq_tipo_atendimento = coalesce(nr_seq_tipo_atendimento_p,nr_seq_tipo_atendimento))	or (coalesce(nr_seq_tipo_atendimento::text, '') = ''))
	and	((ie_regime_atendimento = coalesce(ie_regime_atendimento_p,ie_regime_atendimento))	or (coalesce(ie_regime_atendimento::text, '') = ''))
	and	((ie_saude_ocupacional = coalesce(ie_saude_ocupacional_p,ie_saude_ocupacional))	or (coalesce(ie_saude_ocupacional::text, '') = ''))
	and (ie_internado = coalesce(ie_tipo_atendimento_w,ie_internado) or (coalesce(ie_internado::text, '') = '') or (ie_internado = 'N'))
	and (nr_seq_tipo_prestador = coalesce(nr_seq_tipo_prestador_w,nr_seq_tipo_prestador) 	or coalesce(nr_seq_tipo_prestador::text, '') = '')
	and (coalesce(nr_seq_grupo_produto::text, '') = '' or (nr_seq_grupo_produto	in (SELECT	x.nr_seq_grupo
										from	pls_preco_produto x
										where	x.nr_seq_plano	= nr_seq_plano_p)))
	and	((coalesce(nr_seq_prestador_prot::text, '') = '' ) 	or ( nr_seq_prestador_prot = nr_seq_prestador_prot_p ))
	and	((coalesce(nr_seq_tipo_prest_prot::text, '') = '') 	or ( nr_seq_tipo_prest_prot = nr_seq_tipo_prest_prot_w))
	and	((coalesce(cd_especialidade::text, '') = '')	or (cd_especialidade =  cd_especialidade_p))
	and	((coalesce(nr_seq_cbo_saude::text, '') = '')	or (nr_seq_cbo_saude =  nr_seq_cbo_saude_p))
	order by	
		coalesce(cd_procedimento,-1),
		coalesce(cd_grupo_proc,-1),
		coalesce(cd_especialidade_proc,-1),
		coalesce(cd_area_procedimento,-1),
		coalesce(ie_tipo_guia,' '),
		coalesce(ie_carater_internacao,' '),
		coalesce(cd_prestador_princ,' '),
		coalesce(nr_seq_prestador_exec,0),
		coalesce(nr_seq_prestador_prot, 0),
		coalesce(nr_seq_tipo_prest_prot, 0),
		coalesce(dt_inicio_vigencia, dt_procedimento_p),
		coalesce(dt_fim_vigencia, dt_procedimento_p),
		nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		ie_liberar,
		nr_seq_grupo_serv
	from	pls_prestador_proc
	where	nr_seq_prestador			= nr_seq_prestador_p
	and	((coalesce(nr_seq_prestador_exec::text, '') = '') 	or (nr_seq_prestador_exec = nr_seq_prestador_exec_p))
	and	((coalesce(cd_prestador_princ::text, '') = '') 		or (cd_prestador_princ = cd_prestador_w))
	and	((coalesce(cd_area_procedimento::text, '') = '') 	or ( cd_area_procedimento = cd_area_w))
	and	((coalesce(cd_especialidade_proc::text, '') = '') 	or (cd_especialidade_proc =  cd_especialidade_w))
	and	((coalesce(cd_grupo_proc::text, '') = '') 		or ( cd_grupo_proc = cd_grupo_w))
	and	((coalesce(cd_procedimento::text, '') = '') 		or ( cd_procedimento = cd_procedimento_p AND ie_origem_proced = ie_origem_w))
	and	((coalesce(nr_seq_plano::text, '') = '') 		or (nr_seq_plano 	= nr_seq_plano_p))
	and	((coalesce(ie_tipo_guia::text, '') = '') 		or (ie_tipo_guia	= ie_tipo_guia_p))
	and	trunc(dt_procedimento_p,'dd') 		between trunc(coalesce(dt_inicio_vigencia,dt_procedimento_p-1),'dd') and trunc(coalesce(dt_fim_vigencia,dt_procedimento_p+1))
	and	((coalesce(ie_carater_internacao::text, '') = '') 	or (ie_carater_internacao = coalesce(ie_carater_internacao_p,ie_carater_internacao)))
	and	((nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p)	or (coalesce(nr_seq_tipo_atendimento::text, '') = ''))
	and	((ie_regime_atendimento = coalesce(ie_regime_atendimento_p,ie_regime_atendimento))	or (coalesce(ie_regime_atendimento::text, '') = ''))
	and	((ie_saude_ocupacional = coalesce(ie_saude_ocupacional_p,ie_saude_ocupacional))	or (coalesce(ie_saude_ocupacional::text, '') = ''))
	and (ie_internado = coalesce(ie_tipo_atendimento_w,ie_internado) or (coalesce(ie_internado::text, '') = '') or (ie_internado = 'N'))
	and (nr_seq_tipo_prestador = coalesce(nr_seq_tipo_prestador_w,nr_seq_tipo_prestador) 	or coalesce(nr_seq_tipo_prestador::text, '') = '')
	and (coalesce(nr_seq_grupo_produto::text, '') = '' or (nr_seq_grupo_produto	in (SELECT	x.nr_seq_grupo
										from	pls_preco_produto x
										where	x.nr_seq_plano	= nr_seq_plano_p)))
	and	((coalesce(nr_seq_prestador_prot::text, '') = '' ) 	or ( nr_seq_prestador_prot = nr_seq_prestador_prot_p ))
	and	((coalesce(nr_seq_tipo_prest_prot::text, '') = '') 	or ( nr_seq_tipo_prest_prot = nr_seq_tipo_prest_prot_w ))
	and	((coalesce(cd_especialidade::text, '') = '')	or (cd_especialidade =  cd_especialidade_p))
	and	((coalesce(nr_seq_cbo_saude::text, '') = '')	or (nr_seq_cbo_saude =  nr_seq_cbo_saude_p))
	order by	
		coalesce(cd_procedimento,-1),
		coalesce(cd_grupo_proc,-1),
		coalesce(cd_especialidade_proc,-1),
		coalesce(cd_area_procedimento,-1),
		coalesce(ie_tipo_guia,' '),
		coalesce(ie_carater_internacao,' '),
		coalesce(cd_prestador_princ,' '),
		coalesce(nr_seq_prestador_exec,0),
		coalesce(nr_seq_prestador_prot, 0),
		coalesce(nr_seq_tipo_prest_prot, 0),
		coalesce(dt_inicio_vigencia, dt_procedimento_p),
		coalesce(dt_fim_vigencia, dt_procedimento_p),
		nr_sequencia;


BEGIN
if (ie_conta_internacao_p = 'S') then
	ie_tipo_atendimento_w	:= 'S'; /* Internado */
else
	ie_tipo_atendimento_w	:= 'A'; /* Ambulatorial */
end if;

begin
select	cd_prestador,
	dt_cadastro,
	nr_seq_tipo_prestador
into STRICT	cd_prestador_w,
	dt_cadastro_w,
	nr_seq_tipo_prestador_w
from	pls_prestador
where	nr_sequencia	= coalesce(nr_seq_prestador_exec_p,nr_seq_prestador_p);
exception
when others then
	cd_prestador_w	:= null;
	dt_cadastro_w	:= null;
	nr_seq_tipo_prestador_w := null;
end;

ie_inclusao_prestador_w	:= 'S';

if (dt_procedimento_p IS NOT NULL AND dt_procedimento_p::text <> '') and (dt_cadastro_w IS NOT NULL AND dt_cadastro_w::text <> '') and (dt_cadastro_w	> dt_procedimento_p) then
	ie_retorno_w		:= 'N';
	ie_inclusao_prestador_w	:= 'N';
end if;

if (nr_seq_prestador_prot_p IS NOT NULL AND nr_seq_prestador_prot_p::text <> '') then
	select 	max(nr_seq_tipo_prestador)
	into STRICT	nr_seq_tipo_prest_prot_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_prot_p;
end if;
if (ie_inclusao_prestador_w = 'S') then
	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w;			

	if (ie_tipo_verific_p	= 'CM') then
		open C01;
		loop
		fetch C01 into
			nr_seq_regra_w,
			ie_liberar_w,
			nr_seq_grupo_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ie_grupo_servico_w	:= 'S';
			
			if (coalesce(nr_seq_grupo_servico_w,0) > 0) then
				ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_p, ie_origem_w);
			end if;

			if (coalesce(ie_grupo_servico_w,'S') = 'S') then
					ie_retorno_w	:= ie_liberar_w;
			end if;		

			end;
		end loop;
		close C01;
	else
		open C02;
		loop
		fetch C02 into
			nr_seq_regra_w,
			ie_liberar_w,
			nr_seq_grupo_servico_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			ie_grupo_servico_w	:= 'S';
			
			if (coalesce(nr_seq_grupo_servico_w,0) > 0) then
				ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_p, ie_origem_w);
			end if;

			if (coalesce(ie_grupo_servico_w,'S') = 'S') then
					ie_retorno_w	:= ie_liberar_w;
			end if;		

			end;
		end loop;
		close C02;
	end if;
end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_proc_prestador ( nr_seq_prestador_p bigint, nr_seq_prestador_exec_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_guia_p text, dt_procedimento_p timestamp, cd_estabelecimento_p bigint, ie_carater_internacao_p text, nr_seq_tipo_atendimento_p bigint, ie_conta_internacao_p text, nr_seq_plano_p bigint, ie_tipo_verific_p text default null, nr_seq_prestador_prot_p pls_protocolo_conta.nr_seq_prestador%type default null, cd_especialidade_p bigint default null, nr_seq_cbo_saude_p bigint default null, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) FROM PUBLIC;

