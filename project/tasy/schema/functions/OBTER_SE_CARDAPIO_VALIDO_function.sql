-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_cardapio_valido ( nr_seq_cardapio_p bigint, nr_seq_serv_dia_p bigint, nr_seq_acompanhante_p bigint, ie_paciente_p text) RETURNS varchar AS $body$
DECLARE

			
cd_dieta_w	 		bigint;
nr_seq_grupo_producao_w		bigint;
ie_conduta_dietot_w		varchar(1);
ie_retorno_w			varchar(1);
ie_prescr_hor_w			varchar(1);


BEGIN

if ( (nr_seq_cardapio_p IS NOT NULL AND nr_seq_cardapio_p::text <> '') and (nr_seq_serv_dia_p IS NOT NULL AND nr_seq_serv_dia_p::text <> '') and (ie_paciente_p = 'S')) then

	select	max(cd_dieta),
		max(nr_seq_grupo_producao)
	into STRICT	cd_dieta_w,
		nr_seq_grupo_producao_w
	from	nut_cardapio_dia
	where	nr_sequencia = nr_seq_cardapio_p;

	ie_conduta_dietot_w	:= obter_valor_param_usuario(1003,85,obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);
	ie_prescr_hor_w		:= obter_valor_param_usuario(1003,125,obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

	if ( nr_seq_acompanhante_p > 0 ) then
		
		begin

		SELECT	'S'
		into STRICT	ie_retorno_w
		FROM   	nut_atend_acompanhante a,
			nut_atend_acomp_dieta b
		WHERE  	a.nr_sequencia 		= b.nr_seq_atend_acomp
		and	a.nr_sequencia		= nr_seq_acompanhante_p
		AND ( b.cd_dieta 	  	= cd_dieta_w
			OR 	EXISTS (	SELECT	1
					FROM	nut_grupo_producao_dieta k
					WHERE   k.nr_seq_grupo_producao	= nr_seq_grupo_producao_w
					AND	k.cd_dieta		= b.cd_dieta))  LIMIT 1;
	
		exception
		when no_data_found then
			ie_retorno_w :='N';
		end;

	elsif (ie_conduta_dietot_w = 'S') then

		begin
		
		SELECT	'S'
		into STRICT	ie_retorno_w
		from	nut_atend_serv_dia_dieta a,
			nut_atend_serv_dieta b,
			nut_atend_serv_dia c
		WHERE	a.nr_sequencia 		 = b.nr_seq_dieta
		AND	c.nr_sequencia	 	 = b.nr_seq_servico
		AND	c.nr_sequencia	 	 = nr_seq_serv_dia_p	
		AND        coalesce(a.dt_suspensao::text, '') = ''
		AND ( a.cd_dieta		 = cd_dieta_w
		OR 	EXISTS (	SELECT	1
				FROM	nut_grupo_producao_dieta k
				WHERE   k.nr_seq_grupo_producao	= nr_seq_grupo_producao_w
				AND	k.cd_dieta		= a.cd_dieta))  LIMIT 1;

		exception
		when no_data_found then
			ie_retorno_w :='N';
		end;

	else
		-- Verificar se tem na prescricao
		
		if ( ie_prescr_hor_w <> 'S' ) then
			
			begin
			SELECT 	'S'
			INTO STRICT   	ie_retorno_w 
			FROM nut_atend_serv_dia x, prescr_medica c, nut_atend_serv_dia_rep a, prescr_dieta b
LEFT OUTER JOIN cpoe_dieta y ON (b.nr_seq_dieta_cpoe = y.nr_sequencia)
WHERE a.nr_prescr_oral = b.nr_prescricao AND a.nr_seq_serv_dia = nr_seq_serv_dia_p AND a.nr_prescr_oral = c.nr_prescricao AND x.nr_sequencia = a.nr_seq_serv_dia  AND (b.cd_dieta = cd_dieta_w 
				OR EXISTS (SELECT 1 
						FROM   nut_grupo_producao_dieta k 
						WHERE  k.nr_seq_grupo_producao = nr_seq_grupo_producao_w 
						AND k.cd_dieta = b.cd_dieta)) AND (((b.ie_suspenso = 'N' or coalesce(b.ie_suspenso::text, '') = '') and coalesce(y.nr_sequencia::text, '') = '')
				OR ((coalesce(y.dt_suspensao::text, '') = '' OR y.dt_suspensao > x.dt_servico) 
				AND x.dt_servico BETWEEN y.dt_inicio AND coalesce(y.dt_fim, x.dt_servico)))   LIMIT 1;
			exception
			when no_data_found then
				ie_retorno_w :='N';
			end;
		else
			begin
			SELECT 	'S'
			INTO STRICT   	ie_retorno_w 
			FROM nut_atend_serv_dia x, nut_servico e, nut_servico_horario d, prescr_medica c, nut_atend_serv_dia_rep a, prescr_dieta b
LEFT OUTER JOIN cpoe_dieta y ON (b.nr_seq_dieta_cpoe = y.nr_sequencia)
WHERE a.nr_prescr_oral = b.nr_prescricao AND a.nr_seq_serv_dia = nr_seq_serv_dia_p AND a.nr_prescr_oral = c.nr_prescricao AND x.nr_sequencia = a.nr_seq_serv_dia  AND e.nr_sequencia = x.nr_seq_servico AND d.nr_seq_servico = e.nr_sequencia AND (b.cd_dieta = cd_dieta_w 
				OR EXISTS (SELECT 1 
						FROM   nut_grupo_producao_dieta k 
						WHERE  k.nr_seq_grupo_producao = nr_seq_grupo_producao_w 
						AND k.cd_dieta = b.cd_dieta)) AND (((b.ie_suspenso = 'N' or coalesce(b.ie_suspenso::text, '') = '') and coalesce(y.nr_sequencia::text, '') = '')
				OR ((coalesce(y.dt_suspensao::text, '') = '' OR y.dt_suspensao > x.dt_servico) 
				AND x.dt_servico BETWEEN PKG_DATE_UTILS.get_Time(y.dt_inicio, d.ds_horarios) and PKG_DATE_UTILS.get_Time(coalesce(y.dt_fim, x.dt_servico), d.ds_horarios_fim)))   LIMIT 1;
			exception
			when no_data_found then
				ie_retorno_w :='N';
			end;
		end if;
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION obter_se_cardapio_valido ( nr_seq_cardapio_p bigint, nr_seq_serv_dia_p bigint, nr_seq_acompanhante_p bigint, ie_paciente_p text) FROM PUBLIC;

