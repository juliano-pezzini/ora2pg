-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_surgery_summary_date ( nr_surgery_p bigint, ie_option_p text) RETURNS timestamp AS $body$
DECLARE

  dt_return_w timestamp;
  nr_seq_ot_entry_w bigint;
  nr_seq_anes_start_w bigint;
  nr_seq_anes_end_w bigint;
  nr_seq_ot_leave_w bigint;
  nr_seq_surg_start_w bigint;
  nr_seq_surg_end_w bigint;
  dt_start_w timestamp;
  dt_end_w timestamp;
  nr_day_w          bigint;
  nr_hour_w         bigint;
  nr_minute_w       bigint;

BEGIN
  select
  a.nr_seq_ot_entry,
  a.nr_seq_anes_start,
  a.nr_seq_anes_end,
  a.nr_seq_ot_leave,
  a.nr_seq_surg_start,
  a.nr_seq_surg_end  into STRICT
  nr_seq_ot_entry_w,
  nr_seq_anes_start_w,
  nr_seq_anes_end_w,
  nr_seq_ot_leave_w,
  nr_seq_surg_start_w,
  nr_seq_surg_end_w
  from surg_summ_param a
  WHERE a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

  IF (NR_SURGERY_P IS NOT NULL AND NR_SURGERY_P::text <> '' AND ie_option_p IS NOT NULL AND ie_option_p::text <> '') THEN
    IF ( ie_option_p = 'EOR' and (nr_seq_ot_entry_w IS NOT NULL AND nr_seq_ot_entry_w::text <> '') ) THEN
        select DT_REGISTRO
        into STRICT dt_return_w
        from evento_cirurgia_paciente 
        WHERE nr_seq_evento = nr_seq_ot_entry_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
    elsif ( ie_option_p = 'SOA' and (nr_seq_anes_start_w IS NOT NULL AND nr_seq_anes_start_w::text <> '') ) THEN
        select DT_REGISTRO
        into STRICT dt_return_w
        from evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_anes_start_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
    elsif ( ie_option_p = 'EOA' and (nr_seq_anes_end_w IS NOT NULL AND nr_seq_anes_end_w::text <> '') ) THEN
        select DT_REGISTRO
        into STRICT dt_return_w
        FROM evento_cirurgia_paciente b
        WHERE nr_seq_evento = nr_seq_anes_end_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
    elsif ( ie_option_p = 'ORE' and (nr_seq_ot_leave_w IS NOT NULL AND nr_seq_ot_leave_w::text <> '') ) THEN
        select DT_REGISTRO
        into STRICT dt_return_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_ot_leave_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
    elsif ( ie_option_p = 'SOS' and (nr_seq_surg_start_w IS NOT NULL AND nr_seq_surg_start_w::text <> '') ) THEN
        select DT_REGISTRO
        into STRICT dt_return_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_surg_start_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';

        if (coalesce(dt_return_w::text, '') = '') then
        select coalesce(dt_inicio_real, dt_inicio_prevista)
        into STRICT dt_return_w
        from cirurgia
        where nr_cirurgia = nr_surgery_p;
        end if;
    elsif ( ie_option_p = 'EOS' and (nr_seq_surg_end_w IS NOT NULL AND nr_seq_surg_end_w::text <> '') ) THEN
        select DT_REGISTRO
        into STRICT dt_return_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_surg_end_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';

        if (coalesce(dt_return_w::text, '') = '') then
        select dt_termino
        into STRICT dt_return_w
        from cirurgia
        where nr_cirurgia = nr_surgery_p;
        end if;
        elsif ( ie_option_p = 'TORT' and (nr_seq_ot_entry_w IS NOT NULL AND nr_seq_ot_entry_w::text <> '') and (nr_seq_ot_leave_w IS NOT NULL AND nr_seq_ot_leave_w::text <> '') ) THEN
        select max(DT_REGISTRO)
        into STRICT dt_start_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_ot_entry_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
        select max(DT_REGISTRO)
        into STRICT dt_end_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_ot_leave_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
        if (dt_start_w IS NOT NULL AND dt_start_w::text <> '' AND dt_end_w IS NOT NULL AND dt_end_w::text <> '') then
        select
        trunc(mod( difference * 24,24)) as hours,
        trunc(mod( difference * 24 * 60,60)) as minutes
        into STRICT
        nr_hour_w,
        nr_minute_w
        from (SELECT abs(dt_start_w - dt_end_w) as difference ) alias6;

        dt_return_w := pkg_date_utils.get_Time(trunc(clock_timestamp()),nr_hour_w,nr_minute_w,0);
        end if;
        elsif ( ie_option_p = 'TST' and (nr_seq_surg_start_w IS NOT NULL AND nr_seq_surg_start_w::text <> '') and (nr_seq_surg_end_w IS NOT NULL AND nr_seq_surg_end_w::text <> '') ) THEN
        select max(DT_REGISTRO)
        into STRICT dt_start_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_surg_start_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
        select max(DT_REGISTRO)
        into STRICT dt_end_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_surg_end_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
        if (dt_start_w IS NOT NULL AND dt_start_w::text <> '' AND dt_end_w IS NOT NULL AND dt_end_w::text <> '') then
        select
        trunc(mod( difference * 24,24)) as hours,
        trunc(mod( difference * 24 * 60,60)) as minutes
        into STRICT
        nr_hour_w,
        nr_minute_w
        from (SELECT abs(dt_start_w - dt_end_w) as difference ) alias6;
        dt_return_w := pkg_date_utils.get_Time(trunc(clock_timestamp()),nr_hour_w,nr_minute_w,0);
        end if;
        elsif ( ie_option_p = 'TAT' and (nr_seq_anes_start_w IS NOT NULL AND nr_seq_anes_start_w::text <> '') and (nr_seq_anes_end_w IS NOT NULL AND nr_seq_anes_end_w::text <> '') ) THEN
        select max(DT_REGISTRO)
        into STRICT dt_start_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_anes_start_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
        select max(DT_REGISTRO)
        into STRICT dt_end_w
        FROM evento_cirurgia_paciente
        WHERE nr_seq_evento = nr_seq_anes_end_w
        AND nr_cirurgia = nr_surgery_p
        AND (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
        and coalesce(dt_inativacao::text, '') = ''
        and ie_situacao = 'A';
        if (dt_start_w IS NOT NULL AND dt_start_w::text <> '' AND dt_end_w IS NOT NULL AND dt_end_w::text <> '') then
        select
        trunc(mod( difference * 24,24)) as hours,
        trunc(mod( difference * 24 * 60,60)) as minutes
        into STRICT
        nr_hour_w,
        nr_minute_w
        from (SELECT abs(dt_start_w - dt_end_w) as difference ) alias6;
        dt_return_w := pkg_date_utils.get_Time(trunc(clock_timestamp()),nr_hour_w,nr_minute_w,0);
        end if;
    end if;
  END IF;
RETURN dt_return_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_surgery_summary_date ( nr_surgery_p bigint, ie_option_p text) FROM PUBLIC;

