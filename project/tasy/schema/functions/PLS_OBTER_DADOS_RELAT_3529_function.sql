-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_relat_3529 ( nr_seq_plano_p bigint, nr_seq_tabela_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, nr_posicao_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*ie_opcao_p
	'FX' - Descrição da faixa etária
	'QT' - Quantidade de vidas
	'VL' - Soma dos valores
*/
ds_retorno_w		varchar(255);
ds_faixa_etaria_w	varchar(255);
nr_posicao_w		integer  := 0;
qt_vidas_w		varchar(10);
vl_total_w		varchar(10);

c01 CURSOR FOR
SELECT	a.qt_idade_inicial || ' a ' || a.qt_idade_final ds_faixa_etaria,
	(	select	CASE WHEN count(*)=0 THEN  ''  ELSE count(*) END
		from	pls_proposta_beneficiario	x,
			pls_proposta_adesao		y,
			pessoa_fisica			z
		where	z.cd_pessoa_fisica		= x.cd_beneficiario
		and	y.nr_sequencia		= x.nr_seq_proposta
		and	y.ie_status 		= 'T'
		and	x.nr_seq_plano		= nr_seq_plano_p
		and	trunc(y.dt_inicio_proposta, 'dd') between dt_inicio_p and dt_fim_p
		and	trunc(months_between(clock_timestamp(), z.dt_nascimento) / 12) between a.qt_idade_inicial and a.qt_idade_final
		and	(y.cd_estipulante IS NOT NULL AND y.cd_estipulante::text <> '')) qt_vidas,
	(	select	campo_mascara_virgula_casas(sum(x.vl_mensalidade + coalesce(x.vl_inscricao, 0) + coalesce(x.vl_via_carteira,0) - x.vl_bonificacao + x.vl_sca), 2)
		from	pls_proposta_beneficiario	x,
			pls_proposta_adesao		y,
			pessoa_fisica			z
		where	z.cd_pessoa_fisica	= x.cd_beneficiario
		and	y.nr_sequencia		= x.nr_seq_proposta
		and	y.ie_status 		= 'T'
		and	x.nr_seq_plano		= nr_seq_plano_p
		and	trunc(y.dt_inicio_proposta, 'dd') between dt_inicio_p and dt_fim_p
		and	trunc(months_between(clock_timestamp(), z.dt_nascimento) / 12) between a.qt_idade_inicial and a.qt_idade_final
		and	(y.cd_estipulante IS NOT NULL AND y.cd_estipulante::text <> '')) vl_total
from	pls_plano_preco		a,
	pls_tabela_preco	b
where	b.nr_sequencia	= a.nr_seq_tabela
and	b.nr_sequencia	= nr_seq_tabela_p
and	b.nr_seq_plano	= nr_seq_plano_p;

c02 CURSOR FOR
SELECT (	select	CASE WHEN count(*)=0 THEN  ''  ELSE count(*) END
		from	pls_proposta_beneficiario	x,
			pls_proposta_adesao		y,
			pessoa_fisica			z
		where	z.cd_pessoa_fisica		= x.cd_beneficiario
		and	y.nr_sequencia		= x.nr_seq_proposta
		and	y.ie_status 		= 'T'
		and	trunc(y.dt_inicio_proposta, 'dd') between dt_inicio_p and dt_fim_p
		and	trunc(months_between(clock_timestamp(), z.dt_nascimento) / 12) between a.qt_idade_inicial and a.qt_idade_final
		and	(y.cd_estipulante IS NOT NULL AND y.cd_estipulante::text <> '')) qt_vidas,
	(	select	campo_mascara_virgula_casas(sum(x.vl_mensalidade + coalesce(x.vl_inscricao,0) + coalesce(x.vl_via_carteira,0) - x.vl_bonificacao + x.vl_sca), 2)
		from	pls_proposta_beneficiario	x,
			pls_proposta_adesao		y,
			pessoa_fisica			z
		where	z.cd_pessoa_fisica	= x.cd_beneficiario
		and	y.nr_sequencia		= x.nr_seq_proposta
		and	y.ie_status 		= 'T'
		and	trunc(y.dt_inicio_proposta, 'dd') between dt_inicio_p and dt_fim_p
		and	trunc(months_between(clock_timestamp(), z.dt_nascimento) / 12) between a.qt_idade_inicial and a.qt_idade_final
		and	(y.cd_estipulante IS NOT NULL AND y.cd_estipulante::text <> '')) vl_total
from	pls_plano_preco		a,
	pls_tabela_preco	b
where	b.nr_sequencia	= a.nr_seq_tabela
and	b.nr_sequencia	= nr_seq_tabela_p
and	b.nr_seq_plano	= nr_seq_plano_p;


BEGIN

if (ie_opcao_p  = 'FX') or (ie_opcao_p = 'QT') or (ie_opcao_p = 'VL') then
	open C01;
	loop
	fetch C01 into
		ds_faixa_etaria_w,
		qt_vidas_w,
		vl_total_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_posicao_w := nr_posicao_w + 1;

		if (nr_posicao_w = nr_posicao_p) then
			if (ie_opcao_p = 'FX') then
				ds_retorno_w := ds_faixa_etaria_w;
			elsif (ie_opcao_p = 'QT') then
				ds_retorno_w := qt_vidas_w;
			elsif (ie_opcao_p = 'VL') then
				ds_retorno_w := vl_total_w;
			end if;
		end if;
		end;
	end loop;
	close C01;

elsif (ie_opcao_p  = 'TQT') or (ie_opcao_p  = 'TVL') then
	open C02;
	loop
	fetch C02 into
		qt_vidas_w,
		vl_total_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		nr_posicao_w := nr_posicao_w + 1;

		if (nr_posicao_w = nr_posicao_p) then
			if (ie_opcao_p = 'TQT') then
				ds_retorno_w := qt_vidas_w;
			elsif (ie_opcao_p = 'TVL') then
				ds_retorno_w := vl_total_w;
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_relat_3529 ( nr_seq_plano_p bigint, nr_seq_tabela_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, nr_posicao_p bigint, ie_opcao_p text) FROM PUBLIC;

