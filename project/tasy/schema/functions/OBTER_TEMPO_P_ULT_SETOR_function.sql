-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tempo_p_ult_setor (nr_atendimento_p bigint, IE_opcao_p text, nr_seq_interno_p bigint default null) RETURNS varchar AS $body$
DECLARE

/*	IE_OPCAO
*	DT - Data da entrada no setor
*	QT - NÃºmero de dias no setor */
cd_ult_setor_w	bigint;
ds_retorno_w	varchar(255);
cd_setor_atendimento_w	bigint;
nr_dias_w 		double precision;
nr_dias_ww 		double precision;
dt_entrada_setor_w	timestamp;
dt_entrada_setor_ww	timestamp;
dt_saida_setor_w	timestamp;
ie_dias_unid_w		varchar(1);
dt_entrada_unidade_w	timestamp;

C01 CURSOR FOR
SELECT	a.dt_entrada_unidade,
		a.cd_setor_atendimento
from	atend_paciente_unidade a
where	a.nr_atendimento =  nr_atendimento_p
and		coalesce(a.Ie_passagem_setor,'N') <> 'S'
order by 1 desc;


BEGIN

ie_dias_unid_w := Obter_Param_Usuario(44, 307, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_dias_unid_w);

if (ie_dias_unid_w = 'S') then

	Select	a.cd_setor_atendimento,
			a.dt_entrada_Unidade,
			coalesce(a.dt_saida_unidade, clock_timestamp())
	into STRICT	cd_ult_setor_w,
			dt_entrada_setor_w,
			dt_saida_setor_w
	from 	atend_paciente_unidade a
	where	a.nr_atendimento = nr_atendimento_p
	and		a.dt_entrada_Unidade = (SELECT	max(b.dt_entrada_Unidade)
									from	atend_paciente_unidade b
									where	a.nr_atendimento = b.nr_atendimento
									and	coalesce(b.Ie_passagem_setor,'N') <> 'S')
	and	coalesce(a.Ie_passagem_setor,'N') <> 'S';

	if (cd_ult_setor_w IS NOT NULL AND cd_ult_setor_w::text <> '') then
		nr_dias_w := 0;
		open C01;
		loop
		fetch C01 into
			dt_entrada_setor_ww,
			cd_setor_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (cd_setor_atendimento_w = cd_ult_setor_w) then
				if (dt_entrada_setor_ww < dt_entrada_setor_w) then
					dt_entrada_setor_w := dt_entrada_setor_ww;
				end if;
			else
				exit;
			end if;
			end;
		end loop;
		close C01;
		if (IE_opcao_p = 'QT') then
			ds_retorno_w := to_char(trunc(dt_saida_setor_w - dt_entrada_setor_w));
		elsif (IE_opcao_p = 'DT') then
			ds_retorno_w := to_char(dt_entrada_setor_w, 'DD/MM/YYYY HH24:MI:SS');
		end if;
	end if;

else

begin
	select 	trunc(dt_entrada_unidade)
	into STRICT	dt_entrada_unidade_w
	from 	unidade_atendimento
	where 	nr_seq_interno = nr_seq_interno_p;


exception
when others then
	dt_entrada_unidade_w := clock_timestamp();
end;
		if (IE_opcao_p = 'QT') then
			ds_retorno_w := to_char(trunc(clock_timestamp() - dt_entrada_unidade_w));
		elsif (IE_opcao_p = 'DT') then
			ds_retorno_w := to_char(dt_entrada_unidade_w, 'DD/MM/YYYY HH24:MI:SS');
		end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tempo_p_ult_setor (nr_atendimento_p bigint, IE_opcao_p text, nr_seq_interno_p bigint default null) FROM PUBLIC;

