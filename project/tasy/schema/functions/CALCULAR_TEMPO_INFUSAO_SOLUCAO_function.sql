-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION calcular_tempo_infusao_solucao (ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


dt_inicio_infusao_w		timestamp;
qt_volume_infundir_w		double precision;
qt_veloc_infusao_w		double precision;
ie_unidade_infusao_w		varchar(3);
qt_tempo_aplicacao_w		double precision;
qt_tempo_infusao_w		double precision;
qt_volume_infundido_w	double precision;
qt_tempo_infusao_ww		double precision;
dt_final_infusao_w		timestamp;

vl_retorno_w			varchar(19);


BEGIN
if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then


	if (ie_tipo_solucao_p = 1) then -- solucoes
		/* obter informacoes */

		select	to_date(obter_dados_evento_sol_adep(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'I', 'DE'),'dd/mm/yyyy hh24:mi:ss') dt_inicio_infusao,
			coalesce(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VR'),0) qt_volume_infundir,
			coalesce(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VA'),qt_dosagem) qt_veloc_infusao,
			ie_tipo_dosagem ie_unidade_infusao,
			qt_tempo_aplicacao
		into STRICT	dt_inicio_infusao_w,
			qt_volume_infundir_w,
			qt_veloc_infusao_w,
			ie_unidade_infusao_w,
			qt_tempo_aplicacao_w
		from	prescr_solucao
		where	nr_prescricao		= nr_prescricao_p
		and	nr_seq_solucao	= nr_seq_solucao_p;


		if (dt_inicio_infusao_w IS NOT NULL AND dt_inicio_infusao_w::text <> '') then

			/* calcular velocidade infusao mlh */

			if (ie_unidade_infusao_w = 'gtm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,20) * 60;
			elsif (ie_unidade_infusao_w = 'mgm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,50) * 60;
			else
				qt_veloc_infusao_w	:= qt_veloc_infusao_w;
			end if;

			/* calcular tempo infusao atual */

			--qt_tempo_infusao_w 	:= round(((sysdate - dt_inicio_infusao_w) * 1440) / 60);
			qt_tempo_infusao_w 	:= ((clock_timestamp() - dt_inicio_infusao_w) * 1440) / 60;

			/* calcular volume infundido atual */

			qt_volume_infundido_w	:= qt_veloc_infusao_w * qt_tempo_infusao_w;

			/* calcular tempo infusao restante */

			--qt_tempo_infusao_ww	:= round(dividir(qt_volume_infundir_w - qt_volume_infundido_w, qt_veloc_infusao_w));
			qt_tempo_infusao_ww	:= dividir(qt_volume_infundir_w - qt_volume_infundido_w, qt_veloc_infusao_w);

			/* calcular data infusao restante */

			--dt_final_infusao_w	:= dt_inicio_infusao_w + qt_tempo_aplicacao_w / 24;
			dt_final_infusao_w	:= clock_timestamp() + qt_tempo_infusao_ww / 24;

			/* retornar opcao */

			if (ie_opcao_p = 'DI') then
				vl_retorno_w	:= to_char(dt_inicio_infusao_w,'dd/mm/yyyy hh24:mi:ss');
			elsif (ie_opcao_p = 'TI') then
				vl_retorno_w	:= round((qt_tempo_infusao_w)::numeric,1);
			elsif (ie_opcao_p = 'CI') then
				vl_retorno_w	:= obter_dif_data(dt_inicio_infusao_w, clock_timestamp(), null);
			elsif (ie_opcao_p = 'DF') then
				vl_retorno_w	:= to_char(dt_final_infusao_w,'dd/mm/yyyy hh24:mi:ss');
			elsif (ie_opcao_p = 'TR') then
				vl_retorno_w	:= round((qt_tempo_infusao_ww)::numeric,1);
			elsif (ie_opcao_p = 'CR') then
				vl_retorno_w	:= obter_dif_data(dt_inicio_infusao_w, dt_final_infusao_w - qt_tempo_infusao_w / 24, null);
			elsif (ie_opcao_p = 'VI') then
				vl_retorno_w	:= round((qt_volume_infundido_w)::numeric,2);
			elsif (ie_opcao_p = 'VR') then
				vl_retorno_w	:= round((qt_volume_infundir_w - qt_volume_infundido_w)::numeric,2);
			end if;

		end if;


	end if;


end if;

return vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION calcular_tempo_infusao_solucao (ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_opcao_p text) FROM PUBLIC;

