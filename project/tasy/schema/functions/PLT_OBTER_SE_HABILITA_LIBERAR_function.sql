-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION plt_obter_se_habilita_liberar ( nr_prescricoes_p text, ie_permite_liberar_p text, ie_usuario_medico_p text, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


ie_habilita_w			varchar(1) := 'N';
cd_pessoa_usuario_w		varchar(15);
nr_prescricoes_w		varchar(4000);
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_prescricao_w			bigint;
ie_prescritor_aux_w		varchar(1);
dt_liberacao_medico_w		timestamp;
dt_liberacao_w			timestamp;
dt_liberacao_aux_w		timestamp;
cd_medico_w			varchar(10);
nm_usuario_original_w		varchar(15);
ie_emergencia_w			varchar(1);
ie_cartao_emergencia_w		varchar(1);


BEGIN

select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_usuario_w
from	usuario
where	upper(nm_usuario)	= upper(nm_usuario_p);

if (nr_prescricoes_p IS NOT NULL AND nr_prescricoes_p::text <> '')	and (ie_permite_liberar_p	<> 'N') and (cd_pessoa_usuario_w IS NOT NULL AND cd_pessoa_usuario_w::text <> '') then

	nr_prescricoes_w := nr_prescricoes_p;
	while (nr_prescricoes_w IS NOT NULL AND nr_prescricoes_w::text <> '') loop
		begin
		tam_lista_w		:= length(nr_prescricoes_w);
		ie_pos_virgula_w	:= position(',' in nr_prescricoes_w);
		if (ie_pos_virgula_w <> 0) then
			nr_prescricao_w		:= (substr(nr_prescricoes_w,1,(ie_pos_virgula_w - 1)))::numeric;
			nr_prescricoes_w	:= substr(nr_prescricoes_w,(ie_pos_virgula_w + 1),tam_lista_w);
		else
			nr_prescricao_w		:= (nr_prescricoes_w)::numeric;
			nr_prescricoes_w	:= '';
		end if;

		select	dt_liberacao_medico,
			dt_liberacao,
			dt_liberacao_aux,
			coalesce(ie_prescritor_aux,'N'),
			cd_medico,
			nm_usuario_original,
			ie_emergencia,
			ie_cartao_emergencia
		into STRICT	dt_liberacao_medico_w,
			dt_liberacao_w,
			dt_liberacao_aux_w,
			ie_prescritor_aux_w,
			cd_medico_w,
			nm_usuario_original_w,
			ie_emergencia_w,
			ie_cartao_emergencia_w
		from	prescr_medica
		where	nr_prescricao	= nr_prescricao_w;

		if	((ie_permite_liberar_p = 'S') and
			 (((ie_usuario_medico_p	= 'S') and (coalesce(dt_liberacao_medico_w::text, '') = '') and
			   ((ie_prescritor_aux_w <> 'S') or
			    ((cd_medico_w = cd_pessoa_usuario_w) and
			     ((ie_emergencia_w	= 'S') or (ie_cartao_emergencia_w	= 'S'))) or
			    ((ie_prescritor_aux_w = 'S') and (dt_liberacao_aux_w IS NOT NULL AND dt_liberacao_aux_w::text <> '') and (cd_medico_w = cd_pessoa_usuario_w)))) or
			  ((ie_usuario_medico_p	= 'N') and (coalesce(dt_liberacao_w::text, '') = '') and
			   (((ie_prescritor_aux_w <> 'S') or
			     ((ie_prescritor_aux_w = 'S') and (dt_liberacao_aux_w IS NOT NULL AND dt_liberacao_aux_w::text <> '') and (cd_medico_w = cd_pessoa_usuario_w))) or (dt_liberacao_medico_w IS NOT NULL AND dt_liberacao_medico_w::text <> ''))))) or
			((ie_permite_liberar_p = 'U') and
			 ((ie_usuario_medico_p	= 'N') and (coalesce(dt_liberacao_w::text, '') = '') and
			  ((ie_prescritor_aux_w <> 'S') or
			   ((ie_prescritor_aux_w = 'S') and (dt_liberacao_aux_w IS NOT NULL AND dt_liberacao_aux_w::text <> '') and (cd_medico_w = cd_pessoa_usuario_w))))) or
			((ie_prescritor_aux_w = 'S') and (coalesce(dt_liberacao_aux_w::text, '') = '')) and (nm_usuario_original_w	= nm_usuario_p) then
			ie_habilita_w := 'S';
			exit;
		end if;

		end;
	end loop;

end if;

return	ie_habilita_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION plt_obter_se_habilita_liberar ( nr_prescricoes_p text, ie_permite_liberar_p text, ie_usuario_medico_p text, nm_usuario_p text) FROM PUBLIC;

