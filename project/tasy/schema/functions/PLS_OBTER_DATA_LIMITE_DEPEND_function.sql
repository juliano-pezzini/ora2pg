-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_data_limite_depend ( nr_seq_segurado_p bigint) RETURNS timestamp AS $body$
DECLARE


dt_retorno_w			timestamp;
dt_validade_doc_w		timestamp;
dt_nascimento_w			timestamp;

qt_regra_w			integer;
qt_deficiencia_w		integer;
qt_anos_w			integer;
qt_regra_contrato_w		integer;

cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;
nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
nr_seq_contrato_w		pls_segurado.nr_seq_contrato%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;	

nr_seq_regra_dependencia_w	pls_contrato_dependencia.nr_seq_regra_dependencia%type;
ie_sexo_w			pessoa_fisica.ie_sexo%type;
ie_estado_civil_w		pessoa_fisica.ie_estado_civil%type;
qt_idade_max_w			regra_grau_parent_contrato.qt_idade_max%type;
nr_sequencia_doc_w		pls_tipo_documento_pf.nr_sequencia%type;
ie_data_limite_w		regra_grau_parent_contrato.ie_data_limite%type;


BEGIN

select	cd_pessoa_fisica,
	nr_seq_parentesco,
	nr_seq_contrato,
	nr_seq_intercambio
into STRICT	cd_pessoa_fisica_w,
	nr_seq_parentesco_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	max(nr_seq_regra_dependencia)
		into STRICT	nr_seq_regra_dependencia_w
		from	pls_contrato_dependencia
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	ie_situacao = 'A';
		
		if (nr_seq_regra_dependencia_w IS NOT NULL AND nr_seq_regra_dependencia_w::text <> '') then
			select 	count(1)
			into STRICT	qt_regra_contrato_w
			from	regra_grau_parent_contrato
			where	nr_seq_lote_parentesco	= nr_seq_regra_dependencia_w
			and	nr_seq_parentesco	= nr_seq_parentesco_w;
		else
			qt_regra_contrato_w := 0;
		end if;
	elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		select	max(nr_seq_regra_dependencia)
		into STRICT	nr_seq_regra_dependencia_w
		from	pls_contrato_dependencia
		where	nr_seq_intercambio = nr_seq_intercambio_w
		and	ie_situacao = 'A';
		
		if (nr_seq_regra_dependencia_w IS NOT NULL AND nr_seq_regra_dependencia_w::text <> '') then
			select 	count(1)
			into STRICT	qt_regra_contrato_w
			from	regra_grau_parent_contrato
			where	nr_seq_lote_parentesco	= nr_seq_regra_dependencia_w
			and	nr_seq_parentesco	= nr_seq_parentesco_w;
		else
			qt_regra_contrato_w := 0;
		end if;
	else
		qt_regra_contrato_w := 0;
	end if;		

	select 	count(1)
	into STRICT	qt_regra_w
	from	regra_grau_parent_contrato
	where	nr_seq_parentesco = nr_seq_parentesco_w
	and	coalesce(nr_seq_lote_parentesco::text, '') = '';
	
	/*Primeiro verificar a regra do contrato*/

	if (qt_regra_contrato_w > 0) then
		/*Limitar pelo sexo do beneficiario*/

		select 	dt_nascimento,
			ie_sexo,
			ie_estado_civil
		into STRICT	dt_nascimento_w,
			ie_sexo_w,
			ie_estado_civil_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;

		if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then
			qt_anos_w := trunc(months_between(clock_timestamp(), trunc(dt_nascimento_w,'month')) / 12);
			
			select  max(qt_idade_max),
				max(ie_data_limite)
			into STRICT	qt_idade_max_w,
				ie_data_limite_w
			from	regra_grau_parent_contrato
			where	nr_seq_lote_parentesco		= nr_seq_regra_dependencia_w
			and	nr_seq_parentesco		= nr_seq_parentesco_w
			and	qt_anos_w			>= qt_idade_min
			and 	qt_anos_w			<= qt_idade_max
			and	ie_benef_deficiencia 		= 'N'
			and	ie_possui_comp_esc_valido 	= 'N'
			and	ie_possui_procuracao_valida	= 'N'
			and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
			and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
			
			if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') then
				begin
				dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
				exception
				when others then
					if (to_char(dt_nascimento_w,'mm') = '02') then
						dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
					end if;
					dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
				end;
				
				begin
				if (coalesce(ie_data_limite_w, '1') = '2') then
					dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
				end if;
				exception
				when others then
					dt_retorno_w	:= null;
				end;
			else
				select  max(qt_idade_max),
					max(ie_data_limite)
				into STRICT	qt_idade_max_w,
					ie_data_limite_w
				from	regra_grau_parent_contrato
				where	nr_seq_lote_parentesco		= nr_seq_regra_dependencia_w
				and	nr_seq_parentesco		= nr_seq_parentesco_w
				and	qt_anos_w			between qt_idade_min and qt_idade_max
				and	ie_benef_deficiencia 		= 'S'
				and	ie_possui_comp_esc_valido 	= 'N'
				and	ie_possui_procuracao_valida	= 'N'
				and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
				and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
				
				select 	count(1)
				into STRICT	qt_deficiencia_w
				from	pf_tipo_deficiencia
				where	cd_pessoa_fisica = cd_pessoa_fisica_w  LIMIT 1;
				
				if (qt_deficiencia_w > 0) and (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') then
					begin
					dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
					exception
					when others then
						if (to_char(dt_nascimento_w,'mm') = '02') then
							dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
						end if;
						dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
					end;
					
					begin
					if (coalesce(ie_data_limite_w, '1') = '2') then
						dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
					end if;
					exception
					when others then
						dt_retorno_w	:= null;
					end;
				else
					select  max(qt_idade_max),
						max(ie_data_limite)
					into STRICT	qt_idade_max_w,
						ie_data_limite_w
					from	regra_grau_parent_contrato
					where	nr_seq_lote_parentesco		= nr_seq_regra_dependencia_w
					and	nr_seq_parentesco		= nr_seq_parentesco_w
					and	qt_anos_w			between qt_idade_min and qt_idade_max
					and	ie_benef_deficiencia 		= 'N'
					and	ie_possui_comp_esc_valido 	= 'S'
					and	ie_possui_procuracao_valida	= 'N'
					and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
					and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
					
					select	max(a.nr_sequencia)
					into STRICT	nr_sequencia_doc_w
					from	pls_tipo_documento_pf 		a,
						tipo_documentacao 		b
					where	a.nr_seq_tipo_documento 	= b.nr_sequencia
					and	a.cd_pessoa_fisica 		= cd_pessoa_fisica_w
					and	b.ie_finalidade			= 'P'
					and	b.ie_escolaridade		= 'S';
			
					if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') and (nr_sequencia_doc_w IS NOT NULL AND nr_sequencia_doc_w::text <> '') then
							
						select	max(dt_validade)
						into STRICT	dt_validade_doc_w
						from	pls_tipo_documento_pf 		a,
							tipo_documentacao 		b
						where	a.nr_seq_tipo_documento 	= b.nr_sequencia
						and	a.nr_sequencia			= nr_sequencia_doc_w;
						
						if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then
							dt_retorno_w := dt_validade_doc_w;
						else
							begin
							dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
							exception
							when others then
								if (to_char(dt_nascimento_w,'mm') = '02') then
									dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
								end if;
								dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
							end;
							
							begin
							if (coalesce(ie_data_limite_w, '1') = '2') then
								dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
							end if;
							exception
							when others then
								dt_retorno_w	:= null;
							end;
						end if;					
					else
						select  max(qt_idade_max),
							max(ie_data_limite)
						into STRICT	qt_idade_max_w,
							ie_data_limite_w
						from	regra_grau_parent_contrato
						where	nr_seq_lote_parentesco		= nr_seq_regra_dependencia_w
						and	nr_seq_parentesco		= nr_seq_parentesco_w
						and	ie_benef_deficiencia 		= 'N'
						and	ie_possui_comp_esc_valido 	= 'S'
						and	ie_possui_procuracao_valida	= 'N'
						and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
						and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));						
						
						select	max(a.nr_sequencia)
						into STRICT	nr_sequencia_doc_w
						from	pls_tipo_documento_pf 		a,
							tipo_documentacao 		b
						where	a.nr_seq_tipo_documento 	= b.nr_sequencia
						and	a.cd_pessoa_fisica 		= cd_pessoa_fisica_w
						and	b.ie_finalidade			= 'P'
						and	b.ie_escolaridade		= 'S';
						
						if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') and (nr_sequencia_doc_w IS NOT NULL AND nr_sequencia_doc_w::text <> '') then
							select	max(dt_validade)
							into STRICT	dt_validade_doc_w
							from	pls_tipo_documento_pf a,
								tipo_documentacao b
							where	a.nr_seq_tipo_documento = b.nr_sequencia
							and	a.nr_sequencia	= nr_sequencia_doc_w;
							
							if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then							
								dt_retorno_w := dt_validade_doc_w;						
							end if;
						else
							select  max(qt_idade_max),
								max(ie_data_limite)
							into STRICT	qt_idade_max_w,
								ie_data_limite_w
							from	regra_grau_parent_contrato
							where	nr_seq_parentesco		= nr_seq_parentesco_w
							and	coalesce(nr_seq_lote_parentesco::text, '') = ''
							and	qt_anos_w			between qt_idade_min and qt_idade_max
							and	ie_benef_deficiencia 		= 'N'
							and	ie_possui_comp_esc_valido 	= 'N'
							and	ie_possui_procuracao_valida	= 'S'
							and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
							and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
							
							select	max(a.nr_sequencia)
							into STRICT	nr_sequencia_doc_w
							from	pls_tipo_documento_pf 		a,
								tipo_documentacao 		b
							where	a.nr_seq_tipo_documento 	= b.nr_sequencia
							and	a.cd_pessoa_fisica 		= cd_pessoa_fisica_w
							and	b.ie_finalidade			= 'P'
							and	b.ie_procuracao			= 'S';
					
							if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') and (nr_sequencia_doc_w IS NOT NULL AND nr_sequencia_doc_w::text <> '') then
									
								select	max(dt_validade)
								into STRICT	dt_validade_doc_w
								from	pls_tipo_documento_pf 		a,
									tipo_documentacao 		b
								where	a.nr_seq_tipo_documento 	= b.nr_sequencia
								and	a.nr_sequencia			= nr_sequencia_doc_w;
								
								if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then
									dt_retorno_w := dt_validade_doc_w;
								else
									begin
									dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									exception
									when others then
										if (to_char(dt_nascimento_w,'mm') = '02') then
											dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
										end if;
										dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									end;

									begin
									if (coalesce(ie_data_limite_w, '1') = '2') then
										dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
									end if;
									exception
									when others then
										dt_retorno_w	:= null;
									end;									
								end if;
							else
								select  max(qt_idade_max),
									max(ie_data_limite)
								into STRICT	qt_idade_max_w,
									ie_data_limite_w
								from	regra_grau_parent_contrato
								where	nr_seq_lote_parentesco		= nr_seq_regra_dependencia_w
								and	nr_seq_parentesco		= nr_seq_parentesco_w
								and	qt_anos_w			between qt_idade_min and qt_idade_max
								and	ie_benef_deficiencia 		= 'N'
								and	ie_possui_comp_esc_valido 	= 'N'
								and	ie_possui_procuracao_valida	= 'N'
								and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
								and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
								
								if (coalesce(qt_idade_max_w::text, '') = '') then
									dt_retorno_w := null;
								else
									begin
									dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									exception
									when others then
										if (to_char(dt_nascimento_w,'mm') = '02') then
											dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
										end if;
										dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									end;
									
									begin
									if (coalesce(ie_data_limite_w, '1') = '2') then
										dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
									end if;
									exception
									when others then
										dt_retorno_w	:= null;
									end;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		else
			dt_retorno_w	:= null;
		end if;
	/*A regra do padrao*/

	elsif (qt_regra_w > 0) then
		/* Limitar pelo sexo do beneficiario*/

		select 	dt_nascimento,
			ie_sexo,
			ie_estado_civil
		into STRICT	dt_nascimento_w,
			ie_sexo_w,
			ie_estado_civil_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;

		if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then
			qt_anos_w	:= trunc(months_between(clock_timestamp(), trunc(dt_nascimento_w,'month')) / 12);
			
			select  max(qt_idade_max),
				max(ie_data_limite)
			into STRICT	qt_idade_max_w,
				ie_data_limite_w
			from	regra_grau_parent_contrato
			where	nr_seq_parentesco		= nr_seq_parentesco_w
			and	coalesce(nr_seq_lote_parentesco::text, '') = ''
			and	qt_anos_w			between qt_idade_min and qt_idade_max
			and	ie_benef_deficiencia 		= 'N'
			and	ie_possui_comp_esc_valido 	= 'N'
			and	ie_possui_procuracao_valida	= 'N'
			and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
			and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
			
			if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') then
				begin
				dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
				exception
				when others then
					if (to_char(dt_nascimento_w,'mm') = '02') then
						dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
					end if;
					dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
				end;
				
				begin
				if (coalesce(ie_data_limite_w, '1') = '2') then
					dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
				end if;
				exception
				when others then
					dt_retorno_w	:= null;
				end;
			else
				select  max(qt_idade_max),
					max(ie_data_limite)
				into STRICT	qt_idade_max_w,
					ie_data_limite_w
				from	regra_grau_parent_contrato
				where	nr_seq_parentesco		= nr_seq_parentesco_w
				and	coalesce(nr_seq_lote_parentesco::text, '') = ''
				and	qt_anos_w			between qt_idade_min and qt_idade_max
				and	ie_benef_deficiencia 		= 'S'
				and	ie_possui_comp_esc_valido 	= 'N'
				and	ie_possui_procuracao_valida	= 'N'
				and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
				and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
				
				select 	count(1)
				into STRICT	qt_deficiencia_w
				from	pf_tipo_deficiencia
				where	cd_pessoa_fisica = cd_pessoa_fisica_w  LIMIT 1;
				
				if (qt_deficiencia_w > 0) and (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') then
					begin
					dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
					exception
					when others then
						if (to_char(dt_nascimento_w,'mm') = '02') then
							dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
						end if;
						dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
					end;
			
					begin
					if (coalesce(ie_data_limite_w, '1') = '2') then
						dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
					end if;
					exception
					when others then
						dt_retorno_w	:= null;
					end;
				else
					select  max(qt_idade_max),
						max(ie_data_limite)
					into STRICT	qt_idade_max_w,
						ie_data_limite_w
					from	regra_grau_parent_contrato
					where	nr_seq_parentesco		= nr_seq_parentesco_w
					and	coalesce(nr_seq_lote_parentesco::text, '') = ''
					and	qt_anos_w			between qt_idade_min and qt_idade_max
					and	ie_benef_deficiencia 		= 'N'
					and	ie_possui_comp_esc_valido 	= 'S'
					and	ie_possui_procuracao_valida	= 'N'
					and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
					and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
					
					select	max(a.nr_sequencia)
					into STRICT	nr_sequencia_doc_w
					from	pls_tipo_documento_pf 		a,
						tipo_documentacao 		b
					where	a.nr_seq_tipo_documento 	= b.nr_sequencia
					and	a.cd_pessoa_fisica 		= cd_pessoa_fisica_w
					and	b.ie_finalidade			= 'P'
					and	b.ie_escolaridade		= 'S';
			
					if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') and (nr_sequencia_doc_w IS NOT NULL AND nr_sequencia_doc_w::text <> '') then
						select	max(dt_validade)
						into STRICT	dt_validade_doc_w
						from	pls_tipo_documento_pf a,
							tipo_documentacao b
						where	a.nr_seq_tipo_documento = b.nr_sequencia
						and	a.nr_sequencia	= nr_sequencia_doc_w;
						
						if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then						
							dt_retorno_w := dt_validade_doc_w;
						else
							begin
							dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
							exception
							when others then
								if (to_char(dt_nascimento_w,'mm') = '02') then
									dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
								end if;
								dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
							end;
						
							begin
							if (coalesce(ie_data_limite_w, '1') = '2') then
								dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
							end if;
							exception
							when others then
								dt_retorno_w	:= null;
							end;
						end if;					
					else
						select  max(qt_idade_max),
							max(ie_data_limite)
						into STRICT	qt_idade_max_w,
							ie_data_limite_w
						from	regra_grau_parent_contrato
						where	nr_seq_parentesco		= nr_seq_parentesco_w
						and	coalesce(nr_seq_lote_parentesco::text, '') = ''
						and	ie_benef_deficiencia 		= 'N'
						and	ie_possui_comp_esc_valido 	= 'S'
						and	ie_possui_procuracao_valida	= 'N'
						and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
						and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
						
						select	max(a.nr_sequencia)
						into STRICT	nr_sequencia_doc_w
						from	pls_tipo_documento_pf 		a,
							tipo_documentacao 		b
						where	a.nr_seq_tipo_documento 	= b.nr_sequencia
						and	a.cd_pessoa_fisica 		= cd_pessoa_fisica_w
						and	b.ie_finalidade			= 'P'
						and	b.ie_escolaridade		= 'S';
						
						if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') and (nr_sequencia_doc_w IS NOT NULL AND nr_sequencia_doc_w::text <> '') then
							select	max(dt_validade)
							into STRICT	dt_validade_doc_w
							from	pls_tipo_documento_pf 		a,
								tipo_documentacao 		b
							where	a.nr_seq_tipo_documento 	= b.nr_sequencia
							and	a.nr_sequencia			= nr_sequencia_doc_w;
							
							if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then							
								dt_retorno_w := dt_validade_doc_w;							
							end if;
						else
							select  max(qt_idade_max),
								max(ie_data_limite)
							into STRICT	qt_idade_max_w,
								ie_data_limite_w
							from	regra_grau_parent_contrato
							where	nr_seq_parentesco		= nr_seq_parentesco_w
							and	coalesce(nr_seq_lote_parentesco::text, '') = ''
							and	qt_anos_w			between qt_idade_min and qt_idade_max
							and	ie_benef_deficiencia 		= 'N'
							and	ie_possui_comp_esc_valido 	= 'N'
							and	ie_possui_procuracao_valida	= 'S'
							and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
							and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
							
							select	max(a.nr_sequencia)
							into STRICT	nr_sequencia_doc_w
							from	pls_tipo_documento_pf 		a,
								tipo_documentacao 		b
							where	a.nr_seq_tipo_documento 	= b.nr_sequencia
							and	a.cd_pessoa_fisica 		= cd_pessoa_fisica_w
							and	b.ie_finalidade			= 'P'
							and	b.ie_procuracao			= 'S';
					
							if (qt_idade_max_w IS NOT NULL AND qt_idade_max_w::text <> '') and (nr_sequencia_doc_w IS NOT NULL AND nr_sequencia_doc_w::text <> '') then
									
								select	max(dt_validade)
								into STRICT	dt_validade_doc_w
								from	pls_tipo_documento_pf a,
									tipo_documentacao b
								where	a.nr_seq_tipo_documento = b.nr_sequencia
								and	a.nr_sequencia	= nr_sequencia_doc_w;
								
								if (dt_validade_doc_w IS NOT NULL AND dt_validade_doc_w::text <> '') then
									dt_retorno_w := dt_validade_doc_w;
								else
									begin
									dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									exception
									when others then
										if (to_char(dt_nascimento_w,'mm') = '02') then
											dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
										end if;
										dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									end;
								
									begin
									if (coalesce(ie_data_limite_w, '1') = '2') then
										dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
									end if;
									exception
									when others then
										dt_retorno_w	:= null;
									end;
								end if;
							else	
								select  max(qt_idade_max),
									max(ie_data_limite)
								into STRICT	qt_idade_max_w,
									ie_data_limite_w
								from	regra_grau_parent_contrato
								where	nr_seq_parentesco		= nr_seq_parentesco_w
								and	coalesce(nr_seq_lote_parentesco::text, '') = ''					
								and	ie_benef_deficiencia 		= 'N'
								and	ie_possui_comp_esc_valido 	= 'N'
								and	ie_possui_procuracao_valida	= 'N'
								and	((ie_sexo = ie_sexo_w) or (coalesce(ie_sexo::text, '') = ''))
								and	((ie_estado_civil = ie_estado_civil_w) or (coalesce(ie_estado_civil::text, '') = ''));
								
								if (coalesce(qt_idade_max_w::text, '') = '') then
									dt_retorno_w := null;
								else								
									begin
									dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									exception
									when others then
										if (to_char(dt_nascimento_w,'mm') = '02') then
											dt_nascimento_w	:= '28'||'/'|| to_char(dt_nascimento_w,'mm/yyyy');
										end if;
										dt_retorno_w := to_char(dt_nascimento_w,'dd/mm')||'/'||(to_char(dt_nascimento_w,'yyyy') + qt_idade_max_w);
									end;
									
									begin
									if (coalesce(ie_data_limite_w, '1') = '2') then
										dt_retorno_w	:= fim_mes(add_months(dt_retorno_w, -1));
									end if;
									exception
									when others then
										dt_retorno_w	:= null;
									end;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		else
			dt_retorno_w := null;
		end if;
	else
		dt_retorno_w := null;	
	end if;
end if;

return	dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_data_limite_depend ( nr_seq_segurado_p bigint) FROM PUBLIC;

