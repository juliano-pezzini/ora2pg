-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION converte_path_storage_web ( ds_arquivo_p text) RETURNS varchar AS $body$
DECLARE


/*

Finalidade:

Converter o diretorio dos arquivos do Storage para o diretorio linux. Rotina utilizada para possibilitar o download no Portal dos arquivos inseridos pelo Tasy HTML5.

*/
ds_retorno_w			varchar(256);
cd_uuid_aux_w			file_storage_path.cd_uuid%type;
cd_uuid_w			file_storage_path.cd_uuid%type;
ds_path_aux_w			varchar(256);
ds_path_w			file_storage_path.ds_path%type;
ds_uploaded_file_name_w		varchar(256);
ie_separator_w			varchar(1);
		

BEGIN

if (position('tasy-storage' in ds_arquivo_p) > 0) then	
	-- Pega o valor do diretorio entre a segunda e ultima barra
	ds_path_aux_w	:= substr(ds_arquivo_p, instr(ds_arquivo_p,'/',1,2), instr(substr(ds_arquivo_p, instr(ds_arquivo_p, '/',1,2),length(ds_arquivo_p)),'/',-1,1));	
	
	-- Pega o valor do diretorio entre a primeira e segunda barra
	cd_uuid_aux_w	:= replace(substr(ds_path_aux_w, instr(ds_path_aux_w,'/',1,1), instr(substr(ds_path_aux_w, instr(ds_path_aux_w, '/',1,1),length(ds_path_aux_w)),'/',1,2)),'/',null);
	
	--Separa o uuid do nome do Storage
	cd_uuid_w	:= substr(cd_uuid_aux_w, instr(cd_uuid_aux_w,'.',1,1) + 1, length(cd_uuid_aux_w));
		
	--Tratamento realizado caso o diretorio venha de regra de geracao de arquivo, onde sao adicionadas pastas ao diretorio. Pega o valor da segunda ate a ultima barra
	if (instr(ds_path_aux_w,'/',1,3) > 0) then
		ds_path_aux_w	:= substr(ds_path_aux_w, instr(ds_path_aux_w,'/',1,2), instr(substr(ds_path_aux_w, instr(ds_path_aux_w, '/',1,2),length(ds_path_aux_w)),'/',-1,1));
		
	else
		ds_path_aux_w	:= null;
	end if;
	
	ds_uploaded_file_name_w	:= substr(ds_arquivo_p, instr(ds_arquivo_p,'/',-1,1) + 1,length(ds_arquivo_p));
	ds_uploaded_file_name_w	:= substr(ds_uploaded_file_name_w, 1, instr(ds_uploaded_file_name_w, '?',-1,1) -1);
	
	begin
		select	ds_path
		into STRICT	ds_path_w
		from	file_storage_path
		where	cd_uuid	= cd_uuid_w;
	exception
	when no_data_found or too_many_rows then
		ds_path_w	:= null;
	end;
	
	if (ds_path_w IS NOT NULL AND ds_path_w::text <> '') then	
		if (position('\' in ds_path_w) > 0) then
			ie_separator_w	:= '\';
			ds_path_aux_w	:= replace(ds_path_aux_w, '/', '\');
		else
			ie_separator_w	:= '/';
			ds_path_aux_w	:= replace(ds_path_aux_w, '/', '\');
		end if;
		
		if (coalesce(ds_path_aux_w::text, '') = '') then
			ds_retorno_w	:= ds_path_w || ie_separator_w || ds_uploaded_file_name_w;		
		else
			ds_retorno_w	:= ds_path_w || ds_path_aux_w || ds_uploaded_file_name_w;
		end if;
	end if;
else
	ds_retorno_w	:= ds_arquivo_p; 	
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION converte_path_storage_web ( ds_arquivo_p text) FROM PUBLIC;

