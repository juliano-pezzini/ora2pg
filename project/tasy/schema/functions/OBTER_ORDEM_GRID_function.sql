-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_ordem_grid (nm_tabela_p text, nr_seq_visao_p bigint) RETURNS varchar AS $body$
DECLARE

  nr_seq_ordem_w smallint;
  nm_atributo_w varchar(50);
  ds_order_w varchar(4000) := null;

C01 CURSOR FOR
   SELECT distinct nm_atributo, nr_seq_ordem
     from tabela_atrib_regra
    where nm_tabela = nm_tabela_p
      and nm_usuario_param = wheb_usuario_pck.get_nm_usuario
      and (nr_seq_ordem IS NOT NULL AND nr_seq_ordem::text <> '')
 order by abs(nr_seq_ordem);

C01_1 CURSOR FOR
   SELECT distinct nm_atributo, nr_seq_ordem
     from tabela_atrib_regra
    where nm_tabela = nm_tabela_p
      and cd_perfil = wheb_usuario_pck.get_cd_perfil
      and coalesce(nm_usuario_param::text, '') = ''
      and (nr_seq_ordem IS NOT NULL AND nr_seq_ordem::text <> '')
 order by abs(nr_seq_ordem);

C01_2 CURSOR FOR
   SELECT distinct nm_atributo, nr_seq_ordem
     from tabela_atrib_regra
    where nm_tabela = nm_tabela_p
      and cd_funcao = wheb_usuario_pck.get_cd_funcao
      and coalesce(cd_perfil::text, '') = ''
      and coalesce(nm_usuario_param::text, '') = ''
      and (nr_seq_ordem IS NOT NULL AND nr_seq_ordem::text <> '')
 order by abs(nr_seq_ordem);

C01_3 CURSOR FOR
   SELECT distinct nm_atributo, nr_seq_ordem
     from tabela_atrib_regra
    where nm_tabela = nm_tabela_p
      and (nr_seq_ordem IS NOT NULL AND nr_seq_ordem::text <> '')
      and coalesce(cd_funcao::text, '') = ''
      and coalesce(cd_perfil::text, '') = ''
      and coalesce(nm_usuario_param::text, '') = ''
 order by abs(nr_seq_ordem);

C02 CURSOR FOR
   SELECT distinct nm_atributo, nr_seq_ordem
     from tabela_visao_atributo
    where nr_sequencia = nr_seq_visao_p
      and (nr_seq_ordem IS NOT NULL AND nr_seq_ordem::text <> '')
 order by abs(nr_seq_ordem);

C02_1 CURSOR FOR
   SELECT distinct a.nm_atributo, a.nr_seq_ordem
     from tabela_visao_atributo c, tabela_atributo a
    where a.nm_tabela = nm_tabela_p
      and a.nm_atributo = c.nm_atributo
      and c.nr_sequencia = nr_seq_visao_p
      and (a.nr_seq_ordem IS NOT NULL AND a.nr_seq_ordem::text <> '')
 order by abs(a.nr_seq_ordem);

C03 CURSOR FOR
   SELECT nm_atributo, nr_seq_ordem
     from tabela_atributo
    where nm_tabela = nm_tabela_p
      and (nr_seq_ordem IS NOT NULL AND nr_seq_ordem::text <> '')
 order by abs(nr_seq_ordem);

FieldInfoCursor CURSOR(tableName  text, viewNumber  bigint, fieldName  text) FOR
    SELECT ta.ie_tipo_atributo, coalesce(tva.ds_valores, ta.ds_valores) ds_valores
      from tabela_atributo ta
 left join tabela_visao_atributo tva on tva.nr_sequencia = viewNumber and tva.nm_atributo = ta.nm_atributo
     where ta.nm_tabela = tableName
       and ta.nm_atributo = fieldName;

  function transformAttribute(attributeName in text) return text is
    fieldType varchar(50);
    fieldSQL varchar(4000);
    transformed varchar(4000) := attributeName;

BEGIN
    open FieldInfoCursor(nm_tabela_p, nr_seq_visao_p, attributeName);
    fetch FieldInfoCursor into fieldType, fieldSQL;
    if FieldInfoCursor%found and fieldType = 'FUNCTION' and position(':' in fieldSQL) = 0 then
      transformed := fieldSQL;
    end if;
    close FieldInfoCursor;

    return transformed;
  end;

  function addAttribute(currentOrderBy in varchar2, attributeName in varchar2) return varchar2 is
    transformed varchar2(4000);
  begin
    transformed := transformAttribute(attributeName);

    if coalesce(currentOrderBy::text, '') = '' then
      return transformed;
    end if;
    return currentOrderBy || ',' || transformed;
  end;

  function addDirection(currentOrderBy in varchar2, directionIndex in number) return varchar2 is
  begin
    if (directionIndex < 0) then
      return currentOrderBy || ' desc ';
    end if;
    return currentOrderBy;
  end;

  function removeLineBreaks(text in varchar2) return varchar2 is
    replaceWith varchar2(1) := ' ';
  begin
    return replace(replace(text, chr(10), replaceWith), chr(13), replaceWith);
  end;

begin
  open c01;
  loop
    fetch c01 into nm_atributo_w, nr_seq_ordem_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
    begin
      ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
      ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
    end;
  end loop;
  close c01;

  if (coalesce(ds_order_w::text, '') = '') then
    open c01_1;
    loop
      fetch c01_1 into nm_atributo_w, nr_seq_ordem_w;
      EXIT WHEN NOT FOUND; /* apply on c01_1 */
      begin
        ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
        ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
      end;
    end loop;
    close c01_1;

    if (coalesce(ds_order_w::text, '') = '') then
      open c01_2;
      loop
        fetch c01_2 into nm_atributo_w, nr_seq_ordem_w;
        EXIT WHEN NOT FOUND; /* apply on c01_2 */
        begin
          ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
          ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
        end;
      end loop;
      close c01_2;

      if (coalesce(ds_order_w::text, '') = '') then
        open c01_3;
        loop
          fetch c01_3 into nm_atributo_w, nr_seq_ordem_w;
          EXIT WHEN NOT FOUND; /* apply on c01_3 */
          begin
            ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
            ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
          end;
        end loop;
        close c01_3;
      end if;
    end if;
  end if;

  if (coalesce(ds_order_w::text, '') = '') then
    open c02;
    loop
      fetch c02 into nm_atributo_w, nr_seq_ordem_w;
      EXIT WHEN NOT FOUND; /* apply on c02 */
      begin
        ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
        ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
      end;
    end loop;
    close c02;

    if (coalesce(ds_order_w::text, '') = '') then
      open c02_1;
      loop
        fetch c02_1 into nm_atributo_w, nr_seq_ordem_w;
        EXIT WHEN NOT FOUND; /* apply on c02_1 */
        begin
          ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
          ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
        end;
      end loop;
      close c02_1;
    end if;
  end if;

  if (coalesce(ds_order_w::text, '') = '') then
    open c03;
    loop
      fetch c03 into nm_atributo_w, nr_seq_ordem_w;
      EXIT WHEN NOT FOUND; /* apply on c03 */
      begin
        ds_order_w := addAttribute(ds_order_w, nm_atributo_w);
        ds_order_w := addDirection(ds_order_w, nr_seq_ordem_w);
      end;
    end loop;
    close c03;
  end if;

  if (coalesce(ds_order_w::text, '') = '') then
    return 'Order by 1';
  else
    return 'Order by ' || removeLineBreaks(ds_order_w);
  end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_ordem_grid (nm_tabela_p text, nr_seq_visao_p bigint) FROM PUBLIC;

