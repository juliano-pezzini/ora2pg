-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_blood_allocation_rule_6_ok (nr_seq_mensagem_p bigint, ie_tipo_derivado_p text, nr_seq_reserva_p san_reserva_prod.nr_seq_reserva%type, nm_usuario_p usuario.nm_usuario%type, NR_SEQ_PRODUCAO_P san_reserva_prod.nr_seq_reserva%type) RETURNS bigint AS $body$
DECLARE


ie_retorno_w	bigint := 1;

nr_seq_exam_param511 bigint;
nr_seq_exam_param510 san_reserva_prod.nr_seq_reserva%type;
qt_exams_param511_w bigint;
qt_exams_param510_w san_exame_realizado.NR_SEQ_EXAME%type;
ds_resultado_param511_w varchar(50);
ds_resultado_param510_w san_exame_realizado.ds_resultado%type;
nr_seq_exam_antibodies bigint;
qt_exams_antibodies bigint;

dt_ultimo_exame_w timestamp;


BEGIN
if (ie_tipo_derivado_p = 'CH') then
	if (nr_seq_mensagem_p = 1) then
 		ie_retorno_w := get_blood_allocation_rule_5_ok(1, NR_SEQ_PRODUCAO_P);
		if (ie_retorno_w=0) then
			ie_retorno_w := get_blood_allocation_rule_5_ok(2, NR_SEQ_PRODUCAO_P);
		end if;
 	end if;

 	if (nr_seq_mensagem_p = 2) then
 		nr_seq_exam_param511 := obter_parametro_funcao(450, 511, nm_usuario_p);
 		nr_seq_exam_param510 := obter_parametro_funcao(450, 510, nm_usuario_p);

		select count(c.NR_SEQ_EXAME)
		into STRICT qt_exams_param511_w
		from san_reserva_prod a, san_exame_lote b, san_exame_realizado c
		where a.nr_seq_reserva = nr_seq_reserva_p
		and a.nr_sequencia = b.nr_seq_res_prod
		and c.nr_seq_exame_lote = b.nr_sequencia
		and c.nr_seq_exame = nr_seq_exam_param511;

		select count(c.NR_SEQ_EXAME)
		into STRICT qt_exams_param510_w
		from san_reserva_prod a, san_exame_lote b, san_exame_realizado c
		where a.nr_seq_reserva = nr_seq_reserva_p
		and a.nr_sequencia = b.nr_seq_res_prod
		and c.nr_seq_exame_lote = b.nr_sequencia
		and c.nr_seq_exame = nr_seq_exam_param510;
		if (qt_exams_param511_w >= 2 and qt_exams_param510_w >= 2) then
			ie_retorno_w:= 0;
		end if;

 	end if;

 	if (nr_seq_mensagem_p = 3) then
        nr_seq_exam_param511 := obter_parametro_funcao(450, 511, nm_usuario_p);
 		nr_seq_exam_param510 := obter_parametro_funcao(450, 510, nm_usuario_p);

 		select max(c.ds_resultado)
		into STRICT ds_resultado_param511_w
		from san_reserva_prod a, san_exame_lote b, san_exame_realizado c 
		where a.nr_seq_reserva = nr_seq_reserva_p
		and a.nr_sequencia = b.nr_seq_res_prod
		and c.nr_seq_exame_lote = b.nr_sequencia
		and c.nr_seq_exame = nr_seq_exam_param511;

		select max(c.ds_resultado)
		into STRICT ds_resultado_param510_w
		from san_reserva_prod a, san_exame_lote b, san_exame_realizado c
		where a.nr_seq_reserva = nr_seq_reserva_p
		and a.nr_sequencia = b.nr_seq_res_prod
		and c.nr_seq_exame_lote = b.nr_sequencia
		and c.nr_seq_exame = nr_seq_exam_param510;
		if (coalesce(ds_resultado_param511_w::text, '') = ''
			or coalesce(ds_resultado_param510_w::text, '') = '' 
			or ds_resultado_param511_w != ds_resultado_param510_w) then
			ie_retorno_w:= 0;
		end if;

 	end if;

 	if (nr_seq_mensagem_p = 4) then
	nr_seq_exam_antibodies := obter_parametro_funcao(450, 510, nm_usuario_p);
 		select count(c.NR_SEQ_EXAME)
		into STRICT qt_exams_antibodies
		from san_reserva_prod a, san_exame_lote b, san_exame_realizado c
		where a.nr_seq_reserva = nr_seq_reserva_p
		and a.nr_sequencia = b.nr_seq_res_prod
		and c.nr_seq_exame_lote = b.nr_sequencia
		and c.nr_seq_exame = nr_seq_exam_antibodies
		and c.cd_exp_resultado in (296109, 297256, 489447);

		if (qt_exams_antibodies > 0) then
			ie_retorno_w:= 0;
		end if;

 	end if;

 	if (nr_seq_mensagem_p = 5) then
	nr_seq_exam_antibodies := obter_parametro_funcao(450, 510, nm_usuario_p);
 		select max(c.dt_realizado)
 		into STRICT dt_ultimo_exame_w
		from san_reserva_prod a, san_exame_lote b, san_exame_realizado c
		where a.nr_seq_reserva = nr_seq_reserva_p
		and a.nr_sequencia = b.nr_seq_res_prod
		and c.nr_seq_exame = nr_seq_exam_antibodies
		and c.nr_seq_exame_lote = b.nr_sequencia;

		if ((dt_ultimo_exame_w IS NOT NULL AND dt_ultimo_exame_w::text <> '') and Not(dt_ultimo_exame_w BETWEEN clock_timestamp() - interval '7 days' AND clock_timestamp())) then
			ie_retorno_w:= 0;
		end if;

 	end if;

 end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_blood_allocation_rule_6_ok (nr_seq_mensagem_p bigint, ie_tipo_derivado_p text, nr_seq_reserva_p san_reserva_prod.nr_seq_reserva%type, nm_usuario_p usuario.nm_usuario%type, NR_SEQ_PRODUCAO_P san_reserva_prod.nr_seq_reserva%type) FROM PUBLIC;

