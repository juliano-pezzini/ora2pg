-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION calc_taxa_rend_aplicacao ( nr_seq_lancamento_p bigint, --Sequencia da aplicacao da tabela BANCO_APLICACAO
 dt_rendimento_p timestamp, cd_estabelecimento_p bigint) RETURNS bigint AS $body$
DECLARE

										
nr_seq_conta_bco_aplic_w		banco_aplicacao.nr_seq_conta_bco_aplic%type;
nr_seq_aplicacao_w				banco_aplicacao.nr_seq_aplicacao%type;
tx_ajuste_w						indice_reajuste_valor.tx_ajuste%type;
nr_seq_indice_w					conta_banco_aplic_taxa.nr_seq_indice%type;
vl_taxa_rend_w					conta_banco_aplic_taxa.vl_taxa_rend%type;
qt_dias_uteis_ano_w				bigint;
dt_inicial_w					timestamp;
dt_final_w						timestamp;

vl_retorno_w					double precision;	

/*Cursor para obter a taxa do índice de acordo com a data e do rendimento e indice da taxa da aplicação. A ordenação ocorre pela sequencia, para dar preferencia para a ultima cadastrada.*/

C01 CURSOR FOR
		SELECT	b.tx_ajuste
		from	tipo_indice_reajuste a,
				indice_reajuste_valor b
		where	a.nr_sequencia = b.nr_seq_indice
		and		a.nr_sequencia = nr_seq_indice_w
		and		trunc(dt_rendimento_p) between trunc(b.dt_inicio_vigencia) and trunc(b.dt_fim_vigencia)
		and		coalesce(a.ie_situacao,'A') = 'A'
		order   by b.nr_sequencia asc;
	

BEGIN

select	max(nr_seq_conta_bco_aplic),
		max(nr_seq_aplicacao)
into STRICT	nr_seq_conta_bco_aplic_w,
		nr_seq_aplicacao_w
from	banco_aplicacao
where	nr_sequencia = nr_seq_lancamento_p;

if (nr_seq_conta_bco_aplic_w IS NOT NULL AND nr_seq_conta_bco_aplic_w::text <> '') and (nr_seq_aplicacao_w IS NOT NULL AND nr_seq_aplicacao_w::text <> '') then

	select	max(vl_taxa_rend),
			max(nr_seq_indice)
	into STRICT	vl_taxa_rend_w,
			nr_seq_indice_w
	from 	conta_banco_aplic_taxa	
	where	nr_seq_conta_banco 		= nr_seq_conta_bco_aplic_w
	and		nr_seq_aplic			= nr_seq_aplicacao_w
	and		coalesce(ie_situacao,'A')	= 'A';

	if (nr_seq_indice_w IS NOT NULL AND nr_seq_indice_w::text <> '') then	
		open C01;
		loop
		fetch C01 into	
			tx_ajuste_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;
	end if;

end if;

/*Buscar primeiro e último dia do ano da data corrente*/

select	TRUNC(clock_timestamp(),'YEAR'),
		add_months(TRUNC(clock_timestamp(),'YEAR')-1,12)
into STRICT	dt_inicial_w,
		dt_final_w
;

/*Buscar a quantidade de dias uteis no ano*/

select	obter_dias_uteis_periodo(dt_inicial_w, dt_final_w,cd_estabelecimento_p)
into STRICT	qt_dias_uteis_ano_w
;

if (qt_dias_uteis_ano_w > 0) and (tx_ajuste_w IS NOT NULL AND tx_ajuste_w::text <> '') and (vl_taxa_rend_w IS NOT NULL AND vl_taxa_rend_w::text <> '') then
    --Cálculo

    --6,89% (Taxas Índices - Cadastro shift F11 ) / 252 (dias úteis do ano – depende do calendário Tasy) X 30 (MÊS – Considerar sempre 30 dias) X 95% ( Taxa CDB) / 30 (DIAS) X VALOR INICIAL DA APLICAÇÃO

	--((((power(((6.39/100)+1),(1/252))-1)*3000))*(95/100)/30)
	vl_retorno_w := ((((power(((tx_ajuste_w/100)+1),(1/qt_dias_uteis_ano_w))-1)*3000))*(vl_taxa_rend_w/100)/30); -- Taxa retornada em percentual, pois deve apresentar em tela como percentual. No código-fonte, é calculado o valor do rendimento dividindo a taxa por 100.
else --Se não achar os itens acima para calcular, trazer o valor direto do cadastro da aplicação, conforme fazia antes.	

	/*Mesmo select que faz no objeto 403452, que era usado diretamente no newRecord para alimentar o campo banco_rendimento.vl_taxa_rendimento*/

	select 	max(b.vl_taxa_rend)
	into STRICT	vl_retorno_w
	from	banco_aplicacao a,
			conta_banco_tipo_aplic b 
	where	a.nr_seq_aplicacao 	= b.nr_sequencia 
	and		a.nr_sequencia 		= nr_seq_lancamento_p;

end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION calc_taxa_rend_aplicacao ( nr_seq_lancamento_p bigint, dt_rendimento_p timestamp, cd_estabelecimento_p bigint) FROM PUBLIC;

