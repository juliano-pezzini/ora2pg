-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_media_tempo_espera ( cd_estabelecimento_p bigint, cd_senha_p text, ie_considerar_datas_p text, ie_filtro_data_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_filas_liberadas_p text, var_seq_maquina_atual_p text, cd_perfil_p bigint, ie_pendentes_p text, ie_exibe_inutilizada_p text) RETURNS varchar AS $body$
DECLARE

 
			 
 
nr_minutos_w		bigint;

nr_horas_w			bigint;

nr_horas_total_w	bigint;

nr_minutos_total_w	bigint;

dt_inicio_w			varchar(20);

nr_contador_w		bigint;

ds_tempo_w			varchar(10);

ds_tempo_espera_w	varchar(2000);

nr_dois_pontos_w	bigint;

 
 
C01 CURSOR FOR 
 
	SELECT	substr(obter_dif_espera_senha(a.nr_sequencia, 'A', obter_data_atend_senha(a.nr_sequencia,'I')), 1, 10) 
 
	from	paciente_senha_fila a, 
 
			fila_espera_senha b 
 
	where	b.nr_sequencia = coalesce(a.nr_seq_fila_senha, a.nr_seq_fila_senha_origem) 
 
	and		((a.cd_estabelecimento = cd_estabelecimento_p) or (coalesce(cd_estabelecimento_p::text, '') = '')) 
 
	and		((coalesce(cd_senha_p::text, '') = '') or (upper(substr(obter_letra_verifacao_senha(coalesce(a.nr_seq_fila_senha_origem, a.nr_seq_fila_senha)),1,10) || a.cd_senha_gerada) = upper(cd_senha_p))) 
 
	and		((ie_considerar_datas_p = 'N') or (((ie_filtro_data_p = 0) and (a.dt_geracao_senha between dt_inicial_p and fim_dia(dt_final_p))) or 
 
			((ie_filtro_data_p = 1) and (a.dt_primeira_chamada between dt_inicial_p and fim_dia(dt_final_p))) or 
 
			((ie_filtro_data_p = 2) and (a.dt_vinculacao_senha between dt_inicial_p and fim_dia(dt_final_p))))) 
 
	and		((ie_filas_liberadas_p = 'N') or (exists (SELECT 1 
 
												from regra_liberacao_fila c 
 
												where b.nr_sequencia = c.nr_seq_fila_espera 
 
												and c.nr_seq_local_senha = var_seq_maquina_atual_p 
 
												and coalesce(c.cd_perfil,cd_perfil_p) = cd_perfil_p 
 
												and coalesce(c.cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p))) 
 
	and		((ie_pendentes_p = 'N') or (not exists (select 1 
 
											from 	atendimentos_senha z 
 
											where	z.NR_SEQ_PAC_SENHA_FILA = a.nr_sequencia))) 
 
	and		((ie_exibe_inutilizada_p = 'S') or (coalesce(a.dt_inutilizacao::text, '') = ''));

 
 

BEGIN 
 
 
 
nr_horas_w := 0;
 
nr_minutos_total_w := 0;
 
nr_contador_w := 0;
 
nr_horas_total_w := 0;
 
 
 
open C01;
 
loop 
 
fetch C01 into	 
 
	dt_inicio_w;
 
EXIT WHEN NOT FOUND; /* apply on C01 */
 
	begin 
 
	nr_dois_pontos_w := position(':' in dt_inicio_w);
 
	nr_contador_w := nr_contador_w + 1;
 
	nr_horas_w := (substr(dt_inicio_w,1,nr_dois_pontos_w - 1))::numeric;
 
	nr_minutos_w := (substr(dt_inicio_w,nr_dois_pontos_w + 1 ,2))::numeric;
 
 
 
	nr_minutos_total_w := nr_minutos_total_w + (nr_horas_w * 60);
 
	nr_minutos_total_w := nr_minutos_total_w + nr_minutos_w;
 
	end;
 
end loop;
 
close C01;
 
 
 
nr_minutos_total_w := round(nr_minutos_total_w/nr_contador_w);
 
 
 
while(nr_minutos_total_w > 60) loop 
 
	nr_horas_total_w := nr_horas_total_w + 1;
 
	nr_minutos_total_w := nr_minutos_total_w - 60;
 
end loop;
 
 
 
ds_tempo_w := lpad(coalesce(nr_horas_total_w,'00'), 2, '0') || ':' || lpad(coalesce(nr_minutos_total_w,'00'), 2, '0');
 
 
 
ds_tempo_espera_w := ds_tempo_w;
 
 
 
if (coalesce(ds_tempo_espera_w::text, '') = '') then 
 
	ds_tempo_espera_w := '00:00:00';
 
end if;
 
 
 
return	ds_tempo_espera_w;
 
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_media_tempo_espera ( cd_estabelecimento_p bigint, cd_senha_p text, ie_considerar_datas_p text, ie_filtro_data_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_filas_liberadas_p text, var_seq_maquina_atual_p text, cd_perfil_p bigint, ie_pendentes_p text, ie_exibe_inutilizada_p text) FROM PUBLIC;

