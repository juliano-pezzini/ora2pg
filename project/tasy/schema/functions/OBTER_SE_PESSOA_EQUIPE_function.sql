-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_pessoa_equipe (nm_usuario_p text, nr_seq_grupo_p bigint, nr_seq_gerencia_p bigint, nr_seq_diretoria_p bigint) RETURNS varchar AS $body$
DECLARE


ie_retorno_w		varchar(1) := 'N';
cd_pessoa_fisica_w	varchar(10);

	function verifica_se_diretor(nm_usuario_p	text)
				return text is
				
	cd_cargo_w	bigint;
	ie_diretor_w	varchar(1) := 'N';
				
	
BEGIN

		select	b.cd_cargo
		into STRICT	cd_cargo_w
		from	usuario a,
			pessoa_fisica b
		where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and	upper(a.nm_usuario) = upper(nm_usuario_p);

		if (cd_cargo_w IS NOT NULL AND cd_cargo_w::text <> '') then
			begin
			if (cd_cargo_w in (791,1232)) then
				begin
					ie_diretor_w := 'S';
				end;
			end if;
			end;
		end if;
		
	if (upper(nm_usuario_p) = 'EDILSON') or (upper(nm_usuario_p) = 'NRAJ') or (upper(nm_usuario_p) = 'ANDERSONA') or (upper(nm_usuario_p) = 'TPOSDNYAKOVA') then
		ie_diretor_w := 'S';
	end if;
		
	return	ie_diretor_w;

	end;

begin

select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	usuario
where	nm_usuario	= nm_usuario_p;

if (verifica_se_diretor(nm_usuario_p) = 'S') then
	ie_retorno_w := 'S';
	
elsif (nr_seq_grupo_p IS NOT NULL AND nr_seq_grupo_p::text <> '') then

	begin --Se o usuário pertence ao grupo
	select	'S'
	into STRICT	ie_retorno_w
	from	usuario_grupo_des a
	where	a.nr_seq_grupo		= nr_seq_grupo_p
	and	a.nm_usuario_grupo	= nm_usuario_p  LIMIT 1;
	exception
	when others then
		begin --Se é o líder do grupo
		select	'S'
		into STRICT	ie_retorno_w
		from	grupo_desenvolvimento
		where	nr_sequencia		= nr_seq_grupo_p
		and	nm_usuario_lider	= nm_usuario_p  LIMIT 1;
		exception
		when others then
			begin --Se é o gerente da gerência do grupo
			select	'S'
			into STRICT	ie_retorno_w
			from	grupo_desenvolvimento a,
				gerencia_wheb b
			where	a.nr_sequencia		= nr_seq_grupo_p
			and	a.nr_seq_gerencia	= b.nr_sequencia
			and	a.ie_situacao		= 'A'
			and	b.ie_situacao		= 'A'
			and	b.cd_responsavel	= cd_pessoa_fisica_w  LIMIT 1;
			exception
			when others then
				begin --Se é membro do grupo de gerência da gerência
				select	'S'
				into STRICT	ie_retorno_w
				from	grupo_desenvolvimento a,
					grupo_desenvolvimento x,
					usuario_grupo_des b
				where	a.nr_sequencia		= nr_seq_grupo_p
				and	a.nr_seq_gerencia	= x.nr_seq_gerencia
				and	b.nr_seq_grupo		= x.nr_sequencia
				and	b.nm_usuario_grupo	= nm_usuario_p										
				and	x.ie_situacao		= 'A'
				and	b.ie_funcao_usuario	in ('G','S')
				and	x.ie_gerencia		= 'S' --grupo de gerência
  LIMIT 1;
				exception
				when others then
					ie_retorno_w	:= 'N';					
				end;
			end;
		end;	
	end;
	
elsif (nr_seq_gerencia_p IS NOT NULL AND nr_seq_gerencia_p::text <> '') then

	begin --Se é o gerente da gerência
	select	'S'
	into STRICT	ie_retorno_w
	from	gerencia_wheb a
	where	a.nr_sequencia		= nr_seq_gerencia_p
	and	a.cd_responsavel	= cd_pessoa_fisica_w  LIMIT 1;
	exception
	when others then
		begin --Se é membro do grupo de gerência da gerência
		select	'S'
		into STRICT	ie_retorno_w
		from	grupo_desenvolvimento a,
			usuario_grupo_des b
		where	a.nr_seq_gerencia	= nr_seq_gerencia_p
		and	b.nr_seq_grupo		= a.nr_sequencia
		and	b.nm_usuario_grupo	= nm_usuario_p										
		and	a.ie_situacao		= 'A'
		and	b.ie_funcao_usuario	in ('G','S')
		and	a.ie_gerencia		= 'S' --grupo de gerência
  LIMIT 1;
		exception
		when others then
			begin --Se é membro de um grupo da gerência
			select	'S'
			into STRICT	ie_retorno_w
			from	usuario_grupo_des a,
				grupo_desenvolvimento b
			where	a.nr_seq_grupo		= b.nr_sequencia
			and	b.nr_seq_gerencia	= nr_seq_gerencia_p
			and	a.nm_usuario_grupo	= nm_usuario_p
			and	b.ie_situacao		= 'A'  LIMIT 1;
			exception
			when others then
				ie_retorno_w	:= 'N';	
			end;				
		end;
	end;
	
elsif (nr_seq_diretoria_p IS NOT NULL AND nr_seq_diretoria_p::text <> '') then

	begin --Se é o gerente de alguma gerência da diretoria
	select	'S'
	into STRICT	ie_retorno_w
	from	gerencia_wheb a
	where	a.nr_seq_diretoria	= nr_seq_diretoria_p
	and	a.cd_responsavel	= cd_pessoa_fisica_w  LIMIT 1;
	exception
	when others then
		begin --Se é membro do grupo de gerência de alguma gerência da diretoria
		select	'S'
		into STRICT	ie_retorno_w
		from	grupo_desenvolvimento a,
			usuario_grupo_des b,
			gerencia_wheb c
		where	a.nr_seq_gerencia	= c.nr_sequencia
		and	c.nr_seq_diretoria	= nr_seq_diretoria_p
		and	b.nr_seq_grupo		= a.nr_sequencia
		and	b.nm_usuario_grupo	= nm_usuario_p	
		and	c.ie_situacao		= 'A'
		and	a.ie_situacao		= 'A'
		and	b.ie_funcao_usuario	in ('G','S')
		and	a.ie_gerencia		= 'S' --grupo de gerência
  LIMIT 1;
		exception
		when others then
			begin --Se é membro de um grupo de alguma gerência da diretoria
			select	'S'
			into STRICT	ie_retorno_w
			from	usuario_grupo_des a,
				grupo_desenvolvimento b,
				gerencia_wheb c
			where	a.nr_seq_grupo		= b.nr_sequencia
			and	b.nr_seq_gerencia	= c.nr_sequencia
			and	c.nr_seq_diretoria	= nr_seq_diretoria_p
			and	a.nm_usuario_grupo	= nm_usuario_p
			and	c.ie_situacao		= 'A'
			and	b.ie_situacao		= 'A'  LIMIT 1;
			exception
			when others then
				ie_retorno_w	:= 'N';	
			end;				
		end;
	end;

end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pessoa_equipe (nm_usuario_p text, nr_seq_grupo_p bigint, nr_seq_gerencia_p bigint, nr_seq_diretoria_p bigint) FROM PUBLIC;

