-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION calcular_pis_cofins_presumido ( nr_sequencia_p bigint, ie_opcao text) RETURNS bigint AS $body$
DECLARE

/* opcoes
TPR : Total PIS retido.
TCR: Total COFINS retido.
TIR: Total ISS retido.
TNPR: Total das notas com PIS retido.
TNCR: Total das notas com COFINS retido.
TNIR: Total das notas com ISS retido.
TNSPR: Total das notas sem PIS retido.
TNSCR:Total das notas sem COFINS retido.
TNSIR:Total das notas sem ISS retido.
AP: Aliquota do PIS.
AC: Aliquota do COFINS.
AI: Aliquota do ISS.
TBC: Total da base de calculo.*/
retorno_w		double precision;
cd_tributo_w		fis_tributo_presumido.cd_tributo%type;
dt_inicial_w		fis_tributo_presumido.dt_inicio%type;
dt_final_w		fis_tributo_presumido.dt_fim%type;
ie_emissao_pagamento_w	fis_tributo_presumido.ie_emissao_pagamento%type;
cd_empresa_w		estabelecimento.cd_empresa%type;
cd_estabelecimento_w	fis_tributo_presumido.cd_estabelecimento%type;
ie_filter_by_estab_w	fis_tributo_presumido.ie_filter_by_estab%type;


BEGIN

select	cd_tributo,
	dt_inicio,
	dt_fim,	
	ie_emissao_pagamento,
	cd_estabelecimento,
	ie_filter_by_estab
into STRICT	cd_tributo_w,
	dt_inicial_w,
	dt_final_w,
	ie_emissao_pagamento_w,
	cd_estabelecimento_w,
	ie_filter_by_estab_w
from	fis_tributo_presumido
where	nr_sequencia = nr_sequencia_p;

cd_empresa_w	:= obter_empresa_estab(cd_estabelecimento_w);

if ((ie_opcao = 'TPR') or (ie_opcao = 'TCR') or (ie_opcao = 'TIR')) then

	if (ie_emissao_pagamento_w = 1) then
		select	sum(c.vl_tributo)
		into STRICT	retorno_w
		from 	nota_fiscal b,
			nota_fiscal_trib c,
			fis_tributo_presumido_nf a
		where 	b.nr_sequencia = c.nr_sequencia
		and	a.nr_seq_nota_fiscal = b.nr_sequencia
		and	c.cd_tributo = cd_tributo_w
		and	c.vl_tributo > 0
		and	a.nr_seq_trib_presumido = nr_sequencia_p
		and 	((a.ie_tipo_apuracao = 'E') or (coalesce(a.ie_tipo_apuracao::text, '') = ''))
		and	obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_w
		and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_w));

	else
		select	sum((a.vl_recebimento * (c.tx_tributo/100)))
		into STRICT	retorno_w
		from 	nota_fiscal b,
			nota_fiscal_trib c,
			fis_tributo_presumido_nf a
		where 	b.nr_sequencia = c.nr_sequencia
		and	a.nr_seq_nota_fiscal = b.nr_sequencia
		and	c.cd_tributo = cd_tributo_w
		and	c.vl_tributo > 0
		and	a.nr_seq_trib_presumido = nr_sequencia_p
		and 	a.ie_tipo_apuracao = 'R'
		and	obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_w
		and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_w));
	end if;
end if;

if ((ie_opcao = 'TNPR') or (ie_opcao = 'TNCR') or (ie_opcao = 'TNIR')) then

	if (ie_emissao_pagamento_w = 1) then
		select 	sum(b.vl_mercadoria)
		into STRICT	retorno_w
		from 	nota_fiscal b,
			nota_fiscal_trib c, 
			fis_tributo_presumido_nf a
		where 	b.nr_sequencia = c.nr_sequencia
		and	a.nr_seq_nota_fiscal = b.nr_sequencia
		and	c.cd_tributo = cd_tributo_w
		and	c.vl_tributo > 0
		and	a.nr_seq_trib_presumido = nr_sequencia_p
		and 	((a.ie_tipo_apuracao = 'E') or (coalesce(a.ie_tipo_apuracao::text, '') = ''))
		and	obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_w
		and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_w));
	else
		select 	sum(b.vl_mercadoria)
		into STRICT	retorno_w
		from 	nota_fiscal b,
			nota_fiscal_trib c,
			fis_tributo_presumido_nf a
		where 	b.nr_sequencia = c.nr_sequencia
		and	a.nr_seq_nota_fiscal = b.nr_sequencia
		and	c.cd_tributo = cd_tributo_w
		and	c.vl_tributo > 0
		and	a.nr_seq_trib_presumido = nr_sequencia_p
		and 	a.ie_tipo_apuracao = 'R'
		and	obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_w
		and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_w));
	end if;
end if;

if ((ie_opcao = 'TNSPR') or (ie_opcao = 'TNSCR') or (ie_opcao = 'TNSIR')) then
	select	sum(n.vl_mercadoria)
	into STRICT	retorno_w
	from	nota_fiscal n,
		operacao_nota o
	where	n.cd_operacao_nf = o.cd_operacao_nf
	and	o.ie_servico = 'S' -- nota de servico
	and	o.ie_operacao_fiscal = 'S' --saida
	and	obter_empresa_estab(n.cd_estabelecimento) = cd_empresa_w
	and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and n.cd_estabelecimento = cd_estabelecimento_w))
	and 	((n.ie_situacao = '1')
		or   	((n.ie_situacao = '3') and (trunc(coalesce(n.dt_cancelamento,dt_final_w),'dd') > dt_final_w)))
	and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
	and	n.dt_emissao between dt_inicial_w and fim_dia(dt_final_w)
	and (not exists (SELECT	1
				from	nota_fiscal_trib c
				where   n.nr_sequencia = c.nr_sequencia
				and     c.cd_tributo = cd_tributo_w)			
	or 	exists (select	1
		from	nota_fiscal_trib c,
			tributo	t
		where	c.nr_sequencia	= n.nr_sequencia
		and	c.cd_tributo 	= t.cd_tributo
		and	c.cd_tributo	= cd_tributo_w
		and (c.vl_tributo	= 0 or t.ie_soma_diminui = 'N')));
end if;

if ((ie_opcao = 'AP') or (ie_opcao = 'AC') or (ie_opcao = 'AI')) then
	select	max(pr_imposto)
	into STRICT	retorno_w
	from	regra_calculo_imposto	e,
		tributo			d
	where  	d.cd_tributo 			= e.cd_tributo
	and	d.cd_tributo 			= cd_tributo_w
	and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and e.cd_estabelecimento = cd_estabelecimento_w));
end if;

if (ie_opcao = 'TBC') then
	select sum(vl_base_calculo)
	into STRICT retorno_w
	from   (SELECT	sum(vl_base_calculo) vl_base_calculo
		from	nota_fiscal n,
			nota_fiscal_trib i,
			tributo t,
			operacao_nota o
		where	n.nr_sequencia = i.nr_sequencia 
		and	i.cd_tributo = t.cd_tributo
		and	n.cd_operacao_nf = o.cd_operacao_nf
		and	coalesce(i.cd_tributo,cd_tributo_w) = cd_tributo_w
		and	o.ie_servico = 'S' -- nota de servico
		and	o.ie_operacao_fiscal = 'S' --saida
		and	i.vl_tributo > 0
		and	obter_empresa_estab(n.cd_estabelecimento) = cd_empresa_w
		and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and n.cd_estabelecimento = cd_estabelecimento_w))
		and 	((n.ie_situacao = '1')
			or   ((n.ie_situacao = '3') and (trunc(coalesce(n.dt_cancelamento,dt_final_w),'dd') > dt_final_w)))
		and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
		and	n.dt_emissao between dt_inicial_w and fim_dia(dt_final_w)
		
union all

		SELECT 	sum(obter_valores_nota_presu(n.nr_sequencia, cd_tributo_w, 'VB')) vl_base_calculo
		from   	nota_fiscal n,
			operacao_nota o
		where  	n.cd_operacao_nf = o.cd_operacao_nf
		and	o.ie_servico = 'S' -- nota de servico
		and	o.ie_operacao_fiscal = 'S' --saida
		and	obter_empresa_estab(n.cd_estabelecimento) = cd_empresa_w
		and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and n.cd_estabelecimento = cd_estabelecimento_w))
		and 	((n.ie_situacao = '1')
			or   ((n.ie_situacao = '3') and (trunc(coalesce(n.dt_cancelamento,dt_final_w),'dd') > dt_final_w)))
		and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')  -- nota calculada
		and    	n.dt_emissao between dt_inicial_w and fim_dia(dt_final_w)
		and	not exists (select  1 from nota_fiscal_trib c
				where   n.nr_sequencia = c.nr_sequencia
				and     c.cd_tributo = cd_tributo_w)) alias33;
end if;

return	retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION calcular_pis_cofins_presumido ( nr_sequencia_p bigint, ie_opcao text) FROM PUBLIC;

