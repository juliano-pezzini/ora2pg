-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION aacd_obter_qtd_reg_leitos ( cd_setor_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_tipo_calculo_p text) RETURNS bigint AS $body$
DECLARE

									
qt_retorno_w	double precision := 0;
qt_media_w		double precision := 0;

/*
ie_tipo_calculo_p
- T(Total de registros);
- M1(Média (Qt tempo lib leito) por setor);
- M2(Média (Qt tempo hig) por setor);
- M3(Média (Qt tempo hig tot) por setor);
*/
		

BEGIN

if (cd_setor_p IS NOT NULL AND cd_setor_p::text <> '') and (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') and (ie_tipo_calculo_p = 'T') then
	
	--Totalizador de registros
	select	count(*)
	into STRICT	qt_retorno_w
	from	(
			SELECT	DISTINCT		
					c.CD_UNIDADE_BASICA ||' '|| c.CD_UNIDADE_COMPL DS_LEITO,		
					a.dt_alta dt_alta,
					(	SELECT	max(x.dt_historico)
						from	unidade_atend_hist x
						where	x.nr_atendimento 	= a.nr_atendimento
						and	x.nr_seq_unidade	= c.nr_seq_interno
						and	x.ie_status_unidade	= 'L') dt_hist_livre,		
					
					(	select	max(x.dt_historico)
						from	unidade_atend_hist x
						where	x.nr_atendimento 	= a.nr_atendimento
						and	x.nr_seq_unidade	= c.nr_seq_interno
						and	x.ie_status_unidade	= 'H') dt_higienizacao,				
					(	select	max(x.dt_historico)
						from	unidade_atend_hist x
						where	x.nr_atendimento 	= a.nr_atendimento
						and	x.nr_seq_unidade	= c.nr_seq_interno
						and	x.ie_status_unidade	= 'H'
						and	(x.dt_fim_historico IS NOT NULL AND x.dt_fim_historico::text <> '')) dt_hig_total		
			from	atendimento_paciente a,
					atend_paciente_unidade e,
					unidade_atendimento c,
					unidade_atend_hist d
			where	a.nr_atendimento 		= e.nr_atendimento
			and		e.cd_setor_atendimento	= c.cd_setor_atendimento
			and		e.cd_unidade_basica		= c.cd_unidade_basica
			and		e.cd_unidade_compl		= c.cd_unidade_compl
			and		c.nr_seq_interno 		= d.nr_seq_unidade
			AND		(A.DT_ALTA IS NOT NULL AND A.DT_ALTA::text <> '')
			AND		A.DT_ALTA				BETWEEN dt_inicial_p AND dt_final_p + 86399/86400
			AND		e.CD_SETOR_ATENDIMENTO	= cd_setor_p
			) alias13
	where	obter_dif_data(dt_alta, dt_hist_livre, 'TM') 	<> 0	
	or		obter_dif_data(dt_alta, dt_higienizacao, 'TM') 	<> 0
	or		obter_dif_data(dt_alta, dt_hig_total, 'TM') 	<> 0;
	
	
	elsif (cd_setor_p IS NOT NULL AND cd_setor_p::text <> '') and (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') and
			((ie_tipo_calculo_p = 'M1')
				or (ie_tipo_calculo_p = 'M2')
				or (ie_tipo_calculo_p = 'M3'))then
			
			--Totalizador de registros 2			
			select	count(*)
			into STRICT	qt_retorno_w
			from	(
					SELECT	DISTINCT		
						c.CD_UNIDADE_BASICA ||' '|| c.CD_UNIDADE_COMPL DS_LEITO,		
						a.dt_alta dt_alta,
						(	SELECT	max(x.dt_historico)
							from	unidade_atend_hist x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.nr_seq_unidade	= c.nr_seq_interno
							and	x.ie_status_unidade	= 'L') dt_hist_livre,		
						
						(	select	max(x.dt_historico)
							from	unidade_atend_hist x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.nr_seq_unidade	= c.nr_seq_interno
							and	x.ie_status_unidade	= 'H') dt_higienizacao,				
						(	select	max(x.dt_historico)
							from	unidade_atend_hist x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.nr_seq_unidade	= c.nr_seq_interno
							and	x.ie_status_unidade	= 'H'
							and	(x.dt_fim_historico IS NOT NULL AND x.dt_fim_historico::text <> '')) dt_hig_total		
					from	atendimento_paciente a,
							atend_paciente_unidade e,
							unidade_atendimento c,
							unidade_atend_hist d
					where	a.nr_atendimento 		= e.nr_atendimento
					and		e.cd_setor_atendimento	= c.cd_setor_atendimento
					and		e.cd_unidade_basica		= c.cd_unidade_basica
					and		e.cd_unidade_compl		= c.cd_unidade_compl
					and		c.nr_seq_interno 		= d.nr_seq_unidade
					AND		(A.DT_ALTA IS NOT NULL AND A.DT_ALTA::text <> '')
					AND		A.DT_ALTA				BETWEEN dt_inicial_p AND dt_final_p + 86399/86400
					AND		e.CD_SETOR_ATENDIMENTO	= cd_setor_p		
					) alias16 			
			where	obter_dif_data(dt_alta, dt_hist_livre, 'TM') 	<> 0	
			or		obter_dif_data(dt_alta, dt_higienizacao, 'TM') 	<> 0
			or		obter_dif_data(dt_alta, dt_hig_total, 'TM') 	<> 0;		
					
			
			--Média
			select	sum(obter_dif_data(dt_alta, CASE WHEN ie_tipo_calculo_p='M1' THEN   dt_hist_livre WHEN ie_tipo_calculo_p='M2' THEN  dt_higienizacao WHEN ie_tipo_calculo_p='M3' THEN  dt_hig_total END , 'TMS'))
			into STRICT	qt_media_w
			from	(
					SELECT	DISTINCT		
						c.CD_UNIDADE_BASICA ||' '|| c.CD_UNIDADE_COMPL DS_LEITO,		
						a.dt_alta dt_alta,
						(	SELECT	max(x.dt_historico)
							from	unidade_atend_hist x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.nr_seq_unidade	= c.nr_seq_interno
							and	x.ie_status_unidade	= 'L') dt_hist_livre,		
						
						(	select	max(x.dt_historico)
							from	unidade_atend_hist x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.nr_seq_unidade	= c.nr_seq_interno
							and	x.ie_status_unidade	= 'H') dt_higienizacao,				
						(	select	max(x.dt_historico)
							from	unidade_atend_hist x
							where	x.nr_atendimento 	= a.nr_atendimento
							and	x.nr_seq_unidade	= c.nr_seq_interno
							and	x.ie_status_unidade	= 'H'
							and	(x.dt_fim_historico IS NOT NULL AND x.dt_fim_historico::text <> '')) dt_hig_total		
					from	atendimento_paciente a,
							atend_paciente_unidade b,
							unidade_atendimento c,
							unidade_atend_hist d
					where	a.nr_atendimento 		= b.nr_atendimento
					and		b.cd_setor_atendimento	= c.cd_setor_atendimento
					and		b.cd_unidade_basica		= c.cd_unidade_basica
					and		b.cd_unidade_compl		= c.cd_unidade_compl
					and		c.nr_seq_interno 		= d.nr_seq_unidade
					AND		(A.DT_ALTA IS NOT NULL AND A.DT_ALTA::text <> '')
					AND		A.DT_ALTA				BETWEEN dt_inicial_p AND dt_final_p + 86399/86400
					AND		B.CD_SETOR_ATENDIMENTO	= cd_setor_p
					order by 1
					) alias10
			where	obter_dif_data(dt_alta, dt_hist_livre, 'TMS') 	<> 0	
			or		obter_dif_data(dt_alta, dt_higienizacao, 'TMS') <> 0
			or		obter_dif_data(dt_alta, dt_hig_total, 'TMS') 	<> 0;			
		
			select	round((dividir(qt_media_w, qt_retorno_w))::numeric,1)
			into STRICT	qt_retorno_w
			;
			
end if;
	
return	qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION aacd_obter_qtd_reg_leitos ( cd_setor_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_tipo_calculo_p text) FROM PUBLIC;

