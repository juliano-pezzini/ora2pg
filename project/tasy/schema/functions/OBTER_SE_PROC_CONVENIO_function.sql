-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proc_convenio ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text default null) RETURNS varchar AS $body$
DECLARE


qt_pontos_w			preco_amb.qt_pontuacao%type;
ds_retorno_w		varchar(01);
ie_classificacao_w		varchar(01);
vl_procedimento_w		double precision;	
cd_categoria_w		varchar(10);

vl_custo_operacional_w	double precision;
vl_anestesista_w		double precision;
vl_medico_w		double precision;
vl_auxiliares_w		double precision;
vl_materiais_w		double precision;
vl_pto_procedimento_w	double precision;
vl_pto_custo_operac_w	double precision;
vl_pto_anestesista_w	double precision;
vl_pto_medico_w		double precision;
vl_pto_auxiliares_w		double precision;
vl_pto_materiais_w		double precision;
qt_porte_anestesico_w	double precision;
cd_edicao_amb_w		double precision;

cd_usuario_convenio_w	varchar(40);
cd_plano_w		varchar(20);
ie_clinica_w		bigint;
cd_empresa_ref_w		bigint;
ie_preco_informado_w	varchar(01);
dt_competencia_w		timestamp;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_tipo_convenio_w	smallint;
cd_setor_w		integer;
ds_erro_w		varchar(255);
nr_seq_interno_aux_w	bigint;
nr_seq_ajuste_proc_w	bigint;


BEGIN

ds_retorno_w			:= 'S';

select	min(cd_categoria)
into STRICT	cd_categoria_w
from	categoria_convenio
where	cd_convenio		= cd_convenio_p
and	obter_se_categoria_lib_estab(cd_estabelecimento_p,cd_convenio, cd_categoria) = 'S'
and	ie_situacao = 'A';

if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
	cd_categoria_w	:= cd_categoria_p;
end if;

if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
	cd_plano_w	:= cd_plano_p;
end if;

select	coalesce(max(ie_tipo_convenio),0)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio = cd_convenio_p;

if (coalesce(nr_seq_exame_p,0) > 0) then
	
	SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_p, cd_convenio_p, cd_categoria_w, coalesce(ie_tipo_atendimento_p,0), cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_proc_interno_p, null, null, cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_interno_aux_w) INTO STRICT cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_interno_aux_w;
	
end if;

cd_procedimento_w	:= coalesce(cd_procedimento_w, cd_procedimento_p);
ie_origem_proced_w	:= coalesce(ie_origem_proced_w, ie_origem_proced_p);

select	max(ie_classificacao)
into STRICT	ie_classificacao_w
from	procedimento
where	cd_procedimento	= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;

if (ie_classificacao_w = '1') and (ie_origem_proced_w <> 7) then
	SELECT * FROM define_preco_procedimento(
		cd_estabelecimento_p, cd_convenio_p, cd_categoria_w, clock_timestamp(), cd_procedimento_w, null, coalesce(ie_tipo_atendimento_p,0), null, null, null, null, nr_seq_exame_p, nr_seq_proc_interno_p, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_w;

	if (coalesce(vl_procedimento_w,0) = 0) then
		ds_retorno_w	:= 'N';
	end if;
elsif (ie_origem_proced_w = 7) and (ie_tipo_convenio_w = 3) then
	SELECT * FROM sus_define_preco_proced(
		clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_p, 1, vl_auxiliares_w, vl_custo_operacional_w, vl_medico_w, vl_materiais_w, vl_procedimento_w, vl_anestesista_w, qt_porte_anestesico_w, vl_pto_medico_w, vl_pto_materiais_w, vl_pto_auxiliares_w, dt_competencia_w) INTO STRICT vl_auxiliares_w, vl_custo_operacional_w, vl_medico_w, vl_materiais_w, vl_procedimento_w, vl_anestesista_w, qt_porte_anestesico_w, vl_pto_medico_w, vl_pto_materiais_w, vl_pto_auxiliares_w, dt_competencia_w;
		
	if (coalesce(vl_procedimento_w,0) = 0) then
		SELECT * FROM sus_define_preco_proced(
			clock_timestamp(), cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_p, 8, vl_auxiliares_w, vl_custo_operacional_w, vl_medico_w, vl_materiais_w, vl_anestesista_w, vl_procedimento_w, qt_porte_anestesico_w, vl_pto_medico_w, vl_pto_materiais_w, vl_pto_auxiliares_w, dt_competencia_w) INTO STRICT vl_auxiliares_w, vl_custo_operacional_w, vl_medico_w, vl_materiais_w, vl_anestesista_w, vl_procedimento_w, qt_porte_anestesico_w, vl_pto_medico_w, vl_pto_materiais_w, vl_pto_auxiliares_w, dt_competencia_w;
			
		if (coalesce(vl_procedimento_w,0) = 0) then
			ds_retorno_w	:= 'N';
		end if;
	end if;
else
	SELECT * FROM define_preco_servico(
		cd_estabelecimento_p, cd_convenio_p, cd_categoria_w, clock_timestamp(), cd_procedimento_w, null, coalesce(ie_tipo_atendimento_p,0), null, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, null, vl_procedimento_w, nr_seq_ajuste_proc_w, null, 0, null, nr_seq_proc_interno_p, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_w, nr_seq_ajuste_proc_w;

	if (coalesce(vl_procedimento_w,0) = 0) then
		ds_retorno_w	:= 'N';
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proc_convenio ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text default null) FROM PUBLIC;

