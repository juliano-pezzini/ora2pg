-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_entra_pgto_compl (nr_seq_lote_pagto_p pls_lote_pagamento.nr_sequencia%type, nr_seq_evento_p pls_evento.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_tipo_prestador_p pls_prestador.nr_seq_tipo_prestador%type, nr_seq_classif_prestador_p pls_prestador.nr_seq_classificacao%type) RETURNS varchar AS $body$
DECLARE

/*
Edgar, 26/05/2014, criada esta function para retornas se os parâmetros passados integram ou não o lote complementar do pagamento de produção médica
Esta function deve ser aplicada somente sobre as ocorrências financeiras
*/
ie_retorno_w			varchar(255) := 'N';
ie_evento_w			varchar(255) := 'N';
ie_prestador_w			varchar(255) := 'N';
ie_classif_prestador_w		varchar(255) := 'N';
ie_tipo_prestador_w		varchar(255) := 'N';

c01 CURSOR(nr_seq_lote_pagto_cp	pls_lote_pgto_compl.nr_sequencia%type) FOR
SELECT	nr_seq_evento,
	nr_seq_prestador,
	nr_seq_classif_prestador,
	nr_seq_tipo_prestador
from	pls_lote_pgto_compl
where	nr_seq_lote		= nr_seq_lote_pagto_cp
and	coalesce(nr_seq_protocolo::text, '') = '' 				-- Estes campos com tratamento "IS NULL", devem tratar somente a produção médica, e não os movimentos
and	coalesce(nr_protocolo_prestador::text, '') = ''
and	coalesce(nr_seq_conta::text, '') = ''
and	coalesce(ie_tipo_guia::text, '') = ''
and	coalesce(ie_tipo_despesa_proc::text, '') = ''
and	coalesce(ie_tipo_despesa_mat::text, '') = ''
and	coalesce(nr_seq_contrato::text, '') = ''
and	coalesce(nr_seq_plano::text, '') = ''
and	coalesce(nr_seq_grupo_contrato::text, '') = ''
and	coalesce(ie_conta_intercambio, 'S') = 'S';

BEGIN

for	r_c01_w in c01(nr_seq_lote_pagto_p) loop
	if (coalesce(r_c01_w.nr_seq_evento, coalesce(nr_seq_evento_p,0)) = coalesce(nr_seq_evento_p,0)) then
		ie_evento_w		:= 'S';
	end if;
	if (coalesce(r_c01_w.nr_seq_prestador, coalesce(nr_seq_prestador_p,0)) = coalesce(nr_seq_prestador_p,0)) then
		ie_prestador_w		:= 'S';
	end if;
	if (coalesce(r_c01_w.nr_seq_classif_prestador, coalesce(nr_seq_classif_prestador_p,0)) = coalesce(nr_seq_classif_prestador_p,0)) then
		ie_classif_prestador_w	:= 'S';
	end if;
	if (coalesce(r_c01_w.nr_seq_tipo_prestador, coalesce(nr_seq_tipo_prestador_p,0)) = coalesce(nr_seq_tipo_prestador_p,0)) then
		ie_tipo_prestador_w	:= 'S';
	end if;
end loop;

if (ie_evento_w = 'S') and (ie_prestador_w = 'S') and (ie_classif_prestador_w = 'S') and (ie_tipo_prestador_w = 'S') then
	ie_retorno_w	:= 'S';
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_entra_pgto_compl (nr_seq_lote_pagto_p pls_lote_pagamento.nr_sequencia%type, nr_seq_evento_p pls_evento.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_tipo_prestador_p pls_prestador.nr_seq_tipo_prestador%type, nr_seq_classif_prestador_p pls_prestador.nr_seq_classificacao%type) FROM PUBLIC;

