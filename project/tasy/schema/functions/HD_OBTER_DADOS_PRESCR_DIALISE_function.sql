-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hd_obter_dados_prescr_dialise ( cd_pessoa_fisica_p text, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


qt_fluxo_sangue_w		double precision;
ds_ultrafiltracao_w		varchar(80);
ds_duracao_w			varchar(80);
ds_heparina_w			varchar(80);
ds_protocolo_w			varchar(80);
ds_fluxo_dialisado_w		varchar(80);
ds_retorno_w			varchar(255);
nr_prescricao_w			bigint;
nr_seq_material_w		bigint;
nr_seq_solucao_w		bigint;
nr_seq_protocolo_w		bigint;
ds_heparina_retorno_w		varchar(255);
ds_duracao_nova_w		varchar(80);
ds_tipo_solucao_w		varchar(100);
ds_agulha_w			varchar(255);
nr_seq_mod_dialisador_w		bigint;
qt_ultrafiltracao_w 	double precision;
ds_perfil_w			HD_PERFIL_ULTRA.DS_PERFIL%TYPE;
ie_tipo_hemodialise_w    varchar(10);
qt_sodio_w               bigint;
qt_bicarbonato_w         bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	prescr_material
	where	nr_prescricao		= nr_prescricao_w
	and 	ie_agrupador 		= 14
	and	ie_tipo_medic_hd	= 'D'
	and	coalesce(nr_sequencia_solucao::text, '') = ''
	and 	coalesce(nr_sequencia_proc::text, '') = ''
	and 	coalesce(nr_sequencia_dieta::text, '') = ''
	and 	coalesce(nr_sequencia_diluicao::text, '') = ''
	and 	coalesce(ie_suspenso,'N') 		= 'N';


BEGIN

/* verifica se tem alguma prescricao de emergencia */

select	coalesce(max(nr_prescricao),0)
into STRICT	nr_prescricao_w
from	prescr_medica
where	ie_hemodialise		= 'E'
and	trunc(dt_prescricao)	= trunc(clock_timestamp())
and	cd_pessoa_fisica	= cd_pessoa_fisica_p
and	(coalesce(dt_liberacao_medico, dt_liberacao) IS NOT NULL AND (coalesce(dt_liberacao_medico, dt_liberacao))::text <> '')
and	coalesce(dt_fim_prescricao::text, '') = '';

/* caso seja maior igual a zero, verifica se tem uma prescricao normal */

if (nr_prescricao_w = 0) then

	/* verifica se tem alguma prescricao normal de hemodialise */

	select	coalesce(max(nr_prescricao),0)
	into STRICT	nr_prescricao_w
	from	prescr_medica
	where	ie_hemodialise		= 'S'
	and	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	(coalesce(dt_liberacao_medico, dt_liberacao) IS NOT NULL AND (coalesce(dt_liberacao_medico, dt_liberacao))::text <> '')
	and	coalesce(dt_fim_prescricao::text, '') = '';

end if;

select	coalesce(max(nr_prescricao),0)
into STRICT	nr_prescricao_w
from	prescr_medica
where	ie_hemodialise		= 'S'
and	cd_pessoa_fisica	= cd_pessoa_fisica_p
and	(coalesce(dt_liberacao_medico, dt_liberacao) IS NOT NULL AND (coalesce(dt_liberacao_medico, dt_liberacao))::text <> '')
and	coalesce(dt_fim_prescricao::text, '') = '';

/* se tem alguma prescricao, verifica os dados */

if (nr_prescricao_w > 0) then
	begin
	select	qt_fluxo_sangue,
		qt_hora_sessao || ' : ' || qt_min_sessao,
		qt_hora_sessao || 'h ' || qt_min_sessao || 'm',
		substr(obter_valor_dominio(1936, ie_ultrafiltracao),1,80),
		substr(HD_obter_desc_tipo_agulha(NR_SEQ_TIPO_AGULHA) || ' \ ' || HD_obter_desc_diametro_agulha(NR_SEQ_DIAMETRO_AGULHA),1,255),
		nr_seq_mod_dialisador,
		qt_ultrafiltracao,
		substr(obter_desc_perfil_ultra(nr_seq_ultra),1,255),
		ie_tipo_hemodialise,
		qt_sodio,
		qt_bicarbonato
	into STRICT	qt_fluxo_sangue_w,
		ds_duracao_w,
		ds_duracao_nova_w,
		ds_ultrafiltracao_w,
		ds_agulha_w,
		nr_seq_mod_dialisador_w,
		qt_ultrafiltracao_w,
		ds_perfil_w,
		ie_tipo_hemodialise_w,
		qt_sodio_w,
		qt_bicarbonato_w
	from	hd_prescricao
	where	nr_prescricao	= nr_prescricao_w;
	exception
		when others then
		qt_fluxo_sangue_w	:= null;
		ds_duracao_w		:= '';
		ds_ultrafiltracao_w	:= '';
	end;

	/* verifica se tem alguma heparina prescrita */

	ds_heparina_retorno_w	:= '';
	open c01;
	loop
	fetch c01 into
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		/* pega os dados da heparina */

		select	qt_dose || ' ' || cd_unidade_medida_dose
		into STRICT	ds_heparina_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_w
		and	nr_sequencia	= nr_seq_material_w;
		/* retorna */

		ds_heparina_retorno_w	:= ds_heparina_retorno_w||ds_heparina_w||', ';
		end;
	end loop;
	close c01;

	/* busca o ultimo protocolo (solucao) e fluxo dialisado da prescricao */

	select	coalesce(max(nr_seq_solucao),0)
	into STRICT	nr_seq_solucao_w
	from	prescr_solucao
	where	nr_prescricao		= nr_prescricao_w
	and 	coalesce(ie_suspenso,'N') = 'N';

	if (nr_seq_solucao_w > 0) then

		select	max(nr_seq_protocolo),
			max(substr(qt_solucao_total || ' ' || obter_valor_dominio(1954,ie_unid_vel_inf),1,30)),
			max(substr(obter_valor_dominio(1935, ie_tipo_solucao),1,100))
		into STRICT	nr_seq_protocolo_w,
			ds_fluxo_dialisado_w,
			ds_tipo_solucao_w
		from	prescr_solucao
		where 	nr_prescricao		= nr_prescricao_w
		and	nr_seq_solucao		= nr_seq_solucao_w;

		select	max(ds_npt)
		into STRICT	ds_protocolo_w
		from	protocolo_npt
		where	nr_sequencia		= nr_seq_protocolo_w;

	end if;

end if;

if (ie_opcao_p = 'FS') then
	ds_retorno_w	:= qt_fluxo_sangue_w;
elsif (ie_opcao_p = 'DR') then
	ds_retorno_w	:= ds_duracao_w;
elsif (ie_opcao_p = 'UF') then
	ds_retorno_w	:= ds_ultrafiltracao_w;
elsif (ie_opcao_p = 'HP') then
	ds_retorno_w	:= ds_heparina_retorno_w;
elsif (ie_opcao_p = 'PR') then
	ds_retorno_w	:= ds_protocolo_w;
elsif (ie_opcao_p = 'FD') then
	ds_retorno_w	:= ds_fluxo_dialisado_w;
elsif (ie_opcao_p = 'DRN') then
	ds_retorno_w	:= ds_duracao_nova_w;
elsif (ie_opcao_p = 'TS') then
	ds_retorno_w	:= ds_tipo_solucao_w;
elsif (ie_opcao_p = 'DA') then
	ds_retorno_w	:= ds_agulha_w;
elsif (ie_opcao_p = 'MD') then
	ds_retorno_W	:= nr_seq_mod_dialisador_w;
elsif (ie_opcao_p = 'QU') then
	ds_retorno_w	:= qt_ultrafiltracao_w;
elsif (ie_opcao_p = 'SU') then
	ds_retorno_w 	:= ds_perfil_w;
elsif (ie_opcao_p = 'HE') then
	ds_retorno_w := ie_tipo_hemodialise_w;
elsif (ie_opcao_p = 'SO') then
	ds_retorno_w := qt_sodio_w;
elsif (ie_opcao_p = 'BI') then
	ds_retorno_w := qt_bicarbonato_w;
end if;

return ds_retorno_w;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hd_obter_dados_prescr_dialise ( cd_pessoa_fisica_p text, ie_opcao_p text) FROM PUBLIC;

