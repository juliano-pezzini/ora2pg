-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_dieta_atend (nr_atendimento_p bigint, ie_opcao_p text, cd_refeicao_p text default null, ie_buscar_prescr_p text default 'N') RETURNS varchar AS $body$
DECLARE


cd_dieta_w	            bigint;
nm_dieta_w	            varchar(80);
nm_refeicao_w	        varchar(254);
ds_retorno_w	        varchar(2000);
ds_retorno_2_w	        varchar(2000);
ds_observacao_w	        varchar(2000);
nr_sequencia_w	        bigint;
ds_dia_atual_w          varchar(10);
cd_setor_atendimento_w  bigint;
nr_prescr_w 			bigint;
nr_prescricoes_w 		varchar(150);
indexV 					smallint;
qt_controle_w           smallint;
dt_suspensao_w          timestamp;
ds_servico_w            varchar(60);



BEGIN

select	max(nr_sequencia)
into STRICT	nr_sequencia_w
from	mapa_dieta
where	nr_atendimento	 =	nr_atendimento_p
and	ie_destino_dieta =	'P'
and	cd_refeicao	 = coalesce(cd_refeicao_p, cd_refeicao);

if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
	select	a.cd_dieta,
		b.nm_dieta,
		c.ds_valor_dominio,
		substr(a.ds_observacao,1,2000)
	into STRICT	cd_dieta_w,
		nm_dieta_w,
		nm_refeicao_w,
		ds_observacao_w
	FROM valor_dominio_v c, mapa_dieta a
LEFT OUTER JOIN dieta b ON (a.cd_dieta = b.cd_dieta)
WHERE a.nr_sequencia		=	nr_sequencia_w  and c.cd_dominio		= 99 and c.vl_dominio		= a.cd_refeicao;
end if;

if (ie_opcao_p = 'NDR') then
	ds_retorno_w	:=	nm_dieta_w || ' (' || nm_refeicao_w || ') ';
elsif (ie_opcao_p = 'OBS') then
	ds_retorno_w	:=	ds_observacao_w;
end if;

-- Realizar a busca do mapa_dieta para pacientes antigos. Caso não traga resultado (Novos pacientes) será buscado da prescrição
if (ie_opcao_p = 'NDR') and (ie_buscar_prescr_p = 'S') then

	ds_retorno_2_w := '';
	cd_setor_atendimento_w := OBTER_SETOR_ATENDIMENTO(nr_atendimento_p);
	ds_dia_atual_w := to_char(clock_timestamp(), 'dd/mm/yyyy');

	select max(b.nr_sequencia), max(substr(obter_prescricao_servicos_rep(b.nr_sequencia),1,150)), max(dt_suspensao), max(a.ds_servico)
	into STRICT   nr_sequencia_w, nr_prescricoes_w, dt_suspensao_w, ds_servico_w
	from   nut_atend_serv_dia b, nut_servico a
	where  b.nr_atendimento = nr_atendimento_p
	and    b.dt_servico between inicio_dia(clock_timestamp()) and fim_dia(clock_timestamp())
	and    b.nr_seq_servico = a.nr_sequencia
	and (exists (SELECT 1 from nut_servico_horario c where c.nr_seq_servico = b.nr_seq_servico
					and coalesce(c.cd_setor_atendimento, cd_setor_atendimento_w) = cd_setor_atendimento_w
					and clock_timestamp() between to_date(ds_dia_atual_w||' '||to_char(ds_horarios_html,'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
					and to_date(ds_dia_atual_w||' '||to_char(ds_horarios_fim_html,'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss'))
	or not exists (select 1 from nut_servico_horario c where c.nr_seq_servico = b.nr_seq_servico));

	if (dt_suspensao_w IS NOT NULL AND dt_suspensao_w::text <> '') then
		ds_retorno_2_w := OBTER_DESC_EXPRESSAO(298991,'Suspenso') || ' (' ||ds_servico_w|| ') ';
	else

		qt_controle_w := 0;

		while(length(nr_prescricoes_w) > 0) and (qt_controle_w < 10) loop

			indexV :=  position(',' in nr_prescricoes_w);
			if (indexV = 0) then
				indexV := length(nr_prescricoes_w) + 1;
			end if;

			nr_prescr_w := substr(nr_prescricoes_w, 1, indexV -1); --Pegar primeira prescrição
			nr_prescricoes_w := substr(nr_prescricoes_w, indexV +1, length(nr_prescricoes_w));

			select max(e.nm_dieta), max(b.dt_suspensao)
			into STRICT   ds_retorno_2_w, dt_suspensao_w
			from   prescr_dieta b, dieta e
			where  b.nr_prescricao = nr_prescr_w
			and    b.cd_dieta = e.cd_dieta;

			if (ds_retorno_2_w IS NOT NULL AND ds_retorno_2_w::text <> '') and (trim(both ds_retorno_2_w) <> '') then
				exit;
			elsif (dt_suspensao_w IS NOT NULL AND dt_suspensao_w::text <> '') then
				ds_retorno_2_w := OBTER_DESC_EXPRESSAO(298991,'Suspenso');
			end if;
			qt_controle_w := qt_controle_w + 1;
		end loop;

		ds_retorno_2_w := ds_retorno_2_w || ' ('||ds_servico_w || ') ';

	end if;

	if (length(ds_retorno_2_w) > 0) and (trim(both ds_retorno_2_w) <> '()') then
		ds_retorno_w := ds_retorno_2_w;
	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_dieta_atend (nr_atendimento_p bigint, ie_opcao_p text, cd_refeicao_p text default null, ie_buscar_prescr_p text default 'N') FROM PUBLIC;

