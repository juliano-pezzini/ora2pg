-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_mat_proced_regra_sum ( cd_material_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_procedimento_p bigint, nr_proc_interno_p bigint, ie_origem_proced_p text, cd_area_procedimento_p bigint, cd_grupo_proc_p bigint, cd_especialidade_p bigint) RETURNS varchar AS $body$
DECLARE


qt_regra_w		bigint := 0;
ie_existe_regra_w	varchar(1) := 'S';
ie_retorno_w		varchar(1) := 'S';


BEGIN
if (coalesce(cd_material_p,0) > 0) or (coalesce(cd_grupo_material_p,0) > 0) or (coalesce(cd_subgrupo_material_p,0) > 0) or (coalesce(cd_classe_material_p,0) > 0) then

	select	coalesce(max('S'),'N')
	into STRICT	ie_existe_regra_w
	from	sumario_alta_regra
	where	cd_material = cd_material_p
	or	cd_grupo_material = cd_grupo_material_p
	or	cd_subgrupo_material = cd_subgrupo_material_p
	or	cd_classe_material = cd_classe_material_p;

	if (ie_existe_regra_w = 'S') then
		select	count(*)
		into STRICT	qt_regra_w
		from	sumario_alta_regra
		where	coalesce(cd_material,cd_material_p) = cd_material_p
		and	coalesce(cd_grupo_material,cd_grupo_material_p) = cd_grupo_material_p
		and	coalesce(cd_subgrupo_material,cd_subgrupo_material_p) = cd_subgrupo_material_p
		and	coalesce(cd_classe_material,cd_classe_material_p) = cd_classe_material_p
		and	coalesce(cd_material,coalesce(cd_grupo_material,coalesce(cd_subgrupo_material,coalesce(cd_classe_material,0)))) > 0
		and	coalesce(ie_incluir,'N') = 'S';
	end if;

elsif (coalesce(cd_procedimento_p,0) > 0) or (coalesce(nr_proc_interno_p,0) > 0) or (coalesce(ie_origem_proced_p,0) > 0) or (coalesce(cd_area_procedimento_p,0) > 0) or (coalesce(cd_grupo_proc_p,0) > 0) or (coalesce(cd_especialidade_p,0) > 0) then

	select	coalesce(max('S'),'N')
	into STRICT	ie_existe_regra_w
	from	sumario_alta_regra
	where	cd_procedimento = cd_procedimento_p
	or	nr_proc_interno = nr_proc_interno_p
	or	ie_origem_proced = ie_origem_proced_p
	or	cd_area_procedimento = cd_area_procedimento_p
	or	cd_grupo_proc = cd_grupo_proc_p
	or	cd_especialidade = cd_especialidade_p;

	if (ie_existe_regra_w = 'S') then
		select	count(*)
		into STRICT	qt_regra_w
		from	sumario_alta_regra
		where	coalesce(cd_procedimento,cd_procedimento_p) = cd_procedimento_p
		and	coalesce(nr_proc_interno,nr_proc_interno_p) = nr_proc_interno_p
		and	coalesce(ie_origem_proced,ie_origem_proced_p) = ie_origem_proced_p
		and	coalesce(cd_area_procedimento,cd_area_procedimento_p) = cd_area_procedimento_p
		and	coalesce(cd_grupo_proc,cd_grupo_proc_p) = cd_grupo_proc_p
		and	coalesce(cd_especialidade,cd_especialidade_p) = cd_especialidade_p
		and	coalesce(cd_procedimento,coalesce(nr_proc_interno,coalesce(ie_origem_proced,coalesce(cd_area_procedimento,coalesce(cd_grupo_proc,coalesce(cd_especialidade,0)))))) > 0
		and	coalesce(cd_material,coalesce(cd_grupo_material,coalesce(cd_subgrupo_material,coalesce(cd_classe_material,0)))) = 0
		and	coalesce(ie_incluir,'N') = 'S';
	end if;
end if;

if	((qt_regra_w > 0) or (ie_existe_regra_w = 'N')) then
	ie_retorno_w := 'S';
else
	ie_retorno_w := 'N';
end if;

return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_mat_proced_regra_sum ( cd_material_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_procedimento_p bigint, nr_proc_interno_p bigint, ie_origem_proced_p text, cd_area_procedimento_p bigint, cd_grupo_proc_p bigint, cd_especialidade_p bigint) FROM PUBLIC;

