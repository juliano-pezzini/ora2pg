-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_horario_nao_adm ( nr_prescricao_p text,nr_seq_prescr_p text, ds_horarios_p text,hr_prim_horario_p text) RETURNS varchar AS $body$
DECLARE

/*ds_horario_aberto_w VARCHAR2(5)   := '';
ds_horarios_pad     VARCHAR2(2000) := '';
aux                 VARCHAR2(1);
i                   INTEGER       := 1;
contador            INTEGER       := 0;
qt_dose             INTEGER       := 0;
qt_dose_adm         INTEGER       := 0;
nr_adm_medic        INTEGER       := 0; /*Armazena a quantidade de vezes que já foi adm o medicamento
achou_hr            BOOLEAN       := false;
ie_prescr_valida    BOOLEAN          := true;
param_hr            VARCHAR2(1)   := '1'; /* Indica que a variacao de tempo é de uma hora +/- 30 min
dt_min              DATE;
dt_max              DATE;
dt_atual            DATE;
dt_lib_prescr       DATE;
ds_validos_w        VARCHAR2(20)    := '1234567890:';
max_hora_dia        NUMBER(10,2)    := 0;
nr_dif_dias         INTEGER         := 0;
nr_dia_atual        INTEGER         := 0;
nr_horas_validade   INTEGER         := 0;
pos_ini             INTEGER         := 0;
pos_end             INTEGER;
pos_cor             INTEGER         := 0;
ie_encerra          BOOLEAN         :=false;
vl_parametro        VARCHAR(255);*/
BEGIN
   /*SELECT  padroniza_horario_prescr(ds_horarios_p,hr_prim_horario_p),
           nvl(dt_liberacao,dt_liberacao_medico) dt_liberacao,
           nr_horas_validade
   INTO    ds_horarios_pad,
           dt_lib_prescr,
           nr_horas_validade
   FROM    prescr_medica
   WHERE   nr_prescricao = nr_prescricao_p
   GROUP BY        nvl(dt_liberacao,dt_liberacao_medico),nr_horas_validade;
   IF ( dt_lib_prescr is not null) THEN
        IF ( (dt_lib_prescr + (nr_horas_validade / 24)) > sysdate) THEN
           dt_lib_prescr  := TO_DATE(TRUNC(dt_lib_prescr) || ' ' ||  TO_CHAR(SYSDATE,'hh24:mi'), 'dd/mm/yy hh24:mi');
   	ELSE
           ie_prescr_valida := false;
	END IF;
   ELSE
      obter_Parametro(36,18,null,vl_parametro);
   END IF;
   IF ( ie_prescr_valida ) THEN
           pos_end := LENGTH(ds_horarios_pad);
   nr_dif_dias := trunc(sysdate - dt_lib_prescr);
   IF(ds_horarios_pad is not null) THEN
      FOR i IN 1..LENGTH(ds_horarios_pad) LOOP
           IF(not ie_encerra) THEN
                   aux     := SUBSTR(ds_horarios_pad, i, 1);
                   IF( (aux <> ' ') or (i = LENGTH(ds_horarios_pad))) THEN
                           IF( aux = ':' ) THEN
                                   ds_horario_aberto_w := ds_horario_aberto_w || '.';
                           ELSE
                                   IF( aux <> 'A') THEN
                                           ds_horario_aberto_w := ds_horario_aberto_w || aux;
                                   END IF;
                           END IF;
                   END IF;
                   IF( (aux = ' ') or (i = LENGTH(ds_horarios_pad))) THEN
                           IF(somente_numero(ds_horario_aberto_w) > max_hora_dia) THEN
                                   max_hora_dia      := somente_numero(ds_horario_aberto_w);
                                   /*pos_end := (i+1);
                                   pos_end := (i - pos_ini) + 1;
                           ELSE
                                   IF( nr_dia_atual = nr_dif_dias ) THEN
                                           ie_encerra := true;
                                   ELSE
                                           max_hora_dia := somente_numero(ds_horario_aberto_w);
                                           nr_dia_atual := nr_dia_atual + 1;
                                           pos_ini          := pos_end + pos_ini;
                                           pos_end      := ( i - pos_ini) + 1;
                                   END IF;
                           END IF;
                           ds_horario_aberto_w := '';
                   END IF;
           END IF;
       END LOOP;
               IF( nr_dia_atual < nr_dif_dias) THEN
           ds_horarios_pad := '';
       END IF;
       ds_horarios_pad := SUBSTR(ds_horarios_pad,pos_ini,pos_end);
       END IF;
       IF( ds_horarios_pad is not null) THEN
	   obter_Parametro(52,1,null,vl_parametro);
           dt_min := dt_lib_prescr - (1/1440*somente_numero(vl_parametro)) + nr_dif_dias;
	   obter_Parametro(52,2,null,vl_parametro);
           dt_max := dt_lib_prescr + (1/1440*somente_numero(vl_parametro)) + nr_dif_dias;
	FOR i IN 1..LENGTH(ds_horarios_pad) LOOP
             IF( not achou_hr ) THEN
                     aux     := SUBSTR(ds_horarios_pad, i, 1);
                     IF (INSTR(ds_validos_w, aux ) > 0) THEN
                             ds_horario_aberto_w := ds_horario_aberto_w || aux;
                     END IF;
                     IF( ( aux = ' ') or (i = LENGTH(ds_horarios_pad))) THEN
                             dt_atual := TO_DATE((TRUNC(SYSDATE)|| ' ' || ds_horario_aberto_w), 'dd/mm/yy hh24:mi');
                             SELECT   count(*)
                             INTO     contador
                             FROM       dual
                             WHERE    dt_min  <= dt_atual
                             AND      dt_max  >= dt_atual;
                             IF( contador = 1 ) THEN
                                     contador := 0;
				     SELECT   nvl(sum(a.qt_medic),0)
				     INTO     qt_dose_adm
				     FROM     prescr_medic_adm a
				     WHERE    a.nr_prescricao            = nr_prescricao_p
				     AND      a.nr_seq_prescricao        = nr_seq_prescr_p
				     AND      a.ds_horario               = ds_horario_aberto_w;
				     SELECT   b.qt_dose
				     INTO     qt_dose
				     FROM     prescr_material b
				     WHERE    b.nr_prescricao            = nr_prescricao_p
				     AND      b.nr_sequencia             = nr_seq_prescr_p;
                                     IF( qt_dose_adm < qt_dose ) THEN
                                             achou_hr := true;
                                     ELSE
                                             ds_horario_aberto_w := '';
                                             aux                       := '';
                                     END IF;
                             ELSE
                                     ds_horario_aberto_w := '';
                             END IF;
                     END IF;
             END IF;
       END LOOP;
          END IF;
          IF( ds_horarios_p = 'ACM' or ds_horarios_p = 'SN' ) THEN
        ds_horario_aberto_w := ds_horarios_p;
          END IF;
     END IF;
     RETURN ds_horario_aberto_w;*/
	 return '';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_horario_nao_adm ( nr_prescricao_p text,nr_seq_prescr_p text, ds_horarios_p text,hr_prim_horario_p text) FROM PUBLIC;

