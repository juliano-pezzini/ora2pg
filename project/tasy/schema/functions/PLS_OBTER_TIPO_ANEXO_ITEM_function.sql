-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_tipo_anexo_item ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_tipo_atendimento_p text) RETURNS varchar AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Retornar o tipo de anexo que esta sendo gerado para os procedimentos e materiais
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x  ] Tasy (Delphi/Java) [   x ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_anexo_w		pls_regra_anexo_guia.ie_tipo_anexo%type := null;
ie_tipo_atendimento_w	pls_guia_plano.ie_tipo_atend_tiss%type;


BEGIN

ie_tipo_atendimento_w := ie_tipo_atendimento_p;

if (coalesce(ie_tipo_atendimento_w::text, '') = '') then
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
		select	ie_tipo_atend_tiss
		into STRICT	ie_tipo_atendimento_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_p;
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
		select	ie_tipo_atendimento
		into STRICT	ie_tipo_atendimento_w
		from	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_p;
	end if;
end if;

--Se for lançamento de material busca primeiramente a regra somente para o material.
--Se for procedimento verifica as regras de procedimentos
if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
	begin
		with query_tmp as (
			select *
			from (	select 	a.ie_tipo_anexo,
				b.nr_sequencia,
				1 ie_ordem
			from	pls_regra_anexo_guia a,
				pls_regra_anexo_guia_itens b
			where	b.nr_seq_regra_anexo_guia = a.nr_sequencia
			and	a.dt_inicio_vigencia <= trunc(clock_timestamp())
			and (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia > trunc(clock_timestamp()))
			and	b.ie_situacao = 'A'
			and	coalesce(b.cd_procedimento::text, '') = ''
			and	((b.nr_seq_material = nr_seq_material_p and coalesce(ie_tipo_atend_tiss::text, '') = '') or (b.nr_seq_material = nr_seq_material_p and ie_tipo_atend_tiss = ie_tipo_atendimento_w))
			and	coalesce(b.nr_seq_estrut_mat::text, '') = ''
			
union

			select 	a.ie_tipo_anexo,
				b.nr_sequencia,
				2 ie_ordem
			from	pls_regra_anexo_guia a,
				pls_regra_anexo_guia_itens b
			where	b.nr_seq_regra_anexo_guia = a.nr_sequencia
			and	a.dt_inicio_vigencia <= trunc(clock_timestamp())
			and (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia > trunc(clock_timestamp()))
			and	b.ie_situacao = 'A'
			and	coalesce(b.cd_procedimento::text, '') = ''
			and	coalesce(b.nr_seq_material::text, '') = ''
			and	exists ( select 1
					 from pls_estrutura_material_v es
					 where es.nr_seq_estrutura  = b.nr_seq_estrut_mat
					 and	es.nr_seq_material  = nr_seq_material_p)) alias22
			order by ie_ordem, nr_sequencia desc
		)
		select	ie_tipo_anexo
		into STRICT	ie_tipo_anexo_w
		from	query_tmp LIMIT 1;
	exception
	when others then
		ie_tipo_anexo_w := null;
	end;

else
	begin
		with query_tmp as (
			select 	a.ie_tipo_anexo
			from	pls_regra_anexo_guia a,
				pls_regra_anexo_guia_itens b
			where	b.nr_seq_regra_anexo_guia = a.nr_sequencia
			and	a.dt_inicio_vigencia <= trunc(clock_timestamp())
			and (coalesce(a.dt_fim_vigencia::text, '') = '' or a.dt_fim_vigencia > trunc(clock_timestamp()))
			and	b.ie_situacao = 'A'
			and	coalesce(b.nr_seq_material::text, '') = ''
			and	((b.cd_procedimento  = cd_procedimento_p and b.ie_origem_proced = ie_origem_proced_p and coalesce(ie_tipo_atend_tiss::text, '') = '') or (b.cd_procedimento  = cd_procedimento_p and b.ie_origem_proced = ie_origem_proced_p and ie_tipo_atend_tiss = ie_tipo_atendimento_w))
			order by b.nr_sequencia desc
		)
		select	ie_tipo_anexo
		into STRICT	ie_tipo_anexo_w
		from	query_tmp LIMIT 1;
	exception
	when others then
		ie_tipo_anexo_w := null;
	end;
end if;

return	ie_tipo_anexo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_tipo_anexo_item ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_tipo_atendimento_p text) FROM PUBLIC;

