-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_marcas_concat_aprovadas ( cd_material_p bigint, ie_opcao_p text, ie_quebra_linha_p text, ie_somente_aprovadas_p text) RETURNS varchar AS $body$
DECLARE


cd_material_w		integer;
ds_marca_w		varchar(120);
Resultado_w	 	varchar(2000);
Quebra_w		varchar(10) 	:= chr(13) || chr(10);
cd_referencia_w		varchar(80);
ds_marca_ref_w		varchar(2000);
qt_prioridade_w		integer;

/* Opções
D	- Descrição
D-	- Descrição separadas por -
D#	- Descrição separado por #
C	- Código
CD	- Código e Descrição
D;	- Descricao separado por ;
DR	- Descricao concatenado com a Referência
R	- Referência
D/	- Descrição separado por /
DP/	- Descrição e Prioridade separado por /
DOP	- Descrição ordenada pela prioridade crescente
*/
/* Function duplicada a partir da function 'obter_marcas_concatenadas'. Alterada para trazer apenas as marcas aprovadas. Function original não alterada devido a utilização em outros locais.*/

c01 CURSOR FOR
SELECT	a.cd_material,
	d.ds_marca,
	c.cd_referencia,
	substr(CASE WHEN c.cd_referencia='' THEN d.ds_marca  ELSE d.ds_marca || ' (' || c.cd_referencia || ')' END ,1,2000) ds_marca_ref,
	c.qt_prioridade
from	material a,
	material_marca c,
	marca d
where	a.cd_material	= c.cd_material
and	c.nr_sequencia	= d.nr_sequencia
and	coalesce(c.ie_situacao,'A') = 'A'
and	a.cd_material	= cd_material_p
and (ie_somente_aprovadas_p = 'N' or (ie_somente_aprovadas_p = 'S' and obter_tipo_status_aval_marca(c.nr_seq_status_aval) = 'A'))
order by	coalesce(c.qt_prioridade, -9999) desc,
	ds_marca;


BEGIN

if (coalesce(ie_quebra_Linha_p,'N') <> 'S') then
	quebra_w		:= '  ';
end if;

open c01;
loop
fetch c01 into
	cd_material_w,
	ds_marca_w,
	cd_referencia_w,
	ds_marca_ref_w,
	qt_prioridade_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_opcao_p = 'CD') then
		Resultado_w	:=	Resultado_w || cd_material_w || ' - ' || ds_marca_w || quebra_w;
	elsif (ie_opcao_p = 'D') then
		Resultado_w	:=	Resultado_w || ds_marca_w || quebra_w;
	elsif (ie_opcao_p = 'D#') then
		if (coalesce(Resultado_w::text, '') = '') then
			Resultado_w	:=	Resultado_w || ds_marca_w;
		else
			Resultado_w	:=	Resultado_w || '#' || ds_marca_w;
		end if;
	elsif (ie_opcao_p = 'DP/') then
		if (coalesce(Resultado_w::text, '') = '') then
			if (coalesce(qt_prioridade_w::text, '') = '') then
				Resultado_w	:=	Resultado_w || ds_marca_w;
			else
				Resultado_w	:=	Resultado_w || ds_marca_w || ' ' || qt_prioridade_w;
			end if;
		else
			if (coalesce(qt_prioridade_w::text, '') = '') then
				Resultado_w	:=	Resultado_w || ' / ' || ds_marca_w;
			else
				Resultado_w	:=	Resultado_w || ' / ' || ds_marca_w || ' ' || qt_prioridade_w;
			end if;
		end if;
	elsif (ie_opcao_p = 'D-') then
		if (coalesce(Resultado_w::text, '') = '') then
			Resultado_w	:=	Resultado_w || ds_marca_w;
		else
			Resultado_w	:=	Resultado_w || ' - ' || ds_marca_w;
		end if;
	elsif (ie_opcao_p = 'D;') then
		if (coalesce(Resultado_w::text, '') = '') then
			Resultado_w	:=	Resultado_w || ds_marca_w;
		else
			Resultado_w	:=	Resultado_w || '; ' || ds_marca_w;
		end if;
	elsif (ie_opcao_p = 'D/') then
		if (coalesce(Resultado_w::text, '') = '') then
			Resultado_w	:=	Resultado_w || ds_marca_w;
		else
			Resultado_w	:=	Resultado_w || '/' || ds_marca_w;
		end if;
	elsif (ie_opcao_p = 'DR') then
		if (coalesce(Resultado_w::text, '') = '') then
			Resultado_w	:=	Resultado_w || ds_marca_ref_w;
		else
			Resultado_w	:=	Resultado_w || '; ' || ds_marca_ref_w;
		end if;
	elsif (ie_opcao_p = 'C') then
		Resultado_w	:=	Resultado_w || cd_material_w || quebra_w;
	elsif (ie_opcao_p = 'R') then
		Resultado_w	:= 	cd_referencia_w;
	elsif (ie_opcao_p = 'DOP') then
		if (qt_prioridade_w IS NOT NULL AND qt_prioridade_w::text <> '') then
			Resultado_w	:=	ds_marca_w || quebra_w || Resultado_w;
		else
			Resultado_w	:=	Resultado_w || ds_marca_w || quebra_w;
		end if;
	end if;
	end;
end loop;

return resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_marcas_concat_aprovadas ( cd_material_p bigint, ie_opcao_p text, ie_quebra_linha_p text, ie_somente_aprovadas_p text) FROM PUBLIC;

