-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tre_obter_se_status_pac (nr_seq_evento_p bigint, ie_status_paciente_p text) RETURNS varchar AS $body$
DECLARE


ie_retorno_w	varchar(1);


BEGIN

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END  ie_possui_status
INTO STRICT	ie_retorno_w
FROM
	(SELECT  CASE WHEN TRUNC(coalesce(a.dt_inicio_real,a.dt_inicio))+ROWNUM=TRUNC(coalesce(a.dt_inicio_real,a.dt_inicio))+1 THEN TRUNC(coalesce(a.dt_inicio_real,a.dt_inicio))  ELSE TRUNC(coalesce(a.dt_inicio_real,a.dt_inicio))+ROWNUM-1 END  dt_registro
	FROM	tre_evento a,
	      tabela_sistema b WHERE   a.nr_sequencia = nr_seq_evento_p LIMIT ((SELECT (TRUNC(coalesce(a.dt_fim_real,a.dt_fim)) - TRUNC(coalesce(a.dt_inicio_real,a.dt_inicio)))+1
	FROM  tre_evento a
	WHERE  a.nr_sequencia = nr_seq_evento_p))) a,
	tre_agenda_turno b,
	tre_agenda c,
	tre_evento d,
	tre_inscrito e
WHERE  	b.nr_seq_agenda_tre = c.nr_sequencia
AND  	c.nr_sequencia = d.nr_seq_agenda
AND	e.nr_seq_evento = d.nr_sequencia
AND	tre_obter_dados_pac_dia(e.nr_sequencia,a.dt_registro,'SP') = ie_status_paciente_p
AND  	((OBTER_COD_DIA_SEMANA(a.dt_registro) = b.ie_dia_semana) OR (b.ie_dia_semana = 9 AND OBTER_COD_DIA_SEMANA(a.dt_registro) NOT IN (1,7)))
AND  	d.nr_sequencia = nr_seq_evento_p
AND  	NOT EXISTS (	SELECT  1
			FROM    TRE_ALTERACAO_DIA_AULA x
			WHERE   x.nr_seq_agenda = c.nr_sequencia
			AND     x.ie_acao = 'C'
			AND     TRUNC(DT_ALTERACAO) = TRUNC(a.dt_registro))
AND		((a.dt_registro BETWEEN b.dt_inicio_vigencia AND fim_dia(b.dt_fim_vigencia)) OR ((coalesce(b.dt_inicio_vigencia::text, '') = '') OR (coalesce(b.dt_fim_vigencia::text, '') = '')));

IF (ie_retorno_w = 'N') THEN

	SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
	INTO STRICT	ie_retorno_w
	FROM	tre_alteracao_dia_aula	a,
		tre_agenda b,
		tre_evento c,
		tre_inscrito d
	WHERE	a.nr_seq_agenda = b.nr_sequencia
	AND	c.nr_seq_agenda = b.nr_sequencia
	AND	d.nr_seq_evento = c.nr_sequencia
	AND	tre_obter_dados_pac_dia(d.nr_sequencia,a.dt_alteracao,'SP') = ie_status_paciente_p
	AND	c.nr_sequencia = nr_seq_evento_p
	AND	ie_acao = 'A'
	AND  	NOT EXISTS (	SELECT  1
				FROM    TRE_ALTERACAO_DIA_AULA x
				WHERE   x.nr_seq_agenda = b.nr_sequencia
				AND     x.ie_acao = 'C'
				AND     TRUNC(x.DT_ALTERACAO) = TRUNC(a.dt_alteracao));

END IF;


RETURN	ie_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tre_obter_se_status_pac (nr_seq_evento_p bigint, ie_status_paciente_p text) FROM PUBLIC;

