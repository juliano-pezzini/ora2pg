-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_total_nascimento (dt_referencia_p text, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

 
qt_nasc_masculino_w		bigint;
qt_nasc_feminino_w		bigint;
qt_nasc_indefinido_w		bigint;
qt_nasc_total_w			bigint;

qt_reg_apgar_w			bigint;
qt_alojamento_w			bigint;
qt_rn_berc_w			bigint;
qt_uti_w			bigint;
qt_fm_pn_w			bigint;
qt_fm_pc_w			bigint;
qt_obito_pn_w			bigint;
qt_obito_pc_w			bigint;
qt_ind_total_w			bigint;

qt_gemelar_pn_w			bigint;
qt_gemelar_pc_w			bigint;
qt_gemelar_total_w		bigint;

dt_referencia_w			varchar(10);
qt_resultado_w			bigint;

/* 
NCM	- Quantidade nascidos Masculino 
NCF	- Quantidade nascidos Feminino 
NCI	- Quantidade nascidos Indefinido 
NCT	- Quantidade nascidos Total 
 
APG	- Quantidade registros escala APGAR 
ALO	- Quantidade mães Alojadas 
BER	- Quantidade rn berçário 
UTI	- Quantidade mães internadas na UTI 
FMN	- Quantidade feto Morto parto Normal 
FMC	- Quantidade feto Morto parto Cesaria 
OPN	- Quantidade obito parto Normal 
OPC	- Quantidade obito parto Cesaria 
ITO	- Quantidade indices Total 
 
GPN	- Quantidade gemelar parto Normal 
GPC	- Quantidade gemelar parto Cesaria 
GPT	- Quantidade gemelar parto Normal/Cesaria 
*/
 
 

BEGIN 
 
if	(dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '' AND ie_opcao_p IS NOT NULL AND ie_opcao_p::text <> '') then 
	if (length(dt_referencia_p) < 10) then 
		dt_referencia_w := substr('0' || dt_referencia_p,1,10);
	else 
		dt_referencia_w := substr(dt_referencia_p,1,10);
	end if;
	 
	if (ie_opcao_p = 'NCM') then 
	 
		select		sum(a.qt_total) 
		into STRICT		qt_nasc_masculino_w 
		from		eis_nascimento_v a 
		where		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w 
		and		a.ie_sexo = 'M';
		 
		qt_resultado_w := qt_nasc_masculino_w;
		 
	elsif (ie_opcao_p = 'NCF') then 
	 
		select		sum(a.qt_total) 
		into STRICT		qt_nasc_feminino_w 
		from		eis_nascimento_v a 
		where		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w 
		and		a.ie_sexo = 'F';
		 
		qt_resultado_w := qt_nasc_feminino_w;
		 
	elsif (ie_opcao_p = 'NCI') then 
	 
		select		sum(a.qt_total) 
		into STRICT		qt_nasc_indefinido_w 
		from		eis_nascimento_v a 
		where		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w 
		and		a.ie_sexo = 'I';
		 
		qt_resultado_w := qt_nasc_indefinido_w;
		 
	elsif (ie_opcao_p = 'NCT') then 
	 
		select		sum(a.qt_total) 
		into STRICT		qt_nasc_total_w 
		from		eis_nascimento_v a 
		where		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_nasc_total_w;
		 
	elsif (ie_opcao_p = 'APG') then 
		 
		select		count(a.nr_sequencia) qt_registros 
		into STRICT		qt_reg_apgar_w 
		from		escala_apgar a 
		where		a.ie_situacao = 'A' 
		and		to_char(a.dt_avaliacao,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_reg_apgar_w;
		 
	elsif (ie_opcao_p = 'BER') then 
		 
		select		count(*) 
		into STRICT		qt_rn_berc_w 
		from		nascimento a 
		where		a.ie_destino = 'B' 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_rn_berc_w;
		 
	elsif (ie_opcao_p = 'ALO') then 
		 
		select		count(*) 
		into STRICT		qt_alojamento_w 
		from		nascimento a 
		where		a.ie_destino = 'C' 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		 
		qt_resultado_w := qt_alojamento_w;
		 
	elsif (ie_opcao_p = 'UTI') then 
		 
		select		count(*) 
		into STRICT		qt_uti_w 
		from		nascimento a 
		where		a.ie_destino = 'U' 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_uti_w;
		 
	elsif (ie_opcao_p = 'FMN') then 
		 
		select		count(*) 
		into STRICT		qt_fm_pn_w 
		from		eis_nascimento a 
		where		upper(a.ie_parto_normal) = 'S' 
		and		coalesce(upper(a.ie_parto_cesaria),'N') = 'N' 
		and		coalesce(a.qt_peso_sala_parto,0) < 500 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_fm_pn_w;
		 
	elsif (ie_opcao_p = 'FMC') then 
		 
		select		count(*) 
		into STRICT		qt_fm_pn_w 
		from		eis_nascimento a 
		where		upper(a.ie_parto_cesaria) = 'S' 
		and		coalesce(upper(a.ie_parto_normal),'N') = 'N' 
		and		coalesce(a.qt_peso_sala_parto,0) < 500 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_fm_pn_w;
		 
	elsif (ie_opcao_p = 'OPN') then 
		 
		select		count(*) 
		into STRICT		qt_obito_pn_w 
		from		eis_nascimento a 
		where		upper(a.ie_parto_normal) = 'S' 
		and		coalesce(upper(a.ie_parto_cesaria),'N') = 'N' 
		and		coalesce(a.qt_peso_sala_parto,0) >= 500 
		and		(a.dt_obito IS NOT NULL AND a.dt_obito::text <> '') 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_obito_pn_w;
		 
	elsif (ie_opcao_p = 'OPC') then 
		 
		select		count(*) 
		into STRICT		qt_obito_pc_w 
		from		eis_nascimento a 
		where		upper(a.ie_parto_cesaria) = 'S' 
		and		coalesce(upper(a.ie_parto_normal),'N') = 'N' 
		and		coalesce(a.qt_peso_sala_parto,0) >= 500 
		and		(a.dt_obito IS NOT NULL AND a.dt_obito::text <> '') 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_obito_pc_w;
		 
	elsif (ie_opcao_p = 'ITO') then 
		 
		select (select		count(a.nr_sequencia) 
			 from		escala_apgar a 
			 where		a.ie_situacao = 'A' 
			 and		to_char(a.dt_avaliacao,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			from		nascimento a 
			where		a.ie_destino = 'C' 
			and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			from		nascimento a 
			where		a.ie_destino = 'B' 
			and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			from		nascimento a 
			where		a.ie_destino = 'U' 
			and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			 from		eis_nascimento a 
			 where		upper(a.ie_parto_normal) = 'S' 
			 and		coalesce(upper(a.ie_parto_cesaria),'N') = 'N' 
			 and		coalesce(a.qt_peso_sala_parto,0) < 500 
			 and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			 from		eis_nascimento a 
			 where		upper(a.ie_parto_cesaria) = 'S' 
			 and		coalesce(upper(a.ie_parto_normal),'N') = 'N' 
			 and		coalesce(a.qt_peso_sala_parto,0) < 500 
			 and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			 from		eis_nascimento a 
			 where		upper(a.ie_parto_normal) = 'S' 
			 and		coalesce(upper(a.ie_parto_cesaria),'N') = 'N' 
			 and		coalesce(a.qt_peso_sala_parto,0) >= 500 
			 and		(a.dt_obito IS NOT NULL AND a.dt_obito::text <> '') 
			 and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) + 
			(select		count(*) 
			 from		eis_nascimento a 
			 where		upper(a.ie_parto_cesaria) = 'S' 
			 and		coalesce(upper(a.ie_parto_normal),'N') = 'N' 
			 and		coalesce(a.qt_peso_sala_parto,0) >= 500 
			 and		(a.dt_obito IS NOT NULL AND a.dt_obito::text <> '') 
			 and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w) 
		into STRICT	qt_ind_total_w 
		;
		 
		qt_resultado_w := qt_ind_total_w;
		 
	elsif (ie_opcao_p = 'GPN') then 
		 
		select		sum(a.qt_gemelar) 
		into STRICT		qt_gemelar_pn_w 
		from		eis_nascimento a 
		where		upper(a.ie_parto_normal) = 'S' 
		and		coalesce(upper(a.ie_parto_cesaria),'N') = 'N' 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_gemelar_pn_w;
		 
	elsif (ie_opcao_p = 'GPC') then 
		 
		select		sum(a.qt_gemelar) 
		into STRICT		qt_gemelar_pc_w 
		from		eis_nascimento a 
		where		upper(a.ie_parto_cesaria) = 'S' 
		and		coalesce(upper(a.ie_parto_normal),'N') = 'N' 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_gemelar_pc_w;
		 
	elsif (ie_opcao_p = 'GPT') then 
		 
		select		sum(a.qt_gemelar) 
		into STRICT		qt_gemelar_total_w 
		from		eis_nascimento a 
		where		((upper(a.ie_parto_cesaria) = 'S') 
		or (upper(a.ie_parto_normal) = 'S')) 
		and		to_char(a.dt_nascimento,'dd/mm/yyyy') = dt_referencia_w;
		 
		qt_resultado_w := qt_gemelar_total_w;
		 
	else 
		qt_resultado_w := 0;
	end if;
end if;
 
if (qt_resultado_w = 0) then 
	return null;
else 
	return qt_resultado_w;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_total_nascimento (dt_referencia_p text, ie_opcao_p text) FROM PUBLIC;

