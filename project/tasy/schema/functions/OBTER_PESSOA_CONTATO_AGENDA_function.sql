-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_pessoa_contato_agenda ( cd_pessoa_fisica_p text, dt_agenda_p timestamp) RETURNS varchar AS $body$
DECLARE



nm_pessoa_contato_w		varchar(50):= '';
dt_agenda_w				timestamp;
dt_agenda_agecons_w		timestamp;
dt_agenda_agepac_w		timestamp;

/*Function utilizada para obter a pessoa de contato do paciente, de acordo com o Ãºltimo agendamento realizado pelo mesmo
independente de status e agenda*/
BEGIN
dt_agenda_w	:= dt_agenda_p;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '')then
	begin
	--Agenda de Consultas
	select 	max(dt_agenda)
	into STRICT	dt_agenda_agecons_w
	from	agenda_consulta
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_p
	and		dt_agenda 			< dt_agenda_w
	and		(nm_pessoa_contato IS NOT NULL AND nm_pessoa_contato::text <> '');

	--Agenda de Exames
	select  max(hr_inicio)
	into STRICT	dt_agenda_agepac_w
	from	agenda_paciente
	where	cd_pessoa_fisica 	= cd_pessoa_fisica_p
	and		hr_inicio	 		< dt_agenda_w
	and		(nm_pessoa_contato IS NOT NULL AND nm_pessoa_contato::text <> '');

		--Se existirem agendamentos anteriores...
		if (dt_agenda_agecons_w IS NOT NULL AND dt_agenda_agecons_w::text <> '') or (dt_agenda_agepac_w IS NOT NULL AND dt_agenda_agepac_w::text <> '')then

			if (coalesce(dt_agenda_agecons_w::text, '') = '') then
				dt_agenda_agecons_w :=  to_date('01/01/1899 00:00:01', 'dd/mm/yyyy hh24:mi:ss');
			end if;

			if (coalesce(dt_agenda_agepac_w::text, '') = '') then
				dt_agenda_agepac_w :=  to_date('01/01/1899 00:00:01', 'dd/mm/yyyy hh24:mi:ss');
			end if;

			--Compara as datas dos agendamentos da AGENDA_CONSULTA x AGENDA_PACIENTE verificando qual o mais recente, retornando a pessoa contato para o 'nm_pessoa_contato_w'
			if (dt_agenda_agecons_w > dt_agenda_agepac_w) then
				select	max(nm_pessoa_contato)
				into STRICT	nm_pessoa_contato_w
				from	agenda_consulta
				where	trunc(dt_agenda) 	= trunc(dt_agenda_agecons_w)
				and		cd_pessoa_fisica	= cd_pessoa_fisica_p
				and		(nm_pessoa_contato IS NOT NULL AND nm_pessoa_contato::text <> '')
				and		ie_status_agenda	not in ('C', 'B', 'L', 'I', 'F', 'II', 'R');
			elsif (dt_agenda_agecons_w < dt_agenda_agepac_w) then
				select	max(nm_pessoa_contato)
				into STRICT	nm_pessoa_contato_w
				from	agenda_paciente
				where	trunc(hr_inicio) 	= trunc(dt_agenda_agepac_w)
				and		cd_pessoa_fisica	= cd_pessoa_fisica_p
				and		(nm_pessoa_contato IS NOT NULL AND nm_pessoa_contato::text <> '')
				and		ie_status_agenda	not in ('C', 'B', 'L', 'I', 'F', 'II', 'R');
			end if;

		end if;

	end;
	end if;

return	nm_pessoa_contato_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_pessoa_contato_agenda ( cd_pessoa_fisica_p text, dt_agenda_p timestamp) FROM PUBLIC;

