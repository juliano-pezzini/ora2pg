-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION mprev_obter_prox_agenda_part ( nr_seq_participante_p bigint, dt_referencia_p timestamp) RETURNS bigint AS $body$
DECLARE

 
nr_seq_agendamento_w	mprev_agendamento.nr_sequencia%type	:= null;
dt_agenda_w		timestamp;
					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Obter a sequência do primeiro agendamento marcado para o participante 
após a data de referência 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X] Tasy (Delphi/Java) [ x] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 

BEGIN 
 
if (nr_seq_participante_p IS NOT NULL AND nr_seq_participante_p::text <> '') then 
	/* Considerar apenas agendas de profissionais */
 
	select	min(a.dt_agenda) 
	into STRICT	dt_agenda_w 
	from	agenda b, 
		mprev_agendamento a 
	where	a.cd_agenda	= b.cd_agenda 
	and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '') 
	and	a.nr_seq_participante	= nr_seq_participante_p 
	and	a.dt_agenda >= trunc(coalesce(dt_referencia_p,clock_timestamp()),'dd') 
	and	a.ie_status_agenda <> 'C';
	 
	if (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '') then 
		begin 
		select	a.nr_sequencia 
		into STRICT	nr_seq_agendamento_w 
		from	agenda b, 
			mprev_agendamento a 
		where	a.cd_agenda	= b.cd_agenda 
		and	(b.cd_pessoa_fisica IS NOT NULL AND b.cd_pessoa_fisica::text <> '') 
		and	a.nr_seq_participante	= nr_seq_participante_p 
		and	a.ie_status_agenda <> 'C' 
		and	coalesce(a.cd_agenda_profissional::text, '') = '' 
		and	a.dt_agenda	= dt_agenda_w;
		exception 
			when others then 
			null;
		end;
	end if;
end if;
 
return	nr_seq_agendamento_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION mprev_obter_prox_agenda_part ( nr_seq_participante_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

