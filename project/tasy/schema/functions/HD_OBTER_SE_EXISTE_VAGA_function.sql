-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hd_obter_se_existe_vaga ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(2000)	:= null;
qt_vagas_esp_w		integer;
qt_ocupado_esp_w	integer;
nr_seq_unid_dialise_w	bigint;
nr_seq_turno_w		bigint;
ie_dia_semana_w		varchar(1);
nr_seq_escala_dia_w	bigint;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.nr_seq_unid_dialise,
		b.nr_seq_turno,
		b.ie_dia_semana
	from	hd_escala_dialise a,
		hd_escala_dialise_dia b
	where	a.nr_sequencia 		= b.nr_seq_escala
	and	a.cd_pessoa_fisica 	= cd_pessoa_fisica_p
	and	coalesce(a.dt_fim::text, '') = ''
	and	coalesce(b.dt_fim_escala_dia::text, '') = ''
	order by b.nr_sequencia;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_escala_dia_w,
	nr_seq_unid_dialise_w,
	nr_seq_turno_w,
	ie_dia_semana_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	coalesce(max(qt_vagas_esp),0)
	into STRICT	qt_vagas_esp_w
	from	hd_regra_turno_vaga
	where	nr_seq_unidade		= nr_seq_unid_dialise_w
	and	nr_seq_turno		= nr_seq_turno_w
	and	ie_dia_semana		= ie_dia_semana_w
	and	cd_estabelecimento	= cd_estabelecimento_p;

	select	count(*)
	into STRICT	qt_ocupado_esp_w
	from	hd_escala_dialise a,
		hd_escala_dialise_dia b
	where	b.nr_seq_turno	= nr_seq_turno_w
	and	b.ie_dia_semana	= ie_dia_semana_w
	and	a.nr_sequencia	= b.nr_seq_escala
	and	a.cd_pessoa_fisica <> cd_pessoa_fisica_p
	and	a.nr_seq_unid_dialise = nr_seq_unid_dialise_w
	and	coalesce(a.dt_fim::text, '') = ''
	and 	substr(hd_obter_se_paciente_ativo(cd_pessoa_fisica),1,1) = 'S'
	and	coalesce(b.dt_fim_escala_dia::text, '') = ''
	and exists (	SELECT	1
			from	hd_classificacao_sorologia c,
				hd_paciente_classif_sor d
			where	c.nr_sequencia		= d.nr_seq_classificacao
			and	c.ie_situacao		= 'A'
			and	c.ie_necessita_vaga_esp = 'S'
			and	d.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	coalesce(d.dt_fim::text, '') = ''
			and	coalesce(ie_prioridade,999)	= (	select	min(coalesce(ie_prioridade,999))
								from	hd_classificacao_sorologia e,
									hd_paciente_classif_sor f
								where	e.nr_sequencia		= f.nr_seq_classificacao
								and	e.ie_situacao		= 'A'
								and	f.cd_pessoa_fisica	= d.cd_pessoa_fisica
								and	coalesce(f.dt_fim::text, '') = ''));

	if (qt_ocupado_esp_w >= qt_vagas_esp_w) then
		ds_retorno_w	:= ds_retorno_w||nr_seq_escala_dia_w||',';
	end if;

	end;
end loop;
close C01;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hd_obter_se_existe_vaga ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

