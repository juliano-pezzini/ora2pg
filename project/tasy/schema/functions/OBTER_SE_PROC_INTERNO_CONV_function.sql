-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proc_interno_conv (nr_seq_proc_interno_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
ie_situacao_w			varchar(01);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_categoria_w		varchar(10);
dt_vigencia_w			timestamp;
cd_edicao_amb_w		integer;
ie_origem_proc_w		bigint;
ie_origem_edicao_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_proc_conv_w			varchar(01);
ie_origem_proc_filtro_w		bigint;
ie_tipo_convenio_w		smallint;
ie_tipo_atendimento_w		smallint;
cd_setor_atendimento_w		integer;
cd_tipo_acomodacao_w		smallint;
ds_auxiliar_w	varchar(255);


BEGIN 
 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
	select	a.cd_estabelecimento, 
		b.cd_convenio, 
		b.cd_categoria, 
		b.dt_inicio_vigencia, 
		a.ie_tipo_atendimento, 
		b.cd_tipo_acomodacao 
	into STRICT	cd_estabelecimento_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		dt_vigencia_w, 
		ie_tipo_atendimento_w, 
		cd_tipo_acomodacao_w 
	from	atend_categoria_convenio b, 
		atendimento_paciente a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.nr_atendimento = nr_atendimento_p 
	and	b.nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_p);
 
	select 	obter_setor_atendimento(nr_atendimento_p) 
	into STRICT	cd_setor_atendimento_w 
	;
	 
end if;
 
dt_vigencia_w	:= trunc(coalesce(dt_vigencia_w, clock_timestamp()));
 
select	cd_procedimento, 
	ie_origem_proced 
into STRICT	cd_procedimento_w, 
	ie_origem_proced_w 
from	proc_interno 
where	nr_sequencia	= nr_seq_proc_interno_p;
 
select 	max(ie_tipo_convenio) 
into STRICT	ie_tipo_convenio_w 
from 	convenio 
where 	cd_convenio = cd_convenio_w;
 
SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_procedimento_w, cd_edicao_amb_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ie_origem_proced_w) INTO STRICT cd_edicao_amb_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w, ds_auxiliar_w;
 
ie_origem_proc_filtro_w:= Obter_Origem_Proced_Cat(cd_estabelecimento_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w);
 
select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  
into STRICT	ie_situacao_w 
from	proc_interno_conv a 
where (a.nr_seq_proc_interno = coalesce(nr_seq_proc_interno_p, 0)) 
and (cd_convenio		= coalesce(cd_convenio_w,0) OR coalesce(cd_convenio::text, '') = '') 
and (cd_edicao_amb		= coalesce(cd_edicao_amb_w,0) OR coalesce(cd_edicao_amb::text, '') = '') 
and (ie_tipo_atendimento	= coalesce(ie_tipo_atendimento_w,0) OR coalesce(ie_tipo_atendimento::text, '') = '') 
and 	((ie_origem_proc_filtro = coalesce(ie_origem_proc_filtro_w,0)) or (coalesce(ie_origem_proc_filtro::text, '') = '')) 
and 	((cd_setor_atendimento = coalesce(cd_setor_atendimento_w,0)) or (coalesce(cd_setor_atendimento::text, '') = '')) 
and 	((cd_estabelecimento  = coalesce(cd_estabelecimento_w, wheb_usuario_pck.get_cd_estabelecimento)) or (coalesce(cd_estabelecimento::text, '') = '')) 
and	dt_vigencia_w between coalesce(a.dt_inicio_vigencia, dt_vigencia_w) and coalesce(a.dt_final_vigencia, dt_vigencia_w) 
and	((cd_tipo_acomodacao = coalesce(cd_tipo_acomodacao_w,0)) or (coalesce(cd_tipo_acomodacao::text, '') = ''));
 
ie_proc_conv_w	:= ie_situacao_w;
 
if (ie_situacao_w = 'N') then 
	begin 
 
	select	max(ie_origem_proced) 
	into STRICT	ie_origem_proc_w 
	from	proc_interno 
	where	nr_sequencia		= nr_seq_proc_interno_p;
 
	select	max(ie_origem_proced) 
	into STRICT	ie_origem_edicao_w 
	from	edicao_amb 
	where	cd_edicao_amb		= cd_edicao_amb_w;
 
	select	coalesce(max('S'), 'N') 
	into STRICT	ie_situacao_w 
	 
	where	((ie_origem_proc_w	= ie_origem_edicao_w) or (obter_tipo_convenio(cd_convenio_w) = 3));
 
	end;
end if;
 
if (ie_proc_conv_w = 'N') and (ie_origem_proced_w = 1) and (obter_tipo_convenio(cd_convenio_w) = 3) then 
	ie_situacao_w	:= 'N';
end if;
 
RETURN	ie_situacao_w;
 
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proc_interno_conv (nr_seq_proc_interno_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

