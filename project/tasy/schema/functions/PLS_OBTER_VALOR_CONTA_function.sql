-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_valor_conta ( nr_seq_conta_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/*	IE_OPCAO_P
	O - Ocorrencia
	CO - Co-participação
	P - Pendente
	LS - Liberado sistema
	LU - Liberado usuário
	CTB - Contabil
	GO - Glosa
	PRO - Processado
*/
vl_retorno_w			double precision	:= 0;
vl_contabil_w			double precision	:= 0;
qt_ocorrencia_proc_w		double precision	:= 0;
vl_pendente_proc_w		double precision	:= 0;
vl_lib_proc_sistema_w		double precision	:= 0;
vl_lib_proc_usuario_w		double precision	:= 0;
qt_ocorrencia_mat_w		double precision	:= 0;
vl_pendente_mat_w		double precision	:= 0;
vl_lib_mat_sistema_w		double precision	:= 0;
vl_lib_mat_usuario_w		double precision	:= 0;
ie_contab_item_cancel_w		pls_parametro_contabil.ie_contab_proc_cancel%type;
vl_glosa_proc_w			pls_conta_proc.vl_glosa%type;
vl_glosa_mat_w			pls_conta_mat.vl_glosa%type;
vl_processado_proc_w		pls_conta_proc.vl_procedimento%type;
vl_processado_mat_w		pls_conta_mat.vl_material%type;


BEGIN

if (ie_opcao_p not in ('CTB','CO')) then
	/* Valores do procedimento */

	select	coalesce(sum(a.qt_procedimento_imp),0) qt_ocorrencias,
		coalesce(sum(CASE WHEN a.ie_status='L' THEN 0 WHEN a.ie_status='S' THEN 0 WHEN a.ie_status='D' THEN 0 WHEN a.ie_status='C' THEN 0  ELSE a.vl_procedimento_imp END ),0) vl_pendente,
		coalesce(sum(CASE WHEN a.ie_status='S' THEN a.vl_liberado  ELSE 0 END ),0) vl_lib_sistema,
		coalesce(sum(CASE WHEN a.ie_status='L' THEN a.vl_liberado  ELSE 0 END ),0) vl_lib_usuario
	into STRICT	qt_ocorrencia_proc_w,
		vl_pendente_proc_w,
		vl_lib_proc_sistema_w,
		vl_lib_proc_usuario_w
	from	pls_conta_proc	a
	where	a.nr_seq_conta	= nr_seq_conta_p;

	/* Valores do material */

	select	coalesce(sum(a.qt_material_imp),0) qt_ocorrencias,
		coalesce(sum(CASE WHEN a.ie_status='L' THEN 0 WHEN a.ie_status='S' THEN 0 WHEN a.ie_status='D' THEN 0 WHEN a.ie_status='C' THEN 0  ELSE a.vl_material_imp END ),0) vl_pendente,
		coalesce(sum(CASE WHEN a.ie_status='S' THEN a.vl_liberado  ELSE 0 END ),0) vl_lib_sistema,
		coalesce(sum(CASE WHEN a.ie_status='L' THEN a.vl_liberado  ELSE 0 END ),0) vl_lib_usuario
	into STRICT	qt_ocorrencia_mat_w,
		vl_pendente_mat_w,
		vl_lib_mat_sistema_w,
		vl_lib_mat_usuario_w
	from	pls_conta_mat	a
	where	a.nr_seq_conta	= nr_seq_conta_p;
end if;

if (ie_opcao_p	= 'O') then
	vl_retorno_w	:= qt_ocorrencia_proc_w + qt_ocorrencia_mat_w;
elsif (ie_opcao_p	= 'CO') then
	select	coalesce(sum(vl_coparticipacao),0)
	into STRICT	vl_retorno_w
	from	pls_conta_coparticipacao
	where	nr_seq_conta	= nr_seq_conta_p;
elsif (ie_opcao_p	= 'P') then
	vl_retorno_w	:= vl_pendente_proc_w + vl_pendente_mat_w;
elsif (ie_opcao_p	= 'LS') then
	vl_retorno_w	:= vl_lib_proc_sistema_w + vl_lib_mat_sistema_w;
elsif (ie_opcao_p	= 'LU') then
	vl_retorno_w	:= vl_lib_proc_usuario_w + vl_lib_mat_usuario_w;
elsif (ie_opcao_p	= 'CTB') then
	select	max(ie_contab_proc_cancel)
	into STRICT	ie_contab_item_cancel_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
	ie_contab_item_cancel_w	:= coalesce(ie_contab_item_cancel_w,'N');

	/* Valores da conta */

	select	sum(coalesce(vl_contabil,0))
	into STRICT	vl_contabil_w
	from	(
		SELECT	coalesce(sum(coalesce(a.vl_liberado,0) + coalesce(a.vl_glosa,0) + coalesce(a.vl_glosa,0)),0) vl_contabil
		from	pls_conta_proc a,
			pls_conta b,
			pls_protocolo_conta c
		where	a.nr_seq_conta	= b.nr_sequencia
		and	b.nr_seq_protocolo = c.nr_sequencia
		and	a.nr_seq_conta	= nr_seq_conta_p
		and	c.ie_status in (3,4,6)
		and	((a.ie_status  <> 'D') or (ie_contab_item_cancel_w = 'S'))
		
union all

		SELECT	coalesce(sum(coalesce(a.vl_liberado,0) + coalesce(a.vl_glosa,0) + coalesce(a.vl_glosa,0)),0) vl_contabil
		from	pls_conta_mat a,
			pls_conta b,
			pls_protocolo_conta c
		where	a.nr_seq_conta	= b.nr_sequencia
		and	b.nr_seq_protocolo = c.nr_sequencia
		and	a.nr_seq_conta	= nr_seq_conta_p
		and	c.ie_status in (3,4,6)
		and	((a.ie_status  <> 'D') or (ie_contab_item_cancel_w = 'S'))) alias20;

	vl_retorno_w	:= vl_contabil_w;
elsif (ie_opcao_p = 'GO') then
	select	coalesce(sum(CASE WHEN a.vl_procedimento_imp=0 THEN 0  ELSE a.vl_glosa END ),0)
	into STRICT	vl_glosa_proc_w
	from	pls_conta_proc	a
	where	a.nr_seq_conta	= nr_seq_conta_p;

	/* Valores do material */

	select	coalesce(sum(CASE WHEN a.vl_material_imp=0 THEN 0  ELSE a.vl_glosa END ),0)
	into STRICT	vl_glosa_mat_w
	from	pls_conta_mat	a
	where	a.nr_seq_conta	= nr_seq_conta_p;

	vl_retorno_w	:= vl_glosa_mat_w + vl_glosa_proc_w;
elsif (ie_opcao_p = 'PRO') then
	select	sum(vl_procedimento)
	into STRICT	vl_processado_proc_w
	from	pls_conta_proc	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	a.ie_status	not in ('D','M');

	/* Valores do material */

	select	sum(a.vl_material)
	into STRICT	vl_processado_mat_w
	from	pls_conta_mat	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	a.ie_status	not in ('D','M');

	vl_retorno_w	:= coalesce(vl_processado_mat_w,0) + coalesce(vl_processado_proc_w,0);
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_valor_conta ( nr_seq_conta_p bigint, ie_opcao_p text) FROM PUBLIC;

