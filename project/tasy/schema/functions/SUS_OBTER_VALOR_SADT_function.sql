-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_valor_sadt ( nr_seq_proc_p bigint) RETURNS bigint AS $body$
DECLARE

			 
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
dt_procedimento_w	timestamp;
vl_materiais_w		double precision	:= 0;
vl_sadt_w		double precision	:= 0;
pr_sadt_w		double precision	:= 0;
qt_procedimento_w	double precision	:= 0;
vl_sh_unif_w		double precision	:= 0;
cd_estabelecimento_w	smallint;


BEGIN 
 
select	a.cd_procedimento, 
	a.ie_origem_proced, 
	a.dt_procedimento, 
	a.vl_materiais, 
	a.qt_procedimento, 
	b.vl_sh_unif, 
	c.cd_estabelecimento 
into STRICT	cd_procedimento_w, 
	ie_origem_proced_w, 
	dt_procedimento_w, 
	vl_materiais_w, 
	qt_procedimento_w, 
	vl_sh_unif_w, 
	cd_estabelecimento_w 
from	sus_valor_proc_paciente b, 
	procedimento_paciente a, 
	conta_paciente c 
where	c.nr_interno_conta	= a.nr_interno_conta 
and	a.nr_sequencia		= nr_seq_proc_p 
and	a.nr_sequencia		= b.nr_sequencia;	
 
begin 
select	coalesce(vl_sadt,0), 
	coalesce(pr_sadt,0) 
into STRICT	vl_sadt_w, 
	pr_sadt_w 
from	sus_aih_sadt 
where	cd_procedimento		= cd_procedimento_w 
and	ie_origem_proced	= ie_origem_proced_w 
and	cd_estabelecimento	= cd_estabelecimento_w 
and	dt_procedimento_w between dt_vigencia_inicial and coalesce(dt_vigencia_final, dt_procedimento_w);
exception 
	when no_data_found then 
		vl_sadt_w	:= 0;
	when others then 
		/*R.aise_application_error(-20011,'Problema no cadastro de SADT para o procedimento ' || cd_procedimento_w || '.' || chr(13) || 
					'Não pode existir registro duplicado para o mesmo procedimento dentro de uma mesma competência #@#@');*/
 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(263561,'cd_procedimento_w='||cd_procedimento_w);
end;
 
if (pr_sadt_w	> 0) then 
	vl_sadt_w	:= (vl_sh_unif_w * (pr_sadt_w /100));	
	return		vl_sadt_w;
else 
	return(vl_sadt_w * qt_procedimento_w);
end if;
 
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_valor_sadt ( nr_seq_proc_p bigint) FROM PUBLIC;

