-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_diag_episodio_ger_triar (nr_seq_episodio_p bigint, ie_por_usuario_logado bigint default 0) RETURNS varchar AS $body$
DECLARE


dt_diagnostico_w			timestamp;
ds_diagnostico_w			varchar(240);
cd_doenca_cid_w				varchar(10);

/* ie_por_usuario_logado  1 true or 0 false */

BEGIN
	cd_doenca_cid_w := '';

	begin
		select	max(dt_diagnostico)
		into STRICT 	dt_diagnostico_w
		from 	diagnostico_medico a
		where	nr_atendimento in (SELECT 	a.nr_atendimento
								   from 	atendimento_paciente a, 
											episodio_paciente b 
								   where 	a.nr_seq_episodio = b.nr_sequencia 
								   and 		b.nr_sequencia = nr_seq_episodio_p) 
		and	exists (select	1
					from	diagnostico_doenca x
					where	x.nr_atendimento	= a.nr_atendimento
					and		x.dt_diagnostico	= a.dt_diagnostico
					and		coalesce(x.dt_inativacao::text, '') = ''
					and   ((ie_por_usuario_logado = 0) or (ie_por_usuario_logado = 1 and nm_usuario = Obter_Usuario_Ativo)));
	exception
		when no_data_found then
			dt_diagnostico_w := null;
	end;

	if (dt_diagnostico_w IS NOT NULL AND dt_diagnostico_w::text <> '') then
		select  max(cd_doenca_cid), coalesce(max(ds_doenca_cid),null)
		into STRICT	cd_doenca_cid_w, ds_diagnostico_w
		from 	cid_doenca
		where	cd_doenca_cid = (SELECT max(cd_doenca)
								 from	diagnostico_doenca
								 where	nr_atendimento in (select 	a.nr_atendimento
														   from 	atendimento_paciente a, 
																	episodio_paciente b 
														   where 	a.nr_seq_episodio = b.nr_sequencia 
														   and 		b.nr_sequencia = nr_seq_episodio_p) 
								 and	dt_diagnostico =	dt_diagnostico_w
								 and	coalesce(dt_inativacao::text, '') = ''
								 and   ((ie_por_usuario_logado = 0) or (ie_por_usuario_logado = 1 and nm_usuario = Obter_Usuario_Ativo)));

		if (coalesce(ds_diagnostico_w::text, '') = '') then
			select substr(ds_diagnostico,1,240)
			into STRICT ds_diagnostico_w
			from diagnostico_medico
			where nr_atendimento in (SELECT a.nr_atendimento
									 from 	atendimento_paciente a, 
											episodio_paciente b 
									 where 	a.nr_seq_episodio = b.nr_sequencia 
									 and 	b.nr_sequencia = nr_seq_episodio_p) 
			and dt_diagnostico = dt_diagnostico_w
			and ((ie_por_usuario_logado = 0) or (ie_por_usuario_logado = 1 and nm_usuario = Obter_Usuario_Ativo));
		end if;
	end if;

	return ds_diagnostico_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_diag_episodio_ger_triar (nr_seq_episodio_p bigint, ie_por_usuario_logado bigint default 0) FROM PUBLIC;

