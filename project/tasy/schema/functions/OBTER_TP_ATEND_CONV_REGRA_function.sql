-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tp_atend_conv_regra ( Nr_Interno_Conta_p Conta_Paciente.Nr_Interno_Conta%type) RETURNS varchar AS $body$
DECLARE

					 
cConta CURSOR FOR 
	SELECT 	a.Cd_Estabelecimento, 
			a.Cd_Convenio_Parametro, 
			a.Ie_Tipo_Atend_Conta, 
			b.Ie_Tipo_Atendimento, 
			b.Ie_Clinica, 
			a.Dt_Mesano_Referencia, 
			a.Nr_Atendimento, 
			b.nr_Seq_classificacao 
	From	Conta_Paciente a, 
			Atendimento_Paciente b 
	Where	a.Nr_Interno_Conta = Nr_Interno_Conta_p 
	And		a.Nr_Atendimento = b.Nr_Atendimento;
										
cRegra CURSOR(	Cd_Estabelecimento_p		bigint, 
				Cd_Convenio_p				bigint, 
				Ie_Tipo_Atendimento_p		bigint, 
				Ie_Tipo_Atend_Conta_p		bigint, 
				Ie_Clinica_p				bigint, 
				Cd_Setor_Exec_Proc_p		bigint, 
				Cd_Procedimento_p			bigint, 
				Ie_Origem_Proced_p			bigint, 
				Cd_Area_Procedimento_p		bigint, 
				Cd_Especialidade_p			bigint, 
				Cd_Grupo_Proc_p				bigint, 
				Nr_Seq_Proc_Interno_p		bigint, 
				Nr_Seq_Proc_Interno_Excl_p	bigint, 
				D_Referencia_p				timestamp, 
				nr_seq_classificacao_p		bigint) FOR 
	SELECT	a.Ds_Tipo_Atendimento   	 
	From	Conv_Regra_Tipo_Atend a 
	Where	a.Cd_Estabelecimento			= coalesce(Cd_Estabelecimento_p,0) 
	And		a.Cd_Convenio					= coalesce(Cd_Convenio_p,0) 
	And		((coalesce(a.Ie_Tipo_Atendimento::text, '') = '')		Or (a.Ie_Tipo_Atendimento		= coalesce(Ie_Tipo_Atendimento_p,0))) 
	And		((coalesce(a.Ie_Tipo_Atend_Conta::text, '') = '')		Or (a.Ie_Tipo_Atend_Conta		= coalesce(Ie_Tipo_Atend_Conta_p,0))) 
	And		((coalesce(a.Ie_Clinica::text, '') = '')					Or (a.Ie_Clinica				= coalesce(Ie_Clinica_p,0))) 
	And		((coalesce(a.Cd_Setor_Exec_Proc::text, '') = '')			Or (a.Cd_Setor_Exec_Proc		= coalesce(Cd_Setor_Exec_Proc_p,0)))	 
	And		((coalesce(a.Cd_Procedimento::text, '') = '')			Or (a.Cd_Procedimento			= coalesce(Cd_Procedimento_p,0))) 
	And		((coalesce(a.Ie_Origem_Proced::text, '') = '')			Or (a.Ie_Origem_Proced			= coalesce(Ie_Origem_Proced_p,0))) 
	And		((coalesce(a.Cd_Area_Procedimento::text, '') = '')		Or (a.Cd_Area_Procedimento		= coalesce(Cd_Area_Procedimento_p,0)))	 
	And		((coalesce(a.Cd_Especialidade::text, '') = '')			Or (a.Cd_Especialidade			= coalesce(Cd_Especialidade_p,0))) 
	And		((coalesce(a.Cd_Grupo_Proc::text, '') = '')				Or (a.Cd_Grupo_Proc				= coalesce(Cd_Grupo_Proc_p,0))) 
	And		((coalesce(a.Nr_Seq_Proc_Interno::text, '') = '')		Or (a.Nr_Seq_Proc_Interno		= coalesce(Nr_Seq_Proc_Interno_p,0))) 
	And		((coalesce(a.Nr_Seq_Proc_Interno_Excl::text, '') = '')	Or (a.Nr_Seq_Proc_Interno_Excl	= coalesce(Nr_Seq_Proc_Interno_Excl_p,0))) 
	And		D_Referencia_p Between a.Dt_Inicio_Vigencia And coalesce(a.Dt_Fim_Vigencia,D_Referencia_p) 
	And		a.Ie_Situacao = 'A' 
	and		((coalesce(nr_seq_classificacao::text, '') = '') or (coalesce(nr_seq_classificacao,0) = coalesce(nr_seq_classificacao_p,0))) 
	Order By	 
			coalesce(a.Nr_Seq_Proc_Interno,0), 
			coalesce(a.Nr_Seq_Proc_Interno_Excl,0), 
			coalesce(a.Cd_procedimento,0), 
			coalesce(a.Cd_grupo_proc,0), 
			coalesce(a.Cd_especialidade,0), 
			coalesce(a.Cd_area_procedimento,0), 
			coalesce(a.Ie_Tipo_Atend_Conta,0), 
			coalesce(a.Ie_Tipo_Atendimento,0), 
			coalesce(a.Ie_Clinica,0), 
			coalesce(a.Cd_Setor_Exec_Proc,0), 
			coalesce(a.nr_seq_classificacao,0);
			
 
Nr_Seq_Proc_Princ_w			Procedimento_Paciente.Nr_Sequencia%Type :=0;
Cd_Setor_Exec_Proc_w		Procedimento_Paciente.Cd_Setor_Atendimento%Type;
Cd_Procedimento_w			Procedimento.Cd_Procedimento%Type;
Ie_Origem_Proced_w			Procedimento.Ie_Origem_Proced%Type;
Cd_Area_Procedimento_w		Area_Procedimento.Cd_Area_Procedimento%Type;
Cd_Especialidade_w			Especialidade_Proc.Cd_Especialidade%Type;
Cd_Grupo_Proc_w				Grupo_Proc.Cd_Grupo_Proc%Type;
Nr_Seq_Proc_Interno_w		Proc_Interno.Nr_Sequencia%Type;
Nr_Seq_Proc_Interno_Excl_w	Proc_Interno.Nr_Sequencia%Type;
Ds_Tipo_Atendimento_w		Conv_Regra_Tipo_Atend.Ds_Tipo_Atendimento%Type;	
 
BEGIN 
 
	For	rConta In cConta Loop 
		 
		--Obter Proc Princ 
		Select	coalesce(Max(a.Nr_Sequencia),0) Nr_Seq_Proc_Princ 
		Into STRICT	Nr_Seq_Proc_Princ_w 
		From	Procedimento_paciente a 
		Where	a.Ie_Proc_Princ_Atend = 'S'	 
		And	 coalesce(a.Cd_Motivo_Exc_Conta::text, '') = '' 
		And	a.Nr_Interno_Conta = Nr_Interno_Conta_p;
		 
		If (Nr_Seq_Proc_Princ_w = 0) Then 
			Nr_Seq_Proc_Princ_w	:=	coalesce(Obter_Proc_Principal(	rConta.Nr_Atendimento, 
																rConta.Cd_Convenio_Parametro, 
																rConta.Ie_Tipo_Atendimento, 
																Nr_Interno_Conta_p, 
																'SEQ'),0);
		End If;
		 
		If (Nr_Seq_Proc_Princ_w > 0) Then 
			 
			Select	a.Cd_Setor_Atendimento, 
					e.Cd_Procedimento,			 
			    e.Ie_Origem_Proced,			 
			    e.Cd_Area_Procedimento, 
			    e.Cd_Especialidade, 
			    e.Cd_Grupo_Proc,	 
			    a.Nr_Seq_Proc_Interno 
			Into STRICT	Cd_Setor_Exec_Proc_w,	 
			    Cd_Procedimento_w, 
			    Ie_Origem_Proced_w, 
			    Cd_Area_Procedimento_w, 
			    Cd_Especialidade_w, 
			    Cd_Grupo_Proc_w, 
			    Nr_Seq_Proc_Interno_w		 
			From	Procedimento_Paciente	a, 
					Estrutura_Procedimento_v e 
			Where	a.Nr_Sequencia = Nr_Seq_Proc_Princ_w 
			And		a.Cd_Procedimento = e.Cd_Procedimento 
			And		a.Ie_Origem_Proced = e.Ie_Origem_Proced;
		 
		End If;
		 
		-- Buscar proc interno exclusivo 
		Begin 
			Select	Nr_Seq_Proc_Interno 
			Into STRICT	Nr_Seq_Proc_Interno_Excl_w 
			From	Procedimento_paciente a 
			Where	coalesce(a.Cd_Motivo_Exc_Conta::text, '') = '' 
			And		(a.Nr_Seq_Proc_Interno IS NOT NULL AND a.Nr_Seq_Proc_Interno::text <> '') 
			And		a.Nr_Interno_Conta = Nr_Interno_Conta_p 
			And (	SELECT	Count(1) 
						From 	Procedimento_Paciente b 
						Where 	b.Nr_Interno_Conta = a.Nr_Interno_Conta 
						And		coalesce(b.Cd_Motivo_Exc_Conta::text, '') = '') = 1;
		Exception 
			When Others Then 
				Nr_Seq_Proc_Interno_Excl_w:= Null;
		End;
		 
		/* 
		dbms_output.put_line(	rConta.Cd_Estabelecimento||chr(13)||chr(10)|| 
								rConta.Cd_Convenio_Parametro||chr(13)||chr(10)|| 
								rConta.Ie_Tipo_Atendimento||chr(13)||chr(10)|| 
								rConta.Ie_Tipo_Atend_Conta||chr(13)||chr(10)|| 
								rConta.Ie_Clinica||chr(13)||chr(10)|| 
								Cd_Setor_Exec_Proc_w||chr(13)||chr(10)|| 
								Cd_Procedimento_w||chr(13)||chr(10)|| 
								Ie_Origem_Proced_w||chr(13)||chr(10)|| 
								Cd_Area_Procedimento_w||chr(13)||chr(10)|| 
								Cd_Especialidade_w||chr(13)||chr(10)|| 
								Cd_Grupo_Proc_w||chr(13)||chr(10)|| 
								Nr_Seq_Proc_Interno_w||chr(13)||chr(10)|| 
								Nr_Seq_Proc_Interno_Excl_w||chr(13)||chr(10)|| 
								rConta.Dt_Mesano_Referencia);*/
 
		 
		For	rRegra	In cRegra(	rConta.Cd_Estabelecimento, 
								rConta.Cd_Convenio_Parametro, 
								rConta.Ie_Tipo_Atendimento, 
								rConta.Ie_Tipo_Atend_Conta, 
								rConta.Ie_Clinica, 
								Cd_Setor_Exec_Proc_w,	 
								Cd_Procedimento_w, 
								Ie_Origem_Proced_w, 
								Cd_Area_Procedimento_w, 
								Cd_Especialidade_w, 
								Cd_Grupo_Proc_w, 
								Nr_Seq_Proc_Interno_w, 
								Nr_Seq_Proc_Interno_Excl_w, 
								rConta.Dt_Mesano_Referencia, 
								rConta.nr_seq_classificacao) Loop 
			--dbms_output.put_line(rRegra.Ds_Tipo_Atendimento);						 
			Ds_Tipo_Atendimento_w:= rRegra.Ds_Tipo_Atendimento;
		End Loop;		
	 
	End Loop;
return 	Ds_Tipo_Atendimento_w;
End;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tp_atend_conv_regra ( Nr_Interno_Conta_p Conta_Paciente.Nr_Interno_Conta%type) FROM PUBLIC;

