-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_val_regra_limit_prot_web ( ie_tipo_guia_p text, nr_seq_prestador_p bigint, nr_seq_usu_prestador_p bigint) RETURNS varchar AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Verificar o limite de protocolos em aberto, na digitação de contas médicas do portal web.
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Retorna 'S' se tem regra de limite
 */qt_registros_w			bigint;
qt_prot_abertos_w		bigint;
ie_cad_conta_medica_w		pls_controle_estab.ie_cad_conta_medica%type;


BEGIN

ie_cad_conta_medica_w := pls_obter_se_controle_estab('CM');

if	(ie_cad_conta_medica_w = 'N') then -- Campo 'OPS - Contas médicas' localizado em 'OPS - Cadastro de Regras > OPS - Rede credenciada > Controle de estabelecimento' DESMARCADO
	select	count(1)
	into STRICT	qt_prot_abertos_w
	from 	pls_protocolo_conta
	where  	nr_seq_prestador 	= nr_seq_prestador_p
	and	nr_seq_usu_prestador 	= nr_seq_usu_prestador_p
	and	ie_tipo_guia = ie_tipo_guia_p
	and	ie_situacao = 'I'
	and	ie_forma_imp = 'D';

	select  count(1)
	into STRICT	qt_registros_w
	from	pls_regra_protocolo_web
	where	coalesce(nr_seq_prestador,nr_seq_prestador_p) = nr_seq_prestador_p
	and	ie_tipo_guia = ie_tipo_guia_p
	and	(qt_protocolo IS NOT NULL AND qt_protocolo::text <> '')
	and	qt_prot_abertos_w >= coalesce(qt_protocolo,0)
	and	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia,clock_timestamp())) and trunc(coalesce(dt_fim_vigencia,clock_timestamp()));

elsif	(ie_cad_conta_medica_w = 'S') then -- Campo 'OPS - Contas médicas' localizado em 'OPS - Cadastro de Regras > OPS - Rede credenciada > Controle de estabelecimento' MARCADO
	select 	count(1)
	into STRICT	qt_prot_abertos_w
	from 	pls_protocolo_conta
	where  	nr_seq_prestador 	= nr_seq_prestador_p
	and	nr_seq_usu_prestador 	= nr_seq_usu_prestador_p
	and	ie_tipo_guia = ie_tipo_guia_p
	and	ie_situacao = 'I'
	and	ie_forma_imp = 'D'
	and	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

	select  count(1)
	into STRICT	qt_registros_w
	from	pls_regra_protocolo_web
	where	coalesce(nr_seq_prestador,nr_seq_prestador_p) = nr_seq_prestador_p
	and	ie_tipo_guia = ie_tipo_guia_p
	and	(qt_protocolo IS NOT NULL AND qt_protocolo::text <> '')
	and	qt_prot_abertos_w >= coalesce(qt_protocolo,0)
	and	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia,clock_timestamp())) and trunc(coalesce(dt_fim_vigencia,clock_timestamp()))
	and	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
end if;

if (qt_registros_w > 0) then
	return 'S';
end if;

return	'N';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_val_regra_limit_prot_web ( ie_tipo_guia_p text, nr_seq_prestador_p bigint, nr_seq_usu_prestador_p bigint) FROM PUBLIC;

