-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_agenda_web ( cd_agenda_p bigint, nr_seq_proc_interno_p bigint, cd_profissional_p text, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, ie_lookup_p text ) RETURNS varchar AS $body$
DECLARE

 
ds_Retorno_w		varchar(2)	:= 'N';

cd_tipo_agenda_w	bigint;
nr_seq_regra_w		bigint;
qt_exclusivo_w		integer;
cd_estabelecimento_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_area_proced_w	integer;
cd_espec_proced_w	integer;
cd_grupo_proced_w	bigint;
nr_seq_regra_final_w	bigint;
ie_permite_w		varchar(1);
ie_exclusiva_w		varchar(1)	:= 'N';

C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	agenda_regra 
	where	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w 
	and	cd_agenda = cd_agenda_p 
	and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
	and	((cd_categoria = cd_categoria_p) or (coalesce(cd_categoria::text, '') = '')) 
	and	((cd_plano_convenio = cd_plano_p) or (coalesce(cd_plano_convenio::text, '') = '')) 
	and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = '')) 
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = ''))) 
	and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
	and	((((cd_medico = cd_profissional_p) or (coalesce(cd_medico::text, '') = '')) and (ie_lookup_p = 'S')) 
	or	(((cd_medico = cd_profissional_p) or (coalesce(cd_profissional_p::text, '') = '') or (coalesce(cd_medico::text, '') = '')) and (ie_lookup_p = 'N'))) 
	and	ie_permite in ('S','N') 
	order by coalesce(cd_procedimento,0), 
		coalesce(nr_seq_proc_interno,0), 
		coalesce(cd_area_proc,0), 
		coalesce(cd_especialidade,0), 
		coalesce(cd_grupo_proc,0), 
		coalesce(cd_convenio, 0), 
		coalesce(cd_medico, 0);


BEGIN 
 
select	max(cd_tipo_agenda), 
	max(cd_estabelecimento) 
into STRICT	cd_tipo_agenda_w, 
	cd_estabelecimento_w 
from	agenda 
where	cd_agenda	= cd_agenda_p;
 
 
if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then 
	SELECT * FROM obter_proc_tab_interno_conv( 
				nr_seq_proc_interno_p, cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_plano_p, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;
 
select	coalesce(max(cd_area_procedimento),0), 
	coalesce(max(cd_especialidade),0), 
	coalesce(max(cd_grupo_proc),0) 
into STRICT	cd_area_proced_w, 
	cd_espec_proced_w, 
	cd_grupo_proced_w 
from	estrutura_procedimento_v 
where	cd_procedimento = cd_procedimento_w 
and	ie_origem_proced = ie_origem_proced_w;
 
if (cd_tipo_agenda_w = 2) then 
	select	count(*) 
	into STRICT	qt_exclusivo_w 
	from	agenda_regra 
	where	coalesce(cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w 
	and	cd_agenda 		= cd_agenda_p 
	and	((cd_convenio = cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
	and	((cd_medico = cd_profissional_p) or (coalesce(cd_medico::text, '') = '')) 
	and	ie_permite = 'E';
 
	if (qt_exclusivo_w > 0) then 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	nr_seq_regra_w 
		from	agenda_regra 
		where	coalesce(cd_estabelecimento, cd_estabelecimento_w) 	= cd_estabelecimento_w 
		and	cd_agenda 		= cd_agenda_p 
		and	((cd_convenio 		= cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
		and	((cd_categoria = cd_categoria_p) or (coalesce(cd_categoria::text, '') = '')) 
		and	((cd_plano_convenio = cd_plano_p) or (coalesce(cd_plano_convenio::text, '') = '')) 
		and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
		and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
		and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
		and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = '')) 
		and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = ''))) 
		and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
		and	((cd_medico 		= cd_profissional_p) or (coalesce(cd_medico::text, '') = '')) 
		and	ie_permite = 'E';
 
		ie_exclusiva_w	:= 'S';
 
		if (nr_seq_regra_w = 0) then 
			ds_retorno_w	:= 'N';
		else 
			ds_retorno_w	:= 'S';
		end if;
	else 
		open C02;
		loop 
		fetch C02 into 
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			nr_seq_regra_final_w	:= nr_seq_regra_w;
			end;
		end loop;
		close C02;
 
		select	coalesce(max(ie_permite),'N') 
		into STRICT	ie_permite_w 
		from	agenda_regra 
		where	nr_sequencia	= nr_seq_regra_final_w;
 
		ds_retorno_w	:= ie_permite_w;
		 
	end if;
 
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_agenda_web ( cd_agenda_p bigint, nr_seq_proc_interno_p bigint, cd_profissional_p text, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, ie_lookup_p text ) FROM PUBLIC;

