-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tre_valida_se_dia_curso ( nr_seq_evento_p bigint, dt_parametro_p timestamp) RETURNS varchar AS $body$
DECLARE


ds_contido_w    varchar(255);
ie_continua_w   varchar(1);
ie_valida_w     varchar(1);
nr_canc_aula_w	integer;
nr_seq_agenda_w bigint;

c01 CURSOR FOR
        SELECT  distinct ie_dia_semana
        from    tre_agenda_turno a,
                tre_agenda b,
                tre_evento c
        where   b.nr_sequencia = a.nr_seq_agenda_tre
        and     b.nr_sequencia = c.nr_seq_agenda
        and     c.nr_sequencia = nr_seq_evento_p
        and     dt_parametro_p  between  c.dt_inicio and fim_dia(c.dt_fim)
		and		((dt_parametro_p between a.dt_inicio_vigencia and fim_dia(a.dt_fim_vigencia)) or ((coalesce(a.dt_inicio_vigencia::text, '') = '') or (coalesce(a.dt_fim_vigencia::text, '') = '')))

union

        SELECT  distinct ie_dia_semana
        from    tre_agenda_turno a,
                tre_agenda b,
                tre_evento c
        where   b.nr_sequencia = a.nr_seq_agenda_tre
        and     b.nr_sequencia = c.nr_seq_agenda
        and     c.nr_sequencia = nr_seq_evento_p
        and     dt_parametro_p  >= c.dt_inicio
		and		((dt_parametro_p between a.dt_inicio_vigencia and fim_dia(a.dt_fim_vigencia)) or ((coalesce(a.dt_inicio_vigencia::text, '') = '') or (coalesce(a.dt_fim_vigencia::text, '') = '')));


BEGIN
ie_continua_w   := 'S';
ie_valida_w     := 'N';
open c01;
loop
fetch c01 into
        ds_contido_w;
EXIT WHEN NOT FOUND or ie_continua_w = 'N';  /* apply on c01 */
        begin
		if (ds_contido_w = 9) and (pkg_date_utils.get_WeekDay(dt_parametro_p) >= 2) and (pkg_date_utils.get_WeekDay(dt_parametro_p) <= 7) then
			ie_valida_w     := 'S';
            ie_continua_w   := 'N';
        elsif (pkg_date_utils.get_WeekDay(dt_parametro_p) = ds_contido_w) then
                ie_valida_w     := 'S';
                ie_continua_w   := 'N';
        end if;
        end;
end loop;
close c01;

if (ie_valida_w = 'N') then
        select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
        into STRICT    ie_valida_w
        from    tre_agenda b,
                tre_evento c
        where   b.nr_sequencia = c.nr_seq_agenda
        and     c.nr_sequencia = nr_seq_evento_p
        and     not exists (    SELECT  1
                                from    tre_agenda_turno a
                                where   a.nr_seq_agenda_tre = b.nr_sequencia
								and		((dt_parametro_p between a.dt_inicio_vigencia and fim_dia(a.dt_fim_vigencia)) or ((coalesce(a.dt_inicio_vigencia::text, '') = '') or (coalesce(a.dt_fim_vigencia::text, '') = ''))))
        and     dt_parametro_p  >= c.dt_inicio;
end if;

select 	b.nr_seq_agenda
into STRICT 	nr_seq_agenda_w
from 	tre_evento b
where 	b.nr_sequencia = nr_seq_evento_p;

select	count(*)
into STRICT	nr_canc_aula_w
from	tre_alteracao_dia_aula a
where	a.nr_seq_agenda = nr_seq_agenda_w
and		a.dt_alteracao = to_date(to_char(dt_parametro_p,'dd/mm/yyyy'));

if (nr_canc_aula_w IS NOT NULL AND nr_canc_aula_w::text <> '') and (nr_canc_aula_w > 0) then
	select 	CASE WHEN max(a.ie_acao)='C' THEN 'N'  ELSE 'S' END
	into STRICT 	ie_valida_w
	from	tre_alteracao_dia_aula a
	where	a.nr_seq_agenda = nr_seq_agenda_w
	and		a.dt_alteracao = to_date(to_char(dt_parametro_p,'dd/mm/yyyy'));
end if;

return  ie_valida_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tre_valida_se_dia_curso ( nr_seq_evento_p bigint, dt_parametro_p timestamp) FROM PUBLIC;

