-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_desc_precaucao_agenda (nr_atendimento_p bigint, cd_pessoa_fisica_p text) RETURNS varchar AS $body$
DECLARE


ds_precaucao_w 			varchar(255);
ds_precaucao_concat_w 		varchar(4000);
ie_consiste_isolamento_w	varchar(1);
ie_isolamento_w			varchar(1);
ds_observacao_w         atendimento_precaucao.ds_observacao%type;

c02 CURSOR FOR
	SELECT d.ds_precaucao,
        a.ds_observacao,
		'S'
	FROM cih_precaucao d, atendimento_paciente c, atendimento_precaucao a
LEFT OUTER JOIN motivo_isolamento e ON (a.nr_seq_motivo_isol = e.nr_sequencia)
WHERE c.nr_atendimento = a.nr_atendimento and d.nr_sequencia = a.nr_seq_precaucao  and coalesce(a.dt_inativacao::text, '') = '' and ((coalesce(a.dt_termino::text, '') = '') or (clock_timestamp() between coalesce(a.dt_inicio,a.dt_termino) and a.dt_termino)) and (SELECT obter_alerta_isolamento(c.cd_estabelecimento) ) = 'T' and c.cd_pessoa_fisica = cd_pessoa_fisica_p
	
union

    select d.ds_precaucao,
        a.ds_observacao,
		'S'
	FROM pessoa_fisica f, cih_precaucao d, atendimento_precaucao a
LEFT OUTER JOIN motivo_isolamento e ON (a.nr_seq_motivo_isol = e.nr_sequencia)
WHERE coalesce(a.nr_atendimento::text, '') = '' and d.nr_sequencia = a.nr_seq_precaucao  and coalesce(a.dt_inativacao::text, '') = '' and ((coalesce(a.dt_termino::text, '') = '') or (clock_timestamp() between coalesce(a.dt_inicio,a.dt_termino) and a.dt_termino)) and a.cd_pessoa_fisica = cd_pessoa_fisica_p and f.cd_pessoa_fisica = a.cd_pessoa_fisica and (select obter_alerta_isolamento(f.cd_estabelecimento) ) = 'T'
     
union

	select d.ds_precaucao,
        a.ds_observacao,
		'S'
	FROM cih_precaucao d, atendimento_paciente c, atendimento_precaucao a
LEFT OUTER JOIN motivo_isolamento e ON (a.nr_seq_motivo_isol = e.nr_sequencia)
WHERE c.nr_atendimento = a.nr_atendimento and d.nr_sequencia = a.nr_seq_precaucao  and coalesce(a.dt_inativacao::text, '') = '' and coalesce(a.DT_FINAL_PRECAUCAO::text, '') = '' and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') --and	((a.dt_termino is null) or (sysdate between nvl(a.dt_inicio,a.dt_termino) and a.dt_termino))
  and (select obter_alerta_isolamento(c.cd_estabelecimento) ) = 'F' and c.cd_pessoa_fisica = cd_pessoa_fisica_p;

BEGIN
ie_consiste_isolamento_w := Obter_Param_Usuario(871, 390, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_isolamento_w);

if (coalesce(nr_atendimento_p,0) > 0) then	
	ds_precaucao_concat_w := substr(obter_desc_precaucao(nr_atendimento_p),1,4000);
else
	if (coalesce(cd_pessoa_fisica_p,'XPTO') <> 'XPTO') then	
		open c02;
		loop
		fetch c02 into
			ds_precaucao_w,
            ds_observacao_w,
			ie_isolamento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if((ie_consiste_isolamento_w = 'N') or (ie_isolamento_w = 'S')) then
                if (ds_precaucao_concat_w IS NOT NULL AND ds_precaucao_concat_w::text <> '') then
					ds_precaucao_concat_w := substr(ds_precaucao_concat_w || ', ',1,4000);
				end if;
				ds_precaucao_concat_w := substr(ds_precaucao_concat_w || ds_precaucao_w,1,4000);
                if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
                    begin
                    ds_precaucao_concat_w := substr(ds_precaucao_concat_w || ': ' || ds_observacao_w,1,4000);
                    end;
                end if;
			end if;	
			end;
		end loop;
		close c02;
	end if;	
end if;	

return ds_precaucao_concat_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_desc_precaucao_agenda (nr_atendimento_p bigint, cd_pessoa_fisica_p text) FROM PUBLIC;

