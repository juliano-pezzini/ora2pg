-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_data_prevista_saida ( nr_sequencia_p bigint) RETURNS timestamp AS $body$
DECLARE


dt_saida_prevista_w	timestamp;
dt_entrada_w		timestamp;
dt_saida_w			timestamp;
qt_min_intervalo_w	bigint;
nm_usuario_controle_w	varchar(15);
cd_cargo_w		bigint;
qt_horas_trab_w		double precision;
qt_horas_trab_interv_w	double precision;


BEGIN
dt_saida_prevista_w	:= to_date(to_char(clock_timestamp(), 'dd/mm/yyyy') || ' 18:00:00', 'dd/MM/yyyy hh24:mi:ss');

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	begin
	select	dt_entrada,
		qt_min_intervalo,
		dt_saida,
		nm_usuario
	into STRICT	dt_entrada_w,
		qt_min_intervalo_w,
		dt_saida_w,
		nm_usuario_controle_w
	from	usuario_controle
	where	nr_sequencia = nr_sequencia_p;

	select	max(b.cd_cargo)
	into STRICT	cd_cargo_w
	from	usuario a,
		pessoa_fisica b
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.nm_usuario = nm_usuario_controle_w;

	if (cd_cargo_w = 1141) then 	-- Menor aprendiz
		qt_horas_trab_w := (4/24);
		qt_horas_trab_interv_w := qt_horas_trab_w;
	elsif (cd_cargo_w in (133, 		-- Estagiario Desenv
				42,		--        ""	Projetos
				1233, 		--        ""	Qualidade
				911, 		--        ""	RH
				1041,		--        ""	Suporte
				33, 		--        ""	Suporte a vendas
				1251, 		--        ""	Testes
				131, 		--        ""	Financeiro
				1271)) then	--        ""	PMO RD
		qt_horas_trab_w := (6/24);
		qt_horas_trab_interv_w := qt_horas_trab_w;
	else
		qt_horas_trab_w := (9/24);
		qt_horas_trab_interv_w := (8/24);
	end if;

	if (dt_saida_w IS NOT NULL AND dt_saida_w::text <> '') then
		begin
		dt_saida_prevista_w := null;
		end;
	elsif (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') then
		begin
		if (qt_min_intervalo_w IS NOT NULL AND qt_min_intervalo_w::text <> '') and (qt_min_intervalo_w > 0) then
			begin
			dt_saida_prevista_w := ((dt_entrada_w + (qt_min_intervalo_w/1440)) + qt_horas_trab_interv_w);
			end;
		else
			begin
			dt_saida_prevista_w := (dt_entrada_w + qt_horas_trab_w);
			end;
		end if;
		end;
	end if;	
	end;
end if;

return	to_date(to_char(dt_saida_prevista_w,'dd/mm/yyyy hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_data_prevista_saida ( nr_sequencia_p bigint) FROM PUBLIC;

