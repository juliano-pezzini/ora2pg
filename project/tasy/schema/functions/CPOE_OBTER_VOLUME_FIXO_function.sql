-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_volume_fixo ( cd_material_p bigint, qt_dose_p bigint, cd_unidade_medida_p text, qt_dose_dil_p bigint, cd_mat_comp1_p bigint default null, qt_dose_comp1_p bigint default null, cd_unid_med_dose_comp1_p text default null, cd_mat_comp2_p bigint default null, qt_dose_comp2_p bigint default null, cd_unid_med_dose_comp2_p text default null, cd_mat_comp3_p bigint default null, qt_dose_comp3_p bigint default null, cd_unid_med_dose_comp3_p text default null, cd_mat_comp4_p bigint default null, qt_dose_comp4_p bigint default null, cd_unid_med_dose_comp4_p text default null, cd_mat_comp5_p bigint default null, qt_dose_comp5_p bigint default null, cd_unid_med_dose_comp5_p text default null, cd_mat_comp6_p bigint default null, qt_dose_comp6_p bigint default null, cd_unid_med_dose_comp6_p text default null, cd_mat_comp7_p bigint default null, qt_dose_comp7_p bigint default null, cd_unid_med_dose_comp7_p text default null, nr_sequencia_p bigint default null) RETURNS bigint AS $body$
DECLARE


cd_unid_med_usua_w 	varchar(30);
qt_dose_total_w 	double precision := 0;

c01 CURSOR FOR
SELECT  distinct
		a.cd_material,
		a.qt_dose,
		a.cd_unidade_medida
from  	cpoe_material_add_comp a
where   a.nr_seq_cpoe_material = nr_sequencia_p;

	procedure calcularVolumeFixo(	cd_material_p bigint,
					qt_dose_p bigint,
					cd_unid_med_p text ) is
		
	qt_dose_ml_w cpoe_material.qt_dose%type;
	
	
BEGIN

	if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '') then
		
		if (upper(cd_unid_med_p) <> upper(cd_unid_med_usua_w)) then
			qt_dose_ml_w := obter_dose_convertida(cd_material_p, qt_dose_p, cd_unid_med_p, cd_unid_med_usua_w);
		else
			qt_dose_ml_w := qt_dose_p;
		end if;

		qt_dose_total_w := qt_dose_total_w + qt_dose_ml_w;
	end if;
	
	end;

begin

cd_unid_med_usua_w := obter_unid_med_usua('ml');
calcularVolumeFixo(cd_material_p, qt_dose_p, cd_unidade_medida_p);
calcularVolumeFixo(cd_mat_comp1_p, qt_dose_comp1_p, cd_unid_med_dose_comp1_p);
calcularVolumeFixo(cd_mat_comp2_p, qt_dose_comp2_p, cd_unid_med_dose_comp2_p);
calcularVolumeFixo(cd_mat_comp3_p, qt_dose_comp3_p, cd_unid_med_dose_comp3_p);
calcularVolumeFixo(cd_mat_comp4_p, qt_dose_comp4_p, cd_unid_med_dose_comp4_p);
calcularVolumeFixo(cd_mat_comp5_p, qt_dose_comp5_p, cd_unid_med_dose_comp5_p);
calcularVolumeFixo(cd_mat_comp6_p, qt_dose_comp6_p, cd_unid_med_dose_comp6_p);
calcularVolumeFixo(cd_mat_comp7_p, qt_dose_comp7_p, cd_unid_med_dose_comp7_p);

for c01_w in c01 loop
	calcularVolumeFixo(c01_w.cd_material, c01_w.qt_dose, c01_w.cd_unidade_medida);
end loop;

return qt_dose_total_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_volume_fixo ( cd_material_p bigint, qt_dose_p bigint, cd_unidade_medida_p text, qt_dose_dil_p bigint, cd_mat_comp1_p bigint default null, qt_dose_comp1_p bigint default null, cd_unid_med_dose_comp1_p text default null, cd_mat_comp2_p bigint default null, qt_dose_comp2_p bigint default null, cd_unid_med_dose_comp2_p text default null, cd_mat_comp3_p bigint default null, qt_dose_comp3_p bigint default null, cd_unid_med_dose_comp3_p text default null, cd_mat_comp4_p bigint default null, qt_dose_comp4_p bigint default null, cd_unid_med_dose_comp4_p text default null, cd_mat_comp5_p bigint default null, qt_dose_comp5_p bigint default null, cd_unid_med_dose_comp5_p text default null, cd_mat_comp6_p bigint default null, qt_dose_comp6_p bigint default null, cd_unid_med_dose_comp6_p text default null, cd_mat_comp7_p bigint default null, qt_dose_comp7_p bigint default null, cd_unid_med_dose_comp7_p text default null, nr_sequencia_p bigint default null) FROM PUBLIC;

