-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dpp_us_atual_nasc ( nr_sequencia_p bigint, ie_opcao_p text, ie_pasta_p text, nr_atendimento_p bigint default 0) RETURNS bigint AS $body$
DECLARE


/*	
Opcao					
Semana	S
Dia		D
Semana Considerada : IGCS
Dia Considerada:         IGCD

Pasta
Verificar  DPP US  da pasta Historia Preg.	HP
Verificar  DPP US  da pasta Primeira Cons.	PC
*/
				
qt_semanas_w	double precision;
qt_dias_w	    double precision;
dt_atual_w	    timestamp;
Dt_dpp_us_w	    timestamp;
qt_semana_us_w	double precision;
qt_dia_us_w	    double precision;
qt_dias_dif_w	double precision;
qt_total_dia_w	double precision;
qt_ig_semana_w  double precision;
qt_ig_dia_w     double precision;
qt_dif_w        integer;
nr_sequencia_w  bigint;


BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	select trunc(coalesce(max(dt_nascimento),clock_timestamp()))
	into STRICT   dt_atual_w
	from   nascimento
	where  nr_atendimento = nr_atendimento_p 
	and    pep_consiste_qt_nasc(nr_atendimento_p) <> ' ';

	nr_sequencia_w := nr_sequencia_p;
	
	if (ie_pasta_p = 'NS') and (nr_atendimento_p > 0) then
		nr_sequencia_w := nr_atendimento_p;
	end if;
	
	if (ie_pasta_p in ('HP','NS')) then

		select dt_us,
			   qt_sem_ig_ecografica,
			   qt_ig_dia_us,
			   qt_sem_ig_cronologica,
			   qt_dia_ig_cronologica
		into STRICT   dt_dpp_us_w,
			   qt_semana_us_w,
			   qt_dia_us_w,
               qt_ig_semana_w,
			   qt_ig_dia_w
		from   parto
		where  nr_atendimento = nr_sequencia_w;	
	
	elsif (ie_pasta_p = 'PC') then
	
		select dt_us,
			   qt_ig_sem_us,
			   qt_ig_dia_us,
			   qt_ig_semana,
			   qt_ig_dia
		into STRICT   dt_dpp_us_w,
			   qt_semana_us_w,
			   qt_dia_us_w,
               qt_ig_semana_w,
			   qt_ig_dia_w
		from   med_pac_pre_natal
		where  nr_sequencia = nr_sequencia_w;

	elsif (ie_pasta_p = 'TM') then
	
		select dt_us,
			   qt_ig_sem_us,
			   qt_ig_dia_us,
			   qt_ig_sem,
			   qt_ig_dia
		into STRICT   dt_dpp_us_w,
			   qt_semana_us_w,
			   qt_dia_us_w,
               qt_ig_semana_w,
			   qt_ig_dia_w
		from   enf_tri_medica
		where  nr_sequencia = nr_sequencia_w;				
		
	elsif (ie_pasta_p = 'GV') then
	
		select dt_us,
			   qt_ig_sem_us,
			   qt_ig_dia_us,
			   qt_ig_semana,
			   qt_ig_dia
		into STRICT   dt_dpp_us_w,
			   qt_semana_us_w,
			   qt_dia_us_w,
               qt_ig_semana_w,
			   qt_ig_dia_w
		from   atendimento_gravidez
		where  nr_sequencia = nr_sequencia_w;
		
	elsif (ie_pasta_p = 'PE') then
	
		select qt_ig_sem_us,
			   qt_ig_dia_us,
			   qt_ig_sem,
			   qt_ig_dia
		into STRICT   qt_semana_us_w,
			   qt_dia_us_w,
               qt_ig_semana_w,
			   qt_ig_dia_w
		from   med_pac_pre_natal_evol
		where  nr_sequencia = nr_sequencia_w;
		
	elsif (ie_pasta_p = 'PP') then
	
		select qt_ig_sem_us,
			   qt_ig_dia_us,
			   qt_ig_sem,
			   qt_ig_dia
		into STRICT   qt_semana_us_w,
			   qt_dia_us_w,
               qt_ig_semana_w,
			   qt_ig_dia_w
		from   pre_parto
		where  nr_sequencia = nr_sequencia_w;

	end if;
	
	if (ie_pasta_p = 'NS') then
		select qt_sem_ig_total,
			   qt_dia_ig_total
		into STRICT   qt_ig_semana_w,
		       qt_ig_dia_w
		from   nascimento
		where  nr_atendimento = nr_atendimento_p
		and    nr_sequencia = nr_sequencia_p;
	end if;
	
	if (ie_opcao_p in ('IGCS','IGCD')) then
	
		qt_semanas_w := qt_ig_semana_w - qt_semana_us_w;
		qt_dias_w := qt_ig_dia_w - qt_dia_us_w;
		
		if (qt_semanas_w < 0) then
			qt_semanas_w := qt_semanas_w * -1;
		end if;
		
		if (qt_ig_semana_w <= 8) and (qt_ig_dia_w <= 7) then
			qt_dif_w := 5;
		elsif (qt_ig_semana_w >= 9) and (qt_ig_semana_w <= 15) and (qt_ig_dia_w <= 7) then
			qt_dif_w := 7;
		elsif (qt_ig_semana_w >= 16) and (qt_ig_semana_w <= 21) and (qt_ig_dia_w <= 7) then
			qt_dif_w := 10;
		elsif (qt_ig_semana_w >= 22) and (qt_ig_semana_w <= 27) and (qt_ig_dia_w <= 7) then
			qt_dif_w := 14;
		elsif (qt_ig_semana_w >= 28) then
			qt_dif_w := 21;
		end if;
		
		if (qt_semanas_w <= qt_dif_w) then
			qt_semanas_w := qt_semana_us_w;
			qt_dias_w    := qt_dia_us_w;
		else
			qt_semanas_w := qt_ig_semana_w;
			qt_dias_w    := qt_ig_dia_w;
		end if;
	
		if (ie_opcao_p = 'IGCS') then

			return qt_semanas_w;

		elsif (ie_opcao_p = 'IGCD') then
			
			return qt_dias_w;
			
		end if;
	
	elsif (Dt_dpp_us_w IS NOT NULL AND Dt_dpp_us_w::text <> '') and (qt_semana_us_w IS NOT NULL AND qt_semana_us_w::text <> '') and (qt_dia_us_w IS NOT NULL AND qt_dia_us_w::text <> '') then	
	
		/*If	(trunc(Dt_dpp_us_w) = dt_atual_w) then

			qt_semanas_w 	:= null;    Conforme conversado com Feller, 
			qt_dias_w 	:= null;    nao tera problema em informar a data atual como dpp_us

		else*/
			
		qt_total_dia_w	:= (coalesce(qt_semana_us_w,0) * 7) + coalesce(qt_dia_us_w,0);
		
		if (trunc(Dt_dpp_us_w) <> dt_atual_w) then
		   qt_total_dia_w	:= qt_total_dia_w + (dt_atual_w - trunc(Dt_dpp_us_w));
		end if;
		
		qt_semanas_w	:= trunc(dividir(qt_total_dia_w,7));
		qt_dias_w	:= qt_total_dia_w - (qt_semanas_w * 7);				
				
		
		--end if;
		if (ie_opcao_p = 'S') then

			return qt_semanas_w;

		elsif (ie_opcao_p = 'D') then
			
			return qt_dias_w;
			
		end if;
		
	else
	
		return null;
		
	end if;
	
else
	return null;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dpp_us_atual_nasc ( nr_sequencia_p bigint, ie_opcao_p text, ie_pasta_p text, nr_atendimento_p bigint default 0) FROM PUBLIC;

