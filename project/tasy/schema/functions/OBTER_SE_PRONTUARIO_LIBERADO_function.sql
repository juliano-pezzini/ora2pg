-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_prontuario_liberado ( cd_pessoa_fisica_p text, cd_profissional_p text, nr_item_prontuario_p bigint default 0) RETURNS varchar AS $body$
DECLARE

	/* Retornos
	 *	L = Liberação total do Prontuario
	 *	N = Item não liberado
	 *	P,S,T = retorno de um ou mais dependendo das liberações das regras
	 *		P = Primary Care
	 *		S = Secondary Care
	 *		T = Tertiary Care
	 */
	--Variaveis cursor c01
	nr_seq_lib_pront_w			pf_lib_pront.nr_sequencia%type;
	ie_nivel_atencao_orig_w		pf_lib_pront.ie_nivel_atencao_orig%type;
	ie_nivel_atencao_dest_w		pf_lib_pront.ie_nivel_atencao_dest%type;

	--Variaveis cursor c02
	cd_pessoa_lib_w				pf_lib_pront_regra.cd_pessoa_fisica%type;
	cd_perfil_w					pf_lib_pront_regra.cd_perfil%type;
	nr_seq_equipe_w				pf_lib_pront_regra.nr_seq_equipe%type;
	cd_especialidade_w			pf_lib_pront_regra.cd_especialidade%type;

	--Variaveis cursor c03
	nr_seq_item_pront_w			pf_lib_pront_item.nr_seq_item_pront%type;

	ie_liberacao_total_w		varchar(1);
	ie_lib_total_item_pront_w	varchar(1);
	ie_existe_regra_pront_w		varchar(1);
	ie_existe_regra_w			varchar(1);
	niveis_liberado_w			varchar(10) := '';

	ie_nivel_atencao_perfil_w	perfil.ie_nivel_atencao%type;

c01 CURSOR FOR
SELECT	nr_sequencia, ie_nivel_atencao_orig, ie_nivel_atencao_dest
from	PF_LIB_PRONT a
where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
and		coalesce(a.ie_situacao,'A')	= 'A'
and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
and		coalesce(a.dt_inativacao::text, '') = ''
and		clock_timestamp() between coalesce(a.dt_inicio,clock_timestamp()) and coalesce(a.dt_fim,clock_timestamp())
and		coalesce(a.ie_nivel_atencao_dest,ie_nivel_atencao_perfil_w) = ie_nivel_atencao_perfil_w;

c02 CURSOR FOR
SELECT	b.cd_pessoa_fisica, b.cd_perfil, b.nr_seq_equipe, b.cd_especialidade
from 	pf_lib_pront_regra b
where 	b.nr_seq_lib_pront 	= nr_seq_lib_pront_w
and		obter_se_regra_pront_lib(b.nr_seq_lib_pront, b.cd_perfil, b.cd_especialidade, b.nr_seq_equipe, cd_profissional_p) = 'S'
order	by cd_perfil,cd_especialidade, nr_seq_equipe, cd_pessoa_fisica;

c03 CURSOR FOR
SELECT	c.nr_seq_item_pront
from	pf_lib_pront_item c
where	c.nr_seq_lib_pront = nr_seq_lib_pront_w
and		c.nr_seq_item_pront = nr_item_prontuario_p
order	by c.ie_lib_total desc;


BEGIN
	ie_nivel_atencao_perfil_w := wheb_assist_pck.get_nivel_atencao_perfil;

	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

		select	coalesce(max('S'),'N')
		into STRICT	ie_liberacao_total_w
		from	PF_LIB_PRONT a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
		and		coalesce(a.ie_situacao,'A')	= 'A'
		and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and		coalesce(a.dt_inativacao::text, '') = ''
		and		clock_timestamp() between coalesce(a.dt_inicio,clock_timestamp()) and coalesce(a.dt_fim,clock_timestamp())
		and		ie_liberacao_total = 'S';

		if (ie_liberacao_total_w = 'S') then
			return 'L';
		end if;

		open c01;
		loop
		fetch c01 into	nr_seq_lib_pront_w,
						ie_nivel_atencao_orig_w,
						ie_nivel_atencao_dest_w;
		if (c01%rowcount = 0) then
			return ie_nivel_atencao_perfil_w;
		end if;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				if(ie_nivel_atencao_perfil_w IS NOT NULL AND ie_nivel_atencao_perfil_w::text <> '' AND ie_nivel_atencao_dest_w = ie_nivel_atencao_perfil_w) then
						if (nr_seq_lib_pront_w IS NOT NULL AND nr_seq_lib_pront_w::text <> '') then

							select	coalesce(max('S'),'N')
							into STRICT 	ie_existe_regra_w
							from 	pf_lib_pront_regra b
							where 	b.nr_seq_lib_pront 	= nr_seq_lib_pront_w;

							if (ie_existe_regra_w = 'N') then
								if (ie_nivel_atencao_perfil_w <> 'S' or (ie_nivel_atencao_perfil_w = 'S' and ie_nivel_atencao_orig_w <> 'S')) then
									niveis_liberado_w := ie_nivel_atencao_orig_w;
								elsif (ie_nivel_atencao_perfil_w = 'S' and ie_nivel_atencao_orig_w = 'S' ) then
									niveis_liberado_w := 'X';
								end if;
								if (ie_nivel_atencao_perfil_w <> 'S' and ie_nivel_atencao_perfil_w <> niveis_liberado_w) then
									niveis_liberado_w := ie_nivel_atencao_perfil_w || ',' || ie_nivel_atencao_orig_w;
								end if;
							else
								open c02;
								loop
								fetch c02 into	cd_pessoa_lib_w,
												cd_perfil_w,
												nr_seq_equipe_w,
												cd_especialidade_w;
								EXIT WHEN NOT FOUND; /* apply on c02 */
									begin
										if ( position(ie_nivel_atencao_orig_w in coalesce(niveis_liberado_w,'X')) = 0) then
											if (ie_nivel_atencao_perfil_w = 'S' and ie_nivel_atencao_orig_w = 'S' ) then
												niveis_liberado_w := 'X';
											end if;
											niveis_liberado_w := niveis_liberado_w || ',' || ie_nivel_atencao_orig_w;
										end if;
									end;
								end loop;
								close c02;
							end if;

							if (nr_item_prontuario_p > 0) then

								select	coalesce(max('S'),'N')
								into STRICT	ie_lib_total_item_pront_w
								from	pf_lib_pront_item c
								where	c.nr_seq_lib_pront = nr_seq_lib_pront_w
								and		c.ie_lib_total = 'S';

								if (ie_lib_total_item_pront_w = 'S') then
									if (niveis_liberado_w IS NOT NULL AND niveis_liberado_w::text <> '') then
										return ie_nivel_atencao_perfil_w || ',' || niveis_liberado_w;
									end if;
								end if;

								if ((nr_item_prontuario_p IS NOT NULL AND nr_item_prontuario_p::text <> '') and ie_lib_total_item_pront_w = 'N') then

									select	coalesce(max('S'),'N')
									into STRICT	ie_existe_regra_pront_w
									from	pf_lib_pront_item c
									where	c.nr_seq_lib_pront = nr_seq_lib_pront_w;

									if (ie_existe_regra_pront_w = 'S') then
										open c03;
										loop
										fetch c03 into nr_seq_item_pront_w;
										if (c03%rowcount = 0) then
											return ie_nivel_atencao_perfil_w;
										end if;
										EXIT WHEN NOT FOUND; /* apply on c03 */
											begin
												if ((nr_seq_item_pront_w IS NOT NULL AND nr_seq_item_pront_w::text <> '') and nr_seq_item_pront_w = nr_item_prontuario_p) then
													if (position(ie_nivel_atencao_orig_w in niveis_liberado_w) = 0) then
														niveis_liberado_w := niveis_liberado_w || ',' || ie_nivel_atencao_orig_w;
													end if;
												end if;
											end;
										end loop;
										close c03;
									end if;
								end if;
							end if;
						end if;

						if (niveis_liberado_w IS NOT NULL AND niveis_liberado_w::text <> '') then
							if (ie_nivel_atencao_perfil_w <> 'S' and ie_nivel_atencao_orig_w <> 'S' ) then
								return niveis_liberado_w;
							else
								return ie_nivel_atencao_perfil_w || ',' || niveis_liberado_w;
							end if;
						end if;
				end if;
			end;
		end loop;
		close c01;
	end if;

	return ie_nivel_atencao_perfil_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_prontuario_liberado ( cd_pessoa_fisica_p text, cd_profissional_p text, nr_item_prontuario_p bigint default 0) FROM PUBLIC;

