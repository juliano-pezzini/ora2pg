-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION time_format_rec ( end_time TIMESTAMP, start_time TIMESTAMP) RETURNS varchar AS $body$
DECLARE

Validation_time	varchar(255);
time_in_sec bigint;
time_in_sec_and_mill double precision;
time_in_mill double precision;

exp_day varchar(60);
exp_hour varchar(60);
exp_minute varchar(60);
exp_second varchar(60);
exp_millsecond varchar(60);


BEGIN

select round(extract( day from (end_time - start_time) )*86400 +
extract( hour from (end_time - start_time) )*3600 +
extract( minute from (end_time - start_time) )*60 +
extract( second from (end_time - start_time) ) ) into STRICT time_in_sec
;

exp_day := obter_desc_expressao(326313);
exp_hour := obter_desc_expressao(599327);
exp_minute :=  obter_desc_expressao(305060);
exp_second := obter_desc_expressao(866116);
exp_millsecond := obter_desc_expressao(1012123);

IF (time_in_sec >= 86400) THEN

    IF (time_in_sec = 86400) THEN
    Validation_time := '24 Hours';
    ELSE
    select floor(time_in_sec/86400) || ' Days ' ||
       to_char(to_date(mod(time_in_sec,86400) ,'sssss'),'hh24 "Hours" mi "Minutes" ss "Seconds"') INTO STRICT Validation_time
;
    END IF;

ELSIF (time_in_sec < 86400) AND (time_in_sec >= 3600) THEN

    IF (mod(time_in_sec,3600) = 0) THEN
    Validation_time := (time_in_sec/3600) || ' Hours';
    ELSE
    select to_char(to_date(mod(time_in_sec,86400) ,'sssss'),'hh24 "Hours" mi "Minutes" ss "Seconds"') INTO STRICT Validation_time
;
    END IF;

ELSIF (time_in_sec < 3600) AND (time_in_sec >= 60) THEN

    IF (mod(time_in_sec,60) = 0) THEN
    Validation_time := (time_in_sec/60) || ' Minutes';
    ELSE
    select to_char(to_date(mod(time_in_sec,3600) ,'sssss'),'mi "Minutes" ss "Seconds"') INTO STRICT Validation_time
;
    END IF;

ELSIF (time_in_sec < 60) THEN

    SELECT EXTRACT(SECOND from (end_time - start_time)) INTO STRICT time_in_sec_and_mill;
    IF (time_in_sec_and_mill > 1) THEN
    select replace(mod(time_in_sec_and_mill,1),'.',' ') into STRICT time_in_mill;
    select cast(time_in_sec_and_mill as integer) INTO STRICT time_in_sec_and_mill;
    Validation_time := time_in_sec_and_mill || ' Seconds ' || time_in_mill || ' Milliseconds';
    ELSE
    time_in_sec_and_mill := round(time_in_sec_and_mill * 1000);
    Validation_time := time_in_sec_and_mill || ' Milliseconds';
    END IF;

END IF;
Validation_time:= REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(Validation_time, 'Days' , exp_day),'Hours' , exp_hour), 'Minutes' , exp_minute),'Seconds' , exp_second), 'Milliseconds' , exp_millsecond), ',', ' ');
RETURN Validation_time;
End;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION time_format_rec ( end_time TIMESTAMP, start_time TIMESTAMP) FROM PUBLIC;

