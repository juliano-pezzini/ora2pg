-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION san_obter_se_hemocomp_inutil ( nr_seq_reserva_p bigint, nr_seq_producao_p text) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar se existe hemocomponente inativo para a reserva ou para a reserva de produção.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_retorno_w		varchar(255)	:= 'N';
ds_lista_w              varchar(100);
nr_pos_virgula_w	bigint;
nr_seq_producao_w		bigint;


BEGIN

if (nr_seq_reserva_p IS NOT NULL AND nr_seq_reserva_p::text <> '') then
	select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ds_retorno_w
	from	san_producao		a,
		san_reserva_prod	b
	where	a.nr_sequencia		= b.nr_seq_producao
	and	b.nr_seq_reserva	= nr_seq_reserva_p
	and	(a.nr_seq_inutil IS NOT NULL AND a.nr_seq_inutil::text <> '');
elsif (nr_seq_producao_p IS NOT NULL AND nr_seq_producao_p::text <> '') then

        ds_lista_w :=  nr_seq_producao_p;
        while((ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') and ds_retorno_w <> 'S') loop
	begin
		nr_pos_virgula_w := position(',' in ds_lista_w);
		if (coalesce(nr_pos_virgula_w,0) > 0) then
			begin
			nr_seq_producao_w		:= substr(ds_lista_w,0,nr_pos_virgula_w-1);
			ds_lista_w	:= substr(ds_lista_w,nr_pos_virgula_w+1,length(ds_lista_w));
			end;
		else
			begin
			nr_seq_producao_w		:= (ds_lista_w)::numeric;
			ds_lista_w	:= null;
			end;
		end if;
		if (coalesce(nr_seq_producao_w,0) > 0) then
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ds_retorno_w
			from	san_producao	a
			where	a.nr_sequencia	= nr_seq_producao_w
			and	(a.nr_seq_inutil IS NOT NULL AND a.nr_seq_inutil::text <> '');
		end if;
	end;
	end loop;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION san_obter_se_hemocomp_inutil ( nr_seq_reserva_p bigint, nr_seq_producao_p text) FROM PUBLIC;

