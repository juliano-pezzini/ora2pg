-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_tit_pagamento ( nr_titulo_p bigint, nr_documento_p bigint, ie_tipo_documento_p text, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


nr_sequencia_w	bigint;
dt_liberacao_w	timestamp;
dt_reprovacao_w	timestamp;
aprovado_w constant integer := 297727; -- Aprovado
aprovado_sem_lib_w constant integer := 301576; -- Aprovado - Sem necessidade de liberacao
reprovado_w constant integer := 297728; -- Reprovado
pendente_w constant integer := 297726; -- Pendente
nr_text_w integer;

/*
ie_tipo_documento_p
B - Bordero a pagar
P - Pagamento escritural
T - Titulo a pagar
*/
BEGIN

if (ie_tipo_documento_p = 'B') then
	select	max(nr_sequencia),
		max(dt_liberacao),
		max(dt_reprovacao)
	into STRICT	nr_sequencia_w,
		dt_liberacao_w,
		dt_reprovacao_w
	from	conta_pagar_lib a
	where	a.nr_bordero		= nr_documento_p
	and	a.nr_titulo		= nr_titulo_p
	and	a.nm_usuario_lib		= nm_usuario_p;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then nr_text_w := aprovado_w;
		elsif (dt_reprovacao_w IS NOT NULL AND dt_reprovacao_w::text <> '') then nr_text_w := reprovado_w;
    else nr_text_w := pendente_w;
		end if;
    else nr_text_w := aprovado_sem_lib_w;
	end if;

elsif (ie_tipo_documento_p = 'P') then

	select	max(nr_sequencia),
		max(dt_liberacao),
		max(dt_reprovacao)
	into STRICT	nr_sequencia_w,
		dt_liberacao_w,
		dt_reprovacao_w
	from	conta_pagar_lib a
	where	a.nr_seq_banco_escrit	= nr_documento_p
	and	a.nr_titulo		= nr_titulo_p
	and	a.nm_usuario_lib		= nm_usuario_p;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then nr_text_w := aprovado_w;
		elsif (dt_reprovacao_w IS NOT NULL AND dt_reprovacao_w::text <> '') then nr_text_w := reprovado_w;
    else nr_text_w := pendente_w;
		end if;
    else nr_text_w := aprovado_sem_lib_w;
	end if;

elsif (ie_tipo_documento_p = 'T') then

	select	max(nr_sequencia),
		max(dt_liberacao),
		max(dt_reprovacao)
	into STRICT	nr_sequencia_w,
		dt_liberacao_w,
		dt_reprovacao_w
	from	conta_pagar_lib a
	where	coalesce(a.nr_seq_banco_escrit::text, '') = ''
	and	coalesce(a.nr_bordero::text, '') = ''
	and	a.nr_titulo		= nr_titulo_p
	and	a.nm_usuario_lib		= nm_usuario_p;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then nr_text_w := aprovado_w;
		elsif (dt_reprovacao_w IS NOT NULL AND dt_reprovacao_w::text <> '') then nr_text_w := reprovado_w;
    else nr_text_w := pendente_w;
		end if;

    else nr_text_w := aprovado_sem_lib_w;
	end if;

end if;

return wheb_mensagem_pck.get_texto(nr_text_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_tit_pagamento ( nr_titulo_p bigint, nr_documento_p bigint, ie_tipo_documento_p text, nm_usuario_p text) FROM PUBLIC;

