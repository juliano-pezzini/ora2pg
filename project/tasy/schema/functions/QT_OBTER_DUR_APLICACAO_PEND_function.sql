-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION qt_obter_dur_aplicacao_pend (ds_dia_ciclo_p text, nr_seq_prot_medic_p bigint, cd_protocolo_p bigint, nr_seq_atendimento_p bigint, dt_agenda_p timestamp, nr_seq_pendencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


qt_retorno_w			bigint;
ie_tempo_medic_w		varchar(1)	:= 'N';
ie_classif_w			varchar(1)	:= 'N';
ds_retorno_w			varchar(255);
ds_classif_w			varchar(255);

qt_hora_aplicacao_w		smallint;
qt_tempo_aplic_soluc_w		double precision;
qt_min_dispositivo_w		bigint;
qt_min_aplicacao_w		smallint;
qt_min_dispositivo_soluc_w 	bigint;
qt_tempo_agenda_w		bigint;
nr_ciclo_w			integer;

qt_duracao_w			bigint    := 0;

C01 CURSOR FOR
	SELECT	coalesce(qt_hora_aplicacao,0),
		coalesce(qt_min_aplicacao,0),
		qt_duracao_dispositivo_inf(ie_bomba_infusao)
	from	paciente_atend_medic
	where	nr_seq_atendimento	= nr_seq_atendimento_p
	and	coalesce(nr_seq_diluicao::text, '') = ''
	and	coalesce(nr_seq_solucao::text, '') = ''
	order by 1;

C02 CURSOR FOR
	SELECT	coalesce(qt_tempo_aplicacao,0),
		qt_duracao_dispositivo_inf(ie_bomba_infusao)
	from	paciente_atend_soluc
	where	nr_seq_atendimento	= nr_seq_atendimento_p;


BEGIN

ie_tempo_medic_w	:= coalesce(Obter_Valor_Param_Usuario(865, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_classif_w		:= coalesce(Obter_Valor_Param_Usuario(865, 89, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

select	max(qt_tempo_agenda),
	max(nr_ciclo)
into STRICT	qt_tempo_agenda_w,
	nr_ciclo_w
from	paciente_atendimento
where	nr_seq_atendimento = nr_seq_atendimento_p;

if (qt_tempo_agenda_w IS NOT NULL AND qt_tempo_agenda_w::text <> '') then
	qt_retorno_w := qt_tempo_agenda_w;
	ds_retorno_w := qt_retorno_w;
else
	if (ie_tempo_medic_w = 'C') then

		qt_retorno_w	:= coalesce(qt_obter_tempo_dur_dia(ds_dia_ciclo_p, nr_seq_prot_medic_p, cd_protocolo_p, nr_ciclo_w),0);

	elsif (ie_tempo_medic_w = 'S') then


		open C01;
		loop
		fetch C01 into
			qt_hora_aplicacao_w,
			qt_min_aplicacao_w,
			qt_min_dispositivo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			if (qt_min_dispositivo_w IS NOT NULL AND qt_min_dispositivo_w::text <> '') then
				qt_duracao_w	:= qt_duracao_w + qt_min_dispositivo_w;
			else
				qt_duracao_w	:= qt_duracao_w + qt_min_aplicacao_w + (coalesce(qt_hora_aplicacao_w,0) * 60);
			end if;

			end;
		end loop;
		close C01;


		open C02;
		loop
		fetch C02 into
			qt_tempo_aplic_soluc_w,
			qt_min_dispositivo_soluc_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			if (qt_min_dispositivo_soluc_w IS NOT NULL AND qt_min_dispositivo_soluc_w::text <> '') then
				qt_duracao_w	:= qt_duracao_w + qt_min_dispositivo_soluc_w;
			else
				qt_duracao_w	:= qt_duracao_w + (coalesce(qt_tempo_aplic_soluc_w,0) * 60);
			end if;

			end;
		end loop;
		close C02;

		qt_retorno_w	:= qt_duracao_w;

	elsif (ie_tempo_medic_w = 'T') then

		select	max(a.qt_tempo_medic)
		into STRICT	qt_retorno_w
		from	paciente_setor a,
			paciente_atendimento b
		where	b.nr_seq_pend_agenda	= nr_seq_pendencia_p
		and	a.nr_seq_paciente	= b.nr_seq_paciente
		and	trunc(coalesce(b.dt_real, b.dt_prevista))	= trunc(dt_agenda_p);

		if (coalesce(qt_retorno_w::text, '') = '') then
			open C01;
			loop
			fetch C01 into
				qt_hora_aplicacao_w,
				qt_min_aplicacao_w,
				qt_min_dispositivo_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				if (qt_min_dispositivo_w IS NOT NULL AND qt_min_dispositivo_w::text <> '') then
					qt_duracao_w	:= qt_duracao_w + qt_min_dispositivo_w;
				else
					qt_duracao_w	:= qt_duracao_w + qt_min_aplicacao_w + (coalesce(qt_hora_aplicacao_w,0) * 60);
				end if;

				end;
			end loop;
			close C01;


			open C02;
			loop
			fetch C02 into
				qt_tempo_aplic_soluc_w,
				qt_min_dispositivo_soluc_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				if (qt_min_dispositivo_soluc_w IS NOT NULL AND qt_min_dispositivo_soluc_w::text <> '') then
					qt_duracao_w	:= qt_duracao_w + qt_min_dispositivo_soluc_w;
				else
					qt_duracao_w	:= qt_duracao_w + (coalesce(qt_tempo_aplic_soluc_w,0) * 60);
				end if;

				end;
			end loop;
			close C02;

			qt_retorno_w	:= qt_duracao_w;
		end if;

		if (qt_retorno_w = 0) then
			select	coalesce(sum(nr_duracao),0)
			into STRICT	qt_retorno_w
			from	protocolo_medic_dur_dia
			where	ds_dia_ciclo 		= ds_dia_ciclo_p
			and	nr_seq_prot_medic	= nr_seq_prot_medic_p
			and	cd_protocolo		= cd_protocolo_p
			and	((nr_ciclo		= nr_ciclo_w) or (coalesce(nr_ciclo::text, '') = ''));
		end if;

	elsif (ie_tempo_medic_w = 'D') then

		qt_retorno_w	:= coalesce(qt_obter_tempo_dur_dia(ds_dia_ciclo_p, nr_seq_prot_medic_p, cd_protocolo_p, nr_ciclo_w),0);

		if (qt_retorno_w = 0) then
			select	max(a.qt_tempo_medic)
			into STRICT	qt_retorno_w
			from	paciente_setor a,
				paciente_atendimento b
			where	b.nr_seq_pend_agenda	= nr_seq_pendencia_p
			and	a.nr_seq_paciente	= b.nr_seq_paciente
			and	trunc(coalesce(b.dt_real, b.dt_prevista))	= trunc(dt_agenda_p);
		end if;

	elsif (ie_tempo_medic_w = 'M') then
		select	coalesce(sum(a.qt_hora_aplicacao),0),
				coalesce(sum(a.qt_min_aplicacao),0)
		into STRICT	qt_hora_aplicacao_w,
				qt_min_aplicacao_w
		from	paciente_protocolo_medic a,
				paciente_atendimento b
		where	a.nr_seq_paciente = b.nr_seq_paciente
		and		b.nr_seq_atendimento	= nr_seq_atendimento_p
		and		obter_se_contido_char(ds_dia_ciclo_p, a.ds_dias_aplicacao)	= 'S';


		if (qt_hora_aplicacao_w > 0) or (qt_min_aplicacao_w > 0) then
			qt_retorno_w	:= ((coalesce(qt_hora_aplicacao_w,0) * 60) + coalesce(qt_min_aplicacao_w,0));

		else
			if (coalesce(qt_retorno_w,0) = 0) then
				select	max(a.qt_tempo_medic)
				into STRICT	qt_retorno_w
				from	paciente_setor a,
						paciente_atendimento b
				where	b.nr_seq_pend_agenda	= nr_seq_pendencia_p
				and		a.nr_seq_paciente	= b.nr_seq_paciente
				and		trunc(coalesce(b.dt_real, b.dt_prevista))	= trunc(dt_agenda_p);
			end if;
		end if;
	else
		select	max(a.qt_tempo_medic)
		into STRICT	qt_retorno_w
		from	paciente_setor a,
			paciente_atendimento b
		where	b.nr_seq_pend_agenda	= nr_seq_pendencia_p
		and	a.nr_seq_paciente	= b.nr_seq_paciente
		and	trunc(coalesce(b.dt_real, b.dt_prevista))	= trunc(dt_agenda_p);

	end if;

	if (ie_classif_w = 'S') then
		select	max(ds_classificacao)
		into STRICT	ds_classif_w
		from	qt_classif_duracao
		where	nr_minuto_duracao = qt_retorno_w;
	end if;

	if (ds_classif_w IS NOT NULL AND ds_classif_w::text <> '') then
		ds_retorno_w := substr(qt_retorno_w||' / '||ds_classif_w,1,255);
	else
		ds_retorno_w := qt_retorno_w;
	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION qt_obter_dur_aplicacao_pend (ds_dia_ciclo_p text, nr_seq_prot_medic_p bigint, cd_protocolo_p bigint, nr_seq_atendimento_p bigint, dt_agenda_p timestamp, nr_seq_pendencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

