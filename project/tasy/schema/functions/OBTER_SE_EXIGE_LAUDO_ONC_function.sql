-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_exige_laudo_onc ( nr_seq_paciente_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
cd_protocolo_w				bigint;	
nr_seq_prot_medicacao_w 	integer;	
ie_exige_laudo_sus_w 		varchar(1);
nr_seq_laudo_sus_w 			bigint;
cd_pessoa_fisica_w 			bigint := 0;
qt_laudo_prenchido_w 		bigint := 0;
ie_verifica_Laudo_SUS_w		varchar(3);
ie_verifica_convenio_sus_w	varchar(3);
ie_tipo_convenio_w			smallint;	
	 
ie_retorno_w 				varchar(1) := 'N';
	

BEGIN 
 
 
ie_verifica_Laudo_SUS_w := obter_param_usuario(281, 1464, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_verifica_Laudo_SUS_w);
ie_verifica_convenio_sus_w := obter_param_usuario(281, 996, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_verifica_convenio_sus_w);
 
 
 
select	max(cd_protocolo), 					--1 
		coalesce(max(nr_seq_medicacao),0),				--2 
		coalesce(max(nr_seq_laudo_sus),0),				--3 
		max(cd_pessoa_fisica)				--4 
into STRICT	cd_protocolo_w,					--1 
		nr_seq_prot_medicacao_w,		--2 
		nr_seq_laudo_sus_w,				--3 
		cd_pessoa_fisica_w 				--4 
from	paciente_setor 
where	nr_seq_paciente = nr_seq_paciente_p;
 
 
if (nr_seq_prot_medicacao_w > 0) then 
 
	select	UPPER(coalesce(max(ie_exigir_laudo_sus),'N')) 
	into STRICT	ie_exige_laudo_sus_w 
	from	protocolo_medicacao pm 
	where 	pm.cd_protocolo 	=	cd_protocolo_w 
	and		pm.nr_sequencia 	=	nr_seq_prot_medicacao_w;
	 
	if (ie_verifica_Laudo_SUS_w = 'S') and (coalesce(nr_atendimento_p,0) > 0 ) then 
		 
		if (ie_verifica_convenio_sus_w = 'N') then 
		 
			select 	max(IE_TIPO_CONVENIO) 
			into STRICT	ie_tipo_convenio_w 
			from  	atendimento_paciente 
			where	nr_Atendimento = nr_atendimento_p;
			 
			if (ie_tipo_convenio_w <> 3) then 
		 
					ie_exige_laudo_sus_w := 'N';
		 
			end if;
		 
		end if;
		 
	 
		select	count(*) 
		into STRICT	qt_laudo_prenchido_w 
		from	sus_laudo_paciente 
		where	nr_atendimento	=	nr_atendimento_p;	
	 
	 
	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')	then 
		 
		select	count(*) 
		into STRICT	qt_laudo_prenchido_w 
		from	sus_laudo_paciente 
		where	cd_pessoa_fisica	=	cd_pessoa_fisica_w;
		 
	end if;
			 
	if (ie_exige_laudo_sus_w = 'S')	then 
		 
		if (nr_seq_laudo_sus_w = 0 
				and	qt_laudo_prenchido_w	>	0 
				and ie_verifica_Laudo_SUS_w <> 'N')	then 
			ie_retorno_w := 'V';
		elsif (qt_laudo_prenchido_w	=	0)	then 
			ie_retorno_w := 'P';
		elsif (nr_seq_laudo_sus_w	>	0)	then 
			ie_retorno_w := 'N';
		end if;
	else 
		ie_retorno_w := 'N';
	end if;
	 
end if;
 
return ie_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_exige_laudo_onc ( nr_seq_paciente_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

