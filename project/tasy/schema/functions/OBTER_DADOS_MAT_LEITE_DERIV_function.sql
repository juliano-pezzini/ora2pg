-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_mat_leite_deriv ( dt_inicio_prescr_p timestamp, nr_atendimento_p bigint, ie_tipo_p text, nr_seq_classif_p bigint default null, ie_tab_p text default null) RETURNS varchar AS $body$
DECLARE

/*
Tipos
    TI - Total de classificações iguais
    TD - Total de classificações diferentes
    DC - Descrição da classificações
*/
ds_classif_w	varchar(250);
ds_dado_w	varchar(4000);
qt_classif_w	bigint;

C01 CURSOR FOR
	SELECT	distinct obter_classif_leite_deriv(a.nr_seq_classif)
	from	nutricao_leite_deriv a,
		prescr_material b,
		prescr_medica c
	where	c.nr_atendimento = nr_atendimento_p
	and	c.dt_inicio_prescr = dt_inicio_prescr_p
	and	c.nr_prescricao = b.nr_prescricao
	and	(b.nr_seq_leite_deriv IS NOT NULL AND b.nr_seq_leite_deriv::text <> '')
	and	coalesce(b.ie_suspenso,'N') = 'N'
	and	b.cd_material = a.cd_material
	and coalesce(a.ie_situacao,'A') = 'A'
	order by 1;

BEGIN

if (ie_tipo_p = 'DC') then

	open C01;
	loop
	fetch C01 into
		ds_classif_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			if (ds_dado_w IS NOT NULL AND ds_dado_w::text <> '') then
				ds_dado_w := substr(ds_dado_w || coalesce(ie_tab_p,chr(10) || '    ' ),1,4000);
			elsif (coalesce(ie_tab_p::text, '') = '') then
				ds_dado_w := '    ';
			end if;

			ds_dado_w := substr(ds_dado_w || ds_classif_w,1,4000);
		end;
	end loop;
	close C01;

elsif (ie_tipo_p = 'TI') then

	select	count(*)
	into STRICT	qt_classif_w
	from	nutricao_leite_deriv a,
		prescr_material b,
		prescr_medica c
	where	c.nr_atendimento = nr_atendimento_p
	and	c.dt_inicio_prescr = dt_inicio_prescr_p
	and	c.nr_prescricao = b.nr_prescricao
	and	(b.nr_seq_leite_deriv IS NOT NULL AND b.nr_seq_leite_deriv::text <> '')
	and	coalesce(b.ie_suspenso,'N') = 'N'
	and	b.cd_material = a.cd_material
	and coalesce(a.ie_situacao,'A') = 'A'
	and	a.nr_seq_classif = nr_seq_classif_p;

elsif (ie_tipo_p = 'TD') then

	select	count(distinct a.nr_seq_classif)
	into STRICT	qt_classif_w
	from	nutricao_leite_deriv a,
		prescr_material b,
		prescr_medica c
	where	c.nr_atendimento = nr_atendimento_p
	and	c.dt_inicio_prescr = dt_inicio_prescr_p
	and	c.nr_prescricao = b.nr_prescricao
	and	(b.nr_seq_leite_deriv IS NOT NULL AND b.nr_seq_leite_deriv::text <> '')
	and	coalesce(b.ie_suspenso,'N') = 'N'
	and	b.cd_material = a.cd_material
	and coalesce(a.ie_situacao,'A') = 'A'
	and	a.nr_seq_classif <> nr_seq_classif_p;

end if;

if (ie_tipo_p <> 'DC') then
	ds_dado_w	:= to_char(qt_classif_w);
end if;

return	ds_dado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_mat_leite_deriv ( dt_inicio_prescr_p timestamp, nr_atendimento_p bigint, ie_tipo_p text, nr_seq_classif_p bigint default null, ie_tab_p text default null) FROM PUBLIC;

