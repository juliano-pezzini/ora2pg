-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_limite_envio_scs ( nr_seq_guia_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


/*
IE_opcao_p
V - Varchar formatado Hora:min
N - Number
*/
qt_materiais_guia_w		bigint;
ie_tipo_processo_w		varchar(1);
nr_seq_unimed_exec_w		bigint;
nr_seq_regra_w			bigint;
dt_solicitacao_w		timestamp;
ds_retorno_w			varchar(255) := '';
qt_tempo_sem_mat_w		double precision;
dt_limite_w			timestamp;
qt_tempo_com_mat_w		double precision;
nr_seq_segurado_w		bigint;
ie_tipo_segurado_w		varchar(2);


BEGIN

if (coalesce(nr_seq_guia_p,0) > 0) then

	select	nr_seq_uni_exec,
		ie_tipo_processo,
		dt_solicitacao,
		nr_seq_segurado
	into STRICT	nr_seq_unimed_exec_w,
		ie_tipo_processo_w,
		dt_solicitacao_w,
		nr_seq_segurado_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_p
	and	cd_estabelecimento = cd_estabelecimento_p;
	/*Obter se o usuário é eventual. Se for a regra não se aplica.*/

	select	ie_tipo_segurado
	into STRICT	ie_tipo_segurado_w
	from	pls_segurado
	where 	nr_sequencia = nr_seq_segurado_w;

	if	((coalesce(nr_seq_unimed_exec_w,0) > 0) and (coalesce(ie_tipo_processo_w,'M') = 'I') and (dt_solicitacao_w IS NOT NULL AND dt_solicitacao_w::text <> '') and (ie_tipo_segurado_w not in ('I','H')))  then

		/*Obter se a guia possui materiais*/

		select	count(*)
		into STRICT	qt_materiais_guia_w
		from	pls_guia_plano_mat
		where	nr_seq_guia = nr_seq_guia_p;

		/*Obter regra. */

		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	pls_regra_limite_envio_scs a
		where (a.nr_seq_congenere = nr_seq_unimed_exec_w);

		/*Se não existir regra especifica para a cooperativa verificar se existe regra geral.*/

		if (coalesce(nr_seq_regra_w,0) = 0) then

			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_regra_limite_envio_scs a
			where (coalesce(a.nr_seq_congenere,0) = 0);

		end if;

		/*Se existir uma regra verifica-se as horas cadastradas*/

		if (coalesce(nr_seq_regra_w,0) > 0) then

			/*Se não existir material na conta deve-se pegar somente o tempo do procedimento*/

			if (qt_materiais_guia_w = 0) then

				select	qt_tempo_sem_mat
				into STRICT	qt_tempo_sem_mat_w
				from	pls_regra_limite_envio_scs
				where	nr_sequencia = nr_seq_regra_w;

				dt_limite_w := dt_solicitacao_w + (qt_tempo_sem_mat_w/24);

				ds_retorno_w := (dt_limite_w - clock_timestamp()) * 24;

			else
				/*Se existir material  */

				select	qt_tempo_com_mat
				into STRICT	qt_tempo_com_mat_w
				from	pls_regra_limite_envio_scs
				where	nr_sequencia = nr_seq_regra_w;

				dt_limite_w := dt_solicitacao_w + (qt_tempo_com_mat_w/24);

				ds_retorno_w := (dt_limite_w - clock_timestamp()) * 24;

			end if;

			if (coalesce(ie_opcao_p, 'N') = 'V') then

				/*Formatação de hora*/

				ds_retorno_w := coalesce(substr(ds_retorno_w,1,position(',' in ds_retorno_w)-1),0) ||':'|| substr((substr(ds_retorno_w,position(',' in ds_retorno_w)+1,255) * 60), 1, 2);

			end if;

		end if;

	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_limite_envio_scs ( nr_seq_guia_p bigint, ie_opcao_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

