-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_exige_obs_aud ( nr_seq_auditoria_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w			varchar(1)	:= 'N';
ds_observacao_w			varchar(4000);
ie_existe_regra_w		varchar(1)	:= 'N';
nr_seq_auditoria_w		bigint;
nr_seq_auditoria_item_w		bigint;
cd_procedimento_w		bigint;
nr_seq_material_w		bigint;
nr_seq_mat_origem_w		bigint;
nr_seq_proc_origem_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_regra_exige_obs_w	bigint;
nr_seq_grupo_servico_w		bigint;
nr_seq_grupo_material_w		bigint;
qt_registros_w			bigint;
dt_auditoria_w			timestamp;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_regra_exige_obs_aud 
	where	dt_auditoria_w	>= dt_inicio_vigencia 
	and 	dt_auditoria_w	<= coalesce(dt_fim_vigencia,clock_timestamp()) 
	and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S') 
	
UNION
 
	SELECT	nr_sequencia 
	from	pls_regra_exige_obs_aud 
	where	dt_auditoria_w	>= dt_inicio_vigencia 
	and 	dt_auditoria_w	<= coalesce(dt_fim_vigencia,clock_timestamp()) 
	and 	pls_obter_se_controle_estab('RE') = 'N';
	
 
C02 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced, 
		nr_seq_material 
	from	pls_auditoria_item 
	where	nr_seq_auditoria	= nr_seq_auditoria_p 
	and	ie_status	<>'N';


BEGIN 
 
begin 
	select	dt_auditoria, 
		trim(both substr(ds_observacao,1,4000)) 
	into STRICT	dt_auditoria_w, 
		ds_observacao_w 
	from	pls_auditoria 
	where	nr_sequencia	= nr_seq_auditoria_p;
	 
exception 
when others then 
	dt_auditoria_w	:= null;
	ds_observacao_w	:= null;
end;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_exige_obs_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	open C02;
	loop 
	fetch C02 into 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pls_regra_exige_obs_item 
		where	nr_seq_exige_obs_aud	= nr_seq_regra_exige_obs_w 
		and (coalesce(cd_procedimento::text, '') = '' or cd_procedimento = cd_procedimento_w) 
		and (coalesce(ie_origem_proced::text, '') = '' or ie_origem_proced = ie_origem_proced_w) 
		and (coalesce(nr_seq_material::text, '') = '' or nr_seq_material = nr_seq_material_w)	 
		and (coalesce(nr_seq_grupo_servico::text, '') = ''	or (pls_se_grupo_preco_servico(nr_seq_grupo_servico, cd_procedimento_w, ie_origem_proced_w)	= 'S')) 
		and (coalesce(nr_seq_grupo_material::text, '') = '' or (pls_se_grupo_preco_material(nr_seq_grupo_material, nr_seq_material_w) = 'S'));
		 
		if (qt_registros_w	> 0) then 
			ie_existe_regra_w	:= 'S';
			exit;
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
if (ie_existe_regra_w	= 'S') and (coalesce(ds_observacao_w::text, '') = '') then 
	ds_retorno_w	:= 'S';
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_exige_obs_aud ( nr_seq_auditoria_p bigint) FROM PUBLIC;

