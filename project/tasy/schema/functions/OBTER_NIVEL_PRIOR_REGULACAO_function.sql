-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_nivel_prior_regulacao ( NR_ATENDIMENTO_P bigint, CD_PESSOA_FISICA_P text, CD_PROCEDIMENTO_P bigint DEFAULT NULL, CD_DOENCA_P text DEFAULT NULL, NR_SEQ_PRIORIDADE_P bigint default null) RETURNS bigint AS $body$
DECLARE



ie_gravida_w 			varchar(255);
qt_idade_w				smallint;
cd_doenca_w				diagnostico_doenca.cd_doenca%type := null;
nr_seq_nivel_w			regra_pontuacao_prior.nr_seq_nivel%type;

nr_seq_resultado_w		regra_pontuacao_prior.nr_seq_nivel%type;

ie_cid_w			varchar(1);


c01 CURSOR FOR
SELECT  b.nr_seq_nivel
FROM prioridade_regulacao g, prioridade_analise_reg a
LEFT OUTER JOIN regra_pontuacao_prior b ON (a.nr_sequencia = b.nr_seq_prioridade)
LEFT OUTER JOIN regra_prioridade_regulacao c ON (b.nr_sequencia = c.nr_seq_regra_pont)
LEFT OUTER JOIN regra_regulacao_idade d ON (b.nr_sequencia = d.nr_seq_regra_pont)
LEFT OUTER JOIN regra_regulacao_cid e ON (b.nr_sequencia = e.nr_seq_regra_pont)
LEFT OUTER JOIN regra_regulacao_condicao f ON (b.nr_sequencia = f.nr_seq_regra_pont)
WHERE qt_idade_w between d.nr_idade_min and d.nr_idade_max and coalesce(f.ie_tipo_condicao, 'X') = coalesce(ie_gravida_w, 'X') and coalesce(c.cd_procedimento,0)= coalesce(cd_procedimento_p,0) and coalesce(e.cd_doenca_cid,0) = coalesce(cd_doenca_w,0) and b.nr_seq_nivel = g.nr_sequencia;


c02 CURSOR FOR
SELECT 	cd_doenca
from 	diagnostico_doenca
where 	nr_atendimento = nr_atendimento_p
and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
and		coalesce(ie_situacao,'A') = 'A';



BEGIN

if (obter_se_convenio_regulacao(nr_Atendimento_p) = 'S') then

	Select 	max(obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'A')),
			max(CASE WHEN obter_se_pac_gravida(cd_pessoa_fisica_p)=obter_desc_expressao(719927) THEN 'GR'  ELSE null END )
	into STRICT	qt_idade_w,
			ie_gravida_w
	;

	if (coalesce(cd_doenca_p::text, '') = '') then
		select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT 	ie_cid_w
		from 	diagnostico_doenca
		where	nr_atendimento = nr_atendimento_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and		coalesce(ie_situacao,'A') = 'A';

		if (ie_cid_w = 'S') then
			open c02;
			loop
			fetch c02 into
				cd_doenca_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				open c01;
				loop
				fetch c01 into
					nr_seq_nivel_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
					nr_seq_resultado_w := nr_seq_nivel_w;
					end;
				end loop;
				close c01;
				end;
			end loop;
			close c02;


		end if;


	else

		cd_doenca_w := cd_doenca_p;

		open c01;
		loop
		fetch c01 into
			nr_seq_nivel_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_seq_resultado_w := nr_seq_nivel_w;
			end;
		end loop;
		close c01;

	end if;

	if ((nr_seq_prioridade_p IS NOT NULL AND nr_seq_prioridade_p::text <> '') and nr_seq_prioridade_p > nr_seq_resultado_w)then
		nr_seq_resultado_w := null;
	end if;
end if;

return	nr_seq_resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_nivel_prior_regulacao ( NR_ATENDIMENTO_P bigint, CD_PESSOA_FISICA_P text, CD_PROCEDIMENTO_P bigint DEFAULT NULL, CD_DOENCA_P text DEFAULT NULL, NR_SEQ_PRIORIDADE_P bigint default null) FROM PUBLIC;

