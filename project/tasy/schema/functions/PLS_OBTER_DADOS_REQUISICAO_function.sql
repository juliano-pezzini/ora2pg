-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_requisicao ( nr_seq_requisicao_p bigint, ie_tipo_p text) RETURNS varchar AS $body$
DECLARE

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Obter dados da requisicao para autorizacao
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:  
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	IE_TIPO_P
	
	E - Descricao do estagio da requisicao,
	ED - Estagio (Dominio)
	CIDP - CID principal
	CIDS - CID secundario
	VL - Data de validade da requisicao,
	TI - Tipo de intercambio
	PE - Prestador executor
	NPE - Nome Prestador executor
	B - Beneficiario
	G - Guia gerada atraves da execucao da requisicao
	NB - Nome do beneficiario
	CIDUNICO = Informacao unica do CID na requisicao
	QTTEMPOCID = Informacao unica do CID na requisicao
	TA - Tipo de atendimento
	DTA - Descricao do tipo de atendimento
	RA - Regime de atendimento
	DRA - Descricao do regime de atendimento
	SO - Saude ocupacional
	DSO - Descricao da saude ocupacional
*/ds_retorno_w		varchar(255);
ds_estagio_w		varchar(255);
cd_doenca_w		varchar(10);
nr_seq_dig_requisicao_w	bigint;


BEGIN

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	if (ie_tipo_p = 'E') then
		select	substr(obter_valor_dominio(3431,ie_estagio),1,255) ds_estagio
		into STRICT	ds_estagio_w
		from 	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_p;

		ds_retorno_w := ds_estagio_w;
	elsif (ie_tipo_p = 'ED') then
		select	ie_estagio
		into STRICT	ds_retorno_w
		from 	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_p;
	elsif (ie_tipo_p =  'CIDP') then
		select	max(cd_doenca)
		into STRICT	cd_doenca_w
		from	pls_requisicao_diagnostico
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	ie_classificacao	= 'P';

		ds_retorno_w := cd_doenca_w;
	elsif (ie_tipo_p =  'CIDS') then
		select	max(cd_doenca)
		into STRICT	cd_doenca_w
		from	pls_requisicao_diagnostico
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	ie_classificacao	= 'S';

		ds_retorno_w := cd_doenca_w;
	elsif (ie_tipo_p	= 'VL') then
		select	to_char(dt_validade_senha,'dd/mm/yyyy')
		into STRICT	ds_retorno_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	elsif (ie_tipo_p	= 'TI') then
		select	coalesce(ie_tipo_intercambio,'X')
		into STRICT	ds_retorno_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	elsif (ie_tipo_p	= 'PE') then
		begin
			select	nr_seq_prestador_exec
			into STRICT	ds_retorno_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (ie_tipo_p	= 'NPE') then
		begin
			select	substr(pls_obter_dados_prestador(nr_seq_prestador_exec, 'N'),1,255)
			into STRICT	ds_retorno_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (ie_tipo_p	= 'B') then
		begin
			select	nr_seq_segurado
			into STRICT	ds_retorno_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (ie_tipo_p	= 'G') then
		begin
			select	max(nr_seq_guia)
			into STRICT	ds_retorno_w
			from	pls_requisicao		b,
				pls_execucao_requisicao	a
			where	b.nr_sequencia	= a.nr_seq_requisicao
			and	b.nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (ie_tipo_p	= 'NB') then
		begin
			select	substr(pls_obter_dados_segurado(nr_seq_segurado,'N'),1,255)
			into STRICT	ds_retorno_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (ie_tipo_p	in ('CIDUNICO','QTTEMPOCID')) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_dig_requisicao_w
		from	pls_requisicao_diagnostico
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	(cd_doenca IS NOT NULL AND cd_doenca::text <> '');
		
		if (nr_seq_dig_requisicao_w IS NOT NULL AND nr_seq_dig_requisicao_w::text <> '') then
			if (ie_tipo_p	= 'CIDUNICO') then
				select	cd_doenca
				into STRICT	ds_retorno_w
				from	pls_requisicao_diagnostico
				where	nr_sequencia	= nr_seq_dig_requisicao_w;
			elsif (ie_tipo_p	= 'QTTEMPOCID') then
				select	coalesce(qt_tempo,0)||' - '||CASE WHEN ie_unidade_tempo='M' THEN 'Meses' WHEN ie_unidade_tempo='A' THEN 'Anos'  ELSE 'Dias' END
				into STRICT	ds_retorno_w
				from	pls_requisicao_diagnostico
				where	nr_sequencia	= nr_seq_dig_requisicao_w;
			end if;
		end if;
	elsif (ie_tipo_p	= 'TA') then
		begin
			select	ie_tipo_atendimento
			into STRICT	ds_retorno_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (ie_tipo_p	= 'DTA') then
		begin
			select	substr(obter_valor_dominio(1761, ie_tipo_atendimento),1,255)
			into STRICT	ds_retorno_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_p;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
		
	elsif (ie_tipo_p = 'RA') then
		select	max(a.ie_regime_atendimento)
		into STRICT	ds_retorno_w
		from	pls_requisicao a
		where	a.nr_sequencia = nr_seq_requisicao_p;
		
	elsif (ie_tipo_p = 'DRA') then
		select	max(obter_valor_dominio(10631, a.ie_regime_atendimento))
		into STRICT	ds_retorno_w
		from	pls_requisicao a
		where	a.nr_sequencia = nr_seq_requisicao_p;
		
	elsif (ie_tipo_p = 'SO') then
		select	max(a.ie_saude_ocupacional)
		into STRICT	ds_retorno_w
		from	pls_requisicao a
		where	a.nr_sequencia = nr_seq_requisicao_p;
		
	elsif (ie_tipo_p = 'DSO') then
		select	max(obter_valor_dominio(10632, a.ie_saude_ocupacional))
		into STRICT	ds_retorno_w
		from	pls_requisicao a
		where	a.nr_sequencia = nr_seq_requisicao_p;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_requisicao ( nr_seq_requisicao_p bigint, ie_tipo_p text) FROM PUBLIC;

