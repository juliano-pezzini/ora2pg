-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION mprev_obter_atend_prev_data ( nr_seq_participante_p mprev_participante.nr_sequencia%type, dt_referencia_p timestamp) RETURNS bigint AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Busca o atendimento previsto do ciclo atual do paciente
que melhor se enquadra com a data que foi passada (para vincular um agendamento ao plano
de atendimento do paciente
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ } Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ X] Outros:

TRIGGER da MPREV_AGENDAMENTO
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_atend_prev_w		mprev_partic_ciclo_item_v.nr_sequencia%type	:= null;
dt_prevista_w			timestamp;
qt_dias_diferenca_w		bigint	:= null;
qt_dias_dif_ant_w		bigint	:= 9999999999;
nr_seq_partic_ciclo_item_w	mprev_partic_ciclo_item_v.nr_sequencia%type	:= null;

c01 CURSOR FOR
	SELECT	d.nr_sequencia,
		d.dt_prevista
	from 	mprev_programa_partic a,
		mprev_prog_partic_modulo b,
		mprev_programa_modulo m,
		mprev_partic_ciclo_atend c,
		mprev_partic_ciclo_item d
	where 	a.nr_sequencia 			= b.nr_seq_programa_partic
	and	c.nr_seq_prog_partic_mod	= b.nr_sequencia
	and	d.nr_seq_partic_ciclo_atend 	= c.nr_sequencia
	and	b.nr_seq_prog_modulo		= m.nr_sequencia
	and	a.nr_seq_participante		= nr_seq_participante_p
	and	d.ie_status = 'P' /* Previsto*/
	and	d.ie_forma_atend_prev <> 'T' /* Telemonitoramento */
	order by
		d.dt_prevista;


BEGIN

/* Se não houver atendimento previsto vinculado, procurar qual se encaixa */

if (nr_seq_participante_p IS NOT NULL AND nr_seq_participante_p::text <> '') and (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then

	open C01;
	loop
	fetch C01 into
		nr_seq_atend_prev_w,
		dt_prevista_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_dias_diferenca_w	:= abs(trunc(dt_prevista_w,'dd') - trunc(dt_referencia_p,'dd'));

		/* Sempre considerar a com menor quantidade de dias de diferença */

		if (qt_dias_diferenca_w < qt_dias_dif_ant_w) then
			nr_seq_partic_ciclo_item_w	:= nr_seq_atend_prev_w;
		end if;
		qt_dias_dif_ant_w	:= qt_dias_diferenca_w;
		end;
	end loop;
	close C01;
end if;

return	nr_seq_partic_ciclo_item_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION mprev_obter_atend_prev_data ( nr_seq_participante_p mprev_participante.nr_sequencia%type, dt_referencia_p timestamp) FROM PUBLIC;

