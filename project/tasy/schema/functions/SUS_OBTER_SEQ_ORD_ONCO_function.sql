-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_seq_ord_onco ( nr_sequencia_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_proc_princ_w	bigint;
cd_proc_princ_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	bigint;
--qt_proc_principal_w		number(10);
nr_interno_conta_w		bigint;
nr_seq_proc_valor_w	bigint;
i			bigint	:= 0;
nr_sequencia_w		bigint;
ie_ordena_proc_valor_w	varchar(15);
cd_procedimento_real_w	sus_aih_unif.cd_procedimento_real%type;
nr_seq_proc_complex_w	bigint;
ie_compat_proc_w		varchar(15);
cd_procedimento_w		bigint := 0;
cd_proced_w			procedimento_paciente.cd_procedimento%type := 0;
vl_procedimento_w		double precision;
cd_estabelecimento_w	integer;
ie_complexidade_w	varchar(2);
cd_cid_principal_w	sus_aih_unif.cd_cid_principal%type;
ie_cid_compativel_w	varchar(15);
qt_reg_onco_w		bigint := 0;
qt_reg_princ_w		bigint := 0;
nr_seq_apre_onc_w	sus_regra_seq_onco_proc.nr_seq_apresentacao%type := 0;
cd_grupo_w		sus_grupo.cd_grupo%type;
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;
dt_inicial_w		sus_aih_unif.dt_inicial%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_valor,
		c.vl_proc_original vl_procedimento
	from	procedimento_paciente a,
		sus_valor_proc_paciente c
	where	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_sequencia = c.nr_sequencia
	and	a.nr_interno_conta = nr_interno_conta_w
	order by	vl_procedimento desc;

vetor_c01_w     c01%rowtype;

c02 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_complex,
		d.vl_proc_original vl_procedimento,
		b.ie_complexidade
	from	procedimento_paciente a,
		sus_procedimento b,
		sus_procedimento_registro c,
		sus_valor_proc_paciente d
	where	c.cd_registro = 3
	and	a.cd_procedimento = b.cd_procedimento
	and	a.ie_origem_proced = b.ie_origem_proced
	and	a.cd_procedimento = c.cd_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	and	a.nr_sequencia = d.nr_sequencia
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	a.nr_interno_conta = nr_interno_conta_w
	order by	ie_complexidade,
		vl_procedimento desc;

vetor_c02_w     c02%rowtype;

c03 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_valor,
		a.cd_procedimento,
		b.vl_proc_original vl_procedimento,
		sus_obter_se_cid_compativel(cd_cid_principal_w,a.cd_procedimento) ie_cid_compativel
	from	procedimento_paciente a,
		sus_valor_proc_paciente b,
		sus_procedimento_registro c
	where	c.cd_registro = 3
	and	a.cd_procedimento = c.cd_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	--and	sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_procedimento_real_w) = 'S'
	and	((sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_procedimento_real_w) = 'S') or (SELECT	count(1)
		from	procedimento_paciente x
		where	x.nr_interno_conta = a.nr_interno_conta
		and (sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,x.cd_procedimento) = 'S')
		and	coalesce(x.cd_motivo_exc_conta::text, '') = '') > 0)
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	a.nr_interno_conta = nr_interno_conta_w
	--and	rownum < 2
	order by	ie_cid_compativel desc, vl_procedimento desc;

vetor_c03_w     c03%rowtype;

c04 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_valor,
		sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_procedimento_w) ie_compat_proc,
		b.vl_proc_original vl_procedimento
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	((a.cd_procedimento <> cd_procedimento_w) or (cd_procedimento_w = 0))
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	a.nr_interno_conta = nr_interno_conta_w
	order by	ie_compat_proc desc, vl_procedimento desc;

vetor_c04_w     c04%rowtype;

c05 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_complex,
		sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_procedimento_w) ie_compat_proc,
		d.vl_proc_original vl_procedimento,
		b.ie_complexidade
	from	procedimento_paciente a,
		sus_procedimento b,
		sus_procedimento_registro c,
		sus_valor_proc_paciente d
	where	c.cd_registro = 3
	and	a.cd_procedimento = b.cd_procedimento
	and	a.ie_origem_proced = b.ie_origem_proced
	and	a.cd_procedimento = c.cd_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	and	a.nr_sequencia = d.nr_sequencia
	and	((a.cd_procedimento <> cd_procedimento_w) or (cd_procedimento_w = 0))
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	a.nr_interno_conta = nr_interno_conta_w
	order by	ie_compat_proc desc,
		ie_complexidade,
		vl_procedimento desc;

vetor_c05_w     c05%rowtype;


BEGIN

/* Observar a preformance antes de efetuar qualquer ajuste neste objeto */

select	nr_seq_proc_princ,
	nr_interno_conta,
	cd_procedimento
into STRICT	nr_seq_proc_princ_w,
	nr_interno_conta_w,
	cd_proced_w
from	procedimento_paciente
where	nr_sequencia    = nr_sequencia_p;

cd_estabelecimento_w	:= coalesce(obter_estab_conta_paciente(nr_interno_conta_w),0);

--cd_grupo_w:=sus_obter_estrut_proc(cd_proced_w,7,'C','G'); 	Removido  para melhoria de peformance
begin
	select	d.cd_grupo
	into STRICT	cd_grupo_w
	from	sus_procedimento a,
		sus_forma_organizacao b,
		sus_subgrupo c,
		sus_grupo d
	where	c.nr_seq_grupo		= d.nr_sequencia
	and	b.nr_seq_subgrupo	= c.nr_sequencia
	and	a.nr_seq_forma_org	= b.nr_sequencia
	and	a.cd_procedimento	= cd_proced_w
	and	a.ie_origem_proced	= 7  LIMIT 1;
exception
when others then
	cd_grupo_w := '0';
end;

select	coalesce(ie_ordena_proc_valor,'N')
into STRICT	ie_ordena_proc_valor_w
from	sus_parametros_aih
where	cd_estabelecimento      = cd_estabelecimento_w;

if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then

	select 	cd_procedimento,
		ie_origem_proced,
		dt_procedimento
	into STRICT	cd_proc_princ_w,
		ie_origem_proced_w,
		dt_procedimento_w
	from	procedimento_paciente
	where	nr_sequencia    = nr_seq_proc_princ_w;

	if (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_proc_princ_w,ie_origem_proced_p => ie_origem_proced_w,dt_competencia_p => dt_procedimento_w) > 0) then
                	nr_seq_proc_princ_w     := null;
	end if;
end if;

/*select	count(*)
into	qt_proc_principal_w
from	procedimento_paciente a,
	sus_procedimento_registro b
where	a.nr_interno_conta	= nr_interno_conta_w
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	b.cd_registro 		= 3;*/
begin
	select	coalesce(cd_procedimento_real,0),
		coalesce(cd_cid_principal,'0'),
		coalesce(dt_inicial,null)
	into STRICT	cd_procedimento_real_w,
		cd_cid_principal_w,
		dt_inicial_w
	from	sus_aih_unif
	where	nr_interno_conta = nr_interno_conta_w  LIMIT 1;
exception
when others then
	cd_procedimento_real_w 	:= 0;
	cd_cid_principal_w	:= '0';
end;



if (coalesce(cd_procedimento_real_w,0) = 0) then
	begin

	begin
	select	coalesce(c.cd_procedimento_solic,0),
		coalesce(cd_cid_principal,'0'),
		coalesce(dt_emissao,null)
	into STRICT	cd_procedimento_real_w,
		cd_cid_principal_w,
		dt_inicial_w
	from	sus_laudo_paciente	c,
		conta_paciente		b,
		procedimento_paciente	a
	where	a.nr_sequencia		= nr_sequencia_p
	and	a.nr_interno_conta	= b.nr_interno_conta
	and	b.nr_interno_conta	= c.nr_interno_conta
	and	c.nr_seq_interno = (	SELECT	max(x.nr_seq_interno)
					from	sus_laudo_paciente x
					where	x.nr_interno_conta = c.nr_interno_conta
					and	x.ie_tipo_laudo_sus in (0,1));
	exception
	when others then
		cd_procedimento_real_w	:= 0;
		cd_cid_principal_w	:= '0';
	end;
	end;
end if;

/*if	(qt_proc_principal_w    > 1) and
	(cd_procedimento_real_w <> 415020050) then
	nr_seq_proc_princ_w     := null;
end if;*/
if (cd_procedimento_real_w = 415020050) then
	begin

	begin
	select	count(1)
	into STRICT	qt_reg_onco_w
	from	sus_regra_seq_oncologia
	where	ie_situacao = 'A'  LIMIT 1;
	exception
	when others then
		qt_reg_onco_w := 0;
	end;

	select	count(1)
	into STRICT	qt_reg_princ_w
	from	sus_procedimento_registro
	where	cd_procedimento	= cd_proced_w
	and	ie_origem_proced = 7
	and	cd_registro = 3  LIMIT 1;

	end;
end if;

if (ie_ordena_proc_valor_w = 'N') then
	nr_sequencia_w := coalesce(nr_seq_proc_princ_w,nr_sequencia_p);
elsif (ie_ordena_proc_valor_w = 'S') then
	begin
	if (cd_procedimento_real_w in (415020050,415020069)) then
		begin

		if (qt_reg_onco_w > 0) and (qt_reg_princ_w > 0) then
			begin
			nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proced_w,nr_interno_conta_w),0);
			nr_sequencia_w := nr_seq_apre_onc_w;
			end;
		end if;

		if	((qt_reg_onco_w = 0) or (nr_seq_apre_onc_w = 0)) then
			begin

                        for vetor_c03_w in c03 loop
                                begin

                                nr_seq_proc_valor_w     := vetor_c03_w.nr_seq_proc_valor;
                                cd_procedimento_w       := vetor_c03_w.cd_procedimento;
                                vl_procedimento_w       := vetor_c03_w.vl_procedimento;
                                ie_cid_compativel_w     := vetor_c03_w.ie_cid_compativel;

                                if (nr_seq_proc_valor_w = nr_sequencia_p) then
                                        nr_sequencia_w := -1;
                                end if;
                                if (nr_seq_proc_valor_w = nr_seq_proc_princ_w) then
                                        if (qt_reg_onco_w > 0) then
                                                nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_procedimento_w,nr_interno_conta_w),0);
                                                if (nr_seq_apre_onc_w > 0) then
                                                        nr_sequencia_w := nr_seq_apre_onc_w;
                                                else
                                                        nr_sequencia_w := -1;
                                                end if;
                                        else
                                                nr_sequencia_w := -1;
                                        end if;
                                end if;
                                exit;

                                end;
                        end loop;
			
                        for vetor_c04_w in c04 loop
                                begin

                                nr_seq_proc_valor_w     := vetor_c04_w.nr_seq_proc_valor;
                                ie_compat_proc_w        := vetor_c04_w.ie_compat_proc;
                                vl_procedimento_w       := vetor_c04_w.vl_procedimento;

                                if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                        if (nr_seq_proc_princ_w = nr_seq_proc_valor_w) then
                                                if (qt_reg_onco_w > 0) then
                                                        nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proc_princ_w,nr_interno_conta_w),0);
                                                        if (nr_seq_apre_onc_w > 0) then
                                                                nr_sequencia_w := nr_seq_apre_onc_w;
                                                        else
                                                                nr_sequencia_w := i;
                                                        end if;
                                                else
                                                        nr_sequencia_w := i;
                                                end if;							
                                        end if;
                                elsif (nr_seq_proc_valor_w = nr_sequencia_p) then
                                        nr_sequencia_w := i;
                                end if;
                                i := i + 1;
                                end;

                        end loop;

			end;
		end if;

		end;
	else
		begin
		
                for vetor_c01_w in c01 loop
                        begin

                        nr_seq_proc_valor_w     := vetor_c01_w.nr_seq_proc_valor;
                        vl_procedimento_w       := vetor_c01_w.vl_procedimento;

                        if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                if (nr_seq_proc_princ_w = nr_seq_proc_valor_w) then
                                        nr_sequencia_w := i;
                                end if;
                        elsif (nr_seq_proc_valor_w = nr_sequencia_p) then
                                nr_sequencia_w := i;
                        end if;
                        i := i + 1;

                        end;
                end loop;
			
		end;
	end if;
	end;
elsif (ie_ordena_proc_valor_w = 'C') then
	begin
	if (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p => 7,dt_competencia_p => dt_inicial_w) > 0) then

		nr_sequencia_w := coalesce(nr_seq_proc_princ_w,nr_sequencia_p);

		if (cd_procedimento_real_w in (415020050,415020069)) then
			begin

			if (qt_reg_onco_w > 0) and (qt_reg_princ_w > 0) then
				begin
				nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proced_w,nr_interno_conta_w),0);
				nr_sequencia_w := nr_seq_apre_onc_w;
				end;
			end if;

			if	((qt_reg_onco_w = 0) or (nr_seq_apre_onc_w = 0)) then
				begin
				
                                for vetor_c03_w in c03 loop
                                        begin

                                        nr_seq_proc_valor_w     := vetor_c03_w.nr_seq_proc_valor;
                                        cd_procedimento_w       := vetor_c03_w.cd_procedimento;
                                        vl_procedimento_w       := vetor_c03_w.vl_procedimento;
                                        ie_cid_compativel_w     := vetor_c03_w.ie_cid_compativel;

                                        if (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                nr_sequencia_w := -1;
                                        end if;
                                        if (nr_seq_proc_valor_w = nr_seq_proc_princ_w) then
                                                if (qt_reg_onco_w > 0) then
                                                        nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_procedimento_w,nr_interno_conta_w),0);
                                                        if (nr_seq_apre_onc_w > 0) then
                                                                nr_sequencia_w := nr_seq_apre_onc_w;
                                                        else
                                                                nr_sequencia_w := -1;
                                                        end if;
                                                else
                                                        nr_sequencia_w := -1;
                                                end if;
                                        end if;
                                        exit;

                                        end;
                                end loop;
					
				end;
					
                                for vetor_c05_w in c05 loop
                                        begin

                                        nr_seq_proc_complex_w   := vetor_c05_w.nr_seq_proc_complex;
                                        ie_compat_proc_w        := vetor_c05_w.ie_compat_proc;
                                        vl_procedimento_w       := vetor_c05_w.vl_procedimento;
                                        ie_complexidade_w       := vetor_c05_w.ie_complexidade;

                                        if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                                if (nr_seq_proc_princ_w = nr_seq_proc_complex_w) then
                                                        nr_sequencia_w := i;
                                                end if;
                                        elsif (nr_seq_proc_complex_w = nr_sequencia_p) then
                                                nr_sequencia_w := i;
                                        end if;
                                        i := i + 1;

                                        end;
                                end loop;
				
			end if;

			end;
		else
			begin

                        for vetor_c02_w in c02 loop
                                begin

                                nr_seq_proc_complex_w   := vetor_c02_w.nr_seq_proc_complex;
                                vl_procedimento_w       := vetor_c02_w.vl_procedimento;
                                ie_complexidade_w       := vetor_c02_w.ie_complexidade;

                                if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                        if (nr_seq_proc_princ_w = nr_seq_proc_complex_w) then
                                                nr_sequencia_w := i;
                                        end if;
                                elsif (nr_seq_proc_complex_w = nr_sequencia_p) then
                                        nr_sequencia_w := i;
                                end if;
                                i := i + 1;

                                end;
                        end loop;

			end;
		end if;
	else
		begin
		if (cd_procedimento_real_w in (415020050,415020069)) then
			begin

			if (qt_reg_onco_w > 0) and (qt_reg_princ_w > 0) then
				begin
				nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proced_w,nr_interno_conta_w),0);
				nr_sequencia_w := nr_seq_apre_onc_w;
				end;
			end if;

			if	((qt_reg_onco_w = 0) or (nr_seq_apre_onc_w = 0)) then
				begin

                                for vetor_c03_w in c03 loop
                                        begin

                                        nr_seq_proc_valor_w     := vetor_c03_w.nr_seq_proc_valor;
                                        cd_procedimento_w       := vetor_c03_w.cd_procedimento;
                                        vl_procedimento_w       := vetor_c03_w.vl_procedimento;
                                        ie_cid_compativel_w     := vetor_c03_w.ie_cid_compativel;

                                        if (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                nr_sequencia_w := -1;
                                        end if;
                                        if (nr_seq_proc_valor_w = nr_seq_proc_princ_w) then
                                                if (qt_reg_onco_w > 0) then
                                                        nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_procedimento_w,nr_interno_conta_w),0);
                                                        if (nr_seq_apre_onc_w > 0) then
                                                                nr_sequencia_w := nr_seq_apre_onc_w;
                                                        else
                                                                nr_sequencia_w := -1;
                                                        end if;
                                                else
                                                        nr_sequencia_w := -1;
                                                end if;
                                        end if;
                                        exit;

                                        end;
                                end loop;
				
                                for vetor_c04_w in c04 loop
                                        begin

                                        nr_seq_proc_valor_w     := vetor_c04_w.nr_seq_proc_valor;
                                        ie_compat_proc_w        := vetor_c04_w.ie_compat_proc;
                                        vl_procedimento_w       := vetor_c04_w.vl_procedimento;

                                        if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                                if (nr_seq_proc_princ_w = nr_seq_proc_valor_w) then
                                                        if (qt_reg_onco_w > 0) then
                                                                nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proc_princ_w,nr_interno_conta_w),0);
                                                                if (nr_seq_apre_onc_w > 0) then
                                                                        nr_sequencia_w := nr_seq_apre_onc_w;
                                                                else
                                                                        nr_sequencia_w := i;
                                                                end if;
                                                        else
                                                                nr_sequencia_w := i;
                                                        end if;	
                                                end if;
                                        elsif (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                nr_sequencia_w := i;
                                        end if;
                                        i := i + 1;
                                        end;
                                end loop;
					
				end;
			end if;

			end;
		else
			begin
			
                        for vetor_c01_w in c01 loop
                                begin

                                nr_seq_proc_valor_w := vetor_c01_w.nr_seq_proc_valor;
                                vl_procedimento_w := vetor_c01_w.vl_procedimento;

                                if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                        if (nr_seq_proc_princ_w = nr_seq_proc_valor_w) then
                                                nr_sequencia_w := i;
                                        end if;
                                elsif (nr_seq_proc_valor_w = nr_sequencia_p) then
                                        nr_sequencia_w := i;
                                end if;
                                i := i + 1;

                                end;
                        end loop;
				
			end;
		end if;
		end;
	end if;
	end;
end if;

return  nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_seq_ord_onco ( nr_sequencia_p bigint) FROM PUBLIC;

