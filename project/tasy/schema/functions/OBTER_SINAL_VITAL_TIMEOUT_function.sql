-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_sinal_vital_timeout (nr_seq_pepo_p bigint, nr_seq_cirurgia_p bigint, nr_seq_modelo_p bigint, ie_sinal_vital_p text) RETURNS varchar AS $body$
DECLARE

										
cVitalTime CURSOR FOR
SELECT pmss.nr_seq_pepo_sv, ps.*,pr.ie_verif_timeout, obter_valor_dominio(1768,ps.ie_sinal_vital) desc_sv, pr.qt_timeout_sv,CASE WHEN ps.nm_tabela='ATENDIMENTO_SINAL_VITAL' THEN  'DT_SINAL_VITAL' WHEN ps.nm_tabela='ATEND_MONIT_HEMOD' THEN 'DT_MONITORACAO' WHEN ps.nm_tabela='ATEND_AVAL_ANALGESIA' THEN 'DT_AVALIACAO'  ELSE 'DT_MONITORIZACAO' END  dt_reg
from pepo_modelo_secao_sv pmss 
inner join pepo_modelo_secao pms on pmss.nr_seq_modelo_secao = pms.nr_sequencia
inner join pepo_modelo pm on pms.nr_seq_modelo = pm.nr_sequencia
inner join pepo_sinal_vital psv on pmss.nr_seq_pepo_sv = psv.nr_sequencia
inner join pepo_sv ps on ps.ie_sinal_vital = psv.ie_sinal_vital
inner join pepo_modelo_sec_sv_regra pr on pr.nr_seq_modelo_secao_sv = pmss.nr_sequencia
where pm.nr_sequencia = nr_seq_modelo_p
  and psv.ie_sinal_vital = coalesce(ie_sinal_vital_p, psv.ie_sinal_vital)
  and ps.nm_tabela <> 'ATEND_ANAL_BIOQ_PORT'
  and ps.nr_sequencia = (select max(nr_sequencia) from pepo_sv svP where ps.nm_tabela = svP.nm_tabela and ps.nm_atributo = svp.nm_atributo);

w_query varchar(4000);		
w_count bigint;
w_messageRet varchar(4000);
w_check_sv bigint;											
													 
BEGIN	
	select max(maxTurnOn) into STRICT w_check_sv 
	  from ( SELECT (select coalesce(max(ecp.nr_sequencia) ,0)
					   from evento_cirurgia_paciente ecp, 
							evento_cirurgia ec
					  where ecp.nr_seq_evento = ec.nr_sequencia
						and ec.ie_inicia_integracao  = 'S'
						and (nr_cirurgia = nr_seq_cirurgia_p or ecp.nr_seq_pepo = nr_seq_pepo_p)
					) maxTurnOn,
					(select coalesce(max(ecp.nr_sequencia),0) 
					   from evento_cirurgia_paciente ecp, evento_cirurgia ec
					  where ecp.nr_seq_evento = ec.nr_sequencia
						and ec.ie_inicia_integracao  = 'N'
						and (nr_cirurgia = nr_seq_cirurgia_p or ecp.nr_seq_pepo = nr_seq_pepo_p)
					) maxturnoff 
				) alias9
	 where maxTurnOn > maxturnoff;	
	
	if (w_check_sv IS NOT NULL AND w_check_sv::text <> '') then
		for r1 in cVitalTime loop
			if (r1.ie_verif_timeout = 'S') then
				w_query := 'select timeout from (';
                w_query := w_query || 'select ((sysdate - '||r1.dt_reg||') * 24 * 60 * 60) timeout from '|| r1.nm_tabela;
				if (r1.nm_tabela = 'ATEND_AVAL_ANALGESIA') then
					w_query := w_query || ' where (((nvl(:nr_cirurgia_p,0) > 0) and (nr_atendimento = (select nr_atendimento from cirurgia where nr_cirurgia = :nr_cirurgia_p))) or (:nr_seq_pepo_p is not null and nr_seq_pepo = nvl(:nr_seq_pepo_p,0)))';
				else
					w_query := w_query || ' where ((:nr_seq_cirurgia_p is not null and nr_cirurgia = nvl(:nr_seq_cirurgia_p,0)) or (:nr_seq_pepo_p is not null and nr_seq_pepo = nvl(:nr_seq_pepo_p,0)))';
				end if;
				w_query := w_query || ' and ' || r1.nm_atributo  ||' is not null ';
				w_query := w_query || ' and ie_integracao = :ie_integracao';
				w_query := w_query || ' and ((sysdate - '||r1.dt_reg||') * 24 * 60 * 60) > '|| r1.qt_timeout_sv;
				w_query := w_query || ' order by '||r1.dt_reg||' desc) where rownum = 1';
				
				RAISE NOTICE '%', w_query;
				EXECUTE w_query into STRICT w_count using nr_seq_cirurgia_p,nr_seq_cirurgia_p, nr_seq_pepo_p, nr_seq_pepo_p,'S';
				
				if (w_count IS NOT NULL AND w_count::text <> '') then
					if (coalesce(ie_sinal_vital_p::text, '') = '') then
						if (coalesce(w_messageRet::text, '') = '') then
							w_messageRet := '<b>'|| wheb_mensagem_pck.get_texto(1164754) ||'</b><br>';
						else
							w_messageRet := w_messageRet ||', ';
						end if;
						w_messageRet := w_messageRet || r1.desc_sv;
					else
						w_messageRet := w_count;
					end if;
				end if;
			end if;
		end loop;
		if ((w_messageRet IS NOT NULL AND w_messageRet::text <> '') and coalesce(ie_sinal_vital_p::text, '') = '') then
			w_messageRet := w_messageRet || '</br>';
		end if;
	end if;
return w_messageRet;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_sinal_vital_timeout (nr_seq_pepo_p bigint, nr_seq_cirurgia_p bigint, nr_seq_modelo_p bigint, ie_sinal_vital_p text) FROM PUBLIC;

