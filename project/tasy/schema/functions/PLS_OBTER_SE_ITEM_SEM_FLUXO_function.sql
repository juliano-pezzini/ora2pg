-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_item_sem_fluxo ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_sem_fluxo_w		varchar(1)	:= 'N';
qt_ocor_com_fluxo_w	bigint	:= 0;
qt_glosa_sem_fluxo_w	bigint	:= 0;


BEGIN

if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') then
	/* Verificar da análise toda */

	if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
		select	count(1)
		into STRICT	qt_ocor_com_fluxo_w
		from	pls_ocorrencia_benef a
		where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
		and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
		and	exists (SELECT	1
				from	pls_analise_glo_ocor_grupo x
				where	x.nr_seq_analise	= nr_seq_analise_p
				and	x.nr_seq_ocor_benef	= a.nr_sequencia);

		if (qt_ocor_com_fluxo_w = 0) then
			select	count(1)
			into STRICT	qt_glosa_sem_fluxo_w
			from	pls_conta_glosa  a
			where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
			and	not exists (SELECT	1
						from	pls_ocorrencia_benef x
						where	x.nr_seq_glosa = a.nr_sequencia);
		end if;
	elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select	count(1)
		into STRICT	qt_ocor_com_fluxo_w
		from	pls_ocorrencia_benef  a
		where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	exists (SELECT	1
				from	pls_analise_glo_ocor_grupo x
				where	x.nr_seq_analise	= nr_seq_analise_p
				and	x.nr_seq_ocor_benef	= a.nr_sequencia);
		if (qt_ocor_com_fluxo_w = 0) then
			select	count(1)
			into STRICT	qt_glosa_sem_fluxo_w
			from	pls_conta_glosa  a
			where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
			and	not exists (SELECT	1
						from	pls_ocorrencia_benef x
						where	x.nr_seq_glosa = a.nr_sequencia);
		end if;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		select	count(1)
		into STRICT	qt_ocor_com_fluxo_w
		from	pls_ocorrencia_benef  a
		where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
		and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	exists (SELECT	1
				from	pls_analise_glo_ocor_grupo x
				where	x.nr_seq_analise	= nr_seq_analise_p
				and	x.nr_seq_ocor_benef	= a.nr_sequencia);

		if (qt_ocor_com_fluxo_w = 0) then
			select	count(1)
			into STRICT	qt_glosa_sem_fluxo_w
			from	pls_conta_glosa  a
			where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
			and	not exists (SELECT	1
						from	pls_ocorrencia_benef x
						where	x.nr_seq_glosa = a.nr_sequencia);
		end if;
	elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

			select	count(1)
			into STRICT	qt_ocor_com_fluxo_w
			from	pls_ocorrencia_benef a
			where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_conta	= nr_seq_conta_p
			and	coalesce(a.nr_seq_conta_proc::text, '') = ''
			and	coalesce(a.nr_seq_conta_mat::text, '') = ''
			and	coalesce(a.nr_seq_proc_partic::text, '') = ''
			and	exists (SELECT	1
					from	pls_analise_glo_ocor_grupo x
					where	x.nr_seq_analise	= nr_seq_analise_p
					and	x.nr_seq_ocor_benef	= a.nr_sequencia);
		if (qt_ocor_com_fluxo_w = 0) then

			select	count(1)
			into STRICT	qt_glosa_sem_fluxo_w
			from	pls_conta_glosa  a
			where (a.ie_situacao	= 'A' or coalesce(a.ie_situacao::text, '') = '')
			and	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
			and	a.nr_seq_conta	= nr_seq_conta_p
			and	coalesce(a.nr_seq_conta_proc::text, '') = ''
			and	coalesce(a.nr_seq_conta_mat::text, '') = ''
			and	coalesce(a.nr_seq_proc_partic::text, '') = ''
			and	not exists (SELECT	1
						from	pls_ocorrencia_benef x
						where	x.nr_seq_glosa = a.nr_sequencia);
		end if;
	end if;
end if;

if (qt_ocor_com_fluxo_w = 0) and (qt_glosa_sem_fluxo_w > 0) then
	ie_sem_fluxo_w	:= 'S';
end if;

return	ie_sem_fluxo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_item_sem_fluxo ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint) FROM PUBLIC;

