-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_informacao_os_grupo (dt_parametro_p timestamp, nr_seq_grupo_des_p bigint, ie_tipo_inf_p text, ie_tipo_valor_p text) RETURNS bigint AS $body$
DECLARE


/*
ie_tipo_inf_p
QT - Quantidade total de OS no mês
ER - Quantidade total de Erros no mês
ERI- Quantidade de erros identificados internamente na wheb
ERE-Quantidade de erros identificados externamente pelo cliente
QTI - Quantidade total de Insatisfação no mês
PRI - Percentual de insatisfação
EN - Quantidade total de OS encerrada
ENS - Quantidade total de OS encerrada com satisfação
PR - Percentual de erro no mês
PRIN- Percentual de erro no mês identificados internamente na Wheb
PREX- Percentual de erro no mês identificados externamente pelos clientes
QV - Quantidade de OS que retornaram
QTM - Quantidade de minutos realizadas
QTT - Quantidad de OS's trabalhadas
QTA - Quantidad de OS's trabalhadas que agregam valor
QCM - Quantidade de OS's no primeiro cliente testes no mês
QAV - Quantidade de OS's que agragam valor no mês
*/
qt_total_os_w			double precision;
qt_total_tec_w			double precision := 0;
qt_erro_w			double precision;
qt_retorno_w			double precision;
qt_os_encerrada_w		double precision;
qt_os_encerrada_classif_w	double precision;
qt_os_insatisf_w		double precision;
dt_ref_mes_w			timestamp;
dt_fim_mes_w			timestamp;
nr_seq_ordem_servico_w		bigint;
qt_retorno_os_w			bigint;
qt_minutos_w			bigint;
qt_horas_trab_w			bigint;
qt_atividade_trab_w		bigint;
qt_tot_atividade_trab_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_os_receb_gerencia_desenv_v
	where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
	and      ((nr_seq_grupo_des_p = 0) or (nr_seq_grupo_des = nr_seq_grupo_des_p));

C02 CURSOR FOR
	SELECT	1
	from	man_ordem_serv_ativ
	where	nr_seq_grupo_des = nr_seq_grupo_des_p
	and	dt_atividade between dt_ref_mes_w and dt_fim_mes_w
	group by NR_SEQ_ORDEM_SERV;


BEGIN

dt_ref_mes_w			:= trunc(dt_parametro_p,'month');
dt_fim_mes_w			:= last_day(dt_ref_mes_w) + 86399/86400;

if (ie_tipo_valor_p	= 'A') then
	dt_ref_mes_w			:= add_months(trunc(dt_parametro_p,'month'), -11);
	dt_fim_mes_w			:= trunc(dt_parametro_p,'month');
end if;

if (ie_tipo_inf_p in ('QT','PR','PRIN','PREX'))   then

	/*Quantidade de OS recebidas independetente se passou para o Desenvolvimento/Tecnologia*/

	if (coalesce(nr_seq_grupo_des_p::text, '') = '' ) then
		select 	count(distinct nr_sequencia)
		into STRICT	qt_total_os_w
		from	os_recebida_gerencia_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and      ((nr_seq_grupo_des_p = 0) or (nr_seq_grupo_des = nr_seq_grupo_des_p));
	else
		select 	count(distinct nr_sequencia)
		into STRICT	qt_total_os_w
		from	pls_os_receb_gerencia_desenv_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and      ((nr_seq_grupo_des_p = 0) or (nr_seq_grupo_des = nr_seq_grupo_des_p));

	end if;
end if;

/*Retorna a quantidade de erros considerando o DOC ERRO*/

if (ie_tipo_inf_p in ('ER','PR')) then

		select	count(distinct nr_sequencia)
		into STRICT	qt_erro_w
		from	os_erro_gerencia_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and (nr_seq_grupo = nr_seq_grupo_des_p or nr_seq_grupo_des_p = 0);
end if;

/*Retorna a quantidade de erros considerando o DOC ERRO identificados na base da Wheb*/

if (ie_tipo_inf_p in ('PRIN')) then

		select	count(distinct nr_sequencia)
		into STRICT	qt_erro_w
		from	os_erro_gerencia_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and	ie_ident_erro	= 'W'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and (nr_seq_grupo = nr_seq_grupo_des_p or nr_seq_grupo_des_p = 0);
end if;

/*Retorna a quantidade de erros considerando o DOC ERRO externamente pelos clientes */

if (ie_tipo_inf_p in ('PREX')) then

		select	count(distinct nr_sequencia)
		into STRICT	qt_erro_w
		from	os_erro_gerencia_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and	ie_ident_erro	<> 'W'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and (nr_seq_grupo = nr_seq_grupo_des_p or nr_seq_grupo_des_p = 0);
end if;

/*Retorna a quantidade de erros considerando o DOC ERRO que foram identificados internamente na Wheb*/

if (ie_tipo_inf_p in ('ERI')) then

		select	count(distinct nr_sequencia)
		into STRICT	qt_erro_w
		from	os_erro_gerencia_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and	ie_ident_erro	= 'W'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and (nr_seq_grupo = nr_seq_grupo_des_p or nr_seq_grupo_des_p = 0);
end if;

/*Retorna a quantidade de erros considerando o DOC ERRO que foram identificados externamente pelos clientes*/

if (ie_tipo_inf_p in ('ERE')) then

		select	count(distinct nr_sequencia)
		into STRICT	qt_erro_w
		from	os_erro_gerencia_v
		where	dt_ordem_servico between dt_ref_mes_w and dt_fim_mes_w
		and	ie_ident_erro	<> 'W'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and (nr_seq_grupo = nr_seq_grupo_des_p or nr_seq_grupo_des_p = 0);
end if;

/*Retorna a quantidade de OS encerrada que passou pelo Desenvolvimento/Tecnologia*/

if (ie_tipo_inf_p = 'EN') then

	select   count(*)
	into STRICT	 qt_os_encerrada_w
	from     os_encerrada_gerencia_v
	where	((nr_seq_grupo_des_p = 0) or (nr_seq_grupo_des = nr_seq_grupo_des_p))
	and		 dt_fim_real between dt_ref_mes_w and dt_fim_mes_w;

end if;
/*Retorna a quantidade de OS encerrada com Grau de Satisfação*/

if ( ie_tipo_inf_p in ('PRI','ENS')) then
	select   count(*)
	into STRICT	 qt_os_encerrada_classif_w
	from     os_encerrada_satisf_gerencia_v
	where   ((nr_seq_grupo_des_p = 0) or (nr_seq_grupo_des = nr_seq_grupo_des_p))
	and	dt_fim_real between dt_ref_mes_w and dt_fim_mes_w;

end if;
/*Retorna a quantidade de OS encerrada com Grau de Satisfação Irregular*/

if (ie_tipo_inf_p in ('QTI','PRI')) then

	select	count(*)
	into STRICT	qt_os_insatisf_w
	from	os_insatisfacao_gerencia_v
	where   ((nr_seq_grupo_des_p = 0) or (nr_seq_grupo = nr_seq_grupo_des_p))
	and		dt_fim_real between dt_ref_mes_w and dt_fim_mes_w;
end if;


qt_retorno_os_w	:= 0;

if (ie_tipo_inf_p = 'QV') then
	open C01;
	loop
	fetch C01 into
		nr_seq_ordem_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (obter_qt_volta_os(nr_seq_ordem_servico_w) > 0) then
			qt_retorno_os_w := qt_retorno_os_w + obter_qt_volta_os(nr_seq_ordem_servico_w);
		end if;
		end;
	end loop;
	close C01;

	return qt_retorno_os_w;
end if;

if (ie_tipo_inf_p = 'QTM') then
	select	sum(qt_minuto)
	into STRICT	qt_minutos_w
	from	man_ordem_serv_ativ
	where	nr_seq_grupo_des = nr_seq_grupo_des_p
	and	dt_atividade between dt_ref_mes_w and dt_fim_mes_w;

	qt_horas_trab_w	:= trunc(qt_minutos_w/60,2);

	return qt_horas_trab_w;
end if;
qt_tot_atividade_trab_w	:= 0;
if (ie_tipo_inf_p = 'QTT') then
	open C02;
	loop
	fetch C02 into
		qt_atividade_trab_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		qt_tot_atividade_trab_w	:= qt_tot_atividade_trab_w + qt_atividade_trab_w;

		end;
	end loop;
	close C02;

	return qt_tot_atividade_trab_w;
end if;

if (ie_tipo_inf_p = 'QTA') then
	select	sum(qt_minuto)
	into STRICT	qt_minutos_w
	from	man_ordem_serv_ativ	b,
		man_ordem_servico	a
	where	b.NR_SEQ_ORDEM_SERV	= a.nr_sequencia
	and	a.nr_seq_grupo_des	= nr_seq_grupo_des_p
	and	NR_SEQ_NIVEL_VALOR	in (1,3)
	and	dt_atividade between dt_ref_mes_w and dt_fim_mes_w;

	qt_horas_trab_w	:= trunc(qt_minutos_w/60,2);

	return qt_horas_trab_w;
end if;

if (ie_tipo_inf_p	= 'QCM') then
	select	count(*)
	into STRICT	qt_total_os_w
	from	man_ordem_servico 	a,
		grupo_desenvolvimento 	c
	where	a.nr_seq_grupo_des	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_grupo_des_p
	and	a.ie_classificacao	= 'S'
	and exists (	SELECT 1
			from	man_ordem_serv_estagio k,
				man_estagio_processo x
			where   a.nr_sequencia          = k.nr_seq_ordem
			and     k.nr_seq_estagio        = x.nr_sequencia
			and (x.ie_suporte = 'S' or x.ie_desenv = 'S'))
	and (	select	trunc(min(y.dt_atualizacao),'Month')
			from	man_ordem_serv_estagio	y
			where	y.nr_seq_ordem		= a.nr_sequencia
			and	y.nr_seq_estagio	= 2) between dt_ref_mes_w and dt_fim_mes_w;
	return qt_total_os_w;
end if;

if (ie_tipo_inf_p	= 'QAV') then
	select	count(*)
	into STRICT	qt_total_os_w
	from	man_ordem_servico 	a,
		grupo_desenvolvimento 	c
	where	a.nr_seq_grupo_des	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_grupo_des_p
	and	a.ie_classificacao	= 'S'
	and	a.NR_SEQ_NIVEL_VALOR in (1,3)
	and exists (	SELECT 1
			from	man_ordem_serv_estagio k,
				man_estagio_processo x
			where   a.nr_sequencia          = k.nr_seq_ordem
			and     k.nr_seq_estagio        = x.nr_sequencia
			and (x.ie_suporte = 'S' or x.ie_desenv = 'S'))
	and (	select	trunc(min(y.dt_atualizacao),'Month')
			from	man_ordem_serv_estagio	y
			where	y.nr_seq_ordem		= a.nr_sequencia
			and	y.nr_seq_estagio	= 2) between dt_ref_mes_w and dt_fim_mes_w;

	return qt_total_os_w;
end if;

if (ie_tipo_inf_p = 'QT') then
	return qt_total_os_w;
elsif (ie_tipo_inf_p = 'ER') then
	return qt_erro_w;
elsif (ie_tipo_inf_p = 'EN') then
	return qt_os_encerrada_w;
elsif (ie_tipo_inf_p = 'PR') then
	return dividir(qt_erro_w, qt_total_os_w)*100;
elsif (ie_tipo_inf_p = 'PRIN') then
	return dividir(qt_erro_w, qt_total_os_w)*100;
elsif (ie_tipo_inf_p = 'PREX') then
	return dividir(qt_erro_w, qt_total_os_w)*100;
elsif (ie_tipo_inf_p = 'QTI') then
	return	qt_os_insatisf_w;
elsif (ie_tipo_inf_p = 'PRI') then
	return dividir(qt_os_insatisf_w, qt_os_encerrada_classif_w)*100;
elsif (ie_tipo_inf_p = 'ENS') then
	return	qt_os_encerrada_classif_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_informacao_os_grupo (dt_parametro_p timestamp, nr_seq_grupo_des_p bigint, ie_tipo_inf_p text, ie_tipo_valor_p text) FROM PUBLIC;

