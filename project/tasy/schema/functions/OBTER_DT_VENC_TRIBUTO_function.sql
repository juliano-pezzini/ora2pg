-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dt_venc_tributo ( nr_sequencia_p bigint, cd_tributo_p bigint) RETURNS timestamp AS $body$
DECLARE


ds_retorno_w			varchar(20);
cd_tributo_w			tributo.cd_tributo%type;
dt_vencimento_w			nota_fiscal_venc.dt_vencimento%type;
dt_emissao_w			nota_fiscal.dt_emissao%type;
cd_cond_pagto_w			condicao_pagamento.cd_condicao_pagamento%type;
ie_vencimento_w			tributo.ie_venc_nf%type;
dt_primeiro_venc_w  		nota_fiscal_venc.dt_vencimento%type;
dt_imposto_w			timestamp;
qt_venc_w			bigint;
dt_entrada_saida_w		nota_fiscal.dt_entrada_saida%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_empresa_w			estabelecimento.cd_empresa%type;
ds_venc_w			varchar(4000);

qt_regra_duplicada_w		bigint := 0;
ds_irrelevante_w			varchar(255);
cd_cgc_w			nota_fiscal.cd_cgc_emitente%type;
cd_pessoa_fisica_w		nota_fiscal.cd_pessoa_fisica%type;
cd_natureza_operacao_w		nota_fiscal.cd_natureza_operacao%type;
cd_tipo_servico_w			nota_fiscal.cd_tipo_servico%type;
cd_material_regra_w		bigint;
cd_operacao_nf_w			nota_fiscal.cd_operacao_nf%type;
vl_base_calculo_w			nota_fiscal_trib.vl_base_calculo%type;
nr_seq_lote_res_pls_w		nota_fiscal.nr_seq_lote_res_pls%type;
ie_origem_titulo_w			varchar(10);
		

BEGIN

select 	max(coalesce(a.dt_vencimento, b.dt_emissao)) dt_vencimento,
	max(b.dt_emissao) dt_emissao,
	max(cd_condicao_pagamento) cd_cond_pagto,
	max(b.dt_entrada_saida) dt_entrada_saida,
	max(b.cd_estabelecimento) cd_estabelecimento,
	max(CASE WHEN a.ie_origem='S' THEN a.cd_cgc_emitente WHEN a.ie_origem='F' THEN a.cd_cgc_emitente  ELSE b.cd_cgc END ),
	max(b.cd_pessoa_fisica),
	max(b.cd_natureza_operacao),
	max(b.cd_tipo_servico),
	max(b.cd_operacao_nf),
	max(b.nr_seq_lote_res_pls)
into STRICT	dt_vencimento_w,
	dt_emissao_w,
	cd_cond_pagto_w,
	dt_entrada_saida_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	cd_natureza_operacao_w,
	cd_tipo_servico_w,
	cd_operacao_nf_w,
	nr_seq_lote_res_pls_w
FROM operacao_nota o, estabelecimento e, natureza_operacao c, nota_fiscal b
LEFT OUTER JOIN nota_fiscal_venc a ON (b.nr_sequencia = a.nr_sequencia)
WHERE b.nr_sequencia		= nr_sequencia_p and b.cd_natureza_operacao 	= c.cd_natureza_operacao and b.cd_operacao_nf 		= o.cd_operacao_nf and b.cd_estabelecimento	= e.cd_estabelecimento and coalesce(o.ie_contas_pagar,'S') 	= 'S' and coalesce(e.ie_contas_pagar,'S') 	<> 'N' and coalesce(a.nr_titulo_pagar::text, '') = '' order by dt_vencimento;

select	max(a.cd_tributo),
	sum(coalesce(vl_base_calculo,0)),
	max(ie_venc_nf) ie_vencimento
into STRICT	cd_tributo_w,
	vl_base_calculo_w,
	ie_vencimento_w	
from	tributo b,
	nota_fiscal_trib a
where	nr_sequencia		= nr_sequencia_p
and	a.cd_tributo		= b.cd_tributo
and	a.cd_tributo 		= cd_tributo_p
and	b.ie_conta_pagar	= 'S';
/*union
select 	max(a.cd_tributo),
	sum(nvl(vl_base_calculo,0)),
	max(ie_vencimento) ie_vencimento
from	tributo b,
	nota_fiscal_item_trib a
where	nr_sequencia		= nr_sequencia_p
and	a.cd_tributo		= b.cd_tributo
and	a.cd_tributo 		= cd_tributo_p
and	b.ie_conta_pagar	= 'S'
and	a.ie_rateio		= 'N'
union
select	max(a.cd_tributo),
	sum(nvl(a.vl_base_calculo,0)),
	max(b.ie_venc_nf) ie_vencimento
from	tributo b,
	nota_fiscal_venc_trib a
where	a.dt_vencimento		= dt_vencimento_w
and	nr_sequencia		= nr_sequencia_p
and	a.cd_tributo		= b.cd_tributo
and	a.cd_tributo 		= cd_tributo_p
and	b.ie_conta_pagar	= 'S';*/
select  max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

begin
select	min(dt_vencimento)
into STRICT	dt_primeiro_venc_w
from	nota_fiscal_venc
where	nr_sequencia	= nr_sequencia_p;
exception
when others then
	dt_primeiro_venc_w	:= null;
end;

cd_material_regra_w	:= null;

select	count(distinct a.cd_material)
into STRICT	qt_regra_duplicada_w
from	estrutura_material_v b,
	nota_fiscal_item a
where	exists
	(SELECT	1
	from	tributo_conta_pagar x
	where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
	and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
	and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
	and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
	and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
	and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
	and	x.cd_tributo	= cd_tributo_w
	having	count(*) > 1)
and	a.cd_material	= b.cd_material
and	a.nr_sequencia	= nr_sequencia_p;

if (qt_regra_duplicada_w = 0) then
	select	max(a.cd_material)
	into STRICT	cd_material_regra_w
	from	estrutura_material_v b,
		nota_fiscal_item a
	where	exists
		(SELECT	1
		from	tributo_conta_pagar x
		where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
		and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
		and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
		and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
		and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
		and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
		and	x.cd_tributo	= cd_tributo_w)
	and	a.cd_material	= b.cd_material
	and	a.nr_sequencia	= nr_sequencia_p;

else

	select	max(cd_material)
	into STRICT	cd_material_regra_w
	from	(SELECT	a.cd_material
		from	estrutura_material_v b,
			nota_fiscal_item a,
			tributo_conta_pagar x
		where	a.cd_material		= b.cd_material
		and	a.nr_sequencia		= nr_sequencia_p
		and	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
		and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
		and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
		and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
		and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
		and	dt_emissao_w		between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
		and	x.cd_tributo		= cd_tributo_w
		and	x.pr_aliquota		<> 0
		and	not exists
			(select	1
			from	tributo_conta_pagar y
			where	((y.cd_material = a.cd_material) or (y.cd_grupo_material = b.cd_grupo_material) or (y.cd_subgrupo_material = b.cd_subgrupo_material) or (y.cd_classe_material = b.cd_classe_material))
			and	y.pr_aliquota		= 0
			and	y.cd_tributo		= cd_tributo_w)
		order by b.cd_grupo_material,
			 b.cd_subgrupo_material,
			 b.cd_classe_material,
			 b.cd_material) alias27;

end if;

if (coalesce(nr_seq_lote_res_pls_w,0) <> 0) then /* se possuir a sequencia do lote de resumo, entao a origem do titulo e pls - contas medicas, senao a origem e nota fiscal (paulo - os 171927) */
	ie_origem_titulo_w	:= '5';
else
	ie_origem_titulo_w	:= '1';
end if;

SELECT * FROM obter_dados_trib_tit_pagar(cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	cd_cond_pagto_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	clock_timestamp(), ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	'N', cd_natureza_operacao_w, cd_tipo_servico_w, cd_material_regra_w, null, null, ds_irrelevante_w, --out
	cd_operacao_nf_w, 0, ds_irrelevante_w, --out
	ds_irrelevante_w, --out
	vl_base_calculo_w, 'N', null, ie_origem_titulo_w, null, null) INTO STRICT ds_irrelevante_w, 
	ds_irrelevante_w, 
	cd_cond_pagto_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, 
	ds_irrelevante_w, ds_irrelevante_w, 
	ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, 
	ds_irrelevante_w;

if (ie_vencimento_w = 'V') then
		dt_imposto_w	:= coalesce(dt_vencimento_w,clock_timestamp());

elsif (ie_vencimento_w = 'R') then
		dt_imposto_w	:= coalesce(dt_entrada_saida_w,clock_timestamp());

elsif (ie_vencimento_w = 'C') then
		dt_imposto_w	:= coalesce(dt_vencimento_w,clock_timestamp());

elsif (ie_vencimento_w = 'E') then
		dt_imposto_w	:= coalesce(dt_emissao_w,clock_timestamp());
		
elsif (ie_vencimento_w = 'P') then
		dt_imposto_w	:= coalesce(dt_primeiro_venc_w,clock_timestamp());		
else	
	dt_imposto_w	:= coalesce(dt_vencimento_w,clock_timestamp());		
end if;

if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then

	/* data base do vencimento nao deve ser final de semana */

	if (pkg_date_utils.get_WeekDay(dt_imposto_w) = 7) then
		-- nao deixar passar par ao mes seguinte
		if (trunc(dt_imposto_w,'DD') = trunc(dt_imposto_w + 2, 'MONTH')) then
			dt_imposto_w := dt_imposto_w + 2;
		end if;
	elsif (pkg_date_utils.get_WeekDay(dt_imposto_w) = 1) then
		-- nao deixar passar par ao mes seguinte
		if (trunc(dt_imposto_w,'DD') = trunc(dt_imposto_w + 1, 'MONTH')) then
			dt_imposto_w := dt_imposto_w + 1;
		end if;
	end if;

	SELECT * FROM calcular_vencimento(	cd_estabelecimento_w, cd_cond_pagto_w, dt_imposto_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

	if (qt_venc_w = 1) then	
		dt_imposto_w	:= to_date(substr(ds_venc_w,1,10),'dd/mm/rrrr');
	end if;
end if;

ds_retorno_w := dt_imposto_w;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dt_venc_tributo ( nr_sequencia_p bigint, cd_tributo_p bigint) FROM PUBLIC;

