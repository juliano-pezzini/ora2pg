-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_espec_solic_comb ( nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, nr_seq_exec_proc_p bigint, nr_seq_proc_espec_p bigint, cd_especialidade_p bigint ) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(1) := 'N';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_w			bigint;
nr_seq_regra_proc_espec_w	bigint := 0;
qt_regra_valida_w		bigint;


BEGIN
if (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then
	begin
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from	pls_guia_plano_proc
		where	nr_sequencia  = nr_seq_guia_proc_p;
	exception
	when others then
		cd_procedimento_w	:= null;
	end;
elsif (nr_seq_req_proc_p IS NOT NULL AND nr_seq_req_proc_p::text <> '') then
	begin
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from	pls_requisicao_proc
		where	nr_sequencia  = nr_seq_req_proc_p;
	exception
	when others then
		cd_procedimento_w	:= null;
	end;
elsif (nr_seq_exec_proc_p IS NOT NULL AND nr_seq_exec_proc_p::text <> '') then
	begin
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w
		from	pls_execucao_req_item
		where	nr_sequencia  = nr_seq_exec_proc_p;
	exception
	when others then
		cd_procedimento_w	:= null;
	end;
end if;

if (cd_procedimento_w > 0) then
	/*Obter area, grupo, especialidade do procedimentos  */

	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w;

	select	count(1)
	into STRICT	qt_regra_valida_w
	from	pls_oc_proc_espec_regra	a,
		pls_oc_proc_especialidade b
	where	a.nr_seq_regra = b.nr_sequencia
	and	b.nr_sequencia = nr_seq_proc_espec_p
	and	((coalesce(a.cd_procedimento::text, '') = '')	or (a.cd_procedimento 		= cd_procedimento_w AND ie_origem_proced = ie_origem_w))
	and (coalesce(a.cd_grupo_proc::text, '') = '' 	or a.cd_grupo_proc 		= cd_grupo_w)
	and (coalesce(a.cd_especialidade::text, '') = ''	or a.cd_especialidade		= cd_especialidade_w)
	and (coalesce(a.cd_area_procedimento::text, '') = ''	or a.cd_area_procedimento	= cd_area_w)
	and	a.ie_situacao		 	= 'A'
	and	a.ie_liberado			= 'N'
	and	b.cd_espec_medica		= cd_especialidade_p  LIMIT 1;

	if (qt_regra_valida_w > 0) then
		ie_retorno_w	:= 'S';
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_espec_solic_comb ( nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, nr_seq_exec_proc_p bigint, nr_seq_proc_espec_p bigint, cd_especialidade_p bigint ) FROM PUBLIC;

