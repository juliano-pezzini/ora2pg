-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_contrato_data (nr_seq_contrato_p bigint, dt_referencia_p timestamp, ie_periodo_p text, nr_seq_regra_p bigint default null, dt_inicial_p timestamp default null) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(1) := 'N';
cd_estabelecimento_w	smallint;
dt_primeiro_vencto_w	timestamp;
ie_tratar_fim_semana_w	varchar(1);
dt_referencia_w		timestamp;
dt_vencto_util_w timestamp;
dt_primeiro_vencto_ww timestamp;


BEGIN
ds_retorno_w	:= 'N';

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	contrato
where	nr_sequencia	= nr_seq_contrato_p;

select	ie_tratar_fim_semana
into STRICT	ie_tratar_fim_semana_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_w;


select	min(b.dt_primeiro_vencto)
into STRICT	dt_primeiro_vencto_ww
from	contrato_regra_pagto b
where (coalesce(nr_seq_regra_p::text, '') = '' or b.nr_sequencia = nr_seq_regra_p)
and	(b.dt_primeiro_vencto IS NOT NULL AND b.dt_primeiro_vencto::text <> '')
and	b.nr_seq_contrato	= nr_seq_contrato_p;

	/* Obtem a proxima data util ao vencimento do contrato no mes da data de referencia,
	   se a data nao for valida (nao existir o dia no mes), busca a proxima data util para o ultimo dia daquele mes */
	begin
	dt_vencto_util_w	:= obter_proximo_dia_util(cd_estabelecimento_w, PKG_DATE_UTILS.GET_DATE(PKG_DATE_UTILS.extract_field('DAY', coalesce(dt_primeiro_vencto_ww,obter_data_venc_contrato(dt_inicial_p))),obter_data_venc_contrato(dt_inicial_p) ));
	exception
		when others then
		dt_vencto_util_w	:= obter_proximo_dia_util(cd_estabelecimento_w,PKG_DATE_UTILS.end_of(obter_data_venc_contrato(dt_inicial_p), 'MONTH', 0)); 	
	end;
	

select	min(b.dt_primeiro_vencto)
into STRICT	dt_primeiro_vencto_w
from	contrato_regra_pagto b
where	CASE WHEN ie_periodo_p='D' THEN dt_referencia_p  ELSE PKG_DATE_UTILS.start_of(dt_referencia_p, 'MONTH', 0) END  between 
		coalesce(b.dt_inicio_vigencia, pkg_date_utils.get_date(1900, 1, 1, 0)) and
		coalesce(b.dt_final_vigencia, pkg_date_utils.get_date(2099, 1, 1, 0))
and	CASE WHEN ie_periodo_p='D' THEN PKG_DATE_UTILS.extract_field('DAY', CASE WHEN ie_tratar_fim_semana_w='S' THEN dt_vencto_util_w  ELSE b.dt_primeiro_vencto END )  ELSE 0 END  = CASE WHEN ie_periodo_p='D' THEN PKG_DATE_UTILS.extract_field('DAY', dt_referencia_p)  ELSE 0 END 
and (coalesce(nr_seq_regra_p::text, '') = '' or b.nr_sequencia = nr_seq_regra_p)
and	(b.dt_primeiro_vencto IS NOT NULL AND b.dt_primeiro_vencto::text <> '')
and	b.nr_seq_contrato	= nr_seq_contrato_p;

/* Quando nao encontrar o primeiro vencimento nao pode entrar pois senao vai acabar assumindo a data referencia e retornando S incorretamente */

if (dt_primeiro_vencto_w IS NOT NULL AND dt_primeiro_vencto_w::text <> '') then
	if (ie_tratar_fim_semana_w = 'S') then
			
		/* Se o dia do primeiro vencimento nao existir para o mes de referencia utiliza o ultimo dia do mes */

		begin
		dt_referencia_w	 := obter_proximo_dia_util(cd_estabelecimento_w,
			PKG_DATE_UTILS.GET_DATE(PKG_DATE_UTILS.extract_field('DAY', dt_primeiro_vencto_w), dt_referencia_p) );
		exception
			when others then
			dt_referencia_w	:= PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.end_of(dt_referencia_p, 'MONTH', 0), coalesce(dt_referencia_p, PKG_DATE_UTILS.get_Time('00:00:00')));
		end;
		
		if (ie_periodo_p	 = 'D') and (PKG_DATE_UTILS.start_of(dt_referencia_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_referencia_p,'DD',0)) then
			ds_retorno_w	:= 'S';
		elsif (ie_periodo_p	 = 'M') and (PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0) = PKG_DATE_UTILS.start_of(dt_referencia_p, 'MONTH', 0)) then
			ds_retorno_w	:= 'S';
		end if;	
		
		/* Caso a procedure que gera o contrato gerar para o mes seguinte */

		begin
		dt_referencia_w	 := obter_proximo_dia_util(cd_estabelecimento_w,
			PKG_DATE_UTILS.GET_DATE(PKG_DATE_UTILS.extract_field('DAY', dt_primeiro_vencto_w),
			PKG_DATE_UTILS.ADD_MONTH(dt_referencia_p,-1, 0) ) );
		exception
			when others then
			dt_referencia_w	:= obter_proximo_dia_util(cd_estabelecimento_w,PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.end_of(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_p,-1,0), 'MONTH', 0), coalesce(dt_referencia_p, PKG_DATE_UTILS.get_Time('00:00:00')))); 	
		end;
		if (ie_periodo_p	 = 'D') and (PKG_DATE_UTILS.start_of(dt_referencia_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_referencia_p,'DD',0)) then
			ds_retorno_w	:= 'S';
		elsif (ie_periodo_p	 = 'M') and (PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0) = PKG_DATE_UTILS.start_of(dt_referencia_p, 'MONTH', 0)) then
			ds_retorno_w	:= 'S';
		end if;	
	else
		begin
			dt_referencia_w	:=  PKG_DATE_UTILS.GET_DATE(PKG_DATE_UTILS.extract_field('DAY', dt_primeiro_vencto_w), dt_referencia_p);
		exception when others then
			dt_referencia_w	:= PKG_DATE_UTILS.GET_DATETIME(PKG_DATE_UTILS.end_of(dt_referencia_p, 'MONTH', 0), coalesce(dt_referencia_p, PKG_DATE_UTILS.get_Time('00:00:00')));
		end;
		
		if (ie_periodo_p	 = 'D') and (PKG_DATE_UTILS.start_of(dt_referencia_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_referencia_p,'DD',0)) then
			ds_retorno_w	:= 'S';
		elsif (ie_periodo_p	 = 'M') and (PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0) = PKG_DATE_UTILS.start_of(dt_referencia_p, 'MONTH', 0)) then
			ds_retorno_w	:= 'S';
		end if;			
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_contrato_data (nr_seq_contrato_p bigint, dt_referencia_p timestamp, ie_periodo_p text, nr_seq_regra_p bigint default null, dt_inicial_p timestamp default null) FROM PUBLIC;

