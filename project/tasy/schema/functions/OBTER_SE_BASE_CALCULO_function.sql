-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_base_calculo ( nr_sequencia_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*
function para identificar se o titulo/nf/repasse/distribuição passado no parâmetro, deve ser utilizado no cálculo do tributo

'TP'	titulo_pagar
'RT'	repasse_terceiro
'NFE'	nota_fiscal
'DL'	dl_distribuicao
'LP'	Lote de pagamento - OPS
'PP'	Pagamento de produção - OPS
*/
ie_origem_w		varchar(5);
ie_retorno_w		varchar(1);
nr_seq_nota_fiscal_w	bigint;
nr_repasse_terceiro_w	bigint;
nr_seq_distribuicao_w	bigint;
nr_titulo_w		bigint;
nr_seq_lote_pagamento_w	bigint;
nr_seq_lote_pgto_w	bigint;


BEGIN
if (ie_opcao_p = 'TP') then -- Setar número do título, repasse e nota fiscal
	nr_titulo_w			:= nr_sequencia_p;
	nr_seq_distribuicao_w		:= 0;
	nr_seq_lote_pagamento_w		:= 0;
	nr_seq_lote_pgto_w		:= 0;

	select	coalesce(max(nr_seq_nota_fiscal),0),
		coalesce(max(nr_repasse_terceiro),0),
		coalesce(max(nr_seq_lote_res_pls),0),
		coalesce(max(nr_seq_pls_pag_prest),0)
	into STRICT	nr_seq_nota_fiscal_w,
		nr_repasse_terceiro_w,
		nr_seq_lote_pagamento_w,
		nr_seq_lote_pgto_w
	from	titulo_pagar
	where	nr_titulo	= nr_sequencia_p;
elsif (ie_opcao_p = 'RT') then
	nr_repasse_terceiro_w		:= nr_sequencia_p;
	nr_seq_nota_fiscal_w		:= 0;
	nr_seq_distribuicao_w		:= 0;
	nr_seq_lote_pagamento_w		:= 0;
	nr_seq_lote_pgto_w		:= 0;

	select	coalesce(max(nr_titulo),0)
	into STRICT	nr_titulo_w
	from	titulo_pagar
	where	nr_repasse_terceiro	= nr_sequencia_p;
elsif (ie_opcao_p = 'NFE') then
	nr_seq_nota_fiscal_w		:= nr_sequencia_p;
	nr_repasse_terceiro_w		:= 0;
	nr_titulo_w			:= 0;
	nr_seq_distribuicao_w		:= 0;
	nr_seq_lote_pagamento_w		:= 0;
	nr_seq_lote_pgto_w		:= 0;
elsif (ie_opcao_p = 'DL') then
	nr_seq_nota_fiscal_w		:= 0;
	nr_repasse_terceiro_w		:= 0;
	nr_seq_distribuicao_w		:= nr_sequencia_p;
	nr_seq_lote_pagamento_w		:= 0;
	nr_seq_lote_pgto_w		:= 0;

	select	coalesce(max(nr_titulo),0)
	into STRICT	nr_titulo_w
	from	titulo_pagar
	where	nr_seq_distribuicao	= nr_sequencia_p;
elsif (ie_opcao_p = 'LP') then
	nr_seq_nota_fiscal_w	:= 0;
	nr_repasse_terceiro_w	:= 0;
	nr_seq_distribuicao_w	:= 0;
	nr_seq_lote_pagamento_w	:= nr_sequencia_p;
	nr_seq_lote_pgto_w	:= 0;

	select	coalesce(max(nr_titulo),0)
	into STRICT	nr_titulo_w
	from	titulo_pagar
	where	nr_seq_lote_res_pls	= nr_sequencia_p;
elsif (ie_opcao_p = 'PP') then
	nr_seq_nota_fiscal_w	:= 0;
	nr_repasse_terceiro_w	:= 0;
	nr_seq_distribuicao_w	:= 0;
	nr_seq_lote_pagamento_w	:= 0;
	nr_seq_lote_pgto_w	:= nr_sequencia_p;

	select	coalesce(max(nr_titulo),0)
	into STRICT	nr_titulo_w
	from	titulo_pagar
	where	nr_seq_pls_pag_prest	= nr_sequencia_p;
end if;


-- Verificar se os tributos vem do título
if (nr_titulo_w	> 0) then

	select	CASE WHEN count(*)=0 THEN  'X'  ELSE 'TP' END
	into STRICT	ie_origem_w
	from	titulo_pagar_imposto
	where	nr_titulo		= nr_titulo_w;

end if;

-- Verificar se os tributos vem da nota, se vier, sobrepor o ie_origem_w
if (nr_seq_nota_fiscal_w	> 0) then

	select	CASE WHEN count(*)=0 THEN  ie_origem_w  ELSE 'NFE' END
	into STRICT	ie_origem_w
	from (SELECT	1
		from	nota_fiscal_trib
		where	nr_sequencia			= nr_seq_nota_fiscal_w
		and	coalesce(ie_origem_trib, 'N')	= 'N'
		
union

		SELECT	1
		from	nota_fiscal_venc_trib
		where	nr_sequencia			= nr_seq_nota_fiscal_w) alias3;
end if;

-- Verificar se os tributos vem do repasse, se vier, sobrepor o ie_origem_w
if (nr_repasse_terceiro_w	> 0) then
	select	CASE WHEN count(*)=0 THEN  ie_origem_w  ELSE 'RT' END
	into STRICT	ie_origem_w
	from	repasse_terc_venc_trib c,
		repasse_terceiro_venc b,
		repasse_terceiro a
	where	a.nr_repasse_terceiro	= nr_repasse_terceiro_w
	and	a.nr_repasse_terceiro	= b.nr_repasse_terceiro
	and	b.nr_sequencia		= c.nr_seq_rep_venc;
end if;

-- Verificar se os tributos vem do repasse, se vier, sobrepor o ie_origem_w
if (nr_seq_distribuicao_w	> 0) then
	select	CASE WHEN count(*)=0 THEN  ie_origem_w  ELSE 'DL' END
	into STRICT	ie_origem_w
	from	dl_distribuicao_trib b,
		dl_distribuicao a
	where	a.nr_sequencia		= nr_seq_distribuicao_w
	and	a.nr_sequencia		= b.nr_seq_distribuicao;
end if;

if (nr_seq_lote_pagamento_w	> 0) then
	select	CASE WHEN count(*)=0 THEN  ie_origem_w  ELSE 'LP' END
	into STRICT	ie_origem_w
	from	pls_lote_prot_venc_trib c,
		pls_lote_protocolo_venc b,
		pls_lote_protocolo a
	where	a.nr_sequencia		= nr_seq_lote_pagamento_w
	and	a.nr_sequencia		= b.nr_seq_lote
	and	b.nr_sequencia		= c.nr_seq_lote_venc;

end if;

if (nr_seq_lote_pgto_w	> 0) then
	select	CASE WHEN count(*)=0 THEN  ie_origem_w  ELSE 'PP' END
	into STRICT	ie_origem_w
	from	pls_pag_prest_venc_trib		c,
		pls_pag_prest_vencimento	b,
		pls_pagamento_prestador		a
	where	a.nr_sequencia	= b.nr_seq_pag_prestador
	and	b.nr_sequencia	= c.nr_seq_vencimento
	and	a.nr_sequencia	= nr_seq_lote_pgto_w;
end if;

ie_retorno_w		:= 'N';

if (ie_origem_w = ie_opcao_p) then
	ie_retorno_w	:= 'S';
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_base_calculo ( nr_sequencia_p bigint, ie_opcao_p text) FROM PUBLIC;

