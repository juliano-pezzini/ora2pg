-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_dt_despesa (cd_estabelecimento_p bigint, cd_convenio_p bigint, dt_conta_p timestamp, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, ie_mat_med_p text, ie_tipo_atend_conta_p bigint, nr_interno_conta_p bigint, ie_tipo_data_p text, ie_tiss_tipo_despesa_p text, cd_material_p bigint, dt_entrada_p timestamp default null, dt_alta_p timestamp default null, dt_mesano_referencia_p timestamp default null) RETURNS timestamp AS $body$
DECLARE


/*
ie_mat_med_p	
	'S' - Materias e Medicamentos
	'T' - Taxas e Diarias
	
ie_tipo_data_p	
	'D' - Data da despesa
	'DI' - Data inicial da despesa
	'DF' - Data final da despesa
*/
ie_data_despesa_w	varchar(40);
ie_data_inicial_w	varchar(40);
ie_data_final_w		varchar(40);
ds_versao_w		varchar(20);
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
nr_seq_familia_w	bigint;
dt_retorno_w		timestamp;
dt_entrada_w		timestamp;
dt_alta_w		timestamp;
dt_mesano_Referencia_w	timestamp;

c01 CURSOR FOR
SELECT	coalesce(IE_DATA_DESPESA, 'C'),
	coalesce(IE_DATA_INICIAL,'C'),
	coalesce(IE_DATA_FINAL,'C')
from	tiss_regra_data_mat
where	cd_estabelecimento						= cd_estabelecimento_p
and	coalesce(cd_convenio,coalesce(cd_convenio_p,0))				= coalesce(cd_convenio_p,0)
and	coalesce(cd_material,coalesce(cd_material_p,0))				= coalesce(cd_material_p,0)
and	coalesce(cd_grupo_material,coalesce(cd_grupo_material_w,0))		= coalesce(cd_grupo_material_w,0)
and	coalesce(cd_subgrupo_material,coalesce(cd_subgrupo_material_w,0))		= coalesce(cd_subgrupo_material_w,0)
and	coalesce(cd_classe_material,coalesce(cd_classe_material_w,0))		= coalesce(cd_classe_material_w,0)
and	coalesce(nr_seq_familia,coalesce(nr_seq_familia_w,0))			= coalesce(nr_seq_familia_w,0)
and	coalesce(ie_tipo_atend_conta,coalesce(ie_tipo_atend_conta_p,0))		= coalesce(ie_tipo_atend_conta_p,0)
and	(((obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N') and (coalesce(ie_tiss_tipo_despesa,coalesce(ie_tiss_tipo_despesa_p,'0'))	= coalesce(ie_tiss_tipo_despesa_p,'0'))) or
	 ((obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S') and (coalesce(ie_tiss_tipo_desp_novo,coalesce(ie_tiss_tipo_despesa_p,'0'))	= coalesce(ie_tiss_tipo_despesa_p,'0')))
	)
order by	coalesce(cd_material,0),
	coalesce(cd_grupo_material,0),
	coalesce(cd_subgrupo_material,0),
	coalesce(cd_classe_material,0),
	coalesce(nr_seq_familia,0),
	coalesce(cd_convenio,0),
	coalesce(ie_tipo_atend_conta,0),
	coalesce(ie_tiss_tipo_despesa,'0'),
	coalesce(ie_tiss_tipo_desp_novo,'0');


BEGIN

begin
select 	cd_grupo_material,
	cd_subgrupo_material,
	cd_classe_material,
	nr_seq_familia
into STRICT  	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	nr_seq_familia_w
from	estrutura_material_v
where	cd_material 		= cd_material_p;
exception
when others then
	null;
end;


ie_data_despesa_w	:= tiss_convenio_pck.get_tiss_param_convenio(cd_convenio_p,cd_estabelecimento_p,'DD');

if (dt_entrada_p IS NOT NULL AND dt_entrada_p::text <> '') and (dt_mesano_referencia_p IS NOT NULL AND dt_mesano_referencia_p::text <> '') then
	dt_entrada_w		:= coalesce(dt_entrada_p,clock_timestamp());
	dt_alta_w		:= coalesce(dt_alta_p,clock_timestamp());
	dt_mesano_Referencia_w	:= dt_mesano_Referencia_p;
else

	select	coalesce(max(a.dt_entrada),clock_timestamp()),
		coalesce(max(a.dt_alta),clock_timestamp()),
		max(b.dt_mesano_referencia)
	into STRICT	dt_entrada_w,
		dt_alta_w,
		dt_mesano_Referencia_w
	from	atendimento_paciente a,
		conta_paciente b
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_interno_conta	= nr_interno_conta_p;

end if;


select	coalesce(max(tiss_obter_versao(cd_convenio_p,cd_estabelecimento_p,dt_mesano_Referencia_w)),'2.02.03')
into STRICT	ds_versao_w
;


if (ie_data_despesa_w = 'R') then

	open c01;
	loop
	fetch c01 into
		ie_data_despesa_w,
		ie_data_inicial_w,
		ie_data_final_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		ie_data_despesa_w	:= ie_data_despesa_w;
		ie_data_inicial_w	:= ie_data_inicial_w;
		ie_data_final_w		:= ie_data_final_w;
	end loop;
	close c01;

end if;

dt_retorno_w			:= dt_conta_p;
if (coalesce(ie_tipo_data_p,'D') = 'D') then
	if (ie_data_despesa_w = 'C') then
		dt_retorno_w		:= dt_conta_p;
	elsif (ie_data_despesa_w = 'F') then
		dt_retorno_w		:= dt_periodo_final_p;
	elsif (ie_data_despesa_w = 'I') then
		dt_retorno_w		:= dt_periodo_inicial_p;
	elsif (ie_data_despesa_w = 'FM') then
		if (ie_mat_med_p	   = 'S') then
			dt_retorno_w		:= dt_periodo_final_p;
		else	
			dt_retorno_w		:= dt_conta_p;
		end if;
	elsif (ie_data_despesa_w = 'FT') then
		if (ie_mat_med_p	   = 'T') then
			dt_retorno_w		:= dt_periodo_final_p;
		else	
			dt_retorno_w		:= dt_conta_p;
		end if;
	elsif (ie_data_despesa_w = 'UM') then --Ultimo dia do mes da data do item
		begin
			dt_retorno_w	:= last_day(dt_conta_p);		
		exception
		when others then
			dt_retorno_w	:= dt_conta_p;
		end;		
		if (dt_retorno_w > dt_periodo_final_p) then --Se o ultimo dia do mes for maior que o periodo final da conta, retorno o periodo final da conta
			dt_retorno_w	:= dt_periodo_final_p;
		end if;
	end if;
elsif (coalesce(ie_tipo_data_p,'D') = 'DI') then
	if (ie_data_inicial_w = 'C') then
		dt_retorno_w		:= dt_conta_p;
	elsif (ie_data_inicial_w = 'DE') then
		dt_retorno_w		:= dt_entrada_w;
	elsif (ie_data_inicial_w = 'DA') then
		dt_retorno_w		:= dt_alta_w;
	elsif (ie_data_inicial_w = 'DI') then
		dt_retorno_w 		:= dt_periodo_inicial_p;
	elsif (ie_data_inicial_w = 'DF') then
		dt_retorno_w		:= dt_periodo_final_p;
	elsif (ie_data_despesa_w = 'UM') then --Ultimo dia do mes da data do item
		begin
    dt_retorno_w := ESTABLISHMENT_TIMEZONE_UTILS.endOfMonth(dt_conta_p);
		exception
		when others then
			dt_retorno_w	:= dt_conta_p;			
		end;		
		if (dt_retorno_w > dt_periodo_final_p) then --Se o Ultimo dia do mes for maior que o periodo final da conta, retorno o periodo final da conta
			dt_retorno_w	:= dt_periodo_final_p;
		end if;
	end if;
elsif (coalesce(ie_tipo_data_p,'D') = 'DF') then
	if (ie_data_final_w = 'C') then
		dt_retorno_w		:= dt_conta_p;
	elsif (ie_data_final_w = 'DE') then
		dt_retorno_w		:= dt_entrada_w;
	elsif (ie_data_final_w = 'DA') then
		dt_retorno_w		:= dt_alta_w;
	elsif (ie_data_final_w = 'DI') then
		dt_retorno_w 		:= dt_periodo_inicial_p;
	elsif (ie_data_final_w = 'DF') then
		dt_retorno_w		:= dt_periodo_final_p;	
	elsif (ie_data_despesa_w = 'UM') then --Ultimo dia do mes da data do item
		begin
      dt_retorno_w := ESTABLISHMENT_TIMEZONE_UTILS.endOfMonth(dt_conta_p);
		exception
		when others then
			dt_retorno_w	:= dt_conta_p;			
		end;		
		if (dt_retorno_w > dt_periodo_final_p) then --Se o Ultimo dia do mes for maior que o periodo final da conta, retorno o periodo final da conta
			dt_retorno_w	:= dt_periodo_final_p;
		end if;
	end if;
end if;

return	dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_dt_despesa (cd_estabelecimento_p bigint, cd_convenio_p bigint, dt_conta_p timestamp, dt_periodo_inicial_p timestamp, dt_periodo_final_p timestamp, ie_mat_med_p text, ie_tipo_atend_conta_p bigint, nr_interno_conta_p bigint, ie_tipo_data_p text, ie_tiss_tipo_despesa_p text, cd_material_p bigint, dt_entrada_p timestamp default null, dt_alta_p timestamp default null, dt_mesano_referencia_p timestamp default null) FROM PUBLIC;

