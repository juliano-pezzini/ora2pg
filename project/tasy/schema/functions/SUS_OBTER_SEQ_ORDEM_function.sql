-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_seq_ordem ( nr_sequencia_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_proc_princ_w		bigint;
cd_proc_princ_w			procedimento_paciente.cd_procedimento%type := 0;
ie_origem_proced_w		bigint;
nr_interno_conta_w		bigint;
nr_seq_proc_valor_w		bigint;
i				bigint	:= 0;
nr_sequencia_w			bigint	:= 9999999999;
ie_ordena_proc_valor_w		varchar(15);
cd_procedimento_real_w		sus_aih_unif.cd_procedimento_real%type;
nr_seq_proc_complex_w		bigint;
ie_compat_proc_w		varchar(15);
cd_procedimento_w		bigint := 0;
cd_proced_w			procedimento_paciente.cd_procedimento%type := 0;
vl_procedimento_w		double precision;
cd_estabelecimento_w		integer;
ie_complexidade_w		varchar(2);
cd_cid_principal_w		sus_aih_unif.cd_cid_principal%type;
ie_cid_compativel_w		varchar(15);
qt_reg_onco_w			bigint := 0;
qt_reg_princ_w			bigint := 0;
nr_seq_apre_onc_w		sus_regra_seq_onco_proc.nr_seq_apresentacao%type := 0;
cd_grupo_w			sus_grupo.cd_grupo%type;
ie_utiliza_regra_ordem_seq_w	sus_parametros_aih.ie_utiliza_regra_ordem_seq%type := 'N';
qt_proc_regra4_w		bigint := 0; --OPME
nr_seq_aih_w			procedimento_paciente.nr_seq_aih%type := 0;
qt_proc_princ_w			bigint := 0;
dt_procedimento_w		procedimento_paciente.dt_procedimento%type;
dt_competencia_w		timestamp := null;

c03 CURSOR FOR
	SELECT	*
	from (	SELECT	a.nr_sequencia nr_seq_proc_valor,
				a.cd_procedimento,
				b.vl_proc_original vl_procedimento,
				sus_obter_se_cid_compativel(cd_cid_principal_w,a.cd_procedimento) ie_cid_compativel,
				d.ie_complexidade,
				a.ie_origem_proced
			from	procedimento_paciente a,
				sus_valor_proc_paciente b,
				sus_procedimento_registro c,
				sus_procedimento d
			where	c.cd_registro = 3
			and	a.cd_procedimento = c.cd_procedimento
			and	a.ie_origem_proced = c.ie_origem_proced
			and	a.cd_procedimento = d.cd_procedimento
			and	a.ie_origem_proced = d.ie_origem_proced	
			and	a.nr_sequencia = b.nr_sequencia
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and 	a.nr_interno_conta = nr_interno_conta_w) a
	where (sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_procedimento_real_w) = 'S') or (exists (	select	1
				from (select	x.cd_procedimento
					from	procedimento_paciente x
					where	x.nr_interno_conta	= nr_interno_conta_w
					and	coalesce(x.cd_motivo_exc_conta::text, '') = '') y
				where	sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,y.cd_procedimento) = 'S'))
	order by	ie_cid_compativel desc, vl_procedimento desc;

vetor_c03_w     c03%rowtype;

c04 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_valor,
		(SELECT sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_proced_w) ) ie_compat_proc,
		b.vl_proc_original vl_procedimento
	from	procedimento_paciente a,
		sus_valor_proc_paciente b
	where	((a.cd_procedimento <> cd_proced_w) or (cd_proced_w = 0))
	and	a.nr_sequencia = b.nr_sequencia
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	a.nr_interno_conta = nr_interno_conta_w
	order by	ie_compat_proc desc, vl_procedimento desc;

vetor_c04_w     c04%rowtype;

c05 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc_complex,
		(SELECT sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_proced_w) ) ie_compat_proc,
		d.vl_proc_original vl_procedimento,
		b.ie_complexidade
	from	procedimento_paciente a,
		sus_procedimento b,
		sus_procedimento_registro c,
		sus_valor_proc_paciente d
	where	c.cd_registro = 3
	and	a.cd_procedimento = b.cd_procedimento
	and	a.ie_origem_proced = b.ie_origem_proced
	and	a.cd_procedimento = c.cd_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	and	a.nr_sequencia = d.nr_sequencia
	and	((a.cd_procedimento <> cd_proced_w) or (cd_proced_w = 0))
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	a.nr_interno_conta = nr_interno_conta_w
	order by	ie_compat_proc desc,
		ie_complexidade,
		vl_procedimento desc;

vetor_c05_w     c05%rowtype;

c06 CURSOR FOR
	SELECT	*
	from (	SELECT	a.nr_sequencia nr_seq_proc_valor,
				a.cd_procedimento,
				b.vl_proc_original vl_procedimento,
				sus_obter_se_cid_compativel(cd_cid_principal_w,a.cd_procedimento) ie_cid_compativel,
				d.ie_complexidade,
				a.ie_origem_proced
			from	procedimento_paciente a,
				sus_valor_proc_paciente b,
				sus_procedimento_registro c,
				sus_procedimento d
			where	c.cd_registro = 3
			and	a.cd_procedimento = c.cd_procedimento
			and	a.ie_origem_proced = c.ie_origem_proced
			and	a.cd_procedimento = d.cd_procedimento
			and	a.ie_origem_proced = d.ie_origem_proced	
			and	a.nr_sequencia = b.nr_sequencia
			and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
			and 	a.nr_interno_conta = nr_interno_conta_w) a
	where (sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,cd_procedimento_real_w) = 'S') or (exists (select	1
			from (select	x.cd_procedimento
				from	procedimento_paciente x
				where	x.nr_interno_conta	= nr_interno_conta_w
				and	coalesce(x.cd_motivo_exc_conta::text, '') = '') y
			where	sus_obter_se_proc_compativel(a.cd_procedimento,a.ie_origem_proced,y.cd_procedimento) = 'S'))
	order by	ie_cid_compativel desc, ie_complexidade, vl_procedimento desc;

vetor_c06_w     c06%rowtype;


BEGIN

/* Observar a preformance antes de efetuar qualquer ajuste neste objeto */

select	nr_seq_proc_princ,
	nr_interno_conta,
	cd_procedimento,
	sus_validar_regra(4, cd_procedimento, ie_origem_proced, dt_procedimento),
	coalesce(nr_seq_aih,0)
into STRICT	nr_seq_proc_princ_w,
	nr_interno_conta_w,
	cd_proced_w,
	qt_proc_regra4_w,
	nr_seq_aih_w
from	procedimento_paciente
where	nr_sequencia    = nr_sequencia_p;

if (coalesce(nr_seq_proc_princ_w,0) > 0) then
	begin
	select 	coalesce(cd_procedimento,0),
		ie_origem_proced,
		coalesce(nr_seq_aih,0),
		dt_procedimento
	into STRICT	cd_proc_princ_w,
		ie_origem_proced_w,
		nr_seq_aih_w,
		dt_procedimento_w
	from	procedimento_paciente
	where	nr_sequencia    = nr_seq_proc_princ_w;
	end;
else
	begin
	
	select	count(1)
	into STRICT	qt_proc_princ_w
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_w
	and	nr_seq_proc_princ = nr_sequencia_p
	and	coalesce(cd_motivo_exc_conta::text, '') = '';
	
	if (qt_proc_princ_w > 0) then
		nr_seq_proc_princ_w	:= nr_sequencia_p;
	end if;
	
	end;
end if;

cd_estabelecimento_w	:= coalesce(obter_estab_conta_paciente(nr_interno_conta_w),0);

select	coalesce(ie_ordena_proc_valor,'N'),
	coalesce(ie_utiliza_regra_ordem_seq,'N')
into STRICT	ie_ordena_proc_valor_w,
	ie_utiliza_regra_ordem_seq_w
from	sus_parametros_aih
where	cd_estabelecimento      = cd_estabelecimento_w;

if (nr_seq_aih_w = 0) then
	begin
	if (ie_utiliza_regra_ordem_seq_w = 'N') then
		begin
		nr_sequencia_w := sus_obter_seq_ord_onco(nr_sequencia_p);
		end;
	else
		begin	

		begin
		select	d.cd_grupo
		into STRICT	cd_grupo_w
		from	sus_procedimento a,
			sus_forma_organizacao b,
			sus_subgrupo c,
			sus_grupo d
		where	c.nr_seq_grupo		= d.nr_sequencia
		and	b.nr_seq_subgrupo	= c.nr_sequencia
		and	a.nr_seq_forma_org	= b.nr_sequencia
		and	a.cd_procedimento	= cd_proced_w
		and	a.ie_origem_proced	= 7  LIMIT 1;
		exception
		when others then
			cd_grupo_w := '0';
		end;

		if	((cd_proc_princ_w > 0) and (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_proc_princ_w,ie_origem_proced_p => ie_origem_proced_w,dt_competencia_p => dt_procedimento_w) > 0)) or (cd_grupo_w <> '7') and (qt_proc_princ_w = 0) then
			nr_seq_proc_princ_w     := null;
		end if;		

		begin
			select	coalesce(cd_procedimento_real,0),
				coalesce(cd_cid_principal,'0'),
				coalesce(dt_inicial,null)
			into STRICT	cd_procedimento_real_w,
				cd_cid_principal_w,
				dt_competencia_w
			from	sus_aih_unif
			where	nr_interno_conta = nr_interno_conta_w  LIMIT 1;
		exception
		when others then
			cd_procedimento_real_w 	:= 0;
			cd_cid_principal_w	:= '0';
			dt_competencia_w := null;
		end;

		if (coalesce(cd_procedimento_real_w,0) = 0) then
			begin

			begin
			select	coalesce(c.cd_procedimento_solic,0),
				coalesce(cd_cid_principal,'0'),
				coalesce(c.dt_emissao,null)
			into STRICT	cd_procedimento_real_w,
				cd_cid_principal_w,
				dt_competencia_w
			from	sus_laudo_paciente	c,
				conta_paciente		b,
				procedimento_paciente	a
			where	a.nr_sequencia		= nr_sequencia_p
			and	a.nr_interno_conta	= b.nr_interno_conta
			and	b.nr_interno_conta	= c.nr_interno_conta
			and	c.nr_seq_interno = (	SELECT	max(x.nr_seq_interno)
							from	sus_laudo_paciente x
							where	x.nr_interno_conta = c.nr_interno_conta
							and	x.ie_tipo_laudo_sus in (0,1));
			exception
			when others then
				cd_procedimento_real_w	:= 0;
				cd_cid_principal_w	:= '0';
				dt_competencia_w := null;
			end;
			end;
		end if;

		begin
		select	count(1)
		into STRICT	qt_reg_onco_w
		from	sus_regra_seq_oncologia
		where	ie_situacao = 'A'  LIMIT 1;
		exception
		when others then
			qt_reg_onco_w := 0;
		end;

		select	count(1)
		into STRICT	qt_reg_princ_w
		from	sus_procedimento_registro
		where	cd_procedimento	= cd_proced_w
		and	ie_origem_proced = 7
		and	cd_registro = 3  LIMIT 1;


		if (ie_ordena_proc_valor_w = 'N') then
			nr_sequencia_w := coalesce(nr_seq_proc_princ_w,nr_sequencia_w);
		elsif (ie_ordena_proc_valor_w = 'S') then
			begin	
			
			nr_sequencia_w := coalesce(nr_seq_proc_princ_w,nr_sequencia_w);
			
			if (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p =>7,dt_competencia_p => dt_competencia_w) > 0) then
				begin
				if (qt_reg_onco_w > 0) and (qt_reg_princ_w > 0) then
					begin
					nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proced_w,nr_interno_conta_w),0);
					nr_sequencia_w := nr_seq_apre_onc_w;
					end;
				end if;

				if	((qt_reg_onco_w = 0) or (nr_seq_apre_onc_w = 0)) then
					begin

					for vetor_c03_w in c03 loop
                                                begin

                                                nr_seq_proc_valor_w     := vetor_c03_w.nr_seq_proc_valor;
                                                cd_procedimento_w       := vetor_c03_w.cd_procedimento;

                                                if (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                        nr_sequencia_w := -1;
                                                end if;
                                                if (nr_seq_proc_valor_w = coalesce(nr_seq_proc_princ_w,0)) then
                                                        if (qt_reg_onco_w > 0) then
                                                                nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_procedimento_w,nr_interno_conta_w),0);
                                                                if (nr_seq_apre_onc_w > 0) then
                                                                        nr_sequencia_w := nr_seq_apre_onc_w;
                                                                else
                                                                        nr_sequencia_w := -1;
                                                                end if;
                                                        else
                                                                nr_sequencia_w := -1;
                                                        end if;
                                                end if;				

                                                end;
                                        end loop;					
					
					end;
				end if;
				end;
			else
				begin
                                for vetor_c04_w in c04 loop
                                        begin

                                        nr_seq_proc_valor_w := vetor_c04_w.nr_seq_proc_valor;					

                                        if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                                begin
                                                if (nr_seq_proc_princ_w = nr_seq_proc_valor_w) then
                                                        begin
                                                        if (qt_reg_onco_w > 0) and (qt_proc_regra4_w = 0)then
                                                                nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proc_princ_w,nr_interno_conta_w),0);
                                                                if (nr_seq_apre_onc_w > 0) then
                                                                        nr_sequencia_w := nr_seq_apre_onc_w;
                                                                else
                                                                        nr_sequencia_w := nr_seq_proc_valor_w;
                                                                end if;
                                                        else
                                                                nr_sequencia_w := nr_seq_proc_valor_w;
                                                        end if;	
                                                        end;
                                                end if;
                                                end;
                                        elsif (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                nr_sequencia_w := i;
                                        end if;
                                        i := i + 1;
                                        end;

                                end loop;
									
				end;
			end if;	
			end;
		elsif (ie_ordena_proc_valor_w = 'C') then
			begin

			nr_sequencia_w := coalesce(nr_seq_proc_princ_w,nr_sequencia_w);
			
			if (sus_validar_regra(nr_seq_regra_p => 11,cd_procedimento_p => cd_procedimento_real_w,ie_origem_proced_p =>7,dt_competencia_p => dt_competencia_w) > 0) then
				begin

				if (qt_reg_onco_w > 0) and (qt_reg_princ_w > 0) then
					begin
					nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proced_w,nr_interno_conta_w),0);
					nr_sequencia_w := nr_seq_apre_onc_w;
					end;
				end if;

				if	((qt_reg_onco_w = 0) or (nr_seq_apre_onc_w = 0)) then
					begin
                                	for vetor_c06_w in c06 loop
                                                begin

                                                nr_seq_proc_valor_w := vetor_c06_w.nr_seq_proc_valor;
                                                cd_procedimento_w := vetor_c06_w.cd_procedimento;

                                                if (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                        nr_sequencia_w := -1;
                                                end if;
                                                if (nr_seq_proc_valor_w = coalesce(nr_seq_proc_princ_w,0)) then
                                                        if (qt_reg_onco_w > 0) then
                                                                nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_procedimento_w,nr_interno_conta_w),0);
                                                                if (nr_seq_apre_onc_w > 0) then
                                                                        nr_sequencia_w := nr_seq_apre_onc_w;
                                                                else
                                                                        nr_sequencia_w := -1;
                                                                end if;
                                                        else
                                                                nr_sequencia_w := -1;
                                                        end if;
                                                end if;						

                                                end;
                                        end loop;

					end;

					if (coalesce(cd_grupo_w,'0') <> '07') then
                                                begin
                                                for vetor_c05_w in c05 loop
                                                        begin

                                                        nr_seq_proc_complex_w := vetor_c05_w.nr_seq_proc_complex;												

                                                        if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                                                if (nr_seq_proc_princ_w = nr_seq_proc_complex_w) then
                                                                        nr_sequencia_w := i;
                                                                end if;
                                                        elsif (nr_seq_proc_complex_w = nr_sequencia_p) then
                                                                nr_sequencia_w := i;
                                                        end if;
                                                        i := i + 1;

                                                        end;
                                                end loop;						
                                                end;
					end if;
				end if;

				end;		
			else
				begin				
				
                                for vetor_c04_w in c04 loop
                                        begin

                                        nr_seq_proc_valor_w := vetor_c04_w.nr_seq_proc_valor;					

                                        if (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then
                                                begin
                                                if (nr_seq_proc_princ_w = nr_seq_proc_valor_w) then
                                                        begin
                                                        if (qt_reg_onco_w > 0) and (qt_proc_regra4_w = 0)then
                                                                nr_seq_apre_onc_w := coalesce(sus_obter_seq_regra_onco(cd_proc_princ_w,nr_interno_conta_w),0);
                                                                if (nr_seq_apre_onc_w > 0) then
                                                                        nr_sequencia_w := nr_seq_apre_onc_w;
                                                                else
                                                                        nr_sequencia_w := nr_seq_proc_valor_w;
                                                                end if;
                                                        else
                                                                nr_sequencia_w := nr_seq_proc_valor_w;
                                                        end if;	
                                                        end;
                                                end if;
                                                end;
                                        elsif (nr_seq_proc_valor_w = nr_sequencia_p) then
                                                nr_sequencia_w := i;
                                        end if;
                                        i := i + 1;
                                        end;
                                end loop;
				
				end;
			end if;
			end;
		end if;

		end;
	end if;
	end;
else
	nr_sequencia_w := nr_seq_aih_w;
end if;

return  nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_seq_ordem ( nr_sequencia_p bigint) FROM PUBLIC;

