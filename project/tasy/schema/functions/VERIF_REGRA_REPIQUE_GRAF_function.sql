-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verif_regra_repique_graf (nr_cirurgia_p bigint) RETURNS varchar AS $body$
DECLARE


vl_retorno_w		varchar(255)	:= '';
nr_seq_retorno_w		varchar(255)	:= '';
qt_minutos_w		double precision;
cd_material_w		double precision;
cd_material_anest_w		double precision;
dt_aviso_repique_w	timestamp;
dt_final_adm_w		timestamp;
qt_minutos_regra_w	double precision;
ds_mensagem_regra_w	varchar(255);
nr_seq_cirur_agente_w double precision;
nr_prescricao_w double precision;
nr_seq_proc_interno_w double precision;
dt_termino_w timestamp;
cd_pessoa_fisica_w	usuario.cd_pessoa_fisica%type;

C01 CURSOR FOR
SELECT	qt_minutos,
		cd_material,
		ds_mensagem_regra
	from 	regra_repique_adm_graf
	where 	1 = 1
  and 	ie_situacao = 'A'
	and 	qt_minutos > 0
	and (coalesce(cd_pessoa_fisica::text, '') = '' or cd_pessoa_fisica = cd_pessoa_fisica_w)
	and (coalesce(cd_perfil::text, '') = '' or cd_perfil = obter_perfil_ativo)
	and (coalesce(cd_estabelecimento::text, '') = '' or cd_estabelecimento = obter_estabelecimento_ativo)
  and (coalesce(nr_seq_proc_interno::text, '') = '' 
    or nr_seq_proc_interno = nr_seq_proc_interno_w
    or nr_seq_proc_interno in (Select max(nr_seq_proc_interno) from prescr_procedimento where nr_prescricao = nr_prescricao_w));

C02 CURSOR FOR
SELECT	nr_sequencia
	from	cirurgia_agente_anestesico
	where 1 = 1
	and	nr_cirurgia = nr_cirurgia_p
	and ie_situacao = 'A'
	and cd_material = cd_material_w;
	
C03 CURSOR FOR
SELECT	dt_aviso_repique,
		CASE WHEN ie_aplic_bolus='S' THEN dt_inicio_adm  ELSE dt_final_adm END
	from   cirurgia_agente_anest_ocor
	Where  nr_seq_cirur_agente = nr_seq_cirur_agente_w
	and    coalesce(dt_aviso_repique::text, '') = ''
	and   dt_final_adm = (select max(dt_final_adm)
            from   cirurgia_agente_anest_ocor
            Where  nr_seq_cirur_agente = nr_seq_cirur_agente_w
            and    coalesce(dt_aviso_repique::text, '') = '');


BEGIN

  select max(nr_prescricao), max(nr_seq_proc_interno), max(dt_termino)
  into STRICT nr_prescricao_w, nr_seq_proc_interno_w, dt_termino_w
  from cirurgia where nr_cirurgia = nr_cirurgia_p;

  select	max(b.cd_pessoa_fisica)
  into STRICT	cd_pessoa_fisica_w
  from	usuario b
  where	b.nm_usuario = wheb_usuario_pck.get_nm_usuario;

  if (coalesce(dt_termino_w::text, '') = '') then
    begin
      open C01;
      loop
      fetch C01 into	
        qt_minutos_regra_w,
        cd_material_w,
        ds_mensagem_regra_w;
      EXIT WHEN NOT FOUND; /* apply on C01 */

        --pega a inf. do medicamento(cd_material do C01) da regra e verifica nas administracoes
        open C02;
        loop
        fetch C02 into	
          nr_seq_cirur_agente_w;
        EXIT WHEN NOT FOUND; /* apply on C02 */

            open C03;
            loop
            fetch C03 into	
              dt_aviso_repique_w,
              dt_final_adm_w;
            EXIT WHEN NOT FOUND; /* apply on C03 */

                --caso tiver dt_aviso_repique
                if (coalesce(dt_aviso_repique_w::text, '') = '') then
                  qt_minutos_w := Obter_Min_Entre_Datas(dt_final_adm_w, clock_timestamp(), 1);

                  if (qt_minutos_w >= qt_minutos_regra_w) then
                    --excedeu os minutos, mostrar aviso
                    vl_retorno_w := nr_seq_cirur_agente_w || ';' || ds_mensagem_regra_w;
                end if;
              end if;
            end loop;
            close C03;
        end loop;
        close C02;
      end loop;
      close C01;
    end;
  end if;
return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verif_regra_repique_graf (nr_cirurgia_p bigint) FROM PUBLIC;

