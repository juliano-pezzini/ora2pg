-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_resumo_item_conta ( cd_convenio_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_cod_desc_p text) RETURNS varchar AS $body$
DECLARE


cd_resumo_w			varchar(20);
ds_resumo_w			varchar(100);
cd_grupo_mat_w		smallint;
cd_subgrupo_mat_w		smallint;
cd_classe_mat_w		integer;
cd_grupo_proc_w		bigint;
cd_espec_proc_w		bigint;
cd_area_proc_w		bigint;

c01 CURSOR FOR
	SELECT		cd_resumo,
			ds_resumo
	from		REGRA_RESUMO_ITEM_CONTA
	where		coalesce(cd_convenio, cd_convenio_p)			= cd_convenio_p
	and		coalesce(cd_procedimento,cd_procedimento_p) 		= cd_procedimento_p
	and		((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced,ie_origem_proced_p)= ie_origem_proced_p))
	--and		nvl(ie_origem_proced,ie_origem_proced_p)	= ie_origem_proced_p
	and		coalesce(cd_area_proced,cd_area_proc_w)		= cd_area_proc_w
	and		coalesce(cd_especial_proced,cd_espec_proc_w)		= cd_espec_proc_w
	and		coalesce(cd_grupo_proced,cd_grupo_proc_w)		= cd_grupo_proc_w
	and		(cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '')
	order by
			coalesce(cd_procedimento,0),
			coalesce(cd_grupo_proced,0),
			coalesce(cd_especial_proced,0),
			coalesce(cd_area_proced,0);

C02 CURSOR FOR
	SELECT		cd_resumo,
			ds_resumo
	from		REGRA_RESUMO_ITEM_CONTA
	where		coalesce(cd_convenio, cd_convenio_p)			= cd_convenio_p
	and		coalesce(cd_material,cd_material_p) 			= cd_material_p
	and		coalesce(cd_grupo_material,cd_grupo_mat_w) 		= cd_grupo_mat_w
	and		coalesce(cd_subgrupo_material,cd_subgrupo_mat_w) 	= cd_subgrupo_mat_w
	and		coalesce(cd_classe_material,cd_classe_mat_w) 	= cd_classe_mat_w
	and		(cd_material_p IS NOT NULL AND cd_material_p::text <> '')
	order by
			coalesce(cd_material,0),
			coalesce(cd_grupo_material,0),
			coalesce(cd_subgrupo_material,0),
			coalesce(cd_classe_material,0);


BEGIN


if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
	cd_grupo_proc_w		:= 0;
	cd_espec_proc_w		:= 0;
	cd_area_proc_w		:= 0;
	begin
	select cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento
	into STRICT	cd_grupo_proc_w,
		cd_espec_proc_w,
		cd_area_proc_w
	from	Estrutura_Procedimento_V
	where	cd_procedimento 	= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;
	exception
		when others then
		cd_grupo_proc_w	:= 0;
		cd_espec_proc_w	:= 0;
		cd_area_proc_w	:= 0;
	end;
	Open	c01;
	Loop
	Fetch	c01 into
		cd_resumo_w,
		ds_resumo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		cd_resumo_w	:= cd_resumo_w;
		ds_resumo_w	:= ds_resumo_w;
	end;
	end loop;
	close c01;
end if;


if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
	cd_grupo_mat_w		:= 0;
	cd_subgrupo_mat_w		:= 0;
	cd_classe_mat_w		:= 0;
	begin
	select cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material
	into STRICT	cd_grupo_mat_w,
		cd_subgrupo_mat_w,
		cd_classe_mat_w
	from 	estrutura_material_v
	where 	cd_material		= cd_material_p;
	exception
		when others then
		cd_grupo_mat_w		:= 0;
		cd_subgrupo_mat_w		:= 0;
		cd_classe_mat_w		:= 0;
	end;
	open	c02;
	loop
	fetch	c02 into
		cd_resumo_w,
		ds_resumo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		cd_resumo_w	:= cd_resumo_w;
		ds_resumo_w	:= ds_resumo_w;
		end;
	end loop;
	close c02;
end if;

if (ie_cod_desc_p = 'D') then
	return	ds_resumo_w;
else
	return	cd_resumo_w;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_resumo_item_conta ( cd_convenio_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_cod_desc_p text) FROM PUBLIC;

