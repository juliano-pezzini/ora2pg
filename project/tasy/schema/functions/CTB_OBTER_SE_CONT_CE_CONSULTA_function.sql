-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ctb_obter_se_cont_ce_consulta ( cd_empresa_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nm_usuario_p text, dt_vigencia_p timestamp DEFAULT NULL) RETURNS varchar AS $body$
DECLARE


cd_conta_contabil_w			varchar(20)	:= cd_conta_contabil_p;
ie_centro_custo_w				varchar(1)	:= 'N';
ie_centro_lib_w				varchar(1)	:= 'S';
ie_conta_lib_w				varchar(1)	:= 'S';
ie_nivel_w					bigint;
ie_permite_w				varchar(1)	:= 'S';
qt_regra_w						bigint	:= 0;
cd_estabelecimento_w			smallint;
cd_classif_conta_w				varchar(40);
ie_permissao_visual_w			varchar(1)	:= 'S';
cd_perfil_w						integer;

/* regra de contas*/

c01 CURSOR FOR
SELECT	ctb_obter_nivel_conta(cd_conta_contabil) ie_nivel_conta,
	coalesce(ie_atualizacao,'N'),
	coalesce(ie_centro_custo,'N'),
	coalesce(ie_permissao_visual,'N') ie_permissao_visual
FROM	ctb_lib_orc_conta
WHERE	cd_empresa			= cd_empresa_p
AND		((nm_usuario_lib			= nm_usuario_p) or (coalesce(nm_usuario_lib::text, '') = ''))
and	((cd_perfil 		= cd_perfil_w) or (coalesce(cd_perfil::text, '') = ''))
AND	ie_conta_inferior		= 'N'
AND	coalesce(cd_conta_contabil,cd_conta_contabil_w) = cd_conta_contabil_w
AND	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w

UNION ALL

SELECT	ctb_obter_nivel_conta(a.cd_conta_contabil) ie_nivel_conta,
	coalesce(a.ie_atualizacao,'N'),
	coalesce(a.ie_centro_custo,'N'),
	coalesce(ie_permissao_visual,'N') ie_permissao_visual
FROM	conta_contabil b,
	ctb_lib_orc_conta a
WHERE	a.cd_conta_contabil		= b.cd_conta_contabil
AND	a.cd_empresa			= b.cd_empresa
AND	a.cd_empresa			= cd_empresa_p
and	((cd_perfil 		= cd_perfil_w) or (coalesce(cd_perfil::text, '') = ''))
AND		((nm_usuario_lib			= nm_usuario_p) or (coalesce(nm_usuario_lib::text, '') = ''))
AND	ie_conta_inferior		= 'S'
AND	SUBSTR(ctb_obter_se_classif_sup(cd_classif_conta_w, b.cd_classificacao_atual),1,1) = 'S'
AND	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
ORDER BY 1;



BEGIN

cd_perfil_w		:=	wheb_usuario_pck.get_cd_perfil;

BEGIN
	cd_classif_conta_w	:= ctb_obter_classif_conta(cd_conta_contabil_p, NULL, dt_vigencia_p);

	cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
	IF (cd_estabelecimento_w = 0) THEN
		SELECT	cd_estabelecimento
		INTO STRICT	cd_estabelecimento_w
		FROM	centro_custo
		WHERE	cd_centro_custo	= cd_centro_custo_p;
	END IF;
EXCEPTION WHEN OTHERS THEN
	SELECT	cd_estabelecimento
	INTO STRICT	cd_estabelecimento_w
	FROM	centro_custo
	WHERE	cd_centro_custo	= cd_centro_custo_p;
END;

/* verifica se o centro está liberado para o usuário */

ie_centro_lib_w		:= coalesce(SUBSTR(ctb_obter_se_centro_usuario(cd_centro_custo_p,cd_empresa_p,nm_usuario_p),1,1),'N');

/* verifica se existe regra de contas contábeis*/

/*select	count(*)
into	qt_regra_w
from	ctb_lib_orc_conta
where	cd_empresa = cd_empresa_p;*/
SELECT	coalesce(MAX(1),0)
INTO STRICT	qt_regra_w

WHERE	EXISTS (	SELECT	1
		FROM	ctb_lib_orc_conta
		WHERE	cd_empresa	= cd_empresa_p
		AND	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w);

IF (qt_regra_w > 0) THEN

	ie_permite_w	:= 'N';
	ie_conta_lib_w	:= 'N';
	/* se tiver regra, verifica se pode ou não atualizar o orçamento de todas ou de uma conta*/

	OPEN c01;
	LOOP
	FETCH c01 INTO
		ie_nivel_w,
		ie_conta_lib_w,
		ie_centro_custo_w,
		ie_permissao_visual_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
		ie_conta_lib_w	:= 'S'; --Desconsidera este parâmetro, pois para consulta independente dele estiver selecionado não deve influenciar.
		END;
	END LOOP;
	CLOSE c01;
END IF;

IF (ie_centro_lib_w <> ie_conta_lib_w) THEN
	BEGIN
	IF (ie_centro_lib_w = 'S') THEN
		BEGIN
		IF (ie_conta_lib_w = 'N') THEN
			ie_permite_w	:= 'N';
		END IF;
		END;
	ELSIF (ie_centro_lib_w = 'N') THEN
		BEGIN /* Se o centro não liberado libera a conta somente se regra especial */
		IF (ie_conta_lib_w = 'S') THEN
			BEGIN
			IF (ie_centro_custo_w = 'N') THEN
				ie_permite_w	:= 'N';
			ELSIF (ie_centro_custo_w = 'S') THEN
				ie_permite_w	:= 'S';
			END IF;
			END;
		END IF;
		END;
	ELSIF (ie_centro_lib_w = 'V') THEN
		BEGIN
		ie_permite_w	:= ie_permissao_visual_w;
		END;
	END IF;
	END;
ELSE	/* Se centro e conta liberados = PERMITE - se centro e conta NÃO liberados = NÃO PERMITE */
	ie_permite_w	:= ie_centro_lib_w;
END IF;

RETURN ie_permite_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ctb_obter_se_cont_ce_consulta ( cd_empresa_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nm_usuario_p text, dt_vigencia_p timestamp DEFAULT NULL) FROM PUBLIC;

