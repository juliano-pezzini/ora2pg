-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_ordem_pendente_entrega ( nr_ordem_compra_p bigint, nr_item_oci_p bigint) RETURNS bigint AS $body$
DECLARE


ie_resultado_w			smallint;
qt_itens_ordem_compra_w		integer;
qt_itens_pendente_w			integer;
qt_itens_entregue_w			integer;
qt_itens_ini_pend_w			integer;
qt_itens_oc_dia_w			integer;


/* Retorna 0 = Nenhum item pendente	*/

/* Retorna 1 = Parcialmente atrasada	*/

/* Retorna 2 = Toda atrasada	*/

/* Retorna 3 = Parcialmente entregue	*/

/* Retorna 4 = Possui item pendente à autorizar */

BEGIN
ie_resultado_w	:= 0;
if (nr_item_oci_p = 0) then
	begin

	select	count(*)
	into STRICT	qt_itens_ordem_compra_w
	from	ordem_compra_item a,
		ordem_compra_item_entrega b
	where	a.nr_ordem_compra = b.nr_ordem_compra
	and	a.nr_item_oci = b.nr_item_oci
	and	a.nr_ordem_compra = nr_ordem_compra_p
	and 	coalesce(b.dt_cancelamento::text, '') = '';


	select	count(*)
	into STRICT	qt_itens_oc_dia_w
	from	ordem_compra_item a,
		ordem_compra_item_entrega b
	where	a.nr_ordem_compra = b.nr_ordem_compra
	and	a.nr_item_oci = b.nr_item_oci
	and	a.nr_ordem_compra = nr_ordem_compra_p
	and 	coalesce(b.dt_cancelamento::text, '') = ''
	and	trunc(b.dt_prevista_entrega,'dd') < trunc(clock_timestamp(),'dd');

	select	count(*)
	into STRICT	qt_itens_pendente_w
	from	ordem_compra_item_entrega b,
		ordem_compra_item a
	where	a.nr_ordem_compra = nr_ordem_compra_p
	and	a.nr_ordem_compra = b.nr_ordem_compra
	and	a.nr_item_oci = b.nr_item_oci
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and (coalesce(b.qt_real_entrega,0) < coalesce(b.qt_prevista_entrega,0) or coalesce(b.dt_real_entrega::text, '') = '' )
	and	trunc(b.dt_prevista_entrega,'dd') < trunc(clock_timestamp(),'dd');

	select	count(*)
	into STRICT	qt_itens_entregue_w
	from	ordem_compra_item_entrega
	where	(dt_real_entrega IS NOT NULL AND dt_real_entrega::text <> '')
	and	nr_ordem_compra = nr_ordem_compra_p
	and	coalesce(dt_cancelamento::text, '') = '';


	if (qt_itens_pendente_w = 0) and
		((qt_itens_entregue_w = 0) or (qt_itens_ordem_compra_w = qt_itens_entregue_w)) then
		ie_resultado_w := 0; /*Não atrasada*/
	elsif	((qt_itens_oc_dia_w > qt_itens_entregue_w AND qt_itens_entregue_w > 0) or
		(qt_itens_ordem_compra_w > qt_itens_oc_dia_w AND qt_itens_entregue_w = 0)) then
		ie_resultado_w	:= 1; /*Parcial atrasada*/
	elsif (qt_itens_ordem_compra_w  = qt_itens_pendente_w) and (qt_itens_pendente_w > 0) then
		ie_resultado_w	:= 2; /*Toda Atrasada*/
	elsif (qt_itens_entregue_w > 0) then
		ie_resultado_w := 3; /*Parcialmente entregue*/
	end if;
	end;


elsif (nr_item_oci_p > 0) then
	begin

	select	count(*)
	into STRICT	qt_itens_ini_pend_w
	from	ordem_compra_item_entrega b,
		ordem_compra_item a
	where	a.nr_ordem_compra	= nr_ordem_compra_p
	and	a.nr_item_oci		= nr_item_oci_p
	and	a.nr_ordem_compra	= b.nr_ordem_compra
	and	a.nr_item_oci		= b.nr_item_oci
	and	(b.dt_inicio_pendencia IS NOT NULL AND b.dt_inicio_pendencia::text <> '')
	and	coalesce(b.dt_fim_pendencia::text, '') = '';

	select	count(*)
	into STRICT	qt_itens_pendente_w
	from	ordem_compra_item_entrega b,
		ordem_compra_item a
	where	a.nr_ordem_compra	= nr_ordem_compra_p
	and	a.nr_item_oci		= nr_item_oci_p
	and	a.nr_ordem_compra	= b.nr_ordem_compra
	and	a.nr_item_oci		= b.nr_item_oci
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	coalesce(b.qt_real_entrega,0) < coalesce(b.qt_prevista_entrega,0)
	and	trunc(b.dt_prevista_entrega,'dd') < trunc(clock_timestamp(),'dd');

	select	count(*)
	into STRICT	qt_itens_entregue_w
	from	ordem_compra_item_entrega
	
	where	coalesce(qt_real_entrega,0) > 0
	and	coalesce(qt_real_entrega,0) < coalesce(qt_prevista_entrega,0)
	and	nr_ordem_compra = nr_ordem_compra_p
	and	nr_item_oci = nr_item_oci_p
	and	coalesce(dt_cancelamento::text, '') = '';

	if (qt_itens_ini_pend_w > 0) then
		ie_resultado_w	:= 4; /*Item pendente de autorizacao*/
	elsif (qt_itens_entregue_w > 0) then
		ie_resultado_w := 3; /*Item parcialmente entregue*/
	elsif (qt_itens_pendente_w = 0) then
		ie_resultado_w	:= 0; /*Não atrasado*/
	elsif (qt_itens_pendente_w > 0) then
		ie_resultado_w	:= 1; /*Item OC Atrasado*/
	end if;
	end;
end if;

return	ie_resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_ordem_pendente_entrega ( nr_ordem_compra_p bigint, nr_item_oci_p bigint) FROM PUBLIC;

