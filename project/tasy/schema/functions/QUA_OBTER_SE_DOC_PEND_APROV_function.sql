-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION qua_obter_se_doc_pend_aprov ( nr_sequencia_p bigint, cd_pessoa_aprov_p text) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			varchar(1) := 'N';
ie_aprov_sem_valid_w		varchar(255);
ie_aprov_rev_sem_valid_w		varchar(255);
cd_cargo_w			pessoa_fisica.cd_cargo%type;
cd_setor_atendimento_w		usuario.cd_setor_atendimento%type;


BEGIN

if (coalesce(nr_sequencia_p,0) > 0) and (coalesce(cd_pessoa_aprov_p,'0') <> '0') then
begin
	ie_aprov_sem_valid_w := coalesce(obter_valor_param_usuario(4000, 24, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'S');
	ie_aprov_rev_sem_valid_w := coalesce(obter_valor_param_usuario(4000, 45, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'S');

	if (ie_aprov_sem_valid_w in ('N', 'B')) then
	begin
		select	'S'
		into STRICT	ie_retorno_w
		from	qua_documento
		where	coalesce(dt_aprovacao::text, '') = ''
		and	(((ie_aprov_sem_valid_w = 'N') and ((dt_validacao IS NOT NULL AND dt_validacao::text <> '') or coalesce(cd_pessoa_validacao::text, '') = ''))
		or	(ie_aprov_sem_valid_w = 'B' AND dt_validacao IS NOT NULL AND dt_validacao::text <> ''))
		and	ie_status = 'V'
		and	cd_pessoa_aprov = cd_pessoa_aprov_p
		and	nr_sequencia = nr_sequencia_p  LIMIT 1;
		exception
		when others then
			ie_retorno_w := 'N';
	end;
	else
	begin
		select	'S'
		into STRICT	ie_retorno_w
		from	qua_documento
		where	coalesce(dt_aprovacao::text, '') = ''
		and	cd_pessoa_aprov = cd_pessoa_aprov_p
		and	nr_sequencia = nr_sequencia_p  LIMIT 1;
		exception
		when others then
			ie_retorno_w := 'N';
	end;
	end if;

	if (ie_retorno_w = 'N') then
	begin
		select	a.cd_cargo,
			b.cd_setor_atendimento
		into STRICT	cd_cargo_w,
			cd_setor_atendimento_w
		from	pessoa_fisica a,
			usuario b
		where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
		and	b.nm_usuario = wheb_usuario_pck.get_nm_usuario;

		begin
			select	'S'
			into STRICT	ie_retorno_w
			from	qua_doc_aprov
			where	((cd_cargo = cd_cargo_w) or (cd_setor_atendimento = cd_setor_atendimento_w) or (cd_pessoa_aprov = cd_pessoa_aprov_p))
			and	coalesce(dt_aprovacao::text, '') = ''
			and	nr_seq_doc = nr_sequencia_p  LIMIT 1;
			exception
			when others then
				ie_retorno_w := 'N';
		end;

		if (ie_retorno_w = 'N') then
		begin
			if (ie_aprov_rev_sem_valid_w in ('N', 'B')) then
			begin
				select	'S'
				into STRICT	ie_retorno_w
				from	qua_doc_revisao
				where	coalesce(dt_aprovacao::text, '') = ''
				and	(((ie_aprov_sem_valid_w = 'N') and ((dt_validacao IS NOT NULL AND dt_validacao::text <> '') or coalesce(cd_pessoa_validacao::text, '') = ''))
				or	(ie_aprov_sem_valid_w = 'B' AND dt_validacao IS NOT NULL AND dt_validacao::text <> ''))
				and	cd_pessoa_aprovacao = cd_pessoa_aprov_p
				and	nr_seq_doc = nr_sequencia_p  LIMIT 1;
				exception
				when others then
					ie_retorno_w := 'N';
			end;
			else
			begin
				select	'S'
				into STRICT	ie_retorno_w
				from	qua_doc_revisao
				where	coalesce(dt_aprovacao::text, '') = ''
				and	cd_pessoa_aprovacao = cd_pessoa_aprov_p
				and	nr_seq_doc = nr_sequencia_p  LIMIT 1;
				exception
				when others then
					ie_retorno_w := 'N';
			end;
			end if;

			if (ie_retorno_w = 'N') then
			begin
				select	'S'
				into STRICT	ie_retorno_w
				from	qua_doc_revisao_aprovacao b,
					qua_doc_revisao a
				where	a.nr_sequencia = b.nr_seq_revisao
				and	coalesce(b.dt_aprovacao::text, '') = ''
				and	b.cd_pessoa_aprov = cd_pessoa_aprov_p
				and	a.nr_seq_doc = nr_sequencia_p  LIMIT 1;
				exception
				when others then
					ie_retorno_w := 'N';
			end;
			end if;
		end;
		end if;
	end;
	end if;

end;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION qua_obter_se_doc_pend_aprov ( nr_sequencia_p bigint, cd_pessoa_aprov_p text) FROM PUBLIC;

