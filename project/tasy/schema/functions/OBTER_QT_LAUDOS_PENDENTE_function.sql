-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_qt_laudos_pendente (nr_atendimento_p bigint, nr_seq_laudo_fora_p bigint, nr_seq_proc_fora_p bigint) RETURNS bigint AS $body$
DECLARE


/*

Function criada para a OS 19904
nr_seq_laudo_fora_p = 	verificar se tem laudos pendentes que não sejam este laudo
nr_seq_proc_fora_p = 	verificar se tem procedimentos sem laudos ou com laudos pendentes que não sejam deste procedimento

*/
qt_laudo_pendente_w		integer;
qt_proc_sem_laudo_w		integer;
retorno_w			integer;
nr_sequencia_prescricao_w	bigint;
nr_prescricao_w			bigint;
qt_proc_sem_exec_w		bigint;
ie_opcao_w			varchar(2);



BEGIN

	select  coalesce(max(ie_laudo_pendente),'L')
	into STRICT    ie_opcao_w
	from    parametro_cdi;

if (ie_opcao_w = 'L') then
	begin

	select	count(*)
	into STRICT	qt_laudo_pendente_w
	from	laudo_paciente
	where	nr_atendimento	= nr_atendimento_p
	and	coalesce(dt_laudo::text, '') = ''
	and	nr_sequencia	<> coalesce(nr_seq_laudo_fora_p, -1);

	select	count(*)
	into STRICT	qt_proc_sem_laudo_w
	from	procedimento_paciente c,
		prescr_procedimento b,
		prescr_medica a
	where	a.nr_atendimento	= nr_atendimento_p
	and	a.nr_prescricao		= b.nr_prescricao
	and	c.nr_sequencia_prescricao	= b.nr_sequencia
	and	c.nr_prescricao		= b.nr_prescricao
	and	c.nr_sequencia		<> coalesce(nr_seq_proc_fora_p, -1)
	and	not exists (SELECT	1
				from	laudo_paciente y,
					procedimento_paciente x
				where	y.nr_seq_proc		= x.nr_sequencia
				and	x.nr_sequencia_prescricao = b.nr_sequencia
				and	x.nr_prescricao		= b.nr_prescricao);

	end;

	retorno_w	:= qt_laudo_pendente_w + qt_proc_sem_laudo_w;

else

	select	count(*)
	into STRICT	qt_proc_sem_exec_w
	from	prescr_procedimento b,
		prescR_medica a
	where	b.nr_prescricao = a.nr_prescricao
	and	a.nr_atendimento = nr_atendimento_p
	and	coalesce(b.nr_seq_exame::text, '') = ''
	and	coalesce(b.ie_suspenso,'N') <> 'S'
	and	not exists (SELECT	1
				from	procedimento_paciente x
				where	x.nr_sequencia_prescricao 	= b.nr_sequencia
				and	x.nr_prescricao			= b.nr_prescricao);

	retorno_w	:= qt_proc_sem_exec_w;

end if;

return	retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_qt_laudos_pendente (nr_atendimento_p bigint, nr_seq_laudo_fora_p bigint, nr_seq_proc_fora_p bigint) FROM PUBLIC;

