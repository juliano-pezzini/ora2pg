-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_mostra_comunicacao ( nr_sequencia_p bigint, nm_usuario_p text, ie_lida_p text, ie_gerencial_p text, nr_seq_classif_p bigint, nm_usuario_orig_p text, nm_usuario_destino_1_p text, nm_usuario_destino_2_p text, ie_geral_p text, ie_gerencial_parametro_p text, cd_perfil_p bigint, nr_seq_classif_parametro_p bigint, ds_perfil_adicional_1_p text, ds_perfil_adicional_2_p text, ds_setor_adicional_p text, cd_setor_destino_p bigint, cd_estab_destino_p bigint, ds_grupo_p text, nm_usuario_oculto_p text, ds_grupo_perfil_p text, ds_usuarios_ocultos_p text, ie_estab_lib_usuario_p text, ds_estab_adicional_p text, cd_especialidade_p bigint, cd_cargo_p bigint, cd_perfil_origem_p bigint, ie_envio_terceiro_p text, ie_funcionario_p text) RETURNS varchar AS $body$
DECLARE

 
ie_mostra_w		varchar(001)	:= 'S';
nr_seq_regra_w		bigint;
nm_usuario_w		varchar(15);
nm_usuario_ww		varchar(15);
nm_usuario_www		varchar(2000);
ie_geral_w		varchar(01);
nm_usuario_dest_w	varchar(4000);
nm_usuario_dest_ww	varchar(4005);
ds_setor_adicional_w	varchar(2000);
ie_gerencial_w		varchar(01);
nr_seq_classif_w	bigint;
ds_perfil_adic_w	varchar(4000);
cd_perfil_w		bigint;
cd_perfil_origem_w	bigint;
cd_perfil_destino_w	bigint;
nm_usuario_destino_w	varchar(15);
qt_classif_w		integer;
qt_classif_ww		integer;
qt_classif_www		integer;
qt_registros_w		bigint;
ie_tipo_classif_w	varchar(01);
ie_pessoal_w		varchar(01);
cd_setor_w		integer;
cd_estab_destino_w	integer;
cont_w			integer;
ie_Usuario_Dest_w	varchar(01);
cd_setor_ww		integer;
cd_estab_logado_w	integer;
cd_posicao_w		varchar(10)	:= ' ';
qt_posicao_w		bigint;
ds_grupo_w		varchar(255);
nr_seq_grupo_w		bigint;
nm_usuario_oculto_w	varchar(100);
qt_controle_w		bigint;
ds_grupo_perfil_w	varchar(4000);
nr_seq_grupo_perfil_w	bigint;
ds_usuarios_ocultos_w	varchar(2000);
ie_estab_lib_usuario_w	varchar(15);
ds_estab_adicional_w	varchar(2000);
cd_estab_w		bigint;
cd_perfil_logado_w	integer;
ie_envio_terceiro_w	varchar(2);
ie_terceiro_w		varchar(2);
cd_especialidade_w	integer;
cd_pessoa_fisica_w	varchar(10);
cd_cargo_w		bigint;
ie_funcionario_w	varchar(1);

C01 CURSOR FOR 
	SELECT	cd_perfil_destino, 
		nm_usuario_destino 
	into STRICT	cd_perfil_destino_w, 
		nm_usuario_destino_w 
	from	regra_mostra_comunicacao 
	where	((nr_seq_classif_comunic = nr_seq_classif_w) or (coalesce(nr_seq_classif_comunic::text, '') = '')) 
	and	((cd_perfil_origem = cd_perfil_origem_w) or (coalesce(cd_perfil_origem::text, '') = '')) 
	and	((nm_usuario_origem = nm_usuario_orig_p) or (coalesce(nm_usuario_origem::text, '') = ''));
	

BEGIN 
/*Coelho 01/04/2009 - OS133231*/
 
cd_setor_ww		:= wheb_usuario_pck.get_cd_setor_atendimento;
cd_estab_logado_w 	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_logado_w	:= obter_perfil_ativo;
 
nm_usuario_w		:= nm_usuario_orig_p;
ie_geral_w		:= coalesce(ie_geral_p,'N');
ie_gerencial_w		:= coalesce(ie_gerencial_parametro_p,'N');
cd_perfil_w		:= cd_perfil_p;
nr_seq_classif_w	:= coalesce(nr_seq_classif_parametro_p,0);
ds_perfil_adic_w	:= substr(replace(ds_perfil_adicional_1_p||ds_perfil_adicional_2_p,';',','),1,4000);
nm_usuario_dest_w	:= nm_usuario_destino_1_p||nm_usuario_destino_2_p;
ds_setor_adicional_w	:= substr(ds_setor_adicional_p,1,2000);
cd_setor_w		:= cd_setor_destino_p;
cd_estab_destino_w	:= cd_estab_destino_p;
ds_grupo_w		:= ds_grupo_p;
ds_grupo_perfil_w	:= ds_grupo_perfil_p;
nm_usuario_oculto_w	:= nm_usuario_oculto_p;
ds_usuarios_ocultos_w	:= ds_usuarios_ocultos_p;
ds_estab_adicional_w	:= ds_estab_adicional_p;
ie_estab_lib_usuario_w	:= coalesce(ie_estab_lib_usuario_p,'S');
 
CALL comunic_interna_pck.inicializa_valores_package(cd_estab_logado_w,nm_usuario_p);
 
ie_Usuario_Dest_w	:= 'N';
qt_posicao_w		:= 99999;
 
cd_especialidade_w	:= coalesce(cd_especialidade_p,0);
cd_cargo_w		:= coalesce(cd_cargo_p,0);
cd_perfil_origem_w	:= cd_perfil_origem_p;
ie_envio_terceiro_w	:= coalesce(ie_envio_terceiro_p,'S');
ie_funcionario_w	:= coalesce(ie_funcionario_p,'N');
 
if (nm_usuario_dest_w IS NOT NULL AND nm_usuario_dest_w::text <> '') and (nm_usuario_dest_w like '%' || nm_usuario_p || '%') then 
	nm_usuario_dest_ww	:= replace(nm_usuario_dest_w, ' ', '') || ',';
	nm_usuario_dest_w	:= substr(nm_usuario_dest_ww,1,4000);
	nm_usuario_ww		:= replace(nm_usuario_p,' ', '');
	qt_controle_w		:= 0;
	 
	while( qt_posicao_w <> 0 ) and ( ie_usuario_dest_w <> 'S' ) and ( qt_controle_w < 500 ) loop 
		qt_controle_w	:= qt_controle_w + 1;
		qt_posicao_w	:= position(',' in nm_usuario_dest_w);
		 
		if (qt_posicao_w <> 0) then 
			nm_usuario_www		:= substr(nm_usuario_dest_w, 1, qt_posicao_w -1);
			nm_usuario_dest_w	:= substr(nm_usuario_dest_w, qt_posicao_w + 1, 4000);
			 
			if (nm_usuario_www = nm_usuario_ww) then 
				ie_usuario_dest_w	:= 'S';
			end if;
		end if;
	end loop;
end if;
 
ie_mostra_w			:= 'N';
ie_pessoal_w			:= ie_mostra_w;
 
if (nm_usuario_p	= nm_usuario_w) then 
	ie_mostra_w		:= 'S';
	ie_pessoal_w		:= ie_mostra_w;
elsif (position(nm_usuario_p || ',' in nm_usuario_oculto_w || ',')	> 0) then 
	ie_mostra_w		:= 'S';
	ie_pessoal_w		:= ie_mostra_w;
elsif (position(nm_usuario_p || ',' in ds_usuarios_ocultos_w || ',') > 0) then 
	ie_mostra_w		:= 'S';
	ie_pessoal_w		:= ie_mostra_w;
elsif (ie_Usuario_Dest_w	= 'S') then 
	ie_mostra_w		:= 'S';
	ie_pessoal_w		:= ie_mostra_w;
elsif (cd_especialidade_w <> 0) then 
	ie_mostra_w		:= 'S';
	ie_pessoal_w		:= 'N';
elsif (cd_cargo_w <> 0) then 
	ie_mostra_w		:= 'S';
	ie_pessoal_w		:= 'N';
elsif (ie_geral_w		= 'S') then 
	ie_mostra_w		:= 'S';
elsif	((ds_perfil_adic_w IS NOT NULL AND ds_perfil_adic_w::text <> '') or (ds_setor_adicional_w IS NOT NULL AND ds_setor_adicional_w::text <> '') or (ds_grupo_w IS NOT NULL AND ds_grupo_w::text <> '') or (ds_grupo_perfil_w IS NOT NULL AND ds_grupo_perfil_w::text <> '')) and (ie_mostra_w <> 'S') then 
	begin 
	if (ds_perfil_adic_w IS NOT NULL AND ds_perfil_adic_w::text <> '') and (ie_mostra_w <> 'S') then 
		begin 
		qt_controle_w		:= 0;
		 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	usuario_comunic_classif 
		where	nm_usuario	= nm_usuario_p 
		and	(cd_perfil IS NOT NULL AND cd_perfil::text <> '')  LIMIT 1;
		 
		while(cd_posicao_w <> '0') and (ie_mostra_w <> 'S') and (qt_controle_w < 500) loop 
			begin 
			qt_controle_w 	:= qt_controle_w + 1;
			cd_posicao_w	:= position(',' in ds_perfil_adic_w);
			 
			if (somente_numero(substr(ds_perfil_adic_w,1,250)) > 0) then 
				if (coalesce(cd_posicao_w,'0') = '0') then 
					cd_perfil_w	:= somente_numero(ds_perfil_adic_w);
				else 
					cd_perfil_w	:= somente_numero(substr(ds_perfil_adic_w,1,cd_posicao_w-1));
				end if;
			end if;
 
			if (coalesce(qt_registros_w,0) = 0) then 
				--select	nvl(max('S'),'N') 
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  
				into STRICT	ie_mostra_w 
				from	Usuario_perfil 
				where	nm_usuario	= nm_usuario_p 
				and	cd_perfil	= cd_perfil_w  LIMIT 1;
			else 
				--select	nvl(max('S'),'N') 
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  
				into STRICT	ie_mostra_w 
				from	Usuario_perfil 
				where	nm_usuario	= nm_usuario_p 
				and	cd_perfil	= cd_perfil_w 
				and	cd_perfil_w in (SELECT	cd_perfil 
							from	usuario_comunic_classif 
							where	nm_usuario	= nm_usuario_p)  LIMIT 1;
			end if;
			 
			ds_perfil_adic_w	:= substr(ds_perfil_adic_w,(cd_posicao_w)::numeric  + 1,length(ds_perfil_adic_w));
			end;
		end loop;
		end;
	end if;
	 
	if (ds_setor_adicional_w IS NOT NULL AND ds_setor_adicional_w::text <> '') and (ie_mostra_w <> 'S') then 
		begin 
		cd_posicao_w	:= ' ';
		qt_controle_w	:= 0;
		 
		while(cd_posicao_w <> '0') and (ie_mostra_w <> 'S' ) and (qt_controle_w < 500 ) loop 
			begin 
			qt_controle_w	:= qt_controle_w + 1;
			cd_posicao_w	:= position(',' in ds_setor_adicional_w);
			cd_setor_w	:= substr(campo_numerico(substr(ds_setor_adicional_w,1,cd_posicao_w-1)),1,5);
 
			--select	nvl(max('S'),'N') 
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_mostra_w 
			from 	Usuario 
			where	nm_usuario		= nm_usuario_p 
			and	cd_setor_atendimento	= cd_setor_w  LIMIT 1;
 
			ds_setor_adicional_w	:= substr(ds_setor_adicional_w,(cd_posicao_w)::numeric  + 1,length(ds_setor_adicional_w));
			end;
		end loop;
		end;
	end if;
 
	if (ds_grupo_w IS NOT NULL AND ds_grupo_w::text <> '') and 		-- Edgar 15/02/2005, OS 15007, fiz rotina abaixo 
		(ie_mostra_w <> 'S') then 
		cd_posicao_w	:= ' ';
		qt_controle_w	:= 0;
		 
		while(cd_posicao_w <> '0') and (ie_mostra_w <> 'S') and (qt_controle_w < 500) loop 
			qt_controle_w	:= qt_controle_w + 1;
			cd_posicao_w	:= position(',' in ds_grupo_w);
			 
			if (somente_numero(ds_grupo_w) > 0) then -- Francisco 14/08/2005 OS 39156 
				if (coalesce(cd_posicao_w,'0') = '0') then	-- Edgar 11/08/2005 OS 22009 tratamento se não tiver vírgula 
					nr_seq_grupo_w	:= somente_numero(ds_grupo_w);
				else 
					nr_seq_grupo_w	:= somente_numero(substr(ds_grupo_w,1,cd_posicao_w-1));
				end if;
			end if;
 
			--select	nvl(max('S'),'N') 
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_mostra_w 
			from 	usuario_grupo 
			where	nm_usuario_grupo	= nm_usuario_p 
			and	nr_seq_grupo		= nr_seq_grupo_w 
			and	ie_situacao		= 'A'  LIMIT 1;
 
			ds_grupo_w	:= coalesce(substr(ds_grupo_w,(cd_posicao_w)::numeric  + 1,length(ds_grupo_w)), ' ');
			select	CASE WHEN ds_grupo_w=' ' THEN '0'  ELSE ds_grupo_w END  
			into STRICT	ds_grupo_w 
			;
			/*Fabio OS_22072 23/08/2005*/
 
		end loop;
	end if;
 
	if (ds_grupo_perfil_w IS NOT NULL AND ds_grupo_perfil_w::text <> '') and 		-- Francisco 04/09/2009 - OS 163799 - Fiz a rotina abaixo 
		(ie_mostra_w <> 'S') then 
		cd_posicao_w	:= ' ';
		qt_controle_w	:= 0;
		 
		while(cd_posicao_w <> '0') and (ie_mostra_w <> 'S') and (qt_controle_w < 500) loop 
			qt_controle_w	:= qt_controle_w + 1;
			cd_posicao_w	:= position(',' in ds_grupo_perfil_w);
			 
			if (somente_numero(ds_grupo_perfil_w) > 0) then 
				if (coalesce(cd_posicao_w,'0') = '0') then 
					nr_seq_grupo_perfil_w	:= somente_numero(ds_grupo_perfil_w);
				else 
					nr_seq_grupo_perfil_w	:= somente_numero(substr(ds_grupo_perfil_w,1,cd_posicao_w-1));
				end if;
			end if;
 
			--select	nvl(max('S'),'N') 
			select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_mostra_w 
			from 	usuario_perfil b, 
				grupo_perfil_item a 
			where	a.cd_perfil		= b.cd_perfil 
			and	b.nm_usuario		= nm_usuario_p 
			and	a.nr_seq_grupo_perfil	= nr_seq_grupo_perfil_w  LIMIT 1;
 
			ds_grupo_perfil_w	:= coalesce(substr(ds_grupo_perfil_w,(cd_posicao_w)::numeric  + 1,length(ds_grupo_perfil_w)), ' ');
			 
			select	CASE WHEN ds_grupo_perfil_w=' ' THEN '0'  ELSE ds_grupo_perfil_w END  
			into STRICT	ds_grupo_perfil_w 
			;
 
		end loop;
	end if;
	end;
end if;
 
cont_w := 0;
 
if (comunic_interna_pck.obter_se_estab_lib_usuario(cd_estab_destino_w) = 'S') then 
	cont_w := 1;
end if;
 
if (ie_pessoal_w	= 'N') and (ie_mostra_w	= 'S') then 
	begin 
	if (ie_geral_w = 'S') then 
		begin 
		/*Testar estabelecimentos adicionais*/
 
		if (ds_estab_adicional_w IS NOT NULL AND ds_estab_adicional_w::text <> '') then 
			begin 
			if (coalesce(cd_estab_destino_w,0) > 0) then		/*Se tem estab adicional, já passa o estab destino para fazer a rotina uma vez só*/
 
				ds_estab_adicional_w	:= ds_estab_adicional_w || cd_estab_destino_w || ',';
			end if;
			 
			cd_posicao_w	:= ' ';
			qt_controle_w	:= 0;
			ie_mostra_w	:= 'N';
 
			while(cd_posicao_w <> '0') and (ie_mostra_w <> 'S') and (qt_controle_w < 500) loop 
				begin 
				qt_controle_w	:= qt_controle_w + 1;
				cd_posicao_w	:= position(',' in ds_estab_adicional_w);
				cd_estab_w	:= campo_numerico(substr(ds_estab_adicional_w,1,cd_posicao_w-1));
 
				if (coalesce(cd_estab_w,0) > 0) then 
					select	comunic_interna_pck.obter_se_estab_lib_usuario(cd_estab_w) 
					into STRICT	ie_mostra_w 
					;
				 
					if (cd_estab_w = cd_estab_logado_w) then	/*Se não tenho liberado mas estou logado*/
 
						ie_mostra_w	:= 'S';
					end if;
				end if;
				 
				ds_estab_adicional_w	:= substr(ds_estab_adicional_w,(cd_posicao_w)::numeric  + 1,length(ds_estab_adicional_w));
				end;
			end loop;
			end;
		elsif (coalesce(ds_estab_adicional_w::text, '') = '') then 
			begin 
			ie_mostra_w		:= 'N';
		 
			if (ie_estab_lib_usuario_w = 'S') then 	/*Se posso ver independente de estab, devo estar logado ou ter o estab liberado.*/
 
				begin 
				if (cont_w = 1) or 		/*Se tenho liberado*/
 
					(cont_w = 0 AND cd_estab_destino_w = cd_estab_logado_w) then	/*Se não tenho liberado mas estou logado*/
 
					ie_mostra_w	:= 'S';
				end if;
				end;
			elsif (ie_estab_lib_usuario_w = 'N') then	/*Se tenho que ver apenas no estabelecimento logado*/
 
				begin 
				if (cd_estab_destino_w = cd_estab_logado_w) then 
					ie_mostra_w	:= 'S';
				end if;
				end;
			end if;
			if (coalesce(cd_estab_destino_w::text, '') = '') and (ie_mostra_w = 'N') then 
				ie_mostra_w	:= 'S';
			end if;
			end;
		end if;
		end;
		 
	elsif (ie_geral_w = 'N') then 
		begin 
		if	( 
			((cont_w = 0) and (coalesce(cd_estab_destino_w,cd_estab_logado_w) <> cd_estab_logado_w) and (ie_estab_lib_usuario_w = 'S')) OR 
			((cont_w = 1) and (coalesce(cd_estab_destino_w,cd_estab_logado_w) <> cd_estab_logado_w) and (ie_estab_lib_usuario_w = 'N')) 
			) then 
			ie_mostra_w		:= 'N';
		end if;
		end;
	end if;
	end;
end if;
 
if (ie_mostra_w	= 'S') and (ie_lida_p	= 'S') then 
	--select	nvl(max('N'),'S') 
	select	CASE WHEN count(1)=0 THEN 'S'  ELSE 'N' END  
	into STRICT	ie_mostra_w 
	from	comunic_interna_lida 
	where	nr_sequencia	= nr_sequencia_p 
	and	nm_usuario	= nm_usuario_p  LIMIT 1;
end if;
 
if (ie_pessoal_w	= 'N') and (ie_mostra_w	= 'S') and (ie_gerencial_p	= 'S') then 
	ie_mostra_w		:= ie_gerencial_w;
end if;
 
if (ie_mostra_w	= 'S') and (coalesce(nr_seq_classif_p,0) > 0) and (coalesce(nr_seq_classif_w,0) <> coalesce(nr_seq_classif_p,0)) then 
	ie_mostra_w		:= 'N';
end if;
 
if (ie_pessoal_w	= 'N') and (ie_mostra_w	= 'S') and (coalesce(nr_seq_classif_w,0) > 0) and (coalesce(nr_seq_classif_p,0) = 0) then 
	begin 
	select	coalesce(max(ie_tipo),'U') 
	into STRICT	ie_tipo_classif_w 
	from	comunic_interna_classif 
	where	nr_sequencia	= nr_seq_classif_w;
	 
	/* 	Verifica se existe alguma regra cadastrada no shift + F11 (Sistema / Usuário / Regra para visualização da comunicação interna) . 
		Caso exista, esta regra será superior à regra do usuário */
 
	 
	if (ie_tipo_classif_w <> 'G') and (ie_tipo_classif_w <> 'F') then 
		/* verifica se existe um cd_perfil_origem gravado pela trigger Comunic_interna_insert */
 
		 
		/* Verifica se tem regra cadastrada no shift + F11 */
 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	regra_mostra_comunicacao 
		where	((nm_usuario_origem = nm_usuario_orig_p) 
		or (cd_perfil_origem = cd_perfil_origem_w) 
		or (nr_seq_classif_comunic = nr_seq_classif_w) 
		or (nm_usuario_destino_w = nm_usuario_p) 
		or (obter_se_perfil_usuario(cd_perfil_destino_w,nm_usuario_p) = 'S'))  LIMIT 1;
		 
		if (qt_registros_w > 0) then 
			ie_mostra_w	:= 'N';
			 
			open c01;
			loop 
			fetch c01 into	 
				cd_perfil_destino_w, 
				nm_usuario_destino_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin 
				if	((nm_usuario_destino_w = nm_usuario_p) and (coalesce(cd_perfil_destino_w,'0') = '0')) or 
					((coalesce(nm_usuario_destino_w,'0') = '0') and (obter_se_perfil_usuario(cd_perfil_destino_w,nm_usuario_p) = 'S')) or 
					((nm_usuario_destino_w = nm_usuario_p) and (obter_se_perfil_usuario(cd_perfil_destino_w,nm_usuario_p) = 'S')) then 
					ie_mostra_w	:= 'S';
					exit;
				else 
					ie_mostra_w	:= 'N';
				end if;
				end;
			end loop;
			close c01;
		elsif (coalesce(qt_registros_w,0) = 0) then /* Caso não exista regra, faz o filtro do usuário */
 
			select	count(*), 
				sum(CASE WHEN nr_seq_classif_comunic=nr_seq_classif_w THEN 1  ELSE 0 END ), 
				sum(CASE WHEN cd_perfil='' THEN 0  ELSE CASE WHEN position(cd_perfil in '' || '')=0 THEN  0  ELSE 1 END  END ) c 
			into STRICT 	qt_classif_w, 
				qt_classif_ww, 
				qt_classif_www 
			from	Usuario_comunic_Classif 
			where	nm_usuario	= nm_usuario_p;
 
			if (qt_classif_w > 0) and (qt_classif_ww = 0) and (qt_classif_www = 0) then 
				ie_mostra_w	:= 'N';
			end if;
			 
		end if;
		 
		 
	end if;
	 
	end;
end if;
 
if (ie_pessoal_w	= 'N') and (ie_mostra_w	= 'S') then 
	if (cd_especialidade_w <> 0) then 
		select	coalesce(cd_pessoa_fisica,'0') 
		into STRICT	cd_pessoa_fisica_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_p;
		 
		if (cd_pessoa_fisica_w <> '0') then 
			select	count(1) 
			into STRICT	qt_registros_w 
			from	medico_especialidade m 
			where	m.cd_especialidade	= cd_especialidade_w 
			and	m.cd_pessoa_fisica	= cd_pessoa_fisica_w  LIMIT 1;
			 
			if (qt_registros_w > 0) then 
				ie_mostra_w	:= 'S';
			else 
				ie_mostra_w	:= 'N';
			end if;
		end if;
	end if;
	 
	if (cd_cargo_w <> 0) then 
		select	coalesce(cd_pessoa_fisica,'0') 
		into STRICT	cd_pessoa_fisica_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_p;
		 
		if (cd_pessoa_fisica_w <> '0') then 
			select	count(1) 
			into STRICT	qt_registros_w 
			from	pessoa_fisica p 
			where	p.cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and	p.cd_cargo		= cd_cargo_w  LIMIT 1;
			 
			if (qt_registros_w > 0) then 
				ie_mostra_w	:= 'S';
			else 
				ie_mostra_w	:= 'N';
			end if;
		end if;
	end if;
 
	if (ie_envio_terceiro_w = 'N') then 
		select	coalesce(ie_terceiro,'N') 
		into STRICT	ie_terceiro_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_p;
		 
		if (ie_terceiro_w = 'S') then 
			ie_mostra_w	:= 'N';
		end if;
	end if;	
 
	if (ie_funcionario_w = 'S') then 
		select	coalesce(cd_pessoa_fisica,'0') 
		into STRICT	cd_pessoa_fisica_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_p;
		 
		if (cd_pessoa_fisica_w <> '0') then 
			select	coalesce(ie_funcionario,'N') 
			into STRICT	ie_funcionario_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		 
			if (ie_funcionario_w = 'N') then 
				ie_mostra_w	:= 'N';
			end if;
		end if;
	end if;
end if;
 
return coalesce(ie_mostra_w,'N');
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_mostra_comunicacao ( nr_sequencia_p bigint, nm_usuario_p text, ie_lida_p text, ie_gerencial_p text, nr_seq_classif_p bigint, nm_usuario_orig_p text, nm_usuario_destino_1_p text, nm_usuario_destino_2_p text, ie_geral_p text, ie_gerencial_parametro_p text, cd_perfil_p bigint, nr_seq_classif_parametro_p bigint, ds_perfil_adicional_1_p text, ds_perfil_adicional_2_p text, ds_setor_adicional_p text, cd_setor_destino_p bigint, cd_estab_destino_p bigint, ds_grupo_p text, nm_usuario_oculto_p text, ds_grupo_perfil_p text, ds_usuarios_ocultos_p text, ie_estab_lib_usuario_p text, ds_estab_adicional_p text, cd_especialidade_p bigint, cd_cargo_p bigint, cd_perfil_origem_p bigint, ie_envio_terceiro_p text, ie_funcionario_p text) FROM PUBLIC;

