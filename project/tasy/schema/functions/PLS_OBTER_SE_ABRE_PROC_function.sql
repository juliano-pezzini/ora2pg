-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_abre_proc ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, ie_portal_web_p pls_abertura_proc_portal.ie_portal_web%type, qt_procedimento_imp_p pls_conta_proc.qt_procedimento_imp%type ) RETURNS varchar AS $body$
DECLARE


/*
ie_portal_web_p
DC - Digitação Portal Web
CG - Complemento de contas médicas
*/
ie_valido_w			varchar(1);
ie_abrir_procedimento_w		pls_abertura_proc_portal.ie_abrir_procedimento%type := 'N';
cd_area_w			pls_abertura_proc_portal.cd_area_procedimento%type;
cd_especialidade_w		pls_abertura_proc_portal.cd_especialidade%type;
cd_grupo_w			pls_abertura_proc_portal.cd_grupo_proc%type;
ie_origem_proced_w		pls_abertura_proc_portal.ie_origem_proced%type;

C01 CURSOR(	ie_portal_web_pc		pls_abertura_proc_portal.ie_portal_web%type,
		cd_area_procedimento_pc		pls_abertura_proc_portal.cd_area_procedimento%type,
		cd_especialidade_pc		pls_abertura_proc_portal.cd_especialidade%type,
		cd_grupo_proc_pc		pls_abertura_proc_portal.cd_grupo_proc%type,
		cd_procedimento_pc		pls_abertura_proc_portal.cd_procedimento%type,
		ie_origem_proced_pc		pls_abertura_proc_portal.ie_origem_proced%type)FOR
	SELECT	ie_abrir_procedimento,
		nr_seq_grupo_servico
	from	pls_abertura_proc_portal
	where (ie_portal_web = ie_portal_web_pc or ie_portal_web = 'A')
	and (coalesce(cd_area_procedimento::text, '') = '' or cd_area_procedimento = cd_area_procedimento_pc)
	and (coalesce(cd_especialidade::text, '') = '' or cd_especialidade = cd_especialidade_pc)
	and (coalesce(cd_grupo_proc::text, '') = '' or cd_grupo_proc = cd_grupo_proc_pc)
	and (coalesce(cd_procedimento::text, '') = '' or (cd_procedimento = cd_procedimento_pc and ie_origem_proced = ie_origem_proced_pc))
	and (coalesce(qt_maxima::text, '') = '' or (qt_procedimento_imp_p <= qt_maxima))
	and (coalesce(qt_minima::text, '') = '' or (qt_procedimento_imp_p >= qt_minima))
	order by
		coalesce(cd_procedimento,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_area_procedimento,0),
		coalesce(nr_seq_grupo_servico,0),
		coalesce(cd_especialidade,0),
		coalesce(qt_maxima,0),
		coalesce(qt_minima,0);

BEGIN

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;

for r_C01_w in C01(ie_portal_web_p, cd_area_w, cd_especialidade_w, cd_grupo_w, cd_procedimento_p, ie_origem_proced_w) loop

	ie_valido_w := 'S';

	if (r_C01_w.nr_seq_grupo_servico IS NOT NULL AND r_C01_w.nr_seq_grupo_servico::text <> '') then
		ie_valido_w := pls_se_grupo_preco_servico(r_C01_w.nr_seq_grupo_servico, cd_procedimento_p, ie_origem_proced_p);
	end if;

	if (ie_valido_w = 'S') then
		ie_abrir_procedimento_w := r_C01_w.ie_abrir_procedimento;
	end if;
end loop;

return	ie_abrir_procedimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_abre_proc ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, ie_portal_web_p pls_abertura_proc_portal.ie_portal_web%type, qt_procedimento_imp_p pls_conta_proc.qt_procedimento_imp%type ) FROM PUBLIC;

