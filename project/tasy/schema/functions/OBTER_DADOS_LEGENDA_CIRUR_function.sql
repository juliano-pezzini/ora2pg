-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_legenda_cirur ( dt_parametro_p timestamp, ie_opcao_p text, cd_setor_atendimento_p bigint) RETURNS bigint AS $body$
DECLARE

 
qt_retorno_w		bigint;
dt_inicio_w		timestamp;
dt_final_w		timestamp;
ie_restringe_estab_w	varchar(15);
cd_estabelecimento_w	smallint:=0;


BEGIN 
ie_restringe_estab_w := Obter_Param_Usuario(900, 416, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_w);
cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
 
dt_inicio_w	:= trunc(dt_parametro_p,'dd');
dt_final_w	:= fim_dia(dt_parametro_p);
 
-- Admitidos (AD) 
 
if (ie_opcao_p = 'AD') then 
	begin 
	select	count(*) 
	into STRICT	qt_retorno_w 
	from	cirurgia 
	where	dt_inicio_real between dt_inicio_w and dt_final_w 
	and	coalesce(dt_termino::text, '') = '' 
	and	ie_status_cirurgia not in (3,4) 
	and	((ie_restringe_estab_w = 'N') or 
		 ((ie_restringe_estab_w = 'S') and (coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w))) 
	and 	((obter_setor_cirurgia(nr_atendimento,dt_entrada_unidade) = cd_setor_atendimento_p) or (cd_setor_atendimento_p = 0));
	exception	 
		when others then 
			qt_retorno_w	:= 0;
	end;
end if;
 
-- Admitos/encaixe (AE) 
 
if (ie_opcao_p = 'AE') then 
	begin 
	select	count(*) 
	into STRICT	qt_retorno_w 
	from	agenda_paciente b, 
		cirurgia a 
	where	a.nr_cirurgia = b.nr_cirurgia 
	and	a.dt_inicio_real between dt_inicio_w and dt_final_w 
	and	coalesce(a.dt_termino::text, '') = '' 
	and	a.ie_status_cirurgia not in (3,4) 
	and	obter_se_agenda_encaixe(b.nr_sequencia) = 'S' 
	and	((ie_restringe_estab_w = 'N') or 
		 ((ie_restringe_estab_w = 'S') and (coalesce(a.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w))) 
	and 	((obter_setor_cirurgia(a.nr_atendimento,a.dt_entrada_unidade) = cd_setor_atendimento_p) or (cd_setor_atendimento_p = 0));
	exception	 
		when others then 
			qt_retorno_w	:= 0;
	end;
end if;
 
-- Finalizadas (FI) 
 
if (ie_opcao_p = 'FI') then 
	begin 
	select	count(*) 
	into STRICT	qt_retorno_w 
	from	cirurgia a 
	where	a.dt_inicio_real between dt_inicio_w and dt_final_w 
	and	(a.dt_termino IS NOT NULL AND a.dt_termino::text <> '') 
	and	((ie_restringe_estab_w = 'N') or 
		 ((ie_restringe_estab_w = 'S') and (coalesce(a.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w))) 
	and 	((obter_setor_cirurgia(a.nr_atendimento,a.dt_entrada_unidade) = cd_setor_atendimento_p) or (cd_setor_atendimento_p = 0));
	exception	 
		when others then 
			qt_retorno_w	:= 0;
	end;
end if;
 
-- Finalizadas/encaixe (FE) 
 
if (ie_opcao_p = 'FE') then 
	begin 
	select	count(*) 
	into STRICT	qt_retorno_w 
	from	agenda_paciente b, 
		cirurgia a 
	where	a.nr_cirurgia = b.nr_cirurgia 
	and   a.dt_inicio_real between dt_inicio_w and dt_final_w 
	and	(a.dt_termino IS NOT NULL AND a.dt_termino::text <> '') 
	and	obter_se_agenda_encaixe(b.nr_sequencia) = 'S' 
	and	((ie_restringe_estab_w = 'N') or 
		 ((ie_restringe_estab_w = 'S') and (coalesce(a.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w))) 
	and 	((obter_setor_cirurgia(a.nr_atendimento,a.dt_entrada_unidade) = cd_setor_atendimento_p) or (cd_setor_atendimento_p = 0));
	exception	 
		when others then 
			qt_retorno_w	:= 0;
	end;
end if;
 
-- Finalizadas/Altas (FA) 
 
if (ie_opcao_p = 'FA') then 
	begin 
	select	count(*) 
	into STRICT	qt_retorno_w 
	from	atendimento_paciente b, 
		cirurgia a 
	where	a.nr_atendimento = b.nr_atendimento 
	and	a.dt_inicio_real between dt_inicio_w and dt_final_w 
	and	(a.dt_termino IS NOT NULL AND a.dt_termino::text <> '') 
	and	(b.dt_alta IS NOT NULL AND b.dt_alta::text <> '') 
	and	((ie_restringe_estab_w = 'N') or 
		 ((ie_restringe_estab_w = 'S') and (coalesce(b.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w))) 
	and 	((obter_setor_cirurgia(a.nr_atendimento,a.dt_entrada_unidade) = cd_setor_atendimento_p) or (cd_setor_atendimento_p = 0));
	exception	 
		when others then 
			qt_retorno_w	:= 0;
	end;
end if;
 
return qt_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_legenda_cirur ( dt_parametro_p timestamp, ie_opcao_p text, cd_setor_atendimento_p bigint) FROM PUBLIC;

