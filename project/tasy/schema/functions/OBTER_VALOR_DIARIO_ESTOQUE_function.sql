-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_diario_estoque ( dt_saldo_p timestamp, cd_estabelecimento_p bigint, cd_local_estoque_p text, cd_material_p bigint) RETURNS bigint AS $body$
DECLARE


dt_fim_w			timestamp;
dt_inicio_mes_w		timestamp;
dt_mes_anterior_w		timestamp;
vl_saldo_w			double precision;
vl_saldo_dia_w		double precision;
dt_movimento_w		timestamp;
vl_movimento_w		double precision;
ie_entrada_saida_w		varchar(01);

C01 CURSOR FOR
	SELECT	/*+ index(a MOVESTO_I11) */		pkg_date_utils.start_of(a.dt_movimento_estoque, 'DDD', 0) dt_movimento_estoque,
		ie_entrada_saida,
		sum(CASE WHEN a.cd_acao='1' THEN  c.vl_movimento  ELSE c.vl_movimento * -1 END )
	from	operacao_estoque b,
		movimento_estoque a,
		movimento_estoque_valor c
	where	a.dt_movimento_estoque between  dt_inicio_mes_w and dt_fim_w
	and	a.cd_estabelecimento			= cd_estabelecimento_p
	and	a.cd_material_estoque		= cd_material_p
	and	a.cd_operacao_estoque		= b.cd_operacao_estoque
	and	a.nr_movimento_estoque		= c.nr_movimento_estoque
	and	((coalesce(cd_local_estoque_p::text, '') = '') or (obter_se_contido(a.cd_local_estoque, cd_local_estoque_p) = 'S'))
	and	ie_atualiza_estoque			= 'S'
	group by pkg_date_utils.start_of(a.dt_movimento_estoque, 'DDD', 0),
		ie_entrada_saida
	order by 1;


BEGIN

dt_inicio_mes_w	:= PKG_DATE_UTILS.start_of(dt_saldo_p, 'MONTH', 0);
dt_fim_w		:= (PKG_DATE_UTILS.start_of(dt_saldo_p, 'dd', 0) + 86399 / 86400);
dt_mes_anterior_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_inicio_mes_w,-1,0);

select	coalesce(sum(vl_estoque),0)
into STRICT	vl_saldo_w
from	saldo_Estoque a
where	cd_estabelecimento		= cd_estabelecimento_p
and	cd_material 			= cd_material_p
and	dt_mesano_referencia 	= dt_mes_anterior_w
and	((coalesce(cd_local_estoque_p::text, '') = '') or (obter_se_contido(cd_local_estoque, cd_local_estoque_p) = 'S'));

OPEN C01;
LOOP
FETCH C01 into
	dt_movimento_w,
	ie_entrada_saida_w,
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	if	ie_entrada_saida_w = 'S' then
		vl_movimento_w	 := vl_movimento_w * -1;
	end if;
	vl_saldo_w		:= vl_saldo_w + vl_movimento_w;
END LOOP;
CLOSE C01;

vl_saldo_dia_w	:= coalesce(vl_saldo_w,0);

return vl_saldo_dia_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_diario_estoque ( dt_saldo_p timestamp, cd_estabelecimento_p bigint, cd_local_estoque_p text, cd_material_p bigint) FROM PUBLIC;

