-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_ds_solucao_dose_ataque (nr_seq_cpoe_p bigint, dt_referencia_p timestamp) RETURNS varchar AS $body$
DECLARE



ie_tipo_dosagem_ataque_w   varchar(50);
qt_dose_ataque_w	   varchar(50);
qt_min_fase_ataque_w	   varchar(50);
qt_dosagem_ataque_w	   varchar(50);
ie_dose_ataque_w	   varchar(50);
tipo_dose_ataque_w	   varchar(50);
date_w	   		   varchar(50);
data_inicio_w		   timestamp;

ds_solucao_ataque_w	   varchar(2000);



	function  qtMinFaseAtaque(qt_min_fase_ataque_w text)
              RETURN text is

	      resultFunction varchar(50);

	      horas_w varchar(50);
	      minutos_w varchar(50);

	
BEGIN

		if (coalesce(qt_min_fase_ataque_w::text, '') = '') then
			return '';
		end if;

		select SUBSTR(trim(both qt_min_fase_ataque_w),1,position(':' in trim(both qt_min_fase_ataque_w))-1)
		into STRICT horas_w
		;

		select SUBSTR(trim(both qt_min_fase_ataque_w),position(':' in trim(both qt_min_fase_ataque_w))+1)
		into STRICT minutos_w
		;


		if (horas_w <> '00') then
			resultFunction := wheb_mensagem_pck.get_texto(1040706, 'QT_HORA_FASE_HOR=' || horas_w) || ' ' ||wheb_mensagem_pck.get_texto(1040708, 'QT_HORA_FASE_MIN=' || minutos_w);

		else
			resultFunction := wheb_mensagem_pck.get_texto(1040708, 'QT_HORA_FASE_MIN=' || minutos_w);

		end if;

		return resultFunction;

	end;


begin

if (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '') then

	select	max(ie_tipo_dosagem_ataque),
			max(qt_dose_ataque),
			max(qt_min_fase_ataque),
			max(qt_dosagem_ataque),
			max(ie_dose_ataque),
			max(dt_inicio)
	into STRICT	ie_tipo_dosagem_ataque_w,
			qt_dose_ataque_w,
			qt_min_fase_ataque_w,
			qt_dosagem_ataque_w,
			ie_dose_ataque_w,
			data_inicio_w
	from	cpoe_material
	where	nr_sequencia = nr_seq_cpoe_p;


	if (ie_dose_ataque_w = 'S' and  trunc(data_inicio_w + 1,'mi') > trunc(dt_referencia_p, 'mi'))then

		select max(PKG_DATE_FORMATERS.to_varchar(data_inicio_w,'shortDate',OBTER_ESTABELECIMENTO_ATIVO,OBTER_USUARIO_ATIVO)) ds
		into STRICT date_w
		;

		if ('gtm' = ie_tipo_dosagem_ataque_w) then
			tipo_dose_ataque_w := wheb_mensagem_pck.get_texto(1040689);
		elsif ('mlh' = ie_tipo_dosagem_ataque_w) then
			tipo_dose_ataque_w := wheb_mensagem_pck.get_texto(759467);
		elsif ('mgm' = ie_tipo_dosagem_ataque_w) then
			tipo_dose_ataque_w := wheb_mensagem_pck.get_texto(1040690);
		else
			tipo_dose_ataque_w := '';
		end if;

		-- 1040694 Dose Ataque
		-- 1040711  (#@DATE#@): Administrar #@QT_DOSE_ATAQUE#@ ml da solução em #@QT_MIN_APLIC_ATAQUE#@ (a #@QT_DOSAGEM_ATAQUE#@ #@IE_TIPO_DOSAGEM_ATAQUE#@)
		ds_solucao_ataque_w := wheb_mensagem_pck.get_texto(1040694) || wheb_mensagem_pck.get_texto(1040711, 'DATE=' || date_w ||
												';QT_DOSE_ATAQUE=' || qt_dose_ataque_w ||
												';QT_MIN_APLIC_ATAQUE=' || qtMinFaseAtaque(qt_min_fase_ataque_w) ||
												';QT_DOSAGEM_ATAQUE=' || qt_dosagem_ataque_w ||
												';IE_TIPO_DOSAGEM_ATAQUE=' || tipo_dose_ataque_w);

	else

		ds_solucao_ataque_w := '';

	end if;



end if;


return	ds_solucao_ataque_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_ds_solucao_dose_ataque (nr_seq_cpoe_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

