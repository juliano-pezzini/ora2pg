-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_prest_endereco ( cd_medico_p text, cd_cgc_p text, ie_tipo_endereco_p text, nr_seq_compl_pf_tel_adic_p bigint, cd_municipio_ibge_p text, sg_estado_p text, cd_cep_p text, nr_seq_regiao_p bigint, ds_logradouro_p text) RETURNS varchar AS $body$
DECLARE


cd_cep_w			varchar(15);
cd_municipio_ibge_w		varchar(6);
ie_tipo_pessoa_w		varchar(2)	:= null;
sg_estado_w			pessoa_juridica_compl.sg_estado%type;
ie_tipo_complemento_w		varchar(1)	:= 0;
ie_retorno_w			varchar(1)	:= 'N';
ie_municipio_w			varchar(1)	:= 'N';
ie_estado_w			varchar(1)	:= 'N';
ie_regiao_w			varchar(1)	:= 'N';
nr_seq_regiao_w			bigint;
ds_end_pj_compl_w		pessoa_juridica_compl.ds_endereco%type;
ds_end_pj_w			pessoa_juridica.ds_endereco%type;
ds_end_pf_compl_w		compl_pessoa_fisica.ds_endereco%type;
ds_end_pf_compl_tel_w		compl_pf_tel_adic.ds_endereco%type;
ie_logradouro_w			varchar(1)	:= 'N';
ds_logradouro_w			varchar(150)   := '';




BEGIN

if (ie_tipo_endereco_p	= 'PJ') then
	ie_tipo_complemento_w	:= 0;
	ie_tipo_pessoa_w	:= 'PJ';
elsif (ie_tipo_endereco_p	= 'PJC') then
	ie_tipo_complemento_w	:= 1;
	ie_tipo_pessoa_w	:= 'PJ';
elsif (ie_tipo_endereco_p	= 'PJF') then
	ie_tipo_complemento_w	:= 2;
	ie_tipo_pessoa_w	:= 'PJ';
elsif (ie_tipo_endereco_p	= 'PJA') then
	ie_tipo_complemento_w	:= 6;
	ie_tipo_pessoa_w	:= 'PJ';
end if;

if (ie_tipo_endereco_p	= 'PFR') then
	ie_tipo_complemento_w	:= 1;
	ie_tipo_pessoa_w	:= 'PF';
elsif (ie_tipo_endereco_p	= 'PFC') then
	ie_tipo_complemento_w	:= 2;
	ie_tipo_pessoa_w	:= 'PF';
elsif (ie_tipo_endereco_p	= 'PFA') then
	ie_tipo_complemento_w	:= 9;
	ie_tipo_pessoa_w	:= 'PF';
end if;

if (ds_logradouro_p IS NOT NULL AND ds_logradouro_p::text <> '') then

	ds_logradouro_w := '%'||ds_logradouro_p||'%';
end if;

if (ie_tipo_pessoa_w = 'PJ') then
	if (ie_tipo_complemento_w > 0) then
		select	max(b.sg_estado),
			max(b.cd_cep),
			max(b.cd_municipio_ibge),
			max(b.nr_seq_regiao),
			max(b.ds_endereco)
		into STRICT	sg_estado_w,
			cd_cep_w,
			cd_municipio_ibge_w,
			nr_seq_regiao_w,
			ds_end_pj_compl_w
		from	pessoa_juridica_compl	b,
			pessoa_juridica		a
		where	a.cd_cgc		= b.cd_cgc
		and	a.cd_cgc 		= cd_cgc_p
		and	((coalesce(sg_estado_p::text, '') = '')		or (coalesce(b.sg_estado, sg_estado_p)			= sg_estado_p))
		and	((coalesce(cd_cep_p::text, '') = '')		or (coalesce(b.cd_cep, cd_cep_p)				= cd_cep_p))
		and	((coalesce(cd_municipio_ibge_p::text, '') = '')	or (coalesce(b.cd_municipio_ibge, cd_municipio_ibge_p)	= cd_municipio_ibge_p))
		and	((coalesce(nr_seq_regiao_p::text, '') = '')	or (coalesce(b.nr_seq_regiao, nr_seq_regiao_p)		= nr_seq_regiao_p))
		and	((coalesce(ds_logradouro_w::text, '') = '')	or (upper(coalesce(b.ds_endereco, ds_logradouro_w))		like upper(ds_logradouro_w)))
		and	b.ie_tipo_complemento 	= ie_tipo_complemento_w;
	else
		select	max(sg_estado),
			max(cd_cep),
			max(cd_municipio_ibge),
			max(nr_seq_regiao),
			max(ds_endereco)
		into STRICT	sg_estado_w,
			cd_cep_w,
			cd_municipio_ibge_w,
			nr_seq_regiao_w,
			ds_end_pj_w
		from	pessoa_juridica
		where	cd_cgc 		= cd_cgc_p
		and	((coalesce(sg_estado_p::text, '') = '')		or (coalesce(sg_estado, sg_estado_p)			= sg_estado_p))
		and	((coalesce(cd_cep_p::text, '') = '')		or (coalesce(cd_cep, cd_cep_p)			= cd_cep_p))
		and	((coalesce(cd_municipio_ibge_p::text, '') = '')	or (coalesce(cd_municipio_ibge, cd_municipio_ibge_p)	= cd_municipio_ibge_p))
		and	((coalesce(nr_seq_regiao_p::text, '') = '')	or (coalesce(nr_seq_regiao, nr_seq_regiao_p)		= nr_seq_regiao_p))
		and	((coalesce(ds_logradouro_w::text, '') = '')	or (upper(coalesce(ds_endereco, ds_logradouro_w))	like upper(ds_logradouro_w)));
	end if;
elsif (ie_tipo_pessoa_w = 'PF') then
	if (nr_seq_compl_pf_tel_adic_p IS NOT NULL AND nr_seq_compl_pf_tel_adic_p::text <> '') then
		if (ie_tipo_complemento_w <> 9) then
			select	max(cd_cep),
				max(cd_municipio_ibge),
				max(sg_estado),
				max(nr_seq_regiao),
				max(ds_endereco)
			into STRICT	cd_cep_w,
				cd_municipio_ibge_w,
				sg_estado_w,
				nr_seq_regiao_w,
				ds_end_pf_compl_tel_w
			from	compl_pf_tel_adic
			where	nr_sequencia	= nr_seq_compl_pf_tel_adic_p
			and	((coalesce(sg_estado_p::text, '') = '')		or (coalesce(sg_estado, sg_estado_p)			= sg_estado_p))
			and	((coalesce(cd_cep_p::text, '') = '')		or (coalesce(cd_cep, cd_cep_p)			= cd_cep_p))
			and	((coalesce(cd_municipio_ibge_p::text, '') = '')	or (coalesce(cd_municipio_ibge, cd_municipio_ibge_p)	= cd_municipio_ibge_p))
			and	((coalesce(nr_seq_regiao_p::text, '') = '')	or (coalesce(nr_seq_regiao, nr_seq_regiao_p)		= nr_seq_regiao_p))
			and	((coalesce(ds_logradouro_w::text, '') = '')	or (upper(coalesce(ds_endereco, ds_logradouro_w))	like upper(ds_logradouro_w)));
		else
			select	max(cd_cep),
				max(cd_municipio_ibge),
				max(sg_estado),
				max(nr_seq_regiao),
				max(ds_endereco)
			into STRICT	cd_cep_w,
				cd_municipio_ibge_w,
				sg_estado_w,
				nr_seq_regiao_w,
				ds_end_pf_compl_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_p
			and	ie_tipo_complemento	= 9
			and	nr_seq_tipo_compl_adic	= nr_seq_compl_pf_tel_adic_p
			and	((coalesce(sg_estado_p::text, '') = '')		or (coalesce(sg_estado, sg_estado_p)			= sg_estado_p))
			and	((coalesce(cd_cep_p::text, '') = '')		or (coalesce(cd_cep, cd_cep_p)			= cd_cep_p))
			and	((coalesce(cd_municipio_ibge_p::text, '') = '')	or (coalesce(cd_municipio_ibge, cd_municipio_ibge_p)	= cd_municipio_ibge_p))
			and	((coalesce(nr_seq_regiao_p::text, '') = '')	or (coalesce(nr_seq_regiao, nr_seq_regiao_p)		= nr_seq_regiao_p))
			and	((coalesce(ds_logradouro_w::text, '') = '')	or (upper(coalesce(ds_endereco, ds_logradouro_w))	like upper(ds_logradouro_w)));
		end if;
	else
		if (ie_tipo_complemento_w > 0) then
			select	max(b.cd_cep),
				max(b.cd_municipio_ibge),
				max(b.sg_estado),
				max(b.nr_seq_regiao),
				max(ds_endereco)
			into STRICT	cd_cep_w,
				cd_municipio_ibge_w,
				sg_estado_w,
				nr_seq_regiao_w,
				ds_end_pf_compl_w
			from	compl_pessoa_fisica	b,
				pessoa_fisica		a
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	a.cd_pessoa_fisica	= cd_medico_p
			and	b.ie_tipo_complemento	= ie_tipo_complemento_w;
		end if;
	end if;
end if;

if (cd_municipio_ibge_p IS NOT NULL AND cd_municipio_ibge_p::text <> '') then
	if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') and (cd_municipio_ibge_w = cd_municipio_ibge_p) then
		ie_municipio_w	:= 'S';
	else
		ie_municipio_w	:= 'N';
	end if;
else
	ie_municipio_w	:= 'S';
end if;

if (sg_estado_p IS NOT NULL AND sg_estado_p::text <> '') then
	if (sg_estado_w IS NOT NULL AND sg_estado_w::text <> '') and (sg_estado_w = sg_estado_p) then
		ie_estado_w	:= 'S';
	else
		ie_estado_w	:= 'N';
	end if;
else
	ie_estado_w	:= 'S';
end if;

if (nr_seq_regiao_p IS NOT NULL AND nr_seq_regiao_p::text <> '') then
	if (nr_seq_regiao_w IS NOT NULL AND nr_seq_regiao_w::text <> '') and (nr_seq_regiao_w = nr_seq_regiao_p) then
		ie_regiao_w	:= 'S';
	else
		ie_regiao_w	:= 'N';
	end if;
else
	ie_regiao_w	:= 'S';
end if;


if (ds_logradouro_w IS NOT NULL AND ds_logradouro_w::text <> '') then

	if	((ds_end_pj_compl_w IS NOT NULL AND ds_end_pj_compl_w::text <> '') or (ds_end_pj_w IS NOT NULL AND ds_end_pj_w::text <> '') or (ds_end_pf_compl_w IS NOT NULL AND ds_end_pf_compl_w::text <> '') or (ds_end_pf_compl_tel_w IS NOT NULL AND ds_end_pf_compl_tel_w::text <> '')) and
		((upper(ds_end_pj_compl_w) like upper(ds_logradouro_w)) or (upper(ds_end_pj_w) like upper(ds_logradouro_w)) or (upper(ds_end_pf_compl_w) like upper(ds_logradouro_w)) or (upper(ds_end_pf_compl_tel_w) like upper(ds_logradouro_w))) then

		ie_logradouro_w := 'S';
	else
		ie_logradouro_w := 'N';
	end if;

else
	ie_logradouro_w := 'S';

end if;


if (ie_estado_w = 'S') and (ie_municipio_w = 'S') and (ie_regiao_w = 'S') and (ie_logradouro_w = 'S') then
	ie_retorno_w	:= 'S';
else
	ie_retorno_w	:= 'N';
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_prest_endereco ( cd_medico_p text, cd_cgc_p text, ie_tipo_endereco_p text, nr_seq_compl_pf_tel_adic_p bigint, cd_municipio_ibge_p text, sg_estado_p text, cd_cep_p text, nr_seq_regiao_p bigint, ds_logradouro_p text) FROM PUBLIC;

