-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_estrutura ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_estrutura_p bigint) RETURNS varchar AS $body$
DECLARE


cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
cd_grupo_proc_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_estrutura_w		bigint;
nr_seq_estrut_mat_w		bigint;
ie_liberado_w			varchar(10)	:= 'N';
ie_estrutura_w			varchar(10)	:= 'N';
nr_seq_estrut_regra_w		bigint;
ie_estrut_mat_w			varchar(1);
ie_liberado_ww			varchar(1);
nr_seq_estrutura_ww		bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_estrutura,
		a.ie_estrutura,
		a.nr_seq_estrut_mat
	from	pls_ocorrencia_estrut_item	a,
		pls_ocorrencia_estrutura	b
	where	b.nr_sequencia	= a.nr_seq_estrutura
	and (coalesce(a.cd_area_procedimento,coalesce(cd_area_procedimento_w,0))	= coalesce(cd_area_procedimento_w,0))
	and (coalesce(a.cd_especialidade,coalesce(cd_especialidade_w,0))	= coalesce(cd_especialidade_w,0))
	and (coalesce(a.cd_grupo_proc,coalesce(cd_grupo_proc_w,0))		= coalesce(cd_grupo_proc_w,0))
	and (coalesce(a.cd_procedimento,coalesce(cd_procedimento_p,0))	= coalesce(cd_procedimento_p,0))
	and (coalesce(a.ie_origem_proced,coalesce(ie_origem_proced_w,0))	= coalesce(ie_origem_proced_w,0))
	and (coalesce(a.nr_seq_material,coalesce(nr_seq_material_p,0))	= coalesce(nr_seq_material_p,0))
	and	a.nr_seq_estrutura = nr_seq_estrutura_p
	and	coalesce(b.ie_situacao,'A') = 'A'
	order by coalesce(a.cd_procedimento,0),
		 coalesce(a.cd_grupo_proc,0),
		 coalesce(a.cd_especialidade,0),
		 coalesce(a.cd_area_procedimento,0);


BEGIN
if (coalesce(cd_procedimento_p,0) <> 0) then
	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
end if;
if (coalesce(nr_seq_material_p,0) <> 0) then
	select	max(nr_seq_estrut_mat)
	into STRICT	nr_seq_estrut_mat_w
	from	pls_material
	where	nr_sequencia	= nr_seq_material_p;
end if;

open C01;
loop
fetch C01 into
	nr_seq_estrutura_ww,
	ie_liberado_ww,
	nr_seq_estrut_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_estrut_mat_w	:= 'S';
	if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
		if (pls_obter_se_mat_estrutura(nr_seq_material_p, nr_seq_estrut_regra_w) = 'N') then
			ie_estrut_mat_w	:= 'N';
		end if;
	end if;

	if (ie_estrut_mat_w = 'S') then
		nr_seq_estrutura_w	:= nr_seq_estrutura_ww;
		ie_liberado_w		:= ie_liberado_ww;
	end if;
	end;
end loop;
close C01;
if (ie_liberado_w = 'S') and (coalesce(nr_seq_estrutura_w,0) <> 0) then
	ie_estrutura_w	:= 'S';
end if;

return	ie_estrutura_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_estrutura ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, nr_seq_estrutura_p bigint) FROM PUBLIC;

