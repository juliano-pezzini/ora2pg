-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function ehr_obter_valor_macro as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION ehr_obter_valor_macro ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, ie_macro_p text) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM ehr_obter_valor_macro_atx ( ' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(ie_macro_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION ehr_obter_valor_macro_atx ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, ie_macro_p text) RETURNS varchar AS $body$
DECLARE

ds_retorno_w	varchar(4000);
ds_doenca_w		varchar(1000);
ds_tratamento_w varchar(4000);
dt_diagnostico_w	timestamp;
ds_dias_ciclos_w	varchar(255);
nr_seq_receita_w	bigint;
nr_seq_texto_w		bigint;
ds_texto_w		varchar(32000);

c04 CURSOR FOR 
	SELECT	to_char(max(dt_diagnostico),'dd/mm/yyyy')||' ' ||obter_desc_cid_doenca(a.cd_doenca), 
		max(a.dt_diagnostico) dt_diagnostico 
	from	diagnostico_doenca a, 
		atendimento_paciente b 
	where	a.nr_atendimento	=	b.nr_atendimento 
	and	b.cd_pessoa_fisica	=	cd_pessoa_fisica_p 
	group by a.cd_doenca 
	order by dt_diagnostico desc;
	
	 
c05 CURSOR FOR 
	SELECT	to_char(max(dt_diagnostico),'dd/mm/yyyy')||' ' ||obter_desc_cid_doenca(a.cd_doenca), 
		max(a.dt_diagnostico) dt_diagnostico 
	from	diagnostico_doenca a, 
		atendimento_paciente b 
	where	a.nr_atendimento	=	b.nr_atendimento 
	and	b.cd_pessoa_fisica	=	cd_pessoa_fisica_p 
	and	a.IE_TIPO_DIAGNOSTICO	= 2 
	group by a.cd_doenca 
	order by dt_diagnostico desc;
	
C06 CURSOR FOR 
	SELECT	ds_dia_ciclo 
	into STRICT	ds_retorno_w 
	from	paciente_atendimento x 
	where	substr(Obter_status_Paciente_qt(NR_SEQ_ATENDIMENTO,dt_inicio_adm,dt_fim_adm,nr_seq_local,ie_exige_liberacao,dt_chegada,'C'),1,60) = 83 
	and	nr_seq_paciente = (SELECT	max(x.nr_seq_paciente) 
				  from		paciente_setor x, 
						paciente_atendimento z 
				  where	x.nr_seq_paciente = z.nr_seq_paciente 
				  and		z.nr_atendimento = nr_atendimento_p);
				
C07 CURSOR FOR 
	SELECT obter_desc_protocolo(CD_PROTOCOLO) || ' / ' || obter_desc_protocolo_medic(NR_SEQ_MEDICACAO,CD_PROTOCOLO) ds_protocolo 
	FROM PACIENTE_SETOR 
	WHERE CD_PESSOA_FISICA = cd_pessoa_fisica_p 
	AND IE_STATUS = 'A' 
	ORDER BY DS_PROTOCOLO ASC;
	
	 
C08 CURSOR FOR 
	SELECT	nr_sequencia 
	from	med_receita 
	where	nr_atendimento_hosp	= 	nr_atendimento_p 
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and 	coalesce(dt_inativacao::text, '') = '';
BEGIN
ds_retorno_w	:= null;
 
if (ie_macro_p	= 'NOME') then 
	ds_retorno_w	:= Obter_Nome_Pf(cd_pessoa_fisica_p);
elsif (ie_macro_p	= 'IDADE_DESC') then 
	ds_retorno_w	:= obter_idade_pf(cd_pessoa_fisica_p,clock_timestamp(),'S');	
elsif (ie_macro_p	= 'IDADE') then 
	ds_retorno_w	:= obter_idade_pf(cd_pessoa_fisica_p,clock_timestamp(),'A');
elsif (ie_macro_p	= 'NASCIMENTO') then 
	select	 to_char(dt_nascimento, 'dd/mm/yyyy') 
	into STRICT	ds_retorno_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
elsif (ie_macro_p	= 'ATENDIMENTO') then 
	ds_retorno_w	:= nr_atendimento_p;
elsif (ie_macro_p	= 'PRONTUARIO') then 
	select	nr_prontuario 
	into STRICT	ds_retorno_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
elsif (ie_macro_p = 'MEDICO') then 
	select	substr(obter_nome_pessoa_fisica(cd_medico_resp, null),1,40) 
	into STRICT	ds_retorno_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
elsif (ie_macro_p = 'DIAG_ANT') then 
	begin 
	ds_retorno_w	:= chr(13) || chr(10);
	open c04;
	loop 
	fetch c04 into 
		ds_doenca_w, 
		dt_diagnostico_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		ds_retorno_w	:= substr(ds_retorno_w || ds_doenca_w || chr(13) || chr(10),1,4000);
	end loop;
	close c04;
	end;
elsif (ie_macro_p = 'DIAG_DEF_ANT') then 
	begin 
	ds_retorno_w	:= chr(13) || chr(10);
	open c05;
	loop 
	fetch c05 into 
		ds_doenca_w, 
		dt_diagnostico_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		ds_retorno_w	:= substr(ds_retorno_w || ds_doenca_w || chr(13) || chr(10),1,4000);
	end loop;
	close c05;
	end;
elsif (ie_macro_p = 'TRATAMENTO_ONCO') then 
	begin 
	ds_retorno_w	:= chr(13) || chr(10);
	open C07;
	loop 
	fetch C07 into 
		ds_tratamento_w;
	EXIT WHEN NOT FOUND; /* apply on c07 */
		ds_retorno_w	:= substr(ds_retorno_w || ds_tratamento_w || chr(13) || chr(10),1,4000);
	end loop;
	close C07;
	end;	
elsif (ie_macro_p	= 'SETOR') then 
	ds_retorno_w:=	substr(obter_nome_setor(obter_setor_atendimento(nr_atendimento_p)),1,100);
elsif (ie_macro_p	= 'COD_SETOR') then 
	ds_retorno_w	:= obter_setor_atendimento(nr_atendimento_p);
elsif (ie_macro_p	= 'SEXO') then 
	select	ie_sexo 
	into STRICT	ds_retorno_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
elsif (ie_macro_p = 'DESC_SEXO') then 
	select	Obter_Desc_Sexo_Unid(ie_sexo) 
	into STRICT	ds_retorno_w 
	from	pessoa_fisica 
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
elsif (ie_macro_p	= 'CONVENIO') then 
	select	substr(obter_desc_convenio(obter_convenio_atendimento(nr_atendimento)),1,80) 
	into STRICT	ds_retorno_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
elsif (ie_macro_p	= 'CRM') then	 
	select	substr(obter_crm_medico(cd_medico_resp),1,60) 
	into STRICT	ds_retorno_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;	
elsif (ie_macro_p	= 'DSPROF') then	 
 
	ds_retorno_w := obter_compl_pf(cd_pessoa_fisica_p, 1, 'P');	
elsif (ie_macro_p	= 'ESCOLA') then	 
 
	ds_retorno_w := obter_dados_pf(cd_pessoa_fisica_p, 'DES');	
elsif (ie_macro_p	= 'CONTATO') then	 
 
	ds_retorno_w := null;
elsif (ie_macro_p	= 'PROTONC') then 
	select	max(substr(Obter_desc_protocolo(cd_protocolo),1,255)) 
	into STRICT	ds_retorno_w 
	from	paciente_setor a 
	where	nr_seq_paciente = (SELECT	max(x.nr_seq_paciente) 
				from		paciente_setor x, 
						paciente_atendimento z 
				where		x.nr_seq_paciente = z.nr_seq_paciente 
				and		z.nr_atendimento = nr_atendimento_p);
elsif (ie_macro_p	= 'SUBTIPOPROTONC') then 
	select	max(substr(obter_desc_protocolo_onco(a.nr_seq_paciente),1,255)) 
	into STRICT	ds_retorno_w 
	from	paciente_setor a 
	where	a.nr_seq_paciente = (SELECT	max(x.nr_seq_paciente) 
				from		paciente_setor x, 
						paciente_atendimento z 
				where		x.nr_seq_paciente = z.nr_seq_paciente 
				and		z.nr_atendimento = nr_atendimento_p);
elsif (ie_macro_p	= 'CICLOATUAL') then 
	select	min(nr_ciclo) 
	into STRICT	ds_retorno_w 
	from	paciente_atendimento x 
	where	substr(Obter_status_Paciente_qt(NR_SEQ_ATENDIMENTO,dt_inicio_adm,dt_fim_adm,nr_seq_local,ie_exige_liberacao,dt_chegada,'C'),1,60) <> 83 
	and	nr_seq_paciente = (SELECT	max(x.nr_seq_paciente) 
				from		paciente_setor x, 
						paciente_atendimento z 
				where		x.nr_seq_paciente = z.nr_seq_paciente 
				and		z.nr_atendimento = nr_atendimento_p);
elsif (ie_macro_p	= 'DIASEXECONC') then 
	ds_retorno_w	:= null;
	open C06;
	loop 
	fetch C06 into	 
		ds_retorno_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin 
		if (coalesce(ds_dias_ciclos_w::text, '') = '') then	 
			ds_dias_ciclos_w := substr(ds_retorno_w,1,4000);
		else 
			ds_dias_ciclos_w	:= ds_dias_ciclos_w ||','||ds_retorno_w;
		end if;
			 
			 
		end;
	end loop;
	close C06;
	 
	ds_retorno_w	:= ds_dias_ciclos_w;
elsif (ie_macro_p = 'T') then 
	select	max(cd_tumor_primario) 
	into STRICT	ds_retorno_w 
	from	can_loco_regional 
	where	nr_atendimento = nr_atendimento_p 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
elsif (ie_macro_p = 'N') then 
	select	max(cd_linfonodo_regional) 
	into STRICT	ds_retorno_w 
	from	can_loco_regional 
	where	nr_atendimento = nr_atendimento_p 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
elsif (ie_macro_p = 'M') then 
	select	max(cd_metastase_distancia) 
	into STRICT	ds_retorno_w 
	from	can_loco_regional 
	where	nr_atendimento = nr_atendimento_p 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
elsif (ie_macro_p = 'ESTADIO') then 
	select	max(cd_estadiamento) 
	into STRICT	ds_retorno_w 
	from	can_loco_regional 
	where	nr_atendimento = nr_atendimento_p 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
elsif (ie_macro_p = 'MEDICAMENTOS') then 
	ds_retorno_w	:=	substr(Obter_Medic_prescr_Atend(nr_atendimento_p),1,4000);
elsif (ie_macro_p = 'MEDICPRINCATI') then 
	ds_retorno_w	:=	substr(OBTER_MEDIC_PRESCR_ATEND_FICHA(nr_atendimento_p),1,4000);
elsif (ie_macro_p = 'INTERNACAO') then 
	ds_retorno_w	:=	substr(obter_data_internacao(nr_atendimento_p),1,50);
elsif (ie_macro_p = 'INTER_UTI') then 
	select	to_char(min(a.dt_entrada_unidade),'dd/mm/yyyy hh24:mi:ss') 
	into STRICT	ds_retorno_w 
	from	atend_paciente_unidade a, 
		setor_atendimento b 
	where	a.cd_setor_atendimento = b.cd_setor_atendimento 
	and	b.cd_classif_setor = 4 
	and	a.nr_atendimento = nr_atendimento_p;
elsif (ie_macro_p = 'TEMPO_INTER') then 
	select	min(substr(obter_dif_data(dt_entrada_unidade,dt_saida_unidade,''),1,50)) 
	into STRICT	ds_retorno_w 
	from	atend_paciente_unidade a, 
		setor_atendimento b 
	where	a.cd_setor_atendimento = b.cd_setor_atendimento 
	and	b.cd_classif_setor = 4 
	and	a.nr_atendimento = nr_atendimento_p;
elsif (ie_macro_p = 'MEDRECEITA') then 
 
	open C08;
	loop 
	fetch C08 into	 
		nr_seq_receita_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin 
		 
		nr_seq_texto_w := converte_rtf_string('select DS_RECEITA from med_receita where nr_sequencia = :nr', nr_seq_receita_w, 'Luis', nr_seq_texto_w);
		 
		 
		 
		if (nr_seq_texto_w IS NOT NULL AND nr_seq_texto_w::text <> '') and (nr_seq_texto_w	> 0) then 
			 
			select	ds_texto 
			into STRICT	ds_texto_w 
			from	tasy_conversao_rtf 
			where	nr_sequencia = nr_seq_texto_w;
			 
			if (ds_texto_w IS NOT NULL AND ds_texto_w::text <> '') then 
				ds_retorno_w	:= substr(ds_retorno_w ||ds_texto_w,1,4000);
				 
			end if;
			 
		end if;
		 
		 
		end;
	end loop;
	close C08;
elsif (ie_macro_p = 'DINT') then 
	select	max(substr(Obter_Dias_Internacao(nr_atendimento_p),1,255)) 
	into STRICT	ds_retorno_w 
	;
elsif (ie_macro_p = 'DINTUTI') then 
	select	max(substr(obter_dias_internacao_uti(nr_atendimento_p),1,255)) 
	into STRICT	ds_retorno_w 
	;
elsif (ie_macro_p = 'GANHOS') then 
	select sum(CASE WHEN a.ie_perda_ganho='G' THEN  c.qt_volume  ELSE 0 END ) qt_ganho 
	into STRICT	ds_retorno_w 
	from	tipo_perda_ganho b, 
			grupo_perda_ganho a, 
			atendimento_perda_ganho c 
	where	c.nr_atendimento = nr_atendimento_p 
	and	  	b.nr_sequencia = c.nr_seq_tipo 
	and	  	b.nr_seq_grupo = a.nr_sequencia 
	and   coalesce(b.ie_soma_bh,'S') = 'S' 
	and   (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '') 
	and   coalesce(c.ie_situacao,'A') = 'A';
 
elsif (ie_macro_p = 'PERDAS') then 
	select sum(CASE WHEN a.ie_perda_ganho='P' THEN  c.qt_volume  ELSE 0 END ) qt_perda 
	into STRICT	ds_retorno_w	 
	from	tipo_perda_ganho b, 
			grupo_perda_ganho a, 
			atendimento_perda_ganho c 
	where	c.nr_atendimento = nr_atendimento_p 
	and	  	b.nr_sequencia = c.nr_seq_tipo 
	and	  	b.nr_seq_grupo = a.nr_sequencia 
	and   coalesce(b.ie_soma_bh,'S') = 'S' 
	and   (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '') 
	and   coalesce(c.ie_situacao,'A') = 'A';
 
elsif (ie_macro_p = 'BALANCO') then 
	select sum(CASE WHEN a.ie_perda_ganho='G' THEN  c.qt_volume  ELSE 0 END  - CASE WHEN a.ie_perda_ganho='P' THEN  c.qt_volume  ELSE 0 END ) qt_diferenca 
	into STRICT	ds_retorno_w	 
	from	tipo_perda_ganho b, 
			grupo_perda_ganho a, 
			atendimento_perda_ganho c 
	where	c.nr_atendimento = nr_atendimento_p 
	and	  	b.nr_sequencia = c.nr_seq_tipo 
	and	  	b.nr_seq_grupo = a.nr_sequencia 
	and   coalesce(b.ie_soma_bh,'S') = 'S' 
	and   (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '') 
	and   coalesce(c.ie_situacao,'A') = 'A';
	 
end if;
 
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ehr_obter_valor_macro ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, ie_macro_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION ehr_obter_valor_macro_atx ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, ie_macro_p text) FROM PUBLIC;

