-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_conta_nf_item ( nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint) RETURNS bigint AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Get the rule of item code that should be generated in the invoice
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_w	bigint	:= null;
dt_referencia_w	timestamp;

cd_procedimento_w			procedimento.cd_procedimento%type;
ie_origem_proced_w			procedimento.ie_origem_proced%type;
cd_convenio_w				convenio.cd_convenio%type;
cd_area_procedimento_w		bigint;
cd_especialidade_w			bigint;
cd_grupo_proc_w				bigint;
nr_seq_grupo_lab_w			bigint;
cd_tipo_procedimento_w		smallint;
nr_seq_exame_w				procedimento_paciente.nr_seq_exame%type;

cd_material_w				material.cd_material%type;
cd_grupo_material_w			smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
nr_seq_familia_w			bigint;
ie_tipo_material_w			varchar(3);

cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

c_proc CURSOR FOR
SELECT	b.nr_sequencia nr_seq_regra
from	regra_nf_item_estrut_proc a,
		regra_conta_nf_item b,
		regra_conta_nf c
where	c.nr_sequencia	= b.nr_seq_regra_conta_nf
and		b.nr_sequencia	= a.nr_seq_regra_conta_nf_it
and		coalesce(c.cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
and		coalesce(c.cd_convenio,cd_convenio_w)	= cd_convenio_w
and		dt_referencia_w >= c.dt_inicio_vigencia
and (dt_referencia_w <= c.dt_fim_vigencia or coalesce(c.dt_fim_vigencia::text, '') = '')
and 	coalesce(a.cd_procedimento,cd_procedimento_w)	   	= cd_procedimento_w
and		coalesce(a.ie_origem_proced,ie_origem_proced_w)   	= ie_origem_proced_w
and		coalesce(a.cd_grupo_proced,cd_grupo_proc_w)	   		= cd_grupo_proc_w
and		coalesce(a.cd_especial_proced,cd_especialidade_w) 	= cd_especialidade_w
and		coalesce(a.cd_area_proced,cd_area_procedimento_w)	= cd_area_procedimento_w
and 	coalesce(a.cd_tipo_procedimento, coalesce(cd_tipo_procedimento_w,0)) = coalesce(cd_tipo_procedimento_w,0)
and		coalesce(a.nr_seq_grupo_lab, nr_seq_grupo_lab_w)	= nr_seq_grupo_lab_w
order by
	coalesce(a.cd_procedimento,0),
	coalesce(a.cd_grupo_proced,0),
	coalesce(a.cd_especial_proced,0),
	coalesce(a.cd_area_proced,0),
	coalesce(a.nr_seq_grupo_lab,0),
	coalesce(a.cd_tipo_procedimento,0);

c_mat CURSOR FOR
SELECT	b.nr_sequencia nr_seq_regra
from	regra_nf_item_estrut_mat a,
		regra_conta_nf_item b,
		regra_conta_nf c
where	c.nr_sequencia	= b.nr_seq_regra_conta_nf
and		b.nr_sequencia	= a.nr_seq_regra_conta_nf_it
and		coalesce(c.cd_estabelecimento,cd_estabelecimento_w)	= cd_estabelecimento_w
and		coalesce(c.cd_convenio,cd_convenio_w)	= cd_convenio_w
and		dt_referencia_w >= c.dt_inicio_vigencia
and (dt_referencia_w <= c.dt_fim_vigencia or coalesce(c.dt_fim_vigencia::text, '') = '')
and		coalesce(cd_material,cd_material_w)	   		= cd_material_w
and		coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
and		coalesce(cd_subgrupo_material,cd_subgrupo_material_w)= cd_subgrupo_material_w
and		coalesce(cd_grupo_material,cd_grupo_material_w) 	= cd_grupo_material_w
and		coalesce(nr_seq_familia, nr_seq_familia_w)		= nr_seq_familia_w
and		coalesce(ie_tipo_material, ie_tipo_material_w)	= ie_tipo_material_w
order by
	coalesce(cd_material,0),
	coalesce(cd_classe_material,0),
	coalesce(cd_subgrupo_material,0),
	coalesce(cd_grupo_material,0),
	coalesce(nr_seq_familia,0),
	coalesce(ie_tipo_material,'0');
BEGIN

if (coalesce(nr_interno_conta_p,0) > 0) or (coalesce(nr_seq_protocolo_p,0) > 0) then
	if (coalesce(nr_seq_protocolo_p,0) > 0) then
		select	a.cd_convenio,
				a.cd_estabelecimento
		into STRICT	cd_convenio_w,
				cd_estabelecimento_w
		from	protocolo_convenio a
		where	a.nr_seq_protocolo	= nr_seq_protocolo_p;
	elsif (coalesce(nr_interno_conta_p,0) > 0) then
		select	a.cd_convenio_parametro,
				a.cd_estabelecimento
		into STRICT	cd_convenio_w,
				cd_estabelecimento_w
		from	conta_paciente a
		where	a.nr_interno_conta	= nr_interno_conta_p;
	end if;

	if (nr_seq_propaci_p IS NOT NULL AND nr_seq_propaci_p::text <> '') then
		select	a.nr_seq_exame,
				a.cd_procedimento,
				a.ie_origem_proced,
				b.cd_tipo_procedimento,
				a.dt_procedimento
		into STRICT	nr_seq_exame_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				cd_tipo_procedimento_w,
				dt_referencia_w
		from	procedimento b,
				procedimento_paciente a
		where	a.cd_procedimento	= b.cd_procedimento
		and		a.ie_origem_proced	= b.ie_origem_proced
		and		nr_sequencia = nr_seq_propaci_p;

		select 	max(cd_grupo_proc),
				max(cd_especialidade),
				max(cd_area_procedimento)
		into STRICT	cd_grupo_proc_w,
				cd_especialidade_w,
				cd_area_procedimento_w
		from 	estrutura_procedimento_v
		where 	cd_procedimento	= cd_procedimento_w
		and		ie_origem_proced	= ie_origem_proced_w;

		nr_seq_grupo_lab_w := 0;
		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
			select	coalesce(max(nr_seq_grupo),0)
			into STRICT	nr_seq_grupo_lab_w
			from	exame_laboratorio
			where	nr_seq_exame = nr_seq_exame_w;
		end if;

		for r_c_proc in c_proc loop
			nr_seq_regra_w	:= r_c_proc.nr_seq_regra;
		end loop;
	elsif (nr_seq_matpaci_p IS NOT NULL AND nr_seq_matpaci_p::text <> '') then
		select	a.cd_material,
				a.dt_atendimento
		into STRICT	cd_material_w,
				dt_referencia_w
		from	material_atend_paciente a
		where	a.nr_sequencia	= nr_seq_matpaci_p;

		select 	cd_grupo_material,
				cd_subgrupo_material,
				cd_classe_material,
				coalesce(nr_seq_familia,0),
				coalesce(ie_tipo_material,'0')
		into STRICT	cd_grupo_material_w,
				cd_subgrupo_material_w,
				cd_classe_material_w,
				nr_seq_familia_w,
				ie_tipo_material_w
		from 	estrutura_material_v
		where 	cd_material		= cd_material_w;

		for r_c_mat in c_mat loop
			nr_seq_regra_w	:= r_c_mat.nr_seq_regra;
		end loop;
	end if;
end if;

return	nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_conta_nf_item ( nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_propaci_p bigint, nr_seq_matpaci_p bigint) FROM PUBLIC;

