-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_amenor_ult_agrup (nr_seq_retorno_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_interno_conta_p bigint, cd_autorizacao_p text, cd_item_p bigint, nr_seq_matpaci_p bigint, nr_seq_propaci_p bigint, ie_origem_proced_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


ds_retorno_w		varchar(50);
vl_glosa_w		double precision;
nr_seq_retorno_w	bigint;
nr_seq_ult_retorno_w	bigint;
vl_amenor_w		double precision;
vl_material_w		double precision;
vl_item_w		double precision;
qt_item_w		integer;
vl_amenor_grg_w		double precision;
qt_existe_w		bigint;
qt_percent_w		bigint;
qt_existe_ret_w		bigint;
vl_cobrado_item_w	material_atend_paciente.vl_material%type;
vl_saldo_item_w		material_atend_paciente.vl_material%type;
qt_material_w		material_atend_paciente.qt_material%type;
qt_tot_w		material_atend_paciente.qt_material%type;
vl_unitario_w		material_atend_paciente.vl_unitario%type;
cd_material_tiss_w	material_atend_paciente.cd_material_tiss%type;
cd_mat_conv_w		material_atend_paciente.cd_material_convenio%type;
cd_mat_w		material_atend_paciente.cd_material%type;
qt_mat_w		material_atend_paciente.qt_material%type;
vl_material_tot_w	material_atend_paciente.vl_material%type;
ds_material_w		material.ds_material%type;
vl_glosa_aceita_w	lote_audit_hist_item.vl_glosa%type;
vl_pago_w		lote_audit_hist_item.vl_pago%type;
vl_glosa_grg_w		lote_audit_hist_item.vl_glosa%type;
vl_glosa_aceita_grg_w	lote_audit_hist_item.vl_glosa%type;
vl_pago_grg_w		lote_audit_hist_item.vl_pago%type;
ie_agrup_w		varchar(1) := 'N';
vl_pago_digitado_w	convenio_retorno_glosa.vl_pago_digitado%type;
/*ie_opcao_p agrupamento dos itens
N - nenhum
C - Item
S- Setor
*/
BEGIN


/*



TRATAMENTO REALIZADO PARA CONSIDERAR VALOR PAGO DIGITADO E VALOR DE GLOSA ACEITA NA GRG.
ASSIM O SISTEMA CALCULA O SALDO ATRAVES DO VALOR COBRADO QUE E O VALOR DO ITEM MENOS O QUE JA FOI PAGO E GLOSA ACEITA.



*/
ds_retorno_w := 0;

ie_agrup_w := obter_param_usuario(27, 24, obter_perfil_ativo(), wheb_usuario_pck.get_nm_usuario(), wheb_usuario_pck.get_cd_estabelecimento(), ie_agrup_w);

select	vl_item
into STRICT	vl_cobrado_item_w
from (SELECT	vl_material vl_item
	from	material_atend_paciente
	where	nr_sequencia = nr_seq_matpaci_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	nr_seq_matpaci_p > 0
	
union

	SELECT	vl_procedimento vl_item
	from	procedimento_paciente
	where	nr_sequencia = nr_seq_propaci_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	nr_seq_propaci_p > 0) alias2;


if (coalesce(ie_opcao_p,'X') = 'N') then	
	/* primeiro busca o valor de glosa que esta na GRG se nao houver GRG entao busca do retorno*/

	if (coalesce(ie_origem_proced_p,0) > 0) then
		select	coalesce(sum(a.vl_amenor),0)
		into STRICT	vl_glosa_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b,
			lote_audit_hist c,
			procedimento_paciente p
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_seq_lote_hist     	= c.nr_sequencia
		and	a.nr_seq_propaci	= p.nr_sequencia
		and	p.nr_interno_conta	= b.nr_interno_conta
		and	p.nr_sequencia		= nr_seq_propaci_p
		and	p.ie_origem_proced	= ie_origem_proced_p
		and	coalesce(p.cd_motivo_exc_conta::text, '') = ''
		and	b.nr_interno_conta	= nr_interno_conta_p;
	else
		select	coalesce(sum(a.vl_amenor),0),
			coalesce(sum(a.vl_glosa),0)
		into STRICT	vl_glosa_w,
			vl_glosa_aceita_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b,
			lote_audit_hist c,
			material_atend_paciente m
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_seq_lote_hist     	= c.nr_sequencia
		and	a.nr_seq_matpaci	= m.nr_sequencia
		and	m.nr_interno_conta	= b.nr_interno_conta
		and	m.cd_material		= cd_item_p
		and	coalesce(m.cd_motivo_exc_conta::text, '') = ''
		and	b.nr_interno_conta	= nr_interno_conta_p;
	end if;
	

	if	((coalesce(vl_glosa_w,0) = 0) and (nr_seq_matpaci_p > 0)) then
		select	coalesce(sum(a.vl_glosa),0),
			coalesce(sum(a.vl_pago_digitado),0)
		into STRICT	vl_glosa_w,
			vl_pago_digitado_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b
		where	b.nr_sequencia				= a.nr_seq_ret_item
		and	a.cd_motivo_glosa			= c.cd_motivo_glosa
		and	a.cd_material				= cd_item_p
		and	a.nr_seq_matpaci			= nr_seq_matpaci_p
		and	b.nr_interno_conta			= nr_interno_conta_p;   -- 0
	elsif	((coalesce(vl_glosa_w,0) = 0) and (nr_seq_propaci_p > 0)) then

		select	coalesce(sum(a.vl_glosa),0)
		into STRICT	vl_glosa_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b
		where	b.nr_sequencia				= a.nr_seq_ret_item
		and	a.cd_motivo_glosa			= c.cd_motivo_glosa
		and	a.nr_seq_propaci			= nr_seq_propaci_p
		and	b.nr_interno_conta			= nr_interno_conta_p;
	elsif (vl_glosa_w > 0 and nr_seq_matpaci_p > 0) then
		
		select	coalesce(sum(a.vl_pago_digitado),0)
		into STRICT	vl_pago_digitado_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b,
			convenio_retorno r
		where	b.nr_sequencia				= a.nr_seq_ret_item
		and 	r.nr_sequencia				= b.nr_seq_retorno
		--and	r.ie_status_retorno			= 'F'
		and	a.cd_motivo_glosa			= c.cd_motivo_glosa
		and	a.cd_material				= cd_item_p
		and	a.nr_seq_matpaci			= nr_seq_matpaci_p
		and	b.nr_interno_conta			= nr_interno_conta_p;   -- 0
	
	end if;
	
	
	select	count(*)
	into STRICT	qt_existe_w
	from	convenio_retorno_glosa a,
		convenio_retorno_item b
	where	a.nr_seq_ret_item 	= b.nr_sequencia
	and	b.nr_interno_conta 	= nr_interno_conta_p
	and	a.cd_material		= cd_item_p;

	
	select	coalesce(sum(qt_material),0)
	into STRICT	qt_material_w
	from	material_atend_paciente a
	where	a.nr_sequencia = nr_seq_matpaci_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '';
		

	select	coalesce(sum(qt_material),1),
		coalesce(sum(vl_material),0)
	into STRICT	qt_tot_w,
		vl_material_tot_w
	from	material_atend_paciente a
	where	a.cd_material = cd_item_p
	and	a.nr_interno_conta = nr_interno_conta_p
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

	
	if	((coalesce(vl_glosa_w,0) = 0) and (nr_seq_matpaci_p > 0) and
		qt_existe_w > 0) then --quando o item foi gerado agrupado.
	
		select	coalesce(sum(a.vl_glosa),0),
			coalesce(sum(a.vl_pago_digitado),0)
		into STRICT	vl_glosa_w,
			vl_pago_digitado_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b
		where	b.nr_sequencia				= a.nr_seq_ret_item
		and	a.cd_motivo_glosa			= c.cd_motivo_glosa
		and	a.cd_material				= cd_item_p
		and	b.nr_interno_conta			= nr_interno_conta_p;
		
		select	coalesce(sum(qt_material),0)
		into STRICT	qt_material_w
		from	material_atend_paciente a
		where	a.nr_sequencia = nr_seq_matpaci_p
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	not exists (SELECT 1 from convenio_Retorno_glosa x where x.nr_seq_matpaci = a.nr_sequencia);

		select	coalesce(sum(qt_material),1)
		into STRICT	qt_tot_w
		from	material_atend_paciente a
		where	a.cd_material = cd_item_p
		and	a.nr_interno_conta = nr_interno_conta_p
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	not exists (SELECT 1 from convenio_retorno_glosa x where x.nr_seq_matpaci = a.nr_sequencia);
		
		qt_percent_w := dividir((qt_material_w * 100),qt_tot_w);

		vl_saldo_item_w := dividir((vl_glosa_w * qt_percent_w),100);
		ds_retorno_w 	:= vl_cobrado_item_w - vl_saldo_item_w;
		
	else
		if (coalesce(qt_material_w,0) < 0) then
			qt_material_w := qt_material_w * -1; -- quando a sequencia do item for negativo, ou seja o item foi estornado, porem o item nao foi agrupado.
		end if;
		
		if (ie_agrup_w = 'N') then
			qt_tot_w 	:= qt_material_w; 	-- trazer o valor cobrado exato do item da conta, quando nao for pra agrupar
			vl_glosa_w 	:= (vl_cobrado_item_w - (vl_glosa_aceita_w + vl_pago_digitado_w));
		else
			vl_glosa_w := vl_material_tot_w;	-- para buscar o valor do item quando o mesmo tiver sido estornado e for o primeiro retorno
		end if;
		ds_retorno_w 	:= dividir((vl_glosa_w * (dividir((qt_material_w * 100),qt_tot_w))),100);

	end if;

elsif (coalesce(ie_opcao_p,'X') = 'C') then
	
	select	count(*)
	into STRICT	qt_existe_ret_w
	from	convenio_retorno_item a
	where	a.nr_interno_conta = nr_interno_conta_p;
	
	-- feito para quando o mesmo item tem mais de um lancamento na conta com valor unitario diferente.

	-- e quando o material tiss for diferente para o mesmo item
	select	coalesce(sum(a.vl_unitario),0),
		max(a.cd_material_tiss),
		max(a.cd_material_convenio),
		max(b.ds_material),
		max(a.cd_material)
	into STRICT	vl_unitario_w,
		cd_material_tiss_w,
		cd_mat_conv_w,
		ds_material_w,
		cd_mat_w
	from	material_atend_paciente a,
		material b
	where	nr_sequencia = nr_seq_matpaci_p
	and	a.cd_material = b.cd_material;
		
	select	sum(vl_item),
		sum(qt_mat)
	into STRICT	vl_cobrado_item_w,
		qt_mat_w
	from (SELECT	sum(a.vl_material) vl_item,
			sum(a.qt_material) qt_mat
		from	material_atend_paciente a,
			material b
		where	a.cd_material 		= cd_item_p
		and	a.cd_material 		= b.cd_material
		and	a.nr_interno_conta 	= nr_interno_conta_p
		and	a.vl_unitario 		= vl_unitario_w
		and	a.cd_material_tiss 	= cd_material_tiss_w
		and	a.cd_material_convenio 	= cd_mat_conv_w
		and	b.ds_material 		= ds_material_w
		and	a.cd_material 		= cd_mat_w
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	cd_item_p > 0
		) alias5;
			
	if (qt_existe_ret_w > 1) then --verificar se a conta existe em mais de um retorno,caso contrario o valor do saldo sera o proprio valor do item

		/* primeiro busca o valor de glosa que esta na GRG se nao houver GRG entao busca do retorno*/

		if (coalesce(ie_origem_proced_p,0) > 0) then
			select	coalesce(sum(a.vl_amenor),0)
			into STRICT	vl_glosa_w
			from	lote_audit_hist_item a,
				lote_audit_hist_guia b,
				lote_audit_hist c,
				procedimento_paciente p
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_lote_hist     	= c.nr_sequencia
			and	a.nr_seq_propaci	= p.nr_sequencia
			and	p.nr_interno_conta	= b.nr_interno_conta
			and	p.ie_origem_proced	= ie_origem_proced_p
			and	coalesce(p.cd_motivo_exc_conta,0) = 0
			and	b.nr_interno_conta	= nr_interno_conta_p;
		else
			
			select	coalesce(max(a.vl_amenor),0)
			into STRICT	vl_glosa_grg_w
			from	lote_audit_hist_item a,
				lote_audit_hist_guia b,
				lote_audit_hist c,
				material_atend_paciente m,
				material n
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_lote_hist     	= c.nr_sequencia
			and	a.nr_seq_matpaci	= m.nr_sequencia
			and	m.nr_interno_conta	= b.nr_interno_conta
			and	m.cd_material		= cd_item_p
			and	coalesce(m.cd_motivo_exc_conta,0) = 0
			and	m.vl_unitario 		= vl_unitario_w
			and	b.nr_interno_conta	= nr_interno_conta_p
			and	a.qt_item 		= qt_mat_w;
			
			select	coalesce(max(a.vl_glosa),0)
			into STRICT	vl_glosa_aceita_grg_w
			from	lote_audit_hist_item a,
				lote_audit_hist_guia b,
				lote_audit_hist c,
				material_atend_paciente m,
				material n
			where	a.nr_seq_guia		= b.nr_sequencia
			and	b.nr_seq_lote_hist     	= c.nr_sequencia
			and	a.nr_seq_matpaci	= m.nr_sequencia
			and	m.nr_interno_conta	= b.nr_interno_conta
			and	m.cd_material		= cd_item_p
			and	coalesce(m.cd_motivo_exc_conta,0) = 0
			and	m.vl_unitario 		= vl_unitario_w
			and	b.nr_interno_conta	= nr_interno_conta_p
			and	a.qt_item 		= qt_mat_w;
			
		end if;

		select	coalesce(sum(a.vl_glosa),0)
		into STRICT	vl_glosa_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b
		where	b.nr_sequencia		= a.nr_seq_ret_item
		and	a.cd_motivo_glosa	= c.cd_motivo_glosa
		and	a.cd_material		= cd_item_p
		and	b.nr_interno_conta			= nr_interno_conta_p;
			
		if (vl_glosa_grg_w > 0) then
			vl_saldo_item_w := vl_glosa_grg_w;
		else
			vl_pago_w := vl_cobrado_item_w - vl_glosa_w; -- pago retorno.
			vl_saldo_item_w :=  vl_cobrado_item_w - vl_pago_w - vl_glosa_aceita_grg_w;
			
		end if;
		ds_retorno_w	:= vl_saldo_item_w;
	else
		ds_retorno_w := vl_cobrado_item_w;
		
	end if;
	
	

elsif (coalesce(ie_opcao_p,'X') = 'S') then -- setor atendimento
	select	sum(vl_item)
	into STRICT	vl_cobrado_item_w
	from (SELECT	sum(vl_material) vl_item
		from	material_atend_paciente
		where	cd_material = cd_item_p
		and	nr_interno_conta = nr_interno_conta_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	cd_item_p > 0
		
union

		SELECT	sum(vl_procedimento) vl_item
		from	procedimento_paciente
		where	cd_procedimento = cd_item_p
		and	coalesce(cd_motivo_exc_conta::text, '') = ''
		and	nr_interno_conta = nr_interno_conta_p
		and	cd_item_p > 0) alias7;
	
	/* primeiro busca o valor de glosa que esta na GRG se nao houver GRG entao busca do retorno*/

	if (coalesce(ie_origem_proced_p,0) > 0) then
		select	coalesce(sum(a.vl_amenor),0)
		into STRICT	vl_glosa_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b,
			lote_audit_hist c,
			procedimento_paciente p
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_seq_lote_hist     	= c.nr_sequencia
		and	a.nr_seq_propaci	= p.nr_sequencia
		and	p.nr_interno_conta	= b.nr_interno_conta
		and	p.ie_origem_proced	= ie_origem_proced_p
		and	coalesce(p.cd_motivo_exc_conta::text, '') = ''
		and	b.nr_interno_conta	= nr_interno_conta_p;
	else
		select	coalesce(sum(a.vl_amenor),0)
		into STRICT	vl_glosa_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b,
			lote_audit_hist c,
			material_atend_paciente m
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_seq_lote_hist     	= c.nr_sequencia
		and	a.nr_seq_matpaci	= m.nr_sequencia
		and	m.nr_interno_conta	= b.nr_interno_conta
		and	m.cd_material		= cd_item_p
		and	coalesce(m.cd_motivo_exc_conta::text, '') = ''
		and	b.nr_interno_conta	= nr_interno_conta_p;
	end if;

	if	((coalesce(vl_glosa_w,0) = 0) and (nr_seq_matpaci_p > 0)) then
		select	coalesce(sum(a.vl_glosa),0)
		into STRICT	vl_glosa_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b,
			material_atend_paciente d
		where	b.nr_sequencia				= a.nr_seq_ret_item
		and	a.cd_motivo_glosa			= c.cd_motivo_glosa
		and	a.nr_seq_matpaci			= d.nr_sequencia
		and	a.cd_material				= cd_item_p
		and	b.nr_interno_conta			= nr_interno_conta_p
		and	d.cd_setor_Atendimento			= nr_seq_retorno_p
		and	coalesce(d.cd_motivo_exc_conta::text, '') = ''
		and	coalesce(a.ie_acao_glosa,c.ie_acao_glosa) 	in ('A','P');
	elsif	((coalesce(vl_glosa_w,0) = 0) and (nr_seq_propaci_p > 0)) then

		select	coalesce(sum(a.vl_glosa),0)
		into STRICT	vl_glosa_w
		from	motivo_glosa c,
			convenio_retorno_glosa a,
			convenio_retorno_item b
		where	b.nr_sequencia				= a.nr_seq_ret_item
		and	a.cd_motivo_glosa			= c.cd_motivo_glosa
		and	b.nr_interno_conta			= nr_interno_conta_p
		and	coalesce(a.ie_acao_glosa,c.ie_acao_glosa) 	in ('A','P');
	end if;
			
	ds_retorno_w	:= vl_glosa_w;	

end if;



return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_amenor_ult_agrup (nr_seq_retorno_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nr_interno_conta_p bigint, cd_autorizacao_p text, cd_item_p bigint, nr_seq_matpaci_p bigint, nr_seq_propaci_p bigint, ie_origem_proced_p bigint, ie_opcao_p text) FROM PUBLIC;

