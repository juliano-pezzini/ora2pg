-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sup_obter_qt_material_kit ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, nr_seq_lote_fornec_p bigint default null, ds_local_estoque_p text default null) RETURNS bigint AS $body$
DECLARE


qt_material_w		double precision := 0;
qt_kit_w			double precision := 0;
qt_reg_kit_w		double precision := 0;
qt_kit_avulso_w		double precision := 0;
qt_conv_estoque_w	double precision;
ie_disp_comp_kit_estoque_w	varchar(1);
ie_disp_reg_kit_estoque_w	varchar(1);
ie_estoque_lote_w		varchar(1);
ds_material_w	varchar(2000);

c01 CURSOR(cd_material_p		 bigint) FOR
	SELECT		cd_material
	from		material
	where		cd_material_estoque = cd_material_p
	order by	cd_material;

BEGIN
select	coalesce(max(ie_disp_comp_kit_estoque), 'N'),
	coalesce(max(ie_disp_reg_kit_estoque), 'N')
into STRICT	ie_disp_comp_kit_estoque_w,
	ie_disp_reg_kit_estoque_w
from	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(qt_conv_estoque_consumo,1)
into STRICT	qt_conv_estoque_w
from	material
where	cd_material = cd_material_p;

select	coalesce(max(ie_estoque_lote),'N')
into STRICT	ie_estoque_lote_w
from	material_estab
where	cd_material = cd_material_p
and	cd_estabelecimento = cd_estabelecimento_p;

if	((ie_estoque_lote_w = 'N') or (coalesce(nr_seq_lote_fornec_p,0) <= 0)) then
	begin
	for r_c01 in c01(cd_material_p) loop
	begin
	if (coalesce(ds_material_w::text, '') = '') then
		ds_material_w := r_c01.cd_material;
	else
		ds_material_w := ds_material_w||','||r_c01.cd_material;
	end if;
	end;
	end loop;
		
	if (ie_disp_comp_kit_estoque_w = 'S') then	
		
		select sum(qt_kit)
		into STRICT	qt_kit_w
		from (SELECT	coalesce(sum(a.qt_material), 0) qt_kit
				from		kit_estoque b,
							kit_estoque_comp a,
							table(lista_pck.obter_lista(ds_local_estoque_p))  y,
							table(lista_pck.obter_lista(ds_material_w))  w
				where	a.nr_seq_kit_estoque	= b.nr_sequencia
				and		b.cd_local_estoque		=  y.nr_registro
				and		b.cd_estabelecimento	= cd_estabelecimento_p
				and		coalesce(b.nr_seq_solic_kit::text, '') = ''
				and		coalesce(b.cd_setor_destino::text, '') = ''
				and		coalesce(b.dt_utilizacao::text, '') = ''
				and		coalesce(b.nr_seq_reg_kit::text, '') = ''
				and		coalesce(a.qt_material,0) > 0
				and		a.cd_material = w.nr_registro
				
union all

				SELECT	coalesce(sum(a.qt_material), 0) qt_kit
				from		kit_estoque b,
							kit_estoque_comp a,
							table(lista_pck.obter_lista(ds_local_estoque_p))  y,
							table(lista_pck.obter_lista(ds_material_w))  w
				where	a.nr_seq_kit_estoque	= b.nr_sequencia
				and		b.cd_local_estoque		=  y.nr_registro
				and		b.cd_estabelecimento	= cd_estabelecimento_p
				and		a.ie_gerado_barras = 'S'
				and		coalesce(b.cd_setor_destino::text, '') = ''
				and		coalesce(b.dt_utilizacao::text, '') = ''
				and		coalesce(b.nr_seq_reg_kit::text, '') = ''
				and		a.cd_material = w.nr_registro
				and		coalesce(a.qt_material,0) > 0
		group by coalesce(a.qt_material,0)) alias24;
		



	elsif (ie_disp_comp_kit_estoque_w = 'C') then
		select	coalesce(sum(a.qt_material), 0)
		into STRICT	qt_kit_w
		from	kit_estoque b,
			kit_estoque_comp a,
					table(lista_pck.obter_lista(ds_local_estoque_p))  y,
					material x
		where	a.nr_seq_kit_estoque	= b.nr_sequencia
		and	b.cd_local_estoque		=  y.nr_registro
		and	b.cd_estabelecimento	= cd_estabelecimento_p
		and	coalesce(b.cd_setor_destino::text, '') = ''
		and	a.ie_gerado_barras = 'S'
		and	coalesce(b.dt_utilizacao::text, '') = ''
		and	coalesce(b.nr_seq_reg_kit::text, '') = ''



		and	x.cd_material_estoque = cd_material_p;
	end if;

	if (ie_disp_reg_kit_estoque_w = 'S') then

		select	coalesce(sum(a.qt_material),0)
		into STRICT	qt_reg_kit_w
		from	kit_estoque_reg c,
			kit_estoque b,
			material x,
			kit_estoque_comp a,
			table(lista_pck.obter_lista(ds_local_estoque_p))  y
		where	c.nr_sequencia		= b.nr_seq_reg_kit
		and	a.nr_seq_kit_estoque	= b.nr_sequencia
		and	a.cd_material 		= x.cd_material
		and	x.cd_material_estoque	= cd_material_p
		and	b.cd_local_estoque		= y.nr_registro
		and	b.cd_estabelecimento	= cd_estabelecimento_p
		and	b.cd_estabelecimento = c.cd_estabelecimento
		and	a.ie_gerado_barras		= 'S'
		and	coalesce(a.nr_seq_motivo_exclusao::text, '') = ''
		and	coalesce(b.dt_utilizacao::text, '') = ''
		and	c.ie_situacao		= 'A'
		and	coalesce(c.dt_utilizacao::text, '') = '';		

		select	coalesce(sum(a.qt_material),0)
		into STRICT	qt_kit_avulso_w
		from	kit_estoque_reg b,

				kit_estoque_comp_avulso a,
				table(lista_pck.obter_lista(ds_local_estoque_p))  y,
				table(lista_pck.obter_lista(ds_material_w))  w
		where	b.nr_sequencia		= a.nr_seq_reg_kit
		and		w.nr_registro		= a.cd_material
		and		a.cd_local_estoque		=  y.nr_registro
		and		b.cd_estabelecimento	= cd_estabelecimento_p

		and		b.ie_situacao		= 'A'
		and		a.ie_gerado_barras		= 'S'
		and		coalesce(a.qt_material,0) > 0
		and		coalesce(b.dt_utilizacao::text, '') = '';
	end if;
	end;
else
	begin
	if (ie_disp_comp_kit_estoque_w = 'S') then
		select	coalesce(sum(a.qt_material), 0)
		into STRICT	qt_kit_w
		from	kit_estoque b,
			kit_estoque_comp a,
					table(lista_pck.obter_lista(ds_local_estoque_p))  y
		where	a.nr_seq_kit_estoque	= b.nr_sequencia
		and	b.cd_local_estoque		=  y.nr_registro
		and	b.cd_estabelecimento	= cd_estabelecimento_p
		and	((coalesce(b.nr_seq_solic_kit::text, '') = '') or (a.ie_gerado_barras = 'S'))
		and	coalesce(b.cd_setor_destino::text, '') = ''
		and	coalesce(b.dt_utilizacao::text, '') = ''
		and	coalesce(b.nr_seq_reg_kit::text, '') = ''
		and	a.nr_seq_lote_fornec 	= nr_seq_lote_fornec_p
		and	a.cd_material in (
			SELECT	x.cd_material
			from	material x
			where	x.cd_material_estoque = cd_material_p);
	elsif (ie_disp_comp_kit_estoque_w = 'C') then
		select	coalesce(sum(a.qt_material), 0)
		into STRICT	qt_kit_w
		from	kit_estoque b,
			kit_estoque_comp a,
					table(lista_pck.obter_lista(ds_local_estoque_p))  y
		where	a.nr_seq_kit_estoque	= b.nr_sequencia
		and	b.cd_local_estoque		=  y.nr_registro
		and	b.cd_estabelecimento	= cd_estabelecimento_p
		and	coalesce(b.cd_setor_destino::text, '') = ''
		and	coalesce(b.dt_utilizacao::text, '') = ''
		and	coalesce(b.nr_seq_reg_kit::text, '') = ''
		and	a.ie_gerado_barras		= 'S'
		and	a.nr_seq_lote_fornec 	= nr_seq_lote_fornec_p
		and	a.cd_material in (
			SELECT	x.cd_material
			from	material x
			where	x.cd_material_estoque = cd_material_p);
	end if;

	if (ie_disp_reg_kit_estoque_w = 'S') then
		select	coalesce(sum(a.qt_material),0)
		into STRICT	qt_reg_kit_w
		from	kit_estoque_reg c,
			kit_estoque b,
			material x,
			kit_estoque_comp a,
					table(lista_pck.obter_lista(ds_local_estoque_p))  y
		where	c.nr_sequencia		= b.nr_seq_reg_kit
		and	a.nr_seq_kit_estoque	= b.nr_sequencia
		and	a.cd_material 		= x.cd_material
		and	x.cd_material_estoque	= cd_material_p
		and	b.cd_local_estoque		=  y.nr_registro
		and	b.cd_estabelecimento	= cd_estabelecimento_p
		and	a.ie_gerado_barras		= 'S'
		and	coalesce(a.nr_seq_motivo_exclusao::text, '') = ''
		and	coalesce(b.dt_utilizacao::text, '') = ''
		and	c.ie_situacao		= 'A'
		and	coalesce(c.dt_utilizacao::text, '') = ''
		and	a.nr_seq_lote_fornec 	= nr_seq_lote_fornec_p;

		select	coalesce(sum(a.qt_material),0)
		into STRICT	qt_kit_avulso_w
		from	kit_estoque_reg b,
			material x,
			kit_estoque_comp_avulso a,
					table(lista_pck.obter_lista(ds_local_estoque_p))  y
		where	b.nr_sequencia		= a.nr_seq_reg_kit
		and	x.cd_material		= a.cd_material
		and	a.cd_local_estoque		=  y.nr_registro
		and	b.cd_estabelecimento	= cd_estabelecimento_p
		and	x.cd_material_estoque	= cd_material_p
		and	b.ie_situacao		= 'A'
		and	a.ie_gerado_barras		= 'S'
		and	coalesce(b.dt_utilizacao::text, '') = ''
		and	a.nr_seq_lote_fornec 	= nr_seq_lote_fornec_p;
	end if;
	end;
end if;

qt_material_w	:=	qt_kit_w + qt_reg_kit_w + qt_kit_avulso_w;
qt_material_w	:=	dividir(qt_material_w, qt_conv_estoque_w);
	
return	qt_material_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sup_obter_qt_material_kit ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, nr_seq_lote_fornec_p bigint default null, ds_local_estoque_p text default null) FROM PUBLIC;

