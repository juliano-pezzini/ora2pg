-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_agenda_atendimento ( nr_atendimento_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


nr_seq_agenda_w	agenda_consulta.cd_agenda%type;
cd_agenda_w		bigint;
ds_agenda_w		varchar(255);
ds_classif_agenda_w	varchar(200);


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	/* verificar agenda servico */

	select	coalesce(min(b.nr_sequencia),0)
	into STRICT	nr_seq_agenda_w
	from	agenda a,
		agenda_consulta b
	where	a.cd_agenda = b.cd_agenda
	and	a.cd_tipo_agenda = 5
	and	b.nr_atendimento = nr_atendimento_p
	and	b.ie_status_agenda not in ('C','L','B');

	if (nr_seq_agenda_w > 0) then
		select	b.cd_agenda,
			substr(obter_classif_agenda_turno(ie_classif_agenda, null), 1, 200)
		into STRICT	cd_agenda_w,
			ds_classif_agenda_w
		from	agenda_consulta b
		where	b.nr_sequencia = nr_seq_agenda_w;

		select	a.ds_agenda
		into STRICT	ds_agenda_w
		from	agenda a
		where	a.cd_agenda = cd_agenda_w;
		
	else
		/* verificar agenda consulta */

		select	coalesce(min(b.nr_sequencia),0)
		into STRICT	nr_seq_agenda_w
		from	agenda a,
			agenda_consulta b
		where	a.cd_agenda = b.cd_agenda
		and	a.cd_tipo_agenda in (3,4)
		and	b.nr_atendimento = nr_atendimento_p
		and	b.ie_status_agenda not in ('C','L','B');

		if (nr_seq_agenda_w > 0) then
			select	b.cd_agenda,
				substr(obter_classif_agenda_turno(ie_classif_agenda, null), 1, 200)
			into STRICT	cd_agenda_w,
				ds_classif_agenda_w
			from	agenda_consulta b
			where	b.nr_sequencia = nr_seq_agenda_w;

			select	substr(obter_nome_pf(a.cd_pessoa_fisica) || ' \ ' || substr(obter_especialidades_medico(a.cd_pessoa_fisica),1,170),1,240)
			into STRICT	ds_agenda_w
			from	agenda a
			where	a.cd_agenda = cd_agenda_w;	
		else
			/* verificar agenda exames e cirurgia */

			select	coalesce(min(b.nr_sequencia),0)
			into STRICT	nr_seq_agenda_w
			from	agenda a,
				agenda_paciente b
			where	a.cd_agenda = b.cd_agenda
			and	a.cd_tipo_agenda in (1,2)
			and	b.nr_atendimento = nr_atendimento_p
			and	b.ie_status_agenda not in ('C','L','B');

			if (nr_seq_agenda_w > 0) then
				select	b.cd_agenda,
					substr(obter_desc_classif_agenda_pac(nr_seq_classif_agenda),1,200)
				into STRICT	cd_agenda_w,
					ds_classif_agenda_w
				from	agenda_paciente b
				where	b.nr_sequencia = nr_seq_agenda_w;

				select	a.ds_agenda
				into STRICT	ds_agenda_w
				from	agenda a
				where	a.cd_agenda = cd_agenda_w;				
		
			end if;
		end if;
	end if;
end if;

if (ie_opcao_p = 'S') then
	return nr_seq_agenda_w;
elsif (ie_opcao_p = 'D') then
	return ds_agenda_w;
elsif (ie_opcao_p = 'L') then
	return ds_classif_agenda_w;
else
	return cd_agenda_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_agenda_atendimento ( nr_atendimento_p bigint, ie_opcao_p text) FROM PUBLIC;

