-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_tempo_total_gas (nr_seq_gas_p bigint, ie_disp_resp_esp_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


ds_w			varchar(50);
ds_tempo_w		varchar(50);
qt_horas_w		bigint;
qt_min_w		bigint;
qt_total_horas_w	bigint;
qt_total_min_w		bigint;

c01 CURSOR FOR
SELECT 	obter_tempo_entre_datas(Obter_Datas_Gasoterapia(a.nr_sequencia,'I'),coalesce(Obter_Datas_Gasoterapia(a.nr_sequencia,'T'),clock_timestamp()),'D') * 24+
	obter_tempo_entre_datas(Obter_Datas_Gasoterapia(a.nr_sequencia,'I'),coalesce(Obter_Datas_Gasoterapia(a.nr_sequencia,'T'),clock_timestamp()),'H')
        ||':'||
	obter_tempo_entre_datas(Obter_Datas_Gasoterapia(a.nr_sequencia,'I'),coalesce(Obter_Datas_Gasoterapia(a.nr_sequencia,'T'),clock_timestamp()),'M')
FROM	prescr_gasoterapia a,
	prescr_medica b
WHERE	a.dt_atualizacao	BETWEEN dt_inicial_p AND dt_final_p
AND 	a.nr_prescricao		= b.nr_prescricao
and	a.nr_seq_gas		= nr_seq_gas_p
and	coalesce(a.ie_disp_resp_esp,'XPTO')	= coalesce(ie_disp_resp_esp_p,'XPTO')
AND	b.nr_atendimento	= nr_atendimento_p
and	(Obter_Datas_Gasoterapia(a.nr_sequencia,'I') IS NOT NULL AND (Obter_Datas_Gasoterapia(a.nr_sequencia,'I'))::text <> '');


BEGIN

open C01;
loop
fetch C01 into
	ds_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	qt_horas_w		:= (substr(ds_w,1,position(':' in ds_w)-1))::numeric;

	qt_min_w		:= (substr(ds_w,position(':' in ds_w)+1,length(ds_w)))::numeric;

	qt_total_horas_w	:= coalesce(qt_total_horas_w,0) + qt_horas_w;

	qt_total_min_w		:= coalesce(qt_total_min_w,0) + qt_min_w;

	if (qt_total_min_w	> 60) then
		qt_total_horas_w	:= coalesce(qt_total_horas_w,0) + (trim(both replace(to_char(floor(dividir(qt_total_min_w,60)),'999,999,900'),',','.')))::numeric;
		qt_total_min_w		:= (substr(to_char(mod(qt_total_min_w,60),'00'),2,2))::numeric;
	end if;

end loop;
close C01;

ds_tempo_w	:= to_char(qt_total_horas_w);
if (length(qt_total_horas_w) = 1) then
	ds_tempo_w	:= '0' || qt_total_horas_w;
end if;

if (length(qt_total_min_w) = 1) then
	ds_tempo_w	:= ds_tempo_w || ':' || '0' || to_char(qt_total_min_w);
else
	ds_tempo_w	:= ds_tempo_w || ':' || to_char(qt_total_min_w);
end if;
--ds_tempo_w	:= to_char(qt_total_horas_w || ':' || qt_total_min_w);
return	ds_tempo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_tempo_total_gas (nr_seq_gas_p bigint, ie_disp_resp_esp_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_atendimento_p bigint) FROM PUBLIC;

