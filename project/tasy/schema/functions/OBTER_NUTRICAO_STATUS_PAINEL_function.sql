-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_nutricao_status_painel ( nr_seq_nut_atend_serv_dia_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*
ie_opcao_p
  A - Acompanhante
  P - Paciente
Retorno
  C - Cancelado
  B - Bloqueado
  J - Termino de Jejum
  E - Entregue
  P - Nova Prescricao
  CA - Com Cardapio (Paciente)
  CP - Com Cardapio (Acompanhante)
  A - Aguardando
*/
ie_nut_status_w           varchar(2) := 'A';
qt_cardapio_w             bigint;
nr_seq_acompanhante_w     nut_pac_opcao_rec.nr_seq_acompanhante%type;
nr_atendimento_w          nut_atend_serv_dia.nr_atendimento%type;
cd_setor_atendimento_w    nut_atend_serv_dia.cd_setor_atendimento%type;
nr_seq_servico_w          nut_atend_serv_dia.nr_seq_servico%type;
dt_descarte_w             nut_atend_serv_dia.dt_descarte%type;
dt_bloqueio_w             nut_atend_serv_dia.dt_bloqueio%type;
ie_bloqueio_w             varchar(1);
dt_atend_servico_w        nut_atend_serv_dia.dt_atend_servico%type;
dt_servico_w              nut_atend_serv_dia.dt_servico%type;
dt_suspensao_w		  nut_atend_serv_dia.dt_suspensao%type;

function nut_obter_se_nova_prescricao(nr_sequencia_p bigint) return integer is

qt_exists_w             bigint;
ie_suspender_dieta_w	varchar(1);


BEGIN

	ie_suspender_dieta_w := obter_param_usuario(1003, 126, somente_numero(wheb_usuario_pck.get_cd_perfil), wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1), ie_suspender_dieta_w);

	select 	count(*)
		into STRICT  qt_exists_w
	from	nut_atend_serv_dia a,
		nut_atend_serv_dia_rep e,
		prescr_medica b
	where 	a.nr_sequencia    = e.nr_seq_serv_dia
	and	e.nr_prescr_oral  = b.nr_prescricao
	and	a.nr_sequencia    = nr_sequencia_p
	and	a.dt_servico > clock_timestamp()
	and	exists (	SELECT 	1
				from  	prescr_medica  x,
					prescr_dieta   y,
					cpoe_dieta z
				where 	x.nr_prescricao = y.nr_prescricao
				and  	a.nr_atendimento = x.nr_atendimento
				and   	(x.dt_liberacao_medico IS NOT NULL AND x.dt_liberacao_medico::text <> '')
				and     coalesce(x.dt_ignora_prescr_nut::text, '') = ''
				and	x.dt_inicio_prescr > b.dt_inicio_prescr
				and	x.dt_validade_prescr > clock_timestamp()
				and     y.nr_seq_dieta_cpoe = z.nr_sequencia
				and     coalesce(z.dt_lib_suspensao::text, '') = ''
				and (ie_suspender_dieta_w = 'N' or (ie_suspender_dieta_w = 'S' and (coalesce(x.NR_PRESCRICOES::text, '') = '' or ((x.NR_PRESCRICOES IS NOT NULL AND x.NR_PRESCRICOES::text <> '')
					and substr(obter_se_prescricao_nut_dia(x.nr_prescricao, a.nr_sequencia),1,2) = 'S')))));

	if ( qt_exists_w < 1 ) then

		select 	count(*)
			into STRICT  qt_exists_w
		from	nut_atend_serv_dia a,
			nut_atend_serv_dia_rep e,
			prescr_medica b
		where 	a.nr_sequencia    = e.nr_seq_serv_dia
		and	e.nr_prescr_compl  = b.nr_prescricao
		and	a.nr_sequencia    = nr_sequencia_p
		and	a.dt_servico > clock_timestamp()								
		and	exists (	SELECT 	1
					from  	prescr_medica  x,
						prescr_material   y,
						cpoe_dieta z
					where 	x.nr_prescricao = y.nr_prescricao
					and  	a.nr_atendimento = x.nr_atendimento
					and   	(x.dt_liberacao_medico IS NOT NULL AND x.dt_liberacao_medico::text <> '')
					and     coalesce(x.dt_ignora_prescr_nut::text, '') = ''
					and	x.dt_inicio_prescr > b.dt_inicio_prescr
					and	x.dt_validade_prescr > clock_timestamp() 
					and 	y.nr_seq_dieta_cpoe = z.nr_sequencia
					and 	coalesce(z.dt_lib_suspensao::text, '') = ''
					and (ie_suspender_dieta_w = 'N' or (ie_suspender_dieta_w = 'S' and (coalesce(x.NR_PRESCRICOES::text, '') = '' or ((x.NR_PRESCRICOES IS NOT NULL AND x.NR_PRESCRICOES::text <> '')
						and substr(obter_se_prescricao_nut_dia(x.nr_prescricao, a.nr_sequencia),1,2) = 'S')))));

		if ( qt_exists_w < 1 ) then

			select 	count(*)
				into STRICT  qt_exists_w
			from	nut_atend_serv_dia a,
					nut_atend_serv_dia_rep e,
					prescr_medica b
			where 	a.nr_sequencia    = e.nr_seq_serv_dia
			and	e.nr_prescr_leite_deriv  = b.nr_prescricao
			and	a.nr_sequencia    = nr_sequencia_p
			and	a.dt_servico > clock_timestamp()														
			and	exists (	SELECT 	1
						from  	prescr_medica  x,
							prescr_leite_deriv   y,
							cpoe_dieta z
						where 	x.nr_prescricao = y.nr_prescricao
						and  	a.nr_atendimento = x.nr_atendimento
						and   	(x.dt_liberacao_medico IS NOT NULL AND x.dt_liberacao_medico::text <> '')
						and     coalesce(x.dt_ignora_prescr_nut::text, '') = ''
						and	x.dt_inicio_prescr > b.dt_inicio_prescr
						and	x.dt_validade_prescr > clock_timestamp() 
						and 	y.nr_seq_dieta_cpoe = z.nr_sequencia
						and 	coalesce(z.dt_lib_suspensao::text, '') = ''
						and (ie_suspender_dieta_w = 'N' or (ie_suspender_dieta_w = 'S' and (coalesce(x.NR_PRESCRICOES::text, '') = '' or ((x.NR_PRESCRICOES IS NOT NULL AND x.NR_PRESCRICOES::text <> '')
							and substr(obter_se_prescricao_nut_dia(x.nr_prescricao, a.nr_sequencia),1,2) = 'S')))));

									

			if ( qt_exists_w < 1 ) then

				select 	count(*)
					into STRICT  qt_exists_w
				from	nut_atend_serv_dia a,
					nut_atend_serv_dia_rep e,
					prescr_medica b
				where 	a.nr_sequencia    = e.nr_seq_serv_dia
				and	e.nr_prescr_leite_deriv  = b.nr_prescricao
				and	a.nr_sequencia    = nr_sequencia_p
				and	a.dt_servico > clock_timestamp()														
				and	exists (	SELECT 	1
							from  	prescr_medica  x,
								rep_jejum  y,
								cpoe_dieta z
							where 	x.nr_prescricao = y.nr_prescricao
							and  	a.nr_atendimento = x.nr_atendimento
							and   	(x.dt_liberacao_medico IS NOT NULL AND x.dt_liberacao_medico::text <> '')
							and     coalesce(x.dt_ignora_prescr_nut::text, '') = ''
							and	x.dt_inicio_prescr > b.dt_inicio_prescr
							and	x.dt_validade_prescr > clock_timestamp() 
							and 	y.nr_seq_dieta_cpoe = z.nr_sequencia
							and 	coalesce(z.dt_lib_suspensao::text, '') = ''
							and (ie_suspender_dieta_w = 'N' or (ie_suspender_dieta_w = 'S' and (coalesce(x.NR_PRESCRICOES::text, '') = '' or ((x.NR_PRESCRICOES IS NOT NULL AND x.NR_PRESCRICOES::text <> '')
								and substr(obter_se_prescricao_nut_dia(x.nr_prescricao, a.nr_sequencia),1,2) = 'S')))));

			end if;
		end if;
	end if;
					
return qt_exists_w;

end;

begin

if (nr_seq_nut_atend_serv_dia_p IS NOT NULL AND nr_seq_nut_atend_serv_dia_p::text <> '') then

	select	nr_atendimento,
		cd_setor_atendimento,
		nr_seq_servico,
		dt_descarte,
		dt_suspensao,
		dt_bloqueio,
		dt_atend_servico,
		dt_servico,
		substr(nut_obter_se_serv_bloq_Adep(dt_servico,cd_setor_atendimento,nr_atendimento,nr_seq_servico),1,1)
	into STRICT	nr_atendimento_w,
		cd_setor_atendimento_w,
		nr_seq_servico_w,
		dt_descarte_w,
		dt_suspensao_w,
		dt_bloqueio_w,
		dt_atend_servico_w,
		dt_servico_w,
		ie_bloqueio_w
	from  	nut_atend_serv_dia
	where 	nr_sequencia 	= nr_seq_nut_atend_serv_dia_p;
			
	if ( ie_opcao_p = 'P' and ((dt_descarte_w IS NOT NULL AND dt_descarte_w::text <> '') or (dt_suspensao_w IS NOT NULL AND dt_suspensao_w::text <> '')) ) then

		ie_nut_status_w := 'C';

	elsif ( ie_opcao_p = 'P' and ((dt_bloqueio_w IS NOT NULL AND dt_bloqueio_w::text <> '') or ie_bloqueio_w = 'S') ) then

		ie_nut_status_w := 'B';

	elsif ( ie_opcao_p = 'P' and nut_obter_se_tem_jejum(nr_seq_nut_atend_serv_dia_p) = 'S' ) then

		ie_nut_status_w := 'J';

	elsif ( ie_opcao_p = 'P' and (dt_atend_servico_w IS NOT NULL AND dt_atend_servico_w::text <> '') ) then

		ie_nut_status_w := 'E';

	elsif ( ie_opcao_p = 'P' and nut_obter_se_nova_prescricao(nr_seq_nut_atend_serv_dia_p) > 0 ) then

		ie_nut_status_w := 'P';

	else

		begin

			select (	select 	count(*)
					from  	nut_pac_opcao_rec a,
                  				nut_atend_serv_dia b
					where 	a.nr_seq_servico_dia = b.nr_sequencia
              				and   	b.nr_atendimento = nr_atendimento_w
            				and   	a.nr_seq_servico_dia =  nr_seq_nut_atend_serv_dia_p
              				and   	coalesce(a.nr_seq_acompanhante::text, '') = ''
              				and   	b.cd_setor_atendimento  = cd_setor_atendimento_w),

         			(	select 	count(*)
					from  	nut_pac_opcao_rec a,
                    				nut_atend_serv_dia b
					where 	a.nr_seq_servico_dia = b.nr_sequencia
              				and   	b.nr_atendimento = nr_atendimento_w
              				and   	a.nr_seq_servico_dia =  nr_seq_nut_atend_serv_dia_p
              				and   	(a.nr_seq_acompanhante IS NOT NULL AND a.nr_seq_acompanhante::text <> '')
              				and   b.cd_setor_atendimento  = cd_setor_atendimento_w )

			into STRICT  	qt_cardapio_w,
                    		nr_seq_acompanhante_w
			;

			if ( qt_cardapio_w > 0 or nr_seq_acompanhante_w > 0 ) then

				if ( ie_opcao_p = 'P' ) then
					ie_nut_status_w := 'CP';
				elsif ( ie_opcao_p = 'A' and nr_seq_acompanhante_w > 0 ) then
					ie_nut_status_w := 'CA';
				end if;
			end if;

		end;
	end if;
end if;

return ie_nut_status_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_nutricao_status_painel ( nr_seq_nut_atend_serv_dia_p bigint, ie_opcao_p text) FROM PUBLIC;

