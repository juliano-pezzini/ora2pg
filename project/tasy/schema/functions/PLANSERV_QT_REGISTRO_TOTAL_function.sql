-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION planserv_qt_registro_total ( nr_interno_conta_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

 
/* 
ie_opcao_p 
	Q - qt_item 
	M - qt_mat_med_tipo3 
	MA - Quantidade de Materiais utilizada no TSCM 2 
	ME - Quantidade de Medicamentos utilizada no TSCM 2 
	CO - Quantidade de constraste utilizada no TSCM 2 
	OP - Quantidade de orteses e proteses utilizada no TSCM 2 
	SE - Quantiadde de sinteses e especiais utilizada no TSCM 2 
*/
 
			 
qt_retorno_w			bigint;
qt_w					bigint;

c01 CURSOR FOR 
	SELECT 	count(distinct a.cd_item) 
	from	w_interf_conta_item a, 
		w_interf_conta_cab b 
	where	a.nr_interno_conta = b.nr_interno_conta 
	and	a.ie_tipo_item = 2 
	and	a.nr_interno_conta = nr_interno_conta_p 
	group by a.nr_remessa, 
		substr(planserv_obter_parcela_conta(b.CD_PACIENTE, b.NR_INTERNO_CONTA, b.NR_SEQ_PROTOCOLO),1,2), 
		substr(coalesce(a.cd_item_convenio, a.cd_item),1,8), 
		a.ds_item, 
		CASE WHEN a.cd_classif_setor=4 THEN 'S'  ELSE 'N' END , 
		coalesce((SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item),1,1))::numeric ,0), 
		coalesce(a.cd_item_convenio, a.cd_item), 
		substr(CASE WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='1' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='3' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='4' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='2' THEN '2' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='5' THEN '2' END ,1,1), 
		a.nr_seq_protocolo, 
		a.nr_interno_conta 
	having ((sum(a.qt_item) > 0) and (sum(coalesce(a.vl_total_item,0)) > 0));
		
c02 CURSOR FOR	 
	SELECT	count(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item)) 
	from	w_interf_conta_item a, 
		w_interf_conta_cab b 
	where	a.nr_interno_conta = b.nr_interno_conta 
	and	substr(planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item),1,1) is not null 
	and	a.ie_tipo_item = 2 
	and	a.nr_interno_conta = nr_interno_conta_p 
	group by a.nr_seq_protocolo, 
		a.nr_interno_conta, 
		lpad(a.nr_interno_conta,10,0), 
		to_char(b.dt_periodo_final,'ddmmyyyy'), 
		substr(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item),1,8), 
		substr(planserv_obter_agrupamento_mat(a.nr_seq_item,'D',a.ie_tipo_item),1,50), 
		coalesce((substr(planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item),1,1))::numeric ,0) 
	having ((sum(a.qt_item) > 0) and (sum(coalesce(a.vl_total_item,0)) > 0));
		
c03 CURSOR FOR 
	SELECT	1 
	from	w_interf_conta_item a, 
		w_interf_conta_cab b 
	where	a.nr_interno_conta = b.nr_interno_conta 
	and	a.ie_tipo_item = 1 
	and	a.nr_interno_conta = nr_interno_conta_p 
	group by a.nr_remessa, 
		b.nr_interno_conta, 
		substr(planserv_obter_parcela_conta(b.CD_PACIENTE, b.NR_INTERNO_CONTA, b.NR_SEQ_PROTOCOLO),1,2), --OBS 2	 
		substr(coalesce(a.cd_item_convenio, a.cd_item),1,8), 
		a.ds_item, 
		CASE WHEN OBTER_TIPO_ATENDIMENTO(b.nr_atendimento)=3 THEN 'S'  ELSE 'N' END , 
		substr(obter_se_proc_crit_horario(a.nr_seq_item),1,1), 
		to_char(a.dt_item, 'ddmmyyyy'), 
		substr(Obter_Conversao_Externa(b.cd_cgc_convenio,'INTERF_PLANSERV_V','CD_FUNCAO_EXECUTOR',a.cd_funcao_executor),1,1), --OBS 10 
		a.pr_via_acesso, --OBS11 
		a.nr_crm_executor, 
		a.uf_crm_executor, 
		CASE WHEN a.cd_classif_setor=4 THEN 'S'  ELSE 'N' END , --OBS14 
		a.nr_seq_protocolo, 
		a.nr_interno_conta, 
		a.ie_responsavel_credito, 
		a.nr_seq_proc_pacote, 
		a.ie_emite_conta 
		--to_char(a.dt_item, 'ddmmyyyy hh24miss') -- somente para nÃ£o agrupar pela data 
	having ((sum(a.qt_item) > 0) and (sum(coalesce(a.vl_total_item,0)) > 0));
		
c04 CURSOR FOR 
	SELECT	 
		a.nr_remessa NR_REMESSA, 
		LPAD(coalesce((SELECT x.nr_seq_ordem from conta_paciente x where x.nr_interno_conta = a.nr_interno_conta),a.nr_interno_conta),10,0) nr_interno_conta, 
		substr(planserv_obter_parcela_conta(b.CD_PACIENTE, b.NR_INTERNO_CONTA, b.NR_SEQ_PROTOCOLO),1,2) nr_parcela, --OBS 2 
		substr(coalesce(a.cd_item_convenio, a.cd_item),1,8) cd_item, 
		a.ds_item ds_item, 
		sum(a.qt_item) qt_executada, 
		sum(coalesce(a.vl_total_item,0)) vl_item, 
		CASE WHEN a.cd_classif_setor=4 THEN 'S'  ELSE 'N' END  ie_uti, --OBS14 ie_uti, --OBS14 
		coalesce((SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item),1,1))::numeric ,0) ie_tipo_material, --Interface Meio Externo ou criar regra 
		coalesce(a.cd_item_convenio, a.cd_item) cd_tiss, --Criar campo cd_material_tiss na w_interf_conta_item OBS20 
		substr(CASE WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='1' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='3' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='4' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='2' THEN '2' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='5' THEN '2' END ,1,1) tp_codigo_tiss, -- OBS 21 
		a.nr_seq_protocolo, 
		a.nr_interno_conta nr_conta 
	from	w_interf_conta_item a, 
		w_interf_conta_cab b 
	where	a.nr_interno_conta = b.nr_interno_conta 
	and	a.ie_tipo_item = 2 
	and a.nr_interno_conta = nr_interno_conta_p 
	and ((ie_opcao_p = 'MA' and SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item),1,8) = 63130017) 
		or (ie_opcao_p = 'ME' and SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item),1,8) = 63130025) 
		or (ie_opcao_p = 'CO' and SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item),1,8) = 63130033) 
    or (ie_opcao_p = 'OP' and SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item),1,8) = 63130041) 
    or (ie_opcao_p = 'SE' and SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'A',a.ie_tipo_item),1,8) = 63130050)) 
	group by a.nr_remessa, 
		substr(planserv_obter_parcela_conta(b.CD_PACIENTE, b.NR_INTERNO_CONTA, b.NR_SEQ_PROTOCOLO),1,2), 
		substr(coalesce(a.cd_item_convenio, a.cd_item),1,8), 
		a.ds_item, 
		CASE WHEN a.cd_classif_setor=4 THEN 'S'  ELSE 'N' END , 
		coalesce((SUBSTR(planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item),1,1))::numeric ,0), 
		coalesce(a.cd_item_convenio, a.cd_item), 
		substr(CASE WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='1' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='3' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='4' THEN '1' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='2' THEN '2' WHEN planserv_obter_agrupamento_mat(a.nr_seq_item,'I',a.ie_tipo_item)='5' THEN '2' END ,1,1), 
		a.nr_seq_protocolo, 
		a.nr_interno_conta 
	having ((sum(a.qt_item) > 0) and (sum(coalesce(a.vl_total_item,0)) > 0));
	
c04_w			c04%rowtype;


BEGIN 
 
 
if (ie_opcao_p = 'M') then 
	qt_retorno_w 	:= 0;
	qt_w			:= 0;
	 
	open c01;
	loop 
	fetch c01 into	 
		qt_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
		qt_retorno_w := qt_retorno_w + 1;
	end;
	end loop;
	close c01;		
	 
	 
elsif (ie_opcao_p = 'Q') then	 
	qt_retorno_w 	:= 0;
	qt_w			:= 0;
	 
	open c02;
	loop 
	fetch c02 into	 
		qt_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin 
		qt_retorno_w := qt_retorno_w + 1;
	end;
	end loop;
	close c02;
	 
	open c03;
	loop 
	fetch c03 into	 
		qt_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
	begin 
		qt_retorno_w := qt_retorno_w + 1;
	end;
	end loop;
	close c03;
	 
elsif (ie_opcao_p in ('MA', 'ME', 'CO','OP', 'SE')) then	 
	qt_retorno_w 	:= 0;
	qt_w			:= 0;
	 
	open C04;
	loop 
	fetch C04 into	 
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		 
		qt_retorno_w := qt_retorno_w + c04_w.qt_executada;
		 
		end;
	end loop;
	close C04;
	 
end if;
	 
return	qt_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION planserv_qt_registro_total ( nr_interno_conta_p bigint, ie_opcao_p text) FROM PUBLIC;

