-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_qtd_auxiliares ( nr_seq_conta_proc_p bigint) RETURNS varchar AS $body$
DECLARE


nr_auxiliares_w			bigint;
qt_participantes_w		bigint;
ds_retorno_w			varchar(1) := 'S';
cd_guia_referencia_w		varchar(20);
cd_guia_w			varchar(20);
ie_tipo_guia_w			varchar(2);
qt_reg_resumo_w			bigint;
qt_reg_honorario_w		bigint;
nr_seq_conta_referencia_w	bigint;
nr_seq_conta_w			bigint;
cd_auxiliar_resumo_w		bigint;
cd_auxiliar_honorario_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_conta_proc_w		bigint;


BEGIN

/*Obter dados necessários*/

select	a.nr_auxiliares,
	a.cd_procedimento,
	a.ie_origem_proced,
	b.nr_sequencia,
	b.cd_guia_referencia,
	b.cd_guia,
	b.ie_tipo_guia,
	b.nr_seq_conta_referencia,
	b.nr_seq_segurado
into STRICT	nr_auxiliares_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_conta_w,
	cd_guia_referencia_w,
	cd_guia_w,
	ie_tipo_guia_w,
	nr_seq_conta_referencia_w,
	nr_seq_segurado_w
from	pls_conta	b,
	pls_conta_proc	a
where	a.nr_sequencia	= nr_seq_conta_proc_p
and	a.nr_seq_conta	= b.nr_sequencia;

if (coalesce(nr_auxiliares_w,0) > 0) then --Só será consistido se existe número de participantes definidos no procedimento
	/* Verificar quantos participantes existem na guia de Resumo de internação  que não são cooperados e possuem graus de participação como auxiliares*/

	select	count(*)
	into STRICT	qt_reg_resumo_w
	from	pls_conta		c,
		pls_conta_proc		b,
		pls_proc_participante	a
	where	a.nr_seq_conta_proc	= b.nr_sequencia
	and	b.nr_seq_conta 		= c.nr_sequencia
	and	c.cd_guia_referencia	= cd_guia_referencia_w
	and	c.nr_seq_segurado	= nr_seq_segurado_w
	--and	pls_obter_se_cooperado(a.cd_medico,null) = 'N'
	and	pls_obter_se_grau_auxiliar(a.nr_seq_grau_partic) = 'S'
	and	c.ie_tipo_guia = '5';

	/* Obter a quantidade de participantes da conta de honorario */

	select	count(*)
	into STRICT	qt_reg_honorario_w
	from	pls_conta		c,
		pls_conta_proc		b
	where	b.nr_seq_conta		= c.nr_sequencia
	and	pls_obter_se_grau_auxiliar(c.nr_seq_grau_partic) = 'S'
	and	c.cd_guia_referencia	= cd_guia_referencia_w
	and	c.nr_seq_segurado	= nr_seq_segurado_w
	and	c.ie_tipo_guia = '6';

	/* Quantidade total de participantes */

	qt_participantes_w	:= qt_reg_resumo_w + qt_reg_honorario_w;

	if (qt_participantes_w > nr_auxiliares_w)  then

		select	coalesce(max((cd_tiss)::numeric ),0)
		into STRICT	cd_auxiliar_resumo_w
		from	pls_conta_proc		b,
			pls_proc_participante	a,
			pls_grau_participacao	p,
			pls_conta		c
		where	a.nr_seq_conta_proc	= b.nr_sequencia
		and	c.nr_sequencia		= b.nr_seq_conta
		and	a.nr_seq_grau_partic	= p.nr_sequencia
		--and	pls_obter_se_cooperado(a.cd_medico,null) = 'N'
		and	p.ie_auxiliar		= 'S'
		and	c.cd_guia_referencia	= cd_guia_referencia_w
		and	c.nr_seq_segurado	= nr_seq_segurado_w
		and	c.ie_tipo_guia 		= '5';

		select	coalesce(max((cd_tiss)::numeric ),0)
		into STRICT	cd_auxiliar_honorario_w
		from	pls_conta		c,
			pls_conta_proc		b,
			pls_grau_participacao	p
		where	b.nr_seq_conta		= c.nr_sequencia
		and	c.nr_seq_grau_partic	= p.nr_sequencia
		and	p.ie_auxiliar		= 'S'
		and	c.cd_guia_referencia	= cd_guia_referencia_w
		and	c.nr_seq_segurado	= nr_seq_segurado_w
		and	c.ie_tipo_guia 		= '6';

		if (ie_tipo_guia_w = '5') then
			if (cd_auxiliar_resumo_w > cd_auxiliar_honorario_w) then

				select	max(b.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta_proc		b,
					pls_proc_participante	a,
					pls_grau_participacao	p,
					pls_conta		c
				where	a.nr_seq_conta_proc	= b.nr_sequencia
				and	c.nr_sequencia		= b.nr_seq_conta
				and	a.nr_seq_grau_partic	= p.nr_sequencia
				--and	pls_obter_se_cooperado(a.cd_medico,null) = 'N'
				and	p.ie_auxiliar		= 'S'
				and	c.cd_guia_referencia	= cd_guia_referencia_w
				and	c.nr_seq_segurado	= nr_seq_segurado_w
				and	c.ie_tipo_guia 		= '5'
				and	p.cd_tiss		= cd_auxiliar_resumo_w;

				if (coalesce(nr_seq_conta_proc_w,0) = nr_seq_conta_proc_p) then
					ds_retorno_w	:= 'N';
				end if;
			end if;
		elsif (ie_tipo_guia_w = '6') then
			if (cd_auxiliar_honorario_w > cd_auxiliar_resumo_w) then

				/*Verificar se trata da mesma conta, sendo que pode existir mais de uma guia de Hi em um atendimento*/

				select	max(b.nr_sequencia)
				into STRICT	nr_seq_conta_proc_w
				from	pls_conta		c,
					pls_conta_proc		b,
					pls_grau_participacao	p
				where	b.nr_seq_conta		= c.nr_sequencia
				and	c.nr_seq_grau_partic	= p.nr_sequencia
				and	p.ie_auxiliar		= 'S'
				and	c.cd_guia_referencia	= cd_guia_referencia_w
				and	c.nr_seq_segurado	= nr_seq_segurado_w
				and	c.ie_tipo_guia 		= '6'
				and	(p.cd_tiss)::numeric 	= cd_auxiliar_honorario_w;

				if (coalesce(nr_seq_conta_proc_w,0) = nr_seq_conta_proc_p) then
					ds_retorno_w	:= 'N';
				end if;
			end if;
		end if;

	end if;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_qtd_auxiliares ( nr_seq_conta_proc_p bigint) FROM PUBLIC;

