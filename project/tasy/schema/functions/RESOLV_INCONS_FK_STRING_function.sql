-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION resolv_incons_fk_string (INCONSISTENCY_FK_P text, INCONSISTENCY_TYPE_P text, NM_USUARIO_P text) RETURNS varchar AS $body$
DECLARE

    attr_nm_tabela_w                        INTEGRIDADE_ATRIBUTO.nm_tabela%TYPE;
    attr_nm_atributo_ref_ww                 varchar(4000);

    ref_nm_int_ref_w                        INTEGRIDADE_REFERENCIAL.nm_integridade_referencial%TYPE;
    ref_nm_tabela_referencia_ww             INTEGRIDADE_REFERENCIAL.nm_tabela_referencia%TYPE;
    ref_ie_regra_delecao_ww                 varchar(20);
    ref_ds_int_ref_ww                       varchar(4000);
    ref_ie_situacao_ww                      varchar(4000);

    ds_source_table_w                       varchar(4000);
    ds_source_table_fields_w                varchar(4000);
    ds_destination_table_fields_w           varchar(4000);
    ds_cabecalho_sql                        varchar(4000);
    ds_deletes_sql                          varchar(4000);
    ds_int_ref_sql                          varchar(4000);
    ds_int_attr_sql                         varchar(4000);
    ds_alter_table_sql                      varchar(4000);

    --INTEGRIDADE_REFERENCIAL
    c01 CURSOR FOR
        SELECT
            nm_tabela,
            nm_integridade_referencial,
            nm_tabela_referencia,
            dt_atualizacao,
            nm_usuario,
            ie_regra_delecao,
            ds_integridade_referencial,
            ie_criar_alterar,
            ie_situacao,
            dt_criacao
        from INTEGRIDADE_REFERENCIAL
        where nm_integridade_referencial = INCONSISTENCY_FK_P;
    --INTEGRIDADE_ATRIBUTO
    c02 CURSOR FOR
        SELECT
            nm_tabela,
            nm_integridade_referencial,
            nm_atributo,
            ie_sequencia_criacao,
            dt_atualizacao,
            nm_usuario,
            nm_atributo_ref
        from INTEGRIDADE_ATRIBUTO
        where nm_integridade_referencial = INCONSISTENCY_FK_P;
    --INDICE_ATRIBUTO
    c03 CURSOR FOR
        SELECT nm_atributo
        from INDICE_ATRIBUTO
        where nm_tabela = ref_nm_tabela_referencia_ww
        and nm_indice like '%_PK';
BEGIN
    --DELETES
    ds_deletes_sql := 'DELETE from INTEGRIDADE_ATRIBUTO where nm_integridade_referencial = '''||INCONSISTENCY_FK_P||''';'||CHR(10)||
    'DELETE from INTEGRIDADE_REFERENCIAL where nm_integridade_referencial = '''||INCONSISTENCY_FK_P||''';'||CHR(10);

    -- INTEGRIDADE_REFERENCIAL
    for r_c01 in c01
	loop
        ref_nm_tabela_referencia_ww := r_c01.nm_tabela_referencia;
        if (coalesce(r_c01.ds_integridade_referencial::text, '') = '') then
            ref_ds_int_ref_ww := 'null';
        else
            ref_ds_int_ref_ww := ''''||r_c01.ds_integridade_referencial||'''';
        end if;
        if (coalesce(r_c01.ie_situacao::text, '') = '') then
            ref_ie_situacao_ww := 'null';
        else
            ref_ie_situacao_ww := ''''||r_c01.ie_situacao||'''';
        end if;
        if (r_c01.ie_regra_delecao IS NOT NULL AND r_c01.ie_regra_delecao::text <> '') then
            ref_ie_regra_delecao_ww := ' on delete cascade ';
        end if;
        ds_int_ref_sql := ds_int_ref_sql || 'INSERT into INTEGRIDADE_REFERENCIAL  ('||CHR(10)||
        '   NM_TABELA,'||CHR(10)||
        '   NM_INTEGRIDADE_REFERENCIAL,'||CHR(10)||
        '   NM_TABELA_REFERENCIA,'||CHR(10)||
        '   DT_ATUALIZACAO,'||CHR(10)||
        '   NM_USUARIO,'||CHR(10)||
        '   IE_REGRA_DELECAO,'||CHR(10)||
        '   DS_INTEGRIDADE_REFERENCIAL,'||CHR(10)||
        '   IE_CRIAR_ALTERAR,'||CHR(10)||
        '   IE_SITUACAO,' ||CHR(10)||
        '   DT_CRIACAO )'||CHR(10)||
        'values (   '||CHR(10)||
        '   '''||r_c01.nm_tabela||''','||CHR(10)||
        '   '''||ref_nm_int_ref_w||''','||CHR(10)||
        '   '''||r_c01.nm_tabela_referencia||''','||CHR(10)||
        '   to_date('''||to_char(r_c01.dt_atualizacao,'dd/mm/yyyy hh24:mi:ss')||''',''dd/mm/yyyy hh24:mi:ss''),'||CHR(10)||
        '   '''||r_c01.nm_usuario||''','||CHR(10)||
        '   '''||r_c01.ie_regra_delecao||''','||CHR(10)||
        '   '||ref_ds_int_ref_ww||','||CHR(10)||
        '   '''||r_c01.ie_criar_alterar||''','||CHR(10)||
        '   '||ref_ie_situacao_ww||','||CHR(10)||
        '   to_date('''||to_char(r_c01.dt_criacao, 'dd/mm/yyyy hh24:mi:ss')||''',''dd/mm/yyyy hh24:mi:ss''));'||CHR(10);
    end loop;

    --INTEGRIDADE_ATRIBUTO
    for r_c02 in c02
	loop
        ds_SOURCE_TABLE_w := r_c02.nm_tabela;
        if (LENGTH(ds_source_table_fields_w)>2) then
            ds_source_table_fields_w := ds_source_table_fields_w||','||CHR(10);
        end if;
        ds_source_table_fields_w := ds_source_table_fields_w || r_c02.nm_atributo;

        if (coalesce(r_c02.nm_atributo_ref::text, '') = '') then
            attr_nm_atributo_ref_ww := 'null';
        else
            attr_nm_atributo_ref_ww := ''''||r_c02.nm_atributo_ref||'''';
        end if;
        ds_int_attr_sql := ds_int_attr_sql || 'INSERT into INTEGRIDADE_ATRIBUTO  ('||CHR(10)||
        '   NM_TABELA,'||CHR(10)||
        '   NM_INTEGRIDADE_REFERENCIAL,'||CHR(10)||
        '   NM_ATRIBUTO,'||CHR(10)||
        '   IE_SEQUENCIA_CRIACAO,'||CHR(10)||
        '   DT_ATUALIZACAO,'||CHR(10)||
        '   NM_USUARIO,'||CHR(10)||
        '   NM_ATRIBUTO_REF )'||CHR(10)||
        'values ('||CHR(10)||
        '   '''||r_c02.nm_tabela||''','||CHR(10)||
        '   '''||r_c02.nm_integridade_referencial||''','||CHR(10)||
        '   '''||r_c02.nm_atributo||''','||CHR(10)||
        '   '''||r_c02.ie_sequencia_criacao||''','||CHR(10)||
        '   to_date('''||to_char(r_c02.dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss')||''',''dd/mm/yyyy hh24:mi:ss''),'||CHR(10)||
        '   '''||r_c02.nm_usuario||''','||CHR(10)||
        '   '||attr_nm_atributo_ref_ww||');'||CHR(10);
    end loop;

    --CABECALHO
    ds_cabecalho_sql := '----'||ds_source_table_w||'                     '||INCONSISTENCY_FK_P||'            '||NM_USUARIO_P||'         '||INCONSISTENCY_TYPE_P||' '||CHR(10);

    --INDICE_ATRIBUTO
    for r_c03 in c03
	loop
        if (LENGTH(ds_destination_table_fields_w)>2) then
            ds_destination_table_fields_w := ds_destination_table_fields_w||','||CHR(10);
        end if;
        ds_destination_table_fields_w := ds_destination_table_fields_w || r_c03.nm_atributo;
    end loop;

    --ALTER_TABLE
    ds_alter_table_sql := ds_alter_table_sql ||
    'ALTER TABLE '||attr_nm_tabela_w||' drop constraint '||INCONSISTENCY_FK_P||';   '||CHR(10)||
    'Alter Table '||attr_nm_tabela_w||' add ('||CHR(10)||
    '   Constraint '||INCONSISTENCY_FK_P||' Foreign Key ('||CHR(10)||
    '   '||ds_source_table_fields_w ||CHR(10)||
    ') References '||ref_nm_tabela_referencia_ww||'('||CHR(10)||
    '   '||ds_destination_table_fields_w    ||CHR(10)||
    ')'||ref_ie_regra_delecao_ww||');'||CHR(10);

    return ds_cabecalho_sql ||CHR(10)|| ds_deletes_sql ||CHR(10)|| ds_int_ref_sql ||CHR(10)|| ds_int_attr_sql ||CHR(10) ||'commit;'||CHR(10)||CHR(10)|| ds_alter_table_sql;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION resolv_incons_fk_string (INCONSISTENCY_FK_P text, INCONSISTENCY_TYPE_P text, NM_USUARIO_P text) FROM PUBLIC;

