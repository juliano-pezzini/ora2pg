-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_ocorr_recem_nasc ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_recem_nascido_p text, qt_dias_limite_util_p bigint) RETURNS varchar AS $body$
DECLARE


ie_retorno_w		varchar(1)	:= 'N';
ie_recem_nascido_w	varchar(1);
dt_nasc_recem_nascido_w	timestamp;
dt_solicitacao_w	timestamp;
qt_dias_recem_nasc_w	bigint;
nr_seq_requisicao_w     bigint;


BEGIN
if (coalesce(nr_seq_guia_p,0)	<> 0) then
	begin
		select	ie_recem_nascido,
			dt_nasc_recem_nascido,
			dt_solicitacao
		into STRICT	ie_recem_nascido_w,
			dt_nasc_recem_nascido_w,
			dt_solicitacao_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		ie_recem_nascido_w		:= 'N';
		dt_nasc_recem_nascido_w		:= null;
		dt_solicitacao_w		:= null;
	end;
elsif (coalesce(nr_seq_requisicao_p,0)	<> 0) then
	begin
		select	ie_recem_nascido,
			dt_nasc_recem_nascido,
			dt_requisicao
		into STRICT	ie_recem_nascido_w,
			dt_nasc_recem_nascido_w,
			dt_solicitacao_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		ie_recem_nascido_w		:= 'N';
		dt_nasc_recem_nascido_w		:= null;
		dt_solicitacao_w		:= null;
	end;

elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	begin
		select	nr_seq_requisicao
		into STRICT	nr_seq_requisicao_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	exception
	when others then
		nr_seq_requisicao_w	:= null;
	end;

        if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '')    then
        begin
		select	ie_recem_nascido,
                        dt_nasc_recem_nascido,
                        dt_requisicao
		into STRICT	ie_recem_nascido_w,
                        dt_nasc_recem_nascido_w,
                        dt_solicitacao_w
                from	pls_requisicao
                where	nr_sequencia	= nr_seq_requisicao_w;
        exception
	when others then
		ie_recem_nascido_w		:= 'N';
		dt_nasc_recem_nascido_w		:= null;
		dt_solicitacao_w		:= null;
		end;
	end if;
end if;

begin
	select	trunc(clock_timestamp()) - trunc(dt_nasc_recem_nascido_w)
	into STRICT	qt_dias_recem_nasc_w
	;
exception
when others then
	qt_dias_recem_nasc_w	:= 0;
end;

-- Se for uma regra com os campos "Recém nascido" e "Qt dias limite utilização recém nasc" informados
if	((coalesce(ie_recem_nascido_p,'N')	= 'S')	and (coalesce(qt_dias_limite_util_p,0)	> 0)) then
	if (coalesce(ie_recem_nascido_p,'N')	= 'S') and (coalesce(ie_recem_nascido_w,'N')	= 'S') then
		ie_retorno_w	:= 'S';
		--Se o valor informado na regra for maior que "0" e a quantidade de dias limite também for maior que "0",  mas a quantidade de dias limite form menor ou igual ao valor informado na regra, não deve gerar a ocorrência.
		if (coalesce(qt_dias_recem_nasc_w,0)	>= 0) and (coalesce(qt_dias_limite_util_p,0)	> 0) then
			if (qt_dias_recem_nasc_w	<= qt_dias_limite_util_p) then
				ie_retorno_w	:= 'N';
			end if;
		end if;
	end if;
-- Se for uma regra somente com o campo "Recém nascido" informado
elsif	((coalesce(ie_recem_nascido_p,'N')	= 'S')	and (coalesce(qt_dias_limite_util_p,0)	= 0)) then
	if (coalesce(ie_recem_nascido_p,'N')	= 'S') and (coalesce(ie_recem_nascido_w,'N')	= 'S') then
		ie_retorno_w	:= 'S';
	end if;
-- Se for uma regra somente com o campo "Qt dias limite utilização recém nasc" informado
elsif	((coalesce(ie_recem_nascido_p,'N')	= 'N')	and (coalesce(qt_dias_limite_util_p,0)	> 0)) then
	if (coalesce(qt_dias_recem_nasc_w,0)	> qt_dias_limite_util_p) then
		ie_retorno_w	:= 'S';
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_ocorr_recem_nasc ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_recem_nascido_p text, qt_dias_limite_util_p bigint) FROM PUBLIC;

