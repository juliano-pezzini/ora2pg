-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_classific_porte ( cd_procedimento_p pls_conta_proc.cd_procedimento%type, ie_origem_proced_p pls_conta_proc.ie_origem_proced%type, ie_origem_conta_p pls_conta.ie_origem_conta%type, dt_atendimento_conta_p pls_conta_proc_ocor_v.dt_atendimento_conta%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS PLS_GRAU_CLASSIF_ITEM.CD_CLASSIFICACAO%TYPE AS $body$
DECLARE


cd_classific_w	pls_grau_classif_item.cd_classificacao%type;
ie_ocorrencia_w pls_controle_estab.ie_ocorrencia%type := pls_obter_se_controle_estab('GO');

BEGIN

	--Visando otimizar o select que será executado, não utilizando nvl's, foi primeiramente separado a busca pela classificação, pois
	--quando o tipo conta cadastrado na regra de portexprocedimento for intercâmbio, a conta necessamente precisa ter ie_origem_conta=  'A'.
	--Caso tipo conta = operadora,  então ie_origem_conta <> 'A' e se tipo conta = Todos, então não distinguirá por origem da conta.
	if (ie_origem_conta_p = 'A') then

		--utilizando union all com fim vigencia informado e não informado para não fazer o nvl. Também utilizando para não utilizar or
		-- no tipo conta, pois aqui precisa considerar quando tipo conta = 'Intercambio' e obviamente também quando for 'Todos'
		if (ie_ocorrencia_w = 'S') then
			select	max(a.cd_classificacao) cd_classificacao
			into STRICT	cd_classific_w
			from	pls_grau_classif_item a,
				pls_oc_classif_porte b,
				pls_oc_porte_item c
			where	c.nr_seq_classificacao	= b.nr_sequencia
			and   	b.nr_seq_classif_porte 	= a.nr_sequencia
			and   	c.ie_origem_proced 	= ie_origem_proced_p
			and   	c.cd_procedimento 	= cd_procedimento_p
			and	dt_atendimento_conta_p > b.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(b.dt_fim_vigencia,dt_atendimento_conta_p)
			and	dt_atendimento_conta_p > a.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(a.dt_fim_vigencia,dt_atendimento_conta_p)
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	b.ie_tipo_conta in ('I', 'T');
		else
			select	max(a.cd_classificacao) cd_classificacao
			into STRICT	cd_classific_w
			from	pls_grau_classif_item a,
				pls_oc_classif_porte b,
				pls_oc_porte_item c
			where	c.nr_seq_classificacao	= b.nr_sequencia
			and   	b.nr_seq_classif_porte 	= a.nr_sequencia
			and   	c.ie_origem_proced 	= ie_origem_proced_p
			and   	c.cd_procedimento 	= cd_procedimento_p
			and	dt_atendimento_conta_p > b.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(b.dt_fim_vigencia,dt_atendimento_conta_p)
			and	dt_atendimento_conta_p > a.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(a.dt_fim_vigencia,dt_atendimento_conta_p)
			and	b.ie_tipo_conta in ('I', 'T');
		end if;
	else
		--utilizando union all com fim vigencia informado e não informado para não fazer o nvl.Também utilizando para não utilizar or
		-- no tipo conta, pois aqui precisa considerar quando tipo conta = 'Operadora' e obviamente também quando for 'Todos'
		if (ie_ocorrencia_w = 'S') then
			select	max(a.cd_classificacao) cd_classificacao
			into STRICT	cd_classific_w
			from	pls_grau_classif_item a,
				pls_oc_classif_porte b,
				pls_oc_porte_item c
			where	c.nr_seq_classificacao	= b.nr_sequencia
			and   	b.nr_seq_classif_porte 	= a.nr_sequencia
			and   	c.ie_origem_proced 	= ie_origem_proced_p
			and   	c.cd_procedimento 	= cd_procedimento_p
			and	dt_atendimento_conta_p > b.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(a.dt_fim_vigencia, dt_atendimento_conta_p + 1)
			and	dt_atendimento_conta_p > a.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(a.dt_fim_vigencia,dt_atendimento_conta_p + 1)
			and	a.cd_estabelecimento	= cd_estabelecimento_p
			and	b.ie_tipo_conta in ('O', 'T');
		else
			select	max(a.cd_classificacao) cd_classificacao
			into STRICT	cd_classific_w
			from	pls_grau_classif_item a,
				pls_oc_classif_porte b,
				pls_oc_porte_item c
			where	c.nr_seq_classificacao	= b.nr_sequencia
			and   	b.nr_seq_classif_porte 	= a.nr_sequencia
			and   	c.ie_origem_proced 	= ie_origem_proced_p
			and   	c.cd_procedimento 	= cd_procedimento_p
			and	dt_atendimento_conta_p > b.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(a.dt_fim_vigencia, dt_atendimento_conta_p + 1)
			and	dt_atendimento_conta_p > a.dt_inicio_vigencia
			and	dt_atendimento_conta_p < coalesce(a.dt_fim_vigencia,dt_atendimento_conta_p + 1)
			and	b.ie_tipo_conta in ('O', 'T');
		end if;
	end if;

return	cd_classific_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_classific_porte ( cd_procedimento_p pls_conta_proc.cd_procedimento%type, ie_origem_proced_p pls_conta_proc.ie_origem_proced%type, ie_origem_conta_p pls_conta.ie_origem_conta%type, dt_atendimento_conta_p pls_conta_proc_ocor_v.dt_atendimento_conta%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

