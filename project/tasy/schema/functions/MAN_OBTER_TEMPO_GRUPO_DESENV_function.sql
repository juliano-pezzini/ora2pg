-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function man_obter_tempo_grupo_desenv as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION man_obter_tempo_grupo_desenv ( nr_sequencia_p bigint, nr_seq_ordem_p bigint, ie_tipo_p text) RETURNS bigint AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	bigint;
BEGIN
	v_query := 'SELECT * FROM man_obter_tempo_grupo_desenv_atx ( ' || quote_nullable(nr_sequencia_p) || ',' || quote_nullable(nr_seq_ordem_p) || ',' || quote_nullable(ie_tipo_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret bigint);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION man_obter_tempo_grupo_desenv_atx ( nr_sequencia_p bigint, nr_seq_ordem_p bigint, ie_tipo_p text) RETURNS bigint AS $body$
DECLARE


qt_retorno_w				bigint := 0;
dt_atual_w				timestamp;
dt_atual_ww				timestamp;
dt_atualizacao_w			timestamp;
nr_seq_localizacao_w			bigint;
cd_estabelecimento_w			smallint;

/*Legenda
	D - Dias corridos
	M - Minutos corridos
	DC - Dias uteis
	MC - MInutos uteis
*/
BEGIN
/* Data de alteração do grupo */

if (nr_seq_ordem_p > 0)	and (nr_sequencia_p > 0)	then
	select	max(dt_atualizacao)
	into STRICT	dt_atualizacao_w
	from	man_ordem_log_grupo_des
	where	nr_seq_ordem_serv = nr_seq_ordem_p
	and	nr_sequencia = nr_sequencia_p;
end if;

/* Obtem dados da Ordem de Serviço */

select	nr_seq_localizacao,
	coalesce(dt_fim_real,clock_timestamp())
into STRICT	nr_seq_localizacao_w,
	dt_atual_w
from	man_ordem_servico
where	nr_sequencia = nr_seq_ordem_p;

/* Estabelecimento da OS*/

begin
select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	man_localizacao
where	nr_sequencia = nr_seq_localizacao_w;
exception
when others then
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
end;

/* Data do próxima mudança de grupo para calcular a diferença*/

select	min(dt_atualizacao)
into STRICT	dt_atual_ww
from	man_ordem_log_grupo_des
where	nr_seq_ordem_serv = nr_seq_ordem_p
and	dt_atualizacao > dt_atualizacao_w;

/* Se não tiver próximo estágio calcula pela data atual ou pela data de fim da ordem*/

if (coalesce(dt_atual_ww::text, '') = '') then
	dt_atual_ww	:= dt_atual_w;
end if;

if (ie_tipo_p = 'M') then
	qt_retorno_w			:= obter_min_entre_datas(dt_atualizacao_w,dt_atual_ww,1);
elsif (ie_tipo_p = 'D') then
	qt_retorno_w			:= obter_dias_entre_datas(dt_atualizacao_w,dt_atual_ww);
elsif (ie_tipo_p = 'MC') then
	qt_retorno_w			:= man_obter_tempo_com(cd_estabelecimento_w,dt_atualizacao_w,dt_atual_ww,'MC');
elsif (ie_tipo_p = 'DC') then
	qt_retorno_w			:= man_obter_tempo_com(cd_estabelecimento_w,dt_atualizacao_w,dt_atual_ww,'DC');
end if;

return	qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION man_obter_tempo_grupo_desenv ( nr_sequencia_p bigint, nr_seq_ordem_p bigint, ie_tipo_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION man_obter_tempo_grupo_desenv_atx ( nr_sequencia_p bigint, nr_seq_ordem_p bigint, ie_tipo_p text) FROM PUBLIC;

