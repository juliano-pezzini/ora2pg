-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_saldo_lote_fornec ( nr_seq_lote_fornec_p bigint) RETURNS bigint AS $body$
DECLARE


qt_lote_w			bigint;
qt_movimento_w		double precision;
qt_saldo_w		double precision := 0;
qt_saldo_ww		double precision := 0;
qt_movimento_nf_w		double precision;
nr_sequencia_nf_w		bigint;
cd_estabelecimento_w	smallint;
dt_mesano_referencia_w	timestamp;
cd_material_w		integer;
ie_estoque_lote_w		varchar(1);
cd_oper_entr_unitarizacao_w	smallint;
cd_oper_saida_unitarizacao_w	smallint;
nr_seq_mat_lote_nf_w		material_lote_fornec_nf.nr_sequencia%type;


BEGIN

if (coalesce(nr_seq_lote_fornec_p,0) > 0) then
	begin
	select	qt_material,
		nr_sequencia_nf,
		cd_material,
		cd_estabelecimento
	into STRICT	qt_lote_w,
		nr_sequencia_nf_w,
		cd_material_w,
		cd_estabelecimento_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_p;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_mat_lote_nf_w
	from	material_lote_fornec_nf
	where	nr_seq_lote_fornec = nr_seq_lote_fornec_p;
	
	select	coalesce(cd_oper_entr_unitarizacao,0),
		coalesce(cd_oper_saida_unitarizacao,0)		
	into STRICT	cd_oper_entr_unitarizacao_w,
		cd_oper_saida_unitarizacao_w
	from	parametro_estoque
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	
	select	coalesce(max(ie_estoque_lote),'N')
	into STRICT	ie_estoque_lote_w
	from	material_estab
	where	cd_material = cd_material_w
	and	cd_estabelecimento = cd_estabelecimento_w;
	
	if (ie_estoque_lote_w = 'N') and (qt_lote_w > 0)	then
		begin
		select	coalesce(sum(CASE WHEN  a.cd_acao=1 THEN 	CASE WHEN 	b.ie_entrada_saida='E' THEN  a.qt_estoque  ELSE a.qt_estoque * -1 END   ELSE CASE WHEN 	b.ie_entrada_saida='E' THEN  a.qt_estoque * -1  ELSE a.qt_estoque END  END ),0)
		into STRICT	qt_movimento_w
		from	movimento_estoque a,
			operacao_estoque b
		where	a.cd_operacao_estoque = b.cd_operacao_estoque
		and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
		and	a.nr_seq_lote_fornec = nr_seq_lote_fornec_p
		and	b.cd_operacao_estoque <> cd_oper_entr_unitarizacao_w
		and	b.cd_operacao_estoque <> cd_oper_saida_unitarizacao_w;


		if (coalesce(nr_sequencia_nf_w::text, '') = '') then
			qt_saldo_w := coalesce(qt_lote_w,0) + coalesce(qt_movimento_w,0);
		else
			begin
		
			select	coalesce(sum(CASE WHEN  a.cd_acao=1 THEN 	CASE WHEN 	b.ie_entrada_saida='E' THEN  a.qt_estoque  ELSE a.qt_estoque * -1 END   ELSE CASE WHEN 	b.ie_entrada_saida='E' THEN  a.qt_estoque * -1  ELSE a.qt_estoque END  END ),0)
			into STRICT	qt_movimento_nf_w
			from	movimento_estoque a,
				operacao_estoque b
			where	a.cd_operacao_estoque = b.cd_operacao_estoque
			and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
			and	a.ie_origem_documento = 1
			and	a.nr_seq_tab_orig = nr_sequencia_nf_w
			and	a.nr_seq_lote_fornec = nr_seq_lote_fornec_p
			and	b.cd_operacao_estoque <> cd_oper_entr_unitarizacao_w
			and	b.cd_operacao_estoque <> cd_oper_saida_unitarizacao_w;
			
			if (nr_seq_mat_lote_nf_w IS NOT NULL AND nr_seq_mat_lote_nf_w::text <> '') then
				select	coalesce(sum(CASE WHEN  a.cd_acao=1 THEN 	CASE WHEN 	b.ie_entrada_saida='E' THEN  a.qt_estoque  ELSE a.qt_estoque * -1 END   ELSE CASE WHEN 	b.ie_entrada_saida='E' THEN  a.qt_estoque * -1  ELSE a.qt_estoque END  END ),0) + qt_movimento_nf_w
				into STRICT	qt_movimento_nf_w
				from	movimento_estoque a,
					operacao_estoque b,
					material_lote_fornec_nf x
				where	a.cd_operacao_estoque = b.cd_operacao_estoque
				and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
				and	a.ie_origem_documento = 1
				and	a.nr_seq_lote_fornec	= nr_seq_lote_fornec_p
				and	b.cd_operacao_estoque	<> cd_oper_entr_unitarizacao_w
				and	b.cd_operacao_estoque	<> cd_oper_saida_unitarizacao_w
				and	a.nr_seq_tab_orig 	= x.nr_sequencia_nf
				and	x.nr_sequencia_nf	<> nr_sequencia_nf_w
				and	x.nr_seq_lote_fornec	= a.nr_seq_lote_fornec;				
			end if;
			
			qt_movimento_w	:= qt_movimento_w - qt_movimento_nf_w;
			qt_saldo_w := coalesce(qt_lote_w,0) + coalesce(qt_movimento_w,0);
			end;
		end if;
		end;
	else
		begin		
		dt_mesano_referencia_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
		
		select	coalesce(sum(qt_estoque),0)
		into STRICT	qt_saldo_w
		from	saldo_estoque_lote
		where	nr_seq_lote = nr_seq_lote_fornec_p
		and	cd_estabelecimento = cd_estabelecimento_w
		and	dt_mesano_referencia = dt_mesano_referencia_w;
		
		select	coalesce(sum(qt_estoque),0)
		into STRICT	qt_saldo_ww
		from	fornecedor_mat_consig_lote
		where	nr_seq_lote = nr_seq_lote_fornec_p
		and	cd_estabelecimento = cd_estabelecimento_w
		and	dt_mesano_referencia = dt_mesano_referencia_w;
		
		qt_saldo_w := qt_saldo_w + qt_saldo_ww;
		end;
	end if;
	end;
end if;
return	qt_saldo_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_lote_fornec ( nr_seq_lote_fornec_p bigint) FROM PUBLIC;

