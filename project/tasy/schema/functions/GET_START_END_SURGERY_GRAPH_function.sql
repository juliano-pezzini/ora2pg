-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_start_end_surgery_graph (nr_cirurgia_p bigint, nr_seq_pepo_p bigint, si_option_p text, minutes_before_p bigint, minute_duration_p bigint) RETURNS timestamp AS $body$
DECLARE


dt_return_w				timestamp := null;
dt_event_w				timestamp := null;
dt_surgery_w 			timestamp := null;						
nr_seq_event_start_w	bigint;
nr_seq_event_end_w		bigint;
qtMinAntes_w			bigint;
ie_fanep_w				varchar(1) := 'N';
dt_termino_previsto_w	timestamp := null;
							

BEGIN

qtMinAntes_w := obter_param_usuario(872, 118, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, qtMinAntes_w);
nr_seq_event_start_w := obter_param_usuario(872, 179, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, nr_seq_event_start_w);
nr_seq_event_end_w := obter_param_usuario(872, 272, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, nr_seq_event_end_w);

if (coalesce(nr_seq_pepo_p,0) > 0) then
	select	coalesce(max('N'),'S')
	into STRICT		ie_fanep_w
	from		cirurgia
	where		nr_seq_pepo = nr_seq_pepo_p;
end if;	

if (ie_fanep_w = 'N') then
	if (si_option_p = 'START') then
		if (nr_seq_event_start_w > 0) then
			select	min(dt_registro)
			into STRICT		dt_event_w
			from		evento_cirurgia_paciente a
			where		((a.nr_cirurgia			= nr_cirurgia_p AND nr_cirurgia_p > 0) or
						 (a.nr_seq_pepo			= nr_seq_pepo_p AND nr_seq_pepo_p > 0))
			and		nr_seq_evento 				= nr_seq_event_start_w
			and		coalesce(a.ie_situacao,'A') 	= 'A';
			
			if (coalesce(dt_event_w::text, '') = '') and (coalesce(nr_seq_pepo_p,0) = 0) and (coalesce(nr_cirurgia_p,0) > 0) then
				select	min(dt_registro)
				into STRICT		dt_event_w
				from		evento_cirurgia_paciente a,
							cirurgia b,
							pepo_cirurgia c
				where		a.nr_seq_pepo 		= c.nr_sequencia
				and		b.nr_seq_pepo 		= c.nr_sequencia
				and		b.nr_cirurgia 		= nr_cirurgia_p
				and		a.nr_seq_evento 	= nr_seq_event_start_w
				and		coalesce(a.ie_situacao,'A') 	= 'A';
			end if;	
		end if;	
		

		select	min(coalesce(a.dt_inicio_real,dt_inicio_prevista)) - (qtMinAntes_w/1440)
		into STRICT		dt_surgery_w
		from		cirurgia a
		where		((a.nr_cirurgia			= nr_cirurgia_p AND nr_cirurgia_p > 0) or
					 (a.nr_seq_pepo			= nr_seq_pepo_p AND nr_seq_pepo_p > 0))
		and		a.ie_status_cirurgia		<> 3;
		
		if (dt_event_w IS NOT NULL AND dt_event_w::text <> '') and (dt_event_w	< dt_surgery_w) then
					dt_return_w	:= dt_event_w;
		else
					dt_return_w	:= dt_surgery_w;
		end if;
		
	elsif (si_option_p = 'END') then
		if (nr_seq_event_end_w > 0) then
			select	max(dt_registro)
			into STRICT		dt_event_w
			from		evento_cirurgia_paciente a
			where		((a.nr_cirurgia			= nr_cirurgia_p AND nr_cirurgia_p > 0) or
						 (a.nr_seq_pepo			= nr_seq_pepo_p AND nr_seq_pepo_p > 0))
			and		nr_seq_evento 				= nr_seq_event_end_w
			and		coalesce(a.ie_situacao,'A') 	= 'A';
			
			if (coalesce(dt_event_w::text, '') = '') and (coalesce(nr_seq_pepo_p,0) = 0) and (coalesce(nr_cirurgia_p,0) > 0) then
				select	max(dt_registro)
				into STRICT		dt_event_w
				from		evento_cirurgia_paciente a,
							pepo_cirurgia b,
							cirurgia c
				where		a.nr_seq_pepo 			= b.nr_sequencia
				and		c.nr_seq_pepo 			= b.nr_sequencia
				and		c.nr_cirurgia 			= nr_cirurgia_p
				and		a.nr_seq_evento 		= nr_seq_event_end_w
				and		coalesce(a.ie_situacao,'A') 	= 'A';
			end if;	
		end if;	
		

		select	coalesce(max(a.dt_termino),clock_timestamp() + coalesce(minute_duration_p,120)/1440),
				coalesce(max(DT_TERMINO_PREVISTA), clock_timestamp())
		into STRICT	dt_surgery_w,
				dt_termino_previsto_w
		from	cirurgia a
		where	((a.nr_cirurgia			= nr_cirurgia_p AND nr_cirurgia_p > 0) or
				 (a.nr_seq_pepo			= nr_seq_pepo_p AND nr_seq_pepo_p > 0))
		and		a.ie_status_cirurgia		<> 3;

		if (dt_event_w IS NOT NULL AND dt_event_w::text <> '') and (dt_event_w	> dt_surgery_w) then
			dt_return_w	:= dt_event_w + 70/1440;
		elsif (nr_seq_pepo_p > 0) then
			if (dt_termino_previsto_w > clock_timestamp()) then
				dt_return_w := dt_termino_previsto_w;
			else
				dt_return_w := clock_timestamp() + interval '70 days'/1440;
			end if;
		else
			dt_return_w	:= dt_surgery_w;
		end if;
	end if;
else
	if (si_option_p = 'START') then
		select 	coalesce(dt_inicio_proced,dt_cirurgia) - (qtMinAntes_w/1440)
		into STRICT		dt_return_w
		from 		pepo_cirurgia 
		where 	nr_sequencia = nr_seq_pepo_p;
	elsif (si_option_p = 'END') then
		select 	obter_data_final_fanep_graf(nr_seq_pepo_p)
		into STRICT		dt_return_w
		;
	end if;
end if;	

return	dt_return_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_start_end_surgery_graph (nr_cirurgia_p bigint, nr_seq_pepo_p bigint, si_option_p text, minutes_before_p bigint, minute_duration_p bigint) FROM PUBLIC;

