-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hfp_obter_composicao_corporal (nr_sequencia_p bigint, ie_informacao_p text) RETURNS varchar AS $body$
DECLARE


--atributos
qt_idade_w		bigint;
aux_w			double precision; --para arredondar o valor antes de retornar como texto
qt_peso_w		real;
dc_triceps_w		real;
dc_subescapular_w	real;
dc_suprailiaca_w	real;
dc_abdominal_w		real;
qt_altura_cm_w		real;
perc_gordura_w		double precision;
perc_ideal_gordura_w	double precision;
ds_retorno_w		varchar(255);
qt_imc_w		bigint;
ds_imc_w		varchar(255);


BEGIN
ds_retorno_w := '';

--Busca dados para permitir cálculos posteriores
select	obter_idade_pf(c.cd_pessoa_fisica, clock_timestamp(), 'A'),
	a.qt_peso,
	a.dc_tricipes,
	a.dc_subescapular,
	a.dc_suprailiaca,
	a.dc_abdominal,
	a.qt_altura_cm,
	obter_imc(a.qt_peso, a.qt_altura_cm, c.cd_pessoa_fisica)
into STRICT	qt_idade_w,
	qt_peso_w,
	dc_triceps_w,
	dc_subescapular_w,
	dc_suprailiaca_w,
	dc_abdominal_w,
	qt_altura_cm_w,
	qt_imc_w
from	hfp_composicao_corporal a,
	hfp_cinesio_funcional b,
	hfp_paciente c
where	a.nr_seq_aval = b.nr_sequencia
and	b.nr_seq_paciente = c.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

perc_gordura_w := ((dc_triceps_w + dc_subescapular_w + dc_suprailiaca_w + dc_abdominal_w) * 0.153 + 5.783);
perc_ideal_gordura_w := 12 + (qt_idade_w - 30) * 0.2;

if (ie_informacao_p = 'PI') then  	-- PESO IDEAL
	aux_w := (qt_peso_w * (100 - perc_gordura_w) * 0.01)/(1-(perc_ideal_gordura_w) * 0.01);
	ds_retorno_w := aux_w;

elsif (ie_informacao_p = 'PSG') then 	-- PESO GORDURA
	aux_w := (qt_peso_w * perc_gordura_w * 0.01);
	ds_retorno_w := aux_w;

elsif (ie_informacao_p = 'IMC') then	-- IMC
	aux_w := qt_imc_w;
	ds_retorno_w := aux_w;

elsif (ie_informacao_p = 'IMCD') then	-- IMC DESCRIÇÃO
	select	obter_desc_imc(qt_imc_w, qt_idade_w)
	into STRICT	ds_imc_w
	;
	ds_retorno_w := ds_imc_w;

elsif (ie_informacao_p = 'PS') then	-- PESO
	ds_retorno_w := qt_peso_w;

elsif (ie_informacao_p = 'PM') then	-- PESO MAGRO
	aux_w := (qt_peso_w * (100 - perc_gordura_w) * 0.01);
	ds_retorno_w := aux_w;

elsif (ie_informacao_p = 'PG') then	-- PERCENTUAL GORDURA
	aux_w := perc_gordura_w;
	ds_retorno_w := aux_w;

elsif (ie_informacao_p = 'PLG') then	-- PERCENTUAL LIVRE GORDURA
	aux_w := (100 - perc_gordura_w);
	ds_retorno_w := aux_w;

elsif (ie_informacao_p = 'PIG') then	-- PERCENTUAL IDEAL GORDURA
	aux_w := perc_ideal_gordura_w;
	ds_retorno_w := aux_w;

end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hfp_obter_composicao_corporal (nr_sequencia_p bigint, ie_informacao_p text) FROM PUBLIC;

