-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE alert_types AS (alert_types varchar(10)[7]);


CREATE OR REPLACE FUNCTION f_get_patient_smart_alerts (nr_atendimento_p bigint, cd_pessoa_fisica_p text) RETURNS text AS $body$
DECLARE

    array alert_types := alert_types('HR', 'MAP', 'RR', 'O2', 'O2S/RR', 'HR/MAP', 'EWS');

    msg_reativacao      varchar(1000);
    json_alerta         philips_json;
    json_alertas        philips_json_list;
    envio_integracao_bb text;
	exec_w              varchar(300);
	ds_alert_color_w    varchar(100);

    alerta_c CURSOR(ie_tipo_alerta_p text) FOR
    SELECT * FROM (
    SELECT sa.nr_sequencia,
           sa.ie_tipo_alerta,
           sa.ie_severidade,
           CASE
             WHEN(sa.ie_origem = 'T') THEN 1
             WHEN(sa.ie_origem = 'L' AND sa.ie_severidade = 'M') THEN 2
             WHEN(sa.ie_origem = 'L' AND sa.ie_severidade = 'S') THEN 3
           END prioridade,
           sa.dt_alerta
      from smart_alert sa
     where sa.nr_atendimento = nr_atendimento_p
       and sa.cd_pessoa_fisica = cd_pessoa_fisica_p
       AND sa.ie_tipo_alerta = ie_tipo_alerta_p
       and not exists (SELECT 1 FROM smart_alert_reativacao 
                       WHERE nr_atendimento = sa.nr_atendimento 
                       AND ie_tipo_alerta = sa.ie_tipo_alerta 
                       and dt_reativacao >= sa.dt_alerta)
     order by 4 desc, 5 desc
     ) alias5 LIMIT 1;

  reativacao_c CURSOR FOR
    SELECT IE_TIPO_ALERTA, DT_REATIVACAO, clock_timestamp() as DT_ATUAL
      FROM smart_alert_reativacao
     WHERE NR_ATENDIMENTO = nr_atendimento_p
       AND CD_PESSOA_FISICA = cd_pessoa_fisica_p
       AND DT_REATIVACAO > clock_timestamp()
     ORDER BY IE_TIPO_ALERTA;
BEGIN

    json_alerta  := philips_json();
    json_alertas := philips_json_list();

    for i in 1..array.count loop
        for alerta in alerta_c(array(i)) loop

			begin
			exec_w := 'CALL CLINICAL_PANORAMA_MD_PCK.GET_SMART_ALERT_COLOR(:1) INTO :result';
			EXECUTE EXEC_W USING  IN  alerta.ie_severidade,
											OUT ds_alert_color_w;

			exception
			when data_exception THEN
				ds_alert_color_w := 'sentry-smart-alert';
			when others then
				ds_alert_color_w := 'sentry-smart-alert';
			end;

			json_alerta.put('color', ds_alert_color_w);

            json_alerta.put('message', f_format_smart_alert(nr_seq_alerta_p => alerta.NR_SEQUENCIA));
            json_alerta.put('type', alerta.IE_TIPO_ALERTA);
            json_alertas.append(json_alerta.to_json_value());

        end loop;
    end loop;

    FOR reativacao IN reativacao_c LOOP
        json_alerta.put('color', 'sentry-smart-alert-reactivation');
        msg_reativacao := reativacao.ie_tipo_alerta || ': R ';
        if ((reativacao.dt_reativacao - clock_timestamp()) * 24 >= 1) then
            msg_reativacao := msg_reativacao ||
                TO_CHAR(round((reativacao.dt_reativacao - clock_timestamp()) * 24)) ||
                ' Hr.';
        else
            msg_reativacao := msg_reativacao ||
                TO_CHAR(round((reativacao.dt_reativacao - clock_timestamp()) * 24 * 60)) ||
                ' m.';
        end if;
        json_alerta.put('message', msg_reativacao);
        json_alerta.put('type', reativacao.IE_TIPO_ALERTA);
        json_alertas.append(json_alerta.to_json_value());
    END LOOP;

    dbms_lob.createtemporary(envio_integracao_bb, TRUE);
    json_alertas.(envio_integracao_bb);

    RETURN envio_integracao_bb;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION f_get_patient_smart_alerts (nr_atendimento_p bigint, cd_pessoa_fisica_p text) FROM PUBLIC;

