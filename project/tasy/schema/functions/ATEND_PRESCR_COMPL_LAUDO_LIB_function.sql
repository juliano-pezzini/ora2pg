-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION atend_prescr_compl_laudo_lib ( nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

	 
C01 CURSOR FOR 
	SELECT	coalesce(b.nr_seq_proc_compl,0) 
	from	prescr_medica a, 
		prescr_procedimento b 
	where	b.nr_prescricao = a.nr_prescricao 
	and	a.nr_atendimento = nr_atendimento_p;
	
nr_seq_proc_compl_w 		bigint;
ie_laudo_liberado_int_w		varchar(1);
qt_liberado_w 			bigint;
qt_nao_liberado_w 		bigint;
ie_liberado_atual_w		bigint;
qt_prescrito_w			bigint;
qt_coletado_w			bigint;
qt_laudo_w			bigint;
ie_registra_proc_integ_w	lab_parametro.ie_registra_proc_integ%type;


BEGIN 
 
select	coalesce(max(ie_registra_proc_integ), 'N') 
into STRICT	ie_registra_proc_integ_w 
from	lab_parametro 
where	cd_estabelecimento = (SELECT cd_estabelecimento from atendimento_paciente where nr_atendimento = nr_atendimento_p);
 
if (coalesce(ie_registra_proc_integ_w, 'N') = 'N') then 
 
	qt_liberado_w := 0;
	qt_nao_liberado_w := 0;
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_proc_compl_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		ie_liberado_atual_w := 0;
		 
		select	count(nr_sequencia) 
		into STRICT	ie_liberado_atual_w 
		from	prescr_procedimento_compl 
		where	nr_sequencia = nr_seq_proc_compl_w 
		and	ie_laudo_liberado_int = 'S';
		 
		if (coalesce(ie_liberado_atual_w,0) > 0) then 
			qt_liberado_w := qt_liberado_w + 1;
		else 
			qt_nao_liberado_w := qt_nao_liberado_w + 1;
		end if;
		 
		end;
	end loop;
	close C01;
 
	ie_laudo_liberado_int_w := 'N';
 
	if (qt_liberado_w > 0 AND qt_nao_liberado_w > 0) then 
		ie_laudo_liberado_int_w := 'P';
	elsif (qt_liberado_w > 0 AND qt_nao_liberado_w = 0) then 
		ie_laudo_liberado_int_w := 'S';
	end if;
else 
	select	count(b.nr_sequencia) 
	into STRICT	qt_prescrito_w 
	from	prescr_medica a, 
		prescr_procedimento b 
	where	a.nr_prescricao = b.nr_prescricao 
	and	a.nr_atendimento = nr_atendimento_p 
	and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '') 
	and	(b.cd_material_exame IS NOT NULL AND b.cd_material_exame::text <> '') 
	and	b.ie_suspenso = 'N';
	 
	select	count(b.nr_sequencia) 
	into STRICT	qt_liberado_w 
	from	prescr_medica a, 
		prescr_procedimento b 
	where	a.nr_prescricao = b.nr_prescricao 
	and	a.nr_atendimento = nr_atendimento_p 
	and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '') 
	and	(b.cd_material_exame IS NOT NULL AND b.cd_material_exame::text <> '') 
	and	b.ie_suspenso = 'N' 
	and	b.ie_status_atend >= 10;
	 
	select	count(b.nr_sequencia) 
	into STRICT	qt_coletado_w 
	from	prescr_medica a, 
		prescr_procedimento b, 
		prescr_procedimento_compl c 
	where	a.nr_prescricao = b.nr_prescricao 
	and	b.nr_seq_proc_compl = c.nr_sequencia 
	and	a.nr_atendimento = nr_atendimento_p 
	and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '') 
	and	(b.cd_material_exame IS NOT NULL AND b.cd_material_exame::text <> '') 
	and	b.ie_suspenso = 'N' 
	and	c.ie_laudo_liberado_int = 'C';
	 
	select	count(b.nr_sequencia) 
	into STRICT	qt_laudo_w 
	from	prescr_medica a, 
		prescr_procedimento b, 
		prescr_procedimento_compl c 
	where	a.nr_prescricao = b.nr_prescricao 
	and	b.nr_seq_proc_compl = c.nr_sequencia 
	and	a.nr_atendimento = nr_atendimento_p 
	and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '') 
	and	(b.cd_material_exame IS NOT NULL AND b.cd_material_exame::text <> '') 
	and	b.ie_suspenso = 'N' 
	and	c.ie_laudo_liberado_int = 'L';
	 
	-- Domain 8503 
	if (qt_laudo_w > 0) and (qt_laudo_w = qt_prescrito_w) then 
		ie_laudo_liberado_int_w := 'F';
	elsif (qt_laudo_w > 0) then 
		ie_laudo_liberado_int_w := 'L';
	elsif (qt_coletado_w > 0) then 
		ie_laudo_liberado_int_w := 'C';
	elsif (qt_liberado_w > 0) then 
		ie_laudo_liberado_int_w := 'P';
	else	 
		ie_laudo_liberado_int_w := 'N';
	end if;
	 
end if;
	 
return	ie_laudo_liberado_int_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION atend_prescr_compl_laudo_lib ( nr_atendimento_p bigint) FROM PUBLIC;

