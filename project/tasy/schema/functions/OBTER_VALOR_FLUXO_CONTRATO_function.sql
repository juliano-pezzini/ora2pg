-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_valor_fluxo_contrato (cd_estabelecimento_p bigint, nr_seq_contrato_p bigint, cd_conta_financ_p bigint, dt_referencia_p timestamp, ie_periodo_p text, dt_inicial_p timestamp default null) RETURNS bigint AS $body$
DECLARE


ie_tratar_fim_semana_w	varchar(1);
dt_referencia_w		timestamp;
vl_pagto_w		bigint;
dt_primeiro_vencto_w	timestamp;
dt_vencto_util_w	timestamp;		


BEGIN

dt_referencia_w		:= dt_referencia_p;

select	ie_tratar_fim_semana
into STRICT	ie_tratar_fim_semana_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ie_tratar_fim_semana_w = 'S') and (ie_periodo_p = 'D') then
	dt_referencia_w		:= obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_p);
end if;

select	coalesce(sum(vl_pagto),0)
into STRICT	vl_pagto_w
from	contrato_regra_pagto b,
	contrato a
where	a.nr_sequencia		= b.nr_seq_contrato
and	a.ie_situacao		= 'A'
and	coalesce(PKG_DATE_UTILS.start_of(dt_inicio_vigencia,'dd',0), pkg_date_utils.get_date(1900, 1, 1, 0))	<= CASE WHEN ie_periodo_p='D' THEN  dt_referencia_w  ELSE PKG_DATE_UTILS.end_of(dt_referencia_w, 'MONTH', 0) END
and	coalesce(PKG_DATE_UTILS.start_of(dt_final_vigencia,'dd',0),  pkg_date_utils.get_date(2099, 1, 1, 0))	>= CASE WHEN ie_periodo_p='D' THEN  dt_referencia_w  ELSE PKG_DATE_UTILS.start_of(dt_referencia_w,'MONTH', 0) END 
and	((obter_se_contrato_data(nr_seq_contrato_p,dt_referencia_p,ie_periodo_p,b.nr_sequencia,coalesce(dt_inicial_p,dt_referencia_p)) = 'S') or (ie_forma = 'F'))
and	(
	 (b.dt_primeiro_vencto between coalesce(b.dt_inicio_vigencia,b.dt_primeiro_vencto) and coalesce(b.dt_final_vigencia,b.dt_primeiro_vencto)) or
	 (ie_forma = 'F' AND b.dt_primeiro_vencto = dt_referencia_p)
	)
and	ie_forma		in ('M', 'T', 'F')
and	coalesce(vl_pagto,0)		> 0
and	ie_tipo_valor		= 'V'
and	cd_conta_financ		= cd_conta_financ_p
and	b.nr_seq_contrato	= nr_seq_contrato_p
and	cd_estabelecimento	= cd_estabelecimento_p
and	not exists (SELECT	1
	from		nota_fiscal y,
			nota_fiscal_item x
	where		x.nr_sequencia		= y.nr_sequencia
	and		x.nr_contrato			= a.nr_sequencia
	and		(y.dt_atualizacao_estoque IS NOT NULL AND y.dt_atualizacao_estoque::text <> '')
	and		PKG_DATE_UTILS.start_of(y.dt_atualizacao_estoque,'MONTH', 0) = PKG_DATE_UTILS.start_of(dt_referencia_p, 'MONTH', 0));

/* Francisco - 29/03/07 - Esse tratamento teve de ser feito para os casos onde o vencimento era jogado para o mes seguinte,
 ocasionando o pagamento do contrato 2 vezes no mesmo mes */
if (ie_periodo_p = 'M') and (ie_tratar_fim_semana_w = 'S') then

	select	min(dt_primeiro_vencto)
	into STRICT	dt_primeiro_vencto_w
	from	contrato_regra_pagto
	where	nr_seq_contrato	= nr_seq_contrato_p;

	/* Obtem a proxima data util ao vencimento do contrato no mes anterior a data de referencia,
	   se a data nao for valida (nao existir o dia no mes), busca a proxima data util para o ultimo dia daquele mes */
	begin
	dt_vencto_util_w	:= obter_proximo_dia_util(cd_estabelecimento_p,
				PKG_DATE_UTILS.GET_DATE(PKG_DATE_UTILS.extract_field('DAY', dt_primeiro_vencto_w),
					PKG_DATE_UTILS.ADD_MONTH(dt_referencia_p,-1, 0) ) );
	exception
		when others then
		dt_referencia_w	:= obter_proximo_dia_util(cd_estabelecimento_p,PKG_DATE_UTILS.end_of(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_p,-1,0), 'MONTH', 0)); 	
	end;

	/* Se a data util que gerou passar para o mes de referencia, o valor do contrato entrara 2 vezes para aquele mes */

	if 	(ie_periodo_p	 = 'D' AND dt_vencto_util_w = dt_referencia_p) or
		((ie_periodo_p	 = 'M') and (PKG_DATE_UTILS.start_of(dt_vencto_util_w,'MONTH', 0) = PKG_DATE_UTILS.start_of(dt_referencia_p,'MONTH', 0))) then
		vl_pagto_w	:= vl_pagto_w * 2;
	end if;			

end if;

return	vl_pagto_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_valor_fluxo_contrato (cd_estabelecimento_p bigint, nr_seq_contrato_p bigint, cd_conta_financ_p bigint, dt_referencia_p timestamp, ie_periodo_p text, dt_inicial_p timestamp default null) FROM PUBLIC;

