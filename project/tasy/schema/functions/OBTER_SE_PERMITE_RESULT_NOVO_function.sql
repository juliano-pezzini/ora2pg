-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_se_permite_result_novo as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_se_permite_result_novo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_convenio_p text default null, ie_tipo_atendimento_p text default null) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_se_permite_result_novo_atx ( ' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(nr_seq_prescr_p) || ',' || quote_nullable(nr_seq_exame_p) || ',' || quote_nullable(cd_perfil_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_convenio_p) || ',' || quote_nullable(ie_tipo_atendimento_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_se_permite_result_novo_atx ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_convenio_p text default null, ie_tipo_atendimento_p text default null) RETURNS varchar AS $body$
DECLARE

 
ie_restricao_w		varchar(1);
ie_tipo_atendimento_w	smallint;
cd_medico_w		varchar(10);
cd_pessoa_usuario_w	varchar(10);
cd_convenio_w		bigint;
ie_restricao_regra_w	varchar(1);
nr_seq_grupo_w		bigint;
contador_valor_w	bigint;
nr_seq_result_w		bigint;
contador_lib_w		bigint;
ds_resultado_w		varchar(255);
cont_valor_w		bigint;
cd_setor_atendimento_w	bigint;
BEGIN
 
if (ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') then 
 
	ie_tipo_atendimento_w	:= ie_tipo_atendimento_p;
 
else 
	select 	max(ie_tipo_atendimento) 
	into STRICT	ie_tipo_atendimento_w 
	from	atendimento_paciente 
	where 	nr_atendimento = nr_atendimento_p;
end if;
 
select 	max(ie_restricao), 
	max(nr_seq_grupo) 
into STRICT 	ie_restricao_w, 
	nr_seq_grupo_w 
from 	exame_laboratorio 
where 	nr_seq_exame = nr_seq_exame_p;
 
 
if (ie_restricao_w = 'S') then 
	 
	select	max(cd_setor_atendimento) 
	into STRICT	cd_setor_atendimento_w 
	from	prescr_procedimento 
	where	nr_seq_exame = nr_seq_exame_p 
	and	nr_prescricao = nr_prescricao_p 
	and	nr_sequencia = nr_seq_prescr_p;
	 
	 
	select	count(*) 
	into STRICT	contador_valor_w 
	from	exame_lab_valor 
	where	nr_seq_exame = nr_seq_exame_p 
	and	coalesce(ie_restr_regra_lib,'N') = 'S';
	 
	select	count(*) 
	into STRICT	contador_lib_w 
	from	exame_lab_liberacao 
	where	nr_seq_exame = nr_seq_exame_p 
	and	coalesce(ie_considera_resultado,'N') = 'S';
	 
	if	((contador_valor_w = 0) or (contador_lib_w = 0)) then 
	 
		cd_pessoa_usuario_w := obter_pessoa_fisica_usuario(nm_usuario_p,'C');
		 
		select	max(cd_medico) 
		into STRICT	cd_medico_w 
		from	prescr_medica 
		where	nr_prescricao	= nr_prescricao_p;
 
		select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
		into STRICT 	ie_restricao_w 
		from 	exame_lab_liberacao 
		where 	nr_seq_exame 		= nr_seq_exame_p 
		and (coalesce(coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w),0) = coalesce(ie_tipo_atendimento_w,0)) 
		and 	((cd_perfil		 = cd_perfil_p) 	or (upper(nm_usuario_lib)	 = upper(nm_usuario_p))) 
		and	((coalesce(ie_regra_medico,'N')	= 'N')	or (cd_pessoa_usuario_w	= cd_medico_w)) 
		and (coalesce(coalesce(cd_setor_atendimento,cd_setor_atendimento_w),0) = coalesce(cd_setor_atendimento_w,0));
 
	else 
	 
		select 	max(nr_seq_resultado) 
		into STRICT	nr_seq_result_w 
		from	exame_lab_resultado 
		where	nr_prescricao = nr_prescricao_p;
	 
		select	max(substr(ds_resultado,1,255)) 
		into STRICT	ds_resultado_w 
		from 	exame_lab_result_item a 
		where	nr_seq_resultado = nr_seq_result_w 
		and	nr_seq_exame = nr_seq_exame_p 
		and	nr_seq_prescr = nr_seq_prescr_p;
		 
		select	count(*) 
		into STRICT	cont_valor_w 
		from	exame_lab_valor 
		where	ds_valor = ds_resultado_w 
		and	coalesce(ie_restr_regra_lib,'N') = 'S';
	 
		 
		if (cont_valor_w > 0) then /*quando o resultado Ã© o mesmo da regra valor*/
 
			 
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
			into STRICT 	ie_restricao_w 
			from 	exame_lab_liberacao 
			where 	nr_seq_exame = nr_seq_exame_p 
			and (coalesce(coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w),0) = coalesce(ie_tipo_atendimento_w,0)) 
			and 	((cd_perfil = cd_perfil_p) or (upper(nm_usuario_lib) = upper(nm_usuario_p))) 
			and	((coalesce(ie_regra_medico,'N') = 'N') or (cd_pessoa_usuario_w = cd_medico_w)) 
			and	coalesce(ie_considera_resultado,'N') = 'S' 
			and (coalesce(coalesce(cd_setor_atendimento,cd_setor_atendimento_w),0) = coalesce(cd_setor_atendimento_w,0));
		 
		else 
			 
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
			into STRICT 	ie_restricao_w 
			from 	exame_lab_liberacao 
			where 	nr_seq_exame = nr_seq_exame_p 
			and (coalesce(coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w),0) = coalesce(ie_tipo_atendimento_w,0)) 
			and 	((cd_perfil = cd_perfil_p) or (upper(nm_usuario_lib) = upper(nm_usuario_p))) 
			and	((coalesce(ie_regra_medico,'N') = 'N') or (cd_pessoa_usuario_w = cd_medico_w)) 
			and	coalesce(ie_considera_resultado,'N') = 'N' 
			and (coalesce(coalesce(cd_setor_atendimento,cd_setor_atendimento_w),0) = coalesce(cd_setor_atendimento_w,0));
			 
		end if;
		 
	end if;
	 
end if;
 
/* 
select 	decode(ie_restricao_w, 'S', 'N', 'S') 
into 	ie_restricao_w 
from 	dual; 
*/
 
 
if (ie_restricao_w	= 'S') then 
	ie_restricao_w	:= 'N';
else 
	ie_restricao_w	:= 'S';
end if;
 
 
if (ie_restricao_w = 'S') then 
 
	if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') then 
		cd_convenio_w	:= cd_convenio_p;
	else 
		cd_convenio_w	:= obter_convenio_atendimento(nr_atendimento_p);	
	end if;
	 
	ie_restricao_w := obter_se_regra_visual_exame( cd_perfil_p , cd_convenio_w , nr_seq_exame_p , nr_seq_grupo_w, ie_tipo_atendimento_w);
 
end if;
 
 
commit;
 
return ie_restricao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_permite_result_novo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_convenio_p text default null, ie_tipo_atendimento_p text default null) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_se_permite_result_novo_atx ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_exame_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_convenio_p text default null, ie_tipo_atendimento_p text default null) FROM PUBLIC;

