-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qtd_anexo_aud ( nr_seq_analise_p pls_auditoria.nr_sequencia%type, nr_seq_requisicao_p pls_auditoria.nr_sequencia%type, nr_seq_guia_p pls_auditoria.nr_sequencia%type, nr_seq_execucao_p pls_auditoria.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Identificar se existe anexo na análise (OPS - Gestão de Análise de Autorizações)
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_anexo_w		bigint;
qt_anexo_aud_w		bigint;
qt_anexo_aud_ww		bigint;
qt_anexo_req_w		bigint;
qt_anexo_guia_w		bigint;
qt_anexo_exec_w		bigint;
ds_retorno_w		varchar(1);

BEGIN

select	count(1)
into STRICT	qt_anexo_req_w
from	pls_requisicao_anexo
where	nr_seq_requisicao =	nr_seq_requisicao_p;

select	count(1)
into STRICT	qt_anexo_guia_w
from	pls_guia_plano_anexo
where	nr_seq_guia =	nr_seq_guia_p;

select	count(1)
into STRICT	qt_anexo_exec_w
from	pls_requisicao_anexo
where	nr_seq_requisicao =	(SELECT	max(nr_seq_requisicao)	nr_seq_requisicao
				from	pls_execucao_requisicao
				where	nr_sequencia = nr_seq_execucao_p);

select	count(1)
into STRICT	qt_anexo_aud_w
from	pls_auditoria_anexo
where	nr_seq_auditoria = nr_seq_analise_p;

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	count(1)
	into STRICT	qt_anexo_aud_ww
	from	pls_auditoria_anexo a
	where	nr_seq_auditoria <> nr_seq_analise_p
	and	exists (SELECT	1
			from	pls_auditoria	x
			where	x.nr_sequencia	= a.nr_seq_auditoria
			and	x.nr_seq_requisicao	= nr_seq_requisicao_p);
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	count(1)
	into STRICT	qt_anexo_aud_ww
	from	pls_auditoria_anexo a
	where	nr_seq_auditoria <> nr_seq_analise_p
	and	exists (SELECT	1
			from	pls_auditoria	x
			where	x.nr_sequencia	= a.nr_seq_auditoria
			and	x.nr_seq_guia	= nr_seq_guia_p);

else
	select	count(1)
	into STRICT	qt_anexo_aud_ww
	from	pls_auditoria_anexo a
	where	nr_seq_auditoria <> nr_seq_analise_p
	and	exists (SELECT	1
			from	pls_auditoria	x
			where	x.nr_sequencia	= a.nr_seq_auditoria
			and	x.nr_seq_execucao = nr_seq_execucao_p);
end if;



qt_anexo_aud_w := qt_anexo_aud_w + qt_anexo_aud_ww;

qt_anexo_w := qt_anexo_req_w + qt_anexo_guia_w + qt_anexo_exec_w + qt_anexo_aud_w;

if (qt_anexo_w > 0)  then
	ds_retorno_w := 'S';
else
	ds_retorno_w := 'N';
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qtd_anexo_aud ( nr_seq_analise_p pls_auditoria.nr_sequencia%type, nr_seq_requisicao_p pls_auditoria.nr_sequencia%type, nr_seq_guia_p pls_auditoria.nr_sequencia%type, nr_seq_execucao_p pls_auditoria.nr_sequencia%type) FROM PUBLIC;

