-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function l10nger_integrar_adt_orm as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION l10nger_integrar_adt_orm ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_episodio_p bigint) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM l10nger_integrar_adt_orm_atx ( ' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(nr_prescricao_p) || ',' || quote_nullable(nr_seq_episodio_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION l10nger_integrar_adt_orm_atx ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_episodio_p bigint) RETURNS varchar AS $body$
DECLARE


ie_integrar_w			varchar(1)	:=	'S';
cd_pessoa_fisica_externo_w		pf_codigo_externo.cd_pessoa_fisica_externo%type;

nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;
nr_episodio_w			episodio_paciente.nr_episodio%type;
ie_msg_hl7_case_ext_w   parametro_atendimento.ie_msg_hl7_case_ext%TYPE;
BEGIN
	BEGIN
        SELECT  coalesce(max(ie_msg_hl7_case_ext), 'N') ie_msg_hl7_case_ext
        INTO STRICT    ie_msg_hl7_case_ext_w
        FROM    parametro_atendimento
        WHERE   cd_estabelecimento = obter_estabelecimento_ativo();
    END;

if (coalesce(cd_pessoa_fisica_p,'null') <> 'null') then
	begin
	select	'S',
		cd_pessoa_fisica_externo
	into STRICT	ie_integrar_w,
		cd_pessoa_fisica_externo_w
	from	pf_codigo_externo
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_codigo_externo = 'ISH'
        and     coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento  LIMIT 1;
	exception
	when others then
		ie_integrar_w	:=	'N';
	end;
end if;

if (nr_seq_episodio_p IS NOT NULL AND nr_seq_episodio_p::text <> '') then
	nr_seq_episodio_w	:=	nr_seq_episodio_p;
elsif (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	begin
	select	nr_seq_episodio
	into STRICT	nr_seq_episodio_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	exception
	when others then
		nr_seq_episodio_w	:=	null;
	end;
elsif (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	begin
	select	b.nr_seq_episodio
	into STRICT	nr_seq_episodio_w
	from	prescr_medica a,
		atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	a.nr_prescricao = nr_prescricao_p;
	exception
	when others then
		nr_seq_episodio_w	:=	null;
	end;
end if;

if (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	begin
	select	ie_integrar_w,
		nr_episodio
	into STRICT	ie_integrar_w,
		nr_episodio_w
	from	episodio_paciente
	where	nr_sequencia = nr_seq_episodio_w;
	exception
	when others then
		ie_integrar_w	:=	'N';
	end;

	IF(ie_msg_hl7_case_ext_w = 'S' AND nr_episodio_w IS NOT NULL AND nr_episodio_w::text <> '')THEN
        ie_integrar_w := 'S';
    ELSIF (ie_msg_hl7_case_ext_w = 'N') THEN
        ie_integrar_w := 'S';
    ELSE
        ie_integrar_w := 'N';
    END IF;
end if;

if (ie_integrar_w = 'N') then
	CALL gravar_log_tasy(43,
		'CD_PESSOA_FISICA=' || cd_pessoa_fisica_p || '#' || chr(13) || chr(10) ||
		'NR_ATENDIMENTO=' || nr_atendimento_p || '#' || chr(13) || chr(10) ||
		'NR_PRESCRICAO=' || nr_prescricao_p || '#' || chr(13) || chr(10) ||
		'NR_SEQ_EPISODIO=' || nr_seq_episodio_w || '#' || chr(13) || chr(10) ||
		'CD_PF_EXTERNO=' || cd_pessoa_fisica_externo_w || '#' || chr(13) || chr(10) ||
		'NR_EPISODIO=' || nr_episodio_w || '#',
		'L10NGerHL7');

	commit;
end if;

return	ie_integrar_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION l10nger_integrar_adt_orm ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_episodio_p bigint) FROM PUBLIC; -- REVOKE ALL ON FUNCTION l10nger_integrar_adt_orm_atx ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_episodio_p bigint) FROM PUBLIC;

