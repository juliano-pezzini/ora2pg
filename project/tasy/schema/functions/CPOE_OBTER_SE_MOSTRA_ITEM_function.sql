-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_se_mostra_item (ie_item_prescr_p text, cd_material_p bigint, cd_unid_medida_solic_p text, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint default null, cd_pf_paciente_p text default null, nr_atendimento_p bigint default null, nm_usuario_p text default null) RETURNS varchar AS $body$
DECLARE


	ie_retorno_w			varchar(1) := 'S';
	i_cont_w                integer := 0;
	cd_grupo_material_w		smallint;
	cd_subgrupo_material_w	smallint;
	cd_classe_material_w	integer;
	nr_seq_familia_w		bigint;
	ie_tipo_material_w		varchar(3);
	ds_itens_w				varchar(255);
	ds_itens_sub_w			varchar(255)	:= null;
	ds_sql_cursor_w			varchar(4000);
	ds_sql_count_w			varchar(2000);
	user_exception_found_w	varchar(1);
	patient_exception_found_w	varchar(1);
	qt_exception_patient_w	bigint;
	qt_exception_user_w		bigint;
	qt_exception_rule_w		bigint;
	si_is_exception_w		varchar(1)	:= 'N';
	ds_comando_w			varchar(255);
	cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
	nr_seq_rep_regra_material_w	rep_regra_material.nr_sequencia%type;
	
	
	cCursor REFCURSOR;

	c01 CURSOR FOR
	  SELECT	a.nr_sequencia,
				coalesce(a.ie_exibir, 'S') ie_exibir
	  from	  	rep_regra_material a 
	  where (a.ie_item_prescr in (SELECT NR_REGISTRO from table(lista_pck.obter_lista(ds_itens_w))) or ds_itens_w = '')
	  and	    coalesce(a.cd_material, coalesce(cd_material_p, 0)) = coalesce(cd_material_p, 0)
	  and	    coalesce(a.cd_grupo_material, coalesce(cd_grupo_material_w,0)) = coalesce(cd_grupo_material_w, 0)
	  and	    coalesce(a.cd_subgrupo_material, coalesce(cd_subgrupo_material_w,0)) = coalesce(cd_subgrupo_material_w, 0)
	  and	    coalesce(a.cd_classe_material, coalesce(cd_classe_material_w,0)) = coalesce(cd_classe_material_w, 0)
	  and	    coalesce(a.nr_seq_familia, coalesce(nr_seq_familia_w,0)) = coalesce(nr_seq_familia_w, 0)
	  and	    coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0)) = coalesce(cd_setor_atendimento_p, 0)
	  and	    coalesce(a.cd_perfil, coalesce(obter_perfil_ativo, 0)) = coalesce(obter_perfil_ativo, 0)
	  and	    coalesce(a.ie_tipo_material, coalesce(ie_tipo_material_w, '0')) = coalesce(ie_tipo_material_w, '0')
	  and	    coalesce(a.cd_unidade_medida_solic, coalesce(cd_unid_medida_solic_p, 'XPTO')) = coalesce(cd_unid_medida_solic_p, 'XPTO')
	  order by  coalesce(a.cd_material, 0),
				coalesce(a.ie_tipo_material, '0'),
				coalesce(a.cd_grupo_material, 0),
				coalesce(a.cd_subgrupo_material, 0),
				coalesce(a.cd_classe_material, 0),
				coalesce(a.nr_seq_familia, 0),
				coalesce(a.cd_setor_atendimento, 0),
				coalesce(a.cd_perfil, 0);
				
	c_exception_rule CURSOR FOR
		SELECT	x.nr_sequencia
		from	material_temp_standard x
		where	clock_timestamp() between coalesce(x.dt_start,clock_timestamp()) and coalesce(x.dt_end,clock_timestamp())
		and		x.nr_seq_rep_regra_material = nr_seq_rep_regra_material_w;

BEGIN
	ds_itens_w := '';
	if (ie_item_prescr_p IS NOT NULL AND ie_item_prescr_p::text <> '' AND cd_material_p IS NOT NULL AND cd_material_p::text <> '') then

		if (ie_item_prescr_p = 'M') then
			ds_itens_w := '1,4,13';
		elsif (ie_item_prescr_p = 'DE') then
			ds_itens_w := '8';
		elsif (ie_item_prescr_p = 'MA') then
			ds_itens_w := '2,13';
		elsif (ie_item_prescr_p = 'S') then
			ds_itens_w := '12';
		else
			ds_itens_w	:= ie_item_prescr_p;
		end if;
		
		if (substr(ds_itens_w, length(ds_itens_w)) = ',') then
			ds_itens_w := substr(ds_itens_w,1, length(ds_itens_w)-1);
		end if;
		
		ds_comando_w := 'select count(*) from rep_regra_material a where a.ie_item_prescr in ( ' || ds_itens_w || ')';
		
		begin
			EXECUTE ds_comando_w into STRICT i_cont_w;
		exception when others then
			select	count(*) cnt
			into STRICT   	i_cont_w
			from	rep_regra_material a
			where	obter_se_contido(a.ie_item_prescr, ds_itens_w) = 'S';
		end;
		
		if (i_cont_w > 0) then
			select	max(cd_grupo_material),
					max(cd_subgrupo_material),
					max(cd_classe_material),
					max(nr_seq_familia),
					max(ie_tipo_material)
			into STRICT	cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					nr_seq_familia_w,
					ie_tipo_material_w
			from	estrutura_material_v
			where	cd_material	= cd_material_p;
			
			if (cd_pf_paciente_p IS NOT NULL AND cd_pf_paciente_p::text <> '') then
				begin
					cd_pessoa_fisica_w := cd_pf_paciente_p;
				end;
			elsif (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
				begin
					select	max(cd_pessoa_fisica)
					into STRICT	cd_pessoa_fisica_w
					from	atendimento_paciente
					where	nr_atendimento = nr_atendimento_p;
				end;
			end if;
		
			for row_c01_w in c01
			loop
			
				/*verify exception rules */

				nr_seq_rep_regra_material_w	:= row_c01_w.nr_sequencia;
				si_is_exception_w	:= 'N';
				for row_c_exception_rule in c_exception_rule loop
				
					select	count(1)
					into STRICT	qt_exception_user_w
					from	mat_tempor_stand_user y
					where	y.nr_seq_rule = row_c_exception_rule.nr_sequencia;
					
					select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'Y' END
					into STRICT	user_exception_found_w
					FROM mat_tempor_stand_user y, usuario u
LEFT OUTER JOIN medico_especialidade me ON (u.cd_pessoa_fisica = me.cd_pessoa_fisica)
WHERE y.nr_seq_rule  = row_c_exception_rule.nr_sequencia and u.nm_usuario = nm_usuario_p  and clock_timestamp() between coalesce(y.dt_start,clock_timestamp()) and coalesce(y.dt_end,clock_timestamp()) and (me.cd_especialidade = y.cd_especialidade_medica or coalesce(y.cd_especialidade_medica::text, '') = '') and (u.nm_usuario = y.nm_usuario_ref or coalesce(y.nm_usuario_ref::text, '') = '');
					
					select	count(1)
					into STRICT	qt_exception_patient_w
					from	mat_tempor_stand_patient y
					where	y.nr_seq_rule = row_c_exception_rule.nr_sequencia;
					
					select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'Y' END
					into STRICT	patient_exception_found_w
					FROM mat_tempor_stand_patient y
LEFT OUTER JOIN pac_grupo_atend pg ON (y.nr_seq_pac_grupo = pg.nr_seq_grupo)
WHERE y.nr_seq_rule  = row_c_exception_rule.nr_sequencia and clock_timestamp() between coalesce(y.dt_start,clock_timestamp()) and coalesce(y.dt_end,clock_timestamp()) and clock_timestamp() between coalesce(pg.dt_entrada,clock_timestamp()) and coalesce(pg.dt_saida,clock_timestamp()) and coalesce(pg.ie_situacao,'A') = 'A'  and (pg.cd_pessoa_fisica = cd_pessoa_fisica_w or coalesce(y.nr_seq_pac_grupo::text, '') = '') and (cd_pessoa_fisica_w = y.cd_pessoa_fisica or coalesce(y.cd_pessoa_fisica::text, '') = '');
					
					
					if (qt_exception_user_w > 0 and qt_exception_patient_w > 0) and (user_exception_found_w = 'Y' and patient_exception_found_w = 'Y') then
						si_is_exception_w	:= 'Y';
					elsif (qt_exception_user_w > 0 and qt_exception_patient_w = 0) and (user_exception_found_w = 'Y') then
						si_is_exception_w	:= 'Y';
					elsif (qt_exception_patient_w > 0 and qt_exception_user_w = 0) and (patient_exception_found_w = 'Y') then
						si_is_exception_w	:= 'Y';
					end if;
					
				end loop;
	
				
				if (si_is_exception_w	= 'N') then
					ie_retorno_w := row_c01_w.ie_exibir;
				end if;
			end loop;
		end if;
	end if;
	return ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_se_mostra_item (ie_item_prescr_p text, cd_material_p bigint, cd_unid_medida_solic_p text, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint default null, cd_pf_paciente_p text default null, nr_atendimento_p bigint default null, nm_usuario_p text default null) FROM PUBLIC;

