-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_ocorrencia_cpt ( nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, ie_validacao_cpt_p bigint, nr_seq_requisicao_proc_p pls_requisicao_proc.nr_sequencia%type, nr_seq_exec_item_p pls_execucao_req_item.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
ie_origem_proced_ww		procedimento.ie_origem_proced%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
nr_seq_tipo_acomodacao_w	bigint;
ie_tipo_guia_w			varchar(1);
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
dt_inicio_vigencia_w		timestamp;
dt_carencia_w			timestamp;
dt_inclusao_operadora_w		timestamp;
dt_solicitacao_w		timestamp;
nr_seq_carencia_proc_w		pls_carencia_proc.nr_sequencia%type;
ie_liberado_w			varchar(2);
qt_dias_w			bigint;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
cd_cid_regra_w			varchar(20);
cd_cid_guia_req_w		varchar(20);
ie_gerar_ocorrencia_w		varchar(2) := 'N';
cd_categ_cid_regra_w		varchar(10);
cd_categ_cid_guia_req_w		cid_doenca.cd_categoria_cid%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_liberado,
		c.qt_dias,
		c.dt_inicio_vigencia
	from	pls_carencia c,
		pls_tipo_carencia b,
		pls_carencia_proc a
	where	coalesce(a.cd_procedimento,cd_procedimento_w)		= cd_procedimento_w
	and	coalesce(a.ie_origem_proced,ie_origem_proced_w) 		= ie_origem_proced_ww
	and	coalesce(a.cd_grupo_proc,cd_grupo_w)				= cd_grupo_w
	and	coalesce(a.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w
	and	coalesce(a.cd_area_procedimento, cd_area_w) 			= cd_area_w
	and 	coalesce(a.nr_seq_tipo_acomodacao,nr_seq_tipo_acomodacao_w)	= nr_seq_tipo_acomodacao_w
	and 	coalesce(a.ie_tipo_guia,ie_tipo_guia_w)			= ie_tipo_guia_w
	and	b.ie_cpt	= 'S'
	and	b.ie_situacao	= 'A'
	and	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_tipo_carencia
	and	c.nr_sequencia	in (	SELECT	x.nr_sequencia
					from	pls_carencia x
					where	x.nr_seq_segurado	= nr_seq_segurado_w)
	and ((a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '') or (a.cd_grupo_proc IS NOT NULL AND a.cd_grupo_proc::text <> '')
	or 	(a.cd_especialidade IS NOT NULL AND a.cd_especialidade::text <> '') or (a.cd_area_procedimento IS NOT NULL AND a.cd_area_procedimento::text <> ''))
	order by
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento;

BEGIN

if (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then
	select	a.nr_seq_guia,
		a.cd_procedimento,
		a.ie_origem_proced,
		b.nr_seq_segurado,
		coalesce(b.nr_seq_tipo_acomodacao,0),
		b.ie_tipo_guia,
		b.dt_solicitacao
	into STRICT	nr_seq_guia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_segurado_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_guia_w,
		dt_solicitacao_w
	from	pls_guia_plano		b,
		pls_guia_plano_proc	a
	where	a.nr_seq_guia	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_guia_proc_p;

	begin
		select	cd_doenca
		into STRICT	cd_cid_guia_req_w
		from	pls_diagnostico
		where	nr_seq_guia		= nr_seq_guia_w
		and	ie_classificacao	= 'P';
	exception
	when others then
		cd_cid_guia_req_w	:= null;
	end;

elsif (nr_seq_requisicao_proc_p IS NOT NULL AND nr_seq_requisicao_proc_p::text <> '') then
	select	a.nr_seq_requisicao,
		a.cd_procedimento,
		a.ie_origem_proced,
		b.nr_seq_segurado,
		coalesce(b.nr_seq_tipo_acomodacao,0),
		b.ie_tipo_guia,
		b.dt_requisicao
	into STRICT	nr_seq_requisicao_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_segurado_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_guia_w,
		dt_solicitacao_w
	from	pls_requisicao b,
		pls_requisicao_proc a
	where	a.nr_seq_requisicao	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_requisicao_proc_p;

	begin
		select	cd_doenca
		into STRICT	cd_cid_guia_req_w
		from	pls_requisicao_diagnostico
		where	nr_seq_requisicao		= nr_seq_requisicao_w
		and	coalesce(ie_classificacao, 'P')	= 'P'  LIMIT 1;
	exception
	when others then
		cd_cid_guia_req_w	:= null;
	end;

elsif (nr_seq_exec_item_p IS NOT NULL AND nr_seq_exec_item_p::text <> '') then
	select	a.nr_seq_requisicao,
		a.cd_procedimento,
		a.ie_origem_proced,
		b.nr_seq_segurado,
		coalesce(b.nr_seq_tipo_acomodacao,0),
		b.ie_tipo_guia,
		b.dt_solicitacao
	into STRICT	nr_seq_requisicao_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_segurado_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_guia_w,
		dt_solicitacao_w
	from	pls_requisicao		b,
		pls_execucao_req_item	a
	where	a.nr_seq_requisicao	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_exec_item_p;

	begin
		select	cd_doenca
		into STRICT	cd_cid_guia_req_w
		from	pls_requisicao_diagnostico
		where	nr_seq_requisicao		= nr_seq_requisicao_w
		and	coalesce(ie_classificacao, 'P')	= 'P'  LIMIT 1;
	exception
	when others then
		cd_cid_guia_req_w	:= null;
	end;
end if;

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;

begin
	select	dt_inclusao_operadora
	into STRICT	dt_inclusao_operadora_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	dt_inclusao_operadora_w := '';
end;

for r_C01_w in C01 loop
	begin
	if (r_C01_w.ie_liberado	= 'S') then
		select (coalesce(r_C01_w.dt_inicio_vigencia,dt_inclusao_operadora_w) + r_C01_w.qt_dias)
		into STRICT	dt_carencia_w
		;

		if (coalesce(dt_solicitacao_w,clock_timestamp()) < dt_carencia_w) then
			begin
				select	cd_doenca_cid,
					trim(both cd_categoria_cid) /*aaschlote - Coloquei o trim pois colocava um espaÃ§o vazio no final*/
				into STRICT	cd_cid_regra_w,
					cd_categ_cid_regra_w
				from	pls_carencia_proc
				where	nr_sequencia	= r_C01_w.nr_sequencia;
			exception
			when others then
				cd_cid_regra_w		:= null;
				cd_categ_cid_regra_w	:= null;
			end;

			begin
				select	cd_categoria_cid
				into STRICT	cd_categ_cid_guia_req_w
				from 	cid_doenca
				where 	cd_doenca_cid 	= cd_cid_guia_req_w;
			exception
			when others then
				cd_categ_cid_guia_req_w	:= null;
			end;

			if (ie_validacao_cpt_p	= 1) then
				if (cd_cid_regra_w IS NOT NULL AND cd_cid_regra_w::text <> '') or (cd_categ_cid_regra_w IS NOT NULL AND cd_categ_cid_regra_w::text <> '') then
					if (coalesce(cd_cid_guia_req_w::text, '') = '') then
						ie_gerar_ocorrencia_w	:= 'S';
					elsif (cd_cid_regra_w	<> cd_cid_guia_req_w) or (cd_categ_cid_regra_w	<> cd_categ_cid_guia_req_w) then
						ie_gerar_ocorrencia_w	:= 'S';
					end if;
				end if;
			end if;
		end if;
	end if;
	end;
end loop;

return	ie_gerar_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_ocorrencia_cpt ( nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, ie_validacao_cpt_p bigint, nr_seq_requisicao_proc_p pls_requisicao_proc.nr_sequencia%type, nr_seq_exec_item_p pls_execucao_req_item.nr_sequencia%type) FROM PUBLIC;

