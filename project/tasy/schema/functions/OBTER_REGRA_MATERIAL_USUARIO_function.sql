-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_material_usuario ( cd_classe_material_p bigint, cd_material_p bigint, nm_usuario_p text, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*ie_opcao_p
1 = Alteração no cadastro de materiais
2 = Informar o material em uma ordem sem que seja gerado pela cotação
3 = Cadastrar novos materiais
4 = Permite solicitacao
5 = Permite cotacao
6 = Permite ordem
*/
cd_grupo_material_w		smallint;
cd_subgrupo_w			smallint;
cd_classe_material_w		integer;
ie_permite_alterar_w		varchar(1);
ie_permite_incluir_w			varchar(1);
ie_oc_sem_cotacao_w		varchar(1);
ie_permite_solic_w			varchar(1);
ie_permite_cot_w			varchar(1);
ie_permite_ordem_w		varchar(1);
ie_permite_w			varchar(1)	:= 'S';
nr_regras_w			integer;
cd_perfil_w			integer;
qt_regra_usuario_w			integer;
qt_regra_perfil_w			integer;
cd_estabelecimento_w		bigint;

/* Rfoliveira - 13/11 - Criado cursores novos para tratar situação de regra vazia */

c01 CURSOR FOR
SELECT	count(*)
from	material_usuario_lib a,
	regra_material_usuario b
where	b.nr_sequencia = a.nr_seq_regra
and	coalesce(cd_grupo_material, cd_grupo_material_w)	= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
and	coalesce(cd_classe_material, cd_classe_material_w)	= cd_classe_material_w
and (coalesce(cd_material, cd_material_p) = cd_material_p or cd_material_p = 0)
and (a.nm_usuario_lib = nm_usuario_p)
and (coalesce(a.cd_perfil,cd_perfil_w) = cd_perfil_w)
and (coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w);

c02 CURSOR FOR
SELECT	coalesce(ie_permite_alterar, 'S'),
	coalesce(ie_oc_sem_cotacao, 'S'),
	coalesce(ie_permite_incluir,'S'),
	coalesce(ie_permite_solic, 'S'),
	coalesce(ie_permite_cot, 'S'),
	coalesce(ie_permite_ordem,'S')
from	material_usuario_lib a,
	regra_material_usuario b
where	b.nr_sequencia = a.nr_seq_regra
and (a.nm_usuario_lib = nm_usuario_p)
and (coalesce(a.cd_perfil,cd_perfil_w) = cd_perfil_w)
and	coalesce(cd_grupo_material, cd_grupo_material_w)	= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
and	coalesce(cd_classe_material, cd_classe_material_w)	= cd_classe_material_w
and (coalesce(cd_material, cd_material_p) = cd_material_p or cd_material_p = 0)
and (coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w)
order by cd_material desc,
	cd_classe_material desc,
	cd_subgrupo_material desc,
	cd_grupo_material desc;

c03 CURSOR FOR
SELECT	count(*)
from	material_usuario_lib a,
	regra_material_usuario b
where	b.nr_sequencia = a.nr_seq_regra
and	coalesce(cd_grupo_material, cd_grupo_material_w)	= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
and	coalesce(cd_classe_material, cd_classe_material_w)	= cd_classe_material_w
and (coalesce(cd_material, cd_material_p) = cd_material_p or cd_material_p = 0)
and (a.cd_perfil = cd_perfil_w)
and (coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w)
and (coalesce(a.nm_usuario_lib::text, '') = '' and not exists (
					SELECT	1
					from	material_usuario_lib x
					where	x.nr_seq_regra = a.nr_seq_regra
					and	x.nm_usuario_lib = nm_usuario_p));


c04 CURSOR FOR
SELECT	coalesce(ie_permite_alterar, 'S'),
	coalesce(ie_oc_sem_cotacao, 'S'),
	coalesce(ie_permite_incluir,'S'),
	coalesce(ie_permite_solic, 'S'),
	coalesce(ie_permite_cot, 'S'),
	coalesce(ie_permite_ordem,'S')
from	material_usuario_lib a,
	regra_material_usuario b
where	b.nr_sequencia = a.nr_seq_regra
and (a.cd_perfil = cd_perfil_w)
and (coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w)
and (coalesce(a.nm_usuario_lib::text, '') = '' and not exists (
					SELECT	1
					from	material_usuario_lib x
					where	x.nr_seq_regra = a.nr_seq_regra
					and	x.nm_usuario_lib = nm_usuario_p))
and	coalesce(cd_grupo_material, cd_grupo_material_w)	= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
and	coalesce(cd_classe_material, cd_classe_material_w)	= cd_classe_material_w
and (coalesce(cd_material, cd_material_p) = cd_material_p or cd_material_p = 0)
order by cd_material desc,
	cd_classe_material desc,
	cd_subgrupo_material desc,
	cd_grupo_material desc;


c05 CURSOR FOR
SELECT	coalesce(ie_permite_alterar, 'S'),
	coalesce(ie_oc_sem_cotacao, 'S'),
	coalesce(ie_permite_incluir,'S'),
	coalesce(ie_permite_solic, 'S'),
	coalesce(ie_permite_cot, 'S'),
	coalesce(ie_permite_ordem,'S')
from	material_usuario_lib a,
	regra_material_usuario b
where	b.nr_sequencia = a.nr_seq_regra
and (coalesce(a.nm_usuario_lib::text, '') = '' and not exists (
					SELECT	1
					from	material_usuario_lib x
					where	x.nr_seq_regra = a.nr_seq_regra
					and	x.nm_usuario_lib = nm_usuario_p))
and (coalesce(a.cd_perfil::text, '') = '' and not exists (select	1
					from	material_usuario_lib y
					where	y.nr_seq_regra = a.nr_seq_regra
					and	y.cd_perfil	= cd_perfil_w))
and	coalesce(cd_grupo_material, cd_grupo_material_w)	= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_w)	= cd_subgrupo_w
and	coalesce(cd_classe_material, cd_classe_material_w)	= cd_classe_material_w
and (coalesce(cd_material, cd_material_p) = cd_material_p or cd_material_p = 0)
and (coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w)
order by cd_material desc,
	cd_classe_material desc,
	cd_subgrupo_material desc,
	cd_grupo_material desc;


BEGIN

cd_perfil_w		:= Obter_perfil_Ativo;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

/*tratamento para que seja possivel verificar um material novo ou seja, somente pela sua estrutura*/

if (cd_material_p > 0) then
	select	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material	= cd_material_p;
else
	select	b.cd_grupo_material,
		a.cd_subgrupo_material,
		a.cd_classe_material
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_w,
		cd_classe_material_w
	from	subgrupo_material b,
		classe_material a
	where	a.cd_classe_material = cd_classe_material_p
	and	a.cd_subgrupo_material = b.cd_subgrupo_material;
end if;

select	count(*)
into STRICT	nr_regras_w
from	regra_material_usuario;
if (nr_regras_w	= 0) then
	ie_permite_w	:= 'S';
else
	begin

	open 	c01;
	loop
	fetch	c01 into
		qt_regra_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (qt_regra_usuario_w > 0) then
			begin

			open	c02;
			loop
			fetch	c02 into
				ie_permite_alterar_w,
				ie_oc_sem_cotacao_w,
				ie_permite_incluir_w,
				ie_permite_solic_w,
				ie_permite_cot_w,
				ie_permite_ordem_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			end loop;
			close c02;

			end;

		else
			begin

				open c03;
				loop
				fetch	c03 into
					qt_regra_perfil_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin

					if (qt_regra_perfil_w > 0) then

						begin
						open c04;
						loop
						fetch c04 into
							ie_permite_alterar_w,
							ie_oc_sem_cotacao_w,
							ie_permite_incluir_w,
							ie_permite_solic_w,
							ie_permite_cot_w,
							ie_permite_ordem_w;
						EXIT WHEN NOT FOUND; /* apply on c04 */
						end loop;
						close c04;
						end;

					else

						begin
						open c05;
						loop
						fetch c05 into
							ie_permite_alterar_w,
							ie_oc_sem_cotacao_w,
							ie_permite_incluir_w,
							ie_permite_solic_w,
							ie_permite_cot_w,
							ie_permite_ordem_w;
						EXIT WHEN NOT FOUND; /* apply on c05 */
						end loop;
						close c05;
						end;

					end if;

					end;

				end loop;
				close c03;

			end;

		end if;
		end;

	end loop;
	close c01;
	end;

	if (ie_opcao_p = '1') then
		ie_permite_w	:=	ie_permite_alterar_w;
	elsif (ie_opcao_p = '2') then
		ie_permite_w	:=	ie_oc_sem_cotacao_w;
	elsif (ie_opcao_p = '3') then
		ie_permite_w	:=	ie_permite_incluir_w;
	elsif (ie_opcao_p = '4') then
		ie_permite_w	:=	ie_permite_solic_w;
	elsif (ie_opcao_p = '5') then
		ie_permite_w	:=	ie_permite_cot_w;
	elsif (ie_opcao_p = '6') then
		ie_permite_w	:=	ie_permite_ordem_w;
	end if;
end if;

return coalesce(ie_permite_w, 'S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_material_usuario ( cd_classe_material_p bigint, cd_material_p bigint, nm_usuario_p text, ie_opcao_p text) FROM PUBLIC;

