-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION get_patient_status_hospital (nr_atendimento_p bigint ,dt_referencia_p timestamp) RETURNS varchar AS $body$
DECLARE

/*
N - Not Arrived
A - Arrived at hospital
F - Finished
*/
ie_patient_status_w     varchar(1);
cd_pessoa_fisica_w      varchar(10);
dt_referencia_w         timestamp;
qt_agendamento_atend_w  bigint;
qt_arrived_schedule_w   bigint;
qt_finished_schedule_w  bigint;


BEGIN

  dt_referencia_w := trunc(dt_referencia_p, 'MI');

  if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
    ie_patient_status_w := 'N';

    select coalesce(sum(qt),0)
    into STRICT   qt_agendamento_atend_w
    from ( SELECT 1 qt
           from   agenda_paciente
           where  nr_atendimento = nr_atendimento_p
           and    PKG_DATE_UTILS.get_DateTime(dt_agenda, trunc(hr_inicio, 'MI')) <= dt_referencia_w
           and    (PKG_DATE_UTILS.get_DateTime(dt_agenda, hr_inicio) + (1/1440 * nr_minuto_duracao)) >= dt_referencia_w

union  all

           PERFORM 1
           from   agenda_consulta
           where  nr_atendimento = nr_atendimento_p
           and    trunc(dt_agenda, 'MI') <= dt_referencia_w
           and    (dt_agenda + (1/1440 * nr_minuto_duracao)) >= dt_referencia_w) alias10;

    if (qt_agendamento_atend_w > 0) then
      select coalesce(sum(qt),0)
      into STRICT   qt_arrived_schedule_w
      from ( SELECT 1 qt
             from   agenda_paciente ap
             where  PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, trunc(ap.hr_inicio, 'MI')) <= dt_referencia_w
             and    (PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, ap.hr_inicio) + (1/1440 * ap.nr_minuto_duracao)) >= dt_referencia_w
             and    ap.nr_atendimento   = nr_atendimento_p
             and    (ap.dt_chegada IS NOT NULL AND ap.dt_chegada::text <> '')
             and    ap.ie_status_agenda not in ('C','F','I','II','S','FI','N','E','AD')
             and    coalesce(ap.dt_executada::text, '') = ''

union  all

             PERFORM 1
             from   agenda_consulta ac
             where  trunc(ac.dt_agenda, 'MI') <= dt_referencia_w
             and    (ac.dt_agenda + (1/1440 * ac.nr_minuto_duracao)) >= dt_referencia_w
             and    ac.nr_atendimento   = nr_atendimento_p
             and    (ac.dt_chegada IS NOT NULL AND ac.dt_chegada::text <> '')
             and    ac.ie_status_agenda not in ('C','F','I','II','S','FI','N','E','AD')) alias16;

      if (qt_arrived_schedule_w > 0) then
        ie_patient_status_w := 'A';
      else
        select coalesce(sum(qt),0)
        into STRICT   qt_finished_schedule_w
        from ( SELECT 1 qt
               from   agenda_paciente ap
               where  PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, trunc(ap.hr_inicio, 'MI')) <= dt_referencia_w
               and    (PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, ap.hr_inicio) + (1/1440 * ap.nr_minuto_duracao)) >= dt_referencia_w
               and    ap.nr_atendimento   = nr_atendimento_p
               and    ap.ie_status_agenda in ('FI', 'E', 'AD')
               and    (ap.dt_executada IS NOT NULL AND ap.dt_executada::text <> '')
               
union  all

               PERFORM 1
               from   agenda_consulta ac
               where  trunc(ac.dt_agenda, 'MI') <= dt_referencia_w
               and    (ac.dt_agenda + (1/1440 * ac.nr_minuto_duracao)) >= dt_referencia_w
               and    ac.nr_atendimento   = nr_atendimento_p
               and    (ac.dt_chegada IS NOT NULL AND ac.dt_chegada::text <> '')
               and    ac.ie_status_agenda in ('FI', 'E', 'AD')) alias14;

        if (qt_finished_schedule_w > 0) then
          ie_patient_status_w := 'F';
        end if;
      end if;

    else
      cd_pessoa_fisica_w := OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p,'C');

      select coalesce(sum(qt),0)
      into STRICT   qt_arrived_schedule_w
      from ( SELECT 1 qt
             from   agenda_paciente ap
             where  PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, trunc(ap.hr_inicio, 'MI')) <= dt_referencia_w
             and    (PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, ap.hr_inicio) + (1/1440 * ap.nr_minuto_duracao)) >= dt_referencia_w
             and    ap.cd_pessoa_fisica = cd_pessoa_fisica_w
             and    (ap.dt_chegada IS NOT NULL AND ap.dt_chegada::text <> '')
             and    ap.ie_status_agenda not in ('C','F','I','II','S','FI','N','E','AD')
             and    coalesce(ap.dt_executada::text, '') = ''

union  all

             PERFORM 1
             from   agenda_consulta ac
             where  trunc(ac.dt_agenda, 'MI') <= dt_referencia_w
             and    (ac.dt_agenda + (1/1440 * ac.nr_minuto_duracao)) >= dt_referencia_w
             and    ac.cd_pessoa_fisica = cd_pessoa_fisica_w
             and    (ac.dt_chegada IS NOT NULL AND ac.dt_chegada::text <> '')
             and    ac.ie_status_agenda not in ('C','F','I','II','S','FI','N','E','AD')) alias15;

      if (qt_arrived_schedule_w > 0) then
        ie_patient_status_w := 'A';
      else
        select coalesce(sum(qt),0)
        into STRICT   qt_finished_schedule_w
        from ( SELECT 1 qt
               from   agenda_paciente ap
               where  PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, trunc(ap.hr_inicio, 'MI')) <= dt_referencia_w
               and    (PKG_DATE_UTILS.get_DateTime(ap.dt_agenda, ap.hr_inicio) + (1/1440 * ap.nr_minuto_duracao)) >= dt_referencia_w
               and    ap.cd_pessoa_fisica = cd_pessoa_fisica_w
               and    ap.ie_status_agenda in ('FI', 'E', 'AD')
               and    (ap.dt_executada IS NOT NULL AND ap.dt_executada::text <> '')
               
union  all

               PERFORM 1
               from   agenda_consulta ac
               where  trunc(ac.dt_agenda, 'MI') <= dt_referencia_w
               and    (ac.dt_agenda + (1/1440 * ac.nr_minuto_duracao)) >= dt_referencia_w
               and    ac.cd_pessoa_fisica = cd_pessoa_fisica_w
              and    (ac.dt_chegada IS NOT NULL AND ac.dt_chegada::text <> '')
               and    ac.ie_status_agenda in ('FI', 'E', 'AD')) alias14;

        if (qt_finished_schedule_w > 0) then
          ie_patient_status_w := 'F';
        end if;
      end if;
    end if;
  end if;

  return ie_patient_status_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION get_patient_status_hospital (nr_atendimento_p bigint ,dt_referencia_p timestamp) FROM PUBLIC;

