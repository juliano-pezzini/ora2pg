-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_escala_gsp (nr_atendimento_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE

					 
ds_resultado_w		 varchar(4000) := '';
qt_tam_lista_w		 bigint;
qt_pos_virgula_w	 	 bigint;
ds_parametro_14_w  	 varchar(4000) := '';
ie_escala_w		 varchar(255);
nr_sequencia_w		 bigint;
ds_sequencia_w		 varchar(255);
qt_pontos_w		 double precision;
ds_escala_w		 varchar(255);
cd_perfil_w		 integer := obter_perfil_ativo;
cd_estabelecimento_w 	 smallint;
nr_count_w				bigint := 0;
ds_result_w				varchar(255);

c01 CURSOR FOR 
SELECT b.ds_escala, 
	substr(obter_desc_resul_score_flex_2(a.qt_pontos,a.nr_seq_escala),1,255) 
from escala_eif_ii a, 
	eif_escala_ii b 
where	a.nr_seq_escala = b.nr_sequencia 
and		a.nr_seq_escala	 = nr_sequencia_w 
and		b.nr_sequencia	 = nr_sequencia_w 
and		a.nr_atendimento = nr_atendimento_p 
and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
and		a.nr_sequencia  = (SELECT max(x.nr_sequencia) 
				from escala_eif_ii x 
				where x.nr_atendimento = nr_atendimento_p 
				and  x.nr_seq_escala = nr_sequencia_w 
				and	 x.nr_seq_escala  = a.nr_seq_escala);

	 

BEGIN 
ie_escala_w := Obter_Param_Usuario(7044, 13, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_escala_w);
ds_parametro_14_w := Obter_Param_Usuario(7044, 14, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ds_parametro_14_w);
 
if (ds_parametro_14_w IS NOT NULL AND ds_parametro_14_w::text <> '') then 
	ds_parametro_14_w	:= replace(ds_parametro_14_w || ';',';;',';');
end if;
 
if (ie_escala_w IS NOT NULL AND ie_escala_w::text <> '') and (ds_parametro_14_w IS NOT NULL AND ds_parametro_14_w::text <> '') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_p;
 
	if (ie_escala_w = 'S') then 
		while(ds_parametro_14_w IS NOT NULL AND ds_parametro_14_w::text <> '') loop 
			begin 
			qt_tam_lista_w		:= length(ds_parametro_14_w);
 
			if (qt_tam_lista_w = 1) then 
				nr_sequencia_w	 := (ds_parametro_14_w)::numeric;
				ds_parametro_14_w := null;
				qt_pos_virgula_w := 0;	
			else	 
				qt_pos_virgula_w	:= position(';' in ds_parametro_14_w);
					if (qt_pos_virgula_w > 0) then 
						begin 
						ds_sequencia_w		:= substr(ds_parametro_14_w,1,qt_pos_virgula_w - 1);
						end;
					end if;
				nr_sequencia_w		:= (ds_sequencia_w)::numeric;
			end if;
 
			if (qt_pos_virgula_w <> 0) then 
				ds_parametro_14_w	:= substr(ds_parametro_14_w,(qt_pos_virgula_w + 1),qt_tam_lista_w);
			end if;
			 
			open C01;
			loop 
			fetch C01 into 
				ds_escala_w, 
				ds_result_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				ds_resultado_w	:= substr(ds_resultado_w	|| ds_escala_w || ': ' || ds_result_w || '; ',1,255);
				end;
			end loop;
			close C01;
			 
			end;
		end loop;
	end if;
	ds_resultado_w	:= substr(ds_resultado_w,1,length(ds_resultado_w)-2);
end if;
return	substr(ds_resultado_w,1,255);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_escala_gsp (nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

