-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_lib_pagamento ( nr_documento_p bigint, ie_tipo_documento_p text, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE


nr_sequencia_w		bigint;
cont_w			bigint;
dt_liberacao_w		timestamp;
dt_reprovacao_w		timestamp;

/*
ie_tipo_documento_p
B - Border√¥ a pagar
P - Pagamento escritural
*/
BEGIN

if (ie_tipo_documento_p = 'B') then

	select	count(*)
	into STRICT	cont_w
	from	conta_pagar_lib a
	where	a.nr_bordero		= nr_documento_p
	and	coalesce(a.nr_titulo::text, '') = ''
	AND	 ( (a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '' AND a.nm_usuario_lib = nm_usuario_p) OR (a.cd_perfil = obter_perfil_ativo) )
	and	(a.dt_reprovacao IS NOT NULL AND a.dt_reprovacao::text <> '');
	if (cont_w > 0) then
		return	Wheb_mensagem_pck.get_texto(297728);
	else
		select	max(nr_sequencia),
			max(dt_liberacao),
			max(dt_reprovacao)
		into STRICT	nr_sequencia_w,
			dt_liberacao_w,
			dt_reprovacao_w
		from	conta_pagar_lib a
		where	a.nr_bordero		= nr_documento_p
		AND	 ( (a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '' AND a.nm_usuario_lib = nm_usuario_p) OR (a.cd_perfil = obter_perfil_ativo) )
		and	coalesce(a.nr_titulo::text, '') = '';

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
				return	Wheb_mensagem_pck.get_texto(297727);
			elsif (dt_reprovacao_w IS NOT NULL AND dt_reprovacao_w::text <> '') then
				return	Wheb_mensagem_pck.get_texto(297728);
			end if;
		end if;

		return	Wheb_mensagem_pck.get_texto(297726);
	end if;
else

	select	count(*)
	into STRICT	cont_w
	from	conta_pagar_lib a
	where	a.nr_seq_banco_escrit	= nr_documento_p
	and	coalesce(a.nr_titulo::text, '') = ''
	AND	 ( (a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '' AND a.nm_usuario_lib = nm_usuario_p) OR (a.cd_perfil = obter_perfil_ativo) )
	and	(a.dt_reprovacao IS NOT NULL AND a.dt_reprovacao::text <> '');

	if (cont_w > 0) then
		return	Wheb_mensagem_pck.get_texto(297728);
	else
		select	max(nr_sequencia),
			max(dt_liberacao),
			max(dt_reprovacao)
		into STRICT	nr_sequencia_w,
			dt_liberacao_w,
			dt_reprovacao_w
		from	conta_pagar_lib a
		where	a.nr_seq_banco_escrit	= nr_documento_p
		AND	 ( (a.nm_usuario_lib IS NOT NULL AND a.nm_usuario_lib::text <> '' AND a.nm_usuario_lib = nm_usuario_p) OR (a.cd_perfil = obter_perfil_ativo) )
		and	coalesce(a.nr_titulo::text, '') = '';

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
				return	Wheb_mensagem_pck.get_texto(297727);
			elsif (dt_reprovacao_w IS NOT NULL AND dt_reprovacao_w::text <> '') then
				return	Wheb_mensagem_pck.get_texto(297728);
			end if;
		end if;

		return	Wheb_mensagem_pck.get_texto(297726);

	end if;
end if;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_lib_pagamento ( nr_documento_p bigint, ie_tipo_documento_p text, nm_usuario_p text) FROM PUBLIC;

