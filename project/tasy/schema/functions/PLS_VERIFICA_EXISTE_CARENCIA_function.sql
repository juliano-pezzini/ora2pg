-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verifica_existe_carencia ( nr_seq_segurado_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w			varchar(1) := 'N';
nr_carteira_w			varchar(255);
nr_seq_contrato_w		varchar(10);
nr_contrato_w			varchar(10);
ds_estipulante_w		varchar(255);
dt_adesao_w			varchar(10);
dt_liberacao_w			varchar(10);
dt_migracao_w			varchar(10);
dt_reativacao_w			varchar(10);
ds_pagador_w			varchar(255);
ds_vendedor_w			varchar(255);
ds_subestipulante_w		varchar(255);
ds_titular_w			varchar(255);
dt_inclusao_w			varchar(10);
dt_rescisao_w			varchar(10);
dt_limite_w			varchar(10);
ds_produto_w			varchar(255);
nm_fantasia_w			varchar(255);
nr_protocolo_w			varchar(20);
ie_contratacao_w		varchar(255);
ds_seg_assist_w			varchar(255);
ds_formacao_preco_w		varchar(255);
ds_abrang_geo_w			varchar(255);
cd_anterior_w			varchar(20);
ie_regulamentacao_w		varchar(20);
ds_acomodacao_w			varchar(255);
ie_situacao_w			varchar(20);
ds_fator_w			varchar(255);
ds_origem_cob_w			varchar(255);
nr_seq_plano_w			bigint;
nr_seq_rol_w			bigint;
ds_origem_carencia_w		varchar(255);
ds_origem_limitacao_w		varchar(255);
ds_canal_venda_w		varchar(255);
dt_validade_carteira_w		varchar(30);
qt_registros_w			bigint;
dt_suspensao_w			varchar(10);
ds_suspensao_w			varchar(255);
dt_devolucao_w			varchar(255);
ie_nascido_plano_w		varchar(255);
ds_parentesco_w			varchar(255);
cd_cartao_intercambio_w		varchar(30);
ds_tipo_segurado_w		varchar(255);
ie_situacao_trab_w		varchar(255);
dt_mes_reajuste_w		varchar(15);
ie_tipo_vinculo_operadora_w	varchar(255);
ds_link_w			varchar(255);
cd_cco_w			pls_segurado.cd_cco%type;
cd_scpa_w			pls_plano.cd_scpa%type;
dt_nascimento_w			varchar(20);
nr_cartao_nac_sus_w		varchar(20);
ds_classif_benef_w		varchar(255);
cd_operadora_empresa_w		pls_segurado.cd_operadora_empresa%type;


BEGIN 
 
SELECT * FROM pls_obter_dados_beneficiario( 	nr_seq_segurado_p, nr_carteira_w, nr_seq_contrato_w, nr_contrato_w, ds_estipulante_w, dt_adesao_w, dt_liberacao_w, dt_migracao_w, dt_reativacao_w, ds_pagador_w, ds_vendedor_w, ds_subestipulante_w, ds_titular_w, dt_inclusao_w, dt_rescisao_w, dt_limite_w, ds_produto_w, nm_fantasia_w, nr_protocolo_w, ie_contratacao_w, ds_seg_assist_w, ds_formacao_preco_w, ds_abrang_geo_w, cd_anterior_w, ie_regulamentacao_w, ds_acomodacao_w, ie_situacao_w, ds_fator_w, ds_origem_cob_w, nr_seq_plano_w, nr_seq_rol_w, ds_origem_carencia_w, ds_origem_limitacao_w, ds_canal_venda_w, dt_validade_carteira_w, dt_suspensao_w, ds_suspensao_w, dt_devolucao_w, ie_nascido_plano_w, ds_parentesco_w, cd_cartao_intercambio_w, ds_tipo_segurado_w, ie_situacao_trab_w, dt_mes_reajuste_w, ie_tipo_vinculo_operadora_w, ds_link_w, cd_cco_w, cd_scpa_w, dt_nascimento_w, nr_cartao_nac_sus_w, ds_classif_benef_w, cd_operadora_empresa_w) INTO STRICT nr_carteira_w, nr_seq_contrato_w, nr_contrato_w, ds_estipulante_w, dt_adesao_w, dt_liberacao_w, dt_migracao_w, dt_reativacao_w, ds_pagador_w, ds_vendedor_w, ds_subestipulante_w, ds_titular_w, dt_inclusao_w, dt_rescisao_w, dt_limite_w, ds_produto_w, nm_fantasia_w, nr_protocolo_w, ie_contratacao_w, ds_seg_assist_w, ds_formacao_preco_w, ds_abrang_geo_w, cd_anterior_w, ie_regulamentacao_w, ds_acomodacao_w, ie_situacao_w, ds_fator_w, ds_origem_cob_w, nr_seq_plano_w, nr_seq_rol_w, ds_origem_carencia_w, ds_origem_limitacao_w, ds_canal_venda_w, dt_validade_carteira_w, dt_suspensao_w, ds_suspensao_w, dt_devolucao_w, ie_nascido_plano_w, ds_parentesco_w, cd_cartao_intercambio_w, ds_tipo_segurado_w, ie_situacao_trab_w, dt_mes_reajuste_w, ie_tipo_vinculo_operadora_w, ds_link_w, cd_cco_w, cd_scpa_w, dt_nascimento_w, nr_cartao_nac_sus_w, ds_classif_benef_w, cd_operadora_empresa_w;
 
if (upper(ds_origem_carencia_w) = upper('BENEFICIARIO')) then 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	pls_carencia 
	where	nr_seq_segurado = nr_seq_segurado_p 
	and	ie_cpt = 'N' 
	and	to_date(to_char(clock_timestamp(), 'dd/mm/yyyy'), 'dd/mm/yyyy') < (coalesce(dt_inicio_vigencia,to_date(dt_inclusao_w)) + qt_dias);
elsif (upper(ds_origem_carencia_w) = upper('CONTRATO')) then 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	pls_carencia 
	where 	nr_seq_contrato = nr_seq_contrato_w 
	and	ie_cpt = 'N' 
	and	to_date(to_char(clock_timestamp(), 'dd/mm/yyyy'), 'dd/mm/yyyy') < (coalesce(dt_inicio_vigencia,to_date(dt_inclusao_w)) + qt_dias);
elsif (upper(ds_origem_carencia_w) = upper('PRODUTO')) then 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	pls_carencia 
	where	nr_seq_plano = nr_seq_plano_w 
	and	ie_cpt = 'N' 
	and	to_date(to_char(clock_timestamp(), 'dd/mm/yyyy'), 'dd/mm/yyyy') < (coalesce(dt_inicio_vigencia,to_date(dt_inclusao_w)) + qt_dias);
end if;
 
if (qt_registros_w > 0) then 
	ds_retorno_w := 'S';
end if;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verifica_existe_carencia ( nr_seq_segurado_p bigint) FROM PUBLIC;

