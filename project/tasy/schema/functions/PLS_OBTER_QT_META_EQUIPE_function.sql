-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_qt_meta_equipe ( nr_seq_equipe_p bigint, nr_seq_vendedor_p bigint, dt_mes_competencia_p timestamp, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/*
G - global
PF - pessoa física
PJ - pessoa juridica
*/
qt_retorno_w		bigint;
qt_retorno_pf_w		bigint;
qt_retorno_pj_w		bigint;
qt_canais_w		bigint;
dt_inicio_vigencia_pf_w	timestamp;
dt_inicio_vigencia_pj_w	timestamp;
ie_tipo_meta_pf_w	varchar(2);
ie_tipo_meta_pj_w	varchar(2);
qt_meta_w		bigint;
ie_tipo_contrato_pf_w	varchar(2);
ie_tipo_contrato_pj_w	varchar(2);


BEGIN

/*obter a quantidade de vendedores na equipe*/

select	count(*)
into STRICT	qt_canais_w
from	pls_equipe_vend_vinculo	a
where	a.nr_seq_equipe	= nr_seq_equipe_p
and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

/*obter a última regra vigente do pf*/

select	max(dt_inicio_vigencia)
into STRICT	dt_inicio_vigencia_pf_w
from	pls_equipe_vend_meta
where	dt_inicio_vigencia	<= dt_mes_competencia_p
and	((ie_tipo_contrato	= 'PF')
or (ie_tipo_contrato	= 'A'))
and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
and	nr_seq_equipe		= nr_seq_equipe_p;

/*obter a última regra vigente do pj*/

select	max(dt_inicio_vigencia)
into STRICT	dt_inicio_vigencia_pj_w
from	pls_equipe_vend_meta
where	dt_inicio_vigencia	<= dt_mes_competencia_p
and	((ie_tipo_contrato	= 'PJ')
or (ie_tipo_contrato	= 'A'))
and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
and	nr_seq_equipe		= nr_seq_equipe_p;

/*obter o tipo de meta e o tipo de contrato do pf*/

select	max(ie_tipo_meta),
	max(ie_tipo_contrato)
into STRICT	ie_tipo_meta_pf_w,
	ie_tipo_contrato_pf_w
from	pls_equipe_vend_meta	a
where	((ie_tipo_contrato	= 'PF')	or (ie_tipo_contrato	= 'A'))
and	a.nr_seq_equipe		= nr_seq_equipe_p
and	dt_inicio_vigencia_pf_w	= a.dt_inicio_vigencia
and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

/*caso o tipo do contrato do pf estiver nulo, colocar como ambos*/

if (coalesce(ie_tipo_contrato_pf_w::text, '') = '') then
	ie_tipo_contrato_pf_w	:= 'A';
end if;

/*caso o tipo de meta do pf estiver nulo, colocar como individual*/

if (coalesce(ie_tipo_meta_pf_w::text, '') = '') then
	ie_tipo_meta_pf_w := 'I';
end if;

/*obter o tipo de meta e o tipo de contrato do pj*/

select	max(ie_tipo_meta),
	max(ie_tipo_contrato)
into STRICT	ie_tipo_meta_pj_w,
	ie_tipo_contrato_pj_w
from	pls_equipe_vend_meta	a
where	((ie_tipo_contrato	= 'PJ')	or (ie_tipo_contrato	= 'A'))
and	a.nr_seq_equipe		= nr_seq_equipe_p
and	dt_inicio_vigencia_pj_w	= a.dt_inicio_vigencia
and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

/*caso o tipo do contrato do pj estiver nulo, colocar como ambos*/

if (coalesce(ie_tipo_contrato_pj_w::text, '') = '') then
	ie_tipo_contrato_pj_w	:= 'A';
end if;

/*caso o tipo de meta do pj estiver nulo, colocar como individual*/

if (coalesce(ie_tipo_meta_pj_w::text, '') = '') then
	ie_tipo_meta_pj_w := 'I';
end if;

/*Verificar o tipo de meta do PF*/

if (ie_tipo_meta_pf_w	= 'I') then
	select (sum(a.qt_meta) * qt_canais_w)
	into STRICT	qt_meta_w
	from	pls_equipe_vend_meta	a
	where	((ie_tipo_contrato	= 'PF')	or (ie_tipo_contrato	= 'A'))
	and	a.nr_seq_equipe		= nr_seq_equipe_p
	and	dt_inicio_vigencia_pf_w	= a.dt_inicio_vigencia
	and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
	and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

	if (coalesce(qt_meta_w::text, '') = '') then
		qt_meta_w	:= 0;
	end if;

	/*Verificar se o tipo de contrato do PF ePJ são iguais, caso forem dividir a meta do PF*/

	if (ie_tipo_contrato_pj_w = ie_tipo_contrato_pf_w) then
		qt_retorno_pf_w	:= qt_meta_w/2;
	/*Verificar se a meta do PJ é Ambos e do PF é PF*/

	elsif (ie_tipo_contrato_pj_w = 'A') and (ie_tipo_contrato_pf_w	= 'PF') then
		qt_retorno_pf_w	:= qt_meta_w;
	/*Verificar se a meta do PJ é apenas para PJ*/

	elsif (ie_tipo_contrato_pj_w = 'PJ') then
		qt_retorno_pf_w	:= qt_meta_w;
	end if;

elsif (ie_tipo_meta_pf_w	= 'E') then
	select	sum(qt_meta)
	into STRICT	qt_meta_w
	from	pls_equipe_vend_meta	a
	where	((ie_tipo_contrato	= 'PF')	or (ie_tipo_contrato	= 'A'))
	and	a.nr_seq_equipe		= nr_seq_equipe_p
	and	dt_inicio_vigencia_pf_w	= a.dt_inicio_vigencia
	and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
	and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

	if (coalesce(qt_meta_w::text, '') = '') then
		qt_meta_w	:= 0;
	end if;

	/*Verificar se o tipo de contrato do PF ePJ são iguais, caso forem dividir a meta do PF*/

	if (ie_tipo_contrato_pj_w = ie_tipo_contrato_pf_w) then
		qt_retorno_pf_w	:= qt_meta_w/2;
	/*Verificar se a meta do PJ é Ambos e do PF é PF*/

	elsif (ie_tipo_contrato_pj_w = 'A') and (ie_tipo_contrato_pf_w	= 'PF') then
		qt_retorno_pf_w	:= qt_meta_w;
	/*Verificar se a meta do PJ é apenas para PJ*/

	elsif (ie_tipo_contrato_pj_w = 'PJ') then
		qt_retorno_pf_w	:= qt_meta_w;
	end if;
end if;

if (ie_tipo_meta_pj_w = 'I') then
	select (sum(a.qt_meta) * qt_canais_w)
	into STRICT	qt_meta_w
	from	pls_equipe_vend_meta	a
	where	((ie_tipo_contrato	= 'PJ')	or (ie_tipo_contrato	= 'A'))
	and	a.nr_seq_equipe		= nr_seq_equipe_p
	and	dt_inicio_vigencia_pj_w	= a.dt_inicio_vigencia
	and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
	and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

	if (coalesce(qt_meta_w::text, '') = '') then
		qt_meta_w	:= 0;
	end if;

	/*Verificar se o tipo de contrato do PF ePJ são iguais, caso forem dividir a meta do PJ*/

	if (ie_tipo_contrato_pj_w = ie_tipo_contrato_pf_w) then
		qt_retorno_pj_w	:= qt_meta_w/2;
	/*Verificar se a meta do PF é Ambos e do PJ é PJ*/

	elsif (ie_tipo_contrato_pf_w = 'A') then
		qt_retorno_pj_w	:= qt_meta_w;
	/*Verificar se a meta do PF é apenas para PF*/

	elsif (ie_tipo_contrato_pf_w = 'PF') then
		qt_retorno_pj_w	:= qt_meta_w;
	end if;

elsif (ie_tipo_meta_pj_w = 'E') then
	select	sum(qt_meta)
	into STRICT	qt_meta_w
	from	pls_equipe_vend_meta	a
	where	((ie_tipo_contrato	= 'PJ')	or (ie_tipo_contrato	= 'A'))
	and	a.nr_seq_equipe		= nr_seq_equipe_p
	and	dt_inicio_vigencia_pj_w	= a.dt_inicio_vigencia
	and	((nr_seq_vendedor_canal	= nr_seq_vendedor_p) or (coalesce(nr_seq_vendedor_canal::text, '') = ''))
	and (trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mes_competencia_p,'dd') or coalesce(a.dt_fim_vigencia::text, '') = '');

	if (coalesce(qt_meta_w::text, '') = '') then
		qt_meta_w	:= 0;
	end if;

	/*Verificar se o tipo de contrato do PF ePJ são iguais, caso forem dividir a meta do PJ*/

	if (ie_tipo_contrato_pj_w = ie_tipo_contrato_pf_w) then
		qt_retorno_pj_w	:= qt_meta_w/2;
	/*Verificar se a meta do PF é Ambos e do PJ é PJ*/

	elsif (ie_tipo_contrato_pf_w = 'A') then
		qt_retorno_pj_w	:= qt_meta_w;
	/*Verificar se a meta do PF é apenas para PF*/

	elsif (ie_tipo_contrato_pf_w = 'PF') then
		qt_retorno_pj_w	:= qt_meta_w;
	end if;
end if;

/*Verificar se o tipo de retorno é global*/

if (ie_opcao_p	= 'G') then
	if (ie_tipo_contrato_pf_w	= ie_tipo_contrato_pj_w) then
		qt_retorno_w	:= qt_meta_w;
	else
		qt_retorno_w	:= qt_retorno_pf_w + qt_retorno_pj_w;
	end if;
end if;

/*Verificar se o qt_retonor é nulo, caso for, verificar os valores abaixo*/

if (coalesce(qt_retorno_w::text, '') = '') then
	if (ie_opcao_p	= 'PF') then
		/*Caso o tipo de contrato do PF for para Ambos, então retorna zero, senão retorna o valor*/

		if (ie_tipo_contrato_pf_w	= 'A') then
			qt_retorno_w	:= 0;
		else
			qt_retorno_w	:= qt_retorno_pf_w;
		end if;
	elsif (ie_opcao_p	= 'PJ') then
		/*Caso o tipo de contrato do PJ for para Ambos, então retorna zero, senão retorna o valor*/

		if (ie_tipo_contrato_pj_w	= 'A') then
			qt_retorno_w	:= 0;
		else
			qt_retorno_w	:= qt_retorno_pj_w;
		end if;
	elsif (ie_opcao_p	= 'G') then
		qt_retorno_w	:= qt_retorno_pj_w + qt_retorno_pf_w;
	end if;
end if;

return	coalesce(qt_retorno_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_qt_meta_equipe ( nr_seq_equipe_p bigint, nr_seq_vendedor_p bigint, dt_mes_competencia_p timestamp, ie_opcao_p text) FROM PUBLIC;

