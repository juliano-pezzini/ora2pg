-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_consiste_tempo_setores ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_Seq_ageint_p bigint, nr_seq_ageint_item_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(1)	:= 'S';
nr_Seq_marcacao_w	bigint;
hr_Agenda_w		timestamp;
nr_minuto_duracao_w	bigint;
cd_Agenda_w		bigint;
qt_tempo_sala_w		bigint;
qt_sobra_w		bigint;
hr_max_agenda_w		timestamp;
hr_min_agenda_w		timestamp;
ds_retorno_max_w	varchar(1)	:= 'S';
ds_Retorno_min_w	varchar(1)	:= 'S';
nr_Seq_ageint_item_w	bigint;
nr_Seq_proc_marc_w	bigint;
qt_Tempo_Exame_w	bigint;
nr_Seq_regra_w		bigint;
qt_Tempo_w		bigint;

cd_setor_exclusivo_w	integer;
cd_setor_w		integer;
	
C01 CURSOR FOR 
	SELECT	nr_Sequencia 
	from	ageint_tempo_entre_setores 
	where	((cd_setor_pri	= cd_setor_exclusivo_w) 
	or (cd_setor_seg	= cd_setor_exclusivo_w)) 
	and	ie_situacao	= 'A';
	
C02 CURSOR FOR 
	SELECT	a.hr_Agenda, 
		a.nr_minuto_duracao, 
		b.nr_sequencia 
	from	agenda c, 
		agenda_integrada_item b, 
		ageint_marcacao_usuario a 
	where	a.nr_seq_Ageint		= b.nr_seq_agenda_int 
	and	a.nr_Seq_Ageint_item	= b.nr_sequencia 
	and	a.cd_agenda		= c.cd_agenda 
	and	a.nm_usuario		= nm_usuario_p 
	and	a.nr_Seq_ageint		= nr_seq_ageint_p 
	and	c.cd_setor_exclusivo 	= cd_setor_w 
	and	b.nr_sequencia		<> nr_seq_ageint_item_p;
	
C05 CURSOR FOR 
	SELECT	a.hr_Agenda, 
		a.nr_minuto_duracao, 
		c.nr_sequencia 
	from	agenda d, 
		ageint_exame_adic_item c, 
		agenda_integrada_item b, 
		ageint_marcacao_usuario a 
	where	a.nr_seq_Ageint		= b.nr_seq_agenda_int 
	and	a.nr_Seq_Ageint_item	= b.nr_sequencia 
	and	a.cd_agenda		= d.cd_agenda 
	and	a.nm_usuario		= nm_usuario_p 
	and	c.nr_seq_item		= b.nr_sequencia 
	and	a.nr_Seq_ageint		= nr_seq_ageint_p 
	and	d.cd_setor_exclusivo 	= cd_setor_w 
	and	b.nr_sequencia		<> nr_seq_ageint_item_p;	
	 

BEGIN 
 
select	max(cd_setor_exclusivo) 
into STRICT	cd_setor_exclusivo_w 
from	agenda 
where	cd_agenda = cd_agenda_p;
 
/* 
cursor das regras a qual o exame do item se aplica 
*/
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	CASE WHEN cd_setor_pri=cd_setor_exclusivo_w THEN  cd_setor_seg  ELSE cd_setor_pri END , 
		qt_tempo 
	into STRICT	cd_setor_w, 
		qt_tempo_w 
	from	ageint_tempo_entre_setores 
	where	nr_sequencia	= nr_seq_regra_w;
	/* 
	cursor das marcacoes com os exames ao qual a regra se aplica 
	*/
 
	open C02;
	loop 
	fetch C02 into	 
		hr_Agenda_w, 
		nr_minuto_duracao_w, 
		nr_seq_ageint_item_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		if (ds_retorno_w	<> 'N') then 
			if (hr_Agenda_w	< hr_Agenda_p) then 
				select	Obter_Min_Entre_Datas((hr_Agenda_w + nr_minuto_duracao_w / 1440), hr_Agenda_p, 1) 
				into STRICT	qt_sobra_w 
				;		
			else 
				select	Obter_Min_Entre_Datas((hr_Agenda_p + nr_minuto_duracao_p / 1440), hr_Agenda_w, 1) 
				into STRICT	qt_sobra_w 
				;		
			end if;
			 
			if (qt_sobra_w	< qt_tempo_w) then 
				ds_retorno_w	:= 'N';
			else 
				ds_Retorno_w	:= 'S';
			end if;	
			 
			 
		end if;
		end;
	end loop;
	close C02;
	 
	open C05;
	loop 
	fetch C05 into	 
		hr_Agenda_w, 
		nr_minuto_duracao_w, 
		nr_seq_ageint_item_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		if (ds_retorno_w	<> 'N') then 
			if (hr_Agenda_w	< hr_Agenda_p) then 
				select	Obter_Min_Entre_Datas((hr_Agenda_w + nr_minuto_duracao_w / 1440), hr_Agenda_p, 1) 
				into STRICT	qt_sobra_w 
				;		
			else 
				select	Obter_Min_Entre_Datas((hr_Agenda_p + nr_minuto_duracao_p / 1440), hr_Agenda_w, 1) 
				into STRICT	qt_sobra_w 
				;		
			end if;
			 
			if (qt_sobra_w	< qt_tempo_w) then 
				ds_retorno_w	:= 'N';
			else 
				ds_Retorno_w	:= 'S';
			end if;
						 
		end if;
		end;
	end loop;
	close C05;
		 
	end;
end loop;
close C01;
 
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_consiste_tempo_setores ( cd_agenda_p bigint, hr_Agenda_p timestamp, nr_minuto_duracao_p bigint, nr_Seq_ageint_p bigint, nr_seq_ageint_item_p bigint, nm_usuario_p text) FROM PUBLIC;

