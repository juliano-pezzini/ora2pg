-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_valor_proposta_pj ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

 
/* 
ie_opcao_p 
P - valor total do produto da prosposta 
F - Valor total das faixas estarias, somando pela idades dos beneficiários 
*/
					 
					 
vl_retorno_w			double precision := 0;
qt_idade_benef_w		smallint;
nr_seq_proposta_benef_w		bigint;
vl_tot_plano_w			double precision := 0;
tx_desconto_w			double precision := 0;
nr_seq_regra_desconto_w		bigint;	
cd_estabelecimento_w		integer;
ie_grau_parentesco_w		varchar(10);
ie_tipo_proposta_w		pls_proposta_adesao.ie_tipo_proposta%type;
dt_inicio_proposta_w		timestamp;
qt_idade_limite_reaj_param_w	pls_parametros.qt_idade_limite%type;
qt_anos_limite_reaj_param_w	pls_parametros.qt_tempo_limite%type;
ie_data_ref_reaj_adaptado_w	pls_parametros.ie_data_ref_reaj_adaptado%type;
dt_base_inclusao_w		timestamp;
nr_seq_beneficiario_w		bigint;
dt_contratacao_w		timestamp;
dt_inclusao_operadora_w		timestamp;
qt_idade_operadora_w		bigint;
dt_nascimento_w			timestamp;
qt_idade_adesao_w		bigint;
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
vl_antes_reajuste_w		pls_reajuste_preco.vl_base%type;

C01 CURSOR FOR 
	SELECT	trunc(months_between(coalesce(b.DT_CONTRATACAO,dt_inicio_proposta_w), a.dt_nascimento) / 12), 
		b.nr_sequencia, 
		b.nr_seq_beneficiario 
	from	pls_proposta_beneficiario	b, 
		pessoa_fisica			a 
	where	b.cd_beneficiario		= a.cd_pessoa_fisica 
	and	b.nr_seq_proposta		= nr_seq_proposta_p 
	and	b.nr_seq_plano			= nr_seq_plano_p 
	and	coalesce(dt_cancelamento::text, '') = '';

C02 CURSOR FOR 
	SELECT	coalesce(d.vl_preco_atual,0), 
		d.nr_sequencia 
	from	pls_proposta_beneficiario	a, 
		pls_plano			b, 
		pls_tabela_preco		c, 
		pls_plano_preco			d 
	where	a.nr_seq_plano		= b.nr_sequencia 
	and	a.nr_seq_tabela		= c.nr_sequencia 
	and	c.nr_seq_plano		= b.nr_sequencia 
	and	d.nr_seq_tabela		= c.nr_sequencia 
	and	a.nr_sequencia		= nr_seq_proposta_benef_w 
	and	qt_idade_benef_w between d.qt_idade_inicial and d.qt_idade_final 
	and	(((coalesce(c.ie_preco_vidas_contrato,'N') = 'S') 
		and pls_obter_qt_vidas_proposta(nr_seq_proposta_p,nr_seq_proposta_benef_w) between coalesce(d.qt_vidas_inicial,pls_obter_qt_vidas_proposta(nr_seq_proposta_p,nr_seq_proposta_benef_w)) and coalesce(d.qt_vidas_final,pls_obter_qt_vidas_proposta(nr_seq_proposta_p,nr_seq_proposta_benef_w))) 
	or (coalesce(c.ie_preco_vidas_contrato,'N') = 'N')) 
	and	coalesce(d.ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w 
	order	by	coalesce(ie_grau_titularidade,' ');
	

BEGIN 
 
select	cd_estabelecimento, 
	ie_tipo_proposta, 
	dt_inicio_proposta 
into STRICT	cd_estabelecimento_w, 
	ie_tipo_proposta_w, 
	dt_inicio_proposta_w 
from	pls_proposta_adesao 
where	nr_sequencia	= nr_seq_proposta_p;
 
--qt_vidas_w		:= pls_obter_qt_vidas_proposta(nr_seq_proposta_p,null); 
 
select	coalesce(qt_idade_limite,0), 
	coalesce(qt_tempo_limite,0), 
	ie_data_ref_reaj_adaptado 
into STRICT	qt_idade_limite_reaj_param_w, 
	qt_anos_limite_reaj_param_w, 
	ie_data_ref_reaj_adaptado_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
open C01;
loop 
fetch C01 into	 
	qt_idade_benef_w, 
	nr_seq_proposta_benef_w, 
	nr_seq_beneficiario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (ie_opcao_p = 'P') then 
	 
		-- sideker  / Verificação de igualdade com o grau de parentesco do beneficiário. 
		ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_proposta_benef_w,'P'),1,2),'X');
		 
		/*aaschlote 19/02/2013 OS - 695547*/
 
		if (ie_tipo_proposta_w = 9) then 
			select	dt_contratacao, 
				dt_inclusao_operadora 
			into STRICT	dt_contratacao_w, 
				dt_inclusao_operadora_w 
			from	pls_segurado 
			where	nr_sequencia	= nr_seq_beneficiario_w;
 
			if (ie_data_ref_reaj_adaptado_w = 'A') then 
				dt_base_inclusao_w	:= dt_contratacao_w;
			elsif (ie_data_ref_reaj_adaptado_w = 'D') then 
				dt_base_inclusao_w	:= dt_inicio_proposta_w;
			else 
				dt_base_inclusao_w	:= dt_inclusao_operadora_w;
			end if;
			 
			qt_idade_operadora_w	:= round((obter_idade(dt_base_inclusao_w, dt_inicio_proposta_w, 'A'))::numeric );
				 
			if (qt_idade_benef_w >= qt_idade_limite_reaj_param_w) and (qt_idade_operadora_w >= qt_anos_limite_reaj_param_w) then 
				qt_idade_adesao_w	:= (obter_idade(dt_nascimento_w,dt_base_inclusao_w,'A'))::numeric;
				 
				if (qt_idade_adesao_w > qt_idade_limite_reaj_param_w) then 
					qt_idade_benef_w	:= qt_idade_adesao_w + qt_anos_limite_reaj_param_w;
				else 
					qt_idade_benef_w	:= qt_idade_adesao_w + qt_anos_limite_reaj_param_w;
					 
					if (qt_idade_benef_w < qt_idade_limite_reaj_param_w) then 
						qt_idade_benef_w	:= qt_idade_limite_reaj_param_w-1;
					end if;
				end if;
			end if;
		end if;
		 
		 
		open C02;
		loop 
		fetch C02 into	 
			vl_tot_plano_w, 
			nr_seq_plano_preco_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
		 
		select	max(vl_base) 
		into STRICT	vl_antes_reajuste_w 
		from	pls_reajuste_preco 
		where	nr_seq_preco	= nr_seq_plano_preco_w 
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
		and	dt_reajuste	= (	SELECT	min(dt_reajuste) 
						from	pls_reajuste_preco 
						where	nr_seq_preco	= nr_seq_plano_preco_w 
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
						and	dt_reajuste > dt_inicio_proposta_w);
		if (vl_antes_reajuste_w IS NOT NULL AND vl_antes_reajuste_w::text <> '') then 
			vl_tot_plano_w := vl_antes_reajuste_w;
		end if;
		 
		SELECT * FROM pls_obter_regra_desconto(nr_seq_proposta_benef_w, 2, cd_estabelecimento_w, tx_desconto_w, nr_seq_regra_desconto_w) INTO STRICT tx_desconto_w, nr_seq_regra_desconto_w;
				 
		vl_tot_plano_w	:= vl_tot_plano_w - dividir((vl_tot_plano_w * tx_desconto_w), 100);
			 
		vl_retorno_w	:= vl_retorno_w + vl_tot_plano_w;
		 
	end if;
	end;
end loop;
close C01;	
	 
return	vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_valor_proposta_pj ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, ie_opcao_p text) FROM PUBLIC;

