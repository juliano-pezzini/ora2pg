-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hpms_obter_resposta_modelo ( nr_seq_pergunta_p pergunta.nr_sequencia%type, nr_seq_modelo_cont_p modelo_conteudo.nr_sequencia%type, ds_resultado_p text, vl_resultado_p bigint, dt_resultado_p timestamp) RETURNS varchar AS $body$
DECLARE


ds_resultado_w		varchar(4000);
ds_sql_w		text;
enter_w 		varchar(2) := chr(13) || chr(10);

v_select 		integer;
v_execute 		integer;

codigo_w		varchar(255);
descricao_w		varchar(255);


c01 CURSOR( nr_seq_pergunta_pc pergunta.nr_sequencia%type ) FOR
	SELECT  a.ie_componente,
        	a.cd_dominio,
		(SELECT count(1) from pergunta_result b where b.nr_seq_pergunta = a.nr_sequencia) qt_pergunta_result
	from    pergunta a
	where   a.nr_sequencia = nr_seq_pergunta_pc;
	
c02 CURSOR( nr_seq_modelo_cont_pc modelo_conteudo.nr_sequencia%type) FOR
	SELECT 	ds_sql
	from	modelo_conteudo
	where	nr_sequencia = nr_seq_modelo_cont_pc;

BEGIN


if ( (ds_resultado_p IS NOT NULL AND ds_resultado_p::text <> '')  or (vl_resultado_p IS NOT NULL AND vl_resultado_p::text <> '') ) then
	 for c01_w in c01( nr_seq_pergunta_p ) loop

		if ( c01_w.ie_componente  in ('lcb','cb','rg') )  then

			if (c01_w.cd_dominio IS NOT NULL AND c01_w.cd_dominio::text <> '') then	
				select  obter_valor_dominio(cd_dominio, ds_resultado_p) ds_resultado
				into STRICT	ds_resultado_w
				from    valor_dominio_v
				where	cd_dominio = c01_w.cd_dominio
				and	vl_dominio = ds_resultado_p;	
			elsif ( c01_w.qt_pergunta_result > 0 ) then
				select  ds_item  
				into STRICT	ds_resultado_w
				from    pergunta_result
				where	nr_seq_pergunta = nr_seq_pergunta_p
				and	cd_item = coalesce(ds_resultado_p, vl_resultado_p);	
			else	
				
				for c02_w in c02( nr_seq_modelo_cont_p ) loop
				
					if (c02_w.ds_sql IS NOT NULL AND c02_w.ds_sql::text <> '') then
						
						ds_sql_w := ' select * from ( ' || enter_w;
						ds_sql_w := ds_sql_w || replace(c02_w.ds_sql,';',' ') || enter_w;
						
						ds_sql_w := ds_sql_w ||' ) where cd = :cd_resultado ';
						
						v_select := dbms_sql.open_cursor;
						dbms_sql.parse( v_select, ds_sql_w, dbms_sql.native);
					
						dbms_sql.define_column(v_select, 1, codigo_w,100);
						dbms_sql.define_column(v_select, 2, descricao_w,255);
						dbms_sql.bind_variable(v_select, ':cd_resultado', ds_resultado_p);
						
						v_execute := dbms_sql.execute( v_select );		
						loop
						exit when dbms_sql.fetch_rows(v_select) = 0;
		
							if ( dbms_sql.last_row_count > 1) then
								exit;
							end if;
		
							dbms_sql.column_value(v_select,1,codigo_w);
							dbms_sql.column_value(v_select,2,descricao_w);			
						end loop;
						dbms_sql.close_cursor(v_select);				
						ds_resultado_w := descricao_w;
					end if;					
				end loop;
			end if;	
		end if;	
	 end loop;
end if;

if ( coalesce(ds_resultado_w::text, '') = '') then
	ds_resultado_w := coalesce(coalesce(to_char(vl_resultado_p), to_char(dt_resultado_p,'dd/mm/yyyy')), ds_resultado_p);
end if;

return	ds_resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hpms_obter_resposta_modelo ( nr_seq_pergunta_p pergunta.nr_sequencia%type, nr_seq_modelo_cont_p modelo_conteudo.nr_sequencia%type, ds_resultado_p text, vl_resultado_p bigint, dt_resultado_p timestamp) FROM PUBLIC;

