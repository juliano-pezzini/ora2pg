-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_fat_onc (nr_sequencia_p can_ordem_item_prescr.nr_sequencia%type) RETURNS REGRA_FATURAMENTO_ONC%ROWTYPE AS $body$
DECLARE


r_retorno_w regra_faturamento_onc%rowtype;
cd_estabelecimento_w bigint := wheb_usuario_pck.get_cd_estabelecimento;
cd_convenio_w bigint;
nao_utilizado_w varchar(255);
cd_grupo_material_w bigint;
cd_subgrupo_material_w bigint;

dados_item_prescrito CURSOR FOR
SELECT		item.cd_material,
            coalesce(ordem.nr_atendimento, prescricao.nr_atendimento) nr_atendimento,
			material.cd_classe_material,
            material.ie_tipo_material
from		can_ordem_item_prescr item
inner join	material on item.cd_material = material.cd_material
inner join 	can_ordem_prod ordem on item.nr_seq_ordem = ordem.nr_sequencia
inner join  prescr_medica prescricao on ordem.nr_prescricao = prescricao.nr_prescricao
where		item.nr_sequencia = nr_sequencia_p;

BEGIN
    for registro in dados_item_prescrito loop
        SELECT * FROM obter_convenio_execucao(registro.nr_atendimento, clock_timestamp(), cd_convenio_w, nao_utilizado_w, nao_utilizado_w, nao_utilizado_w, nao_utilizado_w) INTO STRICT cd_convenio_w, nao_utilizado_w, nao_utilizado_w, nao_utilizado_w, nao_utilizado_w;

        cd_grupo_material_w := (obter_dados_material(registro.cd_material, 'CGRU'))::numeric;
        cd_subgrupo_material_w := (obter_dados_material(registro.cd_material, 'CSUB'))::numeric;

        begin
            select  r.*
            into STRICT    r_retorno_w
            from (
                SELECT  regra.*
                from    regra_faturamento_onc regra
                where (coalesce(regra.cd_material::text, '') = '' or regra.cd_material = registro.cd_material)
                and (coalesce(regra.cd_convenio::text, '') = '' or regra.cd_convenio = cd_convenio_w)
                and (coalesce(regra.cd_classe_material::text, '') = '' or regra.cd_classe_material = registro.cd_classe_material)
                and (coalesce(regra.cd_grupo_material::text, '') = '' or regra.cd_grupo_material = cd_grupo_material_w)
                and (coalesce(regra.cd_subgrupo_material::text, '') = '' or regra.cd_subgrupo_material = cd_subgrupo_material_w)
                and (coalesce(regra.ie_tipo_material::text, '') = '' or regra.ie_tipo_material = registro.ie_tipo_material)
                and     regra.cd_estabelecimento = cd_estabelecimento_w
                and (coalesce(regra.dt_inicio_vigencia::text, '') = '' or clock_timestamp() >= regra.dt_inicio_vigencia)
                and (coalesce(regra.dt_fim_vigencia::text, '') = '' or clock_timestamp() <= regra.dt_inicio_vigencia)
                and     regra.ie_situacao = 'A'
                order by
                    regra.cd_material,
                    regra.cd_convenio,
                    regra.cd_classe_material,
                    regra.cd_grupo_material,
                    regra.cd_subgrupo_material,
                    regra.ie_tipo_material
            ) r LIMIT 1;
        exception when no_data_found then
            null;
        end;
    end loop;

    return r_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_fat_onc (nr_sequencia_p can_ordem_item_prescr.nr_sequencia%type) FROM PUBLIC;

