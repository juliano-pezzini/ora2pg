-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_comp_mat_rel ( ie_controle_tempo_p text, ie_tipo_solucao_p text, qt_dose_p bigint, cd_unidade_medida_p text, ie_administracao_p text, ie_ref_calculo_p text, ie_bomba_infusao_p text, cd_intervalo_p text, ie_via_aplicacao_p text, hr_min_aplicacao_p text, qt_solucao bigint, ie_aplic_bolus_p text default null, ie_aplic_lenta_p text default null, qt_dose_ataque_p bigint default null, qt_dose_adicional_p bigint default null, nr_seq_procedimento_p bigint default null, ds_doses_diferenciada_p text default null, qt_dosagem_p bigint default null, ie_tipo_dosagem_p text default null, qt_volume_p bigint default null, nr_sequence_p cpoe_material.nr_sequencia%type default null, qt_hora_fase_p text default null, ie_urgente_p text default null, qt_dose_terap_p bigint default null, cd_unid_medic_terap_p text default null, ie_tipo_analgesia_p text default null, ie_pca_modo_prog_p text default null) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(4000);

	FUNCTION item_associado RETURN text IS
		ds_retorno_ww	varchar(255);
	
BEGIN
		IF (nr_seq_procedimento_p IS NOT NULL AND nr_seq_procedimento_p::text <> '') THEN

			SELECT	SUBSTR(' ' || (obter_desc_expressao(339771, '') ||': ' || SUBSTR(cpoe_obter_desc_proc_interno(nr_seq_proc_interno),1,255)),1,255)  ds_proc
			INTO STRICT	ds_retorno_ww
			FROM 	cpoe_procedimento f
			WHERE 	f.nr_sequencia = nr_seq_procedimento_p;

			RETURN ds_retorno_ww;
		END IF;
		RETURN NULL;
	END;

	FUNCTION aplic_bolus RETURN VARCHAR2 IS
	BEGIN
		IF (ie_aplic_bolus_p = 'S') THEN
			RETURN ' ' || lower(obter_desc_expressao(289111, '')) || ',';
		END IF;
		RETURN NULL;
	END;

	FUNCTION aplic_lenta RETURN VARCHAR2 IS
	BEGIN
		IF (ie_aplic_lenta_p = 'S') THEN
			RETURN ' ' || lower(obter_desc_expressao(292501, '')) || ',';
		END IF;
		RETURN NULL;
	END;

	FUNCTION aplic_bolus_lenta RETURN VARCHAR2 IS
	BEGIN
		IF (ie_aplic_lenta_p = 'S') and (ie_aplic_bolus_p = 'S') THEN
			RETURN ' ' || obter_desc_expressao(289111, '') || '/'||obter_desc_expressao(292501, '') || ' ';
		END IF;
		RETURN NULL;
	END;
	
	function via_aplicacao return varchar2 is
	ds_retorno_ww	varchar2(255);
	begin
		IF (ie_via_aplicacao_p IS NOT NULL AND ie_via_aplicacao_p::text <> '') THEN

			SELECT	MAX(ds_via_aplicacao) ds
			INTO STRICT	ds_retorno_ww
			FROM	via_aplicacao
			WHERE	ie_via_aplicacao = ie_via_aplicacao_p;

			RETURN '' || obter_desc_expressao(301661, '') || ' ' || ds_retorno_ww || ',';
		END IF;

		RETURN NULL;

	END;

	FUNCTION tipo_adm RETURN VARCHAR2 IS
	BEGIN

		IF (ie_administracao_p = 'N' ) THEN
			RETURN  ' ' || lower(obter_desc_expressao(298074, '')) || ',';
		ELSIF (ie_administracao_p = 'C') THEN
			RETURN ' ' || lower(obter_desc_expressao(689215, '')) || ',';
		END IF;

		RETURN NULL;
	END;

	FUNCTION dose_unidade_medida RETURN VARCHAR2 IS
		qt_dose_w           VARCHAR2(50);
	BEGIN
		IF (coalesce(ds_doses_diferenciada_p::text, '') = '') THEN
			--Colocar '0' antes da virgula
			qt_dose_w := qt_dose_p;
			IF (SUBSTR(qt_dose_p,1,1) = ',') THEN
				qt_dose_w	:= '0' || qt_dose_p;

				qt_dose_w	:= REPLACE(qt_dose_w,'.',',');
			END IF;

			RETURN ' ' || qt_dose_w || ' ' || obter_dados_unid_medida(cd_unidade_medida_p, 'DS') || ',';
		ELSE
			--Colocar '0' antes da virgula
			qt_dose_w := ds_doses_diferenciada_p;

			IF (SUBSTR(ds_doses_diferenciada_p,1,1) = ',') THEN
				qt_dose_w	:= '0' || ds_doses_diferenciada_p;

			qt_dose_w	:= REPLACE(qt_dose_w,'.',',');
			END IF;

			RETURN ' ' || qt_dose_w || ' ' || obter_dados_unid_medida(cd_unidade_medida_p, 'DS') || ',';
		END IF;
	END;

	function referencia_calculo return varchar2 is
		ds_contate		varchar2(10) := ' ';
	begin
		--arrumar quando for intervalo ou outra coisa tem ver o que e melhor	
		if (ie_ref_calculo_p IS NOT NULL AND ie_ref_calculo_p::text <> '') then
		
			if (ie_ref_calculo_p = 'NE') then
				return ' '|| cpoe_obtain_ref_calc(nr_sequence_p, ie_ref_calculo_p)  || ' ' || lower(obter_desc_expressao(289637, '')) || ',';
			elsif (ie_ref_calculo_p = 'I') then
				ds_contate := ': ';
			end if;	
			
			return	' '|| lower(obter_valor_dominio(7040, ie_ref_calculo_p))  ||ds_contate|| cpoe_obtain_ref_calc(nr_sequence_p, ie_ref_calculo_p) || ',';
		else
			return NULL;
		end if;
	END;

	FUNCTION tipo_solucao RETURN VARCHAR2 IS
	BEGIN
		IF (ie_tipo_solucao_p = 'C') THEN --C - Continua - 608174
			RETURN ' ' || obter_desc_expressao(608174, '') || ', ';
		ELSIF (ie_tipo_solucao_p = 'I') THEN --I - Intermitente - 292175
			RETURN ' ' || obter_desc_expressao(292175, '') || ', ';
		ELSIF (ie_tipo_solucao_p = 'V') THEN --V - Veloc infusao variavel - 342109
			RETURN ' ' || obter_desc_expressao(342109, '') || ', ';
		ELSIF (ie_tipo_solucao_p = 'P') THEN --P - PCA - 295360
			RETURN ' ' || obter_desc_expressao(295360, '') || ', ';
		END IF;

		RETURN NULL;
	END;

	FUNCTION desc_bomba_infusao RETURN VARCHAR2 IS
	BEGIN
		IF (ie_bomba_infusao_p <> 'N') THEN
			RETURN ' ' || obter_desc_expressao(341615, '') || ' ' || lower(obter_valor_dominio(1537, ie_bomba_infusao_p)) || ',';
		END IF;
		
		

		RETURN NULL;

	END;

	FUNCTION desc_intervalo RETURN VARCHAR2 IS
	BEGIN
		IF (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') THEN
			RETURN ' ' || obter_desc_expressao(292190, '') || ': ' ||obter_desc_intervalo(cd_intervalo_p) || ', ';
		END IF;
		
		RETURN NULL;
	END;

	FUNCTION min_aplicacao RETURN VARCHAR2 IS
	BEGIN
		IF (hr_min_aplicacao_p IS NOT NULL AND hr_min_aplicacao_p::text <> '')  THEN
			RETURN ' ' || lower(obter_desc_expressao(299217, '')) || ' ' || hr_min_aplicacao_p||' (h/min),';
		ELSE
			RETURN NULL;
		END IF;
	END;

	FUNCTION velocidade_infusao RETURN VARCHAR2 IS
	qt_dosagem_w	NUMBER(18,6);
	BEGIN
	
		IF (qt_dosagem_p IS NOT NULL AND qt_dosagem_p::text <> '') AND (qt_dosagem_p > 0 ) THEN
			qt_dosagem_w := round((qt_dosagem_p)::numeric,2);
			IF (SUBSTR(qt_dosagem_w,1,1) = ',') THEN
				RETURN ' ' || obter_desc_expressao(710247, '') ||' 0' || qt_dosagem_w || ' ' || ie_tipo_dosagem_p || ',';
			ELSE
				RETURN ' ' || obter_desc_expressao(710247, '') || ' ' || qt_dosagem_w || ' ' ||  ie_tipo_dosagem_p || ',';
			END IF;
		END IF;

		RETURN NULL;
	END;

	function volume_total return varchar2 is
	ds_volume_w varchar2(200);
	begin

		select cpoe_obter_volume_total_rel(	cd_material,qt_dose,cd_unidade_medida,
											cd_mat_dil,qt_dose_dil,cd_unid_med_dose_dil,
											qt_solucao_red,
											cd_mat_red,qt_dose_red,cd_unid_med_dose_red,
											cd_mat_comp1,qt_dose_comp1,cd_unid_med_dose_comp1,
											cd_mat_comp2,qt_dose_comp2,cd_unid_med_dose_comp2,
											cd_mat_comp3,qt_dose_comp3,cd_unid_med_dose_comp3,
											cd_mat_comp4,qt_dose_comp4,cd_unid_med_dose_comp4,
											cd_mat_comp5,qt_dose_comp5,cd_unid_med_dose_comp5,
											cd_mat_comp6,qt_dose_comp6,cd_unid_med_dose_comp6,
											qt_solucao,
											cd_mat_comp7,qt_dose_comp7,cd_unid_med_dose_comp7,
											nr_seq_mat_diluicao) qt_volume_final
		into STRICT	ds_volume_w
		from	cpoe_material
		where	nr_sequencia = nr_sequence_p;

		if (ds_volume_w IS NOT NULL AND ds_volume_w::text <> '') then
			return '' || ds_volume_w;
		end if;

		return NULL;
	end;

	FUNCTION dose_ataque_tempo_infusao RETURN VARCHAR2 IS
	BEGIN
		IF (coalesce(qt_dose_ataque_p,0) > 0)  THEN
			RETURN ' ' || obter_desc_expressao(303811, '') ||' '|| qt_dose_ataque_p ||' '|| obter_dados_unid_medida(cd_unidade_medida_p, 'DS') || ' ' ||  obter_desc_expressao(289010, '') || ' ' || qt_hora_fase_p || ',';
		ELSE
			RETURN NULL;
		END IF;
	END;
	
	function dose_ataque_unidade_medida return varchar2 is
	begin
		if (coalesce(qt_dose_ataque_p,0) > 0)  then
			return ' ' || obter_desc_expressao(710233, '') ||' '|| qt_dose_ataque_p ||' '|| obter_dados_unid_medida(cd_unidade_medida_p, 'DS')||',';
		else
			return NULL;
		end if;
	end;

	FUNCTION duracao_infusao RETURN VARCHAR2 IS
	BEGIN
		IF (qt_hora_fase_p IS NOT NULL AND qt_hora_fase_p::text <> '') AND (ie_tipo_solucao_p = 'I') THEN
			RETURN obter_desc_expressao(306433, '') ||' '|| qt_hora_fase_p || ' ';
		ELSE
			RETURN NULL;
		END IF;
	END;
	
	--Ajustar
	FUNCTION getDoseAdicional RETURN VARCHAR2 IS
	ds_volume_w2 VARCHAR2(200);
	BEGIN
		
		if (coalesce(qt_dose_adicional_p,0) > 0) then
			
			return ' ' || lower(obter_desc_expressao(288237, '')) || ' ' || qt_dose_adicional_p || obter_dados_unid_medida(cd_unidade_medida_p, 'DS') || ' ';
			
		end if;

		RETURN null;

	RETURN NULL;
	END;
	
	function ds_urgencia return varchar2 is
	begin
		if (ie_administracao_p = 'P') and (ie_urgente_p IS NOT NULL AND ie_urgente_p::text <> '') then
			return  ' ' || obter_valor_dominio(7069, ie_urgente_p)|| ',';
		end if;
		
		return NULL;
	end;		
	
	function obter_texto_dose_terap return varchar2 is
	begin
		return obter_desc_expressao(288274, '')||': ';	
	end;
	
	function ds_dose_terapeutica return varchar2 is
	begin
		if (qt_dose_terap_p IS NOT NULL AND qt_dose_terap_p::text <> '') and (qt_dose_terap_p > 0) then
			if (qt_dose_terap_p < 1) then
				return  ' ' || obter_texto_dose_terap || '0' ||qt_dose_terap_p || ' ' || obter_desc_unid_terap(cd_unid_medic_terap_p);
			else
				return  ' ' || obter_texto_dose_terap || qt_dose_terap_p || ' ' || obter_desc_unid_terap(cd_unid_medic_terap_p);
			end if;
		end if;
		
		return NULL;
	end;
	
	function ie_tipo_analgesia return varchar2 is
	begin
		if (ie_tipo_analgesia_p IS NOT NULL AND ie_tipo_analgesia_p::text <> '') then
			return  ' ' || obter_desc_expressao(299400, '') || ' ' || obter_valor_dominio(2715, ie_tipo_analgesia_p) || ',';
		end if;
		
		return NULL;
	end;
	
	function ie_pca_modo_prog return varchar2 is
	begin
		if (ie_pca_modo_prog_p IS NOT NULL AND ie_pca_modo_prog_p::text <> '') then
			return  ' ' || obter_desc_expressao(293391, '') || ' ' || obter_valor_dominio(2714, ie_pca_modo_prog_p);
		end if;
		
		return NULL;
	end;
	
BEGIN

IF (ie_controle_tempo_p = 'S') THEN
	IF (ie_tipo_solucao_p = 'C' OR ie_tipo_solucao_p = 'I') THEN
		ds_retorno_w :=  SUBSTR(via_aplicacao() || dose_unidade_medida() || tipo_adm() || referencia_calculo() || desc_bomba_infusao || velocidade_infusao || dose_ataque_tempo_infusao || duracao_infusao() || tipo_solucao || ds_urgencia() || ds_dose_terapeutica,1,4000);
	ELSIF (ie_tipo_solucao_p = 'V') THEN
		ds_retorno_w := SUBSTR(via_aplicacao() || dose_unidade_medida || tipo_adm() || velocidade_infusao || dose_ataque_tempo_infusao || tipo_solucao||ds_urgencia() || ds_dose_terapeutica,1,4000);
	ELSIF (ie_tipo_solucao_p = 'P') THEN
		ds_retorno_w :=  SUBSTR(via_aplicacao() || dose_unidade_medida || tipo_adm() || dose_ataque_tempo_infusao || tipo_solucao || ds_urgencia() || ds_dose_terapeutica || ie_tipo_analgesia || ie_pca_modo_prog,1,4000);
	END IF;
ELSIF (ie_controle_tempo_p = 'N') THEN
	ds_retorno_w :=  SUBSTR(volume_total() || min_aplicacao || dose_ataque_unidade_medida()  || velocidade_infusao() || desc_bomba_infusao() ||  aplic_bolus || aplic_lenta || ds_dose_terapeutica,1,4000);
ELSIF (ie_controle_tempo_p = 'P') THEN
	ds_retorno_w :=  SUBSTR(via_aplicacao() ||tipo_adm() || dose_unidade_medida || desc_intervalo(),1,4000);
ELSIF (ie_controle_tempo_p = 'SI') THEN
	ds_retorno_w :=  SUBSTR(dose_unidade_medida() || via_aplicacao() || tipo_adm(),1,4000);
ELSIF (ie_controle_tempo_p = 'MAT') THEN
	ds_retorno_w := SUBSTR(dose_unidade_medida() || desc_intervalo()|| ds_urgencia() ,1,4000);
ELSIF (ie_controle_tempo_p = 'HM') THEN
	ds_retorno_w := SUBSTR(dose_unidade_medida() || via_aplicacao() ,1,4000);
END IF;

RETURN	substr(ds_retorno_w,1,4000);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_comp_mat_rel ( ie_controle_tempo_p text, ie_tipo_solucao_p text, qt_dose_p bigint, cd_unidade_medida_p text, ie_administracao_p text, ie_ref_calculo_p text, ie_bomba_infusao_p text, cd_intervalo_p text, ie_via_aplicacao_p text, hr_min_aplicacao_p text, qt_solucao bigint, ie_aplic_bolus_p text default null, ie_aplic_lenta_p text default null, qt_dose_ataque_p bigint default null, qt_dose_adicional_p bigint default null, nr_seq_procedimento_p bigint default null, ds_doses_diferenciada_p text default null, qt_dosagem_p bigint default null, ie_tipo_dosagem_p text default null, qt_volume_p bigint default null, nr_sequence_p cpoe_material.nr_sequencia%type default null, qt_hora_fase_p text default null, ie_urgente_p text default null, qt_dose_terap_p bigint default null, cd_unid_medic_terap_p text default null, ie_tipo_analgesia_p text default null, ie_pca_modo_prog_p text default null) FROM PUBLIC;

