-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_obriga_justif_proc ( cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, ie_origem_proced_p bigint, cd_area_proc_p bigint, cd_especialidade_p bigint, cd_grupo_proc_p bigint, nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE


ie_retorno_w			char(1) := 'N';
qt_vezes_perm_dia_w		regra_obriga_just_proc.qt_vezes_perm_dia%type;
cd_tipo_procedimento_w	procedimento.cd_tipo_procedimento%type;
qt_vezes_util_dia_w		bigint;
cd_convenio_w			bigint;
cd_setor_atendimento_w	bigint;
nr_seq_proc_interno_w	prescr_procedimento.nr_seq_proc_interno%type;


BEGIN

select	coalesce(max('S'),'N')
into STRICT	ie_retorno_w
from	regra_obriga_just_proc LIMIT 1;

if (ie_retorno_w = 'S') then

	select	coalesce(cd_tipo_procedimento,0)
	into STRICT	cd_tipo_procedimento_w
	from	procedimento
	where	cd_procedimento	= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;

	cd_convenio_w			:= obter_convenio_atendimento(nr_atendimento_p);
	cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_p);
	select	coalesce(min(qt_vezes_perm_dia),-1),
			min(nr_seq_proc_interno)
	into STRICT	qt_vezes_perm_dia_w,
			nr_seq_proc_interno_w
	from	regra_obriga_just_proc where		(qt_vezes_perm_dia IS NOT NULL AND qt_vezes_perm_dia::text <> '')
	and		coalesce(cd_procedimento, coalesce(cd_procedimento_p,0)) = coalesce(cd_procedimento_p,0)
	and		((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, coalesce(ie_origem_proced_p,0)) = coalesce(ie_origem_proced_p,0)))
	and		coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p,0)) = coalesce(nr_seq_proc_interno_p,0)
	and		coalesce(cd_area_procedimento, coalesce(cd_area_proc_p,0)) = coalesce(cd_area_proc_p,0)
	and		coalesce(cd_especialidade, coalesce(cd_especialidade_p,0)) = coalesce(cd_especialidade_p,0)
	and		coalesce(cd_tipo_procedimento, coalesce(cd_tipo_procedimento_w,0)) = coalesce(cd_tipo_procedimento_w,0)
	and		coalesce(cd_convenio,cd_convenio_w)					 = cd_convenio_w
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
	and		coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_p,0)) = coalesce(cd_grupo_proc_p,0) LIMIT 1;

	if (qt_vezes_perm_dia_w > -1) then
		select	count(*)
		into STRICT	qt_vezes_util_dia_w
		from	estrutura_procedimento_v c,
				prescr_proc_hor b,
				prescr_medica a
		where	b.cd_procedimento = c.cd_procedimento
		and		b.ie_origem_proced = c.ie_origem_proced
		and		coalesce(c.cd_area_procedimento,0) = coalesce(cd_area_proc_p,coalesce(c.cd_area_procedimento,0))
		and		coalesce(c.cd_especialidade,0) = coalesce(cd_especialidade_p,coalesce(c.cd_especialidade,0))
		and		coalesce(c.ie_origem_proced,0) = coalesce(ie_origem_proced_p,coalesce(c.ie_origem_proced,0))
		and		coalesce(b.nr_seq_proc_interno,0) = coalesce(nr_seq_proc_interno_w,coalesce(b.nr_seq_proc_interno,0))
		and		coalesce(c.cd_tipo_procedimento,0) = coalesce(cd_tipo_procedimento_w,coalesce(c.cd_tipo_procedimento,0))
		and		coalesce(b.dt_suspensao::text, '') = ''
		and		a.nr_prescricao = b.nr_prescricao
		and		trunc(b.dt_horario) = trunc(clock_timestamp())
		and		coalesce(a.dt_suspensao::text, '') = ''
		and		clock_timestamp() between trunc(a.dt_prescricao) and fim_dia(a.dt_validade_prescr)
		and		a.nr_atendimento = nr_atendimento_p;

		if (qt_vezes_util_dia_w > qt_vezes_perm_dia_w) then
			ie_retorno_w	:= 'S';
		else
			ie_retorno_w	:= 'N';
		end if;
	else
		ie_retorno_w	:= 'N';
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_obriga_justif_proc ( cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, ie_origem_proced_p bigint, cd_area_proc_p bigint, cd_especialidade_p bigint, cd_grupo_proc_p bigint, nr_atendimento_p bigint) FROM PUBLIC;

