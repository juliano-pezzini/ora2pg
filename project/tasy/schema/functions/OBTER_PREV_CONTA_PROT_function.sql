-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prev_conta_prot (nr_atendimento_p bigint, nr_interno_conta_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, cd_convenio_p bigint, dt_referencia_p timestamp) RETURNS timestamp AS $body$
DECLARE



/*Function chamada na criação da conta paciente*/

dt_prev_protocolo_w		timestamp;
qt_dias_previsao_w		bigint;
qt_dias_w			bigint;
qt_dia_util_w			bigint;
ie_regra_w			varchar(1);
dt_prev_conta_w			timestamp;

c01 CURSOR FOR
SELECT	qt_dias_previsao,
	dt_prev_conta,
	coalesce(ie_regra,'P')
from	regra_prev_conta_prot
where	cd_estabelecimento					= cd_estabelecimento_p
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_p)		= ie_tipo_atendimento_p
and	coalesce(cd_convenio,coalesce( cd_convenio_p,0))			= coalesce( cd_convenio_p,0)
and (coalesce(ie_evento,'A') = 'C') --Criação da conta
and	((coalesce(ie_regra,'P') = 'P') or ((dt_prev_conta IS NOT NULL AND dt_prev_conta::text <> '') and dt_prev_conta > dt_referencia_p))
order 	by ie_tipo_atendimento,
	coalesce(cd_convenio,0),
	dt_prev_conta desc;


BEGIN


dt_prev_protocolo_w	:= null;
qt_dias_previsao_w	:= null;
open c01;
loop
fetch c01 into
	qt_dias_previsao_w,
	dt_prev_conta_w,
	ie_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

if (qt_dias_previsao_w IS NOT NULL AND qt_dias_previsao_w::text <> '') and (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') and (ie_regra_w = 'P') then

	dt_prev_protocolo_w	:= dt_referencia_p;
	qt_dias_w		:= 0;
	qt_dia_util_w		:= 0;
	while(qt_dia_util_w < qt_dias_previsao_w) loop
		if (OBTER_SE_DIA_UTIL(dt_prev_protocolo_w + qt_dias_w, cd_estabelecimento_p) = 'S') then
			qt_dia_util_w	:= qt_dia_util_w + 1;
		end if;
		qt_dias_w	:= qt_dias_w + 1;
	end loop;
	dt_prev_protocolo_w	:= dt_prev_protocolo_w + qt_dias_w;

elsif (ie_regra_w = 'D') and (dt_prev_conta_w IS NOT NULL AND dt_prev_conta_w::text <> '') and (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then

	dt_prev_protocolo_w	:= dt_prev_conta_w;

end if;

return	dt_prev_protocolo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prev_conta_prot (nr_atendimento_p bigint, nr_interno_conta_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, cd_convenio_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

