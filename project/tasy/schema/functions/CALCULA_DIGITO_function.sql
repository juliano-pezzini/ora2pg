-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION calcula_digito ( ie_Rotina_p text, cd_codigo_p text) RETURNS bigint AS $body$
DECLARE


cd_codigo_w			varchar(255);
Peso_String_w			varchar(255);
cd_digito_w			smallint;
i				bigint;
Soma				bigint;
SomaDig				bigint;
peso				bigint;
Coluna				bigint;
Tamanho		 		bigint;
valor      				bigint;
var1aih				bigint;
var2aih				bigint;
var3aih				bigint;
var4aih				bigint;
cd_codigo_ww			varchar(20);
cd_m10_w			varchar(255);
cd_m11_w			varchar(255);
resto_divisao_w			bigint;
divisor_sicredi_w			bigint;
mult_sicredi_w			bigint;
subtracao_sicredi_w		bigint;
inicio_w			bigint;


BEGIN
BEGIN

cd_digito_w			:= 0;
Soma			      := 0;
if (UPPER(ie_rotina_p) = 'MODULO11') then
	begin
	Peso          	:= 2;
	Tamanho       	:= Length(cd_codigo_p);
	if (Tamanho > 0) then
    		begin
		FOR i IN REVERSE Tamanho..1 LOOP
			begin
        		Valor := (Substr(cd_codigo_p, i, 1))::numeric;
        		Soma  := Soma + (Valor * Peso);
        		peso	:= Peso + 1;
        		if (peso > 9) then
				peso 	:= 2;
			end if;
        		end;
	    END LOOP;
    		Soma      	:= Soma * 10;
    		cd_digito_w := mod(Soma,11);
    		if (cd_digito_w > 9) then
        		cd_digito_w	:= 0;
		end if;
		exception
		when others then
			cd_digito_w	:= 5;
		end;
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'EAN13') then
	begin
	Peso_String_w 	:= '131313131313';
	FOR i IN 1..12 LOOP
     		Soma 	:= Soma + (	(Substr(cd_codigo_p, i, 1))::numeric * 
					(Substr(Peso_String_w, i, 1))::numeric );
      END LOOP;
    	cd_digito_w := 10 - (soma - (Trunc(soma/10)*10));
    	if (cd_digito_w = 10) then
      	cd_digito_w	:= 0;
    	end if;
	exception	
		when others then
			cd_digito_w	:= 0;
	end;
elsif (UPPER(ie_rotina_p) = 'MODULO10') then
        begin
	tamanho         := coalesce(length(cd_codigo_p),0);
	-- Edgar 01/02/2007 OS 49593, aumentei o peso abaixo
	peso_String_w	:= '121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212';
	peso_string_w	:= substr(peso_string_w, length(peso_string_w) - tamanho + 1,tamanho);
	soma		:= 0;
	for i IN REVERSE tamanho..1 loop
		begin
		soma := soma + 	((substr(cd_codigo_p,i,1))::numeric  *
				 (substr(peso_string_w,i,1))::numeric );
		if ((substr(cd_codigo_p,i,1))::numeric  *
 		    (substr(peso_string_w,i,1))::numeric  > 9) then
		    soma := soma - 9;
		end if;
		end;
	end loop;		
	cd_digito_w := 10 - soma + (trunc(soma/10,0) * 10);	
	if (cd_digito_w = 10) then
	    cd_digito_w := 0;
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'MODULO10D0') then
        begin
	tamanho         := length(cd_codigo_p);
	cd_codigo_ww	:= substr(cd_codigo_p,1,6) || '0' ||  substr(cd_codigo_p,7,tamanho);
	tamanho         := length(cd_codigo_ww);
	peso_String_w	:= '121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212';
	peso_string_w	:= substr(peso_string_w, length(peso_string_w) - tamanho + 1,tamanho);
	soma		:= 0;
	FOR i IN REVERSE tamanho..1 loop
		begin
		soma := soma + 	((substr(cd_codigo_ww,i,1))::numeric  *
				 (substr(peso_string_w,i,1))::numeric );
		if ((substr(cd_codigo_ww,i,1))::numeric  *
 		    (substr(peso_string_w,i,1))::numeric  > 9) then
		    soma := soma - 9;
		end if;
		end;
	end loop;		
	cd_digito_w := 10 - soma + (trunc(soma/10,0) * 10);	
	if (cd_digito_w = 10) then
	    cd_digito_w := 0;
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'MODULO10X') then
        begin
	tamanho         := length(cd_codigo_p);
	peso_String_w	:= '1212121212121212121212121212121212';
	peso_string_w	:= substr(peso_string_w, length(peso_string_w) - tamanho + 1,tamanho);
	soma		:= 0;
	FOR i IN REVERSE tamanho..1 loop
		begin
		soma := soma + 	((substr(cd_codigo_p,i,1))::numeric  *
				 (substr(peso_string_w,i,1))::numeric );
		end;
	end loop;		
	cd_digito_w := 10 - soma + (trunc(soma/10,0) * 10);	
	if (cd_digito_w = 10) then
	    cd_digito_w := 0;
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'AVIMED') then
	begin
	tamanho         := length(cd_codigo_p);
	peso_String_w	:= '43434343434343434343434343434343434343434343434343434343';
	peso_string_w	:= substr(peso_string_w, length(peso_string_w) - tamanho + 1,tamanho);
	soma		:= 0;
	SomaDig	:= 0;
	FOR i IN REVERSE tamanho..1 loop
		begin
		soma 		:= soma + (Campo_Numerico(substr(cd_codigo_p,i,1)) *
				 Campo_Numerico(substr(peso_string_w,i,1)));
		SomaDig	:= SomaDig + Campo_Numerico(substr(cd_codigo_p,i,1));
		end;
	end loop;		
	valor		:= soma - somaDig;
	cd_digito_w 	:= substr(to_char(valor),length(to_char(valor)),1);	
	end;
elsif (UPPER(ie_rotina_p) = 'AIH') then
	begin
	var1aih	:= (substr(cd_codigo_p,1,length(cd_codigo_p)-1))::numeric;
	var2aih	:= var1aih;
	var3aih	:= trunc(var2aih / 11);
	var4aih	:= (var2aih - var3aih);
	tamanho     := length(var4aih);
	cd_digito_w	:= (substr(var4aih,tamanho,1))::numeric;
	end;
elsif (UPPER(ie_rotina_p) = 'BLOQUETO') then
        begin
	tamanho        := length(cd_codigo_p);
	peso_string_w  := '4329?876543298765432987654329876543298765432';
	soma	       := 0;
	if (tamanho = 44) then
	    begin
            FOR i in 1..tamanho loop
		if (substr(peso_string_w,i,1) <> '?') then
		    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
				    (substr(peso_string_w,i,1))::numeric );
		end if;
	    end loop;

 	    cd_digito_w := 11 - soma + (trunc(soma/11,0) * 11);
	    if (cd_digito_w in (0,10,11)) then
		cd_digito_w := 1;
	    end if;
	    end;		
	end if;

	end;
elsif (UPPER(ie_rotina_p) = 'MODULO11_BH') then
        begin
	tamanho        := length(cd_codigo_p);
	peso_string_w  := '987654329876543298765432';
	soma	       := 0;
        for i in 1..tamanho loop
	    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;

	cd_digito_w := 11 - (Soma mod 11);
	if (cd_digito_w > 9) then
      		cd_digito_w	:= 0;
	end if;

	end;

/* Felipe - OS68137 - 13/09/2007 */

elsif (UPPER(ie_rotina_p) = 'FIOPREV') then
	begin
	tamanho        	:= length(cd_codigo_p);
	peso_string_w	:= '121212';
	soma		:= 0;
	for i in 1..tamanho loop
		valor	:= 	((substr(cd_codigo_p,i,1))::numeric  *
				(substr(peso_string_W,i,1))::numeric );
		if (valor > 9) then
			valor	:= valor - 9;
		end if;
		soma	:= soma + valor;
	end loop;

	cd_digito_w	:= 10 - MOD(soma,10);
	if (cd_digito_w	= 10) then
		cd_digito_w	:= 0;
	end if;
	end;
/* Elton - OS100548 - 28/07/2008 */

elsif (UPPER(ie_rotina_p) = 'MODULO11_B7') then
        begin
	tamanho        := length(cd_codigo_p);
	peso_string_w  := '2765432765432765432765432';
	soma	       := 0;
        for i in 1..tamanho loop
	    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;
	cd_digito_w := 11 - (Soma mod 11);
	if (cd_digito_w >= 10) then -- Elton em 26/02/2010 OS 196355, alterado para >=.
      		cd_digito_w	:= 0;
	end if;
	end;
/* ahoffelder - OS153577 - 16/07/2009 */

elsif (UPPER(ie_rotina_p) = 'BANCOOB') then
        begin
	tamanho        := length(cd_codigo_p);
	peso_string_w  := '319731973197319731973';
	soma	       := 0;
        for i in 1..tamanho loop
	    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;
	
	/* Francisco - 07/02/2012 - OS 412042 - Tinha que tratar 0 ou 1 pelo resto do mod 11 e nao pelo digito ja calculado */

	if  	((Soma mod 11) <= 1) then
      		cd_digito_w	:= 0;
	else
		cd_digito_w := 11 - (Soma mod 11);
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'BANRISUL') then
        begin
	tamanho         := coalesce(length(cd_codigo_p),0);
	peso_String_w	:= '121212121212121212121212121212';
	peso_string_w	:= substr(peso_string_w, length(peso_string_w) - tamanho + 1,tamanho);
	soma		:= 0;
	for i IN REVERSE tamanho..1 loop
		begin
		soma := soma + 	((substr(cd_codigo_p,i,1))::numeric  *
				 (substr(peso_string_w,i,1))::numeric );
		if ((substr(cd_codigo_p,i,1))::numeric  *
 		    (substr(peso_string_w,i,1))::numeric  > 9) then
		    soma := soma - 9;
		end if;
		end;
	end loop;		
	cd_m10_w := 10 - (Soma mod 10);
	if (cd_m10_w = 10) then
	    cd_m10_w := 0;
	end if;
	end;
	
	begin
	Peso          	:= 2;
	Tamanho       	:= Length(cd_codigo_p||cd_m10_w);
	--r.aise_application_error(-20011,'cd_codigo_p||cd_m10_w'||cd_codigo_p||cd_m10_w);
	soma		:= 0;
	valor		:= 0;
	if (Tamanho > 0) then
    		begin
		FOR i IN REVERSE Tamanho..1 LOOP
			begin
        		Valor := (Substr(cd_codigo_p||cd_m10_w, i, 1))::numeric;
        		Soma  := Soma + (Valor * Peso);
        		peso	:= Peso + 1;
        		if (peso > 7) then
				peso 	:= 2;
			end if;
        		end;
		END LOOP;
    		Soma      	:= Soma * 10;
		cd_m11_w := mod(Soma,11);
		if (cd_m11_w > 9) then
        		cd_m11_w	:= 'X';
		end if;
		end;
		if (cd_m11_w = 'X') then
			cd_m10_w := cd_m10_w + 1;
			if (cd_m10_w = '10') then
				cd_m10_w := '0';
			end if;
			Peso          	:= 2;
			Tamanho       	:= Length(cd_codigo_p||cd_m10_w);
			soma		:= 0;
			valor		:= 0;
			if (Tamanho > 0) then
				begin
				FOR i IN REVERSE Tamanho..1 LOOP
					begin
					Valor := (Substr(cd_codigo_p||cd_m10_w, i, 1))::numeric;
					Soma  := Soma + (Valor * Peso);
					peso	:= Peso + 1;
					if (peso > 7) then
						peso 	:= 2;
					end if;
					end;
				END LOOP;
				Soma     := Soma * 10;
				cd_m11_w := mod(Soma,11);
				if (cd_m11_w > 9) then
					cd_m11_w	:= 0;
				end if;
				exception
				when others then
					cd_m11_w	:= 5;
				end;
			end if;
		end if;
	end if;
	end;
	cd_digito_w := cd_m10_w||cd_m11_w;
elsif (upper(ie_rotina_p) = 'BANRISUL_MOD11') then
	/* Rotina para calculo do digito verificador  da conta corrente Banrisul  OS 1122248
	O codigo de conta-corrente BANRISUL e composto pelos elementos Especie,
	Cliente,Conta e Check-Digit, no formato EENNNNNNCD, onde
	EE - especie (valor padrao 35)
	NNNNNN - cliente
	C - conta
	D - check-digit ( modulo 11). */
	begin
	cd_codigo_w	:= cd_codigo_p;
	if (length(cd_codigo_w) <= 7) then
		cd_codigo_w := '35'||lpad(cd_codigo_w,7,'0');
	end if;
	tamanho         := coalesce(length(cd_codigo_w),0);
	peso_String_w	:= '324765432';
	soma		:= 0;
	if (length(peso_String_w) = tamanho) then
		FOR i IN REVERSE tamanho..1 loop
			begin
			soma := soma + 	((substr(cd_codigo_w,i,1))::numeric  *
					 (substr(peso_string_w,i,1))::numeric );
			end;
		end loop;
		-- quando o resto da divisao for ZERO, o check-digit sera ZERO. 
		if ((soma mod 11) = 0) then
			cd_digito_w := 0;
		-- quando o resto da divisao for 1 (um), o check-digit sera 6 (seis).
		elsif ((soma mod 11) = 1) then
			cd_digito_w := 6;
		else
			cd_digito_w := 11 - (soma mod 11);
		end if;
	end if;
	end;
	
/* Francisco - 23/11/2010 - OS 227787 - Tem que tratar diferente para o Bradesco */

elsif (UPPER(ie_rotina_p) = 'MODULO11_BRAD') then
        begin
	tamanho        := length(cd_codigo_p);
	peso_string_w  := '2765432765432765432765432';
	soma	       := 0;
        FOR i in 1..tamanho loop
	    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;
	cd_digito_w := 11 - (Soma mod 11);
	
	if	((Soma mod 11) = 0) then
		cd_digito_w	:= 0;
	elsif (cd_digito_w >= 10) then
      		cd_digito_w	:= -1;
	end if;
	end;
/* ahoffelder - OS 347852 - 05/10/2011 */

elsif (UPPER(ie_rotina_p) = 'MODULO11_HSBC') then
        begin
	tamanho		:= length(cd_codigo_p);
	peso_string_w	:= '5432765432';
	soma		:= 0;
        for i IN REVERSE tamanho..1 loop
	    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;
	cd_digito_w := 11 - (Soma mod 11);
	if (cd_digito_w >= 10) then -- Elton em 26/02/2010 OS 196355, alterado para >=.
      		cd_digito_w	:= 0;
	end if;
	end;	
-- wcbernardino - OS 356620 - 13/10/2011 	
elsif (upper(ie_rotina_p) = 'MODULO11_SANT') then
        begin
	tamanho		:= length(cd_codigo_p);
	peso_string_w	:= '234567892345678923456789';
	soma		:= 0;
	cd_codigo_ww	:= 0;
	resto_divisao_w	:= 0;
	
        FOR i IN REVERSE tamanho..1 loop
		cd_codigo_w := cd_codigo_w || substr(cd_codigo_p,i,1);
	end loop;

	FOR i in 1..tamanho loop
		soma := soma + ((substr(cd_codigo_w,i,1))::numeric  * 
				(substr(peso_string_w,i,1))::numeric );
	end loop;
	
	resto_divisao_w := (soma mod 11);
	
	if (resto_divisao_w = 10) then
      		cd_digito_w	:= 1;
	elsif (resto_divisao_w = 0) or (resto_divisao_w = 1) then
		cd_digito_w	:= 0;
	else
		cd_digito_w := 11 - resto_divisao_w;
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'MODULO11_SIC') then
	begin
	Peso          	:= 2;
	Tamanho       	:= Length(cd_codigo_p);
	if (Tamanho > 0) then
    	begin
		FOR i IN REVERSE Tamanho..1 LOOP
			begin
        		Valor := (Substr(cd_codigo_p, i, 1))::numeric;
        		Soma  := Soma + (Valor * Peso);
        		peso	:= Peso + 1;
        		if (peso > 9) then
				peso 	:= 2;
			end if;
        		end;
	    END LOOP;
    		Soma      	:= Soma * 10;
    		cd_digito_w := mod(Soma,11);
    		if (cd_digito_w > 9) then
        		cd_digito_w	:= 0;
		end if;
		exception
		when others then
			cd_digito_w	:= 5;
		end;
	end if;
	end;

/* ahoffelder - OS589252 - 05/06/2013 */

elsif (UPPER(ie_rotina_p) = 'SICOOB') then
        begin
	tamanho        := length(ltrim(cd_codigo_p,'0'));
	peso_string_w  := '319731973197319731973';
	soma	       := 0;
        FOR i IN REVERSE tamanho..1 loop
	    soma := soma + ((substr(ltrim(cd_codigo_p,'0'),i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;
	
	/* Francisco - 07/02/2012 - OS 412042 - Tinha que tratar 0 ou 1 pelo resto do mod 11 e nao pelo digito ja calculado */

	if  	((Soma mod 11) <= 1) then
      		cd_digito_w	:= 0;
	else
		cd_digito_w := 11 - (Soma mod 11);
	end if;
	end;
elsif (UPPER(ie_rotina_p) = 'SICREDI') then
	begin
	tamanho        := length(cd_codigo_p);
	peso_string_w  := '987654329876543298765432';
	soma	       := 0;
	divisor_sicredi_w := 0;
        FOR i in 1..tamanho loop
	    soma := soma + ((substr(cd_codigo_p,i,1))::numeric  *
			    (substr(peso_string_w,i,1))::numeric );
	end loop;
	
	divisor_sicredi_w	:= trunc(soma / 11);
	
	mult_sicredi_w	:= (divisor_sicredi_w * 11);
	
	subtracao_sicredi_w := (soma - mult_sicredi_w);
	
	if (subtracao_sicredi_w in (0,1)) then
      		cd_digito_w	:= 0;
	else
		cd_digito_w := 11 - subtracao_sicredi_w;
	end if;
	
	end;
elsif (upper(ie_rotina_p) = 'MOD11_HSBC_V5') then
 	begin	
	
	tamanho		:= length(cd_codigo_p);
	peso_string_w	:= '987654329876543298765432';
	soma		:= 0;
	resto_divisao_w	:= 0;
	
   	 for i IN REVERSE tamanho..1 loop
		cd_codigo_w := cd_codigo_w || substr(cd_codigo_p,i,1);
	end loop;

	for i in 1..tamanho loop
		soma := soma + ((substr(cd_codigo_w,i,1))::numeric  *
				(substr(peso_string_w,i,1))::numeric );
	end loop;
	
	resto_divisao_w := (soma mod 11);
	
	if (resto_divisao_w = 10) then
      	cd_digito_w	:= 0;
	else	
		cd_digito_w:= resto_divisao_w;
	end if;
	end;
elsif (upper(ie_rotina_p) = 'CABESP') then
 	begin
        tamanho		        := length(cd_codigo_p);
        peso_string_w	        := '876543298765432';
        soma                    := 0;
        cd_codigo_w	        := 0;
        resto_divisao_w	        := 0;
        inicio_w                := 0;
        cd_digito_w             := 0;

        if tamanho = 10 then
                cd_codigo_w := cd_codigo_p || substr(cd_codigo_p,-1,1);
                tamanho := tamanho + 1;
        else
                cd_codigo_w := cd_codigo_p;
        end if;

        inicio_w := (length(peso_string_w) - tamanho) + 1;
        peso_string_w := substr(peso_string_w,inicio_w,tamanho);

        for i in 1..tamanho loop
                soma := soma + ((substr(cd_codigo_w,i,1))::numeric  * (substr(peso_string_w,i,1))::numeric );
        end loop;

        resto_divisao_w := (soma mod 11);

        if (((11-resto_divisao_w) < 10) and ((11-resto_divisao_w) > 0)) then
                cd_digito_w := (11-resto_divisao_w);
        else
                cd_digito_w := '0';
        end if;

        cd_codigo_w := cd_codigo_w || cd_digito_w;
        tamanho := tamanho + 1;
        peso_string_w := '9876543298765432';
        soma := 0;

        inicio_w := (length(peso_string_w) - tamanho) + 1;
        peso_string_w := substr(peso_string_w,inicio_w,tamanho);

        for i in 1..tamanho loop
        soma := soma + ((substr(cd_codigo_w,i,1))::numeric  * (substr(peso_string_w,i,1))::numeric );
        end loop;

        resto_divisao_w := (soma mod 11);

        if (((11-resto_divisao_w) < 10) and ((11-resto_divisao_w) > 0)) then
                cd_digito_w := cd_digito_w || (11-resto_divisao_w);
        else
                cd_digito_w := cd_digito_w || '0';
        end if;

        end;	
end if;

exception when data_exception then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(337194);
end;

RETURN cd_digito_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION calcula_digito ( ie_Rotina_p text, cd_codigo_p text) FROM PUBLIC;

