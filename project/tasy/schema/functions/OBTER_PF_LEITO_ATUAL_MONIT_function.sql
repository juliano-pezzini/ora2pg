-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function obter_pf_leito_atual_monit as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION obter_pf_leito_atual_monit ( cd_pessoa_fisica_p text) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM obter_pf_leito_atual_monit_atx ( ' || quote_nullable(cd_pessoa_fisica_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION obter_pf_leito_atual_monit_atx ( cd_pessoa_fisica_p text) RETURNS varchar AS $body$
DECLARE
/* 	Verifica Unidade Atual  	*/



/* Informacao
	M = Leito Monitorado
*/
ds_unidade_w			varchar(255);
ie_informacao_w			varchar(10);
nr_seq_interno_w			bigint;
cd_setor_atendimento_w		bigint;
cd_unidade_basica_w		varchar(010);
cd_unidade_compl_w		varchar(010);
nr_atendimento_w			bigint;


BEGIN

ie_informacao_w := 'M';

select 	max(a.nr_atendimento)
into STRICT	nr_atendimento_w
from 	unidade_atendimento c,
	atend_paciente_unidade b,
	atendimento_paciente a
where	a.cd_pessoa_fisica = cd_pessoa_fisica_p
and	a.nr_atendimento = b.nr_atendimento
and	coalesce(b.dt_saida_unidade::text, '') = ''
and	b.cd_setor_atendimento = c.cd_setor_atendimento
and	b.CD_UNIDADE_COMPL = c.CD_UNIDADE_COMPL
and	b.CD_UNIDADE_BASICA = c.CD_UNIDADE_BASICA
and	c.ie_leito_monitorado	= 'S'
and	coalesce(a.dt_alta::text, '') = '';

if (coalesce(nr_atendimento_w,0) > 0) then
	begin
/*	nr_seq_interno_w	:= obter_atepacu_paciente(nr_atendimento_w, 'A');
	if	(ie_informacao_w = 'M') then
		begin
		select 	a.cd_setor_atendimento,
			a.cd_unidade_basica,
			a.cd_unidade_compl
		into	cd_setor_atendimento_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w
		from	atend_paciente_unidade a
		where	a.nr_seq_interno = nr_seq_interno_w;
		exception
			when others then
				cd_setor_atendimento_w	:= 0;
				cd_unidade_basica_w	:= '';
				cd_unidade_compl_w	:= '';
		end;

		begin
		select	nvl(a.ie_leito_monitorado,'N')
		into	ds_unidade_w
		from	unidade_atendimento a
		where	a.cd_setor_atendimento	= cd_setor_atendimento_w
		and	a.cd_unidade_basica	= cd_unidade_basica_w
		and	a.cd_unidade_compl	= cd_unidade_compl_w;
		exception
			when others then
				ds_unidade_w	:= '';
		end;*/
		ds_unidade_w	:= 'S';
	--end if;
	end;
else
	ds_unidade_w := 'N';
end if;

return ds_unidade_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_pf_leito_atual_monit ( cd_pessoa_fisica_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION obter_pf_leito_atual_monit_atx ( cd_pessoa_fisica_p text) FROM PUBLIC;

