-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_ret_movto_glosa ( nr_seq_ret_glosa_p bigint, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE


nr_seq_ret_item_w		bigint;
nr_seq_propaci_w		bigint;
nr_seq_matpaci_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w	bigint;
cd_material_w		integer;
qt_glosa_w			double precision;
vl_glosa_w			double precision;
cd_setor_atendimento_w	integer;
dt_execucao_w		timestamp;
qt_cobrada_w		double precision;
qt_negativo_w		double precision := 0;
vl_total_w			double precision;
vl_total_negativo_w	double precision := 0;
vl_unitario_w		double precision;
vl_unitario_negativo_w	double precision := 0;
ds_retorno_w		varchar(20);
vl_unit_glosa_w		double precision;
nr_interno_conta_w	bigint;
nr_seq_item_movto_w	bigint;
qt_partic_w		bigint;
qt_registros_w		integer;
nr_seq_partic_w		bigint;
ie_participante_w	varchar(20);
ie_repasse_vinculado_w	varchar(20);
vl_amaior_w		double precision;
ie_custo_operacional_w	convenio_retorno_glosa.ie_custo_operacional%type;
ie_agrup_w		varchar(1);
ie_partic_w		varchar(1) := 'S';
vl_desconto_w		convenio_retorno_glosa.vl_desconto_item%type;


BEGIN
ie_agrup_w := obter_param_usuario(27, 24, obter_perfil_ativo(), wheb_usuario_pck.get_nm_usuario(), wheb_usuario_pck.get_cd_estabelecimento(), ie_agrup_w);

select	max(nr_seq_ret_item),
	max(nr_seq_propaci),
	max(nr_seq_matpaci),
	max(cd_procedimento),
	max(ie_origem_proced),
	max(cd_material),
	max(qt_glosa),
	max(vl_glosa),
	max(cd_setor_atendimento),
	max(nr_seq_partic),
	max(vl_amaior),
	coalesce(max(ie_custo_operacional),'N'),
	coalesce(max(vl_desconto_item),0)
into STRICT	nr_seq_ret_item_w,
	nr_seq_propaci_w,
	nr_seq_matpaci_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_material_w,
	qt_glosa_w,
	vl_glosa_w,
	cd_setor_atendimento_w,
	nr_seq_partic_w,
	vl_amaior_w,
	ie_custo_operacional_w,
	vl_desconto_w
from	convenio_retorno_glosa
where	nr_sequencia = nr_seq_ret_glosa_p;

select	nr_interno_conta
into STRICT	nr_interno_conta_w
from	convenio_retorno_item
where	nr_sequencia = nr_seq_ret_item_w;

ie_participante_w	:= 'N';

if (ie_agrup_w not in ('N')) then
	if (nr_seq_matpaci_w IS NOT NULL AND nr_seq_matpaci_w::text <> '') then

		select	count(*)
		into STRICT	qt_registros_w
		from	material_atend_paciente
		where	cd_material = cd_material_w
		and		nr_interno_conta = nr_interno_conta_w
		and		cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);

		if (qt_registros_w > 1) then
			nr_seq_matpaci_w 	:= null;
		end if;
	elsif (nr_seq_propaci_w IS NOT NULL AND nr_seq_propaci_w::text <> '') and (ie_agrup_w not in ('N','M')) then

		select	count(*)
		into STRICT	qt_registros_w
		from	procedimento_paciente
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w
		and	nr_interno_conta = nr_interno_conta_w
		and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);
		
		select	CASE WHEN coalesce(obter_participantes_proc(nr_seq_propaci_w)::text, '') = '' THEN 'N'  ELSE 'S' END
		into STRICT	ie_partic_w
		;

		if (qt_registros_w > 1) and (ie_partic_w = 'N') then
			nr_seq_propaci_w 	:= null;
			nr_seq_partic_w		:= null;
		end if;
	end if;
end if;

if (nr_seq_propaci_w IS NOT NULL AND nr_seq_propaci_w::text <> '') then
	if (coalesce(nr_seq_partic_w,0) <> 0) then
		select	dt_procedimento,
			qt_procedimento,
			b.vl_participante,
			dividir(b.vl_participante, qt_procedimento),
			'S' ie_participante
		into STRICT	dt_execucao_w,
			qt_cobrada_w,
			vl_total_w,
			vl_unitario_w,
			ie_participante_w
		from	procedimento_paciente a,
			procedimento_participante b
		where	a.nr_sequencia	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_propaci_w
		and	b.nr_seq_partic	= nr_seq_partic_w;
	elsif (ie_custo_operacional_w = 'N') then
		select	coalesce(count(*),0)
		into STRICT	qt_partic_w
		from	convenio_retorno_glosa
		where	nr_seq_ret_item	= nr_seq_ret_item_w
		and	nr_seq_propaci	= nr_seq_propaci_w
		and	(nr_seq_partic IS NOT NULL AND nr_seq_partic::text <> '');

		if (qt_partic_w > 0) then
			select	dt_procedimento,
				qt_procedimento,
				vl_medico + coalesce(vl_custo_operacional,0) + coalesce(vl_materiais,0) + coalesce(vl_auxiliares,0) + coalesce(vl_anestesista,0),
				dividir(vl_medico + coalesce(vl_custo_operacional,0) + coalesce(vl_materiais,0) + coalesce(vl_auxiliares,0) + coalesce(vl_anestesista,0), qt_procedimento),
				'S' ie_participante
			into STRICT	dt_execucao_w,
				qt_cobrada_w,
				vl_total_w,
				vl_unitario_w,
				ie_participante_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_propaci_w;
		else
			select	dt_procedimento,
				qt_procedimento,
				vl_procedimento,
				dividir(vl_procedimento, qt_procedimento),
				'N' ie_participante
			into STRICT	dt_execucao_w,
				qt_cobrada_w,
				vl_total_w,
				vl_unitario_w,
				ie_participante_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_propaci_w;
		end if;

		if (ie_agrup_w not in ('N','M')) then
			select	coalesce(sum(vl_procedimento * -1),0),
				coalesce(sum(qt_procedimento * -1),0),
				coalesce(dividir_sem_round(sum(vl_procedimento),sum(qt_procedimento)),0)
			into STRICT	vl_total_negativo_w,
				qt_negativo_w,
				vl_unitario_negativo_w		
			from	procedimento_paciente a
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w
			and	nr_interno_conta = nr_interno_conta_w
			and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
			and	nr_sequencia <> nr_seq_propaci_w
			and	qt_procedimento < 0;
		end if;
		
	elsif (ie_custo_operacional_w = 'S') then
		
		select	dt_procedimento,
			qt_procedimento,
			VL_CUSTO_OPERACIONAL,
			dividir(VL_CUSTO_OPERACIONAL, qt_procedimento)
		into STRICT	dt_execucao_w,
			qt_cobrada_w,
			vl_total_w,
			vl_unitario_w
		from	procedimento_paciente
		where	nr_sequencia = nr_seq_propaci_w;
		
		if (ie_agrup_w not in ('N','M')) then
			select	coalesce(sum(VL_CUSTO_OPERACIONAL * -1),0),
				coalesce(sum(qt_procedimento * -1),0),
				coalesce(dividir_sem_round(sum(VL_CUSTO_OPERACIONAL),sum(qt_procedimento)),0)
			into STRICT	vl_total_negativo_w,
				qt_negativo_w,
				vl_unitario_negativo_w		
			from	procedimento_paciente a
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w
			and	nr_interno_conta = nr_interno_conta_w
			and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
			and	nr_sequencia <> nr_seq_propaci_w
			and	qt_procedimento < 0;
		end if;
	end if;
	
	
elsif (nr_seq_matpaci_w IS NOT NULL AND nr_seq_matpaci_w::text <> '') then
	select	dt_atendimento,
		qt_material,
		vl_material,
		vl_unitario
	into STRICT	dt_execucao_w,
		qt_cobrada_w,
		vl_total_w,
		vl_unitario_w
	from material_atend_paciente
	where nr_sequencia = nr_seq_matpaci_w;
	
	if (ie_agrup_w not in ('N')) then
		select	coalesce(sum(vl_material * -1),0),
			coalesce(sum(qt_material * -1),0),
			coalesce(dividir_sem_round(sum(vl_material),sum(qt_material)),0)
		into STRICT	vl_total_negativo_w,
			qt_negativo_w,
			vl_unitario_negativo_w		
		from	material_atend_paciente a
		where	cd_material = cd_material_w
		and	nr_interno_conta = nr_interno_conta_w
		and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
		and	nr_sequencia <> nr_seq_matpaci_w
		and	qt_material < 0;
	end if;
	
elsif (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
	select	/*+ index(a PROPACI_CONPACI_I) */	
		max(dt_procedimento),	
		sum(qt_procedimento),
		sum(vl_procedimento),
		dividir_sem_round(sum(vl_procedimento), sum(qt_procedimento))
	into STRICT	dt_execucao_w,
		qt_cobrada_w,
		vl_total_w,
		vl_unitario_w
	from	procedimento_paciente a
	where	cd_procedimento = cd_procedimento_w
	and	ie_origem_proced = ie_origem_proced_w
	and	nr_interno_conta = nr_interno_conta_w
	and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);
elsif (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
	select	/*+ index(a MATPACI_CONPACI_I) */	
		max(dt_atendimento),	
		sum(qt_material),
		sum(vl_material),
		dividir_sem_round(sum(vl_material),sum(qt_material))
	into STRICT	dt_execucao_w,
		qt_cobrada_w,
		vl_total_w,
		vl_unitario_w
	from	material_atend_paciente a
	where	cd_material = cd_material_w
	and	nr_interno_conta = nr_interno_conta_w
	and	cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento);
end if;

if (ie_opcao_p = 1) then
	select coalesce(to_char(max(hr_execucao)),to_char(dt_execucao_w,'hh24:mi'))
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
elsif (ie_opcao_p = 2) then
	select CASE WHEN coalesce(sum(vl_cobrado),0)=0 THEN vl_total_w  ELSE coalesce(sum(vl_cobrado),0) END
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
elsif (ie_opcao_p = 3) then

	select  coalesce(max(nr_Sequencia),0)
	into STRICT	nr_seq_item_movto_w
	from	convenio_retorno_movto
	where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	if (nr_seq_item_movto_w > 0) then
		select coalesce(sum(CASE WHEN vl_amaior_w=0 THEN  vl_total_pago  ELSE vl_total_pago - vl_amaior_w END ),0)
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	else
		select	CASE WHEN coalesce(sum(vl_total_pago),0)=0 THEN  vl_total_w - vl_total_negativo_w - vl_glosa_w  ELSE coalesce(sum(vl_total_pago),0) END  + coalesce(vl_amaior_w,0)
		into STRICT	ds_retorno_w
		from	convenio_retorno_movto
		where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
		
		if ((ds_retorno_w)::numeric  > 0) then --só desconta o desconto se tiver valor pago, para não ficar negativo.
			ds_retorno_w := ds_retorno_w - vl_desconto_w;
		end if;
	end if;	
	
elsif (ie_opcao_p = 4) then

	select CASE WHEN coalesce(sum(qt_cobrada),0)=0 THEN qt_cobrada_w  ELSE coalesce(sum(qt_cobrada),0) END
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;

elsif (ie_opcao_p = 5) then

	select  coalesce(max(nr_Sequencia),0)
	into STRICT	nr_seq_item_movto_w
	from	convenio_retorno_movto
	where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	if (nr_seq_item_movto_w > 0) then
	
		select coalesce(sum(qt_paga),0)
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	else
		select CASE WHEN coalesce(sum(qt_paga),0)=0 THEN qt_cobrada_w - qt_glosa_w - qt_negativo_w  ELSE coalesce(sum(qt_paga),0) END
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	end if;
elsif (ie_opcao_p = 6) then
	select CASE WHEN coalesce(sum(dividir(vl_cobrado,qt_cobrada)),0)=0 THEN vl_unitario_w  ELSE coalesce(sum(dividir(vl_cobrado,qt_cobrada)),0) END
	into STRICT ds_retorno_w
	from convenio_retorno_movto
	where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
elsif (ie_opcao_p = 7) then
	select	dividir(vl_total_w - vl_total_negativo_w - vl_glosa_w, qt_cobrada_w - coalesce(qt_glosa_w,0))
	into STRICT	vl_unit_glosa_w
	;
	
	if (vl_unit_glosa_w = 0) then --quando qt cobrado = qt glosa, entao faz a diferenca para o valor pago unit.
		if (dividir_sem_round(vl_glosa_w * qt_glosa_w, vl_total_w) > 0.00) then --se o proporcional ultrapassar o valor.
			vl_unit_glosa_w := dividir_sem_round(vl_total_w - vl_total_negativo_w - vl_glosa_w, qt_cobrada_w); --calcula a mesma coisa mas com base na quantidade cobrada.
		else		
			vl_unit_glosa_w := dividir_sem_round(vl_glosa_w, dividir_sem_round(vl_glosa_w * qt_glosa_w, vl_total_w)) - vl_glosa_w;
		end if;
	end 	if;
	
	select  coalesce(max(nr_Sequencia),0)
	into STRICT	nr_seq_item_movto_w
	from	convenio_retorno_movto
	where	nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	
	if (nr_seq_item_movto_w > 0) then
		select coalesce(sum(vl_pago),0)
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
	else
		select CASE WHEN coalesce(sum(vl_pago),0)=0 THEN  CASE WHEN vl_total_w=vl_glosa_w THEN 0  ELSE CASE WHEN vl_unit_glosa_w=0 THEN  vl_unitario_w - vl_unitario_negativo_w - vl_glosa_w  ELSE vl_unit_glosa_w END  END    ELSE coalesce(sum(vl_pago),0) END
		into STRICT ds_retorno_w
		from convenio_retorno_movto
		where nr_seq_ret_glosa = nr_seq_ret_glosa_p;
		
		if ((ds_retorno_w)::numeric  > 0) then --só desconta o desconto se tiver valor pago, para não ficar negativo.
			ds_retorno_w := ds_retorno_w - vl_desconto_w;
		end if;		
        end if;
	
elsif (ie_opcao_p = 8) then
        select  max(nr_sequencia)
        into STRICT    ie_repasse_vinculado_w
        from    procedimento_repasse
        where   nr_seq_ret_glosa = nr_seq_ret_glosa_p;

        if (coalesce(ie_repasse_vinculado_w::text, '') = '') then
                select  max(nr_sequencia)
                into STRICT    ie_repasse_vinculado_w
                from    material_repasse
                where   nr_seq_ret_glosa = nr_seq_ret_glosa_p;
        end if;
	
	if (ie_repasse_vinculado_w IS NOT NULL AND ie_repasse_vinculado_w::text <> '') then
		ds_retorno_w	:= 'S';
	else
		ds_retorno_w	:= 'N';
	end if;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_ret_movto_glosa ( nr_seq_ret_glosa_p bigint, ie_opcao_p bigint) FROM PUBLIC;

