-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_horarios_dieta (nr_prescricao_p bigint, cd_dieta_p bigint) RETURNS varchar AS $body$
DECLARE


ds_horarios_w		varchar(5);
nr_atendimento_w		bigint;
dt_liberacao_prescr_w	timestamp;
dt_inicio_prescr_w	timestamp;
dt_validade_prescr_w	timestamp;
dt_horario_ref_w		timestamp;
ie_gerar_horario_w		varchar(1) := 'S';
qt_horario_w		bigint;
ds_horarios_ww		varchar(2000) := null;

c01 CURSOR FOR
SELECT	ds_horarios
from	horario_refeicao_dieta
where	((cd_dieta = cd_dieta_p) or ((coalesce(cd_dieta::text, '') = '') and (obter_se_dieta_hor_excl_ref(cd_dieta_p,cd_refeicao) = 'N')))
order by
	ds_horarios,
	nr_sequencia;


BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (cd_dieta_p IS NOT NULL AND cd_dieta_p::text <> '') then

	/* obter dados prescrição */

	select	nr_atendimento,
		coalesce(dt_liberacao,clock_timestamp()),
		dt_inicio_prescr,
		dt_validade_prescr
	into STRICT	nr_atendimento_w,
		dt_liberacao_prescr_w,
		dt_inicio_prescr_w,
		dt_validade_prescr_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	/* obter horários */

	open c01;
	loop
	fetch c01 into ds_horarios_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		/* gerar horário refeição */

		dt_horario_ref_w := to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy') || ' ' || ds_horarios_w || ':00','dd/mm/yyyy hh24:mi:ss');

		/* validar data x data atual */

		if (dt_horario_ref_w < dt_liberacao_prescr_w) and (dt_horario_ref_w+1<= dt_validade_prescr_w) then
			dt_horario_ref_w	:= dt_horario_ref_w + 1;
			ie_gerar_horario_w 	:= 'S';
		elsif (dt_horario_ref_w < dt_liberacao_prescr_w) then
			ie_gerar_horario_w	:= 'N';
		elsif (dt_horario_ref_w > dt_liberacao_prescr_w) and (dt_horario_ref_w < dt_inicio_prescr_w) then
			dt_horario_ref_w 	:= dt_horario_ref_w + 1;
			ie_gerar_horario_w 	:= 'S';
		else
			ie_gerar_horario_w	:= 'S';
		end if;

		/* validar horário x horários já gerados */

		/*
		select	count(*)
		into	qt_horario_w
		from	prescr_dieta_hor
		where	dt_horario = dt_horario_ref_w
		and	obter_atendimento_prescr(nr_prescricao) = nr_atendimento_w;
		*/
		qt_horario_w := 0;

		/* gerar horário */

		if (ie_gerar_horario_w = 'S') and (qt_horario_w = 0) and (dt_horario_ref_w < dt_validade_prescr_w) and (dt_horario_ref_w >= dt_inicio_prescr_w) then

			if (coalesce(ds_horarios_ww::text, '') = '') then
				ds_horarios_ww	:= ds_horarios_w;
			elsif (coalesce(length(ds_horarios_ww),0) < 1740) then
				ds_horarios_ww	:= ds_horarios_ww || ' ' || ds_horarios_w;
			end if;

		end if;

		end;
	end loop;
	close c01;

end if;

return ds_horarios_ww;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_horarios_dieta (nr_prescricao_p bigint, cd_dieta_p bigint) FROM PUBLIC;

