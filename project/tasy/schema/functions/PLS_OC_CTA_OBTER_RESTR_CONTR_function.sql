-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_obter_restr_contr ( ie_opcao_p text, dados_regra_p pls_tipos_ocor_pck.dados_regra, cursor_p integer, dados_filtro_contr_p pls_tipos_ocor_pck.dados_filtro_contr) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Reponsável por montar a restrição para aplicar em um filtro de contrato da ocorrência combinada.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_restricao_w		varchar(4000);
ds_select_contr_w	varchar(4000);
ds_filtro_contr_w	varchar(4000);

BEGIN

--Inicializar as variáveis.
ds_filtro_contr_w	:= null;
ds_restricao_w		:= null;

-- Montar o subselect base.
ds_select_contr_w :=	pls_tipos_ocor_pck.enter_w ||
			'and	exists (select	1 ' || pls_tipos_ocor_pck.enter_w||
			'		from	pls_segurado_conta_v benef ' || pls_tipos_ocor_pck.enter_w||
			'		where	benef.nr_sequencia = conta.nr_seq_segurado ';

-- Contrato
if (dados_filtro_contr_p.nr_contrato IS NOT NULL AND dados_filtro_contr_p.nr_contrato::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		ds_filtro_contr_w :=	ds_filtro_contr_w || pls_tipos_ocor_pck.enter_w ||
					'			and	benef.nr_contrato = :nr_contrato ';
	else
		dbms_sql.bind_variable(cursor_p, ':nr_contrato', dados_filtro_contr_p.nr_contrato);
	end if;
end if;

-- Grupo de contrato
if (dados_filtro_contr_p.nr_seq_grupo_contrato IS NOT NULL AND dados_filtro_contr_p.nr_seq_grupo_contrato::text <> '') then

	if (ie_opcao_p = 'RESTRICAO') then

		ds_filtro_contr_w :=	ds_filtro_contr_w || pls_tipos_ocor_pck.enter_w ||
					'			and	exists	(select	1' || pls_tipos_ocor_pck.enter_w ||
					'					from	pls_preco_contrato x ' || pls_tipos_ocor_pck.enter_w ||
					'					where	x.nr_seq_grupo = :nr_seq_grupo_contrato ' || pls_tipos_ocor_pck.enter_w ||
					'					and	x.nr_seq_contrato = benef.nr_seq_contrato)';
	else
		dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo_contrato', dados_filtro_contr_p.nr_seq_grupo_contrato);
	end if;
end if;

-- Sé executa a filtragem se tiver algum campo informado no filtro de contrato.
if (ds_filtro_contr_w IS NOT NULL AND ds_filtro_contr_w::text <> '') then

	ds_restricao_w :=	ds_select_contr_w || pls_tipos_ocor_pck.enter_w ||
				ds_filtro_contr_w || '		)';
end if;

return	ds_restricao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_obter_restr_contr ( ie_opcao_p text, dados_regra_p pls_tipos_ocor_pck.dados_regra, cursor_p integer, dados_filtro_contr_p pls_tipos_ocor_pck.dados_filtro_contr) FROM PUBLIC;

