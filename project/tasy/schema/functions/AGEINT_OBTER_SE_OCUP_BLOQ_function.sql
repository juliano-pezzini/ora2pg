-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_obter_se_ocup_bloq ( cd_agenda_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, hr_inicial_p timestamp, hr_final_p timestamp, ie_dia_semana_p bigint, ie_agenda_p text, ie_classif_bloqueio_p text, cd_medico_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w	varchar(1)	:= 'N';
qt_pac_agenda_w	bigint;
qt_consulta_w	bigint;
qt_agenda_exame_w	bigint;
hr_inicial_w	timestamp;
hr_final_w	timestamp;
			

BEGIN	
if (ie_agenda_p	= 'E') then
	begin
	select	1
	into STRICT	qt_pac_agenda_w
	from	agenda_paciente
	where	cd_agenda	= cd_agenda_p
	and (hr_inicio	>= to_date(to_char(hr_inicio,'dd/mm/yyyy') ||' '|| coalesce(to_char(hr_inicial_p,'hh24:mi:ss'), '00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
	and (hr_inicio	<= to_date(to_char(hr_inicio,'dd/mm/yyyy') ||' '|| coalesce(to_char(hr_final_p,'hh24:mi:ss'), '23:59:59'),'dd/mm/yyyy hh24:mi:ss'))
	and		trunc(dt_agenda) between dt_inicial_p and dt_final_p
	and		((obter_cod_dia_semana(dt_agenda)	= ie_dia_semana_p) or ((ie_dia_semana_p = 9) and (obter_cod_dia_semana(dt_agenda) not in (1,7))) or (coalesce(ie_dia_semana_p::text, '') = ''))
	and		((cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') or (nm_paciente IS NOT NULL AND nm_paciente::text <> ''))
	and		((cd_medico_exec	= cd_medico_p) or (coalesce(cd_medico_p::text, '') = ''))
	and		ie_status_agenda not in ('C','L','B')  LIMIT 1;
	exception
	when others then
		qt_pac_agenda_w	:= 0;		
	end;

elsif 	((ie_agenda_p	= 'C') or (ie_agenda_p	= 'S')) then
	begin
	select	1
	into STRICT	qt_pac_agenda_w
	from	agenda_consulta
	where	cd_agenda	= cd_agenda_p
	and (dt_agenda  >= to_date(to_char(dt_agenda,'dd/mm/yyyy') ||' '|| coalesce(to_char(hr_inicial_p,'hh24:mi:ss'), '00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
	and (dt_agenda  <= to_date(to_char(dt_agenda,'dd/mm/yyyy') ||' '|| coalesce(to_char(hr_final_p,'hh24:mi:ss'), '23:59:59'),'dd/mm/yyyy hh24:mi:ss'))
	and		trunc(dt_agenda) between dt_inicial_p and dt_final_p
	and		((obter_cod_dia_semana(dt_agenda)	= ie_dia_semana_p) or ((ie_dia_semana_p = 9) and (obter_cod_dia_semana(dt_agenda) not in (1,7))) or (coalesce(ie_dia_semana_p::text, '') = ''))
	and		((cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') or (nm_paciente IS NOT NULL AND nm_paciente::text <> ''))
	and		((cd_medico_req	= cd_medico_p) or (coalesce(cd_medico_p::text, '') = ''))
	and		ie_status_agenda not in ('C','L','B')
	and		ie_classif_agenda	= coalesce(ie_classif_bloqueio_p, ie_classif_agenda)  LIMIT 1;
	exception
	when others then
		qt_pac_agenda_w	:= 0;	
	end;
elsif (ie_Agenda_p = 'A') then
	begin
	select	1
	into STRICT	qt_pac_agenda_w
	from	agenda_paciente		
	where (hr_inicio	>= to_date(to_char(hr_inicio,'dd/mm/yyyy') ||' '|| to_char(hr_inicial_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
	and (hr_inicio	<= to_date(to_char(hr_inicio,'dd/mm/yyyy') ||' '|| to_char(hr_final_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
	and		trunc(dt_agenda) between dt_inicial_p and dt_final_p
	and		((obter_cod_dia_semana(dt_agenda)	= ie_dia_semana_p) or ((ie_dia_semana_p = 9) and (obter_cod_dia_semana(dt_agenda) not in (1,7))) or (coalesce(ie_dia_semana_p::text, '') = ''))
	and		((cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') or (nm_paciente IS NOT NULL AND nm_paciente::text <> ''))
	and		((cd_medico_exec	= cd_medico_p) or (coalesce(cd_medico_p::text, '') = ''))
	and		ie_status_agenda not in ('C','L','B')  LIMIT 1;
	exception
	when others then
		qt_pac_agenda_w	:= 0;
	end;
	
	if (qt_pac_agenda_w	= 0) then
		begin
		select	1	
		into STRICT	qt_pac_agenda_w
		from	agenda_consulta
		where (dt_agenda	>= to_date(to_char(dt_agenda,'dd/mm/yyyy') ||' '|| to_char(hr_inicial_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
		and (dt_agenda	<= to_date(to_char(dt_agenda,'dd/mm/yyyy') ||' '|| to_char(hr_final_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
		and		trunc(dt_agenda) between dt_inicial_p and dt_final_p
		and		((obter_cod_dia_semana(dt_agenda)	= ie_dia_semana_p) or ((ie_dia_semana_p = 9) and (obter_cod_dia_semana(dt_agenda) not in (1,7))) or (coalesce(ie_dia_semana_p::text, '') = ''))
		and		((cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') or (nm_paciente IS NOT NULL AND nm_paciente::text <> ''))
		and		((cd_medico_req	= cd_medico_p) or (coalesce(cd_medico_p::text, '') = ''))
		and		ie_status_agenda not in ('C','L','B')
		and		ie_classif_agenda	= coalesce(ie_classif_bloqueio_p, ie_classif_agenda)  LIMIT 1;
		exception
		when others then
			qt_pac_agenda_w	:= 0;
		end;
	end if;	
	
end if;

if (qt_pac_agenda_w	> 0) then	
	ds_retorno_w	:= 'S';
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_obter_se_ocup_bloq ( cd_agenda_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, hr_inicial_p timestamp, hr_final_p timestamp, ie_dia_semana_p bigint, ie_agenda_p text, ie_classif_bloqueio_p text, cd_medico_p text) FROM PUBLIC;

