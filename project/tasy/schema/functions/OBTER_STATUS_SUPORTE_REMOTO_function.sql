-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_status_suporte_remoto ( nr_seq_ordem_p bigint, cd_solicitante_p bigint, nm_usuario_exec_p text, ie_sup_remoto_p text, ie_status_ordem_p bigint, nr_seq_estagio_p bigint, ie_origem_os_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w            varchar(50);
iniciar_sup_remoto_w    varchar(1);
aceitar_sup_remoto_w    varchar(1);
finalizar_sup_remoto_w  varchar(1);


BEGIN

begin

select 'S'
into STRICT iniciar_sup_remoto_w

where (SELECT CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  ie_sup_remoto
        from	man_ordem_servico_exec
        where	nr_seq_ordem = nr_seq_ordem_p
        and	nm_usuario_exec = nm_usuario_exec_p) = 'S'
and (obter_se_base_corp() = 'S' or obter_se_base_wheb() = 'S')
and (coalesce(ie_sup_remoto_p::text, '') = '' or ((ie_sup_remoto_p IS NOT NULL AND ie_sup_remoto_p::text <> '') and ie_sup_remoto_p in ('', 'N', 0)))
and (coalesce(ie_status_ordem_p::text, '') = '' or ((ie_status_ordem_p IS NOT NULL AND ie_status_ordem_p::text <> '') and ie_status_ordem_p <> 3))
and (coalesce(nr_seq_estagio_p::text, '') = '' or ((nr_seq_estagio_p IS NOT NULL AND nr_seq_estagio_p::text <> '') and nr_seq_estagio_p <> 9))
and ie_origem_os_p = 1;
exception
	when others then
	ds_retorno_w	:= '';
end;

begin

select 'S'
into STRICT aceitar_sup_remoto_w

where (SELECT	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  ie_inicia_sup_remoto
        from man_ordem_servico a
        where	a.nr_sequencia = nr_seq_ordem_p
        and	a.ie_suporte_remoto = 'S'
        and	a.cd_pessoa_solicitante = cd_solicitante_p) = 'S'
and ie_origem_os_p in (1, 4);

exception
	when others then
	ds_retorno_w	:= '';
end;

begin

select 'S'
into STRICT finalizar_sup_remoto_w

where (SELECT	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  ie_finaliza_sup_remoto
      from	man_ordem_servico a,
        man_ordem_serv_tecnico b
      where	a.nr_sequencia = b.nr_seq_ordem_serv
      and	a.nr_sequencia = nr_seq_ordem_p
      and	a.ie_suporte_remoto = 'A'
      and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')) = 'S'
and ie_origem_os_p in (1, 4)
and (coalesce(iniciar_sup_remoto_w::text, '') = '' or ((iniciar_sup_remoto_w IS NOT NULL AND iniciar_sup_remoto_w::text <> '') and iniciar_sup_remoto_w = ''));

exception
	when others then
	ds_retorno_w	:= '';
end;

if ((iniciar_sup_remoto_w IS NOT NULL AND iniciar_sup_remoto_w::text <> '') and iniciar_sup_remoto_w = 'S') then
  --pode iniciar o suporte remoto
  ds_retorno_w	:= 'I';
elsif ((aceitar_sup_remoto_w IS NOT NULL AND aceitar_sup_remoto_w::text <> '') and aceitar_sup_remoto_w = 'S') then
  --pode aceitar o suporte remoto
  ds_retorno_w	:= 'A';
elsif ((finalizar_sup_remoto_w IS NOT NULL AND finalizar_sup_remoto_w::text <> '') and finalizar_sup_remoto_w = 'S') then
  --pode finalizar o suporte remoto
  ds_retorno_w	:= 'F';
end if;

if (coalesce(ds_retorno_w::text, '') = '') then
  ds_retorno_w	:= '';
end if;

return  ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_status_suporte_remoto ( nr_seq_ordem_p bigint, cd_solicitante_p bigint, nm_usuario_exec_p text, ie_sup_remoto_p text, ie_status_ordem_p bigint, nr_seq_estagio_p bigint, ie_origem_os_p text) FROM PUBLIC;

