-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_prestador ( nr_seq_prestador_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Obter dados do prestador
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:  
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 	TR - Tipo de relacao
	TP - Tipo de prestador
	N  - Nome do prestador
	NF - Nome fantasia
	NGM - Nome Guia Medico
	NGMP - Nome Guia Medico portal
	SGCM - Sigla do conselho do medico
	CGC - CGC
	CPF - CPF
	CNES - Codigo nacional de estabelecimento de saude
	CP - Condicao de Pagamento
	E - Estabelecimento do prestador
	DP - Quantidade de dias de protocolos para excluir
	B - Banco
	NB - Nome do banco	
	A - Agenca bancaria
	DA - Digito da Agencia
	ACD - Agencia com digito (Separados por ifen)
	C - Conta bancaria
	DC - Digito da Conta
	CCD - Conta com digito (Separados por ifen)
	FAB - Forma de autenticacao do beneficiario no OPSW - Autorizacao ( Solicitacao de autorizacao)
	CLA - Classificacao
	NRCLA - Seq da Classificacao
	M - Email
	CONS - Conselho profissional
	TPR - Tipo prestador PF ou PJ
	PF - Codigo pessoa fisica
	FP - Forma de pagamento	
	DS - Razao social
	MA - Municipio de atuacao
	MT - Matricula do cooperado
	TC - Telefone Comercial/Contato
	TC2 - Telefone 2
	CD - Codigo prestador
	AC - Alto Custo
	NC - Numero do contrato
	NA - Nivel acreditacao
	IA - Istituicao acreditacao
	S - Situacao
	F - Filial
	CEL - Celular
	A400 - Cod A400 (cd_prest_a400)
	IBGE - Cod Municipio IBGE 
	IBGEC - Cod Municipio IBGE complementar, seguindo a escala de prioridades
		1 - Endereco comercial da pessoa fisica
		2 - Endereco residencial da pessoa fisica
		3 - Endereco do prestador.
	DTE - Data de Exclusao 
	DSMN - Nome do municipio IBGE
	NAP - Nome abreviado prestador
	CCC - CRM ou CPF ou CNPJ
	TE - Tipo endereco
	UF - Sigla estado prestador
	UFTC - Sigla do estado do prestador conforme tipo de complemento
	DGM - Descricao do prestador/medico para o guia medico
	EMC - Email do cooperado
	CN - Codigo e nome concatenados
	EV - Eventual
*/					
				
ie_tipo_relacao_w		varchar(2);
cd_cgc_w			varchar(50);
ds_retorno_w			varchar(4000)	:= null;
cd_condicao_pagamento_w		bigint;
cd_estabelecimento_w		smallint;
qt_dias_protocolo_w		smallint;
cd_banco_w			varchar(20);
cd_agencia_w			varchar(20);
nr_conta_w			varchar(50);
cd_pessoa_fisica_w		varchar(10);
ds_tipo_prestador_w		varchar(255);
ie_forma_pagto_w		varchar(10);
ds_municipio_ibge_w		varchar(100);	
cd_prestador_w			varchar(30);
ie_prest_alto_custo_w		varchar(2);
ie_situacao_w			varchar(1);
nr_seq_classif_prestador_w	bigint;
ie_grau_instrucao_w		smallint;
ie_digito_agencia_w		varchar(2);
nr_digito_conta_w		varchar(2);
nr_seq_conselho_w		pessoa_fisica.nr_seq_conselho%type;
ie_tipo_complemento_w		compl_pessoa_fisica.ie_tipo_complemento%type;
ie_tipo_endereco_w		pls_prestador.ie_tipo_endereco%type;
nm_prestador_w			pessoa_juridica.ds_razao_social%type;
C01 CURSOR FOR
	SELECT	ds_tipo_prestador
	from	pls_tipo_prestador	b,
		pls_prestador_tipo	a
	where	a.nr_seq_tipo		= b.nr_sequencia
	and	b.cd_estabelecimento	= cd_estabelecimento_w
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia, clock_timestamp() - interval '1 days') and coalesce(a.dt_fim_vigencia, clock_timestamp() + interval '1 days')
	and	a.nr_seq_prestador	= nr_seq_prestador_p;
	
c02 CURSOR FOR
	SELECT	substr(obter_desc_municipio_ibge(cd_municipio_ibge),1,255)
	from	pls_prestador_area a
	where	a.nr_seq_prestador	= nr_seq_prestador_p
	and	(a.cd_municipio_ibge IS NOT NULL AND a.cd_municipio_ibge::text <> '');


BEGIN
/* NaO FAZER SELECT AQUI FORA ! ! ! ! */




/*Diego OS 411152 - Performance - So sera realizado o select abaixo nas opcoes em que este deve ser utilizado.*/

if (ie_opcao_p in ('NB', 'B', 'A', 'C', 'DA', 'DC', 'ACD', 'CCD')) then
	select	max(cd_banco),
		max(cd_agencia_bancaria),
		max(nr_conta)
	into STRICT	cd_banco_w,
		cd_agencia_w,
		nr_conta_w
	from	pls_prestador_pagto
	where	nr_seq_prestador	= nr_seq_prestador_p
	and	clock_timestamp() between dt_inicio_vigencia_ref and dt_fim_vigencia_ref;
	
	if (cd_banco_w IS NOT NULL AND cd_banco_w::text <> '') and (cd_agencia_w IS NOT NULL AND cd_agencia_w::text <> '') and (nr_conta_w IS NOT NULL AND nr_conta_w::text <> '') then
		
		select	max(a.cd_cgc),
			max(a.cd_pessoa_fisica)
		into STRICT	cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_p;
		
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		
			begin
			select	ie_digito_agencia,
				nr_digito_conta
			into STRICT	ie_digito_agencia_w,
				nr_digito_conta_w
			from	pessoa_juridica_conta
			where	cd_cgc			= cd_cgc_w
			and	cd_banco		= cd_banco_w
			and	cd_agencia_bancaria	= cd_agencia_w
			and	nr_conta_w		= nr_conta_w  LIMIT 1;	
			exception
			when no_data_found then
				ie_digito_agencia_w	:= null;
				nr_digito_conta_w	:= null;
			end;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			begin
			select	ie_digito_agencia,
				nr_digito_conta
			into STRICT	ie_digito_agencia_w,
				nr_digito_conta_w
			from	pessoa_fisica_conta
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	cd_banco		= cd_banco_w
			and	cd_agencia_bancaria	= cd_agencia_w
			and	nr_conta_w		= nr_conta_w  LIMIT 1;	
			exception
			when no_data_found then
				ie_digito_agencia_w	:= null;
				nr_digito_conta_w	:= null;
			end;
			
		end if;
	end if;
	
	if (coalesce(cd_banco_w::text, '') = '') and (coalesce(cd_agencia_w::text, '') = '') and (coalesce(nr_conta_w::text, '') = '') then
		select	max(a.cd_cgc),
			max(a.cd_pessoa_fisica)
		into STRICT	cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_p;

		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			begin
			select	cd_banco,
				cd_agencia_bancaria,
				nr_conta,
				ie_digito_agencia,
				nr_digito_conta
			into STRICT	cd_banco_w,
				cd_agencia_w,
				nr_conta_w,
				ie_digito_agencia_w,
				nr_digito_conta_w
			from	pessoa_juridica_conta
			where	ie_prestador_pls	= 'S'
			and	cd_cgc			= cd_cgc_w  LIMIT 1;	
			exception
			when no_data_found then
				cd_banco_w	:= null;
				cd_agencia_w	:= null;
				nr_conta_w	:= null;
			end;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			begin
			select	cd_banco,
				cd_agencia_bancaria,
				nr_conta,
				ie_digito_agencia,
				nr_digito_conta
			into STRICT	cd_banco_w,
				cd_agencia_w,
				nr_conta_w,
				ie_digito_agencia_w,
				nr_digito_conta_w
			from	pessoa_fisica_conta
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w  LIMIT 1;
			exception
			when no_data_found then
				cd_banco_w	:= null;
				cd_agencia_w	:= null;
				nr_conta_w	:= null;
			end;
		end if;
	end if;
	
	if (coalesce(ie_digito_agencia_w::text, '') = '') and (coalesce(nr_digito_conta_w::text, '') = '') then
		
		select	max(a.cd_cgc),
			max(a.cd_pessoa_fisica)
		into STRICT	cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_p;

		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			begin
			select	ie_digito_agencia,
				nr_digito_conta
			into STRICT	ie_digito_agencia_w,
				nr_digito_conta_w
			from	pessoa_juridica_conta
			where	ie_prestador_pls	= 'S'
			and	cd_cgc			= cd_cgc_w
			and	ie_situacao		= 'A'  LIMIT 1;
			exception
			when no_data_found then
				ie_digito_agencia_w	:= '';
				nr_digito_conta_w	:= '';
			end;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			begin
			select	ie_digito_agencia,
				nr_digito_conta
			into STRICT	ie_digito_agencia_w,
				nr_digito_conta_w
			from	pessoa_fisica_conta
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	ie_situacao		= 'A'  LIMIT 1;
			exception
			when no_data_found then
				ie_digito_agencia_w	:= '';
				nr_digito_conta_w	:= '';
			end;
		end if;
		
	end if;
end if;

if (ie_opcao_p = 'TR') then
	select	ie_tipo_relacao
	into STRICT	ie_tipo_relacao_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;

	select	substr(ds_valor_dominio,1,255)
	into STRICT	ds_retorno_w
	from	valor_dominio
	where	cd_dominio	= 1668
	and	vl_dominio	= ie_tipo_relacao_w;
elsif (ie_opcao_p = 'TP') then
	select	max(a.cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	select	max(b.ds_tipo_prestador)
	into STRICT	ds_retorno_w
	from	pls_tipo_prestador b,
		pls_prestador a
	where	a.nr_seq_tipo_prestador	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_prestador_p;

	open C01;
	loop
	fetch C01 into
		ds_tipo_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
			ds_retorno_w	:= substr(ds_retorno_w || ', ' || ds_tipo_prestador_w,1,4000);
		else
			ds_retorno_w	:= substr(ds_tipo_prestador_w,1,4000);
		end if;
		end;
	end loop;
	close C01;

	ds_retorno_w	:= substr(ds_retorno_w,1,4000);
elsif (ie_opcao_p = 'N') then
	select	max(a.nm_interno)
	into STRICT	ds_retorno_w
	from	pls_prestador a
	where	nr_sequencia	= nr_seq_prestador_p;

	if (coalesce(ds_retorno_w::text, '') = '') then
		select	max(a.cd_cgc),
			max(a.cd_pessoa_fisica)
		into STRICT	cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_p;
		
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')	then -- Diether OS 368360 - Alterado para melhoria de desempenho antes usava obter_nome_pf_pj
			select	ds_razao_social
			into STRICT	ds_retorno_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_w;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	nm_pessoa_fisica
			into STRICT	ds_retorno_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
	end if;

elsif (ie_opcao_p = 'CEL') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')	then
		select	nr_telefone
		into STRICT	ds_retorno_w
		from	pessoa_juridica
		where	cd_cgc	= cd_cgc_w;
	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	nr_telefone_celular
		into STRICT	ds_retorno_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
elsif (ie_opcao_p = 'NGM') then
	select	max(coalesce(a.nm_adic_guia_medico,a.nm_interno))
	into STRICT	ds_retorno_w
	from	pls_prestador a
	where	nr_sequencia	= nr_seq_prestador_p;

	if (coalesce(ds_retorno_w::text, '') = '') then
		select	max(a.cd_cgc),
			max(a.cd_pessoa_fisica)
		into STRICT	cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_p;
		
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')	then -- Diether OS 368360 - Alterado para melhoria de desempenho antes usava obter_nome_pf_pj
			select	ds_razao_social
			into STRICT	ds_retorno_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_w;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	nm_pessoa_fisica
			into STRICT	ds_retorno_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
	end if;
elsif (ie_opcao_p = 'NGMP') then
	select	max(coalesce(a.nm_adic_guia_medico,a.nm_interno))
	into STRICT	ds_retorno_w
	from	pls_prestador a
	where	nr_sequencia	= nr_seq_prestador_p;

	if (coalesce(ds_retorno_w::text, '') = '') then
		select	max(a.cd_cgc),
			max(a.cd_pessoa_fisica)
		into STRICT	cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_prestador a
		where	a.nr_sequencia	= nr_seq_prestador_p;
		
		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')	then
			select	coalesce(nm_fantasia,ds_razao_social)
			into STRICT	ds_retorno_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_w;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	nm_pessoa_fisica
			into STRICT	ds_retorno_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		end if;
	end if;
elsif (ie_opcao_p = 'SGCM') then	
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	max(nr_seq_conselho)
		into STRICT	nr_seq_conselho_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

		if (nr_seq_conselho_w IS NOT NULL AND nr_seq_conselho_w::text <> '') then
			select	max(sg_conselho)
			into STRICT	ds_retorno_w
			from	conselho_profissional
			where	nr_sequencia		= nr_seq_conselho_w;
		end if;
	end if;
elsif (ie_opcao_p = 'NF') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	max(a.nm_pessoa_fisica)
		into STRICT	ds_retorno_w
		from	pessoa_fisica	a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		select	max(a.nm_fantasia)
		into STRICT	ds_retorno_w
		from	pessoa_juridica	a
		where	a.cd_cgc	= cd_cgc_w;
	end if;
elsif (ie_opcao_p = 'CNES') then
	select	substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CNES'),1,20)
	into STRICT	ds_retorno_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'CGC') then
	select	max(a.cd_cgc)
	into STRICT	cd_cgc_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	ds_retorno_w	:= cd_cgc_w;
elsif (ie_opcao_p = 'CPF') then
	select	obter_dados_pf(cd_pessoa_fisica, 'CPF')
	into STRICT	ds_retorno_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'CP') then
	select	max(a.cd_condicao_pagamento)
	into STRICT	cd_condicao_pagamento_w
	from	pls_prestador_pagto a
	where	a.nr_seq_prestador	= nr_seq_prestador_p;

	ds_retorno_w	:= to_char(cd_condicao_pagamento_w);
elsif (ie_opcao_p = 'FP')then
	select	max(a.ie_forma_pagto)
	into STRICT	ie_forma_pagto_w
	from	pls_prestador_pagto a
	where	a.nr_seq_prestador	= nr_seq_prestador_p;

	ds_retorno_w	:= ie_forma_pagto_w;	
elsif (ie_opcao_p = 'E') then
	select	max(a.cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	ds_retorno_w	:= cd_estabelecimento_w;
elsif (ie_opcao_p = 'DP') then
	select	max(a.qt_dias_protocolo)
	into STRICT	qt_dias_protocolo_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	if (coalesce(qt_dias_protocolo_w::text, '') = '') then
		select	coalesce(max(qt_dias_protocolo), 30)
		into STRICT	qt_dias_protocolo_w
		from	pls_parametros;
	end if;
	
	ds_retorno_w 	:= qt_dias_protocolo_w;
elsif (ie_opcao_p = 'B') then	
	ds_retorno_w	:= cd_banco_w;
elsif (ie_opcao_p = 'NB') then	
	select	max(ds_banco)
	into STRICT	ds_retorno_w
	from	banco
	where	cd_banco	= cd_banco_w;
elsif (ie_opcao_p = 'A') then
	ds_retorno_w	:= cd_agencia_w;
elsif (ie_opcao_p = 'DA') then
	ds_retorno_w	:= ie_digito_agencia_w;
elsif (ie_opcao_p = 'ACD') then
	if (coalesce(ie_digito_agencia_w::text, '') = '') then
		ds_retorno_w	:= cd_agencia_w;
	else
		ds_retorno_w	:= cd_agencia_w || '-' || ie_digito_agencia_w;
	end if;
elsif (ie_opcao_p = 'C') then
	ds_retorno_w	:= nr_conta_w;
elsif (ie_opcao_p = 'DC') then
	ds_retorno_w	:= nr_digito_conta_w;
elsif (ie_opcao_p = 'CCD') then
	if (coalesce(nr_digito_conta_w::text, '') = '') then
		ds_retorno_w	:= nr_conta_w;
	else
		ds_retorno_w	:= nr_conta_w || '-' || nr_digito_conta_w;
	end if;
elsif (ie_opcao_p = 'FAB') then
	select	ie_tipo_validacao_aut_solic
	into STRICT	ds_retorno_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'CLA') then
	select	max(a.nr_seq_classificacao)
	into STRICT	nr_seq_classif_prestador_w
	from	pls_prestador	a
	where	a.nr_sequencia		= nr_seq_prestador_p;
	
	if (nr_seq_classif_prestador_w IS NOT NULL AND nr_seq_classif_prestador_w::text <> '') then
		select	b.ds_classificacao
		into STRICT	ds_retorno_w
		from	pls_classif_prestador	b
		where	b.nr_sequencia	= nr_seq_classif_prestador_w;
	end if;
elsif (ie_opcao_p = 'NRCLA') then
	select	max(a.nr_seq_classificacao)
	into STRICT	ds_retorno_w
	from	pls_prestador a
	where	a.nr_sequencia		= nr_seq_prestador_p;
elsif (ie_opcao_p = 'M') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	select	max(a.cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	ds_retorno_w	:= obter_dados_pf_pj_estab(cd_estabelecimento_w,cd_pessoa_fisica_w, cd_cgc_w, 'M');
elsif (ie_opcao_p = 'CONS') then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	select	substr(obter_crm_medico(cd_pessoa_fisica_w),1,255)
	into STRICT	ds_retorno_w
	;
elsif (ie_opcao_p = 'TPR') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')then
		ds_retorno_w	:= 'PF';
	else
		ds_retorno_w	:= 'PJ';
	end if;
elsif (ie_opcao_p = 'PF') then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	ds_retorno_w	:= cd_pessoa_fisica_w;
elsif (ie_opcao_p = 'DS') then
	select	b.ds_razao_social--substr(obter_dados_pf_pj(null,cd_cgc,'N'),1,255)
	into STRICT	ds_retorno_w
	from	pessoa_juridica	b,
		pls_prestador	a
	where	b.cd_cgc	= a.cd_cgc
	and	a.nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'MA') then
	open C02;
	loop
	fetch C02 into	
		ds_municipio_ibge_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(ds_retorno_w::text, '') = '') then
			ds_retorno_w	:= ds_municipio_ibge_w;
		else
			ds_retorno_w	:= ds_retorno_w || ', ' || ds_municipio_ibge_w;
		end if;
		end;
	end loop;
	close C02;
elsif (ie_opcao_p = 'MT') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	select	max(a.cd_matricula)
	into STRICT	ds_retorno_w
	from	pls_cooperado a
	where	((a.cd_cgc  = cd_cgc_w and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> ''))
	or (a.cd_pessoa_fisica  = cd_pessoa_fisica_w and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')));
elsif (ie_opcao_p = 'TC') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		begin
		select	'('||nr_ddd_telefone||')'||nr_telefone
		into STRICT	ds_retorno_w
		from	pessoa_juridica_compl
		where	cd_cgc			= cd_cgc_w
		and	ie_tipo_complemento	= 3;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		begin
		select	'('||nr_ddd_telefone||')'||nr_telefone
		into STRICT	ds_retorno_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	ie_tipo_complemento	= 2;
		exception
		when others then
			ds_retorno_w	:= '';
		end;
	end if;
elsif (ie_opcao_p = 'TC2') then
	select	nr_telefone_dois
	into STRICT	ds_retorno_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'CD') then
	select	max(a.cd_prestador)
	into STRICT	cd_prestador_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	ds_retorno_w	:= cd_prestador_w;
elsif (ie_opcao_p = 'AC') then
	begin
	select	coalesce(a.ie_prestador_alto_custo,'N')
	into STRICT	ds_retorno_w
	from	pls_prestador	a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	exception
	when others then
		ds_retorno_w	:= '';
	end;
elsif (ie_opcao_p = 'NC') then
	select	max(a.nr_seq_contrato)
	into STRICT	ds_retorno_w
	from	pls_prestador	a
	where	a.nr_sequencia = nr_seq_prestador_p;
elsif (ie_opcao_p = 'NA') then
	select	substr(obter_valor_dominio(4233,a.ie_nivel_acreditacao_ptu),1,255)
	into STRICT	ds_retorno_w
	from	pls_prestador	a
	where	a.nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'IA') then
	select	substr(obter_valor_dominio(4232,a.ie_instituicao_acred_ptu),1,255)
	into STRICT	ds_retorno_w
	from	pls_prestador	a
	where	a.nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'S') then
	select	max(a.ie_situacao)
	into STRICT	ie_situacao_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	ds_retorno_w	:= ie_situacao_w;
	
elsif (ie_opcao_p = 'GI') then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	max(ie_grau_instrucao)
		into STRICT	ds_retorno_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
	end if;
	
elsif (ie_opcao_p = 'GP') then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	max(ie_grau_instrucao)
		into STRICT	ie_grau_instrucao_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
		
		if (ie_grau_instrucao_w in (12,13,5,6)) then
			ds_retorno_w := 'S';
		else
			ds_retorno_w := 'N';
		end if;
	end if;
	
elsif (ie_opcao_p = 'F') then
	select	coalesce(ie_filial,'N')
	into STRICT	ds_retorno_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
elsif (ie_opcao_p = 'A400') then
	begin
		select	cd_prest_a400
		into STRICT	ds_retorno_w
		from	pls_prestador
		where	nr_sequencia = nr_seq_prestador_p;
	exception
	when no_data_found then
		ds_retorno_w := null;
	end;
elsif (ie_opcao_p = 'IBGE') then
	begin
		select	c.cd_municipio
		into STRICT	ds_retorno_w
		from	(SELECT	coalesce(	(select	max(b.CD_MUNICIPIO_IBGE)
					from	pessoa_fisica b
					where	b.cd_pessoa_fisica = a.cd_pessoa_fisica),
					(select	max(b.CD_MUNICIPIO_IBGE)
					from	COMPL_PESSOA_FISICA b
					where	b.cd_pessoa_fisica = a.cd_pessoa_fisica)) cd_municipio
			from	pls_prestador a
			where	a.nr_sequencia = nr_seq_prestador_p
			
Union

			SELECT	coalesce(	(select	max(b.CD_MUNICIPIO_IBGE)
					from	PESSOA_JURIDICA b
					where	b.cd_cgc = a.cd_cgc),
					(select	max(b.CD_MUNICIPIO_IBGE)
					from	PESSOA_JURIDICA_COMPL b
					where	b.cd_cgc = a.cd_cgc)) cd_municipio
			from	pls_prestador a
			where	a.nr_sequencia = nr_seq_prestador_p) c
		where	(c.cd_municipio IS NOT NULL AND c.cd_municipio::text <> '') 
		group by c.cd_municipio LIMIT 1;
	exception
	when others then
		ds_retorno_w := '';
	end;
elsif (ie_opcao_p = 'IBGEC') then
	begin
		select	c.cd_municipio
		into STRICT	ds_retorno_w
		from	(SELECT	coalesce(	coalesce(	(select	max(b.cd_municipio_ibge)
						from	compl_pessoa_fisica b
						where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
						and	ie_tipo_complemento	= '2'),
						(select	max(b.cd_municipio_ibge)
						from	compl_pessoa_fisica b
						where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
						and	ie_tipo_complemento	= '1')),						
					(select	max(b.cd_municipio_ibge)
					from	pessoa_fisica b
					where	b.cd_pessoa_fisica = a.cd_pessoa_fisica)) cd_municipio
			from	pls_prestador a
			where	a.nr_sequencia = nr_seq_prestador_p
			
union

			SELECT	coalesce(	(select	max(b.cd_municipio_ibge)
					from	pessoa_juridica b
					where	b.cd_cgc = a.cd_cgc),
					(select	max(b.cd_municipio_ibge)
					from	pessoa_juridica_compl b
					where	b.cd_cgc = a.cd_cgc)) cd_municipio
			from	pls_prestador a
			where	a.nr_sequencia = nr_seq_prestador_p) c
		where	(c.cd_municipio IS NOT NULL AND c.cd_municipio::text <> '') 
		group by c.cd_municipio LIMIT 1;
	exception
	when others then
		ds_retorno_w := '';
	end;
elsif (ie_opcao_p = 'DSMN') then
	begin
		select	obter_desc_municipio_ibge(a.cd_municipio)
		into STRICT	ds_retorno_w
		from (
				SELECT	coalesce(b.cd_municipio_ibge,c.cd_municipio_ibge) cd_municipio
				FROM pls_prestador a, compl_pessoa_fisica c
LEFT OUTER JOIN pessoa_fisica b ON (c.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE a.nr_sequencia = nr_seq_prestador_p and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and b.cd_pessoa_fisica = a.cd_pessoa_fisica
union
 
				SELECT	coalesce(b.cd_municipio_ibge,c.cd_municipio_ibge) cd_municipio
				FROM pls_prestador a, pessoa_juridica_compl c
LEFT OUTER JOIN pessoa_juridica b ON (c.cd_cgc = b.cd_cgc)
WHERE a.nr_sequencia = nr_seq_prestador_p and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and b.cd_cgc = a.cd_cgc  order by cd_municipio
			) a
		where	(a.cd_municipio IS NOT NULL AND a.cd_municipio::text <> '') 
		group by a.cd_municipio LIMIT 1;
	exception
	when others then
		ds_retorno_w := '';
	end;
elsif (ie_opcao_p = 'DTE') then
	select	max(dt_exclusao)
	into STRICT	ds_retorno_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_p;
	
elsif (ie_opcao_p = 'NAP') then
	select	cd_pessoa_fisica,
		cd_cgc
	into STRICT	cd_pessoa_fisica_w,
		cd_cgc_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_p;
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		select	nm_fantasia
		into STRICT	ds_retorno_w
		from	pessoa_juridica
		where	cd_cgc = cd_cgc_w;
	else
		select	nm_abreviado
		into STRICT	ds_retorno_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
	end if;
elsif (ie_opcao_p = 'CCC') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
	select	a.cd_pessoa_fisica,
		a.cd_cgc
	into STRICT	cd_pessoa_fisica_w,
		cd_cgc_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then	
		select	substr(obter_crm_medico(cd_pessoa_fisica_w),1,255)
		into STRICT	ds_retorno_w
		;
		
		if (coalesce(ds_retorno_w::text, '') = '') then
			select	nr_cpf
			into STRICT	ds_retorno_w
			from	pessoa_fisica a
			where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
		end if;
	else
		ds_retorno_w := cd_cgc_w;
	end if;
elsif (ie_opcao_p = 'TE') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
	begin
		select	ie_tipo_endereco
		into STRICT	ds_retorno_w
		from	pls_prestador
		where 	nr_sequencia	= nr_seq_prestador_p;
	exception
	when others then
		ds_retorno_w 	:= null;
	end;	
elsif (ie_opcao_p = 'UF') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
	begin
		select	c.sg_uf
		into STRICT	ds_retorno_w
		from	(	SELECT (	select	max(b.sg_estado)
						from	COMPL_PESSOA_FISICA b
						where	b.cd_pessoa_fisica = a.cd_pessoa_fisica) sg_uf
				from	pls_prestador a
				where	a.nr_sequencia = nr_seq_prestador_p
				
Union

				SELECT	coalesce(	(select	max(b.sg_estado)
						from	PESSOA_JURIDICA b
						where	b.cd_cgc = a.cd_cgc),
						(select	max(b.sg_estado)
						from	PESSOA_JURIDICA_COMPL b
						where	b.cd_cgc = a.cd_cgc)) sg_uf
				from	pls_prestador a
				where	a.nr_sequencia = nr_seq_prestador_p) c
		where	(c.sg_uf IS NOT NULL AND c.sg_uf::text <> '') 
		group by c.sg_uf LIMIT 1;
	exception
	when others then
		ds_retorno_w := '';
	end;
elsif (ie_opcao_p = 'UFTC') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
	
	select	cd_cgc,
		cd_pessoa_fisica,
		ie_tipo_endereco
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w,
		ie_tipo_endereco_w
	from	pls_prestador
	where	nr_Sequencia = nr_seq_prestador_p;
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		select	max(b.sg_estado)
		into STRICT	ds_retorno_w
		from	pessoa_juridica b
		where	b.cd_cgc = cd_cgc_w;
		
		if (coalesce(ds_retorno_w::text, '') = '') then
			select	max(b.sg_estado)
			into STRICT	ds_retorno_w
			from	pessoa_juridica_compl b
			where	b.cd_cgc = cd_cgc_w;
		end if;
	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		
		if (ie_tipo_endereco_w IS NOT NULL AND ie_tipo_endereco_w::text <> '') then
			if (ie_tipo_endereco_w = 'PFC') then
				ie_tipo_complemento_w := 2;
			elsif (ie_tipo_endereco_w = 'PFR') then
				ie_tipo_complemento_w := 1;
			elsif (ie_tipo_endereco_w = 'PFA') then
				ie_tipo_complemento_w := 9;
			end if;
		else
			ie_tipo_complemento_w := 2;
		end if;
		
		select	max(b.sg_estado)
		into STRICT	ds_retorno_w
		from	compl_pessoa_fisica b
		where	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	b.ie_tipo_complemento = ie_tipo_complemento_w;
		
		if (coalesce(ds_retorno_w::text, '') = '') then
			select	max(b.sg_estado)
			into STRICT	ds_retorno_w
			from	compl_pessoa_fisica b
			where	b.cd_pessoa_fisica = cd_pessoa_fisica_w;
		end if;
	end if;
	
elsif (ie_opcao_p = 'DGM') then
	select	max(nm_busca_guia_medico)
	into STRICT	ds_retorno_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_p;
	
elsif (ie_opcao_p = 'EMC') then
	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	substr(pls_obter_dados_cooperado(max(nr_sequencia),'EM'),1,255)
		into STRICT	ds_retorno_w
		from	pls_cooperado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		
	elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		select	substr(pls_obter_dados_cooperado(max(nr_sequencia),'EM'),1,255)
		into STRICT	ds_retorno_w
		from	pls_cooperado
		where	cd_cgc	= cd_cgc_w;
	end if;
elsif (ie_opcao_p = 'CN') then

	select 	coalesce(cd_prestador, nr_sequencia),
		cd_cgc,
		cd_pessoa_fisica		
	into STRICT	cd_prestador_w,
		cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')	then
		select	ds_razao_social
		into STRICT	nm_prestador_w
		from	pessoa_juridica
		where	cd_cgc	= cd_cgc_w;
	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	nm_pessoa_fisica
		into STRICT	nm_prestador_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	
	end if;
	
	ds_retorno_w	:= (cd_prestador_w || ' - '|| nm_prestador_w);
end if;	

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_prestador ( nr_seq_prestador_p bigint, ie_opcao_p text) FROM PUBLIC;

