-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_nota_fiscal ( nr_seq_nota_p bigint, ie_tipo_dado_p text) RETURNS varchar AS $body$
DECLARE


ds_retorno_w			varchar(255)	:= '';
nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type	:= '0';
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type	:= '';
nr_seq_nf_w			nota_fiscal.nr_sequencia_nf%type	:= 0;
cd_cgc_emitente_w		nota_fiscal.cd_cgc_emitente%type 	:= '';
vl_total_nota_w			nota_fiscal.vl_total_nota%type 	:= 0;
ie_situacao_w			nota_fiscal.ie_situacao%type;
dt_emissao_w			nota_fiscal.dt_emissao%type;
cd_pessoa_fisica_w		nota_fiscal.cd_pessoa_fisica%type;
cd_cgc_w			nota_fiscal.cd_cgc%type;
nr_nfe_imp_w			nota_fiscal.nr_nfe_imp%type;
dt_entrada_saida_w		nota_fiscal.dt_entrada_saida%type;
dt_atualizacao_estoque_w	nota_fiscal.dt_atualizacao_estoque%type;
ie_entregue_bloqueto_w		nota_fiscal.ie_entregue_bloqueto%type;
ds_observacao_w			nota_fiscal.ds_observacao%type;
nm_usuario_w			varchar(15);
cd_estabelecimento_w		nota_fiscal.cd_estabelecimento%type;
ie_tipo_nota_w			nota_fiscal.ie_tipo_nota%type;
ds_pessoa_w			varchar(255);
qt_peso_bruto_w			nota_fiscal.qt_peso_bruto%type;
qt_peso_liquido_w		nota_fiscal.qt_peso_liquido%type;
qt_especie_w 			nota_fiscal.qt_especie%type;
ds_especie_w			nota_fiscal.ds_especie%type;
ds_marca_w			nota_fiscal.ds_marca%type;
cd_condicao_pagamento_w		nota_fiscal.cd_condicao_pagamento%type;
ie_forma_pagamento_w		smallint;
nr_seq_modelo_w			nota_fiscal.nr_seq_modelo%type;
nr_ordem_compra_w		nota_fiscal.nr_ordem_compra%type;
nr_seq_forma_pagto_w		nota_fiscal.nr_seq_forma_pagto%type;
nr_danfe_w			nota_fiscal.nr_danfe%type;
nr_sequencia_ref_w		nota_fiscal.nr_sequencia_ref%type;
ds_condicao_pagamento_w         condicao_pagamento.ds_condicao_pagamento%type;
ie_status_envio_w		nota_fiscal.ie_status_envio%type;
ds_link_rps_w			nota_fiscal.ds_link_rps%type;
vl_mercadoria_w           	nota_fiscal.vl_mercadoria%type;

/*	0 - N Nota Fiscal
	1 - Serie
	2 - CGC Emitente
	3 - Razao Emitente
	4 - Sequencia NF 
	5 - Pessoa da nota
	6 - Valor total da nota
	7 - IR da nota
	8 - Situacao
	9 - Data Emissao NF
	10 - Nota fiscal eletronica
	11 - Data Emissao NF Ano
	12 - ISS da nota
	13 - Data entrada/saida
	14 - Se foi entregue com bloqueto para pagamento
	15 - Sequencia do contrato que gerou a nota
	16 - Observacao
	17 - Usuario que calculou a nota
	18 - Numero da AIDF - Autorizacao de Impressao de Documentos Fiscais
	19 - codigo do estabelecimento
	20 - N Nota Fiscal + Razao Emitente/Destinatario
	21 - Dt vencimento (1 vecto da nota)
	22 - Qt peso bruto
	23 - Qt peso liquido
	24 - Qt especie
	25 - Descricao especie
	26 - Descricaoo marca
	27 - Data de atualizacao do estoque
	28 - Forma de Pagamento
	29 - Nr sequencia modelo (Especie NF)
	30 - Descricao modelo (Especie NF)
	31 - Estado do Cliente
	32 - CNPJ da PJ da nota
	33 - Nota calculada ('S'ou'N')
	34 - Ordem de compra
	35 - Local estoque
	36 - Total dos itens  da nota
	37 - Total dos descontos nos itens	
	38 - nr_seq_forma_pagto
	39 - danfe
	40 - nr_sequencia_ref
	41 - Numero da nota de referencia (nr_nota_fiscal da nr_sequencia_ref)
	42 - Descricao condicao pagamento
	43 - IE_STATUS_ENVIO
	44 - DS_LINK_RPS
	47 - Total dos tributos
	48 - Valor da Nota Bruta*/
BEGIN

if (coalesce(nr_seq_nota_p,0) > 0) then
	select	a.nr_nota_fiscal,
		a.cd_serie_nf,
		a.nr_sequencia_nf,
		a.cd_cgc_emitente,
		a.cd_pessoa_fisica,
		a.cd_cgc,
		a.vl_total_nota,
		a.ie_situacao,
		a.dt_emissao,
		a.nr_nfe_imp,
		a.dt_entrada_saida,
		coalesce(a.ie_entregue_bloqueto, 'N'),
		substr(a.ds_observacao,1,255),
		a.cd_estabelecimento,
		a.ie_tipo_nota,
		coalesce(a.qt_peso_bruto,0),
		coalesce(a.qt_peso_liquido,0),
		a.qt_especie,
		a.ds_especie,
		a.ds_marca,
		a.dt_atualizacao_estoque,
		a.cd_condicao_pagamento,
		a.nr_seq_modelo,
		a.nr_ordem_compra,
		a.nr_seq_forma_pagto,
		a.nr_danfe,
		a.nr_sequencia_ref,
		a.ie_status_envio,
		a.ds_link_rps
	into STRICT	nr_nota_fiscal_w,
		cd_serie_nf_w,
		nr_seq_nf_w,
		cd_cgc_emitente_w,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		vl_total_nota_w,
		ie_situacao_w,
		dt_emissao_w,
		nr_nfe_imp_w,
		dt_entrada_saida_w,
		ie_entregue_bloqueto_w,
		ds_observacao_w,
		cd_estabelecimento_w,
		ie_tipo_nota_w,
		qt_peso_bruto_w,
		qt_peso_liquido_w,
		qt_especie_w,
		ds_especie_w,
		ds_marca_w,
		dt_atualizacao_estoque_w,
		cd_condicao_pagamento_w,
		nr_seq_modelo_w,
		nr_ordem_compra_w,
		nr_seq_forma_pagto_w,
		nr_danfe_w,
		nr_sequencia_ref_w,
		ie_status_envio_w,
		ds_link_rps_w
	from	nota_fiscal a
	where	a.nr_sequencia	= nr_seq_nota_p;
	
	if (ie_tipo_dado_p	= 0) then
		ds_retorno_w	:= nr_nota_fiscal_w;
	elsif (ie_tipo_dado_p	= 1) then
		ds_retorno_w	:= cd_serie_nf_w;
	elsif (ie_tipo_dado_p	= 2) then
		ds_retorno_w	:= cd_cgc_emitente_w;
	elsif (ie_tipo_dado_p	= 3) then
		ds_retorno_w	:= substr(obter_razao_social(cd_cgc_emitente_w),1,80);
	elsif (ie_tipo_dado_p	= 4) then
		ds_retorno_w	:= nr_seq_nf_w;
	elsif (ie_tipo_dado_p	= 5) then
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	obter_nome_pessoa_fisica(cd_pessoa_fisica_w, null)
			into STRICT	ds_retorno_w
			;
		elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	obter_nome_pf_pj(null, cd_cgc_w)
			into STRICT	ds_retorno_w
			;
		end if;
	elsif (ie_tipo_dado_p	= 6) then
		ds_retorno_w	:= vl_total_nota_w;
	elsif (ie_tipo_dado_p	= 7) then
		select	coalesce(sum(vl_tributo),0)
		into STRICT	ds_retorno_w
		from	tributo b,
			nota_fiscal_trib a
		where	a.nr_sequencia	= nr_seq_nota_p
		and	a.cd_tributo	= b.cd_tributo
		and	b.ie_tipo_tributo	= 'IR';
	elsif (ie_tipo_dado_p	= 8) then
		ds_retorno_w		:= ie_situacao_w;
	elsif (ie_tipo_dado_p	= 9) then
		ds_retorno_w		:= dt_emissao_w;
	elsif (ie_tipo_dado_p	= 10) then
		ds_retorno_w		:= nr_nfe_imp_w;
	elsif (ie_tipo_dado_p	= 11) then
		ds_retorno_w		:= to_char(dt_emissao_w,'dd/mm/yyyy');
	elsif (ie_tipo_dado_p	= 12) then
		select	coalesce(sum(vl_tributo),0)
		into STRICT	ds_retorno_w
		from	tributo b,
			nota_fiscal_trib a
		where	a.nr_sequencia	= nr_seq_nota_p
		and	a.cd_tributo	= b.cd_tributo
		and	b.ie_tipo_tributo	= 'ISS';
	elsif (ie_tipo_dado_p	= 13) then
		ds_retorno_w		:= to_char(dt_entrada_saida_w,'dd/mm/yyyy');
	elsif (ie_tipo_dado_p	= 14) then
		ds_retorno_w		:= ie_entregue_bloqueto_w;
	elsif (ie_tipo_dado_p	= 15) then
		select	max(nr_contrato)
		into STRICT	ds_retorno_w
		from	nota_fiscal_item
		where	nr_sequencia	= nr_seq_nota_p;
	elsif (ie_tipo_dado_p	= 16) then
		ds_retorno_w		:= ds_observacao_w;
	elsif (ie_tipo_dado_p	= 17) then
		select	coalesce(max(nm_usuario), 'X')
		into STRICT	nm_usuario_w
		from	nota_fiscal_hist
		where	cd_evento = 4
		and	nr_seq_nota = nr_seq_nota_p;
		if (nm_usuario_w <> 'X') then
			ds_retorno_w	:= nm_usuario_w;
		end if;
	elsif (ie_tipo_dado_p = 18) then
		select	substr(obter_nr_aidf_nota_fiscal(nr_seq_nota_p),1,20)
		into STRICT	ds_retorno_w
		;
	elsif (ie_tipo_dado_p = 19) then
		ds_retorno_w := cd_estabelecimento_w;
	elsif (ie_tipo_dado_p = 20) then
		if (ie_tipo_nota_w in ('EN','EF')) then
			select	obter_razao_social(cd_cgc_emitente_w)
			into STRICT	ds_pessoa_w
			;
		else
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				select	obter_nome_pessoa_fisica(cd_pessoa_fisica_w, null)
				into STRICT	ds_pessoa_w
				;
			elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
				select	obter_razao_social(cd_cgc_w)
				into STRICT	ds_pessoa_w
				;
			end if;
		end if;
		ds_retorno_w := nr_nota_fiscal_w || ' - ' || ds_pessoa_w;
	elsif (ie_tipo_dado_p = 21) then
		select	to_char(min(a.dt_vencimento), 'dd/mm/yyyy')
		into STRICT	ds_retorno_w
		from	nota_fiscal_venc a
		where	a.nr_sequencia	= nr_seq_nota_p;
	elsif (ie_tipo_dado_p = 22) then
		ds_retorno_w := qt_peso_bruto_w;		
	elsif (ie_tipo_dado_p = 23) then
		ds_retorno_w := qt_peso_liquido_w;		
	elsif (ie_tipo_dado_p = 24) then
		ds_retorno_w := qt_especie_w;			
	elsif (ie_tipo_dado_p = 25) then
		ds_retorno_w := ds_especie_w;			
	elsif (ie_tipo_dado_p = 26) then
		ds_retorno_w := ds_marca_w;
	elsif (ie_tipo_dado_p = 27) then
		ds_retorno_w := to_char(dt_atualizacao_estoque_w,'dd/mm/yyyy hh24:mi:ss');
	elsif (ie_tipo_dado_p = 28) then
		begin		
		if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') then
			
			select	max(ie_forma_pagamento)
			into STRICT	ie_forma_pagamento_w
			from	condicao_pagamento
			where	cd_condicao_pagamento	= cd_condicao_pagamento_w;
			
			ds_retorno_w	:= ie_forma_pagamento_w;
		end if;		
		end;
	elsif (ie_tipo_dado_p = 29) then
		ds_retorno_w := nr_seq_modelo_w;
	elsif (ie_tipo_dado_p = 30) then
		ds_retorno_w := substr(obter_desc_modelo_nf(nr_seq_modelo_w),1,80);
	elsif (ie_tipo_dado_p = 31) then
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
			ds_retorno_w := obter_dados_pf_pj(null,cd_cgc_w,'UF');
		else
			ds_retorno_w := obter_dados_pf_pj(cd_pessoa_fisica_w,null,'UF');
		end if;
	elsif (ie_tipo_dado_p = 32) then
		ds_retorno_w	:= cd_cgc_w;
	elsif (ie_tipo_dado_p = 33) then
		if (dt_atualizacao_estoque_w IS NOT NULL AND dt_atualizacao_estoque_w::text <> '') then
			ds_retorno_w := obter_desc_expressao(327113);
		else
			ds_retorno_w := obter_desc_expressao(327114);
		end if;
	elsif (ie_tipo_dado_p = 34) then
		ds_retorno_w := nr_ordem_compra_w;
	elsif (ie_tipo_dado_p = 35) then
		select	max(cd_local_estoque)
		into STRICT	ds_retorno_w
		from 	nota_fiscal_item
		where 	nr_sequencia = nr_seq_nota_p;
	elsif (ie_tipo_dado_p = 36) then
		select	sum(vl_total_item_nf)
		into STRICT	ds_retorno_w
		from 	nota_fiscal_item
		where 	nr_sequencia = nr_seq_nota_p;
	elsif (ie_tipo_dado_p = 37) then
		select	sum(vl_desconto)
		into STRICT	ds_retorno_w
		from 	nota_fiscal_item
		where 	nr_sequencia = nr_seq_nota_p;
	elsif (ie_tipo_dado_p = 38) then
		ds_retorno_w := nr_seq_forma_pagto_w;
	elsif (ie_tipo_dado_p = 39) then
		ds_retorno_w := nr_danfe_w;
	elsif (ie_tipo_dado_p = 40) then
		ds_retorno_w :=	nr_sequencia_ref_w;
	elsif (ie_tipo_dado_p = 41) and (nr_sequencia_ref_w > 0) then
		
		select	nr_nota_fiscal
		into STRICT	ds_retorno_w
		from	nota_fiscal
		where	nr_sequencia = nr_sequencia_ref_w;
		
	elsif (ie_tipo_dado_p = 42) then
		begin
		if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') then

			select  max(ds_condicao_pagamento)
			into STRICT    ds_condicao_pagamento_w
			from    condicao_pagamento
			where   cd_condicao_pagamento   = cd_condicao_pagamento_w;
			ds_retorno_w    := substr(ds_condicao_pagamento_w,1,254);
		end if;
		end;
	elsif (ie_tipo_dado_p = 43) then
		ds_retorno_w := ie_status_envio_w;
	elsif (ie_tipo_dado_p = 44) then
		ds_retorno_w := ds_link_rps_w;
	elsif (ie_tipo_dado_p = 45) then
		select	sum(vl_liquido)
		into STRICT	ds_retorno_w
		from 	nota_fiscal_item
		where 	nr_sequencia = nr_seq_nota_p;
	elsif (ie_tipo_dado_p = 46) then
	
		select	sum(vl_unitario_item_nf * qt_item_nf)
		into STRICT	ds_retorno_w
		from 	nota_fiscal_item
		where 	nr_sequencia = nr_seq_nota_p;
	elsif (ie_tipo_dado_p = 47) then
		ds_retorno_w := vl_mercadoria_w - vl_total_nota_w;
		if (ds_retorno_w < 0) then
			ds_retorno_w := 0;
		end if;
	elsif (ie_tipo_dado_p = 48) then
		ds_retorno_w := vl_mercadoria_w;
	end if;

end if;
return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_nota_fiscal ( nr_seq_nota_p bigint, ie_tipo_dado_p text) FROM PUBLIC;

