-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_situacao_titulo_cobr ( nr_titulo_p bigint, nr_seq_cobranca_p bigint, ie_opcao_p text, nr_sequencia_p bigint DEFAULT 0) RETURNS varchar AS $body$
DECLARE


/*

ie_opcao_p

I	- Identificador
D	- Descrição

Identificador/Descrição

IC	- Inconsistências
TS	- Título sem saldo
DV	- Divergência de valor
DN	- Desconto x NC
BQ	- Bloqueado
IV	- Inválido
NC	- Nota de crédito gerada
NA	- Não se aplica

*/
ds_retorno_w			varchar(50);
ds_descricao_w			varchar(50);
ds_identificador_w			varchar(2);

ie_rejeitado_w			banco_ocorr_escrit_ret.ie_rejeitado%TYPE;
vl_saldo_inclusao_w		titulo_receber_cobr.vl_saldo_inclusao%TYPE;
nr_seq_nota_credito_w		nota_credito.nr_sequencia%TYPE;
vl_cobranca_w			titulo_receber_cobr.vl_cobranca%TYPE;
vl_liquidacao_w			titulo_receber_cobr.vl_liquidacao%TYPE;
vl_despesa_bancaria_w		titulo_receber_cobr.vl_despesa_bancaria%TYPE;
vl_desconto_w			titulo_receber_cobr.vl_desconto%TYPE;
vl_juros_w			titulo_receber_cobr.vl_juros%TYPE;
vl_multa_w			titulo_receber_cobr.vl_multa%TYPE;
vl_acrescimo_w			titulo_receber_cobr.vl_acrescimo%TYPE;
ie_remessa_retorno_w		cobranca_escritural.ie_remessa_retorno%TYPE;
vl_desconto_nc_w			double precision;
qt_inconsistencia_w		bigint;


BEGIN

SELECT	MAX(b.ie_rejeitado),
	MAX(a.vl_saldo_inclusao),
	(obter_dados_titulo_rec_cobr(MAX(a.nr_sequencia),'NC'))::numeric  nr_seq_nota_credito,
	MAX(a.vl_cobranca),
	MAX(a.vl_liquidacao),
	MAX(a.vl_despesa_bancaria),
	MAX(a.vl_desconto),
	MAX(a.vl_juros),
	MAX(a.vl_multa),
	MAX(a.vl_acrescimo),
	MAX(c.ie_remessa_retorno),
	(SUBSTR(obter_dados_titulo_rec_cobr(MAX(a.nr_sequencia),'DN'),1,255))::numeric  vl_desconto_nc
INTO STRICT	ie_rejeitado_w,
	vl_saldo_inclusao_w,
	nr_seq_nota_credito_w,
	vl_cobranca_w,
	vl_liquidacao_w,
	vl_despesa_bancaria_w,
	vl_desconto_w,
	vl_juros_w,
	vl_multa_w,
	vl_acrescimo_w,
	ie_remessa_retorno_w,
	vl_desconto_nc_w
FROM cobranca_escritural c, titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret b ON (a.nr_seq_ocorrencia_ret = b.nr_sequencia)
WHERE a.nr_seq_cobranca		= c.nr_sequencia  AND a.nr_titulo			= nr_titulo_p AND a.nr_seq_cobranca		= nr_seq_cobranca_p AND ((nr_sequencia_p = 0) OR (nr_sequencia_p <> 0  AND a.nr_sequencia	= nr_sequencia_p));

SELECT	COUNT(*)
INTO STRICT	qt_inconsistencia_w
FROM	inconsistencia_rem_escrit a
WHERE	a.nr_seq_cobr_escrit	= nr_seq_cobranca_p;

IF (coalesce(vl_saldo_inclusao_w,0)	= 0) AND (ie_rejeitado_w IS NOT NULL AND ie_rejeitado_w::text <> '') AND (ie_rejeitado_w		<> 'L') THEN

	ds_identificador_w	:= 'IV';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301876,NULL); --Inválido
ELSIF (coalesce(vl_saldo_inclusao_w,0)	= 0) AND (coalesce(ie_rejeitado_w,'L')	= 'L') THEN

	ds_identificador_w	:= 'TS';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301877,NULL); --Título sem saldo
ELSIF (coalesce(nr_seq_nota_credito_w,0)	<> 0) THEN

	ds_identificador_w	:= 'NC';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301878,NULL); -- Nota de crédito gerada
ELSIF (ie_rejeitado_w		= 'L') AND
	((coalesce(vl_saldo_inclusao_w,0)	<> coalesce(vl_cobranca_w,0)) OR
	((vl_liquidacao_w IS NOT NULL AND vl_liquidacao_w::text <> '') AND
	(vl_liquidacao_w	<> (coalesce(vl_cobranca_w,0) - coalesce(vl_despesa_bancaria_w,0) - coalesce(vl_desconto_w,0) + coalesce(vl_juros_w,0) + coalesce(vl_multa_w,0) + coalesce(vl_acrescimo_w,0))))) THEN

	ds_identificador_w	:= 'DV';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301879,NULL); -- Divergência de valor;
ELSIF (ie_remessa_retorno_w	= 'T') AND (ie_rejeitado_w		= 'L') AND (coalesce(vl_desconto_nc_w,0)	<> coalesce(vl_desconto_w,0)) THEN

	ds_identificador_w	:= 'DN';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301880,NULL); -- Desconto x NC
ELSIF (ie_rejeitado_w		= 'B') THEN

	ds_identificador_w	:= 'BQ';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301881,NULL); --Bloqueado
ELSIF (coalesce(qt_inconsistencia_w,0)	<> 0) THEN

	ds_identificador_w	:= 'IC';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301882,NULL); --Inconsistências
ELSE

	ds_identificador_w	:= 'NA';
	ds_descricao_w		:= wheb_mensagem_pck.get_texto(301883,NULL); -- Não se aplica
END IF;

IF (ie_opcao_p	= 'D') THEN

	ds_retorno_w	:= ds_descricao_w;

ELSE

	ds_retorno_w	:= ds_identificador_w;

END IF;

RETURN	ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_situacao_titulo_cobr ( nr_titulo_p bigint, nr_seq_cobranca_p bigint, ie_opcao_p text, nr_sequencia_p bigint DEFAULT 0) FROM PUBLIC;

