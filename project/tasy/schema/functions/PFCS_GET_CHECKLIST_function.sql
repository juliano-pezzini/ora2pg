-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pfcs_get_checklist ( nr_seq_encounter_p bigint, nr_seq_patient_p bigint, ie_return_type_p text) RETURNS varchar AS $body$
DECLARE

/*
	On track - all the orders that should be done by now are already done (even if there are future orders)
	Delayed - one or more orders that should be done by now are not done

	1 -> On track
	2 -> Delayed
	3 -> Pending

	Overall Status COLOR color type;Status Code: Item
	Example: Delayedcoloryellow; 1/3|1:Laboratory;2:Final Documents;3:Prescription

	On Database
	CARE_STATUS -> Pendingcoloryellow;1/3
	CHECK_LIST  -> 1:Laboratory;2:Final Documents;3:Prescription

	ie_return_type_p
	'MPL' -> Returns the value that will be shown in the Multiple Patients List
	'TOOLTIP' -> Returns the value that will be used to build the Tooltip
	
*/
checklist_w				pfcs_detail_patient.ds_checklist%type;
return_value_w			pfcs_detail_patient.ds_checklist%type;
procedures_list_w		pfcs_detail_patient.ds_checklist%type;
overall_status_w		varchar(30) := '';
category_status_w		smallint := 0;
qt_total_w				integer := 0;
qt_done_w				integer := 0;
qt_delayed_w			integer := 0;

c01 CURSOR FOR
	SELECT	distinct cd_category,
			ds_category_disp
	  from	pfcs_procedure
	 where	(period_start IS NOT NULL AND period_start::text <> '')
	   and	upper(si_status) in ('COMPLETED', 'IN-PROGRESS')
	   and	nr_seq_encounter = nr_seq_encounter_p
	   and	nr_seq_patient = nr_seq_patient_p;

c02 CURSOR(cd_category_p text) FOR
	SELECT	period_start,
			period_end,
			upper(si_status) si_status,
			ds_coding_disp
	  from	pfcs_procedure
	 where	cd_category = cd_category_p
	   and	upper(si_status) in ('COMPLETED', 'IN-PROGRESS')
	   and	(period_start IS NOT NULL AND period_start::text <> '')
	   and	nr_seq_encounter = nr_seq_encounter_p
	   and	nr_seq_patient = nr_seq_patient_p;
BEGIN

	for c01_w in c01 loop -- Getting the categories for the encounter
		category_status_w := 0;
		qt_total_w := qt_total_w + 1;
		procedures_list_w := '';

		for c02_w in c02(c01_w.cd_category) loop -- Looping over categories to get the status
			if (c02_w.si_status = 'COMPLETED') then -- Done
				if (category_status_w not in (2, 3)) then
					category_status_w := 1;
				end if;
			else
				if (c02_w.period_end < clock_timestamp()) then -- Delayed
					category_status_w := 2;
					if (procedures_list_w IS NOT NULL AND procedures_list_w::text <> '') then
						procedures_list_w := procedures_list_w || '$';
					end if;
					procedures_list_w := procedures_list_w || 'P:' || c02_w.ds_coding_disp || '#T:' || get_time_by_minutes((clock_timestamp() - c02_w.period_end) * 1440);
				elsif (category_status_w <> 2) then
					if ((coalesce(c02_w.period_end::text, '') = '') or (c02_w.period_end > clock_timestamp())) then -- Pending
						category_status_w := 3;
					end if;
				end if;
			end if;
        end loop;

		if (category_status_w = 1) then
			qt_done_w := qt_done_w + 1;
		elsif (category_status_w = 2) then
			qt_delayed_w := qt_delayed_w + 1;
		end if;

		if (procedures_list_w IS NOT NULL AND procedures_list_w::text <> '') then
			if (checklist_w IS NOT NULL AND checklist_w::text <> '') then
				checklist_w := checklist_w || '|';
			end if;
			checklist_w := substr(checklist_w || 'C:' || c01_w.ds_category_disp || ';' || procedures_list_w,1,4000);
		end if;
	end loop;

	if (qt_total_w > 0) then
		if (qt_delayed_w > 0) then
			overall_status_w := concat('302651','color#FFCD05;');
		elsif (qt_done_w <= qt_total_w) then
			overall_status_w := concat('764549','colortransparent;');
		end if;

		if (ie_return_type_p = 'MPL') then
			return_value_w := overall_status_w || qt_done_w || '/' || qt_total_w;
		elsif (ie_return_type_p = 'TOOLTIP') then
			return_value_w := checklist_w;
		end if;
	end if;

	return substr(return_value_w, 0, 4000);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pfcs_get_checklist ( nr_seq_encounter_p bigint, nr_seq_patient_p bigint, ie_return_type_p text) FROM PUBLIC;

