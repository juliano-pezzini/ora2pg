-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION retorna_media_ano_ant ( ie_tipo_ano_p text, ie_referencia_p text, nr_tipo_filtro_p bigint, nr_seq_gerencia_p bigint, nr_seq_grupo_p bigint, nm_usuario_p text, ie_funcao_grupo_p text ) RETURNS bigint AS $body$
DECLARE

 
/* 
  IE_TIPO_ANO_P 
  P - Ano passado 
  A - Ano atual 
*/
 
 
/* 
  IE_REFERENCIA_P 
  E - encerradas 
  D - defeitos 
*/
 
 
/* 
   NR_TIPO_FILTRO_P 
   0 - encerradas mÃªs 
   1 - defeitos 
   2 - encerradas dia 
*/
 
 
qt_resultado_w			bigint;
ie_periodo_atual_w		varchar(10);
qt_mes_01_w			double precision;
qt_mes_02_w			double precision;
qt_mes_03_w			double precision;
qt_mes_04_w			double precision;
qt_mes_05_w			double precision;
qt_mes_06_w			double precision;
qt_mes_07_w			double precision;
qt_mes_08_w			double precision;
qt_mes_09_w			double precision;
qt_mes_10_w			double precision;
qt_mes_11_w			double precision;
qt_mes_12_w			double precision;
ie_periodo_ini_calculo_w	varchar(10);
ie_periodo_fim_calculo_w	varchar(10);
dt_admissao_w			timestamp;
cd_pessoa_fisica_w		varchar(60);
qt_meses_w			bigint;


BEGIN 
	qt_resultado_w := 0;
 
	if (ie_tipo_ano_p = 'P') then 
	begin 
		if (ie_referencia_p = 'E') then 
			if (nr_tipo_filtro_p = 0) then 
 
				select	dividir(sum(coalesce(b.qt_mes_01,0)) + 
					sum(coalesce(b.qt_mes_02,0)) + 
					sum(coalesce(b.qt_mes_03,0)) + 
					sum(coalesce(b.qt_mes_04,0)) + 
					sum(coalesce(b.qt_mes_05,0)) + 
					sum(coalesce(b.qt_mes_06,0)) + 
					sum(coalesce(b.qt_mes_07,0)) + 
					sum(coalesce(b.qt_mes_08,0)) + 
					sum(coalesce(b.qt_mes_09,0)) + 
					sum(coalesce(b.qt_mes_10,0)) + 
					sum(coalesce(b.qt_mes_11,0)) + 
					sum(coalesce(b.qt_mes_12,0)), 12) 
				into STRICT	qt_resultado_w 
				from	w_avaliacao_usuario b, 
					usuario_nivel_des_v c 
				where	b.nm_usuario = c.nm_usuario_des 
				and	b.ie_referencia = 'E' 
				and	b.nm_usuario_cor = 'TASY' 
				and	b.dt_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -1, 0)				 
				and	((obter_se_valor_contido(nm_usuario_p, b.nm_usuario) = 'S') or (ie_funcao_grupo_p = 'S')) 
				and exists (	SELECT	1 
						from	grupo_desenvolvimento d, 
							usuario_grupo_des a 
						where	d.nr_sequencia = a.nr_seq_grupo 
						and	a.nm_usuario_grupo = b.nm_usuario 
						and	d.nr_seq_gerencia = nr_seq_gerencia_p 
						and	a.nr_seq_grupo = nr_seq_grupo_p );
 
			elsif (nr_tipo_filtro_p = 2) then 
 
				select	dividir(sum(coalesce(b.qt_mes_01,0)) + 
					sum(coalesce(b.qt_mes_02,0)) + 
					sum(coalesce(b.qt_mes_03,0)) + 
					sum(coalesce(b.qt_mes_04,0)) + 
					sum(coalesce(b.qt_mes_05,0)) + 
					sum(coalesce(b.qt_mes_06,0)) + 
					sum(coalesce(b.qt_mes_07,0)) + 
					sum(coalesce(b.qt_mes_08,0)) + 
					sum(coalesce(b.qt_mes_09,0)) + 
					sum(coalesce(b.qt_mes_10,0)) + 
					sum(coalesce(b.qt_mes_11,0)) + 
					sum(coalesce(b.qt_mes_12,0)), obter_qt_dia_util_periodo(to_char(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -12, 0),'dd/mm/yyyy'), 
											  to_char(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -1, 0), 'dd/mm/yyyy'), 1)) 
				into STRICT	qt_resultado_w 
				from	w_avaliacao_usuario b, 
					usuario_nivel_des_v c 
				where	b.nm_usuario = c.nm_usuario_des 
				and	b.ie_referencia = 'E' 
				and	b.nm_usuario_cor = 'TASY' 
				and	b.dt_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -1, 0)				 
				and	((obter_se_valor_contido(nm_usuario_p, b.nm_usuario) = 'S') or (ie_funcao_grupo_p = 'S')) 
				and exists (	SELECT	1 
						from	grupo_desenvolvimento d, 
							usuario_grupo_des a 
						where	d.nr_sequencia = a.nr_seq_grupo 
						and	a.nm_usuario_grupo = b.nm_usuario 
						and	d.nr_seq_gerencia = nr_seq_gerencia_p 
						and	a.nr_seq_grupo = nr_seq_grupo_p );
			end if;
		elsif (ie_referencia_p = 'PR') then 
			select	dividir(sum(coalesce(b.qt_mes_01,0)) + 
				sum(coalesce(b.qt_mes_02,0)) + 
				sum(coalesce(b.qt_mes_03,0)) + 
				sum(coalesce(b.qt_mes_04,0)) + 
				sum(coalesce(b.qt_mes_05,0)) + 
				sum(coalesce(b.qt_mes_06,0)) + 
				sum(coalesce(b.qt_mes_07,0)) + 
				sum(coalesce(b.qt_mes_08,0)) + 
				sum(coalesce(b.qt_mes_09,0)) + 
				sum(coalesce(b.qt_mes_10,0)) + 
				sum(coalesce(b.qt_mes_11,0)) + 
				sum(coalesce(b.qt_mes_12,0)), 12) 
			into STRICT	qt_resultado_w 
			from	w_avaliacao_usuario b, 
				usuario_nivel_des_v c 
			where	b.nm_usuario = c.nm_usuario_des 
			and	b.ie_referencia = 'PR' 
			and	b.nm_usuario_cor = 'TASY' 
			and	b.dt_referencia = PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -1, 0)			 
			and	((obter_se_valor_contido(nm_usuario_p, b.nm_usuario) = 'S') or (ie_funcao_grupo_p = 'S')) 
			and exists (	SELECT	1 
					from	grupo_desenvolvimento d, 
						usuario_grupo_des a 
					where	d.nr_sequencia = a.nr_seq_grupo 
					and	a.nm_usuario_grupo = b.nm_usuario 
					and	d.nr_seq_gerencia = nr_seq_gerencia_p 
					and	a.nr_seq_grupo = nr_seq_grupo_p );
		end if;
	end;
	elsif (ie_tipo_ano_p = 'A') then 
	begin 
		if (ie_referencia_p = 'E') then 
 
			select	sum(coalesce(b.qt_mes_01,0)), 
				sum(coalesce(b.qt_mes_02,0)), 
				sum(coalesce(b.qt_mes_03,0)), 
				sum(coalesce(b.qt_mes_04,0)), 
				sum(coalesce(b.qt_mes_05,0)), 
				sum(coalesce(b.qt_mes_06,0)), 
				sum(coalesce(b.qt_mes_07,0)), 
				sum(coalesce(b.qt_mes_08,0)), 
				sum(coalesce(b.qt_mes_09,0)), 
				sum(coalesce(b.qt_mes_10,0)), 
				sum(coalesce(b.qt_mes_11,0)), 
				sum(coalesce(b.qt_mes_12,0)) 
			into STRICT	qt_mes_01_w, 
				qt_mes_02_w, 
				qt_mes_03_w, 
				qt_mes_04_w, 
				qt_mes_05_w, 
				qt_mes_06_w, 
				qt_mes_07_w, 
				qt_mes_08_w, 
				qt_mes_09_w, 
				qt_mes_10_w, 
				qt_mes_11_w, 
				qt_mes_12_w 
			from	w_avaliacao_usuario b, 
				usuario_nivel_des_v c 
			where	b.nm_usuario = c.nm_usuario_des 
			AND	(b.nr_seq_grupo_des IS NOT NULL AND b.nr_seq_grupo_des::text <> '') 
			and	b.ie_referencia = 'E' 
			and	b.nm_usuario_cor = 'TASY' 
			--and	b.dt_referencia between PKG_DATE_UTILS.start_of(sysdate, 'year', 0) and PKG_DATE_UTILS.start_of(sysdate, 'day', 0) 
			and	((obter_se_valor_contido(nm_usuario_p, b.nm_usuario) = 'S') or (ie_funcao_grupo_p = 'S')) 
			and exists (	SELECT	1 
					from	grupo_desenvolvimento d, 
						usuario_grupo_des a 
					where	d.nr_sequencia = a.nr_seq_grupo 
					and	a.nm_usuario_grupo = b.nm_usuario 
					and	d.nr_seq_gerencia = nr_seq_gerencia_p 
					and	a.nr_seq_grupo = nr_seq_grupo_p );
 
 
		elsif (ie_referencia_p = 'PR') then 
 
			select	sum(coalesce(b.qt_mes_01,0)), 
				sum(coalesce(b.qt_mes_02,0)), 
				sum(coalesce(b.qt_mes_03,0)), 
				sum(coalesce(b.qt_mes_04,0)), 
				sum(coalesce(b.qt_mes_05,0)), 
				sum(coalesce(b.qt_mes_06,0)), 
				sum(coalesce(b.qt_mes_07,0)), 
				sum(coalesce(b.qt_mes_08,0)), 
				sum(coalesce(b.qt_mes_09,0)), 
				sum(coalesce(b.qt_mes_10,0)), 
				sum(coalesce(b.qt_mes_11,0)), 
				sum(coalesce(b.qt_mes_12,0)) 
			into STRICT	qt_mes_01_w, 
				qt_mes_02_w, 
				qt_mes_03_w, 
				qt_mes_04_w, 
				qt_mes_05_w, 
				qt_mes_06_w, 
				qt_mes_07_w, 
				qt_mes_08_w, 
				qt_mes_09_w, 
				qt_mes_10_w, 
				qt_mes_11_w, 
				qt_mes_12_w 
			from	w_avaliacao_usuario b, 
				usuario_nivel_des_v c 
			where	b.nm_usuario = c.nm_usuario_des 
			and	b.ie_referencia = 'PR' 
			and	b.nm_usuario_cor = 'TASY' 
			and	b.dt_referencia between PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0) and PKG_DATE_UTILS.start_of(clock_timestamp(), 'day', 0) 
			and	((obter_se_valor_contido(nm_usuario_p, b.nm_usuario) = 'S') or (ie_funcao_grupo_p = 'S')) 
			and exists (	SELECT	1 
					from	grupo_desenvolvimento d, 
						usuario_grupo_des a 
					where	d.nr_sequencia = a.nr_seq_grupo 
					and	a.nm_usuario_grupo = b.nm_usuario 
					and	d.nr_seq_gerencia = nr_seq_gerencia_p 
					and	a.nr_seq_grupo = nr_seq_grupo_p );
 
		end if;
 
		if (ie_tipo_ano_p = 'A') then 
			ie_periodo_ini_calculo_w := to_char(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -1, 0), 'dd/mm/yyyy');
			ie_periodo_fim_calculo_w := to_char(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'day', 0), -1, 0), 'dd/mm/yyyy');
		else 
			ie_periodo_ini_calculo_w := to_char(PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0), -12, 0), 'dd/mm/yyyy');
			ie_periodo_fim_calculo_w := to_char(PKG_DATE_UTILS.ADD_MONTH(fim_mes(PKG_DATE_UTILS.start_of(clock_timestamp(), 'year', 0)), -1, 0), 'dd/mm/yyyy');
		end if;
 
		select	to_char(clock_timestamp(), 'mm') 
		into STRICT	ie_periodo_atual_w 
		;
 
		if (ie_referencia_p = 'E') and (nr_tipo_filtro_p = 2) then 
			 
 
			begin 
			cd_pessoa_fisica_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');
 
			select	PKG_DATE_UTILS.start_of(coalesce(max(dt_admissao_hosp),clock_timestamp() - interval '400 days'),'month', 0) 
			into STRICT	dt_admissao_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
			qt_meses_w	:= obter_meses_entre_datas_util(dt_admissao_w,PKG_DATE_UTILS.start_of(clock_timestamp(),'month',0)-1);
 
			 
			if (qt_meses_w >= 12) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w + qt_mes_03_w + qt_mes_02_w + qt_mes_01_w), 12);
			elsif (qt_meses_w = 11) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w + qt_mes_03_w + qt_mes_02_w), 11);
			elsif (qt_meses_w = 10) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w + qt_mes_03_w), 10);
			elsif (qt_meses_w = 9) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w), 9);	
			elsif (qt_meses_w = 8) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w), 8);
			elsif (qt_meses_w = 7) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w), 7);
			elsif (qt_meses_w = 6) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w), 6);
			elsif (qt_meses_w = 5) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w), 5);
			elsif (qt_meses_w = 4) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w), 4);
			elsif (qt_meses_w = 3) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w), 3);
			elsif (qt_meses_w = 2) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w), 2);
			elsif (qt_meses_w = 1) then 
				qt_resultado_w := qt_mes_12_w;
			end if;
 
			end;
 
		else 
			begin 
			cd_pessoa_fisica_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');
 
			select	PKG_DATE_UTILS.start_of(coalesce(max(dt_admissao_hosp),clock_timestamp() - interval '400 days'),'month', 0) 
			into STRICT	dt_admissao_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
			qt_meses_w	:= obter_meses_entre_datas_util(dt_admissao_w, PKG_DATE_UTILS.start_of(clock_timestamp(),'month',0)-1);
			 
			if (qt_meses_w >= 12) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w + qt_mes_03_w + qt_mes_02_w + qt_mes_01_w), 12);
			elsif (qt_meses_w = 11) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w + qt_mes_03_w + qt_mes_02_w), 11);
			elsif (qt_meses_w = 10) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w + qt_mes_03_w), 10);
			elsif (qt_meses_w = 9) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w + qt_mes_04_w), 9);	
			elsif (qt_meses_w = 8) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w + qt_mes_05_w), 8);
			elsif (qt_meses_w = 7) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w + qt_mes_06_w), 7);
			elsif (qt_meses_w = 6) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w + qt_mes_07_w), 6);
			elsif (qt_meses_w = 5) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w + qt_mes_08_w), 5);
			elsif (qt_meses_w = 4) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w + qt_mes_09_w), 4);
			elsif (qt_meses_w = 3) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w + qt_mes_10_w), 3);
			elsif (qt_meses_w = 2) then 
				qt_resultado_w := dividir((qt_mes_12_w + qt_mes_11_w), 2);
			elsif (qt_meses_w = 1) then 
				qt_resultado_w := qt_mes_12_w;
			end if;
 
			end;
		end if;
	end;
	end if;
 
return	qt_resultado_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION retorna_media_ano_ant ( ie_tipo_ano_p text, ie_referencia_p text, nr_tipo_filtro_p bigint, nr_seq_gerencia_p bigint, nr_seq_grupo_p bigint, nm_usuario_p text, ie_funcao_grupo_p text ) FROM PUBLIC;

