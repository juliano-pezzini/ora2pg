-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_prot_rec_glosa ( nr_seq_protocolo_prest_p text, cd_cnpj_prest_p text, nr_cpf_prest_p text, cd_prestador_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


nr_seq_prestador_w                pls_prestador.nr_sequencia%type;
nr_seq_protocolo_w                pls_protocolo_conta.nr_sequencia%type;
ie_rec_glosa_w                    varchar(1);


BEGIN

/*Obtem qual e o prestador*/

nr_seq_prestador_w	:= pls_obter_prestador_imp(cd_cnpj_prest_p,nr_cpf_prest_p,cd_prestador_p,null,null,null,'C',cd_estabelecimento_p);
ie_rec_glosa_w 		:= 'N';

/*Busca o protocolo conforme o numero do protocolo prestador e o prestador importado de referencia*/

select  max(nr_sequencia)
into STRICT	nr_seq_protocolo_w
from	pls_protocolo_conta
where	nr_protocolo_prestador		= nr_seq_protocolo_prest_p
and	nr_seq_prestador_imp_ref	= nr_seq_prestador_w;

/*Caso nao achar, busca o protocolo conforme o numero do protocolo prestador e o prestador da tabela*/

if (coalesce(nr_seq_protocolo_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_protocolo_w
	from	pls_protocolo_conta
	where	nr_protocolo_prestador	= nr_seq_protocolo_prest_p
	and	nr_seq_prestador	= nr_seq_prestador_w;

	/*Caso nao achar, busca o protocolo conforme o numero de sequencia do protocolo e o prestador importador de referencia da tabela*/

	if (coalesce(nr_seq_protocolo_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_protocolo_w
		from	pls_protocolo_conta
		where	to_char(nr_sequencia)		= nr_seq_protocolo_prest_p
		and	nr_seq_prestador_imp_ref	= nr_seq_prestador_w;

		/*Caso nao achar, busca o protocolo conforme o numero de sequencia do protocolo e o prestador da tabela*/

		if (coalesce(nr_seq_protocolo_w::text, '') = '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_protocolo_w
			from	pls_protocolo_conta
			where	to_char(nr_sequencia)	= nr_seq_protocolo_prest_p
			and	nr_seq_prestador	= nr_seq_prestador_w;

			
			-- Caso nao encontre, ira procurar na conta medica resumo, ira verificar se o prestador indicado esta incluido como prestador de pagamento
			if (coalesce(nr_seq_protocolo_w::text, '') = '') then
				select	max(nr_seq_protocolo) 
				into STRICT	nr_seq_protocolo_w
				from 	pls_conta_medica_resumo s 
				where 	s.nr_seq_protocolo = nr_seq_protocolo_prest_p
				and 	nr_seq_prestador_pgto = nr_seq_prestador_w;
			end if;

			-- caso nao achar, ira procurar com o CPF ou CNPJ de todos os prestadores com o mesmo documento
			-- Isso pois o mesmo CPF e CNPJ podem ser utilizados para mais de um prestador, podendo trazer o prestador errado
			-- OS 2637541 SJRP
			if (coalesce(nr_seq_protocolo_w::text, '') = '') then
				
				if 	(cd_cnpj_prest_p IS NOT NULL AND cd_cnpj_prest_p::text <> '') then
					select	max(nr_sequencia)
					into STRICT  	nr_seq_protocolo_w
					from  	pls_protocolo_conta
					where 	to_char(nr_sequencia) = nr_seq_protocolo_prest_p
					and 	nr_seq_prestador  in (SELECT d.nr_sequencia from pls_prestador d where d.cd_cgc = cd_cnpj_prest_p);
				end if;

				if 	(nr_cpf_prest_p IS NOT NULL AND nr_cpf_prest_p::text <> '') then
					select 	max(nr_sequencia)
					into STRICT  	nr_seq_protocolo_w
					from  	pls_protocolo_conta
					where 	to_char(nr_sequencia) = nr_seq_protocolo_prest_p
					and 	nr_seq_prestador  in (	SELECT 	nr_sequencia
									from 	pls_prestador d,
										pessoa_fisica pf
									where 	d.cd_pessoa_fisica = pf.cd_pessoa_fisica
									and 	pf.nr_cpf = nr_cpf_prest_p);
				end if;
			end if;

			/*Caso nao achar, busca o protocolo de recurso de glosa conforme o numero de sequencia do protocolo e o prestador da tabela*/

			if (coalesce(nr_seq_protocolo_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_protocolo_w
				from	pls_rec_glosa_protocolo
				where	to_char(nr_sequencia) = nr_seq_protocolo_prest_p
				and	nr_seq_prestador = nr_seq_prestador_w;

        			if 	(nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
           				ie_rec_glosa_w := 'S';
        			end if;

        
			end if;

		end if;
	end if;
end if;

return	ie_rec_glosa_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_prot_rec_glosa ( nr_seq_protocolo_prest_p text, cd_cnpj_prest_p text, nr_cpf_prest_p text, cd_prestador_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

