-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_volume_desconto_ele ( ie_tipo_elemento_p text, nr_sequencia_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


qt_retorno_w		double precision;
nr_seq_fosforo_w	bigint;
nr_seq_potassio_w	bigint;
cd_material_w		bigint;
qt_volume_w			double precision;
qt_pot_clor_fosforo_w	double precision;
qt_diaria_w				double precision;
qt_diaria_2w			double precision;
qt_conversao_ml_w		double precision;
qt_volume2_w			double precision;
qt_fosforo_w			double precision;
qt_diaria_sodio_w		double precision;
NR_SEQ_MATERIAL_W		bigint;
nr_seq_sodio_w			bigint;
nr_seq_zinco_w			bigint;
nr_seq_oligoelemento_w	bigint;


BEGIN

if (ie_tipo_elemento_p = 'P') then /* Potássio */
	select coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_potassio_w
	from	nut_elemento
	where	ie_tipo_elemento	= 'K'
	and		ie_npt_pediatrica	= 'S';

	select coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_fosforo_w
	from	nut_elemento
	where	ie_tipo_elemento	= 'F'
	and	ie_npt_pediatrica	= 'S';

	select	coalesce(max(c.cd_material),0),
		coalesce(max(b.qt_volume),0)
	into STRICT	cd_material_w,
		qt_volume_w
	from	nut_elem_material c,
		nut_pac_elem_mat b,
		nut_pac_elemento a
	where	b.nr_seq_elem_mat	= c.nr_sequencia
	and	a.nr_sequencia	= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_fosforo_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p
	and	coalesce(c.ie_tipo,'NPT')	= 'NPT';

	/* Obter dados do potássio */

	begin
	select	dividir(qt_volume_w, qt_conversao_ml)
	into STRICT	qt_pot_clor_fosforo_w
	from	nut_elem_material
	where	nr_seq_elemento	= nr_seq_potassio_w
	and		cd_material		= cd_material_w
	and		coalesce(ie_tipo,'NPT')	= 'NPT';
	exception
	when others then
		qt_pot_clor_fosforo_w:= 0;
	end;
	select	coalesce(max(a.qt_diaria),0),
		coalesce(max(b.nr_sequencia),0)
	into STRICT	qt_diaria_w,
		nr_seq_material_w
	from	nut_pac_elem_mat b,
		nut_pac_elemento a
	where	a.nr_sequencia	= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_potassio_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p;

	select	coalesce(max(c.qt_conversao_ml),0)
	into STRICT	qt_conversao_ml_w
	from	nut_elem_material c,
		nut_pac_elem_mat b,
		nut_pac_elemento a
	where	b.nr_seq_elem_mat	= c.nr_sequencia
	and	a.nr_sequencia	= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_potassio_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p
	and	coalesce(c.ie_tipo,'NPT')	= 'NPT';

/* Atualizar dados do potássio */

	qt_diaria_2w	:= qt_diaria_w;

	if (ie_opcao_p	= 'V') then
		qt_retorno_w	:= qt_pot_clor_fosforo_w;
	elsif (ie_opcao_p	= 'D') then
		qt_retorno_w	:= qt_diaria_2w;
	elsif (ie_opcao_p	= 'C') then
		qt_retorno_w	:= qt_conversao_ml_w;
	elsif (ie_opcao_p	= 'M') then
		qt_retorno_w	:= nr_seq_material_w;
	elsif (ie_opcao_p	= 'T') then
		qt_diaria_w		:= qt_diaria_w - qt_pot_clor_fosforo_w;
		if (qt_diaria_w < 0) then
			qt_diaria_w		:= 0;
		end if;
		qt_volume_w		:= qt_diaria_w * qt_conversao_ml_w;
		qt_volume2_w	:= qt_diaria_2w * qt_conversao_ml_w;
		qt_retorno_w	:= round((qt_volume2_w - qt_volume_w)::numeric,2);
	end if;

elsif (ie_tipo_elemento_p = 'S') then /* Sódio */
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_sodio_w
	from	nut_elemento
	where	ie_tipo_elemento	= 'N'
	and	coalesce(ie_gerar_ped,'N')	= 'S';

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_fosforo_w
	from	nut_elemento
	where	ie_tipo_elemento	= 'F';

	select	coalesce(max(c.cd_material),0),
			coalesce(max(b.qt_volume),0),
			coalesce(max(a.qt_diaria),0)
	into STRICT	cd_material_w,
			qt_volume_w,
			qt_diaria_w
	from	nut_elem_material c,
			nut_pac_elem_mat b,
			nut_pac_elemento a
	where	b.nr_seq_elem_mat	= c.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_fosforo_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p
	and	coalesce(c.ie_tipo,'NPT')	= 'NPT';

/* Obter dados do fósforo
Pegar os valores do Fósforo orgânico, porém a conversão deve ser de acordo com o cadastro do sódio, uma vez que o PRODUTO é o mesmo em ambos */
	select	max(qt_diaria)
	into STRICT	qt_diaria_sodio_w
	from	nut_pac_elemento a
	where	nr_seq_elemento		= nr_seq_sodio_w
	and		a.nr_seq_nut_pac	= nr_sequencia_p;

	begin
	select	dividir(qt_volume_w, qt_conversao_ml)
	into STRICT	qt_fosforo_w
	from	nut_elem_material
	where	nr_seq_elemento		= nr_seq_sodio_w
	and		cd_material		= cd_material_w
	and		coalesce(ie_tipo,'NPT')	= 'NPT';
	exception
	when others then
		qt_fosforo_w	:= 0;
	end;

	select	coalesce(max(a.qt_diaria),0),
			coalesce(max(b.nr_sequencia),0)
	into STRICT	qt_diaria_w,
			nr_seq_material_w
	from	nut_pac_elem_mat b,
			nut_pac_elemento a
	where	a.nr_sequencia	= b.nr_seq_pac_elem
	and		a.nr_seq_elemento	= nr_seq_sodio_w
	and		a.nr_seq_nut_pac	= nr_sequencia_p;

	select	coalesce(max(c.qt_conversao_ml),0)
	into STRICT	qt_conversao_ml_w
	from	nut_elem_material c,
			nut_pac_elem_mat b,
			nut_pac_elemento a
	where	b.nr_seq_elem_mat	= c.nr_sequencia
	and		a.nr_sequencia		= b.nr_seq_pac_elem
	and		a.nr_seq_elemento	= nr_seq_sodio_w
	and		a.nr_seq_nut_pac	= nr_sequencia_p
	and		coalesce(c.ie_tipo,'NPT')	= 'NPT';

/* Atualizar dados do potássio */

	if (ie_opcao_p	= 'V') then
		qt_retorno_w	:= qt_fosforo_w;
	elsif (ie_opcao_p	= 'D') then
		qt_retorno_w	:= qt_diaria_sodio_w;
	end if;
elsif (ie_tipo_elemento_p = 'Z') then /* Zinco */
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_zinco_w
	from	nut_elemento
	where	ie_tipo_elemento	= 'N'
	and	coalesce(ie_gerar_ped,'N')	= 'S';

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_oligoelemento_w
	from	nut_elemento
	where	ie_tipo_elemento	= 'F';

	select	coalesce(max(c.cd_material),0),
		coalesce(max(b.qt_volume),0),
		coalesce(max(a.qt_diaria),0)
	into STRICT	cd_material_w,
		qt_volume_w,
		qt_diaria_w
	from	nut_elem_material c,
		nut_pac_elem_mat b,
		nut_pac_elemento a
	where	b.nr_seq_elem_mat	= c.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_oligoelemento_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p
	and	coalesce(c.ie_tipo,'NPT')	= 'NPT';

	select	max(qt_diaria)
	into STRICT	qt_diaria_sodio_w
	from	nut_pac_elemento a
	where	nr_seq_elemento		= nr_seq_sodio_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p;

	begin
	select	dividir(qt_volume_w, qt_conversao_ml)
	into STRICT	qt_fosforo_w
	from	nut_elem_material
	where	nr_seq_elemento		= nr_seq_sodio_w
	and	cd_material		= cd_material_w
	and	coalesce(ie_tipo,'NPT')	= 'NPT';
	exception
	when others then
		qt_fosforo_w	:= 0;
	end;

	select	coalesce(max(a.qt_diaria),0),
		coalesce(max(b.nr_sequencia),0)
	into STRICT	qt_diaria_w,
		nr_seq_material_w
	from	nut_pac_elem_mat b,
		nut_pac_elemento a
	where	a.nr_sequencia	= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_sodio_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p;

	select	coalesce(max(c.qt_conversao_ml),0)
	into STRICT	qt_conversao_ml_w
	from	nut_elem_material c,
		nut_pac_elem_mat b,
		nut_pac_elemento a
	where	b.nr_seq_elem_mat	= c.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_pac_elem
	and	a.nr_seq_elemento	= nr_seq_sodio_w
	and	a.nr_seq_nut_pac	= nr_sequencia_p
	and	coalesce(c.ie_tipo,'NPT')	= 'NPT';

/* Atualizar dados do potássio */

	if (ie_opcao_p	= 'V') then
		qt_retorno_w	:= qt_fosforo_w;
	elsif (ie_opcao_p	= 'D') then
		qt_retorno_w	:= qt_diaria_sodio_w;
	end if;
end if;

return	qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_volume_desconto_ele ( ie_tipo_elemento_p text, nr_sequencia_p bigint, ie_opcao_p text) FROM PUBLIC;

