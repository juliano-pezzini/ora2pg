-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_seq_proc_min_concorr ( nr_seq_regra_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_retorno_w		bigint 	:= 0;
cd_proc_concorrente_w		bigint;
ie_origem_proced_concorr_w	smallint;
nr_seq_req_proc_w		bigint;
cd_proc_req_w			bigint;
ie_orig_proc_req_w		smallint;
nr_seq_min_w			bigint	:= 9999999999;
nr_seq_guia_proc_w		bigint;
cd_proc_guia_w			bigint;
ie_orig_proc_guia_w		smallint;
nr_seq_exec_proc_w		bigint;
cd_proc_exec_w			bigint;
ie_orig_proc_exec_w		smallint;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_proc_concorrente
	where	nr_seq_regra 		= nr_seq_regra_p
	and	ie_ocorrencia		= 'S'
	and	ie_situacao		= 'A';

C02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_p;

C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_execucao_req_item
	where	nr_seq_execucao	= nr_seq_execucao_p;


BEGIN

open C01;
loop
fetch C01 into
	cd_proc_concorrente_w,
	ie_origem_proced_concorr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
		begin

		open C03;
		loop
		fetch C03 into
			nr_seq_guia_proc_w,
			cd_proc_guia_w,
			ie_orig_proc_guia_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (cd_proc_concorrente_w		= cd_proc_guia_w) and (ie_origem_proced_concorr_w	= ie_orig_proc_guia_w) then
				if (nr_seq_min_w > nr_seq_guia_proc_w) then
					nr_seq_min_w 	:= nr_seq_guia_proc_w;
				end if;
			end if;
			end;
		end loop;
		close C03;

		end;
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
		begin

		open C02;
		loop
		fetch C02 into
			nr_seq_req_proc_w,
			cd_proc_req_w,
			ie_orig_proc_req_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (cd_proc_concorrente_w		= cd_proc_req_w) and (ie_origem_proced_concorr_w	= ie_orig_proc_req_w) then
				if (nr_seq_min_w > nr_seq_req_proc_w) then
					nr_seq_min_w 	:= nr_seq_req_proc_w;
				end if;
			end if;
			end;
		end loop;
		close C02;

		end;
	elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then

		open C04;
		loop
		fetch C04 into
			nr_seq_exec_proc_w,
			cd_proc_exec_w,
			ie_orig_proc_exec_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			if (cd_proc_concorrente_w		= cd_proc_exec_w) and (ie_origem_proced_concorr_w	= ie_orig_proc_exec_w) then
				if (nr_seq_min_w > nr_seq_exec_proc_w) then
					nr_seq_min_w 	:= nr_seq_exec_proc_w;
				end if;
			end if;
			end;
		end loop;
		close C04;

	end if;
end loop;
close C01;

if (nr_seq_min_w = 999999999) then
	nr_seq_retorno_w	:= 0;
else
	nr_seq_retorno_w	:= nr_seq_min_w;
end if;

return	nr_seq_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_seq_proc_min_concorr ( nr_seq_regra_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint) FROM PUBLIC;

