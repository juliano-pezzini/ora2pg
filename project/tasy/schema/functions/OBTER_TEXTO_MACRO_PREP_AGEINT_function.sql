-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_texto_macro_prep_ageint ( nr_seq_regra_prep_p bigint, nr_seq_ageint_item_p bigint, ds_texto_p text, ie_dia_p text default 'S') RETURNS text AS $body$
DECLARE


/* dominio 10184 */

TYPE lista_macros IS TABLE OF varchar(255) INDEX BY integer;

vl_parametro_w	varchar(10);
ds_comando_w		varchar(255);
ds_param_w		varchar(255);
qt_valor_temp_w	AGEINT_ORIENT_PREP_MACRO.vl_macro%type := 0;
qt_valor_w	AGEINT_ORIENT_PREP_MACRO.vl_macro%type := 0;
nr_seq_agenda_exame_w agenda_integrada_item.nr_seq_agenda_exame%type;
nr_seq_agenda_cons_w agenda_integrada_item.nr_seq_agenda_cons%type;
dt_agenda_w		timestamp;
nr_seq_agenda_int_w	agenda_integrada.nr_sequencia%type;
ds_retorno_w	text := '';
nr_seq_topografia_w	agenda_paciente.cd_topografia_proced%type;
ie_tipo_atendimento_w	agenda_paciente.ie_tipo_atendimento%type;
lista_macros_w	lista_macros;
ind	bigint;
ds_lista_macro_w varchar(4000) := ageint_obter_macro_prep('S');
ds_macro_w varchar(255) := '';

c01 CURSOR FOR
	SELECT nr_seq_agenda_exame, nr_seq_proc_interno, obter_estab_item_ageint(a.nr_seq_agenda_cons, a.nr_seq_agenda_exame) cd_estabelecimento
	from agenda_integrada_item a
	where nr_seq_agenda_int = nr_seq_agenda_int_w
	and (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and ((ie_dia_p = 'N')
	or (((nr_seq_agenda_exame IS NOT NULL AND nr_seq_agenda_exame::text <> '') and (SELECT max(trunc(x.dt_agenda))
												from agenda_paciente x
												where x.nr_sequencia = a.nr_seq_agenda_exame
												and x.ie_status_agenda <> 'C') = dt_agenda_w)
	or ((nr_seq_agenda_cons IS NOT NULL AND nr_seq_agenda_cons::text <> '') and (select max(trunc(x.dt_agenda))
											from agenda_consulta x
											where x.nr_sequencia = a.nr_seq_agenda_cons
											and x.ie_status_agenda <> 'C')= dt_agenda_w)));

BEGIN
ds_retorno_w := ds_texto_p;
if (nr_seq_ageint_item_p IS NOT NULL AND nr_seq_ageint_item_p::text <> '') and (ds_texto_p IS NOT NULL AND ds_texto_p::text <> '') then
	ind := 1;
	while(length(ds_lista_macro_w) > 0) loop
		ds_macro_w := substr(ds_lista_macro_w, 1, position(';' in ds_lista_macro_w)-1);
		ds_lista_macro_w := substr(ds_lista_macro_w, position(';' in ds_lista_macro_w)+1);
		lista_macros_w(ind) := ds_macro_w;
		ind := ind+1;
	end loop;
	ind := lista_macros_w.last;
	
	select max(nr_seq_agenda_exame),
			max(nr_seq_agenda_cons),
			max(nr_seq_agenda_int)
	into STRICT nr_seq_agenda_exame_w,
		nr_seq_agenda_cons_w,
		nr_seq_agenda_int_w
	from agenda_integrada_item
	where nr_sequencia = nr_seq_ageint_item_p;
	
	if (nr_seq_agenda_exame_w IS NOT NULL AND nr_seq_agenda_exame_w::text <> '') then
		select 	max(trunc(dt_agenda))
		into STRICT 	dt_agenda_w
		from 	agenda_paciente
		where 	nr_sequencia = nr_seq_agenda_exame_w;
	else
		select 	max(trunc(dt_agenda))
		into STRICT 	dt_agenda_w
		from 	agenda_consulta
		where 	nr_sequencia = nr_seq_agenda_cons_w;
	end if;
	
	while(ind > 0) loop
		qt_valor_w := 0;
		qt_valor_temp_w := 0;
		for c01_w in c01 loop
			select 	coalesce(max(ie_tipo_atendimento),0),
					coalesce(max(cd_topografia_proced),0)
			into STRICT 	ie_tipo_atendimento_w,
					nr_seq_topografia_w
			from 	agenda_paciente
			where 	nr_sequencia = c01_w.nr_seq_agenda_exame;
			
			select max(vl_macro)
			into STRICT qt_valor_temp_w
			from AGEINT_ORIENT_PREP_MACRO a
			where ie_macro = ind
			and a.nr_seq_orient_prep_regra in (SELECT x.nr_sequencia
							from AGEINT_ORIENT_PREP_REGRA x
							where coalesce(x.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
							and coalesce(x.nr_seq_proc_interno,c01_w.nr_seq_proc_interno) = c01_w.nr_seq_proc_interno
							and	coalesce(x.nr_seq_topografia, coalesce(nr_seq_topografia_w,0)) = coalesce(nr_seq_topografia_w,0)
							and	coalesce(x.ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,0)
							and x.nr_seq_orient_preparo = nr_seq_regra_prep_p);
			if (qt_valor_temp_w > qt_valor_w) then
				qt_valor_w := qt_valor_temp_w;
			end if;
		end loop;
		ds_retorno_w := replace_macro_clob(ds_retorno_w, lista_macros_w(ind), qt_valor_w);
		ind := ind-1;
	end loop;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_texto_macro_prep_ageint ( nr_seq_regra_prep_p bigint, nr_seq_ageint_item_p bigint, ds_texto_p text, ie_dia_p text default 'S') FROM PUBLIC;

