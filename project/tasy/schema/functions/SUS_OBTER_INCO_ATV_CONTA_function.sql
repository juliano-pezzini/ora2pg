-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_inco_atv_conta ( cd_inconsistencia_p text, nr_interno_conta_p bigint, nr_seq_procedimento_p bigint) RETURNS boolean AS $body$
DECLARE


ie_consiste_w		varchar(1)	:= 'N';
ie_aih_w			varchar(1)	:= 'S';
ie_apac_w		varchar(1)	:= 'S';
ie_bpa_con_w		varchar(1)	:= 'S';
ie_bpa_ind_w		varchar(1)	:= 'S';
cd_funcao_w		integer;
ie_retorno_w		boolean		:= false;
qt_proc_bpa_w		bigint	:= 0;
qt_apac_w		bigint	:= 0;
ie_tipo_atendimento_w	smallint;
ie_atend_aih_w		boolean		:= false;
ie_atend_apac_w		boolean		:= false;


BEGIN

CALL sus_obter_inco_ativa_pck.set_sus_obter_inco_ativa(cd_inconsistencia_p);
ie_consiste_w	:= sus_obter_inco_ativa_pck.get_ie_consiste;
ie_aih_w	:= sus_obter_inco_ativa_pck.get_ie_aih;
ie_apac_w	:= sus_obter_inco_ativa_pck.get_ie_apac;
ie_bpa_con_w	:= sus_obter_inco_ativa_pck.get_ie_bpa_con;
ie_bpa_ind_w	:= sus_obter_inco_ativa_pck.get_ie_bpa_ind;

if (ie_consiste_w	= 'N') then
	ie_retorno_w	:= false;
elsif (ie_consiste_w	= 'S') then
	cd_funcao_w	:= coalesce(obter_funcao_ativa,0);
	if (cd_funcao_w	= 1123) or (cd_funcao_w	= 916) or (sus_tipo_atendimento_pck.get_ie_tipo_atend_sus = 'A') then
		ie_retorno_w	:= ie_aih_w = 'S';
	elsif (cd_funcao_w	= 1124) or (sus_tipo_atendimento_pck.get_ie_tipo_atend_sus = 'P') then
		ie_retorno_w	:= ie_apac_w = 'S';
	elsif (cd_funcao_w	= 1125) or (sus_tipo_atendimento_pck.get_ie_tipo_atend_sus = 'B') then
		begin
		if (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') then
			select 	sum(a.qt_proc)
			into STRICT	qt_proc_bpa_w
			from (	SELECT	count(*) qt_proc
				from	procedimento_paciente
				where	nr_interno_conta	= nr_interno_conta_p
				and	coalesce(cd_motivo_exc_conta::text, '') = ''
				and	ie_bpa_ind_w	= 'S'
				and	Sus_Obter_TipoReg_Proc(cd_procedimento, ie_origem_proced, 'C', 12) = '2'
				
union all

				SELECT	count(*) qt_proc
				from	procedimento_paciente
				where	nr_interno_conta	= nr_interno_conta_p
				and	coalesce(cd_motivo_exc_conta::text, '') = ''
				and	ie_bpa_con_w	= 'S'
				and	Sus_Obter_TipoReg_Proc(cd_procedimento, ie_origem_proced, 'C', 11) = '1') a;
		end if;
		ie_retorno_w	:= (qt_proc_bpa_w > 0);
		end;
	elsif (cd_funcao_w	in (1121,3111)) then
		begin
		if (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') then
			begin
			
			select	a.ie_tipo_atendimento
			into STRICT	ie_tipo_atendimento_w
			from	atendimento_paciente a,
				conta_paciente b
			where	b.nr_atendimento = a.nr_atendimento
			and	b.nr_interno_conta = nr_interno_conta_p;
			
			if (ie_tipo_atendimento_w <> 1) then
				begin				
				select	count(*)
				into STRICT	qt_apac_w
				from	sus_apac_unif
				where	nr_interno_conta = nr_interno_conta_p;
				
				if (qt_apac_w > 0) then
					ie_atend_apac_w := true;
				else
					begin
					select 	sum(a.qt_proc)
					into STRICT	qt_proc_bpa_w
					from (	SELECT	count(*) qt_proc
						from	procedimento_paciente
						where	nr_interno_conta	= nr_interno_conta_p
						and	coalesce(cd_motivo_exc_conta::text, '') = ''
						and	ie_bpa_ind_w	= 'S'
						and	Sus_Obter_TipoReg_Proc(cd_procedimento, ie_origem_proced, 'C', 12) = '2'
						
union all

						SELECT	count(*) qt_proc
						from	procedimento_paciente
						where	nr_interno_conta	= nr_interno_conta_p
						and	coalesce(cd_motivo_exc_conta::text, '') = ''
						and	ie_bpa_con_w	= 'S'
						and	Sus_Obter_TipoReg_Proc(cd_procedimento, ie_origem_proced, 'C', 11) = '1') a;
					end;
				end if;				
				end;
			else
				ie_atend_aih_w := true;
			end if;
			
			ie_retorno_w	:= (ie_aih_w = 'S' AND ie_atend_aih_w) or
					(ie_apac_w = 'S' AND ie_atend_apac_w) or (qt_proc_bpa_w > 0);
			
			end;
		else
			ie_retorno_w	:= ((ie_aih_w = 'S') or (ie_apac_w = 'S') or (ie_bpa_con_w = 'S') or (ie_bpa_ind_w = 'S'));
		end if;
		end;
	end if;
end if;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_inco_atv_conta ( cd_inconsistencia_p text, nr_interno_conta_p bigint, nr_seq_procedimento_p bigint) FROM PUBLIC;

