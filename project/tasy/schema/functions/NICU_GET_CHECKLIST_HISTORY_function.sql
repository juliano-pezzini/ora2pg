-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION nicu_get_checklist_history ( nr_sequencia_p bigint ) RETURNS varchar AS $body$
DECLARE


    retorno_w             varchar(3000);
    texto_final_w         varchar(3000);
    dt_registro_p         timestamp;
    nr_seq_modelo_p       bigint;
    ds_modelo_w           varchar(100);
    ds_grupo_anterior_w   varchar(600) := NULL;
    c_checklist_respostas CURSOR FOR
    SELECT
        concat(concat(pe.ds_pergunta, ' - '), OBTER_DESC_EXPRESSAO(vd.cd_exp_valor_dominio)) ds_resposta,
        (
            SELECT
                ds_resultado
            FROM
                nicu_checklist_answer a
            WHERE
                a.nr_seq_checklist = nr_sequencia_p
                AND a.nr_seq_pergunta = (
                    SELECT
                        nr_seq_pergunta
                    FROM
                        modelo_conteudo   m
                        JOIN pergunta          pe ON pe.nr_sequencia = m.nr_seq_pergunta
                    WHERE
                        m.nr_sequencia = (
                            SELECT
                                nr_seq_item_dep
                            FROM
                                modelo_conteudo
                            WHERE
                                nr_seq_modelo = nr_seq_modelo_p
                                AND nr_seq_pergunta = nca.nr_seq_pergunta
                        )
                )
        ) ds_justificativa,
        mg.ds_grupo ds_grupo
    FROM
        nicu_checklist_answer   nca
        JOIN modelo_conteudo         mc ON mc.nr_seq_resposta = nca.nr_seq_pergunta
                                   AND mc.nr_seq_modelo = nr_seq_modelo_p
        JOIN pergunta                pe ON pe.nr_sequencia = mc.nr_seq_pergunta
        LEFT JOIN modelo_grupo_conteudo   mg ON mg.nr_sequencia = mc.nr_seq_grupo
                                              AND mg.nr_seq_modelo = nr_seq_modelo_p
		LEFT JOIN pergunta	pr 	ON pr.nr_sequencia = mc.nr_seq_resposta
        LEFT JOIN dominio	d 	ON pr.cd_dominio = d.cd_dominio
        LEFT JOIN valor_dominio	vd	ON d.cd_dominio = vd.cd_dominio AND vd.vl_dominio = nca.ds_resultado
    WHERE
        nca.nr_seq_checklist = nr_sequencia_p
    ORDER BY
        mc.nr_seq_apres,
        mg.ds_grupo;

BEGIN
    SELECT
        MAX(dt_atualizacao),
        MAX(nr_seq_modelo)
    INTO STRICT
        dt_registro_p,
        nr_seq_modelo_p
    FROM
        nicu_checklist
    WHERE
        nr_sequencia = nr_sequencia_p;

    SELECT
        MAX(ds_modelo)
    INTO STRICT ds_modelo_w
    FROM
        modelo
    WHERE
        nr_sequencia = nr_seq_modelo_p;

    texto_final_w := pkg_date_formaters.to_varchar(dt_registro_p, 'mediumDate', wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck
    .get_nm_usuario)
                     || '     '
                     || ds_modelo_w
                     || chr(13)
                     || chr(10)
                     || chr(13)
                     || chr(10);

    FOR r_checklist_respostas IN c_checklist_respostas LOOP
        IF ( (r_checklist_respostas.ds_grupo IS NOT NULL AND r_checklist_respostas.ds_grupo::text <> '') AND (coalesce(ds_grupo_anterior_w::text, '') = '' OR ds_grupo_anterior_w <> r_checklist_respostas.ds_grupo)) THEN
                ds_grupo_anterior_w := r_checklist_respostas.ds_grupo;
                texto_final_w := texto_final_w
                                 || ds_grupo_anterior_w
                                 || '  '
                                 || chr(13)
                                 || chr(10)
                                 || ' ';
        END IF;

        IF (r_checklist_respostas.ds_resposta IS NOT NULL AND r_checklist_respostas.ds_resposta::text <> '') THEN
            texto_final_w := texto_final_w
                             || r_checklist_respostas.ds_resposta
                             || '  '
                             || chr(13)
                             || chr(10)
                             || ' ';

        END IF;

        IF (r_checklist_respostas.ds_justificativa IS NOT NULL AND r_checklist_respostas.ds_justificativa::text <> '') THEN
            texto_final_w := texto_final_w
                             || r_checklist_respostas.ds_justificativa
                             || '  '
                             || chr(13)
                             || chr(10)
                             || chr(13)
                             || chr(10)
                             || ' ';
        ELSE
            texto_final_w := texto_final_w
                             || '  '
                             || chr(13)
                             || chr(10)
                             || ' ';
        END IF;

    END LOOP;

    retorno_w := texto_final_w;
    RETURN retorno_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION nicu_get_checklist_history ( nr_sequencia_p bigint ) FROM PUBLIC;

