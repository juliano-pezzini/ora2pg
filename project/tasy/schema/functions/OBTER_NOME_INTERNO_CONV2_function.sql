-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_nome_interno_conv2 ( cd_convenio_p bigint, ie_tipo_item_p bigint, cd_item_p bigint, ie_origem_proced_p bigint, ie_estrutura_completa_p text, cd_especialidade_med_p bigint, cd_medico_p text, nr_seq_proc_interno_p bigint, nr_atendimento_p bigint, dt_atendimento_p timestamp, cd_setor_atendimento_p bigint, nr_seq_atepacu_p bigint, nr_seq_exame_p bigint) RETURNS varchar AS $body$
DECLARE

 
/* tipo do item  1-Procedimentos/serviços 2-Materiais/Medicamentos */
 
/* estrutura completa S-Sim (validade toda estrutura) N-Não (valida só proc) */
 
 
ds_item_convenio_w	varchar(240);
cd_grupo_proc_w		bigint;
cd_espec_proc_w		bigint;
cd_area_proc_w		bigint;
cd_grupo_mat_w		smallint;
cd_subgrupo_mat_w	smallint;
cd_classe_mat_w		integer;
ie_tipo_mat_w		varchar(03);
ds_item_w		varchar(240);
cd_especial_medica_w	integer;
ie_tipo_atendimento_w	integer;
qt_reg_w			integer;

cd_estab_atend_w		estabelecimento.cd_estabelecimento%type;
cd_categoria_w			atend_categoria_convenio.cd_categoria%type;
cd_plano_convenio_w		atend_categoria_convenio.cd_plano_convenio%type;
ie_clinica_w			atendimento_paciente.ie_clinica%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_empresa_ref_w		atend_categoria_convenio.cd_empresa%type;
ie_carater_inter_sus_w		atendimento_paciente.ie_carater_inter_sus%type;
cd_dependente_w			atend_categoria_convenio.cd_dependente%type;
qt_idade_w			integer;
ie_sexo_w			pessoa_fisica.ie_sexo%type;
cd_item_conv_out_w		varchar(20);
cd_grupo_out_w			varchar(10);
nr_seq_conversao_out_w		conversao_proc_convenio.nr_sequencia%type;
cd_tipo_acomodacao_w		atend_paciente_unidade.cd_tipo_acomodacao%type;
cd_tipo_acomod_conv_out_w	atend_categoria_convenio.cd_tipo_acomodacao%type;

C02 CURSOR FOR 
	SELECT	coalesce(ds_material_convenio,ds_item_w) 
	from		conversao_material_convenio 
	where		cd_convenio							= cd_convenio_p 
	and		coalesce(cd_material,cd_item_p) 				= cd_item_p 
	and		coalesce(cd_grupo_material,cd_grupo_mat_w) 		= cd_grupo_mat_w 
	and		coalesce(cd_subgrupo_material,cd_subgrupo_mat_w) 	= cd_subgrupo_mat_w 
	and		coalesce(cd_classe_material,cd_classe_mat_w) 		= cd_classe_mat_w 
	and		coalesce(ie_tipo_material,ie_tipo_mat_w) 	= ie_tipo_mat_w 
	order by 
			coalesce(cd_material,0), 
			coalesce(cd_grupo_material,0), 
			coalesce(cd_subgrupo_material,0), 
			coalesce(cd_classe_material,0), 
			coalesce(ie_tipo_material,'0');


BEGIN 
 
begin 
select	a.cd_estabelecimento, 
	b.cd_categoria, 
	b.cd_plano_convenio, 
	a.ie_clinica, 
	a.cd_pessoa_fisica, 
	b.cd_empresa, 
	a.ie_carater_inter_sus, 
	b.cd_dependente, 
	a.ie_tipo_atendimento 
into STRICT	cd_estab_atend_w, 
	cd_categoria_w, 
	cd_plano_convenio_w, 
	ie_clinica_w, 
	cd_pessoa_fisica_w, 
	cd_empresa_ref_w, 
	ie_carater_inter_sus_w, 
	cd_dependente_w, 
	ie_tipo_atendimento_w 
from	atendimento_paciente a, 
	atend_categoria_convenio b 
where	a.nr_atendimento = nr_atendimento_p 
and	a.nr_atendimento = b.nr_atendimento 
and	b.nr_seq_interno = obter_atecaco_atendimento(b.nr_atendimento);
exception 
when others then 
	null;
end;
 
select	max(cd_tipo_acomodacao) 
into STRICT	cd_tipo_acomodacao_w 
from	atend_paciente_unidade 
where	nr_seq_interno	= nr_seq_atepacu_p;
 
begin 
select	max(obter_idade(dt_nascimento, coalesce(dt_obito,clock_timestamp()),'DIA')), 
	max(ie_sexo) 
into STRICT	qt_idade_w, 
	ie_sexo_w 
from	pessoa_fisica 
where	cd_pessoa_fisica = cd_pessoa_fisica_w;
exception 
when others then 
	qt_idade_w	:= 0;
	ie_sexo_w	:= '';
end;
 
 
cd_especial_medica_w		:= coalesce(cd_especialidade_med_p, 0);
 
 
if (ie_tipo_item_p	= 1) then 
	BEGIN 
	/* busca estrutura procedimento */
 
	begin 
	select		max(ds_proc_convenio), 
			count(*) 
	into STRICT		ds_item_convenio_w, 
			qt_reg_w 
	from		conversao_proc_convenio a 
	where		cd_convenio				= cd_convenio_p 
	and		cd_procedimento				= cd_item_p 
	and		ie_origem_proced			= ie_origem_proced_p 
	and		ie_situacao					= 'A';
 
	if (qt_reg_w <> 1) or (coalesce(ds_item_convenio_w::text, '') = '') then 
		begin 
		select	/* +index(a procedi_pk) */
	 
			a.cd_grupo_proc, 
			b.cd_especialidade, 
			c.cd_area_procedimento, 
			a.ds_procedimento 
		into STRICT	cd_grupo_proc_w, 
			cd_espec_proc_w, 
			cd_area_proc_w, 
			ds_item_w 
		from	grupo_proc b, 
			especialidade_proc c, 
			area_procedimento d, 
			procedimento a 
		where	a.cd_grupo_proc		= b.cd_grupo_proc 
		and	b.cd_especialidade	= c.cd_especialidade 
		and	c.cd_area_procedimento	= d.cd_area_procedimento 
		and	a.cd_procedimento 	= cd_item_p 
		and	a.ie_origem_proced	= ie_origem_proced_p;
		exception 
				when others then 
				cd_grupo_proc_w	:= 0;
		end;
 
		if (ie_estrutura_completa_p	= 'N') then 
			begin 
			cd_grupo_proc_w	:= 99999999;
			cd_espec_proc_w	:= 99999999;
			cd_area_proc_w	:= 99999999;
			end;
		end if;
 
		ds_item_convenio_w	:= ds_item_w;
 
		/* busca descriçao do procedimento para o convênio */
 
		/*begin 
		OPEN C01; 
		LOOP 
		FETCH C01 into 
			ds_item_convenio_w; 
		exit when c01%notfound; 
			begin 
			ds_item_convenio_w	:= ds_item_convenio_w; 
			end; 
		END LOOP; 
		CLOSE C01; 
		end;*/
 
		 
		SELECT * FROM converte_proc_convenio( 
				cd_estab_atend_w, cd_convenio_p, cd_categoria_w, cd_item_p, ie_origem_proced_p, cd_especialidade_med_p, cd_medico_p, ie_tipo_atendimento_w, coalesce(obter_data_conversao_conv(cd_convenio_p,dt_atendimento_p,'P',nr_atendimento_p, clock_timestamp()),dt_atendimento_p), cd_item_conv_out_w, cd_grupo_out_w, nr_seq_conversao_out_w, cd_setor_atendimento_p, cd_tipo_acomodacao_w, nr_seq_proc_interno_p, 'N', cd_plano_convenio_w, ie_clinica_w, 0, null, cd_tipo_acomod_conv_out_w, qt_idade_w, ie_sexo_w, cd_empresa_ref_w, ie_carater_inter_sus_w, null, nr_seq_exame_p, null, cd_dependente_w) INTO STRICT cd_item_conv_out_w, cd_grupo_out_w, nr_seq_conversao_out_w;
				 
		if (coalesce(nr_seq_conversao_out_w,0) > 0) then 
			 
			select	ds_proc_convenio 
			into STRICT	ds_item_convenio_w 
			from 	conversao_proc_convenio 
			where	nr_sequencia = nr_seq_conversao_out_w;
			 
		end if;
	end if;
	end;
	END;
else 
	BEGIN 
	/* busca estrutura material */
 
	begin 
	select 	cd_grupo_material, 
			cd_subgrupo_material, 
			cd_classe_material, 
			substr(ds_material,1,240), 
			ie_tipo_material 
	into STRICT		cd_grupo_mat_w, 
			cd_subgrupo_mat_w, 
			cd_classe_mat_w, 
			ds_item_w, 
			ie_tipo_mat_w 
	from 		estrutura_material_v 
	where 	cd_material		= cd_item_p;
	exception 
   			when others then 
			cd_grupo_mat_w			:= 0;
	end;
 
	ds_item_convenio_w	:= ds_item_w;
 
	/* busca descriçao do material para o convênio */
 
	begin 
	OPEN C02;
	LOOP 
	FETCH C02 into 
		ds_item_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		ds_item_convenio_w	:= ds_item_convenio_w;
		end;
	END LOOP;
	CLOSE C02;
	end;
	END;
end if;
RETURN ds_item_convenio_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_nome_interno_conv2 ( cd_convenio_p bigint, ie_tipo_item_p bigint, cd_item_p bigint, ie_origem_proced_p bigint, ie_estrutura_completa_p text, cd_especialidade_med_p bigint, cd_medico_p text, nr_seq_proc_interno_p bigint, nr_atendimento_p bigint, dt_atendimento_p timestamp, cd_setor_atendimento_p bigint, nr_seq_atepacu_p bigint, nr_seq_exame_p bigint) FROM PUBLIC;

