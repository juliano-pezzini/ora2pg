-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_lib_contratante ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint) RETURNS varchar AS $body$
DECLARE


nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
qt_regra_pos_estab_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_regra_pos_estab_w	bigint;
ie_liberado_w			varchar(1);
vl_procedimento_w		double precision;
ds_retorno_w			varchar(1) := 'S';

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		vl_procedimento
	from	pls_guia_plano_proc
	where	nr_seq_guia = nr_seq_guia_p
	order by 1;

C02 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_requisicao_proc
	where	nr_seq_requisicao = nr_seq_requisicao_p
	and	ie_status in ('P','S')
	order by 1;

C03 CURSOR FOR
	SELECT	ie_liberado,
		nr_sequencia
	from (
		SELECT	c.ie_liberado ie_liberado,
			b.nr_sequencia nr_sequencia,
			c.cd_area_procedimento cd_area_procedimento,
			c.cd_especialidade cd_especialidade,
			c.cd_grupo_proc cd_grupo_proc,
			c.cd_procedimento cd_procedimento
		from	pls_tipo_pos_estab_proc		c,
			pls_pos_estab_aut_previa	b,
			pls_tipo_pos_estabelecido	a
		where	c.nr_seq_tipo_pos_estab = a.nr_sequencia
		and	b.nr_seq_tipo_pos_estab	= a.nr_sequencia
		and	coalesce(c.cd_procedimento,cd_procedimento_w)	= cd_procedimento_w
		and	coalesce(c.ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
		and     coalesce(c.cd_grupo_proc,cd_grupo_w)                 = cd_grupo_w
		and     coalesce(c.cd_especialidade, cd_especialidade_w)     = cd_especialidade_w
		and     coalesce(c.cd_area_procedimento, cd_area_w)          = cd_area_w
		and	coalesce(c.vl_liberado,0) <= coalesce(vl_procedimento_w,0)
		and	b.ie_situacao = 'A'
		and	a.ie_situacao = 'A'
		and	b.nr_seq_contrato = nr_seq_contrato_w
		and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S')
		
union all

		select	c.ie_liberado ie_liberado,
			b.nr_sequencia nr_sequencia,
			c.cd_area_procedimento cd_area_procedimento,
			c.cd_especialidade cd_especialidade,
			c.cd_grupo_proc cd_grupo_proc,
			c.cd_procedimento cd_procedimento
		from	pls_tipo_pos_estab_proc		c,
			pls_pos_estab_aut_previa	b,
			pls_tipo_pos_estabelecido	a
		where	c.nr_seq_tipo_pos_estab = a.nr_sequencia
		and	b.nr_seq_tipo_pos_estab	= a.nr_sequencia
		and	coalesce(c.cd_procedimento,cd_procedimento_w)	= cd_procedimento_w
		and	coalesce(c.ie_origem_proced,ie_origem_proced_w)	= ie_origem_proced_w
		and     coalesce(c.cd_grupo_proc,cd_grupo_w)                 = cd_grupo_w
		and     coalesce(c.cd_especialidade, cd_especialidade_w)     = cd_especialidade_w
		and     coalesce(c.cd_area_procedimento, cd_area_w)          = cd_area_w
		and	coalesce(c.vl_liberado,0) <= coalesce(vl_procedimento_w,0)
		and	b.ie_situacao = 'A'
		and	a.ie_situacao = 'A'
		and	b.nr_seq_contrato = nr_seq_contrato_w
		and 	pls_obter_se_controle_estab('RE') = 'N') alias18
	order by cd_area_procedimento,
                cd_especialidade,
                cd_grupo_proc,
                cd_procedimento;


BEGIN

if (coalesce(nr_seq_guia_p,0) <> 0) then
	select	b.nr_seq_contrato,
		b.nr_seq_plano
	into STRICT	nr_seq_contrato_w,
		nr_seq_plano_w
	from	pls_segurado	b,
		pls_guia_plano	a
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_guia_p;

	open C01;
	loop
	fetch C01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		vl_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
		open C03;
		loop
		fetch C03 into
			ie_liberado_w,
			nr_seq_regra_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		end loop;
		close C03;
		if (ie_liberado_w = 'N') then
			ds_retorno_w := 'N';
		end if;
		end;
	end loop;
	close C01;
elsif (coalesce(nr_seq_requisicao_p,0) <> 0) then
	select	b.nr_seq_contrato,
		b.nr_seq_plano
	into STRICT	nr_seq_contrato_w,
		nr_seq_plano_w
	from	pls_segurado	b,
		pls_requisicao	a
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_requisicao_p;

	open C02;
	loop
	fetch C02 into
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
		vl_procedimento_w := 0;
		open C03;
		loop
		fetch C03 into
			ie_liberado_w,
			nr_seq_regra_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		end loop;
		close C03;
		if (ie_liberado_w = 'N') then
			ds_retorno_w := 'N';
		end if;
		end;
	end loop;
	close C02;
end if;

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_lib_contratante ( nr_seq_guia_p bigint, nr_seq_requisicao_p bigint) FROM PUBLIC;

