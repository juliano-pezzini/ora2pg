-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_executor_proc ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

/*---------------------------------------------------------------------------------------------- 
Retorna dados sobre o executor do procedimento, conforme opção. 
 
Sera feita uma busca iniciando dos participantes, e enquanto não encontrar o medico, 
será "subido" para um nivel menos especifico 
 
Prioridade de busca: 
1. Participantes 
	a. Cirurgião 
	b. Anestesista 
	c. Primeiro auxiliar 
	d. Maior codigo 
2. Na conta, o cd_medico_executor 
3. Na conta, o nr_seq_prestador_executor 
 
 
 
 
OPÇÕES 
DSC	- Descrição completa (se PF nome + CPF, se PJ Razão e Fantasia ) 
END	- Endereco 
*/
 
 
cd_medico_executor_w	pls_conta.cd_medico_executor%type := null;
nr_seq_prestador_exec_w	pls_conta.nr_seq_prestador_exec%type;
nr_seq_prest_inter_w	pls_conta.nr_seq_prest_inter%type;
nr_seq_prest_inter_ww	pls_conta.nr_seq_prest_inter%type := null;
qt_participantes_w	integer;
nr_cpf_w		pessoa_fisica.nr_cpf%type;
cd_pessoa_fisica_w	pls_prestador.cd_pessoa_fisica%type;
ie_origem_conta_w	pls_conta.ie_origem_conta%type;
nr_cpf_inter_w		pls_prestador_intercambio.nr_cpf%type;

ds_retorno_w		varchar(500) := '';

BEGIN
 
-- Primeiro levanta o codigo do medico executor, antes de formatar conforme opção 
-- Verifica se existe algum participante 
select	count(1) 
into STRICT	qt_participantes_w 
from	pls_proc_participante 
where	nr_seq_conta_proc	= nr_seq_conta_proc_p;
 
--- Busca a origem da conta, se for de intercambio, vai ter um tratamento especifico, ja busca o prestador de inter da conta aqui 
select	max(a.ie_origem_conta), 
	max(a.nr_seq_prest_inter) 
into STRICT	ie_origem_conta_w, 
	nr_seq_prest_inter_w 
from	pls_conta	a, 
	pls_conta_proc	b 
where	a.nr_sequencia	= b.nr_seq_conta 
and	b.nr_sequencia	= nr_seq_conta_proc_p;
 
-- se existir o participante, por questõe de performance 
if (qt_participantes_w > 0) then 
 
	-- se for intercambio, o tratamento é diferente 
	if (ie_origem_conta_w = 'A') then 
	 
		--Irá verificar primeiramente por participantes do tipo cirurgião 
		select	max(nr_seq_prest_inter) 
		into STRICT	nr_seq_prest_inter_ww 
		from	pls_proc_participante a 
		where	nr_seq_conta_proc = nr_seq_conta_proc_p 
		and	exists (	SELECT	1 
				from	pls_grau_participacao b 
				where	b.nr_sequencia = a.nr_seq_grau_partic 
				and	cd_tiss = '00');
		--Caso não possua cirurgião, irá procurar por anestesista 
		if (coalesce(nr_seq_prest_inter_ww::text, '') = '') then 
			select	max(nr_seq_prest_inter) 
			into STRICT	nr_seq_prest_inter_ww 
			from	pls_proc_participante a 
			where	nr_seq_conta_proc = nr_seq_conta_proc_p 
			and	exists (	SELECT	1 
					from	pls_grau_participacao b 
					where	b.nr_sequencia = a.nr_seq_grau_partic 
					and	cd_tiss = '06');
		end if;
		--Caso não encontre anestesista, irá procurar por primeiro auxiliar 
		if (coalesce(nr_seq_prest_inter_ww::text, '') = '') then 
			select	max(nr_seq_prest_inter) 
			into STRICT	nr_seq_prest_inter_ww 
			from	pls_proc_participante a 
			where	nr_seq_conta_proc = nr_seq_conta_proc_p 
			and	exists (	SELECT	1 
					from	pls_grau_participacao b 
					where	b.nr_sequencia = a.nr_seq_grau_partic 
					and	cd_tiss = '01');
		end if;
		--Caso não encontre primeiro auxiliar, irá pegar o maior código (tratativa atual) 
		if (coalesce(nr_seq_prest_inter_ww::text, '') = '') then 
			select	max(nr_seq_prest_inter) 
			into STRICT	nr_seq_prest_inter_ww 
			from	pls_proc_participante a 
			where	nr_seq_conta_proc = nr_seq_conta_proc_p;
		end if;
	 
	else 
		--Irá verificar primeiramente por participantes do tipo cirurgião 
		select	max(cd_medico) 
		into STRICT	cd_medico_executor_w 
		from	pls_proc_participante a 
		where	nr_seq_conta_proc = nr_seq_conta_proc_p 
		and	exists (	SELECT	1 
				from	pls_grau_participacao b 
				where	b.nr_sequencia = a.nr_seq_grau_partic 
				and	cd_tiss = '00');
		--Caso não possua cirurgião, irá procurar por anestesista 
		if (coalesce(cd_medico_executor_w::text, '') = '') then 
			select	max(cd_medico) 
			into STRICT	cd_medico_executor_w 
			from	pls_proc_participante a 
			where	nr_seq_conta_proc = nr_seq_conta_proc_p 
			and	exists (	SELECT	1 
					from	pls_grau_participacao b 
					where	b.nr_sequencia = a.nr_seq_grau_partic 
					and	cd_tiss = '06');
		end if;
		--Caso não encontre anestesista, irá procurar por primeiro auxiliar 
		if (coalesce(cd_medico_executor_w::text, '') = '') then 
			select	max(cd_medico) 
			into STRICT	cd_medico_executor_w 
			from	pls_proc_participante a 
			where	nr_seq_conta_proc = nr_seq_conta_proc_p 
			and	exists (	SELECT	1 
					from	pls_grau_participacao b 
					where	b.nr_sequencia = a.nr_seq_grau_partic 
					and	cd_tiss = '01');
		end if;
		--Caso não encontre primeiro auxiliar, irá pegar o maior código (tratativa atual) 
		if (coalesce(cd_medico_executor_w::text, '') = '') then 
			select	max(cd_medico) 
			into STRICT	cd_medico_executor_w 
			from	pls_proc_participante a 
			where	nr_seq_conta_proc = nr_seq_conta_proc_p;
		end if;
	end if;
end if; -- fim existe participante 
 
-- se ainda não encontrou o executor, vai para a conta 
select	max(a.cd_medico_executor),
	max(a.nr_seq_prestador_exec), 
	max(c.cd_pessoa_fisica) 
into STRICT	cd_medico_executor_w, 
	nr_seq_prestador_exec_w, 
	cd_pessoa_fisica_w 
from	pls_conta	a, 
	pls_conta_proc	b, 
	pls_prestador	c 
where	b.nr_seq_conta	= a.nr_sequencia 
and	c.nr_sequencia	= a.nr_seq_prestador_exec 
and	b.nr_sequencia	= nr_seq_conta_proc_p;
 
-- se foi identificado algum prestador de intercambio nos participantes 
if (nr_seq_prest_inter_ww IS NOT NULL AND nr_seq_prest_inter_ww::text <> '') then 
 
	nr_seq_prest_inter_w := nr_seq_prest_inter_ww;
end if;
 
-- Aplica a opção, conforme executor encontrado 
 
if (ie_opcao_p = 'DSC') then 
 
	-- Intercambio e encontrou um prestador 
	if	(nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '' AND ie_origem_conta_w = 'A') then 
	 
		nr_cpf_inter_w := pls_obter_dados_prest_inter(nr_seq_prest_inter_w, 'CPF');
				 
		if (nr_cpf_inter_w IS NOT NULL AND nr_cpf_inter_w::text <> '') then 
		 
			ds_retorno_w := pls_obter_dados_prest_inter(nr_seq_prest_inter_w, 'N') || ' - CPF: ' || nr_cpf_inter_w;
		else 
		 
			ds_retorno_w := pls_obter_dados_prest_inter(nr_seq_prest_inter_w, 'N');
		end if;
	else 
 
		-- Primeiro verifica se tem medico executor da conta 
		if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then 
		 
			select	max(d.nr_cpf) 
			into STRICT	nr_cpf_w 
			from	pls_conta_proc a, 
				pls_conta b, 
				medico c, 
				pessoa_fisica d 
			where	a.nr_seq_conta	= b.nr_sequencia 
			and	b.cd_medico_executor = c.cd_pessoa_fisica 
			and	c.cd_pessoa_fisica = d.cd_pessoa_fisica 
			and	a.nr_sequencia	= nr_seq_conta_proc_p;
				 
			ds_retorno_w := obter_nome_pf_pj(cd_medico_executor_w, null) || ' - CPF: ' || nr_cpf_w;
			 
		-- Senão usa o prestador 
		elsif (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then 
			 
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
				ds_retorno_w	:= pls_obter_dados_prestador( nr_seq_prestador_exec_w, 'N') ||' - CPF: '||pls_obter_dados_prestador( nr_seq_prestador_exec_w, 'CPF');
			else 
				ds_retorno_w	:= pls_obter_dados_prestador( nr_seq_prestador_exec_w, 'DS') ||' - '||pls_obter_dados_prestador( nr_seq_prestador_exec_w, 'NF');
			end if;		
		end if;
	end if; -- Origem de conta 
end if;
 
-- Endereço 
if (ie_opcao_p = 'END') then 
 
	-- Intercambio e encontrou um prestador 
	if	(nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '' AND ie_origem_conta_w = 'A') then 
	 
		ds_retorno_w := pls_obter_dados_prest_inter(nr_seq_prest_inter_w, 'MC');
	else 
 
		-- Primeiro verifica se tem medico executor da conta 
		if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then 
		 
			select	max(d.nr_cpf) 
			into STRICT	nr_cpf_w 
			from	pls_conta_proc a, 
				pls_conta b, 
				medico c, 
				pessoa_fisica d 
			where	a.nr_seq_conta	= b.nr_sequencia 
			and	b.cd_medico_executor = c.cd_pessoa_fisica 
			and	c.cd_pessoa_fisica = d.cd_pessoa_fisica 
			and	a.nr_sequencia	= nr_seq_conta_proc_p;
				 
			ds_retorno_w := obter_dados_pf_pj(cd_medico_executor_w, null, 'EC');
			 
		-- Senão usa o prestador 
		elsif (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then 
			 
			ds_retorno_w := pls_obter_end_prestador(nr_seq_prestador_exec_w, null, null);
			 
		end if;
	end if; -- Origem de conta 
end if;
 
return ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_executor_proc ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, ie_opcao_p text) FROM PUBLIC;

