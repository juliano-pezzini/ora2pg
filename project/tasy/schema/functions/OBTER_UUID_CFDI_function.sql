-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_uuid_cfdi (nr_seq_movimento_p bigint, nr_lote_contabil_P bigint, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


nr_nfe_imp_w 		titulo_pagar_baixa.nr_nfe_imp%type;
nr_seq_conta_orig_w	conta_paciente.nr_seq_conta_origem%type;
nr_seq_nf_w		nota_fiscal.nr_sequencia%type;
nr_seq_protocolo_w	protocolo_convenio.nr_seq_lote_protocolo%type;
nr_seq_lote_protocolo_w protocolo_convenio.nr_seq_lote_protocolo%type;
nr_seq_doc_compl_w	movimento_contabil_doc.nr_seq_doc_compl%type;
cd_tipo_lote_contabil_w lote_contabil.cd_tipo_lote_contabil%type;


BEGIN
	select	cd_tipo_lote_contabil
	into STRICT	cd_tipo_lote_contabil_w
	from 	lote_contabil
	where 	nr_lote_contabil = nr_lote_contabil_p;

	if ( cd_tipo_lote_contabil_w in (5,7) ) then
		select max(nr_nfe_imp)
		into STRICT nr_nfe_imp_w
		from movimento_contabil_doc
		where nr_seq_ctb_movto = nr_seq_movimento_p  LIMIT 1;
		
	elsif (cd_tipo_lote_contabil_w = 2) then
		select max(nr_nfe_imp)
		into STRICT nr_nfe_imp_w
		from nota_fiscal
		where nr_sequencia = (SELECT	max(n.nr_seq_nf_ref)
					from	nota_fiscal n,
						ctb_movimento c
					where	c.nr_sequencia	= nr_seq_movimento_p
					and	n.nr_sequencia	= c.nr_seq_agrupamento  LIMIT 1);
		
		if (coalesce(nr_nfe_imp_w::text, '') = '') then
			select 	max(nr_nfe_imp)
			into STRICT 	nr_nfe_imp_w
			from 	nota_fiscal
			where	nr_sequencia = 	(SELECT	nf_canc_origem_conta( max(n.nr_sequencia))
						from 	nota_fiscal n,
							ctb_movimento c
						where 	c.nr_seq_agrupamento	= n.nr_sequencia
						and 	c.nr_sequencia	= nr_seq_movimento_p  LIMIT 1);
		end if;

	elsif ( cd_tipo_lote_contabil_w = 6 ) then
		begin
		select 	nr_seq_conta_origem
		into STRICT	nr_seq_conta_orig_w
		from	conta_paciente b, 	
			movimento_contabil_doc a
		where 	a.nr_seq_doc_compl = b.nr_interno_conta
		and	a.nr_seq_ctb_movto = nr_seq_movimento_p
		and	a.nr_seq_info in (6,7)
		and     coalesce(ie_cancelamento::text, '') = ''  LIMIT 1;
		exception
			when no_data_found then
			nr_seq_conta_orig_w:= null;
		end;
		
		if (nr_seq_conta_orig_w IS NOT NULL AND nr_seq_conta_orig_w::text <> '') then
			select  nr_nfe_imp
			into STRICT    nr_nfe_imp_w
			from	nota_fiscal
			where	nr_interno_conta = nr_seq_conta_orig_w  LIMIT 1;
			
			if (coalesce(nr_nfe_imp_w::text, '') = '') then
				select  nr_seq_protocolo
				into STRICT    nr_seq_protocolo_w
				from    conta_paciente
				where   nr_interno_conta = nr_seq_conta_orig_w;

				if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
					select  max(nr_nfe_imp)
					into STRICT    nr_nfe_imp_w
					from	nota_fiscal
					where	nr_seq_protocolo = nr_seq_protocolo_w  LIMIT 1;

					if (coalesce(nr_nfe_imp_w::text, '') = '') then
						select	nr_seq_lote_protocolo
						into STRICT	nr_seq_lote_protocolo_w
						from	protocolo_convenio
						where	nr_seq_protocolo = nr_seq_protocolo_w;

						if (nr_seq_lote_protocolo_w IS NOT NULL AND nr_seq_lote_protocolo_w::text <> '') then
							select  max(nr_nfe_imp)
							into STRICT    nr_nfe_imp_w
							from	nota_fiscal
							where	nr_seq_lote_prot = nr_seq_lote_protocolo_w;
						end if;
					end if;
				end if;
			end if;
		end if;
		
		if (coalesce(nr_nfe_imp_w::text, '') = '') then
			select 	max(nr_sequencia)
			into STRICT 	nr_seq_nf_w
			from 	nota_fiscal
			where 	nr_nfe_imp = (	SELECT 	nr_documento
						from 	ctb_movimento
						where 	nr_sequencia=nr_seq_movimento_p
						and 	(nr_documento IS NOT NULL AND nr_documento::text <> ''));
						
			if (nr_seq_nf_w IS NOT NULL AND nr_seq_nf_w::text <> '') then
				select 	nr_nfe_imp
				into STRICT 	nr_nfe_imp_w
				from 	nota_fiscal
				where 	nr_sequencia = nf_canc_origem_conta(nr_seq_nf_w);
			end if;
		end if;
	end if;

return nr_nfe_imp_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_uuid_cfdi (nr_seq_movimento_p bigint, nr_lote_contabil_P bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

