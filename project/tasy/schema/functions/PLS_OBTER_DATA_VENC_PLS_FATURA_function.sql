-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_data_venc_pls_fatura (nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_opcao_p text) RETURNS timestamp AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:

ie_opcao_p
F - Fatura
N - NDC
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_vencimento_w			timestamp;
dt_venc_lote_w			timestamp;
dt_vencimento_ndc_w		timestamp;
dt_mesano_referencia_w		timestamp;
dt_emissao_lote_w		timestamp;
dt_venc_fat_w			timestamp;
dt_venc_ndc_w			timestamp;
ie_mes_vencimento_w		varchar(1);
ie_acao_venc_nao_util_w		varchar(1);
qt_dias_vencimento_w		bigint := 0;
nr_seq_pagador_w		bigint;
nr_seq_regra_w			bigint;
cd_condicao_pagamento_w		bigint;
nr_seq_camara_w			bigint;
nr_seq_lote_w			bigint;
nr_seq_congenere_w		bigint;
nr_seq_acao_w			bigint;
qt_dias_antes_a500_w		bigint;
nr_seq_periodo_w		bigint;
cd_condicao_pag_inter_acao_w	bigint;
dia_mes_w			smallint := 0;
dt_dia_vencimento_w		smallint;
ie_vencimento_pagador_w		boolean := false;
qt_registros_w			integer := 0;
dt_dia_vencimento_novo_w	pls_contrato_pag_fin_itens.dt_dia_vencimento%type;
ie_dt_vencto_w			pls_processo_interc_acao.ie_data_vencimento%type;
dt_vencimento_manual_w		pls_fatura.dt_vencimento_manual%type;
qt_meses_vencimento_w		pls_contrato_pagador_fin.qt_meses_vencimento%type;

C01 CURSOR FOR
	SELECT	dt_dia_vencimento,
		ie_acao_nao_util
	from	pls_contrato_pag_fin_itens
	where	nr_seq_regra = nr_seq_regra_w
	and	dia_mes_w <= dt_dia_limite
	order by dt_dia_limite desc;

BEGIN
select	trunc(dt_vencimento, 'dd'),
	trunc(dt_vencimento_ndc, 'dd'),
	nr_seq_pagador,
	nr_seq_lote,
	nr_seq_congenere,
	dt_vencimento_manual
into STRICT	dt_vencimento_w,
	dt_vencimento_ndc_w,
	nr_seq_pagador_w,
	nr_seq_lote_w,
	nr_seq_congenere_w,
	dt_vencimento_manual_w
from	pls_fatura
where	nr_sequencia = nr_seq_pls_fatura_p;

begin
select	trunc(dt_vencimento_fatura, 'dd'),
	trunc(dt_vencimento_ndc, 'dd')
into STRICT	dt_venc_fat_w,
	dt_venc_ndc_w
from	ptu_fatura
where	nr_seq_pls_fatura = nr_seq_pls_fatura_p;
exception
when others then
	dt_venc_fat_w := null;
	dt_venc_ndc_w := null;
end;

select	coalesce(dt_mesano_referencia, clock_timestamp()),
	coalesce(dt_emissao,clock_timestamp()),
	dt_vencimento
into STRICT	dt_mesano_referencia_w,
	dt_emissao_lote_w,
	dt_venc_lote_w
from	pls_lote_faturamento
where	nr_sequencia	= nr_seq_lote_w;

if (ie_opcao_p = 'N') then
	dt_venc_fat_w := dt_venc_ndc_w;
	dt_vencimento_w := dt_vencimento_ndc_w;
end if;

if (coalesce(nr_seq_camara_w::text, '') = '') and (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then

	select	max(a.nr_seq_camara)
	into STRICT	nr_seq_camara_w
	from	pls_congenere_camara a
	where	a.nr_seq_congenere	= nr_seq_congenere_w
	and	clock_timestamp() between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;
end if;

if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') and (coalesce(nr_seq_camara_w::text, '') = '') then
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_contrato_pagador_fin
	where	nr_seq_pagador	= nr_seq_pagador_w
	and	trunc(clock_timestamp()) between trunc(dt_inicio_vigencia, 'dd') and fim_dia(coalesce(dt_fim_vigencia, clock_timestamp()));
	
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		
		ie_vencimento_pagador_w	:= true;
	
		begin
		select	dt_dia_vencimento,
			ie_mes_vencimento,
			cd_condicao_pagamento,
			abs(coalesce(qt_meses_vencimento,1))
		into STRICT	dt_dia_vencimento_w,
			ie_mes_vencimento_w,
			cd_condicao_pagamento_w,
			qt_meses_vencimento_w
		from	pls_contrato_pagador_fin
		where	nr_sequencia	= nr_seq_regra_w;
		exception
		when others then
			dt_dia_vencimento_w	:= null;
			cd_condicao_pagamento_w	:= null;
			qt_meses_vencimento_w	:= 1;
		end;
				
		if (coalesce(cd_condicao_pagamento_w::text, '') = '') then
			ie_acao_venc_nao_util_w	:= 'M';
		else
			select	coalesce(a.ie_acao_nao_util,'M')
			into STRICT	ie_acao_venc_nao_util_w
			from	condicao_pagamento		a
			where	a.cd_condicao_pagamento	= cd_condicao_pagamento_w;
		end if;

		if (ie_mes_vencimento_w = 'A') then -- Mês atual
			if (dt_mesano_referencia_w < dt_emissao_lote_w) then -- OS 712545
				dt_vencimento_w	:= pls_util_pck.concate_dia_com_mes_ano(to_char(dt_dia_vencimento_w), to_char(dt_emissao_lote_w, 'mm/yyyy'));
			else
				dt_vencimento_w	:= pls_util_pck.concate_dia_com_mes_ano(to_char(dt_dia_vencimento_w), to_char(dt_mesano_referencia_w, 'mm/yyyy'));
			end if;

		elsif (ie_mes_vencimento_w = 'P') then -- Mês posterior			
			dt_vencimento_w := pls_util_pck.concate_dia_com_mes_ano(to_char(dt_dia_vencimento_w), to_char(add_months(clock_timestamp(),qt_meses_vencimento_w), 'mm/yyyy'));
		end if;
		
		if (ie_acao_venc_nao_util_w <> 'M') then		
			dt_vencimento_w	:= obter_data_vencimento(dt_vencimento_w, 0, cd_estabelecimento_p,'N', ie_acao_venc_nao_util_w);
		end if;
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_contrato_pag_fin_itens
		where	nr_seq_regra	= nr_seq_regra_w;
		
		if (qt_registros_w > 0) then
		
			dia_mes_w			:= (to_char(dt_emissao_lote_w,'dd'))::numeric;
			dt_dia_vencimento_novo_w	:= null;
			ie_acao_venc_nao_util_w		:= '';
			
			for r_c01_w in C01 loop
			
				dt_dia_vencimento_novo_w	:= r_c01_w.dt_dia_vencimento;
				ie_acao_venc_nao_util_w		:= r_c01_w.ie_acao_nao_util;
			
			end loop;
			
			if (dt_dia_vencimento_novo_w IS NOT NULL AND dt_dia_vencimento_novo_w::text <> '') then
				--Coloquei essa restrição para não interferir na regra de vencimento
				dt_venc_fat_w	:= null;

				dt_vencimento_w := pls_util_pck.concate_dia_com_mes_ano(to_char(dt_dia_vencimento_novo_w), to_char(dt_emissao_lote_w, 'mm/yyyy'));
				
				if (ie_acao_venc_nao_util_w <> 'M') then		
					dt_vencimento_w	:= obter_data_vencimento(dt_vencimento_w, 0, cd_estabelecimento_p,'N', ie_acao_venc_nao_util_w);
				end if;
			end if;
		end if;
	end if;
end if;

-- Geração do lote de faturamento  -- Gerar vencimento da fatura
nr_seq_acao_w := pls_obter_acao_intercambio( '10', '9', null, nr_seq_pls_fatura_p, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);

if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
	
	select	coalesce(max(qt_dias_antes_a500), 0),
		coalesce(max(qt_dias_vencimento),0),
		max(cd_condicao_pagamento),
		coalesce(max(ie_data_vencimento), 'DC')
	into STRICT	qt_dias_antes_a500_w,
		qt_dias_vencimento_w,
		cd_condicao_pag_inter_acao_w,
		ie_dt_vencto_w
	from	pls_processo_interc_acao
	where	nr_sequencia = nr_seq_acao_w;
else
	qt_dias_antes_a500_w	:= 0;
	qt_dias_vencimento_w	:= 0;
	ie_dt_vencto_w := 'DC';
end if;

if (nr_seq_camara_w IS NOT NULL AND nr_seq_camara_w::text <> '') then

	nr_seq_periodo_w := pls_obter_periodo_camara_comp(nr_seq_camara_w, qt_dias_antes_a500_w, trunc(clock_timestamp(), 'dd'));
		
	if (nr_seq_periodo_w IS NOT NULL AND nr_seq_periodo_w::text <> '') then
		
		-- verifica se deve ser utilizada a data do credor ou devedor, por padrão a data deve ser do credor

		-- até que tenha uma regra que diga o contrário
		if (ie_dt_vencto_w = 'DD') then
			
			select	max(a.dt_saldo_devedor)
			into STRICT	dt_vencimento_w
			from	pls_camara_calend_periodo a
			where	a.nr_sequencia = nr_seq_periodo_w;
			--Precisa rever o valor do campo
		elsif (ie_dt_vencto_w = 'NA') and -- não se aplica
			(qt_dias_vencimento_w > 0) then
			dt_vencimento_w	:= dt_emissao_lote_w + qt_dias_vencimento_w;
		else
			select	max(a.dt_saldo_credor)
			into STRICT	dt_vencimento_w
			from	pls_camara_calend_periodo a
			where	a.nr_sequencia = nr_seq_periodo_w;
		end if;
	end if;
elsif (qt_dias_vencimento_w > 0) and (not ie_vencimento_pagador_w) then
	
	dt_vencimento_w := dt_emissao_lote_w + qt_dias_vencimento_w;
	
	if (cd_condicao_pag_inter_acao_w IS NOT NULL AND cd_condicao_pag_inter_acao_w::text <> '') then
	
		select	coalesce(a.ie_acao_nao_util,'M')
		into STRICT	ie_acao_venc_nao_util_w
		from	condicao_pagamento		a
		where	a.cd_condicao_pagamento	= cd_condicao_pag_inter_acao_w;
		
		if (ie_acao_venc_nao_util_w <> 'M') then		
			dt_vencimento_w	:= obter_data_vencimento(dt_vencimento_w, 0, cd_estabelecimento_p,'N', ie_acao_venc_nao_util_w);
		end if;
	end if;
end if;

if (coalesce(dt_venc_lote_w::text, '') = '') and (coalesce(dt_vencimento_manual_w::text, '') = '') then
	if (dt_venc_fat_w IS NOT NULL AND dt_venc_fat_w::text <> '') then
		dt_vencimento_w := dt_venc_fat_w;
	end if;
	
	if (dt_vencimento_w < trunc(dt_emissao_lote_w, 'dd')) then
		dt_vencimento_w	:= dt_emissao_lote_w;
	end if;
	
	if (dt_vencimento_w < clock_timestamp()) then
		dt_vencimento_w := clock_timestamp();
	end if;
elsif (dt_vencimento_manual_w IS NOT NULL AND dt_vencimento_manual_w::text <> '') then
	dt_vencimento_w := dt_vencimento_manual_w;
elsif (dt_venc_lote_w IS NOT NULL AND dt_venc_lote_w::text <> '') then
	dt_vencimento_w := dt_venc_lote_w;
end if;

dt_vencimento_w := coalesce(dt_vencimento_w,clock_timestamp());

return	dt_vencimento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_data_venc_pls_fatura (nr_seq_pls_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_opcao_p text) FROM PUBLIC;

