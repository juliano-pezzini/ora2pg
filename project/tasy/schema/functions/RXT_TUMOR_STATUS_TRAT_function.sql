-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION rxt_tumor_status_trat ( nr_seq_tumor_p rxt_tumor.nr_sequencia%type, sizeparams_p bigint ) RETURNS varchar AS $body$
DECLARE

    nr_count_w    smallint;
    ds_return_w   varchar(300);
    i             smallint;

BEGIN
    for i in 1..sizeparams_p loop
        /* Tratamento Cancelado */

        select count(tratamento.nr_sequencia)
        into STRICT nr_count_w
        from rxt_tumor        tumor,
             rxt_tratamento   tratamento
        where tumor.nr_sequencia = nr_seq_tumor_p
              and tratamento.nr_seq_tumor = tumor.nr_sequencia
              and not exists (
                SELECT a.nr_sequencia
                from rxt_tratamento a
                where a.nr_seq_tumor = nr_seq_tumor_p
                      and coalesce(a.dt_cancelamento::text, '') = ''
            );

        if ( nr_count_w > 0 ) then
            ds_return_w := 'TC' || ',';
        end if;

        /* Tratamento Finalizado */

        select count(tratamento.nr_sequencia)
        into STRICT nr_count_w
        from rxt_tumor        tumor,
             rxt_tratamento   tratamento
        where tumor.nr_sequencia = nr_seq_tumor_p
              and tratamento.nr_seq_tumor = tumor.nr_sequencia;

        if ( nr_count_w > 0 ) then
            select count(tratamento.nr_sequencia)
            into STRICT nr_count_w
            from rxt_tumor        tumor,
                 rxt_tratamento   tratamento
            where tumor.nr_sequencia = nr_seq_tumor_p
                  and tratamento.nr_seq_tumor = tumor.nr_sequencia
                  and substr(rxt_tratamento_finalizado(tratamento.nr_sequencia), 1, 1) = 'N';

            if ( nr_count_w = 0 ) then
                ds_return_w := 'TF' || ',';
            end if;
        end if;

        /* Aguardando Autorizacao */

        select count(nr_sequencia)
        into STRICT nr_count_w
        from rxt_tratamento tratamento
        where tratamento.nr_seq_tumor = nr_seq_tumor_p
              and coalesce(tratamento.dt_liberacao::text, '') = ''
              and exists (
                SELECT 1
                from autorizacao_convenio
                where nr_seq_rxt_tratamento = tratamento.nr_sequencia
              )
              and obter_se_tratamento_autorizado(tratamento.nr_sequencia) = 'N';

        if ( nr_count_w > 0 ) then
            ds_return_w := 'AA' || ',';
        end if;

        /* Em planejamento */

        select count(nr_sequencia)
        into STRICT nr_count_w
        from rxt_tratamento tratamento
        where tratamento.nr_seq_tumor = nr_seq_tumor_p
              and coalesce(tratamento.dt_liberacao::text, '') = ''
              and not exists (
                SELECT 1
                from autorizacao_convenio
                where nr_seq_rxt_tratamento = tratamento.nr_sequencia
              )
              and ( coalesce(tratamento.ie_replanejamento::text, '') = ''
                    OR tratamento.ie_replanejamento = 'N' );

        if ( nr_count_w > 0 ) then
            ds_return_w := 'EP' || ',';
        end if;

        /* Tratamento em replanejamento */

        select count(nr_sequencia)
        into STRICT nr_count_w
        from rxt_tratamento tratamento
        where tratamento.nr_seq_tumor = nr_seq_tumor_p
              and coalesce(tratamento.dt_liberacao::text, '') = ''
              and not exists (
                SELECT 1
                from autorizacao_convenio
                where nr_seq_rxt_tratamento = tratamento.nr_sequencia
              )
              and tratamento.ie_replanejamento = 'S';

        if ( nr_count_w > 0 ) then
            ds_return_w := 'TR' || ',';
        end if;

        /* Agendamento de tratamento pendente */

        select count(tratamento.nr_sequencia)
        into STRICT nr_count_w
        from rxt_tumor        tumor,
             rxt_tratamento   tratamento
        where tumor.nr_sequencia = nr_seq_tumor_p
              and tratamento.nr_seq_tumor = tumor.nr_sequencia
              and (tratamento.dt_liberacao IS NOT NULL AND tratamento.dt_liberacao::text <> '')
              and rxt_obter_se_agendamento(tumor.cd_pessoa_fisica, tumor.nr_sequencia) = 'N';

        if ( nr_count_w > 0 ) then
            ds_return_w := 'AP' || ',';
        end if;

        /* Tratamento em andamento */

        select count(tratamento.nr_sequencia)
        into STRICT nr_count_w
        from rxt_tumor        tumor,
             rxt_tratamento   tratamento
        where tumor.nr_sequencia = nr_seq_tumor_p
              and tratamento.nr_seq_tumor = tumor.nr_sequencia
              and (tratamento.dt_liberacao IS NOT NULL AND tratamento.dt_liberacao::text <> '')
              and rxt_obter_se_agendamento(tumor.cd_pessoa_fisica, tumor.nr_sequencia) = 'S'
              and rx_obter_se_trat_canc(tumor.nr_sequencia) = 'N'
              and rxt_possui_agenda_fases_trat(tumor.nr_sequencia) = 'N'
              and exists (
                SELECT 1
                from rxt_agenda agenda
                where agenda.nr_seq_tratamento = tratamento.nr_sequencia
                      and agenda.ie_status_agenda IN ('A','AP','E','T')
              );

        if ( nr_count_w > 0 ) then
            ds_return_w := 'TA' || ',';
        end if;

        /* Inicio de tratamento pendente */

        select count(tratamento.nr_sequencia)
        into STRICT nr_count_w
        from rxt_tumor        tumor,
             rxt_tratamento   tratamento
        where tumor.nr_sequencia = nr_seq_tumor_p
              and tratamento.nr_seq_tumor = tumor.nr_sequencia
              and (tratamento.dt_liberacao IS NOT NULL AND tratamento.dt_liberacao::text <> '')
              and rxt_obter_se_agendamento(tumor.cd_pessoa_fisica, tumor.nr_sequencia) = 'S'
              and rx_obter_se_trat_canc(tumor.nr_sequencia) = 'N'
              and rxt_possui_agenda_fases_trat(tumor.nr_sequencia) = 'N'
              and not exists (
                SELECT 1
                from rxt_agenda agenda
                where agenda.nr_seq_tratamento = tratamento.nr_sequencia
                      and agenda.ie_status_agenda in ('A','AP','E','T')
              );

        if ( nr_count_w > 0 ) then
            ds_return_w := 'IP' || ',';
        end if;

    end loop;

    return ds_return_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION rxt_tumor_status_trat ( nr_seq_tumor_p rxt_tumor.nr_sequencia%type, sizeparams_p bigint ) FROM PUBLIC;

