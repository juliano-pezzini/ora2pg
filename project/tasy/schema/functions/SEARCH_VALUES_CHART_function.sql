-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function search_values_chart as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION search_values_chart ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, ds_informacao_p text, nm_tabela_p text) RETURNS SETOF GET_CHART_VALUES_TABLE AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	GET_CHART_VALUES_TABLE;
BEGIN
	v_query := 'SELECT * FROM search_values_chart_atx ( ' || quote_nullable(nr_cirurgia_p) || ',' || quote_nullable(nr_seq_pepo_p) || ',' || quote_nullable(ds_informacao_p) || ',' || quote_nullable(nm_tabela_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret GET_CHART_VALUES_TABLE);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION search_values_chart_atx ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, ds_informacao_p text, nm_tabela_p text) RETURNS SETOF GET_CHART_VALUES_TABLE AS $body$
DECLARE
 TYPE cursor_ref REFCURSOR;
			
	
get_values_r		get_chart_values_row := get_chart_values_row(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);

x_w										timestamp;
dt_start_w								timestamp;
dt_end_w								timestamp;
y_w										double precision;
y_min_w									double precision;
y_max_w									double precision;
code_group_w							varchar(15);	
nm_tabela_w								varchar(50);
nm_atributo_w							varchar(50);
vl_dominio_w							varchar(15);
ie_bolus_w								varchar(15);
nr_seq_superior_w						bigint;
nm_usuario_w							varchar(15);
nr_sequencia_w							bigint;
nr_seq_pepo_w							bigint;
nr_cirurgia_w							bigint;
values_group_w							bigint;
nr_seq_pepo_ww							bigint;
ds_sql_w								varchar(4000);
cursor_vital_signs						integer;
cursor_respiratory_monitoring 			integer;
cursor_biochemistry_analyzer			integer;
cursor_hemo_monitoring					integer;
cursor_aval_analgesia					integer;
retorno_w								integer;
ds_sql_where_w							varchar(4000);
ds_sql_where_analg_w					varchar(4000);
ds_y_min_w								varchar(4000):= 'null y_min, ';
ds_y_max_w								varchar(4000):= 'null y_max, ';
ds_atributo_w							varchar(4000):= null;
ds_sql_vital_signs_w 					varchar(4000):= null;
sql_respiratory_monitoring_w 			varchar(4000):= null;
sql_biochemistry_analyzer_w 			varchar(4000):= null;
sql_hemo_monitoring_w		 			varchar(4000):= null;
sql_aval_analgesia_w		 			varchar(4000):= null;

agentes_anestesicos CURSOR FOR
/* Medications / Agents and Hidroeletric Teraphy  */


		/* Point Start */

SELECT		b.dt_inicio_adm x,
			b.dt_inicio_adm dt_start,
			b.dt_final_adm dt_end,
			get_y_surgery_chart(b.qt_dose,b.qt_dose_ataque,b.qt_halog_ins,b.qt_velocidade_inf,b.qt_total_dose) y,
			NULL y_min,
			NULL y_max,
			'AG' code_group,
			'CIRURGIA_AGENTE_ANESTESICO' nm_tabela,
			--'DS_AGENTE' || '_' || get_type_chart_surgery_agent(b.qt_dose,b.qt_dose_ataque,b.qt_halog_ins,b.qt_velocidade_inf,b.ie_aplic_bolus) nm_atributo,
			'DS_AGENTE'|| '_' || get_type_chart_surgery(b.nr_sequencia,a.nr_sequencia,'style') nm_atributo,
			NULL vl_dominio,
			b.ie_aplic_bolus ie_bolus,
			a.nr_sequencia nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			b.nr_sequencia values_group
FROM		cirurgia_agente_anest_ocor b,
			cirurgia_agente_anestesico a
WHERE		a.nr_sequencia = b.nr_seq_cirur_agente
AND		coalesce(a.ie_situacao,'A') = 'A'
AND  		coalesce(b.ie_situacao,'A') = 'A'
AND	 	a.ie_tipo IN (1,2,3)
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)))

UNION ALL

	/* Point End */

SELECT		CASE WHEN b.ie_aplic_bolus='S' THEN b.dt_inicio_adm  ELSE coalesce(b.dt_final_adm,coalesce(get_start_end_surgery_graph(a.nr_cirurgia,a.nr_seq_pepo,'END',60,0),clock_timestamp())) END  x,
			b.dt_inicio_adm dt_start,
			b.dt_final_adm dt_end,
			get_y_surgery_chart(b.qt_dose,b.qt_dose_ataque,b.qt_halog_ins,b.qt_velocidade_inf,b.qt_total_dose) y,
			NULL y_min,
			NULL y_max,
			'AG' code_group,
			'CIRURGIA_AGENTE_ANESTESICO' nm_tabela,
			--'DS_AGENTE'|| '_' || get_type_chart_surgery_agent(b.qt_dose,b.qt_dose_ataque,b.qt_halog_ins,b.qt_velocidade_inf,b.ie_aplic_bolus) nm_atributo,
			'DS_AGENTE'|| '_' || get_type_chart_surgery(b.nr_sequencia,a.nr_sequencia,'style') nm_atributo,
			NULL vl_dominio,
			b.ie_aplic_bolus ie_bolus,
			a.nr_sequencia nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			b.nr_sequencia values_group
FROM		cirurgia_agente_anest_ocor b,
			cirurgia_agente_anestesico a
WHERE		a.nr_sequencia = b.nr_seq_cirur_agente
AND		coalesce(a.ie_situacao,'A') = 'A'
AND  		coalesce(b.ie_situacao,'A') = 'A'
AND		a.ie_tipo IN (1,2,3)
AND		coalesce(b.qt_dose_ataque,0) = 0
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)))

UNION ALL

/* Blood components  */


	/* Point Start */

SELECT		b.dt_inicio_adm x,
			b.dt_inicio_adm dt_start,
			b.dt_final_adm dt_end,
			b.qt_dose y,
			NULL y_min,
			NULL y_max,
			'SH' code_group,
			'CIRURGIA_AGENTE_ANESTESICO' nm_tabela,
			'DS_AGENTE_HEMO' nm_atributo,
			NULL vl_dominio,
			b.ie_aplic_bolus ie_bolus,
			a.nr_sequencia nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			b.nr_sequencia values_group
FROM		cirurgia_agente_anest_ocor b,
			cirurgia_agente_anestesico a
WHERE		a.nr_sequencia = b.nr_seq_cirur_agente
AND		coalesce(a.ie_situacao,'A') = 'A'
AND  		coalesce(b.ie_situacao,'A') = 'A'
AND	 	a.ie_tipo = 5
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)))

UNION ALL

	/* Point End */

SELECT		coalesce(b.dt_final_adm,coalesce(get_start_end_surgery_graph(a.nr_cirurgia,a.nr_seq_pepo,'END',60,0),clock_timestamp())) x,
			b.dt_inicio_adm dt_start,
			b.dt_final_adm dt_end,
			b.qt_dose y,
			NULL y_min,
			NULL y_max,
			'SH' code_group,
			'CIRURGIA_AGENTE_ANESTESICO' nm_tabela,
			'DS_AGENTE_HEMO' nm_atributo,
			NULL vl_dominio,
			b.ie_aplic_bolus ie_bolus,
			a.nr_sequencia nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			b.nr_sequencia values_group
FROM		cirurgia_agente_anest_ocor b,
			cirurgia_agente_anestesico a
WHERE		a.nr_sequencia = b.nr_seq_cirur_agente
AND		coalesce(a.ie_situacao,'A') = 'A'
AND  		coalesce(b.ie_situacao,'A') = 'A'
AND	 	a.ie_tipo = 5
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)));
--UNION ALL
perda_ganho CURSOR FOR
/* Hidro balance - Wins and losses */

SELECT		b.dt_medida x,
			b.dt_medida dt_start,
			NULL dt_end,
			CASE WHEN obter_tipo_perda_ganho(b.nr_seq_tipo,'C')='G' THEN CASE WHEN coalesce(ie_volume_ocorrencia,'V')='O' THEN  qt_ocorrencia  ELSE qt_volume END  WHEN obter_tipo_perda_ganho(b.nr_seq_tipo,'C')='P' THEN CASE WHEN coalesce(ie_volume_ocorrencia,'V')='O' THEN  qt_ocorrencia  ELSE qt_volume END  * -1 END  y,
			NULL y_min,
			NULL y_max,
			'BH' code_group,
			'ATENDIMENTO_PERDA_GANHO' nm_tabela,
			'DS_TIPO' nm_atributo,
			NULL vl_dominio,
			NULL ie_bolus,
			b.nr_seq_tipo nr_seq_superior,
			b.nm_usuario nm_usuario,
			b.nr_sequencia nr_sequencia,
			b.nr_seq_pepo nr_seq_pepo,
			b.nr_cirurgia nr_cirurgia,
			NULL values_group
FROM 		tipo_perda_ganho c,
			atendimento_perda_ganho b
WHERE 	b.nr_seq_tipo = c.nr_sequencia
AND		c.ie_exibir_grafico = 'S'
AND 		coalesce(b.ie_situacao,'A') = 'A'
AND    	coalesce(b.dt_inativacao::text, '') = ''
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (b.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (b.nr_seq_pepo = nr_seq_pepo_p))or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (b.nr_seq_pepo = nr_seq_pepo_ww)))

UNION ALL

/* Hidro balance - Summary */

SELECT		b.dt_medida x,
			b.dt_medida dt_start,
			NULL dt_end,
			(SELECT	SUM(CASE WHEN obter_tipo_perda_ganho(x.nr_seq_tipo,'C')='G' THEN CASE WHEN coalesce(y.ie_volume_ocorrencia,'V')='O' THEN  qt_ocorrencia  ELSE qt_volume END  WHEN obter_tipo_perda_ganho(x.nr_seq_tipo,'C')='P' THEN CASE WHEN coalesce(y.ie_volume_ocorrencia,'V')='O' THEN  qt_ocorrencia  ELSE qt_volume END  * -1 END )
			FROM	tipo_perda_ganho y,
			atendimento_perda_ganho x
			WHERE	x.nr_seq_tipo = y.nr_sequencia
			AND (x.nr_cirurgia = b.nr_cirurgia OR coalesce(x.nr_cirurgia::text, '') = '')
			AND (x.nr_seq_pepo = b.nr_seq_pepo OR coalesce(x.nr_seq_pepo::text, '') = '')
			AND ((x.nr_cirurgia IS NOT NULL AND x.nr_cirurgia::text <> '') OR (x.nr_seq_pepo IS NOT NULL AND x.nr_seq_pepo::text <> ''))
			AND    		coalesce(x.dt_inativacao::text, '') = ''
			AND		x.dt_medida <= b.dt_medida) y,
			NULL y_min,
			NULL y_max,
			'BH' code_group,
			'ATENDIMENTO_PERDA_GANHO' nm_tabela,
			'BALANCO' nm_atributo,
			NULL vl_dominio,
			NULL ie_bolus,
			b.nr_seq_tipo nr_seq_superior,
			b.nm_usuario nm_usuario,
			b.nr_sequencia nr_sequencia,
			b.nr_seq_pepo nr_seq_pepo,
			b.nr_cirurgia nr_cirurgia,
			NULL values_group
FROM 		tipo_perda_ganho c,
			atendimento_perda_ganho b
WHERE 	b.nr_seq_tipo = c.nr_sequencia
AND		c.ie_exibir_grafico = 'S'
AND 		coalesce(b.ie_situacao,'A') = 'A'
AND    	coalesce(b.dt_inativacao::text, '') = ''
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (b.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (b.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (b.nr_seq_pepo = nr_seq_pepo_ww)))

UNION ALL

/* Hidro balance - Summary - End calculated */

SELECT		coalesce(get_start_end_surgery_graph(b.nr_cirurgia,b.nr_seq_pepo,'END',60,0),clock_timestamp()) x,
			NULL dt_start,
			NULL dt_end,
			(SELECT	SUM(CASE WHEN obter_tipo_perda_ganho(x.nr_seq_tipo,'C')='G' THEN CASE WHEN coalesce(y.ie_volume_ocorrencia,'V')='O' THEN  qt_ocorrencia  ELSE qt_volume END  WHEN obter_tipo_perda_ganho(x.nr_seq_tipo,'C')='P' THEN CASE WHEN coalesce(y.ie_volume_ocorrencia,'V')='O' THEN  qt_ocorrencia  ELSE qt_volume END  * -1 END )
			FROM	tipo_perda_ganho y,
			atendimento_perda_ganho x
			WHERE	x.nr_seq_tipo = y.nr_sequencia
			AND		coalesce(x.ie_situacao,'A') = 'A'
			AND    		coalesce(x.dt_inativacao::text, '') = ''
			AND (x.nr_cirurgia = b.nr_cirurgia OR coalesce(x.nr_cirurgia::text, '') = '')
			AND (x.nr_seq_pepo = b.nr_seq_pepo OR coalesce(x.nr_seq_pepo::text, '') = '')
			AND ((x.nr_cirurgia IS NOT NULL AND x.nr_cirurgia::text <> '') OR (x.nr_seq_pepo IS NOT NULL AND x.nr_seq_pepo::text <> ''))
			AND		x.dt_medida	<= coalesce(get_start_end_surgery_graph(b.nr_cirurgia,b.nr_seq_pepo,'END',60,0),clock_timestamp())) y,
			NULL y_min,
			NULL y_max,
			'BH' code_group,
			'ATENDIMENTO_PERDA_GANHO' nm_tabela,
			'BALANCO' nm_atributo,
			NULL vl_dominio,
			NULL ie_bolus,
			NULL nr_seq_superior,
			b.nm_usuario nm_usuario,
			b.nr_cirurgia nr_sequencia,
			b.nr_seq_pepo nr_seq_pepo,
			b.nr_cirurgia nr_cirurgia,
			NULL values_group
FROM 		cirurgia b
WHERE		1 = 1
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (b.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (b.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (b.nr_seq_pepo = nr_seq_pepo_ww)))
AND		MOD((	SELECT	COUNT(1)
					FROM		atendimento_perda_ganho x
					WHERE		coalesce(x.ie_situacao,'A') = 'A'
					AND (x.nr_cirurgia = b.nr_cirurgia OR coalesce(x.nr_cirurgia::text, '') = '')
					AND (x.nr_seq_pepo = b.nr_seq_pepo OR coalesce(x.nr_seq_pepo::text, '') = '')
					AND		coalesce(x.dt_inativacao::text, '') = ''
					AND ((x.nr_cirurgia IS NOT NULL AND x.nr_cirurgia::text <> '') OR (x.nr_seq_pepo IS NOT NULL AND x.nr_seq_pepo::text <> ''))),2) = 1;/* Only generate this line if non pair quantity */

--UNION ALL

/* Events */

evento_cirurgia CURSOR FOR
SELECT		a.dt_registro x,
			NULL dt_start,
			NULL dt_end,
			0 y,
			NULL y_min,
			NULL y_max,
			'NAV' code_group,
			'EVENTO_CIRURGIA_PACIENTE' nm_tabela,
			CASE WHEN b.ie_etapa_cirurgia=1 THEN 'DS_PACIENTE' WHEN b.ie_etapa_cirurgia=6 THEN 'DS_PACIENTE' WHEN b.ie_etapa_cirurgia=2 THEN 'DS_ANESTESIA' WHEN b.ie_etapa_cirurgia=5 THEN 'DS_ANESTESIA' WHEN b.ie_etapa_cirurgia=3 THEN 'DS_PROCEDIMENTO' WHEN b.ie_etapa_cirurgia=4 THEN 'DS_PROCEDIMENTO' END  nm_atributo,
			NULL vl_dominio,
			NULL ie_bolus,
			NULL nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			NULL values_group
FROM		evento_cirurgia b,
			evento_cirurgia_paciente a
WHERE		a.nr_seq_evento = b.nr_sequencia
AND  		coalesce(a.dt_inativacao::text, '') = ''
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)));

terapias_atuais CURSOR FOR
/* Medications / Solutions  */


		/* Point Start */

SELECT		b.dt_inicio_adm x,
			b.dt_inicio_adm dt_start,
			b.dt_final_adm dt_end,
			get_y_surgery_chart(b.qt_dose,b.qt_dose_ataque,b.qt_halog_ins,b.qt_velocidade_inf,b.qt_total_dose) y,
			NULL y_min,
			NULL y_max,
			'TA' code_group,
			'CIRURGIA_AGENTE_ANESTESICO' nm_tabela,
			'DS_AGENTE'|| '_' || get_type_chart_surgery(b.nr_sequencia,a.nr_sequencia,'style') nm_atributo,
			NULL vl_dominio,
			b.ie_aplic_bolus ie_bolus,
			a.nr_sequencia nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			b.nr_sequencia values_group
FROM		cirurgia_agente_anest_ocor b,
			cirurgia_agente_anestesico a
WHERE		a.nr_sequencia = b.nr_seq_cirur_agente
AND			coalesce(a.ie_situacao,'A') = 'A'
AND  		coalesce(b.ie_situacao,'A') = 'A'
AND	 		a.ie_tipo IN (2,3)
AND 		a.ie_terapia_atual = 'S'
AND			(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)))

UNION ALL

	/* Point End */

SELECT		CASE WHEN b.ie_aplic_bolus='S' THEN b.dt_inicio_adm  ELSE coalesce(b.dt_final_adm,coalesce(get_start_end_surgery_graph(a.nr_cirurgia,a.nr_seq_pepo,'END',60,0),clock_timestamp())) END  x,
			b.dt_inicio_adm dt_start,
			b.dt_final_adm dt_end,
			get_y_surgery_chart(b.qt_dose,b.qt_dose_ataque,b.qt_halog_ins,b.qt_velocidade_inf,b.qt_total_dose) y,
			NULL y_min,
			NULL y_max,
			'TA' code_group,
			'CIRURGIA_AGENTE_ANESTESICO' nm_tabela,
			'DS_AGENTE'|| '_' || get_type_chart_surgery(b.nr_sequencia,a.nr_sequencia,'style') nm_atributo,
			NULL vl_dominio,
			b.ie_aplic_bolus ie_bolus,
			a.nr_sequencia nr_seq_superior,
			a.nm_usuario nm_usuario,
			a.nr_sequencia nr_sequencia,
			a.nr_seq_pepo nr_seq_pepo,
			a.nr_cirurgia nr_cirurgia,
			b.nr_sequencia values_group
FROM		cirurgia_agente_anest_ocor b,
			cirurgia_agente_anestesico a
WHERE		a.nr_sequencia = b.nr_seq_cirur_agente
AND		coalesce(a.ie_situacao,'A') = 'A'
AND  		coalesce(b.ie_situacao,'A') = 'A'
AND		a.ie_tipo IN (2,3)
AND 	a.ie_terapia_atual = 'S'
AND		coalesce(b.qt_dose_ataque,0) = 0
AND		(((coalesce(nr_cirurgia_p,0) > 0) AND (a.nr_cirurgia = nr_cirurgia_p)) OR
			 ((coalesce(nr_seq_pepo_p,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_p)) or
			 ((coalesce(nr_seq_pepo_ww,0) > 0) AND (a.nr_seq_pepo = nr_seq_pepo_ww)));
BEGIN

if (coalesce(nr_cirurgia_p,0) > 0) and (coalesce(nr_seq_pepo_p,0) = 0) then
	select	max(nr_seq_pepo)
	into STRICT		nr_seq_pepo_ww
	from		cirurgia
	where		nr_cirurgia = nr_cirurgia_p;
end if;	


ds_sql_where_w :=	' where 	1 = 1	'	||
					' and		(a.dt_liberacao is not null or a.nm_usuario = :nm_usuario_w) '	||
					' and    	a.dt_inativacao is null 	'	||
					' and		(((nvl(:nr_cirurgia_p,0) > 0) and (a.nr_cirurgia = :nr_cirurgia_p)) or	'	||
					'			 ((nvl(:nr_seq_pepo_p,0) > 0) and (a.nr_seq_pepo = :nr_seq_pepo_p)) or	'	||
					'			 ((nvl(:nr_seq_pepo_ww,0) > 0) and (a.nr_seq_pepo = :nr_seq_pepo_ww)))';
					
ds_sql_where_analg_w :=	' where 	1 = 1	'	||
						' and		(a.dt_liberacao is not null or a.nm_usuario = :nm_usuario_w) '	||
						' and    	a.dt_inativacao is null 	'	||
						' and		(((nvl(:nr_cirurgia_p,0) > 0) and (a.nr_atendimento = (select nr_atendimento from cirurgia where nr_cirurgia = :nr_cirurgia_p))) or	'	||
						'			 ((nvl(:nr_seq_pepo_p,0) > 0) and (a.nr_seq_pepo = :nr_seq_pepo_p)) or	'	||
						'			 ((nvl(:nr_seq_pepo_ww,0) > 0) and (a.nr_seq_pepo = :nr_seq_pepo_ww)))';					


case	ds_informacao_p
	when	'BC' then
		ds_sql_where_w := ds_sql_where_w ||' and		a.qt_bcf is not null';
		ds_atributo_w	:= 'a.qt_bcf y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'FC' then
		ds_sql_where_w :=	ds_sql_where_w ||' and 		a.qt_freq_cardiaca is not null';
		ds_atributo_w	:= 'a.qt_freq_cardiaca y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'FCM' then
		ds_sql_where_w :=	ds_sql_where_w ||' and 		a.qt_freq_card_monit is not null';
		ds_atributo_w	:= 'a.qt_freq_card_monit y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'FR' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_freq_resp is not null';
		ds_atributo_w	:= 'a.qt_freq_resp y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'GC' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_glicemia_capilar is not null';
		ds_atributo_w	:= 'a.qt_glicemia_capilar y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'GCMMOL' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_glicemia_mmol is not null';
		ds_atributo_w	:= 'a.qt_glicemia_mmol y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';
	when	'ICP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_pressao_intra_cranio is not null';
		ds_atributo_w	:= 'a.qt_pressao_intra_cranio y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'M' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_maec is not null';
		ds_atributo_w	:= 'a.qt_maec y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'PAE' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_pae is not null';
		ds_atributo_w	:= 'a.qt_pae y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'PAM' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_pam is not null';
		ds_atributo_w	:= 'a.qt_pam y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'PA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and 		(a.qt_pa_sistolica is not null or qt_pa_diastolica is not null or qt_pam is not null)';
		ds_atributo_w	:= 'a.qt_pam y, ';
		ds_y_min_w		:= 'a.qt_pa_diastolica y_min, ';
		ds_y_max_w		:= 'a.qt_pa_sistolica y_max, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'PAI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and nvl(IE_APARELHO_PA,''C'') = ''I'' and	(a.qt_pa_sistolica is not null or qt_pa_diastolica is not null or qt_pam is not null)';
		ds_atributo_w	:= 'a.qt_pam y, ';
		ds_y_min_w		:= 'a.qt_pa_diastolica y_min, ';
		ds_y_max_w		:= 'a.qt_pa_sistolica y_max, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'PANI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and nvl(IE_APARELHO_PA,''C'') <> ''I'' and	(a.qt_pa_sistolica is not null or qt_pa_diastolica is not null or qt_pam is not null)';
		ds_atributo_w	:= 'a.qt_pam y, ';
		ds_y_min_w		:= 'a.qt_pa_diastolica y_min, ';
		ds_y_max_w		:= 'a.qt_pa_sistolica y_max, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	

	when	'PVC' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_pvc is not null';
		ds_atributo_w	:= 'a.qt_pvc y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'S' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_saturacao_o2 is not null';
		ds_atributo_w	:= 'a.qt_saturacao_o2 y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'TOP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_tof_bloq_neuro_musc is not null';
		ds_atributo_w	:= 'a.qt_tof_bloq_neuro_musc y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'T' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_temp is not null';
		ds_atributo_w	:= 'a.qt_temp y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';	
	when	'PIA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_PRESSAO_INTRA_ABD,0) > 0';
		ds_atributo_w	:= 'a.QT_PRESSAO_INTRA_ABD y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';
 	when	'PR' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_SPO2R is not null';
		ds_atributo_w	:= 'a.QT_SPO2R y, ';
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL'; 		
	when	'CAM' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_cam is not null';
		ds_atributo_w	:= 'a.qt_cam y, ';
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'E' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_co2 is not null';
		ds_atributo_w	:= 'a.qt_co2 y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HE' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_exp is not null';
		ds_atributo_w	:= 'a.qt_halog_exp y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';		
	when	'HI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_ins is not null';
		ds_atributo_w	:= 'a.qt_halog_ins y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';		
	when	'PEEP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_peep is not null';
		ds_atributo_w	:= 'a.qt_peep y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';		
	when	'SVCO' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_SAT_VENOSA_O2,0) > 0';
		ds_atributo_w	:= 'a.QT_SAT_VENOSA_O2 y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTFIO2' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_FIO2 is not null';
		ds_atributo_w	:= 'a.QT_FIO2 y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTOXIGINS' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_OXIG_INS is not null';
		ds_atributo_w	:= 'a.QT_OXIG_INS y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTVCI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_VCI is not null';
		ds_atributo_w	:= 'a.QT_VCI y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTFREQVENT' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_FREQ_VENT is not null';
		ds_atributo_w	:= 'a.QT_FREQ_VENT y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTPIP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_PIP is not null';
		ds_atributo_w	:= 'a.QT_PIP y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'QTCARBINS' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_ICO2 is not null';
		ds_atributo_w	:= 'a.QT_ICO2 y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTCARB' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_FR_CO2 is not null';
		ds_atributo_w	:= 'a.QT_FR_CO2 y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'QTNITROINS' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_OXIDO_NITROSO_INSP is not null';
		ds_atributo_w	:= 'a.QT_OXIDO_NITROSO_INSP y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';		
	when	'QTNITROEXP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_OXIDO_NITROSO_EXP is not null';
		ds_atributo_w	:= 'a.QT_OXIDO_NITROSO_EXP y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';		
	when	'QTOXIGEXP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_OXIG_EXP is not null';
		ds_atributo_w	:= 'a.QT_OXIG_EXP y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HTII' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_ins is not null and a.IE_HALOG_TIPO = 1';
		ds_atributo_w	:= 'a.qt_halog_ins y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'HTEI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_exp is not null and a.IE_HALOG_TIPO = 1';
		ds_atributo_w	:= 'a.qt_halog_exp y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';		
	when	'HTIS' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_ins is not null and a.IE_HALOG_TIPO = 2';
		ds_atributo_w	:= 'a.qt_halog_ins y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HTES' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_exp is not null and a.IE_HALOG_TIPO = 2';
		ds_atributo_w	:= 'a.qt_halog_exp y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HTIH' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_ins is not null and a.IE_HALOG_TIPO = 3';
		ds_atributo_w	:= 'a.qt_halog_ins y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HTEH' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_exp is not null and a.IE_HALOG_TIPO = 3';
		ds_atributo_w	:= 'a.qt_halog_exp y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'HTIE' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_ins is not null and a.IE_HALOG_TIPO = 4';
		ds_atributo_w	:= 'a.qt_halog_ins y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HTEE' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_exp is not null and a.IE_HALOG_TIPO = 4';
		ds_atributo_w	:= 'a.qt_halog_exp y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';
	when	'HTID' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_ins is not null and a.IE_HALOG_TIPO = 5';
		ds_atributo_w	:= 'a.qt_halog_ins y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';	
	when	'HTED' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_halog_exp is not null and a.IE_HALOG_TIPO = 5';
		ds_atributo_w	:= 'a.qt_halog_exp y, ';		
		nm_tabela_w		:= 'ATENDIMENTO_MONIT_RESP';

    when	'PH' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_ph is not null';
		ds_atributo_w	:= 'a.qt_ph y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'PO2' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_po2 is not null';
		ds_atributo_w	:= 'a.qt_po2 y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'PCO2' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_pco2 is not null';
		ds_atributo_w	:= 'a.qt_pco2 y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'HCO3' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_hco3 is not null';
		ds_atributo_w	:= 'a.qt_hco3 y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'BE' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_be is not null';
		ds_atributo_w	:= 'a.qt_be y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'CO2' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_co2 is not null';
		ds_atributo_w	:= 'a.qt_co2 y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'SATO2' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_sato2 is not null';
		ds_atributo_w	:= 'a.qt_sato2 y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'HB' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_hb is not null';
		ds_atributo_w	:= 'a.qt_hb y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'HT' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_ht is not null';
		ds_atributo_w	:= 'a.qt_ht y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'NA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_na is not null';
		ds_atributo_w	:= 'a.qt_na y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'K' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_k is not null';
		ds_atributo_w	:= 'a.qt_k y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'GLICOSE' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_glicose is not null';
		ds_atributo_w	:= 'a.qt_glicose y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'CA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_ca is not null';
		ds_atributo_w	:= 'a.qt_ca y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'MG' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_mg is not null';
		ds_atributo_w	:= 'a.qt_mg y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'CLORO' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_cloro is not null';
		ds_atributo_w	:= 'a.qt_cloro y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

    when	'LACTATO' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_lactato is not null';
		ds_atributo_w	:= 'a.qt_lactato y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';

	when	'TCA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.qt_tca is not null';
		ds_atributo_w	:= 'a.qt_tca y, ';				
		nm_tabela_w		:= 'ATEND_ANAL_BIOQ_PORT';
	when	'PAPO' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_PA_OCLUIDA_AP is not null';
		ds_atributo_w	:= 'a.QT_PA_OCLUIDA_AP y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'PDIASTAP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_PA_DIAST_AP is not null';
		ds_atributo_w	:= 'a.QT_PA_DIAST_AP y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'PSISTAP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		a.QT_PA_SIST_AP is not null';
		ds_atributo_w	:= 'a.QT_PA_SIST_AP y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'PVI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.qt_pvi,0) > 0';
		ds_atributo_w	:= 'a.qt_pvi y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'VVS' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_VVS,0) > 0';
		ds_atributo_w	:= 'a.QT_VVS y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'SPHB' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_SPHB,0) > 0';
		ds_atributo_w	:= 'a.QT_SPHB y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'DPP' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_DELTA_PP,0) > 0';
		ds_atributo_w	:= 'a.QT_DELTA_PP y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'DCA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_DEBITO_CARD,0) > 0';
		ds_atributo_w	:= 'a.QT_DEBITO_CARD y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'ICA' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.TX_INDICE_CARD,0) > 0';
		ds_atributo_w	:= 'a.TX_INDICE_CARD y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
	when	'VSI' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_VOLUME_SIST,0) > 0';
		ds_atributo_w	:= 'a.QT_VOLUME_SIST y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
   when	'QTRV' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_RV_SISTEMICA,0) > 0';
		ds_atributo_w	:= 'a.QT_RV_SISTEMICA y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';
   when	'TXRV' then
		ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.TX_RV_SISTEMICA,0) > 0';
		ds_atributo_w	:= 'a.TX_RV_SISTEMICA y, ';				
		nm_tabela_w		:= 'ATEND_MONIT_HEMOD';

   when 'QTSEGMENTOST' then
        ds_sql_where_w :=	ds_sql_where_w ||' and		nvl(a.QT_SEGMENTO_ST,0) > 0';
		ds_atributo_w	:= 'a.QT_SEGMENTO_ST y, ';				
		nm_tabela_w		:= 'ATENDIMENTO_SINAL_VITAL';
		
	when 'QTBISL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_BIS_L,0) > 0';
		ds_atributo_w	:= 'a.QT_BIS_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTBISR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_BIS_R,0) > 0';
		ds_atributo_w	:= 'a.QT_BIS_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTSQIL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_SQI_L,0) > 0';
		ds_atributo_w	:= 'a.QT_SQI_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTSQIR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_SQI_R,0) > 0';
		ds_atributo_w	:= 'a.QT_SQI_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTEMGL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_EMG_L,0) > 0';
		ds_atributo_w	:= 'a.QT_EMG_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTEMGR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_EMG_R,0) > 0';
		ds_atributo_w	:= 'a.QT_EMG_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTSRL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_SR_L,0) > 0';
		ds_atributo_w	:= 'a.QT_SR_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTSRR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_SR_R,0) > 0';
		ds_atributo_w	:= 'a.QT_SR_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTSEFL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_SEF_L,0) > 0';
		ds_atributo_w	:= 'a.QT_SEF_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTSEFR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_SEF_R,0) > 0';
		ds_atributo_w	:= 'a.QT_SEF_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTTPL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_TP_L,0) > 0';
		ds_atributo_w	:= 'a.QT_TP_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTTPR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_TP_R,0) > 0';
		ds_atributo_w	:= 'a.QT_TP_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTBURSTL' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_BURST_L,0) > 0';
		ds_atributo_w	:= 'a.QT_BURST_L y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
	when 'QTBURSTR' then
		ds_sql_where_analg_w :=	ds_sql_where_analg_w ||' and		nvl(a.QT_BURST_R,0) > 0';
		ds_atributo_w	:= 'a.QT_BURST_R y, ';				
		nm_tabela_w		:= 'ATEND_AVAL_ANALGESIA';
		
    else
        ds_atributo_w	:= 'null y, ';
        nm_tabela_w 	:= nm_tabela_p;

end case;	

ds_sql_vital_signs_w := 			'select  	a.dt_sinal_vital x, '	||
									'			null dt_start, 		'	||
									'			null dt_end, 		'	||
												ds_atributo_w 			||
												ds_y_min_w				||
												ds_y_max_w				||
									'			null nm_tabela, 	'	||
									'			null nm_atributo, 	'	||
									'			null ie_bolus, 		'	||
									'			a.nr_sequencia nr_seq_superior, '	||
									'			a.nm_usuario nm_usuario, 		'	||
									'			a.nr_sequencia nr_sequencia, 	'	||
									'			null values_group 				'	||
									'from  	atendimento_sinal_vital a';
								
sql_respiratory_monitoring_w :=  	'select  	a.dt_monitorizacao x, 	'	||
									'			null dt_start, 			'	||
									'			null dt_end, 			'	||
												ds_atributo_w 				||
												ds_y_min_w					||
												ds_y_max_w					||
									'			null nm_tabela, 		'	||
									'			null nm_atributo, 		'	||
									'			null ie_bolus, 			'	||
									'			a.nr_sequencia nr_seq_superior, '	||
									'			a.nm_usuario nm_usuario, 		'	||
									'			a.nr_sequencia nr_sequencia, 	'	||
									'			null values_group 				'	||
									'from  	atendimento_monit_resp a ';
													

sql_biochemistry_analyzer_w :=  	'select  	a.dt_analise x,	'	||
									'			null dt_start, 	'	||
									'			null dt_end, 	'	||
												ds_atributo_w 		||
												ds_y_min_w			||
												ds_y_max_w			||
									'			null nm_tabela,	'	||
									'			null nm_atributo,	'	||
									'			null ie_bolus, 		'	||
									'			a.nr_sequencia nr_seq_superior, '	||
									'			a.nm_usuario nm_usuario, 		'	||
									'			a.nr_sequencia nr_sequencia, 	'	||
									'			null values_group 				'||
									'from  	ATEND_ANAL_BIOQ_PORT a ';	

sql_hemo_monitoring_w :=  	'select  	a.dt_monitoracao x,	'	||
									'			null dt_start, 	'	||
									'			null dt_end, 	'	||
												ds_atributo_w 		||
												ds_y_min_w			||
												ds_y_max_w			||
									'			null nm_tabela,	'	||
									'			null nm_atributo,	'	||
									'			null ie_bolus, 		'	||
									'			a.nr_sequencia nr_seq_superior, '	||
									'			a.nm_usuario nm_usuario, 		'	||
									'			a.nr_sequencia nr_sequencia, 	'	||
									'			null values_group 				'||
									'from  	ATEND_MONIT_HEMOD a ';	
									
sql_aval_analgesia_w :=  	'select  	a.dt_avaliacao x,	'	||
									'			null dt_start, 	'	||
									'			null dt_end, 	'	||
												ds_atributo_w 		||
												ds_y_min_w			||
												ds_y_max_w			||
									'			null nm_tabela,	'	||
									'			null nm_atributo,	'	||
									'			null ie_bolus, 		'	||
									'			a.nr_sequencia nr_seq_superior, '	||
									'			a.nm_usuario nm_usuario, 		'	||
									'			a.nr_sequencia nr_sequencia, 	'	||
									'			null values_group 				'||
									'from  	ATEND_AVAL_ANALGESIA a ';										

if (nm_tabela_w = 'ATENDIMENTO_SINAL_VITAL') then
	cursor_vital_signs := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_vital_signs, ds_sql_vital_signs_w || ds_sql_where_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,1,x_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,2,dt_start_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,3,dt_end_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,4,y_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,5,y_min_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,6,y_max_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,7,nm_tabela_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,8,nm_atributo_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,9,ie_bolus_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,10,nr_seq_superior_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,11,nm_usuario_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,12,nr_sequencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_vital_signs,13,values_group_w);
	DBMS_SQL.BIND_VARIABLE(cursor_vital_signs,'nr_cirurgia_p', nr_cirurgia_p);
	DBMS_SQL.BIND_VARIABLE(cursor_vital_signs,'nr_seq_pepo_p', nr_seq_pepo_p);
	DBMS_SQL.BIND_VARIABLE(cursor_vital_signs,'nr_seq_pepo_ww', nr_seq_pepo_ww);
	DBMS_SQL.BIND_VARIABLE(cursor_vital_signs,'nm_usuario_w', WHEB_USUARIO_PCK.get_nm_usuario);
	retorno_w := DBMS_SQL.execute(cursor_vital_signs);
	while( DBMS_SQL.FETCH_ROWS(cursor_vital_signs) > 0 ) loop
			begin
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,1,x_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,2,dt_start_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,3,dt_end_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,4,y_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,5,y_min_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,6,y_max_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,7,nm_tabela_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,8,nm_atributo_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,9,ie_bolus_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,10,nr_seq_superior_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,11,nm_usuario_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,12,nr_sequencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_vital_signs,13,values_group_w);
			get_values_r := get_chart_values_row(	nr_cirurgia_p,
													nr_seq_pepo_p,
													x_w,
													dt_start_w,
													dt_end_w,
													y_w,
													y_min_w,
													y_max_w,
													'SV',
													nm_tabela_w,
													nm_atributo_w,
													ds_informacao_p,
													ie_bolus_w,
													nr_seq_superior_w,
													nm_usuario_w,
													nr_sequencia_w,
													values_group_w);
			RETURN NEXT get_values_r;														
			end;
			end loop;
elsif (nm_tabela_w = 'ATENDIMENTO_MONIT_RESP') then
	cursor_respiratory_monitoring := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_respiratory_monitoring, sql_respiratory_monitoring_w || ds_sql_where_w, dbms_sql.Native);	
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,1,x_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,2,dt_start_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,3,dt_end_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,4,y_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,5,y_min_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,6,y_max_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,7,nm_tabela_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,8,nm_atributo_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,9,ie_bolus_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,10,nr_seq_superior_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,11,nm_usuario_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,12,nr_sequencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_respiratory_monitoring,13,values_group_w);
	DBMS_SQL.BIND_VARIABLE(cursor_respiratory_monitoring,'nr_cirurgia_p', nr_cirurgia_p);
	DBMS_SQL.BIND_VARIABLE(cursor_respiratory_monitoring,'nr_seq_pepo_p', nr_seq_pepo_p);
	DBMS_SQL.BIND_VARIABLE(cursor_respiratory_monitoring,'nr_seq_pepo_ww', nr_seq_pepo_ww);
	DBMS_SQL.BIND_VARIABLE(cursor_respiratory_monitoring,'nm_usuario_w', WHEB_USUARIO_PCK.get_nm_usuario);
	retorno_w := DBMS_SQL.execute(cursor_respiratory_monitoring);
	while( DBMS_SQL.FETCH_ROWS(cursor_respiratory_monitoring) > 0 ) loop
			begin
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,1,x_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,2,dt_start_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,3,dt_end_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,4,y_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,5,y_min_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,6,y_max_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,7,nm_tabela_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,8,nm_atributo_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,9,ie_bolus_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,10,nr_seq_superior_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,11,nm_usuario_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,12,nr_sequencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_respiratory_monitoring,13,values_group_w);
			get_values_r := get_chart_values_row(	nr_cirurgia_p,
																nr_seq_pepo_p,
																x_w,
																dt_start_w,
																dt_end_w,
																y_w,
																y_min_w,
																y_max_w,
																'SV',
																nm_tabela_w,
																nm_atributo_w,
																ds_informacao_p,
																ie_bolus_w,
																nr_seq_superior_w,
																nm_usuario_w,
																nr_sequencia_w,
																values_group_w);
			RETURN NEXT get_values_r;														
			end;
			end loop;
elsif (nm_tabela_w = 'ATEND_ANAL_BIOQ_PORT') then
	cursor_biochemistry_analyzer := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_biochemistry_analyzer, sql_biochemistry_analyzer_w || ds_sql_where_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,1,x_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,2,dt_start_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,3,dt_end_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,4,y_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,5,y_min_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,6,y_max_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,7,nm_tabela_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,8,nm_atributo_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,9,ie_bolus_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,10,nr_seq_superior_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,11,nm_usuario_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,12,nr_sequencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_biochemistry_analyzer,13,values_group_w);
	DBMS_SQL.BIND_VARIABLE(cursor_biochemistry_analyzer,'nr_cirurgia_p', nr_cirurgia_p);
	DBMS_SQL.BIND_VARIABLE(cursor_biochemistry_analyzer,'nr_seq_pepo_p', nr_seq_pepo_p);
	DBMS_SQL.BIND_VARIABLE(cursor_biochemistry_analyzer,'nr_seq_pepo_ww', nr_seq_pepo_ww);
	DBMS_SQL.BIND_VARIABLE(cursor_biochemistry_analyzer,'nm_usuario_w', WHEB_USUARIO_PCK.get_nm_usuario);
	retorno_w := DBMS_SQL.execute(cursor_biochemistry_analyzer);
	while( DBMS_SQL.FETCH_ROWS(cursor_biochemistry_analyzer) > 0 ) loop
			begin
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,1,x_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,2,dt_start_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,3,dt_end_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,4,y_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,5,y_min_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,6,y_max_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,7,nm_tabela_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,8,nm_atributo_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,9,ie_bolus_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,10,nr_seq_superior_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,11,nm_usuario_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,12,nr_sequencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_biochemistry_analyzer,13,values_group_w);
			get_values_r := get_chart_values_row(	nr_cirurgia_p,
																nr_seq_pepo_p,
																x_w,
																dt_start_w,
																dt_end_w,
																y_w,
																y_min_w,
																y_max_w,
																'SV',
																nm_tabela_w,
																nm_atributo_w,
																ds_informacao_p,
																ie_bolus_w,
																nr_seq_superior_w,
																nm_usuario_w,
																nr_sequencia_w,
																values_group_w);
			RETURN NEXT get_values_r;														
			end;
			end loop;
elsif (nm_tabela_w = 'ATEND_MONIT_HEMOD') then
	cursor_hemo_monitoring := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_hemo_monitoring, sql_hemo_monitoring_w || ds_sql_where_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,1,x_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,2,dt_start_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,3,dt_end_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,4,y_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,5,y_min_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,6,y_max_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,7,nm_tabela_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,8,nm_atributo_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,9,ie_bolus_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,10,nr_seq_superior_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,11,nm_usuario_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,12,nr_sequencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_hemo_monitoring,13,values_group_w);
	DBMS_SQL.BIND_VARIABLE(cursor_hemo_monitoring,'nr_cirurgia_p', nr_cirurgia_p);
	DBMS_SQL.BIND_VARIABLE(cursor_hemo_monitoring,'nr_seq_pepo_p', nr_seq_pepo_p);
	DBMS_SQL.BIND_VARIABLE(cursor_hemo_monitoring,'nr_seq_pepo_ww', nr_seq_pepo_ww);
	DBMS_SQL.BIND_VARIABLE(cursor_hemo_monitoring,'nm_usuario_w', WHEB_USUARIO_PCK.get_nm_usuario);
	retorno_w := DBMS_SQL.execute(cursor_hemo_monitoring);
	while( DBMS_SQL.FETCH_ROWS(cursor_hemo_monitoring) > 0 ) loop
			begin
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,1,x_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,2,dt_start_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,3,dt_end_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,4,y_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,5,y_min_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,6,y_max_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,7,nm_tabela_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,8,nm_atributo_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,9,ie_bolus_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,10,nr_seq_superior_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,11,nm_usuario_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,12,nr_sequencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_hemo_monitoring,13,values_group_w);
			get_values_r := get_chart_values_row(	nr_cirurgia_p,
																nr_seq_pepo_p,
																x_w,
																dt_start_w,
																dt_end_w,
																y_w,
																y_min_w,
																y_max_w,
																'SV',
																nm_tabela_w,
																nm_atributo_w,
																ds_informacao_p,
																ie_bolus_w,
																nr_seq_superior_w,
																nm_usuario_w,
																nr_sequencia_w,
																values_group_w);
			RETURN NEXT get_values_r;														
			end;
			end loop;
elsif (nm_tabela_w = 'ATEND_AVAL_ANALGESIA') then
	cursor_aval_analgesia := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(cursor_aval_analgesia, sql_aval_analgesia_w || ds_sql_where_analg_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,1,x_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,2,dt_start_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,3,dt_end_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,4,y_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,5,y_min_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,6,y_max_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,7,nm_tabela_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,8,nm_atributo_w,50);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,9,ie_bolus_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,10,nr_seq_superior_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,11,nm_usuario_w,15);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,12,nr_sequencia_w);
	DBMS_SQL.DEFINE_COLUMN(cursor_aval_analgesia,13,values_group_w);
	DBMS_SQL.BIND_VARIABLE(cursor_aval_analgesia,'nr_cirurgia_p', nr_cirurgia_p);
	DBMS_SQL.BIND_VARIABLE(cursor_aval_analgesia,'nr_seq_pepo_p', nr_seq_pepo_p);
	DBMS_SQL.BIND_VARIABLE(cursor_aval_analgesia,'nr_seq_pepo_ww', nr_seq_pepo_ww);
	DBMS_SQL.BIND_VARIABLE(cursor_aval_analgesia,'nm_usuario_w', WHEB_USUARIO_PCK.get_nm_usuario);
	retorno_w := DBMS_SQL.execute(cursor_aval_analgesia);
	while( DBMS_SQL.FETCH_ROWS(cursor_aval_analgesia) > 0 ) loop
			begin
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,1,x_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,2,dt_start_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,3,dt_end_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,4,y_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,5,y_min_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,6,y_max_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,7,nm_tabela_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,8,nm_atributo_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,9,ie_bolus_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,10,nr_seq_superior_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,11,nm_usuario_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,12,nr_sequencia_w);
			DBMS_SQL.COLUMN_VALUE(cursor_aval_analgesia,13,values_group_w);
			get_values_r := get_chart_values_row(	nr_cirurgia_p,
																nr_seq_pepo_p,
																x_w,
																dt_start_w,
																dt_end_w,
																y_w,
																y_min_w,
																y_max_w,
																'SV',
																nm_tabela_w,
																nm_atributo_w,
																ds_informacao_p,
																ie_bolus_w,
																nr_seq_superior_w,
																nm_usuario_w,
																nr_sequencia_w,
																values_group_w);
			RETURN NEXT get_values_r;														
			end;
			end loop;			
elsif (nm_tabela_w = 'CIRURGIA_AGENTE_ANESTESICO') then
	OPEN agentes_anestesicos;
	LOOP
	FETCH agentes_anestesicos INTO
		x_w,
		dt_start_w,
		dt_end_w,
		y_w,
		y_min_w,
		y_max_w,
		code_group_w,
		nm_tabela_w,
		nm_atributo_w,
		vl_dominio_w,
		ie_bolus_w,
		nr_seq_superior_w,
		nm_usuario_w,
		nr_sequencia_w,
		nr_seq_pepo_w,
		nr_cirurgia_w,
		values_group_w;
	EXIT WHEN NOT FOUND; /* apply on agentes_anestesicos */
		BEGIN
		get_values_r := get_chart_values_row(	nr_cirurgia_p,
												nr_seq_pepo_p,
												x_w,
												dt_start_w,
												dt_end_w,
												y_w,
												y_min_w,
												y_max_w,
												code_group_w,
												nm_tabela_w,
												nm_atributo_w,
												vl_dominio_w,
												ie_bolus_w,
												nr_seq_superior_w,
												nm_usuario_w,
												nr_sequencia_w,
												values_group_w);
		RETURN NEXT get_values_r;
		END;
	END LOOP;
	CLOSE agentes_anestesicos;

	OPEN terapias_atuais;
	LOOP
	FETCH terapias_atuais INTO
		x_w,
		dt_start_w,
		dt_end_w,
		y_w,
		y_min_w,
		y_max_w,
		code_group_w,
		nm_tabela_w,
		nm_atributo_w,
		vl_dominio_w,
		ie_bolus_w,
		nr_seq_superior_w,
		nm_usuario_w,
		nr_sequencia_w,
		nr_seq_pepo_w,
		nr_cirurgia_w,
		values_group_w;
	EXIT WHEN NOT FOUND; /* apply on terapias_atuais */
		BEGIN
		get_values_r := get_chart_values_row(	nr_cirurgia_p,
												nr_seq_pepo_p,
												x_w,
												dt_start_w,
												dt_end_w,
												y_w,
												y_min_w,
												y_max_w,
												code_group_w,
												nm_tabela_w,
												nm_atributo_w,
												vl_dominio_w,
												ie_bolus_w,
												nr_seq_superior_w,
												nm_usuario_w,
												nr_sequencia_w,
												values_group_w);
		RETURN NEXT get_values_r;
		END;
	END LOOP;
	CLOSE terapias_atuais;

elsif (nm_tabela_w = 'ATENDIMENTO_PERDA_GANHO') then
	
	OPEN perda_ganho;
	LOOP
	FETCH perda_ganho INTO
		x_w,
		dt_start_w,
		dt_end_w,
		y_w,
		y_min_w,
		y_max_w,
		code_group_w,
		nm_tabela_w,
		nm_atributo_w,
		vl_dominio_w,
		ie_bolus_w,
		nr_seq_superior_w,
		nm_usuario_w,
		nr_sequencia_w,
		nr_seq_pepo_w,
		nr_cirurgia_w,
		values_group_w;
	EXIT WHEN NOT FOUND; /* apply on perda_ganho */
		BEGIN
		get_values_r := get_chart_values_row(	nr_cirurgia_p,
												nr_seq_pepo_p,
												x_w,
												dt_start_w,
												dt_end_w,
												y_w,
												y_min_w,
												y_max_w,
												code_group_w,
												nm_tabela_w,
												nm_atributo_w,
												vl_dominio_w,
												ie_bolus_w,
												nr_seq_superior_w,
												nm_usuario_w,
												nr_sequencia_w,
												values_group_w);
		RETURN NEXT get_values_r;
		END;
	END LOOP;
	CLOSE perda_ganho;

elsif (nm_tabela_w = 'EVENTO_CIRURGIA_PACIENTE') then
	
	OPEN evento_cirurgia;
	LOOP
	FETCH evento_cirurgia INTO
		x_w,
		dt_start_w,
		dt_end_w,
		y_w,
		y_min_w,
		y_max_w,
		code_group_w,
		nm_tabela_w,
		nm_atributo_w,
		vl_dominio_w,
		ie_bolus_w,
		nr_seq_superior_w,
		nm_usuario_w,
		nr_sequencia_w,
		nr_seq_pepo_w,
		nr_cirurgia_w,
		values_group_w;
	EXIT WHEN NOT FOUND; /* apply on evento_cirurgia */
		BEGIN
		get_values_r := get_chart_values_row(	nr_cirurgia_p,
												nr_seq_pepo_p,
												x_w,
												dt_start_w,
												dt_end_w,
												y_w,
												y_min_w,
												y_max_w,
												code_group_w,
												nm_tabela_w,
												nm_atributo_w,
												vl_dominio_w,
												ie_bolus_w,
												nr_seq_superior_w,
												nm_usuario_w,
												nr_sequencia_w,
												values_group_w);
		RETURN NEXT get_values_r;
		END;
	END LOOP;
	CLOSE evento_cirurgia;	
			
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION search_values_chart ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, ds_informacao_p text, nm_tabela_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION search_values_chart_atx ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, ds_informacao_p text, nm_tabela_p text) FROM PUBLIC;

