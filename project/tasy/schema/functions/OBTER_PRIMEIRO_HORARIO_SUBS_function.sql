-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_primeiro_horario_subs ( cd_intervalo_p text, nr_prescricao_p bigint, cd_material_p bigint) RETURNS varchar AS $body$
DECLARE


ds_prim_horario_w		varchar(255);
dt_prescricao_w			timestamp;
hr_prescricao_w			varchar(05);
hr_inicial_w			varchar(05);
ds_retorno_w			varchar(5);
hr_prim_horario_w		varchar(10);
i						integer;
hr_ref_w				timestamp;
hr_atual_w				timestamp;
ds_horario_w			varchar(5);
ds_hora_inicio_w		varchar(5);
dt_primeiro_horario_w	timestamp;
cd_estabelecimento_w	bigint;
ie_dia_w				bigint;
cd_setor_atendimento_w	integer;
ie_prescr_emergencia_w	varchar(1);
cd_intervalo_w			varchar(50);
nr_atendimento_w		bigint;

c01 CURSOR FOR
SELECT	hr_prim_horario,
		cd_intervalo
from		material_prescr
where	cd_material							= cd_material_p
and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
and		ie_tipo 							= '1'
order by nr_sequencia;


BEGIN

select	max(to_char(dt_primeiro_horario,'hh24:mi')),
		max(dt_prescricao),
		max(dt_primeiro_horario),
		coalesce(max(cd_setor_atendimento),0),
		coalesce(max(ie_prescr_emergencia),'N'),
		max(cd_estabelecimento),
		max(nr_atendimento)
into STRICT		hr_prescricao_w,
		dt_prescricao_w,
		dt_primeiro_horario_w,
		cd_setor_atendimento_w,
		ie_prescr_emergencia_w,
		cd_estabelecimento_w,
		nr_atendimento_w
from		prescr_medica
where	nr_prescricao 	= nr_prescricao_p;

if (to_char(dt_primeiro_horario_w,'hh24:mi') < to_char(clock_timestamp(),'hh24:mi')) then
	dt_primeiro_horario_w	:= clock_timestamp();
end if;

open C01;
loop
fetch C01 into
	hr_prim_horario_w,
	cd_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	hr_prim_horario_w	:= hr_prim_horario_w;
	cd_intervalo_w		:= cd_intervalo_w;
end loop;
close C01;

select	trunc(dt_prescricao_w) - trunc(clock_timestamp())
into STRICT	ie_dia_w
;

if (to_date(to_char(dt_prescricao_w, 'dd/mm/yyyy ') || hr_prescricao_w, 'dd/mm/yyyy hh24:mi') > dt_prescricao_w) or (ie_dia_w > 0) then
	hr_inicial_w		:= hr_prescricao_w;
else
	hr_inicial_w		:= to_char(trunc(dt_prescricao_w,'hh') + 1/24,'hh24:mi');
end if;

select	coalesce(max(ds_prim_horario) || ' ', ' ')
into STRICT		ds_prim_horario_w
from		intervalo_material
where	cd_intervalo	= cd_intervalo_p
and		cd_material	= cd_material_p;

if (cd_setor_atendimento_w > 0) and (coalesce(ds_prim_horario_w,' ') = ' ') then
	select	coalesce(max(b.ds_prim_horario) || ' ', ' ')
	into STRICT		ds_prim_horario_w
	from		intervalo_prescricao a,
			intervalo_setor b
	where	a.cd_intervalo 		= b.cd_intervalo
	and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
	and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
	and		a.cd_intervalo 		= cd_intervalo_p
	and		((b.cd_material = cd_material_p) or (coalesce(b.cd_material::text, '') = ''))
	and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''));
end if;

if (coalesce(ds_prim_horario_w::text, '') = '') or (ds_prim_horario_w = ' ') then
	select	coalesce(max(ds_prim_horario) || ' ', ' ')
	into STRICT	ds_prim_horario_w
	from	intervalo_prescricao
	where	cd_intervalo = cd_intervalo_p;
end if;

begin
if (substr(hr_inicial_w,1,2) = '24') then
	hr_ref_w	:= trunc(dt_prescricao_w,'dd') + 1;
else
	hr_ref_w	:= to_date(to_char(dt_prescricao_w,'dd/mm/yyyy ') || hr_inicial_w,'dd/mm/yyyy hh24:mi');
end if;
exception
	when others then
	--- A data inicial não é válida
	CALL wheb_mensagem_pck.exibir_mensagem_abort(228903);
end;
if (hr_ref_w < dt_prescricao_w) then
	hr_ref_w	:= hr_ref_w + 1;
end if;

ds_horario_w		:= '';

FOR i 	IN 1.. length(ds_prim_horario_w) LOOP
	begin
	if (substr(ds_prim_horario_w,i,1) = ' ') then
		begin
		if (coalesce(ds_hora_inicio_w::text, '') = '') then
			ds_hora_inicio_w	:= ds_horario_w;
		end if;
		if (substr(ds_horario_w,1,2) = '00') or (substr(ds_horario_w,1,2) = '24') then
			hr_atual_w	:= trunc(dt_prescricao_w,'dd') + 1;
		else

			if (length(ds_horario_w) = 0) then
				ds_horario_w	:= '00';
			elsif (length(ds_horario_w) > 2) then
				ds_horario_w	:= substr(ds_horario_w,1,2);
			end if;

			if (length(ds_horario_w) = 1) then
				ds_horario_w	:= '0' || ds_horario_w;
			end if;

			hr_atual_w	:= to_date(to_char(dt_prescricao_w,'dd/mm/yyyy') || ds_horario_w,'dd/mm/yyyy hh24');
		end if;
		if (hr_atual_w < dt_prescricao_w) then
			hr_atual_w	:= hr_atual_w + 1;
		end if;
		if (length(ds_horario_w) = 2) then
			ds_horario_w	:= ds_horario_w || ':00';
		end if;
		if (ds_horario_w >= to_char(dt_primeiro_horario_w,'hh24:mi')) then
			begin
			hr_inicial_w	:= ds_horario_w;
			ds_hora_inicio_w:= ds_horario_w;
			exit;
			end;
		end if;
		ds_horario_w		:= '';
		end;
	else
		begin
		ds_horario_w	:= substr(ds_horario_w || substr(ds_prim_horario_w,i,1),1,5);
		end;
	end if;
	end;
END LOOP;

if (hr_inicial_w <> ds_hora_inicio_w) then
	hr_inicial_w	:= ds_hora_inicio_w;
end if;

if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') and
	((cd_intervalo_w = cd_intervalo_p) or (coalesce(cd_intervalo_w::text, '') = '')) then
	hr_inicial_w	:= hr_prim_horario_w;
end if;

if (length(hr_inicial_w) = 2) then
	hr_inicial_w	:= hr_inicial_w || ':00';
end if;
/*
if	(sysdate > dt_prescricao_w) then
	if	(hr_prescricao_w <= to_char(sysdate,'hh24:mi')) then
		hr_prescricao_w := to_char(trunc(sysdate,'hh') + 1/24,'hh24:mi');
	end if;

	if	(hr_inicial_w <= to_char(sysdate,'hh24:mi')) then
		hr_inicial_w := to_char(trunc(sysdate,'hh') + 1/24,'hh24:mi');
	end if;

	if	(hr_inicial_w < hr_prescricao_w) then
		hr_inicial_w := hr_prescricao_w;
	end if;
end if;
*/
ds_retorno_w	:= coalesce(hr_inicial_w, hr_prescricao_w);

if (ds_retorno_w = '24:00') or (ds_retorno_w = '24') then
	ds_retorno_w	:= '00:00';
end if;

if (ie_prescr_emergencia_w = 'S') then
	ds_retorno_w	:= to_char(dt_primeiro_horario_w,'hh24:mi');
end if;

RETURN ds_retorno_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_primeiro_horario_subs ( cd_intervalo_p text, nr_prescricao_p bigint, cd_material_p bigint) FROM PUBLIC;

