-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_dados_carencia_seg ( nr_seq_segurado_p bigint, qt_ordem_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/* ie_opcao_p
	'DS' = Descrição da cobertura
	'DT' = Data de início da vigência
*/
i			bigint;
ds_retorno_w		varchar(400);
ds_cobertura_w		varchar(255);
dt_inicio_vigencia_w	timestamp;
ds_vigencia_cob_w	varchar(100);
nr_seq_tipo_carencia_w	bigint;

c01 CURSOR FOR
	SELECT	b.ds_carencia,
		a.dt_inicio_vigencia,
		b.nr_sequencia
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
	and	b.ie_cpt	= 'N'
	
union all

	SELECT	b.ds_grupo,
		a.dt_inicio_vigencia,
		null
	from	pls_carencia		a,
		pls_grupo_carencia	b,
		pls_segurado		c
	where	a.nr_seq_grupo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_imprimir_carteira,'N')	= 'S'

	
union all

	select	b.ds_carencia,
		a.dt_inicio_vigencia,
		b.nr_sequencia
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c,
		pls_contrato		d
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_contrato	= d.nr_sequencia
	and	c.nr_seq_contrato	= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
	and	b.ie_cpt	= 'N'
	and	not exists (	select	1
				from	pls_carencia		a,
					pls_tipo_carencia	b,
					pls_segurado		c
				where	a.nr_seq_tipo_carencia	= b.nr_sequencia
				and	a.nr_seq_segurado	= c.nr_sequencia
				and	c.nr_sequencia		= nr_seq_segurado_p
				and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
				
union all

				select	1
				from	pls_carencia		a,
					pls_grupo_carencia	b,
					pls_segurado		c
				where	a.nr_seq_grupo_carencia	= b.nr_sequencia
				and	a.nr_seq_segurado	= c.nr_sequencia
				and	c.nr_sequencia		= nr_seq_segurado_p
				and	coalesce(b.ie_imprimir_carteira,'N')	= 'S')
	
union all

	select	b.ds_carencia,
		a.dt_inicio_vigencia,
		b.nr_sequencia
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c,
		pls_plano		d
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_plano		= d.nr_sequencia
	and	c.nr_seq_plano		= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
	and	b.ie_cpt	= 'N'
	and	not exists (	select	1
				from	pls_carencia		a,
					pls_tipo_carencia	b,
					pls_segurado		c
				where	a.nr_seq_tipo_carencia	= b.nr_sequencia
				and	a.nr_seq_segurado	= c.nr_sequencia
				and	c.nr_sequencia		= nr_seq_segurado_p
				and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
				
union all

				select	1
				from	pls_carencia		a,
					pls_grupo_carencia	b,
					pls_segurado		c
				where	a.nr_seq_grupo_carencia	= b.nr_sequencia
				and	a.nr_seq_segurado	= c.nr_sequencia
				and	c.nr_sequencia		= nr_seq_segurado_p
				and	coalesce(b.ie_imprimir_carteira,'N')	= 'S')
	and	not exists (	select	1
				from	pls_carencia		a,
					pls_tipo_carencia	b,
					pls_segurado		c,
					pls_contrato		d
				where	a.nr_seq_tipo_carencia	= b.nr_sequencia
				and	a.nr_seq_contrato	= d.nr_sequencia
				and	c.nr_seq_contrato	= d.nr_sequencia
				and	c.nr_sequencia		= nr_seq_segurado_p
				and	coalesce(b.ie_padrao_carteira,'N')	= 'S');


BEGIN

if (coalesce(nr_seq_segurado_p,0) <> 0) then

	i		:= 0;
	open C01;
	loop
	fetch C01 into
		ds_cobertura_w,
		dt_inicio_vigencia_w,
		nr_seq_tipo_carencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia_w) = 'S') then
			i	:= i + 1;

			if (qt_ordem_p = i) then
				if (ie_opcao_p = 'DS') then
					ds_retorno_w	:= ds_cobertura_w;
				elsif (ie_opcao_p = 'DT') then
					if (coalesce(dt_inicio_vigencia_w::text, '') = '') or (dt_inicio_vigencia_w <= clock_timestamp()) then
						ds_vigencia_cob_w := 'IMEDIATO';
					else
						ds_vigencia_cob_w := to_date(dt_inicio_vigencia_w,'dd/mm/yyyy');
					end if;
					ds_retorno_w	:= ds_vigencia_cob_w;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_dados_carencia_seg ( nr_seq_segurado_p bigint, qt_ordem_p bigint, ie_opcao_p text) FROM PUBLIC;

