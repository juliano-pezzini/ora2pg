-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION gel_obter_dados_atraso ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_tipo_dado_p text) RETURNS varchar AS $body$
DECLARE

/*
  ie_tipo_dado_p
	'MOTI' -  Motivo de atraso, campo ds_motivo
	'DATA' - Nova data de entrega, campo dt_nova_entrega
	'SITU' - Situação, para verificar o mesmo esta em atraso ou não.

*/
ds_retorno_w		varchar(250);
nr_seq_ultimo_atraso_w	bigint;
ds_motivo_w		varchar(250);
dt_nova_entrega_w	timestamp;
dt_resultado_w		timestamp;
nr_seq_exame_w		bigint;
ie_laudo_lib_w		varchar(10);


BEGIN

select	max(nr_seq_exame)
into STRICT	nr_seq_exame_w
from	prescr_procedimento
where	nr_prescricao = nr_prescricao_p
and	nr_sequencia = nr_seq_prescr_p;

ie_laudo_lib_w := Obter_se_laudo_exame_liberado(nr_seq_exame_w, nr_prescricao_p , nr_seq_prescr_p, 'EL');

if (coalesce(ie_laudo_lib_w,'N') = 'N') then

	select  coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_ultimo_atraso_w
	from	prescr_procedimento_atraso
	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_prescr = nr_seq_prescr_p;

	if (nr_seq_ultimo_atraso_w > 0) then

		select	coalesce(max(ds_motivo),''),
			coalesce(max(dt_nova_entrega), null)
		into STRICT	ds_motivo_w,
			dt_nova_entrega_w
		from	prescr_procedimento_atraso
		where	nr_sequencia = 	nr_seq_ultimo_atraso_w;


		if (ie_tipo_dado_p = 'MOTI') then
			ds_retorno_w := ds_motivo_w;
		elsif (ie_tipo_dado_p = 'DATA') then
			ds_retorno_w := to_char( dt_nova_entrega_w, 'DD/MM/YYYY HH24:MI:SS');
		end if;
	else
		ds_retorno_w := '';
	end if;

	if (ie_tipo_dado_p = 'SITU') then


			if (dt_nova_entrega_w IS NOT NULL AND dt_nova_entrega_w::text <> '') then

				ds_retorno_w := Wheb_mensagem_pck.get_texto(308437); --'Em atraso';
			else
				select 	max(dt_resultado)
				into STRICT	dt_resultado_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_seq_prescr_p;

				if (dt_resultado_w IS NOT NULL AND dt_resultado_w::text <> '') then

					if (trunc(dt_resultado_w)> trunc(clock_timestamp())) then
						ds_retorno_w := Wheb_mensagem_pck.get_texto(308438); --'No prazo';
					elsif (trunc(dt_resultado_w)< trunc(clock_timestamp())) then
						ds_retorno_w := Wheb_mensagem_pck.get_texto(308437); --'Em atraso';
					elsif (trunc(dt_resultado_w)= trunc(clock_timestamp())) then
						ds_retorno_w := Wheb_mensagem_pck.get_texto(308439); --'Em espera';
					else
						ds_retorno_w := '';
					end if;

				end if;
			end if;
	end if;
else
	ds_retorno_w := '';
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION gel_obter_dados_atraso ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_tipo_dado_p text) FROM PUBLIC;

