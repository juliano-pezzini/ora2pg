-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_preco_proc_edicao (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_conta_p timestamp, ie_tipo_retorno_p text) RETURNS varchar AS $body$
DECLARE

 
/* ie_tipo_retorno 
	 
	'X' - NÃºmero de auxiliares 
	'P' - Porte 
	'A' - Ambos 
	'U' - Unidade Medida 
	'DSU' - Desc. Unidade Medida	 
 
*/
 
 
nr_auxiliares_w				bigint	:= 0;
qt_porte_anestesico_w			bigint	:= 0;
qt_porte_anestesico_ww			bigint	:= 0;
ie_classificacao_w			smallint;
CD_UNIDADE_MEDIDA_w			varchar(30);
ds_UNIDADE_MEDIDA_w			varchar(40);
ie_vigencia_aux_cbhpm_w			varchar(1);
dt_inicio_vigencia_w			timestamp;
cd_edicao_amb_ww			integer;
nr_auxiliares_ww			bigint;
ie_origem_proced_edicao_w		bigint;
IE_DATA_VIG_CBHPM_w			varchar(01);
dt_vigencia_cbhpm_w			timestamp;
nr_seq_cbhpm_edicao_w			bigint;
ie_prioridade_edicao_w			varchar(01);

CD_EDICAO_AMB_W				integer;
VL_CH_HONORARIOS_W			double precision;
VL_CH_CUSTO_OPER_W			double precision;
VL_M2_FILME_W				double precision;
dt_inicio_vig_w				timestamp;
tx_ajuste_geral_w			double precision;
nr_porte_anest_cobranca_w		smallint;
cd_area_procedimento_w			area_procedimento.cd_area_procedimento%type;
cd_especialidade_w			especialidade_proc.cd_especialidade%type;
cd_grupo_proc_w				grupo_proc.cd_grupo_proc%type;

/* 
ie_prioridade_edicao_w		varchar2(01); 
vl_ch_honorarios_w		number(15,4) := 1; 
vl_ch_custo_oper_w		number(15,4) := 1; 
vl_m2_filme_w			number(15,4) := 0; 
dt_inicio_vigencia_w		date; 
tx_ajuste_geral_w		number(15,4); 
nr_seq_cbhpm_edicao_w		number(10,0); 
*/
 
 
C06 CURSOR FOR 
	SELECT	nr_porte_anest_cobranca 
	from	regra_porte_anest_cbhpm 
	where	nr_porte_anest = qt_porte_anestesico_w 
	and	coalesce(cd_procedimento, cd_procedimento_p)	= cd_procedimento_p 
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, ie_origem_proced_p) = ie_origem_proced_p)) 
	and	coalesce(cd_area_procedimento, cd_area_procedimento_w) = cd_area_procedimento_w 
	and	coalesce(cd_especialidade, cd_especialidade_w) = cd_especialidade_w 
	and	coalesce(cd_grupo_proc, cd_grupo_proc_w) = cd_grupo_proc_w 
	order by nr_porte_anest;


BEGIN 
 
 
select	coalesce(max(ie_prioridade_edicao_amb), 'N') 
into STRICT	ie_prioridade_edicao_w 
from	parametro_faturamento 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
 
if (ie_prioridade_edicao_w	= 'N') then 
 
	select	max(coalesce(cd_edicao_amb, 0)) 
	into STRICT	cd_edicao_amb_w 
	from	convenio_amb 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	cd_convenio		= cd_convenio_p 
	and	cd_categoria		= cd_categoria_p 
	and	coalesce(ie_situacao,'A')	= 'A' 
	and	dt_inicio_vigencia	= 
		(SELECT	max(dt_inicio_vigencia) 
		from	convenio_amb a 
		where	a.cd_estabelecimento = cd_estabelecimento_p 
		and	a.cd_convenio     = cd_convenio_p 
		and	a.cd_categoria    = cd_categoria_p 
		and	coalesce(a.ie_situacao,'A')= 'A');
else 
 
	SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_procedimento_p, cd_edicao_amb_w, vl_ch_honorarios_W, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w, ie_origem_proced_p) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_W, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
end if;
 
if (cd_edicao_amb_w > 0) then 
	 
	select max(b.ie_classificacao) 
	into STRICT	ie_classificacao_w		 
	from 	procedimento b 
	where 	b.cd_procedimento = cd_procedimento_p 
	and 	b.ie_origem_proced = ie_origem_proced_p;
 
	select	coalesce(max(ie_origem_proced),ie_origem_proced_p) 
	into STRICT	ie_origem_proced_edicao_w 
	from	edicao_amb 
	where	cd_edicao_amb	= cd_edicao_amb_w;
 
	if (ie_origem_proced_p = 5) and ((cd_edicao_amb_w in (2004,2005)) or (ie_origem_proced_edicao_w	= 5)) then 
		begin 
		 
		select	coalesce(max(ie_vigencia_aux_cbhpm),'N'), 
			coalesce(max(IE_DATA_VIG_CBHPM), 'N'), 
			coalesce(max(ie_prioridade_edicao_amb), 'N') 
		into STRICT	ie_vigencia_aux_cbhpm_w, 
			IE_DATA_VIG_CBHPM_w, 
			ie_prioridade_edicao_w 
		from	parametro_faturamento 
		where	cd_estabelecimento	= cd_estabelecimento_p;
		 
		select 	coalesce(max(a.nr_auxiliar),0), 
			coalesce(max(a.nr_porte_anest),0), 
			max(a.nr_porte_anest) 
		into STRICT	nr_auxiliares_w, 
			qt_porte_anestesico_w, 
			qt_porte_anestesico_ww 
		from	cbhpm_preco a 
		where	a.cd_procedimento	= cd_procedimento_p 
		and	a.ie_origem_proced	= ie_origem_proced_p 
		and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') = 
				(SELECT max(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')) 
				from cbhpm_preco b 
				where	b.cd_procedimento			= cd_procedimento_p 
				and	b.ie_origem_proced			= ie_origem_proced_p 
				and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_p);	
		 
		if (ie_data_vig_cbhpm_w	= 'R') then 
			 
			select	coalesce(max(ie_data_vig_cbhpm), 'N') 
			into STRICT	ie_data_vig_cbhpm_w 
			from	convenio_estabelecimento 
			where	cd_convenio	= cd_convenio_p 
			and	cd_estabelecimento 	= cd_estabelecimento_p;
 
		end if;	
		 
		 
		if (IE_DATA_VIG_CBHPM_w	= 'S') then 
		 
			if (ie_prioridade_edicao_w	= 'N') then 
				 
				begin 
				select 	nr_seq_cbhpm_edicao 
				into STRICT  	nr_seq_cbhpm_edicao_w 
				from 	convenio_amb 
				where (cd_estabelecimento   = cd_estabelecimento_p) 
				and (cd_convenio      = cd_convenio_p) 
				and (cd_categoria      = cd_categoria_p) 
				and (coalesce(ie_situacao,'A')	= 'S') 
				and 	(dt_inicio_vigencia   = 
					(SELECT	max(dt_inicio_vigencia) 
					from 	convenio_amb a 
					where (a.cd_estabelecimento = cd_estabelecimento_p) 
					and (a.cd_convenio     = cd_convenio_p) 
					and (a.cd_categoria    = cd_categoria_p) 
					and (coalesce(a.ie_situacao,'A')= 'A') 
					and (a.dt_inicio_vigencia <= dt_conta_p)));
				exception 
					when 	others then 
						begin 
						nr_seq_cbhpm_edicao_w	:= 0;
					end;
				end;
			else 
				SELECT * FROM Obter_Edicao_Proc_Conv(cd_estabelecimento_p, CD_CONVENIO_P, CD_CATEGORIA_p, DT_CONTA_P, cd_procedimento_p, CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vig_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT CD_EDICAO_AMB_W, VL_CH_HONORARIOS_W, VL_CH_CUSTO_OPER_W, VL_M2_FILME_W, dt_inicio_vig_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
			end if;
 
			dt_vigencia_cbhpm_w:= null;
			 
			if (coalesce(nr_seq_cbhpm_edicao_w,0) > 0) then 
				 
				select 	max(dt_vigencia) 
				into STRICT	dt_vigencia_cbhpm_w 
				from 	cbhpm_edicao 
				where 	nr_sequencia = nr_seq_cbhpm_edicao_w;
			end if;
		 
			if (dt_vigencia_cbhpm_w IS NOT NULL AND dt_vigencia_cbhpm_w::text <> '') then 
		 
				select 	coalesce(max(a.nr_auxiliar),0), 
					coalesce(max(a.nr_porte_anest),0), 
					max(a.nr_porte_anest) 
				into STRICT	nr_auxiliares_w, 
					qt_porte_anestesico_w, 
					qt_porte_anestesico_ww 
				from	cbhpm_preco a 
				where	a.cd_procedimento	= cd_procedimento_p 
				and	a.ie_origem_proced	= ie_origem_proced_p 
				and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') = 
						(SELECT min(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')) 
						from 	cbhpm_preco b 
						where	b.cd_procedimento			= cd_procedimento_p 
						and	b.ie_origem_proced			= ie_origem_proced_p 
						and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_p 
						and	b.dt_vigencia				= dt_vigencia_cbhpm_w);
					 
			end if;
			 
		end if;
		 
		 
		if (ie_vigencia_aux_cbhpm_w	= 'S') then 
		 
			SELECT * FROM Obter_Edicao_Procedimento(	cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_procedimento_p, cd_edicao_amb_ww, dt_inicio_vigencia_w) INTO STRICT cd_edicao_amb_ww, dt_inicio_vigencia_w;
			 
			select	coalesce(max(nr_auxiliar),0) 
			into STRICT	nr_auxiliares_ww 
			from	cbhpm_preco 
			where	dt_vigencia		= dt_inicio_vigencia_w 
			and	cd_procedimento		= cd_procedimento_p 
			and	ie_origem_proced	= ie_origem_proced_p;
			 
			if (nr_auxiliares_ww	<> 0) then 
				nr_auxiliares_w		:= nr_auxiliares_ww;
			end if;
		end if;
		 
		select	coalesce(max(cd_area_procedimento),0), 
			coalesce(max(cd_especialidade),0), 
			coalesce(max(cd_grupo_proc),0) 
		into STRICT	cd_area_procedimento_w, 
			cd_especialidade_w, 
			cd_grupo_proc_w 
		from	estrutura_procedimento_v 
		where	cd_procedimento = cd_procedimento_p 
		and	ie_origem_proced = ie_origem_proced_p;
		 
		nr_porte_anest_cobranca_w:= null;
		open C06;
		loop 
		fetch C06 into	 
			nr_porte_anest_cobranca_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			nr_porte_anest_cobranca_w:= nr_porte_anest_cobranca_w;
			end;
		end loop;
		close C06;
 
		if (nr_porte_anest_cobranca_w IS NOT NULL AND nr_porte_anest_cobranca_w::text <> '') then 
			qt_porte_anestesico_w	:= nr_porte_anest_cobranca_w;
			qt_porte_anestesico_ww	:= nr_porte_anest_cobranca_w;
		end if;
		 
		end;
	elsif	((ie_origem_proced_p	in (1,8,4)) or ((ie_origem_proced_p = 5) and (cd_edicao_amb_w not in (2004,2005)))) and (ie_classificacao_w 	= 1) then 
		begin 
		select 	coalesce(max(a.nr_auxiliares),0), 
			coalesce(max(a.qt_porte_anestesico), 0), 
			max(a.qt_porte_anestesico) 
		into STRICT	nr_auxiliares_w, 
			qt_porte_anestesico_w, 
			qt_porte_anestesico_ww 
		from 	preco_amb a 
		where	((cd_edicao_amb_w = 0) or (a.cd_edicao_amb	= coalesce(somente_numero(cd_edicao_amb_w),0))) 
		and	a.cd_procedimento	= cd_procedimento_p 
		and	a.ie_origem_proced	= ie_origem_proced_p 
		and  	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	= 
				(SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')) 
				from preco_amb b 
				where 	((cd_edicao_amb_w = 0) or (b.cd_edicao_amb	= coalesce(somente_numero(cd_edicao_amb_w),0))) 
				and	b.cd_procedimento		= cd_procedimento_p 
				and	b.ie_origem_proced	= ie_origem_proced_p 
				and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_p);
		end;
	elsif (ie_origem_proced_p	= 1) then 
		begin 
		select 	coalesce(max(a.CD_UNIDADE_MEDIDA), obter_desc_expressao(729586)), 
			coalesce(max(b.DS_UNIDADE_MEDIDA), obter_desc_expressao(300760)) 
		into STRICT	CD_UNIDADE_MEDIDA_w, 
			ds_UNIDADE_MEDIDA_w 
		from 	unidade_medida b, 
			preco_servico a 
		where	((cd_edicao_amb_w = 0) or (a.CD_TABELA_SERVICO	= coalesce(somente_numero(cd_edicao_amb_w),0))) 
		and	a.cd_procedimento	= cd_procedimento_p 
		and	a.ie_origem_proced	= ie_origem_proced_p 
		and	a.cd_unidade_medida	= b.cd_unidade_medida 
		and  	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	= 
				(SELECT max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')) 
				from preco_servico b 
				where 	((cd_edicao_amb_w = 0) or (b.CD_TABELA_SERVICO	= coalesce(somente_numero(cd_edicao_amb_w),0))) 
				and	b.cd_procedimento		= cd_procedimento_p 
				and	b.ie_origem_proced	= ie_origem_proced_p 
				and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_p);
		end;
	end if;
end if;
 
if (ie_tipo_retorno_p = 'X') then 
	return	nr_auxiliares_w;
elsif (ie_tipo_retorno_p = 'P') then 
	return	qt_porte_anestesico_w;
elsif (ie_tipo_retorno_p = 'PN') then 
	return	qt_porte_anestesico_ww;
elsif (ie_tipo_retorno_p = 'U') then 
	return	CD_UNIDADE_MEDIDA_w;
elsif (ie_tipo_retorno_p = 'DSU') then 
	return	ds_UNIDADE_MEDIDA_w;
elsif (ie_tipo_retorno_p = 'A') then 
	return	wheb_mensagem_pck.get_texto(310373,'NR_AUXILIARES_W='||nr_auxiliares_w||';QT_PORTE_ANESTESICO_W='||qt_porte_anestesico_w);
else	 
	return null;
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_preco_proc_edicao (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_conta_p timestamp, ie_tipo_retorno_p text) FROM PUBLIC;

