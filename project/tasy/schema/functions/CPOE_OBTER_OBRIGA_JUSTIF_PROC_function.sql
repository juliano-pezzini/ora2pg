-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_obriga_justif_proc ( nr_seq_proc_interno_p regra_obriga_just_proc.nr_seq_proc_interno%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type) RETURNS varchar AS $body$
DECLARE

 
ie_result_w				char(1) := 'N';
cd_convenio_w			convenio.cd_convenio%type;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
cd_tipo_procedimento_w	procedimento.cd_tipo_procedimento%type;
ie_origem_proced_w		proc_interno.ie_origem_proced%type;
cd_procedimento_w		proc_interno.cd_procedimento%type;
qt_vezes_util_dia_w		regra_obriga_just_proc.qt_vezes_perm_dia%type;
qt_vezes_perm_dia_w		regra_obriga_just_proc.qt_vezes_perm_dia%type;
nr_seq_proc_interno_w	regra_obriga_just_proc.nr_seq_proc_interno%type;
cd_area_proc_w			regra_obriga_just_proc.cd_area_procedimento%type;
cd_especialidade_w		regra_obriga_just_proc.cd_especialidade%type;
cd_grupo_proc_w			regra_obriga_just_proc.cd_grupo_proc%type;

proc_data CURSOR FOR 
	SELECT 	distinct a.cd_procedimento, 
		  c.cd_grupo_proc, 
		  c.cd_especialidade, 
		  e.cd_area_procedimento, 
			a.ie_origem_proced, 
			b.cd_tipo_procedimento 
	from 	proc_interno a, 
			procedimento b, 
			grupo_proc c, 
			especialidade_proc d, 
			area_procedimento e 
	where  nr_sequencia = nr_seq_proc_interno_p 
	and		a.cd_procedimento = b.cd_procedimento 
	and		b.ie_origem_proced = a.ie_origem_proced 
	and   b.cd_grupo_proc = c.cd_grupo_proc 
	and   c.cd_especialidade = d.cd_especialidade 
	and   d.cd_area_procedimento = e.cd_area_procedimento;


BEGIN 
select	coalesce(max('S'),'N') 
into STRICT	ie_result_w 
from	regra_obriga_just_proc LIMIT 1;
 
if (ie_result_w = 'S') then 
	open proc_data;
	loop 
	fetch proc_data into	 
		cd_procedimento_w, 
		cd_grupo_proc_w, 
		cd_especialidade_w, 
		cd_area_proc_w, 
		ie_origem_proced_w, 
		cd_tipo_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on proc_data */
		begin	  
		 
		cd_convenio_w			:= obter_convenio_atendimento(nr_atendimento_p);
		cd_setor_atendimento_w	:= obter_setor_atendimento(nr_atendimento_p);
		 
		select	coalesce(min(qt_vezes_perm_dia),-1), 
				min(nr_seq_proc_interno) 
		into STRICT	qt_vezes_perm_dia_w, 
				nr_seq_proc_interno_w 
		from	regra_obriga_just_proc where		(qt_vezes_perm_dia IS NOT NULL AND qt_vezes_perm_dia::text <> '') 
		and		coalesce(cd_procedimento, coalesce(cd_procedimento_w,0)) = coalesce(cd_procedimento_w,0) 
		and		((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, coalesce(ie_origem_proced_w,0)) = coalesce(ie_origem_proced_w,0))) 
		and		coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p,0)) = coalesce(nr_seq_proc_interno_p,0) 
		and		coalesce(cd_area_procedimento, coalesce(cd_area_proc_w,0)) = coalesce(cd_area_proc_w,0) 
		and		coalesce(cd_especialidade, coalesce(cd_especialidade_w,0)) = coalesce(cd_especialidade_w,0) 
		and		coalesce(cd_tipo_procedimento, coalesce(cd_tipo_procedimento_w,0)) = coalesce(cd_tipo_procedimento_w,0) 
		and		coalesce(cd_convenio,cd_convenio_w) = cd_convenio_w 
		and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0) 
		and		coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0)) = coalesce(cd_grupo_proc_w,0) LIMIT 1;
		 
		if (qt_vezes_perm_dia_w > -1) then 
			select	count(*) 
			into STRICT	qt_vezes_util_dia_w 
			from	cpoe_procedimento a 
			where	coalesce(a.nr_seq_proc_interno,0) = coalesce(nr_seq_proc_interno_w,coalesce(a.nr_seq_proc_interno,0)) 
			and		coalesce(a.dt_suspensao::text, '') = '' 
			and		clock_timestamp() between trunc(a.dt_inicio) and fim_dia(coalesce(a.dt_fim, dt_inicio + 1)) 
			and		a.nr_atendimento = nr_atendimento_p;
			 
			if (qt_vezes_util_dia_w >= qt_vezes_perm_dia_w) then 
				ie_result_w	:= 'S';
			else 
				ie_result_w	:= 'N';
			end if;
		else 
			ie_result_w	:= 'N';
		end if;
	end;
	end loop;
	close proc_data;
end if;
 
 
return	ie_result_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_obriga_justif_proc ( nr_seq_proc_interno_p regra_obriga_just_proc.nr_seq_proc_interno%type, nr_atendimento_p atendimento_paciente.nr_atendimento%type) FROM PUBLIC;

