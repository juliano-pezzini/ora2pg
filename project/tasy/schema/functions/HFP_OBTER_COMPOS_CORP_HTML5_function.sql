-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION hfp_obter_compos_corp_html5 ( nr_sequencia_p bigint, ie_informacao_p text) RETURNS bigint AS $body$
DECLARE

  qt_idade_w           double precision;
  aux_w                integer; --para arredondar o valor antes de retornar como texto
  qt_peso_w            double precision;
  dc_triceps_w         double precision;
  dc_subescapular_w    double precision;
  dc_suprailiaca_w     double precision;
  dc_abdominal_w       double precision;
  qt_altura_cm_w       double precision;
  perc_gordura_w       double precision;
  perc_ideal_gordura_w double precision;
  ds_retorno_w         integer;
  qt_imc_w             integer;

BEGIN
  ds_retorno_w := 0;
  --Busca dados para permitir c lculos posteriores
  SELECT obter_idade_pf(c.cd_pessoa_fisica, clock_timestamp(), 'A'),
    a.qt_peso,
    a.dc_tricipes,
    a.dc_subescapular,
    a.dc_suprailiaca,
    a.dc_abdominal,
    a.qt_altura_cm,
    obter_imc(a.qt_peso, a.qt_altura_cm, c.cd_pessoa_fisica)
  INTO STRICT qt_idade_w,
    qt_peso_w,
    dc_triceps_w,
    dc_subescapular_w,
    dc_suprailiaca_w,
    dc_abdominal_w,
    qt_altura_cm_w,
    qt_imc_w
  FROM hfp_composicao_corporal a,
    hfp_cinesio_funcional b,
    hfp_paciente c
  WHERE a.nr_seq_aval    = b.nr_sequencia
  AND b.nr_seq_paciente  = c.nr_sequencia
  AND a.nr_sequencia     = nr_sequencia_p;
  perc_gordura_w        := ((dc_triceps_w + dc_subescapular_w + dc_suprailiaca_w + dc_abdominal_w) * 0.153 + 5.783);
  perc_ideal_gordura_w  := 12             + (qt_idade_w - 30) * 0.2;
  IF (ie_informacao_p    = 'PI') THEN -- PESO IDEAL
    aux_w               := (qt_peso_w * (100 - perc_gordura_w) * 0.01)/(1-(perc_ideal_gordura_w) * 0.01);
    ds_retorno_w        := aux_w;
  elsif (ie_informacao_p = 'PSG') THEN -- PESO GORDURA
    aux_w               := (qt_peso_w * perc_gordura_w * 0.01);
    ds_retorno_w        := aux_w;
  elsif (ie_informacao_p = 'IMC') THEN -- IMC
    aux_w               := qt_imc_w;
    ds_retorno_w        := aux_w;
  elsif (ie_informacao_p = 'PS') THEN -- PESO
    ds_retorno_w        := qt_peso_w;
  elsif (ie_informacao_p = 'PM') THEN -- PESO MAGRO
    aux_w               := (qt_peso_w * (100 - perc_gordura_w) * 0.01);
    ds_retorno_w        := aux_w;
  elsif (ie_informacao_p = 'PG') THEN -- PERCENTUAL GORDURA
    aux_w               := perc_gordura_w;
    ds_retorno_w        := aux_w;
  elsif (ie_informacao_p = 'PLG') THEN -- PERCENTUAL LIVRE GORDURA
    aux_w               := (100 - perc_gordura_w);
    ds_retorno_w        := aux_w;
  elsif (ie_informacao_p = 'PIG') THEN -- PERCENTUAL IDEAL GORDURA
    aux_w               := perc_ideal_gordura_w;
    ds_retorno_w        := aux_w;
  END IF;
  RETURN ds_retorno_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION hfp_obter_compos_corp_html5 ( nr_sequencia_p bigint, ie_informacao_p text) FROM PUBLIC;

