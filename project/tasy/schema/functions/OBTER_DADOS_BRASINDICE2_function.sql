-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_brasindice2 ( cd_estabelecimento_p bigint, cd_material_p bigint, dt_vigencia_p timestamp, cd_convenio_p bigint, ie_opcao_p text, cd_categoria_p text, ie_tipo_atendimento_p bigint, nr_seq_marca_p bigint) RETURNS varchar AS $body$
DECLARE


/* opcoes brasindice 
	
	
	clab - codigo do laboratorio
	dlab - descricao do laboratorio
	cmed - codigo do medicamento
	dmed - descricao do medicamento
	capr - codigo da apresentacao
	dapr - descricao da apresentacao
	prec - tipo de preco - pfb ou pmc
	ajus - taxa de ajuste
	tiss - codigo do tiss
	ean - codigo do ean
	dtv - data de vigenica da versao atual
	ver - versao atual

*/
	
cd_laboratorio_w		varchar(06);
cd_laboratorio_ww		varchar(06);
dt_vigencia_w			timestamp;
ds_laboratorio_w		varchar(40) 	:= '';
cd_convenio_w			bigint;
cd_medicamento_w		varchar(06);
cd_medicamento_ww		varchar(06);
ds_medicamento_w		varchar(80) 	:= '';
cd_apresentacao_w		varchar(6);
cd_apresentacao_ww		varchar(6);
ds_apresentacao_w		varchar(155);

qt_reg_w			bigint := 0;

ie_tipo_preco_regra_w		varchar(3);
ie_tipo_preco_regra_ww		varchar(3);
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
cd_grupo_material_w	 	smallint;
ie_tipo_preco_w			varchar(3);
ie_tipo_preco_ww		varchar(3);
ie_pis_cofins_w			varchar(1);
ie_pis_cofins_ww		varchar(1);
tx_brasindice_pmc_w            	CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type;--number(15,4);
tx_pfb_neg_w                   	CONVENIO_BRASINDICE.TX_PFB_NEG%type;--number(15,4);
tx_pfb_pos_w                   	CONVENIO_BRASINDICE.TX_PFB_POS%type;--number(15,4);
tx_pmc_neg_w                   	CONVENIO_BRASINDICE.TX_PMC_NEG%type;--number(15,4);
tx_pmc_pos_w                   	CONVENIO_BRASINDICE.TX_PMC_POS%type;--number(15,4);
tx_preco_fabrica_w             	CONVENIO_BRASINDICE.TX_PRECO_FABRICA%type;--number(15,4);
tx_ajuste_w			double precision;
cd_tiss_w			varchar(15);
cd_tiss_ww			varchar(15);
cd_ean_w			varchar(20);
cd_ean_ww			varchar(20);
ie_tipo_material_w		varchar(3);
dt_inicio_vigencia_w		varchar(20);
dt_inicio_vigencia_ww		varchar(20);
dt_base_fixo_w			varchar(20);
qt_dia_fixo_w			integer	:= 0;
dt_base_fixo_w2			timestamp;	
ie_versao_atual_w		bigint;
ie_versao_atual_ww		bigint;
vl_preco_medicamento_w		double precision;


c01 CURSOR FOR
	SELECT	a.cd_laboratorio,
		a.cd_medicamento,
		a.cd_apresentacao,
		b.ie_tipo_preco,
		b.ie_pis_cofins,
		b.cd_tiss,
		b.cd_ean,
        PKG_DATE_FORMATERS.TO_VARCHAR(b.dt_inicio_vigencia,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario),
		b.ie_versao_atual,
		b.vl_preco_medicamento
	from	material_brasindice a,
		brasindice_preco b
	where	a.cd_material						= cd_material_p
	and	a.cd_laboratorio = b.cd_laboratorio
	and	a.cd_medicamento = b.cd_medicamento
	and	a.cd_apresentacao = b.cd_apresentacao
	and	coalesce(a.cd_convenio, cd_convenio_w) = cd_convenio_w
	and	coalesce(a.ie_situacao, 'A')	= 'A'
	and	b.ie_tipo_preco	= coalesce(ie_tipo_preco_regra_w,b.ie_tipo_preco)
	--and	nvl(b.dt_inicio_vigencia,dt_vigencia_w)				= dt_vigencia_w
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p,0)) = coalesce(nr_seq_marca_p,0)
	and 	b.dt_inicio_vigencia = (SELECT 	max(x.dt_inicio_vigencia) 
					from 	brasindice_preco x, 
						material_brasindice y 
					where 	x.cd_laboratorio = y.cd_laboratorio
		                        and 	x.cd_medicamento = y.cd_medicamento 
		                        and 	x.cd_apresentacao = y.cd_apresentacao 
		                        and 	x.cd_laboratorio =a.cd_laboratorio
		                        and 	x.cd_medicamento = a.cd_medicamento
		                        and 	x.cd_apresentacao = a.cd_apresentacao
					and	x.ie_tipo_preco	= coalesce(ie_tipo_preco_regra_w,x.ie_tipo_preco)
					and 	coalesce(x.dt_inicio_vigencia,dt_vigencia_w)			<= dt_vigencia_w
					and 	coalesce(y.cd_convenio, cd_convenio_w)			= cd_convenio_w)
	order by	coalesce(a.dt_vigencia, clock_timestamp() - interval '10000 days'),
		b.vl_preco_medicamento asc,
		coalesce(b.dt_inicio_vigencia, clock_timestamp() - interval '1000 days');
		
c05 CURSOR FOR
	SELECT	ie_tipo_preco
	from	regra_prior_brasindice
	where	dt_vigencia <= coalesce(dt_vigencia_p,clock_timestamp())
	order by 	dt_vigencia desc,
		nr_prioridade;


BEGIN

select 	max(cd_grupo_material),
	max(cd_subgrupo_material),
	max(cd_classe_material),
	max(ie_tipo_material)
into STRICT	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	ie_tipo_material_w
from 	estrutura_material_v
where 	cd_material = cd_material_p;

/* obter regra do brasindice para cargas com dois tipos de precos (pfb e pmc)  */

select	substr(obter_regra_brasindice_preco(cd_convenio_p,
					'0',
					cd_grupo_material_w,
					cd_subgrupo_material_w,
					cd_classe_material_w,
					cd_material_p,
					dt_vigencia_p,
					cd_estabelecimento_p,
					ie_tipo_atendimento_p),1,3)
into STRICT	ie_tipo_preco_regra_w
;

dt_vigencia_w 	:= coalesce(dt_vigencia_p,clock_timestamp());
cd_convenio_w	:= cd_convenio_p;

select	max(a.tx_brasindice_pmc),
	max(a.tx_pfb_neg), 
	max(a.tx_pfb_pos), 
	max(a.tx_pmc_neg), 
	max(a.tx_pmc_pos), 
	max(a.tx_preco_fabrica),
	max(PKG_DATE_FORMATERS.TO_VARCHAR(a.dt_base_fixo,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)),
	coalesce(max(a.qt_dia_fixo),0)
into STRICT	tx_brasindice_pmc_w,
	tx_pfb_neg_w,
	tx_pfb_pos_w,       
	tx_pmc_neg_w,       
	tx_pmc_pos_w,       
	tx_preco_fabrica_w,
	dt_base_fixo_w2,
	qt_dia_fixo_w
from	convenio_brasindice a
where	a.cd_convenio = cd_convenio_p
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	coalesce(a.cd_categoria, cd_categoria_p) = cd_categoria_p
and	coalesce(a.cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
and 	((coalesce(a.ie_tipo_material::text, '') = '') or (a.ie_tipo_material = ie_tipo_material_w))
and	((coalesce(a.ie_tipo_atendimento::text, '') = '') or (a.ie_tipo_atendimento = coalesce(ie_tipo_atendimento_p,0)))
and 	a.dt_inicio_vigencia = (SELECT 	max(x.dt_inicio_vigencia)
				from	convenio_brasindice x
				where	x.cd_convenio = cd_convenio_p
				and	x.cd_estabelecimento = cd_estabelecimento_p 
				and	coalesce(x.cd_categoria, cd_categoria_p) = cd_categoria_p
				and	coalesce(x.cd_grupo_material, cd_grupo_material_w) = cd_grupo_material_w
				and 	((coalesce(cd_subgrupo_material::text, '') = '') or (cd_subgrupo_material = cd_subgrupo_material_w))
				and 	((coalesce(cd_classe_material::text, '') = '') or (cd_classe_material = cd_classe_material_w))
				and	((coalesce(nr_seq_estrutura::text, '') = '') or (consistir_se_mat_estrutura(nr_seq_estrutura,cd_material_p) = 'S'))
				and 	((coalesce(x.ie_tipo_material::text, '') = '') or (x.ie_tipo_material = ie_tipo_material_w))
				and	((coalesce(a.ie_tipo_atendimento::text, '') = '') or (a.ie_tipo_atendimento = coalesce(ie_tipo_atendimento_p,0)))
				and 	coalesce(x.dt_inicio_vigencia, dt_vigencia_w) <= dt_vigencia_w);
				
if (qt_dia_fixo_w <> 0) then

	dt_base_fixo_w2		:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_base_fixo_w2,dt_vigencia_w));
	while(dt_base_fixo_w2 + qt_dia_fixo_w < dt_vigencia_w) loop
		dt_base_fixo_w2	:= dt_base_fixo_w2 + qt_dia_fixo_w;
	end loop;
	dt_vigencia_w		:= dt_base_fixo_w2;	
	
end if;

if (ie_tipo_preco_regra_w = 'REG') then

	ie_tipo_preco_regra_ww:= '';

	open c05;
	loop
	fetch c05 into	
		ie_tipo_preco_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin
		
		open c01;
		loop
		fetch c01 into	
			cd_laboratorio_ww,
			cd_medicamento_ww,
			cd_apresentacao_ww,
			ie_tipo_preco_ww,
			ie_pis_cofins_ww,
			cd_tiss_ww,
			cd_ean_ww,
			dt_inicio_vigencia_ww,
			ie_versao_atual_ww,
			vl_preco_medicamento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (coalesce(vl_preco_medicamento_w,0) > 0) then
				ie_tipo_preco_regra_ww := ie_tipo_preco_ww;
				exit;
			end if;
			end;
		end loop;
		close c01;		
		
		if (ie_tipo_preco_regra_ww <> '') then
			ie_tipo_preco_regra_w := ie_tipo_preco_regra_ww;
			exit;
		else
			ie_tipo_preco_regra_w := null;
		end if;		
		
		end;
	end loop;
	close c05;

end if;

select	count(*)
into STRICT	qt_reg_w
from	material_brasindice a,
	brasindice_preco b
where	a.cd_material						= cd_material_p
and	a.cd_laboratorio = b.cd_laboratorio
and	a.cd_medicamento = b.cd_medicamento
and	a.cd_apresentacao = b.cd_apresentacao
and	b.ie_tipo_preco	= coalesce(ie_tipo_preco_regra_w,b.ie_tipo_preco)
and	(a.cd_convenio IS NOT NULL AND a.cd_convenio::text <> '')
and	a.cd_convenio 		= cd_convenio_w
and	coalesce(a.ie_situacao, 'A')					= 'A'
--and	nvl(b.dt_inicio_vigencia,dt_vigencia_w)				= dt_vigencia_w
and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p,0)) = coalesce(nr_seq_marca_p,0)
and 	b.dt_inicio_vigencia = (SELECT 	max(x.dt_inicio_vigencia)
				from 	brasindice_preco x, 
					material_brasindice y 
				where 	x.cd_laboratorio = y.cd_laboratorio
	                        and 	x.cd_medicamento = y.cd_medicamento 
	                        and 	x.cd_apresentacao = y.cd_apresentacao 
	                        and 	x.cd_laboratorio =a.cd_laboratorio
	                        and 	x.cd_medicamento = a.cd_medicamento
	                        and 	x.cd_apresentacao = a.cd_apresentacao
				and	x.ie_tipo_preco	= coalesce(ie_tipo_preco_regra_w,x.ie_tipo_preco)
				and 	coalesce(x.dt_inicio_vigencia,dt_vigencia_w)			<= dt_vigencia_w
				and	dt_vigencia_w between coalesce(y.dt_vigencia,dt_vigencia_w) and coalesce(y.dt_final_vigencia,dt_vigencia_w)
				and 	(y.cd_convenio IS NOT NULL AND y.cd_convenio::text <> '')
				and	y.cd_convenio 		= cd_convenio_w);

if (qt_reg_w > 0) then
	select	max(a.cd_laboratorio),
		max(a.cd_medicamento),
		max(a.cd_apresentacao),
		max(b.ie_tipo_preco),
		max(b.ie_pis_cofins),
		max(b.cd_tiss),
		max(b.cd_ean),
        max(PKG_DATE_FORMATERS.TO_VARCHAR(b.dt_inicio_vigencia,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.get_nm_usuario)),
		max(b.ie_versao_atual)
	into STRICT	cd_laboratorio_w,
		cd_medicamento_w,
		cd_apresentacao_w,
		ie_tipo_preco_w,
		ie_pis_cofins_w,
		cd_tiss_w,
		cd_ean_w,
		dt_inicio_vigencia_w,
		ie_versao_atual_w
	from	material_brasindice a,
		brasindice_preco b
	where	a.cd_material						= cd_material_p
	and	a.cd_laboratorio = b.cd_laboratorio
	and	a.cd_medicamento = b.cd_medicamento
	and	a.cd_apresentacao = b.cd_apresentacao
	and	b.ie_tipo_preco	= coalesce(ie_tipo_preco_regra_w,b.ie_tipo_preco)
	and	a.cd_convenio = cd_convenio_w
	and	coalesce(a.ie_situacao, 'A')					= 'A'
	--and	nvl(b.dt_inicio_vigencia,dt_vigencia_w)				= dt_vigencia_w
	and	coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p, 0))	= coalesce(cd_estabelecimento_p, 0)
	and	coalesce(a.nr_seq_marca, coalesce(nr_seq_marca_p,0)) = coalesce(nr_seq_marca_p,0)
	and 	b.dt_inicio_vigencia = (SELECT 	max(x.dt_inicio_vigencia)
					from 	brasindice_preco x, 
						material_brasindice y 
					where 	x.cd_laboratorio = y.cd_laboratorio
		                        and 	x.cd_medicamento = y.cd_medicamento 
		                        and 	x.cd_apresentacao = y.cd_apresentacao 
		                        and 	x.cd_laboratorio =a.cd_laboratorio
		                        and 	x.cd_medicamento = a.cd_medicamento
		                        and 	x.cd_apresentacao = a.cd_apresentacao
					and	x.ie_tipo_preco	= coalesce(ie_tipo_preco_regra_w,x.ie_tipo_preco)
					and 	coalesce(x.dt_inicio_vigencia,dt_vigencia_w)		<= dt_vigencia_w
					and	dt_vigencia_w between coalesce(y.dt_vigencia,dt_vigencia_w) and coalesce(y.dt_final_vigencia,dt_vigencia_w)
					and 	y.cd_convenio					= cd_convenio_w)
	order by b.vl_preco_medicamento asc,
		coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '1000 days');
else
	open c01;
	loop
		fetch c01 into	
			cd_laboratorio_w,
			cd_medicamento_w,
			cd_apresentacao_w,
			ie_tipo_preco_w,
			ie_pis_cofins_w,
			cd_tiss_w,
			cd_ean_w,
			dt_inicio_vigencia_w,
			ie_versao_atual_w,
			vl_preco_medicamento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		cd_laboratorio_w	:= cd_laboratorio_w;
		cd_apresentacao_w	:= cd_apresentacao_w;
	end loop;
	close c01;
end if;
					
if (ie_tipo_preco_w = 'PMC') then

	if (ie_pis_cofins_w = 'N') then --negativa
		tx_ajuste_w	:= tx_pmc_neg_w;
	
	elsif (ie_pis_cofins_w = 'S') then --positiva
		tx_ajuste_w	:= tx_pmc_pos_w;	
	
	elsif (ie_pis_cofins_w = 'T') then -- neutra
		tx_ajuste_w	:= tx_brasindice_pmc_w;	
	
	end if;
elsif (ie_tipo_preco_w = 'PFB') then

	if (ie_pis_cofins_w = 'N') then --negativa
		tx_ajuste_w	:= tx_pfb_neg_w;
	
	elsif (ie_pis_cofins_w = 'S') then --positiva
		tx_ajuste_w	:= tx_pfb_pos_w;	
	
	elsif (ie_pis_cofins_w = 'T') then -- neutra
		tx_ajuste_w	:= tx_preco_fabrica_w;	
	
	end if;

end if;

if (ie_opcao_p = 'CLAB') then
	return cd_laboratorio_w;
elsif (ie_opcao_p = 'DLAB') then
	if (cd_laboratorio_w IS NOT NULL AND cd_laboratorio_w::text <> '') then
		select coalesce(max(ds_laboratorio), wheb_mensagem_pck.get_texto(297045)||' :' || cd_laboratorio_w)
		into STRICT ds_laboratorio_w
		from brasindice_laboratorio
		where cd_laboratorio = cd_laboratorio_w;
	end if;
	return ds_laboratorio_w;
elsif (ie_opcao_p = 'CMED') then
	return cd_medicamento_w;
elsif (ie_opcao_p = 'DMED') then
	if (cd_medicamento_w IS NOT NULL AND cd_medicamento_w::text <> '') then
		select coalesce(max(ds_medicamento), wheb_mensagem_pck.get_texto(297048)||' :' || cd_medicamento_w)
		into STRICT ds_medicamento_w
		from brasindice_medicamento
		where cd_medicamento 		= cd_medicamento_w;
	end if;
	return ds_medicamento_w;
elsif (ie_opcao_p = 'CAPR') then
	return cd_apresentacao_w;
elsif (ie_opcao_p = 'DAPR') then
	if (cd_apresentacao_w IS NOT NULL AND cd_apresentacao_w::text <> '') then
		select coalesce(max(ds_apresentacao), wheb_mensagem_pck.get_texto(310333)||' :' || cd_apresentacao_w)
		into STRICT ds_apresentacao_w
		from brasindice_apresentacao
		where cd_apresentacao 		= cd_apresentacao_w;
	end if;
	return ds_apresentacao_w;
elsif (ie_opcao_p = 'PREC') then

	begin
	select ie_tipo_preco
	into STRICT	ie_tipo_preco_w
	from	brasindice_preco
	where	cd_laboratorio		= cd_laboratorio_w
	and	cd_medicamento		= cd_medicamento_w
	and	cd_apresentacao		= cd_apresentacao_w
	and	dt_inicio_vigencia	=
		(SELECT max(a.dt_inicio_vigencia)
		from	brasindice_preco a
		where	a.cd_laboratorio      = cd_laboratorio_w
		and	a.cd_medicamento      = cd_medicamento_w
		and	a.cd_apresentacao     = cd_apresentacao_w
		and	a.dt_inicio_vigencia <= dt_vigencia_w);
	exception
		when others then
		begin
		select ie_tipo_preco
		into STRICT	ie_tipo_preco_w
		from	brasindice_preco
		where	cd_laboratorio		= cd_laboratorio_w
		and	cd_medicamento		= cd_medicamento_w
		and	cd_apresentacao		= cd_apresentacao_w 
		and	ie_tipo_preco		= coalesce(ie_tipo_preco_regra_w,ie_tipo_preco)
		and	dt_inicio_vigencia	=
			(SELECT max(a.dt_inicio_vigencia)
			from	brasindice_preco a
			where	a.cd_laboratorio      = cd_laboratorio_w
			and	a.cd_medicamento      = cd_medicamento_w
			and	a.cd_apresentacao     = cd_apresentacao_w
			and	a.ie_tipo_preco	      = coalesce(ie_tipo_preco_regra_w,a.ie_tipo_preco)
			and	a.dt_inicio_vigencia <= dt_vigencia_w);
		exception
			when others then					
			ie_tipo_preco_w	:= '';
		end;
	end;
	
	return ie_tipo_preco_w;
elsif (ie_opcao_p = 'AJUS') then
	return tx_ajuste_w;
elsif (ie_opcao_p = 'TISS') then
	return cd_tiss_w;
elsif (ie_opcao_p = 'EAN') then
	return cd_ean_w;
elsif (ie_opcao_p = 'DTV') then
	return dt_inicio_vigencia_w;
elsif (ie_opcao_p = 'VER') then
	return ie_versao_atual_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_brasindice2 ( cd_estabelecimento_p bigint, cd_material_p bigint, dt_vigencia_p timestamp, cd_convenio_p bigint, ie_opcao_p text, cd_categoria_p text, ie_tipo_atendimento_p bigint, nr_seq_marca_p bigint) FROM PUBLIC;

