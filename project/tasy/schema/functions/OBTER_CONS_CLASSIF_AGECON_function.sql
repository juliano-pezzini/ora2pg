-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_cons_classif_agecon (cd_estabelecimento_p bigint, nr_seq_ageint_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, ie_classif_agenda_p text, DT_REFERENCIA_P timestamp DEFAULT NULL, DT_ENCAIXE_P timestamp DEFAULT NULL, CD_AGENDA_P bigint DEFAULT NULL) RETURNS varchar AS $body$
DECLARE


dt_referencia_w			timestamp;
cd_agenda_w				bigint;
nr_seq_item_w			bigint;
nr_sequencia_w			bigint;
nr_seq_agenda_w			ageint_marcacao_usuario.nr_seq_agenda%type;
ie_classif_agenda_w		varchar(255);
ie_classif_agenda_encaixe_w	varchar(255);
ds_item_w				varchar(255);
ie_consistencia_w		varchar(4000);
ie_consistencia_ww		varchar(4000);
ie_agenda_w				varchar(1);
nr_seq_proc_interno_w	bigint;
ie_consiste_encaixe_w	varchar(1);

C01 CURSOR FOR
	SELECT		hr_agenda,
			cd_agenda,
			nr_seq_ageint_item,
			nr_seq_agenda,
			nr_sequencia
	from	ageint_marcacao_usuario
	where		nm_usuario		= nm_usuario_p	
	and		nr_seq_ageint		= nr_seq_ageint_p
	and		coalesce(ie_gerado,'N')	= 'N'
	and		coalesce(ie_horario_auxiliar,'N') = 'N';


BEGIN
ie_consiste_encaixe_w := Obter_Param_Usuario(869, 409, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_encaixe_w);
if (coalesce(DT_ENCAIXE_P::text, '') = '') then
open C01;
loop
fetch C01 into	
	dt_referencia_w,
	cd_agenda_w,
	nr_seq_item_w,
	nr_seq_agenda_w,
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */				
	select	substr(Obter_Item_Grid_Ageint(b.nr_seq_proc_interno, b.cd_medico, b.cd_Especialidade,cd_estabelecimento_p, b.nr_seq_item_selec),1,255),
		coalesce(b.nr_seq_proc_interno,0)
	into STRICT	ds_item_w,
			nr_seq_proc_interno_w
	from	ageint_marcacao_usuario a,
			agenda_integrada_item b
	where	b.nr_sequencia	= a.nr_seq_ageint_item
	and		a.nr_sequencia	= nr_sequencia_w;
	
	if (nr_seq_proc_interno_w = 0) then

			select	max(ie_classif_agenda)
			into STRICT	ie_classif_agenda_w
			from	agenda_consulta
			where	nr_sequencia  = nr_seq_agenda_w;
			
		if (coalesce(ie_classif_agenda_w::text, '') = '') then
			select	max(ie_classif_agenda)
			into STRICT	ie_classif_agenda_encaixe_w
			from	ageint_encaixe_usuario
			where	NR_SEQ_AGEINT_ITEM  = nr_seq_item_w;
		end if;
		
		if (ie_consiste_encaixe_w = 'S') and (ie_classif_agenda_encaixe_w IS NOT NULL AND ie_classif_agenda_encaixe_w::text <> '') then
			SELECT * FROM consistir_classif_agecon(cd_estabelecimento_p, cd_pessoa_fisica_p, dt_referencia_w, cd_agenda_w, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, ie_classif_agenda_encaixe_w, coalesce(nr_seq_agenda_w, 0), ie_consistencia_w, ie_agenda_w) INTO STRICT ie_consistencia_w, ie_agenda_w;	
		elsif (ie_classif_agenda_w IS NOT NULL AND ie_classif_agenda_w::text <> '') then
			SELECT * FROM consistir_classif_agecon(cd_estabelecimento_p, cd_pessoa_fisica_p, dt_referencia_w, cd_agenda_w, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, ie_classif_agenda_w, nr_seq_agenda_w, ie_consistencia_w, ie_agenda_w) INTO STRICT ie_consistencia_w, ie_agenda_w;
		end if;					
		if (ie_agenda_w = 'N') then
			ie_consistencia_ww := 	substr(ie_consistencia_ww || ie_consistencia_w || chr(13) || chr(10) ||
								ds_item_w || chr(13) || chr(10),1,4000);
		end if;
	end if;
end loop;
close C01;

elsif (DT_ENCAIXE_P IS NOT NULL AND DT_ENCAIXE_P::text <> '') and (coalesce(dt_referencia_w::text, '') = '') then

	select pkg_date_utils.get_datetime(DT_REFERENCIA_P,DT_ENCAIXE_P)
	into STRICT dt_referencia_w
	;

	ie_classif_agenda_w := ie_classif_agenda_p;

	SELECT * FROM consistir_classif_agecon(cd_estabelecimento_p, cd_pessoa_fisica_p, dt_referencia_w, CD_AGENDA_P, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, ie_classif_agenda_w, 0, ie_consistencia_w, ie_agenda_w) INTO STRICT ie_consistencia_w, ie_agenda_w;	
							
	if (ie_agenda_w = 'N') then
		ie_consistencia_ww := 	substr(ie_consistencia_ww || ie_consistencia_w || chr(13) || chr(10),1,4000);
	end if;
	
end if;

return ie_consistencia_ww;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_cons_classif_agecon (cd_estabelecimento_p bigint, nr_seq_ageint_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, ie_classif_agenda_p text, DT_REFERENCIA_P timestamp DEFAULT NULL, DT_ENCAIXE_P timestamp DEFAULT NULL, CD_AGENDA_P bigint DEFAULT NULL) FROM PUBLIC;

