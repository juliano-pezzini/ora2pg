-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION lab_obter_data_recoleta (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE



ie_status_recoleta_w 	smallint;
dt_recoleta_w		varchar(50);
nm_usuario_recoleta_w	varchar(15);
resultado_w		varchar(50);
cd_estabelecimento_w	smallint;
nr_seq_etapa_w		bigint;


BEGIN



select 	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from 	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

ie_status_recoleta_w := obter_param_usuario(722, 12, obter_perfil_ativo, UPPER(nm_usuario_p), cd_estabelecimento_w, ie_status_recoleta_w);

if (coalesce(ie_status_recoleta_w::text, '') = '') then

	select	max(ie_status_recoleta)
	into STRICT	ie_status_recoleta_w
	from 	lab_parametro
	where   cd_estabelecimento = cd_estabelecimento_w;
end if;

begin

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_etapa_w
from 	prescr_proc_etapa
where 	nr_prescricao 		= nr_prescricao_p
and 	nr_seq_prescricao	= nr_seq_prescr_p
and 	ie_etapa		= ie_status_recoleta_w;
exception
	when others then
		nr_seq_etapa_w := 0;
end;

begin

select	max(PKG_DATE_FORMATERS.to_varchar(dt_atualizacao,'timestamp', obter_estabelecimento_ativo, nm_usuario_p)),
	max(nm_usuario)
into STRICT	dt_recoleta_w,
	nm_usuario_recoleta_w
from 	prescr_proc_etapa
where 	nr_prescricao 		= nr_prescricao_p
and 	nr_seq_prescricao	= nr_seq_prescr_p
and 	ie_etapa		= ie_status_recoleta_w
and		nr_sequencia = nr_seq_etapa_w;

exception
	when others then
		dt_recoleta_w := null;
end;

if ((coalesce(dt_recoleta_w::text, '') = '') and (ie_opcao_p <> 3)) then

	select 	PKG_DATE_FORMATERS.to_varchar(b.dt_coleta,'timestamp', obter_estabelecimento_ativo, nm_usuario_p)
	into STRICT	dt_recoleta_w
	from 	prescr_procedimento b
	where	b.nr_prescricao	= nr_prescricao_p
	and	b.nr_sequencia	= nr_seq_prescr_p;

end if;

if (ie_opcao_p = 0) then

	resultado_w := dt_recoleta_w;

elsif	(ie_opcao_p = 1 AND nr_seq_etapa_w > 0) then

	begin

	select	min(PKG_DATE_FORMATERS.to_varchar(dt_atualizacao, 'timestamp', obter_estabelecimento_ativo, nm_usuario_p))
	into STRICT	dt_recoleta_w
	from 	prescr_proc_etapa
	where 	nr_prescricao 		= nr_prescricao_p
	and 	nr_seq_prescricao	= nr_seq_prescr_p
	and 	nr_sequencia		> nr_seq_etapa_w;
	exception
		when others then
			dt_recoleta_w := null;
	end;

	resultado_w := dt_recoleta_w;

elsif (ie_opcao_p = 2) then

	resultado_w := nm_usuario_recoleta_w;

elsif (ie_opcao_p = 3) then

	resultado_w := dt_recoleta_w;

elsif (ie_opcao_p = 4) then

	select	max(a.nm_usuario)
	into STRICT	nm_usuario_recoleta_w
	from (SELECT		sa.nr_sequencia, sa.nm_usuario, sa.ie_etapa, sa.dt_atualizacao
		from    	prescr_proc_etapa sa,
				prescr_procedimento sb
		where		sa.nr_prescricao = sb.nr_prescricao
		and		sa.nr_seq_prescricao = sb.nr_sequencia
		and		sb.nr_prescricao = nr_prescricao_p
		and		sb.nr_sequencia = nr_seq_prescr_p
		and		sa.ie_etapa = 20) a,
		prescr_proc_etapa b,
		prescr_procedimento c
	where	a.nr_sequencia > b.nr_sequencia
	and		b.ie_etapa = ie_status_recoleta_w
	and		b.nr_prescricao = c.nr_prescricao
	and		b.nr_seq_prescricao = c.nr_sequencia
	and		c.nr_prescricao = nr_prescricao_p
	and		c.nr_sequencia = nr_seq_prescr_p;

	resultado_w := nm_usuario_recoleta_w;

end if;

return resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION lab_obter_data_recoleta (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_opcao_p bigint) FROM PUBLIC;

