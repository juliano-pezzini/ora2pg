-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_estagio_solic_compra ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint) RETURNS varchar AS $body$
DECLARE


/*	Dominio 1964:
	L - Pendente de liberacao (Nao liberada)	
	PA - Processo de aprovacao (Nao aprovada)
	PC - Pendente de compras (Aprovada)
	OL - Processo de compra (Ordem liberada)
	NF - Material recebido (Nota fiscal calculada)
	SR - Solicitacao reprovada
	NFNC - Nota fiscal nao calculada
        B - Baixado
*/
ie_urgente_w		varchar(1);
ie_liberada_w		varchar(1);
ie_aprovada_w		varchar(1);
ie_oc_liberada_w	varchar(1);
ie_nota_fiscal_w	varchar(1) := 'N';
ie_nf_nao_calc_w	varchar(1) := 'N';
ds_retorno_w		varchar(4);
nr_ordem_compra_w	bigint;
nr_item_oci_w		integer;
qt_existe_w		bigint;
dt_liberacao_w		timestamp;
cd_material_w		integer;
ie_em_cotacao_w		varchar(1) := 'N';
cd_estabelecimento_w	bigint;
ie_data_legenda_solic_compra_w	varchar(15);
ie_reprovada_w		varchar(1) := 'N';
ie_item_cancelado_w	varchar(1) := 'N';
nr_ordem_compra_ww	ordem_compra.nr_ordem_compra%type;
nr_item_oci_ww		ordem_compra_item.nr_item_oci%type;
dt_baixa_w          	solic_compra.dt_baixa%type;
cd_motivo_baixa_w   	solic_compra.cd_motivo_baixa%type;
ds_motivo_cancel_w  	solic_compra.ds_justificativa%type;


BEGIN

select	a.cd_estabelecimento,
	b.cd_material
into STRICT	cd_estabelecimento_w,
	cd_material_w
from	solic_compra a,
	solic_compra_item b
where	a.nr_solic_compra = b.nr_solic_compra
and	b.nr_solic_compra = nr_solic_compra_p
and	b.nr_item_solic_compra = nr_item_solic_compra_p;

select	coalesce(ie_data_legenda_solic_compra,'L')
into STRICT	ie_data_legenda_solic_compra_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

begin
    select  CASE WHEN coalesce(to_char(a.dt_liberacao, 'dd/mm/yyyy')::text, '') = '' THEN  'N'  ELSE 'S' END  ie_liberada,
            CASE WHEN coalesce(to_char(b.dt_autorizacao, 'dd/mm/yyyy')::text, '') = '' THEN  'N'  ELSE 'S' END  ie_aprovada,
            CASE WHEN coalesce(to_char(b.dt_reprovacao, 'dd/mm/yyyy')::text, '') = '' THEN  'N'  ELSE 'S' END  ie_reprovada,
            CASE WHEN ie_data_legenda_solic_compra_w='L' THEN  CASE WHEN obter_data_ordem_compra(obter_ordem_solic_compra(a.nr_solic_compra, b.nr_item_solic_compra), 'L') IS NULL THEN  'N'  ELSE 'S' END  WHEN ie_data_legenda_solic_compra_w='O' THEN  CASE WHEN obter_data_ordem_compra(obter_ordem_solic_compra(a.nr_solic_compra, b.nr_item_solic_compra), 'O') IS NULL THEN  'N'  ELSE 'S' END  END  ie_oc_liberada,
            a.dt_baixa,
            a.cd_motivo_baixa,
            substr(obter_motivo_cancel_oc(coalesce(b.nr_seq_motivo_cancel, a.nr_seq_motivo_cancel)), 1, 255) ds_motivo_cancel
    into STRICT    ie_liberada_w,
            ie_aprovada_w,
            ie_reprovada_w,
            ie_oc_liberada_w,
            dt_baixa_w,
            cd_motivo_baixa_w,
            ds_motivo_cancel_w
    from    solic_compra a,
            solic_compra_item b
    where   a.nr_solic_compra = b.nr_solic_compra
    and     coalesce(a.nr_seq_motivo_cancel::text, '') = ''
    and     a.nr_solic_compra = nr_solic_compra_p
    and     b.nr_item_solic_compra = nr_item_solic_compra_p;
    exception
        when no_data_found then
           ie_liberada_w := null;
           ie_aprovada_w := null;
           ie_reprovada_w := null;
           ie_oc_liberada_w := null;
           dt_baixa_w := null;
           cd_motivo_baixa_w := null;
           ds_motivo_cancel_w := null;
        when too_many_rows then
            raise;
end;

select	count(*)
into STRICT	qt_existe_w
from	cot_compra_item
where	nr_solic_compra = nr_solic_compra_p;
	
if (qt_existe_w = 0) then
	select	count(*)
	into STRICT	qt_existe_w
	from	cot_compra_solic_agrup
	where	nr_solic_compra = nr_solic_compra_p;
end if;
	
if (qt_existe_w > 0) then
	ie_em_cotacao_w := 'S';
end if;

select	count(*)
into STRICT	qt_existe_w
from	cot_compra_solic_agrup
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_p;

if (ie_oc_liberada_w = 'N') and (qt_existe_w > 0) then
	
	select	coalesce(max(nr_ordem_compra),0)
	into STRICT	nr_ordem_compra_w
	from	cot_compra_solic_agrup
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_p;
	
	if (nr_ordem_compra_w > 0) then
		select	dt_liberacao
		into STRICT	dt_liberacao_w
		from	ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_w;
		
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
			ie_oc_liberada_w := 'S';
		end if;
	end if;
end if;

select	coalesce(max(b.nr_ordem_compra), 0)
into STRICT	nr_ordem_compra_w
from	ordem_compra_item_entrega b,
	ordem_compra_item a
where	b.nr_ordem_compra = a.nr_ordem_compra
and	b.nr_item_oci = a.nr_item_oci
and	a.nr_solic_compra = nr_solic_compra_p
and	a.nr_item_solic_compra = nr_item_solic_compra_p;

select	coalesce(max(b.nr_item_oci), 0)
into STRICT	nr_item_oci_w
from	ordem_compra_item_entrega b,
	ordem_compra_item a
where	b.nr_ordem_compra = a.nr_ordem_compra
and	b.nr_ordem_compra = nr_ordem_compra_w
and	b.nr_item_oci = a.nr_item_oci
and	a.nr_solic_compra = nr_solic_compra_p
and	a.nr_item_solic_compra = nr_item_solic_compra_p;

if (qt_existe_w > 0) then
	
	select	coalesce(max(nr_ordem_compra),0)
	into STRICT	nr_ordem_compra_w
	from	cot_compra_solic_agrup
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_p;
	
	select	coalesce(max(nr_item_oci),0)
	into STRICT	nr_item_oci_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_w
	and	cd_material = cd_material_w;
	
	if (nr_item_oci_w = 0) then
		
		select	coalesce(max(nr_item_oci),0)
		into STRICT	nr_item_oci_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_w
		and	cd_material in (SELECT	cd_material
					from	material
					where	cd_material_estoque = cd_material_w);
	end if;
	
	if (nr_item_oci_w = 0) then
		
		select	coalesce(max(nr_item_oci),0)
		into STRICT	nr_item_oci_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_w
		and	cd_material in (SELECT	cd_material
					from	material
					where	cd_material_generico = cd_material_w);
	end if;

	/*Verifica se a OC gerada a partir de uma cotacao com agrupamento esta com o item cancelado - OS 2247951*/

	select	substr(obter_se_item_oc_cancelado(nr_ordem_compra, nr_item_oci),1,1)
	into STRICT	ie_item_cancelado_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_w
	and	nr_item_oci = nr_item_oci_w;
	
end if;

if (ie_item_cancelado_w = 'S') then

	select	coalesce(max(b.nr_ordem_compra), 0)
	into STRICT	nr_ordem_compra_ww
	from	ordem_compra_item_entrega b,
		ordem_compra_item a
	where	b.nr_ordem_compra = a.nr_ordem_compra
	and	b.nr_ordem_compra <> nr_ordem_compra_w
	and	b.nr_item_oci = a.nr_item_oci
	and	a.nr_solic_compra = nr_solic_compra_p
	and	a.nr_item_solic_compra = nr_item_solic_compra_p;

	select	coalesce(max(b.nr_item_oci), 0)
	into STRICT	nr_item_oci_ww
	from	ordem_compra_item_entrega b,
		ordem_compra_item a
	where	b.nr_ordem_compra = a.nr_ordem_compra
	and	b.nr_ordem_compra = nr_ordem_compra_ww
	and	b.nr_item_oci = a.nr_item_oci
	and	a.nr_solic_compra = nr_solic_compra_p
	and	a.nr_item_solic_compra = nr_item_solic_compra_p;
	
	if (nr_ordem_compra_ww > 0) and (nr_item_oci_ww > 0) then
		nr_ordem_compra_w := nr_ordem_compra_ww;
		nr_item_oci_w 	  := nr_item_oci_ww;
	end if;

end if;

if (nr_ordem_compra_w > 0) and (nr_item_oci_w > 0) then	

	select	substr(obter_se_item_oc_cancelado(nr_ordem_compra, nr_item_oci),1,1)
	into STRICT	ie_item_cancelado_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_w
	and	nr_item_oci = nr_item_oci_w;

	if (ie_item_cancelado_w = 'S') then
		ie_oc_liberada_w := 'N';
	end if;

	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal a,
		nota_fiscal_item b
	where	a.nr_sequencia    = b.nr_sequencia
	and	b.nr_ordem_compra = nr_ordem_compra_w
	and	b.nr_item_oci     = nr_item_oci_w
	and	a.ie_situacao = '1';
	
	if (qt_existe_w > 0) then
		ie_nota_fiscal_w := 'S';
	end if;
	
	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal a,
		nota_fiscal_item b
	where	a.nr_sequencia    = b.nr_sequencia
	and	b.nr_ordem_compra = nr_ordem_compra_w
	and	b.nr_item_oci     = nr_item_oci_w
	and	a.ie_situacao = '1'
	and	(a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '');
	
	if (qt_existe_w = 0) then
		ie_nf_nao_calc_w := 'S';
	else
		ie_nf_nao_calc_w := 'N';
	end if;
end if;


if (ie_nota_fiscal_w = 'S') and (coalesce(cd_motivo_baixa_w::text, '') = '') then
	if (ie_nf_nao_calc_w = 'S') then
		ds_retorno_w := 'NFNC';
	else
		ds_retorno_w := 'NF';
	end if;
elsif (ie_oc_liberada_w = 'S') and (coalesce(cd_motivo_baixa_w::text, '') = '')  then
	ds_retorno_w := 'OL';
elsif (ie_em_cotacao_w = 'S') and (coalesce(dt_baixa_w::text, '') = '') and (coalesce(nr_ordem_compra_w, 0) = 0) then
	ds_retorno_w := 'EC';
elsif (ie_aprovada_w = 'S') and (coalesce(dt_baixa_w::text, '') = '') then
	ds_retorno_w := 'PC';
elsif (ie_reprovada_w = 'S') then
	ds_retorno_w := 'SR';
elsif (ie_liberada_w = 'S') and (coalesce(dt_baixa_w::text, '') = '')  then
	ds_retorno_w := 'PA';
elsif (ie_liberada_w = 'N') and (coalesce(dt_baixa_w::text, '') = '')  then
	ds_retorno_w := 'PL';
elsif (dt_baixa_w IS NOT NULL AND dt_baixa_w::text <> '') and (cd_motivo_baixa_w <> 2) and (cd_motivo_baixa_w <> 3) and (cd_motivo_baixa_w <> 5) and (coalesce(ds_motivo_cancel_w::text, '') = '') then
    	ds_retorno_w := 'B';
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_estagio_solic_compra ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint) FROM PUBLIC;

