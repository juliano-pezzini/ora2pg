-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION nut_obter_se_setor_comp (cd_setor_atendimento_p bigint, nr_atendimento_p bigint, nr_seq_servico_p bigint, dt_referencia_p timestamp) RETURNS varchar AS $body$
DECLARE


qt_valida_w			bigint;
ds_retorno_w			varchar(1);
cd_dieta_w			bigint;
nr_seq_grupo_producao_w		bigint;
nr_prescr_oral_w		bigint;
ie_conduta_dietot_w		varchar(1);


BEGIN

ds_retorno_w := 'N';
ie_conduta_dietot_w	:= obter_valor_param_usuario(1003,85,obter_perfil_ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then
	select	count(*)
	into STRICT	qt_valida_w
	from	nut_local_refeicao k,
		nut_local_refeicao_setor j
	where	k.nr_sequencia 		= j.nr_seq_local
	and	j.cd_setor_atendimento 	= cd_setor_atendimento_p
	and	k.ie_local_paciente 	= 'C'
	and	coalesce(j.cd_dieta::text, '') = ''
	and	coalesce(j.nr_seq_grupo_producao::text, '') = '';

	if (qt_valida_w > 0) then
		ds_retorno_w	:= 'S';
	end if;
end if;


if (ds_retorno_w = 'N') then

	if (ie_conduta_dietot_w = 'S') then

		if (nr_seq_servico_p IS NOT NULL AND nr_seq_servico_p::text <> '') then --verificar se tem regra para a dieta da conduta dietoterápica
			select	count(*)
			into STRICT	qt_valida_w
			from	nut_atend_serv_dieta b,
				nut_atend_serv_dia_dieta c,
				nut_local_refeicao k,
				nut_local_refeicao_setor j
			where	k.nr_sequencia 		= j.nr_seq_local
			and	c.nr_sequencia 		= b.nr_seq_dieta
			and	b.nr_seq_servico 	= nr_seq_servico_p
			and	coalesce(c.dt_suspensao::text, '') = ''
			and (c.cd_dieta  = j.cd_dieta or nut_obter_se_grupo_producao(j.nr_seq_grupo_producao,nr_seq_servico_p,'C') = 'S')
			and	((coalesce(j.cd_setor_atendimento::text, '') = '') or ( j.cd_setor_atendimento = cd_setor_atendimento_p))
			and	k.ie_local_paciente 	= 'C';

			if (qt_valida_w > 0) then
				ds_retorno_w	:= 'S';
			end if;
		end if;

	else

		select	max(b.nr_prescr_oral)
		into STRICT	nr_prescr_oral_w
		from   	nut_atend_serv_dia p,
			nut_atend_serv_dia_rep b
		where   b.nr_seq_serv_dia   		= p.nr_sequencia
		and	p.nr_seq_servico		= nr_seq_servico_p
		and	p.nr_atendimento    		= nr_atendimento_p
		and     p.cd_setor_atendimento 		= cd_setor_atendimento_p
		and     trunc(p.dt_servico)		= trunc(dt_referencia_p);

		if (nr_prescr_oral_w IS NOT NULL AND nr_prescr_oral_w::text <> '') then --verificar se tem regra para a dieta da prescrição
			select	count(*)
			into STRICT	qt_valida_w
			from	prescr_dieta p,
				nut_local_refeicao k,
				nut_local_refeicao_setor j
			where	k.nr_sequencia 		= j.nr_seq_local
			and	p.nr_prescricao		= nr_prescr_oral_w
			and	j.cd_dieta		= p.cd_dieta
			and	((coalesce(j.cd_setor_atendimento::text, '') = '') or ( j.cd_setor_atendimento = cd_setor_atendimento_p))
			and	k.ie_local_paciente 	= 'C';

			if (qt_valida_w > 0) then
				ds_retorno_w	:= 'S';
			end if;

			if (ds_retorno_w = 'N') then --verificar se tem regra para a dieta da prescrição por grupo
				select	count(*)
				into STRICT	qt_valida_w
				from	prescr_dieta p,
					nut_local_refeicao k,
					nut_local_refeicao_setor j,
					nut_grupo_producao a,
					nut_grupo_producao_dieta b
				where	k.nr_sequencia 		= j.nr_seq_local
				and	a.nr_sequencia		= b.nr_seq_grupo_producao
				and	p.nr_prescricao		= nr_prescr_oral_w
				and	p.cd_dieta		= b.cd_dieta
				and	j.nr_seq_grupo_producao = b.nr_seq_grupo_producao
				and	((coalesce(j.cd_setor_atendimento::text, '') = '') or ( j.cd_setor_atendimento = cd_setor_atendimento_p))
				and	k.ie_local_paciente 	= 'C';

				if (qt_valida_w > 0) then
					ds_retorno_w	:= 'S';
				end if;
			end if;
		end if;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION nut_obter_se_setor_comp (cd_setor_atendimento_p bigint, nr_atendimento_p bigint, nr_seq_servico_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

