-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_ceratometria ( nr_sequencia_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/*
ie_opcao_p

Médias
MD - Média do olho direito (Curva 1 + Curva 2) / 2
ME - Média do olho esquerdo (Curva 1 + Curva 2) / 2

Cilindros
CND - Cilindro negativo do olho direito -(Curva 1 - Curva 2) - Para prescrição de óculos/lentes
CNE - Cilindro negativo do olho esquerdo -(Curva 1 - Curva 2) - Para prescrição de óculos/lentes
CPD - Cilindro positivo do olho direito +(Curva 1 - Curva 2) - Para incisão cirúrgica
CPE - Cilindro positivo do olho esquerdo +(Curva 1 - Curva 2) - Para incisão cirúrgica

Eixos
END - Eixo da menor curvatura - Eixo Negativo
ENE - Eixo da menor curvatura - Eixo Negativo
EPD - Eixo da maior curvatura - Eixo positivo
EPE - Eixo da maior curvatura - Eixo positivo

Cálculo em milimetros
Fórmula de cálculo
Milimetros = 337/Dioptria
MC1D - Milimetros da Curva 1 do olho direito
MC2D - Milimetros da Curva 2 do olho direito
MC1E - Milimetros da Curva 1 do olho esquerdo
MC2E - Milimetros da Curva 2 do olho esquerdo


Documentação:
Cilindro Negativo: Essa regra aplica-se para confecção de óculos ou lentes de contatos.
Cilindro Positivo: Para casos cirúrgicos (Ex.: catarata), onde a incisão do médico dá-se no eixo da curvatura maior.
Assim, com a cicatrização natural do olho, a tendência é a córnea aumentar de tamanho, diminuindo então a curvatura,  e assim, diminuindo a diferença entre esta curva K e a outra.
Caso a diferença seja minimizada, pode deixar de existir a necessidade de lente/óculos após a cirurgia.
*/
vl_od_me_cu_ceratometria_w	double precision;
vl_od_ma_cu_ceratometria_w	double precision;
vl_od_eixo_ceratometria_w	double precision;
vl_od_eixo_ceratometria_k2_w	double precision;
vl_oe_me_cu_ceratometria_w	double precision;
vl_oe_ma_cu_ceratometria_w	double precision;
vl_oe_eixo_ceratometria_w	double precision;
vl_oe_eixo_ceratometria_k2_w	double precision;
ds_retorno_w			double precision;


BEGIN

SELECT	MAX(vl_od_me_cu_ceratometria),
	MAX(vl_od_ma_cu_ceratometria),
	MAX(vl_od_eixo_ceratometria),
	MAX(vl_od_eixo_ceratometria_k2),
	MAX(vl_oe_me_cu_ceratometria),
	MAX(vl_oe_ma_cu_ceratometria),
	MAX(vl_oe_eixo_ceratometria),
	MAX(vl_oe_eixo_ceratometria_k2)
INTO STRICT	vl_od_me_cu_ceratometria_w,
	vl_od_ma_cu_ceratometria_w,
	vl_od_eixo_ceratometria_w,
	vl_od_eixo_ceratometria_k2_w,
	vl_oe_me_cu_ceratometria_w,
	vl_oe_ma_cu_ceratometria_w,
	vl_oe_eixo_ceratometria_w,
	vl_oe_eixo_ceratometria_k2_w
FROM   	oft_cerastocopia
WHERE  	nr_sequencia = nr_sequencia_p;

IF (ie_opcao_p = 'MD') THEN
	ds_retorno_w := (vl_od_me_cu_ceratometria_w + vl_od_ma_cu_ceratometria_w) / 2;
ELSIF (ie_opcao_p = 'ME') THEN
	ds_retorno_w := (vl_oe_me_cu_ceratometria_w + vl_oe_ma_cu_ceratometria_w) / 2;
ELSIF (ie_opcao_p = 'CND') THEN
	ds_retorno_w := ABS(vl_od_me_cu_ceratometria_w - vl_od_ma_cu_ceratometria_w);
ELSIF (ie_opcao_p = 'CNE') THEN
	ds_retorno_w := ABS(vl_oe_me_cu_ceratometria_w - vl_oe_ma_cu_ceratometria_w);
ELSIF (ie_opcao_p = 'CPD') THEN
	ds_retorno_w := ABS(vl_od_me_cu_ceratometria_w - vl_od_ma_cu_ceratometria_w);
ELSIF (ie_opcao_p = 'CPE') THEN
	ds_retorno_w := ABS(vl_oe_me_cu_ceratometria_w - vl_oe_ma_cu_ceratometria_w);
ELSIF (ie_opcao_p = 'END') THEN
	IF (ABS(vl_od_me_cu_ceratometria_w - vl_od_ma_cu_ceratometria_w) = 0) THEN
		ds_retorno_w := 0;
	ELSIF (vl_od_me_cu_ceratometria_w < vl_od_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_od_eixo_ceratometria_w;
	ELSIF (vl_od_me_cu_ceratometria_w > vl_od_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_od_eixo_ceratometria_k2_w;
	ELSIF (vl_od_eixo_ceratometria_w < vl_od_eixo_ceratometria_k2_w) THEN
		ds_retorno_w := vl_od_eixo_ceratometria_w;
	ELSE
		ds_retorno_w := vl_od_eixo_ceratometria_k2_w;
	END IF;
ELSIF (ie_opcao_p = 'ENE') THEN
	IF (ABS(vl_oe_me_cu_ceratometria_w - vl_oe_ma_cu_ceratometria_w) = 0) THEN
		ds_retorno_w := 0;
	ELSIF (vl_oe_me_cu_ceratometria_w < vl_oe_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_oe_eixo_ceratometria_w;
	ELSIF (vl_oe_me_cu_ceratometria_w > vl_oe_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_oe_eixo_ceratometria_k2_w;
	ELSIF (vl_oe_eixo_ceratometria_w < vl_oe_eixo_ceratometria_k2_w) THEN
		ds_retorno_w := vl_oe_eixo_ceratometria_w;
	ELSE
		ds_retorno_w := vl_oe_eixo_ceratometria_k2_w;
	END IF;
ELSIF (ie_opcao_p = 'EPD') THEN
	IF (ABS(vl_od_me_cu_ceratometria_w - vl_od_ma_cu_ceratometria_w) = 0) THEN
		ds_retorno_w := 0;
	ELSIF (vl_od_me_cu_ceratometria_w > vl_od_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_od_eixo_ceratometria_w;
	ELSIF (vl_od_me_cu_ceratometria_w < vl_od_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_od_eixo_ceratometria_k2_w;
	ELSIF (vl_od_eixo_ceratometria_w > vl_od_eixo_ceratometria_k2_w) THEN
		ds_retorno_w := vl_od_eixo_ceratometria_w;
	ELSE
		ds_retorno_w := vl_od_eixo_ceratometria_k2_w;
	END IF;
ELSIF (ie_opcao_p = 'EPE') THEN
	IF (ABS(vl_oe_me_cu_ceratometria_w - vl_oe_ma_cu_ceratometria_w) = 0) THEN
		ds_retorno_w := 0;
	ELSIF (vl_oe_me_cu_ceratometria_w > vl_oe_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_oe_eixo_ceratometria_w;
	ELSIF (vl_oe_me_cu_ceratometria_w < vl_oe_ma_cu_ceratometria_w) THEN
		ds_retorno_w := vl_oe_eixo_ceratometria_k2_w;
	ELSIF (vl_oe_eixo_ceratometria_w > vl_oe_eixo_ceratometria_k2_w) THEN
		ds_retorno_w := vl_oe_eixo_ceratometria_w;
	ELSE
		ds_retorno_w := vl_oe_eixo_ceratometria_k2_w;
	END IF;
ELSIF (ie_opcao_p = 'MC1D') AND (coalesce(vl_od_me_cu_ceratometria_w,0) > 0) THEN
	ds_retorno_w := 337/vl_od_me_cu_ceratometria_w;
ELSIF (ie_opcao_p = 'MC2D') AND (coalesce(vl_od_ma_cu_ceratometria_w,0) > 0) THEN
	ds_retorno_w := 337/vl_od_ma_cu_ceratometria_w;
ELSIF (ie_opcao_p = 'MC1E') AND (coalesce(vl_oe_me_cu_ceratometria_w,0) > 0) THEN
	ds_retorno_w := 337/vl_oe_me_cu_ceratometria_w;
ELSIF (ie_opcao_p = 'MC2E') AND (coalesce(vl_oe_ma_cu_ceratometria_w,0) > 0) THEN
	ds_retorno_w := 337/vl_oe_ma_cu_ceratometria_w;
elsif (ie_opcao_p = 'MMILD') AND (coalesce(vl_od_me_cu_ceratometria_w,0) > 0)
	AND (coalesce(vl_od_ma_cu_ceratometria_w,0) > 0) then
	ds_retorno_w := (((337/vl_od_me_cu_ceratometria_w) + (337/vl_od_ma_cu_ceratometria_w)) / 2);
elsif (ie_opcao_p = 'MMILE')
	AND (coalesce(vl_oe_me_cu_ceratometria_w,0) > 0)
	AND (coalesce(vl_oe_ma_cu_ceratometria_w,0) > 0) then
	ds_retorno_w := (((337/vl_oe_me_cu_ceratometria_w) + (337/vl_oe_ma_cu_ceratometria_w)) / 2);
END IF;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_ceratometria ( nr_sequencia_p bigint, ie_opcao_p text) FROM PUBLIC;

