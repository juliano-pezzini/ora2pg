-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_pf_nota_cpf (nr_interno_conta_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/*Function utilizada na geracao da nota (Gerar titulo receber), para identificar se a pessoa que a nota seria gerada, possui CPF ou nao.*/

ds_retorno_w			varchar(255);
ie_gerar_nf_pagador_w		varchar(15);
ie_gerar_responsavel_w		varchar(15);
qt_idade_pac_w			bigint;
cd_pessoa_regra_w		varchar(255);
ie_tipo_pessoa_w		varchar(2);
ds_mensagem_w			varchar(4000);
ie_acao_mensagem_w		varchar(255);
nr_seq_regra_w			bigint;
cd_convenio_w			conta_paciente.cd_convenio_parametro%type;
cd_cgc_pagador_w		atendimento_pagador.cd_cgc%type;
cd_pessoa_fisica_pagador_w	atendimento_pagador.cd_pessoa_fisica%type;

cd_cgc_nota_w			pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_nota_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_atend_w	pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_responsavel_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_cpf_w			pessoa_fisica.nr_cpf%type;
nm_pessoa_nota_w		pessoa_fisica.nm_pessoa_fisica%type;
/* OPCOES
C	-	 Consistencia para pagador sem cpf
N	-	Nome do pagador sem cpf
R	-	Consistencia da regra
*/
BEGIN
/*32 - Gerar a nota fiscal/titulo em nome do responsavel quando informado no atendimento
	E               Somente se o paciente for menor de idade (Perguntar se maior de idade)
	F               Somente se o paciente for menor de idade (Se maior de idade gerar titulo em nome do paciente)
	J               Somente se o pagador informado no atendimento for pessoa juridica
	N               Nunca
	P               Perguntar se deve gerar no nome do responsavel (somente se menor de idade)
	S               Sempre */
ie_gerar_responsavel_w := Obter_Param_Usuario(-80, 32, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_responsavel_w);
/*37 - Gerar a nota fiscal em nome do pagador quando informado no atendimento
	E               Somente se o paciente for menor de idade (Perguntar se maior de idade)
	F               Somente se o paciente for menor de idade (Se maior de idade gerar titulo em nome do paciente)
	J               Somente se o pagador informado no atendimento for pessoa juridica
	N               Nunca
	P               Perguntar se deve gerar no nome do responsavel (somente se menor de idade)
	S               Sempre */
ie_gerar_nf_pagador_w := Obter_Param_Usuario(-80, 37, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_nf_pagador_w);
if (ie_opcao_p = 'C') then
	ds_retorno_w	:= 'S';
end if;


select	max(c.cd_cgc),
	max(c.cd_pessoa_fisica),
	max(substr(obter_idade(d.dt_nascimento, clock_timestamp(), 'A'),1,10)),
	max(b.cd_pessoa_fisica),
	max(b.cd_pessoa_responsavel),
	max(a.cd_convenio_parametro)
into STRICT	cd_cgc_pagador_w,
	cd_pessoa_fisica_pagador_w,
	qt_idade_pac_w,
	cd_pessoa_fisica_atend_w,
	cd_pessoa_responsavel_w,
	cd_convenio_w
FROM pessoa_fisica d, conta_paciente a, atendimento_paciente b
LEFT OUTER JOIN atendimento_pagador c ON (b.nr_atendimento = c.nr_atendimento)
WHERE a.nr_interno_conta = nr_interno_conta_p and a.nr_atendimento = b.nr_atendimento  and b.cd_pessoa_fisica = d.cd_pessoa_fisica;

if 	((cd_pessoa_fisica_pagador_w IS NOT NULL AND cd_pessoa_fisica_pagador_w::text <> '') or (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '')) and (ie_gerar_nf_pagador_w <> 'N') then

	if (ie_gerar_nf_pagador_w = 'S') then

		cd_pessoa_fisica_nota_w	:= cd_pessoa_fisica_pagador_w;
		cd_cgc_nota_w		:= cd_cgc_pagador_w;

	elsif (ie_gerar_nf_pagador_w = 'E') and (qt_idade_pac_w < 18) then

		cd_pessoa_fisica_nota_w	:= cd_pessoa_fisica_pagador_w;
		cd_cgc_nota_w		:= cd_cgc_pagador_w;

	elsif (ie_gerar_nf_pagador_w = 'J') then
		if (cd_cgc_pagador_w <> '') then
			cd_pessoa_fisica_nota_w		:= cd_pessoa_fisica_pagador_w;
			cd_cgc_nota_w			:= cd_cgc_pagador_w;
		else
                        cd_pessoa_fisica_nota_w       	:= cd_pessoa_fisica_atend_w;
                        cd_cgc_nota_w			:= null;

		end if;
	end if;

elsif (ie_gerar_responsavel_w <> 'N') then
	if (ie_gerar_responsavel_w = 'S') then
		cd_pessoa_fisica_nota_w		:= coalesce(cd_pessoa_responsavel_w,cd_pessoa_fisica_atend_w);
	elsif	((ie_gerar_responsavel_w = 'E') or (ie_gerar_responsavel_w = 'F')) and (qt_idade_pac_w < 18) then
		cd_pessoa_fisica_nota_w		:= coalesce(cd_pessoa_responsavel_w,cd_pessoa_fisica_atend_w);
	else
		cd_pessoa_fisica_nota_w		:= cd_pessoa_fisica_atend_w;
	end if;
elsif (coalesce(cd_pessoa_fisica_nota_w::text, '') = '') then
	cd_pessoa_fisica_nota_w		:= cd_pessoa_fisica_atend_w;
end if;

SELECT * FROM obter_regra_pessoa_tit_nf('N', nr_interno_conta_p, 0, 0, ie_tipo_pessoa_w, cd_pessoa_regra_w) INTO STRICT ie_tipo_pessoa_w, cd_pessoa_regra_w;
if (ie_tipo_pessoa_w = 'PF') then
	cd_pessoa_fisica_nota_w	:= cd_pessoa_regra_w;
end if;

if (cd_pessoa_fisica_nota_w IS NOT NULL AND cd_pessoa_fisica_nota_w::text <> '') then

	select	max(nr_cpf),
		max(nm_pessoa_fisica)
	into STRICT	nr_cpf_w,
		nm_pessoa_nota_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_nota_w;
	
	SELECT * FROM VALIDAR_DADOS_PF(wheb_usuario_pck.get_cd_estabelecimento, cd_convenio_w, cd_pessoa_fisica_nota_w, '3', ds_mensagem_w, ie_acao_mensagem_w, nr_seq_regra_w) INTO STRICT ds_mensagem_w, ie_acao_mensagem_w, nr_seq_regra_w;
	
	if (ie_opcao_p = 'C') and (ie_acao_mensagem_w IS NOT NULL AND ie_acao_mensagem_w::text <> '') then
		ds_retorno_w	:= 'N';	
		
	/*elsif	(ie_opcao_p = 'C') and		ALTERADO PARA CONSISTIR SOMENTE CONFORME A REGRA
		(nr_cpf_w is null) then		
		ds_retorno_w	:= 'N';	*/
	elsif (ie_opcao_p = 'R') and (ie_acao_mensagem_w IS NOT NULL AND ie_acao_mensagem_w::text <> '') then
		
		ds_retorno_w	:= nr_seq_regra_w||' - '||ds_mensagem_w;	
		
	elsif (ie_opcao_p = 'N') and (nm_pessoa_nota_w IS NOT NULL AND nm_pessoa_nota_w::text <> '') then
		
		ds_retorno_w := nm_pessoa_nota_w;
		
	end if;
	
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pf_nota_cpf (nr_interno_conta_p bigint, ie_opcao_p text) FROM PUBLIC;

