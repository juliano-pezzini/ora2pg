-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_data_etapa_evento ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, ie_etapa_cirurgia_p bigint) RETURNS timestamp AS $body$
DECLARE


dt_registro_w	timestamp := null;
dt_registro_aux timestamp := null;													

BEGIN

if (ie_etapa_cirurgia_p in (1,2,3)) then
	if (coalesce(nr_seq_pepo_p,0) > 0) then
		select	min(x.dt_registro)
		into STRICT		dt_registro_w
		from		evento_cirurgia y,
					evento_cirurgia_paciente x
		where		x.nr_seq_evento			= y.nr_sequencia
		and		x.nr_seq_pepo				= nr_seq_pepo_p
		and		y.ie_etapa_cirurgia 		= ie_etapa_cirurgia_p
		and		coalesce(x.ie_situacao,'A') 	= 'A';
	end if;	

	if (coalesce(nr_cirurgia_p,0) > 0) and (coalesce(dt_registro_w::text, '') = '') then
		select	min(x.dt_registro)
		into STRICT		dt_registro_w
		from		evento_cirurgia y,
					evento_cirurgia_paciente x
		where		x.nr_seq_evento			= y.nr_sequencia
		and		x.nr_cirurgia				= nr_cirurgia_p
		and		y.ie_etapa_cirurgia 		= ie_etapa_cirurgia_p
		and		coalesce(x.ie_situacao,'A') 	= 'A';
		
		if (coalesce(dt_registro_w::text, '') = '') then
			select	min(x.dt_registro)
			into STRICT		dt_registro_w
			from		evento_cirurgia y,
						evento_cirurgia_paciente x,
						cirurgia z
			where		x.nr_seq_evento			= y.nr_sequencia
			and		x.nr_seq_pepo				= z.nr_seq_pepo
			and		z.nr_cirurgia				= nr_cirurgia_p
			and		y.ie_etapa_cirurgia 		= ie_etapa_cirurgia_p
			and		coalesce(x.ie_situacao,'A') 	= 'A';
		end if;	
	end if;
	
	
else
	if (coalesce(nr_seq_pepo_p,0) > 0) then
		select	max(x.dt_registro)
		into STRICT		dt_registro_w
		from		evento_cirurgia y,
					evento_cirurgia_paciente x
		where		x.nr_seq_evento			= y.nr_sequencia
		and		x.nr_seq_pepo				= nr_seq_pepo_p
		and		y.ie_etapa_cirurgia 		= ie_etapa_cirurgia_p
		and		coalesce(x.ie_situacao,'A') 	= 'A';
	end if;	

	if (coalesce(nr_cirurgia_p,0) > 0) and (coalesce(dt_registro_w::text, '') = '') then
		select	max(x.dt_registro)
		into STRICT		dt_registro_w
		from		evento_cirurgia y,
					evento_cirurgia_paciente x
		where		x.nr_seq_evento			= y.nr_sequencia
		and		x.nr_cirurgia				= nr_cirurgia_p
		and		y.ie_etapa_cirurgia 		= ie_etapa_cirurgia_p
		and		coalesce(x.ie_situacao,'A') 	= 'A';
		
		if (coalesce(dt_registro_w::text, '') = '') then
			select	max(x.dt_registro)
			into STRICT		dt_registro_w
			from		evento_cirurgia y,
						evento_cirurgia_paciente x,
						cirurgia z
			where		x.nr_seq_evento			= y.nr_sequencia
			and		x.nr_seq_pepo				= z.nr_seq_pepo
			and		z.nr_cirurgia				= nr_cirurgia_p
			and		y.ie_etapa_cirurgia 		= ie_etapa_cirurgia_p
			and		coalesce(x.ie_situacao,'A') 	= 'A';
		end if;	
	end if;
	
    dt_registro_aux := dt_registro_w;
	dt_registro_w := coalesce(dt_registro_w,clock_timestamp());
	if (ie_etapa_cirurgia_p = 6) and (coalesce(obter_data_etapa_evento(nr_cirurgia_p,nr_seq_pepo_p,1)::text, '') = '') then
		dt_registro_w := null;
	elsif (ie_etapa_cirurgia_p = 4) and (coalesce(obter_data_etapa_evento(nr_cirurgia_p,nr_seq_pepo_p,3)::text, '') = '') then
		dt_registro_w := null;
	elsif (ie_etapa_cirurgia_p = 5) and (coalesce(obter_data_etapa_evento(nr_cirurgia_p,nr_seq_pepo_p,2)::text, '') = '') then	
		dt_registro_w := null;
    elsif (ie_etapa_cirurgia_p = 9) and (coalesce(dt_registro_aux::text, '') = '') then
        dt_registro_w := null;
    elsif (ie_etapa_cirurgia_p = 10) and (coalesce(obter_data_etapa_evento(nr_cirurgia_p,nr_seq_pepo_p,1)::text, '') = '') then
        dt_registro_w := null;
	end if;		
end if;	

return	dt_registro_w;	
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_data_etapa_evento ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, ie_etapa_cirurgia_p bigint) FROM PUBLIC;

