-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION verifica_se_proc_edicao (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint) RETURNS varchar AS $body$
DECLARE


VL_CH_HONORARIOS_W		double precision;
VL_CH_CUSTO_OPER_W		double precision;
VL_M2_FILME_W			double precision;
dt_vigencia_w			timestamp;
dt_final_vigencia_w		timestamp;
cd_edicao_amb_w			integer;
ie_origem_proced_w		bigint;
ie_origem_proced_edicao_w	bigint;
qt_preco_w			bigint	:= 0;
TX_AJUSTE_GERAL_w		double precision;
ie_liberado_edicao_w		varchar(01)	:=  'N';
ie_tipo_convenio_w		smallint;
nr_aux_w			double precision;
ds_aux_w			varchar(200);
ie_glosa_w			varchar(2);
cd_proc_ajuste_w		double precision;
ie_origem_proced_ww		bigint;
IE_REGRA_PRIOR_EDICAO_w		varchar(03)	:= 'DT';
ie_prioridade_w			bigint;
dt_conta_w			timestamp;

c01 CURSOR FOR
	SELECT 	ie_prioridade,
		CD_EDICAO_AMB,
       		CASE WHEN coalesce(VL_CH_HONORARIOS::text, '') = '' THEN 1 WHEN VL_CH_HONORARIOS=0 THEN 1  ELSE VL_CH_HONORARIOS END ,
	       	CASE WHEN coalesce(VL_CH_CUSTO_OPER::text, '') = '' THEN 1 WHEN VL_CH_CUSTO_OPER=0 THEN 1  ELSE VL_CH_CUSTO_OPER END ,
       		coalesce(VL_FILME,0),
		dt_inicio_vigencia,
		dt_final_vigencia,
		coalesce(TX_AJUSTE_GERAL, 1)
	FROM	CONVENIO_AMB
	WHERE (CD_ESTABELECIMENTO     = CD_ESTABELECIMENTO_P)
	AND (CD_CONVENIO            = CD_CONVENIO_P)
	AND (CD_CATEGORIA           = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
	AND (coalesce(IE_SITUACAO,'A')	= 'A')
	AND 	(DT_INICIO_VIGENCIA     =
      		(SELECT MAX(DT_INICIO_VIGENCIA)
	       	FROM 	CONVENIO_AMB A
	       	WHERE (A.CD_ESTABELECIMENTO  = CD_ESTABELECIMENTO_P)
	        AND (A.CD_CONVENIO         = CD_CONVENIO_P)
	        AND (A.CD_CATEGORIA        = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
		AND (coalesce(A.IE_SITUACAO,'A')= 'A')
	        AND (A.DT_INICIO_VIGENCIA <=  DT_CONTA_P)))
	and	IE_REGRA_PRIOR_EDICAO_w	= 'DT'
	
union

	SELECT 	ie_prioridade,
		CD_EDICAO_AMB,
       		CASE WHEN coalesce(VL_CH_HONORARIOS::text, '') = '' THEN 1 WHEN VL_CH_HONORARIOS=0 THEN 1  ELSE VL_CH_HONORARIOS END ,
	       	CASE WHEN coalesce(VL_CH_CUSTO_OPER::text, '') = '' THEN 1 WHEN VL_CH_CUSTO_OPER=0 THEN 1  ELSE VL_CH_CUSTO_OPER END ,
       		coalesce(VL_FILME,0),
		dt_inicio_vigencia,
		dt_final_vigencia,
		coalesce(TX_AJUSTE_GERAL, 1)
	FROM	CONVENIO_AMB
	WHERE (CD_ESTABELECIMENTO     = CD_ESTABELECIMENTO_P)
	AND (CD_CONVENIO            = CD_CONVENIO_P)
	AND (CD_CATEGORIA           = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
	AND (coalesce(IE_SITUACAO,'A')	= 'A')
	AND 	(DT_INICIO_VIGENCIA     =
      		(SELECT MAX(DT_INICIO_VIGENCIA)
	       	FROM 	CONVENIO_AMB A
	       	WHERE (A.CD_ESTABELECIMENTO  = CD_ESTABELECIMENTO_P)
	        AND (A.CD_CONVENIO         = CD_CONVENIO_P)
	        AND (A.CD_CATEGORIA        = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
		AND (coalesce(A.IE_SITUACAO,'A')= 'A')
	        AND (A.DT_INICIO_VIGENCIA <=  DT_CONTA_P)))
	and	IE_REGRA_PRIOR_EDICAO_w	= 'PR'
	order by 1, 5;


BEGIN
dt_conta_w 	:= PKG_DATE_UTILS.start_of(dt_conta_p,'dd',0);

select	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_p;

select	coalesce(max(IE_REGRA_PRIOR_EDICAO), 'DT')
into STRICT	IE_REGRA_PRIOR_EDICAO_w
from	convenio_estabelecimento
where	cd_estabelecimento 	= CD_ESTABELECIMENTO_P
and	cd_convenio		= cd_convenio_p;

select 	min(ie_origem_proced)
into STRICT	ie_origem_proced_ww
from 	procedimento
where 	cd_procedimento = cd_procedimento_p;

if (ie_tipo_convenio_w	= 3) and (ie_origem_proced_ww in (2,3,7)) then
	ie_liberado_edicao_w	:= 'S';
else
	open	c01;
	loop
	fetch	c01 into
		ie_prioridade_w,
		CD_EDICAO_AMB_W,
	       	VL_CH_HONORARIOS_W,
       		VL_CH_CUSTO_OPER_W,
	       	VL_M2_FILME_W,
		dt_vigencia_w,
		dt_final_vigencia_w,
		TX_AJUSTE_GERAL_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (qt_preco_w = 0) and
			((coalesce(dt_final_vigencia_w::text, '') = '') or (dt_conta_p <= dt_final_vigencia_w)) then
			begin

			select	max(ie_origem_proced)
			into STRICT	ie_origem_proced_edicao_w
			from	edicao_amb
			where	cd_edicao_amb	= cd_edicao_amb_w;


			if (cd_edicao_amb_w	= 2004) or (ie_origem_proced_edicao_w = 5) then
				ie_origem_proced_w	:= 5;
			else
				ie_origem_proced_w	:= 1;
			end if;

			if (ie_origem_proced_w = 5) then
				select	count(*)
				into STRICT	qt_preco_w
				from	cbhpm_preco
				where	cd_procedimento		= cd_procedimento_p
				and	ie_origem_proced	= ie_origem_proced_w;
			else
				select	count(*)
				into STRICT	qt_preco_w
				from	preco_amb
				where	cd_edicao_amb		= cd_edicao_amb_w
				and	cd_procedimento		= cd_procedimento_p
				and	dt_conta_w between coalesce(dt_inicio_vigencia, dt_conta_w) and coalesce(dt_final_vigencia, dt_conta_w);
			end if;


			if (coalesce(cd_procedimento_p,0) = 0) then
				qt_preco_w	:= 1;
			end if;

			if (qt_preco_w > 0) then
				ie_liberado_edicao_w	:= 'S';
			end if;

			end;
		end if;

		end;
	end loop;
	close c01;
end if;

return	ie_liberado_edicao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION verifica_se_proc_edicao (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint) FROM PUBLIC;

