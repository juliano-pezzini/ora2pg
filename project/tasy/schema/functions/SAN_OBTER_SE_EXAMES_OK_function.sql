-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION san_obter_se_exames_ok (nr_seq_exame_lote_p bigint, ie_opcao_p bigint) RETURNS bigint AS $body$
DECLARE


qt_exames_w	smallint := 0;


BEGIN

if (ie_opcao_p = 0) then
	select	count(*)
	into STRICT	qt_exames_w
	from	san_exame b,
		san_exame_realizado a,
		san_exame_lote c
	where 	a.nr_seq_exame = b.nr_sequencia
	and 	a.nr_seq_exame_lote = c.nr_sequencia
	and 	a.nr_seq_exame_lote = nr_seq_exame_lote_p
	--and 	b.ie_exige_senha = 'S'
	and	((san_obter_se_exame_auxiliar(a.nr_seq_exame_lote,a.nr_seq_exame,wheb_usuario_pck.get_cd_estabelecimento,'S') = 'S'
	and	san_obter_destino_exame(a.nr_seq_exame,3) = 'S')
	or (san_obter_se_exame_auxiliar(a.nr_seq_exame_lote,a.nr_seq_exame,wheb_usuario_pck.get_cd_estabelecimento,'O') = 'S'
	and	san_obter_destino_exame(a.nr_seq_exame,0) = 'S'))
	and 	((coalesce(a.vl_resultado::text, '') = '' and
		upper(coalesce(a.ds_resultado,'X')) <> 'NEGATIVO' and
		elimina_acentos(upper(coalesce(a.ds_resultado,'X'))) <> 'NAO REAGENTE')
	and	coalesce(b.ie_consiste_result_pos,'S') = 'S'
	and 	not exists(	SELECT 1 
				from SAN_EXAME_LOTE x, 
					san_exame_realizado y, 
					san_exame z
				where 	y.nr_seq_exame_lote = x.nr_sequencia
				and 	((coalesce(y.vl_resultado::text, '') = '' and
					upper(coalesce(y.ds_resultado,'X')) <> 'POSITIVO' and
					elimina_acentos(upper(coalesce(y.ds_resultado,'X'))) <> 'REAGENTE')
				and 	(y.ds_resultado IS NOT NULL AND y.ds_resultado::text <> '') 
				and 	coalesce(z.ie_consiste_result_pos,'S') = 'S')
				and	x.nr_amostra > c.nr_amostra
				and 	y.nr_seq_exame = b.nr_sequencia
				and 	x.nr_seq_doacao = c.nr_seq_doacao)) 
	and 	coalesce(b.ie_fator_rh,'N') = 'N'
	and 	coalesce(b.ie_tipo_sangue,'N') = 'N'
	and	coalesce(b.ie_tipo_exame,0) <> 3
	and 	not exists (	select	1
				from	san_parametro x
				where (x.nr_seq_exame_rh = a.nr_seq_exame
				or	x.nr_seq_exame_tipo = a.nr_seq_exame)
				and	x.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento);
elsif (ie_opcao_p = 1) then
	select	count(*)
	into STRICT	qt_exames_w
	from	san_exame b,
		san_exame_realizado a
	where 	a.nr_seq_exame = b.nr_sequencia
	and 	a.nr_seq_exame_lote = nr_seq_exame_lote_p
	and 	b.ie_exige_senha = 'S'
	and (coalesce(a.vl_resultado::text, '') = '' and coalesce(a.ds_resultado::text, '') = '');
end if;

return qt_exames_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION san_obter_se_exames_ok (nr_seq_exame_lote_p bigint, ie_opcao_p bigint) FROM PUBLIC;

