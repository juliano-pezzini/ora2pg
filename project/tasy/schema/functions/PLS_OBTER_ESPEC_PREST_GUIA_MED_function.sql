-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_espec_prest_guia_med ( nr_seq_prestador_p bigint, cd_medico_p text, nr_seq_endereco_p pls_endereco_guia_medico.nr_sequencia%type, cd_especialidade_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter as especialidades do prestador/médico
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_especialidade_w		varchar(4000)	:= null;
ds_retorno_w			varchar(4000);

C01 CURSOR FOR
	SELECT	distinct
		coalesce(b.ds_espec_guia_medico, b.ds_especialidade) ds_espec
	from	especialidade_medica	b,
		pls_prestador_med_espec	a
	where	a.cd_especialidade	= b.cd_especialidade
	and	a.cd_pessoa_fisica	= cd_medico_p
	and	a.nr_seq_prestador	= nr_seq_prestador_p
	and	coalesce(a.ie_guia_medico,'S')	= 'S'
	and	clock_timestamp() between trunc(coalesce(a.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(a.dt_fim_vigencia, clock_timestamp()))
	order by
		ds_espec;

C02 CURSOR(	nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		cd_medico_pc		pessoa_fisica.cd_pessoa_fisica%type,
		nr_seq_endereco_pc	pls_endereco_guia_medico.nr_sequencia%type,
		cd_especialidade_pc	bigint) FOR
	SELECT	coalesce(Obter_Desc_Espec_medica(a.cd_especialidade), '') ds_espec
	from	pls_prestador_medico		c,
		pls_endereco_guia_medico	b,
		pls_end_guia_med_espec		a
	where	b.cd_pessoa_fisica		= c.cd_medico
	and	a.nr_seq_endereco		= b.nr_sequencia
	and	c.nr_seq_prestador		= nr_seq_prestador_pc
	and	c.cd_medico			= cd_medico_pc
	and	b.nr_sequencia			= nr_seq_endereco_pc
	and	a.cd_especialidade		= coalesce(cd_especialidade_pc, a.cd_especialidade);

BEGIN

if (nr_seq_endereco_p IS NOT NULL AND nr_seq_endereco_p::text <> '') then
	for r_c02_w in C02(nr_seq_prestador_p, cd_medico_p, nr_seq_endereco_p, cd_especialidade_p) loop
		ds_retorno_w	:= ds_retorno_w || r_c02_w.ds_espec || ' \ ';
	end loop;
else
	open C01;
	loop
	fetch C01 into
		ds_especialidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_retorno_w	:= ds_retorno_w || ds_especialidade_w || ' \ ';
		end;
	end loop;
	close C01;
end if;

ds_retorno_w	:= substr(ds_retorno_w, 1, length(ds_retorno_w) - 2);

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_espec_prest_guia_med ( nr_seq_prestador_p bigint, cd_medico_p text, nr_seq_endereco_p pls_endereco_guia_medico.nr_sequencia%type, cd_especialidade_p bigint) FROM PUBLIC;

