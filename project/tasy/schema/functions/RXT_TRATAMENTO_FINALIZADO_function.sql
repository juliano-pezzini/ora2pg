-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION rxt_tratamento_finalizado ( nr_sequencia_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verifica tratamentos finalizados
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: Gestao de Radioterapia > Pacientes em tratamento >Tratamento
[  ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [ ] Portal [  ]  Relatorios [ ] Outros: campo function IE_FINALIZADO (RXT_TRATAMENTO)
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_sequencia_w           		rxt_fase_tratamento.nr_sequencia%type;
nr_seq_volume_tratamento_w		rxt_fase_tratamento.nr_seq_volume_tratamento%type;
nr_seq_tratamento_w		rxt_tratamento.nr_sequencia%type;
ds_retorno_w             		varchar(1);
nr_seq_protocolo_w              rxt_tratamento.nr_seq_protocolo%type;
ie_tipo_tratamento_w           	varchar(5);
nr_sequencia_braq_aplic_trat_w  rxt_braq_aplic_trat.nr_sequencia%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
        	a.nr_seq_volume_tratamento,
	c.nr_sequencia
FROM	rxt_fase_tratamento a,
        	rxt_tratamento c
WHERE	c.nr_sequencia 		= nr_sequencia_p
AND     	a.nr_seq_Tratamento	= c.nr_sequencia;

c02 CURSOR FOR
SELECT	b.nr_sequencia
FROM	rxt_tratamento a,
        rxt_braq_aplic_trat b
WHERE	a.nr_sequencia 		= nr_sequencia_p
AND     b.nr_seq_Tratamento	= a.nr_sequencia;


BEGIN

SELECT	max(nr_seq_protocolo)
into STRICT    nr_seq_protocolo_w
FROM    rxt_tratamento
WHERE	nr_sequencia = nr_sequencia_p;

ie_tipo_tratamento_w := (Rxt_Obter_Tipo_Trat_Prot(nr_seq_protocolo_w));

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	SELECT	coalesce(MAX('S'),'N')
	INTO STRICT	ds_retorno_w
	FROM	rxt_agenda
	WHERE	nr_seq_tratamento = nr_sequencia_p;

	if (ds_retorno_w = 'S') then
		SELECT  coalesce(MAX('S'),'N')
		INTO STRICT	ds_retorno_w
		FROM    	rxt_tratamento c,
			rxt_agenda d
		WHERE  c.nr_sequencia 		= nr_sequencia_p
		AND     	d.nr_seq_tratamento	= c.nr_sequencia
		AND     	d.ie_status_agenda IN ('E' ,'F' ,'B','C', 'H');

		if	((ds_retorno_w = 'S') and (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') and (ie_tipo_tratamento_w <> 'B')) then
	        	open c01;
	        	loop
	        	fetch c01 into 	nr_sequencia_w,
	                        		nr_seq_volume_tratamento_w,
				nr_seq_tratamento_w;
	        	EXIT WHEN NOT FOUND or ds_retorno_w = 'N';  /* apply on c01 */
	                	if (nr_seq_volume_tratamento_w IS NOT NULL AND nr_seq_volume_tratamento_w::text <> '') then
	                		select	coalesce(max('S'),'N')
					into STRICT	ds_retorno_w
					FROM	rxt_agenda a,
						rxt_agenda_fase b
					WHERE	b.nr_seq_agenda_rxt	= a.nr_sequencia
					AND	a.nr_seq_tratamento	= nr_seq_tratamento_w
					AND	b.nr_seq_fase		= nr_sequencia_w;
					if (ds_retorno_w = 'S') then
						select	coalesce(max('N'),'S')
						into STRICT	ds_retorno_w
						FROM	rxt_agenda a,
							rxt_agenda_fase b
						WHERE	b.nr_seq_agenda_rxt	= a.nr_sequencia
						AND	a.nr_seq_tratamento	= nr_seq_tratamento_w
						AND	b.nr_seq_fase		= nr_sequencia_w
						and     a.ie_status_agenda not in ('E' ,'F' ,'B','C', 'H');			
					end if;	
		                else
					select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
						into STRICT	ds_retorno_w
					FROM	rxt_agenda b
					WHERE	b.nr_seq_fase 		= nr_sequencia_w
					AND	b.nr_seq_tratamento	= nr_seq_tratamento_w;
					if (ds_retorno_w = 'S') then					
						select	coalesce(max('N'),'S')
						into STRICT	ds_retorno_w
						FROM	rxt_agenda b
						WHERE	b.nr_seq_fase 		= nr_sequencia_w
						AND	b.nr_seq_tratamento	= nr_seq_tratamento_w
						and     b.ie_status_agenda not in ('E' ,'F' ,'B','C', 'H');						
					end if;	
		                	end if;
	        	end loop;
	        	close c01;
		end if;

        if (ds_retorno_w = 'S' AND ie_tipo_tratamento_w = 'B') then
            open c02;
            loop
                fetch c02 into 	nr_sequencia_braq_aplic_trat_w;
                EXIT WHEN NOT FOUND or ds_retorno_w = 'N';  /* apply on c02 */

                select	coalesce(max('N'),'S')
                into STRICT    ds_retorno_w
                from    rxt_braq_campo_aplic_trat
                where	nr_seq_aplic_trat = nr_sequencia_braq_aplic_trat_w
                and     coalesce(nr_seq_agenda::text, '') = '';

                if (ds_retorno_w = 'S') then
                    select	coalesce(max('N'),'S')
                    into STRICT	ds_retorno_w
                    from	rxt_agenda
                    where	nr_seq_tratamento = nr_sequencia_p
                    and     ie_status_agenda not in ('E' ,'F' ,'B','C', 'H');
                end if;
            end loop;
            close c02;
        end if;
    end if;
end if;

return ds_retorno_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION rxt_tratamento_finalizado ( nr_sequencia_p bigint) FROM PUBLIC;

