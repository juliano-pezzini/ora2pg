-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_pre_liberacao ( nr_solic_compra_p bigint, ie_opcao_p bigint) RETURNS varchar AS $body$
DECLARE


/*ie_opcao_p
0 - ie_pre_aprovacao_w
1 - nm_usuario_ver_pre_lib_w */
cd_estabelecimento_w			bigint;
ie_pre_aprovacao_w			varchar(1) := 'N';
cd_material_w				integer;
cd_grupo_material_w			smallint;
cd_subgrupo_material_w			smallint;
cd_classe_material_w			integer;
cd_local_estoque_w			smallint;
ie_consiste_qt_maior_w			varchar(1);
qt_material_w				double precision;
qt_estoque_maximo_w			double precision;
nm_usuario_ver_pre_lib_w			varchar(15);
ds_retorno_w				varchar(15);
ie_curva_ABC_w				varchar(15);
ie_curva_A_w				varchar(1);
ie_curva_B_w				varchar(1);
ie_curva_C_w				varchar(1);

c01 CURSOR FOR
SELECT	b.cd_material,
	(b.qt_material * qt_conv_compra_estoque),
	obter_mat_estabelecimento(a.cd_estabelecimento, a.cd_estabelecimento, b.cd_material, 'MA'),
	a.cd_local_estoque,
	a.cd_estabelecimento,
	obter_curva_abc(b.cd_material, 'N', trunc(a.dt_solicitacao_compra))
from	solic_compra a,
	solic_compra_item b,
	material c
where	a.nr_solic_compra = b.nr_solic_compra
and	c.cd_material = b.cd_material
and	a.nr_solic_compra = nr_solic_compra_p;

c02 CURSOR FOR
SELECT	ie_consiste_qt_maior,
	ie_curva_A,
	ie_curva_B,
	ie_curva_C,
	nm_usuario_ver_pre_lib
from	regra_pre_liberacao_compra
where	cd_estabelecimento = cd_Estabelecimento_w
and	coalesce(cd_local_estoque, cd_local_estoque_w)		= cd_local_estoque_w
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
and (coalesce(cd_material, cd_material_w) = cd_material_w or cd_material_w = 0)
order by
	coalesce(cd_material, 0),
	coalesce(cd_classe_material, 0),
	coalesce(cd_subgrupo_material, 0),
	coalesce(cd_grupo_material, 0),
	coalesce(cd_local_estoque, 0);


BEGIN

open C01;
loop
fetch C01 into
	cd_material_w,
	qt_material_w,
	qt_estoque_maximo_w,
	cd_local_estoque_w,
	cd_estabelecimento_w,
	ie_curva_ABC_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material = cd_material_w;

	open C02;
	loop
	fetch C02 into
		ie_consiste_qt_maior_w,
		ie_curva_A_w,
		ie_curva_B_w,
		ie_curva_C_w,
		nm_usuario_ver_pre_lib_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (ie_pre_aprovacao_w = 'N') and (ie_curva_A_w = 'S') and (ie_curva_ABC_w in ('A','X')) then
			ie_pre_aprovacao_w	:= 'S';
		end if;

		if (ie_pre_aprovacao_w = 'N') and (ie_curva_B_w = 'S') and (ie_curva_ABC_w in ('B','X')) then
			ie_pre_aprovacao_w	:= 'S';

		end if;

		if (ie_pre_aprovacao_w = 'N') and (ie_curva_C_w = 'S') and (ie_curva_ABC_w in ('C','X')) then
			ie_pre_aprovacao_w	:= 'S';
		end if;

		if (ie_pre_aprovacao_w  = 'N') and (ie_consiste_qt_maior_w = 'S') and (qt_material_w > qt_estoque_maximo_w) then
			nm_usuario_ver_pre_lib_w	:= nm_usuario_ver_pre_lib_w;
			ie_pre_aprovacao_w	:= 'S';
		end if;
		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

if (ie_opcao_p = 0) then
	ds_retorno_w	:= ie_pre_aprovacao_w;
elsif (ie_opcao_p = 1) then
	ds_retorno_w	:= nm_usuario_ver_pre_lib_w;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_pre_liberacao ( nr_solic_compra_p bigint, ie_opcao_p bigint) FROM PUBLIC;

