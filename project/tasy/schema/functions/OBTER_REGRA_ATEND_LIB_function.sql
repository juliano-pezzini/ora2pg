-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_regra_atend_lib (cd_perfil_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, ie_clinica_p bigint default null, ie_tipo_atendimento_p bigint default null, nr_seq_agenda_p bigint default null) RETURNS varchar AS $body$
DECLARE

		
ds_retorno_w	  	 varchar(1):= 'S';
qt_regra_perfil_w	 bigint;
qt_regra_perfil_lib_w	 bigint;
ie_clinica_w		 bigint;
ie_tipo_atendimento_w	 smallint;
nr_seq_agenda_w		 bigint;
qt_regra_especialidade_w bigint;
		

BEGIN
ie_clinica_w	:= coalesce(ie_clinica_p,0);
ie_tipo_atendimento_w := coalesce(ie_tipo_atendimento_p,0);
nr_seq_agenda_w := coalesce(nr_seq_agenda_p,0);

select 	count(*)
into STRICT	qt_regra_especialidade_w
from 	classificacao_atend_lib
where 	coalesce(cd_perfil,cd_perfil_P) = cd_perfil_P
and	coalesce(ie_clinica,ie_clinica_w)	= ie_clinica_w
and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
and	cd_especialidade = Obter_Especialidade_agenda(Obter_codigo_agenda(nr_seq_agenda_w))
and coalesce(cd_estab_regra, obter_estabelecimento_ativo) = obter_estabelecimento_ativo;

if (nr_seq_agenda_w = 0) or (qt_regra_especialidade_w = 0) then

select 	count(*)
into STRICT	qt_regra_perfil_w
from 	classificacao_atend_lib
where 	coalesce(cd_perfil,cd_perfil_P) = cd_perfil_P
and	coalesce(ie_clinica,ie_clinica_w)	= ie_clinica_w
and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
and coalesce(cd_estab_regra, obter_estabelecimento_ativo) = obter_estabelecimento_ativo;

	if (qt_regra_perfil_w > 0) then
		select 	count(*)
		into STRICT	qt_regra_perfil_lib_w
		from 	classificacao_atend_lib
		where 	coalesce(cd_perfil,cd_perfil_P) = cd_perfil_P
		and 	nr_seq_classificacao = nr_sequencia_p
		and	coalesce(ie_clinica,ie_clinica_w)	= ie_clinica_w
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
		and coalesce(cd_estab_regra, obter_estabelecimento_ativo) = obter_estabelecimento_ativo;
	end if;	
else

select 	count(*)
into STRICT	qt_regra_perfil_w
from 	classificacao_atend_lib
where 	coalesce(cd_perfil,cd_perfil_P) = cd_perfil_P
and	coalesce(ie_clinica,ie_clinica_w)	= ie_clinica_w
and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
and	cd_especialidade = Obter_Especialidade_agenda(Obter_codigo_agenda(nr_seq_agenda_w))
and coalesce(cd_estab_regra, obter_estabelecimento_ativo) = obter_estabelecimento_ativo;

	if (qt_regra_perfil_w > 0) then
		select 	count(*)
		into STRICT	qt_regra_perfil_lib_w
		from 	classificacao_atend_lib
		where 	coalesce(cd_perfil,cd_perfil_P) = cd_perfil_P
		and 	nr_seq_classificacao = nr_sequencia_p
		and	coalesce(ie_clinica,ie_clinica_w)	= ie_clinica_w
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
		and	cd_especialidade = Obter_Especialidade_agenda(Obter_codigo_agenda(nr_seq_agenda_w))
		and coalesce(cd_estab_regra, obter_estabelecimento_ativo) = obter_estabelecimento_ativo;
	end if;
end if;


if (qt_regra_perfil_w > 0) and (qt_regra_perfil_lib_w = 0) then
	ds_retorno_w	:= 'N';
else
	ds_retorno_w	:= 'S';
end if;



return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_regra_atend_lib (cd_perfil_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, ie_clinica_p bigint default null, ie_tipo_atendimento_p bigint default null, nr_seq_agenda_p bigint default null) FROM PUBLIC;

