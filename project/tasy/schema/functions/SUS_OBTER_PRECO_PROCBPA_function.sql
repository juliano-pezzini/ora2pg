-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION sus_obter_preco_procbpa ( cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE




/*
	1 - Vl. tph
	2 - Vl. taxas
	3 - Vl. MÃ©dico
	4 - Vl. Anestesia
	5 - Vl. MatMed
	6 - Vl. Contraste
	7 - Vl. Filme RX
	8 - Vl. Gesso
	9 - Vl. Quimioterapia
	10- Vl. Dialise
	11- Vl. SADT RX
	12- Vl. SADT PC
	13- Vl. SADT
	14- Vl. Filme Ressonancia
	15- Vl. Outros
	16- Vl. Procedimento
	17- Vl. Adic. Plant */
vl_tph_w			double precision		:= 0;
vl_taxas_w			double precision		:= 0;
vl_medico_w			double precision		:= 0;
vl_anestesia_w		double precision		:= 0;
vl_matmed_w			double precision		:= 0;
vl_contraste_w		double precision		:= 0;
vl_filme_rx_w			double precision		:= 0;
vl_gesso_w			double precision		:= 0;
vl_quimioterapia_w		double precision		:= 0;
vl_dialise_W			double precision		:= 0;
vl_sadt_rx_w			double precision		:= 0;
vl_sadt_pc_w			double precision		:= 0;
vl_sadt_w			double precision		:= 0;
vl_filme_ressonancia_w	double precision		:= 0;
vl_outros_w			double precision		:= 0;
vl_procedimento_w		double precision		:= 0;
vl_adic_plant_w		double precision		:= 0;
dt_competencia_w		timestamp			:= clock_timestamp();
vl_retorno_w			double precision		:= 0;
IE_DEFINE_PRECO_W		varchar(10);
IE_VERSAO_W			varchar(10);




BEGIN

SELECT 	coalesce(vl_parametro,VL_PARAMETRO_PADRAO)
	INTO STRICT   	IE_DEFINE_PRECO_W
	FROM   	FUNCAO_PARAMETRO
	WHERE  	CD_FUNCAO = 136
	AND	NR_SEQUENCIA = 1;




if (ie_origem_proced_p = 3) then

	 if (upper(IE_DEFINE_PRECO_W) = 'D') then

		select	coalesce(vl_tph,0),
			coalesce(vl_taxa_sala,0),
			coalesce(vl_honorario_medico,0),
			coalesce(vl_anestesia,0),
			coalesce(vl_matmed,0),
			coalesce(vl_contraste,0),
			coalesce(vl_filme_rx,0),
			coalesce(vl_gesso,0),
			coalesce(vl_quimioterapia,0),
			coalesce(vl_dialise,0),
			coalesce(vl_sadt_rx,0),
			coalesce(vl_sadt_pc,0),
			coalesce(vl_sadt_outros,0),
			coalesce(vl_filme_ressonancia,0),
			coalesce(vl_outros,0),
			coalesce(vl_procedimento,0),
			coalesce(vl_plantonista,0),
       			dt_competencia
		into STRICT	vl_tph_w,
			vl_taxas_w,
			vl_medico_w,
			vl_anestesia_w,
			vl_matmed_w,
			vl_contraste_w,
			vl_filme_rx_w,
			vl_gesso_w,
			vl_quimioterapia_w,
			vl_dialise_W,
			vl_sadt_rx_w,
			vl_sadt_pc_w,
			vl_sadt_w,
			vl_filme_ressonancia_w,
			vl_outros_w,
			vl_procedimento_w,
			vl_adic_plant_w,
			dt_competencia_w
  		from	sus_preco_procbpa
 		where	cd_procedimento  = cd_procedimento_p
   		and	ie_origem_proced = ie_origem_proced_p
		and	dt_competencia   =
			(SELECT max(dt_competencia)
			from 	sus_preco_procbpa
       			where 	cd_procedimento  = cd_procedimento_p
       			and 	ie_origem_proced = ie_origem_proced_p);



	else
		SELECT 	IE_VERSAO_BPA
		INTO STRICT   	IE_VERSAO_W
		FROM   	SUS_PARAMETROS
		where	cd_estabelecimento	= cd_estabelecimento_p;


		select	coalesce(vl_tph,0),
			coalesce(vl_taxa_sala,0),
			coalesce(vl_honorario_medico,0),
			coalesce(vl_anestesia,0),
			coalesce(vl_matmed,0),
			coalesce(vl_contraste,0),
			coalesce(vl_filme_rx,0),
			coalesce(vl_gesso,0),
			coalesce(vl_quimioterapia,0),
			coalesce(vl_dialise,0),
			coalesce(vl_sadt_rx,0),
			coalesce(vl_sadt_pc,0),
			coalesce(vl_sadt_outros,0),
			coalesce(vl_filme_ressonancia,0),
			coalesce(vl_outros,0),
			coalesce(vl_procedimento,0),
			coalesce(vl_plantonista,0),
       			dt_competencia
		into STRICT	vl_tph_w,
			vl_taxas_w,
			vl_medico_w,
			vl_anestesia_w,
			vl_matmed_w,
			vl_contraste_w,
			vl_filme_rx_w,
			vl_gesso_w,
			vl_quimioterapia_w,
			vl_dialise_W,
			vl_sadt_rx_w,
			vl_sadt_pc_w,
			vl_sadt_w,
			vl_filme_ressonancia_w,
			vl_outros_w,
			vl_procedimento_w,
			vl_adic_plant_w,
			dt_competencia_w
  		from	sus_preco_procbpa
 		where	cd_procedimento  = cd_procedimento_p
   		and	ie_origem_proced = ie_origem_proced_p
		and	ie_versao	 = ie_versao_w;
	end if;


	if (ie_opcao_p 	= '1') then
		vl_retorno_w 	:= vl_tph_w;
	elsif (ie_opcao_p	= '2') then
		vl_retorno_w	:=vl_taxas_w;
	elsif (ie_opcao_p	= '3') then
		vl_retorno_w	:=vl_medico_w;
	elsif (ie_opcao_p	= '4') then
		vl_retorno_w	:=vl_anestesia_w;
	elsif (ie_opcao_p	= '5') then
		vl_retorno_w	:=vl_matmed_w;
	elsif (ie_opcao_p	= '6') then
		vl_retorno_w	:=vl_contraste_w;
	elsif (ie_opcao_p	= '7') then
		vl_retorno_w	:=vl_filme_rx_w;
	elsif (ie_opcao_p	= '8') then
		vl_retorno_w	:=vl_gesso_w;
	elsif (ie_opcao_p	= '9') then
		vl_retorno_w	:=vl_quimioterapia_w;
	elsif (ie_opcao_p	= '10') then
		vl_retorno_w	:=vl_dialise_W;
	elsif (ie_opcao_p	= '11') then
		vl_retorno_w	:=vl_sadt_rx_w;
	elsif (ie_opcao_p	= '12') then
		vl_retorno_w	:=vl_sadt_pc_w;
	elsif (ie_opcao_p	= '13') then
		vl_retorno_w	:=vl_sadt_w;
	elsif (ie_opcao_p	= '14') then
		vl_retorno_w	:=vl_filme_ressonancia_w;
	elsif (ie_opcao_p	= '15') then
		vl_retorno_w	:=vl_outros_w;
	elsif (ie_opcao_p	= '16') then
		vl_retorno_w	:=vl_procedimento_w;
	elsif (ie_opcao_p	= '17') then
		vl_retorno_w	:=vl_adic_plant_w;
	end if;
end if;

return	vl_retorno_w;

END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_obter_preco_procbpa ( cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_opcao_p text) FROM PUBLIC;

