-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_dados_titular_convenio ( cd_pessoa_fisica_p text, cd_convenio_p bigint, ie_opcao_p text, dt_entrada_p timestamp default clock_timestamp()) RETURNS varchar AS $body$
DECLARE

						
nr_sequencia_w              bigint;
cd_convenio_w		    integer;
cd_categoria_w		    varchar(10);
ds_inicio_vigencia_w	    varchar(30);
ds_fim_vigencia_w	    varchar(30);
ds_validade_carteira_w	    varchar(30);
cd_usuario_convenio_w	    varchar(30);
cd_empresa_refer_w	    bigint;
cd_plano_convenio_w         varchar(10);
ie_tipo_conveniado_w	    pessoa_titular_convenio.ie_tipo_conveniado%type;
cd_usuario_convenio_tit_w   varchar(30);
ie_grau_dependencia_w       pessoa_titular_convenio.ie_grau_dependencia%type;
dt_afiliacao_w			pessoa_titular_convenio.dt_afiliacao%type;
nr_seq_nivel_filiacao_w		pessoa_titular_convenio.nr_seq_nivel_filiacao%type;
ds_retorno_w 			varchar(30) := null;



BEGIN

if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	pessoa_titular_convenio
	where	cd_pessoa_titular = 	cd_pessoa_fisica_p
	and		cd_convenio	  = 	cd_convenio_p
	and		((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_p)	<= 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_vigencia)) or (coalesce(dt_fim_vigencia::text, '') = ''))
	and		((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_p)	>= 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia)) or (coalesce(dt_inicio_vigencia::text, '') = ''))
	and	not exists		(
						SELECT 	1
						from	pessoa_titular_convenio
						where	cd_pessoa_fisica = 	cd_pessoa_fisica_p
						and		cd_convenio	  = 	cd_convenio_p
						and		((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_p)	<= 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_vigencia)) or (coalesce(dt_fim_vigencia::text, '') = ''))
						and		((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_p)	>= 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia)) or (coalesce(dt_inicio_vigencia::text, '') = ''))					
						);
	
	if (coalesce(nr_sequencia_w,0) = 0) then
			select 	max(nr_sequencia)
			into STRICT	nr_sequencia_w
			from	pessoa_titular_convenio
			where	cd_pessoa_fisica = 	cd_pessoa_fisica_p
			and		cd_convenio	  = 	cd_convenio_p
			and		((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_p)	<= 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_fim_vigencia)) or (coalesce(dt_fim_vigencia::text, '') = ''))
			and		((ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_p)	>= 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia)) or (coalesce(dt_inicio_vigencia::text, '') = ''));
	end if;
	
	if (nr_sequencia_w	> 0) or (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		
		select		cd_convenio,
				cd_categoria,
				PKG_DATE_FORMATERS.TO_VARCHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia) + 1/86400,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO),
				PKG_DATE_FORMATERS.TO_VARCHAR(PKG_DATE_UTILS.END_OF(dt_fim_vigencia,'DAY'),'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO),
				PKG_DATE_FORMATERS.TO_VARCHAR(dt_validade_carteira,'shortDate', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO),
				cd_usuario_convenio,
				cd_empresa_refer,
				cd_plano_convenio,
				ie_tipo_conveniado,
				cd_usuario_convenio_tit,
				ie_grau_dependencia,
				dt_afiliacao,
				nr_seq_nivel_filiacao
		into STRICT		cd_convenio_w,
				cd_categoria_w,
				ds_inicio_vigencia_w,
				ds_fim_vigencia_w,
				ds_validade_carteira_w,
				cd_usuario_convenio_w,
				cd_empresa_refer_w,
				cd_plano_convenio_w,
				ie_tipo_conveniado_w,
				cd_usuario_convenio_tit_w,
				ie_grau_dependencia_w,
				dt_afiliacao_w,
				nr_seq_nivel_filiacao_w
		from	pessoa_titular_convenio
		where	nr_sequencia = nr_sequencia_w;
	end if;
		
	
	if (ie_opcao_p = 'CV')	then
		ds_retorno_w := cd_convenio_w;
	elsif (ie_opcao_p = 'CC')	then
		ds_retorno_w := cd_categoria_w;
	elsif (ie_opcao_p = 'DIV') then
		if (ds_inicio_vigencia_w IS NOT NULL AND ds_inicio_vigencia_w::text <> '') then
			ds_retorno_w := ds_inicio_vigencia_w;
		else
			ds_retorno_w := null;
		end if;
	elsif (ie_opcao_p = 'DFV') then
		if (ds_fim_vigencia_w IS NOT NULL AND ds_fim_vigencia_w::text <> '') then
			ds_retorno_w := ds_fim_vigencia_w;
		else
			ds_retorno_w := null;
		end if;
	elsif (ie_opcao_p = 'DVC')	then
		ds_retorno_w :=	ds_validade_carteira_w;
	elsif (ie_opcao_p = 'CUV')	then
		ds_retorno_w := cd_usuario_convenio_w;
	elsif (ie_opcao_p = 'CER')	then
		ds_retorno_w := cd_empresa_refer_w;
	elsif (ie_opcao_p = 'CPC')	then
		ds_retorno_w := cd_plano_convenio_w;
	elsif (ie_opcao_p = 'ITC')	then
		ds_retorno_w := ie_tipo_conveniado_w;
	elsif (ie_opcao_p = 'CTI') then
		ds_retorno_w := cd_usuario_convenio_tit_w;
	elsif (ie_opcao_p = 'IGD') then
		ds_retorno_w := ie_grau_dependencia_w;
	elsif (ie_opcao_p = 'DA') then
		ds_retorno_w := PKG_DATE_FORMATERS.TO_VARCHAR(date_p => dt_afiliacao_w, ds_mask => 'shortDate',cd_estabelcimento_p => WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO,nm_usuario_p => WHEB_USUARIO_PCK.GET_NM_USUARIO);
	elsif (ie_opcao_p = 'NFC') then
		ds_retorno_w := nr_seq_nivel_filiacao_w;
	end if;
else
	ds_retorno_w := null;
end if;	

return ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_dados_titular_convenio ( cd_pessoa_fisica_p text, cd_convenio_p bigint, ie_opcao_p text, dt_entrada_p timestamp default clock_timestamp()) FROM PUBLIC;

