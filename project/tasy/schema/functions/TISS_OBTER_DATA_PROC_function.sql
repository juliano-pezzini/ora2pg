-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION tiss_obter_data_proc (nr_seq_procedimento_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, ie_despesa_p text, ie_opcao_p text) RETURNS timestamp AS $body$
DECLARE


/* ie_opcao_p
 'I' - data inicial do procedimento
 'F' - data final do procedimento
 'E' - data de execução do procedimento
*/
dt_retorno_w		timestamp;
dt_alta_w		timestamp;
dt_entrada_w		timestamp;
dt_inicio_proced_w	timestamp;
dt_fim_proced_w		timestamp;
dt_conta_w		timestamp;
dt_periodo_inicial_w	timestamp;
dt_procedimento_w	timestamp;
dt_periodo_final_w	timestamp;
ie_data_inicial_w	varchar(3);
ie_data_final_w		varchar(3);
ie_data_proc_w		varchar(3);
ie_pacote_w		varchar(3);
nr_seq_proc_pacote_w	bigint;
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	bigint;
ie_data_proc_conv_w	varchar(255);
nr_cirurgia_w		bigint;
ie_tipo_atend_conta_w	integer;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
nr_sequencia_gas_w	procedimento_paciente.nr_sequencia_gas%type;

c01 CURSOR FOR
SELECT	ie_data_inicial,
	ie_data_final,
	ie_data_proc,
	coalesce(ie_pacote, 'T')
from	tiss_regra_data_proc
where	cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(cd_convenio, coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0)
and	((ie_despesa	= 'S') or (ie_despesa_p = 'N'))
and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) 		= coalesce(ie_tipo_atendimento_p,0)
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) 	= coalesce(cd_setor_atendimento_w,0)
and	coalesce(ie_tipo_atend_conta,coalesce(ie_tipo_atend_conta_w,0))		= coalesce(ie_tipo_atend_conta_w,0)
and	coalesce(cd_procedimento,coalesce(cd_procedimento_w, 0))			= coalesce(cd_procedimento_w, 0)
and	coalesce(cd_area_procedimento,coalesce(cd_area_procedimento_w,0))		= coalesce(cd_area_procedimento_w,0)
and	coalesce(cd_especialidade,coalesce(cd_especialidade_w,0))			= coalesce(cd_especialidade_w,0)
and	coalesce(cd_grupo_proc,coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
order by
	coalesce(cd_procedimento,0),
	coalesce(cd_grupo_proc,0),
	coalesce(cd_especialidade,0),
	coalesce(cd_area_procedimento,0),
	coalesce(ie_tipo_atend_conta,0),
	coalesce(cd_setor_atendimento,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(cd_setor_atendimento,0),
	coalesce(cd_convenio,0);

--dsantos / lhalves em 04/02/2010 -> filtrado por estabelecimento
BEGIN

select	max(a.dt_inicio_procedimento),
	max(a.dt_procedimento),
	max(a.dt_conta),
	max(CASE WHEN nr_seq_procedimento_p=a.nr_seq_proc_pacote THEN  a.nr_seq_proc_pacote  ELSE null END ) nr_seq_proc_pacote,
	max(b.dt_periodo_inicial),
	max(a.dt_procedimento),
	max(a.cd_setor_atendimento),
	max(b.cd_estabelecimento),
	max(a.nr_cirurgia),
	max(b.ie_tipo_atend_conta),
	max(b.dt_periodo_final),
	max(a.cd_procedimento),
	max(a.ie_origem_proced),
	max(a.nr_sequencia_gas)
into STRICT	dt_inicio_proced_w,
	dt_fim_proced_w,
	dt_conta_w,
	nr_seq_proc_pacote_w,
	dt_periodo_inicial_w,
	dt_procedimento_w,
	cd_setor_atendimento_w,
	cd_estabelecimento_w,
	nr_cirurgia_w,
	ie_tipo_atend_conta_w,
	dt_periodo_final_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_sequencia_gas_w
from	conta_paciente b,
	procedimento_paciente a
where	a.nr_sequencia		= nr_seq_procedimento_p
and	a.nr_interno_conta	= b.nr_interno_conta;

if (nr_sequencia_gas_w IS NOT NULL AND nr_sequencia_gas_w::text <> '') then --Se o procedimento é de gasoterapia, então a data inicial e final, gera conforme a gasoterapia deste procedimento
	begin
	select	max(b.dt_evento)
	into STRICT	dt_inicio_proced_w
	FROM procedimento_paciente c, prescr_gasoterapia a
LEFT OUTER JOIN prescr_gasoterapia_evento b ON (a.nr_sequencia = b.nr_seq_gasoterapia)
WHERE a.nr_seq_gas	= c.nr_sequencia_gas and a.nr_prescricao = c.nr_prescricao and c.nr_sequencia	= nr_seq_procedimento_p and coalesce(b.ie_evento_valido,'S') = 'S' and b.ie_evento =  'I'; --Iniciada
	--and	rownum	= 1;
	exception
	when others then
		null;
	end;

	begin
	select	max(b.dt_evento)
	into STRICT	dt_fim_proced_w
	FROM procedimento_paciente c, prescr_gasoterapia a
LEFT OUTER JOIN prescr_gasoterapia_evento b ON (a.nr_sequencia = b.nr_seq_gasoterapia)
WHERE a.nr_seq_gas	= c.nr_sequencia_gas and a.nr_prescricao = c.nr_prescricao and c.nr_sequencia	= nr_seq_procedimento_p and coalesce(b.ie_evento_valido,'S') = 'S' and b.ie_evento =  'T'; --Terminada
	--and	rownum	= 1;
	exception
	when others then
		null;
	end;

end if;

if (ie_opcao_p = 'E') then
	dt_retorno_w	:= dt_procedimento_w;
elsif (ie_opcao_p = 'I') then
	dt_retorno_w	:= dt_inicio_proced_w;
elsif (ie_opcao_p = 'F') then
	dt_retorno_w	:= dt_fim_proced_w;
end if;

select 	coalesce(max(ie_data_proc), 'CP')
into STRICT 	ie_data_proc_conv_w
from	tiss_parametros_convenio
where	cd_convenio		= cd_convenio_p
and	cd_estabelecimento	= cd_estabelecimento_w;

select	max(cd_area_procedimento),
	max(cd_especialidade),
	max(cd_grupo_proc)
into STRICT	cd_area_procedimento_w,
	cd_especialidade_w,
	cd_grupo_proc_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;

if (ie_data_proc_conv_w = 'CR') then

	open c01;
	loop
	fetch c01 into
		ie_data_inicial_w,
		ie_data_final_w,
		ie_data_proc_w,
		ie_pacote_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		if (ie_pacote_w	= 'T') or (nr_seq_proc_pacote_w IS NOT NULL AND nr_seq_proc_pacote_w::text <> '') then

			if (ie_opcao_p	= 'I') then
				if (ie_data_inicial_w = 'E') then
					select	max(obter_data_entrada(b.nr_atendimento))
					into STRICT	dt_entrada_w
					from	conta_paciente b,
						procedimento_paciente a
					where	a.nr_interno_conta	= b.nr_interno_conta
					and	a.nr_sequencia	= nr_seq_procedimento_p;

					dt_retorno_w	:= dt_entrada_w;
				elsif (ie_data_inicial_w = 'P') then
					dt_retorno_w	:= dt_inicio_proced_w;
				elsif (ie_data_inicial_w = 'D') then
					dt_retorno_w	:= dt_fim_proced_w;
				elsif (ie_data_inicial_w = 'IC') then
					dt_retorno_w	:= dt_periodo_inicial_w;
				elsif (ie_data_inicial_w = 'CI') then
					select	coalesce(max(dt_inicio_real),dt_procedimento_w)
					into STRICT	dt_retorno_w
					from	cirurgia
					where	nr_cirurgia		= nr_cirurgia_w;

				elsif (ie_data_inicial_w = 'FC') then
					dt_retorno_w := dt_periodo_final_w;

				end if;

			elsif (ie_opcao_p	= 'E') then --Elton OS120472 - Criada opção para data de execução do Procedimento.
				if (ie_data_proc_w = 'E') then
					select	max(obter_data_entrada(b.nr_atendimento))
					into STRICT	dt_entrada_w
					from	conta_paciente b,
						procedimento_paciente a
					where	a.nr_interno_conta	= b.nr_interno_conta
					and	a.nr_sequencia	= nr_seq_procedimento_p;

					dt_retorno_w	:= dt_entrada_w;
				elsif (ie_data_proc_w = 'P') then
					dt_retorno_w	:= dt_inicio_proced_w;
				elsif (ie_data_proc_w = 'D') then
					dt_retorno_w	:= dt_fim_proced_w;
				elsif (ie_data_proc_w = 'IC') then
					dt_retorno_w	:= dt_periodo_inicial_w;
				elsif (ie_data_proc_w = 'CI') then
					select	coalesce(max(dt_inicio_real),dt_procedimento_w)
					into STRICT	dt_retorno_w
					from	cirurgia
					where	nr_cirurgia		= nr_cirurgia_w;
				elsif (ie_data_proc_w = 'FC') then
					dt_retorno_w	:= dt_periodo_final_w;
				end if;

			else
				if (ie_data_final_w = 'A') then
					select	max(a.dt_alta)
					into STRICT	dt_alta_w
					from	atendimento_paciente a,
						conta_paciente b,
						procedimento_paciente c
					where	c.nr_interno_conta	= b.nr_interno_conta
					and	b.nr_atendimento	= a.nr_atendimento
					and	c.nr_sequencia	= nr_seq_procedimento_p;

					dt_retorno_w	:= dt_alta_w;
				elsif (ie_data_final_w = 'P') then
					dt_retorno_w	:= dt_fim_proced_w;
				elsif (ie_data_final_w = 'C') then
					dt_retorno_w	:= dt_conta_w;
				elsif (ie_data_final_w = 'IC') then
					dt_retorno_w	:= dt_periodo_inicial_w;
				elsif (ie_data_final_w = 'CI') then
					select	coalesce(max(dt_termino),dt_procedimento_w)
					into STRICT	dt_retorno_w
					from	cirurgia
					where	nr_cirurgia		= nr_cirurgia_w;
				elsif (ie_data_final_w = 'FC') then
					dt_retorno_w	:= dt_periodo_final_w;
				end if;
			end if;
		end if;

	end loop;
	close c01;
end if;

return dt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION tiss_obter_data_proc (nr_seq_procedimento_p bigint, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, ie_despesa_p text, ie_opcao_p text) FROM PUBLIC;

