-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_cta_val_obter_restr_pres (ie_opcao_p text, cursor_p integer, dados_filtro_prest_p pls_tipos_cta_val_pck.dados_filtro_prest) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Obter a restrição que será usada para filtrar os dados conforme filtro cadastrado
	para a regra de ocorrência;
	Atualizar os valores da binds da restrição conforme dados informados nos fitros.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Realizar tratamento para os campos IMP quando hourver necessidade

------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_restricao_w		varchar(14000);
ds_select_prest_w	varchar(4000);
ds_filtro_prest_w	varchar(4000);

BEGIN

--Inicializar as variáveis.
ds_filtro_prest_w	:= null;
ds_restricao_w		:= null;

-- Montar o subselect base.
ds_select_prest_w := pls_util_pck.enter_w||	'and	exists ('||pls_util_pck.enter_w||
				'			select	1 '||pls_util_pck.enter_w||
				'			from	pls_prestador prest '||pls_util_pck.enter_w||
				'			where	1 = 1 ';
-- É obrigatório que o campo IE_TIPO_PRESTADOR esteja informado para que a regra seja verificada.
if (dados_filtro_prest_p.ie_tipo_prestador IS NOT NULL AND dados_filtro_prest_p.ie_tipo_prestador::text <> '') then

	-- Aqui verifca qual prestador da conta será utilizado, se for o prestador de pagamento então será utilizado a function específica para ele, caso contrário será utilizado uma function
	-- que engloba os outros tipos de prestador. Caso uma dessas functions não retorne nada não deve ser filtrado.
	if (dados_filtro_prest_p.ie_tipo_prestador = 'P') then
		-- Obter  o acesso a tabela pls_prestador para o prestador de pagamento.
		ds_filtro_prest_w := pls_cta_val_obter_rest_pres_pa(dados_filtro_prest_p);
	else
		-- obter o acesso a tabela pls_prestador através dos tipos de prestador diferente de prestador de pagamento.
		ds_filtro_prest_w := pls_cta_val_obter_rest_pre_pad(dados_filtro_prest_p);
	end if;

	-- Neste momento já devemos ter alguma informação na restrição do prestador para saber qual prestador será utilizado na verificação e não ser feito um acesso full na PLS_PRESTADOR
	if (ds_filtro_prest_w IS NOT NULL AND ds_filtro_prest_w::text <> '') then

		-- Código do prestador
		if (dados_filtro_prest_p.cd_prestador IS NOT NULL AND dados_filtro_prest_p.cd_prestador::text <> '') then

			if (ie_opcao_p = 'RESTRICAO') then
				ds_filtro_prest_w := ds_filtro_prest_w|| pls_util_pck.enter_w || '	and	prest.cd_prestador = :cd_prestador ';
			else
				dbms_sql.bind_variable(cursor_p, ':cd_prestador', dados_filtro_prest_p.cd_prestador);
			end if;
		end if;

		-- Sequência do prestador
		if (dados_filtro_prest_p.nr_seq_prestador IS NOT NULL AND dados_filtro_prest_p.nr_seq_prestador::text <> '') then

			if (ie_opcao_p = 'RESTRICAO') then
				ds_filtro_prest_w := ds_filtro_prest_w|| pls_util_pck.enter_w || '	and	prest.nr_sequencia = :nr_seq_prestador ';
			else
				dbms_sql.bind_variable(cursor_p, ':nr_seq_prestador', dados_filtro_prest_p.nr_seq_prestador);
			end if;
		end if;

		ds_select_prest_w := ds_select_prest_w || ds_filtro_prest_w ||  pls_util_pck.enter_w || '		)';

		-- No caso dos prestadores não deve ser acicionada a restrição pois se o filtro estiver vazio então será feito um acesso full na PLS_PRESTADOR e nós não queremos isso.
		if ((ds_filtro_prest_w IS NOT NULL AND ds_filtro_prest_w::text <> '') and ie_opcao_p = 'RESTRICAO') then
			ds_restricao_w := ds_select_prest_w;
		end if;
	end if;
end if;

return	ds_restricao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_cta_val_obter_restr_pres (ie_opcao_p text, cursor_p integer, dados_filtro_prest_p pls_tipos_cta_val_pck.dados_filtro_prest) FROM PUBLIC;

