-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_ageint_item_trigger ( cd_agenda_p bigint, nr_seq_agenda_int_p bigint, cd_estabelecimento_p bigint, nr_seq_proc_interno_p bigint, cd_especialidade_p bigint, cd_medico_p text, cd_medico_exame_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_item_ageint_p bigint, qt_idade_p bigint default null) RETURNS varchar AS $body$
DECLARE


ds_Retorno_w		varchar(1)	:= 'N';

nr_seq_proc_interno_w	bigint;
cd_especialidade_w	integer;
cd_medico_w		varchar(10);
ie_tipo_agendamento_w	varchar(15);
cd_tipo_agenda_w	bigint;
cd_espec_agenda_w	integer;
cd_pessoa_fisica_w	varchar(10);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_seq_regra_w		bigint;
qt_exclusivo_w		integer;
ie_Agenda_w		varchar(2);
qt_regra_w		integer;
cd_estabelecimento_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_area_proced_w	bigint;
cd_espec_proced_w	bigint;
cd_grupo_proced_w	bigint;
cd_plano_w		varchar(10);
nr_seq_grupo_w		bigint;
ie_cons_lib_grupo_exames_w	varchar(1);
nr_seq_forma_org_w	bigint;
nr_seq_grupo_sus_w	bigint;
nr_seq_subgrupo_w	bigint;

C01 CURSOR FOR
	SELECT	coalesce(nr_sequencia,0)
	from	agenda_regra
	where	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	and	cd_agenda = cd_agenda_p
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
	and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))
	and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = ''))
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))
	and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	and	((cd_medico = cd_medico_exame_p) or (coalesce(cd_medico::text, '') = ''))
	and	coalesce(qt_idade_p,0) >= coalesce(qt_idade_min,0)
	and 	coalesce(qt_idade_p,0) <= coalesce(qt_idade_max,999)
	and	coalesce(cd_municipio_ibge::text, '') = ''
	and	coalesce(nr_seq_grupo_ageint::text, '') = ''
	and	coalesce(ie_situacao,'A') = 'A'
	order by coalesce(cd_convenio,0),
		coalesce(cd_procedimento,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_proc,0),
		coalesce(nr_seq_forma_org,0),
		coalesce(nr_seq_subgrupo,0),
		coalesce(nr_seq_grupo,0),
		coalesce(cd_medico,'0'),
		coalesce(cd_perfil,0);


BEGIN
select	coalesce(max(obter_valor_param_usuario(869, 218, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p)), 'S')
into STRICT	ie_cons_lib_grupo_exames_w
;

select	cd_convenio,
	cd_categoria,
	cd_estabelecimento,
	cd_plano
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_estabelecimento_w,
	cd_plano_w
from	agenda_integrada
where	nr_sequencia	= nr_seq_agenda_int_p;

select	max(cd_tipo_agenda),
	max(cd_especialidade),
	max(cd_pessoa_fisica)
into STRICT	cd_tipo_agenda_w,
	cd_espec_agenda_w,
	cd_pessoa_fisica_w
from	agenda
where	cd_agenda	= cd_agenda_p;


if (coalesce(cd_procedimento_p,0)	= 0) or (coalesce(ie_origem_proced_p,0)	= 0) then
	SELECT * FROM obter_proc_tab_interno_conv(
				nr_seq_proc_interno_p, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
else
	cd_procedimento_w	:= cd_procedimento_p;
	ie_origem_proced_w	:= ie_origem_proced_p;
end if;

select	coalesce(max(cd_area_procedimento),0),
	coalesce(max(cd_especialidade),0),
	coalesce(max(cd_grupo_proc),0),
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento,ie_origem_proced, 'C', 'F'),'F'),1,10)),0),
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento,ie_origem_proced, 'C', 'G'),'G'),1,10)),0),
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento,ie_origem_proced, 'C', 'S'),'S'),1,10)),0)
into STRICT	cd_area_proced_w,
	cd_espec_proced_w,
	cd_grupo_proced_w,
	nr_seq_forma_org_w,
	nr_seq_grupo_sus_w,
	nr_seq_subgrupo_w
from	estrutura_procedimento_v
where	cd_procedimento = cd_procedimento_w
and	ie_origem_proced = ie_origem_proced_w;

if (cd_tipo_agenda_w = 2) then
	select	count(*)
	into STRICT	qt_exclusivo_w
	from	agenda_regra
	where	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
	and	cd_agenda 		= cd_agenda_p
	and	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
	and	((cd_medico = cd_medico_exame_p) or (coalesce(cd_medico::text, '') = ''))
	and	coalesce(qt_idade_p,0) >= coalesce(qt_idade_min,0)
	and 	coalesce(qt_idade_p,0) <= coalesce(qt_idade_max,999)
	and	coalesce(nr_seq_grupo_ageint::text, '') = ''
	and	ie_permite = 'E'
	and	coalesce(ie_situacao,'A') = 'A';

	if (qt_exclusivo_w > 0) then

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_regra_w
		from	agenda_regra
		where	coalesce(cd_estabelecimento, cd_estabelecimento_p) 	= cd_estabelecimento_p
		and	cd_agenda 		= cd_agenda_p
		and	((cd_convenio 		= cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
		and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = ''))
		and	((cd_area_proc = cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = ''))
		and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
		and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
		and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
		and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))
		and	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = ''))
		and	((cd_medico 		= cd_medico_exame_p) or (coalesce(cd_medico::text, '') = ''))
		and	coalesce(qt_idade_p,0) >= coalesce(qt_idade_min,0)
		and 	coalesce(qt_idade_p,0) <= coalesce(qt_idade_max,999)
		and	coalesce(nr_seq_grupo_ageint::text, '') = ''
		and	ie_permite = 'E'
		and	coalesce(ie_situacao,'A') = 'A';

		if (nr_seq_regra_w = 0) then
			ds_retorno_w	:= 'N';
		else
			ds_retorno_w	:= 'S';
		end if;
	else
		open C01;
		loop
		fetch C01 into
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			nr_seq_regra_w := nr_seq_regra_w;
			end;
		end loop;
		close C01;



		if (nr_seq_regra_w > 0) then

			select	coalesce(max(ie_permite),'S')
			into STRICT	ie_agenda_w
			from	agenda_regra
			where	nr_sequencia = nr_seq_regra_w;


			if (ie_agenda_w = 'S') then
				ds_retorno_w	:= 'S';
			end if;

			if (ie_agenda_w in ('N', 'Q')) then
				ds_retorno_w	:= 'N';
			end if;

		end if;

	end if;

	if (ds_retorno_w	= 'S') then
		ds_retorno_w	:= ageint_obter_regra_med_exame(cd_medico_exame_p, cd_agenda_p, nr_seq_proc_interno_p, nr_seq_Agenda_int_p, cd_procedimento_p, ie_origem_proced_p);
	end if;
elsif (cd_tipo_agenda_w in (3,4)) then
	if	((cd_medico_p		= cd_pessoa_fisica_w) or (coalesce(cd_medico_p::text, '') = '')) and
		((cd_espec_agenda_w	= cd_especialidade_p) or (coalesce(cd_especialidade_p::text, '') = '')) then
		ds_retorno_w	:= 'S';
	else
		ds_Retorno_w	:= 'N';
	end if;
end if;

if (ds_retorno_w	= 'S') then
	return	ds_Retorno_w;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_ageint_item_trigger ( cd_agenda_p bigint, nr_seq_agenda_int_p bigint, cd_estabelecimento_p bigint, nr_seq_proc_interno_p bigint, cd_especialidade_p bigint, cd_medico_p text, cd_medico_exame_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_item_ageint_p bigint, qt_idade_p bigint default null) FROM PUBLIC;

