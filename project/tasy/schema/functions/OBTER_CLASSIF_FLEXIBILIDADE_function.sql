-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE v_faixa_etaria AS (v_faixa_etaria smallint[6]);
CREATE TYPE v_ind_flexibilidade AS (v_ind_flexibilidade real[5]);
CREATE TYPE v_classif_flexibilidade AS (v_classif_flexibilidade v_ind_flexibilidade[6]);


CREATE OR REPLACE FUNCTION obter_classif_flexibilidade ( cd_pessoa_fisica_p text, qt_ind_flexibilidade_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Retornar a classificação de flexibidade do paciente, segundo a idade, sexo e alcance auferido
conforme a tabela abaixo:
-----------------------------------------------------------------------------------------------------------------------------------------
Idade, sexo = M 	15-19	20-29	30-39	40-49	50-59	60-69
------------------------------------------------------------------------------------------------------------------------------
Excelente		>=39	>= 40	>= 38	>= 35	>=35	>= 33
Acima da Média	34 - 38	34 - 39	33 - 37	29 - 34	28 - 34	25 - 32
Média		29 - 33	30 - 33	28 - 32	24 - 28	24 - 27	20 - 24
Abaixo da média	24 - 28	25 - 29	23 - 27	18 - 33	16 - 23	15 - 19
Ruim		<= 23	<= 24	<= 22	<= 17	<= 15	<= 14
------------------------------------------------------------------------------------------------------------------------------
Idade, sexo = F |	15-19	20-29	30-39	40-49	50-59	60-69
------------------------------------------------------------------------------------------------------------------------------
Excelente		>=43	>= 41	>= 41	>= 38	>=39	>= 35
Acima da Média	38 - 42	37 - 40	36 - 40	34 - 37	33 - 38	31 - 34
Média		34 - 37	33 - 36	32 - 35	30 - 33	30 - 32	27 - 30
Abaixo da média	29 - 33	28 - 32	27 - 31	25 - 29	25 - 29	23 - 26
Ruim		<= 28	<= 27	<= 26	<= 24	<= 24	<= 22
------------------------------------------------------------------------------------------------------------------------------
Fonte: Canadian Standardized Teste of Fitness (CSTF)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
  -- Este vetor (type) conterá a faixa etária, que é igual para ambos os sexos.
 -- Este vetor (type) conterá a da faixa de valores de uma classificação (Excelente, Média, ...)
  -- Este vetor (type) é um collection de vetores de faixa de classificação e conterá todas as faixas possíveis.
v_faixa_etaria_w		v_faixa_etaria;
v_ind_flexibilidade_01_w	v_ind_flexibilidade;
v_ind_flexibilidade_02_w	v_ind_flexibilidade;
v_ind_flexibilidade_03_w	v_ind_flexibilidade;
v_ind_flexibilidade_04_w	v_ind_flexibilidade;
v_ind_flexibilidade_05_w	v_ind_flexibilidade;
v_ind_flexibilidade_06_w	v_ind_flexibilidade;
v_classif_flexibilidade_w	v_classif_flexibilidade;
ds_cassif_flexibilidade_w	varchar(255);
ie_sexo_pf_w			varchar(1);
qt_idade_pf_w			smallint;
cd_classificacao_w		smallint := 0;
BEGIN


if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (qt_ind_flexibilidade_p IS NOT NULL AND qt_ind_flexibilidade_p::text <> '') then

	ie_sexo_pf_w := substr(Obter_Sexo_PF(cd_pessoa_fisica_p, 'C'), 1, 1);
	qt_idade_pf_w := Campo_numerico(Obter_Idade_PF(cd_pessoa_fisica_p, clock_timestamp(), 'A'));

	if (ie_sexo_pf_w IS NOT NULL AND ie_sexo_pf_w::text <> '') and (qt_idade_pf_w IS NOT NULL AND qt_idade_pf_w::text <> '') and (qt_idade_pf_w > 14) and (qt_idade_pf_w <  70) then
		-- Vetor com o valor limite de cada faixa etária
		v_faixa_etaria_w := v_faixa_etaria(19, 29, 39, 49, 59, 69);

		if (ie_sexo_pf_w = 'M') then
			-- Vetores com valor mínimo para  cada classificação do sexo Masculino, em ordem crescente
			v_ind_flexibilidade_01_w := v_ind_flexibilidade(0, 24, 29, 34, 39); -- Valores para classificação, idade 15 - 19
			v_ind_flexibilidade_02_w := v_ind_flexibilidade(0, 25, 30, 34, 40); -- Valores para classificação, idade 20 - 29
			v_ind_flexibilidade_03_w := v_ind_flexibilidade(0, 23, 28, 33, 38); -- Valores para classificação, idade 30 - 39
			v_ind_flexibilidade_04_w := v_ind_flexibilidade(0, 18, 24, 29, 35); -- Valores para classificação, idade 40 - 49
			v_ind_flexibilidade_05_w := v_ind_flexibilidade(0, 16, 24, 28, 35); -- Valores para classificação, idade 50 - 59
			v_ind_flexibilidade_06_w := v_ind_flexibilidade(0, 15, 20, 25, 33); -- Valores para classificação, idade 60 - 69
		elsif (ie_sexo_pf_w = 'F') then
			-- Vetores com valor mínimo para  cada classificação do sexo Feminino, em ordem crescente
			v_ind_flexibilidade_01_w := v_ind_flexibilidade(0, 29, 34, 38, 43); -- Valores para classificação, idade 15 - 19
			v_ind_flexibilidade_02_w := v_ind_flexibilidade(0, 28, 33, 37, 41); -- Valores para classificação, idade 20 - 29
			v_ind_flexibilidade_03_w := v_ind_flexibilidade(0, 27, 32, 36, 41); -- Valores para classificação, idade 30 - 39
			v_ind_flexibilidade_04_w := v_ind_flexibilidade(0, 25, 30, 34, 38); -- Valores para classificação, idade 40 - 49
			v_ind_flexibilidade_05_w := v_ind_flexibilidade(0, 25, 30, 33, 39); -- Valores para classificação, idade 50 - 59
			v_ind_flexibilidade_06_w := v_ind_flexibilidade(0, 23, 27, 31, 35); -- Valores para classificação, idade 60 - 69
		end if;

		-- Vetor de coleção para as 6 possíveis faixas etárias
		v_classif_flexibilidade_w := v_classif_flexibilidade(v_ind_flexibilidade_01_w, v_ind_flexibilidade_02_w,
		                                                     v_ind_flexibilidade_03_w, v_ind_flexibilidade_04_w,
		                                                     v_ind_flexibilidade_05_w, v_ind_flexibilidade_06_w);

		<<faixa_etaria_loop>>
		for i in 1..6 loop
		-- Loop verificando a faixa etária, cada posição do vetor contém o limite da faixa, assim só entrará na condição quando a pessoa se enquadrar na faixa.
			if (qt_idade_pf_w <= v_faixa_etaria_w(i)) then

				for z in 1..5 loop
				-- Loop para verificar a classificação, conforme flexibilidade, dentro da faixa etária da pessoa
					if	(qt_ind_flexibilidade_p >= v_classif_flexibilidade_w(i)(z)) then
						cd_classificacao_w := z; -- pode ser atribuída uma faixa inicial, que pode ser substiuída, durante o loop, for uma faixa maior.
					end if;
					-- quando o índice da pessoa for menor que a faixa atual, não há necessidade de prosseguir, interrompendo o loop de aliás faixa_etaria_loop
					exit faixa_etaria_loop when qt_ind_flexibilidade_p < v_classif_flexibilidade_w(i)(z);

				end loop;

			end if;

		end loop faixa_etaria_loop;

		case cd_classificacao_w
			when 1 then 	ds_cassif_flexibilidade_w := obter_valor_dominio_idioma(8115, '1', wheb_usuario_pck.get_nr_seq_idioma); -- 'Ruim';
			when 2 then 	ds_cassif_flexibilidade_w := obter_valor_dominio_idioma(8115, '2', wheb_usuario_pck.get_nr_seq_idioma); --'Abaixo da média';
			when 3 then 	ds_cassif_flexibilidade_w := obter_valor_dominio_idioma(8115, '3', wheb_usuario_pck.get_nr_seq_idioma); --'Média';
			when 4 then	ds_cassif_flexibilidade_w := obter_valor_dominio_idioma(8115, '4', wheb_usuario_pck.get_nr_seq_idioma); --'Acima da média';
			when 5 then 	ds_cassif_flexibilidade_w := obter_valor_dominio_idioma(8115, '5', wheb_usuario_pck.get_nr_seq_idioma); --'Excelente';
			else 		ds_cassif_flexibilidade_w := null;
		end case;

	end if;

end if;

return	ds_cassif_flexibilidade_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_classif_flexibilidade ( cd_pessoa_fisica_p text, qt_ind_flexibilidade_p bigint) FROM PUBLIC;

