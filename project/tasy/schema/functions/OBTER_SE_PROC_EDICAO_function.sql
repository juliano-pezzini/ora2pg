-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proc_edicao (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint, ie_tipo_atendimento_p bigint, ie_origem_proced_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_seq_exame_p bigint default null) RETURNS varchar AS $body$
DECLARE


VL_CH_HONORARIOS_W		double precision;
VL_CH_CUSTO_OPER_W		double precision;
VL_M2_FILME_W			double precision;
dt_vigencia_w			timestamp;
dt_final_vigencia_w			timestamp;
cd_edicao_amb_w			integer;
cd_edicao_ajuste_w		integer;
ie_origem_proced_w		bigint;
ie_origem_proced_edicao_w		bigint;
qt_preco_w			bigint	:= 0;
TX_AJUSTE_GERAL_w		double precision;
ie_liberado_edicao_w		varchar(01)	:=  'N';
ie_tipo_convenio_w			smallint;
nr_aux_w				double precision;
ds_aux_w			varchar(200);
ie_glosa_w			varchar(2);
cd_proc_ajuste_w			bigint;
ie_origem_proced_ww		bigint;
IE_REGRA_PRIOR_EDICAO_w	varchar(03)	:= 'DT';
ie_prioridade_w			bigint;
nr_seq_ajuste_W			bigint;

qt_proc_edicao_w			bigint;
ie_origem_proc_w			bigint;

ie_origem_procedimento_w	bigint;
qt_proc_w			bigint;

ie_origem_edicao_ajuste_w	bigint;
nr_seq_proc_int_ajuste_w	regra_ajuste_proc.nr_seq_proc_interno%type;
nr_seq_exame_w			regra_ajuste_proc.nr_seq_exame%type;

c01 CURSOR FOR
	SELECT 	ie_prioridade,
		CD_EDICAO_AMB,
       		CASE WHEN coalesce(VL_CH_HONORARIOS::text, '') = '' THEN 1 WHEN VL_CH_HONORARIOS=0 THEN 1  ELSE VL_CH_HONORARIOS END ,
	       	CASE WHEN coalesce(VL_CH_CUSTO_OPER::text, '') = '' THEN 1 WHEN VL_CH_CUSTO_OPER=0 THEN 1  ELSE VL_CH_CUSTO_OPER END ,
       		coalesce(VL_FILME,0),
		dt_inicio_vigencia,
		dt_final_vigencia,
		coalesce(TX_AJUSTE_GERAL, 1)
	FROM	CONVENIO_AMB
	WHERE (CD_ESTABELECIMENTO     = CD_ESTABELECIMENTO_P)
	AND (CD_CONVENIO            = CD_CONVENIO_P)
	AND (CD_CATEGORIA           = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
	AND (coalesce(IE_SITUACAO,'A')	= 'A')
	AND 	(DT_INICIO_VIGENCIA     =
      		(SELECT MAX(DT_INICIO_VIGENCIA)
	       	FROM 	CONVENIO_AMB A
	       	WHERE (A.CD_ESTABELECIMENTO  = CD_ESTABELECIMENTO_P)
	        AND (A.CD_CONVENIO         = CD_CONVENIO_P)
	        AND (A.CD_CATEGORIA        = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
		AND (coalesce(A.IE_SITUACAO,'A')= 'A')
	        --AND 	(A.DT_INICIO_VIGENCIA <=  DT_CONTA_P)))
		AND (TRUNC(DT_CONTA_P,'dd') BETWEEN a.dt_inicio_vigencia AND coalesce(a.dt_final_vigencia, dt_conta_p))))
	and	IE_REGRA_PRIOR_EDICAO_w	= 'DT'
	
union

	SELECT 	ie_prioridade,
		CD_EDICAO_AMB,
       		CASE WHEN coalesce(VL_CH_HONORARIOS::text, '') = '' THEN 1 WHEN VL_CH_HONORARIOS=0 THEN 1  ELSE VL_CH_HONORARIOS END ,
	       	CASE WHEN coalesce(VL_CH_CUSTO_OPER::text, '') = '' THEN 1 WHEN VL_CH_CUSTO_OPER=0 THEN 1  ELSE VL_CH_CUSTO_OPER END ,
       		coalesce(VL_FILME,0),
		dt_inicio_vigencia,
		dt_final_vigencia,
		coalesce(TX_AJUSTE_GERAL, 1)
	FROM	CONVENIO_AMB
	WHERE (CD_ESTABELECIMENTO     = CD_ESTABELECIMENTO_P)
	AND (CD_CONVENIO            = CD_CONVENIO_P)
	AND (CD_CATEGORIA           = coalesce(CD_CATEGORIA_P,CD_CATEGORIA))
	AND (coalesce(IE_SITUACAO,'A')	= 'A')
	--AND 	(DT_INICIO_VIGENCIA     =
      	--	(SELECT MAX(DT_INICIO_VIGENCIA)
	--     	FROM 	CONVENIO_AMB A
	--      	WHERE 	(A.CD_ESTABELECIMENTO  = CD_ESTABELECIMENTO_P)
	--        	AND 	(A.CD_CONVENIO         = CD_CONVENIO_P)
	--        	AND 	(A.CD_CATEGORIA        = nvl(CD_CATEGORIA_P,CD_CATEGORIA))
	--	AND 	(nvl(A.IE_SITUACAO,'A')= 'A')
	--        	AND 	(A.DT_INICIO_VIGENCIA <=  DT_CONTA_P)))
	--AND 	DT_INICIO_VIGENCIA <=  DT_CONTA_P  -- Retirado as linhas acima e incluÃ­do essa linha
	AND (TRUNC(DT_CONTA_P,'dd') BETWEEN dt_inicio_vigencia AND coalesce(dt_final_vigencia, dt_conta_p))
	and	IE_REGRA_PRIOR_EDICAO_w	= 'PR'
	order by 1, 5;


BEGIN

select	max(ie_tipo_convenio)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= cd_convenio_p;

select	coalesce(max(IE_REGRA_PRIOR_EDICAO), 'DT')
into STRICT	IE_REGRA_PRIOR_EDICAO_w
from	convenio_estabelecimento
where	cd_estabelecimento 	= CD_ESTABELECIMENTO_P
and	cd_convenio		= cd_convenio_p;

select 	min(ie_origem_proced)
into STRICT	ie_origem_proced_ww
from 	procedimento
where 	cd_procedimento = cd_procedimento_p
and	ie_situacao	= 'A';

if (ie_tipo_convenio_w	= 3) and (ie_origem_proced_ww in (2,3,7)) then
	ie_liberado_edicao_w	:= 'S';
else
	open	c01;
	loop
	fetch	c01 into
		ie_prioridade_w,
		CD_EDICAO_AMB_W,
	       	VL_CH_HONORARIOS_W,
       		VL_CH_CUSTO_OPER_W,
	       	VL_M2_FILME_W,
		dt_vigencia_w,
		dt_final_vigencia_w,
		TX_AJUSTE_GERAL_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (qt_preco_w = 0) and
			((coalesce(dt_final_vigencia_w::text, '') = '') or (trunc(dt_conta_p,'dd') <= dt_final_vigencia_w)) then
			begin

			select	max(ie_origem_proced)
			into STRICT	ie_origem_proced_edicao_w
			from	edicao_amb
			where	cd_edicao_amb	= cd_edicao_amb_w;


			if (cd_edicao_amb_w	= 2004) or (ie_origem_proced_edicao_w = 5) then
				ie_origem_proced_w	:= 5;
			elsif (ie_origem_proced_edicao_w not in (1,4)) then
				ie_origem_proced_w	:= ie_origem_proced_edicao_w;
			else

				ie_origem_procedimento_w:= null;

				select 	count(*)
				into STRICT	qt_proc_w
				from 	procedimento
				where 	cd_procedimento = cd_procedimento_p;

				if (qt_proc_w = 1) then

					select 	coalesce(max(ie_origem_proced),1)
					into STRICT	ie_origem_procedimento_w
					from 	procedimento
					where 	cd_procedimento = cd_procedimento_p;

				end if;

				select	coalesce(min(b.ie_origem_proced), coalesce(ie_origem_procedimento_w, 1))
				into STRICT	ie_origem_proced_w
				from	procedimento	a,
					preco_amb	b
				where	a.cd_procedimento	= cd_procedimento_p
				and 	a.cd_procedimento	= b.cd_procedimento
				and 	b.cd_edicao_amb		= cd_edicao_amb_w;

				ie_origem_proc_w		:= ie_origem_proced_w;

				if (ie_origem_proced_w	<> ie_origem_proced_edicao_w) then
					ie_origem_proced_w	:= ie_origem_proced_edicao_w;
				end if;
			end if;

			if (ie_origem_proced_w = 5) then
				select	count(*)
				into STRICT	qt_preco_w
				from	cbhpm_preco
				where	cd_procedimento		= cd_procedimento_p
				and	ie_origem_proced	= coalesce(ie_origem_proced_p,ie_origem_proced_w);
			else
				select	count(*)
				into STRICT	qt_preco_w
				from	preco_amb
				where	cd_edicao_amb		= cd_edicao_amb_w
				and	cd_procedimento		= cd_procedimento_p
				and	ie_origem_proced	= coalesce(ie_origem_proced_p, ie_origem_proced)
				and	trunc(dt_conta_p,'dd') between coalesce(trunc(dt_inicio_vigencia),clock_timestamp() - interval '3650 days') and trunc(coalesce(dt_final_vigencia,dt_conta_p),'dd') + 86399/86400;
			end if;


			if (coalesce(cd_procedimento_p,0) = 0) then
				qt_preco_w	:= 1;
			end if;

			if (qt_preco_w > 0) then
				ie_liberado_edicao_w	:= 'S';
			end if;

			end;
		end if;

		end;
	end loop;
	close c01;
end if;


SELECT * FROM OBTER_REGRA_AJUSTE_PROC(	cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_procedimento_p, coalesce(ie_origem_proced_p,coalesce(ie_origem_proc_w,ie_origem_proced_w)), 'N', dt_conta_p, 0, coalesce(ie_tipo_atendimento_p,0), 0, null, 0, 0, nr_seq_exame_p, nr_seq_proc_interno_p, null, null, 0, 0, null, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, ds_aux_w, ie_glosa_w, nr_aux_w, nr_aux_w, cd_edicao_ajuste_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, null, null, ds_aux_w, nr_aux_w, ds_aux_w, nr_seq_ajuste_W, null, null, null, null, null, null, null, null, nr_aux_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, ds_aux_w, ie_glosa_w, nr_aux_w, nr_aux_w, cd_edicao_ajuste_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, nr_aux_w, ds_aux_w, nr_aux_w, ds_aux_w, nr_seq_ajuste_W, nr_aux_w;


select	coalesce(max(cd_procedimento),0),
	coalesce(max(nr_seq_proc_interno),0),
	coalesce(max(nr_seq_exame),0)
into STRICT	cd_proc_ajuste_w,
	nr_seq_proc_int_ajuste_w,
	nr_seq_exame_w
from	regra_ajuste_proc
where 	nr_sequencia		= nr_seq_ajuste_W;

if (ie_glosa_w 	= 'L') and
	((cd_proc_ajuste_w <> 0) or (nr_seq_proc_int_ajuste_w <> 0) or (nr_seq_exame_w <> 0)) then
	ie_liberado_edicao_w	:= 'S';
end if;

ie_origem_edicao_ajuste_w:= 1;

select 	coalesce(max(ie_origem_proced),1)
into STRICT	ie_origem_edicao_ajuste_w
from 	edicao_amb
where 	cd_edicao_amb = cd_edicao_ajuste_w
and 	coalesce(cd_edicao_ajuste_w,0) > 0;

if (coalesce(cd_edicao_ajuste_w,0) > 0) and
	((ie_glosa_w = 'H') or
	((ie_glosa_w = 'L') and (cd_proc_ajuste_w = 0) and (nr_seq_proc_int_ajuste_w = 0) and (nr_seq_exame_w = 0) and
	 (cd_edicao_ajuste_w <> 2004 AND ie_origem_edicao_ajuste_w <> 5))) then

	select 	count(*)
	into STRICT	qt_proc_edicao_w
	from 	preco_amb
	where 	cd_edicao_amb 		= cd_edicao_ajuste_w
	and 	cd_procedimento 	= cd_procedimento_p
	and 	ie_origem_proced	= coalesce(ie_origem_proced_p,coalesce(ie_origem_proc_w,ie_origem_proced_w))
	and	trunc(dt_conta_p,'dd') between coalesce(dt_inicio_vigencia,clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, dt_conta_p);


	if (qt_proc_edicao_w > 0 )then
		ie_liberado_edicao_w	:= 'S';
	else
		ie_liberado_edicao_w	:= 'N';
	end if;
end if;

return	ie_liberado_edicao_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proc_edicao (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_procedimento_p bigint, ie_tipo_atendimento_p bigint, ie_origem_proced_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_seq_exame_p bigint default null) FROM PUBLIC;

