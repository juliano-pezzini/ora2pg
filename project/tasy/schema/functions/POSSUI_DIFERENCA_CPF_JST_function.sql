-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION possui_diferenca_cpf_jst (NR_SEQUENCIA_SUP_P bigint, CD_PESSOA_FISICA_P text) RETURNS varchar AS $body$
DECLARE

  DS_RESULT_W varchar(1) := 'N';
  DS_SQL_W    varchar(4000);
  COUNT_REC_W bigint;

  FUNCTION MONTA_SQL(NR_SEQUENCIA_P bigint) RETURN text IS
    DS_COLUMN_W      varchar(4000);
    DS_COLUMN_CONV_W varchar(4000);

  X RECORD;
  C RECORD;

BEGIN
    FOR X IN (SELECT UT.COLUMN_NAME,
                     CASE WHEN UT.DATA_TYPE = 'NUMBER' THEN 'TO_NUMBER(X.' || UT.COLUMN_NAME || ') ' || UT.COLUMN_NAME
                          WHEN UT.DATA_TYPE = 'DATE' THEN 'TO_DATE(X.' || UT.COLUMN_NAME || ', ''DD/MM/YYYY'') ' || UT.COLUMN_NAME
                     ELSE 'X.' || UT.COLUMN_NAME END COLUMN_CONV
                FROM JSON_SCHEMA_T J INNER JOIN USER_TAB_COLUMNS UT ON (UT.TABLE_NAME = J.NM_TABELA
                                                                    AND UT.COLUMN_NAME = J.NM_ATRIBUTO)
               WHERE J.NM_TABELA = 'COMPL_PESSOA_FISICA'
                 AND J.NR_SEQUENCIA = NR_SEQUENCIA_P
                 AND NOT UT.DATA_TYPE IN ('LONG', 'LONG RAW', 'XMLTYPE', 'CLOB', 'NCLOB', 'BLOB')
               ORDER BY UT.COLUMN_ID) LOOP
        IF (DS_COLUMN_W IS NOT NULL AND DS_COLUMN_W::text <> '') THEN
          DS_COLUMN_W      := DS_COLUMN_W || ', ';
          DS_COLUMN_CONV_W := DS_COLUMN_CONV_W || ', ';
        END IF;

        DS_COLUMN_W      := DS_COLUMN_W || X.COLUMN_NAME;
        DS_COLUMN_CONV_W := DS_COLUMN_CONV_W || X.COLUMN_CONV;
    END LOOP;

    RETURN 'SELECT COUNT(*)' ||
            ' FROM (SELECT ' || DS_COLUMN_CONV_W ||
                    ' FROM COMPL_PESSOA_FISICA_JST_V X' ||
                   ' WHERE X.NR_SEQUENCIA_T = :NR_SEQUENCIA_T' ||
                   ' UNION' ||
                  ' SELECT ' || DS_COLUMN_W ||
                    ' FROM COMPL_PESSOA_FISICA X' ||
                   ' WHERE X.CD_PESSOA_FISICA = :CD_PESSOA_FISICA' ||
                     ' AND X.IE_TIPO_COMPLEMENTO = :IE_TIPO_COMPLEMENTO)';
  END;

BEGIN
  IF (coalesce(NR_SEQUENCIA_SUP_P, 0) <> 0
  AND (trim(both CD_PESSOA_FISICA_P) IS NOT NULL AND (trim(both CD_PESSOA_FISICA_P))::text <> '')) THEN
    FOR C IN (SELECT CPFJ.NR_SEQUENCIA_T,
                     CPFJ.IE_TIPO_COMPLEMENTO,
                     (CASE WHEN (CPF.IE_TIPO_COMPLEMENTO IS NOT NULL AND CPF.IE_TIPO_COMPLEMENTO::text <> '') THEN 'S' ELSE 'N' END) IE_CONTEM
                FROM COMPL_PESSOA_FISICA_JST_V CPFJ
                LEFT JOIN COMPL_PESSOA_FISICA CPF ON (CPF.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
                                                  AND CPF.IE_TIPO_COMPLEMENTO = CPFJ.IE_TIPO_COMPLEMENTO)
               WHERE CPFJ.NR_SEQUENCIA_SUP_T = NR_SEQUENCIA_SUP_P
               ORDER BY IE_CONTEM, CPFJ.IE_TIPO_COMPLEMENTO) LOOP
        IF (C.IE_CONTEM = 'N') THEN
           DS_RESULT_W := 'S';
           EXIT;
        END IF;

        DS_SQL_W := MONTA_SQL(C.NR_SEQUENCIA_T);

        EXECUTE DS_SQL_W
           INTO STRICT COUNT_REC_W
          USING C.NR_SEQUENCIA_T, CD_PESSOA_FISICA_P, C.IE_TIPO_COMPLEMENTO;

        IF (COUNT_REC_W > 1) THEN
           DS_RESULT_W := 'S';
           EXIT;
        END IF;
    END LOOP;
  END IF;

  RETURN DS_RESULT_W;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION possui_diferenca_cpf_jst (NR_SEQUENCIA_SUP_P bigint, CD_PESSOA_FISICA_P text) FROM PUBLIC;

