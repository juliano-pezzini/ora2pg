-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_oc_cta_obter_restr_23_imp ( dados_validacao_p pls_ocor_imp_pck.dados_regra_val_util_item, dados_conta_proc_p pls_ocor_imp_pck.dados_conta_proc, dados_conta_mat_p pls_ocor_imp_pck.dados_conta_mat, ie_proc_mat_p text, bind_sql_valor_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Obter a restrição a ser aplicada na validação 23 - Validar utilização de itens na importaçã de xml.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
* Para executar as verificações favor tentar respeitar a ordem de execução. Tratamentos que forem colocados para dados da conta devem ser executados antes de
tratamentos que serão executados para os itens das contas. Desta forma estamos controlando a verificação de forma mais acertiva controlando o acesso as
tabelas de itens, pois estas contém muito mais registros que a tabela da conta e assim evitamos que estas sejam acessadas desnecessariamente.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
retorno_w	pls_tipos_ocor_pck.dados_restricao_select;


BEGIN

------------------------------------------------------------------------  IE_TIPO_QTDE ------------------------------------------------------------------------
-- IE_TIPO_QTDE: 	Esta informação pode conter informações de período ou do atendimento. Será buscado as contas que se encaixem na regra informada comparando
-- 		com o item a ser consistido no momento para somar as quantidades liberadas e verificar o número de incidências encontradas.
-- Guia
if (dados_validacao_p.ie_tipo_qtde = 'G') then
	-- Quando for para verificar atendimentos na mesma guia deve ser buscado as contas pertencentes ou que referenciam aquela guia e buscar os itens que foram
	-- lançados para ela e se encaixam na regra informada.
	-- Quando for durante a importação deve ser olhado a informação que está sendo informada no campo IMP, caso contrário olha os campos quentes
	if (ie_proc_mat_p = 'P') then
		retorno_w.ds_restricao_proc :=	retorno_w.ds_restricao_proc || pls_tipos_ocor_pck.enter_w ||
						'and	outro_proc.cd_guia_referencia = :cd_guia_proc_imp ';
		bind_sql_valor_p := sql_pck.bind_variable(':cd_guia_proc_imp', dados_conta_proc_p.cd_guia_referencia, bind_sql_valor_p);
	elsif (ie_proc_mat_p = 'M') then
		retorno_w.ds_restricao_mat :=	retorno_w.ds_restricao_mat || pls_tipos_ocor_pck.enter_w ||
						'and	outro_mat.cd_guia_referencia = :cd_guia_mat_imp ';
		bind_sql_valor_p := sql_pck.bind_variable(':cd_guia_mat_imp', dados_conta_mat_p.cd_guia_referencia, bind_sql_valor_p);
	end if;


-- Conta
elsif (dados_validacao_p.ie_tipo_qtde = 'C') then
	-- Aqui busca apenas os itens da mesma conta.
	if (ie_proc_mat_p = 'P') then
		retorno_w.ds_restricao_proc :=	retorno_w.ds_restricao_proc || pls_tipos_ocor_pck.enter_w ||
						'and	outro_proc.nr_seq_conta = :nr_seq_conta ';
		bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_conta', dados_conta_proc_p.nr_seq_conta, bind_sql_valor_p);
	elsif (ie_proc_mat_p = 'M') then
		retorno_w.ds_restricao_mat :=	retorno_w.ds_restricao_mat || pls_tipos_ocor_pck.enter_w ||
						'and	outro_mat.nr_seq_conta = :nr_seq_conta ';
		bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_conta', dados_conta_mat_p.nr_seq_conta, bind_sql_valor_p);
	end if;
end if;

------------------------------------------------------------------------  IE_TIPO_PESSOA_QTDE  ------------------------------------------------------------------------
-- IE_TIPO_PESSOA_QTDE:Este campo refere-se ao checkBox mesmo beneficiário na validação.
if (dados_validacao_p.ie_tipo_pessoa_qtde = 'S') then
	-- Quando for par verificar "Todos" os tipos de pessoa possíveis na regra então só deve ser verificado os itens que tenham as mesmas informações de tais
	-- pessoas que o item que está sendo consistido. Por exemplo: Se for para verificar "Beneficiário"  e "Mesmo prestador executor" então só podem ser contados
	-- os itens que forem de contas do mesmo beneficiário e executadas pelo mesmo prestador.
	-- aqui é verificado apenas o segurado e por motivos de performance o prestador é verificado em pls_oc_cta_val_23_if_extra
	if (ie_proc_mat_p = 'P') then
		retorno_w.ds_restricao_proc :=	retorno_w.ds_restricao_proc || pls_tipos_ocor_pck.enter_w ||
						'and	outro_proc.nr_seq_segurado = :nr_seq_segurado ';
		bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_segurado', dados_conta_proc_p.nr_seq_segurado, bind_sql_valor_p);
	elsif (ie_proc_mat_p = 'M') then
		retorno_w.ds_restricao_mat :=	retorno_w.ds_restricao_mat || pls_tipos_ocor_pck.enter_w ||
						'and	outro_mat.nr_seq_segurado = :nr_seq_segurado ';
		bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_segurado', dados_conta_mat_p.nr_seq_segurado, bind_sql_valor_p);
	end if;
end if;

------------------------------------------------------------------------  IE_SOMAR_ESTRUTURA ------------------------------------------------------------------------
-- IE_SOMAR_ESTRUTURA:	Aqui verifica se é para somar os itens da estrura informada ou apenas verificar o item que está sendo consistido.
--			Para que os itens da estrutura sejam verificados, a própria estrutura deve ser informada, caso contrário verifica
--			apenas o item consistido.
if (dados_validacao_p.ie_somar_estrutura = 'S') then

	retorno_w.ds_restricao_proc :=	retorno_w.ds_restricao_proc || pls_tipos_ocor_pck.enter_w ||
					'and	exists(	select	1 ' || pls_tipos_ocor_pck.enter_w ||
					'		from	pls_estrutura_ocor_tm est '|| pls_tipos_ocor_pck.enter_w ||
					'		where	est.nr_seq_estrutura = :nr_seq_estrutura '|| pls_tipos_ocor_pck.enter_w ||
					'		and	est.cd_procedimento  = outro_proc.cd_procedimento '|| pls_tipos_ocor_pck.enter_w ||
					'		and	est.ie_origem_proced = outro_proc.ie_origem_proced'|| pls_tipos_ocor_pck.enter_w ||
					'	) ';

	retorno_w.ds_restricao_mat :=	retorno_w.ds_restricao_mat || pls_tipos_ocor_pck.enter_w ||
					'and	exists(	select	1 ' || pls_tipos_ocor_pck.enter_w ||
					'		from	pls_estrutura_ocor_tm est '|| pls_tipos_ocor_pck.enter_w ||
					'		where	est.nr_seq_estrutura = :nr_seq_estrutura'|| pls_tipos_ocor_pck.enter_w ||
					'		and	est.nr_seq_material  = outro_mat.nr_seq_material'|| pls_tipos_ocor_pck.enter_w ||
					'	) ';

	bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_estrutura', dados_validacao_p.nr_seq_estrutura, bind_sql_valor_p);
else

	if (ie_proc_mat_p = 'P') then
		retorno_w.ds_restricao_proc :=	retorno_w.ds_restricao_proc || pls_tipos_ocor_pck.enter_w ||
						'and	outro_proc.ie_origem_proced = :ie_origem_proced ' || pls_tipos_ocor_pck.enter_w ||
						'and	outro_proc.cd_procedimento = :cd_procedimento_imp ';
		bind_sql_valor_p := sql_pck.bind_variable(':ie_origem_proced', dados_conta_proc_p.ie_origem_proced, bind_sql_valor_p);
		bind_sql_valor_p := sql_pck.bind_variable(':cd_procedimento_imp', dados_conta_proc_p.cd_procedimento, bind_sql_valor_p);
	elsif (ie_proc_mat_p = 'M') then
		retorno_w.ds_restricao_mat :=	retorno_w.ds_restricao_mat || pls_tipos_ocor_pck.enter_w ||
						'and	outro_mat.nr_seq_material = :nr_seq_material ';
		bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_material', dados_conta_mat_p.nr_seq_material, bind_sql_valor_p);
	end if;

end if;

------------------------------------------------------------------------  NR_SEQ_GRAU_PARTIC ------------------------------------------------------------------------
-- NR_SEQ_GRAU_PARTIC: 	Quando for informado o grau de participação deve ser verificado se o procedimeno tem algum participante com aquele grau
--			de participação se tiver então é válido, caso contrário não será válido e não deve ser contabilizado.
if (dados_validacao_p.nr_seq_grau_partic IS NOT NULL AND dados_validacao_p.nr_seq_grau_partic::text <> '') then

	if (ie_proc_mat_p = 'P') then
		retorno_w.ds_restricao_proc :=	retorno_w.ds_restricao_proc || pls_tipos_ocor_pck.enter_w ||
						'and	exists (select	1 ' || pls_tipos_ocor_pck.enter_w ||
						'		from	pls_proc_participante x ' || pls_tipos_ocor_pck.enter_w ||
						'		where	x.nr_seq_conta_proc = outro_proc.nr_sequencia ' || pls_tipos_ocor_pck.enter_w ||
						'		and	x.nr_seq_grau_partic = :nr_seq_grau_partic ' || pls_tipos_ocor_pck.enter_w ||
						'		) ';
		bind_sql_valor_p := sql_pck.bind_variable(':nr_seq_grau_partic', dados_validacao_p.nr_seq_grau_partic, bind_sql_valor_p);
	end if;
end if;

return;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_oc_cta_obter_restr_23_imp ( dados_validacao_p pls_ocor_imp_pck.dados_regra_val_util_item, dados_conta_proc_p pls_ocor_imp_pck.dados_conta_proc, dados_conta_mat_p pls_ocor_imp_pck.dados_conta_mat, ie_proc_mat_p text, bind_sql_valor_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;

