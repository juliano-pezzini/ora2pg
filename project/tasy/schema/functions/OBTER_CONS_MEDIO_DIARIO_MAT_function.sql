-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_cons_medio_diario_mat ( ie_tipo_p text, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, qt_dias_consumo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp) RETURNS bigint AS $body$
DECLARE


qt_retorno_w			double precision;
qt_consumo_medio_w		double precision;
qt_dias_w			bigint;
qt_consumo_mes_atual_w		double precision;
qt_consumo_mes_1_w		double precision;
qt_consumo_mes_2_w		double precision;
qt_consumo_mes_3_w		double precision;
dt_final_w			timestamp;
dt_mesano_referencia_w		timestamp;
dt_inicio_w			timestamp;
dt_fim_w				timestamp;

/*QD - Media consumo diaria referente a quantidade de dias passados no parâmetro qt_dias_consumo_p
Q - Quantidade de consumo
QDA - Media de consumo diaria referente o mes Atual (do primeiro dia do mes até o dia atual do sistema). Não precisa passar os parametros qt_dias_consumo_p, dt_inicio e dt_fim, pois o sistema pega sysdate
MMD - Maior média diária dos ultimos 3 meses. Não precisa passar os parametros qt_dias_consumo_p, dt_inicio e dt_fim, pois o sistema pega sysdate*/
BEGIN
dt_final_w 		:= (pkg_date_utils.start_of(coalesce(dt_final_p,clock_timestamp()),'DD', 0) + 86399/86400);
dt_mesano_referencia_w	:= pkg_date_utils.start_of(dt_inicial_p,'MONTH', 0);

if (ie_tipo_p in ('QD','Q')) then
	select	sum(coalesce(qt_consumo,0)) qt_consumo
	into STRICT	qt_consumo_medio_w
	from	movimento_estoque_v a,
		material m
	where	m.cd_material 		= cd_material_p
	and	a.cd_material_estoque 	= m.cd_material_estoque
	and	a.dt_movimento_estoque between dt_inicial_p and dt_final_w
	and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
	and	dt_mesano_referencia	= dt_mesano_referencia_w
	and	a.cd_estabelecimento 	= cd_estabelecimento_p
	and	((coalesce(cd_local_estoque_p,0) = 0) or
		(cd_local_estoque_p > 0 AND a.cd_local_estoque = cd_local_estoque_p));

	if (ie_tipo_p = 'QD') and (coalesce(qt_dias_consumo_p,0) > 0) then

		select	dividir(qt_consumo_medio_w,qt_dias_consumo_p)
		into STRICT	qt_retorno_w
		;

	elsif (ie_tipo_p = 'Q') then
		qt_retorno_w := qt_consumo_medio_w;
	end if;
end if;

if (ie_tipo_p = 'QDA') then

	qt_dias_w := (substr(clock_timestamp(),1,2))::numeric;
	dt_inicio_w := pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0);
	dt_fim_w := pkg_date_utils.end_of(clock_timestamp(),'DAY', 0);

	select	sum(coalesce(qt_consumo,0)) qt_consumo
	into STRICT	qt_consumo_medio_w
	from	movimento_estoque_v a,
		material m
	where	m.cd_material 		= cd_material_p
	and	a.cd_material_estoque 	= m.cd_material_estoque
	and	a.dt_movimento_estoque between dt_inicio_w and dt_fim_w
	and	dt_mesano_referencia	= dt_inicio_w
	and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
	and	a.cd_estabelecimento 	= cd_estabelecimento_p
	and	((coalesce(cd_local_estoque_p,0) = 0) or
		(cd_local_estoque_p > 0 AND a.cd_local_estoque = cd_local_estoque_p));

	select	dividir(qt_consumo_medio_w,qt_dias_w)
	into STRICT	qt_retorno_w
	;
end if;

if (ie_tipo_p = 'MMD') then

	dt_inicio_w := pkg_date_utils.add_month(pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0), - 6, 0);
	dt_fim_w := pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0);

	select	sum(CASE WHEN dt_mesano_referencia=pkg_date_utils.add_month(pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0), - 3, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ) mes3,
		sum(CASE WHEN dt_mesano_referencia=pkg_date_utils.add_month(pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0), - 2, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ) mes2,
		sum(CASE WHEN dt_mesano_referencia=pkg_date_utils.add_month(pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0), - 1, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ) mes1,
		sum(CASE WHEN dt_mesano_referencia=pkg_date_utils.add_month(pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0),   0, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ) mes_atual
	into STRICT	qt_consumo_mes_3_w,
		qt_consumo_mes_2_w,
		qt_consumo_mes_1_w,
		qt_consumo_mes_atual_w
	from 	movto_estoque_operacao_v a
	where	cd_estabelecimento = cd_estabelecimento_p
	and 	a.cd_material = cd_material_p
	and	dt_mesano_referencia between dt_inicio_w and dt_fim_w
	and	((coalesce(cd_local_estoque_p,0) = 0) or
		(cd_local_estoque_p > 0 AND a.cd_local_estoque = cd_local_estoque_p));

	qt_retorno_w := qt_consumo_mes_3_w;

	if (qt_consumo_mes_2_w > qt_retorno_w ) then
		qt_retorno_w := qt_consumo_mes_2_w;
	end if;

	if (qt_consumo_mes_1_w > qt_retorno_w) then
		qt_retorno_w := qt_consumo_mes_1_w;
	end if;

	if (qt_consumo_mes_atual_w > qt_retorno_w) then
		qt_retorno_w := qt_consumo_mes_atual_w;
	end if;

	if (qt_retorno_w <= 0) then
		qt_retorno_w := round((dividir((qt_consumo_mes_3_w + qt_consumo_mes_2_w + qt_consumo_mes_1_w),3))::numeric,4);
	end if;

end if;

return  qt_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_cons_medio_diario_mat ( ie_tipo_p text, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, qt_dias_consumo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;

