-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pat_obter_valor_integr_nf ( nr_sequencia_p bigint, cd_estabelecimento_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_nota_w				nota_fiscal.nr_sequencia%type;
nr_seq_item_w				nota_fiscal_item.nr_item_nf%type;
qt_item_nf_w				double precision := 0;
qt_registro_w				bigint;
pr_valor_w				double precision;
vl_aquisicao_w				nota_fiscal_item.vl_liquido%type;
vl_aquisicao_ww				nota_fiscal_item.vl_liquido%type;
vl_complementar_w			nota_fiscal_item.vl_liquido%type;
vl_diferenca_w				double precision;
vl_item_integrado_w			double precision;
vl_retorno_w				pat_bem.vl_original%type;
vl_total_item_w				double precision;
vl_unitario_w				double precision;
ie_valor_integrado_w			varchar(4);
ie_desdobrar_itens_w			nf_integracao_pat_equip.ie_desdobrar_itens%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(sum(b.vl_liquido),0) vl_liquido,
	coalesce(sum(b.vl_total_item_nf),0) vl_total_item_nf
from	nota_fiscal_item b,
	nota_fiscal a
where	a.nr_sequencia	= b.nr_sequencia
and	a.nr_seq_nf_ref	= nr_seq_nota_w
group by a.nr_sequencia;

vet01	c01%RowType;


BEGIN

ie_valor_integrado_w := coalesce(Obter_Valor_Param_Usuario(937,107, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p),'LI');

begin
select	a.nr_seq_nota,
	a.nr_seq_item,
	coalesce(ie_desdobrar_itens,'N')
into STRICT	nr_seq_nota_w,
	nr_seq_item_w,
	ie_desdobrar_itens_w
from	nf_integracao_pat_equip a
where	a.nr_sequencia	= nr_sequencia_p;
exception when others then
	nr_seq_nota_w	:= null;
	nr_seq_item_w	:= null;
end;

if (nr_seq_nota_w IS NOT NULL AND nr_seq_nota_w::text <> '') and (nr_seq_item_w IS NOT NULL AND nr_seq_item_w::text <> '') then
	begin
	begin
	select	coalesce(qt_item_nf,0),
		CASE WHEN ie_valor_integrado_w='LI' THEN  vl_liquido WHEN ie_valor_integrado_w='TI' THEN  vl_total_item_nf END
	into STRICT	qt_item_nf_w,
		vl_aquisicao_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_seq_nota_w
	and	nr_item_nf	= nr_seq_item_w;
	exception when others then
		qt_item_nf_w	:= null;
		vl_aquisicao_w	:= null;
	end;

	if (ie_desdobrar_itens_w = 'U') then
		begin
		qt_item_nf_w := 1;
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_seq_nota_w;

	/*Obter o percentual do bem para agregar o valor das notas complementares */

	if (qt_registro_w = 1) then
		begin
		pr_valor_w	:= 100;
		end;
	elsif (qt_registro_w > 1) then
		begin

		select	dividir_sem_round(vl_aquisicao_w, (CASE WHEN ie_valor_integrado_w='LI' THEN  sum(b.vl_liquido) WHEN ie_valor_integrado_w='TI' THEN  sum(b.vl_total_item_nf) END )) * 100
		into STRICT	pr_valor_w
		from	nota_fiscal_item b,
			nota_fiscal a
		where	a.nr_sequencia	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_nota_w;

		end;
	end if;
	vl_complementar_w	:= 0;

	if (coalesce(Obter_Valor_Param_Usuario(937,105, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p),'N') = 'S') then
		begin

		open C01;
		loop
		fetch C01 into
		vet01;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			if (coalesce(ie_valor_integrado_w,'LI') = 'LI') then
				vl_complementar_w	:= vl_complementar_w + (vet01.vl_liquido * pr_valor_w / 100);
			elsif (coalesce(ie_valor_integrado_w,'LI') = 'TI') then
				vl_complementar_w	:= vl_complementar_w + (vet01.vl_total_item_nf * pr_valor_w / 100);
			end if;

			end;
		end loop;
		close C01;

		end;
	end if;

	vl_aquisicao_w	:= vl_aquisicao_w + vl_complementar_w;

		vl_aquisicao_ww	:= vl_aquisicao_w;
		vl_unitario_w	:= round((dividir(coalesce(vl_aquisicao_w,0), qt_item_nf_w))::numeric,2);
		vl_total_item_w	:= round((vl_unitario_w * qt_item_nf_w)::numeric,2);
		vl_diferenca_w	:= coalesce(vl_total_item_w - vl_aquisicao_w,0);
		vl_aquisicao_w	:= dividir(coalesce(vl_aquisicao_w,0), qt_item_nf_w);

		/*Rotina de arredondamento */

		if (vl_diferenca_w > 0) then
			begin
			select	coalesce(sum(vl_original),0)
			into STRICT	vl_item_integrado_w
			from	pat_bem a,
				nf_integracao_pat_equip b
			where	a.nr_sequencia	= b.nr_seq_bem
			and	b.nr_seq_item	= nr_seq_item_w
			and	b.nr_seq_nota	= nr_seq_nota_w
			and	b.ie_patrimonio	= 'S';


			vl_total_item_w	:= vl_aquisicao_w + vl_item_integrado_w;
			if (vl_total_item_w > vl_aquisicao_ww) then
				vl_diferenca_w	:= vl_total_item_w - vl_aquisicao_ww;
				vl_aquisicao_w	:= vl_aquisicao_w - vl_diferenca_w;

			end if;

			end;
		end if;
	end;
end if;

vl_retorno_w	:= vl_aquisicao_w;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pat_obter_valor_integr_nf ( nr_sequencia_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

