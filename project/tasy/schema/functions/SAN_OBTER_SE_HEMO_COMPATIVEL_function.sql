-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION san_obter_se_hemo_compativel ( cd_pessoa_fisica_p text, nr_seq_derivado_p bigint) RETURNS varchar AS $body$
DECLARE


ie_fator_rh_w		varchar(1);
ie_tipo_sangue_w	varchar(2);

IE_TIPO_ABN_w		varchar(1);
IE_TIPO_ABP_w		varchar(1);
IE_TIPO_AN_w		varchar(1);
IE_TIPO_AP_w		varchar(1);
IE_TIPO_BN_w		varchar(1);
IE_TIPO_BP_w		varchar(1);
IE_TIPO_ON_w		varchar(1);
IE_TIPO_OP_w		varchar(1);

ds_erro_w			varchar(200);
ds_derivado_w		varchar(50);
ie_compativel_w varchar(2);
ds_retorno_w    varchar(200);


BEGIN

		select substr(OBTER_DESC_SAN_DERIVADO(nr_seq_derivado_p),1,50)
		into STRICT ds_derivado_w
		;


		select ie_fator_rh,
			   ie_tipo_sangue
		into STRICT ie_fator_rh_w,
			 ie_tipo_sangue_w
		from pessoa_fisica
		where cd_pessoa_fisica = cd_pessoa_fisica_p;



	ie_compativel_w := '';

	if (ie_fator_rh_w IS NOT NULL AND ie_fator_rh_w::text <> '' AND ie_tipo_sangue_w IS NOT NULL AND ie_tipo_sangue_w::text <> '') then

		begin

		select 	IE_TIPO_ABN,
			IE_TIPO_ABP,
			IE_TIPO_AN,
			IE_TIPO_AP,
			IE_TIPO_BN,
			IE_TIPO_BP,
			IE_TIPO_ON,
			IE_TIPO_OP
		into STRICT	IE_TIPO_ABN_w,
			IE_TIPO_ABP_w,
			IE_TIPO_AN_w,
			IE_TIPO_AP_w,
			IE_TIPO_BN_w,
			IE_TIPO_BP_w,
			IE_TIPO_ON_w,
			IE_TIPO_OP_w
		from 	san_derivado_compativel
		where	nr_seq_derivado = nr_seq_derivado_p
		and	ie_fator_rh_recep 	= ie_fator_rh_w
		AND	ie_tipo_sangue_recep 	= ie_tipo_sangue_w;

		exception
		when others then
			IE_TIPO_ABN_w	:= 'S';
			IE_TIPO_ABP_w	:= 'S';
			IE_TIPO_AN_w	:= 'S';
			IE_TIPO_AP_w	:= 'S';
			IE_TIPO_BN_w	:= 'S';
			IE_TIPO_BP_w	:= 'S';
			IE_TIPO_ON_w	:= 'S';
			IE_TIPO_OP_w	:= 'S';
		end;

		if (IE_TIPO_ABN_w = 'N' AND ie_tipo_sangue_w = 'AB' AND ie_fator_rh_w = '-') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_ABP_w = 'N' AND ie_tipo_sangue_w = 'AB' AND ie_fator_rh_w = '+') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_AN_w = 'N' AND ie_tipo_sangue_w = 'A' AND ie_fator_rh_w = '-') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_AP_w = 'N' AND ie_tipo_sangue_w = 'A' AND ie_fator_rh_w = '+') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_BN_w = 'N' AND ie_tipo_sangue_w = 'B' AND ie_fator_rh_w = '-') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_BP_w = 'N' AND ie_tipo_sangue_w = 'B' AND ie_fator_rh_w = '+') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_ON_w = 'N' AND ie_tipo_sangue_w = 'O' AND ie_fator_rh_w = '-') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_OP_w = 'N' AND ie_tipo_sangue_w = 'O' AND ie_fator_rh_w = '+') then

			ds_erro_w := substr(ds_erro_w || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		end if;

		if (coalesce(ds_erro_w::text, '') = '') then
			ie_compativel_w := 'S';
		else
			ie_compativel_w := 'N';
		end if;

	end if;


	if (ie_compativel_w = 'N') then
		ds_retorno_w := ds_erro_w;
  elsif (ie_compativel_w = 'S') then
    ds_retorno_w := ie_compativel_w;
	end if;


  return ds_retorno_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION san_obter_se_hemo_compativel ( cd_pessoa_fisica_p text, nr_seq_derivado_p bigint) FROM PUBLIC;

