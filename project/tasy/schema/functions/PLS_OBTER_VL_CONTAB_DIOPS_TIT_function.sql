-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_vl_contab_diops_tit (nr_titulo_p bigint, nr_seq_periodo_p bigint, cd_estabelecimento_p bigint, ie_idade_saldo_ativo_p bigint, ie_idade_saldo_passivo_p bigint) RETURNS bigint AS $body$
DECLARE

						 
vl_retorno_w		double precision	:= 0;
vl_contabil_w		double precision	:= 0;
nr_seq_transacao_w	bigint;
dt_periodo_inicial_w	timestamp;
cd_conta_contabil_w	varchar(20);
nr_lote_contabil_w	bigint;
dt_periodo_final_w	timestamp;

/* Contas contábeis de ativo */
 
c01 CURSOR FOR 
SELECT	b.cd_conta_contabil 
from	diops_conta_idade_saldo	b, 
	diops_idade_saldo	a 
where	a.nr_sequencia		= b.nr_seq_idade_saldo 
and	a.nr_seq_transacao	= nr_seq_transacao_w 
and	a.ie_idade_saldo_ativo	= ie_idade_saldo_ativo_p 
and	(b.cd_conta_contabil IS NOT NULL AND b.cd_conta_contabil::text <> '') 
and	coalesce(a.ie_vencimento_ativo::text, '') = '' 
order by b.cd_conta_contabil;

/* Contas contábeis de passivo */
 
c03 CURSOR FOR 
SELECT	b.cd_conta_contabil 
from	diops_conta_idade_saldo	b, 
	diops_idade_saldo	a 
where	a.nr_sequencia		= b.nr_seq_idade_saldo 
and	a.nr_seq_transacao	= nr_seq_transacao_w 
and	a.ie_idade_saldo_passivo	= ie_idade_saldo_passivo_p 
and	(b.cd_conta_contabil IS NOT NULL AND b.cd_conta_contabil::text <> '') 
order by b.cd_conta_contabil;

/* Lotes contábeis do título */
 
c02 CURSOR FOR 
SELECT	a.nr_lote_contabil 
from	titulo_receber a 
where	a.nr_titulo	= nr_titulo_p 
and	a.nr_lote_contabil <> 0 

union
 
SELECT	distinct 
	d.nr_lote_contabil 
from	pls_mensalidade_seg_item d, 
	pls_mensalidade_segurado c, 
	pls_mensalidade b, 
	titulo_receber a 
where	a.nr_seq_mensalidade	= b.nr_sequencia 
and	b.nr_sequencia		= c.nr_seq_mensalidade 
and	c.nr_sequencia		= d.nr_seq_mensalidade_seg 
and	a.nr_titulo		= nr_titulo_p 
and	d.nr_lote_contabil	<> 0 

union
 
select	a.nr_lote_contabil 
from	titulo_receber_liq a 
where	a.nr_titulo	= nr_titulo_p 
and	a.nr_lote_contabil <> 0 

union
 
select	a.nr_lote_contab_antecip 
from	titulo_receber_liq a 
where	a.nr_titulo	= nr_titulo_p 
and	a.nr_lote_contab_antecip <> 0 

union
 
select	a.nr_lote_contab_pro_rata 
from	titulo_receber_liq a 
where	a.nr_titulo	= nr_titulo_p 
and	a.nr_lote_contab_pro_rata <> 0;


BEGIN 
 
if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and (nr_seq_periodo_p IS NOT NULL AND nr_seq_periodo_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then 
	select	dt_periodo_inicial, 
		dt_periodo_final 
	into STRICT	dt_periodo_inicial_w, 
		dt_periodo_final_w 
	from	diops_periodo a 
	where	a.nr_sequencia	= nr_seq_periodo_p;
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_transacao_w 
	from	diops_transacao 
	where	ie_tipo_transacao	= 'F' 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	dt_vigencia	=	(SELECT	max(dt_vigencia) 
					from	diops_transacao 
					where	ie_tipo_transacao = 'F' 
					and	cd_estabelecimento	= cd_estabelecimento_p 
					and	dt_vigencia <= dt_periodo_inicial_w);
					 
	if (ie_idade_saldo_ativo_p IS NOT NULL AND ie_idade_saldo_ativo_p::text <> '') then 
		RAISE NOTICE '1';
		/* Obter valores ativo */
 
		open C02;
		loop 
		fetch C02 into	 
			nr_lote_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			RAISE NOTICE 'Lote contab: %', nr_lote_contabil_w;
			open C01;
			loop 
			fetch C01 into	 
				cd_conta_contabil_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				RAISE NOTICE 'Conta contab: %', cd_conta_contabil_w;
				 
				select	coalesce(sum(CASE WHEN a.ie_debito_credito='C' THEN a.vl_movimento  ELSE a.vl_movimento * -1 END ),0) 
				into STRICT	vl_contabil_w 
				from	movimento_contabil a 
				where	a.nr_lote_contabil	= nr_lote_contabil_w 
				and	a.cd_conta_contabil	= cd_conta_contabil_w 
				and	a.ds_compl_historico like '%' || nr_titulo_p || '%' 
				and	a.dt_movimento <= dt_periodo_final_w;
				 
				vl_retorno_w	:= vl_retorno_w + vl_contabil_w;
				end;
			end loop;
			close C01;
			end;
		end loop;
		close C02;
 
	/* Obter valores passivo */
 
	elsif (ie_idade_saldo_passivo_p IS NOT NULL AND ie_idade_saldo_passivo_p::text <> '') then 
		open C02;
		loop 
		fetch C02 into	 
			nr_lote_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			RAISE NOTICE 'Lote contab: %', nr_lote_contabil_w;
			open C03;
			loop 
			fetch C03 into	 
				cd_conta_contabil_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				RAISE NOTICE 'Conta contab: %', cd_conta_contabil_w;
				 
				select	coalesce(sum(CASE WHEN a.ie_debito_credito='C' THEN a.vl_movimento  ELSE a.vl_movimento * -1 END ),0) 
				into STRICT	vl_contabil_w 
				from	movimento_contabil a 
				where	a.nr_lote_contabil	= nr_lote_contabil_w 
				and	a.cd_conta_contabil	= cd_conta_contabil_w 
				and	a.ds_compl_historico like '%' || nr_titulo_p || '%' 
				and	a.dt_movimento <= dt_periodo_final_w;
				 
				vl_retorno_w	:= vl_retorno_w + vl_contabil_w;
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
	end if;
end if;
 
return	vl_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_vl_contab_diops_tit (nr_titulo_p bigint, nr_seq_periodo_p bigint, cd_estabelecimento_p bigint, ie_idade_saldo_ativo_p bigint, ie_idade_saldo_passivo_p bigint) FROM PUBLIC;

