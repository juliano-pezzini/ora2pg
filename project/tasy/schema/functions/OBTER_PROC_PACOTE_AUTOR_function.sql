-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_proc_pacote_autor (nr_sequencia_p bigint, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE


/* ie_opcao_p
C - Código
D - Descrição
N - Nr seq pacote
P - Se é pacote ou não
*/
cd_convenio_w		bigint;
cd_estabelecimento_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ds_retorno_w		varchar(255) := null;
cd_grupo_proc_w		bigint;
cd_espec_proc_w		bigint;
cd_area_proc_w		bigint;
nr_seq_pacote_w		bigint := null;
ie_classif_acomod_w	varchar(3);
cd_tipo_acomodacao_w	smallint;
cd_proc_pacote_w		bigint;
ie_origem_proc_pacote_w	bigint;


c01 CURSOR FOR
SELECT	a.nr_seq_pacote
from	pacote a
where	a.cd_convenio		= cd_convenio_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.ie_situacao		= 'A'
and	a.cd_proced_pacote	= cd_procedimento_w
and	a.ie_origem_proced	= ie_origem_proced_w
and 	exists (select	1
	from	pacote_tipo_acomodacao x
	where	x.nr_seq_pacote	= a.nr_seq_pacote
	and	x.ie_tipo_acomod	= ie_classif_acomod_w
	and	x.ie_situacao	= 'A');


BEGIN

select 	max(b.cd_procedimento),
	max(b.ie_origem_proced),
	max(a.cd_convenio),
	max((Obter_dados_autor_convenio(a.nr_sequencia,'E'))::numeric ),
	max(a.cd_tipo_acomodacao)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	cd_convenio_w,
	cd_estabelecimento_w,
	cd_tipo_acomodacao_w
from 	procedimento_autorizado b,
	autorizacao_convenio a
where	b.nr_sequencia_autor	= a.nr_sequencia
and	b.nr_sequencia		= nr_sequencia_p;

select	max(cd_grupo_proc),
	max(cd_especialidade),
	max(cd_area_procedimento)
into STRICT	cd_grupo_proc_w,
	cd_espec_proc_w,
	cd_area_proc_w
from	estrutura_procedimento_v
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced		= ie_origem_proced_w;

select	max(ie_classificacao)
into STRICT	ie_classif_acomod_w
from	tipo_acomodacao
where	cd_tipo_acomodacao	= cd_tipo_acomodacao_w;

open c01;
loop
fetch c01 into
	nr_seq_pacote_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then

	select	max(a.cd_procedimento),
		max(a.ie_origem_proced)
	into STRICT	cd_proc_pacote_w,
		ie_origem_proc_pacote_w
	from	pacote_tipo_acomodacao a
	where	a.nr_seq_pacote		= nr_seq_pacote_w
	and	a.ie_tipo_acomod		= ie_classif_acomod_w;

	if (cd_proc_pacote_w IS NOT NULL AND cd_proc_pacote_w::text <> '') and (ie_origem_proc_pacote_w IS NOT NULL AND ie_origem_proc_pacote_w::text <> '') then

		if (ie_opcao_p = 'C') then
			ds_retorno_w	:= to_char(cd_proc_pacote_w);
		elsif (ie_opcao_p = 'D') then
			select	substr(obter_desc_procedimento(cd_proc_pacote_w,ie_origem_proc_pacote_w),1,255)
			into STRICT	ds_retorno_w
			;
		elsif (ie_opcao_p = 'N') then
			ds_retorno_w	:= to_char(nr_seq_pacote_w);
		elsif (ie_opcao_p = 'P') then
			ds_retorno_w := 'S';
		end if;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_proc_pacote_autor (nr_sequencia_p bigint, ie_opcao_p text) FROM PUBLIC;

