-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_verifica_restricao (ie_opcao_p text, nr_sequencia_p pls_congenere.nr_sequencia%type, nr_seq_congenere_p pls_congenere.nr_seq_congenere%type, ie_coop_vinculadas_p text, cd_cooperativa_p pls_congenere.cd_cooperativa%type, cd_cgc_p pls_congenere.cd_cgc%type, nr_seq_nivel_um_p pls_congenere.nr_sequencia%type, nr_seq_nivel_dois_p pls_congenere.nr_sequencia%type, nr_seq_nivel_tres_p pls_congenere.nr_sequencia%type, nr_seq_nivel_quatro_p pls_congenere.nr_sequencia%type, nr_seq_nivel_cinco_p pls_congenere.nr_sequencia%type, nr_seq_nivel_seis_p pls_congenere.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


/*
ie_opcao_p
CV - Cooperativas vinculadas
NV - NÃ­veis
*/
ds_retorno_w			varchar(1) := 'N';
nr_seq_cooperativa_w		pls_congenere.nr_sequencia%type;
qt_congenere_w			integer := 0;


BEGIN

if (ie_opcao_p = 'CV') then
	if (ie_coop_vinculadas_p = 'N') then
		ds_retorno_w := 'S';
	else
		if (cd_cooperativa_p IS NOT NULL AND cd_cooperativa_p::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_cooperativa_w
			from	pls_congenere
			where	cd_cooperativa = cd_cooperativa_p;

		elsif (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_cooperativa_w
			from	pls_congenere
			where	cd_cgc = cd_cgc_p;
		end if;

		select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
		into STRICT	ds_retorno_w
		
		where	((nr_seq_congenere_p = nr_seq_cooperativa_w) or (nr_sequencia_p = nr_seq_cooperativa_w) or
			exists (	SELECT	1
					from	pls_congenere		x
					where	x.nr_seq_congenere	= nr_sequencia_p
					and	x.nr_sequencia		= nr_seq_cooperativa_w));
	end if;

elsif (ie_opcao_p = 'NV') then
	if (coalesce(nr_seq_nivel_um_p::text, '') = '') and (coalesce(nr_seq_nivel_dois_p::text, '') = '') and (coalesce(nr_seq_nivel_tres_p::text, '') = '') and (coalesce(nr_seq_nivel_quatro_p::text, '') = '') and (coalesce(nr_seq_nivel_cinco_p::text, '') = '') and (coalesce(nr_seq_nivel_seis_p::text, '') = '') then
		ds_retorno_w	:= 'S';
	else
		if (nr_seq_nivel_seis_p IS NOT NULL AND nr_seq_nivel_seis_p::text <> '') then
			if (nr_sequencia_p = nr_seq_nivel_seis_p) then
				ds_retorno_w := 'S';
			end if;
		else
			select	count(1)
			into STRICT	qt_congenere_w
			from	pls_congenere
			where	nr_seq_congenere = nr_seq_nivel_cinco_p
			and	ie_tipo_congenere = 'CO';

			if (qt_congenere_w > 0) then
				select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
				into STRICT	ds_retorno_w
				from	pls_congenere
				where	nr_seq_congenere = nr_seq_nivel_cinco_p
				and	ie_tipo_congenere = 'CO'
				and	((nr_sequencia = nr_sequencia_p) or (nr_seq_congenere = nr_seq_congenere_p));
			end if;

			if (ds_retorno_w = 'N') then
				if (nr_seq_nivel_cinco_p IS NOT NULL AND nr_seq_nivel_cinco_p::text <> '') then
					if (nr_sequencia_p = nr_seq_nivel_cinco_p) then
						ds_retorno_w := 'S';
					end if;
				else
					select	count(1)
					into STRICT	qt_congenere_w
					from	pls_congenere
					where	nr_seq_congenere = nr_seq_nivel_quatro_p
					and	ie_tipo_congenere = 'CO';

					if (qt_congenere_w > 0) then
						select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
						into STRICT	ds_retorno_w
						from	pls_congenere
						where	nr_seq_congenere = nr_seq_nivel_quatro_p
						and	ie_tipo_congenere = 'CO'
						and	((nr_sequencia = nr_sequencia_p) or (nr_seq_congenere = nr_seq_congenere_p));
					end if;

					if (ds_retorno_w = 'N') then
						if (nr_seq_nivel_quatro_p IS NOT NULL AND nr_seq_nivel_quatro_p::text <> '') then
							if (nr_sequencia_p = nr_seq_nivel_quatro_p) then
								ds_retorno_w := 'S';
							end if;
						else
							select	count(1)
							into STRICT	qt_congenere_w
							from	pls_congenere
							where	nr_seq_congenere = nr_seq_nivel_tres_p
							and	ie_tipo_congenere = 'CO';

							if (qt_congenere_w > 0) then
								select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
								into STRICT	ds_retorno_w
								from	pls_congenere
								where	nr_seq_congenere = nr_seq_nivel_tres_p
								and	ie_tipo_congenere = 'CO'
								and	((nr_sequencia = nr_sequencia_p) or (nr_seq_congenere = nr_seq_congenere_p));
							end if;

							if (ds_retorno_w = 'N') then
								if (nr_seq_nivel_tres_p IS NOT NULL AND nr_seq_nivel_tres_p::text <> '') then
									if (nr_sequencia_p = nr_seq_nivel_tres_p) then
										ds_retorno_w := 'S';
									end if;
								else
									select	count(1)
									into STRICT	qt_congenere_w
									from	pls_congenere
									where	nr_seq_congenere = nr_seq_nivel_dois_p
									and	ie_tipo_congenere = 'CO';

									if (qt_congenere_w > 0) then
										select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
										into STRICT	ds_retorno_w
										from	pls_congenere
										where	nr_seq_congenere = nr_seq_nivel_dois_p
										and	ie_tipo_congenere = 'CO'
										and	((nr_sequencia = nr_sequencia_p) or (nr_seq_congenere = nr_seq_congenere_p));
									end if;

									if (ds_retorno_w = 'N') then
										if (nr_seq_nivel_dois_p IS NOT NULL AND nr_seq_nivel_dois_p::text <> '') then
											if (nr_sequencia_p = nr_seq_nivel_dois_p) then
												ds_retorno_w := 'S';
											end if;
										else
											select	count(1)
											into STRICT	qt_congenere_w
											from	pls_congenere
											where	nr_seq_congenere = nr_seq_nivel_um_p
											and	ie_tipo_congenere = 'CO';

											if (qt_congenere_w > 0) then
												select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
												into STRICT	ds_retorno_w
												from	pls_congenere
												where	nr_seq_congenere = nr_seq_nivel_um_p
												and	ie_tipo_congenere = 'CO'
												and	((nr_sequencia = nr_sequencia_p) or (nr_seq_congenere = nr_seq_congenere_p));
											end if;

											if (ds_retorno_w = 'N') then
												if (nr_seq_nivel_um_p IS NOT NULL AND nr_seq_nivel_um_p::text <> '') then
													if (nr_sequencia_p = nr_seq_nivel_um_p) then
														ds_retorno_w := 'S';
													end if;
												end if;
											end if;
										end if;
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
	end if;
end if;

return	ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_verifica_restricao (ie_opcao_p text, nr_sequencia_p pls_congenere.nr_sequencia%type, nr_seq_congenere_p pls_congenere.nr_seq_congenere%type, ie_coop_vinculadas_p text, cd_cooperativa_p pls_congenere.cd_cooperativa%type, cd_cgc_p pls_congenere.cd_cgc%type, nr_seq_nivel_um_p pls_congenere.nr_sequencia%type, nr_seq_nivel_dois_p pls_congenere.nr_sequencia%type, nr_seq_nivel_tres_p pls_congenere.nr_sequencia%type, nr_seq_nivel_quatro_p pls_congenere.nr_sequencia%type, nr_seq_nivel_cinco_p pls_congenere.nr_sequencia%type, nr_seq_nivel_seis_p pls_congenere.nr_sequencia%type) FROM PUBLIC;

