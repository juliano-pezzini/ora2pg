-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_se_proc_mat_exige_vl ( nr_seq_exige_valor_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verifica se o procedimento ou o material exigem valor para a conta.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_retorno_w			varchar(2)	:= 'N';
ie_gerar_ocorrencia_w		varchar(2);
nr_seq_exig_valor_item_w	bigint;
nr_seq_grupo_material_w		bigint;
ie_tipo_despesa_w		varchar(2);
nr_seq_grupo_servico_w		bigint;
ie_valida_material_a900_w	varchar(2);
qt_mat_a900_w			bigint;
nr_seq_material_w		bigint;
cd_procedimento_w		varchar(10);
ie_origem_proced_w		varchar(10);

C01 CURSOR FOR
	SELECT	nr_seq_grupo_material,
		nr_seq_grupo_servico,
		ie_valida_material_a900,
		nr_seq_material
	from	pls_exige_valor_item
	where	nr_seq_exige_valor	= nr_seq_exige_valor_p
	and (coalesce(nr_seq_material::text, '') = '' or nr_seq_material	= nr_seq_material_p)
	and (coalesce(ie_tipo_despesa_mat::text, '') = ''	or ie_tipo_despesa_mat	= ie_tipo_despesa_w)
	and	(coalesce(cd_procedimento::text, '') = ''	or (cd_procedimento	= cd_procedimento_p AND ie_origem_proced	= ie_origem_proced_p));


BEGIN

begin
	select	ie_tipo_despesa
	into STRICT	ie_tipo_despesa_w
	from	pls_material
	where	nr_sequencia	= nr_seq_material_p;
exception
when others then
	ie_tipo_despesa_w	:= null;
end;

open C01;
loop
fetch C01 into
	nr_seq_grupo_material_w,
	nr_seq_grupo_servico_w,
	ie_valida_material_a900_w,
	nr_seq_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_gerar_ocorrencia_w	:= 'S';

	if (nr_seq_grupo_material_w IS NOT NULL AND nr_seq_grupo_material_w::text <> '') then
		ie_gerar_ocorrencia_w	:= pls_se_grupo_preco_material(nr_seq_grupo_material_w, nr_seq_material_p);
	elsif (nr_seq_grupo_servico_w IS NOT NULL AND nr_seq_grupo_servico_w::text <> '') then
		ie_gerar_ocorrencia_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_procedimento_p, ie_origem_proced_p);
	end if;

	if (ie_valida_material_a900_w	= 'S') then
		begin
			select	count(1)
			into STRICT	qt_mat_a900_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_p
			and	(nr_seq_material_unimed IS NOT NULL AND nr_seq_material_unimed::text <> '');
		exception
		when others then
			qt_mat_a900_w	:= 0;
		end;

		if (qt_mat_a900_w	= 0) then
			ie_gerar_ocorrencia_w	:= 'N';
		end if;
	end if;

	if (nr_seq_material_w 	<> nr_seq_material_p) then
		ie_gerar_ocorrencia_w	:= 'N';
	end if;

	if (ie_gerar_ocorrencia_w	= 'S') then
		ie_retorno_w	:= 'S';
		exit;
	end if;
	end;
end loop;
close C01;

return	ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_se_proc_mat_exige_vl ( nr_seq_exige_valor_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint) FROM PUBLIC;

