-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_complemento_cep_js ( cd_cep_p text) RETURNS varchar AS $body$
DECLARE


ds_complemento_w	varchar(2000);
ie_cep_internet_w	varchar(15);
nm_logradouro_w		varchar(125);
nm_localidade_w		varchar(60);
nm_bairro_w		varchar(80);
sg_estado_w		valor_dominio.vl_dominio%type;
cd_cep_w		integer;
cd_municipio_ibge_w	varchar(6);
cd_cep_p_w		bigint;
nr_seq_loc_w		cep_log.nr_seq_loc%type;
cd_bairro_inicial_w	cep_log.cd_bairro_inicial%type;


c01 CURSOR FOR
SELECT 	a.nm_logradouro,
	a.nm_localidade,
	a.nm_bairro,
	a.cd_unidade_federacao,
	a.nr_logradouro
from 	cep_logradouro a
where 	a.cd_logradouro = cd_cep_p_w
order by
	a.dt_atualizacao;

c02 CURSOR FOR
SELECT 	a.nm_logradouro,
	b.nm_localidade,
	c.ds_bairro,
	a.ds_uf,
	a.cd_cep
from 	cep_loc b,
	cep_bairro c,
	cep_log a
where  	b.nr_sequencia      	= c.nr_seq_loc
and   	a.cd_bairro_inicial	= c.nr_sequencia
and   	b.nr_sequencia      	= a.nr_seq_loc
and   	a.cd_cep            	= cd_cep_p_w
order by
	a.dt_atualizacao;

c03 CURSOR FOR
SELECT 	null,
	b.nm_localidade,
	null,
	b.ds_uf,
	b.cd_cep
from   	cep_loc b
where  	b.cd_cep = cd_cep_p_w
order by
	b.dt_atualizacao;


BEGIN
if (cd_cep_p IS NOT NULL AND cd_cep_p::text <> '') then
	begin
	cd_cep_p_w := somente_numero(cd_cep_p);

	ie_cep_internet_w := Obter_Param_Usuario(0, 25, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_cep_internet_w);

	if (ie_cep_internet_w = 'N') then
		begin
		begin
		select	nm_logradouro,
			nm_localidade,
			nm_bairro,
			cd_unidade_federacao,
			nr_logradouro
		into STRICT	nm_logradouro_w,
			nm_localidade_w,
			nm_bairro_w,
			sg_estado_w,
			cd_cep_w
		from (SELECT a.nm_logradouro,
				a.nm_localidade,
				a.nm_bairro,
				a.cd_unidade_federacao,
				a.nr_logradouro
			from 	cep_logradouro a
			where 	a.cd_logradouro = cd_cep_p_w
			order by
				a.dt_atualizacao desc) alias1 LIMIT 1;
		exception
		when others then
			nm_logradouro_w	:= null;
			nm_localidade_w	:= null;
			nm_bairro_w	:= null;
			sg_estado_w	:= null;
			cd_cep_w	:= null;
		end;

		/*open c01;
		loop
		fetch c01 into	nm_logradouro_w,
				nm_localidade_w,
				nm_bairro_w,
				sg_estado_w,
				cd_cep_w;
		exit when c01%notfound;
			begin
			nm_logradouro_w	:= nm_logradouro_w;
			nm_localidade_w	:= nm_localidade_w;
			nm_bairro_w	:= nm_bairro_w;
			sg_estado_w	:= sg_estado_w;
			cd_cep_w	:= cd_cep_w;
			end;
		end loop;
		close c01;*/
		end;
	else
		begin
		begin
		select	max(a.nm_logradouro),
			max(a.ds_uf),
			max(a.cd_cep),
			max(a.nr_seq_loc),
			max(a.cd_bairro_inicial)
		into STRICT	nm_logradouro_w,
			sg_estado_w,
			cd_cep_w,
			nr_seq_loc_w,
			cd_bairro_inicial_w
		from 	cep_log a
		where  	a.cd_cep            	= cd_cep_p_w;

		select	max(c.ds_bairro)
		into STRICT	nm_bairro_w
		from	cep_bairro c
		where	c.nr_sequencia 	= cd_bairro_inicial_w
		and	c.nr_seq_loc	= nr_seq_loc_w;


		select	max(b.nm_localidade)
		into STRICT	nm_localidade_w
		from	cep_loc	b
		where	b.nr_sequencia	= nr_seq_loc_w;

		/*select	nm_logradouro,
			nm_localidade,
			ds_bairro,
			ds_uf,
			cd_cep
		into	nm_logradouro_w,
			nm_localidade_w,
			nm_bairro_w,
			sg_estado_w,
			cd_cep_w
		from	(select	a.nm_logradouro,
				b.nm_localidade,
				c.ds_bairro,
				a.ds_uf,
				a.cd_cep
			from 	cep_loc b,
				cep_bairro c,
				cep_log a
			where  	b.nr_sequencia      	= c.nr_seq_loc
			and   	a.cd_bairro_inicial	= c.nr_sequencia
			and   	b.nr_sequencia      	= a.nr_seq_loc
			and   	a.cd_cep            	= cd_cep_p_w
			order by
				a.dt_atualizacao desc)
		where	rownum	= 1;*/
		exception
		when others then
			nm_logradouro_w	:= null;
			nm_localidade_w	:= null;
			nm_bairro_w	:= null;
			sg_estado_w	:= null;
			cd_cep_w	:= null;
		end;
		null;

		/*open c02;
		loop
		fetch c02 into	nm_logradouro_w,
				nm_localidade_w,
				nm_bairro_w,
				sg_estado_w,
				cd_cep_w;
		exit when c02%notfound;
			begin
			nm_logradouro_w	:= nm_logradouro_w;
			nm_localidade_w	:= nm_localidade_w;
			nm_bairro_w	:= nm_bairro_w;
			sg_estado_w	:= sg_estado_w;
			cd_cep_w	:= cd_cep_w;
			end;
		end loop;
		close c02;*/
		end;
	end if;

	if (coalesce(cd_cep_w::text, '') = '') then
		begin
		begin
		select	nm_logradouro,
			nm_localidade,
			nm_bairro,
			ds_uf,
			cd_cep
		into STRICT	nm_logradouro_w,
			nm_localidade_w,
			nm_bairro_w,
			sg_estado_w,
			cd_cep_w
		from (SELECT null nm_logradouro,
				b.nm_localidade,
				null nm_bairro,
				b.ds_uf,
				b.cd_cep
			from   	cep_loc b
			where  	b.cd_cep = cd_cep_p_w
			order by b.dt_atualizacao desc) alias2 LIMIT 1;
		exception
		when others then
			nm_logradouro_w	:= null;
			nm_localidade_w	:= null;
			nm_bairro_w	:= null;
			sg_estado_w	:= null;
			cd_cep_w	:= null;
		end;

		/*open c03;
		loop
		fetch c03 into	nm_logradouro_w,
				nm_localidade_w,
				nm_bairro_w,
				sg_estado_w,
				cd_cep_w;
		exit when c03%notfound;
			begin
			nm_logradouro_w	:= nm_logradouro_w;
			nm_localidade_w	:= nm_localidade_w;
			nm_bairro_w	:= nm_bairro_w;
			sg_estado_w	:= sg_estado_w;
			cd_cep_w	:= cd_cep_w;
			end;
		end loop;
		close c03;*/
		end;
	end if;

	cd_municipio_ibge_w 	:= substr(obter_municipio_ibge(cd_cep_p_w),1,6);

	ds_complemento_w	:= nm_localidade_w || ';' || sg_estado_w || ';' || nm_logradouro_w || ';' || nm_bairro_w || ';' || cd_municipio_ibge_w;
	end;
end if;

return ds_complemento_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_complemento_cep_js ( cd_cep_p text) FROM PUBLIC;

