-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_proc_aprov_setor ( nr_sequencia_p bigint, cd_setor_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
cd_setor_atendimento_w		integer;
ie_local_usuario_w			varchar(1) := 'N';
qt_existe_w			bigint;

c01 CURSOR FOR 
SELECT	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
	SELECT 1 
	from	solic_compra x, 
		solic_compra_item y 
	where	x.nr_solic_compra = y.nr_solic_compra 
	and	x.cd_local_estoque = a.cd_local_estoque 
	and	(x.cd_local_estoque IS NOT NULL AND x.cd_local_estoque::text <> '') 
	and	y.nr_seq_aprovacao = nr_sequencia_p) 

union
 
select	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
	select 1 
	from	solic_compra x, 
		solic_compra_item y 
	where	x.nr_solic_compra = y.nr_solic_compra 
	and	x.cd_centro_custo = a.cd_centro_custo 
	and	(x.cd_centro_custo IS NOT NULL AND x.cd_centro_custo::text <> '') 
	and	y.nr_seq_aprovacao = nr_sequencia_p);

c02 CURSOR FOR 
SELECT	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
	SELECT 1 
	from	ordem_compra x, 
		ordem_compra_item y 
	where	x.nr_ordem_compra = y.nr_ordem_compra 
	and	y.cd_local_estoque = a.cd_local_estoque 
	and	(y.cd_local_estoque IS NOT NULL AND y.cd_local_estoque::text <> '') 
	and	y.nr_seq_aprovacao = nr_sequencia_p) 

union
 
select	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
	select 1 
	from	ordem_compra x, 
		ordem_compra_item y 
	where	x.nr_ordem_compra = y.nr_ordem_compra 
	and	y.cd_centro_custo = a.cd_centro_custo 
	and	(y.cd_centro_custo IS NOT NULL AND y.cd_centro_custo::text <> '') 
	and	y.nr_seq_aprovacao = nr_sequencia_p);

c03 CURSOR FOR 
SELECT	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
	SELECT 1 
	from	requisicao_material x, 
		item_requisicao_material y 
	where	x.nr_requisicao = y.nr_requisicao 
	and	x.cd_local_estoque = a.cd_local_estoque 
	and	(x.cd_local_estoque IS NOT NULL AND x.cd_local_estoque::text <> '') 
	and	y.nr_seq_aprovacao = nr_sequencia_p) 

union
 
select	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
	select 1 
	from	requisicao_material x, 
		item_requisicao_material y 
	where	x.nr_requisicao = y.nr_requisicao 
	and	x.cd_centro_custo = a.cd_centro_custo 
	and	(x.cd_centro_custo IS NOT NULL AND x.cd_centro_custo::text <> '') 
	and	y.nr_seq_aprovacao = nr_sequencia_p);	
	 
	 
c04 CURSOR FOR 
SELECT	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
SELECT	c.nr_cot_compra 
from	cot_compra_item c, 
	solic_compra_item_agrup_v v, 
	solic_compra x, 
	solic_compra_item y 
where	c.nr_cot_compra = v.nr_cot_compra 
and	c.nr_item_cot_compra = v.nr_item_cot_compra 
and	x.nr_solic_compra = y.nr_solic_compra 
and	y.nr_solic_compra = v.nr_solic_compra 
and	y.nr_item_solic_compra = v.nr_item_solic_compra 
and	x.cd_local_estoque = a.cd_local_estoque 
and	(x.cd_local_estoque IS NOT NULL AND x.cd_local_estoque::text <> '')		 
and	c.nr_seq_aprovacao = nr_sequencia_p) 

union
 
select	distinct(a.cd_setor_atendimento) 
from	setor_atendimento a 
where	a.ie_situacao = 'A' 
and	exists ( 
select	c.nr_cot_compra 
from	cot_compra_item c, 
	solic_compra_item_agrup_v v, 
	solic_compra x, 
	solic_compra_item y 
where	c.nr_cot_compra = v.nr_cot_compra 
and	c.nr_item_cot_compra = v.nr_item_cot_compra 
and	x.nr_solic_compra = y.nr_solic_compra 
and	y.nr_solic_compra = v.nr_solic_compra 
and	y.nr_item_solic_compra = v.nr_item_solic_compra 
and	x.cd_centro_custo = a.cd_centro_custo 
and	(x.cd_centro_custo IS NOT NULL AND x.cd_centro_custo::text <> '')		 
and	c.nr_seq_aprovacao = nr_sequencia_p);
	

BEGIN 
 
select	count(*) 
into STRICT	qt_existe_w 
from	solic_compra_item 
where	nr_seq_aprovacao = nr_sequencia_p;
 
if (qt_existe_w > 0) then 
 
	open c01;
	loop 
	fetch c01 into 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		if (cd_setor_atendimento_w = cd_setor_atendimento_p) then 
			ie_local_usuario_w	:= 'S';
			exit;
		end if;
	end loop;
	close c01;
end if;
 
select	count(*) 
into STRICT	qt_existe_w 
from	ordem_compra_item 
where	nr_seq_aprovacao = nr_sequencia_p;
 
if (qt_existe_w > 0) then 
 
	open c02;
	loop 
	fetch c02 into 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		if (cd_setor_atendimento_w = cd_setor_atendimento_p) then 
			ie_local_usuario_w	:= 'S';
			exit;
		end if;
	end loop;
	close c02;
end if;
 
select	count(*) 
into STRICT	qt_existe_w 
from	item_requisicao_material 
where	nr_seq_aprovacao = nr_sequencia_p;
 
if (qt_existe_w > 0) then 
 
	open c03;
	loop 
	fetch c03 into 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		if (cd_setor_atendimento_w = cd_setor_atendimento_p) then 
			ie_local_usuario_w	:= 'S';
			exit;
		end if;
	end loop;
	close c03;
end if;
 
select	count(*) 
into STRICT	qt_existe_w 
from	cot_compra_item 
where	nr_seq_aprovacao = nr_sequencia_p;
 
if (qt_existe_w > 0) then 
 
	open c04;
	loop 
	fetch c04 into 
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		if (cd_setor_atendimento_w = cd_setor_atendimento_p) then 
			ie_local_usuario_w	:= 'S';
			exit;
		end if;
	end loop;
	close c04;
end if;
 
return ie_local_usuario_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_proc_aprov_setor ( nr_sequencia_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

