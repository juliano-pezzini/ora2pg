-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION ageint_obter_valores_itens_as (nr_seq_item_p bigint, ie_tipo_valor_p text, ie_exame_assoc_p text, ie_tipo_agendamento_p text, nr_seq_proc_assoc_p bigint) RETURNS bigint AS $body$
DECLARE


nr_valor_item_w				double precision;
ie_suprimir_val_exames_w	varchar(1);
ds_erro_w					varchar(255);

vl_item_adic_w				AGEINT_EXAME_ADIC_ITEM.vl_item%type;
vl_item_particular_adic_w	AGEINT_EXAME_ADIC_ITEM.vl_item_particular%type;
ie_calc_item_adic_cons_w	varchar(1);

nr_seq_proc_interno_w		proc_interno.nr_sequencia%type;
valor_item_w				double precision;

/*
ie_tipo_valor_p
V - Valor
VP - Valor particular
*/
C01 CURSOR FOR
	SELECT	coalesce(vl_item,0),
			coalesce(vl_item_particular,0)
	from	AGEINT_EXAME_ADIC_ITEM
	where	nr_seq_item = nr_seq_item_p;


BEGIN

ie_suprimir_val_exames_w := obter_param_usuario(869, 360, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_suprimir_val_exames_w);
ie_calc_item_adic_cons_w := obter_param_usuario(869, 429, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_calc_item_adic_cons_w);

select	max(vl_item),
		max(nr_seq_proc_interno)
into STRICT	valor_item_w,
		nr_seq_proc_interno_w
from	agenda_integrada_item
where	nr_sequencia = nr_seq_item_p;

	--Itens de Exames
	if (ie_tipo_agendamento_p = 'E') then
		if (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') and (ie_tipo_valor_p IS NOT NULL AND ie_tipo_valor_p::text <> '') and (ie_exame_assoc_p IS NOT NULL AND ie_exame_assoc_p::text <> '') then
			
			begin
			--Exames principais
			if (ie_exame_assoc_p = 'N') then
				if (ie_suprimir_val_exames_w = 'S') then
					begin
						nr_valor_item_w := 0;
					end;
				else
					begin
						if (ie_tipo_valor_p = 'V')then					
							select	max(vl_item)
							into STRICT	nr_valor_item_w
							from	agenda_integrada_item
							where	nr_sequencia = nr_seq_item_p;
						else
							select	max(vl_item_particular)
							into STRICT	nr_valor_item_w
							from	agenda_integrada_item
							where	nr_sequencia = nr_seq_item_p;		
						end if;
					end;
				end if;
			--Exames associados
			else
				if (ie_suprimir_val_exames_w = 'S') then
					begin
						nr_valor_item_w := 0;
					end;
				else
					begin
						if (ie_tipo_valor_p = 'V')then					
							select	max(vl_exame)
							into STRICT	nr_valor_item_w
							from	ageint_exame_associado
							where	nr_seq_ageint_item = nr_seq_item_p
							and 	nr_seq_proc_interno = nr_seq_proc_assoc_p;
						else
							select	max(vl_exame_particular)
							into STRICT	nr_valor_item_w
							from	ageint_exame_associado
							where	nr_seq_ageint_item = nr_seq_item_p
							and 	nr_seq_proc_interno = nr_seq_proc_assoc_p;
						end if;				
					end;
				end if;
			end if;	
			exception
			when others then
				ds_erro_w	:= substr(sqlerrm,1,255);
			end;
		end if;
	--Outros itens
	else
		if (ie_exame_assoc_p = 'N') then
			if (ie_tipo_valor_p = 'V') then
				select	max(vl_item)
				into STRICT	nr_valor_item_w
				from	agenda_integrada_item
				where	nr_sequencia = nr_seq_item_p;
			else
				select	max(vl_item_particular)
				into STRICT	nr_valor_item_w
				from	agenda_integrada_item
				where	nr_sequencia = nr_seq_item_p;		
			end if;	
		else
			if (ie_tipo_valor_p = 'V') then
				select	max(vl_exame)
				into STRICT	nr_valor_item_w
				from	ageint_exame_associado
				where	nr_seq_ageint_item = nr_seq_item_p;
			else
				select	max(vl_exame_particular)
				into STRICT	nr_valor_item_w
				from	ageint_exame_associado
				where	nr_seq_ageint_item = nr_seq_item_p;
			end if;

		end if;
		
	end if;
--end if;
if (ie_tipo_agendamento_p = 'C') and (ie_calc_item_adic_cons_w = 'S') then
	if (coalesce(nr_valor_item_w::text, '') = '') then
		nr_valor_item_w := 0;
	end if;
	open C01;
	loop
	fetch C01 into
		vl_item_adic_w,
		vl_item_particular_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			if (ie_tipo_valor_p = 'V') then
				nr_valor_item_w :=  nr_valor_item_w + vl_item_adic_w;
			else
				nr_valor_item_w :=  nr_valor_item_w + vl_item_particular_adic_w;
			end if;
		end;
	end loop;
	close C01;
end if;

return	nr_valor_item_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_obter_valores_itens_as (nr_seq_item_p bigint, ie_tipo_valor_p text, ie_exame_assoc_p text, ie_tipo_agendamento_p text, nr_seq_proc_assoc_p bigint) FROM PUBLIC;

