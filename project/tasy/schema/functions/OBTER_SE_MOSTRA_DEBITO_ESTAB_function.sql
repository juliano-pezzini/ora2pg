-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_mostra_debito_estab ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
cont_w			integer;
cd_funcao_w		integer;
ie_parametro_w		varchar(255);	
nm_usuario_w		varchar(255);
ie_cobranca_w		varchar(1);
ie_perdas_w		varchar(1);


BEGIN 
 
select	obter_funcao_ativa 
into STRICT	cd_funcao_w
;
 
select	wheb_usuario_pck.get_nm_usuario 
into STRICT	nm_usuario_w
;
	 
if (cd_funcao_w = 5) then 
	ie_parametro_w := obter_param_usuario(5, 155, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_parametro_w);
	ie_cobranca_w := obter_param_usuario(-815, 7, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_cobranca_w);
else 
	if (cd_funcao_w = 871) then 
		ie_parametro_w := obter_param_usuario(871, 552, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_parametro_w);
	else 
		if (cd_funcao_w = 916) then 
			ie_parametro_w := obter_param_usuario(916, 88, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_parametro_w);
		end if;
	end if;
end if;
 
 
ie_perdas_w := obter_param_usuario(-815, 8, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_perdas_w);
 
/* francisco - os 76007 - 17/12/2007 - agora Ã© tudo tratado na view abaixo */
 
 
/* lhalves os 373705 - 19/10/2011 - substituido pela function obter_se_valores_pendente. a view valores_pendentes_v fazia full na atendimento_paciente 
select	count(*) 
into	cont_w 
from	valores_pendentes_v 
where	nvl(cd_pessoa_fisica,'0')	= cd_pessoa_fisica_p 
and	(0 = cd_estabelecimento_p or cd_estabelecimento = cd_estabelecimento_p or obter_estab_financeiro(cd_estabelecimento) = cd_estabelecimento_p) 
and	(('N' = nvl(ie_parametro_w,'N')) or (('S' = nvl(ie_parametro_w,'N')) and nvl(trunc(dt_pagamento_previsto),sysdate -1) < trunc(sysdate))) ; 
*/
 
 
select	CASE WHEN obter_se_valores_pendente(cd_pessoa_fisica_p,cd_estabelecimento_p,ie_parametro_w,null)='S' THEN 1  ELSE 0 END  
into STRICT	cont_w
;
 
if (cont_w = 0) then 
 
	begin 
	select	1 
	into STRICT	cont_w 
	FROM cheque_cr a
LEFT OUTER JOIN titulo_receber b ON (a.nr_titulo = b.nr_titulo)
LEFT OUTER JOIN atendimento_paciente c ON (b.nr_atendimento = c.nr_atendimento)
LEFT OUTER JOIN convenio d ON (b.cd_convenio_conta = d.cd_convenio)
WHERE coalesce(d.ie_tipo_convenio,1) = 1 and obter_status_cheque(a.nr_seq_cheque) in (3,5,10) and coalesce(a.cd_pessoa_fisica,'0')  	<> cd_pessoa_fisica_p and c.nr_atendimento   	in (SELECT x.nr_atendimento from atendimento_paciente x where x.cd_pessoa_fisica = cd_pessoa_fisica_p) and (('N' = coalesce(ie_parametro_w,'N')) or (('S' = coalesce(ie_parametro_w,'N')) and coalesce(trunc(b.dt_pagamento_previsto), clock_timestamp() - interval '1 days') < trunc(clock_timestamp())))   LIMIT 1;
	exception 
	when no_data_found then 
		cont_w := 0;
	end;
	 
	if (cont_w = 0) then 
	 
		begin 
		select	1 
		into STRICT	cont_w 
		FROM atendimento_paciente d, titulo_receber_liq b, cheque_cr a, titulo_receber c
LEFT OUTER JOIN convenio e ON (c.cd_convenio_conta = e.cd_convenio)
WHERE b.nr_titulo		= c.nr_titulo and c.nr_atendimento	= d.nr_atendimento and a.nr_seq_caixa_rec	= b.nr_seq_caixa_rec  and coalesce(e.ie_tipo_convenio,1) = 1 and obter_status_cheque(a.nr_seq_cheque) in (3,5,10) and coalesce(a.nr_titulo::text, '') = '' and coalesce(d.cd_pessoa_fisica,'0') 	<> cd_pessoa_fisica_p and d.nr_atendimento  	in (SELECT x.nr_atendimento from atendimento_paciente x where x.cd_pessoa_fisica = cd_pessoa_fisica_p) and (('N' = coalesce(ie_parametro_w,'N')) or (('S' = coalesce(ie_parametro_w,'N')) and coalesce(trunc(c.dt_pagamento_previsto),clock_timestamp() - interval '1 days') < trunc(clock_timestamp())))   LIMIT 1;
		exception 
		when no_data_found then 
			cont_w := 0;
		end;
		 
		if (cont_w = 0) then 
		 
			begin 
			select	1 
			into STRICT	cont_w 
			from	cheque_cr b, 
				cobranca c 
			where	b.cd_pessoa_fisica	= cd_pessoa_fisica_p 
			and	c.nr_seq_cheque		= b.nr_seq_cheque 
			and	c.ie_status		= 'P' 
			and (c.cd_estabelecimento = cd_estabelecimento_p or cd_estabelecimento_p = 0) 
			and	'S'			= ie_cobranca_w  LIMIT 1;
			exception 
			when no_data_found then 
				cont_w := 0;
			end;			
		 
			if (cont_w = 0) then 
			 
				begin 
				select	1 
				into STRICT	cont_w 
				from	perda_contas_receber a 
				where	a.cd_pessoa_fisica = cd_pessoa_fisica_p 
				and (cd_estabelecimento_p = 0 or a.cd_estabelecimento = cd_estabelecimento_p) 
				and	a.ie_tipo_perda 	= 'R' 
				and	a.vl_saldo 		> 0 
				and	ie_perdas_w 		= 'S'  LIMIT 1;
				exception 
				when no_data_found then 
					cont_w := 0;
				end;				
			 
			end if;		
		end if;		
	end if;
end if;
 
if (cont_w > 0) then 
	return 'S';
else 
	return 'N';
end if;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_mostra_debito_estab ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

