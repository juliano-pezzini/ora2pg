-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_item_analisado (vl_cobrado_p convenio_retorno_glosa.vl_cobrado%type, vl_glosa_p convenio_retorno_glosa.vl_glosa%type, vl_pago_digitado_p convenio_retorno_glosa.vl_pago_digitado%type, ie_acao_glosa_p convenio_retorno_glosa.ie_acao_glosa%type, ds_justificativa_p convenio_retorno_glosa.ds_justificativa%type) RETURNS varchar AS $body$
DECLARE


/*
	Date/Timestamp:	July 07th, 2020
	Object: 	OBTER_SE_ITEM_ANALISADO
	Type:		Function
	Job avaiable:	No
	Author(s):	Cunha, Nicolas Filipe
	Usage:		Checks if an item is identified as analyzed according to the user/profile/establishment parameter 299, Insurance Return feature.
	Project:	N/A
	Note:		The following function check's if an item can be considered analyzed or not according to the user/profile/establishment parameter.
			The parameter 299 of the feature Insurance Return specificies that.
			As of the creation of this object, there are three possible values to this parameter:

			The attributes below are related to the table CONVENIO_RETORNO_GLOSA.
			S => Stands for "Saldo" (balance). If the attributes VL_COBRADO minus VL_GLOSADO OR VL_COBRADO minus VL_PAGO_DIGITADO equals zero, then the item is analyzed.
			SA => Stands for "Saldo/Acao de Glosa" (balance/denial action). Includes the previous checks, and the attribute IE_ACAO_GLOSA is not null, then the item is analyzed.
			SAJ => Stands for "Saldo/Acao de Glosa/Justificativa" (balance/denial action/rationale). Includes the previous checks, and the the attribute DS_JUSTIFICATIVA is not null, then the item is analyzed.

			In case of any doubts, contact the author(s), if not avaiable, the RnD Billing and Pharmacy management, more specifically the TISS team.

*/
ie_analisado_w 		varchar(1);
ie_def_analise_w	varchar(3);



BEGIN
	ie_def_analise_w := obter_param_usuario(27, 299, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_def_analise_w);	
	ie_analisado_w := 'N';	
	
	if (ie_def_analise_w IS NOT NULL AND ie_def_analise_w::text <> '') then
		
		if ie_def_analise_w = 'S' then
		
			select 	coalesce(max(ie_analisado), 'N')
			into STRICT	ie_analisado_w			
			from	(
				SELECT 	'S' ie_analisado
				
				where	((coalesce(vl_cobrado_p,0) - coalesce(vl_glosa_p, 0) = 0) or (coalesce(vl_cobrado_p,0) - coalesce(vl_pago_digitado_p, 0) = 0))
				) alias10;
		
		elsif ie_def_analise_w = 'SA' then
		
			select 	coalesce(max(ie_analisado), 'N')
			into STRICT	ie_analisado_w			
			from	(
				SELECT 	'S' ie_analisado
				
				where	((coalesce(vl_cobrado_p,0) - coalesce(vl_glosa_p, 0) = 0) or (coalesce(vl_cobrado_p,0) - coalesce(vl_pago_digitado_p, 0) = 0))
				and	(ie_acao_glosa_p IS NOT NULL AND ie_acao_glosa_p::text <> '')
			) alias10;
		
		elsif ie_def_analise_w = 'SAJ' then
			select 	coalesce(max(ie_analisado), 'N')
			into STRICT	ie_analisado_w
			from	(
				SELECT 	'S' ie_analisado
				
				where	((coalesce(vl_cobrado_p,0) - coalesce(vl_glosa_p, 0) = 0) or (coalesce(vl_cobrado_p,0) - coalesce(vl_pago_digitado_p, 0) = 0))
				and	(ie_acao_glosa_p IS NOT NULL AND ie_acao_glosa_p::text <> '')
				and	(ds_justificativa_p IS NOT NULL AND ds_justificativa_p::text <> '')
			) alias11;
		end if;		
	end if;
	
	return ie_analisado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_item_analisado (vl_cobrado_p convenio_retorno_glosa.vl_cobrado%type, vl_glosa_p convenio_retorno_glosa.vl_glosa%type, vl_pago_digitado_p convenio_retorno_glosa.vl_pago_digitado%type, ie_acao_glosa_p convenio_retorno_glosa.ie_acao_glosa%type, ds_justificativa_p convenio_retorno_glosa.ds_justificativa%type) FROM PUBLIC;

