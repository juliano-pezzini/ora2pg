-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_regra_agepac ( cd_agenda_p bigint, dt_agenda_p timestamp, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_exec_p text, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
ie_regra_w		varchar(01)	:= 'N';
dt_agenda_w		timestamp;
cd_municipio_ibge_w	varchar(06);
cd_area_proced_w	integer;
cd_espec_proced_w	integer;
cd_grupo_proced_w	bigint;
qt_saldo_w		integer;
qt_existe_w		bigint;
nr_seq_forma_org_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
			

BEGIN 
 
select	trunc(dt_agenda_p,'month'), 
	substr(obter_compl_pf(cd_pessoa_fisica_p, 1,'CDM'),1,6) 
into STRICT	dt_agenda_w, 
	cd_municipio_ibge_w
;
	 
/* obter informação do procedimento */
 
select	coalesce(max(cd_area_procedimento),0), 
	coalesce(max(cd_especialidade),0), 
	coalesce(max(cd_grupo_proc),0), 
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'F'),'F'),1,10)),0), 
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'G'),'G'),1,10)),0), 
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'S'),'S'),1,10)),0) 
into STRICT	cd_area_proced_w, 
	cd_espec_proced_w, 
	cd_grupo_proced_w, 
	nr_seq_forma_org_w, 
	nr_seq_grupo_w, 
	nr_seq_subgrupo_w 
from	estrutura_procedimento_v 
where	cd_procedimento	= cd_procedimento_p 
and	ie_origem_proced	= ie_origem_proced_p;
	 
/* Verifica se possui regra conforme os dados da agenda */
 
select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
into STRICT	ie_regra_w 
from	agenda_regra 
where	cd_agenda		= cd_agenda_p 
and	cd_estabelecimento	= cd_estabelecimento_p 
and	((cd_convenio	= cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
and	((cd_area_proc	= cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
and	((cd_especialidade	= cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
and	((cd_grupo_proc	= cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	 
and	coalesce(nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	 
and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w 
and	((cd_procedimento	= cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = '')) 
and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_origem_proced::text, '') = ''))) 
and	((nr_seq_proc_interno	= nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
and	((cd_medico		= cd_medico_exec_p) or (coalesce(cd_medico::text, '') = '')) 
and	((cd_municipio_ibge	= coalesce(cd_municipio_ibge_w, 'X')) or (coalesce(cd_municipio_ibge::text, '') = ''));
	 
/* Se possuir regra */
 
if (ie_regra_w = 'S') then 
	begin 
	 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	agenda_paciente_cota_munic 
	where	cd_convenio		= cd_convenio_p 
	/* OS 116811 - Jerusa - Eraldo solicitou a não restrição pelo médico executor 
	and	cd_medico		= cd_medico_exec_p*/
 
	and	cd_procedimento	= cd_procedimento_p 
	and	ie_origem_proced	= ie_origem_proced_p 
	and	nr_seq_proc_interno	= nr_seq_proc_interno_p 
	and	cd_municipio_ibge 	= cd_municipio_ibge_w 
	and	dt_mes_referencia	= dt_agenda_w;
	 
	if (qt_existe_w > 0) then 
		begin 
		/* Verifica o saldo do mês que está sendo agendado */
 
		select	coalesce(sum(qt_saldo),0) 
		into STRICT	qt_saldo_w 
		from	agenda_paciente_cota_munic 
		where	cd_convenio		= cd_convenio_p 
		/* OS 116811 - Jerusa - Eraldo solicitou a não restrição pelo médico executor 
		and	cd_medico		= cd_medico_exec_p*/
 
		and	cd_procedimento	= cd_procedimento_p 
		and	ie_origem_proced	= ie_origem_proced_p 
		and	nr_seq_proc_interno	= nr_seq_proc_interno_p 
		and	cd_municipio_ibge 	= cd_municipio_ibge_w 
		and	dt_mes_referencia	= dt_agenda_w;
	 
		/* Se saldo maior que zero, não apresentará os dados da cota por município*/
 
		if (qt_saldo_w > 0) then 
			ie_regra_w := 'N';
		end if;
		end;
	else 
		ie_regra_w := 'N';
	end if;
	end;
end if;
 
return ie_regra_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_regra_agepac ( cd_agenda_p bigint, dt_agenda_p timestamp, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_exec_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

