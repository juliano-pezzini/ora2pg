-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION cpoe_obter_volume_total ( cd_material_p bigint, qt_dose_p bigint, cd_unidade_medida_p text, cd_mat_dil_p bigint, qt_dose_dil_p bigint, cd_unid_med_dose_dil_p text, qt_volume_red_p bigint, cd_mat_red_p bigint, qt_dose_red_p bigint, cd_unid_med_dose_red_p text, cd_mat_comp1_p bigint, qt_dose_comp1_p bigint, cd_unid_med_dose_comp1_p text, cd_mat_comp2_p bigint, qt_dose_comp2_p bigint, cd_unid_med_dose_comp2_p text, cd_mat_comp3_p bigint, qt_dose_comp3_p bigint, cd_unid_med_dose_comp3_p text, cd_mat_comp4_p bigint default null, qt_dose_comp4_p bigint default null, cd_unid_med_dose_comp4_p text default null, cd_mat_comp5_p bigint default null, qt_dose_comp5_p bigint default null, cd_unid_med_dose_comp5_p text default null, cd_mat_comp6_p bigint default null, qt_dose_comp6_p bigint default null, cd_unid_med_dose_comp6_p text default null, cd_mat_comp7_p bigint default null, qt_dose_comp7_p bigint default null, cd_unid_med_dose_comp7_p text default null, nr_seq_mat_diluicao_p material_diluicao.nr_seq_interno%type default null, cd_pessoa_fisica_p bigint default null, nr_atendimento_p bigint default null, ie_via_aplicacao_p text default null, nr_sequencia_p bigint default null) RETURNS bigint AS $body$
DECLARE



	qt_dose_ml_w			cpoe_material.qt_dose%type;
	qt_volume_total_w		double precision := 0;
	qt_volume_total_medic_w	double precision;
	nr_casas_diluicao_w		bigint;
	nr_casas_diluicao_cad_w parametro_medico.nr_casas_diluicao%type;
	cd_estabelecimento_w	smallint;
	cd_unid_med_usua_ml_w   varchar(30);
	cd_unid_med_usua_w		varchar(30);
	unid_med_usua_ml_w		varchar(30);
	ie_diluir_inteiro_w		material_diluicao.ie_diluir_inteiro%type;
	qt_volume_cad_w			material_diluicao.qt_volume%type;
	qt_volume_medic_w		material_diluicao.qt_volume_medic%type;
	ie_proporcao_w			material_diluicao.ie_proporcao%type;
	qt_conversao_mat_w	 	material_conversao_unidade.qt_conversao%type;
	qt_dose_dividida_w		double precision;
	qt_dose_mat_w			double precision;
	qt_conv_ml_w			cpoe_material.qt_dose%type;
	qt_conversao_ww			material_conversao_unidade.qt_conversao%type;
	exec_w                  varchar(4000);			
	cd_unid_med_cons_w		varchar(30);
	cd_unid_med_cons_ml_w	varchar(30);
	qt_conversao_und_ori_w	double precision;
	qt_conversao_und_dest_w	double precision;
	qt_conversao_w		    double precision;
	qt_conversao_ml_w       double precision;
	qt_vol_item_comp_w 		double precision;

	procedure obter_dados_conversao_ml(
			cd_material_p         in bigint,
			cd_unidade_medida_p   in text,
			cd_unid_med_usua_p    out text,
			cd_unid_med_cons_p    out text,
			qt_conversao_p        out bigint,
			qt_conversao_ml_p     out bigint) is		
	;
BEGIN
		cd_unid_med_usua_p := obter_unid_med_usua('ML');

		cd_unid_med_cons_p := upper(substr(obter_dados_material_estab(cd_material_p, wheb_usuario_pck.get_cd_estabelecimento, 'UMS'),1,30));

		select	coalesce(max(qt_conversao),0)
		into STRICT	qt_conversao_p
		from	material_conversao_unidade
		where	cd_material = cd_material_p
		and	upper(cd_unidade_medida) = upper(cd_unidade_medida_p);


		select	coalesce(max(qt_conversao),0)
		into STRICT	qt_conversao_ml_p
		from	material_conversao_unidade
		where	cd_material = cd_material_p
		and	upper(cd_unidade_medida) = upper(obter_unid_med_usua('ML'));
	end;

	procedure obter_dados_dose_convertida(
			cd_unid_med_usua_p      in varchar2,
			cd_unidade_medida_p     in varchar2,
			cd_material_p           in number,
			cd_unid_med_cons_p      out varchar2,
			qt_conversao_und_ori_p  out number,
			qt_conversao_und_dest_p out number) is	
	begin
		begin
			select  coalesce(a.cd_unidade_medida_consumo, b.cd_unidade_medida_consumo)
			into STRICT	cd_unid_med_cons_p
			from	material_estab a,
					material b
			where	b.cd_material	= a.cd_material
			and	    a.cd_material	= cd_material_p
			and  	a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
		exception
			when others then
				begin
					select	cd_unidade_medida_consumo
					into STRICT	cd_unid_med_cons_p
					from	material
					where	cd_material = cd_material_p;
				exception
				when others then
				null;
				end;
		end;

		begin
			select coalesce(max(qt_conversao),0)
			into STRICT	 qt_conversao_und_ori_p
			from	 material_conversao_unidade
			where	 upper(cd_unidade_medida) = upper(cd_unid_med_usua_p)
			and		 cd_material = cd_material_p;
	    exception
		  when others then
		      qt_conversao_und_ori_p := null;
		end;

		begin
			select coalesce(max(qt_conversao),0)
			into STRICT   qt_conversao_und_dest_p
			from   material_conversao_unidade
			where  upper(cd_unidade_medida) = upper(cd_unidade_medida_p)
			and	   cd_material = cd_material_p;
	    exception
		  when others then
		      qt_conversao_und_dest_p := null;
		end;
	end;		
begin
if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (qt_dose_p IS NOT NULL AND qt_dose_p::text <> '') then
	
	cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);

	select	coalesce(max(nr_casas_diluicao),0)
	into STRICT	nr_casas_diluicao_cad_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;		

	nr_casas_diluicao_w := nr_casas_diluicao_cad_w;
	if (nr_casas_diluicao_w = 0) then
		nr_casas_diluicao_w := 3;
	end if;
	
	cd_unid_med_usua_w	:= obter_unid_med_usua('ml');

	obter_dados_dose_convertida(cd_unid_med_usua_w,cd_unidade_medida_p,cd_material_p,cd_unid_med_cons_w,qt_conversao_und_ori_w,qt_conversao_und_dest_w);

	if (upper(cd_unidade_medida_p) <> upper(cd_unid_med_usua_w)) then

		qt_volume_total_medic_w := obter_dose_convertida(cd_material_p, qt_dose_p, cd_unidade_medida_p, cd_unid_med_usua_w);

		if coalesce(qt_volume_total_medic_w, 0) = 0 then
			qt_volume_total_medic_w := coalesce(cpoe_obter_conversao_ml(cd_material_p, qt_dose_p, cd_unidade_medida_p,ie_via_aplicacao_p, cd_pessoa_fisica_p, nr_atendimento_p),0);
		end if;
	else
		qt_volume_total_medic_w := qt_dose_p;
	end if;	
	
	qt_vol_item_comp_w := cpoe_obter_volume_item_comp(cd_mat_comp1_p,
													  qt_dose_comp1_p,
													  cd_unid_med_dose_comp1_p,
													  cd_mat_comp2_p,
													  qt_dose_comp2_p,
													  cd_unid_med_dose_comp2_p,
													  cd_mat_comp3_p,
													  qt_dose_comp3_p,
													  cd_unid_med_dose_comp3_p,
													  cd_mat_comp4_p,
													  qt_dose_comp4_p,
													  cd_unid_med_dose_comp4_p,
													  cd_mat_comp5_p,
													  qt_dose_comp5_p,
													  cd_unid_med_dose_comp5_p,
													  cd_mat_comp6_p,
													  qt_dose_comp6_p,
													  cd_unid_med_dose_comp6_p,
													  cd_mat_comp7_p,
													  qt_dose_comp7_p,
													  cd_unid_med_dose_comp7_p,
													  nr_sequencia_p);

	begin
		exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_soma_volume_item_md (:1,:2) into :result';

		EXECUTE exec_w using in qt_volume_total_w,
									   in qt_vol_item_comp_w,
									   out qt_volume_total_w;
					
	exception
		when others then
			qt_volume_total_w := null;
	end;
	
	if (cd_mat_dil_p IS NOT NULL AND cd_mat_dil_p::text <> '') and (qt_dose_dil_p > 0) then
	
		select	max(b.ie_diluir_inteiro),
				max(b.qt_volume),
				max(b.qt_volume_medic),
				max(b.ie_proporcao)
		into STRICT	ie_diluir_inteiro_w,
				qt_volume_cad_w,
				qt_volume_medic_w,
				ie_proporcao_w
		from	material_diluicao b,
				material a
		where	a.cd_material = b.cd_material
		and 	b.nr_seq_interno = nr_seq_mat_diluicao_p
		and 	a.cd_material = cd_material_p
		and 	(cd_mat_dil_p IS NOT NULL AND cd_mat_dil_p::text <> '');
		
		if (ie_diluir_inteiro_w = 'S') then
			select	coalesce(max(a.qt_conversao), 1)
			into STRICT	qt_conversao_mat_w
			from	material_conversao_unidade a
			where	a.cd_material = cd_material_p
			and		a.cd_unidade_medida = cd_unidade_medida_p;

			begin
				exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_conversao_mat_md (:1,:2) into :result';

				EXECUTE exec_w using in qt_dose_p,
											   in qt_conversao_mat_w,
											   out qt_conversao_mat_w;
							
			exception
				when others then
					qt_conversao_mat_w := null;
			end;

			qt_dose_dividida_w := qt_conversao_mat_w;
			qt_dose_mat_w := obter_dose_convertida(cd_material_p, ceil(qt_dose_dividida_w), obter_dados_material(cd_material_p,'UMC'), cd_unidade_medida_p);

			obter_dados_conversao_ml(cd_material_p,cd_unidade_medida_p,cd_unid_med_usua_ml_w,cd_unid_med_cons_w,qt_conversao_w,qt_conversao_ml_w);
			begin
				exec_w := 'call obter_conversao_ml_md(:1,:2,:3,:4,:5,:6) into :result';

				EXECUTE exec_w using in qt_dose_mat_w,
											   in cd_unidade_medida_p,
											   in cd_unid_med_usua_ml_w,
											   in cd_unid_med_cons_w,
											   in qt_conversao_w,
											   in qt_conversao_ml_w,
											   out qt_conv_ml_w;
			exception
				when others then
					qt_conv_ml_w := null;
			end;

			obter_dados_conversao_ml(cd_mat_dil_p,cd_unid_med_dose_dil_p,cd_unid_med_usua_ml_w,cd_unid_med_cons_w,qt_conversao_w,qt_conversao_ml_w); 			

			begin
				exec_w := 'call obter_conversao_ml_md(:1,:2,:3,:4,:5,:6) into :result';

				EXECUTE exec_w using in qt_dose_dil_p,
											   in cd_unidade_medida_p,
											   in cd_unid_med_usua_ml_w,
											   in cd_unid_med_cons_w,
											   in qt_conversao_w,
											   in qt_conversao_ml_w,
											   out qt_dose_ml_w;
			exception
				when others then
					qt_dose_ml_w := null;
			end;
			
			if (qt_volume_cad_w > 0) then
				qt_conv_ml_w := qt_dose_ml_w;
			end if;
			
			obter_dados_dose_convertida(cd_unid_med_dose_dil_p,cd_unid_med_usua_w,cd_mat_dil_p,cd_unid_med_cons_w,qt_conversao_und_ori_w,qt_conversao_und_dest_w);
			begin
				exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_qt_dose_ml_md (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10) into :result';

				EXECUTE exec_w using in ie_diluir_inteiro_w,
											   in nr_casas_diluicao_w,
											   in qt_dose_ml_w,  
											   in qt_conversao_mat_w, 
											   in qt_dose_dividida_w, 
											   in cd_unid_med_dose_dil_p,
											   in cd_unid_med_usua_w,			
											   in cd_unid_med_cons_w,
											   in qt_conversao_und_ori_w,
											   in qt_conversao_und_dest_w,
											   out qt_dose_ml_w;
							
			exception
				when others then
					qt_dose_ml_w := null;
			end;
		else
			obter_dados_dose_convertida(cd_unid_med_dose_dil_p,cd_unid_med_usua_w,cd_mat_dil_p,cd_unid_med_cons_w,qt_conversao_und_ori_w,qt_conversao_und_dest_w);
			begin
				exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_qt_dose_ml_md (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10) into :result';

				EXECUTE exec_w using in ie_diluir_inteiro_w,
											   in nr_casas_diluicao_w,
											   in qt_dose_dil_p,  
											   in qt_conversao_mat_w, 
											   in qt_dose_dividida_w, 
											   in cd_unid_med_dose_dil_p,
											   in cd_unid_med_usua_w,			
											   in cd_unid_med_cons_w,
											   in qt_conversao_und_ori_w,
											   in qt_conversao_und_dest_w,
											   out qt_dose_ml_w;
			exception
				when others then
					qt_dose_ml_w := null;
			end;

			if ((coalesce(ie_proporcao_w, 'F') = 'F') and (coalesce(qt_volume_medic_w,0) > 0) and (nr_casas_diluicao_cad_w > 0)) then
				qt_volume_total_medic_w := qt_volume_medic_w;
			end if;
		end if;

		begin
			exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_vol_total_com_dil_md (:1,:2,:3,:4) into :result';
			EXECUTE exec_w using 	in qt_volume_total_medic_w,
											in nr_casas_diluicao_w,
											in qt_volume_total_w, 
											in qt_dose_ml_w,											
											out qt_volume_total_w;
		exception
			when others then
				qt_volume_total_w := null;
		end;

		if ((coalesce(qt_volume_medic_w,0) > 0) and (coalesce(nr_casas_diluicao_cad_w, 0) > 0) and (coalesce(ie_diluir_inteiro_w, 'N') = 'N')) then
			qt_conversao_ww := Obter_dose_convertida(cd_material_p, qt_volume_medic_w, obter_unid_med_usua('ml'), cd_unidade_medida_p);

			if (coalesce(qt_conversao_ww,0) > 0) then
			begin
				exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_vol_total_dil_prop_md (:1,:2,:3,:4,:5) into :result';

				EXECUTE exec_w using 	in qt_volume_medic_w,
												in qt_dose_ml_w,
												in qt_dose_p,
												in qt_conversao_ww,
												in nr_casas_diluicao_w,
												out qt_volume_total_w;
			exception
				when others then
					qt_volume_total_w := null;
			end;
			end if;
		end if;
		
	else
		begin
		exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_soma_volume_item_md (:1,:2) into :result';

		EXECUTE exec_w using in qt_volume_total_w,
									   in qt_volume_total_medic_w,
									   out qt_volume_total_w;
					
		exception
			when others then
				qt_volume_total_w := null;
		end;
	end if;
	
	if (cd_mat_red_p IS NOT NULL AND cd_mat_red_p::text <> '') and (qt_dose_red_p > 0) then		
		
		obter_dados_dose_convertida(cd_unid_med_dose_red_p,cd_unid_med_usua_w,cd_mat_red_p,cd_unid_med_cons_w,qt_conversao_und_ori_w,qt_conversao_und_dest_w);
		begin
		  exec_w := 'call cpoe_obter_dados_vol_md_pck.obter_vol_total_com_red_md(:1,:2,:3,:4,:5,:6,:7,:8) into :result';

		  EXECUTE exec_w using in qt_volume_red_p,
										 in qt_dose_red_p,
										 in cd_unid_med_usua_w,
										 in cd_unid_med_dose_red_p, 			  
										 in cd_unid_med_cons_w,
										 in qt_conversao_und_ori_w,
										 in qt_conversao_und_dest_w,
										 in qt_volume_total_w,
										 out qt_volume_total_w;
		exception
		  when others then
			qt_volume_total_w := null;
		end;
		
	end if;
end if;

return	qt_volume_total_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_obter_volume_total ( cd_material_p bigint, qt_dose_p bigint, cd_unidade_medida_p text, cd_mat_dil_p bigint, qt_dose_dil_p bigint, cd_unid_med_dose_dil_p text, qt_volume_red_p bigint, cd_mat_red_p bigint, qt_dose_red_p bigint, cd_unid_med_dose_red_p text, cd_mat_comp1_p bigint, qt_dose_comp1_p bigint, cd_unid_med_dose_comp1_p text, cd_mat_comp2_p bigint, qt_dose_comp2_p bigint, cd_unid_med_dose_comp2_p text, cd_mat_comp3_p bigint, qt_dose_comp3_p bigint, cd_unid_med_dose_comp3_p text, cd_mat_comp4_p bigint default null, qt_dose_comp4_p bigint default null, cd_unid_med_dose_comp4_p text default null, cd_mat_comp5_p bigint default null, qt_dose_comp5_p bigint default null, cd_unid_med_dose_comp5_p text default null, cd_mat_comp6_p bigint default null, qt_dose_comp6_p bigint default null, cd_unid_med_dose_comp6_p text default null, cd_mat_comp7_p bigint default null, qt_dose_comp7_p bigint default null, cd_unid_med_dose_comp7_p text default null, nr_seq_mat_diluicao_p material_diluicao.nr_seq_interno%type default null, cd_pessoa_fisica_p bigint default null, nr_atendimento_p bigint default null, ie_via_aplicacao_p text default null, nr_sequencia_p bigint default null) FROM PUBLIC;

