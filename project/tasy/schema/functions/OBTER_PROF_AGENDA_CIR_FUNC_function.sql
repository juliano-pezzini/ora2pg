-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prof_agenda_cir_func ( nr_seq_agenda_p bigint, ie_funcao_p text) RETURNS varchar AS $body$
DECLARE


ds_profissional_w	varchar(4000):= '';
nm_profissional_w	varchar(60):='';

/* 'C' - Circulante
'A' - Auxiliar
'I - Instrumentador
O - Outros
E - Anestesista*/
instrumentador CURSOR FOR
	SELECT	obter_initcap(substr(obter_nome_pf(p.cd_pessoa_fisica),1,60)) nm_profissional
	from		pessoa_fisica p,
				funcao_medico b,
				profissional_agenda a
	where		a.nr_seq_agenda 		= nr_seq_agenda_p
	and 		a.cd_funcao 			= b.cd_funcao
	and		p.cd_pessoa_fisica 	= a.cd_profissional
	and		IE_INSTRUMENTADOR		= 'S'
	order by	1 desc;

circulante CURSOR FOR
	SELECT	obter_initcap(substr(obter_nome_pf(p.cd_pessoa_fisica),1,60)) nm_profissional
	from		pessoa_fisica p,
				funcao_medico b,
				profissional_agenda a
	where		a.nr_seq_agenda = nr_seq_agenda_p
	and 		a.cd_funcao = b.cd_funcao
	and		p.cd_pessoa_fisica = a.cd_profissional
	and		IE_INSTRUMENTADOR	= 'N'
	and		ie_medico		= 'N'
	and		IE_ANESTESISTA 		= 'N'
	and		IE_AUXILIAR    		= 'N'
	order by	1 desc;

outros CURSOR FOR
	SELECT	obter_initcap(substr(obter_nome_pf(cd_profissional),1,60)) nm_profissional,
				ie_medico,
				IE_ANESTESISTA,
				IE_AUXILIAR
	from		pessoa_fisica p,
				funcao_medico b,
				profissional_agenda a
	where		a.nr_seq_agenda = nr_seq_agenda_p
	and 		a.cd_funcao = b.cd_funcao
	and		p.cd_pessoa_fisica = a.cd_profissional
	and		IE_INSTRUMENTADOR	= 'N'
	order by	1 desc;

anestesista CURSOR FOR
	SELECT	obter_initcap(substr(obter_nome_pf(cd_profissional),1,60)) nm_profissional
	from		pessoa_fisica p,
				funcao_medico b,
				profissional_agenda a
	where		a.nr_seq_agenda = nr_seq_agenda_p
	and 		a.cd_funcao = b.cd_funcao
	and		p.cd_pessoa_fisica = a.cd_profissional
	and		IE_ANESTESISTA 		= 'S'
	order by	1 desc;
BEGIN

if (ie_funcao_p = 'I') then
	FOR r_c01 IN instrumentador LOOP
		begin
		if (r_c01.nm_profissional IS NOT NULL AND r_c01.nm_profissional::text <> '') then
			if (coalesce(ds_profissional_w::text, '') = '') then
				ds_profissional_w	:=	r_c01.nm_profissional;
			else
				ds_profissional_w	:=	r_c01.nm_profissional || ', ' || ds_profissional_w;
			end if;
		end if;
		end;
	end loop;
elsif (ie_funcao_p = 'C') then
	FOR r_c01 IN circulante LOOP
		begin
		if (r_c01.nm_profissional IS NOT NULL AND r_c01.nm_profissional::text <> '') then
			if (coalesce(ds_profissional_w::text, '') = '') then
				ds_profissional_w	:=	r_c01.nm_profissional;
			else
				ds_profissional_w	:=	r_c01.nm_profissional || ', ' || ds_profissional_w;
			end if;
		end if;
		end;
	end loop;
elsif (ie_funcao_p = 'O') then
	FOR r_c01 IN outros LOOP
		begin
		if (r_c01.ie_medico = 'S') or (r_c01.ie_anestesista = 'S') or (r_c01.ie_auxiliar = 'S') then
			if (r_c01.nm_profissional IS NOT NULL AND r_c01.nm_profissional::text <> '') then
				if (coalesce(ds_profissional_w::text, '') = '') then
					ds_profissional_w	:=	r_c01.nm_profissional;
				else
					ds_profissional_w	:=	r_c01.nm_profissional || ', ' || ds_profissional_w;
				end if;
			end if;
		end if;
		end;
	end loop;
elsif (ie_funcao_p = 'E') then
	FOR r_c01 IN anestesista LOOP
		begin
		if (r_c01.nm_profissional IS NOT NULL AND r_c01.nm_profissional::text <> '') then
			if (coalesce(ds_profissional_w::text, '') = '') then
				ds_profissional_w	:=	r_c01.nm_profissional;
			else
				ds_profissional_w	:=	r_c01.nm_profissional || ', ' || ds_profissional_w;
			end if;
		end if;
		end;
	end loop;
end if;

return	ds_profissional_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prof_agenda_cir_func ( nr_seq_agenda_p bigint, ie_funcao_p text) FROM PUBLIC;

