-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_se_conta_exige_etapa (nr_interno_conta_p bigint, cd_estabelecimento_p bigint) RETURNS varchar AS $body$
DECLARE


ie_exige_w		varchar(01)	:= 'N';
qt_reg_w		bigint;
ie_tipo_atendimento_w	integer;
cd_convenio_w		bigint;
ie_tipo_regra_w		varchar(03);
qt_regra_w		bigint;
vl_minimo_w		double precision;
vl_maximo_w		double precision;
vl_conta_w		double precision;
ie_tipo_atend_conta_w	smallint;

C01 CURSOR FOR
	SELECT	ie_tipo_etapa,
		qt_regra,
		coalesce(vl_minimo,0),
		coalesce(vl_maximo,0)
	from	regra_exige_etapa_conta
	where	cd_estabelecimento				= cd_estabelecimento_p
	and	coalesce(cd_convenio, cd_convenio_w)			= cd_convenio_w
	and 	coalesce(IE_REGRA_TIPO_ATEND,'A') = 'A'
	and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w
	
union all

	SELECT	ie_tipo_etapa,
		qt_regra,
		coalesce(vl_minimo,0),
		coalesce(vl_maximo,0)
	from	regra_exige_etapa_conta
	where	cd_estabelecimento				= cd_estabelecimento_p
	and	coalesce(cd_convenio, cd_convenio_w)			= cd_convenio_w
	and 	coalesce(IE_REGRA_TIPO_ATEND,'A') = 'C'
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atend_conta_w,0)) =  coalesce(ie_tipo_atend_conta_w,0)
	order by ie_tipo_etapa;


BEGIN

select	count(*)
into STRICT	qt_reg_w
from	regra_exige_etapa_conta
where	cd_estabelecimento		= cd_estabelecimento_p;

if (qt_reg_w	> 0) then

	select	b.ie_tipo_atendimento,
		a.cd_convenio_parametro,
		a.ie_tipo_atend_conta
	into STRICT	ie_tipo_atendimento_w,
		cd_convenio_w,
		ie_tipo_atend_conta_w
	from	atendimento_paciente b,
		conta_paciente a
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= nr_interno_conta_p;

	open C01;
	loop
	fetch C01 into
		ie_tipo_regra_w,
		qt_regra_w,
		vl_minimo_w,
		vl_maximo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (ie_exige_w	= 'N') then

			vl_conta_w:= obter_valor_conta(nr_interno_conta_p, 0);

			select 	CASE WHEN vl_maximo_w=0 THEN vl_conta_w  ELSE vl_maximo_w END
			into STRICT	vl_maximo_w
			;

			if	(vl_conta_w  >= vl_minimo_w AND vl_conta_w <= vl_maximo_w) then

				select	count(*)
				into STRICT	qt_reg_w
				from	fatur_etapa b,
					conta_paciente_etapa a
				where	a.nr_seq_etapa		= b.nr_sequencia
				and	b.ie_tipo_etapa		= coalesce(ie_tipo_regra_w, b.ie_tipo_etapa)
				and	a.nr_interno_conta	= nr_interno_conta_p;

				if (qt_reg_w	< qt_regra_w) then
					ie_exige_w	:= 'S';
				end if;
			end if;
		end if;

		end;
	end loop;
	close C01;


end if;


return	ie_exige_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_se_conta_exige_etapa (nr_interno_conta_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

