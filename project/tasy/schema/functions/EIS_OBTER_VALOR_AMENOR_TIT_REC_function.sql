-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION eis_obter_valor_amenor_tit_rec ( nr_titulo_p bigint, dt_parametro_p timestamp) RETURNS bigint AS $body$
DECLARE

 
 
/* 
EDGAR 03/11/2011 
OS 379188 - CRIADA ESTA FUNCTION A PARTIR DA Obter_Valor_Amenor_Tit_Rec POR MOTIVOS DE PERFROMANCE NA GERAR_EIS_COBRANCA 
POR FAVOR, MUITO CUIDAO AO ALTER√Å-LA 
 
RETIREI OS TRATAMENTOS DA GRG 
 
 
*/
 
 
vl_amenor_w		double precision	:= 0;
vl_guia_w		double precision;
vl_pago_w		double precision;
vl_glosa_w		double precision;
ie_titulo_receber_w	varchar(255);
nr_interno_conta_W	bigint;
cd_estabelecimento_w	bigint;
cd_convenio_w		bigint;
ie_tit_ret_senha_w	varchar(255);
nr_seq_protocolo_w	double precision;
vl_grg_w		double precision;


BEGIN 
 
begin 
select	max(nr_interno_conta), 
	max(cd_estabelecimento), 
	max(cd_convenio_conta), 
	max(nr_seq_protocolo) 
into STRICT	nr_interno_conta_W, 
	cd_estabelecimento_w, 
	cd_convenio_w, 
	nr_seq_protocolo_w 
from 	titulo_receber 
where	nr_titulo = nr_titulo_p;
exception 
	when no_data_found then 
		nr_interno_conta_w := null;
end;
 
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') or (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then 
 
	select	coalesce(max(ie_tit_ret_senha),'N') 
	into STRICT	ie_tit_ret_senha_w 
	from	convenio_estabelecimento 
	where	cd_convenio		= cd_convenio_w 
	and	cd_estabelecimento	= cd_estabelecimento_w;
 
	if (ie_tit_ret_senha_w = 'S') then 
 
		select 	coalesce(sum(a.vl_guia),0) + vl_guia_w 
		into STRICT	vl_guia_w 
		from	conta_paciente_guia a, 
			(SELECT distinct 
				y.nr_interno_conta, 
				y.cd_autorizacao 
			from	convenio_retorno x, 
				convenio_retorno_item y 
			where	y.nr_seq_retorno			= x.nr_sequencia 
			and	x.ie_status_retorno			= 'F' 
			and	y.nr_titulo				= nr_titulo_p 
			and	coalesce(x.dt_baixa_cr,dt_parametro_p) 	<= dt_parametro_p) b 
		where	a.nr_interno_conta				= b.nr_interno_conta 
		and	a.cd_autorizacao				<> b.cd_autorizacao 
		and	obter_senha_atendimento(a.nr_atendimento)	= b.cd_autorizacao;
 
	else 
 
		select	coalesce(sum(a.vl_guia),0) 
		into STRICT	vl_guia_w 
		from	conta_paciente_guia a, 
			(SELECT distinct 
				y.nr_interno_conta, 
				y.cd_autorizacao 
			from	convenio_retorno x, 
				convenio_retorno_item y 
			where	y.nr_seq_retorno			= x.nr_sequencia 
			and	x.ie_status_retorno			= 'F' 
			and	y.nr_titulo				= nr_titulo_p 
			and	coalesce(x.dt_baixa_cr,dt_parametro_p)	<= dt_parametro_p) b 
		where	a.nr_interno_conta	= b.nr_interno_conta 
		and	a.cd_autorizacao	= b.cd_autorizacao;
 
	end if;
 
	if (vl_guia_w = 0) then 
 
		begin 
 
		select 	obter_valor_conv_estab(cd_convenio_parametro, cd_estabelecimento,'IE_TITULO_RECEBER') 
		into STRICT	ie_titulo_receber_w 
		from 	conta_paciente 
		where	nr_interno_conta = nr_interno_conta_W;
		exception 
			when	no_data_found then 
				ie_titulo_receber_w := null;
		end;
 
		if (ie_titulo_receber_w = 'C') then 
			select	sum(coalesce(a.vl_guia,0)) 
			into STRICT	vl_guia_w 
			from	conta_paciente_guia a, 
				(SELECT distinct 
					y.nr_interno_conta, 
					y.cd_autorizacao 
				from	convenio_retorno x, 
					convenio_retorno_item y 
				where	y.nr_seq_retorno			= x.nr_sequencia 
				and	x.ie_status_retorno			= 'F' 
				and	y.nr_titulo				= nr_titulo_p 
				and	coalesce(x.dt_baixa_cr,dt_parametro_p)	<= dt_parametro_p) b 
			where	a.nr_interno_conta				= b.nr_interno_conta;
 
		end if;
 
	end if;
 
	select 	sum(coalesce(vl_recebido,0) + coalesce(vl_glosa,0)) 
	into STRICT	vl_pago_w 
	from	titulo_receber_liq 
	where	nr_titulo		= nr_titulo_p 
	and	(nr_seq_retorno IS NOT NULL AND nr_seq_retorno::text <> '') 
	and	coalesce(ie_lib_caixa, 'S') 	= 'S' 
	and	dt_recebimento		<= dt_parametro_p;
 
	vl_amenor_w			:= coalesce(vl_guia_w,0) - coalesce(vl_pago_w,0);
 
end if;
 
return vl_amenor_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION eis_obter_valor_amenor_tit_rec ( nr_titulo_p bigint, dt_parametro_p timestamp) FROM PUBLIC;

