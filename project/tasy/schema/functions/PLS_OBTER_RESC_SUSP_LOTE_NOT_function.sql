-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_resc_susp_lote_not ( nr_seq_lote_p bigint, nr_seq_pagador_p bigint, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE


/*
ie_opcao_p

'PR' - Pagadores rescindidos
'PS' - Pagadores suspensos
'BR' - Benefici치rios rescindidos
'BS' - Benefici치rios suspensos
'VBR' - Valor benefici치rios rescindidos
'VBS' - Valor benefici치rios suspensos
*/
vl_retorno_w	double precision	:= null;


BEGIN

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	if (ie_opcao_p = 'BR') then
		select	count(*)
		into STRICT	vl_retorno_w
		from	pls_segurado b,
			pls_notificacao_pagador a
		where	a.nr_seq_pagador	= b.nr_seq_pagador
		and	a.nr_seq_lote		= nr_seq_lote_p
		and	b.nr_seq_notific_pagador = a.nr_sequencia
		and	(b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '');
	elsif (ie_opcao_p = 'BS') then
		select	count(*)
		into STRICT	vl_retorno_w
		from	pls_segurado b,
			pls_notificacao_pagador a
		where	a.nr_seq_pagador	= b.nr_seq_pagador
		and	a.nr_seq_lote		= nr_seq_lote_p
		and	b.nr_seq_notific_susp	= a.nr_sequencia
		and	b.ie_situacao_atend	= 'S';
	elsif (ie_opcao_p = 'B') then
		select	count(*)
		into STRICT	vl_retorno_w
		from	pls_plano		c,
			pls_segurado 		b,
			pls_notificacao_pagador a
		where	a.nr_seq_pagador	= b.nr_seq_pagador
		and	c.nr_sequencia		= b.nr_seq_plano
		and	a.nr_seq_lote		= nr_seq_lote_p;
	elsif (ie_opcao_p = 'PR') then
		select	count(*)
		into STRICT	vl_retorno_w
		from	pls_notificacao_pagador a
		where	a.nr_seq_lote = nr_seq_lote_p
		and	(a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '');
	elsif (ie_opcao_p = 'PS') then
		select	count(*)
		into STRICT	vl_retorno_w
		from	pls_notificacao_pagador a
		where	a.nr_seq_lote = nr_seq_lote_p
		and	(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '');
	elsif (ie_opcao_p = 'VBR') then
		select	coalesce(sum(c.vl_preco_atual),0)
		into STRICT	vl_retorno_w
		from	pls_segurado_preco	c,
			pls_segurado		b,
			pls_notificacao_pagador a
		where	a.nr_seq_pagador	= b.nr_seq_pagador
		and	b.nr_sequencia		= c.nr_seq_segurado
		and	a.nr_seq_lote		= nr_seq_lote_p
		and	b.nr_seq_notific_pagador = a.nr_sequencia
		and	(b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '')
		and	c.nr_sequencia	=	(SELECT	max(x.nr_sequencia)
						from	pls_segurado_preco x
						where	x.nr_seq_segurado = b.nr_sequencia);
	elsif (ie_opcao_p = 'VBS') then
		select	coalesce(sum(c.vl_preco_atual),0)
		into STRICT	vl_retorno_w
		from	pls_segurado_preco	c,
			pls_segurado		b,
			pls_notificacao_pagador a
		where	a.nr_seq_pagador	= b.nr_seq_pagador
		and	b.nr_sequencia		= c.nr_seq_segurado
		and	a.nr_seq_lote		= nr_seq_lote_p
		and	b.nr_seq_notific_susp 	= a.nr_sequencia
		and	b.ie_situacao_atend	= 'S'
		and	c.nr_sequencia	=	(SELECT	max(x.nr_sequencia)
						from	pls_segurado_preco x
						where	x.nr_seq_segurado = b.nr_sequencia);
	end if;
end if;

return	vl_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_resc_susp_lote_not ( nr_seq_lote_p bigint, nr_seq_pagador_p bigint, ie_opcao_p text) FROM PUBLIC;

