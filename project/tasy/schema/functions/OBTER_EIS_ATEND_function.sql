-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_eis_atend ( dt_inicio_p timestamp, dt_final_p timestamp, ie_opcao_p text) RETURNS bigint AS $body$
DECLARE

/* 
Total de Atendimentos Escala Braden    = B 
Total de Atendimentos Escala Braden Q = Q 
Total de Atendimentos Escala complexidade Fugulin    = F 
*/
			 
ds_retorno_w	bigint;
	

BEGIN 
 
 
if (ie_opcao_p = 'B') then 
 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(distinct e.nr_atendimento) 
		into STRICT	ds_retorno_w 
		from 	atend_escala_braden e, 
			estabelecimento f, 
			atendimento_paciente a 
		where 	a.nr_atendimento= e.nr_atendimento 
		and	a.cd_estabelecimento = f.cd_estabelecimento 
		and	(e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '') 
		and	trunc(e.dt_avaliacao) = trunc(dt_inicio_p);
	else 
		select 	count(distinct e.nr_atendimento) 
		into STRICT	ds_retorno_w 
		from 	atend_escala_braden e, 
			estabelecimento f, 
			atendimento_paciente a 
		where 	a.nr_atendimento= e.nr_atendimento 
		and	a.cd_estabelecimento = f.cd_estabelecimento 
		and	(e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '') 
		and	trunc(e.dt_avaliacao) between trunc(dt_inicio_p) and trunc(dt_final_p);
	end if;
	 
	 
elsif (ie_opcao_p = 'Q') then 
	 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(distinct e.nr_atendimento) 
		into STRICT	ds_retorno_w 
		FROM 	atend_escala_braden_q e, 
			estabelecimento f, 
			atendimento_paciente a 
		WHERE 	a.nr_atendimento= e.nr_atendimento 
		AND	a.cd_estabelecimento = f.cd_estabelecimento 
		AND	(e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '') 
		and	trunc(e.dt_avaliacao) = trunc(dt_inicio_p);
	else 
		select 	count(distinct e.nr_atendimento) 
		into STRICT	ds_retorno_w 
		FROM 	atend_escala_braden_q e, 
			estabelecimento f, 
			atendimento_paciente a 
		WHERE 	a.nr_atendimento= e.nr_atendimento 
		AND	a.cd_estabelecimento = f.cd_estabelecimento 
		AND	(e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '') 
		and	trunc(e.dt_avaliacao) between trunc(dt_inicio_p) and trunc(dt_final_p);
	end if;
	 
elsif (ie_opcao_p = 'F') then 
	 
	if (coalesce(dt_final_p::text, '') = '') then 
		select 	count(g.cd_pessoa_fisica) 
		into STRICT	ds_retorno_w 
		from  gca_atendimento g, 
			estabelecimento f, 
			atendimento_paciente a, 
			gca_gradacao d 
		where  a.nr_atendimento = g.nr_atendimento 
		and  	d.nr_sequencia = g.nr_seq_gradacao 
		and  	a.cd_estabelecimento = f.cd_estabelecimento 
		and  	(g.dt_liberacao IS NOT NULL AND g.dt_liberacao::text <> '') 
		and	g.ie_autor = 'F' 
		and   g.ie_situacao = 'A' 
		and	trunc(g.dt_avaliacao) = trunc(dt_inicio_p);
	else 
		select 	count(g.cd_pessoa_fisica) 
		into STRICT	ds_retorno_w 
		from  gca_atendimento g, 
			estabelecimento f, 
			atendimento_paciente a, 
			gca_gradacao d 
		where  a.nr_atendimento = g.nr_atendimento 
		and  	d.nr_sequencia = g.nr_seq_gradacao 
		and  	a.cd_estabelecimento = f.cd_estabelecimento 
		and  	(g.dt_liberacao IS NOT NULL AND g.dt_liberacao::text <> '') 
		and	g.ie_autor = 'F' 
		and   g.ie_situacao = 'A' 
		and	trunc(g.dt_avaliacao) between trunc(dt_inicio_p) and trunc(dt_final_p);
 
	end if;
 
 
	 
end if;
return	ds_retorno_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_eis_atend ( dt_inicio_p timestamp, dt_final_p timestamp, ie_opcao_p text) FROM PUBLIC;

