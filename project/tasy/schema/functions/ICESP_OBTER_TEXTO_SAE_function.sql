-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function icesp_obter_texto_sae as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION icesp_obter_texto_sae ( nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	varchar;
BEGIN
	v_query := 'SELECT * FROM icesp_obter_texto_sae_atx ( ' || quote_nullable(nr_atendimento_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret varchar);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION icesp_obter_texto_sae_atx ( nr_atendimento_p bigint) RETURNS varchar AS $body$
DECLARE

 
ds_retorno_w		varchar(32000);
ds_retorno_ww		varchar(32000);
ds_diagnostico_W	varchar(32000);
nr_Seq_retorno_w 	bigint;
ds_sql_w		varchar(32000);
ds_aspecto_w		varchar(32000);
ds_resultado_W 	varchar(32000);
nr_seq_sae_w		bigint;
nr_seq_item_w		bigint;
ds_texto_w		varchar(32000);
dt_liberacao_w		varchar(100);
modelo_sae_w		varchar(400);c01 CURSOR FOR
	SELECT	substr(obter_desc_item_examinar(b.nr_seq_item),1,100), 
      b.nr_seq_item 
	from   pe_prescricao a, 
      pe_prescr_item_result b, 
      pe_item_examinar r, 
      pe_item_tipo_item e 
	where  nr_atendimento = nr_Atendimento_p 
	and	  r.nr_sequencia	= e.nr_seq_item 
	and 	  e.nr_seq_item = b.nr_seq_item 
	and   b.nr_seq_prescr = a.nr_sequencia 
	and   a.nr_sequencia = nr_seq_sae_w 
	group 	by b.nr_seq_item,nr_seq_apres 
	ORDER 	BY nr_seq_apres,substr(obter_desc_item_examinar(nr_seq_item),1,100);

c02 CURSOR FOR 
	SELECT 	substr(obter_desc_item_resultado(nr_seq_result),1,255)|| 
		coalesce(CASE WHEN coalesce(b.ds_observacao::text, '') = '' THEN null  ELSE ' - '||b.ds_observacao END || 
		CASE WHEN substr(obter_desc_topografia_dor(nr_seq_topografia),1,255) IS NULL THEN null  ELSE ' - '||substr(obter_desc_topografia_dor(nr_seq_topografia),1,255) END || 
		CASE WHEN substr(obter_valor_dominio(1372,ie_lado),1,100) IS NULL THEN null  ELSE ' - '||substr(obter_valor_dominio(1372,ie_lado),1,100) END ||', ',',') 
	from  pe_prescricao a, 
		pe_prescr_item_result b 
	where  nr_atendimento = nr_Atendimento_p 
	and   b.nr_seq_prescr = a.nr_sequencia 
	and  	a.nr_sequencia = nr_seq_sae_w 
	and  	b.nr_seq_item  = nr_seq_item_w 
	order 	by 1;

 

BEGIN 
 
select 	max(nr_sequencia) 
into STRICT	nr_seq_sae_w 
from	pe_prescricao 
where	nr_atendimento	= nr_atendimento_p 
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
and	ie_situacao = 'A' 
and	nm_usuario = obter_usuario_ativo;
 
ds_sql_w :=   'select	ds_comentario 
		from  pe_prescricao a, 
			pe_prescr_comentario b 
		where  b.nr_Seq_prescr(+) = a.nr_sequencia 
		and  	a.nr_sequencia = :nr_seq_sae_w';
 
	nr_Seq_retorno_w := converte_rtf_string(ds_sql_w, nr_seq_sae_w, 'TASY', nr_Seq_retorno_w);
 
if (coalesce(nr_Seq_retorno_w, 0) > 0) then 
	select 	ds_texto_clob 
	into STRICT	ds_retorno_ww 
	from	tasy_conversao_rtf a 
	where	a.nr_sequencia = nr_Seq_retorno_w;
end if;
 
select chr(10) || obter_desc_expressao(303710) || ' ' ||chr(10)||chr(9)|| 
    obter_select_concatenado_bv('select  substr(pe_obter_desc_diag(nr_seq_diag,''DI''),1,120) 
                  from   pe_prescr_diag 
                  where   nr_Seq_prescr = :nr_sequencia',':nr_sequencia='||r.nr_sequencia,', ')||chr(10)||'		' 
into STRICT 	ds_diagnostico_W 
from	pe_prescricao r 
where  nr_atendimento = nr_Atendimento_p 
and  	r.nr_sequencia = nr_seq_sae_w;
 
ds_retorno_w	:= null;
 
select CASE WHEN coalesce(max(dt_liberacao)::text, '') = '' THEN obter_desc_expressao(321546)  ELSE to_char(max(dt_liberacao),'dd/mm/yyyy hh24:mi:ss') END , 
    CASE WHEN coalesce(max(nr_seq_modelo)::text, '') = '' THEN 'Não informado modelo'  ELSE max(substr(obter_desc_mod_sae(nr_Seq_modelo),1,255)) END  
into STRICT	dt_liberacao_w, 
	modelo_sae_w 
from  pe_prescricao a, 
	pe_prescr_item_result b 
where  nr_atendimento = nr_Atendimento_p 
and   b.nr_seq_prescr = a.nr_sequencia 
and   a.nr_sequencia = nr_seq_sae_w;
 
open C01;
loop 
fetch C01 into 
	ds_aspecto_w, 
	nr_seq_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ds_retorno_w	:= ds_retorno_w||chr(9)||ds_aspecto_w||':';
 
	open C02;
	loop 
	fetch C02 into 
		ds_resultado_W;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		ds_retorno_w :=	ds_retorno_w||chr(9)|| ds_resultado_W;
		end;
	end loop;
	close C02;
 
	end;
end loop;
close C01;
 
commit;
 
ds_texto_w	:= 	/*chr(9)||'Liberação : '||dt_liberacao_w||chr(10)|| 
			chr(9)||'Modelo	 : '||modelo_sae_w||chr(10)||chr(10)|| 
			'Anamnese/Exame físico :   '||chr(10)||*/
 
			ds_retorno_w||chr(9)||chr(10)|| 
			ds_diagnostico_W||chr(9)||chr(10)|| 
			obter_desc_expressao(285523) || ' ' ||chr(10)||chr(9)|| 
			ds_retorno_ww;
 
return	substr(ds_texto_w,1,4000);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION icesp_obter_texto_sae ( nr_atendimento_p bigint) FROM PUBLIC; -- REVOKE ALL ON FUNCTION icesp_obter_texto_sae_atx ( nr_atendimento_p bigint) FROM PUBLIC;

