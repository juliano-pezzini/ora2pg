-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION obter_prox_dia_util_trat_onc ( nr_seq_paciente_p bigint) RETURNS timestamp AS $body$
DECLARE


QT_HORAS_INICIO_CICLO_w	bigint;
dt_referencia_w		timestamp;
ie_dia_util_w		varchar(50);
nr_ciclo_w		bigint;
nr_ultimo_dia_ciclo_w	bigint;
dt_prevista_w		timestamp;
qt_dias_intervalo_w	bigint;
IE_INTERV_CICLO_w	varchar(50);
ie_interv_ciclo_data_w	varchar(50);
ie_segunda_w		varchar(1);
ie_terca_w		varchar(1);
ie_quarta_w		varchar(1);
ie_quinta_w		varchar(1);
ie_sexta_w		varchar(1);
ie_sabado_w		varchar(1);
ie_domingo_w		varchar(1);
ie_dia_valido_w		varchar(10);
cd_protocolo_w		bigint;
nr_seq_medicacao_w	bigint;
cd_pessoa_fisica_w	varchar(10);
ie_cons_dia_ant_ciclo_w	varchar(10);

function obter_Se_Dia_Semana_Lib(	dt_referencia_p	timestamp)
							return text is
	ie_dia_w	bigint;
	
BEGIN
	ie_dia_w	:= PKG_DATE_UTILS.get_WeekDay(dt_referencia_p);

	if (ie_dia_w	= 1) and (ie_domingo_w	= 'N') then
		return 'N';
	elsif (ie_dia_w	= 2) and (ie_segunda_w	= 'N') then
		return 'N';
	elsif (ie_dia_w	= 3) and ( ie_terca_w	= 'N') then
		return 'N';
	elsif (ie_dia_w	= 4) and ( ie_quarta_w	= 'N') then
		return 'N';
	elsif (ie_dia_w	= 5) and ( ie_quinta_w	= 'N') then
		return 'N';
	elsif (ie_dia_w	= 6) and ( ie_sexta_w	= 'N') then
		return 'N';
	elsif (ie_dia_w	= 7) and ( ie_sabado_w	= 'N') then
		return 'N';
	end if;

	return 'S';
	end;

begin

dt_referencia_w := clock_timestamp() - interval '1 days';
If (nr_seq_paciente_p > 0) then
	select	coalesce(max(IE_INTERV_CICLO),'I'),
		coalesce(max(ie_cons_dia_ant_ciclo),'N'),
		coalesce(max(ie_interv_ciclo_data),'P')
	into STRICT	ie_interv_ciclo_w,
		ie_cons_dia_ant_ciclo_w,
		ie_interv_ciclo_data_w
	from	parametro_medico
	where	cd_estabelecimento = wheb_usuario_pck.get_CD_ESTABELECIMENTO;
	 select coalesce(max(nr_ciclo),0)
	 into STRICT	nr_ciclo_w
	 from	paciente_atendimento
	 where	nr_seq_paciente = nr_seq_paciente_p
	 and	coalesce(dt_suspensao::text, '') = '';


	select	max(cd_pessoa_fisica),
		max(cd_protocolo),
		max(nr_seq_medicacao)
	into STRICT	cd_pessoa_fisica_w,
		cd_protocolo_w,
		nr_seq_medicacao_w
	from	paciente_setor
	where	nr_seq_paciente	 = nr_seq_paciente_p;

	 If (nr_ciclo_w > 0) then

		 if (ie_interv_ciclo_w	= 'U') then
			 select	max(somente_numero(ds_dia_ciclo))
			 into STRICT	nr_ultimo_dia_ciclo_w
			 from	paciente_atendimento
			 where	nr_seq_paciente = nr_seq_paciente_p
			 and	nr_ciclo = nr_ciclo_w
			 and	coalesce(dt_suspensao::text, '') = '';
		 elsif (ie_interv_ciclo_w	= 'I')then
				select	min(somente_numero(ds_dia_ciclo))
			 into STRICT	nr_ultimo_dia_ciclo_w
			 from	paciente_atendimento
			 where	nr_seq_paciente = nr_seq_paciente_p
			 and	nr_ciclo = nr_ciclo_w
			 and	coalesce(dt_suspensao::text, '') = '';
		 end if;

		 If (nr_ultimo_dia_ciclo_w > 0) then
			 --select	max(dt_prevista)
			 select	max(CASE WHEN ie_interv_ciclo_data_w='R' THEN coalesce(dt_real,dt_prevista)  ELSE dt_prevista END )
			 into STRICT	dt_prevista_w
			 from	paciente_atendimento
			 where	nr_seq_paciente = nr_seq_paciente_p
			 and	nr_ciclo = nr_ciclo_w
			 and	somente_numero(ds_dia_ciclo) = nr_ultimo_dia_ciclo_w
			 and	coalesce(dt_suspensao::text, '') = '';

			 if (nr_ultimo_dia_ciclo_w	> 1 ) and (ie_interv_ciclo_w	= 'I')  and (ie_cons_dia_ant_ciclo_w = 'S')then

				for i in 1..nr_ultimo_dia_ciclo_w loop
					begin
					dt_prevista_w	:= dt_prevista_w - 1;

				ie_dia_util_w		:= Obter_Se_Dia_Util_Oncologia(dt_referencia_w,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,cd_protocolo_w,nr_seq_medicacao_w);

				while(ie_dia_util_w	= 'N') loop
					 begin
					 dt_referencia_w	:= dt_referencia_w -1;
					 ie_dia_util_w		:= Obter_Se_Dia_Util_Oncologia(dt_referencia_w,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,cd_protocolo_w,nr_seq_medicacao_w);
					 end;
				end loop;

					end;
				end loop;

				dt_prevista_w	:= dt_prevista_w - (nr_ultimo_dia_ciclo_w-1);
			end if;


			 If (dt_prevista_w IS NOT NULL AND dt_prevista_w::text <> '') then
				 dt_referencia_w := dt_prevista_w;

				 select	max(qt_dias_intervalo)
				 into STRICT	qt_dias_intervalo_w
				 from	paciente_setor
				 where	nr_seq_paciente = nr_seq_paciente_p;

				 qt_dias_intervalo_w	:= coalesce(Obter_Dias_Interv_Protoc(nr_seq_paciente_p,nr_ciclo_w + 1),qt_dias_intervalo_w);


				 If (qt_dias_intervalo_w > 0) then
					 dt_referencia_w := dt_referencia_w + qt_dias_intervalo_w;
				 end if;
			 end if;
		 end if;
	 end if;
end if;

if (dt_referencia_w < clock_timestamp()) then
	 dt_referencia_w := clock_timestamp();
end if;

select	max(coalesce(ie_segunda,'S')),
	max(coalesce(ie_terca,'S')),
	max(coalesce(ie_quarta,'S')),
	max(coalesce(ie_quinta,'S')),
	max(coalesce(ie_sexta,'S')),
	max(coalesce(ie_sabado,'S')),
	max(coalesce(ie_domingo,'S'))
into STRICT	ie_segunda_w,
	ie_terca_w,
	ie_quarta_w,
	ie_quinta_w,
	ie_sexta_w,
	ie_sabado_w,
	ie_domingo_w
from	protocolo_medicacao
where	cd_protocolo 	= cd_protocolo_w
and	nr_sequencia 	= nr_seq_medicacao_w;

ie_dia_util_w		:= Obter_Se_Dia_Util_Oncologia(dt_referencia_w,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,cd_protocolo_w,nr_seq_medicacao_w);
ie_dia_valido_w	:= obter_Se_Dia_Semana_Lib(dt_referencia_w);

while(ie_dia_util_w	= 'N') or (ie_dia_valido_w = 'N') loop
	 begin
	 dt_referencia_w	:= dt_referencia_w + 1;
	 ie_dia_util_w		:= Obter_Se_Dia_Util_Oncologia(dt_referencia_w,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,cd_protocolo_w,nr_seq_medicacao_w);
	 ie_dia_valido_w	:= obter_Se_Dia_Semana_Lib(dt_referencia_w);
	 end;
end loop;

return	dt_referencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_prox_dia_util_trat_onc ( nr_seq_paciente_p bigint) FROM PUBLIC;

