-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE FUNCTION pls_obter_seq_plano_preco ( nr_seq_segurado_p bigint, nr_seq_tabela_p bigint) RETURNS bigint AS $body$
DECLARE


nr_seq_plano_preco_w	bigint;
qt_idade_w		bigint;
ie_grau_parentesco_w	varchar(10);
nr_seq_contrato_w	bigint;
nr_seq_plano_w		bigint;
ie_regulamentacao_w	varchar(2);
qt_idade_limite_reaj_w	bigint;
qt_anos_limite_reaj_w	bigint;
qt_idade_operadora_w	bigint;
qt_idade_adesao_w	bigint;
dt_nascimento_w		timestamp;
dt_inclusao_operadora_w	timestamp;
cd_estabelecimento_w	smallint;
ie_preco_vidas_contrato_w	varchar(1);
ie_calculo_vidas_w		varchar(2);
ie_data_ref_reaj_adaptado_w	varchar(2);
nr_seq_tabela_w			bigint;
qt_vidas_w			bigint;
nr_seq_mtvo_alteracao_w		bigint;
dt_base_inclusao_w		timestamp;
dt_adaptacao_w			timestamp;
dt_contratacao_w		timestamp;
nr_seq_segurado_preco_w		pls_segurado_preco.nr_sequencia%type;
qt_idade_limite_reaj_benef_w	pls_segurado.qt_idade_limite_reaj%type;
qt_anos_limite_reaj_benef_w	pls_segurado.qt_anos_limite_reaj%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	and	qt_idade_w	>= qt_idade_inicial
	and	qt_idade_w	<= qt_idade_final
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	and	qt_vidas_w between coalesce(qt_vidas_inicial,qt_vidas_w) and coalesce(qt_vidas_final,qt_vidas_w)
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN
nr_seq_segurado_preco_w := pls_obter_seg_preco_ativo(nr_seq_segurado_p, clock_timestamp());

if (nr_seq_segurado_preco_w IS NOT NULL AND nr_seq_segurado_preco_w::text <> '') then
	select	nr_seq_preco
	into STRICT	nr_seq_plano_preco_w
	from	pls_segurado_preco
	where	nr_sequencia = nr_seq_segurado_preco_w;
end if;

if (coalesce(nr_seq_plano_preco_w::text, '') = '') then
	select	obter_idade(a.dt_nascimento,clock_timestamp(),'A'),
		b.nr_seq_contrato,
		b.nr_seq_plano,
		a.dt_nascimento,
		b.dt_inclusao_operadora,
		b.cd_estabelecimento,
		b.nr_seq_tabela,
		b.dt_contratacao,
		b.qt_idade_limite_reaj,
		b.qt_anos_limite_reaj
	into STRICT	qt_idade_w,
		nr_seq_contrato_w,
		nr_seq_plano_w,
		dt_nascimento_w,
		dt_inclusao_operadora_w,
		cd_estabelecimento_w,
		nr_seq_tabela_w,
		dt_contratacao_w,
		qt_idade_limite_reaj_benef_w,
		qt_anos_limite_reaj_benef_w
	from	pessoa_fisica	a,
		pls_segurado	b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.nr_sequencia		= nr_seq_segurado_p;
	
	ie_grau_parentesco_w	:= coalesce(substr(pls_obter_garu_dependencia_seg(nr_seq_segurado_p,'C'),1,2),'X');
	
	select	max(ie_regulamentacao)
	into STRICT	ie_regulamentacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
	
	if (coalesce(qt_idade_limite_reaj_benef_w,0) > 0) and (coalesce(qt_anos_limite_reaj_benef_w,0) > 0) then
		qt_idade_limite_reaj_w	:= qt_idade_limite_reaj_benef_w;
		qt_anos_limite_reaj_w	:= qt_anos_limite_reaj_benef_w;
	else
		begin
		select	qt_idade_limite_reaj,
			qt_anos_limite_reaj
		into STRICT	qt_idade_limite_reaj_w,
			qt_anos_limite_reaj_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
		exception
		when others then
			qt_idade_limite_reaj_w	:= null;
			qt_anos_limite_reaj_w	:= null;
		end;
		
		if (coalesce(qt_idade_limite_reaj_w,0) = 0) and (coalesce(qt_anos_limite_reaj_w,0) = 0) then
			select	coalesce(qt_idade_limite,999),
				coalesce(qt_tempo_limite,999)
			into STRICT	qt_idade_limite_reaj_w,
				qt_anos_limite_reaj_w
			from	pls_parametros
			where	cd_estabelecimento	= cd_estabelecimento_w;
		end if;
	end if;
	
	if (ie_regulamentacao_w <> 'R') then
		select	max(ie_data_ref_reaj_adaptado)
		into STRICT	ie_data_ref_reaj_adaptado_w
		from	pls_parametros
		where	cd_estabelecimento	= cd_estabelecimento_w;
		
		if (ie_data_ref_reaj_adaptado_w = 'A') then
			dt_base_inclusao_w	:= dt_contratacao_w;
		elsif (ie_data_ref_reaj_adaptado_w = 'D') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_mtvo_alteracao_w
			from	pls_motivo_alteracao_plano
			where	cd_ans	= '12';
			
			select	max(dt_alteracao)
			into STRICT	dt_adaptacao_w
			from	pls_segurado_alt_plano
			where	nr_seq_segurado		= nr_seq_segurado_p
			and	ie_situacao 		= 'A'
			and	nr_seq_motivo_alt	= nr_seq_mtvo_alteracao_w;
			
			if (dt_adaptacao_w IS NOT NULL AND dt_adaptacao_w::text <> '') then
				dt_base_inclusao_w	:= dt_adaptacao_w;
			else
				dt_base_inclusao_w	:= dt_inclusao_operadora_w;
			end if;
		else
			dt_base_inclusao_w	:= dt_inclusao_operadora_w;
		end if;
		
		
		qt_idade_operadora_w	:= round((obter_idade(dt_base_inclusao_w, clock_timestamp(), 'A'))::numeric );
		
		if (qt_idade_w >= qt_idade_limite_reaj_w) and (qt_idade_operadora_w >= qt_anos_limite_reaj_w) then
			qt_idade_adesao_w	:= (obter_idade(dt_nascimento_w,dt_base_inclusao_w,'A'))::numeric;
			
			if (qt_idade_adesao_w > qt_idade_limite_reaj_w) then
				qt_idade_w	:= qt_idade_adesao_w + qt_anos_limite_reaj_w; /* Se na data de adesao, o beneficiario ja tinha 60 anos ou mais, deve gerar sempre com essa idade */
			else
				qt_idade_w	:= qt_idade_adesao_w + qt_anos_limite_reaj_w;
				
				if (qt_idade_w < qt_idade_limite_reaj_w) then
					qt_idade_w	:= qt_idade_limite_reaj_w-1;
				end if;
			end if;
		end if;
	end if;
	
	begin
	select	coalesce(ie_preco_vidas_contrato,'N'),
		coalesce(ie_calculo_vidas,'A')
	into STRICT	ie_preco_vidas_contrato_w,
		ie_calculo_vidas_w
	from	pls_tabela_preco
	where	nr_sequencia	= nr_seq_tabela_w;
	exception
	when others then
		ie_calculo_vidas_w	:= 'A';
	end;
	
	if (ie_preco_vidas_contrato_w = 'S') then
		qt_vidas_w	:= pls_obter_qt_vidas_tab_preco(nr_seq_segurado_p, ie_calculo_vidas_w, '');
	else
		qt_vidas_w	:= 1;
	end if;
	
	open C01;
	loop
	fetch C01 into
		nr_seq_plano_preco_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

return	nr_seq_plano_preco_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_obter_seq_plano_preco ( nr_seq_segurado_p bigint, nr_seq_tabela_p bigint) FROM PUBLIC;

