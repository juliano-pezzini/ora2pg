-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW sigiss_exp_nota_lote_v (tp_registro, tp_arquivo, nr_insc_munic, versao, dt_arquivo, ds_identificador, ie_codificacao, cd_servico, ie_situacao, vl_servicos, vl_base_calculo, cd_cpf_cnpj, insc_mun_tom, insc_estad_tom, nm_razao_social, ds_endereco, nr_endereco, ds_compl_endereco, ds_bairro, ds_cidade, ds_uf, cd_cep, ds_email, ds_servicos, qt_linhas, nr_sequencia, dt_emissao, cd_estabelecimento, cd_cgc_emitente, cd_operacao_nf, dt_entrada_saida, ie_tipo_nota, cd_natureza_operacao, cd_convenio) AS SELECT 	DISTINCT 	1 						TP_REGISTRO,
		'NFE_LOTE' 					TP_ARQUIVO, 
		lpad(e.cd_inscricao_municipal,8,0) 		NR_INSC_MUNIC, 
		'010' 						VERSAO, 
		TO_CHAR(LOCALTIMESTAMP,'yyyymmdd') 			DT_ARQUIVO, 
		'' 						DS_IDENTIFICADOR, 
		'' 						IE_CODIFICACAO, 
		'' 						CD_SERVICO, 
		'' 						IE_SITUACAO, 
		'' 						VL_SERVICOS, 
		NULL 						VL_BASE_CALCULO, 
		'' 						CD_CPF_CNPJ, 
		'' 						INSC_MUN_TOM, 
		'' 						INSC_ESTAD_TOM, 
		'' 						NM_RAZAO_SOCIAL, 
		'' 						DS_ENDERECO, 
		'' 						NR_ENDERECO, 
		'' 						DS_COMPL_ENDERECO, 
		'' 						DS_BAIRRO, 
		'' 						DS_CIDADE, 
		'' 						DS_UF, 
		'' 						CD_CEP, 
		'' 						DS_EMAIL, 
		'' 						DS_SERVICOS, 
		0						QT_LINHAS, 
		NULL						NR_SEQUENCIA, 
		NULL						DT_EMISSAO, 
		e.cd_estabelecimento				CD_ESTABELECIMENTO, 
		'' 						CD_CGC_EMITENTE, 
		null 						CD_OPERACAO_NF, 
		null						DT_ENTRADA_SAIDA, 
		null						IE_TIPO_NOTA, 
		null						CD_NATUREZA_OPERACAO, 
		null						CD_CONVENIO 
FROM		estabelecimento e 
where	1=1 

UNION
 
SELECT 	 DISTINCT 	2	TP_REGISTRO, 
		NULL	TP_ARQUIVO, 
		''	NR_INSC_MUNIC, 
		''	VERSAO, 
		null	DT_ARQUIVO, 
		n.nr_nota_fiscal DS_IDENTIFICADOR, 
		substr(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'), obter_procedimento_nfse(n.nr_sequencia,'O')), 'GR'),1,1) IE_CODIFICACAO, 
		substr(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'), obter_procedimento_nfse(n.nr_sequencia,'O')), 'CD'),1,7) CD_SERVICO,	 
		substr(nfse_obter_regra('TP',n.cd_estabelecimento),1,1) IE_SITUACAO, 		 	  
		LPAD(elimina_caracteres_especiais(CASE WHEN n.ie_situacao=1 THEN n.vl_mercadoria  ELSE 0 END ),15,0) VL_SERVICOS, 
		LPAD(elimina_caracteres_especiais(Obter_Valor_Tributo_Nota(n.nr_sequencia,'B')),15,0) VL_BASE_CALCULO, 
		CASE WHEN n.cd_cgc='' THEN LPAD(obter_dados_pf(n.cd_pessoa_fisica,'CPF'),14,0)  ELSE LPAD(n.cd_cgc,14,0) END  CD_CPF_CNPJ, 
		coalesce(SUBSTR(obter_dados_pf_pj(NULL,n.cd_cgc,'IM'),1,8),'00000000') INSC_MUN_TOM, 
		coalesce(SUBSTR(obter_dados_pf_pj(NULL,n.cd_cgc,'IE'),1,8),'00000000') INSC_ESTAD_TOM, 
		CASE WHEN n.cd_pessoa_fisica IS NULL THEN obter_dados_pf_pj(NULL,n.cd_cgc,'N')  ELSE obter_nome_pf(n.cd_pessoa_fisica) END  NM_RAZAO_SOCIAL, 
		SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc, 'EN'),1,50) DS_ENDERECO, 
		SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'),1,10) NR_ENDERECO, 
		SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,40) DS_COMPL_ENDERECO, 
		SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,50) DS_BAIRRO, 
		SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50) DS_CIDADE, 
		SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2) DS_UF, 	 
		coalesce(TO_CHAR(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN SUBSTR(obter_compl_pj(n.cd_cgc,1,'CEP'),1,15)='N/D' THEN  		TO_CHAR(somente_numero(SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))  ELSE SUBSTR(obter_compl_pj(n.cd_cgc,1,'CEP'),1,15) END   ELSE SUBSTR(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CEP'),1,15) END ), 
		TO_CHAR(somente_numero(SUBSTR(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))) CD_CEP,	  
		coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN SUBSTR(obter_dados_pf_pj_estab(n.cd_estabelecimento,n.cd_pessoa_fisica, n.cd_cgc, 		'M'),1,100)  ELSE SUBSTR(obter_compl_pf(n.cd_pessoa_fisica, 1, 'M'),1,100) END ,'') DS_EMAIL, 
		coalesce(REPLACE(REPLACE(SUBSTR(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'), 1, 1000), CHR(13), ' '), CHR(10), ' '), 'Servicos') DS_SERVICOS, 
		0		QT_LINHAS, 
		n.nr_sequencia NR_SEQUENCIA, 
		TRUNC(n.dt_emissao) dt_emissao, 
		n.cd_estabelecimento		CD_ESTABELECIMENTO, 
		n.cd_cgc_emitente 	cd_cgc_emitente, 
		o.cd_operacao_nf 	cd_operacao_nf, 
		n.dt_entrada_saida	dt_entrada_saida, 
		n.ie_tipo_nota		ie_tipo_nota, 
		n.cd_natureza_operacao	cd_natureza_operacao, 
		coalesce(obter_convenio_nf(n.nr_sequencia),n.cd_conv_integracao) cd_convenio	 
FROM		nota_fiscal n, 
		operacao_nota o 
WHERE 		o.cd_operacao_nf = n.cd_operacao_nf 
AND		o.ie_servico = 'S' 
AND		n.ie_situacao = '1'	 

UNION
 
SELECT  DISTINCT 9		TP_REGISTRO, 
		NULL		TP_ARQUIVO, 
		''		NR_INSC_MUNIC, 
		''		VERSAO, 
		null		DT_ARQUIVO, 
		''		DS_IDENTIFICADOR,		 
		''		IE_SITUACAO, 
		''		IE_CODIFICACAO, 
		''		CD_SERVICO, 
		NULL		VL_SERVICOS, 
		NULL		VL_BASE_CALCULO, 
		''		CD_CPF_CNPJ, 
		''		INSC_MUN_TOM, 
		''		INSC_ESTAD_TOM, 
		''		NM_RAZAO_SOCIAL, 
		''		DS_ENDERECO, 
		''		NR_ENDERECO, 
		''		DS_COMPL_ENDERECO, 
		''		DS_BAIRRO, 
		''		DS_CIDADE, 
		''		DS_UF, 
		''		CD_CEP, 
		''		DS_EMAIL, 
		''		DS_SERVICOS, 
		0		QT_LINHAS, 
		NULL		NR_SEQUENCIA, 
		NULL		DT_EMISSAO, 
		n.cd_estabelecimento CD_ESTABELECIMENTO, 
		'' 		CD_CGC_EMITENTE, 
		null 		CD_OPERACAO_NF, 
		null		DT_ENTRADA_SAIDA, 
		null		IE_TIPO_NOTA, 
		null		CD_NATUREZA_OPERACAO, 
		null		CD_CONVENIO 
FROM		estabelecimento n 
group by n.cd_estabelecimento;

