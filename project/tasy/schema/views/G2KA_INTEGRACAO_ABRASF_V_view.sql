-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW g2ka_integracao_abrasf_v (numero, serie, tipo, dataemissao, naturezaoperacao, regimeespecialtributacao, optantesimplesnacional, incentivadorcultural, status, numerorpssubst, serierpssubst, tiporpssubst, itemlistaservico, codigocnae, codigotributacaomunicipio, discriminacao, codigomunicipio, tributacao, valorservicos, valordeducoes, valorpis, valorcofins, valorinss, valorir, valorcsll, issretido, valoriss, outrasretencoes, basecalculo, aliquota, valorliquidonfse, valorissretido, descontoincondicionado, descontocondicionado, cnpjprestador, inscricaomunicipalprestador, cnpjtomador, cpftomador, inscricaomunicipaltomador, razaosocialtomador, logradourotomador, numerotomador, complementotomador, bairrotomador, codigomunicipiotomador, uftomador, ceptomador, telefonetomador, emailtomador) AS select	a.nr_nota_fiscal Numero,
	a.cd_serie_nf Serie, 
	1 Tipo, 
	to_char(a.dt_emissao, 'yyyy-mm-dd') || 'T' || to_char(a.dt_emissao, 'hh:mi:ss') DataEmissao, 
	CASE WHEN obter_dados_parametro_compras(a.cd_estabelecimento,14)=0 THEN  3  ELSE obter_dados_parametro_compras(a.cd_estabelecimento, 14) END  NaturezaOperacao, 
	nfse_obter_regra('RET') RegimeEspecialTributacao, 
	CASE WHEN coalesce(nfse_obter_regra('OSN'), 'N')='N' THEN  2  ELSE 1 END  OptanteSimplesNacional, 
	CASE WHEN coalesce(nfse_obter_regra('IC'), 'N')='N' THEN  2  ELSE 1 END  IncentivadorCultural, 
	CASE WHEN a.ie_situacao='1' THEN  '1' WHEN a.ie_situacao='2' THEN  '1'  ELSE '2' END  Status, 
    a.nr_nota_fiscal NumeroRpsSubst, 
	a.cd_serie_nf SerieRpsSubst, 
	1 TipoRpsSubst, 
    obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O')), 'GR') ItemListaServico, 
	obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O')), 'CD') CodigoCnae,	 
	obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O')), 'CD') CodigoTributacaoMunicipio,  
	coalesce(substr(obter_descricao_rps(a.cd_estabelecimento, a.nr_sequencia, 'DS_SERVICOS'), 1, 1000), 'Servicos') Discriminacao, 
	nfe_obter_dados_pj(a.cd_cgc_emitente,'IBGE') CodigoMunicipio, 
	substr(coalesce(CASE WHEN a.ie_situacao=9 THEN  'C' WHEN a.ie_situacao=3 THEN 'C'  WHEN a.ie_situacao=2 THEN  'C'  ELSE nfse_obter_regra('TP', a.cd_estabelecimento) END ,'I'),1,2) Tributacao, 
	campo_mascara(a.vl_mercadoria, 2) ValorServicos, 
	campo_mascara(0, 2) ValorDeducoes,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'PIS'), 2) ValorPis,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'COFINS'), 2) ValorCofins,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'INSS'), 2) ValorInss,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'IR'), 2) ValorIr,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'CSLL'), 2) ValorCsll, 
	CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='S' THEN  '1'  ELSE '2' END  IssRetido,  
	campo_mascara(CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='S' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'ISS') END  , 2) ValorIss,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'O'), 2) OutrasRetencoes,  
	campo_mascara(a.vl_mercadoria, 2) BaseCalculo,  
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'ISS'), 2) Aliquota, 
	campo_mascara(a.vl_total_nota, 2) ValorLiquidoNfse,  
	CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='S' THEN  campo_mascara(coalesce(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'ISS'), 0), 2)  ELSE null END  ValorIssRetido, 
	campo_mascara(coalesce(a.vl_descontos, 0), 2) DescontoIncondicionado,  
	null DescontoCondicionado, 
	lpad(a.cd_cgc_emitente, 14, '0') CnpjPrestador, 
	coalesce(substr(obter_dados_pf_pj('', a.cd_cgc_emitente, 'IM'), 1, 8), '99999') InscricaoMunicipalPrestador, 
	CASE WHEN 	cd_cgc='' THEN  null  ELSE lpad(a.cd_cgc, 14, '0') END  Cnpjtomador, 
	CASE WHEN cd_cgc='' THEN  substr(obter_dados_pf(a.cd_pessoa_fisica, 'CPF'), 1, 11) END  Cpftomador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'IM'))), 1, 30) InscricaoMunicipalTomador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc))), 1, 255) RazaoSocialTomador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'EN'))), 1, 255) LogradouroTomador, 
	substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'NR'), 1, 25) NumeroTomador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CO'))), 1, 255) ComplementoTomador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'B'))), 1, 255) BairroTomador,	 
	LPAD(substr(CASE WHEN a.cd_cgc IS NULL THEN  obter_compl_pf(a.cd_pessoa_fisica, 1, 'CDMDV')  ELSE nfe_obter_dados_pj(a.cd_cgc, 'IBGE') END , 1, 60), 7, '0')CodigoMunicipioTomador, 
	CASE WHEN substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'UF'), 1, 2)='IN' THEN  'EX'  ELSE substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'UF'), 1, 2) END  UfTomador, 
	somente_numero(substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CEP'), 1, 15)) CepTomador, 
	CASE WHEN a.cd_pessoa_fisica='' THEN   		coalesce(substr(tiss_eliminar_caractere(obter_dados_pf_pj('', a.cd_cgc, 'DDT') || obter_dados_pf_pj('', a.cd_cgc, 'T')), 1, 80), '')  ELSE coalesce(substr(tiss_eliminar_caractere(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'DDT') || obter_dados_pf_pj(a.cd_pessoa_fisica, '', 'T')), 1, 80), '') END  TelefoneTomador, 
	CASE WHEN a.cd_pessoa_fisica='' THEN  		coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj_estab(a.cd_estabelecimento, '', a.cd_cgc, 'M'))), 1, 80), '')  ELSE coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, '', 'M'))), 1, 80), '') END  EmailTomador 
FROM 	w_nota_fiscal w, 
	nota_fiscal a 
where 	w.nr_seq_nota_fiscal = a.nr_sequencia;

