-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW interf_volkswagen_envio_v (ds_registro, tp_registro, ie_servico, cd_registro, cd_origem, nr_lote, nr_interno_conta, nr_parcela, cd_convenio, nm_convenio, tp_prestador, cd_prestador, nm_prestador, dt_geracao, nr_remessa, cd_plano, cd_paciente, cd_autorizacao, cd_acomodacao, dt_entrada, dt_saida, dt_inicio_cobranca, dt_fim_cobranca, ie_tipo_atendimento, cd_cid, cd_proc_principal, cd_medico_convenio, nr_crm, uf_crm, nr_crm_req, uf_crm_req, nr_seq_item, cd_item, nm_item, ie_emergencia, ie_extra, dt_item, ie_funcao_medico, qt_item, vl_item, ie_cirurgia_multipla, vl_total_item, qt_item_conta, nm_paciente, nr_fatura, qt_conta, vl_total_lote, nr_seq_protocolo, ds_espaco, nr_registro, ie_matmed, ds_ma_me_tx, ie_tipo_atend_esp, ie_tipo_atend_tasy, cd_senha_guia, dt_contabil, cd_funcionario, cd_dependente, qt_idade_paciente, ie_sexo_paciente, ie_acidente_trabalho, cd_local_acidente, cd_glosa, ds_glosa, cd_cid_secundario, vl_total_pago, nm_empregado, ie_recurso_glosa, nr_guia_original, ie_categoria_empregado, cd_item_convenio) AS select	'HEADER        ' 		ds_registro,
		1						tp_registro, 
		'CSMH'					ie_servico, 
		0						cd_registro, 
		substr(a.cd_interno,1,4)		cd_origem, 
		0						nr_lote, 
		0						nr_interno_conta, 
		0						nr_parcela, 
		somente_numero(coalesce(a.cd_regional,0)) 
								cd_convenio, 
		substr(elimina_acentuacao(upper(a.nm_convenio)),1,30) 
								nm_convenio, 
		'J'						tp_prestador, 
		a.cd_cgc_hospital				cd_prestador, 
		substr(elimina_acentuacao(upper(a.nm_hospital)),1,40) 
								nm_prestador, 
		a.dt_remessa				dt_geracao, 
		a.nr_remessa				nr_remessa, 
		' '						cd_plano, 
		' '						cd_paciente, 
		000001					cd_autorizacao, 
		0						cd_acomodacao, 
		LOCALTIMESTAMP					dt_entrada, 
		LOCALTIMESTAMP					dt_saida, 
		LOCALTIMESTAMP					dt_inicio_cobranca, 
		LOCALTIMESTAMP					dt_fim_cobranca, 
		0						ie_tipo_atendimento, 
		' '						cd_cid, 
		0						cd_proc_principal, 
		' '						cd_medico_convenio, 
		0						nr_crm, 
		' '						uf_crm, 
		' '						nr_crm_req, 
		' '						uf_crm_req, 
		1						nr_seq_item, 
		0						cd_item, 
		' '						nm_item, 
		' '						ie_emergencia, 
		' '						ie_extra, 
		LOCALTIMESTAMP					dt_item, 
		0						ie_funcao_medico, 
		0						qt_item, 
		0						vl_item, 
		0						ie_cirurgia_multipla, 
		0						vl_total_item, 
		0						qt_item_conta, 
		' '						nm_paciente, 
		' '						nr_fatura, 
		0						qt_conta, 
		0						vl_total_lote, 
		a.nr_seq_protocolo			nr_seq_protocolo, 
		'          '			ds_espaco, 
		1						nr_registro, 
		' '						ie_matmed, 
		' '						ds_ma_me_tx, 
		' '						ie_tipo_atend_esp, 
		0						ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		a.dt_remessa				dt_contabil, 
		0						cd_funcionario, 
		0						cd_dependente, 
		0						qt_idade_paciente, 
		' ' 						ie_sexo_paciente, 
		' '						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		' '						cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		' '						cd_item_convenio 
FROM		w_interf_conta_header a 

union all
 
select	'CABECALHO CONTA   '			ds_registro, 
		2						tp_registro, 
		CASE WHEN b.ie_tipo_atendimento=1 THEN 'GAI' WHEN b.ie_tipo_atendimento=3 THEN 'GAC' WHEN b.ie_tipo_atendimento=7 THEN 'GAE' WHEN b.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END  
								ie_servico, 
		1						cd_registro, 
		substr(x.cd_interno,1,4)		cd_origem, 
		b.nr_seq_protocolo			nr_lote, 
		b.nr_interno_conta			nr_interno_conta, 
		1						nr_parcela, 
		0						cd_convenio, 
		' '						nm_convenio, 
		'J'						tp_prestador, 
		' '						cd_prestador, 
		' '						nm_prestador, 
		LOCALTIMESTAMP					dt_geracao, 
		1						nr_remessa, 
		b.cd_plano_convenio			cd_plano, 
		substr(b.cd_usuario_convenio,1,18) 
								cd_paciente, 
		somente_numero(substr(b.nr_doc_convenio,1,6)) 
								cd_autorizacao, 
		0						cd_acomodacao, 
		b.dt_entrada				dt_entrada, 
		coalesce(b.dt_alta,b.dt_periodo_final) 
								dt_saida, 
		b.dt_periodo_inicial			dt_inicio_cobranca, 
		coalesce(b.dt_alta,b.dt_periodo_final) 
								dt_fim_cobranca, 
		b.ie_clinica				ie_tipo_atendimento, 
		substr(b.cd_cid_principal,1,4)	cd_cid, 
		somente_numero(b.cd_proc_principal) cd_proc_principal, 
		b.cd_conv_medico_resp			cd_medico_convenio, 
		somente_numero(b.nr_crm_medico_resp) 
								nr_crm, 
		b.uf_crm_medico_resp			uf_crm, 
		b.nr_crm_medico_resp			nr_crm_req, 
		b.uf_crm_medico_resp			uf_crm_req, 
		1						nr_seq_item, 
		0						cd_item, 
		' '						nm_item, 
		' '						ie_emergencia, 
		' '						ie_extra, 
		LOCALTIMESTAMP					dt_item, 
		0						ie_funcao_medico, 
		0						qt_item, 
		0						vl_item, 
		0						ie_cirurgia_multipla, 
		0						vl_total_item, 
		0						qt_item_conta, 
		' '						nm_paciente, 
 		' '						nr_fatura, 
 		0						qt_conta, 
 		0						vl_total_lote, 
		b.nr_seq_protocolo			nr_seq_protocolo, 
		' '						ds_espaco, 
		1						nr_registro, 
		' '						ie_matmed, 
		' '						ds_ma_me_tx, 
		to_char(obter_tipo_atend_abramge(b.nr_interno_conta)) 
								ie_tipo_atend_esp, 
		b.ie_tipo_atendimento			ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		x.dt_remessa				dt_contabil, 
		somente_numero(coalesce(b.cd_usuario_convenio,0)) 
								cd_funcionario, 
		0						cd_dependente, 
		coalesce(somente_numero(Obter_Idade(b.dt_nascimento,LOCALTIMESTAMP,'A')),0) 
								qt_idade_paciente, 
		b.ie_sexo					ie_sexo_paciente, 
		'N'						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		substr(b.cd_cid_secundario,1,4)	cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		' '						cd_item_convenio 
from		w_interf_conta_header x, 
		w_interf_conta_cab b 
where		b.nr_seq_protocolo			= x.nr_seq_protocolo 

union all
 
select   	'ITEM DA CONTA     ' 		ds_registro, 
      	3            		tp_registro, 
		CASE WHEN w.ie_tipo_atendimento=1 THEN 'GAI' WHEN w.ie_tipo_atendimento=3 THEN 'GAC' WHEN w.ie_tipo_atendimento=7 THEN 'GAE' WHEN w.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END  
								ie_servico, 
      	2            		cd_registro, 
		substr(x.cd_interno,1,4)		cd_origem, 
      	c.nr_seq_protocolo   		nr_lote, 
      	c.nr_interno_conta   		nr_interno_conta, 
      	max(c.nr_seq_item)      		nr_parcela, 
      	0            		cd_convenio, 
      	' '            		nm_convenio, 
      	' '            		tp_prestador, 
      	' '            		cd_prestador, 
      	' '            		nm_prestador, 
      	LOCALTIMESTAMP         		dt_geracao, 
      	1            		nr_remessa, 
      	' '            		cd_plano, 
      	' '            		cd_paciente, 
      	somente_numero(substr(w.nr_doc_convenio,1,6)) 
								cd_autorizacao, 
      	0            		cd_acomodacao, 
      	LOCALTIMESTAMP         		dt_entrada, 
      	LOCALTIMESTAMP         		dt_saida, 
      	LOCALTIMESTAMP         		dt_inicio_cobranca, 
      	LOCALTIMESTAMP         		dt_fim_cobranca, 
      	0            		ie_tipo_atendimento, 
      	' '           		cd_cid, 
      	0            		cd_proc_principal, 
		' '						cd_medico_convenio, 
      	coalesce(somente_numero(c.nr_crm_executor),0) 
								nr_crm, 
      	' '            		uf_crm, 
		' '						nr_crm_req, 
		' '						uf_crm_req, 
      	max(c.nr_seq_item)      		nr_seq_item, 
      	coalesce(somente_numero(c.cd_item_convenio),0)	 
								cd_item, 
      	substr(elimina_acentuacao(upper(c.ds_item)),1,50) 
								nm_item, 
      	CASE WHEN w.ie_carater_inter='U' THEN 'S'  ELSE 'N' END  
								ie_emergencia, 
      	CASE WHEN c.pr_hora_extra=0 THEN 'N' WHEN c.pr_hora_extra=1 THEN 'N' WHEN c.pr_hora_extra IS NULL THEN 'N'  ELSE 'S' END  
            					ie_extra, 
      	trunc(w.dt_entrada,'dd') 		dt_item, 
      	c.cd_funcao_executor     		ie_funcao_medico, 
      	sum(c.qt_item)        		qt_item, 
      	sum(CASE WHEN cd_area_proc=4 THEN  c.vl_honorario  ELSE c.vl_total_item END )	vl_item, 
      	trunc(coalesce(c.pr_funcao_participante,0)) 
								ie_cirurgia_multipla, 
      	0		   			vl_total_item, 
      	0	   				qt_item_conta, 
	   	' '						nm_paciente, 
      	' '	   				nr_fatura, 
      	0						qt_conta, 
     	0						vl_total_lote, 
	   	c.nr_seq_protocolo			nr_seq_protocolo, 
		' '						ds_espaco, 
      	1            		nr_registro, 
		' '						ie_matmed, 
		' '						ds_ma_me_tx, 
		' '						ie_tipo_atend_esp, 
		w.ie_tipo_atendimento			ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		x.dt_remessa				dt_contabil, 
		0						cd_funcionario, 
		0						cd_dependente, 
		0						qt_idade_paciente, 
		' ' 						ie_sexo_paciente, 
		' '						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		' '						cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		CASE WHEN c.cd_funcao_executor=2 THEN 'AA' WHEN c.cd_funcao_executor=3 THEN 'AB' WHEN c.cd_funcao_executor=4 THEN 'AC' WHEN c.cd_funcao_executor=10 THEN 'AD' WHEN c.cd_funcao_executor=5 THEN 'AE' WHEN c.cd_funcao_executor=9 THEN 'AI'  ELSE c.cd_item_convenio END  
								cd_item_convenio 
FROM w_interf_conta_header x, w_interf_conta_cab w, w_interf_conta_item c
LEFT OUTER JOIN regra_honorario z ON (c.ie_responsavel_credito = z.cd_regra)
WHERE c.nr_interno_conta 			= w.nr_interno_conta and w.nr_seq_protocolo 			= x.nr_seq_protocolo  and coalesce(z.ie_entra_conta,'S') 		= 'S' and c.ie_tipo_item				= 1 and c.qt_item					<> 0 and c.cd_item in (select x.cd_procedimento 
		from estrutura_procedimento_v x 
		where x.cd_area_procedimento in (1,4,11,13)) group by	c.nr_seq_protocolo, 
		CASE WHEN w.ie_tipo_atendimento=1 THEN 'GAI' WHEN w.ie_tipo_atendimento=3 THEN 'GAC' WHEN w.ie_tipo_atendimento=7 THEN 'GAE' WHEN w.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END , 
      	c.nr_interno_conta, 
      	trunc(coalesce(c.pr_funcao_participante,0)), 
		somente_numero(substr(w.nr_doc_convenio,1,6)), 
		substr(x.cd_interno,1,4), 
      	coalesce(somente_numero(c.nr_crm_executor),0), 
      	coalesce(somente_numero(c.cd_item_convenio),0), 
      	substr(elimina_acentuacao(upper(c.ds_item)),1,50), 
      	CASE WHEN w.ie_carater_inter='U' THEN 'S'  ELSE 'N' END , 
      	CASE WHEN c.pr_hora_extra=0 THEN 'N' WHEN c.pr_hora_extra=1 THEN 'N' WHEN c.pr_hora_extra IS NULL THEN 'N'  ELSE 'S' END , 
      	trunc(w.dt_entrada,'dd'), 
      	c.cd_funcao_executor, 
      	c.nr_seq_protocolo, 
		w.ie_tipo_atendimento, 
		x.dt_remessa, 
		CASE WHEN c.cd_funcao_executor=2 THEN 'AA' WHEN c.cd_funcao_executor=3 THEN 'AB' WHEN c.cd_funcao_executor=4 THEN 'AC' WHEN c.cd_funcao_executor=10 THEN 'AD' WHEN c.cd_funcao_executor=5 THEN 'AE' WHEN c.cd_funcao_executor=9 THEN 'AI'  ELSE c.cd_item_convenio END  
having	sum(c.qt_item) <> 0 

union all
 
select   	'ITEM DA CONTA     ' 		ds_registro, 
      	3            		tp_registro, 
		CASE WHEN W.ie_tipo_atendimento=1 THEN 'GAI' WHEN W.ie_tipo_atendimento=3 THEN 'GAC' WHEN W.ie_tipo_atendimento=7 THEN 'GAE' WHEN W.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END  
								ie_servico, 
      	2            		cd_registro, 
		substr(x.cd_interno,1,4)		cd_origem, 
      	c.nr_seq_protocolo   		nr_lote, 
      	c.nr_interno_conta   		nr_interno_conta, 
      	max(c.nr_seq_item)      		nr_parcela, 
      	0           			cd_convenio, 
      	' '            		nm_convenio, 
      	' '            		tp_prestador, 
      	' '            		cd_prestador, 
      	' '            		nm_prestador, 
      	LOCALTIMESTAMP         		dt_geracao, 
      	1            		nr_remessa, 
      	' '            		cd_plano, 
      	' '            		cd_paciente, 
      	somente_numero(substr(w.nr_doc_convenio,1,6)) 
								cd_autorizacao, 
      	0            		cd_acomodacao, 
      	LOCALTIMESTAMP         		dt_entrada, 
      	LOCALTIMESTAMP         		dt_saida, 
      	LOCALTIMESTAMP         		dt_inicio_cobranca, 
      	LOCALTIMESTAMP         		dt_fim_cobranca, 
      	0            		ie_tipo_atendimento, 
      	' '           		cd_cid, 
      	0            		cd_proc_principal, 
		' '						cd_medico_convenio, 
      	0            		nr_crm, 
      	' '            		uf_crm, 
		' '						nr_crm_req, 
		' '						uf_crm_req, 
      	max(c.nr_seq_item)      		nr_seq_item, 
		coalesce(somente_numero(c.cd_item_convenio),0)	 
								cd_item, 
      	substr(elimina_acentuacao(upper(c.ds_item)),1,50) 
								nm_item, 
      	CASE WHEN w.ie_carater_inter='U' THEN 'S'  ELSE 'N' END  
								ie_emergencia, 
      	CASE WHEN c.pr_hora_extra=0 THEN 'N' WHEN c.pr_hora_extra=1 THEN 'N' WHEN c.pr_hora_extra IS NULL THEN 'N'  ELSE 'S' END  
            					ie_extra, 
      	trunc(w.dt_entrada,'dd') 		dt_item, 
      	c.cd_funcao_executor     		ie_funcao_medico, 
      	sum(c.qt_item)        		qt_item, 
      	sum(c.vl_total_item)     		vl_item, 
      	0            		ie_cirurgia_multipla, 
      	0		   			vl_total_item, 
      	0	   				qt_item_conta, 
	   	' '						nm_paciente, 
      	' '	   				nr_fatura, 
      	0						qt_conta, 
     	0						vl_total_lote, 
	   	c.nr_seq_protocolo			nr_seq_protocolo, 
		' '						ds_espaco, 
      	1            		nr_registro, 
		CASE WHEN c.ie_total_interf=2 THEN '1' WHEN c.ie_total_interf=3 THEN '2'  ELSE ' ' END  
								ie_mat_med, 
		CASE WHEN c.ie_total_interf=2 THEN 'MA' WHEN c.ie_total_interf=3 THEN 'ME' WHEN c.ie_total_interf=5 THEN 'TX' WHEN c.ie_total_interf=6 THEN 'TX' WHEN c.ie_total_interf=7 THEN 'TX'  ELSE ' ' END  
								ds_ma_me_tx, 
		' '						ie_tipo_atend_esp, 
		w.ie_tipo_atendimento			ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		x.dt_remessa				dt_contabil, 
		0						cd_funcionario, 
		0						cd_dependente, 
		0						qt_idade_paciente, 
		' ' 						ie_sexo_paciente, 
		' '						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		' '						cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		CASE WHEN c.cd_funcao_executor=2 THEN 'AA' WHEN c.cd_funcao_executor=3 THEN 'AB' WHEN c.cd_funcao_executor=4 THEN 'AC' WHEN c.cd_funcao_executor=10 THEN 'AD' WHEN c.cd_funcao_executor=5 THEN 'AE' WHEN c.cd_funcao_executor=9 THEN 'AI'  ELSE c.cd_item_convenio END  
								cd_item_convenio 
from		w_interf_conta_header x, 
		w_interf_conta_item c, 
		w_interf_conta_cab w 
where    c.nr_interno_conta 			= w.nr_interno_conta 
and		w.nr_seq_protocolo 			= x.nr_seq_protocolo 
and (c.ie_tipo_item				= 2 or (c.ie_tipo_item				= 1 and 
		c.cd_item not in (select x.cd_procedimento 
		from estrutura_procedimento_v x 
		where x.cd_area_procedimento in (1,4,11,13)))) 
and		c.vl_total_item				<> 0 
and		c.qt_item					<> 0 
group by	c.nr_seq_protocolo, 
		CASE WHEN w.ie_tipo_atendimento=1 THEN 'GAI' WHEN w.ie_tipo_atendimento=3 THEN 'GAC' WHEN w.ie_tipo_atendimento=7 THEN 'GAE' WHEN w.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END , 
      	c.nr_interno_conta, 
		somente_numero(substr(w.nr_doc_convenio,1,6)), 
      	coalesce(somente_numero(c.cd_item_convenio),0), 
		substr(x.cd_interno,1,4), 
      	substr(elimina_acentuacao(upper(c.ds_item)),1,50), 
      	CASE WHEN w.ie_carater_inter='U' THEN 'S'  ELSE 'N' END , 
      	CASE WHEN c.pr_hora_extra=0 THEN 'N' WHEN c.pr_hora_extra=1 THEN 'N' WHEN c.pr_hora_extra IS NULL THEN 'N'  ELSE 'S' END , 
      	trunc(w.dt_entrada,'dd'), 
      	c.cd_funcao_executor, 
      	c.nr_seq_protocolo, 
		CASE WHEN c.ie_total_interf=2 THEN '1' WHEN c.ie_total_interf=3 THEN '2'  ELSE ' ' END , 
		CASE WHEN c.ie_total_interf=2 THEN 'MA' WHEN c.ie_total_interf=3 THEN 'ME' WHEN c.ie_total_interf=5 THEN 'TX' WHEN c.ie_total_interf=6 THEN 'TX' WHEN c.ie_total_interf=7 THEN 'TX'  ELSE ' ' END , 
		w.ie_tipo_atendimento, 
		x.dt_remessa, 
		CASE WHEN c.cd_funcao_executor=2 THEN 'AA' WHEN c.cd_funcao_executor=3 THEN 'AB' WHEN c.cd_funcao_executor=4 THEN 'AC' WHEN c.cd_funcao_executor=10 THEN 'AD' WHEN c.cd_funcao_executor=5 THEN 'AE' WHEN c.cd_funcao_executor=9 THEN 'AI'  ELSE c.cd_item_convenio END  
having	sum(c.qt_item) <> 0 

union all
 
select   	'TOTAL DA CONTA    ' 		ds_registro, 
      	4            		tp_registro, 
		CASE WHEN b.ie_tipo_atendimento=1 THEN 'GAI' WHEN b.ie_tipo_atendimento=3 THEN 'GAC' WHEN b.ie_tipo_atendimento=7 THEN 'GAE' WHEN b.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END  
								ie_servico, 
      	3            		cd_registro, 
		substr(t.cd_interno,1,4)		cd_origem, 
      	b.nr_seq_protocolo   		nr_lote, 
      	b.nr_interno_conta   		nr_interno_conta, 
      	1            		nr_parcela, 
      	0            		cd_convenio, 
      	' '            		nm_convenio, 
      	' '            		tp_prestador, 
      	' '            		cd_prestador, 
      	' '            		nm_prestador, 
      	LOCALTIMESTAMP         		dt_geracao, 
      	1            		nr_remessa, 
      	' '            		cd_plano, 
      	' '            		cd_paciente, 
      	somente_numero(substr(b.nr_doc_convenio,1,6)) 
								cd_autorizacao, 
      	0            		cd_acomodacao, 
      	LOCALTIMESTAMP         		dt_entrada, 
      	LOCALTIMESTAMP         		dt_saida, 
      	LOCALTIMESTAMP         		dt_inicio_cobranca, 
      	LOCALTIMESTAMP         		dt_fim_cobranca, 
      	0            		ie_tipo_atendimento, 
      	' '           		cd_cid, 
      	0            		cd_proc_principal, 
		' '						cd_medico_convenio, 
      	0            		nr_crm, 
      	' '            		uf_crm, 
		' '						nr_crm_req, 
		' '						uf_crm_req, 
      	1            		nr_seq_item, 
      	0						cd_item, 
      	' '            		nm_item, 
      	' '   					ie_emergencia, 
      	' '            		ie_extra, 
      	LOCALTIMESTAMP					dt_item, 
      	0            		ie_funcao_medico, 
      	0						qt_item, 
      	0						vl_item, 
      	0						ie_cirurgia_multipla, 
      	sum(CASE WHEN x.cd_area_procedimento=1 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=4 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=11 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=13 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0))  ELSE e.vl_total_item END ) vl_total_item, 
      	0						qt_item_conta, 
	   	substr(elimina_acentuacao(upper(b.nm_paciente)),1,40) 
								nm_paciente, 
      	' '	   				nr_fatura, 
      	0						qt_conta, 
      	0						vl_total_lote, 
	   	b.nr_seq_protocolo			nr_seq_protocolo, 
		' '						ds_espaco, 
      	1            		nr_registro, 
		' '						ie_matmed, 
		' '						ds_ma_me_tx, 
		' '						ie_tipo_atend_esp, 
		b.ie_tipo_atendimento			ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		t.dt_remessa				dt_contabil, 
		0						cd_funcionario, 
		0						cd_dependente, 
		0						qt_idade_paciente, 
		' ' 						ie_sexo_paciente, 
		' '						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		' '						cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		' '						cd_item_convenio 
FROM w_interf_conta_header t, w_interf_conta_cab b, w_interf_conta_item e
LEFT OUTER JOIN estrutura_procedimento_v x ON (e.cd_item = x.cd_procedimento AND e.ie_origem_proced = x.ie_origem_proced)
LEFT OUTER JOIN regra_honorario z ON (e.ie_responsavel_credito = z.cd_regra)
WHERE b.nr_interno_conta 		= e.nr_interno_conta and b.nr_seq_protocolo 			= t.nr_seq_protocolo    and coalesce(z.ie_entra_conta,'S') 		= 'S' group by	b.nr_seq_protocolo, 
		CASE WHEN b.ie_tipo_atendimento=1 THEN 'GAI' WHEN b.ie_tipo_atendimento=3 THEN 'GAC' WHEN b.ie_tipo_atendimento=7 THEN 'GAE' WHEN b.ie_tipo_atendimento=8 THEN 'GAS'  ELSE 'GAI' END , 
      	b.nr_interno_conta, 
		somente_numero(substr(b.nr_doc_convenio,1,6)), 
		substr(t.cd_interno,1,4), 
		substr(elimina_acentuacao(upper(b.nm_paciente)),1,40), 
		b.ie_tipo_atendimento, 
		t.dt_remessa 

union all
 
select   	'FIM DE LOTE      ' 		ds_registro, 
      	5            		tp_registro, 
      	'CSMH'         		ie_servico, 
      	4            		cd_registro, 
		substr(t.cd_interno,1,4)		cd_origem, 
      	b.nr_seq_protocolo   		nr_lote, 
      	99999999	   			nr_interno_conta, 
      	99            		nr_parcela, 
      	0            		cd_convenio, 
      	' '            		nm_convenio, 
      	' '            		tp_prestador, 
      	' '            		cd_prestador, 
      	' '            		nm_prestador, 
      	LOCALTIMESTAMP         		dt_geracao, 
      	1            		nr_remessa, 
      	' '            		cd_plano, 
      	' '            		cd_paciente, 
      	999999            		cd_autorizacao, 
      	0            		cd_acomodacao, 
      	LOCALTIMESTAMP         		dt_entrada, 
      	LOCALTIMESTAMP         		dt_saida, 
      	LOCALTIMESTAMP         		dt_inicio_cobranca, 
      	LOCALTIMESTAMP         		dt_fim_cobranca, 
      	0            		ie_tipo_atendimento, 
      	' '           		cd_cid, 
      	0            		cd_proc_principal, 
		' '						cd_medico_convenio, 
      	0            		nr_crm, 
      	' '            		uf_crm, 
		' '						nr_crm_req, 
		' '						uf_crm_req, 
      	1            		nr_seq_item, 
      	0						cd_item, 
      	' '            		nm_item, 
      	' '   					ie_emergencia, 
      	' '            		ie_extra, 
      	LOCALTIMESTAMP					dt_item, 
      	0            		ie_funcao_medico, 
      	0						qt_item, 
      	0						vl_item, 
      	0						ie_cirurgia_multipla, 
      	0		   			vl_total_item, 
      	0	   				qt_item_conta, 
	   	' '						nm_paciente, 
      	' '	   				nr_fatura, 
      	count(distinct e.nr_interno_conta) 	qt_conta, 
      	sum(CASE WHEN x.cd_area_procedimento=1 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=4 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=11 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=13 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0))  ELSE e.vl_total_item END ) vl_total_lote, 
	   	b.nr_seq_protocolo			nr_seq_protocolo, 
		' '						ds_espaco, 
      	1            		nr_registro, 
		' '						ie_matmed, 
		' '						ds_ma_me_tx, 
		' '						ie_tipo_atend_esp, 
		0						ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		t.dt_remessa				dt_contabil, 
		0						cd_funcionario, 
		0						cd_dependente, 
		0						qt_idade_paciente, 
		' ' 						ie_sexo_paciente, 
		' '						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		' '						cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		' '						cd_item_convenio 
FROM w_interf_conta_header t, w_interf_conta_cab b, w_interf_conta_item e
LEFT OUTER JOIN estrutura_procedimento_v x ON (e.cd_item = x.cd_procedimento AND e.ie_origem_proced = x.ie_origem_proced)
LEFT OUTER JOIN regra_honorario z ON (e.ie_responsavel_credito = z.cd_regra)
WHERE b.nr_interno_conta 			= e.nr_interno_conta and b.nr_seq_protocolo			= t.nr_seq_protocolo    and coalesce(z.ie_entra_conta,'S') 		= 'S' group by	b.nr_seq_protocolo, 
		substr(t.cd_interno,1,4), 
		t.dt_remessa 

union all
 
select   	'TRAILLER       ' 		ds_registro, 
      	6            		tp_registro, 
      	'CSMH'         		ie_servico, 
      	9            		cd_registro, 
		substr(f.cd_interno,1,4)		cd_origem, 
      	99999999	   			nr_lote, 
      	99999999	   			nr_interno_conta, 
      	99            		nr_parcela, 
      	0            		cd_convenio, 
      	' '            		nm_convenio, 
      	' '            		tp_prestador, 
      	' '            		cd_prestador, 
      	' '            		nm_prestador, 
      	LOCALTIMESTAMP         		dt_geracao, 
      	1            		nr_remessa, 
      	' '            		cd_plano, 
      	' '            		cd_paciente, 
      	999999            		cd_autorizacao, 
      	0            		cd_acomodacao, 
      	LOCALTIMESTAMP         		dt_entrada, 
      	LOCALTIMESTAMP         		dt_saida, 
      	LOCALTIMESTAMP         		dt_inicio_cobranca, 
	 	LOCALTIMESTAMP         		dt_fim_cobranca, 
      	0            		ie_tipo_atendimento, 
      	' '           		cd_cid, 
      	0             		cd_proc_principal, 
		' '						cd_medico_convenio, 
      	0            		nr_crm, 
      	' '            		uf_crm, 
	   	' '						nr_crm_req, 
		' '						uf_crm_req, 
      	1            		nr_seq_item, 
      	0						cd_item, 
      	' '            		nm_item, 
      	' '   					ie_emergencia, 
      	' '            		ie_extra, 
      	LOCALTIMESTAMP					dt_item, 
      	0            		ie_funcao_medico, 
      	0						qt_item, 
      	0						vl_item, 
      	0						ie_cirurgia_multipla, 
      	0		   			vl_total_item, 
      	0	   				qt_item_conta, 
	   	' '						nm_paciente, 
      	' '	   				nr_fatura, 
      	count(distinct e.nr_interno_conta) 	qt_conta, 
      	sum(CASE WHEN x.cd_area_procedimento=1 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=4 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=11 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0)) WHEN x.cd_area_procedimento=13 THEN (coalesce(e.vl_honorario,0) + coalesce(e.vl_custo_oper,0))  ELSE e.vl_total_item END ) vl_total_lote, 
	   	b.nr_seq_protocolo			nr_seq_protocolo, 
		' '						ds_espaco, 
      	1            		nr_registro, 
		' '						ie_matmed, 
		' '						ds_ma_me_tx, 
		' '						ie_tipo_atend_esp, 
		9						ie_tipo_atend_tasy, 
		' '						cd_senha_guia, 
		f.dt_remessa				dt_contabil, 
		0						cd_funcionario, 
		0						cd_dependente, 
		0						qt_idade_paciente, 
		' ' 						ie_sexo_paciente, 
		' '						ie_acidente_trabalho, 
		0						cd_local_acidente, 
		' '						cd_glosa, 
		' '						ds_glosa, 
		' '						cd_cid_secundario, 
		0						vl_total_pago, 
		' '						nm_empregado, 
		' '						ie_recurso_glosa, 
		0						nr_guia_original, 
		' '						ie_categoria_empregado, 
		' '						cd_item_convenio 
FROM w_interf_conta_header f, w_interf_conta_cab b, w_interf_conta_item e
LEFT OUTER JOIN estrutura_procedimento_v x ON (e.cd_item = x.cd_procedimento AND e.ie_origem_proced = x.ie_origem_proced)
LEFT OUTER JOIN regra_honorario z ON (e.ie_responsavel_credito = z.cd_regra)
WHERE b.nr_interno_conta 			= e.nr_interno_conta and b.nr_seq_protocolo			= f.nr_seq_protocolo    and coalesce(z.ie_entra_conta,'S') 		= 'S' group by	substr(f.cd_interno,1,4), 
		b.nr_seq_protocolo, 
		f.dt_remessa;

