-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW conta_paciente_procedimento_v (cd_convenio, ie_emite_conta, nr_interno_conta, cd_procedimento, ie_origem_proced, cd_procedimento_princ, ds_procedimento, ds_proc_sem_acento, ds_procedimento_lab, dt_procedimento, dt_proced_dia, dt_conta, dt_conta_dia, dt_inicio_procedimento, dt_procedimento_princ, hr_inicio, hr_fim, qt_procedimento, vl_procedimento, vl_iss, vl_proc_iss, vl_unitario, vl_unit_round, vl_unit_trunc, cd_setor_atendimento, ds_setor_atendimento, ds_classif_setor, nm_medico, nr_pto_procedimento, nr_pto_medico, nr_pto_auxiliares, nr_pto_anestesista, nr_pto_material, nr_pto_coper, qt_pto_procedimento, qt_pto_medico, qt_pto_auxiliares, qt_pto_anestesista, qt_pto_material, qt_pto_coper, cd_procedimento_convenio, ds_procedimento_convenio, cd_unidade_medida_convenio, qt_proced_convenio, vl_proced_convenio, tx_conversao_qtde, nr_sequencia, nr_seq_proc_pacote, tx_procedimento, vl_filme, vl_unitario_filme, vl_exame, qt_porte_anestesico, vl_unitario_convenio, cd_unidade_medida, ds_unidade_medida, cd_proc_orig_pacote, vl_desconto, vl_unitario_bruto, vl_bruto, vl_bruto_trunc, vl_exame_bruto, vl_exame_unitario_bruto, vl_medico, vl_proc_menos_medico, vl_proc_mais_medico, vl_proc_mais_medico_mat, cd_cgc_prestador, nr_doc_convenio, vl_custo_operacional, vl_medico_custo_oper, vl_medico_custo_mat, vl_honor_pacote, vl_total_pacote, vl_unitario_pacote, nm_prestador, nm_fantasia_prestador, cd_medico_convenio, cd_prestador_convenio, cd_tipo_acomodacao_pac, ds_tipo_acomodacao_pac, cd_tipo_acomod_int, ds_tipo_acomod_int, ds_proc_interno, ds_proc_int_ou_orig, ds_proc_int_conv_orig, nm_medico_prescricao, cd_senha, ds_proced_conv_lab, ie_espaco, qt_filme, pr_afaturar_pacote, nr_prescricao, tx_hora_extra, ds_hora_extra, cd_motivo_exc_conta, vl_original_pacote, vl_orig_unit_pacote, vl_orig_pacote_desc, vl_orig_unit_pac_desc, vl_taxa_fora_pacte, cd_grupo_convenio, vl_anestesista_pacote, ds_proc_interno_fatur, nr_doc_conv_prescr, nm_fantasia, ds_observacao, nr_cirurgia, vl_unitario_conv_round, ie_via_acesso, ds_via_acesso, cd_proc_princ_cirurgia, ds_proc_princ_cirurgia, nr_seq_proc_princ, cd_proc_principal, ds_proc_principal, dt_exame_laudo, cd_medico_executor, nm_medico_executor, ds_especialidade, ds_funcao_medico, nm_medico_req, dt_proc_agrupado, ie_valor_informado, ie_proc_princ_atend, dt_inicio_real, dt_termino, vl_custo_filme, ie_auditoria, nr_crm, tx_ajuste_percentual, cd_procedimento_tuss, ie_conferencia, nr_seq_protocolo, vl_proc_original, ds_procedimento_tuss, vl_proc_sem_glosa, qt_proc_glosa, vl_unit_glosa, cd_proced_tuss, ds_proced_tuss, nr_min_duracao_real, cd_proc_transicao_tuss, ds_proc_transicao_tuss, cd_proc_conv_tuss, ds_proc_conv_tuss, ds_via_hemodinamica, ds_classif_agrup, cd_conv_tuss_proc, cd_unidade_medida_conv, vl_unit_com_desconto, ds_lado, nr_fone_integracao, dt_ligacao_integracao, nr_seq_proc_interno, nr_seq_exame, nr_ato_ipasgo, cd_procedimento_loc) AS select	a.cd_convenio,
	a.ie_emite_conta,
	a.nr_interno_conta,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.cd_procedimento_princ,
	substr(b.ds_procedimento,0,180) ds_procedimento,
	substr(elimina_acentuacao(b.ds_procedimento),1,180) ds_proc_sem_acento,
	substr(obter_desc_exame_lab(a.nr_seq_exame,null,a.cd_procedimento,a.ie_origem_proced),0,180) ds_procedimento_lab,
	a.dt_procedimento dt_procedimento,
	trunc(a.dt_procedimento,'DD') dt_proced_dia,
	a.dt_conta,
	trunc(a.dt_conta,'DD') dt_conta_dia,
	a.dt_inicio_procedimento dt_inicio_procedimento,
	a.dt_procedimento_princ dt_procedimento_princ,
	to_char(a.dt_inicio_procedimento,'hh24:mi:ss') hr_inicio,
	to_char(a.dt_procedimento,'hh24:mi:ss') hr_fim,
	a.qt_procedimento,
	a.vl_procedimento,
	obter_valor_iss_item(a.cd_convenio, a.vl_procedimento) vl_iss,
	(a.vl_procedimento + obter_valor_iss_item(a.cd_convenio, a.vl_procedimento)) vl_proc_iss,
	dividir(a.vl_procedimento, a.qt_procedimento) vl_unitario,
	round((dividir(a.vl_procedimento,a.qt_procedimento))::numeric,2) vl_unit_round,
	trunc(dividir(a.vl_procedimento,a.qt_procedimento),2) vl_unit_trunc,
	c.cd_setor_atendimento,
	c.ds_setor_atendimento,
	substr(obter_valor_dominio(1,c.cd_classif_setor),0,30) ds_classif_setor,
	e.nm_pessoa_fisica nm_medico,
	coalesce(f.vl_procedimento, 0) nr_pto_procedimento,
	coalesce(f.vl_medico, 0) nr_pto_medico,
	coalesce(f.vl_auxiliares, 0) nr_pto_auxiliares,
	coalesce(f.vl_anestesista, 0) nr_pto_anestesista,
	coalesce(f.vl_materiais, 0) nr_pto_material,
	coalesce(f.vl_custo_operacional, 0) nr_pto_coper,
	CASE WHEN coalesce(f.vl_procedimento,0)=0 THEN 0  ELSE dividir(f.vl_procedimento,a.qt_procedimento) END  qt_pto_procedimento,
	CASE WHEN coalesce(f.vl_medico,0)=0 THEN 0  ELSE dividir(f.vl_medico,a.qt_procedimento) END  qt_pto_medico,
	CASE WHEN coalesce(f.vl_auxiliares,0)=0 THEN 0  ELSE dividir(f.vl_auxiliares,a.qt_procedimento) END  qt_pto_auxiliares,
	CASE WHEN coalesce(f.vl_anestesista,0)=0 THEN 0  ELSE dividir(f.vl_anestesista,a.qt_procedimento) END  qt_pto_anestesista,
	CASE WHEN coalesce(f.vl_materiais,0)=0 THEN 0  ELSE dividir(f.vl_materiais,a.qt_procedimento) END  qt_pto_material,
	CASE WHEN coalesce(f.vl_custo_operacional,0)=0 THEN 0  ELSE dividir(f.vl_custo_operacional,a.qt_procedimento) END  qt_pto_coper,
	coalesce(g.cd_procedimento,coalesce(a.cd_procedimento_convenio,a.cd_procedimento)) cd_procedimento_convenio,
	coalesce(g.ds_procedimento,b.ds_procedimento) ds_procedimento_convenio,
	g.cd_unidade_medida cd_unidade_medida_convenio,
	(a.qt_procedimento * CASE WHEN coalesce(g.tx_conversao_qtde,0)=0 THEN 1  ELSE g.tx_conversao_qtde END ) qt_proced_convenio,
	a.vl_procedimento vl_proced_convenio,
	g.tx_conversao_qtde,
	a.nr_sequencia,
	a.nr_seq_proc_pacote,
	a.tx_procedimento,
	coalesce(a.vl_materiais,0) vl_filme,
	(coalesce(a.vl_materiais,0) / a.qt_procedimento)  vl_unitario_filme,
	(coalesce(a.vl_procedimento,0) - coalesce(a.vl_materiais,0)) vl_exame,
	a.qt_porte_anestesico,
	dividir(a.vl_procedimento,
	(CASE WHEN a.qt_procedimento=0 THEN 1  ELSE a.qt_procedimento END  *
	 CASE WHEN coalesce(g.tx_conversao_qtde,0)=0 THEN 1  ELSE g.tx_conversao_qtde END )) vl_unitario_convenio,
	Obter_Unid_Med_Servico(a.cd_convenio,a.cd_categoria,a.cd_procedimento,a.ie_origem_proced,w.cd_estabelecimento) cd_unidade_medida,
	substr(Obter_Desc_Unid_Med(Obter_Unid_Med_Servico(a.cd_convenio,a.cd_categoria,a.cd_procedimento,a.ie_origem_proced,w.cd_estabelecimento)),1,100) ds_unidade_medida,
	CASE WHEN a.nr_seq_proc_pacote IS NULL THEN null  ELSE Obter_Proc_Origem_Pacote(a.nr_seq_proc_pacote) END  cd_proc_orig_pacote,
	coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0) vl_desconto,
	dividir((a.vl_procedimento + coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0)),a.qt_procedimento) vl_unitario_bruto,
	a.vl_procedimento + coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0) vl_bruto,
	(a.qt_procedimento * trunc(dividir(a.vl_procedimento,a.qt_procedimento),2)) + coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0) vl_bruto_trunc,
	(coalesce(a.vl_procedimento,0) - coalesce(a.vl_materiais,0)) + coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0) vl_exame_bruto,
	dividir((coalesce(a.vl_procedimento,0) - coalesce(a.vl_materiais,0)) +
		coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0),a.qt_procedimento) vl_exame_unitario_bruto,
	a.vl_medico,
	a.vl_procedimento - a.vl_medico vl_proc_menos_medico,
	a.vl_procedimento + a.vl_medico vl_proc_mais_medico,
	a.vl_procedimento + a.vl_medico + a.vl_materiais vl_proc_mais_medico_mat,
	a.cd_cgc_prestador,
	a.nr_doc_convenio,
	a.vl_custo_operacional,
	coalesce(a.vl_medico,0) + coalesce(a.vl_custo_operacional,0) vl_medico_custo_oper,
	coalesce(a.vl_medico,0) + coalesce(a.vl_custo_operacional,0) + coalesce(a.vl_materiais,0) vl_medico_custo_mat,
	obter_honor_fora_pacote(a.nr_seq_proc_pacote) vl_honor_pacote,
	a.vl_procedimento + obter_honor_fora_pacote(a.nr_seq_proc_pacote) vl_total_pacote,
	dividir((a.vl_procedimento + obter_honor_fora_pacote(a.nr_seq_proc_pacote)),a.qt_procedimento) vl_unitario_pacote,
	substr(obter_nome_pf_pj(null, a.cd_cgc_prestador),1,100) nm_prestador,
	substr(obter_dados_pf_pj(null, a.cd_cgc_prestador, 'F'),1,100) nm_fantasia_prestador,
	substr(Obter_Medico_Convenio(w.cd_estabelecimento,a.cd_medico_executor, a.cd_convenio, null, null, null, 
	a.cd_setor_atendimento,dt_procedimento, w.ie_tipo_atendimento, a.ie_funcao_medico, w.ie_carater_inter_sus),1,40) cd_medico_convenio,
	substr(Obter_Prestador_Convenio(a.cd_cgc_prestador,a.cd_convenio,a.cd_categoria,w.nr_seq_classificacao),1,30) cd_prestador_convenio,
	d.cd_tipo_acomodacao cd_tipo_acomodacao_pac,
	h.ds_tipo_acomodacao ds_tipo_acomodacao_pac,
	obter_tipo_acomod_proc(a.nr_atendimento, a.nr_sequencia) cd_tipo_acomod_int,
	substr(obter_desc_tipo_acomod(obter_tipo_acomod_proc(a.nr_atendimento, a.nr_sequencia)),1,40)  ds_tipo_acomod_int,
	substr(obter_desc_proc_interno(nr_seq_proc_interno),1,60) ds_proc_interno,
	substr(coalesce(Obter_Desc_Proc_Interno(a.nr_seq_proc_interno),b.ds_procedimento),1,80) ds_proc_int_ou_orig,
	substr(coalesce(g.ds_procedimento, coalesce(Obter_Desc_Proc_Interno(a.nr_seq_proc_interno),b.ds_procedimento)),1,80) ds_proc_int_Conv_Orig,
	substr(obter_medico_prescricao(a.nr_prescricao, 'N'),1,60) nm_medico_prescricao,
	a.cd_senha,
	substr(coalesce(g.ds_procedimento, obter_desc_exame_lab(a.nr_seq_exame,null,a.cd_procedimento,a.ie_origem_proced)),1,180) ds_proced_conv_lab,
	' ' ie_espaco,
	Obter_qt_filme_amb(a.cd_edicao_amb, a.cd_procedimento, a.ie_origem_proced, a.dt_procedimento) qt_filme,
	Obter_Perc_Faturar_Pacote(a.nr_seq_proc_pacote) pr_afaturar_pacote,
	a.nr_prescricao,
	coalesce(a.tx_hora_extra,1) tx_hora_extra,
	((coalesce(a.tx_hora_extra,1) * 100) - 100) ds_hora_extra, a.cd_motivo_exc_conta,
	(qt_procedimento * Obter_valor_original_Pacote(a.nr_seq_proc_pacote)) vl_original_pacote,
	Obter_valor_original_Pacote(a.nr_seq_proc_pacote) vl_orig_unit_pacote,
	((qt_procedimento * Obter_valor_original_Pacote(a.nr_seq_proc_pacote)) - coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0)) vl_orig_pacote_desc,
	(Obter_valor_original_Pacote(a.nr_seq_proc_pacote) - coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0)) vl_orig_unit_pac_desc,
	Obter_Valor_taxa(a.nr_sequencia, 0) vl_taxa_fora_pacte,
	g.cd_grupo cd_grupo_convenio,
	obter_valor_anest_pacote(a.nr_seq_proc_pacote) vl_anestesista_pacote,
	substr(coalesce(Obter_Desc_Fatur_Proc_Interno(nr_seq_proc_interno),coalesce(g.ds_procedimento, 
		coalesce(Obter_Desc_Proc_Interno(a.nr_seq_proc_interno),b.ds_procedimento))),1,80) ds_proc_interno_fatur,
	substr(obter_guia_prescricao(a.nr_prescricao),1,20) nr_doc_conv_prescr,
	substr(obter_dados_pf_pj(null, a.cd_cgc_prestador, 'F'),1,100) nm_fantasia,
	a.ds_observacao,
	a.nr_cirurgia,
	round(dividir(a.vl_procedimento,
	(CASE WHEN a.qt_procedimento=0 THEN 1  ELSE a.qt_procedimento END  *
	 CASE WHEN coalesce(g.tx_conversao_qtde,0)=0 THEN 1  ELSE g.tx_conversao_qtde END )) ,2) vl_unitario_conv_round,
	 a.ie_via_acesso,
	 substr(obter_valor_dominio(1268,a.ie_via_acesso),1,100) ds_via_acesso,
	substr(Obter_proc_princ_cirurgia(a.nr_cirurgia,'C'),1,15) cd_proc_princ_cirurgia,
	substr(Obter_proc_princ_cirurgia(a.nr_cirurgia,'D'),1,60) ds_proc_princ_cirurgia,
	a.nr_seq_proc_princ,
	(obter_dados_propaci('CP',a.nr_seq_proc_princ))::numeric  cd_proc_principal,
	substr(obter_dados_propaci('DS',a.nr_seq_proc_princ),1,240) ds_proc_principal,
	obter_data_exame_laudo_proced(a.nr_sequencia) dt_exame_laudo,
	a.cd_medico_executor,
	substr(obter_nome_pf(a.cd_medico_executor),1,30) nm_medico_executor,
	substr(Obter_Desc_Espec_medica(a.cd_especialidade),1,30) ds_especialidade,
	substr(obter_funcao_medico(a.ie_funcao_medico),1,30) ds_funcao_medico,
	substr(coalesce(obter_nome_pf(a.cd_medico_req),' '),1,50) nm_medico_req,
	dt_procedimento dt_proc_agrupado,
	coalesce(a.ie_valor_informado,'N') ie_valor_informado,
	coalesce(a.ie_proc_princ_atend, 'N') ie_proc_princ_atend,
	substr(obter_dados_cirurgia(a.nr_cirurgia, 'IR'),1,100) dt_inicio_real,
	substr(obter_dados_cirurgia(a.nr_cirurgia, 'DT'),1,100) dt_termino,
	(a.vl_custo_operacional + coalesce(a.vl_materiais,0)) vl_custo_filme,
	a.ie_auditoria,
	substr(obter_crm_medico(a.cd_medico_executor),1,20) nr_crm,
	((1- obter_indice_preco_proc(a.nr_sequencia)) * 100) tx_ajuste_percentual,
	--nvl(a.cd_procedimento_tuss, a.cd_procedimento) cd_procedimento_tuss,	

	CASE WHEN coalesce(a.cd_procedimento_tuss,0)=0 THEN  a.cd_procedimento  ELSE a.cd_procedimento_tuss END  cd_procedimento_tuss,
	CASE WHEN a.dt_conferencia IS NULL THEN 'N'  ELSE 'S' END  ie_conferencia,
	i.nr_seq_protocolo,
	dividir(a.vl_procedimento,obter_indice_preco_proc(a.nr_sequencia)) vl_proc_original,
	--nvl(substr(obter_descricao_procedimento(a.cd_procedimento_tuss, 8),1,180), substr(b.ds_procedimento,1,180)) ds_procedimento_tuss,

	substr(CASE WHEN coalesce(a.cd_procedimento_tuss,0)=0 THEN  b.ds_procedimento  ELSE obter_descricao_procedimento(a.cd_procedimento_tuss, 8) END ,1,180) ds_procedimento_tuss,
	Obter_Preco_Sem_Glosa(a.nr_sequencia,'P',a.nr_atendimento) vl_proc_sem_glosa,
	CASE WHEN coalesce(Obter_Qt_ProcMat_Glosa(a.nr_seq_proc_princ, 'P', a.nr_atendimento),0)=0 THEN  a.qt_procedimento  ELSE Obter_Qt_ProcMat_Glosa(a.nr_seq_proc_princ, 'P', a.nr_atendimento) END  qt_proc_glosa,	
	dividir(a.vl_procedimento,CASE WHEN coalesce(Obter_Qt_ProcMat_Glosa(a.nr_seq_proc_princ, 'P', a.nr_atendimento),0)=0 THEN  a.qt_procedimento  ELSE Obter_Qt_ProcMat_Glosa(a.nr_seq_proc_princ, 'P', a.nr_atendimento) END ) vl_unit_glosa,	
	a.cd_procedimento_tuss cd_proced_tuss,
	substr(obter_descricao_procedimento(a.cd_procedimento_tuss, 8),1,180) ds_proced_tuss,
	Obter_Tempo_Cirurgia(a.nr_cirurgia) nr_min_duracao_real,
	CASE WHEN Obter_Se_Vigente_TUSS(a.dt_procedimento, a.cd_convenio, i.cd_estabelecimento)=1 THEN 		coalesce(g.cd_procedimento,coalesce(a.cd_procedimento_convenio,a.cd_procedimento))  ELSE CASE WHEN coalesce(a.cd_procedimento_tuss,0)=0 THEN  a.cd_procedimento  ELSE a.cd_procedimento_tuss END  END  cd_proc_transicao_tuss,
	CASE WHEN Obter_Se_Vigente_TUSS(a.dt_procedimento, a.cd_convenio, i.cd_estabelecimento)=1 THEN 		coalesce(g.ds_procedimento, substr(b.ds_procedimento,0,100))  ELSE substr(CASE WHEN coalesce(a.cd_procedimento_tuss,0)=0 THEN  b.ds_procedimento  ELSE obter_descricao_procedimento(a.cd_procedimento_tuss, 8) END ,1,180) END  ds_proc_transicao_tuss,
	CASE WHEN coalesce(a.cd_procedimento_tuss,0)=0 THEN  coalesce(a.cd_procedimento_convenio,a.cd_procedimento)  ELSE a.cd_procedimento_tuss END  cd_proc_conv_tuss,
	substr(coalesce(g.ds_procedimento, CASE WHEN coalesce(a.cd_procedimento_tuss,0)=0 THEN  b.ds_procedimento  ELSE obter_descricao_procedimento(a.cd_procedimento_tuss, 8) END ),1,180) ds_proc_conv_tuss,
	substr(obter_valor_dominio(1483, a.ie_via_hemodinamica),1,254) ds_via_hemodinamica,
	coalesce(substr(obter_agrup_classif_setor(c.nr_seq_agrup_classif),1,200), substr(obter_desc_expressao(960582), 1, 200)) ds_classif_agrup,
	CASE WHEN coalesce(a.cd_procedimento_convenio, to_char(a.cd_procedimento))=to_char(a.cd_procedimento) THEN  		CASE WHEN coalesce(to_char(a.cd_procedimento_tuss),'0')='0' THEN  to_char(a.cd_procedimento)  ELSE to_char(a.cd_procedimento_tuss) END   ELSE a.cd_procedimento_convenio END  cd_conv_tuss_proc,
	Obter_Unid_Med_Servico2(a.cd_convenio,a.cd_categoria,a.cd_procedimento,a.ie_origem_proced,w.cd_estabelecimento,a.nr_seq_ajuste_proc) cd_unidade_medida_conv,
	CASE WHEN coalesce(obter_desconto_matproc(a.nr_sequencia,'P'),0)=0 THEN  0  ELSE dividir(a.vl_procedimento, a.qt_procedimento) END  vl_unit_com_desconto,
	substr(obter_valor_dominio(1372, a.ie_lado),1,254) ds_lado,
	a.nr_fone_integracao,
	a.dt_ligacao_integracao,
	a.nr_seq_proc_interno,
	a.nr_seq_exame,
	a.NR_ATO_IPASGO,
	b.cd_procedimento_loc
FROM atendimento_paciente w, conta_paciente i, setor_atendimento c, procedimento b, atend_paciente_unidade d
LEFT OUTER JOIN tipo_acomodacao h ON (d.cd_tipo_acomodacao = h.cd_tipo_acomodacao)
, procedimento_paciente a
LEFT OUTER JOIN pessoa_fisica e ON (a.cd_medico_executor = e.cd_pessoa_fisica)
LEFT OUTER JOIN proc_paciente_valor f ON (a.nr_sequencia = f.nr_seq_procedimento AND 2 = f.ie_tipo_valor)
LEFT OUTER JOIN proc_paciente_convenio g ON (a.nr_sequencia = g.nr_seq_procedimento)
WHERE a.cd_procedimento = b.cd_procedimento and a.ie_origem_proced = b.ie_origem_proced and a.cd_setor_atendimento = c.cd_setor_atendimento and a.nr_seq_atepacu = d.nr_seq_interno and a.nr_interno_conta = i.nr_interno_conta     and a.nr_atendimento = w.nr_atendimento;

