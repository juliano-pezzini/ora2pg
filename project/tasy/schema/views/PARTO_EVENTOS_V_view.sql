-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW parto_eventos_v (nr_atendimento, dd_nascimento, mm_nascimento, yy_nascimento, hhmi_nascimento, idade_gest, t_value, duration_fmt, rupture_after, rupture_before, amniotic_fluid_color, amniotic_fluid_amount, ie_dm_gest, ie_dheg, ie_diabetes, ie_dm, ds_doencas_gestacao, multiples, multiples_1, multiples_2, multiples_3, position_sl, position_bel, position_ql, type_spontan, type_sectio, type_forceps, type_manualhilfe, type_vakuum, type_lokal, type_intubation, type_spinal, type_zervixriss, dr_i_ii, dr_iii_iv, type_episiotomie, sexo_f, sexo_m, qt_peso, qt_altura, qt_pc, ie_mascara, ie_entubacao, ie_massag_cardiaca, arterial_ph, arterial_be, ie_cateterismo, ie_icterica, ie_pressao_positiva, ie_malformacao, ie_malformacao_desc, ie_destino_check, ie_destino, ie_cianose, ie_palido, ie_asfixia_intrauterina, ie_asfixia_neonatal, ie_choque, ie_dist_respiratorio, ie_controle_recomendado, ds_transporte_terapia_check, ds_transporte_terapia, nr_sequencia, ie_sangue_perdido_normal, ie_sangue_perdido_acima, ie_sangue_perdido_ruptura, escala_fq_1, escala_fq_5, escala_fq_10, escala_co_1, escala_co_5, escala_co_10, escala_tm_1, escala_tm_5, escala_tm_10, escala_ir_1, escala_ir_5, escala_ir_10, escala_es_1, escala_es_5, escala_es_10, escala_tt_1, escala_tt_5, escala_tt_10, baby_name, baby_atendimento) AS SELECT
        p.nr_atendimento,
        to_char(n.dt_nascimento, 'DD') AS dd_nascimento,
        to_char(n.dt_nascimento, 'MM') AS mm_nascimento,
        to_char(n.dt_nascimento, 'YY') AS yy_nascimento,
        to_char(n.dt_nascimento, 'HH12') || ':' || to_char(n.dt_nascimento, 'MI') AS hhmi_nascimento,
        n.qt_sem_ig_total AS idade_gest,
        n.qt_dia_ig_total AS t_value,
        lpad(trunc(24 *(p.dt_fim_parto - p.dt_contracao_regular)), 2, '0')
        || ':' || abs(trunc(mod(mod(p.dt_fim_parto - p.dt_contracao_regular, 1) * 24, 1) * 60))
        || ':' || abs(trunc((mod((mod(mod(p.dt_fim_parto - p.dt_contracao_regular, 1) * 24, 1) * 60), 1) * 60))) AS duration_fmt,
        CASE WHEN p.hr_bolsa_amniotica - p.dt_contracao_regular > 0 THEN 'x' ELSE ' ' END AS rupture_after,
        CASE WHEN p.hr_bolsa_amniotica - p.dt_contracao_regular < 0 THEN 'x' ELSE ' ' END AS rupture_before,
        obter_valor_dominio(2952, p.ie_aspecto_liquido) AS amniotic_fluid_color,
        obter_valor_pre_natal('med_pac_pre_natal_evol.qt_ila', n.nr_atendimento) amniotic_fluid_amount,
        CASE WHEN p.ie_after_week <> 'N' OR p.ie_hellp_bp_risk <> 'N' THEN 'x' ELSE ' ' END AS ie_dm_gest,
        CASE WHEN p.ie_bp_pretenuria <> 'N' THEN 'x' ELSE ' ' END AS ie_dheg,
        CASE WHEN p.ie_diab_gdm_risk <> 'N' OR p.ie_diab_metf_risk <> 'N' THEN 'x' ELSE ' ' END AS ie_diabetes,
        CASE WHEN p.ie_iddm_endo_risk <> 'N' THEN 'x' ELSE ' ' END AS ie_dm,
        CASE WHEN trim(both p.ds_doencas_gestacao) IS NOT NULL THEN 'x' ELSE ' ' END AS ds_doencas_gestacao,
        CASE WHEN p.qt_feto > 1 THEN 'x' ELSE ' ' END AS multiples,
        CASE WHEN p.qt_feto = 1 THEN 'x' ELSE ' ' END AS multiples_1,
        CASE WHEN p.qt_feto = 2 THEN 'x' ELSE ' ' END AS multiples_2,
        CASE WHEN p.qt_feto >= 3 THEN 'x' ELSE ' ' END AS multiples_3,
        CASE WHEN n.nr_seq_pos_birth = 1 OR n.nr_seq_pos_birth = 2 THEN 'x' ELSE ' ' END AS position_sl,
        CASE WHEN n.nr_seq_pos_birth = 3 THEN 'x' ELSE ' ' END AS position_bel,
        CASE WHEN n.nr_seq_pos_birth = 4 THEN 'x' ELSE ' ' END AS position_ql,
        CASE WHEN n.nr_seq_typ_del = 1 THEN 'x' ELSE ' ' END AS type_spontan,
        CASE WHEN n.nr_seq_typ_del > 5 THEN 'x' ELSE ' ' END AS type_sectio,
        CASE WHEN n.nr_seq_typ_del = 3 THEN 'x' ELSE ' ' END AS type_forceps,
        CASE WHEN n.nr_seq_typ_del = 5 THEN 'x' ELSE ' ' END AS type_manualhilfe,
        CASE WHEN n.nr_seq_typ_del = 2 THEN 'x' ELSE ' ' END AS type_vakuum,
        CASE WHEN( p.cd_tipo_anestesia = '5' OR p.cd_tipo_anestesia = '7' OR p.cd_tipo_anestesia = '9' ) THEN 'x' ELSE ' ' END AS type_lokal,
        ' ' AS type_intubation,
        CASE WHEN( trim(both p.cd_tipo_anestesia) = '2' OR trim(both p.cd_tipo_anestesia) = '3' ) THEN 'x' ELSE ' ' END AS type_spinal,
        CASE WHEN p.ie_cervical_tear='Y' THEN  'x'  ELSE ' ' END  AS type_zervixriss,
        CASE WHEN p.ie_perineal = '1' OR p.ie_perineal = '2' THEN 'x' ELSE ' ' END AS dr_I_II,
        CASE WHEN p.ie_perineal = '3' OR p.ie_perineal = '4' THEN 'x' ELSE ' ' END AS dr_III_IV,
        CASE WHEN p.cd_episiotomy = '1' OR p.cd_episiotomy = '2' THEN 'x' ELSE ' ' END AS type_episiotomie,
        CASE WHEN upper(n.ie_sexo) = 'F' THEN 'x' ELSE ' ' END AS sexo_f,
        CASE WHEN upper(n.ie_sexo) = 'M' THEN 'x' ELSE ' ' END AS sexo_m,
        n.qt_peso AS qt_peso,
        n.qt_altura AS qt_altura,
        n.qt_pc AS qt_pc,
        CASE WHEN upper(n.ie_mascara) = 'S' THEN 'x' ELSE ' ' END AS ie_mascara,
        CASE WHEN upper(n.ie_entubacao) = 'S' THEN 'x' ELSE ' ' END AS ie_entubacao,
        CASE WHEN upper(n.ie_massag_cardiaca) = 'S' THEN 'x' ELSE ' ' END AS ie_massag_cardiaca,
        n.cd_arterial_ph            AS arterial_ph,
        n.cd_arterial_base_excess   AS arterial_be,
        CASE WHEN upper(n.ie_cateterismo) = 'S' THEN 'x' ELSE ' ' END AS ie_cateterismo,
        CASE WHEN upper(n.ie_icterica) = 'S' THEN 'x' ELSE ' ' END AS ie_icterica,
        CASE WHEN upper(n.ie_pressao_positiva) = 'S' THEN 'x' ELSE ' ' END AS ie_pressao_positiva,
        CASE WHEN n.ie_malformacao IS NOT NULL THEN 'x' ELSE ' ' END AS ie_malformacao,
        obter_valor_dominio(6110, upper(trim(both n.ie_malformacao))) AS ie_malformacao_desc,
        CASE WHEN n.ie_destino IS NOT NULL THEN 'x' ELSE ' ' END AS ie_destino_check,
        obter_valor_dominio(1066, upper(trim(both n.ie_destino))) AS ie_destino,
        CASE WHEN upper(coalesce(pe.ie_cianose, 'N')) <> 'N' THEN 'x' ELSE ' ' END AS ie_cianose,
        CASE WHEN upper(coalesce(pe.ie_palido, 'N')) <> 'N' THEN 'x' ELSE ' ' END AS ie_palido,
        CASE WHEN upper(coalesce(pe.ie_asfixia_intrauterina, 'N')) <> 'N' THEN 'x' ELSE  ' ' END AS ie_asfixia_intrauterina,
        CASE WHEN upper(coalesce(pe.ie_asfixia_neonatal, 'N')) <> 'N' THEN 'x' ELSE ' ' END AS ie_asfixia_neonatal,
        CASE WHEN upper(coalesce(pe.ie_choque, 'N')) <> 'N' THEN 'x' ELSE ' ' END AS ie_choque,
        CASE WHEN upper(coalesce(pe.ie_dist_respiratorio, 'N')) <> 'N' THEN 'x' ELSE ' ' END AS ie_dist_respiratorio,
        CASE WHEN upper(coalesce(n.ie_controle_recomendado, 'N')) <> 'N' THEN 'x' ELSE ' ' END AS ie_controle_recomendado,
        CASE WHEN n.ds_transporte_terapia IS NOT NULL THEN 'x' ELSE ' ' END AS ds_transporte_terapia_check,
        n.ds_transporte_terapia AS ds_transporte_terapia,
        n.nr_sequencia AS nr_sequencia,
        CASE WHEN upper(pe.ie_sangue_perdido) = 'N' THEN 'x' ELSE ' ' END AS ie_sangue_perdido_normal,
        CASE WHEN upper(pe.ie_sangue_perdido) = 'A' THEN 'x' ELSE ' ' END AS ie_sangue_perdido_acima,
        CASE WHEN upper(pe.ie_sangue_perdido) = 'R' THEN 'x' ELSE ' ' END AS ie_sangue_perdido_ruptura,
        obter_dados_escala_apgar('FQ', p.nr_atendimento, n.nr_sequencia, 1) AS escala_fq_1,
        obter_dados_escala_apgar('FQ', p.nr_atendimento, n.nr_sequencia, 5) AS escala_fq_5,
        obter_dados_escala_apgar('FQ', p.nr_atendimento, n.nr_sequencia, 10) AS escala_fq_10,
        obter_dados_escala_apgar('CO', p.nr_atendimento, n.nr_sequencia, 1) AS escala_co_1,
        obter_dados_escala_apgar('CO', p.nr_atendimento, n.nr_sequencia, 5) AS escala_co_5,
        obter_dados_escala_apgar('CO', p.nr_atendimento, n.nr_sequencia, 10) AS escala_co_10,
        obter_dados_escala_apgar('TM', p.nr_atendimento, n.nr_sequencia, 1) AS escala_tm_1,
        obter_dados_escala_apgar('TM', p.nr_atendimento, n.nr_sequencia, 5) AS escala_tm_5,
        obter_dados_escala_apgar('TM', p.nr_atendimento, n.nr_sequencia, 10) AS escala_tm_10,
        obter_dados_escala_apgar('IR', p.nr_atendimento, n.nr_sequencia, 1) AS escala_ir_1,
        obter_dados_escala_apgar('IR', p.nr_atendimento, n.nr_sequencia, 5) AS escala_ir_5,
        obter_dados_escala_apgar('IR', p.nr_atendimento, n.nr_sequencia, 10) AS escala_ir_10,
        obter_dados_escala_apgar('ES', p.nr_atendimento, n.nr_sequencia, 1) AS escala_es_1,
        obter_dados_escala_apgar('ES', p.nr_atendimento, n.nr_sequencia, 5) AS escala_es_5,
        obter_dados_escala_apgar('ES', p.nr_atendimento, n.nr_sequencia, 10) AS escala_es_10,
        obter_dados_escala_apgar('TT', p.nr_atendimento, n.nr_sequencia, 1) AS escala_tt_1,
        obter_dados_escala_apgar('TT', p.nr_atendimento, n.nr_sequencia, 5) AS escala_tt_5,
        obter_dados_escala_apgar('TT', p.nr_atendimento, n.nr_sequencia, 10) AS escala_tt_10,
        person_name_of_fml(pf.nr_seq_person_name, 'FN') AS baby_name,
        n.nr_atend_rn AS baby_atendimento
    FROM
        parto           p
        INNER JOIN nascimento     n  ON n.nr_atendimento = p.nr_atendimento
        LEFT JOIN parto_eventos   pe ON pe.nr_atendimento = p.nr_atendimento
        LEFT JOIN pessoa_fisica   pf ON pf.cd_pessoa_fisica = n.cd_pessoa_rn
    WHERE
        n.dt_inativacao IS NULL
    ORDER BY
        to_char(n.dt_nascimento, 'DD/MM/YYYY HH:MI:SS');

