-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW sus_interf_aih_iscmpoa_v (ds_registro, tp_registro, nr_lote, nr_seq_laudo, nr_identificacao, cd_cgc, nr_laudos, ie_tipo_laudo, nr_laudo, nm_paciente, ie_sexo, dt_nascimento, nr_prontuario, ds_endereco, ds_numero, ds_complemento, ds_bairro, cd_municipio, ds_uf, nr_cep, dt_internacao, dt_alta, ie_tipo_alta, nr_cpf_solic, cd_procedimento_solic, cd_carater_internacao, ie_clinica, nr_cartao_sus, ie_motivo_cobranca, nr_aih, nr_sequencia, ie_tipo_aih, nr_gestante_prenatal, dt_apresentacao, nr_cerih, cd_cid_principal, nr_cpf, nr_cmce, nr_cnrac, nr_cns_sol, cd_proced_solic, qt_procedimento, dt_competencia, nr_serie, nr_atendimento, nr_interno_conta, qt_solic) AS select	'Cabecalho' ds_registro,
	1 tp_registro,
	c.nr_sequencia  nr_lote,
	0 nr_seq_laudo,
	d.cd_prestador_laudo_ach nr_identificacao,
	substr(obter_cgc_estabelecimento(c.cd_estabelecimento),1,14) cd_cgc,
	adiciona_zeros_esquerda((	select 	count(*)
				FROM 	sus_laudo_paciente x
				where 	x.nr_seq_lote = c.nr_sequencia),4) nr_laudos,
	'' ie_tipo_laudo,
	null nr_laudo,
	null nm_paciente,
	null ie_sexo,
	null dt_nascimento,
	null nr_prontuario,
	null ds_endereco,
	null ds_numero,
	null ds_complemento,
	null ds_bairro,
	null cd_municipio,
	null ds_uf,
	null nr_cep,
	null dt_internacao,
	null dt_alta,
	null ie_tipo_alta,
	null nr_cpf_solic,
	null cd_procedimento_solic,
	null cd_carater_internacao,
	null ie_clinica,
	null nr_cartao_sus,
	null ie_motivo_cobranca,
	null nr_aih,
	null nr_sequencia,
	null ie_tipo_aih,
	null nr_gestante_prenatal,
	null dt_apresentacao,
	' ' nr_cerih,
	null cd_cid_principal,
	null nr_cpf,
	' ' nr_cmce,
	' ' nr_cnrac,
	' ' nr_cns_sol,
	null cd_proced_solic,
	null qt_procedimento,
	' ' dt_competencia,
	' ' nr_serie,
	null nr_atendimento,
	null nr_interno_conta,
	null qt_solic
from   	sus_parametros_aih d,
	sus_lote_autor c,
   	sus_laudo_paciente a,
   	atendimento_paciente b
where	a.nr_atendimento = b.nr_atendimento
and	c.nr_sequencia  =  a.nr_seq_lote
and	c.cd_estabelecimento = d.cd_estabelecimento

union

select	'Principal' ds_registro,
	2 tp_registro,
	e.nr_sequencia  nr_lote,
	coalesce(c.nr_ordem_laudo,c.nr_laudo_sus) nr_seq_laudo,
	'' nr_identificacao,
	null cd_cgc,
	null nr_laudos,
	'0' ie_tipo_laudo,
	substr(sus_obter_dados_laudo_ach(c.nr_interno_conta,0,'NRL'),1,13) nr_laudo,
	substr(upper(a.nm_pessoa_fisica),1,50) nm_paciente,
	upper(a.ie_sexo) ie_sexo,
	substr(obter_dados_pf(a.cd_pessoa_fisica,'DN'),1,10) dt_nascimento,
	obter_prontuario_paciente(a.cd_pessoa_fisica) nr_prontuario,
	upper(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'EN'),1,47)) ds_endereco,
	lpad(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'NR'),1,7),7,0) ds_numero,
	upper(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CO'),1,20)) ds_complemento,
	upper(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'B'),1,20)) ds_bairro,
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CDM')||Calcula_Digito('MODULO10',obter_compl_pf(a.cd_pessoa_fisica,1,'CDM')),1,7) cd_municipio,
	upper(substr(obter_compl_pf(a.cd_pessoa_fisica,1,'UF'),1,2)) ds_uf,
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CEP'),1,8) nr_cep,
	coalesce(f.dt_periodo_inicial,b.dt_entrada) dt_internacao,
	coalesce(f.dt_periodo_final,b.dt_alta) dt_alta,
	coalesce(Obter_Conversao_Externa(obter_cgc_convenio(f.cd_convenio_parametro),'SUS_INTERF_AIH_ISCMPOA_V','CD_MOTIVO_COBRANCA',sus_obter_motiv_cobr_conta(c.nr_interno_conta)), Obter_Conversao_Externa(obter_cgc_convenio(f.cd_convenio_parametro),'SUS_INTERF_AIH_ISCMPOA_V','CD_MOTIVO_ALTA',b.cd_motivo_alta)) ie_tipo_alta,
	lpad('0',11,'0') nr_cpf_solic,
	c.cd_procedimento_solic,
	b.ie_carater_inter_sus cd_carater_internacao,
	CASE WHEN obter_clinica_conta(c.nr_interno_conta,'C')=1 THEN '3' WHEN obter_clinica_conta(c.nr_interno_conta,'C')=2 THEN '1' WHEN obter_clinica_conta(c.nr_interno_conta,'C')=3 THEN '2' WHEN obter_clinica_conta(c.nr_interno_conta,'C')=4 THEN '7'  ELSE '9' END  ie_clinica,
	substr(obter_dados_pf(a.cd_pessoa_fisica,'CNS'),1,17) nr_cartao_sus,
	coalesce(substr(coalesce(sus_obter_motiv_cobr_conta(c.nr_interno_conta),Obter_Motivo_Alta_sus(b.nr_atendimento)),1,2),'00') ie_motivo_cobranca,	
	lpad(c.nr_aih,13,0) nr_aih,
	c.nr_seq_aih nr_sequencia,
	CASE WHEN c.ie_tipo_laudo_sus=11 THEN '5'  ELSE '0' END  ie_tipo_aih,
	coalesce(sus_obter_dados_aih_conta(c.nr_interno_conta,'PN'),0) nr_gestante_prenatal,
	LOCALTIMESTAMP dt_apresentacao,
	lpad(coalesce(sus_obter_dados_aih_conta(c.nr_interno_conta,'CH'),'0'),15,'0') nr_cerih,
	lpad(c.cd_cid_principal,4,' ') cd_cid_principal,
	substr(obter_dados_pf(a.cd_pessoa_fisica,'CPF'),1,11) nr_cpf,
	lpad(substr(sus_obter_dados_aih_conta(c.nr_interno_conta,'NC'),1,12),12,0) nr_cmce,
	lpad('',13,0) nr_cnrac,
	substr(obter_dados_pf(c.cd_medico_requisitante,'CNS'),1,15) nr_cns_sol,
	null cd_proced_solic,
	null qt_procedimento,
	' ' dt_competencia,
	' ' nr_serie,
	c.nr_atendimento,
	c.nr_interno_conta,
	coalesce(obter_qt_proc_conta_sus(c.nr_interno_conta, c.cd_procedimento_solic, 7, c.dt_emissao),1) qt_solic
FROM sus_lote_autor e, sus_parametros_aih d, atendimento_paciente b, pessoa_fisica a, sus_laudo_paciente c
LEFT OUTER JOIN conta_paciente f ON (c.nr_interno_conta = f.nr_interno_conta)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica and b.nr_atendimento = c.nr_atendimento and e.nr_sequencia = c.nr_seq_lote and e.cd_estabelecimento = d.cd_estabelecimento  and c.ie_tipo_laudo_sus not in (1,2,15)
 
union

select	'Suplementar' ds_registro,
	3 tp_registro,
	c.nr_sequencia  nr_lote,
	coalesce(a.nr_ordem_laudo,a.nr_laudo_sus) nr_seq_laudo, 
	'' nr_identificacao,
	null cd_cgc,
	null nr_laudos,
	CASE WHEN Sus_Validar_Regra(4,a.cd_procedimento_solic,a.ie_origem_proced,a.dt_emissao)=0 THEN CASE WHEN a.ie_tipo_laudo_sus=1 THEN '3' WHEN a.ie_tipo_laudo_sus=2 THEN '4' END   ELSE '5' END  ie_tipo_laudo,
	substr(sus_obter_dados_laudo_ach(a.nr_interno_conta,0,'NRL'),1,13) nr_laudo,
	null nm_paciente,
	null ie_sexo,
	null dt_nascimento,
	null nr_prontuario,
	null ds_endereco,
	null ds_numero,
	null ds_complemento,
	null ds_bairro,
	null cd_municipio,
	null ds_uf,
	null nr_cep,
	null dt_internacao,
	null dt_alta,
	null ie_tipo_alta,
	null nr_cpf_solic,
	null cd_procedimento_solic,
	null cd_carater_internacao,
	null ie_clinica,
	null nr_cartao_sus,
	null ie_motivo_cobranca,
	null nr_aih,
	null nr_sequencia,
	null ie_tipo_aih,
	null nr_gestante_prenatal,
	null dt_apresentacao,
	' ' nr_cerih,
	null cd_cid_principal,
	null nr_cpf,
	' ' nr_cmce,
	' ' nr_cnrac,
	' ' nr_cns_sol,
	a.cd_procedimento_solic cd_proced_solic,
	coalesce(obter_qt_proc_conta_sus(a.nr_interno_conta, a.cd_procedimento_solic, 7, a.dt_emissao),1) qt_procedimento,
	substr(to_char(a.dt_emissao,'ddmmyyyy'),3,6) dt_competencia,
	' ' nr_serie,
	a.nr_atendimento,
	a.nr_interno_conta,
	null qt_solic
from   	sus_parametros_aih d,
	sus_lote_autor	c,
   	atendimento_paciente b,
   	sus_laudo_paciente a
where	a.nr_atendimento = b.nr_atendimento
and	c.nr_sequencia =  a.nr_seq_lote
and	c.cd_estabelecimento = d.cd_estabelecimento
and	a.ie_tipo_laudo_sus in (1,2)
and	sus_validar_regra(11,a.cd_procedimento_solic,a.ie_origem_proced,a.dt_emissao) = 0

union

select	'Suplementar' ds_registro,
	3 tp_registro,
	c.nr_sequencia  nr_lote,
	coalesce(a.nr_ordem_laudo,a.nr_laudo_sus) nr_seq_laudo, 
	'' nr_identificacao,
	null cd_cgc,
	null nr_laudos,
	'2' ie_tipo_laudo,
	substr(sus_obter_dados_laudo_ach(a.nr_interno_conta,0,'NRL'),1,13) nr_laudo,
	null nm_paciente,
	null ie_sexo,
	null dt_nascimento,
	null nr_prontuario,
	null ds_endereco,
	null ds_numero,
	null ds_complemento,
	null ds_bairro,
	null cd_municipio,
	null ds_uf,
	null nr_cep,
	null dt_internacao,
	null dt_alta,
	null ie_tipo_alta,
	null nr_cpf_solic,
	null cd_procedimento_solic,
	null cd_carater_internacao,
	null ie_clinica,
	null nr_cartao_sus,
	null ie_motivo_cobranca,
	null nr_aih,
	null nr_sequencia,
	null ie_tipo_aih,
	null nr_gestante_prenatal,
	null dt_apresentacao,
	' ' nr_cerih,
	null cd_cid_principal,
	null nr_cpf,
	' ' nr_cmce,
	' ' nr_cnrac,
	' ' nr_cns_sol,
	e.cd_procedimento cd_proced_solic,
	e.qt_procedimento qt_procedimento,
	substr(sus_obter_dados_laudo_ach(a.nr_interno_conta,0,'DTE'),3,6) dt_competencia,
	' ' nr_serie,
	a.nr_atendimento,
	a.nr_interno_conta,
	null qt_solic
from   	procedimento_paciente e,
	sus_parametros_aih d,
	sus_lote_autor	c,
   	atendimento_paciente b,
   	sus_laudo_paciente a
where	a.nr_atendimento = b.nr_atendimento
and	c.nr_sequencia = a.nr_seq_lote
and	c.cd_estabelecimento = d.cd_estabelecimento
and	a.nr_interno_conta = e.nr_interno_conta
and	sus_obter_tiporeg_proc(e.cd_procedimento,e.ie_origem_proced,'C',13) = 3
and	sus_validar_regra(11,a.cd_procedimento_solic,a.ie_origem_proced,a.dt_emissao) > 0;

