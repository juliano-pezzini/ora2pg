-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW cobranca_escrit_itau_400_v (tp_registro, nr_seq_envio, nr_conta, nm_empresa, cd_agencia, nr_dac, dt_gravacao, nr_inscricao, cd_agencia_bancaria, cd_conta_corrente, cd_dac, nr_titulo, nr_carteira, nr_nosso_numero, cd_ocorrencia, nr_documento, dt_vencimento, vl_titulo, cd_agencia_cobranca, dt_emissao, ds_instrucao1, dt_limite_desconto, vl_desconto, vl_abatimento, vl_iof, vl_juros_atraso, cd_inscricao_sacado, nr_inscricao_sacado, nm_sacado, ds_logradouro, ds_bairro, ds_cidade, sg_uf, nr_cep, nm_sacador_avalista, dt_mora, qt_dias_prazo, cd_instrucao, ds_instrucao2) AS SELECT	0 				tp_registro,
	a.nr_sequencia			nr_seq_envio, 
	(SELECT	somente_numero(x.cd_conta) 
	FROM	BANCO_ESTABELECIMENTO x 
	WHERE	x.nr_sequencia	= a.nr_seq_conta_banco)	nr_conta, 
	UPPER(elimina_acentuacao(SUBSTR(obter_nome_pf_pj(NULL, b.cd_cgc),1,30))) nm_empresa, 
	(SELECT	somente_numero(x.cd_agencia_bancaria) 
	FROM	BANCO_ESTABELECIMENTO x 
	WHERE	x.nr_sequencia	= a.nr_seq_conta_banco)	cd_agencia, 
	(SELECT	somente_numero(x.ie_digito_conta) 
	FROM	BANCO_ESTABELECIMENTO x 
	WHERE	x.nr_sequencia	= a.nr_seq_conta_banco)	nr_dac, 
	a.dt_remessa_retorno		dt_gravacao, 
	0				nr_inscricao, 
	0				cd_agencia_bancaria, 
	0				cd_conta_corrente, 
	0				cd_dac, 
	0				nr_titulo, 
	0				nr_carteira, 
	0				nr_nosso_numero, 
	0				cd_ocorrencia, 
	0				nr_documento, 
	LOCALTIMESTAMP				dt_vencimento, 
	0				vl_titulo, 
	0				cd_agencia_cobranca, 
	LOCALTIMESTAMP				dt_emissao, 
	0				ds_instrucao1, 
	LOCALTIMESTAMP				dt_limite_desconto, 
	0				vl_desconto, 
	0				vl_abatimento, 
	0				vl_iof, 
	0				vl_juros_atraso, 
	0				cd_inscricao_sacado, 
	0				nr_inscricao_sacado, 
	' '				nm_sacado, 
	' '				ds_logradouro, 
	' '				ds_bairro, 
	' '				ds_cidade, 
	' '				sg_uf, 
	' '				nr_cep, 
	' '				nm_sacador_avalista, 
	LOCALTIMESTAMP				dt_mora, 
	0				qt_dias_prazo, 
	''	cd_instrucao, 
	''	ds_instrucao2 
FROM	ESTABELECIMENTO b, 
	COBRANCA_ESCRITURAL a 
WHERE	a.cd_estabelecimento	= b.cd_estabelecimento 

UNION ALL
 
SELECT	1				tp_registro, 
	a.nr_sequencia			nr_seq_envio, 
	0				nr_conta, 
	' '				nm_empresa, 
	0				cd_agencia, 
	0				nr_dac, 
	LOCALTIMESTAMP				dt_gravacao, 
	somente_numero(d.cd_cgc)	nr_inscricao, 
	(SELECT	somente_numero(x.cd_agencia_bancaria) 
	FROM	BANCO_ESTABELECIMENTO x 
	WHERE	x.nr_sequencia	= a.nr_seq_conta_banco)	cd_agencia_bancaria, 
	(SELECT	somente_numero(x.cd_conta) 
	FROM	BANCO_ESTABELECIMENTO x 
	WHERE	x.nr_sequencia	= a.nr_seq_conta_banco) cd_conta_corrente, 
	(SELECT	somente_numero(x.ie_digito_conta) 
	FROM	BANCO_ESTABELECIMENTO x 
	WHERE	x.nr_sequencia	= a.nr_seq_conta_banco) cd_dac, 
	b.nr_titulo			nr_titulo, 
	somente_numero(e.cd_carteira)	nr_carteira, 
	somente_numero(b.nr_documento) nr_nosso_numero, 
	somente_numero(coalesce(c.cd_ocorrencia,'1')) cd_ocorrencia, 
	coalesce(CASE WHEN coalesce(somente_numero(b.nr_nota_fiscal),0)=0 THEN (obter_dados_titulo_receber(b.nr_titulo,'NF'))::numeric   ELSE somente_numero(b.nr_nota_fiscal) END ,b.nr_seq_protocolo) nr_documento, 
	coalesce(b.dt_pagamento_previsto, b.dt_vencimento) dt_vencimento, 
	coalesce(b.vl_saldo_titulo,0)		vl_titulo, 
	somente_numero(b.cd_agencia_bancaria) cd_agencia_cobranca, 
	b.dt_emissao			dt_emissao, 
	somente_numero(c.cd_instrucao) ds_instrucao1, 
	LOCALTIMESTAMP				dt_limite_desconto, 
	coalesce(c.vl_desconto,0)		vl_desconto, 
	0				vl_abatimento, 
	0				vl_iof, 
	coalesce(b.vl_saldo_juros,0)		vl_juros_atraso, 
	CASE WHEN b.cd_cgc IS NULL THEN  1  ELSE 2 END 	cd_inscricao_sacado, 
	somente_numero(b.cd_cgc_cpf)	nr_inscricao_sacado, 
	SUBSTR(UPPER(elimina_acentuacao(b.nm_pessoa)),1,30) nm_sacado, 
	SUBSTR(UPPER(elimina_acentuacao(obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc,'E'))),1,50) ds_logradouro, 
	SUBSTR(UPPER(elimina_acentuacao(obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc,'B'))),1,40) ds_bairro, 
	SUBSTR(UPPER(elimina_acentuacao(obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc,'CI'))),1,50) ds_cidade, 
	SUBSTR(UPPER(elimina_acentuacao(obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc,'UF'))),1,2) sg_uf, 
	SUBSTR(UPPER(elimina_acentuacao(obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc,'CEP'))),1,50) nr_cep, 
	' '				nm_sacador_avalista, 
	coalesce(b.dt_pagamento_previsto, b.dt_vencimento) dt_mora, 
	coalesce(c.qt_dias_instrucao,0)	qt_dias_prazo, 
	' ' cd_instrucao, 
	' ' ds_instrucao2 
FROM estabelecimento d, titulo_receber_cobr c, cobranca_escritural a, titulo_receber_v b
LEFT OUTER JOIN banco_carteira e ON (b.nr_seq_carteira_cobr = e.nr_sequencia)
WHERE a.nr_sequencia		= c.nr_seq_cobranca AND c.nr_titulo		= b.nr_titulo AND d.cd_estabelecimento	= a.cd_estabelecimento  
UNION ALL
 
SELECT	9				tp_registro, 
	a.nr_sequencia			nr_seq_envio, 
	0				nr_conta, 
	' '				nm_empresa, 
	0				cd_agencia, 
	0				nr_dac, 
	LOCALTIMESTAMP				dt_gravacao, 
	0				nr_inscricao, 
	0				cd_agencia_bancaria, 
	0				cd_conta_corrente, 
	0				cd_dac, 
	0				nr_titulo, 
	0				nr_carteira, 
	0				nr_nosso_numero, 
	0				cd_ocorrencia, 
	0				nr_documento, 
	LOCALTIMESTAMP				dt_vencimento, 
	0				vl_titulo, 
	0				cd_agencia_cobranca, 
	LOCALTIMESTAMP				dt_emissao, 
	0				ds_instrucao1, 
	LOCALTIMESTAMP				dt_limite_desconto, 
	0				vl_desconto, 
	0				vl_abatimento, 
	0				vl_iof, 
	0				vl_juros_atraso, 
	0				cd_inscricao_sacado, 
	0				nr_inscricao_sacado, 
	' '				nm_sacado, 
	' '				ds_logradouro, 
	' '				ds_bairro, 
	' '				ds_cidade, 
	' '				sg_uf, 
	' '				nr_cep, 
	' '				nm_sacador_avalista, 
	LOCALTIMESTAMP				dt_mora, 
	0				qt_dias_prazo, 
	''	cd_instrucao, 
	''	ds_instrucao2 
FROM	COBRANCA_ESCRITURAL a;

