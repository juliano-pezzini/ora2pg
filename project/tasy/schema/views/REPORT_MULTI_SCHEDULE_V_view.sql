-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW report_multi_schedule_v (hr_inicio, dt_agenda, ds_status_agenda, nm_paciente, nm_medico_req, nr_minuto_duracao, ds_classificacao, ie_encaixe_p, ie_status_agenda_p, cd_sexo_paciente_p, ie_paciente_isolado_p, ie_emergency_response_p, dt_today_p, ie_delay_check_p, cd_delaying_time_p, ie_urgencia_cpoe_p, ie_status_laudo_p, nm_usuario_acesso_p, ie_agendamento_grupo_p, ds_vazio, ie_patient_allergic_p, nm_usuario, cd_agenda, ds_agenda) AS SELECT
  to_char(AP.hr_inicio,'hh24:mi') hr_inicio,
  AP.dt_agenda,
  CASE WHEN AP.dt_confirmacao IS NULL THEN  substr(obter_valor_dominio(83, AP.ie_status_agenda),1,200)  ELSE substr(obter_valor_dominio(83, 'CN'),1,200) END  ds_status_agenda,
  coalesce(
        (SELECT nm_pessoa_fisica
          FROM TABLE(
              search_names_dev
              (NULL, NULL,
                (
                  SELECT MAX(pf.nr_seq_person_name)
                  FROM pessoa_fisica pf
                  WHERE pf.cd_pessoa_fisica = coalesce(AP.cd_pessoa_fisica,
                      (SELECT MAX(b.cd_pessoa_fisica)
                        FROM agenda_integrada b, agenda_integrada_item C
                        WHERE C.nr_seq_agenda_int = b.nr_sequencia
                        AND C.nr_seq_agenda_cons = AP.nr_sequencia
                      )
                    )
                ), 'list', 'social,main'
              )
            )
        ), coalesce(obter_nome_pf(AP.cd_pessoa_fisica), AP.nm_paciente)) nm_paciente,
  obter_nome_pf_pj(AP.cd_medico_req, NULL) nm_medico_req,
  CASE WHEN AP.nr_minuto_duracao=0 THEN  30  ELSE AP.nr_minuto_duracao END  nr_minuto_duracao,
  obter_dados_item_ageint(NULL, AP.nr_sequencia, NULL, 'C') ds_classificacao,
  AP.ie_encaixe ie_encaixe_p,
  AP.ie_status_agenda ie_status_agenda_p,
  Obter_Sexo_PF(AP.cd_pessoa_fisica, 'C') cd_sexo_paciente_p,
  ATEND.ie_paciente_isolado ie_paciente_isolado_p,
  AUX.ie_emergency_response_required ie_emergency_response_p,
  case when trunc(AP.dt_agenda)=trunc(LOCALTIMESTAMP)
    then 'S'
    else 'N' end dt_today_p,
  case when AP.ie_status_agenda = 'O' AND obter_status_laudo_agenda(AP.nr_sequencia, AP.nr_atendimento) = 'N' AND trunc(AP.dt_agenda) = trunc(LOCALTIMESTAMP)
    THEN 'S'
    ELSE 'N' END ie_delay_check_p,
  CASE WHEN trunc(AP.dt_agenda) = trunc(LOCALTIMESTAMP)
    THEN CASE WHEN AP.nr_minuto_duracao=0 THEN  101  ELSE round((((LOCALTIMESTAMP - AP.hr_inicio) * 1440) * 100) / AP.nr_minuto_duracao) END
    ELSE 0 END cd_delaying_time_p,
  CASE WHEN(AP.nr_atendimento > 0 AND AP.nr_seq_proc_interno > 0)
    THEN (SELECT max(cp.ie_urgencia) FROM cpoe_procedimento cp WHERE cp.nr_atendimento = AP.nr_atendimento AND cp.nr_seq_proc_interno = AP.nr_seq_proc_interno AND cp.nr_seq_agenda = AP.nr_sequencia)
    ELSE null END ie_urgencia_cpoe_p,
  obter_status_laudo_agenda(AP.nr_sequencia, ap.nr_atendimento)  ie_status_laudo_p,
  Ageint_Obter_Dados_Agendamento(AP.nr_sequencia, AP.cd_agenda, 'UA') nm_usuario_acesso_p,
  (select CASE WHEN count(nr_sequencia)='0' THEN 'N'  ELSE 'S' END  nr_sequencia from agenda_horario ah where ah.nr_sequencia = ap.nr_sequencia) ie_agendamento_grupo_p,
  '' ds_vazio,
  obter_se_pac_alerta_alergia(AP.cd_pessoa_fisica) ie_patient_allergic_p,
  AP.nm_usuario,
  AP.cd_agenda,
  concat(agenda.ds_agenda, ' (' || substr(Obter_Valor_Dominio(34, agenda.cd_tipo_agenda),1,60) || ')') ds_agenda
FROM agenda_paciente AP
  JOIN agenda on AP.cd_agenda = agenda.cd_agenda
  LEFT JOIN agenda_paciente_auxiliar AUX on AP.nr_sequencia = AUX.nr_seq_agenda
  LEFT JOIN atendimento_paciente ATEND on AP.nr_atendimento = ATEND.nr_atendimento
WHERE agenda.cd_tipo_agenda = 2

UNION ALL

SELECT
  to_char(AP.dt_agenda,'hh24:mi') hr_inicio,
  AP.dt_agenda,
  CASE WHEN AP.dt_confirmacao IS NULL THEN  substr(obter_valor_dominio(83, AP.ie_status_agenda),1,200)  ELSE substr(obter_valor_dominio(83, 'CN'),1,200) END  ds_status_agenda,
  coalesce(
        (SELECT nm_pessoa_fisica
          FROM TABLE(
              search_names_dev
              (NULL, NULL,
                (
                  SELECT MAX(pf.nr_seq_person_name)
                  FROM pessoa_fisica pf
                  WHERE pf.cd_pessoa_fisica = coalesce(AP.cd_pessoa_fisica,
                      (SELECT MAX(b.cd_pessoa_fisica)
                        FROM agenda_integrada b, agenda_integrada_item C
                        WHERE C.nr_seq_agenda_int = b.nr_sequencia
                        AND C.nr_seq_agenda_cons = AP.nr_sequencia
                      )
                    )
                ), 'list', 'social,main'
              )
            )
        ), coalesce(obter_nome_pf(AP.cd_pessoa_fisica), AP.nm_paciente)) nm_paciente,
  obter_nome_pf_pj(AP.cd_medico_req, NULL) nm_medico_req,
  CASE WHEN AP.nr_minuto_duracao=0 THEN  30  ELSE AP.nr_minuto_duracao END  nr_minuto_duracao,
  obter_dados_item_ageint(NULL, AP.nr_sequencia, NULL, 'C') ds_classificacao,
  AP.ie_encaixe ie_encaixe_p,
  AP.ie_status_agenda ie_status_agenda_p,
  Obter_Sexo_PF(AP.cd_pessoa_fisica, 'C') cd_sexo_paciente_p,
  ATEND.ie_paciente_isolado ie_paciente_isolado_p,
  null ie_emergency_response_p,
  case when trunc(AP.dt_agenda)=trunc(LOCALTIMESTAMP)
    then 'S'
    else 'N' end dt_today_p,
  case when AP.ie_status_agenda = 'O' AND obter_status_laudo_agenda(AP.nr_sequencia, AP.nr_atendimento) = 'N' AND trunc(AP.dt_agenda) = trunc(LOCALTIMESTAMP)
    THEN 'S'
    ELSE 'N' END ie_delay_check_p,
  CASE WHEN trunc(AP.dt_agenda) = trunc(LOCALTIMESTAMP)
    THEN CASE WHEN AP.nr_minuto_duracao=0 THEN  101  ELSE round((((LOCALTIMESTAMP - AP.dt_agenda) * 1440) * 100) / AP.nr_minuto_duracao) END 
    ELSE 0 END cd_delaying_time_p,
  CASE WHEN(AP.nr_atendimento > 0 AND AP.nr_seq_proc_interno > 0)
    THEN (SELECT max(cp.ie_urgencia) FROM cpoe_procedimento cp WHERE cp.nr_atendimento = AP.nr_atendimento AND cp.nr_seq_proc_interno = AP.nr_seq_proc_interno AND cp.nr_seq_agenda = AP.nr_sequencia)
    ELSE null END ie_urgencia_cpoe_p,
  obter_status_laudo_agenda(AP.nr_sequencia, ap.nr_atendimento)  ie_status_laudo_p,
  Ageint_Obter_Dados_Agendamento(AP.nr_sequencia, AP.cd_agenda, 'UA') nm_usuario_acesso_p,
  (select CASE WHEN count(nr_sequencia)='0' THEN 'N'  ELSE 'S' END  nr_sequencia from agenda_horario ah where ah.nr_sequencia = ap.nr_sequencia) ie_agendamento_grupo_p,
  '' ds_vazio,
  obter_se_pac_alerta_alergia(AP.cd_pessoa_fisica) ie_patient_allergic_p,
  AP.nm_usuario,
  AP.cd_agenda,
  concat(agenda.ds_agenda, ' (' || substr(Obter_Valor_Dominio(34, agenda.cd_tipo_agenda),1,60) || ')') ds_agenda
FROM agenda_consulta AP
  JOIN agenda on AP.cd_agenda = agenda.cd_agenda
  LEFT JOIN atendimento_paciente ATEND on AP.nr_atendimento = ATEND.nr_atendimento
WHERE agenda.cd_tipo_agenda = 3;

