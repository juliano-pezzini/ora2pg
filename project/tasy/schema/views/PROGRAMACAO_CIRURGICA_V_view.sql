-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW programacao_cirurgica_v (nm_medico_externo, ds_evento, ds_status_paciente, nm_paciente1, nm_paciente2, nm_profissional_cirurgia1, nm_profissional2, nm_profissional1, nm_anestesista3, nm_anestesista2, nm_anestesista1, nm_anestesista4, dt_entrada, ds_status_cirurgia, nm_paciente, nm_unidade, nm_unidade_atual, nm_cirurgiao, ds_lista_opme, ds_lista_equip, ds_lista_servico, ds_as, cd_convenio, ie_lado, cd_anestesista, cd_medico, cd_pessoa_fisica, nr_atendimento, hr_revisada, ds_sala_cir, nr_sequencia, dt_agenda, hr_inicio, nr_seq_sala_cir, ie_carater_cirurgia, hr_agenda, nm_agenda, qt_idade_paciente, qt_idade_mes, ds_observacao, dt_chegada, dt_paciente_aguardo, dt_chegada_fim, dt_paciente_termino, dt_analise, dt_chamada_pre_inducao, dt_sala_recuperacao, dt_alta_cc, dt_referencia, hr_horario_efetivo, dt_saida_paciente_cc, cd_agenda, ds_inf_painel, cd_setor_exclusivo, cd_estabelecimento, ie_status_agenda, nr_cirurgia, nr_seq_pepo, cd_turno, ie_reserva_leito, cd_pessoa_chamada_setor, cd_tipo_acomodacao, cd_tipo_anestesia, ie_anestesia, dt_visita_pre_anest, ds_atencao, ds_asa, im_pessoa_fisica, ds_classif_agenda, ds_grupo_proced, ds_cor_classif_agenda, nr_seq_proc_interno, ds_classificacao, ds_porte, ds_autorizacao_conv, nr_seq_tipo_classif_pac, qt_dias_nasc, dt_nascimento, nr_seq_status_painel, ds_inconsistencia, ds_status_painel, ds_cor_fonte_status, ds_cor_fundo_status, nm_usuario_busca, nm_usuario_exige_demarc, dt_busca, ie_necessita_demarcacao, ds_demarcacao_realizada, ie_origem_proced, cd_procedimento, nr_seq_cor, ds_tipo_nec_esp) AS SELECT
a.nm_medico_externo,
SUBSTR(Obter_evento_exibir_painel(a.nr_cirurgia,a.nr_seq_pepo),1,250) ds_evento,
substr(d.ds_status_paciente,1,100) ds_status_paciente,
 SUBSTR(abrevia_nome_pessoa(a.cd_pessoa_fisica),1,50) nm_paciente1,
 coalesce(SUBSTR(abrevia_nome_pf(a.cd_pessoa_fisica,'C'),1,30),SUBSTR(abrevia_nome(nm_paciente, NULL),1,50)) nm_paciente2,
 SUBSTR(Obter_Prof_Cirurgia_Func(nr_cirurgia, 'O'),1,255) nm_profissional_cirurgia1,
 SUBSTR(obter_profissionais_agenda_cir(a.nr_sequencia),1,255) nm_profissional2,
 SUBSTR(Obter_Prof_Agenda_Cir_Func(a.nr_sequencia, 'O'),1,255) nm_profissional1,
 obter_anestesista_cirurgia(nr_cirurgia,'D') nm_anestesista3,
 obter_nome_medico(cd_anestesista,'G') nm_anestesista2,
 coalesce(obter_apelido_agenda(a.nr_sequencia,cd_anestesista),obter_nome_medico(cd_anestesista,'G')) nm_anestesista1,
 SUBSTR(Obter_Prof_Agenda_Cir_Func(a.nr_sequencia, 'E'),1,255) nm_anestesista4,
 substr(to_char(e.dt_entrada, 'dd/mm/yyyy hh24:mi:ss'),1,30) dt_entrada,
 SUBSTR(obter_status_cirurgia(OBTER_STATUS_CIRUR_PACIENTE(nr_cirurgia)),1,200) ds_status_cirurgia,
 nm_paciente,
coalesce(SUBSTR(obter_unidade_atendimento(e.nr_atendimento,'IA','U'),1,30),SUBSTR(obter_unidade_atendimento(e.nr_atendimento,'A','U'),1,30)) nm_unidade,
SUBSTR(obter_unidade_atendimento(e.nr_atendimento,'A','SU'),1,50)  nm_unidade_atual,
SUBSTR(obter_nome_medico(a.cd_medico,'G'),1,50) nm_cirurgiao,
SUBSTR(obter_lista_opme_agenda(a.nr_sequencia),1,255) ds_lista_opme,
SUBSTR(obter_lista_equip_agenda(a.nr_sequencia),1,255) ds_lista_equip,
SUBSTR(obter_lista_servico_agenda(a.nr_sequencia),1,255) ds_lista_servico,
SUBSTR(obter_se_agenda_a_seguir(a.nr_sequencia),1,1) ds_as,
 a.cd_convenio,
 ie_lado,
 cd_anestesista,
 a.cd_medico,
 a.cd_pessoa_fisica,
 e.nr_atendimento,
 TO_CHAR(hr_revisada,'hh24:mi') hr_revisada,
 SUBSTR(ds_sala_painel,1,100) ds_sala_cir,
 a.nr_sequencia,dt_agenda,
 to_date(to_char(dt_agenda,'dd/mm/yyyy') || ' ' ||to_char(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') hr_inicio,
 a.nr_seq_sala_cir,
 ie_carater_cirurgia,
 TO_CHAR(hr_inicio,'hh24:mi') hr_agenda,
 SUBSTR(ds_agenda,1,30) nm_agenda,
 qt_idade_paciente,
 a.qt_idade_mes,
 SUBSTR(a.ds_observacao,1,255) ds_observacao,
 dt_chegada,
 dt_paciente_aguardo,
 dt_chegada_fim,
 dt_paciente_termino,
 dt_analise,
 dt_chamada_pre_inducao,
 dt_sala_recuperacao,
 dt_alta_cc,
 TRUNC(hr_inicio,'dd') dt_referencia,
 coalesce(hr_revisada, hr_inicio) hr_horario_efetivo,
 dt_saida_paciente_cc,
 a.cd_agenda,
 SUBSTR(ds_inf_painel,1,255) ds_inf_painel,
 b.cd_setor_exclusivo,
 b.cd_estabelecimento,
 ie_status_agenda,
 nr_cirurgia,
 nr_seq_pepo,
 a.cd_turno,
 a.ie_reserva_leito,
 a.cd_pessoa_chamada_setor,
 a.cd_tipo_acomodacao,
 a.cd_tipo_anestesia,    
 a.ie_anestesia,
 a.dt_visita_pre_anest,
 CASE WHEN a.ie_atencao IS NULL THEN ''  ELSE 'Sim' END  ds_atencao,
 SUBSTR(OBTER_VALOR_DOMINIO(1287,obter_dados_cirurgia(nr_cirurgia,'ASA')),1,155) ds_asa,
 g.im_pessoa_fisica,
 substr(obter_desc_classif_agenda_pac(a.nr_seq_classif_agenda),1,80) ds_classif_agenda,
 SUBSTR(OBTER_GRUPO_PROCEDIMENTO(a.cd_procedimento,a.ie_origem_proced,'D'),1,200) ds_grupo_proced,
 substr(obter_cor_classif_agepac(a.nr_seq_classif_agenda),1,80) ds_cor_classif_agenda,
 a.nr_seq_proc_interno nr_seq_proc_interno,
 SUBSTR(obter_desc_tipo_cirurgia(coalesce(obter_dados_cirurgia(a.nr_cirurgia,'PC'),obter_dados_proc_interno(a.nr_seq_proc_interno,'TC'))),1,100) ds_classificacao,
 SUBSTR(obter_valor_dominio(1901,coalesce(obter_dados_cirurgia(a.nr_cirurgia,'PO'),obter_dados_proc_interno(a.nr_seq_proc_interno,'PO'))),1,100) ds_porte,
 SUBSTR(Obter_autoriz_estagio_concat(a.nr_sequencia),1,255) ds_autorizacao_conv,
 nr_seq_tipo_classif_pac,
 SUBSTR(Obter_Idade(dt_nascimento_pac,LOCALTIMESTAMP,'DI'),1,3) qt_dias_nasc,
 coalesce(a.dt_nascimento_pac,f.dt_nascimento) dt_nascimento,
 a.NR_SEQ_STATUS_PAINEL,
substr(OBTER_INCONSISTENCIAS_PEPO(a.nr_cirurgia,a.nr_seq_pepo),1,255) ds_inconsistencia,
 substr(obter_status_painel_cir(a.NR_SEQ_STATUS_PAINEL, 'S'),1,255) ds_status_painel, 
 substr(obter_status_painel_cir(a.NR_SEQ_STATUS_PAINEL, 'C'),1,255) ds_cor_fonte_status,
 substr(obter_status_painel_cir(a.NR_SEQ_STATUS_PAINEL, 'F'),1,255) ds_cor_fundo_status,
substr(obter_nome_usuario(nm_buscar_paciente),1,255) nm_usuario_busca,
substr(obter_nome_usuario(nm_usuario_exige_demarc),1,255) nm_usuario_exige_demarc,
dt_buscar_paciente dt_busca,
CASE WHEN coalesce(a.ie_necessita_demarcacao,h.ie_necessita_demarcacao)='S' THEN 'Sim' WHEN coalesce(a.ie_necessita_demarcacao,h.ie_necessita_demarcacao)='N' THEN 'Não' END  ie_necessita_demarcacao,
coalesce(substr(obter_se_pac_demarcado(a.nr_cirurgia),1,255),'Não') ds_demarcacao_realizada,
a.ie_origem_proced,
a.cd_procedimento,
obter_proximo_status_painel(a.nr_sequencia, a.nr_cirurgia) nr_seq_cor,
substr(obter_desc_tipo_nec_espe(a.nr_seq_tipo_nec_esp),1,100) ds_tipo_nec_esp
FROM agenda b, agenda_paciente a
LEFT OUTER JOIN sala_cirurgia c ON (a.nr_seq_sala_cir = c.nr_sequencia)
LEFT OUTER JOIN status_paciente_agenda d ON (a.nr_seq_status_pac = d.nr_sequencia)
LEFT OUTER JOIN atendimento_paciente e ON (a.nr_atendimento = e.nr_atendimento)
LEFT OUTER JOIN pessoa_fisica f ON (a.cd_pessoa_fisica = f.cd_pessoa_fisica)
LEFT OUTER JOIN proc_interno h ON (a.nr_seq_proc_interno = h.nr_sequencia)
LEFT OUTER JOIN pessoa_fisica_foto g ON (f.cd_pessoa_fisica = g.cd_pessoa_fisica)
WHERE a.cd_agenda = b.cd_agenda       and a.ie_status_agenda not in ('L') and coalesce(b.ie_situacao,'A') = 'A' and b.cd_tipo_agenda = 1;

