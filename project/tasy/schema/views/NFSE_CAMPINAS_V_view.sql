-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW nfse_campinas_v (nr_seq_nota, assinatura, inscricaomunicipalprestador, razaosocialprestador, tiporps, serierps, numerorps, dataemissaorps, situacaorps, serierpssubstituido, numerorpssubstituido, numeronfsesubstituida, dataemissaonfsesubstituida, serieprestacao, inscricaomunicipaltomador, cpfcnpjtomador, razaosocialtomador, tipologradourotomador, logradourotomador, numeroenderecotomador, complementoenderecotomador, tipobairrotomador, bairrotomador, cidadetomador, cidadetomadordescricao, ceptomador, emailtomador, codigoatividade, aliquotaatividade, tiporecolhimento, municipioprestacao, municipioprestacaodescricao, operacao, tributacao, valorpis, valorcofins, valorinss, valorir, valorcsll, aliquotapis, aliquotacofins, aliquotainss, aliquotair, aliquotacsll, descricaorps, dddprestador, telefoneprestador, dddtomador, telefonetomador, motcancelamento, cpfcnpjintermediario, deducoes) AS select	a.nr_sequencia nr_seq_nota,
	lower(a.cd_assinatura_rps) Assinatura, 
	coalesce(substr(lpad(obter_dados_pf_pj('', a.cd_cgc_emitente, 'IM'), 9, '0'), 1, 30), '0000000') InscricaoMunicipalPrestador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_nome_pf_pj('', a.cd_cgc_emitente))), 1, 255) RazaoSocialPrestador, 
	'RPS' TipoRPS, 
	'NF' SerieRPS, 
	a.nr_nota_fiscal NumeroRPS, 
	to_char(a.dt_emissao, 'yyyy-mm-dd') || 'T' || to_char(a.dt_emissao, 'hh:mi:ss') DataEmissaoRPS, 
	-- decode((select count(*) from w_nota_fiscal), 1, 'N', 'L') SituacaoRPS, 
	CASE WHEN a.ie_situacao=1 THEN  'N' WHEN a.ie_situacao=2 THEN  'C' WHEN a.ie_situacao=3 THEN  'C'  ELSE 'N' END  SituacaoRPS, 
	'' SerieRPSSubstituido, 
	'' NumeroRPSSubstituido, 
	'' NumeroNFSeSubstituida, 
	'' DataEmissaoNFSeSubstituida, 
	99 SeriePrestacao, 
	CASE WHEN  		obter_desc_municipio_ibge( 			CASE WHEN 	obter_municipio_ibge( elimina_caracteres_especiais(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')))=0 THEN  				obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')  ELSE obter_municipio_ibge( elimina_caracteres_especiais(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))) END )='CAMPINAS' THEN  		CASE WHEN cd_cgc='' THEN  coalesce(lpad(obter_dados_pf(cd_pessoa_fisica, 'ISS'), 7, '0'), '0000000')  ELSE coalesce(lpad(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'IM'), 1, 30), 7, '0'), '0000000') END   ELSE '0000000' END  InscricaoMunicipalTomador,	 
	-- substr(nvl(lpad(decode(cd_cgc, '', obter_dados_pf(cd_pessoa_fisica, 'ISS'), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'IM')), 11, '0'), '00000000000'), 1, 30) InscricaoMunicipalTomador, 
	--decode(cd_cgc, '', decode(obter_se_brasileiro(cd_pessoa_fisica), 'N', '77777777777', nvl(substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'), 1, 11), '00000000000')), cd_cgc) CPFCNPJTomador, 
	CASE WHEN cd_cgc='' THEN  CASE WHEN obter_dados_pf(cd_pessoa_fisica, 'CPF') IS NULL THEN  '77777777777'  ELSE coalesce(substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'), 1, 11), '00000000000') END   ELSE cd_cgc END  CPFCNPJTomador, 
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))), 1, 255) RazaoSocialTomador, 
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'LO'))), 1, 50), 'Rua') TipoLogradouroTomador, 
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'EN'))), 1, 50), 'Endereco') LogradouroTomador, 
	coalesce(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'NR'), 1, 25), '00') NumeroEnderecoTomador, 
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CO'))), 1, 255), 'Complemento') ComplementoEnderecoTomador, 
	'Bairro' TipoBairroTomador, 
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'B'))), 1, 255), 'Bairro') BairroTomador, 
	/*lpad(obter_siafi_municipio_ibge(nvl(obter_municipio_ibge(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'))), 8, '0') CidadeTomador, 
	substr(obter_desc_municipio_ibge(nvl(obter_municipio_ibge(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'))), 1, 50) CidadeTomadorDescricao,*/
 
	CASE WHEN substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'UF'),1,2)='IN' THEN '0009999'  ELSE lpad(obter_siafi_municipio_ibge( 			CASE WHEN  				obter_municipio_ibge(elimina_caracteres_especiais(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')))=0 THEN  				obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')  ELSE obter_municipio_ibge(elimina_caracteres_especiais(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))) END 	 		), 8, '0') END  CidadeTomador, 
	substr( 
	CASE WHEN substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'UF'),1,2)='IN' THEN obter_dados_pf_pj( cd_pessoa_fisica, cd_cgc, 'PAIS')  ELSE obter_desc_municipio_ibge( 			CASE WHEN  				obter_municipio_ibge(elimina_caracteres_especiais(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')))=0 THEN  				obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')  ELSE obter_municipio_ibge(elimina_caracteres_especiais(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))) END  		) END  
	, 1, 50) CidadeTomadorDescricao,			 
	lpad(somente_numero(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), 8, '0') CEPTomador, 
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(CASE WHEN cd_pessoa_fisica IS NULL THEN  obter_dados_pf_pj_estab(cd_estabelecimento, null, cd_cgc, 'M')  ELSE obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'M') END )), 1, 80), '-') EmailTomador, 
	obter_dados_pf_pj_estab(a.cd_estabelecimento, null, a.cd_cgc_emitente, 'ATIV') CodigoAtividade, 
	'2.00' AliquotaAtividade, 
	/*decode(cd_cgc, '', 'A', decode(upper(substr(obter_desc_municipio_ibge(nvl(obter_municipio_ibge(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'))), 1, 50)), 'CAMPINAS', 'R', 'A')) TipoRecolhimento,*/
 
	CASE WHEN cd_cgc='' THEN  'A'  ELSE CASE WHEN obter_se_pj_retem_iss(a.cd_cgc, a.cd_estabelecimento)='S' THEN  'R'  ELSE 'A' END  END  TipoRecolhimento,	 
	'0006291' MunicipioPrestacao, 
	'CAMPINAS' MunicipioPrestacaoDescricao, 
	'A' Operacao, 
	CASE WHEN obter_dados_parametro_compras(a.cd_estabelecimento, 14)='1' THEN  'T' WHEN obter_dados_parametro_compras(a.cd_estabelecimento, 14)='2' THEN  'T' WHEN obter_dados_parametro_compras(a.cd_estabelecimento, 14)='3' THEN  'C' WHEN obter_dados_parametro_compras(a.cd_estabelecimento, 14)='4' THEN  'F'  ELSE 'K' END  Tributacao, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'PIS') END  ValorPIS, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'COFINS') END  ValorCOFINS, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'INSS') END  ValorINSS, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'IR') END  ValorIR, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'CSLL') END  ValorCSLL, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'PIS') END  AliquotaPIS, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'COFINS') END  AliquotaCOFINS, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'INSS') END  AliquotaINSS, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'IR') END  AliquotaIR, 
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'CSLL') END  AliquotaCSLL, 
	a.ds_observacao DescricaoRPS, 
	somente_numero_char(obter_dados_pf_pj('', a.cd_cgc_emitente, 'DDT')) DDDPrestador, 
	somente_numero_char(substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj('', a.cd_cgc_emitente, 'T')), 1, 8)) TelefonePrestador, 
	somente_numero_char(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'DDT')) DDDTomador, 
	somente_numero_char(substr(Elimina_Caracteres_Especiais(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'T')), 1, 8)) TelefoneTomador, 
	CASE WHEN a.ie_situacao=2 THEN  'ERRO DE DIGITACAO' WHEN a.ie_situacao=3 THEN  'ERRO DE DIGITACAO'  ELSE '' END  MotCancelamento, 
	'' CPFCNPJIntermediario, 
	'' Deducoes 
FROM 	w_nota_fiscal w, 
	nota_fiscal a 
where 	w.nr_seq_nota_fiscal = a.nr_sequencia 
order by 
	(a.nr_nota_fiscal)::numeric;

