-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW cirurgia_v2 (nr_cirurgia, nr_atendimento, nr_min_duracao_real, cd_convenio, cd_medico_cirurgiao, cd_medico_anestesista, ie_tipo_atendimento, cd_tipo_anestesia, ie_status_cirurgia, cd_setor_atendimento, ie_carater_cirurgia, ie_periodo, ds_carater_cirurgia, qt_min_anestesista, qt_min_medico, qt_min_enfermagem, qt_min_exturbacao, qt_min_higienizacao, ds_hora_duracao, ie_faixa_etaria, ie_sexo_paciente, cd_unidade, dt_referencia, cd_procedimento, cd_especialidade, ds_especialidade, ds_tipo_anestesia, ds_status_cirurgia, ds_setor_cirurgia, nm_paciente, ds_convenio, nm_cirurgiao, nm_anestesista, ds_procedimento, cd_municipio_convenio, ds_municipio, vl_faturamento, vl_custo, vl_resultado, cd_estabelecimento, cd_empresa, cd_proc_origem, ds_atraso, ie_sangue, ds_proc_interno, nr_seq_proc_interno, nr_seq_proced_niss, ie_asa_estado_paciente, ds_asa, cd_convenio_glosa, cd_municipio_ibge, cd_tipo_acomodacao, ds_dia_semana, ie_dia_semana, cd_tipo_convenio, ds_setor_unidade, ds_hora_cirurgia, ds_tipo_cirurgia, ie_video, ds_porte, ie_porte, ds_turno, ie_finalizada, ds_finalizada, cd_motivo_cancelamento, ds_motivo_cancelamento, ie_clinica, ds_clinica, ds_especialidade_proc, ds_duracao, ds_motivo_atraso, ds_complexidade, ds_via_acesso, ie_porte_preco, cd_especialidade_proc, nr_seq_interrupcao, ds_sala_setor, ds_status_agenda, ds_categoria, qt_atraso, ds_observacao, ie_prescr_pepo, ie_agente_pepo, ie_porte_anest, ds_agrup_setor, ie_reoperacao) AS select	a.nr_cirurgia,
	a.nr_atendimento,
	a.nr_min_duracao_real,
	coalesce(a.cd_convenio,0) cd_convenio,
	a.cd_medico_cirurgiao,
	coalesce(a.cd_medico_anestesista,0) cd_medico_anestesista,
	coalesce(c.ie_tipo_atendimento,0) ie_tipo_atendimento,
	coalesce(a.cd_tipo_anestesia,'NI') cd_tipo_anestesia,
	a.ie_status_cirurgia,
	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento,
	coalesce(a.IE_CARATER_CIRURGIA,0) IE_CARATER_CIRURGIA,
	'D' ie_periodo,
	' ' DS_CARATER_CIRURGIA,
	((dt_chegada_anestesista - dt_inicio_prevista) * 1440) qt_min_anestesista,
	((dt_chegada_cirurgiao - dt_inicio_prevista) * 1440) qt_min_medico,
	((dt_chegada_sala - dt_chamada) * 1440) qt_min_enfermagem,
	((dt_fim_extubacao - dt_fim_cirurgia) * 1440) qt_min_exturbacao,
	((dt_entrada_recup - dt_liberacao_sala) * 1440) qt_min_higienizacao,
	trunc(coalesce(a.nr_min_duracao_real,0) /60) || ':00' || ' ' || (trunc(coalesce(a.nr_min_duracao_real,0) /60) + 1) || ':00' ds_hora_duracao,
	substr(to_char(Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5,'000') ||
					   to_char((Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5)+5,'000'),2,8) ie_faixa_etaria,
	p.ie_sexo ie_sexo_paciente,
	UPPER(CASE WHEN cd_unidade_basica || ' ' || cd_unidade_compl=' ' THEN '0'  ELSE cd_unidade_basica || ' ' || cd_unidade_compl END )  cd_unidade,
	trunc(coalesce(dt_inicio_real,dt_inicio_prevista), 'dd') dt_referencia,
	cd_procedimento_princ cd_procedimento,
	substr(coalesce(obter_especialidade_medico(a.cd_medico_cirurgiao, 'C'),Obter_Especialidade_Proced(a.cd_procedimento_princ,a.ie_origem_proced)),1,255) cd_especialidade,
	substr(coalesce(obter_especialidade_medico(a.cd_medico_cirurgiao, 'D'),OBTER_DESC_ESPEC_PROC(Obter_Especialidade_Proced(a.cd_procedimento_princ,a.ie_origem_proced))),1,255) ds_especialidade,
	substr(obter_valor_dominio(36,a.cd_tipo_anestesia),1,255) ds_tipo_anestesia,
	substr(obter_valor_dominio(65,a.ie_status_cirurgia),1,255) ds_status_cirurgia,
	substr(obter_nome_setor(a.cd_setor_atendimento),1,255) ds_setor_cirurgia,
	substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica, null),1,255) nm_paciente,
	substr(obter_nome_convenio(a.cd_convenio),1,255) ds_convenio,
	substr(obter_nome_pessoa_fisica(a.cd_medico_cirurgiao, null),1,255) nm_cirurgiao,
	substr(obter_nome_pessoa_fisica(a.cd_medico_anestesista, null),1,255) nm_anestesista,
	substr(obter_desc_estrut_proc(null, null, null, a.cd_procedimento_princ, a.ie_origem_proced),1,255) ds_procedimento,
	Obter_Municipio_Convenio(c.nr_atendimento, 'C') cd_municipio_convenio,
	Obter_Municipio_Convenio(c.nr_atendimento, 'D') ds_municipio,
	sum(CASE WHEN philips_param_pck.get_cd_pais=2 THEN  	coalesce(vl_material,0) + coalesce(vl_procedimento,0) + coalesce(vl_imposto,0)  ELSE coalesce(vl_material,0) + coalesce(vl_procedimento,0) END ) vl_faturamento,
	sum(coalesce(vl_custo,0)) vl_custo,
	sum((coalesce(vl_material,0) + coalesce(vl_procedimento,0)) - coalesce(vl_custo,0)) vl_resultado,
	coalesce(a.cd_estabelecimento,c.cd_estabelecimento) cd_estabelecimento,
	obter_empresa_estab(coalesce(a.cd_estabelecimento,c.cd_estabelecimento)) cd_empresa,
	to_char(a.cd_procedimento_princ) || to_char(a.ie_origem_proced) cd_proc_origem,
	substr(obter_intervalo_minutos(obter_minutos_espera(dt_inicio_prevista,dt_inicio_real)),1,50) ds_atraso,
	coalesce(a.ie_sangue,0) ie_sangue,
	to_char(a.nr_seq_proc_interno) || ' - ' || substr(OBTER_DESC_PROC_INTERNO(a.nr_seq_proc_interno),1,255) ds_proc_interno,
	coalesce(a.nr_seq_proc_interno,0) nr_seq_proc_interno,
	coalesce(a.nr_seq_proced_niss,0) nr_seq_proced_niss,
	coalesce(a.ie_asa_estado_paciente,0) ie_asa_estado_paciente,
	substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,255) ds_asa,
	Obter_Convenio_Glosa_Atend(c.nr_atendimento) cd_convenio_glosa,
	coalesce(SUBSTR(obter_cod_mun_ibge_atend_ind(c.nr_atendimento),1,6),0) cd_municipio_ibge,
	coalesce(eis_obter_tipo_acomod_Atend(a.nr_atendimento,a.cd_convenio),0) cd_tipo_acomodacao,
	substr(obter_dia_semana(coalesce(dt_inicio_real, dt_inicio_prevista)),1,30) ds_dia_semana,
	to_char(coalesce(dt_inicio_real, dt_inicio_prevista),'d') ie_dia_semana,
	coalesce(obter_tipo_convenio(cd_convenio),0) cd_tipo_convenio,
	upper(substr(obter_nome_setor(a.cd_setor_atendimento),1,200) || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN null  ELSE ' - ' END  || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN  null  ELSE (b.cd_unidade_basica || ' '|| b.cd_unidade_compl) END ) ds_setor_unidade,
	LPAD(TO_CHAR(coalesce(a.dt_inicio_real, a.dt_inicio_prevista),'hh24'),2,0) || ':00' ds_hora_cirurgia,
	upper(substr(obter_descricao_padrao('CIH_TIPO_CIRURGIA', 'DS_TIPO_CIRURGIA', cd_tipo_cirurgia),1,200)) ds_tipo_cirurgia,
	Obter_Se_Cir_Video(a.nr_cirurgia) ie_video,
	substr(obter_valor_dominio(1901, a.ie_porte),1,12) ds_porte,
	coalesce(a.ie_porte,'0') ie_porte,
	upper(substr(obter_turno_cirurgia(a.dt_inicio_real,coalesce(a.cd_estabelecimento,c.cd_estabelecimento),'D'),1,15)) ds_turno,
	CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END  ie_finalizada,
	substr(obter_valor_dominio(6,CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END ),1,5) ds_finalizada,
	a.ie_motivo_cancelamento cd_motivo_cancelamento,
	substr(Obter_Valor_Dominio(1011,a.ie_motivo_cancelamento),1,255) ds_motivo_cancelamento,
	c.ie_clinica ie_clinica,
	substr(obter_valor_dominio(17, c.ie_clinica),1,255) ds_clinica,
	substr(obter_desc_especialidade_proc(Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced)),1,200) ds_especialidade_proc,
	upper(substr(eis_se_ultra_dur_prev(a.nr_min_duracao_prev,coalesce(a.nr_min_duracao_real,0)),1,255)) ds_duracao,
	coalesce(upper(substr(obter_descricao_padrao('CIR_MOTIVO_ATRASO', 'DS_MOTIVO', obter_motivo_atraso_cir(a.nr_cirurgia,'C')),1,200)),0) ds_motivo_atraso,
	upper(substr(coalesce(sus_obter_complexidade_proced(a.cd_procedimento_princ, a.ie_origem_proced, 'D'), 'NÃ£o informado'),1,255)) ds_complexidade,
	upper(substr(eis_obter_desc_via_acesso_cir(a.nr_seq_via),1,255)) ds_via_acesso,
	upper(substr(Obter_Porte_Proc_Anest_Cirur(a.nr_cirurgia, null),1,30)) ie_porte_preco,
	Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced) cd_especialidade_proc,
	coalesce(a.nr_seq_interrupcao,0) nr_seq_interrupcao,
	coalesce(upper(substr(obter_unid_setor_cirurgia(a.nr_cirurgia,'S'),1,120)),0) ds_sala_setor,
	coalesce(upper(substr(Obter_status_Agenda_Pac_cir(a.nr_cirurgia),1,200)),0) ds_status_agenda,
	coalesce(upper(substr(obter_categoria_convenio(a.cd_convenio,a.cd_categoria)||' - '||OBTER_DESC_CONVENIO(a.cd_convenio),1,255)),0) ds_categoria,
	substr(obter_dif_data(dt_inicio_prevista,dt_inicio_real,'CIR'),1,200) qt_atraso,
	substr(a.ds_observacao,1,200) ds_observacao,
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'P'),1,10) ie_prescr_pepo,
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'A'),1,10) ie_agente_pepo,
	SUBSTR(obter_porte_anestesico_cir(a.nr_cirurgia),1,10) IE_PORTE_ANEST,
	SUBSTR(obter_desc_agrup_setor(obter_agrupamento_setor(a.cd_setor_atendimento)),1,255) ds_agrup_setor,
	a.ie_reoperacao
FROM pessoa_fisica p, cirurgia a
LEFT OUTER JOIN atendimento_paciente c ON (a.nr_atendimento = c.nr_atendimento)
LEFT OUTER JOIN atend_paciente_unidade b ON (a.nr_atendimento = b.nr_atendimento AND a.dt_entrada_unidade = b.dt_entrada_unidade)
LEFT OUTER JOIN conta_paciente_resumo d ON (a.nr_cirurgia = d.nr_cirugia)
WHERE a.cd_procedimento_princ is not null    and a.cd_pessoa_fisica		= p.cd_pessoa_fisica  group by
	a.nr_cirurgia,
	a.nr_atendimento,
	a.cd_convenio,
	a.nr_min_duracao_real,
	a.cd_medico_cirurgiao,
	a.cd_medico_anestesista,
	c.ie_tipo_atendimento,
	a.cd_tipo_anestesia,
	a.ie_status_cirurgia,
	a.cd_setor_atendimento,
	a.IE_CARATER_CIRURGIA,
	((dt_chegada_anestesista - dt_inicio_prevista) * 1440),
	((dt_chegada_cirurgiao - dt_inicio_prevista) * 1440),
	((dt_chegada_sala - dt_chamada) * 1440),
	((dt_fim_extubacao - dt_fim_cirurgia) * 1440),
	((dt_entrada_recup - dt_liberacao_sala) * 1440),
	upper(Obter_Periodo_Horario(coalesce(a.dt_inicio_real, a.dt_inicio_prevista))),
	trunc(coalesce(a.nr_min_duracao_real,0) /60) || ':00' || ' ' || (trunc(coalesce(a.nr_min_duracao_real,0) /60) + 1) || ':00',
	substr(to_char(Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5,'000') ||
					   to_char((Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5)+5,'000'),2,8),
	p.ie_sexo,
	b.cd_unidade_basica || ' ' || b.cd_unidade_compl,
	trunc(coalesce(dt_inicio_real,dt_inicio_prevista), 'dd'),
	cd_procedimento_princ,
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'C'),1,255),
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'D'),1,255),
	substr(obter_valor_dominio(36,a.cd_tipo_anestesia),1,255),
	substr(obter_valor_dominio(65,a.ie_status_cirurgia),1,255),
	substr(obter_nome_setor(a.cd_setor_atendimento),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica, null),1,255),
	substr(obter_nome_convenio(a.cd_convenio),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_medico_cirurgiao, null),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_medico_anestesista, null),1,255),
	substr(obter_desc_estrut_proc(null, null, null, a.cd_procedimento_princ, a.ie_origem_proced),1,255),
	Obter_Municipio_Convenio(c.nr_atendimento, 'C'),
	Obter_Municipio_Convenio(c.nr_atendimento, 'D'),
	coalesce(a.cd_estabelecimento,c.cd_estabelecimento),
	obter_empresa_estab(coalesce(a.cd_estabelecimento,c.cd_estabelecimento)),
	to_char(a.cd_procedimento_princ) || to_char(a.ie_origem_proced),
	obter_intervalo_minutos(obter_minutos_espera(dt_inicio_prevista,dt_inicio_real)),
	a.ie_sangue,
	to_char(a.nr_seq_proc_interno) || ' - ' || substr(OBTER_DESC_PROC_INTERNO(a.nr_seq_proc_interno),1,255),
	a.nr_seq_proc_interno,
	a.nr_seq_proced_niss,
	a.ie_asa_estado_paciente,
	substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,255),
	Obter_Convenio_Glosa_Atend(c.nr_atendimento),
	SUBSTR(obter_cod_mun_ibge_atend_ind(c.nr_atendimento),1,6),
	eis_obter_tipo_acomod_Atend(a.nr_atendimento,a.cd_convenio),
	substr(obter_dia_semana(coalesce(dt_inicio_real, dt_inicio_prevista)),1,30),
	to_char(coalesce(dt_inicio_real, dt_inicio_prevista),'d'),
	obter_tipo_convenio(cd_convenio),
	upper(substr(obter_nome_setor(a.cd_setor_atendimento),1,200) || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN null  ELSE ' - ' END  || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN  null  ELSE (b.cd_unidade_basica || ' '|| b.cd_unidade_compl) END ),
	LPAD(TO_CHAR(coalesce(a.dt_inicio_real, a.dt_inicio_prevista),'hh24'),2,0) || ':00',
	substr(obter_descricao_padrao('CIH_TIPO_CIRURGIA', 'DS_TIPO_CIRURGIA', cd_tipo_cirurgia),1,200),
	Obter_Se_Cir_Video(a.nr_cirurgia),
	substr(obter_valor_dominio(1901, a.ie_porte),1,12),
	coalesce(a.ie_porte,'0'),
	substr(obter_turno_cirurgia(a.dt_inicio_real,coalesce(a.cd_estabelecimento,c.cd_estabelecimento),'D'),1,15),
	substr(obter_valor_dominio(6,CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END ),1,5),
	a.ie_motivo_cancelamento,
	c.ie_clinica,
	substr(obter_desc_especialidade_proc(Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced)),1,200),
	substr(eis_se_ultra_dur_prev(a.nr_min_duracao_prev,coalesce(a.nr_min_duracao_real,0)),1,255),
	upper(substr(coalesce(sus_obter_complexidade_proced(a.cd_procedimento_princ, a.ie_origem_proced, 'D'), 'NÃ£o informado'),1,255)),
	upper(substr(eis_obter_desc_via_acesso_cir(a.nr_seq_via),1,255)),
	upper(substr(Obter_Porte_Proc_Anest_Cirur(a.nr_cirurgia, null),1,30)),
	a.nr_seq_interrupcao,
	Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced),
	coalesce(upper(substr(obter_categoria_convenio(a.cd_convenio,a.cd_categoria)||' - '||OBTER_DESC_CONVENIO(a.cd_convenio),1,255)),0),
	obter_dif_data(dt_inicio_prevista,dt_inicio_real,'CIR'),
	substr(a.ds_observacao,1,200),
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'P'),1,10),
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'A'),1,10),
	a.ie_reoperacao

union

select	a.nr_cirurgia,
	a.nr_atendimento,
	a.nr_min_duracao_real,
	coalesce(a.cd_convenio,0) cd_convenio,
	a.cd_medico_cirurgiao,
	coalesce(a.cd_medico_anestesista,0) cd_medico_anestesista,
	coalesce(c.ie_tipo_atendimento,0) ie_tipo_atendimento,
	coalesce(a.cd_tipo_anestesia,'NI') cd_tipo_anestesia,
	a.ie_status_cirurgia,
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.IE_CARATER_CIRURGIA,0) IE_CARATER_CIRURGIA,
	'M' ie_periodo,
	' ' DS_CARATER_CIRURGIA,
	((dt_chegada_anestesista - dt_inicio_prevista) * 1440) qt_min_anestesista,
	((dt_chegada_cirurgiao - dt_inicio_prevista) * 1440) qt_min_medico,
	((dt_chegada_sala - dt_chamada) * 1440) qt_min_enfermagem,
	((dt_fim_extubacao - dt_fim_cirurgia) * 1440) qt_min_exturbacao,
	((dt_entrada_recup - dt_liberacao_sala) * 1440) qt_min_higienizacao,
	trunc(coalesce(a.nr_min_duracao_real,0) /60) || ':00' || ' ' || (trunc(coalesce(a.nr_min_duracao_real,0) /60) + 1) || ':00' ds_hora_duracao,
	substr(to_char(Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5,'000') ||
					   to_char((Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5)+5,'000'),2,8) ie_faixa_etaria,
	p.ie_sexo ie_sexo_paciente,
	UPPER(CASE WHEN cd_unidade_basica || ' ' || cd_unidade_compl=' ' THEN '0'  ELSE cd_unidade_basica || ' ' || cd_unidade_compl END ) cd_unidade,
	trunc(coalesce(dt_inicio_real,dt_inicio_prevista), 'month') dt_referencia,
	cd_procedimento_princ cd_procedimento,
	substr(coalesce(obter_especialidade_medico(a.cd_medico_cirurgiao, 'C'),Obter_Especialidade_Proced(a.cd_procedimento_princ,a.ie_origem_proced)),1,255) cd_especialidade,
	substr(coalesce(obter_especialidade_medico(a.cd_medico_cirurgiao, 'D'),OBTER_DESC_ESPEC_PROC(Obter_Especialidade_Proced(a.cd_procedimento_princ,a.ie_origem_proced))),1,255) ds_especialidade,
	substr(obter_valor_dominio(36,a.cd_tipo_anestesia),1,255) ds_tipo_anestesia,
	substr(obter_valor_dominio(65,a.ie_status_cirurgia),1,255) ds_status_cirurgia,
	substr(obter_nome_setor(a.cd_setor_atendimento),1,255) ds_setor_cirurgia,
	substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica, null),1,255) nm_paciente,
	substr(obter_nome_convenio(a.cd_convenio),1,255) ds_convenio,
	substr(obter_nome_pessoa_fisica(a.cd_medico_cirurgiao, null),1,255) nm_cirurgiao,
	substr(obter_nome_pessoa_fisica(a.cd_medico_anestesista, null),1,255) nm_anestesista,
	substr(obter_desc_estrut_proc(null, null, null, a.cd_procedimento_princ, a.ie_origem_proced),1,255) ds_procedimento,
	Obter_Municipio_Convenio(c.nr_atendimento, 'C') cd_municipio_convenio,
	Obter_Municipio_Convenio(c.nr_atendimento, 'D') ds_municipio,
	sum(CASE WHEN philips_param_pck.get_cd_pais=2 THEN  coalesce(vl_material,0) + coalesce(vl_procedimento,0) + coalesce(vl_imposto,0)  ELSE coalesce(vl_material,0) + coalesce(vl_procedimento,0) END ) vl_faturamento,
	sum(coalesce(vl_custo,0)) vl_custo,
	sum((coalesce(vl_material,0) + coalesce(vl_procedimento,0)) - coalesce(vl_custo,0)) vl_resultado,
	coalesce(a.cd_estabelecimento,c.cd_estabelecimento),
	obter_empresa_estab(coalesce(a.cd_estabelecimento,c.cd_estabelecimento)) cd_empresa,
	to_char(a.cd_procedimento_princ) || to_char(a.ie_origem_proced),
	substr(obter_intervalo_minutos(obter_minutos_espera(dt_inicio_prevista,dt_inicio_real)),1,50) ds_atraso,
	coalesce(a.ie_sangue,0) ie_sangue,
	to_char(a.nr_seq_proc_interno) || ' - ' || substr(OBTER_DESC_PROC_INTERNO(a.nr_seq_proc_interno),1,255),
	coalesce(a.nr_seq_proc_interno,0) nr_seq_proc_interno,
	coalesce(a.nr_seq_proced_niss,0) nr_seq_proced_niss,
	coalesce(a.ie_asa_estado_paciente,0) ie_asa_estado_paciente,
	substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,255) ds_asa,
	Obter_Convenio_Glosa_Atend(c.nr_atendimento) cd_convenio_glosa,
	coalesce(SUBSTR(obter_cod_mun_ibge_atend_ind(c.nr_atendimento),1,6),0) cd_municipio_ibge,
	coalesce(eis_obter_tipo_acomod_Atend(a.nr_atendimento,a.cd_convenio),0) cd_tipo_acomodacao,
	substr(obter_dia_semana(coalesce(dt_inicio_real, dt_inicio_prevista)),1,30) ds_dia_semana,
	to_char(coalesce(dt_inicio_real, dt_inicio_prevista),'d') ie_dia_semana,
	coalesce(obter_tipo_convenio(cd_convenio),0) cd_tipo_convenio,
	upper(substr(obter_nome_setor(a.cd_setor_atendimento),1,200) || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN null  ELSE ' - ' END  || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN  null  ELSE (b.cd_unidade_basica || ' '|| b.cd_unidade_compl) END ) ds_setor_unidade,
	LPAD(TO_CHAR(coalesce(a.dt_inicio_real, a.dt_inicio_prevista),'hh24'),2,0) || ':00' ds_hora_cirurgia,
	upper(substr(obter_descricao_padrao('CIH_TIPO_CIRURGIA', 'DS_TIPO_CIRURGIA', cd_tipo_cirurgia),1,200)) ds_tipo_cirurgia,
	Obter_Se_Cir_Video(a.nr_cirurgia) ie_video,
	substr(obter_valor_dominio(1901, a.ie_porte),1,12) ds_porte,
	coalesce(a.ie_porte,'0') ie_porte,
	upper(substr(obter_turno_cirurgia(a.dt_inicio_real,coalesce(a.cd_estabelecimento,c.cd_estabelecimento),'D'),1,15)) ds_turno,
	CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END  ie_finalizada,
	substr(obter_valor_dominio(6,CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END ),1,5) ds_finalizada,
	a.ie_motivo_cancelamento cd_motivo_cancelamento,
	substr(Obter_Valor_Dominio(1011,a.ie_motivo_cancelamento),1,255) ds_motivo_cancelamento	,
	c.ie_clinica ie_clinica,
	substr(obter_valor_dominio(17, c.ie_clinica),1,255) ds_clinica,
	substr(obter_desc_especialidade_proc(Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced)),1,200) ds_especialidade_proc,
	upper(substr(eis_se_ultra_dur_prev(a.nr_min_duracao_prev,coalesce(a.nr_min_duracao_real,0)),1,255)) ds_duracao,
	coalesce(upper(substr(obter_descricao_padrao('CIR_MOTIVO_ATRASO', 'DS_MOTIVO', obter_motivo_atraso_cir(a.nr_cirurgia,'C')),1,200)),0) ds_motivo_atraso,
	upper(substr(coalesce(sus_obter_complexidade_proced(a.cd_procedimento_princ, a.ie_origem_proced, 'D'), 'NÃ£o informado'),1,255)) ds_complexidade,
	upper(substr(eis_obter_desc_via_acesso_cir(a.nr_seq_via),1,255)) ds_via_acesso,
	upper(substr(Obter_Porte_Proc_Anest_Cirur(a.nr_cirurgia, null),1,30)) ie_porte_preco,
	Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced) cd_especialidade_proc,
	coalesce(a.nr_seq_interrupcao,0) nr_seq_interrupcao,
	coalesce(upper(substr(obter_unid_setor_cirurgia(a.nr_cirurgia,'S'),1,120)),0) ds_sala_setor,
	coalesce(upper(substr(Obter_status_Agenda_Pac_cir(a.nr_cirurgia),1,200)),0) ds_status_agenda,
	coalesce(upper(substr(obter_categoria_convenio(a.cd_convenio,a.cd_categoria)||' - '||OBTER_DESC_CONVENIO(a.cd_convenio),1,255)),0) ds_categoria,
	substr(obter_dif_data(dt_inicio_prevista,dt_inicio_real,'CIR'),1,200) qt_atraso ,
	substr(a.ds_observacao,1,200) ds_observacao,
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'P'),1,10) ie_prescr_pepo,
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'A'),1,10) ie_agente_pepo,
	SUBSTR(obter_porte_anestesico_cir(a.nr_cirurgia),1,10) IE_PORTE_ANEST,
	SUBSTR(obter_desc_agrup_setor(obter_agrupamento_setor(a.cd_setor_atendimento)),1,255) ds_agrup_setor,
	a.ie_reoperacao
FROM pessoa_fisica p, cirurgia a
LEFT OUTER JOIN atendimento_paciente c ON (a.nr_atendimento = c.nr_atendimento)
LEFT OUTER JOIN atend_paciente_unidade b ON (a.nr_atendimento = b.nr_atendimento AND a.dt_entrada_unidade = b.dt_entrada_unidade)
LEFT OUTER JOIN conta_paciente_resumo d ON (a.nr_cirurgia = d.nr_cirugia)
WHERE a.cd_procedimento_princ is not null    and a.cd_pessoa_fisica		= p.cd_pessoa_fisica  group by
	a.nr_cirurgia,
	a.nr_atendimento,
	a.cd_convenio,
	a.nr_min_duracao_real,
	a.cd_medico_cirurgiao,
	a.cd_medico_anestesista,
	c.ie_tipo_atendimento,
	a.cd_tipo_anestesia,
	a.ie_status_cirurgia,
	a.cd_setor_atendimento,
	a.IE_CARATER_CIRURGIA,
	((dt_chegada_anestesista - dt_inicio_prevista) * 1440),
	((dt_chegada_cirurgiao - dt_inicio_prevista) * 1440),
	((dt_chegada_sala - dt_chamada) * 1440),
	((dt_fim_extubacao - dt_fim_cirurgia) * 1440),
	((dt_entrada_recup - dt_liberacao_sala) * 1440),
	upper(Obter_Periodo_Horario(coalesce(a.dt_inicio_real, a.dt_inicio_prevista))),
	trunc(coalesce(a.nr_min_duracao_real,0) /60) || ':00' || ' ' || (trunc(coalesce(a.nr_min_duracao_real,0) /60) + 1) || ':00',
	substr(to_char(Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5,'000') ||
					   to_char((Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5)+5,'000'),2,8),
	p.ie_sexo,
	b.cd_unidade_basica || ' ' || b.cd_unidade_compl,
	trunc(coalesce(dt_inicio_real,dt_inicio_prevista), 'month'),
	cd_procedimento_princ,
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'C'),1,255),
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'D'),1,255),
	substr(obter_valor_dominio(36,a.cd_tipo_anestesia),1,255),
	substr(obter_valor_dominio(65,a.ie_status_cirurgia),1,255),
	substr(obter_nome_setor(a.cd_setor_atendimento),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica, null),1,255),
	substr(obter_nome_convenio(a.cd_convenio),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_medico_cirurgiao, null),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_medico_anestesista, null),1,255),
	substr(obter_desc_estrut_proc(null, null, null, a.cd_procedimento_princ, a.ie_origem_proced),1,255),
	Obter_Municipio_Convenio(c.nr_atendimento, 'C'),
	Obter_Municipio_Convenio(c.nr_atendimento, 'D'),
	coalesce(a.cd_estabelecimento,c.cd_estabelecimento),
	obter_empresa_estab(coalesce(a.cd_estabelecimento,c.cd_estabelecimento)),
	to_char(a.cd_procedimento_princ) || to_char(a.ie_origem_proced),
	obter_intervalo_minutos(obter_minutos_espera(dt_inicio_prevista,dt_inicio_real)),
	a.ie_sangue,
	to_char(a.nr_seq_proc_interno) || ' - ' || substr(OBTER_DESC_PROC_INTERNO(a.nr_seq_proc_interno),1,255),
	a.nr_seq_proc_interno,
	a.nr_seq_proced_niss,
	a.ie_asa_estado_paciente,
	substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,255),
	Obter_Convenio_Glosa_Atend(c.nr_atendimento),
	SUBSTR(obter_cod_mun_ibge_atend_ind(c.nr_atendimento),1,6),
	eis_obter_tipo_acomod_Atend(a.nr_atendimento,a.cd_convenio),
	substr(obter_dia_semana(coalesce(dt_inicio_real, dt_inicio_prevista)),1,30),
	to_char(coalesce(dt_inicio_real, dt_inicio_prevista),'d'),
	obter_tipo_convenio(cd_convenio),
	upper(substr(obter_nome_setor(a.cd_setor_atendimento),1,200) || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN null  ELSE ' - ' END  || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN  null  ELSE (b.cd_unidade_basica || ' '|| b.cd_unidade_compl) END ),
	LPAD(TO_CHAR(coalesce(a.dt_inicio_real, a.dt_inicio_prevista),'hh24'),2,0) || ':00',
	substr(obter_descricao_padrao('CIH_TIPO_CIRURGIA', 'DS_TIPO_CIRURGIA', cd_tipo_cirurgia),1,200),
	Obter_Se_Cir_Video(a.nr_cirurgia),
	substr(obter_valor_dominio(1901, a.ie_porte),1,12),
	coalesce(a.ie_porte,'0'),
	substr(obter_turno_cirurgia(a.dt_inicio_real,coalesce(a.cd_estabelecimento,c.cd_estabelecimento),'D'),1,15),
	substr(obter_valor_dominio(6,CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END ),1,5),
	a.ie_motivo_cancelamento,
	c.ie_clinica,
	substr(obter_desc_especialidade_proc(Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced)),1,200),
	substr(eis_se_ultra_dur_prev(a.nr_min_duracao_prev,coalesce(a.nr_min_duracao_real,0)),1,255),
	upper(substr(coalesce(sus_obter_complexidade_proced(a.cd_procedimento_princ, a.ie_origem_proced, 'D'), 'NÃ£o informado'),1,255)),
	upper(substr(eis_obter_desc_via_acesso_cir(a.nr_seq_via),1,255)),
	upper(substr(Obter_Porte_Proc_Anest_Cirur(a.nr_cirurgia, null),1,30)),
	a.nr_seq_interrupcao,
	Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced),
	coalesce(upper(substr(obter_categoria_convenio(a.cd_convenio,a.cd_categoria)||' - '||OBTER_DESC_CONVENIO(a.cd_convenio),1,255)),0),
	obter_dif_data(dt_inicio_prevista,dt_inicio_real,'CIR'),
	substr(a.ds_observacao,1,200),
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'P'),1,10),
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'A'),1,10),
	a.ie_reoperacao

union

select	a.nr_cirurgia,
	a.nr_atendimento,
	a.nr_min_duracao_real,
	coalesce(a.cd_convenio,0) cd_convenio,
	a.cd_medico_cirurgiao,
	coalesce(a.cd_medico_anestesista,0) cd_medico_anestesista,
	coalesce(c.ie_tipo_atendimento,0) ie_tipo_atendimento,
	coalesce(a.cd_tipo_anestesia,'NI') cd_tipo_anestesia,
	a.ie_status_cirurgia,
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.IE_CARATER_CIRURGIA,0) IE_CARATER_CIRURGIA,
	'A' ie_periodo,
	' ' DS_CARATER_CIRURGIA,
	((dt_chegada_anestesista - dt_inicio_prevista) * 1440) qt_min_anestesista,
	((dt_chegada_cirurgiao - dt_inicio_prevista) * 1440) qt_min_medico,
	((dt_chegada_sala - dt_chamada) * 1440) qt_min_enfermagem,
	((dt_fim_extubacao - dt_fim_cirurgia) * 1440) qt_min_exturbacao,
	((dt_entrada_recup - dt_liberacao_sala) * 1440) qt_min_higienizacao,
	trunc(coalesce(a.nr_min_duracao_real,0) /60) || ':00' || ' ' || (trunc(coalesce(a.nr_min_duracao_real,0) /60) + 1) || ':00' ds_hora_duracao,
	substr(to_char(Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5,'000') ||
					   to_char((Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5)+5,'000'),2,8) ie_faixa_etaria,
	p.ie_sexo ie_sexo_paciente,
	UPPER(CASE WHEN cd_unidade_basica || ' ' || cd_unidade_compl=' ' THEN '0'  ELSE cd_unidade_basica || ' ' || cd_unidade_compl END ) cd_unidade,
	trunc(coalesce(dt_inicio_real,dt_inicio_prevista), 'year') dt_referencia,
	cd_procedimento_princ cd_procedimento,
	substr(coalesce(obter_especialidade_medico(a.cd_medico_cirurgiao, 'C'),Obter_Especialidade_Proced(a.cd_procedimento_princ,a.ie_origem_proced)),1,255) cd_especialidade,
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'D'),1,255) ds_especialidade,
	substr(obter_valor_dominio(36,a.cd_tipo_anestesia),1,255) ds_tipo_anestesia,
	substr(obter_valor_dominio(65,a.ie_status_cirurgia),1,255) ds_status_cirurgia,
	substr(obter_nome_setor(a.cd_setor_atendimento),1,255) ds_setor_cirurgia,
	substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica, null),1,255) nm_paciente,
	substr(obter_nome_convenio(a.cd_convenio),1,255) ds_convenio,
	substr(obter_nome_pessoa_fisica(a.cd_medico_cirurgiao, null),1,255) nm_cirurgiao,
	substr(obter_nome_pessoa_fisica(a.cd_medico_anestesista, null),1,255) nm_anestesista,
	substr(obter_desc_estrut_proc(null, null, null, a.cd_procedimento_princ, a.ie_origem_proced),1,255) ds_procedimento,
	Obter_Municipio_Convenio(c.nr_atendimento, 'C') cd_municipio_convenio,
	Obter_Municipio_Convenio(c.nr_atendimento, 'D') ds_municipio,
	sum(CASE WHEN philips_param_pck.get_cd_pais=2 THEN  coalesce(vl_material,0) + coalesce(vl_procedimento,0) + coalesce(vl_imposto,0)  ELSE coalesce(vl_material,0) + coalesce(vl_procedimento,0) END ) vl_faturamento,
	sum(coalesce(vl_custo,0)) vl_custo,
	sum((coalesce(vl_material,0) + coalesce(vl_procedimento,0)) - coalesce(vl_custo,0)) vl_resultado,
	coalesce(a.cd_estabelecimento,c.cd_estabelecimento),
	obter_empresa_estab(coalesce(a.cd_estabelecimento,c.cd_estabelecimento)),
	to_char(a.cd_procedimento_princ) || to_char(a.ie_origem_proced),
	substr(obter_intervalo_minutos(obter_minutos_espera(dt_inicio_prevista,dt_inicio_real)),1,50) ds_atraso,
	coalesce(a.ie_sangue,0) ie_sangue,
	to_char(a.nr_seq_proc_interno) || ' - ' || substr(OBTER_DESC_PROC_INTERNO(a.nr_seq_proc_interno),1,255) ds_proc_interno,
	coalesce(a.nr_seq_proc_interno,0) nr_seq_proc_interno,
	coalesce(a.nr_seq_proced_niss,0) nr_seq_proced_niss,
	coalesce(a.ie_asa_estado_paciente,0) ie_asa_estado_paciente,
	substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,255) ds_asa,
	Obter_Convenio_Glosa_Atend(c.nr_atendimento) cd_convenio_glosa,
	coalesce(SUBSTR(obter_cod_mun_ibge_atend_ind(c.nr_atendimento),1,6),0) cd_municipio_ibge,
	coalesce(eis_obter_tipo_acomod_Atend(a.nr_atendimento,a.cd_convenio),0) cd_tipo_acomodacao,
	substr(obter_dia_semana(coalesce(dt_inicio_real, dt_inicio_prevista)),1,30) ds_dia_semana,
	to_char(coalesce(dt_inicio_real, dt_inicio_prevista),'d') ie_dia_semana,
	coalesce(obter_tipo_convenio(cd_convenio),0) cd_tipo_convenio,
	upper(substr(obter_nome_setor(a.cd_setor_atendimento),1,200) || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN null  ELSE ' - ' END  || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN  null  ELSE (b.cd_unidade_basica || ' '|| b.cd_unidade_compl) END ) ds_setor_unidade,
	LPAD(TO_CHAR(coalesce(a.dt_inicio_real, a.dt_inicio_prevista),'hh24'),2,0) || ':00' ds_hora_cirurgia,
	upper(substr(obter_descricao_padrao('CIH_TIPO_CIRURGIA', 'DS_TIPO_CIRURGIA', cd_tipo_cirurgia),1,200)) ds_tipo_cirurgia,
	Obter_Se_Cir_Video(a.nr_cirurgia) ie_video,
	substr(obter_valor_dominio(1901, a.ie_porte),1,12) ds_porte,
	coalesce(a.ie_porte,'0') ie_porte,
	upper(substr(obter_turno_cirurgia(a.dt_inicio_real,coalesce(a.cd_estabelecimento,c.cd_estabelecimento),'D'),1,15)) ds_turno,
	CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END  ie_finalizada,
	substr(obter_valor_dominio(6,CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END ),1,5) ds_finalizada,
	a.ie_motivo_cancelamento cd_motivo_cancelamento,
	substr(Obter_Valor_Dominio(1011,a.ie_motivo_cancelamento),1,255) ds_motivo_cancelamento,
	c.ie_clinica ie_clinica,
	substr(obter_valor_dominio(17, c.ie_clinica),1,255) ds_clinica,
	substr(obter_desc_especialidade_proc(Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced)),1,200) ds_especialidade_proc,
	upper(substr(eis_se_ultra_dur_prev(a.nr_min_duracao_prev,coalesce(a.nr_min_duracao_real,0)),1,255)) ds_duracao,
	coalesce(upper(substr(obter_descricao_padrao('CIR_MOTIVO_ATRASO', 'DS_MOTIVO', obter_motivo_atraso_cir(a.nr_cirurgia,'C')),1,200)),0) ds_motivo_atraso,
	upper(substr(coalesce(sus_obter_complexidade_proced(a.cd_procedimento_princ, a.ie_origem_proced, 'D'), 'NÃ£o informado'),1,255)) ds_complexidade,
	upper(substr(eis_obter_desc_via_acesso_cir(a.nr_seq_via),1,255)) ds_via_acesso,
	upper(substr(Obter_Porte_Proc_Anest_Cirur(a.nr_cirurgia, null),1,30)) ie_porte_preco,
	Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced) cd_especialidade_proc,
	coalesce(a.nr_seq_interrupcao,0) nr_seq_interrupcao,
	coalesce(upper(substr(obter_unid_setor_cirurgia(a.nr_cirurgia,'S'),1,120)),0) ds_sala_setor,
	coalesce(upper(substr(Obter_status_Agenda_Pac_cir(a.nr_cirurgia),1,200)),0) ds_status_agenda,
	coalesce(upper(substr(obter_categoria_convenio(a.cd_convenio,a.cd_categoria)||' - '||OBTER_DESC_CONVENIO(a.cd_convenio),1,255)),0) ds_categoria,
	substr(obter_dif_data(dt_inicio_prevista,dt_inicio_real,'CIR'),1,200) qt_atraso,
	substr(a.ds_observacao,1,200) ds_observacao,
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'P'),1,10) ie_prescr_pepo,
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'A'),1,10) ie_agente_pepo,
	SUBSTR(obter_porte_anestesico_cir(a.nr_cirurgia),1,10) IE_PORTE_ANEST,
	SUBSTR(obter_desc_agrup_setor(obter_agrupamento_setor(a.cd_setor_atendimento)),1,255) ds_agrup_setor,
	a.ie_reoperacao
FROM pessoa_fisica p, cirurgia a
LEFT OUTER JOIN atendimento_paciente c ON (a.nr_atendimento = c.nr_atendimento)
LEFT OUTER JOIN atend_paciente_unidade b ON (a.nr_atendimento = b.nr_atendimento AND a.dt_entrada_unidade = b.dt_entrada_unidade)
LEFT OUTER JOIN conta_paciente_resumo d ON (a.nr_cirurgia = d.nr_cirugia)
WHERE cd_procedimento_princ is not null    and a.cd_pessoa_fisica		= p.cd_pessoa_fisica  group by
	a.nr_cirurgia,
	a.nr_atendimento,
	a.cd_convenio,
	a.nr_min_duracao_real,
	a.cd_medico_cirurgiao,
	a.cd_medico_anestesista,
	c.ie_tipo_atendimento,
	a.cd_tipo_anestesia,
	a.ie_status_cirurgia,
	a.cd_setor_atendimento,
	a.IE_CARATER_CIRURGIA,
	((dt_chegada_anestesista - dt_inicio_prevista) * 1440),
	((dt_chegada_cirurgiao - dt_inicio_prevista) * 1440),
	((dt_chegada_sala - dt_chamada) * 1440),
	((dt_fim_extubacao - dt_fim_cirurgia) * 1440),
	((dt_entrada_recup - dt_liberacao_sala) * 1440),
	upper(Obter_Periodo_Horario(coalesce(a.dt_inicio_real, a.dt_inicio_prevista))),
	trunc(coalesce(a.nr_min_duracao_real,0) /60) || ':00' || ' ' || (trunc(coalesce(a.nr_min_duracao_real,0) /60) + 1) || ':00',
	substr(to_char(Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5,'000') ||
					   to_char((Trunc(trunc((LOCALTIMESTAMP - p.dt_nascimento) / 365)/5) * 5)+5,'000'),2,8),
	p.ie_sexo,
	b.cd_unidade_basica || ' ' || b.cd_unidade_compl,
	trunc(coalesce(dt_inicio_real,dt_inicio_prevista), 'year'),
	cd_procedimento_princ,
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'C'),1,255),
	substr(obter_especialidade_medico(a.cd_medico_cirurgiao, 'D'),1,255),
	substr(obter_valor_dominio(36,a.cd_tipo_anestesia),1,255),
	substr(obter_valor_dominio(65,a.ie_status_cirurgia),1,255),
	substr(obter_nome_setor(a.cd_setor_atendimento),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_pessoa_fisica, null),1,255),
	substr(obter_nome_convenio(a.cd_convenio),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_medico_cirurgiao, null),1,255),
	substr(obter_nome_pessoa_fisica(a.cd_medico_anestesista, null),1,255),
	substr(obter_desc_estrut_proc(null, null, null, a.cd_procedimento_princ, a.ie_origem_proced),1,255),
	Obter_Municipio_Convenio(c.nr_atendimento, 'C'),
	Obter_Municipio_Convenio(c.nr_atendimento, 'D'),
	coalesce(a.cd_estabelecimento,c.cd_estabelecimento),
	obter_empresa_estab(coalesce(a.cd_estabelecimento,c.cd_estabelecimento)),
	to_char(a.cd_procedimento_princ) || to_char(a.ie_origem_proced),
	obter_intervalo_minutos(obter_minutos_espera(dt_inicio_prevista,dt_inicio_real)),
	a.ie_sangue,
	to_char(a.nr_seq_proc_interno) || ' - ' || substr(OBTER_DESC_PROC_INTERNO(a.nr_seq_proc_interno),1,255),
	a.nr_seq_proc_interno,
	a.nr_seq_proced_niss,
	a.ie_asa_estado_paciente,
	substr(obter_valor_dominio(1287,a.ie_asa_estado_paciente),1,255),
	Obter_Convenio_Glosa_Atend(c.nr_atendimento),
	SUBSTR(obter_cod_mun_ibge_atend_ind(c.nr_atendimento),1,6),
	eis_obter_tipo_acomod_Atend(a.nr_atendimento,a.cd_convenio),
	substr(obter_dia_semana(coalesce(dt_inicio_real, dt_inicio_prevista)),1,30),
	to_char(coalesce(dt_inicio_real, dt_inicio_prevista),'d'),
	obter_tipo_convenio(cd_convenio),
	upper(substr(obter_nome_setor(a.cd_setor_atendimento),1,200) || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN null  ELSE ' - ' END  || CASE WHEN(b.cd_unidade_basica || ' '|| b.cd_unidade_compl)=' ' THEN  null  ELSE (b.cd_unidade_basica || ' '|| b.cd_unidade_compl) END ),
	LPAD(TO_CHAR(coalesce(a.dt_inicio_real, a.dt_inicio_prevista),'hh24'),2,0) || ':00',
	substr(obter_descricao_padrao('CIH_TIPO_CIRURGIA', 'DS_TIPO_CIRURGIA', cd_tipo_cirurgia),1,200),
	Obter_Se_Cir_Video(a.nr_cirurgia),
	substr(obter_valor_dominio(1901, a.ie_porte),1,12),
	coalesce(a.ie_porte,'0'),
	substr(obter_turno_cirurgia(a.dt_inicio_real,coalesce(a.cd_estabelecimento,c.cd_estabelecimento),'D'),1,15),
	substr(obter_valor_dominio(6,CASE WHEN coalesce(nr_min_duracao_real,0)=0 THEN 'N'  ELSE 'S' END ),1,5),
	a.ie_motivo_cancelamento,
	c.ie_clinica,
	substr(obter_desc_especialidade_proc(Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced)),1,200),
	substr(eis_se_ultra_dur_prev(a.nr_min_duracao_prev,coalesce(a.nr_min_duracao_real,0)),1,255),
	upper(substr(coalesce(sus_obter_complexidade_proced(a.cd_procedimento_princ, a.ie_origem_proced, 'D'), 'NÃ£o informado'),1,255)),
	upper(substr(eis_obter_desc_via_acesso_cir(a.nr_seq_via),1,255)),
	upper(substr(Obter_Porte_Proc_Anest_Cirur(a.nr_cirurgia, null),1,30)),
	a.nr_seq_interrupcao,
	Obter_Especialidade_Proced(a.cd_procedimento_princ, a.ie_origem_proced),
	coalesce(upper(substr(obter_categoria_convenio(a.cd_convenio,a.cd_categoria)||' - '||OBTER_DESC_CONVENIO(a.cd_convenio),1,255)),0),
		obter_dif_data(dt_inicio_prevista,dt_inicio_real,'CIR'),
	substr(a.ds_observacao,1,200),
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'P'),1,10),
	substr(eis_obter_dados_cirurgia(a.nr_cirurgia, 'A'),1,10),
	a.ie_reoperacao;

