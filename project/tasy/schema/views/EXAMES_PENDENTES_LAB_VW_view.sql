-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW exames_pendentes_lab_vw (nr_prescricao, cd_protocolo, nr_seq_protocolo, nr_sequencia, cd_procedimento, ds_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, ds_observacao, ie_origem_proced, ie_urgencia, ds_dado_clinico, ie_suspenso, cd_setor_atendimento, nr_atendimento, cd_medico, dt_prescricao, dt_liberacao, dt_liberacao_medico, ie_recem_nato, dt_entrada, cd_setor_paciente, nm_paciente, nm_paciente_sem_acento, dt_nascimento, dt_mestruacao, ie_sexo, qt_peso, nm_pessoa_responsavel, nr_cpf_resp, nr_cpf, nr_telefone_resp, nr_prontuario, cd_procedencia, ds_observacao_coleta, ds_senha, nm_medico, nr_cpf_medico, nr_crm, dt_resultado, hr_resultado, uf_crm, cd_convenio, qt_altura_cm, dt_coleta, cd_categoria, qt_dose, dt_ultima_dose, cd_usuario_convenio, dt_validade_carteira, nr_doc_convenio, ie_tipo_guia, ds_convenio, cd_cgc_conv, cd_regional_conv, cd_material_exame, ds_material_exame, cd_exame, nm_exame, ds_material_especial, ie_amostra_entregue, ds_horarios, nr_seq_exame, ds_endereco, nr_endereco, ds_complemento, ds_bairro, ds_municipio, sg_estado, nr_telefone, cd_cep, dt_prev_execucao, ds_setor_paciente, cd_unidade, vl_procedimento, ie_executar_leito, cd_recem_nato, nm_recem_nato, nr_seq_grupo, cd_estabelecimento, nr_seq_proc_interno, cd_interno_integracao, cd_exame_integracao, cd_material_integracao, nr_controle_exame, ds_medicamento_uso, nm_mae, ie_tipo_atendimento, cor_pele, nm_social, ds_classific_pa, cd_estabelecimento_filtro, nm_usuario_banco, ds_senha_fila, dt_inicio_atendimento, ds_email, ds_prescr_obs) AS SELECT DISTINCT
       a.nr_prescricao,
       a.cd_protocolo,
       a.nr_seq_protocolo,
       a.nr_sequencia,
       a.cd_procedimento,
       proc.ds_procedimento,
       a.qt_procedimento,
       a.dt_atualizacao,
       a.nm_usuario,
       a.ds_observacao,
       a.ie_origem_proced,
       a.ie_urgencia,
       a.ds_dado_clinico,
       a.ie_suspenso,
       a.cd_setor_atendimento,
       a.nr_atendimento,
       a.cd_medico,
       a.dt_prescricao,
       a.dt_liberacao,
       a.dt_liberacao_medico,
       a.ie_recem_nato,
       TO_CHAR(ap.dt_entrada, 'dd/mm/yyyy hh24:mi:ss') dt_entrada,
       apu.cd_setor_atendimento   cd_setor_paciente,
       CASE WHEN a.cd_recem_nato IS NULL THEN  obter_nome_pf(a.cd_pessoa_fisica)  ELSE substr(obter_nome_pf(a.cd_recem_nato), 1, 80)|| 'RN de '|| obter_nome_pf(a.cd_pessoa_fisica) END  nm_paciente,
       elimina_acentuacao(upper(CASE WHEN a.cd_recem_nato IS NULL THEN  obter_nome_pf(a.cd_pessoa_fisica)  ELSE substr(obter_nome_pf(a.cd_recem_nato), 1, 80)|| 'RN de '|| obter_nome_pf(a.cd_pessoa_fisica) END )) nm_paciente_sem_acento,
       obter_dados_pf(a.cd_pessoa_fisica, 'DN') dt_nascimento,
       TO_CHAR(a.dt_mestruacao, 'dd/mm/yyyy hh24:mi:ss') dt_mestruacao,
       obter_dados_pf(a.cd_pessoa_fisica, 'SE') ie_sexo,
       a.qt_peso,
       substr(obter_nome_pessoa_fisica(ap.cd_pessoa_responsavel, NULL), 1, 40) nm_pessoa_responsavel,
       CASE WHEN a.ie_env_cpf_resp_ws='S' THEN  obter_dados_pf(ap.cd_pessoa_responsavel, 'CPF') END  nr_cpf_resp,
       obter_dados_pf(a.cd_pessoa_fisica, 'CPF') nr_cpf,
       substr(obter_descricao_padrao('PESSOA_FISICA', 'NR_TELEFONE_CELULAR', ap.cd_pessoa_responsavel), 1, 20) nr_telefone_resp,
       obter_dados_pf(a.cd_pessoa_fisica, 'NP') nr_prontuario,
       ap.cd_procedencia,
       a.ds_observacao_coleta,
       ap.ds_senha,
       obter_nome_pf(med.cd_pessoa_fisica) nm_medico,
       obter_dados_pf(med.cd_pessoa_fisica, 'CPF') nr_cpf_medico,
       med.nr_crm,
       a.dt_resultado dt_resultado,
       a.hr_resultado hr_resultado,
       med.uf_crm,
       acc.cd_convenio,
       a.qt_altura_cm,
       TO_CHAR(lab_obter_data_coleta_amostra(a.nr_prescricao, a.nr_sequencia), 'dd/mm/yyyy hh24:mi:ss') dt_coleta,
       acc.cd_categoria,
       lab_obter_dados_pac_med_uso(a.cd_pessoa_fisica, 'Q') qt_dose,
       lab_obter_dados_pac_med_uso(a.cd_pessoa_fisica, 'D') dt_ultima_dose,
       acc.cd_usuario_convenio,
       acc.dt_validade_carteira,
       acc.nr_doc_convenio,
       acc.ie_tipo_guia,
       conv.ds_convenio,
       conv.cd_cgc cd_cgc_conv,
       conv.cd_regional cd_regional_conv,
       a.cd_material_exame,
       mel.ds_material_exame,
       el.cd_exame,
       el.nm_exame,
       a.ds_material_especial,
       coalesce(a.ie_amostra, 'N') ie_amostra_entregue,
       a.ds_horarios,
       a.nr_seq_exame,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'ds_endereco') ds_endereco,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'nr_endereco') nr_endereco,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'ds_complemento') ds_complemento,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'ds_bairro') ds_bairro,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'ds_municipio') ds_municipio,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'sg_estado') sg_estado,
       Lab_obter_dados_pac_prescricao(a.nr_prescricao,a.cd_pessoa_fisica) nr_telefone,
       obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'cd_cep') cd_cep,
       a.dt_prev_execucao,
       sa.ds_setor_atendimento   ds_setor_paciente,
       apu.cd_unidade_basica|| ' '|| cd_unidade_compl cd_unidade,
       CASE WHEN coalesce(a.ie_envia_vl_proced_ws, 'S')='S' THEN  obter_preco_procedimento(ap.cd_estabelecimento, acc.cd_convenio, acc.cd_categoria, a.dt_prescricao, a.cd_procedimento, a.ie_origem_proced, acc.cd_tipo_acomodacao, ap.ie_tipo_atendimento, apu.cd_setor_atendimento, a.cd_medico, NULL, acc.cd_usuario_convenio, acc.cd_plano_convenio, ap.ie_clinica, acc.cd_empresa, 'P')  ELSE '' END  vl_procedimento,
       a.ie_executar_leito,
       a.cd_recem_nato,
       substr(obter_nome_pf(a.cd_recem_nato), 1, 80) nm_recem_nato,
       el.nr_seq_grupo,
       coalesce(substr(obter_estab_integracao(a.cd_estabelecimento, 19), 1, 20), a.cd_estabelecimento) cd_estabelecimento,
       a.nr_seq_proc_interno,
       substr(obter_proc_interno(a.nr_seq_proc_interno, 'CI'), 1, 20) cd_interno_integracao,
       el.cd_exame_integracao    cd_exame_integracao,
       mel.cd_material_integracao,
       a.nr_controle_exame      nr_controle_exame,
       substr(obter_medic_hist_saude_atend(ap.nr_atendimento), 1, 2000) ds_medicamento_uso,
       substr(obter_compl_pf(a.cd_pessoa_fisica, 5, 'N'), 1, 255) nm_mae,
       ap.ie_tipo_atendimento,
       obter_dados_pf(a.cd_pessoa_fisica, 'CP') cor_pele,
       obter_dados_pf(a.cd_pessoa_fisica, 'NSOC') nm_social,
       substr(obter_triagem_atendimento(ap.nr_atendimento, 'C'), 1, 255) ds_classific_pa,
       a.cd_estabelecimento cd_estabelecimento_filtro,
       a.nm_usuario_banco nm_usuario_banco,
       a.ds_senha_fila ds_senha_fila,
       CASE WHEN a.ie_env_senha_ws='S' THEN  ap.dt_inicio_atendimento END  dt_inicio_atendimento,
       CASE WHEN a.ie_env_email_ws='S' THEN  obter_dados_compl_pf_data(a.cd_pessoa_fisica, 1, NULL, 'ds_email') END  ds_email,
       CASE WHEN a.ie_env_obs_ws='S' THEN  a.ds_prescr_obs END  ds_prescr_obs
FROM (SELECT DISTINCT
               pp2.nr_controle_exame,
               pp2.nr_prescricao,
               pp2.nr_sequencia,
               pp2.ie_amostra,
               TO_CHAR(pp2.dt_resultado, 'dd/mm/yyyy hh24:mi:ss') dt_resultado,
               TO_CHAR(pp2.dt_resultado, 'hh24:mi:ss') hr_resultado,
               pp2.dt_prev_execucao,
               pm2.nr_atendimento,
               pm2.dt_mestruacao,
               pm2.dt_liberacao_medico,
               pm2.qt_peso,
               pm2.ie_recem_nato,
               pm2.dt_prescricao,
               pp2.ie_se_necessario,
               pp2.nm_usuario,
               pp2.dt_atualizacao,
               pp2.ds_horarios,
               pp2.cd_protocolo,
               pp2.nr_seq_protocolo,
               pm2.cd_estabelecimento,
               pp2.ds_observacao_coleta,
               pp2.cd_setor_atendimento,
               pp2.ds_dado_clinico,
               pm2.dt_liberacao,
               pp2.ie_suspenso,
               pp2.ie_executar_leito,
               pp2.qt_procedimento,
               pp2.cd_material_exame,
               pp2.nr_seq_proc_interno,
               pp2.ie_urgencia,
               pp2.nr_seq_exame,
               pm2.cd_medico,
               pm2.cd_pessoa_fisica,
               pp2.cd_procedimento,
               pp2.ds_material_especial,
               pp2.ds_observacao,
               pm2.qt_altura_cm,
               pm2.cd_recem_nato,
               pp2.ie_origem_proced,
               lp2.ie_envia_vl_proced_ws,
               upper(sa2.nm_usuario_banco) nm_usuario_banco,
               CASE WHEN lp2.ie_env_senha_ws='S' THEN (                   select upper(substr(obter_letra_verifacao_senha(coalesce(psf.nr_seq_fila_senha_origem, psf.nr_seq_fila_senha)),1,10) || psf.cd_senha_gerada)                   from paciente_senha_fila psf                       inner join atendimento_paciente ap ON (ap.nr_seq_pac_senha_fila = psf.nr_sequencia)                   where ap.nr_atendimento = pm2.nr_atendimento)  ELSE null END  ds_senha_fila,
               lp2.ie_env_senha_ws ie_env_senha_ws,
               lp2.ie_env_email_ws,
               lp2.ie_env_obs_ws,
               pm2.ds_observacao ds_prescr_obs,
               lp2.ie_env_cpf_resp_ws
       from    prescr_medica pm2
       inner   join prescr_procedimento pp2 on pp2.nr_prescricao = pm2.nr_prescricao
       inner   join setor_atendimento   sa2 on pp2.cd_setor_atendimento = sa2.cd_setor_atendimento
       left    join lab_parametro       lp2 on pm2.cd_estabelecimento = lp2.cd_estabelecimento
       where   pp2.dt_integracao IS NULL
       and     pp2.cd_motivo_baixa = 0
       and     coalesce(pp2.ie_suspenso, 'N') = 'N'
       and ( coalesce(pm2.dt_liberacao_medico, pm2.dt_liberacao) > LOCALTIMESTAMP - coalesce(lp2.qt_dias_int_webs, 3) )
       and     pm2.dt_prescricao > LOCALTIMESTAMP - interval '30 days'
       and     pp2.nr_seq_exame IS NOT NULL) a
inner join atend_paciente_unidade     apu  on apu.nr_seq_interno = obter_atepacu_paciente(a.nr_atendimento, 'A')
inner join setor_atendimento          sa   on apu.cd_setor_atendimento = sa.cd_setor_atendimento
inner join procedimento               proc on a.cd_procedimento = proc.cd_procedimento and a.ie_origem_proced = proc.ie_origem_proced
inner join atend_categoria_convenio   acc  on acc.nr_atendimento = a.nr_atendimento
inner join convenio                   conv on acc.cd_convenio = conv.cd_convenio
left  join medico                     med  on a.cd_medico = med.cd_pessoa_fisica
left  join exame_laboratorio          el   on a.nr_seq_exame = el.nr_seq_exame
left  join material_exame_lab         mel  on a.cd_material_exame = mel.cd_material_exame
inner join atendimento_paciente       ap   on ap.nr_atendimento = a.nr_atendimento
left  join prescr_proc_hor            pph  on a.nr_prescricao = pph.nr_prescricao and a.nr_sequencia = pph.nr_seq_procedimento
where coalesce(el.ie_anatomia_patologica, 'N') <> 'S'
and   acc.dt_inicio_vigencia = (SELECT MAX(w.dt_inicio_vigencia)
                                FROM atend_categoria_convenio w
                                WHERE w.nr_atendimento = a.nr_atendimento)
    AND lab_valida_realiza_integracao(a.nr_prescricao, a.nr_sequencia) = 'S'
ORDER BY
    a.nr_atendimento,
    a.nr_prescricao;

