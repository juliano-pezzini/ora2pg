-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW sma_exp_rps_prefeitura_sp_v (tp_registro, nr_inscricao_municipal, ds_tipo_rps, cd_serie_nf, nr_nota_fiscal, dt_emissao, ie_situacao, ie_situacao_nf, vl_servico, vl_descontos, cd_servico, vl_aliquota, ie_iss_retido, ie_cpf_cnpj, cd_cpf_cnpj, nr_inscricao_munic_tomador, nr_inscricao_estad_tomador, nm_tomador, ds_tipo_logradouro, ds_endereco, nr_endereco, ds_complemento, ds_bairro, ds_municipio, sg_estado, cd_cep, ds_email, ds_servicos, ds_observacao, vl_total_servicos, vl_total_descontos, qt_linhas, nr_sequencia, cd_operacao_nf, cd_estabelecimento, ds_natureza_operacao, vl_deducoes, vl_total_deducoes, vl_nota_fiscal, vl_total_nota_fiscal, cd_pessoa_fisica) AS select	1					tp_registro,
	a.cd_inscricao_municipal			nr_inscricao_municipal, 
	''					ds_tipo_rps, 
	''					cd_serie_nf, 
	'0'					nr_nota_fiscal, 
	null					dt_emissao, 
	''					ie_situacao, 
	''					ie_situacao_nf, 
	0					vl_servico, 
	0					vl_descontos, 
	''					cd_servico, 
	0					vl_aliquota, 
	''					ie_iss_retido, 
	0					ie_cpf_cnpj, 
	''					cd_cpf_cnpj, 
	''					nr_inscricao_munic_tomador, 
	''					nr_inscricao_estad_tomador, 
	''					nm_tomador, 
	''					ds_tipo_logradouro, 
	''					ds_endereco, 
	''					nr_endereco, 
	''					ds_complemento, 
	''					ds_bairro, 
	''					ds_municipio, 
	''					sg_estado, 
	''					cd_cep, 
	''					ds_email, 
	' '					ds_servicos, 
	''					ds_observacao, 
	0					vl_total_servicos, 
	0					vl_total_descontos, 
	0					qt_linhas, 
	0					nr_sequencia, 
	0					cd_operacao_nf, 
	a.cd_estabelecimento, 
	''					ds_natureza_operacao, 
	0					vl_deducoes, 
	0					vl_total_deducoes, 
	0					vl_nota_fiscal, 
	0					vl_total_nota_fiscal, 
	''					cd_pessoa_fisica 
FROM	estabelecimento a 

union
 
select	2					tp_registro, 
	''					nr_inscricao_municipal, 
	'RPS'					ds_tipo_rps, 
	n.cd_serie_nf				cd_serie_nf, 
	n.nr_nota_fiscal				nr_nota_fiscal, 
	n.dt_emissao				dt_emissao, 
	CASE WHEN  n.ie_situacao=1 THEN  		CASE WHEN coalesce((	select	count(*) 				from	nota_fiscal_trib a, 					tributo c 				where	a.cd_tributo 	 = c.cd_tributo 				and	c.ie_tipo_tributo	= 'ISS' 				and 	a.nr_sequencia 	= n.nr_sequencia),0)=0 THEN 'I'  ELSE 'T' END  WHEN  n.ie_situacao=3 THEN  CASE WHEN n.ie_status_envio IS NULL THEN  				CASE WHEN coalesce((	select	count(*) 					from	nota_fiscal_trib a, 						tributo c 					where	a.cd_tributo 	 = c.cd_tributo 					and	c.ie_tipo_tributo	= 'ISS' 					and 	a.nr_sequencia 	= n.nr_sequencia),0)=0 THEN 'I'  ELSE 'T' END   ELSE 'C' END   ELSE 'C' END  ie_situacao, 
	n.ie_situacao				ie_situacao_nf, 
	CASE WHEN n.ie_situacao=1 THEN  n.vl_mercadoria WHEN n.ie_situacao=3 THEN  CASE WHEN n.ie_status_envio IS NULL THEN  n.vl_mercadoria  ELSE 0 END   ELSE 0 END  vl_servico, 
	n.vl_descontos				vl_descontos, 
	o.nr_codigo_serv_prest			cd_servico, 
	0					vl_aliquota, 
	CASE WHEN substr(obter_se_nf_retem_iss(n.nr_sequencia),1,1)='S' THEN '1'  ELSE '2' END  ie_iss_retido, 
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN 2  ELSE CASE WHEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) IS NULL THEN 3  ELSE 1 END  END  ie_cpf_cnpj, 
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN 	n.cd_cgc  ELSE substr(obter_cpf_pessoa_fisica(n.cd_pessoa_fisica),1,14) END  cd_cpf_cnpj, 
	 CASE WHEN elimina_acentuacao(elimina_caracteres_especiais(upper(substr(obter_dados_pf_pj(null,n.cd_cgc,'CI'),1,50))))='SAOPAULO' THEN  	substr(obter_dados_pf_pj(null,n.cd_cgc,'IM'),1,8)  ELSE '00000000' END  nr_inscricao_munic_tomador, 
	substr(obter_dados_pf_pj(null,n.cd_cgc,'IE'),1,20) nr_inscricao_estad_tomador, 
	substr(obter_nome_pf_pj(n.cd_pessoa_fisica,n.cd_cgc),1,75) nm_tomador, 
	'Rua'					ds_tipo_logradouro, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'E'),1,40)='N/D' THEN  			substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'EN'),1,50)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'E'),1,40) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'EN'),1,50) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'EN'),1,50)) ds_endereco, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'NR'),1,10)='N/D' THEN  			substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'),1,10)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'NR'),1,10) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'NR'),1,10) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'),1,10)) nr_endereco, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'CO'),1,30)='N/D' THEN  			substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,30)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'CO'),1,30) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CO'),1,30) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,30)) ds_complemento, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'B'),1,30)='N/D' THEN  			substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,30)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'B'),1,30) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'B'),1,30) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,30)) ds_bairro, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'CI'),1,50)='N/D' THEN  			substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'CI'),1,50) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CI'),1,50) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50)) ds_municipio, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'UF'),1,2)='N/D' THEN  			substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'UF'),1,2) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'UF'),1,2) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2)) sg_estado, 
	coalesce(to_char(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'CEP'),1,15)='N/D' THEN  			to_char(somente_numero(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))  ELSE substr(obter_compl_pj(n.cd_cgc,1,'CEP'),1,15) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CEP'),1,15) END ), 
		to_char(somente_numero(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))) cd_cep, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN substr(obter_compl_pj(n.cd_cgc,1,'M'),1,80)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'M'),1,60) END , 
		substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'M'),1,60)) ds_email, 
	substr(CASE WHEN nr_seq_protocolo IS NULL THEN  	 substr((select	substr(obter_nome_pf(a.cd_pessoa_fisica),1,150) 		from	atendimento_paciente a, 			conta_paciente c 		where	a.nr_atendimento = c.nr_atendimento 		and	c.nr_interno_conta = n.nr_interno_conta) || '  ' || 		(select	substr(obter_dados_pf(a.cd_pessoa_fisica,'CPF'),1,11) 		from	atendimento_paciente a, 			conta_paciente c 		where	a.nr_atendimento = c.nr_atendimento 		and	c.nr_interno_conta = n.nr_interno_conta) || ' |' || 		substr(Obter_select_concatenado( 			'select decode(a.cd_material, null, 
				substr(obter_descricao_procedimento(a.cd_procedimento, ie_origem_proced),1,240), 
					substr(obter_desc_material(a.cd_material),1,100)) || chr(32) || chr(47) || chr(32) || b.ds_observacao 
			from nota_fiscal_item a, nota_fiscal b where a.nr_sequencia = b.nr_sequencia and a.nr_sequencia = ' || n.nr_sequencia,null,'|'),1,1000) || '  ' || 		'Per√≠odo de fechamento ' || 		(select	c.dt_periodo_inicial 		from	atendimento_paciente a, 			conta_paciente c 		where	a.nr_atendimento = c.nr_atendimento 		and	c.nr_interno_conta = n.nr_interno_conta) || ' a ' || 		(select	c.dt_periodo_final 		from	atendimento_paciente a, 			conta_paciente c 		where	a.nr_atendimento = c.nr_atendimento 		and	c.nr_interno_conta = n.nr_interno_conta),1,1000)  ELSE substr(Obter_select_concatenado( 		'select decode(a.cd_material, null, 
			substr(obter_descricao_procedimento(a.cd_procedimento, ie_origem_proced),1,240), 
			substr(obter_desc_material(a.cd_material),1,100)) || chr(32) || chr(47) || chr(32) || b.ds_observacao 
		from nota_fiscal_item a, nota_fiscal b where a.nr_sequencia = b.nr_sequencia and a.nr_sequencia = ' || n.nr_sequencia,null,'|'),1,1000) END  || 
	substr(Obter_select_concatenado( 
		' select x.ds_tributo || chr(32) || chr(47) || chr(32) || y.vl_tributo || chr(32) || chr(47) || chr(32) || y.tx_tributo 
		from tributo x, nota_fiscal_trib y where x.cd_tributo = y.cd_tributo and x.ie_tipo_tributo <> ' || chr(39) || 'ISS' || chr(39) || 
		' and y.vl_tributo <> 0 and y.nr_sequencia = ' || n.nr_sequencia,null,'|') || '||' || 
		(select	max(v.dt_vencimento) 
		from	nota_fiscal_venc v 
		where	v.nr_sequencia = n.nr_sequencia),1,1000),1,1000) ds_servicos, 
	n.ds_observacao				ds_observacao, 
	0					vl_total_servicos, 
	0					vl_total_descontos, 
	0					qt_linhas, 
	n.nr_sequencia				nr_sequencia, 
	n.cd_operacao_nf 				cd_operacao_nf, 
	n.cd_estabelecimento, 
	substr(obter_desc_natureza_operacao(n.cd_natureza_operacao),1,100) ds_natureza_operacao, 
	coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0) vl_deducoes, 
	0					vl_total_deducoes, 
	CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END  vl_nota_fiscal, 
	0					vl_total_nota_fiscal, 
	n.cd_pessoa_fisica 
from	operacao_nota o, 
	nota_fiscal n 
where	exists ( 
	select	1 
	from	w_nota_fiscal x 
	where	x.nr_seq_nota_fiscal = n.nr_sequencia) 
and	o.cd_operacao_nf = n.cd_operacao_nf 

union
 
select	9					tp_registro, 
	''					nr_inscricao_municipal, 
	'RPS'					ds_tipo_rps, 
	''					cd_serie_nf, 
	'0'					nr_nota_fiscal, 
	null					dt_emissao, 
	''					ie_situacao, 
	''					ie_situacao_nf, 
	0					vl_servico, 
	0					vl_descontos, 
	''					cd_servico, 
	0					vl_aliquota, 
	''					ie_iss_retido, 
	0					ie_cpf_cnpj, 
	''					cd_cpf_cnpj, 
	''					nr_inscricao_munic_tomador, 
	''					nr_inscricao_estad_tomador, 
	''					nm_tomador, 
	''					ds_tipo_logradouro, 
	''					ds_endereco, 
	''					nr_endereco, 
	''					ds_complemento, 
	''					ds_bairro, 
	''					ds_municipio, 
	''					sg_estado, 
	''					cd_cep, 
	''					ds_email, 
	' '					ds_servicos, 
	''					ds_observacao, 
	sum(CASE WHEN n.ie_situacao=1 THEN  n.vl_mercadoria WHEN n.ie_situacao=3 THEN  CASE WHEN n.ie_status_envio IS NULL THEN  n.vl_mercadoria  ELSE 0 END   ELSE 0 END ) vl_total_servicos, 
	sum(n.vl_descontos)			vl_total_descontos, 
	0					qt_linhas, 
	0					nr_sequencia, 
	0 					cd_operacao_nf, 
	n.cd_estabelecimento, 
	''					ds_natureza_operacao, 
	0					vl_deducoes, 
	sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0)) vl_total_deducoes, 
	0					vl_nota_fiscal, 
	sum(coalesce(CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END ,0)) vl_total_nota_fiscal, 
	''					cd_pessoa_fisica 
from	nota_fiscal n 
where	exists ( 
	select	1 
	from	w_nota_fiscal x 
	where	x.nr_seq_nota_fiscal = n.nr_sequencia) 
group by n.cd_estabelecimento;

