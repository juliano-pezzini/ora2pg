-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW exp_nfse_brusque_v (ds_registro, tp_servico, tp_documento, nr_documento, dt_competencia, tp_pessoa, pt_servico, tp_pessoa2, tm_servico, dt_emissao, vl_contabil, st_utilizacao_doc, opt_simples_nacional, obs_doc, cpf_cnpj_prestador, tp_pf_pj, cpf_cnpj_tomador, cod_item_lista, aliquota, vl_tributavel, deducao, vl_retido, local_prest_servico, cod_situacao, tributa_iss, cpf_cnpj_pessoa, nm_razaosocial, ds_logradouro, nr_res_estab, complemento_endereco, bairro, nm_cidade, uf, cod_endereco_postal, fone_comercial, ds_fax, cd_estabelecimento, nr_sequencia, ie_tipo_nota, cd_operacao_nf) AS SELECT DISTINCT
	a.ds_registro, 
	a.tp_servico, 
	a.tp_documento, 
	a.nr_documento, 
	a.dt_competencia, 
	a.tp_pessoa, 
	a.pt_servico, 
	a.tp_pessoa2, 
	a.tm_servico, 
	a.dt_emissao, 
	a.vl_contabil, 
	a.st_utilizacao_doc, 
	a.opt_simples_nacional, 
	a.obs_doc, 
	a.cpf_cnpj_prestador, 
	a.tp_pf_pj, 
	a.cpf_cnpj_tomador, 
	a.cod_item_lista, 
	a.aliquota, 
	a.vl_tributavel, 
	a.deducao, 
	a.vl_retido, 
	a.local_prest_servico, 
	a.cod_situacao, 
	a.tributa_iss, 
	a.cpf_cnpj_pessoa, 
	a.nm_razaosocial, 
	a.ds_logradouro, 
	a.nr_res_estab, 
	a.complemento_endereco, 
	a.bairro, 
	a.nm_cidade, 
	a.uf, 
	a.cod_endereco_postal, 
	a.fone_comercial, 
	a.ds_fax, 
	a.cd_estabelecimento, 
	a.nr_sequencia, 
	a.ie_tipo_nota, 
	a.cd_operacao_nf 
FROM (	SELECT DISTINCT 
	10								ds_registro, 
	CASE WHEN OBTER_ENTRADA_SAIDA_NF(nr_sequencia)='S' THEN '1'  ELSE '2' END 	tp_servico, 
	1	tp_documento, 
	n.nr_nota_fiscal	  						nr_documento, 
	TO_CHAR(n.dt_emissao,'MM/YYYY')			 		dt_competencia, 
	'J'								tp_pessoa, 
	CASE WHEN n.cd_cgc_emitente IS NULL THEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica)  ELSE n.cd_cgc_emitente END  pt_servico, 
	CASE WHEN n.cd_cgc IS NULL THEN 'F'  ELSE 'J' END 					tp_pessoa2, 
	CASE WHEN n.cd_cgc IS NULL THEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica)  ELSE n.cd_cgc END 	tm_servico, 
	TO_CHAR(n.dt_emissao,'DD/MM/YYYY')				dt_emissao, 
	LPAD(campo_mascara(n.vl_mercadoria,2),18,0)			vl_contabil, 
	-- DECODE(ie_situacao,'E','1','E','C','9','C','X','9','C','N','9','C')  	st_utilizacao_doc, 
	CASE WHEN n.ie_situacao=9 THEN  'C' WHEN n.ie_situacao=1 THEN  'E' WHEN n.ie_situacao=2 THEN  'C' WHEN n.ie_situacao=3 THEN  'C'  ELSE 'N' END 	 st_utilizacao_doc, 
	nfse_obter_regra('OSN',n.cd_estabelecimento)			opt_simples_nacional, 
	REPLACE(REPLACE(n.ds_observacao, CHR(13), ' '),CHR(10), ' ')	obs_doc, 
	''								cpf_cnpj_prestador, 
	''								tp_pf_pj, 
	''								cpf_cnpj_tomador, 
	''								cod_item_lista, 
	''								aliquota, 
	''								vl_tributavel, 
	''								deducao, 
	''								vl_retido, 
	''				                local_prest_servico, 
	''								cod_situacao, 
	''  								tributa_iss, 
	''		 						cpf_cnpj_pessoa, 
	''								nm_razaosocial, 
	'' 								ds_logradouro, 
	''								nr_res_estab, 
	''								complemento_endereco, 
	''								bairro, 
	''								nm_cidade, 
	''								uf, 
	NULL								cod_endereco_postal, 
	''								fone_comercial, 
	''								ds_fax, 
	n.cd_estabelecimento, 
	n.nr_sequencia, 
	n.ie_tipo_nota, 
	o.cd_operacao_nf 
FROM 	nota_fiscal n, 
	operacao_nota o 
WHERE 	o.cd_operacao_nf = n.cd_operacao_nf 
AND	o.ie_servico = 'S' 
AND	n.ie_situacao = '1' 
AND (coalesce(obter_dados_pf_pj(cd_pessoa_fisica,NULL,'UF'),'SC') <>'IN' 
OR 	coalesce(obter_dados_pf_pj(NULL,cd_cgc,'UF'),'SC') <> 'IN') 

UNION
 
SELECT	DISTINCT 
	10									ds_registro, 
	''								  	tp_servico, 
	NULL									tp_documento, 
	n.nr_nota_fiscal	  							nr_documento, 
	TO_CHAR(n.dt_emissao,'MM/YYYY')			 						dt_competencia, 
	''									tp_pessoa, 
	''  									pt_servico, 
	''									tp_pessoa2, 
	NULL									tm_servico, 
	TO_CHAR(n.dt_emissao,'DD/MM/YYYY')					dt_emissao, 
	''									vl_contabil, 
	CASE WHEN n.ie_situacao=9 THEN  'C' WHEN n.ie_situacao=1 THEN  'E' WHEN n.ie_situacao=2 THEN  'C' WHEN n.ie_situacao=3 THEN  'C'  ELSE 'N' END  								    st_utilizacao_doc, 
	''									opt_simples_nacional, 
	''									obs_doc, 
	''									cpf_cnpj_prestador, 
	''									tp_pf_pj, 
	''									cpf_cnpj_tomador, 
	''									cod_item_lista, 
	''									aliquota, 
	''									vl_tributavel, 
	''									deducao, 
	''									vl_retido, 
	''				                    local_prest_servico, 
	''									cod_situacao, 
	''  									tributa_iss, 
	''		 						    cpf_cnpj_pessoa, 
	''									nm_razaosocial, 
	'' 									ds_logradouro, 
	''									nr_res_estab, 
	''									complemento_endereco, 
	''									bairro, 
	''									nm_cidade, 
	''									uf, 
	NULL									cod_endereco_postal, 
	''									fone_comercial, 
	''									ds_fax, 
	n.cd_estabelecimento, 
	n.nr_sequencia, 
	n.ie_tipo_nota, 
	o.cd_operacao_nf 
FROM 	nota_fiscal n, 
	operacao_nota o 
WHERE 	o.cd_operacao_nf = n.cd_operacao_nf 
AND	o.ie_servico = 'S' 
AND	n.ie_situacao = '1' 
AND (coalesce(obter_dados_pf_pj(cd_pessoa_fisica,NULL,'UF'),'SC') ='IN' 
OR 	coalesce(obter_dados_pf_pj(NULL,cd_cgc,'UF'),'SC') = 'IN')) a 

UNION
 
SELECT	DISTINCT 
	20									ds_registro, 
	CASE WHEN OBTER_ENTRADA_SAIDA_NF(nr_sequencia)='S' THEN '1'  ELSE '2' END 		tp_servico, 
	1									tp_documento, 
	n.nr_nota_fiscal	  							nr_documento, 
	TO_CHAR(n.dt_emissao,'MM/YYYY')			 						dt_competencia, 
	'J'									tp_pessoa, 
	''  									pt_servico, 
	''									tp_pessoa2, 
	NULL									tm_servico, 
	TO_CHAR(n.dt_emissao,'DD/MM/YYYY')					dt_emissao, 
	''									vl_contabil, 
	CASE WHEN n.ie_situacao=9 THEN  'C' WHEN n.ie_situacao=1 THEN  'E' WHEN n.ie_situacao=2 THEN  'C' WHEN n.ie_situacao=3 THEN  'C'  ELSE 'N' END  		 st_utilizacao_doc, 
	''									opt_simples_nacional, 
	''									obs_doc, 
	CASE WHEN n.cd_cgc_emitente IS NULL THEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica)  ELSE n.cd_cgc_emitente END  cpf_cnpj_prestador, 
	CASE WHEN n.cd_cgc IS NULL THEN 'F'  ELSE CASE WHEN obter_dados_pf_pj(NULL,n.cd_cgc,'P')=168 THEN 'F'  ELSE 'J' END  END 	tp_pf_pj, 
	CASE WHEN n.cd_cgc IS NULL THEN coalesce(obter_cpf_pessoa_fisica(n.cd_pessoa_fisica),'00000000000')  ELSE cd_cgc END  cpf_cnpj_tomador, 
	/* 
	DECODE(n.cd_cgc,NULL,NVL(obter_dados_pf_pj(n.cd_pessoa_fisica,NULL,'UF'),'SC'),'IN','',obter_cpf_pessoa_fisica(n.cd_pessoa_fisica), 
	    NVL(obter_dados_pf_pj(NULL,n.cd_cgc,'UF'),'SC'),'IN','',n.cd_cgc) cpf_cnpj_tomador, 
	*/
 
	obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'), obter_procedimento_nfse(n.nr_sequencia,'O')), 'CD') cod_item_lista, 
	'002.00'								aliquota, 
	lpad(campo_mascara(obter_valor_item_nf(n.nr_sequencia,'VT'),2),18,0)				vl_tributavel, 
	LPAD(campo_mascara('0',2),18,0)			deducao, 
	lpad(campo_mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia,'V','ISS'),2),18,0)		vl_retido, 
	obter_tom_municipio_ibge(coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CDM'))),1,25), '0'))	local_prest_servico, 
	'07'									cod_situacao, 
	obter_se_nf_retem_iss(n.nr_sequencia)|| ';'				tributa_iss, 
	''		 							cpf_cnpj_pessoa, 
	''									nm_razaosocial, 
	'' 									ds_logradouro, 
	''									nr_res_estab, 
	''								    complemento_endereco, 
	''									bairro, 
	''									nm_cidade, 
	''									uf, 
	NULL									cod_endereco_postal, 
	''									fone_comercial, 
	''									ds_fax, 
	n.cd_estabelecimento, 
	n.nr_sequencia, 
	n.ie_tipo_nota, 
	o.cd_operacao_nf 
FROM 	nota_fiscal n, 
	operacao_nota o 
WHERE	o.cd_operacao_nf = n.cd_operacao_nf 
AND	o.ie_servico = 'S' 
AND	n.ie_situacao = '1' 

UNION
 
SELECT	DISTINCT 
	30							ds_registro, 
	''							tp_servico, 
	null							tp_documento, 
	''	  					nr_documento, 
	TO_CHAR(n.dt_emissao,'MM/YYYY')				dt_competencia, 
	CASE WHEN n.cd_cgc IS NULL THEN 'F'  ELSE 'J' END 				tp_pessoa, 
	''	  						pt_servico, 
	''							tp_pessoa2, 
	NULL							tm_servico, 
	TO_CHAR(n.dt_emissao,'DD/MM/YYYY')			dt_emissao, 
	''							vl_contabil, 
	CASE WHEN n.ie_situacao=9 THEN  'C' WHEN n.ie_situacao=1 THEN  'E' WHEN n.ie_situacao=2 THEN  'C' WHEN n.ie_situacao=3 THEN  'C'  ELSE 'N' END 						st_utilizacao_doc, 
	''							opt_simples_nacional, 
	''							obs_doc, 
	''							cpf_cnpj_prestador, 
	''							tp_pf_pj, 
	''							cpf_cnpj_tomador, 
	''							cod_item_lista, 
	''							aliquota, 
	''							vl_tributavel, 
	NULL							deducao, 
	''							vl_retido, 
	''					  	    local_prest_servico, 
	''							cod_situacao, 
	''							tributa_iss, 
	coalesce(CASE WHEN n.cd_cgc IS NULL THEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica)  ELSE n.cd_cgc END ,'00000000000000') cpf_cnpj_pessoa, 
	CASE WHEN n.cd_cgc IS NULL THEN obter_nome_pf(n.cd_pessoa_fisica)  ELSE obter_dados_pf_pj(null,n.cd_cgc,'N') END  nm_razaosocial, 
	/*obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'N')			nm_razaosocial,*/
 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'R') 			ds_logradouro, 
	coalesce(obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'NR'),'SN')		nr_res_estab, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'CO')			complemento_endereco, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'B')			bairro, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'CI')			nm_cidade, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'UF')			uf, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'CEP')			cod_endereco_postal, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'T')			fone_comercial, 
	obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'FAX')			ds_fax, 
	n.cd_estabelecimento, 
	n.nr_sequencia, 
	n.ie_tipo_nota, 
	o.cd_operacao_nf	 
FROM 	nota_fiscal n, 
	operacao_nota o 
WHERE 	o.ie_servico = 'S' 
AND	n.ie_situacao = '1' 
AND 	o.cd_operacao_nf = n.cd_operacao_nf;

