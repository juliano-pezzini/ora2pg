-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW eis_banco_sangue_doadores_v (ie_tipo, qt_1, qt_2, dt_referencia, ie_tipo_sangue, ie_fator_rh, ds_tipo_sangue, pr_coleta, nr_doacao, ds_doacao, ie_avaliacao_final, ds_sexo, idade, dt_coleta, ds_estabelecimento, cd_estabelecimento) AS select 	1 ie_tipo,
	count(*) qt_1, /* Doadores */
	0 qt_2,
	trunc(a.dt_doacao) dt_referencia,
	b.ie_tipo_sangue,
	b.ie_fator_rh,
	b.ie_tipo_sangue||b.ie_fator_rh ds_tipo_sangue,
	OBTER_INTERVALO_MINUTOS(coalesce(obter_min_entre_datas(a.dt_triagem,a.dt_coleta,null),0)) pr_coleta,
	CASE WHEN obter_se_primeira_doacao(a.cd_pessoa_fisica,0)='S' THEN wheb_mensagem_pck.GET_TEXTO(1061181)  ELSE wheb_mensagem_pck.GET_TEXTO(1061180) END  nr_doacao,
	CASE WHEN obter_se_primeira_doacao(a.cd_pessoa_fisica,0)='S' THEN wheb_mensagem_pck.GET_TEXTO(1061181)  ELSE wheb_mensagem_pck.GET_TEXTO(1061180) END  ds_doacao,
	CASE WHEN a.ie_avaliacao_final='A' THEN wheb_mensagem_pck.GET_TEXTO(1061170)  ELSE wheb_mensagem_pck.GET_TEXTO(1061171) END  ie_avaliacao_final,
	CASE WHEN b.ie_sexo='M' THEN wheb_mensagem_pck.GET_TEXTO(1061172)  ELSE CASE WHEN b.ie_sexo='F' THEN wheb_mensagem_pck.GET_TEXTO(1061173)  ELSE wheb_mensagem_pck.GET_TEXTO(1061175) END  END  ds_sexo,
	coalesce(obter_idade(b.dt_nascimento,LOCALTIMESTAMP,'A'),wheb_mensagem_pck.GET_TEXTO(1061179)) idade,
	a.dt_coleta,
	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80) ds_estabelecimento,
	a.cd_estabelecimento
FROM	san_doacao a,
	pessoa_fisica b
where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
group by trunc(a.dt_doacao),
	a.dt_coleta,
	b.ie_tipo_sangue,
	b.ie_fator_rh,
	OBTER_INTERVALO_MINUTOS(coalesce(obter_min_entre_datas(a.dt_triagem,a.dt_coleta,null),0)),
	CASE WHEN obter_se_primeira_doacao(a.cd_pessoa_fisica,0)='S' THEN wheb_mensagem_pck.GET_TEXTO(1061181)  ELSE wheb_mensagem_pck.GET_TEXTO(1061180) END ,
	CASE WHEN a.ie_avaliacao_final='A' THEN wheb_mensagem_pck.GET_TEXTO(1061170)  ELSE wheb_mensagem_pck.GET_TEXTO(1061171) END ,
	CASE WHEN b.ie_sexo='M' THEN wheb_mensagem_pck.GET_TEXTO(1061172)  ELSE CASE WHEN b.ie_sexo='F' THEN wheb_mensagem_pck.GET_TEXTO(1061173)  ELSE wheb_mensagem_pck.GET_TEXTO(1061175) END  END ,
	b.ie_tipo_sangue||b.ie_fator_rh,
	coalesce(obter_idade(b.dt_nascimento,LOCALTIMESTAMP,'A'),wheb_mensagem_pck.GET_TEXTO(1061179)),
	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80),
	a.cd_estabelecimento

union

select 	2 ie_tipo,
	0 qt_1,
	count(*) qt_2,
	trunc(a.dt_doacao) dt_referencia,
	b.ie_tipo_sangue,
	b.ie_fator_rh,
	b.ie_tipo_sangue||b.ie_fator_rh ds_tipo_sangue,
	OBTER_INTERVALO_MINUTOS(coalesce(obter_min_entre_datas(a.dt_triagem,a.dt_coleta,null),0)) pr_coleta,
	CASE WHEN obter_se_primeira_doacao(a.cd_pessoa_fisica,0)='S' THEN wheb_mensagem_pck.GET_TEXTO(1061181)  ELSE wheb_mensagem_pck.GET_TEXTO(1061180) END  nr_doacao,
	CASE WHEN obter_se_primeira_doacao(a.cd_pessoa_fisica,0)='S' THEN wheb_mensagem_pck.GET_TEXTO(1061181)  ELSE wheb_mensagem_pck.GET_TEXTO(1061180) END  ds_doacao,
	CASE WHEN a.ie_avaliacao_final='A' THEN wheb_mensagem_pck.GET_TEXTO(1061170)  ELSE wheb_mensagem_pck.GET_TEXTO(1061171) END  ie_avaliacao_final,
	CASE WHEN b.ie_sexo='M' THEN wheb_mensagem_pck.GET_TEXTO(1061172)  ELSE CASE WHEN b.ie_sexo='F' THEN wheb_mensagem_pck.GET_TEXTO(1061173)  ELSE wheb_mensagem_pck.GET_TEXTO(1061175) END  END ,
	coalesce(obter_idade(b.dt_nascimento,LOCALTIMESTAMP,'A'),wheb_mensagem_pck.GET_TEXTO(1061179)) idade,
	a.dt_coleta,
	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80) ds_estabelecimento,
	a.cd_estabelecimento
from	san_doacao a,
	pessoa_fisica b
where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
and 	exists (select 1
		from 	san_exame c,
			san_exame_realizado d,
			san_exame_lote e
		where	d.nr_seq_exame = c.nr_sequencia
		and	e.nr_sequencia = d.nr_seq_exame_lote
		and	e.nr_seq_doacao = a.nr_sequencia
		and 	c.ie_exige_senha = 'S'
		and (d.vl_resultado is null and
			coalesce(d.ds_resultado,'X') <> wheb_mensagem_pck.GET_TEXTO(309096) and
			coalesce(d.ds_resultado,'X') <> wheb_mensagem_pck.GET_TEXTO(309101))
		and	SAN_OBTER_SE_EXAMES_OK(d.nr_seq_exame_lote,0) > 0)
group by trunc(a.dt_doacao),
	a.dt_coleta,
	b.ie_tipo_sangue,
	b.ie_fator_rh,
	OBTER_INTERVALO_MINUTOS(coalesce(obter_min_entre_datas(a.dt_triagem,a.dt_coleta,null),0)),
	CASE WHEN obter_se_primeira_doacao(a.cd_pessoa_fisica,0)='S' THEN wheb_mensagem_pck.GET_TEXTO(1061181)  ELSE wheb_mensagem_pck.GET_TEXTO(1061180) END ,
	CASE WHEN a.ie_avaliacao_final='A' THEN wheb_mensagem_pck.GET_TEXTO(1061170)  ELSE wheb_mensagem_pck.GET_TEXTO(1061171) END ,
	CASE WHEN b.ie_sexo='M' THEN wheb_mensagem_pck.GET_TEXTO(1061172)  ELSE CASE WHEN b.ie_sexo='F' THEN wheb_mensagem_pck.GET_TEXTO(1061173)  ELSE wheb_mensagem_pck.GET_TEXTO(1061175) END  END ,
	b.ie_tipo_sangue||b.ie_fator_rh,
	coalesce(obter_idade(b.dt_nascimento,LOCALTIMESTAMP,'A'),wheb_mensagem_pck.GET_TEXTO(1061179)),
	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80),
	a.cd_estabelecimento;

