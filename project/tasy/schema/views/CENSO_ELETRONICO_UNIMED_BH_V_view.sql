-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW censo_eletronico_unimed_bh_v (cd_prestador, nr_atendimento, cd_bene, nm_bene, sexo_bene, dt_nasc_bene, cd_senha, tp_internacao, dt_entrada, ie_clinica, ie_regime_internacao, ds_acomodacao, dt_hr_saida_internacao, ie_tipo_saida, dt_nascimento, ie_gestacao, ie_aborto, ie_transtorno_gestacao, ie_complic_puerperio, ie_tipo_parto, qt_semanas, dt_nascimento_rn, qt_nasc_vivos, qt_nasc_vivo_prematuro, qt_nasc_mortos, ds_local_nasc, ds_complic_neo, qt_peso_recem_nasc, qt_nota_recem_nasc, ds_situacao_recem_nasc, dt_hr_obito_recem_nasc, ds_logradouro, nr_residencia, ds_complemento, ds_bairro, cd_cep, nm_cidade, ds_sg_estado, ie_tipo_tel, nr_tele_cel, cd_convenio) AS select 	distinct k.cd_interno cd_prestador,
	a.nr_atendimento nr_atendimento, 
	b.cd_usuario_convenio cd_bene, 
	substr(obter_nome_pf(a.cd_pessoa_fisica),1,40) nm_bene , 
	substr(obter_sexo_pf(a.cd_pessoa_fisica,'C'),1,1) Sexo_bene, 
	obter_data_nascto_pf(a.cd_pessoa_fisica) dt_nasc_bene,	 
	b.cd_senha cd_senha, 
	substr(obter_tipo_carater_inter_sus(a.ie_carater_inter_sus),1,2) tp_internacao, 
	a.dt_entrada dt_entrada,	 
	 a.ie_clinica ie_clinica,	 
	'1' ie_regime_internacao , 
	b.cd_tipo_acomodacao ds_acomodacao, 
	m.dt_saida_unidade dt_hr_saida_internacao,	 
	a.cd_motivo_alta ie_tipo_saida, 
	e.dt_nascimento, -- Dalcastagne em 07/04/2008 OS 88587 
	CASE WHEN c.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN c.qt_gestacoes IS NULL THEN 'N'  ELSE 'S' END  END  ie_gestacao,	 
	CASE WHEN c.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN c.qt_abortos IS NULL THEN 'N'  ELSE 'S' END  END  ie_aborto, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN d.ie_tipo_nascimento=6 THEN 'S'  ELSE 'N' END  END  ie_transtorno_gestacao,	 
	CASE WHEN i.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN i.ds_complicacao IS NULL THEN 'N'  ELSE 'S' END  END  ie_complic_puerperio, 
	CASE WHEN c.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN c.ie_parto_normal='N' THEN CASE WHEN c.ie_parto_cesaria='S' THEN 'C' END   ELSE 'N' END  END  ie_tipo_parto,	 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE d.qt_sem_ig END  qt_semanas, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE d.dt_nascimento END  dt_nascimento_rn, -- Dalcastagne em 07/04/2008 OS 88587 
	CASE WHEN c.nr_atendimento IS NULL THEN ''  ELSE c.qt_nasc_vivos END  qt_nasc_vivos, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN d.ie_tipo_nascimento=3 THEN 1  ELSE 0 END  END  qt_nasc_vivo_prematuro, 
	CASE WHEN c.nr_atendimento IS NULL THEN ''  ELSE c.qt_natimortos END  qt_nasc_mortos , 
	CASE WHEN c.nr_atendimento IS NULL THEN ''  ELSE c.ie_local_nascimento END  ds_local_nasc, 
	CASE WHEN h.nr_atendimento IS NULL THEN ''  ELSE CASE WHEN h.ds_complicacao IS NULL THEN 'N'  ELSE 'S' END  END  ds_complic_neo, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE d.qt_peso END  qt_peso_recem_nasc, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE qt_apgar_prim_min END  qt_nota_recem_nasc, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE d.ie_situacao_rn END  ds_situacao_recem_nasc, 
	CASE WHEN d.nr_atendimento IS NULL THEN ''  ELSE d.dt_obito END  dt_hr_obito_recem_nasc, 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'EN'),1,60) ds_logradouro , 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'NR'),1,6) nr_residencia, 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CO'),1,20) ds_complemento, 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'B'),1,30) ds_bairro , 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CEP'),1,15) cd_cep, 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'CI'),1,40) nm_cidade, 
	substr(obter_compl_pf(a.cd_pessoa_fisica,1,'UF'),1,2) ds_sg_estado, 
	CASE WHEN f.nr_telefone IS NULL THEN CASE WHEN e.nr_telefone_celular IS NULL THEN null  ELSE 'C' END   ELSE 'F' END  ie_tipo_tel, 
	lpad(campo_numerico(substr(to_char(somente_numero(CASE WHEN f.nr_telefone IS NULL THEN CASE WHEN e.nr_telefone_celular IS NULL THEN null  ELSE e.nr_telefone_celular END   ELSE f.nr_telefone END )),1,11)),11,0) nr_tele_cel, 
	j.cd_convenio 
FROM atend_paciente_unidade m, convenio_estabelecimento k, convenio j, compl_pessoa_fisica f, pessoa_fisica e, atend_categoria_convenio b, atendimento_paciente a
LEFT OUTER JOIN parto c ON (a.nr_atendimento = c.nr_atendimento)
LEFT OUTER JOIN nascimento d ON (a.nr_atendimento = d.nr_atendimento)
LEFT OUTER JOIN nascimento_evento h ON (a.nr_atendimento = h.nr_atendimento)
LEFT OUTER JOIN parto_eventos i ON (a.nr_atendimento = i.nr_atendimento)
WHERE j.cd_convenio = b.cd_convenio   and a.cd_pessoa_fisica = e.cd_pessoa_fisica and e.cd_pessoa_fisica = f.cd_pessoa_fisica and k.cd_convenio = j.cd_convenio and a.nr_atendimento = b.nr_atendimento   and obter_se_atend_internado(a.nr_atendimento) = 'S' and a.ie_tipo_atendimento = 1 and a.nr_atendimento = m.nr_atendimento and m.nr_seq_interno = obter_atepacu_paciente(a.nr_atendimento,'IAA');

