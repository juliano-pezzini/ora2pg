-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW conta_paciente_material_v4 (nr_sequencia, cd_convenio, ie_emite_conta, nr_interno_conta, cd_material, ds_reduzida, ds_material_sem_acento, ds_material, cd_unidade_medida_consumo, dt_atendimento, dt_atend, dt_conta, dt_conta_dia, qt_material, vl_unitario, vl_unit_sem_round, vl_unitario_simpro, vl_material, vl_mat_total, vl_mat_iss, vl_iss, cd_material_convenio, ds_material_convenio, cd_unidade_medida_convenio, qt_material_convenio, qt_material_conv_div, vl_material_convenio, tx_conversao_qtde, cd_setor_atendimento, ds_setor_atendimento, ds_classif_setor, nr_seq_proc_pacote, vl_unitario_convenio, vl_unitario_conv_round, cd_classif_setor, vl_desconto, vl_bruto, vl_bruto_conv_desc, vl_unitario_bruto_conv_desc, vl_unitario_bruto, vl_unit_bruto, cd_simpro, cd_lab_brasindice, ds_lab_brasindice, ie_brasindice, ds_fabricante, cd_cgc_fornecedor, nm_fornecedor_consig, nm_fornececdor_lote, nm_fornecedor, cd_brasindice, ds_fabric_bras_simpro, ds_fabric_bras_simpro_data, ds_fornec_fabric_bras_simpro, ds_material_bras, ds_material_simpro, ds_simpro_ou_material, ds_simpro_ou_material_ic, cd_motivo_exc_conta, ds_marca, ds_fornec_ultima_compra, ds_fabricante_mat, ds_fabricante_mat_bras_simpro, ds_mat_matricial, ds_mat_matricial_conv, ie_espaco, cd_sistema_ant, cd_medic_brasindice, cd_simpro_brasindice, cd_grupo_convenio, cd_cgc_prestador, ds_cgc_prestador, ds_fabric_cad_mat, ds_fabric_cad_mat_bras_simpro, cd_material_tiss, ds_observacao, vl_unitario_conv, vl_unitario_conv_sem_ajuste, nr_cirurgia, nr_prescricao, cd_proc_princ_cirurgia, ds_proc_princ_cirurgia, ds_mat_bras_apresent, nr_seq_proc_princ, cd_proc_principal, ds_proc_principal, nr_nota_fiscal_opme, cd_simpro_tiss, dt_adm_atendimento, ie_valor_informado, nr_seq_desconto, ie_auditoria, tx_ajuste, vl_mat_original, cd_tiss_material, tx_ajuste_percentual, vl_unit_original, vl_unit_orig_round, ds_lab_bras_aherj, ie_conferencia, nr_seq_protocolo, vl_custo_ult_compra, vl_custo_medio, vl_faturado_ult_compra, vl_faturado_custo_medio, nr_nf_mat_opme, vl_unit_conv_div, vl_material_conv, vl_tabela_original, vl_dif_tab_orig, vl_custo_unit_ult_compra, vl_mat_sem_glosa, cd_apr_brasindice, ds_material_brasindice, nm_usuario_original, tx_ajuste_perc_positivo, qt_executada, cd_bras_mat_conv, cd_simpro_mat_conv, ds_origem_preco, cd_simpro_tiss_dez, cd_brasindice_tiss, cd_brasindice_ean, qt_material_convenio_round, ds_classif_agrup, cd_brasindice_simpro_tiss, vl_unit_conv_round, ds_simpro_brasindice, ds_grupo_material, cd_brasindice_simpro, ds_brasindice_simpro, ds_medic_brasindice, cd_unidade_medida, ds_bras_apresent_ou_material, ds_lab_bras_ou_ds_for_ult_com, dt_brasindice_versao, ds_bras_simpro_material, ie_versao_atual, ds_leito, cd_cod_simpro_ou_brasindice, cd_mat_conv_simpro, cd_mat_tiss_interno, cd_material_generico, ds_material_generico, cd_material_estoque, ds_material_estoque, cd_simpro_brasindice_tiss, cd_mat_conv_simpro_bras_mat, dt_periodo_final, ds_bras_material, cd_mat_conv_bras_simpro, ds_bras_apresent_material, ds_tipo_material, cd_mat_tiss_conv, ds_mat_conv_simpro_bras_mat, ds_medicamento_bras, ds_material_tiss, ds_fabric_bras_simp, cd_material_tuss, vl_unit_orig_desc_round, ds_marca_lote_fornec, cd_mat_conv_bras_simpro_tiss, nr_ato_ipasgo_proc_princ, cd_mat_tuss_conversao, cd_mat_tuss_tiss, cd_mat_conversao_tuss) AS select	a.nr_sequencia,
	a.cd_convenio, 
	a.ie_emite_conta, 
	a.nr_interno_conta, 
	a.cd_material, 
	b.ds_reduzida, 
	ds_material_sem_acento, 
	(b.ds_material || '                         ') ds_material, 
	substr(obter_dados_material_estab(b.cd_material,c.cd_estabelecimento,'UMS'),1,30) cd_unidade_medida_consumo, 
	trunc(a.dt_atendimento,'DD') dt_atendimento, 
	a.dt_atendimento dt_atend, 
	a.dt_conta, 
	trunc(a.dt_conta,'DD') dt_conta_dia, 
	a.qt_material, 
	a.vl_unitario, 
	a.vl_unitario vl_unit_sem_round, 
	a.vl_unitario vl_unitario_simpro, 
	a.vl_material, 
	(a.qt_material * a.vl_unitario) vl_mat_total, 
	(a.vl_material + obter_valor_iss_item(a.cd_convenio, a.vl_material)) vl_mat_iss, 
	obter_valor_iss_item(a.cd_convenio, a.vl_material) vl_iss, 
	coalesce(e.cd_material,coalesce(a.cd_material_convenio,a.cd_material)) cd_material_convenio, 
	coalesce(e.ds_material,b.ds_material) ds_material_convenio, 
	coalesce(e.cd_unidade_medida, substr(obter_dados_material_estab(b.cd_material,c.cd_estabelecimento,'UMS'),1,30)) cd_unidade_medida_convenio, 
	(a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END ) qt_material_convenio, 
	dividir(a.qt_material,CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END ) qt_material_conv_div, 
	a.vl_material vl_material_convenio, 
	e.tx_conversao_qtde, 
	c.cd_setor_atendimento, 
	c.ds_setor_atendimento, 
	substr(obter_valor_dominio(1,c.cd_classif_setor),0,30) ds_classif_setor, 
	a.nr_seq_proc_pacote, 
--	(a.vl_material) / (decode(a.qt_material,0,1,a.qt_material) * 
--	 decode(nvl(e.tx_conversao_qtde,0),0,1,e.tx_conversao_qtde)) vl_unitario_convenio, 
	(a.vl_unitario * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END ) vl_unitario_convenio, 
	round((a.vl_material) / 
	(CASE WHEN a.qt_material=0 THEN 1  ELSE a.qt_material END  * 
	 CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END ),2) vl_unitario_conv_round, 
	c.cd_classif_setor, 
	coalesce(f.vl_material,0) vl_desconto, 
	a.vl_material + coalesce(f.vl_material,0) vl_bruto, 
	a.vl_material + coalesce(obter_desconto_matproc(a.nr_sequencia,'M'),0) vl_bruto_conv_desc, 
	dividir((a.vl_material + coalesce(obter_desconto_matproc(a.nr_sequencia,'M'),0)),a.qt_material) vl_unitario_bruto_conv_desc, 
	dividir((a.vl_material + coalesce(f.vl_material,0)),a.qt_material) vl_unitario_bruto, 
	(a.vl_unitario + dividir(coalesce(f.vl_material,0),a.qt_material)) vl_unit_bruto, 
	Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp) cd_simpro, 
	substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'CLAB'),1,6) cd_lab_brasindice, 
	substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,40) ds_lab_brasindice, 
	CASE WHEN Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'CMED') IS NULL THEN 'N'  ELSE 'S' END  ie_brasindice, 
	substr(obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material),1,10) ds_fabricante, 
	a.cd_cgc_fornecedor, 
	substr(obter_nome_pf_pj(null,a.cd_cgc_fornecedor),1,80) nm_fornecedor_consig, 
	substr(obter_dados_lote_fornec(a.nr_seq_lote_fornec,'DF'),1,80) nm_fornececdor_lote, 
	substr(coalesce(obter_dados_lote_fornec(a.nr_seq_lote_fornec,'DF'), 
		  obter_nome_pf_pj(null,a.cd_cgc_fornecedor)),1,80) nm_fornecedor, 
	coalesce(substr(Obter_Codigo_Brasindice(coalesce(d.cd_estabelecimento,1), 
			a.cd_material,a.dt_atendimento, d.cd_convenio_parametro),1,20),' ') cd_brasindice, 
	CASE WHEN obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material) IS NULL THEN  		substr(substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,6),1,40)  ELSE substr(obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material),1,10) END  ds_fabric_bras_simpro, 
	CASE WHEN obter_fabric_mat_simpro_estab2(d.cd_estabelecimento, a.cd_material, a.dt_atendimento) IS NULL THEN  		substr(substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,6),1,40)  ELSE substr(obter_fabric_mat_simpro_estab2(d.cd_estabelecimento, a.cd_material, a.dt_atendimento),1,10) END  ds_fabric_bras_simpro_data, 
	substr(coalesce(obter_dados_lote_fornec(a.nr_seq_lote_fornec,'DF'), 
		  coalesce( obter_nome_pf_pj(null,a.cd_cgc_fornecedor), 
			coalesce(substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,6), 
			  obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material)))),1,80) ds_fornec_fabric_bras_simpro, 
	substr(substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DMED'),1,6),1,100) ds_material_bras, 
	substr(obter_desc_material_simpro(a.cd_material),1,100) ds_material_simpro, 
	substr(coalesce(obter_desc_material_simpro(a.cd_material),b.ds_material),1,100) ds_simpro_ou_material, 
	initcap(substr(coalesce(obter_desc_material_simpro(a.cd_material),b.ds_material),1,100)) ds_simpro_ou_material_ic, 
	a.cd_motivo_exc_conta, 
	substr(Obter_Marca_Material(b.cd_material, 'D'),1,50) ds_marca, 
	substr(obter_nome_pf_pj(null,obter_fornecedor_ultima_compra(a.cd_material,obter_estab_atend(a.nr_atendimento))),1,100) 
	ds_fornec_ultima_compra, 
	substr(obter_desc_mat_fabricante(b.cd_material),1,80) ds_fabricante_mat, 
	substr(coalesce(CASE WHEN obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material) IS NULL THEN  		substr(substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,6),1,40)  ELSE substr(obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material),1,10) END , 
		obter_desc_mat_fabricante(b.cd_material)),1,80) ds_fabricante_mat_bras_simpro, 
	substr(b.ds_material,1,30) ds_mat_matricial, 
	substr(coalesce(e.ds_material,b.ds_material),1,30) ds_mat_matricial_conv, 
	' ' ie_espaco, 
	substr(obter_dados_material_estab(a.cd_material,d.cd_estabelecimento,'CSA'),1,20) CD_SISTEMA_ANT, 
	coalesce(substr(Obter_medic_Brasindice(coalesce(d.cd_estabelecimento,1), 
			a.cd_material,a.dt_atendimento),1,20),' ') cd_medic_brasindice, 
	CASE WHEN Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)=0 THEN  coalesce(substr(Obter_medic_Brasindice(coalesce(d.cd_estabelecimento,1), 			a.cd_material,a.dt_atendimento),1,20),' ')  ELSE to_char(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)) END  cd_simpro_brasindice, 
	e.cd_grupo cd_grupo_convenio, 
	a.cd_cgc_prestador, 
	substr(obter_razao_social(a.cd_cgc_prestador),1,200) ds_cgc_prestador, 
	substr(OBTER_DESC_MAT_FABRICANTE(b.cd_material),1,150) DS_FABRIC_CAD_MAT, 
	substr(coalesce(OBTER_DESC_MAT_FABRICANTE(b.cd_material), 
		CASE WHEN obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material) IS NULL THEN  			substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,6)  ELSE obter_fabric_mat_simpro_estab(d.cd_estabelecimento, a.cd_material) END ),1,150) ds_fabric_cad_mat_bras_simpro, 
	a.cd_material_tiss, 
	substr(a.ds_observacao,1, 255) ds_observacao, 
	(dividir(a.vl_material,a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )) vl_unitario_conv, 
	dividir((dividir(a.vl_material,a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )), coalesce(obter_indice_preco_material_2(a.nr_sequencia),1)) vl_unitario_conv_sem_ajuste, 
	a.nr_cirurgia, 
	a.nr_prescricao, 
	substr(Obter_proc_princ_cirurgia(a.nr_cirurgia,'C'),1,15) cd_proc_princ_cirurgia, 
	substr(Obter_proc_princ_cirurgia(a.nr_cirurgia,'D'),1,60) ds_proc_princ_cirurgia, 
	substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DMED'),1,100) || ' ' || 
				substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
						a.cd_material, a.dt_atendimento, a.cd_convenio, 'DAPR'),1,98)	ds_mat_bras_apresent, 
	a.nr_seq_proc_princ, 
	(obter_dados_propaci('CP',a.nr_seq_proc_princ))::numeric  cd_proc_principal, 
	substr(obter_dados_propaci('DS',a.nr_seq_proc_princ),1,240) ds_proc_principal, 
	substr(CASE WHEN d.ie_status_acerto=2 THEN  		CASE WHEN obter_estrutura_material(a.cd_material,'G')=15 THEN obter_nf_conta(d.nr_interno_conta,2) END  END ,1,20) nr_nota_fiscal_opme, 
	substr(lpad(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),7,0),1,7) cd_simpro_tiss, 
	coalesce(obter_data_adm_presc_quimio(a.nr_prescricao,a.nr_sequencia_prescricao),dt_atendimento) dt_adm_atendimento, 
	coalesce(a.ie_valor_informado,'N') ie_valor_informado, 
	f.nr_seq_desconto, 
	a.ie_auditoria, 
	obter_indice_preco_material(a.nr_sequencia) tx_ajuste, 
	dividir(a.vl_material, obter_indice_preco_material(a.nr_sequencia)) vl_mat_original, 
	substr(tiss_atualiza_cod_brasindice(a.nr_sequencia),1,100) cd_tiss_material, 
	((1- obter_indice_preco_material_2(a.nr_sequencia)) * 100) tx_ajuste_percentual, 
	dividir(dividir(a.vl_material, coalesce(obter_indice_preco_material_2(a.nr_sequencia),1)), 
		dividir(a.qt_material,CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )) vl_unit_original, 
	round((dividir(dividir(a.vl_material, coalesce(obter_indice_preco_material_2(a.nr_sequencia),1)), 
		dividir(a.qt_material,CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )))::numeric,2) vl_unit_orig_round, 
	CASE WHEN a.ie_origem_preco=2 THEN  coalesce(substr(Obter_Desc_Tabela_Mat(a.cd_tab_preco_material,c.cd_estabelecimento),1,30),'Não informado')  ELSE substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,40) END  ds_lab_bras_aherj, 
	CASE WHEN a.dt_conferencia IS NULL THEN 'N'  ELSE 'S' END  ie_conferencia, 
	d.nr_seq_protocolo, 
	obter_valor_ultima_compra(c.cd_estabelecimento,null,b.cd_material,0,'M') vl_custo_ult_compra, 
	obter_custo_medio_material(c.cd_estabelecimento,LOCALTIMESTAMP,b.cd_material) vl_custo_medio, 
	(a.vl_material - obter_valor_ultima_compra(c.cd_estabelecimento,null,b.cd_material,0,'M')) vl_faturado_ult_compra, 
	(a.vl_material - obter_custo_medio_material(c.cd_estabelecimento,LOCALTIMESTAMP,b.cd_material)) vl_faturado_custo_medio, 
	substr(obter_nf_mat_opme(a.nr_sequencia,'N'),1,255) nr_nf_mat_opme,	 
	dividir(a.vl_material, dividir(a.qt_material,CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )) vl_unit_conv_div, 
	((a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END ) * a.vl_unitario) vl_material_conv, 
	coalesce(a.vl_tabela_original,a.vl_material) vl_tabela_original, 
	coalesce(a.vl_tabela_original,a.vl_material) - a.vl_material vl_dif_tab_orig, 
	dividir(obter_valor_ultima_compra(c.cd_estabelecimento,null,b.cd_material,0,'M'), 
		(a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )) vl_custo_unit_ult_compra, 
	Obter_Preco_Sem_Glosa(a.nr_sequencia,'M',a.nr_atendimento) vl_mat_sem_glosa, 
	substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'CAPR'),1,6) cd_apr_brasindice, 
	substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DMED'),1,100) ds_material_brasindice, 
	a.nm_usuario_original, 
	((obter_indice_preco_material_2(a.nr_sequencia) - 1) * 100) tx_ajuste_perc_positivo, 
	CASE WHEN coalesce(Obter_Qt_ProcMat_Glosa(a.nr_seq_mat_glosa, 'M', a.nr_atendimento), 0)=0 THEN  a.qt_material  ELSE Obter_Qt_ProcMat_Glosa(a.nr_seq_mat_glosa, 'M', a.nr_atendimento) END  qt_executada, 
	coalesce(substr(Obter_medic_Brasindice(coalesce(d.cd_estabelecimento,1),a.cd_material,a.dt_atendimento),1,20), 
		coalesce(e.cd_material,coalesce(a.cd_material_convenio,a.cd_material))) cd_bras_mat_conv, 
	coalesce(substr(CASE WHEN Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)=0 THEN null  ELSE Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp) END ,1,20), 
		coalesce(e.cd_material,coalesce(a.cd_material_convenio,a.cd_material))) cd_simpro_mat_conv, 
	coalesce(CASE WHEN a.ie_origem_preco=2 THEN  substr(Obter_Desc_Tab_Mat(a.cd_tab_preco_material),1,100)  ELSE substr(Obter_Valor_Dominio('61',a.ie_origem_preco),1,100) END ,'Sem preço informado') ds_origem_preco, 
	substr(lpad(CASE WHEN Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)=0 THEN a.cd_material  ELSE Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp) END ,10,0),1,10) cd_simpro_tiss_dez, 
	coalesce(substr(Obter_Dados_Brasindice2(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
		a.cd_material, a.dt_atendimento, a.cd_convenio, 'TISS', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento), 
		(Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15),a.cd_material) cd_brasindice_tiss, 
	substr(Obter_Dados_Brasindice2(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
		a.cd_material, a.dt_atendimento, a.cd_convenio, 'EAN', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento), 
		(Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15) cd_brasindice_ean, 
	round(a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END ) qt_material_convenio_round, 
	coalesce(substr(obter_agrup_classif_setor(c.nr_seq_agrup_classif),1,200),'Não Informado') ds_classif_agrup, 
	coalesce(substr(Obter_Dados_Brasindice2(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
		a.cd_material, a.dt_atendimento, a.cd_convenio, 'TISS', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento), 
		(Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15), 
		CASE WHEN substr(lpad(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),10,0),1,10)='0000000000' THEN  to_char(a.cd_material)  ELSE substr(lpad(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),10,0),1,10) END ) cd_brasindice_simpro_tiss, 
	dividir(a.vl_material, round(a.qt_material * CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )) vl_unit_conv_round, 
	CASE WHEN Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)=0 THEN  substr(Obter_Desc_Brasindice(null,null,Obter_medic_Brasindice(coalesce(d.cd_estabelecimento,1),a.cd_material,a.dt_atendimento),'M'),1,100)  ELSE substr(Obter_Desc_Simpro(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)),1,100) END  ds_simpro_brasindice, 
	substr(Obter_Dados_Material(a.cd_material, 'GRU'),1,100) ds_grupo_material, 
	CASE WHEN coalesce(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio, 'CMED', a.cd_categoria, 		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),0)=0 THEN  		Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)  ELSE substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio,'CMED', a.cd_categoria, 		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15) END  cd_brasindice_simpro, 
	CASE WHEN coalesce(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio, 'CMED', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento), 		(Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),0)=0 THEN  		substr(Obter_Desc_Simpro(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)),1,100)  ELSE substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material,a.dt_atendimento,a.cd_convenio,'DMED', a.cd_categoria, 		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,100) END  ds_brasindice_simpro, 
	coalesce(substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio, 'DMED', a.cd_categoria, 
		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,100),' ') ds_medic_brasindice, 
	coalesce(a.cd_unidade_medida, coalesce(e.cd_unidade_medida, substr(obter_dados_material_estab(b.cd_material,c.cd_estabelecimento,'UMS'),1,30))) cd_unidade_medida, 
	CASE WHEN a.ie_origem_preco=1 THEN  substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), a.cd_material, a.dt_atendimento, a.cd_convenio, 'DAPR'),1,98)  ELSE b.ds_material END  ds_bras_apresent_ou_material, 
	CASE WHEN a.ie_origem_preco=1 THEN  		substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DLAB'),1,40)  ELSE substr(obter_nome_pf_pj(null,obter_fornecedor_ultima_compra(a.cd_material,obter_estab_atend(a.nr_atendimento))),1,100) END  ds_lab_bras_ou_ds_for_ult_com, 
	to_date(Obter_Dados_Brasindice2(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
		a.cd_material, a.dt_atendimento, a.cd_convenio, 'DTV', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento), 
		(Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),'dd/mm/yyyy') dt_brasindice_versao, 
	/*decode(nvl(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio, 'CMED', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento)),0),0, 
		substr(nvL(Obter_Desc_Simpro(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento)),b.ds_material),1,100), 
		substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material,a.dt_atendimento,a.cd_convenio,'DMED', a.cd_categoria, 
		obter_tipo_atendimento(a.nr_atendimento)),1,100)) ds_bras_simpro_material,*/
 
	CASE WHEN coalesce(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio, 'CMED', a.cd_categoria, obter_tipo_atendimento(a.nr_atendimento), 		(Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),0)=0 THEN  		CASE WHEN Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)=0 THEN  b.ds_material  ELSE substr(Obter_Desc_Simpro(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)),1,100) END   ELSE substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material,a.dt_atendimento,a.cd_convenio,'DMED', a.cd_categoria, 		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,100) END  ds_bras_simpro_material, 
	substr(Obter_Dados_Brasindice2(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), a.cd_material, a.dt_atendimento, a.cd_convenio, 'VER', a.cd_categoria, 
		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15) ie_versao_atual, 
	substr(Obter_desc_leito_atend(a.nr_seq_atepacu),1,100) ds_leito, 
	CASE WHEN a.ie_origem_preco=1 THEN  substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio,'CMED', a.cd_categoria, 		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15) WHEN a.ie_origem_preco=4 THEN  Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp) END  cd_cod_simpro_ou_brasindice, 
	coalesce(coalesce(e.cd_material,a.cd_material_convenio), 
		substr(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),1,20)) cd_mat_conv_simpro, 
	coalesce(a.cd_material_tiss, a.cd_material) cd_mat_tiss_interno, 
	b.cd_material_generico, 
	substr(obter_desc_material(b.cd_material_generico),1,255) ds_material_generico, 
	b.cd_material_estoque, 
	substr(obter_desc_material(b.cd_material_estoque),1,255) ds_material_estoque, 
	coalesce(CASE WHEN substr(lpad(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),10,0),1,10)='0000000000' THEN  		substr(Obter_Dados_Brasindice2(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), a.cd_material, a.dt_atendimento, a.cd_convenio, 'TISS', a.cd_categoria, 		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15)  ELSE substr(lpad(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),10,0),1,10) END ,to_char(a.cd_material)) cd_simpro_brasindice_tiss, 
	coalesce(CASE WHEN a.cd_material_convenio=a.cd_material THEN  null  ELSE a.cd_material_convenio END , 
		coalesce(CASE WHEN a.IE_ORIGEM_PRECO=1 THEN  substr(Obter_Codigo_Brasindice(coalesce(d.cd_estabelecimento,1), a.cd_material,a.dt_atendimento, d.cd_convenio_parametro),1,20) WHEN a.IE_ORIGEM_PRECO=2 THEN  a.cd_material WHEN a.IE_ORIGEM_PRECO=4 THEN  substr(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),1,20)  ELSE a.cd_material END , a.cd_material)) cd_mat_conv_simpro_bras_mat, 
	d.dt_periodo_final, 
	coalesce(substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 
				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DMED'),1,100), 
				b.ds_material) ds_bras_material, 
	lpad(coalesce(coalesce(CASE WHEN a.cd_material_convenio=a.cd_material THEN  null  ELSE a.cd_material_convenio END , substr(Obter_Dados_Brasindice2(d.cd_estabelecimento,a.cd_material, a.dt_atendimento, a.cd_convenio,'CMED', a.cd_categoria, 
		obter_tipo_atendimento(a.nr_atendimento), (Obter_dados_lote_fornec(a.nr_seq_lote_fornec,'SMA'))::numeric ),1,15)), 
		substr(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp),1,20)),10,'0') cd_mat_conv_bras_simpro, 
	CASE WHEN a.ie_origem_preco=1 THEN  substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 				a.cd_material, a.dt_atendimento, a.cd_convenio, 'DMED'),1,100) || ' ' || 				substr(Obter_Dados_Brasindice(coalesce(c.cd_estabelecimento, c.cd_estabelecimento_base), 						a.cd_material, a.dt_atendimento, a.cd_convenio, 'DAPR'),1,98)  ELSE b.ds_material END  ds_bras_apresent_material, 
	CASE WHEN b.ie_tipo_material=1 THEN 'Material' WHEN b.ie_tipo_material=5 THEN 'Material' WHEN b.ie_tipo_material=2 THEN 'Medicamento' WHEN b.ie_tipo_material=3 THEN 'Medicamento' WHEN b.ie_tipo_material=4 THEN 'Medicamento' WHEN b.ie_tipo_material=8 THEN 'Medicamento'  ELSE 'Outros' END  ds_tipo_material, 
	coalesce(a.cd_material_tiss, coalesce(e.cd_material,coalesce(a.cd_material_convenio,a.cd_material))) cd_mat_tiss_conv, 
	coalesce(CASE WHEN substr(obter_desc_material(a.cd_material_convenio),1,150)=b.ds_material THEN  null  ELSE substr(obter_desc_material(a.cd_material_convenio),1,150) END , 
		coalesce(CASE WHEN a.IE_ORIGEM_PRECO=1 THEN  substr(Obter_Desc_Brasindice(null,null,obter_valor_campo_separador(Obter_Codigo_Brasindice(coalesce(d.cd_estabelecimento,1), a.cd_material,a.dt_atendimento, d.cd_convenio_parametro),2,';'),'M'),1,20) WHEN a.IE_ORIGEM_PRECO=2 THEN  b.ds_material WHEN a.IE_ORIGEM_PRECO=4 THEN  substr(obter_desc_material_simpro(Obter_Codigo_Simpro2(a.cd_material,a.cd_convenio,c.cd_estabelecimento,a.dt_atendimento,a.nr_seq_conv_simp)),1,20)  ELSE b.ds_material END , b.ds_material)) ds_mat_conv_simpro_bras_mat, 
	coalesce(substr(obter_dados_brasindice_seq(a.nr_seq_bras_preco, 'DMED'),1,80),' ') ds_medicamento_bras, 
	a.ds_material_tiss, 
	CASE WHEN a.nr_seq_bras_preco IS NULL THEN  substr(obter_dados_simpro_seq(a.nr_seq_simp_preco, 'FAB'),1,20)  ELSE substr(obter_dados_brasindice_seq(a.nr_seq_bras_preco, 'DLAB'),1,40) END  ds_fabric_bras_simp, 
	a.cd_material_tuss, 
	round((dividir(dividir(a.vl_material + coalesce(obter_desconto_matproc(a.nr_sequencia,'M'),0), coalesce(obter_indice_preco_material_2(a.nr_sequencia),1)), 
		dividir(a.qt_material,CASE WHEN coalesce(e.tx_conversao_qtde,0)=0 THEN 1  ELSE e.tx_conversao_qtde END )))::numeric,2) vl_unit_orig_desc_round, 
	substr(Obter_dados_lote_fornec(a.nr_seq_lote_fornec, 'MA'),1,255) ds_marca_lote_fornec, 
	CASE WHEN a.ie_origem_preco=1 THEN  coalesce(e.cd_material, coalesce(substr(obter_dados_brasindice_seq(a.nr_seq_bras_preco, 'TISS'),1,15), a.cd_material)) WHEN a.ie_origem_preco=4 THEN  coalesce(e.cd_material, coalesce(substr(lpad(obter_dados_simpro_seq(a.nr_seq_simp_preco, 'COD'),10,0),1,10), a.cd_material))  ELSE coalesce(e.cd_material, a.cd_material) END  cd_mat_conv_bras_simpro_tiss, 
	(obter_dados_propaci('ATO', (obter_dados_matpaci(a.nr_sequencia ,'PP'))::numeric ))::numeric  nr_ato_ipasgo_proc_princ, 
	coalesce(CASE WHEN a.cd_material_tuss=0 THEN null  ELSE a.cd_material_tuss END , coalesce(somente_numero(a.cd_material_convenio), a.cd_material)) cd_mat_tuss_conversao, 
	coalesce(CASE WHEN a.cd_material_tuss=0 THEN null  ELSE a.cd_material_tuss END , coalesce(somente_numero(a.cd_material_tiss), coalesce(somente_numero(a.cd_material_convenio), a.cd_material))) cd_mat_tuss_tiss, 
	coalesce(CASE WHEN somente_numero(a.cd_material_convenio)=a.cd_material THEN  null  ELSE somente_numero(a.cd_material_convenio) END , coalesce(CASE WHEN a.cd_material_tuss=0 THEN null  ELSE a.cd_material_tuss END , a.cd_material)) cd_mat_conversao_tuss 
FROM conta_paciente d, setor_atendimento c, material b, material_atend_paciente a
LEFT OUTER JOIN mat_atend_pac_convenio e ON (a.nr_sequencia = e.nr_seq_material)
LEFT OUTER JOIN mat_atend_paciente_valor f ON (a.nr_sequencia = f.nr_seq_material AND 3 = f.ie_tipo_valor)
WHERE a.cd_material = b.cd_material and a.cd_setor_atendimento 	= c.cd_setor_atendimento and a.nr_interno_conta	= d.nr_interno_conta    and ((coalesce(f.nr_seq_desconto,0) = 0) or 
	 (coalesce(f.nr_seq_desconto,0) = (	select 	coalesce(max(t.nr_sequencia),0) 
					from 	conta_paciente_desconto t 
					where 	t.nr_interno_conta = d.nr_interno_conta 
					and	t.nr_sequencia	in (	select 	x.nr_seq_desconto 
									from 	mat_atend_paciente_valor x 
									where 	x.nr_seq_desconto	= t.nr_sequencia))));

