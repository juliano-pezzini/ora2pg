-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW exportar_nota_itapema_v (tp_registro, dt_emissao, nr_nota_fiscal, ie_status, dt_emissao_nota, ano_mes_emissao, cd_natureza_operacao, nr_rps, cd_serie_nf, tp_rps, nr_nota_subs, nr_rps_subs, cd_serie_rps_subs, vl_deducoes, vl_pis, vl_cofins, vl_inss, vl_ir, vl_csll, vl_outras_deducoes, dt_emissao_rps, ie_status_rps, vl_servico, cd_cnae, cd_atividade, vl_base_calc, vl_aliquota, vl_iss, iss_retido, ds_servicos, cd_municipio_serv, qtd_servicos_prestados, vl_unit_servico, cd_cmc_contribuinte, nm_razao_social_prestador, nm_fantasia_prestador, cd_cnpj_prestador, endereco_prestador, endereco_numero_prestador, endereco_complemento_prestador, endereco_bairro_prestador, cd_municipio_prestador, ds_uf_prestador, cd_cep_prestador, email_prestador, telefone_prestador, cd_cpf_cnpj_tomador, tp_pessoa_tomador, nm_razao_social_tomador, endereco_tomador, endereco_numero_tomador, endereco_complemento_tomador, endereco_bairro_tomador, cd_municipio_tomador, ds_uf_tomador, cd_cep_tomador, ds_email_tomador, nr_telefone_tomador, ie_status_sincronizacao, cd_estabelecimento) AS select
  1 tp_registro,
  n.dt_emissao dt_emissao,
  lpad(n.nr_nota_fiscal, 15, 0)                                                                            nr_nota_fiscal,
  coalesce(n.ie_situacao, 1)                                                                                    ie_status,
  to_char(n.dt_emissao, 'DD/MM/YYYY HH24:MI:SS')                                                           dt_emissao_nota,
  to_char(n.dt_emissao, 'YYYYMM')                                                                          ano_mes_emissao,
  lpad(n.cd_natureza_operacao, 2, 0)                                                                       cd_natureza_operacao,
  lpad(n.nr_nota_fiscal, 15, 0)                                                                            nr_rps,
  lpad(cd_serie_nf, 5, 0)                                                                                  cd_serie_nf,
  '1'                                                                                                      tp_rps,
  lpad(0, 15, 0)                                                                                           nr_nota_subs,
  lpad(0, 15, 0)                                                                                           nr_rps_subs,
  lpad(cd_serie_nf, 5, 0)                                                                                  cd_serie_rps_subs,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_deducoes,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_pis,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_cofins,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_inss,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_ir,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_csll,
  lpad(to_char(0, 'FM999999999D90'), 16, 0)                                                                vl_outras_deducoes,
  to_char(n.dt_emissao, 'DD/MM/YYYY')                                                                      dt_emissao_rps,
  coalesce(n.ie_situacao, 1)                                                                                    ie_status_rps,
  lpad(to_char(n.vl_mercadoria, 'FM999999999D90'), 16, 0)                                                  vl_servico,
  lpad(obter_cnae_nfse(n.nr_sequencia), 7, '0')                                                            cd_cnae,
  lpad(somente_numero(obter_cod_grupo_ativ(n.cd_estabelecimento, n.nr_sequencia, 'I')), 15, 0)             cd_atividade,
  lpad(to_char(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'), 'FM999999999D90'), 16, 0)        vl_base_calc,
  lpad(to_char(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'X', 'ISS'), 'FM999999999D90'), 16, 0)        vl_aliquota,
  lpad(to_char(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'ISS'), 'FM999999999D90'), 16, 0)        vl_iss,
  CASE WHEN obter_se_nf_retem_iss(n.nr_sequencia)='S' THEN  1 WHEN obter_se_nf_retem_iss(n.nr_sequencia)='N' THEN  2  ELSE 2 END                                          iss_retido,
  replace(replace(substr(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'), 1, 255), chr(13), ' '), chr(10), ' ') ds_servicos,
  lpad(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc_emitente, 'CDMNF'), 15, 0) cd_municipio_serv,
  lpad((select CASE WHEN count(i.qt_item_nf)=0 THEN  1  ELSE count(i.qt_item_nf) END  FROM nota_fiscal_item i where i.nr_sequencia_nf = n.nr_sequencia), 15, 0)       qtd_servicos_prestados,
  lpad(to_char(n.vl_mercadoria, 'FM999999999D90'), 16, 0)                                   vl_unit_servico,
  lpad(somente_numero(substr(nfe_obter_dados_pj(n.cd_cgc_emitente, 'IM'), 1, 11)), 15, 0)   cd_cmc_contribuinte,
  substr(obter_nome_pj(n.cd_cgc_emitente), 1, 115)                                          nm_razao_social_prestador,
  substr(obter_nome_fantasia_pj(n.cd_cgc_emitente), 1, 60)                                  nm_fantasia_prestador,
  lpad(n.cd_cgc_emitente, 14, 0)                                                            cd_cnpj_prestador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'EN'))), 1, 125)  endereco_prestador,
	substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'NR'), 1, 10)                                                endereco_numero_prestador,
	substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CO'))), 1, 60) endereco_complemento_prestador,
	substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'B'))), 1, 60)    endereco_bairro_prestador,
  lpad(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CDMNF'), 15, 0)                         cd_municipio_prestador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'UF'))), 1, 2) ds_uf_prestador,
  lpad(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CEP'),1,8), 8, 0)                                      cd_cep_prestador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'M'))), 1, 80)    email_prestador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'T'))), 1, 11)    telefone_prestador,
  lpad(substr(CASE WHEN substr(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc,'UF'), 1, 2)='IN' THEN  '00000000000000'  ELSE CASE WHEN n.cd_pessoa_fisica IS NULL THEN  n.cd_cgc  ELSE CASE WHEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) IS NULL THEN  '00000000000000'  ELSE obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) END  END  END , 1, 14), 14, 0) cd_cpf_cnpj_tomador,
  lpad(coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN  2  ELSE 1 END , 3), 2, 0)                                                     tp_pessoa_tomador,
  substr(obter_nome_pf_pj(n.cd_pessoa_fisica, n.cd_cgc), 1, 115)                                                 nm_razao_social_tomador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'EN'))), 1, 125) endereco_tomador,
  substr(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'), 1, 10)                                           endereco_numero_tomador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'))), 1, 60) endereco_complemento_tomador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'))), 1, 60) endereco_bairro_tomador,
  lpad(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CDMNF'), 15, 0) cd_municipio_tomador,
  substr(tiss_eliminar_caractere(elimina_acentuacao(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'))), 1, 2) ds_uf_tomador,
  lpad(substr(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,8), 8, 0)                                      cd_cep_tomador,
  coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN  CASE WHEN substr(obter_compl_pj(n.cd_cgc, 1, 'M'), 1, 80)='N/D' THEN  null  ELSE substr(obter_compl_pj(n.cd_cgc, 1, 'M'), 1, 80) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'M'), 1, 80) END ,
    substr(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'M'), 1, 80)) ds_email_tomador,
  substr(nfse_obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'T'), 1, 11) nr_telefone_tomador,
  1 ie_status_sincronizacao,
  n.cd_estabelecimento cd_estabelecimento
from 	nota_fiscal n,
		  estabelecimento e
where  exists (
  select  1
  from  w_nota_fiscal x
  where  x.nr_seq_nota_fiscal = n.nr_sequencia)
and	  substr(obter_se_nota_entrada_saida(n.nr_sequencia),1,1) = 'S'
and		n.cd_estabelecimento = e.cd_estabelecimento
and   n.vl_mercadoria > 0;

