-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW nfse_londrina_v (ccm, cnpj, cpf, senha, aliquota, servico, codigo_obra, obra_art, situacao, valor, base, ir, pis, cofins, csll, inss, retencao_iss, incentivo_fiscal, cod_municipio_prest_srv, cod_pais_prestacao_servico, cod_municipio_incidencia, descricaonf, tomador_tipo, tomador_cnpj, tomador_email, tomador_ie, tomador_im, tomador_razao, tomador_endereco, tomador_numero, tomador_complemento, tomador_bairro, tomador_cep, tomador_cod_cidade, tomador_fone, tomador_ramal, tomador_fax, rps_num, rps_serie, rps_dia, rps_mes, rps_ano, rps_tipo) AS select (select ds_login_site FROM nfe_senha_conexao where ie_tipo_nota = 'NFSE' and cd_estabelecimento = a.cd_estabelecimento) ccm,
	lpad(a.cd_cgc_emitente, 14, '0')  cnpj,
	(select DS_IP_PORTA_PROXY from nfe_senha_conexao where ie_tipo_nota = 'NFSE' and cd_estabelecimento = a.cd_estabelecimento) cpf,
	(select ds_senha_site from nfe_senha_conexao where ie_tipo_nota = 'NFSE' and cd_estabelecimento = a.cd_estabelecimento)  senha,
	--(campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'ISSST')/100, 2))  aliquota,
	(campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'ISS'), 2))  aliquota,
	obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O')), 'GR') servico,
	null codigo_obra,
	null obra_art,
	CASE WHEN obter_dados_natureza_operacao(a.cd_natureza_operacao, 'ISS')='' THEN CASE WHEN obter_dados_parametro_compras(a.cd_estabelecimento,14)='0' THEN  '3'  ELSE obter_dados_parametro_compras(a.cd_estabelecimento, 14) END   ELSE nfse_obter_regra('TP', a.cd_estabelecimento) END   situacao,
	campo_mascara_casas(a.vl_mercadoria, 2) valor,
	campo_mascara_casas(a.vl_mercadoria, 2) base,
	campo_mascara_casas(CASE WHEN a.CD_CGC_EMITENTE='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'IR') END , 2) ir,
	campo_mascara_casas(CASE WHEN a.CD_CGC_EMITENTE='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'PIS') END , 2) pis,
	campo_mascara_casas(CASE WHEN a.CD_CGC_EMITENTE='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'COFINS') END , 2) cofins,
	campo_mascara_casas(CASE WHEN a.CD_CGC_EMITENTE='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'CSLL') END , 2) csll,
	campo_mascara_casas(CASE WHEN a.CD_CGC_EMITENTE='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'INSS') END , 2) inss,
	--decode(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'ISSST'),0 , Decode(obter_se_nf_retem_iss(a.nr_sequencia), 'S', '1', '2'), 3)  retencao_iss,
	'' retencao_iss,
	--decode(nvl(nfse_obter_regra('IC', a.cd_estabelecimento), 'N'), 'N', 2, 1) incentivo_fiscal,
	0 incentivo_fiscal,
	--lpad(obter_municipio_ibge(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CEP')), 7, '0') cod_municipio_prest_srv,
	lpad(coalesce(nfse_obter_dados_pf_pj(NULL,a.CD_CGC_EMITENTE,'CDMNF'),nfse_obter_dados_pf_pj(NULL,a.CD_CGC_EMITENTE,'CDM')),7,'0') cod_municipio_prest_srv,
	'' cod_pais_prestacao_servico,
	--lpad(obter_municipio_ibge(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CEP')), 7, '0')  cod_municipio_incidencia,
	lpad(coalesce(nfse_obter_dados_pf_pj(NULL,a.CD_CGC_EMITENTE,'CDMNF'),nfse_obter_dados_pf_pj(NULL,a.CD_CGC_EMITENTE,'CDM')),7,'0')  cod_municipio_incidencia,
    coalesce(substr(obter_descricao_rps(a.cd_estabelecimento, a.nr_sequencia, 'DS_SERVICOS'), 1, 1000), 'Servicos') descricaoNF,
	CASE WHEN a.cd_cgc='' THEN 2  ELSE CASE WHEN nfe_obter_dados_pj(a.cd_cgc,'IBGE')=nfe_obter_dados_pj(a.cd_cgc_emitente,'IBGE') THEN 3  ELSE CASE WHEN substr(CASE WHEN a.cd_cgc IS NULL THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'UF')  ELSE nfe_obter_dados_pj(a.cd_cgc,'UF') END ,1,2)='EX' THEN 5  ELSE 4 END  END  END  tomador_tipo,
	CASE WHEN a.cd_cgc='' THEN  coalesce(substr(obter_dados_pf(a.cd_pessoa_fisica, 'CPF'), 1, 11), '00000000000')  ELSE a.cd_cgc END  tomador_cnpj,
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'M'))), 1, 80) tomador_email,
	substr(obter_dados_pf_pj( null, a.cd_cgc, 'IE'), 1, 19) tomador_ie,
	substr(lpad(CASE WHEN a.cd_cgc='' THEN  obter_dados_pf(a.cd_pessoa_fisica, 'ISS')  ELSE obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'IM') END ,8, '0'), 1, 30) tomador_im,
	substr(tiss_eliminar_caractere(elimina_acentuacao(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))), 1, 255) tomador_razao,
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(cd_pessoa_fisica, a.cd_cgc, 'EN'))), 1, 255), 'Endereco') tomador_endereco,
	coalesce(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'NR'), 1, 25), '00') tomador_numero  ,
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CO'))), 1, 255), 'Complemento') tomador_complemento,
	coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'B'))), 1, 255), 'Bairro') tomador_bairro,
	lpad(somente_numero(substr(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'CEP'), 1, 15)), 8, '0') tomador_CEP,
	--lpad(decode(a.cd_pessoa_fisica,null,
	--		decode(nfe_obter_dados_pj(a.cd_cgc,'IBGE'),null,obter_municipio_ibge(obter_dados_pf_pj(null,a.cd_cgc,'CEP')),nfe_obter_dados_pj(a.cd_cgc,'IBGE')),
	--		decode(nfse_obter_compl_pf(a.cd_pessoa_fisica,'CDM'),null,obter_municipio_ibge(obter_dados_pf_pj(a.cd_pessoa_fisica,null,'CEP')),nfse_obter_compl_pf(a.cd_pessoa_fisica,'CDM'))),7,0) tomador_cod_cidade,
	lpad(coalesce(nfse_obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CDMNF'),nfse_obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CDM')),7,'0') tomador_cod_cidade,
	Elimina_Caracteres_Especiais(substr(CASE WHEN a.cd_cgc IS NULL THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'DDT') ||OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'T')  ELSE nfe_obter_dados_pj(a.cd_cgc,'DDDT') END ,1,14)) tomador_fone,
	null tomador_ramal,
	null tomador_fax,
	a.nr_nota_fiscal rps_num,
	a.cd_serie_nf rps_serie,
	to_char(a.dt_emissao, 'dd')  rps_dia,
	to_char(a.dt_emissao, 'mm')  rps_mes,
	to_char(a.dt_emissao, 'yyyy')  rps_ano,
	'1' rps_tipo
from 	nota_fiscal_lote_nfe l,
	nfe_transmissao_nf n,
	nfe_transmissao t,
	nota_fiscal a
where	l.nr_seq_transmissao = t.nr_sequencia
and	t.nr_sequencia	= n.nr_seq_transmissao
and	a.nr_sequencia = n.nr_seq_nota_fiscal
and	t.nr_sequencia = (select max(nr_sequencia) from nfe_transmissao)
and	l.nr_sequencia = (select max(nr_sequencia) from nota_fiscal_lote_nfe)
order by
	(a.nr_nota_fiscal)::numeric;

