-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW nota_interf_volta_redonda_v (tp_registro, nr_inscricao_estadual, nr_nota_fiscal, dt_emissao, ds_local_servico, vl_nota_fiscal, cd_servico, vl_valor_iss_retido, vl_irrf, vl_pis, vl_cofins, vl_csll, vl_inss, cd_cgc_cd_cnpj, dt_vencimento, ds_observacao, vl_deducao, cd_forma_pagto, ds_consignatario, nr_aliquota_iss, qt_item, ds_unidade, ds_item, vl_unitario, ds_razao_social, nr_inscricao_municipal, ds_endereco, ds_municipio, sg_uf, cd_cep, ds_email, ds_bairro, nr_telefone, cd_estabelecimento, nr_seq_nf) AS select	1				tp_registro,
	cd_inscricao_municipal		nr_inscricao_estadual,
	''				nr_nota_fiscal,
	null				dt_emissao,
	'' 				ds_local_servico,
	0				vl_nota_fiscal,
	'' 				cd_servico,
	0				vl_valor_iss_retido,
	0				vl_irrf,
	0				vl_pis,
	0				vl_cofins,
	0				vl_csll,
	0				vl_inss,
	''				cd_cgc_cd_cnpj,
	''				dt_vencimento,
	''				ds_observacao,
	0				vl_deducao,
	''				cd_forma_pagto,
	''				ds_consignatario,
	''				nr_aliquota_iss,
	0				qt_item,
	''				ds_unidade,
	''				ds_item,
	0				vl_unitario,
	''				ds_razao_social,
	''				nr_inscricao_municipal,
	''				ds_endereco,
	''				ds_municipio,
	''				sg_uf,
	''				cd_cep,
	''				ds_email,
	''				ds_bairro,
	''				nr_telefone,
	cd_estabelecimento		cd_estabelecimento,
	0				nr_seq_nf
FROM	estabelecimento_v
where	1=1

union
 /* Registro de Nota Fiscal */
select	2				tp_registro,
	cd_inscricao_estadual		nr_inscricao_estadual,
	n.nr_nota_fiscal			nr_nota_fiscal,
	n.dt_emissao			dt_emissao,
	'1' 				ds_local_servico,
	n.vl_total_nota			vl_nota_fiscal,
	-- substr(obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CDMDV'),1,25) 	cd_servico,
	substr(obter_dados_pf_pj_estab(n.cd_estabelecimento, null, n.cd_cgc_emitente, 'ATIV'), 1, 25) cd_servico,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'ISS','VL'),'0')	vl_valor_iss_retido,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'IR','VL'),'0')	vl_irrf,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'PIS','VL'),'0')	vl_pis,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'COFINS','VL'),'0')	vl_cofins,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'CSLL','VL'),'0')	vl_csll,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'INSS','VL'),'0')	vl_inss,
	n.cd_cgc_emitente		cd_cgc_cd_cnpj,
	CASE WHEN j.ie_forma_pagamento=1 THEN null  ELSE substr(obter_dados_nota_fiscal(n.nr_sequencia,'21'),1,255) END 	dt_vencimento,
	n.ds_observacao			ds_observacao,
	coalesce(nfe_obter_valores_totais_num(n.nr_sequencia,'COFINS','VL'),'0')	vl_deducao,
	CASE WHEN j.ie_forma_pagamento=1 THEN '001'  ELSE '002' END  cd_forma_pagto,
	n.cd_cgc			ds_consignatario,
	' '				nr_aliquota_iss,
	0				qt_item,
	''				ds_unidade,
	''				ds_item,
	0				vl_unitario,
	''				ds_razao_social,
	''				nr_inscricao_municipal,
	''				ds_endereco,
	''				ds_municipio,
	''				sg_uf,
	''				cd_cep,
	''				ds_email,
	''				ds_bairro,
	''				nr_telefone,
	e.cd_estabelecimento		cd_estabelecimento,
	n.nr_sequencia		nr_seq_nf
from	estabelecimento e,
	nota_fiscal n,
	condicao_pagamento j
where	e.cd_estabelecimento = n.cd_estabelecimento
and	n.cd_condicao_pagamento = j.cd_condicao_pagamento
and	substr(obter_se_nota_entrada_saida(n.nr_sequencia),1,1) = 'S'

union
 /* Registro de item de serviço */
select	3				tp_registro,
	cd_inscricao_estadual		nr_inscricao_estadual,
	n.nr_nota_fiscal		nr_nota_fiscal,
	dt_emissao			dt_emissao,
	'' 				ds_local_servico,
	0				vl_nota_fiscal,
	'' 				cd_servico,
	0				vl_valor_iss_retido,
	0				vl_irrf,
	0				vl_pis,
	0				vl_cofins,
	0				vl_csll,
	0				vl_inss,
	''				cd_cgc_cd_cnpj,
	''				dt_vencimento,
	''				ds_observacao,
	vl_total_item_nf		vl_deducao,
	''				cd_forma_pagto,
	''				ds_consignatario,
	''				nr_aliquota_iss,
	i.qt_item_nf			qt_item,
	'UN'				ds_unidade,
	CASE WHEN i.cd_material IS NULL THEN  substr(obter_desc_estrut_proc(null, null, null, i.cd_procedimento, i.ie_origem_proced),1,200)  ELSE substr(obter_desc_material(i.cd_material), 1,80) END  ds_item,
	i.vl_unitario_item_nf		vl_unitario,
	''				ds_razao_social,
	''				nr_inscricao_municipal,
	''				ds_endereco,
	''				ds_municipio,
	''				sg_uf,
	''				cd_cep,
	''				ds_email,
	''				ds_bairro,
	''				nr_telefone,
	e.cd_estabelecimento		cd_estabelecimento,
	n.nr_sequencia		nr_seq_nf
from	estabelecimento e,
	nota_fiscal n,
	nota_fiscal_item i
where	e.cd_estabelecimento = n.cd_estabelecimento
and	n.nr_sequencia		= i.nr_sequencia
and	substr(obter_se_nota_entrada_saida(n.nr_sequencia),1,1) = 'S'

union
 /* Registro de tomador de serviço */
select	4				tp_registro,
	cd_inscricao_estadual		nr_inscricao_estadual,
	n.nr_nota_fiscal		nr_nota_fiscal,
	dt_emissao			dt_emissao,
	'' 				ds_local_servico,
	0				vl_nota_fiscal,
	'' 				cd_servico,
	0				vl_valor_iss_retido,
	0				vl_irrf,
	0				vl_pis,
	0				vl_cofins,
	0				vl_csll,
	0				vl_inss,
	n.cd_cgc_emitente		cd_cgc_cd_cnpj,
	''				dt_vencimento,
	''				ds_observacao,
	0				vl_deducao,
	''				cd_forma_pagto,
	'1'				ds_consignatario,
	''				nr_aliquota_iss,
	0				qt_item,
	''				ds_unidade,
	''				ds_item,
	0				vl_unitario,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'N'),1,80) ds_razao_social,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'IM'),1,14) nr_inscricao_municipal,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'E'),1,40) ds_endereco,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,25) ds_municipio,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,25) sg_uf,
	substr(elimina_caracteres_especiais(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,9)),1,9)	cd_cep,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'M'),1,25) ds_email,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,14) ds_bairro,
	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'T'),1,11) nr_telefone,
	e.cd_estabelecimento		cd_estabelecimento,
	n.nr_sequencia		nr_seq_nf
from	estabelecimento e,
	nota_fiscal n
where	e.cd_estabelecimento = n.cd_estabelecimento;

