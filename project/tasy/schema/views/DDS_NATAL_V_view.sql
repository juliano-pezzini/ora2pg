-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW dds_natal_v (tp_registro, dt_emissao, nr_sequencia, cd_estabelecimento, cd_inscricao_municipal, data_competencia, tipo_dds, data_geracao, hora_geracao, app_gerador_versao, codigo_prefeitura, especie_dds, indicacao_movimento, razao_social, endereco_logradouro, endereco_numero, endereco_complemento, endereco_bairro, endereco_cep, cnpj, telefone_ddd, telefone_numero, fax_ddd, fax_numero, nome_fantasia, cpf_cnpj_responsavel, email, crc, tipo_servico, sequencial, prestador_razao_social, prestador_endereco_logradouro, prestador_endereco_numero, prestador_endereco_complemento, prestador_endereco_bairro, prestador_municipio, prestador_estado, prestador_cep, prestador_cnpj, documento_tipo, cd_serie_nf, subserie_nota_fiscal, numero_nota_fiscal, data_emissao, data_pagamento, prestador_inscricao_municipal, valor_servico, valor_aliquota, valor_base_calculo, valor_iss_retido, iss_retido, sequencial_recibo, codigo_base_legal, prestador_ddd_telefone, prestador_telefone, prestador_ddd_fax, prestador_fax, prestador_email, ie_estrangeiro, qtd_contrinuintes, qtd_prestadores, qtd_base_legal, qtd_turmas, qtd_servicos_instituicoes_fin, qtd_notas_emitidas, qtd_notas_avulsas, qtd_deducoes, qtd_servicos_aut_especifica, qtd_turmas_declaradas, qtd_despesas, qtd_instituicoes_fin) AS SELECT DISTINCT 'A' tp_registro,
  null dt_emissao,
  null nr_sequencia,
  e.cd_estabelecimento,
	substr(e.cd_inscricao_municipal, 1, 7) cd_inscricao_municipal,
	to_char(LOCALTIMESTAMP, 'YYYYMM') data_competencia,
	'N' tipo_dds,
	to_char(LOCALTIMESTAMP, 'DDMMYYYY') data_geracao,
  to_char(LOCALTIMESTAMP, 'HH24MISS') hora_geracao,
  1000 app_gerador_versao,
  'NATA' codigo_prefeitura,
  'EM' especie_dds,
  'S' indicacao_movimento,
  null razao_social,
  null endereco_logradouro,
  null endereco_numero,
  null endereco_complemento,
  null endereco_bairro,
  null endereco_cep,
  null cnpj,
  null telefone_ddd,
  null telefone_numero,
  null fax_ddd,
  null fax_numero,
  null nome_fantasia,
  null cpf_cnpj_responsavel,
  null email,
  null crc,
  null tipo_servico,
  null sequencial,
  null prestador_razao_social,
  null prestador_endereco_logradouro,
  null prestador_endereco_numero,
  null prestador_endereco_complemento,
  null prestador_endereco_bairro,
  null prestador_municipio,
  null prestador_estado,
  null prestador_cep, 
  null prestador_cnpj,
  null documento_tipo,
  null cd_serie_nf,
  null subserie_nota_fiscal,
  null numero_nota_fiscal,
  null data_emissao,
  null data_pagamento,
  null prestador_inscricao_municipal,
  null valor_servico,
  null valor_aliquota,
  null valor_base_calculo,
  null valor_iss_retido,
  null iss_retido,
  null sequencial_recibo,
  null codigo_base_legal,
  null prestador_ddd_telefone,
  null prestador_telefone,
  null prestador_ddd_fax,
  null prestador_fax,
  null prestador_email,
  null ie_estrangeiro,
  null qtd_contrinuintes,
  null qtd_prestadores,
  null qtd_base_legal,
  null qtd_turmas,
  null qtd_servicos_instituicoes_fin,
  null qtd_notas_emitidas,
  null qtd_notas_avulsas,
  null qtd_deducoes,
  null qtd_servicos_aut_especifica,
  null qtd_turmas_declaradas,
  null qtd_despesas,
  null qtd_instituicoes_fin
FROM	estabelecimento e

union all

select distinct
  'C' tp_registro,
  null dt_emissao,
  null nr_sequencia,
  n.cd_estabelecimento,
	null cd_inscricao_municipal,
	null data_competencia,
	null tipo_dds,
	null data_geracao,
  null hora_geracao,
  null app_gerador_versao,
  null codigo_prefeitura,
  null especie_dds,
  null indicacao_movimento,
  rpad(substr(elimina_caractere_especial(obter_nome_pj(n.cd_cgc)), 1, 55), 55, ' ') razao_social,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'EN'))), 1, 35), 35, ' ') endereco_logradouro,
  rpad(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'NR'), 1, 5)), 5, ' ') endereco_numero,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'CO'))), 1, 12), 12, ' ') endereco_complemento,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'B'))), 1, 19), 19, ' ') endereco_bairro,
  regexp_replace(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'CEP'), 1, 8)), '([[:digit:]]{5})([[:digit:]]{3})', '\1-\2') endereco_cep, 
  substr(n.cd_cgc, 1, 14) cnpj,
  substr(somente_numero(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'DDT')), 1, 2) telefone_ddd,
  rpad(substr(somente_numero(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'T')), 1, 8), 8, ' ') telefone_numero,
  somente_numero(substr(obter_dados_pf_pj(null, n.cd_cgc, 'DDF'), 1, 2)) fax_ddd,
  rpad(somente_numero(substr(obter_dados_pf_pj(null, n.cd_cgc, 'FAX'), 1, 8)), 8, ' ') fax_numero,
  rpad(substr(obter_nome_fantasia_pj(n.cd_cgc), 1, 55), 55, ' ') nome_fantasia,
  substr(n.cd_cgc, 1, 14) cpf_cnpj_responsavel,
  rpad(substr(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc, 'M')), 1, 35), 35, ' ') email,
  rpad(' ', 7, ' ') crc,
  '6' tipo_servico,
  null sequencial,
  null prestador_razao_social,
  null prestador_endereco_logradouro,
  null prestador_endereco_numero,
  null prestador_endereco_complemento,
  null prestador_endereco_bairro,
  null prestador_municipio,
  null prestador_estado,
  null prestador_cep, 
  null prestador_cnpj,
  null documento_tipo,
  null cd_serie_nf,
  null subserie_nota_fiscal,
  null numero_nota_fiscal,
  null data_emissao,
  null data_pagamento,
  null prestador_inscricao_municipal,
  null valor_servico,
  null valor_aliquota,
  null valor_base_calculo,
  null valor_iss_retido,
  null iss_retido,
  null sequencial_recibo,
  null codigo_base_legal,
  null prestador_ddd_telefone,
  null prestador_telefone,
  null prestador_ddd_fax,
  null prestador_fax,
  null prestador_email,
  null ie_estrangeiro,
  null qtd_contrinuintes,
  null qtd_prestadores,
  null qtd_base_legal,
  null qtd_turmas,
  null qtd_servicos_instituicoes_fin,
  null qtd_notas_emitidas,
  null qtd_notas_avulsas,
  null qtd_deducoes,
  null qtd_servicos_aut_especifica,
  null qtd_turmas_declaradas,
  null qtd_despesas,
  null qtd_instituicoes_fin
from	nota_fiscal n,
      estabelecimento e
where	substr(obter_se_nota_entrada_saida(n.nr_sequencia), 1, 1) = 'E'
and   n.cd_estabelecimento = e.cd_estabelecimento
and   e.cd_cgc = n.cd_cgc

union all

select distinct
  'E' tp_registro,
  null dt_emissao,
  null nr_sequencia,
  n.cd_estabelecimento,
  null cd_inscricao_municipal,
	null data_competencia,
	null tipo_dds,
	null data_geracao,
  null hora_geracao,
  null app_gerador_versao,
  null codigo_prefeitura,
  null especie_dds,
  null indicacao_movimento,
  null razao_social,
  null endereco_logradouro,
  null endereco_numero,
  null endereco_complemento,
  null endereco_bairro,
  null endereco_cep, 
  null cnpj,
  null telefone_ddd,
  null telefone_numero,
  null fax_ddd,
  null fax_numero,
  null nome_fantasia,
  null cpf_cnpj_responsavel,
  null email,
  null crc, 
  null tipo_servico,
  null sequencial,
  rpad(substr(elimina_caractere_especial(obter_nome_pj(n.cd_cgc_emitente)), 1, 55), 55, ' ') prestador_razao_social,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'EN'))), 1, 35), 35, ' ') prestador_endereco_logradouro,
  rpad(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'NR'), 1, 5)), 5, ' ') prestador_endereco_numero,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CO'))), 1, 12), 12, ' ') prestador_endereco_complemento,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'B'))), 1, 19), 19, ' ') prestador_endereco_bairro,
  lpad(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CDMNF'), 25, 0) prestador_municipio,
  substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'UF'))), 1, 2) prestador_estado,
  regexp_replace(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CEP'), 1, 8)), '([[:digit:]]{5})([[:digit:]]{3})', '\1-\2') prestador_cep, 
  rpad(substr(n.cd_cgc_emitente, 1, 14), 20, ' ') prestador_cnpj,
  null documento_tipo,
  null cd_serie_nf,
  null subserie_nota_fiscal,
  null numero_nota_fiscal,
  null data_emissao,
  null data_pagamento,
  substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'IM'), 1, 7) prestador_inscricao_municipal,
  null valor_servico,
  null valor_aliquota,
  null valor_base_calculo,
  null valor_iss_retido,
  null iss_retido,
  null sequencial_recibo,
  null codigo_base_legal,
  somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'DDT'), 1, 2)) prestador_ddd_telefone,
  rpad(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'T'), 1, 8)), 8, ' ') prestador_telefone,
  somente_numero(substr(obter_dados_pf_pj(null, n.cd_cgc_emitente, 'FAX'), 1, 2)) prestador_ddd_fax,
  rpad(somente_numero(substr(obter_dados_pf_pj(null, n.cd_cgc_emitente, 'DDF'), 1, 8)), 8, ' ') prestador_fax,
  rpad(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'M'), 1, 35), 35, ' ') prestador_email,
  obter_se_pf_pj_estrangeiro(null, n.cd_cgc_emitente) ie_estrangeiro,
  null qtd_contrinuintes,
  null qtd_prestadores,
  null qtd_base_legal,
  null qtd_turmas,
  null qtd_servicos_instituicoes_fin,
  null qtd_notas_emitidas,
  null qtd_notas_avulsas,
  null qtd_deducoes,
  null qtd_servicos_aut_especifica,
  null qtd_turmas_declaradas,
  null qtd_despesas,
  null qtd_instituicoes_fin
from nota_fiscal n,
     estabelecimento e
where exists (
  select  1
  from  w_nota_fiscal x
  where  x.nr_seq_nota_fiscal = n.nr_sequencia)
and	  substr(obter_se_nota_entrada_saida(n.nr_sequencia), 1, 1) = 'E'
and		n.cd_estabelecimento = e.cd_estabelecimento
and   e.cd_cgc = n.cd_cgc
and   n.cd_cgc_emitente is not null
and   n.vl_mercadoria > 0

union all

select 
	'O' tp_registro,
  n.dt_emissao dt_emissao,
  n.nr_sequencia,
  n.cd_estabelecimento,
  null cd_inscricao_municipal,
	null data_competencia,
	null tipo_dds,
	null data_geracao,
  null hora_geracao,
  null app_gerador_versao,
  null codigo_prefeitura,
  null especie_dds,
  null indicacao_movimento,
  null razao_social,
  null endereco_logradouro,
  null endereco_numero,
  null endereco_complemento,
  null endereco_bairro,
  null endereco_cep, 
  null cnpj,
  null telefone_ddd,
  null telefone_numero,
  null fax_ddd,
  null fax_numero,
  null nome_fantasia,
  null cpf_cnpj_responsavel,
  null email,
  null crc,
  null tipo_servico,
  lpad(rownum, 6, 0) sequencial,
  rpad(substr(elimina_caractere_especial(obter_nome_pj(n.cd_cgc_emitente)), 1, 55), 55, ' ') prestador_razao_social,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'EN'))), 1, 35), 35, ' ') prestador_endereco_logradouro,
  rpad(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'NR'), 1, 5)), 5, ' ') prestador_endereco_numero,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CO'))), 1, 12), 12, ' ') prestador_endereco_complemento,
  rpad(substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'B'))), 1, 19), 19, ' ') prestador_endereco_bairro,
  lpad(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CDMNF'), 25, 0) prestador_municipio,
  substr(elimina_caractere_especial(elimina_acentuacao(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'UF'))), 1, 2) prestador_estado,
  regexp_replace(somente_numero(substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'CEP'), 1, 8)), '([[:digit:]]{5})([[:digit:]]{3})', '\1-\2') prestador_cep, 
  rpad(substr(n.cd_cgc_emitente, 1, 14), 20, ' ') prestador_cnpj,
  'N' documento_tipo,
  rpad(substr(n.cd_serie_nf, 1, 2), 2, ' ') cd_serie_nf,
  rpad(' ', 3, ' ') subserie_nota_fiscal,
  rpad(substr(n.nr_nota_fiscal, 1, 14), 14, ' ') numero_nota_fiscal,
  to_char(n.dt_emissao, 'DDMMYYYY') data_emissao,
  to_char(n.dt_entrada_saida, 'DDMMYYYY') data_pagamento,
  substr(nfse_obter_dados_pf_pj(null, n.cd_cgc_emitente, 'IM'), 1, 7) prestador_inscricao_municipal,
  lpad(replace(replace(replace(campo_mascara_virgula(n.vl_total_nota), ' ', null), ',', null), '.', null), 11, 0) valor_servico,
  lpad(replace(replace(replace(campo_mascara_virgula(CASE WHEN tax_validate_withholding_tax(n.nr_sequencia, 'ISS')='S' THEN  obter_valor_tipo_tributo_nota(n.nr_sequencia, 'X', 'ISS')  ELSE 0 END ), '.', null), ',', null), ' ', null), 11, 0) valor_aliquota, 
  lpad(replace(replace(replace(campo_mascara_virgula(CASE WHEN tax_validate_withholding_tax(n.nr_sequencia, 'ISS')='S' THEN  obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS')  ELSE 0 END ), '.', null), ',', null), ' ', null), 11, 0) valor_base_calculo,
  lpad(replace(replace(replace(campo_mascara_virgula(CASE WHEN tax_validate_withholding_tax(n.nr_sequencia, 'ISS')='S' THEN  obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'ISS')  ELSE 0 END ), '.', null), ',', null), ' ', null), 11, 0) valor_iss_retido,
  tax_validate_withholding_tax(n.nr_sequencia, 'ISS') iss_retido,
  lpad((select row_number() OVER () AS rownum from  w_nota_fiscal x
        where  x.nr_seq_nota_fiscal = n.nr_sequencia
        and	  substr(obter_se_nota_entrada_saida(n.nr_sequencia), 1, 1) = 'E'
        and		n.cd_estabelecimento = e.cd_estabelecimento
        and   e.cd_cgc = n.cd_cgc
        and   n.cd_cgc_emitente is not null
        and   n.vl_mercadoria > 0), 6, 0) sequencial_recibo,
  rpad(' ', 5, ' ') codigo_base_legal,
  null prestador_ddd_telefone,
  null prestador_telefone,
  null prestador_ddd_fax,
  null prestador_fax,
  null prestador_email,
  null ie_estrangeiro,
  null qtd_contrinuintes,
  null qtd_prestadores,
  null qtd_base_legal,
  null qtd_turmas,
  null qtd_servicos_instituicoes_fin,
  null qtd_notas_emitidas,
  null qtd_notas_avulsas,
  null qtd_deducoes,
  null qtd_servicos_aut_especifica,
  null qtd_turmas_declaradas,
  null qtd_despesas,
  null qtd_instituicoes_fin
from nota_fiscal n,
     estabelecimento e
where exists (
  select  1
  from  w_nota_fiscal x
  where  x.nr_seq_nota_fiscal = n.nr_sequencia)
and	  substr(obter_se_nota_entrada_saida(n.nr_sequencia), 1, 1) = 'E'
and		n.cd_estabelecimento = e.cd_estabelecimento
and   e.cd_cgc = n.cd_cgc
and   n.cd_cgc_emitente is not null
and   n.vl_mercadoria > 0

union all

select distinct
  'Z'  tp_registro,
  null dt_emissao,
  null nr_sequencia,
  e.cd_estabelecimento cd_estabelecimento,
	null cd_inscricao_municipal,
	null data_competencia,
	null tipo_dds,
	null data_geracao,
  null hora_geracao,
  null app_gerador_versao,
  null codigo_prefeitura,
  null especie_dds,
  null indicacao_movimento,
  null razao_social,
  null endereco_logradouro,
  null endereco_numero,
  null endereco_complemento,
  null endereco_bairro,
  null endereco_cep, 
  null cnpj,
  null telefone_ddd,
  null telefone_numero,
  null fax_ddd,
  null fax_numero,
  null nome_fantasia,
  null cpf_cnpj_responsavel,
  null email,
  null crc,
  null tipo_servico,
  null sequencial,
  null prestador_razao_social,
  null prestador_endereco_logradouro,
  null prestador_endereco_numero,
  null prestador_endereco_complemento,
  null prestador_endereco_bairro,
  null prestador_municipio,
  null prestador_estado,
  null prestador_cep, 
  null prestador_cnpj,
  null documento_tipo,
  null cd_serie_nf,
  null subserie_nota_fiscal,
  null numero_nota_fiscal,
  null data_emissao,
  null data_pagamento,
  null prestador_inscricao_municipal,
  null valor_servico,
  null valor_aliquota,
  null valor_base_calculo,
  null valor_iss_retido,
  null iss_retido,
  null sequencial_recibo,
  null codigo_base_legal,
  null prestador_ddd_telefone,
  null prestador_telefone,
  null prestador_ddd_fax,
  null prestador_fax,
  null prestador_email,
  null ie_estrangeiro,
  lpad('1', 5, '0') qtd_contrinuintes,
  lpad((select count(distinct n.cd_cgc_emitente) 
        from   w_nota_fiscal x,
                nota_fiscal n
        where  x.nr_seq_nota_fiscal = n.nr_sequencia
        and		n.cd_estabelecimento = e.cd_estabelecimento
        and    e.cd_cgc = n.cd_cgc
        and    n.cd_cgc_emitente is not null
        and substr(obter_se_nota_entrada_saida(n.nr_sequencia), 1, 1) = 'E'
        and   n.vl_mercadoria > 0), 5, '0') qtd_prestadores,
  lpad('0', 5, '0') qtd_base_legal,
  lpad('0', 5, '0') qtd_turmas,
  lpad('0', 5, '0') qtd_servicos_instituicoes_fin,
  lpad('0', 5, '0') qtd_notas_emitidas,
  lpad('0', 5, '0') qtd_notas_avulsas,
  lpad('0', 5, '0') qtd_deducoes,
  lpad('0', 5, '0') qtd_servicos_aut_especifica,
  lpad('0', 5, '0') qtd_turmas_declaradas,
  lpad('0', 5, '0') qtd_despesas,
  lpad('0', 5, '0') qtd_instituicoes_fin
from nota_fiscal n,
     estabelecimento e
where exists (
  select  1
  from  w_nota_fiscal x
  where  x.nr_seq_nota_fiscal = n.nr_sequencia)
and	  substr(obter_se_nota_entrada_saida(n.nr_sequencia), 1, 1) = 'E'
and		n.cd_estabelecimento = e.cd_estabelecimento
and   e.cd_cgc = n.cd_cgc
and   n.vl_mercadoria > 0;

