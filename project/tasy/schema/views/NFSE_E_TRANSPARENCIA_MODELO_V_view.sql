-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW nfse_e_transparencia_modelo_v (nr_sequencia, tiponfs, nr_seq_nota, inscricaoprestador, serrps, numrps, dtemi, retfonte, codsrv, discrsrv, vlnfs, vlded, discrded, vlbascalc, alqiss, vliss, vlissret, cpfcnptom, razsoctom, tipologtom, logtom, numendtom, complendtom, bairrotom, muntom, siglauftom, ceptom, telefone, inscricaomunicipal, tipologlocpre, loglocpre, numendlocpre, complendlocpre, bairrolocpre, munlocpre, siglauflocpre, ceplocpre, email1) AS select	a.nr_sequencia nr_sequencia,
		'RPS' TipoNFS,
		a.nr_sequencia nr_seq_nota,
		coalesce(substr(lpad(obter_dados_pf_pj('',a.cd_cgc_emitente,'IM'),8,'0'),1,30),'00000000') InscricaoPrestador,
		a.cd_serie_nf SerRps,
		(select max(x.nr_rps_sequencial)+1 FROM nota_fiscal x where x.cd_estabelecimento = a.cd_estabelecimento) NumRps,
		to_char(a.dt_emissao,'dd/mm/yyyy') DtEmi,
		CASE WHEN substr(obter_se_nf_retem_iss(a.nr_sequencia),1,1)='S' THEN  CASE WHEN obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'ISSST')=0 THEN  'NAO'  ELSE 'SIM' END   ELSE 'NAO' END  RetFonte,
		substr(lpad(obter_cod_grupo_ativ(a.cd_estabelecimento,a.nr_sequencia,'C'),5,'0'),1,5) CodSrv,
		coalesce(substr(obter_descricao_rps(a.cd_estabelecimento,a.nr_sequencia,'DS_SERVICOS'),1,1000),'Servicos') DiscrSrv,
		Campo_Mascara_casas(a.vl_total_nota,2) VlNFS,
		Campo_Mascara_casas(coalesce(vl_descontos, 0), 2)  VlDed,
		CASE WHEN coalesce(vl_descontos, 0)=0 THEN 'DESCONTOS' END  DiscrDed,
		CASE WHEN obter_valor_tipo_tributo_nota(a.nr_sequencia, 'B', 'ISSST')=0 THEN  Campo_Mascara_casas(a.vl_total_nota,2)   ELSE Campo_Mascara_casas(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'B', 'ISS'), 2) END  VlBasCalc,
		Campo_Mascara_casas(obter_valor_tipo_tributo_nota(a.nr_sequencia,'X',CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='N' THEN  'ISS'  ELSE 'ISSST' END ), 2) AlqIss,
		Campo_Mascara_casas(obter_valor_tipo_tributo_nota(a.nr_sequencia,'V',CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='N' THEN  'ISS'  ELSE 'ISSST' END ), 2) VlIss,
		Campo_Mascara_casas(CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='N' THEN 0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'ISSST') END , 2) VlIssRet,
		CASE WHEN obter_se_pf_pj_estrangeiro(a.cd_pessoa_fisica, a.cd_cgc)='S' THEN 'EXTERIOR'  ELSE coalesce(a.cd_cgc,Obter_Cpf_Pessoa_Fisica(a.cd_pessoa_fisica)) END  CpfCnpTom,
		elimina_acentos(substr(CASE WHEN a.cd_cgc IS NULL THEN OBTER_NOME_PF(a.cd_pessoa_fisica)  ELSE nfe_obter_dados_pj(a.cd_cgc,'RZ') END ,1,60))  RazSocTom,
		coalesce(obter_dados_tomador_conta(a.nr_sequencia,'C','TL'),'RUA') TipoLogtom,
		substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'EN'))), 1, 255) LogTom,
		substr(CASE WHEN a.cd_cgc IS NULL THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'NR')  ELSE nfe_obter_dados_pj(a.cd_cgc,'NR') END ,1,60) NumEndTom,
		substr(elimina_caractere_esp_asc(CASE WHEN a.cd_cgc IS NULL THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'CO')  ELSE nfe_obter_dados_pj(a.cd_cgc,'CM') END ,'S','N'),1,60) ComplEndTom,
		substr(elimina_caractere_esp_asc(CASE WHEN a.cd_cgc IS NULL THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'B')  ELSE nfe_obter_dados_pj(a.cd_cgc,'BA') END ,'S','N'),1,60) BairroTom,
		CASE WHEN obter_se_pf_pj_estrangeiro(a.cd_pessoa_fisica, a.cd_cgc)='S' THEN 'EXTERIOR'  ELSE substr(elimina_caractere_esp_asc(nfse_obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'DM'),'S','N'), 1, 60) END  MunTom,	
		substr(CASE WHEN a.cd_cgc IS NULL THEN CASE WHEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'UF')='IN' THEN 'EX'  ELSE OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'UF') END   ELSE CASE WHEN nfe_obter_dados_pj(a.cd_cgc,'UF')='IN' THEN 'EX'  ELSE nfe_obter_dados_pj(a.cd_cgc,'UF') END  END ,1,2) SiglaUFTom,
		substr(CASE WHEN a.cd_cgc IS NULL THEN CASE WHEN obter_se_pf_pj_estrangeiro(a.cd_pessoa_fisica,null)='N' THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'CEP')  ELSE null END   ELSE CASE WHEN obter_se_pf_pj_estrangeiro(null,a.cd_cgc)='N' THEN nfe_obter_dados_pj(a.cd_cgc,'CEP')  ELSE null END  END ,1,8) CepTom,
		Elimina_Caracteres_Especiais(substr(CASE WHEN a.cd_cgc IS NULL THEN OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'DDT') ||OBTER_COMPL_PF(a.cd_pessoa_fisica,1,'T')  ELSE nfe_obter_dados_pj(a.cd_cgc,'DDDT') END ,1,14)) Telefone,
		substr(obter_dados_pf_pj('', a.cd_cgc, 'IM'), 1, 30) InscricaoMunicipal,
		'RUA' TipoLogLocPre,
		substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj('', a.cd_cgc_emitente, 'EN'))), 1, 255)  LogLocPre,
		nfe_obter_dados_pj(a.cd_cgc_emitente,'NR') NumEndLocPre,
		substr(elimina_caractere_esp_asc(nfe_obter_dados_pj(a.cd_cgc_emitente,'CM'),'S','N'),1,60) ComplEndLocPre,
		substr(elimina_caractere_esp_asc(nfe_obter_dados_pj(a.cd_cgc_emitente,'BA'),'S','N'),1,60) BairroLocPre,
		substr(elimina_caractere_esp_asc(nfe_obter_dados_pj(a.cd_cgc_emitente,'MU'),'S','N'),1,60) MunLocPre,
		substr(elimina_caractere_esp_asc(nfe_obter_dados_pj(a.cd_cgc_emitente,'UF'),'S','N'),1,60) SiglaUFLocpre,
		nfe_obter_dados_pj(a.cd_cgc_emitente,'CEP') CepLocPre,
		CASE WHEN cd_pessoa_fisica='' THEN			coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj_estab(a.cd_estabelecimento, '', a.cd_cgc, 'M'))), 1, 80), '')  ELSE coalesce(substr(tiss_eliminar_caractere(elimina_acentuacao(obter_dados_pf_pj(a.cd_pessoa_fisica, '', 'M'))), 1, 80), '') END  Email1
	from	nota_fiscal a
	order by a.nr_nota_fiscal;

