-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW exp_rps_prefeitura_inter_sp_v (tp_registro, nr_inscricao_municipal, ds_tipo_rps, cd_serie_nf, nr_nota_fiscal, dt_emissao, ie_situacao, ie_situacao_nf, vl_servico, vl_descontos, cd_servico, vl_aliquota, ie_iss_retido, ie_cpf_cnpj, cd_cpf_cnpj, nr_inscricao_munic_tomador, nr_inscricao_estad_tomador, nm_tomador, ds_tipo_logradouro, ds_endereco, nr_endereco, ds_complemento, ds_bairro, ds_municipio, sg_estado, cd_cep, ds_email, ds_servicos, ds_observacao, vl_total_servicos, vl_total_descontos, qt_linhas, nr_sequencia, cd_operacao_nf, cd_estabelecimento, ds_natureza_operacao, vl_deducoes, vl_total_deducoes, vl_nota_fiscal, vl_total_nota_fiscal, cd_pessoa_fisica, indcnpj, cnpj_intermed, insc_municipal_intermed, ds_email_intermed) AS select	1					tp_registro,
	a.cd_inscricao_municipal		nr_inscricao_municipal, 
	''					ds_tipo_rps, 
	''					cd_serie_nf, 
	'1'					nr_nota_fiscal, 
	null				dt_emissao, 
	''					ie_situacao, 
	''					ie_situacao_nf, 
	0					vl_servico, 
	0					vl_descontos, 
	''					cd_servico, 
	0					vl_aliquota, 
	''					ie_iss_retido, 
	0					ie_cpf_cnpj, 
	''					cd_cpf_cnpj, 
	''					nr_inscricao_munic_tomador, 
	''					nr_inscricao_estad_tomador, 
	''					nm_tomador, 
	''					ds_tipo_logradouro, 
	''					ds_endereco, 
	''					nr_endereco, 
	''					ds_complemento, 
	''					ds_bairro, 
	''					ds_municipio, 
	''					sg_estado, 
	''					cd_cep, 
	''					ds_email, 
	' '					ds_servicos, 
	''					ds_observacao, 
	0					vl_total_servicos, 
	0					vl_total_descontos, 
	0					qt_linhas, 
	0					nr_sequencia, 
	0					cd_operacao_nf, 
	a.cd_estabelecimento, 
	''					ds_natureza_operacao, 
	0					vl_deducoes, 
	0					vl_total_deducoes, 
	0					vl_nota_fiscal, 
	0					vl_total_nota_fiscal, 
	''					cd_pessoa_fisica, 
	0					IndCNPJ, 
	''					CNPJ_Intermed, 
	''					INSC_MUNICIPAL_Intermed, 
	''					DS_EMAIL_Intermed 
FROM	estabelecimento a 

union
 
select	2						tp_registro, 
	''							nr_inscricao_municipal, 
	'RPS'						ds_tipo_rps, 
	n.cd_serie_nf				cd_serie_nf, 
	n.nr_nota_fiscal			nr_nota_fiscal, 
	trunc(n.dt_emissao)			dt_emissao, 
	CASE WHEN obter_dados_natureza_operacao(n.cd_natureza_operacao,'ISS') IS NULL THEN CASE WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='1' THEN 'T' WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='2' THEN 'F' WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='3' THEN 'I' WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='5' THEN 'J'  ELSE 'I' END   ELSE obter_dados_natureza_operacao(n.cd_natureza_operacao,'ISS') END  ie_situacao, 
	n.ie_situacao				ie_situacao_nf, 
	CASE WHEN n.ie_situacao=1 THEN  n.vl_mercadoria WHEN n.ie_situacao=3 THEN  CASE WHEN n.ie_status_envio IS NULL THEN  n.vl_mercadoria  ELSE 0 END   ELSE 0 END  vl_servico, 
	n.vl_descontos				vl_descontos, 
	coalesce(o.nr_codigo_serv_prest,lpad(coalesce(substr(elimina_caractere_especial(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'), obter_procedimento_nfse(n.nr_sequencia,'O')),'CD')),1,5),obter_dados_pf_pj_estab(n.cd_estabelecimento, null, n.cd_cgc_emitente, 'ATIV')),5,'0')) cd_servico, 
	0	vl_aliquota, 
	CASE WHEN obter_dados_pf_pj(null,obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),'CDM')=355030 THEN  '3'  ELSE CASE WHEN substr(obter_se_nf_retem_iss(n.nr_sequencia),1,1)='S' THEN '1'  ELSE '2' END  END  ie_iss_retido,	 
	CASE WHEN substr(obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'UF'),1,2)='IN' THEN 3  ELSE CASE WHEN n.cd_pessoa_fisica IS NULL THEN 2  ELSE CASE WHEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) IS NULL THEN 3  ELSE 1 END  END  END  ie_cpf_cnpj,			 
	CASE WHEN substr(obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'UF'),1,2)='IN' THEN '00000000000000'  ELSE CASE WHEN n.cd_pessoa_fisica IS NULL THEN n.cd_cgc  ELSE CASE WHEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) IS NULL THEN '00000000000000'  ELSE obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) END  END  END  cd_cpf_cnpj, 
	CASE WHEN elimina_acentuacao(elimina_caracteres_especiais(upper(substr(obter_dados_pf_pj(null,n.cd_cgc,'CI'),1,50))))='SAOPAULO' THEN 	substr(obter_dados_pf_pj(null,n.cd_cgc,'IM'),1,8)  ELSE '00000000' END  nr_inscricao_munic_tomador, 
	substr(obter_dados_pf_pj(null,n.cd_cgc,'IE'),1,20) nr_inscricao_estad_tomador, 
	substr(obter_nome_pf_pj(n.cd_pessoa_fisica,n.cd_cgc),1,75) nm_tomador, 
	'Rua'					ds_tipo_logradouro, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'E'),1,40)='N/D' THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'EN'),1,50)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'E'),1,40) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'EN'),1,50) END , substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'EN'),1,50)) ds_endereco, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'NR'),1,10)='N/D' THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'),1,10)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'NR'),1,10) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'NR'),1,10) END , substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'NR'),1,10)) nr_endereco, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'CO'),1,30)='N/D' THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,30)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'CO'),1,30) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CO'),1,30) END , substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,30)) ds_complemento, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'B'),1,30)='N/D' THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,30)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'B'),1,30) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'B'),1,30) END , substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,30)) ds_bairro, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'CI'),1,50)='N/D' THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'CI'),1,50) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CI'),1,50) END , substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50)) ds_municipio, 
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'UF'),1,2)='N/D' THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2)  ELSE substr(obter_compl_pj(n.cd_cgc,1,'UF'),1,2) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'UF'),1,2) END , substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2)) sg_estado, 
	coalesce(to_char(CASE WHEN n.cd_pessoa_fisica IS NULL THEN CASE WHEN substr(obter_compl_pj(n.cd_cgc,1,'CEP'),1,15)='N/D' THEN  to_char(somente_numero(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))  ELSE substr(obter_compl_pj(n.cd_cgc,1,'CEP'),1,15) END   ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CEP'),1,15) END ), to_char(somente_numero(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))) cd_cep, 
	--nvl(decode(n.cd_pessoa_fisica,null,substr(obter_compl_pj(n.cd_cgc,1,'M'),1,80), substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'M'),1,60)), substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'M'),1,60)) ds_email, 
	substr(CASE WHEN cd_cgc IS NULL THEN  CASE WHEN nfse_obter_compl_pf(cd_pessoa_fisica,'M') IS NULL THEN obter_dados_pf_pj(cd_pessoa_fisica, null, 'M')  ELSE nfse_obter_compl_pf(cd_pessoa_fisica,'M') END   ELSE obter_dados_pf_pj_estab(cd_estabelecimento, null, cd_cgc, 'M') END ,1,60) ds_email, 
	substr(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'), 1, 1000) ds_servicos, 
	n.ds_observacao				ds_observacao, 
	0					vl_total_servicos, 
	0					vl_total_descontos, 
	0					qt_linhas, 
	n.nr_sequencia				nr_sequencia, 
	n.cd_operacao_nf 				cd_operacao_nf, 
	n.cd_estabelecimento, 
	substr(obter_desc_natureza_operacao(n.cd_natureza_operacao),1,100) ds_natureza_operacao, 
	coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0) vl_deducoes, 
	0					vl_total_deducoes, 
	CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END  vl_nota_fiscal, 
	0					vl_total_nota_fiscal, 
	n.cd_pessoa_fisica, 
	0					IndCNPJ, 
	''					CNPJ_Intermed, 
	''					INSC_MUNICIPAL_Intermed, 
	''					DS_EMAIL_Intermed	 
from	operacao_nota o, 
	nota_fiscal n 
where	exists ( 
	select	1 
	from	w_nota_fiscal x 
	where	x.nr_seq_nota_fiscal = n.nr_sequencia) 
and	o.cd_operacao_nf = n.cd_operacao_nf 
and	n.vl_total_nota > 0 
and obter_convenio_nf(n.nr_sequencia) is null 

union
 
select	2						tp_registro, 
	''							nr_inscricao_municipal, 
	'RPS'						ds_tipo_rps, 
	n.cd_serie_nf				cd_serie_nf, 
	n.nr_nota_fiscal			nr_nota_fiscal, 
	trunc(n.dt_emissao)			dt_emissao, 
	CASE WHEN obter_dados_natureza_operacao(n.cd_natureza_operacao,'ISS') IS NULL THEN CASE WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='1' THEN 'T' WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='2' THEN 'F' WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='3' THEN 'I' WHEN obter_dados_parametro_compras(n.cd_estabelecimento,14)='5' THEN 'J'  ELSE 'I' END   ELSE obter_dados_natureza_operacao(n.cd_natureza_operacao,'ISS') END  ie_situacao, 
	n.ie_situacao				ie_situacao_nf, 
	CASE WHEN n.ie_situacao=1 THEN  n.vl_mercadoria WHEN n.ie_situacao=3 THEN  CASE WHEN n.ie_status_envio IS NULL THEN  n.vl_mercadoria  ELSE 0 END   ELSE 0 END  vl_servico, 
	n.vl_descontos				vl_descontos, 
	coalesce(o.nr_codigo_serv_prest,lpad(coalesce(substr(elimina_caractere_especial(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'), obter_procedimento_nfse(n.nr_sequencia,'O')),'CD')),1,5),obter_dados_pf_pj_estab(n.cd_estabelecimento, null, n.cd_cgc_emitente, 'ATIV')),5,'0')) cd_servico, 
	0	vl_aliquota, 
	CASE WHEN obter_dados_pf_pj(null,obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),'CDM')=355030 THEN  '3'  ELSE CASE WHEN substr(obter_se_nf_retem_iss(n.nr_sequencia),1,1)='S' THEN '1'  ELSE '2' END  END  ie_iss_retido,	 
	3 ie_cpf_cnpj,			 
	'00000000000000' cd_cpf_cnpj, 
	rpad(' ', 8, ' ') nr_inscricao_munic_tomador, 
	rpad(' ', 12, ' ') nr_inscricao_estad_tomador, 
	rpad(' ', 75, ' ') nm_tomador, 
	rpad(' ', 3, ' ')	ds_tipo_logradouro, 
	rpad(' ', 50, ' ') ds_endereco, 
	rpad(' ', 10, ' ') nr_endereco, 
	rpad(' ', 30, ' ') ds_complemento, 
	rpad(' ', 30, ' ') ds_bairro, 
	rpad(' ', 50, ' ') ds_municipio, 
	rpad(' ', 2, ' ') sg_estado, 
	rpad(' ', 8, ' ') cd_cep, 
	rpad(' ', 75, ' ') ds_email, 
	substr(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'), 1, 955) || ' ARE N.O 12.017, PROCESSO 2013-0.224.393-0' ds_servicos, 
	n.ds_observacao				ds_observacao, 
	0					vl_total_servicos, 
	0					vl_total_descontos, 
	0					qt_linhas, 
	n.nr_sequencia				nr_sequencia, 
	n.cd_operacao_nf 				cd_operacao_nf, 
	n.cd_estabelecimento, 
	substr(obter_desc_natureza_operacao(n.cd_natureza_operacao),1,100) ds_natureza_operacao, 
	coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0) vl_deducoes, 
	0					vl_total_deducoes, 
	CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END  vl_nota_fiscal, 
	0					vl_total_nota_fiscal, 
	n.cd_pessoa_fisica, 
	0					IndCNPJ, 
	''					CNPJ_Intermed, 
	''					INSC_MUNICIPAL_Intermed, 
	''					DS_EMAIL_Intermed	 
from	operacao_nota o, 
	nota_fiscal n 
where	exists ( 
	select	1 
	from	w_nota_fiscal x 
	where	x.nr_seq_nota_fiscal = n.nr_sequencia) 
and	o.cd_operacao_nf = n.cd_operacao_nf 
and	n.vl_total_nota > 0 
and obter_convenio_nf(n.nr_sequencia) is not null 

union
 
select	5				tp_registro, 
	''					nr_inscricao_municipal, 
	''					ds_tipo_rps, 
	''					cd_serie_nf, 
	n.nr_nota_fiscal	nr_nota_fiscal, 
	null				dt_emissao, 
	''					ie_situacao, 
	''					ie_situacao_nf, 
	0					vl_servico, 
	0					vl_descontos, 
	''					cd_servico, 
	0					vl_aliquota, 
	''					ie_iss_retido, 
	0					ie_cpf_cnpj, 
	''					cd_cpf_cnpj, 
	''					nr_inscricao_munic_tomador, 
	''					nr_inscricao_estad_tomador, 
	''					nm_tomador, 
	''					ds_tipo_logradouro, 
	''					ds_endereco, 
	''					nr_endereco, 
	''					ds_complemento, 
	''					ds_bairro, 
	''					ds_municipio, 
	''					sg_estado, 
	''					cd_cep, 
	''					ds_email, 
	' '					ds_servicos, 
	''					ds_observacao, 
	0					vl_total_servicos, 
	0					vl_total_descontos, 
	0					qt_linhas, 
	0					nr_sequencia, 
	0 					cd_operacao_nf, 
	n.cd_estabelecimento, 
	''					ds_natureza_operacao, 
	0					vl_deducoes, 
	0					vl_total_deducoes, 
	0					vl_nota_fiscal, 
	0					vl_total_nota_fiscal, 
	''					cd_pessoa_fisica, 
	2					IndCNPJ, 
	lpad(substr(obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),1,14),14,'0') CNPJ_Intermed, 
	--lpad(substr(obter_dados_pf_pj(null,obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),'IM'),1,8),8,'0') INSC_MUNICIPAL_Intermed, 
	lpad(substr(CASE WHEN obter_dados_pf_pj(null,obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),'CDM')=355030 THEN  obter_dados_pf_pj(null,obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),'IM')  ELSE '0' END ,1,8),8,'0') INSC_MUNICIPAL_Intermed, 
	rpad(substr((SELECT x.ds_email from pessoa_juridica_estab x where x.cd_cgc = obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)) and x.cd_estabelecimento = n.cd_estabelecimento),1,75),75,' ') DS_EMAIL_Intermed	 
from	nota_fiscal n 
where	1 = 1 
and	exists ( 
	select	1 
	from	w_nota_fiscal x 
	where	x.nr_seq_nota_fiscal = n.nr_sequencia) 
and	n.vl_total_nota > 0 
and obter_convenio_nf(n.nr_sequencia) is not null 
--and	obter_dados_pf_pj(null,obter_cgc_convenio(obter_convenio_nf(n.nr_sequencia)),'CDM') = 355030 
union
 
select	9					tp_registro, 
	''					nr_inscricao_municipal, 
	'RPS'					ds_tipo_rps, 
	''					cd_serie_nf, 
	'999999'				nr_nota_fiscal, 
	null					dt_emissao, 
	''					ie_situacao, 
	''					ie_situacao_nf, 
	0					vl_servico, 
	0					vl_descontos, 
	''					cd_servico, 
	0					vl_aliquota, 
	''					ie_iss_retido, 
	0					ie_cpf_cnpj, 
	''					cd_cpf_cnpj, 
	''					nr_inscricao_munic_tomador, 
	''					nr_inscricao_estad_tomador, 
	''					nm_tomador, 
	''					ds_tipo_logradouro, 
	''					ds_endereco, 
	''					nr_endereco, 
	''					ds_complemento, 
	''					ds_bairro, 
	''					ds_municipio, 
	''					sg_estado, 
	''					cd_cep, 
	''					ds_email, 
	' '					ds_servicos, 
	''					ds_observacao, 
	sum(CASE WHEN n.ie_situacao=1 THEN  n.vl_mercadoria WHEN n.ie_situacao=3 THEN  CASE WHEN n.ie_status_envio IS NULL THEN  n.vl_mercadoria  ELSE 0 END   ELSE 0 END ) vl_total_servicos, 
	sum(n.vl_descontos)			vl_total_descontos, 
	0					qt_linhas, 
	0					nr_sequencia, 
	0 					cd_operacao_nf, 
	n.cd_estabelecimento, 
	''					ds_natureza_operacao, 
	0					vl_deducoes, 
	sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0)) vl_total_deducoes, 
	0					vl_nota_fiscal, 
	sum(coalesce(CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END ,0)) vl_total_nota_fiscal, 
	''					cd_pessoa_fisica, 
	0					IndCNPJ,		 
	''					CNPJ_Intermed, 
	''					INSC_MUNICIPAL_Intermed, 
	''					DS_EMAIL_Intermed	 
from	nota_fiscal n 
where	exists ( 
	select	1 
	from	w_nota_fiscal x 
	where	x.nr_seq_nota_fiscal = n.nr_sequencia) 
and	n.vl_total_nota > 0	 
group by n.cd_estabelecimento;

