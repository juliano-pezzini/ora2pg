-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW get_data_ft004_v (cd_lineanegocio, cd_tipoiddeudor, cd_iddeudor, cd_dvdeudor, nm_nombreacreedor, cd_actividadacreedor, cd_conceptoacreencia, cd_medicionposterior, cxpnovencidas, cxpmora30dias, cxpmora60dias, cxpmora90dias, cxpmora180dias, cxpmora360dias, cxpmoramayor360dias, vl_ajuste, vl_saldo) AS SELECT  CD_LINEANEGOCIO,
        CD_TIPOIDDEUDOR,
        CD_IDDEUDOR,
        CD_DVDEUDOR,
        NM_NOMBREACREEDOR,
        CD_ACTIVIDADACREEDOR,
        CD_CONCEPTOACREENCIA,
        CD_MEDICIONPOSTERIOR,
        SUM(CXPNOVENCIDAS) CXPNOVENCIDAS,
        SUM(CXPMORA30DIAS) CXPMORA30DIAS,
        SUM(CXPMORA60DIAS) CXPMORA60DIAS,
        SUM(CXPMORA90DIAS) CXPMORA90DIAS,
        SUM(CXPMORA180DIAS) CXPMORA180DIAS,
        SUM(CXPMORA360DIAS) CXPMORA360DIAS,
        SUM(CXPMORAMAYOR360DIAS) CXPMORAMAYOR360DIAS,
        VL_AJUSTE,
        SUM(CXPNOVENCIDAS) + SUM(CXPMORA30DIAS) + SUM(CXPMORA60DIAS) + SUM(CXPMORA90DIAS) + SUM(CXPMORA180DIAS) + SUM(CXPMORA360DIAS) +
        SUM(CXPMORAMAYOR360DIAS) + VL_AJUSTE AS VL_SALDO
FROM (  SELECT  B.CD_LINEA_NEGOCIO CD_LINEANEGOCIO,
                CASE WHEN C.CD_CGC IS NULL THEN  PF.NR_SEQ_TIPO_DOC_IDENTIFICACAO  ELSE 'NI' END  AS CD_TIPOIDDEUDOR,
                CASE WHEN C.CD_CGC IS NULL THEN  PF.NR_TIPO_IDENTIFICACAO  ELSE PJ.NR_TIPO_IDENTIFICACAO END  AS CD_IDDEUDOR,
                0 AS CD_DVDEUDOR,
                SUBSTR(CASE WHEN C.CD_CGC IS NULL THEN  OBTER_NOME_PF(C.CD_PESSOA_FISICA)  ELSE PJ.DS_RAZAO_SOCIAL END , 1, 155) AS NM_NOMBREACREEDOR,
                coalesce(PJ.CD_CNAE, 'NA') AS CD_ACTIVIDADACREEDOR,
                coalesce(B.CD_POLITICA_CONT, 0) AS CD_MEDICIONPOSTERIOR,
                1 AS CD_CONCEPTOACREENCIA,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) >= TRUNC(LOCALTIMESTAMP) THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPNOVENCIDAS,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) < TRUNC(LOCALTIMESTAMP) AND TRUNC(C.DT_VENCIMENTO_ATUAL) > TRUNC(LOCALTIMESTAMP - interval '30 days') THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPMORA30DIAS,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) < TRUNC(LOCALTIMESTAMP - interval '30 days') AND TRUNC(C.DT_VENCIMENTO_ATUAL) > TRUNC(LOCALTIMESTAMP - interval '60 days') THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPMORA60DIAS,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) < TRUNC(LOCALTIMESTAMP - interval '60 days') AND TRUNC(C.DT_VENCIMENTO_ATUAL) > TRUNC(LOCALTIMESTAMP - interval '90 days') THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPMORA90DIAS,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) < TRUNC(LOCALTIMESTAMP - interval '90 days') AND TRUNC(C.DT_VENCIMENTO_ATUAL) > TRUNC(LOCALTIMESTAMP - interval '180 days') THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPMORA180DIAS,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) < TRUNC(LOCALTIMESTAMP - interval '180 days') AND TRUNC(C.DT_VENCIMENTO_ATUAL) > TRUNC(LOCALTIMESTAMP - interval '360 days') THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPMORA360DIAS,
                CASE
                    WHEN TRUNC(C.DT_VENCIMENTO_ATUAL) < TRUNC(LOCALTIMESTAMP - interval '360 days') THEN coalesce(C.VL_TITULO_ATUAL, C.VL_TITULO)
                    ELSE 0
                END CXPMORAMAYOR360DIAS,
                coalesce(C.VL_AJUSTE, 0) AS VL_AJUSTE
        FROM    CLASSE_TITULO_PAGAR A,
                EMPRESA B,
                TITULO_PAGAR C
        LEFT JOIN(SELECT   OBTER_TIPO_IDENTIFICACAO_PF(A.CD_PESSOA_FISICA) AS NR_TIPO_IDENTIFICACAO,
                            CASE
                                WHEN B.NR_SEQ_TIPO_DOC_IDENTIFICACAO NOT IN ('CC', 'CE') THEN 'OT'
                                ELSE B.NR_SEQ_TIPO_DOC_IDENTIFICACAO
                            END AS NR_SEQ_TIPO_DOC_IDENTIFICACAO,
                            A.CD_PESSOA_FISICA AS CD_PESSOA_FISICA
                    FROM    PESSOA_FISICA A,
                            PESSOA_FISICA_AUX B
                    WHERE   A.CD_PESSOA_FISICA = B.CD_PESSOA_FISICA) PF ON (PF.CD_PESSOA_FISICA = C.CD_PESSOA_FISICA)
        LEFT JOIN(SELECT   'NI' AS NR_SEQ_TIPO_DOC_IDENTIFICACAO,
                            PJ.CD_RFC AS NR_TIPO_IDENTIFICACAO,
                            PJ.CD_CGC,
                            PJ.DS_RAZAO_SOCIAL,
                            PC.CD_CNAE
                    FROM    PESSOA_JURIDICA PJ
                    LEFT JOIN PLS_CNAE PC ON ( PC.NR_SEQUENCIA = PJ.NR_SEQ_CNAE )) PJ ON ( PJ.CD_CGC = C.CD_CGC)
                    WHERE   A.CD_EMPRESA = B.CD_EMPRESA
                    AND     A.NR_SEQUENCIA = C.NR_SEQ_CLASSE) T
GROUP BY
        CD_LINEANEGOCIO,
        CD_TIPOIDDEUDOR,
        CD_IDDEUDOR,
        CD_DVDEUDOR,
        NM_NOMBREACREEDOR,
        CD_ACTIVIDADACREEDOR,
        CD_MEDICIONPOSTERIOR,
        VL_AJUSTE,
        CD_CONCEPTOACREENCIA;

