-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW exp_rps_prefeitura_blu_v (tp_registro, nr_versao, nr_inscricao_municipal, ds_tipo_rps, cd_serie_nf, nr_nota_fiscal, dt_emissao, ie_situacao, vl_servico, vl_descontos, cd_servico, vl_aliquota, ie_iss_retido, ie_cpf_cnpj, cd_cpf_cnpj, nr_inscricao_munic_tomador, nr_inscricao_estad_tomador, nm_tomador, ds_tipo_logradouro, ds_endereco, nr_endereco, ds_complemento, ds_bairro, ds_municipio, sg_estado, cd_cep, ds_email, vl_cofins, vl_csll, vl_inss, vl_irpj, vl_pis, ds_servicos, ds_observacao, vl_total_servicos, vl_total_descontos, qt_linhas, nr_sequencia, cd_operacao_nf, cd_estabelecimento, ds_natureza_operacao, vl_deducoes, vl_total_deducoes, vl_nota_fiscal, vl_total_nota_fiscal, cd_pessoa_fisica) AS select	1					tp_registro,
	'002'					nr_versao,
	lpad(a.cd_inscricao_municipal,15,0)		nr_inscricao_municipal,
	''					ds_tipo_rps,
	''					cd_serie_nf,
	'0'					nr_nota_fiscal,
	null					dt_emissao,
	''					ie_situacao,
	0					vl_servico,
	0					vl_descontos,
	''					cd_servico,
	''					vl_aliquota,
	''					ie_iss_retido,
	0					ie_cpf_cnpj,
	''					cd_cpf_cnpj,
	''					nr_inscricao_munic_tomador,
	''					nr_inscricao_estad_tomador,
	''					nm_tomador,
	'   '					ds_tipo_logradouro,
	''					ds_endereco,
	''					nr_endereco,
	''					ds_complemento,
	''					ds_bairro,
	''					ds_municipio,
	''					sg_estado,
	''					cd_cep,
	''					ds_email,
	''					vl_cofins,
	''					vl_csll,
	''					vl_inss,
	''					vl_irpj,
	''					vl_pis,
	' '					ds_servicos,
	''					ds_observacao,
	0					vl_total_servicos,
	0					vl_total_descontos,
	0					qt_linhas,
	0					nr_sequencia,
	0					cd_operacao_nf,
	a.cd_estabelecimento,
	''					ds_natureza_operacao,
	0					vl_deducoes,
	0					vl_total_deducoes,
	0					vl_nota_fiscal,
	0					vl_total_nota_fiscal,
	''					cd_pessoa_fisica
FROM	estabelecimento a

union

select	2					tp_registro,
	''					nr_versao,
	''					nr_inscricao_municipal,
	'0'					ds_tipo_rps,
	n.cd_serie_nf				cd_serie_nf,
	n.nr_nota_fiscal			nr_nota_fiscal,
	trunc(n.dt_emissao)			dt_emissao,
	substr(coalesce(CASE WHEN n.ie_situacao=9 THEN  'C' WHEN n.ie_situacao=3 THEN 'C'  WHEN n.ie_situacao=2 THEN  'C'  ELSE nfse_obter_regra('TP', n.cd_estabelecimento) END ,'I'),1,2) 	ie_situacao,
	CASE WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=1 THEN  n.vl_mercadoria WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=2 THEN  n.vl_total_nota WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=3 THEN  n.vl_mercadoria - vl_descontos WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=4 THEN  vl_total_nota - vl_descontos  ELSE n.vl_mercadoria END  vl_servico,
	n.vl_descontos				vl_descontos,
	--o.nr_codigo_serv_prest			cd_servico,
	obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(n.nr_sequencia,'P'), obter_procedimento_nfse(n.nr_sequencia,'O')), 'CD') cd_servico,
	--'00000403'				cd_servico,
	'00200'					vl_aliquota,
	CASE WHEN substr(obter_se_nf_retem_iss(n.nr_sequencia),1,1)='S' THEN '1'  ELSE '0' END  ie_iss_retido,
	CASE WHEN substr(obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'UF'),1,2)='IN' THEN 3  ELSE CASE WHEN n.cd_pessoa_fisica IS NULL THEN 2  ELSE CASE WHEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) IS NULL THEN 3  ELSE 1 END  END  END  ie_cpf_cnpj,
	CASE WHEN substr(obter_dados_pf_pj(n.cd_pessoa_fisica,n.cd_cgc,'UF'),1,2)='IN' THEN '00000000000000'  ELSE CASE WHEN 	n.cd_pessoa_fisica IS NULL THEN n.cd_cgc  ELSE CASE WHEN obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) IS NULL THEN '00000000000000'  ELSE obter_cpf_pessoa_fisica(n.cd_pessoa_fisica) END  END  END  cd_cpf_cnpj,
  	/*decode(	n.cd_pessoa_fisica,null,n.cd_cgc,
		decode(obter_cpf_pessoa_fisica(n.cd_pessoa_fisica),null,'00000000000000',obter_cpf_pessoa_fisica(n.cd_pessoa_fisica))) cd_cpf_cnpj,	*/
	CASE WHEN elimina_acentuacao(elimina_caracteres_especiais(upper(substr(obter_dados_pf_pj(null,n.cd_cgc,'CI'),1,50))))='BLUMENAU' THEN 	substr(obter_dados_pf_pj(null,n.cd_cgc,'IM'),1,8)  ELSE '00000000' END  nr_inscricao_munic_tomador,
	substr(obter_dados_pf_pj(null,n.cd_cgc,'IE'),1,20) nr_inscricao_estad_tomador,
	substr(obter_nome_pf_pj(n.cd_pessoa_fisica,n.cd_cgc),1,75) nm_tomador,
	'   '					ds_tipo_logradouro,
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'EN'),1,50)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'EN'),1,50) END  ds_endereco,
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN  substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc,  'NR'),1,10)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'NR'),1,10) END  nr_endereco,
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN 	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CO'),1,30)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CO'),1,30) END  ds_complemento,
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN 	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'B'),1,30)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'B'),1,30) END  ds_bairro,
	coalesce(obter_sus_municipio(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc,'CDM')),
		CASE WHEN n.cd_pessoa_fisica IS NULL THEN 	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CI'),1,50)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CI'),1,50) END ) ds_municipio,
	CASE WHEN n.cd_pessoa_fisica IS NULL THEN 	substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'UF'),1,2)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'UF'),1,2) END sg_estado,
	to_char(CASE WHEN n.cd_pessoa_fisica IS NULL THEN  to_char(somente_numero(substr(obter_dados_pf_pj(n.cd_pessoa_fisica, n.cd_cgc, 'CEP'),1,15)))  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'CEP'),1,15) END ) cd_cep,
	coalesce(CASE WHEN n.cd_pessoa_fisica IS NULL THEN substr(obter_dados_pf_pj_estab(n.cd_estabelecimento,n.cd_pessoa_fisica, n.cd_cgc, 'M'),1,60)  ELSE substr(obter_compl_pf(n.cd_pessoa_fisica, 1, 'M'),1,60) END ,'') ds_email,
	elimina_caractere_especial(to_char(lpad(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','COFINS'),0), 15, 0), '0,000,000,000,000.00')) vl_cofins,
	elimina_caractere_especial(to_char(lpad(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','CSLL'),0), 15, 0), '0,000,000,000,000.00')) vl_csll,
	elimina_caractere_especial(to_char(lpad(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','INSS'),0), 15, 0), '0,000,000,000,000.00')) vl_inss,
	elimina_caractere_especial(to_char(lpad(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','IR'),0), 15, 0), '0,000,000,000,000.00')) vl_irpj,
	elimina_caractere_especial(to_char(lpad(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','PIS'),0), 15, 0), '0,000,000,000,000.00')) vl_pis,
	-- nvl(substr(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'), 1, 1000), 'Servicos') ds_servicos,
	coalesce(replace(replace(substr(obter_descricao_rps(n.cd_estabelecimento, n.nr_sequencia, 'DS_SERVICOS'), 1, 1000), chr(13), ' '), chr(10), ' '), 'Servicos') ds_servicos,
	n.ds_observacao				ds_observacao,
	0					vl_total_servicos,
	0					vl_total_descontos,
	0					qt_linhas,
	n.nr_sequencia				nr_sequencia,
	n.cd_operacao_nf 				cd_operacao_nf,
	n.cd_estabelecimento,
	substr(obter_desc_natureza_operacao(n.cd_natureza_operacao),1,100) ds_natureza_operacao,
	coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0) vl_deducoes,
	0					vl_total_deducoes,
	CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END  vl_nota_fiscal,
	0					vl_total_nota_fiscal,
	n.cd_pessoa_fisica
from	operacao_nota o,
	nota_fiscal n
where	exists (
	select	1
	from	w_nota_fiscal x
	where	x.nr_seq_nota_fiscal = n.nr_sequencia)
and	o.cd_operacao_nf = n.cd_operacao_nf

union

select	9					tp_registro,
	''					nr_versao,
	''					nr_inscricao_municipal,
	'RPS'					ds_tipo_rps,
	''					cd_serie_nf,
	'0'					nr_nota_fiscal,
	null					dt_emissao,
	''					ie_situacao,
	0					vl_servico,
	0					vl_descontos,
	''					cd_servico,
	''					vl_aliquota,
	''					ie_iss_retido,
	0					ie_cpf_cnpj,
	''					cd_cpf_cnpj,
	''					nr_inscricao_munic_tomador,
	''					nr_inscricao_estad_tomador,
	''					nm_tomador,
	'   '					ds_tipo_logradouro,
	''					ds_endereco,
	''					nr_endereco,
	''					ds_complemento,
	''					ds_bairro,
	''					ds_municipio,
	''					sg_estado,
	''					cd_cep,
	''					ds_email,
	elimina_caractere_especial(to_char(lpad(sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','COFINS'),0)), 15, 0), '0,000,000,000,000.00')) vl_cofins,
	elimina_caractere_especial(to_char(lpad(sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','CSLL'),0)), 15, 0), '0,000,000,000,000.00')) vl_csll,
	elimina_caractere_especial(to_char(lpad(sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','INSS'),0)), 15, 0), '0,000,000,000,000.00')) vl_inss,
	elimina_caractere_especial(to_char(lpad(sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','IR'),0)), 15, 0), '0,000,000,000,000.00')) vl_irpj,
	elimina_caractere_especial(to_char(lpad(sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V','PIS'),0)), 15, 0), '0,000,000,000,000.00')) vl_pis,
	' '					ds_servicos,
	''					ds_observacao,
	sum(CASE WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=1 THEN  n.vl_mercadoria WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=2 THEN  n.vl_total_nota WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=3 THEN  n.vl_mercadoria - vl_descontos WHEN substr(nfse_obter_regra('VL', n.cd_estabelecimento),1,2)=4 THEN  vl_total_nota - vl_descontos  ELSE n.vl_mercadoria END ) vl_total_servicos,
	sum(n.vl_descontos)			vl_total_descontos,
	0					qt_linhas,
	0					nr_sequencia,
	0 					cd_operacao_nf,
	n.cd_estabelecimento,
	''					ds_natureza_operacao,
	0					vl_deducoes,
	sum(coalesce(Obter_Valor_tipo_Tributo_Nota(n.nr_sequencia, 'V', 'ISS'),0))  vl_total_deducoes,
	0					vl_nota_fiscal,
	sum(coalesce(CASE WHEN n.ie_situacao=1 THEN n.vl_total_nota  ELSE 0 END ,0)) vl_total_nota_fiscal,
	''					cd_pessoa_fisica
from	operacao_nota o,
	nota_fiscal n
where	exists (
	select	1
	from	w_nota_fiscal x
	where	x.nr_seq_nota_fiscal = n.nr_sequencia)
and	o.cd_operacao_nf = n.cd_operacao_nf
group by n.cd_estabelecimento;

