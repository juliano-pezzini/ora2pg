-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW painel_pronto_atend_v (nr_atendimento, dt_entrada, hr_entrada, cd_pessoa_fisica, nm_social, ds_idade, ds_setor_atendimento, ds_obs_pa, ds_convenio, nr_prontuario, ds_tipo_isolamento_cih, ds_local_pa, ds_localizacao, nm_medico_referico, min_espera, cd_setor_atendimento, ds_diagnostico, hr_medicacao, ie_prioridade, ds_triagem1, ie_prioridade_classif, nr_seq_triagem_prioridade, ds_breve_local, nr_seq_local_pa, qt_idade, ds_unidade, hr_lib_medico, hr_inicio_consulta, hr_fim_consulta, hr_enfermagem, hr_fim_enfermagem, nm_medico_abrev, hr_chamado, hr_liberacao_enfermagem, hr_reavaliacao_medica, dt_chamada_paciente, cd_medico_chamado, qt_prescricao, ie_proced_atend, ie_clinica_ant, dt_alta, ie_status, dt_lib_medico, nr_seq_apresent, ie_internado, ie_sem_prioridade, nr_atend_alta, ds_medicamentos, nm_medico, ds_sexo, ds_obs_pa_local, ds_medic_sub, cd_unidade, ie_exame_lib_exames, ie_exame_lib, ie_exame_nao_lab_lib, ie_prescr_anti, ie_prior_classif_atend, ie_exame_laudo_lib, qt_tempo_observacao, ds_cor_observacao, ds_cor_fonte_observacao, nr_seq_cor_observacao, ds_clinica, ie_clinica, ds_triagem, ds_triagem_prioridade, nr_seq_triagem, ds_cor, ds_cor_fonte, ds_cor_prioridade, ds_cor_local, dt_gestao_vaga, ds_exame_proc, ds_alergias, ds_doenca, ie_pac_isolado, ie_chamado, dt_chamada_medic, dt_chegada_medic, dt_chamada_reavaliacao, hr_fim_reavaliacao, hr_inicio_reavaliacao, dt_chamada_enfermagem, dt_inicio_observacao, ds_cor_motivo_alta_pa, dt_fim_observacao, dt_liberacao_enfermagem) AS select	a.nr_atendimento nr_atendimento,a.dt_entrada dt_entrada,
        a.dt_entrada hr_entrada,
	p.cd_pessoa_fisica,
	p.nm_social,
	SUBSTR(obter_idade(p.dt_nascimento,LOCALTIMESTAMP,'A'),1,200) ds_idade,
        s.ds_setor_atendimento, a.ds_obs_pa,obter_nome_convenio(c.cd_convenio)ds_convenio,p.nr_prontuario,	SUBSTR(obter_tipos_isolamentos_cih(a.nr_atendimento,'D'),1,255) 	ds_tipo_isolamento_cih,SUBSTR(OBTER_DESC_LOCAL_PA(NR_SEQ_LOCAL_PA),1,150) ds_local_pa,coalesce(SUBSTR(OBTER_DESC_LOCAL_PA(NR_SEQ_LOCAL_PA),1,150),b.cd_unidade_basica || ' ' ||b.cd_unidade_compl) ds_localizacao,obter_nome_pf(a.CD_MEDICO_REFERIDO) nm_medico_referico,
        ROUND((coalesce(a.dt_atend_medico, LOCALTIMESTAMP) - a.dt_entrada) * 1440) min_espera,
        s.cd_setor_atendimento,obter_diagnosticos_atendimento(a.nr_atendimento) ds_diagnostico,	TO_CHAR(a.dt_medicacao,'hh24:mi') hr_medicacao,
        obter_prioridade_tcr(a.nr_seq_triagem) ie_prioridade,
        SUBSTR(coalesce(coalesce(obter_desc_triagem(a.nr_seq_triagem), obter_triagem_atendimento(a.nr_atendimento)),obter_desc_sem_triagem(a.nr_seq_triagem)),1,60) ds_triagem1,
        (obter_dados_tcp(a.nr_seq_triagem_prioridade,'SEQ'))::numeric  ie_prioridade_classif,
	a.nr_seq_triagem_prioridade,
        SUBSTR(obter_desc_abrev_local_pa(nr_seq_local_pa),1,255) ds_breve_local,
	nr_seq_local_pa,
        SUBSTR(obter_idade(p.dt_nascimento, LOCALTIMESTAMP, 'A'),1,15) qt_idade,
        b.cd_unidade_basica || ' ' || b.cd_unidade_compl ds_unidade,
        TO_CHAR(a.dt_lib_medico,'hh24:mi') hr_lib_medico,
        TO_CHAR(a.dt_atend_medico,'hh24:mi') hr_inicio_consulta,
        TO_CHAR(a.dt_fim_consulta,'hh24:mi') hr_fim_consulta,
        TO_CHAR(a.dt_inicio_atendimento,'hh24:mi') hr_enfermagem,
        TO_CHAR(a.dt_fim_triagem,'hh24:mi') hr_fim_enfermagem,
        substr(abrevia_nome_pf(a.cd_medico_resp,'M'),1,255) nm_medico_abrev,
        TO_CHAR(a.dt_chamada_paciente,'hh24:mi') hr_chamado,
        TO_CHAR(a.dt_liberacao_enfermagem,'hh24:mi') hr_liberacao_enfermagem,
        TO_CHAR(a.dt_reavaliacao_medica,'hh24:mi') hr_reavaliacao_medica,
        a.dt_chamada_paciente,a.cd_medico_chamado,
        OBTER_QT_PRESCR_ATEND_PAINEL(a.nr_atendimento) qt_prescricao,
        obter_se_prescr_proc_atend_pa(a.cd_estabelecimento,a.nr_atendimento) 	ie_proced_atend,a.ie_clinica_ant,a.dt_alta,
		SUBSTR(obter_status_atend_pa_nova(a.nr_atendimento,a.dt_alta,
						a.dt_medicacao,  
						a.dt_lib_medico,  
						a.dt_atend_medico,  
						a.dt_fim_consulta,  
						a.dt_inicio_atendimento	,  
						a.dt_fim_triagem,  
						a.dt_chamada_paciente,  
						a.dt_liberacao_enfermagem,  
						a.dt_reavaliacao_medica,  
						a.nr_atend_alta,  
						a.cd_estabelecimento,  
						a.dt_fim_reavaliacao,  
						a.dt_inicio_observacao,  
						a.dt_fim_observacao,
						a.dt_chamada_reavaliacao, 
						a.dt_inicio_reavaliacao,
						a.ie_chamado,
						a.dt_chamada_enfermagem),1,10) ie_status,
		a.dt_lib_medico,
        (coalesce(Obter_seq_apres_pa(SUBSTR(obter_status_atend_pa_nova(a.nr_Atendimento,a.dt_alta,a.dt_medicacao,a.dt_lib_medico,a.dt_atend_medico,a.dt_fim_consulta,a.dt_inicio_atendimento,a.dt_fim_triagem,a.dt_chamada_paciente,a.dt_liberacao_enfermagem,a.dt_reavaliacao_medica,a.nr_atend_alta,a.cd_estabelecimento,a.dt_fim_reavaliacao,a.dt_inicio_observacao,a.dt_fim_observacao),1,10),a.cd_estabelecimento),0))::numeric  nr_seq_apresent,
        SUBSTR(Obter_se_pa_internado(a.nr_atendimento),1,1) ie_internado,
        CASE WHEN obter_prioridade_tcr(a.nr_seq_triagem)=999 THEN 0  ELSE obter_prioridade_tcr(a.nr_seq_triagem) END  ie_sem_prioridade,
        a.nr_atend_alta ,Obter_Medic_prescr_Atend(a.nr_atendimento) ds_medicamentos,
        obter_nome_pf(a.cd_medico_resp) nm_medico,
        p.ie_sexo ds_sexo,Obter_Obs_Atend_PA(a.nr_atendimento) DS_OBS_PA_LOCAL,
        SUBSTR(Obter_Medic_prescr_Atend(a.nr_atendimento),1,255) ds_medic_sub,
        b.cd_unidade_basica || ' ' ||b.cd_unidade_compl  cd_unidade,
        SUBSTR(Obter_se_exame_lib_exames(a.nr_atendimento),1,1) ie_exame_lib_exames,
        SUBSTR(Obter_se_exame_lib(a.nr_atendimento),1,1) ie_exame_lib,
        SUBSTR(Obter_se_exame_nao_lib(a.nr_atendimento),1,1)ie_exame_nao_lab_lib,
        substr(obter_se_prescr_antibiotico(a.nr_atendimento,a.dt_entrada,'S'),1,255) ie_prescr_anti,
        obter_prioridade_classif_atend(a.nr_seq_classificacao) ie_prior_classif_atend,
        substr(Obter_se_exame_laudo_lib(a.nr_atendimento),1,1) ie_exame_laudo_lib,
        round((coalesce(a.dt_fim_observacao,LOCALTIMESTAMP) - coalesce(a.dt_inicio_observacao,LOCALTIMESTAMP))* 1440)qt_tempo_observacao,
        obter_cor_regra_observacao_pa(a.dt_inicio_observacao,a.dt_fim_observacao,a.cd_estabelecimento,s.cd_setor_atendimento,'C') ds_cor_observacao,
        obter_cor_regra_observacao_pa(a.dt_inicio_observacao,a.dt_fim_observacao,a.cd_estabelecimento,s.cd_setor_atendimento,'F') ds_cor_fonte_observacao,
	obter_cor_regra_observacao_pa(a.dt_inicio_observacao,a.dt_fim_observacao,a.cd_estabelecimento,s.cd_setor_atendimento,'R') nr_seq_cor_observacao,
        substr(obter_valor_dominio(17,a.ie_clinica),1,255) ds_clinica,
	a.ie_clinica,
        substr(obter_desc_triagem(a.nr_seq_triagem),1,60) ds_triagem,
        substr(obter_dados_tcp(a.nr_seq_triagem_prioridade,'DESC'),1,60) ds_triagem_prioridade,
	a.nr_seq_triagem,
        substr(obter_cor_tcr(a.nr_seq_triagem),1,15) ds_cor,
        substr(obter_cor_tcr(a.nr_seq_triagem,'F'),1,15) ds_cor_fonte,
        substr(obter_dados_tcp(a.nr_seq_triagem_prioridade,'COR'),1,15) ds_cor_prioridade,
        substr(obter_cor_local_pa(nr_seq_local_pa),1,255) ds_cor_local,
        obter_data_gestao_vaga(a.nr_atendimento) dt_gestao_vaga,
        substr(obter_medic_prescr_proc_atend(a.nr_atendimento),1,255) ds_exame_proc,
        substr(obter_alergias(p.cd_pessoa_fisica),1,255) ds_alergias,
        substr(obter_doencas(p.cd_pessoa_fisica),1,255) ds_doenca,
        substr(obter_se_pac_isolamento(a.nr_atendimento),1,10) ie_pac_isolado,
        a.ie_chamado,
        a.dt_chamada_medic,
        a.dt_chegada_medic,
        a.dt_chamada_reavaliacao,
        to_char(a.dt_fim_reavaliacao, 'hh24:mi') hr_fim_reavaliacao,
        to_char(a.dt_inicio_reavaliacao,'hh24:mi') hr_inicio_reavaliacao,
        a.dt_chamada_enfermagem,
        a.dt_inicio_observacao,
        obter_cor_motivo_alta_pa(a.cd_motivo_alta) ds_cor_motivo_alta_pa,
        a.dt_fim_observacao,
        a.DT_LIBERACAO_ENFERMAGEM
FROM	pessoa_fisica p,
        setor_atendimento s,
        atend_paciente_unidade b,
        atend_categoria_convenio c,
        atendimento_paciente a
where	a.nr_atendimento 	= b.nr_atendimento
and	b.nr_seq_interno 	= obter_atepacu_paciente(a.nr_atendimento, 'A')
and	a.nr_Atendimento 	= c.nr_atendimento
and	c.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
and	b.cd_setor_atendimento	= s.cd_setor_atendimento
and	a.cd_pessoa_fisica	= p.cd_pessoa_fisica;

