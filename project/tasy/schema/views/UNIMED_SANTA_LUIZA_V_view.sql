-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW unimed_santa_luiza_v (tp_reg, nr_linha, tp_registro, nr_seq_registro, cd_cgc_cpf_prestador, nr_relacao, nr_interno_conta, nr_seq_protocolo, tp_documento, nr_documento, nr_seq_documento, dt_emissao, cd_usuario_convenio, cd_cgc_cpf_medico_solic, ie_origem_doc, ie_versao_cid, cd_cid, dt_internacao, dt_alta, ie_carater_intern, cd_motivo_alta, ie_clinica, cd_procedimento, dt_entrada, dt_saida, qt_procedimento, vl_procedimento, cd_cgc_cpf_med_exec, cd_cgc_cpf_resp_cred, dt_procedimento, cd_atividade_prestador, ie_porte_anestesico, hr_atendimento, ie_cirurgia_multipla, tx_procedimento, ie_pagar_honorario, ie_procedimento_uti, nr_total_linha, vl_total, qt_documento, ie_tp_nasc, ds_zeros, ds_espaco, nm_usuario_carteirinha, ie_natureza_juridica, ie_tipo_plano, cd_campo_quebra, nr_cpf_solic) AS SELECT 0 TP_REG,
	0 nr_linha, 
  '00' tp_registro, 
  0 nr_seq_registro, 
  a.cd_cgc_hospital cd_cgc_cpf_prestador, 
  somente_numero(coalesce(b.nr_seq_doc_convenio, 
		a.nr_seq_protocolo)) nr_relacao, 
  0 nr_interno_conta, 
  a.nr_seq_protocolo, 
  '' tp_documento, 
  '' nr_documento, 
  0 nr_seq_documento, 
  LOCALTIMESTAMP dt_emissao, 
  '' cd_usuario_convenio, 
  '' cd_cgc_cpf_medico_solic, 
  '' ie_origem_doc, 
  '' ie_versao_cid, 
  '' cd_cid, 
  LOCALTIMESTAMP dt_internacao, 
  LOCALTIMESTAMP dt_alta, 
  '' ie_carater_intern, 
  0 cd_motivo_alta, 
  0 ie_clinica, 
  0 cd_procedimento, 
  LOCALTIMESTAMP dt_entrada, 
  LOCALTIMESTAMP dt_saida, 
  0 qt_procedimento, 
  0 vl_procedimento, 
  '' cd_cgc_cpf_med_exec, 
  '' cd_cgc_cpf_resp_cred, 
  LOCALTIMESTAMP dt_procedimento, 
  0 cd_atividade_prestador, 
  0 ie_porte_anestesico, 
  LOCALTIMESTAMP hr_atendimento, 
  '' ie_cirurgia_multipla, 
  0 tx_procedimento, 
  '' ie_pagar_honorario, 
  '' ie_procedimento_uti, 
  0 nr_total_linha, 
  0 vl_total, 
  0 qt_documento, 
  '00' ie_tp_nasc, 
  '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
  0 cd_campo_quebra, 
	' ' nr_cpf_solic 
 FROM  w_interf_conta_header a, 
	 protocolo_convenio b 
 where a.nr_seq_protocolo = b.nr_seq_protocolo 
 
union all
 
 /* Cabecalho do Documento */
 
 SELECT 10 TP_REG, 
	0 nr_linha, 
  '10' tp_registro, 
  0 nr_seq_registro, 
  '' cd_cgc_cpf_prestador, 0, 
  a.nr_interno_conta, 
  a.nr_seq_protocolo, 
  substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20) tp_documento, 
  b.cd_autorizacao nr_documento, 
  coalesce(Obter_qtd_remessa_guia(a.nr_atendimento, 
		b.cd_autorizacao,'Z'),0) nr_seq_documento, 
  a.dt_entrada dt_emissao, 
  substr(a.cd_usuario_convenio,1,17) cd_usuario_convenio, 
  a.nr_cpf_medico_resp cd_cgc_cpf_medico_solic, 
  CASE WHEN a.ie_tipo_atendimento=3 THEN 'P'  ELSE 'N' END  ie_origem_doc, 
  '0010' ie_versao_cid, 
  a.cd_cid_principal cd_cid, 
  LOCALTIMESTAMP, LOCALTIMESTAMP, '', 0, 0, 0, LOCALTIMESTAMP, LOCALTIMESTAMP, 
  0 , 0 , '', '', LOCALTIMESTAMP, 0, 0, LOCALTIMESTAMP, '', 0, '', '', 0, 0, 0,'00', 
  '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  substr(a.nm_paciente,1,25) nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  substr(a.cd_categoria_convenio,1,1) ie_tipo_plano, 
  1 cd_campo_quebra, CASE WHEN c.CD_PESSOA_INDIC IS NULL THEN  a.NR_CPF_MEDICO_RESP  ELSE obter_cpf_pessoa_fisica(c.CD_PESSOA_INDIC) END  nr_cpf_solic 
 FROM atendimento_paciente c, w_interf_conta_cab a
LEFT OUTER JOIN w_interf_conta_autor b ON (a.nr_seq_protocolo = b.nr_seq_protocolo AND a.nr_interno_conta = b.nr_interno_conta)
WHERE a.nr_atendimento = c.nr_atendimento  and coalesce(b.nr_sequencia,0)	= 
		(select coalesce(max(x.nr_sequencia), coalesce(b.nr_sequencia,0)) 
		from w_interf_conta_autor x 
		where a.nr_interno_conta = x.nr_interno_conta) group by a.nr_interno_conta, 
	  a.nr_seq_protocolo, 
	substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20),	 
	CASE WHEN c.CD_PESSOA_INDIC IS NULL THEN  a.NR_CPF_MEDICO_RESP  ELSE obter_cpf_pessoa_fisica(c.CD_PESSOA_INDIC) END , 
     b.cd_autorizacao, 
  		coalesce(Obter_qtd_remessa_guia(a.nr_atendimento, 
		b.cd_autorizacao,'Z'),0), 
	  b.nr_seq_registro, 
	  a.nr_doc_convenio, 
	  a.dt_entrada, 
 	  a.cd_usuario_convenio, 
	  a.nr_cpf_medico_resp, 
	  a.ie_tipo_atendimento, 
	  a.cd_cid_principal, 
	  substr(a.nm_paciente,1,25), 
	  substr(a.cd_categoria_convenio,1,1) 
 
union all
 
 /* Complementos de Internacao */
 
 SELECT 11 TP_REG, 
	0 nr_linha, 
  '11' tp_registro, 
  0 nr_seq_registro, '', 0, 
  a.nr_interno_conta, 
  a.nr_seq_protocolo, 
  substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20) tp_documento, 
  '', 0, LOCALTIMESTAMP, '', '', '', '', '', 
  coalesce(Obter_Data_Fim_Conta_Ant(a.nr_atendimento,a.nr_interno_conta,a.cd_convenio), 
		a.dt_entrada) dt_internacao, 
  coalesce(a.dt_alta,a.dt_periodo_final) dt_alta, 
  a.ie_carater_sus ie_carater_intern, 
  CASE WHEN a.dt_alta IS NULL THEN 99  ELSE a.cd_motivo_alta END  cd_motivo_alta, 
  a.ie_clinica, 
  0, LOCALTIMESTAMP, LOCALTIMESTAMP, 0, 0, '', '', LOCALTIMESTAMP, 0, 0, LOCALTIMESTAMP, 
  '', 0, '', '', 0, 0, 0,  
  CASE WHEN ie_tipo_nascimento IS NULL THEN '00'  ELSE '0' || ie_tipo_nascimento END , 
  '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
	  10 cd_campo_quebra, 
	' ' nr_cpf_solic 
from  	w_interf_conta_cab a 
where	ie_tipo_atend_real 	= 1 
 
union all
 
 /* Diarias de Internacao */
 
 SELECT 12 TP_REG, 
	0 nr_linha, 
  '12' tp_registro, 
  0 nr_seq_registro, '', 0, 
  a.nr_interno_conta, 
  a.nr_seq_protocolo, 
  substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20) ie_tipo_guia, 
  substr(x.nr_doc_convenio,1,8) nr_documento, 
 0, LOCALTIMESTAMP, '', '', '', '', '', LOCALTIMESTAMP, LOCALTIMESTAMP, '', 0, 0, 
  Campo_numerico(a.cd_item_convenio) cd_procedimento, 
  a.dt_entrada_unidade dt_entrada, 
  coalesce(a.dt_saida_unidade,x.dt_periodo_final) dt_saida, 
  sum(a.qt_item) qt_procedimento, 
  sum(a.vl_total_item) vl_procedimento, 
  '', '', LOCALTIMESTAMP, 0, 0, LOCALTIMESTAMP, '', 0, '', '', 0, 0, 0, 
  '00', 
  '00000000000000000000000000000000000000000000' ds_zeros,'                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
  10 cd_campo_quebra, 
	obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) nr_cpf_solic 
from	w_interf_conta_cab x, 
	w_interf_conta_item a 
where	a.nr_interno_conta	= x.nr_interno_conta 
and	coalesce(a.ie_total_interf,0)	= 5 
and	ie_tipo_atend_real	= 1 
group by Campo_numerico(a.cd_item_convenio), 
    	a.nr_interno_conta, 
	substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20), 
	obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) , 
    a.nr_seq_protocolo, 
  	a.dt_entrada_unidade, 
  	coalesce(a.dt_saida_unidade,x.dt_periodo_final), 
	  substr(x.nr_doc_convenio,1,8) 
 
union all
 
 /* Servicos do Documento*/
 
 SELECT 13 TP_REG, 
	0 nr_linha, 
  '13' tp_registro, 
  0 nr_seq_registro, '', 0, 
  a.nr_interno_conta, 
  a.nr_seq_protocolo, 
  substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20) ie_tipo_guia, 
 substr(x.nr_doc_convenio,1,8) nr_documento, 
0, LOCALTIMESTAMP, '', '', '', '', '', LOCALTIMESTAMP, LOCALTIMESTAMP, '', 0, 0, 
  Campo_numerico(a.cd_item_convenio) cd_procedimento, 
  LOCALTIMESTAMP, 
  LOCALTIMESTAMP, 
  CASE WHEN a.ie_tipo_item=1 THEN sum(a.qt_item)  ELSE 1 END  qt_procedimento, 
  sum(CASE WHEN a.vl_honorario=0 THEN  a.vl_total_item  ELSE 0 END ) vl_procedimento, 
  coalesce(CASE WHEN obter_dados_medico(a.cd_medico_executor,'IERECEB')='J' THEN a.nr_cpf_executor  ELSE a.CD_CGC_CPF_RESP_CRED END ,a.cd_cgc_hospital) cd_cgc_cpf_exec, 
  coalesce(a.CD_CGC_CPF_RESP_CRED, CASE WHEN obter_dados_medico(a.cd_medico_executor,'CGC') IS NULL THEN  			a.nr_cpf_executor  ELSE a.cd_cgc_hospital END ) cd_cgc_cpf_resp_cred, 
  CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END  dt_procedimento, 
  a.cd_funcao_executor cd_atividade_prestador, 
  a.nr_porte_anestesico ie_porte_anestesico, 
  CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END  hr_atendimento, 
  ' ' ie_cirurgia_multipla, 
  a.pr_funcao_participante * 100 tx_procedimento, 
  'N' ie_pagar_honorario, 
  CASE WHEN a.cd_classif_setor='4' THEN 'S'  ELSE 'N' END  ie_procedimento_uti , 0, 0, 0, 
  '00', 
 '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
  10 cd_campo_quebra, 
	' ' nr_cpf_solic 
 from	w_interf_conta_cab x, 
	w_interf_conta_item a 
where	a.nr_interno_conta	= x.nr_interno_conta 
and	coalesce(a.ie_total_interf,0)	<> 5 
and 	coalesce(a.ie_total_interf,0)	not in (2,3) 
--and	nvl(a.ie_total_interf,0)	= 7 
group by Campo_numerico(a.cd_item_convenio), 
	a.nr_interno_conta, 
	substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20), 
	a.nr_seq_protocolo, 
	obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) , 
	coalesce(CASE WHEN obter_dados_medico(a.cd_medico_executor,'IERECEB')='J' THEN a.nr_cpf_executor  ELSE a.CD_CGC_CPF_RESP_CRED END ,a.cd_cgc_hospital), 
	coalesce(a.CD_CGC_CPF_RESP_CRED, CASE WHEN obter_dados_medico(a.cd_medico_executor,'CGC') IS NULL THEN  			a.nr_cpf_executor  ELSE a.cd_cgc_hospital END ), 
	CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END , 
	a.cd_funcao_executor, 
	a.nr_porte_anestesico, 
	a.pr_via_acesso, 
	a.pr_funcao_participante, 
	a.ie_emite_conta, 
	a.cd_classif_setor, 
	CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END , 
	a.ie_tipo_item, 
	 substr(x.nr_doc_convenio,1,8) 
having sum(CASE WHEN a.ie_tipo_item=1 THEN  a.qt_item  ELSE a.vl_total_item END ) > 0 
 
union all
 
/* Materiais e Medicamentos */
 
 SELECT 13 TP_REG, 
	0 nr_linha, 
  '13' tp_registro, 
  0 nr_seq_registro, '', 0, 
  a.nr_interno_conta, 
  a.nr_seq_protocolo, 
  ' ' ie_tipo_guia, 
  ' ' nr_documento, 
  0, LOCALTIMESTAMP, '', '', '', '', '', LOCALTIMESTAMP, LOCALTIMESTAMP, '', 0, 0, 
  CASE WHEN a.ie_total_interf=2 THEN 90000021 WHEN a.ie_total_interf=3 THEN 90000013 END  cd_procedimento, 
  LOCALTIMESTAMP, 
  LOCALTIMESTAMP, 
  sum(a.qt_item) qt_procedimento, 
  sum(CASE WHEN a.vl_honorario IS NULL THEN  a.vl_total_item  ELSE 0 END ) vl_procedimento, 
  a.cd_cgc_hospital cd_cgc_cpf_exec, 
  a.cd_cgc_hospital cd_cgc_cpf_resp_cred, 
  LOCALTIMESTAMP dt_procedimento, 
  0 cd_atividade_prestador, 
  0 ie_porte_anestesico, 
  LOCALTIMESTAMP hr_atendimento, 
  ' ' ie_cirurgia_multipla, 
  0 tx_procedimento, 
  'N' ie_pagar_honorario, 
  ' ' ie_procedimento_uti , 0, 0, 0, 
  '00', 
 '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
  0 cd_campo_quebra, 
	' ' nr_cpf_solic 
 from	w_interf_conta_cab x, 
	w_interf_conta_item a 
where	a.nr_interno_conta	= x.nr_interno_conta 
and	coalesce(a.ie_total_interf,0)	in (2,3) 
group by CASE WHEN a.ie_total_interf=2 THEN 90000021 WHEN a.ie_total_interf=3 THEN 90000013 END , 
	a.nr_interno_conta, 
	a.nr_seq_protocolo, 
	a.ie_total_interf, 
	a.cd_cgc_hospital 
having sum(a.vl_total_item) > 0 
 
union all
 
 /* Total do documento */
 
 SELECT 19 TP_REG, 
	0 nr_linha, 
  '19' tp_registro, 
  0 nr_seq_registro, '', 0, 
  a.nr_interno_conta, 
  a.nr_seq_protocolo, 
  substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20), '', 0, LOCALTIMESTAMP, '', '', '', '', '', LOCALTIMESTAMP, LOCALTIMESTAMP, '', 0, 0, 
  0, LOCALTIMESTAMP, LOCALTIMESTAMP, 0, 0, '', '', LOCALTIMESTAMP, 0, 0, LOCALTIMESTAMP, '', 
  0, '', '', 0, 
	sum(CASE WHEN b.ie_total_interf=2 THEN b.vl_total_item WHEN b.ie_total_interf=3 THEN b.vl_total_item WHEN b.ie_total_interf=5 THEN b.vl_total_item WHEN b.ie_total_interf=7 THEN b.vl_total_item  ELSE 0 END ) vl_total, 
 	0, '00', 
  '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
  10 cd_campo_quebra, 
	' ' nr_cpf_solic 
 from  w_interf_conta_item b, 
    w_interf_conta_cab a 
 where a.nr_seq_protocolo = b.nr_seq_protocolo 
  and a.nr_interno_conta = b.nr_interno_conta 
 group by a.nr_interno_conta, 
	 substr(OBTER_TIPO_GUIA_CONVENIO(a.nr_atendimento),1,20), 
     a.nr_seq_protocolo 
 
union all
 
 /* Total do arquivo */
 
 SELECT 99 TP_REG, 
	0 nr_linha, 
  '99' tp_registro, 
  0 nr_seq_registro, '', 0, 
  9999999999 nr_interno_conta, 
  a.nr_seq_protocolo, 
  '', '', 0, LOCALTIMESTAMP, '', '', '', '', '', LOCALTIMESTAMP, LOCALTIMESTAMP, '', 0, 0, 
  0, LOCALTIMESTAMP, LOCALTIMESTAMP, 0, 0, '', '', LOCALTIMESTAMP, 0, 0, LOCALTIMESTAMP, '', 
  0, '', '', 0 nr_total_linha, 
	sum(CASE WHEN b.ie_total_interf=2 THEN b.vl_total_item WHEN b.ie_total_interf=3 THEN b.vl_total_item WHEN b.ie_total_interf=5 THEN b.vl_total_item WHEN b.ie_total_interf=7 THEN b.vl_total_item  ELSE 0 END ) vl_total, 
  a.qt_total_conta qt_documento, '00', 
  '00000000000000000000000000000000000000000000' ds_zeros, 
  '                      ' ds_espaco, 
  ' ' nm_usuario_carteirinha, 
  ' ' ie_natureza_juridica, 
  ' ' ie_tipo_plano, 
  0 cd_campo_quebra, 
	' ' nr_cpf_solic 
 from  w_interf_conta_item b, 
    w_interf_conta_trailler a 
 where a.nr_seq_protocolo = b.nr_seq_protocolo 
group by 
	a.nr_seq_protocolo, 
	a.qt_total_conta;

