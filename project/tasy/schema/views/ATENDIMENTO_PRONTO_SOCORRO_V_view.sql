-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW atendimento_pronto_socorro_v (nr_atendimento, dt_alta, cd_pessoa_fisica, cd_setor_atendimento, cd_unidade_basica, cd_unidade_compl, cd_unidade, ds_setor_atendimento, dt_entrada, cd_convenio, cd_tipo_acomodacao, dt_saida_unidade, classif, ds_tipo_atendimento, nm_guerra) AS select
  b.nr_atendimento nr_atendimento,
  (select max(a.dt_alta) FROM atendimento_paciente a where a.nr_Atendimento = b.nr_atendimento) dt_alta,
  substr((select max(a.cd_pessoa_fisica) from atendimento_paciente a where a.nr_atendimento =  b.nr_atendimento),1,100) cd_pessoa_fisica,
  b.cd_setor_atendimento,
  b.cd_unidade_basica,
  b.cd_unidade_compl,
  b.cd_unidade_basica || ' ' ||b.cd_unidade_compl  cd_unidade,
  s.ds_setor_atendimento,
  (select max(a.dt_entrada) from atendimento_paciente a where a.nr_Atendimento = b.nr_atendimento) dt_entrada,
  obter_convenio_atendimento(b.nr_atendimento) cd_convenio,
  b.cd_tipo_acomodacao,
  b.dt_saida_unidade,
  substr(obter_desc_classif_atend((select max(a.nr_seq_classificacao) from atendimento_paciente a where a.nr_Atendimento = b.nr_atendimento)),1,60) classif,
  substr(OBTER_NOME_TIPO_ATEND((select max(a.nr_seq_classificacao) from atendimento_paciente a where a.nr_Atendimento = b.nr_atendimento)),1,255) ds_tipo_atendimento,
  substr(obter_nome_medico((select max(a.cd_medico_resp) from atendimento_paciente a where a.nr_Atendimento = b.nr_atendimento),'G'),1,60) nm_guerra
 from setor_atendimento s,
  atend_paciente_unidade b
where 1 = 1
and b.nr_seq_interno  = (select coalesce(max(x.nr_seq_interno),0)
  from  atend_paciente_unidade x
  where x.nr_atendimento    = b.nr_atendimento
  and   coalesce(x.dt_saida_unidade, x.dt_entrada_unidade + 9999)  =
  (select max(coalesce(y.dt_saida_unidade, y.dt_entrada_unidade + 9999))
  from atend_paciente_unidade y
  where y.nr_atendimento  = b.nr_atendimento))
and b.cd_setor_atendimento    = s.cd_setor_atendimento
and b.nr_atendimento  > 0
and b.dt_entrada_unidade > LOCALTIMESTAMP - interval '30 days'
and exists (select 1
  from  setor_atendimento x,
    atend_paciente_unidade y
  where b.nr_atendimento = y.nr_atendimento
  and y.cd_setor_atendimento  = x.cd_setor_atendimento
  and x.cd_classif_setor  = 1  LIMIT 1);

