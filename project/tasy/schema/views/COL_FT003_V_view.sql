-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW col_ft003_v (cd_lineanegocio, cd_tipoiddeudor, cd_iddeudor, cd_dvdeudor, nm_nombredeudor, cd_codigomunicipio, cd_conceptodeudores, cd_tipodeuda, cd_medicionposterior, vl_cxcpendientesradicar, cxcnovencidas, vl_cxcmora30dias, vl_cxcmora60dias, vl_cxcmora90dias, vl_cxcmora180dias, vl_cxcmora360dias, vl_cxcmoramayor360dias, vl_deterioro30dias, vl_deterioro60dias, vl_deterioro90dias, vl_deterioro180dias, vl_deterioro360dias, vl_deterioromas360dias, vl_ajuste, vl_saldo) AS SELECT t.CD_LINEANEGOCIO,
       t.CD_TIPOIDDEUDOR,
       t.CD_IDDEUDOR,
       t.CD_DVDEUDOR,
       t.NM_NOMBREDEUDOR,
       t.CD_CODIGOMUNICIPIO,
       t.CD_CONCEPTODEUDORES,
       t.CD_TIPODEUDA,
       t.CD_MEDICIONPOSTERIOR,
       t.VL_CXCPENDIENTESRADICAR,
       t.CXCNOVENCIDAS,
       t.VL_CXCMORA30DIAS,
       t.VL_CXCMORA60DIAS,
       t.VL_CXCMORA90DIAS,
       t.VL_CXCMORA180DIAS,
       t.VL_CXCMORA360DIAS,
       t.VL_CXCMORAMAYOR360DIAS,
       t.VL_DETERIORO30DIAS,
       t.VL_DETERIORO60DIAS,
       t.VL_DETERIORO90DIAS,
       t.VL_DETERIORO180DIAS,
       t.VL_DETERIORO360DIAS,
       t.VL_DETERIOROMAS360DIAS,
       t.VL_AJUSTE,
       ( vl_cxcpendientesradicar + cxcnovencidas + vl_cxcmora30dias + vl_cxcmora60dias + vl_cxcmora90dias + vl_cxcmora180dias + vl_cxcmora360dias +
       vl_cxcmoramayor360dias + vl_deterioro30dias + vl_deterioro60dias + vl_deterioro90dias + vl_deterioro180dias + vl_deterioro360dias +
       vl_deterioromas360dias + vl_ajuste ) AS vl_saldo
FROM (
 WITH estab AS (
  SELECT emp.cd_linea_negocio,
         estab.cd_estabelecimento,
         estab.cd_empresa,
         emp.cd_politica_cont
  FROM empresa emp
  JOIN estabelecimento estab ON ( emp.cd_empresa = estab.cd_empresa )
  WHERE emp.cd_linea_negocio IS NOT NULL
 ), titulo AS (
  SELECT tr.*
  FROM titulo_receber tr
 ), pf AS (
  SELECT obter_tipo_identificacao_pf(a.cd_pessoa_fisica) AS nr_tipo_identificacao,
         CASE
          WHEN nr_seq_tipo_doc_identificacao NOT IN ( 'CC', 'CE' ) THEN 'OT'
          ELSE nr_seq_tipo_doc_identificacao
         END                                             AS nr_seq_tipo_doc_identificacao,
         a.cd_pessoa_fisica                              AS cd_pessoa_fisica
  FROM pessoa_fisica     a,
       pessoa_fisica_aux b
  WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica
 ), pj AS (
  SELECT 'NI'      AS nr_seq_tipo_doc_identificacao,
         pj.cd_rfc AS nr_tipo_identificacao,
         pj.cd_cgc,
         pj.ds_razao_social
  FROM pessoa_juridica pj
 ), endereco_pf AS (
  SELECT cpf.cd_pessoa_fisica                                                 AS cd_pessoa_fisica,
         CASE WHEN ee.cd_endereco_catalogo IS NULL THEN  'NA'  ELSE ee.cd_endereco_catalogo END  AS cd_endereco_catalogo,
         pei.nr_seq_pessoa_endereco                                           AS nr_seq_pessoa_endereco
  FROM compl_pessoa_fisica cpf
  JOIN pessoa_endereco_item pei ON ( cpf.nr_seq_pessoa_endereco = pei.nr_seq_pessoa_endereco )
  JOIN end_endereco         ee ON ( ee.nr_sequencia = pei.nr_seq_end_endereco )
  WHERE pei.ie_informacao = 'MUNICIPIO'
 ), endereco_pj AS (
  SELECT pj.cd_cgc                                                            AS cd_cgc,
         CASE WHEN ee.cd_endereco_catalogo IS NULL THEN  'NA'  ELSE ee.cd_endereco_catalogo END  AS cd_endereco_catalogo,
         pj.nr_seq_pessoa_endereco                                            AS nr_seq_pessoa_endereco
  FROM pessoa_juridica pj
  JOIN pessoa_endereco_item pei ON ( pj.nr_seq_pessoa_endereco = pei.nr_seq_pessoa_endereco )
  JOIN end_endereco         ee ON ( ee.nr_sequencia = pei.nr_seq_end_endereco )
  WHERE pei.ie_informacao = 'MUNICIPIO'
 ), convenio_paciente AS (
  SELECT cp.nr_atendimento        AS nr_atendimento,
         cp.nr_interno_conta      AS nr_interno_conta,
         cp.cd_convenio_parametro AS cd_convenio_parametro,
         cp2.cd_conceito_devedor  AS cd_conceito_devedor
  FROM conta_paciente cp
  JOIN atend_categoria_convenio acc ON ( acc.nr_atendimento = cp.nr_atendimento
                                         AND acc.cd_convenio = cp.cd_convenio_parametro )
  JOIN convenio_plano           cp2 ON ( cp2.cd_convenio = cp.cd_convenio_parametro
                               AND cp2.cd_plano = acc.cd_plano_convenio )
 ), conta_receber_radicado AS (
  SELECT tr.nr_atendimento,
         tr.nr_interno_conta,
         SUM(CASE WHEN pc.dt_registro_fisico IS NULL THEN  0  ELSE tr.vl_titulo END ) AS valor_radicado
  FROM protocolo_convenio pc
  JOIN conta_paciente cp ON ( cp.nr_seq_protocolo = pc.nr_seq_protocolo )
  JOIN titulo_receber tr ON ( tr.nr_seq_protocolo = pc.nr_seq_protocolo )
  GROUP BY tr.nr_atendimento,
           tr.nr_interno_conta
 ), titulos_n_vencidos AS (
  SELECT SUM(valor) AS valor,
         cd_pessoa_fisica,
         cd_cgc
  FROM (
   SELECT SUM(tr2.vl_titulo)   AS valor,
          tr2.cd_pessoa_fisica AS cd_pessoa_fisica,
          tr2.cd_cgc           AS cd_cgc
   FROM titulo_receber tr2
   WHERE tr2.dt_vencimento > trunc(LOCALTIMESTAMP)
         AND tr2.ie_situacao = '1'
   GROUP BY tr2.cd_pessoa_fisica,
            tr2.cd_cgc

UNION ALL

   SELECT SUM(a.vl_adiantamento) * - 1 AS valor,
          a.cd_pessoa_fisica           AS cd_pessoa_fisica,
          a.cd_cgc                     AS cd_cgc
   FROM adiantamento a
   WHERE a.vl_saldo <> 0
   GROUP BY a.cd_pessoa_fisica,
            a.cd_cgc
  ) alias25
  GROUP BY cd_pessoa_fisica,
           cd_cgc
 )
 SELECT DISTINCT e.cd_linea_negocio                                                                            AS cd_lineanegocio,
                 CASE WHEN t.cd_cgc IS NULL THEN  pf.nr_seq_tipo_doc_identificacao  ELSE 'NI' END                                 AS cd_tipoiddeudor,
                 CASE WHEN t.cd_cgc IS NULL THEN  pf.nr_tipo_identificacao  ELSE pj.nr_tipo_identificacao END                     AS cd_iddeudor,
                 CASE WHEN t.cd_cgc IS NULL THEN  0  ELSE substr(pj.nr_tipo_identificacao, - 1, 1) END                            AS cd_dvdeudor,
                 substr(CASE WHEN t.cd_cgc IS NULL THEN  obter_nome_pf(t.cd_pessoa_fisica)  ELSE pj.ds_razao_social END , 1, 155) AS nm_nombredeudor,
                 coalesce(substr(CASE WHEN t.cd_cgc IS NULL THEN  epf.cd_endereco_catalogo WHEN t.cd_cgc=epj.cd_endereco_catalogo THEN  NULL  ELSE 'NA' END , 1, 5), 'NA')                                                                     AS cd_codigomunicipio,
                 coalesce(cp.cd_conceito_devedor, 7)                                                                AS cd_conceptodeudores,
                 t.cd_tipo_divida                                                                              AS cd_tipodeuda,
                 coalesce(e.cd_politica_cont, 6)                                                                    AS cd_medicionposterior,
                 coalesce(crr.valor_radicado, 0)                                                                    AS vl_cxcpendientesradicar,
                 coalesce((tnv.valor), 0)                                                                           AS cxcnovencidas,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '30 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '1 days'
                        AND t.ie_situacao = '1' THEN t.vl_titulo
                   ELSE 0
                  END, 0)                                                                                          AS vl_cxcmora30dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '60 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '31 days'
                        AND t.ie_situacao = '1' THEN t.vl_titulo
                   ELSE 0
                  END, 0)                                                                                          AS vl_cxcmora60dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '90 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '61 days'
                        AND t.ie_situacao = '1' THEN t.vl_titulo
                   ELSE 0
                  END, 0)                                                                                          AS vl_cxcmora90dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '180 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '91 days'
                        AND t.ie_situacao = '1' THEN t.vl_titulo
                   ELSE 0
                  END, 0)                                                                                          AS vl_cxcmora180dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '360 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '181 days'
                        AND t.ie_situacao = '1' THEN t.vl_titulo
                   ELSE 0
                  END, 0)                                                                                          AS vl_cxcmora360dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento <= LOCALTIMESTAMP - interval '361 days'
                        AND t.ie_situacao = '1' THEN t.vl_titulo
                   ELSE 0
                  END, 0)                                                                                          AS vl_cxcmoramayor360dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '30 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '1 days'
                        AND t.ie_situacao = '1' THEN(t.vl_titulo *(t.vl_deterioracao *(trunc(LOCALTIMESTAMP) - t.dt_vencimento)) / 100) * - 1
                  END, 0)                                                                                          AS vl_deterioro30dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '60 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '31 days'
                        AND t.ie_situacao = '1' THEN(t.vl_titulo *(t.vl_deterioracao *(trunc(LOCALTIMESTAMP) - t.dt_vencimento)) / 100) * - 1
                  END, 0)                                                                                          AS vl_deterioro60dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '90 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '61 days'
                        AND t.ie_situacao = '1' THEN(t.vl_titulo *(t.vl_deterioracao *(trunc(LOCALTIMESTAMP) - t.dt_vencimento)) / 100) * - 1
                  END, 0)                                                                                          AS vl_deterioro90dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '180 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '91 days'
                        AND t.ie_situacao = '1' THEN(t.vl_titulo *(t.vl_deterioracao *(trunc(LOCALTIMESTAMP) - t.dt_vencimento)) / 100) * - 1
                  END, 0)                                                                                          AS vl_deterioro180dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento >= LOCALTIMESTAMP - interval '360 days'
                        AND t.dt_vencimento <= LOCALTIMESTAMP - interval '181 days'
                        AND t.ie_situacao = '1' THEN(t.vl_titulo *(t.vl_deterioracao *(trunc(LOCALTIMESTAMP) - t.dt_vencimento)) / 100) * - 1
                  END, 0)                                                                                          AS vl_deterioro360dias,
                 coalesce(
                  CASE
                   WHEN t.dt_vencimento <= LOCALTIMESTAMP - interval '361 days'
                        AND t.ie_situacao = '1' THEN(t.vl_titulo *(t.vl_deterioracao *(trunc(LOCALTIMESTAMP) - t.dt_vencimento)) / 100) * - 1
                  END, 0)                                                                                          AS vl_deterioromas360dias,
                 CASE
                  WHEN e.cd_politica_cont = 1
                       OR e.cd_politica_cont = 6 THEN 0
                  ELSE 0
                 END                                                                                           AS vl_ajuste
 FROM titulo t
 JOIN estab                  e ON ( e.cd_estabelecimento = t.cd_estabelecimento )
 LEFT JOIN pf ON ( pf.cd_pessoa_fisica = t.cd_pessoa_fisica )
 LEFT JOIN pj ON ( pj.cd_cgc = t.cd_cgc )
 LEFT JOIN endereco_pf            epf ON ( epf.cd_pessoa_fisica = t.cd_pessoa_fisica )
 LEFT JOIN endereco_pj            epj ON ( epj.cd_cgc = t.cd_cgc )
 JOIN convenio_paciente      cp ON ( cp.nr_atendimento = t.nr_atendimento
                                AND cp.nr_interno_conta = t.nr_interno_conta )
 LEFT JOIN conta_receber_radicado crr ON ( crr.nr_atendimento = t.nr_atendimento
                                           AND crr.nr_interno_conta = t.nr_interno_conta )
 LEFT JOIN titulos_n_vencidos     tnv ON ( ( tnv.cd_pessoa_fisica = t.cd_pessoa_fisica
                                         AND tnv.cd_cgc IS NULL )
                                       OR ( tnv.cd_cgc = t.cd_cgc
                                            AND tnv.cd_pessoa_fisica IS NULL ) )
) t
WHERE cd_lineanegocio IS NOT NULL
      AND cd_tipoiddeudor IS NOT NULL
      AND cd_iddeudor IS NOT NULL
      AND cd_tipodeuda IS NOT NULL;

