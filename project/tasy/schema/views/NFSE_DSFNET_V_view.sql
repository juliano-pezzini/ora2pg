-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW nfse_dsfnet_v (nr_seq_nota, assinatura, inscricaomunicipalprestador, razaosocialprestador, tiporps, serierps, numerorps, dataemissaorps, situacaorps, serierpssubstituido, numerorpssubstituido, numeronfsesubstituida, dataemissaonfsesubstituida, serieprestacao, inscricaomunicipaltomador, cpfcnpjtomador, razaosocialtomador, doctomadorestrangeiro, tipologradourotomador, logradourotomador, numeroenderecotomador, complementoenderecotomador, tipobairrotomador, bairrotomador, cidadetomador, cidadetomadordescricao, ceptomador, emailtomador, codigoatividade, aliquotaatividade, tiporecolhimento, municipioprestacao, municipioprestacaodescricao, operacao, tributacao, valorpis, valorcofins, valorinss, valorir, valorcsll, aliquotapis, aliquotacofins, aliquotainss, aliquotair, aliquotacsll, descricaorps, dddprestador, telefoneprestador, dddtomador, telefonetomador, motcancelamento, cpfcnpjintermediario, deducaopor, tipodeducao, cpfcnpjreferencia, numeronfreferencia, valortotalreferencia, percentualdeduzir, valordeduzir) AS select	a.nr_sequencia nr_seq_nota,
	lower(a.cd_assinatura_rps) Assinatura,
	nfse_obter_dados_dsfnet(a.nr_sequencia,'IM') InscricaoMunicipalPrestador,
	substr(nfe_elimina_caractere_especial(obter_nome_pf_pj('', a.cd_cgc_emitente)), 1, 255) RazaoSocialPrestador,
	'RPS' TipoRPS,
	'NF' SerieRPS,
	a.nr_nota_fiscal NumeroRPS,
	to_char(a.dt_emissao, 'yyyy-mm-dd') || 'T' || to_char(a.dt_emissao, 'hh:mi:ss') DataEmissaoRPS,
	-- decode((select count(*) from w_nota_fiscal), 1, 'N', 'L') SituacaoRPS,
	CASE WHEN a.ie_situacao=1 THEN  'N' WHEN a.ie_situacao=2 THEN  'C' WHEN a.ie_situacao=3 THEN  'C'  ELSE 'N' END  SituacaoRPS,
	'' SerieRPSSubstituido,
	'' NumeroRPSSubstituido,
	'' NumeroNFSeSubstituida,
	'' DataEmissaoNFSeSubstituida,
	99 SeriePrestacao,
	CASE WHEN 		obter_desc_municipio_ibge(			CASE WHEN 	obter_municipio_ibge(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))=0 THEN 				obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')  ELSE obter_municipio_ibge(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')) END )=obter_desc_municipio_ibge(			CASE WHEN 	obter_municipio_ibge(obter_dados_pf_pj('', cd_cgc_emitente, 'CEP'))=0 THEN 				obter_dados_pf_pj('', cd_cgc_emitente, 'CDM')  ELSE obter_municipio_ibge(obter_dados_pf_pj('', cd_cgc_emitente, 'CEP')) END ) THEN 		CASE WHEN cd_cgc='' THEN  coalesce(lpad(obter_dados_pf(cd_pessoa_fisica, 'ISS'), 9, '0'), '000000000')  ELSE coalesce(lpad(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'IM'), 1, 30), 9, '0'), '000000000') END   ELSE '000000000' END  InscricaoMunicipalTomador,
	-- substr(nvl(lpad(decode(cd_cgc, '', obter_dados_pf(cd_pessoa_fisica, 'ISS'), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'IM')), 11, '0'), '00000000000'), 1, 30) InscricaoMunicipalTomador,
	CASE WHEN cd_cgc='' THEN  CASE WHEN obter_dados_pf(cd_pessoa_fisica, 'CPF') IS NULL THEN  '99999999999'  ELSE coalesce(substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'), 1, 11), '00000000000') END   ELSE cd_cgc END  CPFCNPJTomador,
	substr(nfe_elimina_caractere_especial(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc)), 1, 255) RazaoSocialTomador,
	--DOCTOMADORESTRNAGEIRO
	--1773637
	CASE WHEN substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'UF'), 1, 2)='IN' THEN 		CASE WHEN cd_cgc='' THEN 			CASE WHEN obter_dados_pf(cd_pessoa_fisica, 'CPF') IS NULL THEN  '99999999999'  ELSE coalesce(substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'), 1, 11), '00000000000') END   ELSE cd_cgc END   ELSE null END  DocTomadorEstrangeiro,
	--1773637
	--'Rua' TipoLogradouroTomador,
	substr(coalesce(CASE WHEN cd_pessoa_fisica IS NULL THEN obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'LO')  ELSE Sus_Obter_Desc_TipoLog(coalesce(obter_compl_pf(cd_pessoa_fisica,1,'TLS'),0)) END ,'Rua'),1,10) TipoLogradouroTomador,
	coalesce(substr(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'EN')), 1, 50), 'Endereco') LogradouroTomador,
	coalesce(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'NR'), 1, 25), '00') NumeroEnderecoTomador,
	coalesce(substr(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CO')), 1, 255), 'Complemento') ComplementoEnderecoTomador,
	'Bairro' TipoBairroTomador,
	coalesce(substr(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'B')), 1, 255), 'Bairro') BairroTomador,
	/*lpad(obter_siafi_municipio_ibge(obter_municipio_ibge(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'))), 8, '0') CidadeTomador,
	substr(obter_desc_municipio_ibge(nvl(obter_municipio_ibge(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'))), 1, 50) CidadeTomadorDescricao,*/
	CASE WHEN substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'UF'),1,2)='IN' THEN '0009999'  ELSE lpad(obter_siafi_municipio_ibge(			CASE WHEN 				obter_municipio_ibge(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')))=0 THEN 				obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')  ELSE obter_municipio_ibge(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))) END 		), 8, '0') END  CidadeTomador,
	substr(
	CASE WHEN substr(obter_dados_pf_pj(cd_pessoa_fisica,cd_cgc,'UF'),1,2)='IN' THEN obter_dados_pf_pj( cd_pessoa_fisica, cd_cgc, 'PAIS')  ELSE obter_desc_municipio_ibge(			CASE WHEN 				obter_municipio_ibge(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP')))=0 THEN 				obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM')  ELSE obter_municipio_ibge(nfe_elimina_caractere_especial(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'))) END 		) END
	, 1, 50) CidadeTomadorDescricao,
	lpad(somente_numero(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), 8, '0') CEPTomador,
	coalesce(substr(nfe_elimina_caractere_especial(obter_email_pessoa(a.cd_estabelecimento,cd_pessoa_fisica, cd_cgc,coalesce(obter_usuario_ativo, 'tasy'))), 1, 80), '-') EmailTomador,
	obter_cod_grupo_ativ(a.cd_estabelecimento, a.nr_sequencia, 'C') CodigoAtividade,
	/*nvl(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), obter_procedimento_nfse(a.nr_sequencia,'O')), 'P'), obter_dados_pf_pj_estab(a.cd_estabelecimento, NULL, a.cd_cgc_emitente, 'ATIV')) */

	--decode(nvl(obter_dados_pf_pj_estab(a.cd_estabelecimento, null, a.cd_cgc_emitente, 'ATIV'),0),0,obter_dados_grupo_servico_item(a.nr_sequencia,'CD')), CodigoAtividade,
	campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'ISS'), 2) AliquotaAtividade,
	/*decode(cd_cgc, '', 'A', decode(upper(substr(obter_desc_municipio_ibge(nvl(obter_municipio_ibge(substr(obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CEP'), 1, 15)), obter_dados_pf_pj(cd_pessoa_fisica, cd_cgc, 'CDM'))), 1, 50)), 'CAMPINAS', 'R', 'A')) TipoRecolhimento,*/

	CASE WHEN cd_cgc='' THEN  'A'  ELSE CASE WHEN obter_se_pj_retem_iss(a.cd_cgc, a.cd_estabelecimento)='S' THEN  'R'  ELSE 'A' END  END  TipoRecolhimento,
	obter_siafi_municipio_ibge(obter_municipio_ibge(obter_dados_pf_pj('', cd_cgc_emitente, 'CEP'))) MunicipioPrestacao, --'0001219'
	nfe_elimina_caractere_especial(obter_desc_municipio_ibge(
		CASE WHEN 	obter_municipio_ibge(obter_dados_pf_pj('', cd_cgc_emitente, 'CEP'))=0 THEN 			obter_dados_pf_pj('', cd_cgc_emitente, 'CDM')  ELSE obter_municipio_ibge(obter_dados_pf_pj('', cd_cgc_emitente, 'CEP')) END )) MunicipioPrestacaoDescricao,
	'A' Operacao,
	CASE WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='1' THEN  'T' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='2' THEN  'T' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='3' THEN  'C' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='4' THEN  'F' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='T' THEN 'T' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='C' THEN 'C' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='E' THEN 'E' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='F' THEN 'F' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='G' THEN 'G' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='H' THEN 'H' WHEN nfse_obter_regra('TP',a.cd_estabelecimento)='M' THEN 'M'  ELSE 'K' END  Tributacao,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'PIS') END  ValorPIS,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'COFINS') END  ValorCOFINS,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'INSS') END  ValorINSS,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'IR') END  ValorIR,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'V', 'CSLL') END  ValorCSLL,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'PIS') END  AliquotaPIS,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'COFINS') END  AliquotaCOFINS,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'INSS') END  AliquotaINSS,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'IR') END  AliquotaIR,
	CASE WHEN cd_cgc='' THEN  0  ELSE obter_valor_tipo_tributo_nota(a.nr_sequencia, 'X', 'CSLL') END  AliquotaCSLL,
	tiss_eliminar_caractere(elimina_acentuacao(a.ds_observacao)) DescricaoRPS,
	obter_dados_pf_pj('', a.cd_cgc_emitente, 'DDT') DDDPrestador,
	substr(elimina_caracteres_telefone(nfe_elimina_caractere_especial(obter_dados_pf_pj('', a.cd_cgc_emitente, 'T'))), 1, 8) TelefonePrestador,
	obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'DDT') DDDTomador,
	substr(elimina_caracteres_telefone(nfe_elimina_caractere_especial(obter_dados_pf_pj(a.cd_pessoa_fisica, a.cd_cgc, 'T'))), 1, 8) TelefoneTomador,
	CASE WHEN a.ie_situacao=2 THEN  'ERRO DE DIGITACAO' WHEN a.ie_situacao=3 THEN  'ERRO DE DIGITACAO'  ELSE '' END  MotCancelamento,
	'' CPFCNPJIntermediario,
	CASE WHEN a.vl_descontos=0 THEN  null  ELSE 'Valor' END  DeducaoPor,
	CASE WHEN a.vl_descontos=0 THEN  null  ELSE 'Despesas com Materiais' END  TipoDeducao,
	null CPFCNPJReferencia,
	null NumeroNFReferencia,
	null ValorTotalReferencia,
	CASE WHEN a.vl_descontos=0 THEN  null  ELSE '0.00' END  PercentualDeduzir,
	CASE WHEN a.vl_descontos=0 THEN  null  ELSE campo_mascara(a.vl_descontos, 2) END ValorDeduzir
FROM 	nota_fiscal_lote_nfe l,
	nfe_transmissao_nf n,
	nfe_transmissao t,
	nota_fiscal a
where	l.nr_seq_transmissao = t.nr_sequencia
and	t.nr_sequencia	= n.nr_seq_transmissao
and	a.nr_sequencia = n.nr_seq_nota_fiscal
and	t.nr_sequencia = (select max(nr_sequencia) from nfe_transmissao)
and	l.nr_sequencia = (select max(nr_sequencia) from nota_fiscal_lote_nfe)
order by
	(a.nr_nota_fiscal)::numeric;

