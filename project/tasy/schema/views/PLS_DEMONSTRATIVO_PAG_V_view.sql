-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW pls_demonstrativo_pag_v (nr_documento, dt_emissao, nm_beneficiario, cd_usuario_plano, nr_quantidade, cd_procedimento, ds_descricao, ds_atividade, vl_honorario, vl_custo_operacional, vl_filme, nr_opm, vl_glosa, nr_seq_evento, nr_seq_protocolo, nr_seq_prestador_pgto, cd_pessoa_fisica, ie_tipo_item, nr_seq_prestador_exec, nr_seq_lote_pgto, nr_seq_pag_item, vl_taxas, vl_apresentado, nr_seq_resumo, nr_seq_conta, vl_liberado, ie_tipo_despesa, pr_liberado, vl_co_original, vl_medico, vl_materiais, vl_taxa_adm, nr_seq_item, vl_unitario, vl_hm, nm_usuario, vl_total) AS select	nr_documento,
	dt_emissao, 
	nm_beneficiario, 
	cd_usuario_plano, 
	nr_quantidade, 
	cd_procedimento, 
	ds_descricao, 
	ds_atividade, 
	vl_honorario, 
	vl_custo_operacional, 
	vl_filme, 
	nr_opm, 
	vl_glosa, 
	nr_seq_evento, 
	nr_seq_protocolo, 
	nr_seq_prestador_pgto, 
	case when(ie_tipo_item = 'P') and 
		((vl_honorario + vl_anestesista + vl_auxiliares = 0) or 
		((vl_custo_operacional = vl_liberado) and vl_honorario > 0) or (vl_custo_operacional + vl_filme - vl_taxas = vl_liberado)) then 
		null 
	else 
		cd_pessoa_fisica 
	end 	cd_pessoa_fisica, 
	ie_tipo_item, 
	nr_seq_prestador_exec, 
	nr_seq_lote_pgto, 
	nr_seq_pag_item, 
	vl_taxas, 
	vl_apresentado, 
	nr_sequencia nr_seq_resumo, 
	nr_seq_conta, 
	vl_liberado, 
	ie_tipo_despesa, 
	pr_liberado, 
	vl_co_original, 
	vl_medico, 
	vl_materiais, 
	vl_taxa_adm, 
	nr_seq_item, 
	vl_unitario, 
	vl_hm, 
	nm_usuario, 
	vl_honorario + vl_custo_operacional + vl_filme - vl_taxas vl_total 
FROM (select	a.cd_guia nr_documento, 
		to_char(a.dt_emissao, 'dd/mm/yyyy') dt_emissao, 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,50) nm_beneficiario, 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'CR'),1,30) cd_usuario_plano, 
		coalesce(c.qt_item,0) nr_quantidade, 
		to_char(b.cd_procedimento) cd_procedimento, 
		substr(obter_descricao_procedimento(b.cd_procedimento,b.ie_origem_proced),1,45) ds_descricao, 
		'' ds_atividade, 
		coalesce(vl_hm,0) vl_honorario, 
		coalesce(vl_co_pag,0) + CASE WHEN b.ie_origem_proced=5 THEN  0  ELSE coalesce(vl_materiais_pag,0) END  vl_custo_operacional, 
		CASE WHEN b.ie_origem_proced=5 THEN  coalesce(vl_materiais_pag,0)  ELSE 0 END  vl_filme, 
		null nr_opm, 
		coalesce(c.vl_glosa,0) vl_glosa, 
		coalesce(c.vl_liberado, 0) vl_liberado, 
		c.nr_seq_evento, 
		c.nr_seq_protocolo, 
		c.nr_seq_prestador_pgto, 
		c.cd_pessoa_fisica, 
		c.ie_tipo_item, 
		c.nr_seq_prestador_exec, 
		c.nr_seq_lote_pgto, 
		c.nr_seq_pag_item, 
		c.pr_taxa_adm_co, 
		c.pr_taxa_adm_mat, 
		coalesce(c.pr_liberado,0) pr_liberado, 
		coalesce(vl_taxa_adm_pag,0) vl_taxas, 
		b.ie_tipo_despesa, 
		coalesce(c.vl_apresentado, 0) vl_apresentado, 
		c.nr_sequencia, 
		a.nr_sequencia nr_seq_conta, 
		coalesce(c.vl_anestesista,0) vl_anestesista, 
		coalesce(c.vl_auxiliares,0) vl_auxiliares, 
		coalesce(c.vl_custo_operacional,0) vl_co_original, 
		coalesce(c.vl_medico,0) vl_medico, 
		coalesce(c.vl_materiais, 0) vl_materiais, 
		coalesce(vl_taxa_adm_pag,0) vl_taxa_adm, 
		b.nr_sequencia nr_seq_item, 
		c.vl_calculado, 
		c.vl_unitario, 
		c.vl_hm, 
		c.vl_co_pag, 
		c.nm_usuario 
	from	pls_conta 		a, 
		pls_conta_proc 		b, 
		pls_conta_medica_resumo c 
	where	a.nr_sequencia		= b.nr_seq_conta 
	and	c.nr_seq_conta  	= a.nr_sequencia 
	and	c.nr_seq_conta_proc	= b.nr_sequencia 
	and	c.nr_seq_pag_item is not null 
	and	c.nr_seq_lote_pgto is not null 
	and	c.nr_seq_prestador_pgto is not null 
	and	c.ie_tipo_item <> 'I' 
	/*and	nvl(c.qt_item, 0) > 0*/
 
	
union
 
	select	a.cd_guia nr_documento, 
		to_char(a.dt_emissao, 'dd/mm/yyyy') dt_emissao, 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,50) nm_beneficiario, 
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'CR'),1,30) cd_usuario_plano, 
		coalesce(c.qt_item,0) nr_quantidade, 
		substr(pls_obter_dados_material(b.nr_seq_material, 'CO'),1,40) cd_procedimento, 
		substr(pls_obter_dados_material(b.nr_seq_material,'DS'),1,45) ds_descricao, 
		'' ds_atividade, 
		coalesce(vl_hm,0) vl_honorario, 
		coalesce(vl_co_pag,0) + coalesce(vl_materiais_pag,0) vl_custo_operacional, 
		0 vl_filme, 
		b.nr_nota_fiscal nr_opm, 
		coalesce(c.vl_glosa,0) vl_glosa, 
		coalesce(c.vl_liberado, 0) vl_liberado, 
		c.nr_seq_evento, 
		c.nr_seq_protocolo, 
		c.nr_seq_prestador_pgto, 
		c.cd_pessoa_fisica, 
		c.ie_tipo_item, 
		c.nr_seq_prestador_exec, 
		c.nr_seq_lote_pgto, 
		c.nr_seq_pag_item, 
		c.pr_taxa_adm_co, 
		c.pr_taxa_adm_mat, 
		coalesce(c.pr_liberado,0) pr_liberado, 
		coalesce(c.vl_taxa_adm_pag, 0) vl_taxas, 
		b.ie_tipo_despesa, 
		coalesce(c.vl_apresentado, 0) vl_apresentado, 
		c.nr_sequencia, 
		a.nr_sequencia nr_seq_conta, 
		coalesce(c.vl_anestesista,0) vl_anestesista, 
		coalesce(c.vl_auxiliares,0) vl_auxiliares, 
		coalesce(c.vl_custo_operacional,0) vl_co_original, 
		coalesce(c.vl_medico,0) vl_medico, 
		coalesce(c.vl_materiais, 0) vl_materiais, 
		coalesce(vl_taxa_adm_pag,0) vl_taxa_adm, 
		b.nr_sequencia nr_seq_item, 
		c.vl_calculado, 
		c.vl_unitario, 
		c.vl_hm, 
		c.vl_co_pag, 
		c.nm_usuario 
	from	pls_conta	a, 
		pls_conta_mat	b, 
		pls_conta_medica_resumo c 
	where	a.nr_sequencia = b.nr_seq_conta 
	and	c.nr_seq_conta = a.nr_sequencia 
	and	c.nr_seq_conta_mat 	= b.nr_sequencia 
	and	c.nr_seq_lote_pgto is not null 
	and	c.nr_seq_prestador_pgto is not null 
	and	c.nr_seq_pag_item is not null 
	and	c.ie_tipo_item <> 'I' 
	/*and	nvl(c.qt_item, 0) > 0*/
) alias54;

