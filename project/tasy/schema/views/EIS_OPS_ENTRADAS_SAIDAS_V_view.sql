-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW eis_ops_entradas_saidas_v (dt_referencia, dt_referencia_param, cd_estabelecimento, qt_entradas, qt_saidas, qt_saldo, total_idade_entrada, total_idade_saida, vl_receita_entradas, vl_custo_entradas, vl_receita_saidas, vl_custo_saidas) AS select	pkg_date_formaters.to_varchar(dt_referencia,'shortDate',wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario) dt_referencia,
	dt_referencia dt_referencia_param,
	cd_estabelecimento,
	sum(qt_entradas) qt_entradas,
	sum(qt_saidas) qt_saidas,
	sum(qt_entradas - qt_saidas) qt_saldo,
	sum(nr_idade_entradas) total_idade_entrada,
	sum(nr_idade_saidas) total_idade_saida,
	sum(vl_receita_entradas) vl_receita_entradas,
	sum(vl_custo_entradas) vl_custo_entradas,
	sum(vl_receita_saidas) vl_receita_saidas,
	sum(vl_custo_saidas) vl_custo_saidas
FROM (
	select	pkg_date_utils.start_of(dt_referencia,'MONTH') dt_referencia,
		cd_estabelecimento,
		nr_seq_segurado,
		CASE WHEN ie_tipo_informacao=1 THEN 1  ELSE 0 END  qt_entradas,
		CASE WHEN ie_tipo_informacao=1 THEN nr_idade  ELSE 0 END  nr_idade_entradas,
		CASE WHEN ie_tipo_informacao=1 THEN vl_receita  ELSE 0 END  vl_receita_entradas,
		CASE WHEN ie_tipo_informacao=1 THEN vl_custo  ELSE 0 END  vl_custo_entradas,
		CASE WHEN ie_tipo_informacao=2 THEN 1  ELSE 0 END  qt_saidas,
		CASE WHEN ie_tipo_informacao=2 THEN nr_idade  ELSE 0 END  nr_idade_saidas,
		CASE WHEN ie_tipo_informacao=2 THEN vl_receita  ELSE 0 END  vl_receita_saidas,
		CASE WHEN ie_tipo_informacao=2 THEN vl_custo  ELSE 0 END  vl_custo_saidas		
	from (
		select	z.nr_seq_segurado,
			coalesce(z.dt_contratacao, z.dt_rescisao) dt_referencia,
			a.cd_estabelecimento,
			z.nr_idade,
			z.ie_tipo_informacao,
			sum(coalesce(a.vl_mensalidade,0) + coalesce(a.vl_faturado,0) + coalesce(a.vl_taxa,0)) vl_receita,
			sum(coalesce(a.vl_conta,0) + coalesce(a.vl_reembolso,0) + coalesce(a.vl_ressarcir,0) + coalesce(a.vl_recurso,0) - coalesce(a.vl_coparticipacao,0)) vl_custo
		from (
			select	s.nr_sequencia nr_seq_segurado,
				null dt_rescisao,
				pkg_date_utils.start_of(s.dt_contratacao,'MONTH') dt_contratacao,
				trunc(pkg_date_utils.get_DiffDate(p.dt_nascimento, LOCALTIMESTAMP, 'YEAR')) nr_idade,
				1 ie_tipo_informacao
			from	pls_segurado s,
				pessoa_fisica p
			where	p.cd_pessoa_fisica = s.cd_pessoa_fisica
			and	s.dt_liberacao is not null
			and 	s.nr_seq_segurado_ant is null
			and 	s.nr_seq_segurado_mig is null
			and	s.ie_tipo_segurado = 'B'
			and	s.dt_contratacao is not null
			
union all

			select	s.nr_sequencia nr_seq_segurado,
				pkg_date_utils.start_of(s.dt_rescisao,'MONTH') dt_rescisao,
				null dt_contratacao,
				trunc(pkg_date_utils.get_DiffDate(p.dt_nascimento, LOCALTIMESTAMP, 'YEAR')) nr_idade,
				2 ie_tipo_informacao
			from	pls_segurado s,
				pessoa_fisica p
			where	p.cd_pessoa_fisica = s.cd_pessoa_fisica
			and	s.dt_liberacao is not null
			and 	s.nr_seq_segurado_ant is null
			and 	s.nr_seq_segurado_mig is null
			and	s.ie_tipo_segurado = 'B'
			and	s.dt_rescisao is not null
			) z,
			pls_ar_dados_v a,
			pls_ar_lote d
		where	d.nr_sequencia = a.nr_seq_lote
		and	a.nr_seq_segurado = z.nr_seq_segurado
		and 	d.dt_mes_competencia = coalesce(z.dt_contratacao, z.dt_rescisao)
		group by z.nr_seq_segurado,
			 coalesce(z.dt_contratacao, z.dt_rescisao),
			 a.cd_estabelecimento,
			 z.nr_idade,
			 z.ie_tipo_informacao
		) alias31
	) alias32
group by	dt_referencia, cd_estabelecimento;

