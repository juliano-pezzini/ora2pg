-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW exp_nfse_petropolis_v (tiporeg, cpfcnpj, tipotrib, dtadesn, alqisssn_ip, versao, tiponfs, numrps, serrps, dtemi, retfonte, codsrv, discrsrv, vlnfs, vlded, discrded, vlbascalc, alqiss, vliss, vlissret, cpfcnpjtom, razsoctom, tipologtom, logtom, numendtom, complendtom, bairrotom, muntom, siglauftom, ceptom, telefone, incsmunic, tipologlocpre, logpre, numendpre, complendpre, bairropre, munpre, siglaufpre, ceppre, email1, email2, email3, dt_emissao, cd_estabelecimento) AS SELECT '10'					TipoReg,
	lpad(substr(a.cd_cgc,1,14),14,'0')	CpfCnpj, 
	'1'					TipoTrib, 
	'     '				DtAdeSN, 
	'   '				AlqIssSN_IP, 
	'1.00'					Versao,	 
	''					TipoNFS, 
	''					NumRps, 
	''					SerRps, 
	''					DtEmi, 
	''					RetFonte, 
	'' 					CodSrv, 
	''					DiscrSrv, 
	''					VlNFS,	 
	''					VlDed,	 
	''					DiscrDed,	 
	''					VlBasCalc, 
	''					AlqIss, 
	''					VlIss, 
	''					VlIssRet, 
	''					CpfCnpjTom, 
	''					RazSocTom, 
	''					TipoLogTom, 
	''					LogTom, 
	''					NumEndTom, 
	''					ComplEndTom, 
	''					BairroTom, 
	''					MunTom, 
	''					SiglaUFTom, 
	''					CepTom,	 
	''					telefone, 
	''					IncsMunic, 
	''					TipoLogLocPre, 
	''					LogPre, 
	''					NumEndPre, 
	''					ComplEndPre, 
	''					BairroPre, 
	''					MunPre, 
	''					SiglaUFPre, 
	''					CepPre, 
	''					Email1, 
	''					Email2, 
	''					Email3, 
	LOCALTIMESTAMP					dt_emissao, 
	a.cd_estabelecimento			cd_estabelecimento 
FROM	estabelecimento a 

union all
 
select	'20'					TipoReg, 
	''					CpfCnpj, 
	''					TipoTrib, 
	''					DtAdeSN, 
	''					AlqIssSN_IP, 
	''					Versao, 
	CASE WHEN a.ie_situacao=9 THEN  'RPC' WHEN a.ie_situacao=1 THEN  'RPS' WHEN a.ie_situacao=2 THEN  'RPC' WHEN a.ie_situacao=3 THEN  'RPC'  ELSE 'RPS' END 	TipoNFS, 
	lpad(substr(nr_rps,1,9),9,'0')		NumRps, 
	rpad(substr(cd_serie_rps,1,3),3,' ')	SerRps, 
	to_char(a.dt_emissao,'dd/mm/yyyy')	DtEmi, 
	'NAO'					RetFonte, 
	rpad(substr(elimina_caractere_especial(obter_dados_grupo_servico_item(obter_item_servico_proced(obter_procedimento_nfse(a.nr_sequencia,'P'), 
	obter_procedimento_nfse(a.nr_sequencia,'O')),'CD')),1,10),10,' ') 		CodSrv, 
	rpad(substr(obter_descricao_rps(a.cd_estabelecimento, a.nr_sequencia, 'DS_SERVICOS'),1,4000),4000,' ') DiscrSrv, 
	lpad(to_char(campo_mascara(a.vl_total_nota,2)),16,'0')  			VlNFS,	 
	lpad(to_char(campo_mascara(a.vl_descontos,2)),16,'0')  			VlDed,	 
	rpad(substr(ds_obs_desconto_nf,1,1000),1000,' ')				DiscrDed,	 
	lpad(to_char(campo_mascara((a.vl_total_nota-a.vl_descontos),2)),16,'0')		VlBasCalc, 
	lpad(to_char(campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia,'X','ISS'),2)),5,'0') AlqIss, 
	lpad(to_char(campo_mascara(obter_valor_tipo_tributo_nota(a.nr_sequencia,'V','ISS'),2)),16,'0') VlIss, 
	lpad(to_char(campo_mascara(CASE WHEN obter_se_nf_retem_iss(a.nr_sequencia)='S' THEN obter_valor_tipo_tributo_nota(a.nr_sequencia,'V','ISS')  ELSE 0 END ,2)),16,'0') VlIssRet, 
	lpad(substr(CASE WHEN a.cd_pessoa_fisica IS NULL THEN a.cd_cgc  ELSE Obter_Cpf_Pessoa_Fisica(a.cd_pessoa_fisica) END ,1,14),14,'0') CpfCnpjTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'N'),1,60),60,' ')	RazSocTom, 
	'RUA'										TipoLogTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'LO'),1,70),70,' ')	LogTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'NR'),1,10),10,' ')	NumEndTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CO'),1,60),60,' ')	ComplEndTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'B'),1,60),60,' ')	BairroTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CI'),1,60),60,' ')	MunTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'UF'),1,2),2,' ')	SiglaUFTom, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'CEP'),1,8),8,' ')	CepTom,	 
	lpad(substr(somente_numero_char(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'T')),1,10),10,'0') telefone, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'IM'),1,20),20,' ')	IncsMunic, 
	'RUA'										TipoLogLocPre, 
	rpad(substr(c.ds_tipo_logradouro,1,70),70, ' ')		LogPre, 
	rpad(substr(j.nr_endereco,1,10),10,' ')			NumEndPre, 
	rpad(substr(j.ds_complemento,1,60),60,' ')		ComplEndPre, 
	rpad(substr(j.ds_bairro,1,60),60,' ')			BairroPre, 
	rpad(substr(j.ds_municipio,1,60),60,' ')		MunPre, 
	rpad(j.sg_estado,2,' ')					SiglaUFPre, 
	lpad(substr(cd_cep,1,8),8,'0')				CepPre, 
	rpad(substr(obter_dados_pf_pj(a.cd_pessoa_fisica,a.cd_cgc,'M'),1,120),120,' ')	Email1, 
	rpad(substr('',1,120),120,' ')				Email2, 
	rpad(substr('',1,120),120,' ')				Email3, 
	a.dt_emissao						dt_emissao, 
	a.cd_estabelecimento					cd_estabelecimento 
FROM operacao_nota b, nota_fiscal a, pessoa_juridica j
LEFT OUTER JOIN cns_tipo_logradouro c ON (j.nr_seq_tipo_logradouro = c.nr_sequencia)
WHERE b.cd_operacao_nf = a.cd_operacao_nf and b.ie_servico = 'S' and j.cd_cgc = a.cd_cgc_emitente  
union all
 
SELECT '90'					TipoReg, 
	''					CpfCnpj, 
	'1'					TipoTrib, 
	''					DtAdeSN, 
	''					AlqIssSN_IP, 
	''					Versao,	 
	''					TipoNFS, 
	''					NumRps, 
	''					SerRps, 
	''					DtEmi, 
	''					RetFonte, 
	'' 					CodSrv, 
	''					DiscrSrv, 
	''					VlNFS,	 
	''					VlDed,	 
	''					DiscrDed,	 
	''					VlBasCalc, 
	''					AlqIss, 
	''					VlIss, 
	''					VlIssRet, 
	''					CpfCnpjTom, 
	''					RazSocTom, 
	''					TipoLogTom, 
	''					LogTom, 
	''					NumEndTom, 
	''					ComplEndTom, 
	''					BairroTom, 
	''					MunTom, 
	''					SiglaUFTom, 
	''					CepTom,	 
	''					telefone, 
	''					IncsMunic, 
	''					TipoLogLocPre, 
	''					LogPre, 
	''					NumEndPre, 
	''					ComplEndPre, 
	''					BairroPre, 
	''					MunPre, 
	''					SiglaUFPre, 
	''					CepPre, 
	''					Email1, 
	''					Email2, 
	''					Email3, 
	LOCALTIMESTAMP					dt_emissao, 
	a.cd_estabelecimento			cd_estabelecimento 
from	estabelecimento a;

