-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW eis_desempenho_fatur_rel_v (ds_convenio, cd_convenio_parametro, ds_tipo_atendimento, ie_tipo_atendimento, ds_complexidade, ie_complexidade, dt_fechamento, nm_usuario_fecha, ds_setor, cd_setor, nr_interno_conta, dt_referencia, cd_estabelecimento, hr_fechamento, qt_minuto, vl_conta, dt_mesano_referencia, ie_etapa) AS select	substr(obter_nome_convenio(a.cd_convenio_parametro),1,200) ds_convenio,
	a.cd_convenio_parametro, 
	substr(obter_valor_dominio(12,t.ie_tipo_atendimento),1,200) ds_tipo_atendimento, 
	t.ie_tipo_atendimento, 
	substr(obter_valor_dominio(1074, a.ie_complexidade),1,200) ds_complexidade, 
	coalesce(a.ie_complexidade,'B') ie_complexidade, 
	to_date(to_char(coalesce(p.dt_definitivo,a.dt_atualizacao),'dd/mm/yyyy'),'dd/mm/yyyy') dt_fechamento, 
	CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END  nm_usuario_fecha, 
	substr(obter_nome_setor(obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END )),1,200) ds_setor, 
	obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END ) cd_setor, 
	a.nr_interno_conta, 
	trunc(a.dt_mesano_referencia,'month') dt_referencia, 
	coalesce(a.cd_estabelecimento, t.cd_estabelecimento) cd_estabelecimento, 
	to_char(coalesce(p.dt_definitivo, a.dt_atualizacao),'hh24') hr_fechamento, 
	trunc(sum((coalesce(p.dt_definitivo, a.dt_atualizacao) - t.dt_alta) * 1440)) qt_minuto, 
	sum(obter_valor_conta(a.nr_interno_conta,0)) vl_conta, 
	 a.dt_mesano_referencia , 
	'T' ie_etapa	 
FROM 	Protocolo_convenio p, 
	atendimento_paciente t, 
	conta_paciente a 
where	a.nr_atendimento	= t.nr_atendimento 
and	a.nr_seq_protocolo	= p.nr_seq_protocolo 
and	t.dt_alta 		is not null 
group by	substr(obter_nome_convenio(a.cd_convenio_parametro),1,200), 
	a.cd_convenio_parametro, 
	substr(obter_valor_dominio(12,t.ie_tipo_atendimento),1,200), 
	t.ie_tipo_atendimento, 
	substr(obter_valor_dominio(1074, a.ie_complexidade),1,200), 
	coalesce(a.ie_complexidade,'B'), 
	to_date(to_char(coalesce(p.dt_definitivo,a.dt_atualizacao),'dd/mm/yyyy'),'dd/mm/yyyy'), 
	CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END  , 
	obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END ), 
	substr(obter_nome_setor(obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END )),1,200) , 
	a.nr_interno_conta, 
	trunc(a.dt_mesano_referencia,'month'), 
	coalesce(a.cd_estabelecimento, t.cd_estabelecimento), 
	to_char(coalesce(p.dt_definitivo, a.dt_atualizacao),'hh24'), 
	a.dt_mesano_referencia	 

union all
 
/* selecionar as contas inseridas em protocolo de atendimentos com alta identificar o tempo entre o fechamento da conta e o protocolo definitivo */
 
select	substr(obter_nome_convenio(a.cd_convenio_parametro),1,200), 
	a.cd_convenio_parametro, 
	substr(obter_valor_dominio(12,t.ie_tipo_atendimento),1,200) ds_tipo_atendimento, 
	t.ie_tipo_atendimento, 
	substr(obter_valor_dominio(1074, a.ie_complexidade),1,200) ds_complexidade, 
	coalesce(a.ie_complexidade,'B') ie_complexidade, 
	to_date(to_char(coalesce(p.dt_definitivo,a.dt_atualizacao),'dd/mm/yyyy'),'dd/mm/yyyy') dt_fechamento, 
	CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END  nm_usuario_fecha, 
	substr(obter_nome_setor(obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END )),1,200) ds_setor, 
	obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END ) cd_setor, 
	a.nr_interno_conta, 
	trunc(a.dt_mesano_referencia,'month') dt_referencia, 
	coalesce(a.cd_estabelecimento, t.cd_estabelecimento) cd_estabelecimento, 
	to_char(p.dt_definitivo,'hh24') hr_fechamento, 
	trunc(sum(p.dt_definitivo - a.dt_conta_definitiva) * 1440) qt_minuto, 
	sum(obter_valor_conta(a.nr_interno_conta,0)) vl_conta, 
	 a.dt_mesano_referencia, 
	'P' ie_etapa 
from 	Protocolo_convenio p, 
	atendimento_paciente t, 
	conta_paciente a 
where 	a.nr_atendimento	= t.nr_atendimento 
and	a.nr_seq_protocolo	= p.nr_seq_protocolo 
and	t.dt_alta 		is not null 
and	a.dt_conta_definitiva 	is not null 
and	p.dt_definitivo 	is not null	 
group by	substr(obter_nome_convenio(a.cd_convenio_parametro),1,200), 
	a.cd_convenio_parametro, 
	substr(obter_valor_dominio(12,t.ie_tipo_atendimento),1,200), 
	t.ie_tipo_atendimento, 
	substr(obter_valor_dominio(1074, a.ie_complexidade),1,200), 
	coalesce(a.ie_complexidade,'B'), 
	to_date(to_char(coalesce(p.dt_definitivo,a.dt_atualizacao),'dd/mm/yyyy'),'dd/mm/yyyy'), 
	CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END , 
	obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END ), 
	substr(obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  p.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),p.nm_usuario),1,15) END ),1,200), 
	a.nr_interno_conta, 
	trunc(a.dt_mesano_referencia,'month'), 
	coalesce(a.cd_estabelecimento, t.cd_estabelecimento), 
	to_char(p.dt_definitivo,'hh24'), 
	a.dt_mesano_referencia 

union all
 
/* selecionar as contas de atendimento com alta para identificar o tempo entre a alta e a conta definitiva */
 
select	substr(obter_nome_convenio(a.cd_convenio_parametro),1,200) ds_convenio, 
	a.cd_convenio_parametro, 
	substr(obter_valor_dominio(12,t.ie_tipo_atendimento),1,200) ds_tipo_atendimento, 
	t.ie_tipo_atendimento, 
	substr(obter_valor_dominio(1074, a.ie_complexidade),1,200) ds_complexidade, 
	coalesce(a.ie_complexidade,'B') ie_complexidade, 
	to_date(to_char(coalesce(a.dt_conta_definitiva,a.dt_atualizacao),'dd/mm/yyyy'),'dd/mm/yyyy') dt_fechamento, 
	CASE WHEN obter_se_historico_conta='N' THEN  a.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,6),a.nm_usuario),1,15) END  nm_usuario_fecha, 
	substr(obter_nome_setor(obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  a.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),a.nm_usuario),1,15) END )),1,200) ds_setor, 
	obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  a.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),a.nm_usuario),1,15) END ) cd_setor, 
	a.nr_interno_conta, 
	trunc(a.dt_mesano_referencia,'month') dt_referencia, 
	coalesce(a.cd_estabelecimento, t.cd_estabelecimento) cd_estabelecimento, 
	to_char(a.dt_conta_definitiva,'hh24') hr_fechamento, 
	trunc(sum(a.dt_conta_definitiva - t.dt_alta) * 1440) qt_minuto, 
	sum(obter_valor_conta(a.nr_interno_conta,0)) vl_conta, 
	a.dt_mesano_referencia, 
	 'C' ie_etapa 
from 	atendimento_paciente t, 
	conta_paciente a 
where 	a.nr_atendimento	= t.nr_atendimento 
and	t.dt_alta 		is not null 
and	a.dt_conta_definitiva is not null 
group by substr(obter_nome_convenio(a.cd_convenio_parametro),1,200), 
	a.cd_convenio_parametro, 
	substr(obter_valor_dominio(12,t.ie_tipo_atendimento),1,200), 
	t.ie_tipo_atendimento, 
	substr(obter_valor_dominio(1074, a.ie_complexidade),1,200), 
	coalesce(a.ie_complexidade,'B'), 
	obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  a.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),a.nm_usuario),1,15) END ), 
	to_date(to_char(coalesce(a.dt_conta_definitiva,a.dt_atualizacao),'dd/mm/yyyy'),'dd/mm/yyyy'), 
	CASE WHEN obter_se_historico_conta='N' THEN  a.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,6),a.nm_usuario),1,15) END , 
	substr(obter_nome_setor(obter_setor_usuario(CASE WHEN obter_se_historico_conta='N' THEN  a.nm_usuario  ELSE substr(coalesce(obter_usuario_conta_hist(a.nr_interno_conta,10),a.nm_usuario),1,15) END )),1,200), 
	a.nr_interno_conta, 
	trunc(a.dt_mesano_referencia,'month'), 
	coalesce(a.cd_estabelecimento, t.cd_estabelecimento), 
	to_char(a.dt_conta_definitiva,'hh24'), 
	a.dt_mesano_referencia;

