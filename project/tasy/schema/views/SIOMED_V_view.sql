-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE VIEW siomed_v (tp_registro, nr_linha, cd_registro, nr_seq_registro, cd_cgc_cpf_prestador, nr_relacao, nr_interno_conta, nr_seq_protocolo, tp_documento, nr_documento, nr_seq_documento, dt_emissao, cd_usuario_convenio, cd_cgc_cpf_medico_solic, ie_origem_doc, ie_versao_cid, cd_cid, dt_internacao, dt_alta, ie_carater_intern, cd_motivo_alta, ie_clinica, cd_procedimento, dt_entrada, dt_saida, qt_procedimento, vl_procedimento, cd_cgc_cpf_med_exec, cd_cgc_cpf_resp_cred, dt_procedimento, cd_atividade_prestador, ie_porte_anestesico, hr_atendimento, ie_cirurgia_multipla, tx_procedimento, ie_pagar_honorario, ie_procedimento_uti, nr_total_linha, vl_total, qt_documento, cd_item, ie_tp_nasc, ds_zeros, campo_livre, nm_usuario_carteirinha, ie_natureza_juridica, ie_tipo_plano, cd_campo_quebra, nr_cpf_solic, tp_movimento, nr_versao) AS SELECT 	0 				TP_REGISTRO,
	0 				nr_linha, 
  	'00' 				CD_registro, 
  	0 				nr_seq_registro, 
  	a.cd_cgc_hospital 		cd_cgc_cpf_prestador, 
  	somente_numero(coalesce(b.nr_seq_doc_convenio,a.nr_seq_protocolo)) 
					nr_relacao, 
  	0 				nr_interno_conta, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO, 
	'' 				tp_documento, 
  	'' 				nr_documento, 
	0 				nr_seq_documento, 
  	LOCALTIMESTAMP 			dt_emissao, 
  	'' 				cd_usuario_convenio, 
  	0 				cd_cgc_cpf_medico_solic, 
  	'' 				ie_origem_doc, 
  	'' 				ie_versao_cid, 
  	'' 				cd_cid, 
  	LOCALTIMESTAMP 			dt_internacao, 
  	LOCALTIMESTAMP 			dt_alta, 
  	'' 				ie_carater_intern, 
  	0 				cd_motivo_alta, 
  	0 				ie_clinica, 
  	0 				cd_procedimento, 
  	LOCALTIMESTAMP 			dt_entrada, 
  	LOCALTIMESTAMP 			dt_saida, 
  	0 				qt_procedimento, 
  	0 				vl_procedimento, 
  	'' 				cd_cgc_cpf_med_exec, 
  	0 				cd_cgc_cpf_resp_cred, 
  	LOCALTIMESTAMP 			dt_procedimento, 
  	0 				cd_atividade_prestador, 
  	0 				ie_porte_anestesico, 
	LOCALTIMESTAMP 			hr_atendimento, 
  	'' 				ie_cirurgia_multipla, 
  	0 				tx_procedimento, 
  	'' 				ie_pagar_honorario, 
  	'' 				ie_procedimento_uti, 
  	0 				nr_total_linha, 
  	0 				vl_total, 
  	0 				qt_documento, 
  	0 				cd_item, 
  	'00' 				ie_tp_nasc, 
  	'000000000000000000000000000000'ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE, 
  	' ' 				nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	' ' 				ie_tipo_plano, 
  	0 				cd_campo_quebra, 
	' ' 				nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	'04'				NR_VERSAO 
FROM  	w_interf_conta_header 	a, 
	protocolo_convenio 	b 
where 	a.nr_seq_protocolo = b.nr_seq_protocolo 

union all
 
/* Cabecalho do Documento */
 
SELECT 	10 				TP_REGISTRO, 
	0 				nr_linha, 
  	'10' 				CD_registro, 
	0 				nr_seq_registro, 
  	'' 				cd_cgc_cpf_prestador, 
	0				NR_RELACAO, 
  	a.nr_interno_conta		NR_INTERNO_CONTA, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO, 
  	CASE WHEN b.ie_tipo_guia='C' THEN  '02' WHEN b.ie_tipo_guia='A' THEN  '01' WHEN b.ie_tipo_guia='E' THEN  '05'  ELSE ' ' END  
					tp_documento, 
  	substr(coalesce(obter_maior_guia_conta(a.nr_interno_conta),b.cd_autorizacao),1,8) nr_documento, 
  	coalesce(Obter_qtd_remessa_guia(a.nr_atendimento,b.cd_autorizacao,'Z'),0) 
					nr_seq_documento, 
  	a.dt_entrada 			dt_emissao, 
  	substr(a.cd_usuario_convenio,1,22) 
					cd_usuario_convenio, 
  	somente_numero(coalesce(a.nr_cpf_medico_resp,'0')) 		cd_cgc_cpf_medico_solic, 
  	CASE WHEN a.ie_tipo_atendimento=3 THEN 'P'  ELSE 'N' END   
					ie_origem_doc, 
  	'0010' 				ie_versao_cid, 
  	a.cd_cid_principal 		cd_cid, 
  	LOCALTIMESTAMP				dt_internacao, 
	LOCALTIMESTAMP				dt_alta, 
	''				ie_carater_intern, 
	0				cd_motivo_alta, 
	0				ie_clinica, 
	0				cd_procedimento, 
	LOCALTIMESTAMP				dt_entrada, 
	LOCALTIMESTAMP				dt_saida, 
  	0 				qt_procedimento, 
	0 				vl_procedimento, 
	''				cd_cgc_cpf_med_exec, 
	0				cd_cgc_cpf_resp_cred, 
	LOCALTIMESTAMP				dt_procedimento, 
	0				cd_atividade_prestador, 
	0				ie_porte_anestesico, 
	LOCALTIMESTAMP				hr_atendimento, 
	''				ie_cirurgia_multipla, 
	0				tx_procedimento, 
	''				ie_pagar_honorario, 
	''				ie_procedimento_uti, 
	0				nr_total_linha, 
	0				vl_total, 
	0				qt_documento,		 
	0				cd_item, 
	'00'				ie_tp_nasc, 
  	'000'				ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE,  	 
  	substr(a.nm_paciente,1,25) 	nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	substr(a.cd_categoria_convenio,1,1) 
					ie_tipo_plano, 
  	1 				cd_campo_quebra, 
	CASE WHEN c.CD_PESSOA_INDIC IS NULL THEN  a.NR_CPF_MEDICO_RESP  ELSE obter_cpf_pessoa_fisica(c.CD_PESSOA_INDIC) END  
					nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	' '				NR_VERSAO 
FROM atendimento_paciente c, w_interf_conta_cab a
LEFT OUTER JOIN w_interf_conta_autor b ON (a.nr_seq_protocolo = b.nr_seq_protocolo AND a.nr_interno_conta = b.nr_interno_conta)
WHERE a.nr_atendimento 	= c.nr_atendimento  and coalesce(b.nr_sequencia,0)	= 
		(select coalesce(max(x.nr_sequencia), coalesce(b.nr_sequencia,0)) 
		from 	w_interf_conta_autor x 
		where 	a.nr_interno_conta = x.nr_interno_conta) group by a.nr_interno_conta, 
	 a.nr_seq_protocolo, 
 	 CASE WHEN b.ie_tipo_guia='C' THEN  '02' WHEN b.ie_tipo_guia='A' THEN  '01' WHEN b.ie_tipo_guia='E' THEN  '05'  ELSE ' ' END , 
	 CASE WHEN c.CD_PESSOA_INDIC IS NULL THEN  a.NR_CPF_MEDICO_RESP  ELSE obter_cpf_pessoa_fisica(c.CD_PESSOA_INDIC) END , 
     substr(coalesce(obter_maior_guia_conta(a.nr_interno_conta),b.cd_autorizacao),1,8), 
  	 coalesce(Obter_qtd_remessa_guia(a.nr_atendimento, 
	 b.cd_autorizacao,'Z'),0), 
	 b.nr_seq_registro, 
	 a.nr_doc_convenio, 
	 a.dt_entrada, 
 	 a.cd_usuario_convenio, 
	 somente_numero(coalesce(a.nr_cpf_medico_resp,'0')), 
	 a.ie_tipo_atendimento, 
	 a.cd_cid_principal, 
	 substr(a.nm_paciente,1,25), 
	 substr(a.cd_categoria_convenio,1,1) 

union all
 
/* Complementos de Internacao */
 
SELECT 	11 				TP_REGISTRO, 
	0 				nr_linha, 
  	'11' 				CD_registro, 
  	0 				nr_seq_registro, 
	''				cd_cgc_cpf_prestador, 	 
	0				NR_RELACAO, 
  	a.nr_interno_conta		NR_INTERNO_CONTA, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO, 
  	'' 				tp_documento, 
  	''				nr_documento,  
	0				NR_SEQ_DOCUMENTO, 
	LOCALTIMESTAMP				DT_EMISSAO, 
	''				cd_usuario_convenio, 
	0				cd_cgc_cpf_medico_solic, 
	''				IE_ORIGEM_DOC, 
	''				ie_versao_cid, 
	''				CD_CID, 
  	coalesce(Obter_Data_Fim_Conta_Ant(a.nr_atendimento,a.nr_interno_conta,a.cd_convenio),a.dt_entrada) 
					dt_internacao, 
  	coalesce(a.dt_alta,a.dt_periodo_final) 
					dt_alta, 
  	a.ie_carater_sus 		ie_carater_intern, 
  	CASE WHEN a.dt_alta IS NULL THEN 99  ELSE a.cd_motivo_alta END  
					cd_motivo_alta, 
  	a.ie_clinica			ie_clinica, 
  	0				cd_procedimento, 
	LOCALTIMESTAMP				dt_entrada, 
	LOCALTIMESTAMP				dt_saida, 
  	0 				qt_procedimento, 
	0 				vl_procedimento, 
	''				cd_cgc_cpf_med_exec, 
	0				cd_cgc_cpf_resp_cred, 
	LOCALTIMESTAMP				dt_procedimento, 
	0				cd_atividade_prestador, 
	0				ie_porte_anestesico, 
	LOCALTIMESTAMP				hr_atendimento, 
	''				ie_cirurgia_multipla, 
	0				tx_procedimento, 
	''				ie_pagar_honorario, 
	''				ie_procedimento_uti, 
	0				nr_total_linha, 
	0				vl_total, 
	0				qt_documento,		 
	0				cd_item, 
  	CASE WHEN ie_tipo_nascimento IS NULL THEN '00'  ELSE '0' || ie_tipo_nascimento END  
					ie_tp_nasc, 
  	'000000000000000000000000000000'ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE,  	 
  	' ' 				nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	' ' 				ie_tipo_plano, 
	10 				cd_campo_quebra, 
	' ' 				nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	' '				NR_VERSAO 
from  	w_interf_conta_cab 	a 
where	ie_tipo_atend_real = 1 

union all
 
/* Diarias de Internacao */
 
SELECT 	12 				TP_REGISTRO, 
	0 				nr_linha, 
  	'12' 				CD_registro, 
  	0 				nr_seq_registro, 
	''				cd_cgc_cpf_prestador, 		 
	0				NR_RELACAO, 
  	a.nr_interno_conta		NR_INTERNO_CONTA, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO, 
  	''				tp_documento, 
  	substr(x.nr_doc_convenio,1,8) 	nr_documento, 
 	0				NR_SEQ_DOCUMENTO, 
	LOCALTIMESTAMP				DT_EMISSAO, 
	''				CD_USUARIO_CONVENIO, 
	0				cd_cgc_cpf_medico_solic, 
	''				IE_ORIGEM_DOC, 
	''				ie_versao_cid, 
	''				CD_CID, 
	LOCALTIMESTAMP				DT_INTERNACAO, 
	LOCALTIMESTAMP				DT_ALTA, 
	''				ie_carater_intern, 
	0				CD_MOTIVO_ALTA, 
	0				ie_clinica, 
  	Campo_numerico(a.cd_item_convenio) 
					cd_procedimento, 
	a.dt_entrada_unidade 		dt_entrada, 
  	coalesce(a.dt_saida_unidade,x.dt_periodo_final) 
					dt_saida, 
 	sum(a.qt_item) 			qt_procedimento, 
  	sum(a.vl_total_item) 		vl_procedimento, 
	''				cd_cgc_cpf_med_exec, 
	0				cd_cgc_cpf_resp_cred, 
	LOCALTIMESTAMP				dt_procedimento, 
	0				cd_atividade_prestador, 
	0				ie_porte_anestesico, 
	LOCALTIMESTAMP				hr_atendimento, 
	''				ie_cirurgia_multipla, 
	0				tx_procedimento, 
	''				ie_pagar_honorario, 
	''				ie_procedimento_uti, 
	0				nr_total_linha, 
	0				vl_total, 
	0				qt_documento,		 
	a.cd_item			CD_ITEM, 
	'00'				ie_tp_nasc, 
  	'000000000000000000000000000000'ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE,  	 
  	' ' 				nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	' ' 				ie_tipo_plano, 
  	10 				cd_campo_quebra, 
	obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) 
					nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	' '				NR_VERSAO 
from	w_interf_conta_cab 	x, 
	w_interf_conta_item 	a 
where	a.nr_interno_conta		= x.nr_interno_conta 
and	coalesce(a.ie_total_interf,0)	= 5 
and	ie_tipo_atend_real		= 1 
group by Campo_numerico(a.cd_item_convenio), 
    	 a.nr_interno_conta, 
	 obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) , 
     a.nr_seq_protocolo, 
	 a.cd_item, 
  	 a.dt_entrada_unidade, 
  	 coalesce(a.dt_saida_unidade,x.dt_periodo_final), 
	 substr(x.nr_doc_convenio,1,8) 

union all
 
/* Servicos do Documento */
 
SELECT 	13 				TP_REGISTRO, 
	0 				nr_linha, 
  	'13' 				CD_registro, 
  	0 				nr_seq_registro, 
	''				cd_cgc_cpf_prestador, 			 
	0				NR_RELACAO, 
  	a.nr_interno_conta		NR_INTERNO_CONTA, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO, 
  	''				tp_documento, 
 	substr(x.nr_doc_convenio,1,8) 	nr_documento, 
	0				NR_SEQ_DOCUMENTO, 
	LOCALTIMESTAMP				DT_EMISSAO, 
	''				CD_USUARIO_CONVENIO, 
	0				cd_cgc_cpf_medico_solic, 
	''				IE_ORIGEM_DOC, 
	''				ie_versao_cid, 
	''				CD_CID, 
	LOCALTIMESTAMP				DT_INTERNACAO, 
	LOCALTIMESTAMP				DT_ALTA, 
	''				ie_carater_intern, 
	0				CD_MOTIVO_ALTA, 
	0				ie_clinica,  	 
  	Campo_numerico(a.cd_item_convenio) 
					cd_procedimento, 
  	LOCALTIMESTAMP				DT_ENTRADA, 
  	LOCALTIMESTAMP				DT_SAIDA, 
  	CASE WHEN a.ie_tipo_item=1 THEN sum(a.qt_item)  ELSE 1 END  
					qt_procedimento, 
  	sum(CASE WHEN a.cd_area_proc=1 THEN (a.vl_honorario + a.vl_custo_oper) WHEN a.cd_area_proc=4 THEN (a.vl_honorario + a.vl_custo_oper)  ELSE a.vl_total_item END ) 
					vl_procedimento, 
  	coalesce(a.nr_cpf_executor,a.cd_cgc_hospital) 
					cd_cgc_cpf_med_exec, 
  	somente_numero(coalesce(a.cd_cgc_cpf_resp_cred, a.cd_cgc_hospital)) 
					cd_cgc_cpf_resp_cred, 
  	CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END  
					dt_procedimento, 
  	a.cd_funcao_executor 		cd_atividade_prestador, 
  	a.nr_porte_anestesico 		ie_porte_anestesico, 
  	CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END  
					hr_atendimento, 
  	' '				ie_cirurgia_multipla, 
  	a.pr_funcao_participante * 100 	tx_procedimento, 
  	'N' 				ie_pagar_honorario, 
  	CASE WHEN a.cd_classif_setor='4' THEN 'S'  ELSE 'N' END  
					ie_procedimento_uti, 
	0				nr_total_linha, 
	0				VL_TOTAL, 
	0				QT_DOCUMENTO, 
  	a.cd_item			CD_ITEM, 
	'00'				ie_tp_nasc, 
	'000000000000000000000000000000'ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE,  	 
  	' ' 				nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	' ' 				ie_tipo_plano, 
  	10 				cd_campo_quebra, 
	' ' 				nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	' '				NR_VERSAO 
from	w_interf_conta_cab 	x, 
	w_interf_conta_item 	a 
where	a.nr_interno_conta		= x.nr_interno_conta 
and	coalesce(a.ie_total_interf,0)	<> 5 
and	not(coalesce(a.cd_funcao_executor,0)	in (5,8)) 
group by Campo_numerico(a.cd_item_convenio), 
	 a.nr_interno_conta, 
	 a.nr_seq_protocolo, 
	 obter_cpf_pessoa_fisica(a.CD_MEDICO_REQ) , 
	 coalesce(a.nr_cpf_executor,a.cd_cgc_hospital), 
	 somente_numero(coalesce(a.cd_cgc_cpf_resp_cred, a.cd_cgc_hospital)), 
	 CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END , 
	 a.cd_funcao_executor, 
	 a.nr_porte_anestesico, 
 	 a.pr_via_acesso, 
	 a.pr_funcao_participante, 
	 a.ie_emite_conta, 
	 a.cd_classif_setor, 
	 CASE WHEN a.ie_tipo_item=1 THEN  a.dt_item  ELSE coalesce(x.dt_alta,x.dt_periodo_final) END , 
	 a.cd_item, 
	 a.ie_tipo_item, 
	 substr(x.nr_doc_convenio,1,8) 
having 	 sum(CASE WHEN a.ie_tipo_item=1 THEN  a.qt_item  ELSE a.vl_total_item END ) > 0 

union all
 
/* Total do documento */
 
SELECT 	19 				TP_REGISTRO, 
	0 				nr_linha, 
  	'19' 				CD_registro, 
  	0 				nr_seq_registro, 
	''				cd_cgc_cpf_prestador, 
	0				NR_RELACAO, 
  	a.nr_interno_conta		NR_INTERNO_CONTA, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO, 
  	'' 				tp_documento, 
  	''				nr_documento,  
	0				NR_SEQ_DOCUMENTO, 
	LOCALTIMESTAMP				DT_EMISSAO, 
	''				cd_usuario_convenio, 
	0				cd_cgc_cpf_medico_solic, 
	''				IE_ORIGEM_DOC, 
	''				ie_versao_cid, 
	''				CD_CID, 
  	LOCALTIMESTAMP				DT_INTERNACAO, 
	LOCALTIMESTAMP				DT_ALTA, 
	''				ie_carater_intern, 
	0				CD_MOTIVO_ALTA, 
	0				ie_clinica,  	 
  	0				CD_PROCEDIMENTO, 
	LOCALTIMESTAMP				DT_ENTRADA, 
	LOCALTIMESTAMP				DT_SAIDA, 
	0 				qt_procedimento, 
	0 				vl_procedimento, 
	''				cd_cgc_cpf_med_exec, 
	0				cd_cgc_cpf_resp_cred, 
	LOCALTIMESTAMP				dt_procedimento, 
	0				cd_atividade_prestador, 
	0				ie_porte_anestesico, 
	LOCALTIMESTAMP				hr_atendimento, 
	''				ie_cirurgia_multipla, 
	0				tx_procedimento, 
	''				ie_pagar_honorario, 
	''				ie_procedimento_uti, 
	0				nr_total_linha, 
	sum(CASE WHEN b.cd_area_proc=1 THEN (b.vl_honorario + b.vl_custo_oper) WHEN b.cd_area_proc=4 THEN (b.vl_honorario + b.vl_custo_oper)  ELSE b.vl_total_item END ) 
					vl_total, 
	0				qt_documento,		 
	0				cd_item, 
	'00'				ie_tp_nasc, 
  	'000000000000000000000000000000'ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE,  	  	 
  	' ' 				nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	' ' 				ie_tipo_plano, 
  	10 				cd_campo_quebra, 
	' ' 				nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	' '				NR_VERSAO 
from  	w_interf_conta_item 	b, 
    w_interf_conta_cab 	a 
where 	a.nr_seq_protocolo 	= b.nr_seq_protocolo 
and 	a.nr_interno_conta 	= b.nr_interno_conta 
group by a.nr_interno_conta, 
     a.nr_seq_protocolo 

union all
 
/* Total do arquivo */
 
SELECT 	99 				TP_REGISTRO, 
	0 				nr_linha, 
  	'99' 				tp_registro, 
  	0 				nr_seq_registro, 
	''				cd_cgc_cpf_prestador, 
	0				NR_RELACAO, 
  	9999999999 			nr_interno_conta, 
  	a.nr_seq_protocolo		NR_SEQ_PROTOCOLO,	 
  	'' 				tp_documento, 
  	''				nr_documento,  
	0				NR_SEQ_DOCUMENTO, 
	LOCALTIMESTAMP				DT_EMISSAO, 
	''				cd_usuario_convenio, 
	0				cd_cgc_cpf_medico_solic, 
	''				IE_ORIGEM_DOC, 
	''				ie_versao_cid, 
	''				CD_CID, 
  	LOCALTIMESTAMP				DT_INTERNACAO, 
	LOCALTIMESTAMP				DT_ALTA, 
	''				ie_carater_intern, 
	0				CD_MOTIVO_ALTA, 
	0				ie_clinica,  	 
  	0				CD_PROCEDIMENTO, 
	LOCALTIMESTAMP				DT_ENTRADA, 
	LOCALTIMESTAMP				DT_SAIDA, 
	0 				qt_procedimento, 
	0 				vl_procedimento, 
	''				cd_cgc_cpf_med_exec, 
	0				cd_cgc_cpf_resp_cred, 
	LOCALTIMESTAMP				dt_procedimento, 
	0				cd_atividade_prestador, 
	0				ie_porte_anestesico, 
	LOCALTIMESTAMP				hr_atendimento, 
	''				ie_cirurgia_multipla, 
	0				tx_procedimento, 
	''				ie_pagar_honorario, 
	''				ie_procedimento_uti,	 
	0 				nr_total_linha, 
	sum(CASE WHEN b.cd_area_proc=1 THEN (b.vl_honorario + b.vl_custo_oper) WHEN b.cd_area_proc=4 THEN (b.vl_honorario + b.vl_custo_oper)  ELSE b.vl_total_item END ) 
					vl_total, 
  	a.qt_total_conta 		qt_documento, 
	0				CD_ITEM, 	 
	'00'				ie_tp_nasc, 
  	'000000000000000000000000000000'ds_zeros, 
  	'0000000000000000000000000' 	CAMPO_LIVRE,  	  	 
  	' ' 				nm_usuario_carteirinha, 
  	' ' 				ie_natureza_juridica, 
  	' ' 				ie_tipo_plano, 
  	0 				cd_campo_quebra, 
	' ' 				nr_cpf_solic, 
	'0'				TP_MOVIMENTO, 
	' '				NR_VERSAO 
from  	w_interf_conta_item 	b, 
    w_interf_conta_trailler a 
where 	a.nr_seq_protocolo = b.nr_seq_protocolo 
group by 
	a.nr_seq_protocolo, 
	a.qt_total_conta;

