-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION doc_export_auto_pkg.get_froms (DS_QUERY_P RELATORIO_DINAMICO.DS_SQL%TYPE) RETURNS RELATORIO.DS_SQL%TYPE AS $body$
DECLARE


    DS_FROMS_W RELATORIO.DS_SQL%TYPE;

    C_FROMS CURSOR(DS_QUERY_P RELATORIO_DINAMICO.DS_SQL%TYPE) FOR
      SELECT SUBSTR(DS_QUERY_P,
                    NR_START_FROM,
                    CASE WHEN NR_END_FROM=0 THEN                            LENGTH(DS_QUERY_P) + 1  ELSE NR_END_FROM END  - NR_START_FROM) DS_FROM
        FROM (SELECT NR_START_FROM,
                     REGEXP_INSTR(DS_QUERY_P,
                                 ' select | from | where | group by | order by | connect by ',
                                  NR_START_FROM,
                                  1,
                                  1,
                                  'i') NR_END_FROM
                FROM (WITH RECURSIVE cte AS (
SELECT REGEXP_INSTR(DS_QUERY_P, ' from ', 1, LEVEL, 1, 'i') NR_START_FROM

                     REGEXP_INSTR(DS_QUERY_P, ' from ', 1, LEVEL, 1, 'i') > 0  UNION ALL
SELECT REGEXP_INSTR(DS_QUERY_P, ' from ', 1, LEVEL, 1, 'i') NR_START_FROM
                        
                     REGEXP_INSTR(DS_QUERY_P, ' from ', 1, LEVEL, 1, 'i') > 0 JOIN cte c ON ()

) SELECT * FROM cte;
) alias6) alias7;

     TYPE T_FROMS IS TABLE OF C_FROMS%ROWTYPE;
     R_FROMS T_FROMS;


BEGIN

    DS_FROMS_W := NULL;

    IF (DS_QUERY_P IS NOT NULL AND DS_QUERY_P::text <> '') THEN

      OPEN C_FROMS(DS_QUERY_P);
      LOOP
        FETCH C_FROMS BULK COLLECT INTO R_FROMS LIMIT 100;
        EXIT WHEN R_FROMS.COUNT = 0;

        FOR i IN R_FROMS.FIRST..R_FROMS.LAST LOOP

          DS_FROMS_W := CASE
                          WHEN (DS_FROMS_W IS NOT NULL AND DS_FROMS_W::text <> '')
                          THEN DS_FROMS_W || '";"'
                        END || R_FROMS[i].DS_FROM;

        END LOOP;

      END LOOP;
      CLOSE C_FROMS;

    END IF;

    RETURN DS_FROMS_W;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION doc_export_auto_pkg.get_froms (DS_QUERY_P RELATORIO_DINAMICO.DS_SQL%TYPE) FROM PUBLIC;
