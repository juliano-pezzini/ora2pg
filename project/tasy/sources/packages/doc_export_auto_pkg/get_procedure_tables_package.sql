-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION doc_export_auto_pkg.get_procedure_tables (DS_PROCED_P OBJETO_SISTEMA.NM_OBJETO%TYPE) RETURNS RELATORIO_DINAMICO.DS_SQL%TYPE AS $body$
DECLARE


    DS_TABLES_W RELATORIO_DINAMICO.DS_SQL%TYPE;

    C_PACKAGES CURSOR(DS_PROCED_P RELATORIO.DS_PROCEDURE%TYPE) FOR
      SELECT DISTINCT REFERENCED_NAME DS_PACKAGE
        FROM ALL_DEPENDENCIES
       WHERE OWNER = REFERENCED_OWNER
         AND NAME = UPPER(DS_PROCED_P)
         AND REFERENCED_TYPE IN ('PACKAGE', 'PACKAGE BODY');

    TYPE T_PACKAGES IS TABLE OF C_PACKAGES%ROWTYPE;
    R_PACKAGES T_PACKAGES;

    C_TABLES CURSOR(DS_OBJECT_P OBJETO_SISTEMA.NM_OBJETO%TYPE) FOR
      SELECT A.REFERENCED_NAME DS_TABLE
        FROM ALL_DEPENDENCIES A
       WHERE A.OWNER = A.REFERENCED_OWNER
         AND SUBSTR(A.REFERENCED_NAME, 1, 2) <> 'W_'
         AND A.REFERENCED_TYPE = 'TABLE'
         AND A.NAME = UPPER(DS_OBJECT_P)
         AND EXISTS (SELECT 1
                FROM USER_TAB_COLUMNS C
               WHERE C.TABLE_NAME = A.REFERENCED_NAME
                 AND C.COLUMN_NAME = 'DT_ATUALIZACAO');

    TYPE T_TABLES IS TABLE OF C_TABLES%ROWTYPE;
    R_TABLES T_TABLES;


BEGIN

    DS_TABLES_W := NULL;

    IF (DS_PROCED_P IS NOT NULL AND DS_PROCED_P::text <> '') THEN

      IF doc_export_auto_pkg.get_is_object(trim(both DS_PROCED_P), 'PROCEDURE') = 'S' THEN

        OPEN C_PACKAGES(trim(both DS_PROCED_P));
        LOOP
          FETCH C_PACKAGES BULK COLLECT INTO R_PACKAGES LIMIT 100;
          EXIT WHEN R_PACKAGES.COUNT = 0;

          FOR i IN R_PACKAGES.FIRST..R_PACKAGES.LAST LOOP

            OPEN C_TABLES(R_PACKAGES[i].DS_PACKAGE);
            LOOP
              FETCH C_TABLES BULK COLLECT INTO R_TABLES LIMIT 100;
              EXIT WHEN R_TABLES.COUNT = 0;

              FOR j IN R_TABLES.FIRST..R_TABLES.LAST LOOP

                IF doc_export_auto_pkg.get_is_listed(DS_TABLES_W,
                                 R_TABLES[j].DS_TABLE) = 'N' THEN

                  DS_TABLES_W := CASE
                                   WHEN (DS_TABLES_W IS NOT NULL AND DS_TABLES_W::text <> '')
                                   THEN DS_TABLES_W || ';'
                                 END || R_TABLES[j].DS_TABLE;

                END IF;

              END LOOP;

            END LOOP;
            CLOSE C_TABLES;

          END LOOP;

        END LOOP;
        CLOSE C_PACKAGES;

        OPEN C_TABLES(trim(both DS_PROCED_P));
        LOOP
          FETCH C_TABLES BULK COLLECT INTO R_TABLES LIMIT 100;
          EXIT WHEN R_TABLES.COUNT = 0;

          FOR i IN R_TABLES.FIRST..R_TABLES.LAST LOOP

            IF doc_export_auto_pkg.get_is_listed(DS_TABLES_W,
                             R_TABLES[i].DS_TABLE) = 'N' THEN

              DS_TABLES_W := CASE
                               WHEN (DS_TABLES_W IS NOT NULL AND DS_TABLES_W::text <> '')
                               THEN DS_TABLES_W || ';'
                             END || R_TABLES[i].DS_TABLE;

            END IF;

          END LOOP;

        END LOOP;
        CLOSE C_TABLES;

      END IF;

    END IF;

    RETURN DS_TABLES_W;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION doc_export_auto_pkg.get_procedure_tables (DS_PROCED_P OBJETO_SISTEMA.NM_OBJETO%TYPE) FROM PUBLIC;
