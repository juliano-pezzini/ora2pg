-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION doc_export_auto_pkg.get_query_tables (DS_QUERY_P RELATORIO.DS_SQL%TYPE, DS_TABLES_P RELATORIO_DINAMICO.DS_SQL%TYPE) RETURNS RELATORIO_DINAMICO.DS_SQL%TYPE AS $body$
DECLARE


    DS_TABLES_W RELATORIO_DINAMICO.DS_SQL%TYPE;
    DS_FROMS_W  RELATORIO.DS_SQL%TYPE;

    C_FROMS CURSOR(DS_FROMS_P RELATORIO.DS_SQL%TYPE) FOR
      SELECT COLUMN_VALUE DS_FROM
        FROM TABLE(doc_export_auto_pkg.split_text(DS_FROMS_P, '";"'));

    TYPE T_FROMS IS TABLE OF C_FROMS%ROWTYPE;
    R_FROMS T_FROMS;

    C_OBJS CURSOR(DS_FROM_P RELATORIO.DS_SQL%TYPE) FOR
      SELECT DS_OBJECT, IE_TYPE
        FROM TABLE(doc_export_auto_pkg.get_objects(DS_FROM_P));

    TYPE T_OBJS IS TABLE OF C_OBJS%ROWTYPE;
    R_OBJS T_OBJS;

    C_TABLES CURSOR(DS_OBJ_P RELATORIO_DINAMICO.DS_LABEL%TYPE) FOR
      SELECT REFERENCED_NAME DS_TABLE
        FROM ALL_DEPENDENCIES D
       WHERE OWNER = REFERENCED_OWNER
         AND SUBSTR(REFERENCED_NAME, 1, 2) <> 'W_'
         AND REFERENCED_TYPE = 'TABLE'
         AND NAME = DS_OBJ_P
         AND EXISTS (SELECT 1
                FROM USER_TAB_COLUMNS C
               WHERE C.TABLE_NAME = D.REFERENCED_NAME
                 AND C.COLUMN_NAME = 'DT_ATUALIZACAO');

    TYPE T_TABLES IS TABLE OF C_TABLES%ROWTYPE;
    R_TABLES T_TABLES;


BEGIN

    DS_TABLES_W := DS_TABLES_P;
    DS_FROMS_W := doc_export_auto_pkg.get_froms(doc_export_auto_pkg.linearize_query(DS_QUERY_P));

    IF (DS_FROMS_W IS NOT NULL AND DS_FROMS_W::text <> '') THEN

      OPEN C_FROMS(DS_FROMS_W);
      LOOP
        FETCH C_FROMS BULK COLLECT INTO R_FROMS LIMIT 100;
        EXIT WHEN R_FROMS.COUNT = 0;

        FOR i IN R_FROMS.FIRST..R_FROMS.LAST LOOP

          OPEN C_OBJS(R_FROMS[i].DS_FROM);
          LOOP
            FETCH C_OBJS BULK COLLECT INTO R_OBJS LIMIT 100;
            EXIT WHEN R_OBJS.COUNT = 0;

            FOR j IN R_OBJS.FIRST..R_OBJS.LAST LOOP

              IF R_OBJS[j].IE_TYPE = 'TABLE' THEN

                DS_TABLES_W := CASE
                                 WHEN (DS_TABLES_W IS NOT NULL AND DS_TABLES_W::text <> '')
                                 THEN DS_TABLES_W || ';'
                               END || R_OBJS[j].DS_OBJECT;

              ELSE

                OPEN C_TABLES(R_OBJS[j].DS_OBJECT);
                LOOP
                  FETCH C_TABLES BULK COLLECT INTO R_TABLES LIMIT 100;
                  EXIT WHEN R_TABLES.COUNT = 0;

                  FOR k IN R_TABLES.FIRST..R_TABLES.LAST LOOP

                    IF doc_export_auto_pkg.get_is_listed(DS_TABLES_W,
                                     R_TABLES[k].DS_TABLE) = 'N' THEN

                      DS_TABLES_W := CASE
                                       WHEN (DS_TABLES_W IS NOT NULL AND DS_TABLES_W::text <> '')
                                       THEN DS_TABLES_W || ';'
                                     END || R_TABLES[k].DS_TABLE;

                    END IF;

                  END LOOP;

                END LOOP;
                CLOSE C_TABLES;

              END IF;

            END LOOP;

          END LOOP;
          CLOSE C_OBJS;

        END LOOP;

      END LOOP;
      CLOSE C_FROMS;

    END IF;

    RETURN DS_TABLES_W;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION doc_export_auto_pkg.get_query_tables (DS_QUERY_P RELATORIO.DS_SQL%TYPE, DS_TABLES_P RELATORIO_DINAMICO.DS_SQL%TYPE) FROM PUBLIC;
