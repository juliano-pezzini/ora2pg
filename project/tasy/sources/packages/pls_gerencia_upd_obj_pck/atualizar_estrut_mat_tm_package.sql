-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_upd_obj_pck.atualizar_estrut_mat_tm ( nm_usuario_p usuario.nm_usuario%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_estrutura_p pls_estrutura_material.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Atualizar a estrutura dos materiais na tabela PLS_PRESTADOR_MAT_TM.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [X] Outros:
	
	SOMENTE NA PROCEDURE ATUALIZAR_OBJETO DESTA PACKAGE.
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
------------------------------------------------------------------------------------------------------------------
dlehmkuhl - OS 737347 - 20/05/2014 - Criação da procedure.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_registro_mat_w	integer;
qt_registro_estrut_w	integer;
qt_registro_tot_w	integer;

BEGIN

-- se a estrutura for passada de parametro significa que deve somente ser excluído todos os registros dela
-- essa ação ocorre somente quando o usuário exclui uma estrutura da tabela, por isso só limpamos tudo o que está atrelado a ela
select	count(1)
into STRICT	qt_registro_mat_w
from	pls_controla_estrut_mat
where	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')
and	ie_status	= 'P';

select	count(1)
into STRICT	qt_registro_estrut_w
from	pls_controla_estrut_mat
where	(nr_seq_estrut_mat IS NOT NULL AND nr_seq_estrut_mat::text <> '')
and	ie_status		= 'P';

select	count(1)
into STRICT	qt_registro_tot_w
from	pls_controla_estrut_mat
where	ie_atualizacao_total	= 'S'
and	ie_status		= 'P';

if (qt_registro_estrut_w	> 0) then
	delete 	 from pls_estrutura_material_tm tm
	where	nr_seq_estrutura in (	SELECT nr_seq_estrut_mat
					from	pls_controla_estrut_mat
					where	(nr_seq_estrut_mat IS NOT NULL AND nr_seq_estrut_mat::text <> '')
					and	ie_status		= 'P');
end if;
commit;
if (qt_registro_mat_w	> 0) then
	delete 	 from pls_estrutura_material_tm
	where	nr_seq_material in (	SELECT 	nr_seq_material
					from	pls_controla_estrut_mat
					where	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')
					and	ie_status		= 'P');
end if;
commit;

if (qt_registro_mat_w > 0) then
	-- sempre atualiza pelo material, ou seja, busca todos os materiais que devem ter a estrutura atualizada
	insert 	into pls_estrutura_material_tm tm(
		nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_estrut_mat,
		nr_seq_estrut_superior, nr_seq_estrutura, nr_seq_material
			)
			SELECT 	nextval('pls_estrutura_material_tm_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, c.nr_seq_estrut_mat,
				a.nr_seq_superior, a.nr_sequencia,c.nr_sequencia
			from	pls_estrutura_material a, 
				pls_material c
			where	c.nr_seq_estrut_mat in (WITH RECURSIVE cte AS (
SELECT 	z.nr_sequencia
							from 	pls_estrutura_material z WHERE z.nr_sequencia = a.nr_sequencia
  UNION ALL
SELECT 	z.nr_sequencia
							from 	pls_estrutura_material z JOIN cte c ON (c.prior nr_sequencia = z.z.nr_seq_superior)

) SELECT * FROM cte;
)
			and	c.nr_sequencia 	in (	select 	 e.nr_seq_material
							from	pls_controla_estrut_mat e
							where	(e.nr_seq_material IS NOT NULL AND e.nr_seq_material::text <> '')
							and	e.ie_status		= 'P');
	commit;
end if;

if (qt_registro_tot_w > 0) then
	 insert 	into pls_estrutura_material_tm tm(
		nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_estrut_mat,
		nr_seq_estrut_superior, nr_seq_estrutura, nr_seq_material
			)
			SELECT 		nextval('pls_estrutura_material_tm_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, c.nr_seq_estrut_mat,
				a.nr_seq_superior, a.nr_sequencia,c.nr_sequencia
			from	pls_estrutura_material a, 
				pls_material c
			where	c.nr_seq_estrut_mat in (WITH RECURSIVE cte AS (
SELECT 	z.nr_sequencia
							from 	pls_estrutura_material z WHERE z.nr_sequencia = a.nr_sequencia
  UNION ALL
SELECT 	z.nr_sequencia
							from 	pls_estrutura_material z JOIN cte c ON (c.prior nr_sequencia = z.z.nr_seq_superior)

) SELECT * FROM cte;
);
	commit;
end if;

update	pls_controla_estrut_mat
set	ie_status	= 'A'
where	ie_status	= 'P';

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_upd_obj_pck.atualizar_estrut_mat_tm ( nm_usuario_p usuario.nm_usuario%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_estrutura_p pls_estrutura_material.nr_sequencia%type) FROM PUBLIC;
