-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_upd_obj_pck.atualizar_regra_partic_tm ( nm_usuario_p usuario.nm_usuario%type, nr_seq_regra_p pls_oc_regra_participante.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Atualizar a estrutura de regras de participantes na tabela PLS_GRUPO_PARTIC_TM
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [X] Outros:
	
	SOMENTE NA PROCEDURE ATUALIZAR_OBJETO DESTA PACKAGE.
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
tb_seq_regra		pls_util_cta_pck.t_number_table;
tb_seq_grupo_regra	pls_util_cta_pck.t_number_table;
tb_seq_prestador	pls_util_cta_pck.t_number_table;
tb_seq_grau_partic	pls_util_cta_pck.t_number_table;
tb_ie_gera_ocorrencia	pls_util_cta_pck.t_varchar2_table_1;
nr_indice_w			integer;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
ie_controla_estab_w	pls_controle_estab.ie_ocorrencia%type;

-- regras que devem ser atualizados
c_regra CURSOR(	nr_seq_regra_pc		pls_oc_regra_participante.nr_sequencia%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type,
		ie_controla_estab_pc	pls_controle_estab.ie_ocorrencia%type) FOR
	SELECT	nr_sequencia nr_seq_regra
	from	pls_oc_regra_participante
	where	nr_sequencia = nr_seq_regra_pc
	
union all

	SELECT	nr_sequencia nr_seq_regra
	from	pls_oc_regra_participante
	where	coalesce(nr_seq_regra_pc::text, '') = ''
	and (cd_estabelecimento = cd_estabelecimento_pc or coalesce(cd_estabelecimento_pc::text, '') = '')
	and	ie_controla_estab_pc = 'S'
	
union all

	select	nr_sequencia nr_seq_regra
	from	pls_oc_regra_participante
	where	coalesce(nr_seq_regra_pc::text, '') = ''
	and	ie_controla_estab_pc = 'N';

-- retorna a relação de prestadores e graus de participação da regra em questão
c_partic CURSOR(	nr_seq_regra_pc	pls_oc_regra_participante.nr_sequencia%type) FOR
	SELECT	nr_seq_regra,
		nr_seq_grupo_regra,
		nr_seq_prestador,
		nr_seq_grau_partic,
		ie_gera_ocorrencia
	from 	table(pls_regra_partic_pck.obter_partic_grupo(nr_seq_regra_pc));
BEGIN
ie_controla_estab_w := pls_obter_se_controle_estab('GO');
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

-- se vier o grupo informado, limpa todos os registros da tabela para logo abaixo popular novamente
if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') then
	delete 	from pls_grupo_partic_tm
	where	nr_seq_regra = nr_seq_regra_p;
end if;

tb_seq_regra.delete;
tb_seq_grupo_regra.delete;
tb_seq_prestador.delete;
tb_seq_grau_partic.delete;
tb_ie_gera_ocorrencia.delete;
nr_indice_w := 0;

-- busca a regra ou as regras que devem ser atualizadas
for r_c_regra_w in c_regra(nr_seq_regra_p, cd_estabelecimento_w, ie_controla_estab_w) loop
	
	for r_c_partic_w in c_partic(r_c_regra_w.nr_seq_regra) loop
		
		tb_seq_regra(nr_indice_w) := r_c_partic_w.nr_seq_regra;
		tb_seq_grupo_regra(nr_indice_w) := r_c_partic_w.nr_seq_grupo_regra;
		tb_seq_prestador(nr_indice_w) := r_c_partic_w.nr_seq_prestador;
		tb_seq_grau_partic(nr_indice_w) := r_c_partic_w.nr_seq_grau_partic;
		tb_ie_gera_ocorrencia(nr_indice_w) := r_c_partic_w.ie_gera_ocorrencia;
		
		if (nr_indice_w >= pls_util_pck.qt_registro_transacao_w) then
			-- manda para o banco
			CALL pls_gerencia_upd_obj_pck.grava_regra_partic_tm(	tb_seq_regra, tb_seq_grupo_regra,
						tb_seq_prestador, tb_seq_grau_partic,
						tb_ie_gera_ocorrencia, nm_usuario_p);
			-- reinicializa as variáveis
			tb_seq_regra.delete;
			tb_seq_grupo_regra.delete;
			tb_seq_prestador.delete;
			tb_seq_grau_partic.delete;
			tb_ie_gera_ocorrencia.delete;
			nr_indice_w := 0;
		else
			nr_indice_w := nr_indice_w + 1;
		end if;
	end loop;
end loop;

-- manda para o banco o que sobrou se algo falta ser enviado
CALL pls_gerencia_upd_obj_pck.grava_regra_partic_tm(	tb_seq_regra, tb_seq_grupo_regra,
			tb_seq_prestador, tb_seq_grau_partic,
			tb_ie_gera_ocorrencia, nm_usuario_p);
-- reinicializa as variáveis
tb_seq_regra.delete;
tb_seq_grupo_regra.delete;
tb_seq_prestador.delete;
tb_seq_grau_partic.delete;
tb_ie_gera_ocorrencia.delete;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_upd_obj_pck.atualizar_regra_partic_tm ( nm_usuario_p usuario.nm_usuario%type, nr_seq_regra_p pls_oc_regra_participante.nr_sequencia%type) FROM PUBLIC;
