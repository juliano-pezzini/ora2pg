-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function pls_gerencia_upd_obj_pck.atualizar_objetos() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE pls_gerencia_upd_obj_pck.atualizar_objetos ( nm_usuario_p usuario.nm_usuario%type, ds_atualizacao_fila_p pls_controle_upd_obj.ds_atualizacao_fila%type, nm_objeto_p pls_controle_upd_obj.nm_objeto%type default null) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL pls_gerencia_upd_obj_pck.atualizar_objetos_atx ( ' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(ds_atualizacao_fila_p) || ',' || quote_nullable(nm_objeto_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE pls_gerencia_upd_obj_pck.atualizar_objetos_atx ( nm_usuario_p usuario.nm_usuario%type, ds_atualizacao_fila_p pls_controle_upd_obj.ds_atualizacao_fila%type, nm_objeto_p pls_controle_upd_obj.nm_objeto%type default null) AS $body$
DECLARE
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Atualiza os dados dos objetos que necessitem de atualização.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [X] Outros:
	
	SOMENTE NA JOB RESPONSÁVEL POR VERIFICAR SE TEM OBJETOS PARA SEREM ATUALIZADOS!
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
------------------------------------------------------------------------------------------------------------------
jjung - OS 609316 - 23/12/2013 - Criação da procedure.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
tb_objetos_w		dados_objetos;
qt_registro_w		integer;
ie_sessao_ativa_w	varchar(1);
-- pega apenas os registros que estão ativos a pelo menos quatro hora
c_fila_atualizando CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nm_id_sid,
		a.nm_id_serial
	from	pls_controle_upd_obj a
	where	a.dt_inicio_atualizacao <= (clock_timestamp() - (1/6))
	and	a.ie_status = 'A';

/* pega apenas os registros que estão ativos a menos de 4 horas e mais de uma hora
Caso tiver registro atualizando recentemente e a sessão não estiver mais ativa, então
seta novamente o registro para S, para que tente nova atualização. Isso é para tratar 
alguns casos notados na Unimed São Carlos, de atualizações que iniciavam e sem uma 
explicação clara, eram interrompidas, ficando marcado com status = 'A' sem estar mais 
processando, deixando uma fila de registros esperando para atualizar(até dar o prazo de 
4 horas e cair no cursor que seta o status para Z)
*/
c_fila_atualizacao_recente CURSOR FOR
	SELECT	a.nr_sequencia,
			a.nm_id_sid,
			a.nm_id_serial
	from	pls_controle_upd_obj a
	where	a.dt_inicio_atualizacao >= (clock_timestamp() - (1/6))
	and 	a.dt_inicio_atualizacao <= (clock_timestamp() - (1/24))
	and	a.ie_status = 'A';
	
BEGIN

-- só processa se tiver passado um nome de objeto
if (nm_objeto_p IS NOT NULL AND nm_objeto_p::text <> '') then
	for r_c_fila_atualizando_w in c_fila_atualizando loop
		
		-- verifica se a sessão está ativa
		ie_sessao_ativa_w := pls_util_pck.obter_se_sessao_ativa(r_c_fila_atualizando_w.nm_id_sid,
									r_c_fila_atualizando_w.nm_id_serial);
		
		-- se ficou algum objeto atualizando e a sessão não está mais ativa,
		-- significa que o mesmo ficou perdido no espaço e sendo assim não precisa ser considerado
		-- por isso é setado esse status para liberar a execução de novas alterações
		if (ie_sessao_ativa_w = 'N') then
			update 	pls_controle_upd_obj set
				ie_status = 'Z'
			where 	nr_sequencia = r_c_fila_atualizando_w.nr_sequencia
			and	ie_status = 'A';
		end if;
	end loop;
	commit;

	for r_c_fila_atualizacao_recente_w in c_fila_atualizacao_recente loop
		
		-- verifica se a sessão está ativa
		ie_sessao_ativa_w := pls_util_pck.obter_se_sessao_ativa(r_c_fila_atualizacao_recente_w.nm_id_sid,
									r_c_fila_atualizacao_recente_w.nm_id_serial);
		
		-- se ficou algum objeto atualizando e a sessão não está mais ativa,
		-- significa que o mesmo ficou perdido no espaço e sendo assim não precisa ser considerado
		-- por isso é setado esse status para liberar a execução de novas alterações
		if (ie_sessao_ativa_w = 'N') then
			update 	pls_controle_upd_obj set
					ie_status = 'S'
			where 	nr_sequencia = r_c_fila_atualizacao_recente_w.nr_sequencia
			and	ie_status = 'A';
		end if;
	end loop;
	commit;
	
	--Edson - Adicionada restrição pelo nome do objeto para que seja possível atualizar mais de uma tabela simultaneamente. Ex.: PLS_ESTRUTURA_MATERIAL_TM e PLS_GRUPO_MATERIAL_TM
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_controle_upd_obj a
	where	a.dt_inicio_atualizacao >= (clock_timestamp() - (1/6))
	and	a.ie_status = 'A'
	and	a.nm_objeto = nm_objeto_p;

	-- se já estiver atualizando não faz nada
	if (qt_registro_w = 0) then

		-- Obter a lista de objetos que deve ser atualizada.
		tb_objetos_w := pls_gerencia_upd_obj_pck.get_objetos_atualizar(nm_objeto_p);
			
		-- Só processar algo se tiver retornado pelo menos um objeto.
		if (tb_objetos_w.nr_sequencia.count > 0) then

			-- Para cada objeto que entrar em modo de atualizacao será atualizado seu status no banco,  a estrutura será atualizada e o objeto será então marcado como atualizado.
			for	i in tb_objetos_w.nr_sequencia.first .. tb_objetos_w.nr_sequencia.last loop
			
				-- Contar para verificar se o objeto já não foi atualizado por outra sessão (via script por exemplo)
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_controle_upd_obj
				where	ie_status 	= 'A'
				and	nm_objeto 	= nm_objeto_p;
				
				-- se ele ainda não estiver sendo atualizado manda atualizar
				if (qt_registro_w = 0) or (nm_objeto_p = 'PLS_ESTRUTURA_MATERIAL_TM')	then
				
					-- Marcar como Em atualização.
					
					CALL pls_gerencia_upd_obj_pck.set_status_objetos(tb_objetos_w.nr_sequencia(i), 'A', ds_atualizacao_fila_p, nm_usuario_p);
					commit;
					
					if (tb_objetos_w.nm_objeto(i) ='PLS_ESTRUTURA_MATERIAL_TM' ) then
						CALL pls_gerencia_upd_obj_pck.insere_estrutura_material(tb_objetos_w.nr_sequencia(i),nm_usuario_p,tb_objetos_w.ds_parametro(i) );
					else
						-- Atualizar o objeto.
						CALL pls_gerencia_upd_obj_pck.atualizar_objeto(	tb_objetos_w.nm_objeto(i), nm_usuario_p,
									tb_objetos_w.ds_parametro(i));
						commit;
						
						-- Marcar como atualizado.
						CALL pls_gerencia_upd_obj_pck.set_status_objetos(tb_objetos_w.nr_sequencia(i), 'N', null, nm_usuario_p);
						commit;
					end if;
				end if;
			end loop;
			
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_controla_estrut_mat
			where	ie_status	= 'P';
			
			if (qt_registro_w	> 0) then
				CALL pls_gerencia_upd_obj_pck.atualizar_estrut_mat_tm(	nm_usuario_p, null,
								null);
								
				update  pls_controle_upd_obj
				set nm_usuario = nm_usuario_p,
				  dt_atualizacao = clock_timestamp(),
				  ie_status = 'N',
				  dt_fim_atualizacao = clock_timestamp(),
				  ds_tempo_execucao = pls_manipulacao_datas_pck.obter_tempo_execucao_format(dt_inicio_atualizacao, clock_timestamp())
				where ie_status = 'A'
				and nm_objeto = nm_objeto_p;
				commit;

			end if;
		end if;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_upd_obj_pck.atualizar_objetos ( nm_usuario_p usuario.nm_usuario%type, ds_atualizacao_fila_p pls_controle_upd_obj.ds_atualizacao_fila%type, nm_objeto_p pls_controle_upd_obj.nm_objeto%type default null) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE pls_gerencia_upd_obj_pck.atualizar_objetos_atx ( nm_usuario_p usuario.nm_usuario%type, ds_atualizacao_fila_p pls_controle_upd_obj.ds_atualizacao_fila%type, nm_objeto_p pls_controle_upd_obj.nm_objeto%type default null) FROM PUBLIC;
