-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_upd_obj_pck.atualizar_objeto ( nm_objeto_p pls_controle_upd_obj.nm_objeto%type, nm_usuario_p usuario.nm_usuario%type, ds_parametro_p pls_controle_upd_obj.ds_parametros%type default null) AS $body$
DECLARE

				
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Será a responsável por definir qual procedure ou processo deve ser executado para atualizar o objeto em questão.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [X] Outros:
	
	SOMENTE NA JOB RESPONSÁVEL POR VERIFICAR SE TEM OBJETOS PARA SEREM ATUALIZADOS!
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Nesta procedure só deve conter o CASE e chamadas para outros objetos, favor não implementar a regra do
seu objeto nesta procedure.

Alterações:
------------------------------------------------------------------------------------------------------------------
jjung - OS 609316 - 23/12/2013 - Criação da procedure.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_param_w		varchar(500);

nr_seq_estrutura_w		pls_estrutura_material.nr_sequencia%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_combinacao_w		pls_combinacao_item_cta.nr_sequencia%type;
nr_seq_grupo_servico_w		pls_preco_grupo_servico.nr_sequencia%type;
nr_seq_regra_partic_w		pls_oc_regra_participante.nr_sequencia%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_ocor_estrut_item_w	pls_ocorrencia_estrut_item.nr_sequencia%type;
nr_seq_ocor_estrut_w		pls_ocorrencia_estrutura.nr_sequencia%type;
nr_seq_grupo_material_w		pls_preco_grupo_material.nr_sequencia%type;

c_materiais CURSOR(	nr_seq_material_pc	pls_material.nr_sequencia%type) FOR
	SELECT 	nr_seq_estrutura
	from	pls_ocorrencia_estrutura_v
	where	nr_seq_material = nr_seq_material_pc;

c_procedimentos CURSOR(	cd_procedimento_pc	procedimento.cd_procedimento%type,
				ie_origem_proced_pc	procedimento.ie_origem_proced%type) FOR
	SELECT 	nr_seq_estrutura
	from	pls_ocorrencia_estrutura_v
	where	cd_procedimento = cd_procedimento_pc
	and	ie_origem_proced = ie_origem_proced_pc;
	
c_estruturas_materiais CURSOR( nr_seq_estrutura_pc pls_estrutura_material.nr_sequencia%type) FOR
	SELECT	distinct nr_seq_estrutura
	from	pls_ocorrencia_estrut_item
	where	nr_seq_estrut_mat = nr_seq_estrutura_pc;
	
c_toda_estrut CURSOR FOR
	SELECT	nr_sequencia
	from	pls_ocorrencia_estrutura
	where	ie_situacao = 'A';
BEGIN

-- Só deve fazer algo se o nome do objeto for válido.
if (nm_objeto_p IS NOT NULL AND nm_objeto_p::text <> '') then

	-- Verificar o nome do objeto passado.
	case	upper(nm_objeto_p)
		
		-- Materiais que estão habilitados para o prestador
		when 'PLS_PRESTADOR_MAT_TM' then
			begin
				-- as rotinas estão prontas, só foi comentado porque essa tabela não é mais utilizada
				-- antigamente tínhamos a PLS_PRESTADOR_MAT_TM que foi uma tentativa de melhoria de performance inicialmente na validação 30 (pls_oc_cta_tratar_val_30)
				-- como a ação não foi muito eficaz, descemos mais um nível e trabalhamos apenas com a leitura da estrututa de materiais (PLS_ESTRUTURA_MATERIAL_TM), o grande gargalo de tudo.
				--pls_gerencia_upd_obj_pck.atualizar_prest_mat_tm(nm_usuario_p);
				null;
			end;
		-- Simultâneo e concorrente
		when 'PLS_COMBINACAO_ITEM_TM' then
			begin
				nr_seq_combinacao_w := null;
				--nr_seq_combinacao_p=18,
				for r_c_param_w in current_setting('pls_gerencia_upd_obj_pck.c_param')::CURSOR((ds_parametro_p) loop
					--nr_seq_combinacao_p=18
					for r_c_param_valor_w in current_setting('pls_gerencia_upd_obj_pck.c_param_valor')::CURSOR((r_c_param_w.ds_valor_vchr2) loop

						case(ds_param_w)
							when 'nr_seq_combinacao_p' then
								nr_seq_combinacao_w := r_c_param_valor_w.nr_valor_number;
							else
								null;
						end case;

						ds_param_w := r_c_param_valor_w.ds_valor_vchr2;
					end loop;
				end loop;
				-- chama a rotina de atualização				
				CALL pls_simult_concor_pck.atu_pls_combinacao_item_tm(nr_seq_combinacao_w, nm_usuario_p);
			end;
		-- grupos de serviço
		when 'PLS_GRUPO_SERVICO_TM' then
			begin
				--acao=somente_excluir,nr_seq_grupo_p=24
				for r_c_param_w in current_setting('pls_gerencia_upd_obj_pck.c_param')::CURSOR((ds_parametro_p) loop
					--acao=somente_excluir
					for r_c_param_valor_w in current_setting('pls_gerencia_upd_obj_pck.c_param_valor')::CURSOR((r_c_param_w.ds_valor_vchr2) loop

						case(ds_param_w)
							when 'nr_seq_grupo_p' then
								nr_seq_grupo_servico_w := r_c_param_valor_w.nr_valor_number;
							else
								null;
						end case;

						ds_param_w := r_c_param_valor_w.ds_valor_vchr2;
					end loop;
				end loop;
				-- chama a rotina de atualização
				CALL pls_gerencia_upd_obj_pck.atualizar_grupo_servico_tm(	nm_usuario_p, nr_seq_grupo_servico_w);
			end;
		-- regras de participantes
		when 'PLS_GRUPO_PARTIC_TM' then
			begin
				--nr_seq_regra_p=21,
				for r_c_param_w in current_setting('pls_gerencia_upd_obj_pck.c_param')::CURSOR((ds_parametro_p) loop
					--nr_seq_regra_p=21
					for r_c_param_valor_w in current_setting('pls_gerencia_upd_obj_pck.c_param_valor')::CURSOR((r_c_param_w.ds_valor_vchr2) loop

						case(ds_param_w)
							when 'nr_seq_regra_p' then
								nr_seq_regra_partic_w := r_c_param_valor_w.nr_valor_number;
							else
								null;
						end case;

						ds_param_w := r_c_param_valor_w.ds_valor_vchr2;
					end loop;
				end loop;
				-- chama a rotina de atualização
				CALL pls_gerencia_upd_obj_pck.atualizar_regra_partic_tm(	nm_usuario_p, nr_seq_regra_partic_w);
			end;
		when 'PLS_ESTRUTURA_OCOR_TM' then
			begin			
				for r_c_param_w in current_setting('pls_gerencia_upd_obj_pck.c_param')::CURSOR((ds_parametro_p) loop

					for r_c_param_valor_w in current_setting('pls_gerencia_upd_obj_pck.c_param_valor')::CURSOR((r_c_param_w.ds_valor_vchr2) loop

						case(ds_param_w)
							when 'nr_seq_material_p' then
								nr_seq_material_w := r_c_param_valor_w.nr_valor_number;
							when 'cd_procedimento_p' then
								cd_procedimento_w := r_c_param_valor_w.nr_valor_number;
							when 'ie_origem_proced_p' then
								ie_origem_proced_w := r_c_param_valor_w.nr_valor_number;
							--Estrutura de material
							when 'nr_seq_estrutura_p' then
								nr_seq_estrutura_w := r_c_param_valor_w.nr_valor_number;		
							--Estrutura de ocorrência
							when 'nr_seq_ocor_estrut_p' then
								nr_seq_ocor_estrut_w := r_c_param_valor_w.nr_valor_number;					
							else
								null;
						end case;

						ds_param_w := r_c_param_valor_w.ds_valor_vchr2;
					end loop;
				end loop;
				
				-- se não foi passado nada de parâmetro busca todas as estruturas e atualiza
				if (coalesce(nr_seq_material_w::text, '') = '' and
					 coalesce(cd_procedimento_w::text, '') = '' and 
					 coalesce(nr_seq_estrutura_w::text, '') = '' and
					 coalesce(nr_seq_ocor_estrut_w::text, '') = '') then
					
					-- busca todas as estruturas caso não tenha 
					for r_c_toda_estrut_w in c_toda_estrut loop
						CALL pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm( nm_usuario_p, r_c_toda_estrut_w.nr_sequencia);
					end loop;
				else
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						--Busca as estruturas onde o material pode estar presente.
						for r_c_materiais in c_materiais(nr_seq_material_w) loop
							CALL pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm( nm_usuario_p, r_c_materiais.nr_seq_estrutura);
						end loop;
					end if;
						
					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
						--Busca as estruturas de ocorrência onde o procedimento pode estar contido.
						for r_c_procedimentos in c_procedimentos(cd_procedimento_w, ie_origem_proced_w) loop
							CALL pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm( nm_usuario_p, r_c_procedimentos.nr_seq_estrutura);
						end loop;
					end if;
					
					if (nr_seq_estrutura_w IS NOT NULL AND nr_seq_estrutura_w::text <> '') then
						--Estrutuda de materiais
						for r_c_estruturas_materiais in c_estruturas_materiais(nr_seq_estrutura_w) loop
							CALL pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm( nm_usuario_p, r_c_estruturas_materiais.nr_seq_estrutura);
						end loop;
					end if;
					
					if (nr_seq_ocor_estrut_w IS NOT NULL AND nr_seq_ocor_estrut_w::text <> '') then
						CALL pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm( nm_usuario_p, nr_seq_ocor_estrut_w);
					end if;
				end if;
			end;
		-- grupos de materiais
		when 'PLS_GRUPO_MATERIAL_TM' then
			begin
				--acao=somente_excluir,nr_seq_grupo_p=24
				for r_c_param_w in current_setting('pls_gerencia_upd_obj_pck.c_param')::CURSOR((ds_parametro_p) loop
					--acao=somente_excluir
					for r_c_param_valor_w in current_setting('pls_gerencia_upd_obj_pck.c_param_valor')::CURSOR((r_c_param_w.ds_valor_vchr2) loop

						case(ds_param_w)
							when 'nr_seq_grupo_p' then
								nr_seq_grupo_material_w := r_c_param_valor_w.nr_valor_number;
							else
								null;
						end case;

						ds_param_w := r_c_param_valor_w.ds_valor_vchr2;
					end loop;
				end loop;
				-- chama a rotina de atualização
				CALL pls_gerencia_upd_obj_pck.atualizar_grupo_material_tm(	nm_usuario_p, nr_seq_grupo_material_w);
			end;
		else
			null;	
	end case;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_upd_obj_pck.atualizar_objeto ( nm_objeto_p pls_controle_upd_obj.nm_objeto%type, nm_usuario_p usuario.nm_usuario%type, ds_parametro_p pls_controle_upd_obj.ds_parametros%type default null) FROM PUBLIC;
