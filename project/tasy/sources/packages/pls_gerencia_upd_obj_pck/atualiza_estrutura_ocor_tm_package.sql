-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm ( nm_usuario_p usuario.nm_usuario%type, nr_seq_ocor_estrut_p pls_ocorrencia_estrutura.nr_sequencia%type) AS $body$
DECLARE


nr_seq_estrutura_w	pls_ocorrencia_estrutura.nr_sequencia%type;
tb_cd_procedimento_w	pls_util_cta_pck.t_number_table;
tb_ie_origem_proced_w	pls_util_cta_pck.t_number_table;
tb_seq_material_w	pls_util_cta_pck.t_number_table;
tb_estrutura_ocor_w	pls_util_cta_pck.t_number_table;
nr_indice_w		integer;
dt_atualizacao_upd_w	timestamp	:= null;
dt_atualizacao_tm_w		timestamp	:= null;
ie_atualiza_strut_w		varchar(1)	:= null;

--Materiais e procedimentos da estrutura	
c_estrut_ocorrencia CURSOR(	nr_seq_estrut_ocor_pc	pls_ocorrencia_estrutura.nr_sequencia%type) FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_material
	from 	table(pls_grupos_pck.obter_itens_estrut_ocor(nr_seq_estrut_ocor_pc, null, null, null));
					
BEGIN

select 	max(dt_atualizacao_nrec)
into STRICT	dt_atualizacao_upd_w
from	pls_controle_upd_obj
where	nm_objeto = 'PLS_ESTRUTURA_OCOR_TM';

select 	max(dt_atualizacao)
into STRICT	dt_atualizacao_tm_w
from	pls_estrutura_ocor_tm
where	nr_seq_estrutura = nr_seq_ocor_estrut_p;

if (dt_atualizacao_upd_w > dt_atualizacao_tm_w) or (coalesce(dt_atualizacao_tm_w::text, '') = '') then
		ie_atualiza_strut_w := 'S';
end if;

if (ie_atualiza_strut_w	= 'S') then
	EXECUTE 'ALTER INDEX PESOCTM_I1 NOLOGGING';

	EXECUTE 'ALTER INDEX PESOCTM_I2 NOLOGGING';

-- se vier o grupo informado, limpa todos os registros da tabela para logo abaixo popular novamente
	if (nr_seq_ocor_estrut_p IS NOT NULL AND nr_seq_ocor_estrut_p::text <> '') then
		delete  /*+ PARALLEL(tm,5) */ from pls_estrutura_ocor_tm tm
		where	nr_seq_estrutura = nr_seq_ocor_estrut_p;
	end if;

	--Limpa as tabelas e indexador
	tb_cd_procedimento_w.delete;	
	tb_ie_origem_proced_w.delete;	
	tb_seq_material_w.delete;
	tb_estrutura_ocor_w.delete;		
	nr_indice_w := 0;
	commit;	
	for r_estrut_ocorrencia in c_estrut_ocorrencia(nr_seq_ocor_estrut_p) loop

		tb_cd_procedimento_w(nr_indice_w)	:= r_estrut_ocorrencia.cd_procedimento;
		tb_ie_origem_proced_w(nr_indice_w)	:= r_estrut_ocorrencia.ie_origem_proced;
		tb_seq_material_w(nr_indice_w)		:= r_estrut_ocorrencia.nr_seq_material;
		tb_estrutura_ocor_w(nr_indice_w) 	:= nr_seq_ocor_estrut_p;

		if (nr_indice_w >= 7000) then
			-- manda para o banco
			CALL pls_gerencia_upd_obj_pck.grava_estrutura_ocor_tm( tb_estrutura_ocor_w, tb_seq_material_w, tb_cd_procedimento_w, tb_ie_origem_proced_w, nm_usuario_p);
			-- reinicializa as variáveis
			tb_estrutura_ocor_w.delete;
			tb_cd_procedimento_w.delete;
			tb_ie_origem_proced_w.delete;
			tb_seq_material_w.delete;
			nr_indice_w := 0;
		else
			nr_indice_w := nr_indice_w + 1;
		end if;
		
	end loop;
		
	-- manda para o banco a possível sobra nas tabelas.
	CALL pls_gerencia_upd_obj_pck.grava_estrutura_ocor_tm( tb_estrutura_ocor_w, tb_seq_material_w, tb_cd_procedimento_w, tb_ie_origem_proced_w, nm_usuario_p);
	-- reinicializa as variáveis
	tb_estrutura_ocor_w.delete;
	tb_cd_procedimento_w.delete;
	tb_ie_origem_proced_w.delete;
	tb_seq_material_w.delete;
	nr_indice_w := 0;
	
	EXECUTE 'ALTER INDEX PESOCTM_I1 LOGGING';

	EXECUTE 'ALTER INDEX PESOCTM_I2 LOGGING';
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_upd_obj_pck.atualiza_estrutura_ocor_tm ( nm_usuario_p usuario.nm_usuario%type, nr_seq_ocor_estrut_p pls_ocorrencia_estrutura.nr_sequencia%type) FROM PUBLIC;
