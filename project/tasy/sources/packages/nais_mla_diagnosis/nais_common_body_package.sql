-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_mla_diagnosis.nais_common_body ( parameter_id_p bigint, transaction_type_p bigint, parameter_sequencia_p bigint ) AS $body$
DECLARE


    patient_type_classification   bigint :=0;
       r_acct_w nais_conversion_master%rowtype;
       department_code               varchar(5);
      encounter_w      diagnostico_doenca.nr_atendimento%type;
	  ds_conversion_error_log      varchar(1000);
       nr_seq_int_call_log_w  bigint :=0;
       column_name_w         varchar(30);
       table_name_w          varchar(30);
       tasy_code_w           varchar(30);
        c02 CURSOR FOR
        SELECT
            d.cd_especialidade_med                                           department_especialidade_code,
            d.cd_departamento_med                                            department_medico_code,
            coalesce(to_char(dt_inicio, 'YYYYMMDD'), '00000000')                  disease_name_start_date,
           CASE WHEN coalesce(ie_classificacao_doenca, 'N')='P' THEN '1' WHEN coalesce(ie_classificacao_doenca, 'N')='S' THEN '0' WHEN coalesce(ie_classificacao_doenca, 'N')='N' THEN ' ' END  main_disease_name_class,
            '0'                                                              specific_disease_flag,
            '0'                                                              insurance_classification,
            CASE WHEN coalesce(ie_tipo_diagnostico,9) =1 THEN '1' WHEN coalesce(ie_tipo_diagnostico,9) =2 THEN '0' WHEN coalesce(ie_tipo_diagnostico,9) =9 THEN ' ' END             suspicion_flag,
            ' '                                                              blank,
            '000000'                                                         flag_information_table,
            ' '                                                              outcome_classification,
            00000000                                                         outcome_date
        from
            diagnostico_doenca     d
        where
             d.nr_seq_interno = parameter_id_p;

        c03 CURSOR FOR
        SELECT
            CASE WHEN coalesce(ie_tipo_diagnostico,9) =1 THEN '0' WHEN coalesce(ie_tipo_diagnostico,9) =2 THEN '1' WHEN coalesce(ie_tipo_diagnostico,9) =9 THEN ' ' END                suspicion_flag_hist,
            CASE WHEN coalesce(ie_classificacao_doenca, 'N')='P' THEN '1' WHEN coalesce(ie_classificacao_doenca, 'N')='S' THEN '0' WHEN coalesce(ie_classificacao_doenca, 'N')='N' THEN ' ' END    main_disease_name_class_hist,
            CASE WHEN ie_status='1' THEN 1 WHEN ie_status='5' THEN 5 WHEN ie_status='7' THEN 7 WHEN ie_status='9' THEN 9  ELSE 0 END                         outcome_classification,
            to_char(dt_disease_end,  'YYYYMMDD')                                outcome_date
        from
            diagnostico_doenca_hist
        where
            nr_seq_interno = parameter_id_p and nr_sequencia = parameter_sequencia_p;
        r_c03 c03%rowtype;

    
BEGIN
        for r_c02 in c02 loop
            begin
                
                  select max(nr_atendimento) 
                   into STRICT encounter_w
                   from diagnostico_doenca
                   where
                    nr_seq_interno = parameter_id_p;

                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(transaction_type_p, 1, 'L', ' ');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(coalesce(obter_prontuario_atendimento(encounter_w),0), 10, 'L', '0');
				
                if coalesce(r_c02.department_especialidade_code::text, '') = ''  and coalesce(r_c02.department_medico_code::text, '') = '' then
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text('000', 3, 'R', '0');
                else

                      if  (r_c02.department_especialidade_code IS NOT NULL AND r_c02.department_especialidade_code::text <> '') then 
                           r_acct_w :=get_medicalaffair_code('OS', 'ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', r_c02.department_especialidade_code);
						   table_name_w :='ESPECIALIDADE_MEDICA';
                           column_name_w :='CD_ESPECIALIDADE';
                           tasy_code_w :=r_c02.department_especialidade_code;
                      end if;
					
                      if (r_c02.department_medico_code IS NOT NULL AND r_c02.department_medico_code::text <> '') then 
                           r_acct_w :=get_medicalaffair_code('OS', 'DEPARTAMENTO_MEDICO', 'CD_DEPARTAMENTO', r_c02.department_medico_code);
						    table_name_w :='DEPARTAMENTO_MEDICO';
                             column_name_w :='CD_DEPARTAMENTO';
                             tasy_code_w :=r_c02.department_medico_code;

                      end if;

                    if (r_acct_w.cd_medical_affair IS NOT NULL AND r_acct_w.cd_medical_affair::text <> '') then 
					
						if  regexp_like(r_acct_w.cd_medical_affair , '^-\d+') and r_acct_w.cd_medical_affair in ( '-1','-2','-3','-4','-5','-6') then 
                            
                            
                            ds_conversion_error_log :=                    
                                    '{  
                                        "error_type" :"CE",
                                        "table_name" : "'||table_name_w||'",
                                        "attribute_name" :"'||column_name_w||'",
                                        "Order_type" : null,
                                        "tasy_code" :"' || tasy_code_w || '",
                                        "patient_id" : "'||coalesce(obter_prontuario_atendimento(encounter_w),0)||'",
                                       "cd_error_detail" : "'||r_acct_w.cd_medical_affair||'",
                                        "Order_class" : "BO",
                                        "Order_number" :"'|| parameter_id_p ||'",
                                        "execution_date" :null,
                                        "dt_consulatation" :null
                                    }';

                                    
                            
                            record_integration_call_log(coalesce(wheb_usuario_pck.get_nm_usuario,'NAIS'), 'NAIS', clock_timestamp(), 260, 'nais.mla.medicaldisease' , 
                            'E', 'E', null, 'KK', null,null, 'nais.mla.medicaldisease',nr_seq_int_call_log_w, parameter_id_p, 944,null,252,'CE',ds_conversion_error_log);
                        
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text('000', 3, 'R', ' ');
                        end if;
						
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_acct_w.cd_medical_affair, 3, 'R', ' ');
                    else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text('000', 3, 'R', ' ');
                    end if;
                end if;

                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.disease_name_start_date, 8, 'L', ' ');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(parameter_id_p, 8, 'L', '0');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(patient_type_classification, 1, 'L', '0');
                open c03;
                loop
                    fetch c03 into r_c03;
                    if c03%notfound then
                        if c03%rowcount = 0 then
                            CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.main_disease_name_class, 1, 'L', ' ');
                            CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.suspicion_flag, 1, 'L', ' ');
                        end if;

                    else
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c03.main_disease_name_class_hist, 1, 'L', ' ');
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c03.suspicion_flag_hist, 1, 'L', '0');
                    end if;

                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.specific_disease_flag, 1, 'L', '0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.insurance_classification, 1, 'L', '0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.flag_information_table, 6, 'L', '0');

                    
                    if c03%rowcount = 0 then
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.outcome_classification, 1, 'L', '0');
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c02.outcome_date, 8, 'L', '0');

                    else
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c03.outcome_classification, 1, 'L', '0');
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_mla_diagnosis.append_text(r_c03.outcome_date, 8, 'L', '0');

                    end if;
                  exit;
                end loop;

                close c03;


            end;
        end loop;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_mla_diagnosis.nais_common_body ( parameter_id_p bigint, transaction_type_p bigint, parameter_sequencia_p bigint ) FROM PUBLIC;
