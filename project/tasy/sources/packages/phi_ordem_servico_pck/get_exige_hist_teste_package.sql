-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/* ################ End get_ds_owner_funcao		##################### */

/* ################ Start get_exige_hist_teste		##################### */

CREATE OR REPLACE FUNCTION phi_ordem_servico_pck.get_exige_hist_teste ( nr_seq_ordem_serv_p man_ordem_servico.nr_sequencia%type, ie_tipo_teste_p text, ie_trigger_p text default 'N', ie_plataforma_p man_ordem_servico.ie_plataforma%type default null) RETURNS varchar AS $body$
DECLARE

	
	dt_referencia_w			man_ordem_serv_ativ.dt_atividade%type;
	dt_liberacao_hist_w		man_ordem_serv_tecnico.dt_liberacao%type;
	ds_sql_w			varchar(4000);
	ie_exige_teste_w		varchar(1) := 'N';
	ie_plataforma_w			varchar(1) := ie_plataforma_p;
	dt_alteracao_prod_w		timestamp;

	flow_deviation_exception	exception;
	
	
BEGIN

	if (phi_is_base_philips = 'S') then
		begin
	
		select	max(mosa.dt_atividade)
		into STRICT	dt_referencia_w
		from	man_ordem_serv_ativ mosa
		where	mosa.nr_seq_ordem_serv = nr_seq_ordem_serv_p
		and	mosa.nr_seq_funcao in (11, 551, 1288); --Programming
		/* Gets the last release date for a test history in the
		service order */
		dt_liberacao_hist_w := phi_ordem_servico_pck.get_last_test_hist_date(nr_seq_ordem_serv_p, ie_tipo_teste_p);

		if (dt_referencia_w IS NOT NULL AND dt_referencia_w::text <> '') then
			begin
			
			if (ie_tipo_teste_p = 'A') then
				dt_referencia_w := greatest(dt_referencia_w, coalesce(phi_ordem_servico_pck.get_last_test_hist_date(nr_seq_ordem_serv_p, 'P'), dt_referencia_w));
			end if;
			
			if (dt_referencia_w > coalesce(dt_liberacao_hist_w, dt_referencia_w - 1)) then
				raise flow_deviation_exception;
			end if;
			end;
		end if;

		if (coalesce(ie_trigger_p, 'N') = 'N') then
			select	max(mos.ie_plataforma)
			into STRICT	ie_plataforma_w
			from	man_ordem_servico mos
			where	mos.nr_sequencia = nr_seq_ordem_serv_p;
		end if;

		begin
		/* Get the date of the last changes in the service order */

		ds_sql_w := substr('select max(decode(ie_tipo , 3, cbs.dt_alteracao, 4, cbs.dt_alteracao, trunc(cbs.dt_alteracao, ''dd'')))
				    from table(phi_so_changes_pck.get_changes(:nr_seq_ordem_serv_p, :ie_trigger_p, :ie_plataforma_p)) cbs 
				    where ie_tipo not in (2,5)', 1, 4000);
		EXECUTE ds_sql_w
		into STRICT	dt_alteracao_prod_w
		using	nr_seq_ordem_serv_p,
			ie_trigger_p,
			ie_plataforma_w;
		exception
		when others then
			dt_alteracao_prod_w := null;
		end;
		
		if (dt_alteracao_prod_w IS NOT NULL AND dt_alteracao_prod_w::text <> '') then
			begin
			if (ie_tipo_teste_p = 'A') then
				dt_alteracao_prod_w := greatest(dt_alteracao_prod_w, coalesce(phi_ordem_servico_pck.get_last_test_hist_date(nr_seq_ordem_serv_p, 'P'), dt_alteracao_prod_w));
			end if;
		
			/* Deviate the flow for the end of the source */

			if (dt_alteracao_prod_w > coalesce(dt_liberacao_hist_w, dt_alteracao_prod_w - 1)) then
				raise flow_deviation_exception;
			end if;
			end;
		end if;
		
		exception
		when flow_deviation_exception then
			ie_exige_teste_w := 'S';
		when others then
			ie_exige_teste_w := 'N';
		end;
	end if;
	
	return ie_exige_teste_w;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION phi_ordem_servico_pck.get_exige_hist_teste ( nr_seq_ordem_serv_p man_ordem_servico.nr_sequencia%type, ie_tipo_teste_p text, ie_trigger_p text default 'N', ie_plataforma_p man_ordem_servico.ie_plataforma%type default null) FROM PUBLIC;
