-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_filtro_regra_preco_cta_pck.atualiza_regra_filtro ( ie_destino_regra_p text, ie_tipo_filtro_p text, tb_seq_conta_p INOUT pls_util_cta_pck.t_number_table, tb_seq_conta_proc_p INOUT pls_util_cta_pck.t_number_table, tb_seq_conta_mat_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_partic_p INOUT pls_util_cta_pck.t_number_table, tb_seq_selecao_p INOUT pls_util_cta_pck.t_number_table) AS $body$
BEGIN

-- se tem algum registro processa

if (tb_seq_conta_p.count > 0) then

	-- parametro que verifica que tipo de filtro foi passado para ver qual tabela precisa ser alterada

	case(ie_tipo_filtro_p)
	
		-- tabela de regras de material

		when 'M' then
			
			-- caso seja de coparticipacao

			if (ie_destino_regra_p = 'C') then
			
				forall i in tb_seq_conta_mat_p.first..tb_seq_conta_mat_p.last
					update	pls_conta_mat
					set	vl_mat_copartic = 0
					where 	nr_sequencia = tb_seq_conta_mat_p(i);
				commit;
			
				forall i in tb_seq_conta_mat_p.first..tb_seq_conta_mat_p.last
					update	pls_conta_mat_regra
					set	nr_seq_cp_comb_filtro_cop  = NULL,
						nr_seq_cp_comb_cop_entao  = NULL
					where	nr_sequencia = tb_seq_conta_mat_p(i);
			else
			-- qualquer outra coisa

				forall i in tb_seq_conta_mat_p.first..tb_seq_conta_mat_p.last
					update	pls_conta_mat_regra
					set	nr_seq_cp_comb_filtro  = NULL,
						nr_seq_cp_comb_entao  = NULL,
						vl_material_base = 0
					where	nr_sequencia = tb_seq_conta_mat_p(i);
			end if;
		-- tabela de regras de procedimento

		when 'P' then
		
			-- caso seja de coparticipacao

			if (ie_destino_regra_p = 'C') then
			
				forall i in tb_seq_conta_proc_p.first..tb_seq_conta_proc_p.last
					update	pls_conta_proc_regra
					set	nr_seq_cp_comb_filtro_cop  = NULL,
						nr_seq_cp_comb_proc_cop_entao  = NULL,
						vl_procedimento_cop = 0,
						vl_custo_operacional_cop = 0,
						vl_anestesista_cop = 0,
						vl_medico_cop = 0,
						vl_filme_cop = 0,
						vl_auxiliares_cop = 0
					where	nr_sequencia = tb_seq_conta_proc_p(i);
			else
			-- qualquer outra coisa

				forall i in tb_seq_conta_proc_p.first..tb_seq_conta_proc_p.last
					update	pls_conta_proc_regra
					set	nr_seq_cp_comb_filtro  = NULL,
						nr_seq_cp_comb_proc_entao  = NULL,
						vl_procedimento_base = 0,
						vl_custo_operacional = 0,
						vl_anestesista = 0,
						vl_medico = 0,
						vl_materiais = 0,
						vl_auxiliares = 0,
						cd_edicao_amb  = NULL
					where	nr_sequencia = tb_seq_conta_proc_p(i);
				commit;

				forall i in tb_seq_conta_proc_p.first..tb_seq_conta_proc_p.last
					update	pls_conta_proc
					set	cd_porte_anestesico  = NULL,
						nr_auxiliares  = NULL,
						nr_seq_preco_autogerado  = NULL,
						cd_moeda_autogerado  = NULL,
						vl_medico_tab = 0,
						vl_custo_operacional_tab = 0,
						qt_filme_tab = 0,
						vl_ch_honorario = 0,
						vl_ch_custo_oper = 0,
						vl_ch_custo_filme = 0,
						vl_ch_anestesista = 0
					where 	nr_sequencia = tb_seq_conta_proc_p(i);
				
			end if;
		-- quando servico usa a mesma tabela que procedimento porem outros campos

		when 'S' then
		
			-- caso seja de coparticipacao

			if (ie_destino_regra_p = 'C') then
				
				forall i in tb_seq_conta_proc_p.first..tb_seq_conta_proc_p.last
					update	pls_conta_proc_regra
					set	nr_seq_cp_comb_filtro_cop  = NULL,
						nr_seq_cp_comb_serv_cop_entao  = NULL,
						vl_procedimento_cop = 0
					where	nr_sequencia = tb_seq_conta_proc_p(i);
			else
			-- qualquer outra coisa

				forall i in tb_seq_conta_proc_p.first..tb_seq_conta_proc_p.last
					update 	pls_conta_proc
					set	vl_ch_honorario = 0
					where	nr_sequencia = tb_seq_conta_proc_p(i);
				commit;
				
				forall i in tb_seq_conta_proc_p.first..tb_seq_conta_proc_p.last
					update	pls_conta_proc_regra
					set	nr_seq_cp_comb_filtro  = NULL,
						nr_seq_cp_comb_serv_entao  = NULL,
						vl_procedimento_base = 0
					where	nr_sequencia = tb_seq_conta_proc_p(i);
			end if;
		-- tabela de participante

		when 'PP' then
		
			-- caso seja de coparticipacao

			if (ie_destino_regra_p = 'C') then
			
				forall i in tb_nr_seq_partic_p.first..tb_nr_seq_partic_p.last
					update	pls_proc_participante
					set	nr_seq_cp_comb_filtro_cop  = NULL,
						nr_seq_cp_comb_cop_entao  = NULL,
						vl_negociado = 0,
						vl_medico = 0,
						vl_medico_base = 0,
						vl_anestesista = 0,
						vl_anestesista_base = 0,
						vl_auxiliares = 0,
						vl_auxiliares_base = 0
					where	nr_sequencia = tb_nr_seq_partic_p(i);
			else
			-- qualquer outra coisa

				forall i in tb_nr_seq_partic_p.first..tb_nr_seq_partic_p.last
					update	pls_proc_participante
					set	nr_seq_cp_comb_filtro  = NULL,
						nr_seq_cp_comb_entao  = NULL,
						vl_negociado = 0,
						vl_medico = 0,
						vl_medico_base = 0,
						vl_anestesista = 0,
						vl_anestesista_base = 0,
						vl_auxiliares = 0,
						vl_auxiliares_base = 0
					where	nr_sequencia = tb_nr_seq_partic_p(i);
			end if;
		else
			null;
	end case;
	
	commit;
end if;

-- limpa as tabelas

tb_seq_conta_p.delete;
tb_seq_conta_proc_p.delete;
tb_seq_conta_mat_p.delete;
tb_nr_seq_partic_p.delete;
tb_seq_selecao_p.delete;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_filtro_regra_preco_cta_pck.atualiza_regra_filtro ( ie_destino_regra_p text, ie_tipo_filtro_p text, tb_seq_conta_p INOUT pls_util_cta_pck.t_number_table, tb_seq_conta_proc_p INOUT pls_util_cta_pck.t_number_table, tb_seq_conta_mat_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_partic_p INOUT pls_util_cta_pck.t_number_table, tb_seq_selecao_p INOUT pls_util_cta_pck.t_number_table) FROM PUBLIC;
