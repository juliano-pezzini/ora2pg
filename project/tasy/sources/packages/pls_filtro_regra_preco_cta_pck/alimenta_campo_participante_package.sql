-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_filtro_regra_preco_cta_pck.alimenta_campo_participante ( nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


valor_bind_w		sql_pck.t_dado_bind;
ds_select_w		varchar(32000);
cursor_w		sql_pck.t_cursor;

tb_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_partic_w	pls_util_cta_pck.t_number_table;


BEGIN

-- so precisa processar caso NAO seja informado uma conta de material

if (coalesce(nr_seq_conta_mat_p::text, '') = '') then

	begin
		valor_bind_w := pls_filtro_regra_preco_cta_pck.obter_select_filtro(	false, 'S', 'P', 'PP', null, null, null, null, null, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_estabelecimento_p, null, null, null, valor_bind_w, 'S');
		
		-- executa o comando sql com os respectivos binds

		valor_bind_w := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w);
		
		loop
			fetch cursor_w bulk collect into	tb_seq_conta_w, tb_seq_conta_proc_w,
								tb_seq_conta_mat_w, tb_nr_seq_partic_w
			limit pls_util_pck.qt_registro_transacao_w;
			exit when tb_nr_seq_partic_w.count = 0;
			
			forall i in tb_nr_seq_partic_w.first..tb_nr_seq_partic_w.last
				update 	pls_proc_participante
				set	ie_status = 'U',
					nm_usuario = nm_usuario_p
				where	nr_sequencia = tb_nr_seq_partic_w(i);
			commit;
			
		end loop;
		close cursor_w;
	
	exception
	when others then
		-- se deu algo e o cursor esta aberto fecha ele

		if (cursor_w%isopen) then
			close cursor_w;
		end if;
		-- Tratar erro gerado no sql dinamico, sera inserido registro no log e abortado 

		-- o processo exibindo mensagem de erro.

		CALL CALL CALL CALL CALL CALL pls_filtro_regra_preco_cta_pck.trata_erro_sql_dinamico( 	null, ds_select_w,
						null, nm_usuario_p,
						'S');
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_filtro_regra_preco_cta_pck.alimenta_campo_participante ( nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
