-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_filtro_regra_preco_cta_pck.obter_se_proc_existe_tab_preco ( dt_procedimento_p pls_conta_proc.dt_procedimento_referencia%type, cd_procedimento_p pls_conta_proc.cd_procedimento%type, ie_origem_proced_p pls_conta_proc.ie_origem_proced%type, nr_seq_regra_comb_p pls_cp_cta_combinada.nr_sequencia%type) RETURNS varchar AS $body$
DECLARE


cd_edicao_w		pls_cp_cta_eproc.cd_edicao_amb%type;
ie_origem_proced_w 	pls_conta_proc.ie_origem_proced%type;
ie_calculo_tuss_w	edicao_amb.ie_calculo_tuss%type;
nr_seq_cbhpm_edicao_w	pls_cp_cta_eproc.nr_seq_cbhpm_edicao%type;
dt_inicio_vig_edicao_w	pls_conta_proc.dt_procedimento_referencia%type;
qt_registro_w 		integer;


BEGIN

qt_registro_w := 0;

-- verifica qual ser_ o ent_o do procedimento informado atrav_z da data

select 	max(cd_edicao_amb),
	max(nr_seq_cbhpm_edicao)
into STRICT	cd_edicao_w,
	nr_seq_cbhpm_edicao_w
from	pls_cp_cta_eproc
where	nr_seq_cp_combinada = nr_seq_regra_comb_p
and	dt_procedimento_p between dt_inicio_vigencia_ref
				and dt_fim_vigencia_ref;

-- com a edi__o do ent_o _ necess_rio verificar qual a origem desta,

-- se n_o encontrou verifica de acordo com a origem do procedimento

ie_calculo_tuss_w := pls_entao_regra_preco_cta_pck.obter_origem_edicao(	cd_edicao_w, ie_origem_proced_p);

-- caso seja AMB ou Pr_pria verifica se existe valor na tabela

if (ie_origem_proced_w in (1, 4)) then

	select	count(1)
	into STRICT	qt_registro_w
	from	preco_amb
	where	cd_edicao_amb = cd_edicao_w
	and	cd_procedimento = cd_procedimento_p
	and	dt_inicio_vigencia <= dt_procedimento_p;

-- CBHPM

elsif (ie_origem_proced_w = 5) then

	-- primeiro verifica se tem data de vigencia da edi__o para verificar, sen_o usa a do proc

	select	coalesce(max(dt_vigencia), dt_procedimento_p)
	into STRICT	dt_inicio_vig_edicao_w
	from	cbhpm_edicao
	where	nr_sequencia = nr_seq_cbhpm_edicao_w;

	select	count(1)
	into STRICT	qt_registro_w
	from	cbhpm_preco
	where	cd_procedimento = cd_procedimento_p
	and	ie_origem_proced = ie_origem_proced_w
	and	dt_vigencia <= dt_inicio_vig_edicao_w;

-- se TUSS

elsif (ie_origem_proced_w = 8) then

	-- com calculo AMB

	if (ie_calculo_tuss_w = 'A') then
	
		select	count(1)
		into STRICT	qt_registro_w
		from	preco_tuss
		where	cd_edicao_amb = cd_edicao_w
		and	cd_procedimento	= cd_procedimento_p
		and	dt_inicio_vigencia <= dt_procedimento_p;
	
	-- com calculo CBHPM

	elsif (ie_calculo_tuss_w = 'C') then
	
		select  count(1)
		into STRICT	qt_registro_w
		from	preco_tuss
		where	cd_procedimento = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_w
		and	dt_inicio_vigencia <= dt_procedimento_p;
	end if;
end if;

-- se encontrou algo _ v_lido

if (qt_registro_w > 0) then

	return 'S';
else

	return 'N';
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_filtro_regra_preco_cta_pck.obter_se_proc_existe_tab_preco ( dt_procedimento_p pls_conta_proc.dt_procedimento_referencia%type, cd_procedimento_p pls_conta_proc.cd_procedimento%type, ie_origem_proced_p pls_conta_proc.ie_origem_proced%type, nr_seq_regra_comb_p pls_cp_cta_combinada.nr_sequencia%type) FROM PUBLIC;
