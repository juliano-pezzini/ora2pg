-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_filtro_regra_preco_cta_pck.cria_registro_regra ( ie_destino_regra_p text, nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

				
_ora2pg_r RECORD;
nr_indice_w		integer;
tb_tipo_item_limpa_w	pls_util_cta_pck.t_varchar2_table_2;
					
ds_select_w		varchar(20000);
valor_bind_w		sql_pck.t_dado_bind;
cursor_w		sql_pck.t_cursor;

tb_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_partic_w	pls_util_cta_pck.t_number_table;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;

BEGIN
-- participante do procedimento NAO precisa ter nenhum trabalho nesta rotina

-- pois o mesmo e gravado na pls_proc_participante e obviamente ja existe o registro na mesma


-- limpa por seguranca

tb_tipo_item_limpa_w.delete;
nr_indice_w := 0;

-- se NAO foi informado material

if (coalesce(nr_seq_conta_mat_p::text, '') = '') then
	-- so vai atras de procedimento e pacote caso NAO tenha sido informado uma conta de material

	tb_tipo_item_limpa_w(nr_indice_w) := 'P';
	nr_indice_w := nr_indice_w + 1;
	
	-- so vai atras de servico caso NAO tenha sido informado uma conta de material

	tb_tipo_item_limpa_w(nr_indice_w) := 'S';
	nr_indice_w := nr_indice_w + 1;
end if;

-- so vai atras de material caso NAO tenha sido informado uma conta de procedimento

if (coalesce(nr_seq_conta_proc_p::text, '') = '') then

	tb_tipo_item_limpa_w(nr_indice_w) := 'M';
	nr_indice_w := nr_indice_w + 1;
end if;	

-- se tem registros

if (tb_tipo_item_limpa_w.count > 0) then
	-- percorre um a um

	for i in tb_tipo_item_limpa_w.first .. tb_tipo_item_limpa_w.last loop
		
		begin
			valor_bind_w := pls_filtro_regra_preco_cta_pck.obter_select_filtro(	false, 'Z', ie_destino_regra_p, tb_tipo_item_limpa_w(i), null, null, null, null, null, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_estabelecimento_p, null, null, null, valor_bind_w);
			
			-- executa o comando sql com os respectivos binds

			valor_bind_w := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w);
			
			loop
				fetch cursor_w bulk collect into	tb_seq_conta_w, tb_seq_conta_proc_w,
									tb_seq_conta_mat_w, tb_nr_seq_partic_w,
									tb_seq_selecao_w
				limit pls_util_pck.qt_registro_transacao_w;
				exit when tb_seq_conta_mat_w.count = 0;
				
				SELECT * FROM pls_filtro_regra_preco_cta_pck.insere_registro_regra(	tb_tipo_item_limpa_w(i), tb_seq_conta_w, tb_seq_conta_proc_w, tb_seq_conta_mat_w, tb_nr_seq_partic_w, tb_seq_selecao_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_seq_conta_w := _ora2pg_r.tb_seq_conta_p; tb_seq_conta_proc_w := _ora2pg_r.tb_seq_conta_proc_p; tb_seq_conta_mat_w := _ora2pg_r.tb_seq_conta_mat_p; tb_nr_seq_partic_w := _ora2pg_r.tb_nr_seq_partic_p; tb_seq_selecao_w := _ora2pg_r.tb_seq_selecao_p;
				
			end loop;
			close cursor_w;
		exception
		when others then
				-- se deu algo e o cursor esta aberto fecha ele

				if (cursor_w%isopen) then
					close cursor_w;
				end if;
				
				-- Tratar erro gerado no sql dinamico, sera inserido registro no log e abortado o processo exibindo mensagem de erro.

				CALL CALL CALL CALL CALL CALL pls_filtro_regra_preco_cta_pck.trata_erro_sql_dinamico( 	null, ds_select_w,
								null, nm_usuario_p,
								'S');
		end;
	end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_filtro_regra_preco_cta_pck.cria_registro_regra ( ie_destino_regra_p text, nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
