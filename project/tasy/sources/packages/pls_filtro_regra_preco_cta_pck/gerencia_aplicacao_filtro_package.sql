-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_filtro_regra_preco_cta_pck.gerencia_aplicacao_filtro ( ie_destino_regra_p text, nr_seq_regra_filtro_p pls_cp_cta_combinada.nr_sequencia%type, ie_tipo_regra_p pls_cp_cta_combinada.ie_tipo_regra%type, dt_inicio_vigencia_p pls_cp_cta_combinada.dt_inicio_vigencia%type, dt_fim_vigencia_p pls_cp_cta_combinada.dt_fim_vigencia%type, nr_id_transacao_p pls_cp_cta_selecao.nr_id_transacao%type, nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
-- controle para saber quando e necessorio restringir apenas os registros que estao na tabela de selecao

ie_considera_tab_selecao_w 	boolean;					

c_conf_filtro CURSOR(	nr_seq_regra_filtro_pc	pls_cp_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_filtro,
		a.ie_filtro_conta,
		a.ie_filtro_produto,
		a.ie_filtro_beneficiario,
		a.ie_filtro_prestador,
		a.ie_filtro_contrato,
		a.ie_filtro_intercambio,
		a.ie_filtro_protocolo,
		a.ie_filtro_procedimento,
		a.ie_filtro_servico,
		a.ie_filtro_material,
		a.ie_filtro_participante,
		a.ie_filtro_profissional,
		a.ie_excecao
	from	pls_cp_cta_filtro a
	where	a.nr_seq_cp_combinada = nr_seq_regra_filtro_pc
	and	a.ie_situacao = 'A'
	order by a.ie_excecao,
		 a.nr_sequencia;

BEGIN

-- abre os "cabecalhos" das configuracoes de filtros

for r_c_conf_filtro_w in c_conf_filtro(nr_seq_regra_filtro_p) loop
	
	-- faz a devida alimentacao dos campos de acordo com o tipo de regra para realizar o correto processamento dos filtros

	CALL CALL CALL CALL CALL pls_filtro_regra_preco_cta_pck.prepara_reg_proces_filtro(	nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao);

	-- so considera a tabela de selecao quando for filtro de EXECAO (retira registros)

	-- para qualquer outro caso NAO considerar, pois serao inseridos registros a nivel de filtro

	if (r_c_conf_filtro_w.ie_excecao = 'S') then
		ie_considera_tab_selecao_w := true;
	else
		ie_considera_tab_selecao_w := false;
	end if;

	-- filtro de Protocolo

	if (r_c_conf_filtro_w.ie_filtro_protocolo = 'S') then
		
			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_protocolo(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Conta

	if (r_c_conf_filtro_w.ie_filtro_conta = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_conta(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Prestador

	if (r_c_conf_filtro_w.ie_filtro_prestador = 'S') then
		
		-- Prestador do atendimento (protocolo)

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_prestador(	ie_considera_tab_selecao_w, 'A', ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
		
		-- Prestador solicitante (solic ref da conta)

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_prestador(	ie_considera_tab_selecao_w, 'S', ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
		
		-- Prestador executor (exec da conta)

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_prestador(	ie_considera_tab_selecao_w, 'E', ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Profissional

	if (r_c_conf_filtro_w.ie_filtro_profissional = 'S') then

		-- Profissional executor (exec da conta)

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_profissional(	ie_considera_tab_selecao_w, 'E', ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Contrato

	if (r_c_conf_filtro_w.ie_filtro_contrato = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_contrato(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Produto

	if (r_c_conf_filtro_w.ie_filtro_produto = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_produto(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de intercambio

	if (r_c_conf_filtro_w.ie_filtro_intercambio = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_intercambio(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de beneficiario

	if (r_c_conf_filtro_w.ie_filtro_beneficiario = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_beneficiario(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Procedimento

	if (r_c_conf_filtro_w.ie_filtro_procedimento = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_procedimento(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, nr_seq_regra_filtro_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de servico

	if (r_c_conf_filtro_w.ie_filtro_servico = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_servico(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Material

	if (r_c_conf_filtro_w.ie_filtro_material = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_material(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- filtro de Participante

	if (r_c_conf_filtro_w.ie_filtro_participante = 'S') then

			ie_considera_tab_selecao_w := pls_filtro_regra_preco_cta_pck.aplica_filtro_participante(	ie_considera_tab_selecao_w, ie_tipo_regra_p, ie_destino_regra_p, nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao, r_c_conf_filtro_w.nr_seq_filtro, dt_inicio_vigencia_p, dt_fim_vigencia_p, nr_seq_lote_conta_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p, cd_acao_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	
	-- quando for EXECAO, busca tudo o que tiver o ie_excecao = S e coloca o ie_valido = N

	-- pois se caiu na EXECAO NAO deve casar

	CALL CALL CALL CALL CALL pls_filtro_regra_preco_cta_pck.atualiza_sel_excecao_end(nr_id_transacao_p, r_c_conf_filtro_w.ie_excecao);
end loop;

-- limpa tudo o que for invalido, porque na tabela de selecao so podera ser utilizado o que for ie_valido = S nos passos seguintes

CALL CALL CALL CALL CALL CALL pls_filtro_regra_preco_cta_pck.limpar_invalidos(nr_id_transacao_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_filtro_regra_preco_cta_pck.gerencia_aplicacao_filtro ( ie_destino_regra_p text, nr_seq_regra_filtro_p pls_cp_cta_combinada.nr_sequencia%type, ie_tipo_regra_p pls_cp_cta_combinada.ie_tipo_regra%type, dt_inicio_vigencia_p pls_cp_cta_combinada.dt_inicio_vigencia%type, dt_fim_vigencia_p pls_cp_cta_combinada.dt_fim_vigencia%type, nr_id_transacao_p pls_cp_cta_selecao.nr_id_transacao%type, nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
