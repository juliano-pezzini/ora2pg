-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE qsm_messages_pck.qsm_process_message ( nr_seq_fila_p bigint, ds_xml_p xml, ie_case_p text) AS $body$
DECLARE


ds_log_w	intpd_fila_transmissao.ds_log%type;

C01 CURSOR(ds_xml_pc xml) FOR
	SELECT	z.ds_type,
		z.ds_description
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/doc' as "doc",
			'http://www.mmm.com/his/qsmed' as "qai"),
			'doc:messages' passing ds_xml_pc columns
			message		xml		path	'qai:message') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed' as "qai"),
			'qai:message' passing x.message columns
			ds_type			varchar(32)	path	'@type',
			ds_description		varchar(256)	path	'@description') z;

C10 CURSOR(ds_xml_pc xml) FOR
	SELECT	z.ds_type,
		z.ds_description
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/status' as "stat",
			'http://www.mmm.com/his/qsmed' as "qai"),
			'stat:messages' passing ds_xml_pc columns
			message		xml		path	'qai:message') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed' as "qai"),
			'qai:message' passing x.message columns
			ds_type			varchar(32)	path	'@type',
			ds_description		varchar(256)	path	'@description') z;

C11 CURSOR(ds_xml_pc xml) FOR
	SELECT	z.ds_type,
		z.ds_description
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/nominal' as "nom",
			'http://www.mmm.com/his/qsmed' as "qai"),
			'nom:messages' passing ds_xml_pc columns
			message		xml		path	'qai:message') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed' as "qai"),
			'qai:message' passing x.message columns
			ds_type			varchar(32)	path	'@type',
			ds_description		varchar(256)	path	'@description') z;
BEGIN

select	ds_log
into STRICT	ds_log_w
from	intpd_fila_transmissao
where	nr_sequencia	= nr_seq_fila_p;

if (ie_case_p = 'N') then

	for r_C01_w in C01(ds_xml_p) loop
		begin
		ds_log_w := ds_log_w || chr(13) || chr(10) || r_C01_w.ds_type || ' - ' || r_C01_w.ds_description;
		end;
	end loop;

elsif (ie_case_p = 'S') or (ie_case_p = 'NOM') then

	if (ie_case_p = 'NOM') then
		for r_C11_w in C11(ds_xml_p) loop
			begin
			ds_log_w := ds_log_w || chr(13) || chr(10) || r_C11_w.ds_type || ' - ' || r_C11_w.ds_description;
			end;
		end loop;
	else
		for r_C10_w in C10(ds_xml_p) loop
			begin
			ds_log_w := ds_log_w || chr(13) || chr(10) || r_C10_w.ds_type || ' - ' || r_C10_w.ds_description;
			end;
		end loop;
	end if;
end if;

update	intpd_fila_transmissao
set	ds_log			= ds_log_w
where	nr_sequencia		= nr_seq_fila_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qsm_messages_pck.qsm_process_message ( nr_seq_fila_p bigint, ds_xml_p xml, ie_case_p text) FROM PUBLIC;
