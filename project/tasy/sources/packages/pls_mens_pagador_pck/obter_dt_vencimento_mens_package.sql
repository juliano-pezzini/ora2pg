-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_mens_pagador_pck.obter_dt_vencimento_mens ( nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_dia_vencimento_p pls_contrato_pagador_fin.dt_dia_vencimento%type, ie_mes_vencimento_p pls_contrato_pagador_fin.ie_mes_vencimento%type, dt_referencia_p timestamp, dt_primeira_mensalidade_p pls_contrato_pagador.dt_primeira_mensalidade%type, ie_primeira_mens_gerada_p pls_contrato_pagador.ie_primeira_mensalidade_gerada%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_meses_vencimento_p pls_contrato_pagador_fin.qt_meses_vencimento%type) RETURNS timestamp AS $body$
DECLARE


dt_vencimento_w		timestamp;
qt_meses_vencimento_w	pls_contrato_pagador_fin.qt_meses_vencimento%type;


BEGIN

if (dt_dia_vencimento_p = 0) then
	dt_vencimento_w	:= clock_timestamp();
else
	qt_meses_vencimento_w	:= abs(coalesce(qt_meses_vencimento_p,1));
	dt_vencimento_w		:= dt_referencia_p + (dt_dia_vencimento_p - 1);
	if (ie_mes_vencimento_p = 'P') then
		dt_vencimento_w := add_months(dt_vencimento_w,qt_meses_vencimento_w);
	elsif (ie_mes_vencimento_p = 'N') then
		dt_vencimento_w := add_months(dt_vencimento_w,qt_meses_vencimento_w  * -1);
	else	--	se o mes de vencimento for diferente do mes da geracao da mensalidade, busca o ultimo dia do mes
		if (dt_referencia_p <> trunc(dt_vencimento_w,'month')) then
			dt_vencimento_w	:= last_day(dt_referencia_p);
		end if;
	end if;
end if;

-- Se o pagador nao possui outras mensalidades geradas, entao a data de vencimento e a data da primeira mensalidade do cadastro no pagador

if (ie_primeira_mens_gerada_p = 'N') then
	dt_vencimento_w := coalesce(dt_primeira_mensalidade_p,dt_vencimento_w);
	
	-- Caso a data de vencimento esteja vencida da primeira mensalidade, incrementa os dias das regras com a data atual

	if (trunc(dt_vencimento_w,'dd') <= trunc(clock_timestamp(),'dd')) and (pls_mensalidade_util_pck.get_qt_dias_incrementados_venc IS NOT NULL AND pls_mensalidade_util_pck.get_qt_dias_incrementados_venc::text <> '') then
		dt_vencimento_w	:= clock_timestamp() + pls_mensalidade_util_pck.get_qt_dias_incrementados_venc;
	end if;
end if;

return dt_vencimento_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_mens_pagador_pck.obter_dt_vencimento_mens ( nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_dia_vencimento_p pls_contrato_pagador_fin.dt_dia_vencimento%type, ie_mes_vencimento_p pls_contrato_pagador_fin.ie_mes_vencimento%type, dt_referencia_p timestamp, dt_primeira_mensalidade_p pls_contrato_pagador.dt_primeira_mensalidade%type, ie_primeira_mens_gerada_p pls_contrato_pagador.ie_primeira_mensalidade_gerada%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_meses_vencimento_p pls_contrato_pagador_fin.qt_meses_vencimento%type) FROM PUBLIC;
