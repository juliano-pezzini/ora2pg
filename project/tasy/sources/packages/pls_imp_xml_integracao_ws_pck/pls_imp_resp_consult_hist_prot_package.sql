-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_imp_xml_integracao_ws_pck.pls_imp_resp_consult_hist_prot ( cd_operadora_p ptu_resp_cons_historico_pa.cd_operadora%type, cd_operadora_destino_p ptu_resp_cons_historico_pa.cd_operadora_destino%type, cd_operadora_origem_p ptu_resp_cons_historico_pa.cd_operadora_origem%type, cd_transacao_p ptu_resp_cons_historico_pa.cd_transacao%type, nr_registro_ans_p ptu_resp_cons_historico_pa.nr_registro_ans%type, ie_tipo_cliente_p ptu_resp_cons_historico_pa.ie_tipo_cliente%type, cd_usuario_plano_p ptu_resp_cons_historico_pa.cd_usuario_plano%type, dt_geracao_p ptu_resp_cons_historico_pa.dt_geracao%type, nr_protocolo_p ptu_resp_cons_historico_pa.nr_protocolo%type, nr_seq_execucao_p ptu_resp_cons_historico_pa.nr_seq_execucao%type, nr_seq_protocolo_p ptu_resp_cons_historico_pa.nr_seq_protocolo%type, ie_origem_resposta_p ptu_resp_cons_historico_pa.ie_origem_resposta%type, dt_inicio_periodo_p ptu_resp_cons_historico_pa.dt_inicio_periodo%type, dt_fim_periodo_p ptu_resp_cons_historico_pa.dt_fim_periodo%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

						
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar a importacao dos dados da transacao de Consulta de Historico recebida via WebService e gravar na tabela de resposta.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [ x ] Portal [  ]  Relatorios [ x] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


--Buscar os protocolos solicitados pela carteira do beneficiario e, caso vier na solicitacao, pelo numero do protocolo

C01 CURSOR(	nr_protocolo_pc		ptu_resp_solicitacao_pa.nr_protocolo%type,
		cd_usuario_plano_pc 	ptu_resp_solicitacao_pa.cd_usuario_plano%type,
		dt_geracao_pc		ptu_resp_cons_historico_pa.dt_geracao%type) FOR
	SELECT	a.nr_seq_protocolo,
		a.nr_seq_execucao,
		a.cd_operadora_origem
	from	ptu_resp_solicitacao_pa a,
		pls_protocolo_atendimento b
	where	a.nr_seq_protocolo = b.nr_sequencia
	and	a.cd_usuario_plano = cd_usuario_plano_pc
	and (coalesce(nr_protocolo_pc::text, '') = '' or b.nr_protocolo = nr_protocolo_pc)
	and	a.dt_geracao between(dt_geracao_pc - 90) and dt_geracao_pc;--Somente os protocolos dos utlimos 90 dias

-- Busca as informacoes do historico do protocolo

C02 CURSOR(	nr_seq_protocolo_pc	pls_protocolo_atend_hist.nr_seq_protocolo%type) FOR
	SELECT	b.ds_historico,
		a.nr_protocolo,
		a.ie_status
	from	pls_protocolo_atendimento	a,
		pls_protocolo_atend_hist	b
	where	b.nr_seq_protocolo 	= a.nr_sequencia
	and	a.nr_sequencia 		= nr_seq_protocolo_pc;

nr_trans_intercambio_w		ptu_solicitacao_pa.nr_trans_intercambio%type;
nr_trans_interc_orig_w		ptu_resp_cons_historico_pa.nr_trans_interc_orig%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_tipo_cliente_w		ptu_resp_cons_historico_pa.ie_tipo_cliente%type;
dt_geracao_w			ptu_resp_cons_historico_pa.dt_geracao%type;
BEGIN
nr_trans_interc_orig_w := null;

if (coalesce(cd_estabelecimento_p,0) > 0) then
	cd_estabelecimento_w := cd_estabelecimento_p;
else
	cd_estabelecimento_w := pls_imp_xml_integracao_ws_pck.obter_estab_padrao_gpi();
end if;

ie_tipo_cliente_w := ptu_converter_tipo_cliente(ie_tipo_cliente_p);

dt_geracao_w := coalesce(dt_geracao_p, clock_timestamp());

for c01_w in C01(nr_protocolo_p, cd_usuario_plano_p, dt_geracao_w) loop
	begin
	select	nr_trans_intercambio
	into STRICT	nr_trans_intercambio_w
	from	ptu_solicitacao_pa
	where	nr_seq_execucao = c01_w.nr_seq_execucao
	and	cd_operadora_origem = c01_w.cd_operadora_origem;
	
	for c02_w in C02(c01_w.nr_seq_protocolo) loop
		begin
		
		insert into ptu_resp_cons_historico_pa(nr_sequencia, cd_operadora, cd_operadora_destino,
			cd_operadora_origem, cd_transacao, ie_tipo_cliente,
			cd_usuario_plano, ds_mensagem_livre, dt_fim_periodo,
			dt_geracao, dt_inicio_periodo, ie_origem_resposta,
			ie_resposta, nr_protocolo, nr_registro_ans,
			nr_seq_execucao, nr_seq_protocolo, nr_trans_intercambio,
			nr_trans_interc_orig, dt_atualizacao, dt_atualizacao_nrec,
			nm_usuario, nm_usuario_nrec, cd_estabelecimento)
		values (nextval('ptu_resp_cons_historico_pa_seq'), cd_operadora_p, cd_operadora_destino_p,
			cd_operadora_origem_p, cd_transacao_p, ie_tipo_cliente_p,
			cd_usuario_plano_p, c02_w.ds_historico, coalesce(dt_fim_periodo_p,clock_timestamp()),
			dt_geracao_w, coalesce(dt_inicio_periodo_p,clock_timestamp()), ie_origem_resposta_p,
			c02_w.ie_status, c02_w.nr_protocolo, nr_registro_ans_p,
			nr_seq_execucao_p, c01_w.nr_seq_protocolo, nr_trans_intercambio_w,
			nr_trans_interc_orig_w, clock_timestamp(), clock_timestamp(),
			nm_usuario_p, nm_usuario_p, cd_estabelecimento_w);
		end;
	end loop;
	end;
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_xml_integracao_ws_pck.pls_imp_resp_consult_hist_prot ( cd_operadora_p ptu_resp_cons_historico_pa.cd_operadora%type, cd_operadora_destino_p ptu_resp_cons_historico_pa.cd_operadora_destino%type, cd_operadora_origem_p ptu_resp_cons_historico_pa.cd_operadora_origem%type, cd_transacao_p ptu_resp_cons_historico_pa.cd_transacao%type, nr_registro_ans_p ptu_resp_cons_historico_pa.nr_registro_ans%type, ie_tipo_cliente_p ptu_resp_cons_historico_pa.ie_tipo_cliente%type, cd_usuario_plano_p ptu_resp_cons_historico_pa.cd_usuario_plano%type, dt_geracao_p ptu_resp_cons_historico_pa.dt_geracao%type, nr_protocolo_p ptu_resp_cons_historico_pa.nr_protocolo%type, nr_seq_execucao_p ptu_resp_cons_historico_pa.nr_seq_execucao%type, nr_seq_protocolo_p ptu_resp_cons_historico_pa.nr_seq_protocolo%type, ie_origem_resposta_p ptu_resp_cons_historico_pa.ie_origem_resposta%type, dt_inicio_periodo_p ptu_resp_cons_historico_pa.dt_inicio_periodo%type, dt_fim_periodo_p ptu_resp_cons_historico_pa.dt_fim_periodo%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
