-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_imp_xml_integracao_ws_pck.pls_imp_confirmacao_protocolo ( nr_seq_transacao_p ptu_complemento_pa.nr_sequencia%type, cd_operadora_p ptu_confirmacao_pa.cd_operadora%type, cd_operadora_destino_p ptu_confirmacao_pa.cd_operadora_destino%type, cd_operadora_origem_p ptu_confirmacao_pa.cd_operadora_origem%type, cd_transacao_p ptu_confirmacao_pa.cd_transacao%type, nr_registro_ans_p ptu_confirmacao_pa.nr_registro_ans%type, ie_tipo_cliente_p ptu_confirmacao_pa.ie_tipo_cliente%type, cd_usuario_plano_p ptu_confirmacao_pa.cd_usuario_plano%type, dt_geracao_p text, ie_origem_resposta_p ptu_confirmacao_pa.ie_origem_resposta%type, nr_seq_execucao_p ptu_confirmacao_pa.nr_seq_execucao%type, nr_versao_p ptu_confirmacao_pa.nr_versao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_confirmacao_pa_p INOUT ptu_confirmacao_pa.nr_sequencia%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gravar nas tabelas de Confirmacao do web service para 
		posteriormente serem lidas e a partir delas ser gerado o xml de resposta.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [ ] Portal [  ]  Relatorios [ x] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

						
ie_tipo_identificador_w         ptu_confirmacao_pa.ie_tipo_identificador%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_segurado_w		pls_segurado_carteira.nr_seq_segurado%type;
nr_seq_protocolo_atend_w	pls_protocolo_atendimento.nr_sequencia%type;
ie_tipo_cliente_w		ptu_confirmacao_pa.ie_tipo_cliente%type;

BEGIN
if (coalesce(cd_estabelecimento_p,0) > 0) then
	cd_estabelecimento_w := cd_estabelecimento_p;
else
	cd_estabelecimento_w := pls_imp_xml_integracao_ws_pck.obter_estab_padrao_gpi();
end if;

ie_tipo_cliente_w := ptu_converter_tipo_cliente(ie_tipo_cliente_p);

if (cd_usuario_plano_p IS NOT NULL AND cd_usuario_plano_p::text <> '') then
	--validar se a carteirinha que foi enviada e valida e esta ativa.

	begin
		select	nr_seq_segurado
		into STRICT	nr_seq_segurado_w
		from	pls_segurado_carteira
		where	cd_usuario_plano = cd_usuario_plano_p;
	exception
	when others then
		nr_seq_segurado_w := null;
	end;
	
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		--Confirmado

		ie_tipo_identificador_w := 1;
	else
		--Situacao invalida

		ie_tipo_identificador_w := 0;
	end if;	
end if;

insert into ptu_confirmacao_pa(nr_sequencia, cd_operadora, cd_operadora_destino,
	cd_operadora_origem, cd_transacao, nr_registro_ans,
	ie_tipo_cliente, cd_usuario_plano, dt_geracao,
	ie_origem_resposta, ie_tipo_identificador,nr_seq_execucao,
	nr_seq_protocolo, nr_versao, dt_atualizacao,
	dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
	cd_estabelecimento)
values (nextval('ptu_confirmacao_pa_seq'), cd_operadora_p, cd_operadora_destino_p,
	cd_operadora_origem_p, cd_transacao_p, nr_registro_ans_p,
	ie_tipo_cliente_p, cd_usuario_plano_p, dt_geracao_p,
	ie_origem_resposta_p, ie_tipo_identificador_w, nr_seq_execucao_p,
	nr_seq_protocolo_atend_w, nr_versao_p, clock_timestamp(),
	clock_timestamp(), nm_usuario_p, nm_usuario_p,
	cd_estabelecimento_w) returning nr_sequencia into nr_seq_confirmacao_pa_p;
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_xml_integracao_ws_pck.pls_imp_confirmacao_protocolo ( nr_seq_transacao_p ptu_complemento_pa.nr_sequencia%type, cd_operadora_p ptu_confirmacao_pa.cd_operadora%type, cd_operadora_destino_p ptu_confirmacao_pa.cd_operadora_destino%type, cd_operadora_origem_p ptu_confirmacao_pa.cd_operadora_origem%type, cd_transacao_p ptu_confirmacao_pa.cd_transacao%type, nr_registro_ans_p ptu_confirmacao_pa.nr_registro_ans%type, ie_tipo_cliente_p ptu_confirmacao_pa.ie_tipo_cliente%type, cd_usuario_plano_p ptu_confirmacao_pa.cd_usuario_plano%type, dt_geracao_p text, ie_origem_resposta_p ptu_confirmacao_pa.ie_origem_resposta%type, nr_seq_execucao_p ptu_confirmacao_pa.nr_seq_execucao%type, nr_versao_p ptu_confirmacao_pa.nr_versao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_confirmacao_pa_p INOUT ptu_confirmacao_pa.nr_sequencia%type) FROM PUBLIC;
