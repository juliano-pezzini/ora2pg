-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_contab_onl_lote_fin_pck.ctb_contabiliza_documento (doc_p ctb_documento, nm_usuario_p text, nr_sequencia_p ctb_documento.nr_sequencia%type default null) AS $body$
DECLARE

/*
Rotina que sera executada via JOB para contabilizar os documentos
Essa rotina identifica os doctos pendentes e de acordo com o tipo de lote contabil
*/


qt_registro_w       bigint;
ds_inconsistencia_w ctb_documento.ds_inconsistencia%type;
qt_existe_w     integer;
qt_tentativa_w  integer;

/* Doctos pendentes contabilizacao*/


c_doc_pendente CURSOR FOR
    SELECT a.*
    from   ctb_documento a
    where  coalesce(a.nr_lote_contabil,0) = 0
    and    a.ie_situacao_ctb = 'P'
    and    a.cd_tipo_lote_contabil in (5,7,10,11,14,18,29)
    and    a.nr_sequencia = coalesce(doc_p.nr_sequencia,nr_sequencia_p);

BEGIN
/* Tratamento para que a job tente aguardar caso nao localize o registro
ocorre em situacoes onde eh feito a baixa de titulos em lote e demora-se para
efetuar o commit */

qt_tentativa_w := 0;
for i in 1..12 loop
    select count(1)
    into STRICT qt_existe_w
    from ctb_documento a
    where a.nr_sequencia = coalesce(doc_p.nr_sequencia,nr_sequencia_p);
    if (qt_existe_w > 0) then
        exit;
    end if;
    qt_tentativa_w := qt_tentativa_w + 1;
    case
    when qt_tentativa_w in (1,2,3) then dbms_lock.sleep(5); -- 5/10/15 seg
    when qt_tentativa_w in (4,5,6) then dbms_lock.sleep(15); -- 30/45/60 seg
    when qt_tentativa_w in (7,8,9) then dbms_lock.sleep(30); -- 90/120/150 seg | 1.5min/2min/2.5min
    when qt_tentativa_w in (10,11,12) then dbms_lock.sleep(60); -- 210/270/330 seg | 3.5min/4.5min/5.5min
    end case;
end loop;
for current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype in c_doc_pendente loop
    begin
    CALL ctb_online_pck.ctb_excluir_lancamento_doc(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia, nm_usuario_p, 'N');
    current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.ds_inconsistencia := '';
    if (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 5) then
        begin
        if (ctb_online_pck.get_modo_lote(5,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            ctb_contab_onl_contas_receber(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype,nm_usuario_p);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 7) then
        begin
        if (ctb_online_pck.get_modo_lote(7,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            ctb_contab_onl_contas_pagar(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype,nm_usuario_p);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 10) then
        begin
        if (ctb_online_pck.get_modo_lote(10,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            ctb_contab_onl_tesouraria(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype,nm_usuario_p);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 11) then
        begin
        if (ctb_online_pck.get_modo_lote(11,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            ctb_contab_onl_receb_convenio(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype,nm_usuario_p);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 14 and current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nm_tabela = 'REPASSE_TERCEIRO_ITEM') then
        begin
        if (ctb_online_pck.get_modo_lote(14,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype := ctb_contab_onl_repasse_pck.contabiliza_item_repasse(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 18) then
        begin
        if (ctb_online_pck.get_modo_lote(18,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            ctb_contab_onl_controle_banco(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype,nm_usuario_p);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil = 29) then
        begin
        if (ctb_online_pck.get_modo_lote(29,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_estabelecimento) = 'S') then
            ctb_contab_onl_nota_credito(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype,nm_usuario_p);
        end if;
        exception
            when others then
                ds_inconsistencia_w := substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || dbms_utility.format_error_backtrace,1,4000);
        end;
    end if;

    if (coalesce(ds_inconsistencia_w, 'X') <> 'X') then
        rollback;
        update ctb_documento
        set    ds_inconsistencia = substr(replace(coalesce(ds_inconsistencia_w,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.ds_inconsistencia),'#@',''),1,4000),
               ds_stack          = substr('|CallStack update' || substr(dbms_utility.format_call_stack,1,3950),1,4000),
               ie_situacao_ctb   = 'P',
               nr_lote_contabil  = 0
        where  nr_sequencia = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia;
    elsif (coalesce(current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.ds_inconsistencia,'X') <> 'X') then
        if (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.cd_tipo_lote_contabil in (10,18)) then
            select count(1)
            into STRICT qt_registro_w
            from movimento_contabil_doc a
            where a.nr_seq_ctb_documento = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia  LIMIT 1;

            if (qt_registro_w > 0) then
                update ctb_documento
                set    ds_inconsistencia = substr(replace(coalesce(ds_inconsistencia_w,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.ds_inconsistencia),'#@',''),1,4000),
                       ds_stack          = substr('|CallStack update' || substr(dbms_utility.format_call_stack,1,3950),1,4000),
                       ie_situacao_ctb   = 'C',
                       nr_lote_contabil  = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_lote_contabil
                where  nr_sequencia = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia;
            else
                update ctb_documento
                set    ds_inconsistencia = substr(replace(coalesce(ds_inconsistencia_w,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.ds_inconsistencia),'#@',''),1,4000),
                       ds_stack          = substr('|CallStack update' || substr(dbms_utility.format_call_stack,1,3950),1,4000),
                       ie_situacao_ctb   = 'P',
                       nr_lote_contabil  = 0
                where  nr_sequencia = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia;
            end if;
        else
            update ctb_documento
            set    ds_inconsistencia = substr(replace(coalesce(ds_inconsistencia_w,current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.ds_inconsistencia),'#@',''),1,4000),
                   ds_stack          = substr('|CallStack update' || substr(dbms_utility.format_call_stack,1,3950),1,4000),
                   ie_situacao_ctb   = 'P',
                   nr_lote_contabil  = 0
            where  nr_sequencia = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia;
        end if;
    elsif (current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_lote_contabil != 0) then
        update ctb_documento
        set    nr_lote_contabil  = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_lote_contabil,
               ds_inconsistencia  = NULL,
               ie_situacao_ctb   = 'C'
        where  nr_sequencia = current_setting('ctb_contab_onl_lote_fin_pck.doc_w')::ctb_documento%rowtype.nr_sequencia;
    end if;
    end;
end loop;

    commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_contab_onl_lote_fin_pck.ctb_contabiliza_documento (doc_p ctb_documento, nm_usuario_p text, nr_sequencia_p ctb_documento.nr_sequencia%type default null) FROM PUBLIC;
