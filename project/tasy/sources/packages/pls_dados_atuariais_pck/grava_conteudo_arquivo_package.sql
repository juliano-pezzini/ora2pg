-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_dados_atuariais_pck.grava_conteudo_arquivo ( regra_arquivo_p regra_arquivo, ds_titulo_p text, ds_sql_p text, dado_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o arquivo conforme a regra passada, e o SQL e binding
	
	Sera aberto / criado um arquivo conforme nome do arquivo na regra,
	em seguida sera montado e aberto um cursor com o sql e binding passado por 
	parametros, entao feito o bulk collect e gravado no arquivo.
	
	O cursor so sera montado utilizando o sql e binding passados por parametros, nenhuma
	alteracao em sql devera ser feita aqui, apenas a carga.
	
	Essa rotina e para atender a gravacao de forma generica, entao todo sql
	passado por parametro devera ter a coluna "ds_conteudo" APENAS.

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_local_windows_utl_w	varchar(1000);

cursor_w		sql_pck.t_cursor;

tb_ds_conteudo_w	dbms_sql.varchar2_table;

BEGIN

-- abre / cria o arquivo

ds_local_windows_utl_w := pls_utl_file_pck.novo_arquivo( 14, regra_arquivo_p.ds_arquivo, 'S', null, ds_local_windows_utl_w);

-- se tiver o titulo, ja grava

if (ds_titulo_p IS NOT NULL AND ds_titulo_p::text <> '') then

	CALL pls_utl_file_pck.escrever(ds_titulo_p);
end if;

-- abre o cursor com os dados a serem gravados

dado_bind_p := sql_pck.executa_sql_cursor(ds_sql_p, dado_bind_p);


-- Se abriu o cursor corretamente

if (cursor_w%isopen) then


	--navega pelo cursor

	loop
	fetch cursor_w bulk collect into tb_ds_conteudo_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_ds_conteudo_w.count = 0;
	
		-- percorre a tabela virtual e  

		for i in tb_ds_conteudo_w.first..tb_ds_conteudo_w.last loop
		
			CALL pls_utl_file_pck.escrever(tb_ds_conteudo_w(i));
			
		end loop; -- fim gravar arquvio
		
		tb_ds_conteudo_w.delete;
	
	end loop;
	
	close cursor_w;
	
end if; -- fim cursor aberto corretamente

CALL pls_utl_file_pck.fechar_arquivo();

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_dados_atuariais_pck.grava_conteudo_arquivo ( regra_arquivo_p regra_arquivo, ds_titulo_p text, ds_sql_p text, dado_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
