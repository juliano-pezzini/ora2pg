-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_dados_atuariais_pck.retorna_sql_dados_mens ( lote_mens_p INOUT lote_atuarial, dado_bind_p INOUT sql_pck.t_dado_bind, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o sql dinamico com os filtro necessarios para os dados das mensalidades,
	bem como gera o bind dos parametros

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_retorno_w			varchar(32000):= '';
ie_tipo_pagador_w		pls_atu_mens_regra.ie_tipo_pagador%type;
ie_mensalidade_cancelada_w	pls_atu_mens_regra.ie_mensalidade_cancelada%type;
ds_status_lote_mens_w		varchar(1000);


BEGIN

-- levanta os filtros da regra

select	coalesce(max(a.ie_tipo_pagador), 'A'),
	coalesce(max(a.ie_mensalidade_cancelada), 'N'),
	-- deixar o status ja no "Formato IN"

	CASE WHEN coalesce(max(a.ie_status_lote_mens), 'A')='A' THEN  '''2'','||'''3''' WHEN coalesce(max(a.ie_status_lote_mens), 'A')='G' THEN  '''3''' WHEN coalesce(max(a.ie_status_lote_mens), 'A')='D' THEN  '''2''' END
into STRICT	ie_tipo_pagador_w,
	ie_mensalidade_cancelada_w,
	ds_status_lote_mens_w
from	pls_atu_mens_regra	a
where	a.nr_sequencia		= lote_mens_p.nr_seq_mens_regra;


ds_retorno_w	:= ds_retorno_w||	'insert into pls_atu_mens_item (nr_sequencia, '|| pls_util_pck.enter_w ||
					'				cd_usuario_plano, '|| pls_util_pck.enter_w ||
					'				dt_atualizacao, '|| pls_util_pck.enter_w ||
					'				dt_atualizacao_nrec, '|| pls_util_pck.enter_w ||
					'				dt_liquidacao, '|| pls_util_pck.enter_w ||
					'				dt_mesano_referencia, '|| pls_util_pck.enter_w ||
					'				dt_pagamento_previsto, '|| pls_util_pck.enter_w ||
					'				dt_referencia_mens, '|| pls_util_pck.enter_w ||
					'				nm_beneficiario, '|| pls_util_pck.enter_w ||
					'				nm_usuario, '|| pls_util_pck.enter_w ||
					'				nm_usuario_nrec, '|| pls_util_pck.enter_w ||
					'				nr_seq_lote, '|| pls_util_pck.enter_w ||
					'				nr_seq_mensalidade, '|| pls_util_pck.enter_w ||
					'				nr_seq_plano, '|| pls_util_pck.enter_w ||
					'				nr_seq_segurado, '|| pls_util_pck.enter_w ||
					'				nr_seq_titular, '|| pls_util_pck.enter_w ||
					'				vl_contraprestacao, '|| pls_util_pck.enter_w ||
					'				vl_mensalidade) '|| pls_util_pck.enter_w ||
					'with segurado as 	(	select	(	select	max(z.cd_usuario_plano) '|| pls_util_pck.enter_w ||
					'						from	pls_segurado_carteira	z '|| pls_util_pck.enter_w ||
					'						where	z.nr_seq_segurado	= x.nr_sequencia) cd_usuario_plano, '|| pls_util_pck.enter_w ||
					'						x.nr_sequencia, '|| pls_util_pck.enter_w ||
					'						x.nr_seq_plano, '|| pls_util_pck.enter_w ||
					'						x.nr_seq_titular, '|| pls_util_pck.enter_w ||
					'						y.nm_pessoa_fisica '|| pls_util_pck.enter_w ||
					'				from	pls_segurado		x, '|| pls_util_pck.enter_w ||
					'					pessoa_fisica		y '|| pls_util_pck.enter_w ||
					'				where	y.cd_pessoa_fisica	= x.cd_pessoa_fisica)  '|| pls_util_pck.enter_w ||
					'select	pls_atu_mens_item_seq.nextVal nr_sequencia, '|| pls_util_pck.enter_w ||
					'	c.cd_usuario_plano, '|| pls_util_pck.enter_w ||
					'	sysdate dt_atualizacao, '|| pls_util_pck.enter_w ||
					'	sysdate dt_atualizacao_nrec, '|| pls_util_pck.enter_w ||
					'	(select max(x.dt_liquidacao) from titulo_receber x where x.nr_seq_mensalidade	= b.nr_seq_mensalidade) dt_liquidacao, '|| pls_util_pck.enter_w ||
					'	d.dt_mesano_referencia, '|| pls_util_pck.enter_w ||
					'	(select max(x.dt_pagamento_previsto) from titulo_receber x where x.nr_seq_mensalidade	= b.nr_seq_mensalidade) dt_pagamento_previsto, '|| pls_util_pck.enter_w ||
					'	a.dt_referencia dt_referencia_mens, '|| pls_util_pck.enter_w ||
					'	c.nm_pessoa_fisica nm_beneficiario, '|| pls_util_pck.enter_w ||
					'	:nm_usuario_p nm_usuario, '|| pls_util_pck.enter_w ||
					'	:nm_usuario_p nm_usuario_nrec,  '|| pls_util_pck.enter_w ||
					'	:nr_seq_lote nr_seq_lote, '|| pls_util_pck.enter_w ||
					'	a.nr_sequencia nr_seq_mensalidade, '|| pls_util_pck.enter_w ||
					'	c.nr_seq_plano, '|| pls_util_pck.enter_w ||
					'	c.nr_sequencia nr_seq_segurado, '|| pls_util_pck.enter_w ||
					'	c.nr_seq_titular, '|| pls_util_pck.enter_w ||
					'	nvl(b.vl_mensalidade,0) - nvl(b.vl_coparticipacao,0) vl_contraprestacao, '|| pls_util_pck.enter_w ||
					'	nvl(b.vl_mensalidade,0) vl_mensalidade	 '|| pls_util_pck.enter_w ||
					'from	pls_mensalidade			a, '|| pls_util_pck.enter_w ||
					'	pls_mensalidade_segurado	b, '|| pls_util_pck.enter_w ||
					'	segurado			c, '|| pls_util_pck.enter_w ||
					'	pls_lote_mensalidade		d '|| pls_util_pck.enter_w ||
					'where	b.nr_seq_mensalidade		= a.nr_sequencia '|| pls_util_pck.enter_w ||
					'and	c.nr_sequencia			= b.nr_seq_segurado '|| pls_util_pck.enter_w ||
					'and	d.nr_sequencia			= a.nr_seq_lote '|| pls_util_pck.enter_w ||
					'and	d.cd_estabelecimento		= :cd_estabelecimento '|| pls_util_pck.enter_w;
dado_bind_p := sql_pck.bind_variable(':nm_usuario_p', nm_usuario_p, dado_bind_p);
dado_bind_p := sql_pck.bind_variable(':nr_seq_lote', lote_mens_p.nr_sequencia, dado_bind_p);
dado_bind_p := sql_pck.bind_variable(':cd_estabelecimento', lote_mens_p.cd_estabelecimento, dado_bind_p);

if (lote_mens_p.dt_inicio_comp IS NOT NULL AND lote_mens_p.dt_inicio_comp::text <> '') then
					
	ds_retorno_w	:= ds_retorno_w||	'and	d.dt_mesano_referencia		between :dt_inicial_p and :dt_final_p '|| pls_util_pck.enter_w;
	
	dado_bind_p := sql_pck.bind_variable(':dt_inicial_p', lote_mens_p.dt_inicio_comp, dado_bind_p);
	dado_bind_p := sql_pck.bind_variable(':dt_final_p', lote_mens_p.dt_fim_comp, dado_bind_p);
end if;
			

if (ie_tipo_pagador_w in ('PF', 'PJ')) then

	ds_retorno_w	:= ds_retorno_w||	'and	exists(	select	1 '|| pls_util_pck.enter_w ||
						'		from	pls_contrato_pagador	x '|| pls_util_pck.enter_w ||
						'		where	x.nr_sequencia		= a.nr_seq_pagador '|| pls_util_pck.enter_w;
	if (ie_tipo_pagador_w = 'PF') then
	
		ds_retorno_w	:= ds_retorno_w||	'		and	x.cd_pessoa_fisica		is not null '|| pls_util_pck.enter_w;
		
	elsif (ie_tipo_pagador_w = 'PF') then
	
		ds_retorno_w	:= ds_retorno_w||	'		and	x.cd_cgc		is not null '|| pls_util_pck.enter_w;
	end if;
	
	ds_retorno_w	:= ds_retorno_w||	'	) '|| pls_util_pck.enter_w;
end if;


if (ie_mensalidade_cancelada_w = 'N') then

	ds_retorno_w	:= ds_retorno_w||	'and	a.ie_cancelamento 		is null '|| pls_util_pck.enter_w;
end if;



-- O status ja e preparado no formato IN

ds_retorno_w	:= ds_retorno_w||	'and	d.ie_status 			in ('||ds_status_lote_mens_w||') '|| pls_util_pck.enter_w;

-- Gravar log

CALL pls_dados_atuariais_pck.gravar_log(	lote_mens_p.nr_sequencia,
					lote_mens_p.nr_seq_mens_regra, 
					lote_mens_p.ie_tipo_arquivo, 
					ds_retorno_w, 
					dado_bind_p := pls_dados_atuariais_pck.obter_bind_log(dado_bind_p), 
					dbms_utility.format_error_backtrace, 
					nm_usuario_p);
	
return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_dados_atuariais_pck.retorna_sql_dados_mens ( lote_mens_p INOUT lote_atuarial, dado_bind_p INOUT sql_pck.t_dado_bind, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
