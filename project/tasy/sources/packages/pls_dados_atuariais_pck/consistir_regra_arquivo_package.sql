-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_dados_atuariais_pck.consistir_regra_arquivo ( nr_seq_regra_p pls_atuarial_arq_regra.nr_sequencia%type, ds_erro_sql_p INOUT text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Realiza as consistencias da regra de geracao do arquivo.

	Primeiro verifica a quantidade de "Registo", depois valida a estrutura dos campos,
	e por fim valida se o SQL montado como resultado final possui uma sintax valida.

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

qt_w		integer;


BEGIN

ds_erro_sql_p	:= null;



-- Marca como inconsistente

CALL pls_dados_atuariais_pck.alt_consistencia_regra_arq(nr_seq_regra_p, 'N');
commit;


select	count(1)
into STRICT	qt_w
from	pls_atuarial_arq_reg	a
where	a.nr_seq_regra		= nr_seq_regra_p;

if (coalesce(qt_w,0) > 1) then

	-- A quantidade maxima de informacoes em "Registros" e 1

	CALL wheb_mensagem_pck.exibir_mensagem_abort(896836);
end if;

-- Valida a estrutura dos campos configurados.

CALL pls_dados_atuariais_pck.consistir_regra_campo_arq(nr_seq_regra_p);

-- Valida agora a sintax SQL

ds_erro_sql_p := pls_dados_atuariais_pck.consistir_sql_regra_arq(nr_seq_regra_p, ds_erro_sql_p);


-- Marca como consistente.

-- Esta deve ser a ultima etapa da validacao, pois se chegou ate aqui, nao caiu em message_abort ou a variave ds_erro_sql_p

-- estiver null, quer dizer que nao encontrou nenhuma inconsistencia

if (coalesce(ds_erro_sql_p::text, '') = '') then
	
	CALL pls_dados_atuariais_pck.alt_consistencia_regra_arq(nr_seq_regra_p, 'S');
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_dados_atuariais_pck.consistir_regra_arquivo ( nr_seq_regra_p pls_atuarial_arq_regra.nr_sequencia%type, ds_erro_sql_p INOUT text) FROM PUBLIC;
