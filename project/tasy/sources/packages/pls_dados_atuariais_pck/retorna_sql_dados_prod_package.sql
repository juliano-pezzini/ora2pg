-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_dados_atuariais_pck.retorna_sql_dados_prod ( lote_prod_p INOUT lote_atuarial, dado_bind_p INOUT sql_pck.t_dado_bind, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o sql dinamico com os filtro necessarios para os dados dos produtos,
	bem como gera o bind dos parametros

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_retorno_w		varchar(32000):= '';

ie_beneficiario_ativo_w	pls_atu_plano_regra.ie_beneficiario_ativo%type;
qt_regulamentacao_w	integer;
qt_operacao_w		integer;
qt_situacao_w		integer;
qt_tipo_produto_w	integer;
ds_in_regulamentacao_w	varchar(1000);
ds_in_operacao_w	varchar(1000);
ds_in_situacao_w	varchar(1000);
ds_in_tipo_produto_w	varchar(1000);


BEGIN

-- Carrega as inf dos filtros

select	coalesce(max(ie_beneficiario_ativo), 'S'),

	-- Contagem para ver quantos filtros com regulamentacao existem

	max((	select	count(1)
		from	pls_atu_plano_regra_plano	x
		where	x.nr_seq_regra		= lote_prod_p.nr_seq_plano_regra
		and	(x.ie_regulamentacao IS NOT NULL AND x.ie_regulamentacao::text <> '') )),
		
	-- Contagem para ver quantos filtros com tipo de operacao existem

	max((	select	count(1)
		from	pls_atu_plano_regra_plano	x
		where	x.nr_seq_regra		= lote_prod_p.nr_seq_plano_regra
		and	(x.ie_tipo_operacao IS NOT NULL AND x.ie_tipo_operacao::text <> '') )),
		
	-- Contagem para ver quantos filtros com situacao existem

	max((	select	count(1)
		from	pls_atu_plano_regra_plano	x
		where	x.nr_seq_regra	= lote_prod_p.nr_seq_plano_regra
		and	(x.ie_situacao IS NOT NULL AND x.ie_situacao::text <> '') )),
		
	-- Contagem para ver quantos filtros com tipo do produto existem

	max((	select	count(1)
		from	pls_atu_plano_regra_plano	x
		where	x.nr_seq_regra		= lote_prod_p.nr_seq_plano_regra
		and	(x.nr_seq_tipo_prod IS NOT NULL AND x.nr_seq_tipo_prod::text <> '') )),
		
	-- Carrega os valores do da regulamentacao ja proprio para o formato IN

	max((WITH RECURSIVE cte AS (
select	substr(''''||t.ie_regulamentacao,3)||''''
		from (	select	x.ie_regulamentacao,
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_regulamentacao) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.ie_regulamentacao IS NOT NULL AND x.ie_regulamentacao::text <> '')
			group by x.ie_regulamentacao, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
select	c. || ''',' || substr(''''||t.ie_regulamentacao,3)||''''
		from (	select	x.ie_regulamentacao, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_regulamentacao) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.ie_regulamentacao IS NOT NULL AND x.ie_regulamentacao::text <> '')
			group by x.ie_regulamentacao, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq)

) SELECT * FROM cte WHERE seq	= cnt;
)),
		
	-- Carrega os valores do tipo de operacao ja proprio para o formato IN

	max((WITH RECURSIVE cte AS (
(select	substr(''''||t.ie_tipo_operacao,3)||''''
		from (	select	x.ie_tipo_operacao, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_operacao) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.ie_tipo_operacao IS NOT NULL AND x.ie_tipo_operacao::text <> '')
			group by x.ie_tipo_operacao, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
(select	c. || ''',' || substr(''''||t.ie_tipo_operacao,3)||''''
		from (	select	x.ie_tipo_operacao, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_operacao) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.ie_tipo_operacao IS NOT NULL AND x.ie_tipo_operacao::text <> '')
			group by x.ie_tipo_operacao, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq))

) SELECT * FROM cte WHERE seq	= cnt;
)),
		
	-- Carrega os valores da situacao ja proprio para o formato IN

	max((WITH RECURSIVE cte AS (
(select	substr(''''||t.ie_situacao,3)||''''
		from (	select	x.ie_situacao, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_situacao) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.ie_situacao IS NOT NULL AND x.ie_situacao::text <> '')
			group by x.ie_situacao, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
(select	c. || ''',' || substr(''''||t.ie_situacao,3)||''''
		from (	select	x.ie_situacao, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_situacao) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.ie_situacao IS NOT NULL AND x.ie_situacao::text <> '')
			group by x.ie_situacao, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq))

) SELECT * FROM cte WHERE seq	= cnt;
)),

	-- Carrega os valores do tipo do produto ja proprio para o formato IN

	max((WITH RECURSIVE cte AS (
(select	substr(''''||t.nr_seq_tipo_prod,3)||''''
		from (	select	x.nr_seq_tipo_prod, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.nr_seq_tipo_prod) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.nr_seq_tipo_prod IS NOT NULL AND x.nr_seq_tipo_prod::text <> '')
			group by x.nr_seq_tipo_prod, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
(select	c. || ''',' || substr(''''||t.nr_seq_tipo_prod,3)||''''
		from (	select	x.nr_seq_tipo_prod, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.nr_seq_tipo_prod) seq
			from	pls_atu_plano_regra_plano	x
			where	x.nr_seq_regra			= lote_prod_p.nr_seq_plano_regra
			and	(x.nr_seq_tipo_prod IS NOT NULL AND x.nr_seq_tipo_prod::text <> '')
			group by x.nr_seq_tipo_prod, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq))

) SELECT * FROM cte WHERE seq	= cnt;
))

into STRICT	ie_beneficiario_ativo_w,
	qt_regulamentacao_w,
	qt_operacao_w,
	qt_situacao_w,
	qt_tipo_produto_w,
	ds_in_regulamentacao_w,
	ds_in_operacao_w,
	ds_in_situacao_w,
	ds_in_tipo_produto_w
from	pls_atu_plano_regra	a
where	a.nr_sequencia		= lote_prod_p.nr_seq_plano_regra;

ds_retorno_w	:= ds_retorno_w||	'insert into pls_atu_plano_item(nr_sequencia, '|| pls_util_pck.enter_w ||
					'				dt_atualizacao, '|| pls_util_pck.enter_w ||
					'				dt_atualizacao_nrec, '|| pls_util_pck.enter_w ||
					'				ie_abrangencia, '|| pls_util_pck.enter_w ||
					'				ie_acomodacao, '|| pls_util_pck.enter_w ||
					'				ie_coparticipacao, '|| pls_util_pck.enter_w ||
					'				ie_franquia, '|| pls_util_pck.enter_w ||
					'				ie_segmentacao, '|| pls_util_pck.enter_w ||
					'				ie_tipo_contratacao, '|| pls_util_pck.enter_w ||
					'				nm_usuario, '|| pls_util_pck.enter_w ||
					'				nm_usuario_nrec, '|| pls_util_pck.enter_w ||
					'				nr_protocolo_ans, '|| pls_util_pck.enter_w ||
					'				nr_seq_lote, '|| pls_util_pck.enter_w ||
					'				nr_seq_plano) '|| pls_util_pck.enter_w ||
					'select	pls_atu_plano_item_seq.nextVal nr_sequencia, '|| pls_util_pck.enter_w ||
					'	t.dt_atualizacao, '|| pls_util_pck.enter_w ||
					'	t.dt_atualizacao_nrec, '|| pls_util_pck.enter_w ||
					'	t.ie_abrangencia, '|| pls_util_pck.enter_w ||
					'	t.ie_acomodacao, '|| pls_util_pck.enter_w ||
					'	t.ie_coparticipacao, '|| pls_util_pck.enter_w ||
					'	t.ie_franquia, '|| pls_util_pck.enter_w ||
					'	t.ie_segmentacao, '|| pls_util_pck.enter_w ||
					'	t.ie_tipo_contratacao, '|| pls_util_pck.enter_w ||
					'	t.nm_usuario, '|| pls_util_pck.enter_w ||
					'	t.nm_usuario_nrec, '|| pls_util_pck.enter_w ||
					'	t.nr_protocolo_ans, '|| pls_util_pck.enter_w ||
					'	t.nr_seq_lote, '|| pls_util_pck.enter_w ||
					'	t.nr_seq_plano '|| pls_util_pck.enter_w ||
					'from (	select	sysdate dt_atualizacao, '|| pls_util_pck.enter_w ||
					'		sysdate dt_atualizacao_nrec, '|| pls_util_pck.enter_w ||
					'		a.ie_abrangencia, '|| pls_util_pck.enter_w ||
					'		a.ie_acomodacao, '|| pls_util_pck.enter_w ||
					'		a.ie_coparticipacao, '|| pls_util_pck.enter_w ||
					'		a.ie_franquia, '|| pls_util_pck.enter_w ||
					'		a.ie_segmentacao, '|| pls_util_pck.enter_w ||
					'		a.ie_tipo_contratacao, '|| pls_util_pck.enter_w ||
					'		:nm_usuario_p nm_usuario, '|| pls_util_pck.enter_w ||
					'		:nm_usuario_p nm_usuario_nrec, '|| pls_util_pck.enter_w ||
					'		a.nr_protocolo_ans, '|| pls_util_pck.enter_w ||
					'		:nr_seq_lote nr_seq_lote, '|| pls_util_pck.enter_w ||
					'		a.nr_sequencia nr_seq_plano '|| pls_util_pck.enter_w;
					
dado_bind_p := sql_pck.bind_variable(':nm_usuario_p', nm_usuario_p, dado_bind_p);
dado_bind_p := sql_pck.bind_variable(':nr_seq_lote', lote_prod_p.nr_sequencia, dado_bind_p);

-- Apenas beneficiarios ativos no periodo - por questao de performance, aqui e apenas levantada os dados do filtro, que serao aplicados mais a frente

if (ie_beneficiario_ativo_w = 'S') then
					
	ds_retorno_w	:= ds_retorno_w||	'		,(	select	count(1) '|| pls_util_pck.enter_w ||
						'			from	pls_segurado		x '|| pls_util_pck.enter_w ||
						'			where	x.nr_seq_plano		= a.nr_sequencia '|| pls_util_pck.enter_w ||
						'			and	x.dt_cancelamento	is null '|| pls_util_pck.enter_w ||
						'			and	x.dt_liberacao		is not null '|| pls_util_pck.enter_w;
	


	if (lote_prod_p.dt_inicio_comp IS NOT NULL AND lote_prod_p.dt_inicio_comp::text <> '') then
		
		ds_retorno_w	:= ds_retorno_w||	'			and	x.dt_contratacao	<= :dt_final_p '|| pls_util_pck.enter_w;
		dado_bind_p := sql_pck.bind_variable(':dt_inicial_p', lote_prod_p.dt_inicio_comp, dado_bind_p);
	end if;
		
	ds_retorno_w	:= ds_retorno_w||	'			and	x.dt_rescisao is null) qt_benef_sem_resc, '|| pls_util_pck.enter_w ||
						'		(	select	count(1) '|| pls_util_pck.enter_w ||
						'			from	pls_segurado		x '|| pls_util_pck.enter_w ||
						'			where	x.nr_seq_plano		= a.nr_sequencia '|| pls_util_pck.enter_w ||
						'			and	x.dt_cancelamento	is null '|| pls_util_pck.enter_w ||
						'			and	x.dt_liberacao		is not null '|| pls_util_pck.enter_w;
						
	if (lote_prod_p.dt_inicio_comp IS NOT NULL AND lote_prod_p.dt_inicio_comp::text <> '') then

		ds_retorno_w	:= ds_retorno_w||	'			and	x.dt_contratacao	<= :dt_final_p '|| pls_util_pck.enter_w ||
							'			and	x.dt_rescisao		>= :dt_inicial_p '|| pls_util_pck.enter_w;
		dado_bind_p := sql_pck.bind_variable(':dt_inicial_p', lote_prod_p.dt_inicio_comp, dado_bind_p);
		dado_bind_p := sql_pck.bind_variable(':dt_final_p', lote_prod_p.dt_fim_comp, dado_bind_p);
		
	end if;


	ds_retorno_w	:= ds_retorno_w||	'		) qt_benef_com_resc '|| pls_util_pck.enter_w;
	
end if; -- Fim Apenas beneficiarios ativos no periodo


ds_retorno_w	:= ds_retorno_w||	'	from	pls_plano		a '|| pls_util_pck.enter_w ||
					'	where	a.cd_estabelecimento	= :cd_estabelecimento '|| pls_util_pck.enter_w;
dado_bind_p := sql_pck.bind_variable(':cd_estabelecimento', lote_prod_p.cd_estabelecimento, dado_bind_p);

-- regulamentacao

if	(qt_regulamentacao_w > 0 AND ds_in_regulamentacao_w IS NOT NULL AND ds_in_regulamentacao_w::text <> '') then

	ds_retorno_w	:= ds_retorno_w||	'	and	a.ie_regulamentacao	in ('||ds_in_regulamentacao_w||') '|| pls_util_pck.enter_w;
end if;

-- operacao

if	(qt_operacao_w > 0 AND ds_in_operacao_w IS NOT NULL AND ds_in_operacao_w::text <> '') then

	ds_retorno_w	:= ds_retorno_w||	'	and	a.ie_tipo_operacao	in ('||ds_in_operacao_w||') '|| pls_util_pck.enter_w;
end if;

-- situacao

if	(qt_situacao_w > 0 AND ds_in_situacao_w IS NOT NULL AND ds_in_situacao_w::text <> '') then

	ds_retorno_w	:= ds_retorno_w||	'	and	a.ie_situacao	in ('||ds_in_situacao_w||') '|| pls_util_pck.enter_w;
end if;

-- tipo produto

if	(qt_tipo_produto_w > 0 AND ds_in_tipo_produto_w IS NOT NULL AND ds_in_tipo_produto_w::text <> '') then

	ds_retorno_w	:= ds_retorno_w||	'	and	a.nr_seq_tipo_prod	in ('||ds_in_tipo_produto_w||') '|| pls_util_pck.enter_w;
end if;



ds_retorno_w	:= ds_retorno_w||	'	) t '|| pls_util_pck.enter_w;



-- Apenas beneficiarios ativos no periodo - aqui e aplicado este filtro de fato, no nivel mais alto da consulta, e normalmente sera o ultimo filtro

if (ie_beneficiario_ativo_w = 'S') then

	ds_retorno_w	:= ds_retorno_w||	'where	t.qt_benef_sem_resc + t.qt_benef_com_resc > 0 '|| pls_util_pck.enter_w;
end if;
					
-- Gravar log

CALL pls_dados_atuariais_pck.gravar_log(	lote_prod_p.nr_sequencia,
					lote_prod_p.nr_seq_plano_regra, 
					lote_prod_p.ie_tipo_arquivo, 
					ds_retorno_w, 
					dado_bind_p := pls_dados_atuariais_pck.obter_bind_log(dado_bind_p), 
					dbms_utility.format_error_backtrace, 
					nm_usuario_p);
	
return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_dados_atuariais_pck.retorna_sql_dados_prod ( lote_prod_p INOUT lote_atuarial, dado_bind_p INOUT sql_pck.t_dado_bind, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
