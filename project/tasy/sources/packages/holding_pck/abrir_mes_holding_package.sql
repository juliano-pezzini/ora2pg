-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE holding_pck.abrir_mes_holding (nm_usuario_p empresa.nm_usuario%type, nr_sequencia_p ctb_mes_ref.nr_sequencia%type) AS $body$
DECLARE


nr_sequencia_hold_w         empresa.cd_empresa%type;
cd_empresa_w                empresa.nm_usuario%type;
nr_seq_mes_emp_w            ctb_mes_ref.nr_sequencia%type;
dt_referencia_w             ctb_mes_ref.dt_referencia%type;
dt_abt_mes_hold_w           ctb_mes_ref.dt_abertura%type;
dt_fec_mes_hold_w           ctb_mes_ref.dt_fechamento%type;
dt_abt_mes_emp_w            ctb_mes_ref.dt_abertura%type;
dt_fec_mes_emp_w            ctb_mes_ref.dt_fechamento%type;
ds_erro_w                   varchar(4000);
ds_empresa_w                varchar(255);
ds_empresas_w               varchar(255);

c010 CURSOR(nr_seq_grupo_pc grupo_emp_estrutura.nr_seq_grupo%type) FOR
SELECT	a.cd_empresa
from	grupo_emp_estrutura a
where	a.nr_seq_grupo = nr_seq_grupo_pc
and		a.ie_tipo_estrutura = 2
order by 1;

c020 CURSOR(nr_sequencia_hold_pc  grupo_emp_estrutura.nr_seq_grupo%type,
	        dt_referencia_pc  ctb_mes_ref.dt_referencia%type) FOR
SELECT  a.cd_empresa
from	ctb_mes_ref b,
        grupo_emp_estrutura a
where	a.cd_empresa = b.cd_empresa
and		a.nr_seq_grupo = nr_sequencia_hold_pc
and		a.ie_tipo_estrutura = 2
and		b.dt_referencia = dt_referencia_pc
and		(b.dt_fechamento IS NOT NULL AND b.dt_fechamento::text <> '');

c010_w c010%rowtype;
c020_w c020%rowtype;


BEGIN
    ds_erro_w := null;
    begin
        select  a.dt_referencia,
                a.cd_empresa,
                dt_abertura,
                dt_fechamento,
                holding_pck.get_grupo_emp_estrut(a.cd_empresa)
        into STRICT    dt_referencia_w,
                cd_empresa_w,
                dt_abt_mes_hold_w,
                dt_fec_mes_hold_w,
                nr_sequencia_hold_w
        from    ctb_mes_ref a
        where   a.nr_sequencia = nr_sequencia_p;
    exception
    when no_data_found then
        nr_sequencia_hold_w := null;
    end;

    if (nr_sequencia_hold_w IS NOT NULL AND nr_sequencia_hold_w::text <> '') then
        if (dt_fec_mes_hold_w IS NOT NULL AND dt_fec_mes_hold_w::text <> '') then
            CALL ctb_abrir_fechar_mes(nr_sequencia_p, 'N', nm_usuario_p);
        end if;

        select  a.dt_fechamento
        into STRICT    dt_fec_mes_hold_w
        from    ctb_mes_ref a
        where   a.nr_sequencia = nr_sequencia_p;

        if (coalesce(dt_fec_mes_hold_w::text, '') = '') then 
            open c010(nr_sequencia_hold_w);
                loop
                fetch c010 into
                    c010_w;
                EXIT WHEN NOT FOUND; /* apply on c010 */
                        begin
                            select  a.nr_sequencia,
                                    a.dt_fechamento
                            into STRICT    nr_seq_mes_emp_w,
                                    dt_fec_mes_emp_w
                            from    ctb_mes_ref a
                            where   a.cd_empresa = c010_w.cd_empresa
                            and     a.dt_referencia = dt_referencia_w;
                        exception
                        when no_data_found then
                            dt_fec_mes_emp_w := null;

                            select  a.nm_razao_social
                            into STRICT    ds_empresa_w
                            from    empresa a
                            where   a.cd_empresa = c010_w.cd_empresa;
                            /* Nao foi possivel localizar o mas #@dt_referencia_w#@ da empresa #@ds_empresa_w#@. Verifique se o mas esta criado nesta empresa. */


                            ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(1148141, 'dt_referencia_w=' || to_char(dt_referencia_w,'mm/yyyy') || ';ds_empresa_w=' || ds_empresa_w);
                        when too_many_rows then
                            dt_fec_mes_emp_w := null;
                            /* Foi localizado mais de um mes #@dt_referencia_w#@ para a empresa #@ds_empresa_w#@. Ajuste o cadastro dos meses dessa empresa para utilizar esta opcao. */


                            ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(1148144, 'dt_referencia_w=' || to_char(dt_referencia_w,'mm/yyyy') || ';ds_empresa_w=' || ds_empresa_w);
                        end;

                        if (dt_fec_mes_emp_w IS NOT NULL AND dt_fec_mes_emp_w::text <> '') then
                            begin
                                CALL ctb_abrir_fechar_mes(nr_seq_mes_emp_w, 'N', nm_usuario_p);
                            exception
                            when others then
                                ds_erro_w := ds_erro_w || chr(13) || chr(10) || substr(sqlerrm(SQLSTATE),1,1000);
                            end;
                        end if;
                end loop;
            close C010;

            if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
                /* Exibe a mensagem de erro de todos os meses/empresas que deram problema */


                CALL wheb_mensagem_pck.exibir_mensagem_abort(279953, 'ds_erro=' || ds_erro_w);
            end if;
        else
            select  a.nm_razao_social
            into STRICT    ds_empresa_w
            from    empresa a
            where   a.cd_empresa = cd_empresa_w;
            /* Nao foi possivel abrir o mes #@mes_aberto_w#@ da(s) empresa(s) #@ds_empresas_w#@. Verifique as liberacoes e validacoes para abertura de meses nestas empresas. */


            CALL wheb_mensagem_pck.exibir_mensagem_abort(1148146, 'mes_aberto_w=' || to_char(dt_referencia_w,'mm/yyyy') || ';ds_empresas_w=' || ds_empresa_w);
        end if;

        if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
        end if;

        ds_empresas_w := null;
        open c020(nr_sequencia_hold_pc => nr_sequencia_hold_w,
	                dt_referencia_pc => dt_referencia_w);
            loop
            fetch c020 into
                c020_w;
            EXIT WHEN NOT FOUND; /* apply on c020 */
                select  a.nm_razao_social
                into STRICT    ds_empresa_w
                from    empresa a
                where   a.cd_empresa = c020_w.cd_empresa;

                ds_empresas_w := ds_empresas_w || chr(13)||chr(10) || ds_empresa_w;
            end loop;
        close C020;

        if (ds_empresas_w IS NOT NULL AND ds_empresas_w::text <> '') then
            /* Nao foi possivel abrir o mes #@mes_aberto_w#@ da(s) empresa(s) #@ds_empresas_w#@. Verifique as liberacoes e validacoes para abertura de meses nestas empresas. */


            CALL wheb_mensagem_pck.exibir_mensagem_abort(1148146, 'mes_aberto_w=' || to_char(dt_referencia_w,'mm/yyyy') || ';ds_empresas_w=' || ds_empresas_w);
        end if;
    else
        /* Nao foi possivel localizar o grupo de empresas para a empresa selecionada. Verifique se esta empresa pertence a um grupo de empresas para o periodo atual. */


        CALL wheb_mensagem_pck.exibir_mensagem_abort(1148145);
    end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE holding_pck.abrir_mes_holding (nm_usuario_p empresa.nm_usuario%type, nr_sequencia_p ctb_mes_ref.nr_sequencia%type) FROM PUBLIC;
