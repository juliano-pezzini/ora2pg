-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE audc_auditoria_concorrente_pck.audc_valida_eleg_atendimento ( nr_seq_regra_eleg_p audc_regra_elegibilidade.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, ie_tipo_guia_p audc_atendimento_imp.ie_tipo_guia%type, ie_tipo_atendimento_p audc_atendimento_imp.cd_tipo_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, ie_gera_regra_p INOUT text ) AS $body$
DECLARE



ie_gera_regra_w		varchar(1) := 'S';
ie_grupo_valido_w 	varchar(1) := 'S';

nr_seq_segurado_w	pls_segurado.nr_sequencia%type;
dt_autorizacao_w	pls_guia_plano.dt_autorizacao%type;
qt_dias_internado_w	integer := 0;
qt_dias_reinternacao_w	integer := 0;
qt_idade_w		integer;


C01 CURSOR( nr_seq_regra_eleg_pc	audc_regra_elegibilidade.nr_sequencia%type) FOR
	SELECT  ie_tipo_guia,
       		ie_tipo_atendimento,
        	qt_dias_internado,
       		qt_dias_reinternacao,
       		qt_idade_benef_inicial,
        	qt_idade_benef_final
	from    audc_regra_eleg_atend
	where   nr_seq_regra_eleg = nr_seq_regra_eleg_pc
	and     ie_situacao = 'A';


BEGIN

for c01_w in C01( nr_seq_regra_eleg_p ) loop

	ie_gera_regra_w := 'N';


	--Valida os dados da guia

	if	( ((c01_w.ie_tipo_guia IS NOT NULL AND c01_w.ie_tipo_guia::text <> '') and c01_w.ie_tipo_guia = ie_tipo_guia_p) and ( (c01_w.ie_tipo_atendimento IS NOT NULL AND c01_w.ie_tipo_atendimento::text <> '') and c01_w.ie_tipo_atendimento = ie_tipo_atendimento_p )  ) then
		ie_gera_regra_w := 'S';
	elsif ( (c01_w.ie_tipo_guia IS NOT NULL AND c01_w.ie_tipo_guia::text <> '') and c01_w.ie_tipo_guia = ie_tipo_guia_p  and coalesce(c01_w.ie_tipo_atendimento::text, '') = '' ) then
		ie_gera_regra_w := 'S';
	elsif ( (c01_w.ie_tipo_atendimento IS NOT NULL AND c01_w.ie_tipo_atendimento::text <> '') and c01_w.ie_tipo_atendimento = ie_tipo_atendimento_p and coalesce(c01_w.ie_tipo_guia::text, '') = '' ) then
		ie_gera_regra_w := 'S';
	end if;


	--Valida a idade do beneficiario

	if ( (c01_w.qt_idade_benef_inicial IS NOT NULL AND c01_w.qt_idade_benef_inicial::text <> '') and c01_w.qt_idade_benef_inicial > 0 ) then
		select	obter_idade(a.dt_nascimento, clock_timestamp(), 'A')
		into STRICT	qt_idade_w
		from	pessoa_fisica a
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;


		if ( c01_w.qt_idade_benef_inicial <= qt_idade_w and coalesce(c01_w.qt_idade_benef_final::text, '') = '' ) then
			ie_gera_regra_w := 'S';
		elsif ( c01_w.qt_idade_benef_inicial <= qt_idade_w and (c01_w.qt_idade_benef_final IS NOT NULL AND c01_w.qt_idade_benef_final::text <> '') and  c01_w.qt_idade_benef_final >= qt_idade_w ) then
			ie_gera_regra_w := 'S';
		end if;
	end if;



	--Valida dados do atendimento

	if ( (c01_w.qt_dias_internado IS NOT NULL AND c01_w.qt_dias_internado::text <> '') or (c01_w.qt_dias_reinternacao IS NOT NULL AND c01_w.qt_dias_reinternacao::text <> '') ) then

		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
			select  a.dt_autorizacao,
        			trunc(clock_timestamp() - a.dt_autorizacao) qt_dias_internacao,
			        a.nr_seq_segurado
			into STRICT	dt_autorizacao_w,
				qt_dias_internado_w,
				nr_seq_segurado_w
			from    pls_guia_plano a
			where   a.nr_sequencia = nr_seq_guia_p;

			begin
				select  trunc(dt_autorizacao_w - a.dt_autorizacao)
				into STRICT	qt_dias_reinternacao_w
				from    pls_guia_plano a
				where   a.nr_sequencia = (SELECT max(b.nr_sequencia)
										from    pls_guia_plano b
										where   b.nr_seq_segurado = nr_seq_segurado_w
										and     (b.dt_autorizacao IS NOT NULL AND b.dt_autorizacao::text <> '')
										and     b.ie_tipo_guia = '1'
										and     b.nr_sequencia <> nr_seq_guia_p);
			exception when no_data_found then
				qt_dias_reinternacao_w := 0;
			end;
		end if;

		if ( c01_w.qt_dias_internado > 0 and qt_dias_internado_w >= c01_w.qt_dias_internado  ) then
			ie_gera_regra_w := 'S';
		end if;

		if ( c01_w.qt_dias_reinternacao > 0 and qt_dias_reinternacao_w <= c01_w.qt_dias_reinternacao  ) then
			ie_gera_regra_w := 'S';
		end if;

	end if;
end loop;

ie_gera_regra_p := ie_gera_regra_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE audc_auditoria_concorrente_pck.audc_valida_eleg_atendimento ( nr_seq_regra_eleg_p audc_regra_elegibilidade.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, ie_tipo_guia_p audc_atendimento_imp.ie_tipo_guia%type, ie_tipo_atendimento_p audc_atendimento_imp.cd_tipo_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, ie_gera_regra_p INOUT text ) FROM PUBLIC;
