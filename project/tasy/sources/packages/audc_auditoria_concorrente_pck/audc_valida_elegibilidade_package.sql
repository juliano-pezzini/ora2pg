-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE audc_auditoria_concorrente_pck.audc_valida_elegibilidade ( nr_seq_lote_atend_imp_p audc_lote_atendimento_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_gera_elegibilidade_w varchar(1) := 'N';

C01 CURSOR(  nr_seq_lote_atend_imp_pc	audc_lote_atendimento_imp.nr_sequencia%type ) FOR

	SELECT  a.nr_sequencia,
		a.cd_guia_operadora,
		a.cd_cartao_beneficiario,
		a.nr_seq_prestador_solic,
		a.nr_seq_segurado,
		a.nr_seq_guia,
        	a.cd_tipo_atendimento,
        	a.ie_tipo_guia,
		(SELECT max(b.cd_pessoa_fisica) from pls_segurado b where b.nr_sequencia = a.nr_seq_segurado) cd_pessoa_fisica
	from    audc_atendimento_imp a
	where	a.nr_seq_lote_atend_imp = nr_seq_lote_atend_imp_pc
	and	not exists (select 1 from audc_mensagem_imp b where b.nr_seq_audc_atend_imp = a.nr_sequencia);


C02 CURSOR FOR
	SELECT  a.nr_sequencia
	from    audc_regra_elegibilidade a
	where   dt_inicio_vigencia <= clock_timestamp()
	and (coalesce(dt_fim_vigencia::text, '') = '' or dt_fim_vigencia > clock_timestamp());


BEGIN


/*Comando utilizado para quando for necessario consistir novamente o mesmo lote*/


delete from audc_atend_elegibilidade b
where	exists (SELECT 1 from audc_atendimento_imp a where b.nr_seq_audc_atend_imp = a.nr_sequencia and a.nr_seq_lote_atend_imp = nr_seq_lote_atend_imp_p);

update 	audc_atendimento_imp
set 	ie_status_auditoria = 'N'
where	nr_seq_lote_atend_imp = nr_seq_lote_atend_imp_p;

for c01_w in C01( nr_seq_lote_atend_imp_p ) loop

	for c02_w in C02 loop

		ie_gera_elegibilidade_w := 'N';

		/*Valida regra do prestador e grupo de prestador*/


		ie_gera_elegibilidade_w  := audc_auditoria_concorrente_pck.audc_valida_eleg_prestador(c02_w.nr_sequencia, c01_w.nr_seq_prestador_solic, ie_gera_elegibilidade_w );

		if ( ie_gera_elegibilidade_w = 'S') then
			/*Valida regra promocao a saude */


			ie_gera_elegibilidade_w  := audc_auditoria_concorrente_pck.audc_valida_eleg_promoprev(c02_w.nr_sequencia, c01_w.cd_pessoa_fisica, ie_gera_elegibilidade_w );
		end if;

		if ( ie_gera_elegibilidade_w = 'S') then
			/*Valida regra com dados do atendimento */


			ie_gera_elegibilidade_w  := audc_auditoria_concorrente_pck.audc_valida_eleg_atendimento(c02_w.nr_sequencia, c01_w.nr_seq_guia, c01_w.ie_tipo_guia, c01_w.cd_tipo_atendimento, c01_w.cd_pessoa_fisica, ie_gera_elegibilidade_w );
		end if;

		if ( ie_gera_elegibilidade_w = 'S') then
			/*Valida regra por procedimentos */


			ie_gera_elegibilidade_w := audc_auditoria_concorrente_pck.audc_valida_eleg_procedimento(c02_w.nr_sequencia, c01_w.nr_sequencia, ie_gera_elegibilidade_w);
		end if;

		if ( ie_gera_elegibilidade_w = 'S') then
			/*Valida regra por material */


			ie_gera_elegibilidade_w := audc_auditoria_concorrente_pck.audc_valida_eleg_material(c02_w.nr_sequencia, c01_w.nr_sequencia, ie_gera_elegibilidade_w);
		end if;


		if ( ie_gera_elegibilidade_w = 'S' ) then
			insert into audc_atend_elegibilidade(
		 		nr_sequencia, dt_atualizacao, nm_usuario,
   				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_audc_atend_imp,
 				nr_seq_regra_eleg)
			values ( nextval('audc_atend_elegibilidade_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(),nm_usuario_p, c01_w.nr_sequencia,
				c02_w.nr_sequencia);

			update	audc_atendimento_imp
			set	ie_status_auditoria = 'S',
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
			where	nr_sequencia = c01_w.nr_sequencia;
		end if;
	end loop;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE audc_auditoria_concorrente_pck.audc_valida_elegibilidade ( nr_seq_lote_atend_imp_p audc_lote_atendimento_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
