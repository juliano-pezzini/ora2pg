-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE audc_auditoria_concorrente_pck.audc_gerar_guias_imp ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_lote_imp_p audc_lote_atendimento_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Pontos de atencao: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


C01 CURSOR(  	nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type ) FOR
		SELECT  a.nr_sequencia, a.nr_seq_segurado, a.nr_seq_prestador,
       			ie_tipo_guia, cd_guia, cd_guia_prestador,
		       	dt_internacao_sugerida, a.ie_tipo_atend_tiss,
        		cd_medico_solicitante, cd_guia_principal, dt_validade_senha,
		        ie_recem_nascido, a.cd_estabelecimento, 
        		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'CR'),1,255) cd_usuario_plano,
        		substr(a.ds_indicacao_clinica, 0 , 500) ds_indicacao_clinica,
		        CASE WHEN(SELECT count(1) from paciente_home_care c where coalesce(c.dt_final::text, '') = '' and c.cd_pessoa_fisica = b.cd_pessoa_fisica)=1 THEN 'S'  ELSE 'N' END  ie_home_care,
			a.ie_carater_internacao, (select  max(coalesce(b.cd_tiss,b.cd_clinica)) from    pls_clinica b where   b.nr_sequencia = a.nr_seq_clinica) cd_tipo_internacao
		from    pls_guia_plano a,
        		pls_segurado b
		where   a.nr_seq_segurado = b.nr_sequencia
		and     a.nr_sequencia =  nr_seq_guia_pc;

C02 CURSOR(  	nr_seq_guia_pc		pls_guia_plano.nr_sequencia%type) FOR
		
		SELECT  cd_material, nr_seq_material, qt_solicitada,
		        qt_autorizada
		from    pls_guia_plano_mat a
		where   nr_seq_guia =  nr_seq_guia_pc;

C03 CURSOR(  	nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type ) FOR
		
		SELECT  cd_procedimento, ie_origem_proced, qt_solicitada,
       			qt_autorizada
		from    pls_guia_plano_proc a
		where   nr_seq_guia = nr_seq_guia_pc;


nr_seq_audc_atend_w 	audc_atendimento_imp.nr_sequencia%type;
		
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '' AND nr_seq_lote_imp_p IS NOT NULL AND nr_seq_lote_imp_p::text <> '') then

	 for c01_w in C01( nr_seq_guia_p ) loop		
	
		insert into audc_atendimento_imp(
			nr_sequencia, ie_tipo_guia, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			cd_guia_prestador, cd_guia_principal, cd_guia_operadora,
			dt_validade_senha, ie_recem_nascido,
			ie_carater_atend, cd_tipo_internacao, cd_tipo_atendimento,
			dt_inicio_internacao, dt_alta_internacao, cd_motivo_alta,
			nr_seq_segurado, nr_seq_prestador_solic, nr_seq_prestador_exec,
			cd_estabelecimento, nr_seq_guia, nr_seq_lote_atend_imp,
			cd_cartao_beneficiario, cd_medico_solicitante, ds_indicacao_clinica,
			ie_benef_home_care)
		values (	nextval('audc_atendimento_seq'), c01_w.ie_tipo_guia, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			c01_w.cd_guia_prestador, c01_w.cd_guia_principal, c01_w.cd_guia,
			c01_w.dt_validade_senha, c01_w.ie_recem_nascido,
			c01_w.ie_carater_internacao, c01_w.cd_tipo_internacao, c01_w.ie_tipo_atend_tiss,
			c01_w.dt_internacao_sugerida, null, null,
			c01_w.nr_seq_segurado, c01_w.nr_seq_prestador, null,
			c01_w.cd_estabelecimento, c01_w.nr_sequencia, nr_seq_lote_imp_p,
			c01_w.cd_usuario_plano,	c01_w.cd_medico_solicitante,c01_w.ds_indicacao_clinica,
			c01_w.ie_home_care) returning nr_sequencia into nr_seq_audc_atend_w;
			
	
		for c02_w in C02( nr_seq_guia_p) loop
		
			insert into audc_atend_mat_imp(
				nr_sequencia, nr_seq_audc_atend_imp, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_material, qt_solicitado,qt_executado,
				cd_material)
			values (	nextval('audc_atend_mat_seq'), nr_seq_audc_atend_w, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				c02_w.nr_seq_material,c02_w.qt_solicitada,c02_w.qt_autorizada, 
				c02_w.cd_material);
				
		end loop;
	
	
		for c03_w in C03( nr_seq_guia_p) loop		
			
			insert into audc_atend_proc_imp(
				nr_sequencia, nr_seq_audc_atend_imp, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				qt_solicitado,qt_executado,
				cd_procedimento, ie_origem_proced)
			values (	nextval('audc_atend_proc_seq'), nr_seq_audc_atend_w, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				c03_w.qt_solicitada, c03_w.qt_autorizada, 
	 			c03_w.cd_procedimento, c03_w.ie_origem_proced);			
		end loop;
	
	end loop;

	commit;
end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE audc_auditoria_concorrente_pck.audc_gerar_guias_imp ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_lote_imp_p audc_lote_atendimento_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
