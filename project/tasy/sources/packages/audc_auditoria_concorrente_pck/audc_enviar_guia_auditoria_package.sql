-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE audc_auditoria_concorrente_pck.audc_enviar_guia_auditoria ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, ie_origem_auditoria_p audc_atendimento.ie_origem_auditoria%type, nr_seq_grupo_auditor_p pls_grupo_auditor.nr_sequencia%type, nm_usuario_exec_p usuario.nm_usuario%type, nr_prioridade_p audc_atendimento.nr_prioridade%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE
	

					
nr_seq_audc_atend_w	audc_atendimento.nr_sequencia%type;
					
C01 CURSOR(  	nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type ) FOR
		SELECT  a.nr_sequencia, a.nr_seq_segurado, a.nr_seq_prestador,
       			ie_tipo_guia, cd_guia, cd_guia_prestador,
       			dt_internacao_sugerida, a.ie_tipo_atend_tiss,
        		cd_medico_solicitante, cd_guia_principal, dt_validade_senha,
        		ie_recem_nascido, a.cd_estabelecimento,
        		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'CR'),1,255) cd_usuario_plano,
        		(SELECT max(c.nr_sequencia) from audc_atendimento c where c.nr_seq_guia = a.nr_sequencia and c.ie_estagio <> 'PC') nr_seq_audc_atend_ant,
        		substr(a.ds_indicacao_clinica, 0 , 500) ds_indicacao_clinica,
        		CASE WHEN(select count(1) from paciente_home_care c where coalesce(c.dt_final::text, '') = '' and c.cd_pessoa_fisica = b.cd_pessoa_fisica)=1 THEN 'S'  ELSE 'N' END  ie_home_care,
			a.ie_carater_internacao, (select  max(coalesce(b.cd_tiss,b.cd_clinica)) from    pls_clinica b where   b.nr_sequencia = a.nr_seq_clinica) cd_tipo_internacao
		from    pls_guia_plano a,
        		pls_segurado b
		where   a.nr_seq_segurado = b.nr_sequencia
		and     a.nr_sequencia = nr_seq_guia_pc;	

C02 CURSOR(  	nr_seq_guia_pc		pls_guia_plano.nr_sequencia%type,
		nr_seq_audc_atend_pc 	audc_atendimento.nr_sequencia%type  ) FOR
		
		SELECT  cd_material, nr_seq_material, qt_solicitada,
		        qt_autorizada,
			(SELECT max(b.nr_sequencia) from audc_atend_mat b where b.nr_seq_audc_atend = nr_seq_audc_atend_pc and b.nr_seq_material = a.nr_seq_material) nr_seq_audc_atend_mat_ant
		from    pls_guia_plano_mat a
		where   nr_seq_guia =  nr_seq_guia_pc;

C03 CURSOR(  	nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type,
		nr_seq_audc_atend_pc 	audc_atendimento.nr_sequencia%type  ) FOR
		
		SELECT  cd_procedimento, ie_origem_proced, qt_solicitada,
       			qt_autorizada,
			(SELECT max(b.nr_sequencia) from audc_atend_proc b where b.nr_seq_audc_atend = nr_seq_audc_atend_pc and b.cd_procedimento = a.cd_procedimento) nr_seq_audc_atend_proc_ant
		from    pls_guia_plano_proc a
		where   nr_seq_guia = nr_seq_guia_pc;
BEGIN


if ( (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') and (ie_origem_auditoria_p IS NOT NULL AND ie_origem_auditoria_p::text <> '')
	and  (nr_seq_grupo_auditor_p IS NOT NULL AND nr_seq_grupo_auditor_p::text <> '') and (nr_prioridade_p IS NOT NULL AND nr_prioridade_p::text <> '')  ) then

	 for c01_w in C01( nr_seq_guia_p ) loop
		
	
		if ( coalesce(c01_w.nr_seq_audc_atend_ant::text, '') = '' ) then
			insert into audc_atendimento(
				nr_sequencia, ie_tipo_guia, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				cd_guia_prestador, cd_guia_principal, cd_guia_operadora,
				dt_validade_senha, ie_recem_nascido,
				ie_carater_atend, cd_tipo_internacao, cd_tipo_atendimento,
				dt_inicio_internacao, dt_alta_internacao, cd_motivo_alta, 
				nr_seq_segurado, nr_prioridade,
				nr_seq_prestador_solic, nr_seq_prestador_exec, ie_estagio,
				cd_estabelecimento, nr_seq_guia, nr_seq_lote_atend_imp,
				ie_origem_auditoria, dt_geracao_auditoria, cd_cartao_beneficiario,
				cd_medico_solicitante, ds_indicacao_clinica, ie_benef_home_care)
			values (	nextval('audc_atendimento_seq'), c01_w.ie_tipo_guia, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				c01_w.cd_guia_prestador, c01_w.cd_guia_principal, c01_w.cd_guia,
				c01_w.dt_validade_senha, c01_w.ie_recem_nascido,
				c01_w.ie_carater_internacao, c01_w.cd_tipo_internacao, c01_w.ie_tipo_atend_tiss,
				c01_w.dt_internacao_sugerida, null, null,
				c01_w.nr_seq_segurado, nr_prioridade_p,
				c01_w.nr_seq_prestador, null, 'AU',
				c01_w.cd_estabelecimento, c01_w.nr_sequencia, null,
				ie_origem_auditoria_p, clock_timestamp(), c01_w.cd_usuario_plano,
				c01_w.cd_medico_solicitante,c01_w.ds_indicacao_clinica, c01_w.ie_home_care) returning nr_sequencia into nr_seq_audc_atend_w;
				
			insert into audc_atend_grupo_aud(
				nr_sequencia, nr_seq_grupo,nr_seq_audc_atend,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nm_usuario_exec)
			values ( nextval('audc_atend_grupo_aud_seq'), nr_seq_grupo_auditor_p, nr_seq_audc_atend_w,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				nm_usuario_p, nm_usuario_exec_p);
				
			/*Rotina utilizada para gerar notificacao para auditor e prestador, nao executa commit diretamente*/


			CALL pls_gerar_alerta_web_pck.pls_gerar_alerta_evento_audc(14, '1', nr_seq_audc_atend_w,'N', nm_usuario_p);	
		else
			nr_seq_audc_atend_w := c01_w.nr_seq_audc_atend_ant;
		end if;
	
	
	
		for c02_w in C02( nr_seq_guia_p,  nr_seq_audc_atend_w) loop
		
			if ( coalesce(c02_w.nr_seq_audc_atend_mat_ant::text, '') = '' ) then
				insert into audc_atend_mat(
					nr_sequencia, nr_seq_audc_atend, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_material, qt_solicitado,qt_executado,
					cd_material)
				values (	nextval('audc_atend_mat_seq'), nr_seq_audc_atend_w, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					c02_w.nr_seq_material,c02_w.qt_solicitada,c02_w.qt_autorizada, 
					c02_w.cd_material);
			end if;	
		end loop;
	
	
		for c03_w in C03( nr_seq_guia_p, nr_seq_audc_atend_w ) loop
		
			if ( coalesce(c03_w.nr_seq_audc_atend_proc_ant::text, '') = '' ) then
			
				insert into audc_atend_proc(
					nr_sequencia, nr_seq_audc_atend, dt_atualizacao,
	 				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
	 				qt_solicitado,qt_executado,
	 				cd_procedimento, ie_origem_proced)
				values (	nextval('audc_atend_proc_seq'), nr_seq_audc_atend_w, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					c03_w.qt_solicitada, c03_w.qt_autorizada, 
	 				c03_w.cd_procedimento, c03_w.ie_origem_proced);
			end if;	
		end loop;
	end loop;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE audc_auditoria_concorrente_pck.audc_enviar_guia_auditoria ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, ie_origem_auditoria_p audc_atendimento.ie_origem_auditoria%type, nr_seq_grupo_auditor_p pls_grupo_auditor.nr_sequencia%type, nm_usuario_exec_p usuario.nm_usuario%type, nr_prioridade_p audc_atendimento.nr_prioridade%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
