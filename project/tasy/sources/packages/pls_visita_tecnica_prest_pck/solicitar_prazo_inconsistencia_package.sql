-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_visita_tecnica_prest_pck.solicitar_prazo_inconsistencia ( nr_seq_inconsistencia_p pls_visita_tecnica_inco.nr_sequencia%type, dt_prazo_solicitado_p pls_visita_tecnica_hist.dt_prazo_solicitado%type, ds_justificativa_p pls_visita_tecnica_hist.ds_historico%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) AS $body$
DECLARE

nr_seq_visita_w		pls_visita_tecnica_inco.nr_seq_visita%type;
cd_estabelecimento_w	pls_visita_tecnica.cd_estabelecimento%type;
nr_seq_tipo_historico_w	pls_tipo_hist_visita_tec.nr_sequencia%type;

BEGIN

if (coalesce(dt_prazo_solicitado_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1211068); --Novo prazo nao informado
end if;

if (coalesce(ds_justificativa_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1211194); --Justificativa nao informada
end if;

begin
select	a.nr_seq_visita,
	b.cd_estabelecimento
into STRICT	nr_seq_visita_w,
	cd_estabelecimento_w
from	pls_visita_tecnica_inco	a,
	pls_visita_tecnica	b
where	b.nr_sequencia	= a.nr_seq_visita
and	a.nr_sequencia	= nr_seq_inconsistencia_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1207549); --Registro invalido
end;

select	max(nr_sequencia)
into STRICT	nr_seq_tipo_historico_w
from	pls_tipo_hist_visita_tec
where	cd_estabelecimento	= cd_estabelecimento_w
and	ie_prazo_inconsistencia	= 'S';

if (coalesce(nr_seq_tipo_historico_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1211188);
end if;

insert	into	pls_visita_tecnica_hist(	nr_sequencia, nr_seq_visita, ie_log_sistema,
		ie_origem_historico, ds_historico, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		nr_seq_tipo_historico, dt_liberacao, ie_status_agendamento,
		nr_seq_inconsistencia, dt_prazo_solicitado, ie_status_prazo_inconsistencia )
	values (nextval('pls_visita_tecnica_hist_seq'), nr_seq_visita_w, 'N',
		'P', ds_justificativa_p, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		nr_seq_tipo_historico_w, clock_timestamp(), 0,
		nr_seq_inconsistencia_p, dt_prazo_solicitado_p, 1 );

CALL CALL pls_visita_tecnica_prest_pck.gerar_alerta_evento(	nr_seq_visita_p		=> nr_seq_visita_w,
			ie_tipo_processo_p	=> 10,
			nm_usuario_p		=> nm_usuario_p,
			ie_commit_p		=> 'N');

if (ie_commit_p = 'S') then
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_visita_tecnica_prest_pck.solicitar_prazo_inconsistencia ( nr_seq_inconsistencia_p pls_visita_tecnica_inco.nr_sequencia%type, dt_prazo_solicitado_p pls_visita_tecnica_hist.dt_prazo_solicitado%type, ds_justificativa_p pls_visita_tecnica_hist.ds_historico%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) FROM PUBLIC;
