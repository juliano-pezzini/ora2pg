-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION conversao_chave_301_pck.get_valores_tasy ( nm_tabela_301_p text, nm_tabela_tasy_p text default null) RETURNS SETOF T_VALORES_TASY AS $body$
DECLARE


r_valores_tasy_w	r_valores_tasy;
vl_chave_w		varchar(50);
ds_valor_w		varchar(2000);
ie_tab_valida_w		boolean;
tc 			t_crs;


BEGIN

ie_tab_valida_w	:= true;

/*ADICIONAR AQUI, AS TABELAS DO $301 QUE UTILIZARÃƒO O DE -> PARA*/

case nm_tabela_301_p
	when 'C301_NIVEL_EQUIPE' 		then tc := conversao_chave_301_pck.obter_cursor_tabela('PF_CARGO_EQUIPE', 'NR_SEQUENCIA', 'DS_CARGO', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_1_MOTIVO_ADM_MOTIVO' 	then tc := conversao_chave_301_pck.obter_cursor_tabela('CLASSIFICACAO_ATENDIMENTO', 'NR_SEQUENCIA', 'DS_CLASSIFICACAO', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_1_MOTIVO_ADM_TIPO' 		then tc := conversao_chave_301_pck.obter_cursor_tabela('QUEIXA_PACIENTE', 'NR_SEQUENCIA', 'DS_QUEIXA', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_11_INDIC_COBR_PEDIDO' 	then tc := conversao_chave_301_pck.obter_cursor_tabela('TIPO_COBRANCA_CONTA', 'NR_SEQUENCIA', 'DS_TIPO_COBRANCA', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_12_GRUPO_PESSOA'		then tc := conversao_chave_301_pck.obter_cursor_dominio('8421', tc);
	when 'C301_16_LOCALIZACAO'		then tc := conversao_chave_301_pck.obter_cursor_dominio('1372', tc);
	when 'C301_17_CONFIANCA_DIAG'		then tc := conversao_chave_301_pck.obter_cursor_dominio('13', tc);
	when 'C301_18_MOEDA' 			then tc := conversao_chave_301_pck.obter_cursor_tabela('MOEDA', 'CD_MOEDA', 'DS_MOEDA', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_19_INDIC_ADIC_EBM' 		then tc := conversao_chave_301_pck.obter_cursor_tabela('ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', 'DS_ESPECIALIDADE', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_21_SEXO'			then tc := conversao_chave_301_pck.obter_cursor_dominio('4', tc);
	when 'C301_22_AREA_ATUACAO' 		then tc := conversao_chave_301_pck.obter_cursor_tabela('CID_DOENCA', 'CD_DOENCA_CID', 'DS_DOENCA_CID', '', tc);
	when 'C301_24_REGIAO_ATUACAO'		then tc := conversao_chave_301_pck.obter_cursor_dominio('50', tc);
	when 'C301_26_DISTRITO_KV'		then tc := conversao_chave_301_pck.obter_cursor_dominio('50', tc);
	when 'C301_27_ESPEC_EQUIPE' 		then tc := conversao_chave_301_pck.obter_cursor_tabela('ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', 'DS_ESPECIALIDADE', ' AND IE_SITUACAO = ''A''', tc);
	--when 'C301_5_MOT_ALTA_TRANSF_TR' then
	when 'C301_5_MOT_ALTA_TRANSF' then
		begin
		if (nm_tabela_tasy_p = 'MOTIVO_ALTA') then
			tc := conversao_chave_301_pck.obter_cursor_tabela('MOTIVO_ALTA', 'CD_MOTIVO_ALTA', 'DS_MOTIVO_ALTA', ' AND IE_SITUACAO = ''A''', tc);
		elsif (nm_tabela_tasy_p = 'MOTIVO_TRANSF_PAC') then
			tc := conversao_chave_301_pck.obter_cursor_tabela('MOTIVO_TRANSF_PAC', 'NR_SEQUENCIA', 'DS_MOTIVO', ' AND IE_SITUACAO = ''A''', tc);
		else
			ie_tab_valida_w := false;
		end if;
		end;
	when 'C301_6_DEPARTAMENTO' 	then tc := conversao_chave_301_pck.obter_cursor_tabela('DEPARTAMENTO_MEDICO', 'CD_DEPARTAMENTO', 'DS_DEPARTAMENTO', ' AND IE_SITUACAO = ''A''', tc);
	when 'C301_7_PAIS'		then tc := conversao_chave_301_pck.obter_cursor_tabela('PAIS', 'NR_SEQUENCIA', 'NM_PAIS', '', tc);
	when 'C301_TIPO_ACOMODACAO' 	then tc := conversao_chave_301_pck.obter_cursor_tabela('TIPO_ACOMODACAO', 'CD_TIPO_ACOMODACAO', 'DS_TIPO_ACOMODACAO', ' AND IE_SITUACAO = ''A''', tc);
	else ie_tab_valida_w := false;
end case;

if (ie_tab_valida_w) then

	loop
	fetch tc into vl_chave_w, ds_valor_w;
	EXIT WHEN NOT FOUND; /* apply on tc */
		r_valores_tasy_w.vl_chave	:= vl_chave_w;
		r_valores_tasy_w.ds_valor	:= ds_valor_w;
		RETURN NEXT r_valores_tasy_w;
	end loop;

end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION conversao_chave_301_pck.get_valores_tasy ( nm_tabela_301_p text, nm_tabela_tasy_p text default null) FROM PUBLIC;
