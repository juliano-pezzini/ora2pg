-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION localizar_conv_atend_pck.obter_lista ( cd_pessoa_fisica_p text, param_432_p text, param_339_p text, ie_convenio_pac_p text) RETURNS SETOF T_CONVENIO AS $body$
DECLARE


t_convenio_row_w	t_convenio_row;
ie_gravar_w	varchar(1);

c01 CURSOR FOR
SELECT	a.cd_convenio,
	a.ds_convenio,
	b.ds_municipio ds_municipio,
        (b.cd_cep || ', ' || b.ds_endereco || ', ' || b.nr_endereco) ds_endereco,
        b.cd_cnes cd_cnes,
        b.cd_cgc
from	convenio a,
	pessoa_juridica b
where	a.ie_situacao 	= 'A'
and	a.cd_cgc  	= b.cd_cgc
and (coalesce(param_432_p::text, '') = '' or a.cd_convenio not in (WITH RECURSIVE cte AS (
select regexp_substr(info, separador, 1, 1) info
                                                       from (select param_432_p info, '[^,]+' separador )(regexp_substr(info, separador, 1, level) IS NOT NULL AND (regexp_substr(info, separador, 1, level))::text <> '')  UNION ALL
select regexp_substr(info, separador, 1, (c.level+1)) info
                                                       from (select param_432_p info, '[^,]+' separador ) JOIN cte c ON ()

) SELECT * FROM cte;
))
and (coalesce(param_339_p::text, '') = '' or a.cd_convenio in (WITH RECURSIVE cte AS (
(select regexp_substr(info, separador, 1, 1) info
                                                   from (select param_339_p info, '[^,]+' separador )
                                                   (regexp_substr(info, separador, 1, level) IS NOT NULL AND (regexp_substr(info, separador, 1, level))::text <> ''))  UNION ALL
(select regexp_substr(info, separador, 1, (c.level+1)) info
                                                   from (select param_339_p info, '[^,]+' separador ) JOIN cte c ON ()

) SELECT * FROM cte;
));

c01_w	c01%rowtype;


BEGIN

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	ie_gravar_w := 'S';
	if (ie_convenio_pac_p = 'S') then

		begin
		select	'S'
		into STRICT	ie_gravar_w
		from	pessoa_titular_convenio
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_p
		and	cd_convenio		= c01_w.cd_convenio
		and 	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia > clock_timestamp()  and dt_inicio_vigencia < clock_timestamp()))  LIMIT 1;
		exception
		when others then
			ie_gravar_w	:= 'N';

		end;
	end if;

	if (ie_gravar_w = 'S') then

		t_convenio_row_w.cd_convenio	:= c01_w.cd_convenio;
		t_convenio_row_w.ds_convenio	:= c01_w.ds_convenio;
		t_convenio_row_w.ds_municipio	:= c01_w.ds_municipio;
		t_convenio_row_w.ds_endereco	:= c01_w.ds_endereco;
		t_convenio_row_w.cd_cnes	    := c01_w.cd_cnes;
        t_convenio_row_w.cd_cgc	        := c01_w.cd_cgc;

		RETURN NEXT t_convenio_row_w;

	end if;

end loop;
close C01;

end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION localizar_conv_atend_pck.obter_lista ( cd_pessoa_fisica_p text, param_432_p text, param_339_p text, ie_convenio_pac_p text) FROM PUBLIC;
