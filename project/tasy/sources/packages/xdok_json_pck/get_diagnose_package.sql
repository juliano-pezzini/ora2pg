-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION xdok_json_pck.get_diagnose ( nr_seq_episodio_p bigint) RETURNS PHILIPS_JSON_LIST AS $body$
DECLARE


json_diagnose_w         philips_json;
json_diagnose_list_w    philips_json_list;
hospitalid_w            pessoa_juridica.ds_nome_abrev%type;

X03 CURSOR FOR
SELECT  b.nr_episodio numberadmissions,
        to_char(a.dt_entrada, 'yyyymmdd') recorddate, 
        c.cd_doenca diagnosiscode, 
        to_char(c.ie_diag_princ_episodio) diagnosistype, 
        to_char(c.ie_tipo_diagnostico) diagnosisart,
        to_char(c.ie_origem_infeccao)  diagnosesAdquiredInpatient,
        a.cd_estabelecimento
from    atendimento_paciente a,
        episodio_paciente b,
        diagnostico_doenca c
where   b.nr_sequencia = a.nr_seq_episodio 
and     c.nr_atendimento = a.nr_atendimento 
and     coalesce(c.dt_inativacao::text, '') = ''
and     (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
and     b.nr_sequencia = nr_seq_episodio_p;

BEGIN

json_diagnose_list_w    := philips_json_list();

for r_x03 in X03 loop
    begin
    json_diagnose_w := philips_json();

    begin
    select  xdok_json_pck.get_sistema_externo(obter_cgc_estabelecimento(r_x03.cd_estabelecimento), r_x03.cd_estabelecimento)
    into STRICT    hospitalid_w
;
    exception
    when others then
        hospitalid_w := null;
    end;
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'hospitalNumber', hospitalid_w);
    /*    xdok_json_pck.add_json_value(json_diagnose_w, 'numberAdmissions', r_x03.numberAdmissions); */

    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'numberAdmissions', '');
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'recordID', '');
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'recordDate', r_x03.recordDate);
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'diagnosisCode', r_x03.diagnosisCode);
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'diagnosisType', xdok_json_pck.get_xdok_converter_externo('DIAGNOSTICO_DOENCA', 'IE_DIAG_PRINC_EPISODIO', r_x03.diagnosisType));
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'diagnosisArt', '');
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'diagnosesAdquired', xdok_json_pck.get_xdok_converter_externo('DIAGNOSTICO_DOENCA', 'IE_ORIGEM_INFECCAO', r_x03.diagnosesAdquiredInpatient));
    json_diagnose_w := xdok_json_pck.add_json_value(json_diagnose_w, 'recordingNumber', '');
    json_diagnose_list_w.append(json_diagnose_w.to_json_value());
    end;
end loop;

return json_diagnose_list_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION xdok_json_pck.get_diagnose ( nr_seq_episodio_p bigint) FROM PUBLIC;
