-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION xdok_json_pck.get_accepted_err_warn ( nr_seq_episodio_p bigint ) RETURNS PHILIPS_JSON AS $body$
DECLARE


json_accepted_w           philips_json;
scoring_error_warning_w   scoring_error_warning%rowtype;
ds_justificativa_w        scoring_error_warning_just.ds_justificativa%type;

x06 CURSOR FOR
SELECT  xdok_json_pck.get_sistema_externo(null, ap.cd_estabelecimento) hospitalid,
        ap.nr_atendimento        nr_atendimento_ap,
        ap.nr_seq_episodio       casenumber,
        ap.cd_pessoa_fisica      cd_pessoa_fisica_ap,
        ap.ie_tipo_atendimento   ie_tipo_atendimento_ap,
        to_char(ap.dt_entrada, 'dd/mm/yyyy hh24:mi:ss') entrydate,
        ep.nr_sequencia          nr_sequencia_ep,
        ep.nr_episodio           nr_episodio_ep
from    atendimento_paciente   ap,
        episodio_paciente      ep
where   ap.nr_seq_episodio = ep.nr_sequencia
and     ap.nr_seq_episodio = nr_seq_episodio_p;

c01 CURSOR(casenumber_p bigint) FOR
SELECT  to_char(sw.dt_admission, 'yyyymmdd hh24:mi:ss') admissiondate,
        sw.nr_sequencia       nr_sequencia_sw,
        sw.vl_error_warning   ewvalue,
        sw.cd_error_warning   ewcode,
        sw.ds_error_warning   ewdescription,
        sj.ds_justificativa   ewcomment
from    scoring_error_warning        sw,
        scoring_error_warning_just   sj
where   sw.nr_sequencia = sj.nr_seq_scoring_error_warning
and     sw.nr_case = casenumber_p;
BEGIN
json_accepted_w := philips_json();
for r_x06 in x06 loop begin
    for r_c01 in c01(r_x06.casenumber) loop
        begin
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'hospitalID', r_x06.hospitalid);
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'casenumber', r_x06.casenumber);
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'recordID', '');
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'admissiondate', r_c01.admissiondate);
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'value', r_c01.ewvalue);
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'code', r_c01.ewcode);
            json_accepted_w := xdok_json_pck.add_json_value(json_accepted_w, 'comment', r_c01.ewcomment);
        end;
    end loop;
end;
end loop;

return json_accepted_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION xdok_json_pck.get_accepted_err_warn ( nr_seq_episodio_p bigint ) FROM PUBLIC;
