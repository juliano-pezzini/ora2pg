-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE wheb_exportar_xml_pck.armazena_sql (cursor_p integer, ar_resultado_p INOUT myArray) AS $body$
DECLARE

	contador_w	bigint;
	ar_aux_w	myArray;
	ds_relat_w	text;
	dt_aux_w	timestamp;
	col_cnt		integer;		--Numero de colunas
	dtab		dbms_sql.desc_tab;	--Descricao da Tabela  
	nr_byte_w	bigint;
	rec long_rectype;
	
BEGIN
		dbms_sql.describe_columns(cursor_p,col_cnt,dtab);
		IF ( DBMS_SQL.FETCH_ROWS(cursor_p) = 0 ) THEN
			ar_resultado_p := ar_aux_w;
		ELSE
			FOR contador_w IN 1..ar_resultado_p.count LOOP
				IF ( substr(ar_resultado_p[contador_w].nm,1,3) = 'DT_' ) THEN
					begin
						DBMS_SQL.COLUMN_VALUE(cursor_p, contador_w, dt_aux_w);
						ar_resultado_p[contador_w].vl := to_char(dt_aux_w,'dd/mm/yyyy hh24:mi:ss');
					exception
						when OTHERS then
						DBMS_SQL.COLUMN_VALUE(cursor_p, contador_w, ar_resultado_p[contador_w].vl);
					end;
				ELSIF ( substr(ar_resultado_p[contador_w].nm,1,3) = 'HR_' ) THEN
					begin
						DBMS_SQL.COLUMN_VALUE(cursor_p, contador_w, dt_aux_w);
						ar_resultado_p[contador_w].vl := to_char(dt_aux_w,'hh24:mi:ss');
					exception
						when OTHERS then
						DBMS_SQL.COLUMN_VALUE(cursor_p, contador_w, ar_resultado_p[contador_w].vl);
					end;
				ELSE
					begin
					if (  dtab[contador_w].col_type = 8) then
						nr_byte_w := 1;
						rec.pos_in_long := 0;
						ar_resultado_p[contador_w].vl := null;
						ar_resultado_p[contador_w].v2.delete;
						LOOP
							DBMS_SQL.COLUMN_VALUE_LONG(cursor_p, contador_w, rec.piece_len, rec.pos_in_long, rec.one_piece, rec.one_piece_len);
							EXIT WHEN rec.one_piece_len = 0;
							ar_resultado_p[contador_w].v2(nr_byte_w) := rec.one_piece;
							rec.pos_in_long := rec.pos_in_long + rec.one_piece_len;
							nr_byte_w:= nr_byte_w + 1;	
						END LOOP;
						IF (ar_resultado_p[contador_w].v2.count = 1) THEN
							ar_resultado_p[contador_w].vl := ar_resultado_p[contador_w].v2(1);
							ar_resultado_p[contador_w].v2.delete;
						END IF;
					ELSE
						DBMS_SQL.COLUMN_VALUE(cursor_p, contador_w, ar_resultado_p[contador_w].vl);
					END IF;						
					exception
					when OTHERS then
						ar_resultado_p[contador_w].vl :='O conteudo excedeu o tamanho suportado(32000 caracteres)';
					end;
				END IF;
				CALL CALL wheb_exportar_xml_pck.armazena_result_todos_sql(ar_resultado_p[contador_w].nm,ar_resultado_p[contador_w].vl,ar_resultado_p[contador_w].v2);
			END LOOP;
		END IF;
	END;


$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE wheb_exportar_xml_pck.armazena_sql (cursor_p integer, ar_resultado_p INOUT myArray) FROM PUBLIC;
