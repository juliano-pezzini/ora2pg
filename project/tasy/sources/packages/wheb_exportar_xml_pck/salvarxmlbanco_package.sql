-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE wheb_exportar_xml_pck.salvarxmlbanco () AS $body$
DECLARE

	contador_w	bigint;
	dt_xml_local_w  timestamp;
	ds_valor_w	varchar(255);
    ie_gerar_quebra_p_w varchar(1);
	
BEGIN	

     begin
      SELECT coalesce(ie_gerar_quebra, 'N')  
      INTO STRICT ie_gerar_quebra_p_w   FROM xml_projeto   WHERE nr_sequencia = current_setting('wheb_exportar_xml_pck.nr_seq_projeto_w')::bigint;
	 exception
	  when others then
		ie_gerar_quebra_p_w := 'N';
	 end;	
			
	   if (ie_gerar_quebra_p_w = 'L') then
         PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),chr(13),''), false);
         PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),chr(10),''), false);
	   end if;
    
    PERFORM set_config('wheb_exportar_xml_pck.ds_xml_retorno_w', current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000), false);
  
		if (current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'TISS')  then
			insert into tiss_log_xml(
				nr_sequencia,
				nr_seq_log_tiss,
				ds_xml)
			values (
				nextval('tiss_log_xml_seq'),
				current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint,
				current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)
			);
			commit;
			
		elsif ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'PTUSCS'  or current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'GPI' or current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'PLSINTEGRACAO')  then
			if (current_setting('wheb_exportar_xml_pck.qt_valor_xml_w')::bigint < 1) and (position('GERAR_HASH_MD5' in current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) > 1) and
				((length(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) + 20 ) < 32000) then
				PERFORM set_config('wheb_exportar_xml_pck.ds_xml_valor_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::varchar(32000),'GERAR_HASH_MD5',''), false);
				if (current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::(varchar(32000) IS NOT NULL AND (varchar(32000))::text <> '') ) then
					PERFORM set_config('wheb_exportar_xml_pck.ds_hash_w', RAWTOHEX(dbms_obfuscation_toolkit.md5(input => encode(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w'::bytea, 'hex')::bytea::varchar(32000)))), false);
					PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),'GERAR_HASH_MD5',current_setting('wheb_exportar_xml_pck.ds_hash_w')::varchar(32)), false);
				end if;
			end if;
			
			if ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'PTUSCS') then			
				insert into ptu_xml_scs(
					nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
					nm_usuario, nm_usuario_nrec, ds_xml)
				values ( current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint, clock_timestamp(), clock_timestamp(),
					'Tasy', 'Tasy', current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000));
			elsif ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'GPI' ) then
				insert into pls_xml_integracao(
					nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
					nm_usuario, nm_usuario_nrec, ds_xml, ie_tipo_xml)
				values ( current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint, clock_timestamp(), clock_timestamp(),
					'Tasy', 'Tasy', current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000), 1);
			elsif (current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'PLSINTEGRACAO') then
				ds_valor_w := wheb_exportar_xml_pck.obter_valor_parametro('CD_RESERVA',current_setting('wheb_exportar_xml_pck.ar_parametros_w')::myArray);
				if (ds_valor_w <> 0) then
					insert into pls_xml_integracao(
						nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
						nm_usuario, nm_usuario_nrec, ds_xml, ie_tipo_xml, nr_seq_cotacao, nr_seq_lote_cad)
					values ( current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint, clock_timestamp(), clock_timestamp(),
						'Tasy', 'Tasy', current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000), 2, ds_valor_w, null);
				else
					ds_valor_w := wheb_exportar_xml_pck.obter_valor_parametro('NR_LOTE_MATERIAL',current_setting('wheb_exportar_xml_pck.ar_parametros_w')::myArray);
					if (ds_valor_w <> 0) then
						insert into pls_xml_integracao(
							nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
							nm_usuario, nm_usuario_nrec, ds_xml, ie_tipo_xml, nr_seq_cotacao, nr_seq_lote_cad)
						values ( current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint, clock_timestamp(), clock_timestamp(),
							'Tasy', 'Tasy', current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000), 2, null, ds_valor_w);
					end if;
				end if;
			
				
			end if;
			commit;
		elsif (current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'INTEGRACAO') then
      PERFORM set_config('wheb_exportar_xml_pck.ds_xml_retorno_w', current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000), false);
    
    
			insert into	log_integracao_xml(
				nr_sequencia,
				nr_seq_log,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_envio_retorno,
				ds_xml)
			values (
				nextval('log_integracao_xml_seq'),
				current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint,
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				'Tasy',
				current_setting('wheb_exportar_xml_pck.ie_status_w')::varchar(2),
				current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)
			);
		elsif ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'INTCOM') then
			
			update	registro_integr_com_xml
			set	ds_xml	= current_setting('wheb_exportar_xml_pck.ds_xml_clob_w')::text
			where	nr_sequencia = current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint;
		
		elsif ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'INTDISPMH') then
			
			update	int_disp_mat_hor
			set	ds_xml = current_setting('wheb_exportar_xml_pck.ds_xml_clob_w')::text
			where	nr_prescricao = current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint;
			commit;
		elsif ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'INTDISPAP') then
			
			update	int_disp_movt_pac
			set	ds_xml = current_setting('wheb_exportar_xml_pck.ds_xml_clob_w')::text
			where	nr_sequencia = current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint;
			commit;
			
		-- Geracao do XSIP.

		elsif ( current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'SIP') then
		
			-- Apenas remove a acentuacao e as quebras de linha do arquivo, as quebras de linha sao removidas

			-- pois dependendo do charset do sistema operacional onde o banco esta instalado, o valor dos caracteres

			-- podem mudar, ocasionando erros no calculo do hash para o SIP. 

			pls_sip_pck.gerar_hash_xml(current_setting('wheb_exportar_xml_pck.ds_xml_clob_w')::text);
			
			-- Atualiza o valor do XML na tabela do SIP.

			update	pls_lote_sip
			set	ds_conteudo_hash = current_setting('wheb_exportar_xml_pck.ds_xml_clob_w')::text
			where	nr_sequencia = current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint;
			commit;
			
		elsif (current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'SIB') then
			if (current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint = 1) then
				PERFORM set_config('wheb_exportar_xml_pck.ds_xml_valor_w', 'http://www.ans.gov.br/padroes/sib/schemas http://www.ans.gov.br/padroes/sib/schemas/sib.xsd' || current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::varchar(32000), false);
			end if;
			
			if (current_setting('wheb_exportar_xml_pck.qt_valor_xml_w')::bigint < 1) and (position('GERAR_HASH_MD5' in current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) > 1) and
				((length(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) + 20 ) < 32000) then
				PERFORM set_config('wheb_exportar_xml_pck.ds_xml_valor_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::varchar(32000),'GERAR_HASH_MD5',''), false);
				if (current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::(varchar(32000) IS NOT NULL AND (varchar(32000))::text <> '') ) then
					PERFORM set_config('wheb_exportar_xml_pck.ds_hash_w', RAWTOHEX(dbms_obfuscation_toolkit.md5(input => encode(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w'::bytea, 'hex')::bytea::varchar(32000)))), false);
					PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),'GERAR_HASH_MD5',current_setting('wheb_exportar_xml_pck.ds_hash_w')::varchar(32)), false);
				end if;
			end if;

			insert into tasy_xml_banco(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				ds_xml,
				nr_seq_geracao,
				nr_seq_projeto)
			values (
				current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint,
				clock_timestamp(),
				'Tasy',
				current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),
				current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint,
				current_setting('wheb_exportar_xml_pck.nr_seq_projeto_w')::bigint
			);
			PERFORM set_config('wheb_exportar_xml_pck.nr_seq_geracao_w', current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint + 1, false);
			commit;
		elsif (current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'MER') then
			PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),chr(13),''), false);
			PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),chr(10),''), false);		
			if (current_setting('wheb_exportar_xml_pck.qt_valor_xml_w')::bigint < 1) and (position('GERAR_HASH_MD5' in current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) > 1) and
				((length(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) + 20 ) < 32000) then
				PERFORM set_config('wheb_exportar_xml_pck.ds_xml_valor_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::varchar(32000),'GERAR_HASH_MD5',''), false);
				if (current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::(varchar(32000) IS NOT NULL AND (varchar(32000))::text <> '') ) then
					PERFORM set_config('wheb_exportar_xml_pck.ds_hash_w', RAWTOHEX(dbms_obfuscation_toolkit.md5(input => encode(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w'::bytea, 'hex')::bytea::varchar(32000)))), false);
					PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),'GERAR_HASH_MD5',current_setting('wheb_exportar_xml_pck.ds_hash_w')::varchar(32)), false);
				end if;
			end if;

			
			contador_w := 0;
			dt_xml_local_w := clock_timestamp();
			while(dt_xml_local_w = current_setting('wheb_exportar_xml_pck.dt_xml_gerado_w')::timestamp) and ( contador_w < 10000) loop
				dt_xml_local_w := clock_timestamp();
				contador_w := contador_w + 1;
			end loop;
			
			PERFORM set_config('wheb_exportar_xml_pck.dt_xml_gerado_w', clock_timestamp(), false);
			insert into tasy_xml_banco(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				ds_xml,
				nr_seq_geracao,
				nr_seq_projeto)
			values (
				current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint,
				current_setting('wheb_exportar_xml_pck.dt_xml_gerado_w')::timestamp,
				'Tasy',
				current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),
				current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint,
				current_setting('wheb_exportar_xml_pck.nr_seq_projeto_w')::bigint
			);
			PERFORM set_config('wheb_exportar_xml_pck.nr_seq_geracao_w', current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint + 1, false);
			commit;		
		else
			if (current_setting('wheb_exportar_xml_pck.qt_valor_xml_w')::bigint < 1) and (position('GERAR_HASH_MD5' in current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) > 1) and
				((length(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000)) + 20 ) < 32000) then
				PERFORM set_config('wheb_exportar_xml_pck.ds_xml_valor_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::varchar(32000),'GERAR_HASH_MD5',''), false);
				if (current_setting('wheb_exportar_xml_pck.ds_xml_valor_w')::(varchar(32000) IS NOT NULL AND (varchar(32000))::text <> '') ) then
					PERFORM set_config('wheb_exportar_xml_pck.ds_hash_w', RAWTOHEX(dbms_obfuscation_toolkit.md5(input => encode(current_setting('wheb_exportar_xml_pck.ds_xml_valor_w'::bytea, 'hex')::bytea::varchar(32000)))), false);
					
					-- Verificar se o projeto PTU precisa ter o hash em minusculo

					if (ptu_obter_hash_batch(current_setting('wheb_exportar_xml_pck.nr_seq_projeto_w')::bigint) = 'S') then
						PERFORM set_config('wheb_exportar_xml_pck.ds_hash_w', lower(current_setting('wheb_exportar_xml_pck.ds_hash_w')::varchar(32)), false);
					end if;
					
					PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', replace(current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),'GERAR_HASH_MD5',current_setting('wheb_exportar_xml_pck.ds_hash_w')::varchar(32)), false);
				end if;
			end if;

			insert into tasy_xml_banco(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				ds_xml,
				nr_seq_geracao,
				nr_seq_projeto)
			values (
				current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::bigint,
				clock_timestamp(),
				'Tasy',
				current_setting('wheb_exportar_xml_pck.ds_xml_w')::varchar(32000),
				current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint,
				current_setting('wheb_exportar_xml_pck.nr_seq_projeto_w')::bigint
			);
			PERFORM set_config('wheb_exportar_xml_pck.nr_seq_geracao_w', current_setting('wheb_exportar_xml_pck.nr_seq_geracao_w')::bigint + 1, false);
			commit;
		end if;
		PERFORM set_config('wheb_exportar_xml_pck.ds_xml_w', '', false);
	end;
	

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE wheb_exportar_xml_pck.salvarxmlbanco () FROM PUBLIC;
