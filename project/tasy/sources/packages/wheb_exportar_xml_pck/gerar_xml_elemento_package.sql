-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE wheb_exportar_xml_pck.gerar_xml_elemento (nr_seq_elemento_p bigint, ar_result_query_sup_p myArray, nr_seq_atrib_superior_p bigint) AS $body$
DECLARE

	_ora2pg_r RECORD;
ar_xml_elemento_w	xmlElemento;
	
	ar_resultado_atual_w 	myArray;
	cursor_atual_w		integer;
	ds_sql_w		varchar(10000);
	ds_sql_aux_w		varchar(10000);
	ar_nm_param_cabecalho_w	myArray;
	contador_w		bigint;
	ds_param_w		varchar(4000);
	ds_mensagem_w		varchar(4000);
	ie_fechar_grupo_w varchar(1);
	c_elemento CURSOR FOR
		SELECT	nr_sequencia,
			ds_sql,
			ds_sql_2,
			replace(ds_grupo,'@ns@',ds_namespace_w),
			ie_criar_nulo,
			ie_criar_elemento,
			ie_tipo_complexo,
			ie_tipo_elemento,
			CASE WHEN ds_namespace='' THEN ''  ELSE ds_namespace || ':' END  || replace(nm_elemento,'@ns@',ds_namespace_w),
			replace(coalesce(ds_cabecalho,''),'@ns@',ds_namespace_w) ds_cabecalho,
			coalesce(QT_MIN_OCOR, 0) QT_MIN_OCOR,
			coalesce(QT_MAX_OCOR, 0) QT_MAX_OCOR,
			nr_seq_projeto
		FROM   	xml_elemento
        WHERE  	nr_sequencia = nr_seq_elemento_p
		AND		dt_atualizacao_nrec < dt_assinatura_digital_w
        ORDER  	BY nr_seq_apresentacao;
	
BEGIN
		OPEN c_elemento;
		LOOP
		FETCH c_elemento INTO
			ar_xml_elemento_w[1].NR_SEQUENCIA,
			ar_xml_elemento_w[1].DS_SQL,
			ds_sql_w,
			ar_xml_elemento_w[1].DS_GRUPO,
			ar_xml_elemento_w[1].IE_CRIAR_NULO,
			ar_xml_elemento_w[1].IE_CRIAR_ELEMENTO,
			ar_xml_elemento_w[1].IE_TIPO_COMPLEXO,
			ar_xml_elemento_w[1].IE_TIPO_ELEMENTO,
			ar_xml_elemento_w[1].NM_ELEMENTO,
			ar_xml_elemento_w[1].DS_CABECALHO,
			ar_xml_elemento_w[1].QT_MIN_OCOR,
			ar_xml_elemento_w[1].QT_MAX_OCOR,
			ar_xml_elemento_w[1].NR_SEQ_PROJETO;
		EXIT WHEN NOT FOUND; /* apply on c_elemento */
		
			/*Tratamento para BIND_VARIABLE NO CABECALHO */


			ar_nm_param_cabecalho_w := wheb_exportar_xml_pck.armazena_parametros_sql(ar_xml_elemento_w[1].DS_CABECALHO, ar_nm_param_cabecalho_w, false);
			for contador_w in 1..ar_nm_param_cabecalho_w.count loop
				/*Verifica se existe valor para o parametro na Query Superior*/


				ds_param_w := wheb_exportar_xml_pck.obter_valor_parametro(ar_nm_param_cabecalho_w[contador_w].nm,ar_result_query_sup_p);
				/*Verificar se existe valor para o parametro nos parametros do projeto*/


				if ( coalesce(ds_param_w::text, '') = '' ) then
					ds_param_w := wheb_exportar_xml_pck.obter_valor_parametro(ar_nm_param_cabecalho_w[contador_w].nm,current_setting('wheb_exportar_xml_pck.ar_parametros_w')::myArray);
				end if;
				if ( coalesce(ds_param_w::text, '') = '' ) then
					ds_param_w := wheb_exportar_xml_pck.obter_valor_parametro(ar_nm_param_cabecalho_w[contador_w].nm,current_setting('wheb_exportar_xml_pck.ar_result_todos_sql_p')::myArray);
				end if;		
		
				ar_xml_elemento_w[1].DS_CABECALHO := replace(ar_xml_elemento_w[1].DS_CABECALHO,':'||ar_nm_param_cabecalho_w[contador_w].nm,ds_param_w);
		
			end loop;
		
			if (ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') then
				ar_xml_elemento_w[1].DS_SQL := ar_xml_elemento_w[1].DS_SQL || ds_sql_w;
			end if;
			
			if ( ar_xml_elemento_w[1](.DS_SQL IS NOT NULL AND .DS_SQL::text <> '')) then
				/* Tratar a quantidade de ocorrencias dos elementos quando configuradas no projeto */


				if (current_setting('wheb_exportar_xml_pck.nr_seq_log_w')::(bigint IS NOT NULL AND bigint::text <> '')) and (current_setting('wheb_exportar_xml_pck.ie_tipo_w')::varchar(60) = 'INTEGRACAO') then
					if ((ar_xml_elemento_w[1].QT_MIN_OCOR > 0) or (ar_xml_elemento_w[1].QT_MAX_OCOR > 0)) then
						ds_sql_aux_w 			:= ar_xml_elemento_w[1].DS_SQL;
						ar_xml_elemento_w[1].DS_SQL	:= ' SELECT COUNT(1) QT_OCOR FROM ( ' || ar_xml_elemento_w[1].DS_SQL || ' )';
						
						SELECT * FROM wheb_exportar_xml_pck.executa_sql(ar_xml_elemento_w, ar_result_query_sup_p, ar_resultado_atual_w, cursor_atual_w) INTO STRICT _ora2pg_r;
 ar_resultado_atual_w := _ora2pg_r.ar_resultado_p; cursor_atual_w := _ora2pg_r.cursor_p;
				
						if (ar_resultado_atual_w.count > 0) then
							BEGIN
								ar_resultado_atual_w := wheb_exportar_xml_pck.armazena_sql(cursor_atual_w, ar_resultado_atual_w);
							EXCEPTION
								WHEN OTHERS THEN
									CALL wheb_mensagem_pck.exibir_mensagem_abort(174653,'NM_ELEMENTO='||ar_xml_elemento_w[1].NM_ELEMENTO||';NR_SEQUENCIA='||ar_xml_elemento_w[1].NR_SEQUENCIA||';DS_ERRO='||sqlerrm||';');
							END;
					
							if ( ar_resultado_atual_w.count = 0 ) then
								DBMS_SQL.CLOSE_CURSOR(cursor_atual_w);
							else
								if (ar_xml_elemento_w[1].QT_MIN_OCOR > 0) and (ar_xml_elemento_w[1].QT_MAX_OCOR > 0) and
								    (((ar_resultado_atual_w[1].vl)::numeric  < ar_xml_elemento_w[1].QT_MIN_OCOR) or ((ar_resultado_atual_w[1].vl)::numeric  > ar_xml_elemento_w[1].QT_MAX_OCOR)) then
									ds_mensagem_w := wheb_mensagem_pck.get_texto(294640,
											    ';QT_OCOR=' 	|| ar_resultado_atual_w[1].vl		||
											    ';NR_SEQUENCIA='	|| ar_xml_elemento_w[1].NR_SEQUENCIA	||
											    ';NM_ELEMENTO=' 	|| ar_xml_elemento_w[1].NM_ELEMENTO	||
											    ';QT_MIN_OCOR=' 	|| ar_xml_elemento_w[1].QT_MIN_OCOR	||
											    ';QT_MAX_OCOR=' 	|| ar_xml_elemento_w[1].QT_MAX_OCOR);
											
									if (current_setting('wheb_exportar_xml_pck.ds_ocorrencias_w')::(varchar(4000) IS NOT NULL AND (varchar(4000))::text <> '')) then		    
										PERFORM set_config('wheb_exportar_xml_pck.ds_ocorrencias_w', current_setting('wheb_exportar_xml_pck.ds_ocorrencias_w')::varchar(4000) 	|| chr(13) || chr(10) || ds_mensagem_w, false);
									else
										PERFORM set_config('wheb_exportar_xml_pck.ds_ocorrencias_w', ds_mensagem_w, false);
									end if;
								elsif (ar_xml_elemento_w[1].QT_MIN_OCOR > 0) and (ar_xml_elemento_w[1].QT_MAX_OCOR = 0) and ((ar_resultado_atual_w[1].vl)::numeric  < ar_xml_elemento_w[1].QT_MIN_OCOR) then
									ds_mensagem_w := wheb_mensagem_pck.get_texto(294643,
											    ';QT_OCOR='		|| ar_resultado_atual_w[1].vl		||
											    ';NR_SEQUENCIA='	|| ar_xml_elemento_w[1].NR_SEQUENCIA	||
											    ';NM_ELEMENTO=' 	|| ar_xml_elemento_w[1].NM_ELEMENTO	||
											    ';QT_MIN_OCOR=' 	|| ar_xml_elemento_w[1].QT_MIN_OCOR);
											
									if (current_setting('wheb_exportar_xml_pck.ds_ocorrencias_w')::(varchar(4000) IS NOT NULL AND (varchar(4000))::text <> '')) then		    
										PERFORM set_config('wheb_exportar_xml_pck.ds_ocorrencias_w', current_setting('wheb_exportar_xml_pck.ds_ocorrencias_w')::varchar(4000) 	|| chr(13) || chr(10) || ds_mensagem_w, false);
									else
										PERFORM set_config('wheb_exportar_xml_pck.ds_ocorrencias_w', ds_mensagem_w, false);
									end if;											    																		
								elsif (ar_xml_elemento_w[1].QT_MAX_OCOR > 0) and (ar_xml_elemento_w[1].QT_MIN_OCOR = 0) and ((ar_resultado_atual_w[1].vl)::numeric  > ar_xml_elemento_w[1].QT_MAX_OCOR) then
									ds_mensagem_w := wheb_mensagem_pck.get_texto(294644,
											    ';QT_OCOR='		|| ar_resultado_atual_w[1].vl		||
											    ';NR_SEQUENCIA='	|| ar_xml_elemento_w[1].NR_SEQUENCIA	||
											    ';NM_ELEMENTO=' 	|| ar_xml_elemento_w[1].NM_ELEMENTO	||
											    ';QT_MAX_OCOR=' 	|| ar_xml_elemento_w[1].QT_MAX_OCOR);
											
									if (current_setting('wheb_exportar_xml_pck.ds_ocorrencias_w')::(varchar(4000) IS NOT NULL AND (varchar(4000))::text <> '')) then		    
										PERFORM set_config('wheb_exportar_xml_pck.ds_ocorrencias_w', current_setting('wheb_exportar_xml_pck.ds_ocorrencias_w')::varchar(4000) 	|| chr(13) || chr(10) || ds_mensagem_w, false);
									else
										PERFORM set_config('wheb_exportar_xml_pck.ds_ocorrencias_w', ds_mensagem_w, false);
									end if;											
								end if;
							end if;
						end if;
						
						ar_xml_elemento_w[1].DS_SQL := ds_sql_aux_w;
					end if;
				end if;
				
				SELECT * FROM wheb_exportar_xml_pck.executa_sql(ar_xml_elemento_w, ar_result_query_sup_p, ar_resultado_atual_w, cursor_atual_w) INTO STRICT _ora2pg_r;
 ar_resultado_atual_w := _ora2pg_r.ar_resultado_p; cursor_atual_w := _ora2pg_r.cursor_p;
			
				if ( ar_xml_elemento_w[1](.DS_GRUPO IS NOT NULL AND .DS_GRUPO::text <> '') ) and
					(( ar_xml_elemento_w[1].IE_CRIAR_NULO = 'S' ) or ( ar_resultado_atual_w.count > 0 )) then
					CALL wheb_exportar_xml_pck.addxml(chr(13) || chr(10) || '<' || ar_xml_elemento_w[1].DS_GRUPO || '>');
					ie_fechar_grupo_w := 'S';
				end if;
				LOOP
					BEGIN
						ar_resultado_atual_w := wheb_exportar_xml_pck.armazena_sql(cursor_atual_w, ar_resultado_atual_w);
					EXCEPTION
						WHEN OTHERS THEN
							CALL wheb_mensagem_pck.exibir_mensagem_abort(174653,'NM_ELEMENTO='||ar_xml_elemento_w[1].NM_ELEMENTO||';NR_SEQUENCIA='||ar_xml_elemento_w[1].NR_SEQUENCIA||';DS_ERRO='||sqlerrm||';');
						END;
					if ( ar_resultado_atual_w.count = 0 ) then
						DBMS_SQL.CLOSE_CURSOR(cursor_atual_w);
						EXIT;
					else
						CALL wheb_exportar_xml_pck.montar_xml_elemento(nr_seq_atrib_superior_p,ar_xml_elemento_w,ar_resultado_atual_w);
					end if;
				END LOOP;							
			elsif ( ar_result_query_sup_p.count > 0 ) then
				CALL wheb_exportar_xml_pck.montar_xml_elemento(nr_seq_atrib_superior_p,ar_xml_elemento_w,ar_result_query_sup_p);
			else
				CALL wheb_exportar_xml_pck.montar_xml_elemento(nr_seq_atrib_superior_p,ar_xml_elemento_w,ar_resultado_atual_w);
			end if;
			if ( ar_xml_elemento_w[1](.DS_GRUPO IS NOT NULL AND .DS_GRUPO::text <> '') ) and
				(( ar_xml_elemento_w[1].IE_CRIAR_NULO = 'S' ) or ( ar_resultado_atual_w.count > 0 ) or ( ie_fechar_grupo_w = 'S' )) then				
				CALL wheb_exportar_xml_pck.addxml('</' || ar_xml_elemento_w[1].DS_GRUPO ||'>');
				ie_fechar_grupo_w := 'N';
			end if;
		END LOOP;
		CLOSE c_elemento;
	END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE wheb_exportar_xml_pck.gerar_xml_elemento (nr_seq_elemento_p bigint, ar_result_query_sup_p myArray, nr_seq_atrib_superior_p bigint) FROM PUBLIC;
