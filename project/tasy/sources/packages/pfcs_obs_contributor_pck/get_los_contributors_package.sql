-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pfcs_obs_contributor_pck.get_los_contributors (nr_seq_patient_p text, dt_entrance_p timestamp, vl_pred_los_p bigint) RETURNS varchar AS $body$
DECLARE

		ds_return_w varchar(255);
		ds_pred_popover_los_w         			PHILIPS_JSON := PHILIPS_JSON();
		ds_pred_popover_los_w_content      		PHILIPS_JSON_LIST := PHILIPS_JSON_LIST();
		ds_return_json		    			PHILIPS_JSON := PHILIPS_JSON();
		ds_pred_los_json_list_w				PHILIPS_JSON_LIST := PHILIPS_JSON_LIST();
		ds_pred_los_json_w						PHILIPS_JSON := PHILIPS_JSON();
		ds_pred_los_list_w						PHILIPS_JSON_LIST := PHILIPS_JSON_LIST();
		ds_pred_los_text_w						PHILIPS_JSON := PHILIPS_JSON();
		nr_pred_los_w   					double precision;
		nr_seq_encounter_w 					bigint;
		vl_impact_desc_w					varchar(10);
	
BEGIN
		
		select nr_sequencia
		into STRICT nr_seq_encounter_w
		from pfcs_encounter
		where nr_seq_patient in (SELECT nr_sequencia
		from pfcs_patient
		where patient_id = nr_seq_patient_p);
		
		PERFORM set_config('pfcs_obs_contributor_pck.nr_seq_observation_w', pfcs_obs_contributor_pck.get_observation_seq(nr_seq_encounter_w, current_setting('pfcs_obs_contributor_pck.cd_los_type_w')::varchar(100)), false);
		nr_pred_los_w := 0;
		
		ds_pred_los_text_w.put('type', 'text');
		ds_pred_los_text_w.put('id', 'PRED_REMAINING_LOS');
		ds_pred_los_text_w.put('label', obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_PREDICTED_LOS));
		ds_pred_los_text_w.put('value', pfcs_obs_contributor_pck.get_los_for_popover(dt_entrance_p, vl_pred_los_p));
		ds_pred_popover_los_w_content.append(ds_pred_los_text_w.to_char());
		
		for c01_w in current_setting('pfcs_obs_contributor_pck.cursor_rank')::CURSOR(nr_seq_observation_p(current_setting('pfcs_obs_contributor_pck.nr_seq_observation_w')::pfcs_observ_extension.nr_seq_observation%type, PFCS_PCK_CONSTANTS.CD_LOS_CONTRIBUTOR, 3) loop
			nr_pred_los_w := nr_pred_los_w + 1;
			ds_pred_los_json_w := new PHILIPS_JSON();
			ds_pred_los_list_w := new PHILIPS_JSON_LIST();
			if (upper(c01_w.ds_title) != PFCS_PCK_CONSTANTS.CD_NA and upper(c01_w.ds_title) != PFCS_PCK_CONSTANTS.CD_NAN and (c01_w.ds_title IS NOT NULL AND c01_w.ds_title::text <> '')) then
				ds_pred_los_json_w.put('id', 'PRED_LOS_NAME');
				ds_pred_los_json_w.put('useExpression', false);
				ds_pred_los_json_w.put('value', c01_w.ds_title);
				ds_pred_los_list_w.append(ds_pred_los_json_w.to_char());
				
				ds_pred_los_json_w.put('id', 'PRED_LOS_VALUE');
				ds_pred_los_json_w.put('useExpression', false);
				ds_pred_los_json_w.put('value', c01_w.ds_value);
				ds_pred_los_list_w.append(ds_pred_los_json_w.to_char());
				
				ds_pred_los_json_w.put('id', 'PRED_LOS_IMPACT');
				ds_pred_los_json_w.put('useExpression', true);
				vl_impact_desc_w := pfcs_obs_contributor_pck.get_impact_description(c01_w.vl_impact);
				ds_pred_los_json_w.put('value', vl_impact_desc_w);
				ds_pred_los_list_w.append(ds_pred_los_json_w.to_char());
			end if;
			ds_pred_los_json_list_w.append(ds_pred_los_list_w);
		end loop;
		ds_pred_popover_los_w.put('type', 'table');
		ds_pred_popover_los_w.put('id', 'PRED_LOS');
		ds_pred_popover_los_w.put('records', ds_pred_los_json_list_w);
		ds_pred_popover_los_w_content.append(ds_pred_popover_los_w.to_char());
		
		ds_return_json.put('content', ds_pred_popover_los_w_content.to_char());
		return ds_return_json.to_char();
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pfcs_obs_contributor_pck.get_los_contributors (nr_seq_patient_p text, dt_entrance_p timestamp, vl_pred_los_p bigint) FROM PUBLIC;
