-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION sla_dashboard_pck.reg_sla_geral_cliente_new (dt_month_p timestamp, ie_tipo_sla_p text) RETURNS SETOF T_SLA_GERAL AS $body$
DECLARE


t_sla_geral_row_w	t_sla_geral_row;
dt_referencia_w		timestamp;

c01 CURSOR FOR  --Forma do mes Janeiro e Fev
SELECT  t1.*,
	CASE WHEN ie_tipo_sla='SWP' THEN 'SLA with penalty' WHEN ie_tipo_sla='SWC' THEN 'SLA with contract' WHEN ie_tipo_sla='ALLDEF' THEN  'All defects' END  ds_tipo_sla,
	case
	-- SWP SLA with penalty

	when ie_tipo_sla = 'SWP' then
		obter_meta_bsc_sla(2627,t1.GENERATE_DATE) --ajustar cadastro da regra do bsc

	-- SWC SLA with contract

	when ie_tipo_sla = 'SWC' then
		obter_meta_bsc_sla(2628,t1.GENERATE_DATE) --ajustar cadastro da regra do bsc

	-- ALLDEF ALL Defects

	when ie_tipo_sla = 'ALLDEF' then
		obter_meta_bsc_sla(2637,t1.GENERATE_DATE) --ajustar cadastro da regra do bsc

	end
	percent_meta
from    (
		SELECT  ie_tipo_sla_p ie_tipo_sla,
				count(CASE WHEN t.meta_atingida='S' THEN '1' END ) qt_atendido,
				count(CUSTOMER) qt_recebido,
				round((100*(count(CASE WHEN t.meta_atingida='S' THEN '1' END )/count(CUSTOMER))),2) percent_atingido,
				GENERATE_DATE
		from (
					select	nr_seq_localizacao NR_SEQUENCIA,
						ds_localizacao CUSTOMER,
						qt_sla OPENED_DEFECTS,
						qt_sla_calculo SLA_CALC,
						null RECLASSIFIED_DEFECTS,
						qt_atraso_resposta RESPONSE_BREACHED,
						qt_atraso_solucao RESOLUTION_BREACHED,
						pr_atingido SLA_ACHIEVEMENT,
						qt_target QT_META,
						dt_referencia GENERATE_DATE,
						CASE
						WHEN pr_atingido >= qt_target THEN 'S'
						ELSE 'N'
						END
						META_ATINGIDA
					from	table(sla_dashboard_pck.registros_sla_localizacao_ref(dt_referencia_w, ie_tipo_sla_p)) a
				) t
		group by    ie_tipo_sla_p,
					GENERATE_DATE
	) t1;

c02 CURSOR FOR  --Forma do mes Marco ate Agosto
SELECT  t1.*,
	CASE WHEN ie_tipo_sla='SWP' THEN 'SLA with penalty' WHEN ie_tipo_sla='SWC' THEN 'SLA with contract' WHEN ie_tipo_sla='ALLDEF' THEN  'All defects' END  ds_tipo_sla,
	case
	-- SWP SLA with penalty

	when ie_tipo_sla = 'SWP' then
		obter_meta_bsc_sla(2627,t1.GENERATE_DATE) --ajustar cadastro da regra do bsc

	-- SWC SLA with contract

	when ie_tipo_sla = 'SWC' then
		obter_meta_bsc_sla(2628,t1.GENERATE_DATE) --ajustar cadastro da regra do bsc

	-- ALLDEF ALL Defects

	when ie_tipo_sla = 'ALLDEF' then
		obter_meta_bsc_sla(2637,t1.GENERATE_DATE) --ajustar cadastro da regra do bsc

	end
	percent_meta

from    (
		SELECT  ie_tipo_sla_p ie_tipo_sla,
				count(CASE WHEN t.meta_atingida='S' THEN '1' END ) qt_atendido,
				count(CUSTOMER) qt_recebido,
				round((100*(count(CASE WHEN t.meta_atingida='S' THEN '1' END )/count(CUSTOMER))),2) percent_atingido,
				GENERATE_DATE
		from (
					select	nr_seq_localizacao NR_SEQUENCIA,
						ds_localizacao CUSTOMER,
						qt_sla OPENED_DEFECTS,
						qt_sla_calculo SLA_CALC,
						null RECLASSIFIED_DEFECTS,
						qt_atraso_resposta RESPONSE_BREACHED,
						qt_atraso_solucao RESOLUTION_BREACHED,
						pr_atingido SLA_ACHIEVEMENT,
						qt_target QT_META,
						dt_referencia GENERATE_DATE,
						CASE
						WHEN pr_atingido >= qt_target THEN 'S'
						ELSE 'N'
						END
						META_ATINGIDA
					from	table(sla_dashboard_pck.registros_sla_localizacao(dt_referencia_w, ie_tipo_sla_p)) a
				) t
		group by    ie_tipo_sla_p,
				    GENERATE_DATE
	) t1;
	
c03 CURSOR FOR  --Forma do mes Janeiro e Fev
	SELECT	ds_type ds_tipo_sla,
		ie_type ie_tipo_sla,
		opened_defects qt_sla,
		opened_defects*2 qt_sla_calculo,
		response_breached qt_atraso_resposta,
		resolution_breached qt_atraso_solucao,
		sla_achievement pr_atingido,
		qt_meta
	from	sla_information_v
	where	trunc(generate_date,'month') = dt_referencia_w
	and	ie_type in ('SWP','SWC');
		

c01_w	c01%rowtype;
c02_w	c02%rowtype;
c03_w	c03%rowtype;


BEGIN

dt_referencia_w	:= trunc(dt_month_p,'month');

if (trunc(dt_referencia_w, 'mm') <= trunc(to_date('01/01/2020','dd/mm/yyyy'),'MM'))
	or (trunc(dt_referencia_w, 'mm') = trunc(to_date('01/02/2020','dd/mm/yyyy'),'MM')) then
	
	open C03;
	loop
	fetch C03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */

		
		t_sla_geral_row_w.ds_tipo_sla			:= c03_w.ds_tipo_sla;
		t_sla_geral_row_w.dt_referencia			:= dt_referencia_w;
		t_sla_geral_row_w.ie_tipo_sla			:= c03_w.ie_tipo_sla;
		t_sla_geral_row_w.qt_recebido			:= null;
		t_sla_geral_row_w.qt_atendido			:= null;
		t_sla_geral_row_w.percent_meta			:= c03_w.qt_meta;
		t_sla_geral_row_w.percent_atingido		:= c03_w.pr_atingido;

		RETURN NEXT t_sla_geral_row_w;
	end loop;
	close C03;
	
elsif (trunc(dt_referencia_w, 'mm') >= trunc(to_date('01/03/2020','dd/mm/yyyy'),'MM')) and (trunc(dt_referencia_w, 'mm') <= trunc(to_date('01/08/2020','dd/mm/yyyy'),'MM')) then
	
	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		t_sla_geral_row_w.ds_tipo_sla			:= c02_w.ds_tipo_sla;
		t_sla_geral_row_w.dt_referencia			:= dt_referencia_w;
		t_sla_geral_row_w.ie_tipo_sla			:= c02_w.ie_tipo_sla;
		t_sla_geral_row_w.qt_recebido			:= c02_w.qt_recebido;
		t_sla_geral_row_w.qt_atendido			:= c02_w.qt_atendido;
		t_sla_geral_row_w.percent_meta			:= c02_w.percent_meta;
		t_sla_geral_row_w.percent_atingido		:= c02_w.percent_atingido;

		RETURN NEXT t_sla_geral_row_w;
		end loop;
	close C02;
	
else

	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		t_sla_geral_row_w.ds_tipo_sla			:= c01_w.ds_tipo_sla;
		t_sla_geral_row_w.dt_referencia			:= dt_referencia_w;
		t_sla_geral_row_w.ie_tipo_sla			:= c01_w.ie_tipo_sla;
		t_sla_geral_row_w.qt_recebido			:= c01_w.qt_recebido;
		t_sla_geral_row_w.qt_atendido			:= c01_w.qt_atendido;
		t_sla_geral_row_w.percent_meta			:= c01_w.percent_meta;
		t_sla_geral_row_w.percent_atingido		:= c01_w.percent_atingido;

		RETURN NEXT t_sla_geral_row_w;
	end loop;
	close C01;

end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sla_dashboard_pck.reg_sla_geral_cliente_new (dt_month_p timestamp, ie_tipo_sla_p text) FROM PUBLIC;
