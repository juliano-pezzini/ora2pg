-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	--###################################################################################################




CREATE OR REPLACE FUNCTION sla_dashboard_pck.registros_sla_localizacao (dt_referencia_p timestamp, ie_tipo_sla_p text) RETURNS SETOF T_LOCALIZACAO_SLA AS $body$
DECLARE


	t_localizacao_sla_row_w	t_localizacao_sla_row;
	dt_referencia_w		timestamp;

	c01 CURSOR FOR
	SELECT	nr_seq_localizacao,
		null ds_localizacao,
		qt_sla,
		qt_sla_calculo,
		null reclassified_defects,
		qt_atraso_resposta,
		qt_atraso_solucao,
		pr_atingido,
		null qt_target,
		substr(sla_dashboard_pck.obter_descricao_sla_detail('PSFNP'),1,255) ds_sla_detail,
        (SELECT max(ml.cd_cnpj) from man_localizacao ml where ml.nr_sequencia = man_resumo_sla_w.nr_seq_localizacao) cd_cnpj
	from	man_resumo_sla_w
	where	dt_referencia	= dt_referencia_w
	and	ie_tipo_sla	= ie_tipo_sla_p
	and	ie_tipo_sla_p	= 'ALLDEF'
	and	ie_informacao	= 'L'
	
union

	select	null nr_seq_localizacao,
		a.customer ds_localizacao,
		sum(CASE WHEN a.ie_indicador=1 THEN 1  ELSE 0 END ) qt_sla,
		(sum(CASE WHEN a.ie_indicador=1 THEN 1  ELSE 0 END )*2) qt_sla_calculo,
		sum(CASE WHEN a.ie_indicador=2 THEN 1  ELSE 0 END ) reclassified_defects,
--		sum(decode(a.ie_indicador,3,1,0)) qt_atraso_resposta,

		sum(sla_dashboard_pck.obter_se_estouro_sla(a.ie_indicador,3,a.sla_detail))qt_atraso_resposta,
--		sum(decode(a.ie_indicador,4,1,0)) qt_atraso_solucao,

		sum(sla_dashboard_pck.obter_se_estouro_sla(a.ie_indicador,4,a.sla_detail))qt_atraso_solucao,
		--(100-dividir(((sum(decode(a.ie_indicador,3,1,0))+sum(decode(a.ie_indicador,4,1,0)))*100),(sum(decode(a.ie_indicador,1,1,0))*2))) pr_atingido,

		(100-dividir(((sum(sla_dashboard_pck.obter_se_estouro_sla(a.ie_indicador,3,a.sla_detail))+sum(sla_dashboard_pck.obter_se_estouro_sla(a.ie_indicador,4,a.sla_detail)))*100),(sum(CASE WHEN a.ie_indicador=1 THEN 1  ELSE 0 END )*2))) pr_atingido,
		a.qt_target qt_target,
		substr(sla_dashboard_pck.obter_descricao_sla_detail(a.sla_detail),1,255) ds_sla_detail,
        null cd_cnpj
	from	sla_information_v2 a
	where 	extract_date between dt_referencia_w and fim_mes(dt_referencia_w)
	and	(((ie_tipo_sla_p = 'SWP' and sla_detail in ('CSFP', 'COSP')) and develop_management_id <> 68) or
		 ((ie_tipo_sla_p = 'SWC' and sla_detail in ('CSFNP', 'COSNP')) and develop_management_id <> 68) or (ie_tipo_sla_p = 'OBI' and sla_detail in ('CSFNP', 'COSNP', 'CSFP', 'COSP', 'PSFNP'))
		)
	group by 	a.customer,
			qt_target,
			substr(sla_dashboard_pck.obter_descricao_sla_detail(a.sla_detail),1,255)
	order by 	pr_atingido;

	c01_w	c01%rowtype;

	
BEGIN

	dt_referencia_w	:= trunc(dt_referencia_p,'month');

	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		if (c01_w.nr_seq_localizacao IS NOT NULL AND c01_w.nr_seq_localizacao::text <> '') then
			t_localizacao_sla_row_w.ds_localizacao		:= substr(obter_desc_man_localizacao(c01_w.nr_seq_localizacao),1,255);
		else
			t_localizacao_sla_row_w.ds_localizacao		:= c01_w.ds_localizacao;
		end if;
		t_localizacao_sla_row_w.nr_seq_localizacao	:= c01_w.nr_seq_localizacao;
		t_localizacao_sla_row_w.dt_referencia		:= dt_referencia_w;
		t_localizacao_sla_row_w.qt_atraso_resposta	:= c01_w.qt_atraso_resposta;
		t_localizacao_sla_row_w.qt_atraso_solucao	:= c01_w.qt_atraso_solucao;
		t_localizacao_sla_row_w.qt_sla				:= c01_w.qt_sla;
		t_localizacao_sla_row_w.qt_sla_calculo		:= c01_w.qt_sla_calculo;
		t_localizacao_sla_row_w.pr_atingido			:= c01_w.pr_atingido;
		t_localizacao_sla_row_w.ds_sla_detail			:= c01_w.ds_sla_detail;
		t_localizacao_sla_row_w.cd_cnpj			:= c01_w.cd_cnpj;

		if ie_tipo_sla_p = 'ALLDEF' then
			t_localizacao_sla_row_w.qt_target	:= sla_dashboard_pck.obter_meta_sla(dt_referencia_w,ie_tipo_sla_p);
		else
			if c01_w.qt_target > 0 then
				t_localizacao_sla_row_w.qt_target	:=	c01_w.qt_target;
			else
				t_localizacao_sla_row_w.qt_target	:= sla_dashboard_pck.obter_meta_sla(dt_referencia_w,ie_tipo_sla_p);
			end if;
		end if;

		RETURN NEXT t_localizacao_sla_row_w;

	end loop;
	close C01;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sla_dashboard_pck.registros_sla_localizacao (dt_referencia_p timestamp, ie_tipo_sla_p text) FROM PUBLIC;
