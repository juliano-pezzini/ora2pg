-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE sla_dashboard_pck.incluir_os_sla_recebidas ( cd_estabelecimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text, ie_prioridade_p text, ie_classificacao_p text, dt_ordem_servico_p timestamp, dt_inicio_p timestamp, nr_seq_regra_p bigint, ie_nova_os_p text, dt_reclassif_sla_p timestamp default null, ie_ambiente_p man_ordem_servico.ie_ambiente%type DEFAULT NULL) AS $body$
DECLARE


qt_min_inicio_w			    bigint;
qt_min_termino_w		                    bigint;
nr_seq_sla_w			    bigint;
nr_seq_sla_regra_w	    	                    bigint;
nr_sequencia_w			    bigint;
dt_inicio_prev_w		                    timestamp;
dt_termino_prev_w		                    timestamp;
qt_reg_w		                                    bigint;
ie_tempo_w			    varchar(15);
nr_seq_estagio_w		                    bigint;
nr_seq_tipo_equip_w	                    bigint;
nr_seq_tipo_equip_ww		    bigint;
nr_seq_equipamento_w		    bigint;
ie_tipo_sla_w		    	    man_sla_regra.ie_tipo_sla%type;
ie_utiliza_sla_w		    varchar(255) := obter_valor_param_usuario(299,57,wheb_usuario_pck.get_cd_perfil,coalesce(nm_usuario_p,wheb_usuario_pck.get_nm_usuario),wheb_usuario_pck.get_cd_estabelecimento);
ie_tempo_termino_w		    man_sla_regra.ie_tempo_termino%type;
ie_tipo_sla_termino_w		    man_sla_regra.ie_tipo_sla_termino%type;
qt_os_sla_w			bigint;

C01 CURSOR FOR
SELECT	b.nr_seq_sla,
	b.qt_min_inicio,
	b.qt_min_termino,
	b.ie_tempo,
	b.nr_seq_estagio,
	b.nr_seq_equipamento,
	b.nr_seq_tipo_equipamento,
	b.nr_sequencia,
	b.ie_tipo_sla,
	b.ie_tempo_termino,
	b.ie_tipo_sla_termino
FROM man_sla_regra b, man_sla a
LEFT OUTER JOIN man_sla_loc c ON (a.nr_sequencia = c.nr_seq_sla)
WHERE a.nr_sequencia					= b.nr_seq_sla  and a.dt_vigencia					<= clock_timestamp() and dt_ordem_servico_p between a.dt_vigencia and coalesce(a.dt_fim_vigencia, fim_ano(clock_timestamp())) and coalesce(b.nr_sequencia, coalesce(nr_seq_regra_p,0))	= coalesce(nr_seq_regra_p,0) order by	coalesce(ie_prioridade,' '),
	b.nr_seq_sla;


BEGIN
nr_seq_sla_w			:= 0;
open C01;
loop
fetch C01 into	
	nr_seq_sla_w,
	qt_min_inicio_w,
	qt_min_termino_w,
	ie_tempo_w,
	nr_seq_estagio_w,
	nr_seq_equipamento_w,
	nr_seq_tipo_equip_ww,
	nr_seq_sla_regra_w,
	ie_tipo_sla_w,
	ie_tempo_termino_w,
	ie_tipo_sla_termino_w;		
EXIT WHEN NOT FOUND; /* apply on C01 */
	nr_seq_sla_w		:= nr_seq_sla_w;
	nr_seq_sla_regra_w	:= nr_seq_sla_regra_w;
End loop;
close C01;

if (coalesce(nr_seq_sla_w,0) > 0) then

	if (ie_tempo_w = 'COR') then
		dt_inicio_prev_w	:= dt_ordem_servico_p + (qt_min_inicio_w / 1440);
		dt_termino_prev_w	:= dt_ordem_servico_p + (qt_min_termino_w / 1440);
	else
		dt_inicio_prev_w	:= man_obter_hor_com(cd_estabelecimento_p, dt_ordem_servico_p, qt_min_inicio_w);
		dt_termino_prev_w	:= man_obter_hor_com(cd_estabelecimento_p, dt_ordem_servico_p, qt_min_termino_w);
	end if;
	
	if (coalesce(nr_seq_estagio_w,0) > 0) then
		if (ie_tempo_w = 'COR') then
			dt_inicio_prev_w	:= clock_timestamp() + (qt_min_inicio_w / 1440);
			dt_termino_prev_w	:= clock_timestamp() + (qt_min_termino_w / 1440);
		else
			dt_inicio_prev_w	:= man_obter_hor_com(cd_estabelecimento_p, clock_timestamp(), qt_min_inicio_w);
			dt_termino_prev_w	:= man_obter_hor_com(cd_estabelecimento_p, clock_timestamp(), qt_min_termino_w);
		end if;
	end if;
	
	select	count(1)
	into STRICT	qt_os_sla_w
	from	man_ordem_serv_sla moss
	where	moss.nr_seq_ordem = nr_sequencia_p;
	
	if (qt_os_sla_w = 0) then
		begin
			insert
			into man_ordem_serv_sla(
				nr_sequencia,
				nr_seq_ordem,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_sla,
				ie_prioridade,
				ie_classificacao,
				qt_min_inicio,
				qt_min_termino,
				dt_inicio_prev,
				dt_termino_prev,
				nr_seq_status,
				ie_tempo,
				cd_estabelecimento,
				dt_ordem,
				qt_desvio_inic,
				dt_inicio,
				nr_seq_estagio,
				nr_seq_equipamento,
				nr_seq_tipo_equipamento,
				nr_seq_sla_regra,
				ie_tipo_sla,
				ie_tempo_termino,
				ie_tipo_sla_termino,
				dt_inicio_sla)
			values (	nextval('man_ordem_serv_sla_seq'),
				nr_sequencia_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_sla_w,
				ie_prioridade_p,
				ie_classificacao_p,
				qt_min_inicio_w,
				qt_min_termino_w,
				dt_inicio_prev_w,
				dt_termino_prev_w,
				415,
				ie_tempo_w,
				cd_estabelecimento_p,
				dt_ordem_servico_p,
				0,
				dt_inicio_p,
				nr_seq_estagio_w,
				nr_seq_equipamento_w,
				nr_seq_tipo_equip_ww,
				nr_seq_sla_regra_w,
				ie_tipo_sla_w,
				ie_tempo_termino_w,
				ie_tipo_sla_termino_w,
				coalesce(dt_reclassif_sla_p, dt_ordem_servico_p));
		
				CALL sla_dashboard_pck.man_incluir_os_monit_abertura(nr_sequencia_p,
					nm_usuario_p,
					cd_estabelecimento_p,
					'S',
					ie_classificacao_p,
					ie_prioridade_p,
					qt_min_inicio_w,
					qt_min_termino_w,
					sla_dashboard_pck.obter_tempo_abertura(coalesce(dt_reclassif_sla_p, dt_ordem_servico_p)),
					nr_seq_sla_regra_w,
					ie_nova_os_p,
					ie_tipo_sla_w,
					ie_tipo_sla_termino_w, 
					ie_tempo_w,
					ie_tempo_termino_w,
					ie_ambiente_p);
		end;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sla_dashboard_pck.incluir_os_sla_recebidas ( cd_estabelecimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text, ie_prioridade_p text, ie_classificacao_p text, dt_ordem_servico_p timestamp, dt_inicio_p timestamp, nr_seq_regra_p bigint, ie_nova_os_p text, dt_reclassif_sla_p timestamp default null, ie_ambiente_p man_ordem_servico.ie_ambiente%type DEFAULT NULL) FROM PUBLIC;
