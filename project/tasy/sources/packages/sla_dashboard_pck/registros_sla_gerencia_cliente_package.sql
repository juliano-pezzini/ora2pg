-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	 --###################################################################################################






CREATE OR REPLACE FUNCTION sla_dashboard_pck.registros_sla_gerencia_cliente (dt_referencia_p timestamp, ie_tipo_sla_p text) RETURNS SETOF T_GERENCIA_SLA_CLIENTE AS $body$
DECLARE




    t_gerencia_sla_cliente_row_w        t_gerencia_sla_cliente_row;
    nr_seq_gerencia_des_w        bigint;
    nr_seq_gerencia_sup_w        bigint;
    dt_referencia_w            timestamp;

    c01 CURSOR FOR
        SELECT  ie_tipo_sla_p ie_tipo_sla,
                b.nr_seq_gerencia_des,
                COUNT(CASE WHEN b.meta_atingida='S' THEN  '1' END ) qt_cliente_atendido,
                COUNT(customer) qt_cliente,
                round((100 *(COUNT(CASE WHEN b.meta_atingida='S' THEN  '1' END ) / COUNT(customer))), 2) pr_atingido,
		nr_seq_gerencia_sup,
		case
				-- SWP SLA with penalty

				when ie_tipo_sla_p = 'SWP' then
					obter_meta_bsc_sla(2627,dt_referencia_w) --ajustar cadastro da regra do bsc

				-- SWC SLA with contract

				when ie_tipo_sla_p = 'SWC' then
					obter_meta_bsc_sla(2628,dt_referencia_w) --ajustar cadastro da regra do bsc

				-- ALLDEF ALL Defects

				when ie_tipo_sla_p = 'ALLDEF' then
					obter_meta_bsc_sla(2637,dt_referencia_w) --ajustar cadastro da regra do bsc

				end
				qt_target
        FROM    (
                    SELECT  a.*,
                            CASE
                                WHEN a.pr_atingido >= a.qt_target THEN 'S'
                                ELSE 'N'
                            END meta_atingida
                    FROM    (
                                SELECT  develop_management_id   nr_seq_gerencia_des,
                                        NULL nr_seq_gerencia_sup,
                                        customer,
--                                        ( 100 - dividir(((SUM(DECODE(ie_indicador, 3, 1, 0)) + SUM(DECODE(ie_indicador, 4, 1, 0))) * 100),(SUM(DECODE(ie_indicador, 1, 1, 0)) * 2)) ) pr_atingido,

                                        ( 100 - dividir(((SUM(sla_dashboard_pck.obter_se_estouro_sla(ie_indicador,3,sla_detail)) + SUM(sla_dashboard_pck.obter_se_estouro_sla(ie_indicador,4,sla_detail))) * 100),(SUM(CASE WHEN ie_indicador=1 THEN  1  ELSE 0 END ) * 2)) ) pr_atingido,
					qt_target
                                FROM    sla_information_v2
                                WHERE   extract_date BETWEEN dt_referencia_w AND fim_mes(dt_referencia_w)
                                AND     (    ( ( ie_tipo_sla_p = 'SWP' AND sla_detail IN ('CSFP', 'COSP') ) AND develop_management_id <> 68 )
                                          OR ( ( ie_tipo_sla_p = 'SWC' AND sla_detail IN ('CSFNP','COSNP') ) AND develop_management_id <> 68 )
                                          OR ( ie_tipo_sla_p = 'OBI' AND sla_detail IN ('CSFNP','COSNP','CSFP','COSP','PSFNP') )
                                        )
                                GROUP BY    develop_management_id,
                                            develop_management,
                                            customer,
                                            qt_target
                            ) a
                ) b
        GROUP BY    b.nr_seq_gerencia_des,
		nr_seq_gerencia_sup
        ORDER BY    pr_atingido;

    c01_w    c01%rowtype;




BEGIN

    dt_referencia_w    := trunc(dt_referencia_p,'month');

    open C01;
    loop
    fetch C01 into
        c01_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */

        t_gerencia_sla_cliente_row_w.dt_referencia            := dt_referencia_w;
        t_gerencia_sla_cliente_row_w.nr_seq_gerencia_des    := c01_w.nr_seq_gerencia_des;
        t_gerencia_sla_cliente_row_w.nr_seq_gerencia_sup    := c01_w.nr_seq_gerencia_sup;
        t_gerencia_sla_cliente_row_w.ds_gerencia            := obter_nome_gerencia( coalesce( c01_w.nr_seq_gerencia_des, c01_w.nr_seq_gerencia_sup ));
        t_gerencia_sla_cliente_row_w.qt_cliente                := c01_w.qt_cliente;
        t_gerencia_sla_cliente_row_w.qt_cliente_atendido    := c01_w.qt_cliente_atendido;
        t_gerencia_sla_cliente_row_w.pr_atingido            := c01_w.pr_atingido;
        t_gerencia_sla_cliente_row_w.qt_target                := c01_w.qt_target;

        RETURN NEXT t_gerencia_sla_cliente_row_w;

    end loop;
    close C01;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sla_dashboard_pck.registros_sla_gerencia_cliente (dt_referencia_p timestamp, ie_tipo_sla_p text) FROM PUBLIC;
