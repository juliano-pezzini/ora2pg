-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION sla_dashboard_pck.registros_sla_dashboard_new ( dt_referencia_p timestamp) RETURNS SETOF T_SLA_DASHBOARD AS $body$
DECLARE


t_sla_dashboard_row_w	t_sla_dashboard_row;
dt_referencia_w		timestamp;

c01 CURSOR FOR  --Forma do mes Janeiro e Fev
SELECT  ds_tipo_sla,
	ie_tipo_sla,
	qt_sla,
	qt_sla_calculo,
	qt_atraso_resposta,
	qt_atraso_solucao,
	pr_atingido,
	qt_target,
	dt_referencia
from  table(sla_dashboard_pck.registros_sla_dashboard_ref(dt_referencia_p))
group by ds_tipo_sla,
	ie_tipo_sla,
	qt_sla, 
	qt_sla_calculo, 
	qt_atraso_resposta,
	qt_atraso_solucao,
	pr_atingido,
	qt_target,
	dt_referencia;

c02 CURSOR FOR  --Forma do mes Marco ate Agosto
SELECT	ds_tipo_sla,
	ie_tipo_sla,
	qt_sla,
	qt_sla_calculo,
	qt_atraso_resposta,
	qt_atraso_solucao,
	pr_atingido,
	qt_target,
	dt_referencia
from	table(sla_dashboard_pck.registros_sla_dashboard(dt_referencia_p))
where ie_tipo_sla = 'ALLDEF';

c03 CURSOR FOR  --Forma do mes Marco ate Agosto
SELECT	'All defects' ds_tipo_sla,
	dt_referencia_w,
	ie_tipo_sla,
	qt_sla,
	qt_sla_calculo,
	qt_atraso_resposta,
	qt_atraso_solucao,
	pr_atingido,
	sla_dashboard_pck.obter_meta_sla(dt_referencia_w,'ALLDEF') qt_target
from	man_resumo_sla_w
where	dt_referencia		= dt_referencia_w
and	ie_tipo_sla			= 'ALLDEF'
and	ie_informacao	= 'T';

c01_w	c01%rowtype;
c02_w	c02%rowtype;
c03_w	c03%rowtype;


BEGIN

dt_referencia_w	:= trunc(dt_referencia_p,'month');



if (trunc(dt_referencia_w, 'mm') <= trunc(to_date('01/01/2020','dd/mm/yyyy'),'MM'))
	or (trunc(dt_referencia_w, 'mm') = trunc(to_date('01/02/2020','dd/mm/yyyy'),'MM')) then
	
	open C03;
	loop
	fetch C03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */

		t_sla_dashboard_row_w.ds_tipo_sla		:= c03_w.ds_tipo_sla;
		t_sla_dashboard_row_w.dt_referencia		:= dt_referencia_w;
		t_sla_dashboard_row_w.ie_tipo_sla		:= c03_w.ie_tipo_sla;
		t_sla_dashboard_row_w.qt_atraso_resposta	:= c03_w.qt_atraso_resposta;
		t_sla_dashboard_row_w.qt_atraso_solucao		:= c03_w.qt_atraso_solucao;
		t_sla_dashboard_row_w.qt_sla			:= c03_w.qt_sla;
		t_sla_dashboard_row_w.qt_sla_calculo		:= c03_w.qt_sla_calculo;
		t_sla_dashboard_row_w.pr_atingido		:= c03_w.pr_atingido;
		t_sla_dashboard_row_w.qt_target			:= c03_w.qt_target;
	
		RETURN NEXT t_sla_dashboard_row_w;
		end loop;
	close C03;
	
elsif (trunc(dt_referencia_w, 'mm') >= trunc(to_date('01/03/2020','dd/mm/yyyy'),'MM')) and (trunc(dt_referencia_w, 'mm') <= trunc(to_date('01/08/2020','dd/mm/yyyy'),'MM')) then
	
	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		t_sla_dashboard_row_w.ds_tipo_sla		:= c02_w.ds_tipo_sla;
		t_sla_dashboard_row_w.dt_referencia		:= dt_referencia_w;
		t_sla_dashboard_row_w.ie_tipo_sla		:= c02_w.ie_tipo_sla;
		t_sla_dashboard_row_w.qt_atraso_resposta	:= c02_w.qt_atraso_resposta;
		t_sla_dashboard_row_w.qt_atraso_solucao		:= c02_w.qt_atraso_solucao;
		t_sla_dashboard_row_w.qt_sla			:= c02_w.qt_sla;
		t_sla_dashboard_row_w.qt_sla_calculo		:= c02_w.qt_sla_calculo;
		t_sla_dashboard_row_w.pr_atingido		:= c02_w.pr_atingido;
		t_sla_dashboard_row_w.qt_target			:= c02_w.qt_target;
	
		RETURN NEXT t_sla_dashboard_row_w;
		end loop;
	close C02;
	
else

	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		t_sla_dashboard_row_w.ds_tipo_sla		:= c01_w.ds_tipo_sla;
		t_sla_dashboard_row_w.dt_referencia		:= dt_referencia_w;
		t_sla_dashboard_row_w.ie_tipo_sla		:= c01_w.ie_tipo_sla;
		t_sla_dashboard_row_w.qt_atraso_resposta	:= c01_w.qt_atraso_resposta;
		t_sla_dashboard_row_w.qt_atraso_solucao		:= c01_w.qt_atraso_solucao;
		t_sla_dashboard_row_w.qt_sla			:= c01_w.qt_sla;
		t_sla_dashboard_row_w.qt_sla_calculo		:= c01_w.qt_sla_calculo;
		t_sla_dashboard_row_w.pr_atingido		:= c01_w.pr_atingido;
		t_sla_dashboard_row_w.qt_target			:= c01_w.qt_target;
	
		RETURN NEXT t_sla_dashboard_row_w;
	end loop;
	close C01;

end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sla_dashboard_pck.registros_sla_dashboard_new ( dt_referencia_p timestamp) FROM PUBLIC;
