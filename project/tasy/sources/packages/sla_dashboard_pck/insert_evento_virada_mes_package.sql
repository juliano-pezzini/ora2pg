-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE sla_dashboard_pck.insert_evento_virada_mes ( dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

				
c01 CURSOR FOR
SELECT nr_seq_ordem
from (
	SELECT 	nr_seq_ordem,
		b.dt_ordem_servico,
		ie_tipo_sla,
		ie_tipo_sla_termino,
		sla_dashboard_pck.obter_min_solucao(nr_seq_ordem) qt_min,
		qt_min_termino,
		dt_inicio_sla,
		b.nr_seq_estagio
	from 	man_ordem_serv_sla a,
		man_ordem_servico b,
		man_estagio_processo c
	where 	a.nr_seq_ordem = b.nr_sequencia
	and 	b.nr_seq_estagio = c.nr_sequencia 
	and 	b.ie_status_ordem <> 3 
	and 	b.nr_seq_estagio <> 9
	and 	b.ie_classificacao = 'E' 
	and 	trunc(b.dt_ordem_servico, 'YYYY') = trunc(dt_referencia_p, 'YYYY')
	and (ie_tipo_sla in (1,2) or ie_tipo_sla_termino in (1,2))
	and 	c.ie_aguarda_cliente = 'N' 
	and 	trunc(b.dt_ordem_servico, 'mm')>= trunc(to_date('01/09/2021', 'dd/mm/yyyy'), 'mm')
	) alias9
where qt_min > 0; --OSs que nao possuem estouro de solucao

c01_w	c01%rowtype;

qt_sla_monitor_w	bigint;
dt_inicio_sla_w		man_ordem_serv_sla.dt_inicio_sla%type;
ie_tempo_termino_w	man_ordem_serv_sla.ie_tempo_termino%type;
ie_tipo_sla_termino_w	man_ordem_serv_sla.ie_tipo_sla_termino%type;
qt_min_termino_w	man_ordem_serv_sla.qt_min_termino%type;
ie_classificacao_w	man_ordem_serv_sla.ie_classificacao%type;
ie_prioridade_w		man_ordem_serv_sla.ie_prioridade%type;
qt_min_inicio_w		man_ordem_serv_sla.qt_min_inicio%type;
nr_seq_sla_regra_w	man_ordem_serv_sla.nr_seq_sla_regra%type;
ie_tempo_w		man_ordem_serv_sla.ie_tempo%type;
cd_estabelecimento_w	man_ordem_serv_sla.cd_estabelecimento%type;
nr_seq_grupo_des_w	man_ordem_servico.nr_seq_grupo_des%type;
nr_seq_grupo_sup_w	man_ordem_servico.nr_seq_grupo_sup%type;
dt_ordem_w		timestamp;
ie_tipo_sla_w		man_ordem_serv_sla.ie_tipo_sla%type;
ie_ambiente_w		man_ordem_servico.ie_ambiente%type;



BEGIN
open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		
		select	coalesce(dt_inicio_sla, clock_timestamp()),
			max(ie_tempo_termino),
			max(ie_tipo_sla_termino),
			max(qt_min_termino),
			max(ie_classificacao),
			max(ie_prioridade),
			max(qt_min_inicio),
			max(nr_seq_sla_regra),
			max(ie_tempo),
			max(cd_estabelecimento),
			max(dt_ordem),
			max(ie_tipo_sla)
		into STRICT	dt_inicio_sla_w,
			ie_tempo_termino_w,
			ie_tipo_sla_termino_w,
			qt_min_termino_w,
			ie_classificacao_w,
			ie_prioridade_w,
			qt_min_inicio_w,
			nr_seq_sla_regra_w,
			ie_tempo_w,
			cd_estabelecimento_w,
			dt_ordem_w,
			ie_tipo_sla_w
		from	man_ordem_serv_sla
		where	nr_seq_ordem = c01_w.nr_seq_ordem
		group by dt_inicio_sla;
		
		select  max(nr_seq_grupo_des),
			max(nr_seq_grupo_sup),
			max(ie_ambiente)
		into STRICT	nr_seq_grupo_des_w,
			nr_seq_grupo_sup_w,
			ie_ambiente_w
		from	man_ordem_servico
		where	nr_sequencia = c01_w.nr_seq_ordem;
		
		CALL sla_dashboard_pck.man_incluir_os_evento(c01_w.nr_seq_ordem, nm_usuario_p, cd_estabelecimento_w, nr_seq_grupo_des_w,'13', 'S', ie_classificacao_w, ie_prioridade_w, qt_min_inicio_w, qt_min_termino_w,
					sla_dashboard_pck.obter_tempo_abertura(dt_inicio_sla_w), nr_seq_sla_regra_w, nr_seq_grupo_sup_w, null, ie_tipo_sla_w, ie_tipo_sla_termino_w, ie_tempo_w, ie_tempo_termino_w, ie_ambiente_w);
	end loop;
close C01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sla_dashboard_pck.insert_evento_virada_mes ( dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;
