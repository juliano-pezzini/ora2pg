-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




CREATE OR REPLACE PROCEDURE pls_gerenciar_reembolso_pck.pls_gerar_coparticipacao_aprop ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

							
regras_copartic CURSOR FOR
	SELECT	distinct nr_seq_regra_acao_reemb
	from	pls_conta_proc		
	where	nr_sequencia = nr_seq_conta_proc_p
	
union all

	SELECT	distinct nr_seq_regra_acao_reemb
	from	pls_conta_mat
	where	nr_sequencia = nr_seq_conta_mat_p;

apropriacoes_procedimento CURSOR(nr_seq_regra_acao_reemb_p	pls_regra_reemb_acao.nr_sequencia%type) FOR	
	SELECT 	c.ie_tipo_distribuicao,
		b.vl_apropriado
	from	pls_conta_proc		a,
		pls_conta_proc_aprop	b,
		pls_regra_reemb_aprop 	c
	where	a.nr_sequencia			= b.nr_seq_conta_proc
	and	b.nr_seq_regra_aprop 		= c.nr_sequencia
	and	a.nr_sequencia 			= nr_seq_conta_proc_p
	and	a.nr_seq_regra_acao_reemb 	= nr_seq_regra_acao_reemb_p	
	and	b.ie_coparticipacao = 'S'
	order by c.ie_tipo_distribuicao;
	
apropriacoes_material CURSOR(nr_seq_regra_acao_reemb_p		pls_regra_reemb_acao.nr_sequencia%type) FOR
	SELECT 	c.ie_tipo_distribuicao,
		b.vl_apropriado
	from	pls_conta_mat		a,
		pls_conta_mat_aprop	b,
		pls_regra_reemb_aprop 	c
	where	a.nr_sequencia			= b.nr_seq_conta_mat
	and	b.nr_seq_regra_aprop 		= c.nr_sequencia
	and	a.nr_sequencia 			= nr_seq_conta_mat_p
	and	a.nr_seq_regra_acao_reemb 	= nr_seq_regra_acao_reemb_p	
	and	b.ie_coparticipacao = 'S'
	order by c.ie_tipo_distribuicao;

nr_seq_conta_w			pls_conta.nr_sequencia%type;
vl_unitario_w			pls_conta_proc.vl_unitario%type;
vl_liberado_w			pls_conta_proc.vl_liberado%type;
nr_seq_guia_w			pls_conta.nr_seq_guia%type;
nr_seq_segurado_w		pls_conta.nr_seq_segurado%type;
cd_estabelecimento_w		pls_conta.cd_estabelecimento%type;
dt_autorizacao_w		timestamp;
dt_atendimento_w		pls_conta_mat.dt_atendimento%type;
dt_procedimento_w		pls_conta_proc.dt_procedimento%type;

ie_cobrar_copartic_w		pls_requisicao.ie_cobrar_copartic%type;
ie_data_base_coparticipacao_w	pls_parametros.ie_data_base_coparticipacao%type;
dt_coparticipacao_w		timestamp;
ie_valor_zerado_w		varchar(1);
nr_seq_processo_copartic_w	pls_processo_jud_copartic.nr_sequencia%type;

ie_primeira_apropriacao_w	boolean := true;

ie_status_coparticipacao_w	pls_conta_coparticipacao.ie_status_coparticipacao%type := 'P';

vl_total_copartic_conta_w	double precision := 0;
vl_coparticipacao_w		double precision := 0;

nr_seq_conta_coparticipacao_w	pls_conta_coparticipacao.nr_sequencia%type;
qt_itens_cobrados_w		pls_conta_proc_aprop.qt_apropriada%type;
ie_cobrar_pos_estab_w		varchar(1);
ie_controle_coparticipacao_w	pls_parametros.ie_controle_coparticipacao%type;
ie_status_item_w		pls_conta_proc.ie_status%type;
ie_status_mensalidade_w		pls_conta_coparticipacao.ie_status_mensalidade%type;

BEGIN

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then

	select	c.nr_seq_conta,
		c.vl_unitario,
		c.vl_liberado,
		b.nr_seq_guia,
		b.nr_seq_segurado,
		b.cd_estabelecimento,
		trunc(coalesce(b.dt_atendimento_referencia, coalesce(a.dt_mes_competencia,clock_timestamp())),'dd') dt_autorizacao,
		c.dt_procedimento,
		c.ie_status
	into STRICT	nr_seq_conta_w,
		vl_unitario_w,
		vl_liberado_w,
		nr_seq_guia_w,
		nr_seq_segurado_w,
		cd_estabelecimento_w,
		dt_autorizacao_w,
		dt_procedimento_w,
		ie_status_item_w
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_proc		c
	where	a.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = c.nr_seq_conta
	and	c.nr_sequencia = nr_seq_conta_proc_p;
	
	select	max(b.ie_cobrar_copartic)
	into STRICT	ie_cobrar_copartic_w
	from	pls_execucao_req_item	a,
		pls_requisicao		b
	where	a.nr_seq_requisicao	= b.nr_sequencia
	and	a.nr_seq_guia		= nr_seq_guia_w;
	
	select	coalesce(max(ie_data_base_coparticipacao),'C'),
		coalesce(max(ie_controle_coparticipacao),'N')
	into STRICT	ie_data_base_coparticipacao_w,
		ie_controle_coparticipacao_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	if (ie_data_base_coparticipacao_w = 'I') then
		dt_autorizacao_w := coalesce(dt_procedimento_w,dt_autorizacao_w);
	end if;
	
	dt_coparticipacao_w := dt_autorizacao_w;	
	
	ie_cobrar_pos_estab_w  := pls_obter_se_pos_estab(nr_seq_segurado_w, cd_estabelecimento_w, dt_autorizacao_w);
	if (ie_cobrar_pos_estab_w = 'N') then
	
		pls_consis_item_copart_liminar(nr_seq_conta_proc_p, null, nr_seq_segurado_w, dt_coparticipacao_w, ie_valor_zerado_w, nr_seq_processo_copartic_w);
		
		if (coalesce(ie_cobrar_copartic_w,'S') = 'N') or (coalesce(ie_valor_zerado_w, 'N') = 'S') then
			ie_status_coparticipacao_w := 'N';
		end if;
		
		if (coalesce(ie_cobrar_copartic_w,'S') = 'N') then
			ie_status_mensalidade_w := 'N';
		else
			if (ie_controle_coparticipacao_w = 'S') then
				ie_status_mensalidade_w := 'P';
			else
				if (ie_status_item_w in ('L','S')) then
					ie_status_mensalidade_w := 'L';
				else
					ie_status_mensalidade_w := 'P';
				end if;
			end if;
		end if;
		
		
		for regras_copartic_w in regras_copartic loop			
				
			ie_primeira_apropriacao_w := true;	
		
			for apropriacoes_procedimento_w in apropriacoes_procedimento(regras_copartic_w.nr_seq_regra_acao_reemb) loop
									
				if (ie_primeira_apropriacao_w) then
					select	coalesce(max(b.qt_apropriada), 0)
					into STRICT	qt_itens_cobrados_w
					from	pls_conta_proc		a,
						pls_conta_proc_aprop	b					
					where	a.nr_sequencia		= b.nr_seq_conta_proc
					and	a.nr_sequencia		= nr_seq_conta_proc_p
					and	a.nr_seq_regra_acao_reemb = regras_copartic_w.nr_seq_regra_acao_reemb;
				
					select	nextval('pls_conta_coparticipacao_seq')
					into STRICT	nr_seq_conta_coparticipacao_w
					;							
					
					insert into pls_conta_coparticipacao(	nr_sequencia, nr_seq_conta_proc, vl_coparticipacao, tx_coparticipacao,
								nr_seq_conta, ie_status_mensalidade, ie_origem_regra, vl_base_copartic,
								qt_liberada_copartic, ie_calculo_coparticipacao, nm_usuario,
								nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec, ie_status_coparticipacao)
						values (	nr_seq_conta_coparticipacao_w, nr_seq_conta_proc_p, 0, 0,
								nr_seq_conta_w, ie_status_mensalidade_w, 'P', vl_unitario_w, 
								qt_itens_cobrados_w, 'P', nm_usuario_p,
								nm_usuario_p, clock_timestamp(), clock_timestamp(), ie_status_coparticipacao_w);
								
					ie_primeira_apropriacao_w := false;
				end if;
				
				vl_coparticipacao_w := vl_coparticipacao_w + apropriacoes_procedimento_w.vl_apropriado;

			end loop;
			
			if (vl_coparticipacao_w <> 0) then
				
				update	pls_conta_coparticipacao
				set	vl_coparticipacao_unit	= dividir(vl_coparticipacao_w, qt_itens_cobrados_w),
					vl_coparticipacao	= vl_coparticipacao_w,
					tx_coparticipacao	= dividir(vl_coparticipacao_w, vl_liberado_w) * 100,
					vl_provisao		= vl_coparticipacao_w
				where	nr_sequencia		= nr_seq_conta_coparticipacao_w;
				
				update	pls_conta_proc
				set	vl_coparticipacao 	= vl_coparticipacao_w
				where	nr_sequencia	  	= nr_seq_conta_proc_p;
				
				select	sum(vl_coparticipacao)
				into STRICT	vl_total_copartic_conta_w
				from	pls_conta_coparticipacao
				where	nr_seq_conta = nr_seq_conta_w;
				
				if (vl_total_copartic_conta_w > 0) then
					update	pls_conta
					set	vl_coparticipacao	= vl_total_copartic_conta_w
					where	nr_sequencia		= nr_seq_conta_w;
				end if;
			end if;
		end loop;
	end if;
elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
	
	select	c.nr_seq_conta,
		c.vl_unitario,
		c.vl_liberado,
		b.nr_seq_guia,
		b.nr_seq_segurado,
		b.cd_estabelecimento,
		trunc(coalesce(b.dt_atendimento_referencia, coalesce(a.dt_mes_competencia,clock_timestamp())),'dd') dt_autorizacao,
		c.dt_atendimento,
		c.ie_status
	into STRICT	nr_seq_conta_w,
		vl_unitario_w,
		vl_liberado_w,
		nr_seq_guia_w,
		nr_seq_segurado_w,
		cd_estabelecimento_w,
		dt_autorizacao_w,
		dt_atendimento_w,
		ie_status_item_w
	from	pls_protocolo_conta	a,
		pls_conta		b,
		pls_conta_mat		c
	where	a.nr_sequencia = b.nr_seq_protocolo
	and	b.nr_sequencia = c.nr_seq_conta
	and	c.nr_sequencia = nr_seq_conta_mat_p;
	
	select	max(b.ie_cobrar_copartic)
	into STRICT	ie_cobrar_copartic_w
	from	pls_execucao_req_item	a,
		pls_requisicao		b
	where	a.nr_seq_requisicao	= b.nr_sequencia
	and	a.nr_seq_guia		= nr_seq_guia_w;
	
	select	coalesce(max(ie_data_base_coparticipacao),'C'),
		coalesce(max(ie_controle_coparticipacao),'N')
	into STRICT	ie_data_base_coparticipacao_w,
		ie_controle_coparticipacao_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	if (ie_data_base_coparticipacao_w = 'I') then
		dt_autorizacao_w := coalesce(dt_atendimento_w, dt_autorizacao_w);
	end if;
	
	dt_coparticipacao_w := dt_autorizacao_w;
	
	ie_cobrar_pos_estab_w  := pls_obter_se_pos_estab(nr_seq_segurado_w, cd_estabelecimento_w, dt_autorizacao_w);
	if (ie_cobrar_pos_estab_w = 'N') then
	
		pls_consis_item_copart_liminar(null, nr_seq_conta_mat_p, nr_seq_segurado_w, dt_coparticipacao_w, ie_valor_zerado_w, nr_seq_processo_copartic_w);
		
		if (coalesce(ie_cobrar_copartic_w,'S') = 'N') or (coalesce(ie_valor_zerado_w, 'N') = 'S') then
			ie_status_coparticipacao_w := 'N';
		end if;
		
		if (coalesce(ie_cobrar_copartic_w,'S') = 'N') then
			ie_status_mensalidade_w := 'N';
		else
			if (ie_controle_coparticipacao_w = 'S') then
				ie_status_mensalidade_w := 'P';
			else
				if (ie_status_item_w in ('L','S')) then
					ie_status_mensalidade_w := 'L';
				else
					ie_status_mensalidade_w := 'P';
				end if;
			end if;
		end if;
		
		for regras_copartic_w in regras_copartic loop
		
			ie_primeira_apropriacao_w := true;
			
			for apropriacoes_material_w in apropriacoes_material(regras_copartic_w.nr_seq_regra_acao_reemb) loop
			
				if (ie_primeira_apropriacao_w) then
					select	coalesce(max(b.qt_apropriada), 0)
					into STRICT	qt_itens_cobrados_w
					from	pls_conta_mat		a,
						pls_conta_mat_aprop	b					
					where	a.nr_sequencia		= b.nr_seq_conta_mat
					and	a.nr_sequencia		= nr_seq_conta_mat_p
					and	a.nr_seq_regra_acao_reemb = regras_copartic_w.nr_seq_regra_acao_reemb;
					
					select	nextval('pls_conta_coparticipacao_seq')
					into STRICT	nr_seq_conta_coparticipacao_w
					;
						
					insert into pls_conta_coparticipacao(	nr_sequencia, nr_seq_conta_mat, vl_coparticipacao, tx_coparticipacao,
								nr_seq_conta, ie_status_mensalidade, ie_origem_regra, vl_base_copartic,
								qt_liberada_copartic, ie_calculo_coparticipacao, nm_usuario,
								nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec, ie_status_coparticipacao)
						values (	nr_seq_conta_coparticipacao_w, nr_seq_conta_mat_p, 0, 0,
								nr_seq_conta_w, ie_status_mensalidade_w, 'P', vl_unitario_w, 
								qt_itens_cobrados_w, 'P', nm_usuario_p,
								nm_usuario_p, clock_timestamp(), clock_timestamp(), ie_status_coparticipacao_w);					
						
					ie_primeira_apropriacao_w := false;
				end if;
				
				vl_coparticipacao_w := vl_coparticipacao_w + apropriacoes_material_w.vl_apropriado;
					
			end loop;
			
			if (vl_coparticipacao_w <> 0) then
				update	pls_conta_coparticipacao
				set	vl_coparticipacao_unit	= dividir(vl_coparticipacao_w, qt_itens_cobrados_w),
					vl_coparticipacao	= vl_coparticipacao_w,
					tx_coparticipacao	= dividir(vl_coparticipacao_w,vl_liberado_w) * 100,
					vl_provisao		= vl_coparticipacao_w
				where	nr_sequencia		= nr_seq_conta_coparticipacao_w;
				
				update	pls_conta_mat
				set	vl_participacao 	= vl_coparticipacao_w
				where	nr_sequencia	  	= nr_seq_conta_mat_p;
						
				select	sum(vl_coparticipacao)
				into STRICT	vl_total_copartic_conta_w
				from	pls_conta_coparticipacao
				where	nr_seq_conta = nr_seq_conta_w;
				
				if (vl_total_copartic_conta_w > 0) then
					update	pls_conta
					set	vl_coparticipacao	= vl_total_copartic_conta_w
					where	nr_sequencia		= nr_seq_conta_w;
				end if;
			end if;
		end loop;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerenciar_reembolso_pck.pls_gerar_coparticipacao_aprop ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
