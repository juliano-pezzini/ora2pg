-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




CREATE OR REPLACE FUNCTION pls_gerenciar_reembolso_pck.obter_restricao_beneficiario ( dados_filtro_benef_p pls_gerenciar_reembolso_pck.dados_filtro_benef, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Montar as restricoes e binds dos campos de filtro de beneficiario.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dados_restricao_w	pls_gerenciar_reembolso_pck.dados_select;

ds_filtro_w		varchar(2000);
ds_alias_w		varchar(6);


BEGIN

-- Inicializar o retorno

dados_restricao_w.ds_restricao	:= null;
ds_alias_w  	:= 'a';
ds_filtro_w 	:= null;

-- Beneficiario - NR_SEQ_SEGURADO

if (dados_filtro_benef_p.nr_seq_segurado IS NOT NULL AND dados_filtro_benef_p.nr_seq_segurado::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w || 
			'and ' || ds_alias_w || '.nr_seq_segurado = :nr_seq_segurado ';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_segurado', dados_filtro_benef_p.nr_seq_segurado, valor_bind_p);
end if;

-- Tipo beneficiario - IE_TIPO_SEGURADO

if (dados_filtro_benef_p.ie_tipo_segurado IS NOT NULL AND dados_filtro_benef_p.ie_tipo_segurado::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and ' || ds_alias_w || '.ie_tipo_segurado = :ie_tipo_segurado ';
	
	valor_bind_p := sql_pck.bind_variable(':ie_tipo_segurado', dados_filtro_benef_p.ie_tipo_segurado, valor_bind_p);
end if;

-- Contrato - NR_SEQ_CONTRATO

if (dados_filtro_benef_p.nr_seq_contrato IS NOT NULL AND dados_filtro_benef_p.nr_seq_contrato::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and ' || ds_alias_w || '.nr_seq_contrato = :nr_seq_contrato ';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_contrato', dados_filtro_benef_p.nr_seq_contrato, valor_bind_p);
end if;

-- Contrato principal - NR_SEQ_CONTRATO_PRINCIPAL

if (dados_filtro_benef_p.nr_seq_contrato_principal IS NOT NULL AND dados_filtro_benef_p.nr_seq_contrato_principal::text <> '') then
	ds_filtro_w := 	ds_filtro_w 										  || pls_util_pck.enter_w ||
			'and	exists (select	1 								' || pls_util_pck.enter_w || 
			'		from	pls_contrato	x 						' || pls_util_pck.enter_w || 
			'		where	x.nr_sequencia = ' || ds_alias_w || '.nr_seq_contrato 		' || pls_util_pck.enter_w || 
			'		and	x.nr_contrato_principal = :nr_seq_contrato_principal) 		';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_contrato_principal', dados_filtro_benef_p.nr_seq_contrato_principal, valor_bind_p);
end if;

-- Produto - NR_SEQ_PLANO

if (dados_filtro_benef_p.nr_seq_plano IS NOT NULL AND dados_filtro_benef_p.nr_seq_plano::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and ' || ds_alias_w || '.nr_seq_plano_conta = :nr_seq_plano ';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_plano', dados_filtro_benef_p.nr_seq_plano, valor_bind_p);
end if;	

-- Fx salarial inicial - NR_SEQ_FAIXA_SAL_INICIAL

-- Fx salarial final - NR_SEQ_FAIXA_SAL_FINAL

if (dados_filtro_benef_p.nr_seq_faixa_sal_inicial IS NOT NULL AND dados_filtro_benef_p.nr_seq_faixa_sal_inicial::text <> '') and (dados_filtro_benef_p.nr_seq_faixa_sal_final IS NOT NULL AND dados_filtro_benef_p.nr_seq_faixa_sal_final::text <> '') then
	ds_filtro_w := 	ds_filtro_w				 				  			  || pls_util_pck.enter_w ||
			'and	exists (select	1	 								' || pls_util_pck.enter_w || 	
			'		from	pls_segurado	x							' || pls_util_pck.enter_w || 
			'		where	x.nr_sequencia = ' || ds_alias_w || '.nr_seq_segurado			' || pls_util_pck.enter_w || 
			'		and	x.nr_seq_faixa_salarial between 					' || pls_util_pck.enter_w || 
			'			nvl(pls_obter_faixa_salarial(:nr_seq_faixa_sal_inicial,''N''),0) and	' || pls_util_pck.enter_w || 
			'			nvl(pls_obter_faixa_salarial(:nr_seq_faixa_sal_final,''N''),0))		';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_faixa_sal_inicial', dados_filtro_benef_p.nr_seq_faixa_sal_inicial, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':nr_seq_faixa_sal_final', dados_filtro_benef_p.nr_seq_faixa_sal_final, valor_bind_p);
elsif (dados_filtro_benef_p.nr_seq_faixa_sal_inicial IS NOT NULL AND dados_filtro_benef_p.nr_seq_faixa_sal_inicial::text <> '') then
	ds_filtro_w := 	ds_filtro_w				 				  			  || pls_util_pck.enter_w ||
			'and	exists (select	1	 								' || pls_util_pck.enter_w || 	
			'		from	pls_segurado	x							' || pls_util_pck.enter_w || 
			'		where	x.nr_sequencia = ' || ds_alias_w || '.nr_seq_segurado			' || pls_util_pck.enter_w || 
			'		and	x.nr_seq_faixa_salarial >= 					' || pls_util_pck.enter_w || 
			'			nvl(pls_obter_faixa_salarial(:nr_seq_faixa_sal_inicial,''N''),0)) 	';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_faixa_sal_inicial', dados_filtro_benef_p.nr_seq_faixa_sal_inicial, valor_bind_p);
elsif (dados_filtro_benef_p.nr_seq_faixa_sal_final IS NOT NULL AND dados_filtro_benef_p.nr_seq_faixa_sal_final::text <> '') then	
	ds_filtro_w := 	ds_filtro_w				 				  			  || pls_util_pck.enter_w ||
			'and	exists (select	1	 								' || pls_util_pck.enter_w || 	
			'		from	pls_segurado	x							' || pls_util_pck.enter_w || 
			'		where	x.nr_sequencia = ' || ds_alias_w || '.nr_seq_segurado			' || pls_util_pck.enter_w || 
			'		and	x.nr_seq_faixa_salarial <= 					' || pls_util_pck.enter_w || 		
			'			nvl(pls_obter_faixa_salarial(:nr_seq_faixa_sal_final,''N''),0))		';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_faixa_sal_final', dados_filtro_benef_p.nr_seq_faixa_sal_final, valor_bind_p);
end if;	

-- Qt idade min/max - QT_IDADE_MIN

if (dados_filtro_benef_p.qt_idade_min IS NOT NULL AND dados_filtro_benef_p.qt_idade_min::text <> '') and (dados_filtro_benef_p.qt_idade_max IS NOT NULL AND dados_filtro_benef_p.qt_idade_max::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and ' || ds_alias_w || '.qt_idade_benef between :qt_idade_min and :qt_idade_max ';
	
	valor_bind_p := sql_pck.bind_variable(':qt_idade_min', dados_filtro_benef_p.qt_idade_min, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':qt_idade_max', dados_filtro_benef_p.qt_idade_max, valor_bind_p);
elsif (dados_filtro_benef_p.qt_idade_min IS NOT NULL AND dados_filtro_benef_p.qt_idade_min::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and ' || ds_alias_w || '.qt_idade_benef >= :qt_idade_min ';
	
	valor_bind_p := sql_pck.bind_variable(':qt_idade_min', dados_filtro_benef_p.qt_idade_min, valor_bind_p);
elsif (dados_filtro_benef_p.qt_idade_max IS NOT NULL AND dados_filtro_benef_p.qt_idade_max::text <> '') then
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and ' || ds_alias_w || '.qt_idade_benef <= :qt_idade_max ';

	valor_bind_p := sql_pck.bind_variable(':qt_idade_max', dados_filtro_benef_p.qt_idade_max, valor_bind_p);
end if;	

-- Grupo contrato nr_seq_grupo_contrato

if (dados_filtro_benef_p.nr_seq_grupo_contrato IS NOT NULL AND dados_filtro_benef_p.nr_seq_grupo_contrato::text <> '') then
	ds_filtro_w := 	ds_filtro_w 										  || pls_util_pck.enter_w ||
			'and	exists (select	1 								' || pls_util_pck.enter_w || 
			'		from	pls_preco_contrato y 						' || pls_util_pck.enter_w ||
			'		where	y.nr_seq_grupo = :nr_seq_grupo_contrato				' || pls_util_pck.enter_w ||
			'		and	Y.nr_seq_contrato = ' || ds_alias_w || '.nr_seq_contrato )	';
	
	valor_bind_p := sql_pck.bind_variable(':nr_seq_grupo_contrato', dados_filtro_benef_p.nr_seq_grupo_contrato, valor_bind_p);
end if;

	
if (ds_filtro_w IS NOT NULL AND ds_filtro_w::text <> '') then
	dados_restricao_w.ds_restricao := ds_filtro_w;
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_gerenciar_reembolso_pck.obter_restricao_beneficiario ( dados_filtro_benef_p pls_gerenciar_reembolso_pck.dados_filtro_benef, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
