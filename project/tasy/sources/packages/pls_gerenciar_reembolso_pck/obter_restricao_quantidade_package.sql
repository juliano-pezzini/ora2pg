-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




CREATE OR REPLACE FUNCTION pls_gerenciar_reembolso_pck.obter_restricao_quantidade ( dados_filtro_qtd_p pls_gerenciar_reembolso_pck.dados_filtro_qtd, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE
			
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Montar as restricoes e binds dos campos de filtro de quantidade.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dados_restricao_w	pls_gerenciar_reembolso_pck.dados_select;

ds_filtro_w		varchar(2000);
ds_filtro_proc_w	varchar(2000);
ds_filtro_mat_w		varchar(2000);
ds_periodo_w		varchar(2000);
ds_alias_w		varchar(6);
ds_atendimento_w	varchar(50);


BEGIN

dados_restricao_w.ds_restricao		:= null;
dados_restricao_w.ds_restricao_proc	:= null;
dados_restricao_w.ds_restricao_mat	:= null;
ds_filtro_w 				:= null;
ds_filtro_proc_w			:= null;
ds_filtro_mat_w				:= null;
ds_periodo_w 				:= null;
ds_alias_w  				:= 'a';

-- Tipo despesa - IE_TIPO_CONSISTENCIA

if (dados_filtro_qtd_p.ie_tipo_consistencia IS NOT NULL AND dados_filtro_qtd_p.ie_tipo_consistencia::text <> '') then

	if (dados_filtro_qtd_p.ie_tipo_consistencia = 'CO') then
		ds_atendimento_w 	:= 'dt_atendimento';		
	else
		ds_atendimento_w 	:= 'dt_atendimento_conta';			
	end if;
	
	-- Periodo - QT_PERIODO

	-- Tipo periodo - IE_TIPO_PERIODO

	if (dados_filtro_qtd_p.qt_periodo IS NOT NULL AND dados_filtro_qtd_p.qt_periodo::text <> '') and (dados_filtro_qtd_p.ie_tipo_periodo IS NOT NULL AND dados_filtro_qtd_p.ie_tipo_periodo::text <> '') then		
		if (dados_filtro_qtd_p.ie_tipo_periodo = 'A') then -- Anos
			ds_periodo_w := 'and x.' || ds_atendimento_w || ' between ' || pls_util_pck.enter_w ||
					'	(add_months(' || ds_alias_w || '.dt_atendimento_conta, - (:qt_periodo * 12))) and ' || ds_alias_w || '.dt_atendimento_conta ';		
		elsif (dados_filtro_qtd_p.ie_tipo_periodo = 'M') then -- Meses
			ds_periodo_w := 'and x.' || ds_atendimento_w || ' between ' || pls_util_pck.enter_w ||
					'	(add_months(' || ds_alias_w || '.dt_atendimento_conta, - :qt_periodo)) and ' || ds_alias_w || '.dt_atendimento_conta ';	
		elsif (dados_filtro_qtd_p.ie_tipo_periodo = 'D') then -- Dias
			ds_periodo_w := 'and x.' || ds_atendimento_w || ' between ' || pls_util_pck.enter_w ||
					'	(' || ds_alias_w || '.dt_atendimento_conta - :qt_periodo) and ' || ds_alias_w || '.dt_atendimento_conta ';					
		end if;	
		
		valor_bind_p := sql_pck.bind_variable(':qt_periodo', dados_filtro_qtd_p.qt_periodo, valor_bind_p);		
	end if;
	
	if (ds_periodo_w IS NOT NULL AND ds_periodo_w::text <> '') then
		if (dados_filtro_qtd_p.ie_tipo_consistencia = 'IR') then -- Quantidade total de itens que entraram na regra
			
			ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w || 						
						' and ((select  sum(x.qt_procedimento_imp) qt_item    					' || pls_util_pck.enter_w ||
						'	from    pls_conta_proc_v        x                           			' || pls_util_pck.enter_w ||  						
						'	where	x.nr_seq_segurado = ' || ds_alias_w || '.nr_seq_segurado 		' || pls_util_pck.enter_w ||  
							ds_periodo_w || ' )								' || pls_util_pck.enter_w ||
						'	+ 										' || pls_util_pck.enter_w ||  
						'      (select  sum(x.qt_material_imp) qt_item  					' || pls_util_pck.enter_w ||  
						'	from    pls_conta_mat_v         x            					' || pls_util_pck.enter_w || 
						'	where	x.nr_seq_segurado = ' || ds_alias_w || '.nr_seq_segurado 		' || pls_util_pck.enter_w ||  
							ds_periodo_w 								 	  || pls_util_pck.enter_w || 
						' 	)) between :qt_inicial and :qt_final						';				
								
		elsif (dados_filtro_qtd_p.ie_tipo_consistencia = 'CI') then -- Quantidade por codigo do item
			
			ds_filtro_proc_w := 	pls_util_pck.enter_w || 	
						' and (	select  sum(x.qt_procedimento_imp) qt_item    					' || pls_util_pck.enter_w ||
						'	from    pls_conta_proc_v        x                           			' || pls_util_pck.enter_w ||  						
						'	where	x.nr_seq_segurado = ' || ds_alias_w || '.nr_seq_segurado 		' || pls_util_pck.enter_w ||  
						'	and	x.cd_procedimento = ' || ds_alias_w || '.cd_procedimento		' || pls_util_pck.enter_w ||  
							ds_periodo_w || ' ) between :qt_inicial and :qt_final 				';
						
			ds_filtro_mat_w := 	pls_util_pck.enter_w || 	
						' and (	select  sum(x.qt_material_imp) qt_item  					' || pls_util_pck.enter_w ||
						'	from    pls_conta_mat_v         x            					' || pls_util_pck.enter_w || 
						'	where	x.nr_seq_segurado = ' || ds_alias_w || '.nr_seq_segurado 		' || pls_util_pck.enter_w ||
						'	and	x.nr_seq_material = ' || ds_alias_w || '.nr_seq_material		' || pls_util_pck.enter_w ||  
							ds_periodo_w || ' ) between :qt_inicial and :qt_final				';
									
		elsif (dados_filtro_qtd_p.ie_tipo_consistencia = 'CO') then -- Quantidade de contas	
			
			ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
						' and (	select 	count(1) 								' || pls_util_pck.enter_w ||  
						'	from	pls_conta	x 							' || pls_util_pck.enter_w ||  
						'	where	x.nr_seq_segurado = ' || ds_alias_w || '.nr_seq_segurado 		' || pls_util_pck.enter_w ||  
							ds_periodo_w || ' ) between :qt_inicial and :qt_final				';	
						
		end if;
	end if;
		
	if (dados_filtro_qtd_p.qt_inicial IS NOT NULL AND dados_filtro_qtd_p.qt_inicial::text <> '') and (dados_filtro_qtd_p.qt_final IS NOT NULL AND dados_filtro_qtd_p.qt_final::text <> '') then
		valor_bind_p := sql_pck.bind_variable(':qt_inicial', dados_filtro_qtd_p.qt_inicial, valor_bind_p);
		valor_bind_p := sql_pck.bind_variable(':qt_final', dados_filtro_qtd_p.qt_final, valor_bind_p);
	elsif (dados_filtro_qtd_p.qt_inicial IS NOT NULL AND dados_filtro_qtd_p.qt_inicial::text <> '') then
		valor_bind_p := sql_pck.bind_variable(':qt_inicial', dados_filtro_qtd_p.qt_inicial, valor_bind_p);
		valor_bind_p := sql_pck.bind_variable(':qt_final', 99999, valor_bind_p);
	elsif (dados_filtro_qtd_p.qt_final IS NOT NULL AND dados_filtro_qtd_p.qt_final::text <> '') then
		valor_bind_p := sql_pck.bind_variable(':qt_inicial', 1, valor_bind_p);
		valor_bind_p := sql_pck.bind_variable(':qt_final', dados_filtro_qtd_p.qt_final, valor_bind_p);
	else
		valor_bind_p := sql_pck.bind_variable(':qt_inicial', 1, valor_bind_p);
		valor_bind_p := sql_pck.bind_variable(':qt_final', 99999, valor_bind_p);
	end if;		
end if;

if (ds_filtro_w IS NOT NULL AND ds_filtro_w::text <> '') then
	dados_restricao_w.ds_restricao := ds_filtro_w;
end if;

if (ds_filtro_proc_w IS NOT NULL AND ds_filtro_proc_w::text <> '') then
	dados_restricao_w.ds_restricao_proc := ds_filtro_proc_w;
end if;

if (ds_filtro_mat_w IS NOT NULL AND ds_filtro_mat_w::text <> '') then
	dados_restricao_w.ds_restricao_mat := ds_filtro_mat_w;
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_gerenciar_reembolso_pck.obter_restricao_quantidade ( dados_filtro_qtd_p pls_gerenciar_reembolso_pck.dados_filtro_qtd, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
