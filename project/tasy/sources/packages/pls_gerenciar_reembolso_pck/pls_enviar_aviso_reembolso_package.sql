-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



CREATE OR REPLACE PROCEDURE pls_gerenciar_reembolso_pck.pls_enviar_aviso_reembolso ( nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gerar a comunicacao de aviso para o prazo de reembolso
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

 Alteracoes:	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


sql_cursor_w		varchar(4000);
dados_regra_aviso_w	pls_gerenciar_reembolso_pck.dados_regra_aviso;
bind_sql_valor_w	sql_pck.t_dado_bind;
cur_prot_w		sql_pck.t_cursor;
qt_reembolso_w		integer;
ds_email_origem_w	usuario.ds_email%type;

-- Cursor com as regras de aviso

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_estabelecimento,
		ds_mensagem,
		ie_status,
		qt_dia_antecedente,
		'Alerta de prazo de reembolso' ds_titulo
	from	pls_regra_comunic_reemb
	where	ie_situacao	= 'A';
	
-- cursor com os alvos da comunicacao

c02 CURSOR(	nr_seq_regra_pc	pls_regra_comunic_reemb.nr_sequencia%type) FOR
	SELECT	a.cd_perfil,
		a.nm_usuario_dest,
		a.ie_comunic_interna,
		a.ie_email,
		b.ds_email
	FROM pls_regra_com_reemb_dest a
LEFT OUTER JOIN usuario b ON (a.nm_usuario_dest = b.nm_usuario)
WHERE nr_seq_regra_comunic	= nr_seq_regra_pc;
	
-- cursor com os usuarios do perfil

c03 CURSOR(	cd_perfil_pc	usuario_perfil.cd_perfil%type) FOR
	SELECT	b.ds_email
	from	usuario_perfil	a,
		usuario		b
	where	a.cd_perfil	= cd_perfil_pc
	and	b.nm_usuario	= a.nm_usuario;
	
	
BEGIN

-- carrega as regras

for r_c01_w in c01 loop
	
	-- verifica se a regra possui algum reembolso valido

	-- alimenta os parametros

	dados_regra_aviso_w.nr_sequencia	:= r_c01_w.nr_sequencia;
	dados_regra_aviso_w.cd_estabelecimento	:= r_c01_w.cd_estabelecimento;
	dados_regra_aviso_w.ie_status		:= r_c01_w.ie_status;
	dados_regra_aviso_w.qt_dia_antecedente	:= r_c01_w.qt_dia_antecedente;
	
	-- Monta o sql do cursor que vai fazer a contagem dos reembolsos

	bind_sql_valor_w := pls_gerenciar_reembolso_pck.retorna_sql_cursor_prot(dados_regra_aviso_w, bind_sql_valor_w);
	bind_sql_valor_w := sql_pck.executa_sql_cursor(sql_cursor_w, bind_sql_valor_w);
	qt_reembolso_w	:= 0;
	-- se abriu corretamente o cursor

	if (cur_prot_w%isopen) then
		loop
			fetch	cur_prot_w
			into	qt_reembolso_w;
			EXIT WHEN NOT FOUND; /* apply on cur_prot_w */
		end loop; -- fim loop reembolso
		close cur_prot_w;
	end if; -- cursor de reembolso
	
	-- se encontrou reembolso, busca quem deve avisar

	if (qt_reembolso_w > 0) then
	
		-- carrega o email do usuario

		select	max(ds_email)
		into STRICT	ds_email_origem_w
		from	usuario
		where	nm_usuario = nm_usuario_p;
		
		-- carrega quem deve avisar

		for r_c02_w in c02(r_c01_w.nr_sequencia) loop
			-- gera comunicacao interna

			if (r_c02_w.ie_comunic_interna = 'S') then
				CALL Gerar_Comunic_Padrao(	clock_timestamp(),
							r_c01_w.ds_titulo,
							r_c01_w.ds_mensagem,
							nm_usuario_p,
							'N',
							r_c02_w.nm_usuario_dest,
							'N',
							null,
							r_c02_w.cd_perfil,
							null,
							null,
							clock_timestamp(),
							null,
							null);
				commit;
			end if; -- fim comunicacao interna
			
			if (r_c02_w.ie_email = 'S') then
				-- se tiver apenas o perfil informado, carrega os usuarios do perfil

				if (coalesce(r_c02_w.nm_usuario_dest::text, '') = '') and (r_c02_w.cd_perfil IS NOT NULL AND r_c02_w.cd_perfil::text <> '') then
				
					for r_c03_w in c03(r_c02_w.cd_perfil) loop
											
						CALL enviar_email(	r_c01_w.ds_titulo,
								r_c01_w.ds_mensagem,
								ds_email_origem_w,
								r_c03_w.ds_email,
								nm_usuario_p,
								'M');
						commit;
					end loop; -- fim usuarios dentro do perfil
				elsif (r_c02_w.nm_usuario_dest IS NOT NULL AND r_c02_w.nm_usuario_dest::text <> '') then
					
					
					CALL enviar_email(	r_c01_w.ds_titulo,
							r_c01_w.ds_mensagem,
							ds_email_origem_w,
							r_c02_w.ds_email,
							nm_usuario_p,
							'M');
					commit;
				end if; -- fim escolhe como enviar email
			end if; -- fim email
		end loop; -- fim avisados
	end if; -- fim achou reembolso
	
end loop; -- c01

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerenciar_reembolso_pck.pls_enviar_aviso_reembolso ( nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
