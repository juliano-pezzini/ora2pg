-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



-- Carregar o arquivo A700 de XML

CREATE TYPE reg_cabecalho AS (		nr_vertra_ptu_cab		varchar(2),	-- <nr_VerTra_PTU>	ptu_servico_pre_pagto.nr_versao_transacao
					cd_uni_destino_cab		varchar(4),	-- <cd_Uni_Destino>	ptu_servico_pre_pagto.cd_unimed_destino
					cd_uni_origem_cab		varchar(4),	-- <cd_Uni_Origem>	ptu_servico_pre_pagto.cd_unimed_origem
					dt_geracao_cab			varchar(8),	-- <dt_Geracao>		ptu_servico_pre_pagto.dt_geracao
					nr_seq_geracao_cab		varchar(255),	-- <nr_seq_geracao>	ptu_servico_pre_pagto.nr_seq_geracao
					dt_inicio_pagto_cab		varchar(8),	-- <dt_Inicial_Pagto>	ptu_servico_pre_pagto.dt_inicio_pagto
					dt_fim_pagto_cab		varchar(8),	-- <dt_Final_Pagto>	ptu_servico_pre_pagto.dt_fim_pagto
					hash				varchar(255),	-- HASH
					dt_postagem			varchar(255),	-- DATA POSTAGEM CARIMBO CMB
					nr_protocolo			varchar(10));
CREATE TYPE reg_sem_movimento AS (	sem_movimento			varchar(1));
CREATE TYPE reg_guia_consulta AS (	id				varchar(255),
					cd_unimed_dad_ben		varchar(4),
					id_benef_dad_ben		varchar(13),
					nm_benef_dad_ben		varchar(25),
					id_rn_dad_ben			varchar(1),
					tp_paciente_dad_ben		varchar(1),
					nm_prest_cont_exec		varchar(70),
					CNES_cont_exec			varchar(7),
					cd_uni_prest_cont_exec		varchar(4),
					cd_prest_cont_exec		varchar(8),
					cd_cpf_cont_exec		varchar(11),
					cd_cnpj_cont_exec		varchar(14),
					cd_municipio_cont_exe		varchar(7),
					tp_prestador_cont_exe		varchar(2),
					id_rec_proprio_cont_exe		varchar(1),
					cd_cpf_prof_exec		varchar(14),
					cbo_prof_exec			varchar(6),
					cd_uni_prest_prof_exec		varchar(4),
					cd_prest_prof_exec		varchar(8),
					nm_prest_prof_exec		varchar(70),
					sg_conselho_prof_exec		varchar(12),
					nr_conselho_prof_exec		varchar(15),
					uf_prof_exec			varchar(2),
					nr_ver_tiss_dad_gui		varchar(7),
					tp_consulta_dad_gui		varchar(1),
					nr_lote_prestador_dad_gui	varchar(12),
					dt_protocolo_dad_gui		varchar(8),
					nr_guia_tiss_prestador_dad_gui	varchar(255),
					nr_guia_tiss_operadora_dad_gui	varchar(255),
					tp_ind_acidente_dad_gui		varchar(1),
					dt_atendimento_dad_gui		varchar(21));
CREATE TYPE reg_proc_gui_cons AS (	id				varchar(255),
					seq_item_proc			varchar(4),
					tp_tabela_proc			varchar(2),
					cd_servico_proc			varchar(10),
					vl_servico_pago_proc		varchar(255),
					dt_pago_prestador_pag_pre	varchar(8),
					cd_ato_proc			varchar(1),
					dt_solicitacao_dad_aut		varchar(255),
					dt_autorizacao_dad_aut		varchar(255));
CREATE TYPE reg_comple_gui_cons AS (	id_complemento			varchar(255),
					tp_complemento			varchar(1),
					nm_complemento			varchar(255));
CREATE TYPE reg_guia_sadt AS (			id				varchar(255),
						cd_unimed_dad_ben		varchar(4),
						id_benef_dad_ben		varchar(13),
						nm_benef_dad_ben		varchar(25),
						id_rn_dad_ben			varchar(1),
						tp_paciente_dad_ben		varchar(1),
						cd_cpf_dad_sol			varchar(11),
						cd_cnpj_dad_sol			varchar(14),
						cd_uni_prest_dad_sol		varchar(4),
						cd_prest_dad_sol		varchar(8),
						nome_dad_sol			varchar(60),
						nm_profissional_pro		varchar(60),
						sg_conselho_dad_con_pro		varchar(12),
						nr_conselho_dad_con_pro		varchar(15),
						uf_dad_con_pro			varchar(2),
						cbo_dad_sol			varchar(6),
						cd_uni_prest_dad_exe		varchar(4),
						cd_prest_dad_exe		varchar(8),
						nm_prest_exec_dad_exec		varchar(70),
						cd_cpf_dad_exe			varchar(11),
						cd_cnpj_dad_exe			varchar(14),
						cd_cnes_dad_exec		varchar(7),
						cd_municipio_cont_dad_exe	varchar(7),
						tp_prestador_dad_exe		varchar(2),
						id_rec_proprio_dad_exe		varchar(1),
						tp_atendimento_dad_ate		varchar(2),
						tp_ind_acidente_dad_ate		varchar(1),
						tp_consulta_dad_ate		varchar(1),
						carater_atendimento_dad_ate	varchar(1),
						mv_encerramento_dad_ate		varchar(2),
						nr_ver_tiss_dad_gui		varchar(7),
						nr_lote_prestador_dad_gui	varchar(12),
						dt_protocolo_dad_gui		varchar(8),
						nr_guia_tiss_prestador_dad_gui	varchar(255),
						nr_guia_tiss_operadora_dad_gui	varchar(255),
						nr_guia_tiss_principal_dad_gui	varchar(255),
						dt_atendimento_dad_gui		varchar(21),
						dt_ultima_autorizacao_dad_gui	varchar(8),
						id_guia_principal_dad_gui	varchar(1));
CREATE TYPE reg_proc_exec_guia_sadt AS (	id				varchar(255),
						dt_execucao_pro			varchar(8),
						hr_inicial_pro			varchar(8),
						hr_final_pro			varchar(8),
						seq_item_pro			varchar(4),
						tp_tabela_pro			varchar(2),
						cd_servico_pro			varchar(10),
						qt_paga_pro			varchar(255),
						via_acesso_pro			varchar(2),
						tc_utilizada_pro		varchar(1),
						id_acrescimo_pro		varchar(1),
						vl_serv_pago_val		varchar(255),
						vl_filme_pago_val		varchar(255),
						vl_co_pago_val			varchar(255),
						un_medida_pro			varchar(3),
						ft_multiplicador_servico_pro	varchar(255),
						id_pacote_pro			varchar(1),
						cd_porte_anestesico_pro		varchar(1),
						cd_cnpj_for_dad_opme		varchar(14),
						nr_registro_anvisa_dad_opme	varchar(15),
						cd_referenci_mat_fab_dad_opme	varchar(60),
						dt_pago_prestador_pag_pre	varchar(8),
						tp_participacao_equ_pro		varchar(1),
						cd_uni_prest_pro_equ_pro	varchar(4),
						cd_prest_pro_equ_pro		varchar(8),
						nm_profissional_equ_pro		varchar(60),
						cd_cpf_equ_pro			varchar(11),
						sg_conselho_dad_con_equ_pro	varchar(12),
						nr_conselho_dad_con_equ_pro	varchar(15),
						uf_dad_con_equ_pro		varchar(2),
						cbo_equ_pro			varchar(6),
						cd_ato_proc			varchar(1),
						dt_solicitacao_dad_aut		varchar(8),
						dt_autorizacao_dad_aut		varchar(8));
CREATE TYPE reg_complemento_guia_sadt AS (	id_complemento			varchar(255),
						tp_reg_cpl_dad_gui_com		varchar(1),
						nm_desc_compleme_dad_gui_com	varchar(255));
CREATE TYPE reg_guia_internacao AS (	id				varchar(255),
						cd_unimed_dad_ben		varchar(4),
						id_benef_dad_ben		varchar(13),
						nm_benef_dad_ben		varchar(25),
						id_rn_dad_ben			varchar(1),
						tp_paciente_dad_ben		varchar(1),
						cd_cpf_dad_sol			varchar(11),
						cd_cnpj_dad_sol			varchar(14),
						cd_uni_prest_dad_sol		varchar(4),
						cd_prest_dad_sol		varchar(8),
						nome_dad_sol			varchar(60),
						nm_profissional_prof		varchar(60),
						sg_conselho_dad_con_prof	varchar(12),
						nr_conselho_dad_con_prof	varchar(15),
						uf_dad_con_prof			varchar(2),
						cbo_prof			varchar(6),
						cd_uni_prest_dad_exe		varchar(4),
						cd_prest_dad_exe		varchar(8),
						nm_prest_exec_dad_exec		varchar(70),
						cd_cpf_dad_exe			varchar(11),
						cd_cnpj_dad_exe			varchar(14),
						cd_cnes_dad_exec		varchar(7),
						cd_municipio_cont_dad_exe	varchar(7),
						tp_prestador_dad_exe		varchar(2),
						id_rec_proprio_dad_exe		varchar(1),
						tp_acomodacao_dad_int		varchar(2),
						ft_multiplicador_amb_dad_int	real,
						tp_internacao_dad_int		smallint,
						rg_internacao_dad_int		smallint,
						tp_indicador_acidente_dad_int	varchar(1),
						carater_atendimento_dad_int	smallint,
						motivo_encerramento_dad_int	varchar(2),
						tp_fat_dad_int			smallint,
						dt_inicio_fat_dad_int		timestamp,
						dt_fim_fat_dad_int		timestamp,
						qt_nasc_vivo_dad_int		smallint,
						cd_cid_obito_dad_int		varchar(6),
						nr_declara_obito_dad_int	varchar(17),
						ie_int_rec_nascido_dad_int	varchar(1),
						nr_ver_tiss_dad_gui		varchar(7),
						nr_lote_prestador_dad_gui	varchar(12),
						dt_protocolo_dad_gui		varchar(8),
						nr_guia_tiss_prest_dad_gui	varchar(255),
						nr_guia_tiss_opera_dad_gui	varchar(255),
						nr_guia_tiss_princ_dad_gui	varchar(255),
						dt_atendimento_dad_gui		varchar(21));
CREATE TYPE reg_proc_exec_gui_int AS (	id				varchar(255),
						dt_execucao_pro			varchar(8),
						hr_inicial_pro			varchar(8),
						hr_final_pro			varchar(8),
						seq_item_pro			varchar(4),
						tp_tabela_pro			varchar(2),
						cd_servico_pro			varchar(10),
						qt_paga_pro			varchar(255),
						via_acesso_pro			varchar(2),
						tc_utilizada_pro		varchar(1),
						id_acrescimo_pro		varchar(1),
						vl_serv_pago_val		varchar(255),
						vl_filme_pago_val		varchar(255),
						vl_co_pago_val			varchar(255),
						un_medida_pro			varchar(3),
						ft_multiplicador_servico_pro	varchar(255),
						id_pacote_pro			varchar(1),
						cd_porte_anestesico_pro		varchar(1),
						cd_cnpj_for_dad_opme		varchar(14),
						nr_registro_anvisa_dad_opme	varchar(15),
						cd_referenci_mat_fab_dad_opme	varchar(60),
						dt_pago_prestador_pag_pre	varchar(8),
						tp_participacao_equ_pro		varchar(1),
						cd_uni_prest_pro_equ_pro	varchar(4),
						cd_prest_pro_equ_pro		varchar(8),
						nm_profissional_equ_pro		varchar(60),
						cd_cpf_equ_pro			varchar(11),
						sg_conselho_dad_con_equ_pro	varchar(12),
						nr_conselho_dad_con_equ_pro	varchar(15),
						uf_dad_con_equ_pro		varchar(2),
						cbo_equ_pro			varchar(6),
						cd_ato_proc			varchar(1),
						dt_solicitacao_dad_aut		varchar(8),
						dt_autorizacao_dad_aut		varchar(8));
CREATE TYPE reg_complemento_guia_int AS (	id_complemento			varchar(255),
						tp_reg_cpl_dad_gui_com		varchar(1),
						nm_desc_compleme_dad_gui_com	varchar(255));
CREATE TYPE reg_guia_honorario AS (		id				varchar(255),
						cd_unimed_dad_ben		varchar(4),
						id_benef_dad_ben		varchar(13),
						nm_benef_dad_ben		varchar(25),
						id_rn_dad_ben			varchar(1),
						tp_paciente_dad_ben		varchar(1),
						cd_uni_hosp_dad_hosp		varchar(4),
						cd_hosp_dad_hosp		varchar(8),
						cnpj_hosp_dad_hosp		varchar(14),
						nm_hosp_dad_hosp		varchar(70),
						cd_cnes_hosp_dad_hosp		varchar(7),
						cd_uni_prest_dad_exe		varchar(4),
						cd_prest_dad_exe		varchar(8),
						nm_prest_exec_dad_exec		varchar(70),
						cd_cpf_dad_exe			varchar(11),
						cd_cnpj_dad_exe			varchar(14),
						cd_cnes_dad_exec		varchar(7),
						cd_municipio_cont_dad_exe	varchar(7),
						tp_prestador_dad_exe		varchar(2),
						id_rec_proprio_dad_exe		varchar(1),
						nr_ver_tiss_dad_gui		varchar(7),
						nr_lote_prestador_dad_gui	varchar(12),
						dt_protocolo_dad_gui		varchar(8),
						nr_guia_tiss_prest_dad_gui	varchar(255),
						nr_guia_tiss_opera_dad_gui	varchar(255),
						nr_guia_tiss_princ_dad_gui	varchar(255),
						dt_atendimento_dad_gui		varchar(21));
CREATE TYPE reg_proc_guia_hon AS (		id				varchar(255),
						dt_execucao_pro			varchar(8),
						hr_inicial_pro			varchar(8),
						hr_final_pro			varchar(8),
						seq_item_pro			varchar(4),
						tp_tabela_pro			varchar(2),
						cd_servico_pro			varchar(10),
						qt_paga_pro			varchar(255),
						via_acesso_pro			varchar(2),
						tc_utilizada_pro		varchar(1),
						id_acrescimo_pro		varchar(1),
						vl_serv_pago_val		varchar(255),
						vl_filme_pago_val		varchar(255),
						vl_co_pago_val			varchar(255),
						un_medida_pro			varchar(3),
						ft_multiplicador_servico_pro	varchar(255),
						id_pacote_pro			varchar(1),
						cd_porte_anestesico_pro		varchar(1),
						cd_cnpj_for_dad_opme		varchar(14),
						nr_registro_anvisa_dad_opme	varchar(15),
						cd_referenci_mat_fab_dad_opme	varchar(60),
						dt_pago_prestador_pag_pre	varchar(8),
						tp_participacao_equ_pro		varchar(1),
						cd_uni_prest_pro_equ_pro	varchar(4),
						cd_prest_pro_equ_pro		varchar(8),
						nm_profissional_equ_pro		varchar(60),
						cd_cpf_equ_pro			varchar(11),
						sg_conselho_dad_con_equ_pro	varchar(12),
						nr_conselho_dad_con_equ_pro	varchar(15),
						uf_dad_con_equ_pro		varchar(2),
						cbo_equ_pro			varchar(6),
						cd_ato_proc			varchar(1),
						dt_solicitacao_dad_aut		varchar(8),
						dt_autorizacao_dad_aut		varchar(8));
CREATE TYPE reg_compl_guia_hon AS (		id_complemento			varchar(255),
						tp_reg_cpl_dad_gui_com		varchar(1),
						nm_desc_compleme_dad_gui_com	varchar(255));


CREATE OR REPLACE PROCEDURE ptu_a700_imp_pck.carregar_arq_a700_xml ( nr_seq_arq_xml_p ptu_aviso_arq_xml.nr_sequencia%type, ie_tipo_arquivo_p ptu_aviso_arq_xml.ie_tipo_arquivo%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_serv_pre_pagto_p INOUT bigint) AS $body$
DECLARE


-- CABECALHO										         Tag		        ptu_servico_pre_pagto
	-- NUMERO PROTOCOLO CARIMBO CMB
	-- <semMovimento>

--  +++++++++++++++++++++++++++++++++++++++++++++++ DADOS GUIA DE CONSULTA ++++++++++++++++++++++++++++++++++++++++++++++


-- Procedimentos Guia de Consulta


-- Complemento Guia de Consulta


--  +++++++++++++++++++++++++++++++++++++++++++++++ DADOS GUIA DE SP/SADT ++++++++++++++++++++++++++++++++++++++++++++++


-- GUIA SPSADT - PROCEDIMENTOS EXECUTADOS


--  +++++++++++++++++++++++++++++++++++++++++++++++ DADOS GUIA DE INTERNACAO ++++++++++++++++++++++++++++++++++++++++++++++


--  +++++++++++++++++++++++++++++++++++++++++++++++ DADOS GUIA DE HONORARIOS ++++++++++++++++++++++++++++++++++++++++++++++


-- Cabecalho

type tab_cabecalho is table of reg_cabecalho index by integer;

-- Sem Movimento

type tab_sem_movimento is table of reg_sem_movimento index by integer;

-- GUIA DE CONSULTA

type tab_guia_consulta is table of reg_guia_consulta index by integer;
type tab_guia_cons_proc is table of reg_proc_gui_cons index by integer;
type tab_guia_cons_compl is table of reg_comple_gui_cons index by integer;

-- GUIA DE SP/SADT

type tab_guia_sadt is table of reg_guia_sadt index by integer;
type tab_guia_sadt_proc is table of reg_proc_exec_guia_sadt index by integer;
type tab_guia_sadt_compl is table of reg_complemento_guia_sadt index by integer;

-- GUIA DE INTERNACAO

type tab_guia_internacao is table of reg_guia_internacao index by integer;
type tab_guia_int_proc is table of reg_proc_exec_gui_int index by integer;
type tab_guia_int_compl is table of reg_complemento_guia_int index by integer;

-- GUIA DE HONORARIO

type tab_guia_honorario is table of reg_guia_honorario index by integer;
type tab_proc_guia_hon is table of reg_proc_guia_hon index by integer;
type tab_compl_guia_hon is table of reg_compl_guia_hon index by integer;

-- VARIAVEIS CABECALHO

vet_tab_cabecalho_w			tab_cabecalho;
ica					integer;

-- VARIAVEIS SEM MOVIMENTO

vet_tab_sem_movimento_w			tab_sem_movimento;
igsm					integer;

-- VARIAVEIS GUIA DE CONSULTA

vet_tab_guia_consulta_w			tab_guia_consulta;
vet_tab_guia_cons_proc_exec_w		tab_guia_cons_proc;
vet_tab_guia_cons_comp_w		tab_guia_cons_compl;
igc					integer;
igcp					integer;
igccp					integer;

-- VARIAVEIS GUIA DE SP/SADT

vet_tab_guia_sadt_w			tab_guia_sadt;
vet_tab_guia_sadt_proc_w		tab_guia_sadt_proc;
vet_tab_guia_sadt_comp_w		tab_guia_sadt_compl;
igs					integer;
igsp					integer;
igscp					integer;

-- VARIAVEIS GUIA DE INTERNACAO

vet_tab_guia_int_w			tab_guia_internacao;
vet_tab_guia_int_proc_w			tab_guia_int_proc;
vet_tab_guia_int_comp_w			tab_guia_int_compl;
igi					integer;
igipe					integer;
igicp					integer;

-- VARIAVEIS GUIA DE HONORARIO

vet_tab_guia_honorario_w		tab_guia_honorario;
vet_tab_proc_guia_hon_w			tab_proc_guia_hon;
vet_tab_compl_guia_hon_w		tab_compl_guia_hon;
igh					integer;
ighp					integer;
ighc					integer;

-- VARIAVEIS

ie_material_intercambio_w		pls_parametros.ie_material_intercambio%type;
ie_origem_proc_valido_w			pls_parametros.ie_origem_proc_valido%type;
nm_id_sid_w				ptu_servico_pre_pagto.ds_sid_processo%type;
nm_id_serial_w				ptu_servico_pre_pagto.ds_serial_processo%type;
nr_seq_serv_pre_pgto_w			ptu_servico_pre_pagto.nr_sequencia%type;
nm_arquivo_w				ptu_aviso_arq_xml.nm_arquivo%type;
nr_cpf_cnpj_w				ptu_nota_cobranca.nr_cnpj_cpf%type;
nr_cpf_cnpj_req_w			ptu_nota_cobranca.nr_cnpj_cpf_req%type;
nr_seq_nota_cobr_w			ptu_nota_cobranca.nr_sequencia%type;
nr_seq_material_w			ptu_nota_servico.nr_seq_material%type;
qt_regra_w				bigint := 0;
cd_mat_number_inter_w			numeric(30) := null;
ie_origem_proced_w			bigint;
nr_seq_regra_conv_w			bigint;
ie_somente_codigo_w			pls_regra_conv_mat_interc.ie_somente_codigo%type;
qt_material_w				bigint := 0;
cd_servico_mat_w			varchar(50);
cd_procedimento_w			integer;
ie_origem_proced_padrao_w		procedimento.ie_origem_proced%type;
qt_proced_origem_w			bigint;
qt_proc_valido_w			bigint;
nr_seq_prest_inter_w			ptu_nota_cobranca.nr_seq_prest_inter%type;
tp_pessoa_w				ptu_nota_cobranca.tp_pessoa%type;
nr_cnpj_cpf_w				ptu_nota_cobranca.nr_cnpj_cpf%type;
cd_cnes_cont_exec_w			ptu_nota_cobranca.cd_cnes_cont_exec%type;
cd_munic_cont_exec_w			ptu_nota_cobranca.cd_munic_cont_exec%type;
nm_prestador_w				ptu_nota_cobranca.nm_prest_exec%type;
nr_seq_prestador_w   			pls_prestador.nr_sequencia%type;
cd_cgc_prestador_w			varchar(255);
nr_cpf_prestador_w			varchar(255);
dt_alta_w				varchar(10);
dt_atendimento_w			varchar(10);
ie_pacote_intercambio_w 	pls_conversao_proc.ie_pacote_intercambio%type := 'N';
ie_priorizar_conv_pct_int_w	pls_parametros.ie_priorizar_conv_pct_int%type;

-- CURSORES

--  +++++++++++++++++++++++++++++++++++++++++++++++ CABECALHO ++++++++++++++++++++++++++++++++++++++++++++++

-- CABECALHO

C01 CURSOR(	nr_seq_arq_xml_pc	ptu_aviso_arq_xml.nr_sequencia%type ) FOR
	SELECT	xml.createxml(ds_arquivo) ds_arq_xml
	from	ptu_aviso_arq_xml
	where	nr_sequencia = nr_seq_arq_xml_pc;

c_cabecalho CURSOR( ds_arq_xml_pc		xml ) FOR
	SELECT	*
	from	xmltable('/ptuA700/cabecalho' passing ds_arq_xml_pc columns
		nr_vertra_ptu_cab			varchar(2)	path	'nrVerTra_PTU',
		unimed_cab				xml		path	'unimed',
		dt_geracao_cab				varchar(8)	path	'dt_Geracao',
		nr_seq_geracao_cab			varchar(255)	path	'nr_seq_geracao',
		dt_inicio_pagto_cab			varchar(8)	path	'dt_Inicial_Pagto',
                dt_fim_pagto_cab			varchar(8)	path	'dt_Final_Pagto');

c_cabecalho_unimed CURSOR( unimed_pc		xml ) FOR
	SELECT	*
	from	xmltable('/unimed' passing unimed_pc columns
		cd_uni_destino_cab			varchar(4)	path	'cd_Uni_Destino',
		cd_uni_origem_cab			varchar(4)	path	'cd_Uni_Origem');

-- Arquivo A700

c_arquivo_a700 CURSOR( ds_arq_xml_pc		xml ) FOR
	SELECT	*
	from	xmltable('/ptuA700/arquivoA700' passing ds_arq_xml_pc columns
		sem_movimento				varchar(1)	path	'semMovimento',
		tipo_guia				xml		path	'Tipoguia');

-- Tipo Guia

c_arquivo_a700_tipo_guia CURSOR( tipo_guia_pc		xml ) FOR
	SELECT	*
	from	xmltable('/Tipoguia' passing tipo_guia_pc columns
		guia_consulta				xml		path	'guiaConsulta',
		guia_sadt				xml		path	'guiaSADT',
		guia_internacao				xml		path	'guiaInternacao',
		guia_honorarios				xml		path	'guiaHonorarios');

-- Hash

c_hash CURSOR( ds_arq_xml_pc		xml ) FOR
	SELECT	*
	from	xmltable('/ptuA700/hash' passing ds_arq_xml_pc columns
		hash					varchar(255)	path	'hash');

-- Carimbo CMB

c_carimbo_cmb CURSOR( ds_arq_xml_pc		xml ) FOR
	SELECT	*
	from	xmltable('/ptuA700/carimboCMB' passing ds_arq_xml_pc columns
		dt_postagem				varchar(21)	path	'dt_postagem',
		nr_protocolo				varchar(10)	path	'nr_protocolo');

--  +++++++++++++++++++++++++++++++++++++++++++++++ GUIA DE CONSULTA ++++++++++++++++++++++++++++++++++++++++++++++

c_tipo_guia_consulta CURSOR( guia_consulta_pc		xml ) FOR
	SELECT	*
	from	xmltable('/guiaConsulta' passing guia_consulta_pc columns
		dados_beneficiario			xml		path	'dadosBeneficiario',
		contrato_executante			xml		path	'contratadoExecutante',
		profissional_executante			xml		path	'profissionalExecutante',
		dados_guia				xml		path	'dadosGuia');

	-- <guiaConsulta> <dadosBeneficiario>

	c_dados_beneficiario_cons CURSOR( dados_beneficiario_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosBeneficiario' passing dados_beneficiario_pc columns
			cd_unimed_dad_ben			varchar(4)	path	'cd_Unimed',
			id_benef_dad_ben			varchar(13)	path	'id_Benef',
			nm_benef_dad_ben			varchar(25)	path	'nm_Benef',
			id_rn_dad_ben				varchar(1)	path	'id_RN',
			tp_paciente_dad_ben			varchar(1)	path	'tp_Paciente');

	-- <guiaConsulta> <contratadoExecutante>

	c_contrato_executante CURSOR( contrato_executante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/contratadoExecutante' passing contrato_executante_pc columns
			unimed_prestador_cont_exec	xml		path	'UnimedPrestador',
			nm_prest_cont_exec		varchar(70)	path	'nome',
			cpf_cnpj_cont_exec		xml		path	'CPF_CNPJ',
			CNES_cont_exec			varchar(7)	path	'CNES',
			prestador_cont_exec		xml		path	'prestador');

		-- <guiaConsulta> <contratadoExecutante> <UnimedPrestador>

		c_unimed_prestador_cont_exec CURSOR( unimed_prestador_cont_exec_pc		xml ) FOR
			SELECT	*
			from	xmltable('/UnimedPrestador' passing unimed_prestador_cont_exec_pc columns
				cd_uni_prest_cont_exec			varchar(4)	path	'cd_Uni_Prest',
				cd_prest_cont_exec			varchar(8)	path	'cd_Prest');

		-- <guiaConsulta> <contratadoExecutante> <CPF_CNPJ>

		c_cpf_cnpj_cont_exec CURSOR( cpf_cnpj_cont_execl_pc		xml ) FOR
			SELECT	*
			from	xmltable('/CPF_CNPJ' passing cpf_cnpj_cont_execl_pc columns
				cd_cpf_cont_exec			varchar(11)	path	'cd_cpf',
				cd_cnpj_cont_exec			varchar(14)	path	'cd_cnpj');

		-- <guiaConsulta> <contratadoExecutante> <prestador>

		c_prestador_cont_exec CURSOR( prestador_cont_exec_pc		xml ) FOR
			SELECT	*
			from	xmltable('/prestador' passing prestador_cont_exec_pc columns
				cd_municipio_cont_exe			varchar(7)	path	'cd_MunicipioCont',
				tp_prestador_cont_exe			varchar(2)	path	'tp_Prestador',
				id_rec_proprio_cont_exe			varchar(1)	path	'id_RecProprio');

	-- <guiaConsulta> <profissionalExecutante>

	c_profissional_executante CURSOR( profissional_executante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/profissionalExecutante' passing profissional_executante_pc columns
			unimed_prof_exec			xml		path	'UnimedPrestador',
			cd_cpf_prof_exec			varchar(14)	path	'cd_cpf',
			dados_conselho_prof_exec		xml		path	'dadosConselho',
			cbo_prof_exec				varchar(6)	path	'CBO');

		-- <guiaConsulta> <profissionalExecutante> <unimedPrestador>

		c_unimed_prestador_prof_exec CURSOR( unimed_prestador_prof_exec_pc		xml ) FOR
			SELECT	*
			from	xmltable('/UnimedPrestador' passing unimed_prestador_prof_exec_pc columns
				cd_uni_prest_prof_exec			varchar(4)	path	'cd_Uni_Prest',
				cd_prest_prof_exec			varchar(8)	path	'cd_Prest',
				nm_prest_prof_exec			varchar(70)	path	'nome');

		-- <guiaConsulta> <profissionalExecutante> <dadosConselho>

		c_dados_conselho_prof_exec CURSOR( dados_conselho_prof_exec_pc		xml ) FOR
			SELECT	*
			from	xmltable('/dadosConselho' passing dados_conselho_prof_exec_pc columns
				sg_conselho_prof_exec			varchar(12)	path	'sg_Conselho',
				nr_conselho_prof_exec			varchar(15)	path	'nr_Conselho',
				uf_prof_exec				varchar(2)	path	'UF');

	-- <guiaConsulta> <dadosGuia>

	c_dados_guia_consulta CURSOR( dados_guia_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosGuia' passing dados_guia_pc columns
			nr_ver_tiss_dad_gui			varchar(7)	path	'nr_Ver_TISS',
			tp_consulta_dad_gui			varchar(1)	path	'tp_Consulta',
			nr_lote_prestador_dad_gui		varchar(12)	path	'nr_LotePrestador',
			dt_protocolo_dad_gui			varchar(8)	path	'dt_Protocolo',
			nr_guias_dad_gui			xml		path	'nr_Guias',
			tp_ind_acidente_dad_gui			varchar(1)	path	'tp_IndicadorAcidente',
			dt_atendimento_dad_gui			varchar(21)	path	'dt_Atendimento',
			procedimentos_dad_gui			xml		path	'procedimentos',
			dados_autorizacao_dad_gui		xml		path	'dadosAutorizacao',
			compleme_dad_gui_com			xml		path	'complemento');

		-- <guiaConsulta> <dadosGuia> <nr_Guias>

		c_nr_guias_dad_gui_cons CURSOR( nr_guias_dad_gui_pc		xml ) FOR
			SELECT	*
			from	xmltable('/nr_Guias' passing nr_guias_dad_gui_pc columns
				nr_guia_tiss_prestador_dad_gui		varchar(255)	path	'nr_GuiaTissPrestador',
				nr_guia_tiss_operadora_dad_gui		varchar(255)	path	'nr_GuiaTissOperadora');

		-- <guiaConsulta> <dadosGuia> <procedimentos>

		c_procedimentos_cons CURSOR( procedimentos_pc		xml ) FOR
			SELECT	*
			from	xmltable('/procedimentos' passing procedimentos_pc columns
				seq_item_proc				varchar(4)	path	'seq_item',
				tp_tabela_proc				varchar(2)	path	'tp_Tabela',
				cd_servico_proc				varchar(10)	path	'cd_Servico',
				vl_servico_pago_proc			varchar(255)	path	'vl_ServPago',
				pago_prestador_proc			xml		path	'pagoPrestador',
				cd_ato_proc				varchar(1)	path	'cd_Ato');

			-- <guiaConsulta> <dadosGuia> <procedimentos> <pagoPrestador>

			c_pago_prestador_cons CURSOR( pago_prestador_pc		xml ) FOR
				SELECT	*
				from	xmltable('/pagoPrestador' passing pago_prestador_pc columns
					dt_pago_prestador_pag_pre			varchar(8)	path	'dt_PagoPrestador');

		-- <guiaConsulta> <dadosGuia> <dadosAutorizacao>

		c_dados_autorizacao_cons CURSOR( dados_autorizacao_pc		xml ) FOR
			SELECT	*
			from	xmltable('/dadosAutorizacao' passing dados_autorizacao_pc columns
				dt_solicitacao_dad_aut					varchar(255)	path	'dt_Solicitacao',
				dt_autorizacao_dad_aut					varchar(255)	path	'dt_Autorizacao');

		-- <guiaConsulta> <dadosGuia> <complemento>

		c_complemento_cons CURSOR( complemento_pc		xml ) FOR
			SELECT	*
			from	xmltable('/complemento' passing complemento_pc columns
				tp_complemento						varchar(1)	path	'tp_RegCPL',
				nm_complemento						varchar(500)	path	'nm_DescComplemento');

--  +++++++++++++++++++++++++++++++++++++++++++++++ GUIA DE SP/SADT ++++++++++++++++++++++++++++++++++++++++++++++

c_guia_sadt CURSOR( guia_sadt_pc		xml ) FOR
	SELECT	*
	from	xmltable('/guiaSADT' passing guia_sadt_pc columns
		dados_beneficiario			xml		path	'dadosBeneficiario',
		dados_solicitante			xml		path	'dadosSolicitante',
		dados_executante			xml		path	'dadosExecutante',
		dados_atendimento			xml		path	'dadosAtendimento',
		dados_guia				xml		path	'dadosGuia');

	-- <guiaSADT> <dadosBeneficiario>

	c_dados_beneficiario CURSOR( dados_beneficiario_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosBeneficiario' passing dados_beneficiario_pc columns
			cd_unimed_dad_ben			varchar(4)	path	'cd_Unimed',
			id_benef_dad_ben			varchar(13)	path	'id_Benef',
			nm_benef_dad_ben			varchar(25)	path	'nm_Benef',
			id_rn_dad_ben				varchar(1)	path	'id_RN',
			tp_paciente_dad_ben			varchar(1)	path	'tp_Paciente');
			
	-- <guiaSADT> <dadosSolicitante>

	c_dados_solicitante CURSOR( dados_solicitante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosSolicitante' passing dados_solicitante_pc columns
			contratado_solicitante_dad_sol		xml		path	'contratadoSolicitante',
			profissional_dad_sol			xml		path	'profissional');
			
		-- <guiaSADT> <dadosSolicitante> <contratadoSolicitante>

		c_contratado_solicitante CURSOR( contratado_solicitante_pc		xml ) FOR
			SELECT	*
			from	xmltable('/contratadoSolicitante' passing contratado_solicitante_pc columns
				cpf_cnpj_dad_sol			xml		path	'cpf_cnpj',
				unimed_prestador_dad_sol		xml		path	'UnimedPrestador',
				nome_dad_sol				varchar(60)	path	'nome');
				
			-- <guiaSADT> <dadosSolicitante> <contratadoSolicitante> <cpf_cnpj>

			c_cpf_cnpj_dad_sol CURSOR( cpf_cnpj_dad_sol_pc		xml ) FOR
				SELECT	*
				from	xmltable('/cpf_cnpj' passing cpf_cnpj_dad_sol_pc columns
					cd_cpf_dad_sol				varchar(11)	path	'cd_cpf',
					cd_cnpj_dad_sol				varchar(14)	path	'cd_cnpj');
					
			-- <guiaSADT> <dadosSolicitante> <contratadoSolicitante> <UnimedPrestador>

			c_unimed_prestador_dad_sol CURSOR( unimed_prestador_dad_sol_pc		xml ) FOR
				SELECT	*
				from	xmltable('/UnimedPrestador' passing unimed_prestador_dad_sol_pc columns
					cd_uni_prest_dad_sol			varchar(4)	path	'cd_Uni_Prest',
					cd_prest_dad_sol			varchar(8)	path	'cd_Prest');
					
		-- <guiaSADT> <dadosSolicitante> <profissional>

		c_profissional CURSOR( profissional_pc		xml ) FOR
			SELECT	*
			from	xmltable('/profissional' passing profissional_pc columns
				nm_profissional_pro			varchar(60)	path	'nm_Profissional',
				dados_conselho_pro			xml		path	'dadosConselho',
				cbo_dad_sol				varchar(6)	path	'CBO');
				
			-- <guiaSADT> <dadosSolicitante> <profissional> <dadosConselho>

			c_dados_conselho_pro CURSOR( dados_conselho_pro_pc		xml ) FOR
				SELECT	*
				from	xmltable('/dadosConselho' passing dados_conselho_pro_pc columns
					sg_conselho_dad_con_pro			varchar(12)	path	'sg_Conselho',
					nr_conselho_dad_con_pro			varchar(15)	path	'nr_Conselho',
					uf_dad_con_pro				varchar(2)	path	'UF');
					
	-- <guiaSADT> <dadosExecutante>

	c_dados_executante CURSOR( dados_executante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosExecutante' passing dados_executante_pc columns
			unimed_prestador_dad_exe		xml		path	'UnimedPrestador',
			nm_prest_exec_dad_exec			varchar(70)	path	'nome',
			cpf_cnpj_dad_exe			xml		path	'CPF_CNPJ',
			cd_cnes_dad_exec			varchar(7)	path	'CNES',
			prestador_dad_exe			xml		path	'prestador');
			
		-- <guiaSADT> <dadosExecutante> <UnimedPrestador>

		c_unimed_prestador_dad_exe CURSOR( unimed_prestador_dad_exe_pc		xml ) FOR
			SELECT	*
			from	xmltable('/UnimedPrestador' passing unimed_prestador_dad_exe_pc columns
				cd_uni_prest_dad_exe			varchar(4)	path	'cd_Uni_Prest',
				cd_prest_dad_exe			varchar(8)	path	'cd_Prest');
				
		-- <guiaSADT> <dadosExecutante> <CPF_CNPJ>

		c_cpf_cnpj_dad_exe CURSOR( cpf_cnpj_pc		xml ) FOR
			SELECT	*
			from	xmltable('/CPF_CNPJ' passing cpf_cnpj_pc columns
				cd_cpf_dad_exe				varchar(11)	path	'cd_cpf',
				cd_cnpj_dad_exe				varchar(14)	path	'cd_cnpj');

		-- <guiaSADT> <dadosExecutante> <prestador>

		c_prestador_dad_exe CURSOR( prestador_dad_exe_pc		xml ) FOR
			SELECT	*
			from	xmltable('/prestador' passing prestador_dad_exe_pc columns
				cd_municipio_cont_dad_exe		varchar(7)	path	'cd_MunicipioCont',
				tp_prestador_dad_exe			varchar(2)	path	'tp_Prestador',
				id_rec_proprio_dad_exe			varchar(1)	path	'id_RecProprio');

	-- <guiaSADT> <dadosAtendimento>

	c_dados_atendimento_dad_ate CURSOR( dados_atendimento_dad_ate_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosAtendimento' passing dados_atendimento_dad_ate_pc columns
			tp_atendimento_dad_ate			varchar(2)	path	'tp_Atendimento',
			tp_ind_acidente_dad_ate			varchar(1)	path	'tp_IndAcidente',
			tp_consulta_dad_ate			varchar(1)	path	'tp_Consulta',
			carater_atendimento_dad_ate		varchar(1)	path	'caraterAtendimento',
			mv_encerramento_dad_ate			varchar(2)	path	'mv_Encerramento');

	-- <guiaSADT> <dadosGuia>

	c_dados_guia_dad_gui CURSOR( dados_guia_dad_gui_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosGuia' passing dados_guia_dad_gui_pc columns
			nr_ver_tiss_dad_gui			varchar(7)	path	'nr_Ver_TISS',
			nr_lote_prestador_dad_gui		varchar(12)	path	'nr_LotePrestador',
			dt_protocolo_dad_gui			varchar(8)	path	'dt_Protocolo',
			nr_guias_dad_gui			xml		path	'nr_Guias',
			dt_atendimento_dad_gui			varchar(21)	path	'dt_Atendimento',
			procedimentos_exec_dad_gui		xml		path	'procedimentosExecutados',
			dt_ultima_autorizacao_dad_gui		varchar(8)	path	'dt_UltimaAutorizacao',
			compleme_dad_gui_com			xml		path	'complemento',
			id_guia_principal_dad_gui		varchar(1)	path	'id_GuiaPrincipal');

		-- <guiaSADT> <dadosGuia> <nr_Guias>

		c_nr_guias_dad_gui CURSOR( nr_guias_dad_gui_pc		xml ) FOR
			SELECT	*
			from	xmltable('/nr_Guias' passing nr_guias_dad_gui_pc columns
				nr_guia_tiss_prestador_dad_gui		varchar(255)	path	'nr_GuiaTissPrestador',
				nr_guia_tiss_operadora_dad_gui		varchar(255)	path	'nr_GuiaTissOperadora',
				nr_guia_tiss_principal_dad_gui		varchar(255)	path	'nr_GuiaTissPrincipal');
				
			-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados>

			c_proc_exec_dad_gui CURSOR( procedimento_exec_dad_gui_pc		xml ) FOR
				SELECT	*
				from	xmltable('/procedimentosExecutados' passing procedimento_exec_dad_gui_pc columns
					dt_execucao_pro				varchar(8)	path	'dt_Execucao',
					hr_inicial_pro				varchar(8)	path	'hr_Inicial',
					hr_final_pro				varchar(8)	path	'hr_Final',
					procedimentos_pro			xml		path	'procedimentos',
					via_acesso_pro				varchar(2)	path	'via_Acesso',
					tc_utilizada_pro			varchar(1)	path	'tc_Utilizada',
					id_acrescimo_pro			varchar(1)	path	'id_Acrescimo',
					valores_pro				xml		path	'valores',
					un_medida_pro				varchar(3)	path	'un_Medida',
					ft_multiplicador_servico_pro		varchar(255)	path	'ft_MultiplicadorServico',
					id_pacote_pro				varchar(1)	path	'id_Pacote',
					cd_porte_anestesico_pro			varchar(1)	path	'cd_PorteAnestesico',
					dados_opme_pro				xml		path	'dadosOPME',
					pago_prestador_pro			xml		path	'pagoPrestador',
					equipe_profissional_pro			xml		path	'equipe_Profissional',
					cd_ato_proc				varchar(1)	path	'cd_Ato',
					dados_autorizacao_pro			xml		path	'dadosAutorizacao');
					
				-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <procedimentos>

				c_procedimentos_sadt CURSOR( procedimentos_pc		xml ) FOR
					SELECT	*
					from	xmltable('/procedimentos' passing procedimentos_pc columns
						seq_item_pro				varchar(4)	path	'seq_item',
						tp_tabela_pro				varchar(2)	path	'tp_Tabela',
						cd_servico_pro				varchar(10)	path	'cd_Servico',
						qt_paga_pro				varchar(255)	path	'qt_Paga');
						
				-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <valores>

				c_valores_sadt CURSOR( valores_pc		xml ) FOR
					SELECT	*
					from	xmltable('/valores' passing valores_pc columns
						vl_serv_pago_val			varchar(255)	path	'vl_ServPago',
						vl_filme_pago_val			varchar(255)	path	'vl_FilmePago',
						vl_co_pago_val				varchar(255)	path	'vl_CO_Pago');
						
				-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <dadosOPME>

				c_dados_opme_sadt CURSOR( dados_opme_pc		xml ) FOR
					SELECT	*
					from	xmltable('/dadosOPME' passing dados_opme_pc columns
						cd_cnpj_for_dad_opme			varchar(14)	path	'cd_cnpj',
						nr_registro_anvisa_dad_opme		varchar(15)	path	'nr_RegistroAnvisa',
						cd_referenci_mat_fab_dad_opme		varchar(60)	path	'cd_ReferenciaMat_Fab');
			
				-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <pagoPrestador>

				c_pago_prestador_sadt CURSOR( pago_prestador_pc		xml ) FOR
					SELECT	*
					from	xmltable('/pagoPrestador' passing pago_prestador_pc columns
						dt_pago_prestador_pag_pre		varchar(8)	path	'dt_PagoPrestador');
						
				-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <equipe_Profissional>

				c_equipe_profissional_sadt CURSOR( equipe_profissional_pc		xml ) FOR
					SELECT	*
					from	xmltable('/equipe_Profissional' passing equipe_profissional_pc columns
						tp_participacao_equ_pro			varchar(1)	path	'tp_Participacao',
						prestador_equ_pro			xml		path	'Prestador',
						nm_profissional_equ_pro			varchar(60)	path	'nm_Profissional',
						cd_cpf_equ_pro				varchar(11)	path	'cd_cpf',
						dados_conselho_equ_pro			xml		path	'dadosConselho',
						cbo_equ_pro				varchar(6)	path	'CBO');
						
					-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <equipe_Profissional> <Prestador>

					c_prestador_equ_pre CURSOR( prestador_equ_pre_pc		xml ) FOR
						SELECT	*
						from	xmltable('/Prestador' passing prestador_equ_pre_pc columns
							cd_uni_prest_pro_equ_pro			varchar(4)	path	'cd_Uni_Prest',
							cd_prest_pro_equ_pro				varchar(8)	path	'cd_Prest');
							
					-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <equipe_Profissional> <dadosConselho>

					c_dados_conselho_equ_pro CURSOR( dados_conselho_equ_pro_pc		xml ) FOR
						SELECT	*
						from	xmltable('/dadosConselho' passing dados_conselho_equ_pro_pc columns
							sg_conselho_dad_con_equ_pro			varchar(12)	path	'sg_Conselho',
							nr_conselho_dad_con_equ_pro			varchar(15)	path	'nr_Conselho',
							uf_dad_con_equ_pro				varchar(2)	path	'UF');
							
				-- <guiaSADT> <dadosGuia> <nr_Guias> <procedimentosExecutados> <dadosAutorizacao>

				c_dados_autorizacao_sadt CURSOR( dados_autorizacao_pc		xml ) FOR
					SELECT	*
					from	xmltable('/dadosAutorizacao' passing dados_autorizacao_pc columns
						dt_solicitacao_dad_aut			varchar(8)	path	'dt_Solicitacao',
						dt_autorizacao_dad_aut			varchar(8)	path	'dt_Autorizacao');
						
			-- <guiaSADT> <dadosGuia> <nr_Guias> <complemento>

			c_compleme_dad_gui_com CURSOR( compleme_dad_gui_com_pc		xml ) FOR
				SELECT	*
				from	xmltable('/complemento' passing compleme_dad_gui_com_pc columns
					tp_reg_cpl_dad_gui_com			varchar(1)	path	'tp_RegCPL',
					nm_desc_compleme_dad_gui_com		varchar(255)	path	'nm_DescComplemento');

--  +++++++++++++++++++++++++++++++++++++++++++++++ GUIA DE INTERNACAO ++++++++++++++++++++++++++++++++++++++++++++++

c_guia_internacao CURSOR( guia_internacao_pc		xml ) FOR
	SELECT	*
	from	xmltable('/guiaInternacao' passing guia_internacao_pc columns
		dados_beneficiario			xml		path	'dadosBeneficiario',
		dados_solicitante			xml		path	'dadosSolicitante',
		dados_executante			xml		path	'dadosExecutante',
		dados_internacao			xml		path	'dadosInternacao',
		dados_guia				xml		path	'dadosGuia');

	-- <guiaSADT> <dadosBeneficiario>

	c_dados_beneficiario_int CURSOR( dados_beneficiario_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosBeneficiario' passing dados_beneficiario_pc columns
			cd_unimed_dad_ben			varchar(4)	path	'cd_Unimed',
			id_benef_dad_ben			varchar(13)	path	'id_Benef',
			nm_benef_dad_ben			varchar(25)	path	'nm_Benef',
			id_rn_dad_ben				varchar(1)	path	'id_RN',
			tp_paciente_dad_ben			varchar(1)	path	'tp_Paciente');

	-- <guiaInternacao> <dadosSolicitante>

	c_dados_solicitante_int CURSOR( dados_solicitante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosSolicitante' passing dados_solicitante_pc columns
			contratado_solicitante_dad_sol		xml		path	'contratadoSolicitante',
			profissional_dad_sol			xml		path	'profissional');
			
		-- <guiaInternacao> <dadosSolicitante> <contratadoSolicitante>

		c_contratado_solicitante_int CURSOR( contratado_solicitante_pc		xml ) FOR
			SELECT	*
			from	xmltable('/contratadoSolicitante' passing contratado_solicitante_pc columns
				cpf_cnpj_dad_sol			xml		path	'cpf_cnpj',
				unimed_prestador_dad_sol		xml		path	'UnimedPrestador',
				nome_dad_sol				varchar(60)	path	'nome');
				
			-- <guiaInternacao> <dadosSolicitante> <contratadoSolicitante> <cpf_cnpj>

			c_cpf_cnpj_dad_sol_int CURSOR( cpf_cnpj_dad_sol_pc		xml ) FOR
				SELECT	*
				from	xmltable('/cpf_cnpj' passing cpf_cnpj_dad_sol_pc columns
					cd_cpf_dad_sol				varchar(11)	path	'cd_cpf',
					cd_cnpj_dad_sol				varchar(14)	path	'cd_cnpj');
					
			-- <guiaInternacao> <dadosSolicitante> <contratadoSolicitante> <UnimedPrestador>

			c_unimed_prestador_dad_sol_int CURSOR( unimed_prestador_dad_sol_pc		xml ) FOR
				SELECT	*
				from	xmltable('/UnimedPrestador' passing unimed_prestador_dad_sol_pc columns
					cd_uni_prest_dad_sol			varchar(4)	path	'cd_Uni_Prest',
					cd_prest_dad_sol			varchar(8)	path	'cd_Prest');				
		-- <guiaInternacao> <dadosSolicitante> <profissional>

		c_profissional_int CURSOR( profissional_pc		xml ) FOR
			SELECT	*
			from	xmltable('/profissional' passing profissional_pc columns
				nm_profissional_prof			varchar(60)	path	'nm_Profissional',
				dados_conselho_prof			xml		path	'dadosConselho',
				cbo_prof				varchar(6)	path	'CBO');
				
			-- <guiaInternacao> <dadosSolicitante> <profissional> <dadosConselho>

			c_dados_conselho_prof_int CURSOR( dados_conselho_prof_pc		xml ) FOR
				SELECT	*
				from	xmltable('/dadosConselho' passing dados_conselho_prof_pc columns
					sg_conselho_dad_con_prof		varchar(12)	path	'sg_Conselho',
					nr_conselho_dad_con_prof		varchar(15)	path	'nr_Conselho',
					uf_dad_con_prof				varchar(2)	path	'UF');

	-- <guiaInternacao> <dadosExecutante>

	c_dados_executante_int CURSOR( dados_executante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosExecutante' passing dados_executante_pc columns
			unimed_prestador_dad_exe		xml		path	'UnimedPrestador',
			nm_prest_exec_dad_exec			varchar(70)	path	'nome',
			cpf_cnpj_dad_exe			xml		path	'CPF_CNPJ',
			cd_cnes_dad_exec			varchar(7)	path	'CNES',
			prestador_dad_exe			xml		path	'prestador');
			
		-- <guiaInternacao> <dadosExecutante> <UnimedPrestador>

		c_unimed_prestador_dad_exe_int CURSOR( unimed_prestador_dad_exe_pc		xml ) FOR
			SELECT	*
			from	xmltable('/UnimedPrestador' passing unimed_prestador_dad_exe_pc columns
				cd_uni_prest_dad_exe			varchar(4)	path	'cd_Uni_Prest',
				cd_prest_dad_exe			varchar(8)	path	'cd_Prest');
				
		-- <guiaInternacao> <dadosExecutante> <CPF_CNPJ>

		c_cpf_cnpj_dad_exe_int CURSOR( cpf_cnpj_pc		xml ) FOR
			SELECT	*
			from	xmltable('/CPF_CNPJ' passing cpf_cnpj_pc columns
				cd_cpf_dad_exe				varchar(11)	path	'cd_cpf',
				cd_cnpj_dad_exe				varchar(14)	path	'cd_cnpj');
				
		-- <guiaInternacao> <dadosExecutante> <prestador>

		c_prestador_dad_exe_int CURSOR( prestador_dad_exe_pc		xml ) FOR
			SELECT	*
			from	xmltable('/prestador' passing prestador_dad_exe_pc columns
				cd_municipio_cont_dad_exe		varchar(7)	path	'cd_MunicipioCont',
				tp_prestador_dad_exe			varchar(2)	path	'tp_Prestador',
				id_rec_proprio_dad_exe			varchar(1)	path	'id_RecProprio');
	
	-- <guiaInternacao> <dadosInternacao>

	c_dados_internacao CURSOR( dados_internacao_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosInternacao' passing dados_internacao_pc columns
			tp_acomodacao_dad_int				varchar(2)	path	'tp_Acomodacao',
			ft_multiplicador_amb_dad_int			real	path	'ft_Multiplicador_AMB',
			tp_internacao_dad_int				smallint	path	'tp_Internacao',
			rg_internacao_dad_int				smallint	path	'rg_Internacao',
			tp_indicador_acidente_dad_int			varchar(1)	path	'tp_Indicador_Acidente',
			carater_atendimento_dad_int			smallint	path	'carater_Atendimento',
			motivo_encerramento_dad_int			varchar(2)	path	'mv_Encerramento',
			dados_faturamento_dad_int			xml		path	'dadosFaturamento',
			dados_declaracoes_dad_int			xml		path	'dadosDeclaracoes');
			

		-- <guiaInternacao> <dadosInternacao> <dadosFaturamento>

		c_dados_faturamento_dad_int CURSOR( dados_faturamento_dad_int_pc		xml ) FOR
			SELECT	*
			from	xmltable('/dadosFaturamento' passing dados_faturamento_dad_int_pc columns
				tp_fat_dad_int				smallint	path	'tp_Faturamento',
				dt_inicio_fat_dad_int			varchar(20)	path	'dt_IniFaturamento',
				dt_fim_fat_dad_int			varchar(20)	path	'dt_FimFaturamento');

		-- <guiaInternacao> <dadosInternacao> <dadosDeclaracoes>

		c_dados_declaracoes_dad_int CURSOR( dados_declaracoes_dad_int_pc		xml ) FOR
			SELECT	*
			from	xmltable('/dadosDeclaracoes' passing dados_declaracoes_dad_int_pc columns
				qt_nasc_vivo_dad_int			smallint	path	'declaracao_Nascido',
				cd_cid_obito_dad_int			varchar(6)	path	'CID_Obito',
				nr_declara_obito_dad_int		varchar(17)	path	'declaracao_Obito',
				ie_int_rec_nascido_dad_int		varchar(1)	path	'inidicadorDO_RN');

	-- <guiaInternacao> <dadosGuia>

	c_dados_guia_int CURSOR( dados_guia_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosGuia' passing dados_guia_pc columns
			nr_ver_tiss_dad_gui			varchar(7)	path	'nr_Ver_TISS',
			nr_lote_prestador_dad_gui		varchar(12)	path	'nr_LotePrestador',
			dt_protocolo_dad_gui			varchar(8)	path	'dt_Protocolo',
			nr_guias_dad_gui			xml		path	'nr_Guias',
			dt_atendimento_dad_gui			varchar(21)	path	'dt_Atendimento',
			procedimentos_exec_dad_gui		xml		path	'procedimentosExecutados',
			compleme_dad_gui_com			xml		path	'complemento');

		-- <guiaInternacao> <dadosGuia> <nr_Guias>

		c_nr_guias_dad_gui_int CURSOR( nr_guias_dad_gui_pc		xml ) FOR
			SELECT	*
			from	xmltable('/nr_Guias' passing nr_guias_dad_gui_pc columns
				nr_guia_tiss_prest_dad_gui		varchar(255)	path	'nr_GuiaTissPrestador',
				nr_guia_tiss_opera_dad_gui		varchar(255)	path	'nr_GuiaTissOperadora',
				nr_guia_tiss_princ_dad_gui		varchar(255)	path	'nr_GuiaTissPrincipal');

		-- <guiaInternacao> <dadosGuia> <procedimentosExecutados>

		c_procediment_exec_dad_gui_int CURSOR( procediment_exec_dad_gui_pc		xml ) FOR
			SELECT	*
			from	xmltable('/procedimentosExecutados' passing procediment_exec_dad_gui_pc columns
				dt_execucao_pro				varchar(8)	path	'dt_Execucao',
				hr_inicial_pro				varchar(8)	path	'hr_Inicial',
				hr_final_pro				varchar(8)	path	'Hr_Final',
				procedimentos_pro			xml		path	'procedimentos',
				via_acesso_pro				varchar(2)	path	'via_Acesso',
				tc_utilizada_pro			varchar(1)	path	'tc_Utilizada',
				id_acrescimo_pro			varchar(1)	path	'id_Acrescimo',
				valores_pro				xml		path	'valores',
				un_medida_pro				varchar(3)	path	'un_Medida',
				ft_multiplicador_servico_pro		varchar(255)	path	'ft_MultiplicadorServico',
				id_pacote_pro				varchar(1)	path	'id_Pacote',
				cd_porte_anestesico_pro			varchar(1)	path	'cd_PorteAnestesico',
				dados_opme_generico_pro			xml		path	'dadosOPMEGenerico',
				pago_prestador_pro			xml		path	'pagoPrestador',
				equipe_profissional_pro			xml		path	'equipe_Profissional',
				cd_ato_proc				varchar(1)	path	'cd_Ato',
				dados_autorizacao_pro			xml		path	'dadosAutorizacao');

			-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <procedimentos>

			c_procedimentos_int CURSOR( procedimentos_pc		xml ) FOR
				SELECT	*
				from	xmltable('/procedimentos' passing procedimentos_pc columns
					seq_item_pro				varchar(4)	path	'seq_item',
					tp_tabela_pro				varchar(2)	path	'tp_Tabela',
					cd_servico_pro				varchar(10)	path	'cd_Servico',
					qt_paga_pro				varchar(255)	path	'qt_Paga');

			-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <valores>

			c_valores_int CURSOR( valores_pc		xml ) FOR
				SELECT	*
				from	xmltable('/valores' passing valores_pc columns
					vl_serv_pago_val			varchar(255)	path	'vl_ServPago',
					vl_filme_pago_val			varchar(255)	path	'vl_FilmePago',
					vl_co_pago_val				varchar(255)	path	'vl_CO_Pago');

			-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <dadosOPME>

			c_dados_opme_int CURSOR( dados_opme_pc		xml ) FOR
				SELECT	*
				from	xmltable('/dadosOPME' passing dados_opme_pc columns
					cd_cnpj_for_dad_opme			varchar(14)	path	'cd_cnpj',
					nr_registro_anvisa_dad_opme		varchar(15)	path	'nr_RegistroAnvisa',
					cd_referenci_mat_fab_dad_opme		varchar(60)	path	'cd_ReferenciaMat_Fab');

			-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <pagoPrestador>

			c_pago_prestador_int CURSOR( pago_prestador_pc		xml ) FOR
				SELECT	*
				from	xmltable('/pagoPrestador' passing pago_prestador_pc columns
					dt_pago_prestador_pag_pre		varchar(8)	path	'dt_PagoPrestador');

			-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <equipe_Profissional>

			c_equipe_profissional_int CURSOR( equipe_profissional_pc		xml ) FOR
				SELECT	*
				from	xmltable('/equipe_Profissional' passing equipe_profissional_pc columns
					tp_participacao_equ_pro			varchar(1)	path	'tp_Participacao',
					prestador_equ_pro			xml		path	'Prestador',
					nm_profissional_equ_pro			varchar(60)	path	'nm_Profissional',
					cd_cpf_equ_pro				varchar(11)	path	'cd_cpf',
					dados_conselho_equ_pro			xml		path	'dadosConselho',
					cbo_equ_pro				varchar(6)	path	'CBO');
					
				-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <equipe_Profissional> <Prestador>

				c_prestador_equ_pre_int CURSOR( prestador_equ_pre_pc		xml ) FOR
					SELECT	*
					from	xmltable('/Prestador' passing prestador_equ_pre_pc columns
						cd_uni_prest_pro_equ_pro			varchar(4)	path	'cd_Uni_Prest',
						cd_prest_pro_equ_pro				varchar(8)	path	'cd_Prest');
						
				-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <equipe_Profissional> <dadosConselho>

				c_dados_conselho_equ_pro_int CURSOR( dados_conselho_equ_pro_pc		xml ) FOR
					SELECT	*
					from	xmltable('/dadosConselho' passing dados_conselho_equ_pro_pc columns
						sg_conselho_dad_con_equ_pro			varchar(12)	path	'sg_Conselho',
						nr_conselho_dad_con_equ_pro			varchar(15)	path	'nr_Conselho',
						uf_dad_con_equ_pro				varchar(2)	path	'UF');

			-- <guiaInternacao> <dadosGuia> <procedimentosExecutados> <dadosAutorizacao>

			c_dados_autorizacao_int CURSOR( dados_autorizacao_pc		xml ) FOR
				SELECT	*
				from	xmltable('/dadosAutorizacao' passing dados_autorizacao_pc columns
					dt_solicitacao_dad_aut			varchar(8)	path	'dt_Solicitacao',
					dt_autorizacao_dad_aut			varchar(8)	path	'dt_Autorizacao');

		-- <guiaInternacao> <dadosGuia> <complemento>

		c_compleme_dad_gui_com_int CURSOR( compleme_dad_gui_com_pc		xml ) FOR
			SELECT	*
			from	xmltable('/complemento' passing compleme_dad_gui_com_pc columns
				tp_reg_cpl_dad_gui_com			varchar(1)	path	'tp_RegCPL',
				nm_desc_compleme_dad_gui_com		varchar(255)	path	'nm_DescComplemento');

--  +++++++++++++++++++++++++++++++++++++++++++++++ GUIA DE HONORARIO ++++++++++++++++++++++++++++++++++++++++++++++

c_guia_honorario CURSOR( guia_honorario_pc		xml ) FOR
	SELECT	*
	from	xmltable('/guiaHonorarios' passing guia_honorario_pc columns
		dados_beneficiario			xml		path	'dadosBeneficiario',
		dados_hospital				xml		path	'dadosHospital',
		dados_executante			xml		path	'dadosExecutante',
		dados_guia				xml		path	'dadosGuia');

	-- <guiaHonorario> <dadosBeneficiario>

	c_dados_beneficiario_hon CURSOR( dados_beneficiario_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosBeneficiario' passing dados_beneficiario_pc columns
			cd_unimed_dad_ben			varchar(4)	path	'cd_Unimed',
			id_benef_dad_ben			varchar(13)	path	'id_Benef',
			nm_benef_dad_ben			varchar(25)	path	'nm_Benef',
			id_rn_dad_ben				varchar(1)	path	'id_RN',
			tp_paciente_dad_ben			varchar(1)	path	'tp_Paciente');

	-- <guiaHonorario> <dadosHospital>

	c_dados_hospital_hon CURSOR( dados_hospital_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosHospital' passing dados_hospital_pc columns
			cd_uni_hosp_dad_hosp			varchar(4)	path	'cd_uniHospitalar',
			cd_hosp_dad_hosp			varchar(8)	path	'cd_Hospitalar',
			cnpj_hosp_dad_hosp			varchar(14)	path	'CNPJHospital',
			nm_hosp_dad_hosp			varchar(70)	path	'nm_Hospital',
			cd_cnes_hosp_dad_hosp			varchar(7)	path	'CNES');

	-- <guiaHonorario> <dadosExecutante>

	c_dados_executante_hon CURSOR( dados_executante_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosExecutante' passing dados_executante_pc columns
			unimed_prestador_dad_exe		xml		path	'UnimedPrestador',
			nm_prest_exec_dad_exec			varchar(70)	path	'nome',
			cpf_cnpj_dad_exe			xml		path	'CPF_CNPJ',
			cd_cnes_dad_exec			varchar(7)	path	'CNES',
			prestador_dad_exe			xml		path	'prestador');
			
		-- <guiaHonorario> <dadosExecutante> <UnimedPrestador>

		c_unimed_prestador_dad_exe_hon CURSOR( unimed_prestador_dad_exe_pc		xml ) FOR
			SELECT	*
			from	xmltable('/UnimedPrestador' passing unimed_prestador_dad_exe_pc columns
				cd_uni_prest_dad_exe			varchar(4)	path	'cd_Uni_Prest',
				cd_prest_dad_exe			varchar(8)	path	'cd_Prest');
				
		-- <guiaHonorario> <dadosExecutante> <CPF_CNPJ>

		c_cpf_cnpj_dad_exe_hon CURSOR( cpf_cnpj_pc		xml ) FOR
			SELECT	*
			from	xmltable('/CPF_CNPJ' passing cpf_cnpj_pc columns
				cd_cpf_dad_exe				varchar(11)	path	'cd_cpf',
				cd_cnpj_dad_exe				varchar(14)	path	'cd_cnpj');
				
		-- <guiaHonorario> <dadosExecutante> <prestador>

		c_prestador_dad_exe_hon CURSOR( prestador_dad_exe_pc		xml ) FOR
			SELECT	*
			from	xmltable('/prestador' passing prestador_dad_exe_pc columns
				cd_municipio_cont_dad_exe		varchar(7)	path	'cd_MunicipioCont',
				tp_prestador_dad_exe			varchar(2)	path	'tp_Prestador',
				id_rec_proprio_dad_exe			varchar(1)	path	'id_RecProprio');

	-- <guiaHonorario> <dadosGuia>

	c_dados_guia_hon CURSOR( dados_guia_pc		xml ) FOR
		SELECT	*
		from	xmltable('/dadosGuia' passing dados_guia_pc columns
			nr_ver_tiss_dad_gui			varchar(7)	path	'nr_Ver_TISS',
			nr_lote_prestador_dad_gui		varchar(12)	path	'nr_LotePrestador',
			dt_protocolo_dad_gui			varchar(8)	path	'dt_Protocolo',
			nr_guias_dad_gui			xml		path	'nr_Guias',
			dt_atendimento_dad_gui			varchar(21)	path	'dt_Atendimento',
			procedimentos_exec_dad_gui		xml		path	'procedimentosExecutados',
			compleme_dad_gui_com			xml		path	'complemento');

		-- <guiaHonorario> <dadosGuia> <nr_Guias>

		c_nr_guias_dad_gui_hon CURSOR( nr_guias_dad_gui_pc		xml ) FOR
			SELECT	*
			from	xmltable('/nr_Guias' passing nr_guias_dad_gui_pc columns
				nr_guia_tiss_prest_dad_gui		varchar(255)	path	'nr_GuiaTissPrestador',
				nr_guia_tiss_opera_dad_gui		varchar(255)	path	'nr_GuiaTissOperadora',
				nr_guia_tiss_princ_dad_gui		varchar(255)	path	'nr_GuiaTissPrincipal');

		-- <guiaHonorario> <dadosGuia> <procedimentosExecutados>

		c_procediment_exec_dad_gui_hon CURSOR( procediment_exec_dad_gui_pc		xml ) FOR
			SELECT	*
			from	xmltable('/procedimentosExecutados' passing procediment_exec_dad_gui_pc columns
				dt_execucao_pro				varchar(8)	path	'dt_Execucao',
				hr_inicial_pro				varchar(8)	path	'hr_Inicial',
				hr_final_pro				varchar(8)	path	'Hr_Final',
				procedimentos_pro			xml		path	'procedimentos',
				via_acesso_pro				varchar(2)	path	'via_Acesso',
				tc_utilizada_pro			varchar(1)	path	'tc_Utilizada',
				id_acrescimo_pro			varchar(1)	path	'id_Acrescimo',
				valores_pro				xml		path	'valores',
				un_medida_pro				varchar(3)	path	'un_Medida',
				ft_multiplicador_servico_pro		varchar(255)	path	'ft_MultiplicadorServico',
				id_pacote_pro				varchar(1)	path	'id_Pacote',
				cd_porte_anestesico_pro			varchar(1)	path	'cd_PorteAnestesico',
				dados_opme_generico_pro			xml		path	'dadosOPMEGenerico',
				pago_prestador_pro			xml		path	'pagoPrestador',
				equipe_profissional_pro			xml		path	'equipe_Profissional',
				cd_ato_proc				varchar(1)	path	'cd_Ato',
				dados_autorizacao_pro			xml		path	'dadosAutorizacao');

			-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <procedimentos>

			c_procedimentos_hon CURSOR( procedimentos_pc		xml ) FOR
				SELECT	*
				from	xmltable('/procedimentos' passing procedimentos_pc columns
					seq_item_pro				varchar(4)	path	'seq_item',
					tp_tabela_pro				varchar(2)	path	'tp_Tabela',
					cd_servico_pro				varchar(10)	path	'cd_Servico',
					qt_paga_pro				varchar(255)	path	'qt_Paga');

			-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <valores>

			c_valores_hon CURSOR( valores_pc		xml ) FOR
				SELECT	*
				from	xmltable('/valores' passing valores_pc columns
					vl_serv_pago_val			varchar(255)	path	'vl_ServPago',
					vl_filme_pago_val			varchar(255)	path	'vl_FilmePago',
					vl_co_pago_val				varchar(255)	path	'vl_CO_Pago');

			-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <dadosOPME>

			c_dados_opme_hon CURSOR( dados_opme_pc		xml ) FOR
				SELECT	*
				from	xmltable('/dadosOPME' passing dados_opme_pc columns
					cd_cnpj_for_dad_opme			varchar(14)	path	'cd_cnpj',
					nr_registro_anvisa_dad_opme		varchar(15)	path	'nr_RegistroAnvisa',
					cd_referenci_mat_fab_dad_opme		varchar(60)	path	'cd_ReferenciaMat_Fab');

			-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <pagoPrestador>

			c_pago_prestador_hon CURSOR( pago_prestador_pc		xml ) FOR
				SELECT	*
				from	xmltable('/pagoPrestador' passing pago_prestador_pc columns
					dt_pago_prestador_pag_pre		varchar(8)	path	'dt_PagoPrestador');

			-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <equipe_Profissional>

			c_equipe_profissional_hon CURSOR( equipe_profissional_pc		xml ) FOR
				SELECT	*
				from	xmltable('/equipe_Profissional' passing equipe_profissional_pc columns
					tp_participacao_equ_pro			varchar(1)	path	'tp_Participacao',
					prestador_equ_pro			xml		path	'Prestador',
					nm_profissional_equ_pro			varchar(60)	path	'nm_Profissional',
					cd_cpf_equ_pro				varchar(11)	path	'cd_cpf',
					dados_conselho_equ_pro			xml		path	'dadosConselho',
					cbo_equ_pro				varchar(6)	path	'CBO');
					
				-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <equipe_Profissional> <Prestador>

				c_prestador_equ_pre_hon CURSOR( prestador_equ_pre_pc		xml ) FOR
					SELECT	*
					from	xmltable('/Prestador' passing prestador_equ_pre_pc columns
						cd_uni_prest_pro_equ_pro			varchar(4)	path	'cd_Uni_Prest',
						cd_prest_pro_equ_pro				varchar(8)	path	'cd_Prest');
						
				-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <equipe_Profissional> <dadosConselho>

				c_dados_conselho_equ_pro_hon CURSOR( dados_conselho_equ_pro_pc		xml ) FOR
					SELECT	*
					from	xmltable('/dadosConselho' passing dados_conselho_equ_pro_pc columns
						sg_conselho_dad_con_equ_pro			varchar(12)	path	'sg_Conselho',
						nr_conselho_dad_con_equ_pro			varchar(15)	path	'nr_Conselho',
						uf_dad_con_equ_pro				varchar(2)	path	'UF');

			-- <guiaHonorario> <dadosGuia> <procedimentosExecutados> <dadosAutorizacao>

			c_dados_autorizacao_hon CURSOR( dados_autorizacao_pc		xml ) FOR
				SELECT	*
				from	xmltable('/dadosAutorizacao' passing dados_autorizacao_pc columns
					dt_solicitacao_dad_aut			varchar(8)	path	'dt_Solicitacao',
					dt_autorizacao_dad_aut			varchar(8)	path	'dt_Autorizacao');

		-- <guiaHonorario> <dadosGuia> <complemento>

		c_compleme_dad_gui_com_hon CURSOR( compleme_dad_gui_com_pc		xml ) FOR
			SELECT	*
			from	xmltable('/complemento' passing compleme_dad_gui_com_pc columns
				tp_reg_cpl_dad_gui_com			varchar(1)	path	'tp_RegCPL',
				nm_desc_compleme_dad_gui_com		varchar(255)	path	'nm_DescComplemento');

BEGIN

for r_c01_w in c01( nr_seq_arq_xml_p ) loop

	-- /PTUA700/CABECALHO

	for r_cabecalho_w in c_cabecalho( r_c01_w.ds_arq_xml ) loop
		
		ica := vet_tab_cabecalho_w.count + 1;
		
		vet_tab_cabecalho_w[ica].nr_vertra_ptu_cab			:= r_cabecalho_w.nr_vertra_ptu_cab;
		
		-- /PTUA700/CABECALHO/UNIMED

		for r_cabecalho_unimed_w in c_cabecalho_unimed( r_cabecalho_w.unimed_cab ) loop
			vet_tab_cabecalho_w[ica].cd_uni_destino_cab			:= r_cabecalho_unimed_w.cd_uni_destino_cab;
			vet_tab_cabecalho_w[ica].cd_uni_origem_cab			:= r_cabecalho_unimed_w.cd_uni_origem_cab;
		end loop;
		
		vet_tab_cabecalho_w[ica].dt_geracao_cab				:= r_cabecalho_w.dt_geracao_cab;
		vet_tab_cabecalho_w[ica].nr_seq_geracao_cab			:= r_cabecalho_w.nr_seq_geracao_cab;
		vet_tab_cabecalho_w[ica].dt_inicio_pagto_cab			:= r_cabecalho_w.dt_inicio_pagto_cab;
		vet_tab_cabecalho_w[ica].dt_fim_pagto_cab			:= r_cabecalho_w.dt_fim_pagto_cab;
		
		-- HASH

		for r_hash_w in c_hash( r_c01_w.ds_arq_xml ) loop
			vet_tab_cabecalho_w[ica].hash		:= r_hash_w.hash;
		end loop;
		
		-- CARIMBO CMB

		for r_carimbo_cmb in c_carimbo_cmb( r_c01_w.ds_arq_xml ) loop
			vet_tab_cabecalho_w[ica].dt_postagem		:= r_carimbo_cmb.dt_postagem;
			vet_tab_cabecalho_w[ica].nr_protocolo		:= r_carimbo_cmb.nr_protocolo;
		end loop;
	end loop;
	
	-- /PTUA700/ARQUIVOA700

	for r_arquivo_a700_w in c_arquivo_a700( r_c01_w.ds_arq_xml ) loop

		igsm	:= vet_tab_sem_movimento_w.count + 1;
		
		vet_tab_sem_movimento_w[igsm].sem_movimento				:= r_arquivo_a700_w.sem_movimento;

		-- /PTUA700/ARQUIVOA700/TIPOGUIA

		for r_arquivo_a700_tipo_guia_w in c_arquivo_a700_tipo_guia( r_arquivo_a700_w.tipo_guia ) loop

			-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA

			for r_guia_consulta_w in c_tipo_guia_consulta( r_arquivo_a700_tipo_guia_w.guia_consulta ) loop

				igc	:= vet_tab_guia_consulta_w.count + 1;

				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSBENEFICIARIO

				for r_dados_beneficiario_w in c_dados_beneficiario_cons( r_guia_consulta_w.dados_beneficiario ) loop
					vet_tab_guia_consulta_w[igc].id								:= igc;
					vet_tab_guia_consulta_w[igc].cd_unimed_dad_ben						:= r_dados_beneficiario_w.cd_unimed_dad_ben;
					vet_tab_guia_consulta_w[igc].id_benef_dad_ben						:= r_dados_beneficiario_w.id_benef_dad_ben;
					vet_tab_guia_consulta_w[igc].nm_benef_dad_ben						:= r_dados_beneficiario_w.nm_benef_dad_ben;
					vet_tab_guia_consulta_w[igc].id_rn_dad_ben						:= r_dados_beneficiario_w.id_rn_dad_ben;
					vet_tab_guia_consulta_w[igc].tp_paciente_dad_ben					:= r_dados_beneficiario_w.tp_paciente_dad_ben;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/CONTRATOEXECUTANTE

				for r_contrato_executante_w in c_contrato_executante( r_guia_consulta_w.contrato_executante ) loop
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/CONTRATOEXECUTANTE/UNIMEDPRESTADOR

					for r_unimed_prestador_w in c_unimed_prestador_cont_exec( r_contrato_executante_w.unimed_prestador_cont_exec ) loop
						vet_tab_guia_consulta_w[igc].cd_uni_prest_cont_exec					:= r_unimed_prestador_w.cd_uni_prest_cont_exec;
						vet_tab_guia_consulta_w[igc].cd_prest_cont_exec						:= r_unimed_prestador_w.cd_prest_cont_exec;
					end loop;
					
					vet_tab_guia_consulta_w[igc].nm_prest_cont_exec						:= r_contrato_executante_w.nm_prest_cont_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/CONTRATOEXECUTANTE/CPF_CNPJ

					for r_cpf_cnpj_cont_exec_w in c_cpf_cnpj_cont_exec( r_contrato_executante_w.cpf_cnpj_cont_exec ) loop
						vet_tab_guia_consulta_w[igc].cd_cpf_cont_exec						:= r_cpf_cnpj_cont_exec_w.cd_cpf_cont_exec;
						vet_tab_guia_consulta_w[igc].cd_cnpj_cont_exec						:= r_cpf_cnpj_cont_exec_w.cd_cnpj_cont_exec;
					end loop;
					
					vet_tab_guia_consulta_w[igc].CNES_cont_exec						:= r_contrato_executante_w.CNES_cont_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/CONTRATOEXECUTANTE/PRESTADOR

					for r_prestador_cont_exec_w in c_prestador_cont_exec( r_contrato_executante_w.prestador_cont_exec ) loop
						vet_tab_guia_consulta_w[igc].cd_municipio_cont_exe					:= r_prestador_cont_exec_w.cd_municipio_cont_exe;
						vet_tab_guia_consulta_w[igc].tp_prestador_cont_exe					:= r_prestador_cont_exec_w.tp_prestador_cont_exe;
						vet_tab_guia_consulta_w[igc].id_rec_proprio_cont_exe					:= r_prestador_cont_exec_w.id_rec_proprio_cont_exe;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/PROFISSIONALEXECUTANTE

				for r_profissional_executante_w in c_profissional_executante( r_guia_consulta_w.profissional_executante ) loop
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/PROFISSIONALEXECUTANTE/UNIMEDPRESTADOR

					for r_unimed_prestador_prof_exec_w in c_unimed_prestador_prof_exec( r_profissional_executante_w.unimed_prof_exec ) loop
						vet_tab_guia_consulta_w[igc].cd_uni_prest_prof_exec					:= r_unimed_prestador_prof_exec_w.cd_uni_prest_prof_exec;
						vet_tab_guia_consulta_w[igc].cd_prest_prof_exec						:= r_unimed_prestador_prof_exec_w.cd_prest_prof_exec;
						vet_tab_guia_consulta_w[igc].nm_prest_prof_exec						:= r_unimed_prestador_prof_exec_w.nm_prest_prof_exec;
					end loop;
					
					vet_tab_guia_consulta_w[igc].cd_cpf_prof_exec						:= r_profissional_executante_w.cd_cpf_prof_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/PROFISSIONALEXECUTANTE/DADOSCONSELHO

					for r_dados_conselho_prof_exec_w in c_dados_conselho_prof_exec( r_profissional_executante_w.dados_conselho_prof_exec ) loop
						vet_tab_guia_consulta_w[igc].sg_conselho_prof_exec					:= r_dados_conselho_prof_exec_w.sg_conselho_prof_exec;
						vet_tab_guia_consulta_w[igc].nr_conselho_prof_exec					:= r_dados_conselho_prof_exec_w.nr_conselho_prof_exec;
						vet_tab_guia_consulta_w[igc].uf_prof_exec						:= r_dados_conselho_prof_exec_w.uf_prof_exec;
					end loop;
					
					vet_tab_guia_consulta_w[igc].cbo_prof_exec						:= r_profissional_executante_w.cbo_prof_exec;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSGUIA

				for r_dados_guia_consulta_w in c_dados_guia_consulta( r_guia_consulta_w.dados_guia ) loop

					vet_tab_guia_consulta_w[igc].nr_ver_tiss_dad_gui					:= r_dados_guia_consulta_w.nr_ver_tiss_dad_gui;
					vet_tab_guia_consulta_w[igc].tp_consulta_dad_gui					:= r_dados_guia_consulta_w.tp_consulta_dad_gui;
					vet_tab_guia_consulta_w[igc].nr_lote_prestador_dad_gui					:= r_dados_guia_consulta_w.nr_lote_prestador_dad_gui;
					vet_tab_guia_consulta_w[igc].dt_protocolo_dad_gui					:= r_dados_guia_consulta_w.dt_protocolo_dad_gui;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSGUIA/NRGUIAS

					for r_nr_guias_dad_gui_cons_w in c_nr_guias_dad_gui_cons( r_dados_guia_consulta_w.nr_guias_dad_gui ) loop
						vet_tab_guia_consulta_w[igc].nr_guia_tiss_prestador_dad_gui				:= r_nr_guias_dad_gui_cons_w.nr_guia_tiss_prestador_dad_gui;
						vet_tab_guia_consulta_w[igc].nr_guia_tiss_operadora_dad_gui				:= r_nr_guias_dad_gui_cons_w.nr_guia_tiss_operadora_dad_gui;
					end loop;
					
					vet_tab_guia_consulta_w[igc].tp_ind_acidente_dad_gui					:= r_dados_guia_consulta_w.tp_ind_acidente_dad_gui;
					vet_tab_guia_consulta_w[igc].dt_atendimento_dad_gui                                     := r_dados_guia_consulta_w.dt_atendimento_dad_gui;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSGUIA/PROCEDIMENTOS

					for r_procedimentos_cons_w in c_procedimentos_cons( r_dados_guia_consulta_w.procedimentos_dad_gui ) loop
					
						-- INCREMENTO PROCEDIMENTOS

						igcp	:= vet_tab_guia_cons_proc_exec_w.count + 1;
					
						vet_tab_guia_cons_proc_exec_w[igcp].id							:= igc;
						vet_tab_guia_cons_proc_exec_w[igcp].seq_item_proc					:= r_procedimentos_cons_w.seq_item_proc;
						vet_tab_guia_cons_proc_exec_w[igcp].tp_tabela_proc					:= r_procedimentos_cons_w.tp_tabela_proc;
						vet_tab_guia_cons_proc_exec_w[igcp].cd_servico_proc					:= r_procedimentos_cons_w.cd_servico_proc;
						vet_tab_guia_cons_proc_exec_w[igcp].vl_servico_pago_proc				:= r_procedimentos_cons_w.vl_servico_pago_proc;
					
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSGUIA/PROCEDIMENTOS/PAGOPRESTADOR

						for r_pago_prestador_cons_w in c_pago_prestador_cons( r_procedimentos_cons_w.pago_prestador_proc ) loop
							vet_tab_guia_cons_proc_exec_w[igcp].dt_pago_prestador_pag_pre				:= r_pago_prestador_cons_w.dt_pago_prestador_pag_pre;
						end loop;
				
						vet_tab_guia_cons_proc_exec_w[igcp].cd_ato_proc						:= r_procedimentos_cons_w.cd_ato_proc;
					
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSGUIA/DADOSAUTORIZACAO

						for r_dados_autorizacao_cons_w in c_dados_autorizacao_cons( r_dados_guia_consulta_w.dados_autorizacao_dad_gui ) loop
							vet_tab_guia_cons_proc_exec_w[igcp].dt_solicitacao_dad_aut				:= r_dados_autorizacao_cons_w.dt_solicitacao_dad_aut;
							vet_tab_guia_cons_proc_exec_w[igcp].dt_autorizacao_dad_aut				:= r_dados_autorizacao_cons_w.dt_autorizacao_dad_aut;
						end loop;
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIACONSULTA/DADOSGUIA/COMPLEMENTO

					for r_complemento_cons_w in c_complemento_cons( r_dados_guia_consulta_w.compleme_dad_gui_com ) loop
						
						-- INCREMENTO COMPLEMENTO

						igccp	:= vet_tab_guia_cons_comp_w.count + 1;
						
						vet_tab_guia_cons_comp_w[igccp].id_complemento						:= igc;
						vet_tab_guia_cons_comp_w[igccp].tp_complemento						:= r_complemento_cons_w.tp_complemento;
						vet_tab_guia_cons_comp_w[igccp].nm_complemento						:= r_complemento_cons_w.nm_complemento;
					end loop;
				end loop;
			end loop;
			
			-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT

			for r_guia_sadt_w in c_guia_sadt( r_arquivo_a700_tipo_guia_w.guia_sadt ) loop
			
				-- INCREMENTO SADT

				igs := vet_tab_guia_sadt_w.count + 1;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSBENEFICIARIO

				for r_dados_beneficiario_w in c_dados_beneficiario( r_guia_sadt_w.dados_beneficiario ) loop
					vet_tab_guia_sadt_w[igs].id								:= igs;
					vet_tab_guia_sadt_w[igs].cd_unimed_dad_ben						:= r_dados_beneficiario_w.cd_unimed_dad_ben;
					vet_tab_guia_sadt_w[igs].id_benef_dad_ben						:= r_dados_beneficiario_w.id_benef_dad_ben;
					vet_tab_guia_sadt_w[igs].nm_benef_dad_ben						:= r_dados_beneficiario_w.nm_benef_dad_ben;
					vet_tab_guia_sadt_w[igs].id_rn_dad_ben							:= r_dados_beneficiario_w.id_rn_dad_ben;
					vet_tab_guia_sadt_w[igs].tp_paciente_dad_ben						:= r_dados_beneficiario_w.tp_paciente_dad_ben;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSSOLICITANTE

				for r_dados_solicitante_w in c_dados_solicitante( r_guia_sadt_w.dados_solicitante) loop
				
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSSOLICITANTE/CONTRATOSOLICITANTE

					for r_contratado_solicitante_w in c_contratado_solicitante( r_dados_solicitante_w.contratado_solicitante_dad_sol) loop
					
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSSOLICITANTE/CONTRATOSOLICITANTE/CPF_CNPJ

						for r_cpf_cnpj_dad_sol in c_cpf_cnpj_dad_sol( r_contratado_solicitante_w.cpf_cnpj_dad_sol) loop
							vet_tab_guia_sadt_w[igs].cd_cpf_dad_sol						:= r_cpf_cnpj_dad_sol.cd_cpf_dad_sol;
							vet_tab_guia_sadt_w[igs].cd_cnpj_dad_sol                                        := r_cpf_cnpj_dad_sol.cd_cnpj_dad_sol;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSSOLICITANTE/CONTRATOSOLICITANTE/UNIMEDPRESTADOR

						for r_unimed_prestador_dad_sol_w in c_unimed_prestador_dad_sol( r_contratado_solicitante_w.unimed_prestador_dad_sol) loop
							vet_tab_guia_sadt_w[igs].cd_uni_prest_dad_sol					:= r_unimed_prestador_dad_sol_w.cd_uni_prest_dad_sol;
							vet_tab_guia_sadt_w[igs].cd_prest_dad_sol					:= r_unimed_prestador_dad_sol_w.cd_prest_dad_sol;
						end loop;
						
						vet_tab_guia_sadt_w[igs].nome_dad_sol							:= r_contratado_solicitante_w.nome_dad_sol;
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSSOLICITANTE/PROFISSIONAL

					for r_profissional_w in c_profissional( r_dados_solicitante_w.profissional_dad_sol) loop
						
						vet_tab_guia_sadt_w[igs].nm_profissional_pro						:= r_profissional_w.nm_profissional_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSSOLICITANTE/PROFISSIONAL/DADOSCONSELHO

						for r_dados_conselho_pro_w in c_dados_conselho_pro( r_profissional_w.dados_conselho_pro ) loop
							vet_tab_guia_sadt_w[igs].sg_conselho_dad_con_pro					:= r_dados_conselho_pro_w.sg_conselho_dad_con_pro;
							vet_tab_guia_sadt_w[igs].nr_conselho_dad_con_pro					:= r_dados_conselho_pro_w.nr_conselho_dad_con_pro;
							vet_tab_guia_sadt_w[igs].uf_dad_con_pro							:= r_dados_conselho_pro_w.uf_dad_con_pro;
						end loop;
						
						vet_tab_guia_sadt_w[igs].cbo_dad_sol							:= r_profissional_w.cbo_dad_sol;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSEXECUTANTE

				for r_dados_executante_w in c_dados_executante( r_guia_sadt_w.dados_executante ) loop
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSEXECUTANTE/UNIMEDPRESTADOR

					for r_unimed_prestador_dad_exe_w in c_unimed_prestador_dad_exe( r_dados_executante_w.unimed_prestador_dad_exe ) loop
						vet_tab_guia_sadt_w[igs].cd_uni_prest_dad_exe						:= r_unimed_prestador_dad_exe_w.cd_uni_prest_dad_exe;
						vet_tab_guia_sadt_w[igs].cd_prest_dad_exe						:= r_unimed_prestador_dad_exe_w.cd_prest_dad_exe;
					end loop;
					
					vet_tab_guia_sadt_w[igs].nm_prest_exec_dad_exec						:= r_dados_executante_w.nm_prest_exec_dad_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSEXECUTANTE/CPF_CNPJ

					for r_cpf_cnpj_dad_exe_w in c_cpf_cnpj_dad_exe( r_dados_executante_w.cpf_cnpj_dad_exe ) loop
						vet_tab_guia_sadt_w[igs].cd_cpf_dad_exe							:= r_cpf_cnpj_dad_exe_w.cd_cpf_dad_exe;
						vet_tab_guia_sadt_w[igs].cd_cnpj_dad_exe						:= r_cpf_cnpj_dad_exe_w.cd_cnpj_dad_exe;
					end loop;
					
					vet_tab_guia_sadt_w[igs].cd_cnes_dad_exec						:= r_dados_executante_w.cd_cnes_dad_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSEXECUTANTE/PRESTADOR

					for r_prestador_dad_exe_w in c_prestador_dad_exe( r_dados_executante_w.prestador_dad_exe ) loop
						vet_tab_guia_sadt_w[igs].cd_municipio_cont_dad_exe					:= r_prestador_dad_exe_w.cd_municipio_cont_dad_exe;
						vet_tab_guia_sadt_w[igs].tp_prestador_dad_exe						:= r_prestador_dad_exe_w.tp_prestador_dad_exe;
						vet_tab_guia_sadt_w[igs].id_rec_proprio_dad_exe						:= r_prestador_dad_exe_w.id_rec_proprio_dad_exe;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSATENDIMENTO

				for r_dados_atendimento_dad_ate_w in c_dados_atendimento_dad_ate( r_guia_sadt_w.dados_atendimento ) loop
					vet_tab_guia_sadt_w[igs].tp_atendimento_dad_ate						:= r_dados_atendimento_dad_ate_w.tp_atendimento_dad_ate;
					vet_tab_guia_sadt_w[igs].tp_ind_acidente_dad_ate					:= r_dados_atendimento_dad_ate_w.tp_ind_acidente_dad_ate;
					vet_tab_guia_sadt_w[igs].tp_consulta_dad_ate						:= r_dados_atendimento_dad_ate_w.tp_consulta_dad_ate;
					vet_tab_guia_sadt_w[igs].carater_atendimento_dad_ate					:= r_dados_atendimento_dad_ate_w.carater_atendimento_dad_ate;
					vet_tab_guia_sadt_w[igs].mv_encerramento_dad_ate					:= r_dados_atendimento_dad_ate_w.mv_encerramento_dad_ate;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA

				for r_dados_guia_dad_gui_w in c_dados_guia_dad_gui( r_guia_sadt_w.dados_guia ) loop
					
					vet_tab_guia_sadt_w[igs].nr_ver_tiss_dad_gui						:= r_dados_guia_dad_gui_w.nr_ver_tiss_dad_gui;
					vet_tab_guia_sadt_w[igs].nr_lote_prestador_dad_gui					:= r_dados_guia_dad_gui_w.nr_lote_prestador_dad_gui;
					vet_tab_guia_sadt_w[igs].dt_protocolo_dad_gui						:= r_dados_guia_dad_gui_w.dt_protocolo_dad_gui;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/NR_GUIAS

					for r_nr_guias_dad_gui_w in c_nr_guias_dad_gui( r_dados_guia_dad_gui_w.nr_guias_dad_gui) loop
						vet_tab_guia_sadt_w[igs].nr_guia_tiss_prestador_dad_gui					:= r_nr_guias_dad_gui_w.nr_guia_tiss_prestador_dad_gui;
						vet_tab_guia_sadt_w[igs].nr_guia_tiss_operadora_dad_gui					:= r_nr_guias_dad_gui_w.nr_guia_tiss_operadora_dad_gui;
						vet_tab_guia_sadt_w[igs].nr_guia_tiss_principal_dad_gui					:= r_nr_guias_dad_gui_w.nr_guia_tiss_principal_dad_gui;
					end loop;
					
					vet_tab_guia_sadt_w[igs].dt_atendimento_dad_gui						:= r_dados_guia_dad_gui_w.dt_atendimento_dad_gui;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS

					for r_proc_exec_dad_gui_w in c_proc_exec_dad_gui( r_dados_guia_dad_gui_w.procedimentos_exec_dad_gui) loop
					
						--INCREMENTO PROCEDIMENTOS EXECUTADOS

						igsp := vet_tab_guia_sadt_proc_w.count + 1;
					
						vet_tab_guia_sadt_proc_w[igsp].id							:= igs;
						vet_tab_guia_sadt_proc_w[igsp].dt_execucao_pro						:= r_proc_exec_dad_gui_w.dt_execucao_pro;
						vet_tab_guia_sadt_proc_w[igsp].hr_inicial_pro						:= r_proc_exec_dad_gui_w.hr_inicial_pro;
						vet_tab_guia_sadt_proc_w[igsp].hr_final_pro						:= r_proc_exec_dad_gui_w.hr_final_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/PROCEDIMENTOS

						for r_procedimentos_sadt_w in c_procedimentos_sadt( r_proc_exec_dad_gui_w.procedimentos_pro) loop
							vet_tab_guia_sadt_proc_w[igsp].seq_item_pro						:= r_procedimentos_sadt_w.seq_item_pro;
							vet_tab_guia_sadt_proc_w[igsp].tp_tabela_pro						:= r_procedimentos_sadt_w.tp_tabela_pro;
							vet_tab_guia_sadt_proc_w[igsp].cd_servico_pro						:= r_procedimentos_sadt_w.cd_servico_pro;
							vet_tab_guia_sadt_proc_w[igsp].qt_paga_pro						:= r_procedimentos_sadt_w.qt_paga_pro;
						end loop;
						
						vet_tab_guia_sadt_proc_w[igsp].via_acesso_pro						:= r_proc_exec_dad_gui_w.via_acesso_pro;
						vet_tab_guia_sadt_proc_w[igsp].tc_utilizada_pro						:= r_proc_exec_dad_gui_w.tc_utilizada_pro;
						vet_tab_guia_sadt_proc_w[igsp].id_acrescimo_pro						:= r_proc_exec_dad_gui_w.id_acrescimo_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/VALORES

						for r_valores_sadt_w in c_valores_sadt( r_proc_exec_dad_gui_w.valores_pro) loop
							vet_tab_guia_sadt_proc_w[igsp].vl_serv_pago_val						:= r_valores_sadt_w.vl_serv_pago_val;
							vet_tab_guia_sadt_proc_w[igsp].vl_filme_pago_val					:= r_valores_sadt_w.vl_filme_pago_val;
							vet_tab_guia_sadt_proc_w[igsp].vl_co_pago_val						:= r_valores_sadt_w.vl_co_pago_val;
						end loop;
						
						vet_tab_guia_sadt_proc_w[igsp].un_medida_pro						:= r_proc_exec_dad_gui_w.un_medida_pro;
						vet_tab_guia_sadt_proc_w[igsp].ft_multiplicador_servico_pro				:= r_proc_exec_dad_gui_w.ft_multiplicador_servico_pro;
						vet_tab_guia_sadt_proc_w[igsp].id_pacote_pro						:= r_proc_exec_dad_gui_w.id_pacote_pro;
						vet_tab_guia_sadt_proc_w[igsp].cd_porte_anestesico_pro					:= r_proc_exec_dad_gui_w.cd_porte_anestesico_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/DADOSOPME

						for w_dados_opme_sadt_w in c_dados_opme_sadt( r_proc_exec_dad_gui_w.dados_opme_pro) loop
							vet_tab_guia_sadt_proc_w[igsp].cd_cnpj_for_dad_opme					:= w_dados_opme_sadt_w.cd_cnpj_for_dad_opme;
							vet_tab_guia_sadt_proc_w[igsp].nr_registro_anvisa_dad_opme				:= w_dados_opme_sadt_w.nr_registro_anvisa_dad_opme;
							vet_tab_guia_sadt_proc_w[igsp].cd_referenci_mat_fab_dad_opme				:= w_dados_opme_sadt_w.cd_referenci_mat_fab_dad_opme;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/PAGOPRESTADOR

						for r_pago_prestador_sadt_w in c_pago_prestador_sadt( r_proc_exec_dad_gui_w.pago_prestador_pro) loop
							vet_tab_guia_sadt_proc_w[igsp].dt_pago_prestador_pag_pre				:= r_pago_prestador_sadt_w.dt_pago_prestador_pag_pre;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL

						for r_equipe_profissional_sadt_w in c_equipe_profissional_sadt( r_proc_exec_dad_gui_w.equipe_profissional_pro) loop
							
							vet_tab_guia_sadt_proc_w[igsp].tp_participacao_equ_pro					:= r_equipe_profissional_sadt_w.tp_participacao_equ_pro;
							
							-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL/PRESTADOR

							for r_prestador_equ_pre_w in c_prestador_equ_pre( r_equipe_profissional_sadt_w.prestador_equ_pro) loop
								vet_tab_guia_sadt_proc_w[igsp].cd_uni_prest_pro_equ_pro					:= r_prestador_equ_pre_w.cd_uni_prest_pro_equ_pro;
								vet_tab_guia_sadt_proc_w[igsp].cd_prest_pro_equ_pro					:= r_prestador_equ_pre_w.cd_prest_pro_equ_pro;
							end loop;
							
							vet_tab_guia_sadt_proc_w[igsp].nm_profissional_equ_pro					:= r_equipe_profissional_sadt_w.nm_profissional_equ_pro;
							vet_tab_guia_sadt_proc_w[igsp].cd_cpf_equ_pro						:= r_equipe_profissional_sadt_w.cd_cpf_equ_pro;
							
							-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL/DADOSCONSELHO

							for r_dados_conselho_equ_pro_w in c_dados_conselho_equ_pro( r_equipe_profissional_sadt_w.dados_conselho_equ_pro ) loop
								vet_tab_guia_sadt_proc_w[igsp].sg_conselho_dad_con_equ_pro				:= r_dados_conselho_equ_pro_w.sg_conselho_dad_con_equ_pro;
							        vet_tab_guia_sadt_proc_w[igsp].nr_conselho_dad_con_equ_pro				:= r_dados_conselho_equ_pro_w.nr_conselho_dad_con_equ_pro;
							        vet_tab_guia_sadt_proc_w[igsp].uf_dad_con_equ_pro					:= r_dados_conselho_equ_pro_w.uf_dad_con_equ_pro;
							end loop;
							
							vet_tab_guia_sadt_proc_w[igsp].cbo_equ_pro						:= r_equipe_profissional_sadt_w.cbo_equ_pro;
						end loop;
						
						vet_tab_guia_sadt_proc_w[igsp].cd_ato_proc						:= r_proc_exec_dad_gui_w.cd_ato_proc;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/DADOSAUTORIZACAO

						for r_dados_autorizacao_sadt_w in c_dados_autorizacao_sadt( r_proc_exec_dad_gui_w.dados_autorizacao_pro) loop
							vet_tab_guia_sadt_proc_w[igsp].dt_solicitacao_dad_aut					:= r_dados_autorizacao_sadt_w.dt_solicitacao_dad_aut;
							vet_tab_guia_sadt_proc_w[igsp].dt_autorizacao_dad_aut					:= r_dados_autorizacao_sadt_w.dt_autorizacao_dad_aut;
						end loop;
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASADT/DADOSGUIA/COMPLEMENTO

					for r_compleme_dad_gui_com_w in c_compleme_dad_gui_com( r_dados_guia_dad_gui_w.compleme_dad_gui_com) loop
					
						-- INCREMENTO COMPLEMENTO

						igscp	:= vet_tab_guia_sadt_comp_w.count + 1;
					
						vet_tab_guia_sadt_comp_w[igscp].id_complemento						:= igs;
						vet_tab_guia_sadt_comp_w[igscp].tp_reg_cpl_dad_gui_com					:= r_compleme_dad_gui_com_w.tp_reg_cpl_dad_gui_com;
						vet_tab_guia_sadt_comp_w[igscp].nm_desc_compleme_dad_gui_com				:= r_compleme_dad_gui_com_w.nm_desc_compleme_dad_gui_com;
					end loop;
					
					vet_tab_guia_sadt_w[igs].id_guia_principal_dad_gui					:= r_dados_guia_dad_gui_w.id_guia_principal_dad_gui;
				end loop;
			end loop;
			
			-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO

			for r_guia_internacao_w in c_guia_internacao( r_arquivo_a700_tipo_guia_w.guia_internacao ) loop
				
				-- Incremento Guia Internacao

				igi	:= vet_tab_guia_int_w.count + 1;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSBENEFICIARIO

				for r_dados_beneficiario_int_w in c_dados_beneficiario_int( r_guia_internacao_w.dados_beneficiario ) loop
					vet_tab_guia_int_w[igi].id							:= igi;
					vet_tab_guia_int_w[igi].cd_unimed_dad_ben					:= r_dados_beneficiario_int_w.cd_unimed_dad_ben;
					vet_tab_guia_int_w[igi].id_benef_dad_ben					:= r_dados_beneficiario_int_w.id_benef_dad_ben;
					vet_tab_guia_int_w[igi].nm_benef_dad_ben					:= r_dados_beneficiario_int_w.nm_benef_dad_ben;
					vet_tab_guia_int_w[igi].id_rn_dad_ben						:= r_dados_beneficiario_int_w.id_rn_dad_ben;
					vet_tab_guia_int_w[igi].tp_paciente_dad_ben					:= r_dados_beneficiario_int_w.tp_paciente_dad_ben;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSSOLICITANTE

				for r_dados_solicitante_int_w in c_dados_solicitante_int( r_guia_internacao_w.dados_solicitante ) loop
				
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSSOLICITANTE/CONTRATADOSOLICITANTE

					for r_contratado_solicitante_int_w in c_contratado_solicitante_int( r_dados_solicitante_int_w.contratado_solicitante_dad_sol ) loop
					
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSSOLICITANTE/CONTRATADOSOLICITANTE/CPF_CNPJ

						for r_cpf_cnpj_dad_sol_int_w in c_cpf_cnpj_dad_sol_int( r_contratado_solicitante_int_w.cpf_cnpj_dad_sol ) loop
							vet_tab_guia_int_w[igi].cd_cpf_dad_sol					:= r_cpf_cnpj_dad_sol_int_w.cd_cpf_dad_sol;
							vet_tab_guia_int_w[igi].cd_cnpj_dad_sol					:= r_cpf_cnpj_dad_sol_int_w.cd_cnpj_dad_sol;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSSOLICITANTE/CONTRATADOSOLICITANTE/UNIMEDPRESTADOR

						for r_unimed_prestador_int_w in c_unimed_prestador_dad_sol_int( r_contratado_solicitante_int_w.unimed_prestador_dad_sol ) loop
							vet_tab_guia_int_w[igi].cd_uni_prest_dad_sol				:= r_unimed_prestador_int_w.cd_uni_prest_dad_sol;
							vet_tab_guia_int_w[igi].cd_prest_dad_sol				:= r_unimed_prestador_int_w.cd_prest_dad_sol;
						end loop;
						
						vet_tab_guia_int_w[igi].nome_dad_sol						:= r_contratado_solicitante_int_w.nome_dad_sol;
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSSOLICITANTE/PROFISSIONAL

					for r_profissional_int_w in c_profissional_int( r_dados_solicitante_int_w.profissional_dad_sol ) loop
						vet_tab_guia_int_w[igi].nm_profissional_prof					:= r_profissional_int_w.nm_profissional_prof;
						vet_tab_guia_int_w[igi].cbo_prof						:= r_profissional_int_w.cbo_prof;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSSOLICITANTE/PROFISSIONAL/DADOSCONSELHO

						for r_dados_conselho_prof_int_w in c_dados_conselho_prof_int( r_profissional_int_w.dados_conselho_prof ) loop
							vet_tab_guia_int_w[igi].sg_conselho_dad_con_prof				:= r_dados_conselho_prof_int_w.sg_conselho_dad_con_prof;
							vet_tab_guia_int_w[igi].nr_conselho_dad_con_prof				:= r_dados_conselho_prof_int_w.nr_conselho_dad_con_prof;
							vet_tab_guia_int_w[igi].uf_dad_con_prof						:= r_dados_conselho_prof_int_w.uf_dad_con_prof;
						end loop;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSEXECUTANTE

				for r_dados_executante_int_w in c_dados_executante_int( r_guia_internacao_w.dados_executante ) loop
				
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSEXECUTANTE/UNIMEDPRESTADOR

					for r_unimed_prest_dad_exe_int_w in c_unimed_prestador_dad_exe_int( r_dados_executante_int_w.unimed_prestador_dad_exe ) loop
						vet_tab_guia_int_w[igi].cd_uni_prest_dad_exe					:= r_unimed_prest_dad_exe_int_w.cd_uni_prest_dad_exe;
						vet_tab_guia_int_w[igi].cd_prest_dad_exe					:= r_unimed_prest_dad_exe_int_w.cd_prest_dad_exe;
					end loop;
					
					vet_tab_guia_int_w[igi].nm_prest_exec_dad_exec					:= r_dados_executante_int_w.nm_prest_exec_dad_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSEXECUTANTE/CPF_CNPJ

					for r_cpf_cnpj_dad_exe_int_w in c_cpf_cnpj_dad_exe_int( r_dados_executante_int_w.cpf_cnpj_dad_exe ) loop
						vet_tab_guia_int_w[igi].cd_cpf_dad_exe						:= r_cpf_cnpj_dad_exe_int_w.cd_cpf_dad_exe;
						vet_tab_guia_int_w[igi].cd_cnpj_dad_exe						:= r_cpf_cnpj_dad_exe_int_w.cd_cnpj_dad_exe;
					end loop;
					
					vet_tab_guia_int_w[igi].cd_cnes_dad_exec					:= r_dados_executante_int_w.cd_cnes_dad_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSEXECUTANTE/PRESTADOR

					for r_prestador_dad_exe_int_w in c_prestador_dad_exe_int( r_dados_executante_int_w.prestador_dad_exe ) loop
						vet_tab_guia_int_w[igi].cd_municipio_cont_dad_exe				:= r_prestador_dad_exe_int_w.cd_municipio_cont_dad_exe;
						vet_tab_guia_int_w[igi].tp_prestador_dad_exe					:= r_prestador_dad_exe_int_w.tp_prestador_dad_exe;
						vet_tab_guia_int_w[igi].id_rec_proprio_dad_exe					:= r_prestador_dad_exe_int_w.id_rec_proprio_dad_exe;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSINTERNACAO

				for r_dados_internacao_w in c_dados_internacao( r_guia_internacao_w.dados_internacao ) loop
					vet_tab_guia_int_w[igi].tp_acomodacao_dad_int					:= r_dados_internacao_w.tp_acomodacao_dad_int;
					vet_tab_guia_int_w[igi].ft_multiplicador_amb_dad_int				:= r_dados_internacao_w.ft_multiplicador_amb_dad_int;
					vet_tab_guia_int_w[igi].tp_internacao_dad_int					:= r_dados_internacao_w.tp_internacao_dad_int;
					vet_tab_guia_int_w[igi].rg_internacao_dad_int					:= r_dados_internacao_w.rg_internacao_dad_int;
					vet_tab_guia_int_w[igi].tp_indicador_acidente_dad_int				:= r_dados_internacao_w.tp_indicador_acidente_dad_int;
					vet_tab_guia_int_w[igi].carater_atendimento_dad_int				:= r_dados_internacao_w.carater_atendimento_dad_int;
					vet_tab_guia_int_w[igi].motivo_encerramento_dad_int				:= r_dados_internacao_w.motivo_encerramento_dad_int;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSINTERNACAO/DADOOSFATURAMENTO

					for r_dados_faturamento_int_w in c_dados_faturamento_dad_int( r_dados_internacao_w.dados_faturamento_dad_int ) loop
						vet_tab_guia_int_w[igi].tp_fat_dad_int						:= r_dados_faturamento_int_w.tp_fat_dad_int;
						vet_tab_guia_int_w[igi].dt_inicio_fat_dad_int					:= to_date(r_dados_faturamento_int_w.dt_inicio_fat_dad_int, 'yyyy/mm/ddHH24:mi:ss');
						vet_tab_guia_int_w[igi].dt_fim_fat_dad_int					:= to_date(r_dados_faturamento_int_w.dt_fim_fat_dad_int, 'yyyy/mm/ddHH24:mi:ss');
						
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAINTERNACAO/DADOSINTERNACAO/DADOOSDECLARACOES

					for r_dados_declaracoes_int_w in c_dados_declaracoes_dad_int( r_dados_internacao_w.dados_declaracoes_dad_int ) loop
						vet_tab_guia_int_w[igi].qt_nasc_vivo_dad_int					:= r_dados_declaracoes_int_w.qt_nasc_vivo_dad_int;
						vet_tab_guia_int_w[igi].cd_cid_obito_dad_int					:= r_dados_declaracoes_int_w.cd_cid_obito_dad_int;
						vet_tab_guia_int_w[igi].nr_declara_obito_dad_int				:= r_dados_declaracoes_int_w.nr_declara_obito_dad_int;
						vet_tab_guia_int_w[igi].ie_int_rec_nascido_dad_int				:= r_dados_declaracoes_int_w.ie_int_rec_nascido_dad_int;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA

				for r_dados_guia_int_w in c_dados_guia_int( r_guia_internacao_w.dados_guia ) loop
					vet_tab_guia_int_w[igi].nr_ver_tiss_dad_gui					:= r_dados_guia_int_w.nr_ver_tiss_dad_gui;
					vet_tab_guia_int_w[igi].nr_lote_prestador_dad_gui				:= r_dados_guia_int_w.nr_lote_prestador_dad_gui;
					vet_tab_guia_int_w[igi].dt_protocolo_dad_gui					:= r_dados_guia_int_w.dt_protocolo_dad_gui;
				
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/NR_GUIAS

					for r_nr_guias_dad_gui_int_w in c_nr_guias_dad_gui_int( r_dados_guia_int_w.nr_guias_dad_gui ) loop
						vet_tab_guia_int_w[igi].nr_guia_tiss_prest_dad_gui				:= r_nr_guias_dad_gui_int_w.nr_guia_tiss_prest_dad_gui;
						vet_tab_guia_int_w[igi].nr_guia_tiss_opera_dad_gui				:= r_nr_guias_dad_gui_int_w.nr_guia_tiss_opera_dad_gui;
						vet_tab_guia_int_w[igi].nr_guia_tiss_princ_dad_gui				:= r_nr_guias_dad_gui_int_w.nr_guia_tiss_princ_dad_gui;
					end loop;
					
					vet_tab_guia_int_w[igi].dt_atendimento_dad_gui					:=  r_dados_guia_int_w.dt_atendimento_dad_gui;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS

					for r_proc_exec_dad_gui_int_w in c_procediment_exec_dad_gui_int( r_dados_guia_int_w.procedimentos_exec_dad_gui ) loop
					
						-- INCREMENTO PROCEDIMENTOS

						igipe	:= vet_tab_guia_int_proc_w.count + 1;
						
						vet_tab_guia_int_proc_w[igipe].id						:= igi;
						vet_tab_guia_int_proc_w[igipe].dt_execucao_pro					:= r_proc_exec_dad_gui_int_w.dt_execucao_pro;
						vet_tab_guia_int_proc_w[igipe].hr_inicial_pro					:= r_proc_exec_dad_gui_int_w.hr_inicial_pro;
						vet_tab_guia_int_proc_w[igipe].hr_final_pro					:= r_proc_exec_dad_gui_int_w.hr_final_pro;
					
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/PROCEDIMENTOS

						for r_procedimentos_int_w in c_procedimentos_int( r_proc_exec_dad_gui_int_w.procedimentos_pro ) loop
							vet_tab_guia_int_proc_w[igipe].seq_item_pro					:= r_procedimentos_int_w.seq_item_pro;
							vet_tab_guia_int_proc_w[igipe].tp_tabela_pro					:= r_procedimentos_int_w.tp_tabela_pro;
							vet_tab_guia_int_proc_w[igipe].cd_servico_pro					:= r_procedimentos_int_w.cd_servico_pro;
							vet_tab_guia_int_proc_w[igipe].qt_paga_pro					:= r_procedimentos_int_w.qt_paga_pro;
						end loop;
						
						vet_tab_guia_int_proc_w[igipe].via_acesso_pro					:= r_proc_exec_dad_gui_int_w.via_acesso_pro;
						vet_tab_guia_int_proc_w[igipe].tc_utilizada_pro					:= r_proc_exec_dad_gui_int_w.tc_utilizada_pro;
						vet_tab_guia_int_proc_w[igipe].id_acrescimo_pro					:= r_proc_exec_dad_gui_int_w.id_acrescimo_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/VALORES

						for r_valores_int_w in c_valores_int( r_proc_exec_dad_gui_int_w.valores_pro ) loop
							vet_tab_guia_int_proc_w[igipe].vl_serv_pago_val				:= r_valores_int_w.vl_serv_pago_val;
							vet_tab_guia_int_proc_w[igipe].vl_filme_pago_val				:= r_valores_int_w.vl_filme_pago_val;
							vet_tab_guia_int_proc_w[igipe].vl_co_pago_val				:= r_valores_int_w.vl_co_pago_val;
						end loop;
						
						vet_tab_guia_int_proc_w[igipe].un_medida_pro				:= r_proc_exec_dad_gui_int_w.un_medida_pro;
						vet_tab_guia_int_proc_w[igipe].ft_multiplicador_servico_pro		:= r_proc_exec_dad_gui_int_w.ft_multiplicador_servico_pro;
						vet_tab_guia_int_proc_w[igipe].id_pacote_pro				:= r_proc_exec_dad_gui_int_w.id_pacote_pro;
						vet_tab_guia_int_proc_w[igipe].cd_porte_anestesico_pro			:= r_proc_exec_dad_gui_int_w.cd_porte_anestesico_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/DADOSOPME

						for r_dados_opme_int_w in c_dados_opme_int( r_proc_exec_dad_gui_int_w.dados_opme_generico_pro) loop
							vet_tab_guia_int_proc_w[igipe].cd_cnpj_for_dad_opme			:= r_dados_opme_int_w.cd_cnpj_for_dad_opme;
							vet_tab_guia_int_proc_w[igipe].nr_registro_anvisa_dad_opme		:= r_dados_opme_int_w.nr_registro_anvisa_dad_opme;
							vet_tab_guia_int_proc_w[igipe].cd_referenci_mat_fab_dad_opme		:= r_dados_opme_int_w.cd_referenci_mat_fab_dad_opme;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/PAGOPRESTADOR

						for r_pago_prestador_int_w in c_pago_prestador_int( r_proc_exec_dad_gui_int_w.pago_prestador_pro) loop
							vet_tab_guia_int_proc_w[igipe].dt_pago_prestador_pag_pre		:= r_pago_prestador_int_w.dt_pago_prestador_pag_pre;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL

						for r_equipe_profissional_int_w in c_equipe_profissional_int( r_proc_exec_dad_gui_int_w.equipe_profissional_pro ) loop
						
							vet_tab_guia_int_proc_w[igipe].tp_participacao_equ_pro			:= r_equipe_profissional_int_w.tp_participacao_equ_pro;
							
							-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL/PRESTADOR

							for r_prestador_equ_pre_int_w in c_prestador_equ_pre_int( r_equipe_profissional_int_w.prestador_equ_pro ) loop
								vet_tab_guia_int_proc_w[igipe].cd_uni_prest_pro_equ_pro			:= r_prestador_equ_pre_int_w.cd_uni_prest_pro_equ_pro;
								vet_tab_guia_int_proc_w[igipe].cd_prest_pro_equ_pro			:= r_prestador_equ_pre_int_w.cd_prest_pro_equ_pro;
							end loop;
							
							vet_tab_guia_int_proc_w[igipe].nm_profissional_equ_pro			:= r_equipe_profissional_int_w.nm_profissional_equ_pro;
							vet_tab_guia_int_proc_w[igipe].cd_cpf_equ_pro				:= r_equipe_profissional_int_w.cd_cpf_equ_pro;
							
							-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL/DADOSCONSELHO

							for r_dados_conselho_equ_pro_int_w in c_dados_conselho_equ_pro_int( r_equipe_profissional_int_w.dados_conselho_equ_pro ) loop
								vet_tab_guia_int_proc_w[igipe].sg_conselho_dad_con_equ_pro		:= r_dados_conselho_equ_pro_int_w.sg_conselho_dad_con_equ_pro;
								vet_tab_guia_int_proc_w[igipe].nr_conselho_dad_con_equ_pro		:= r_dados_conselho_equ_pro_int_w.nr_conselho_dad_con_equ_pro;
								vet_tab_guia_int_proc_w[igipe].uf_dad_con_equ_pro			:= r_dados_conselho_equ_pro_int_w.uf_dad_con_equ_pro;
							end loop;
							
							vet_tab_guia_int_proc_w[igipe].cbo_equ_pro				:= r_equipe_profissional_int_w.cbo_equ_pro;
						end loop;
						
						vet_tab_guia_int_proc_w[igipe].cd_ato_proc				:= r_proc_exec_dad_gui_int_w.cd_ato_proc;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/DADOSAUTORIZACAO

						for r_dados_autorizacao_int_w in c_dados_autorizacao_int( r_proc_exec_dad_gui_int_w.dados_autorizacao_pro ) loop
							vet_tab_guia_int_proc_w[igipe].dt_solicitacao_dad_aut			:= r_dados_autorizacao_int_w.dt_solicitacao_dad_aut;
							vet_tab_guia_int_proc_w[igipe].dt_autorizacao_dad_aut			:= r_dados_autorizacao_int_w.dt_autorizacao_dad_aut;
						end loop;
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIASINTERNACAO/DADOSGUIA/COMPLEMENTO

					for r_compleme_dad_gui_com_int_w in c_compleme_dad_gui_com_int( r_dados_guia_int_w.compleme_dad_gui_com ) loop
					
						-- INCREMENTO COMPLEMENTO

						igicp	:= vet_tab_guia_int_comp_w.count + 1;
						
						vet_tab_guia_int_comp_w[igicp].id_complemento				:= igi;
						vet_tab_guia_int_comp_w[igicp].tp_reg_cpl_dad_gui_com			:= r_compleme_dad_gui_com_int_w.tp_reg_cpl_dad_gui_com;
						vet_tab_guia_int_comp_w[igicp].nm_desc_compleme_dad_gui_com		:= r_compleme_dad_gui_com_int_w.nm_desc_compleme_dad_gui_com;
					end loop;
				end loop;
			end loop;
			
			-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO

			for r_guia_honorario_w in c_guia_honorario( r_arquivo_a700_tipo_guia_w.guia_honorarios ) loop
				
				-- INCREMENTO HONORARIO

				igh	:= vet_tab_guia_honorario_w.count + 1;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSBENEFICIARIO

				for r_dados_beneficiario_hon_w in c_dados_beneficiario_hon( r_guia_honorario_w.dados_beneficiario ) loop
					vet_tab_guia_honorario_w[igh].id					:= igh;
					vet_tab_guia_honorario_w[igh].cd_unimed_dad_ben				:= r_dados_beneficiario_hon_w.cd_unimed_dad_ben;
					vet_tab_guia_honorario_w[igh].id_benef_dad_ben				:= r_dados_beneficiario_hon_w.id_benef_dad_ben;
					vet_tab_guia_honorario_w[igh].nm_benef_dad_ben				:= r_dados_beneficiario_hon_w.nm_benef_dad_ben;
					vet_tab_guia_honorario_w[igh].id_rn_dad_ben				:= r_dados_beneficiario_hon_w.id_rn_dad_ben;
					vet_tab_guia_honorario_w[igh].tp_paciente_dad_ben			:= r_dados_beneficiario_hon_w.tp_paciente_dad_ben;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSHOSPITAL

				for r_dados_hospital_hon_w in c_dados_hospital_hon( r_guia_honorario_w.dados_hospital ) loop
					vet_tab_guia_honorario_w[igh].cd_uni_hosp_dad_hosp			:= r_dados_hospital_hon_w.cd_uni_hosp_dad_hosp;
					vet_tab_guia_honorario_w[igh].cd_hosp_dad_hosp				:= r_dados_hospital_hon_w.cd_hosp_dad_hosp;
					vet_tab_guia_honorario_w[igh].cnpj_hosp_dad_hosp			:= r_dados_hospital_hon_w.cnpj_hosp_dad_hosp;
					vet_tab_guia_honorario_w[igh].nm_hosp_dad_hosp				:= r_dados_hospital_hon_w.nm_hosp_dad_hosp;
					vet_tab_guia_honorario_w[igh].cd_cnes_hosp_dad_hosp			:= r_dados_hospital_hon_w.cd_cnes_hosp_dad_hosp;	
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSEXECUTANTE

				for r_dados_executante_hon_w in c_dados_executante_hon( r_guia_honorario_w.dados_executante ) loop
				
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSEXECUTANTE/UNIMEDPRESTADOR

					for r_unimed_prest_dad_exe_hon_w in c_unimed_prestador_dad_exe_hon( r_dados_executante_hon_w.unimed_prestador_dad_exe ) loop
						vet_tab_guia_honorario_w[igh].cd_uni_prest_dad_exe			:= r_unimed_prest_dad_exe_hon_w.cd_uni_prest_dad_exe;
						vet_tab_guia_honorario_w[igh].cd_prest_dad_exe				:= r_unimed_prest_dad_exe_hon_w.cd_prest_dad_exe;
					end loop;
					
					vet_tab_guia_honorario_w[igh].nm_prest_exec_dad_exec			:= r_dados_executante_hon_w.nm_prest_exec_dad_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSEXECUTANTE/CPF_CNPJ

					for r_cpf_cnpj_dad_exe_hon_w in c_cpf_cnpj_dad_exe_hon( r_dados_executante_hon_w.cpf_cnpj_dad_exe ) loop
						vet_tab_guia_honorario_w[igh].cd_cpf_dad_exe				:= r_cpf_cnpj_dad_exe_hon_w.cd_cpf_dad_exe;
						vet_tab_guia_honorario_w[igh].cd_cnpj_dad_exe				:= r_cpf_cnpj_dad_exe_hon_w.cd_cnpj_dad_exe;
					end loop;
					
					vet_tab_guia_honorario_w[igh].cd_cnes_dad_exec				:= r_dados_executante_hon_w.cd_cnes_dad_exec;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSEXECUTANTE/PRESTADOR

					for r_prestador_dad_exe_hon_w in c_prestador_dad_exe_hon( r_dados_executante_hon_w.prestador_dad_exe ) loop
						vet_tab_guia_honorario_w[igh].cd_municipio_cont_dad_exe			:= r_prestador_dad_exe_hon_w.cd_municipio_cont_dad_exe;
						vet_tab_guia_honorario_w[igh].tp_prestador_dad_exe			:= r_prestador_dad_exe_hon_w.tp_prestador_dad_exe;
						vet_tab_guia_honorario_w[igh].id_rec_proprio_dad_exe			:= r_prestador_dad_exe_hon_w.id_rec_proprio_dad_exe;
					end loop;
				end loop;
				
				-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA

				for r_dados_guia_hon_w in c_dados_guia_hon( r_guia_honorario_w.dados_guia ) loop
					vet_tab_guia_honorario_w[igh].nr_ver_tiss_dad_gui					:= r_dados_guia_hon_w.nr_ver_tiss_dad_gui;
					vet_tab_guia_honorario_w[igh].nr_lote_prestador_dad_gui				:= r_dados_guia_hon_w.nr_lote_prestador_dad_gui;
					vet_tab_guia_honorario_w[igh].dt_protocolo_dad_gui					:= r_dados_guia_hon_w.dt_protocolo_dad_gui;
				
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/NR_GUIAS

					for r_nr_guias_dad_gui_hon_w in c_nr_guias_dad_gui_hon( r_dados_guia_hon_w.nr_guias_dad_gui ) loop
						vet_tab_guia_honorario_w[igh].nr_guia_tiss_prest_dad_gui				:= r_nr_guias_dad_gui_hon_w.nr_guia_tiss_prest_dad_gui;
						vet_tab_guia_honorario_w[igh].nr_guia_tiss_opera_dad_gui				:= r_nr_guias_dad_gui_hon_w.nr_guia_tiss_opera_dad_gui;
						vet_tab_guia_honorario_w[igh].nr_guia_tiss_princ_dad_gui				:= r_nr_guias_dad_gui_hon_w.nr_guia_tiss_princ_dad_gui;
					end loop;
					
					vet_tab_guia_honorario_w[igh].dt_atendimento_dad_gui					:=  r_dados_guia_hon_w.dt_atendimento_dad_gui;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS

					for r_proc_exec_dad_gui_hon_w in c_procediment_exec_dad_gui_hon( r_dados_guia_hon_w.procedimentos_exec_dad_gui ) loop
					
						-- INCREMENTO PROCEDIMENTOS

						ighp	:= vet_tab_proc_guia_hon_w.count + 1;
						
						vet_tab_proc_guia_hon_w[ighp].id						:= igh;
						vet_tab_proc_guia_hon_w[ighp].dt_execucao_pro					:= r_proc_exec_dad_gui_hon_w.dt_execucao_pro;
						vet_tab_proc_guia_hon_w[ighp].hr_inicial_pro					:= r_proc_exec_dad_gui_hon_w.hr_inicial_pro;
						vet_tab_proc_guia_hon_w[ighp].hr_final_pro					:= r_proc_exec_dad_gui_hon_w.hr_final_pro;
					
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/PROCEDIMENTOS

						for r_procedimentos_hon_w in c_procedimentos_hon( r_proc_exec_dad_gui_hon_w.procedimentos_pro ) loop
							vet_tab_proc_guia_hon_w[ighp].seq_item_pro					:= r_procedimentos_hon_w.seq_item_pro;
							vet_tab_proc_guia_hon_w[ighp].tp_tabela_pro					:= r_procedimentos_hon_w.tp_tabela_pro;
							vet_tab_proc_guia_hon_w[ighp].cd_servico_pro					:= r_procedimentos_hon_w.cd_servico_pro;
							vet_tab_proc_guia_hon_w[ighp].qt_paga_pro					:= r_procedimentos_hon_w.qt_paga_pro;
						end loop;
						
						vet_tab_proc_guia_hon_w[ighp].via_acesso_pro					:= r_proc_exec_dad_gui_hon_w.via_acesso_pro;
						vet_tab_proc_guia_hon_w[ighp].tc_utilizada_pro					:= r_proc_exec_dad_gui_hon_w.tc_utilizada_pro;
						vet_tab_proc_guia_hon_w[ighp].id_acrescimo_pro					:= r_proc_exec_dad_gui_hon_w.id_acrescimo_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/VALORES

						for r_valores_hon_w in c_valores_hon( r_proc_exec_dad_gui_hon_w.valores_pro ) loop
							vet_tab_proc_guia_hon_w[ighp].vl_serv_pago_val				:= r_valores_hon_w.vl_serv_pago_val;
							vet_tab_proc_guia_hon_w[ighp].vl_filme_pago_val				:= r_valores_hon_w.vl_filme_pago_val;
							vet_tab_proc_guia_hon_w[ighp].vl_co_pago_val				:= r_valores_hon_w.vl_co_pago_val;
						end loop;
						
						vet_tab_proc_guia_hon_w[ighp].un_medida_pro				:= r_proc_exec_dad_gui_hon_w.un_medida_pro;
						vet_tab_proc_guia_hon_w[ighp].ft_multiplicador_servico_pro		:= r_proc_exec_dad_gui_hon_w.ft_multiplicador_servico_pro;
						vet_tab_proc_guia_hon_w[ighp].id_pacote_pro				:= r_proc_exec_dad_gui_hon_w.id_pacote_pro;
						vet_tab_proc_guia_hon_w[ighp].cd_porte_anestesico_pro			:= r_proc_exec_dad_gui_hon_w.cd_porte_anestesico_pro;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/DADOSOPME

						for r_dados_opme_hon_w in c_dados_opme_hon( r_proc_exec_dad_gui_hon_w.dados_opme_generico_pro) loop
							vet_tab_proc_guia_hon_w[ighp].cd_cnpj_for_dad_opme			:= r_dados_opme_hon_w.cd_cnpj_for_dad_opme;
							vet_tab_proc_guia_hon_w[ighp].nr_registro_anvisa_dad_opme		:= r_dados_opme_hon_w.nr_registro_anvisa_dad_opme;
							vet_tab_proc_guia_hon_w[ighp].cd_referenci_mat_fab_dad_opme		:= r_dados_opme_hon_w.cd_referenci_mat_fab_dad_opme;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/PAGOPRESTADOR

						for r_pago_prestador_hon_w in c_pago_prestador_hon( r_proc_exec_dad_gui_hon_w.pago_prestador_pro) loop
							vet_tab_proc_guia_hon_w[ighp].dt_pago_prestador_pag_pre		:= r_pago_prestador_hon_w.dt_pago_prestador_pag_pre;
						end loop;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL

						for r_equipe_profissional_hon_w in c_equipe_profissional_hon( r_proc_exec_dad_gui_hon_w.equipe_profissional_pro ) loop
						
							vet_tab_proc_guia_hon_w[ighp].tp_participacao_equ_pro			:= r_equipe_profissional_hon_w.tp_participacao_equ_pro;
							
							-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL/PRESTADOR

							for r_prestador_equ_pre_hon_w in c_prestador_equ_pre_hon( r_equipe_profissional_hon_w.prestador_equ_pro ) loop
								vet_tab_proc_guia_hon_w[ighp].cd_uni_prest_pro_equ_pro			:= r_prestador_equ_pre_hon_w.cd_uni_prest_pro_equ_pro;
								vet_tab_proc_guia_hon_w[ighp].cd_prest_pro_equ_pro			:= r_prestador_equ_pre_hon_w.cd_prest_pro_equ_pro;
							end loop;
							
							vet_tab_proc_guia_hon_w[ighp].nm_profissional_equ_pro			:= r_equipe_profissional_hon_w.nm_profissional_equ_pro;
							vet_tab_proc_guia_hon_w[ighp].cd_cpf_equ_pro				:= r_equipe_profissional_hon_w.cd_cpf_equ_pro;
							
							-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/EQUIPEPROFISSIONAL/DADOSCONSELHO

							for r_dados_conselho_equ_pro_hon_w in c_dados_conselho_equ_pro_hon( r_equipe_profissional_hon_w.dados_conselho_equ_pro ) loop
								vet_tab_proc_guia_hon_w[ighp].sg_conselho_dad_con_equ_pro		:= r_dados_conselho_equ_pro_hon_w.sg_conselho_dad_con_equ_pro;
								vet_tab_proc_guia_hon_w[ighp].nr_conselho_dad_con_equ_pro		:= r_dados_conselho_equ_pro_hon_w.nr_conselho_dad_con_equ_pro;
								vet_tab_proc_guia_hon_w[ighp].uf_dad_con_equ_pro			:= r_dados_conselho_equ_pro_hon_w.uf_dad_con_equ_pro;
							end loop;
							
							vet_tab_proc_guia_hon_w[ighp].cbo_equ_pro				:= r_equipe_profissional_hon_w.cbo_equ_pro;
						end loop;
						
						vet_tab_proc_guia_hon_w[ighp].cd_ato_proc				:= r_proc_exec_dad_gui_hon_w.cd_ato_proc;
						
						-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/PROCEDIMENTOSEXECUTADOS/DADOSAUTORIZACAO

						for r_dados_autorizacao_hon_w in c_dados_autorizacao_hon( r_proc_exec_dad_gui_hon_w.dados_autorizacao_pro ) loop
							vet_tab_proc_guia_hon_w[ighp].dt_solicitacao_dad_aut			:= r_dados_autorizacao_hon_w.dt_solicitacao_dad_aut;
							vet_tab_proc_guia_hon_w[ighp].dt_autorizacao_dad_aut			:= r_dados_autorizacao_hon_w.dt_autorizacao_dad_aut;
						end loop;
					end loop;
					
					-- /PTUA700/ARQUIVOA700/TIPOGUIA/GUIAHONORARIO/DADOSGUIA/COMPLEMENTO

					for r_compleme_dad_gui_com_hon_w in c_compleme_dad_gui_com_hon( r_dados_guia_hon_w.compleme_dad_gui_com ) loop
					
						-- INCREMENTO COMPLEMENTO

						ighc	:= vet_tab_compl_guia_hon_w.count + 1;
						
						vet_tab_compl_guia_hon_w[ighc].id_complemento				:= igh;
						vet_tab_compl_guia_hon_w[ighc].tp_reg_cpl_dad_gui_com			:= r_compleme_dad_gui_com_hon_w.tp_reg_cpl_dad_gui_com;
						vet_tab_compl_guia_hon_w[ighc].nm_desc_compleme_dad_gui_com		:= r_compleme_dad_gui_com_hon_w.nm_desc_compleme_dad_gui_com;
					end loop;
				end loop;
			end loop;
		end loop;
	end loop;
end loop;

for i in 1..vet_tab_cabecalho_w.count loop

	begin
	select 	coalesce(max(ie_material_intercambio),'S'),
		coalesce(max(ie_origem_proc_valido),'N'),
		coalesce(max(ie_priorizar_conv_pct_int), 'N')
	into STRICT	ie_material_intercambio_w,
		ie_origem_proc_valido_w,
		ie_priorizar_conv_pct_int_w
	from 	pls_parametros
	where 	cd_estabelecimento = cd_estabelecimento_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(182468); -- O parametro, Material intercambio, deve ser cadastrado. Favor cadastrar o mesmo, em OPS - Gestao de Operadoras ->  Parametros da OPS -> Intercambio.
	end;

	select	max(sid),
		max(serial#)
	into STRICT	nm_id_sid_w,
		nm_id_serial_w
	from	gv$session
	where 	audsid = userenv('SESSIONID');

	-- Obter nome do arquivo

	select	nm_arquivo
	into STRICT	nm_arquivo_w
	from	ptu_aviso_arq_xml
	where	nr_sequencia = nr_seq_arq_xml_p;
	
	-- CONVERTER DATA

	vet_tab_cabecalho_w[i].dt_geracao_cab				:= ptu_a700_imp_pck.converte_data(vet_tab_cabecalho_w[i].dt_geracao_cab);
	vet_tab_cabecalho_w[i].dt_inicio_pagto_cab			:= ptu_a700_imp_pck.converte_data(vet_tab_cabecalho_w[i].dt_inicio_pagto_cab);
	vet_tab_cabecalho_w[i].dt_fim_pagto_cab				:= ptu_a700_imp_pck.converte_data(vet_tab_cabecalho_w[i].dt_fim_pagto_cab);
	
	-- INSERT PTU_SERVICO_PRE_PAGTO

	insert into ptu_servico_pre_pagto(	nr_sequencia,					cd_estabelecimento,				cd_unimed_destino,
						cd_unimed_origem,				ds_serial_processo,				ds_sid_processo,
						dt_atualizacao,					dt_atualizacao_nrec,				dt_fim_pagto,
						dt_geracao,					dt_importacao_arquivo,				dt_inicio_pagto,
						ie_envio_recebimento,				ie_status,					nm_arquivo,
						nm_usuario,					nm_usuario_importacao,				nm_usuario_nrec,
						nr_seq_geracao,					nr_versao_transacao,				ds_hash)
		
				values (	nextval('ptu_servico_pre_pagto_seq'),		'1',						vet_tab_cabecalho_w[i].cd_uni_destino_cab,
						vet_tab_cabecalho_w[i].cd_uni_origem_cab,	nm_id_serial_w,					nm_id_sid_w,
						clock_timestamp(),					clock_timestamp(),					vet_tab_cabecalho_w[i].dt_fim_pagto_cab,
						vet_tab_cabecalho_w[i].dt_geracao_cab,		clock_timestamp(),					vet_tab_cabecalho_w[i].dt_inicio_pagto_cab,
						'R',						'R',						nm_arquivo_w,
						nm_usuario_p,					nm_usuario_p,					nm_usuario_p,
						vet_tab_cabecalho_w[i].nr_seq_geracao_cab,	vet_tab_cabecalho_w[i].nr_vertra_ptu_cab,	vet_tab_cabecalho_w[i].hash) returning nr_sequencia into nr_seq_serv_pre_pgto_w;

	for i in 1..vet_tab_guia_consulta_w.count loop
	
		-- CONVERTER DATA

		vet_tab_guia_consulta_w[i].dt_atendimento_dad_gui	:= ptu_a700_imp_pck.converte_data(vet_tab_guia_consulta_w[i].dt_atendimento_dad_gui);
		vet_tab_guia_consulta_w[i].dt_protocolo_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_consulta_w[i].dt_protocolo_dad_gui);
		
		nr_cpf_cnpj_w		:= coalesce(vet_tab_guia_consulta_w[i].cd_cpf_cont_exec, vet_tab_guia_consulta_w[i].cd_cnpj_cont_exec);
		
		insert into ptu_nota_cobranca(	nr_sequencia,							dt_atualizacao,							dt_atualizacao_nrec,
						nm_usuario,							nm_usuario_nrec,						cd_cid,
						cd_cid_obito,							cd_cnes_cont_exec,						cd_excecao,
						cd_munic_cont_exec,						cd_prestador_exec,						cd_prestador_req,
						cd_unimed,							cd_unimed_prest_exec,						cd_unimed_prest_req,
						cd_usuario_plano,						dt_alta,							dt_atendimento,
						dt_conferencia_doc,						dt_conhecimento,						dt_fim_consist_conta,
						dt_fim_geracao_conta,						dt_inicio_consist_conta,					dt_inicio_geracao_conta,
						dt_internacao,							dt_protocolo,							dt_ultima_autoriz,
						id_aviso,							id_continuado,							id_liminar,
						id_nota_principal,						id_rec_proprio,							id_rn,
						ie_carater_atendimento,						ie_consistente,							ie_doc_fisico_conf,
						ie_envia_conta,							ie_necessita_doc_fisico,					ie_paciente,
						ie_pcmso,							ie_tipo_atendimento,						ie_tipo_saida_spdat,
						motivo_encerram,						nm_beneficiario,						nm_prest_exec,
						nm_prest_req,							nm_usuario_doc_fisico,						nr_cbo_req,
						nr_cnpj_cpf,							nr_cnpj_cpf_req,						nr_cons_prof_req,
						nr_fatura_glosada,						nr_guia_principal,						nr_guia_principal_numerico,
						nr_guia_tiss_operadora,						nr_guia_tiss_prestador,						nr_guia_tiss_principal,
						nr_linha,							nr_lote,							nr_lote_glosado,
						nr_lote_prest,							nr_ndr_glosada,							nr_nota,
						nr_nota_glosada,						nr_nota_numerico,						nr_seq_aviso_conta,
						nr_seq_conta,							nr_seq_fatura,							nr_seq_prest_inter,
						nr_seq_serv_pre_pagto,						nr_ver_tiss,							pr_taxa,
						sg_cons_prof_req,						sg_uf_cons_req,							tipo_rede_min,
						tp_consulta,							tp_ind_acidente,						tp_nota,
						tp_pessoa,							tp_prest_exec)
				values (	nextval('ptu_nota_cobranca_seq'),					clock_timestamp(),							clock_timestamp(),
						nm_usuario_p,							nm_usuario_p,							null,
						null,								vet_tab_guia_consulta_w[i].CNES_cont_exec,			null,
						vet_tab_guia_consulta_w[i].cd_municipio_cont_exe,		vet_tab_guia_consulta_w[i].cd_prest_cont_exec,			null,
						vet_tab_guia_consulta_w[i].cd_unimed_dad_ben,			vet_tab_guia_consulta_w[i].cd_uni_prest_cont_exec,		null,
						vet_tab_guia_consulta_w[i].id_benef_dad_ben,			null,								vet_tab_guia_consulta_w[i].dt_atendimento_dad_gui,
						null,								null,								null,
						null,								null,								null,
						null,								vet_tab_guia_consulta_w[i].dt_protocolo_dad_gui,		null,
						null,								null,								null,
						null,								vet_tab_guia_consulta_w[i].id_rec_proprio_cont_exe,		vet_tab_guia_consulta_w[i].id_rn_dad_ben,
						null,								null,								null,
						null,								null,								vet_tab_guia_consulta_w[i].tp_paciente_dad_ben,
						null,								null,								null,
						null,								vet_tab_guia_consulta_w[i].nm_benef_dad_ben,			vet_tab_guia_consulta_w[i].nm_prest_cont_exec,
						null,								null,								null,
						nr_cpf_cnpj_w,							null,								null,
						null,								null,								null,
						vet_tab_guia_consulta_w[i].nr_guia_tiss_operadora_dad_gui,	vet_tab_guia_consulta_w[i].nr_guia_tiss_prestador_dad_gui,	null,
						null,								null,								null,
						vet_tab_guia_consulta_w[i].nr_lote_prestador_dad_gui,		null,								null,
						null,								null,								null,
						null,								null,								null,
						nr_seq_serv_pre_pgto_w,						vet_tab_guia_consulta_w[i].nr_ver_tiss_dad_gui,			null,
						null,								null,								null,
						vet_tab_guia_consulta_w[i].tp_consulta_dad_gui,			vet_tab_guia_consulta_w[i].tp_ind_acidente_dad_gui,		1,
						null,								vet_tab_guia_consulta_w[i].tp_prestador_cont_exe) returning nr_sequencia into nr_seq_nota_cobr_w;
						
		for j in 1..vet_tab_guia_cons_proc_exec_w.count loop
		
			if (vet_tab_guia_cons_proc_exec_w[j].id = vet_tab_guia_consulta_w[i].id) then
			
				-- CONVERTER DATA

				vet_tab_guia_cons_proc_exec_w[j].dt_autorizacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_cons_proc_exec_w[j].dt_autorizacao_dad_aut);
				vet_tab_guia_cons_proc_exec_w[j].dt_pago_prestador_pag_pre	:= ptu_a700_imp_pck.converte_data(vet_tab_guia_cons_proc_exec_w[j].dt_pago_prestador_pag_pre);
				if (vet_tab_guia_cons_proc_exec_w[j].tp_tabela_proc = 4) then
					ie_pacote_intercambio_w := 'S';
				else
					ie_pacote_intercambio_w := 'N';
				end if;				
				
				if (vet_tab_guia_cons_proc_exec_w[j].tp_tabela_proc in (2,3,5,6)) then
					if (coalesce(ie_material_intercambio_w, 'S') = 'S') then
						nr_seq_material_w	:= vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
						nr_seq_material_w := null;

						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc, 'O', 'N', vet_tab_guia_consulta_w[i].nr_ver_tiss_dad_gui);

						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
						nr_seq_material_w := null;
						
						pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc, vet_tab_guia_consulta_w[i].nr_ver_tiss_dad_gui);
						
						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;
					end if;

					select	count(1)
					into STRICT	qt_regra_w
					from	pls_conversao_proc
					where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
					and	ie_situacao = 'A'
					and	ie_ptu = 'S';

					if (qt_regra_w > 0) then
						cd_mat_number_inter_w := vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc;
					
						pls_obter_proced_conversao(	null, null, null,
										cd_estabelecimento_p, 4, null,
										3, 'R', null,
										null, null, cd_mat_number_inter_w,
										null, cd_procedimento_w, ie_origem_proced_w,
										nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
										null, null, null,
										'N', ie_priorizar_conv_pct_int_w);
					end if;

					if	((coalesce(nr_seq_material_w,0)) <> 0) then
						select	count(nr_sequencia)
						into STRICT	qt_material_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;
					end if;

					if (coalesce(qt_material_w,0) = 0) then
						ptu_obter_material_conversao(	vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc,
										vet_tab_guia_cons_proc_exec_w[j].tp_tabela_proc,
										null, 
										'R', 
										'7', 
										null, 
										null,
										nr_seq_material_w,
										cd_servico_mat_w,
										ie_somente_codigo_w);
					end if;

					if (coalesce(nr_seq_material_w,0) = 0) then
						nr_seq_material_w	:= null;
					end if;

					-- A900

					if (coalesce(nr_seq_material_w::text, '') = '') then
						cd_mat_number_inter_w := vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc;
						
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', vet_tab_guia_consulta_w[i].nr_ver_tiss_dad_gui);
					end if;

					-- FEDERACAO

					if (coalesce(nr_seq_material_w::text, '') = '') then
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', vet_tab_guia_consulta_w[i].nr_ver_tiss_dad_gui);
					end if;	

					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
						nr_seq_material_w := null;
					end if;

				else
					--A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.

					pls_obter_proced_conversao(	vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc, null, null,
									cd_estabelecimento_p, 4, null,
									3, 'R', null,
									null, null, null,
									null, cd_procedimento_w, ie_origem_proced_w,
									nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
									null, null, null,
									ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w);

					-- Obter a origem padrao para os itens conforme a regra.

					ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', null, null);

					if (coalesce(ie_origem_proced_w::text, '') = '') then
						--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.

						ie_origem_proced_w := ie_origem_proced_padrao_w;
					end if;

					--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ?ltima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padrao do sistema	

					if (ie_origem_proc_valido_w	= 'S') then
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w
						and	ie_situacao = 'A';

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	max(ie_origem_proced)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_situacao = 'A';	
							
							-- Se nao encontrar a origem em procedimentos ativos, busca em procedimentos que nao estiverem ativos.

							if (coalesce(ie_origem_proced_w::text, '') = '') then
								select	max(ie_origem_proced)
								into STRICT	ie_origem_proced_w
								from	procedimento
								where	cd_procedimento = cd_procedimento_w;	
							end if;
						end if;

					else
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w;
						--OS667827

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced OS 644869 Conforme solicitado foi realizado tratamento para caso nao

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	coalesce(max(ie_origem_proced),ie_origem_proced_w)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_origem_proced in (	SELECT	ie_origem_proced
											from	pls_regra_origem_proced
											where	ie_origem_proced != ie_origem_proced_w );
						end if;
					end if;

					select	count(1)
					into STRICT	qt_proc_valido_w
					from	procedimento
					where	cd_procedimento	= cd_procedimento_w
					and	ie_origem_proced = ie_origem_proced_w;
					
					-- Tem que deixar o item como NAO ENCONTRADO

					if (qt_proc_valido_w = 0) then
						cd_procedimento_w	:= null;
						ie_origem_proced_w	:= null;
					end if;
				end if;

				insert into ptu_nota_servico(	nr_sequencia,						dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,						nm_usuario_nrec,						cd_ato,
								cd_cnes_prest,						cd_especialidade,						cd_munic,
								cd_pacote,						cd_porte_anestesico,						cd_prestador,
								cd_prestador_req,					cd_procedimento,						cd_rec_prestador,
								cd_ref_material_fab,					cd_ref_material_fab_opme,					cd_servico,
								cd_unimed_autorizadora,					cd_unimed_pre_req,						cd_unimed_prestador,
								det_reg_anvisa,						ds_hora_procedimento,						ds_servico,
								ds_servico_aux,						dt_autoriz,							dt_pgto_prestador,
								dt_procedimento,					dt_solicitacao,							hr_final,
								hr_servico,						id_acres_urg_emer,						id_aviso_item,
								id_pag_forn,						ie_alto_custo,							ie_consistente,
								ie_origem_proced,					ie_pacote,							ie_rede_propria,
								ie_reembolso,						ie_tipo_data_regra,						ie_tipo_participacao,
								ie_tipo_pessoa_prestador,				ie_tipo_prestador,						ie_tipo_tabela,
								ie_via_acesso,						nm_fornecedor,							nm_prestador,
								nm_prestador_requisitante,				nm_profissional_prestador,					nr_autorizacao,
								nr_cbo_exec,						nr_cgc_cpf,							nr_cgc_cpf_req,
								nr_cnpj_fornecedor,					nr_cons_prof_prest,						nr_cons_prof_req,
								nr_guia_tiss,						nr_linha,							nr_lote,
								nr_nota,						nr_nota_fiscal_forn,						nr_nota_numerico,
								nr_reg_anvisa,						nr_seq_agrup_item_ptu,						nr_seq_aviso_material,
								nr_seq_aviso_procedimento,				nr_seq_a500,							nr_seq_composicao,
								nr_seq_conta_mat,					nr_seq_conta_proc,						nr_seq_material,
								nr_seq_nota,						nr_seq_nota_cobr,						nr_seq_pacote,
								nr_seq_pacote_agrup,					nr_seq_pacote_mat,						nr_seq_pacote_proc,
								nr_seq_proc_partic,					nr_seq_registro,						qt_procedimento,
								sg_cons_prof_prest,					sg_cons_prof_req,						sg_uf_cons_prest,
								sg_uf_cons_req,						tec_utilizada,							tipo_rede_min,
								tp_autoriz,						tx_procedimento,						unidade_medida,
								vl_adic_co,						vl_adic_filme,							vl_adic_procedimento,
								vl_custo_operacional,					vl_filme,							vl_pago_prest,
								vl_procedimento)
						values (	nextval('ptu_nota_servico_seq'),				clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,						nm_usuario_p,							vet_tab_guia_cons_proc_exec_w[j].cd_ato_proc,
								null,							null,								null,
								null,							null,								vet_tab_guia_consulta_w[i].cd_prest_prof_exec,
								null,							cd_procedimento_w,						null,
								null,							vet_tab_guia_cons_proc_exec_w[j].dt_solicitacao_dad_aut,	vet_tab_guia_cons_proc_exec_w[j].cd_servico_proc,
								null,							null,								vet_tab_guia_consulta_w[i].cd_uni_prest_cont_exec,
								null,							null,								null,
								null,							vet_tab_guia_cons_proc_exec_w[j].dt_autorizacao_dad_aut,	vet_tab_guia_cons_proc_exec_w[j].dt_pago_prestador_pag_pre,
								null,							null,								null,
								null,							null,								null,
								null,							null,								null,
								ie_origem_proced_w,					null,								null,
								null,							null,								null,
								null,							vet_tab_guia_consulta_w[i].tp_prestador_cont_exe,		vet_tab_guia_cons_proc_exec_w[j].tp_tabela_proc,
								null,							null,								vet_tab_guia_consulta_w[i].nm_prest_prof_exec,
								null,							null,								null,
								vet_tab_guia_consulta_w[i].cbo_prof_exec,		nr_cpf_cnpj_w,							null,
								null,							vet_tab_guia_consulta_w[i].nr_conselho_prof_exec,		null,
								null,							null,								null,
								null,							null,								null,
								null,							null,								null,
								null,							null,								null,
								null,							null,								nr_seq_material_w,
								null,							nr_seq_nota_cobr_w,						null,
								null,							null,								null,
								null,							null,								null,
								vet_tab_guia_consulta_w[i].sg_conselho_prof_exec,	null,								vet_tab_guia_consulta_w[i].uf_prof_exec,
								null,							null,								null,
								null,							null,								null,
								null,							null,								null,
								null,							null,								null,
								vet_tab_guia_cons_proc_exec_w[j].vl_servico_pago_proc);

				select	max(nr_seq_prest_inter),
					max(tp_pessoa),
					max(nr_cnpj_cpf),
					max(cd_cnes_cont_exec),
					max(cd_munic_cont_exec),
					max(nm_prest_exec)
				into STRICT	nr_seq_prest_inter_w,
					tp_pessoa_w,
					nr_cnpj_cpf_w,
					cd_cnes_cont_exec_w,
					cd_munic_cont_exec_w,
					nm_prestador_w
				from	ptu_nota_cobranca
				where	nr_sequencia		= nr_seq_nota_cobr_w;

				if (coalesce(nr_seq_prest_inter_w::text, '') = '') then
					if (tp_pessoa_w = 'J') then
						cd_cgc_prestador_w		:= nr_cnpj_cpf_w;
						nr_cpf_prestador_w		:= null;
					elsif (tp_pessoa_w = 'F') then
						cd_cgc_prestador_w		:= null;
						nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_w,4,11);
					end if;

					pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_w,
									cd_cnes_cont_exec_w, cd_munic_cont_exec_w, nm_usuario_p,
									null, vet_tab_guia_consulta_w[i].cbo_prof_exec, nr_seq_prest_inter_w,
									nr_seq_prestador_w);

					if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
						update	ptu_nota_cobranca
						set	nr_seq_prest_inter	= nr_seq_prest_inter_w
						where	nr_sequencia		= nr_seq_nota_cobr_w;
					end if;
				end if;
			end if;
		end loop;
		
		-- COMPLEMENTO

		for l in 1..vet_tab_guia_cons_comp_w.count loop
			-- S? IRA FAZER O INSERT NA PTU_NOTA_COMPLEMENTO SE FOR DA MESMA NOTA COBRANCA 

			if (vet_tab_guia_consulta_w[i].id = vet_tab_guia_cons_comp_w[l].id_complemento)  then

				insert into ptu_nota_complemento(nr_sequencia,				dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,				nm_usuario_nrec,						ds_complemento,
								especif_material,			ie_tipo_complemento,						nr_linha,
								nr_lote,				nr_nota,							nr_seq_nota_cobr)
						values (	nextval('ptu_nota_complemento_seq'),	clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,				nm_usuario_p,							vet_tab_guia_cons_comp_w[l].nm_complemento,
								null,					vet_tab_guia_cons_comp_w[l].tp_complemento,			null,
								null,					null,								nr_seq_nota_cobr_w);
			end if;
		end loop;
	end loop;
	
	-- GUIA SADT

	for i in 1..vet_tab_guia_sadt_w.count loop
	
		-- CONVERTER DATA

		vet_tab_guia_sadt_w[i].dt_atendimento_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_sadt_w[i].dt_atendimento_dad_gui);
		vet_tab_guia_sadt_w[i].dt_protocolo_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_sadt_w[i].dt_protocolo_dad_gui);
		
		nr_cpf_cnpj_w		:= coalesce(vet_tab_guia_sadt_w[i].cd_cpf_dad_exe, vet_tab_guia_sadt_w[i].cd_cnpj_dad_exe);
		nr_cpf_cnpj_req_w	:= coalesce(vet_tab_guia_sadt_w[i].cd_cpf_dad_sol, vet_tab_guia_sadt_w[i].cd_cnpj_dad_sol);
		
		insert into ptu_nota_cobranca(	nr_sequencia,										dt_atualizacao,							dt_atualizacao_nrec,
						nm_usuario,										nm_usuario_nrec,						cd_cid,
						cd_cid_obito,										cd_cnes_cont_exec,						cd_excecao,
						cd_munic_cont_exec,									cd_prestador_exec,						cd_prestador_req,
						cd_unimed,										cd_unimed_prest_exec,						cd_unimed_prest_req,
						cd_usuario_plano,									dt_alta,							dt_atendimento,
						dt_conferencia_doc,									dt_conhecimento,						dt_fim_consist_conta,
						dt_fim_geracao_conta,									dt_inicio_consist_conta,					dt_inicio_geracao_conta,
						dt_internacao,										dt_protocolo,							dt_ultima_autoriz,
						id_aviso,										id_continuado,							id_liminar,
						id_nota_principal,									id_rec_proprio,							id_rn,
						ie_carater_atendimento,									ie_consistente,							ie_doc_fisico_conf,
						ie_envia_conta,										ie_necessita_doc_fisico,					ie_paciente,
						ie_pcmso,										ie_tipo_atendimento,						ie_tipo_saida_spdat,
						motivo_encerram,									nm_beneficiario,						nm_prest_exec,
						nm_prest_req,										nm_usuario_doc_fisico,						nr_cbo_req,
						nr_cnpj_cpf,										nr_cnpj_cpf_req,						nr_cons_prof_req,
						nr_fatura_glosada,									nr_guia_principal,						nr_guia_principal_numerico,
						nr_guia_tiss_operadora,									nr_guia_tiss_prestador,						nr_guia_tiss_principal,
						nr_linha,										nr_lote,							nr_lote_glosado,
						nr_lote_prest,										nr_ndr_glosada,							nr_nota,
						nr_nota_glosada,									nr_nota_numerico,						nr_seq_aviso_conta,
						nr_seq_conta,										nr_seq_fatura,							nr_seq_prest_inter,
						nr_seq_serv_pre_pagto,									nr_ver_tiss,							pr_taxa,
						sg_cons_prof_req,									sg_uf_cons_req,							tipo_rede_min,
						tp_consulta,										tp_ind_acidente,						tp_nota,
						tp_pessoa,										tp_prest_exec)
				values (	nextval('ptu_nota_cobranca_seq'),								clock_timestamp(),							clock_timestamp(),
						nm_usuario_p,										nm_usuario_p,							null,
						null,											vet_tab_guia_sadt_w[i].cd_cnes_dad_exec,			null,
						vet_tab_guia_sadt_w[i].cd_municipio_cont_dad_exe,					vet_tab_guia_sadt_w[i].cd_prest_dad_exe,			vet_tab_guia_sadt_w[i].cd_prest_dad_sol,
						vet_tab_guia_sadt_w[i].cd_unimed_dad_ben,						vet_tab_guia_sadt_w[i].cd_uni_prest_dad_exe,			vet_tab_guia_sadt_w[i].cd_uni_prest_dad_sol,
						vet_tab_guia_sadt_w[i].id_benef_dad_ben,						null,								vet_tab_guia_sadt_w[i].dt_atendimento_dad_gui,
						null,											null,								null,
						null,											null,								null,
						null,											vet_tab_guia_sadt_w[i].dt_protocolo_dad_gui,			null,
						null,											null,								null,
						vet_tab_guia_sadt_w[i].id_guia_principal_dad_gui,					vet_tab_guia_sadt_w[i].id_rec_proprio_dad_exe,			vet_tab_guia_sadt_w[i].id_rn_dad_ben,
						vet_tab_guia_sadt_w[i].carater_atendimento_dad_ate,					null,								null,
						null,											null,								vet_tab_guia_sadt_w[i].tp_paciente_dad_ben,
						null,											vet_tab_guia_sadt_w[i].tp_atendimento_dad_ate,			null,
						vet_tab_guia_sadt_w[i].mv_encerramento_dad_ate,						vet_tab_guia_sadt_w[i].nm_benef_dad_ben,			vet_tab_guia_sadt_w[i].nm_prest_exec_dad_exec,
						vet_tab_guia_sadt_w[i].nome_dad_sol, 							null,								vet_tab_guia_sadt_w[i].cbo_dad_sol,
						nr_cpf_cnpj_w,										nr_cpf_cnpj_req_w,						vet_tab_guia_sadt_w[i].nr_conselho_dad_con_pro,
						null,											null,								null,
						vet_tab_guia_sadt_w[i].nr_guia_tiss_operadora_dad_gui,					vet_tab_guia_sadt_w[i].nr_guia_tiss_prestador_dad_gui,		vet_tab_guia_sadt_w[i].nr_guia_tiss_principal_dad_gui,
						null,											null,								null,
						vet_tab_guia_sadt_w[i].nr_lote_prestador_dad_gui,					null,								null,
						null,											null,								null,
						null,											null,								null,
						nr_seq_serv_pre_pgto_w,									vet_tab_guia_sadt_w[i].nr_ver_tiss_dad_gui,			null,
						vet_tab_guia_sadt_w[i].sg_conselho_dad_con_pro,						vet_tab_guia_sadt_w[i].uf_dad_con_pro,				null,
						vet_tab_guia_sadt_w[i].tp_consulta_dad_ate,						vet_tab_guia_sadt_w[i].tp_ind_acidente_dad_ate,			2,
						null,											vet_tab_guia_sadt_w[i].tp_prestador_dad_exe) returning nr_sequencia into nr_seq_nota_cobr_w;

		for j in 1..vet_tab_guia_sadt_proc_w.count loop
		
			if (vet_tab_guia_sadt_proc_w[j].id = vet_tab_guia_sadt_w[i].id) then

				-- CONVERTER DATA

				vet_tab_guia_sadt_proc_w[j].dt_pago_prestador_pag_pre		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_sadt_proc_w[j].dt_pago_prestador_pag_pre);
				vet_tab_guia_sadt_proc_w[j].dt_autorizacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_sadt_proc_w[j].dt_autorizacao_dad_aut);
				vet_tab_guia_sadt_proc_w[j].dt_execucao_pro			:= ptu_a700_imp_pck.converte_data(vet_tab_guia_sadt_proc_w[j].dt_execucao_pro);
				vet_tab_guia_sadt_proc_w[j].dt_solicitacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_sadt_proc_w[j].dt_solicitacao_dad_aut);
				if (vet_tab_guia_sadt_proc_w[j].tp_tabela_pro = 4)  then
					ie_pacote_intercambio_w := 'S';
				else
					ie_pacote_intercambio_w := 'N';
				end if;				
				
				if (vet_tab_guia_sadt_proc_w[j].tp_tabela_pro in (2,3,5,6)) then
					if (coalesce(ie_material_intercambio_w, 'S') = 'S') then
						nr_seq_material_w	:= vet_tab_guia_sadt_proc_w[j].cd_servico_pro;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
						nr_seq_material_w := null;

						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_guia_sadt_proc_w[j].cd_servico_pro, 'O', 'N', vet_tab_guia_sadt_w[i].nr_ver_tiss_dad_gui);

						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
						nr_seq_material_w := null;
						
						pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_guia_sadt_proc_w[j].cd_servico_pro, vet_tab_guia_sadt_w[i].nr_ver_tiss_dad_gui);
						
						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;
					end if;

					select	count(1)
					into STRICT	qt_regra_w
					from	pls_conversao_proc
					where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
					and	ie_situacao = 'A'
					and	ie_ptu = 'S';

					if (qt_regra_w > 0) then
						cd_mat_number_inter_w := vet_tab_guia_sadt_proc_w[j].cd_servico_pro;
					
						pls_obter_proced_conversao(	null, null, null,
										cd_estabelecimento_p, 4, null,
										3, 'R', null,
										null, null, cd_mat_number_inter_w,
										null, cd_procedimento_w, ie_origem_proced_w,
										nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
										null, null, null,
										'N', ie_priorizar_conv_pct_int_w);
					end if;

					if	((coalesce(nr_seq_material_w,0)) <> 0) then
						select	count(nr_sequencia)
						into STRICT	qt_material_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;
					end if;

					if (coalesce(qt_material_w,0) = 0) then
						ptu_obter_material_conversao(	vet_tab_guia_sadt_proc_w[j].cd_servico_pro,
										vet_tab_guia_sadt_proc_w[j].tp_tabela_pro,
										null, 
										'R', 
										'7', 
										null, 
										null,
										nr_seq_material_w,
										cd_servico_mat_w,
										ie_somente_codigo_w);
					end if;

					if (coalesce(nr_seq_material_w,0) = 0) then
						nr_seq_material_w	:= null;
					end if;

					-- A900

					if (coalesce(nr_seq_material_w::text, '') = '') then
						cd_mat_number_inter_w := vet_tab_guia_sadt_proc_w[j].cd_servico_pro;
						
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', vet_tab_guia_sadt_w[i].nr_ver_tiss_dad_gui);
					end if;

					-- FEDERACAO

					if (coalesce(nr_seq_material_w::text, '') = '') then
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', vet_tab_guia_sadt_w[i].nr_ver_tiss_dad_gui);
					end if;	

					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
						nr_seq_material_w := null;
					end if;

				else
					--A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.

					pls_obter_proced_conversao(	vet_tab_guia_sadt_proc_w[j].cd_servico_pro, null, null,
									cd_estabelecimento_p, 4, null,
									3, 'R', null,
									null, null, null,
									null, cd_procedimento_w, ie_origem_proced_w,
									nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
									null, null, null,
									ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w);

					-- Obter a origem padrao para os itens conforme a regra.

					ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', null, null);

					if (coalesce(ie_origem_proced_w::text, '') = '') then
						--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.

						ie_origem_proced_w := ie_origem_proced_padrao_w;
					end if;

					--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ?ltima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padrao do sistema	

					if (ie_origem_proc_valido_w	= 'S') then
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w
						and	ie_situacao = 'A';

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	max(ie_origem_proced)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_situacao = 'A';	
							
							-- Se nao encontrar a origem em procedimentos ativos, busca em procedimentos que nao estiverem ativos.

							if (coalesce(ie_origem_proced_w::text, '') = '') then
								select	max(ie_origem_proced)
								into STRICT	ie_origem_proced_w
								from	procedimento
								where	cd_procedimento = cd_procedimento_w;	
							end if;
						end if;

					else
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w;
						--OS667827

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced OS 644869 Conforme solicitado foi realizado tratamento para caso nao

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	coalesce(max(ie_origem_proced),ie_origem_proced_w)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_origem_proced in (	SELECT	ie_origem_proced
											from	pls_regra_origem_proced
											where	ie_origem_proced != ie_origem_proced_w );
						end if;
					end if;

					select	count(1)
					into STRICT	qt_proc_valido_w
					from	procedimento
					where	cd_procedimento	= cd_procedimento_w
					and	ie_origem_proced = ie_origem_proced_w;

					-- Tem que deixar o item como NAO ENCONTRADO

					if (qt_proc_valido_w = 0) then
						cd_procedimento_w	:= null;
						ie_origem_proced_w	:= null;
					end if;
				end if;
				
				insert into ptu_nota_servico(	nr_sequencia,							dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,							nm_usuario_nrec,						cd_ato,
								cd_cnes_prest,							cd_especialidade,						cd_munic,
								cd_pacote,							cd_porte_anestesico,						cd_prestador,
								cd_prestador_req,						cd_procedimento,						cd_rec_prestador,
								cd_ref_material_fab,						cd_ref_material_fab_opme,					cd_servico,
								cd_unimed_autorizadora,						cd_unimed_pre_req,						cd_unimed_prestador,
								det_reg_anvisa,							ds_hora_procedimento,						ds_servico,
								ds_servico_aux,							dt_autoriz,							dt_pgto_prestador,
								dt_procedimento,						dt_solicitacao,							hr_final,
								hr_servico,							id_acres_urg_emer,						id_aviso_item,
								id_pag_forn,							ie_alto_custo,							ie_consistente,
								ie_origem_proced,						ie_pacote,							ie_rede_propria,
								ie_reembolso,							ie_tipo_data_regra,						ie_tipo_participacao,
								ie_tipo_pessoa_prestador,					ie_tipo_prestador,						ie_tipo_tabela,
								ie_via_acesso,							nm_fornecedor,							nm_prestador,
								nm_prestador_requisitante,					nm_profissional_prestador,					nr_autorizacao,
								nr_cbo_exec,							nr_cgc_cpf,							nr_cgc_cpf_req,
								nr_cnpj_fornecedor,						nr_cons_prof_prest,						nr_cons_prof_req,
								nr_guia_tiss,							nr_linha,							nr_lote,
								nr_nota,							nr_nota_fiscal_forn,						nr_nota_numerico,
								nr_reg_anvisa,							nr_seq_agrup_item_ptu,						nr_seq_aviso_material,
								nr_seq_aviso_procedimento,					nr_seq_a500,							nr_seq_composicao,
								nr_seq_conta_mat,						nr_seq_conta_proc,						nr_seq_material,
								nr_seq_nota,							nr_seq_nota_cobr,						nr_seq_pacote,
								nr_seq_pacote_agrup,						nr_seq_pacote_mat,						nr_seq_pacote_proc,
								nr_seq_proc_partic,						nr_seq_registro,						qt_procedimento,
								sg_cons_prof_prest,						sg_cons_prof_req,						sg_uf_cons_prest,
								sg_uf_cons_req,							tec_utilizada,							tipo_rede_min,
								tp_autoriz,							tx_procedimento,						unidade_medida,
								vl_adic_co,							vl_adic_filme,							vl_adic_procedimento,
								vl_custo_operacional,						vl_filme,							vl_pago_prest,
								vl_procedimento)	
						values (	nextval('ptu_nota_servico_seq'),					clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,							nm_usuario_p,							vet_tab_guia_sadt_proc_w[j].cd_ato_proc,
								vet_tab_guia_sadt_w[i].cd_cnes_dad_exec,			null,								null,
								null,								vet_tab_guia_sadt_proc_w[j].cd_porte_anestesico_pro,		vet_tab_guia_sadt_proc_w[j].cd_prest_pro_equ_pro,
								vet_tab_guia_sadt_w[i].cd_prest_dad_sol,			cd_procedimento_w,						null,
								vet_tab_guia_sadt_proc_w[j].cd_referenci_mat_fab_dad_opme,	null,								vet_tab_guia_sadt_proc_w[j].cd_servico_pro,
								null,								vet_tab_guia_sadt_w[i].cd_uni_prest_dad_sol,			vet_tab_guia_sadt_proc_w[j].cd_uni_prest_pro_equ_pro,
								vet_tab_guia_sadt_proc_w[j].nr_registro_anvisa_dad_opme,	vet_tab_guia_sadt_proc_w[j].hr_inicial_pro,			null,
								null,								vet_tab_guia_sadt_proc_w[j].dt_autorizacao_dad_aut,		vet_tab_guia_sadt_proc_w[j].dt_pago_prestador_pag_pre,
								vet_tab_guia_sadt_proc_w[j].dt_execucao_pro,			vet_tab_guia_sadt_proc_w[j].dt_solicitacao_dad_aut,		vet_tab_guia_sadt_proc_w[j].hr_final_pro,
								null,								vet_tab_guia_sadt_proc_w[j].id_acrescimo_pro,			null,
								null,								null,								null,
								ie_origem_proced_w,						vet_tab_guia_sadt_proc_w[j].id_pacote_pro,			null,
								null,								null,								vet_tab_guia_sadt_proc_w[j].tp_participacao_equ_pro,
								null,								vet_tab_guia_sadt_w[i].tp_prestador_dad_exe,			vet_tab_guia_sadt_proc_w[j].tp_tabela_pro,
								vet_tab_guia_sadt_proc_w[j].via_acesso_pro,			null,								null,
								vet_tab_guia_sadt_w[i].nome_dad_sol,				vet_tab_guia_sadt_proc_w[j].nm_profissional_equ_pro,		null,
								vet_tab_guia_sadt_proc_w[j].cbo_equ_pro,			vet_tab_guia_sadt_proc_w[j].cd_cpf_equ_pro,			nr_cpf_cnpj_req_w,
								vet_tab_guia_sadt_proc_w[j].cd_cnpj_for_dad_opme,		vet_tab_guia_sadt_proc_w[j].nr_conselho_dad_con_equ_pro,	vet_tab_guia_sadt_w[i].nr_conselho_dad_con_pro,
								null,								null,								null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								nr_seq_material_w,
								null,								nr_seq_nota_cobr_w,						null,
								null,								null,								null,
								null,								null,								vet_tab_guia_sadt_proc_w[j].qt_paga_pro,
								vet_tab_guia_sadt_proc_w[j].sg_conselho_dad_con_equ_pro,	vet_tab_guia_sadt_w[i].sg_conselho_dad_con_pro,			vet_tab_guia_sadt_proc_w[j].uf_dad_con_equ_pro,
								vet_tab_guia_sadt_w[i].uf_dad_con_pro,				vet_tab_guia_sadt_proc_w[j].tc_utilizada_pro,			null,
								null,								vet_tab_guia_sadt_proc_w[j].ft_multiplicador_servico_pro,	vet_tab_guia_sadt_proc_w[j].un_medida_pro,
								null,								null,								null,
								vet_tab_guia_sadt_proc_w[j].vl_co_pago_val,			vet_tab_guia_sadt_proc_w[j].vl_filme_pago_val,			null,
								vet_tab_guia_sadt_proc_w[j].vl_serv_pago_val);
				select	max(nr_seq_prest_inter),
					max(tp_pessoa),
					max(nr_cnpj_cpf),
					max(cd_cnes_cont_exec),
					max(cd_munic_cont_exec),
					max(nm_prest_exec)
				into STRICT	nr_seq_prest_inter_w,
					tp_pessoa_w,
					nr_cnpj_cpf_w,
					cd_cnes_cont_exec_w,
					cd_munic_cont_exec_w,
					nm_prestador_w
				from	ptu_nota_cobranca
				where	nr_sequencia		= nr_seq_nota_cobr_w;

				if (coalesce(nr_seq_prest_inter_w::text, '') = '') then
					if (tp_pessoa_w = 'J') then
						cd_cgc_prestador_w		:= nr_cnpj_cpf_w;
						nr_cpf_prestador_w		:= null;
					elsif (tp_pessoa_w = 'F') then
						cd_cgc_prestador_w		:= null;
						nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_w,4,11);
					end if;

					pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_w,
									cd_cnes_cont_exec_w, cd_munic_cont_exec_w, nm_usuario_p,
									null, vet_tab_guia_sadt_proc_w[j].cbo_equ_pro, nr_seq_prest_inter_w,
									nr_seq_prestador_w);

					if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
						update	ptu_nota_cobranca
						set	nr_seq_prest_inter	= nr_seq_prest_inter_w
						where	nr_sequencia		= nr_seq_nota_cobr_w;
					end if;
				end if;
			end if;
		end loop;
		
		-- COMPLEMENTO

		for l in 1..vet_tab_guia_sadt_comp_w.count loop
			-- S? IRA FAZER O INSERT NA PTU_NOTA_COMPLEMENTO SE FOR DA MESMA NOTA COBRANCA 

			if (vet_tab_guia_sadt_w[i].id = vet_tab_guia_sadt_comp_w[l].id_complemento)  then

				insert into ptu_nota_complemento(nr_sequencia,				dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,				nm_usuario_nrec,						ds_complemento,
								especif_material,			ie_tipo_complemento,						nr_linha,
								nr_lote,				nr_nota,							nr_seq_nota_cobr)
						values (	nextval('ptu_nota_complemento_seq'),	clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,				nm_usuario_p,							vet_tab_guia_sadt_comp_w[l].nm_desc_compleme_dad_gui_com,
								null,					vet_tab_guia_sadt_comp_w[l].tp_reg_cpl_dad_gui_com,		null,
								null,					null,								nr_seq_nota_cobr_w);
			end if;
		end loop;
	end loop;
	
	-- GUIA INTERNACAO

	for i in 1..vet_tab_guia_int_w.count loop

		-- CONVERTER DATA

		dt_atendimento_w					:= trunc(vet_tab_guia_int_w[i].dt_fim_fat_dad_int);
		dt_alta_w						:= ptu_a700_imp_pck.converte_data(to_char(to_date(vet_tab_guia_int_w[i].dt_inicio_fat_dad_int, 'yyyy/mm/ddhh24:mi:ss'), 'yyyymmdd'));
		vet_tab_guia_int_w[i].dt_atendimento_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_int_w[i].dt_atendimento_dad_gui);
		vet_tab_guia_int_w[i].dt_protocolo_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_int_w[i].dt_protocolo_dad_gui);

		nr_cpf_cnpj_w		:= coalesce(vet_tab_guia_int_w[i].cd_cpf_dad_exe, vet_tab_guia_int_w[i].cd_cnpj_dad_exe);
		nr_cpf_cnpj_req_w	:= coalesce(vet_tab_guia_int_w[i].cd_cpf_dad_sol, vet_tab_guia_int_w[i].cd_cnpj_dad_sol);
		
		insert into ptu_nota_cobranca(	nr_sequencia,							dt_atualizacao,							dt_atualizacao_nrec,
						nm_usuario,							nm_usuario_nrec,						cd_cid,
						cd_cid_obito,							cd_cnes_cont_exec,						cd_excecao,
						cd_munic_cont_exec,						cd_prestador_exec,						cd_prestador_req,
						cd_unimed,							cd_unimed_prest_exec,						cd_unimed_prest_req,
						cd_usuario_plano,						dt_alta,							dt_atendimento,
						dt_conferencia_doc,						dt_conhecimento,						dt_fim_consist_conta,
						dt_fim_geracao_conta,						dt_inicio_consist_conta,					dt_inicio_geracao_conta,
						dt_internacao,							dt_protocolo,							dt_ultima_autoriz,
						id_aviso,							id_continuado,							id_liminar,
						id_nota_principal,						id_rec_proprio,							id_rn,
						ie_carater_atendimento,						ie_consistente,							ie_doc_fisico_conf,
						ie_envia_conta,							ie_necessita_doc_fisico,					ie_paciente,
						ie_pcmso,							ie_tipo_atendimento,						ie_tipo_saida_spdat,
						motivo_encerram,						nm_beneficiario,						nm_prest_exec,
						nm_prest_req,							nm_usuario_doc_fisico,						nr_cbo_req,
						nr_cnpj_cpf,							nr_cnpj_cpf_req,						nr_cons_prof_req,
						nr_fatura_glosada,						nr_guia_principal,						nr_guia_principal_numerico,
						nr_guia_tiss_operadora,						nr_guia_tiss_prestador,						nr_guia_tiss_principal,
						nr_linha,							nr_lote,							nr_lote_glosado,
						nr_lote_prest,							nr_ndr_glosada,							nr_nota,
						nr_nota_glosada,						nr_nota_numerico,						nr_seq_aviso_conta,
						nr_seq_conta,							nr_seq_fatura,							nr_seq_prest_inter,
						nr_seq_serv_pre_pagto,						nr_ver_tiss,							pr_taxa,
						sg_cons_prof_req,						sg_uf_cons_req,							tipo_rede_min,
						tp_consulta,							tp_ind_acidente,						tp_nota,
						tp_pessoa,							tp_prest_exec)
				values (	nextval('ptu_nota_cobranca_seq'),					clock_timestamp(),							clock_timestamp(),
						nm_usuario_p,							nm_usuario_p,							null,
						vet_tab_guia_int_w[i].cd_cid_obito_dad_int,			vet_tab_guia_int_w[i].cd_cnes_dad_exec,				null,
						vet_tab_guia_int_w[i].cd_municipio_cont_dad_exe,		vet_tab_guia_int_w[i].cd_prest_dad_exe,				vet_tab_guia_int_w[i].cd_prest_dad_sol,
						vet_tab_guia_int_w[i].cd_unimed_dad_ben,			vet_tab_guia_int_w[i].cd_uni_prest_dad_exe,			vet_tab_guia_int_w[i].cd_uni_prest_dad_sol,
						vet_tab_guia_int_w[i].id_benef_dad_ben,				dt_atendimento_w,						vet_tab_guia_int_w[i].dt_atendimento_dad_gui,
						null,								null,								null,
						null,								null,								null,
						dt_alta_w,							vet_tab_guia_int_w[i].dt_protocolo_dad_gui,			null,
						null,								null,								null,
						null,								vet_tab_guia_int_w[i].id_rec_proprio_dad_exe,			vet_tab_guia_int_w[i].id_rn_dad_ben,
						vet_tab_guia_int_w[i].carater_atendimento_dad_int,		null,								null,
						null,								null,								vet_tab_guia_int_w[i].tp_paciente_dad_ben,
						null,								null,								null,
						vet_tab_guia_int_w[i].motivo_encerramento_dad_int,		vet_tab_guia_int_w[i].nm_benef_dad_ben,				vet_tab_guia_int_w[i].nm_prest_exec_dad_exec,
						vet_tab_guia_int_w[i].nome_dad_sol,				null,								vet_tab_guia_int_w[i].cbo_prof,
						nr_cpf_cnpj_w,							nr_cpf_cnpj_req_w,						vet_tab_guia_int_w[i].nr_conselho_dad_con_prof,
						null,								null,								null,
						vet_tab_guia_int_w[i].nr_guia_tiss_opera_dad_gui,		vet_tab_guia_int_w[i].nr_guia_tiss_prest_dad_gui,		vet_tab_guia_int_w[i].nr_guia_tiss_princ_dad_gui,
						null,								null,								null,
						vet_tab_guia_int_w[i].nr_lote_prestador_dad_gui,		null,								null,
						null,								null,								null,
						null,								null,								null,
						nr_seq_serv_pre_pgto_w,						vet_tab_guia_int_w[i].nr_ver_tiss_dad_gui,			null,
						vet_tab_guia_int_w[i].sg_conselho_dad_con_prof,			vet_tab_guia_int_w[i].uf_dad_con_prof,				null,
						null,								null,								3,
						null,								vet_tab_guia_int_w[i].tp_prestador_dad_exe) returning nr_sequencia into nr_seq_nota_cobr_w;

		-- INSERT PTU NOTA HOSPITALAR

		insert into ptu_nota_hospitalar(	nr_sequencia,						cd_cgc_hospital,					cd_cid_obito,
							cd_hospital,						cd_motivo_saida,					cd_uf_coren,
							cd_uf_crm,						cd_unimed_hospital,					dt_alta,
							dt_atualizacao,						dt_atualizacao_nrec,					dt_internacao,
							ie_faturamento,						ie_ind_acidente,					ie_int_aborto,
							ie_int_baixo_peso,					ie_int_gestacao,					ie_int_neonatal,
							ie_int_parto_cesarea,					ie_int_parto_normal,					ie_int_puerperio,
							ie_int_recem_nascido,					ie_int_transtorno,					ie_obito_mulher,
							ie_tipo_acomodacao,					ie_tipo_internacao,					nm_enfer_auditor,
							nm_hospital,						nm_medico_auditor,					nm_usuario,
							nm_usuario_nrec,					nr_coren_auditor,					nr_crm_auditor,
							nr_declara_obito,					nr_linha,						nr_lote,
							nr_nota,						nr_seq_apres,						nr_seq_nota_cobr,
							cd_cnes,						qt_nasc_mortos,						qt_nasc_vivos,
							qt_nasc_vivos_pre,					qt_obito_precoce,					qt_obito_tardio,
							reg_internacao,						tx_mult_amb)			
					values (	nextval('ptu_nota_hospitalar_seq'),			null,							vet_tab_guia_int_w[i].cd_cid_obito_dad_int,
							null,							null,							null,
							null,							null,							vet_tab_guia_int_w[i].dt_fim_fat_dad_int,
							clock_timestamp(),						clock_timestamp(),						vet_tab_guia_int_w[i].dt_inicio_fat_dad_int,
							vet_tab_guia_int_w[i].tp_fat_dad_int,			vet_tab_guia_int_w[i].tp_indicador_acidente_dad_int,	null,
							null,							null,							null,
							null,							null,							null,
							vet_tab_guia_int_w[i].ie_int_rec_nascido_dad_int,	null,							null,
							vet_tab_guia_int_w[i].tp_acomodacao_dad_int,		vet_tab_guia_int_w[i].tp_internacao_dad_int,		null,
							null,							null,							nm_usuario_p,
							nm_usuario_p,						null,							null,
							vet_tab_guia_int_w[i].nr_declara_obito_dad_int,		null,							null,
							null,							null,							nr_seq_nota_cobr_w,
							null,							null,							vet_tab_guia_int_w[i].qt_nasc_vivo_dad_int,
							null,							null,							null,
							vet_tab_guia_int_w[i].rg_internacao_dad_int,		vet_tab_guia_int_w[i].ft_multiplicador_amb_dad_int);

		for j in 1..vet_tab_guia_int_proc_w.count loop
		
			if (vet_tab_guia_int_proc_w[j].id = vet_tab_guia_int_w[i].id) then

				-- CONVERTER DATA

				vet_tab_guia_int_proc_w[j].dt_pago_prestador_pag_pre		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_int_proc_w[j].dt_pago_prestador_pag_pre);
				vet_tab_guia_int_proc_w[j].dt_autorizacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_int_proc_w[j].dt_autorizacao_dad_aut);
				vet_tab_guia_int_proc_w[j].dt_execucao_pro			:= ptu_a700_imp_pck.converte_data(vet_tab_guia_int_proc_w[j].dt_execucao_pro);
				vet_tab_guia_int_proc_w[j].dt_solicitacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_int_proc_w[j].dt_solicitacao_dad_aut);
				if (vet_tab_guia_int_proc_w[j].tp_tabela_pro = 4) then
					ie_pacote_intercambio_w := 'S';
				else
					ie_pacote_intercambio_w := 'N';
				end if;				
				
				if (vet_tab_guia_int_proc_w[j].tp_tabela_pro in (2,3,5,6)) then
					if (coalesce(ie_material_intercambio_w, 'S') = 'S') then
						nr_seq_material_w	:= vet_tab_guia_int_proc_w[j].cd_servico_pro;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
						nr_seq_material_w := null;

						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_guia_int_proc_w[j].cd_servico_pro, 'O', 'N', vet_tab_guia_int_w[i].nr_ver_tiss_dad_gui);

						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
						nr_seq_material_w := null;
						
						pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_guia_int_proc_w[j].cd_servico_pro, vet_tab_guia_int_w[i].nr_ver_tiss_dad_gui);
						
						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;
					end if;

					select	count(1)
					into STRICT	qt_regra_w
					from	pls_conversao_proc
					where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
					and	ie_situacao = 'A'
					and	ie_ptu = 'S';

					if (qt_regra_w > 0) then
						cd_mat_number_inter_w := vet_tab_guia_int_proc_w[j].cd_servico_pro;
					
						pls_obter_proced_conversao(	null, null, null,
										cd_estabelecimento_p, 4, null,
										3, 'R', null,
										null, null, cd_mat_number_inter_w,
										null, cd_procedimento_w, ie_origem_proced_w,
										nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
										null, null, null,
										'N', ie_priorizar_conv_pct_int_w);
					end if;

					if	((coalesce(nr_seq_material_w,0)) <> 0) then
						select	count(nr_sequencia)
						into STRICT	qt_material_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;
					end if;

					if (coalesce(qt_material_w,0) = 0) then
						ptu_obter_material_conversao(	vet_tab_guia_int_proc_w[j].cd_servico_pro,
										vet_tab_guia_int_proc_w[j].tp_tabela_pro,
										null, 
										'R', 
										'7', 
										null, 
										null,
										nr_seq_material_w,
										cd_servico_mat_w,
										ie_somente_codigo_w);
					end if;

					if (coalesce(nr_seq_material_w,0) = 0) then
						nr_seq_material_w	:= null;
					end if;

					-- A900

					if (coalesce(nr_seq_material_w::text, '') = '') then
						cd_mat_number_inter_w := vet_tab_guia_int_proc_w[j].cd_servico_pro;
						
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', vet_tab_guia_int_w[i].nr_ver_tiss_dad_gui);
					end if;

					-- FEDERACAO

					if (coalesce(nr_seq_material_w::text, '') = '') then
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', vet_tab_guia_int_w[i].nr_ver_tiss_dad_gui);
					end if;	

					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
						nr_seq_material_w := null;
					end if;

				else
					--A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.

					pls_obter_proced_conversao(	vet_tab_guia_int_proc_w[j].cd_servico_pro, null, null,
									cd_estabelecimento_p, 4, null,
									3, 'R', null,
									null, null, null,
									null, cd_procedimento_w, ie_origem_proced_w,
									nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
									null, null, null,
									ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w);

					-- Obter a origem padrao para os itens conforme a regra.

					ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', null, null);

					if (coalesce(ie_origem_proced_w::text, '') = '') then
						--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.

						ie_origem_proced_w := ie_origem_proced_padrao_w;
					end if;

					--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ?ltima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padrao do sistema	

					if (ie_origem_proc_valido_w	= 'S') then
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w
						and	ie_situacao = 'A';

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	max(ie_origem_proced)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_situacao = 'A';	
							
							-- Se nao encontrar a origem em procedimentos ativos, busca em procedimentos que nao estiverem ativos.

							if (coalesce(ie_origem_proced_w::text, '') = '') then
								select	max(ie_origem_proced)
								into STRICT	ie_origem_proced_w
								from	procedimento
								where	cd_procedimento = cd_procedimento_w;	
							end if;
						end if;

					else
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w;
						--OS667827

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced OS 644869 Conforme solicitado foi realizado tratamento para caso nao

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	coalesce(max(ie_origem_proced),ie_origem_proced_w)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_origem_proced in (	SELECT	ie_origem_proced
											from	pls_regra_origem_proced
											where	ie_origem_proced != ie_origem_proced_w );
						end if;
					end if;

					select	count(1)
					into STRICT	qt_proc_valido_w
					from	procedimento
					where	cd_procedimento	= cd_procedimento_w
					and	ie_origem_proced = ie_origem_proced_w;

					-- Tem que deixar o item como NAO ENCONTRADO

					if (qt_proc_valido_w = 0) then
						cd_procedimento_w	:= null;
						ie_origem_proced_w	:= null;
					end if;
				end if;
				
				-- INSERT PTU NOTA SERVICO

				insert into ptu_nota_servico(	nr_sequencia,							dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,							nm_usuario_nrec,						cd_ato,
								cd_cnes_prest,							cd_especialidade,						cd_munic,
								cd_pacote,							cd_porte_anestesico,						cd_prestador,
								cd_prestador_req,						cd_procedimento,						cd_rec_prestador,
								cd_ref_material_fab,						cd_ref_material_fab_opme,					cd_servico,
								cd_unimed_autorizadora,						cd_unimed_pre_req,						cd_unimed_prestador,
								det_reg_anvisa,							ds_hora_procedimento,						ds_servico,
								ds_servico_aux,							dt_autoriz,							dt_pgto_prestador,
								dt_procedimento,						dt_solicitacao,							hr_final,
								hr_servico,							id_acres_urg_emer,						id_aviso_item,
								id_pag_forn,							ie_alto_custo,							ie_consistente,
								ie_origem_proced,						ie_pacote,							ie_rede_propria,
								ie_reembolso,							ie_tipo_data_regra,						ie_tipo_participacao,
								ie_tipo_pessoa_prestador,					ie_tipo_prestador,						ie_tipo_tabela,
								ie_via_acesso,							nm_fornecedor,							nm_prestador,
								nm_prestador_requisitante,					nm_profissional_prestador,					nr_autorizacao,
								nr_cbo_exec,							nr_cgc_cpf,							nr_cgc_cpf_req,
								nr_cnpj_fornecedor,						nr_cons_prof_prest,						nr_cons_prof_req,
								nr_guia_tiss,							nr_linha,							nr_lote,
								nr_nota,							nr_nota_fiscal_forn,						nr_nota_numerico,
								nr_reg_anvisa,							nr_seq_agrup_item_ptu,						nr_seq_aviso_material,
								nr_seq_aviso_procedimento,					nr_seq_a500,							nr_seq_composicao,
								nr_seq_conta_mat,						nr_seq_conta_proc,						nr_seq_material,
								nr_seq_nota,							nr_seq_nota_cobr,						nr_seq_pacote,
								nr_seq_pacote_agrup,						nr_seq_pacote_mat,						nr_seq_pacote_proc,
								nr_seq_proc_partic,						nr_seq_registro,						qt_procedimento,
								sg_cons_prof_prest,						sg_cons_prof_req,						sg_uf_cons_prest,
								sg_uf_cons_req,							tec_utilizada,							tipo_rede_min,
								tp_autoriz,							tx_procedimento,						unidade_medida,
								vl_adic_co,							vl_adic_filme,							vl_adic_procedimento,
								vl_custo_operacional,						vl_filme,							vl_pago_prest,
								vl_procedimento)	
						values (	nextval('ptu_nota_servico_seq'),					clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,							nm_usuario_p,							vet_tab_guia_int_proc_w[j].cd_ato_proc,
								vet_tab_guia_int_w[i].cd_cnes_dad_exec,				null,								null,
								null,								vet_tab_guia_int_proc_w[j].cd_porte_anestesico_pro,		vet_tab_guia_int_proc_w[j].cd_prest_pro_equ_pro,
								vet_tab_guia_int_w[i].cd_prest_dad_sol,				cd_procedimento_w,						null,
								vet_tab_guia_int_proc_w[j].cd_referenci_mat_fab_dad_opme,	null,								vet_tab_guia_int_proc_w[j].cd_servico_pro,
								null,								vet_tab_guia_int_w[i].cd_uni_prest_dad_sol,			vet_tab_guia_int_proc_w[j].cd_uni_prest_pro_equ_pro,
								vet_tab_guia_int_proc_w[j].nr_registro_anvisa_dad_opme,		vet_tab_guia_int_proc_w[j].hr_inicial_pro,			null,
								null,								vet_tab_guia_int_proc_w[j].dt_autorizacao_dad_aut,		vet_tab_guia_int_proc_w[j].dt_pago_prestador_pag_pre,
								vet_tab_guia_int_proc_w[j].dt_execucao_pro,			vet_tab_guia_int_proc_w[j].dt_solicitacao_dad_aut,		vet_tab_guia_int_proc_w[j].hr_final_pro,
								null,								vet_tab_guia_int_proc_w[j].id_acrescimo_pro,			null,
								null,								null,								null,
								ie_origem_proced_w,						vet_tab_guia_int_proc_w[j].id_pacote_pro,			null,
								null,								null,								vet_tab_guia_int_proc_w[j].tp_participacao_equ_pro,
								null,								vet_tab_guia_int_w[i].tp_prestador_dad_exe,			vet_tab_guia_int_proc_w[j].tp_tabela_pro,
								vet_tab_guia_int_proc_w[j].via_acesso_pro,			null,								vet_tab_guia_int_proc_w[j].nm_profissional_equ_pro,
								vet_tab_guia_int_w[i].nome_dad_sol,				vet_tab_guia_int_proc_w[j].nm_profissional_equ_pro,		null,
								vet_tab_guia_int_proc_w[j].cbo_equ_pro,				vet_tab_guia_int_proc_w[j].cd_cpf_equ_pro,			nr_cpf_cnpj_req_w,
								vet_tab_guia_int_proc_w[j].cd_cnpj_for_dad_opme,		vet_tab_guia_int_proc_w[j].nr_conselho_dad_con_equ_pro,		vet_tab_guia_int_w[i].nr_conselho_dad_con_prof,
								null,								null,								null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								nr_seq_material_w,
								null,								nr_seq_nota_cobr_w,						null,
								null,								null,								null,
								null,								null,								vet_tab_guia_int_proc_w[j].qt_paga_pro,
								vet_tab_guia_int_proc_w[j].sg_conselho_dad_con_equ_pro,		vet_tab_guia_int_w[i].sg_conselho_dad_con_prof,			vet_tab_guia_int_proc_w[j].uf_dad_con_equ_pro,
								vet_tab_guia_int_w[i].uf_dad_con_prof,				vet_tab_guia_int_proc_w[j].tc_utilizada_pro,			null,
								null,								vet_tab_guia_int_proc_w[j].ft_multiplicador_servico_pro,	vet_tab_guia_int_proc_w[j].un_medida_pro,
								null,								null,								null,
								vet_tab_guia_int_proc_w[j].vl_co_pago_val,			vet_tab_guia_int_proc_w[j].vl_filme_pago_val,			null,
								vet_tab_guia_int_proc_w[j].vl_serv_pago_val);

				select	max(nr_seq_prest_inter),
					max(tp_pessoa),
					max(nr_cnpj_cpf),
					max(cd_cnes_cont_exec),
					max(cd_munic_cont_exec),
					max(nm_prest_exec)
				into STRICT	nr_seq_prest_inter_w,
					tp_pessoa_w,
					nr_cnpj_cpf_w,
					cd_cnes_cont_exec_w,
					cd_munic_cont_exec_w,
					nm_prestador_w
				from	ptu_nota_cobranca
				where	nr_sequencia		= nr_seq_nota_cobr_w;

				if (coalesce(nr_seq_prest_inter_w::text, '') = '') then
					if (tp_pessoa_w = 'J') then
						cd_cgc_prestador_w		:= nr_cnpj_cpf_w;
						nr_cpf_prestador_w		:= null;
					elsif (tp_pessoa_w = 'F') then
						cd_cgc_prestador_w		:= null;
						nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_w,4,11);
					end if;

					pls_gerar_prest_intercambio(	nr_cpf_prestador_w, cd_cgc_prestador_w, nm_prestador_w,
									cd_cnes_cont_exec_w, cd_munic_cont_exec_w, nm_usuario_p,
									null, vet_tab_guia_int_proc_w[j].cbo_equ_pro, nr_seq_prest_inter_w,
									nr_seq_prestador_w);

					if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
						update	ptu_nota_cobranca
						set	nr_seq_prest_inter	= nr_seq_prest_inter_w
						where	nr_sequencia		= nr_seq_nota_cobr_w;
					end if;
				end if;
			end if;
		end loop;
		
		-- COMPLEMENTO

		for l in 1..vet_tab_guia_int_comp_w.count loop
			-- S? IRA FAZER O INSERT NA PTU_NOTA_COMPLEMENTO SE FOR DA MESMA NOTA COBRANCA 

			if (vet_tab_guia_int_w[i].id = vet_tab_guia_int_comp_w[l].id_complemento)  then

				insert into ptu_nota_complemento(nr_sequencia,				dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,				nm_usuario_nrec,						ds_complemento,
								especif_material,			ie_tipo_complemento,						nr_linha,
								nr_lote,				nr_nota,							nr_seq_nota_cobr)
						values (	nextval('ptu_nota_complemento_seq'),	clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,				nm_usuario_p,							vet_tab_guia_int_comp_w[l].nm_desc_compleme_dad_gui_com,
								null,					vet_tab_guia_int_comp_w[l].tp_reg_cpl_dad_gui_com,		null,
								null,					null,								nr_seq_nota_cobr_w);
			end if;
		end loop;
	end loop;
	
	for i in 1..vet_tab_guia_honorario_w.count loop

		-- CONVERTER DATA

		vet_tab_guia_honorario_w[i].dt_atendimento_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_honorario_w[i].dt_atendimento_dad_gui);
		vet_tab_guia_honorario_w[i].dt_protocolo_dad_gui		:= ptu_a700_imp_pck.converte_data(vet_tab_guia_honorario_w[i].dt_protocolo_dad_gui);

		nr_cpf_cnpj_w		:= coalesce(vet_tab_guia_honorario_w[i].cd_cpf_dad_exe, vet_tab_guia_honorario_w[i].cd_cnpj_dad_exe);
		
		insert into ptu_nota_cobranca(	nr_sequencia,							dt_atualizacao,							dt_atualizacao_nrec,
						nm_usuario,							nm_usuario_nrec,						cd_cid,
						cd_cid_obito,							cd_cnes_cont_exec,						cd_excecao,
						cd_munic_cont_exec,						cd_prestador_exec,						cd_prestador_req,
						cd_unimed,							cd_unimed_prest_exec,						cd_unimed_prest_req,
						cd_usuario_plano,						dt_alta,							dt_atendimento,
						dt_conferencia_doc,						dt_conhecimento,						dt_fim_consist_conta,
						dt_fim_geracao_conta,						dt_inicio_consist_conta,					dt_inicio_geracao_conta,
						dt_internacao,							dt_protocolo,							dt_ultima_autoriz,
						id_aviso,							id_continuado,							id_liminar,
						id_nota_principal,						id_rec_proprio,							id_rn,
						ie_carater_atendimento,						ie_consistente,							ie_doc_fisico_conf,
						ie_envia_conta,							ie_necessita_doc_fisico,					ie_paciente,
						ie_pcmso,							ie_tipo_atendimento,						ie_tipo_saida_spdat,
						motivo_encerram,						nm_beneficiario,						nm_prest_exec,
						nm_prest_req,							nm_usuario_doc_fisico,						nr_cbo_req,
						nr_cnpj_cpf,							nr_cnpj_cpf_req,						nr_cons_prof_req,
						nr_fatura_glosada,						nr_guia_principal,						nr_guia_principal_numerico,
						nr_guia_tiss_operadora,						nr_guia_tiss_prestador,						nr_guia_tiss_principal,
						nr_linha,							nr_lote,							nr_lote_glosado,
						nr_lote_prest,							nr_ndr_glosada,							nr_nota,
						nr_nota_glosada,						nr_nota_numerico,						nr_seq_aviso_conta,
						nr_seq_conta,							nr_seq_fatura,							nr_seq_prest_inter,
						nr_seq_serv_pre_pagto,						nr_ver_tiss,							pr_taxa,
						sg_cons_prof_req,						sg_uf_cons_req,							tipo_rede_min,
						tp_consulta,							tp_ind_acidente,						tp_nota,
						tp_pessoa,							tp_prest_exec)
				values (	nextval('ptu_nota_cobranca_seq'),					clock_timestamp(),							clock_timestamp(),
						nm_usuario_p,							nm_usuario_p,							null,
						null,								vet_tab_guia_honorario_w[i].cd_cnes_dad_exec,			null,
						vet_tab_guia_honorario_w[i].cd_municipio_cont_dad_exe,		vet_tab_guia_honorario_w[i].cd_prest_dad_exe,			null,
						vet_tab_guia_honorario_w[i].cd_unimed_dad_ben,			vet_tab_guia_honorario_w[i].cd_uni_prest_dad_exe,		null,
						vet_tab_guia_honorario_w[i].id_benef_dad_ben,			null,								vet_tab_guia_honorario_w[i].dt_atendimento_dad_gui,
						null,								null,								null,
						null,								null,								null,
						null,								vet_tab_guia_honorario_w[i].dt_protocolo_dad_gui,		null,
						null,								null,								null,
						null,								vet_tab_guia_honorario_w[i].id_rec_proprio_dad_exe,		vet_tab_guia_honorario_w[i].id_rn_dad_ben,
						null,								null,								null,
						null,								null,								vet_tab_guia_honorario_w[i].tp_paciente_dad_ben,
						null,								null,								null,
						null,								vet_tab_guia_honorario_w[i].nm_benef_dad_ben,			vet_tab_guia_honorario_w[i].nm_prest_exec_dad_exec,
						null,								null,								null,
						nr_cpf_cnpj_w,							null,								null,
						null,								null,								null,
						vet_tab_guia_honorario_w[i].nr_guia_tiss_opera_dad_gui,		vet_tab_guia_honorario_w[i].nr_guia_tiss_prest_dad_gui,		vet_tab_guia_honorario_w[i].nr_guia_tiss_princ_dad_gui,
						null,								null,								null,
						vet_tab_guia_honorario_w[i].nr_lote_prestador_dad_gui,		null,								null,
						null,								null,								null,
						null,								null,								null,
						nr_seq_serv_pre_pgto_w,						vet_tab_guia_honorario_w[i].nr_ver_tiss_dad_gui,		null,
						null,								null,								null,
						null,								null,								4,
						null,								vet_tab_guia_honorario_w[i].tp_prestador_dad_exe) returning nr_sequencia into nr_seq_nota_cobr_w;

		-- INSERT PTU NOTA HOSPITALAR

		insert into ptu_nota_hospitalar(	nr_sequencia,						cd_cgc_hospital,					cd_hospital,
							cd_unimed_hospital,					dt_atualizacao,						dt_atualizacao_nrec,
							nm_hospital,						nm_usuario,						nm_usuario_nrec,
							nr_seq_nota_cobr,					cd_cnes)			
					values (	nextval('ptu_nota_hospitalar_seq'),			vet_tab_guia_honorario_w[i].cnpj_hosp_dad_hosp,		vet_tab_guia_honorario_w[i].cd_hosp_dad_hosp,
							vet_tab_guia_honorario_w[i].cd_uni_hosp_dad_hosp,	clock_timestamp(),						clock_timestamp(),
							vet_tab_guia_honorario_w[i].nm_hosp_dad_hosp,		nm_usuario_p,						nm_usuario_p,
							nr_seq_nota_cobr_w,					vet_tab_guia_honorario_w[i].cd_cnes_hosp_dad_hosp);

		for j in 1..vet_tab_proc_guia_hon_w.count loop
		
			if (vet_tab_proc_guia_hon_w[j].id = vet_tab_guia_honorario_w[i].id) then

				-- CONVERTER DATA

				vet_tab_proc_guia_hon_w[j].dt_pago_prestador_pag_pre		:= ptu_a700_imp_pck.converte_data(vet_tab_proc_guia_hon_w[j].dt_pago_prestador_pag_pre);
				vet_tab_proc_guia_hon_w[j].dt_autorizacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_proc_guia_hon_w[j].dt_autorizacao_dad_aut);
				vet_tab_proc_guia_hon_w[j].dt_execucao_pro			:= ptu_a700_imp_pck.converte_data(vet_tab_proc_guia_hon_w[j].dt_execucao_pro);
				vet_tab_proc_guia_hon_w[j].dt_solicitacao_dad_aut		:= ptu_a700_imp_pck.converte_data(vet_tab_proc_guia_hon_w[j].dt_solicitacao_dad_aut);
				
				if (vet_tab_proc_guia_hon_w[j].tp_tabela_pro = 4) then
					ie_pacote_intercambio_w := 'S';
				else
					ie_pacote_intercambio_w := 'N';
				end if;
				
				if (vet_tab_proc_guia_hon_w[j].tp_tabela_pro in (2,3,5,6)) then
					if (coalesce(ie_material_intercambio_w, 'S') = 'S') then
						nr_seq_material_w	:= vet_tab_proc_guia_hon_w[j].cd_servico_pro;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
						nr_seq_material_w := null;

						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_proc_guia_hon_w[j].cd_servico_pro, 'O', 'N', vet_tab_guia_honorario_w[i].nr_ver_tiss_dad_gui);

						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;

					elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
						nr_seq_material_w := null;
						
						pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), vet_tab_proc_guia_hon_w[j].cd_servico_pro, vet_tab_guia_honorario_w[i].nr_ver_tiss_dad_gui);
						
						if (coalesce(nr_seq_material_w::text, '') = '') then
							nr_seq_material_w := 0;
						end if;
					end if;

					select	count(1)
					into STRICT	qt_regra_w
					from	pls_conversao_proc
					where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
					and	ie_situacao = 'A'
					and	ie_ptu = 'S';

					if (qt_regra_w > 0) then
						cd_mat_number_inter_w := vet_tab_proc_guia_hon_w[j].cd_servico_pro;
					
						pls_obter_proced_conversao(	null, null, null,
										cd_estabelecimento_p, 4, null,
										3, 'R', null,
										null, null, cd_mat_number_inter_w,
										null, cd_procedimento_w, ie_origem_proced_w,
										nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
										null, null, null,
										'N', ie_priorizar_conv_pct_int_w);
					end if;

					if	((coalesce(nr_seq_material_w,0)) <> 0) then
						select	count(nr_sequencia)
						into STRICT	qt_material_w
						from	pls_material
						where	nr_sequencia	= nr_seq_material_w;
					end if;

					if (coalesce(qt_material_w,0) = 0) then
						ptu_obter_material_conversao(	vet_tab_proc_guia_hon_w[j].cd_servico_pro,
										vet_tab_proc_guia_hon_w[j].tp_tabela_pro,
										null, 
										'R', 
										'7', 
										null, 
										null,
										nr_seq_material_w,
										cd_servico_mat_w,
										ie_somente_codigo_w);
					end if;

					if (coalesce(nr_seq_material_w,0) = 0) then
						nr_seq_material_w	:= null;
					end if;

					-- A900

					if (coalesce(nr_seq_material_w::text, '') = '') then
						cd_mat_number_inter_w := vet_tab_proc_guia_hon_w[j].cd_servico_pro;
						
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', vet_tab_guia_honorario_w[i].nr_ver_tiss_dad_gui);
					end if;

					-- FEDERACAO

					if (coalesce(nr_seq_material_w::text, '') = '') then
						pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', vet_tab_guia_honorario_w[i].nr_ver_tiss_dad_gui);
					end if;	

					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
						nr_seq_material_w := null;
					end if;

				else
					--A origem do procedimento e buscado por regra existente no cadastro de regras / Procedimentos/ regra origem.

					pls_obter_proced_conversao(	vet_tab_proc_guia_hon_w[j].cd_servico_pro, null, null,
									cd_estabelecimento_p, 4, null,
									3, 'R', null,
									null, null, null,
									null, cd_procedimento_w, ie_origem_proced_w,
									nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
									null, null, null,
									ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w);

					-- Obter a origem padrao para os itens conforme a regra.

					ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', null, null);

					if (coalesce(ie_origem_proced_w::text, '') = '') then
						--jjung OS 483853 - 02/10/2012 - adicionado restricao para data de vigencia das regras cadastradas.

						ie_origem_proced_w := ie_origem_proced_padrao_w;
					end if;

					--Criado tratamento para atender as OS 575917 que solicita que seja buscado a ?ltima origem valida e a OS 644869 onde indica que deve ser respeitada a origem padrao do sistema	

					if (ie_origem_proc_valido_w	= 'S') then
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w
						and	ie_situacao = 'A';

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	max(ie_origem_proced)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_situacao = 'A';	
							
							-- Se nao encontrar a origem em procedimentos ativos, busca em procedimentos que nao estiverem ativos.

							if (coalesce(ie_origem_proced_w::text, '') = '') then
								select	max(ie_origem_proced)
								into STRICT	ie_origem_proced_w
								from	procedimento
								where	cd_procedimento = cd_procedimento_w;	
							end if;
						end if;

					else
						select	count(1)
						into STRICT	qt_proced_origem_w
						from	procedimento
						where	cd_procedimento = cd_procedimento_w
						and	ie_origem_proced = ie_origem_proced_w;
						--OS667827

						--Se este procedimento nao existir na origem padrao e selecionado o max origem proced OS 644869 Conforme solicitado foi realizado tratamento para caso nao

						if (qt_proced_origem_w = 0) then	
							-- Buscar a origem do procedimento ativo

							select	coalesce(max(ie_origem_proced),ie_origem_proced_w)
							into STRICT	ie_origem_proced_w
							from	procedimento
							where	cd_procedimento = cd_procedimento_w
							and	ie_origem_proced in (	SELECT	ie_origem_proced
											from	pls_regra_origem_proced
											where	ie_origem_proced != ie_origem_proced_w );
						end if;
					end if;

					select	count(1)
					into STRICT	qt_proc_valido_w
					from	procedimento
					where	cd_procedimento	= cd_procedimento_w
					and	ie_origem_proced = ie_origem_proced_w;

					-- Tem que deixar o item como NAO ENCONTRADO

					if (qt_proc_valido_w = 0) then
						cd_procedimento_w	:= null;
						ie_origem_proced_w	:= null;
					end if;
				end if;
				
				-- INSERT PTU NOTA SERVICO

				insert into ptu_nota_servico(	nr_sequencia,							dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,							nm_usuario_nrec,						cd_ato,
								cd_cnes_prest,							cd_especialidade,						cd_munic,
								cd_pacote,							cd_porte_anestesico,						cd_prestador,
								cd_prestador_req,						cd_procedimento,						cd_rec_prestador,
								cd_ref_material_fab,						cd_ref_material_fab_opme,					cd_servico,
								cd_unimed_autorizadora,						cd_unimed_pre_req,						cd_unimed_prestador,
								det_reg_anvisa,							ds_hora_procedimento,						ds_servico,
								ds_servico_aux,							dt_autoriz,							dt_pgto_prestador,
								dt_procedimento,						dt_solicitacao,							hr_final,
								hr_servico,							id_acres_urg_emer,						id_aviso_item,
								id_pag_forn,							ie_alto_custo,							ie_consistente,
								ie_origem_proced,						ie_pacote,							ie_rede_propria,
								ie_reembolso,							ie_tipo_data_regra,						ie_tipo_participacao,
								ie_tipo_pessoa_prestador,					ie_tipo_prestador,						ie_tipo_tabela,
								ie_via_acesso,							nm_fornecedor,							nm_prestador,
								nm_prestador_requisitante,					nm_profissional_prestador,					nr_autorizacao,
								nr_cbo_exec,							nr_cgc_cpf,							nr_cgc_cpf_req,
								nr_cnpj_fornecedor,						nr_cons_prof_prest,						nr_cons_prof_req,
								nr_guia_tiss,							nr_linha,							nr_lote,
								nr_nota,							nr_nota_fiscal_forn,						nr_nota_numerico,
								nr_reg_anvisa,							nr_seq_agrup_item_ptu,						nr_seq_aviso_material,
								nr_seq_aviso_procedimento,					nr_seq_a500,							nr_seq_composicao,
								nr_seq_conta_mat,						nr_seq_conta_proc,						nr_seq_material,
								nr_seq_nota,							nr_seq_nota_cobr,						nr_seq_pacote,
								nr_seq_pacote_agrup,						nr_seq_pacote_mat,						nr_seq_pacote_proc,
								nr_seq_proc_partic,						nr_seq_registro,						qt_procedimento,
								sg_cons_prof_prest,						sg_cons_prof_req,						sg_uf_cons_prest,
								sg_uf_cons_req,							tec_utilizada,							tipo_rede_min,
								tp_autoriz,							tx_procedimento,						unidade_medida,
								vl_adic_co,							vl_adic_filme,							vl_adic_procedimento,
								vl_custo_operacional,						vl_filme,							vl_pago_prest,
								vl_procedimento)	
						values (	nextval('ptu_nota_servico_seq'),					clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,							nm_usuario_p,							vet_tab_proc_guia_hon_w[j].cd_ato_proc,
								vet_tab_guia_honorario_w[i].cd_cnes_dad_exec,			null,								null,
								null,								vet_tab_proc_guia_hon_w[j].cd_porte_anestesico_pro,		vet_tab_proc_guia_hon_w[j].cd_prest_pro_equ_pro,
								null,								cd_procedimento_w,						null,
								vet_tab_proc_guia_hon_w[j].cd_referenci_mat_fab_dad_opme,	null,								vet_tab_proc_guia_hon_w[j].cd_servico_pro,
								null,								null,								vet_tab_proc_guia_hon_w[j].cd_uni_prest_pro_equ_pro,
								vet_tab_proc_guia_hon_w[j].nr_registro_anvisa_dad_opme,		vet_tab_proc_guia_hon_w[j].hr_inicial_pro,			null,
								null,								vet_tab_proc_guia_hon_w[j].dt_autorizacao_dad_aut,		vet_tab_proc_guia_hon_w[j].dt_pago_prestador_pag_pre,
								vet_tab_proc_guia_hon_w[j].dt_execucao_pro,			vet_tab_proc_guia_hon_w[j].dt_solicitacao_dad_aut,		vet_tab_proc_guia_hon_w[j].hr_final_pro,
								null,								vet_tab_proc_guia_hon_w[j].id_acrescimo_pro,			null,
								null,								null,								null,
								ie_origem_proced_w,						vet_tab_proc_guia_hon_w[j].id_pacote_pro,			null,
								null,								null,								vet_tab_proc_guia_hon_w[j].tp_participacao_equ_pro,
								null,								vet_tab_guia_honorario_w[i].tp_prestador_dad_exe,		vet_tab_proc_guia_hon_w[j].tp_tabela_pro,
								vet_tab_proc_guia_hon_w[j].via_acesso_pro,			null,								vet_tab_proc_guia_hon_w[j].nm_profissional_equ_pro,
								null,								vet_tab_proc_guia_hon_w[j].nm_profissional_equ_pro,		null,
								vet_tab_proc_guia_hon_w[j].cbo_equ_pro,				vet_tab_proc_guia_hon_w[j].cd_cpf_equ_pro,			nr_cpf_cnpj_req_w,
								vet_tab_proc_guia_hon_w[j].cd_cnpj_for_dad_opme,		vet_tab_proc_guia_hon_w[j].nr_conselho_dad_con_equ_pro,		null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								null,
								null,								null,								nr_seq_material_w,
								null,								nr_seq_nota_cobr_w,						null,
								null,								null,								null,
								null,								null,								vet_tab_proc_guia_hon_w[j].qt_paga_pro,
								vet_tab_proc_guia_hon_w[j].sg_conselho_dad_con_equ_pro,		null,								vet_tab_proc_guia_hon_w[j].uf_dad_con_equ_pro,
								null,								vet_tab_proc_guia_hon_w[j].tc_utilizada_pro,			null,
								null,								vet_tab_proc_guia_hon_w[j].ft_multiplicador_servico_pro,	vet_tab_proc_guia_hon_w[j].un_medida_pro,
								null,								null,								null,
								vet_tab_proc_guia_hon_w[j].vl_co_pago_val,			vet_tab_proc_guia_hon_w[j].vl_filme_pago_val,			null,
								vet_tab_proc_guia_hon_w[j].vl_serv_pago_val);

				select	max(nr_seq_prest_inter),
					max(tp_pessoa),
					max(nr_cnpj_cpf),
					max(cd_cnes_cont_exec),
					max(cd_munic_cont_exec),
					max(nm_prest_exec)
				into STRICT	nr_seq_prest_inter_w,
					tp_pessoa_w,
					nr_cnpj_cpf_w,
					cd_cnes_cont_exec_w,
					cd_munic_cont_exec_w,
					nm_prestador_w
				from	ptu_nota_cobranca
				where	nr_sequencia		= nr_seq_nota_cobr_w;

				if (coalesce(nr_seq_prest_inter_w::text, '') = '') then
					if (tp_pessoa_w = 'J') then
						cd_cgc_prestador_w		:= nr_cnpj_cpf_w;
						nr_cpf_prestador_w		:= null;
					elsif (tp_pessoa_w = 'F') then
						cd_cgc_prestador_w		:= null;
						nr_cpf_prestador_w		:= substr(nr_cnpj_cpf_w,4,11);
					end if;

					pls_gerar_prest_intercambio(	nr_cpf_prestador_w,	cd_cgc_prestador_w,			nm_prestador_w,
									cd_cnes_cont_exec_w,	cd_munic_cont_exec_w,			nm_usuario_p,
									null,			vet_tab_proc_guia_hon_w[j].cbo_equ_pro,	nr_seq_prest_inter_w,
									nr_seq_prestador_w);

					if (nr_seq_prest_inter_w IS NOT NULL AND nr_seq_prest_inter_w::text <> '') then
						update	ptu_nota_cobranca
						set	nr_seq_prest_inter	= nr_seq_prest_inter_w
						where	nr_sequencia		= nr_seq_nota_cobr_w;
					end if;
				end if;
			end if;
		end loop;
		
		-- COMPLEMENTO

		for l in 1..vet_tab_compl_guia_hon_w.count loop
			-- S? IRA FAZER O INSERT NA PTU_NOTA_COMPLEMENTO SE FOR DA MESMA NOTA COBRANCA 

			if (vet_tab_guia_honorario_w[i].id = vet_tab_compl_guia_hon_w[l].id_complemento)  then

				insert into ptu_nota_complemento(nr_sequencia,				dt_atualizacao,							dt_atualizacao_nrec,
								nm_usuario,				nm_usuario_nrec,						ds_complemento,
								especif_material,			ie_tipo_complemento,						nr_linha,
								nr_lote,				nr_nota,							nr_seq_nota_cobr)
						values (	nextval('ptu_nota_complemento_seq'),	clock_timestamp(),							clock_timestamp(),
								nm_usuario_p,				nm_usuario_p,							vet_tab_compl_guia_hon_w[l].nm_desc_compleme_dad_gui_com,
								null,					vet_tab_compl_guia_hon_w[l].tp_reg_cpl_dad_gui_com,		null,
								null,					null,								nr_seq_nota_cobr_w);
			end if;
		end loop;
	end loop;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_a700_imp_pck.carregar_arq_a700_xml ( nr_seq_arq_xml_p ptu_aviso_arq_xml.nr_sequencia%type, ie_tipo_arquivo_p ptu_aviso_arq_xml.ie_tipo_arquivo%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_serv_pre_pagto_p INOUT bigint) FROM PUBLIC;
