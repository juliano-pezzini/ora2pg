-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_pp_tit_pag_rec_pck.obter_restr_titulo_receber ( dt_referencia_lote_ini_p pls_pp_lote.dt_referencia_inicio%type, dt_referencia_lote_fim_p pls_pp_lote.dt_referencia_fim%type, ie_tipo_pessoa_p pls_evento_regra_tit_rec.ie_tipo_pessoa%type, cd_pessoa_fisica_p pls_evento_regra_tit_rec.cd_pessoa_fisica%type, cd_cgc_p pls_evento_regra_tit_rec.cd_cgc%type, nr_seq_trans_fin_contab_p pls_evento_regra_tit_rec.nr_seq_trans_fin_contab%type, ie_tipo_titulo_p pls_evento_regra_tit_rec.ie_tipo_titulo%type, ie_origem_titulo_p pls_evento_regra_tit_rec.ie_origem_titulo%type, nr_seq_classe_tit_rec_p pls_evento_regra_tit_rec.nr_seq_classe_tit_rec%type, nr_seq_pagador_p pls_evento_regra_tit_rec.nr_seq_pagador%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

					
ds_restricao_w			varchar(12000);
ds_alias_tit_rec_w		varchar(60);
ds_alias_prestador_tmp_w	varchar(60);
ie_tipo_pessoa_w		varchar(5);


BEGIN

-- inicia a variável com null
ds_restricao_w := null;
ie_tipo_pessoa_w := ie_tipo_pessoa_p;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	ie_tipo_pessoa_w := 'F';
elsif (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	ie_tipo_pessoa_w := 'J';
end if;

ds_alias_tit_rec_w := pls_pp_tit_pag_rec_pck.obter_alias_tabela('titulo_receber');
ds_alias_prestador_tmp_w := pls_pp_tit_pag_rec_pck.obter_alias_tabela('pls_pp_prestador_tmp');

-- Se a regra de título a receber está configurada para 'Ambos', então, verifica se a PF ou PJ do título é prestador
if (ie_tipo_pessoa_w = 'A') then
	ds_restricao_w := ds_restricao_w || 	' and exists (	select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_pp_prestador_tmp ' || ds_alias_prestador_tmp_w || pls_util_pck.enter_w ||
						'		where	' || ds_alias_prestador_tmp_w || '.cd_pessoa_fisica = ' || ds_alias_tit_rec_w || '.cd_pessoa_fisica' || pls_util_pck.enter_w ||
						'		union all ' || pls_util_pck.enter_w || 
						'		select	1' || pls_util_pck.enter_w || 
						'		from	pls_pp_prestador_tmp ' || ds_alias_prestador_tmp_w || pls_util_pck.enter_w ||
						'		where	' || ds_alias_prestador_tmp_w || '.cd_cgc = ' || ds_alias_tit_rec_w || '.cd_cgc)' || pls_util_pck.enter_w;

-- Se a regra de título a receber está configurada para 'Pessoa física' e não informou a pessoa física
elsif (ie_tipo_pessoa_w = 'F') and (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	ds_restricao_w := ds_restricao_w || 	' and exists (	select	1' || pls_util_pck.enter_w ||
						'		from	pls_pp_prestador_tmp ' || ds_alias_prestador_tmp_w || pls_util_pck.enter_w ||
						'		where	' || ds_alias_prestador_tmp_w || '.cd_pessoa_fisica = ' || ds_alias_tit_rec_w || '.cd_pessoa_fisica)' || pls_util_pck.enter_w;
						
-- Se a regra de título a receber está configurada para 'Pessoa física' e informou a pessoa física
elsif (ie_tipo_pessoa_w = 'F') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 	' and exists (	select	1' || pls_util_pck.enter_w ||
						'		from	pls_pp_prestador_tmp ' || ds_alias_prestador_tmp_w || pls_util_pck.enter_w ||
						'		where	' || ds_alias_prestador_tmp_w || '.cd_pessoa_fisica = ' || ds_alias_tit_rec_w || '.cd_pessoa_fisica' || pls_util_pck.enter_w || 
						'		and 	' || ds_alias_prestador_tmp_w || '.cd_pessoa_fisica = :cd_pessoa_fisica_pc) ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':cd_pessoa_fisica_pc', cd_pessoa_fisica_p, valor_bind_p);
	
-- Se a regra de título a receber está configurada para 'Pessoa jurídica' e informou a pessoa jurídica
elsif (ie_tipo_pessoa_w = 'J') and (coalesce(cd_cgc_p::text, '') = '') then
	ds_restricao_w := ds_restricao_w || 	' and exists (	select	1' || pls_util_pck.enter_w ||
						'		from	pls_pp_prestador_tmp ' || ds_alias_prestador_tmp_w || pls_util_pck.enter_w ||
						'		where	' || ds_alias_prestador_tmp_w || '.cd_cgc = ' || ds_alias_tit_rec_w || '.cd_cgc)' || pls_util_pck.enter_w;
						
-- Se a regra de título a receber está configurada para 'Pessoa jurídica' e não informou a pessoa jurídica
elsif (ie_tipo_pessoa_w = 'J') and (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 	' and exists (	select	1' || pls_util_pck.enter_w ||
						'		from	pls_pp_prestador_tmp ' || ds_alias_prestador_tmp_w || pls_util_pck.enter_w ||
						'		where	' || ds_alias_prestador_tmp_w || '.cd_cgc = ' || ds_alias_tit_rec_w || '.cd_cgc' || pls_util_pck.enter_w || 
						'		and 	' || ds_alias_prestador_tmp_w || '.cd_cgc = :cd_cgc_pc) ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':cd_cgc_pc', cd_cgc_p, valor_bind_p);
end if;

-- Se o campo 'Data referência título' em 'OPS - Gestão de Operadora > Parâmetros da OPS > Pagamento produção' estiver como 'Data de emissão'
if (pls_pp_lote_pagamento_pck.ie_data_ref_titulo_w = 'E') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tit_rec_w || '.dt_emissao between :dt_referencia_inicio_pc and :dt_referencia_fim_pc ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':dt_referencia_inicio_pc', dt_referencia_lote_ini_p, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':dt_referencia_fim_pc', dt_referencia_lote_fim_p, valor_bind_p);
	
-- Se o campo 'Data referência título' em 'OPS - Gestão de Operadora > Parâmetros da OPS > Pagamento produção' estiver como 'Data de vencimento'
elsif (pls_pp_lote_pagamento_pck.ie_data_ref_titulo_w = 'V') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tit_rec_w || '.dt_pagamento_previsto between :dt_referencia_inicio_pc and :dt_referencia_fim_pc ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':dt_referencia_inicio_pc', dt_referencia_lote_ini_p, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':dt_referencia_fim_pc', dt_referencia_lote_fim_p, valor_bind_p);
end if;

-- Se a regra de título a receber tem 'Transação financeira contábil' informada
if (nr_seq_trans_fin_contab_p IS NOT NULL AND nr_seq_trans_fin_contab_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 	'and	' || ds_alias_tit_rec_w || '.nr_seq_trans_fin_contab = :nr_seq_trans_fin_contab_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_trans_fin_contab_pc', nr_seq_trans_fin_contab_p, valor_bind_p);
end if;

-- Se a regra de título a receber tem 'Tipo de título' informada
if (ie_tipo_titulo_p IS NOT NULL AND ie_tipo_titulo_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 	'and	' || ds_alias_tit_rec_w || '.ie_tipo_titulo = :ie_tipo_titulo_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':ie_tipo_titulo_pc', ie_tipo_titulo_p, valor_bind_p);
end if;

-- Se a regra de título a receber tem 'Origem título' informada
if (ie_origem_titulo_p IS NOT NULL AND ie_origem_titulo_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 	'and	' || ds_alias_tit_rec_w || '.ie_origem_titulo = :ie_origem_titulo_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':ie_origem_titulo_pc', ie_origem_titulo_p, valor_bind_p);
end if;

-- Se a regra de título a receber tem 'Classe título' informada
if (nr_seq_classe_tit_rec_p IS NOT NULL AND nr_seq_classe_tit_rec_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 	'and	' || ds_alias_tit_rec_w || '.nr_seq_classe = :nr_seq_classe_tit_rec_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_classe_tit_rec_pc', nr_seq_classe_tit_rec_p, valor_bind_p);
end if;

-- pagador verifica na tabela da mensalidade
if (nr_seq_pagador_p IS NOT NULL AND nr_seq_pagador_p::text <> '') then

	ds_restricao_w := ds_restricao_w || 	'and	exists(	select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_mensalidade x' || pls_util_pck.enter_w ||
						'		where	x.nr_sequencia = ' || ds_alias_tit_rec_w || '.nr_seq_mensalidade' || pls_util_pck.enter_w ||
						'		and	x.nr_seq_pagador = :nr_seq_pagador_pc) ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_pagador_pc', nr_seq_pagador_p, valor_bind_p);
end if;

ds_restricao_w := ds_restricao_w || 	'and	' || ds_alias_tit_rec_w || '.ie_situacao = ''1''' || pls_util_pck.enter_w ||
					'and	' || ds_alias_tit_rec_w || '.vl_saldo_titulo > 0 ' || pls_util_pck.enter_w ||
					'and	' || ds_alias_tit_rec_w || '.cd_estabelecimento = :cd_estabelecimento_pc';
valor_bind_p := sql_pck.bind_variable(':cd_estabelecimento_pc', cd_estabelecimento_p, valor_bind_p);

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_pp_tit_pag_rec_pck.obter_restr_titulo_receber ( dt_referencia_lote_ini_p pls_pp_lote.dt_referencia_inicio%type, dt_referencia_lote_fim_p pls_pp_lote.dt_referencia_fim%type, ie_tipo_pessoa_p pls_evento_regra_tit_rec.ie_tipo_pessoa%type, cd_pessoa_fisica_p pls_evento_regra_tit_rec.cd_pessoa_fisica%type, cd_cgc_p pls_evento_regra_tit_rec.cd_cgc%type, nr_seq_trans_fin_contab_p pls_evento_regra_tit_rec.nr_seq_trans_fin_contab%type, ie_tipo_titulo_p pls_evento_regra_tit_rec.ie_tipo_titulo%type, ie_origem_titulo_p pls_evento_regra_tit_rec.ie_origem_titulo%type, nr_seq_classe_tit_rec_p pls_evento_regra_tit_rec.nr_seq_classe_tit_rec%type, nr_seq_pagador_p pls_evento_regra_tit_rec.nr_seq_pagador%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
