-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION new_icu_notifications_pck.get_overdue_details (nm_usuario_p text) RETURNS SETOF T_ALERT_DETAILS_TABLE AS $body$
DECLARE


cd_perfil_w				perfil.cd_perfil%type;
cd_estabelecimento_w 	estabelecimento.cd_estabelecimento%type;
cd_setor_atendimento_w 	setor_atendimento.cd_setor_atendimento%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
cd_pessoa_fisica_w 		pessoa_fisica.cd_pessoa_fisica%type;
ie_medico_w 			varchar(1);
t_alert_details_w		t_alert_details;

qt_hor_pendente_w		numeric(30) := 0;
dt_inicial_w			timestamp;
dt_final_w				timestamp;

ie_horarios_dietas_orais_w	varchar(1);
ie_consistir_med_w			varchar(1);
ie_consistir_dieta_w		varchar(1);
ie_consistir_sup_w			varchar(1);
ie_consistir_mat_w			varchar(1);
ie_consistir_rec_w			varchar(1);
ie_consistir_sae_w			varchar(1);
ie_consistir_me_w			varchar(1);
ie_consistir_nan_w			varchar(1);
ie_consistir_sol_w			varchar(1);
ie_consistir_ccg_w			varchar(1);
ie_consistir_gas_w			varchar(1);
ie_etapas_sol_w     		varchar(1);
qt_horas_aten_sol_w   		varchar(255);
qt_minutos_w       			varchar(255);
qt_minutos_disp_w     		varchar(255);
ie_consiste_adm_ccg_w		varchar(255);
dt_entrada_w timestamp;

cEncounter CURSOR FOR
	SELECT  nr_atendimento,
			obter_nome_paciente(nr_atendimento) as nm_paciente,
			cd_pessoa_fisica
	from	atendimento_paciente
	where   coalesce(dt_alta::text, '') = ''
	and (ie_medico_w = 'S' and (cd_medico_resp = cd_pessoa_fisica_w)
	or (ie_medico_w = 'N' and obter_enfermeiro_resp(nr_atendimento,'C') = cd_pessoa_fisica_w));

cOverdueItems CURSOR FOR
	SELECT  dt_horario as dt_evento,
			ds_item as descricao
	from 	adep_pend_prev_v
	where	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
										cd_estabelecimento_w,
										cd_setor_atendimento_w,
										cd_perfil_w,
										CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END ,
										CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END ,
										ie_origem_proced,
										nr_seq_proc_interno,
										cd_setor_prescr,
										null,
										null,
										null)	= 'S'
	and 	dt_inicio_prescr < clock_timestamp() and dt_validade_prescr > clock_timestamp()
	and 	dt_horario between dt_entrada_w and clock_timestamp()
	and		nr_atendimento = nr_atendimento_w
	and		ie_tipo_item = 'M'
	and		ie_dose_especial <> 'S'
	and		ie_consistir_med_w = 'S'
	
union

	SELECT  dt_horario as dt_evento,
			ds_item as descricao
	from 	adep_pend_prev_v
	where	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
										cd_estabelecimento_w,
										cd_setor_atendimento_w,
										cd_perfil_w,
										CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END ,
										CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END ,
										ie_origem_proced,
										nr_seq_proc_interno,
										cd_setor_prescr,
										null,
										null,
										null)	= 'S'
	and 	dt_inicio_prescr > clock_timestamp() - interval '1 days' and dt_validade_prescr > clock_timestamp()
	and 	dt_horario between dt_entrada_w and clock_timestamp()
	and		nr_atendimento = nr_atendimento_w
	and		ie_tipo_item = 'M'
	and		ie_dose_especial = 'S'
	and 	ie_consistir_med_w = 'S'
	
union

	select  dt_horario as dt_evento,
			ds_item as descricao
	from 	adep_pend_prev_v
	where	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item(ie_tipo_item),
										cd_estabelecimento_w,
										cd_setor_atendimento_w,
										cd_perfil_w,
										CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END ,
										CASE WHEN ie_tipo_item='R' THEN null  ELSE somente_numero(cd_item) END ,
										ie_origem_proced,
										nr_seq_proc_interno,
										cd_setor_prescr,
										null,
										null,
										null)	= 'S'
	and 	dt_horario between dt_inicial_w and clock_timestamp()
	and 	dt_validade_prescr > clock_timestamp()
	and		nr_atendimento = nr_atendimento_w
	and		ie_tipo_item in ('D', 'S', 'MAT', 'P', 'L', 'R', 'E', 'CIG', 'CCG', 'NAN', 'O')
	and 	((ie_tipo_item = 'D' and ie_consistir_dieta_w = 'S')
	or (ie_tipo_item = 'S' and ie_consistir_sup_w = 'S' and ie_horarios_dietas_orais_w = 'S')
	or (ie_tipo_item = 'MAT' and ie_consistir_mat_w = 'S')
	or (ie_tipo_item in ('P', 'L') and ADEP_obter_se_consiste_item(ie_tipo_item, cd_perfil_w, cd_item, ie_origem_proced, nr_seq_proc_interno) = 'S')
	or (ie_tipo_item = 'R' and ie_consistir_rec_w = 'S')
	or (ie_tipo_item = 'E' and ie_consistir_sae_w = 'S')
	or (ie_tipo_item = 'ME' and ie_consistir_me_w = 'S')
	or		(((ie_consiste_adm_ccg_w = 'S') or (ie_tipo_item <> 'CCG'))
	and 	ADEP_obter_se_consiste_item(ie_tipo_item, cd_perfil_w,cd_item, ie_origem_proced, nr_seq_proc_interno) = 'S')
	or (ie_tipo_item = 'NAN' and ie_consistir_nan_w = 'S')
	or (ie_tipo_item = 'O' and ie_consistir_gas_w = 'S'))
	
union

	select  a.dt_prev_prox_etapa as dt_evento,
			ds_solucao as descricao
	from	adep_sol_prescr_v a,
			prescr_mat_hor b
	where   a.nr_prescricao = b.nr_prescricao
	and 	a.nr_seq_solucao = b.nr_seq_solucao
	and		b.dt_horario between dt_entrada_w and clock_timestamp()
	and 	a.dt_inicio_prescr between dt_entrada_w and clock_timestamp()
	and 	a.dt_validade_prescr > clock_timestamp()
	and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and		coalesce(a.dt_susp_prescr::text, '') = ''
	and 	coalesce(b.dt_suspensao::text, '') = ''
	and		a.ie_suspenso <> 'S'
	and		coalesce(a.ie_acm,'N') <> 'S'
	and		coalesce(a.ie_adep,'N') = 'S'
	and		a.ie_tipo_solucao = 1
	and		((a.ie_status_solucao = 'N') or
			((ie_etapas_sol_w = 'S') and (coalesce(a.nr_etapas,0) > 1) and (a.ie_status_solucao in ('I', 'INT')) and
			((a.dt_prev_prox_etapa IS NOT NULL AND a.dt_prev_prox_etapa::text <> '') and (clock_timestamp() > (coalesce(a.dt_prev_prox_etapa,clock_timestamp()) - coalesce(qt_horas_aten_sol_w,'30') / 1440)))))
	and		a.nr_atendimento = nr_atendimento_w
	and 	ie_consistir_sol_w = 'S'
	
union

	select  dt_prev_prox_etapa as dt_evento,
			ds_solucao as descricao
	from    adep_sol_prescr_v
	where   coalesce(dt_susp_prescr::text, '') = ''
	and     ie_suspenso <> 'S'
	and     coalesce(ie_acm,'N') <> 'S'
	and     ie_status_solucao <> 'T'
	and   	dt_status between dt_entrada_w and clock_timestamp()
	and 	dt_inicio_prescr between dt_entrada_w and clock_timestamp()
	and 	dt_validade_prescr > clock_timestamp()
	and     nr_atendimento = nr_atendimento_w
	and		Obter_se_consiste_min_pausa(nr_prescricao, nr_seq_solucao) = 'S'
	and     coalesce(ie_adep,'N') = 'S'
	and     ie_tipo_solucao = 2
	and		coalesce(Obter_ult_evento_SNE(nr_prescricao, nr_seq_solucao),0) not in (1,3)
	and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and 	ie_consistir_sup_w = 'S'
	
union

	select  a.dt_retirada_prev as dt_evento,
			b.ds_dispositivo as descricao
	from	atend_pac_dispositivo a,
			dispositivo b
	where	a.nr_seq_dispositivo = b.nr_sequencia
	and		a.nr_atendimento = nr_atendimento_w
	and		coalesce(a.dt_retirada::text, '') = ''
	and		(a.dt_retirada_prev IS NOT NULL AND a.dt_retirada_prev::text <> '')
	and		clock_timestamp() > a.dt_retirada_prev - CASE WHEN coalesce(coalesce(qt_minutos_w,'60')::text, '') = '' THEN  0  ELSE coalesce(qt_minutos_w,'60')/1440 END
	
union

	select  dt_horario as dt_evento,
			ds_item as descricao
	from	adep_glic_pend_v
	where	adep_obter_regra_inclusao(	adep_obter_tipo_regra_inc_item('G'),
										cd_estabelecimento_w,
										cd_setor_atendimento_w,
										cd_perfil_w,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null) = 'S'
	and		dt_horario between dt_entrada_w and clock_timestamp()
	and 	dt_validade_prescr > clock_timestamp()
	and 	dt_inicio_prescr  between dt_entrada_w and clock_timestamp()
	and		nr_atendimento		= nr_atendimento_w
	
union

	select  a.dt_controle as dt_evento,
			obter_desc_expressao(624689) as descricao
	from	atendimento_glicemia a,
			atend_glicemia c,
			prescr_medica b
	where	a.nr_atendimento 	= b.nr_atendimento
	and		c.nr_sequencia		= a.nr_seq_glicemia
	and		c.nr_atendimento	= a.nr_atendimento
	and		c.nr_atendimento	= b.nr_atendimento
	and		c.nr_prescricao		= b.nr_prescricao
	and 	dt_inicio_prescr between dt_entrada_w and clock_timestamp()
	and 	dt_validade_prescr > clock_timestamp()
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		((coalesce(a.qt_ui_insulina_calc,0) > 0) or (coalesce(a.qt_ui_insulina_adm,0) > 0) or (coalesce(a.qt_ui_insulina_int_calc,0) > 0) or (coalesce(a.qt_ui_insulina_int_adm,0) > 0) or (coalesce(a.qt_glicose,0) > 0) or (coalesce(a.qt_glicose_adm,0) > 0))
	and		coalesce(ie_adm_confirmada,'N') <> 'S'
	and		coalesce(ie_status_glic, 'P') = 'N'
	and		clock_timestamp() > a.dt_controle + coalesce(qt_minutos_w,'60') / 1440
	and		b.nr_atendimento = nr_atendimento_w
	and		ie_consistir_ccg_w = 'S';
BEGIN

	dt_inicial_w := clock_timestamp() - interval '2 days';
	dt_final_w	 := clock_timestamp() + interval '3 days';

	cd_perfil_w	:= obter_perfil_ativo;
	cd_estabelecimento_w := obter_estabelecimento_ativo;
	cd_pessoa_fisica_w := obter_codigo_usuario(nm_usuario_p);
	ie_medico_w := obter_se_usuario_medico(nm_usuario_p);

	obter_Param_Usuario(1113, 144, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_etapas_sol_w);
	obter_Param_Usuario(1113, 148, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_horarios_dietas_orais_w);
	obter_Param_Usuario(1113, 153, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, qt_horas_aten_sol_w);
	obter_Param_Usuario(1113, 198, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, qt_minutos_w);
	obter_Param_Usuario(1113, 200, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, qt_minutos_disp_w);
	obter_Param_Usuario(1113, 543, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_consiste_adm_ccg_w);

	ie_consistir_med_w 		:= ADEP_obter_se_consiste_item('M', cd_perfil_w,null, null, null);
	ie_consistir_dieta_w	:= ADEP_obter_se_consiste_item('D', cd_perfil_w,null, null, null);
	ie_consistir_sup_w		:= ADEP_obter_se_consiste_item('S', cd_perfil_w,null, null, null);
	ie_consistir_mat_w		:= ADEP_obter_se_consiste_item('MAT', cd_perfil_w,null, null, null);
	ie_consistir_rec_w		:= ADEP_obter_se_consiste_item('R', cd_perfil_w,null, null, null);
	ie_consistir_sae_w		:= ADEP_obter_se_consiste_item('E', cd_perfil_w,null, null, null);
	ie_consistir_me_w		:= ADEP_obter_se_consiste_item('ME', cd_perfil_w,null, null, null);
	ie_consistir_nan_w		:= ADEP_obter_se_consiste_item('NAN', cd_perfil_w,null, null, null);
	ie_consistir_gas_w		:= ADEP_obter_se_consiste_item('O', cd_perfil_w,null, null, null);
	ie_consistir_sol_w 		:= ADEP_obter_se_consiste_item('SOL', cd_perfil_w, null,null, null);
	ie_consistir_ccg_w		:= ADEP_obter_se_consiste_item('CCG', cd_perfil_w,null,null, null);

	for c_encounter_w in cEncounter
	loop

		nr_atendimento_w := c_encounter_w.nr_atendimento;

		cd_setor_atendimento_w := Obter_Setor_Atendimento(nr_atendimento_w);

		select 	max(dt_entrada)
		into STRICT	dt_entrada_w
		from 	atendimento_paciente
		where 	nr_atendimento = nr_atendimento_w;

		for c_overdue_item_w in cOverdueItems
		loop

			t_alert_details_w.nr_atendimento	:= nr_atendimento_w;
			t_alert_details_w.dt_evento 		:= c_overdue_item_w.dt_evento;
			t_alert_details_w.nm_paciente 		:= c_encounter_w.nm_paciente;
			t_alert_details_w.ds_evento			:= c_overdue_item_w.descricao;
			t_alert_details_w.ie_funcao			:= 'ADEP';

			RETURN NEXT t_alert_details_w;

		end loop;

	end loop;

	return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION new_icu_notifications_pck.get_overdue_details (nm_usuario_p text) FROM PUBLIC;
