-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE conciliar_integr_resp_rec_pck.gerar_analise_grg () AS $body$
DECLARE


nr_seq_analise_w	lote_audit_hist.nr_sequencia%type;
nr_seq_guia_w		lote_audit_hist_guia.nr_sequencia%type;
nr_interno_conta_w	conta_paciente.nr_interno_conta%type;
cd_autorizacao_w	conta_paciente_guia.cd_autorizacao%type;
vl_guia_acum_w		conta_paciente_guia.vl_guia%type;
vl_guia_w		conta_paciente_guia.vl_guia%type;
vl_total_acatado_w	imp_resp_recurso.VL_TOTAL_ACATADO%type;
vl_total_glosado_w	imp_resp_recurso.VL_TOTAL_GLOSADO%type;
vl_total_informado_w	imp_resp_recurso.VL_TOTAL_INFORMADO%type;
vl_total_recursado_w	imp_resp_recurso.VL_TOTAL_RECURSADO%type;
nr_seq_item_w           lote_audit_hist_item.nr_sequencia%type;

cd_motivo_glosa_w	motivo_glosa.cd_motivo_glosa%type;
cd_resposta_w		motivo_glosa.cd_resposta%type;	
ie_acao_glosa_w		motivo_glosa.ie_acao_glosa%type;
vl_amenor_w		lote_audit_hist_item.vl_amenor%type;
nr_seq_analise_antiga_w lote_audit_hist.nr_sequencia%type;
nr_seq_lote_antigo_w	lote_auditoria.nr_sequencia%type;
nr_analise_antiga_w	lote_audit_hist.nr_analise%type;
nr_seq_analise_nova_w	lote_audit_hist.nr_analise%type;
j			integer;
k			integer;
BEGIN
nr_seq_analise_w := 0;
j := 0;
k := 0;

if (current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v.count > 0) then
	for current_setting('conciliar_integr_resp_rec_pck.i')::integer in current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v.first .. current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v.last loop

		if (current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).ie_status = 'C') then

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_analise_w
			from	lote_audit_hist
			where	nr_seq_lote_audit = current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_seq_lote_grg
			and	coalesce(dt_envio::text, '') = ''
			and	coalesce(dt_fechamento::text, '') = '';


			if (nr_seq_analise_w = 0) then

				/*select	VL_TOTAL_ACATADO,
					VL_TOTAL_GLOSADO,
					VL_TOTAL_INFORMADO,
					VL_TOTAL_RECURSADO
				into	vl_total_acatado_w,
					vl_total_glosado_w,
					vl_total_informado_w,
					vl_total_recursado_w
				from	imp_resp_recurso a
				where	nr_sequencia = campos_lote_w(i).nr_seq_resp_recurso;*/



				select 	nextval('lote_audit_hist_seq')
				into STRICT	nr_seq_analise_w
				;			

                if (current_setting('conciliar_integr_resp_rec_pck.ie_opcao_w')::varchar(2) = 'V') then
                    current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).ie_status := 'V';
                else
				INSERT INTO LOTE_AUDIT_HIST(	NR_SEQUENCIA,
								IE_STATUS,
								NM_USUARIO_RESP,
								DT_LOTE,
								VL_GLOSA,
								VL_RECURSO,
								DT_ATUALIZACAO,
								NM_USUARIO,
								DT_ATUALIZACAO_NREC,
								NM_USUARIO_NREC,
								VL_PAGO,
								NR_SEQ_LOTE_AUDIT,
								NR_ANALISE,
								DT_INTEGRACAO)
							VALUES (nr_seq_analise_w,
								'A', --A - ABERTO
								null,
								clock_timestamp(),
								0,
								0,
								clock_timestamp(),
								'Integration',
								clock_timestamp(),
								'Integration',
								0,
								current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_seq_lote_grg,
								'1',
								clock_timestamp());
                 end if;
			end if;



			for j in current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v.first..campos_guia_w.last loop
				CALL CALL CALL conciliar_integr_resp_rec_pck.print(j || ' conta: ' || current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta);
				if (current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_seq_protocolo = current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_seq_protocolo) and (current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta > 0) and (current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].ie_status = 'C') then


					select	max(l.nr_sequencia),
						max(a.nr_analise),
						max(a.nr_sequencia)
					into STRICT	nr_seq_lote_antigo_w,
						nr_analise_antiga_w,
						nr_seq_analise_antiga_w
					from	lote_audit_hist_guia g,
						lote_audit_hist a,
						lote_auditoria l
					where	a.nr_sequencia = g.nr_seq_lote_hist
					and	a.nr_sequencia = (SELECT max(x.nr_sequencia) from lote_audit_hist x where x.nr_seq_lote_audit = l.nr_sequencia)
					and	l.nr_sequencia = a.nr_Seq_lote_audit
					and	coalesce(l.dt_fechamento::text, '') = ''
					and	(a.dt_envio IS NOT NULL AND a.dt_envio::text <> '')
					and	(a.dt_fechamento IS NOT NULL AND a.dt_fechamento::text <> '')
					and	g.nr_interno_conta = current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta
					and	g.cd_autorizacao = coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].cd_autorizacao,current_setting('conciliar_integr_resp_rec_pck.not_informed_w')::varchar(100))
					and	l.nr_sequencia < current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_seq_lote_grg;


					if (nr_seq_lote_antigo_w > 0) then

						select	coalesce(max(nr_sequencia),0)
						into STRICT	nr_seq_analise_nova_w
						from	lote_audit_hist
						where	coalesce(dt_fechamento::text, '') = ''
						and	coalesce(dt_envio::text, '') = ''
						and	nr_Seq_lote_audit = nr_seq_lote_antigo_w;

						if (nr_seq_analise_nova_w = 0) then

							select	nextval('lote_audit_hist_seq')
							into STRICT	nr_seq_analise_w
							;

                            if (current_setting('conciliar_integr_resp_rec_pck.ie_opcao_w')::varchar(2) = 'V') then
                                current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].ie_status := 'V';
                            else
							INSERT INTO LOTE_AUDIT_HIST(	NR_SEQUENCIA,
											IE_STATUS,
											NM_USUARIO_RESP,
											DT_LOTE,
											VL_GLOSA,
											VL_RECURSO,
											DT_ATUALIZACAO,
											NM_USUARIO,
											DT_ATUALIZACAO_NREC,
											NM_USUARIO_NREC,
											VL_PAGO,
											NR_SEQ_LOTE_AUDIT,
											NR_ANALISE,
											DT_INTEGRACAO)
										VALUES (nr_seq_analise_w,
											'A', --A - ABERTO
											null,
											clock_timestamp(),
											0,
											0,
											clock_timestamp(),
											'Integration',
											clock_timestamp(),
											'Integration',
											0,
											nr_seq_lote_antigo_w,
											nr_analise_antiga_w,
											clock_timestamp());
                            end if;
						else
							nr_seq_analise_w := nr_seq_analise_nova_w;
						end if;

					end if;

					current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_seq_analise_antiga := nr_seq_analise_antiga_w;
					current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_seq_analise_atual := nr_seq_analise_w;

					begin
						select	g.nr_sequencia
						into STRICT	nr_seq_guia_w
						from	lote_audit_hist_guia g
						where	g.nr_interno_conta = current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta
						and	g.cd_autorizacao = coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].cd_autorizacao,current_setting('conciliar_integr_resp_rec_pck.not_informed_w')::varchar(100))
						and	g.nr_seq_lote_hist = nr_seq_analise_w;
					exception
					when others then
						nr_seq_guia_w := 0;
					end;			


					if (nr_seq_guia_w = 0) then

						select	nextval('lote_audit_hist_guia_seq')
						into STRICT	nr_seq_guia_w
						;

                        if (current_setting('conciliar_integr_resp_rec_pck.ie_opcao_w')::varchar(2) = 'V') then
                            current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].ie_status := 'V';
                        else
						insert	into lote_audit_hist_guia(cd_autorizacao,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec,
							nr_interno_conta,
							nr_seq_lote_hist,
							nr_sequencia,
							ie_guia_sem_saldo,
							vl_guia,
							vl_saldo_guia,
							dt_integracao,
							dt_pagamento)
						values (coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].cd_autorizacao,current_setting('conciliar_integr_resp_rec_pck.not_informed_w')::varchar(100)),
							clock_timestamp(),
							clock_timestamp(),
							'Integration',
							'Integration',
							current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta,
							nr_seq_analise_w,
							nr_seq_guia_w,
							'N',
							current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].vl_guia,
							current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].vl_saldo,
							clock_timestamp(),
							conciliar_integr_resp_rec_pck.obter_dt_pagto_guia(current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].cd_autorizacao, current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta));
                        end if;

						if (current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v.count > 0) then	
							for k in current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v.first ..campos_itens_w.last loop

								if (current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].nr_interno_conta = current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].nr_interno_conta) and (current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].cd_autorizacao = current_setting('conciliar_integr_resp_rec_pck.campos_guia_w')::campos_guia_v[j].cd_autorizacao) and (current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].ie_status = 'C') then


									select 	max(cd_motivo_glosa) cd_motivo_glosa,
										max(cd_resposta) cd_resposta,
										max(ie_acao_glosa) ie_acao_glosa
									into STRICT	cd_motivo_glosa_w,
										cd_resposta_w,
										ie_acao_glosa_w
										from (
										SELECT	cd_motivo_glosa cd_motivo_glosa,
											cd_resposta cd_resposta,
											ie_acao_glosa ie_acao_glosa
										from	motivo_glosa
										where 	ie_situacao = 'A'
										and	clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp())
										and	cd_motivo_glosa_conv = current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].cd_motivo_interno
										
union all

										SELECT a.cd_motivo_glosa cd_motivo_glosa,
											b.cd_resposta cd_resposta,
											b.ie_acao_glosa ie_acao_glosa
										from	tiss_motivo_glosa a,
											motivo_glosa b
										where	a.cd_motivo_tiss = current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].cd_glosa
										and	a.cd_motivo_glosa = b.cd_motivo_glosa) alias21;


									vl_amenor_w := 	current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_recursado;
									ie_acao_glosa_w := 'R';

									if (coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_glosa_aceita,0) > 0) then

										ie_acao_glosa_w := 'A';

										if (coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_recursado,0) - coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_glosa_aceita,0) > 0) then

											vl_amenor_w := coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_recursado,0) - coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_glosa_aceita,0);
											ie_acao_glosa_w := 'P';
										end if;

									end if;

									select	nextval('lote_audit_hist_item_seq')
									into STRICT	nr_seq_item_w
									;								

                                    if (current_setting('conciliar_integr_resp_rec_pck.ie_opcao_w')::varchar(2) = 'V') then
                                        current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].ie_status := 'V';
                                    else
									insert	into lote_audit_hist_item(	cd_motivo_glosa,
														cd_resposta,
														ds_observacao,
														dt_atualizacao,
														ie_acao_glosa,
														nm_usuario,
														nr_seq_guia,
														nr_seq_lote,
														nr_seq_matpaci,
														nr_seq_propaci,
														nr_Seq_partic,
														nr_sequencia,
														vl_glosa,
														vl_amenor,
														vl_pago,
														qt_item,
														cd_setor_responsavel,
														cd_setor_atendimento,
														vl_saldo_amenor,
														vl_saldo,
														vl_glosa_informada,
														vl_adicional,
														cd_motivo_glosa_tiss,
														DS_JUSTIFICATIVA_OPER,
														dt_historico,
														vl_acatado,
														nm_usuario_resp,
														nr_protocolo_operadora)
									values             			(cd_motivo_glosa_w,
														cd_resposta_w,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].ds_justificativa_prest,
														clock_timestamp(),
														ie_acao_glosa_w,
														'Integration',
														nr_seq_guia_w,
														nr_seq_analise_w,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].nr_seq_matpaci,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].nr_seq_propaci,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].nr_Seq_partic,
														nr_seq_item_w,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_glosa_aceita,
														vl_amenor_w,
														0,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].qt_executada,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].cd_setor_responsavel,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].cd_setor_exec,
														0,
														0,
														(coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_recursado, 0) + coalesce(current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_glosa_aceita, 0)),
														0,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].cd_glosa,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].DS_JUSTIFICATIVA_OPER,
														clock_timestamp(),
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].vl_acatado,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].nm_usuario_responsavel,
														current_setting('conciliar_integr_resp_rec_pck.campos_itens_w')::campos_itens_v[k].nr_protocolo_item);
                                    end if;
								end if;


							end loop;
						end if;

					end  if;



				end if;


			end loop;

		end if;

	end loop;

end if;
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE conciliar_integr_resp_rec_pck.gerar_analise_grg () FROM PUBLIC;
