-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



/*==========================================================================INICIO CONCILIAR LOTES=====================================================================================*/





CREATE OR REPLACE PROCEDURE conciliar_integr_resp_rec_pck.conciliar_lotes () AS $body$
DECLARE

/*

Le a tabela de integracao e verifica
se existe registro na tabela PROTOCOLO_CONVENIO	
Se existir, entao deve considerar como "conciliado"
senao, entao adiciona inconsistencia para os niveis inferiores: guia e item apenas na lista


*/


qt_protocolo		integer := 0;
ie_status_w		imp_resp_recurso_prot.ie_status%type;
nr_seq_protocolo_w	protocolo_convenio.nr_seq_protocolo%type;
nr_seq_lote_grg_w	lote_auditoria.nr_sequencia%type;
clotes CURSOR FOR
	SELECT	nr_lote_prestador,
		coalesce(nr_seq_protocolo,0) nr_protoc_tasy,
		nr_protocolo_operadora,
		nr_sequencia,
		cd_convenio,
		cd_estabelecimento,
		a.nr_seq_lote,
		a.nr_seq_resp_recurso
	from	imp_resp_recurso_prot a
	where (coalesce(a.ie_status,'P') = 'P'	
    or      coalesce(a.ie_status,'P') = 'V')	
	and	a.nr_seq_resp_recurso = (SELECT distinct(x.nr_sequencia)
					from 	imp_resp_recurso x,
						imp_resp_recurso_prot y
					where	x.nr_sequencia = y.nr_seq_resp_recurso
					and	x.nr_sequencia = coalesce(nr_seq_lote_w, x.nr_sequencia)
					and (coalesce(y.ie_status,'P') = 'P' --pendente ou ajustado.	
                    or  coalesce(y.ie_status,'P') = 'V'))
	order by a.nr_seq_resp_recurso, a.nr_sequencia;

clotes_w clotes%rowtype;	


BEGIN

PERFORM set_config('conciliar_integr_resp_rec_pck.i', 0, false);
open clotes;
loop
fetch clotes into	
	clotes_w;
EXIT WHEN NOT FOUND; /* apply on clotes */

	nr_Seq_protocolo_w := 0;

	if (clotes_w.nr_protoc_tasy > 0) then

		select	count(1)
		into STRICT	qt_protocolo
		from	protocolo_convenio x
		where	x.nr_seq_protocolo 	= clotes_w.nr_protoc_tasy
		and	x.cd_convenio	  	= clotes_w.cd_convenio
		and	x.cd_estabelecimento 	= clotes_w.cd_estabelecimento;

		if (qt_protocolo = 0) then
			ie_status_w := 'PN';--Lote nao encontrado no "Protocolo convenio"			
		else
			ie_status_w := 'C';--Conciliado
			nr_Seq_protocolo_w := clotes_w.nr_protoc_tasy;
		end if;
	else	
		nr_Seq_protocolo_w := coalesce(Tiss_Obter_Seq_Protocolo_Xml(clotes_w.cd_convenio,clotes_w.nr_lote_prestador),0);
		if (nr_Seq_protocolo_w > 0) then
			ie_status_w := 'C';
		elsif (nr_seq_protocolo_w = 0) then
			
			nr_seq_protocolo_w := coalesce(Tiss_Obter_Seq_Protocolo_Xml(clotes_w.cd_convenio, clotes_w.nr_protocolo_operadora),0);
			if (nr_seq_protocolo_w = 0) then			
				ie_status_w := 'PN';
			else
				ie_status_w := 'C';
			end if;		
		end if;

	end if;


	select	max(b.nr_sequencia)
	into STRICT	nr_seq_lote_grg_w
	from	lote_auditoria b
	where	b.nr_sequencia = clotes_w.nr_seq_lote
	and	coalesce(b.dt_fechamento::text, '') = '';

	current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_seq_protocolo		:= nr_Seq_protocolo_w;
	current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_sequencia			:= clotes_w.nr_sequencia;
	current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).nr_seq_lote_grg		:= nr_seq_lote_grg_w;
	current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).NR_SEQ_RESP_RECURSO		:= clotes_w.nr_seq_resp_recurso;
	current_setting('conciliar_integr_resp_rec_pck.campos_lote_w')::campos_lote_v(current_setting('conciliar_integr_resp_rec_pck.i')::integer).ie_status			:= ie_status_w;



	PERFORM set_config('conciliar_integr_resp_rec_pck.i', current_setting('conciliar_integr_resp_rec_pck.i')::integer + 1, false);
end loop;
close clotes;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE conciliar_integr_resp_rec_pck.conciliar_lotes () FROM PUBLIC;
