-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tiss_ins_ret_denial_pck.create_denied_item ( nr_seq_item_fatur_p bigint, proc_p procedimento, mat_p material, cd_item_p text, vl_item_p bigint, qt_item_p bigint, cd_setor_p setor_atendimento.cd_setor_atendimento%type, vl_payment_p bigint, ie_funcao_medico_p text, ie_proc_desp_p text ) AS $body$
DECLARE


/* Medical procedure related variables. */

cd_procedimento_w	convenio_retorno_glosa.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
nr_seq_propaci_w	procedimento_paciente.nr_sequencia%type;	
nr_seq_tiss_proc_w	tiss_conta_proc.nr_sequencia%type;

/* Medical material/medicine related variables. */

cd_material_w		convenio_retorno_glosa.cd_material%type;
nr_seq_matpaci_w	material_atend_paciente.nr_sequencia%Type;
nr_seq_tiss_desp_w	tiss_conta_desp.nr_sequencia%type;

/* Sequence of the denied item that will be generated. */

nr_seq_item_w		convenio_retorno_glosa.nr_sequencia%Type;

/* Item values. */

vl_glosa_w		convenio_retorno_glosa.vl_glosa%type;
vl_amaior_w		convenio_retorno_glosa.vl_amaior%type;
vl_payment_w		double precision;
	

BEGIN

	/* If a medical procedure was found, load procedure related variables. */

	if (proc_p.nr_sequencia IS NOT NULL AND proc_p.nr_sequencia::text <> '') then
		nr_seq_propaci_w 	:= proc_p.nr_sequencia;
		ie_origem_proced_w 	:= proc_p.ie_origem_proced;
		cd_procedimento_w 	:= proc_p.cd_procedimento;
	/* Otherwise, if a medical material/medicine was found, load material/medicine related variables. */

	elsif (mat_p.nr_sequencia IS NOT NULL AND mat_p.nr_sequencia::text <> '') then
		nr_seq_matpaci_w	:= mat_p.nr_sequencia;
		cd_material_w 		:= mat_p.cd_material;
	end if;
	
	/* 
		Load TISS_CONTA_PROC or TISS_CONTA_DESP sequences. 
	*/
	if ie_proc_desp_p = 'P' then
		nr_seq_tiss_proc_w	:= nr_seq_item_fatur_p;
	else
		nr_seq_tiss_desp_w	:= nr_seq_item_fatur_p;
	end if;
	
	$if dbms_db_version.version >= 11 $then
		nr_seq_item_w := nextval('convenio_retorno_glosa_seq');
	$else
		select	nextval('convenio_retorno_glosa_seq')
		into STRICT	nr_seq_item_w
		;
	$end
	
	/* Calculate denial, additional and payment values. */

	vl_glosa_w 	:= 0;
	vl_amaior_w	:= 0;
	vl_payment_w := vl_payment_p;
	
	if vl_payment_p > vl_item_p then
		vl_amaior_w := vl_payment_p - vl_item_p;
		vl_payment_w := vl_item_p;
		vl_glosa_w := 0;
	elsif vl_payment_p < vl_item_p then
		vl_glosa_w := vl_item_p - vl_payment_p;
		vl_amaior_w := 0;
	end if;
	
	/* Create the denied item. */

	insert into convenio_retorno_glosa(
		dt_atualizacao,
		dt_atualizacao_nrec,
		ie_atualizacao,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_ret_item,
		nr_sequencia,
		qt_glosa,
		vl_glosa,
		vl_cobrado,
		vl_pago_digitado,
		vl_amaior,
		nr_seq_propaci,
		nr_seq_matpaci,
		cd_item_convenio,
		cd_procedimento,
		ie_origem_proced,
		cd_material,
		nr_seq_tiss_conta_proc,
		nr_seq_tiss_conta_desp
	)
	values ( 
		clock_timestamp(),
		clock_timestamp(),
		'N',
		wheb_usuario_pck.get_nm_usuario,
		wheb_usuario_pck.get_nm_usuario,
		current_setting('tiss_ins_ret_denial_pck.nr_seq_guia_w')::convenio_retorno_item.nr_sequencia%type,
		nr_seq_item_w,
		qt_item_p,
		vl_glosa_w,
		vl_item_p,
		vl_payment_w,
		vl_amaior_w,
		nr_seq_propaci_w,
		nr_seq_matpaci_w,
		cd_item_p,
		cd_procedimento_w,		
		ie_origem_proced_w,
		cd_material_w,
		nr_seq_tiss_proc_w,
		nr_seq_tiss_desp_w
	);
	
	commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_ins_ret_denial_pck.create_denied_item ( nr_seq_item_fatur_p bigint, proc_p procedimento, mat_p material, cd_item_p text, vl_item_p bigint, qt_item_p bigint, cd_setor_p setor_atendimento.cd_setor_atendimento%type, vl_payment_p bigint, ie_funcao_medico_p text, ie_proc_desp_p text ) FROM PUBLIC;
