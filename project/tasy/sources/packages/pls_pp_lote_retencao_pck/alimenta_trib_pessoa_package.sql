-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_lote_retencao_pck.alimenta_trib_pessoa ( nr_seq_lote_p pls_pp_lr_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ds_controle_agrup_w		varchar(500);
ds_controle_agrup_temp_w	varchar(500);
nr_contador_w			integer;
vl_base_pgto_w			pls_pp_lr_trib_pessoa.vl_base_pgto%type;
vl_base_acum_w			pls_pp_lr_trib_pessoa.vl_base_acumulada%type;
vl_trib_pago_w			pls_pp_lr_trib_pessoa.vl_tributo_pago%type;
cd_pessoa_fisica_w		pls_pp_lr_trib_pessoa.cd_pessoa_fisica%type;
cd_tributo_w			pls_pp_lr_trib_pessoa.cd_tributo%type;
nr_seq_tipo_prest_w		pls_pp_lr_trib_pessoa.nr_seq_tipo_prestador%type;
ie_tipo_contrat_w		pls_pp_lr_trib_pessoa.ie_tipo_contratacao%type;
vl_base_adic_w			pls_pp_lr_base_trib.vl_base_adic%type;
vl_trib_adic_w			pls_pp_lr_base_trib.vl_trib_adic%type;
vl_base_nao_retido_w		pls_pp_lr_base_trib.vl_base_nao_retido%type;
vl_nao_retido_w			pls_pp_lr_base_trib.vl_nao_retido%type;

tb_nr_seq_base_trib_w		pls_util_cta_pck.t_number_table;

c01 CURSOR(	nr_seq_lote_pc		pls_pp_lr_lote.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.cd_pessoa_fisica,
		a.cd_tributo,
		a.ie_tipo_contratacao,
		a.nr_seq_tipo_prestador,
		CASE WHEN a.ie_origem='NP' THEN  a.vl_item  ELSE 0 END  vl_item,
		CASE WHEN a.ie_origem='NP' THEN  0  ELSE a.vl_base END  vl_base_acum,
		CASE WHEN a.ie_origem='NP' THEN  a.vl_tributo  ELSE 0 END  vl_tributo_pago,
		CASE WHEN a.ie_origem='NP' THEN  0  ELSE a.vl_base_adic END  vl_base_adic,
		CASE WHEN a.ie_origem='NP' THEN  0  ELSE a.vl_trib_adic END  vl_trib_adic,
		CASE WHEN a.ie_origem='NP' THEN  0  ELSE a.vl_base_nao_retido END  vl_base_nao_retido,
		CASE WHEN a.ie_origem='NP' THEN  0  ELSE a.vl_nao_retido END  vl_nao_retido,
		a.vl_base,
		t.ie_tipo_tributo
	from	pls_pp_lr_base_trib a,
		tributo	t
	where	t.cd_tributo		= a.cd_tributo
	and	a.nr_seq_lote_ret	= nr_seq_lote_pc
	order by a.cd_pessoa_fisica, a.cd_tributo, a.ie_tipo_contratacao,
		a.nr_seq_tipo_prestador;

BEGIN
vl_base_pgto_w	:= 0;
vl_base_acum_w	:= 0;
vl_trib_pago_w	:= 0;
ds_controle_agrup_w := null;
nr_contador_w	:= 0;

for r_c01_w in c01(nr_seq_lote_p) loop

	-- armazena os valores para utilizar na comparação posteriormente
	ds_controle_agrup_temp_w := '';
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(r_c01_w.cd_pessoa_fisica, 'X');
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(to_char(r_c01_w.cd_tributo), 'X');

	if (ds_controle_agrup_w IS NOT NULL AND ds_controle_agrup_w::text <> '') then
		if (ds_controle_agrup_temp_w != ds_controle_agrup_w) then

			-- salva os dados no banco
			SELECT * FROM pls_pp_lote_retencao_pck.alimenta_lr_trib_pessoa(nr_contador_w, vl_base_pgto_w, vl_base_acum_w, vl_trib_pago_w, tb_nr_seq_base_trib_w, cd_pessoa_fisica_w, cd_tributo_w, ie_tipo_contrat_w, nr_seq_tipo_prest_w, vl_base_adic_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_nao_retido_w, nr_seq_lote_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 nr_contador_w := _ora2pg_r.nr_contador_p; vl_base_pgto_w := _ora2pg_r.vl_base_pgto_p; vl_base_acum_w := _ora2pg_r.vl_base_acum_p; vl_trib_pago_w := _ora2pg_r.vl_trib_pago_p; tb_nr_seq_base_trib_w := _ora2pg_r.tb_nr_seq_base_trib_p;
		end if;
	end if;

	-- salva os valores nas variáveis para salvar posteriormente
	cd_pessoa_fisica_w	:= r_c01_w.cd_pessoa_fisica;
	cd_tributo_w		:= r_c01_w.cd_tributo;
	ie_tipo_contrat_w	:= r_c01_w.ie_tipo_contratacao;
	nr_seq_tipo_prest_w	:= r_c01_w.nr_seq_tipo_prestador;

	-- vai acumulando os valores de base atual e acumulada
	-- para considerar tem que ter base de calculo que impactou nos tributos
	if (r_c01_w.vl_base != 0) or (r_c01_w.ie_tipo_tributo = 'IR') then
		vl_base_pgto_w	:= vl_base_pgto_w + r_c01_w.vl_item;
		vl_base_acum_w	:= vl_base_acum_w + r_c01_w.vl_base_acum;
		vl_trib_pago_w	:= vl_trib_pago_w + r_c01_w.vl_tributo_pago;
		vl_base_adic_w	:= vl_base_adic_w + r_c01_w.vl_base_adic;
		vl_trib_adic_w	:= vl_trib_adic_w + r_c01_w.vl_trib_adic;
		vl_base_nao_retido_w := vl_base_nao_retido_w + r_c01_w.vl_base_nao_retido;
		vl_nao_retido_w	:= vl_nao_retido_w + r_c01_w.vl_nao_retido;
	end if;
	
	tb_nr_seq_base_trib_w(nr_contador_w) := r_c01_w.nr_sequencia;
	
	nr_contador_w := nr_contador_w + 1;
	ds_controle_agrup_w := ds_controle_agrup_temp_w;
end loop;

-- se sobrou algo manda pro banco
SELECT * FROM pls_pp_lote_retencao_pck.alimenta_lr_trib_pessoa(nr_contador_w, vl_base_pgto_w, vl_base_acum_w, vl_trib_pago_w, tb_nr_seq_base_trib_w, cd_pessoa_fisica_w, cd_tributo_w, ie_tipo_contrat_w, nr_seq_tipo_prest_w, vl_base_adic_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_nao_retido_w, nr_seq_lote_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 nr_contador_w := _ora2pg_r.nr_contador_p; vl_base_pgto_w := _ora2pg_r.vl_base_pgto_p; vl_base_acum_w := _ora2pg_r.vl_base_acum_p; vl_trib_pago_w := _ora2pg_r.vl_trib_pago_p; tb_nr_seq_base_trib_w := _ora2pg_r.tb_nr_seq_base_trib_p;

-- Realizar ajustes caso tenha estorno de carta de retenção			
CALL pls_pp_lote_retencao_pck.ajuste_estorno_carta(nr_seq_lote_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_lote_retencao_pck.alimenta_trib_pessoa ( nr_seq_lote_p pls_pp_lr_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
