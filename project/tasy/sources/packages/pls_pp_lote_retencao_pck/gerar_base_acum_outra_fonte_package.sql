-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_lote_retencao_pck.gerar_base_acum_outra_fonte ( nr_seq_lote_p pls_pp_lr_lote.nr_sequencia%type, cd_tributo_p tributo.cd_tributo%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_seq_carta_w	pls_util_cta_pck.t_number_table;
tb_vl_tributo_w		pls_util_cta_pck.t_number_table;
tb_vl_base_calc_w	pls_util_cta_pck.t_number_table;
tb_cd_pessoa_fisica_w	pls_util_cta_pck.t_varchar2_table_50;
tb_nr_seq_tipo_prest_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_prest_w	pls_util_cta_pck.t_number_table;

-- é feito um group by pois pode existir mais de um prestador para a mesma pessoa e devemos lançar apenas 
-- um registro nesse caso, para um dos prestadores
c01 CURSOR(	nr_seq_lote_pc		pls_pp_lr_lote.nr_sequencia%type,
		cd_tributo_pc		tributo.cd_tributo%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type,
		dt_competencia_pc	pls_pp_lr_lote.dt_mes_competencia%type) FOR
	SELECT	b.nr_sequencia,
		b.cd_pessoa_fisica,
		a.nr_seq_tipo_prestador,
		max(a.nr_seq_prestador),
		max(b.vl_base_calculo),
		max(b.vl_tributo)
	from	pls_pp_prestador_tmp a,
		pessoa_fisica_trib b
	where	a.ie_tipo_prestador = 'PF'
	and	b.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	b.cd_tributo = cd_tributo_pc
	and	dt_competencia_pc between trunc(b.dt_inicio_vigencia) and b.dt_fim_vigencia
	and	coalesce(b.cd_estabelecimento::text, '') = ''
	and	exists (	SELECT	1
			from	pls_pp_lr_base_trib x
			where	x.nr_seq_lote_ret = nr_seq_lote_pc
			and	x.nr_seq_prestador = a.nr_seq_prestador)
	group by b.nr_sequencia, b.cd_pessoa_fisica, a.nr_seq_tipo_prestador
	
union all

	select	b.nr_sequencia,
		b.cd_pessoa_fisica,
		a.nr_seq_tipo_prestador,
		max(a.nr_seq_prestador),
		max(b.vl_base_calculo),
		max(b.vl_tributo)
	from	pls_pp_prestador_tmp a,
		pessoa_fisica_trib b
	where	a.ie_tipo_prestador = 'PF'
	and	b.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	b.cd_tributo = cd_tributo_pc
	and	dt_competencia_pc between trunc(b.dt_inicio_vigencia) and b.dt_fim_vigencia
	and	b.cd_estabelecimento = cd_estabelecimento_pc
	and	exists (	select	1
			from	pls_pp_lr_base_trib x
			where	x.nr_seq_lote_ret = nr_seq_lote_pc
			and	x.nr_seq_prestador = a.nr_seq_prestador)
	group by b.nr_sequencia, b.cd_pessoa_fisica, a.nr_seq_tipo_prestador;


BEGIN

-- insere todas as cartas da competencia do lote de retenção, para o tributo em questão. Tipo de contratação é alimentado 
-- como Sem tipo de contratação e o prestador é pego o de maior sequência, para evitar de inserir várias vezes a mesma carta
open c01(	nr_seq_lote_p, cd_tributo_p, cd_estabelecimento_p,
		current_setting('pls_pp_lote_retencao_pck.dt_mes_competencia_lote_w')::pls_pp_lr_lote.dt_mes_competencia%type);
loop
	fetch c01 bulk collect into	tb_nr_seq_carta_w, tb_cd_pessoa_fisica_w, tb_nr_seq_tipo_prest_w,
					tb_nr_seq_prest_w, tb_vl_base_calc_w, tb_vl_tributo_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_carta_w.count = 0;
	
	forall i in tb_nr_seq_carta_w.first..tb_nr_seq_carta_w.last
		insert into pls_pp_lr_base_trib(
			nr_sequencia, dt_atualizacao_nrec, dt_atualizacao,
			nm_usuario_nrec, nm_usuario, cd_tributo,
			ie_tipo_contratacao, nr_seq_prestador, nr_seq_vl_outra_fonte,
			vl_base, vl_tributo, vl_item,
			cd_pessoa_fisica, nr_seq_tipo_prestador, ie_origem,
			nr_seq_lote_ret, vl_base_adic, vl_trib_adic,
			vl_base_nao_retido, vl_nao_retido
		) values (
			nextval('pls_pp_lr_base_trib_seq'), clock_timestamp(), clock_timestamp(),
			nm_usuario_p, nm_usuario_p, cd_tributo_p,
			'S', tb_nr_seq_prest_w(i), tb_nr_seq_carta_w(i),
			tb_vl_base_calc_w(i), tb_vl_tributo_w(i), tb_vl_base_calc_w(i),
			tb_cd_pessoa_fisica_w(i), tb_nr_seq_tipo_prest_w(i), 'CR',
			nr_seq_lote_p, 0, 0,
			0, 0
		);
	commit;
end loop;
close c01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_lote_retencao_pck.gerar_base_acum_outra_fonte ( nr_seq_lote_p pls_pp_lr_lote.nr_sequencia%type, cd_tributo_p tributo.cd_tributo%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
