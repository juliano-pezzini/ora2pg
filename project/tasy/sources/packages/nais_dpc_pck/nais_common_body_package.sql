-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_dpc_pck.nais_common_body ( parameter_id_p bigint ) AS $body$
DECLARE

		totalcount                smallint;
		countv                    smallint;
		ds_doenca_cid1_w          varchar(240);
		ds_doenca_cid2_w          varchar(240);
		ds_doenca_cid3_w          varchar(240);
		ds_doenca_cid4_w          varchar(240);
		ds_doenca_cid5_w          varchar(240);
		ds_doenca_cid6_w          varchar(240);
		ds_doenca_cid7_w          varchar(240);
		vl_gaf_score_w            smallint;
		intro_by_other_hospital_w varchar(10);
		si_pneumonia_state_w      varchar(2);
		vl_rankin_scale_w         smallint;
		si_stroke_onset_w         smallint;
		si_admission_reason_w         patient_dpc.si_admission_reason%type;
		qt_pregnancy_age_weeks_w      patient_dpc_general_cond.qt_pregnancy_age_weeks%type;
		qt_birth_weight_grams_w       patient_dpc_general_cond.qt_birth_weight_grams%type;
		si_jcs_w                      patient_dpc_general_cond.si_jcs%type;

c02 CURSOR FOR
       SELECT   coalesce(a.medical_record_id,0) patient_id,
				to_char(a.encouter_admit_date,'YYYYMMDD') date_of_admission,
				'100000' time_of_admission,
                coalesce(to_char(b.dt_liberacao,'YYYYMMDD'),' ') start_date_change,				
				coalesce(to_char(b.dt_liberacao,'HH24MISS'),' ') start_time_change,
				coalesce(to_char(b.dt_start_dpc,'YYYYMMDD'),' ') start_date_of_dpc,--Not null
				d.cd_dpc dia_group_classification,
				coalesce(b.si_category,' ') comp_classification,
				coalesce(b.si_out_come,' ') outcome_classification,
				coalesce(to_char(b.dt_end_dpc,'YYYYMMDD'),' ') date_of_outcome ,
				' ' blank_one
        from    bft_encounter_v a,
				patient_dpc b ,
				dpc_score d
		where   a.encounter_id= b.nr_atendimento
		and     d.nr_sequencia  = b.nr_seq_dpc_score
		and     b.nr_sequencia  = parameter_id_p;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Main disease name information *3
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c03 CURSOR FOR
        SELECT	' ' decease_name_code,
				i.nr_receipt_computer_code decease_computation_code,
				i.cd_icd_code icd10,
				' ' modifier1_rct_code,
				' ' modifier2_rct_code,
				' ' modifier3_rct_code,
				' ' suffix1_rct_code,
				' ' suffix2_rct_code,
				' ' suffix3_rct_code,
				' ' doubt_flag,
				CASE WHEN p.si_psychosomatic_disorder='Y' THEN 1  ELSE '' END  psychosomatic_disorder_flag,
				CASE WHEN p.si_cause_of_death='Y' THEN 1  ELSE '' END  cause_of_deacease,
				' ' blank_one,
				count(*) over () totalCount 		
        from  	patient_dpc pd,
				patient_dpc_diagnosis p,
				diagnostico_doenca d ,
				icd_codes_main_jpn i										
        where	pd.nr_sequencia=p.nr_seq_patient_dpc
        and		p.si_main  = 'Y' 
		and		d.nr_seq_interno = p.nr_seq_diagnosis
		and     i.nr_disease_number = d.nr_seq_disease_number
		and		pd.nr_sequencia = parameter_id_p  LIMIT 3;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Disease name triggered hospitalization *1
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c04 CURSOR FOR
        SELECT	' ' decease_name_code,
				i.nr_receipt_computer_code decease_computation_code,
				i.cd_icd_code icd10,
			    ' ' modifier1_rct_code,
				' ' modifier2_rct_code,
				' ' modifier3_rct_code,
				' ' suffix1_rct_code,
				' ' suffix2_rct_code,
				' ' suffix3_rct_code,
                CASE WHEN p.si_psychosomatic_disorder='Y' THEN 1  ELSE '' END  psychosomatic_dis_flg ,
                CASE WHEN p.si_cause_of_death='Y' THEN 1  ELSE '' END  cause_of_deacease,
                ' ' blank_one ,
                count(*) over () totalCount                          		
        from  	patient_dpc pd,
				patient_dpc_diagnosis p,
				diagnostico_doenca d ,
				icd_codes_main_jpn i										
        where	pd.nr_sequencia          = p.nr_seq_patient_dpc
        and		p.si_for_hospitalization = 'Y' 
        and		d.nr_seq_interno         = p.nr_seq_diagnosis
        and     i.nr_disease_number      = d.nr_seq_disease_number
        and     pd.nr_sequencia          = parameter_id_p  LIMIT 1;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Disease name which invested medical resources the most*1
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c05 CURSOR FOR
        SELECT  ' ' decease_name_code,
				i.nr_receipt_computer_code decease_computation_code,
				i.cd_icd_code icd10,
				' ' modifier1_rct_code,
				' ' modifier2_rct_code,
				' ' modifier3_rct_code,
				' ' suffix1_rct_code,
				' ' suffix2_rct_code,
				' ' suffix3_rct_code,
				'0' psychosomatic_dis_flg ,
				'0' cause_of_deacease,
				' ' blank_one ,
                count(*) over () totalCount
        from  	patient_dpc pd,
				patient_dpc_diagnosis p,
				diagnostico_doenca d ,
				icd_codes_main_jpn i										
        where	pd.nr_sequencia          = p.nr_seq_patient_dpc
        and		p.si_for_hospitalization = 'Y' 
        and		d.nr_seq_interno         = p.nr_seq_diagnosis
        and     i.nr_disease_number      = d.nr_seq_disease_number
        and     pd.nr_sequencia          = parameter_id_p  LIMIT 1;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Disease name invested medical resources the 2nd most *1
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c06 CURSOR FOR
		SELECT  ' ' decease_computation_code,
				i.nr_receipt_computer_code receipt_computation_code,
				i.cd_icd_code icd10,
				' ' modifier1_rct_code,
				' ' modifier2_rct_code,
				' ' modifier3_rct_code,
				' ' suffix1_rct_code,
				' ' suffix2_rct_code,
				' ' suffix3_rct_code,
				CASE WHEN p.si_psychosomatic_disorder='Y' THEN 1  ELSE 0 END  psychosomatic_dis_flg ,
				CASE WHEN p.si_cause_of_death='Y' THEN 1  ELSE 0 END  cause_of_deacease,
				' ' blank_one,
				count(*) over () totalCount
        from    patient_dpc pd,
				patient_dpc_diagnosis p,
				diagnostico_doenca d ,
				icd_codes_main_jpn i										
        where	pd.nr_sequencia     	   = p.nr_seq_patient_dpc
		and		d.nr_seq_interno    	   = p.nr_seq_diagnosis
		and     i.nr_disease_number		   = d.nr_seq_disease_number
		and     p.si_second_most_expensive = 'Y'
		and     pd.nr_sequencia            = parameter_id_p  LIMIT 1;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Disease name coexistents at admission *5
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c07 CURSOR FOR
        SELECT  ' ' decease_computation_code,
				i.nr_receipt_computer_code receipt_computation_code,
				i.cd_icd_code icd10,
				' ' modifier1_rct_code,
				' ' modifier2_rct_code,
				' ' modifier3_rct_code,
				' ' suffix1_rct_code,
				' ' suffix2_rct_code,
				' ' suffix3_rct_code,
				CASE WHEN p.si_psychosomatic_disorder='Y' THEN 1  ELSE '' END  psychosomatic_dis_flg ,
				CASE WHEN p.si_cause_of_death='Y' THEN 1  ELSE '' END  cause_of_deacease,
				count(*) over () totalCount,
                ' ' blank_one
        from   	patient_dpc pd,
				patient_dpc_diagnosis p,
				diagnostico_doenca d ,
				icd_codes_main_jpn i										
        where	pd.nr_sequencia         = p.nr_seq_patient_dpc
        and		d.nr_seq_interno        = p.nr_seq_diagnosis
        and     i.nr_disease_number     = d.nr_seq_disease_number
        and     p.si_comorbidity_before = 'Y'
        and     pd.nr_sequencia         = parameter_id_p  LIMIT 5;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Disease name onset during hospitalization *5
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c08 CURSOR FOR
		SELECT  ' ' decease_computation_code,
				i.nr_receipt_computer_code receipt_computation_code,
				i.cd_icd_code icd10,
				' ' modifier1_rct_code,
				' ' modifier2_rct_code,
				' ' modifier3_rct_code,
				' ' suffix1_rct_code,
				' ' suffix2_rct_code,
				' ' suffix3_rct_code,
				CASE WHEN si_psychosomatic_disorder='Y' THEN 1  ELSE '' END  psychosomatic_dis_flg ,
				CASE WHEN si_cause_of_death='Y' THEN 1  ELSE '' END  cause_of_deacease,
				count(*) over () totalCount,
				' ' blank_one
        from 	patient_dpc pd,
				patient_dpc_diagnosis p,
				diagnostico_doenca d ,
				icd_codes_main_jpn i										
        where	pd.nr_sequencia      = p.nr_seq_patient_dpc
        and		d.nr_seq_interno     = p.nr_seq_diagnosis
        and     i.nr_disease_number  = d.nr_seq_disease_number
        and     p.si_after_admission = 'Y'
        and     pd.nr_sequencia      = parameter_id_p  LIMIT 5;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Sub injury name *5
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c09 CURSOR FOR
        SELECT  ' ' decease_computation_code,
                i.nr_receipt_computer_code receipt_computation_code,
                i.cd_icd_code icd10,
                ' ' modifier1_rct_code,
                ' ' modifier2_rct_code,
                ' ' modifier3_rct_code,
                ' ' suffix1_rct_code,
                ' ' suffix2_rct_code,
                ' ' suffix3_rct_code,
                CASE WHEN p.si_psychosomatic_disorder='Y' THEN 1  ELSE '' END  psychosomatic_dis_flg ,
                CASE WHEN p.si_cause_of_death='Y' THEN 1  ELSE '' END  cause_of_deacease,
                count(*) over () totalcount,
                ' ' blank_one
        from 	patient_dpc pd,
                patient_dpc_diagnosis p,
                diagnostico_doenca d ,
                icd_codes_main_jpn i										
        where	pd.nr_sequencia     = p.nr_seq_patient_dpc
        and		d.nr_seq_interno    = p.nr_seq_diagnosis
        and     i.nr_disease_number = d.nr_seq_disease_number      
        and     p.si_sub_disease    = 'Y'
        and     pd.nr_sequencia     = parameter_id_p  LIMIT 5;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Executed surgery during hospitalization *5
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c10 CURSOR FOR
        SELECT  ' ' order_code,
				' ' medical_code,
				' ' receipt_computation_code,
				coalesce(coalesce( coalesce(coalesce(a.cd_k_surgery_1,a.cd_k_surgery_2),a.cd_k_surgery_3),a.cd_k_surgery_4),a.cd_k_surgery_5) kcode,
				case
						when (a.cd_k_surgery_1 IS NOT NULL AND a.cd_k_surgery_1::text <> '') then
							coalesce(to_char(c.dt_surgery,'YYYYMMDD'),' ')
						when (a.cd_k_surgery_2 IS NOT NULL AND a.cd_k_surgery_2::text <> '') then 
							coalesce(to_char(c.dt_surgery2,'YYYYMMDD'),' ')
						when (a.cd_k_surgery_3 IS NOT NULL AND a.cd_k_surgery_3::text <> '') then
							coalesce(to_char(c.dt_surgery3,'YYYYMMDD'),' ')
						when (a.cd_k_surgery_4 IS NOT NULL AND a.cd_k_surgery_4::text <> '') then
							coalesce(to_char(c.dt_surgery4,'YYYYMMDD'),' ')
						when (a.cd_k_surgery_5 IS NOT NULL AND a.cd_k_surgery_5::text <> '') then
							coalesce(to_char(c.dt_surgery5,'YYYYMMDD'),' ')
						else ' '
				end as date_of_execution,           
				' ' scheduled_date,
				' ' after_surgery_jcs,
				case
				        when (a.cd_k_surgery_1 IS NOT NULL AND a.cd_k_surgery_1::text <> '') then
				            coalesce(CASE WHEN c.cd_times_surgery=0 THEN 1 WHEN c.cd_times_surgery=1 THEN 2 END ,'')
				        when (a.cd_k_surgery_2 IS NOT NULL AND a.cd_k_surgery_2::text <> '') then
							coalesce(CASE WHEN c.cd_times_surgery2=0 THEN 1 WHEN c.cd_times_surgery2=1 THEN 2 END ,'')
						when (a.cd_k_surgery_3 IS NOT NULL AND a.cd_k_surgery_3::text <> '') then
							coalesce(CASE WHEN c.cd_times_surgery3=0 THEN 1 WHEN c.cd_times_surgery3=1 THEN 2 END ,'')
						when (a.cd_k_surgery_4 IS NOT NULL AND a.cd_k_surgery_4::text <> '') then
							coalesce(CASE WHEN c.cd_times_surgery4=0 THEN 1 WHEN c.cd_times_surgery4=1 THEN 2 END ,'')
						when (a.cd_k_surgery_5 IS NOT NULL AND a.cd_k_surgery_5::text <> '') then
							coalesce(CASE WHEN c.cd_times_surgery5=0 THEN 1 WHEN c.cd_times_surgery5=1 THEN 2 END ,'')
						else null
				end as first_re_surgery,
				coalesce(coalesce( coalesce(coalesce(c.cd_external_part,c.cd_external_part2),c.cd_external_part3),c.cd_external_part4),c.cd_external_part5) one_or_both_side,
				coalesce(coalesce( coalesce(coalesce(c.cd_anesthesia,c.cd_anesthesia2),c.cd_anesthesia3),c.cd_anesthesia4),c.cd_anesthesia5) anesthesia,
				count(*) over () totalCount
        from    dpc_surgery a,
				patient_dpc b,
				patient_dpc_surgery c
        where   a.nr_sequencia = b.nr_sequencia
		and     b.nr_sequencia = c.nr_seq_patient_dpc 
        and     b.nr_sequencia = parameter_id_p LIMIT 5;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Treatment etc. 1 *5
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c11 CURSOR FOR
        SELECT  ' ' medical_code,
				' ' receipt_computation_code,
				c.cd_treatment_1 kcode,
				coalesce(to_char(b.dt_treatment_1,'YYYYMMDD'),'') date_of_execution,
				count(*) over () totalcount
        from    patient_dpc a,
				patient_dpc_treatment b,
				dpc_treatment c
        where   b.nr_seq_patient_dpc  = a.nr_sequencia
        and    c.nr_sequencia         = b.nr_seq_dpc_treat_1
		and    b.nr_seq_patient_dpc   = a.nr_sequencia
		and    (b.nr_seq_dpc_treat_1 IS NOT NULL AND b.nr_seq_dpc_treat_1::text <> '')
		and    a.nr_sequencia         = parameter_id_p;
    /**
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Treatment etc. 2 *5
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    **/
    c12 CURSOR FOR
		SELECT  ' ' medical_code,
				' ' receipt_computation_code,
				c.cd_treatment_1 kcode,
				coalesce(to_char(b.dt_treatment_1,'YYYYMMDD'),'') date_of_execution,
				count(*) over () totalcount
		from    patient_dpc a,
				patient_dpc_treatment b,
				dpc_treatment c
		where   b.nr_seq_patient_dpc = a.nr_sequencia
        and     c.nr_sequencia       = b.nr_seq_dpc_treat_1
        and     b.nr_seq_patient_dpc = a.nr_sequencia
        and     (b.nr_seq_dpc_treat_2 IS NOT NULL AND b.nr_seq_dpc_treat_2::text <> '')
        and     a.nr_sequencia       = parameter_id_p;

    c13 CURSOR FOR
		SELECT  distinct '1' pregnency,
				' ' department_change,
				' ' ward_move,
				a.si_inpatient_route inpatient_route,
				coalesce(a.si_exit_point,' ') si_exit_point,
				CASE WHEN a.si_normal_urgent='N' THEN 1 WHEN a.si_normal_urgent='Y' THEN 2 END  scheduled_emrgncy_hos,
				CASE WHEN a.si_normal_urgent='N' THEN 0 WHEN a.si_normal_urgent='Y' THEN 1 END  transportation_by_ambulance,
				coalesce(to_char(d.dt_alta,'YYYYMMDD'),' ') last_of_last_discharge,
				' ' hospitalized_last_time,
				'1' confirmation_flag,
				coalesce(e.vl_burn_index,'00000') vl_burn_index,
				count(*) over () totalcount
		from    patient_dpc a,
				atendimento_paciente d,
				patient_dpc_general_cond e
		where   a.nr_atendimento     = d.nr_atendimento
		and     e.nr_seq_patient_dpc = a.nr_sequencia  
		and     a.nr_sequencia       = parameter_id_p LIMIT 1;
	
	  
		r3_count C03%rowtype;
		r4_count C04%rowtype;
		r5_count C05%rowtype;
		r6_count C06%rowtype;
		r7_count C07%rowtype;
		r8_count C08%rowtype;
		r9_count C09%rowtype;
		r10_count C10%rowtype;
		r11_count C11%rowtype;
		r12_count C12%rowtype;
		r13_count C13%rowtype;
BEGIN
		for r_c02 in c02
            loop
			    begin
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.patient_id, 10, 'L', '0');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.date_of_admission,8,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.time_of_admission,6,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.start_date_change,8,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.start_time_change,6,'L');
					if (r_c02.start_date_of_dpc IS NOT NULL AND r_c02.start_date_of_dpc::text <> '') then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.start_date_of_dpc,8,'L');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.blank_one,8,'L');
					end if;
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.dia_group_classification,20,'R',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.comp_classification,2,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.outcome_classification,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c02.date_of_outcome,8,'L');
				end;
			end loop;
	
	
       for r_c03 in C03
		loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.decease_name_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.decease_computation_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.icd10,5,'R',' ');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.modifier1_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.modifier2_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.modifier3_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.suffix1_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.suffix2_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.suffix3_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.doubt_flag,1,'L');
				if (r_c03.psychosomatic_disorder_flag = 1) then
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.psychosomatic_disorder_flag,1,'L');
				else
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.blank_one,1,'L');
				end if;
				if (r_c03.cause_of_deacease = 1) then
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.cause_of_deacease,1,'L');
				else
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c03.blank_one,1,'L');
				end if;
			end;
		end loop;
	
	
        open c03;
			fetch c03 into r3_count;
				if (c03%notfound) then
				  r3_count.totalcount := 0;
				end if;
            if (coalesce(r3_count.totalCount,0) between 0 and 3) THEN
				countv := 3 - (r3_count.totalCount)::numeric;
		close C03;
		    for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('1',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					end;
				end loop;
            end if;
	

    for r_c04 in C04
			loop
			    begin
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.decease_name_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.decease_computation_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.icd10,5,'R',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.modifier1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04. modifier2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04. modifier3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.suffix1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.suffix2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.suffix3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					if (r_c04.psychosomatic_dis_flg = 1) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.psychosomatic_dis_flg,1,'L');
					else
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.blank_one,1,'L');
					end if;
					if (r_c04.cause_of_deacease = 1) then
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.cause_of_deacease,1,'L');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c04.blank_one,1,'L');
					end if;
				end;
			end loop;
   
    
    open C04;
		fetch c04 into r4_count;
			if (c04%notfound) then
				r4_count.totalcount := 0;
			end if;
        if (coalesce(r4_count.totalcount,0) between 0 and 1) then
			countv := 1     - (r4_count.totalcount)::numeric;
			for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('1',1,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'l');
					end;
				end loop;
		end if;
	close c04;
	
	
		for r_c05 in C05
			loop
				begin
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.decease_name_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.decease_computation_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.icd10,5,'R',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.modifier1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.modifier2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.modifier3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.suffix1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.suffix2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.suffix3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					if (r_c05.psychosomatic_dis_flg = 1) then
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.psychosomatic_dis_flg,1,'L');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.blank_one,1,'L');
					end if;
					if (r_c05.cause_of_deacease = 1) then
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.cause_of_deacease,1,'L');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c05.blank_one,1,'L');
					end if;
                end;
        end loop;
	
    
    open c05;
        fetch c05 into r5_count;
			if (c05%notfound) then
				r5_count.totalcount := 0;
			end if;
        if (coalesce(r5_count.totalcount,0) between 0 and 1) then
			countv := 1     - (r5_count.totalcount)::numeric;
			for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'l');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'l');
					end;
				  end loop;
	    end if;
    close c05;
	
      for r_c06 in c06
			loop
			    begin
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.decease_computation_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.receipt_computation_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.icd10,5,'R',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.modifier1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06. modifier2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06. modifier3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.suffix1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.suffix2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.suffix3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					if (r_c06.psychosomatic_dis_flg = 1) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.psychosomatic_dis_flg,1,'L');
					else
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.blank_one,1,'L');
					end if;
					 if (r_c06.cause_of_deacease = 1) then
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.cause_of_deacease,1,'L');
					else
					    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c06.blank_one,1,'L');
					end if;
			    end;
			end loop;
			
    open c06;
		fetch c06 into r6_count;
			if (c06%notfound) then
				r6_count.totalcount := 0;
			end if;
        if (coalesce(r6_count.totalcount,0) between 0 and 1) then
            countv := 1     - (r6_count.totalcount)::numeric;
            for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					end;
				end loop;
		end if;
	close c06;

   for r_c07 in c07
		loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.decease_computation_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.receipt_computation_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.icd10,5,'R',' ');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.modifier1_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.modifier2_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.modifier3_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.suffix1_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.suffix2_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.suffix3_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
				if (r_c07.psychosomatic_dis_flg = 1) then
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.psychosomatic_dis_flg,1,'L');
				else
				    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.blank_one,1,'L');
				end if;
				if (r_c07.cause_of_deacease = 1) then
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.cause_of_deacease,1,'L');
				else
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c07.blank_one,1,'L');
				end if;
            end;
        end loop;

    
    open c07;
		fetch c07 into r7_count;
			if (c07%notfound) then
				r7_count.totalcount := 0;
			end if;
        if (coalesce(r7_count.totalcount,0) between 0 and 5) then
            countv := 5     - (r7_count.totalcount)::numeric;
			for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('1',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
                    end;
                end loop;
        end if;
    close c07;

   for r_c08 in c08
		loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.decease_computation_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.receipt_computation_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.icd10,5,'R',' ');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.modifier1_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.modifier2_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.modifier3_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.suffix1_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.suffix2_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.suffix3_rct_code,7,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
				if (r_c08.psychosomatic_dis_flg = 1) then
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.psychosomatic_dis_flg,1,'L');
				else
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.blank_one,1,'L');
				end if;
				if (r_c08.cause_of_deacease = 1) then
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.cause_of_deacease,1,'L');
				else
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c08.blank_one,1,'L');
				end if;
            end;
        end loop;

    open c08;
		fetch c08 into r8_count;
			if (c08%notfound) then
				r8_count.totalcount := 0;
			end if;
        if (coalesce(r8_count.totalcount,0) between 0 and 5) then
			countv := 5 - (r8_count.totalcount)::numeric;
			for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('1',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					end;
				end loop;
		end if;
	close c08;

    for r_c09 in c09
			loop
                begin
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.decease_computation_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.receipt_computation_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.icd10,5,'R',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.modifier1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.modifier2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.modifier3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.suffix1_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.suffix2_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.suffix3_rct_code,7,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					if (r_c09.psychosomatic_dis_flg = 1) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.psychosomatic_dis_flg,1,'L');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.blank_one,1,'L');
					end if;
					if (r_c09.cause_of_deacease = 1) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.cause_of_deacease,1,'L');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c09.blank_one,1,'L');
					end if;
                end;
            end loop;
			
    open c09;
		fetch c09 into r9_count;
			if (c09%notfound) then
				r9_count.totalcount := 0;
			end if;
        if (coalesce(r9_count.totalcount,0) between 0 and 5) then
			countv := 5     - (r9_count.totalcount)::numeric;
			for countvalue in 1 .. countv
				loop
					begin
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'R');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',7,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
                        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('0',1,'L');
					   
                    end;
				end loop;
		end if;
    close c09;
    
  begin
  select pd.si_admission_reason,
		   c.qt_pregnancy_age_weeks,
		   c.qt_birth_weight_grams,
		   c.si_jcs jcs
    into STRICT   si_admission_reason_w,
           qt_pregnancy_age_weeks_w,
           qt_birth_weight_grams_w,
           si_jcs_w
    from   patient_dpc pd,
           patient_dpc_general_cond c
    where  c.nr_seq_patient_dpc = pd.nr_sequencia
    and    pd.nr_sequencia  = parameter_id_p;
    exception
		when    no_data_found then		
                si_admission_reason_w := null;
                qt_pregnancy_age_weeks_w := null;
                qt_birth_weight_grams_w := null;
                si_jcs_w := null;
                PERFORM set_config('nais_dpc_pck.ds_error_w', sqlerrm||' Error occurred while retriving DPC Information ', false);
		end;

    if (si_admission_reason_w IS NOT NULL AND si_admission_reason_w::text <> '')then   
		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(si_admission_reason_w,' '),2,'L','0');
    else
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',2,'L');
    end if;
    if (qt_pregnancy_age_weeks_w IS NOT NULL AND qt_pregnancy_age_weeks_w::text <> '')then
       CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(qt_pregnancy_age_weeks_w,' '),3,'L');
    else
       CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',3,'L');
    end if;
    if (qt_birth_weight_grams_w IS NOT NULL AND qt_birth_weight_grams_w::text <> '')then
        CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(qt_birth_weight_grams_w,' '),4,'L');
    else
     CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',4,'L');
    end if;
    if (si_jcs_w IS NOT NULL AND si_jcs_w::text <> '')then
       CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(si_jcs_w,' '),4,'L');
      else
    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',3,'L');
    end if;

  for r_c10 in c10
        loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.order_code,8,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.medical_code,6,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.receipt_computation_code,9,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.kcode,8,'R',' ');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.date_of_execution,8,'R',' ');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.scheduled_date,8,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.after_surgery_jcs,3,'L');
				if (r_c10.first_re_surgery IS NOT NULL AND r_c10.first_re_surgery::text <> '') then
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.first_re_surgery,1,'L');
				else
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
				end if;
				if (r_c10.one_or_both_side IS NOT NULL AND r_c10.one_or_both_side::text <> '') then
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.one_or_both_side,1,'L');
				else
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
				end if;
			
        if (r_c10.anesthesia IS NOT NULL AND r_c10.anesthesia::text <> '') then
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c10.anesthesia,1,'L');
				else
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
				end if;
            end;
        end loop;
	
    open c10;
        fetch c10 into r10_count;
			if (c10%notfound) then
				r10_count.totalcount := 0;
			end if;
        if (coalesce(r10_count.totalcount,0) between 0 and 5) then
			countv := 5 - (r10_count.totalcount)::numeric;
			for countvalue in 1 .. countv
				loop
					begin
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',6,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',9,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'R');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',3,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L');
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('1',1,'L');
					end;
				end loop;
		end if;
    close c10;

    
  for r_c11 in c11
		loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c11.medical_code,6,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c11.receipt_computation_code,9,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c11.kcode,8,'L');
				if (r_c11.date_of_execution IS NOT NULL AND r_c11.date_of_execution::text <> '') then
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c11.date_of_execution,8,'L');
				else
				  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'R',' ');
				end if;
			end;
	    end loop;
		
		
	open c11;
		fetch c11 into r11_count;
			if (c11%notfound) then
				r11_count.totalcount := 0;
			end if;
            if (coalesce(r11_count.totalcount,0) between 0 and 5) then
				countv := 5     - (r11_count.totalcount)::numeric;
				for countvalue in 1 .. countv
					loop
						begin
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',6,'L');
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',9,'L');
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
						end;
					end loop;
			end if;
    close c11;

   for r_c12 in c12
		loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c12.medical_code,6,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c12.receipt_computation_code,9,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c12.kcode,8,'L');
				if (r_c12.date_of_execution IS NOT NULL AND r_c12.date_of_execution::text <> '') then
       		CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c12.date_of_execution,8,'L');
				else
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'R',' ');
				end if;
            end;
        end loop;		
		
    open c12;
		fetch c12 into r12_count;
			if (c12%notfound) then
				r12_count.totalcount := 0;
			end if;
			if (coalesce(r12_count.totalcount,0) between 0 and 5) then
				countv := 5 - (r12_count.totalcount)::numeric;
				for countvalue in 1 .. countv
					loop
						begin
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',6,'L');
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',9,'L');
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
							CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',8,'L');
						end;
					end loop;
			end if;
	close c12;

   begin
		select  ds_doenca_cid
		into STRICT    ds_doenca_cid1_w
		from    patient_dpc a,
				patient_dpc_diagnosis b,
				diagnostico_doenca c,
				cid_doenca d
        where   b.nr_seq_patient_dpc = a.nr_sequencia
        and     c.nr_seq_interno     = b.nr_seq_diagnosis
        and     d.cd_doenca_cid      = c.cd_doenca
        and     b.si_main            = 'Y'  
        and     a.nr_sequencia       = parameter_id_p LIMIT 1;
        exception
		when    no_data_found then
		        ds_doenca_cid1_w := null;
		end;
		
    begin
		select  ds_doenca_cid
		into STRICT    ds_doenca_cid2_w
		from    patient_dpc a,
				patient_dpc_diagnosis b,
				diagnostico_doenca c,
				cid_doenca d
        where   b.nr_seq_patient_dpc   = a.nr_sequencia
        and     c.nr_seq_interno       = b.nr_seq_diagnosis
        and     d.cd_doenca_cid        = c. cd_doenca
        and     si_for_hospitalization = 'Y'
        and     a.nr_sequencia         = parameter_id_p LIMIT 1;
        exception
		when no_data_found then
		       ds_doenca_cid2_w := null;
            
		end;
	
    begin
		select  ds_doenca_cid
		into STRICT    ds_doenca_cid3_w
		from    patient_dpc a,
			    diagnostico_doenca b,
			    cid_doenca c
		where   b.nr_seq_interno   = a.nr_seq_most_exp_diagnosis
		and     c.cd_doenca_cid    = b.cd_doenca
		and     a.nr_sequencia     = parameter_id_p LIMIT 1;
    exception
    when no_data_found then
          ds_doenca_cid3_w := null;
    end;
	
    begin
		select  ds_doenca_cid
		into STRICT    ds_doenca_cid4_w
		from    patient_dpc a,
				patient_dpc_diagnosis b,
				diagnostico_doenca c,
				cid_doenca d
        where   b.nr_seq_patient_dpc       = a.nr_sequencia
        and     c.nr_seq_interno           = b.nr_seq_diagnosis
        and     d.cd_doenca_cid            = c.cd_doenca
        and     b.si_second_most_expensive = 'Y'
        and     a.nr_sequencia             = parameter_id_p LIMIT 1;
		exception
		when no_data_found then
			ds_doenca_cid4_w :=null;
		end;
	
    begin
		select 	ds_doenca_cid
		into STRICT   	ds_doenca_cid5_w
		from   	patient_dpc a,
				patient_dpc_diagnosis b,
				diagnostico_doenca c,
				cid_doenca d
		where   b.nr_seq_patient_dpc   = a.nr_sequencia
		and     c.nr_seq_interno       = b.nr_seq_diagnosis
		and     d.cd_doenca_cid        = c.cd_doenca
		and     si_comorbidity_before  = 'Y'
		and     a.nr_sequencia         = parameter_id_p LIMIT 1;
		exception
		when no_data_found then
		        ds_doenca_cid5_w := null;
		end;
	
    begin
		select  ds_doenca_cid
		into STRICT    ds_doenca_cid6_w
		from    patient_dpc a,
				patient_dpc_diagnosis b,
				diagnostico_doenca c,
				cid_doenca d
        where   b.nr_seq_patient_dpc   = a.nr_sequencia
        and     c.nr_seq_interno       = b.nr_seq_diagnosis
        and     d.cd_doenca_cid        = c.cd_doenca
        and     si_after_admission     = 'Y'
        and     a.nr_sequencia         = parameter_id_p LIMIT 1;
		exception
		when no_data_found then
		        ds_doenca_cid6_w:= null;
		end;
		
    begin
		select  ds_doenca_cid
		into STRICT    ds_doenca_cid7_w
		from    patient_dpc a,
				patient_dpc_diagnosis b,
				diagnostico_doenca c,
				cid_doenca d
		where   b.nr_seq_patient_dpc = a.nr_sequencia
		and     c.nr_seq_interno       = b.nr_seq_diagnosis
		and     d.cd_doenca_cid        = c.cd_doenca
		and     si_sub_disease         = 'Y'
		and     a.nr_sequencia         =parameter_id_p LIMIT 1;
		exception
		when no_data_found then
				ds_doenca_cid7_w := null;
		end;
	
        begin
		select  b.vl_gaf_score ,
				' ' intro_by_other_hospital,
				b.si_pneumonia_state,
				b.vl_rankin_scale,
				b.si_stroke_onset
		into STRICT    vl_gaf_score_w,
				intro_by_other_hospital_w,
				si_pneumonia_state_w,
				vl_rankin_scale_w,
				si_stroke_onset_w
		from    patient_dpc a,
		        patient_dpc_general_cond b
		where   b.nr_seq_patient_dpc = a.nr_sequencia
		and     a.nr_sequencia       = parameter_id_p;
        exception
		when no_data_found then
				vl_gaf_score_w  := 111;
				intro_by_other_hospital_w   := null;
				si_pneumonia_state_w  := null;
				vl_rankin_scale_w  := null;
				si_stroke_onset_w  := null;
                PERFORM set_config('nais_dpc_pck.ds_error_w', sqlerrm||' Error occurred while retriving DPC Information ', false);
		end;
		
		for r_c13 in c13
			loop
				begin
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.pregnency,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.department_change,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.ward_move,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(r_c13.inpatient_route,'0'),4,'L','0000');
				    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(r_c13.si_exit_point,'0'),4,'L','000');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.scheduled_emrgncy_hos,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.transportation_by_ambulance,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.last_of_last_discharge,8,'R',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.hospitalized_last_time,1,'L');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.confirmation_flag,1,'L');
					
          if (r_c13.vl_burn_index <> ' ') then                  			
             CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(r_c13.vl_burn_index,5,'L');
					else

					 CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',5,'L');
					end if;
					if (coalesce(ds_doenca_cid1_w::text, '') = '' or (ds_doenca_cid1_w IS NOT NULL AND ds_doenca_cid1_w::text <> '')) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(ds_doenca_cid1_w,' '),80,'R',' ');
					end if;
					if (coalesce(ds_doenca_cid2_w::text, '') = '' or (ds_doenca_cid2_w IS NOT NULL AND ds_doenca_cid2_w::text <> '')) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(ds_doenca_cid2_w,' '),80,'R',' ');
					end if;
					if (coalesce(ds_doenca_cid3_w::text, '') = '' or (ds_doenca_cid3_w IS NOT NULL AND ds_doenca_cid3_w::text <> '')) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(ds_doenca_cid3_w,' '),80,'R',' ');
					end if;
					if (coalesce(ds_doenca_cid4_w::text, '') = '' or (ds_doenca_cid4_w IS NOT NULL AND ds_doenca_cid4_w::text <> '')) then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(ds_doenca_cid4_w,' '),80,'R',' ');
					end if;
					if (coalesce(ds_doenca_cid5_w::text, '') = '' or (ds_doenca_cid5_w IS NOT NULL AND ds_doenca_cid5_w::text <> '')) then
						for countvalue in 1 .. 5
							loop
								begin
								   PERFORM set_config('nais_dpc_pck.ds_line_w', current_setting('nais_dpc_pck.ds_line_w')::text ||rpad(coalesce(ds_doenca_cid5_w,' '), 80,' '), false);
                end;
					  end loop;
					end if;
					if (coalesce(ds_doenca_cid6_w::text, '') = '' or (ds_doenca_cid6_w IS NOT NULL AND ds_doenca_cid6_w::text <> '')) then
						for countvalue in 1 ..5
							loop
								begin
								      PERFORM set_config('nais_dpc_pck.ds_line_w', current_setting('nais_dpc_pck.ds_line_w')::text ||rpad(coalesce(ds_doenca_cid6_w,' '), 80,' '), false);

								end;
					        end loop;
					end if;
                    if (coalesce(ds_doenca_cid7_w::text, '') = '' or (ds_doenca_cid7_w IS NOT NULL AND ds_doenca_cid7_w::text <> '')) then
					  PERFORM set_config('nais_dpc_pck.ds_line_w', current_setting('nais_dpc_pck.ds_line_w')::text ||rpad(coalesce(ds_doenca_cid7_w,' '), 80,' '), false);

					end if;
				    if (coalesce(vl_gaf_score_w::text, '') = '') then
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text('111',3,'L',' ');
					else
					  CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(vl_gaf_score_w,' '),3,'L',' ');
					end if;

					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(intro_by_other_hospital_w,' '),1,'L',' ');
					CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(si_pneumonia_state_w,' '),1,'L',' ');
			  	    if (coalesce(vl_rankin_scale_w::text, '') = '') then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',4,'L',' ');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(vl_rankin_scale_w,' '),4,'L',' ');
					end if;
					if (coalesce(si_stroke_onset_w::text, '') = '') then
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(' ',1,'L',' ');
					else
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_dpc_pck.append_text(coalesce(si_stroke_onset_w,' '),1,'L',' ');
					end if;
				  end;
				end loop;
               
     END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_dpc_pck.nais_common_body ( parameter_id_p bigint ) FROM PUBLIC;
