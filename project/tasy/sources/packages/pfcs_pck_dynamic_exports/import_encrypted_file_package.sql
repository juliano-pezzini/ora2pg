-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_dynamic_exports.import_encrypted_file ( clob_p text ) AS $body$
DECLARE

        nr_offset_w             integer := 1;
        ds_register_w           varchar(32767);
        nr_total_length_w       integer:=length(clob_p);
        nr_line_length_w        integer;

        ds_line_decrypted_w     varchar(1000);
        ds_line_formatted_w     varchar(1000);
        nm_table_w              varchar(100);
        nm_module_w             varchar(100);
        nr_seq_dynamic_module_w	bigint;

		ds_fields_list_w 		nested_table;
		

BEGIN
            while(nr_offset_w <= nr_total_length_w) 
			loop
                nr_line_length_w := instr(clob_p, chr(10), nr_offset_w) - nr_offset_w;
                if (nr_line_length_w < 0) then
                    nr_line_length_w := nr_total_length_w + 1 - nr_offset_w;
                end if;

                ds_register_w := substr(clob_p, nr_offset_w, nr_line_length_w - 1);
                ds_line_decrypted_w := wheb_seguranca.decrypt(to_char(ds_register_w));
                ds_line_formatted_w := regexp_replace(regexp_replace(ds_line_decrypted_w, '(;;{1})', ';null;'), '(;;{1})',';null;');
                nm_table_w := regexp_substr(ds_line_decrypted_w, '[^;]+', 1, 1);

				select cd_registro bulk collect into STRICT ds_fields_list_w
				from
					table( lista_pck.obter_lista_char(ds_line_formatted_w, ';'));

				for i in 2..ds_fields_list_w.LAST
				loop
					if ds_fields_list_w(i) = 'null' then
						ds_fields_list_w(i) := null;
					end if;
				end loop;

                if nm_table_w = 'PFCS_DYNAMIC_MODULE' then
                    nm_module_w := ds_fields_list_w(9);

                    if nm_module_w = 'null' then
                        nm_module_w := obter_desc_expressao((ds_fields_list_w(2))::numeric );
                    end if;

                    ds_fields_list_w(9) := 'NEW_' || nm_module_w;
                elsif nm_table_w = 'PFCS_DASHBOARD' or nm_table_w = 'PFCS_CARD_INDICATOR' then
                    ds_fields_list_w(13) := nr_seq_dynamic_module_w;
                elsif nm_table_w = 'PFCS_CARD' then
                    ds_fields_list_w(24) := nr_seq_dynamic_module_w;
                end if;

                CALL pfcs_pck_dynamic_exports.insert_table_data(nm_table_w, ds_fields_list_w);

                select nr_sequencia 
                    into STRICT  nr_seq_dynamic_module_w
                    from (
                        SELECT nr_sequencia 
                            from pfcs_dynamic_module 
                            order by dt_atualizacao desc) alias0 LIMIT 1;

                nr_offset_w := nr_offset_w + nr_line_length_w + 1;
            end loop;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_dynamic_exports.import_encrypted_file ( clob_p text ) FROM PUBLIC;
