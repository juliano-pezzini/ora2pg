-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

--=========================================== Cursors ===========================================
	

	--=========================================== Procedures ===========================================
CREATE OR REPLACE PROCEDURE pfcs_pck_dynamic_exports.generate_encrypted_file ( nr_sequencia_p bigint, file_encrypted_p INOUT text ) AS $body$
DECLARE

        ds_encrypted_fields_w   varchar(1000);
        ds_file_w               text;

BEGIN
            open current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dynamic_module')::CURSOR(nr_sequencia_p(nr_sequencia_p);
                loop
                    fetch current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dynamic_module')::CURSOR(nr_sequencia_p into ds_encrypted_fields_w;
                    EXIT WHEN NOT FOUND; /* apply on current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dynamic_module')::CURSOR(nr_sequencia_p */
                    select wheb_seguranca.encrypt(ds_encrypted_fields_w)
                        into STRICT ds_encrypted_fields_w 
;
                    ds_file_w := ds_file_w||(ds_encrypted_fields_w||','||chr(10));
                end loop;
            close current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dynamic_module')::CURSOR(nr_sequencia_p;
            open current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dashboard')::CURSOR(nr_seq_dynamic_module_p(nr_sequencia_p);
                loop
                    fetch current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dashboard')::CURSOR(nr_seq_dynamic_module_p into ds_encrypted_fields_w;
                    EXIT WHEN NOT FOUND; /* apply on current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dashboard')::CURSOR(nr_seq_dynamic_module_p */
                    select wheb_seguranca.encrypt(ds_encrypted_fields_w)
                        into STRICT ds_encrypted_fields_w 
;
                    ds_file_w := ds_file_w||(ds_encrypted_fields_w||','||chr(10));
                end loop;
            close current_setting('pfcs_pck_dynamic_exports.cur_pfcs_dashboard')::CURSOR(nr_seq_dynamic_module_p;
            open current_setting('pfcs_pck_dynamic_exports.cur_pfcs_card')::CURSOR(nr_seq_dynamic_module_p(nr_sequencia_p);
                loop
                    fetch current_setting('pfcs_pck_dynamic_exports.cur_pfcs_card')::CURSOR(nr_seq_dynamic_module_p into ds_encrypted_fields_w;
                    EXIT WHEN NOT FOUND; /* apply on current_setting('pfcs_pck_dynamic_exports.cur_pfcs_card')::CURSOR(nr_seq_dynamic_module_p */
                    select wheb_seguranca.encrypt(ds_encrypted_fields_w)
                        into STRICT ds_encrypted_fields_w 
;
                    ds_file_w := ds_file_w||(ds_encrypted_fields_w||','||chr(10));
                end loop;
            close current_setting('pfcs_pck_dynamic_exports.cur_pfcs_card')::CURSOR(nr_seq_dynamic_module_p;
            open cur_pfcs_card_indicator(nr_sequencia_p);
                loop
                    fetch cur_pfcs_card_indicator into ds_encrypted_fields_w;
                    EXIT WHEN NOT FOUND; /* apply on cur_pfcs_card_indicator */
                    select wheb_seguranca.encrypt(ds_encrypted_fields_w)
                        into STRICT ds_encrypted_fields_w 
;
                    ds_file_w := ds_file_w||(ds_encrypted_fields_w||','||chr(10));
                end loop;
            close cur_pfcs_card_indicator;

            file_encrypted_p := ds_file_w;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_dynamic_exports.generate_encrypted_file ( nr_sequencia_p bigint, file_encrypted_p INOUT text ) FROM PUBLIC;
