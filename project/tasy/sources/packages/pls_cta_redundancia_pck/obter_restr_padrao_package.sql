-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_cta_redundancia_pck.obter_restr_padrao ( nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, valor_bind_p INOUT sql_pck.t_dado_bind, ds_alias_p text default 'a') AS $body$
DECLARE

ds_restricao_w	varchar(1000);

BEGIN

-- lote ao qual pertence o protocolo
if (nr_seq_lote_conta_p IS NOT NULL AND nr_seq_lote_conta_p::text <> '') then
	ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w || ' and ' || ds_alias_p || '.nr_seq_lote_protocolo = :nr_seq_lote_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_lote_pc', nr_seq_lote_conta_p, valor_bind_p);
end if;

-- protocolo
if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
	ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w || ' and ' || ds_alias_p || '.nr_seq_protocolo = :nr_seq_protocolo_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_protocolo_pc', nr_seq_protocolo_p, valor_bind_p);
end if;

-- lote de processo
if (nr_seq_lote_processo_p IS NOT NULL AND nr_seq_lote_processo_p::text <> '') then
	ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w || 	' and exists (	select	1' || pls_util_pck.enter_w ||
									'		from	pls_cta_lote_proc_conta xz' || pls_util_pck.enter_w ||
									'		where	xz.nr_seq_lote_processo = :nr_seq_lote_processo_pc' || pls_util_pck.enter_w ||
									'		and	xz.nr_seq_conta = ' || ds_alias_p || '.nr_seq_conta' || pls_util_pck.enter_w ||
									'	      )';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_lote_processo_pc', nr_seq_lote_processo_p, valor_bind_p);
end if;

-- conta
if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w || ' and ' || ds_alias_p || '.nr_seq_conta = :nr_seq_conta_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_conta_pc', nr_seq_conta_p, valor_bind_p);
end if;

-- an√°lise
if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') then
	ds_restricao_w := ds_restricao_w || pls_util_pck.enter_w || ' and ' || ds_alias_p || '.nr_seq_analise = :nr_seq_analise_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_analise_pc', nr_seq_analise_p, valor_bind_p);
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_cta_redundancia_pck.obter_restr_padrao ( nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, valor_bind_p INOUT sql_pck.t_dado_bind, ds_alias_p text default 'a') FROM PUBLIC;
