-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_redundancia_pck.alimenta_tabela_imp ( nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
BEGIN
-- essa rotina trabalha com merge para melhor desempenho
-- por esse motivo foi feito um comando para cada situação de atualização
-- tomar cuidado, pois se for necessário incluir um novo campo isso deve ser feito várias vezes dentro desta procedure
-- seta -1 para o nr_seq_proc_partic para facilitar a busca dos dados
-- lote ao qual pertence o protocolo
if (nr_seq_lote_conta_p IS NOT NULL AND nr_seq_lote_conta_p::text <> '') then

	merge into pls_conta_prestador_proc dest
	using(	SELECT	proc.cd_guia_imp cd_guia_referencia,
				partic.cd_medico_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				partic.ie_status ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				partic.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				partic.nr_seq_prestador nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				partic.nr_sequencia nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from 	pls_conta_proc_v proc,
				pls_proc_participante partic
			where 	proc.nr_seq_lote_conta = nr_seq_lote_conta_p
			and	proc.ie_status != 'D'
			and	partic.nr_seq_conta_proc = proc.nr_sequencia
			and	partic.ie_gerada_cta_honorario = 'N'
			
union all

			SELECT	proc.cd_guia_imp cd_guia_referencia,
				proc.cd_medico_executor_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				pls_cta_redundancia_pck.converte_status_proc_partic(proc.ie_status) ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				proc.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				proc.nr_seq_prestador_exec_imp nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				-1 nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from	pls_conta_proc_v proc
			where	proc.nr_seq_lote_conta = nr_seq_lote_conta_p
			and	proc.ie_status != 'D'
			and	not exists (	select	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = proc.nr_sequencia)) src

	on (dest.nr_seq_protocolo = src.nr_seq_protocolo and dest.nr_seq_conta = src.nr_seq_conta and
		 dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and dest.nr_seq_proc_partic = src.nr_seq_proc_partic)
	-- Quando o registro ainda não está na tabela grava ele
	when	not matched then
		insert(	dest.nr_sequencia, dest.cd_guia_referencia, dest.cd_medico_executor, dest.cd_medico_solicitante,
				dest.cd_procedimento, dest.dt_procedimento, dest.ie_controle_upd, dest.ie_origem_proced,
				dest.ie_status_conta, dest.ie_status_procedimento, dest.ie_status_proc_participante, dest.ie_status_protocolo,
				dest.nr_seq_analise, dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo, dest.nr_seq_prestador_atend, dest.nr_seq_prestador_exec, dest.nr_seq_prestador_solic,
				dest.nr_seq_proc_partic, dest.nr_seq_protocolo, dest.nr_seq_segurado, dest.nm_usuario,
				dest.nm_usuario_nrec, dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.ie_glosa)
		values (nextval('pls_conta_prestador_proc_seq'), src.cd_guia_referencia, src.cd_medico_executor, src.cd_medico_solicitante,
				src.cd_procedimento, src.dt_procedimento, src.ie_controle_upd, src.ie_origem_proced, 
				src.ie_status_conta, src.ie_status_procedimento, src.ie_status_proc_participante, src.ie_status_protocolo, 
				src.nr_seq_analise, src.nr_seq_conta, src.nr_seq_conta_proc, src.nr_seq_grau_partic,			
				src.nr_seq_lote_protocolo, src.nr_seq_prestador_atend, src.nr_seq_prestador_exec, src.nr_seq_prestador_solic, 
				src.nr_seq_proc_partic, src.nr_seq_protocolo, src.nr_seq_segurado, nm_usuario_p, 
				nm_usuario_p, clock_timestamp(), clock_timestamp(), src.ie_glosa)
	-- Quando já está atualiza, tem dados que não faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat
	-- pois não vai mudar.
	when	matched then
		update set	dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.cd_medico_executor			= src.cd_medico_executor,
				dest.cd_medico_solicitante		= src.cd_medico_solicitante,
				dest.cd_procedimento			= src.cd_procedimento,
				dest.dt_procedimento			= src.dt_procedimento,
				dest.ie_controle_upd			= src.ie_controle_upd,
				dest.ie_origem_proced			= src.ie_origem_proced, 	
				dest.ie_status_conta			= src.ie_status_conta,
				dest.ie_status_procedimento		= src.ie_status_procedimento,
				dest.ie_status_proc_participante	= src.ie_status_proc_participante, 
				dest.ie_status_protocolo		= src.ie_status_protocolo,
				dest.nr_seq_analise			= src.nr_seq_analise,
				dest.nr_seq_grau_partic			= src.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo		= src.nr_seq_lote_protocolo,
				dest.nr_seq_prestador_atend		= src.nr_seq_prestador_atend,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec, 
				dest.nr_seq_prestador_solic		= src.nr_seq_prestador_solic,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.ie_glosa				= src.ie_glosa;
	commit;
	
-- protocolo
elsif (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then

	merge into pls_conta_prestador_proc dest
	using(	SELECT	proc.cd_guia_imp cd_guia_referencia,
				partic.cd_medico_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				partic.ie_status ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				partic.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				partic.nr_seq_prestador nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				partic.nr_sequencia nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from 	pls_conta_proc_v proc,
				pls_proc_participante partic
			where 	proc.nr_seq_protocolo = nr_seq_protocolo_p
			and	proc.ie_status != 'D'
			and	partic.nr_seq_conta_proc = proc.nr_sequencia
			and	partic.ie_gerada_cta_honorario = 'N'
			
union all

			SELECT	proc.cd_guia_imp cd_guia_referencia,
				proc.cd_medico_executor_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				pls_cta_redundancia_pck.converte_status_proc_partic(proc.ie_status) ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				proc.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				proc.nr_seq_prestador_exec_imp nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				-1 nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from	pls_conta_proc_v proc
			where	proc.nr_seq_protocolo = nr_seq_protocolo_p
			and	proc.ie_status != 'D'
			and	not exists (	select	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = proc.nr_sequencia)) src

	on (dest.nr_seq_protocolo = src.nr_seq_protocolo and dest.nr_seq_conta = src.nr_seq_conta and
		 dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and dest.nr_seq_proc_partic = src.nr_seq_proc_partic)
	-- Quando o registro ainda não está na tabela grava ele
	when	not matched then
		insert(	dest.nr_sequencia, dest.cd_guia_referencia, dest.cd_medico_executor, dest.cd_medico_solicitante,
				dest.cd_procedimento, dest.dt_procedimento, dest.ie_controle_upd, dest.ie_origem_proced,
				dest.ie_status_conta, dest.ie_status_procedimento, dest.ie_status_proc_participante, dest.ie_status_protocolo,
				dest.nr_seq_analise, dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo, dest.nr_seq_prestador_atend, dest.nr_seq_prestador_exec, dest.nr_seq_prestador_solic,
				dest.nr_seq_proc_partic, dest.nr_seq_protocolo, dest.nr_seq_segurado, dest.nm_usuario,
				dest.nm_usuario_nrec, dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.ie_glosa)
		values (nextval('pls_conta_prestador_proc_seq'), src.cd_guia_referencia, src.cd_medico_executor, src.cd_medico_solicitante,
				src.cd_procedimento, src.dt_procedimento, src.ie_controle_upd, src.ie_origem_proced, 
				src.ie_status_conta, src.ie_status_procedimento, src.ie_status_proc_participante, src.ie_status_protocolo, 
				src.nr_seq_analise, src.nr_seq_conta, src.nr_seq_conta_proc, src.nr_seq_grau_partic,			
				src.nr_seq_lote_protocolo, src.nr_seq_prestador_atend, src.nr_seq_prestador_exec, src.nr_seq_prestador_solic, 
				src.nr_seq_proc_partic, src.nr_seq_protocolo, src.nr_seq_segurado, nm_usuario_p, 
				nm_usuario_p, clock_timestamp(), clock_timestamp(), src.ie_glosa)
	-- Quando já está atualiza, tem dados que não faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat
	-- pois não vai mudar.
	when	matched then
		update set	dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.cd_medico_executor			= src.cd_medico_executor,
				dest.cd_medico_solicitante		= src.cd_medico_solicitante,
				dest.cd_procedimento			= src.cd_procedimento,
				dest.dt_procedimento			= src.dt_procedimento,
				dest.ie_controle_upd			= src.ie_controle_upd,
				dest.ie_origem_proced			= src.ie_origem_proced, 	
				dest.ie_status_conta			= src.ie_status_conta,
				dest.ie_status_procedimento		= src.ie_status_procedimento,
				dest.ie_status_proc_participante	= src.ie_status_proc_participante, 
				dest.ie_status_protocolo		= src.ie_status_protocolo,
				dest.nr_seq_analise			= src.nr_seq_analise,
				dest.nr_seq_grau_partic			= src.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo		= src.nr_seq_lote_protocolo,
				dest.nr_seq_prestador_atend		= src.nr_seq_prestador_atend,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec, 
				dest.nr_seq_prestador_solic		= src.nr_seq_prestador_solic,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.ie_glosa				= src.ie_glosa;
	commit;
	
-- lote de processo
elsif (nr_seq_lote_processo_p IS NOT NULL AND nr_seq_lote_processo_p::text <> '') then

	merge into pls_conta_prestador_proc dest
	using(	SELECT	proc.cd_guia_imp cd_guia_referencia,
				partic.cd_medico_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				partic.ie_status ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				partic.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				partic.nr_seq_prestador nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				partic.nr_sequencia nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from 	pls_conta_proc_v proc,
				pls_proc_participante partic
			where 	exists (	select	1
						from	pls_cta_lote_proc_conta xz
						where	xz.nr_seq_lote_processo = nr_seq_lote_processo_p
						and	xz.nr_seq_conta = proc.nr_seq_conta)
			and	proc.ie_status != 'D'
			and	partic.nr_seq_conta_proc = proc.nr_sequencia
			and	partic.ie_gerada_cta_honorario = 'N'
			
union all

			SELECT	proc.cd_guia_imp cd_guia_referencia,
				proc.cd_medico_executor_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				pls_cta_redundancia_pck.converte_status_proc_partic(proc.ie_status) ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				proc.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				proc.nr_seq_prestador_exec_imp nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				-1 nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from	pls_conta_proc_v proc
			where	exists (	select	1
						from	pls_cta_lote_proc_conta xz
						where	xz.nr_seq_lote_processo = nr_seq_lote_processo_p
						and	xz.nr_seq_conta = proc.nr_seq_conta)
			and	proc.ie_status != 'D'
			and	not exists (	select	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = proc.nr_sequencia)) src

	on (dest.nr_seq_protocolo = src.nr_seq_protocolo and dest.nr_seq_conta = src.nr_seq_conta and
		 dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and dest.nr_seq_proc_partic = src.nr_seq_proc_partic)
	-- Quando o registro ainda não está na tabela grava ele
	when	not matched then
		insert(	dest.nr_sequencia, dest.cd_guia_referencia, dest.cd_medico_executor, dest.cd_medico_solicitante,
				dest.cd_procedimento, dest.dt_procedimento, dest.ie_controle_upd, dest.ie_origem_proced,
				dest.ie_status_conta, dest.ie_status_procedimento, dest.ie_status_proc_participante, dest.ie_status_protocolo,
				dest.nr_seq_analise, dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo, dest.nr_seq_prestador_atend, dest.nr_seq_prestador_exec, dest.nr_seq_prestador_solic,
				dest.nr_seq_proc_partic, dest.nr_seq_protocolo, dest.nr_seq_segurado, dest.nm_usuario,
				dest.nm_usuario_nrec, dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.ie_glosa)
		values (nextval('pls_conta_prestador_proc_seq'), src.cd_guia_referencia, src.cd_medico_executor, src.cd_medico_solicitante,
				src.cd_procedimento, src.dt_procedimento, src.ie_controle_upd, src.ie_origem_proced, 
				src.ie_status_conta, src.ie_status_procedimento, src.ie_status_proc_participante, src.ie_status_protocolo, 
				src.nr_seq_analise, src.nr_seq_conta, src.nr_seq_conta_proc, src.nr_seq_grau_partic,			
				src.nr_seq_lote_protocolo, src.nr_seq_prestador_atend, src.nr_seq_prestador_exec, src.nr_seq_prestador_solic, 
				src.nr_seq_proc_partic, src.nr_seq_protocolo, src.nr_seq_segurado, nm_usuario_p, 
				nm_usuario_p, clock_timestamp(), clock_timestamp(), src.ie_glosa)
	-- Quando já está atualiza, tem dados que não faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat
	-- pois não vai mudar.
	when	matched then
		update set	dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.cd_medico_executor			= src.cd_medico_executor,
				dest.cd_medico_solicitante		= src.cd_medico_solicitante,
				dest.cd_procedimento			= src.cd_procedimento,
				dest.dt_procedimento			= src.dt_procedimento,
				dest.ie_controle_upd			= src.ie_controle_upd,
				dest.ie_origem_proced			= src.ie_origem_proced, 	
				dest.ie_status_conta			= src.ie_status_conta,
				dest.ie_status_procedimento		= src.ie_status_procedimento,
				dest.ie_status_proc_participante	= src.ie_status_proc_participante, 
				dest.ie_status_protocolo		= src.ie_status_protocolo,
				dest.nr_seq_analise			= src.nr_seq_analise,
				dest.nr_seq_grau_partic			= src.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo		= src.nr_seq_lote_protocolo,
				dest.nr_seq_prestador_atend		= src.nr_seq_prestador_atend,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec, 
				dest.nr_seq_prestador_solic		= src.nr_seq_prestador_solic,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(), 
				dest.ie_glosa				= src.ie_glosa;
	commit;

-- conta
elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

	merge into pls_conta_prestador_proc dest
	using(	SELECT	proc.cd_guia_imp cd_guia_referencia,
				partic.cd_medico_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				partic.ie_status ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				partic.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				partic.nr_seq_prestador nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				partic.nr_sequencia nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from 	pls_conta_proc_v proc,
				pls_proc_participante partic
			where 	proc.nr_seq_conta = nr_seq_conta_p
			and	proc.ie_status != 'D'
			and	partic.nr_seq_conta_proc = proc.nr_sequencia
			and	partic.ie_gerada_cta_honorario = 'N'
			
union all

			SELECT	proc.cd_guia_imp cd_guia_referencia,
				proc.cd_medico_executor_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				pls_cta_redundancia_pck.converte_status_proc_partic(proc.ie_status) ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				proc.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				proc.nr_seq_prestador_exec_imp nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				-1 nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from	pls_conta_proc_v proc
			where	proc.nr_seq_conta = nr_seq_conta_p
			and	proc.ie_status != 'D'
			and	not exists (	select	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = proc.nr_sequencia)) src

	on (dest.nr_seq_protocolo = src.nr_seq_protocolo and dest.nr_seq_conta = src.nr_seq_conta and
		 dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and dest.nr_seq_proc_partic = src.nr_seq_proc_partic)
	-- Quando o registro ainda não está na tabela grava ele
	when	not matched then
		insert(	dest.nr_sequencia, dest.cd_guia_referencia, dest.cd_medico_executor, dest.cd_medico_solicitante,
				dest.cd_procedimento, dest.dt_procedimento, dest.ie_controle_upd, dest.ie_origem_proced,
				dest.ie_status_conta, dest.ie_status_procedimento, dest.ie_status_proc_participante, dest.ie_status_protocolo,
				dest.nr_seq_analise, dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo, dest.nr_seq_prestador_atend, dest.nr_seq_prestador_exec, dest.nr_seq_prestador_solic,
				dest.nr_seq_proc_partic, dest.nr_seq_protocolo, dest.nr_seq_segurado, dest.nm_usuario,
				dest.nm_usuario_nrec, dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.ie_glosa)
		values (nextval('pls_conta_prestador_proc_seq'), src.cd_guia_referencia, src.cd_medico_executor, src.cd_medico_solicitante,
				src.cd_procedimento, src.dt_procedimento, src.ie_controle_upd, src.ie_origem_proced, 
				src.ie_status_conta, src.ie_status_procedimento, src.ie_status_proc_participante, src.ie_status_protocolo, 
				src.nr_seq_analise, src.nr_seq_conta, src.nr_seq_conta_proc, src.nr_seq_grau_partic,			
				src.nr_seq_lote_protocolo, src.nr_seq_prestador_atend, src.nr_seq_prestador_exec, src.nr_seq_prestador_solic, 
				src.nr_seq_proc_partic, src.nr_seq_protocolo, src.nr_seq_segurado, nm_usuario_p, 
				nm_usuario_p, clock_timestamp(), clock_timestamp(), src.ie_glosa)
	-- Quando já está atualiza, tem dados que não faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat
	-- pois não vai mudar.
	when	matched then
		update set	dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.cd_medico_executor			= src.cd_medico_executor,
				dest.cd_medico_solicitante		= src.cd_medico_solicitante,
				dest.cd_procedimento			= src.cd_procedimento,
				dest.dt_procedimento			= src.dt_procedimento,
				dest.ie_controle_upd			= src.ie_controle_upd,
				dest.ie_origem_proced			= src.ie_origem_proced, 	
				dest.ie_status_conta			= src.ie_status_conta,
				dest.ie_status_procedimento		= src.ie_status_procedimento,
				dest.ie_status_proc_participante	= src.ie_status_proc_participante, 
				dest.ie_status_protocolo		= src.ie_status_protocolo,
				dest.nr_seq_analise			= src.nr_seq_analise,
				dest.nr_seq_grau_partic			= src.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo		= src.nr_seq_lote_protocolo,
				dest.nr_seq_prestador_atend		= src.nr_seq_prestador_atend,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec, 
				dest.nr_seq_prestador_solic		= src.nr_seq_prestador_solic,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.ie_glosa				= src.ie_glosa;
	commit;

-- análise
elsif (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') then

	merge into pls_conta_prestador_proc dest
	using(	SELECT	proc.cd_guia_imp cd_guia_referencia,
				partic.cd_medico_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				partic.ie_status ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				partic.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				partic.nr_seq_prestador nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				partic.nr_sequencia nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from 	pls_conta_proc_v proc,
				pls_proc_participante partic
			where 	proc.nr_seq_analise = nr_seq_analise_p
			and	proc.ie_status != 'D'
			and	partic.nr_seq_conta_proc = proc.nr_sequencia
			and	partic.ie_gerada_cta_honorario = 'N'
			
union all

			SELECT	proc.cd_guia_imp cd_guia_referencia,
				proc.cd_medico_executor_imp cd_medico_executor,
				proc.cd_medico_solicitante_imp cd_medico_solicitante,
				proc.cd_procedimento_imp cd_procedimento,
				proc.dt_procedimento_imp dt_procedimento,
				proc.ie_origem_proced,
				proc.ie_status_conta,
				proc.ie_status ie_status_procedimento,
				pls_cta_redundancia_pck.converte_status_proc_partic(proc.ie_status) ie_status_proc_participante,
				proc.ie_status_protocolo,
				proc.nr_seq_analise,
				proc.nr_seq_conta,
				proc.nr_sequencia nr_seq_conta_proc,
				proc.nr_seq_grau_partic,
				proc.nr_seq_lote_conta nr_seq_lote_protocolo,
				proc.nr_seq_prestador_imp_prot nr_seq_prestador_atend,
				proc.nr_seq_prestador_exec_imp nr_seq_prestador_exec,
				proc.nr_seq_prestador_solic,
				-1 nr_seq_proc_partic,
				proc.nr_seq_protocolo,
				proc.nr_seq_segurado,
				'S' ie_controle_upd,
				proc.ie_glosa
			from	pls_conta_proc_v proc
			where	proc.nr_seq_analise = nr_seq_analise_p
			and	proc.ie_status != 'D'
			and	not exists (	select	1
						from	pls_proc_participante x
						where	x.nr_seq_conta_proc = proc.nr_sequencia)) src

	on (dest.nr_seq_protocolo = src.nr_seq_protocolo and dest.nr_seq_conta = src.nr_seq_conta and
		 dest.nr_seq_conta_proc	= src.nr_seq_conta_proc and dest.nr_seq_proc_partic = src.nr_seq_proc_partic)
	-- Quando o registro ainda não está na tabela grava ele
	when	not matched then
		insert(	dest.nr_sequencia, dest.cd_guia_referencia, dest.cd_medico_executor, dest.cd_medico_solicitante,
				dest.cd_procedimento, dest.dt_procedimento, dest.ie_controle_upd, dest.ie_origem_proced,
				dest.ie_status_conta, dest.ie_status_procedimento, dest.ie_status_proc_participante, dest.ie_status_protocolo,
				dest.nr_seq_analise, dest.nr_seq_conta, dest.nr_seq_conta_proc, dest.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo, dest.nr_seq_prestador_atend, dest.nr_seq_prestador_exec, dest.nr_seq_prestador_solic,
				dest.nr_seq_proc_partic, dest.nr_seq_protocolo, dest.nr_seq_segurado, dest.nm_usuario,
				dest.nm_usuario_nrec, dest.dt_atualizacao, dest.dt_atualizacao_nrec, dest.ie_glosa)
		values (nextval('pls_conta_prestador_proc_seq'), src.cd_guia_referencia, src.cd_medico_executor, src.cd_medico_solicitante,
				src.cd_procedimento, src.dt_procedimento, src.ie_controle_upd, src.ie_origem_proced, 
				src.ie_status_conta, src.ie_status_procedimento, src.ie_status_proc_participante, src.ie_status_protocolo, 
				src.nr_seq_analise, src.nr_seq_conta, src.nr_seq_conta_proc, src.nr_seq_grau_partic,			
				src.nr_seq_lote_protocolo, src.nr_seq_prestador_atend, src.nr_seq_prestador_exec, src.nr_seq_prestador_solic, 
				src.nr_seq_proc_partic, src.nr_seq_protocolo, src.nr_seq_segurado, nm_usuario_p, 
				nm_usuario_p, clock_timestamp(), clock_timestamp(), src.ie_glosa)
	-- Quando já está atualiza, tem dados que não faz sentido atualizar, como sequencia da conta, do conta proc, do conta mat
	-- pois não vai mudar.
	when	matched then
		update set	dest.cd_guia_referencia			= src.cd_guia_referencia,
				dest.cd_medico_executor			= src.cd_medico_executor,
				dest.cd_medico_solicitante		= src.cd_medico_solicitante,
				dest.cd_procedimento			= src.cd_procedimento,
				dest.dt_procedimento			= src.dt_procedimento,
				dest.ie_controle_upd			= src.ie_controle_upd,
				dest.ie_origem_proced			= src.ie_origem_proced, 	
				dest.ie_status_conta			= src.ie_status_conta,
				dest.ie_status_procedimento		= src.ie_status_procedimento,
				dest.ie_status_proc_participante	= src.ie_status_proc_participante, 
				dest.ie_status_protocolo		= src.ie_status_protocolo,
				dest.nr_seq_analise			= src.nr_seq_analise,
				dest.nr_seq_grau_partic			= src.nr_seq_grau_partic,
				dest.nr_seq_lote_protocolo		= src.nr_seq_lote_protocolo,
				dest.nr_seq_prestador_atend		= src.nr_seq_prestador_atend,
				dest.nr_seq_prestador_exec		= src.nr_seq_prestador_exec, 
				dest.nr_seq_prestador_solic		= src.nr_seq_prestador_solic,
				dest.nr_seq_segurado			= src.nr_seq_segurado,
				dest.nm_usuario				= nm_usuario_p,
				dest.dt_atualizacao			= clock_timestamp(),
				dest.ie_glosa				= src.ie_glosa;
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_redundancia_pck.alimenta_tabela_imp ( nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
