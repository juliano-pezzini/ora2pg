-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE philips_patrimonio_pck.consistir_desfazer_depreciacao ( nm_usuario_p text, cd_estabelecimento_p bigint, dt_mes_ref_p timestamp) AS $body$
DECLARE


cd_tipo_lote_contabil_w		bigint;
nr_lote_contabil_w		bigint;
qt_registros_w			bigint;
ie_desfazer_primeiro_mes_w	varchar(1);
ie_consiste_mes_anterior_w	varchar(1);
ident_cont_onl_w            varchar(1);
situacao_mes_w              varchar(1);
cd_empresa_w                empresa.cd_empresa%type;


BEGIN

ie_desfazer_primeiro_mes_w := substr(coalesce(obter_valor_param_usuario(937,18,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N'),1,1); -- ie_desfazer_primeiro_mes
ie_consiste_mes_anterior_w := substr(coalesce(obter_valor_param_usuario(937,49,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N'),1,1); -- varConsisteMesSemCalc

select	coalesce(max(cd_tipo_lote_contabil),0)
into STRICT	cd_tipo_lote_contabil_w
from	tipo_lote_contabil
where	nm_objeto = upper('CONTABILIZA_PATRIMONIO')
and	ie_situacao = 'A';

if (cd_tipo_lote_contabil_w <> 0) then
    ident_cont_onl_w := 'N';
    situacao_mes_w := 'A';
    cd_empresa_w := obter_empresa_estab(cd_estabelecimento_p);
    ident_cont_onl_w := CTB_ONLINE_PCK.get_modo_lote(cd_tipo_lote_contabil_p => cd_tipo_lote_contabil_w,
                                                      cd_estabelecimento_p    => cd_estabelecimento_p
                                                       );

    situacao_mes_w := ctb_obter_situacao_mes(cd_empresa_p         => cd_empresa_w,
				                             dt_referencia_p      => dt_mes_ref_p,
                                             cd_estabelecimento_p => cd_estabelecimento_p);

    if (ident_cont_onl_w = 'N') or (ident_cont_onl_w = 'S' and situacao_mes_w = 'F') then
        begin
        select	coalesce(max(nr_lote_contabil),0)
        into STRICT	nr_lote_contabil_w
        from	lote_contabil
        where	pkg_date_utils.start_of(dt_referencia, 'month', 0) = pkg_date_utils.start_of(dt_mes_ref_p, 'month', 0)
        and	cd_tipo_lote_contabil = cd_tipo_lote_contabil_w
        and	cd_estabelecimento = cd_estabelecimento_p
        and	vl_debito <> 0
        and	vl_credito <> 0;
        if (nr_lote_contabil_w > 0) then
            begin
            CALL wheb_mensagem_pck.exibir_mensagem_abort(266537,'MES=' ||to_char(dt_mes_ref_p, 'mm/yyyy') ||
                                ';NR_LOTE_CONTABIL=' || nr_lote_contabil_w);
            end;
        end if;
        end;
    end if;
end if;

if (ie_desfazer_primeiro_mes_w = 'N') then
	begin
	select	count(*)
	into STRICT	qt_registros_w
	from	pat_valor_bem
	where	dt_valor < dt_mes_ref_p
	and	nr_seq_bem in (
		SELECT	nr_sequencia
		from	pat_bem
		where	cd_estabelecimento = cd_estabelecimento_p);
	if (qt_registros_w = 0) then
		begin
		/* 'Sem permissao para estornar o calculo deste mes. Verifique o parametro[18].' || chr(13) || chr(10) ||
						'Nao existem registros de depreciacao inferior a este mes.' || chr(13) || chr(10) ||
						'Pode ser o mes de importacao dos valores.');*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(266538);
		end;
	end if;
	end;
end if;

if (ie_consiste_mes_anterior_w = 'S') then
	begin

	select	count(*)
	into STRICT	qt_registros_w
	from	pat_mes_ref
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	dt_mes_ref		< dt_mes_ref_p
	and	ie_situacao		= '0';

	if (qt_registros_w > 0) then
		begin
		/*Existe mes anterior que precisa ser calculado antes do mes atual!#@#@');*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(266539);
		end;
	end if;

	end;
end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE philips_patrimonio_pck.consistir_desfazer_depreciacao ( nm_usuario_p text, cd_estabelecimento_p bigint, dt_mes_ref_p timestamp) FROM PUBLIC;
