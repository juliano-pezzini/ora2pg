-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE philips_patrimonio_pck.liberar_avaliacao ( ie_commit_p text, nm_usuario_p text, nr_seq_avaliacao_p pat_bem_avaliacao.nr_sequencia%type) AS $body$
DECLARE


ie_operacao_w			pat_tipo_avaliacao.ie_operacao%type;
nr_seq_bem_avaliado_w		pat_bem_avaliacao.nr_seq_bem%type;
nr_seq_bem_avaliacao_w		pat_bem.nr_sequencia%type;

dt_avaliacao_w			pat_bem_avaliacao.dt_avaliacao%type;
tx_deprec_w			pat_bem_avaliacao.tx_depreciacao%type;
tx_deprec_fiscal_w		pat_bem_avaliacao.tx_deprec_fiscal%type;
vl_residual_w			pat_bem_avaliacao.vl_residual%type;

nr_seq_regra_tx_deprec_w	pat_bem_taxa.nr_sequencia%type;
dt_vig_regra_tx_deprec_w	pat_bem_taxa.dt_vigencia%type;
tx_deprec_reg_w			pat_bem_taxa.pr_depreciacao%type;
tx_deprec_fiscal_reg_w		pat_bem_taxa.pr_deprec_fiscal%type;

nr_seq_regra_res_w		pat_bem_regra_residual.nr_sequencia%type;
vl_residual_reg_w		pat_bem_regra_residual.vl_residual%type;
dt_ini_vig_regra_res_w		pat_bem_regra_residual.dt_inicio_vigencia%type;
dt_fim_vig_regra_res_w		pat_bem_regra_residual.dt_fim_vigencia%type;

nr_seq_tx_deprec_w		pat_bem_taxa.nr_sequencia%type;
nr_seq_vl_residual_w		pat_bem_regra_residual.nr_sequencia%type;


BEGIN

/*
Consistencias
*/

CALL philips_patrimonio_pck.consistir_liberar_avaliacao(nm_usuario_p,nr_seq_avaliacao_p);

select	a.nr_seq_bem,
	b.ie_operacao,
	a.dt_avaliacao,
	a.tx_depreciacao,
	a.tx_deprec_fiscal,
	a.vl_residual
into STRICT	nr_seq_bem_avaliado_w,
	ie_operacao_w,
	dt_avaliacao_w,
	tx_deprec_w,
	tx_deprec_fiscal_w,
	vl_residual_w
from	pat_tipo_avaliacao b,
	pat_bem_avaliacao a
where	a.nr_seq_tipo_aval = b.nr_sequencia
and	a.nr_sequencia = nr_seq_avaliacao_p;

/* Pegar a ultima regra de taxa de depreciacao ou as taxas do bem */


select	x.nr_sequencia,
	x.dt_vigencia,
	x.pr_depreciacao,
	x.pr_deprec_fiscal
into STRICT	nr_seq_regra_tx_deprec_w,
	dt_vig_regra_tx_deprec_w,
	tx_deprec_reg_w,
	tx_deprec_fiscal_reg_w
from (
	SELECT	1 ie_ordem,
		a.nr_sequencia,
		a.dt_vigencia,
		a.pr_depreciacao,
		coalesce(a.pr_deprec_fiscal,0) pr_deprec_fiscal
	from	pat_bem_taxa a
	where	a.nr_seq_bem = nr_seq_bem_avaliado_w
	and	a.dt_vigencia <= dt_avaliacao_w
	
union all

	SELECT	2 ie_ordem,
		0 nr_sequencia,
		null dt_vigencia,
		a.tx_deprec pr_depreciacao,
		a.tx_fiscal pr_deprec_fiscal
	from	pat_bem a
	where	a.nr_sequencia = nr_seq_bem_avaliado_w
	order by
		ie_ordem,
		dt_vigencia desc,
		nr_sequencia desc) x LIMIT 1;

/* Pegar a ultima regra de valor residual ou o valor residual do bem */


select	x.nr_sequencia,
	x.vl_residual,
	x.dt_inicio_vigencia,
	x.dt_fim_vigencia
into STRICT	nr_seq_regra_res_w,
	vl_residual_reg_w,
	dt_ini_vig_regra_res_w,
	dt_fim_vig_regra_res_w
from (
	SELECT	1 ie_ordem,
		a.nr_sequencia,
		a.vl_residual,
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia
	from	pat_bem_regra_residual a
	where	a.nr_seq_bem = nr_seq_bem_avaliado_w
	and	a.dt_inicio_vigencia <= dt_avaliacao_w
	and	coalesce(a.dt_fim_vigencia,dt_avaliacao_w) >= dt_avaliacao_w
	
union all

	SELECT	2 ie_ordem,
		0 nr_sequencia,
		coalesce(a.vl_residual,0),
		null dt_inicio_vigencia,
		null dt_fim_vigencia
	from	pat_bem a
	where	a.nr_sequencia = nr_seq_bem_avaliado_w
	order by
		ie_ordem,
		dt_fim_vigencia desc,
		dt_inicio_vigencia desc,
		nr_sequencia desc) x LIMIT 1;

/* Verificar se a taxa de depreciacao foi alterada na avaliacao */


if	((tx_deprec_w <> tx_deprec_reg_w) or (tx_deprec_fiscal_w <> tx_deprec_fiscal_reg_w)) then
	begin
	select	nextval('pat_bem_taxa_seq')
	into STRICT	nr_seq_tx_deprec_w
	;

	insert into pat_bem_taxa(nr_sequencia,
			nr_seq_bem,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_vigencia,
			pr_depreciacao,
			pr_deprec_fiscal)
	values (nr_seq_tx_deprec_w,
			nr_seq_bem_avaliado_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_avaliacao_w,
			tx_deprec_w,
			tx_deprec_fiscal_w);
	end;
end if;

/* Verificar se foi alterada a regra de valor residual na reavaliacao */


if (vl_residual_w <> vl_residual_reg_w) then
	begin

	/* Atualizar a data de fim de vigencia para um segundo a menos que a data de inicio de vigencia da nova regra */


	update	pat_bem_regra_residual
	set	dt_fim_vigencia = dt_avaliacao_w - (1/24/60/60)
	where	nr_sequencia = nr_seq_regra_res_w;

	select	nextval('pat_bem_regra_residual_seq')
	into STRICT	nr_seq_vl_residual_w
	;

	insert into pat_bem_regra_residual(nr_sequencia,
		nr_seq_bem,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		vl_residual,
		dt_inicio_vigencia,
		dt_fim_vigencia)
	values (nr_seq_vl_residual_w,
		nr_seq_bem_avaliado_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		vl_residual_w,
		dt_avaliacao_w,
		null);

	end;
end if;

/*
Gerar avaliacao
*/

nr_seq_bem_avaliacao_w := null;
if (ie_operacao_w = 'S') then
	begin
	nr_seq_bem_avaliacao_w := philips_patrimonio_pck.gerar_bem_avaliacao('N', nm_usuario_p, nr_seq_avaliacao_p, nr_seq_bem_avaliacao_w);
	end;
end if;

/*
Liberar avaliacao
*/

update	pat_bem_avaliacao a
set	a.nr_seq_bem_aval = nr_seq_bem_avaliacao_w,
	a.nm_usuario_lib = nm_usuario_p,
	a.dt_liberacao = clock_timestamp()
where	a.nr_sequencia = nr_seq_avaliacao_p;

if (ie_commit_p = 'S') then
	begin
	commit;
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE philips_patrimonio_pck.liberar_avaliacao ( ie_commit_p text, nm_usuario_p text, nr_seq_avaliacao_p pat_bem_avaliacao.nr_sequencia%type) FROM PUBLIC;
