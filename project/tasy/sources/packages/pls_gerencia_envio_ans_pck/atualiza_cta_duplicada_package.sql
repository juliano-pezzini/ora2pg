-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- faz uma troca de valor na guia da operadora em casos que houver duplicidade de dados



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.atualiza_cta_duplicada ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_seq_w	pls_util_cta_pck.t_number_table;
tb_cd_guia_w	pls_util_cta_pck.t_varchar2_table_20;
qt_registro_w	integer;
ds_chave_w	varchar(1000);
ds_chave_ant_w	varchar(1000);

dados_cta CURSOR(	nr_seq_lote_pc	pls_monitor_tiss_cta_val.nr_sequencia%type) FOR
	SELECT	x.nr_sequencia,
		x.cd_cnes_prest_exec,
		x.ie_identif_prest_exec,
		x.cd_cpf_cgc_prest_exec,
		x.cd_guia_prestador,
		x.cd_guia_operadora,
		x.ie_reembolso,
		z.cd_guia_ans
	from	pls_monitor_tiss_cta_val x,
		pls_conta z
	where	x.nr_seq_lote_monitor = nr_seq_lote_pc
	and	x.ie_conta_atualizada = 'S'
	and	z.nr_sequencia = x.nr_seq_conta
	order by x.cd_cnes_prest_exec,
		x.ie_identif_prest_exec,
		x.cd_cpf_cgc_prest_exec,
		x.cd_guia_prestador,
		x.cd_guia_operadora,
		x.ie_reembolso;
BEGIN

ds_chave_w := null;
ds_chave_ant_w := null;
qt_registro_w := 0;
tb_seq_w.delete;
tb_cd_guia_w.delete;

for r_dados_cta_w in dados_cta(nr_seq_lote_p) loop
	-- chave atual

	ds_chave_w := 	coalesce(r_dados_cta_w.cd_cnes_prest_exec, 'A') || coalesce(r_dados_cta_w.ie_identif_prest_exec, 'A') ||
			coalesce(r_dados_cta_w.cd_cpf_cgc_prest_exec, 'A') || coalesce(r_dados_cta_w.cd_guia_prestador, 'A') ||
			coalesce(r_dados_cta_w.cd_guia_operadora, 'A') || coalesce(r_dados_cta_w.ie_reembolso, 'A');

	-- se existe valor para a chave anterior

	if (ds_chave_ant_w IS NOT NULL AND ds_chave_ant_w::text <> '') then

		-- se as chaves so iguais, troca a guia da operadora para o cd_guia_ans (criado para esta situao)

		if (ds_chave_w = ds_chave_ant_w) and (r_dados_cta_w.cd_guia_ans IS NOT NULL AND r_dados_cta_w.cd_guia_ans::text <> '') then

			tb_seq_w(qt_registro_w) := r_dados_cta_w.nr_sequencia;
			tb_cd_guia_w(qt_registro_w) := r_dados_cta_w.cd_guia_ans;

			qt_registro_w := qt_registro_w + 1;
		end if;
	end if;

	-- atribui para utilizar na prxima interao

	ds_chave_ant_w := ds_chave_w;

	-- se atingiu a quantidade de registros manda para o banco

	if (qt_registro_w >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then

		-- atualiza

		CALL pls_gerencia_envio_ans_pck.atualizar_cd_guia_ans(	tb_seq_w, tb_cd_guia_w, nm_usuario_p);
		-- Limpa as variveis

		tb_seq_w.delete;
		tb_cd_guia_w.delete;
		qt_registro_w := 0;
	end if;

end loop;

-- atualiza se sobrou algo

CALL pls_gerencia_envio_ans_pck.atualizar_cd_guia_ans(	tb_seq_w, tb_cd_guia_w, nm_usuario_p);
-- Limpa as variveis

tb_seq_w.delete;
tb_cd_guia_w.delete;
qt_registro_w := 0;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.atualiza_cta_duplicada ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
