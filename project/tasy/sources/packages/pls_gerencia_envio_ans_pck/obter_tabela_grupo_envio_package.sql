-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.obter_tabela_grupo_envio (nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;
tb_cd_tabela_w		pls_util_cta_pck.t_varchar2_table_5;
tb_cd_grupo_w		pls_util_cta_pck.t_varchar2_table_5;
j			integer;

C01 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		pls_gerencia_envio_ans_pck.obter_dados_primeiro_envio(a.nr_seq_conta)  nr_seq_guia_ant
	from	pls_monitor_tiss_guia a
	where	a.nr_seq_lote_monitor = nr_seq_lote_pc
	and	(dt_pagamento_previsto IS NOT NULL AND dt_pagamento_previsto::text <> '');

C02 CURSOR(	nr_seq_guia_monitor_pc		pls_monitor_tiss_guia.nr_sequencia%type,
		nr_seq_guia_monit_ant_pc	pls_monitor_tiss_guia.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		(SELECT	max(b.cd_tabela_ref)
		 from	pls_monitor_tiss_proc b
		 where	b.nr_seq_guia_monitor = nr_seq_guia_monit_ant_pc
		 and	b.nr_seq_conta_proc = a.nr_seq_conta_proc) cd_tabela_ref_ant,
		a.cd_tabela_ref,
		(select	max(cd_grupo_proc)
		 from	pls_monitor_tiss_proc b
		 where	b.nr_seq_guia_monitor = nr_seq_guia_monit_ant_pc
		 and	b.nr_seq_conta_proc = a.nr_seq_conta_proc) cd_grupo_ans_ant,
		(select	count(1)
		 from	pls_monitor_tiss_proc b
		 where	b.nr_seq_guia_monitor = nr_seq_guia_monit_ant_pc
		 and	b.nr_seq_conta_proc = a.nr_seq_conta_proc) qt_reg_ant,
		a.cd_grupo_proc
	from	pls_monitor_tiss_proc a
	where	a.nr_seq_guia_monitor = nr_seq_guia_monitor_pc
	and	a.ie_origem_grupo_proc <> 'M'
	and	a.ie_origem_tab_ref <> 'M';

C03 CURSOR(	nr_seq_guia_monitor_pc		pls_monitor_tiss_guia.nr_sequencia%type,
		nr_seq_guia_monit_ant_pc	pls_monitor_tiss_guia.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		(SELECT	max(b.cd_tabela_ref)
		 from	pls_monitor_tiss_mat b
		 where	b.nr_seq_guia_monitor = nr_seq_guia_monit_ant_pc
		 and	b.nr_seq_conta_mat = a.nr_seq_conta_mat) cd_tabela_ref_ant,
		a.cd_tabela_ref,
		(select	max(cd_grupo_proc)
		 from	pls_monitor_tiss_mat b
		 where	b.nr_seq_guia_monitor = nr_seq_guia_monit_ant_pc
		 and	b.nr_seq_conta_mat = a.nr_seq_conta_mat) cd_grupo_ans_ant,
		(select	count(1)
		 from	pls_monitor_tiss_mat b
		 where	b.nr_seq_guia_monitor = nr_seq_guia_monit_ant_pc
		 and	b.nr_seq_conta_mat = a.nr_seq_conta_mat) qt_reg_ant,
		a.cd_grupo_proc
	from	pls_monitor_tiss_mat a
	where	a.nr_seq_guia_monitor = nr_seq_guia_monitor_pc
	and	a.ie_origem_grupo_proc <> 'M'
	and	a.ie_origem_tab_ref <> 'M';

BEGIN
tb_nr_sequencia_w.delete;
tb_cd_tabela_w.delete;
tb_cd_grupo_w.delete;
j := 0;

for r_C01_w in C01(nr_seq_lote_p) loop

	if (r_C01_w.nr_seq_guia_ant IS NOT NULL AND r_C01_w.nr_seq_guia_ant::text <> '') then

		for r_C02_w in C02(r_C01_w.nr_sequencia, r_C01_w.nr_seq_guia_ant) loop

			if (r_C02_w.qt_reg_ant > 0) then
				tb_nr_sequencia_w(j) := r_C02_w.nr_sequencia;
				tb_cd_tabela_w(j) := coalesce(r_C02_w.cd_tabela_ref_ant, r_C02_w.cd_tabela_ref);
				tb_cd_grupo_w(j) := r_C02_w.cd_grupo_ans_ant;

				if (tb_nr_sequencia_w.count >= pls_util_pck.qt_registro_transacao_w) then
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						update	pls_monitor_tiss_proc
						set	cd_tabela_ref = tb_cd_tabela_w(i),
							cd_grupo_proc = tb_cd_grupo_w(i),
							ie_origem_grupo_proc = 'PE',
							ie_origem_tab_ref = 'PE'
						where	nr_sequencia = tb_nr_sequencia_w(i);
					commit;

					tb_nr_sequencia_w.delete;
					tb_cd_tabela_w.delete;
					tb_cd_grupo_w.delete;
					j := 0;
				else
					j := j + 1;
				end if;
			end if;
		end loop;

		if (tb_nr_sequencia_w.count > 0) then
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				update	pls_monitor_tiss_proc
				set	cd_tabela_ref = tb_cd_tabela_w(i),
					cd_grupo_proc = tb_cd_grupo_w(i),
					ie_origem_grupo_proc = 'PE',
					ie_origem_tab_ref = 'PE'
				where	nr_sequencia = tb_nr_sequencia_w(i);
			commit;

			tb_nr_sequencia_w.delete;
			tb_cd_tabela_w.delete;
			tb_cd_grupo_w.delete;
			j := 0;
		end if;

		for r_C03_w in C03(r_C01_w.nr_sequencia, r_C01_w.nr_seq_guia_ant) loop

			if (r_C03_w.qt_reg_ant > 0) then
				tb_nr_sequencia_w(j) := r_C03_w.nr_sequencia;
				tb_cd_tabela_w(j) := coalesce(r_C03_w.cd_tabela_ref_ant, r_C03_w.cd_tabela_ref);
				tb_cd_grupo_w(j) := r_C03_w.cd_grupo_ans_ant;

				if (tb_nr_sequencia_w.count >= pls_util_pck.qt_registro_transacao_w) then
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						update	pls_monitor_tiss_mat
						set	cd_tabela_ref = tb_cd_tabela_w(i),
							cd_grupo_proc = tb_cd_grupo_w(i),
							ie_origem_grupo_proc = 'PE',
							ie_origem_tab_ref = 'PE'
						where	nr_sequencia = tb_nr_sequencia_w(i);
					commit;

					tb_nr_sequencia_w.delete;
					tb_cd_tabela_w.delete;
					tb_cd_grupo_w.delete;
					j := 0;
				else
					j := j + 1;
				end if;
			end if;
		end loop;

		if (tb_nr_sequencia_w.count > 0) then
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				update	pls_monitor_tiss_mat
				set	cd_tabela_ref = tb_cd_tabela_w(i),
					cd_grupo_proc = tb_cd_grupo_w(i),
					ie_origem_grupo_proc = 'PE',
					ie_origem_tab_ref = 'PE'
				where	nr_sequencia = tb_nr_sequencia_w(i);
			commit;

			tb_nr_sequencia_w.delete;
			tb_cd_tabela_w.delete;
			tb_cd_grupo_w.delete;
			j := 0;
		end if;
	end if;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.obter_tabela_grupo_envio (nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type) FROM PUBLIC;
