-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Atualizar status dos logs de alterao como negado na ANS para poder reenviar o lote novamente



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.atualizar_status_rej_log_alt ( nr_seq_monitor_ret_p pls_monitor_tiss_lote_ret.nr_sequencia%type, nr_seq_lote_monitor_p pls_monitor_tiss_lote_ret.nr_seq_lote_monitor%type, nm_usuario_p usuario.nm_usuario%type, ie_tipo_lote_p pls_monitor_tiss_lote.ie_tipo_lote%type) AS $body$
DECLARE


tb_seq_guia_w					pls_util_cta_pck.t_number_table;
nr_seq_lote_monitor_arq_w			pls_monitor_tiss_arquivo.nr_sequencia%type;
nm_arquivo_w					pls_monitor_tiss_lote_ret.nm_arquivo%type;
qt_erros_w					integer;
nr_seq_lote_com_w				pls_monitor_tiss_lote_ret.nr_sequencia%type;
nr_seq_lote_monitor_w		pls_monitor_tiss_lote_com.nr_seq_lote_monitor%type;
nr_seq_arquivo_w			pls_monitor_tiss_lote_ret.nr_seq_arquivo%type;
nr_seq_guia_ret_w			pls_monitor_tiss_guia_ret.nr_sequencia%type;

C01 CURSOR( 	nr_seq_monitor_ret_pc		pls_monitor_tiss_lote_ret.nr_sequencia%type,
		nr_seq_lote_monitor_arq_pc	pls_monitor_tiss_arquivo.nr_sequencia%type) FOR
	SELECT 	z.nr_sequencia
	from 	pls_monitor_tiss_lote_ret c,
		pls_monitor_tiss_alt_guia a,
		pls_monitor_tiss_alt z,
		pls_monitor_tiss_guia d
	where 	c.nr_sequencia 			= nr_seq_monitor_ret_pc
	and	d.nr_seq_arq_monitor		= nr_seq_lote_monitor_arq_pc
	and	a.nr_seq_lote_monitor		= c.nr_seq_lote_monitor
	and	a.nr_seq_guia_monitor		= d.nr_sequencia
	and	z.nr_sequencia 			= a.nr_seq_cta_alt;
	--and	z.ie_status 			= 'PR';


-- retorna todas as chaves que foi enviada no lote de monitoramento

C02 CURSOR(	nr_seq_lote_monitor_pc		pls_monitor_tiss_lote_ret.nr_seq_lote_monitor%type,
		nr_seq_lote_monitor_arq_pc	pls_monitor_tiss_arquivo.nr_sequencia%type) FOR
	SELECT 	a.nr_seq_chave_guia
	from 	pls_monitor_tiss_guia a
	where 	a.nr_seq_lote_monitor 		= nr_seq_lote_monitor_pc
	and	a.nr_seq_arq_monitor		= nr_seq_lote_monitor_arq_pc;


BEGIN

select	max(a.nr_seq_lote_monitor),
		max(b.nr_seq_arquivo)
into STRICT	nr_seq_lote_monitor_w,
		nr_seq_arquivo_w
from	pls_monitor_tiss_lote_com a,
		pls_monitor_tiss_lote_ret b
where	a.nr_sequencia = b.nr_seq_lote_com
and		b.nr_sequencia = nr_seq_monitor_ret_p;
	
select	UPPER(replace(nm_arquivo,'ZTE','XTE')),
	nr_seq_lote_com
into STRICT	nm_arquivo_w,
	nr_seq_lote_com_w
from	pls_monitor_tiss_lote_ret
where	nr_sequencia	= nr_seq_monitor_ret_p;

-- busca o lote do arquivo

select	max(b.nr_sequencia)
into STRICT	nr_seq_lote_monitor_arq_w
from	pls_monitor_tiss_lote a,
	pls_monitor_tiss_arquivo b
where	a.ie_status		= 'LG'
and	b.nr_seq_lote_monitor	= a.nr_sequencia
and	b.nm_arquivo		= nm_arquivo_w;

if (ie_tipo_lote_p <> '1') then
	open C01( nr_seq_monitor_ret_p,nr_seq_lote_monitor_arq_w );
	loop
		tb_seq_guia_w.delete;

		fetch C01 bulk collect into tb_seq_guia_w
		limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

		exit when tb_seq_guia_w.count = 0;

		-- manda para o banco

		forall i in tb_seq_guia_w.first .. tb_seq_guia_w.last

			update 	pls_monitor_tiss_alt a
			set	a.ie_status = 'N',
				a.dt_atualizacao = clock_timestamp(),
				a.nm_usuario 	= nm_usuario_p
			where	a.nr_sequencia = tb_seq_guia_w(i);
		commit;

		end loop;
	close C01;

	open C02( nr_seq_lote_monitor_p,nr_seq_lote_monitor_arq_w );
	loop
		tb_seq_guia_w.delete;

		fetch C02 bulk collect into tb_seq_guia_w
		limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

		exit when tb_seq_guia_w.count = 0;

		-- manda para o banco

		forall i in tb_seq_guia_w.first .. tb_seq_guia_w.last

			update 	pls_moni_tiss_chave_guia a
			set	a.ie_status = 'N',
				a.dt_atualizacao = clock_timestamp(),
				a.nm_usuario 	= nm_usuario_p
			where	a.nr_sequencia = tb_seq_guia_w(i);
		commit;

		end loop;
	close C02;
end if;

select	count(1)
into STRICT	qt_erros_w
from	pls_monitor_tiss_guia
where	nr_seq_arq_monitor	= nr_seq_lote_monitor_arq_w;

update	pls_monitor_tiss_lote_ret
set	qt_total_incluido	= 0,
	qt_total_alterado	= 0,
	qt_total_excluido	= 0,
	qt_total_erro		= qt_erros_w
where	nr_sequencia		= nr_seq_monitor_ret_p;

CALL pls_gerencia_envio_ans_pck.atualiza_dados_ret_lote_com(nr_seq_lote_com_w,nm_usuario_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.atualizar_status_rej_log_alt ( nr_seq_monitor_ret_p pls_monitor_tiss_lote_ret.nr_sequencia%type, nr_seq_lote_monitor_p pls_monitor_tiss_lote_ret.nr_seq_lote_monitor%type, nm_usuario_p usuario.nm_usuario%type, ie_tipo_lote_p pls_monitor_tiss_lote.ie_tipo_lote%type) FROM PUBLIC;
