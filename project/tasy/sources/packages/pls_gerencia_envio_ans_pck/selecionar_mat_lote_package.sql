-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.selecionar_mat_lote ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_ins_conta_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_conta_mat_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_cta_val_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_mat_val_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_tiss_alt_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_cta_rec_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_mat_rec_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_cta_disc_seq_w		pls_util_cta_pck.t_number_table;
tb_ins_mat_disc_seq_w		pls_util_cta_pck.t_number_table;

tb_upd_conta_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_conta_mat_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_cta_val_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_mat_val_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_tiss_alt_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_cta_rec_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_mat_rec_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_cta_disc_seq_w		pls_util_cta_pck.t_number_table;
tb_upd_mat_disc_seq_w		pls_util_cta_pck.t_number_table;

qt_registro_ins_w		integer;
qt_registro_upd_w		integer;

c01 CURSOR(	nr_seq_lote_pc			pls_monitor_tiss_lote.nr_sequencia%type,
		dt_inicio_pc			pls_monitor_tiss_lote.dt_mes_competencia%type,
		dt_fim_pc			pls_monitor_tiss_lote.dt_mes_competencia%type,
		ie_permite_rec_glosa_pc		pls_monitor_tiss_param.ie_permite_rec_glosa%type) FOR
	SELECT	e.nr_seq_conta,
		e.nr_seq_conta_mat,
		x.nr_sequencia nr_seq_cta_val,
		(SELECT	max(p.nr_sequencia)
		 from	pls_monitor_tiss_mat_val p
		 where	p.nr_seq_conta = e.nr_seq_conta
		 and	p.nr_seq_conta_mat = e.nr_seq_conta_mat
		 and	p.nr_seq_cta_val = x.nr_sequencia) nr_seq_cta_mat_val,
		max(e.nr_sequencia) nr_seq_tiss_alt,
		e.nr_seq_conta_rec,
		e.nr_seq_mat_rec,
		e.nr_seq_conta_disc,
		e.nr_seq_disc_mat
	from	pls_monitor_tiss_cta_val x,
		pls_monitor_tiss_alt 	e
	where	x.nr_seq_lote_monitor = nr_seq_lote_pc
	and	x.ie_conta_atualizada = 'S'
	and   	e.nr_seq_conta = x.nr_seq_conta
	and   	e.dt_evento between dt_inicio_pc and dt_fim_pc
	and	e.ie_status in ('P','N') -- P = Pendente / N = Negado pela ANS
	and	(e.nr_seq_conta_mat IS NOT NULL AND e.nr_seq_conta_mat::text <> '')
	and	e.ie_tipo_evento in ('CC','FC','PC')
	and	ie_permite_rec_glosa_pc = 'N'
	group by e.nr_seq_conta,
		 e.nr_seq_conta_mat,
		 x.nr_sequencia,
		 e.nr_seq_conta_rec,
		 e.nr_seq_mat_rec,
		 e.nr_seq_conta_disc,
		 e.nr_seq_disc_mat
	
union all

	select	e.nr_seq_conta,
		e.nr_seq_conta_mat,
		x.nr_sequencia nr_seq_cta_val,
		(select	max(p.nr_sequencia)
		 from	pls_monitor_tiss_mat_val p
		 where	p.nr_seq_conta = e.nr_seq_conta
		 and	p.nr_seq_conta_mat = e.nr_seq_conta_mat
		 and	p.nr_seq_cta_val = x.nr_sequencia) nr_seq_cta_mat_val,
		max(e.nr_sequencia) nr_seq_tiss_alt,
		e.nr_seq_conta_rec,
		e.nr_seq_mat_rec,
		e.nr_seq_conta_disc,
		e.nr_seq_disc_mat
	from	pls_monitor_tiss_cta_val x,
		pls_monitor_tiss_alt 	e
	where	x.nr_seq_lote_monitor = nr_seq_lote_pc
	and	x.ie_conta_atualizada = 'S'
	and   	e.nr_seq_conta = x.nr_seq_conta
	and   	coalesce(e.nr_seq_conta_rec::text, '') = ''
	and   	coalesce(x.nr_seq_conta_rec::text, '') = ''
	and   	e.dt_evento between dt_inicio_pc and dt_fim_pc
	and	e.ie_status in ('P','N') -- P = Pendente / N = Negado pela ANS
	and	(e.nr_seq_conta_mat IS NOT NULL AND e.nr_seq_conta_mat::text <> '')
	and	ie_permite_rec_glosa_pc = 'S'
	and  e.ie_tipo_evento not in ('AV', 'AD', 'FR', 'PR', 'PD') --remove aqui os registros de recurso
	group by e.nr_seq_conta,
		 e.nr_seq_conta_mat,
		 x.nr_sequencia,
		 e.nr_seq_conta_rec,
		 e.nr_seq_mat_rec,
		 e.nr_seq_conta_disc,
		 e.nr_seq_disc_mat
	
union all

	select  e.nr_seq_conta,
		e.nr_seq_conta_mat,
		x.nr_sequencia nr_seq_cta_val,
		(select  max(p.nr_sequencia)
		from  pls_monitor_tiss_mat_val p
		where  p.nr_seq_conta = e.nr_seq_conta
		and  p.nr_seq_conta_mat = e.nr_seq_conta_mat
		and  p.nr_seq_cta_val = x.nr_sequencia) nr_seq_cta_mat_val,
		max(e.nr_sequencia) nr_seq_tiss_alt,
		e.nr_seq_conta_rec,
		e.nr_seq_mat_rec,
		e.nr_seq_conta_disc,
		e.nr_seq_disc_mat
        from  	pls_monitor_tiss_cta_val x,
		pls_monitor_tiss_alt   e
        where  	x.nr_seq_lote_monitor = nr_seq_lote_pc
        and  	x.ie_conta_atualizada = 'S'
        and     e.nr_seq_conta = x.nr_seq_conta
	and 	e.nr_seq_conta_rec = x.nr_seq_conta_rec
        and   	(e.nr_seq_conta_rec IS NOT NULL AND e.nr_seq_conta_rec::text <> '')
        and   	(x.nr_seq_conta_rec IS NOT NULL AND x.nr_seq_conta_rec::text <> '')
        and     e.dt_evento between dt_inicio_pc and dt_fim_pc
        and  	e.ie_status in ('P','N') -- P = Pendente / N = Negado pela ANS
        and  	(e.nr_seq_conta_mat IS NOT NULL AND e.nr_seq_conta_mat::text <> '')
        and  	ie_permite_rec_glosa_pc = 'S'
        and  	e.ie_tipo_evento not in ('AV', 'AD', 'FR', 'FC', 'PC') --remove aqui os registros de reconhecimento e pagto eles retornam no unin acima. alem do fechamento rec que sempre excluiu
        group by e.nr_seq_conta,
		e.nr_seq_conta_mat,
		x.nr_sequencia,
		e.nr_seq_conta_rec,
		e.nr_seq_mat_rec,
		e.nr_seq_conta_disc,
		e.nr_seq_disc_mat
	
union all

	select  e.nr_seq_conta,
		e.nr_seq_conta_mat,
		x.nr_sequencia nr_seq_cta_val,
		(select  max(p.nr_sequencia)
		from  pls_monitor_tiss_mat_val p
		where  p.nr_seq_conta = e.nr_seq_conta
		and  p.nr_seq_conta_mat = e.nr_seq_conta_mat
		and  p.nr_seq_cta_val = x.nr_sequencia) nr_seq_cta_mat_val,
		max(e.nr_sequencia) nr_seq_tiss_alt,
		e.nr_seq_conta_rec,
		e.nr_seq_mat_rec,
		e.nr_seq_conta_disc,
		e.nr_seq_disc_mat
        from  	pls_monitor_tiss_cta_val x,
		pls_monitor_tiss_alt   e
        where  	x.nr_seq_lote_monitor = nr_seq_lote_pc
        and  	x.ie_conta_atualizada = 'S'
        and     e.nr_seq_conta = x.nr_seq_conta
        and   	(e.nr_seq_conta_disc IS NOT NULL AND e.nr_seq_conta_disc::text <> '')
        and   	(x.nr_seq_conta_disc IS NOT NULL AND x.nr_seq_conta_disc::text <> '')
        and     e.dt_evento between dt_inicio_pc and dt_fim_pc
        and  	e.ie_status in ('P','N') -- P = Pendente / N = Negado pela ANS
        and  	(e.nr_seq_conta_mat IS NOT NULL AND e.nr_seq_conta_mat::text <> '')
        and  	ie_permite_rec_glosa_pc = 'S'
	and 	x.nr_seq_conta_disc = e.nr_seq_conta_disc
        and  	e.ie_tipo_evento not in ('AV', 'AD', 'FR', 'FC', 'PC') --remove aqui os registros de reconhecimento e pagto eles retornam no unin acima. alem do fechamento rec que sempre excluiu
        group by e.nr_seq_conta,
		e.nr_seq_conta_mat,
		x.nr_sequencia,
		e.nr_seq_conta_rec,
		e.nr_seq_mat_rec,
		e.nr_seq_conta_disc,
		e.nr_seq_disc_mat;

BEGIN

qt_registro_ins_w := 0;
qt_registro_upd_w := 0;

for c01_w in c01(nr_seq_lote_p, current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_ini_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_fim_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, current_setting('pls_gerencia_envio_ans_pck.ie_permite_rec_glosa_w')::pls_monitor_tiss_param.ie_permite_rec_glosa%type) loop

	-- separa para fazer insert ou update

	if (coalesce(c01_w.nr_seq_cta_mat_val::text, '') = '') then
		tb_ins_conta_seq_w(qt_registro_ins_w) := c01_w.nr_seq_conta;
		tb_ins_conta_mat_seq_w(qt_registro_ins_w) := c01_w.nr_seq_conta_mat;
		tb_ins_cta_val_seq_w(qt_registro_ins_w) := c01_w.nr_seq_cta_val;
		tb_ins_mat_val_seq_w(qt_registro_ins_w) := c01_w.nr_seq_cta_mat_val;
		tb_ins_tiss_alt_seq_w(qt_registro_ins_w) := c01_w.nr_seq_tiss_alt;
		tb_ins_cta_rec_seq_w(qt_registro_ins_w) := c01_w.nr_seq_conta_rec;
		tb_ins_mat_rec_seq_w(qt_registro_ins_w) := c01_w.nr_seq_mat_rec;
		tb_ins_cta_disc_seq_w(qt_registro_ins_w) := c01_w.nr_seq_conta_disc;
		tb_ins_mat_disc_seq_w(qt_registro_ins_w) := c01_w.nr_seq_disc_mat;

		qt_registro_ins_w := qt_registro_ins_w + 1;
	else
		tb_upd_conta_seq_w(qt_registro_upd_w) := c01_w.nr_seq_conta;
		tb_upd_conta_mat_seq_w(qt_registro_upd_w) := c01_w.nr_seq_conta_mat;
		tb_upd_cta_val_seq_w(qt_registro_upd_w) := c01_w.nr_seq_cta_val;
		tb_upd_mat_val_seq_w(qt_registro_upd_w) := c01_w.nr_seq_cta_mat_val;
		tb_upd_tiss_alt_seq_w(qt_registro_upd_w) := c01_w.nr_seq_tiss_alt;
		tb_upd_cta_rec_seq_w(qt_registro_upd_w) := c01_w.nr_seq_conta_rec;
		tb_upd_mat_rec_seq_w(qt_registro_upd_w) := c01_w.nr_seq_mat_rec;
		tb_upd_cta_disc_seq_w(qt_registro_upd_w) := c01_w.nr_seq_conta_disc;
		tb_upd_mat_disc_seq_w(qt_registro_upd_w) := c01_w.nr_seq_disc_mat;

		qt_registro_upd_w := qt_registro_upd_w + 1;
	end if;

	-- se j atingiu a quantidade de registros manda para o banco de dados

	if ( qt_registro_ins_w >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer ) then

		-- se tiver algo para inserir

		if (tb_ins_conta_mat_seq_w.count > 0) then
			forall i in tb_ins_conta_mat_seq_w.first..tb_ins_conta_mat_seq_w.last
				insert into pls_monitor_tiss_mat_val(
					nr_sequencia, nr_seq_conta,
					nr_seq_conta_mat, nr_seq_cta_val,
					dt_evento,
					ie_tipo_evento,
					ie_item_atualizado,
					nr_seq_cta_alt, ie_glosa,
					nm_usuario_nrec, dt_atualizacao_nrec,
					nm_usuario, dt_atualizacao,
					nr_seq_conta_rec, nr_seq_mat_rec,
					nr_seq_conta_disc, nr_seq_disc_mat
				) values (
					nextval('pls_monitor_tiss_mat_val_seq'), tb_ins_conta_seq_w(i),
					tb_ins_conta_mat_seq_w(i), tb_ins_cta_val_seq_w(i),
					(SELECT max(z.dt_evento)
					from	pls_monitor_tiss_alt z
					where	z.nr_sequencia = tb_ins_tiss_alt_seq_w(i)),
					(select max(z.ie_tipo_evento)
					from	pls_monitor_tiss_alt z
					where	z.nr_sequencia = tb_ins_tiss_alt_seq_w(i)),
					'N',
					tb_ins_tiss_alt_seq_w(i), (select	ie_glosa
								   from 	pls_conta_mat z
								   where 	z.nr_sequencia = tb_ins_conta_mat_seq_w(i)),
					nm_usuario_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(),
					tb_ins_cta_rec_seq_w(i), tb_ins_mat_rec_seq_w(i),
					tb_ins_cta_disc_seq_w(i), tb_ins_mat_disc_seq_w(i));
			commit;

			tb_ins_conta_seq_w.delete;
			tb_ins_conta_mat_seq_w.delete;
			tb_ins_cta_val_seq_w.delete;
			tb_ins_mat_val_seq_w.delete;
			tb_ins_tiss_alt_seq_w.delete;
			tb_ins_cta_rec_seq_w.delete;
			tb_ins_mat_rec_seq_w.delete;
			tb_ins_cta_disc_seq_w.delete;
			tb_ins_mat_disc_seq_w.delete;
			qt_registro_ins_w := 0;
		end if;
	end if;

	-- se j atingiu a quantidade de registros manda para o banco de dados

	if ( qt_registro_upd_w >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer ) then

		-- se tiver algo para atualizar

		if (tb_upd_conta_mat_seq_w.count > 0) then
			forall i in tb_upd_conta_mat_seq_w.first..tb_upd_conta_mat_seq_w.last
				update	pls_monitor_tiss_mat_val
				set	dt_evento			= (	SELECT 	max(z.dt_evento)
										from	pls_monitor_tiss_alt z
										where	z.nr_sequencia = tb_upd_tiss_alt_seq_w(i)),
					ie_tipo_evento			= (	select 	max(z.ie_tipo_evento)
										from	pls_monitor_tiss_alt z
										where	z.nr_sequencia = tb_upd_tiss_alt_seq_w(i)),
					ie_item_atualizado		= 'N',
					nr_seq_cta_val			= tb_upd_cta_val_seq_w(i),
					nr_seq_cta_alt			= tb_upd_tiss_alt_seq_w(i),
					ie_glosa 			= (select	ie_glosa
									   from 	pls_conta_mat z
									   where 	z.nr_sequencia = tb_upd_conta_mat_seq_w(i)),
					nm_usuario			= nm_usuario_p,
					dt_atualizacao			= clock_timestamp(),
					nr_seq_conta_rec		= tb_upd_cta_rec_seq_w(i),
					nr_seq_mat_rec			= tb_upd_mat_rec_seq_w(i),
					nr_seq_conta_disc		= tb_upd_cta_disc_seq_w(i),
					nr_seq_disc_mat			= tb_upd_mat_disc_seq_w(i)
				where	nr_sequencia 			= tb_upd_mat_val_seq_w(i);

			commit;

			tb_upd_conta_seq_w.delete;
			tb_upd_conta_mat_seq_w.delete;
			tb_upd_cta_val_seq_w.delete;
			tb_upd_mat_val_seq_w.delete;
			tb_upd_tiss_alt_seq_w.delete;
			tb_upd_cta_rec_seq_w.delete;
			tb_upd_mat_rec_seq_w.delete;
			tb_upd_cta_disc_seq_w.delete;
			tb_upd_mat_disc_seq_w.delete;
			qt_registro_upd_w := 0;
		end if;
	end if;
end loop;

-- se tiver algo que sobrou para inserir

if (tb_ins_conta_mat_seq_w.count > 0) then
	forall i in tb_ins_conta_mat_seq_w.first..tb_ins_conta_mat_seq_w.last
		insert into pls_monitor_tiss_mat_val(
			nr_sequencia, nr_seq_conta,
			nr_seq_conta_mat, nr_seq_cta_val,
			dt_evento,
			ie_tipo_evento,
			ie_item_atualizado,
			nr_seq_cta_alt, ie_glosa,
			nm_usuario_nrec, dt_atualizacao_nrec,
			nm_usuario, dt_atualizacao,
			nr_seq_conta_rec, nr_seq_mat_rec,
			nr_seq_conta_disc, nr_seq_disc_mat
		) values (
			nextval('pls_monitor_tiss_mat_val_seq'), tb_ins_conta_seq_w(i),
			tb_ins_conta_mat_seq_w(i), tb_ins_cta_val_seq_w(i),
			(SELECT max(z.dt_evento)
			from	pls_monitor_tiss_alt z
			where	z.nr_sequencia = tb_ins_tiss_alt_seq_w(i)),
			(select max(z.ie_tipo_evento)
			from	pls_monitor_tiss_alt z
			where	z.nr_sequencia = tb_ins_tiss_alt_seq_w(i)),
			'N',
			tb_ins_tiss_alt_seq_w(i), (select	ie_glosa
						   from 	pls_conta_mat z
						   where 	z.nr_sequencia = tb_ins_conta_mat_seq_w(i)),
			nm_usuario_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(),
			tb_ins_cta_rec_seq_w(i), tb_ins_mat_rec_seq_w(i),
			tb_ins_cta_disc_seq_w(i), tb_ins_mat_disc_seq_w(i));
	commit;

	tb_ins_conta_seq_w.delete;
	tb_ins_conta_mat_seq_w.delete;
	tb_ins_cta_val_seq_w.delete;
	tb_ins_mat_val_seq_w.delete;
	tb_ins_tiss_alt_seq_w.delete;
	tb_ins_cta_rec_seq_w.delete;
	tb_ins_mat_rec_seq_w.delete;
	tb_ins_cta_disc_seq_w.delete;
	tb_ins_mat_disc_seq_w.delete;
end if;

-- se tiver algo para atualizar

if (tb_upd_conta_mat_seq_w.count > 0) then
	forall i in tb_upd_conta_mat_seq_w.first..tb_upd_conta_mat_seq_w.last
		update	pls_monitor_tiss_mat_val
		set	dt_evento			= (	SELECT 	max(z.dt_evento)
								from	pls_monitor_tiss_alt z
								where	z.nr_sequencia = tb_upd_tiss_alt_seq_w(i)),
			ie_tipo_evento			= (	select 	max(z.ie_tipo_evento)
								from	pls_monitor_tiss_alt z
								where	z.nr_sequencia = tb_upd_tiss_alt_seq_w(i)),
			ie_item_atualizado		= 'N',
			nr_seq_cta_val			= tb_upd_cta_val_seq_w(i),
			nr_seq_cta_alt			= tb_upd_tiss_alt_seq_w(i),
			ie_glosa 			= (select	ie_glosa
							   from 	pls_conta_mat z
							   where 	z.nr_sequencia = tb_upd_conta_mat_seq_w(i)),
			nm_usuario			= nm_usuario_p,
			dt_atualizacao			= clock_timestamp(),
			nr_seq_conta_rec		= tb_upd_cta_rec_seq_w(i),
			nr_seq_mat_rec			= tb_upd_mat_rec_seq_w(i),
			nr_seq_conta_disc		= tb_upd_cta_disc_seq_w(i),
			nr_seq_disc_mat			= tb_upd_mat_disc_seq_w(i)
		where	nr_sequencia 			= tb_upd_mat_val_seq_w(i);

	commit;

	tb_upd_conta_seq_w.delete;
	tb_upd_conta_mat_seq_w.delete;
	tb_upd_cta_val_seq_w.delete;
	tb_upd_mat_val_seq_w.delete;
	tb_upd_tiss_alt_seq_w.delete;
	tb_upd_cta_rec_seq_w.delete;
	tb_upd_mat_rec_seq_w.delete;
	tb_upd_cta_disc_seq_w.delete;
	tb_upd_mat_disc_seq_w.delete;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.selecionar_mat_lote ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
