-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.desfazer_retorno_ans ( nr_seq_lote_p pls_monitor_tiss_lote_ret.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_sequencia_w	pls_util_cta_pck.t_number_table;

c01 CURSOR(	nr_seq_monitor_ret_pc	pls_monitor_tiss_lote_ret.nr_sequencia%type) FOR
	-- glosa do lote

	SELECT	a.nr_sequencia
	from	pls_monitor_tiss_glosa a
	where	a.nr_seq_lote_monitor_ret = nr_seq_monitor_ret_pc
	
union all

	-- glosa de contas

	SELECT	c.nr_sequencia
	from	pls_monitor_tiss_guia_ret b,
		pls_monitor_tiss_glosa c
	where	b.nr_seq_lote_monitor_ret = nr_seq_monitor_ret_pc
	and	c.nr_seq_guia_monitor_ret = b.nr_sequencia
	
union all

	-- glosas de itens

	select	f.nr_sequencia
	from	pls_monitor_tiss_guia_ret d,
		pls_monitor_tiss_proc_ret e,
		pls_monitor_tiss_glosa f
	where	d.nr_seq_lote_monitor_ret = nr_seq_monitor_ret_pc
	and	e.nr_seq_guia_monitor_ret = d.nr_sequencia
	and	f.nr_seq_guia_proc_ret = e.nr_sequencia;

c02 CURSOR(	nr_seq_monitor_ret_pc	pls_monitor_tiss_lote_ret.nr_sequencia%type) FOR
	SELECT	e.nr_sequencia
	from	pls_monitor_tiss_guia_ret d,
		pls_monitor_tiss_proc_ret e
	where	d.nr_seq_lote_monitor_ret = nr_seq_monitor_ret_pc
	and	e.nr_seq_guia_monitor_ret = d.nr_sequencia;

C03 CURSOR( 	nr_seq_monitor_ret_pc	pls_monitor_tiss_lote_ret.nr_sequencia%type ) FOR
	SELECT 	a.nr_seq_chave_guia
	from 	pls_monitor_tiss_guia_ret b,
		pls_monitor_tiss_guia a
	where 	b.nr_seq_lote_monitor_ret 	= nr_seq_monitor_ret_pc
	and	a.nr_sequencia 			= b.nr_seq_guia_monitor;

c04 CURSOR(	nr_seq_monitor_ret_pc	pls_monitor_tiss_lote_ret.nr_sequencia%type) FOR
	SELECT	d.nr_sequencia
	from	pls_monitor_tiss_guia_ret d
	where	d.nr_seq_lote_monitor_ret = nr_seq_monitor_ret_pc;

c05 CURSOR(	nr_seq_monitor_ret_pc	pls_monitor_tiss_lote_ret.nr_sequencia%type) FOR
	SELECT	y.nr_sequencia
	from	pls_monitor_tiss_guia_ret d,
		pls_monitor_tiss_alt_guia z,
		pls_monitor_tiss_alt y
	where	d.nr_seq_lote_monitor_ret = nr_seq_monitor_ret_pc
	and	z.nr_seq_guia_monitor = d.nr_seq_guia_monitor
	and	y.nr_sequencia = z.nr_seq_cta_alt
	and	y.ie_status in ('A','N');

BEGIN

-- apaga as glosas

open C01( nr_seq_lote_p );
loop
	tb_sequencia_w.delete;

	fetch C01 bulk collect into tb_sequencia_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

	exit when tb_sequencia_w.count = 0;

	-- manda para o banco

	forall i in tb_sequencia_w.first .. tb_sequencia_w.last

		delete 	from pls_monitor_tiss_glosa
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
	end loop;
close C01;

-- apaga os itens das contas

open C02( nr_seq_lote_p );
loop
	tb_sequencia_w.delete;

	fetch C02 bulk collect into tb_sequencia_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

	exit when tb_sequencia_w.count = 0;

	-- manda para o banco

	forall i in tb_sequencia_w.first .. tb_sequencia_w.last

		delete 	from pls_monitor_tiss_proc_ret
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
	end loop;
close C02;

-- seta as chaves das contas como enviadas para a ANS

-- se o retorno foi desfeito elas ficam todas como enviadas

open C03( nr_seq_lote_p );
loop
	tb_sequencia_w.delete;

	fetch C03 bulk collect into tb_sequencia_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

	exit when tb_sequencia_w.count = 0;

	-- manda para o banco

	forall i in tb_sequencia_w.first .. tb_sequencia_w.last

		update 	pls_moni_tiss_chave_guia a
		set	a.ie_status = 'E',
			a.dt_atualizacao = clock_timestamp(),
			a.nm_usuario 	= nm_usuario_p
		where	a.nr_sequencia = tb_sequencia_w(i);
	commit;
	end loop;
close C03;

-- altera os status da tabela de log para processado

open C05( nr_seq_lote_p );
loop
	tb_sequencia_w.delete;

	fetch C05 bulk collect into tb_sequencia_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

	exit when tb_sequencia_w.count = 0;

	-- manda para o banco

	forall i in tb_sequencia_w.first .. tb_sequencia_w.last

		update 	pls_monitor_tiss_alt set
			ie_status = 'PR'
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
	end loop;
close C05;

-- apaga as contas

open C04( nr_seq_lote_p );
loop
	tb_sequencia_w.delete;

	fetch C04 bulk collect into tb_sequencia_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

	exit when tb_sequencia_w.count = 0;

	-- manda para o banco

	forall i in tb_sequencia_w.first .. tb_sequencia_w.last

		delete 	from pls_monitor_tiss_guia_ret
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
	end loop;
close C04;

-- apaga o lote de retorno

delete 	from pls_monitor_tiss_lote_ret
where	nr_sequencia = nr_seq_lote_p;
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.desfazer_retorno_ans ( nr_seq_lote_p pls_monitor_tiss_lote_ret.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
