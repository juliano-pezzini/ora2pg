-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Procedure salvar os diagnsticos na tabela para envio de dados ANS



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.inserir_diag_arquivo_xml ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type ) AS $body$
DECLARE


tb_cd_doenca_w			pls_util_cta_pck.t_varchar2_table_10;
tb_ie_classificacao_w		pls_util_cta_pck.t_varchar2_table_2;
tb_nr_seq_guia_tiss_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
j				integer := 0;


-- Cursor que vai resgatar os CIDs da conta. Ajuste aplicado para resgatar o CID apenas em guias de internao. OS 1832456

-- Em Fevereiro/2019 a ANS incorporou uma nova validao no Monitoramento,  passando a aceitar o CID apenas nas guias de internao. 

-- Quando informado CID nas demais guias (Consulta e SDAT, por exemplo), a Agncia glosa a conta com a crtica 5029 - Indicador invlido para o campo 41 (CID). 

-- Abaixo a regra disponvel na ANS:

--1.	No deve haver repetio do contedo do CID nos campos 41,42,43 e 44

--2.	No lanamento de incluso (do segundo em diante para a mesma guia) caso o CID de primeiro diagnstico seja informado, 

--    este deve ser igual ao que j estava na base de dados para esta guia

--3.	Este campo s pode ser informado em guias de resumo de internao


C01 CURSOR( nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type ) FOR
	SELECT	a.nr_seq_conta,
		max(a.cd_doenca) cd_doenca,
		max(a.ie_classificacao) ie_classificacao,
		max(b.nr_sequencia) nr_sequencia
	from 	pls_diagnostico_conta a,
		pls_monitor_tiss_guia b
	where	b.nr_seq_conta 		= a.nr_seq_conta
  and b.Ie_Tipo_Guia      = '5'
	and	b.nr_seq_lote_monitor 	= nr_seq_lote_pc
	--and	b.ie_tipo_registro in ('1','2')

	group by
		a.nr_seq_conta
	order by 3 asc;

BEGIN

for r_C01_w in C01(nr_seq_lote_p) loop

	tb_nr_seq_conta_w(j) := r_C01_w.nr_seq_conta;
	tb_cd_doenca_w(j) := pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(r_C01_w.nr_seq_conta, 'CD', r_C01_w.cd_doenca);
	tb_ie_classificacao_w(j) := r_C01_w.ie_classificacao;
	tb_nr_seq_guia_tiss_w(j) := r_C01_w.nr_sequencia;

	if (tb_nr_seq_conta_w.count >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then

		forall i in tb_cd_doenca_w.first .. tb_cd_doenca_w.last
			insert into  pls_monitor_tiss_diag(
			nr_sequencia, nr_seq_guia_monitor, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			cd_doenca, ie_classificacao
		) values (
			nextval('pls_monitor_tiss_diag_seq'), tb_nr_seq_guia_tiss_w(i), clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			tb_cd_doenca_w(i), tb_ie_classificacao_w(i));
		commit;

		tb_nr_seq_conta_w.delete;
		tb_cd_doenca_w.delete;
		tb_ie_classificacao_w.delete;
		tb_nr_seq_guia_tiss_w.delete;
		j := 0;
	else
		j := j + 1;
	end if;
end loop;

if (tb_nr_seq_conta_w.count > 0) then
	forall i in tb_cd_doenca_w.first .. tb_cd_doenca_w.last
		insert into  pls_monitor_tiss_diag(
		nr_sequencia, nr_seq_guia_monitor, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		cd_doenca, ie_classificacao
	) values (
		nextval('pls_monitor_tiss_diag_seq'), tb_nr_seq_guia_tiss_w(i), clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		tb_cd_doenca_w(i), tb_ie_classificacao_w(i));
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.inserir_diag_arquivo_xml ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type ) FROM PUBLIC;
