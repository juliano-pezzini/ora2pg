-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Procedure que realiza a consistncia das contas mdicas



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.consistir_contas_envio_ans ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


--Varivel table para controlar a insero das inconsistncias

tb_nr_seq_cta_val_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_cta_proc_val_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_cta_mat_val_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_lote_w		pls_util_cta_pck.t_number_table;
tb_cd_inconsistencia_w		pls_util_cta_pck.t_varchar2_table_20;
qt_registro_w 			integer := 0;
nr_seq_processo_w		pls_monitor_tempo_lote.nr_sequencia%type;
nr_seq_conta_prin_w		pls_conta.nr_sequencia%type;
nr_declaracao_obito_w		pls_diagnost_conta_obito.nr_declaracao_obito%type;
vl_total_itens_w		pls_monitor_tiss_proc_val.vl_procedimento%type;
vl_total_pago_w			pls_monitor_tiss_proc_val.vl_liberado%type;
vl_copart_w			pls_monitor_tiss_proc_val.vl_coparticipacao%type;
dt_ini_w			timestamp;
dt_fim_w			timestamp;
nr_seq_cta_ref_w		pls_monitor_tiss_cta_val.nr_sequencia%type;
qt_registro_nasc_w	integer := 0;
qt_registro_obito_w	integer := 0;
current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type	pls_monitor_tiss_lote.cd_versao_tiss%type;



C01 CURSOR(	nr_seq_lote_monitor_pc pls_monitor_tiss_lote.nr_sequencia%type )  FOR
	SELECT	a.nr_sequencia,
		coalesce(a.cd_municipio_prest_exec,'0') cd_municipio_prest_exec,
		a.cd_guia_prestador,
		a.nr_protocolo_ans,
		a.ie_origem_evento,
		a.cd_municipio_benef,
		a.nr_cartao_nac_sus,
		a.ie_tipo_guia,
		a.cd_cbo_executante,
		a.cd_cpf_cgc_prest_exec,
		a.ie_reembolso,
		a.ie_tipo_consulta,
		a.ie_tipo_atendimento,
		a.cd_guia_principal,
		a.dt_inicio_faturamento,
		a.dt_fim_internacao,
		a.ie_tipo_faturamento,
		a.dt_realizacao,
		a.dt_solicitacao,
		a.dt_autorizacao,
		a.dt_protocolo,
		a.ie_motivo_encerramento,
		a.nr_seq_conta,
		(SELECT	max(b.nr_seq_conta_princ)
		 from	pls_conta b
		 where	b.nr_sequencia = a.nr_seq_conta) nr_seq_conta_princ,
		a.ie_carater_atendimento,
		a.ie_indicacao_acidente,
		a.ie_tipo_internacao,
		a.ie_regime_internacao,
		a.vl_cobranca_guia,
		a.vl_total_pago,
		a.vl_total_copart,
		(a.vl_total_diaria + a.vl_total_material + a.vl_total_taxa + a.vl_total_procedimento + a.vl_total_medicamentos + a.vl_total_opm) vl_total_despesa,
		a.cd_cnes_prest_exec,
		a.ie_identif_prest_exec,
		coalesce(a.ie_tipo_evento,'X') ie_tipo_evento,
		a.nr_seq_segurado,
		a.ie_tipo_atend_oper,
		a.nr_registro_operadora_inter,
		(	select	max(nr_declaracao_obito)
			from 	pls_diagnost_conta_obito
			where	nr_seq_conta  = a.nr_seq_conta) nr_declaracao_obito,
		(	select 	max(nr_decl_nasc_vivo)
			from	pls_diagnostico_nasc_vivo
			where 	nr_seq_conta = a.nr_seq_conta) nr_declaracao_nasc_vivos,
		a.cd_conversao_cbo,
		a.ie_regime_atendimento,
		a.ie_saude_ocupacional
	from	pls_monitor_tiss_cta_val a
	where	a.nr_seq_lote_monitor = nr_seq_lote_monitor_pc;

C02 CURSOR(	nr_seq_lote_monitor_pc pls_monitor_tiss_lote.nr_sequencia%type )  FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta
	from	pls_monitor_tiss_cta_val a
	where	a.nr_seq_lote_monitor = nr_seq_lote_monitor_pc
	and 	exists (SELECT 	1
			from	pls_monitor_tiss_cta_val x
			where	x.nr_seq_lote_monitor = a.nr_seq_lote_monitor
			and 	x.nr_sequencia != a.nr_sequencia
			and 	x.cd_cpf_cgc_prest_exec = a.cd_cpf_cgc_prest_exec
			and 	x.cd_guia_operadora = a.cd_guia_operadora
			and 	x.cd_guia_prestador = a.cd_guia_prestador
			and 	x.nr_seq_conta != a.nr_seq_conta
			
union all

			select 	1
			from	pls_monitor_tiss_cta_val x
			where	x.nr_seq_lote_monitor = a.nr_seq_lote_monitor
			and 	x.nr_sequencia != a.nr_sequencia
			and 	x.cd_cpf_cgc_prest_exec = a.cd_cpf_cgc_prest_exec
			and 	x.cd_guia_operadora = a.cd_guia_operadora
			and 	x.nr_seq_conta != a.nr_seq_conta
			and 	coalesce(x.cd_guia_prestador::text, '') = '' and  coalesce(a.cd_guia_prestador::text, '') = ''
			
union all

			select 	1
			from	pls_monitor_tiss_cta_val x
			where	x.nr_seq_lote_monitor = a.nr_seq_lote_monitor
			and 	x.nr_sequencia != a.nr_sequencia
			and 	x.cd_cpf_cgc_prest_exec = a.cd_cpf_cgc_prest_exec
			and 	coalesce(x.cd_guia_operadora::text, '') = '' and coalesce(a.cd_guia_operadora::text, '') = ''
			and 	x.nr_seq_conta != a.nr_seq_conta
			and 	x.cd_guia_prestador = a.cd_guia_prestador);
			
C03 CURSOR FOR
	SELECT 	null nr_sequencia,
		a.nr_seq_conta			
	from	pls_monitor_tiss_alt a
	where	a.dt_evento between dt_ini_w and dt_fim_w
	and 	a.ie_tipo_evento = 'FC'
	and 	a.ie_status = 'P'
	and 	not exists ( 	SELECT 1
				from	pls_monitor_tiss_cta_val
				where 	nr_seq_conta = a.nr_seq_conta);
				
c04 CURSOR(	nr_seq_lote_pc pls_monitor_tiss_lote.nr_sequencia%type )  FOR
	SELECT 	c.nr_sequencia nr_seq_proc_val,
			f.nr_sequencia nr_seq_cta_val,
			coalesce(c.ie_pacote_ausente_sispac,'N') ie_pacote_ausente_sispac,
			coalesce(c.ie_item_comp_sispac_invalido,'N') ie_item_comp_sispac_invalido
		from 	pls_monitor_tiss_cta_val f,
			pls_monitor_tiss_proc_val c,
			pls_conta_proc 		a,
			pls_conta z
		where	f.nr_seq_lote_monitor = nr_seq_lote_pc
		and	f.ie_conta_atualizada = 'S'
		and	c.nr_seq_cta_val = f.nr_sequencia
		and	c.ie_item_atualizado = 'S'
		and	c.ie_tipo_despesa = '4'
		and	a.nr_sequencia = c.nr_seq_conta_proc
		and	z.nr_sequencia = a.nr_seq_conta
		and z.ie_origem_conta = 'A';				
	
BEGIN

nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Consistindo Contas do lote', 'I', nm_usuario_p, nr_seq_processo_w);

qt_registro_w := 0;

select 	trunc(add_months(a.dt_mes_competencia, -1), 'MM'),
	fim_mes( add_months(a.dt_mes_competencia, -1)),
	( 	select max(nr_sequencia)
		from	pls_monitor_tiss_cta_val x
		where	x.nr_seq_lote_monitor = a.nr_sequencia)
into STRICT	dt_ini_w,
	dt_fim_w,
	nr_seq_cta_ref_w
from	pls_monitor_tiss_lote a
where	a.nr_sequencia = nr_seq_lote_p;

select	cd_versao_tiss
into STRICT	current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type
from	pls_monitor_tiss_lote
where	nr_sequencia	=	nr_seq_lote_p;

/* Percorre todas as contas que sero consistidas  */


for	r_C01_w in C01( nr_seq_lote_p ) loop

	--INC002 - Cdigo do municpio IBGE do prestador executante no informado

	if ( r_C01_w.cd_municipio_prest_exec = '0' ) then
		if (r_C01_w.ie_reembolso IS NOT NULL AND r_C01_w.ie_reembolso::text <> '')  then
			tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
			tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
			tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
			tb_nr_seq_lote_w(qt_registro_w)		:= null;
			tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC030';
			qt_registro_w := qt_registro_w + 1;
		else
			tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
			tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
			tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
			tb_nr_seq_lote_w(qt_registro_w)		:= null;
			tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC002';
			qt_registro_w := qt_registro_w + 1;
		end if;
	end if;

	--INC003 - Nmero de identificao do plano do beneficirio no informado

	if ( coalesce(r_C01_w.nr_protocolo_ans::text, '') = '' ) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC003';
		qt_registro_w := qt_registro_w + 1;

	end if;

	--INC004 - Origem da guia no informada

	if ( coalesce(r_C01_w.ie_origem_evento::text, '') = '' ) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC004';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC005 - Nmero da guia no prestador no informada

	if ( coalesce(r_C01_w.cd_guia_prestador::text, '') = '' and coalesce(r_C01_w.ie_reembolso::text, '') = '' ) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC005';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC007 - Cdigo do municpio IBGE do beneficirio no informado

	if ( coalesce(r_C01_w.cd_municipio_benef::text, '') = '' ) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC007';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC008 - Cdigo CBO prestador executante no informado

	if ( coalesce(r_C01_w.cd_cbo_executante::text, '') = '' and r_C01_w.ie_tipo_guia = '3' and coalesce(r_C01_w.ie_reembolso::text, '') = '') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC008';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC010 - Cdigo do prestador executante no informado

	if ( coalesce(r_C01_w.cd_cpf_cgc_prest_exec::text, '') = '' ) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC010';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC013 - CNS invlido

	if ((trim(both r_C01_w.nr_cartao_nac_sus) IS NOT NULL AND (trim(both r_C01_w.nr_cartao_nac_sus))::text <> '')) and
		((Sus_Obter_Se_CNS_Inconsistente(r_C01_w.nr_cartao_nac_sus) = 'S') or (length(r_C01_w.nr_cartao_nac_sus) > 15))  then --Coloquei isso, pois o parmetro da funciont Sus_Obter_Se_CNS_Inconsistente  number e quando o primeiro nmero 0, ele desconsidera
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC013';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC014 - Municpio IBGE do beneficirio invlido

	if	(((r_C01_w.cd_municipio_benef IS NOT NULL AND r_C01_w.cd_municipio_benef::text <> '') and (length(r_C01_w.cd_municipio_benef) <> 7)) or (coalesce(r_C01_w.cd_municipio_benef::text, '') = '')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC014';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC015 - Tipo consulta no informado

	if (coalesce(r_C01_w.ie_tipo_consulta::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and
		((r_C01_w.ie_tipo_guia = '3') or (r_C01_w.ie_tipo_guia = '4' and r_C01_w.ie_tipo_atendimento = '04')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC015';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC016 - Informao da guia referncia  obrigatria para esse tipo de conta

	if (coalesce(r_C01_w.cd_guia_principal::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and
		((r_C01_w.ie_tipo_guia in ('5','6')) or (r_C01_w.ie_tipo_guia = '4' and r_C01_w.ie_tipo_atendimento = '07')
		or (r_C01_w.ie_tipo_guia = '4' and r_C01_w.ie_regime_atendimento = '03')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC016';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC017 - Data incio faturamento no informado

	if (r_C01_w.ie_tipo_guia = '5') and (coalesce(r_C01_w.dt_inicio_faturamento::text, '') = '') and (r_C01_w.ie_tipo_faturamento in ('1','4')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC017';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC018 - Data fim faturamento no informado

	if (r_C01_w.ie_tipo_guia = '5') and (coalesce(r_C01_w.dt_fim_internacao::text, '') = '') and (r_C01_w.ie_tipo_faturamento in ('1','4')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC018';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC019 - Data realizao no informada

	if (coalesce(r_C01_w.dt_realizacao::text, '') = '') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC019';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC020 - Data informada maior que a data atual

	if	((coalesce(r_C01_w.dt_inicio_faturamento,clock_timestamp() - interval '1 days') > clock_timestamp()) or (coalesce(r_C01_w.dt_fim_internacao,clock_timestamp() - interval '1 days') > clock_timestamp()) or (coalesce(r_C01_w.dt_realizacao,clock_timestamp() - interval '1 days') > clock_timestamp()) or (coalesce(r_C01_w.dt_solicitacao,clock_timestamp() - interval '1 days') > clock_timestamp()) or (coalesce(r_C01_w.dt_autorizacao,clock_timestamp() - interval '1 days') > clock_timestamp()) or (coalesce(r_C01_w.dt_protocolo,clock_timestamp() - interval '1 days') > clock_timestamp())) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC020';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC021 - Nmero da declarao de bito na guia principal no informada

	if (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_motivo_encerramento = '41') and
		((r_C01_w.ie_tipo_guia = '4' and r_C01_w.ie_tipo_atendimento = '07') or (r_C01_w.ie_tipo_guia = '4' and r_C01_w.ie_regime_atendimento = '03') or (r_C01_w.ie_tipo_guia = '5')) then

		nr_seq_conta_prin_w	:= null;
		nr_declaracao_obito_w	:= '';

		if (r_C01_w.ie_tipo_guia = '4') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_conta_prin_w
			from	pls_conta
			where	ie_tipo_guia = '5'
			and	nr_seq_segurado = r_C01_w.nr_seq_segurado
			and	cd_guia_ok = r_C01_w.cd_guia_principal;

			if (coalesce(nr_seq_conta_prin_w::text, '') = '') then
				nr_seq_conta_prin_w	:= r_C01_w.nr_seq_conta_princ;
			end if;

		elsif (r_C01_w.ie_tipo_guia = '5') then
			nr_seq_conta_prin_w	:= r_C01_w.nr_seq_conta;
		end if;

		if (nr_seq_conta_prin_w IS NOT NULL AND nr_seq_conta_prin_w::text <> '') then
			select	max(nr_declaracao_obito)
			into STRICT	nr_declaracao_obito_w
			from 	pls_diagnost_conta_obito
			where	nr_seq_conta 	= nr_seq_conta_prin_w;

			nr_declaracao_obito_w	:= trim(both replace(nr_declaracao_obito_w,'-',''));
		end if;

		if (coalesce(nr_declaracao_obito_w::text, '') = '') then
			select 	substr(pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(nr_seq_conta_prin_w, 'DO',null),1,11) nr_declaracao_obito
			into STRICT	nr_declaracao_obito_w
			;
		end if;
		if (coalesce(nr_declaracao_obito_w::text, '') = '') then
			tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
			tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
			tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
			tb_nr_seq_lote_w(qt_registro_w)		:= null;
			tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC021';
			qt_registro_w := qt_registro_w + 1;
		end if;
	end if;

	--INC022 - Carter de internao no informado

	if (coalesce(r_C01_w.ie_carater_atendimento::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia in ('5','4')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC022';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC023 - CBO informado invlido para a verso

	if (r_C01_w.cd_cbo_executante IS NOT NULL AND r_C01_w.cd_cbo_executante::text <> '') and (pls_gerencia_envio_ans_pck.obter_se_cbo_valido_versao(r_C01_w.cd_cbo_executante) = 'N')then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC023';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC024 - Indicao de acidente no informado

	if (coalesce(r_C01_w.ie_indicacao_acidente::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia in ('3','4','5')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC024';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC025 - Tipo faturamento no informado

	if (coalesce(r_C01_w.ie_tipo_faturamento::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia in ('5', '11')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC025';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC027 - Tipo de atendimento no informado

	if (coalesce(r_C01_w.ie_tipo_atendimento::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia = '4') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC027';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC028 - Motivo de encerramento no informado

	if (coalesce(r_C01_w.ie_motivo_encerramento::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia = '5') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC028';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC029 - Tipo de internao no informado

	if (coalesce(r_C01_w.ie_tipo_internacao::text, '') = '') and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia = '5') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC029';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--INC031 - Regime de internao no informado

	if (r_C01_w.ie_regime_internacao not in ('1','2','3')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC031';
		qt_registro_w := qt_registro_w + 1;
	end if;

	select	sum(vl_item),
		sum(vl_pago),
		sum(vl_copart)
	into STRICT	vl_total_itens_w,
		vl_total_pago_w,
		vl_copart_w
	from (
		SELECT	coalesce(sum(vl_procedimento),0) vl_item,
			coalesce(sum(vl_liberado),0) vl_pago,
			coalesce(sum(vl_coparticipacao),0) vl_copart
		from	pls_monitor_tiss_proc_val
		where	nr_seq_cta_val = r_c01_w.nr_sequencia
		
union all

		SELECT	coalesce(sum(vl_material),0) vl_item,
			coalesce(sum(vl_liberado),0) vl_pago,
			coalesce(sum(vl_coparticipacao),0) vl_copart
		from	pls_monitor_tiss_mat_val
		where	nr_seq_cta_val = r_c01_w.nr_sequencia) alias15;

	-- INC039 - O somatrio do valor apresentado dos itens diverge do valor apresentado da guia

	if (vl_total_itens_w <> r_C01_w.vl_cobranca_guia) and (r_c01_w.ie_tipo_evento <> 'AV') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC039';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- INC040 - O somatrio do valor pago dos itens diverge do valor pago da guia

	if (vl_total_pago_w <> r_C01_w.vl_total_pago) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC040';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- Para internao deve ser informado somente o total de coparticipao

	-- e no individual por item, pois no entendimento da ANS

	-- a operadora no gera coparticipao de internao por item

	-- e sim por atendimento

	-- INC041 - O somatrio do valor de coparticipao dos itens diverge do valor de coparticipao da guia

	if (vl_copart_w <> r_C01_w.vl_total_copart) and (r_C01_w.ie_tipo_guia <> '5') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC041';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- INC042 - Valor total pago da guia est divergente dos valor por tipo de despesa

	if (r_C01_w.vl_total_despesa <> r_C01_w.vl_total_pago) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC042';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- INC033 - CNES do prestador executor no informado.

	if (coalesce(r_C01_w.cd_cnes_prest_exec::text, '') = '') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC033';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- INC034 Identificao do presador executante no confere com CPF/CNPJ

	if	((coalesce(length(r_C01_w.cd_cpf_cgc_prest_exec),0) <> 14) and (r_C01_w.ie_identif_prest_exec = '1')) or
		((coalesce(length(r_C01_w.cd_cpf_cgc_prest_exec),0) <> 11) and (r_C01_w.ie_identif_prest_exec = '2')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC034';
		qt_registro_w := qt_registro_w + 1;
	end if;

	if (length(r_C01_w.cd_municipio_prest_exec) <> 7) and (r_C01_w.cd_municipio_prest_exec <> '0') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC044';
		qt_registro_w := qt_registro_w + 1;
	end if;

	if (length(r_C01_w.cd_cnes_prest_exec) <> 7) or (r_C01_w.cd_cnes_prest_exec = '0000000') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC045';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- Tipo de atendimento da operadora intermediria no informado

	if (coalesce(r_C01_w.ie_tipo_atend_oper::text, '') = '') and (r_C01_w.nr_registro_operadora_inter IS NOT NULL AND r_C01_w.nr_registro_operadora_inter::text <> '') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC046';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- Nmero do registro da operadora intermediria no informado

	if (r_C01_w.ie_tipo_atend_oper IS NOT NULL AND r_C01_w.ie_tipo_atend_oper::text <> '') and (coalesce(r_C01_w.nr_registro_operadora_inter::text, '') = '') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC047';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- CBO no pode ser igual a 999999

	if (r_C01_w.cd_cbo_executante = '999999') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC048';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- Declarao de nascidos vivos somente pode constar em guias de resumo de internao. Esse campo

	--nr_declaracao_nasc_vivos no cursor apenas  utilizado para essa inconsistncia e foi levado para o cursor seria necessrio verificar

	--em quase todos os registros, j que a inconsistncia  gerada para todos os tipos de guia exceto resumo de internao

	if	(r_C01_w.ie_tipo_guia != '5' AND r_C01_w.nr_declaracao_nasc_vivos IS NOT NULL AND r_C01_w.nr_declaracao_nasc_vivos::text <> '')  then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC049';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- Declarao de bitos somente pode constar em guias de resumo de internao. Esse campo

	--nr_declaracao_obito no cursor apenas  utilizado para essa inconsistncia e foi levado para o cursor seria necessrio verificar

	--em quase todos os registros, j que a inconsistncia  gerada para todos os tipos de guia exceto resumo de internao

	if	(r_C01_w.ie_tipo_guia != '5' AND r_C01_w.nr_declaracao_obito IS NOT NULL AND r_C01_w.nr_declaracao_obito::text <> '')  then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC050';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- o campo data final do perodo de atendimento ou data do fim do faturamento  de preenchimento obrigatrio em guias de resumo de internao

	if	((r_C01_w.ie_tipo_guia = '5') and (coalesce(r_C01_w.dt_fim_internacao::text, '') = ''))  then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC051';
		qt_registro_w := qt_registro_w + 1;
	end if;

	--O prestador executante de uma guia de resumo de internao s pode ser identificado pelo CNPJ, nunca por um CPF.

	--IE_IDENTIF_PREST_EXEC = 1 PJ 2 CPF

	if (r_C01_w.ie_tipo_guia = '5' and (r_C01_w.ie_identif_prest_exec = '2'))  then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC052';
		qt_registro_w := qt_registro_w + 1;
	end if;

	-- As guias de Consulta ou de GTO no devem ter preenchido o campo Nmero da Guia de Solicitao de Internao

	if (r_C01_w.ie_tipo_guia in ('3','11') and (r_C01_w.cd_guia_principal IS NOT NULL AND r_C01_w.cd_guia_principal::text <> ''))  then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC053';
		qt_registro_w := qt_registro_w + 1;
	end if;
	
	-- Identificar se ha algum caracter invalido na declaracao de obito ou declaracao de nascido vivo.

	if (r_C01_w.ie_origem_evento in ('1','2','3') and
	r_C01_w.ie_tipo_guia = '5' and
	(r_C01_w.nr_declaracao_obito IS NOT NULL AND r_C01_w.nr_declaracao_obito::text <> '') and (r_C01_w.nr_declaracao_obito <> pls_elimina_caracteres_esp(r_C01_w.nr_declaracao_obito))) 
	or (r_C01_w.ie_origem_evento in ('1','2','3') and
	r_C01_w.ie_tipo_guia = '5' and 
	(r_C01_w.nr_declaracao_nasc_vivos IS NOT NULL AND r_C01_w.nr_declaracao_nasc_vivos::text <> '') and (r_C01_w.nr_declaracao_nasc_vivos <> pls_elimina_caracteres_esp(r_C01_w.nr_declaracao_nasc_vivos))) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC058';
		qt_registro_w := qt_registro_w + 1;
	end if;
	
        qt_registro_obito_w := 0;
	qt_registro_nasc_w := 0;

	--Identificar se alguma declaracao de obito ou nascido vivo esta duplicada no lote

	if (r_C01_w.nr_declaracao_obito IS NOT NULL AND r_C01_w.nr_declaracao_obito::text <> '') then
		select	count(*) 
		into STRICT	qt_registro_obito_w
		from	pls_diagnost_conta_obito a
		where	nr_seq_conta != r_C01_w.nr_seq_conta
		and	nr_declaracao_obito = r_C01_w.nr_declaracao_obito
		and	exists (SELECT	1
					 from	PLS_MONITOR_TISS_CTA_VAL b
					 where	a.nr_seq_conta = b.nr_seq_conta
					 and	b.nr_seq_lote_monitor	=	nr_seq_lote_p);
	elsif (r_C01_w.nr_declaracao_nasc_vivos IS NOT NULL AND r_C01_w.nr_declaracao_nasc_vivos::text <> '') then
		select	count(*)
		into STRICT	qt_registro_nasc_w
		from	pls_diagnostico_nasc_vivo a
		where	nr_seq_conta != r_C01_w.nr_seq_conta
		and	nr_decl_nasc_vivo = r_C01_w.nr_declaracao_nasc_vivos
		and	exists (SELECT	1
					 from	PLS_MONITOR_TISS_CTA_VAL b
					 where	a.nr_seq_conta = b.nr_seq_conta
					 and	b.nr_seq_lote_monitor	=	nr_seq_lote_p);
	end if;
	
	if ((qt_registro_obito_w > 0) or (qt_registro_nasc_w > 0)) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC058';
		qt_registro_w := qt_registro_w + 1;
	end if;
	
	if (r_C01_w.cd_conversao_cbo = 'GI') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC059';
		qt_registro_w := qt_registro_w + 1;
	end if;
	
	if (r_C01_w.cd_conversao_cbo = 'CA') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC060';
		qt_registro_w := qt_registro_w + 1;
	end if;
	
	if (current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type >= '1.02.00') then
		
		if (r_C01_w.ie_tipo_atendimento in ('06', '07', '11', '14', '15', '16', '17', '18', '19', '20', '21', '22')) and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia = '4') then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC061';
		qt_registro_w := qt_registro_w + 1;
		end if;
		
		if	((coalesce(r_C01_w.ie_regime_atendimento::text, '') = '') or (r_C01_w.ie_regime_atendimento not in ('01', '02', '03', '04', '05'))) and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia in ('3', '4')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC062';
		qt_registro_w := qt_registro_w + 1;
		end if;
		
		if	((coalesce(r_C01_w.ie_saude_ocupacional::text, '') = '') or (r_C01_w.ie_saude_ocupacional not in ('01', '02', '03', '04', '05', '06'))) and (r_C01_w.ie_origem_evento in ('1','2','3')) and (r_C01_w.ie_tipo_guia in ('3', '4')) then
		tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C01_w.nr_sequencia;
		tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
		tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
		tb_nr_seq_lote_w(qt_registro_w)		:= null;
		tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC063';
		qt_registro_w := qt_registro_w + 1;
		end if;
		
	end if;
	
	--se atingiu a quantidade de registros, manda para o banco de dados

	if ( qt_registro_w >= pls_util_pck.qt_registro_transacao_w ) then
		CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );
		--zera as variveis

		qt_registro_w := 0;
		tb_nr_seq_cta_val_w.delete;
		tb_nr_seq_cta_proc_val_w.delete;
		tb_nr_seq_cta_mat_val_w.delete;
		tb_cd_inconsistencia_w.delete;
		tb_nr_seq_lote_w.delete;
	end if;


end loop;

--se sobrou registros, manda pro banco

CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );

--zera as variveis

tb_nr_seq_cta_val_w.delete;
tb_nr_seq_cta_proc_val_w.delete;
tb_nr_seq_cta_mat_val_w.delete;
tb_cd_inconsistencia_w.delete;
tb_nr_seq_lote_w.delete;

qt_registro_w := 0;
for r_c02_w in C02( nr_seq_lote_p ) loop

	tb_nr_seq_cta_val_w(qt_registro_w)	:= r_C02_w.nr_sequencia;
	tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
	tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
	tb_nr_seq_lote_w(qt_registro_w)		:= null;
	tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC054';
	qt_registro_w := qt_registro_w + 1;
	
	if ( qt_registro_w >= pls_util_pck.qt_registro_transacao_w ) then
		CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );

		qt_registro_w := 0;
		tb_nr_seq_cta_val_w.delete;
		tb_nr_seq_cta_proc_val_w.delete;
		tb_nr_seq_cta_mat_val_w.delete;
		tb_cd_inconsistencia_w.delete;
		tb_nr_seq_lote_w.delete;
	end if;


end loop;

--se sobrou registros, manda pro banco

CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );


tb_nr_seq_cta_val_w.delete;
tb_nr_seq_cta_proc_val_w.delete;
tb_nr_seq_cta_mat_val_w.delete;
tb_cd_inconsistencia_w.delete;
tb_nr_seq_lote_w.delete;

qt_registro_w := 0;
for r_c03_w in C03 loop

	tb_nr_seq_cta_val_w(qt_registro_w)	:= nr_seq_cta_ref_w;
	tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= null;
	tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
	tb_nr_seq_lote_w(qt_registro_w)		:= null;
	tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC055';
	qt_registro_w := qt_registro_w + 1;

	
	if ( qt_registro_w >= pls_util_pck.qt_registro_transacao_w ) then
		CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );

		qt_registro_w := 0;
		tb_nr_seq_cta_val_w.delete;
		tb_nr_seq_cta_proc_val_w.delete;
		tb_nr_seq_cta_mat_val_w.delete;
		tb_cd_inconsistencia_w.delete;
		tb_nr_seq_lote_w.delete;
	end if;


end loop;

--se sobrou registros, manda pro banco

CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );

tb_nr_seq_cta_val_w.delete;
tb_nr_seq_cta_proc_val_w.delete;
tb_nr_seq_cta_mat_val_w.delete;
tb_cd_inconsistencia_w.delete;
tb_nr_seq_lote_w.delete;

qt_registro_w := 0;
for r_c04_w in C04( nr_seq_lote_p) loop
		
		if ( r_c04_w.ie_pacote_ausente_sispac = 'S') then
			tb_nr_seq_cta_val_w(qt_registro_w)	:= r_c04_w.nr_seq_cta_val;
			tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= r_c04_w.nr_seq_proc_val;
			tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
			tb_nr_seq_lote_w(qt_registro_w)		:= null;
			tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC056';
			qt_registro_w := qt_registro_w + 1;
		end if;
		
		if ( r_c04_w.ie_item_comp_sispac_invalido = 'S') then
			tb_nr_seq_cta_val_w(qt_registro_w)	:= r_c04_w.nr_seq_cta_val;
			tb_nr_seq_cta_proc_val_w(qt_registro_w)	:= r_c04_w.nr_seq_proc_val;
			tb_nr_seq_cta_mat_val_w(qt_registro_w)	:= null;
			tb_nr_seq_lote_w(qt_registro_w)		:= null;
			tb_cd_inconsistencia_w(qt_registro_w)	:= 'INC057';
			qt_registro_w := qt_registro_w + 1;
		end if;
			
		if ( qt_registro_w >= pls_util_pck.qt_registro_transacao_w ) then
			CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );

			qt_registro_w := 0;
			tb_nr_seq_cta_val_w.delete;
			tb_nr_seq_cta_proc_val_w.delete;
			tb_nr_seq_cta_mat_val_w.delete;
			tb_cd_inconsistencia_w.delete;
			tb_nr_seq_lote_w.delete;
		end if;
		
end loop;

CALL CALL CALL pls_gerencia_envio_ans_pck.gravar_inconsistencia( tb_nr_seq_cta_val_w, tb_nr_seq_cta_proc_val_w, tb_nr_seq_cta_mat_val_w, tb_cd_inconsistencia_w, tb_nr_seq_lote_w, nm_usuario_p );

nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.consistir_contas_envio_ans ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
