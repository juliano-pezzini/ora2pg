-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.del_pacote_proc_aberto ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


tb_seq_w		pls_util_cta_pck.t_number_table;
tb_cd_tabela_w		pls_util_cta_pck.t_varchar2_table_5;
tb_nr_seq_regra_tab_w	pls_util_cta_pck.t_number_table;
tb_ie_origem_tab_w	pls_util_cta_pck.t_varchar2_table_20;
j			integer := 0;

-- retorna todos os procedimentos cujo pacote foi configurado para ser aberto nas contas mdicas

-- se foi aberto nas contas mdicas envia como procedimento normal, por isso  limpo o nr_seq_pacote e atualizado o cd_tabela

C01 CURSOR(	nr_seq_lote_pc		pls_monitor_tiss_lote.nr_sequencia%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT 	c.nr_sequencia nr_seq_upd,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.ie_tipo_despesa
	from 	pls_monitor_tiss_cta_val f,
		pls_monitor_tiss_proc_val c,
		pls_conta_proc 		a,
		pls_pacote_tipo_acomodacao y
	where	f.nr_seq_lote_monitor = nr_seq_lote_pc
	and	f.ie_conta_atualizada = 'S'
	and	c.nr_seq_cta_val = f.nr_sequencia
	and	c.ie_item_atualizado = 'S'
	and	c.ie_tipo_despesa = '4'
	and	a.nr_sequencia = c.nr_seq_conta_proc
	and	y.nr_sequencia = a.nr_seq_preco_pacote
	and	y.ie_abrir_contas_medicas = 'S';
BEGIN

for r_C01_w in C01(nr_seq_lote_p, cd_estabelecimento_p) loop

	tb_seq_w(j) := r_C01_w.nr_seq_upd;
	SELECT * FROM pls_gerencia_envio_ans_pck.obter_tipo_tabela_tiss(	r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced, null, r_C01_w.ie_tipo_despesa, null, cd_estabelecimento_p, tb_cd_tabela_w(j), tb_nr_seq_regra_tab_w(j), tb_ie_origem_tab_w(j)) INTO STRICT tb_cd_tabela_w(j), tb_nr_seq_regra_tab_w(j), tb_ie_origem_tab_w(j);

	if (tb_seq_w.count >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then
		forall i in tb_seq_w.first .. tb_seq_w.last
			update pls_monitor_tiss_proc_val set
				nr_seq_pacote  = NULL,
				cd_tabela_ref = tb_cd_tabela_w(i),
				ie_tipo_despesa = 1,
				nr_seq_regra_tab_ref = tb_nr_seq_regra_tab_w(i),
				ie_origem_tab_ref = tb_ie_origem_tab_w(i)
			where	nr_sequencia = tb_seq_w(i);
		commit;

		j := 0;
		tb_cd_tabela_w.delete;
		tb_nr_seq_regra_tab_w.delete;
		tb_ie_origem_tab_w.delete;
		tb_seq_w.delete;
	else
		j := j + 1;
	end if;
end loop;

if (tb_seq_w.count > 0) then
	forall i in tb_seq_w.first .. tb_seq_w.last
		update pls_monitor_tiss_proc_val set
			nr_seq_pacote  = NULL,
			cd_tabela_ref = tb_cd_tabela_w(i),
			ie_tipo_despesa = 1,
			nr_seq_regra_tab_ref = tb_nr_seq_regra_tab_w(i),
			ie_origem_tab_ref = tb_ie_origem_tab_w(i)
		where	nr_sequencia = tb_seq_w(i);
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.del_pacote_proc_aberto ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
