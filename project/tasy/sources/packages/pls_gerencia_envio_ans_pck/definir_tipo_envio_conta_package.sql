-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.definir_tipo_envio_conta ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_processo_w	pls_monitor_tempo_lote.nr_sequencia%type;
nr_seq_registro_w	integer;
ie_tipo_registro_w	pls_moni_tiss_chave_guia.ie_tipo_registro%type;
dt_processamento_w	pls_moni_tiss_chave_guia.dt_processamento%type;

tb_cd_ans_w			pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cnes_prest_exec_w     	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cpf_cgc_prest_exec_w	pls_util_cta_pck.t_varchar2_table_15;
tb_cd_guia_operadora_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_prestador_w		pls_util_cta_pck.t_varchar2_table_20;
tb_dt_cancelamento_w		pls_util_cta_pck.t_date_table;
tb_dt_conta_fechada_w		pls_util_cta_pck.t_date_table;
tb_dt_conta_fechada_recurso_w	pls_util_cta_pck.t_date_table;
tb_dt_pagamento_previsto_w	pls_util_cta_pck.t_date_table;
tb_dt_pagamento_recurso_w	pls_util_cta_pck.t_date_table;
tb_ie_reembolso_w               pls_util_cta_pck.t_varchar2_table_20;
tb_ie_tipo_registro_w		pls_util_cta_pck.t_varchar2_table_1;
tb_nr_seq_conta_w               pls_util_cta_pck.t_number_table;
tb_ie_identif_prest_exec_w	pls_util_cta_pck.t_varchar2_table_1;
tb_dt_processamento_w		pls_util_cta_pck.t_date_table;
tb_nr_seq_chave_guia_w		pls_util_cta_pck.t_number_table;
dt_atual_w			timestamp := trunc(clock_timestamp(),'dd');

c00 CURSOR(	nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type)  FOR
	SELECT	z.nr_sequencia
	from	pls_monitor_tiss_cta_val e,
		pls_moni_tiss_chave_guia z
	where	z.nr_seq_conta 		= e.nr_seq_conta
	and	e.nr_seq_lote_monitor	= nr_seq_lote_pc
	and	not exists (	SELECT	1
					from	pls_monitor_tiss_guia	x
					where	x.nr_seq_chave_guia	= z.nr_sequencia);

-- Carrega todas as contas que j foram enviadas alguma vez para a ANS

c01 CURSOR(	nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	e.nr_seq_conta,
		e.dt_cancelamento_conta,
		e.dt_pagamento_recurso,
		e.dt_conta_fechada_recurso,
		e.dt_pagamento_previsto,
		e.dt_conta_fechada,
		e.cd_cnes_prest_exec,
		e.ie_identif_prest_exec,
		e.cd_cpf_cgc_prest_exec,
		e.cd_guia_prestador,
		e.cd_guia_operadora,
		e.ie_reembolso,
		(SELECT	x.cd_ans
		 from	pls_monitor_tiss_lote x
		 where	x.nr_sequencia = nr_seq_lote_pc) cd_ans,
		min(z.dt_processamento) dt_processamento_min,
		max(z.dt_processamento) dt_processamento_max,
		max(z.dt_cancelamento) dt_cancelamento_conta_max,
		max(z.dt_pagamento_recurso) dt_pagamento_recurso_max,
		max(z.dt_conta_fechada_recurso) dt_conta_fechada_recurso_max,
		max(z.dt_pagamento_previsto) dt_pagamento_previsto_max,
		max(z.dt_conta_fechada) dt_conta_fechada_max
	from	pls_monitor_tiss_cta_val e,
		pls_moni_tiss_chave_guia z
	where	e.nr_seq_lote_monitor = nr_seq_lote_pc
	and	z.nr_seq_conta = e.nr_seq_conta
	and	z.ie_status = 'E'
	and	exists (	select	1
				from	pls_monitor_tiss_alt	x
				where	x.nr_seq_conta		= e.nr_seq_conta
				and	x.ie_tipo_evento	= 'AV') --Apenas enviar como alterao, que  alterao
	group by e.nr_seq_conta,
		e.dt_cancelamento_conta,
		e.dt_pagamento_recurso,
		e.dt_conta_fechada_recurso,
		e.dt_pagamento_previsto,
		e.dt_conta_fechada,
		e.cd_cnes_prest_exec,
		e.ie_identif_prest_exec,
		e.cd_cpf_cgc_prest_exec,
		e.cd_guia_prestador,
		e.cd_guia_operadora,
		e.ie_reembolso;

-- Carrega todas as contas que nunca foram enviadas para a ANS

c02 CURSOR(	nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	e.nr_seq_conta,
		e.dt_pagamento_recurso,
		e.dt_conta_fechada_recurso,
		e.dt_pagamento_previsto,
		e.dt_conta_fechada,
		e.cd_cnes_prest_exec,
		e.ie_identif_prest_exec,
		e.cd_cpf_cgc_prest_exec,
		e.cd_guia_prestador,
		e.cd_guia_operadora,
		e.ie_reembolso,
		(SELECT	x.cd_ans
		 from	pls_monitor_tiss_lote x
		 where	x.nr_sequencia = nr_seq_lote_pc) cd_ans
	from	pls_monitor_tiss_cta_val e
	where	e.nr_seq_lote_monitor = nr_seq_lote_pc
	and	not exists (	select	1
				from	pls_moni_tiss_chave_guia z
				where	z.nr_seq_conta = e.nr_seq_conta
				and	trunc(z.dt_atualizacao,'dd') = dt_atual_w  --Apenas no gerar como incluso, as chaves criadas no dia
				and	z.ie_status = 'E'
				and z.dt_processamento between dt_mes_competencia_ini_w and dt_mes_competencia_fim_w);

C03 CURSOR(	nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	e.nr_seq_conta,
		e.dt_exclusao_conta,
		e.cd_cnes_prest_exec,
		e.ie_identif_prest_exec,
		e.cd_cpf_cgc_prest_exec,
		e.cd_guia_prestador,
		e.cd_guia_operadora,
		e.ie_reembolso,
		CASE WHEN current_setting('pls_gerencia_envio_ans_pck.ie_tipo_lote_w')::pls_monitor_tiss_lote.ie_tipo_lote%type='1' THEN '3'  ELSE '2' END  ie_tipo_registro,
		(SELECT	x.cd_ans
		 from	pls_monitor_tiss_lote x
		 where	x.nr_sequencia = nr_seq_lote_pc) cd_ans
	from	pls_monitor_tiss_cta_val e
	where	e.nr_seq_lote_monitor = nr_seq_lote_pc;
BEGIN

if (current_setting('pls_gerencia_envio_ans_pck.ie_tipo_lote_w')::pls_monitor_tiss_lote.ie_tipo_lote%type  not in ('2','1')) then
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Definindo tipos de registros que sero enviados para contas que j foram enviadas no passado', 'I', nm_usuario_p, nr_seq_processo_w);


	tb_nr_seq_chave_guia_w.delete;
	open C00(nr_seq_lote_p);
	loop
	fetch C00 bulk collect into tb_nr_seq_chave_guia_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;
		begin
		exit when tb_nr_seq_chave_guia_w.count = 0;

		forall i in tb_nr_seq_chave_guia_w.first .. tb_nr_seq_chave_guia_w.last
			delete	FROM pls_moni_tiss_chave_guia
			where	nr_sequencia	= tb_nr_seq_chave_guia_w(i);

		commit;
		end;
	end loop;
	close C00;

	nr_seq_registro_w := 0;
	for c01_w in c01(nr_seq_lote_p) loop

		--Manter os valores iniciais de cada varivel utilizada dentro do cursor

		dt_processamento_w := null;
		ie_tipo_registro_w := null;

		-- Validao para o pagamento de recurso de glosa

		if (c01_w.dt_pagamento_recurso IS NOT NULL AND c01_w.dt_pagamento_recurso::text <> '') then

			-- se j foi enviado algum recurso no passado  alterao e a data de processamento do passado  resgatada

			if (c01_w.dt_pagamento_recurso_max IS NOT NULL AND c01_w.dt_pagamento_recurso_max::text <> '') then

				ie_tipo_registro_w	:= '2';
				dt_processamento_w := c01_w.dt_pagamento_recurso_max;
			else
				ie_tipo_registro_w	:= '1';
				dt_processamento_w := c01_w.dt_pagamento_recurso;
			end if;

		-- Validao para o Fechamento do recurso de glosa

		elsif (c01_w.dt_conta_fechada_recurso IS NOT NULL AND c01_w.dt_conta_fechada_recurso::text <> '') then

			-- se j foi enviado algum recurso no passado  alterao e a data de processamento do passado  resgatada

			if (c01_w.dt_conta_fechada_recurso_max IS NOT NULL AND c01_w.dt_conta_fechada_recurso_max::text <> '') then

				ie_tipo_registro_w	:= '2';
				dt_processamento_w := c01_w.dt_conta_fechada_recurso_max;
			else
				ie_tipo_registro_w	:= '1';
				dt_processamento_w := c01_w.dt_conta_fechada_recurso;
			end if;

		-- Validao para o pagamento da conta mdica

		elsif (c01_w.dt_pagamento_previsto IS NOT NULL AND c01_w.dt_pagamento_previsto::text <> '') then

			if (c01_w.dt_pagamento_previsto_max IS NOT NULL AND c01_w.dt_pagamento_previsto_max::text <> '') then

				ie_tipo_registro_w	:= '2';
				dt_processamento_w := c01_w.dt_pagamento_previsto_max;
			else
				ie_tipo_registro_w	:= '1';
				dt_processamento_w := c01_w.dt_pagamento_previsto;
			end if;

		--Validao para o fechamento da conta mdica

		elsif (c01_w.dt_conta_fechada IS NOT NULL AND c01_w.dt_conta_fechada::text <> '') then

			if (c01_w.dt_conta_fechada_max IS NOT NULL AND c01_w.dt_conta_fechada_max::text <> '') then

				ie_tipo_registro_w	:= '2';
				dt_processamento_w := c01_w.dt_conta_fechada_max;
			else
				ie_tipo_registro_w	:= '1';
				dt_processamento_w := c01_w.dt_conta_fechada;
			end if;

		end if;

		if (ie_tipo_registro_w IS NOT NULL AND ie_tipo_registro_w::text <> '') then
			tb_cd_ans_w(nr_seq_registro_w) 				:= c01_w.cd_ans;
			tb_cd_cnes_prest_exec_w(nr_seq_registro_w) 		:= c01_w.cd_cnes_prest_exec;
			tb_cd_cpf_cgc_prest_exec_w(nr_seq_registro_w) 		:= c01_w.cd_cpf_cgc_prest_exec;
			tb_cd_guia_operadora_w(nr_seq_registro_w) 		:= c01_w.cd_guia_operadora;
			tb_cd_guia_prestador_w(nr_seq_registro_w) 		:= c01_w.cd_guia_prestador;
			tb_dt_cancelamento_w(nr_seq_registro_w) 		:= c01_w.dt_cancelamento_conta;
			tb_dt_conta_fechada_w(nr_seq_registro_w) 		:= c01_w.dt_conta_fechada;
			tb_dt_conta_fechada_recurso_w(nr_seq_registro_w) 	:= c01_w.dt_conta_fechada_recurso;
			tb_dt_pagamento_previsto_w(nr_seq_registro_w) 		:= c01_w.dt_pagamento_previsto;
			tb_dt_pagamento_recurso_w(nr_seq_registro_w) 		:= c01_w.dt_pagamento_recurso;
			tb_ie_identif_prest_exec_w(nr_seq_registro_w) 		:= c01_w.ie_identif_prest_exec;
			tb_ie_reembolso_w(nr_seq_registro_w) 			:= c01_w.ie_reembolso;
			tb_nr_seq_conta_w(nr_seq_registro_w) 			:= c01_w.nr_seq_conta;
			tb_ie_tipo_registro_w(nr_seq_registro_w) 		:= ie_tipo_registro_w;
			tb_dt_processamento_w(nr_seq_registro_w) 		:= trunc(dt_processamento_w);

			if (nr_seq_registro_w >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then
				-- manda para o banco

				CALL pls_gerencia_envio_ans_pck.atualizar_moni_tiss_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w,
								tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w,
								tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w,
								tb_dt_pagamento_recurso_w, tb_ie_reembolso_w,
								tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w,
								tb_dt_processamento_w, nm_usuario_p);

				-- Limpa as variveis do type DADOS_MONITOR_CONTA_UPDATE

				SELECT * FROM pls_gerencia_envio_ans_pck.limpar_type_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w, tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w, tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w, tb_dt_pagamento_recurso_w, tb_ie_reembolso_w, tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w, tb_dt_processamento_w) INTO STRICT _ora2pg_r;
 	tb_cd_ans_w := _ora2pg_r.tb_cd_ans_p; tb_cd_cnes_prest_exec_w := _ora2pg_r.tb_cd_cnes_prest_exec_p; tb_cd_cpf_cgc_prest_exec_w := _ora2pg_r.tb_cd_cpf_cgc_prest_exec_p; tb_cd_guia_operadora_w := _ora2pg_r.tb_cd_guia_operadora_p; tb_cd_guia_prestador_w := _ora2pg_r.tb_cd_guia_prestador_p; tb_dt_cancelamento_w := _ora2pg_r.tb_dt_cancelamento_p; tb_dt_conta_fechada_w := _ora2pg_r.tb_dt_conta_fechada_p; tb_dt_conta_fechada_recurso_w := _ora2pg_r.tb_dt_conta_fechada_recurso_p; tb_dt_pagamento_previsto_w := _ora2pg_r.tb_dt_pagamento_previsto_p; tb_dt_pagamento_recurso_w := _ora2pg_r.tb_dt_pagamento_recurso_p; tb_ie_reembolso_w := _ora2pg_r.tb_ie_reembolso_p; tb_ie_tipo_registro_w := _ora2pg_r.tb_ie_tipo_registro_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ie_identif_prest_exec_w := _ora2pg_r.tb_ie_identif_prest_exec_p; tb_dt_processamento_w := _ora2pg_r.tb_dt_processamento_p;

				nr_seq_registro_w := 0;
			else
				nr_seq_registro_w := nr_seq_registro_w + 1;
			end if;
		end if;

	end loop;

	-- se sobrou alguma coisa manda para o banco

	CALL pls_gerencia_envio_ans_pck.atualizar_moni_tiss_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w,
					tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w,
					tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w,
					tb_dt_pagamento_recurso_w, tb_ie_reembolso_w,
					tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w,
					tb_dt_processamento_w, nm_usuario_p);

	SELECT * FROM pls_gerencia_envio_ans_pck.limpar_type_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w, tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w, tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w, tb_dt_pagamento_recurso_w, tb_ie_reembolso_w, tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w, tb_dt_processamento_w) INTO STRICT _ora2pg_r;
 	tb_cd_ans_w := _ora2pg_r.tb_cd_ans_p; tb_cd_cnes_prest_exec_w := _ora2pg_r.tb_cd_cnes_prest_exec_p; tb_cd_cpf_cgc_prest_exec_w := _ora2pg_r.tb_cd_cpf_cgc_prest_exec_p; tb_cd_guia_operadora_w := _ora2pg_r.tb_cd_guia_operadora_p; tb_cd_guia_prestador_w := _ora2pg_r.tb_cd_guia_prestador_p; tb_dt_cancelamento_w := _ora2pg_r.tb_dt_cancelamento_p; tb_dt_conta_fechada_w := _ora2pg_r.tb_dt_conta_fechada_p; tb_dt_conta_fechada_recurso_w := _ora2pg_r.tb_dt_conta_fechada_recurso_p; tb_dt_pagamento_previsto_w := _ora2pg_r.tb_dt_pagamento_previsto_p; tb_dt_pagamento_recurso_w := _ora2pg_r.tb_dt_pagamento_recurso_p; tb_ie_reembolso_w := _ora2pg_r.tb_ie_reembolso_p; tb_ie_tipo_registro_w := _ora2pg_r.tb_ie_tipo_registro_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ie_identif_prest_exec_w := _ora2pg_r.tb_ie_identif_prest_exec_p; tb_dt_processamento_w := _ora2pg_r.tb_dt_processamento_p;

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	-- aqui para baixo trata todas as contas que nunca foram enviadas para a ANS

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Definindo tipos de registros de contas que nunca foram enviadas para a ANS', 'I', nm_usuario_p, nr_seq_processo_w);

	nr_seq_registro_w := 0;
	for c02_w in c02(nr_seq_lote_p) loop

		-- aqui  sempre incluso

		ie_tipo_registro_w	:= '1';

		-- Validao para o pagamento de recurso de glosa

		if (c02_w.dt_pagamento_recurso IS NOT NULL AND c02_w.dt_pagamento_recurso::text <> '') then

			dt_processamento_w := c02_w.dt_pagamento_recurso;

		-- Validao para o Fechamento do recurso de glosa

		elsif (c02_w.dt_conta_fechada_recurso IS NOT NULL AND c02_w.dt_conta_fechada_recurso::text <> '') then

			dt_processamento_w := c02_w.dt_conta_fechada_recurso;

		-- Validao para o pagamento da conta mdica

		elsif (c02_w.dt_pagamento_previsto IS NOT NULL AND c02_w.dt_pagamento_previsto::text <> '') then

			dt_processamento_w := c02_w.dt_pagamento_previsto;

		--Validao para o fechamento da conta mdica

		elsif (c02_w.dt_conta_fechada IS NOT NULL AND c02_w.dt_conta_fechada::text <> '') then

			dt_processamento_w := c02_w.dt_conta_fechada;

		end if;

		tb_cd_ans_w(nr_seq_registro_w) 				:= c02_w.cd_ans;
		tb_cd_cnes_prest_exec_w(nr_seq_registro_w) 		:= c02_w.cd_cnes_prest_exec;
		tb_cd_cpf_cgc_prest_exec_w(nr_seq_registro_w) 		:= c02_w.cd_cpf_cgc_prest_exec;
		tb_cd_guia_operadora_w(nr_seq_registro_w) 		:= c02_w.cd_guia_operadora;
		tb_cd_guia_prestador_w(nr_seq_registro_w) 		:= c02_w.cd_guia_prestador;
		tb_dt_cancelamento_w(nr_seq_registro_w) 		:= null;
		tb_dt_conta_fechada_w(nr_seq_registro_w) 		:= c02_w.dt_conta_fechada;
		tb_dt_conta_fechada_recurso_w(nr_seq_registro_w) 	:= c02_w.dt_conta_fechada_recurso;
		tb_dt_pagamento_previsto_w(nr_seq_registro_w) 		:= c02_w.dt_pagamento_previsto;
		tb_dt_pagamento_recurso_w(nr_seq_registro_w) 		:= c02_w.dt_pagamento_recurso;
		tb_ie_identif_prest_exec_w(nr_seq_registro_w) 		:= c02_w.ie_identif_prest_exec;
		tb_ie_reembolso_w(nr_seq_registro_w) 			:= c02_w.ie_reembolso;
		tb_nr_seq_conta_w(nr_seq_registro_w) 			:= c02_w.nr_seq_conta;
		tb_ie_tipo_registro_w(nr_seq_registro_w) 		:= ie_tipo_registro_w;
		tb_dt_processamento_w(nr_seq_registro_w) 		:= trunc(dt_processamento_w);

		if (nr_seq_registro_w >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then
			-- manda para o banco

			CALL pls_gerencia_envio_ans_pck.atualizar_moni_tiss_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w,
							tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w,
							tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w,
							tb_dt_pagamento_recurso_w, tb_ie_reembolso_w,
							tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w,
							tb_dt_processamento_w, nm_usuario_p);

			-- Limpa as variveis do type DADOS_MONITOR_CONTA_UPDATE

			SELECT * FROM pls_gerencia_envio_ans_pck.limpar_type_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w, tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w, tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w, tb_dt_pagamento_recurso_w, tb_ie_reembolso_w, tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w, tb_dt_processamento_w) INTO STRICT _ora2pg_r;
 	tb_cd_ans_w := _ora2pg_r.tb_cd_ans_p; tb_cd_cnes_prest_exec_w := _ora2pg_r.tb_cd_cnes_prest_exec_p; tb_cd_cpf_cgc_prest_exec_w := _ora2pg_r.tb_cd_cpf_cgc_prest_exec_p; tb_cd_guia_operadora_w := _ora2pg_r.tb_cd_guia_operadora_p; tb_cd_guia_prestador_w := _ora2pg_r.tb_cd_guia_prestador_p; tb_dt_cancelamento_w := _ora2pg_r.tb_dt_cancelamento_p; tb_dt_conta_fechada_w := _ora2pg_r.tb_dt_conta_fechada_p; tb_dt_conta_fechada_recurso_w := _ora2pg_r.tb_dt_conta_fechada_recurso_p; tb_dt_pagamento_previsto_w := _ora2pg_r.tb_dt_pagamento_previsto_p; tb_dt_pagamento_recurso_w := _ora2pg_r.tb_dt_pagamento_recurso_p; tb_ie_reembolso_w := _ora2pg_r.tb_ie_reembolso_p; tb_ie_tipo_registro_w := _ora2pg_r.tb_ie_tipo_registro_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ie_identif_prest_exec_w := _ora2pg_r.tb_ie_identif_prest_exec_p; tb_dt_processamento_w := _ora2pg_r.tb_dt_processamento_p;

			nr_seq_registro_w := 0;
		else
			nr_seq_registro_w := nr_seq_registro_w + 1;
		end if;

	end loop;

	-- se sobrou alguma coisa manda para o banco

	CALL pls_gerencia_envio_ans_pck.atualizar_moni_tiss_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w,
					tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w,
					tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w,
					tb_dt_pagamento_recurso_w, tb_ie_reembolso_w,
					tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w,
					tb_dt_processamento_w, nm_usuario_p);

	SELECT * FROM pls_gerencia_envio_ans_pck.limpar_type_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w, tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w, tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w, tb_dt_pagamento_recurso_w, tb_ie_reembolso_w, tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w, tb_dt_processamento_w) INTO STRICT _ora2pg_r;
 	tb_cd_ans_w := _ora2pg_r.tb_cd_ans_p; tb_cd_cnes_prest_exec_w := _ora2pg_r.tb_cd_cnes_prest_exec_p; tb_cd_cpf_cgc_prest_exec_w := _ora2pg_r.tb_cd_cpf_cgc_prest_exec_p; tb_cd_guia_operadora_w := _ora2pg_r.tb_cd_guia_operadora_p; tb_cd_guia_prestador_w := _ora2pg_r.tb_cd_guia_prestador_p; tb_dt_cancelamento_w := _ora2pg_r.tb_dt_cancelamento_p; tb_dt_conta_fechada_w := _ora2pg_r.tb_dt_conta_fechada_p; tb_dt_conta_fechada_recurso_w := _ora2pg_r.tb_dt_conta_fechada_recurso_p; tb_dt_pagamento_previsto_w := _ora2pg_r.tb_dt_pagamento_previsto_p; tb_dt_pagamento_recurso_w := _ora2pg_r.tb_dt_pagamento_recurso_p; tb_ie_reembolso_w := _ora2pg_r.tb_ie_reembolso_p; tb_ie_tipo_registro_w := _ora2pg_r.tb_ie_tipo_registro_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ie_identif_prest_exec_w := _ora2pg_r.tb_ie_identif_prest_exec_p; tb_dt_processamento_w := _ora2pg_r.tb_dt_processamento_p;

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);
else
	-- aqui para baixo trata todas as contas que nunca foram enviadas para a ANS

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Definindo tipos de registros de contas do lote de excluso ou alterao', 'I', nm_usuario_p, nr_seq_processo_w);

	nr_seq_registro_w := 0;

	for r_C03_w in C03(nr_seq_lote_p) loop

		tb_cd_ans_w(nr_seq_registro_w) 				:= r_C03_w.cd_ans;
		tb_cd_cnes_prest_exec_w(nr_seq_registro_w) 		:= r_C03_w.cd_cnes_prest_exec;
		tb_cd_cpf_cgc_prest_exec_w(nr_seq_registro_w) 		:= r_C03_w.cd_cpf_cgc_prest_exec;
		tb_cd_guia_operadora_w(nr_seq_registro_w) 		:= r_C03_w.cd_guia_operadora;
		tb_cd_guia_prestador_w(nr_seq_registro_w) 		:= r_C03_w.cd_guia_prestador;
		tb_dt_cancelamento_w(nr_seq_registro_w) 		:= null;
		tb_dt_conta_fechada_w(nr_seq_registro_w) 		:= null;
		tb_dt_conta_fechada_recurso_w(nr_seq_registro_w) 	:= null;
		tb_dt_pagamento_previsto_w(nr_seq_registro_w) 		:= null;
		tb_dt_pagamento_recurso_w(nr_seq_registro_w) 		:= null;
		tb_ie_identif_prest_exec_w(nr_seq_registro_w) 		:= r_C03_w.ie_identif_prest_exec;
		tb_ie_reembolso_w(nr_seq_registro_w) 			:= r_C03_w.ie_reembolso;
		tb_nr_seq_conta_w(nr_seq_registro_w) 			:= r_C03_w.nr_seq_conta;
		tb_ie_tipo_registro_w(nr_seq_registro_w) 		:= r_C03_w.ie_tipo_registro;
		tb_dt_processamento_w(nr_seq_registro_w) 		:= r_C03_w.dt_exclusao_conta;

		if (nr_seq_registro_w >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then
			-- manda para o banco

			CALL pls_gerencia_envio_ans_pck.atualizar_moni_tiss_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w,
							tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w,
							tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w,
							tb_dt_pagamento_recurso_w, tb_ie_reembolso_w,
							tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w,
							tb_dt_processamento_w, nm_usuario_p);

			-- Limpa as variveis do type DADOS_MONITOR_CONTA_UPDATE

			SELECT * FROM pls_gerencia_envio_ans_pck.limpar_type_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w, tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w, tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w, tb_dt_pagamento_recurso_w, tb_ie_reembolso_w, tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w, tb_dt_processamento_w) INTO STRICT _ora2pg_r;
 	tb_cd_ans_w := _ora2pg_r.tb_cd_ans_p; tb_cd_cnes_prest_exec_w := _ora2pg_r.tb_cd_cnes_prest_exec_p; tb_cd_cpf_cgc_prest_exec_w := _ora2pg_r.tb_cd_cpf_cgc_prest_exec_p; tb_cd_guia_operadora_w := _ora2pg_r.tb_cd_guia_operadora_p; tb_cd_guia_prestador_w := _ora2pg_r.tb_cd_guia_prestador_p; tb_dt_cancelamento_w := _ora2pg_r.tb_dt_cancelamento_p; tb_dt_conta_fechada_w := _ora2pg_r.tb_dt_conta_fechada_p; tb_dt_conta_fechada_recurso_w := _ora2pg_r.tb_dt_conta_fechada_recurso_p; tb_dt_pagamento_previsto_w := _ora2pg_r.tb_dt_pagamento_previsto_p; tb_dt_pagamento_recurso_w := _ora2pg_r.tb_dt_pagamento_recurso_p; tb_ie_reembolso_w := _ora2pg_r.tb_ie_reembolso_p; tb_ie_tipo_registro_w := _ora2pg_r.tb_ie_tipo_registro_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ie_identif_prest_exec_w := _ora2pg_r.tb_ie_identif_prest_exec_p; tb_dt_processamento_w := _ora2pg_r.tb_dt_processamento_p;

			nr_seq_registro_w := 0;
		else
			nr_seq_registro_w := nr_seq_registro_w + 1;
		end if;
	end loop;

	-- manda para o banco

	CALL pls_gerencia_envio_ans_pck.atualizar_moni_tiss_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w,
					tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w,
					tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w,
					tb_dt_pagamento_recurso_w, tb_ie_reembolso_w,
					tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w,
					tb_dt_processamento_w, nm_usuario_p);

	-- Limpa as variveis do type DADOS_MONITOR_CONTA_UPDATE

	SELECT * FROM pls_gerencia_envio_ans_pck.limpar_type_chave_guia(	tb_cd_ans_w, tb_cd_cnes_prest_exec_w, tb_cd_cpf_cgc_prest_exec_w, tb_cd_guia_operadora_w, tb_cd_guia_prestador_w, tb_dt_cancelamento_w, tb_dt_conta_fechada_w, tb_dt_conta_fechada_recurso_w, tb_dt_pagamento_previsto_w, tb_dt_pagamento_recurso_w, tb_ie_reembolso_w, tb_ie_tipo_registro_w, tb_nr_seq_conta_w, tb_ie_identif_prest_exec_w, tb_dt_processamento_w) INTO STRICT _ora2pg_r;
 	tb_cd_ans_w := _ora2pg_r.tb_cd_ans_p; tb_cd_cnes_prest_exec_w := _ora2pg_r.tb_cd_cnes_prest_exec_p; tb_cd_cpf_cgc_prest_exec_w := _ora2pg_r.tb_cd_cpf_cgc_prest_exec_p; tb_cd_guia_operadora_w := _ora2pg_r.tb_cd_guia_operadora_p; tb_cd_guia_prestador_w := _ora2pg_r.tb_cd_guia_prestador_p; tb_dt_cancelamento_w := _ora2pg_r.tb_dt_cancelamento_p; tb_dt_conta_fechada_w := _ora2pg_r.tb_dt_conta_fechada_p; tb_dt_conta_fechada_recurso_w := _ora2pg_r.tb_dt_conta_fechada_recurso_p; tb_dt_pagamento_previsto_w := _ora2pg_r.tb_dt_pagamento_previsto_p; tb_dt_pagamento_recurso_w := _ora2pg_r.tb_dt_pagamento_recurso_p; tb_ie_reembolso_w := _ora2pg_r.tb_ie_reembolso_p; tb_ie_tipo_registro_w := _ora2pg_r.tb_ie_tipo_registro_p; tb_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ie_identif_prest_exec_w := _ora2pg_r.tb_ie_identif_prest_exec_p; tb_dt_processamento_w := _ora2pg_r.tb_dt_processamento_p;

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.definir_tipo_envio_conta ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
