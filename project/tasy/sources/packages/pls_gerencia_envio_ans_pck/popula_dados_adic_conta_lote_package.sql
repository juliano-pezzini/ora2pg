-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.popula_dados_adic_conta_lote ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, dt_ini_pc timestamp, dt_fim_pc timestamp, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


dt_solicitacao_w 		pls_guia_plano.dt_solicitacao%type;
dt_autorizacao_w 		pls_guia_plano.dt_autorizacao%type;
cd_cbo_executante_w 		pls_monitor_tiss_cta_val.cd_cbo_executante%type;
nr_versao_ptu_w			varchar(10);
ie_envia_conta_w		varchar(1);

cd_guia_prestador_w		pls_monitor_tiss_cta_val.cd_guia_prestador%type;
cd_guia_operadora_w		pls_monitor_tiss_cta_val.cd_guia_operadora%type;
cd_guia_referencia_w		pls_monitor_tiss_cta_val.CD_GUIA_PRINCIPAL%type;

dt_conta_fechada_w		pls_monitor_tiss_cta_val.dt_conta_fechada%type;
dt_conta_fechada_recurso_w	pls_monitor_tiss_cta_val.dt_conta_fechada_recurso%type;
dt_pagamento_recurso_w		pls_monitor_tiss_cta_val.dt_pagamento_recurso%type;
dt_pagamento_previsto_w		pls_monitor_tiss_cta_val.dt_pagamento_previsto%type;
dt_cancelamento_conta_w		pls_monitor_tiss_cta_val.dt_cancelamento_conta%type;
dt_realizacao_w			timestamp;

cd_versao_tiss_prest_w		pls_monitor_tiss_cta_val.cd_versao_tiss%type;
ie_tipo_envio_w			pls_monitor_tiss_cta_val.ie_tipo_envio%type	:= 'N'; --Identifica se a conta foi apresentada no papel
ie_carater_atendimento_w	pls_monitor_tiss_cta_val.ie_carater_atendimento%type;
ie_tipo_consulta_w		pls_monitor_tiss_cta_val.ie_tipo_consulta%type;
ie_tipo_faturamento_w		pls_monitor_tiss_cta_val.ie_tipo_faturamento%type;
dt_inicio_fat_w			pls_conta.dt_entrada%type;
dt_fim_fat_w			pls_conta.dt_alta%type;
nr_cbo_req_w			ptu_nota_cobranca.nr_cbo_req%type;
ie_motivo_encerramento_w	pls_monitor_tiss_guia.ie_motivo_encerramento%type;
cd_especialidade_w		ptu_nota_servico.cd_especialidade%type;
nr_seq_especialidade_w		especialidade_medica.cd_especialidade%type;
nr_seq_cbo_saude_w		tiss_cbo_saude.nr_seq_cbo_saude%type;
nr_registro_ans_inter_w		pls_congenere.cd_ans%type;
ie_tipo_atend_oper_w		pls_monitor_tiss_cta_val.ie_tipo_atend_oper%type;
nr_ident_pre_estab_w		pls_monitor_tiss_cta_val.nr_ident_pre_estab%type;
nr_seq_cbo_partic_w		pls_proc_participante.nr_seq_cbo_saude%type;
cd_cbo_partic_imp_w		pls_proc_participante.cd_cbo_saude_imp%type;

--Dados prestador executor da conta

cd_cnes_w			pls_monitor_tiss_cta_val.cd_cnes_prest_exec%type := null;
ie_tipo_identif_w		pls_monitor_tiss_cta_val.ie_identif_prest_exec%type;
cd_cpf_cgc_w			pls_monitor_tiss_cta_val.cd_cpf_cgc_prest_exec%type;
cd_municipio_ibge_w	 	pls_monitor_tiss_cta_val.cd_municipio_prest_exec%type;

--Dados do beneficirio

ie_sexo_w			pls_monitor_tiss_cta_val.ie_sexo%type;
dt_nascimento_w 		pls_monitor_tiss_cta_val.dt_nascimento%type;
cd_municipio_benef_w		pls_monitor_tiss_cta_val.cd_municipio_benef%type;

dados_prestador_w		dados_prestador;
dados_beneficiario_w		dados_beneficiario;

dados_conta_update_w		pls_gerencia_envio_ans_pck.dados_monitor_conta_update;
j				integer;
nr_seq_repasse_w		pls_segurado_repasse.nr_sequencia%type;
ie_tipo_repasse_w		pls_segurado_repasse.ie_tipo_repasse%type;
nr_seq_cbo_w			pls_conta.nr_seq_cbo_saude%type;
ie_regime_internacao_w	pls_conta.ie_regime_internacao%type;
cd_versao_tiss_cbo_w	pls_monitor_tiss_lote.cd_versao_tiss%type;

c01 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT (SELECT	p.nr_cartao_nac_sus
		from 	pessoa_fisica p
		where 	p.cd_pessoa_fisica = c.cd_pessoa_fisica) cd_cns,
		(select	CASE WHEN p.ie_regulamentacao='P' THEN p.nr_protocolo_ans  ELSE coalesce(p.cd_scpa,p.nr_protocolo_ans) END  --Caso for regulamentado, ento busca do protocolo ANS, seno do SCPA
		from	pls_plano p
		where	p.nr_sequencia = c.nr_seq_plano) cd_registro_ans,
		pls_gerencia_envio_ans_pck.obter_informacao_alter_date(a.nr_sequencia, 'DP', d.dt_mes_competencia) dt_protocolo,
		a.ie_tipo_guia,
		pls_gerencia_envio_ans_pck.obter_origem_guia(a.nr_seq_protocolo, a.nr_seq_prestador_exec) ie_origem,
		coalesce(a.cd_guia_prestador_ans,a.cd_guia_prestador) cd_guia_prestador,
		a.cd_guia_prestador_ans,
		coalesce(a.cd_guia,a.cd_guia_ok) cd_guia,
		CASE WHEN d.ie_tipo_protocolo='R' THEN a.nr_sequencia  ELSE null END  nr_reembolso,
		a.cd_guia_referencia,
		a.ie_tipo_consulta,
		CASE WHEN a.ie_tipo_guia='5' THEN  pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'RI', a.ie_regime_internacao)  ELSE '' END  ie_regime_internacao,
		CASE WHEN a.ie_tipo_guia='6' THEN ''  ELSE pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'IA',a.ie_indicacao_acidente) END  ie_indicacao_acidente,
		a.ie_carater_internacao,
		pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'IRN', coalesce(a.ie_recem_nascido,'N')) ie_recem_nato,
		a.nr_seq_cbo_saude nr_seq_cbo,
		a.nr_seq_clinica,
		a.nr_seq_tipo_atendimento,
		a.nr_seq_guia,
		a.nr_seq_segurado,
		a.dt_atendimento_referencia,
		a.nr_sequencia nr_seq_conta,
		a.nr_seq_prestador_exec,
		( 	select 	max(pp.nr_seq_cbo_saude)
			from	pls_prestador p,
					pessoa_fisica pp
			where	p.nr_sequencia = a.nr_seq_prestador_exec
			and		pp.cd_pessoa_fisica = p.cd_pessoa_fisica) nr_seq_cbo_saude_prest_pf,
		a.nr_seq_prest_inter,
		d.ie_origem_protocolo,
		d.cd_versao_tiss,
		d.ie_tipo_protocolo,
		a.ie_tipo_faturamento,
		trunc(dt_alta, 'DD') dt_fim_faturamento,
		trunc(dt_entrada, 'DD') dt_inicio_faturamento,
		0.0 vl_guia,
		0.0 vl_processado,
		a.vl_diarias,
		a.vl_glosa,
		a.vl_materiais,
		a.vl_medicamentos,
		a.vl_opm,
		a.vl_procedimentos,
		a.vl_taxas,
		0.0 vl_total,
		0.0 vl_pago_fornec,
		0.0 vl_pago_propria,
		e.dt_evento,
		e.ie_tipo_evento,
		e.nr_sequencia nr_seq_cta_alt,
		c.cd_pessoa_fisica,
		(select	p.dt_autorizacao
		from	pls_guia_plano	p
		where	p.nr_sequencia = a.nr_seq_guia) dt_autorizacao,
		(select	p.dt_solicitacao
		from	pls_guia_plano	p
		where	p.nr_sequencia = a.nr_seq_guia) dt_solicitacao,
		a.cd_pessoa_fisica cd_pf_reembolso,
		a.cd_cgc cd_cgc_reembolso,
		a.nr_seq_nota_cobranca,
		CASE WHEN a.ie_tipo_guia='4' THEN  pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'TA', pls_obter_cd_tiss_atendimento(a.nr_seq_tipo_atendimento))  ELSE '' END  ie_tipo_atendimento,
		CASE WHEN a.ie_tipo_guia='5' THEN pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'TI', pls_obter_cd_tiss_internacao(a.nr_seq_clinica))  ELSE '' END  ie_tipo_internacao,
		a.nr_seq_saida_int,
		f.cd_scpa cd_scpa_contrato,
		a.cd_cbo_saude_exec_imp,
		f.nr_sequencia nr_seq_contrato,
		a.dt_emissao,
		pls_gerencia_envio_ans_pck.obter_guia_sadt_principal(a.nr_sequencia, a.cd_guia, a.cd_guia_referencia, a.nr_seq_segurado, a.nr_seq_tipo_atendimento, a.ie_tipo_guia) cd_guia_sadt_princ,
		coalesce(a.nr_seq_congenere, d.nr_seq_congenere) nr_seq_congenere,
		a.nr_guia_tiss_operadora,
		a.nr_guia_tiss_prestador,
		a.nr_guia_tiss_principal,
		( 	select 	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
			from 	pls_monitor_tiss_alt
			where 	nr_seq_conta = a.nr_sequencia
			and		ie_status = 'A') ie_conta_envio,
		(	select 	max(cd_guia_operadora)
			from 	pls_monitor_tiss_cta_val x,
					pls_monitor_tiss_alt z
			where	x.nr_seq_cta_alt = z.nr_sequencia
			and		z.ie_status = 'A'
			and		z.nr_seq_conta = a.nr_sequencia
			and 	x.nr_sequencia <> e.nr_sequencia) cd_guia_operadora_envio_old,
		(	select 	max(cd_guia_prestador)
			from 	pls_monitor_tiss_cta_val x,
					pls_monitor_tiss_alt z
			where	x.nr_seq_cta_alt = z.nr_sequencia
			and		z.ie_status = 'A'
			and		z.nr_seq_conta = a.nr_sequencia
			and 	x.nr_sequencia <> e.nr_sequencia) cd_guia_prestador_envio_old,
		(	select 	max(cd_guia_principal)
			from 	pls_monitor_tiss_cta_val x,
					pls_monitor_tiss_alt z
			where	x.nr_seq_cta_alt = z.nr_sequencia
			and		z.ie_status = 'A'
			and		z.nr_seq_conta = a.nr_sequencia
			and 	x.nr_sequencia <> e.nr_sequencia) cd_guia_principal_envio_old,
		(
			select max(cd_pessoa_fisica)
			from 	pls_segurado
			where 	nr_sequencia = c.nr_seq_titular
		) cd_pessoa_fisica_titular,
		(	select 	max(cd_cbo_executante)
			from 	pls_monitor_tiss_cta_val x,
				pls_monitor_tiss_alt z
			where	x.nr_seq_cta_alt = z.nr_sequencia
			and	z.ie_status = 'A'
			and	z.nr_seq_conta = a.nr_sequencia
			and 	x.nr_sequencia <> e.nr_sequencia ) cd_cbo_executante_envio_old,
		a.cd_cnes,
		pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'CNES', null) cd_cnes_alterado,
		coalesce(d.ie_fornec_direto,'N') ie_fornec_direto,
		pls_obter_dados_segurado(c.nr_sequencia, 'CPF') cd_cpf_segurado,
		a.ie_regime_atendimento ie_regime_atendimento,
		a.ie_saude_ocupacional ie_saude_ocupacional,
		a.ie_cobertura_especial ie_cobertura_especial,
		'01' cd_modelo_remuneracao
	from	pls_monitor_tiss_cta_val e,
		pls_conta 		a,
		pls_protocolo_conta 	d,
		pls_segurado 		c,
		pls_contrato		f
	where	e.nr_seq_lote_monitor = nr_seq_lote_pc
	and e.nr_sequencia in ( select y.nr_sequencia
                            from pls_monitor_tiss_cta_val y,
                                 pls_monitor_tiss_alt x
                            where x.ie_tipo_evento not in ('AV', 'AD','FR')
                                and x.ie_status in ('P', 'N')
                                 and x.dt_evento between dt_ini_pc and dt_fim_pc
                                and  y.nr_seq_lote_monitor = nr_seq_lote_pc
                                and y.nr_seq_conta = x.nr_seq_conta)
    and    a.nr_sequencia = e.nr_seq_conta
    and    d.nr_sequencia = a.nr_seq_protocolo
    and    c.nr_sequencia = a.nr_seq_segurado
    and    f.nr_sequencia    = c.nr_seq_contrato
    and    c.ie_tipo_segurado    in ('B','R');
BEGIN

nr_versao_ptu_w := ptu_obter_versao_dominio('A500', pls_obter_interf_ptu(cd_estabelecimento_p, null, clock_timestamp(), 'A500'));

j := 0;

cd_versao_tiss_cbo_w := pls_obter_versao_tiss;

-- abre o cursor para tratar os registros

for c01_w in c01(nr_seq_lote_p) loop

	ie_envia_conta_w := 'N';
	cd_cnes_w := null;

	-- se for conta de intercmbio e o parmetro estiver configurado para no enviar intercmbio

	if (c01_w.ie_origem_protocolo in ('A','Z') and current_setting('pls_gerencia_envio_ans_pck.ie_envia_cta_inter_w')::pls_monitor_tiss_param.ie_envia_cta_inter%type = 'N') then
		ie_envia_conta_w := 'N';
	else
		ie_envia_conta_w := 'S';
	end if;

	-- se for para enviar a conta

	if (ie_envia_conta_w = 'S') then

		-- inicializa as variveis

		cd_cbo_executante_w		:= null;
		dt_inicio_fat_w			:= null;
		dt_fim_fat_w			:= null;
		dt_nascimento_w			:= null;
		ie_sexo_w			:= null;
		cd_municipio_benef_w		:= null;
		ie_tipo_faturamento_w		:= null;
		dt_pagamento_previsto_w		:= null;
		dt_pagamento_recurso_w		:= null;
		dt_conta_fechada_recurso_w	:= null;
		dt_conta_fechada_w		:= null;
		dt_cancelamento_conta_w		:= null;
		cd_versao_tiss_prest_w		:= null;
		ie_tipo_envio_w			:= null;
		cd_guia_referencia_w		:= null;
		ie_motivo_encerramento_w	:= null;
		ie_tipo_consulta_w		:= null;
		nr_registro_ans_inter_w		:= null;
		ie_carater_atendimento_w	:= null;
		ie_tipo_atend_oper_w		:= null;
		nr_ident_pre_estab_w		:= null;

		dt_autorizacao_w 		:= c01_w.dt_atendimento_referencia;
		dt_solicitacao_w 		:= c01_w.dt_atendimento_referencia;
		dt_realizacao_w			:= c01_w.dt_atendimento_referencia;

					--Se tiver guia_prestador_ans informado, ento deve priorizar, pois foi alterado via boto direito.					

		if (c01_w.cd_guia_prestador_ans IS NOT NULL AND c01_w.cd_guia_prestador_ans::text <> '') then
			cd_guia_prestador_w 		:= c01_w.cd_guia_prestador;
					--Caso no tiver guia_prestador_ans informado, ento tem que verificar se veio do A500

		elsif (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'N') then
			cd_guia_prestador_w			:= c01_w.nr_guia_tiss_prestador;
		elsif (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'S' ) then
			
			if (c01_w.cd_guia_prestador_envio_old IS NOT NULL AND c01_w.cd_guia_prestador_envio_old::text <> '') then
				cd_guia_prestador_w			:= c01_w.cd_guia_prestador_envio_old;
			else
				cd_guia_prestador_w			:= c01_w.nr_guia_tiss_prestador;
			end if;
		else
			cd_guia_prestador_w 		:= c01_w.cd_guia_prestador;
		end if;

		if (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'N') then
			cd_guia_operadora_w		:= c01_w.nr_guia_tiss_operadora;
		elsif (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'S' ) then
			if (c01_w.cd_guia_operadora_envio_old IS NOT NULL AND c01_w.cd_guia_operadora_envio_old::text <> '') then
				cd_guia_operadora_w			:= c01_w.cd_guia_operadora_envio_old;
			else
				cd_guia_operadora_w		:= c01_w.nr_guia_tiss_operadora;
			end if;
		else
			cd_guia_operadora_w		:= c01_w.cd_guia;
		end if;

		if (c01_w.nr_seq_guia IS NOT NULL AND c01_w.nr_seq_guia::text <> '') then
			dt_autorizacao_w	:= c01_w.dt_autorizacao;
			dt_solicitacao_w	:= c01_w.dt_solicitacao;
		end if;

		-- Tratamento do A500

		if (c01_w.nr_seq_nota_cobranca IS NOT NULL AND c01_w.nr_seq_nota_cobranca::text <> '') and
			((coalesce(dt_autorizacao_w::text, '') = '') or (coalesce(dt_solicitacao_w::text, '') = '')) then
			select	max(dt_autoriz),
				max(dt_solicitacao)
			into STRICT	dt_autorizacao_w,
				dt_solicitacao_w
			from	ptu_nota_servico
			where	nr_seq_nota_cobr = c01_w.nr_seq_nota_cobranca;
		end if;

		if (c01_w.nr_seq_saida_int IS NOT NULL AND c01_w.nr_seq_saida_int::text <> '') and (c01_w.ie_tipo_guia in ('4','5')) then
			select	substr(cd_tiss,1,2)
			into STRICT	ie_motivo_encerramento_w
			from	pls_motivo_saida
			where	nr_sequencia	= c01_w.nr_seq_saida_int;
		end if;

		-- Carregar os dados do prestador da conta mdica

		dados_prestador_w 	:= pls_gerencia_envio_ans_pck.obter_dados_prestador( 	c01_w.nr_seq_prestador_exec, c01_w.nr_seq_prest_inter,
									c01_w.cd_pf_reembolso, c01_w.cd_cgc_reembolso );
									
		--OS1986439 -- solicitado para intercmbio priorizar a informao da conta(veja aqui na conta, depois nota cobrana e a vai para prestador intercmbio)

		--OS2039845-- A alterao de informaes da guia na aba envio/produo mdica/contas ter prioridade na busca do CNES, depois ser de acordo com o parmetro ie_cnes_prest_inter_w

		if (c01_w.cd_cnes_alterado IS NOT NULL AND c01_w.cd_cnes_alterado::text <> '') then		
			cd_cnes_w := substr( c01_w.cd_cnes_alterado, 0, 7);
		else		
			if ((c01_w.cd_cnes IS NOT NULL AND c01_w.cd_cnes::text <> '') and c01_w.ie_origem_protocolo = 'A' and current_setting('pls_gerencia_envio_ans_pck.ie_cnes_prest_inter_w')::pls_monitor_tiss_param.ie_cnes_prest_inter%type = 'N') then
				cd_cnes_w := substr(c01_w.cd_cnes, 0, 7);
			elsif ((c01_w.nr_seq_nota_cobranca IS NOT NULL AND c01_w.nr_seq_nota_cobranca::text <> '') and c01_w.ie_origem_protocolo = 'A' and current_setting('pls_gerencia_envio_ans_pck.ie_cnes_prest_inter_w')::pls_monitor_tiss_param.ie_cnes_prest_inter%type = 'N') then
				
				select	max(cd_cnes_cont_exec)
				into STRICT	cd_cnes_w
				from	ptu_nota_cobranca
				where	nr_sequencia	= c01_w.nr_seq_nota_cobranca;
			
			elsif (c01_w.ie_origem_protocolo = 'A' and current_setting('pls_gerencia_envio_ans_pck.ie_cnes_prest_inter_w')::pls_monitor_tiss_param.ie_cnes_prest_inter%type = 'S') then				
				cd_cnes_w := substr(coalesce(dados_prestador_w.cd_cnes, '9999999'), 0, 7);				
			end if;	
		
			if (coalesce(cd_cnes_w::text, '') = '') then
				cd_cnes_w		:= substr(coalesce(dados_prestador_w.cd_cnes, '9999999'), 0, 7);
			end if;		
		end if;	
		
		cd_cnes_w := substr( cd_cnes_w, 0, 7);
		ie_tipo_identif_w	:= dados_prestador_w.ie_tipo_identificador;
		cd_cpf_cgc_w		:= dados_prestador_w.cd_cpf_cgc;

		cd_municipio_ibge_w	:= '';

		if (length(dados_prestador_w.cd_municipio_ibge) = 7) and (c01_w.nr_seq_prest_inter IS NOT NULL AND c01_w.nr_seq_prest_inter::text <> '') then
			cd_municipio_ibge_w	:= dados_prestador_w.cd_municipio_ibge;
		else
			cd_municipio_ibge_w	:= dados_prestador_w.cd_municipio_ibge || calcula_digito('MODULO10',substr(dados_prestador_w.cd_municipio_ibge,1,10));
		end if;

		-- Parmetro que define se o cdigo da guia no prestador, dever receber o mesmo cdigo de guia na Operadora quando a guia do prestador estiver nula

		if ( current_setting('pls_gerencia_envio_ans_pck.ie_utiliza_guia_w')::pls_monitor_tiss_param.ie_utiliza_guia_operadora%type = 'S' and coalesce(cd_guia_prestador_w::text, '') = '' ) then
			cd_guia_prestador_w := cd_guia_operadora_w;
		end if;

		--Existem casos aonde a guia  digitada e no  informada, apenas a guia do prestador

		if (coalesce(cd_guia_operadora_w::text, '') = '') and (cd_guia_prestador_w IS NOT NULL AND cd_guia_prestador_w::text <> '') then
			cd_guia_operadora_w	:= cd_guia_prestador_w;
		end if;

		-- Tratamento para buscar a guia de internao em contas de locais e de A500

		if (coalesce(c01_w.nr_seq_nota_cobranca::text, '') = '') then
			if	((c01_w.ie_tipo_guia in ('5','6')) or (c01_w.ie_tipo_guia = '4') and (c01_w.ie_tipo_atendimento = '07') or (c01_w.ie_tipo_guia = '4') and (c01_w.ie_regime_atendimento = '03')) then

				if (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'N') then
					cd_guia_referencia_w		:= c01_w.nr_guia_tiss_principal;
				elsif (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'S' ) then
					
					if (c01_w.cd_guia_principal_envio_old IS NOT NULL AND c01_w.cd_guia_principal_envio_old::text <> '') then
						cd_guia_referencia_w			:= c01_w.cd_guia_principal_envio_old;
					else
						cd_guia_referencia_w		:= c01_w.nr_guia_tiss_principal;
					end if;
				else
					cd_guia_referencia_w	:= c01_w.cd_guia_referencia;
				end if;
			end if;
		else
			if (c01_w.ie_tipo_guia = '5') then

				if (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'N') then
					if (coalesce(c01_w.nr_guia_tiss_principal::text, '') = '') then
						cd_guia_referencia_w	:= cd_guia_operadora_w;
					else
						cd_guia_referencia_w	:= c01_w.nr_guia_tiss_principal;
					end if;
				elsif (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'S' ) then
					if (c01_w.cd_guia_principal_envio_old IS NOT NULL AND c01_w.cd_guia_principal_envio_old::text <> '') then
						cd_guia_referencia_w			:= c01_w.cd_guia_principal_envio_old;
					else
						if (coalesce(c01_w.nr_guia_tiss_principal::text, '') = '') then
							cd_guia_referencia_w	:= cd_guia_operadora_w;
						else
							cd_guia_referencia_w	:= c01_w.nr_guia_tiss_principal;
						end if;
					end if;
				else
					cd_guia_referencia_w	:= c01_w.cd_guia_referencia;
				end if;

			elsif	((c01_w.ie_tipo_guia = '6') or (c01_w.ie_tipo_guia = '4') and (c01_w.ie_tipo_atendimento = '07') or (c01_w.ie_tipo_guia = '4') and (c01_w.ie_regime_atendimento = '03')) then

				if (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'N') then
					cd_guia_referencia_w		:= c01_w.nr_guia_tiss_principal;
				elsif (c01_w.ie_origem_protocolo in ('A','Z') and c01_w.ie_conta_envio = 'S') then
					if (c01_w.cd_guia_principal_envio_old IS NOT NULL AND c01_w.cd_guia_principal_envio_old::text <> '') then
						cd_guia_referencia_w			:= c01_w.cd_guia_principal_envio_old;
					else
						cd_guia_referencia_w		:= c01_w.nr_guia_tiss_principal;
					end if;
				else
					cd_guia_referencia_w	:= c01_w.cd_guia_referencia;
				end if;

			end if;
		end if;



		dados_beneficiario_w 	:= pls_gerencia_envio_ans_pck.obter_dados_beneficiario( c01_w.cd_pessoa_fisica, c01_w.nr_seq_contrato );
		dt_nascimento_w		:= dados_beneficiario_w.dt_nascimento;
		ie_sexo_w		:= dados_beneficiario_w.ie_sexo;
		if (dados_beneficiario_w.cd_municipio_benef IS NOT NULL AND dados_beneficiario_w.cd_municipio_benef::text <> '') then
			cd_municipio_benef_w	:= dados_beneficiario_w.cd_municipio_benef || calcula_digito('MODULO10',substr(dados_beneficiario_w.cd_municipio_benef,1,10));
		elsif (c01_w.cd_pessoa_fisica_titular IS NOT NULL AND c01_w.cd_pessoa_fisica_titular::text <> '') then
			dados_beneficiario_w 	:= pls_gerencia_envio_ans_pck.obter_dados_beneficiario( c01_w.cd_pessoa_fisica_titular, c01_w.nr_seq_contrato );
			cd_municipio_benef_w	:= dados_beneficiario_w.cd_municipio_benef || calcula_digito('MODULO10',substr(dados_beneficiario_w.cd_municipio_benef,1,10));
		end if;

	
		-- Obter o cdigo CBO do executante, somente para guias de Consuta

		if (c01_w.ie_tipo_guia = '3' ) or
			(c01_w.ie_tipo_guia = '4' AND c01_w.ie_tipo_atendimento = '04') then
			-- Tratamento do A500

			if (c01_w.nr_seq_nota_cobranca IS NOT NULL AND c01_w.nr_seq_nota_cobranca::text <> '') then

				select	max(nr_cbo_exec)
				into STRICT	nr_cbo_req_w
				from	ptu_nota_servico
				where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca
				and	ie_tipo_tabela		= '0'
				and	nr_cbo_exec		!= '999999';

				if (coalesce(nr_cbo_req_w,0) = 0) then
					select	max(nr_cbo_exec)
					into STRICT	nr_cbo_req_w
					from	ptu_nota_servico
					where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca
					and	ie_tipo_tabela		= '0';

					if (coalesce(nr_cbo_req_w,0) = 0) then
						select	max(nr_cbo_exec)
						into STRICT	nr_cbo_req_w
						from	ptu_nota_servico
						where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca;

						if (coalesce(nr_cbo_req_w,0) = 0) then
							select	max(nr_cbo_req)
							into STRICT	nr_cbo_req_w
							from	ptu_nota_cobranca
							where	nr_sequencia	= c01_w.nr_seq_nota_cobranca;
						end if;
					end if;
				end if;

				if (coalesce(nr_cbo_req_w, 0) > 0) then
					if (nr_versao_ptu_w IS NOT NULL AND nr_versao_ptu_w::text <> '') then
						select	max(b.cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude_ptu	a,
							cbo_saude	b
						where	a.nr_seq_cbo_saude	= b.nr_sequencia
						and	a.cd_cbo_ptu		= to_char(nr_cbo_req_w)
						and	a.nr_versao_ptu		= nr_versao_ptu_w;
					end if;

					if (coalesce(cd_cbo_executante_w::text, '') = '') then
						select	max(cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude
						where	cd_cbo_ptu	= to_char(nr_cbo_req_w)
						and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
					end if;
				end if;

				--Seno achar o CBO no A500, busca o CBO pela especialidade

				if (coalesce(cd_cbo_executante_w::text, '') = '') then
					select	max(cd_especialidade)
					into STRICT	cd_especialidade_w
					from	ptu_nota_servico
					where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca;

					if (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then
						select	max(cd_especialidade)
						into STRICT	nr_seq_especialidade_w
						from	especialidade_medica
						where	cd_ptu	= cd_especialidade_w;

						if (nr_seq_especialidade_w IS NOT NULL AND nr_seq_especialidade_w::text <> '') then
							select 	max(nr_seq_cbo_saude)
							into STRICT	nr_seq_cbo_saude_w
							from	tiss_cbo_saude
							where	cd_especialidade	= nr_seq_especialidade_w
							and	ie_versao		= cd_versao_tiss_cbo_w;

							if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
								select	max(cd_cbo)
								into STRICT	cd_cbo_executante_w
								from	cbo_saude
								where	nr_sequencia	= nr_seq_cbo_saude_w;
							end if;
						end if;
					end if;
				end if;

				if	((coalesce(nr_seq_cbo_saude_w::text, '') = '') and (coalesce(cd_cbo_executante_w::text, '') = '' )) or (cd_cbo_executante_w = '999999') then
					select	max(nr_seq_cbo_saude)
					into STRICT	nr_seq_cbo_saude_w
					from	pls_prestador_intercambio
					where	nr_sequencia = c01_w.nr_seq_prest_inter;

					if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
						select	max(a.cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude a,
							cbo_saude_tiss b
						where	a.nr_sequencia = b.nr_seq_cbo_saude
						and	a.nr_sequencia = nr_seq_cbo_saude_w
						and	b.ie_versao = cd_versao_tiss_cbo_w;

						if (coalesce(cd_cbo_executante_w::text, '') = '') then
							select	max(a.cd_cbo)
							into STRICT	cd_cbo_executante_w
							from	cbo_saude a
							where	a.nr_sequencia = nr_seq_cbo_saude_w;
						end if;
					end if;
				end if;

			elsif (c01_w.nr_seq_cbo IS NOT NULL AND c01_w.nr_seq_cbo::text <> '') then
				select 	max(a.cd_cbo)
				into STRICT	cd_cbo_executante_w
				from	cbo_saude a,
					cbo_saude_tiss b
				where	b.nr_seq_cbo_saude 	= a.nr_sequencia
				and	a.nr_sequencia 		= c01_w.nr_seq_cbo
				and (coalesce(b.ie_versao::text, '') = '' or b.ie_versao = cd_versao_tiss_cbo_w);

			elsif (c01_w.ie_tipo_guia = '4') and (c01_w.ie_tipo_atendimento = '04') and (coalesce(c01_w.nr_seq_cbo::text, '') = '') then

				select	max(nr_seq_cbo_saude),
					max(cd_cbo_saude_imp)
				into STRICT	nr_seq_cbo_partic_w,
					cd_cbo_partic_imp_w
				from	pls_proc_participante a,
					pls_conta_proc b
				where	b.nr_sequencia = a.nr_seq_conta_proc
				and	b.nr_seq_conta = c01_w.nr_seq_conta;

				if (nr_seq_cbo_partic_w IS NOT NULL AND nr_seq_cbo_partic_w::text <> '') then
					select 	max(a.cd_cbo)
					into STRICT	cd_cbo_executante_w
					from	cbo_saude a,
						cbo_saude_tiss b
					where	b.nr_seq_cbo_saude 	= a.nr_sequencia
					and	a.nr_sequencia 		= nr_seq_cbo_partic_w
					and (coalesce(b.ie_versao::text, '') = '' or b.ie_versao = cd_versao_tiss_cbo_w);
				else
					cd_cbo_executante_w := cd_cbo_partic_imp_w;
				end if;
			end if;

			cd_cbo_executante_w := coalesce(cd_cbo_executante_w,c01_w.cd_cbo_saude_exec_imp);
		end if;

		-- Identificar a verso do TISS utilizada pelo prestador e se a origem da conta foi de papel

		if ( c01_w.ie_origem in ('1','2','3') ) then
			cd_versao_tiss_prest_w	:= coalesce(c01_w.cd_versao_tiss, cd_versao_tiss_cbo_w);

			--Definir o tipo de faturamento utilizado na conta mdica - Guias de Internao e Odontologica

			--1- Parcial,  2- Final,  3- Complementar, 4- Total, (T,P,F,C)(Total,Parcial,Final,Complementar)

			if ( c01_w.ie_tipo_guia in ('5', '11') ) then
				if ( c01_w.ie_tipo_faturamento = 'P' ) then
					ie_tipo_faturamento_w := '1';

				elsif ( c01_w.ie_tipo_faturamento = 'T' ) then
					ie_tipo_faturamento_w := '4';
				elsif ( c01_w.ie_tipo_faturamento = 'C' ) then
					ie_tipo_faturamento_w := '3';
				elsif ( c01_w.ie_tipo_faturamento = 'F' ) then
					ie_tipo_faturamento_w := '2';
				end if;
			end if;

		end if;

		if (coalesce(c01_w.nr_seq_nota_cobranca::text, '') = '') then
			select	max(nr_ver_tiss)
			into STRICT	cd_versao_tiss_prest_w
			from	ptu_nota_cobranca
			where	nr_sequencia	= c01_w.nr_seq_nota_cobranca;

			if (coalesce(cd_versao_tiss_prest_w::text, '') = '') then
				cd_versao_tiss_prest_w	:= coalesce(c01_w.cd_versao_tiss, cd_versao_tiss_cbo_w);
			end if;
		end if;

		if ( c01_w.ie_origem_protocolo = 'D' ) then
			ie_tipo_envio_w		:= 'S';
		end if;

		-- Somente deve ser informado o carater de atendimento caso o tipo de guia se SADT ou internao

		if (c01_w.ie_tipo_guia in ('4','5')) then
			if (c01_w.ie_carater_internacao IS NOT NULL AND c01_w.ie_carater_internacao::text <> '') then
				select	CASE WHEN c01_w.ie_carater_internacao='E' THEN '1' WHEN c01_w.ie_carater_internacao='U' THEN '2'  ELSE null END
				into STRICT	ie_carater_atendimento_w
				;
			end if;
		end if;

		-- Somente deve ser informado o tipo de consulta se for SADT ou Consulta

		if (c01_w.ie_tipo_consulta IS NOT NULL AND c01_w.ie_tipo_consulta::text <> '') and (c01_w.ie_tipo_guia in ('3','4')) then
			ie_tipo_consulta_w := c01_w.ie_tipo_consulta;
		end if;

		/*	Definir a data de Incio de Faturamento 'Internao' e data Final de faturamento 'Sada internao'
			Data de incio somente deve ser enviada quantdo tipo faturamento for parcial e/ou total. Data fim faturamento sempre
			deve ser enviada quando guia de resumo de internao
		*/

		if (  c01_w.ie_tipo_guia = '5' and ie_tipo_faturamento_w in ('1','4')) then
			dt_inicio_fat_w		:= c01_w.dt_inicio_faturamento;
			dt_fim_fat_w		:= c01_w.dt_fim_faturamento;
			dt_realizacao_w		:= c01_w.dt_inicio_faturamento;

		--Caso tipo de faturamento no for 1 ou 4, ento no carrega a dt_inicio_fat, mas dt_fim_faturamento deve ser carregada

		elsif (c01_w.ie_tipo_guia = '5') then

			dt_fim_fat_w		:= c01_w.dt_fim_faturamento;
			dt_realizacao_w		:= c01_w.dt_inicio_faturamento;
		end if;

		if (coalesce(dt_realizacao_w::text, '') = '') then
			dt_realizacao_w := pls_obter_dt_atendimento(c01_w.nr_seq_conta, c01_w.ie_tipo_guia, c01_w.dt_fim_faturamento, c01_w.dt_emissao);
		end if;

		cd_cbo_executante_w		:= substr(replace(cd_cbo_executante_w,'.',''),1,6);

		if (c01_w.nr_seq_congenere IS NOT NULL AND c01_w.nr_seq_congenere::text <> '') then
			select	cd_ans
			into STRICT	nr_registro_ans_inter_w
			from	pls_congenere
			where	nr_sequencia = c01_w.nr_seq_congenere;
		end if;

		-- Se tiver nmero da operadora,  conta de intercmbio

		if (nr_registro_ans_inter_w IS NOT NULL AND nr_registro_ans_inter_w::text <> '') then
			-- Inicialmente marca o tipo de atendimento para 1

			ie_tipo_atend_oper_w := '1';

			-- Busca um registro pr-estabelecido enviado por essa operadora para essa competncia

			select	max(nr_identificador)
			into STRICT	nr_ident_pre_estab_w
			from	pls_monit_tiss_pre_est_val a,
				pls_monitor_tiss_lote b
			where	b.nr_sequencia = a.nr_seq_lote_monitor
			and	a.nr_registro_operadora_inter = nr_registro_ans_inter_w
			and	c01_w.dt_atendimento_referencia between trunc(b.dt_mes_competencia,'month') and fim_mes(b.dt_mes_competencia)
			and	b.ie_status = 'LG';
		
			-- Caso encontre automaticamente o tipo de atendimento deve ser 2


			select	max(nr_sequencia),
				max(ie_tipo_repasse)
			into STRICT	nr_seq_repasse_w,
				ie_tipo_repasse_w
			from	pls_segurado_repasse
			where	nr_seq_segurado		= c01_w.nr_seq_segurado
			and	nr_seq_congenere 	= c01_w.nr_seq_congenere
			and	dt_repasse		<= c01_w.dt_atendimento_referencia
			and	(( dt_fim_repasse  	>= c01_w.dt_atendimento_referencia) or ( coalesce(dt_fim_repasse::text, '') = ''));
			--necessrio realizar o tratamento para caso seja beneficirio de repasse em custo ps, seja linto o identificador de pre.

	
			if (	ie_tipo_repasse_w = 'C'	) or (	coalesce(ie_tipo_repasse_w::text, '') = ''	) then
				nr_ident_pre_estab_w := null;
			end if;

			if (nr_seq_repasse_w IS NOT NULL AND nr_seq_repasse_w::text <> '') or (nr_ident_pre_estab_w IS NOT NULL AND nr_ident_pre_estab_w::text <> '') then
				ie_tipo_atend_oper_w := '2';
			end if;
		end if;

		--Se at aqui o cbo executor obtido for nulo e o parmetro do monitoramento apontar para buscar do prestador executor PF da conta

		if ( coalesce(cd_cbo_executante_w::text, '') = '' and current_setting('pls_gerencia_envio_ans_pck.ie_cbo_prest_executor_w')::pls_monitor_tiss_param.ie_cbo_prest_executor%type = 'S') then

			select 	max(a.cd_cbo)
			into STRICT	cd_cbo_executante_w
			from	cbo_saude a
			where	a.nr_sequencia 	= c01_w.nr_seq_cbo_saude_prest_pf;

			nr_seq_cbo_w := c01_w.nr_seq_cbo_saude_prest_pf;
			
			
			if (c01_w.nr_seq_nota_cobranca IS NOT NULL AND c01_w.nr_seq_nota_cobranca::text <> '') and (coalesce(cd_cbo_executante_w::text, '') = '') then

				select	max(nr_cbo_exec)
				into STRICT	nr_cbo_req_w
				from	ptu_nota_servico
				where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca
				and	ie_tipo_tabela		= '0'
				and	nr_cbo_exec		!= '999999';

				if (coalesce(nr_cbo_req_w,0) = 0) then
					select	max(nr_cbo_exec)
					into STRICT	nr_cbo_req_w
					from	ptu_nota_servico
					where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca
					and	ie_tipo_tabela		= '0';

					if (coalesce(nr_cbo_req_w,0) = 0) then
						select	max(nr_cbo_exec)
						into STRICT	nr_cbo_req_w
						from	ptu_nota_servico
						where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca;

						if (coalesce(nr_cbo_req_w,0) = 0) then
							select	max(nr_cbo_req)
							into STRICT	nr_cbo_req_w
							from	ptu_nota_cobranca
							where	nr_sequencia	= c01_w.nr_seq_nota_cobranca;
						end if;
					end if;
				end if;

				if (coalesce(nr_cbo_req_w, 0) > 0) then
					if (nr_versao_ptu_w IS NOT NULL AND nr_versao_ptu_w::text <> '') then
						select	max(b.cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude_ptu	a,
							cbo_saude	b
						where	a.nr_seq_cbo_saude	= b.nr_sequencia
						and	a.cd_cbo_ptu		= to_char(nr_cbo_req_w)
						and	a.nr_versao_ptu		= nr_versao_ptu_w;
					end if;

					if (coalesce(cd_cbo_executante_w::text, '') = '') then
						select	max(cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude
						where	cd_cbo_ptu	= to_char(nr_cbo_req_w)
						and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
					end if;
				end if;

				--Seno achar o CBO no A500, busca o CBO pela especialidade

				if (coalesce(cd_cbo_executante_w::text, '') = '') then
					select	max(cd_especialidade)
					into STRICT	cd_especialidade_w
					from	ptu_nota_servico
					where	nr_seq_nota_cobr	= c01_w.nr_seq_nota_cobranca;

					if (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then
						select	max(cd_especialidade)
						into STRICT	nr_seq_especialidade_w
						from	especialidade_medica
						where	cd_ptu	= cd_especialidade_w;

						if (nr_seq_especialidade_w IS NOT NULL AND nr_seq_especialidade_w::text <> '') then
							select 	max(nr_seq_cbo_saude)
							into STRICT	nr_seq_cbo_saude_w
							from	tiss_cbo_saude
							where	cd_especialidade	= nr_seq_especialidade_w
							and	ie_versao		= cd_versao_tiss_cbo_w;

							if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
								select	max(cd_cbo)
								into STRICT	cd_cbo_executante_w
								from	cbo_saude
								where	nr_sequencia	= nr_seq_cbo_saude_w;
							end if;
						end if;
					end if;
				end if;

				if	((coalesce(nr_seq_cbo_saude_w::text, '') = '') and (coalesce(cd_cbo_executante_w::text, '') = '' )) or (cd_cbo_executante_w = '999999') then
					select	max(nr_seq_cbo_saude)
					into STRICT	nr_seq_cbo_saude_w
					from	pls_prestador_intercambio
					where	nr_sequencia = c01_w.nr_seq_prest_inter;

					if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
						select	max(a.cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude a,
							cbo_saude_tiss b
						where	a.nr_sequencia = b.nr_seq_cbo_saude
						and	a.nr_sequencia = nr_seq_cbo_saude_w
						and	b.ie_versao = cd_versao_tiss_cbo_w;

						if (coalesce(cd_cbo_executante_w::text, '') = '') then
							select	max(a.cd_cbo)
							into STRICT	cd_cbo_executante_w
							from	cbo_saude a
							where	a.nr_sequencia = nr_seq_cbo_saude_w;
						end if;
					end if;
				end if;
		elsif	((c01_w.nr_seq_cbo IS NOT NULL AND c01_w.nr_seq_cbo::text <> '') and (coalesce(cd_cbo_executante_w::text, '') = '')) then
			select 	max(a.cd_cbo)
			into STRICT	cd_cbo_executante_w
			from	cbo_saude a,
				cbo_saude_tiss b
			where	b.nr_seq_cbo_saude 	= a.nr_sequencia
			and	a.nr_sequencia 		= c01_w.nr_seq_cbo
			and (coalesce(b.ie_versao::text, '') = '' or b.ie_versao = cd_versao_tiss_cbo_w);
		end if;
			
		if (c01_w.ie_conta_envio = 'N') then
			cd_cbo_executante_w		:= cd_cbo_executante_w;
		elsif (c01_w.ie_conta_envio = 'S' and (c01_w.cd_cbo_executante_envio_old IS NOT NULL AND c01_w.cd_cbo_executante_envio_old::text <> '')) then
			cd_cbo_executante_w		:= c01_w.cd_cbo_executante_envio_old;
		end if;

		end if;

		dt_solicitacao_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_date(c01_w.nr_seq_conta, 'DS', dt_solicitacao_w);
		dt_autorizacao_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_date(c01_w.nr_seq_conta, 'DA', dt_autorizacao_w);
		dt_inicio_fat_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_date(c01_w.nr_seq_conta, 'DIF', dt_inicio_fat_w);
		dt_fim_fat_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_date(c01_w.nr_seq_conta, 'DFF', dt_fim_fat_w);

		ie_tipo_consulta_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(c01_w.nr_seq_conta, 'TC', ie_tipo_consulta_w);
		ie_carater_atendimento_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(c01_w.nr_seq_conta, 'CA', ie_carater_atendimento_w);
		ie_tipo_faturamento_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(c01_w.nr_seq_conta, 'TF', ie_tipo_faturamento_w);
		ie_motivo_encerramento_w := pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(c01_w.nr_seq_conta, 'ME', ie_motivo_encerramento_w);
		
		if ( coalesce(c01_w.ie_regime_internacao::text, '') = '' and c01_w.ie_tipo_guia = '5') then
		
			--Utiliei aqui o nr_seq_guia pois em importao do A500 o cd_guia_ok de guias que referenciam uma principal, estavam com zeros a esquerda, 

			select 	max(ie_regime_internacao)
			into STRICT	ie_regime_internacao_w
			from 	pls_conta 
			where	nr_seq_guia = c01_w.nr_seq_guia 
			and 	coalesce(cd_guia_referencia::text, '') = '' 
			and 	ie_tipo_faturamento in ('T','F');
		
		else
		
			ie_regime_internacao_w := c01_w.ie_regime_internacao;
		
		end if;
			

		-- Armazena o valor que cada um dos campos da PLS_MONITOR_TISS_CTA_VAL receber

		dados_conta_update_w.nr_sequencia(j)			:= c01_w.nr_seq_cta_alt;
		dados_conta_update_w.cd_cbo_executante(j)		:= cd_cbo_executante_w;
		dados_conta_update_w.cd_cnes_prest_exec(j)		:= substr(cd_cnes_w, 0, 7);
		dados_conta_update_w.cd_cpf_cgc_prest_exec(j)		:= cd_cpf_cgc_w;
		dados_conta_update_w.cd_guia_operadora(j)		:= cd_guia_operadora_w;
		dados_conta_update_w.cd_guia_prestador(j)		:= cd_guia_prestador_w;
		dados_conta_update_w.cd_municipio_benef(j)		:= cd_municipio_benef_w;
		dados_conta_update_w.cd_municipio_prest_exec(j)		:= cd_municipio_ibge_w;
		dados_conta_update_w.dt_autorizacao(j)			:= dt_autorizacao_w;
		dados_conta_update_w.dt_fim_internacao(j)		:= dt_fim_fat_w;
		dados_conta_update_w.dt_inicio_faturamento(j)		:= dt_inicio_fat_w;
		dados_conta_update_w.dt_nascimento(j)			:= dt_nascimento_w;
		dados_conta_update_w.cd_guia_principal(j)		:= cd_guia_referencia_w;
		dados_conta_update_w.dt_protocolo(j)			:= c01_w.dt_protocolo;
		dados_conta_update_w.dt_solicitacao(j)			:= dt_solicitacao_w;
		dados_conta_update_w.ie_carater_atendimento(j)		:= ie_carater_atendimento_w;
		dados_conta_update_w.ie_identif_prest_exec(j)		:= ie_tipo_identif_w;
		dados_conta_update_w.ie_indicacao_acidente(j)		:= c01_w.ie_indicacao_acidente;
		dados_conta_update_w.ie_origem_evento(j)		:= c01_w.ie_origem;
		dados_conta_update_w.ie_recem_nasc(j)			:= c01_w.ie_recem_nato;
		dados_conta_update_w.ie_reembolso(j)			:= c01_w.nr_reembolso;
		dados_conta_update_w.ie_regime_internacao(j)		:= ie_regime_internacao_w;
		dados_conta_update_w.ie_sexo(j)				:= ie_sexo_w;
		dados_conta_update_w.ie_tipo_consulta(j)		:= ie_tipo_consulta_w;
		dados_conta_update_w.ie_tipo_faturamento(j)		:= ie_tipo_faturamento_w;
		dados_conta_update_w.nr_seq_segurado(j)			:= c01_w.nr_seq_segurado;
		dados_conta_update_w.nr_seq_tipo_atendimento(j)		:= c01_w.nr_seq_tipo_atendimento;
		dados_conta_update_w.nr_cartao_nac_sus(j)		:= c01_w.cd_cns;
		dados_conta_update_w.nr_protocolo_ans(j)		:= coalesce(trim(both c01_w.cd_registro_ans),c01_w.cd_scpa_contrato);
		dados_conta_update_w.nr_seq_cbo_saude(j)		:= coalesce(c01_w.nr_seq_cbo, nr_seq_cbo_w);
		dados_conta_update_w.nr_seq_clinica(j)			:= c01_w.nr_seq_clinica;
		dados_conta_update_w.nr_seq_prestador(j)		:= c01_w.nr_seq_prestador_exec;
		dados_conta_update_w.vl_cobranca_guia(j)		:= c01_w.vl_guia;
		dados_conta_update_w.vl_total_diaria(j)			:= c01_w.vl_diarias;
		dados_conta_update_w.vl_total_glosa(j)			:= c01_w.vl_glosa;
		dados_conta_update_w.vl_total_material(j)		:= c01_w.vl_materiais;
		dados_conta_update_w.vl_total_medicamentos(j)		:= c01_w.vl_medicamentos;
		dados_conta_update_w.vl_total_opm(j)			:= c01_w.vl_opm;
		dados_conta_update_w.vl_total_procedimento(j)		:= c01_w.vl_procedimentos;
		dados_conta_update_w.vl_total_taxa(j)			:= c01_w.vl_taxas;
		dados_conta_update_w.dt_pagamento_previsto(j)		:= dt_pagamento_previsto_w;
		dados_conta_update_w.dt_pagamento_recurso(j)		:= dt_pagamento_recurso_w;
		dados_conta_update_w.dt_conta_fechada_recurso(j)	:= dt_conta_fechada_recurso_w;
		dados_conta_update_w.dt_conta_fechada(j)		:= dt_conta_fechada_w;
		dados_conta_update_w.dt_cancelamento_conta(j)		:= dt_cancelamento_conta_w;
		dados_conta_update_w.cd_versao_tiss(j)			:= cd_versao_tiss_prest_w;
		dados_conta_update_w.ie_tipo_envio(j)			:= ie_tipo_envio_w;
		dados_conta_update_w.ie_tipo_guia(j)			:= c01_w.ie_tipo_guia;
		dados_conta_update_w.dt_realizacao(j)			:= dt_realizacao_w;
		dados_conta_update_w.ie_motivo_encerramento(j)		:= ie_motivo_encerramento_w;
		dados_conta_update_w.ie_tipo_atendimento(j)		:= c01_w.ie_tipo_atendimento;
		dados_conta_update_w.ie_tipo_internacao(j)		:= c01_w.ie_tipo_internacao;
		dados_conta_update_w.cd_guia_sadt_princ(j)		:= c01_w.cd_guia_sadt_princ;
		dados_conta_update_w.nr_registro_operadora_inter(j)	:= nr_registro_ans_inter_w;
		dados_conta_update_w.nr_seq_prest_inter(j)		:= c01_w.nr_seq_prest_inter;
		dados_conta_update_w.ie_tipo_atend_oper(j)		:= ie_tipo_atend_oper_w;
		dados_conta_update_w.nr_ident_pre_estab(j)		:= nr_ident_pre_estab_w;
		dados_conta_update_w.ie_fornec_direto(j)		:= c01_w.ie_fornec_direto;
		dados_conta_update_w.cd_cpf_segurado(j)			:= c01_w.cd_cpf_segurado;
		dados_conta_update_w.ie_regime_atendimento(j)	:= c01_w.ie_regime_atendimento;
		dados_conta_update_w.ie_saude_ocupacional(j)	:= c01_w.ie_saude_ocupacional;
		dados_conta_update_w.ie_cobertura_especial(j)		:= c01_w.ie_cobertura_especial;
		dados_conta_update_w.cd_modelo_remuneracao(j)	:= c01_w.cd_modelo_remuneracao;
	
		if (j >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then

			CALL pls_gerencia_envio_ans_pck.atualizar_monitor_tiss_conta( dados_conta_update_w, nr_seq_lote_p, nm_usuario_p);

			-- Limpa as variveis do type DADOS_MONITOR_CONTA_UPDATE

			dados_conta_update_w := pls_gerencia_envio_ans_pck.limpar_type_dados_conta_update(dados_conta_update_w);

			j := 0;
		else
			j := j + 1;
		end if;
	end if;

end loop;

-- se sobraram registros envia para o banco e limpa as variveis posteriormente

CALL pls_gerencia_envio_ans_pck.atualizar_monitor_tiss_conta( dados_conta_update_w, nr_seq_lote_p, nm_usuario_p);
dados_conta_update_w := pls_gerencia_envio_ans_pck.limpar_type_dados_conta_update(dados_conta_update_w);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.popula_dados_adic_conta_lote ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, dt_ini_pc timestamp, dt_fim_pc timestamp, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
