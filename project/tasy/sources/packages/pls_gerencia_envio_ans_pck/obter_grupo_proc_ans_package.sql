-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--procedure  utilizada para retornar o cdigo do Grupo de Procedimento conforme definido pela ANS



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.obter_grupo_proc_ans ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proc_p procedimento.ie_origem_proced%type, ie_tipo_despesa_proc_p procedimento.ie_classificacao%type, nr_seq_material_p pls_material.nr_sequencia%type, ie_tipo_despesa_p pls_material.ie_tipo_despesa%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_pacote_p text, cd_grupo_proc_p INOUT pls_monitor_tiss_proc_val.cd_grupo_proc%type, nr_seq_regra_gpo_proc_p INOUT pls_monitor_tiss_reg_gpo.nr_sequencia%type, ie_origem_grupo_proc_p INOUT pls_monitor_tiss_proc_val.ie_origem_grupo_proc%type) AS $body$
DECLARE


cd_grupo_proc_ans_w		pls_monitor_tiss_gpo_proc.cd_grupo_proc%type;
ie_tipo_despesa_w		procedimento.ie_classificacao%type;
nr_seq_regra_gpo_proc_w		pls_monitor_tiss_reg_gpo.nr_sequencia%type;


BEGIN

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then

	if (ie_pacote_p = 'S') then
		ie_tipo_despesa_w := pls_gerencia_envio_ans_pck.obter_desp_proc_pacote(cd_procedimento_p, ie_origem_proc_p, null);
	else
		ie_tipo_despesa_w := ie_tipo_despesa_proc_p;
	end if;

	if (current_setting('pls_gerencia_envio_ans_pck.ie_controla_estab_w')::pls_controle_estab.ie_monitoramento_ans%type = 'S') then
		begin
			with query_tmp as (
				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_proc_ans_v a
				where 	a.cd_procedimento = cd_procedimento_p
				and 	a.ie_origem_proced = ie_origem_proc_p
				and	a.cd_estabelecimento = cd_estabelecimento_p
				and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				
union all

				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_proc_ans_v a
				where	a.ie_tipo_despesa_proc	= ie_tipo_despesa_w
				and	a.cd_estabelecimento 	= cd_estabelecimento_p
				and	(a.ie_tipo_despesa_proc IS NOT NULL AND a.ie_tipo_despesa_proc::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				order 	by nr_prioridade desc
			)

			select	cd_grupo_ans,
				nr_seq_regra_princ
			into STRICT	cd_grupo_proc_ans_w,
				nr_seq_regra_gpo_proc_w
			from	query_tmp LIMIT 1;
		exception
		when others then
			cd_grupo_proc_ans_w := '';
			nr_seq_regra_gpo_proc_w := '';
		end;

	else
		begin
			with query_tmp as (
				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_proc_ans_v a
				where 	a.cd_procedimento = cd_procedimento_p
				and 	a.ie_origem_proced = ie_origem_proc_p
				and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				
union all

				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_proc_ans_v a
				where	a.ie_tipo_despesa_proc	= ie_tipo_despesa_w
				and	(a.ie_tipo_despesa_proc IS NOT NULL AND a.ie_tipo_despesa_proc::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				order 	by nr_prioridade desc
			)

			select	cd_grupo_ans,
				nr_seq_regra_princ
			into STRICT	cd_grupo_proc_ans_w,
				nr_seq_regra_gpo_proc_w
			from	query_tmp LIMIT 1;
		exception
		when others then
			cd_grupo_proc_ans_w := '';
			nr_seq_regra_gpo_proc_w := '';
		end;
	end if;

elsif (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then

	if (ie_pacote_p = 'S') then
		ie_tipo_despesa_w := pls_gerencia_envio_ans_pck.obter_desp_proc_pacote(null, null, nr_seq_material_p);
	else
		ie_tipo_despesa_w := ie_tipo_despesa_p;
	end if;

	if (current_setting('pls_gerencia_envio_ans_pck.ie_controla_estab_w')::pls_controle_estab.ie_monitoramento_ans%type = 'S') then
		begin
			with query_tmp as (
				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_mat_ans_v a
				where 	a.nr_seq_material = nr_seq_material_p
				and	a.cd_estabelecimento = cd_estabelecimento_p
				and	(nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				
union all

				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_mat_ans_v a
				where 	a.ie_tipo_despesa_mat = ie_tipo_despesa_w
				and	a.cd_estabelecimento = cd_estabelecimento_p
				and	(a.ie_tipo_despesa_mat IS NOT NULL AND a.ie_tipo_despesa_mat::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				order 	by nr_prioridade desc
			)

			select	cd_grupo_ans,
				nr_seq_regra_princ
			into STRICT	cd_grupo_proc_ans_w,
				nr_seq_regra_gpo_proc_w
			from	query_tmp LIMIT 1;
		exception
		when others then
			cd_grupo_proc_ans_w := '';
			nr_seq_regra_gpo_proc_w := '';
		end;
	else
		begin
			with query_tmp as (
				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_mat_ans_v a
				where 	a.nr_seq_material = nr_seq_material_p
				and	(nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				
union all

				select 	a.cd_grupo_ans,
					a.nr_prioridade,
					a.nr_seq_regra_princ
				from 	pls_grupo_mat_ans_v a
				where 	a.ie_tipo_despesa_mat = ie_tipo_despesa_w
				and	(a.ie_tipo_despesa_mat IS NOT NULL AND a.ie_tipo_despesa_mat::text <> '')
				and	exists (select	1
						from	pls_monit_grupo_ans_tiss b
						where	b.nr_seq_regra_grupo_ans = a.nr_seq_regra
						and	b.ie_versao_tiss = current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type)
				order 	by nr_prioridade desc
			)

			select	cd_grupo_ans,
				nr_seq_regra_princ
			into STRICT	cd_grupo_proc_ans_w,
				nr_seq_regra_gpo_proc_w
			from	query_tmp LIMIT 1;
		exception
		when others then
			cd_grupo_proc_ans_w := '';
			nr_seq_regra_gpo_proc_w := '';
		end;
	end if;

	if (coalesce(cd_grupo_proc_ans_w::text, '') = '') then
		select	max(cd_grupo_proc)
		into STRICT	cd_grupo_proc_ans_w
		from	pls_material
		where	nr_sequencia = nr_seq_material_p;
	end if;
end if;

cd_grupo_proc_p := cd_grupo_proc_ans_w;
nr_seq_regra_gpo_proc_p := nr_seq_regra_gpo_proc_w;

if (coalesce(nr_seq_regra_gpo_proc_w::text, '') = '') and (cd_grupo_proc_ans_w IS NOT NULL AND cd_grupo_proc_ans_w::text <> '') then
	ie_origem_grupo_proc_p := 'C';
else
	ie_origem_grupo_proc_p := 'R';
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.obter_grupo_proc_ans ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proc_p procedimento.ie_origem_proced%type, ie_tipo_despesa_proc_p procedimento.ie_classificacao%type, nr_seq_material_p pls_material.nr_sequencia%type, ie_tipo_despesa_p pls_material.ie_tipo_despesa%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_pacote_p text, cd_grupo_proc_p INOUT pls_monitor_tiss_proc_val.cd_grupo_proc%type, nr_seq_regra_gpo_proc_p INOUT pls_monitor_tiss_reg_gpo.nr_sequencia%type, ie_origem_grupo_proc_p INOUT pls_monitor_tiss_proc_val.ie_origem_grupo_proc%type) FROM PUBLIC;
