-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Busca as contas que sero reenviadas conforme filtro, esta rotina  utilizada para os lotes de excluso e alterao, devido a estrutura ser a mesma no existe a necessidade de criar duas rotinas especficas



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.gerar_contas_exclusao ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_cta_alt_w	pls_util_cta_pck.t_number_table;
tb_ds_observacao_n_w	pls_util_cta_pck.t_varchar2_table_100;
tb_nr_sequencia_n_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_n_w	pls_util_cta_pck.t_number_table;
tb_dt_competencia_n_w	pls_util_cta_pck.t_date_table;
tb_cd_guia_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_operadora_w	pls_util_cta_pck.t_varchar2_table_20;

nr_seq_guia_monitor_w	pls_monitor_tiss_guia.nr_sequencia%type;
nr_seq_conta_w		pls_conta.nr_sequencia%type;
nr_seq_cta_alt_w	pls_monitor_tiss_alt.nr_sequencia%type;
dt_mes_competencia_w	pls_monitor_tiss_lote.dt_mes_competencia%type;
ie_fornec_direto_w	pls_protocolo_conta.ie_fornec_direto%type;

cursor_w		sql_pck.t_cursor;
valor_bind_w		sql_pck.t_dado_bind;
ds_sql_w		varchar(32000);
ds_restricao_w		varchar(32000);
qt_registro_w		integer;
i			integer := 0;
j			integer := 0;
ie_fornec_lote_w	pls_monitor_tiss_lote.ie_fornec_direto%type;

C01 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		(SELECT	max(cd_guia_operadora)
		 from	pls_monitor_tiss_guia x
		 where	x.nr_sequencia = a.nr_seq_guia_monitor) cd_guia,
		(select	max(cd_guia_prestador)
		 from	pls_monitor_tiss_guia x
		 where	x.nr_sequencia = a.nr_seq_guia_monitor) cd_guia_prestador
	from	pls_monit_cta_nao_sel_exc a
	where	a.nr_seq_lote_monitor = nr_seq_lote_pc;


BEGIN
ds_restricao_w := pls_gerencia_envio_ans_pck.obter_restricao_lote_exclusao(nr_seq_lote_p);

if (coalesce(ds_restricao_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(671326);
end if;

select coalesce(max(ie_fornec_direto),'N')
into STRICT	ie_fornec_lote_w
from	pls_monitor_tiss_lote
where 	nr_sequencia = nr_seq_lote_p;

ds_sql_w := 	'	select	max(a.nr_sequencia) nr_seq_guia_monitor, 									' || pls_util_pck.enter_w ||
		'		a.nr_seq_conta,										' || pls_util_pck.enter_w ||
		'		(select	nvl(max(ie_fornec_direto),''N'') 						' || pls_util_pck.enter_w ||
		'		 from	pls_conta x, pls_protocolo_conta y						' || pls_util_pck.enter_w ||
		'		 where	x.nr_sequencia = a.nr_seq_conta							' || pls_util_pck.enter_w ||
		'		 and	x.nr_seq_Protocolo = y.nr_sequencia) ie_fornec_direto,						' || pls_util_pck.enter_w ||
		'		(select	max(nr_sequencia)								' || pls_util_pck.enter_w ||
		'		 from	pls_monitor_tiss_alt x								' || pls_util_pck.enter_w ||
		'		 where	x.nr_seq_conta = a.nr_seq_conta							' || pls_util_pck.enter_w ||
		'		 and	x.dt_evento between :dt_inicio_vigencia and :dt_fim_vigencia) nr_seq_cta_alt,	' || pls_util_pck.enter_w ||
		'		b.dt_mes_competencia									' || pls_util_pck.enter_w ||
		'	from	pls_monitor_tiss_guia a,								' || pls_util_pck.enter_w ||
		'		pls_monitor_tiss_lote b									' || pls_util_pck.enter_w ||
		'	where	b.nr_sequencia = a.nr_seq_lote_monitor							' || pls_util_pck.enter_w ||
		'	and	b.ie_tipo_lote = ''0''									' || pls_util_pck.enter_w ||
		ds_restricao_w || pls_util_pck.enter_w ||
		'	group by a.nr_seq_conta, b.dt_mes_competencia'|| pls_util_pck.enter_w ||
		'	union all '|| pls_util_pck.enter_w ||
		'	select	max(a.nr_sequencia) nr_seq_guia_monitor, 									' || pls_util_pck.enter_w ||
		'		a.nr_seq_conta,										' || pls_util_pck.enter_w ||
		'		(select	nvl(max(ie_fornec_direto),''N'') 						' || pls_util_pck.enter_w ||
		'		 from	pls_conta x, pls_protocolo_conta y						' || pls_util_pck.enter_w ||
		'		 where	x.nr_sequencia = a.nr_seq_conta							' || pls_util_pck.enter_w ||
		'		 and	x.nr_seq_Protocolo = y.nr_sequencia) ie_fornec_direto,						' || pls_util_pck.enter_w ||
		'		(select	max(nr_sequencia)								' || pls_util_pck.enter_w ||
		'		 from	pls_monitor_tiss_alt x								' || pls_util_pck.enter_w ||
		'		 where	x.nr_seq_conta = a.nr_seq_conta							' || pls_util_pck.enter_w ||
		'		 and	x.dt_evento between :dt_inicio_vigencia and :dt_fim_vigencia) nr_seq_cta_alt,	' || pls_util_pck.enter_w ||
		'		b.dt_mes_competencia									' || pls_util_pck.enter_w ||
		'	from	pls_monitor_tiss_guia a,								' || pls_util_pck.enter_w ||
		'		pls_monitor_tiss_lote b									' || pls_util_pck.enter_w ||
		'	where	b.nr_sequencia = a.nr_seq_lote_monitor							' || pls_util_pck.enter_w ||
		'	and	b.ie_tipo_lote is null									' || pls_util_pck.enter_w ||
		ds_restricao_w || pls_util_pck.enter_w ||
		'	group by a.nr_seq_conta, b.dt_mes_competencia';

valor_bind_w := sql_pck.bind_variable(	':dt_inicio_vigencia', current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_ini_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(	':dt_fim_vigencia', current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_fim_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, valor_bind_w, 'DATAHORA');

valor_bind_w := sql_pck.executa_sql_cursor(	ds_sql_w, valor_bind_w);

loop
	
	fetch cursor_w into
		nr_seq_guia_monitor_w,
		nr_seq_conta_w,
		ie_fornec_direto_w,
		nr_seq_cta_alt_w,
		dt_mes_competencia_w;
	EXIT WHEN NOT FOUND; /* apply on cursor_w */

	if ((ie_fornec_lote_w = 'S' AND ie_fornec_direto_w = 'S') or (ie_fornec_lote_w = 'N' AND ie_fornec_direto_w = 'N')) then
	
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_mon_tiss_guia_ret_act x
		where	x.nr_seq_guia_monitor = nr_seq_guia_monitor_w;

		if (qt_registro_w = 0) then

			tb_ds_observacao_n_w(j) := wheb_mensagem_pck.get_texto(854762);
			tb_nr_sequencia_n_w(j) := nr_seq_guia_monitor_w;
			tb_nr_seq_conta_n_w(j) := nr_seq_conta_w;
			tb_dt_competencia_n_w(j) := dt_mes_competencia_w;
			j := j + 1;

		elsif	not(dt_mes_competencia_w between current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_ini_w')::pls_monitor_tiss_lote.dt_mes_competencia%type and current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_fim_w')::pls_monitor_tiss_lote.dt_mes_competencia%type) then

			tb_ds_observacao_n_w(j) := wheb_mensagem_pck.get_texto(854761);
			tb_nr_sequencia_n_w(j) := nr_seq_guia_monitor_w;
			tb_nr_seq_conta_n_w(j) := nr_seq_conta_w;
			tb_dt_competencia_n_w(j) := dt_mes_competencia_w;
			j := j + 1;
		else
			tb_nr_sequencia_w(i) := nr_seq_guia_monitor_w;
			tb_nr_seq_conta_w(i) := nr_seq_conta_w;
			tb_nr_seq_cta_alt_w(i) := nr_seq_cta_alt_w;
			i := i + 1;
		end if;

		if (tb_nr_sequencia_w.count >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then
			forall x in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert 	into 	pls_monitor_tiss_cta_val(	nr_sequencia, nr_seq_conta, ie_tipo_evento,
						nr_seq_lote_monitor, ie_conta_atualizada, nr_seq_monitor_guia,
						nm_usuario_nrec, dt_atualizacao_nrec, nm_usuario,
						dt_atualizacao, nr_seq_cta_alt)
				values (	nextval('pls_monitor_tiss_cta_val_seq'), tb_nr_seq_conta_w(x), 'E',
						nr_seq_lote_p, 'S', tb_nr_sequencia_w(x),
						nm_usuario_p, clock_timestamp(), nm_usuario_p,
						clock_timestamp(), tb_nr_seq_cta_alt_w(x));
			commit;

			i := 0;
			tb_nr_sequencia_w.delete;
			tb_nr_seq_conta_w.delete;
			tb_nr_seq_cta_alt_w.delete;
		end if;

		if (tb_nr_sequencia_n_w.count >= current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer) then
			forall x in tb_nr_sequencia_n_w.first .. tb_nr_sequencia_n_w.last
				insert	into	pls_monit_cta_nao_sel_exc(	dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
						nm_usuario_nrec, nr_seq_guia_monitor, nr_seq_conta,
						ds_observacao, nr_sequencia, nr_seq_lote_monitor,
						dt_competencia_reg)
				values (	clock_timestamp(), clock_timestamp(), nm_usuario_p,
						nm_usuario_p, tb_nr_sequencia_n_w(x), tb_nr_seq_conta_n_w(x),
						tb_ds_observacao_n_w(x), nextval('pls_monit_cta_nao_sel_exc_seq'), nr_seq_lote_p,
						tb_dt_competencia_n_w(x));
			commit;

			j := 0;
			tb_nr_sequencia_n_w.delete;
			tb_nr_seq_conta_n_w.delete;
			tb_ds_observacao_n_w.delete;
			tb_dt_competencia_n_w.delete;
		end if;
	end if;
end loop;
close cursor_w;

if (tb_nr_sequencia_w.count > 0) then
	forall x in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
		insert 	into 	pls_monitor_tiss_cta_val(	nr_sequencia, nr_seq_conta, ie_tipo_evento,
				nr_seq_lote_monitor, ie_conta_atualizada, nr_seq_monitor_guia,
				nm_usuario_nrec, dt_atualizacao_nrec, nm_usuario,
				dt_atualizacao, nr_seq_cta_alt)
		values (	nextval('pls_monitor_tiss_cta_val_seq'), tb_nr_seq_conta_w(x), 'E',
				nr_seq_lote_p, 'S', tb_nr_sequencia_w(x),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), tb_nr_seq_cta_alt_w(x));
	commit;
end if;

if (tb_nr_sequencia_n_w.count > 0) then
	forall x in tb_nr_sequencia_n_w.first .. tb_nr_sequencia_n_w.last
		insert	into	pls_monit_cta_nao_sel_exc(	dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
				nm_usuario_nrec, nr_seq_guia_monitor, nr_seq_conta,
				ds_observacao, nr_sequencia, nr_seq_lote_monitor,
				dt_competencia_reg)
		values (	clock_timestamp(), clock_timestamp(), nm_usuario_p,
				nm_usuario_p, tb_nr_sequencia_n_w(x), tb_nr_seq_conta_n_w(x),
				tb_ds_observacao_n_w(x), nextval('pls_monit_cta_nao_sel_exc_seq'), nr_seq_lote_p,
				tb_dt_competencia_n_w(x));
	commit;
end if;

Open C01(nr_seq_lote_p);
loop
	tb_nr_sequencia_w.delete;
	tb_cd_guia_w.delete;
	tb_cd_guia_operadora_w.delete;

	fetch C01 bulk collect into tb_nr_sequencia_w, tb_cd_guia_w, tb_cd_guia_operadora_w
	limit current_setting('pls_gerencia_envio_ans_pck.qt_registro_transacao_w')::integer;

	exit when tb_nr_sequencia_w.count = 0;

	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
		update	pls_monit_cta_nao_sel_exc
		set	cd_guia = tb_cd_guia_w(i),
			cd_guia_prestador = tb_cd_guia_operadora_w(i)
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.gerar_contas_exclusao ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
