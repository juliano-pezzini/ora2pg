-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Procedure utilizada para pegar as informaes das contas consistidas no lote e gerar nas tabelas utilizadas na gerao do XML



CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.prepara_base_envio_ans ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


-- ie_tipo_geracao_p	= N  -> normal   F = Fornecimento direto

					
nr_seq_processo_w	pls_monitor_tempo_lote.nr_sequencia%type;
vl_param_session_w	integer;
nr_seq_processo_exec_w	pls_monitor_tiss_processo.nr_sequencia%type;
ds_erro_w		pls_monitor_tiss_processo.ds_erro%type;


BEGIN

select	coalesce(max(ie_monitoramento_ans),'N')
into STRICT	current_setting('pls_gerencia_envio_ans_pck.ie_controla_estab_w')::pls_controle_estab.ie_monitoramento_ans%type
from	pls_controle_estab;
-- grava o log de processo que sinaliza a ao que foi feita

nr_seq_processo_exec_w := pls_gerencia_envio_ans_pck.grava_processo(	nr_seq_lote_p, 2, nm_usuario_p, null, nr_seq_processo_exec_w);

--obter ms de competncia do lote

-- grava em variveis globais para ser acessado de qualquer local

select	trunc(dt_mes_competencia, 'month'),
	fim_mes(dt_mes_competencia),
	coalesce(ie_tipo_lote,'0'),
	cd_versao_tiss
into STRICT	current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_ini_w')::pls_monitor_tiss_lote.dt_mes_competencia%type,
	current_setting('pls_gerencia_envio_ans_pck.dt_mes_competencia_fim_w')::pls_monitor_tiss_lote.dt_mes_competencia%type,
	current_setting('pls_gerencia_envio_ans_pck.ie_tipo_lote_w')::pls_monitor_tiss_lote.ie_tipo_lote%type,
	current_setting('pls_gerencia_envio_ans_pck.cd_versao_tiss_w')::pls_monitor_tiss_lote.cd_versao_tiss%type
from	pls_monitor_tiss_lote
where	nr_sequencia = nr_seq_lote_p;

begin
	EXECUTE 'ALTER SESSION ENABLE PARALLEL DML';
exception
when others then
	null;
end;

-- Verifica o parametro Oracle db_file_multiblock_read_count. O mesmo deve ter 128 ou mais para execuo desta rotina por conta do

-- select de vrios registros e os diversos inserts\updates que sero feitos.

begin
	EXECUTE	'select to_number(max(value)) ' ||
				'from	v$parameter ' ||
				'where  name = ''db_file_multiblock_read_count'' '
	into STRICT	vl_param_session_w;
exception
when others then
	-- ganha 1000 pra no entrar nos if's e no alterar nada.

	vl_param_session_w := 1000;
end;
-- Se tiver menos que esse valor ento manda para 128 e no fim da rotina ser retornado ao original caso foi alterado.

if (vl_param_session_w < 128) then

	-- Trata a exceo, se no der para alterar deixa como est,

	begin
		EXECUTE 'alter session set db_file_multiblock_read_count=128';
	exception
	when others then
		null;
	end;
end if;

begin
	-- define quais so os tipos de registros que sero enviados para cada conta.

	-- isso  gravado na tabela pls_moni_tiss_chave_guia

	CALL pls_gerencia_envio_ans_pck.definir_tipo_envio_conta(nr_seq_lote_p, nm_usuario_p);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando contas', 'I', nm_usuario_p, nr_seq_processo_w);
	-- prepara as contas para o envio de dados

	CALL pls_gerencia_envio_ans_pck.inserir_conta_arquivo_xml(	nr_seq_lote_p,  nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando procedimentos', 'I', nm_usuario_p, nr_seq_processo_w);
	-- prepara os procedimentos para o envio de dados

	CALL pls_gerencia_envio_ans_pck.inserir_proc_arquivo_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando informaes odontolgicas', 'I', nm_usuario_p, nr_seq_processo_w);
	-- alimentando as informaes odontolgicas

	CALL pls_gerencia_envio_ans_pck.inserir_dados_odont_arq_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando materiais', 'I', nm_usuario_p, nr_seq_processo_w);
	-- prepara os materiais para o envio de dados

	CALL pls_gerencia_envio_ans_pck.inserir_mat_arquivo_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando pacotes', 'I', nm_usuario_p, nr_seq_processo_w);
	-- prepara os pacotes para o envio de dados

	CALL pls_gerencia_envio_ans_pck.inserir_pacote_arquivo_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando informaes de diagnsticos das contas', 'I', nm_usuario_p, nr_seq_processo_w);
	-- prepara as informaes de diagnsticos das contas para o envio de dados

	CALL pls_gerencia_envio_ans_pck.inserir_diag_arquivo_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando informaes de nascimentos/bitos das contas', 'I', nm_usuario_p, nr_seq_processo_w);
	-- prepara as informaes de nascimentos/bitos das contas para o envio de dados

	CALL pls_gerencia_envio_ans_pck.inserir_nasc_vivo_arquivo_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Gerando informaes de dirias nas contas', 'I', nm_usuario_p, nr_seq_processo_w);
	-- atualizando quantidade de dirias na guia

	CALL pls_gerencia_envio_ans_pck.inserir_diaria_arquivo_xml(	nr_seq_lote_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	-- Atualiza tabela referencia dos procedimentos e dos materiais conforme o primeiro envio da conta

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Atualizando a tabela referncia e grupo ANS conforme primeiro envio', 'I', nm_usuario_p, nr_seq_processo_w);
	CALL pls_gerencia_envio_ans_pck.obter_tabela_grupo_envio(	nr_seq_lote_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	if (current_setting('pls_gerencia_envio_ans_pck.ie_tipo_lote_w')::pls_monitor_tiss_lote.ie_tipo_lote%type not in ('2','1')) then
		nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Atualizando vnculo de contas para retorno futuro', 'I', nm_usuario_p, nr_seq_processo_w);
		-- atualiza os dados da tabela pls_monitor_tiss_alt_guia

		CALL pls_gerencia_envio_ans_pck.atualiza_vinculo_tiss_alt_guia(	nr_seq_lote_p, nm_usuario_p);
		nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

		-- contas que tiveram incluso ou excluso de itens em relao ao ltimo envio de incluso para a ANS

		-- precisam ter um envio de excluso e outro de incluso para todos os seus itens

		-- isso  feito nessa procedure

		CALL pls_gerencia_envio_ans_pck.gerencia_alt_item_conta(	nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);

		nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Atualizando registros sinalizando que os mesmos foram enviados para a ANS', 'I', nm_usuario_p, nr_seq_processo_w);
		-- atualiza os dados da tabela pls_monitor_tiss_alt

		CALL pls_gerencia_envio_ans_pck.atualizar_status_cta_alt(	nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);
		nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);
	end if;

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Criando arquivos e vinculando contas', 'I', nm_usuario_p, nr_seq_processo_w);
	-- gera os arquivos e vincula as contas nos mesmos

	CALL CALL pls_gerencia_envio_ans_pck.inserir_arquivo_xml(	nr_seq_lote_p, nm_usuario_p);
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	nr_seq_lote_p, 'Atualizando status do lote', 'I', nm_usuario_p, nr_seq_processo_w);
	--Atualiza o status do lote

	update	pls_monitor_tiss_lote set
		ie_status  = 'LG',
		dt_atualizacao  = clock_timestamp(),
		dt_geracao_lote = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where 	nr_sequencia  = nr_seq_lote_p;
	commit;
	nr_seq_processo_w := pls_gerencia_envio_ans_pck.grava_log_tempo_processo(	null, null, 'F', null, nr_seq_processo_w);

exception
when others then

	-- pega o erro

	ds_erro_w := substr(sqlerrm, 0, 4000);

	-- grava o erro que ocorreu

	nr_seq_processo_exec_w := pls_gerencia_envio_ans_pck.grava_processo(	null, null, nm_usuario_p, ds_erro_w, nr_seq_processo_exec_w);

	-- Atualiza o status do lote para dizer que deu Erro na gerao do mesmo.

	-- lotes com esse status podem ter a preparao do arquivo desfeita

	update	pls_monitor_tiss_lote set
		ie_status  = 'PE',
		dt_atualizacao  = clock_timestamp(),
		dt_geracao_lote  = NULL,
		nm_usuario = nm_usuario_p
	where 	nr_sequencia  = nr_seq_lote_p;
	commit;

	-- exibe a mensagem do erro para o usurio

	CALL wheb_mensagem_pck.exibir_mensagem_abort(324928, 'ERRO=' || ds_erro_w, -20012);
end;

-- se o parametro teve que ser alterado ento volta como tava.

if (vl_param_session_w < 128) then

	-- Trata a exceo, se no der para alterar deixa como est,

	begin
		EXECUTE 'alter session set db_file_multiblock_read_count=' || vl_param_session_w;
	exception
	when others then
		null;
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.prepara_base_envio_ans ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
