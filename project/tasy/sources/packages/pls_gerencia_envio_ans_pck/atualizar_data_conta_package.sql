-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_envio_ans_pck.atualizar_data_conta ( nr_seq_lote_p pls_monitor_tiss_cta_val.nr_seq_lote_monitor%type, tb_sequencia_p pls_util_cta_pck.t_number_table, tb_dt_cancelamento_conta_p pls_util_cta_pck.t_date_table, tb_dt_conta_fechada_p pls_util_cta_pck.t_date_table, tb_dt_pagamento_previsto_p pls_util_cta_pck.t_date_table, tb_dt_conta_fechada_recurso_p pls_util_cta_pck.t_date_table, tb_dt_pagamento_recurso_p pls_util_cta_pck.t_date_table, nm_usuario_p usuario.nm_usuario%type, ie_tipo_p text) AS $body$
BEGIN

/*
	ie_tipo_p = C - Conta, FR - Fechamento recurso e PR - Pagamento recurso
*/


if (tb_sequencia_p.count > 0) then


		if (ie_tipo_p = 'C') then

			  forall i in tb_sequencia_p.first .. tb_sequencia_p.last
				update    pls_monitor_tiss_cta_val
				set    dt_atualizacao            = clock_timestamp(),
					nm_usuario            = nm_usuario_p,
					dt_cancelamento_conta        = tb_dt_cancelamento_conta_p(i),
					dt_conta_fechada        = tb_dt_conta_fechada_p(i),
					dt_pagamento_previsto        = tb_dt_pagamento_previsto_p(i),
					dt_conta_fechada_recurso    = tb_dt_conta_fechada_recurso_p(i),
					dt_pagamento_recurso        = tb_dt_pagamento_recurso_p(i)
				where    nr_seq_conta             = tb_sequencia_p(i)
				and    nr_seq_lote_monitor = nr_seq_lote_p;

		elsif (ie_tipo_p = 'FR') then
		 forall i in tb_sequencia_p.first .. tb_sequencia_p.last
			update    pls_monitor_tiss_cta_val
			set    dt_atualizacao            = clock_timestamp(),
				nm_usuario            = nm_usuario_p,
				dt_conta_fechada        = tb_dt_conta_fechada_p(i),
				dt_conta_fechada_recurso    = tb_dt_conta_fechada_recurso_p(i)
			where    nr_seq_conta             = tb_sequencia_p(i)
			and    nr_seq_lote_monitor = nr_seq_lote_p;
		else
			forall i in tb_sequencia_p.first .. tb_sequencia_p.last
			update    pls_monitor_tiss_cta_val
			set    dt_atualizacao            = clock_timestamp(),
				nm_usuario            = nm_usuario_p,
				dt_pagamento_previsto        = tb_dt_pagamento_previsto_p(i),
				dt_pagamento_recurso        = tb_dt_pagamento_recurso_p(i)
			where    nr_seq_conta             = tb_sequencia_p(i)
			and    nr_seq_lote_monitor = nr_seq_lote_p;

		end if;

    commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_envio_ans_pck.atualizar_data_conta ( nr_seq_lote_p pls_monitor_tiss_cta_val.nr_seq_lote_monitor%type, tb_sequencia_p pls_util_cta_pck.t_number_table, tb_dt_cancelamento_conta_p pls_util_cta_pck.t_date_table, tb_dt_conta_fechada_p pls_util_cta_pck.t_date_table, tb_dt_pagamento_previsto_p pls_util_cta_pck.t_date_table, tb_dt_conta_fechada_recurso_p pls_util_cta_pck.t_date_table, tb_dt_pagamento_recurso_p pls_util_cta_pck.t_date_table, nm_usuario_p usuario.nm_usuario%type, ie_tipo_p text) FROM PUBLIC;
