-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Beneficiario



CREATE OR REPLACE PROCEDURE pls_gerar_mala_direta_pck.gerar_beneficiario ( nr_seq_segurado_p bigint, cd_pessoa_fisica_p text, ie_tipo_contrato_p text, ds_situacao_trabalhista_p text, nr_seq_lote_revisao_p bigint, nr_seq_lote_notificacao_p bigint, nr_seq_lote_carteira_p bigint, cd_cgc_pagador_p text, nr_seq_grupo_contratual_p bigint, nr_seq_plano_p bigint, ie_fator_moderador_p text, dt_mes_reajuste_p timestamp, ie_dt_reajuste_p bigint, nr_seq_sca_p bigint, dt_parametro_de_p timestamp, dt_parametro_ate_p timestamp, ie_tipo_data_p bigint, cd_convenio_atend_p bigint, cd_municipio_p text, ie_sexo_p bigint, ds_parametro_benef_p text, qt_idade_inicial_p text, qt_idade_final_p text, nr_seq_parentesco_p bigint, nr_matricula_final_p bigint, nr_matricula_inicial_p bigint, nr_contrato_p bigint, nr_contrato_final_p bigint, ie_regulamentacao_p text, ie_tipo_contratacao_p text, ie_benef_ativo_p bigint, ie_benef_sem_cpf_p text, ie_situacao_trabalhista_p text, ie_remido_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_parametro_w			varchar(10);
ds_sql_cursor_w			varchar(32000) := null;
valor_bind_w			sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;
tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;
tb_cd_pessoa_fisica_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_contrato_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_intercambio_w		pls_util_cta_pck.t_number_table;
tb_ds_titularidade_w		pls_util_cta_pck.t_varchar2_table_15;
tb_dt_nascimento_w		pls_util_cta_pck.t_date_table;
tb_ie_controla_dt_depend_w	pls_util_cta_pck.t_varchar2_table_1;
tb_dt_rescisao_w		pls_util_cta_pck.t_date_table;
tb_dt_contratacao_w		pls_util_cta_pck.t_date_table;
tb_dt_contrato_w		pls_util_cta_pck.t_date_table;
tb_dt_inclusao_w		pls_util_cta_pck.t_date_table;
ie_inserir_w			varchar(1);
dt_emissao_lote_w		timestamp;
dt_termino_dependencia_w	timestamp;
dt_contrato_w			timestamp;

BEGIN

Obter_Param_Usuario(1228, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_w);

ds_sql_cursor_w		:=	'select	a.nr_sequencia,
					decode(a.nr_seq_titular, null, ''Titular'', ''Dependentes''),
					a.cd_pessoa_fisica,
					a.nr_seq_contrato,
					a.nr_seq_intercambio,
					b.dt_nascimento,
					nvl(a.ie_controla_dt_dependencia,''S''),
					a.dt_rescisao,
					a.dt_contratacao,
					(select	max(x.dt_inclusao)
					from	pls_intercambio x
					where	x.nr_sequencia = a.nr_seq_intercambio),
					(select	max(x.dt_contrato)
					from	pls_contrato x
					where	x.nr_sequencia = a.nr_seq_contrato)
				from	pls_segurado a,
					pessoa_fisica b
				where	b.cd_pessoa_fisica = a.cd_pessoa_fisica
				and	a.dt_cancelamento is null 
				and	a.dt_liberacao is not null ';

if (ds_parametro_benef_p = 1) then
	ds_sql_cursor_w := ds_sql_cursor_w || 'and	a.nr_seq_titular is null ';
elsif (ds_parametro_benef_p = 2) then
	ds_sql_cursor_w := ds_sql_cursor_w || 'and	a.nr_seq_titular is not null ';
end if;

if (ie_tipo_contratacao_p IS NOT NULL AND ie_tipo_contratacao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	'and	exists (select	1
							from	pls_plano x
							where	x.nr_sequencia = a.nr_seq_plano
							and	x.ie_tipo_contratacao = :ie_tipo_contratacao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':ie_tipo_contratacao_pc', ie_tipo_contratacao_p, valor_bind_w);
end if;

if (ie_regulamentacao_p IS NOT NULL AND ie_regulamentacao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	'and	exists (select	1
							from	pls_plano x
							where	x.nr_sequencia = a.nr_seq_plano
							and	x.ie_regulamentacao = :ie_regulamentacao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':ie_regulamentacao_pc', ie_regulamentacao_p, valor_bind_w);
end if;

if (nr_seq_sca_p IS NOT NULL AND nr_seq_sca_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || 'and	exists (select	1
							from	pls_sca_vinculo	y
							where	y.nr_seq_segurado	= a.nr_sequencia
							and	y.nr_seq_plano		= :nr_seq_sca_pc
							and	y.dt_liberacao is not null
							and	y.dt_fim_vigencia is null) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_sca_pc', nr_seq_sca_p, valor_bind_w);
end if;

if	(nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '' AND nr_contrato_final_p IS NOT NULL AND nr_contrato_final_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and exists (	select	1
								from	pls_contrato x
								where	x.nr_sequencia = a.nr_seq_contrato
								and	x.nr_contrato between :nr_contrato_inicial_pc and :nr_contrato_final_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_contrato_inicial_pc', nr_contrato_p, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':nr_contrato_final_pc', nr_contrato_final_p, valor_bind_w);
elsif	((nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '') or (nr_contrato_final_p IS NOT NULL AND nr_contrato_final_p::text <> '')) then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and exists (	select	1
								from	pls_contrato x
								where	x.nr_sequencia = a.nr_seq_contrato
								and	x.nr_contrato = :nr_contrato_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_contrato_pc', coalesce(nr_contrato_p,nr_contrato_final_p), valor_bind_w);
end if;

if (nr_seq_lote_carteira_p IS NOT NULL AND nr_seq_lote_carteira_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	'and exists (	select	1
								from	pls_lote_carteira	x,
									pls_carteira_emissao	y,
									pls_segurado_carteira	z 
								where	z.nr_sequencia		= y.nr_seq_seg_carteira
								and	y.nr_seq_lote		= x.nr_sequencia
								and	z.nr_seq_segurado	= a.nr_sequencia
								and	x.nr_sequencia		= :nr_seq_lote_carteira_pc
								and	x.ie_tipo_lote		= ''E'') ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_carteira_pc', nr_seq_lote_carteira_p, valor_bind_w);
end if;

if	(nr_matricula_inicial_p IS NOT NULL AND nr_matricula_inicial_p::text <> '' AND nr_matricula_final_p IS NOT NULL AND nr_matricula_final_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.cd_matricula_familia between :cd_matricula_inicial_pc and :cd_matricula_final_pc ';
	valor_bind_w := sql_pck.bind_variable(':cd_matricula_inicial_pc', nr_matricula_inicial_p, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':cd_matricula_final_pc', nr_matricula_final_p, valor_bind_w);
elsif	((nr_matricula_inicial_p IS NOT NULL AND nr_matricula_inicial_p::text <> '') or (nr_matricula_final_p IS NOT NULL AND nr_matricula_final_p::text <> '')) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.cd_matricula_familia = :cd_matricula_familia_pc ';
	valor_bind_w := sql_pck.bind_variable(':cd_matricula_final_pc', coalesce(nr_matricula_inicial_p,nr_matricula_final_p), valor_bind_w);
end if;

if (nr_seq_parentesco_p IS NOT NULL AND nr_seq_parentesco_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.nr_seq_parentesco = :nr_seq_parentesco_pc ';
end if;

if	(qt_idade_inicial_p > 0 AND qt_idade_final_p > 0) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and trunc(months_between(sysdate, b.dt_nascimento)/12) between :qt_idade_inicial_pc and :qt_idade_final_pc ';
	valor_bind_w := sql_pck.bind_variable(':qt_idade_inicial_pc', qt_idade_inicial_p, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':qt_idade_final_pc', qt_idade_final_p, valor_bind_w);
end if;

if (nr_seq_lote_notificacao_p IS NOT NULL AND nr_seq_lote_notificacao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and exists (	select 1
								from	pls_notificacao_pagador x
								where	x.nr_seq_pagador	= a.nr_seq_pagador
								and	x.nr_seq_lote		= :nr_seq_lote_notif_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_notif_pc', nr_seq_lote_notificacao_p, valor_bind_w);
end if;

if (nr_seq_lote_revisao_p IS NOT NULL AND nr_seq_lote_revisao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and exists (	select 1
								from	pls_pessoa_inconsistente x
								where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica
								and	x.nr_seq_lote		= :nr_seq_lote_revisao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_revisao_pc', nr_seq_lote_revisao_p, valor_bind_w);
end if;

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.nr_sequencia = :nr_seq_segurado_pc ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_segurado_pc', nr_seq_segurado_p, valor_bind_w);
end if;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.cd_pessoa_fisica = :cd_pessoa_fisica_pc ';
	valor_bind_w := sql_pck.bind_variable(':cd_pessoa_fisica_pc', cd_pessoa_fisica_p, valor_bind_w);
end if;

if (ie_situacao_trabalhista_p = 'S') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.ie_situacao_trabalhista is not null ';
elsif (ie_situacao_trabalhista_p = 'N') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.ie_situacao_trabalhista is null ';
end if;

if (ie_remido_p = 1) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and pls_obter_se_benef_remido(a.nr_sequencia,sysdate) = ''S'' ';
elsif (ie_remido_p = 2) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and pls_obter_se_benef_remido(a.nr_sequencia,sysdate) = ''N'' ';
end if;

if (ie_tipo_contrato_p = 'CI') then
	ds_sql_cursor_w := ds_sql_cursor_w || 'and a.nr_seq_intercambio is not null ';
elsif (ie_tipo_contrato_p = 'CO') then
	ds_sql_cursor_w := ds_sql_cursor_w || 'and a.nr_seq_contrato is not null ';
end if;

if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.nr_seq_plano = :nr_seq_plano_pc ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_plano_pc', nr_seq_plano_p, valor_bind_w);
end if;

if (ie_sexo_p = 1) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and b.ie_sexo = ''F'' ';
elsif (ie_sexo_p = 2) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and b.ie_sexo = ''M'' ';
end if;

if (cd_convenio_atend_p IS NOT NULL AND cd_convenio_atend_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and exists (	select 1
								from	atendimento_paciente w,
									atend_categoria_convenio x
								where	w.nr_atendimento	= x.nr_atendimento
								and	w.cd_pessoa_fisica	= a.cd_pessoa_fisica
								and	x.cd_convenio		= :cd_convenio_atend_pc) ';
	valor_bind_w := sql_pck.bind_variable(':cd_convenio_atend_pc', cd_convenio_atend_p, valor_bind_w);
end if;

if	(dt_mes_reajuste_p IS NOT NULL AND dt_mes_reajuste_p::text <> '' AND ie_dt_reajuste_p > 0) then
	if (ie_dt_reajuste_p = 1) then
		if (ie_tipo_contrato_p = 'CI') then
			ds_sql_cursor_w := ds_sql_cursor_w || ' and exists (	select	1
										from	pls_intercambio x
										where	x.nr_sequencia = a.nr_seq_intercambio
										and	x.dt_inclusao < :dt_mes_reajuste_p
										and	x.nr_mes_reajuste = :nr_mes_reajuste_pc) ';
		else
			ds_sql_cursor_w := ds_sql_cursor_w || ' and exists (	select	1
										from	pls_contrato x
										where	x.nr_sequencia = a.nr_seq_contrato
										and	x.dt_contrato < :dt_mes_reajuste_pc
										and	x.nr_mes_reajuste = :nr_mes_reajuste_pc) ';
		end if;
	elsif (ie_dt_reajuste_p = 2) then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and a.nr_mes_reajuste = :nr_mes_reajuste_pc ';
	elsif (ie_dt_reajuste_p = 3) then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and exists (	select	1
									from	pls_sca_vinculo x
									where	a.nr_sequencia = x.nr_seq_segurado
									and	x.nr_mes_reajuste = :nr_mes_reajuste_pc
									and	x.dt_liberacao is not null) ';
	end if;
	
	valor_bind_w := sql_pck.bind_variable(':nr_mes_reajuste_pc', (to_char(dt_mes_reajuste_p, 'mm'))::numeric , valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':dt_mes_reajuste_pc', dt_mes_reajuste_p, valor_bind_w);
end if;

if (ie_benef_sem_cpf_p = 'S') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and trunc(months_between(sysdate,b.dt_nascimento) / 12) >= 18 and b.nr_cpf is null ';
end if;

if (cd_cgc_pagador_p IS NOT NULL AND cd_cgc_pagador_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and exists (	select	1
								from	pls_contrato_pagador x
								where	x.nr_sequencia = a.nr_seq_pagador
								and	x.cd_cgc = :cd_cgc_pagador_pc) ';
	valor_bind_w := sql_pck.bind_variable(':cd_cgc_pagador_pc', cd_cgc_pagador_p, valor_bind_w);
end if;

if (cd_municipio_p IS NOT NULL AND cd_municipio_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and exists (	select	1
								from	compl_pessoa_fisica x
								where	x.cd_pessoa_fisica = b.cd_pessoa_fisica
								and	x.cd_municipio_ibge = :cd_municipio_pc
								and	x.ie_tipo_complemento	in (1,2)) ';
	valor_bind_w := sql_pck.bind_variable(':cd_municipio_pc', cd_municipio_p, valor_bind_w);
end if;

if (nr_seq_grupo_contratual_p IS NOT NULL AND nr_seq_grupo_contratual_p::text <> '') then
	if (ie_tipo_contrato_p = 'CI') then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	exists	(select	1
									from	pls_contrato_grupo x
									where	x.nr_seq_intercambio = a.nr_seq_intercambio
									and	x.nr_seq_grupo = :nr_seq_grupo_contratual_pc) ';
	else
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	exists	(select	1
									from	pls_contrato_grupo x
									where	x.nr_seq_contrato = a.nr_seq_contrato
									and	x.nr_seq_grupo = :nr_seq_grupo_contratual_pc) ';
	end if;
	valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_contratual_pc', nr_seq_grupo_contratual_p, valor_bind_w);
end if;

if (ie_benef_ativo_p = 0) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and ((a.dt_rescisao is null) or (a.dt_rescisao >= sysdate)) ';
elsif (ie_benef_ativo_p = 1) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and a.dt_rescisao < sysdate) ';
end if;

valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_cursor_w, valor_bind_w);

loop
	fetch cursor_w bulk collect into tb_nr_seq_segurado_w, tb_ds_titularidade_w, tb_cd_pessoa_fisica_w,
					 tb_nr_seq_contrato_w, tb_nr_seq_intercambio_w, tb_dt_nascimento_w,
					 tb_ie_controla_dt_depend_w, tb_dt_rescisao_w, tb_dt_contratacao_w,
					 tb_dt_inclusao_w, tb_dt_contrato_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_segurado_w.count = 0;
	begin
	
	for i in tb_nr_seq_segurado_w.first .. tb_nr_seq_segurado_w.last loop
		begin
		ie_inserir_w	:= 'S';
		
		if (ie_tipo_data_p = 1) then
			dt_emissao_lote_w	:= pls_obter_emissaolote_carteira(tb_nr_seq_segurado_w(i));
			if (dt_emissao_lote_w < dt_parametro_de_p) or (dt_emissao_lote_w > dt_parametro_ate_p) then
				ie_inserir_w := 'N';
			end if;
		elsif (ie_tipo_data_p = 2) then
			if (pls_obter_se_receb_data(tb_nr_seq_segurado_w(i),trunc(dt_parametro_de_p), trunc(dt_parametro_ate_p),'E') <> 'S') then
				ie_inserir_w := 'N';
			end if;
		elsif (ie_tipo_data_p	= 3) then
			dt_contrato_w	:= coalesce(tb_dt_inclusao_w(i), tb_dt_contrato_w(i));
			if (dt_contrato_w	< dt_parametro_de_p) or (dt_contrato_w > dt_parametro_ate_p) then
				ie_inserir_w := 'N';
			end if;
		elsif (ie_tipo_data_p	= 4) then
			if (pls_obter_se_aniver_periodo(tb_dt_nascimento_w(i),dt_parametro_de_p,dt_parametro_ate_p) = 'N') then
				ie_inserir_w := 'N';
			end if;
		elsif (ie_tipo_data_p	= 5) then
			dt_termino_dependencia_w	:= pls_obter_dt_limite_depend(tb_nr_seq_segurado_w(i));
			
			if (coalesce(dt_termino_dependencia_w::text, '') = '') then
				ie_inserir_w := 'N';
			end if;
			
			if (tb_ie_controla_dt_depend_w(i) = 'N') then
				ie_inserir_w := 'N';
			end if;
			
			if	((trunc(dt_termino_dependencia_w,'dd') < trunc(dt_parametro_de_p,'dd')) or (trunc(dt_termino_dependencia_w,'dd') > trunc(dt_parametro_ate_p,'dd'))) then
				ie_inserir_w := 'N';
			end if;
		elsif (ie_tipo_data_p	= 6) then
			if (coalesce(tb_dt_rescisao_w(i)::text, '') = '') then
				ie_inserir_w := 'N';
			end if;
			
			if (trunc(tb_dt_rescisao_w(i), 'dd') < trunc(dt_parametro_de_p, 'dd')) or (trunc(tb_dt_rescisao_w(i), 'dd') > trunc(dt_parametro_ate_p, 'dd')) then
				ie_inserir_w := 'N';
			end if;
		elsif (ie_tipo_data_p	= 7) then
			if (coalesce(tb_dt_contratacao_w(i)::text, '') = '') then
				ie_inserir_w := 'N';
			end if;
			
			if (tb_dt_contratacao_w(i) < dt_parametro_de_p) or (tb_dt_contratacao_w(i) > dt_parametro_ate_p) then
				ie_inserir_w := 'N';
			end if;
		end if;
		
		if (ie_inserir_w = 'S') then
			CALL pls_inserir_mala_direta(tb_cd_pessoa_fisica_w(i), tb_nr_seq_contrato_w(i), null,
						tb_ds_titularidade_w(i), tb_nr_seq_segurado_w(i), nr_seq_lote_carteira_p,
						'', null, nm_usuario_p,
						cd_estabelecimento_p, tb_dt_nascimento_w(i), 0,
						nr_seq_lote_revisao_p, ie_parametro_w, nr_seq_lote_notificacao_p, 
						null, 'N', tb_nr_seq_intercambio_w(i), 
						null);
		end if;
		end;
	end loop;
	end;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mala_direta_pck.gerar_beneficiario ( nr_seq_segurado_p bigint, cd_pessoa_fisica_p text, ie_tipo_contrato_p text, ds_situacao_trabalhista_p text, nr_seq_lote_revisao_p bigint, nr_seq_lote_notificacao_p bigint, nr_seq_lote_carteira_p bigint, cd_cgc_pagador_p text, nr_seq_grupo_contratual_p bigint, nr_seq_plano_p bigint, ie_fator_moderador_p text, dt_mes_reajuste_p timestamp, ie_dt_reajuste_p bigint, nr_seq_sca_p bigint, dt_parametro_de_p timestamp, dt_parametro_ate_p timestamp, ie_tipo_data_p bigint, cd_convenio_atend_p bigint, cd_municipio_p text, ie_sexo_p bigint, ds_parametro_benef_p text, qt_idade_inicial_p text, qt_idade_final_p text, nr_seq_parentesco_p bigint, nr_matricula_final_p bigint, nr_matricula_inicial_p bigint, nr_contrato_p bigint, nr_contrato_final_p bigint, ie_regulamentacao_p text, ie_tipo_contratacao_p text, ie_benef_ativo_p bigint, ie_benef_sem_cpf_p text, ie_situacao_trabalhista_p text, ie_remido_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
