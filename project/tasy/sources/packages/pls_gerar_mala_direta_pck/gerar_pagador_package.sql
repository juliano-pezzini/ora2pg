-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Pagador



CREATE OR REPLACE PROCEDURE pls_gerar_mala_direta_pck.gerar_pagador ( nr_seq_pagador_p bigint, nr_seq_lote_mens_p bigint, ie_tipo_contrato_p text, ie_situacao_contrato_p bigint, ie_tipo_contratacao_p text, ie_regulamentacao_p text, nr_seq_sca_p bigint, nr_contrato_p bigint, nr_contrato_final_p bigint, ie_sit_financ_p bigint, nr_seq_lote_carteira_p bigint, nr_seq_lote_notificacao_p bigint, nr_seq_lote_revisao_p bigint, nr_matricula_inicial_p bigint, nr_matricula_final_p bigint, nr_seq_parentesco_p bigint, qt_idade_inicial_p text, qt_idade_final_p text, ie_sexo_p bigint, ie_benef_sem_cpf_p text, cd_estabelecimento_p bigint, ie_remido_p bigint, ie_tipo_pagador_p text, nm_usuario_p text) AS $body$
DECLARE


valor_bind_w			sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;
tb_nr_seq_pagador_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;
ds_sql_c01_w			varchar(32000) := null;

ie_inserir_w			varchar(1);
ie_parametro_w			varchar(255);
ie_tipo_pagador_w		varchar(2);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
qt_idade_w			bigint;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
nr_cpf_w			pessoa_fisica.nr_cpf%type;
ie_sexo_w			pessoa_fisica.ie_sexo%type;

BEGIN
Obter_Param_Usuario(1228, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_w);

ds_sql_c01_w	:=	'select	a.nr_seq_pagador,
				(select	max(x.nr_sequencia)
				from	pls_segurado x
				where	a.nr_seq_pagador = x.nr_seq_pagador
				and	x.dt_cancelamento is null
				and	x.dt_liberacao is not null) nr_seq_segurado
			from	pls_segurado a
			where	a.dt_cancelamento is null 
			and	a.dt_liberacao is not null ';

if (nr_seq_parentesco_p IS NOT NULL AND nr_seq_parentesco_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w || ' and a.nr_seq_parentesco = :nr_seq_parentesco_pc ';
end if;

if (ie_tipo_contrato_p = 'CI') then
	if (ie_situacao_contrato_p	= 1) then
		ds_sql_c01_w := ds_sql_c01_w || 'and	exists	(select	1
								from	pls_intercambio x
								where	x.nr_sequencia = a.nr_seq_intercambio
								and	x.dt_exclusao is null) ';
	elsif (ie_situacao_contrato_p	= 2) then
		ds_sql_c01_w := ds_sql_c01_w || 'and	exists	(select	1
								from	pls_intercambio x
								where	x.nr_sequencia = a.nr_seq_intercambio
								and	x.dt_exclusao is not null) ';
	else
		ds_sql_c01_w := ds_sql_c01_w || 'and	a.nr_seq_intercambio is not null ';
	end if;
else
	if (ie_situacao_contrato_p	= 1) then
		ds_sql_c01_w := ds_sql_c01_w || ' and	exists	(select	1
								from	pls_contrato x
								where	x.nr_sequencia = a.nr_seq_contrato
								and	x.dt_rescisao_contrato is null) ';
	elsif (ie_situacao_contrato_p	= 2) then
		ds_sql_c01_w := ds_sql_c01_w || ' and	exists	(select	1
								from	pls_contrato x
								where	x.nr_sequencia = a.nr_seq_contrato
								and	x.dt_rescisao_contrato is not null) ';
	else
		ds_sql_c01_w := ds_sql_c01_w || 'and	a.nr_seq_contrato is not null ';
	end if;
end if;

if (ie_tipo_contratacao_p IS NOT NULL AND ie_tipo_contratacao_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	'and	exists (select	1
							from	pls_plano x
							where	x.nr_sequencia = a.nr_seq_plano
							and	x.ie_tipo_contratacao = :ie_tipo_contratacao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':ie_tipo_contratacao_pc', ie_tipo_contratacao_p, valor_bind_w);
end if;

if (ie_regulamentacao_p IS NOT NULL AND ie_regulamentacao_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	'and	exists (select	1
							from	pls_plano x
							where	x.nr_sequencia = a.nr_seq_plano
							and	x.ie_regulamentacao = :ie_regulamentacao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':ie_regulamentacao_pc', ie_regulamentacao_p, valor_bind_w);
end if;

if (nr_seq_sca_p IS NOT NULL AND nr_seq_sca_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w || 'and	exists (select	1
							from	pls_sca_vinculo	y
							where	y.nr_seq_segurado	= a.nr_sequencia
							and	y.nr_seq_plano		= :nr_seq_sca_pc
							and	y.dt_liberacao is not null
							and	y.dt_fim_vigencia is null) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_sca_pc', nr_seq_sca_p, valor_bind_w);
end if;

if	(nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '' AND nr_contrato_final_p IS NOT NULL AND nr_contrato_final_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	' and exists (	select	1
							from	pls_contrato x
							where	x.nr_sequencia = a.nr_seq_contrato
							and	x.nr_contrato between :nr_contrato_inicial_pc and :nr_contrato_final_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_contrato_inicial_pc', nr_contrato_p, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':nr_contrato_final_pc', nr_contrato_final_p, valor_bind_w);
elsif	((nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '') or (nr_contrato_final_p IS NOT NULL AND nr_contrato_final_p::text <> '')) then
	ds_sql_c01_w := ds_sql_c01_w ||	' and exists (	select	1
							from	pls_contrato x
							where	x.nr_sequencia = a.nr_seq_contrato
							and	x.nr_contrato = :nr_contrato_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_contrato_pc', coalesce(nr_contrato_p,nr_contrato_final_p), valor_bind_w);
end if;

if (nr_seq_lote_carteira_p IS NOT NULL AND nr_seq_lote_carteira_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	'and exists (	select	1
							from	pls_lote_carteira	x,
								pls_carteira_emissao	y,
								pls_segurado_carteira	z 
							where	z.nr_sequencia		= y.nr_seq_seg_carteira
							and	y.nr_seq_lote		= x.nr_sequencia
							and	z.nr_seq_segurado	= a.nr_sequencia
							and	x.nr_sequencia		= :nr_seq_lote_carteira_pc
							and	x.ie_tipo_lote		= ''E'') ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_carteira_pc', nr_seq_lote_carteira_p, valor_bind_w);
end if;

if	(nr_matricula_inicial_p IS NOT NULL AND nr_matricula_inicial_p::text <> '' AND nr_matricula_final_p IS NOT NULL AND nr_matricula_final_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w || ' and a.cd_matricula_familia between :cd_matricula_inicial_pc and :cd_matricula_final_pc ';
	valor_bind_w := sql_pck.bind_variable(':cd_matricula_inicial_pc', nr_matricula_inicial_p, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':cd_matricula_final_pc', nr_matricula_final_p, valor_bind_w);
elsif	((nr_matricula_inicial_p IS NOT NULL AND nr_matricula_inicial_p::text <> '') or (nr_matricula_final_p IS NOT NULL AND nr_matricula_final_p::text <> '')) then
	ds_sql_c01_w := ds_sql_c01_w || ' and a.cd_matricula_familia = :cd_matricula_familia_pc ';
	valor_bind_w := sql_pck.bind_variable(':cd_matricula_final_pc', coalesce(nr_matricula_inicial_p,nr_matricula_final_p), valor_bind_w);
end if;

if	(qt_idade_inicial_p > 0 AND qt_idade_final_p > 0) then
	ds_sql_c01_w := ds_sql_c01_w || ' and exists (	select	1
							from	pessoa_fisica x
							where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
							and	trunc(months_between(sysdate, x.dt_nascimento)/12) between :qt_idade_inicial_pc and :qt_idade_final_pc) ';
	valor_bind_w := sql_pck.bind_variable(':qt_idade_inicial_pc', qt_idade_inicial_p, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':qt_idade_final_pc', qt_idade_final_p, valor_bind_w);
end if;

if (ie_sit_financ_p = 2) then
	ds_sql_c01_w := ds_sql_c01_w || 'and exists (	select	1
							from	titulo_receber		x
							where	x.nr_seq_pagador	= a.nr_seq_pagador
							and	x.ie_situacao		= ''1''
							and	x.dt_pagamento_previsto	< sysdate) ';
elsif (ie_sit_financ_p = 3) then
	ds_sql_c01_w := ds_sql_c01_w || 'and not exists (select	1 
							from	titulo_receber		x
							where	x.nr_seq_pagador	= a.nr_seq_pagador
							and	x.ie_situacao		= ''1''
							and	x.dt_pagamento_previsto	< sysdate) ';
end if;

if (nr_seq_lote_notificacao_p IS NOT NULL AND nr_seq_lote_notificacao_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	' and exists (	select 1
							from	pls_notificacao_pagador x
							where	x.nr_seq_pagador	= a.nr_seq_pagador
							and	x.nr_seq_lote		= :nr_seq_lote_notif_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_notif_pc', nr_seq_lote_notificacao_p, valor_bind_w);
end if;

if (nr_seq_lote_revisao_p IS NOT NULL AND nr_seq_lote_revisao_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	' and exists (	select 1
							from	pls_pessoa_inconsistente x
							where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica
							and	x.nr_seq_lote		= :nr_seq_lote_revisao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_revisao_pc', nr_seq_lote_revisao_p, valor_bind_w);
end if;

if (nr_seq_pagador_p IS NOT NULL AND nr_seq_pagador_p::text <> '') then
	ds_sql_c01_w	:= ds_sql_c01_w || ' and a.nr_seq_pagador = :nr_seq_pagador_pc ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_pagador_pc', nr_seq_pagador_p, valor_bind_w);
end if;

if (ie_remido_p	= 1) then
	ds_sql_c01_w := ds_sql_c01_w || ' and exists (	select	1 
							from	pls_segurado x 
							where	x.nr_seq_pagador = a.nr_seq_pagador 
							and	x.dt_cancelamento is null 
							and	x.dt_liberacao is not null 
							and	pls_obter_se_benef_remido(x.nr_sequencia,sysdate) = ''S'') ';
elsif (ie_remido_p = 2) then
	ds_sql_c01_w := ds_sql_c01_w ||	' and not exists(select	1 
							from	pls_segurado x 
							where	x.nr_seq_pagador = a.nr_seq_pagador 
							and	x.dt_cancelamento is null 
							and	x.dt_liberacao is not null 
							and	pls_obter_se_benef_remido(x.nr_sequencia,sysdate) = ''S'') ';
end if;

if (nr_seq_lote_mens_p IS NOT NULL AND nr_seq_lote_mens_p::text <> '') then
	ds_sql_c01_w := ds_sql_c01_w ||	' and exists (	select	1
							from	pls_mensalidade x
							where	x.ie_cancelamento is null
							and	x.nr_seq_pagador = a.nr_seq_pagador
							and	x.nr_seq_lote = :nr_seq_lote_mens_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_mens_pc', nr_seq_lote_mens_p, valor_bind_w);
end if;

ds_sql_c01_w	:= ds_sql_c01_w || 'group by a.nr_seq_pagador ';

valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_c01_w, valor_bind_w);

loop
	fetch cursor_w bulk collect into tb_nr_seq_pagador_w, tb_nr_seq_segurado_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_pagador_w.count = 0;
	begin
	
	for i in tb_nr_seq_pagador_w.first .. tb_nr_seq_pagador_w.last loop
		begin
		ie_inserir_w	:= 'S';
		
		select	CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END ,
			nr_seq_contrato,
			nr_seq_pagador_intercambio,
			cd_cgc,
			cd_pessoa_fisica
		into STRICT	ie_tipo_pagador_w,
			nr_seq_contrato_w,
			nr_seq_intercambio_w,
			cd_cgc_w,
			cd_pessoa_fisica_w
		from	pls_contrato_pagador a
		where	nr_sequencia = tb_nr_seq_pagador_w(i);
		
		if (ie_tipo_pagador_w = 'PJ') then
			if (ie_tipo_pagador_p = 'PF') then
				ie_inserir_w	:= 'N';
			end if;
		elsif (ie_tipo_pagador_w = 'PF') then
			if (ie_tipo_pagador_p = 'PJ') then
				ie_inserir_w	:= 'N';
			end if;
			
			if (ie_inserir_w = 'S') then
				select	trunc(months_between(clock_timestamp(),dt_nascimento) / 12),
					nr_cpf,
					ie_sexo
				into STRICT	qt_idade_w,
					nr_cpf_w,
					ie_sexo_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = cd_pessoa_fisica_w;
				
				if	((ie_benef_sem_cpf_p = 'S') and
					((qt_idade_w < 18) or (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> ''))) then
					ie_inserir_w	:= 'N';
				elsif	(ie_sexo_p = 1 AND ie_sexo_w = 'M') then
					ie_inserir_w	:= 'N';
				elsif	(ie_sexo_p = 2 AND ie_sexo_w = 'F') then
					ie_inserir_w	:= 'N';
				end if;
			end if;
		end if;
		
		if (ie_inserir_w = 'S') then
			CALL pls_inserir_mala_direta(cd_pessoa_fisica_w, nr_seq_contrato_w, null,
						'Pagador', tb_nr_seq_segurado_w(i), nr_seq_lote_carteira_p,
						cd_cgc_w, tb_nr_seq_pagador_w(i), nm_usuario_p,
						cd_estabelecimento_p, null, 0,
						nr_seq_lote_revisao_p, ie_parametro_w, nr_seq_lote_notificacao_p,
						null, 'N', nr_seq_intercambio_w,
						null);
		end if;
		end;
	end loop;
	
	end;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mala_direta_pck.gerar_pagador ( nr_seq_pagador_p bigint, nr_seq_lote_mens_p bigint, ie_tipo_contrato_p text, ie_situacao_contrato_p bigint, ie_tipo_contratacao_p text, ie_regulamentacao_p text, nr_seq_sca_p bigint, nr_contrato_p bigint, nr_contrato_final_p bigint, ie_sit_financ_p bigint, nr_seq_lote_carteira_p bigint, nr_seq_lote_notificacao_p bigint, nr_seq_lote_revisao_p bigint, nr_matricula_inicial_p bigint, nr_matricula_final_p bigint, nr_seq_parentesco_p bigint, qt_idade_inicial_p text, qt_idade_final_p text, ie_sexo_p bigint, ie_benef_sem_cpf_p text, cd_estabelecimento_p bigint, ie_remido_p bigint, ie_tipo_pagador_p text, nm_usuario_p text) FROM PUBLIC;
