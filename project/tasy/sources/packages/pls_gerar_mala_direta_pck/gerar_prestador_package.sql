-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Prestador



CREATE OR REPLACE PROCEDURE pls_gerar_mala_direta_pck.gerar_prestador ( area_atuacao_prest_p bigint, cd_municipio_prest_p text, sg_uf_prestador_p text, nr_seq_regiao_prestador_p bigint, nr_seq_tipo_prestador_p bigint, ie_tipo_endereco_prest_p text, ie_situacao_prest_p bigint, ie_enviar_profissional_p text, ie_lote_pagamento_p text, nr_seq_tipo_compl_adic_p bigint, ie_considera_ender_prest_p text, nr_seq_lote_revisao_p bigint, ie_benef_sem_cpf_p text, nr_seq_especialidade_p bigint, nr_seq_cbo_p bigint, ie_tipo_prestador_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_lote_w			bigint;
ie_prestador_w			varchar(2);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
nr_seq_prestador_w		bigint;
dt_exclusao_prestador_w		timestamp;
nr_seq_tipo_prestador_w		bigint;
nr_seq_tipo_compl_adic_w	bigint;
ie_tipo_endereco_w		varchar(10);
qt_registros_prestador_w	integer;
ie_parametro_w			varchar(10);

C02 CURSOR FOR
	SELECT	'PF' ie_prestador,
		'' cd_cgc,
		a.cd_pessoa_fisica,
		a.nr_sequencia,
		a.DT_EXCLUSAO
	from	pls_prestador a,
		pessoa_fisica b
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.ie_situacao		= 'A'
	and	ie_tipo_prestador_p in (1,3)
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	((coalesce(nr_seq_especialidade_p,0) = 0) or (obter_se_especialidade_medico(a.cd_pessoa_fisica, nr_seq_especialidade_p) = 'S'))
	and	((coalesce(nr_seq_cbo_p,0) = 0) or (obter_dados_pf(a.cd_pessoa_fisica, 'CBOS') = (SELECT	max(cd_cbo) from	cbo_saude	where	nr_sequencia = nr_seq_cbo_p)))
	and	(((ie_benef_sem_cpf_p = 'S') and (coalesce(b.nr_cpf::text, '') = '') and (obter_idade_pf(b.cd_pessoa_fisica,clock_timestamp(),'A') >= 18))
		or (ie_benef_sem_cpf_p = 'N'))
	and (nr_seq_lote_revisao_p = 0 or exists (select	1
							from	pls_pessoa_inconsistente x
							where	x.cd_pessoa_fisica	= b.cd_pessoa_fisica
							and	x.nr_seq_lote		= nr_seq_lote_revisao_p))
	
union

	select	'PJ' ie_prestador,
		a.cd_cgc,
		b.cd_medico cd_pessoa_fisica,
		a.nr_sequencia,
		a.DT_EXCLUSAO
	FROM pls_prestador a
LEFT OUTER JOIN pls_prestador_medico b ON (a.nr_sequencia = b.nr_seq_prestador)
WHERE a.ie_situacao	= 'A' and coalesce(b.ie_situacao,'A')	= 'A' and trunc(clock_timestamp(),'dd') between trunc(coalesce(b.dt_inclusao,clock_timestamp()),'dd') and fim_dia(trunc(coalesce(b.dt_exclusao,clock_timestamp()),'dd'))  and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_prestador_p in (1,2) and a.cd_estabelecimento	= cd_estabelecimento_p and ((nr_seq_especialidade_p = 0) or (obter_se_especialidade_medico(b.cd_medico, nr_seq_especialidade_p) = 'S')) and ((coalesce(nr_seq_cbo_p,0) = 0) or (obter_dados_pf(b.cd_medico, 'CBOS') = (select	max(cd_cbo) from	cbo_saude	where	nr_sequencia = nr_seq_cbo_p))) and (nr_seq_lote_revisao_p = 0 or exists (select	1
							from	pls_pessoa_inconsistente x
							where	x.cd_cgc	= a.cd_cgc
							and	x.nr_seq_lote	= nr_seq_lote_revisao_p));

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_lote_pagamento
	where	nr_sequencia	in (	SELECT	nr_seq_lote
					from	pls_pagamento_prestador
					where	nr_seq_prestador	= nr_seq_prestador_w);


BEGIN
Obter_Param_Usuario(1228, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_parametro_w);

open C02;
loop
fetch C02 into
	ie_prestador_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	nr_seq_prestador_w,
	dt_exclusao_prestador_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	nr_seq_tipo_prestador_w		:= null;
	ie_tipo_endereco_w		:= '';
	nr_seq_tipo_compl_adic_w	:= null;
	
	select	ie_tipo_endereco,
		nr_seq_tipo_prestador,
		nr_seq_tipo_compl_adic
	into STRICT	ie_tipo_endereco_w,
		nr_seq_tipo_prestador_w,
		nr_seq_tipo_compl_adic_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_w;
	
	if (area_atuacao_prest_p IS NOT NULL AND area_atuacao_prest_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_prestador_w
		from	area_atuacao_medica a,
			pls_prestador_med_espec b
		where	b.nr_seq_area_atuacao	= a.nr_sequencia
		and	b.nr_seq_prestador	= nr_seq_prestador_w
		and	a.nr_sequencia		= area_atuacao_prest_p
		and	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
		and	coalesce(dt_fim_vigencia::text, '') = '';
	
		if (qt_registros_prestador_w	= 0)then
			goto final;
		end if;
	end if;
	
	if (cd_municipio_prest_p IS NOT NULL AND cd_municipio_prest_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_prestador_w
		from	pls_prestador_area
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	cd_municipio_ibge	= cd_municipio_prest_p;
		
		if (qt_registros_prestador_w	= 0) then
			goto final;
		end if;
	end if;
	
	if (sg_uf_prestador_p IS NOT NULL AND sg_uf_prestador_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_prestador_w
		from	pls_prestador_area
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	sg_estado	= sg_uf_prestador_p;
		
		if (qt_registros_prestador_w	= 0) then
			goto final;
		end if;
	end if;
	
	if (nr_seq_regiao_prestador_p IS NOT NULL AND nr_seq_regiao_prestador_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_prestador_w
		from	pls_prestador_area
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	nr_seq_regiao	= nr_seq_regiao_prestador_p;
		
		if (qt_registros_prestador_w	= 0) then
			goto final;
		end if;
	end if;
	
	if (nr_seq_tipo_prestador_p IS NOT NULL AND nr_seq_tipo_prestador_p::text <> '') then
		if (nr_seq_tipo_prestador_p <> coalesce(nr_seq_tipo_prestador_w,0)) then
			goto final;
		end if;
	end if;
	
	if (ie_tipo_endereco_prest_p IS NOT NULL AND ie_tipo_endereco_prest_p::text <> '') then
		if (ie_tipo_endereco_prest_p <> coalesce(ie_tipo_endereco_w,'X')) then
			goto final;
		else
			if (ie_tipo_endereco_prest_p = 'PFA') then
				if (coalesce(nr_seq_tipo_compl_adic_w,0) <> nr_seq_tipo_compl_adic_p) then
					goto final;
				end if;
			end if;
		end if;
	end if;
	
	if (ie_situacao_prest_p <> 0) then
		if (ie_situacao_prest_p = 0) and (dt_exclusao_prestador_w IS NOT NULL AND dt_exclusao_prestador_w::text <> '') and (dt_exclusao_prestador_w <= clock_timestamp()) then
			goto final;
		elsif (ie_situacao_prest_p = 1) and
			((coalesce(dt_exclusao_prestador_w::text, '') = '') or
			((dt_exclusao_prestador_w IS NOT NULL AND dt_exclusao_prestador_w::text <> '') and (dt_exclusao_prestador_w > clock_timestamp()))) then
			goto final;
		end if;
	end if;
	
	if (ie_prestador_w	= 'PJ') and (coalesce(ie_enviar_profissional_p,'N') = 'N') then
		cd_pessoa_fisica_w	:= '';
	end if;
	
	if (coalesce(ie_lote_pagamento_p,'N') = 'S') then
		open C03;
		loop
		fetch C03 into
			nr_seq_lote_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			CALL pls_inserir_mala_direta(cd_pessoa_fisica_w, 0, '',
						'', 0, 0,
						cd_cgc_w, null, nm_usuario_p,
						cd_estabelecimento_p,null, nr_seq_lote_w,nr_seq_lote_revisao_p,ie_parametro_w,
						0, null, ie_considera_ender_prest_p, 0, nr_seq_tipo_compl_adic_p);
			end;
		end loop;
		close C03;
	else
		CALL pls_inserir_mala_direta(cd_pessoa_fisica_w, 0, '',
			'', 0, 0,
			cd_cgc_w, null, nm_usuario_p,
			cd_estabelecimento_p,null,0,nr_seq_lote_revisao_p,ie_parametro_w,
			0, null, ie_considera_ender_prest_p, 0, nr_seq_tipo_compl_adic_p);
	end if;
	
	<<final>>
	nr_seq_prestador_w	:= nr_seq_prestador_w;
	end;
end loop;
close C02;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mala_direta_pck.gerar_prestador ( area_atuacao_prest_p bigint, cd_municipio_prest_p text, sg_uf_prestador_p text, nr_seq_regiao_prestador_p bigint, nr_seq_tipo_prestador_p bigint, ie_tipo_endereco_prest_p text, ie_situacao_prest_p bigint, ie_enviar_profissional_p text, ie_lote_pagamento_p text, nr_seq_tipo_compl_adic_p bigint, ie_considera_ender_prest_p text, nr_seq_lote_revisao_p bigint, ie_benef_sem_cpf_p text, nr_seq_especialidade_p bigint, nr_seq_cbo_p bigint, ie_tipo_prestador_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
