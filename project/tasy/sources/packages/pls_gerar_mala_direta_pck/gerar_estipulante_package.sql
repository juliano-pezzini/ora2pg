-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Estipulante



CREATE OR REPLACE PROCEDURE pls_gerar_mala_direta_pck.gerar_estipulante ( cd_estipulante_pf_p text, cd_cgc_estipulante_p text, ie_situacao_contrato_p bigint, ie_tipo_contrato_p text, nr_seq_subestipulante_p bigint, ie_tipo_contratacao_p text, ie_regulamentacao_p text, nr_contrato_p bigint, nr_contrato_final_p bigint, dt_parametro_de_p timestamp, dt_parametro_ate_p timestamp, ie_tipo_data_p bigint, ie_fator_moderador_p text, nr_seq_plano_p bigint, nr_seq_grupo_contratual_p bigint, ds_parametro_benef_p text, cd_tipo_contato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_mes_reajuste_p timestamp, ie_dt_reajuste_p bigint, nr_seq_lote_carteira_p bigint, nr_seq_lote_notificacao_p bigint) AS $body$
DECLARE


valor_bind_w			sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;
tb_cd_pf_estipulante_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cgc_estipulante_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_pf_subestipulante_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cgc_subestipulante_w	pls_util_cta_pck.t_varchar2_table_15;
tb_nr_seq_contrato_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_intercambio_w		pls_util_cta_pck.t_number_table;
ds_sql_cursor_w			varchar(32000) := null;
ds_sql_groupby_w		varchar(255);

C01 CURSOR(	nr_seq_contrato_pc	pls_contrato.nr_sequencia%type,
		cd_tipo_contato_pc	pls_contrato_contato.cd_tipo_contato%type) FOR
	SELECT	a.nr_sequencia nr_seq_contato,
		a.cd_pessoa_fisica,
		b.dt_nascimento
	from	pessoa_fisica		b,
		pls_contrato_contato	a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_seq_contrato	= nr_seq_contrato_pc
	and	((coalesce(cd_tipo_contato_pc::text, '') = '') or (cd_tipo_contato_pc = a.cd_tipo_contato));

BEGIN
if (ie_tipo_contrato_p = 'CI') then
	ds_sql_cursor_w	:=	'select	b.cd_pessoa_fisica,
					b.cd_cgc,
					(select	max(x.cd_pessoa_fisica)
					from	pls_sub_estipulante x
					where	x.nr_sequencia = a.nr_seq_subestipulante) cd_pf_estipulante_subest,
					(select	max(x.cd_cgc)
					from	pls_sub_estipulante x
					where	x.nr_sequencia = a.nr_seq_subestipulante) cd_cgc_estipulante_subst,
					null nr_seq_contrato,
					b.nr_sequencia nr_seq_intercambio
				from	pls_segurado a,
					pls_intercambio b
				where	b.nr_sequencia = a.nr_seq_intercambio
				and	a.dt_liberacao is not null
				and	a.dt_cancelamento is null ';

	ds_sql_groupby_w	:= 'group by b.cd_pessoa_fisica, b.cd_cgc, a.nr_seq_subestipulante, b.nr_sequencia ';
	
	if (ie_situacao_contrato_p	= 1) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	' and	b.dt_exclusao is null ';
	elsif (ie_situacao_contrato_p	= 2) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	' and	b.dt_exclusao is not null ';
	end if;
	
	if (ds_parametro_benef_p = 1) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_pessoa_fisica is not null ';
	elsif (ds_parametro_benef_p = 2) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_cgc is not null ';
	end if;
	
	if (cd_estipulante_pf_p IS NOT NULL AND cd_estipulante_pf_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_pessoa_fisica = :cd_pessoa_fisica_pc ';
		valor_bind_w := sql_pck.bind_variable(':cd_pessoa_fisica_pc', cd_estipulante_pf_p, valor_bind_w);
	elsif (cd_cgc_estipulante_p IS NOT NULL AND cd_cgc_estipulante_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_cgc = :cd_cgc_pc ';
		valor_bind_w := sql_pck.bind_variable(':cd_cgc_pc', cd_cgc_estipulante_p, valor_bind_w);
	elsif (nr_seq_subestipulante_p IS NOT NULL AND nr_seq_subestipulante_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	a.nr_seq_subestipulante = :nr_seq_subestipulante_pc ';
		valor_bind_w := sql_pck.bind_variable(':nr_seq_subestipulante_pc', nr_seq_subestipulante_p, valor_bind_w);
	end if;
	
	if	(dt_mes_reajuste_p IS NOT NULL AND dt_mes_reajuste_p::text <> '' AND ie_dt_reajuste_p	= 1) then
		ds_sql_cursor_w := ds_sql_cursor_w || '	and	b.nr_mes_reajuste = :nr_mes_reajuste_pc 
							and	trunc(b.dt_inclusao,''mm'') < :dt_mes_reajuste_pc ';
		valor_bind_w := sql_pck.bind_variable(':nr_mes_reajuste_pc', (to_char(dt_mes_reajuste_p, 'mm'))::numeric , valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_mes_reajuste_pc', trunc(dt_mes_reajuste_p,'mm'), valor_bind_w);
	end if;
	
	if (ie_tipo_data_p = 1) then
		if	(dt_parametro_de_p IS NOT NULL AND dt_parametro_de_p::text <> '' AND dt_parametro_ate_p IS NOT NULL AND dt_parametro_ate_p::text <> '') then
			ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.dt_inclusao between :dt_parametro_de_pc and :dt_parametro_ate_pc ';
		elsif (dt_parametro_de_p IS NOT NULL AND dt_parametro_de_p::text <> '') then
			ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.dt_inclusao >= :dt_parametro_de_pc ';
		elsif (dt_parametro_ate_p IS NOT NULL AND dt_parametro_ate_p::text <> '') then
			ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.dt_inclusao <= :dt_parametro_ate_pc ';
		end if;
		valor_bind_w := sql_pck.bind_variable(':dt_parametro_de_pc', fim_dia(dt_parametro_de_p), valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_parametro_ate_pc', fim_dia(dt_parametro_ate_p), valor_bind_w);
	end if;
	
	if (nr_seq_grupo_contratual_p IS NOT NULL AND nr_seq_grupo_contratual_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	exists	(select	1
									from	pls_contrato_grupo x
									where	x.nr_seq_intercambio = b.nr_sequencia
									and	x.nr_seq_grupo = :nr_seq_grupo_contratual_pc) ';
		valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_contratual_pc', nr_seq_grupo_contratual_p, valor_bind_w);
	end if;
else
	ds_sql_cursor_w	:=	'select	b.cd_pf_estipulante,
					b.cd_cgc_estipulante,
					(select	max(x.cd_pessoa_fisica) 
					from	pls_sub_estipulante x
					where	x.nr_sequencia = a.nr_seq_subestipulante) cd_pf_estipulante_subest,
					(select	max(x.cd_cgc)
					from	pls_sub_estipulante x
					where	x.nr_sequencia = a.nr_seq_subestipulante) cd_cgc_estipulante_subst,
					b.nr_sequencia nr_seq_contrato,
					null nr_seq_intercambio
				from	pls_segurado a,
					pls_contrato b
				where	b.nr_sequencia = a.nr_seq_contrato
				and	a.dt_liberacao is not null
				and	a.dt_cancelamento is null ';
	
	ds_sql_groupby_w	:= 'group by b.cd_pf_estipulante, b.cd_cgc_estipulante, a.nr_seq_subestipulante, b.nr_sequencia ';
	
	if (ie_situacao_contrato_p	= 1) then
		ds_sql_cursor_w := ds_sql_cursor_w || '	and	b.dt_rescisao_contrato is null ';
	elsif (ie_situacao_contrato_p	= 2) then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	b.dt_rescisao_contrato is not null ';
	end if;
	
	if (ds_parametro_benef_p = 1) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_pf_estipulante is not null ';
	elsif (ds_parametro_benef_p = 2) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_cgc_estipulante is not null ';
	end if;

	if (cd_estipulante_pf_p IS NOT NULL AND cd_estipulante_pf_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_pf_estipulante = :cd_pf_estipulante_pc ';
		valor_bind_w := sql_pck.bind_variable(':cd_pf_estipulante_pc', cd_estipulante_pf_p, valor_bind_w);
	elsif (cd_cgc_estipulante_p IS NOT NULL AND cd_cgc_estipulante_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w ||	'and b.cd_cgc_estipulante = :cd_cgc_estipulante_pc ';
		valor_bind_w := sql_pck.bind_variable(':cd_cgc_estipulante_pc', cd_cgc_estipulante_p, valor_bind_w);
	elsif (nr_seq_subestipulante_p IS NOT NULL AND nr_seq_subestipulante_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	a.nr_seq_subestipulante = :nr_seq_subestipulante_pc ';
		valor_bind_w := sql_pck.bind_variable(':nr_seq_subestipulante_pc', nr_seq_subestipulante_p, valor_bind_w);
	end if;
	
	if	(nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '' AND nr_contrato_final_p IS NOT NULL AND nr_contrato_final_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w ||	' and	b.nr_contrato between :nr_contrato_inicial_pc and :nr_contrato_final_pc ';
		valor_bind_w := sql_pck.bind_variable(':nr_contrato_inicial_pc', nr_contrato_p, valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':nr_contrato_final_pc', nr_contrato_final_p, valor_bind_w);
	elsif	((nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '') or (nr_contrato_final_p IS NOT NULL AND nr_contrato_final_p::text <> '')) then
		ds_sql_cursor_w := ds_sql_cursor_w ||	' and	b.nr_contrato = :nr_contrato_pc ';
		valor_bind_w := sql_pck.bind_variable(':nr_contrato_pc', coalesce(nr_contrato_p,nr_contrato_final_p), valor_bind_w);
	end if;
	
	if	(dt_mes_reajuste_p IS NOT NULL AND dt_mes_reajuste_p::text <> '' AND ie_dt_reajuste_p	= 1) then
		ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.nr_mes_reajuste = :nr_mes_reajuste_pc 
						and	trunc(b.dt_contrato,''mm'') < :dt_mes_reajuste_pc ';
		valor_bind_w := sql_pck.bind_variable(':nr_mes_reajuste_pc', (to_char(dt_mes_reajuste_p, 'mm'))::numeric , valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_mes_reajuste_pc', trunc(dt_mes_reajuste_p,'mm'), valor_bind_w);
	end if;
	
	if (ie_tipo_data_p = 1) then
		if	(dt_parametro_de_p IS NOT NULL AND dt_parametro_de_p::text <> '' AND dt_parametro_ate_p IS NOT NULL AND dt_parametro_ate_p::text <> '') then
			ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.dt_contrato between :dt_parametro_de_pc and :dt_parametro_ate_pc ';
		elsif (dt_parametro_de_p IS NOT NULL AND dt_parametro_de_p::text <> '') then
			ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.dt_contrato >= :dt_parametro_de_pc ';
		elsif (dt_parametro_ate_p IS NOT NULL AND dt_parametro_ate_p::text <> '') then
			ds_sql_cursor_w := ds_sql_cursor_w || 'and	b.dt_contrato <= :dt_parametro_ate_pc ';
		end if;
		valor_bind_w := sql_pck.bind_variable(':dt_parametro_de_pc', fim_dia(dt_parametro_de_p), valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_parametro_ate_pc', fim_dia(dt_parametro_ate_p), valor_bind_w);
	end if;
	
	if (nr_seq_grupo_contratual_p IS NOT NULL AND nr_seq_grupo_contratual_p::text <> '') then
		ds_sql_cursor_w := ds_sql_cursor_w || ' and	exists	(select	1
									from	pls_contrato_grupo x
									where	x.nr_seq_contrato = b.nr_sequencia
									and	x.nr_seq_grupo = :nr_seq_grupo_contratual_pc) ';
		valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_contratual_pc', nr_seq_grupo_contratual_p, valor_bind_w);
	end if;
end if;

if (nr_seq_lote_notificacao_p IS NOT NULL AND nr_seq_lote_notificacao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and exists	(select 1
								from	pls_notificacao_pagador x
								where	x.nr_seq_pagador	= a.nr_seq_pagador
								and	x.nr_seq_lote		= :nr_seq_lote_notif_pc) ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_notif_pc', nr_seq_lote_notificacao_p, valor_bind_w);
end if;

if (nr_seq_lote_carteira_p IS NOT NULL AND nr_seq_lote_carteira_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	'and exists	(select	1
								from	pls_lote_carteira	x,
									pls_carteira_emissao	y,
									pls_segurado_carteira	z 
								where	z.nr_sequencia		= y.nr_seq_seg_carteira
								and	y.nr_seq_lote		= x.nr_sequencia
								and	z.nr_seq_segurado	= a.nr_sequencia
								and	x.nr_sequencia		= :nr_seq_lote_carteira_pc
								and	x.ie_tipo_lote		= ''E'') ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_carteira_pc', nr_seq_lote_carteira_p, valor_bind_w);
end if;

if (ie_tipo_contratacao_p IS NOT NULL AND ie_tipo_contratacao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w || '	and	exists (select	1
								from	pls_plano x
								where	x.nr_sequencia = a.nr_seq_plano
								and	x.ie_tipo_contratacao	= :ie_tipo_contratacao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':ie_tipo_contratacao_pc', ie_tipo_contratacao_p, valor_bind_w);
end if;

if (ie_regulamentacao_p IS NOT NULL AND ie_regulamentacao_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	' and	exists (select	1
							from	pls_plano x
							where	x.nr_sequencia = a.nr_seq_plano
							and	x.ie_regulamentacao = :ie_regulamentacao_pc) ';
	valor_bind_w := sql_pck.bind_variable(':ie_regulamentacao_pc', ie_regulamentacao_p, valor_bind_w);
end if;

if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
	ds_sql_cursor_w := ds_sql_cursor_w ||	'and	a.nr_seq_plano = :nr_seq_plano_pc ';
	valor_bind_w := sql_pck.bind_variable(':nr_seq_plano_pc', nr_seq_plano_p, valor_bind_w);
end if;

if (ds_parametro_benef_p = 3) then
	ds_sql_cursor_w := ds_sql_cursor_w || ' and	a.nr_seq_subestipulante is not null ';
end if;

ds_sql_cursor_w	:= ds_sql_cursor_w || ds_sql_groupby_w;

valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_cursor_w, valor_bind_w);

loop
	fetch cursor_w bulk collect into	tb_cd_pf_estipulante_w, tb_cd_cgc_estipulante_w, tb_cd_pf_subestipulante_w,
						tb_cd_cgc_subestipulante_w, tb_nr_seq_contrato_w, tb_nr_seq_intercambio_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_cd_pf_estipulante_w.count = 0;
	begin
	
	for i in tb_cd_pf_estipulante_w.first .. tb_cd_pf_estipulante_w.last loop
		begin
		if (ds_parametro_benef_p in (0,1,2)) then
			if ((tb_cd_pf_estipulante_w(i) IS NOT NULL AND (tb_cd_pf_estipulante_w(i))::text <> '')) then
				CALL pls_inserir_mala_direta( tb_cd_pf_estipulante_w(i), tb_nr_seq_contrato_w(i), null,
							'Estipulante PF', null, null,
							null, null, nm_usuario_p,
							cd_estabelecimento_p, null, 0,
							null,null, null,
							null, 'N', tb_nr_seq_intercambio_w(i),
							null);
			elsif ((tb_cd_cgc_estipulante_w(i) IS NOT NULL AND (tb_cd_cgc_estipulante_w(i))::text <> '')) then
				CALL pls_inserir_mala_direta( null, tb_nr_seq_contrato_w(i), null,
							'Estipulante PJ', null, null,
							tb_cd_cgc_estipulante_w(i), null, nm_usuario_p,
							cd_estabelecimento_p, null, 0,
							null,null, null,
							null, 'N', tb_nr_seq_intercambio_w(i),
							null);
			end if;
		end if;
		
		if (ds_parametro_benef_p in (0,3)) then
			if ((tb_cd_pf_subestipulante_w(i) IS NOT NULL AND (tb_cd_pf_subestipulante_w(i))::text <> '')) then
				CALL pls_inserir_mala_direta( tb_cd_pf_subestipulante_w(i), tb_nr_seq_contrato_w(i), null,
							'SubEstipulante', null, null,
							null, null, nm_usuario_p,
							cd_estabelecimento_p, null, 0,
							null, null, null,
							null, 'N', tb_nr_seq_intercambio_w(i), 
							null);
			elsif ((tb_cd_cgc_subestipulante_w(i) IS NOT NULL AND (tb_cd_cgc_subestipulante_w(i))::text <> '')) then
				CALL pls_inserir_mala_direta( null, tb_nr_seq_contrato_w(i), null,
							'SubEstipulante', null, null,
							tb_cd_cgc_subestipulante_w(i), null, nm_usuario_p,
							cd_estabelecimento_p, null, 0,
							null, null, null,
							null, 'N', tb_nr_seq_intercambio_w(i), 
							null);
			end if;
		end if;
		
		if	((ds_parametro_benef_p in (0,4)) and ((tb_nr_seq_contrato_w(i) IS NOT NULL AND (tb_nr_seq_contrato_w(i))::text <> ''))) then
			for r_c01_w in c01(	tb_nr_seq_contrato_w(i),
						cd_tipo_contato_p) loop
				begin
				CALL pls_inserir_mala_direta(r_c01_w.cd_pessoa_fisica, tb_nr_seq_contrato_w(i), null,
							'Contato', null, null,
							null, null, nm_usuario_p,
							cd_estabelecimento_p, r_c01_w.dt_nascimento, 0, 
							null, null, null, 
							r_c01_w.nr_seq_contato, 'N', null, 
							null);
				end;
			end loop;
		end if;
		end;
	end loop;
	end;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mala_direta_pck.gerar_estipulante ( cd_estipulante_pf_p text, cd_cgc_estipulante_p text, ie_situacao_contrato_p bigint, ie_tipo_contrato_p text, nr_seq_subestipulante_p bigint, ie_tipo_contratacao_p text, ie_regulamentacao_p text, nr_contrato_p bigint, nr_contrato_final_p bigint, dt_parametro_de_p timestamp, dt_parametro_ate_p timestamp, ie_tipo_data_p bigint, ie_fator_moderador_p text, nr_seq_plano_p bigint, nr_seq_grupo_contratual_p bigint, ds_parametro_benef_p text, cd_tipo_contato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_mes_reajuste_p timestamp, ie_dt_reajuste_p bigint, nr_seq_lote_carteira_p bigint, nr_seq_lote_notificacao_p bigint) FROM PUBLIC;
