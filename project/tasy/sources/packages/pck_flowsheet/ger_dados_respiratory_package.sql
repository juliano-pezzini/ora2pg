-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pck_flowsheet.ger_dados_respiratory (cd_relatorio_p bigint, ie_dados_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p bigint) AS $body$
DECLARE


    c1 CURSOR FOR
      SELECT distinct nr_atendimento, ds_data, ano
        from (SELECT a.nr_atendimento,
                     pck_flowsheet.get_formata_data(a.dt_monitorizacao) ds_data,
                     to_char(a.dt_monitorizacao, 'yyyy') ano
                from atendimento_monit_resp a,
                     atendimento_paciente b
               where a.dt_monitorizacao between dt_inicial_p and dt_final_p
                 and b.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and a.nr_atendimento = b.nr_atendimento
                 and coalesce(a.ie_situacao, 'A') = 'A'
                 and ((a.qt_fio2 IS NOT NULL AND a.qt_fio2::text <> '') or
                      (a.qt_fluxo_oxigenio IS NOT NULL AND a.qt_fluxo_oxigenio::text <> '') or
                      (a.nr_seq_equipamento IS NOT NULL AND a.nr_seq_equipamento::text <> '') or
                      (a.cd_mod_vent IS NOT NULL AND a.cd_mod_vent::text <> '') or
                      (a.qt_peep IS NOT NULL AND a.qt_peep::text <> '') or
                      (a.qt_vc_prog IS NOT NULL AND a.qt_vc_prog::text <> '') or
                      (a.qt_vci IS NOT NULL AND a.qt_vci::text <> '') or
                      (a.ie_respiracao IS NOT NULL AND a.ie_respiracao::text <> '') or
                      (a.qt_ti_te IS NOT NULL AND a.qt_ti_te::text <> '') or
                      (a.qt_tempo_insp IS NOT NULL AND a.qt_tempo_insp::text <> '') or
                      (a.qt_pc IS NOT NULL AND a.qt_pc::text <> '') or
                      (a.qt_ps IS NOT NULL AND a.qt_ps::text <> '') or
                      (a.qt_pip IS NOT NULL AND a.qt_pip::text <> '') or
                      (a.qt_vmin IS NOT NULL AND a.qt_vmin::text <> '') or
                      (a.qt_freq_vent IS NOT NULL AND a.qt_freq_vent::text <> '') or
                      (a.qt_vce IS NOT NULL AND a.qt_vce::text <> '') or
                      (a.qt_auto_peep IS NOT NULL AND a.qt_auto_peep::text <> '') or
                      (a.qt_pva IS NOT NULL AND a.qt_pva::text <> '') or
                      (a.qt_pplato IS NOT NULL AND a.qt_pplato::text <> '') or
                      (a.qt_cdyn IS NOT NULL AND a.qt_cdyn::text <> '') or
                      (a.qt_rsr IS NOT NULL AND a.qt_rsr::text <> '') or
                      (a.qt_temp_humidifier IS NOT NULL AND a.qt_temp_humidifier::text <> '') or
                      (a.ie_disp_resp_esp IS NOT NULL AND a.ie_disp_resp_esp::text <> ''))
              
union

              select a2.nr_atendimento,
                     pck_flowsheet.get_formata_data(a2.dt_sinal_vital) ds_data,
                     to_char(a2.dt_sinal_vital, 'yyyy') ano
                from atendimento_sinal_vital a2,
                     atendimento_paciente b2
               where a2.nr_atendimento = b2.nr_atendimento
                 and a2.dt_sinal_vital between dt_inicial_p and dt_final_p
                 and b2.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and coalesce(a2.ie_situacao, 'A') = 'A'
                 and coalesce(a2.qt_angulo_cabeceira, 0) > 30
              
union

              select ap.nr_atendimento,
                     pck_flowsheet.get_formata_data(ev.dt_evolucao) ds_data,
                     to_char(ev.dt_evolucao, 'yyyy') ano
                from evolucao_paciente ev,
                     tipo_evolucao te,
                     atendimento_paciente ap
               where ev.ie_evolucao_clinica = te.cd_tipo_evolucao
                 and te.ie_evolu_rel = 42
                 and coalesce(ev.ie_situacao, 'A') = 'A'
                 and ev.nr_atendimento = ap.nr_atendimento
                 and ap.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and ev.dt_evolucao between dt_inicial_p and dt_final_p
                 and (pck_flowsheet.get_plain_text('evolucao_paciente', 'ds_evolucao', 'cd_evolucao', cd_evolucao) IS NOT NULL AND (pck_flowsheet.get_plain_text('evolucao_paciente', 'ds_evolucao', 'cd_evolucao', cd_evolucao))::text <> '')) alias38
       order by nr_atendimento, ano, ds_data;
    r1 c1%rowtype;

    c2 CURSOR FOR
      SELECT a.dt_monitorizacao,
             a.ds_observacao,
             a.nm_usuario,
             a.qt_fio2, --2
             a.qt_fluxo_oxigenio, --3
             a.nr_seq_equipamento, --4
             a.cd_mod_vent, --5
             a.qt_peep, --6
             a.qt_vc_prog, --7
             a.qt_vci, --8
             a.ie_respiracao, --9
             a.qt_ti_te, --12
             a.qt_tempo_insp, --13
             a.qt_pc, --14
             a.qt_ps, --15
             a.qt_pip, --16
             a.qt_vmin, --19
             a.qt_freq_vent, --22
             a.qt_vce, --24
             a.qt_auto_peep, --26
             a.qt_pva, --28
             a.qt_pplato, --29
             a.qt_cdyn, --30
             a.qt_rsr, --31
             a.qt_temp_humidifier, --32
             a.ie_disp_resp_esp, --35
             obter_valor_dominio_idioma(2816, a.ie_canula_traqueo, 8) ie_canula_traqueo, --102
             a.nr_protese, --103
             a.qt_rima_labial  --104
        from atendimento_monit_resp a
       where a.nr_atendimento = r1.nr_atendimento
         and pck_flowsheet.get_formata_data(a.dt_monitorizacao) = r1.ds_data
         and to_char(a.dt_monitorizacao, 'yyyy') = r1.ano
         and coalesce(a.ie_situacao,'A') = 'A'
         and ((a.qt_fio2 IS NOT NULL AND a.qt_fio2::text <> '') or
              (a.qt_fluxo_oxigenio IS NOT NULL AND a.qt_fluxo_oxigenio::text <> '') or
              (a.nr_seq_equipamento IS NOT NULL AND a.nr_seq_equipamento::text <> '') or
              (a.cd_mod_vent IS NOT NULL AND a.cd_mod_vent::text <> '') or
              (a.qt_peep IS NOT NULL AND a.qt_peep::text <> '') or
              (a.qt_vc_prog IS NOT NULL AND a.qt_vc_prog::text <> '') or
              (a.qt_vci IS NOT NULL AND a.qt_vci::text <> '') or
              (a.ie_respiracao IS NOT NULL AND a.ie_respiracao::text <> '') or
              (a.qt_ti_te IS NOT NULL AND a.qt_ti_te::text <> '') or
              (a.qt_tempo_insp IS NOT NULL AND a.qt_tempo_insp::text <> '') or
              (a.qt_pc IS NOT NULL AND a.qt_pc::text <> '') or
              (a.qt_ps IS NOT NULL AND a.qt_ps::text <> '') or
              (a.qt_pip IS NOT NULL AND a.qt_pip::text <> '') or
              (a.qt_vmin IS NOT NULL AND a.qt_vmin::text <> '') or
              (a.qt_freq_vent IS NOT NULL AND a.qt_freq_vent::text <> '') or
              (a.qt_vce IS NOT NULL AND a.qt_vce::text <> '') or
              (a.qt_auto_peep IS NOT NULL AND a.qt_auto_peep::text <> '') or
              (a.qt_pva IS NOT NULL AND a.qt_pva::text <> '') or
              (a.qt_pplato IS NOT NULL AND a.qt_pplato::text <> '') or
              (a.qt_cdyn IS NOT NULL AND a.qt_cdyn::text <> '') or
              (a.qt_rsr IS NOT NULL AND a.qt_rsr::text <> '') or
              (a.qt_temp_humidifier IS NOT NULL AND a.qt_temp_humidifier::text <> '') or
              (a.ie_disp_resp_esp IS NOT NULL AND a.ie_disp_resp_esp::text <> ''))
       order by a.dt_monitorizacao desc LIMIT 1;
    r2 c2%rowtype;

    c3 CURSOR FOR
      SELECT a2.qt_angulo_cabeceira,
             a2.dt_sinal_vital,
             a2.nm_usuario,
             substr(a2.ds_observacao, 1, 255) ds_observacao
				from atendimento_sinal_vital a2
	 	   where a2.nr_atendimento = r1.nr_atendimento
			   and pck_flowsheet.get_formata_data(a2.dt_sinal_vital) = r1.ds_data
         and to_char(a2.dt_sinal_vital, 'yyyy') = r1.ano
				 and coalesce(a2.ie_situacao, 'A') = 'A'
         and coalesce(a2.qt_angulo_cabeceira, 0) > 30
       order by a2.dt_sinal_vital desc LIMIT 1;
    r3 c3%rowtype;

    c4 CURSOR FOR
      SELECT pck_flowsheet.get_plain_text('evolucao_paciente', 'ds_evolucao', 'cd_evolucao', cd_evolucao) ds_evolucao,
             ev.nm_usuario,
             ev.dt_evolucao,
             ev.ds_impressao ds_observacao
        from evolucao_paciente ev,
             tipo_evolucao te
       where ev.ie_evolucao_clinica = te.cd_tipo_evolucao
         and te.ie_evolu_rel = 42
         and coalesce(ev.ie_situacao, 'A') = 'A'
         and ev.nr_atendimento = r1.nr_atendimento
         and pck_flowsheet.get_formata_data(ev.dt_evolucao) = r1.ds_data
         and to_char(ev.dt_evolucao, 'yyyy') = r1.ano
         and (pck_flowsheet.get_plain_text('evolucao_paciente', 'ds_evolucao', 'cd_evolucao', cd_evolucao) IS NOT NULL AND (pck_flowsheet.get_plain_text('evolucao_paciente', 'ds_evolucao', 'cd_evolucao', cd_evolucao))::text <> '')
       order by ev.dt_evolucao desc LIMIT 1;
    r4 c4%rowtype;

    c5 CURSOR FOR
      SELECT min(a5.dt_instalacao) dt_instalacao
        from atend_pac_dispositivo a5,
             dispositivo b5
       where a5.nr_seq_dispositivo = b5.nr_sequencia
         and b5.ie_classif_disp_niss in ('VMI', 'Resp')
         and a5.nr_atendimento = r1.nr_atendimento
         and a5.dt_instalacao <= coalesce(r2.dt_monitorizacao, dt_final_p)
         and (coalesce(a5.dt_retirada::text, '') = '' or a5.dt_retirada >= dt_inicial_p);
    r5 c5%rowtype;

    w_val_flowsheet_w w_rel_val_flowsheet%rowtype;
    w_audit_flowsheet_w w_rel_audit_flowsheet%rowtype;

    pg_w bigint;
    cl_w bigint;
    nr_w atendimento_paciente.nr_atendimento%type;
    chk_w smallint;

  
BEGIN

    w_val_flowsheet_w.nr_relatorio := cd_relatorio_p;
    w_val_flowsheet_w.cd_pessoa_fisica := cd_pessoa_fisica_p;
    pg_w := null;
    cl_w := null;
    nr_w := null;
    chk_w := 0;

    w_audit_flowsheet_w.nr_relatorio := cd_relatorio_p;
    w_audit_flowsheet_w.cd_pessoa_fisica := cd_pessoa_fisica_p;
    w_audit_flowsheet_w.nm_usuario := wheb_usuario_pck.get_nm_usuario;
    w_audit_flowsheet_w.nr_ordem :=  2;

    -- Loop por paciente
    open c1;
    loop
      fetch c1 into r1;
      EXIT WHEN NOT FOUND; /* apply on c1 */

        open c2;
          fetch c2 into r2;
        close c2;

        open c3;
          fetch c3 into r3;
        close c3;

        open c4;
          fetch c4 into r4;
        close c4;

        if coalesce(nr_w::text, '') = '' then
          nr_w := r1.nr_atendimento;
          pg_w := 1;
          cl_w := 1;
          chk_w := 1;
        else
          cl_w := cl_w + 1;
          chk_w := 0;
        end if;

        if nr_w <> r1.nr_atendimento then
          nr_w := r1.nr_atendimento;
          pg_w := pg_w + 1;
          cl_w := 1;
          chk_w := 1;
        end if;

        if cl_w = 9 then
          pg_w := pg_w + 1;
          cl_w := 1;
        end if;

        w_val_flowsheet_w.nr_atendimento := r1.nr_atendimento;
        w_val_flowsheet_w.ds_data_hora   := r1.ds_data;
        w_val_flowsheet_w.nr_pagina      := pg_w;
        w_val_flowsheet_w.ds_tipo_soma   := cl_w;

        w_audit_flowsheet_w.nr_atendimento := r1.nr_atendimento;

        -- Comments
        w_audit_flowsheet_w.dt_evento := to_char(r2.dt_monitorizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor  := r2.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Respiratory', r2.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r4.dt_evolucao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor  := r4.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Dyspnea asessment', r4.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r3.dt_sinal_vital, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor  := r3.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('HOB > 30', r3.ds_observacao, w_audit_flowsheet_w);

        -- 1 - SETTINGS --
        w_val_flowsheet_w.nr_ordem := 1;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        -- 2 - FIO2 --
        w_val_flowsheet_w.nr_ordem := 2;
        w_val_flowsheet_w.ds_valor := r2.qt_fio2;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        -- 3 LPM O2
        w_val_flowsheet_w.nr_ordem := 3;
        w_val_flowsheet_w.ds_valor := r2.qt_fluxo_oxigenio;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --4 O2 Admin device
        w_val_flowsheet_w.nr_ordem := 4;
        w_val_flowsheet_w.ds_valor := r2.nr_seq_equipamento;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --5  Mode of Ventilation
        w_val_flowsheet_w.nr_ordem := 5;
        w_val_flowsheet_w.ds_valor := r2.cd_mod_vent;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --6  PEEP
        w_val_flowsheet_w.nr_ordem := 6;
        w_val_flowsheet_w.ds_valor := r2.qt_peep;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --7  Tidal Volume (set)
        w_val_flowsheet_w.nr_ordem := 7;
        w_val_flowsheet_w.ds_valor := r2.qt_vc_prog;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --8  Vent Rate
        w_val_flowsheet_w.nr_ordem := 8;
        w_val_flowsheet_w.ds_valor := r2.qt_vci;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --9  CPAP
        w_val_flowsheet_w.nr_ordem := 9;
        w_val_flowsheet_w.ds_valor := r2.ie_respiracao;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --10  PEEP/CPAP
        w_val_flowsheet_w.nr_ordem := 10;
        w_val_flowsheet_w.ds_valor := r2.qt_peep;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --11  TV/ kg IBW
        w_val_flowsheet_w.nr_ordem := 11;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --12  I:E Ratio
        w_val_flowsheet_w.nr_ordem := 12;
        w_val_flowsheet_w.ds_valor := r2.qt_ti_te;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --13  Inspiratory Time
        w_val_flowsheet_w.nr_ordem := 13;
        w_val_flowsheet_w.ds_valor := r2.qt_tempo_insp;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --14  Pressure Control
        w_val_flowsheet_w.nr_ordem := 14;
        w_val_flowsheet_w.ds_valor := r2.qt_pc;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --15  Pressure Support
        w_val_flowsheet_w.nr_ordem := 15;
        w_val_flowsheet_w.ds_valor := r2.qt_ps;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --16  Peak Flow
        w_val_flowsheet_w.nr_ordem := 16;
        w_val_flowsheet_w.ds_valor := r2.qt_pip;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --17  Flow to Trigger PS
        w_val_flowsheet_w.nr_ordem := 17;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --18  Pressure to trigger PS
        w_val_flowsheet_w.nr_ordem := 18;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --19  TIDAL VOLUME (SIGN)
        w_val_flowsheet_w.nr_ordem := 19;
        w_val_flowsheet_w.ds_valor := r2.qt_vmin;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --20  Sifh Rate
        w_val_flowsheet_w.nr_ordem := 20;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --21  PT/VENT Data
        w_val_flowsheet_w.nr_ordem := 21;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --22  Total RR
        w_val_flowsheet_w.nr_ordem := 22;
        w_val_flowsheet_w.ds_valor := r2.qt_freq_vent;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --23  Exhaled Tv (machine)
        w_val_flowsheet_w.nr_ordem := 23;
        w_val_flowsheet_w.ds_valor := r2.qt_vc_prog;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --24  Exhaled Tv (patient)
        w_val_flowsheet_w.nr_ordem := 24;
        w_val_flowsheet_w.ds_valor := r2.qt_vce;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --25  Exhaled MV
        w_val_flowsheet_w.nr_ordem := 25;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --26  Auto PEEP
        w_val_flowsheet_w.nr_ordem := 26;
        w_val_flowsheet_w.ds_valor := r2.qt_auto_peep;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --27  Peak Insp pressure
        w_val_flowsheet_w.nr_ordem := 27;
        w_val_flowsheet_w.ds_valor := r2.qt_pip;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --28  Mean away pressure
        w_val_flowsheet_w.nr_ordem := 28;
        w_val_flowsheet_w.ds_valor := r2.qt_pva;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --29  Plateau pressure
        w_val_flowsheet_w.nr_ordem := 29;
        w_val_flowsheet_w.ds_valor := r2.qt_pplato;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --30  compliance
        w_val_flowsheet_w.nr_ordem := 30;
        w_val_flowsheet_w.ds_valor := r2.qt_cdyn;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --31  Resistance
        w_val_flowsheet_w.nr_ordem := 31;
        w_val_flowsheet_w.ds_valor := r2.qt_rsr;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --32  Humidifier temp
        w_val_flowsheet_w.nr_ordem := 32;
        w_val_flowsheet_w.ds_valor := r2.qt_temp_humidifier;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --33  Dyspnea asessment
        w_val_flowsheet_w.nr_ordem := 33;
        w_val_flowsheet_w.ds_valor := r4.ds_evolucao;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --34  CARE Data
        w_val_flowsheet_w.nr_ordem := 34;
        w_val_flowsheet_w.ds_valor := ''; --Avaliacao e Nota clinica (exame fisico)???
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --35  Bag/Mask (attached to O2)
        w_val_flowsheet_w.nr_ordem := 35;
        w_val_flowsheet_w.ds_valor := obter_valor_dominio_idioma(1612, r2.ie_disp_resp_esp, 8);
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --36  Alarms checked
        w_val_flowsheet_w.nr_ordem := 36;
        w_val_flowsheet_w.ds_valor := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        --37  HOB > 30';
        w_val_flowsheet_w.nr_ordem := 37;
        w_val_flowsheet_w.ds_valor := r3.qt_angulo_cabeceira;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p => w_val_flowsheet_w);

        if chk_w = 1 then

          open c5;
            fetch c5 into r5;
          close c5;

          -- 101 - Date
          w_val_flowsheet_w.nr_ordem       := 101;
          w_val_flowsheet_w.ds_valor       := to_char(r2.dt_monitorizacao, 'mm/dd/yyyy hh24:mi:ss');
          CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

          -- 102 - Airway Type
          w_val_flowsheet_w.nr_ordem       := 102;
          w_val_flowsheet_w.ds_valor       := r2.ie_canula_traqueo;
          CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

          -- 103 - Airway Position
          w_val_flowsheet_w.nr_ordem       := 103;
          w_val_flowsheet_w.ds_valor       := r2.qt_rima_labial;
          CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

          -- 104 - Airway Size
          w_val_flowsheet_w.nr_ordem       := 104;
          w_val_flowsheet_w.ds_valor       := r2.nr_protese;
          CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

          -- 105 - Protective Lung Ventilation
          w_val_flowsheet_w.nr_ordem       := 105;
          w_val_flowsheet_w.ds_valor       := '';
          CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

          -- 106 - Vent Start Date Time
          w_val_flowsheet_w.nr_ordem       := 106;
          w_val_flowsheet_w.ds_valor       := to_char(r5.dt_instalacao, 'MM/DD HH24:MI');
          CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

          r5 := null;

        end if;

        r2 := null;
        r3 := null;
        r4 := null;

        commit;

    end loop;
    close c1;

    commit;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pck_flowsheet.ger_dados_respiratory (cd_relatorio_p bigint, ie_dados_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p bigint) FROM PUBLIC;
