-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pck_flowsheet.ger_dados_vital_signs (cd_relatorio_p bigint, ie_dados_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p bigint) AS $body$
DECLARE


    c2 CURSOR FOR
      SELECT distinct ds_data, nr_atendimento, ano
        from (SELECT pck_flowsheet.get_formata_data(a1.dt_avaliacao) ds_data,
                     b1.nr_atendimento,
                     to_char(a1.dt_avaliacao, 'yyyy') ano
                from atend_escala_indice a1,
                     atendimento_paciente b1
               where a1.dt_avaliacao between dt_inicial_p and dt_final_p
                 and a1.nr_atendimento = b1.nr_atendimento
                 and coalesce(a1.ie_situacao,'A') = 'A'
                 and b1.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and ((a1.qt_glasgow IS NOT NULL AND a1.qt_glasgow::text <> '') or
                      (a1.ie_resposta_motora IS NOT NULL AND a1.ie_resposta_motora::text <> '') or
                      (a1.ie_resposta_verbal IS NOT NULL AND a1.ie_resposta_verbal::text <> '') or
                      (a1.ie_abertura_ocular IS NOT NULL AND a1.ie_abertura_ocular::text <> ''))
              
union

              select pck_flowsheet.get_formata_data(a2.dt_sinal_vital) ds_data,
                     b2.nr_atendimento,
                     to_char(a2.dt_sinal_vital, 'yyyy') ano
                from atendimento_sinal_vital a2,
                     atendimento_paciente b2
               where a2.dt_sinal_vital between dt_inicial_p and dt_final_p
                 and a2.nr_atendimento = b2.nr_atendimento
                 and coalesce(a2.ie_situacao,'A') = 'A'
                 and b2.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and ((a2.qt_escala_dor IS NOT NULL AND a2.qt_escala_dor::text <> '') or
                      (a2.qt_saturacao_o2 IS NOT NULL AND a2.qt_saturacao_o2::text <> '') or
                      (a2.cd_escala_dor IS NOT NULL AND a2.cd_escala_dor::text <> '') or
                      (a2.qt_temp IS NOT NULL AND a2.qt_temp::text <> '') or
                      (a2.qt_freq_cardiaca IS NOT NULL AND a2.qt_freq_cardiaca::text <> '') or
                      (a2.ie_aparelho_pa IS NOT NULL AND a2.ie_aparelho_pa::text <> ''))
              
union

              select pck_flowsheet.get_formata_data(a3.dt_avaliacao) ds_data,
                     b3.nr_atendimento,
                     to_char(a3.dt_avaliacao, 'yyyy') ano
                from escala_risco_delirium a3,
                     atendimento_paciente b3
               where a3.dt_avaliacao between dt_inicial_p and dt_final_p
                 and a3.nr_atendimento = b3.nr_atendimento
                 and coalesce(a3.ie_situacao,'A') = 'A'
                 and b3.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and regexp_replace(obter_result_delirium(a3.nr_sequencia), '[a-z]|\(|\)|\ ', '') is not null
              
union

              select pck_flowsheet.get_formata_data(a4.dt_monitoracao) ds_data,
                     b4.nr_atendimento,
                     to_char(a4.dt_monitoracao, 'yyyy') ano
                from atend_monit_hemod a4,
                     atendimento_paciente b4
               where a4.dt_monitoracao between dt_inicial_p and dt_final_p
                 and a4.nr_atendimento = b4.nr_atendimento
                 and coalesce(a4.ie_situacao,'A') = 'A'
                 and b4.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and ((a4.qt_pvc IS NOT NULL AND a4.qt_pvc::text <> '') or
                      (a4.qt_debito_card IS NOT NULL AND a4.qt_debito_card::text <> '') or
                      (a4.tx_indice_card IS NOT NULL AND a4.tx_indice_card::text <> '') or
                      (a4.qt_rv_sistemica IS NOT NULL AND a4.qt_rv_sistemica::text <> '') or
                      (a4.tx_rv_sistemica IS NOT NULL AND a4.tx_rv_sistemica::text <> '') or
                      (a4.qt_rv_pulmonar IS NOT NULL AND a4.qt_rv_pulmonar::text <> '') or
                      (a4.tx_rv_pulmonar IS NOT NULL AND a4.tx_rv_pulmonar::text <> ''))
              
union

              select pck_flowsheet.get_formata_data(a5.dt_monitorizacao) ds_data,
                     b5.nr_atendimento,
                     to_char(a5.dt_monitorizacao, 'yyyy') ano
                from atendimento_monit_resp a5,
                     atendimento_paciente b5
               where a5.dt_monitorizacao between dt_inicial_p and dt_final_p
                 and a5.nr_atendimento = b5.nr_atendimento
                 and coalesce(a5.ie_situacao,'A') = 'A'
                 and b5.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and ((a5.qt_freq_resp IS NOT NULL AND a5.qt_freq_resp::text <> '') or
                      (a5.qt_saturacao_o2 IS NOT NULL AND a5.qt_saturacao_o2::text <> '') or
                      (a5.nr_seq_equipamento IS NOT NULL AND a5.nr_seq_equipamento::text <> '') or
                      (a5.qt_fluxo_oxigenio IS NOT NULL AND a5.qt_fluxo_oxigenio::text <> ''))
              
union

              select pck_flowsheet.get_formata_data(b1.dt_liberacao) ds_data,
                     e1.nr_atendimento,
                     to_char(b1.dt_liberacao, 'yyyy') ano
                from prescr_medica a1,
                     prescr_material b1,
                     material c1,
                     classe_material d1,
                     atendimento_paciente e1
               where a1.nr_prescricao = b1.nr_prescricao
                 and b1.cd_material = c1.cd_material
                 and c1.cd_classe_material = d1.cd_classe_material
                 and a1.nr_atendimento = e1.nr_atendimento
                 and c1.ie_situacao = 'A'
                 and d1.ie_situacao = 'A'
                 and (c1.cd_medicamento IS NOT NULL AND c1.cd_medicamento::text <> '')
                 and d1.ie_classe_material_rel in (41, 42)
                 and coalesce(a1.dt_suspensao::text, '') = ''
                 and coalesce(b1.dt_suspensao::text, '') = ''
                 and (b1.qt_dose IS NOT NULL AND b1.qt_dose::text <> '')
                 and e1.cd_pessoa_fisica = cd_pessoa_fisica_p
                 and b1.dt_liberacao between dt_inicial_p and dt_final_p
               
union

               select pck_flowsheet.get_formata_data(c.dt_atualizacao) ds_data,
                      e.nr_atendimento,
                     to_char(c.dt_atualizacao, 'yyyy') ano
                 from pe_prescricao a,
                      pe_prescr_proc b,
                      pe_item_result_proc c,
                      cp_intervention d,
                      atendimento_paciente e
                where a.nr_atendimento = e.nr_atendimento
                  and b.nr_seq_prescr = a.nr_sequencia
                  and b.nr_seq_result = c.nr_seq_result
                  and c.nr_seq_proc = d.nr_seq_pe_procedimento
                  and d.ie_interv_sae_rel in (11, 12, 13, 14, 15, 16)
                  and coalesce(a.ie_situacao, 'A') = 'A'
                  and coalesce(b.dt_suspensao::text, '') = ''
                  and e.cd_pessoa_fisica = cd_pessoa_fisica_p
                  and c.dt_atualizacao between dt_inicial_p and dt_final_p) alias54
       order by nr_atendimento, ano, ds_data;
    r2 c2%rowtype;

    c_escala_indice CURSOR FOR
      SELECT a.qt_glasgow,
             a.ie_resposta_motora,
             --a.atend_escala_indice,
             a.ie_resposta_verbal,
             a.ie_abertura_ocular
        from atend_escala_indice a
       where coalesce(a.ie_situacao,'A') = 'A'
         and to_char(a.dt_avaliacao, 'yyyy') = r2.ano
         and pck_flowsheet.get_formata_data(a.dt_avaliacao) = r2.ds_data
         and a.nr_atendimento = r2.nr_atendimento
         and ((a.qt_glasgow IS NOT NULL AND a.qt_glasgow::text <> '') or
              (a.ie_resposta_motora IS NOT NULL AND a.ie_resposta_motora::text <> '') or
              (a.ie_resposta_verbal IS NOT NULL AND a.ie_resposta_verbal::text <> '') or
              (a.ie_abertura_ocular IS NOT NULL AND a.ie_abertura_ocular::text <> ''))
       order by a.dt_avaliacao desc LIMIT 1;
    r_escala_indice c_escala_indice%rowtype;

    c_escala_dor CURSOR FOR
      SELECT a.qt_escala_dor,
             a.qt_saturacao_o2,
             substr(obter_valor_dominio_idioma(1298,a.cd_escala_dor, 8),1,11) ds_escala_dor,
             a.qt_temp,
             a.qt_freq_cardiaca,
             obter_valor_dominio_idioma(1306, a.ie_aparelho_pa, 8) ie_aparelho_pa,
             case
               when a.ie_aparelho_pa in ('C', 'E') and ((a.qt_pa_sistolica IS NOT NULL AND a.qt_pa_sistolica::text <> '') or (a.qt_pa_diastolica IS NOT NULL AND a.qt_pa_diastolica::text <> '')) 
               then coalesce(a.qt_pa_sistolica, 0) + coalesce(a.qt_pa_diastolica, 0)
               else null
             end qt_noinvasive_mean,
             case 
               when a.ie_aparelho_pa = 'I' and ((a.qt_pa_sistolica IS NOT NULL AND a.qt_pa_sistolica::text <> '') or (a.qt_pa_diastolica IS NOT NULL AND a.qt_pa_diastolica::text <> '')) 
               then coalesce(a.qt_pa_sistolica, 0) + coalesce(a.qt_pa_diastolica, 0)
               else null
             end qt_invasive_mean,
             substr(a.ds_observacao, 1, 255) ds_observacao,
             a.dt_sinal_vital,
             a.nm_usuario
        from atendimento_sinal_vital a
       where coalesce(a.ie_situacao,'A') = 'A'
         and to_char(a.dt_sinal_vital, 'yyyy') = r2.ano
         and pck_flowsheet.get_formata_data(a.dt_sinal_vital) = r2.ds_data
         and a.nr_atendimento = r2.nr_atendimento 
         and ((a.qt_escala_dor IS NOT NULL AND a.qt_escala_dor::text <> '') or
              (a.qt_saturacao_o2 IS NOT NULL AND a.qt_saturacao_o2::text <> '') or
              (a.cd_escala_dor IS NOT NULL AND a.cd_escala_dor::text <> '') or
              (a.qt_temp IS NOT NULL AND a.qt_temp::text <> '') or
              (a.qt_freq_cardiaca IS NOT NULL AND a.qt_freq_cardiaca::text <> '') or
              (a.ie_aparelho_pa IS NOT NULL AND a.ie_aparelho_pa::text <> ''))
       order by a.dt_sinal_vital desc LIMIT 1;
    r_escala_dor c_escala_dor%rowtype;

    c_escala_risco_delirium CURSOR FOR
      SELECT regexp_replace(obter_result_delirium(a.nr_sequencia), '[a-z]|\(|\)|\ ', '') ds_risco_delirium
        from escala_risco_delirium a
       where to_char(a.dt_avaliacao, 'yyyy') = r2.ano
         and coalesce(a.ie_situacao,'A') = 'A'
         and pck_flowsheet.get_formata_data(a.dt_avaliacao) = r2.ds_data
         and a.nr_atendimento = r2.nr_atendimento
         and regexp_replace(obter_result_delirium(a.nr_sequencia), '[a-z]|\(|\)|\ ', '') is not null
       order by a.dt_avaliacao desc LIMIT 1;
    r_escala_risco_delirium c_escala_risco_delirium%rowtype;

    c_monit_resp CURSOR FOR
      SELECT a.qt_freq_resp,
             a.qt_saturacao_o2,
             a.nr_seq_equipamento,
             a.qt_fluxo_oxigenio,
             a.ds_observacao,
             a.dt_monitorizacao,
             a.nm_usuario
        from atendimento_monit_resp a
       where to_char(a.dt_monitorizacao, 'yyyy') = r2.ano
         and coalesce(a.ie_situacao,'A') = 'A'
         and pck_flowsheet.get_formata_data(a.dt_monitorizacao) = r2.ds_data
         and a.nr_atendimento = r2.nr_atendimento
         and ((a.qt_freq_resp IS NOT NULL AND a.qt_freq_resp::text <> '') or
              (a.qt_saturacao_o2 IS NOT NULL AND a.qt_saturacao_o2::text <> '') or
              (a.nr_seq_equipamento IS NOT NULL AND a.nr_seq_equipamento::text <> '') or
              (a.qt_fluxo_oxigenio IS NOT NULL AND a.qt_fluxo_oxigenio::text <> ''))
       order by a.dt_monitorizacao desc LIMIT 1;
    r_monit_resp c_monit_resp%rowtype;

    c_monit_hemod CURSOR FOR
      SELECT a.qt_pvc,
             a.qt_debito_card,
             a.tx_indice_card,
             --a.qt_saturacao,  ????????
             a.qt_rv_sistemica,
             a.tx_rv_sistemica,
             a.qt_rv_pulmonar,
             a.tx_rv_pulmonar
        from atend_monit_hemod a
       where to_char(a.dt_monitoracao, 'yyyy') = r2.ano
         and coalesce(a.ie_situacao,'A') = 'A'
         and pck_flowsheet.get_formata_data(a.dt_monitoracao) = r2.ds_data
         and a.nr_atendimento = r2.nr_atendimento
         and ((a.qt_pvc IS NOT NULL AND a.qt_pvc::text <> '') or
              (a.qt_debito_card IS NOT NULL AND a.qt_debito_card::text <> '') or
              (a.tx_indice_card IS NOT NULL AND a.tx_indice_card::text <> '') or
              (a.qt_rv_sistemica IS NOT NULL AND a.qt_rv_sistemica::text <> '') or
              (a.tx_rv_sistemica IS NOT NULL AND a.tx_rv_sistemica::text <> '') or
              (a.qt_rv_pulmonar IS NOT NULL AND a.qt_rv_pulmonar::text <> '') or
              (a.tx_rv_pulmonar IS NOT NULL AND a.tx_rv_pulmonar::text <> ''))
       order by a.dt_monitoracao desc LIMIT 1;
    r_monit_hemod c_monit_hemod%rowtype;

    c_prescr_material CURSOR(ie_tipo_rel_p classe_material.ie_classe_material_rel%type) FOR
      SELECT sum(b1.qt_dose) ds_valor
        from prescr_medica a1,
             prescr_material b1,
             material c1,
             classe_material d1
       where a1.nr_prescricao = b1.nr_prescricao
         and b1.cd_material = c1.cd_material
         and c1.cd_classe_material = d1.cd_classe_material
         and (c1.cd_medicamento IS NOT NULL AND c1.cd_medicamento::text <> '')
         and d1.ie_classe_material_rel = ie_tipo_rel_p
         and c1.ie_situacao = 'A'
         and d1.ie_situacao = 'A'
         and coalesce(a1.dt_suspensao::text, '') = ''
         and coalesce(b1.dt_suspensao::text, '') = ''
         and (b1.qt_dose IS NOT NULL AND b1.qt_dose::text <> '')
         and to_char(b1.dt_liberacao, 'yyyy') = r2.ano
         and a1.nr_atendimento = r2.nr_atendimento
         and pck_flowsheet.get_formata_data(b1.dt_liberacao) = r2.ds_data;
    r_prescr_material_41 c_prescr_material%rowtype;
    r_prescr_material_42 c_prescr_material%rowtype;

    c_prescr_proc CURSOR(ie_tipo_rel_p cp_intervention.ie_interv_sae_rel%type) FOR
      SELECT e.ds_resultado,
             substr(b.ds_observacao, 1, 255) ds_observacao,
             c.dt_atualizacao,
             b.nm_usuario
        from pe_prescricao a,
             pe_prescr_proc b,
             pe_item_result_proc c,
             cp_intervention d,
             pe_item_resultado e
       where to_char(c.dt_atualizacao, 'yyyy') = r2.ano
         and b.nr_seq_prescr = a.nr_sequencia
         and b.nr_seq_result = c.nr_seq_result
         and c.nr_seq_proc = d.nr_seq_pe_procedimento
         and d.ie_interv_sae_rel = ie_tipo_rel_p
         and coalesce(a.ie_situacao, 'A') = 'A'
         and coalesce(b.dt_suspensao::text, '') = ''
         and a.nr_atendimento = r2.nr_atendimento
         and pck_flowsheet.get_formata_data(c.dt_atualizacao) = r2.ds_data
         and e.nr_sequencia = c.nr_seq_result 
       order by c.dt_atualizacao desc LIMIT 1;
    r_prescr_proc_11 c_prescr_proc%rowtype;
    r_prescr_proc_12 c_prescr_proc%rowtype;
    r_prescr_proc_13 c_prescr_proc%rowtype;
    r_prescr_proc_14 c_prescr_proc%rowtype;
    r_prescr_proc_15 c_prescr_proc%rowtype;
    r_prescr_proc_16 c_prescr_proc%rowtype;

    w_val_flowsheet_w w_rel_val_flowsheet%rowtype;
    w_audit_flowsheet_w w_rel_audit_flowsheet%rowtype;

    pg_w bigint;
    cl_w bigint;
    nr_w atendimento_paciente.nr_atendimento%type;

  
BEGIN

    w_val_flowsheet_w.nr_relatorio := cd_relatorio_p;
    w_val_flowsheet_w.cd_pessoa_fisica := cd_pessoa_fisica_p;

    pg_w := null;
    cl_w := null;
    nr_w := null;

    w_audit_flowsheet_w.nr_relatorio := cd_relatorio_p;
    w_audit_flowsheet_w.cd_pessoa_fisica := cd_pessoa_fisica_p;
    w_audit_flowsheet_w.nr_ordem :=  2;

    open c2;
    loop
      fetch c2 into r2;
      EXIT WHEN NOT FOUND; /* apply on c2 */

        open c_escala_indice;
          fetch c_escala_indice into r_escala_indice;
        close c_escala_indice;

        open c_escala_dor;
          fetch c_escala_dor into r_escala_dor;
        close c_escala_dor;

        open c_monit_resp;
          fetch c_monit_resp into r_monit_resp;
        close c_monit_resp;

        open c_monit_hemod;
          fetch c_monit_hemod into r_monit_hemod;
        close c_monit_hemod;

        open c_escala_risco_delirium;
          fetch c_escala_risco_delirium into r_escala_risco_delirium;
        close c_escala_risco_delirium;

        open c_prescr_material(41);
          fetch c_prescr_material into r_prescr_material_41;
        close c_prescr_material;

        open c_prescr_material(42);
          fetch c_prescr_material into r_prescr_material_42;
        close c_prescr_material;

        open c_prescr_proc(11);
          fetch c_prescr_proc into r_prescr_proc_11;
        close c_prescr_proc;

        open c_prescr_proc(12);
          fetch c_prescr_proc into r_prescr_proc_12;
        close c_prescr_proc;

        open c_prescr_proc(13);
          fetch c_prescr_proc into r_prescr_proc_13;
        close c_prescr_proc;

        open c_prescr_proc(14);
          fetch c_prescr_proc into r_prescr_proc_14;
        close c_prescr_proc;

        open c_prescr_proc(15);
          fetch c_prescr_proc into r_prescr_proc_15;
        close c_prescr_proc;

        open c_prescr_proc(16);
          fetch c_prescr_proc into r_prescr_proc_16;
        close c_prescr_proc;

        if coalesce(nr_w::text, '') = '' then
          nr_w := r2.nr_atendimento;
          pg_w := 1;
          cl_w := 1;
        else
          cl_w := cl_w + 1;
        end if;

        if nr_w <> r2.nr_atendimento then
          nr_w := r2.nr_atendimento;
          pg_w := pg_w + 1;
          cl_w := 1;
        end if;

        if cl_w = 13 then
          pg_w := pg_w + 1;
          cl_w := 1;
        end if;

        w_val_flowsheet_w.nr_atendimento := r2.nr_atendimento;
        w_val_flowsheet_w.ds_data_hora   := r2.ds_data;
        w_val_flowsheet_w.nr_pagina      := pg_w;
        w_val_flowsheet_w.ds_tipo_soma   := cl_w;

        w_audit_flowsheet_w.nr_atendimento := r2.nr_atendimento;

        -- Comments
        w_audit_flowsheet_w.dt_evento := to_char(r_monit_resp.dt_monitorizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_monit_resp.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Respiratory', r_monit_resp.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_escala_dor.dt_sinal_vital, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_escala_dor.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Vital Signs', r_escala_dor.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_prescr_proc_11.dt_atualizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_prescr_proc_11.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Capillary Refil/Left Hand', r_prescr_proc_11.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_prescr_proc_12.dt_atualizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_prescr_proc_12.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Site Check', r_prescr_proc_12.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_prescr_proc_13.dt_atualizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_prescr_proc_13.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Pulses', r_prescr_proc_13.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_prescr_proc_14.dt_atualizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_prescr_proc_14.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Dorsiflex/Flush', r_prescr_proc_14.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_prescr_proc_15.dt_atualizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_prescr_proc_15.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Left Brachial Pulse', r_prescr_proc_15.ds_observacao, w_audit_flowsheet_w);

        w_audit_flowsheet_w.dt_evento := to_char(r_prescr_proc_16.dt_atualizacao, 'MM/DD/YYYY HH24:MI:SS');
        w_audit_flowsheet_w.ds_autor := r_prescr_proc_16.nm_usuario;
        CALL pck_flowsheet.verify_and_insert_audit('Distal Pulse', r_prescr_proc_16.ds_observacao, w_audit_flowsheet_w);

        -- 1 - GCS Total
        w_val_flowsheet_w.nr_ordem       := 1;
        w_val_flowsheet_w.ds_valor       := r_escala_indice.qt_glasgow;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 2 - motor
        w_val_flowsheet_w.nr_ordem       := 2;
        w_val_flowsheet_w.ds_valor       := r_escala_indice.ie_resposta_motora;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 3 - Verbal
        w_val_flowsheet_w.nr_ordem       := 3;
        w_val_flowsheet_w.ds_valor       := r_escala_indice.ie_resposta_verbal;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 4 - eyes
        w_val_flowsheet_w.nr_ordem       := 4;
        w_val_flowsheet_w.ds_valor       := r_escala_indice.ie_abertura_ocular;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 5 - pain score
        w_val_flowsheet_w.nr_ordem       := 5;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_escala_dor;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 6 - Pain goal
        w_val_flowsheet_w.nr_ordem       := 6;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.ds_escala_dor;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 7 - pca-iv
        w_val_flowsheet_w.nr_ordem       := 7;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 8 - pcea epidural
        w_val_flowsheet_w.nr_ordem       := 8;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 9- setation scale
        w_val_flowsheet_w.nr_ordem       := 9;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 10 - setation score
        w_val_flowsheet_w.nr_ordem       := 10;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 11 - setation goal
        w_val_flowsheet_w.nr_ordem       := 11;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 12 - delirium scale
        w_val_flowsheet_w.nr_ordem       := 12;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 13 - delirium score
        w_val_flowsheet_w.nr_ordem       := 13;
        w_val_flowsheet_w.ds_valor       := r_escala_risco_delirium.ds_risco_delirium;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 14 - bedside glucose
        w_val_flowsheet_w.nr_ordem       := 14;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 15 - vital signs
        w_val_flowsheet_w.nr_ordem       := 15;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 16 - temperature (c)
        w_val_flowsheet_w.nr_ordem       := 16;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_temp;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 17 - heart rate (bpm)
        w_val_flowsheet_w.nr_ordem       := 17;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_freq_cardiaca;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 18 - rhythm
        w_val_flowsheet_w.nr_ordem       := 18;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 19 - no-invasive bp sys/dias
        w_val_flowsheet_w.nr_ordem       := 19;
        w_val_flowsheet_w.ds_valor       := pck_flowsheet.abreviar(r_escala_dor.ie_aparelho_pa);
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 20 - nvasive BP Mean
        w_val_flowsheet_w.nr_ordem       := 20;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_noinvasive_mean;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 21 - invasive bp sys/dias
        w_val_flowsheet_w.nr_ordem       := 21;
        w_val_flowsheet_w.ds_valor       := pck_flowsheet.abreviar(r_escala_dor.ie_aparelho_pa);
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 22 - invasive bp mean
        w_val_flowsheet_w.nr_ordem       := 22;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_invasive_mean;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 23 - iabp - intra aortic balloon pump
        w_val_flowsheet_w.nr_ordem       := 23;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 24 - iabp - iabp augmented diastolic
        w_val_flowsheet_w.nr_ordem       := 24;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 25 - iabp mean
        w_val_flowsheet_w.nr_ordem       := 25;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 26 - iabp mean
        w_val_flowsheet_w.nr_ordem       := 26;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 27 - iabp % augmentation
        w_val_flowsheet_w.nr_ordem       := 27;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 28 - iabp ratio
        w_val_flowsheet_w.nr_ordem       := 28;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 29 - capillary refil left hand
        w_val_flowsheet_w.nr_ordem       := 29;
        w_val_flowsheet_w.ds_valor       := r_prescr_proc_11.ds_resultado;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 30 - site check
        w_val_flowsheet_w.nr_ordem       := 30;
        w_val_flowsheet_w.ds_valor       := r_prescr_proc_12.ds_resultado;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 31 - pulses
        w_val_flowsheet_w.nr_ordem       := 31;
        w_val_flowsheet_w.ds_valor       := r_prescr_proc_13.ds_resultado;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 32 - dorsiflex/flush
        w_val_flowsheet_w.nr_ordem       := 32;
        w_val_flowsheet_w.ds_valor       := r_prescr_proc_14.ds_resultado;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 33 - left brachial pulse
        w_val_flowsheet_w.nr_ordem       := 33;
        w_val_flowsheet_w.ds_valor       := r_prescr_proc_15.ds_resultado;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 34 - distal pulse
        w_val_flowsheet_w.nr_ordem       := 34;
        w_val_flowsheet_w.ds_valor       := r_prescr_proc_16.ds_resultado;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 35 - icp (mmhg)
        w_val_flowsheet_w.nr_ordem       := 35;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 36 - cpp
        w_val_flowsheet_w.nr_ordem       := 36;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 37 - end tidal co2 (mmhg)
        w_val_flowsheet_w.nr_ordem       := 37;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 38 - cvp (mmhg)
        w_val_flowsheet_w.nr_ordem       := 38;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.qt_pvc;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 39 - respiratory rate (bpm)
        w_val_flowsheet_w.nr_ordem       := 39;
        w_val_flowsheet_w.ds_valor       := r_monit_resp.qt_freq_resp;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 40 - o2 saturation (%)
        w_val_flowsheet_w.nr_ordem       := 40;
        w_val_flowsheet_w.ds_valor       := r_monit_resp.qt_saturacao_o2;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 41 - o2 admin device
        w_val_flowsheet_w.nr_ordem       := 41;
        w_val_flowsheet_w.ds_valor       := r_monit_resp.nr_seq_equipamento;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 42 - o2 l%
        w_val_flowsheet_w.nr_ordem       := 42;
        w_val_flowsheet_w.ds_valor       := r_monit_resp.qt_fluxo_oxigenio;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 43 - ventricular assistend device
        w_val_flowsheet_w.nr_ordem       := 43;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 44 - vad type
        w_val_flowsheet_w.nr_ordem       := 44;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 45 - vmode
        w_val_flowsheet_w.nr_ordem       := 45;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 46 - flow rate (l/min)
        w_val_flowsheet_w.nr_ordem       := 46;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 47 - beat rate
        w_val_flowsheet_w.nr_ordem       := 47;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 48 - fill volume (ml)
        w_val_flowsheet_w.nr_ordem       := 48;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 49 - Invasive
        w_val_flowsheet_w.nr_ordem       := 49;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 50 -pa systolic/diastolic
        w_val_flowsheet_w.nr_ordem       := 50;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_invasive_mean;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 51 -pa mean
        w_val_flowsheet_w.nr_ordem       := 51;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.ie_aparelho_pa;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 52 - co (l/min)
        w_val_flowsheet_w.nr_ordem       := 52;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.qt_debito_card;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 53 - ci (l/min/m2)
        w_val_flowsheet_w.nr_ordem       := 53;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.tx_indice_card;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 54 - svo2%
        w_val_flowsheet_w.nr_ordem       := 54;
        w_val_flowsheet_w.ds_valor       := r_escala_dor.qt_saturacao_o2;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 55 - sv (ml/beat)
        w_val_flowsheet_w.nr_ordem       := 55;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 56 - paop (mmhg)
        w_val_flowsheet_w.nr_ordem       := 56;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 57 - svr (dynes x sec x cm5)
        w_val_flowsheet_w.nr_ordem       := 57;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.qt_rv_sistemica;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 58 - svri (dyne sec/cm2/m2)
        w_val_flowsheet_w.nr_ordem       := 58;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.tx_rv_sistemica;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 59 - pvr (dynes x sec x cm5)
        w_val_flowsheet_w.nr_ordem       := 59;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.qt_rv_pulmonar;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 60 - pvri (dyne x sec x cm5)
        w_val_flowsheet_w.nr_ordem       := 60;
        w_val_flowsheet_w.ds_valor       := r_monit_hemod.tx_rv_pulmonar;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 61 - continuous infusions
        w_val_flowsheet_w.nr_ordem       := 61;
        w_val_flowsheet_w.ds_valor       := '';
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 62 - abciximab
        w_val_flowsheet_w.nr_ordem       := 62;
        w_val_flowsheet_w.ds_valor       := r_prescr_material_41.ds_valor;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 63 - amiodarone
        w_val_flowsheet_w.nr_ordem       := 63;
        w_val_flowsheet_w.ds_valor       := r_prescr_material_42.ds_valor;
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        -- 64 - electrolyte replacement
        w_val_flowsheet_w.nr_ordem       := 64;
        w_val_flowsheet_w.ds_valor       := '';--electrolyte replacement
        CALL pck_flowsheet.insert_valor(w_val_flowsheet_p   => w_val_flowsheet_w);

        r_escala_indice := null;
        r_escala_dor := null;
        r_escala_risco_delirium := null;
        r_monit_resp := null;
        r_monit_hemod := null;
        r_prescr_material_41 := null;
        r_prescr_material_42 := null;
        r_prescr_proc_11 := null;
        r_prescr_proc_12 := null;
        r_prescr_proc_13 := null;
        r_prescr_proc_14 := null;
        r_prescr_proc_15 := null;
        r_prescr_proc_16 := null;

        commit;

    end loop;
    close c2;

    commit;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pck_flowsheet.ger_dados_vital_signs (cd_relatorio_p bigint, ie_dados_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p bigint) FROM PUBLIC;
