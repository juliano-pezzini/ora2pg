-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pck_flowsheet.ger_dados_audit_respiratory (cd_relatorio_p bigint, ie_dados_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p bigint) AS $body$
DECLARE


    c1 CURSOR FOR
      SELECT distinct nr_atendimento
        from w_rel_val_flowsheet t
       where t.nm_usuario = wheb_usuario_pck.get_nm_usuario
         and t.nr_relatorio = cd_relatorio_p;
    r1 c1%rowtype;

   	c2 CURSOR FOR
      SELECT a.dt_monitorizacao,
             a.dt_inativacao,
             a.ds_justificativa,
             a.nm_usuario_inativacao,
             a.qt_fio2, --2
             a.qt_fluxo_oxigenio, --3
             a.nr_seq_equipamento, --4
             a.cd_mod_vent, --5
             a.qt_peep, --6
             a.qt_vc_prog, --7
             a.qt_vci, --8
             a.ie_respiracao, --9
             a.qt_ti_te, --12
             a.qt_tempo_insp, --13
             a.qt_pc, --14
             a.qt_ps, --15
             a.qt_pip, --16
             a.qt_vmin, --19
             a.qt_freq_vent, --22
             a.qt_vce, --24
             a.qt_auto_peep, --26
             a.qt_pva, --28
             a.qt_pplato, --29
             a.qt_cdyn, --30
             a.qt_rsr, --31
             a.qt_temp_humidifier, --32
             obter_valor_dominio_idioma(1612, a.ie_disp_resp_esp, 8) ie_disp_resp_esp  --35
        from atendimento_monit_resp a
       where a.dt_monitorizacao between dt_inicial_p and dt_final_p
         and a.nr_atendimento = r1.nr_atendimento
         and (a.dt_inativacao IS NOT NULL AND a.dt_inativacao::text <> '')
         and a.ie_situacao = 'I';
    r2 c2%rowtype;

    c3 CURSOR FOR
      SELECT a.qt_angulo_cabeceira,
             a.dt_inativacao,
             a.ds_justificativa,
             a.dt_sinal_vital,
             a.nm_usuario_inativacao
        from atendimento_sinal_vital a
       where a.nr_atendimento = r1.nr_atendimento
         and coalesce(a.qt_angulo_cabeceira, 0) > 30
         and (a.dt_inativacao IS NOT NULL AND a.dt_inativacao::text <> '')
         and a.dt_sinal_vital between dt_inicial_p and dt_final_p
         and a.ie_situacao = 'I';
    r3 c3%rowtype;

    c4 CURSOR FOR
      SELECT pck_flowsheet.get_plain_text('evolucao_paciente', 'ds_evolucao', 'cd_evolucao', cd_evolucao) ds_evolucao,
             ev.nm_usuario_inativacao,
             ev.dt_evolucao,
             ev.dt_inativacao,
             ev.ds_justificativa
        from evolucao_paciente ev,
             tipo_evolucao te
       where ev.ie_evolucao_clinica = te.cd_tipo_evolucao
         and te.ie_evolu_rel = 42
         and ev.ie_situacao = 'I'
         and (ev.dt_inativacao IS NOT NULL AND ev.dt_inativacao::text <> '')
         and ev.nr_atendimento = r1.nr_atendimento
         and ev.dt_evolucao between dt_inicial_p and dt_final_p;
    r4 c4%rowtype;

    w_audit_flowsheet_w w_rel_audit_flowsheet%rowtype;


BEGIN

    w_audit_flowsheet_w.nr_relatorio := cd_relatorio_p;
    w_audit_flowsheet_w.nr_ordem := 1;
    w_audit_flowsheet_w.cd_pessoa_fisica := cd_pessoa_fisica_p;
    w_audit_flowsheet_w.nm_usuario := wheb_usuario_pck.get_nm_usuario;

    -- Loop por paciente
    open c1;
    loop
      fetch c1 into r1;
      EXIT WHEN NOT FOUND; /* apply on c1 */

        w_audit_flowsheet_w.nr_atendimento := r1.nr_atendimento;

        open c2;
        loop
          fetch c2 into r2;
          EXIT WHEN NOT FOUND; /* apply on c2 */

            w_audit_flowsheet_w.dt_evento := to_char(r2.dt_monitorizacao, 'MM/DD/YYYY HH24:MI:SS');
            w_audit_flowsheet_w.dt_inativacao := to_char(r2.dt_inativacao, 'MM/DD/YYYY HH24:MI:SS');
         		w_audit_flowsheet_w.ds_motivo := r2.ds_justificativa;
            w_audit_flowsheet_w.ds_autor := r2.nm_usuario_inativacao;

            CALL pck_flowsheet.verify_and_insert_audit('FIO2', r2.qt_fio2, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('LPM O2', r2.qt_fluxo_oxigenio, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('O2 Admin device', r2.nr_seq_equipamento, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Mode of Ventilation', r2.cd_mod_vent, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('PEEP', r2.qt_peep, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Tidal Volume (set)', r2.qt_vc_prog, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Vent Rate', r2.qt_vci, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('CPAP', r2.ie_respiracao, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('PEEP/CPAP', r2.qt_peep, w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('TV/ kg IBW', r1., w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('I:E Ratio', r2.qt_ti_te, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Inspiratory Time', r2.qt_tempo_insp, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Pressure Control', r2.qt_pc, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Pressure Support', r2.qt_ps, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Peak Flow', r2.qt_pip, w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('Flow to Trigger PS', r1., w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('Pressure to trigger PS', r1., w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Tidal volume (sign)', r2.qt_vmin, w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('Sifh Rate', r1., w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('PT/VENT Data', r1., w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Total RR', r2.qt_freq_vent, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Exhaled Tv (machine)', r2.qt_vc_prog, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Exhaled Tv (patient)', r2.qt_vce, w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('Exhaled MV', r1., w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Auto PEEP', r2.qt_auto_peep, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Peak Insp pressure', r2.qt_pip, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Mean away pressure', r2.qt_pva, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Plateau pressure', r2.qt_pplato, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Compliance', r2.qt_cdyn, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Resistance', r2.qt_rsr, w_audit_flowsheet_w);
						CALL pck_flowsheet.verify_and_insert_audit('Humidifier temp', r2.qt_temp_humidifier, w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('Dyspnea asessment', r1., w_audit_flowsheet_w); DS_EVOLUCAO
						--pck_flowsheet.verify_and_insert_audit('CARE Data', r1., w_audit_flowsheet_w);
				    CALL pck_flowsheet.verify_and_insert_audit('Bag/Mask (attached to O2)', r2.ie_disp_resp_esp, w_audit_flowsheet_w);
						--pck_flowsheet.verify_and_insert_audit('Alarms checked', r1., w_audit_flowsheet_w);
        end loop;
        close c2;

        open c3;
        loop
          fetch c3 into r3;
          EXIT WHEN NOT FOUND; /* apply on c3 */

         		w_audit_flowsheet_w.dt_evento := to_char(r3.dt_sinal_vital, 'MM/DD/YYYY HH24:MI:SS');
            w_audit_flowsheet_w.dt_inativacao := to_char(r3.dt_inativacao, 'MM/DD/YYYY HH24:MI:SS');
         		w_audit_flowsheet_w.ds_motivo := r3.ds_justificativa;
            w_audit_flowsheet_w.ds_autor := r3.nm_usuario_inativacao;

         		CALL pck_flowsheet.verify_and_insert_audit('HOB > 30', r3.qt_angulo_cabeceira, w_audit_flowsheet_w);

        end loop;
        close c3;

        open c4;
        loop
          fetch c4 into r4;
          EXIT WHEN NOT FOUND; /* apply on c4 */

            w_audit_flowsheet_w.dt_evento := to_char(r4.dt_evolucao, 'MM/DD/YYYY HH24:MI:SS');
            w_audit_flowsheet_w.dt_inativacao := to_char(r4.dt_inativacao, 'MM/DD/YYYY HH24:MI:SS');
         		w_audit_flowsheet_w.ds_motivo := r4.ds_justificativa;
            w_audit_flowsheet_w.ds_autor := r4.nm_usuario_inativacao;

         		CALL pck_flowsheet.verify_and_insert_audit('Dyspnea Asessment', r4.ds_evolucao, w_audit_flowsheet_w);

        end loop;
        close c4;

        commit;

    end loop;
    close c1;

    commit;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pck_flowsheet.ger_dados_audit_respiratory (cd_relatorio_p bigint, ie_dados_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p bigint) FROM PUBLIC;
