-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*-------------------
caseprocedurechangemult - request
*/
CREATE OR REPLACE FUNCTION ish_case_proc_data_pck.get_procedure_change_mult (nr_seq_fila_p bigint) RETURNS SETOF T_PROCEDURE_CHANGE_MULT AS $body$
DECLARE


cd_empresa_w			estabelecimento.cd_empresa%type;
current_setting('ish_case_proc_data_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type		estabelecimento.cd_estabelecimento%type;
procedimento_paciente_w		procedimento_paciente%rowtype;
ds_versao_catalogo_w		varchar(20);
nr_seq_episodio_w			atendimento_paciente.nr_seq_episodio%type;
nr_episodio_w			episodio_paciente.nr_episodio%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
movemntseqno_w			varchar(100);
oplivdon_w			varchar(1);
cd_procedimento_loc_w		procedimento.cd_procedimento_loc%type;
cd_procedimento_w		procedimento.cd_procedimento_loc%type;
cd_procedimento_pesq_w		procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w		procedimento_paciente.ie_origem_proced%type;
surprocseqno_w			varchar(255);
r_procedure_change_mult_w		r_procedure_change_mult;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
nr_sequencia_w			procedimento_paciente.nr_sequencia%type;
dt_geral_w			varchar(255);
cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type;


BEGIN
begin
select	coalesce(b.ie_conversao,'I'),
	b.nr_seq_regra_conv,
	b.nr_seq_projeto_xml,
	a.nr_seq_documento
into STRICT	ie_conversao_w,
	nr_seq_regra_w,
	nr_seq_projeto_xml_w,
	nr_sequencia_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia		= nr_seq_fila_p;
exception
when others then
	null;
end;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

reg_integracao_w.ie_somente_alterados		:= 'S';
reg_integracao_w.nm_elemento			:= 'urn:CaseprocedureChangemult';

begin
select	*
into STRICT	procedimento_paciente_w
from	procedimento_paciente
where	nr_sequencia = nr_sequencia_w;
exception
when others then
	procedimento_paciente_w	:=	null;
end;

if (procedimento_paciente_w.nr_sequencia IS NOT NULL AND procedimento_paciente_w.nr_sequencia::text <> '') then
	begin
	select	max(a.cd_empresa),
		max(a.cd_estabelecimento),
		max(b.nr_seq_episodio)
	into STRICT	cd_empresa_w,
		current_setting('ish_case_proc_data_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type,
		nr_seq_episodio_w
	from	estabelecimento a,
		atendimento_paciente b
	where	a.cd_estabelecimento	= b.cd_estabelecimento
	and	b.nr_atendimento = procedimento_paciente_w.nr_atendimento;	

	begin
	select	CASE WHEN a.ie_doador='R' THEN 'X'  ELSE '' END ,
		b.nr_episodio
	into STRICT	oplivdon_w,
		nr_episodio_w
	from	pessoa_fisica a,
		episodio_paciente b
	where	b.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	b.nr_sequencia = nr_seq_episodio_w;	
	exception
	when others then
		null;
	end;
	
	reg_integracao_w.nm_tabela	:= 'ESTABELECIMENTO';
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA','client', 'N', cd_empresa_w, 'S', r_procedure_change_mult_w.client);
	
	reg_integracao_w.nm_tabela	:= 'PROCEDIMENTO_PACIENTE';
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','surprocseqno', 'N', procedimento_paciente_w.nr_sequencia, 'S', surprocseqno_w);
	r_procedure_change_mult_w.surprocseqno	:= obter_valor_campo_separador(surprocseqno_w, 2, current_setting('ish_case_proc_data_pck.ds_separador_w')::varchar(10));
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','surprocseqnox', 'S', procedimento_paciente_w.nr_sequencia, 'N', r_procedure_change_mult_w.surprocseqnox);

	reg_integracao_w.nm_tabela	:= 'PROCEDIMENTO_VERSAO';
	reg_integracao_w.nm_elemento	:= 'CaseprocedureCdata';
	
	--busca a versao do catalogo do procedimento, com base na data do procedimento
	select	max(a.dt_versao)
	into STRICT	ds_versao_catalogo_w
	from	procedimento_versao a
	where	a.cd_procedimento	= procedimento_paciente_w.cd_procedimento
	and	a.ie_origem_proced	= procedimento_paciente_w.ie_origem_proced
	and	procedimento_paciente_w.dt_procedimento between coalesce(a.dt_vigencia_inicial,procedimento_paciente_w.dt_procedimento) and coalesce(a.dt_vigencia_final,clock_timestamp() + interval '1 days');

	dt_geral_w	:=	null;
	
	if (coalesce(dt_geral_w,'X') = 'X') then
		r_procedure_change_mult_w.sgprcatalog	:= to_char(clock_timestamp(),'YY');
	else			
		r_procedure_change_mult_w.sgprcatalog	:= to_char(to_date(dt_geral_w),'YY');
	end if;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_VERSAO','sgprcatalog', 'N', r_procedure_change_mult_w.sgprcatalog, 'N', dt_geral_w);	
	
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_VERSAO','sgprcatalogx', 'S', ds_versao_catalogo_w, 'N', r_procedure_change_mult_w.sgprcatalogx);		
	
	reg_integracao_w.nm_tabela	:= 'PROCEDIMENTO_PACIENTE';
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_PROCEDIMENTO','sgprcode', 'N', procedimento_paciente_w.cd_procedimento, 'N', cd_procedimento_pesq_w);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_ORIGEM_PROCED','sgprcode', 'N', procedimento_paciente_w.ie_origem_proced, 'N', ie_origem_proced_w);
	
	select	upper(coalesce(max(cd_procedimento_loc),procedimento_paciente_w.cd_procedimento)),
		upper(max(cd_procedimento_loc))
	into STRICT	cd_procedimento_loc_w,
		cd_procedimento_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_pesq_w
	and	ie_origem_proced	= ie_origem_proced_w;
	
	if (coalesce(cd_procedimento_w::text, '') = '') then
		begin
		r_procedure_change_mult_w.sgprcode	:= cd_procedimento_loc_w;
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_PROCEDIMENTO','sgprcodex', 'S', cd_procedimento_loc_w, 'N', r_procedure_change_mult_w.sgprcodex);
		end;
	else
		begin
		r_procedure_change_mult_w.sgprcode	:= cd_procedimento_w;
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_PROCEDIMENTO','sgprcodex', 'S', cd_procedimento_w, 'N', r_procedure_change_mult_w.sgprcodex);
		end;
	end if;
	
--	r_procedure_change_mult_w.ruletype		:=
--	r_procedure_change_mult_w.prcactionseqno	:=
	r_procedure_change_mult_w.action		:= 'U';
--	r_procedure_change_mult_w.movementproposal	:=
--	r_procedure_change_mult_w.drgmode		:=
--	r_procedure_change_mult_w.maincode		:= procedimento_paciente_w.ie_origem_proced;
--	r_procedure_change_mult_w.maincodex		:= 'X';
--	r_procedure_change_mult_w.addnumber		:=
--	r_procedure_change_mult_w.addnumberx		:=
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_PROCEDIMENTO','begindate', 'N', procedimento_paciente_w.dt_procedimento, 'N', dt_geral_w);
	r_procedure_change_mult_w.begindate	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_PROCEDIMENTO','begindatex', 'S', procedimento_paciente_w.dt_procedimento, 'N', r_procedure_change_mult_w.begindatex);
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_PROCEDIMENTO','begintime', 'N', procedimento_paciente_w.dt_procedimento, 'N', dt_geral_w);
	r_procedure_change_mult_w.begintime	:= to_char(to_date(dt_geral_w),'hh24:mi:ss');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_PROCEDIMENTO','begintimex', 'S', procedimento_paciente_w.dt_procedimento, 'N', r_procedure_change_mult_w.begintimex);
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_PROCEDIMENTO','endtime', 'N', procedimento_paciente_w.dt_procedimento, 'N', dt_geral_w);
	r_procedure_change_mult_w.endtime	:= to_char(to_date(dt_geral_w),'hh24:mi:ss');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_PROCEDIMENTO','endtimex', 'S', procedimento_paciente_w.dt_procedimento, 'N', r_procedure_change_mult_w.endtimex);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_LADO','localis', 'N', procedimento_paciente_w.ie_lado, 'S', r_procedure_change_mult_w.localis);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_LADO','localisx', 'S', procedimento_paciente_w.ie_lado, 'N', r_procedure_change_mult_w.localisx);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','externalid', 'N', procedimento_paciente_w.nr_sequencia, 'N', r_procedure_change_mult_w.externalid);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','externalidx', 'S', procedimento_paciente_w.nr_sequencia, 'N', r_procedure_change_mult_w.externalidx);
--	r_procedure_change_mult_w.surgerytype		:=
--	r_procedure_change_mult_w.surgerytypex		:=
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO','updatedate', 'N', procedimento_paciente_w.dt_atualizacao, 'N', dt_geral_w);
	r_procedure_change_mult_w.updatedate	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO','updatedatex', 'S', procedimento_paciente_w.dt_atualizacao, 'N', r_procedure_change_mult_w.updatedatex);
	r_procedure_change_mult_w.updateuser		:= current_setting('ish_case_proc_data_pck.usernameish')::varchar(15);
	r_procedure_change_mult_w.updateuserx		:= 'X';
--	r_procedure_change_mult_w.cancelind		:=
--	r_procedure_change_mult_w.cancelindx		:=
--	r_procedure_change_mult_w.canceluser		:=
--	r_procedure_change_mult_w.canceluserx		:=
--	r_procedure_change_mult_w.canceldate		:=
--	r_procedure_change_mult_w.canceldatex		:=
--	r_procedure_change_mult_w.tcode			:=
--	r_procedure_change_mult_w.tcodex		:=
	reg_integracao_w.nm_tabela		:= 'ESTABELECIMENTO';
	reg_integracao_w.nm_elemento		:= 'urn:CaseprocedureChangemult';
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO','institution', 'S', current_setting('ish_case_proc_data_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type, 'S', r_procedure_change_mult_w.institution);
	reg_integracao_w.nm_tabela		:= 'EPISODIO_PACIENTE';
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_EPISODIO','patcaseid', 'S', nr_episodio_w, 'N', r_procedure_change_mult_w.patcaseid);
--	r_procedure_change_mult_w.procremark		:=
--	r_procedure_change_mult_w.genevent		:=
--	r_procedure_change_mult_w.genobject		:=
--	r_procedure_change_mult_w.drgprocseqno		:=
	begin
	select	CASE WHEN a.ie_proc_princ='S' THEN 'P'  ELSE CASE WHEN a.ie_proc_adicional='S' THEN 'S'  ELSE null END  END  drgproccategory
	into STRICT	r_procedure_change_mult_w.drgproccategory
	from	procedimento_pac_medico a
	where	a.nr_seq_propaci	= procedimento_paciente_w.nr_sequencia
	and	a.nr_atendimento	= procedimento_paciente_w.nr_atendimento
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	a.ie_situacao		= 'A'  LIMIT 1;
	exception
	when others then
		r_procedure_change_mult_w.drgproccategory := null;
	end;

	r_procedure_change_mult_w.drgproccategoryx	:= 'X';
--	r_procedure_change_mult_w.drgrelevant		:=
--	r_procedure_change_mult_w.longtext		:=
--	r_procedure_change_mult_w.deptou		:=
	reg_integracao_w.nm_tabela	:= 'PROCEDIMENTO_PACIENTE';
	reg_integracao_w.nm_elemento	:= 'CaseprocedureCdata';		
	
	begin		
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_SETOR_ATENDIMENTO','perfou', 'N', procedimento_paciente_w.cd_setor_atendimento, 'N', cd_setor_atendimento_w);
	
	if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then		
		select	cd_setor_externo			
		into STRICT	r_procedure_change_mult_w.perfou
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w
		and	coalesce(cd_setor_externo,'NULL') <> 'NULL'  LIMIT 1;			
	end if;
	exception
	when others then
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_SETOR_ATENDIMENTO','perfou', 'N', procedimento_paciente_w.cd_setor_atendimento, 'S', cd_setor_atendimento_w);
	end;
	
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_SETOR_ATENDIMENTO','perfoux', 'S', procedimento_paciente_w.cd_setor_atendimento, 'N', r_procedure_change_mult_w.perfoux);
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_FINAL_PROCEDIMENTO','enddate', 'N', procedimento_paciente_w.dt_final_procedimento, 'N', dt_geral_w);
	r_procedure_change_mult_w.enddate	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_FINAL_PROCEDIMENTO','enddatex', 'S', procedimento_paciente_w.dt_final_procedimento, 'N', r_procedure_change_mult_w.enddatex);
--	r_procedure_change_mult_w.proceduretype		:=
--	r_procedure_change_mult_w.proceduretypex	:=
	if (procedimento_paciente_w.ie_origem_proced <> 11) then
		begin
		intpd_processar_atrib_envio(reg_integracao_w, 'QT_PROCEDIMENTO','quantity', 'N', procedimento_paciente_w.qt_procedimento, 'N', r_procedure_change_mult_w.quantity);
		intpd_processar_atrib_envio(reg_integracao_w, 'QT_PROCEDIMENTO','quantityx', 'S', procedimento_paciente_w.qt_procedimento, 'N', r_procedure_change_mult_w.quantityx);
		end;
	end if;
--	r_procedure_change_mult_w.unit			:=
--	r_procedure_change_mult_w.unitx		:=
--	r_procedure_change_mult_w.drgimpact		:=
--	r_procedure_change_mult_w.drgimpactx		:=
--	r_procedure_change_mult_w.drgccl		:=
--	r_procedure_change_mult_w.drgcclx		:=
	reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA';
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_DOADOR','oplivdon', 'N', oplivdon_w, 'N', r_procedure_change_mult_w.oplivdon);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_DOADOR','oplivdonx', 'S', oplivdon_w, 'N', r_procedure_change_mult_w.oplivdonx);

	RETURN NEXT r_procedure_change_mult_w;
	end;
end if;

CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_case_proc_data_pck.get_procedure_change_mult (nr_seq_fila_p bigint) FROM PUBLIC;
