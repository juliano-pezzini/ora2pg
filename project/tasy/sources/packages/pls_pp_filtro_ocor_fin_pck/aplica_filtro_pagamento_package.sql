-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_filtro_ocor_fin_pck.aplica_filtro_pagamento ( ie_considera_selecao_p INOUT boolean, qt_filtro_processado_p INOUT integer, nr_id_transacao_p pls_pp_rp_ofin_selecao.nr_id_transacao%type, ie_excecao_p pls_pp_rp_cta_filtro.ie_excecao%type, nr_seq_filtro_p pls_pp_rp_cta_filtro.nr_sequencia%type, cd_condicao_pagamento_p pls_pp_lote.cd_condicao_pagamento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
_ora2pg_r RECORD;
dados_restricao_w	varchar(10000);
valor_bind_w		sql_pck.t_dado_bind;
ds_campos_w		varchar(500);
ds_tabela_w		varchar(500);
ds_select_w		varchar(32000);
cursor_w		sql_pck.t_cursor;

tb_seq_prestador_w	pls_util_cta_pck.t_number_table;
tb_seq_evento_w		pls_util_cta_pck.t_number_table;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;

c_filtro CURSOR(nr_seq_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_evento
	from	pls_pp_rp_filtro_pag a
	where	a.nr_seq_pp_rp_filtro = nr_seq_filtro_pc
	and	a.ie_situacao = 'A';
BEGIN

-- se não tiver informações da regra não será possível aplicar os filtros.
if (nr_seq_filtro_p IS NOT NULL AND nr_seq_filtro_p::text <> '') then

	qt_filtro_processado_p := 0;
	-- abrir vetor com todas as combinações de filtro da regra 
	for r_c_filtro_w in c_filtro(nr_seq_filtro_p) loop
		
		-- somente a primeira vez que passar no cursor atualiza após isto não atualiza mais
		if (qt_filtro_processado_p = 0) then
			-- atualizar o campo auxiliar que será utilizado para sinalizar os registros que foram processados
			CALL CALL CALL CALL CALL pls_pp_filtro_ocor_fin_pck.atualiza_campo_auxiliar(nr_id_transacao_p, nr_seq_filtro_p, ie_excecao_p);
		end if;

		begin
			-- restrição específica de pagamento
			SELECT * FROM pls_pp_filtro_ocor_fin_pck.obter_restricao_pagamento(	r_c_filtro_w.nr_seq_evento, valor_bind_w) INTO STRICT _ora2pg_r;
 ds_campos_w := _ora2pg_r.ds_campos_p; ds_tabela_w := _ora2pg_r.ds_tabela_p; valor_bind_w := _ora2pg_r.valor_bind_p;

			-- montar o select padrão juntamente as restrições.
			valor_bind_w := pls_pp_filtro_ocor_fin_pck.obter_select_filtro(	ie_considera_selecao_p, nr_id_transacao_p, ie_excecao_p, nr_seq_filtro_p, cd_condicao_pagamento_p, ds_campos_w, ds_tabela_w, dados_restricao_w, valor_bind_w);

			-- executa o comando sql com os respectivos binds
			valor_bind_w := sql_pck.executa_sql_cursor(ds_select_w, valor_bind_w);
			
			loop
				fetch cursor_w bulk collect into tb_seq_prestador_w, tb_seq_evento_w, tb_seq_selecao_w
				limit pls_util_pck.qt_registro_transacao_w;
				exit when tb_seq_prestador_w.count = 0;
				
				-- insere/atualiza todos os registros das listas na tabela de seleção
				CALL CALL CALL CALL CALL pls_pp_filtro_ocor_fin_pck.gerencia_selecao_filtro(	nr_id_transacao_p, nr_seq_filtro_p, ie_excecao_p,
								tb_seq_prestador_w, tb_seq_evento_w, tb_seq_selecao_w,
								'S');
			end loop;
			close cursor_w;
		exception
			when others then
			-- se deu algo e o cursor está aberto fecha ele
			if (cursor_w%isopen) then
				close cursor_w;
			end if;
			-- Tratar erro gerado no sql dinâmico, será inserido registro no log e abortado o processo exibindo mensagem de erro.
			CALL CALL CALL CALL CALL CALL pls_pp_filtro_ocor_fin_pck.trata_erro_sql_dinamico(null, ds_select_w, null,
						nm_usuario_p, 'S');
		end;
		qt_filtro_processado_p := qt_filtro_processado_p + 1;
	end loop;
	
	-- se processou algum filtro e ainda não deve ser considerada a tabela de seleção sinaliza para utilizar ela
	if (qt_filtro_processado_p > 0) then
		-- atualizar o campo definitivo que será utilizado para sinalizar os registros que foram processados
		CALL CALL CALL CALL CALL pls_pp_filtro_ocor_fin_pck.atualiza_campo_valido(nr_id_transacao_p, nr_seq_filtro_p, ie_excecao_p);
		-- seta para utilizar a tabela de seleção
		ie_considera_selecao_p := true;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_filtro_ocor_fin_pck.aplica_filtro_pagamento ( ie_considera_selecao_p INOUT boolean, qt_filtro_processado_p INOUT integer, nr_id_transacao_p pls_pp_rp_ofin_selecao.nr_id_transacao%type, ie_excecao_p pls_pp_rp_cta_filtro.ie_excecao%type, nr_seq_filtro_p pls_pp_rp_cta_filtro.nr_sequencia%type, cd_condicao_pagamento_p pls_pp_lote.cd_condicao_pagamento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
