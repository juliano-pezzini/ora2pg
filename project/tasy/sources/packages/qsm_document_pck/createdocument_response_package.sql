-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE qsm_document_pck.createdocument_response ( nr_sequencia_p bigint, ds_xml_p text) AS $body$
DECLARE


reg_integracao_p			gerar_int_padrao.reg_integracao;				
nm_usuario_w				intpd_fila_transmissao.nm_usuario%type;
nr_seq_documento_w			intpd_fila_transmissao.nr_seq_documento%type;
ds_parametros_adic_w			intpd_fila_transmissao.ds_parametros_adic%type;
nr_seq_regra_w				intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w				intpd_eventos_sistema.ie_conversao%type;

nr_seq_episodio_pac_doc_w	episodio_pac_document.nr_sequencia%type;
ds_case_w					episodio_paciente.nr_sequencia%type;
nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
ds_client_id_w				estabelecimento.cd_estabelecimento%type;
ds_department_w				integer;
ds_patient_w				atendimento_paciente.cd_pessoa_fisica%type;
nr_seq_tipo_adm_fat_atd_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;

ds_params_w				dbms_sql.varchar2_table;

ds_document_w				varchar(32);
ds_client_w				varchar(32);

xml_w					xml;
ds_xml_w				text;
ds_erro_w				varchar(4000);

C01 CURSOR(ds_xml_pc xml) FOR
	SELECT	z.document
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/doc' as "doc",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'soapenv:Envelope/soapenv:Body' passing ds_xml_pc columns
			createDocumentResponse		xml		path	'doc:createDocumentResponse') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/doc' as "doc"),
			'doc:createDocumentResponse' passing x.createDocumentResponse columns
			document		xml		path	'doc:document') z;

C02 CURSOR(ds_xml_pc xml) FOR
	SELECT	z.messages
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/doc' as "doc",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'soapenv:Envelope/soapenv:Body' passing ds_xml_pc columns
			createDocumentResponse		xml		path	'doc:createDocumentResponse') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/doc' as "doc"),
			'doc:createDocumentResponse' passing x.createDocumentResponse columns
			messages		xml		path	'doc:messages') z;
			
C03 CURSOR FOR
	SELECT	coalesce(b.qt_tempo_normal, 0) qt_tempo_normal,
			coalesce(b.nr_sequencia, 0) nr_seq_regra
	from 	wl_regra_worklist a,
			wl_regra_item b
	where	a.nr_sequencia = b.nr_seq_regra
	and		b.ie_situacao = 'A'
	and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
								from	wl_item x
								where	x.nr_sequencia = a.nr_seq_item
								and		x.cd_categoria = 'QA'
								and		x.ie_situacao = 'A');	
BEGIN
begin
select	a.nr_seq_documento,
	ds_parametros_adic,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_regra_conv,
	a.nm_usuario
into STRICT	nr_seq_documento_w,
	ds_parametros_adic_w,
	ie_conversao_w,
	nr_seq_regra_w,
	nm_usuario_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia		= nr_sequencia_p;

xml_w 		:= xmlparse(DOCUMENT, convert_from(, 'utf-8'));

ds_params_w	:= obter_lista_string(ds_parametros_adic_w, ';');

for r_C01_w in C01(xml_w) loop
	begin

	begin
		select	ds_client,
			ds_document
		into STRICT	ds_client_w,
			ds_document_w
		from	xmltable(
						xmlnamespaces('http://www.mmm.com/his/qsmed/doc' as "doc"),
						'doc:document' passing r_C01_w.document columns
				ds_client	varchar2(32)	path	'@client',
				ds_document	varchar2(32)	path	'@document');
	exception
	when others then
		ds_client_w	:= null;
		ds_document_w	:= null;
	end;

	select	b.nr_sequencia ds_case,
		e.cd_estabelecimento client_id,
		obter_setor_atendimento(a.nr_atendimento) department,
		pf.cd_pessoa_fisica patient,
		a.nr_atendimento
	into STRICT	ds_case_w,
		ds_client_id_w,
		ds_department_w,
		ds_patient_w,
		nr_atendimento_w
	from	atendimento_paciente a,
		episodio_paciente b,
		pessoa_fisica pf,
		estabelecimento e,
		pessoa_juridica pj
	where	a.nr_atendimento	= ds_params_w(2)
	and	a.nr_seq_episodio	= b.nr_sequencia
	and	a.cd_pessoa_fisica	= pf.cd_pessoa_fisica
	and	a.cd_estabelecimento	= e.cd_estabelecimento
	and	e.cd_cgc		= pj.cd_cgc;

	select	nextval('episodio_pac_document_seq')
	into STRICT	nr_seq_episodio_pac_doc_w
	;

	insert into episodio_pac_document(
			nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_episodio,
			ds_client_id, cd_pessoa_fisica, ds_depart_id,
			ds_module_id, ds_oper_id, ie_cancelled,
			ie_exported, ie_released, cd_setor_atendimento,
			nr_seq_doc_qas)
	values (
			nr_seq_episodio_pac_doc_w, clock_timestamp(), nm_usuario_w,
			clock_timestamp(), nm_usuario_w, ds_case_w,
			intpd_conv('ESTABELECIMENTO', 'CD_ESTABELECIMENTO', ds_client_id_w, nr_seq_regra_w, ie_conversao_w, 'E'), ds_patient_w,
			intpd_conv('ATEND_PACIENTE_UNIDADE', 'ATEND_PACIENTE_UNIDADE', ds_department_w, nr_seq_regra_w, ie_conversao_w, 'E'),
			ds_params_w(1), null, null,
			null, null, null,
			ds_document_w);
			
	select	max(nr_seq_tipo_admissao_fat)
	into STRICT	nr_seq_tipo_adm_fat_atd_w
	from	atendimento_paciente
	where	nr_atendimento = ds_params_w(2);
	
	for r_C03_w in C03 loop
		if (obter_se_regra_geracao(r_C03_w.nr_seq_regra,ds_case_w,nr_seq_tipo_adm_fat_atd_w) = 'S') then
			wl_gerar_finalizar_tarefa('QA', 'I', ds_params_w(2), ds_patient_w, nm_usuario_w, (clock_timestamp()+(r_C03_w.qt_tempo_normal/24)), 'S', null, null, nr_seq_episodio_pac_doc_w,
								  null, null, null, null, null, null, r_C03_w.nr_seq_regra, null, null, null, null, null, null, null, clock_timestamp(), ds_case_w);
			reg_integracao_p := gerar_int_padrao.gravar_integracao('357', nr_seq_episodio_pac_doc_w, nm_usuario_w, reg_integracao_p, ds_case_w);
		end if;
	end loop;
	end;
end loop;

for r_C02_w in C02(xml_w) loop
	begin
	CALL qsm_messages_pck.qsm_process_message( nr_sequencia_p, r_C02_w.messages, 'N' );
	end;
end loop;

update	intpd_fila_transmissao
set	ie_status		= 'S',
	ie_response_procedure	= 'S',
	dt_atualizacao		= clock_timestamp(),
	ds_xml_retorno		= ds_xml_p
where	nr_sequencia		= nr_sequencia_p;

commit;

exception
when others then
	begin
	ds_erro_w	:= substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,2000);

	rollback;

	update	intpd_fila_transmissao
	set	ie_status		= 'E',
		ie_response_procedure	= 'S',
		ds_log			= ds_erro_w,
		dt_atualizacao		= clock_timestamp(),
		ds_xml_retorno		= ds_xml_p
	where	nr_sequencia		= nr_sequencia_p;

	commit;
	end;
end;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qsm_document_pck.createdocument_response ( nr_sequencia_p bigint, ds_xml_p text) FROM PUBLIC;
