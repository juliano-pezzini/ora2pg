-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_store_data_mens_pck.calcular_vls_reajuste_indice (nr_seq_tabela_p pls_segurado.nr_seq_tabela%type, nr_seq_reajuste_p pls_segurado_preco.nr_seq_reajuste%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type) AS $body$
DECLARE

	qt_registros_w		bigint;
	nr_seq_lote_reajuste_w		pls_segurado_preco.nr_seq_lote_reajuste%type;
	tx_reajuste_w			pls_reajuste.tx_reajuste%type;
	ds_oficio_ans_w			pls_reajuste.ds_oficio_ans%type;
	nr_protocolo_ans_w		pls_reajuste.nr_protocolo_ans%type;
	dt_autorizacao_ans_w		pls_reajuste.dt_autorizacao_ans%type;
	dt_periodo_inicial_w		pls_reajuste.dt_periodo_inicial%type;
	dt_periodo_final_w		pls_reajuste.dt_periodo_final%type;
	dt_reajuste_w			pls_reajuste.dt_reajuste%type;
	ds_plano_w			pls_plano.ds_plano%type;
	nr_protocolo_ans_plano_w 	pls_plano.nr_protocolo_ans%type;
	cd_scpa_w			pls_plano.cd_scpa%type;
	vl_desconto_w			pls_segurado_preco.vl_desconto%type;
	nr_seq_mens_ant_w		pls_mensalidade_segurado.nr_sequencia%type;
	vl_item_ant_w			pls_mensalidade_seg_item.vl_item%type;
	vl_preco_atual_w		double precision;
	nr_seq_reaj_preco_w		pls_reajuste_preco.nr_sequencia%type;
	nr_seq_reajuste_ww		pls_reajuste.nr_sequencia%type;
	
	
BEGIN 
		PERFORM set_config('pls_store_data_mens_pck.vl_reajuste_indice_w', 0, false);
		PERFORM set_config('pls_store_data_mens_pck.nr_seq_reajuste_w', null, false);
		--Valor reajuste por índice de correção, para destacar na mensalidade 
		select	max(a.nr_sequencia) 
		into STRICT	current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type 
		from	pls_segurado_preco	a 
		where	a.nr_seq_segurado	= nr_seq_segurado_p 
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
		and	a.cd_motivo_reajuste	= 'I' 
		and	coalesce(a.ie_situacao,'A')	= 'A' 
		and	a.dt_reajuste between get_dt_referencia and last_day(get_dt_referencia) + .99999;
 
		--Caso não tiver reajuste no mês atual, verifica se no mês anterior teve valor 
		if (current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%coalesce(type::text, '') = '') then 
			for i in 0..3 loop 
				begin 
				select	/*+ CHOOSE */ 
					max(a.nr_sequencia), 
					max(a.nr_seq_reajuste) 
				into STRICT	current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type, 
					nr_seq_reaj_preco_w 
				from	pls_segurado_preco	a 
				where	a.nr_seq_segurado	= nr_seq_segurado_p 
				and	a.nr_seq_tabela		= nr_seq_tabela_p 
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
				and	a.cd_motivo_reajuste	= 'I' 
				and (a.ie_situacao		= 'A' or coalesce(a.ie_situacao::text, '') = '') 
				and	get_dt_referencia >= a.dt_reajuste 
				and	a.dt_liberacao between add_months(get_dt_referencia,-i) and last_day(add_months(get_dt_referencia,-i)) + .99999;
				 
				select	max(nr_seq_reajuste) 
				into STRICT	nr_seq_reajuste_ww 
				from	pls_reajuste_preco 
				where	nr_sequencia	= nr_seq_reaj_preco_w;
				 
				if (current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then 
					select	count(1) 
					into STRICT	qt_registros_w 
					 
					where	exists (SELECT	1 
							from	pls_mensalidade_seg_item	c, 
								pls_mensalidade_segurado	b, 
								pls_mensalidade			a 
							where	c.nr_seq_mensalidade_seg	= b.nr_sequencia 
							and	b.nr_seq_mensalidade		= a.nr_sequencia 
							and	b.nr_seq_segurado		= nr_seq_segurado_p 
							and	coalesce(a.ie_cancelamento::text, '') = '' 
							and	c.ie_tipo_item			= '25' 
							and	b.dt_mesano_referencia between add_months(get_dt_referencia,-6) and get_dt_referencia);
					 
					if (qt_registros_w = 0) and (nr_seq_reajuste_ww IS NOT NULL AND nr_seq_reajuste_ww::text <> '') then 
						select	count(1) 
						into STRICT	qt_registros_w 
						 
						where	exists (SELECT	1 
								from	pls_reajuste_preco		c, 
									pls_mensalidade_segurado	b, 
									pls_mensalidade			a, 
									pls_mensalidade_seg_item	d 
								where	c.nr_sequencia		= b.nr_seq_reajuste 
								and	a.nr_sequencia		= b.nr_seq_mensalidade 
								and	b.nr_seq_segurado	= nr_seq_segurado_p 
								and	d.nr_seq_mensalidade_seg = b.nr_sequencia 
								and	coalesce(a.ie_cancelamento::text, '') = '' 
								and	c.nr_seq_reajuste	= nr_seq_reajuste_ww 
								and	d.ie_tipo_item 		= '1' 
								and	b.dt_mesano_referencia between add_months(get_dt_referencia,-6) and get_dt_referencia);
					end if;
 
					if (qt_registros_w > 0) then 
						PERFORM set_config('pls_store_data_mens_pck.nr_seq_preco_indice_w', null, false);
					end if;
					exit;
				end if;
				end;
			end loop;
		end if;
		 
		if (coalesce(current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type,0) <> 0) then 
			if (current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type <> get_nr_seq_segurado_preco) and (get_nr_seq_segurado_preco IS NOT NULL AND get_nr_seq_segurado_preco::text <> '') then 
				begin 
				select	b.vl_reajustado - b.vl_base, 
					coalesce(nr_seq_reajuste_p,a.nr_seq_reajuste) 
				into STRICT 	current_setting('pls_store_data_mens_pck.vl_reajuste_indice_w')::pls_segurado_preco.vl_preco_atual%type, 
					current_setting('pls_store_data_mens_pck.nr_seq_reajuste_w')::pls_segurado_preco.nr_seq_reajuste%type 
				from	pls_segurado_preco a, 
					pls_reajuste_preco b 
				where	a.nr_seq_reajuste = b.nr_sequencia 
				and	a.nr_sequencia = current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type 
				and 	coalesce(a.ie_situacao, 'A') = 'A';
				exception 
				when others then 
					PERFORM set_config('pls_store_data_mens_pck.vl_reajuste_indice_w', 0, false);
				end;
			else 
				begin 
				select (vl_preco_atual - coalesce(vl_desconto,0)) - vl_preco_ant, 
					coalesce(nr_seq_reajuste_p,nr_seq_reajuste), 
					vl_desconto, 
					vl_preco_atual - coalesce(vl_desconto,0) 
				into STRICT	current_setting('pls_store_data_mens_pck.vl_reajuste_indice_w')::pls_segurado_preco.vl_preco_atual%type, 
					current_setting('pls_store_data_mens_pck.nr_seq_reajuste_w')::pls_segurado_preco.nr_seq_reajuste%type, 
					vl_desconto_w, 
					vl_preco_atual_w 
				from	pls_segurado_preco 
				where	nr_sequencia	= current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type;
				exception 
				when others then 
					PERFORM set_config('pls_store_data_mens_pck.vl_reajuste_indice_w', 0, false);
					vl_desconto_w		:= 0;
				end;
				 
				if (coalesce(vl_desconto_w,0) > 0) and (coalesce(current_setting('pls_store_data_mens_pck.vl_reajuste_indice_w')::pls_segurado_preco.vl_preco_atual%type,0) < 0) then 
					begin 
					select	max(b.nr_sequencia) 
					into STRICT	nr_seq_mens_ant_w 
					from	pls_mensalidade_seg_item a, 
						pls_mensalidade_segurado b, 
						pls_mensalidade c 
					where	a.nr_seq_mensalidade_seg = b.nr_sequencia 
					and	b.nr_seq_mensalidade = c.nr_sequencia 
					and	coalesce(c.ie_cancelamento::text, '') = '' 
					and	a.ie_tipo_item = 1 
					and	b.nr_seq_segurado = nr_seq_segurado_p 
					and	b.dt_mesano_referencia = add_months(trunc(get_dt_referencia,'mm'),-1);
					exception 
					when others then 
						nr_seq_mens_ant_w := 0;
					end;
 
					if (coalesce(nr_seq_mens_ant_w,0) > 0) then 
						begin 
						select	sum(vl_item) 
						into STRICT	vl_item_ant_w 
						from	pls_mensalidade_seg_item 
						where	nr_seq_mensalidade_seg = nr_seq_mens_ant_w 
						and	ie_tipo_item in (1,5); --Somar o valor do preço pré e do reajuste de faixa etaria se existir. 
						exception
						when others then 
							vl_item_ant_w := 0;
						end;
 
						if (coalesce(vl_item_ant_w,0) > 0) then 
							PERFORM set_config('pls_store_data_mens_pck.vl_reajuste_indice_w', vl_preco_atual_w - vl_item_ant_w, false);
						end if;
					end if;
				end if;
			end if;
			 
			if (current_setting('pls_store_data_mens_pck.vl_reajuste_indice_w')::pls_segurado_preco.vl_preco_atual%type > 0) then 
				select	max(nr_seq_lote_reajuste) 
				into STRICT	nr_seq_lote_reajuste_w 
				from	pls_segurado_preco 
				where	nr_sequencia	= current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type;
				 
				if (coalesce(nr_seq_lote_reajuste_w,0) <> 0) then 
					select	coalesce(tx_reajuste_correto,tx_reajuste), 
						ds_oficio_ans, 
						nr_protocolo_ans, 
						dt_autorizacao_ans, 
						dt_periodo_inicial, 
						dt_periodo_final, 
						dt_reajuste 
					into STRICT	tx_reajuste_w, 
						ds_oficio_ans_w, 
						nr_protocolo_ans_w, 
						dt_autorizacao_ans_w, 
						dt_periodo_inicial_w, 
						dt_periodo_final_w, 
						dt_reajuste_w 
					from	pls_reajuste 
					where	nr_sequencia	= nr_seq_lote_reajuste_w;
				else 
					select	coalesce(max(c.tx_reajuste_correto),max(c.tx_reajuste)), 
						max(c.dt_reajuste), 
						max(c.dt_periodo_inicial), 
						max(c.dt_periodo_final) 
					into STRICT	tx_reajuste_w, 
						dt_reajuste_w, 
						dt_periodo_inicial_w, 
						dt_periodo_final_w 
					from	pls_segurado_preco	a, 
						pls_reajuste_preco	b, 
						pls_reajuste		c 
					where	a.nr_seq_reajuste	= b.nr_sequencia 
					and	b.nr_seq_reajuste	= c.nr_sequencia 
					and	a.nr_sequencia		= current_setting('pls_store_data_mens_pck.nr_seq_preco_indice_w')::pls_segurado_preco.nr_sequencia%type;
				end if;
				 
				select	max(ds_plano), 
					max(nr_protocolo_ans), 
					max(cd_scpa) 
				into STRICT	ds_plano_w, 
					nr_protocolo_ans_plano_w, 
					cd_scpa_w 
				from	pls_plano 
				where	nr_sequencia = pls_store_data_mens_pck.get_nr_seq_plano();
				 
				if (coalesce(dt_periodo_inicial_w::text, '') = '') or (coalesce(dt_periodo_final_w::text, '') = '') then 
					dt_periodo_inicial_w := dt_reajuste_w;
					dt_periodo_final_w := add_months(dt_reajuste_w,11);
				end if;
				 
				if (get_ie_tipo_estipulante = 'PF') then 
					PERFORM set_config('pls_store_data_mens_pck.ds_mensagem_reajuste_w', 'Reajuste de '||tx_reajuste_w||'% conforme Oficio nº'||ds_oficio_ans_w||', Protocolo nº'||nr_protocolo_ans_w||' de '||to_char(dt_autorizacao_ans_w,'dd/mm/yyyy')||', para os contratos com data de aniversário entre '||to_char(dt_periodo_inicial_w,'mm/yyyy')||' e '||to_char(dt_periodo_final_w,'mm/yyyy') || '.'||chr(13)||chr(10)|| 
									'Produto: '||get_nr_seq_plano||' - '||ds_plano_w||'. REG. ANS: '||coalesce(nr_protocolo_ans_plano_w,cd_scpa_w) ||'. Próximo reajuste em '||to_char(add_months(dt_reajuste_w,12),'mm/yyyy'), false);
				elsif (get_ie_tipo_estipulante = 'PJ') then 
					PERFORM set_config('pls_store_data_mens_pck.ds_mensagem_reajuste_w', 'Reajuste de '||tx_reajuste_w||'%, de '||to_char(dt_reajuste_w,'dd/mm/yyyy')||' entre '||to_char(dt_periodo_inicial_w,'mm/yyyy')||' e '||to_char(dt_periodo_final_w,'mm/yyyy') || '.'||chr(13)||chr(10)|| 
									'Produto: '||get_nr_seq_plano||' - '||ds_plano_w||'. REG. ANS: '||coalesce(nr_protocolo_ans_plano_w,cd_scpa_w) ||'. Próximo reajuste em '||to_char(add_months(dt_reajuste_w,12),'mm/yyyy'), false);
				end if;
			end if;
		end if;
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_store_data_mens_pck.calcular_vls_reajuste_indice (nr_seq_tabela_p pls_segurado.nr_seq_tabela%type, nr_seq_reajuste_p pls_segurado_preco.nr_seq_reajuste%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type) FROM PUBLIC;
