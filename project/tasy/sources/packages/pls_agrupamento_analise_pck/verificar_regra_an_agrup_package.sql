-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_agrupamento_analise_pck.verificar_regra_an_agrup ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_seq_regra_w			pls_regra_an_agrup.nr_sequencia%type;
qt_guia_inter_vinc_w		integer;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_regra_w		pls_util_cta_pck.t_number_table;
idx					integer;	
ie_forma_agrupamento_w 	pls_regra_geracao_analise.ie_forma_agrupamento%type;
nr_seq_regra_agrup_w	pls_regra_geracao_analise.nr_sequencia%type;

C_lote CURSOR(nr_seq_lote_pc		pls_lote_protocolo_conta.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia,
		c.nr_seq_guia,
		c.cd_guia_ref cd_guia_referencia,
		c.nr_seq_segurado,
		c.nr_seq_tipo_atendimento,
		c.nr_seq_analise,
		c.ie_tipo_guia,
		c.ie_origem_conta,
		c.ie_regime_atendimento,
		c.ie_saude_ocupacional
	from	pls_conta_v	c
	where	c.nr_seq_lote_conta	= nr_seq_lote_pc
	and	c.ie_tipo_guia		in ('3','4','6')
	and	c.ie_status		!= 'C'
	and	ie_origem_conta		!= 'A';
BEGIN

idx := 0;

for r_lote_w in c_lote(nr_seq_lote_p) loop
	begin
	
		if (coalesce(ie_forma_agrupamento_w::text, '') = '') then
			ie_forma_agrupamento_w := pls_obter_regra_agrup_analise(r_lote_w.nr_sequencia, r_lote_w.ie_origem_conta, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_agrup_w);
		end if;
	
		--Se agrupamento de analises(Por conta ou analise no Controle de Producao medica/Regras/Regra agrupamento analise) for por Conta, nao fara o vinculo entre analises e/ou deixar analise no status de aguardando guia.

		if (ie_forma_agrupamento_w = 'A') then
			nr_seq_regra_w	:= pls_agrupamento_analise_pck.obtem_seq_regra_valida(r_lote_w.ie_tipo_guia,r_lote_w.nr_seq_tipo_atendimento,r_lote_w.nr_seq_guia,
								  cd_estabelecimento_p, r_lote_w.ie_regime_atendimento, r_lote_w.ie_saude_ocupacional);
			
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
				begin
				
				select 	count(1)
				into STRICT	qt_guia_inter_vinc_w
				from	pls_conta
				where	nr_seq_analise	= r_lote_w.nr_seq_analise
				and	ie_tipo_guia	= '5'
				and	ie_status	!= 'C';
				
				if (qt_guia_inter_vinc_w	= 0) then
					begin
					tb_nr_seq_conta_w(idx)	:= r_lote_w.nr_sequencia;
					tb_nr_seq_regra_w(idx)	:= nr_seq_regra_w;
					idx := idx + 1;
					
					if (idx >= pls_util_pck.qt_registro_transacao_w) then
						begin
						CALL pls_agrupamento_analise_pck.atualiza_regra_agrup_conta(tb_nr_seq_conta_w, tb_nr_seq_regra_w, nm_usuario_p);
						idx	:= 0;
						tb_nr_seq_conta_w.delete;
						tb_nr_seq_regra_w.delete;
						end;
					end if;
					
					end;
				end if;
				
				end;
			end if;
		end if;
	end;
end loop;

CALL pls_agrupamento_analise_pck.atualiza_regra_agrup_conta(tb_nr_seq_conta_w, tb_nr_seq_regra_w, nm_usuario_p);
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_agrupamento_analise_pck.verificar_regra_an_agrup ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
