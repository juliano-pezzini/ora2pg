-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION cpoe_diet_json_pck.get_fasting_times (nr_cpoe_diet_p bigint) RETURNS PHILIPS_JSON_LIST AS $body$
DECLARE

	json_item_w		philips_json;
	json_item_list_w	philips_json_list;
	
	C01 CURSOR FOR
		SELECT 	a.NR_SEQUENCIA NR_SEQUENCIA,
				a.IE_TIPO_DIETA IE_TIPO_DIETA,
				a.DT_LIBERACAO DT_LIBERACAO,
				a.DT_LIB_SUSPENSAO DT_LIB_SUSPENSAO,
				a.DT_INICIO DT_INICIO,
				a.DT_FIM DT_FIM,
				a.IE_DURACAO IE_DURACAO,
				a.IE_URGENCIA IE_URGENCIA,
				a.NR_SEQ_OBJETIVO NR_SEQ_OBJETIVO,
				a.DT_ATUALIZACAO DT_ATUALIZACAO,
				cpoe_obter_dt_suspensao(nr_sequencia,'N') dt_suspensao,
				substr(obter_desc_tipo_jejum(nr_seq_tipo),1,80) desc_tipo_jejum,
				a.cd_medico ordering_provider_id_number,
				obter_conv_envio('INTERVALO_PRESCRICAO', 'CD_INTERVALO', a.CD_INTERVALO, 'E')  interval_code_value,
				obter_conv_envio('CPOE_DIETA', 'IE_TIPO_DIETA', a.IE_TIPO_DIETA, 'E') diet_type_value,
				CASE WHEN coalesce(a.DS_OBSERVACAO::text, '') = '' THEN ''  ELSE '. ' ||elimina_acentuacao(a.DS_OBSERVACAO) END  DS_OBSERVACAO, 
				CASE WHEN coalesce(a.DS_JUSTIFICATIVA::text, '') = '' THEN ''  ELSE '. ' ||elimina_acentuacao(a.DS_JUSTIFICATIVA) END  DS_JUSTIFICATIVA, 
				obter_dados_pf(a.cd_medico,'PNG') ordering_provider_given_name,
				obter_dados_pf(a.cd_medico,'PNL') ordering_provider_last_name,
				obter_dados_pf(a.cd_medico,'PNM') ordering_provider_middle_name, 
				Obter_Pessoa_Fisica_Usuario(a.nm_usuario_susp,'C') order_prov_susp_id_number,
				substr(obter_nome_pf(a.cd_medico),1,80) nm_medico_solicitante,
				Obter_Pessoa_Fisica_Usuario(a.nm_usuario_nrec,'C') ordering_user_id_number,
				obter_conv_envio('REP_TIPO_JEJUM', 'NR_SEQUENCIA', a.NR_SEQ_TIPO, 'E')  code_value,
				obter_conv_envio('REP_TIPO_JEJUM', 'NR_SEQUENCIA', a.NR_SEQ_TIPO, 'S')  code_system
		from CPOE_DIETA a
		where a.NR_SEQUENCIA = nr_cpoe_diet_p 
		and a.IE_TIPO_DIETA = 'J';
		
	
BEGIN
	json_item_list_w	:= philips_json_list();
	
	for r_c01 in c01 loop
		begin
		json_item_w		:= philips_json();

		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'nrSequencia', r_c01.nr_sequencia);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'ieTipoDieta', r_c01.ie_tipo_dieta);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dtLiberacao', r_c01.dt_liberacao);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dtLibSuspensao', r_c01.dt_lib_suspensao);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dtInicio', r_c01.dt_inicio);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dtFim', r_c01.dt_fim);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'ieDuracao', r_c01.ie_duracao);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'ieUrgencia', r_c01.ie_urgencia);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'nrSeqObjetivo', r_c01.nr_seq_objetivo);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dtAtualizacao', r_c01.dt_atualizacao);	
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dtSuspensao', r_c01.dt_suspensao);		
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'descDieta', r_c01.desc_tipo_jejum);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'orderingUserIdNumber', r_c01.ordering_user_id_number);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'intervalCodeValue', r_c01.interval_code_value);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dietTypeValue', r_c01.diet_type_value);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dsObservacao', r_c01.ds_observacao);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'dsJustificativa', r_c01.ds_justificativa);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'orderingProviderIdNumber', r_c01.ordering_provider_id_number);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'orderingProviderGivenName', r_c01.ordering_provider_given_name);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'orderingProviderLastName', r_c01.ordering_provider_last_name);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'orderingProviderMiddleName', r_c01.ordering_provider_middle_name);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'orderProvSuspIdNumber', r_c01.order_prov_susp_id_number);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'nmMedicoSolicitante', r_c01.nm_medico_solicitante);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'codeValue', r_c01.code_value);
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'codeSystem', r_c01.code_system);

		if (r_c01.dt_fim IS NOT NULL AND r_c01.dt_fim::text <> '') then
				json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'numberOfDays', OBTER_DIAS_ENTRE_DATAS(r_c01.dt_inicio, r_c01.dt_fim));
		end if;
		
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'priority', 'R');
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'effectiveDate', coalesce(r_c01.dt_lib_suspensao, r_c01.dt_liberacao));
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'enteredBy', coalesce(r_c01.order_prov_susp_id_number, r_c01.ordering_user_id_number));
		json_item_w := cpoe_diet_json_pck.add_json_value(json_item_w, 'testInstruction', r_c01.ds_justificativa || '~' || r_c01.ds_observacao);
		
		json_item_list_w.append(json_item_w.to_json_value());
		end;
	end loop;
	
	return json_item_list_w;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION cpoe_diet_json_pck.get_fasting_times (nr_cpoe_diet_p bigint) FROM PUBLIC;
