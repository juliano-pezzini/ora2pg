-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- exclui todos os eventos de lancamentos programados do lote



CREATE OR REPLACE PROCEDURE pls_pp_lote_pagamento_pck.desfazer_item_lanc_prog ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, ie_opcao_p text) AS $body$
DECLARE


/* ie_opcao_p 
GERAR_LOTE - desfaz a geracao do lote, ou seja, tudo que foi inserido/atualizado durante a geracao do lote
FECHAR_LOTE - desfaz o fechamento do lote, ou seja, tudo que foi inserido/atualizado durante o fechamento do lote
*/

					
tb_sequencia_w	pls_util_cta_pck.t_number_table;
	
c01 CURSOR(	nr_seq_lote_pc	pls_pp_lote.nr_sequencia%type,
		ie_opcao_pc	text) FOR
	SELECT	b.nr_sequencia
	from	pls_pp_item_lote a,
		pls_pp_it_prest_event_val b
	where	ie_opcao_pc = 'GERAR_LOTE'
	and	a.nr_seq_lote = nr_seq_lote_pc
	and	a.ie_tipo_item = '2'
	and	b.nr_seq_item_lote = a.nr_sequencia
	
union all

	SELECT 	c.nr_sequencia
	from	pls_pp_item_lote a,
		pls_pp_lanc_programado b,
		pls_pp_it_prest_event_val c
	where	ie_opcao_pc = 'FECHAR_LOTE'
	and	a.nr_seq_lote = nr_seq_lote_pc
	and	b.nr_sequencia = a.nr_seq_lanc_prog
	and	b.ie_gerar_apos_tributacao = 'S'
	and	c.nr_seq_item_lote = a.nr_sequencia;
	
c02 CURSOR(	nr_seq_lote_pc	pls_pp_lote.nr_sequencia%type,
		ie_opcao_pc	text) FOR
	SELECT 	a.nr_sequencia
	from	pls_pp_item_lote a	
	where	ie_opcao_pc = 'GERAR_LOTE'
	and	a.nr_seq_lote = nr_seq_lote_pc
	and	a.ie_tipo_item = '2'
	
union all

	SELECT 	a.nr_sequencia
	from	pls_pp_item_lote a,
		pls_pp_lanc_programado b
	where	ie_opcao_pc = 'FECHAR_LOTE'
	and	a.nr_seq_lote = nr_seq_lote_pc
	and	b.nr_sequencia = a.nr_seq_lanc_prog
	and	b.ie_gerar_apos_tributacao = 'S';


BEGIN
-- limpa a tabela de vinculo com o evento valor

open c01(nr_seq_lote_p, ie_opcao_p);
loop
	fetch c01 bulk collect into tb_sequencia_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_sequencia_w.count = 0;
	
	forall i in tb_sequencia_w.first..tb_sequencia_w.last
		delete 	from pls_pp_it_prest_event_val
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
end loop;
close c01;

-- percorre o cursor e apaga os itens retornados

open c02(nr_seq_lote_p, ie_opcao_p);
loop
	fetch c02 bulk collect into tb_sequencia_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_sequencia_w.count = 0;
	
	-- limpa os itens da origem

	CALL pls_pp_lote_pagamento_pck.limpa_itens_origem_lote(	nr_seq_lote_p, tb_sequencia_w, '1');
	CALL pls_pp_lote_pagamento_pck.limpa_itens_origem_lote(	nr_seq_lote_p, tb_sequencia_w, '2');
	
	forall i in tb_sequencia_w.first..tb_sequencia_w.last
		delete 	from pls_pp_item_lote
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
end loop;
close c02;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_lote_pagamento_pck.desfazer_item_lanc_prog ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, ie_opcao_p text) FROM PUBLIC;
