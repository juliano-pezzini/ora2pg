-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_lote_pagamento_pck.valida_se_pode_gerar_lote ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


cd_estabelecimento_w	pls_pp_lote.cd_estabelecimento%type;
dt_referencia_inicio_w	pls_pp_lote.dt_referencia_inicio%type;
dt_referencia_fim_w	pls_pp_lote.dt_referencia_fim%type;
ie_status_w		pls_pp_lote.ie_status%type;
qt_registro_gerado_w	integer;


BEGIN

begin
	-- tenta buscar os dados do lote de pagamento

	select	a.cd_estabelecimento,
		a.dt_referencia_inicio,
		a.dt_referencia_fim,
		a.ie_status
	into STRICT	cd_estabelecimento_w,
		dt_referencia_inicio_w,
		dt_referencia_fim_w,
		ie_status_w
	from	pls_pp_lote a
	where	a.nr_sequencia	= nr_seq_lote_p;
	
exception
	when others then
	-- Lote de pagamento de producao medica nao existe

	CALL wheb_mensagem_pck.exibir_mensagem_abort(388121, 'NR_SEQ_LOTE_PP_P=' || nr_seq_lote_p);
end;
	
-- verificacao de seguranca para o caso do estabelecimento do usuario seja diferente do estabelecimento do SIP

if (cd_estabelecimento_p <> cd_estabelecimento_w)	then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(388364, 'CD_ESTABELECIMENTO_P=' || to_char(cd_estabelecimento_p) || ';CD_ESTABELECIMENTO_CADASTRO_LOTE=' || to_char(cd_estabelecimento_w));
end if;

-- se tiver as datas informadas

if (dt_referencia_inicio_w IS NOT NULL AND dt_referencia_inicio_w::text <> '' AND dt_referencia_fim_w IS NOT NULL AND dt_referencia_fim_w::text <> '') then
	-- se a data de fim for menor que a data de inicio

	if (dt_referencia_fim_w < dt_referencia_inicio_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(388370, 'DT_INICIO=' || to_char(dt_referencia_inicio_w, 'DD/MM/YYYY') || ';DT_FIM=' || to_char(dt_referencia_fim_w, 'DD/MM/YYYY'));
	end if;
else
	-- alguma data nao foi informada

	CALL wheb_mensagem_pck.exibir_mensagem_abort(388368);
end if;

select	count(1)
into STRICT	qt_registro_gerado_w
from	pls_pp_item_lote a
where	a.nr_seq_lote = nr_seq_lote_p;

-- se ja existirem registros gerados primeiro o lote deve ser desfeito

-- nao pode gerar de novo

if (qt_registro_gerado_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(388371);
end if;

-- se o lote estiver com erro tem que ser desfeito primeiro

if (ie_status_w = 'E') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(410459);
end if;

-- verifica se os parametros estao preenchidos corretamente de retencao de tributos

if (current_setting('pls_pp_lote_pagamento_pck.nr_seq_evento_trib_lm_w')::pls_parametro_pagamento.nr_seq_evento_trib_lm%coalesce(type::text, '') = '') or (current_setting('pls_pp_lote_pagamento_pck.nr_seq_evento_trib_prov_w')::pls_parametro_pagamento.nr_seq_evento_trib_prov%coalesce(type::text, '') = '') then

	-- Os parametros 'Evento retencao dos tributos' e 'Evento retencao dos tributos (provento)' precisam estar informados para gerar os lotes de pagamento. 

	-- Por favor verifique na funcao OPS - Gestao de Operadoras > Parametros da OPS > Pagamento producao.

	CALL wheb_mensagem_pck.exibir_mensagem_abort(456814);
end if;

-- verifica se as apropriacoes sao geradas com o evento original, caso nao forem deve existir um evento cadastrado para ser gerado

if (current_setting('pls_pp_lote_pagamento_pck.ie_evento_orig_prox_pagto_w')::pls_parametro_pagamento.ie_evento_orig_prox_pagto%type = 'N') and (current_setting('pls_pp_lote_pagamento_pck.nr_seq_evento_prox_pgto_w')::pls_parametro_pagamento.nr_seq_evento_prox_pgto%coalesce(type::text, '') = '') then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(456821);
end if;

-- se o lote de retencao ja foi gerado nao deixa gerar o lote de pagamento

CALL pls_pp_lote_pagamento_pck.valida_lote_retencao_ja_gerado(	current_setting('pls_pp_lote_pagamento_pck.dt_mes_comp_lote_w')::pls_pp_lote.dt_mes_competencia%type, 457209);

-- conta as regras de titulos a pagar 

select 	count(1) qt
into STRICT	qt_registro_gerado_w
from	pls_evento_regra_tit_pagar b,
	pls_evento a
where	current_setting('pls_pp_lote_pagamento_pck.dt_mes_comp_lote_w')::pls_pp_lote.dt_mes_competencia%type between b.dt_inicio_vigencia_ref and b.dt_fim_vigencia_ref
and	a.nr_sequencia = b.nr_seq_evento
and	a.ie_situacao = 'A'  LIMIT 1;

-- caso existir alguma regra e algum dos dois parametros estiver nulo entao aborta a geracao pois estes sao utilizados nas baixas dos titulos

--if	(qt_registro_gerado_w > 0) and

--	((cd_tipo_baixa_pgto_w is null) or

--	(nr_seq_trans_fin_pag_pgto_w is null)) then


	--Nao e possivel realizar este processo!

	--Verifique se os campos "Trans fin pagar pag producao" e "Tipo baixa pag producao" estao informados nos parametros do pagamento de producao (OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento producao medica).

--	wheb_mensagem_pck.exibir_mensagem_abort(1033531);

--end if;


-- conta as regras de titulos a receber

select 	count(1) qt
into STRICT	qt_registro_gerado_w
from	pls_evento_regra_tit_rec b,
	pls_evento a
where	current_setting('pls_pp_lote_pagamento_pck.dt_mes_comp_lote_w')::pls_pp_lote.dt_mes_competencia%type between b.dt_inicio_vigencia_ref and b.dt_fim_vigencia_ref
and	a.nr_sequencia = b.nr_seq_evento
and	a.ie_situacao = 'A'  LIMIT 1;

-- caso exista os parametros devem possuir algum valor pois sera feita a baixa do titulo e passado estes parametros

--if	(qt_registro_gerado_w > 0) and

--	((cd_tipo_receb_pgto_w is null) or

--	(nr_seq_trans_fin_rec_pgto_w is null)) then


	--Nao e possivel realizar este processo!

	--Verifique se os campos "Trans fin receb pag producao" e "Tipo receb pag producao" estao informados nos parametros do pagamento de producao (OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento producao medica).

--	wheb_mensagem_pck.exibir_mensagem_abort(312374);

--end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_lote_pagamento_pck.valida_se_pode_gerar_lote ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
