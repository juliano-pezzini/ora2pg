-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_pp_lote_pagamento_pck.obter_data_vencimento_prest ( nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_origem_venc_tit_p out pls_pp_prestador_tmp.ie_origem_venc_titulo%type, nr_seq_regra_venc_p out pls_pp_prestador_tmp.nr_seq_regra_venc_titulo%type, dt_compentencia_pgto_p out pls_pp_prestador_tmp.dt_comp_pag%type, ie_origem_comp_pag_p out pls_pp_prestador_tmp.ie_origem_comp_pag%type) AS $body$
DECLARE


dt_vencimento_w		timestamp;
ds_vencimentos_w	varchar(2000);
qt_vencimentos_w	integer;
cd_condicao_pagamento_w	condicao_pagamento.cd_condicao_pagamento%type;
current_setting('pls_pp_lote_pagamento_pck.ie_forma_pagamento_w')::pls_parametro_pagamento.ie_forma_pagamento%type	condicao_pagamento.ie_forma_pagamento%type;
qt_dia_vencimento_w	pls_prestador_pagto.qt_dia_vencimento%type;
nr_seq_regra_prest_w	pls_prestador_pagto.nr_sequencia%type;
ie_origem_venc_tit_w	pls_pp_prestador_tmp.ie_origem_venc_titulo%type;
ie_origem_comp_pag_w	pls_pp_prestador_tmp.ie_origem_comp_pag%type;


BEGIN

-- se tem a data de vencimento informada no lote entao e Data de vencimento do lote (pls_pp_lote->dt_vencimento_lote)

-- senao Data da competencia do lote (pls_pp_lote->dt_mes_competencia)

if (current_setting('pls_pp_lote_pagamento_pck.dt_venc_lote_w')::pls_pp_lote.dt_vencimento_lote%(type IS NOT NULL AND type::text <> '')) then
	ie_origem_comp_pag_w	:= '3';
	ie_origem_venc_tit_w	:= ie_origem_comp_pag_w;
	dt_vencimento_w		:= current_setting('pls_pp_lote_pagamento_pck.dt_venc_lote_w')::pls_pp_lote.dt_vencimento_lote%type;
else
	ie_origem_comp_pag_w	:= '4';
	
	-- primeiro e considerado a condicao de pagamento informada no lote de pagamento, caso a mesma esteja nula entao e considerado a do prestador

	if (current_setting('pls_pp_lote_pagamento_pck.cd_cond_pgto_lote_w')::pls_pp_lote.cd_condicao_pagamento%coalesce(type::text, '') = '') then
		select	max(a.cd_condicao_pagamento),
			max(a.qt_dia_vencimento),
			max(a.nr_sequencia)
		into STRICT	cd_condicao_pagamento_w,
			qt_dia_vencimento_w,
			nr_seq_regra_prest_w
		from	pls_prestador_pagto a
		where	a.nr_seq_prestador = nr_seq_prestador_p
		and	current_setting('pls_pp_lote_pagamento_pck.dt_referencia_lote_ini_w')::pls_pp_lote.dt_referencia_inicio%type between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref;
		
		-- Regra de condicao de pagamento do prestador

		ie_origem_venc_tit_w := '1';
	else
		cd_condicao_pagamento_w := current_setting('pls_pp_lote_pagamento_pck.cd_cond_pgto_lote_w')::pls_pp_lote.cd_condicao_pagamento%type;
		
		-- Regra de condicao de pagamento do lote

		ie_origem_venc_tit_w := '2';
	end if;

	-- se obteve alguma condicao de pagamento entao e necessario realizar algumas validacoes

	if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') then

		select	max(a.ie_forma_pagamento)
		into STRICT	current_setting('pls_pp_lote_pagamento_pck.ie_forma_pagamento_w')::pls_parametro_pagamento.ie_forma_pagamento%type
		from	condicao_pagamento a
		where	a.cd_condicao_pagamento = cd_condicao_pagamento_w;

		-- se nao for a vista ou conforme vencimento entao chama a rotina para calcular os vencimentos

		if (current_setting('pls_pp_lote_pagamento_pck.ie_forma_pagamento_w')::pls_parametro_pagamento.ie_forma_pagamento%type not in (1, 10)) then

			-- o campo dt_ref_vencimento_lote_w e alimentado na rotina carrega_parametros, nele e feito um tratamento

			-- caso esteja informado o campo dt_vencimento_lote este e levado em consideracao, caso contrario e pego a competencia do lote

			calcular_vencimento(	cd_estabelecimento_p, cd_condicao_pagamento_w, current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp,
						qt_vencimentos_w, ds_vencimentos_w);

			-- caso a condicao de pegamento tenha mais de uma parcela, entao e descartada e assumido a referencia do lote

			-- Caso o cliente queira parcelar um pagamento temos a opcao de dividir o pagamento em lotes pequenos separando 

			-- o que se quer pagar em cada um deles, caso ainda exista a necessidade de pagar um item parcelado tera que ser

			-- estudado como faremos isso, pois temos a questao dos tributos envolvida

			if (qt_vencimentos_w > 1) then

				dt_vencimento_w := current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp;
			else
				-- tenta converter em date caso algo de errado retorna como padrao o dt_ref_vencimento_lote_w

				dt_vencimento_w := pls_util_pck.string_to_date(substr(ds_vencimentos_w,1,10), 'dd/mm/yyyy', current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp);
			end if;
		else

			-- se for a vista entao e pego a data de referencia de vencimento do lote de pagamento

			if (current_setting('pls_pp_lote_pagamento_pck.ie_forma_pagamento_w')::pls_parametro_pagamento.ie_forma_pagamento%type = 1) then

				dt_vencimento_w := current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp;

			-- senao for so ira entrar aqui caso seja Conforme vencimento, caso seja entao e necessario

			-- que o dia do vencimento esteja informado, caso nao estiver informado e utilizado tambem a 

			-- data de referencia de vencimento do lote de pagamento

			else
				-- verifica o campo dia de acordo com a origem dos dados, caso seja do lote (2) ou do prestador (1)

				if (ie_origem_venc_tit_w = '2') then

					-- se o campo dia estiver nulo entao e usado o campo ref do lote

					if (current_setting('pls_pp_lote_pagamento_pck.nr_dia_venc_lote_w')::pls_pp_lote.nr_dia_venc_lote%coalesce(type::text, '') = '') then

						dt_vencimento_w := current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp;
					else
						-- concatena o dia do vencimento com o mes de vencimento do lote + 1 mes

						dt_vencimento_w := pls_util_pck.string_to_date(	(to_char(current_setting('pls_pp_lote_pagamento_pck.nr_dia_venc_lote_w')::pls_pp_lote.nr_dia_venc_lote%type) || '/' || to_char(add_months(current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp,1),'mm/yyyy')),
												'dd/mm/yyyy',
												current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp);
					end if;
				-- senao entao e do cadastro do prestador e deve ser verificado o campo dia do mesmo

				else
					-- se o campo dia estiver nulo entao e usado o campo ref do lote

					if (coalesce(qt_dia_vencimento_w::text, '') = '') then

						dt_vencimento_w := current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp;
					else
						-- concatena o dia do vencimento com o mes de vencimento do lote + 1 mes

						dt_vencimento_w := pls_util_pck.string_to_date(	to_char(qt_dia_vencimento_w) || '/' || to_char(add_months(current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp,1),'mm/yyyy'),
												'dd/mm/yyyy',
												current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp);
					end if;
				end if;
			end if;
		end if;
	-- se nao tem condicao de pagamento entao vai de acordo com a data do lote

	else
		ie_origem_venc_tit_w := ie_origem_comp_pag_w;
	end if;
end if;

-- se nao possui condicao ou nao encontrou uma data entao a assume a data de competencia do lote

if (coalesce(dt_vencimento_w::text, '') = '') then
	dt_vencimento_w := current_setting('pls_pp_lote_pagamento_pck.dt_ref_vencimento_lote_w')::timestamp;
end if;

-- alimenta os parametros out

ie_origem_venc_tit_p := ie_origem_venc_tit_w;
nr_seq_regra_venc_p := nr_seq_regra_prest_w;
dt_compentencia_pgto_p := current_setting('pls_pp_lote_pagamento_pck.dt_mes_comp_lote_w')::pls_pp_lote.dt_mes_competencia%type;
ie_origem_comp_pag_p := ie_origem_comp_pag_w;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_pp_lote_pagamento_pck.obter_data_vencimento_prest ( nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_origem_venc_tit_p out pls_pp_prestador_tmp.ie_origem_venc_titulo%type, nr_seq_regra_venc_p out pls_pp_prestador_tmp.nr_seq_regra_venc_titulo%type, dt_compentencia_pgto_p out pls_pp_prestador_tmp.dt_comp_pag%type, ie_origem_comp_pag_p out pls_pp_prestador_tmp.ie_origem_comp_pag%type) FROM PUBLIC;
