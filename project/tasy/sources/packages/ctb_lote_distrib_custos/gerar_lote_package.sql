-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*
===============================================================================
NM_USUARIO_P: Usuario que esta executando a rotina
===============================================================================
*/
CREATE OR REPLACE PROCEDURE ctb_lote_distrib_custos.gerar_lote ( nm_usuario_p usuario.nm_usuario%type, nr_seq_mes_ref_p ctb_mes_ref.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_empresa_p empresa.cd_empresa%type ) AS $body$
DECLARE


nm_usuario_w                    usuario.nm_usuario%type not null := nm_usuario_p;
nr_seq_tabela_orc_w             tabela_custo.nr_sequencia%type not null := 0;
nr_seq_mes_ref_w                ctb_mes_ref.nr_sequencia%type not null := nr_seq_mes_ref_p;
cd_estabelecimento_w            estabelecimento.cd_estabelecimento%type not null := cd_estabelecimento_p;

/* Buscar os valores distribuidos de cada orcamento [ORIGEM] */

c01 CURSOR(
        nr_seq_tabela_pc  tabela_custo.nr_sequencia%type
        ) FOR
        SELECT  a.cd_estabelecimento,
                a.cd_centro_controle,
                a.nr_seq_ng,
                a.vl_distrib_contabil vl_movimento,
                coalesce(b.cd_conta_contabil_dist,b.cd_conta_contabil) cd_conta_contabil_dist,
                a.nr_sequencia,
                b.ds_natureza_gasto,
                a.vl_orcado,
                a.vl_avista
        from    natureza_gasto b,
                orcamento_custo a
        where   a.nr_seq_tabela = nr_seq_tabela_pc
        and     a.nr_seq_ng = b.nr_sequencia
        and     a.vl_distrib_contabil <> 0;

type t_c01 is table of c01%rowtype index by integer;
c01_w                           t_c01;

/* Buscar os valores distribuidos de cada orcamento [DESTINO] */

c02 CURSOR(
        nr_seq_tabela_pc  tabela_custo.nr_sequencia%type
        ) FOR
        SELECT  a.cd_estab_dest cd_estabelecimento,
                a.cd_centro_controle_dest cd_centro_controle,
                a.nr_seq_ng_dest,
                a.vl_distribuido vl_movimento,
                coalesce(b.cd_conta_contabil_dist,b.cd_conta_contabil) cd_conta_contabil_dist,
                a.nr_sequencia,
        b.ds_natureza_gasto,
        a.cd_sequencia_criterio,
        a.nr_distribuicao,
        a.nr_seq_distribuicao
        from    natureza_gasto b,
                orcamento_distribuido a
        where   a.nr_seq_tabela = nr_seq_tabela_pc
        and     a.nr_seq_ng_dest = b.nr_sequencia
        and     a.vl_distribuido <> 0;

type t_c02 is table of c02%rowtype index by integer;
c02_w                           t_c02;

cd_estab_tabela_w               tabela_custo.cd_estabelecimento%type;
nr_lote_contabil_w              lote_contabil.nr_lote_contabil%type;
nm_agrupador_w                  agrupador_contabil.nm_atributo%type;
nr_seq_agrupamento_w            ctb_movimento.nr_seq_agrupamento%type;
ctb_movimento_w                 ctb_movimento%rowtype;
ctb_movto_centro_custo_w        ctb_movto_centro_custo%rowtype;
ds_erro_w                       varchar(4000);
dt_movimento_w                  timestamp;
ie_debito_credito_w             ctb_grupo_conta.ie_debito_credito%type;
cd_historico_w                  ctb_regra_lote_dist_custo.cd_historico%type;
cd_conta_contabil_trans_w       ctb_regra_lote_dist_custo.cd_conta_transitoria%type;
ie_custo_multi_estab_w          varchar(1);
BEGIN
/*
Verificar se ja existe um lote de distribuicao de custos gerado no mes
Se ja existir exibe mensagem impedindo a geracao
Se for custo multi-estabelecimento, so permite um lote por empresa
senao, permite um lote por estabelecimento
*/
begin
select  a.cd_estabelecimento,
        a.nr_sequencia
into STRICT    cd_estab_tabela_w,
        nr_seq_tabela_orc_w
from    ctb_mes_ref b,
        tabela_custo a
where   b.nr_sequencia = nr_seq_mes_ref_w
and     a.dt_mes_referencia = b.dt_referencia
and     a.cd_empresa = b.cd_empresa
and     cd_estabelecimento_p = coalesce(a.cd_estabelecimento, cd_estabelecimento_p)
and     a.ie_orcado_real = 'R'
and     coalesce(a.ie_situacao,'A') = 'A'
and     a.cd_tipo_tabela_custo = 5;
exception
when too_many_rows then
        /* Foram localizadas mais de uma tabela de custo do tipo Realizado disponiveis para este estabelecimento */

        CALL wheb_mensagem_pck.exibir_mensagem_abort(current_setting('ctb_lote_distrib_custos.more_than_one_cost_table')::dic_objeto.nr_sequencia%type);
when no_data_found then
        /* A tabela de custo utilizada nao existe no sistema */

        CALL wheb_mensagem_pck.exibir_mensagem_abort(current_setting('ctb_lote_distrib_custos.cost_table_not_exists')::dic_objeto.nr_sequencia%type);
end;

/*ctb_lote_distrib_custos.val_lote_distrib_custos(nm_usuario_w,nr_seq_mes_ref_w,cd_estab_tabela_w);*/

select  fim_mes(dt_referencia)
into STRICT    dt_movimento_w
from    ctb_mes_ref
where   nr_sequencia = nr_seq_mes_ref_w;

ie_custo_multi_estab_w := custos_pck.get_custo_multi_estab(cd_estabelecimento_p);

begin
        select  a.cd_historico,
                a.cd_conta_transitoria
        into STRICT    cd_historico_w,
                cd_conta_contabil_trans_w
        from    ctb_regra_lote_dist_custo a
        where   a.cd_empresa = cd_empresa_p
        and     fim_mes(dt_movimento_w) between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia, dt_movimento_w)
        and     ((coalesce(ie_custo_multi_estab_w,'N') = 'S') or (a.cd_estabelecimento = a.cd_estabelecimento));
exception
when too_many_rows then
        /*Foi localizada mais de uma configuracao vigente de regra para o lote de distribuicao de custos.*/

        CALL wheb_mensagem_pck.exibir_mensagem_abort(current_setting('ctb_lote_distrib_custos.more_than_one_history_found')::dic_objeto.nr_sequencia%type);
        cd_historico_w := cd_historico_w;
when no_data_found then
        /*Nao foi localizada configuracao vigente de regra para o lote de distribuicao de custos.*/

        CALL wheb_mensagem_pck.exibir_mensagem_abort(current_setting('ctb_lote_distrib_custos.history_not_found')::dic_objeto.nr_sequencia%type);
        cd_historico_w := cd_historico_w;
end;
/*
Criar um lote de distribuicao de custos
*/
ctb_gerar_lote_digitacao(nr_seq_mes_ref_w,cd_estabelecimento_w,nm_usuario_w,nr_lote_contabil_w,current_setting('ctb_lote_distrib_custos.cd_tipo_lote_contabil_w')::tipo_lote_contabil.cd_tipo_lote_contabil%type);

if (coalesce(nr_lote_contabil_w,0) > 0) then
        begin
        /*
        Obter o agrupador contabil com base nas regras cadastradas, utilizando como padrao a pk do criterio de distribuicao
        */
        nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(current_setting('ctb_lote_distrib_custos.cd_tipo_lote_contabil_w')::tipo_lote_contabil.cd_tipo_lote_contabil%type)),current_setting('ctb_lote_distrib_custos.nr_seq_orcamento_w')::agrupador_contabil.nm_atributo%type);
        open c01(
                nr_seq_tabela_orc_w
                );
        <<loop_c01>>
        loop fetch c01 bulk collect into c01_w limit current_setting('ctb_lote_distrib_custos.bulk_collect_limit')::integer;
        exit loop_c01 when c01_w.count = 0;
                <<loop_for_c01_w>>
                for i in 1..c01_w.count loop
                /*
                Tratamento padrao de agrupador contabil
                */
                if (nm_agrupador_w = current_setting('ctb_lote_distrib_custos.nr_seq_orcamento_w')::agrupador_contabil.nm_atributo%type)then
                        nr_seq_agrupamento_w := c01_w[i].nr_sequencia;
                end if;

                /*
                Tratamento para valor padrao do agrupador contabil
                */
                if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                        nr_seq_agrupamento_w := c01_w[i].nr_sequencia;
                end if;

                select  b.ie_debito_credito
                into STRICT    ie_debito_credito_w
                from    conta_contabil a,
                        ctb_grupo_conta b
                where   a.cd_grupo = b.cd_grupo
                and     a.cd_conta_contabil = c01_w[i].cd_conta_contabil_dist;

                if (c01_w[i].vl_movimento < 0) then
                        if (ie_debito_credito_w = 'C') then
                                ie_debito_credito_w := 'D';
                        else
                                ie_debito_credito_w := 'C';
                        end if;
                end if;

                if (ie_debito_credito_w = 'C') then
                        ctb_movimento_w.cd_conta_debito         := c01_w[i].cd_conta_contabil_dist;
                        ctb_movimento_w.cd_classif_debito       := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_debito, null, dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_credito        := null;
                        ctb_movimento_w.cd_classif_credito      := null;
                elsif (ie_debito_credito_w = 'D') then
                        ctb_movimento_w.cd_conta_credito        := c01_w[i].cd_conta_contabil_dist;
                        ctb_movimento_w.cd_classif_credito      := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_credito, null, dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_debito         := null;
                        ctb_movimento_w.cd_classif_debito       := null;
                end if;

                /*
                Tirar da conta referente a ORCAMENTO_CUSTO
                */
                ctb_movimento_w.nr_lote_contabil        := nr_lote_contabil_w;
                ctb_movimento_w.nr_seq_mes_ref          := nr_seq_mes_ref_w;
                ctb_movimento_w.dt_atualizacao          := clock_timestamp();
                ctb_movimento_w.nm_usuario              := nm_usuario_w;
                ctb_movimento_w.dt_atualizacao_nrec     := clock_timestamp();
                ctb_movimento_w.nm_usuario_nrec         := nm_usuario_w;

                ctb_movimento_w.cd_estabelecimento      := c01_w[i].cd_estabelecimento;
                ctb_movimento_w.dt_movimento            := dt_movimento_w;
                ctb_movimento_w.cd_historico            := cd_historico_w;
                ctb_movimento_w.vl_movimento            := c01_w[i].vl_movimento;
                ctb_movimento_w.nr_seq_agrupamento      := nr_seq_agrupamento_w;
                ctb_movimento_w.nr_documento            := c01_w[i].nr_sequencia;
                ctb_movimento_w.ds_compl_historico      := substr(wheb_mensagem_pck.get_texto(current_setting('ctb_lote_distrib_custos.compl_hist_account_mov_distrib')::dic_objeto.nr_sequencia%type,'DS_NATUREZA_GASTO=' || c01_w[i].ds_natureza_gasto || ';' ||
                                                            'NR_SEQUENCIA=' || c01_w[i].nr_sequencia || ';' ||
                                                            'VL_ORCADO=' || campo_mascara_virgula_casas(c01_w[i].vl_orcado,2) || ';' ||
                                                            'VL_AVISTA=' || campo_mascara_virgula_casas(c01_w[i].vl_avista,2)),1,255);
                ctb_movimento_w.ie_transitorio          := 'N';
                ctb_movimento_w.ie_revisado             := 'N';
                ctb_movimento_w.ie_eliminacao_lancto    := 'N';

                ctb_movimento_w := ctb_lote_distrib_custos.inserir_movimento(ctb_movimento_w);

                ctb_movto_centro_custo_w.nr_seq_movimento       := ctb_movimento_w.nr_sequencia;
                ctb_movto_centro_custo_w.cd_centro_custo        := c01_w[i].cd_centro_controle;
                ctb_movto_centro_custo_w.dt_atualizacao         := clock_timestamp();
                ctb_movto_centro_custo_w.nm_usuario             := nm_usuario_w;
                ctb_movto_centro_custo_w.vl_movimento           := c01_w[i].vl_movimento;
                ctb_movto_centro_custo_w.pr_rateio              := 100;
                ctb_movto_centro_custo_w.dt_atualizacao_nrec    := clock_timestamp();
                ctb_movto_centro_custo_w.nm_usuario_nrec        := nm_usuario_w;

                ctb_movto_centro_custo_w := ctb_lote_distrib_custos.inserir_movimento_cc(ctb_movto_centro_custo_w);

                /*
                Colocar na conta referente a CONTA TRANSITORIA
                */
                if (ie_debito_credito_w = 'D') then
                        ctb_movimento_w.cd_conta_debito         := cd_conta_contabil_trans_w;
                        ctb_movimento_w.cd_classif_debito       := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_debito,null,dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_credito        := null;
                        ctb_movimento_w.cd_classif_credito      := null;
                elsif (ie_debito_credito_w = 'C') then
                        ctb_movimento_w.cd_conta_credito        := cd_conta_contabil_trans_w;
                        ctb_movimento_w.cd_classif_credito      := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_credito,null,dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_debito         := null;
                        ctb_movimento_w.cd_classif_debito       := null;
                end if;

                ctb_movimento_w := ctb_lote_distrib_custos.inserir_movimento(ctb_movimento_w);

            end loop loop_for_c01_w;
        end loop loop_c01;
        close c01;

        open c02(
                nr_seq_tabela_orc_w
                );
        <<loop_c02>>
        loop fetch c02 bulk collect into c02_w limit current_setting('ctb_lote_distrib_custos.bulk_collect_limit')::integer;
        exit loop_c02 when c02_w.count = 0;
                <<loop_for_c02_w>>
                for i in 1..c02_w.count loop
                /*
                Tratamento padrao de agrupador contabil
                */
                if (nm_agrupador_w = current_setting('ctb_lote_distrib_custos.nr_seq_orcamento_w')::agrupador_contabil.nm_atributo%type) then
                        nr_seq_agrupamento_w := c02_w[i].nr_sequencia;
                end if;

                /*
                Tratamento para valor padrao do agrupador contabil
                */
                if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                        nr_seq_agrupamento_w := c02_w[i].nr_sequencia;
                end if;

                select  b.ie_debito_credito
                into STRICT    ie_debito_credito_w
                from    conta_contabil a,
                        ctb_grupo_conta b
                where   a.cd_grupo = b.cd_grupo
                and     a.cd_conta_contabil = c02_w[i].cd_conta_contabil_dist;

                if (ie_debito_credito_w = 'D') then
                        ctb_movimento_w.cd_conta_debito         := c02_w[i].cd_conta_contabil_dist;
                        ctb_movimento_w.cd_classif_debito       := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_debito,null,dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_credito        := null;
                        ctb_movimento_w.cd_classif_credito      := null;
                elsif (ie_debito_credito_w = 'C') then
                        ctb_movimento_w.cd_conta_credito        := c02_w[i].cd_conta_contabil_dist;
                        ctb_movimento_w.cd_classif_credito      := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_credito,null,dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_debito         := null;
                        ctb_movimento_w.cd_classif_debito       := null;
                end if;

                /*
                Tirar da conta referente a ORCAMENTO_CUSTO
                */
                ctb_movimento_w.nr_lote_contabil        := nr_lote_contabil_w;
                ctb_movimento_w.nr_seq_mes_ref          := nr_seq_mes_ref_w;
                ctb_movimento_w.dt_atualizacao          := clock_timestamp();
                ctb_movimento_w.nm_usuario              := nm_usuario_w;
                ctb_movimento_w.dt_atualizacao_nrec     := clock_timestamp();
                ctb_movimento_w.nm_usuario_nrec         := nm_usuario_w;

                ctb_movimento_w.cd_estabelecimento      := c02_w[i].cd_estabelecimento;
                ctb_movimento_w.dt_movimento            := dt_movimento_w;
                ctb_movimento_w.cd_historico            := cd_historico_w;
                ctb_movimento_w.vl_movimento            := c02_w[i].vl_movimento;
                ctb_movimento_w.nr_seq_agrupamento      := nr_seq_agrupamento_w;
                ctb_movimento_w.nr_documento            := c02_w[i].nr_sequencia;

                ctb_movimento_w.ds_compl_historico      := substr(wheb_mensagem_pck.get_texto(current_setting('ctb_lote_distrib_custos.compl_hist_account_mov_receiv')::dic_objeto.nr_sequencia%type,'DS_NATUREZA_GASTO=' || c02_w[i].ds_natureza_gasto || ';' ||
                                                            'CD_SEQUENCIA_CRITERIO=' || c02_w[i].cd_sequencia_criterio || ';' ||
                                                            'NR_DISTRIBUICAO=' || c02_w[i].nr_distribuicao || ';' ||
                                                            'NR_SEQ_DISTRIBUICAO=' || c02_w[i].nr_seq_distribuicao),1,255);
                ctb_movimento_w.ie_transitorio          := 'N';
                ctb_movimento_w.ie_revisado             := 'N';
                ctb_movimento_w.ie_eliminacao_lancto    := 'N';

                ctb_movimento_w := ctb_lote_distrib_custos.inserir_movimento(ctb_movimento_w);

                ctb_movto_centro_custo_w.nr_seq_movimento       := ctb_movimento_w.nr_sequencia;
                ctb_movto_centro_custo_w.cd_centro_custo        := c02_w[i].cd_centro_controle;
                ctb_movto_centro_custo_w.dt_atualizacao         := clock_timestamp();
                ctb_movto_centro_custo_w.nm_usuario             := nm_usuario_w;
                ctb_movto_centro_custo_w.vl_movimento           := c02_w[i].vl_movimento;
                ctb_movto_centro_custo_w.pr_rateio              := 100;
                ctb_movto_centro_custo_w.dt_atualizacao_nrec    := clock_timestamp();
                ctb_movto_centro_custo_w.nm_usuario_nrec        := nm_usuario_w;

                ctb_movto_centro_custo_w := ctb_lote_distrib_custos.inserir_movimento_cc(ctb_movto_centro_custo_w);

                /*
                Colocar na conta referente a CONTA TRANSITORIA
                */
                if (ie_debito_credito_w = 'C') then
                        ctb_movimento_w.cd_conta_debito         := cd_conta_contabil_trans_w;
                        ctb_movimento_w.cd_classif_debito       := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_debito,null,dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_credito        := null;
                        ctb_movimento_w.cd_classif_credito      := null;
                elsif (ie_debito_credito_w = 'D') then
                        ctb_movimento_w.cd_conta_credito        := cd_conta_contabil_trans_w;
                        ctb_movimento_w.cd_classif_credito      := substr(ctb_obter_classif_conta(ctb_movimento_w.cd_conta_credito,null,dt_movimento_w),1,40);
                        ctb_movimento_w.cd_conta_debito         := null;
                        ctb_movimento_w.cd_classif_debito       := null;
                end if;

                ctb_movimento_w := ctb_lote_distrib_custos.inserir_movimento(ctb_movimento_w);

            end loop loop_for_c02_w;
        end loop loop_c02;
        close c02;
        commit;
        ctb_consistir_lote(nr_lote_contabil_w, ds_erro_w, nm_usuario_w);

        if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
                begin
                CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
                end;
        end if;
        end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_lote_distrib_custos.gerar_lote ( nm_usuario_p usuario.nm_usuario%type, nr_seq_mes_ref_p ctb_mes_ref.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_empresa_p empresa.cd_empresa%type ) FROM PUBLIC;
