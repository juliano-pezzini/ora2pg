-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Rotina chamada dentro do Delphi, responsável por desfazer os dados quentes gerados
CREATE OR REPLACE PROCEDURE pls_gerar_pre_estab_ans_pck.desfazer_preparacao_base ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;

C01 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_monit_tiss_pre_est
	where	nr_seq_lote_monitor = nr_seq_lote_pc;

C02 CURSOR(nr_seq_lote_pc		pls_monitor_tiss_lote_ret.nr_sequencia%type) FOR
	SELECT	a.nr_identificador,
		a.nr_seq_prestador
	from	pls_monit_tiss_pre_est_val a
	where	a.nr_seq_lote_monitor = nr_seq_lote_pc
	and	(a.cd_cpf_cnpj IS NOT NULL AND a.cd_cpf_cnpj::text <> '');

C03 CURSOR(	dt_inicio_pc		pls_monitor_tiss_lote.dt_mes_competencia%type,
		dt_fim_pc		pls_monitor_tiss_lote.dt_mes_competencia%type,
		nr_seq_regra_pc		pls_regra_franq_pag.nr_sequencia%type,
		nr_seq_prestador_pc	pls_prestador.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia
	from	pls_franq_pag a,
		pls_franq_pag_prest b
	where	a.nr_sequencia = b.nr_seq_franq_pag
	and	a.dt_referencia between dt_inicio_pc and dt_fim_pc
	and	b.nr_seq_regra = nr_seq_regra_pc
	and	b.nr_seq_prestador = nr_seq_prestador_pc
	and	b.ie_status_monitoramento = 'PR';

C04 CURSOR(nr_seq_lote_pc		pls_monitor_tiss_lote_ret.nr_sequencia%type) FOR
	SELECT	nr_identificador
	from	pls_monit_tiss_pre_est_val a
	where	a.nr_seq_lote_monitor = nr_seq_lote_pc
	and	(a.nr_registro_operadora_inter IS NOT NULL AND a.nr_registro_operadora_inter::text <> '');

BEGIN
-- grava o log de processo que sinaliza a ação que foi feita
CALL pls_gerar_pre_estab_ans_pck.grava_processo(nr_seq_lote_p, 5, nm_usuario_p);

-- Alimenta as variáveis de data
select	trunc(dt_mes_competencia, 'mm'),
	fim_mes(dt_mes_competencia)
into STRICT	current_setting('pls_gerar_pre_estab_ans_pck.dt_inicio_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type,
	current_setting('pls_gerar_pre_estab_ans_pck.dt_fim_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type
from	pls_monitor_tiss_lote
where	nr_sequencia = nr_seq_lote_p;

-- Exclui os registros quentes gerados
Open C01(nr_seq_lote_p);
loop
	fetch C01 bulk collect into tb_nr_sequencia_w
	limit current_setting('pls_gerar_pre_estab_ans_pck.qt_transacao_w')::integer;

	exit when tb_nr_sequencia_w.count = 0;

	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
		delete	FROM pls_monit_tiss_pre_est
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;

if (C01%ISOPEN) then
	close C01;
end if;

-- Altera o status das franquias novamente para pendente
for r_C02_w in C02(nr_seq_lote_p) loop

	Open C03(current_setting('pls_gerar_pre_estab_ans_pck.dt_inicio_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, current_setting('pls_gerar_pre_estab_ans_pck.dt_fim_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, r_C02_w.nr_identificador, r_C02_w.nr_seq_prestador);
	loop
		tb_nr_sequencia_w.delete;

		fetch C03 bulk collect into tb_nr_sequencia_w
		limit current_setting('pls_gerar_pre_estab_ans_pck.qt_transacao_w')::integer;

		exit when tb_nr_sequencia_w.count = 0;

		forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
			update	pls_franq_pag_prest
			set	ie_status_monitoramento = 'P'
			where	nr_sequencia = tb_nr_sequencia_w(i);
		commit;
	end loop;

	if (C03%ISOPEN) then
		close C03;
	end if;
end loop;

-- Altera o status dos A800 novamente para pendente
Open C04(nr_seq_lote_p);
loop
	tb_nr_sequencia_w.delete;

	fetch C04 bulk collect into tb_nr_sequencia_w
	limit current_setting('pls_gerar_pre_estab_ans_pck.qt_transacao_w')::integer;

	exit when tb_nr_sequencia_w.count = 0;

	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
		update	ptu_fatura_pre
		set	ie_status_monitoramento = 'P'
		where	nr_sequencia = tb_nr_sequencia_w(i);
	commit;
end loop;

if (C04%ISOPEN) then
	close C04;
end if;

-- Deleta os arquivos gerados
delete	FROM pls_monitor_tiss_arquivo
where	nr_seq_lote_monitor = nr_seq_lote_p;

-- Altera o status do lote
update	pls_monitor_tiss_lote set
	ie_status  	= 'LE',
	dt_atualizacao  = clock_timestamp(),
	dt_geracao_lote	 = NULL,
	nm_usuario 	= nm_usuario_p
where 	nr_sequencia  	= nr_seq_lote_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pre_estab_ans_pck.desfazer_preparacao_base ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
