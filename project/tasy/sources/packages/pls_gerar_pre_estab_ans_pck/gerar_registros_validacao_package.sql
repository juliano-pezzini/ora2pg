-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Rotina chamada pelo Delphi para a geração do lote pré-estabelecido
CREATE OR REPLACE PROCEDURE pls_gerar_pre_estab_ans_pck.gerar_registros_validacao ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_seq_processo_w	pls_monitor_tempo_lote.nr_sequencia%type;
vl_param_session_w	integer;


BEGIN
-- Verifica o parâmetro de controle de estabelecimento
select	coalesce(max(ie_monitoramento_ans),'N')
into STRICT	current_setting('pls_gerar_pre_estab_ans_pck.ie_monitoramento_ans_w')::pls_controle_estab.ie_monitoramento_ans%type
from	pls_controle_estab;

-- Alimenta as variáveis globais de data
select	trunc(dt_mes_competencia, 'mm'),
	fim_mes(dt_mes_competencia)
into STRICT	current_setting('pls_gerar_pre_estab_ans_pck.dt_inicio_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type,
	current_setting('pls_gerar_pre_estab_ans_pck.dt_fim_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type
from	pls_monitor_tiss_lote
where	nr_sequencia = nr_seq_lote_p;

-- Verifica o parametro Oracle db_file_multiblock_read_count. O mesmo deve ter 128 ou mais para execução desta rotina por conta do
-- select de vários registros e os diversos inserts\updates que serão feitos.
begin
	EXECUTE	'select to_number(max(value)) ' ||
				'from	v$parameter ' ||
				'where  name = ''db_file_multiblock_read_count'' '
	into STRICT	vl_param_session_w;
exception
when others then
	-- ganha 1000 pra não entrar nos if's e não alterar nada.
	vl_param_session_w := 1000;
end;
-- Se tiver menos que esse valor então manda para 128 e no fim da rotina será retornado ao original caso foi alterado.
if (vl_param_session_w < 128) then

	-- Trata a exceção, se não der para alterar deixa como está,
	begin
		EXECUTE 'alter session set db_file_multiblock_read_count=128';
	exception
	when others then
		null;
	end;
end if;

-- Seta todas os logs de tempo para inativos
update	pls_monitor_tempo_lote
set	ie_situacao = 'N'
where	nr_seq_lote_monitor = nr_seq_lote_p;
commit;

-- Grava o processo aplicado pelo usuário
CALL pls_gerar_pre_estab_ans_pck.grava_processo(nr_seq_lote_p, 8, nm_usuario_p);

-- Gera os lotes de franquia
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(nr_seq_lote_p, 'Gerando os lotes de franquia', 'I', nm_usuario_p, nr_seq_processo_w);
CALL pls_gerar_pre_estab_ans_pck.carregar_lotes_franquia(nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(null, null, 'F', null, nr_seq_processo_w);

-- Gera os lotes de A800
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(nr_seq_lote_p, 'Gerando os lotes de A800', 'I', nm_usuario_p, nr_seq_processo_w);
CALL pls_gerar_pre_estab_ans_pck.carregar_lotes_a800(nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(null, null, 'F', null, nr_seq_processo_w);

-- Alimenta os dados adicionais
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(nr_seq_lote_p, 'Alimentando os dados adicionais dos registros selecionados', 'I', nm_usuario_p, nr_seq_processo_w);
CALL pls_gerar_pre_estab_ans_pck.alimenta_dados_adic_lote(nr_seq_lote_p);
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(null, null, 'F', null, nr_seq_processo_w);

-- Lança as inconsistências
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(nr_seq_lote_p, 'Consistindo as informações geradas', 'I', nm_usuario_p, nr_seq_processo_w);
CALL pls_gerar_pre_estab_ans_pck.consiste_lote(nr_seq_lote_p, nm_usuario_p, 'N');
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(null, null, 'F', null, nr_seq_processo_w);

-- Atualiza os totalizadores
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(nr_seq_lote_p, 'Atualizando os totalizadores do lote', 'I', nm_usuario_p, nr_seq_processo_w);
CALL pls_gerar_pre_estab_ans_pck.atualiza_totalizadores_lote(nr_seq_lote_p, nm_usuario_p);
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(null, null, 'F', null, nr_seq_processo_w);

-- Atauliza o status do lote
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(nr_seq_lote_p, 'Atualizando o status do lote', 'I', nm_usuario_p, nr_seq_processo_w);
CALL CALL pls_gerar_pre_estab_ans_pck.atualiza_status_lote(nr_seq_lote_p, nm_usuario_p);
nr_seq_processo_w := pls_gerar_pre_estab_ans_pck.grava_log_tempo_processo(null, null, 'F', null, nr_seq_processo_w);

-- se o parametro teve que ser alterado então volta como tava.
if (vl_param_session_w < 128) then

	-- Trata a exceção, se não der para alterar deixa como está,
	begin
		EXECUTE 'alter session set db_file_multiblock_read_count=' || vl_param_session_w;
	exception
	when others then
		null;
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pre_estab_ans_pck.gerar_registros_validacao ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
