-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Rotina responsável por atualizar o status dos registros para "Processando"
CREATE OR REPLACE PROCEDURE pls_gerar_pre_estab_ans_pck.atualiza_status_prep_base ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;

C01 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	nr_identificador
	from	pls_monit_tiss_pre_est_val
	where	nr_seq_lote_monitor = nr_seq_lote_pc
	and	(nr_seq_prestador IS NOT NULL AND nr_seq_prestador::text <> '');

C02 CURSOR(	dt_inicio_pc		pls_monitor_tiss_lote.dt_mes_competencia%type,
		dt_fim_pc		pls_monitor_tiss_lote.dt_mes_competencia%type,
		nr_seq_regra_pc		pls_regra_franq_pag.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia
	from	pls_franq_pag a,
		pls_franq_pag_prest b
	where	a.nr_sequencia = b.nr_seq_franq_pag
	and	a.dt_referencia between dt_inicio_pc and dt_fim_pc
	and	b.nr_seq_regra = nr_seq_regra_pc
	and	b.ie_status_monitoramento = 'P';

C03 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	nr_identificador
	from	pls_monit_tiss_pre_est_val
	where	nr_seq_lote_monitor = nr_seq_lote_pc
	and	(cd_cooperativa IS NOT NULL AND cd_cooperativa::text <> '');

BEGIN
-- Ao prepara a base para envio, pega todas as contratações e seta o status para "Processando"
-- Evitando que caso seja gerado um novo lote antes de importar o retorno, gere registros.
for r_C01_w in C01(nr_seq_lote_p) loop

	Open C02(current_setting('pls_gerar_pre_estab_ans_pck.dt_inicio_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, current_setting('pls_gerar_pre_estab_ans_pck.dt_fim_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type, r_C01_w.nr_identificador);
	loop
		tb_nr_sequencia_w.delete;

		fetch C02 bulk collect into tb_nr_sequencia_w
		limit current_setting('pls_gerar_pre_estab_ans_pck.qt_transacao_w')::integer;

		exit when tb_nr_sequencia_w.count = 0;

		forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
			update	pls_franq_pag_prest
			set	ie_status_monitoramento = 'PR',
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
			where	nr_sequencia = tb_nr_sequencia_w(i);
		commit;
	end loop;

	if (C02%ISOPEN) then
		close C02;
	end if;
end loop;

Open C03(nr_seq_lote_p);
loop
	tb_nr_sequencia_w.delete;

	fetch C03 bulk collect into tb_nr_sequencia_w
	limit current_setting('pls_gerar_pre_estab_ans_pck.qt_transacao_w')::integer;

	exit when tb_nr_sequencia_w.count = 0;

	forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
		update	ptu_fatura_pre
		set	ie_status_monitoramento = 'PR',
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	nr_sequencia = tb_nr_sequencia_w(i)
		and	ie_status_monitoramento = 'P';
	commit;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pre_estab_ans_pck.atualiza_status_prep_base ( nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
