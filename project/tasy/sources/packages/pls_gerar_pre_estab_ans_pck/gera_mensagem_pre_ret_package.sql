-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Rotina responsável por ler cada tag do retorno
CREATE OR REPLACE PROCEDURE pls_gerar_pre_estab_ans_pck.gera_mensagem_pre_ret ( nr_seq_lote_ret_p pls_monitor_tiss_lote_ret.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


dados_lote_ret_w	dados_lote_ret;
nr_seq_pre_est_ret_w	pls_monit_tiss_pre_est_ret.nr_sequencia%type;
ds_xml_aux_w		varchar(4000);

C01 CURSOR FOR
	SELECT	upper(ds_xml) ds_xml
	from	w_pls_monitor_ans_ret;

BEGIN

for r_C01_w in C01 loop

	-- Limpa as variáveis
	dados_lote_ret_w.nr_seq_guia_monitor_ret	:= '';
	dados_lote_ret_w.ie_tipo_ident_prest		:= '';
	dados_lote_ret_w.cd_cpf_cnpj			:= '';
	dados_lote_ret_w.nr_registro_operadora_inter	:= '';
	dados_lote_ret_w.nr_identificador		:= '';

	-- Aliemnta as informações, buscando o valor das tags
	dados_lote_ret_w.nr_seq_guia_monitor_ret	:= nr_seq_lote_ret_p;
	dados_lote_ret_w.ie_tipo_ident_prest		:= pls_util_pck.obter_valor_tag(r_C01_w.ds_xml, '<ANS:IDENTIFICADOREXECUTANTE>');
	dados_lote_ret_w.cd_cpf_cnpj			:= pls_util_pck.obter_valor_tag(r_C01_w.ds_xml, '<ANS:CODIGOCNPJ_CPF>');
	dados_lote_ret_w.nr_registro_operadora_inter	:= pls_util_pck.obter_valor_tag(r_C01_w.ds_xml, '<ANS:REGISTROANSOPERADORAINTERMEDIARIA>');
	dados_lote_ret_w.nr_identificador		:= pls_util_pck.obter_valor_tag(r_C01_w.ds_xml, '<ANS:IDENTIFICACAOVALORPREESTABELECIDO>');

	-- Manda para o banco
	nr_seq_pre_est_ret_w := pls_gerar_pre_estab_ans_pck.gera_contratacao_ret(dados_lote_ret_w, nm_usuario_p, nr_seq_pre_est_ret_w);

	-- Alimenta a descrição do XML em uma variável para poder manipular
	ds_xml_aux_w := r_C01_w.ds_xml;

	-- Enquanto tiver inconsistências continua
	while(position('<ANS:ERROSVALORPREESTABELECIDO>' in ds_xml_aux_w) > 0) and (position('</ANS:ERROSVALORPREESTABELECIDO>' in ds_xml_aux_w) > 0) loop

		-- Gera a glosa passando o campo e a glosa
		CALL pls_gerar_pre_estab_ans_pck.gerar_glosa_pre_ret(
					null,
					nr_seq_pre_est_ret_w,
					pls_util_pck.obter_valor_tag(ds_xml_aux_w, '<ANS:CODIGOERRO>'),
					pls_util_pck.obter_valor_tag(ds_xml_aux_w, '<ANS:IDENTIFICADORCAMPO>'),
					nm_usuario_p);

		-- Retira a parte já inserida
		ds_xml_aux_w := substr(ds_xml_aux_w, position('</ANS:ERROSVALORPREESTABELECIDO>' in ds_xml_aux_w) + 28, length(ds_xml_aux_w));
	end loop;
end loop;
-- Atualiza o status das contratações, caso negado ou aceito
CALL pls_gerar_pre_estab_ans_pck.atualiza_status_contratacoes(nr_seq_lote_ret_p, nm_usuario_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pre_estab_ans_pck.gera_mensagem_pre_ret ( nr_seq_lote_ret_p pls_monitor_tiss_lote_ret.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
