-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_pre_estab_ans_pck.alimenta_dados_adic_lote (nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type) AS $body$
DECLARE


dados_prestador_w	dados_prestador;
dados_lote_update_w	dados_lote;
nr_registro_ans_w	pls_congenere.cd_ans%type;
nr_identificador_w	pls_monit_tiss_pre_est_val.nr_identificador%type;
vl_total_franquia_w	pls_monit_tiss_pre_est_val.vl_total_franquia%type;
qt_parcelas_w		integer;
i			integer := 0;

C01 CURSOR(nr_seq_lote_pc	pls_monitor_tiss_lote.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_pre_est_val,
		nr_seq_prestador,
		cd_cooperativa,
		nr_seq_fatura_pre,
		nr_seq_regra_franq
	from	pls_monit_tiss_pre_est_val
	where	nr_seq_lote_monitor = nr_seq_lote_pc;

BEGIN

for r_C01_w in C01(nr_seq_lote_p) loop

	dados_prestador_w.ie_tipo_ident_prest 		:= null;
	dados_prestador_w.cd_cpf_cnpj 			:= null;
	dados_prestador_w.cd_cnes 			:= null;
	dados_prestador_w.cd_municipio_ibge_prest 	:= null;
	nr_identificador_w				:= null;
	nr_registro_ans_w				:= null;
	vl_total_franquia_w				:= 0;
	qt_parcelas_w					:= 0;

	if (r_C01_w.nr_seq_prestador IS NOT NULL AND r_C01_w.nr_seq_prestador::text <> '') then

		dados_prestador_w := pls_gerar_pre_estab_ans_pck.obter_dados_prestador(r_C01_w.nr_seq_prestador);

	elsif (r_C01_w.cd_cooperativa IS NOT NULL AND r_C01_w.cd_cooperativa::text <> '') then

		select	max(cd_ans)
		into STRICT	nr_registro_ans_w
		from	pls_congenere
		where	cd_cooperativa = r_C01_w.cd_cooperativa;

		if (coalesce(nr_registro_ans_w::text, '') = '') then
			select	max(cd_ans)
			into STRICT	nr_registro_ans_w
			from	pls_congenere
			where	cd_cooperativa = (r_C01_w.cd_cooperativa)::numeric;
		end if;
	end if;

	if (r_C01_w.nr_seq_regra_franq IS NOT NULL AND r_C01_w.nr_seq_regra_franq::text <> '') then

		nr_identificador_w := r_C01_w.nr_seq_regra_franq;

		select	coalesce(vl_total_franquia,0)
		into STRICT	vl_total_franquia_w
		from	pls_regra_franq_pag
		where	nr_sequencia = r_c01_w.nr_seq_regra_franq;

		if (vl_total_franquia_w = 0) then

			select	coalesce(vl_franquia,0)
			into STRICT	vl_total_franquia_w
			from	pls_regra_franq_pag
			where	nr_sequencia = r_c01_w.nr_seq_regra_franq;

			select	count(1)
			into STRICT	qt_parcelas_w
			from	pls_franq_pag a,
				pls_franq_pag_prest b
			where	a.nr_sequencia = b.nr_seq_franq_pag
			and	a.dt_referencia between current_setting('pls_gerar_pre_estab_ans_pck.dt_inicio_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type and current_setting('pls_gerar_pre_estab_ans_pck.dt_fim_ref_w')::pls_monitor_tiss_lote.dt_mes_competencia%type
			and	b.nr_seq_regra = r_c01_w.nr_seq_regra_franq
			and	b.nr_seq_prestador = r_C01_w.nr_seq_prestador;

			vl_total_franquia_w := vl_total_franquia_w * qt_parcelas_w;
		end if;
	elsif (r_C01_w.nr_seq_fatura_pre IS NOT NULL AND r_C01_w.nr_seq_fatura_pre::text <> '') then

		nr_identificador_w := r_C01_w.nr_seq_fatura_pre;

		select	coalesce(vl_total,0)
		into STRICT	vl_total_franquia_w
		from	ptu_fatura_pre
		where	nr_sequencia = r_c01_w.nr_seq_fatura_pre;
	end if;

	dados_lote_update_w.nr_sequencia(i)			:= r_C01_w.nr_seq_pre_est_val;
	dados_lote_update_w.ie_tipo_ident_prest(i)		:= dados_prestador_w.ie_tipo_ident_prest;
	dados_lote_update_w.cd_cpf_cnpj(i)			:= dados_prestador_w.cd_cpf_cnpj;
	dados_lote_update_w.cd_cnes(i)				:= dados_prestador_w.cd_cnes;
	dados_lote_update_w.cd_municipio_ibge_prest(i)		:= dados_prestador_w.cd_municipio_ibge_prest;
	dados_lote_update_w.nr_registro_operadora_inter(i)	:= nr_registro_ans_w;
	dados_lote_update_w.nr_identificador(i)			:= nr_identificador_w;
	dados_lote_update_w.vl_total_franquia(i)		:= vl_total_franquia_w;
	dados_lote_update_w.cd_cooperativa(i)			:= null;

	if (dados_lote_update_w.vl_total_franquia.count >= current_setting('pls_gerar_pre_estab_ans_pck.qt_transacao_w')::integer) then
		dados_lote_update_w := pls_gerar_pre_estab_ans_pck.atualiza_dados_lote(dados_lote_update_w);
		i := 0;
	else
		i := i + 1;
	end if;
end loop;

dados_lote_update_w := pls_gerar_pre_estab_ans_pck.atualiza_dados_lote(dados_lote_update_w);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_pre_estab_ans_pck.alimenta_dados_adic_lote (nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type) FROM PUBLIC;
