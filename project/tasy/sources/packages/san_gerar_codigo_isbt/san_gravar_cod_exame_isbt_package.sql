-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE san_gerar_codigo_isbt.san_gravar_cod_exame_isbt ( nr_seq_doacao_p bigint) AS $body$
DECLARE


nr_seq_exame_w      	SAN_EXAME_REALIZADO.NR_SEQ_EXAME%type;
qt_exames_w		bigint := 0;
cd_ISBT_W		SAN_TEST_ESP_GER_COD_ISBT.CD_ISBT%type;
nr_seq_lote_w 		SAN_EXAME_LOTE.NR_SEQ_DOACAO%type;
ie_possui_versao_isbt_w	varchar(10);	



BEGIN

select 	max('S')
into STRICT 	ie_possui_versao_isbt_w
from	SAN_TEST_ESP_GER_VER_ISBT
where 	ie_situacao = 'A';

if ((nr_seq_doacao_p IS NOT NULL AND nr_seq_doacao_p::text <> '') and ie_possui_versao_isbt_w = 'S') then

	select 	max(nr_sequencia)
	into STRICT 	nr_seq_lote_w
	from 	SAN_EXAME_LOTE
	where 	nr_seq_doacao = nr_seq_doacao_p;

	if (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then
		select  count(*)
		into STRICT qt_exames_w
		from san_exame_realizado a, SAN_EXAME b 
		where 	a.NR_SEQ_EXAME_LOTE = nr_seq_lote_w
		and a.NR_SEQ_EXAME = b.NR_SEQUENCIA
		and (a.ds_resultado IS NOT NULL AND a.ds_resultado::text <> '') 
		and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and exists (
			SELECT 1 from 
			SAN_TEST_ESP_REG_GER_ISBT x
			where x.NR_SEQ_EXAME = a.NR_SEQ_EXAME
			and (x.DS_RESULTADO = a.DS_RESULTADO or coalesce(x.DS_RESULTADO::text, '') = '')
			and x.IE_SITUACAO = 'A'
			);
	
		if (qt_exames_w > 0) then
			begin
			select 	a.cd_isbt
			into STRICT 	cd_ISBT_W
			from 	SAN_TEST_ESP_GER_COD_ISBT a,
				SAN_TEST_ESP_GER_VER_ISBT d
			where 	a.nr_seq_versao_test = d.nr_sequencia
			and 	a.ie_situacao = 'A'
			and 	d.ie_situacao = 'A'
			and 	a.nr_sequencia in ((
					SELECT  x.NR_SEQ_COD_TEST_ESP
					from 	san_exame_realizado b, 
						SAN_EXAME c, 
						SAN_TEST_ESP_REG_GER_ISBT x 
					where 	b.NR_SEQ_EXAME_LOTE = nr_seq_lote_w
					and 	b.NR_SEQ_EXAME = c.NR_SEQUENCIA
					and 	(b.ds_resultado IS NOT NULL AND b.ds_resultado::text <> '') 
					and 	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
					and 	x.NR_SEQ_EXAME = b.NR_SEQ_EXAME
					and (x.DS_RESULTADO = b.DS_RESULTADO or coalesce(x.DS_RESULTADO::text, '') = '')
					and 	x.IE_SITUACAO = 'A'
					and (	SELECT count(*) 
							from SAN_TEST_ESP_REG_GER_ISBT y
							where y.NR_SEQ_COD_TEST_ESP = a.nr_sequencia) = qt_exames_w
					group by NR_SEQ_COD_TEST_ESP  HAVING COUNT(*) = qt_exames_w));
			     exception when others then
			     	cd_ISBT_W := 'N0000'; /* Valor padrao quando nao localiza um codigo para os exames informados */
			     end;
					
		else
			select 	max(a.cd_isbt)
			into STRICT 	cd_ISBT_W
			from 	SAN_TEST_ESP_GER_COD_ISBT a,
				SAN_TEST_ESP_GER_VER_ISBT b
			where 	a.nr_seq_versao_test = b.nr_sequencia
			and 	a.ie_situacao = 'A'
			and 	b.ie_situacao = 'A'
			and not exists (SELECT 1
					from SAN_TEST_ESP_REG_GER_ISBT x
					where x.NR_SEQ_COD_TEST_ESP = a.nr_sequencia);
		end if;
		
		if (cd_ISBT_W IS NOT NULL AND cd_ISBT_W::text <> '') then
			update SAN_DOACAO
			set cd_test_esp_ger_isbt = cd_ISBT_W
			where nr_sequencia = nr_seq_doacao_p;
				
			commit;
		end if;
	end if;
end if;

end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_codigo_isbt.san_gravar_cod_exame_isbt ( nr_seq_doacao_p bigint) FROM PUBLIC;
