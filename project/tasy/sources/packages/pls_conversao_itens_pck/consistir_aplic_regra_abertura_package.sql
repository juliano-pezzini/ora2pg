-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--Consistancia da regra de abertura de pacote para a conta. Aqui a gerenciado se ja foi aplicada a regra para os itens da conta e caso sim, identifica se nao ocorreu alteraaao

-- no item ou regra que se faaa necessario limpar lanaamento antigo e lanaar novamente.



CREATE OR REPLACE PROCEDURE pls_conversao_itens_pck.consistir_aplic_regra_abertura ( nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_regra_pct_fat_w		pls_conta_proc.nr_seq_regra_pct_fat%type;
tb_seq_regra_w			pls_util_cta_pck.t_number_table;
tb_seq_item_w			pls_util_cta_pck.t_number_table;
tb_seq_conta_w			pls_util_cta_pck.t_number_table;
nr_seq_composicao_w		pls_pacote_tipo_acomodacao.nr_seq_composicao%type;
ie_abrir_pacote_fat_w		pls_pacote_tipo_acomodacao.ie_abrir_pacote_fat%type;
dt_alteracao_estrutura_w	pls_pacote_tipo_acomodacao.dt_alteracao_estrutura%type;
dt_atual_proc_w			pls_conta_proc.dt_atualizacao_nrec%type;
dt_atual_mat_w			pls_conta_mat.dt_atualizacao_nrec%type;
qt_proc_w			integer;
qt_mat_w			integer;
i				integer := 0;
ie_atualizar_w			varchar(1);
						
C01 CURSOR( nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		coalesce(nr_seq_regra_pct_fat, -1) nr_seq_regra_pct_fat
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_pc
	and	ie_status not in ('D','M');

BEGIN
	--Percorre todos os itens elegaveis a aplicabilidade da regra

	for r_c01_w in C01(nr_seq_conta_p) loop
		nr_seq_regra_pct_fat_w := null;
		nr_seq_regra_pct_fat_w := pls_conversao_itens_pck.identificar_regra_item( r_c01_w.nr_sequencia, nr_seq_regra_pct_fat_w, nm_usuario_p, cd_estabelecimento_p);
		ie_atualizar_w := 'N';
		
		--Caso nao exista uma regra de aberturea de pacotes valida para o item ou se obteve uma diferente, entao precisa fazer uma "limpeza" em possavel abertura de 

		--pacotes anterior, setando a sequancia desse procedimento em uma lista que sera processada em lote.

		if ( coalesce(nr_seq_regra_pct_fat_w::text, '') = '' or nr_seq_regra_pct_fat_w <> r_c01_w.nr_seq_regra_pct_fat) then
		
			ie_atualizar_w := 'S';
			
		else
			--Se obteve mesma regra de lanaamento anterior, entao precisa verificar se os itens lanaados na conta batem com a regra, caso regra seja definida como abrir pacote faturamento. 

			--Caso ocorreram alteraaaes, entao necessita reaplicar regra, entao seta esse item na lista para reprocessar.

			select 	max(nr_seq_composicao),
				max(ie_abrir_pacote_fat),
				max(dt_alteracao_estrutura)
			into STRICT    nr_seq_composicao_w,
				ie_abrir_pacote_fat_w,
				dt_alteracao_estrutura_w
			from    pls_pacote_tipo_acomodacao
			where   nr_sequencia    = r_c01_w.nr_seq_regra_pct_fat;
			
			--Se a regra tiver uma composiaao apontada e setada como abrir pacote no faturamento, entao a abertura do pacote deve ocorrer e com isso, a necessario

			--verificar se em lanaamento anterior, os itens lanaados na conta estao de acordo com o que a regra aponta a ser lanaado.

			if ( (nr_seq_composicao_w IS NOT NULL AND nr_seq_composicao_w::text <> '') and ie_abrir_pacote_fat_w = 'S') then
				
				-- Busca se ha um procedimento dessa composiaao lanaado na conta e a data do ultimo lanaamento

				select	max(dt_atualizacao_nrec),
					count(1)
				into STRICT	dt_atual_proc_w,
					qt_proc_w
				from	pls_conta_proc a
				where 	nr_seq_conta = nr_seq_conta_p
				and	nr_seq_regra_pct_fat = nr_seq_regra_pct_fat_w
				and	ie_status = 'M'
				and	exists (	SELECT 	1
						from 	pls_pacote_procedimento 
						where 	nr_seq_composicao = nr_seq_composicao_w
						and	cd_procedimento = a.cd_procedimento
						and	ie_origem_proced = a.ie_origem_proced);
			
				-- Busca se ha um material dessa composiaao lanaado na conta e a data do ultimo lanaamento

				select	max(dt_atualizacao_nrec),
					count(1)
				into STRICT	dt_atual_mat_w,
					qt_mat_w
				from	pls_conta_mat a
				where 	nr_seq_conta = nr_seq_conta_p
				and	nr_seq_regra_pct_fat = nr_seq_regra_pct_fat_w
				and	ie_status = 'M'
				and	exists (	SELECT 1
						from	pls_pacote_material
						where	nr_seq_composicao = nr_seq_composicao_w
						and	nr_seq_material = a.nr_seq_material);
				
				-- Caso a regra de preco do pacote tenha data de alteraaao e ela for maior que algum procedimento ja lancado ou algum material

				-- or caso na conta nao tenha nenhum procedimento nem material da composiaao ja lanaado deve atualizar as informaaaes

				if	(dt_alteracao_estrutura_w IS NOT NULL AND dt_alteracao_estrutura_w::text <> '' AND (dt_alteracao_estrutura_w > dt_atual_proc_w or dt_alteracao_estrutura_w > dt_atual_mat_w)) and (qt_proc_w = 0 and qt_mat_w = 0) then
					ie_atualizar_w := 'S';
				end if;				
			else		
				--Se caiu aqui a por que a regra nao esta marcada para abertura de pacotes ou nao tem composiaao informada, nesse caso precisa atualizar pois podem existir itens lanaados por 

				--essa  regra em alguma ocasiao anterior

				ie_atualizar_w := 'S';
			
			end if;
		end if;
		
		if (ie_atualizar_w = 'S') then
			tb_seq_item_w(i)	:= r_c01_w.nr_sequencia;
			tb_seq_conta_w(i)	:= nr_seq_conta_p;
			tb_seq_regra_w(i) 	:= nr_seq_regra_pct_fat_w;
		end if;
		
		if (i > pls_util_cta_pck.qt_registro_transacao_w) then
			
			SELECT * FROM pls_conversao_itens_pck.atualizar_itens_composicao(tb_seq_item_w, tb_seq_conta_w, tb_seq_regra_w, nm_usuario_p, cd_estabelecimento_p) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_seq_conta_w := _ora2pg_r.tb_seq_conta_p; tb_seq_regra_w := _ora2pg_r.tb_seq_regra_p;
			i := 0;
		else
			i := i + 1;
		
		end if;
		
	end loop;
	
	SELECT * FROM pls_conversao_itens_pck.atualizar_itens_composicao(tb_seq_item_w, tb_seq_conta_w, tb_seq_regra_w, nm_usuario_p, cd_estabelecimento_p) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_seq_conta_w := _ora2pg_r.tb_seq_conta_p; tb_seq_regra_w := _ora2pg_r.tb_seq_regra_p;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conversao_itens_pck.consistir_aplic_regra_abertura ( nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
