-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Apaga antigas referancias oriundas de aplicaaao anterior de abertura de pacote e seta regra novamente apas leitura das mesmas 



CREATE OR REPLACE PROCEDURE pls_conversao_itens_pck.atualizar_itens_composicao ( tb_seq_item_p INOUT pls_util_cta_pck.t_number_table, tb_seq_conta_p INOUT pls_util_cta_pck.t_number_table, tb_seq_regra_p INOUT pls_util_cta_pck.t_number_table, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
BEGIN
	--Como necessita atualizar registro, as antigas referancias precisam ser excluadas, para posterior aplicaaao de regra.

	if (tb_seq_item_p.count > 0) then
	
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_analise_fluxo_ocor
			where 	nr_seq_fluxo_item     in (	SELECT 	nr_sequencia
								from	pls_analise_fluxo_item
								where	nr_seq_conta_proc	in (    SELECT 	nr_sequencia
													from	pls_conta_proc
													where	ie_status	= 'M'
													and	nr_seq_conta	= tb_seq_conta_p(i)
													and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
													and	nr_seq_proc_pct	= tb_seq_item_p(i)));
		
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_analise_fluxo_item
			where	nr_seq_conta_proc	in (    SELECT 	nr_sequencia
								from	pls_conta_proc
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));
				
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_ocorrencia_benef
			where	nr_seq_conta_proc	in (    SELECT 	nr_sequencia
								from	pls_conta_proc
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));

		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_fatura_proc
			where	nr_seq_conta_proc	in (    SELECT 	nr_sequencia
								from	pls_conta_proc
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));

		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_fatura_mat		
			where	nr_seq_conta_mat	in (    SELECT 	nr_sequencia
								from	pls_conta_mat
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));
								
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_hist_analise_conta
			where	nr_seq_conta_proc	in (    SELECT 	nr_sequencia
								from	pls_conta_proc
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));
				
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_hist_analise_conta
			where	nr_seq_conta_mat	in (    SELECT 	nr_sequencia
								from	pls_conta_mat
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));
								
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_analise_fluxo_ocor
			where 	nr_seq_fluxo_item     in (	SELECT 	nr_sequencia
								from	pls_analise_fluxo_item
								where	nr_seq_conta_mat	in (    SELECT 	nr_sequencia
													from	pls_conta_mat
													where	ie_status	= 'M'
													and	nr_seq_conta	= tb_seq_conta_p(i)
													and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
													and	nr_seq_proc_pct = tb_seq_item_p(i)));
					
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_analise_fluxo_item
			where	nr_seq_conta_mat	in (    SELECT 	nr_sequencia
								from	pls_conta_mat
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));
				
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_ocorrencia_benef
			where	nr_seq_conta_mat	in (    SELECT 	nr_sequencia
								from	pls_conta_mat
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));


		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_conta_pos_proc_contab
			where	nr_seq_conta_pos_proc in (	SELECT 	nr_sequencia
								from	pls_conta_pos_proc
								where	nr_seq_conta_proc in (select nr_sequencia
												from	pls_conta_proc
												where	ie_status	= 'M'
												and	nr_seq_conta	= tb_seq_conta_p(i)
												and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
												and	nr_seq_proc_pct = tb_seq_item_p(i)));	
						
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete	FROM pls_conta_pos_mat_contab
			where	nr_seq_conta_mat_pos in (	SELECT 	nr_sequencia
								from	pls_conta_pos_mat
								where	nr_seq_conta_mat in (select nr_sequencia
												from	pls_conta_mat
												where	ie_status	= 'M'
												and	nr_seq_conta	= tb_seq_conta_p(i)
												and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
												and	nr_seq_proc_pct = tb_seq_item_p(i)));

		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_conta_pos_proc
			where	nr_seq_conta_proc in (  SELECT 	nr_sequencia
							from	pls_conta_proc
							where	ie_status	= 'M'
							and	nr_seq_conta	= tb_seq_conta_p(i)
							and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
							and	nr_seq_proc_pct = tb_seq_item_p(i));
							
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_conta_pos_mat
			where	nr_seq_conta_mat in (  SELECT 	nr_sequencia
							from	pls_conta_mat
							where	ie_status	= 'M'
							and	nr_seq_conta	= tb_seq_conta_p(i)
							and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
							and	nr_seq_proc_pct = tb_seq_item_p(i));
			
		
			--Como esses registros serao apagados logo mais, entao a preciso limpar as referancias de agrupamento de analise que apontem para esses registros	

		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			update	pls_conta_proc
			set	nr_seq_agrup_analise  = NULL
			where	nr_seq_agrup_analise in (SELECT	nr_sequencia
							from	pls_conta_proc p
							where	p.nr_seq_proc_princ	in (	select	nr_sequencia
												from	pls_conta_proc
												where	ie_status	= 'M'
												and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
												and	nr_seq_proc_pct = tb_seq_item_p(i)));
		
			-- delete padrao da rotina

		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_conta_proc	p
			where	p.nr_seq_proc_princ	in (	SELECT	nr_sequencia
								from	pls_conta_proc
								where	ie_status	= 'M'
								and	nr_seq_conta	= tb_seq_conta_p(i)
								and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
								and	nr_seq_proc_pct = tb_seq_item_p(i));

		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_conta_proc
			where	ie_status	= 'M'
			and	nr_seq_conta	= tb_seq_conta_p(i)
			and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
			and	nr_seq_proc_pct = tb_seq_item_p(i);
			
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			delete 	FROM pls_conta_mat
			where	ie_status	= 'M'
			and	nr_seq_conta	= tb_seq_conta_p(i)
			and	(nr_seq_regra_pct_fat IS NOT NULL AND nr_seq_regra_pct_fat::text <> '')
			and	nr_seq_proc_pct = tb_seq_item_p(i);
	
		forall i in tb_seq_item_p.first..tb_seq_item_p.last
			update	pls_conta_proc
			set 	nr_seq_regra_pct_fat = tb_seq_regra_p(i)
			where	nr_sequencia =	tb_seq_item_p(i);
		commit;
		
	end if;
	tb_seq_regra_p.delete;
	tb_seq_item_p.delete;
	tb_seq_conta_p.delete;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conversao_itens_pck.atualizar_itens_composicao ( tb_seq_item_p INOUT pls_util_cta_pck.t_number_table, tb_seq_conta_p INOUT pls_util_cta_pck.t_number_table, tb_seq_regra_p INOUT pls_util_cta_pck.t_number_table, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
