-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION find_package.find_terms ( pWords strArray ,pStartRow integer ,pEndRow integer ,pTable text ,pCode text ,pDescription text ,pIndexSeach text ,pRestriction text ,pRestrictionFrom text ,pExtraFields strArray ) RETURNS PIPELINE_CUR_PLUS AS $body$
DECLARE

    lNumWords bigint := pWords.COUNT;
    lIndexWords strArray := strArray();
    lIndexWord2 varchar(63);
    lIndexWord3 varchar(63);
    lSearchQuery varchar(2000);
    lRestriction varchar(255);
    lRestrictionFrom varchar(255);
	lExtraFields varchar(255);
	lTableExtraFields varchar(255);
    lResult pipeline_cur_plus;

BEGIN
    FOR i IN 1 .. pWords.COUNT
    LOOP
      lIndexWords.extend;
      lIndexWords(i) := TasyAutoComplete.ToIndexWithoutAccents(pWords(i));
    END LOOP;
    IF (lNumWords >= 2) THEN
      lIndexWord2 := lIndexWords(2);
    END IF;
    IF (lNumWords >= 3) THEN
      lIndexWord3 := lIndexWords(3);
    END IF;

    IF (pRestriction IS NOT NULL AND pRestriction::text <> '') THEN
	lRestriction := pRestriction;
    ELSE
	lRestriction := '';
    END IF;

    IF (pRestrictionFrom IS NOT NULL AND pRestrictionFrom::text <> '') THEN
	lRestrictionFrom := ',' || pRestrictionFrom || ' ';
    ELSE
        lRestrictionFrom := '';
    END IF;
	
	lExtraFields := '';
	lTableExtraFields := '';
  lSearchQuery := '';
	FOR i IN 1 .. pExtraFields.COUNT
	LOOP
		lExtraFields := lExtraFields || ', ' || pExtraFields(i) || ' ';
		lTableExtraFields := lTableExtraFields || ', T.' || pExtraFields(i) || ' ';
	END LOOP;

    lSearchQuery := 'SELECT * FROM (
      SELECT ' || pCode || ', ' || pDescription || ', matchRange ' || lExtraFields || ' , ROWNUM as rnum FROM (
        SELECT ' || pCode || ', ' || pDescription || lExtraFields || ', TREAT(scr AS SCORING).matchRange AS matchRange FROM (
          SELECT ' || pCode || ', ' || pDescription || lExtraFields || ', TasyAutoComplete.getScore(descrIndex, :lIndexWords) AS scr FROM (
            SELECT /*+INDEX(T,' || pIndexSeach || ')*/ T.' || pCode || ', T.' || pDescription || lTableExtraFields || ', TasyAutoComplete.ToIndexWithoutAccents(T.' || pDescription || ') AS descrIndex
            FROM ' || pTable || ' T '|| lRestrictionFrom ||
            'WHERE 1 = 1 ' ||
	    lRestriction || '
          )
	  WHERE descrIndex LIKE ''%' || lIndexWords(1) || '%''
	  AND (''' || lIndexWord2 || ''' IS NULL OR descrIndex LIKE ''%' || lIndexWord2 || '%'')
          AND (''' || lIndexWord3 || ''' IS NULL OR descrIndex LIKE ''%' || lIndexWord3 || '%'')
        )
        WHERE TREAT(scr AS SCORING).itemScore IS NOT NULL
        ORDER BY TREAT(scr AS SCORING).itemScore DESC, ' || pDescription || '
      ))
      WHERE rnum BETWEEN '|| pStartRow ||' AND '||pEndRow||'';
    OPEN lResult FOR EXECUTE lSearchQuery USING lIndexWords;
    RETURN lResult;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION find_package.find_terms ( pWords strArray ,pStartRow integer ,pEndRow integer ,pTable text ,pCode text ,pDescription text ,pIndexSeach text ,pRestriction text ,pRestrictionFrom text ,pExtraFields strArray ) FROM PUBLIC;
