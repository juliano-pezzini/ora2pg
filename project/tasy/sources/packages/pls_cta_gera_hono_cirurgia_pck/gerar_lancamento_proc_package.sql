-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



-- gera outro procedimento para abertura do participante
CREATE OR REPLACE PROCEDURE pls_cta_gera_hono_cirurgia_pck.gerar_lancamento_proc ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, dt_procedimento_p pls_conta_proc.dt_procedimento%type, dt_inicio_proc_p pls_conta_proc.dt_inicio_proc%type, dt_fim_proc_p pls_conta_proc.dt_fim_proc%type, cd_Procedimento_p pls_conta_proc.cd_procedimento%type, ie_origem_proced_p pls_conta_proc.ie_origem_proced%type, ie_via_acesso_p pls_conta_proc.ie_via_acesso%type, ie_tecnica_utilizada_p pls_conta_proc.ie_tecnica_utilizada%type, ds_procedimento_imp_p pls_conta_proc.ds_procedimento_imp%type, cd_tipo_tabela_imp_p pls_conta_proc.cd_tipo_tabela_imp%type, qt_procedimento_imp_p pls_conta_proc.qt_procedimento%type, vl_procedimento_imp_p pls_conta_proc.vl_procedimento_imp%type, vl_fator_red_acrescimo_p pls_conta_proc.tx_reducao_acrescimo_imp%type, nm_usuario_p usuario.nm_usuario%type, dados_regra_p dados_regra_abertura_conta) AS $body$
DECLARE

qt_procedimentos_w		integer;
nr_seq_conta_proc_ww		pls_conta_proc.nr_sequencia%type;

nr_seq_item_tiss_w		pls_conta_proc_regra.nr_seq_item_tiss%type;
nr_seq_item_tiss_vinculo_w	pls_conta_proc_regra.nr_seq_item_tiss_vinculo%type;
ie_tipo_despesa_imp_w		pls_conta_proc.ie_tipo_despesa%type;


BEGIN

	select 	coalesce(max(ie_classificacao),1)
	into STRICT	ie_tipo_despesa_imp_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;
			
	if (ie_tipo_despesa_imp_w in ('4','6')) then
		ie_tipo_despesa_imp_w	:= '2';
	elsif (ie_tipo_despesa_imp_w	= '5') then
		ie_tipo_despesa_imp_w	:= '3';
	else
		ie_tipo_despesa_imp_w	:= '1';
	end if;


	select	nextval('pls_conta_proc_seq')
	into STRICT	nr_seq_conta_proc_ww
	;
	
	insert into pls_conta_proc(nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, dt_procedimento,
		cd_procedimento, ie_origem_proced, qt_procedimento,
		vl_unitario, vl_procedimento, ie_via_acesso,
		nr_seq_conta, dt_procedimento_imp, cd_procedimento_imp,
		qt_procedimento_imp, vl_unitario_imp, vl_procedimento_imp,
		ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
		dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
		vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
		tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada,
		vl_liberado, vl_glosa, vl_saldo,
		nr_seq_regra, ie_tipo_despesa, ie_situacao,
		ie_status, dt_liberacao, nm_usuario_liberacao,
		tx_item, nr_seq_tiss_tabela, nr_seq_regra_horario,
		vl_custo_operacional, vl_anestesista, vl_materiais,
		vl_medico, vl_auxiliares, nr_seq_regra_liberacao,
		ds_log, cd_conta_cred, cd_conta_deb,
		cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
		cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred,
		nr_seq_grupo_ans, nr_auxiliares, nr_seq_participante_hi,
		nr_seq_proc_ref, ie_status_pagamento, ie_acao_analise)
	values (	nr_seq_conta_proc_ww, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, dt_procedimento_p,
		cd_Procedimento_p, ie_origem_proced_p, 0,
		0, 0, ie_via_acesso_p,
		nr_seq_conta_p, dt_procedimento_p, cd_procedimento_p,
		qt_procedimento_imp_p, 0, vl_procedimento_imp_p,				
		ie_via_acesso_p, dt_inicio_proc_p, dt_fim_proc_p,       
		dt_inicio_proc_p, dt_fim_proc_p, null,
		null, ds_procedimento_imp_p, cd_tipo_tabela_imp_p,
		coalesce(vl_fator_red_acrescimo_p, 1), ie_tipo_despesa_imp_w, ie_tecnica_utilizada_p,
		0, 0, 0,
		null, ie_tipo_despesa_imp_w, 'U',
		'U', null, null,
		100, null, null,
		0, 0, 0,
		0, 0, null,
		null, null, null,
		null, null, null,
		null, null, null,
		null, null, null,
		null, 'I', null);
	
	if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then
	
		CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_ww, nm_usuario_p);
		CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_conta_proc_ww, nr_seq_item_tiss_w, nr_seq_item_tiss_vinculo_w, nm_usuario_p);	
	end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_gera_hono_cirurgia_pck.gerar_lancamento_proc ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, dt_procedimento_p pls_conta_proc.dt_procedimento%type, dt_inicio_proc_p pls_conta_proc.dt_inicio_proc%type, dt_fim_proc_p pls_conta_proc.dt_fim_proc%type, cd_Procedimento_p pls_conta_proc.cd_procedimento%type, ie_origem_proced_p pls_conta_proc.ie_origem_proced%type, ie_via_acesso_p pls_conta_proc.ie_via_acesso%type, ie_tecnica_utilizada_p pls_conta_proc.ie_tecnica_utilizada%type, ds_procedimento_imp_p pls_conta_proc.ds_procedimento_imp%type, cd_tipo_tabela_imp_p pls_conta_proc.cd_tipo_tabela_imp%type, qt_procedimento_imp_p pls_conta_proc.qt_procedimento%type, vl_procedimento_imp_p pls_conta_proc.vl_procedimento_imp%type, vl_fator_red_acrescimo_p pls_conta_proc.tx_reducao_acrescimo_imp%type, nm_usuario_p usuario.nm_usuario%type, dados_regra_p dados_regra_abertura_conta) FROM PUBLIC;
