-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION get_dose_lwastage.get_drug_list ( presc_qty bigint ) RETURNS TY_ALLOC AS $body$
DECLARE

        dose_indx     integer;
        l_iteration   integer := 1;
        alloc         ty_alloc;
        alloc_array   ty_alloc_array;
        l_exit        boolean := false;

BEGIN
        dose_indx := current_setting('get_dose_lwastage.dose_available')::ty_list_array.first;
        IF current_setting('get_dose_lwastage.l_cache')::ty_alloc_array.EXISTS(presc_qty) THEN
            RETURN current_setting('get_dose_lwastage.l_cache')::ty_alloc_array(presc_qty);
        END IF;
        WHILE (dose_indx IS NOT NULL AND dose_indx::text <> '') LOOP
            l_iteration := l_iteration + 1;
            IF presc_qty <= current_setting('get_dose_lwastage.dose_available')::ty_list_array[dose_indx].qt_spec_group_dose THEN
                alloc.array(alloc.array.count + 1) := current_setting('get_dose_lwastage.dose_available')::ty_list_array(dose_indx);
                alloc.qty := coalesce(alloc.qty, 0) + current_setting('get_dose_lwastage.dose_available')::ty_list_array[dose_indx].qt_spec_group_dose;
                l_exit := true;
            ELSE
                alloc := get_dose_lwastage.get_drug_list(presc_qty - current_setting('get_dose_lwastage.dose_available')::ty_list_array[dose_indx].qt_spec_group_dose);
                alloc.array(alloc.array.count + 1) := current_setting('get_dose_lwastage.dose_available')::ty_list_array(dose_indx);
                alloc.qty := coalesce(alloc.qty, 0) + current_setting('get_dose_lwastage.dose_available')::ty_list_array[dose_indx].qt_spec_group_dose;
            END IF;
            alloc_array(dose_indx) := alloc;
            alloc.array.DELETE;
            alloc.qty := 0;
            EXIT WHEN l_exit;
            dose_indx := current_setting('get_dose_lwastage.dose_available')::ty_list_array.next(dose_indx);
        END LOOP;
        dose_indx := alloc_array.first;
        alloc := alloc_array(dose_indx);
        dose_indx := alloc_array.next(dose_indx);
        WHILE (dose_indx IS NOT NULL AND dose_indx::text <> '') LOOP
            IF alloc.qty > alloc_array[dose_indx].qty THEN
                alloc := alloc_array(dose_indx);
            ELSIF alloc.qty = alloc_array[dose_indx].qty AND alloc.array.count > alloc_array[dose_indx].array.count THEN
                alloc := alloc_array(dose_indx);
            END IF;
            dose_indx := alloc_array.next(dose_indx);
        END LOOP;
        current_setting('get_dose_lwastage.l_cache')::ty_alloc_array(presc_qty) := alloc;
        RETURN alloc;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
            RETURN alloc;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION get_dose_lwastage.get_drug_list ( presc_qty bigint ) FROM PUBLIC;
