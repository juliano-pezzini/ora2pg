-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_atualizacao_pck.atualizar_mensalidade () AS $body$
DECLARE

_ora2pg_r RECORD;
vl_taxa_boleto_seg_w		double precision;
vl_pro_rata_pag_w		pls_mensalidade_seg_item.vl_pro_rata_dia%type;
vl_antec_pag_w			pls_mensalidade_seg_item.vl_antecipacao%type;

--Variaveis para controlar o delete

nr_indice_del_w			integer;
tb_delete_mensalidade_w		pls_util_cta_pck.t_number_table;

--Variaveis para controlar o update

nr_indice_w			integer;
tb_nr_seq_mensalidade_w		pls_util_cta_pck.t_number_table;
tb_vl_mensalidade_w		pls_util_cta_pck.t_number_table;
tb_vl_coparticipacao_w		pls_util_cta_pck.t_number_table;
tb_vl_adicionais_w		pls_util_cta_pck.t_number_table;
tb_vl_outros_w			pls_util_cta_pck.t_number_table;
tb_vl_pos_estabelecido_w	pls_util_cta_pck.t_number_table;
tb_vl_pre_estabelecido_w	pls_util_cta_pck.t_number_table;
tb_vl_pro_rata_dia_w		pls_util_cta_pck.t_number_table;
tb_vl_antecipacao_w		pls_util_cta_pck.t_number_table;
tb_qt_beneficiarios_w		pls_util_cta_pck.t_number_table;
tb_vl_taxa_boleto_w		pls_util_cta_pck.t_number_table;
tb_vl_taxa_boleto_emb_w		pls_util_cta_pck.t_number_table;
tb_vl_outros_pagador_w		pls_util_cta_pck.t_number_table;

C01 CURSOR FOR
	SELECT	a.nr_seq_mensalidade,
		(	SELECT	count(distinct x.nr_seq_segurado)
			from	pls_mensalidade_segurado x
			where	x.nr_seq_mensalidade = a.nr_seq_mensalidade) qt_benef
	from	pls_mensalidade_tmp a;

BEGIN
PERFORM set_config('pls_mens_atualizacao_pck.qt_pagadores_total_lote_w', 0, false);
nr_indice_w := 0;
nr_indice_del_w := 0;
tb_nr_seq_mensalidade_w.delete;
tb_delete_mensalidade_w.delete;
SELECT * FROM pls_mens_atualizacao_pck.update_mensalidade(	tb_nr_seq_mensalidade_w, tb_vl_mensalidade_w, tb_vl_coparticipacao_w, tb_vl_adicionais_w, tb_vl_outros_w, tb_vl_pos_estabelecido_w, tb_vl_pre_estabelecido_w, tb_vl_pro_rata_dia_w, tb_vl_antecipacao_w, tb_qt_beneficiarios_w, tb_vl_taxa_boleto_w, tb_vl_taxa_boleto_emb_w, tb_vl_outros_pagador_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_mensalidade_w := _ora2pg_r.tb_nr_seq_mensalidade_p; tb_vl_mensalidade_w := _ora2pg_r.tb_vl_mensalidade_p; tb_vl_coparticipacao_w := _ora2pg_r.tb_vl_coparticipacao_p; tb_vl_adicionais_w := _ora2pg_r.tb_vl_adicionais_p; tb_vl_outros_w := _ora2pg_r.tb_vl_outros_p; tb_vl_pos_estabelecido_w := _ora2pg_r.tb_vl_pos_estabelecido_p; tb_vl_pre_estabelecido_w := _ora2pg_r.tb_vl_pre_estabelecido_p; tb_vl_pro_rata_dia_w := _ora2pg_r.tb_vl_pro_rata_dia_p; tb_vl_antecipacao_w := _ora2pg_r.tb_vl_antecipacao_p; tb_qt_beneficiarios_w := _ora2pg_r.tb_qt_beneficiarios_p; tb_vl_taxa_boleto_w := _ora2pg_r.tb_vl_taxa_boleto_p; tb_vl_taxa_boleto_emb_w := _ora2pg_r.tb_vl_taxa_boleto_emb_p; tb_vl_outros_pagador_w := _ora2pg_r.tb_vl_outros_pagador_p;

for r_c01_w in C01 loop
	begin
	
	if (r_c01_w.qt_benef > 0) then
		tb_nr_seq_mensalidade_w(nr_indice_w) := r_c01_w.nr_seq_mensalidade;
		
		tb_qt_beneficiarios_w(nr_indice_w) := r_c01_w.qt_benef;
		
		PERFORM set_config('pls_mens_atualizacao_pck.qt_pagadores_total_lote_w', current_setting('pls_mens_atualizacao_pck.qt_pagadores_total_lote_w')::integer + 1, false);
		
		select	sum(vl_adicionais),
			sum(vl_coparticipacao),
			sum(vl_mensalidade),
			sum(vl_outros),
			sum(vl_pos_estabelecido),
			sum(vl_pre_estabelecido),
			sum(vl_pro_rata_dia),
			sum(vl_antecipacao)
		into STRICT	tb_vl_adicionais_w(nr_indice_w),
			tb_vl_coparticipacao_w(nr_indice_w),
			tb_vl_mensalidade_w(nr_indice_w),
			tb_vl_outros_w(nr_indice_w),
			tb_vl_pos_estabelecido_w(nr_indice_w),
			tb_vl_pre_estabelecido_w(nr_indice_w),
			tb_vl_pro_rata_dia_w(nr_indice_w),
			tb_vl_antecipacao_w(nr_indice_w)
		from	pls_mensalidade_segurado
		where	nr_seq_mensalidade = r_c01_w.nr_seq_mensalidade;
		
		select	sum(vl_taxa_boleto_destacado),
			sum(vl_taxa_boleto_emb),
			sum(vl_pagador_outros),
			sum(vl_pro_rata_pag),
			sum(vl_antec_pag)
		into STRICT	tb_vl_taxa_boleto_w(nr_indice_w),
			tb_vl_taxa_boleto_emb_w(nr_indice_w), --como a taxa de boleto embutida nao e considerada na coluna "Vl outros", e necessario armazenar o valor para somar no valor da mensalidade
			tb_vl_outros_pagador_w(nr_indice_w),
			vl_pro_rata_pag_w,
			vl_antec_pag_w
		from (SELECT	coalesce(sum(a.vl_taxa_boleto),0) vl_taxa_boleto_emb,
				CASE WHEN a.ie_tipo_item='17' THEN sum(a.vl_item)  ELSE 0 END  vl_taxa_boleto_destacado,
				CASE WHEN a.ie_tipo_mensalidade='P' THEN  CASE WHEN a.ie_tipo_item='17' THEN 0  ELSE sum(a.vl_item) END  END  vl_pagador_outros,
				CASE WHEN a.ie_tipo_mensalidade='P' THEN  sum(a.vl_pro_rata_dia) END  vl_pro_rata_pag,
				CASE WHEN a.ie_tipo_mensalidade='P' THEN  sum(a.vl_antecipacao) END  vl_antec_pag
			from	pls_mensalidade_seg_item a,
				pls_mensalidade_segurado b
			where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
			and	b.nr_seq_mensalidade	= r_c01_w.nr_seq_mensalidade
			and	a.ie_tipo_item not in ('42','43')
			group by a.ie_tipo_mensalidade, a.ie_tipo_item) alias15;
		
		tb_vl_pro_rata_dia_w(nr_indice_w)	:= tb_vl_pro_rata_dia_w(nr_indice_w) + coalesce(vl_pro_rata_pag_w,0);
		tb_vl_antecipacao_w(nr_indice_w)	:= tb_vl_antecipacao_w(nr_indice_w) + coalesce(vl_antec_pag_w,0);
		
		if (coalesce(tb_vl_taxa_boleto_w(nr_indice_w)::text, '') = '') then
			tb_vl_taxa_boleto_w(nr_indice_w) := 0;
		end if;
		
		if (coalesce(tb_vl_outros_pagador_w(nr_indice_w)::text, '') = '') then
			tb_vl_outros_pagador_w(nr_indice_w) := 0;
		end if;
		
		if (nr_indice_w >= pls_util_pck.qt_registro_transacao_w) then
			SELECT * FROM pls_mens_atualizacao_pck.update_mensalidade(	tb_nr_seq_mensalidade_w, tb_vl_mensalidade_w, tb_vl_coparticipacao_w, tb_vl_adicionais_w, tb_vl_outros_w, tb_vl_pos_estabelecido_w, tb_vl_pre_estabelecido_w, tb_vl_pro_rata_dia_w, tb_vl_antecipacao_w, tb_qt_beneficiarios_w, tb_vl_taxa_boleto_w, tb_vl_taxa_boleto_emb_w, tb_vl_outros_pagador_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_mensalidade_w := _ora2pg_r.tb_nr_seq_mensalidade_p; tb_vl_mensalidade_w := _ora2pg_r.tb_vl_mensalidade_p; tb_vl_coparticipacao_w := _ora2pg_r.tb_vl_coparticipacao_p; tb_vl_adicionais_w := _ora2pg_r.tb_vl_adicionais_p; tb_vl_outros_w := _ora2pg_r.tb_vl_outros_p; tb_vl_pos_estabelecido_w := _ora2pg_r.tb_vl_pos_estabelecido_p; tb_vl_pre_estabelecido_w := _ora2pg_r.tb_vl_pre_estabelecido_p; tb_vl_pro_rata_dia_w := _ora2pg_r.tb_vl_pro_rata_dia_p; tb_vl_antecipacao_w := _ora2pg_r.tb_vl_antecipacao_p; tb_qt_beneficiarios_w := _ora2pg_r.tb_qt_beneficiarios_p; tb_vl_taxa_boleto_w := _ora2pg_r.tb_vl_taxa_boleto_p; tb_vl_taxa_boleto_emb_w := _ora2pg_r.tb_vl_taxa_boleto_emb_p; tb_vl_outros_pagador_w := _ora2pg_r.tb_vl_outros_pagador_p;
		else
			nr_indice_w	:= nr_indice_w + 1;
		end if;
	else
		tb_delete_mensalidade_w(nr_indice_del_w) := r_c01_w.nr_seq_mensalidade;
		
		if (nr_indice_del_w >= current_setting('pls_mens_atualizacao_pck.qt_registro_del_mens_w')::integer) then
			tb_delete_mensalidade_w := pls_mens_atualizacao_pck.deletar_mensalidade(tb_delete_mensalidade_w);
			nr_indice_del_w	:= 0;
		else
			nr_indice_del_w	:= nr_indice_del_w + 1;
		end if;
	end if;
	end;
end loop;

-- se sobrou alguma coisa manda para o banco

	tb_delete_mensalidade_w := pls_mens_atualizacao_pck.deletar_mensalidade(	tb_delete_mensalidade_w);
SELECT * FROM pls_mens_atualizacao_pck.update_mensalidade(	tb_nr_seq_mensalidade_w, tb_vl_mensalidade_w, tb_vl_coparticipacao_w, tb_vl_adicionais_w, tb_vl_outros_w, tb_vl_pos_estabelecido_w, tb_vl_pre_estabelecido_w, tb_vl_pro_rata_dia_w, tb_vl_antecipacao_w, tb_qt_beneficiarios_w, tb_vl_taxa_boleto_w, tb_vl_taxa_boleto_emb_w, tb_vl_outros_pagador_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_mensalidade_w := _ora2pg_r.tb_nr_seq_mensalidade_p; tb_vl_mensalidade_w := _ora2pg_r.tb_vl_mensalidade_p; tb_vl_coparticipacao_w := _ora2pg_r.tb_vl_coparticipacao_p; tb_vl_adicionais_w := _ora2pg_r.tb_vl_adicionais_p; tb_vl_outros_w := _ora2pg_r.tb_vl_outros_p; tb_vl_pos_estabelecido_w := _ora2pg_r.tb_vl_pos_estabelecido_p; tb_vl_pre_estabelecido_w := _ora2pg_r.tb_vl_pre_estabelecido_p; tb_vl_pro_rata_dia_w := _ora2pg_r.tb_vl_pro_rata_dia_p; tb_vl_antecipacao_w := _ora2pg_r.tb_vl_antecipacao_p; tb_qt_beneficiarios_w := _ora2pg_r.tb_qt_beneficiarios_p; tb_vl_taxa_boleto_w := _ora2pg_r.tb_vl_taxa_boleto_p; tb_vl_taxa_boleto_emb_w := _ora2pg_r.tb_vl_taxa_boleto_emb_p; tb_vl_outros_pagador_w := _ora2pg_r.tb_vl_outros_pagador_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_atualizacao_pck.atualizar_mensalidade () FROM PUBLIC;
