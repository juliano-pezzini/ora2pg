-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE generate_data_qhapdc_pkg.generate_dataset_seg (nr_seq_batch_p bigint, nr_atendimento_p bigint, nm_usuario_p text, nr_seq_arquivo_p bigint, ie_dataset_type text, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

    nr_seq_dataset_w             qhapdc_dataset_send.nr_sequencia%TYPE;
    is_insertion_successful      bigint := 0;
    excp_caught_in_dataset_ins   varchar(500 );
    is_clob_insertion_successful bigint := 0;
    excp_caught_dataset_clob_ins varchar(500 );

BEGIN 
      IF ( ie_dataset_type = 'DVA' ) THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'DVA', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_dva_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'PAL' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'PAL', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_pal_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'ACT' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'ACT', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_act_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'SNP' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'SNP', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_snp_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'MEN' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'MEN', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_men_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'ADM' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'ADM', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_adm_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'MOR' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'MOR', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_mor_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      ELSIF ( ie_dataset_type = 'PAT' )THEN 
        SELECT * FROM generate_data_qhapdc_pkg.insert_dataset(nr_seq_batch_p, nr_seq_arquivo_p, 'PAT', nm_usuario_p, nr_atendimento_p, nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins) INTO STRICT nr_seq_dataset_w, is_insertion_successful, excp_caught_in_dataset_ins;

        Generate_qhapdc_pat_content(nr_seq_dataset_w, nm_usuario_p, 
        is_clob_insertion_successful, excp_caught_dataset_clob_ins);
      END IF;

      IF ( is_insertion_successful = 1 
          AND is_clob_insertion_successful = 1 ) THEN 
        returned_value_p := 1;

        other_exception_p := NULL;
      ELSE 
        IF ( (excp_caught_in_dataset_ins IS NOT NULL AND excp_caught_in_dataset_ins::text <> '') 
             OR (excp_caught_dataset_clob_ins IS NOT NULL AND excp_caught_dataset_clob_ins::text <> '') ) THEN 
          returned_value_p := 0;

          other_exception_p := excp_caught_in_dataset_ins 
                               ||Chr(13) 
                               ||Chr(10) 
                               ||excp_caught_dataset_clob_ins;
        END IF;
      END IF;

      NULL;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_data_qhapdc_pkg.generate_dataset_seg (nr_seq_batch_p bigint, nr_atendimento_p bigint, nm_usuario_p text, nr_seq_arquivo_p bigint, ie_dataset_type text, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;
