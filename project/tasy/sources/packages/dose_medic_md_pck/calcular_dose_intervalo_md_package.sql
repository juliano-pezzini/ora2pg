-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dose_medic_md_pck.calcular_dose_intervalo_md (ie_tempo_p text, qt_casas_retorno_p bigint, ds_abreviacao_p text, qt_dose_interv_p INOUT bigint, qt_peso_p bigint, qt_dose_terap_p INOUT bigint, qt_sc_p bigint, qt_dose_total_p INOUT bigint, qt_periodo_hora_p bigint, nr_ocorrencia_p bigint, qt_dose_unid_cons_p INOUT bigint) AS $body$
BEGIN
    if (coalesce(ie_tempo_p::text, '') = '') then
      if (qt_casas_retorno_p > 0) then
        if (ds_abreviacao_p <> obter_desc_expressao(881462)) and (ds_abreviacao_p <> obter_desc_expressao(881464)) then
          qt_dose_interv_p := round(coalesce(qt_peso_p, 0) * coalesce(qt_dose_terap_p, 0),
                                    qt_casas_retorno_p);
        else
          qt_dose_interv_p := round(coalesce(qt_sc_p, 0) * coalesce(qt_dose_terap_p, 0),
                                    qt_casas_retorno_p);
        end if;
        qt_dose_total_p := round(dividir_md((coalesce(qt_periodo_hora_p, 0) *
                                         (coalesce(qt_dose_interv_p, 0) *
                                         coalesce(nr_ocorrencia_p, 0))),
                                         24),
                                 qt_casas_retorno_p);
      else
        if (ds_abreviacao_p <> obter_desc_expressao(881462)) and (ds_abreviacao_p <> obter_desc_expressao(881464)) then
          qt_dose_interv_p := coalesce(qt_peso_p, 0) * coalesce(qt_dose_terap_p, 0);
        else
          qt_dose_interv_p := coalesce(qt_sc_p, 0) * coalesce(qt_dose_terap_p, 0);
        end if;
        qt_dose_total_p := dividir_md((coalesce(qt_periodo_hora_p, 0) *
                                   (coalesce(qt_dose_interv_p, 0) * coalesce(nr_ocorrencia_p, 0))),
                                   24);
      end if;
    else
      if (qt_casas_retorno_p > 0) then
        if (ds_abreviacao_p <> obter_desc_expressao(881462)) and (ds_abreviacao_p <> obter_desc_expressao(881464)) then
          qt_dose_total_p  := round(dividir_md((coalesce(qt_periodo_hora_p, 0) *
                                            (coalesce(qt_peso_p, 0) * coalesce(qt_dose_terap_p, 0))),
                                            24),
                                    qt_casas_retorno_p);
          qt_dose_interv_p := round(dividir_md((coalesce(qt_peso_p, 0) * coalesce(qt_dose_terap_p, 0)),
                                            nr_ocorrencia_p),
                                    qt_casas_retorno_p);
        else
          qt_dose_total_p  := round(dividir_md((coalesce(qt_periodo_hora_p, 0) *
                                            (coalesce(qt_sc_p, 0) * coalesce(qt_dose_terap_p, 0))),
                                            24),
                                    qt_casas_retorno_p);
          qt_dose_interv_p := round(dividir_md((coalesce(qt_sc_p, 0) * coalesce(qt_dose_terap_p, 0)),
                                            nr_ocorrencia_p),
                                    qt_casas_retorno_p);
        end if;
      else
        if (ds_abreviacao_p <> obter_desc_expressao(881462)) and (ds_abreviacao_p <> obter_desc_expressao(881464)) then
          qt_dose_total_p  := dividir_md((coalesce(qt_periodo_hora_p, 0) *
                                      (coalesce(qt_peso_p, 0) * coalesce(qt_dose_terap_p, 0))),
                                      24);
          qt_dose_interv_p := dividir_md((coalesce(qt_peso_p, 0) * coalesce(qt_dose_terap_p, 0)),
                                      nr_ocorrencia_p);
        else
          qt_dose_total_p  := dividir_md((coalesce(qt_periodo_hora_p, 0) *
                                      (coalesce(qt_sc_p, 0) * coalesce(qt_dose_terap_p, 0))),
                                      24);
          qt_dose_interv_p := dividir_md((coalesce(qt_sc_p, 0) * coalesce(qt_dose_terap_p, 0)),
                                      nr_ocorrencia_p);
        end if;
      end if;

      qt_dose_unid_cons_p := round((dividir_md(qt_dose_unid_cons_p, nr_ocorrencia_p))::numeric,
                                   10);

      if (ie_tempo_p = 'M') then
        qt_dose_total_p     := coalesce(qt_dose_total_p, 0) * 1440;
        qt_dose_interv_p    := coalesce(qt_dose_interv_p, 0) * 1440;
        qt_dose_unid_cons_p := coalesce(qt_dose_unid_cons_p, 0) * 1440;
      elsif (ie_tempo_p = 'H') then
        qt_dose_total_p     := coalesce(qt_dose_total_p, 0) * 24;
        qt_dose_interv_p    := coalesce(qt_dose_interv_p, 0) * 24;
        qt_dose_unid_cons_p := coalesce(qt_dose_unid_cons_p, 0) * 24;
      end if;
    end if;
  end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dose_medic_md_pck.calcular_dose_intervalo_md (ie_tempo_p text, qt_casas_retorno_p bigint, ds_abreviacao_p text, qt_dose_interv_p INOUT bigint, qt_peso_p bigint, qt_dose_terap_p INOUT bigint, qt_sc_p bigint, qt_dose_total_p INOUT bigint, qt_periodo_hora_p bigint, nr_ocorrencia_p bigint, qt_dose_unid_cons_p INOUT bigint) FROM PUBLIC;
