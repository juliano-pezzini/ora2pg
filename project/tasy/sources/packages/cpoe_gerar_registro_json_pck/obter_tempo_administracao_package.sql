-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE gasoterapia_record_hor AS (	min_evento			bigint,
									ie_evento			prescr_gasoterapia_evento.ie_evento%type);


CREATE OR REPLACE FUNCTION cpoe_gerar_registro_json_pck.obter_tempo_administracao ( nr_atendimento_p bigint, nr_seq_gasoterapia_p bigint, nr_hora_p bigint ) RETURNS bigint AS $body$
DECLARE




current_setting('cpoe_gerar_registro_json_pck.c02')::REFCURSOR CURSOR;

enter_w varchar(10) := chr(13) || chr(10);

type gasoterapia_record_hor_table is table of gasoterapia_record_hor index by integer;

gasoterapia_record_hor_w		gasoterapia_record_hor_table;

sql_base_hor_w	varchar(4000)	:= 	' select to_number(to_char(b.dt_evento,''mi'')), ' ||enter_w||
									'	   b.ie_evento ' ||enter_w||
									' from	prescr_medica a,  ' ||enter_w||
									'	prescr_gasoterapia_evento b, ' ||enter_w||
									'	prescr_gasoterapia c ' ||enter_w||
									' where	a.nr_atendimento	= :nr_atendimento ' ||enter_w||
									' and	a.nr_prescricao	= c.nr_prescricao ' ||enter_w||
									' and	b.nr_seq_gasoterapia	= c.nr_sequencia ' ||enter_w||
									' and	nvl(b.ie_evento_valido,''N'')	= ''S'' ' ||enter_w||
									' and	to_char(b.dt_evento,''hh24'') = :ds_hora ' ||enter_w;

ds_retorno_w	bigint;
nr_min_aux_w	bigint;
nr_min_total_w	bigint;
ie_evento_aux_w	prescr_gasoterapia_evento.ie_evento%type;

BEGIN
	nr_min_aux_w := 0;
	nr_min_total_w := 0;

	if (nr_seq_gasoterapia_p IS NOT NULL AND nr_seq_gasoterapia_p::text <> '') and (nr_seq_gasoterapia_p	> 0) then
		sql_base_hor_w:= sql_base_hor_w||' and c.nr_seq_gas_cpoe = :nr_seq_gas_cpoe '||enter_w;
	end if;

	sql_base_hor_w:= sql_base_hor_w||' order by to_char(b.dt_evento,''hh24:mi'') ';

	if (nr_seq_gasoterapia_p IS NOT NULL AND nr_seq_gasoterapia_p::text <> '') and (nr_seq_gasoterapia_p	> 0) then

		open current_setting('cpoe_gerar_registro_json_pck.c02')::CURSOR FOR sql_base_hor_w
		using 	nr_atendimento_p,
				nr_hora_p,
				nr_seq_gasoterapia_p;

	else
		open current_setting('cpoe_gerar_registro_json_pck.c02')::CURSOR FOR sql_base_hor_w
		using 	nr_atendimento_p,
				nr_hora_p;
	end if;

	fetch current_setting('cpoe_gerar_registro_json_pck.c02')::bulk CURSOR collect
	into gasoterapia_record_hor_w;
	close current_setting('cpoe_gerar_registro_json_pck.c02')::CURSOR;

	for i in 1..gasoterapia_record_hor_w.count loop
		begin

		if (gasoterapia_record_hor_w[i].ie_evento = 'I') then
			nr_min_aux_w := gasoterapia_record_hor_w[i].min_evento;
			ie_evento_aux_w := gasoterapia_record_hor_w[i].ie_evento;
		elsif (gasoterapia_record_hor_w[i].ie_evento = 'IN')
			or (gasoterapia_record_hor_w[i].ie_evento = 'T') then
			nr_min_total_w := nr_min_total_w + (gasoterapia_record_hor_w[i].min_evento - nr_min_aux_w);
			ie_evento_aux_w := gasoterapia_record_hor_w[i].ie_evento;
		elsif (gasoterapia_record_hor_w[i].ie_evento = 'R') then
			nr_min_aux_w := gasoterapia_record_hor_w[i].min_evento;
			ie_evento_aux_w := gasoterapia_record_hor_w[i].ie_evento;
		end if;
		end;
	end loop;

	if (ie_evento_aux_w = 'I') then
		nr_min_total_w := (60 - nr_min_aux_w);
	end if;

	if (ie_evento_aux_w = 'R') then
		nr_min_total_w := nr_min_total_w + (60 - nr_min_aux_w);
	end if;

	ds_retorno_w := nr_min_total_w;

	return	ds_retorno_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_gerar_registro_json_pck.obter_tempo_administracao ( nr_atendimento_p bigint, nr_seq_gasoterapia_p bigint, nr_hora_p bigint ) FROM PUBLIC;
