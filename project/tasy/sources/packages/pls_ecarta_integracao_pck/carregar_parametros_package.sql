-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ecarta_integracao_pck.carregar_parametros ( nr_seq_ecarta_parametro_p pls_ecarta_parametro.cd_estabelecimento%type) AS $body$
DECLARE

	-- Variáveis
	cd_evento_w		evento_tasy_utl_file.cd_evento%type	:= 30; --Geração de arquivo de correspondência digital
	ds_local_utl_w		varchar(255)				:= null;
	ds_local_windows_w	varchar(255)				:= null;
	ds_erro_w		varchar(4000)				:= null;
	file_w			utl_file.file_type;
	-- Parâmetros
	c01_w CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_estabelecimento,
		a.ie_origem,
		a.nr_contrato_correios,
		a.ds_diretorio_enviados,
		a.ds_diretorio_recebidos,
		a.ds_diretorio_inconsistencias,
		a.ds_diretorio_erros,
		a.ds_diretorio_temp,
		a.ie_envia_email,
		a.ds_remetente_email,
		a.ds_destinatario_email,
		a.ds_servidor_ftp,
		a.nr_porta_ftp,
		a.nm_usuario_ftp,
		wheb_seguranca.decrypt(a.ds_senha_ftp) ds_senha_ftp,
		a.ds_dir_remoto_enviados,
		a.ds_dir_remoto_recebidos,
		a.ie_log_debug,
		a.ds_servico_web_ftps
	from	pls_ecarta_parametro a
	where	a.nr_sequencia	= nr_seq_ecarta_parametro_p;

BEGIN
	-- Seta variáveis globais
	PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'carregar parâmetros', false);

	-- Carrega parâmetros
	open c01_w;
	fetch c01_w into
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nr_sequencia,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.cd_estabelecimento,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ie_origem,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nr_contrato_correios,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_enviados,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_recebidos,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_inconsistencias,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_erros,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_temp,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ie_envia_email,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_remetente_email,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_destinatario_email,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_servidor_ftp,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nr_porta_ftp,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nm_usuario_ftp,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_senha_ftp,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_remoto_enviados,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_remoto_recebidos,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ie_log_debug,
		current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_servico_web_ftps;
	close c01_w;

	-- Log debug
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Início do processo de um parâmetro de estabelecimento...', null, $$plsql_line);

	-- Localiza o diretório do evento da função
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Localiza o diretório do evento da função', null, $$plsql_line);
	obter_evento_utl_file(cd_evento_w, null, ds_local_utl_w, ds_erro_w);

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(460257, 'DS_ERRO='||ds_erro_w);
	end if;

	-- Define se deve usar barra ou contra-barra no caminho de pastas do sistema operacional
	if (position('/' in ds_local_utl_w) > 0) then
		PERFORM set_config('pls_ecarta_integracao_pck.ie_barra_w', '/', false);
	elsif	(position('\') > 0) then --'
		ie_barra_w := '\'; --'
	else
		ie_barra_w := '/';
	end if;

	-- Localiza o diretório no windows
	pls_ecarta_integracao_pck.incluir_log('D', 'Localiza o diretório no windows', null, $$plsql_line);
	pls_obter_dir_rede_utl_file(cd_evento_w, null, ds_local_windows_w, ds_erro_w);

	if	(ds_erro_w is not null) then
		wheb_mensagem_pck.exibir_mensagem_abort(460257, 'DS_ERRO='||ds_erro_w);
	end if;

	-- Verifica se encontrou os diretórios
	if	(ds_local_utl_w is null or ds_local_windows_w is null) then
		wheb_mensagem_pck.exibir_mensagem_abort('Problemas com a configuração de diretórios do Evento "' || cd_evento_w || '" - "' || obter_valor_dominio(4585, cd_evento_w) || '"!');
	end if;

	-- Seta o caminho completo para os diretórios locais
	pls_parametro_t.ds_diretorio_funcao		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_utl_w);
	pls_parametro_t.ds_dir_enviados_comp		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_utl_w || ie_barra_w || pls_parametro_t.ds_diretorio_enviados);
	pls_parametro_t.ds_dir_recebidos_comp		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_utl_w || ie_barra_w || pls_parametro_t.ds_diretorio_recebidos);
	pls_parametro_t.ds_dir_inconsistencias_comp	:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_utl_w || ie_barra_w || pls_parametro_t.ds_diretorio_inconsistencias);
	pls_parametro_t.ds_dir_erros_comp		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_utl_w || ie_barra_w || pls_parametro_t.ds_diretorio_erros);
	pls_parametro_t.ds_dir_temp_comp		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_utl_w || ie_barra_w || pls_parametro_t.ds_diretorio_temp);

	-- Seta o caminho completo para os diretórios locais do Windows
	pls_parametro_t.ds_diretorio_funcao_w		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_windows_w);
	pls_parametro_t.ds_dir_enviados_comp_w		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_windows_w || '\' /*'*/ || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_enviados in ds_local_utl_w);
	current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_recebidos_comp_w		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_windows_w || '\' /*'*/ || pls_parametro_t.ds_diretorio_recebidos);
	pls_parametro_t.ds_dir_inconsistencias_comp_w	:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_windows_w || '\' /*'*/ || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_inconsistencias);
	current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_erros_comp_w		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_windows_w || '\' /*'*/ || pls_parametro_t.ds_diretorio_erros);
	pls_parametro_t.ds_dir_temp_comp_w		:= pls_ecarta_integracao_pck.ajustar_barra(ds_local_windows_w || '\' /*'*/ || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_diretorio_temp);

	-- Testa o diretório enviados
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Testa o diretório enviados', null, $$plsql_line);
	begin
		file_w := utl_file.fopen(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp, 'teste.txt', 'w', 1);
		utl_file.fclose(file_w);
		utl_file.fremove(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp, 'teste.txt');
	exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort('O diretório de arquivos enviados "' || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp || '" não existe ou o sistema não possui permissão de acesso!');
	end;

	-- Testa o diretório recebidos
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Testa o diretório recebidos', null, $$plsql_line);
	begin
		file_w := utl_file.fopen(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_recebidos_comp, 'teste.txt', 'w', 1);
		utl_file.fclose(file_w);
		utl_file.fremove(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_recebidos_comp, 'teste.txt');
	exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort('O diretório de arquivos recebidos "' || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_recebidos_comp || '" não existe ou o sistema não possui permissão de acesso!');
	end;

	-- Testa o diretório inconsistencias
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Testa o diretório inconsistências', null, $$plsql_line);
	begin
		file_w := utl_file.fopen(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_inconsistencias_comp, 'teste.txt', 'w', 1);
		utl_file.fclose(file_w);
		utl_file.fremove(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_inconsistencias_comp, 'teste.txt');
	exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort('O diretório de arquivos de inconsistencias "' || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_inconsistencias_comp || '" não existe ou o sistema não possui permissão de acesso!');
	end;

	-- Testa o diretório erros
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Testa o diretório erros', null, $$plsql_line);
	begin
		file_w := utl_file.fopen(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_erros_comp, 'teste.txt', 'w', 1);
		utl_file.fremove(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_erros_comp, 'teste.txt');
	exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort('O diretório de arquivos erros "' || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_erros_comp || '" não existe ou o sistema não possui permissão de acesso!');
	end;

	-- Testa o diretório temporários
	CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Testa o diretório temporários', null, $$plsql_line);
	begin
		file_w := utl_file.fopen(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp, 'teste.txt', 'w', 1);
		utl_file.fclose(file_w);
		utl_file.fremove(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp, 'teste.txt');
	exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort('O diretório de arquivos temporários "' || current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp || '", não existe ou o sistema não possui permissão de acesso!');
	end;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ecarta_integracao_pck.carregar_parametros ( nr_seq_ecarta_parametro_p pls_ecarta_parametro.cd_estabelecimento%type) FROM PUBLIC;
