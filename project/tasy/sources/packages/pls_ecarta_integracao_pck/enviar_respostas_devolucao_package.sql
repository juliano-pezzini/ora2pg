-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ecarta_integracao_pck.enviar_respostas_devolucao ( nm_usuario_p usuario.nm_usuario%type default nm_usuario_w) AS $body$
DECLARE

	-- variáveis
	pls_solicitacao_w	pls_solicitacao_row;
	ds_erro_w		varchar(4000);
	nm_arquivo_w		pls_ecarta_arquivo_solic.nm_arquivo%type;
	nr_seq_lote_w		pls_ecarta_lote.nr_sequencia%type;

	-- Lotes não respondidos
	c01_w CURSOR FOR
	SELECT	distinct a.nr_seq_ecarta_lote
	from	pls_ecarta_lote		b,
		pls_ecarta_solicitacao	a
	where	b.nr_sequencia			= a.nr_seq_ecarta_lote
	and	(a.dt_recebimento_devolucao IS NOT NULL AND a.dt_recebimento_devolucao::text <> '')
	and	coalesce(a.dt_envio_resposta_devolucao::text, '') = ''
	and	b.nr_seq_ecarta_parametro	= nr_seq_ecarta_parametro_w
	and	b.nr_seq_ecarta_matriz		= nr_seq_ecarta_matriz_w;

	-- Solicitações do lote
	c02_w CURSOR(nr_seq_ecarta_lote_p pls_ecarta_lote.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_ecarta_lote,
		a.nm_destinatario,
		a.nr_etiqueta,
		b.ds_endereco,
		b.nr_endereco,
		b.ds_complemento,
		b.ds_bairro,
		b.ds_municipio,
		b.sg_estado,
		b.cd_cep,
		coalesce((SELECT max('S') from pls_ecarta_arquivo_solic z where z.nr_seq_ecarta_solicitacao = a.nr_sequencia), 'N') ie_arquivo_complementar,
		a.ie_tipo_baixa,
		a.ie_resposta_devolucao
	from	pls_ecarta_endereco_solic	b,
		pls_ecarta_solicitacao		a
	where	b.nr_seq_ecarta_solicitacao	= a.nr_sequencia
	and	(a.dt_recebimento_devolucao IS NOT NULL AND a.dt_recebimento_devolucao::text <> '')
	and	coalesce(a.dt_envio_resposta_devolucao::text, '') = ''
	and	a.nr_seq_ecarta_lote		= nr_seq_ecarta_lote_p;
BEGIN
	-- Seta variáveis globais
	current_setting('pls_ecarta_integracao_pck.pls_arquivo_t')::pls_arquivo_row.delete;
	PERFORM set_config('pls_ecarta_integracao_pck.qt_arq_w', 0, false);
	PERFORM set_config('pls_ecarta_integracao_pck.nm_usuario_w', nm_usuario_p, false);
	PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'enviar respostas de devolução', false);

	-- Processa lotes não enviados
	for r01_w in c01_w loop
		-- Seta variáveis globais
		PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w', r01_w.nr_seq_ecarta_lote, false);
		pls_solicitacao_w.delete;

		-- Nome do arquivo de recibo
		nm_arquivo_w := 'e-Carta_' || current_setting('pls_ecarta_integracao_pck.pls_matriz_t')::pls_matriz_r.cd_identificador || '_devolucaoAR_' || current_setting('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w')::pls_ecarta_lote.nr_sequencia%type || '_' || to_char(clock_timestamp(), 'DDMMYYYYHH24MISS') ||
				'_resposta_' || to_char(clock_timestamp(), 'DDMMYYYYHH24MISS') || '.zip';

		-- Carrega solicitações do lote
		open c02_w(current_setting('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w')::pls_ecarta_lote.nr_sequencia%type);
		loop fetch c02_w bulk collect into pls_solicitacao_w;
			exit when pls_solicitacao_w.count = 0;

			-- Seta variáveis globais
			PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_solicitacao_w', null, false);
			PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_arquivo_solic_w', null, false);

			-- Gera arquivo xml no diretório temporários
			CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Gera xml "6. Arquivo de Resposta do Cliente a Devolução de ARs e Meta Dados - RD" no diretório temporários', null, $$plsql_line);
			CALL pls_ecarta_integracao_pck.gerar_arquivo_reposta(pls_solicitacao_w, current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp, nm_arquivo_w);
		end loop;
		close c02_w;

		-- Seta variáveis globais
		PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_solicitacao_w', null, false);
		PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_arquivo_solic_w', null, false);

		-- Compacta arquivos
		CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Compacta arquivos', null, $$plsql_line);
		CALL pls_ecarta_integracao_pck.compactar_arquivos(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp, nm_arquivo_w, current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp);

		-- Seta variáveis globais
		PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'enviar respostas de devolução', false);

		-- Envia os arquivos do diretório temporários ao diretório de enviados do servidor FTPS
		CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Envia os arquivos do diretório temporários ao diretório enviados do servidor FTPS', null, $$plsql_line);
		ds_erro_w := pls_ecarta_integracao_pck.enviar_arquivos(	current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_servico_web_ftps,
						current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_servidor_ftp,
						current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nr_porta_ftp,
						current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nm_usuario_ftp,
						current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_senha_ftp,
						current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp_w,
						current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_remoto_enviados);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
		end if;

		-- Move arquivos processados para a posta de arquivos enviados
		CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Move arquivos para a pasta enviados', null, $$plsql_line);
		CALL pls_ecarta_integracao_pck.mover_arquivos(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp);

		-- Seta variáveis globais
		PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'enviar respostas de devolução', false);

		-- Confirma transação neste ponto pois arquivos já foram enviados ao servidor FTPS
		commit;
	end loop;

	-- Verifica se existem solicitações com erro que não existem na base de dados
	if (current_setting('pls_ecarta_integracao_pck.pls_solic_erro_t')::pls_solicitacao_row.count > 0) then
		-- Seta variáveis globais
		PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w', null, false);
		PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_solicitacao_w', null, false);
		PERFORM set_config('pls_ecarta_integracao_pck.nr_seq_ecarta_arquivo_solic_w', null, false);

		-- Processa solicitações com inconsistencias que não existem na base de dados
		for i in current_setting('pls_ecarta_integracao_pck.pls_solic_erro_t')::pls_solicitacao_row.first..pls_solic_erro_t.last loop
			-- Nome de arquivo para cada lote com erro
			if (coalesce(nr_seq_lote_w, -1) != current_setting('pls_ecarta_integracao_pck.pls_solic_erro_t')::pls_solicitacao_row[i].nr_seq_ecarta_lote) then
				nr_seq_lote_w := current_setting('pls_ecarta_integracao_pck.pls_solic_erro_t')::pls_solicitacao_row[i].nr_seq_ecarta_lote;

				-- Para manter 2 arquivos, um com erros de lotes existes e outro com lotes não existentes, é somado 1 no segundos
				nm_arquivo_w := 'e-Carta_' || current_setting('pls_ecarta_integracao_pck.pls_matriz_t')::pls_matriz_r.cd_identificador || '_devolucaoAR_' || current_setting('pls_ecarta_integracao_pck.pls_solic_erro_t')::pls_solicitacao_row[i].nr_seq_ecarta_lote || '_' || to_char(clock_timestamp(), 'DDMMYYYYHH24MISS') ||
						'_resposta_' || to_char(clock_timestamp(), 'DDMMYYYYHH24MI') || trim(both to_char((to_char(clock_timestamp(), 'SS'))::numeric  + 1, '00')) || '.zip';
			end if;

			-- Gera arquivo destas solicitações
			CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Gera xml "6. Arquivo de Resposta do Cliente a Devolução de ARs e Meta Dados - RD" de lotes e solicitações inexistentes no diretório temporários', null, $$plsql_line);
			CALL pls_ecarta_integracao_pck.gerar_arquivo_reposta(current_setting('pls_ecarta_integracao_pck.pls_solic_erro_t')::pls_solicitacao_row, current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp, nm_arquivo_w, false);

			-- Compacta arquivos
			CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Compacta arquivos', null, $$plsql_line);
			CALL pls_ecarta_integracao_pck.compactar_arquivos(current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp, nm_arquivo_w, current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_enviados_comp);

			-- Seta variáveis globais
			PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'enviar respostas de devolução', false);

			-- Envia o arquivo do diretório temporários ao diretório de enviados do servidor FTPS
			-- Aqui a barra é invertidade pois é enviada ao java
			CALL CALL pls_ecarta_integracao_pck.incluir_log('D', 'Envia os arquivos do diretório temporários ao diretório enviados do servidor FTPS', null, $$plsql_line);
			ds_erro_w := pls_ecarta_integracao_pck.enviar_arquivo(	current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_servico_web_ftps,
							current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_servidor_ftp,
							current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nr_porta_ftp,
							current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.nm_usuario_ftp,
							current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_senha_ftp,
							current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp_w || '\' || nm_arquivo_w, --'
							pls_parametro_t.ds_dir_remoto_enviados || '/' || nm_arquivo_w);
			if	(ds_erro_w is not null) then
				wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
			end if;

			-- Move arquivos processados para a posta de arquivos enviados
			pls_ecarta_integracao_pck.incluir_log('D', 'Move arquivos para a pasta enviados', null, $$plsql_line);
			pls_ecarta_integracao_pck.mover_arquivos(pls_parametro_t.ds_dir_enviados_comp);

			-- Seta variáveis globais
			nm_procedimento_w := 'enviar respostas de devolução';

			-- Confirma transação neste ponto pois arquivos já foram enviados ao servidor FTPS
			commit;
		end loop;

		-- Seta variáveis globais
		pls_solic_erro_t.delete;
	end if;
end pls_ecarta_integracao_pck.enviar_respostas_devolucao();

procedure pls_ecarta_integracao_pck.enviar_cancelamentos_pendentes(	nm_usuario_p	in usuario.nm_usuario%type default nm_usuario_w) is
	-- variáveis
	pls_solicitacao_w	pls_solicitacao_row;
	ds_erro_w		varchar2(4000);
	nm_arquivo_w		pls_ecarta_arquivo_solic.nm_arquivo%type;

	--//TODO: Verificar as regras do cursor e de atualização abaixo com os Correios
	-- pois pode ser que a situação de cancelamento seja somente para o lote e não para a solicitação
	-- Lotes não respondidos
	cursor c01_w is
	select	distinct a.nr_seq_ecarta_lote
	from	pls_ecarta_lote		b,
		pls_ecarta_solicitacao	a
	where	b.nr_sequencia			= a.nr_seq_ecarta_lote
	and	b.dt_solicitacao_cancelamento	is not null
	and	b.dt_envio_cancelamento		is null
	and	nvl(b.ie_cancelado, 'N')	= 'N' -- Não
	and	b.nr_seq_ecarta_parametro	= nr_seq_ecarta_parametro_w
	and	b.nr_seq_ecarta_matriz		= nr_seq_ecarta_matriz_w;

	-- Solicitações do lote
	cursor c02_w(nr_seq_ecarta_lote_p pls_ecarta_lote.nr_sequencia%type) is
	select	a.nr_sequencia,
		a.nr_seq_ecarta_lote,
		a.nm_destinatario,
		a.nr_etiqueta,
		b.ds_endereco,
		b.nr_endereco,
		b.ds_complemento,
		b.ds_bairro,
		b.ds_municipio,
		b.sg_estado,
		b.cd_cep,
		nvl((select max('S') from pls_ecarta_arquivo_solic z where z.nr_seq_ecarta_solicitacao = a.nr_sequencia), 'N') ie_arquivo_complementar,
		a.ie_tipo_baixa,
		a.ie_resposta_devolucao
	from	pls_ecarta_lote			c,
		pls_ecarta_endereco_solic	b,
		pls_ecarta_solicitacao		a
	where	c.nr_sequencia			= a.nr_seq_ecarta_lote
	and	b.nr_seq_ecarta_solicitacao	= a.nr_sequencia
	and	c.dt_solicitacao_cancelamento	is not null
	and	c.dt_envio_cancelamento		is null
	and	nvl(c.ie_cancelado, 'N')	= 'N'	-- Não
	and	a.dt_recebimento_devolucao	is null	-- Não foi devolvido
	and	a.nr_seq_ecarta_lote		= nr_seq_ecarta_lote_p;
begin
	-- Seta variáveis globais
	pls_arquivo_t.delete;
	qt_arq_w := 0;
	nm_usuario_w := nm_usuario_p;
	nm_procedimento_w := 'enviar cancelamentos pendentes';

	-- Processa lotes não enviados
	for r01_w in c01_w loop
		-- Seta variáveis globais
		nr_seq_ecarta_lote_w := r01_w.nr_seq_ecarta_lote;
		pls_solicitacao_w.delete;

		-- Nome do arquivo de recibo
		nm_arquivo_w := 'e-Carta_' || pls_matriz_t.cd_identificador || '_' || nr_seq_ecarta_lote_w || '_cancelamento.zip';

		-- Carrega solicitações do lote
		open c02_w(nr_seq_ecarta_lote_w);
		loop fetch c02_w bulk collect into pls_solicitacao_w;
			exit when pls_solicitacao_w.count = 0;

			-- Seta variáveis globais
			nr_seq_ecarta_solicitacao_w	:= null;
			nr_seq_ecarta_arquivo_solic_w	:= null;

			-- Gera arquivo xml no diretório temporários
			pls_ecarta_integracao_pck.incluir_log('D', 'Gera xml "8. Arquivo de Cancelamento" no diretório temporários', null, $$plsql_line);
			pls_ecarta_integracao_pck.gerar_arquivo_cancelamento(pls_solicitacao_w, pls_parametro_t.ds_dir_enviados_comp, nm_arquivo_w);
		end loop;
		close c02_w;

		-- Seta variáveis globais
		nr_seq_ecarta_solicitacao_w	:= null;
		nr_seq_ecarta_arquivo_solic_w	:= null;

		-- Compacta arquivos
		pls_ecarta_integracao_pck.incluir_log('D', 'Compacta arquivos', null, $$plsql_line);
		pls_ecarta_integracao_pck.compactar_arquivos(pls_parametro_t.ds_dir_temp_comp, nm_arquivo_w, pls_parametro_t.ds_dir_enviados_comp);

		-- Seta variáveis globais
		nm_procedimento_w := 'enviar cancelamentos pendentes';

		-- Envia os arquivos do diretório temporários ao diretório de enviados do servidor FTPS
		pls_ecarta_integracao_pck.incluir_log('D', 'Envia os arquivos do diretório temporários ao diretório enviados do servidor FTPS', null, $$plsql_line);
		ds_erro_w := pls_ecarta_integracao_pck.enviar_arquivos(	pls_parametro_t.ds_servico_web_ftps,
						pls_parametro_t.ds_servidor_ftp,
						pls_parametro_t.nr_porta_ftp,
						pls_parametro_t.nm_usuario_ftp,
						pls_parametro_t.ds_senha_ftp,
						pls_parametro_t.ds_dir_temp_comp_w,
						pls_parametro_t.ds_dir_remoto_enviados);
		if	(ds_erro_w is not null) then
			wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
		end if;

		-- Move arquivos processados para a posta de arquivos enviados
		pls_ecarta_integracao_pck.incluir_log('D', 'Move arquivos para a pasta enviados', null, $$plsql_line);
		pls_ecarta_integracao_pck.mover_arquivos(pls_parametro_t.ds_dir_enviados_comp);

		-- Seta variáveis globais
		nm_procedimento_w := 'enviar respostas de notificação';

		-- Confirma transação neste ponto pois arquivos já foram enviados ao servidor FTPS
		commit;
	end loop;
end pls_ecarta_integracao_pck.enviar_cancelamentos_pendentes();

procedure pls_ecarta_integracao_pck.enviar_respostas_notificacao(	nm_usuario_p	in usuario.nm_usuario%type default nm_usuario_w) is
	-- variáveis
	pls_solicitacao_w	pls_solicitacao_row;
	ds_erro_w		varchar2(4000);
	nm_arquivo_w		pls_ecarta_arquivo_solic.nm_arquivo%type;

	-- Lotes não respondidos
	cursor c01_w is
	select	distinct a.nr_seq_ecarta_lote
	from	pls_ecarta_lote		b,
		pls_ecarta_solicitacao	a
	where	b.nr_sequencia			= a.nr_seq_ecarta_lote
	and	a.dt_envio_resposta_notificacao	is null
	and	(a.dt_recebimento_notificacao	is not null
	or	a.dt_recebimento_inconsistencia	is not null)
	and	b.nr_seq_ecarta_parametro	= nr_seq_ecarta_parametro_w
	and	b.nr_seq_ecarta_matriz		= nr_seq_ecarta_matriz_w;

	-- Solicitações do lote
	cursor c02_w(nr_seq_ecarta_lote_p pls_ecarta_lote.nr_sequencia%type) is
	select	a.nr_sequencia,
		a.nr_seq_ecarta_lote,
		a.nm_destinatario,
		a.nr_etiqueta,
		b.ds_endereco,
		b.nr_endereco,
		b.ds_complemento,
		b.ds_bairro,
		b.ds_municipio,
		b.sg_estado,
		b.cd_cep,
		nvl((select max('S') from pls_ecarta_arquivo_solic z where z.nr_seq_ecarta_solicitacao = a.nr_sequencia), 'N') ie_arquivo_complementar,
		a.ie_tipo_baixa,
		a.ie_resposta_devolucao
	from	pls_ecarta_endereco_solic	b,
		pls_ecarta_solicitacao		a
	where	b.nr_seq_ecarta_solicitacao	= a.nr_sequencia
	and	a.dt_envio_resposta_notificacao	is null
	and	(a.dt_recebimento_notificacao	is not null
	or	a.dt_recebimento_inconsistencia	is not null)
	and	a.nr_seq_ecarta_lote		= nr_seq_ecarta_lote_p;
begin
	-- Seta variáveis globais
	pls_arquivo_t.delete;
	qt_arq_w := 0;
	nm_usuario_w := nm_usuario_p;
	nm_procedimento_w := 'enviar respostas de notificação';

	-- Processa lotes não respondidos
	for r01_w in c01_w loop
		-- Seta variáveis globais
		nr_seq_ecarta_lote_w := r01_w.nr_seq_ecarta_lote;
		pls_solicitacao_w.delete;

		-- Nome do arquivo de recibo
		nm_arquivo_w := 'e-Carta_' || pls_matriz_t.cd_identificador || '_' || nr_seq_ecarta_lote_w || '_resposta' || to_char(sysdate, 'DDMMYYYYHH24MISS') || '.zip';

		-- Carrega solicitações do lote
		open c02_w(nr_seq_ecarta_lote_w);
		loop fetch c02_w bulk collect into pls_solicitacao_w;
			exit when pls_solicitacao_w.count = 0;

			-- Seta variáveis globais
			nr_seq_ecarta_solicitacao_w	:= null;
			nr_seq_ecarta_arquivo_solic_w	:= null;

			-- Gera arquivo xml no diretório temporários
			pls_ecarta_integracao_pck.incluir_log('D', 'Gera xml "4. Resposta à Notificação do Cliente - RN" no diretório temporários', null, $$plsql_line);
			pls_ecarta_integracao_pck.gerar_arquivo_recibo(pls_solicitacao_w, pls_parametro_t.ds_diretorio_enviados, nm_arquivo_w);
		end loop;
		close c02_w;

		-- Seta variáveis globais
		nr_seq_ecarta_solicitacao_w	:= null;
		nr_seq_ecarta_arquivo_solic_w	:= null;

		-- Compacta arquivos
		pls_ecarta_integracao_pck.incluir_log('D', 'Compacta arquivos', null, $$plsql_line);
		pls_ecarta_integracao_pck.compactar_arquivos(pls_parametro_t.ds_dir_temp_comp, nm_arquivo_w, pls_parametro_t.ds_dir_enviados_comp);

		-- Seta variáveis globais
		nm_procedimento_w := 'enviar respostas de notificação';

		-- Envia os arquivos do diretório temporários ao diretório de enviados do servidor FTPS
		pls_ecarta_integracao_pck.incluir_log('D', 'Envia os arquivos do diretório temporários ao diretório enviados do servidor FTPS', null, $$plsql_line);
		ds_erro_w := pls_ecarta_integracao_pck.enviar_arquivos(	pls_parametro_t.ds_servico_web_ftps,
						pls_parametro_t.ds_servidor_ftp,
						pls_parametro_t.nr_porta_ftp,
						pls_parametro_t.nm_usuario_ftp,
						pls_parametro_t.ds_senha_ftp,
						pls_parametro_t.ds_dir_temp_comp_w,
						pls_parametro_t.ds_dir_remoto_enviados);
		if	(ds_erro_w is not null) then
			wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
		end if;

		-- Move arquivos processados para a posta de arquivos enviados
		pls_ecarta_integracao_pck.incluir_log('D', 'Move arquivos para a pasta enviados', null, $$plsql_line);
		pls_ecarta_integracao_pck.mover_arquivos(pls_parametro_t.ds_dir_enviados_comp);

		-- Seta variáveis globais
		nm_procedimento_w := 'enviar respostas de notificação';

		-- Confirma transação neste ponto pois arquivos já foram enviados ao servidor FTPS
		commit;
	end loop;
end pls_ecarta_integracao_pck.enviar_respostas_notificacao();

procedure pls_ecarta_integracao_pck.enviar_lotes_pendentes(	nm_usuario_p	in usuario.nm_usuario%type default nm_usuario_w) is
	-- variáveis
	pls_solicitacao_w	pls_solicitacao_row;
	--
	nm_arquivo_w		pls_ecarta_arquivo_solic.nm_arquivo%type;
	ds_erro_w		varchar2(4000);

	-- Lotes não enviados
	cursor c01_w is
	select	a.nr_sequencia
	from	pls_ecarta_lote a
	where	a.dt_envio is null
	and	a.nr_seq_ecarta_parametro = nr_seq_ecarta_parametro_w
	and	a.nr_seq_ecarta_matriz = nr_seq_ecarta_matriz_w
	and	nvl(a.ie_cancelado,'N')	= 'N'
	and	not exists (	select	1
				from	pls_relatorio x,
					pls_ecarta_arquivo_solic y,
					pls_ecarta_solicitacao z
				where	z.nr_sequencia	= y.nr_seq_ecarta_solicitacao
				and	y.nr_sequencia	= x.nr_seq_ecarta_arq_solic
				and	z.nr_seq_ecarta_lote	= a.nr_sequencia
				and	x.ie_status in ('1','2','3')); --Não pode enviar o lote se existir algum relatório com status 'Pendente', 'Em processamento' ou 'Com erro'
	-- Solicitações do lote
	cursor c02_w(nr_seq_ecarta_lote_p pls_ecarta_lote.nr_sequencia%type) is
	select	a.nr_sequencia,
		a.nr_seq_ecarta_lote,
		a.nm_destinatario,
		a.nr_etiqueta,
		b.ds_endereco,
		b.nr_endereco,
		b.ds_complemento,
		b.ds_bairro,
		b.ds_municipio,
		b.sg_estado,
		b.cd_cep,
		nvl((select max('S') from pls_ecarta_arquivo_solic z where z.nr_seq_ecarta_solicitacao = a.nr_sequencia), 'N') ie_arquivo_complementar,
		a.ie_tipo_baixa,
		a.ie_resposta_devolucao
	from	pls_ecarta_endereco_solic	b,
		pls_ecarta_solicitacao		a
	where	b.nr_seq_ecarta_solicitacao	= a.nr_sequencia
	and	a.nr_seq_ecarta_lote		= nr_seq_ecarta_lote_p;
begin
	-- Seta variáveis globais
	pls_arquivo_t.delete;
	qt_arq_w := 0;
	nm_usuario_w := nm_usuario_p;
	nm_procedimento_w := 'enviar lotes pendentes';

	-- Processa lotes não enviados
	for r01_w in c01_w loop
		-- Seta variáveis globais
		nr_seq_ecarta_lote_w := r01_w.nr_sequencia;
		pls_solicitacao_w.delete;

		-- Carrega solicitações do lote
		open c02_w(r01_w.nr_sequencia);
		loop fetch c02_w bulk collect into pls_solicitacao_w;
			exit when pls_solicitacao_w.count = 0;

			-- Seta variáveis globais
			nr_seq_ecarta_solicitacao_w	:= null;
			nr_seq_ecarta_arquivo_solic_w	:= null;

			-- Gera arquivo xml no diretório temporários
			pls_ecarta_integracao_pck.incluir_log('D', 'Gera xml "1. Arquivo de Serviço - SV" no diretório temporários', null, $$plsql_line);
			pls_ecarta_integracao_pck.gerar_arquivo_solicitacao(pls_solicitacao_w);
		end loop;
		close c02_w;

		-- Seta variáveis globais
		nr_seq_ecarta_solicitacao_w	:= null;
		nr_seq_ecarta_arquivo_solic_w	:= null;

		-- Compacta arquivos
		pls_ecarta_integracao_pck.incluir_log('D', 'Compacta arquivos', null, $$plsql_line);
		nm_arquivo_w := 'e-Carta_' || pls_matriz_t.cd_identificador || '_' || nr_seq_ecarta_lote_w || '_servico.zip';

		pls_ecarta_integracao_pck.compactar_arquivos(pls_parametro_t.ds_dir_temp_comp, nm_arquivo_w, pls_parametro_t.ds_dir_enviados_comp);

		-- Seta variáveis globais
		nm_procedimento_w := 'enviar lotes pendentes';

		-- Envia os arquivos do diretório temporários ao diretório de enviados do servidor FTPS
		pls_ecarta_integracao_pck.incluir_log('D', 'Envia os arquivos do diretório temporários ao diretório enviados do servidor FTPS', null, $$plsql_line);
		ds_erro_w := pls_ecarta_integracao_pck.enviar_arquivos(	pls_parametro_t.ds_servico_web_ftps,
						pls_parametro_t.ds_servidor_ftp,
						pls_parametro_t.nr_porta_ftp,
						pls_parametro_t.nm_usuario_ftp,
						pls_parametro_t.ds_senha_ftp,
						pls_parametro_t.ds_dir_temp_comp_w,
						pls_parametro_t.ds_dir_remoto_enviados);
		if	(ds_erro_w is not null) then
			wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
		end if;

		-- Atualiza data de envio do lote
		update	pls_ecarta_lote
		set	dt_envio	= sysdate,
			dt_atualizacao	= sysdate,
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_ecarta_lote_w;

		-- Move arquivos para a pasta de enviados
		pls_ecarta_integracao_pck.incluir_log('D', 'Move arquivos para a pasta enviados', null, $$plsql_line);
		pls_ecarta_integracao_pck.mover_arquivos(pls_parametro_t.ds_dir_enviados_comp);

		-- Seta variáveis globais
		nm_procedimento_w := 'enviar lotes pendentes';

		-- Confirma transação neste ponto pois arquivos já foram enviados ao servidor FTPS
		commit;
	end loop;
end pls_ecarta_integracao_pck.enviar_lotes_pendentes();

procedure pls_ecarta_integracao_pck.integrar_lotes(	nm_usuario_p	in usuario.nm_usuario%type) is
	-- Parâmetros de estabelecimentos que possuem e-Carta configurado
	cursor c01_w is
	select	a.cd_estabelecimento,
		b.ie_origem,
		max(b.nr_sequencia)	nr_seq_ecarta_parametro
	from	pls_ecarta_parametro	b,
		estabelecimento		a
	where	b.cd_estabelecimento	= a.cd_estabelecimento
	and	b.ie_situacao		= 'A'
	and	exists (select 1 from pls_ecarta_param_matriz z where z.nr_seq_ecarta_parametro = b.nr_sequencia)
	group	by	a.cd_estabelecimento,
			b.ie_origem
	order	by	a.cd_estabelecimento,
			b.ie_origem,
			nr_seq_ecarta_parametro;

	-- Matrizes do parâmetro do estabelecimento
	cursor c02_w(	nr_seq_ecarta_parametro_p in pls_ecarta_param_matriz.nr_seq_ecarta_parametro%type) is
	select	a.nr_seq_ecarta_matriz
	from	pls_ecarta_param_matriz a
	where	a.nr_seq_ecarta_parametro = nr_seq_ecarta_parametro_p;
begin
	-- Seta variáveis globais
	ie_erro_w			:= false;
	ie_barra_w			:= '/';
	cd_estabelecimento_w		:= null;
	nr_seq_ecarta_parametro_w	:= null;
	nr_seq_ecarta_matriz_w		:= null;
	nr_seq_ecarta_lote_w		:= null;
	nr_seq_ecarta_solicitacao_w	:= null;
	nr_seq_ecarta_arquivo_solic_w	:= null;
	pls_parametro_t			:= null;
	pls_matriz_t			:= null;
	nm_usuario_w 			:= nm_usuario_p;
	nm_procedimento_w		:= 'integrar lotes';

	-- Faz a atualização para cada parâmetro de estabelecimento
	for r01_w in c01_w loop
	begin
		-- Seta variáveis globais
		ie_erro_w := false;
		qt_log_w := 0;
		pls_log_t.delete;

		-- Verifica se estabelecimento mudou
		if	((nvl(cd_estabelecimento_w, -1) != nvl(r01_w.cd_estabelecimento, -1)) or (nvl(nr_seq_ecarta_parametro_w, -1) != nvl(r01_w.nr_seq_ecarta_parametro, -1))) then
			-- Carrega e valida parâmetros do e-Carta
			cd_estabelecimento_w		:= r01_w.cd_estabelecimento;
			nr_seq_ecarta_parametro_w	:= r01_w.nr_seq_ecarta_parametro;
			pls_ecarta_integracao_pck.carregar_parametros(nr_seq_ecarta_parametro_w);
			nm_procedimento_w := 'integrar lotes';
		end if;

		-- Log debug
		pls_ecarta_integracao_pck.incluir_log('D', 'Processa matrizes do parâmetro do estabelecimento', null, $$plsql_line);

		-- Processa matrizes do parâmetro e-Carta
		for r02_w in c02_w(nr_seq_ecarta_parametro_w) loop
			-- Seta variáveis globais
			if	(nvl(nr_seq_ecarta_matriz_w, -1) != nvl(r02_w.nr_seq_ecarta_matriz, -1)) then
				nr_seq_ecarta_matriz_w := r02_w.nr_seq_ecarta_matriz;

				-- Carrega a matriz do e-Carta
				pls_ecarta_integracao_pck.incluir_log('D', 'Carrega a matriz do e-Carta', null, $$plsql_line);
				pls_ecarta_integracao_pck.carregar_matriz(nr_seq_ecarta_matriz_w);
				nm_procedimento_w := 'integrar lotes';
			end if;

			-- Envia lotes pendentes
			pls_ecarta_integracao_pck.incluir_log('D', 'Envia lotes pendentes', null, $$plsql_line);
			pls_ecarta_integracao_pck.enviar_lotes_pendentes();
			nm_procedimento_w := 'integrar lotes';

			-- Envia resposta de notificação
			pls_ecarta_integracao_pck.incluir_log('D', 'Envia resposta de notificação', null, $$plsql_line);
			pls_ecarta_integracao_pck.enviar_respostas_notificacao();
			nm_procedimento_w := 'integrar lotes';

			-- Enviar solicitação de cancelamento
			pls_ecarta_integracao_pck.incluir_log('D', 'Envia solicitação de cancelamento', null, $$plsql_line);
			pls_ecarta_integracao_pck.enviar_cancelamentos_pendentes();
			nm_procedimento_w := 'integrar lotes';

			-- Envia resposta de devolução
			pls_ecarta_integracao_pck.incluir_log('D', 'Envia resposta de devolução', null, $$plsql_line);
			pls_ecarta_integracao_pck.enviar_respostas_devolucao();
			nm_procedimento_w := 'integrar lotes';
		end loop; -- Matriz
		-- Seta variáveis globais
		nr_seq_ecarta_matriz_w		:= null;
		nr_seq_ecarta_lote_w		:= null;
		nr_seq_ecarta_solicitacao_w	:= null;
		nr_seq_ecarta_arquivo_solic_w	:= null;
		pls_matriz_t			:= null;
		nm_procedimento_w		:= 'integrar lotes';

		-- Busca lotes para atualização
		pls_ecarta_integracao_pck.incluir_log('D', 'Busca lotes para atualização', null, $$plsql_line);
		pls_ecarta_integracao_pck.buscar_lotes();
		nm_procedimento_w := 'integrar lotes';

		-- Log debug
		pls_ecarta_integracao_pck.incluir_log('D', 'Fim do processo de parâmetro um estabelecimento.', null, $$plsql_line);

		-- Salva os logs incluídos
		pls_ecarta_integracao_pck.salvar_logs();

		-- Confirma alterações da transação
		commit;
	exception
		when others then
			-- Defaz alterações
			rollback;

			-- Inclui log de erro
			pls_ecarta_integracao_pck.incluir_log('E', 'Ocorreu erro ao ' || nm_procedimento_w || '! Erro = ' || sqlerrm, 'Rastreabilidade -->' || chr(13) || dbms_utility.format_error_backtrace, $$plsql_line);

			-- Salva os logs incluídos
			pls_ecarta_integracao_pck.salvar_logs();

			-- Confirma gravação do log
			commit;
	end;
	end loop; -- Parâmetros
end pls_ecarta_integracao_pck.integrar_lotes();

procedure pls_ecarta_integracao_pck.cancelar_lote(	nr_seq_lote_p	in pls_ecarta_lote.nr_sequencia%type,
				nm_usuario_p	in usuario.nm_usuario%type default nm_usuario_w) is

begin

update	pls_ecarta_lote
set	dt_solicitacao_cancelamento 	= sysdate,
	dt_atualizacao			= sysdate,
	ie_cancelado			= 'N',
	nm_usuario			= nm_usuario_p
where	nr_sequencia			= nr_seq_lote_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ecarta_integracao_pck.enviar_respostas_devolucao ( nm_usuario_p usuario.nm_usuario%type default nm_usuario_w) FROM PUBLIC;
