-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ecarta_integracao_pck.gerar_arquivo_recibo ( pls_solicitacao_p pls_solicitacao_row, ds_caminho_p pls_ecarta_arquivo_solic.ds_caminho%type, nm_arq_zip_p pls_ecarta_arquivo_solic.nm_arquivo%type) AS $body$
DECLARE

	-- variáveis
	doc			xmlDOM.DOMDocument;
	msg_node		xmlDOM.DOMNode;
	corp_node		xmlDOM.DOMNode;
	ars_node		xmlDOM.DOMNode;
	item_node		xmlDOM.DOMNode;
	doc_elmt		xmlDOM.DOMElement;
	cdata_sct		xmlDOM.DOMCDATASection;
	--
	nm_arquivo_w		pls_ecarta_arquivo_solic.nm_arquivo%type;
	--
	pls_arquivo_w		pls_arquivo_r;
BEGIN
	-- Seta variáveis globais
	PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'gerar arquivo de recibo', false);

	-- Cria o documento xml
	doc	 := xmlDOM.newDOMDocument;
	xmlDOM.setVersion(doc, '1.0');

	-- Cria o cabeçalho do documento xml
	msg_node := xmlDOM.makeNode(doc);
	doc_elmt := xmlDOM.createElement(doc, 'Mensagem');
	xmlDOM.setAttribute(doc_elmt, 'xmlns:xs', 'http://www.w3.org/2001/XMLSchema');
	msg_node := xmlDOM.appendChild(msg_node, xmlDOM.makeNode(doc_elmt));
	--
	doc_elmt := xmlDOM.createElement(doc, 'corpoMensagem');
	corp_node := xmlDOM.appendChild(msg_node, xmlDOM.makeNode(doc_elmt));
	--
	doc_elmt := xmlDOM.createElement(doc, 'nuLote');
	item_node := xmlDOM.appendChild(corp_node, xmlDOM.makeNode(doc_elmt));
	cdata_sct := xmlDOM.createCDATASection(doc, current_setting('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w')::pls_ecarta_lote.nr_sequencia%type);
 	item_node := xmlDOM.appendChild(item_node, xmlDOM.makeNode(cdata_sct));

	doc_elmt := xmlDOM.createElement(doc, 'resNotificação');
	ars_node := xmlDOM.appendChild(corp_node, xmlDOM.makeNode(doc_elmt));

	doc_elmt := xmlDOM.createElement(doc, 'deResposta');
	item_node := xmlDOM.appendChild(ars_node, xmlDOM.makeNode(doc_elmt));
	cdata_sct := xmlDOM.createCDATASection(doc, 'A'); -- Aceito (Fixo)
 	item_node := xmlDOM.appendChild(item_node, xmlDOM.makeNode(cdata_sct));

	-- Define o nome do arquivo xml
	nm_arquivo_w := 'e-Carta_' || current_setting('pls_ecarta_integracao_pck.pls_matriz_t')::pls_matriz_r.cd_identificador || '_' || current_setting('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w')::pls_ecarta_lote.nr_sequencia%type || '_resposta' || to_char(clock_timestamp(), 'DDMMYYYYHH24MISS') || '.xml';

	-- Salva o arquivo xml
	xmlDOM.writeToFile(doc, current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp || current_setting('pls_ecarta_integracao_pck.ie_barra_w')::varchar(1) || nm_arquivo_w, 'UTF-8');
	xmlDOM.freeDocument(doc);

	-- Processa as solicitações
	for i in pls_solicitacao_p.first..pls_solicitacao_p.last loop
		-- Inclui arquivo zip para todas as solicitações respondidas
		pls_arquivo_w.nr_seq_ecarta_solicitacao	:= current_setting('pls_ecarta_integracao_pck.nr_seq_ecarta_solicitacao_w')::pls_ecarta_solicitacao.nr_sequencia%type;
		pls_arquivo_w.nm_arquivo		:= nm_arq_zip_p;
		pls_arquivo_w.ds_caminho		:= ds_caminho_p;
		CALL pls_ecarta_integracao_pck.atualizar_arquivo(pls_arquivo_w);
	end loop;

	-- Seta variáveis globais
	PERFORM set_config('pls_ecarta_integracao_pck.nm_procedimento_w', 'gerar arquivo de recibo', false);

	-- Atualiza data de envio dos recibos
	update	pls_ecarta_solicitacao
	set	dt_envio_resposta_notificacao	= clock_timestamp(),
		dt_atualizacao			= clock_timestamp(),
		nm_usuario			= current_setting('pls_ecarta_integracao_pck.nm_usuario_w')::usuario.nm_usuario%type
	where	nr_seq_ecarta_lote		= current_setting('pls_ecarta_integracao_pck.nr_seq_ecarta_lote_w')::pls_ecarta_lote.nr_sequencia%type;

	-- Adiciona o arquivo xml na lista de arquivos processados
	PERFORM set_config('pls_ecarta_integracao_pck.qt_arq_w', current_setting('pls_ecarta_integracao_pck.qt_arq_w')::numeric(22) + 1, false);
	current_setting('pls_ecarta_integracao_pck.pls_arquivo_t')::pls_arquivo_row(current_setting('pls_ecarta_integracao_pck.qt_arq_w')::numeric(22)).nm_arquivo := nm_arquivo_w;
	current_setting('pls_ecarta_integracao_pck.pls_arquivo_t')::pls_arquivo_row(current_setting('pls_ecarta_integracao_pck.qt_arq_w')::numeric(22)).ds_caminho := current_setting('pls_ecarta_integracao_pck.pls_parametro_t')::pls_parametro_r.ds_dir_temp_comp;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ecarta_integracao_pck.gerar_arquivo_recibo ( pls_solicitacao_p pls_solicitacao_row, ds_caminho_p pls_ecarta_arquivo_solic.ds_caminho%type, nm_arq_zip_p pls_ecarta_arquivo_solic.nm_arquivo%type) FROM PUBLIC;
