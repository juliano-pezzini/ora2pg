-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE aggregation_proc_managem_pck.gerar_agreg_change_dep_room ( nr_seq_daily_report_p agreg_main_daily_reports.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_main_flag_p bigint) AS $body$
DECLARE

	
cd_ward_w				agreg_main_daily_reports.cd_ward%type;
nr_seq_agreg_change_w	agreg_change_dep_room.nr_sequencia%type;
cd_department_w         atend_paciente_unidade.cd_departamento%type;
ie_exist_w              bigint;
ie_classification_w     agreg_change_dep_room.ie_classification%type;
cd_departamento_ant_w	atend_paciente_unidade.cd_departamento%type;
cd_setor_atend_ant_w	atend_paciente_unidade.cd_setor_atendimento%type;
cd_unid_basica_ant_w	atend_paciente_unidade.cd_unidade_basica%type;

c01 CURSOR FOR
  SELECT  
    ap.nr_atendimento,
    ap.cd_pessoa_fisica, 
    obter_idade_pf(ap.cd_pessoa_fisica, clock_timestamp(), 'A') nr_idade,
    obter_sexo_pf(ap.cd_pessoa_fisica, 'D') ie_sexo,
    ap.dt_entrada,
    apu.dt_saida_unidade,
    apu.cd_unidade_basica,
    apu.dt_entrada_unidade,
	apu.nr_seq_unid_ant,
	apu.nr_sequencia nr_seq_pat_unid_atual,
	apu.cd_setor_atendimento
  from 	atendimento_paciente ap, 
		atend_paciente_unidade apu
  where trunc(ap.dt_entrada) = trunc(clock_timestamp() - interval '1 days') 
  and ap.nr_atendimento = apu.nr_atendimento
  and apu.cd_setor_atendimento = (
    SELECT max(rep.cd_ward)
    from agreg_main_daily_reports rep
    where rep.nr_sequencia = nr_seq_daily_report_p
    and rep.cd_estabelecimento = cd_estabelecimento_p);

BEGIN

	-- obter setor de atendimento
	select max(cd_ward)
	into STRICT cd_ward_w
	from agreg_main_daily_reports
	where nr_sequencia = nr_seq_daily_report_p
	and cd_estabelecimento = cd_estabelecimento_p;

	select count(*)
	into STRICT ie_exist_w
	from agreg_change_dep_room
	where trunc(dt_target) = trunc(clock_timestamp()) 
	and cd_ward = cd_ward_w;

	if (ie_exist_w > 0) then
	delete from agreg_change_dep_room
	where trunc(dt_target) = trunc(clock_timestamp())
	and cd_ward = cd_ward_w;
	end if;

	cd_department_w := obter_departamento_setor(cd_ward_w);

	for c01_w in c01 loop

		select 	nextval('agreg_change_dep_room_seq')
		into STRICT	nr_seq_agreg_change_w
		;
		
		select	coalesce(max('7'), null),
				max(apu.cd_departamento),
				max(apu.cd_setor_atendimento),
				max(apu.cd_unidade_basica)
		into STRICT	ie_classification_w,
				cd_departamento_ant_w,
				cd_setor_atend_ant_w,
				cd_unid_basica_ant_w
		from	atend_paciente_unidade apu
		where	apu.nr_atendimento = c01_w.nr_atendimento
		and		trunc(apu.dt_entrada_unidade) = trunc(clock_timestamp())
		and		apu.nr_seq_interno = (	SELECT	max(x.nr_seq_interno)
										from	atend_paciente_unidade x
										where	x.nr_atendimento = c01_w.nr_atendimento
										and		x.cd_departamento <> cd_department_w);
		
		if (coalesce(ie_classification_w::text, '') = '') then
			select	max('8'),
					max(apu.cd_departamento),
					max(apu.cd_setor_atendimento),
					max(apu.cd_unidade_basica)
			into STRICT	ie_classification_w,
					cd_departamento_ant_w,
					cd_setor_atend_ant_w,
					cd_unid_basica_ant_w
			from	atend_paciente_unidade apu
			where	apu.nr_atendimento = c01_w.nr_atendimento
			and		trunc(apu.dt_entrada_unidade) = trunc(clock_timestamp())
			and		apu.nr_seq_interno = (	SELECT	max(x.nr_seq_interno)
											from	atend_paciente_unidade x
											where	x.nr_atendimento = c01_w.nr_atendimento
											and		x.cd_unidade_basica <> c01_w.cd_unidade_basica);
		end if;
	if (IE_CLASSIFICATION_W IS NOT NULL AND IE_CLASSIFICATION_W::text <> '') then
		insert into agreg_change_dep_room(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_main_daily_rep,
			dt_target,
			ie_classification,
			cd_patient,
			qt_age,
			ie_gender,
			dt_change_dep_room,
			cd_department,
			cd_ward,
			cd_room,
			cd_previous_department,
			cd_previous_ward,
			cd_previous_room,
			ie_main_flag
		) values (
			nr_seq_agreg_change_w,
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_daily_report_p,
			clock_timestamp(),
			ie_classification_w,
			c01_w.cd_pessoa_fisica,
			c01_w.nr_idade,
			c01_w.ie_sexo,
			c01_w.dt_saida_unidade,
			cd_department_w,
			cd_ward_w,
			c01_w.cd_unidade_basica,
			cd_departamento_ant_w,
			cd_setor_atend_ant_w,
			cd_unid_basica_ant_w,
			ie_main_flag_p
		);
		end if;
	end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aggregation_proc_managem_pck.gerar_agreg_change_dep_room ( nr_seq_daily_report_p agreg_main_daily_reports.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, ie_main_flag_p bigint) FROM PUBLIC;
