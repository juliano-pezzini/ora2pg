-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE aggregation_proc_managem_pck.gerar_daily_report ( CD_ESTABELECIMENTO_P bigint, NM_USUARIO_P text) AS $body$
DECLARE


CD_WARD_W SETOR_ATENDIMENTO.CD_SETOR_ATENDIMENTO%TYPE;
NR_SEQ_DAILY_REPORT_W AGREG_MAIN_DAILY_REPORTS.NR_SEQUENCIA%type;
NR_SEQ_DAILY_REPORT_OPS_W AGREG_MAIN_DAILY_REPORTS.NR_SEQUENCIA%type;
C01 CURSOR FOR

  SELECT B.CD_SETOR_ATENDIMENTO
  FROM ATENDIMENTO_PACIENTE A,
    ATEND_PACIENTE_UNIDADE B
  WHERE TRUNC(B.DT_ENTRADA_UNIDADE) = TRUNC(clock_timestamp() - interval '1 days')
  AND A.CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P
  AND A.NR_ATENDIMENTO = B.NR_ATENDIMENTO
  GROUP BY B.CD_SETOR_ATENDIMENTO;


BEGIN
    OPEN C01;
      LOOP
        FETCH C01 INTO
          CD_WARD_W;
        EXIT WHEN NOT FOUND; /* apply on C01 */

        SELECT nextval('agreg_main_daily_reports_seq')
          INTO STRICT NR_SEQ_DAILY_REPORT_W
;
		
		SELECT nextval('agreg_main_daily_reports_seq')
          INTO STRICT NR_SEQ_DAILY_REPORT_OPS_W
;
		
		

          BEGIN

            IF (CD_ESTABELECIMENTO_P > 0) THEN
			   INSERT INTO AGREG_MAIN_DAILY_REPORTS(
                NR_SEQUENCIA,
                DT_ATUALIZACAO,
                NM_USUARIO,
                NM_USUARIO_NREC,
                DT_ATUALIZACAO_NREC,
                CD_ESTABELECIMENTO,
                DT_TARGET,
                CD_AGGREGATION,
                CD_DEPARTMENT,
                CD_WARD,
                IE_REPORT_TYPE)
                VALUES (
                NR_SEQ_DAILY_REPORT_W,
                clock_timestamp(),
                NM_USUARIO_P,
                NM_USUARIO_P,
                clock_timestamp(),
                CD_ESTABELECIMENTO_P,
                clock_timestamp(),
                0,
                NULL,
                CD_WARD_W,
                1 -- verificar
              );
			   INSERT INTO AGREG_MAIN_DAILY_REPORTS(
				NR_SEQUENCIA,
                DT_ATUALIZACAO,
                NM_USUARIO,
                NM_USUARIO_NREC,
                DT_ATUALIZACAO_NREC,
                CD_ESTABELECIMENTO,
                DT_TARGET,
                CD_AGGREGATION,
                CD_DEPARTMENT,
                CD_WARD,
                IE_REPORT_TYPE)
                VALUES (
                NR_SEQ_DAILY_REPORT_OPS_W,
                clock_timestamp(),
                NM_USUARIO_P,
                NM_USUARIO_P,
                clock_timestamp(),
                CD_ESTABELECIMENTO_P,
                clock_timestamp(),
                0,
                NULL,
                CD_WARD_W,
                4 -- verificar
              );
			
            END IF;

            CALL aggregation_proc_managem_pck.gerar_depart_man_daily(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P, 0,nm_usuario_p);
            CALL aggregation_proc_managem_pck.gerar_number_patient_dep(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P, 0,nm_usuario_p);
            CALL aggregation_proc_managem_pck.gerar_agreg_hosp_transfer_in(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P, 0,nm_usuario_p);
            CALL aggregation_proc_managem_pck.gerar_agreg_disch_transfer_out(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P, 0,nm_usuario_p);
            --GERAR_AGREG_HOSP_TEMP_NIGHT(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P, 0);
            CALL aggregation_proc_managem_pck.gerar_agreg_change_dep_room(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P,nm_usuario_p,0);
		    CALL aggregation_proc_managem_pck.gerar_operation_room_daily(NR_SEQ_DAILY_REPORT_OPS_W, CD_ESTABELECIMENTO_P, 0,nm_usuario_p);
		    CALL aggregation_proc_managem_pck.gerar_outpatient_data_daily(NR_SEQ_DAILY_REPORT_W, CD_ESTABELECIMENTO_P, 0,nm_usuario_p);
            CALL aggregation_proc_managem_pck.gerar_agreg_surgery_info_daily(nr_seq_daily_report_w, cd_estabelecimento_p, 0, nm_usuario_p);
            CALL aggregation_proc_managem_pck.gerar_agreg_patient_info_daily(nr_seq_daily_report_w, cd_estabelecimento_p, 0, nm_usuario_p);
            CALL aggregation_proc_managem_pck.gerar_agr_hosp_tmp_nigth_daily(nr_seq_daily_report_w, cd_estabelecimento_p, 0, nm_usuario_p);
		  END;
      END LOOP;
    CLOSE C01;
  if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
    commit;
  end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aggregation_proc_managem_pck.gerar_daily_report ( CD_ESTABELECIMENTO_P bigint, NM_USUARIO_P text) FROM PUBLIC;
