-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE aggregation_proc_managem_pck.gerar_agreg_severe_illnesses (NR_SEQ_DAILY_REPORT_P bigint, CD_ESTABELECIMENTO_P bigint, IE_MAIN_FLAG_P bigint) AS $body$
DECLARE


CD_WARD_W                   bigint;
NR_ATENDIMENTO_W            ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%TYPE;
CD_PATIENT_W                ATENDIMENTO_PACIENTE.CD_PESSOA_FISICA%TYPE;
QT_AGE_W                    bigint;
IE_GENDER_W                 varchar(10);
IE_CLASSIFICATION_W         varchar(15);
CD_ROOM_W                   ATEND_PACIENTE_UNIDADE.CD_UNIDADE_BASICA%TYPE;
CD_MAIN_DIAGNOSIS_W		  	DIAGNOSTICO_DOENCA.CD_DOENCA%TYPE; -- 
DS_STATUS_W				  	DIAGNOSTICO_DOENCA.IE_STATUS_DIAG%TYPE;
IE_EXIST_W                  bigint;

C01 CURSOR FOR
	SELECT
		AP.NR_ATENDIMENTO,
		AP.CD_PESSOA_FISICA, 
		OBTER_IDADE_PF(AP.CD_PESSOA_FISICA, clock_timestamp(), 'A'),
		OBTER_SEXO_PF(AP.CD_PESSOA_FISICA, 'D'),
		APU.CD_UNIDADE_BASICA
	FROM 
		ATENDIMENTO_PACIENTE AP, 
		ATEND_PACIENTE_UNIDADE APU
	WHERE 
		TRUNC(AP.DT_ENTRADA) = TRUNC(clock_timestamp() - interval '1 days') 
		AND AP.NR_ATENDIMENTO = APU.NR_ATENDIMENTO
		AND APU.CD_SETOR_ATENDIMENTO = (
			SELECT MAX(CD_WARD)
			FROM AGREG_MAIN_DAILY_REPORTS
			WHERE NR_SEQUENCIA = NR_SEQ_DAILY_REPORT_P
				AND CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P);
	
C02 CURSOR FOR 
	SELECT 
		IE_CLASSIFICACAO_DOENCA,
		CD_DOENCA,
		IE_STATUS_DIAG
	FROM	DIAGNOSTICO_DOENCA DD
	WHERE	DD.NR_ATENDIMENTO   = NR_ATENDIMENTO_W
	AND	TRUNC(DD.DT_DIAGNOSTICO) = TRUNC(clock_timestamp());


BEGIN
	-- OBTER SETOR DE ATENDIMENTO
	SELECT MAX(CD_WARD)
	INTO STRICT CD_WARD_W
	FROM AGREG_MAIN_DAILY_REPORTS
	WHERE NR_SEQUENCIA = NR_SEQ_DAILY_REPORT_P
	AND CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P;

	--VALIDA SE JA FOI GERADO O RELATORIO NO DIA, CASO JA EXISTIR O RELATORIO, ELE DEVERA SER DELETADO PARA QUE SEJA GERADO O NOVO RELATORIO
	SELECT COUNT(*)
	INTO STRICT IE_EXIST_W
	FROM AGREG_SEVERE_ILLNESSES
	WHERE TRUNC(DT_TARGET) = TRUNC(clock_timestamp()) 
	AND CD_WARD = CD_WARD_W;

	IF (IE_EXIST_W > 0) THEN
		DELETE from AGREG_SEVERE_ILLNESSES
		WHERE TRUNC(DT_TARGET) = TRUNC(clock_timestamp())
		AND CD_WARD = CD_WARD_W;
	END IF;

	OPEN C01;
		LOOP
			FETCH C01 INTO
			NR_ATENDIMENTO_W,
			CD_PATIENT_W,
			QT_AGE_W,
			IE_GENDER_W,
			CD_ROOM_W;
			EXIT WHEN NOT FOUND; /* apply on C01 */

			-- Busca IE_CLASSIFICATION_W, DS_STATUS e CD_MAIN_DIAGNOSIS_W na tabela DIAGNOSTICO_DOENCA 
			OPEN C02;
				LOOP
					FETCH C02 INTO
					IE_CLASSIFICATION_W,
					CD_MAIN_DIAGNOSIS_W,
					DS_STATUS_W;
					EXIT WHEN NOT FOUND; /* apply on C02 */

					INSERT INTO AGREG_SEVERE_ILLNESSES(
						NR_SEQUENCIA,
						DT_ATUALIZACAO,
						NM_USUARIO,
						NM_USUARIO_NREC,
						DT_ATUALIZACAO_NREC,
						NR_SEQ_MAIN_DAILY_REP,
						DT_TARGET,
						CD_WARD,
						IE_CLASSIFICATION,
						CD_PATIENT,
						QT_AGE,
						IE_GENDER,
						CD_ROOM,
						CD_MAIN_DIAGNOSIS,
						DS_STATUS,
						IE_MAIN_FLAG)
					VALUES (
						nextval('agreg_disch_transfer_out_seq'),
						clock_timestamp(),
						WHEB_USUARIO_PCK.GET_NM_USUARIO,
						WHEB_USUARIO_PCK.GET_NM_USUARIO,
						clock_timestamp(),
						NR_SEQ_DAILY_REPORT_P,
						clock_timestamp(),
						CD_WARD_W,
						IE_CLASSIFICATION_W,
						CD_PATIENT_W,
						QT_AGE_W,
						IE_GENDER_W,
						CD_ROOM_W,
						CD_MAIN_DIAGNOSIS_W,
						DS_STATUS_W,
						IE_MAIN_FLAG_P
					);
				END LOOP;
			CLOSE C02;
		END LOOP;
	CLOSE C01;
	
	COMMIT;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aggregation_proc_managem_pck.gerar_agreg_severe_illnesses (NR_SEQ_DAILY_REPORT_P bigint, CD_ESTABELECIMENTO_P bigint, IE_MAIN_FLAG_P bigint) FROM PUBLIC;
