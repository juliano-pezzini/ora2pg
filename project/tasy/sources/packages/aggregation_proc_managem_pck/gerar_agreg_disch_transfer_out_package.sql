-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE aggregation_proc_managem_pck.gerar_agreg_disch_transfer_out (NR_SEQ_DAILY_REPORT_P bigint, CD_ESTABELECIMENTO_P bigint, IE_MAIN_FLAG_P bigint,nm_usuario_p AGREG_NUMBER_PATIENT.NM_USUARIO%TYPE) AS $body$
DECLARE


  CD_WARD_W                   bigint;
  NR_ATENDIMENTO_W            ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%TYPE;
  CD_PATIENT_W                ATENDIMENTO_PACIENTE.CD_PESSOA_FISICA%TYPE;
  QT_AGE_W                    bigint;
  IE_GENDER_W                 varchar(10);
  CD_ATTENDING_PHYSICIAN_W    ATENDIMENTO_PACIENTE.CD_MEDICO_RESP%TYPE;
  DT_ENTRADA_W                ATENDIMENTO_PACIENTE.DT_ENTRADA%TYPE;
  DT_DISCHARGE_TRANSFER_W     ATENDIMENTO_PACIENTE.DT_ALTA%TYPE;
  CD_DISCHARGE_REASON_W       ATENDIMENTO_PACIENTE.CD_MOTIVO_ALTA%TYPE;
  IE_CLASSIFICATION_W         ATENDIMENTO_PACIENTE.IE_TIPO_ATENDIMENTO%TYPE;
  COUNT_W                     bigint;
  CD_ROOM_W                   ATEND_PACIENTE_UNIDADE.CD_UNIDADE_BASICA%TYPE;
  DT_SAIDA_UNIDADE_W          ATEND_PACIENTE_UNIDADE.DT_SAIDA_UNIDADE%TYPE;
  CD_SETOR_ATENDIMENTO_AUX_W  ATEND_PACIENTE_UNIDADE.CD_SETOR_ATENDIMENTO%TYPE;
  CD_DEPARTMENT_W             DEPARTAMENTO_SETOR.CD_DEPARTAMENTO%TYPE;
  CD_SETOR_ATENDIMENTO_W      ATEND_PACIENTE_UNIDADE.CD_SETOR_ATENDIMENTO%TYPE;
  DT_ENTRADA_UNIDADE_W        ATEND_PACIENTE_UNIDADE.DT_ENTRADA_UNIDADE%TYPE;
  IE_EXIST_W                  bigint;

C01 CURSOR FOR
  SELECT  
    AP.NR_ATENDIMENTO,
    AP.CD_PESSOA_FISICA, 
    OBTER_IDADE_PF(AP.CD_PESSOA_FISICA, clock_timestamp(), 'A'),
    OBTER_SEXO_PF(AP.CD_PESSOA_FISICA, 'D'),
    AP.CD_MEDICO_RESP,
    AP.DT_ENTRADA,
    AP.DT_ALTA,
    AP.CD_MOTIVO_ALTA,
    APU.DT_SAIDA_UNIDADE,
    APU.CD_UNIDADE_BASICA,
    APU.DT_ENTRADA_UNIDADE
  FROM ATENDIMENTO_PACIENTE AP, ATEND_PACIENTE_UNIDADE APU
  WHERE TRUNC(AP.DT_ENTRADA) = TRUNC(clock_timestamp() - interval '1 days') 
  AND AP.NR_ATENDIMENTO = APU.NR_ATENDIMENTO
  AND APU.CD_SETOR_ATENDIMENTO = (
    SELECT MAX(CD_WARD)
      FROM AGREG_MAIN_DAILY_REPORTS
      WHERE NR_SEQUENCIA = NR_SEQ_DAILY_REPORT_P
      AND CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P);


BEGIN

  -- OBTER SETOR DE ATENDIMENTO
  SELECT MAX(CD_WARD)
    INTO STRICT CD_WARD_W
  FROM AGREG_MAIN_DAILY_REPORTS
  WHERE NR_SEQUENCIA = NR_SEQ_DAILY_REPORT_P
  AND CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P;

  CD_DEPARTMENT_W := OBTER_DEPARTAMENTO_SETOR(CD_WARD_W);

  --VALIDA SE JA FOI GERADO O RELATORIO NO DIA, CASO JA EXISTIR O RELATORIO, ELE DEVERA SER DELETADO PARA QUE SEJA GERADO O NOVO RELATORIO
  SELECT COUNT(*)
    INTO STRICT IE_EXIST_W
  FROM AGREG_DISCH_TRANSFER_OUT
  WHERE TRUNC(DT_TARGET) = TRUNC(clock_timestamp()) 
  AND CD_WARD = CD_WARD_W;

  IF (IE_EXIST_W > 0) THEN
    DELETE from AGREG_DISCH_TRANSFER_OUT
    WHERE TRUNC(DT_TARGET) = TRUNC(clock_timestamp())
    AND CD_WARD = CD_WARD_W;
  END IF;

  BEGIN
    OPEN C01;
      LOOP
        FETCH C01 INTO
          NR_ATENDIMENTO_W,
          CD_PATIENT_W,
          QT_AGE_W,
          IE_GENDER_W,
          CD_ATTENDING_PHYSICIAN_W,
          DT_ENTRADA_W,
          DT_DISCHARGE_TRANSFER_W,
          CD_DISCHARGE_REASON_W,
          DT_SAIDA_UNIDADE_W,
          CD_ROOM_W,
          DT_ENTRADA_UNIDADE_W;
        EXIT WHEN NOT FOUND; /* apply on C01 */

        IF ((DT_DISCHARGE_TRANSFER_W IS NOT NULL AND DT_DISCHARGE_TRANSFER_W::text <> '') AND CD_DISCHARGE_REASON_W > 0) THEN
            IE_CLASSIFICATION_W := 3; --DISCHARGE
        END IF;

        -- VERIFICA SE TEM SETOR POSTERIOR
          SELECT	coalesce(MAX(APU.CD_SETOR_ATENDIMENTO), CD_SETOR_ATENDIMENTO_W)
          INTO STRICT	CD_SETOR_ATENDIMENTO_AUX_W
          FROM	ATEND_PACIENTE_UNIDADE APU
          WHERE	APU.NR_ATENDIMENTO   = NR_ATENDIMENTO_W
          AND	APU.DT_ENTRADA_UNIDADE =
            (SELECT	MIN(APU.DT_ENTRADA_UNIDADE)
              FROM	SETOR_ATENDIMENTO SA, ATEND_PACIENTE_UNIDADE APU
              WHERE	APU.NR_ATENDIMENTO = NR_ATENDIMENTO_W
              AND	APU.DT_ENTRADA_UNIDADE   > DT_ENTRADA_UNIDADE_W
              AND	APU.DT_ENTRADA_UNIDADE  <= clock_timestamp() - interval '1 days'
              AND	APU.CD_SETOR_ATENDIMENTO = SA.CD_SETOR_ATENDIMENTO);

          IF (CD_WARD_W <> CD_SETOR_ATENDIMENTO_AUX_W) THEN
              IE_CLASSIFICATION_W := 4; --TRANSFER
              DT_DISCHARGE_TRANSFER_W := DT_SAIDA_UNIDADE_W;
          END IF;
		
		
		if (IE_CLASSIFICATION_W IS NOT NULL AND IE_CLASSIFICATION_W::text <> '' AND CD_DEPARTMENT_W IS NOT NULL AND CD_DEPARTMENT_W::text <> '') then
          INSERT INTO AGREG_DISCH_TRANSFER_OUT(
            NR_SEQUENCIA,
            DT_ATUALIZACAO,
            NM_USUARIO,
            NM_USUARIO_NREC,
            DT_ATUALIZACAO_NREC,
            NR_SEQ_MAIN_DAILY_REP,
            DT_TARGET,
            CD_WARD,
            IE_CLASSIFICATION,
            CD_PATIENT,
            QT_AGE,
            IE_GENDER,
            DT_DISCHARGE_TRANSFER,
            CD_DEPARTMENT,
            CD_ROOM,
            CD_ATTENDING_PHYSICIAN,
            CD_DISCHARGE_REASON,
            IE_MAIN_FLAG)
              VALUES (
                nextval('agreg_disch_transfer_out_seq'),
                clock_timestamp(),
                nm_usuario_p,
                nm_usuario_p,
                clock_timestamp(),
                NR_SEQ_DAILY_REPORT_P,
                clock_timestamp(),
                CD_WARD_W,
                IE_CLASSIFICATION_W,
                CD_PATIENT_W,
                QT_AGE_W,
                IE_GENDER_W,
                DT_DISCHARGE_TRANSFER_W,
                CD_DEPARTMENT_W,
                CD_ROOM_W,
                CD_ATTENDING_PHYSICIAN_W,
                CD_DISCHARGE_REASON_W,
                IE_MAIN_FLAG_P);
			end if;
      END LOOP;
    CLOSE C01;
  END;
COMMIT;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE aggregation_proc_managem_pck.gerar_agreg_disch_transfer_out (NR_SEQ_DAILY_REPORT_P bigint, CD_ESTABELECIMENTO_P bigint, IE_MAIN_FLAG_P bigint,nm_usuario_p AGREG_NUMBER_PATIENT.NM_USUARIO%TYPE) FROM PUBLIC;
