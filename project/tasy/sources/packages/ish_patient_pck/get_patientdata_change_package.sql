-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ish_patient_pck.get_patientdata_change ( nr_seq_fila_p bigint) RETURNS SETOF T_PATIENTDATA_CHANGE AS $body$
DECLARE


nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
cd_medico_referido_w 		atendimento_paciente.cd_medico_referido%type;

nm_paroquia_w			pessoa_fisica_paroquia.nm_paroquia%type;
cd_pessoa_fisica_w		varchar(10);
ds_family_name_w		varchar(255);
ds_given_name_w			varchar(255);
ds_component_name_1_w		varchar(255);
ds_component_name_3_w		varchar(255);
ds_forma_tratamento_w		varchar(255);
nr_seq_idioma_w			varchar(255);
ds_profissao_w			varchar(255);

nr_seq_tipo_compl_adic_w	bigint;

dt_geral_w			varchar(255);
dt_inicio_trabalho_w		pessoa_fisica_empregador.dt_inicio_trabalho%type;
pessoa_fisica_empregador_w	pessoa_fisica_empregador%rowtype;

dt_obito_w			varchar(255);
ie_classif_w			varchar(15);
employerid_w			varchar(80);
nm_localidade_nasc_w		cep_loc.nm_localidade%type;
cd_cep_w			cep_loc.cd_cep%type;

r_patientdata_change_w		r_patientdata_change;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
famphys_medic_w			bigint;
famrefphys_medic_w		bigint;
qtd_case_incompleto		bigint;

c01 CURSOR FOR
SELECT	a.cd_pessoa_fisica,
	a.dt_nascimento,
	a.ie_sexo,
	a.ds_apelido,
	a.nr_seq_forma_trat,
	a.ie_estado_civil,
	a.cd_religiao,
	a.cd_nacionalidade,
	a.ie_doador,
	a.dt_obito,
	a.cd_cid_direta,
	a.nr_seq_cor_pele,
	a.cd_rfc,
	a.dt_atualizacao_nrec,
	a.nm_usuario_nrec,
	a.nr_seq_person_name,
	a.dt_atualizacao,
	a.nr_seq_nome_solteiro,
	a.nr_cep_cidade_nasc,
	coalesce(a.nr_prontuario, b.nr_prontuario) nr_prontuario
FROM pessoa_fisica a
LEFT OUTER JOIN pessoa_fisica_pront_estab b ON (a.cd_estabelecimento = b.cd_estabelecimento))
, (a
LEFT OUTER JOIN pessoa_fisica_pront_estab b ON ((a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = nr_seq_documento_w;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	a.nr_seq_classif
from	pessoa_classif a
where	a.cd_pessoa_fisica = c01_w.cd_pessoa_fisica
and	coalesce(a.dt_final_vigencia::text, '') = ''
and	a.dt_inicio_vigencia < clock_timestamp();

c02_w	c02%rowtype;

c03 CURSOR FOR
SELECT	nr_sequencia,
	cd_pessoa_fisica,
	ie_tipo_complemento,
	nr_seq_tipo_compl_adic,
	nm_contato,
	nr_telefone,
	nr_ramal,
	ds_fax,
	nr_ddd_fax,
	nr_seq_pais,
	sg_estado,
	cd_cep,
	ds_municipio,
	ds_bairro,
	ds_endereco,
	ds_compl_end,
	ds_complemento,
	ds_email,
	nm_usuario,
	ds_fonetica,
	nr_seq_parentesco,
	cd_pessoa_fisica_ref
from	compl_pessoa_fisica a
where	a.cd_pessoa_fisica = c01_w.cd_pessoa_fisica
and	coalesce(a.ie_tipo_complemento, '0') <> '2'
order by nr_sequencia;

c03_w	c03%rowtype;

c04 CURSOR FOR
SELECT	a.qt_peso,
	a.qt_altura_cm,
	b.cd_medico,
	b.nr_seq_tipo_medico
FROM pessoa_fisica a
LEFT OUTER JOIN pf_medico_externo b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = c01_w.cd_pessoa_fisica and (coalesce(b.dt_fim_vigencia::text, '') = '' or (trunc(b.dt_fim_vigencia) > trunc(clock_timestamp()))) order by b.dt_atualizacao desc;


c04_w	c04%rowtype;


BEGIN
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_sistema,
	b.nr_seq_projeto_xml,
	b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_seq_fila_p;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);
reg_integracao_w.ie_somente_alterados		:= 'S';
reg_integracao_w.nm_elemento			:= 'PatientData';
open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';

	intpd_processar_atrib_envio(reg_integracao_w, 'NR_PRONTUARIO','extpatid', 'N', c01_w.nr_prontuario, 'N', r_patientdata_change_w.extpatid);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_PRONTUARIO','extpatidx', 'S', c01_w.nr_prontuario, 'N', r_patientdata_change_w.extpatidx);

	intpd_processar_atrib_envio(reg_integracao_w, 'CD_NACIONALIDADE','birthctry', 'N', c01_w.cd_nacionalidade, 'S', r_patientdata_change_w.birthctry);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_NACIONALIDADE','birthctryx', 'S', c01_w.cd_nacionalidade, 'N', r_patientdata_change_w.birthctryx);

	begin
	select	substr(ds_family_name,1,30),
		substr(ds_given_name,1,30),
		substr(ds_component_name_1,1,15),
		substr(ds_component_name_3,1,15)
	into STRICT	ds_family_name_w,
		ds_given_name_w,
		ds_component_name_1_w,
		ds_component_name_3_w
	from	person_name
	where	nr_sequencia = c01_w.nr_seq_person_name;
	exception
	when others then
		begin
		ds_family_name_w	:=	null;
		ds_given_name_w		:=	null;
		ds_component_name_1_w	:=	null;
		ds_component_name_3_w	:=	null;
		end;
	end;

	reg_integracao_w.nm_tabela 	:= 'PERSON_NAME';
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME','lastnamepat', 'N', ds_family_name_w, 'N', r_patientdata_change_w.lastnamepat);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME','lastnamepatx', 'S', ds_family_name_w, 'N', r_patientdata_change_w.lastnamepatx);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME','frstnamepat', 'N', ds_given_name_w, 'N', r_patientdata_change_w.frstnamepat);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME','frstnamepatx', 'S', ds_given_name_w, 'N', r_patientdata_change_w.frstnamepatx);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_COMPONENT_NAME_1','prefix', 'N', ds_component_name_1_w, 'N', r_patientdata_change_w.prefix);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_COMPONENT_NAME_1','prefixx', 'S', ds_component_name_1_w, 'N', r_patientdata_change_w.prefixx);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_COMPONENT_NAME_3','affix', 'N', ds_component_name_3_w, 'N', r_patientdata_change_w.affix);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_COMPONENT_NAME_3','affixx', 'S', ds_component_name_3_w, 'N', r_patientdata_change_w.affixx);

	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_CEP_CIDADE_NASC','birthplace', 'N', c01_w.nr_cep_cidade_nasc, 'N', cd_cep_w);

	begin
	select	nm_localidade
	into STRICT	nm_localidade_nasc_w
	from	cep_localidade_v
	where	cd_cep	=	cd_cep_w;
	exception
	when others then
		nm_localidade_nasc_w	:=	null;
	end;

	r_patientdata_change_w.birthplace	:= nm_localidade_nasc_w;
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_CEP_CIDADE_NASC','birthplacex', 'S', c01_w.nr_cep_cidade_nasc, 'N', r_patientdata_change_w.birthplacex);
	--r_patientdata_change_w.nonresidentx	:= 	'X';


	--r_patientdata_change_w.doctypex		:= 	'X';

	--r_patientdata_change_w.docnox		:= 	'X';

	--r_patientdata_change_w.empnamex		:= 	'X';

	--r_patientdata_change_w.refphys2x		:= 	'X';

	--r_patientdata_change_w.contactp1extidx	:= 	'X';

	--r_patientdata_change_w.contactp2extidx 	:= 	'X';


	--r_patientdata_change_w.birthname	:=	substr(c01_w.nr_seq_nome_solteiro,1,30);

	--r_patientdata_change_w.birthnamex := 'X';


	intpd_processar_atrib_envio(reg_integracao_w, 'DT_NASCIMENTO','dob', 'N', c01_w.dt_nascimento, 'N', dt_geral_w);
	r_patientdata_change_w.dob	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_NASCIMENTO','dobx', 'S', c01_w.dt_nascimento, 'N', r_patientdata_change_w.dobx);

--	r_patientdata_change_w.birthctryiso		varchar2(2),

	intpd_processar_atrib_envio(reg_integracao_w, 'IE_SEXO','sexext', 'N', c01_w.ie_sexo, 'S', r_patientdata_change_w.sexext);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_SEXO','sexextx', 'S', c01_w.ie_sexo, 'N', r_patientdata_change_w.sexextx);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_APELIDO','pseudo', 'N', c01_w.ds_apelido, 'N', r_patientdata_change_w.pseudo);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_APELIDO','pseudox', 'S', c01_w.ds_apelido, 'N', r_patientdata_change_w.pseudox);
--	r_patientdata_change_w.formaddrsstxt		varchar2(5),


	begin
	select	substr(ds_forma_tratamento,1,15)
	into STRICT	ds_forma_tratamento_w
	from	pf_forma_tratamento
	where	nr_sequencia = c01_w.nr_seq_forma_trat;
	exception
	when others then
		ds_forma_tratamento_w	:=	null;
	end;

	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';	
	r_patientdata_change_w.title	:= ds_forma_tratamento_w;
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_FORMA_TRAT','titlex', 'S', c01_w.nr_seq_forma_trat, 'N', r_patientdata_change_w.titlex);

--	r_patientdata_change_w.pataddr2no		varchar2(10),

	intpd_processar_atrib_envio(reg_integracao_w, 'IE_ESTADO_CIVIL','marstattext', 'N', c01_w.ie_estado_civil, 'S', r_patientdata_change_w.marstattext);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_ESTADO_CIVIL','marstattextx', 'S', c01_w.ie_estado_civil, 'N', r_patientdata_change_w.marstattextx);

	intpd_processar_atrib_envio(reg_integracao_w, 'CD_RELIGIAO','reldenomstxt', 'N', c01_w.cd_religiao, 'S', r_patientdata_change_w.reldenomstxt);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_RELIGIAO','reldenomstxtx', 'S', c01_w.cd_religiao, 'N', r_patientdata_change_w.reldenomstxtx);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_NACIONALIDADE','nationality', 'N', c01_w.cd_nacionalidade, 'S', r_patientdata_change_w.nationality);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_NACIONALIDADE','nationalityx', 'S', c01_w.cd_nacionalidade, 'N', r_patientdata_change_w.nationalityx);

	begin
	select	nr_seq_idioma
	into STRICT	nr_seq_idioma_w
	from	pessoa_fisica_idioma
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica
	and	ie_fluencia = 'A'  LIMIT 1;
	exception
	when others then
		nr_seq_idioma_w	:=	null;
	end;

	reg_integracao_w.ie_somente_alterados	:= 'N';
	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA_IDIOMA';
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_IDIOMA','patlangu', 'N', nr_seq_idioma_w, 'S', r_patientdata_change_w.patlangu);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_IDIOMA','patlangux', 'S', 'X', 'N', r_patientdata_change_w.patlangux);
	reg_integracao_w.ie_somente_alterados	:= 'S';

	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';

--	r_patientdata_change_w.patlanguiso		:=	c01_w.cd_pessoa_fisica;


	if (c01_w.ie_doador = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DOADOR','organdonor', 'N', 'X', 'N', r_patientdata_change_w.organdonor);
	else
		r_patientdata_change_w.organdonor	:= null;
		--intpd_processar_atrib_envio(reg_integracao_w, 'IE_DOADOR','organdonor', 'N', null, 'N', r_patientdata_change_w.organdonor);

	end if;
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_DOADOR','organdonorx', 'S', c01_w.ie_doador, 'N', r_patientdata_change_w.organdonorx);

	reg_integracao_w.nm_tabela		:= 'PESSOA_CLASSIF';
	reg_integracao_w.ie_somente_alterados	:= 'N';

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		reg_integracao_w.nm_tabela 	:= 'PESSOA_CLASSIF';

		ie_classif_w	:=	substr(intpd_conv('CLASSIF_PESSOA', 'NR_SEQUENCIA', c02_w.nr_seq_classif, nr_seq_regra_w, ie_conversao_w, 'E'), 1, 15);

		if (ie_classif_w = 'VIP') then
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_CLASSIF', 'vip', 'N', 'X', 'N', r_patientdata_change_w.vip);
		elsif (ie_classif_w = 'PUBLISTBLOCK') then
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_CLASSIF', 'publistblock', 'N', 'X', 'N', r_patientdata_change_w.publistblock);
		elsif (ie_classif_w = 'RELIGLIST') then
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_CLASSIF', 'religlist', 'N', 'X', 'N', r_patientdata_change_w.religlist);
		end if;
		end;
	end loop;
	close c02;
	
	r_patientdata_change_w.vipx		:=	'X';
	r_patientdata_change_w.publistblockx	:=	'X';
	r_patientdata_change_w.religlistx	:=	'X';
	reg_integracao_w.ie_somente_alterados	:=	'S';
	
	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_OBITO','dtodeathfrom', 'N', c01_w.dt_obito, 'N', dt_obito_w);
	r_patientdata_change_w.dtodeathfrom	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	r_patientdata_change_w.tmodeathfrom	:= to_char(to_date(dt_geral_w),'hh24:mi:ss');

	intpd_processar_atrib_envio(reg_integracao_w, 'DT_OBITO','dtodeathfromx', 'S', c01_w.dt_obito, 'N', r_patientdata_change_w.dtodeathfromx);
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_OBITO','tmodeathfromx', 'S', c01_w.dt_obito, 'N', r_patientdata_change_w.tmodeathfromx);

	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_OBITO','dtodeathto', 'N', c01_w.dt_obito, 'N', dt_obito_w);
	r_patientdata_change_w.dtodeathto	:= to_char(to_date(dt_obito_w),'yyyy-mm-dd');
	r_patientdata_change_w.tmodeathto	:= to_char(to_date(dt_obito_w),'hh24:mi:ss');

	intpd_processar_atrib_envio(reg_integracao_w, 'DT_OBITO','dtodeathtox', 'S', c01_w.dt_obito, 'N', r_patientdata_change_w.dtodeathtox);
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_OBITO','tmodeathtox', 'S', c01_w.dt_obito, 'N', r_patientdata_change_w.tmodeathtox);

	intpd_processar_atrib_envio(reg_integracao_w, 'CD_CID_DIRETA','cofdeath', 'N', c01_w.cd_cid_direta, 'N', r_patientdata_change_w.cofdeath);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_CID_DIRETA','cofdeathx', 'S', c01_w.cd_cid_direta, 'N', r_patientdata_change_w.cofdeathx);

	reg_integracao_w.nm_tabela 	:= 'ATENDIMENTO_PACIENTE';
	begin
	select	ie_tipo_atendimento
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica
	and (ie_tipo_atendimento IS NOT NULL AND ie_tipo_atendimento::text <> '')  LIMIT 1;
	exception
	when others then
		ie_tipo_atendimento_w := null;
	end;

	if (ie_tipo_atendimento_w = 3) then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_ATENDIMENTO','emergadm', 'N', 'X', 'N', r_patientdata_change_w.emergadm);
	else
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_ATENDIMENTO','emergadm', 'N', null, 'N', r_patientdata_change_w.emergadm);
	end if;

	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_ATENDIMENTO','emergadm', 'N', 'X', 'N', r_patientdata_change_w.emergadmx);

	begin
		select	count(*)
		into STRICT	qtd_case_incompleto
		from	atendimento_paciente
		where	atendimento_paciente.cd_pessoa_fisica = c01_w.cd_pessoa_fisica
		and		atendimento_paciente.ie_inform_incompletas = 'S';
	exception when no_data_found then
		qtd_case_incompleto := 0;
	end;

	if (qtd_case_incompleto > 0) then
		r_patientdata_change_w.quickadm := 'X';
	else
		r_patientdata_change_w.quickadm := '';
	end if;

	--r_patientdata_change_w.nonresident	varchar2(1),

	--r_patientdata_change_w.inactive		varchar2(1),


	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA_PAROQUIA';
	begin
	select	nm_paroquia
	into STRICT	nm_paroquia_w
	from	pessoa_fisica_paroquia
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica
	and (nm_paroquia IS NOT NULL AND nm_paroquia::text <> '')  LIMIT 1;
	exception
	when others then
		nm_paroquia_w := null;
	end;

	reg_integracao_w.ie_somente_alterados	:= 'N';
	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA_PAROQUIA';
	intpd_processar_atrib_envio(reg_integracao_w, 'NM_PAROQUIA','parish', 'N', nm_paroquia_w, 'N', r_patientdata_change_w.parish);
	intpd_processar_atrib_envio(reg_integracao_w, 'NM_PAROQUIA','parishx', 'S', 'X', 'N', r_patientdata_change_w.parishx);
	reg_integracao_w.ie_somente_alterados	:= 'S';

	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_COR_PELE','race', 'N', c01_w.nr_seq_cor_pele, 'S', r_patientdata_change_w.race);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_COR_PELE','racex', 'S', c01_w.nr_seq_cor_pele, 'N', r_patientdata_change_w.racex);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_RFC','ssn', 'N', c01_w.cd_rfc, 'N', r_patientdata_change_w.ssn);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_RFC','ssnx', 'S', c01_w.cd_rfc, 'N', r_patientdata_change_w.ssnx);

--	r_patientdata_change_w.doctype		varchar2(2),

--	r_patientdata_change_w.docno		varchar2(15),

	
	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA_EMPREGADOR';
	
	begin
	select	*
	into STRICT    pessoa_fisica_empregador_w
	from    pessoa_fisica_empregador
	where   nr_sequencia =	(SELECT	max(nr_sequencia)
				from	pessoa_fisica_empregador
				where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica
				and	coalesce(dt_fim_trabalho::text, '') = '');
	exception
	when others then
		pessoa_fisica_empregador_w	:=	null;
	end;
					
	if (length(pessoa_fisica_empregador_w.ds_empresa_texto) > 0) then		
		r_patientdata_change_w.employerid	:=	null;
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC','employeridx', 'S', pessoa_fisica_empregador_w.cd_cgc, 'N', r_patientdata_change_w.employeridx);
		
		r_patientdata_change_w.empname		:=	pessoa_fisica_empregador_w.ds_empresa_texto;
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_EMPRESA_TEXTO','empnamex', 'S', pessoa_fisica_empregador_w.ds_empresa_texto, 'N', r_patientdata_change_w.empnamex);
	else
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC','employerid', 'N', pessoa_fisica_empregador_w.cd_cgc, 'N', employerid_w);
		
		if (length(employerid_w) > 0) then
			r_patientdata_change_w.employerid	:=	lpad(somente_numero(employerid_w), 10, 0);
		end if;
		
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC','employeridx', 'S', pessoa_fisica_empregador_w.cd_cgc, 'N', r_patientdata_change_w.employeridx);
		r_patientdata_change_w.empname		:=	substr(obter_nome_pf_pj(null, pessoa_fisica_empregador_w.cd_cgc),1,30);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC','empnamex', 'S', pessoa_fisica_empregador_w.cd_cgc, 'N', r_patientdata_change_w.empnamex);
	end if;	
	
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_INICIO_TRABALHO','employedsince', 'N', pessoa_fisica_empregador_w.dt_inicio_trabalho, 'N', dt_inicio_trabalho_w);
	r_patientdata_change_w.employedsince	:= to_char(dt_inicio_trabalho_w,'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_INICIO_TRABALHO','employedsincex', 'S', pessoa_fisica_empregador_w.dt_inicio_trabalho, 'N', r_patientdata_change_w.employedsincex);
		
	if (pessoa_fisica_empregador_w.cd_profissao IS NOT NULL AND pessoa_fisica_empregador_w.cd_profissao::text <> '') then
		begin
		select	substr(ds_profissao,1,25)
		into STRICT	ds_profissao_w
		from	profissao
		where	cd_profissao = pessoa_fisica_empregador_w.cd_profissao;
		exception
		when others then
			ds_profissao_w	:=	null;
		end;
		
		r_patientdata_change_w.occupation	:= ds_profissao_w;
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_PROFISSAO','occupationx', 'S', ds_profissao_w, 'N', r_patientdata_change_w.occupationx);
	else
		r_patientdata_change_w.occupation	:= pessoa_fisica_empregador_w.ds_profissao;
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_PROFISSAO','occupationx', 'S', ds_profissao_w, 'N', r_patientdata_change_w.occupationx);
	end if;

	reg_integracao_w.nm_tabela 	:= 'COMPL_PESSOA_FISICA';

	open c03;
	loop
	fetch c03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		reg_integracao_w.ie_somente_alterados		:= 'N';
		reg_integracao_w.ds_chave			:=	'CD_PESSOA_FISICA=' || c03_w.cd_pessoa_fisica || ';NR_SEQUENCIA=' || c03_w.nr_sequencia || ';';

		if (c03_w.ie_tipo_complemento = '1') then
			begin
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','pataddrno', 'N', c03_w.nr_sequencia, 'N', r_patientdata_change_w.pataddrno);
			end;
		elsif (coalesce(somente_numero(r_patientdata_change_w.contactp1addrno),0) = 0) then
			begin			
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','contactp1addrno', 'N', c03_w.nr_sequencia, 'N', r_patientdata_change_w.contactp1addrno);

			if (position(' ' in c03_w.nm_contato) > 0)	then
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp1fname', 'N', substr(substr(c03_w.nm_contato,1,position(' ' in c03_w.nm_contato)-1), 1, 30), 'N', r_patientdata_change_w.contactp1fname);
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp1lname', 'N', substr(substr(c03_w.nm_contato, position(' ' in c03_w.nm_contato)+1,255), 1, 30), 'N', r_patientdata_change_w.contactp1lname);
			else
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp1fname', 'N', substr(c03_w.nm_contato,1,30), 'N', r_patientdata_change_w.contactp1fname);
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp1lname', 'N', null, 'N', r_patientdata_change_w.contactp1lname);
			end if;

			if (c03_w.ie_tipo_complemento = 9) then
				intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_TIPO_COMPL_ADIC','contactp1relsh', 'N', c03_w.nr_seq_tipo_compl_adic, 'S', r_patientdata_change_w.contactp1relsh);				
			else
				intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_COMPLEMENTO','contactp1relsh', 'N', c03_w.ie_tipo_complemento, 'S', r_patientdata_change_w.contactp1relsh);				
			end if;

			intpd_processar_atrib_envio(reg_integracao_w, 'CD_PESSOA_FISICA_REF','contactp1extid', 'N', c03_w.cd_pessoa_fisica_ref, 'N', r_patientdata_change_w.contactp1extid);			
			end;
		elsif (coalesce(somente_numero(r_patientdata_change_w.contactp2addrno),0) = 0) then
			begin			
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','contactp2addrno', 'N', c03_w.nr_sequencia, 'N', r_patientdata_change_w.contactp2addrno);			

			if (position(' ' in c03_w.nm_contato) > 0)	then
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp2fname', 'N', substr(substr(c03_w.nm_contato,1,position(' ' in c03_w.nm_contato)-1), 1, 30), 'N', r_patientdata_change_w.contactp2fname);
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp2lname', 'N', substr(substr(c03_w.nm_contato, position(' ' in c03_w.nm_contato)+1, 255),1,30), 'N', r_patientdata_change_w.contactp2lname);
			else
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp2fname', 'N', substr(c03_w.nm_contato,1,30), 'N', r_patientdata_change_w.contactp2fname);
				intpd_processar_atrib_envio(reg_integracao_w, 'NM_CONTATO','contactp2lname', 'N', null, 'N', r_patientdata_change_w.contactp2lname);
			end if;				

			if (c03_w.ie_tipo_complemento = 9) then
				intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_TIPO_COMPL_ADIC','contactp2relsh', 'N', c03_w.nr_seq_tipo_compl_adic, 'S', r_patientdata_change_w.contactp2relsh);				
			else
				intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_COMPLEMENTO','contactp2relsh', 'N', c03_w.ie_tipo_complemento, 'S', r_patientdata_change_w.contactp2relsh);				
			end if;

			intpd_processar_atrib_envio(reg_integracao_w, 'CD_PESSOA_FISICA_REF','contactp2extid', 'N', c03_w.cd_pessoa_fisica_ref, 'N', r_patientdata_change_w.contactp2extid);			
			end;
		end if;
		
		reg_integracao_w.ie_somente_alterados		:= 'S';
		reg_integracao_w.ds_chave	:=	null;
		end;
	end loop;
	close c03;

	begin
	select  99
	into STRICT    r_patientdata_change_w.empaddrno
	from    pessoa_fisica_empregador
	where   cd_pessoa_fisica = c01_w.cd_pessoa_fisica  LIMIT 1;	
	exception
	when others then
		r_patientdata_change_w.empaddrno	:=	null;
	end;
	
	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		reg_integracao_w.ie_somente_alterados		:= 'N';
		reg_integracao_w.nm_tabela	:= 'PF_MEDICO_EXTERNO';

		famphys_medic_w := somente_numero(intpd_conv('TIPO_MEDICO_EXTERNO', 'NR_SEQUENCIA', 'FAMPHYS', nr_seq_regra_w, ie_conversao_w, 'I'));
		famrefphys_medic_w := somente_numero(intpd_conv('TIPO_MEDICO_EXTERNO', 'NR_SEQUENCIA', 'FAMREFPHYS', nr_seq_regra_w, ie_conversao_w, 'I'));

		if (c04_w.nr_seq_tipo_medico = famphys_medic_w) or (c04_w.nr_seq_tipo_medico = famrefphys_medic_w) then
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO', 'famphys', 'N', c04_w.cd_medico, 'ISHMED', r_patientdata_change_w.famphys);
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO','famphysx', 'N', 'X', 'N', r_patientdata_change_w.famphysx);
			reg_integracao_w.ie_somente_alterados		:= 'S';
			exit;
		end if;
		
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO','famphysx', 'N', 'X', 'N', r_patientdata_change_w.famphysx);
		reg_integracao_w.ie_somente_alterados		:= 'S';
		end;
	end loop;
	close c04;
	
	/*'SO 1992832 - All the data related to the contacts must be updated'*/


	r_patientdata_change_w.pataddrnox		:=	'X';
	r_patientdata_change_w.pataddr2nox		:=	'X';	
	r_patientdata_change_w.empaddrnox		:=	'X';
	
	r_patientdata_change_w.contactp1addrnox		:=	'X';
	r_patientdata_change_w.contactp1fnamex		:=	'X';
	r_patientdata_change_w.contactp1lnamex		:=	'X';
	r_patientdata_change_w.contactp1relshx		:=	'X';
	r_patientdata_change_w.contactp1extidx		:=	'X';
	
	r_patientdata_change_w.contactp2addrnox		:=	'X';
	r_patientdata_change_w.contactp2fnamex		:=	'X';
	r_patientdata_change_w.contactp2lnamex		:=	'X';
	r_patientdata_change_w.contactp2relshx		:=	'X';
	r_patientdata_change_w.contactp2extidx		:=	'X';	

--	r_patientdata_change_w.contactp1addrno	varchar2(10),

--	r_patientdata_change_w.contactp2addrno	varchar2(10),

/*
	select	max(a.cd_medico)
	into	cd_medico_familia_w
	from	pf_medico_externo a,
		tipo_medico_externo b
	where	a.nr_seq_tipo_medico	= b.nr_sequencia
	and	a.cd_pessoa_fisica	= c01_w.cd_pessoa_fisica
	and	b.ie_medico_familia 	= 'S';

	reg_integracao_w.nm_tabela 	:= 'PF_MEDICO_EXTERNO';
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO','famphys', 'N', cd_medico_familia_w, 'ISHMED', r_patientdata_change_w.famphys);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO','famphysx', 'S', cd_medico_familia_w, 'N', r_patientdata_change_w.famphysx);
*/

	--r_patientdata_change_w.refphys		:= null;

	--r_patientdata_change_w.refphysx		:= 'X';


	begin
	select	cd_medico_referido
	into STRICT	cd_medico_referido_w
	from	atendimento_paciente
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica
	and	(cd_medico_referido IS NOT NULL AND cd_medico_referido::text <> '')  LIMIT 1;
	exception
	when others then
		cd_medico_referido_w := null;
	end;
--    intpd_processar_atributo(reg_integracao_w,'NM_USUARIO_NREC', wheb_usuario_pck.get_nm_usuario,'N',usernametasy);


--	r_patientdata_change_w.refphys2		:= substr(cd_medico_referido_w,1,20);

--	r_patientdata_change_w.user1		varchar2(20),

--	r_patientdata_change_w.user2		varchar2(20),

--	r_patientdata_change_w.user3		varchar2(10),

--	r_patientdata_change_w.user4		varchar2(10),

--	r_patientdata_change_w.user5		varchar2(50),

--	r_patientdata_change_w.user6		varchar2(1),

	reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO_NREC','creationdate', 'N', c01_w.dt_atualizacao_nrec, 'N', dt_geral_w);
	r_patientdata_change_w.creationdate	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'NM_USUARIO_NREC', 'creationuser', 'N', coalesce(ish_param_pck.get_nm_usuario,current_setting('ish_patient_pck.usernameish')::varchar(15)), 'N', r_patientdata_change_w.creationuser);
--	r_patientdata_change_w.creationuserx		:=	'X';

	intpd_processar_atrib_envio(reg_integracao_w, 'NM_USUARIO', 'updateuser', 'N', coalesce(ish_param_pck.get_nm_usuario,current_setting('ish_patient_pck.usernameish')::varchar(15)), 'N', r_patientdata_change_w.updateuser);
	r_patientdata_change_w.updateuserx		:=	'X';
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO','updatedate', 'N', c01_w.dt_atualizacao, 'N', dt_geral_w);
	r_patientdata_change_w.updatedate	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO','updatedatex', 'S', c01_w.dt_atualizacao, 'N', r_patientdata_change_w.updatedatex);
--	r_patientdata_change_w.employedsince		varchar2(10),

--	r_patientdata_change_w.istatbirthpl		varchar2(6),

--	r_patientdata_change_w.taxnumber		varchar2(20),

--	r_patientdata_change_w.taxnumberindic	varchar2(1),

--	r_patientdata_change_w.stpcode		varchar2(16),

--	r_patientdata_change_w.stpcodeexpiry		varchar2(10),

--	r_patientdata_change_w.consentpersdata	varchar2(1),

--	r_patientdata_change_w.birthrank		varchar2(1),

--	r_patientdata_change_w.flagextorderer		varchar2(1),

--	r_patientdata_change_w.dthloc		varchar2(2),

--	r_patientdata_change_w.postdisphys		varchar2(10),

--	r_patientdata_change_w.postdisphysoutp	varchar2(10),

--	r_patientdata_change_w.lastnamepatlong	varchar2(70),

--	r_patientdata_change_w.frstnamepatlong	varchar2(70),

--	r_patientdata_change_w.birthnamelong		varchar2(70),

--	r_patientdata_change_w.titleaca2		varchar2(4),

--	r_patientdata_change_w.sexspecialization	varchar2(1),


	RETURN NEXT r_patientdata_change_w;

	end;
end loop;
close c01;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_patient_pck.get_patientdata_change ( nr_seq_fila_p bigint) FROM PUBLIC;
