-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_patient_pck.gerar_compl_pessoa_fisica ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, cd_pessoa_fisica_p text, ie_tipo_complemento_p bigint, nr_seq_tipo_compl_adic_p bigint, ds_profissao_p text, cd_empresa_refer_p text, nm_contato_p text, nr_telefone_p text, nr_ramal_p text, ds_fax_p text, nr_ddd_fax_p text, nr_seq_pais_p text, sg_estado_p text, cd_cep_p text, ds_municipio_p text, ds_bairro_p text, ds_endereco_p text, nr_endereco_p text, ds_complemento_p text, ds_email_p text, ds_fonetica_p text, ds_compl_p text, nr_seq_parentesco_p text, cd_pessoa_fisica_ref_p text, nm_usuario_p text, nr_sequencia_p text default null, ds_tipo_p text default null, institution_p text default null, client_p text default null, dt_employedsince_p text default null, nm_empresa_p text default null) AS $body$
DECLARE


compl_pessoa_fisica_w		compl_pessoa_fisica%rowtype;
pessoa_fisica_empregador_w	pessoa_fisica_empregador%rowtype;
nr_sequencia_w			compl_pessoa_fisica.nr_sequencia%type;
cd_empresa_refer_w		bigint;
profissao_w			profissao%rowtype;
dt_employedsince_w		timestamp;

ds_fone_adic_w			varchar(30);
nr_telefone_w			compl_pessoa_fisica.nr_telefone%type;
cd_cgc_w			compl_pessoa_fisica.cd_cgc%type;
nr_seq_pais_w compl_pessoa_fisica.nr_seq_pais%type;

reg_integracao_w		gerar_int_padrao.reg_integracao;

BEGIN
reg_integracao_p.nm_tabela		:=	'COMPL_PESSOA_FISICA';
reg_integracao_p.nm_elemento		:=	'PatientData';
reg_integracao_p.nr_seq_visao		:=	0;

begin
select	*
into STRICT	compl_pessoa_fisica_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p	
and	nr_sequencia = nr_sequencia_p;
exception
when others then
	begin
	select	*
	into STRICT	compl_pessoa_fisica_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = ie_tipo_complemento_p
	and	((nr_seq_tipo_compl_adic = nr_seq_tipo_compl_adic_p) or (
		coalesce(nr_seq_tipo_compl_adic::text, '') = '' and coalesce(nr_seq_tipo_compl_adic_p::text, '') = ''))  LIMIT 1;
	exception
	when others then
		compl_pessoa_fisica_w.nr_sequencia	:=	null;
	end;
end;

nr_sequencia_w					:=	compl_pessoa_fisica_w.nr_sequencia;

if (ds_tipo_p <> 'TEL') then
	compl_pessoa_fisica_w				:=	null;
end if;

compl_pessoa_fisica_w.nr_sequencia		:=	nr_sequencia_w;
compl_pessoa_fisica_w.cd_pessoa_fisica		:=	cd_pessoa_fisica_p;
compl_pessoa_fisica_w.ie_tipo_complemento	:=	ie_tipo_complemento_p;
compl_pessoa_fisica_w.nr_seq_tipo_compl_adic	:=	nr_seq_tipo_compl_adic_p;

if (somente_numero(cd_empresa_refer_p) > 0) or (length(nm_empresa_p) > 0) then
	begin
	reg_integracao_p.nm_tabela		:=	'PESSOA_FISICA_EMPREGADOR';
	cd_empresa_refer_w			:=	somente_numero(cd_empresa_refer_p);
	
	begin
	select	a.cd_cgc
	into STRICT	cd_cgc_w
	from	pessoa_juridica a
	where	somente_numero(a.cd_cgc) = cd_empresa_refer_w  LIMIT 1;
	
	intpd_processar_atributo(reg_integracao_p, 'DS_EMPRESA_TEXTO', null, 'N', pessoa_fisica_empregador_w.ds_empresa_texto);
	exception
	when others then
		intpd_processar_atributo(reg_integracao_p, 'CD_CGC', null, 'N', cd_cgc_w);
		intpd_processar_atributo(reg_integracao_p, 'DS_EMPRESA_TEXTO', nm_empresa_p, 'N', pessoa_fisica_empregador_w.ds_empresa_texto);
		
		if (cd_empresa_refer_w > 0) then
			CALL ish_patient_pck.gravar_integracao_bp(substr(client_p|| current_setting('ish_patient_pck.ds_separador_w')::varchar(10) ||institution_p|| current_setting('ish_patient_pck.ds_separador_w')::varchar(10) ||cd_empresa_refer_p,1,80));
		end if;
	end;	

	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then	
		begin
		select	a.*
		into STRICT	pessoa_fisica_empregador_w
		from	pessoa_fisica_empregador a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	a.cd_cgc		= cd_cgc_w  LIMIT 1;
		exception
		when others then
			pessoa_fisica_empregador_w.nr_sequencia	:= null;
		end;
		
		if (length(trim(both ds_profissao_p)) > 0) then
			pessoa_fisica_empregador_w.ds_profissao	:= ds_profissao_p;
		end if;

		reg_integracao_p.nm_tabela		:=	'COMPL_PESSOA_FISICA';
		intpd_processar_atributo(reg_integracao_p, 'NR_SEQ_PAIS', nr_seq_pais_p, 'S', nr_seq_pais_w);
		intpd_processar_atributo(reg_integracao_p, 'CD_CEP', cd_cep_p, 'N', pessoa_fisica_empregador_w.cd_cep_empreg);
		intpd_processar_atributo(reg_integracao_p, 'DS_MUNICIPIO', ds_municipio_p, 'N', pessoa_fisica_empregador_w.ds_municipio_empreg);
		intpd_processar_atributo(reg_integracao_p, 'DS_ENDERECO', ds_endereco_p, 'N', pessoa_fisica_empregador_w.ds_endereco_empreg);
		intpd_processar_atributo(reg_integracao_p, 'DS_COMPL_END', nr_endereco_p, 'N', pessoa_fisica_empregador_w.nr_endereco_empreg);
		intpd_processar_atributo(reg_integracao_p, 'DS_FONE_ADIC', nr_telefone_p, 'N', pessoa_fisica_empregador_w.nr_telefone);
		intpd_processar_atributo(reg_integracao_p, 'CD_CGC', cd_cgc_w, 'N', pessoa_fisica_empregador_w.cd_cgc);

		begin
		select  substr(nm_pais,1,15)
		into STRICT    pessoa_fisica_empregador_w.ds_pais_empreg
		from    pais
		where   nr_sequencia = nr_seq_pais_w;
		exception
		when others then
			pessoa_fisica_empregador_w.ds_pais_empreg	:=	null;
		end;

		reg_integracao_p.nm_tabela		:=	'PESSOA_FISICA_EMPREGADOR';

		if (coalesce(pessoa_fisica_empregador_w.nr_sequencia::text, '') = '') and (reg_integracao_p.qt_reg_log = 0) then
			begin
			pessoa_fisica_empregador_w.dt_inicio_trabalho	:= to_date(dt_employedsince_p);
			exception
			when others then
				pessoa_fisica_empregador_w.dt_inicio_trabalho	:= null;
			end;

			pessoa_fisica_empregador_w.dt_atualizacao	:=	clock_timestamp();
			pessoa_fisica_empregador_w.nm_usuario		:=	current_setting('ish_patient_pck.usernametasy')::varchar(15);
			pessoa_fisica_empregador_w.dt_atualizacao_nrec	:=	clock_timestamp();
			pessoa_fisica_empregador_w.nm_usuario_nrec	:=	current_setting('ish_patient_pck.usernametasy')::varchar(15);
			pessoa_fisica_empregador_w.cd_pessoa_fisica	:=	cd_pessoa_fisica_p;
			
			select	nextval('pessoa_fisica_empregador_seq')
			into STRICT	pessoa_fisica_empregador_w.nr_sequencia
			;
			
			insert into pessoa_fisica_empregador values (pessoa_fisica_empregador_w.*);
		elsif (reg_integracao_p.qt_reg_log = 0) then
			begin
			dt_employedsince_w	:= to_date(dt_employedsince_p);
			if ((dt_employedsince_w IS NOT NULL AND dt_employedsince_w::text <> '') and
				dt_employedsince_w > pessoa_fisica_empregador_w.dt_inicio_trabalho) then
				pessoa_fisica_empregador_w.dt_inicio_trabalho	:= to_date(dt_employedsince_p);
				pessoa_fisica_empregador_w.dt_fim_trabalho		:= null;

				select	nextval('pessoa_fisica_empregador_seq')
				into STRICT	pessoa_fisica_empregador_w.nr_sequencia
				;

			        pessoa_fisica_empregador_w.dt_atualizacao	:=	clock_timestamp();
			        pessoa_fisica_empregador_w.nm_usuario	:=	current_setting('ish_patient_pck.usernametasy')::varchar(15);
				
				insert into pessoa_fisica_empregador values (pessoa_fisica_empregador_w.*);
			elsif ((dt_employedsince_w IS NOT NULL AND dt_employedsince_w::text <> '') and
					dt_employedsince_w = pessoa_fisica_empregador_w.dt_inicio_trabalho and
					(pessoa_fisica_empregador_w.ds_profissao IS NOT NULL AND pessoa_fisica_empregador_w.ds_profissao::text <> '')) then
				
				update	pessoa_fisica_empregador
				set		ds_profissao	= pessoa_fisica_empregador_w.ds_profissao
				where	nr_sequencia	= pessoa_fisica_empregador_w.nr_sequencia;
			end if;
			exception
			when others then
				pessoa_fisica_empregador_w.dt_inicio_trabalho	:= null;
			end;
		end if;

		update	pessoa_fisica_empregador
		set		dt_fim_trabalho	= pessoa_fisica_empregador_w.dt_inicio_trabalho,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario		= current_setting('ish_patient_pck.usernametasy')::varchar(15)
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and 	coalesce(dt_fim_trabalho::text, '') = ''
		and 	nr_sequencia		<> pessoa_fisica_empregador_w.nr_sequencia;
	end if;
	
	end;
end if;

reg_integracao_p.nm_tabela		:=	'COMPL_PESSOA_FISICA';
intpd_processar_atributo(reg_integracao_p, 'NM_CONTATO', nm_contato_p, 'N', compl_pessoa_fisica_w.nm_contato);
intpd_processar_atributo(reg_integracao_p, 'NR_RAMAL', nr_ramal_p, 'N', compl_pessoa_fisica_w.nr_ramal);
intpd_processar_atributo(reg_integracao_p, 'DS_FAX', ds_fax_p, 'N', compl_pessoa_fisica_w.ds_fax);
intpd_processar_atributo(reg_integracao_p, 'NR_DDD_FAX', nr_ddd_fax_p, 'N', compl_pessoa_fisica_w.nr_ddd_fax);
intpd_processar_atributo(reg_integracao_p, 'NR_SEQ_PAIS', nr_seq_pais_p, 'S', compl_pessoa_fisica_w.nr_seq_pais);
intpd_processar_atributo(reg_integracao_p, 'SG_ESTADO', sg_estado_p, 'S', compl_pessoa_fisica_w.sg_estado);
intpd_processar_atributo(reg_integracao_p, 'CD_CEP', cd_cep_p, 'N', compl_pessoa_fisica_w.cd_cep);
intpd_processar_atributo(reg_integracao_p, 'DS_MUNICIPIO', ds_municipio_p, 'N', compl_pessoa_fisica_w.ds_municipio);
intpd_processar_atributo(reg_integracao_p, 'DS_BAIRRO', ds_bairro_p, 'N', compl_pessoa_fisica_w.ds_bairro);
intpd_processar_atributo(reg_integracao_p, 'DS_ENDERECO', ds_endereco_p, 'N', compl_pessoa_fisica_w.ds_endereco);
intpd_processar_atributo(reg_integracao_p, 'DS_COMPL_END', nr_endereco_p, 'N', compl_pessoa_fisica_w.ds_compl_end);
intpd_processar_atributo(reg_integracao_p, 'DS_COMPLEMENTO', ds_complemento_p, 'N', compl_pessoa_fisica_w.ds_complemento);
intpd_processar_atributo(reg_integracao_p, 'DS_EMAIL', ds_email_p, 'N', compl_pessoa_fisica_w.ds_email);
intpd_processar_atributo(reg_integracao_p, 'NM_USUARIO', nm_usuario_p, 'N', compl_pessoa_fisica_w.nm_usuario);
intpd_processar_atributo(reg_integracao_p, 'DS_FONETICA', ds_fonetica_p, 'N', compl_pessoa_fisica_w.ds_fonetica);
intpd_processar_atributo(reg_integracao_p, 'DS_COMPLEMENTO', ds_compl_p, 'N', compl_pessoa_fisica_w.ds_complemento);
intpd_processar_atributo(reg_integracao_p, 'NR_SEQ_PARENTESCO', nr_seq_parentesco_p, 'N', compl_pessoa_fisica_w.nr_seq_parentesco);
intpd_processar_atributo(reg_integracao_p, 'CD_PESSOA_FISICA_REF', cd_pessoa_fisica_ref_p, 'N', compl_pessoa_fisica_w.cd_pessoa_fisica_ref);

ds_fone_adic_w		:=	trim(both nr_telefone_p);
intpd_processar_atributo(reg_integracao_p, 'DS_FONE_ADIC', ds_fone_adic_w, 'N', compl_pessoa_fisica_w.ds_fone_adic);
intpd_processar_atributo(reg_integracao_p, 'NR_TELEFONE', null, 'N', compl_pessoa_fisica_w.nr_telefone);

if (reg_integracao_p.qt_reg_log = 0) and (compl_pessoa_fisica_w.ie_tipo_complemento IS NOT NULL AND compl_pessoa_fisica_w.ie_tipo_complemento::text <> '') then
	begin
	compl_pessoa_fisica_w.dt_atualizacao	:=	clock_timestamp();
	compl_pessoa_fisica_w.nm_usuario	:=	current_setting('ish_patient_pck.usernametasy')::varchar(15);

	if (coalesce(compl_pessoa_fisica_w.nr_sequencia::text, '') = '') then
		begin
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	compl_pessoa_fisica_w.nr_sequencia
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;

		insert into compl_pessoa_fisica values (compl_pessoa_fisica_w.*);

		end;
	else
		update	compl_pessoa_fisica
		set	row = compl_pessoa_fisica_w
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	nr_sequencia = compl_pessoa_fisica_w.nr_sequencia;
	end if;
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_patient_pck.gerar_compl_pessoa_fisica ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, cd_pessoa_fisica_p text, ie_tipo_complemento_p bigint, nr_seq_tipo_compl_adic_p bigint, ds_profissao_p text, cd_empresa_refer_p text, nm_contato_p text, nr_telefone_p text, nr_ramal_p text, ds_fax_p text, nr_ddd_fax_p text, nr_seq_pais_p text, sg_estado_p text, cd_cep_p text, ds_municipio_p text, ds_bairro_p text, ds_endereco_p text, nr_endereco_p text, ds_complemento_p text, ds_email_p text, ds_fonetica_p text, ds_compl_p text, nr_seq_parentesco_p text, cd_pessoa_fisica_ref_p text, nm_usuario_p text, nr_sequencia_p text default null, ds_tipo_p text default null, institution_p text default null, client_p text default null, dt_employedsince_p text default null, nm_empresa_p text default null) FROM PUBLIC;
