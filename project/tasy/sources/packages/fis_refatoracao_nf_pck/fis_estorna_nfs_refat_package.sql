-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE fis_refatoracao_nf_pck.fis_estorna_nfs_refat () AS $body$
DECLARE


nr_seq_nf_new_w		nota_fiscal.nr_sequencia%type;
ie_tipo_nota_w		nota_fiscal.ie_tipo_nota%type;
nr_seq_baixa_new_w	titulo_receber_liq.nr_sequencia%type;

c_nfs_refatoracao CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_nf_princ_old,
		nm_usuario,
		nr_interno_conta,
		nr_seq_protocolo,
		cd_pessoa_fisica,
		cd_cgc,
		cd_condicao_pagamento,
		cd_uso_cfdi
	from	fis_refatoracao_nf
	where	coalesce(nr_seq_nf_princ_new::text, '') = ''
	and	fis_refatoracao_nf_pck.fis_obter_sit_nf(nr_seq_nf_princ_old) = 5;
	
c_nfs_refatoracao_w          c_nfs_refatoracao%rowtype;
	
c_nfs_estorno CURSOR FOR
	SELECT	nr_seq_nf_adiant_old nr_seq_nota_fiscal,
		'2' ie_tipo,
		nr_sequencia
	from	fis_refatoracao_nf_adian
	where	nr_seq_refat_nf	=	c_nfs_refatoracao_w.nr_sequencia
	
union all

	SELECT	nr_seq_nf_cred_old nr_seq_nota_fiscal,
		'3' ie_tipo,
		nr_sequencia
	from	fis_refatoracao_nf_cred
	where	nr_seq_refat_nf	=	c_nfs_refatoracao_w.nr_sequencia;

c_nfs_estorno_w          c_nfs_estorno%rowtype;	

c_nfs_estorno_tit CURSOR FOR
	SELECT	nr_seq_nf_baixa_tit_old nr_seq_nota_fiscal,
		'4' ie_tipo,
		nr_sequencia,
		nr_seq_baixa_old,
		nr_titulo_receb,
		nm_usuario
	from	fis_refatoracao_nf_bai_tit
	where	nr_seq_refat_nf	=	c_nfs_refatoracao_w.nr_sequencia;

c_nfs_estorno_tit_w          c_nfs_estorno_tit%rowtype;
	

BEGIN

open c_nfs_refatoracao;
loop
fetch c_nfs_refatoracao into	
	c_nfs_refatoracao_w;
EXIT WHEN NOT FOUND; /* apply on c_nfs_refatoracao */
	begin
	
	--estona nota principal
	
	nr_seq_nf_new_w:= null;
	
	/*Nao pode duplicar quando for cancelamento*/

	if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) <> 0 or
		coalesce(c_nfs_refatoracao_w.cd_cgc, 0) <> 0 or
		coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) <> 0 or
		coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) <> 0) then
		SELECT * FROM fis_refatoracao_nf_pck.fis_duplicar_nf(	c_nfs_refatoracao_w.nr_seq_nf_princ_old, nr_seq_nf_new_w, ie_tipo_nota_w, c_nfs_refatoracao_w.nm_usuario) INTO STRICT nr_seq_nf_new_w, ie_tipo_nota_w;
	end if;
	
	CALL fis_refatoracao_nf_pck.fis_estorna_nf(	c_nfs_refatoracao_w.nr_seq_nf_princ_old,
				c_nfs_refatoracao_w.nm_usuario);
	
	if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) <> 0 or
		coalesce(c_nfs_refatoracao_w.cd_cgc, 0) <> 0 or 
		coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) <> 0 or 
		coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) <> 0) then
		CALL fis_refatoracao_nf_pck.calcula_nota_fiscal(	nr_seq_nf_new_w,
						ie_tipo_nota_w,
						c_nfs_refatoracao_w.nm_usuario);
						
		CALL fis_refatoracao_nf_pck.fis_vinc_nfs_refat(	nr_seq_nf_new_w,
						0,
						c_nfs_refatoracao_w.nr_sequencia,
						'1');
	end if;

	if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) = 0 and
		coalesce(c_nfs_refatoracao_w.cd_cgc, 0) = 0 and 
		coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) = 0 and 
		coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) = 0) then
		if (coalesce(c_nfs_refatoracao_w.nr_interno_conta, 0) <> 0) then
			CALL fis_refatoracao_nf_pck.fis_cancelar_conta_pac(	c_nfs_refatoracao_w.nr_interno_conta,
						c_nfs_refatoracao_w.nm_usuario);
		elsif (coalesce(c_nfs_refatoracao_w.nr_seq_protocolo, 0) <> 0)	then
			CALL fis_refatoracao_nf_pck.fis_cancelar_proc_conv(	c_nfs_refatoracao_w.nr_seq_protocolo,
						c_nfs_refatoracao_w.nm_usuario);
		
		end if;
	end if;

	open c_nfs_estorno;
	loop
	fetch c_nfs_estorno into	
		c_nfs_estorno_w;
	EXIT WHEN NOT FOUND; /* apply on c_nfs_estorno */
		begin
		-- estorna notas secundarias
		
		nr_seq_nf_new_w:= null;
		
		if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) <> 0 or
			coalesce(c_nfs_refatoracao_w.cd_cgc, 0) <> 0 or 
			coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) <> 0 or 
			coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) <> 0) then	
			SELECT * FROM fis_refatoracao_nf_pck.fis_duplicar_nf(	c_nfs_estorno_w.nr_seq_nota_fiscal, nr_seq_nf_new_w, ie_tipo_nota_w, c_nfs_refatoracao_w.nm_usuario) INTO STRICT nr_seq_nf_new_w, ie_tipo_nota_w;
			
		end if;
		
		CALL fis_refatoracao_nf_pck.fis_estorna_nf(	c_nfs_estorno_w.nr_seq_nota_fiscal,
					c_nfs_refatoracao_w.nm_usuario);
					
		if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) <> 0 or
			coalesce(c_nfs_refatoracao_w.cd_cgc, 0) <> 0 or 
			coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) <> 0 or
			coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) <> 0) then

			CALL fis_refatoracao_nf_pck.calcula_nota_fiscal(	nr_seq_nf_new_w,
							ie_tipo_nota_w,
							c_nfs_refatoracao_w.nm_usuario);

			CALL fis_refatoracao_nf_pck.fis_vinc_nfs_refat(	nr_seq_nf_new_w,
							0,
							c_nfs_estorno_w.nr_sequencia,
							c_nfs_estorno_w.ie_tipo);
		end if;
		
		end;
	end loop;
	close c_nfs_estorno;
	
	
	open c_nfs_estorno_tit;
	loop
	fetch c_nfs_estorno_tit into	
		c_nfs_estorno_tit_w;
	EXIT WHEN NOT FOUND; /* apply on c_nfs_estorno_tit */
		begin
		-- estorna notas secundarias
		
		nr_seq_nf_new_w:= null;
		
		if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) <> 0 or
			coalesce(c_nfs_refatoracao_w.cd_cgc, 0) <> 0 or 
			coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) <> 0 or 
			coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) <> 0) then		
			SELECT * FROM fis_refatoracao_nf_pck.fis_duplicar_nf(	c_nfs_estorno_tit_w.nr_seq_nota_fiscal, nr_seq_nf_new_w, ie_tipo_nota_w, c_nfs_estorno_tit_w.nm_usuario) INTO STRICT nr_seq_nf_new_w, ie_tipo_nota_w;

			nr_seq_baixa_new_w := fis_refatoracao_nf_pck.fis_duplicar_baixa_tit(	c_nfs_estorno_tit_w.nr_titulo_receb, c_nfs_estorno_tit_w.nr_seq_baixa_old, c_nfs_refatoracao_w.nr_interno_conta, nr_seq_baixa_new_w, c_nfs_estorno_tit_w.nm_usuario);
			
		end if;
		
		if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) = 0 or
			coalesce(c_nfs_refatoracao_w.cd_cgc, 0) = 0 or 
			coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) = 0 or 
			coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) = 0) then		
			CALL estornar_tit_receber_liq(	c_nfs_estorno_tit_w.nr_titulo_receb,
							c_nfs_estorno_tit_w.nr_seq_baixa_old,
							clock_timestamp(),
							c_nfs_estorno_tit_w.nm_usuario,
							'N',
							'Baixa gerada a partir do estorno da baixa ' || c_nfs_estorno_tit_w.nr_seq_baixa_old,
							'');		
			
		end if;
		
		
			
					
		CALL fis_refatoracao_nf_pck.fis_estorna_nf(	c_nfs_estorno_tit_w.nr_seq_nota_fiscal,
					c_nfs_estorno_tit_w.nm_usuario);
					
		if (coalesce(c_nfs_refatoracao_w.cd_pessoa_fisica, 0) <> 0 or
			coalesce(c_nfs_refatoracao_w.cd_cgc, 0) <> 0 or 
			coalesce(c_nfs_refatoracao_w.cd_condicao_pagamento, 0) <> 0 or
			coalesce(c_nfs_refatoracao_w.cd_uso_cfdi, 0) <> 0) then

			CALL fis_refatoracao_nf_pck.calcula_nota_fiscal(	nr_seq_nf_new_w,
							ie_tipo_nota_w,
							c_nfs_estorno_tit_w.nm_usuario);
			
			CALL fis_refatoracao_nf_pck.fis_vinc_nfs_refat(	nr_seq_nf_new_w,
							nr_seq_baixa_new_w,
							c_nfs_estorno_tit_w.nr_sequencia,
							c_nfs_estorno_tit_w.ie_tipo);
		end if;
		
		end;
	end loop;
	close c_nfs_estorno_tit;
	
	end;
end loop;
close c_nfs_refatoracao;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_refatoracao_nf_pck.fis_estorna_nfs_refat () FROM PUBLIC;
