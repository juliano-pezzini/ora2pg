-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE mprev_relatorio_pck.imprimir_relat_mprev_data ( nr_seq_participante_p bigint, nr_seq_mprev_txt_rel_cont_p bigint, ds_conteudo_p INOUT text) AS $body$
DECLARE

						 
	ds_texto_w       			text;
	ds_texto_alterado_w   		text;
	pos_macro_w       		bigint;
	ds_macro_w       		varchar(100);
	pos_fim_macro_w     		bigint;
	ds_resultado_macro_w  		varchar(255);
	cd_pessoa_fisica_w			varchar(10);
	-------------------------------------------------------------------------------------------------------------------------------------------- 
	nr_sequencia_w				bigint;
	ds_param_w				varchar(255);
	ds_sql_w				varchar(255);
	ds_campo_clob_w				text;
	c001					integer;
	ds_conteudo_1_w				varchar(32764);
	ds_conteudo_2_w				varchar(32764);
	qt_registro_w				bigint;
	retorno_w				bigint;
	
	
BEGIN 
	 
	select 	count(*) 
	into STRICT	qt_registro_w 
	from	user_tables 
	where	table_name = 'W_COPIA_CAMPO_LONG';
 
	if ( qt_registro_w = 0 ) then 
		CALL exec_sql_dinamico('','create table w_copia_campo_long (nr_sequencia number(10), ds_texto clob)');
	end if;
	/*FIM - VERIFICAR SE TABELA TEMPORÁRIO EXISTE SE NÃO EXISTIR CRIA*/
 
 
 
	/*INICIO - TRANSFERE CONTEUDO DO CAMPO LONG DA TABELA DE ORIGEM PARA O CAMPO CLOB DA TABELA TEMPORARIO*/
 
 
	obter_valor_dinamico('select	(nvl(max(nr_sequencia),0) + 1) from w_copia_campo_long',nr_sequencia_w);
	ds_sql_w  := 'insert into w_copia_campo_long select :SEQUENCE, to_lob(ds_conteudo) from MPREV_TEXTO_RELAT_CONTEUDO 
			where nr_sequencia = :nr_sequencia';
	ds_param_w := 'SEQUENCE='|| TO_CHAR(nr_sequencia_w)||';' || 'nr_sequencia=' || to_char(nr_seq_mprev_txt_rel_cont_p);
	CALL exec_sql_dinamico_bv('',ds_sql_w,ds_param_w);
 
	/*FIM - TRANSFERE CONTEUDO DO CAMPO LONG DA TABELA DE ORIGEM PARA O CAMPO CLOB DA TABELA TEMPORARIO*/
 
 
 
	/*INICIO - RECUPERA O VALOR DO CAMPO CLOB PARA A VARIAVEL DA PROCEDURE*/
 
	ds_sql_w	:= ' select ds_texto from w_copia_campo_long where nr_sequencia = :sequence ';
 
	C001 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C001, ds_sql_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(C001, 1, ds_campo_clob_w);
	DBMS_SQL.BIND_VARIABLE(C001, 'SEQUENCE', nr_sequencia_w);
	retorno_w := DBMS_SQL.EXECUTE(c001);
	retorno_w := DBMS_SQL.fetch_rows(c001);
	DBMS_SQL.COLUMN_VALUE(C001, 1, ds_campo_clob_w );
	DBMS_SQL.CLOSE_CURSOR(C001);
 
	/*FIM - RECUPERA O VALOR DO CAMPO CLOB PARA A VARIAVEL DA PROCEDURE*/
 
 
 
	/*INICIO - QUEBRA O VALOR DO CONTEUDO CLOB EM VARIOS VARCHAR PARA PODER INSERIR NA TABELA DE ORIGEM*/
 
	ds_conteudo_1_w := substr(ds_campo_clob_w,32764,1);
	ds_conteudo_2_w := substr(ds_campo_clob_w,32764,32765);
	ds_texto_w	:= ds_conteudo_1_w;
	 
	ds_sql_w := 'delete from w_copia_campo_long where nr_sequencia = :nr_sequencia';
	ds_param_w := 'NR_SEQUENCIA='|| TO_CHAR(nr_sequencia_w);
	CALL exec_sql_dinamico_bv('',ds_sql_w,ds_param_w);
	 
	ds_texto_alterado_w	:= ds_texto_w;
	 
	select	MAX(cd_pessoa_fisica) 
	into STRICT	cd_pessoa_fisica_w 
	from	MPREV_PARTICIPANTE 
	where	nr_sequencia	= nr_seq_participante_p;
	 
	WHILE(ds_texto_w IS NOT NULL AND ds_texto_w::text <> '') LOOP 
        begin 
		 
		begin 
		PERFORM replace(replace(ds_texto_w,'\',' '),chr(13) || chr(10),' ') -- ' comentário para não deixar todo o resto em vermelho 
		into  ds_texto_w 
		from  dual; 
		exception 
		when others then 
			wheb_mensagem_pck.exibir_mensagem_abort(262244, 'DS_TEXTO=' ||length(ds_texto_w)); 
			/* Mensagem: DS_TEXTO */
 
		end; 
		 
		select instr(ds_texto_w,'#@') 
        into  pos_macro_w 
        from  dual; 
		 
		if 	(pos_macro_w > 0) then 
			select substr(ds_texto_w,pos_macro_w+2,length(ds_texto_w)) 
            into  ds_texto_w 
            from  dual; 
			 
            select instr(replace(ds_texto_w,chr(10),'#@'),'#@') 
			into  pos_fim_macro_w 
			from  dual; 
			 
			 
            select Elimina_Caracteres_Especiais(substr(ds_texto_w,1,pos_fim_macro_w -1)) 
            into  ds_macro_w 
            from  dual; 
			 
            if (nvl(ds_macro_w,'') is not null) then 
				ds_resultado_macro_w	:= mprev_relatorio_pck.substituir_macro_mprev(nr_seq_participante_p,cd_pessoa_fisica_w,ds_macro_w); 
				 
				begin 
				select replace(ds_texto_alterado_w, ds_macro_w, ds_resultado_macro_w) 
				into  ds_texto_alterado_w 
				from  dual; 
				exception 
				when others then 
					wheb_mensagem_pck.exibir_mensagem_abort(262248, 'DS_TEXTO_ALTERADO=' || length(ds_texto_alterado_w) || ';DS_MACRO=' || length(ds_macro_w) || ';DS_RESULTADO_MACRO' || length(ds_resultado_macro_w)); 
				end; 
            end if; 
			 
            select substr(ds_texto_w,pos_fim_macro_w+2, length(ds_texto_w)) 
            into  ds_texto_w 
            from  dual; 
        else 
            ds_texto_w := ''; 
        end if; 
		 
        end; 
    END loop; 
	 
	ds_conteudo_p	:= replace(ds_texto_alterado_w,'#@',''); 
	 
	end;	 
						 
	function mprev_relatorio_pck.substituir_macro_mprev(	nr_seq_participante_p		number, 
						cd_pessoa_fisica_p		varchar2, 
						ds_macro_p			varchar2) 
						return varchar2 is 
						 
	/*#@NM_PARTICIPANTE#@ - Nome do participante do programa ou campanha 
	#@CD_CARTAO_PARTIC#@ - Carteirinha do participante 
	#@NM_CUIDADOR#@ - Nome do cuidador do participante 
	#@CPF_PARTIC#@ - CPF do participante do programa ou campanha 
	#@RG_PARTIC#@ - RG do participante do programa ou campanha 
	#@NM_OPERADORA#@ - Nome da operadora 
	#@CIDADE_PARTIC#@ - Cidade do participante 
	#@BAIRRO_PARTIC#@ - Bairro do participante 
	#@RUA_PARTIC#@ - Rua do participante 
	#@NR_END_PARTIC#@ - Número endereço do participante 
	#@NM_COORDENADOR - Coordenador do departamento de Medicina Preventiva 
	#@DT_DIA#@ - Dia atual 
	#@DT_MES#@ - Mês atual, por extenso 
	#@DT_ANO#@ - Ano atual, por extenso 
	*/
 
	 
	cd_pessoa_responsavel_w		pessoa_fisica.cd_pessoa_fisica%type; 
	 
	begin 
		 
	if	(ds_macro_p = 'DT_DIA') then 
		return to_char(sysdate,'dd'); 
	elsif (ds_macro_p = 'DT_MES') then 
		return to_char(sysdate,'Month'); 
	elsif (ds_macro_p = 'DT_ANO') then		 
		return to_char(sysdate,'YYYY'); 
	else 
		 
		if	(ds_macro_p = 'NM_PARTICIPANTE') then 
			return substr(obter_nome_pf(cd_pessoa_fisica_p),1,255); 
		elsif (ds_macro_p = 'CD_CARTAO_PARTIC') then 
			return substr(mprev_obter_dados_agenda_part(nr_seq_participante_p,'CR',NULL),1,255); 
		elsif (ds_macro_p = 'NM_CUIDADOR') then 
			return nvl(substr(mprev_obter_dados_agenda_part(nr_seq_participante_p,'PC',NULL),1,255),substr(obter_nome_pf(cd_pessoa_fisica_p),1,255)); 
		elsif (ds_macro_p = 'CPF_PARTIC') then 
			return substr(obter_dados_pf(cd_pessoa_fisica_p,'CPF'),1,255); 
		elsif (ds_macro_p = 'RG_PARTIC') then 
			return substr(obter_dados_pf(cd_pessoa_fisica_p,'RG'),1,255); 
		elsif (ds_macro_p = 'NM_OPERADORA') then 
			return nvl(substr(pls_obter_nome_operadora_estab(wheb_usuario_pck.get_cd_estabelecimento),1,255),substr(obter_nome_estabelecimento(wheb_usuario_pck.get_cd_estabelecimento),1,255)); 
		elsif (ds_macro_p = 'CIDADE_PARTIC') then 
			return substr(obter_compl_pf(cd_pessoa_fisica_p,1,'CI'),1,255); 
		elsif (ds_macro_p = 'BAIRRO_PARTIC') then 
			return substr(obter_compl_pf(cd_pessoa_fisica_p,1,'B'),1,255); 
		elsif (ds_macro_p = 'RUA_PARTIC') then 
			return substr(obter_compl_pf(cd_pessoa_fisica_p,1,'EN'),1,255); 
		elsif (ds_macro_p = 'NR_END_PARTIC') then 
			return substr(obter_compl_pf(cd_pessoa_fisica_p,1,'NR'),1,255); 
		elsif (ds_macro_p = 'NM_COORDENADOR') then
			 
			select	max(cd_pessoa_responsavel) 
			into STRICT	cd_pessoa_responsavel_w 
			from	MPREV_CONFIG_GERAL 
			where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
			 
			return;
		end if;
	end if;
	 
	return;
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_relatorio_pck.imprimir_relat_mprev_data ( nr_seq_participante_p bigint, nr_seq_mprev_txt_rel_cont_p bigint, ds_conteudo_p INOUT text) FROM PUBLIC;
