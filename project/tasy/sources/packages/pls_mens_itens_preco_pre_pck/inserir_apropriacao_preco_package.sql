-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_itens_preco_pre_pck.inserir_apropriacao_preco ( ie_tipo_item_p pls_mensalidade_seg_item.ie_tipo_item%type, vl_item_p pls_mensalidade_seg_item.vl_item%type, nr_seq_segurado_preco_p pls_mensalidade_segurado.nr_seq_segurado_preco%type, vl_reajuste_p bigint, tx_mens_proporcional_p bigint, nr_seq_centro_apropriacao_p pls_centro_apropriacao.nr_sequencia%type, ie_preco_nao_subsidiado_p text, vl_apropriacao_p INOUT bigint) AS $body$
DECLARE


qt_apropriacao_w		integer;
vl_apropriacao_w		pls_segurado_preco_aprop.vl_apropriacao%type;
vl_total_apropriado_w		double precision := 0;

C01 CURSOR(	nr_seq_segurado_preco_pc	pls_segurado_preco.nr_sequencia%type,
		nr_seq_centro_apropriacao_pc	pls_centro_apropriacao.nr_sequencia%type) FOR
	SELECT	nr_seq_centro_apropriacao,
		vl_apropriacao,
		vl_reajuste,
		vl_base_reajuste
	from	pls_segurado_preco_aprop
	where	nr_seq_segurado_preco	= nr_seq_segurado_preco_pc
	and	((nr_seq_centro_apropriacao = nr_seq_centro_apropriacao_pc) or (coalesce(nr_seq_centro_apropriacao_pc::text, '') = ''));

BEGIN

select	count(1)
into STRICT	qt_apropriacao_w
from	pls_segurado_preco_aprop
where	nr_seq_segurado_preco	= nr_seq_segurado_preco_p;

for r_c01_w in C01(	nr_seq_segurado_preco_p,
			nr_seq_centro_apropriacao_p) loop
	begin
	--Se o tipo do item for reajuste, busca o valor de reajuste ja calculado da apropriacao

	if (ie_tipo_item_p in ('4', '5', '25', '35')) then
		vl_apropriacao_w := coalesce(r_c01_w.vl_reajuste, 0);
	elsif (coalesce(vl_reajuste_p,0) <> 0) then --Se for pre-estabelecido e possuir valor de reajuste nesta mensalidade, obtem o valor antigo do pre estabelecido
		vl_apropriacao_w := r_c01_w.vl_base_reajuste;

		if (coalesce(vl_apropriacao_w,0) = 0) then
			vl_apropriacao_w := (r_c01_w.vl_apropriacao - vl_reajuste_p);
		end if;
	else
		vl_apropriacao_w := r_c01_w.vl_apropriacao;
	end if;

	if (vl_apropriacao_w <> 0) then
		--Calcula o valor proporicionalmente caso for primeira ou ultima mensalidade do beneficiario

		if (tx_mens_proporcional_p <> 0) then
			vl_apropriacao_w := vl_apropriacao_w * tx_mens_proporcional_p;
		end if;
		
		vl_total_apropriado_w := vl_total_apropriado_w + vl_apropriacao_w;

		--Realiza o arredondamento da apropriacao

		if (C01%rowcount = qt_apropriacao_w) then
			if (vl_total_apropriado_w <> vl_item_p) then
				vl_apropriacao_w := vl_apropriacao_w + (vl_item_p - vl_total_apropriado_w);
			end if;
		end if;

		if (ie_preco_nao_subsidiado_p = 'S') then
			current_setting('pls_mens_itens_preco_pre_pck.apropriacao_item_nao_sub_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_preco_pre_pck.nr_indice_aprop_nao_subsiado_w')::bigint).vl_apropriacao		:= vl_apropriacao_w;
			current_setting('pls_mens_itens_preco_pre_pck.apropriacao_item_nao_sub_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_preco_pre_pck.nr_indice_aprop_nao_subsiado_w')::bigint).nr_seq_centro_apropriacao	:= r_c01_w.nr_seq_centro_apropriacao;
			PERFORM set_config('pls_mens_itens_preco_pre_pck.nr_indice_aprop_nao_subsiado_w', current_setting('pls_mens_itens_preco_pre_pck.nr_indice_aprop_nao_subsiado_w')::bigint + 1, false);
		else
			current_setting('pls_mens_itens_preco_pre_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_preco_pre_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao		:= vl_apropriacao_w;
			current_setting('pls_mens_itens_preco_pre_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_preco_pre_pck.nr_indice_apropriacao_w')::bigint).nr_seq_centro_apropriacao	:= r_c01_w.nr_seq_centro_apropriacao;
			PERFORM set_config('pls_mens_itens_preco_pre_pck.nr_indice_apropriacao_w', current_setting('pls_mens_itens_preco_pre_pck.nr_indice_apropriacao_w')::bigint + 1, false);
		end if;
	end if;
	end;
end loop;

vl_apropriacao_p	:= coalesce(vl_apropriacao_w, 0);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_itens_preco_pre_pck.inserir_apropriacao_preco ( ie_tipo_item_p pls_mensalidade_seg_item.ie_tipo_item%type, vl_item_p pls_mensalidade_seg_item.vl_item%type, nr_seq_segurado_preco_p pls_mensalidade_segurado.nr_seq_segurado_preco%type, vl_reajuste_p bigint, tx_mens_proporcional_p bigint, nr_seq_centro_apropriacao_p pls_centro_apropriacao.nr_sequencia%type, ie_preco_nao_subsidiado_p text, vl_apropriacao_p INOUT bigint) FROM PUBLIC;
