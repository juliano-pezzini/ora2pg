-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function search_oft_pend_item_pck.get_data() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION search_oft_pend_item_pck.get_data ( nr_sequencia_p bigint ) RETURNS SETOF PENDING_OPHTALMOLOGY_TABLE AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	PENDING_OPHTALMOLOGY_TABLE;
BEGIN
	v_query := 'SELECT * FROM search_oft_pend_item_pck.get_data_atx ( ' || quote_nullable(nr_sequencia_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret PENDING_OPHTALMOLOGY_TABLE);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION search_oft_pend_item_pck.get_data_atx ( nr_sequencia_p bigint ) RETURNS SETOF PENDING_OPHTALMOLOGY_TABLE AS $body$
DECLARE


pending_ophtalmology_record_w	pending_ophtalmology_record;
nm_tabela_w			varchar(255);
ds_comando_w		varchar(255);
nr_sequencia_w		bigint;
ds_campo_w			varchar(255) := 'NR_SEQUENCIA';
ds_sql_adicional_w 	varchar(255) := '';pending_items CURSOR FOR
	SELECT	*
	FROM	pep_item_pendente
	WHERE	nr_sequencia = nr_sequencia_p;
	
BEGIN

	FOR item IN pending_items LOOP
		BEGIN
		
		if (item.nr_seq_avaliacao IS NOT NULL AND item.nr_seq_avaliacao::text <> '') then
			nm_tabela_w := 'MED_AVALIACAO_PACIENTE';
			nr_sequencia_w := item.nr_seq_avaliacao;
		elsif (item.nr_seq_atestado IS NOT NULL AND item.nr_seq_atestado::text <> '') then
			nm_tabela_w := 'ATESTADO_PACIENTE';
			nr_sequencia_w := item.nr_seq_atestado;
		else
			nr_sequencia_w := item.nr_seq_registro;
			
			case item.ie_tipo_registro
				when 'BIOL' then nm_tabela_w := 'OFT_BIOMETRIA';
				when 'CAPL' then nm_tabela_w := 'OFT_CAMPIMETRIA';
				when 'CERL' then nm_tabela_w := 'OFT_CERASTOCOPIA';
				when 'OIL' 	then nm_tabela_w := 'OFT_IMAGEM_EXAME';
				when 'CTL' 	then nm_tabela_w := 'OFT_CURVA_TENCIONAL';
				when 'DNPL' then nm_tabela_w := 'OFT_DNP';
				when 'EOEL' then nm_tabela_w := 'OFT_EXAME_EXTERNO';
				when 'TOCL' then nm_tabela_w := 'OFT_OCT';
				when 'TOGL' then nm_tabela_w := 'OFT_TOMOGRAFIA_OLHO';
				when 'TAPL' then nm_tabela_w := 'OFT_TONOMETRIA';
				when 'TPNL' then nm_tabela_w := 'OFT_TONOMETRIA';
				when 'BICL' then nm_tabela_w := 'OFT_BIOMICROSCOPIA';
				when 'AGRL' then nm_tabela_w := 'OFT_ANGIO_RETINO';
				when 'CASL' then nm_tabela_w := 'OFT_CAPSULOTOMIA';
				when 'DATL' then nm_tabela_w := 'OFT_DALTONISMO';
				when 'AVAL' then nm_tabela_w := 'OFT_OLHO_SECO';
				when 'AVNL' then nm_tabela_w := 'OFT_CORRECAO_ATUAL';
				when 'REFL' then nm_tabela_w := 'OFT_REFRACAO';
				when 'FNCL' then nm_tabela_w := 'OFT_FUNDOSCOPIA';
				when 'GNOL' then nm_tabela_w := 'OFT_GONIOSCOPIA';
				when 'ONL' 	then nm_tabela_w := 'OFT_ANAMNESE';
				when 'OAL' 	then nm_tabela_w := 'OFT_ANEXO';
				when 'CNL' 	then nm_tabela_w := 'PEP_PAC_CI';
				when 'ODL' 	then nm_tabela_w := 'OFT_DIAGNOSTICO';
				when 'OGL' 	then nm_tabela_w := 'PEP_ORIENTACAO_GERAL';
				when 'OCL' 	then nm_tabela_w := 'OFT_CONDUTA';
				when 'MIEL' then nm_tabela_w := 'OFT_MICROSCOPIA_ESPECULAR';
				when 'MOOL' then nm_tabela_w := 'OFT_MOTILIDADE_OCULAR';
				when 'MOCL' then nm_tabela_w := 'OFT_MOTILIDADE_OCULAR';
				when 'PAQL' then nm_tabela_w := 'OFT_PAQUIMETRIA';
				when 'PQUL' then nm_tabela_w := 'OFT_PAQUIMETRIA';
				when 'PAVL' then nm_tabela_w := 'OFT_POTENCIAL_ACUIDADE';
				when 'PUPL' then nm_tabela_w := 'OFT_PUPILOMETRIA';
				when 'ULTL' then nm_tabela_w := 'OFT_ULTRASSONOGRAFIA';
				when 'MARL' then nm_tabela_w := 'OFT_MAPEAMENTO_RETINA';
				when 'SOHL' then nm_tabela_w := 'OFT_SOBRECARGA_HIDRICA';
				when 'AURL' then nm_tabela_w := 'OFT_AUTO_REFRACAO';
				when 'IRIL' then nm_tabela_w := 'OFT_IRIDECTOMIA';
				when 'FOTL' then nm_tabela_w := 'OFT_FOTOCOAGULACAO_LASER';
				when 'REOL' then nm_tabela_w := 'OFT_OCULOS';
				when 'ABRO' then nm_tabela_w := 'OFT_ABERROMETRIA';
				else nm_tabela_w := null;
			end case;
		end if;

		if (nm_tabela_w IS NOT NULL AND nm_tabela_w::text <> '' AND nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		
			if (nm_tabela_w = 'OFT_TONOMETRIA') then
				if (item.ie_tipo_registro = 'TPNL') then
					ds_sql_adicional_w := ' and ie_tipo_tonometria = 1 ';
				else
					ds_sql_adicional_w := ' and ie_tipo_tonometria = 2 ';
				end if;
			elsif (nm_tabela_w = 'OFT_PAQUIMETRIA') then
				if (item.ie_tipo_registro = 'PAQL') then
					ds_sql_adicional_w := ' and ie_tipo_paquimetria = ''S'' ';
				else
					ds_sql_adicional_w := ' and ie_tipo_paquimetria = ''U'' ';
				end if;
         elsif (nm_tabela_w = 'OFT_ANGIO_RETINO') then
				if (item.ie_tipo_registro = 'AGRL') then
					ds_sql_adicional_w := ' and nvl(ie_tipo_registro,''A'') = ''A'' ';
				else
					ds_sql_adicional_w := ' and nvl(ie_tipo_registro,''A'') = ''R'' ';
				end if;
			elsif (nm_tabela_w = 'OFT_MOTILIDADE_OCULAR') then
				if (item.ie_tipo_registro = 'MOOL') then
					ds_sql_adicional_w := ' and ie_tipo_motilidade = ''B'' ';
				else
					ds_sql_adicional_w := ' and ie_tipo_motilidade = ''C'' ';
				end if;
			end if;
		
			ds_comando_w := ' select 	nvl(nr_seq_consulta, 0) '||
							' from ' || nm_tabela_w ||
							' where	'|| ds_campo_w || ' = ' || nr_sequencia_w || ds_sql_adicional_w;
			
			EXECUTE ds_comando_w
			into STRICT pending_ophtalmology_record_w.consultation_sequence;

		end if;
		
		RETURN NEXT pending_ophtalmology_record_w;
		END;
	END LOOP;

	RETURN;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION search_oft_pend_item_pck.get_data ( nr_sequencia_p bigint ) FROM PUBLIC; -- REVOKE ALL ON FUNCTION search_oft_pend_item_pck.get_data_atx ( nr_sequencia_p bigint ) FROM PUBLIC;
