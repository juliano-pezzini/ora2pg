-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_lote_pre_pagto_pck.gerar_procedimentos ( nr_seq_lote_p pls_lote_serv_pre_pgto.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_fat_item_w 	pls_fat_conta_item.nr_sequencia%type;
nr_seq_fat_proc_w	pls_fat_conta_proc.nr_sequencia%type;
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
ie_somente_codigo_w		pls_regra_conv_mat_interc.ie_somente_codigo%type;	
nr_seq_regra_conv_w		bigint;
ds_proc_convertido_w	pls_conversao_proc.ds_proc_envio%type;
	
C01 CURSOR FOR
	SELECT	b.nr_seq_conta,
			b.nr_sequencia
	from	pls_faturamento_prot a,
			pls_faturamento_conta b
	where	a.nr_sequencia = b.nr_seq_protocolo
	and 	a.nr_seq_lote_serv_pre_pgto = nr_seq_lote_p;
	
C02 CURSOR( nr_seq_conta_pc	pls_conta_proc.nr_seq_conta%type)FOR
	SELECT	a.nr_sequencia,
			a.cd_procedimento,
			a.ie_origem_proced,
			coalesce(a.cd_tipo_tabela, '22') cd_tipo_tabela,
			substr(obter_descricao_procedimento( a.cd_procedimento,a.ie_origem_proced),1,255) ds_procedimento,
			a.dt_procedimento,
			a.dt_inicio_proc,
			a.dt_fim_proc,
			a.ie_tecnica_utilizada,
			a.ie_tecnica_utilizada_imp,
			a.ie_tipo_despesa,
			a.ie_tipo_despesa_imp,
			a.ie_via_acesso_imp,
			a.ie_via_acesso,
			a.qt_procedimento,
			a.tx_item,
			a.tx_reducao_acrescimo_imp,
			a.vl_unitario,
			a.vl_liberado,
			a.cd_tipo_tabela_imp,
			a.nr_seq_setor_atend
	from	pls_conta_proc a
	where 	a.nr_seq_conta = nr_seq_conta_pc;								
	
C03 CURSOR(	nr_seq_conta_proc_pc pls_conta_proc.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
			a.cd_cbo_saude_imp cd_cbo_saude,
			null cd_conselho_prof, -- nao deve exportar essa informacao
			(	SELECT 	max(cd_pessoa_fisica)
				from 	pls_prestador 
				where 	nr_sequencia = a.nr_seq_prestador) cd_cpf_prest,
			(	select max(cd_tiss)
				from 	pls_grau_participacao
				where	nr_sequencia = a.nr_seq_grau_partic) cd_grau_partic,
			substr(obter_nome_pf(a.cd_medico),1,255) nm_profissional,
			a.nr_seq_conselho,
			a.nr_seq_grau_partic,
			a.nr_seq_prestador,
			(select max(sg_conselho) from conselho_profissional where nr_sequencia = a.nr_seq_conselho) sg_conselho,
			uf_conselho,
			nr_cpf_imp,
			cd_cgc_imp
	from	pls_proc_participante a
	where	a.nr_seq_conta_proc = nr_seq_conta_proc_pc;
								
BEGIN								

for r_c01_w in C01 loop
	
		for r_c02_w in C02(r_c01_w.nr_seq_conta) loop
	
			cd_procedimento_w := null;
			ie_origem_proced_w:= null;
			nr_seq_regra_conv_w := null;
			ie_somente_codigo_w := null;
			ds_proc_convertido_w := null;
			pls_obter_proced_conversao(	r_c02_w.cd_procedimento, r_c02_w.ie_origem_proced, null,
						cd_estabelecimento_p, 4, null,
						null, 'E', null,
						null, null, null,
						null, cd_procedimento_w, ie_origem_proced_w,
						nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(),
						null, null, null);
									
			--somente pega a descricao do item convertido caso regra apontar para 

			if ((nr_seq_regra_conv_w IS NOT NULL AND nr_seq_regra_conv_w::text <> '') and (coalesce(ie_somente_codigo_w::text, '') = '' or ie_somente_codigo_w = 'N'))  then
			
				select 	max(a.ds_proc_envio)
				into STRICT	ds_proc_convertido_w
				from	pls_conversao_proc a
				where	nr_sequencia = nr_seq_regra_conv_w;
			
			end if;
						
								
			insert into pls_fat_conta_item(
				cd_procedimento, cd_procedimento_conv, cd_ref_fabricante,
				cd_tipo_tabela_conv, cd_unidade_medida, ds_procedimento,           
				dt_atualizacao, dt_atualizacao_nrec, dt_execucao,               
				dt_fim, dt_inicio, ie_origem_proced_conv,     
				ie_tecnica_utilizada, ie_tecnica_utilizada_conv, ie_tipo_despesa,           
				ie_tipo_despesa_conv, ie_tipo_item, ie_tipo_item_conv,         
				ie_via_acesso, ie_via_acesso_conv, nm_usuario,                
				nm_usuario_nrec, nr_aut_funcionamento, nr_registro_anvisa,        
				nr_seq_conta, nr_seq_fornec_mat_conv, nr_seq_material_conv,      
				nr_sequencia, qt_executado, tx_item_via_acesso_conv,   
				tx_reducao_acrescimo, vl_total, vl_unitario,
				cd_tipo_tabela)
			values (
				coalesce(cd_procedimento_w, r_c02_w.cd_procedimento), coalesce(cd_procedimento_w, r_c02_w.cd_procedimento), null,
				r_c02_w.cd_tipo_tabela, null, substr(coalesce(ds_proc_convertido_w, r_c02_w.ds_procedimento),1,200),
				clock_timestamp(), clock_timestamp(), r_c02_w.dt_procedimento,
				r_c02_w.dt_fim_proc, r_c02_w.dt_inicio_proc, coalesce(ie_origem_proced_w, r_c02_w.ie_origem_proced),
				r_c02_w.ie_tecnica_utilizada_imp, r_c02_w.ie_tecnica_utilizada, r_c02_w.ie_tipo_despesa,
				r_c02_w.ie_tipo_despesa_imp, 'P', 'P',
				r_c02_w.ie_via_acesso_imp, r_c02_w.ie_via_acesso, nm_usuario_p,
				nm_usuario_p, null, null,
				r_c01_w.nr_sequencia, null, null, 
				nextval('pls_fat_conta_item_seq'), r_c02_w.qt_procedimento, r_c02_w.tx_item,
				r_c02_w.tx_reducao_acrescimo_imp, r_c02_w.vl_liberado, r_c02_w.vl_unitario, 
				r_c02_w.cd_tipo_tabela_imp
			) returning nr_sequencia into nr_seq_fat_item_w;

			insert into pls_fat_conta_proc(
					cd_procedimento_conv, cd_tipo_tabela_conv, dt_atualizacao,
					dt_atualizacao_nrec, dt_execucao_conv, dt_fim,
					dt_inicio, ie_origem_proced_conv, ie_tecnica_utilizada_conv,
					ie_tipo_despesa_conv, ie_via_acesso_conv, nm_usuario,
					nm_usuario_nrec, nr_seq_item_conta, nr_seq_setor_atend_conv,
					nr_sequencia, qt_executado, tx_item_via_acesso_conv,
					tx_reducao_acrescimo, vl_total, vl_unitario,
					nr_seq_conta_proc)
			values (	coalesce(cd_procedimento_w, r_c02_w.cd_procedimento), r_c02_w.cd_tipo_tabela, clock_timestamp(),
					clock_timestamp(), r_c02_w.dt_procedimento, r_c02_w.dt_fim_proc, 
					r_c02_w.dt_inicio_proc, coalesce(ie_origem_proced_w, r_c02_w.ie_origem_proced), r_c02_w.ie_tecnica_utilizada,
					r_c02_w.ie_tipo_despesa_imp, r_c02_w.ie_via_acesso, nm_usuario_p,
					nm_usuario_p, nr_seq_fat_item_w, r_c02_w.nr_seq_setor_atend,
					nextval('pls_fat_conta_proc_seq'), r_c02_w.qt_procedimento, r_c02_w.tx_item,
					r_c02_w.tx_reducao_acrescimo_imp, r_c02_w.vl_liberado, r_c02_w.vl_unitario,
					r_c02_w.nr_sequencia
					) returning nr_sequencia into nr_seq_fat_proc_w;
					
			for r_c03_w in C03(r_c02_w.nr_sequencia) loop
			
				insert into pls_fat_conta_item_equipe(
					cd_cbo_saude_profissional, cd_conselho_profissional, cd_cpf_prestador,
					cd_cpf_prestador_conv, cd_grau_partic, dt_atualizacao,            
					dt_atualizacao_nrec, nm_profissional, nm_usuario,                
					nm_usuario_nrec, nr_conselho_profissional, nr_seq_conta_proc,         
					nr_seq_grau_partic_conv, nr_seq_item_conta, nr_seq_prest_inter,        
					nr_sequencia, sg_conselho_imp, uf_conselho               
				)
				values ( r_c03_w.cd_cbo_saude, r_c03_w.cd_conselho_prof, r_c03_w.cd_cpf_prest,
						coalesce(r_c03_w.cd_cpf_prest, r_c03_w.nr_cpf_imp), r_c03_w.cd_grau_partic, clock_timestamp(),
						clock_timestamp(), r_c03_w.nm_profissional, nm_usuario_p,
						nm_usuario_p, r_c03_w.nr_seq_conselho, nr_seq_fat_proc_w,
						r_c03_w.nr_seq_grau_partic, nr_seq_fat_item_w, r_c03_w.nr_seq_prestador,
						nextval('pls_fat_conta_item_equipe_seq'), r_c03_w.sg_conselho, r_c03_w.uf_conselho );
			
			end loop;
				
		end loop;

	end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_pre_pagto_pck.gerar_procedimentos ( nr_seq_lote_p pls_lote_serv_pre_pgto.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
