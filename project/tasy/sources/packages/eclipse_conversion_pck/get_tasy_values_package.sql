-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION eclipse_conversion_pck.get_tasy_values ( nm_tasy_table_p text, nm_tasy_attribute_p text, cd_tasy_domain_p bigint default null) RETURNS SETOF T_TASY_VALUES AS $body$
DECLARE


r_tasy_values_w				r_tasy_values;	
nm_tabela_referencia_w		varchar(50);
nm_atributo_w				varchar(50);
nm_campo_desc_w				varchar(500);
sql_w						varchar(2000);
ie_tab_valida_w				boolean := false;
vl_key_w					varchar(50);
ds_value_w					varchar(2000);
tc 							t_crs;
qt_reg_w					bigint := 0;


BEGIN

if (coalesce(cd_tasy_domain_p::text, '') = '') then
	select	coalesce(max(nm_tabela_referencia),'X')
	into STRICT	nm_tabela_referencia_w
	from	integridade_atributo	b,
			integridade_referencial	a
	where	a.nm_tabela						= b.nm_tabela
	and		a.nm_integridade_referencial	= b.nm_integridade_referencial
	and		a.nm_tabela						= nm_tasy_table_p
	and		b.nm_atributo					= nm_tasy_attribute_p;
		
	if (nm_tabela_referencia_w <> 'X') then
			if (nm_tabela_referencia_w = 'CATEGORIA_CONVENIO') then
				nm_atributo_w	:= 'CD_CONVENIO || CD_CATEGORIA';
				nm_campo_desc_w	:= 'obter_nome_convenio(cd_convenio) || ' || chr(39) || ': ' || chr(39) || ' || ds_categoria ';
			else
				select	max(b.nm_atributo)
				into STRICT	nm_atributo_w
				from	indice_atributo	b,
						indice			a
				where	a.nm_tabela		= b.nm_tabela
				and		a.nm_indice		= b.nm_indice
				and		a.nm_tabela		= nm_tabela_referencia_w
				and		a.ie_tipo 		= 'PK';
				
				select	coalesce(max(nm_atributo),'X')
				into STRICT	nm_campo_desc_w
				from	tabela_atributo
				where	nm_tabela			= nm_tabela_referencia_w
				and		ie_tipo_atributo 	= 'VARCHAR2'
				and		ie_obrigatorio		= 'S'
				and     nm_atributo <> 'NM_USUARIO'
				and		qt_tamanho			> 20;
			end if;
			
			if (nm_campo_desc_w <> 'X') then
					sql_w := 'select count(*) from ' || nm_tabela_referencia_w || ' where 1=1';
					obter_valor_dinamico(sql_w, qt_reg_w);
														
					if (qt_reg_w < 1000) then 	
						sql_w	:=	' select '|| nm_atributo_w ||' vl_chave, '|| nm_campo_desc_w ||' ds_valor from '|| nm_tabela_referencia_w ||
						' where 1 = 1 ';
						ie_tab_valida_w	:= true;
						open tc for EXECUTE sql_w;
					end if;
			end if;
	end if;
else
	sql_w :=	' select vl_dominio vl_chave, substr(obter_valor_dominio(cd_dominio, vl_dominio), 1, 255) ds_valor '||
		' from valor_dominio_v where cd_dominio = :cd_dominio ';
		
	ie_tab_valida_w	:= true;
		
	open tc for EXECUTE sql_w using cd_tasy_domain_p;

end if;

if (ie_tab_valida_w) then
	loop
	fetch tc into vl_key_w, ds_value_w;
	EXIT WHEN NOT FOUND; /* apply on tc */
		r_tasy_values_w.vl_key		:= vl_key_w;
		r_tasy_values_w.ds_value	:= ds_value_w;
		RETURN NEXT r_tasy_values_w;
	end loop;	
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION eclipse_conversion_pck.get_tasy_values ( nm_tasy_table_p text, nm_tasy_attribute_p text, cd_tasy_domain_p bigint default null) FROM PUBLIC;
