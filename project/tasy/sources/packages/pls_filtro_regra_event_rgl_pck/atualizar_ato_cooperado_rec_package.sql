-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_filtro_regra_event_rgl_pck.atualizar_ato_cooperado_rec ( nr_seq_analise_rec_p pls_analise_conta.nr_sequencia%type, nr_seq_prot_rec_p pls_rec_glosa_protocolo.nr_sequencia%type, nr_seq_cta_rec_p pls_rec_glosa_conta.nr_sequencia%type) AS $body$
DECLARE


tb_nr_seq_resumo_rec_w	pls_util_cta_pck.t_number_table;
tb_ie_ato_cooperado_w	pls_util_cta_pck.t_varchar2_table_5;

c01 CURSOR(	nr_seq_analise_rec_pc	pls_analise_conta.nr_sequencia%type,
		nr_seq_prot_rec_pc	pls_rec_glosa_protocolo.nr_sequencia%type,
		nr_seq_cta_rec_pc	pls_rec_glosa_conta.nr_sequencia%type) FOR
	-- se for pela analise traz nestes dois unions

	SELECT 	d.nr_sequencia,
		coalesce(c.ie_ato_cooperado, e.ie_ato_cooperado)
	from 	pls_rec_glosa_conta a,
		pls_rec_glosa_proc b,
		pls_conta_medica_resumo c,
		pls_conta_rec_resumo_item d,
		pls_conta_proc e
	where 	(nr_seq_analise_rec_pc IS NOT NULL AND nr_seq_analise_rec_pc::text <> '')
	and	a.nr_seq_analise = nr_seq_analise_rec_pc
	and 	b.nr_seq_conta_rec = a.nr_sequencia
	and 	c.nr_seq_conta = a.nr_seq_conta
	and	c.nr_seq_conta_proc = b.nr_seq_conta_proc
	and	d.nr_seq_conta_rec = a.nr_sequencia
	and	d.nr_seq_proc_rec = b.nr_sequencia
	and	d.ie_situacao = 'A'
	and	e.nr_sequencia = b.nr_seq_conta_proc
	
union all

	SELECT 	d.nr_sequencia,
		coalesce(c.ie_ato_cooperado, e.ie_ato_cooperado)
	from 	pls_rec_glosa_conta a,
		pls_rec_glosa_mat b,
		pls_conta_medica_resumo c,
		pls_conta_rec_resumo_item d,
		pls_conta_mat e
	where 	(nr_seq_analise_rec_pc IS NOT NULL AND nr_seq_analise_rec_pc::text <> '')
	and	a.nr_seq_analise = nr_seq_analise_rec_pc
	and 	b.nr_seq_conta_rec = a.nr_sequencia
	and 	c.nr_seq_conta = a.nr_seq_conta
	and	c.nr_seq_conta_mat = b.nr_seq_conta_mat
	and	d.nr_seq_conta_rec = a.nr_sequencia
	and	d.nr_seq_mat_rec = b.nr_sequencia
	and	d.ie_situacao = 'A'
	and	e.nr_sequencia = b.nr_seq_conta_mat
	
union all

	-- se for pelo protocolo traz nestes dois unions

	select 	d.nr_sequencia,
		coalesce(c.ie_ato_cooperado, e.ie_ato_cooperado)
	from 	pls_rec_glosa_conta a,
		pls_rec_glosa_proc b,
		pls_conta_medica_resumo c,
		pls_conta_rec_resumo_item d,
		pls_conta_proc e
	where 	(nr_seq_prot_rec_pc IS NOT NULL AND nr_seq_prot_rec_pc::text <> '')
	and	a.nr_seq_protocolo = nr_seq_prot_rec_pc
	and 	b.nr_seq_conta_rec = a.nr_sequencia
	and 	c.nr_seq_conta = a.nr_seq_conta
	and	c.nr_seq_conta_proc = b.nr_seq_conta_proc
	and	d.nr_seq_conta_rec = a.nr_sequencia
	and	d.nr_seq_proc_rec = b.nr_sequencia
	and	d.ie_situacao = 'A'
	and	e.nr_sequencia = b.nr_seq_conta_proc
	
union all

	select 	d.nr_sequencia,
		coalesce(c.ie_ato_cooperado, e.ie_ato_cooperado)
	from 	pls_rec_glosa_conta a,
		pls_rec_glosa_mat b,
		pls_conta_medica_resumo c,
		pls_conta_rec_resumo_item d,
		pls_conta_mat e
	where 	(nr_seq_prot_rec_pc IS NOT NULL AND nr_seq_prot_rec_pc::text <> '')
	and	a.nr_seq_protocolo = nr_seq_prot_rec_pc
	and 	b.nr_seq_conta_rec = a.nr_sequencia
	and 	c.nr_seq_conta = a.nr_seq_conta
	and	c.nr_seq_conta_mat = b.nr_seq_conta_mat
	and	d.nr_seq_conta_rec = a.nr_sequencia
	and	d.nr_seq_mat_rec = b.nr_sequencia
	and	d.ie_situacao = 'A'
	and	e.nr_sequencia = b.nr_seq_conta_mat
	-- se for pelo protocolo traz nestes dois unions

	
union all

	select 	d.nr_sequencia,
		coalesce(c.ie_ato_cooperado, e.ie_ato_cooperado)
	from 	pls_rec_glosa_conta a,
		pls_rec_glosa_proc b,
		pls_conta_medica_resumo c,
		pls_conta_rec_resumo_item d,
		pls_conta_proc e
	where 	(nr_seq_cta_rec_pc IS NOT NULL AND nr_seq_cta_rec_pc::text <> '')
	and	a.nr_sequencia = nr_seq_cta_rec_pc
	and 	b.nr_seq_conta_rec = a.nr_sequencia
	and 	c.nr_seq_conta = a.nr_seq_conta
	and	c.nr_seq_conta_proc = b.nr_seq_conta_proc
	and	d.nr_seq_conta_rec = a.nr_sequencia
	and	d.nr_seq_proc_rec = b.nr_sequencia
	and	d.ie_situacao = 'A'
	and	e.nr_sequencia = b.nr_seq_conta_proc
	
union all

	select 	d.nr_sequencia,
		coalesce(c.ie_ato_cooperado, e.ie_ato_cooperado)
	from 	pls_rec_glosa_conta a,
		pls_rec_glosa_mat b,
		pls_conta_medica_resumo c,
		pls_conta_rec_resumo_item d,
		pls_conta_mat e
	where 	(nr_seq_cta_rec_pc IS NOT NULL AND nr_seq_cta_rec_pc::text <> '')
	and	a.nr_sequencia = nr_seq_cta_rec_pc
	and 	b.nr_seq_conta_rec = a.nr_sequencia
	and 	c.nr_seq_conta = a.nr_seq_conta
	and	c.nr_seq_conta_mat = b.nr_seq_conta_mat
	and	d.nr_seq_conta_rec = a.nr_sequencia
	and	d.nr_seq_mat_rec = b.nr_sequencia
	and	d.ie_situacao = 'A'
	and	e.nr_sequencia = b.nr_seq_conta_mat;


BEGIN

open c01(	nr_seq_analise_rec_p, nr_seq_prot_rec_p, nr_seq_cta_rec_p);
loop
	fetch c01 bulk collect into	tb_nr_seq_resumo_rec_w, tb_ie_ato_cooperado_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_ie_ato_cooperado_w.count = 0;

	forall i in tb_ie_ato_cooperado_w.first..tb_ie_ato_cooperado_w.last
		update	pls_conta_rec_resumo_item
		set	ie_ato_cooperado = tb_ie_ato_cooperado_w(i)
		where	nr_sequencia = tb_nr_seq_resumo_rec_w(i);
	commit;
end loop;
close c01;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_filtro_regra_event_rgl_pck.atualizar_ato_cooperado_rec ( nr_seq_analise_rec_p pls_analise_conta.nr_sequencia%type, nr_seq_prot_rec_p pls_rec_glosa_protocolo.nr_sequencia%type, nr_seq_cta_rec_p pls_rec_glosa_conta.nr_sequencia%type) FROM PUBLIC;
