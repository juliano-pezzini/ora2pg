-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_filtro_regra_event_rgl_pck.ie_reg_valido_fil_prest ( nr_seq_tipo_prest_pag_fil_p pls_pp_cta_filtro_prest.nr_seq_tipo_prestador%type, nr_seq_tipo_prest_prot_fil_p pls_pp_cta_filtro_prest.nr_seq_tipo_prest_prot%type, dt_ref_p timestamp, nr_seq_prestador_pgto_p pls_conta_rec_resumo_item.nr_seq_prestador_pgto%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type) RETURNS boolean AS $body$
DECLARE

				
ie_registro_valido_w	boolean;
qt_regra_tipo_prest_w	integer;
	

BEGIN

ie_registro_valido_w := true;

-- tipo prestador pagamento

if (nr_seq_tipo_prest_pag_fil_p IS NOT NULL AND nr_seq_tipo_prest_pag_fil_p::text <> '') then

	-- primeira deve ser verificado se ha tipo de prestador dentro de vigencia em OPS - Prestadores > Prestadores > Dados complementares > Tipo prestador adicional

	select	count(1)
	into STRICT	qt_regra_tipo_prest_w
	from	pls_prestador_tipo x
	where	x.nr_seq_prestador = nr_seq_prestador_pgto_p
	and	x.nr_seq_tipo = nr_seq_tipo_prest_pag_fil_p
	and	dt_ref_p between x.dt_inicio_vigencia_ref and x.dt_fim_vigencia_ref;
	
	-- caso nao haja tipo de prestador dentro de vigencia em OPS - Prestadores > Prestadores > Dados complementares > Tipo prestador adicional 

	-- verificamos o tipo do prestador diretamente no cadastro do mesmo

	if (qt_regra_tipo_prest_w = 0) then
		select	count(1)
		into STRICT	qt_regra_tipo_prest_w
		from	pls_prestador x
		where	x.nr_sequencia = nr_seq_prestador_pgto_p
		and	x.nr_seq_tipo_prestador = nr_seq_tipo_prest_pag_fil_p;
	end if;
	
	-- se o prestador nao e compativel com os filtros do evento invalida a regra

	if (qt_regra_tipo_prest_w = 0) then
		ie_registro_valido_w := false;
	end if;
end if;

-- Tipo prestador protocolo

if (nr_seq_tipo_prest_prot_fil_p IS NOT NULL AND nr_seq_tipo_prest_prot_fil_p::text <> '') then
	-- o filtro por tipo de prestador protocolo utiliza o nr_seq_prestador da pls_rec_glosa_protocolo,

	-- primeira deve ser verificado se ha tipo de prestador dentro de vigencia em 

	-- OPS - Prestadores > Prestadores > Dados complementares > Tipo prestador adicional

	select	count(1)
	into STRICT	qt_regra_tipo_prest_w
	from	pls_rec_glosa_protocolo x,
		pls_prestador_tipo y
	where	x.nr_sequencia = nr_seq_protocolo_p
	and	y.nr_seq_prestador = x.nr_seq_prestador
	and	y.nr_seq_tipo = nr_seq_tipo_prest_prot_fil_p
	and	x.dt_competencia_lote between y.dt_inicio_vigencia_ref and y.dt_fim_vigencia_ref;
	
	-- caso nao haja tipo de prestador dentro de vigencia em OPS - Prestadores > Prestadores > Dados complementares > Tipo prestador adicional 

	-- verificamos o tipo do prestador diretamente no cadastro do mesmo

	if (qt_regra_tipo_prest_w = 0) then
		
		select	count(1)
		into STRICT	qt_regra_tipo_prest_w
		from	pls_rec_glosa_protocolo x,
			pls_prestador y
		where	x.nr_sequencia = nr_seq_protocolo_p
		and	y.nr_sequencia = x.nr_seq_prestador
		and	y.nr_seq_tipo_prestador = nr_seq_tipo_prest_prot_fil_p;
	end if;
	
	-- se o prestador nao e compativel com os filtros do evento invalidas a regra

	if (qt_regra_tipo_prest_w = 0) then
		ie_registro_valido_w := false;
	end if;
end if;

return ie_registro_valido_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_filtro_regra_event_rgl_pck.ie_reg_valido_fil_prest ( nr_seq_tipo_prest_pag_fil_p pls_pp_cta_filtro_prest.nr_seq_tipo_prestador%type, nr_seq_tipo_prest_prot_fil_p pls_pp_cta_filtro_prest.nr_seq_tipo_prest_prot%type, dt_ref_p timestamp, nr_seq_prestador_pgto_p pls_conta_rec_resumo_item.nr_seq_prestador_pgto%type, nr_seq_protocolo_p pls_rec_glosa_protocolo.nr_sequencia%type) FROM PUBLIC;
