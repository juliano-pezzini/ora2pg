-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ish_rzv_birth_pck.get_ingeb (nr_seq_fila_p bigint) RETURNS SETOF T_INGEB AS $body$
DECLARE



r_ingeb_w			r_ingeb;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
	
nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_operacao_w			intpd_fila_transmissao.ie_operacao%type;
nr_atendimento_w			nascimento.nr_atendimento%type;
nr_sequencia_w			nascimento.nr_sequencia%type;
parto_w				parto%rowtype;
nascimento_w			nascimento%rowtype;
person_name_w			person_name%rowtype;
dt_geral_w			varchar(255);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_empresa_w			estabelecimento.cd_empresa%type;


c01 CURSOR FOR
SELECT	*
from	parto_eventos
where	nr_atendimento = nr_atendimento_w;

c01_w	c01%rowtype;



BEGIN
intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

begin
select	a.nr_seq_documento,
	CASE WHEN a.ie_operacao='A' THEN  'U' WHEN a.ie_operacao='I' THEN  'I' WHEN a.ie_operacao='E' THEN  'D' END
into STRICT	nr_seq_documento_w,
	ie_operacao_w
from	intpd_fila_transmissao a
where	a.nr_sequencia	 = nr_seq_fila_p;
exception
when others then
	nr_seq_documento_w	:= 	null;
end;

begin
nr_atendimento_w		:= 	obter_valor_campo_separador(nr_seq_documento_w, 1, current_setting('ish_rzv_birth_pck.ds_separador_w')::varchar(15));
nr_sequencia_w		:= 	obter_valor_campo_separador(nr_seq_documento_w, 2, current_setting('ish_rzv_birth_pck.ds_separador_w')::varchar(15));

select	*
into STRICT	nascimento_w
from	nascimento
where	nr_atendimento = nr_atendimento_w
and	nr_sequencia = nr_sequencia_w;
exception
when others then
	nascimento_w	:= 	null;
end;

begin
select	a.*
into STRICT	person_name_w
from	person_name a,
	pessoa_fisica b
where	b.nr_seq_person_name = a.nr_sequencia
and	b.cd_pessoa_fisica = nascimento_w.cd_pessoa_rn;
exception
when others then
	person_name_w	:=	null;
end;

begin
select	*
into STRICT	parto_w
from	parto
where	nr_atendimento = nr_atendimento_w  LIMIT 1;
exception
when others then
	parto_w	:= 	null;
end;

begin
select	a.cd_estabelecimento,
	b.cd_empresa
into STRICT	cd_estabelecimento_w,
	cd_empresa_w
from	atendimento_paciente a,
	estabelecimento b
where	a.cd_estabelecimento = b.cd_estabelecimento
and	a.nr_atendimento = nr_atendimento_w;
exception
when others then
	cd_estabelecimento_w	:=	null;
	cd_empresa_w		:=	null;
end;

reg_integracao_w.nm_elemento		:= 'INgeb';

reg_integracao_w.nm_tabela	:= 'ESTABELECIMENTO';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'mandt', 'N', cd_empresa_w, 'S', r_ingeb_w.mandt);
intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', cd_estabelecimento_w, 'S', r_ingeb_w.institution);


reg_integracao_w.nm_tabela			:= 'PARTO';

intpd_processar_atrib_envio(reg_integracao_w, 'DT_FIM_PARTO', 'endat', 'N', parto_w.dt_fim_parto, 'N', dt_geral_w);
r_ingeb_w.endat	:= 	to_char(to_date(dt_geral_w), 'YYYY-MM-DD');
intpd_processar_atrib_envio(reg_integracao_w, 'DT_FIM_PARTO', 'entim', 'N', parto_w.dt_fim_parto, 'N', dt_geral_w);
r_ingeb_w.entim	:= 	to_char(to_date(dt_geral_w), 'HH24:MI:SS');
intpd_processar_atrib_envio(reg_integracao_w, 'DS_OBSERVACAO', 'ekomtx', 'N', parto_w. ds_observacao, 'N', r_ingeb_w.ekomtx);
intpd_processar_atrib_envio(reg_integracao_w, 'QT_NASC_VIVOS', 'lfdnr', 'N', coalesce(parto_w.qt_nasc_vivos,0) + coalesce(parto_w.qt_nasc_mortos,0), 'N', r_ingeb_w.lfdnr);

if (coalesce(nascimento_w.ie_unico_nasc_vivo,'N') <> 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'QT_NASC_VIVOS', 'kztot', 'N', 'X', 'N', r_ingeb_w.kztot);
end if;

if (parto_w.ie_parto_normal = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_PARTO_NORMAL', 'S', r_ingeb_w.modus);
elsif (parto_w.ie_parto_cesaria = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_PARTO_CESARIA', 'S', r_ingeb_w.modus);
elsif (parto_w.ie_parto_forceps = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_PARTO_FORCEPS', 'S', r_ingeb_w.modus);
elsif (parto_w.ie_parto_episio = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_PARTO_EPISIO', 'S', r_ingeb_w.modus);
elsif (parto_w.ie_parto_analgesia = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_PARTO_ANALGESIA', 'S', r_ingeb_w.modus);
elsif (parto_w.ie_laqueadura = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_LAQUEADURA', 'S', r_ingeb_w.modus);
elsif (parto_w.ie_extracao_vacuo = 'S') then
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO', 'modus', 'N', 'IE_EXTRACAO_VACUO', 'S', r_ingeb_w.modus);	
end if;

intpd_processar_atrib_envio(reg_integracao_w, 'IE_GEMELARIDADE', 'mehrl', 'N', parto_w.ie_gemelaridade, 'N', r_ingeb_w.mehrl);

reg_integracao_w.nm_tabela			:= 'NASCIMENTO';

intpd_processar_atrib_envio(reg_integracao_w, 'DT_NASCIMENTO', 'gbdat', 'N', nascimento_w.dt_nascimento, 'N', dt_geral_w);
r_ingeb_w.gbdat	:= 	to_char(to_date(dt_geral_w), 'YYYY-MM-DD');
intpd_processar_atrib_envio(reg_integracao_w, 'DT_NASCIMENTO', 'gbtim', 'N', nascimento_w.dt_nascimento, 'N', dt_geral_w);
r_ingeb_w.gbtim	:= 	to_char(to_date(dt_geral_w), 'HH24:MI:SS');

intpd_processar_atrib_envio(reg_integracao_w, 'IE_SEXO', 'gschl', 'N', nascimento_w.ie_sexo, 'S', r_ingeb_w.gschl);
intpd_processar_atrib_envio(reg_integracao_w, 'QT_PESO_SALA_PARTO', 'gbgew', 'N', coalesce(nascimento_w.qt_peso_sala_parto, nascimento_w.qt_peso), 'N', r_ingeb_w.gbgew);
intpd_processar_atrib_envio(reg_integracao_w, 'QT_PESO_SALA_PARTO', 'gwein', 'N', 'G', 'N', r_ingeb_w.gwein); /*'Always grams (G) but there is no field for it'*/
intpd_processar_atrib_envio(reg_integracao_w, 'QT_ALTURA', 'gbgro', 'N', nascimento_w.qt_altura, 'N', r_ingeb_w.gbgro);
intpd_processar_atrib_envio(reg_integracao_w, 'QT_ALTURA', 'grein', 'N', 'CM', 'N', r_ingeb_w.grein); /*'Always centimetres (CM) but there is no field for it'*/
intpd_processar_atrib_envio(reg_integracao_w, 'QT_PC', 'headsize', 'N', nascimento_w.qt_pc, 'N', r_ingeb_w.headsize);
intpd_processar_atrib_envio(reg_integracao_w, 'DS_OBSERVACAO', 'kztxt', 'N', nascimento_w.ds_observacao, 'N', r_ingeb_w.kztxt);
intpd_processar_atrib_envio(reg_integracao_w, 'QT_APGAR_PRIM_MIN', 'bwert', 'N', nascimento_w.qt_apgar_prim_min, 'N', r_ingeb_w.bwert);
intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO', 'erdat', 'N', nascimento_w.dt_atualizacao, 'N', dt_geral_w);
r_ingeb_w.erdat	:=	to_char(to_date(dt_geral_w), 'YYYY-MM-DD');
intpd_processar_atrib_envio(reg_integracao_w, 'NM_USUARIO', 'erusr', 'N', nascimento_w.nm_usuario, 'N', r_ingeb_w.erusr);

reg_integracao_w.nm_tabela			:= 'PERSON_NAME';
intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME', 'vname', 'N', person_name_w.ds_given_name, 'N', r_ingeb_w.vname);
intpd_processar_atrib_envio(reg_integracao_w, 'IE_OPERACAO', 'kz', 'N', ie_operacao_w, 'N', r_ingeb_w.kz);
--Segundo Daniel, esta eh a logica para preenchimento do camp ZIND indicado na OS 2095822
if (r_ingeb_w.gbdat IS NOT NULL AND r_ingeb_w.gbdat::text <> '') then
	r_ingeb_w.zind	:= 'G';
elsif (r_ingeb_w.endat IS NOT NULL AND r_ingeb_w.endat::text <> '') then
	r_ingeb_w.zind	:= 'E';
end if;

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (c01_w.ie_alt_cromossomica = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_ALT_CROMOSSOMICA', 'kzkom', 'N', 'X', 'N', r_ingeb_w.kzkom);
	elsif (c01_w.ie_dpp = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DPP', 'kzkom', 'N', 'X', 'N', r_ingeb_w.kzkom);
	elsif (c01_w.ie_malformacao = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_MALFORMACAO', 'kzkom', 'N', 'X', 'N', r_ingeb_w.kzkom);
	elsif (c01_w.ie_placenta_prev = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_PLACENTA_PREV', 'kzkom', 'N', 'X', 'N', r_ingeb_w.kzkom);
	elsif (c01_w.ie_prolapso_cordao = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_PROLAPSO_CORDAO', 'kzkom', 'N', 'X', 'N', r_ingeb_w.kzkom);
	elsif (c01_w.ie_sofrimento_fetal_agudo = 'S') then
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_SOFRIMENTO_FETAL_AGUDO', 'kzkom', 'N', 'X', 'N', r_ingeb_w.kzkom);	
	end if;	
	end;
end loop;
close c01;

RETURN NEXT r_ingeb_w;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_rzv_birth_pck.get_ingeb (nr_seq_fila_p bigint) FROM PUBLIC;
