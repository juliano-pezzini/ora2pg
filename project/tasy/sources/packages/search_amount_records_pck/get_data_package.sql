-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION search_amount_records_pck.get_data ( nr_seq_item_p bigint, cd_pessoa_fisica_p text, nr_seq_consulta_p bigint, nr_atendimento_p bigint, ie_visualiza_inativos_p text) RETURNS SETOF T_OBJETO_ROW_DATA AS $body$
DECLARE



t_objeto_row_w				t_objeto_row;

qt_registro_w  			bigint;
cd_perfil_w			integer;
nm_usuario_w			varchar(15);
nr_seq_consulta_w			bigint;
cd_setor_atendimento_w		integer;
nm_tabela_w			varchar(255);
sql_select_w			varchar(2000);
sql_where_w			varchar(2000);
sql_where_inativos_w		varchar(2000);
sql_where_adicional_w		varchar(2000);
ds_sql_w				varchar(4000);
C02				integer;
AMOUNT_PERSON_W		bigint := 0;
AMOUNT_MEDICAL_APPOINTMENT_W bigint := 0;
amount_apointment_w bigint := 0;
RETORNO_W			integer;
nm_atributo_w			varchar(255);
nm_atributo_lib_w 			varchar(255);
ds_comando_w			varchar(255);
ds_seq_consultas_w		varchar(500);
ds_erro_w   varchar(255);


BEGIN
begin
cd_perfil_w 		:= 	wheb_usuario_pck.get_cd_perfil;
nm_usuario_w		:=	wheb_usuario_pck.get_nm_usuario;
cd_setor_atendimento_w	:=	wheb_usuario_pck.get_cd_setor_atendimento;

sql_select_w			:= 'select 	a.nr_seq_consulta from ';

IF (ie_visualiza_inativos_p = 'N') THEN
	sql_where_inativos_w	:=	' and	a.dt_inativacao is null ';
END IF;

CASE nr_seq_item_p
		WHEN 2 THEN
			nm_tabela_w := ' oft_anamnese a ';
		WHEN 6 THEN
			nm_tabela_w := ' oft_exame_externo a ';
		WHEN 7 THEN
			nm_tabela_w := ' oft_motilidade_ocular a ';
		WHEN 8 THEN
			nm_tabela_w := ' oft_tonometria a ';
			sql_where_adicional_w	:= ' and a.ie_tipo_tonometria = 1 ';
		WHEN 9 THEN
			nm_tabela_w := ' oft_fundoscopia a ';
		WHEN 10 THEN
			nm_tabela_w := ' oft_biomicroscopia a ';
		WHEN 12 THEN
			nm_tabela_w := ' oft_diagnostico a ';
		WHEN 13 THEN
			nm_tabela_w := ' oft_oculos a ';
		WHEN 14 THEN
			nm_tabela_w := ' oft_consulta_lente a ';
		WHEN 15 THEN
			SELECT 	COUNT(*)
			INTO STRICT 	amount_person_w
			FROM    CIRURGIA
			WHERE   cd_pessoa_fisica = cd_pessoa_fisica_p
			AND		ie_status_cirurgia NOT IN (3,4);

			IF (coalesce(nr_atendimento_p,0) > 0) THEN
				SELECT 	COUNT(*)
				INTO STRICT 	amount_apointment_w
				FROM    CIRURGIA
				WHERE   nr_atendimento = nr_atendimento_p
				AND		ie_status_cirurgia NOT IN (3,4);
			END IF;
		WHEN 16 THEN
			IF (ie_visualiza_inativos_p = 'N') THEN
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	MED_RECEITA
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario = nm_usuario_w))
				AND 		coalesce(dt_inativacao::text, '') = '';
			ELSE
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	MED_RECEITA
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario = nm_usuario_w));
			END IF;
			IF (coalesce(nr_atendimento_p,0) > 0) THEN
				SELECT 	COUNT(*)
				INTO STRICT 	amount_apointment_w
				FROM    MED_RECEITA
				WHERE   nr_atendimento_hosp 	= nr_atendimento_p
				AND 	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario = nm_usuario_w))
				AND 	(dt_inativacao IS NOT NULL AND dt_inativacao::text <> '');
			END IF;
		WHEN 17 THEN
			nm_tabela_w := ' oft_dnp a ';
		WHEN 19 THEN
			nm_tabela_w := ' oft_correcao_atual a ';
		WHEN 21 THEN
			IF (ie_visualiza_inativos_p = 'N') THEN
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	PEP_PAC_CI
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 		coalesce(dt_inativacao::text, '') = '';
			ELSE
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	PEP_PAC_CI
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w));
			END IF;
			IF (coalesce(nr_atendimento_p,0) > 0) THEN
				SELECT 	COUNT(*)
				INTO STRICT 	amount_apointment_w
				FROM    PEP_PAC_CI
				WHERE   nr_atendimento 	= nr_atendimento_p
				AND 	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 	(dt_inativacao IS NOT NULL AND dt_inativacao::text <> '');
			END IF;
		WHEN 23 THEN
			nm_tabela_w := ' oft_tonometria a ';
			sql_where_adicional_w	:= ' and a.ie_tipo_tonometria = 2 ';
		WHEN 24 THEN
			nm_tabela_w := ' oft_conduta a ';
		WHEN 28 THEN
			IF (ie_visualiza_inativos_p = 'N') THEN
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	ATESTADO_PACIENTE
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 		coalesce(dt_inativacao::text, '') = '';
			ELSE
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	ATESTADO_PACIENTE
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w));
         end if;
		WHEN 31 THEN
			nm_tabela_w := ' oft_anexo a ';
		WHEN 69 THEN
			nm_tabela_w := ' oft_curva_tencional a ';
		WHEN 71 THEN
			nm_tabela_w := ' oft_angio_retino a ';
         sql_where_adicional_w	:= ' and nvl(a.ie_tipo_registro,''A'') = ''A''';
		WHEN 298 THEN
			nm_tabela_w := ' oft_angio_retino a ';
         sql_where_adicional_w	:= ' and nvl(a.ie_tipo_registro,''A'') = ''R''';
		WHEN 73 THEN
			nm_tabela_w := ' oft_gonioscopia a ';
		WHEN 75 THEN
			nm_tabela_w := ' pedido_exame_externo a ';
		WHEN 78 THEN
			nm_tabela_w := ' oft_biometria a ';
		WHEN 80 THEN
			nm_tabela_w := ' oft_microscopia_especular a ';
		WHEN 82 THEN
			nm_tabela_w := ' oft_pupilometria a ';
		WHEN 84 THEN
			nm_tabela_w := ' oft_paquimetria a ';
		WHEN 86 THEN
			nm_tabela_w := ' oft_motilidade_ocular a ';
		WHEN 160 THEN
			nm_tabela_w := ' pep_orientacao_geral a ';
		WHEN 162 THEN
			IF (ie_visualiza_inativos_p = 'N') THEN
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	EVOLUCAO_PACIENTE
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		ie_tipo_evolucao <> '9'
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 		coalesce(dt_inativacao::text, '') = '';
			ELSE
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	EVOLUCAO_PACIENTE
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		ie_tipo_evolucao <> '9'
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w));
			END IF;

			IF (coalesce(nr_atendimento_p,0) > 0) THEN
				SELECT	COUNT(*)
				INTO STRICT 	amount_apointment_w
				FROM    EVOLUCAO_PACIENTE
				WHERE    nr_atendimento = nr_atendimento_p
				AND 	ie_tipo_evolucao <> '9'
				AND 	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 	coalesce(dt_inativacao::text, '') = '';
			END IF;
		WHEN 165 THEN
			SELECT 	COUNT(*)
			INTO STRICT 	   amount_person_w
			FROM   	laudo_paciente_v a
			WHERE  	a.nr_atendimento IN (SELECT nr_atendimento
													FROM   ATENDIMENTO_PACIENTE
													WHERE  cd_pessoa_fisica = cd_pessoa_fisica_p)
                                                                and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

			IF (coalesce(nr_atendimento_p,0)	> 0) THEN
				SELECT 	COUNT(*)
				INTO STRICT 	   amount_apointment_w
				FROM   	laudo_paciente_v a
				WHERE  	a.nr_atendimento = nr_atendimento_p;
			END IF;
		WHEN 168 THEN
			nm_tabela_w := ' oft_imagem_exame a ';
		WHEN 171 THEN
			nm_tabela_w := ' oft_campimetria a ';
		WHEN 173 THEN
			nm_tabela_w := ' oft_tomografia_olho a ';
		WHEN 175 THEN
			nm_tabela_w := ' oft_cerastocopia a ';
		WHEN 177 THEN
			nm_tabela_w := ' oft_oct a ';
		WHEN 220 THEN
			IF (ie_visualiza_inativos_p = 'N') THEN
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	MED_AVALIACAO_PACIENTE
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		Obter_Se_Avaliacao_Pf(nr_seq_tipo_avaliacao,cd_pessoa_fisica_p) = 'S'
				AND 		Obter_Se_Avaliacao_Perfil(cd_perfil_w,nr_seq_tipo_avaliacao,cd_setor_atendimento_w) = 'S'
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 		coalesce(dt_inativacao::text, '') = '';
			ELSE
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	MED_AVALIACAO_PACIENTE
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		Obter_Se_Avaliacao_Pf(nr_seq_tipo_avaliacao,cd_pessoa_fisica_p) = 'S'
				AND 		Obter_Se_Avaliacao_Perfil(cd_perfil_w,nr_seq_tipo_avaliacao,cd_setor_atendimento_w) = 'S'
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w));
			END IF;
		WHEN 236 THEN
			nm_tabela_w := ' oft_potencial_acuidade a ';
		WHEN 242 THEN
			nm_tabela_w := ' oft_iridectomia a ';
		WHEN 244 THEN
			nm_tabela_w := ' oft_olho_seco a ';
		WHEN 245 THEN
			nm_tabela_w := ' oft_daltonismo a ';
		WHEN 247 THEN
			nm_tabela_w 				:= ' oft_refracao a ';
			sql_where_adicional_w	:= ' and ((a.ie_refracao_sugerida = ''N'') OR (a.ie_refracao_sugerida IS NULL)) ';
		WHEN 248 THEN
			nm_tabela_w 				:= ' oft_auto_refracao a ';
			sql_where_adicional_w	:= ' and ((a.ie_refracao_sugerida = ''N'') OR (a.ie_refracao_sugerida IS NULL)) ';
		WHEN 254 THEN
			nm_tabela_w := ' oft_fotocoagulacao_laser a ';
		WHEN 255 THEN
			nm_tabela_w := ' oft_sobrecarga_hidrica a ';
		WHEN 256 THEN
			nm_tabela_w := ' oft_capsulotomia a ';
		WHEN 276 THEN
			nm_tabela_w := ' oft_mapeamento_retina a ';
		WHEN 277 THEN
			nm_tabela_w := ' oft_ultrassonografia a ';
		WHEN 302 THEN
			nm_tabela_w := ' oft_aberrometria a ';
		WHEN 297 THEN
			IF (ie_visualiza_inativos_p = 'N') THEN
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	paciente_justificativa
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 		coalesce(dt_inativacao::text, '') = '';
			ELSE
				SELECT 	COUNT(*)
				INTO STRICT 		amount_person_w
				FROM    	paciente_justificativa
				WHERE   	cd_pessoa_fisica = cd_pessoa_fisica_p
				AND 		((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w));
			END IF;

			IF (coalesce(nr_atendimento_p,0) > 0) THEN
				SELECT	COUNT(*)
				INTO STRICT 	   amount_apointment_w
				FROM     paciente_justificativa
				WHERE    nr_atendimento = nr_atendimento_p
				AND 	   ((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') OR (nm_usuario_nrec = nm_usuario_w))
				AND 	   (dt_inativacao IS NOT NULL AND dt_inativacao::text <> '');
			END IF;
		ELSE
			nm_tabela_w := NULL;
	END CASE;

IF (nm_tabela_w IS NOT NULL AND nm_tabela_w::text <> '') THEN
	ds_comando_w := 	'select	max(nm_atributo) '||
							'from		tabela_atributo '||
							'where	nm_atributo in (''NM_USUARIO'',''NM_USUARIO_NREC'') '||
							'and		nm_tabela = '||nm_tabela_w;
	Executar_SQL_Dinamico(ds_comando_w,nm_atributo_w);

	ds_comando_w := 	'select	max(nm_atributo) '||
							'from		tabela_atributo '||
							'where	nm_atributo = ''DT_LIBERACAO'' '||
							'and		nm_tabela = '||nm_tabela_w;
	Executar_SQL_Dinamico(ds_comando_w,nm_atributo_lib_w);
	
	ds_seq_consultas_w := 	'(SELECT	x.nr_sequencia
						FROM     OFT_CONSULTA x
						WHERE	x.cd_pessoa_fisica 	= :cd_pessoa_fisica_p
						AND		((NVL(:nr_atendimento_p,0) = 0) OR (nr_atendimento = :nr_atendimento_p))
						and		x.dt_cancelamento is null
						union
						SELECT	x.nr_sequencia
						FROM    OFT_CONSULTA x
						WHERE	x.nr_sequencia = :nr_seq_consulta_p
						AND		:cd_pessoa_fisica_p is null
						and		(NVL(:nr_atendimento_p,0) = 0)
						and		x.dt_cancelamento is null)';

	IF (coalesce(nm_atributo_lib_w::text, '') = '') THEN
		sql_where_w				:=	' where  a.nr_seq_consulta in '|| ds_seq_consultas_w;
	ELSIF (coalesce(nm_atributo_w::text, '') = '') THEN
		sql_where_w				:=	' where  a.nr_seq_consulta in' || ds_seq_consultas_w ||
										' and		 (a.dt_liberacao is not null) ';
	ELSE
		sql_where_w				:=	' where  a.nr_seq_consulta in' || ds_seq_consultas_w ||
										' and		 ((a.dt_liberacao is not null) or (:nm_atributo_p = :nm_usuario_p)) ';
	END IF;

	ds_sql_w := sql_select_w||nm_tabela_w||sql_where_w||sql_where_inativos_w||sql_where_adicional_w;

	C02 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C02, ds_sql_w, dbms_sql.Native);

	DBMS_SQL.DEFINE_COLUMN(C02,1,nr_seq_consulta_w);

	IF (position(':NM_ATRIBUTO_P' in UPPER(ds_sql_w)) > 0) THEN
		DBMS_SQL.BIND_VARIABLE(C02,'NM_ATRIBUTO_P', nm_atributo_w);
	END IF;
	IF (position(':NM_USUARIO_P' in UPPER(ds_sql_w)) > 0) THEN
		DBMS_SQL.BIND_VARIABLE(C02,'NM_USUARIO_P', nm_usuario_w);
	END IF;
	IF (position(':CD_PESSOA_FISICA_P' in UPPER(ds_sql_w)) > 0) THEN
		DBMS_SQL.BIND_VARIABLE(C02,'CD_PESSOA_FISICA_P', cd_pessoa_fisica_p);
	END IF;
	IF (position(':NR_ATENDIMENTO_P' in UPPER(ds_sql_w)) > 0) THEN
		DBMS_SQL.BIND_VARIABLE(C02,'NR_ATENDIMENTO_P', nr_atendimento_p);
	END IF;
	IF (position(':NR_SEQ_CONSULTA_P' in UPPER(ds_sql_w)) > 0) THEN
		DBMS_SQL.BIND_VARIABLE(C02,'NR_SEQ_CONSULTA_P', nr_seq_consulta_p);
	END IF;

	retorno_w := DBMS_SQL.EXECUTE(C02);

	WHILE( DBMS_SQL.FETCH_ROWS(C02) > 0 ) LOOP
		BEGIN
		DBMS_SQL.COLUMN_VALUE(C02,1,nr_seq_consulta_w);
		amount_person_w := amount_person_w + 1;
		IF (nr_seq_consulta_w = nr_seq_consulta_p) THEN
			amount_medical_appointment_w := amount_medical_appointment_w + 1;
		END IF;
		END;
	END LOOP;
	DBMS_SQL.CLOSE_CURSOR(C02);
	t_objeto_row_w.amount_person				:= amount_person_w;
	t_objeto_row_w.amount_medical_appointment	:= amount_medical_appointment_w;
	t_objeto_row_w.amount_apointment			:= amount_person_w;
	RETURN NEXT t_objeto_row_w;
ELSE
	t_objeto_row_w.amount_person			:= amount_person_w;
	t_objeto_row_w.amount_apointment		:= amount_apointment_w;
	t_objeto_row_w.amount_medical_appointment		:= amount_person_w;
	RETURN NEXT t_objeto_row_w;
END IF;

exception
when others then
   ds_erro_w := substr(SQLERRM(SQLSTATE),1,255);
end;

RETURN;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION search_amount_records_pck.get_data ( nr_seq_item_p bigint, cd_pessoa_fisica_p text, nr_seq_consulta_p bigint, nr_atendimento_p bigint, ie_visualiza_inativos_p text) FROM PUBLIC;
