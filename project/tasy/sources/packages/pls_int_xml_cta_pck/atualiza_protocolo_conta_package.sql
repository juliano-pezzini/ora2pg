-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_int_xml_cta_pck.atualiza_protocolo_conta ( nr_seq_lote_protocolo_p pls_lote_protocolo_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
--vari_veis para armazenar informa__es a serem atualizadas

tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_regra_periodo_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_periodo_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_conv_w	pls_util_cta_pck.t_number_table;
tb_qt_contas_protocolo_w	pls_util_cta_pck.t_number_table;
tb_dt_aceite_w			pls_util_cta_pck.t_date_table;

-- vari_vel de controle do loop

nr_contador_w		integer;

C01 CURSOR(nr_seq_lote_protocolo_pc	pls_lote_protocolo_conta.nr_sequencia%type) FOR
	SELECT	prot.nr_sequencia,
		prot.nm_usuario,
		prot.nr_seq_prestador,
		prot.dt_mes_competencia,
		prot.ie_origem_protocolo,
		prot.dt_protocolo,
		prot.ie_tipo_guia,
		CASE WHEN ie_gravar_quantidade_w='S' THEN (	SELECT count(1)							from 	pls_conta x							where	x.nr_seq_protocolo = prot.nr_sequencia)  ELSE 0 END  qt_contas_protocolo,
		(select	coalesce(max(x.dt_aceite), clock_timestamp())
		from	ptu_fatura x
		where	x.nr_seq_protocolo = prot.nr_sequencia) dt_aceite,
		prot.dt_recebimento,
		imp.dt_mes_competencia_conv
	from	pls_protocolo_conta	prot,
		pls_protocolo_conta_imp	imp
	where	prot.nr_seq_lote_conta	= nr_seq_lote_protocolo_pc
	and	prot.ie_situacao	= 'A'
	and	imp.nr_sequencia	= prot.nr_seq_imp;

BEGIN

nr_contador_w	:= 0;

--limpa as vari_veis para iniciar o processo

SELECT * FROM pls_int_xml_cta_pck.atualiza_pls_protocolo_conta(	tb_nr_seq_protocolo_w, tb_nr_seq_prestador_conv_w, tb_nr_seq_periodo_w, tb_qt_contas_protocolo_w, cd_estabelecimento_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_protocolo_w := _ora2pg_r.tb_nr_seq_protocolo_p; tb_nr_seq_prestador_conv_w := _ora2pg_r.tb_nr_seq_prestador_conv_p; tb_nr_seq_periodo_w := _ora2pg_r.tb_nr_seq_periodo_p; tb_qt_contas_protocolo_w := _ora2pg_r.tb_qt_contas_protocolo_p;

for r_c01_w in C01(nr_seq_lote_protocolo_p) loop

	tb_nr_seq_protocolo_w(nr_contador_w)		:= r_c01_w.nr_sequencia;
	tb_nr_seq_prestador_conv_w(nr_contador_w)	:= r_c01_w.nr_seq_prestador;
	tb_qt_contas_protocolo_w(nr_contador_w)		:= r_c01_w.qt_contas_protocolo;
	tb_dt_aceite_w(nr_contador_w)			:= r_c01_w.dt_aceite;
	
	--Obter per_odo de pagamento

	pls_obter_periodo_pgto(	tb_nr_seq_prestador_conv_w(nr_contador_w), r_c01_w.dt_mes_competencia_conv, r_c01_w.ie_tipo_guia, tb_nr_seq_regra_periodo_w(nr_contador_w), tb_nr_seq_periodo_w(nr_contador_w));
		
	-- se atingiu a quantidade de registros manda pro banco

	if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then
		--Atualiza a tabela PLS_PROTOCOLO_CONTA para INTEGRADO

		SELECT * FROM pls_int_xml_cta_pck.atualiza_pls_protocolo_conta(	tb_nr_seq_protocolo_w, tb_nr_seq_prestador_conv_w, tb_nr_seq_periodo_w, tb_qt_contas_protocolo_w, cd_estabelecimento_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_protocolo_w := _ora2pg_r.tb_nr_seq_protocolo_p; tb_nr_seq_prestador_conv_w := _ora2pg_r.tb_nr_seq_prestador_conv_p; tb_nr_seq_periodo_w := _ora2pg_r.tb_nr_seq_periodo_p; tb_qt_contas_protocolo_w := _ora2pg_r.tb_qt_contas_protocolo_p;
		
		nr_contador_w	:= 0;
	else
		nr_contador_w	:= nr_contador_w + 1;
	end if;				
	
end loop;

--Manda para o banco os registros que ainda ficaram nas vari_veis

SELECT * FROM pls_int_xml_cta_pck.atualiza_pls_protocolo_conta(	tb_nr_seq_protocolo_w, tb_nr_seq_prestador_conv_w, tb_nr_seq_periodo_w, tb_qt_contas_protocolo_w, cd_estabelecimento_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_protocolo_w := _ora2pg_r.tb_nr_seq_protocolo_p; tb_nr_seq_prestador_conv_w := _ora2pg_r.tb_nr_seq_prestador_conv_p; tb_nr_seq_periodo_w := _ora2pg_r.tb_nr_seq_periodo_p; tb_qt_contas_protocolo_w := _ora2pg_r.tb_qt_contas_protocolo_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_int_xml_cta_pck.atualiza_protocolo_conta ( nr_seq_lote_protocolo_p pls_lote_protocolo_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
