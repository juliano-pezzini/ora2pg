-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_int_xml_cta_pck.pls_int_nv_conta_proc ( nr_seq_lote_protocolo_p pls_lote_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_seq_conta_proc_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_imp_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_item_conta_w			pls_util_cta_pck.t_number_table;
tb_qt_executado_w			pls_util_cta_pck.t_number_table;
tb_dt_inicio_w				pls_util_cta_pck.t_date_table;
tb_dt_fim_w				pls_util_cta_pck.t_date_table;
tb_tx_reducao_acrescimo_w		pls_util_cta_pck.t_number_table;
tb_vl_unitario_w			pls_util_cta_pck.t_number_table;
tb_vl_total_w				pls_util_cta_pck.t_number_table;
tb_qt_unidade_serv_w			pls_util_cta_pck.t_number_table;
tb_vl_proc_copartic_w			pls_util_cta_pck.t_number_table;
tb_ie_autorizado_w			pls_util_cta_pck.t_varchar2_table_1;
tb_cd_dente_w				pls_util_cta_pck.t_varchar2_table_2;
tb_cd_regiao_boca_w			pls_util_cta_pck.t_varchar2_table_5;
tb_cd_face_dente_w			pls_util_cta_pck.t_varchar2_table_5;
tb_ie_origem_proced_conv_w		pls_util_cta_pck.t_number_table;
tb_cd_procedimento_conv_w		pls_util_cta_pck.t_number_table;
tb_cd_tipo_tabela_conv_w		pls_util_cta_pck.t_varchar2_table_10;
tb_ie_tecnica_utilizada_conv_w		pls_util_cta_pck.t_varchar2_table_1;
tb_ie_via_acesso_conv_w			pls_util_cta_pck.t_varchar2_table_1;
tb_tx_item_via_acesso_conv_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_pacote_conv_w			pls_util_cta_pck.t_number_table;
tb_dt_execucao_conv_w			pls_util_cta_pck.t_date_table;
tb_nr_seq_setor_atend_conv_w		pls_util_cta_pck.t_number_table;
tb_nr_regra_orig_proced_conv_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_item_conv_w			pls_util_cta_pck.t_varchar2_table_2;
tb_nr_regra_tab_tiss_conv_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_despesa_conv_w		pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_regra_item_conv_w		pls_util_cta_pck.t_number_table;
tb_cd_seq_prestador_conv_w		pls_util_cta_pck.t_varchar2_table_50;
tb_nr_regra_campo_esp_conv_w		pls_util_cta_pck.t_number_table;
tb_cd_procedimento_w			pls_util_cta_pck.t_varchar2_table_10;
tb_cd_tipo_tabela_w			pls_util_cta_pck.t_varchar2_table_2;
tb_ds_procedimento_w			pls_util_cta_pck.t_varchar2_table_255;
tb_dt_execucao_w			pls_util_cta_pck.t_date_table;
tb_ie_tecnica_utilizada_w		pls_util_cta_pck.t_varchar2_table_1;
tb_ie_tipo_despesa_w			pls_util_cta_pck.t_varchar2_table_2;
tb_ie_via_acesso_w			pls_util_cta_pck.t_varchar2_table_1;
tb_nr_seq_conta_w			pls_util_cta_pck.t_number_table;
tx_item_via_acesso_conv_w		pls_util_cta_pck.t_number_table;
tb_seq_grupo_ans_w			pls_util_cta_pck.t_number_table;	
tb_seq_grupo_ans_conv_w			pls_util_cta_pck.t_number_table;
tb_seq_cobertura_w			pls_util_cta_pck.t_number_table;
tb_seq_sca_cobertura_w			pls_util_cta_pck.t_number_table;
tb_tipo_cobertura_w			pls_util_cta_pck.t_varchar2_table_1;
tb_nr_seq_item_tiss_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_item_tiss_vinculo_w		pls_util_cta_pck.t_number_table;
nr_seq_conta_proc_w			pls_conta_proc.nr_sequencia%type;

C01 CURSOR(nr_seq_lote_protocolo_pc	pls_lote_protocolo_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_conta_proc,
		a.nr_seq_conta nr_seq_conta_imp,
		a.nr_seq_item_conta,
		a.qt_executado,
		a.dt_inicio,
		a.dt_fim,
		a.tx_reducao_acrescimo,
		a.vl_unitario,
		a.vl_total,
		a.qt_unidade_serv,
		a.vl_proc_copartic,
		a.ie_autorizado,
		a.cd_dente,
		a.cd_regiao_boca,
		a.cd_face_dente,
		a.ie_origem_proced_conv,
		a.cd_procedimento_conv,
		a.cd_tipo_tabela_conv,
		a.ie_tecnica_utilizada_conv,
		a.ie_via_acesso_conv,
		a.tx_item_via_acesso_conv,
		a.nr_seq_pacote_conv,
		a.dt_execucao_conv,
		a.nr_seq_setor_atend_conv,
		b.nr_seq_regra_orig_proced_conv,
		b.ie_tipo_item_conv,
		b.nr_seq_regra_tab_tiss_conv,
		b.ie_tipo_despesa_conv,
		b.nr_seq_regra_item_conv,
		b.cd_seq_prestador_conv,
		b.nr_seq_regra_campo_esp_conv,
		b.cd_procedimento,
		b.cd_tipo_tabela,
		b.ds_procedimento,
		b.dt_execucao,
		b.ie_tecnica_utilizada,
		b.ie_tipo_despesa,
		b.ie_via_acesso,
		(SELECT	max(x.nr_sequencia)
		from	pls_conta x
		where	x.nr_seq_imp	= c.nr_sequencia) nr_seq_conta,
		a.nr_seq_grupo_ans_conv,
		a.nr_seq_cobertura,
		a.ie_tipo_cobertura,
		a.nr_seq_sca_cobertura,
		b.nr_seq_item_tiss,
		b.nr_seq_item_tiss_vinculo
	from	pls_protocolo_conta_imp d,
		pls_conta_imp c,
		pls_conta_item_imp b,
		pls_conta_proc_imp a
	where	d.nr_seq_lote_protocolo	= nr_seq_lote_protocolo_pc
	and	c.nr_seq_protocolo	= d.nr_sequencia
	and	b.nr_seq_conta		= c.nr_sequencia
	and	a.nr_seq_conta		= b.nr_seq_conta
	and	a.nr_seq_item_conta	= b.nr_sequencia;

BEGIN

open C01(nr_seq_lote_protocolo_p);
loop
	--Carregar as vari_veis conforme informa__es obtidas atrav_s do Cursor

	fetch C01 bulk collect into	tb_nr_seq_conta_proc_w, tb_nr_seq_conta_imp_w,
					tb_nr_seq_item_conta_w, tb_qt_executado_w,
					tb_dt_inicio_w, tb_dt_fim_w,
					tb_tx_reducao_acrescimo_w, tb_vl_unitario_w,
					tb_vl_total_w, tb_qt_unidade_serv_w,
					tb_vl_proc_copartic_w, tb_ie_autorizado_w,
					tb_cd_dente_w, tb_cd_regiao_boca_w,
					tb_cd_face_dente_w, tb_ie_origem_proced_conv_w,
					tb_cd_procedimento_conv_w, tb_cd_tipo_tabela_conv_w,
					tb_ie_tecnica_utilizada_conv_w, tb_ie_via_acesso_conv_w,
					tb_tx_item_via_acesso_conv_w, tb_nr_seq_pacote_conv_w,
					tb_dt_execucao_conv_w, tb_nr_seq_setor_atend_conv_w,
					tb_nr_regra_orig_proced_conv_w, tb_ie_tipo_item_conv_w,
					tb_nr_regra_tab_tiss_conv_w, tb_ie_tipo_despesa_conv_w,
					tb_nr_seq_regra_item_conv_w, tb_cd_seq_prestador_conv_w,
					tb_nr_regra_campo_esp_conv_w, tb_cd_procedimento_w,
					tb_cd_tipo_tabela_w, tb_ds_procedimento_w,
					tb_dt_execucao_w, tb_ie_tecnica_utilizada_w,
					tb_ie_tipo_despesa_w, tb_ie_via_acesso_w,
					tb_nr_seq_conta_w, tb_seq_grupo_ans_w,
					tb_seq_cobertura_w, tb_tipo_cobertura_w,
					tb_seq_sca_cobertura_w, tb_nr_seq_item_tiss_w,
					tb_nr_seq_item_tiss_vinculo_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_conta_proc_w.count = 0;

	--Integrar as informa__es  da tabela  PLS_CONTA_PROC_IMP para a PLS_CONTA_PROC

	--Inseridas as informa__es correspondentes na tabela.

	--Os campos _IMP da PLS_CONTA_PROC tamb_m devem ser populados para consultas posteriores

	forall i in tb_nr_seq_conta_proc_w.first..tb_nr_seq_conta_proc_w.last
		insert	into pls_conta_proc(cd_dente, cd_dente_imp, cd_face_dente,
			cd_face_dente_imp, cd_procedimento, cd_procedimento_imp, 
			cd_regiao_boca, cd_regiao_boca_imp, cd_tipo_tabela, 
			cd_tipo_tabela_imp, ds_log, ds_procedimento_imp, 
			dt_atualizacao, dt_atualizacao_nrec, dt_fim_proc, 
			dt_fim_proc_imp, dt_inicio_proc, dt_inicio_proc_imp,
			dt_procedimento, dt_procedimento_imp, ie_autorizado_imp,
			ie_origem_proced, ie_status, ie_tecnica_utilizada,
			ie_tecnica_utilizada_imp, ie_tipo_despesa, ie_tipo_despesa_imp, 
			ie_valor_informado, ie_via_acesso, ie_via_acesso_imp, 
			nm_usuario, nm_usuario_nrec, nr_seq_conta,
			nr_seq_imp, nr_sequencia, qt_procedimento, 
			qt_procedimento_imp, qt_unidade_serv, qt_unidade_serv_imp, 
			tx_reducao_acrescimo_imp, vl_apresentado_xml, vl_liberado, 
			vl_proc_copartic, vl_proc_copartic_imp, vl_procedimento,
			vl_procedimento_imp, vl_unitario, vl_unitario_imp,
			nr_seq_pacote, nr_seq_setor_atend, dt_fim_proc_imp_referencia, 
			dt_fim_proc_referencia, dt_inicio_proc_imp_referencia, dt_inicio_proc_referencia,
			dt_procedimento_imp_trunc, dt_procedimento_referencia, dt_procedimento_referencia_sh,
			dt_procedimento_trunc, qt_procedimento_original, ie_situacao, tx_item, nr_seq_grupo_ans,
			nr_seq_cobertura, nr_seq_sca_cobertura, ie_tipo_cobertura
		) values (tb_cd_dente_w(i), tb_cd_dente_w(i), tb_cd_face_dente_w(i),
			tb_cd_face_dente_w(i), tb_cd_procedimento_conv_w(i), tb_cd_procedimento_w(i),
			tb_cd_regiao_boca_w(i), tb_cd_regiao_boca_w(i), tb_cd_tipo_tabela_conv_w(i),
			tb_cd_tipo_tabela_w(i), 'pls_int_xml_cta_pck.pls_int_nv_conta_proc()', tb_ds_procedimento_w(i),
			clock_timestamp(), clock_timestamp(), tb_dt_fim_w(i),
			tb_dt_fim_w(i), tb_dt_inicio_w(i), tb_dt_inicio_w(i),
			tb_dt_execucao_conv_w(i), tb_dt_execucao_w(i), tb_ie_autorizado_w(i),
			tb_ie_origem_proced_conv_w(i), 'C', tb_ie_tecnica_utilizada_conv_w(i),
			tb_ie_tecnica_utilizada_w(i), tb_ie_tipo_despesa_conv_w(i), pls_util_pck.elimina_zero_esquerda_char(tb_ie_tipo_despesa_w(i)),
			'N', tb_ie_via_acesso_conv_w(i), tb_ie_via_acesso_w(i),
			nm_usuario_p, nm_usuario_p, tb_nr_seq_conta_w(i),
			tb_nr_seq_conta_proc_w(i), nextval('pls_conta_proc_seq'), 0,
			tb_qt_executado_w(i), tb_qt_unidade_serv_w(i), tb_qt_unidade_serv_w(i),
			tb_tx_reducao_acrescimo_w(i), tb_vl_total_w(i), 0,
			tb_vl_proc_copartic_w(i), tb_vl_proc_copartic_w(i), 0,
			tb_vl_total_w(i), 0, tb_vl_unitario_w(i),
			tb_nr_seq_pacote_conv_w(i), tb_nr_seq_setor_atend_conv_w(i), tb_dt_fim_w(i),
			tb_dt_fim_w(i), tb_dt_inicio_w(i), tb_dt_inicio_w(i),
			trunc(tb_dt_execucao_conv_w(i)), tb_dt_execucao_conv_w(i), trunc(tb_dt_execucao_conv_w(i)),
			trunc(tb_dt_execucao_conv_w(i)), tb_qt_executado_w(i), 'I', tb_tx_item_via_acesso_conv_w(i),
			tb_seq_grupo_ans_w(i), tb_seq_cobertura_w(i), tb_seq_sca_cobertura_w(i), tb_tipo_cobertura_w(i)				
			);
	commit;
			
	--Devido a necessidade de criar registro de regra para cada procedimento integrado(campos com seq_item_tiss), n_o se faz poss_vel utiliza__o de forall aqui. Caso algum dia detecte-se alguma necessidade 

	--de melhorar performance neses ponto, ser_ necess_rio pensar em estrat_gia diferente.

	for i in tb_nr_seq_conta_proc_w.first..tb_nr_seq_conta_proc_w.last loop
			
		select 	max(nr_sequencia)
		into STRICT	nr_seq_conta_proc_w
		from 	pls_conta_proc
		where 	nr_seq_conta = tb_nr_seq_conta_w(i)
		and 	nr_seq_imp = tb_nr_seq_conta_proc_w(i);
			
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
			CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_w, nm_usuario_p);
		
			CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_conta_proc_w, tb_nr_seq_item_tiss_w(i), tb_nr_seq_item_tiss_vinculo_w(i), nm_usuario_p);
		end if;
			
	end loop;
			
	commit;
end loop;
close C01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_int_xml_cta_pck.pls_int_nv_conta_proc ( nr_seq_lote_protocolo_p pls_lote_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
