-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_int_xml_cta_pck.pls_int_nv_protocolo ( nr_seq_lote_protocolo_p pls_lote_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_cd_ans_w			pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cgc_prestador_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_cgc_prestador_conv_w	pls_util_cta_pck.t_varchar2_table_15;
tb_cd_cpf_prestador_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_cpf_prestador_conv_w	pls_util_cta_pck.t_varchar2_table_15;
tb_cd_estabelecimento_w		pls_util_cta_pck.t_number_table;
tb_cd_prestador_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_prestador_conv_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_prest_number_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_prest_upper_conv_w	pls_util_cta_pck.t_varchar2_table_15;
tb_cd_versao_tiss_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_versao_tiss_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ds_hash_w			pls_util_cta_pck.t_varchar2_table_255;
tb_dt_transacao_w		pls_util_cta_pck.t_date_table;
tb_ie_guia_fisica_conv_w	pls_util_cta_pck.t_varchar2_table_1;
tb_ie_situacao_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_tipo_guia_w		pls_util_cta_pck.t_varchar2_table_2;
tb_nr_lote_prestador_w		pls_util_cta_pck.t_varchar2_table_15;
tb_nr_seq_lote_protocolo_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_outorgante_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_web_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_transacao_w		pls_util_cta_pck.t_varchar2_table_15;
tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_xml_arquivo_w		pls_util_cta_pck.t_number_table;
tb_qt_contas_informadas_w	pls_util_cta_pck.t_number_table;
tb_qt_ocorrencias_w		pls_util_cta_pck.t_number_table;
tb_dt_atualizacao_w		pls_util_cta_pck.t_date_table;
tb_ie_tipo_importacao_w		pls_util_cta_pck.t_varchar2_table_2;
tb_dt_mes_competencia_conv_w	pls_util_cta_pck.t_date_table;

C01 CURSOR(nr_seq_lote_protocolo_pc	pls_protocolo_conta_imp.nr_seq_lote_protocolo%type) FOR
	SELECT	cd_ans,
		cd_cgc_prestador,
		cd_cgc_prestador_conv,
		cd_cpf_prestador,
		cd_cpf_prestador_conv,
		cd_estabelecimento,
		cd_prestador,
		cd_prestador_conv,
		cd_prest_number_conv,
		cd_prest_upper_conv,
		cd_versao_tiss,
		cd_versao_tiss_conv,
		ds_hash,
		dt_transacao,
		ie_guia_fisica_conv,
		ie_situacao,
		ie_tipo_guia,
		nr_lote_prestador,
		nr_seq_lote_protocolo,
		nr_seq_outorgante_conv,
		nr_seq_prestador_conv,
		nr_seq_prestador_web,
		nr_seq_transacao,
		nr_sequencia nr_seq_protocolo,
		nr_seq_xml_arquivo,
		pls_obter_qt_conta_prot(a.nr_sequencia) qt_contas_informadas,
		pls_obter_qt_ocorr_prot(a.nr_sequencia, null, null, null, '4') qt_ocorrencias,
		dt_atualizacao,
		ie_tipo_importacao,
		dt_mes_competencia_conv
	from	pls_protocolo_conta_imp a
	where	a.nr_seq_lote_protocolo	= nr_seq_lote_protocolo_pc;


BEGIN

open C01(nr_seq_lote_protocolo_p);
loop
	--Carregar as vari_veis conforme informa__es obtidas atrav_s do Cursor

	fetch C01 bulk collect into	tb_cd_ans_w, tb_cd_cgc_prestador_w,
					tb_cd_cgc_prestador_conv_w, tb_cd_cpf_prestador_w,
					tb_cd_cpf_prestador_conv_w, tb_cd_estabelecimento_w,
					tb_cd_prestador_w, tb_cd_prestador_conv_w,
					tb_cd_prest_number_conv_w, tb_cd_prest_upper_conv_w,
					tb_cd_versao_tiss_w, tb_cd_versao_tiss_conv_w,
					tb_ds_hash_w, tb_dt_transacao_w, tb_ie_guia_fisica_conv_w,
					tb_ie_situacao_w, tb_ie_tipo_guia_w,
					tb_nr_lote_prestador_w, tb_nr_seq_lote_protocolo_w,
					tb_nr_seq_outorgante_w, tb_nr_seq_prestador_conv_w,
					tb_nr_seq_prestador_web_w, tb_nr_seq_transacao_w,
					tb_nr_seq_protocolo_w, tb_nr_seq_xml_arquivo_w,
					tb_qt_contas_informadas_w, tb_qt_ocorrencias_w,
					tb_dt_atualizacao_w, tb_ie_tipo_importacao_w,
					tb_dt_mes_competencia_conv_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_protocolo_w.count = 0;
	
	--Integrar as informa__es  da tabela  PLS_PROTOCOLO_CONTA_IMP para a PLS_PROTOCOLO_CONTA

	--Inseridas as informa__es correspondentes na tabela.

	--Os campos de valores da PLS_PROTOCOLO_CONTA n_o ser_o populados neste momento

	--estes campos ser_o populados posteriormente na rotina PLS_ATU_SITUACAO_LOTE_PROT

	--Os campos _IMP da PLS_PROTOCOLO_CONTA tamb_m devem ser populados para consultas posteriores

	forall i in tb_nr_seq_protocolo_w.first..tb_nr_seq_protocolo_w.last
		insert	into pls_protocolo_conta(
			cd_cgc_prestador_imp, cd_estabelecimento,
			cd_prestador, cd_prestador_imp,
			cd_versao_tiss, ds_hash, 
			dt_atualizacao, dt_atualizacao_nrec,
			dt_mes_competencia, ie_guia_fisica, 
			ie_situacao, ie_status, 
			ie_tipo_guia, nm_usuario,
			nm_usuario_nrec, nr_cpf_prestador_imp, 
			nr_protocolo_prestador,	nr_seq_imp,
			nr_seq_outorgante, nr_seq_prestador, 
			nr_seq_prestador_imp, nr_seq_prestador_imp_ref, 
			nr_seq_transacao, nr_sequencia,
			nr_seq_usu_prestador, nr_seq_xml_arquivo,
			qt_contas_informadas, qt_ocorrencias,
			vl_cobrado, vl_cobrado_manual,
			vl_contabil, vl_coparticipacao,
			vl_glosa, vl_lib_sistema,
			vl_lib_usuario, vl_pendente,
			vl_total, vl_total_beneficiario, vl_total_imp,
			dt_integracao, nm_usuario_integracao,
			dt_protocolo_imp, dt_protocolo,
			nr_seq_lote_conta, ie_tipo_importacao, ie_tipo_protocolo,
			ie_origem_protocolo
		) values (tb_cd_cgc_prestador_w(i), tb_cd_estabelecimento_w(i),
			tb_cd_prestador_conv_w(i), tb_cd_prestador_w(i),
			tb_cd_versao_tiss_conv_w(i), tb_ds_hash_w(i),
			clock_timestamp(), clock_timestamp(), 
			tb_dt_mes_competencia_conv_w(i), tb_ie_guia_fisica_conv_w(i),
			tb_ie_situacao_w(i), 1,
			tb_ie_tipo_guia_w(i), nm_usuario_p,
			nm_usuario_p, tb_cd_cpf_prestador_w(i),
			tb_nr_lote_prestador_w(i), tb_nr_seq_protocolo_w(i),
			tb_nr_seq_outorgante_w(i), tb_nr_seq_prestador_conv_w(i),
			tb_nr_seq_prestador_conv_w(i), tb_nr_seq_prestador_conv_w(i),
			tb_nr_seq_transacao_w(i), nextval('pls_protocolo_conta_seq'),
			tb_nr_seq_prestador_web_w(i), tb_nr_seq_xml_arquivo_w(i),
			tb_qt_contas_informadas_w(i), tb_qt_ocorrencias_w(i),
			0,0,0,0,0,0,0,0,0,0,0,
			clock_timestamp(), nm_usuario_p, 
			tb_dt_transacao_w(i), tb_dt_transacao_w(i),
			nr_seq_lote_protocolo_p, tb_ie_tipo_importacao_w(i), 
			'C','E');
	commit;
end loop;
close C01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_int_xml_cta_pck.pls_int_nv_protocolo ( nr_seq_lote_protocolo_p pls_lote_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
