-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION apap_limite_pck.get_limite (nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, vl_resultado_p w_apap_pac_registro.vl_resultado%type, nm_atributo_p tabela_atributo.nm_atributo%type, ie_opcao_p valor_dominio.vl_dominio%type) RETURNS SETOF T_LIMITE_TABLE AS $body$
DECLARE


	row_w					t_limite_row;
	cd_perfil_w				perfil.cd_perfil%type;
	cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
	cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
	nm_usuario_w			usuario.nm_usuario%type;
	ie_sexo_w				pessoa_fisica.ie_sexo%type;
	qt_idade_w				double precision;
	qt_idade_dia_w			double precision;
	ie_regra_w				usuario.nm_usuario%type;
	qt_min_aviso_w			sinal_vital_regra.qt_min_aviso%type;
	qt_max_aviso_w			sinal_vital_regra.qt_max_aviso%type;
	qt_minimo_w				sinal_vital_regra.qt_minimo%type;
	vl_maximo_w				sinal_vital_regra.vl_maximo%type;
	ds_cor_min_w			sinal_vital_regra.ds_cor_min%type;
	ds_cor_max_w			sinal_vital_regra.ds_cor_max%type;
	ie_alerta_w				w_apap_pac_registro.ie_alerta%type;
	ds_cor_w				sinal_vital_regra.ds_cor_min%type;

	c_sv CURSOR FOR
		SELECT	a.qt_min_aviso,
				a.qt_max_aviso,
				a.qt_minimo,
				a.vl_maximo,
				a.ds_cor_min,
				a.ds_cor_max,
				a.nr_sequencia nr_seq_item
		from	sinal_vital a
		where	a.nm_atributo = nm_atributo_p;

	c_sv_regra CURSOR(nr_seq_item_p  bigint) FOR
		SELECT	b.qt_min_aviso,
				b.qt_max_aviso,
				b.qt_minimo,
				b.vl_maximo,
				b.ds_cor_min,
				b.ds_cor_max
		from	sinal_vital_regra b,
				sinal_vital a
		where	a.nr_sequencia	= nr_seq_item_p
		and		a.nr_sequencia	= b.nr_seq_sinal
		and (qt_idade_w  between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,9999999999))
		and (qt_idade_dia_w between coalesce(b.qt_idade_min_dias,0) and coalesce(b.qt_idade_max_dias,9999999999))
		and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
		and		coalesce(b.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w
		and		coalesce(b.cd_perfil,cd_perfil_w) = cd_perfil_w
		and		coalesce(b.ie_sexo,ie_sexo_w) = ie_sexo_w
		order by coalesce(b.cd_setor_atendimento,0), coalesce(b.cd_escala_dor,'0') desc, coalesce(b.cd_estabelecimento,0), coalesce(b.ie_sitio,0) asc;


BEGIN
	if (ie_opcao_p <> 'N') then
		cd_perfil_w			:=	wheb_usuario_pck.get_cd_perfil;
		cd_estabelecimento_w:=	wheb_usuario_pck.get_cd_estabelecimento;

		begin
		if (coalesce(nr_atendimento_p,0)	> 0) then
			cd_setor_atendimento_w	:= coalesce(obter_setor_atendimento(nr_atendimento_p),0);
		end if;
		exception
		WHEN unique_violation THEN
			cd_setor_atendimento_w	:= 0;
		end;

		if (coalesce(nr_atendimento_p,0) > 0) then
			select	max(coalesce(obter_dados_pf_sbis(nr_atendimento_p,'SEXO'),ie_sexo))
			into STRICT	ie_sexo_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		else
			select	max(ie_sexo)
			into STRICT	ie_sexo_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		end if;

		select	obter_idade_pf(b.cd_pessoa_fisica, coalesce(b.dt_obito,clock_timestamp()), 'A')
		into STRICT	qt_idade_w
		from	pessoa_fisica b,
				atendimento_paciente a
		where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and		a.nr_atendimento	= nr_atendimento_p;
		
		select	max(obter_idade(dt_nascimento,clock_timestamp(),'DIA'))
		into STRICT	qt_idade_dia_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

		<<read_sv>>
		for r_sv in c_sv
			loop
			ie_regra_w		:= 'N';
			qt_min_aviso_w	:= null;
			qt_max_aviso_w	:= null;
			qt_minimo_w		:= null;
			vl_maximo_w		:= null;
			ds_cor_min_w	:= null;
			ds_cor_max_w	:= null;
			<<read_sv_regra>>
			for r_sv_regra in c_sv_regra(r_sv.nr_seq_item)
				loop
				ie_regra_w		:= 'S';
				qt_min_aviso_w	:= r_sv_regra.qt_min_aviso;
				qt_max_aviso_w	:= r_sv_regra.qt_max_aviso;
				qt_minimo_w		:= r_sv_regra.qt_minimo;
				vl_maximo_w		:= r_sv_regra.vl_maximo;
				ds_cor_min_w	:= r_sv_regra.ds_cor_min;
				ds_cor_max_w	:= r_sv_regra.ds_cor_max;
				end loop read_sv_regra;
				
			if (ie_regra_w = 'N') then
				qt_min_aviso_w	:= r_sv.qt_min_aviso;
				qt_max_aviso_w	:= r_sv.qt_max_aviso;
				qt_minimo_w		:= r_sv.qt_minimo;
				vl_maximo_w		:= r_sv.vl_maximo;
				ds_cor_min_w	:= r_sv.ds_cor_min;
				ds_cor_max_w	:= r_sv.ds_cor_max;
			end if;
			end loop read_sv;
			
			ie_alerta_w	:= null;
			ds_cor_w	:= null;
			
			if	((qt_min_aviso_w = 0) and (qt_max_aviso_w = 0) and (qt_minimo_w = 0) and (vl_maximo_w = 0)) or ((vl_resultado_p = 0) or (vl_resultado_p between qt_min_aviso_w and qt_max_aviso_w)) then
				ie_alerta_w	:= 'N';
			elsif	((qt_minimo_w > 0) or (vl_maximo_w > 0)) and
				((qt_min_aviso_w > 0) or (qt_max_aviso_w > 0)) and (not(vl_resultado_p between qt_minimo_w and vl_maximo_w)) then
				ie_alerta_w	:= 'S';	
				if (vl_resultado_p < qt_minimo_w) then
					ds_cor_w	:= ds_cor_min_w;
				else	
					ds_cor_w	:= ds_cor_max_w;
				end if;	
			elsif	((qt_minimo_w > 0) or (vl_maximo_w > 0)) and
				((qt_min_aviso_w > 0) or (qt_max_aviso_w > 0)) and (not(vl_resultado_p between qt_min_aviso_w and qt_max_aviso_w)) and (ie_opcao_p = 'A') then
				ie_alerta_w	:= 'S';	
				if (vl_resultado_p < qt_min_aviso_w) then
					ds_cor_w	:= ds_cor_min_w;
				else	
					ds_cor_w	:= ds_cor_max_w;
				end if;	
			elsif (qt_minimo_w = 0) and (vl_maximo_w = 0) and
					((qt_min_aviso_w > 0) or (qt_max_aviso_w > 0)) and (not(vl_resultado_p between qt_min_aviso_w and qt_max_aviso_w)) and (ie_opcao_p = 'A') then
				ie_alerta_w	:= 'S';	
				if (vl_resultado_p < qt_min_aviso_w) then
					ds_cor_w	:= ds_cor_min_w;
				else	
					ds_cor_w	:= ds_cor_max_w;
				end if;	
			elsif (qt_min_aviso_w = 0) and (qt_max_aviso_w = 0) and
					((qt_minimo_w > 0) or (vl_maximo_w > 0)) and (not(vl_resultado_p between qt_minimo_w and vl_maximo_w)) then
				ie_alerta_w	:= 'S';	
				if (vl_resultado_p < qt_minimo_w) then
					ds_cor_w	:= ds_cor_min_w;
				else	
					ds_cor_w	:= ds_cor_max_w;
				end if;	
			elsif (not(vl_resultado_p between qt_minimo_w and vl_maximo_w)) then
				ie_alerta_w		:= 'S';	
				if (vl_resultado_p < qt_minimo_w) then
					ds_cor_w	:= ds_cor_min_w;
				else	
					ds_cor_w	:= ds_cor_max_w;
				end if;	
			else
				ie_alerta_w		:= 'N';	
			end if;
			row_w.ie_alerta			:= ie_alerta_w;
			row_w.ds_cor			:= ds_cor_w;
			RETURN NEXT row_w;
		return;
	end if;	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION apap_limite_pck.get_limite (nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, vl_resultado_p w_apap_pac_registro.vl_resultado%type, nm_atributo_p tabela_atributo.nm_atributo%type, ie_opcao_p valor_dominio.vl_dominio%type) FROM PUBLIC;
