-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_lanc_programado_pck.lanca_regra_vl_perc ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_prest_origem_p pls_prestador.nr_sequencia%type, r_c_regra_p c_regra, r_c_det_regra_p c_det_regra, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_novo_item_w	pls_pp_item_lote_lp_v.nr_sequencia%type;
vl_total_evento_w	pls_pp_item_lote_lp_v.vl_liquido%type;
vl_lancar_evento_w	pls_pp_item_lote_lp_v.vl_liquido%type;


BEGIN
-- inicialização
nr_seq_novo_item_w := null;

-- obtém o valor já lançado para todos os eventos que a regra sinaliza na vl_total_evento_w
SELECT * FROM pls_pp_lanc_programado_pck.gerencia_valor_evento(	nr_seq_lote_p, nr_seq_prestador_p, nr_seq_prest_origem_p, r_c_regra_p.nr_seq_evento, r_c_det_regra_p.nr_seq_lanc_prog, r_c_det_regra_p.nr_seq_regra_lanc_det, r_c_det_regra_p.ie_tipo_evento, r_c_det_regra_p.nr_seq_evento, r_c_regra_p.ie_natureza, nm_usuario_p, nr_seq_novo_item_w, vl_total_evento_w, r_c_regra_p.cd_centro_custo) INTO STRICT nr_seq_novo_item_w, vl_total_evento_w;

-- calcula o percentual
vl_lancar_evento_w := (vl_total_evento_w * r_c_det_regra_p.pr_valor) / 100;

-- se foi informado o limite mínimo
-- caso o valor seja maior que o limite máximo recebe o limite máximo
if	(r_c_det_regra_p.vl_minimo > 0 AND vl_lancar_evento_w < r_c_det_regra_p.vl_minimo) then
	vl_lancar_evento_w := r_c_det_regra_p.vl_minimo;

-- se foi informado o limite máximo
-- caso o valor seja maior que o limite máximo recebe o limite máximo
elsif	(r_c_det_regra_p.vl_maximo > 0 AND vl_lancar_evento_w > r_c_det_regra_p.vl_maximo) then
	vl_lancar_evento_w := r_c_det_regra_p.vl_maximo;
end if;

-- verifica se trata-se de evento de desconto, caso seja é necessário converter o valor para negativo
if (r_c_regra_p.ie_natureza = 'D') then

	vl_lancar_evento_w := pls_util_pck.obter_valor_negativo(vl_lancar_evento_w);
end if;

-- faz o update no banco de dados
update	pls_pp_item_lote_lp_v set
	vl_item = vl_lancar_evento_w,
	vl_glosa = 0,
	vl_liquido = vl_lancar_evento_w
where	nr_sequencia = nr_seq_novo_item_w;
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_lanc_programado_pck.lanca_regra_vl_perc ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_prest_origem_p pls_prestador.nr_sequencia%type, r_c_regra_p c_regra, r_c_det_regra_p c_det_regra, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
