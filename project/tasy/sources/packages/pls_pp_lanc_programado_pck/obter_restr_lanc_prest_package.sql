-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- restrições referente a regras VS prestadores
CREATE OR REPLACE FUNCTION pls_pp_lanc_programado_pck.obter_restr_lanc_prest ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_regra_lanc_p pls_pp_lanc_programado.nr_sequencia%type, ie_forma_incidencia_p pls_pp_lanc_programado.ie_forma_incidencia%type, nr_seq_evento_p pls_pp_lanc_programado.nr_seq_evento%type, nr_seq_prestador_p pls_pp_lanc_programado.nr_seq_prestador%type, cd_prestador_cod_p pls_pp_lanc_programado.cd_prestador_cod%type, ds_campo_prestador_p text, ie_cooperado_p pls_pp_lanc_programado.ie_cooperado%type, nr_seq_sit_coop_p pls_pp_lanc_programado.nr_seq_sit_coop%type, nr_seq_tipo_prestador_p pls_pp_lanc_programado.nr_seq_tipo_prestador%type, ie_situacao_prest_p pls_pp_lanc_programado.ie_situacao_prest%type, nr_seq_periodo_regra_p pls_pp_lanc_programado.nr_seq_periodo%type, valor_bind_p INOUT sql_pck.t_dado_bind, ds_campo_extra_p INOUT text) AS $body$
DECLARE


ds_restricao_w		varchar(12000);
ds_alias_tmp_w		varchar(60);
ds_alias_exc_w		varchar(60);
ds_campo_codigo_prest_w	varchar(100);


BEGIN

-- inicia a variável com null
ds_restricao_w := null;

ds_alias_tmp_w := pls_pp_lanc_programado_pck.obter_alias_tabela('pretmp');
ds_alias_exc_w := pls_pp_lanc_programado_pck.obter_alias_tabela('ppexce');

-- dependendo do prestador que estiver sendo utilizado muda também a restrição do código
if (ds_campo_prestador_p = 'nr_seq_prestador_matriz') then
	ds_campo_codigo_prest_w := 'cd_prestador_matriz';
else
	ds_campo_codigo_prest_w := 'cd_prestador';
end if;

valor_bind_p := sql_pck.bind_variable(':nr_seq_lanc_prog_pc', nr_seq_regra_lanc_p, valor_bind_p);

-- AQUI OLHA-SE APENAS A SEQUÊNCIA DA REGRA PAI E NO DELPHI DESABILITAMOS A EDIÇÃO DE PAI E FILHA QUANDO
-- A REGRA É UTILIZADA EM ALGUM LOTE
-- tratamento para colocar um subselect que diz se pode ou não lançar o lançamento programado
ds_campo_extra_p := ds_campo_extra_p || ',' || pls_util_pck.enter_w;
-- lançamento único
if (ie_forma_incidencia_p = 'U') then

	valor_bind_p := sql_pck.bind_variable(':nr_seq_evento_pc', nr_seq_evento_p, valor_bind_p);

	ds_campo_extra_p := ds_campo_extra_p ||
			    '(select	decode(count(1),0,''S'',''N'')' || pls_util_pck.enter_w ||
			    ' from	pls_pp_item_lote_lp_v a' || pls_util_pck.enter_w ||
			    ' where	a.nr_seq_prestador = ' || ds_alias_tmp_w || '.' || ds_campo_prestador_p || pls_util_pck.enter_w ||
			    ' and	a.nr_seq_evento = :nr_seq_evento_pc' || pls_util_pck.enter_w ||
			    ' and	a.nr_seq_lanc_prog = :nr_seq_lanc_prog_pc) ie_pode_lancar';

-- lançamento mensal
elsif (ie_forma_incidencia_p = 'M') then

	valor_bind_p := sql_pck.bind_variable(':nr_seq_lote_pc', nr_seq_lote_p, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':nr_seq_evento_pc', nr_seq_evento_p, valor_bind_p);

	ds_campo_extra_p := ds_campo_extra_p ||
			   '(select	decode(count(1),0,''S'',''N'')' || pls_util_pck.enter_w ||
			    ' from	pls_pp_lote a,' || pls_util_pck.enter_w ||
			    ' 		pls_pp_lote c,' || pls_util_pck.enter_w ||
			    ' 		pls_pp_item_lote_lp_v b' || pls_util_pck.enter_w ||
			    ' where	a.nr_sequencia = :nr_seq_lote_pc' || pls_util_pck.enter_w ||
			    ' and	c.dt_mes_competencia = a.dt_mes_competencia' || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_lote = c.nr_sequencia' || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_prestador = ' || ds_alias_tmp_w || '.' || ds_campo_prestador_p || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_evento = :nr_seq_evento_pc' || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_lanc_prog = :nr_seq_lanc_prog_pc) ie_pode_lancar';

-- lançamento anual
elsif (ie_forma_incidencia_p = 'A') then

	valor_bind_p := sql_pck.bind_variable(':nr_seq_lote_pc', nr_seq_lote_p, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':nr_seq_evento_pc', nr_seq_evento_p, valor_bind_p);

	ds_campo_extra_p := ds_campo_extra_p ||
			   '(select	decode(count(1),0,''S'',''N'')' || pls_util_pck.enter_w ||
			    ' from	pls_pp_lote a,' || pls_util_pck.enter_w ||
			    ' 		pls_pp_lote c,' || pls_util_pck.enter_w ||
			    ' 		pls_pp_item_lote_lp_v b' || pls_util_pck.enter_w ||
			    ' where	a.nr_sequencia = :nr_seq_lote_pc' || pls_util_pck.enter_w ||
			    ' and	c.nr_ano_competencia = a.nr_ano_competencia' || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_lote = c.nr_sequencia' || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_prestador = ' || ds_alias_tmp_w || '.' || ds_campo_prestador_p || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_evento = :nr_seq_evento_pc' || pls_util_pck.enter_w ||
			    ' and	b.nr_seq_lanc_prog = :nr_seq_lanc_prog_pc) ie_pode_lancar';

-- lançamento por lote
elsif (ie_forma_incidencia_p = 'L') then
	ds_campo_extra_p := ds_campo_extra_p || '''S'' ie_pode_lancar';
end if;

-- se vier nr_seq_prestador_p informado
if (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tmp_w || '.nr_seq_prestador = :nr_seq_prestador_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_prestador_pc', nr_seq_prestador_p, valor_bind_p);
end if;

-- se vier cd_prestador_cod_p informado
if (cd_prestador_cod_p IS NOT NULL AND cd_prestador_cod_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tmp_w || '.cd_prestador = :cd_prestador_cod_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':cd_prestador_cod_pc', cd_prestador_cod_p, valor_bind_p);
end if;

-- se vier ie_cooperado_p informado
if (ie_cooperado_p = 'S') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tmp_w || '.ie_cooperado = :ie_cooperado_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':ie_cooperado_pc', ie_cooperado_p, valor_bind_p);
end if;

-- se vier nr_seq_sit_coop_p informado
if (nr_seq_sit_coop_p IS NOT NULL AND nr_seq_sit_coop_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tmp_w || '.ie_situacao_cooperado = :nr_seq_sit_coop_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_sit_coop_pc', nr_seq_sit_coop_p, valor_bind_p);
end if;

-- se vier nr_seq_tipo_prestador_p informado
if (nr_seq_tipo_prestador_p IS NOT NULL AND nr_seq_tipo_prestador_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tmp_w || '.nr_seq_tipo_prestador = :nr_seq_tipo_prestador_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_tipo_prestador_pc', nr_seq_tipo_prestador_p, valor_bind_p);
end if;

-- se vier ie_situacao_prest_p informado
if (ie_situacao_prest_p != 'T') then
	ds_restricao_w := ds_restricao_w || 'and	' || ds_alias_tmp_w || '.ie_situacao = :ie_situacao_prest_pc' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':ie_situacao_prest_pc', ie_situacao_prest_p, valor_bind_p);
end if;

-- se vier nr_seq_periodo_regra_p informado
if (nr_seq_periodo_regra_p IS NOT NULL AND nr_seq_periodo_regra_p::text <> '') then
	ds_restricao_w := ds_restricao_w || 'and exists (select	1 								' || pls_util_pck.enter_w ||
						'	from	pls_pp_lote ppl							' || pls_util_pck.enter_w ||
						'	where	ppl.nr_sequencia 		= :nr_seq_lote_pc		' || pls_util_pck.enter_w ||
						'	and	ppl.nr_seq_regra_periodo 	= :nr_seq_periodo_regra_pc) 	' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_periodo_regra_pc', nr_seq_periodo_regra_p, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(':nr_seq_lote_pc', nr_seq_lote_p, valor_bind_p);
end if;

-- já retira fora as exceções direcionadas para prestador e código de prestador, ambas sem evento (normalmente são as mais comuns)
ds_restricao_w := ds_restricao_w || 'and not exists (select	1' || pls_util_pck.enter_w ||
				    '		     from	pls_pp_lanc_prog_excecao z' || pls_util_pck.enter_w ||
				    '		     where	z.nr_seq_lanc_prog = :nr_seq_lanc_prog_pc' || pls_util_pck.enter_w ||
				    '		     and	z.nr_seq_evento is null' || pls_util_pck.enter_w ||
				    '		     and	z.nr_seq_prestador = ' || ds_alias_tmp_w || '.' || ds_campo_prestador_p || pls_util_pck.enter_w ||
				    '		     union all' || pls_util_pck.enter_w ||
				    '		     select	1' || pls_util_pck.enter_w ||
				    '		     from	pls_pp_lanc_prog_excecao y' || pls_util_pck.enter_w ||
				    '		     where	y.nr_seq_lanc_prog = :nr_seq_lanc_prog_pc' || pls_util_pck.enter_w ||
				    '		     and	y.nr_seq_evento is null' || pls_util_pck.enter_w ||
				    '		     and	y.cd_prestador_cod = ' || ds_alias_tmp_w || '.' || ds_campo_codigo_prest_w || pls_util_pck.enter_w ||
				    ')';

-- Somente os prestadores que estiverem liberados para gerar lançamentos programados no lote
-- Verificamos prestadores sem o evento (para já filtrar um bom montante de dados e aumentar a performance)
ds_restricao_w := ds_restricao_w || 'and exists (    select	1' || pls_util_pck.enter_w ||
				    '		     from	pls_pp_lote_prest_event y' || pls_util_pck.enter_w ||
				    '		     where	y.nr_seq_lote = :nr_seq_lote_pc' || pls_util_pck.enter_w ||
				    '		     and	y.nr_seq_prestador = ' || ds_alias_tmp_w || '.' || ds_campo_prestador_p || pls_util_pck.enter_w ||
				    ')';
valor_bind_p := sql_pck.bind_variable(':nr_seq_lote_pc', nr_seq_lote_p, valor_bind_p);

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_pp_lanc_programado_pck.obter_restr_lanc_prest ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_regra_lanc_p pls_pp_lanc_programado.nr_sequencia%type, ie_forma_incidencia_p pls_pp_lanc_programado.ie_forma_incidencia%type, nr_seq_evento_p pls_pp_lanc_programado.nr_seq_evento%type, nr_seq_prestador_p pls_pp_lanc_programado.nr_seq_prestador%type, cd_prestador_cod_p pls_pp_lanc_programado.cd_prestador_cod%type, ds_campo_prestador_p text, ie_cooperado_p pls_pp_lanc_programado.ie_cooperado%type, nr_seq_sit_coop_p pls_pp_lanc_programado.nr_seq_sit_coop%type, nr_seq_tipo_prestador_p pls_pp_lanc_programado.nr_seq_tipo_prestador%type, ie_situacao_prest_p pls_pp_lanc_programado.ie_situacao_prest%type, nr_seq_periodo_regra_p pls_pp_lanc_programado.nr_seq_periodo%type, valor_bind_p INOUT sql_pck.t_dado_bind, ds_campo_extra_p INOUT text) FROM PUBLIC;
