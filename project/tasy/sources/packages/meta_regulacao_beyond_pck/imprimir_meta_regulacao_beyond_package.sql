-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION meta_regulacao_beyond_pck.imprimir_meta_regulacao_beyond ( dt_inicio_p text, dt_fim_p text, ie_intervalo_p bigint) RETURNS SETOF T_META_REGULACAO_BEYOND_DATA AS $body$
DECLARE


  t_meta_regulacao_beyond_w  t_meta_regulacao_beyond_row;

  ie_intervalo_w varchar(255);WITH RECURSIVE cte AS (


  C01 CURSOR(  dt_inicio_pc    text,
      dt_fim_pc    text,
      ie_intervalo_p    bigint ) FOR
      SELECT TO_DATE(dt_inicio_pc,'dd/MM/yyyy') + LEVEL-1 AS dt_tempo,--dia
       TO_CHAR(TO_DATE(dt_inicio_pc,'dd/MM/yy') + LEVEL-1, 'dd/MM/yyyy') AS tempo

        WHERE ie_intervalo_p = 1
        LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc, dt_fim_pc,1)
        )
        
UNION


      SELECT TRUNC(TO_DATE(dt_inicio_pc,'dd/MM/yyyy') + ((LEVEL-1)*7),'day') AS dt_tempo,--semana
        TO_CHAR(TRUNC(TO_DATE(dt_inicio_pc,'dd/MM/yy') + ((LEVEL-1)*7),'day'), 'dd/MM/yyyy') AS tempo
        
        WHERE ie_intervalo_p = 2
        CONNECT BY LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc, dt_fim_pc,2)
        )
        
UNION


      SELECT ADD_MONTHS(dt_inicio_pc,LEVEL-1) AS dt_tempo,
        TO_CHAR(ADD_MONTHS(dt_inicio_pc,LEVEL-1),'MM/yyyy') AS tempo  --mÃªs
        
        WHERE ie_intervalo_p = 3
        CONNECT BY LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc, dt_fim_pc,3)
        )
          UNION ALL


  C01 CURSOR(  dt_inicio_pc    text,
      dt_fim_pc    text,
      ie_intervalo_p    bigint ) FOR
      SELECT TO_DATE(dt_inicio_pc,'dd/MM/yyyy') + LEVEL-1 AS dt_tempo,
       TO_CHAR(TO_DATE(dt_inicio_pc,'dd/MM/yy') + LEVEL-1, 'dd/MM/yyyy') AS tempo
        
        WHERE ie_intervalo_p = 1
        LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc, dt_fim_pc,1)
        )
        
UNION


      SELECT TRUNC(TO_DATE(dt_inicio_pc,'dd/MM/yyyy') + ((LEVEL-1)*7),'day') AS dt_tempo,
        TO_CHAR(TRUNC(TO_DATE(dt_inicio_pc,'dd/MM/yy') + ((LEVEL-1)*7),'day'), 'dd/MM/yyyy') AS tempo
        
        WHERE ie_intervalo_p = 2
        CONNECT BY LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc, dt_fim_pc,2)
        )
        
UNION


      SELECT ADD_MONTHS(dt_inicio_pc,LEVEL-1) AS dt_tempo,
        TO_CHAR(ADD_MONTHS(dt_inicio_pc,LEVEL-1),'MM/yyyy') AS tempo 
        
        WHERE ie_intervalo_p = 3
        CONNECT BY LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc, dt_fim_pc,3)
        )
         JOIN cte c ON ()

) SELECT * FROM cte
UNION


      SELECT
        TO_DATE((TO_CHAR(TO_DATE('01/01/2018','dd/MM/yyyy'),'yyyy'))::numeric  + LEVEL-1,'yyyy'),
        TO_CHAR((TO_CHAR(TO_DATE(dt_inicio_pc,'dd/MM/yy'),'yyyy'))::numeric  + LEVEL-1) AS tempo  --ano
        
        WHERE ie_intervalo_p = 4
        CONNECT BY LEVEL <= (SELECT
        OBTER_INTERVALO_TEMPO(dt_inicio_pc,dt_fim_pc,4)
        );
;

  C02 CURSOR(  dt_filtro_pc    timestamp,
      ie_intervalo_pc    text ) FOR
    SELECT  TRUNC(dt_filtro_pc, ie_intervalo_pc) ie_intervalo,
    (SELECT  COUNT(*)
          FROM    pessoa_fisica
          WHERE   (dt_obito IS NOT NULL AND dt_obito::text <> '')
          AND     TRUNC(DT_ATUALIZACAO_NREC) <= TRUNC(dt_filtro_pc) ) nr_populacao,
        (SELECT  COUNT(*)
          FROM    medico a,
                  pessoa_fisica b
          WHERE   a.cd_pessoa_fisica = b.cd_pessoa_fisica
          and     (dt_obito IS NOT NULL AND dt_obito::text <> '')
          AND     TRUNC(a.DT_ATUALIZACAO_NREC) <= TRUNC(dt_filtro_pc) ) nr_medicos,
        (SELECT  coalesce(MAX(qt_cotas),0)
         FROM    eis_gestao_regulacao_v
         WHERE   TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_consulta_contrato,
        (SELECT  COUNT(*)

          FROM    agenda_integrada a,
                  AGENDA_LISTA_ESPERA b,
                  agenda_integrada_item c,
                  agenda_consulta d
          WHERE   a.nr_seq_lista_espera = b.nr_sequencia
          AND     a.NR_SEQUENCIA        = c.nr_Seq_agenda_int
          AND     c.NR_SEQ_AGENDA_CONS  = d.nr_Sequencia
          AND     (b.nr_seq_regulacao IS NOT NULL AND b.nr_seq_regulacao::text <> '')
          AND     TRUNC(b.dt_agendamento, ie_intervalo_pc) = TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_consulta_agendada,
        (SELECT  COUNT(*)

          FROM    agenda_integrada a,
                  AGENDA_LISTA_ESPERA b,
                  agenda_integrada_item c,
                  agenda_consulta d
          WHERE   a.nr_seq_lista_espera = b.nr_sequencia
          AND     a.NR_SEQUENCIA        = c.nr_Seq_agenda_int
          AND     c.NR_SEQ_AGENDA_CONS  = d.nr_Sequencia
          AND     (b.nr_seq_regulacao IS NOT NULL AND b.nr_seq_regulacao::text <> '')
          AND     d.ie_status_agenda    = 'EX'
          AND     TRUNC(b.dt_agendamento, ie_intervalo_pc) = TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_consulta_executada,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'EN'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_encaminhamentos,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'EQ'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_equipamentos,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'ME'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_medicamentos,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'SC'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_solicitacao_cirurgia,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'SE'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_solicitacao_exames,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'SV'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_solicitacao_vagas,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'TC'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_transferencia_cuidado,
        (SELECT  COUNT(*)

          FROM    pls_requisicao a,
                  regulacao_Atend b
          WHERE   b.nr_sequencia = a.nr_seq_regulacao
          AND     b.ie_tipo = 'VA'
          AND     (a.nr_seq_regulacao IS NOT NULL AND a.nr_seq_regulacao::text <> '')
          AND     TRUNC(dt_requisicao, ie_intervalo_pc) =  TRUNC(dt_filtro_pc, ie_intervalo_pc) ) nr_vacinas
;



BEGIN


  FOR r_c01_w IN C01(dt_inicio_p, dt_fim_p, ie_intervalo_p) LOOP
    BEGIN


      SELECT CASE ie_intervalo_p
       WHEN 1 THEN 'ddd'
       WHEN 2 THEN 'day'
       WHEN 3 THEN 'month'
       WHEN 4 THEN 'year'
       ELSE 'null' END
       INTO STRICT ie_intervalo_w
;


      FOR r_c02_w IN C02(r_c01_w.dt_tempo, ie_intervalo_w) LOOP

        t_meta_regulacao_beyond_w.ie_intervalo              := r_c01_w.tempo;
        t_meta_regulacao_beyond_w.nr_populacao              := r_c02_w.nr_populacao;
        t_meta_regulacao_beyond_w.nr_medicos                := r_c02_w.nr_medicos;
        t_meta_regulacao_beyond_w.nr_consulta_contrato       := r_c02_w.nr_consulta_contrato;
        t_meta_regulacao_beyond_w.nr_consulta_agendada      := r_c02_w.nr_consulta_agendada;
        t_meta_regulacao_beyond_w.nr_consulta_executada      := r_c02_w.nr_consulta_executada;
        t_meta_regulacao_beyond_w.nr_encaminhamentos        := r_c02_w.nr_encaminhamentos;
        t_meta_regulacao_beyond_w.nr_equipamentos            := r_c02_w.nr_equipamentos;
        t_meta_regulacao_beyond_w.nr_medicamentos            := r_c02_w.nr_medicamentos;
        t_meta_regulacao_beyond_w.nr_solicitacao_cirurgia    := r_c02_w.nr_solicitacao_cirurgia;
        t_meta_regulacao_beyond_w.nr_solicitacao_exames      := r_c02_w.nr_solicitacao_exames;
        t_meta_regulacao_beyond_w.nr_solicitacao_vagas      := r_c02_w.nr_solicitacao_vagas;
        t_meta_regulacao_beyond_w.nr_transferencia_cuidado  := r_c02_w.nr_transferencia_cuidado;
        t_meta_regulacao_beyond_w.nr_vacinas                := r_c02_w.nr_vacinas;

      RETURN NEXT t_meta_regulacao_beyond_w;
    END LOOP;


    END;
  END LOOP;



  RETURN;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION meta_regulacao_beyond_pck.imprimir_meta_regulacao_beyond ( dt_inicio_p text, dt_fim_p text, ie_intervalo_p bigint) FROM PUBLIC;
