-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_conta_autor_pck.obter_dados_procedimento_ds ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, ie_origem_proced_p pls_guia_plano_proc.ie_origem_proced%type, cd_procedimento_p pls_guia_plano_proc.cd_procedimento%type, cd_guia_ok_p pls_guia_plano.cd_guia%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type) RETURNS SETOF T_CONTA_AUTOR_DATA AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Retornar os dados dos procedimentos comparando as quantidade Autorizada e
	Utilizada.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atencao:

Pode ser verificado apenas um procedimento passando o mesmo nos parametros, e o mais inidicado para
realizacao das validacoes.

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------
 jjung OS 629123 20/02/2014 - 
 
 Alteracao:	Alterado para que quando exista uma guia de prorrogacao de internacao seja retornado
	apenas uma linha. 
	
Motivo:	Foi identificado que quando desta situacao estava sendo retornado duas ou mais  linhas 
	com informacoes inconsistentes em cada uma delas.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
conta_autor_proc_row_w 		t_conta_autor_row;
qt_utilizada_w			pls_conta_proc.qt_procedimento%type;
qt_utilizada_soma_w		pls_conta_proc.qt_procedimento%type;
qt_utilizada_soma_compl_w	pls_conta_proc.qt_procedimento%type;
qt_utilizada_fora_compl_w	pls_conta_proc.qt_procedimento%type;
qt_prorrogacao_w		pls_guia_plano_proc.qt_autorizada%type	:= 0;
nr_seq_conta_w			pls_conta_proc.nr_seq_conta%type;
sql_conta_w 			varchar(4000);
filtro_regra_sql_w 		varchar(2000);
var_cur_w 			integer;
var_exec_w			integer;
var_retorno_w			integer;
nr_seq_guia_ref_w		pls_guia_plano.nr_seq_guia_principal%type;
nr_seq_grau_partic_w		pls_proc_participante.nr_seq_grau_partic%type;
ie_glosa_w			pls_conta.ie_glosa%type;
ie_estagio_complemento_w	pls_conta.ie_estagio_complemento%type;
ie_status_w			pls_conta_proc.ie_status%type;
ie_status_ww			pls_conta_proc.ie_status%type		:= null;
dt_procedimento_w		pls_conta_proc.dt_procedimento%type;
dt_procedimento_ww		pls_conta_proc.dt_procedimento%type	:= null;
ie_analise_cm_nova_w		pls_parametros.ie_analise_cm_nova%type;

C01 CURSOR(	nr_seq_guia_pc		pls_guia_plano.nr_sequencia%type,
		ie_origem_proced_pc	pls_guia_plano_proc.ie_origem_proced%type,
		cd_procedimento_pc	pls_guia_plano_proc.cd_procedimento%type) FOR
	SELECT 	-- Agrupa as guias de um mesmo atendimento.
		a.nr_seq_guia_ok 	nr_seq_guia,
		b.ie_origem_proced,
		b.cd_procedimento,
		max(a.nr_seq_regra_compl) nr_seq_regra_compl,
		sum(b.qt_autorizada) qt_autorizada
	from	pls_guia_plano a,
		pls_guia_plano_proc b
	where	((a.nr_sequencia  = nr_seq_guia_pc) or (a.nr_seq_guia_ok = nr_seq_guia_pc and a.ie_tipo_guia in ('2','8')))
	and	a.ie_status		= '1'
	and	b.nr_seq_guia		= a.nr_sequencia
	and	b.ie_status 		in ('L', 'P', 'S')
	-- se for para verificar somente de um procedimento filtra direto ja
	and ((coalesce(ie_origem_proced_pc::text, '') = '' and coalesce(cd_procedimento_pc::text, '') = '') or (b.ie_origem_proced = ie_origem_proced_pc and b.cd_procedimento = cd_procedimento_pc))
	group by  -- Agrupa as guias de um mesmo atendimento.
		 a.nr_seq_guia_ok, b.ie_origem_proced, b.cd_procedimento;

-- Precisa do order by porque pode existir mais de um procedimento com o mesmo codigo e data
C02 CURSOR(nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type,
	    cd_procedimento_pc	pls_conta_proc.cd_procedimento%type,
	    ie_origem_proced_pc	pls_conta_proc.ie_origem_proced%type,
		cd_guia_ok_pc		pls_guia_plano.cd_guia%type,
		nr_seq_segurado_pc	pls_conta.nr_seq_segurado%type) FOR
	SELECT 	nr_seq_grau_partic,
	       	ie_glosa,
	       	ie_estagio_complemento,
	       	ie_status,
	       	dt_item,
		sum(qt_procedimento) qt_procedimento
	from    pls_conta_autor_v
	where   ((nr_seq_guia 	= nr_seq_guia_pc) or (cd_guia_ok = cd_guia_ok_pc and nr_seq_segurado = nr_seq_segurado_pc))
	and   	ie_origem_proced = ie_origem_proced_pc
	and   	cd_procedimento  = cd_procedimento_pc
	and	ie_tipo_item	in ('P','D')
	group by nr_seq_grau_partic,
	          ie_glosa,
	          ie_estagio_complemento,
	          ie_status,
	          dt_item
	order by qt_procedimento desc,
		 ie_status,
		 dt_item;
		
C03 CURSOR(	nr_seq_guia_pc		pls_guia_plano.nr_sequencia%type) FOR
	SELECT 	-- Agrupa as guias de um mesmo atendimento.
		a.nr_seq_guia_ok nr_seq_guia,
		b.ie_origem_proced,
		b.cd_procedimento,
		max(a.nr_seq_regra_compl) nr_seq_regra_compl,
		sum(b.qt_autorizada) qt_autorizada
	from	pls_guia_plano a,
		pls_guia_plano_proc b
	where	((a.nr_sequencia  = nr_seq_guia_pc) or (a.nr_seq_guia_ok = nr_seq_guia_pc and a.ie_tipo_guia in ('2','8')))
	and	a.ie_status		= '1'
	and	b.nr_seq_guia		= a.nr_sequencia
	and	b.ie_status 		in ('L', 'P', 'S')
	group by  -- Agrupa as guias de um mesmo atendimento.
		 a.nr_seq_guia_ok, b.ie_origem_proced, b.cd_procedimento;
		
BEGIN
filtro_regra_sql_w := '';

select	coalesce(max(ie_analise_cm_nova),'S')
into STRICT	ie_analise_cm_nova_w
from	pls_parametros;

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
	
	for r_C01 in C01(nr_seq_guia_p, ie_origem_proced_p, cd_procedimento_p) loop
		conta_autor_proc_row_w.ie_tipo_registro 	:= 'P';
		conta_autor_proc_row_w.nr_seq_autor 		:= r_C01.nr_seq_guia;
		conta_autor_proc_row_w.nr_seq_conta 		:= null;
		conta_autor_proc_row_w.nr_seq_conta_proc_mat 	:= null;
		conta_autor_proc_row_w.qt_autorizada 		:= r_C01.qt_autorizada;
		conta_autor_proc_row_w.qt_utilizada 		:= 0;
		conta_autor_proc_row_w.qt_saldo  	    	:= 0;
		conta_autor_proc_row_w.cd_procedimento      	:= r_C01.cd_procedimento;
		conta_autor_proc_row_w.ie_origem_proced     	:= r_C01.ie_origem_proced;
		conta_autor_proc_row_w.nr_seq_material      	:= null;
		conta_autor_proc_row_w.qt_saldo_complemento 	:= 0;
		conta_autor_proc_row_w.qt_utilizada_compl   	:= 0;
		-- tratamento para obter as quantidades dos procedimentos
		qt_utilizada_soma_w 		:= 0;
		qt_utilizada_soma_compl_w 	:= 0;
		qt_utilizada_fora_compl_w	:= 0;
		dt_procedimento_ww		:= null;
		ie_status_ww			:= null;
		
		for r_c02_w in C02(nr_seq_guia_p,r_C01.cd_procedimento,r_C01.ie_origem_proced,cd_guia_ok_p, nr_seq_segurado_p) loop
			begin
			/* tratamento para atualizar a quantidade utilizada e saldo das guias de complemento*/

			if (r_c01.nr_seq_regra_compl IS NOT NULL AND r_c01.nr_seq_regra_compl::text <> '') and
				(r_c02_w.ie_estagio_complemento != '3' AND r_c02_w.ie_estagio_complemento IS NOT NULL AND r_c02_w.ie_estagio_complemento::text <> '')  then
				qt_utilizada_soma_compl_w := qt_utilizada_soma_compl_w + coalesce(r_c02_w.qt_procedimento,0);
			end if;
			
			/*Quantidade utilizada exclusivamente fora do complemento. Isso aqui e feito pois casos com regra de complemento, podem ter utilizacao via digitacao pelo portal por exemplo, com isso, o saldo do complemento necessita de 
			atualizacao tambem
			*/
			if (r_c01.nr_seq_regra_compl IS NOT NULL AND r_c01.nr_seq_regra_compl::text <> '') and (coalesce(r_c02_w.ie_estagio_complemento::text, '') = '') and
				((r_c02_w.ie_glosa = 'N') or (coalesce(r_c02_w.ie_glosa::text, '') = '') or (ie_analise_cm_nova_w = 'N')) and (r_c02_w.ie_status != 'U') then
				qt_utilizada_fora_compl_w := qt_utilizada_fora_compl_w + coalesce(r_c02_w.qt_procedimento,0);
			end if;
			
			/* tratamento para atualizar a quantidade utilizada das guias no geral*/

			if	((coalesce(r_c02_w.nr_seq_grau_partic::text, '') = '') or
				((r_c02_w.nr_seq_grau_partic IS NOT NULL AND r_c02_w.nr_seq_grau_partic::text <> '' AND qt_utilizada_soma_w = 0) or (trunc(r_c02_w.dt_item) <> trunc(dt_procedimento_ww)))) and
				((r_c02_w.ie_glosa = 'N') or (coalesce(r_c02_w.ie_glosa::text, '') = '') or (ie_analise_cm_nova_w = 'N')) and
				((r_c02_w.ie_status != 'U') or (r_c02_w.ie_estagio_complemento != '3' AND r_c02_w.ie_estagio_complemento IS NOT NULL AND r_c02_w.ie_estagio_complemento::text <> '')) then
				
				qt_utilizada_soma_w := qt_utilizada_soma_w + coalesce(r_c02_w.qt_procedimento, 0);
				dt_procedimento_ww:= r_c02_w.dt_item;
				ie_status_ww	  := r_c02_w.ie_status;
			end if;
			end;
		end loop;
			
		conta_autor_proc_row_w.qt_utilizada_compl   := qt_utilizada_soma_compl_w;
		conta_autor_proc_row_w.qt_saldo_complemento := (r_C01.qt_autorizada - qt_utilizada_soma_compl_w - qt_utilizada_fora_compl_w );

		conta_autor_proc_row_w.qt_utilizada := qt_utilizada_soma_w;
		conta_autor_proc_row_w.qt_saldo := (r_C01.qt_autorizada - qt_utilizada_soma_w);
		
		RETURN NEXT conta_autor_proc_row_w;
	end loop;
else
	for r_C03 in C03(nr_seq_guia_p) loop
		conta_autor_proc_row_w.ie_tipo_registro 	:= 'P';
		conta_autor_proc_row_w.nr_seq_autor 		:= r_C03.nr_seq_guia;
		conta_autor_proc_row_w.nr_seq_conta 		:= null;
		conta_autor_proc_row_w.nr_seq_conta_proc_mat 	:= null;
		conta_autor_proc_row_w.qt_autorizada 		:= r_C03.qt_autorizada;
		conta_autor_proc_row_w.qt_utilizada 		:= 0;
		conta_autor_proc_row_w.qt_saldo  	    	:= 0;
		conta_autor_proc_row_w.cd_procedimento      	:= r_C03.cd_procedimento;
		conta_autor_proc_row_w.ie_origem_proced     	:= r_C03.ie_origem_proced;
		conta_autor_proc_row_w.nr_seq_material      	:= null;
		conta_autor_proc_row_w.qt_saldo_complemento 	:= 0;
		conta_autor_proc_row_w.qt_utilizada_compl   	:= 0;
		-- tratamento para obter as quantidades dos procedimentos
		qt_utilizada_soma_w 		:= 0;
		qt_utilizada_soma_compl_w 	:= 0;
		qt_utilizada_fora_compl_w	:= 0;
		dt_procedimento_ww		:= null;
		ie_status_ww			:= null;

		for r_c02_w in C02(nr_seq_guia_p,r_C03.cd_procedimento,r_C03.ie_origem_proced, cd_guia_ok_p, nr_seq_segurado_p) loop
			begin
			/* tratamento para atualizar a quantidade utilizada e saldo das guias de complemento*/

			if (r_c03.nr_seq_regra_compl IS NOT NULL AND r_c03.nr_seq_regra_compl::text <> '') and
				(r_c02_w.ie_estagio_complemento != '3' AND r_c02_w.ie_estagio_complemento IS NOT NULL AND r_c02_w.ie_estagio_complemento::text <> '')  then
				qt_utilizada_soma_compl_w := qt_utilizada_soma_compl_w + coalesce(r_c02_w.qt_procedimento,0);
			end if;
			
			/*Quantidade utilizada exclusivamente fora do complemento. Isso aqui e feito pois casos com regra de complemento, podem ter utilizacao via digitacao pelo portal por exemplo, com isso, o saldo do complemento necessita de 
			atualizacao tambem
			*/
			if (r_c03.nr_seq_regra_compl IS NOT NULL AND r_c03.nr_seq_regra_compl::text <> '') and (coalesce(r_c02_w.ie_estagio_complemento::text, '') = '') and
				((r_c02_w.ie_glosa = 'N') or (coalesce(r_c02_w.ie_glosa::text, '') = '') or (ie_analise_cm_nova_w = 'N')) and (r_c02_w.ie_status != 'U')   then
				qt_utilizada_fora_compl_w := qt_utilizada_fora_compl_w + coalesce(r_c02_w.qt_procedimento,0);
			end if;
						
			/* tratamento para atualizar a quantidade utilizada das guias no geral*/
		
			if	((coalesce(r_c02_w.nr_seq_grau_partic::text, '') = '') or
				((r_c02_w.nr_seq_grau_partic IS NOT NULL AND r_c02_w.nr_seq_grau_partic::text <> '' AND qt_utilizada_soma_w = 0) or (trunc(r_c02_w.dt_item) <> trunc(dt_procedimento_ww)))) and
				((r_c02_w.ie_glosa = 'N') or (coalesce(r_c02_w.ie_glosa::text, '') = '') or (ie_analise_cm_nova_w = 'N')) and
				((r_c02_w.ie_status != 'U') or (r_c02_w.ie_estagio_complemento != '3' AND r_c02_w.ie_estagio_complemento IS NOT NULL AND r_c02_w.ie_estagio_complemento::text <> '')) then
								
				qt_utilizada_soma_w := qt_utilizada_soma_w + coalesce(r_c02_w.qt_procedimento, 0);
				dt_procedimento_ww:= r_c02_w.dt_item;
				ie_status_ww	  := r_c02_w.ie_status;
			end if;
			end;
		end loop;

		conta_autor_proc_row_w.qt_utilizada_compl   := qt_utilizada_soma_compl_w;		
		conta_autor_proc_row_w.qt_saldo_complemento := (r_C03.qt_autorizada - qt_utilizada_soma_compl_w  - qt_utilizada_fora_compl_w );
		conta_autor_proc_row_w.qt_utilizada := qt_utilizada_soma_w;
		conta_autor_proc_row_w.qt_saldo := (r_C03.qt_autorizada - qt_utilizada_soma_w);

		
		RETURN NEXT conta_autor_proc_row_w;
	end loop;
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_conta_autor_pck.obter_dados_procedimento_ds ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, ie_origem_proced_p pls_guia_plano_proc.ie_origem_proced%type, cd_procedimento_p pls_guia_plano_proc.cd_procedimento%type, cd_guia_ok_p pls_guia_plano.cd_guia%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type) FROM PUBLIC;
