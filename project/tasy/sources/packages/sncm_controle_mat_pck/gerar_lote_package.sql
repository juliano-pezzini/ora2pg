-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE sncm_controle_mat_pck.gerar_lote ( nr_seq_lote_p controle_mat_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE


	nr_seq_arquivo_w	controle_mat_arquivo.nr_sequencia%type;
	ie_valido_w		varchar(5);
	nr_seq_regra_w		controle_mat_lote.nr_seq_regra%type;

	controle_mat_arquivo_w	controle_mat_arquivo%rowtype;
	controle_mat_evento_w	controle_mat_evento%rowtype;

	c01 CURSOR FOR
		SELECT	e.nr_sequencia nr_seq_evento,
			e.ie_tipo_evento
		from	controle_mat_evento e
		where	coalesce(e.nr_seq_arquivo::text, '') = '';

	
BEGIN
	update	controle_mat_lote
	set	dt_ini_geracao	= clock_timestamp(),
		ie_status	= '2', -- Gerando
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
	commit;
	
	select	max(nr_seq_regra)
	into STRICT	nr_seq_regra_w
	from	controle_mat_lote
	where	nr_sequencia	= nr_seq_lote_p;

	for c01_w in c01 loop
	
		-- Verifica se o material 
		ie_valido_w := coalesce(sncm_controle_mat_pck.obter_se_mat_valido( nr_seq_regra_p => nr_seq_regra_w,
							nr_seq_evento_p => c01_w.nr_seq_evento),'N');
	
		if (ie_valido_w = 'S') then
			-- Vincular no maximo 40 eventos por arquivo
			-- nao pode passar de 500kb
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_arquivo_w
			from	controle_mat_arquivo a
			where	a.nr_seq_lote	 = nr_seq_lote_p
			and	a.ie_tipo_evento = c01_w.ie_tipo_evento
			and	exists (SELECT	1
					from	controle_mat_evento e
					where	a.ie_tipo_evento = e.ie_tipo_evento
					and	a.nr_sequencia	= e.nr_seq_arquivo
					having  count(1) < 40);

			if (coalesce(nr_seq_arquivo_w::text, '') = '') then
				select 	 nextval('controle_mat_arquivo_seq')
				into STRICT	nr_seq_arquivo_w
				;

				controle_mat_arquivo_w.nr_sequencia	:= nr_seq_arquivo_w;
				controle_mat_arquivo_w.dt_atualizacao	:= clock_timestamp();
				controle_mat_arquivo_w.nm_usuario	:= nm_usuario_p;
				controle_mat_arquivo_w.dt_atualizacao_nrec := clock_timestamp();
				controle_mat_arquivo_w.nm_usuario_nrec	:= nm_usuario_p;
				controle_mat_arquivo_w.nr_seq_lote	:= nr_seq_lote_p;
				controle_mat_arquivo_w.ie_tipo_evento	:= c01_w.ie_tipo_evento;
				controle_mat_arquivo_w.nr_id_documento	:= lpad(nr_seq_arquivo_w,20,'0');
				controle_mat_arquivo_w.ds_versao	:= '0.01';
				controle_mat_arquivo_w.nr_cpf_ident	:= null;
				controle_mat_arquivo_w.cd_cnpj_ident	:= obter_cgc_estabelecimento(cd_estabelecimento_p => cd_estabelecimento_p);
				controle_mat_arquivo_w.cd_cnes_ident	:= null;
				controle_mat_arquivo_w.cd_cnpj_comunic	:= obter_cgc_estabelecimento(cd_estabelecimento_p => cd_estabelecimento_p);
				controle_mat_arquivo_w.ie_status	:= '1';
				controle_mat_arquivo_w.dt_envio		:= null;

				CALL sncm_controle_mat_pck.inserir_mat_arquivo(controle_mat_arquivo_p => controle_mat_arquivo_w);
			end if;

			controle_mat_evento_w.nr_sequencia	:= c01_w.nr_seq_evento;
			controle_mat_evento_w.nr_seq_arquivo	:= nr_seq_arquivo_w;
			controle_mat_evento_w.nr_seq_lote	:= nr_seq_lote_p;

			CALL sncm_controle_mat_pck.vincular_lote_evento(controle_mat_evento_p => controle_mat_evento_w);
		end if;
	end loop;

	update	controle_mat_lote
	set	dt_fim_geracao	= clock_timestamp(),
		ie_status	= '9', -- Lote gerado
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;

	commit;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sncm_controle_mat_pck.gerar_lote ( nr_seq_lote_p controle_mat_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;
