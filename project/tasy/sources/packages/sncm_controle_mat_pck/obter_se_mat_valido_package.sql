-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION sncm_controle_mat_pck.obter_se_mat_valido ( nr_seq_regra_p controle_mat_lote.nr_seq_regra%type, nr_seq_evento_p controle_mat_evento.nr_sequencia%type ) RETURNS varchar AS $body$
DECLARE

	
	ie_valido_w			varchar(5) := 'N';
	
	cd_material_w			material.cd_material%type;
	nr_seq_fabric_w			material.nr_seq_fabric%type;
	nr_seq_mat_lote_fornec_w	controle_mat_evento.nr_seq_mat_lote_fornec%type;
	cd_cgc_fornec_w			pessoa_juridica.cd_cgc%type;
	
	c01 CURSOR(	nr_seq_regra_pc		 controle_mat_lote.nr_seq_regra%type ) FOR
		SELECT	e.cd_classe_material,
			e.cd_grupo_material,
			e.cd_material,
			e.cd_subgrupo_material,
			e.nr_seq_fabric,
			e.cd_cgc_fornec,
			e.ie_medic_controlado
		from	regra_controle_mat_estrut e
		where	e.nr_seq_regra	= nr_seq_regra_pc;
	
	
BEGIN
	select	max(m.nr_seq_fabric),
		max(m.cd_material),
		max(e.nr_seq_mat_lote_fornec)
	into STRICT	nr_seq_fabric_w,
		cd_material_w,
		nr_seq_mat_lote_fornec_w
	from	controle_mat_evento e,
		material m
	where	m.cd_material	= e.cd_material
	and	e.nr_sequencia	= nr_seq_evento_p;
	
	if (nr_seq_mat_lote_fornec_w IS NOT NULL AND nr_seq_mat_lote_fornec_w::text <> '') then
		select	max(cd_cgc_fornec)
		into STRICT	cd_cgc_fornec_w
		from	material_lote_fornec
		where	nr_sequencia	= nr_seq_mat_lote_fornec_w;
	end if;
	
	if (coalesce(nr_seq_regra_p::text, '') = '') then
		ie_valido_w := 'S';
	else
		for c01_w in c01( nr_seq_regra_p ) loop
			if (ie_valido_w = 'N') then
				-- Validar estrutura de material
				ie_valido_w := coalesce(obter_se_estrutura_mat( cd_grupo_material_p => c01_w.cd_grupo_material,
								cd_subgrupo_material_p => c01_w.cd_subgrupo_material,
								cd_classe_material_p => c01_w.cd_classe_material, 
								cd_material_estrut_p => c01_w.cd_material, 
								cd_material_p => cd_material_w, 
								ie_acao_p => 'S'),'N');
				
				-- Validar fabricante
				if (ie_valido_w = 'S') and (c01_w.nr_seq_fabric IS NOT NULL AND c01_w.nr_seq_fabric::text <> '') and (c01_w.nr_seq_fabric != coalesce(nr_seq_fabric_w,0)) then
					ie_valido_w := 'N';
				end if;
				
				-- Validar medicamento controlado
				if (ie_valido_w = 'S') and (coalesce(c01_w.ie_medic_controlado,'N') = 'S') then
					ie_valido_w := coalesce(obter_se_medic_controlado(	cd_material_p => cd_material_w,
											cd_estabelecimento_p => null),'N');
				end if;
				
				-- Validar fornecedor
				if (ie_valido_w = 'S') and (c01_w.cd_cgc_fornec IS NOT NULL AND c01_w.cd_cgc_fornec::text <> '') then
					if (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') then
					
						-- Validar se o forncedor e o mesmo da MATERIAL_LOTE_FORNEC
						if (c01_w.cd_cgc_fornec != cd_cgc_fornec_w) then
							ie_valido_w := 'N';
						end if;
					else
						-- Validar se o forcedor e o mesmo do cadastro de material
						select	max(cd_cgc)
						into STRICT	cd_cgc_fornec_w
						from	material_fornec
						where	cd_material	= cd_material_w
						and	cd_cgc		= c01_w.cd_cgc_fornec;
						
						if (coalesce(cd_cgc_fornec_w::text, '') = '') then
							ie_valido_w := 'N';
						end if;
					end if;
				end if;
			end if;
		end loop;
	end if;
	
	return ie_valido_w;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sncm_controle_mat_pck.obter_se_mat_valido ( nr_seq_regra_p controle_mat_lote.nr_seq_regra%type, nr_seq_evento_p controle_mat_evento.nr_sequencia%type ) FROM PUBLIC;
