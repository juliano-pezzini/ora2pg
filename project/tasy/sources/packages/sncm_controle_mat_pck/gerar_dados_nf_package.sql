-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE sncm_controle_mat_pck.gerar_dados_nf ( nr_seq_nota_fiscal_p nota_fiscal.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) AS $body$
DECLARE


	_ora2pg_r RECORD;
ie_tipo_evento_w		controle_mat_evento.ie_tipo_evento%type;
	ie_motivo_finalizacao_w		controle_mat_evento.ie_motivo_finalizacao%type;
	ds_motivo_finalizacao_w		controle_mat_evento.ds_motivo_finalizacao%type;
	nr_cpf_comprador_w		controle_mat_evt_ium.nr_cpf_comprador%type;
	nr_cpf_paciente_w		controle_mat_evt_ium.nr_cpf_paciente%type;
	cd_cgc_transp_w			controle_mat_evt_pessoa.cd_cnpj%type;
	cd_cgc_comunic_w		controle_mat_evt_pessoa.cd_cnpj%type;
	cd_doenca_w			diagnostico_doenca.cd_doenca%type;
	dt_prescricao_w			controle_mat_evt_ium.dt_prescricao%type;
	cd_prescritor_w			prescr_medica.cd_prescritor%type;
	cd_prof_prescricao_w		controle_mat_evt_ium.cd_prof_prescricao%type;
	nr_notif_receita_w		controle_mat_evt_ium.nr_notif_receita%type;
	nr_notif_receita_sncr_w		controle_mat_evt_ium.nr_notif_receita_sncr%type;
	
	nr_seq_evento_w			controle_mat_evento.nr_sequencia%type;
	nr_seq_pessoa_w			controle_mat_evt_pessoa.nr_sequencia%type;
	nr_seq_ium_w			controle_mat_evt_ium.nr_sequencia%type;
	nr_seq_iet_w			controle_mat_evt_iet.nr_sequencia%type;
	
	controle_mat_evento_w		controle_mat_evento%rowtype;
	controle_mat_evt_pessoa_w	reg_controle_mat_evt_pessoa;
	controle_mat_evt_ium_w		reg_controle_mat_evt_ium;
	controle_mat_evt_iet_w		reg_controle_mat_evt_iet;
	
	-- nota_fiscal.ie_tipo_nota
	-- EF = Entrada por pessoa fisica
	-- EN = Entrada
	-- EP = Entrada(Emissao propria)
	-- NC = Nota complementar
	-- SD = Saida por digitacao
	-- SE = Saida por emissao
	-- SF = Saida por pessoa fisica
	-- ST = Saida transferencia estoque
	c01 CURSOR(	nr_seq_nota_fiscal_pc	 nota_fiscal.nr_sequencia%type) FOR
		SELECT	i.cd_material,
			n.nr_nota_fiscal,
			n.cd_cgc,
			n.cd_cgc_emitente,
			n.ie_tipo_nota,
			l.cd_cgc_fornec,
			n.cd_pessoa_fisica,
			l.nr_sequencia nr_seq_mat_lote_fornec,
			l.cd_gtin,
			l.cd_serial,
			l.dt_expiracao,
			l.cd_lote,
			l.cd_sscc,
			l.cd_gtinsn,
			l.cd_serial_transp,
			null cd_pessoa_paciente,
			null nr_atendimento,
			null nr_prescricao
		from	material_lote_fornec l,
			nota_fiscal_item i,
			nota_fiscal n
		where	n.nr_sequencia	= i.nr_sequencia
		and	i.nr_sequencia	= l.nr_sequencia_nf
		and	i.nr_item_nf	= l.nr_item_nf
		and	(i.cd_material IS NOT NULL AND i.cd_material::text <> '')
		and	coalesce(n.nr_seq_protocolo::text, '') = ''
		and	n.nr_sequencia	= nr_seq_nota_fiscal_pc
		
union

		SELECT	i.cd_material,
			n.nr_nota_fiscal,
			n.cd_cgc,
			n.cd_cgc_emitente,
			n.ie_tipo_nota,
			l.cd_cgc_fornec,
			n.cd_pessoa_fisica,
			l.nr_sequencia nr_seq_mat_lote_fornec,
			l.cd_gtin,
			l.cd_serial,
			l.dt_expiracao,
			l.cd_lote,
			l.cd_sscc,
			l.cd_gtinsn,
			l.cd_serial_transp,
			null cd_pessoa_paciente,
			null nr_atendimento,
			null nr_prescricao
		from	material_lote_fornec_nf m,
			material_lote_fornec l,
			nota_fiscal_item i,
			nota_fiscal n
		where	l.nr_sequencia	= m.nr_seq_lote_fornec
		and	n.nr_sequencia	= i.nr_sequencia
		and	i.nr_sequencia	= m.nr_sequencia_nf
		and	i.nr_item_nf	= m.nr_item_nf
		and	(i.cd_material IS NOT NULL AND i.cd_material::text <> '')
		and	coalesce(n.nr_seq_protocolo::text, '') = ''
		and	n.nr_sequencia	= nr_seq_nota_fiscal_pc
		
union

		-- Pegar material da conta paciente,
		-- na nota fiscal o item fica agrupado
		select	b.cd_material,
			n.nr_nota_fiscal,
			n.cd_cgc,
			n.cd_cgc_emitente,
			n.ie_tipo_nota,
			b.cd_cgc_fornecedor,
			n.cd_pessoa_fisica,
			l.nr_sequencia nr_seq_mat_lote_fornec,
			l.cd_gtin,
			l.cd_serial,
			l.dt_expiracao,
			l.cd_lote,
			l.cd_sscc,
			l.cd_gtinsn,
			l.cd_serial_transp,
			a.cd_pessoa_fisica cd_pessoa_paciente,
			a.nr_atendimento,
			b.nr_prescricao
		from	nota_fiscal n,
			conta_paciente c,
			material_atend_paciente b,
			atendimento_paciente a,
			material_lote_fornec l
		where	c.nr_seq_protocolo = n.nr_seq_protocolo
		and	c.nr_interno_conta = b.nr_interno_conta
		and	a.nr_atendimento = c.nr_atendimento
		and	b.nr_seq_lote_fornec = l.nr_sequencia
		and	(b.cd_material IS NOT NULL AND b.cd_material::text <> '')
		and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
		and	n.nr_sequencia	= nr_seq_nota_fiscal_pc;
	
	
BEGIN

	for c01_w in c01( nr_seq_nota_fiscal_p ) loop	
		ie_motivo_finalizacao_w := null;
		ds_motivo_finalizacao_w := null;
		nr_cpf_comprador_w := null;
		cd_cgc_transp_w := null;
		cd_cgc_comunic_w := null;
	
		-- Pegar o tipo do evento
		if (c01_w.ie_tipo_nota in ('EF','EN','EP')) then
			ie_tipo_evento_w := '3'; -- Recebimento			
			cd_cgc_transp_w := c01_w.cd_cgc_emitente;
			cd_cgc_comunic_w := c01_w.cd_cgc;
			
		elsif (c01_w.ie_tipo_nota in ('SD','SE','SF')) then
			ie_tipo_evento_w := '4'; -- Finalizacao
			cd_cgc_transp_w := c01_w.cd_cgc;
			cd_cgc_comunic_w := c01_w.cd_cgc_emitente;
			ie_motivo_finalizacao_w := '1'; -- Dispensacao
			ds_motivo_finalizacao_w := substr(obter_desc_expressao(cd_expressao_p => 288017, ds_expressao_p => null),1,255);
			
			if (c01_w.ie_tipo_nota = 'SF') then
				if (c01_w.cd_pessoa_fisica IS NOT NULL AND c01_w.cd_pessoa_fisica::text <> '') then
					begin
					select	nr_cpf
					into STRICT	nr_cpf_comprador_w
					from	pessoa_fisica
					where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica;
					exception
					when no_data_found or too_many_rows then
						nr_cpf_comprador_w := null;
					end;
				end if;
				
				if (c01_w.cd_pessoa_paciente IS NOT NULL AND c01_w.cd_pessoa_paciente::text <> '') then
					begin
					select	nr_cpf
					into STRICT	nr_cpf_paciente_w
					from	pessoa_fisica
					where	cd_pessoa_fisica = c01_w.cd_pessoa_paciente;
					exception
					when no_data_found or too_many_rows then
						nr_cpf_paciente_w := null;
					end;
				end if;
				
				if (c01_w.nr_atendimento IS NOT NULL AND c01_w.nr_atendimento::text <> '') then
					select	max(cd_doenca)
					into STRICT	cd_doenca_w
					from	diagnostico_doenca
					where	nr_atendimento = c01_w.nr_atendimento
					and	ie_classificacao_doenca = 'P';
					
					if (coalesce(cd_doenca_w::text, '') = '') then
						select	max(cd_doenca)
						into STRICT	cd_doenca_w
						from	diagnostico_doenca
						where	nr_atendimento = c01_w.nr_atendimento;
					end if;
				end if;
				
				if (c01_w.nr_prescricao IS NOT NULL AND c01_w.nr_prescricao::text <> '') then
					begin
					select	dt_prescricao,
						coalesce(cd_prescritor,cd_medico)
					into STRICT	dt_prescricao_w,
						cd_prescritor_w
					from	prescr_medica
					where	nr_prescricao = c01_w.nr_prescricao;
					exception
					when no_data_found or too_many_rows then
						dt_prescricao_w := null;
						cd_prescritor_w := null;
					end;
					
					if (cd_prescritor_w IS NOT NULL AND cd_prescritor_w::text <> '') then
						begin
						select	coalesce(to_char(nr_prescritor),nr_crm)
						into STRICT	cd_prof_prescricao_w
						from	medico
						where	cd_pessoa_fisica = cd_prescritor_w;
						exception
						when no_data_found or too_many_rows then
							cd_prof_prescricao_w := null;
						end;
						
						if (coalesce(cd_prof_prescricao_w::text, '') = '') then
							begin
							select	ds_codigo_prof
							into STRICT	cd_prof_prescricao_w
							from	pessoa_fisica
							where	cd_pessoa_fisica = cd_prescritor_w;
							exception
							when no_data_found or too_many_rows then
								cd_prof_prescricao_w := null;
							end;
						end if;
					end if;
					
					begin
					select	nr_sequencia,
						cd_ext_referencia
					into STRICT	nr_notif_receita_w,
						nr_notif_receita_sncr_w
					from	med_receita
					where	nr_prescricao = c01_w.nr_prescricao;
					exception
					when no_data_found or too_many_rows then
						nr_notif_receita_w := null;
						nr_notif_receita_sncr_w := null;
					end;
				end if;
			end if;
			
		elsif (c01_w.ie_tipo_nota in ('ST')) then
			ie_tipo_evento_w := '2'; -- Expedicao
			cd_cgc_transp_w := c01_w.cd_cgc;
			cd_cgc_comunic_w := c01_w.cd_cgc_emitente;
		end if;
		
		-- INSERIR EVENTO
		select	nextval('controle_mat_evento_seq')
		into STRICT	nr_seq_evento_w
		;
		
		controle_mat_evento_w.nr_sequencia := nr_seq_evento_w;
		controle_mat_evento_w.dt_atualizacao := clock_timestamp();
		controle_mat_evento_w.nm_usuario := nm_usuario_p;
		controle_mat_evento_w.dt_atualizacao_nrec := clock_timestamp();
		controle_mat_evento_w.nm_usuario_nrec := nm_usuario_p;
		controle_mat_evento_w.nr_seq_arquivo := null;
		controle_mat_evento_w.cd_material := c01_w.cd_material;
		controle_mat_evento_w.nr_movimento_estoque := null;
		controle_mat_evento_w.ie_tipo_evento := ie_tipo_evento_w;
		controle_mat_evento_w.nr_id_evento := lpad(nr_seq_evento_w,20,'0');
		controle_mat_evento_w.ie_aprop_consumo := 'S';
		controle_mat_evento_w.nr_seq_evento_revog := null;
		controle_mat_evento_w.nr_id_evento_revog := null;
		controle_mat_evento_w.ds_justificativa_revog := null;
		controle_mat_evento_w.nr_seq_evento_subs := null;
		controle_mat_evento_w.nr_id_evento_subs := null;
		controle_mat_evento_w.ds_justificativa_subs := null;
		controle_mat_evento_w.ie_motivo_finalizacao := ie_motivo_finalizacao_w;
		controle_mat_evento_w.ds_destin_exportacao := null;
		controle_mat_evento_w.ds_motivo_finalizacao := ds_motivo_finalizacao_w;
		controle_mat_evento_w.nr_documento := c01_w.nr_nota_fiscal;
		controle_mat_evento_w.ds_tipo_documento := 'NFe';
		controle_mat_evento_w.nr_seq_lote := null;
		controle_mat_evento_w.nr_seq_mat_lote_fornec := c01_w.nr_seq_mat_lote_fornec;

		-- INSERIR Parceiro da comunicacao
		if (cd_cgc_comunic_w IS NOT NULL AND cd_cgc_comunic_w::text <> '') then
			select	nextval('controle_mat_evt_pessoa_seq')
			into STRICT	nr_seq_pessoa_w
			;
			
			controle_mat_evt_pessoa_w[1].nr_sequencia := nr_seq_pessoa_w;
			controle_mat_evt_pessoa_w[1].dt_atualizacao := clock_timestamp();
			controle_mat_evt_pessoa_w[1].nm_usuario := nm_usuario_p;
			controle_mat_evt_pessoa_w[1].dt_atualizacao_nrec := clock_timestamp();
			controle_mat_evt_pessoa_w[1].nm_usuario_nrec := nm_usuario_p;
			controle_mat_evt_pessoa_w[1].nr_seq_evento := nr_seq_evento_w;
			controle_mat_evt_pessoa_w[1].nr_cpf := null;
			controle_mat_evt_pessoa_w[1].cd_cnpj := cd_cgc_comunic_w;
			controle_mat_evt_pessoa_w[1].cd_cnes := null;
			controle_mat_evt_pessoa_w[1].ie_tipo_pessoa := 1;
		end if;
		
		-- INSERIR Transportador responsavel
		if (cd_cgc_transp_w IS NOT NULL AND cd_cgc_transp_w::text <> '') or (nr_cpf_comprador_w IS NOT NULL AND nr_cpf_comprador_w::text <> '') then
			select	nextval('controle_mat_evt_pessoa_seq')
			into STRICT	nr_seq_pessoa_w
			;
			
			controle_mat_evt_pessoa_w[2].nr_sequencia := nr_seq_pessoa_w;
			controle_mat_evt_pessoa_w[2].dt_atualizacao := clock_timestamp();
			controle_mat_evt_pessoa_w[2].nm_usuario := nm_usuario_p;
			controle_mat_evt_pessoa_w[2].dt_atualizacao_nrec := clock_timestamp();
			controle_mat_evt_pessoa_w[2].nm_usuario_nrec := nm_usuario_p;
			controle_mat_evt_pessoa_w[2].nr_seq_evento := nr_seq_evento_w;
			controle_mat_evt_pessoa_w[2].nr_cpf := null;
			controle_mat_evt_pessoa_w[2].cd_cnpj := null;
			controle_mat_evt_pessoa_w[2].cd_cnes := null;
			controle_mat_evt_pessoa_w[2].ie_tipo_pessoa := 2;
			
			if (cd_cgc_transp_w IS NOT NULL AND cd_cgc_transp_w::text <> '') then
				controle_mat_evt_pessoa_w[2].cd_cnpj := cd_cgc_transp_w;
				
			elsif (nr_cpf_comprador_w IS NOT NULL AND nr_cpf_comprador_w::text <> '') then
				controle_mat_evt_pessoa_w[2].nr_cpf := nr_cpf_comprador_w;
			end if;
		end if;

		-- INSERIR IUM
		if (c01_w.cd_gtin IS NOT NULL AND c01_w.cd_gtin::text <> '') then
		
			select	nextval('controle_mat_evt_ium_seq')
			into STRICT	nr_seq_ium_w
			;
			
			controle_mat_evt_ium_w[1].nr_sequencia := nr_seq_ium_w;
			controle_mat_evt_ium_w[1].dt_atualizacao := clock_timestamp();
			controle_mat_evt_ium_w[1].nm_usuario := nm_usuario_p;
			controle_mat_evt_ium_w[1].dt_atualizacao_nrec := clock_timestamp();
			controle_mat_evt_ium_w[1].nm_usuario_nrec := nm_usuario_p;
			controle_mat_evt_ium_w[1].nr_seq_evento := nr_seq_evento_w;
			controle_mat_evt_ium_w[1].cd_gtin := c01_w.cd_gtin;
			controle_mat_evt_ium_w[1].cd_serial := c01_w.cd_serial;
			controle_mat_evt_ium_w[1].dt_exp := c01_w.dt_expiracao;
			controle_mat_evt_ium_w[1].cd_lote := c01_w.cd_lote;
			controle_mat_evt_ium_w[1].ds_motivo_finalizacao := ds_motivo_finalizacao_w;
			controle_mat_evt_ium_w[1].nr_cpf_comprador := nr_cpf_comprador_w;
			controle_mat_evt_ium_w[1].cd_prof_prescricao := cd_prof_prescricao_w;
			controle_mat_evt_ium_w[1].dt_prescricao := dt_prescricao_w;
			controle_mat_evt_ium_w[1].nr_cpf_resp_tec_farm := null;
			controle_mat_evt_ium_w[1].nr_notif_receita := null;
			controle_mat_evt_ium_w[1].nr_notif_receita_sncr := null;
			controle_mat_evt_ium_w[1].nr_cpf_paciente := nr_cpf_paciente_w;
			controle_mat_evt_ium_w[1].cd_cid := substr(cd_doenca_w,1,6);
			controle_mat_evt_ium_w[1].ie_descons_finalizacao := 'N';
			
			if (nr_notif_receita_w IS NOT NULL AND nr_notif_receita_w::text <> '') then
				controle_mat_evt_ium_w[1].nr_notif_receita := nr_notif_receita_w;
				
			elsif (nr_notif_receita_sncr_w IS NOT NULL AND nr_notif_receita_sncr_w::text <> '') then
				controle_mat_evt_ium_w[1].nr_notif_receita_sncr := nr_notif_receita_sncr_w;
			end if;
		end if;
		
		-- INSERIR IET
		if (c01_w.cd_sscc IS NOT NULL AND c01_w.cd_sscc::text <> '') or (c01_w.cd_gtinsn IS NOT NULL AND c01_w.cd_gtinsn::text <> '') or (c01_w.cd_serial_transp IS NOT NULL AND c01_w.cd_serial_transp::text <> '') then

			select	nextval('controle_mat_evt_iet_seq')
			into STRICT	nr_seq_iet_w
			;
			
			controle_mat_evt_iet_w[1].nr_sequencia := nr_seq_iet_w;
			controle_mat_evt_iet_w[1].dt_atualizacao := clock_timestamp();
			controle_mat_evt_iet_w[1].nm_usuario := nm_usuario_p;
			controle_mat_evt_iet_w[1].dt_atualizacao_nrec := clock_timestamp();
			controle_mat_evt_iet_w[1].nm_usuario_nrec := nm_usuario_p;
			controle_mat_evt_iet_w[1].nr_seq_evento := nr_seq_evento_w;
			controle_mat_evt_iet_w[1].cd_sscc := c01_w.cd_sscc;
			controle_mat_evt_iet_w[1].cd_gtinsn := c01_w.cd_gtinsn;
			controle_mat_evt_iet_w[1].cd_tpserl := c01_w.cd_serial_transp;
			controle_mat_evt_iet_w[1].nr_cpf_exp := null;
			controle_mat_evt_iet_w[1].cd_cnpj_exp := c01_w.cd_cgc_fornec;
			controle_mat_evt_iet_w[1].cd_cnes_exp := null;
			controle_mat_evt_iet_w[1].ie_descons_finalizacao := 'N';
			
			-- Se tem IUM e IET, vincula o IUM ao IET
			if (controle_mat_evt_ium_w.count > 0) then
				controle_mat_evt_ium_w[1].nr_seq_mat_evt_iet := nr_seq_iet_w;
			end if;
		end if;

		-- Inserir registros de IUM e/ou IET
		if (controle_mat_evt_ium_w.count > 0) or (controle_mat_evt_iet_w.count > 0) then
			SELECT * FROM sncm_controle_mat_pck.gera_mat_evento(	controle_mat_evento_p => controle_mat_evento_w, controle_mat_evt_pessoa_p => controle_mat_evt_pessoa_w, controle_mat_evt_iet_p => controle_mat_evt_iet_w, controle_mat_evt_ium_p => controle_mat_evt_ium_w) INTO STRICT _ora2pg_r;
 controle_mat_evt_pessoa_w := _ora2pg_r.controle_mat_evt_pessoa_p; controle_mat_evt_iet_w := _ora2pg_r.controle_mat_evt_iet_p; controle_mat_evt_ium_w := _ora2pg_r.controle_mat_evt_ium_p;
		end if;
		
		-- Limpar variaveis
		controle_mat_evt_pessoa_w.delete;
		controle_mat_evt_ium_w.delete;
		controle_mat_evt_iet_w.delete;
	end loop;
	
	if (coalesce(ie_commit_p,'N') = 'S') then
		commit;
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sncm_controle_mat_pck.gerar_dados_nf ( nr_seq_nota_fiscal_p nota_fiscal.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) FROM PUBLIC;
