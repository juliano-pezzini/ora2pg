-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_odonto_pck.duplicar_req_odonto (nr_seq_requisicao_p pls_requisicao_proc.nr_seq_requisicao%type, cd_estabelecimento_p pls_requisicao.cd_estabelecimento%type, nm_usuario_p pls_requisicao.nm_usuario%type) AS $body$
DECLARE


    ds_historico_w      varchar(4000);
    ds_histrico_itens_w varchar(4000);

    cd_guia_principal_w        pls_requisicao.cd_guia_principal%type;
    cd_matricula_estipulante_w pls_segurado.cd_matricula_estipulante%type;
    cd_procedimento_w          pls_requisicao_proc.cd_procedimento%type;
    ie_requisicao_imp_w        pls_requisicao.ie_requisicao_imp%type;
    ie_status_w                pls_requisicao_proc.ie_status%type;

    nr_seq_plano_w          pls_requisicao.nr_seq_plano%type;
    nr_seq_proc_anexo_nov_w pls_requisicao_proc.nr_sequencia%type;
    nr_seq_requisicao_w     pls_requisicao_proc.nr_seq_requisicao%type;
    nr_seq_segurado_w       pls_requisicao.nr_seq_segurado%type;

    c01 CURSOR FOR
      SELECT cd_procedimento, ie_status
        from pls_requisicao_proc
       where nr_seq_requisicao = nr_seq_requisicao_p;

    c02 CURSOR FOR
      SELECT nr_sequencia,
             ie_origem_proced,
             cd_procedimento,
             ie_tipo_anexo,
             qt_solicitado,
             vl_procedimento,
             ie_utiliza_opme,
             cd_procedimento_ptu,
             ds_observacao,
             ds_procedimento_ptu,
             qt_procedimento,
             ie_tipo_tabela
        from pls_requisicao_proc
       where nr_seq_requisicao = nr_seq_requisicao_p;

BEGIN
  
    begin
      select ie_requisicao_imp, nr_seq_segurado
        into STRICT ie_requisicao_imp_w, nr_seq_segurado_w
        from pls_requisicao
       where nr_sequencia = nr_seq_requisicao_p
         and cd_estabelecimento = cd_estabelecimento_p;
    exception
      when no_data_found then
        ie_requisicao_imp_w := 'N';
        nr_seq_segurado_w   := null;
    end;

    begin
      select cd_matricula_estipulante
        into STRICT cd_matricula_estipulante_w
        from pls_segurado
       where nr_sequencia = nr_seq_segurado_w;

      nr_seq_plano_w := pls_obter_produto_benef(nr_seq_segurado_w, clock_timestamp());
    exception
      when no_data_found then
        nr_seq_plano_w             := null;
        cd_matricula_estipulante_w := null;
    end;

    if (coalesce(ie_requisicao_imp_w, 'N') = 'S') then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(138424);
    end if;

    if (coalesce(nr_seq_requisicao_p, 0) <> 0) then
      select nextval('pls_requisicao_seq') into STRICT nr_seq_requisicao_w;

      insert into pls_requisicao(nr_sequencia,
         dt_requisicao,
         dt_atualizacao,
         nm_usuario,
         dt_atualizacao_nrec,
         nm_usuario_nrec,
         nr_seq_segurado,
         cd_medico_solicitante,
         ie_status,
         nr_seq_plano,
         cd_estabelecimento,
         ie_tipo_guia,
         ie_estagio,
         ie_tipo_requisicao,
         nr_seq_motivo_inclusao,
         nr_seq_prestador,
         qt_dia_solicitado,
         qt_dia_autorizado,
         cd_especialidade,
         ie_tipo_consulta,
         nm_recem_nascido,
         dt_nasc_recem_nascido,
         ie_tipo_atendimento,
         nr_seq_prestador_exec,
         ie_carater_atendimento,
         ds_indicacao_clinica,
         nr_seq_clinica,
         ie_regime_internacao,
         nr_seq_tipo_acomodacao,
         dt_entrada_hospital,
         dt_alta_hospital,
         nr_seq_requisicao_sup,
         ie_tipo_saida,
         ds_biometria,
         ie_tipo_processo,
         nr_seq_uni_exec,
         ie_consulta_urgencia,
         cd_senha,
         dt_validade_senha,
         ds_observacao,
         nm_usuario_solic,
         ie_origem_solic,         
         ie_tipo_gat,
         ie_recem_nascido,
         cd_senha_externa,
         dt_valid_senha_ext,
         ie_exige_senha_ext,
         ie_auditoria_estipulante,
         cd_guia_principal,
         nr_seq_guia_principal,
         nr_seq_regra_pos_estip,
         cd_matricula_estipulante,
         ie_pcmso,
         nr_seq_cbo_saude,
         dt_internacao_sugerida,
         cd_profissional_exec,
         nr_seq_cbo_exec,
         ie_tipo_atend_odonto,
         ie_tipo_faturamento)
        (SELECT nr_seq_requisicao_w,
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_segurado,
                cd_medico_solicitante,
                'P',
                nr_seq_plano_w,
                cd_estabelecimento_p,
                ie_tipo_guia,
                1,
                'M',
                nr_seq_motivo_inclusao,
                nr_seq_prestador,
                qt_dia_solicitado,
                qt_dia_autorizado,
                cd_especialidade,
                ie_tipo_consulta,
                nm_recem_nascido,
                dt_nasc_recem_nascido,
                ie_tipo_atendimento,
                nr_seq_prestador_exec,
                ie_carater_atendimento,
                ds_indicacao_clinica,
                nr_seq_clinica,
                ie_regime_internacao,
                nr_seq_tipo_acomodacao,
                dt_entrada_hospital,
                dt_alta_hospital,
                nr_sequencia,
                ie_tipo_saida,
                ds_biometria,
                ie_tipo_processo,
                nr_seq_uni_exec,
                ie_consulta_urgencia,
                null,
                null,
                ds_observacao,
                nm_usuario_p,
                'M',                
                ie_tipo_gat,
                ie_recem_nascido,
                cd_senha_externa,
                dt_valid_senha_ext,
                null,
                null,
                cd_guia_principal,
                nr_seq_guia_principal,
                null,
                cd_matricula_estipulante_w,
                ie_pcmso,
                nr_seq_cbo_saude,
                dt_internacao_sugerida,
                cd_profissional_exec,
                nr_seq_cbo_exec,
                ie_tipo_atend_odonto,
                ie_tipo_faturamento
           from pls_requisicao
          where nr_sequencia = nr_seq_requisicao_p);

      select cd_guia_principal
        into STRICT cd_guia_principal_w
        from pls_requisicao
       where nr_sequencia = nr_seq_requisicao_p;

      for r_c02_w in c02 loop
        select nextval('pls_requisicao_proc_seq')
          into STRICT nr_seq_proc_anexo_nov_w
;

        insert into pls_requisicao_proc(nr_sequencia,
           nr_seq_requisicao,
           cd_procedimento,
           ie_origem_proced,
           qt_solicitado,
           dt_atualizacao,
           nm_usuario,
           dt_atualizacao_nrec,
           nm_usuario_nrec,
           nr_seq_cobertura,
           ie_tipo_cobertura,
           ie_status,
           nr_seq_grupo_exec,
           nr_seq_tipo_limitacao,
           ie_estagio,
           nr_seq_pacote,
           vl_procedimento,
           qt_procedimento,
           cd_porte_anestesico,
           nr_seq_regra,
           ie_utiliza_opme,
           ie_pacote_aberto,
           cd_pacote_item,
           nr_seq_preco_pacote,
           nr_seq_conversao_pacote,
           cd_procedimento_ptu,
           ds_observacao,
           ie_origem_inclusao,
           ds_procedimento_ptu,
           ie_tipo_anexo,
           ie_origem_pacote_item,
           ie_tipo_tabela)
          (SELECT nr_seq_proc_anexo_nov_w,
                  nr_seq_requisicao_w,
                  r_c02_w.cd_procedimento,
                  r_c02_w.ie_origem_proced,
                  r_c02_w.qt_solicitado,
                  clock_timestamp(),
                  nm_usuario_p,
                  clock_timestamp(),
                  nm_usuario_p,
                  null,
                  null,
                  'U',
                  null,
                  null,
                  'AE',
                  null,
                  r_c02_w.vl_procedimento,
                  r_c02_w.qt_procedimento,
                  null,
                  null,
                  r_c02_w.ie_utiliza_opme,
                  null,
                  null,
                  null,
                  null,
                  r_c02_w.cd_procedimento_ptu,
                  r_c02_w.ds_observacao,
                  'T',
                  r_c02_w.ds_procedimento_ptu,
                  r_c02_w.ie_tipo_anexo,
                  null,
                  r_c02_w.ie_tipo_tabela
             );
      end loop;

      insert into pls_requisicao_anexo(nr_sequencia,
         nr_seq_requisicao,
         dt_anexo,
         ds_anexo,
         dt_atualizacao,
         nm_usuario,
         dt_atualizacao_nrec,
         nm_usuario_nrec,
         ie_origem_anexo)
        (SELECT nextval('pls_requisicao_anexo_seq'),
                nr_seq_requisicao_w,
                dt_anexo,
                ds_anexo,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                ie_origem_anexo
           from pls_requisicao_anexo
          where nr_seq_requisicao = nr_seq_requisicao_p);

      open c01;
      loop
        fetch c01
          into cd_procedimento_w, ie_status_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
        begin
          ds_histrico_itens_w := substr(ds_histrico_itens_w ||
                                        cd_procedimento_w || ' - ' ||
                                        obter_valor_dominio(3453,
                                                            ie_status_w) ||
                                        chr(13) || chr(10),
                                        1,
                                        4000);
        end;
      end loop;
      close c01;

      ds_historico_w := substr('Requisicao ' || nr_seq_requisicao_w ||
                               ' duplicada por ' || nm_usuario_p || ' em ' ||
                               to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') || '.' ||
                               chr(13) || chr(10) ||
                               'Requisicao original num: ' ||
                               nr_seq_requisicao_p || chr(13) || chr(10) || ' ' ||
                               chr(13) || chr(10) ||
                               'Itens/Status original' || chr(13) ||
                               chr(10) || ds_histrico_itens_w,
                               1,
                               4000);
      CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,
                                 'L',
                                 ds_historico_w,
                                 null,
                                 nm_usuario_p);
    end if;

    commit;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_odonto_pck.duplicar_req_odonto (nr_seq_requisicao_p pls_requisicao_proc.nr_seq_requisicao%type, cd_estabelecimento_p pls_requisicao.cd_estabelecimento%type, nm_usuario_p pls_requisicao.nm_usuario%type) FROM PUBLIC;
