-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_odonto_pck.cancelar_autorizacao ( nr_seq_guia_plano_p bigint, nr_seq_motivo_cancel_p pls_requisicao.nr_seq_motivo_cancel%type, nm_usuario_p pls_requisicao.nm_usuario%type, ie_origem_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Cancelar a guia
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
	cd_guia_w                       varchar(30);
	ie_situacao_prot_w              varchar(3);
	ie_status_w			varchar(2);
	nr_seq_guia_proc_w		bigint;
	nr_seq_atend_pls_w		bigint;
	nr_seq_evento_atend_w		bigint;
	qt_auditoria_assumida_w		bigint	:= 0;
	qt_registros_w			bigint	:= 0;
	ie_estagio_w			bigint;
	nr_seq_auditoria_w		bigint;
	nr_seq_requisicao_w		bigint;
	nr_seq_req_proc_w		bigint;
	nr_seq_regra_compl_w            bigint;
	nr_seq_segurado_w               bigint;
	nr_seq_conta_compl_w            bigint;
	qt_registros_aud_w		bigint;
	qt_contas_canceladas_w		bigint;
	qt_contas_w			bigint;
	qt_protocolos_conta_cancel_w	bigint;
	qt_protocolos_conta_w		bigint;
	qt_vinculadas_w			bigint;
	qt_vinculadas_canc_w		bigint;
	qt_item_w			double precision;
	qt_exec_req_w			double precision;
	qt_atualizada_w			double precision;
	qt_reg_w 			integer;
	ie_tipo_processo_w		varchar(2);
	nr_seq_req_item_w		pls_execucao_req_item.nr_sequencia%type;
	nr_seq_execucao_w		pls_execucao_req_item.nr_seq_execucao%type;
	nr_seq_guia_exec_w		pls_guia_plano.nr_sequencia%type;

	C01 CURSOR FOR
		SELECT	nr_sequencia
		from	pls_guia_plano_proc
		where	nr_seq_guia 	= nr_seq_guia_plano_p;

	C02 CURSOR FOR
		SELECT  a.nr_sequencia,
			b.ie_situacao
		from    pls_protocolo_conta b,
			pls_conta a
		where   a.nr_seq_protocolo      = b.nr_sequencia
		and     a.nr_seq_segurado       = nr_seq_segurado_w
		and     a.cd_guia               = cd_guia_w
		and     a.ie_origem_conta       = 'C';


BEGIN
	select	count(1),
		sum(CASE WHEN a.ie_estagio=8 THEN 1 WHEN a.ie_estagio=4 THEN 1  ELSE 0 END )
	into STRICT	qt_vinculadas_w,
		qt_vinculadas_canc_w
	from	pls_guia_plano	a
	where	a.nr_seq_guia_principal	= nr_seq_guia_plano_p;

if (qt_vinculadas_w <> qt_vinculadas_canc_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(256408);
end if;

begin
	select  ie_estagio,
		nr_seq_regra_compl,
		nr_seq_segurado,
		cd_guia,
		ie_tipo_processo	
	into STRICT    ie_estagio_w,
		nr_seq_regra_compl_w,
		nr_seq_segurado_w,
		cd_guia_w,
		ie_tipo_processo_w	
	from    pls_guia_plano
	where   nr_sequencia    = nr_seq_guia_plano_p;
exception
when others then
        ie_estagio_w    	:= 0;
	ie_tipo_processo_w	:= null;	
end;

begin
nr_seq_requisicao_w	:= pls_obter_req_execucao_guia(nr_seq_guia_plano_p);
exception
when others then
	nr_seq_requisicao_w	:= null;
end;

/* Francisco - 04/07/2012 - OS 465531 */

if (nr_seq_regra_compl_w IS NOT NULL AND nr_seq_regra_compl_w::text <> '') then
        open C02;
        loop
        fetch C02 into
                nr_seq_conta_compl_w,
                ie_situacao_prot_w;
        EXIT WHEN NOT FOUND; /* apply on C02 */
                begin
		/* Se o protocolo ja foi rejeitado, nem precisa mais alterar nem dar mensagem */

		if (coalesce(ie_situacao_prot_w,'I') <> 'RE') then
			if (coalesce(ie_situacao_prot_w,'I')  <> 'I') then
				/*Conforme conversa por telefone com o Felipe Bueno da Unimed Sao Jose do Rio Preto, caso a conta esteja cancelada, deve ser permitido cancelar a guia, mesmo que o status do protocolo esteja como
				Aceito, Digitado ou Integrado*/
				select	count(1)
				into STRICT	qt_contas_w
				from	pls_conta	a
				where	a.nr_seq_guia	= nr_seq_guia_plano_p;

				if (qt_contas_w	= 0) then
					select  count(1)
					into STRICT	qt_reg_w
					from    pls_conta
					where   nr_seq_segurado	= nr_seq_segurado_w
					and     cd_guia		= cd_guia_w
					and	ie_status	= 'C';
				else
					select  count(1)
					into STRICT	qt_reg_w
					from    pls_conta
					where   nr_seq_segurado	= nr_seq_segurado_w
					and     nr_seq_guia	= nr_seq_guia_plano_p
					and	ie_status	= 'C';
				end if;

				if (qt_reg_w = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(196005);
				end if;
			else
				/* Criar novo protocolo rejeitado e transferir conta para este novo */

				CALL pls_gerar_protocolo_rejeitado(	nr_seq_conta_compl_w,
								nm_usuario_p);
			end if;
		end if;
                end;
        end loop;
        close c02;
else	

		select	count(1)
		into STRICT	qt_contas_canceladas_w
		from	pls_conta	a
		where	a.nr_seq_guia	= nr_seq_guia_plano_p
		and (a.ie_status	= 'C');

		if (qt_contas_canceladas_w	= 0) then
			select	count(1)
			into STRICT	qt_contas_canceladas_w
			from	pls_conta		a
			where	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w
			and (a.ie_status		= 'C');
		end if;

		select	count(1)
		into STRICT	qt_contas_w
		from	pls_conta	a
		where	a.nr_seq_guia	= nr_seq_guia_plano_p;

		if (qt_contas_w	= 0) then
			select	count(1)
			into STRICT	qt_contas_w
			from	pls_conta		a
			where	a.cd_guia		= cd_guia_w
			and	a.nr_seq_segurado	= nr_seq_segurado_w;
		end if;

		if (qt_contas_canceladas_w <> qt_contas_w) then
			select	count(1)
			into STRICT	qt_protocolos_conta_cancel_w
			from	pls_conta		a,
				pls_protocolo_conta	b
			where	a.nr_seq_protocolo	= b.nr_sequencia
			and	a.nr_seq_guia		= nr_seq_guia_plano_p
			and (b.nr_seq_motivo_cancel IS NOT NULL AND b.nr_seq_motivo_cancel::text <> '');

			if (qt_protocolos_conta_cancel_w	= 0) then
				select	count(1)
				into STRICT	qt_protocolos_conta_cancel_w
				from	pls_conta		a,
					pls_protocolo_conta	b
				where	a.nr_seq_protocolo	= b.nr_sequencia
				and	a.cd_guia		= cd_guia_w
				and	a.nr_seq_segurado	= nr_seq_segurado_w
				and (b.nr_seq_motivo_cancel IS NOT NULL AND b.nr_seq_motivo_cancel::text <> '');
			end if;

			select	count(1)
			into STRICT	qt_protocolos_conta_w
			from	pls_conta		a,
				pls_protocolo_conta	b
			where	a.nr_seq_protocolo	= b.nr_sequencia
			and	a.nr_seq_guia		= nr_seq_guia_plano_p;

			if (qt_protocolos_conta_w	= 0) then
				select	count(1)
				into STRICT	qt_protocolos_conta_w
				from	pls_conta		a,
					pls_protocolo_conta	b
				where	a.nr_seq_protocolo	= b.nr_sequencia
				and	a.cd_guia		= cd_guia_w
				and	a.nr_seq_segurado	= nr_seq_segurado_w;
			end if;

			if (qt_protocolos_conta_cancel_w <> qt_protocolos_conta_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(196005);--Nao e possivel cancelar essa guia, ja foram geradas contas vinculadas a ela.
			end if;
		end if;
	end if;

if (coalesce(nr_seq_requisicao_w,0) > 0) then
	select  count(1)
	into STRICT	qt_reg_w
	from    pls_protocolo_conta b,
		pls_conta a
	where   a.nr_seq_protocolo      = b.nr_sequencia
	and     a.nr_seq_segurado       = nr_seq_segurado_w
	and     a.cd_guia               = cd_guia_w
	and     a.ie_origem_conta       <> 'C'
	and	a.ie_status		<> 'C'
	and	b.ie_situacao		in ('D', 'T');

	if (qt_reg_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(196005);
	end if;

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_guia_plano
	where	nr_seq_guia_principal = nr_seq_guia_plano_p
	and	ie_estagio <> 8;

	if (qt_reg_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(205193);
	end if;

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_requisicao
	where	nr_seq_guia_principal = nr_seq_guia_plano_p
	and	ie_estagio <> 3;

	if (qt_reg_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(212944);
		--A guia nao pode ser cancelada, pois existem requisicoes referenciando esta guia. Favor verificar!
	end if;
end if;

if (coalesce(ie_estagio_w,0)	= 1) then
	select	count(1)
	into STRICT	qt_auditoria_assumida_w
	from	pls_auditoria a,
		pls_auditoria_grupo b
	where	a.nr_seq_guia	= nr_seq_guia_plano_p
	and	a.nr_sequencia	= b.nr_seq_auditoria
	and	(nm_usuario_exec IS NOT NULL AND nm_usuario_exec::text <> '');

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_guia_plano_historico
	where	nr_seq_guia = nr_seq_guia_plano_p
	and	(nr_seq_item IS NOT NULL AND nr_seq_item::text <> '');

	if	((qt_auditoria_assumida_w > 0) or (qt_registros_w	> 0)) then
		update	pls_auditoria
		set	ie_status		= 'C',
			dt_liberacao		= clock_timestamp(),
			nr_seq_proc_interno	 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_guia		= nr_seq_guia_plano_p;
	elsif (qt_auditoria_assumida_w	= 0) then
		CALL pls_desfazer_auditoria(nr_seq_guia_plano_p);
	end if;
end if;

open C01;
loop
fetch C01 into
	nr_seq_guia_proc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update	pls_guia_plano_proc
	set	ie_status	= 'D'
	where	nr_sequencia	= nr_seq_guia_proc_w;
	end;
end loop;
close C01;

if (nr_seq_guia_plano_p IS NOT NULL AND nr_seq_guia_plano_p::text <> '') then
	update	pls_guia_plano
	set	dt_cancelamento		= clock_timestamp(),
		ie_status		= 3,
		ie_estagio		= 8,
		nr_seq_motivo_cancel	= nr_seq_motivo_cancel_p,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_guia_plano_p;

	if (nr_seq_motivo_cancel_p IS NOT NULL AND nr_seq_motivo_cancel_p::text <> '') then

		CALL pls_guia_gravar_historico(	nr_seq_guia_plano_p,
						7,
						substr('Cancelada pelo usuario '||nm_usuario_p||'.'||chr(13)||'Motivo: '||
						substr(pls_obter_desc_guia_mot_cancel(nr_seq_motivo_cancel_p),1,255),1,4000)||'.',
						'',
						nm_usuario_p);
	end if;
end if;

begin
	select	nr_seq_atend_pls,
		nr_seq_evento_atend,
		ie_status
	into STRICT	nr_seq_atend_pls_w,
		nr_seq_evento_atend_w,
		ie_status_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_plano_p;
exception
when others then
	nr_seq_atend_pls_w	:= null;
end;

if (ie_status_w <> '2') and (nr_seq_atend_pls_w IS NOT NULL AND nr_seq_atend_pls_w::text <> '') then
	CALL pls_finalizar_atendimento(	nr_seq_atend_pls_w,
					nr_seq_evento_atend_w,
					null,
					null,
					nm_usuario_p);
end if;

CALL pls_atualiza_estagio_guia_conv(	nr_seq_guia_plano_p,
				nm_usuario_p);

if (ie_origem_p = 'R') then
	
		if (coalesce(nr_seq_execucao_w,0) > 0) then
			update	pls_execucao_requisicao
			set	ie_situacao	= 5
			where	nr_sequencia 	= nr_seq_execucao_w;
		end if;
	end if;

if (nr_seq_guia_plano_p IS NOT NULL AND nr_seq_guia_plano_p::text <> '') then
	select	count(1)
	into STRICT	qt_registros_aud_w
	from	pls_auditoria
	where	nr_seq_guia	= nr_seq_guia_plano_p
	and	coalesce(dt_liberacao::text, '') = '';

	if (qt_registros_aud_w > 0) then
		update	pls_auditoria
		set	ie_status		= 'C',
			dt_liberacao		= clock_timestamp(),
			nr_seq_proc_interno	 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_guia		= nr_seq_guia_plano_p;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_odonto_pck.cancelar_autorizacao ( nr_seq_guia_plano_p bigint, nr_seq_motivo_cancel_p pls_requisicao.nr_seq_motivo_cancel%type, nm_usuario_p pls_requisicao.nm_usuario%type, ie_origem_p text) FROM PUBLIC;
