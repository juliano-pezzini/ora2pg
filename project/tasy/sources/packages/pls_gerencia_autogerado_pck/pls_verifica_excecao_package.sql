-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_gerencia_autogerado_pck.pls_verifica_excecao ( nr_seq_regra_p pls_excecao_autogerado.nr_seq_regra%type, ie_origem_proced_p procedimento.ie_origem_proced%type, cd_procedimento_p procedimento.cd_procedimento%type, cd_prestador_p pls_excecao_autogerado.cd_prestador%type, nr_seq_tipo_prestador_p pls_excecao_autogerado.nr_seq_tipo_prestador%type) RETURNS varchar AS $body$
DECLARE

ie_retorno_w	varchar(1);


BEGIN

if (pls_util_cta_pck.usar_novo_agrup = 'S') then

	-- Obt?m se existe uma exce??o da regra de autogerado para o procedimento

	-- se existir algum registro significa que temos uma exce??o

	select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_retorno_w
	from	pls_excecao_autogerado	a
	where	a.ie_situacao		= 'A'
	and		a.nr_seq_regra		= nr_seq_regra_p
	and		((coalesce(a.cd_procedimento::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_p and a.cd_procedimento = cd_procedimento_p))
	and		((coalesce(a.cd_prestador::text, '') = '') 	or (a.cd_prestador = cd_prestador_p))
	and		((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador = nr_seq_tipo_prestador_p))
	and		((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (	SELECT 1
															from	pls_grupo_servico_tm grupox
															where	grupox.nr_seq_grupo_servico = a.nr_seq_grupo_servico
															and		grupox.ie_origem_proced 	= ie_origem_proced_p
															and		grupox.cd_procedimento 		= cd_procedimento_p)));
									


else
	--Obt?m se existe uma exce??o da regra de autogerado para o procedimento

	-- se existir algum registro significa que temos uma exce??o

	select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_retorno_w
	from	pls_excecao_autogerado	a
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_regra		= nr_seq_regra_p
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_p and a.cd_procedimento = cd_procedimento_p))
	and	((coalesce(a.cd_prestador::text, '') = '') or (a.cd_prestador = cd_prestador_p))
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador = nr_seq_tipo_prestador_p))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (SELECT 1
									from	table(pls_grupos_pck.obter_procs_grupo_servico(a.nr_seq_grupo_servico, ie_origem_proced_p,cd_procedimento_p)))));
end if;
								
return ie_retorno_w;						

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION pls_gerencia_autogerado_pck.pls_verifica_excecao ( nr_seq_regra_p pls_excecao_autogerado.nr_seq_regra%type, ie_origem_proced_p procedimento.ie_origem_proced%type, cd_procedimento_p procedimento.cd_procedimento%type, cd_prestador_p pls_excecao_autogerado.cd_prestador%type, nr_seq_tipo_prestador_p pls_excecao_autogerado.nr_seq_tipo_prestador%type) FROM PUBLIC;
