-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conta_tiss_pck.criar_registro ( nr_sequencia_p pls_conta_tiss.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_validacao_benef_tiss_p pls_conta_tiss.cd_validacao_benef_tiss%type, cd_ausencia_val_benef_tiss_p pls_conta_tiss.cd_ausencia_val_benef_tiss%type, cd_ident_biometria_benef_p pls_conta_tiss.cd_ident_biometria_benef%type, cd_template_biomet_benef_p pls_conta_tiss.cd_template_biomet_benef%type, ie_tipo_ident_benef_p pls_conta_tiss.ie_tipo_ident_benef%type, cd_assinat_digital_prest_p pls_conta_tiss.cd_assinat_digital_prest%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera um registro na pls_conta_tiss, baseado na pls_conta passada como nr_sequencia, se o mesmo nao existir
	
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atençao:

Alteraçoes:
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_registro_w	integer;


BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_tiss
	where	nr_sequencia = nr_sequencia_p;
	
	if (qt_registro_w = 0) then

		insert into pls_conta_tiss(	nr_sequencia,			cd_validacao_benef_tiss,	cd_ausencia_val_benef_tiss,
						cd_ident_biometria_benef, 	cd_template_biomet_benef,	ie_tipo_ident_benef,
						cd_assinat_digital_prest,	cd_estabelecimento,		nm_usuario,
						dt_atualizacao,			nm_usuario_nrec,		dt_atualizacao_nrec)
		values (				nr_sequencia_p,			cd_validacao_benef_tiss_p,	cd_ausencia_val_benef_tiss_p,
						cd_ident_biometria_benef_p,	cd_template_biomet_benef_p,	ie_tipo_ident_benef_p,
						cd_assinat_digital_prest_p,	cd_estabelecimento_p,		nm_usuario_p,
						clock_timestamp(),			nm_usuario_p,			clock_timestamp());
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conta_tiss_pck.criar_registro ( nr_sequencia_p pls_conta_tiss.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_validacao_benef_tiss_p pls_conta_tiss.cd_validacao_benef_tiss%type, cd_ausencia_val_benef_tiss_p pls_conta_tiss.cd_ausencia_val_benef_tiss%type, cd_ident_biometria_benef_p pls_conta_tiss.cd_ident_biometria_benef%type, cd_template_biomet_benef_p pls_conta_tiss.cd_template_biomet_benef%type, ie_tipo_ident_benef_p pls_conta_tiss.ie_tipo_ident_benef%type, cd_assinat_digital_prest_p pls_conta_tiss.cd_assinat_digital_prest%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
