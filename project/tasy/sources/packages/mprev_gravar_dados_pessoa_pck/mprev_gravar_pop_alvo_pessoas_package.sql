-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE mprev_gravar_dados_pessoa_pck.mprev_gravar_pop_alvo_pessoas (nr_seq_regra_cubo_p bigint, nr_seq_populacao_alvo_p text, lista_pessoas_p text) AS $body$
DECLARE


	lista_pessoas_w   		text;
	cd_pessoa_fisica_w 		pessoa_fisica.cd_pessoa_fisica%type;
	dt_nascimento_w			pessoa_fisica.dt_nascimento%type;
	nm_pessoa_fisica_w  	pessoa_fisica.nm_pessoa_fisica%type;
	lista_count_w 			integer;
	valida_usuario_w        bigint:=0;
	lista_pessoas_array_w	dbms_utility.lname_array;	

	
BEGIN	
	
	       lista_pessoas_w := lista_pessoas_p; 	
	
	       if (length(lista_pessoas_w) > 0) then
	       begin		
			dbms_utility.comma_to_table( list   => regexp_replace(lista_pessoas_w,'(^|,)','\1x')
			  , tablen => lista_count_w
			  , tab    => lista_pessoas_array_w
			);

			for i in 1 .. lista_count_w
			loop		
				select	max(cd_pessoa_fisica),
						max(dt_nascimento),
						max(nm_pessoa_fisica)
				into STRICT    cd_pessoa_fisica_w,
						dt_nascimento_w,
						nm_pessoa_fisica_w
				from	pessoa_fisica
				where	cd_pessoa_fisica = trim(both substr(lista_pessoas_array_w(i),2));
				
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				begin
					select  count(1)
					into STRICT    valida_usuario_w
					from   	mprev_pop_alvo_pessoa
					where   cd_pessoa_fisica = cd_pessoa_fisica_w
					and     nr_seq_populacao_alvo = nr_seq_populacao_alvo_p;				
					
					if (coalesce(valida_usuario_w,0) = 0) then				
						insert into mprev_pop_alvo_pessoa(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_populacao_alvo,
									cd_pessoa_fisica,
									qt_idade_anos,
									ie_partic_programa,
									ie_grupo_controle,
									nm_pessoa,
									ie_selecionada,
									ie_sexo,
									ie_sel_temp,
									nm_pessoa_pesquisa,
									cd_municipio_ibge
						) values (
									nextval('mprev_pop_alvo_pessoa_seq'),
									clock_timestamp(),
									wheb_usuario_pck.get_nm_usuario,
									clock_timestamp(),
									wheb_usuario_pck.get_nm_usuario,
									nr_seq_populacao_alvo_p,
									cd_pessoa_fisica_w,			
									trunc(months_between(clock_timestamp(),dt_nascimento_w)/12),
									CASE WHEN coalesce(mprev_obter_participante(cd_pessoa_fisica_w),0)=0 THEN 'N'  ELSE 'S' END ,
									mprev_obter_se_part_grupo_cont(cd_pessoa_fisica_w,clock_timestamp()),
									nm_pessoa_fisica_w,
									'N',
									coalesce(obter_sexo_pf(cd_pessoa_fisica_w,'C'),'I'),
									'N',
									upper(elimina_acentuacao(nm_pessoa_fisica_w)),
									obter_cod_ibge_pf(cd_pessoa_fisica_w)
						);					
						CALL mprev_gravar_dados_pessoa_pck.mprev_gravar_dados_pessoa(nr_seq_regra_cubo_p, cd_pessoa_fisica_w, nr_seq_populacao_alvo_p); 					
						commit;
					end if;
				end;
				end if;
			end loop;
		end;
		end if;	
		commit;	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_gravar_dados_pessoa_pck.mprev_gravar_pop_alvo_pessoas (nr_seq_regra_cubo_p bigint, nr_seq_populacao_alvo_p text, lista_pessoas_p text) FROM PUBLIC;
