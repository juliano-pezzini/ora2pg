-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.cus_calcular_tabela_auto ( dt_mes_referencia_p timestamp, ie_tipo_resultado_p text, ie_copiar_tab_custo_ant_p text, ie_taxa_custo_p text, ie_resultado_p text, ie_atualizar_indic_p text, ie_material_tabela_p text, ie_custo_estoque_p text, ie_custo_mat_compra_p text, ie_custo_tabela_preco_p text, ie_cotacao_avista_p text, ie_valor_presente_proc_p text, ie_custo_padrao_p text, ie_preco_venda_p text, ie_atualizar_preco_final_p text, ie_calculo_empresa_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_empresa_p empresa.cd_empresa%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE



cd_tab_preco_padrao_proc_w      tabela_custo.cd_tabela_custo%type;
nr_tab_preco_padrao_proc_w      tabela_custo.nr_sequencia%type;

cd_tab_preco_pad_proc_orig_w    tabela_custo.cd_tabela_custo%type;
nr_tab_preco_pad_proc_orig_w    tabela_custo.nr_sequencia%type;

cd_tab_preco_padrao_mat_w       tabela_custo.cd_tabela_custo%type;
nr_tab_preco_padrao_mat_w       tabela_custo.nr_sequencia%type;

cd_tab_preco_pad_mat_orig_w     tabela_custo.cd_tabela_custo%type;
nr_tab_preco_pad_mat_orig_w     tabela_custo.nr_sequencia%type;

cd_tab_taxa_custo_processo_w    tabela_custo.cd_tabela_custo%type;
nr_tab_taxa_custo_processo_w    tabela_custo.nr_sequencia%type;

cd_tab_custo_padrao_w           tabela_custo.cd_tabela_custo%type;
nr_tab_custo_padrao_w           tabela_custo.nr_sequencia%type;

cd_tab_preco_venda_w            tabela_custo.cd_tabela_custo%type;
nr_tab_preco_venda_w            tabela_custo.nr_sequencia%type;

cd_tab_resultado_w              tabela_custo.cd_tabela_custo%type;
nr_tab_resultado_w              tabela_custo.nr_sequencia%type;

ie_execu_apurar_res_w           varchar(1):= 'N';
ie_exec_calc_vl_present_w       varchar(1):= 'N';
ie_exec_gerar_mat_tabela_w      varchar(1):= 'N';
ie_exec_calc_cot_avista_w       varchar(1):= 'N';
ie_exec_custo_estoque_w         varchar(1):= 'N';
ie_exec_custo_mat_compra_w      varchar(1):= 'N';
ie_exec_custo_tab_preco_w       varchar(1):= 'N';
ie_exec_preco_final_w           varchar(1):= 'N';
ie_custo_multi_estab_w          parametro_custo.ie_custo_multi_estab%type;

c01 CURSOR FOR
       SELECT  a.cd_estabelecimento,
               substr('['||a.cd_estabelecimento||'] '||obter_nome_estabelecimento(a.cd_estabelecimento),1,255) nm_estabelecimento
       from    estabelecimento a
       where   a.ie_situacao = 'A'
       and     a.cd_empresa = cd_empresa_p
       and    ((ie_calculo_empresa_p = 'S') or (a.cd_estabelecimento = cd_estabelecimento_p))
       order by 1;

c01_w       c01%rowtype;


BEGIN
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853800),'CUS_GERAR_CALCULO', 0);

open c01;
loop
fetch c01 into
    c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    begin
    select  a.cd_tabela_custo,
            a.nr_sequencia
    into STRICT    cd_tab_preco_padrao_proc_w,
            nr_tab_preco_padrao_proc_w
    from    tabela_custo a
    where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
    and     a.cd_empresa            = cd_empresa_p
    and     a.dt_mes_referencia     = trunc(dt_mes_referencia_p,'mm')
    and     a.ie_orcado_real        = ie_tipo_resultado_p
    and     a.cd_tipo_tabela_custo  = 3; /* Preco Orcado Procedimento */


    select  a.cd_tabela_custo,
            a.nr_sequencia
    into STRICT    cd_tab_preco_padrao_mat_w,
            nr_tab_preco_padrao_mat_w
    from    tabela_custo a
    where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
    and     a.cd_empresa            = cd_empresa_p
    and     a.dt_mes_referencia     = trunc(dt_mes_referencia_p,'mm')
    and     a.ie_orcado_real        = ie_tipo_resultado_p
    and     a.cd_tipo_tabela_custo  = 4; /* Preco Padrao Materiais */


    select  a.cd_tabela_custo,
            a.nr_sequencia
    into STRICT    cd_tab_taxa_custo_processo_w,
            nr_tab_taxa_custo_processo_w
    from    tabela_custo a
    where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
    and     a.cd_empresa            = cd_empresa_p
    and     a.dt_mes_referencia     = trunc(dt_mes_referencia_p,'mm')
    and     a.ie_orcado_real        = ie_tipo_resultado_p
    and     a.cd_tipo_tabela_custo  = 7; /* Taxa Custo Processo */


    select  a.cd_tabela_custo,
            a.nr_sequencia
    into STRICT    cd_tab_custo_padrao_w,
            nr_tab_custo_padrao_w
    from    tabela_custo a
    where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
    and     a.cd_empresa            = cd_empresa_p
    and     a.dt_mes_referencia     = trunc(dt_mes_referencia_p,'mm')
    and     a.ie_orcado_real        = ie_tipo_resultado_p
    and     a.cd_tipo_tabela_custo  = 8; /* Custo Padrao */


    select  a.cd_tabela_custo,
            a.nr_sequencia
    into STRICT    cd_tab_preco_venda_w,
            nr_tab_preco_venda_w
    from    tabela_custo a
    where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
    and     a.cd_empresa            = cd_empresa_p
    and     a.dt_mes_referencia     = trunc(dt_mes_referencia_p,'mm')
    and     a.ie_orcado_real        = ie_tipo_resultado_p
    and     a.cd_tipo_tabela_custo  = 9; /* Preco de Venda */


    select  a.cd_tabela_custo,
            a.nr_sequencia
    into STRICT    cd_tab_resultado_w,
            nr_tab_resultado_w
    from    tabela_custo a
    where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
    and     a.cd_empresa            = cd_empresa_p
    and     a.dt_mes_referencia     = trunc(dt_mes_referencia_p,'mm')
    and     a.ie_orcado_real        = ie_tipo_resultado_p
    and     a.cd_tipo_tabela_custo  = 11; /* Resultado Centro Controle */


    select  coalesce(max(ie_custo_multi_estab),'X')
    into STRICT    ie_custo_multi_estab_w
    from    parametro_custo
    where   cd_estabelecimento  = c01_w.cd_estabelecimento;

    exception when others then
              /* Nao foram localizadas todas as tabelas do mes e tipo selecionados. 
                                    Verifique os cadastros das tabelas de custo para o estabelecimento: #@DS_ESTABELECIMENTO#@ */

              CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 881213, vl_macros_p => 'DS_ESTABELECIMENTO='||c01_w.nm_estabelecimento);
    end;

    if (coalesce(ie_copiar_tab_custo_ant_p,'N') = 'S') then
           begin
           select  a.cd_tabela_custo,
                   a.nr_sequencia
           into STRICT    cd_tab_preco_pad_proc_orig_w,
                   nr_tab_preco_pad_proc_orig_w
           from    tabela_custo a
           where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
           and     a.cd_empresa            = cd_empresa_p
           and     a.dt_mes_referencia     = trunc(add_months(dt_mes_referencia_p,-1),'mm')
           and     a.ie_orcado_real        = ie_tipo_resultado_p
           and     a.cd_tipo_tabela_custo  = 3; /* Preco Orcado Procedimento */

           exception when others then
                     /* Caso nao existir tabela do mes anterior, da erro mas nao para o processo */


                     cd_tab_preco_pad_proc_orig_w := '0';
                     nr_tab_preco_pad_proc_orig_w := 0;
           end;

           begin
           select  a.cd_tabela_custo,
                   a.nr_sequencia
           into STRICT    cd_tab_preco_pad_mat_orig_w,
                   nr_tab_preco_pad_mat_orig_w
           from    tabela_custo a
           where   coalesce(a.cd_estabelecimento,c01_w.cd_estabelecimento) = c01_w.cd_estabelecimento
           and     a.cd_empresa            = cd_empresa_p
           and     a.dt_mes_referencia     = trunc(add_months(dt_mes_referencia_p,-1),'mm')
           and     a.ie_orcado_real        = ie_tipo_resultado_p
           and     a.cd_tipo_tabela_custo  = 4; /* Preco Padrao Materiais */

           exception when others then
                     cd_tab_preco_pad_mat_orig_w := '0';
                     nr_tab_preco_pad_mat_orig_w := 0;
           end;


                   /* Materiais 4 */


            if (nr_tab_preco_pad_mat_orig_w <> 0) then
                   CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853801) || ' - ' || c01_w.nm_estabelecimento,'COPIAR_CUSTO_PROCEDIMENTO', 0);
                   CALL CALL custos_pck.copiar_custo_procedimento( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                              cd_tabela_origem_p     => cd_tab_preco_pad_mat_orig_w, -- Origem
                                              cd_tabela_destino_p    => cd_tab_preco_padrao_mat_w,
                                              nm_usuario_p           => nm_usuario_p,
                                              nr_seq_tabela_p        => nr_tab_preco_padrao_mat_w,
                                              nr_seq_tabela_origem_p => nr_tab_preco_pad_mat_orig_w); -- Origem);

            end if;

                   /* Procedimentos 3 */


            if (nr_tab_preco_pad_proc_orig_w <> 0) then
                   CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853802) || ' - ' || c01_w.nm_estabelecimento,'COPIAR_CUSTO_PROCEDIMENTO', 0);
                   CALL CALL custos_pck.copiar_custo_procedimento( cd_estabelecimento_p   =>  c01_w.cd_estabelecimento,
                                              cd_tabela_origem_p     =>  cd_tab_preco_pad_proc_orig_w, -- Origem
                                              cd_tabela_destino_p    =>  cd_tab_preco_padrao_proc_w,
                                              nm_usuario_p           =>  nm_usuario_p,
                                              nr_seq_tabela_p        =>  nr_tab_preco_padrao_proc_w,
                                              nr_seq_tabela_origem_p => nr_tab_preco_pad_proc_orig_w); -- Origem
            end if;
    end if;
           /* Opcao existente na aba Calculo "Taxa custo" */


    if (coalesce(ie_taxa_custo_p,'N') = 'S') then
          CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853803) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_TAXA_CUSTO', 0);
          CALL custos_pck.calcular_taxa_custo( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                          cd_tabela_custo_p    => cd_tab_taxa_custo_processo_w,
                                          nm_usuario_p         => nm_usuario_p,
                                          nr_seq_tabela_p      => nr_tab_taxa_custo_processo_w);
    end if;
           /*Opcao existente na aba Calculo "Resultado" */


    if (coalesce(ie_resultado_p,'N') = 'S') then
          if (ie_execu_apurar_res_w = 'N' and ie_custo_multi_estab_w = 'S') then
                CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853804) || ' - ' || c01_w.nm_estabelecimento,'APURAR_RES_CENTRO_CONTROLE', 0);
                       CALL custos_pck.apurar_res_centro_controle( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                              cd_tabela_custo_p    => cd_tab_resultado_w,
                                                              ie_atualizar_indic_p => ie_atualizar_indic_p,
                                                              nm_usuario_p         => nm_usuario_p,
                                                              nr_seq_tabela_p      => nr_tab_resultado_w);
                ie_execu_apurar_res_w:= 'S';
          else
                if (ie_custo_multi_estab_w = 'N') then
                       CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853804) || ' - ' || c01_w.nm_estabelecimento,'APURAR_RES_CENTRO_CONTROLE', 0);
                       CALL custos_pck.apurar_res_centro_controle( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                              cd_tabela_custo_p    => cd_tab_resultado_w,
                                                              ie_atualizar_indic_p => ie_atualizar_indic_p,
                                                              nm_usuario_p         => nm_usuario_p,
                                                              nr_seq_tabela_p      => nr_tab_resultado_w);
                end if;

          end if;
    end if;
           /*Gerar tabela, na aba "Custos / Materiais" */


    if (coalesce(ie_material_tabela_p,'N') = 'S') then

          if (ie_exec_gerar_mat_tabela_w = 'N' and ie_custo_multi_estab_w = 'S') then
                CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853805) || ' - ' || c01_w.nm_estabelecimento,'GERAR_MATERIAL_TABELA', 0);
                CALL custos_pck.gerar_material_tabela( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                  cd_tabela_custo_p    => cd_tab_preco_padrao_mat_w,
                                                  nr_seq_tabela_p      => nr_tab_preco_padrao_mat_w,
                                                  nm_usuario_p         => nm_usuario_p);
                ie_exec_gerar_mat_tabela_w:= 'S';
          else
                if (ie_custo_multi_estab_w = 'N') then
                      CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853805) || ' - ' || c01_w.nm_estabelecimento,'GERAR_MATERIAL_TABELA', 0);
                      CALL custos_pck.gerar_material_tabela( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                        cd_tabela_custo_p    => cd_tab_preco_padrao_mat_w,
                                                        nr_seq_tabela_p      => nr_tab_preco_padrao_mat_w,
                                                        nm_usuario_p         => nm_usuario_p);
                end if;

          end if;
    end if;
           /* Custo estoque, na aba "Custos / Materiais"
              IE_TIPO_PARAMETRO_P = 2 Custo estoque */

    if (coalesce(ie_custo_estoque_p,'N') = 'S') then
          if (ie_exec_custo_estoque_w = 'N' and ie_custo_multi_estab_w = 'S') then
                CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853806) || ' - ' || c01_w.nm_estabelecimento,'OBTER_CUSTO_MAT_COMPRA', 0);
                CALL custos_pck.obter_custo_mat_compra( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                                   cd_tabela_custo_p      => cd_tab_preco_padrao_mat_w,
                                                   ie_tipo_parametro_p    => 2,
                                                   nr_seq_tabela_p        => nr_tab_preco_padrao_mat_w,
                                                   nm_usuario_p           => nm_usuario_p);
                ie_exec_custo_estoque_w:= 'S';
          else
                if (ie_custo_multi_estab_w = 'N') then
                      CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853806) || ' - ' || c01_w.nm_estabelecimento,'OBTER_CUSTO_MAT_COMPRA', 0);
                      CALL custos_pck.obter_custo_mat_compra(cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                                        cd_tabela_custo_p      => cd_tab_preco_padrao_mat_w,
                                                        ie_tipo_parametro_p    => 2,
                                                        nr_seq_tabela_p        => nr_tab_preco_padrao_mat_w,
                                                        nm_usuario_p           => nm_usuario_p);
                end if;
          end if;
    end if;
          /* Preco ultima compra, na aba "Custos / Materiais"
             IE_TIPO_PARAMETRO_P = 1 Preco ultima compra */

    if (coalesce(ie_custo_mat_compra_p,'N') = 'S') then
          if (ie_exec_custo_mat_compra_w = 'N' and ie_custo_multi_estab_w = 'S') then
                CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853807) || ' - ' || c01_w.nm_estabelecimento,'OBTER_CUSTO_MAT_COMPRA', 0);
                CALL custos_pck.obter_custo_mat_compra( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                   cd_tabela_custo_p    => cd_tab_preco_padrao_mat_w,
                                                   ie_tipo_parametro_p  => 1,
                                                   nr_seq_tabela_p      => nr_tab_preco_padrao_mat_w,
                                                   nm_usuario_p         => nm_usuario_p);
                ie_exec_custo_mat_compra_w:= 'S';
          else
                if (ie_custo_multi_estab_w = 'N') then
                      CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853807) || ' - ' || c01_w.nm_estabelecimento,'OBTER_CUSTO_MAT_COMPRA', 0);
                      CALL custos_pck.obter_custo_mat_compra( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                         cd_tabela_custo_p    => cd_tab_preco_padrao_mat_w,
                                                         ie_tipo_parametro_p  => 1,
                                                         nr_seq_tabela_p      => nr_tab_preco_padrao_mat_w,
                                                         nm_usuario_p         => nm_usuario_p);
                end if;
          end if;
    end if;
            /* Obter tabela preco, na aba  "Custos / Materiais" */


    if (coalesce(ie_custo_tabela_preco_p,'N') = 'S') then

           if (ie_exec_custo_tab_preco_w = 'N' and ie_custo_multi_estab_w = 'S') then
                 CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853808) || ' - ' || c01_w.nm_estabelecimento,'OBTER_CUSTO_TABELA_PRECO', 0);
                       CALL custos_pck.obter_custo_tabela_preco( cd_estabelecimento_p    => c01_w.cd_estabelecimento,
                                                            cd_tabela_custo_p       => cd_tab_preco_padrao_mat_w,
                                                            nr_seq_tabela_p         => nr_tab_preco_padrao_mat_w,
                                                            nm_usuario_p            => nm_usuario_p);
                 ie_exec_custo_tab_preco_w:= 'S';
           else
                 if (ie_custo_multi_estab_w = 'N') then
                       CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853808) || ' - ' || c01_w.nm_estabelecimento,'OBTER_CUSTO_TABELA_PRECO', 0);
                       CALL custos_pck.obter_custo_tabela_preco( cd_estabelecimento_p    => c01_w.cd_estabelecimento,
                                                            cd_tabela_custo_p       => cd_tab_preco_padrao_mat_w,
                                                            nr_seq_tabela_p         => nr_tab_preco_padrao_mat_w,
                                                            nm_usuario_p            => nm_usuario_p);
                 end if;
           end if;
    end if;
        /* Valor presente material, na aba "Custos / Materiais" */


    if (coalesce(ie_cotacao_avista_p,'N') = 'S') then

          if (ie_exec_calc_cot_avista_w = 'N' and ie_custo_multi_estab_w = 'S') then
               CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853809) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_COTACAO_AVISTA', 0);
               CALL custos_pck.calcular_cotacao_avista( cd_estabelecimento_p  => c01_w.cd_estabelecimento,
                                                   cd_tabela_custo_p     => cd_tab_preco_padrao_mat_w,
                                                   nr_seq_tabela_p       =>  nr_tab_preco_padrao_mat_w,
                                                   nm_usuario_p          => nm_usuario_p);
               ie_exec_calc_cot_avista_w:= 'S';
          else
               if (ie_custo_multi_estab_w = 'N') then
                     CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853809) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_COTACAO_AVISTA', 0);
                     CALL custos_pck.calcular_cotacao_avista( cd_estabelecimento_p  => c01_w.cd_estabelecimento,
                                                         cd_tabela_custo_p     => cd_tab_preco_padrao_mat_w,
                                                         nr_seq_tabela_p       =>  nr_tab_preco_padrao_mat_w,
                                                         nm_usuario_p          => nm_usuario_p);
               end if;
          end if;
    end if;
           /*Valor presente procedimento, na aba "Custos / Procedimento" */


    if (coalesce(ie_valor_presente_proc_p,'N') = 'S') then
           if (ie_exec_calc_vl_present_w = 'N' and ie_custo_multi_estab_w = 'S') then
                 CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853810) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_VALOR_PRESENTE_PROC', 0);
                       CALL custos_pck.calcular_valor_presente_proc( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                                                cd_tabela_custo_p      => cd_tab_preco_padrao_proc_w,
                                                                nr_seq_tabela_p        => nr_tab_preco_padrao_proc_w,
                                                                nm_usuario_p          => nm_usuario_p);
                 ie_exec_calc_vl_present_w:= 'S';
           else
                 if (ie_custo_multi_estab_w = 'N') then
                       CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853810) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_VALOR_PRESENTE_PROC', 0);
                       CALL custos_pck.calcular_valor_presente_proc( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                                                cd_tabela_custo_p      => cd_tab_preco_padrao_proc_w,
                                                                nr_seq_tabela_p        => nr_tab_preco_padrao_proc_w,
                                                                nm_usuario_p          => nm_usuario_p);
                       ie_exec_calc_vl_present_w:= 'S';
                 end if;
           end if;
    end if;
           /* Calcular, na aba "Custo padrao / Custo procedimento/servico"
                      NR_FICHA_INICIAL_P  1;
                      NR_FICHA_FINAL_P        999999; */

    if (coalesce(ie_custo_padrao_p,'N') = 'S') then
          CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853811) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_CUSTO_PADRAO', 0);
          CALL custos_pck.calcular_custo_padrao( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                            cd_tabela_custo_p      => cd_tab_custo_padrao_w,
                                            nr_ficha_inicial_p     => 1,
                                            nr_ficha_final_p       => 999999,
                                            nr_seq_tabela_p        => nr_tab_custo_padrao_w,
                                            nm_usuario_p           => nm_usuario_p);
    end if;
           /*Calcular, na aba "Precos / Procedimentos"
                         Opcao existente na aba Calculo "Preco de venda"
                         PR_DESPESA_FIXA_P  =     0;
                         PR_CUSTO_FIXO_P  =   0;
                         */

    if (coalesce(ie_preco_venda_p,'N') = 'S') then
          CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853812) || ' - ' || c01_w.nm_estabelecimento,'CALCULAR_PRECO_PADRAO', 0);
          CALL custos_pck.calcular_preco_padrao( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                            cd_tabela_custo_p      => cd_tab_preco_venda_w,
                                            pr_despesa_fixa_p      => 0,
                                            pr_custo_fixo_p        => 0,
                                            nr_seq_tabela_p        => nr_tab_preco_venda_w,
                                            nm_usuario_p           => nm_usuario_p);
    end if;
        /*Atualizar preco final, na aba "Precos / Materiais" */


    if (coalesce(ie_atualizar_preco_final_p,'N') = 'S') then

          if (ie_exec_preco_final_w = 'N' and ie_custo_multi_estab_w = 'S') then
                CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853813) || ' - ' || c01_w.nm_estabelecimento,'CUS_ATUALIZAR_PRECO_FINAL_MAT', 0);
                CALL custos_pck.cus_atualizar_preco_final_mat( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                          cd_tabela_custo_p    => cd_tab_preco_venda_w,
                                                          nr_seq_tabela_p      => nr_tab_preco_venda_w,
                                                          nm_usuario_p         => nm_usuario_p);
                CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853816) || ' - ' || c01_w.nm_estabelecimento,'CUS_ATUALIZAR_PRECO_FINAL_PROC', 0);
                CALL custos_pck.cus_atualizar_preco_final_proc( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                           cd_tabela_custo_p    => cd_tab_preco_venda_w,
                                                           nr_seq_tabela_p      => nr_tab_preco_venda_w,
                                                           nm_usuario_p         => nm_usuario_p);
                ie_exec_preco_final_w:= 'S';
          else
                if (ie_custo_multi_estab_w = 'N') then
                      CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853813) || ' - ' || c01_w.nm_estabelecimento,'CUS_ATUALIZAR_PRECO_FINAL_MAT', 0);
                      CALL custos_pck.cus_atualizar_preco_final_mat( cd_estabelecimento_p   => c01_w.cd_estabelecimento,
                                                                cd_tabela_custo_p      => cd_tab_preco_venda_w,
                                                                nr_seq_tabela_p        => nr_tab_preco_venda_w,
                                                                nm_usuario_p           => nm_usuario_p);
                      CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(853816) || ' - ' || c01_w.nm_estabelecimento,'CUS_ATUALIZAR_PRECO_FINAL_PROC', 0);
                      CALL custos_pck.cus_atualizar_preco_final_proc( cd_estabelecimento_p => c01_w.cd_estabelecimento,
                                                                 cd_tabela_custo_p    => cd_tab_preco_venda_w,
                                                                 nr_seq_tabela_p      => nr_tab_preco_venda_w,
                                                                 nm_usuario_p         => nm_usuario_p);
                end if;
          end if;
    end if;
end loop;
close c01;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.cus_calcular_tabela_auto ( dt_mes_referencia_p timestamp, ie_tipo_resultado_p text, ie_copiar_tab_custo_ant_p text, ie_taxa_custo_p text, ie_resultado_p text, ie_atualizar_indic_p text, ie_material_tabela_p text, ie_custo_estoque_p text, ie_custo_mat_compra_p text, ie_custo_tabela_preco_p text, ie_cotacao_avista_p text, ie_valor_presente_proc_p text, ie_custo_padrao_p text, ie_preco_venda_p text, ie_atualizar_preco_final_p text, ie_calculo_empresa_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_empresa_p empresa.cd_empresa%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
