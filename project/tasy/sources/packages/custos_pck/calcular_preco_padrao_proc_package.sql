-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.calcular_preco_padrao_proc ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nm_usuario_p text, cd_tabela_componente_p bigint, cd_tabela_custo_padrao_p bigint, cd_tabela_preco_anterior_p bigint, cd_comp_perc_margem_p bigint, pr_custo_indireto_fixo_p bigint, pr_despesa_fixa_p bigint, nr_seq_tabela_p bigint) AS $body$
DECLARE


cd_componente_w                   componente_custo.cd_componente%type       := 0;
cd_tabela_procedimento_w          tabela_parametro.cd_tabela_parametro%type := 0;
ds_erro_w                         varchar(255);
ds_resultado_w                    varchar(255);
dt_atualizacao_w                  timestamp            := clock_timestamp();
dt_referencia_w                   timestamp            := clock_timestamp();
ie_dvv_w                          varchar(1);
ie_origem_proced_w                ficha_tecnica_componente.ie_origem_proced%type := 0;
ie_tipo_componente_w              varchar(1);
nr_nivel_estrutura_w              ficha_tecnica.nr_nivel_estrutura%type          := 0;
pr_custo_indireto_fixo_w          double precision    := 0;
pr_despesa_fixa_w                 double precision    := 0;
pr_dvv_w                          double precision    := 0;
pr_margem_lucro_w                 double precision    := 0;
pr_componente_w                   double precision    := 0;
qt_lote_padrao_w                  double precision    := 0;
qt_parametro_w                    double precision    := 0;
vl_preco_anterior_w               double precision    := 0;
vl_custo_variavel_w               double precision    := 0;
vl_custo_variavel_ww              double precision    := 0;
vl_custo_dir_apoio_w              double precision    := 0;
vl_custo_mao_obra_w               double precision    := 0;
vl_custo_direto_fixo_w            double precision    := 0;
vl_custo_indireto_w               double precision    := 0;
vl_custo_hm_w                     double precision    := 0;
vl_custo_total_w                  double precision    := 0;
vl_despesa_w                      double precision    := 0;
vl_preco_calculado_w              double precision    := 0;
cd_empresa_w                      bigint;
nr_seq_comp_custo_w               bigint;
nr_seq_comp_perc_margem_w         bigint;
cd_setor_atendimento_w            bigint;
nr_seq_tab_procedimento_w         bigint;
nr_seq_tabela_custo_padrao_w      tabela_parametro.nr_seq_tabela_param%type := 0;
nr_seq_tabela_componente_w        tabela_parametro.nr_seq_tabela_param%type := 0;
nr_seq_tabela_preco_anterior_w    tabela_parametro.nr_seq_tabela_param%type := 0;


c01 CURSOR(
          nr_seq_tabela_custo_padrao_pc    tabela_parametro.nr_seq_tabela_param%type,
          nr_seq_tab_procedimento_pc       tabela_parametro.nr_seq_tabela_param%type,
          cd_estabelecimento_pc            estabelecimento.cd_estabelecimento%type
          )FOR
          SELECT  x.cd_procedimento,
                  x.ie_origem_proced,
                  x.nr_seq_proc_interno,
                  x.nr_nivel_estrutura,
                  x.qt_lote_padrao,
                  x.vl_custo_fixo,
                  x.vl_custo_variavel,
                  x.nr_ficha_tecnica,
                  x.ie_calcula_conta,
                  x.nr_seq_exame,
                  nextval('preco_padrao_proc_seq') preco_padrao_proc_seq
          from (   SELECT  b.cd_procedimento,
                          b.ie_origem_proced,
                          null nr_seq_proc_interno,
                          b.nr_nivel_estrutura,
                          b.qt_lote_padrao,
                          a.vl_custo_fixo,
                          a.vl_custo_variavel,
                          a.nr_ficha_tecnica,
                          coalesce(b.ie_calcula_conta,'S') ie_calcula_conta,
                          null nr_seq_exame
                 from     custo_padrao a,
                          ficha_tecnica b
                 where    a.nr_ficha_tecnica     = b.nr_ficha_tecnica
                 and      a.cd_estabelecimento   = cd_estabelecimento_p
                 and      a.nr_seq_tabela        = nr_seq_tabela_custo_padrao_pc
                 and      b.ie_situacao          = 'A'
                 and      a.ie_situacao_calculo  = 'C'
                 and      (b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '')
                 and      (b.ie_origem_proced IS NOT NULL AND b.ie_origem_proced::text <> '')

union

                 select  a.cd_procedimento,
                         a.ie_origem_proced,
                         null nr_seq_proc_interno,
                         1 nr_nivel_estrutura,
                         1 qt_lote_padrao,
                         0 vl_custo_fixo,
                         a.vl_presente vl_custo_variavel,
                         0 nr_ficha_tecnica,
                         'S' ie_calcula_conta,
                         null nr_seq_exame
                 from    custo_procedimento a
                 where   a.cd_estabelecimento = cd_estabelecimento_pc
                 and     a.nr_seq_tabela      = nr_seq_tab_procedimento_pc
                 and     (ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '')
                 and     (a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
                 and     not exists (    select  y.cd_procedimento
                                         from    custo_padrao x,
                                                 ficha_tecnica y
                                         where   x.nr_ficha_tecnica      = y.nr_ficha_tecnica
                                         and     x.cd_estabelecimento    = cd_estabelecimento_pc
                                         and     x.nr_seq_tabela         = nr_seq_tabela_custo_padrao_pc
                                         and     y.cd_procedimento       = a.cd_procedimento)
                  
union

                  select  null cd_procedimento,
                          null ie_origem_proced,
                          b.nr_seq_proc_interno,
                          b.nr_nivel_estrutura,
                          b.qt_lote_padrao,
                          a.vl_custo_fixo,
                          a.vl_custo_variavel,
                          a.nr_ficha_tecnica,
                          coalesce(b.ie_calcula_conta,'S') ie_calcula_conta,
                          null nr_seq_exame
                  from    custo_padrao a,
                          ficha_tecnica b
                  where   a.nr_ficha_tecnica      = b.nr_ficha_tecnica
                  and     a.cd_estabelecimento    = cd_estabelecimento_pc
                  and     a.nr_seq_tabela         = nr_seq_tabela_custo_padrao_pc
                  and     b.ie_situacao           = 'A'
                  and     a.ie_situacao_calculo   = 'C'
                  and     (b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> '')
                  and     coalesce(b.cd_procedimento::text, '') = ''
                  and     coalesce(b.ie_origem_proced::text, '') = ''
                  
union

                  select  null cd_procedimento,
                          null ie_origem_proced,
                          nr_seq_proc_interno,
                          1 nr_nivel_estrutura,
                          1 qt_lote_padrao,
                          0 vl_custo_fixo,
                          a.vl_presente vl_custo_variavel,
                          0 nr_ficha_tecnica,
                          'S' ie_calcula_conta,
                          null nr_seq_exame
                  from    custo_procedimento a
                  where   a.cd_estabelecimento    = cd_estabelecimento_pc
                  and     a.nr_seq_tabela         = nr_seq_tab_procedimento_pc
                  and     (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
                  and     coalesce(cd_procedimento::text, '') = ''
                  and     coalesce(ie_origem_proced::text, '') = ''
                  and     not exists (    select  y.nr_seq_proc_interno
                                          from    custo_padrao x,
                                                  ficha_tecnica y
                                          where   x.nr_ficha_tecnica      = y.nr_ficha_tecnica
                                          and     x.cd_estabelecimento    = cd_estabelecimento_pc
                                          and     x.nr_seq_tabela         = nr_seq_tabela_custo_padrao_pc
                                          and     y.nr_seq_proc_interno   = a.nr_seq_proc_interno)
                  
union

                  select  null cd_procedimento,
                          null ie_origem_proced,
                          null nr_seq_proc_interno,
                          b.nr_nivel_estrutura,
                          b.qt_lote_padrao,
                          a.vl_custo_fixo,
                          a.vl_custo_variavel,
                          a.nr_ficha_tecnica,
                          coalesce(b.ie_calcula_conta,'S') ie_calcula_conta,
                          b.nr_seq_exame
                  from    custo_padrao a,
                          ficha_tecnica b
                  where   a.nr_ficha_tecnica      = b.nr_ficha_tecnica
                  and     a.nr_seq_tabela         = nr_seq_tabela_custo_padrao_pc
                  and     b.ie_situacao           = 'A'
                  and     a.ie_situacao_calculo   = 'C'
                  and     (b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
                  and     coalesce(b.cd_procedimento::text, '') = ''
                  and     coalesce(b.ie_origem_proced::text, '') = ''
                  
union

                  select  null cd_procedimento,
                          null ie_origem_proced,
                          null nr_seq_proc_interno,
                          1 nr_nivel_estrutura, 
                          1 qt_lote_padrao,
                          0 vl_custo_fixo,
                          a.vl_presente vl_custo_variavel,
                          0 nr_ficha_tecnica,
                          'S' ie_calcula_conta,
                          a.nr_seq_exame
                  from    custo_procedimento a
                  where   a.cd_estabelecimento = cd_estabelecimento_pc
                  and     a.nr_seq_tabela      = nr_seq_tab_procedimento_pc
                  and     (nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '')
                  and     coalesce(cd_procedimento::text, '') = ''
                  and     coalesce(ie_origem_proced::text, '') = ''
                  and     not exists (    select  y.nr_seq_exame
                                          from    custo_padrao x,
                                                  ficha_tecnica y
                                          where   x.nr_ficha_tecnica      = y.nr_ficha_tecnica
                                          and     x.cd_estabelecimento    = cd_estabelecimento_pc
                                          and     x.nr_seq_tabela         = nr_seq_tabela_custo_padrao_pc
                                          and     y.nr_seq_exame          = a.nr_seq_exame))
        x;

type vetor_c01 is table of c01%rowtype index by integer;
vetor_c01_w    vetor_c01;

type t_preco_padrao_proc is table of preco_padrao_proc%rowtype index by integer;
preco_padrao_proc_w  t_preco_padrao_proc;


c02 CURSOR(
          cd_empresa_pc            empresa.cd_empresa%type,
          cd_estabelecimento_pc    componente_custo.cd_estabelecimento%type
          )FOR
          SELECT  nr_sequencia,
                  cd_componente
          from    componente_custo
          where   cd_empresa  = cd_empresa_pc
          and     coalesce(cd_estabelecimento,cd_estabelecimento_pc)   = cd_estabelecimento_pc
          and     ie_dvv         = 'S';
BEGIN

select  max(cd_tabela_parametro),
        max(nr_seq_tabela_param)
into STRICT    cd_tabela_procedimento_w,
        nr_seq_tab_procedimento_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 7;

select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tabela_componente_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 1;

select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tabela_custo_padrao_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 2;

select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tabela_preco_anterior_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 3;


delete  from preco_padrao_proc
where   cd_estabelecimento  = cd_estabelecimento_p
and     nr_seq_tabela       = nr_seq_tabela_p;

cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_p);

open c01(
        nr_seq_tabela_custo_padrao_pc   => nr_seq_tabela_custo_padrao_w,
        nr_seq_tab_procedimento_pc      => nr_seq_tab_procedimento_w,
        cd_estabelecimento_pc           => cd_estabelecimento_p
        );
        loop fetch c01 bulk collect into vetor_c01_w limit 1000;
        exit when vetor_c01_w.count = 0;
             for i in vetor_c01_w.first .. vetor_c01_w.last loop
             begin
             vl_custo_variavel_w := vetor_c01_w[i].vl_custo_variavel;
             vl_custo_direto_fixo_w  := vetor_c01_w[i].vl_custo_fixo;

             vl_custo_variavel_ww    := vl_custo_variavel_w;
             cd_setor_atendimento_w  := null;

             if     ((vetor_c01_w[i](.cd_procedimento IS NOT NULL AND .cd_procedimento::text <> '')) and (vetor_c01_w[i](.ie_origem_proced IS NOT NULL AND .ie_origem_proced::text <> '')))
                    or (coalesce(vetor_c01_w[i].nr_seq_proc_interno,0) > 0) then
                    obter_valor_componente( cd_estabelecimento_p, 
                                            cd_comp_perc_margem_p, 
                                            null, 
                                            cd_tabela_componente_p,
                                            0, 
                                            0, 
                                            vetor_c01_w[i].cd_procedimento, 
                                            vetor_c01_w[i].ie_origem_proced, 
                                            dt_referencia_w,
                                            pr_margem_lucro_w, 
                                            ie_dvv_w, 
                                            ie_tipo_componente_w, 
                                            ds_resultado_w, 
                                            vetor_c01_w[i].nr_seq_proc_interno);
             end if;
             pr_dvv_w := 0;

             open c02(
             cd_empresa_pc           => cd_empresa_w,
             cd_estabelecimento_pc   => cd_estabelecimento_p
             );
             loop
             fetch c02 into
                  nr_seq_comp_custo_w,
                  cd_componente_w;
                  EXIT WHEN NOT FOUND; /* apply on c02 */
                       begin
                       if    ((vetor_c01_w[i](.cd_procedimento IS NOT NULL AND .cd_procedimento::text <> '')) and (vetor_c01_w[i](.ie_origem_proced IS NOT NULL AND .ie_origem_proced::text <> ''))) or (coalesce(vetor_c01_w[i].nr_seq_proc_interno,0) > 0) then
                            obter_valor_componente( cd_estabelecimento_p,
                                                    nr_seq_comp_custo_w, 
                                                    null, 
                                                    cd_tabela_componente_p,
                                                    0, 
                                                    0, 
                                                    vetor_c01_w[i].cd_procedimento, 
                                                    vetor_c01_w[i].ie_origem_proced, 
                                                    dt_referencia_w,
                                                    pr_componente_w, 
                                                    ie_dvv_w, 
                                                    ie_tipo_componente_w, 
                                                    ds_resultado_w, 
                                                    vetor_c01_w[i].nr_seq_proc_interno);
                       end if;
                       if    pr_componente_w > 0 then
                             pr_dvv_w    := pr_dvv_w + pr_componente_w;
                       end if;
                       end;
             end loop;
             close c02;

             pr_margem_lucro_w         := coalesce(pr_margem_lucro_w,0);
             pr_custo_indireto_fixo_w  := coalesce(pr_custo_indireto_fixo_p,0);

             vl_custo_variavel_w     := 0;
             vl_custo_direto_fixo_w  := 0;
             vl_custo_dir_apoio_w    := 0;
             vl_custo_mao_obra_w     := 0;
             vl_custo_indireto_w     := 0;
             vl_despesa_w            := 0;
             vl_custo_hm_w           := 0;

             if (vetor_c01_w[i].nr_ficha_tecnica > 0) then
                    select  coalesce(sum(CASE WHEN b.ie_classif_custo=0 THEN  a.vl_custo_componente  ELSE 0 END ),0),
                            coalesce(sum(CASE WHEN b.ie_classif_custo=1 THEN  a.vl_custo_componente  ELSE 0 END ),0),
                            coalesce(sum(CASE WHEN b.ie_classif_custo=2 THEN  a.vl_custo_componente  ELSE 0 END ),0),
                            coalesce(sum(CASE WHEN b.ie_classif_custo=3 THEN  a.vl_custo_componente  ELSE 0 END ),0),
                            coalesce(sum(CASE WHEN b.ie_classif_custo=4 THEN  a.vl_custo_componente  ELSE 0 END ),0),
                            coalesce(sum(CASE WHEN b.ie_classif_custo=5 THEN  a.vl_custo_componente  ELSE 0 END ),0),
                            coalesce(sum(CASE WHEN b.ie_classif_custo=6 THEN  a.vl_custo_componente  ELSE 0 END ),0)
                    into STRICT    vl_custo_variavel_w,
                            vl_custo_dir_apoio_w,
                            vl_custo_mao_obra_w,
                            vl_custo_direto_fixo_w,
                            vl_custo_indireto_w,
                            vl_despesa_w,
                            vl_custo_hm_w
                    from    grupo_natureza_gasto b,
                            custo_padrao_comp a
                    where   a.cd_estabelecimento    = cd_estabelecimento_p
                    and     a.nr_seq_tabela         = nr_seq_tabela_custo_padrao_w
                    and     a.nr_ficha_tecnica      = vetor_c01_w[i].nr_ficha_tecnica
                    and     a.cd_estabelecimento    = coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
                    and     a.nr_seq_gng            = b.nr_sequencia
                    and     b.cd_empresa            = cd_empresa_w;

                    select  max(a.cd_setor_atendimento)
                    into STRICT    cd_setor_atendimento_w
                    from    ficha_tecnica a
                    where   a.cd_estabelecimento  = cd_estabelecimento_p
                    and     a.nr_ficha_tecnica    = vetor_c01_w[i].nr_ficha_tecnica;

             end if;

             if (vetor_c01_w[i]coalesce(.nr_seq_proc_interno::text, '') = '') and (vetor_c01_w[i]coalesce(.nr_seq_exame::text, '') = '') then
                     begin
                     select   CASE WHEN vl_preco_tabela=0 THEN  vl_preco_calculado  ELSE vl_preco_tabela END ,
                              qt_parametro
                     into STRICT     vl_preco_anterior_w,
                              qt_parametro_w
                     from     preco_padrao_proc
                     where    cd_estabelecimento = cd_estabelecimento_p
                     and      cd_tabela_custo    = nr_seq_tabela_preco_anterior_w
                     and      cd_procedimento    = vetor_c01_w[i].cd_procedimento
                     and      ie_origem_proced   = vetor_c01_w[i].ie_origem_proced;
                     exception when others then
                               begin
                               qt_parametro_w       := 1;
                               vl_preco_anterior_w  := 0;
                               end;
                     end;
             elsif (vetor_c01_w[i](.nr_seq_proc_interno IS NOT NULL AND .nr_seq_proc_interno::text <> '')) then
                     begin
                     select  CASE WHEN vl_preco_tabela=0 THEN  vl_preco_calculado  ELSE vl_preco_tabela END ,
                             qt_parametro
                     into STRICT    vl_preco_anterior_w,
                             qt_parametro_w
                     from    preco_padrao_proc
                     where   cd_estabelecimento  = cd_estabelecimento_p
                     and     cd_tabela_custo     = nr_seq_tabela_preco_anterior_w
                     and     nr_seq_proc_interno = vetor_c01_w[i].nr_seq_proc_interno;
                     exception when others then
                               begin
                               qt_parametro_w       := 1;
                               vl_preco_anterior_w  := 0;
                               end;
                     end;
             end if;
             if (coalesce(vetor_c01_w[i].nr_ficha_tecnica,0) = 0) and (coalesce(vl_custo_variavel_w,0) = 0) then
                    vl_custo_variavel_w := vl_custo_variavel_ww;
             end if;

             vl_custo_total_w        :=  (coalesce(vl_custo_variavel_w,0) + coalesce(vl_custo_direto_fixo_w,0) +
                                         coalesce(vl_custo_dir_apoio_w,0) + coalesce(vl_custo_mao_obra_w,0) +
                                         coalesce(vl_custo_indireto_w,0) + coalesce(vl_despesa_w,0) +
                                         coalesce(vl_custo_hm_w,0));

             vl_preco_calculado_w    :=  dividir(((vl_custo_total_w) * (1 + dividir(pr_custo_indireto_fixo_w, 100) +
                                         dividir(pr_despesa_fixa_w,100))),
                                         (1 - dividir(pr_dvv_w, 100) - dividir(pr_margem_lucro_w , 100)));

             
             preco_padrao_proc_w[i].nr_sequencia                  := vetor_c01_w[i].preco_padrao_proc_seq;
             preco_padrao_proc_w[i].cd_estabelecimento            := cd_estabelecimento_p;
             preco_padrao_proc_w[i].cd_tabela_custo               := cd_tabela_custo_p;
             preco_padrao_proc_w[i].cd_procedimento               := vetor_c01_w[i].cd_procedimento;
             preco_padrao_proc_w[i].ie_origem_proced              := vetor_c01_w[i].ie_origem_proced;
             preco_padrao_proc_w[i].nr_seq_proc_interno           := vetor_c01_w[i].nr_seq_proc_interno;
             preco_padrao_proc_w[i].nm_usuario                    := nm_usuario_p;
             preco_padrao_proc_w[i].dt_atualizacao                := dt_atualizacao_w;
             preco_padrao_proc_w[i].qt_parametro                  := qt_parametro_w;
             preco_padrao_proc_w[i].pr_dvv                        := pr_dvv_w;
             preco_padrao_proc_w[i].pr_despesa_fixa               := pr_despesa_fixa_w;
             preco_padrao_proc_w[i].pr_custo_indireto_fixo        := pr_custo_indireto_fixo_w;
             preco_padrao_proc_w[i].pr_margem_lucro               := pr_margem_lucro_w;
             preco_padrao_proc_w[i].vl_custo_variavel             := vl_custo_variavel_w;
             preco_padrao_proc_w[i].vl_custo_direto_fixo          := vl_custo_direto_fixo_w;
             preco_padrao_proc_w[i].vl_preco_calculado            := vl_preco_calculado_w;
             preco_padrao_proc_w[i].vl_preco_tabela               := 0;
             preco_padrao_proc_w[i].vl_preco_tabela_anterior      := vl_preco_anterior_w;
             preco_padrao_proc_w[i].vl_custo_dir_apoio            := vl_custo_dir_apoio_w;
             preco_padrao_proc_w[i].vl_custo_mao_obra             := vl_custo_mao_obra_w;
             preco_padrao_proc_w[i].vl_custo_indireto             := vl_custo_indireto_w;
             preco_padrao_proc_w[i].vl_despesa                    := vl_despesa_w;
             preco_padrao_proc_w[i].ie_calcula_conta              := vetor_c01_w[i].ie_calcula_conta;
             preco_padrao_proc_w[i].vl_custo_hm                   := vl_custo_hm_w;
             preco_padrao_proc_w[i].nr_seq_exame                  := vetor_c01_w[i].nr_seq_exame;
             preco_padrao_proc_w[i].cd_setor_atendimento          := cd_setor_atendimento_w;
             preco_padrao_proc_w[i].nr_seq_tabela                 := nr_seq_tabela_p;
             preco_padrao_proc_w[i].dt_atualizacao_nrec           := dt_atualizacao_w;
             preco_padrao_proc_w[i].nm_usuario_nrec               := nm_usuario_p;
             preco_padrao_proc_w[i].nr_ficha_tecnica              := case when vetor_c01_w[i].nr_ficha_tecnica > 0 then vetor_c01_w[i].nr_ficha_tecnica else  null end;

             end;
             end loop;
             begin
             forall m in preco_padrao_proc_w.first .. preco_padrao_proc_w.last
             insert into preco_padrao_proc values preco_padrao_proc_w(m);
             commit;
             preco_padrao_proc_w.delete;
             exception when others then
                       preco_padrao_proc_w.delete;
                       ds_erro_w   := sqlerrm(SQLSTATE);
                       CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 192975,vl_macros_p =>'DS_ERRO_W='||ds_erro_w);
             end;
        end loop;
close c01;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.calcular_preco_padrao_proc ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nm_usuario_p text, cd_tabela_componente_p bigint, cd_tabela_custo_padrao_p bigint, cd_tabela_preco_anterior_p bigint, cd_comp_perc_margem_p bigint, pr_custo_indireto_fixo_p bigint, pr_despesa_fixa_p bigint, nr_seq_tabela_p bigint) FROM PUBLIC;
