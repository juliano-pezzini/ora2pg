-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.apurar_res_centro_controle ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, ie_atualizar_indic_p text, nm_usuario_p text, nr_seq_tabela_p bigint) AS $body$
DECLARE



cd_centro_controle_w       resultado_centro_controle.cd_centro_controle%type;
cd_classif_w               resultado_centro_controle.ie_classif_conta%type;
cd_empresa_w               smallint;
cd_natureza_gasto_w        orcamento_custo.cd_natureza_gasto%type;
cd_sequencia_criterio_w    bigint;
cd_tabela_orc_w            tabela_parametro.cd_tabela_parametro%type := 0;
ds_erro_w                  varchar(500);
dt_mes_referencia_w        timestamp;
ie_classif_conta_w         classif_result.cd_classificacao%type;
ie_rec_liquida_w           varchar(01);
ie_tipo_centro_origem_w    smallint;
ie_tipo_gasto_w            varchar(2);
ie_emite_perc_w            varchar(2);
ie_union_w                 bigint;
nr_sequencia_w             numeric(20);
pr_rec_liquida_w           double precision  := 0;
qt_indicador_w             double precision;
qt_divisor_w               double precision;
qt_registro_w              bigint;
vl_custo_total_w           double precision  := 0;
vl_indicador_w             double precision;
vl_mes_w                   double precision;
vl_rec_liquida_w           double precision  := 0;
nr_seq_ng_w                bigint;
nr_seq_interno_w           bigint;
qt_contador_w              bigint    := 0;
ds_mensagem_w              varchar(4000);
cd_estabelecimento_w       bigint;
cd_estab_tabela_w          bigint;
nr_seq_tabela_orc_w        bigint;
cd_classif_calc_w          classif_result.cd_classificacao%type;

/* centros de controle do resultado*/


c00 CURSOR FOR
       SELECT  distinct
               a.cd_estabelecimento,
               a.cd_centro_controle,
               b.cd_empresa
       from    resultado_centro_controle a,
               estabelecimento b
       where   a.nr_seq_tabela       = nr_seq_tabela_p
       and     a.cd_estabelecimento  = coalesce(cd_estab_tabela_w, a.cd_estabelecimento)
       and     a.cd_estabelecimento  = b.cd_estabelecimento
       group by
               a.cd_estabelecimento,
               a.cd_centro_controle,
               b.cd_empresa
       order by
               1;


c01 CURSOR FOR
        SELECT  1 ie_union,
                coalesce(a.cd_classif_calc, a.cd_classificacao) cd_classif_calc,
                a.cd_classificacao,
                a.ie_receita_liquida,
                coalesce(a.ie_emite_perc,'N')
        from    classif_result  a
        where   a.cd_classificacao in (SELECT distinct y.cd_classif_calc
        from    classif_result y
        where   y.cd_empresa    = cd_empresa_w)
        and     a.cd_empresa    = cd_empresa_w
        and     not exists ( select 1
                              from    classif_result_calc y
                              where   y.cd_classificacao  = a.cd_classificacao)

union

        select  2 ie_union,
                coalesce(a.cd_classif_calc, a.cd_classificacao) cd_classif_calc,
                a.cd_classificacao,
                a.ie_receita_liquida,
                coalesce(a.ie_emite_perc,'N')
        from    classif_result  a
        where   a.cd_empresa    = cd_empresa_w
        and     exists ( select 1
                          from    classif_result_calc y
                          where   y.cd_classificacao  = a.cd_classificacao)
        order by
                1,
                2;


c02 CURSOR FOR
        SELECT  a.nr_seq_indicador nr_seq_indicador,
                a.qt_indicador qt_indicador,
                b.ie_forma_obtencao ie_forma_obtencao,
                b.ie_rotina_obtencao ie_rotina_obtencao,
                coalesce(b.ie_calcula_total, 'N') ie_calcula_total,
                b.ds_indicador
        from    resultado_indicador b,
                resultado_ind_cen_cont  a
        where   a.nr_seq_indicador    = b.nr_sequencia
        and     a.nr_seq_tabela       = nr_seq_tabela_p
        and     a.cd_centro_controle  = cd_centro_controle_w
        and     ie_atualizar_indic_p  = 'S'
        and     vl_custo_total_w      <> 0;

vet02   c02%rowtype;

/* valores - resultado a ser gravado origem: orcamento_custo e orcamento_distribuido */


c03 CURSOR FOR
        SELECT  a.cd_estabelecimento,
                a.cd_centro_controle,
                b.cd_classif_result,
                a.cd_natureza_gasto nr_sequencia,
                a.cd_natureza_gasto,
                b.nr_sequencia nr_seq_ng,
                sum(coalesce(a.vl_avista,0)) vl_mes,
                null ie_tipo_centro_origem,
                coalesce(a.ie_tipo_gasto,c.ie_tipo_gasto) ie_tipo_gasto
        from    estabelecimento d,
                grupo_natureza_gasto c,
                natureza_gasto b,
                orcamento_custo a
        where   d.cd_estabelecimento    = a.cd_estabelecimento
        and     d.cd_empresa            = c.cd_empresa
        and     d.cd_estabelecimento    = coalesce(cd_estab_tabela_w, d.cd_estabelecimento)
        and     a.nr_seq_tabela         = nr_seq_tabela_orc_w
        and     a.cd_estabelecimento    = coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
        and     a.nr_seq_ng             = b.nr_sequencia
        and     a.cd_estabelecimento    = coalesce(c.cd_estabelecimento, a.cd_estabelecimento)
        and     b.nr_seq_gng            = c.nr_sequencia
        and     b.cd_empresa            = c.cd_empresa
        and     exists ( SELECT  1
                        from    tabela_custo_acesso_v tca
                        where   tca.nr_sequencia        = nr_seq_tabela_orc_w
                        and     tca.nr_sequencia        = a.nr_seq_tabela
                        and     tca.cd_empresa          = c.cd_empresa
                        and     tca.cd_estabelecimento  = a.cd_estabelecimento)
        group by
                a.cd_estabelecimento,
                a.cd_centro_controle,
                b.cd_classif_result,
                a.cd_natureza_gasto,
                b.nr_sequencia,
                coalesce(a.ie_tipo_gasto,c.ie_tipo_gasto)

union all

        select  a.cd_estab_dest,
                a.cd_centro_controle_dest,
                CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result  ELSE e.cd_classif_result END  cd_classif_result,
                (a.nr_seq_ng_dest + 100000) nr_sequencia,
                a.cd_natureza_gasto_dest cd_natureza_gasto,
                a.nr_seq_ng_dest,
                sum(coalesce(a.vl_distribuido,0)) vl_mes,
                min(e.ie_tipo_centro_controle) ie_tipo_centro_origem,
                null ie_tipo_gasto
        from    estabelecimento d,
                centro_controle e,
                grupo_natureza_gasto c,
                natureza_gasto b,
                orcamento_distribuido a
        where   a.nr_seq_tabela       = nr_seq_tabela_orc_w
        and     a.cd_estabelecimento  = coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
        and     a.nr_seq_ng_dest      = b.nr_sequencia
        and     a.cd_estabelecimento  = coalesce(c.cd_estabelecimento, a.cd_estabelecimento)
        and     b.nr_seq_gng          = c.nr_sequencia
        and     b.cd_empresa          = c.cd_empresa
        and     c.cd_empresa          = d.cd_empresa 
        and     a.cd_centro_controle  = e.cd_centro_controle
        and     a.cd_estabelecimento  = e.cd_estabelecimento
        and     d.cd_estabelecimento  = a.cd_estab_dest
        and     d.cd_estabelecimento  = coalesce(cd_estab_tabela_w, d.cd_estabelecimento)
        and     exists ( select  1
                        from    tabela_custo_acesso_v tca
                        where   tca.nr_sequencia        = nr_seq_tabela_orc_w
                        and     tca.nr_sequencia        = a.nr_seq_tabela
                        and     tca.cd_empresa          = c.cd_empresa
                        and     tca.cd_estabelecimento  = d.cd_estabelecimento)
        group by
                 a.cd_estab_dest,
                 a.cd_centro_controle_dest,
                 CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result  ELSE e.cd_classif_result END ,
                 (a.cd_natureza_gasto_dest  + 100000),
                 a.cd_natureza_gasto_dest,
                 a.nr_seq_ng_dest;




BEGIN

qt_contador_w   := qt_contador_w + 1;

CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(299405),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_p);

select  max(cd_empresa),
        max(cd_estabelecimento),
        max(a.dt_mes_referencia)
into STRICT    cd_empresa_w,
        cd_estab_tabela_w,
        dt_mes_referencia_w
from    tabela_custo a
where   a.nr_sequencia  = nr_seq_tabela_p;

delete  from resultado_centro_controle
where   nr_seq_tabela       = nr_seq_tabela_p;

insert into resultado_ind_cen_cont(cd_estabelecimento,
       cd_tabela_custo,
       cd_centro_controle,
       nr_seq_indicador,
       nm_usuario,
       dt_atualizacao,
       qt_indicador,
       vl_indicador,
       nr_seq_tabela,
       dt_atualizacao_nrec,
       nm_usuario_nrec)
       SELECT  a.cd_estabelecimento,
               cd_tabela_custo_p,
               a.cd_centro_controle,
               a.nr_seq_indicador,
               nm_usuario_p,
               clock_timestamp(),
               0,
               0,
               nr_seq_tabela_p,
               clock_timestamp(),
               nm_usuario_p
       from    estabelecimento c,
               centro_controle b,
               centro_controle_indicador a
       where   a.cd_centro_controle    = b.cd_centro_controle
       and     a.cd_estabelecimento    = b.cd_estabelecimento
       and     c.cd_estabelecimento    = b.cd_estabelecimento
       and     exists ( SELECT  1
                       from    tabela_custo_acesso_v tca
                       where   tca.nr_sequencia         = nr_seq_tabela_p
                       and     tca.cd_empresa           = c.cd_empresa
                       and     tca.cd_estabelecimento   = c.cd_estabelecimento)
       and     c.cd_estabelecimento    = coalesce(cd_estab_tabela_w, c.cd_estabelecimento)
       and (ie_atualizar_indic_p   = 'S')
       and     not exists ( select 1
                             from    resultado_ind_cen_cont y
                             where   a.cd_estabelecimento    = y.cd_estabelecimento
                             and     a.cd_centro_controle    = y.cd_centro_controle
                             and     y.nr_seq_tabela         = nr_seq_tabela_p
                             and     a.nr_seq_indicador      = y.nr_seq_indicador)
       and     substr(obter_se_periodo_vigente(a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_mes_referencia_w),1,1) = 'S';

qt_contador_w   := qt_contador_w + 1;

CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(299406), 'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

update  resultado_ind_cen_cont a
set vl_indicador        = 0
where   nr_seq_tabela       = nr_seq_tabela_p;

select  max(cd_tabela_parametro),
        max(nr_seq_tabela_param)
into STRICT    cd_tabela_orc_w,
        nr_seq_tabela_orc_w
from    tabela_parametro
where   nr_seq_tabela    = nr_seq_tabela_p
and     nr_seq_parametro = 1;


if (holding_pck.get_grupo_emp_estrut_vigente(cd_empresa_w) <> 0) then
       begin
       open c03;
           loop
           fetch c03 into
               cd_estabelecimento_w,
               cd_centro_controle_w,
               ie_classif_conta_w,
               nr_sequencia_w,
               cd_natureza_gasto_w,
               nr_seq_ng_w,
               vl_mes_w,
               ie_tipo_centro_origem_w,
               ie_tipo_gasto_w;
               EXIT WHEN NOT FOUND; /* apply on c03 */
               begin
               begin
               select  nextval('resultado_centro_controle_seq')
               into STRICT    nr_seq_interno_w
;

               nr_sequencia_w  := nr_seq_interno_w;

               insert into resultado_centro_controle(nr_seq_interno,
                      cd_estabelecimento,
                      cd_tabela_custo,
                      cd_centro_controle,
                      ie_classif_conta,
                      nr_sequencia,
                      cd_natureza_gasto,
                      nm_usuario,
                      dt_atualizacao,
                      vl_mes,
                      pr_rec_liquida,
                      ie_tipo_centro_origem,
                      ie_tipo_gasto,
                      nr_seq_ng,
                      nr_seq_tabela)
               values (nr_seq_interno_w,
                        cd_estabelecimento_w,
                        cd_tabela_custo_p,
                        cd_centro_controle_w,
                        ie_classif_conta_w,
                        nr_sequencia_w,
                        cd_natureza_gasto_w,
                        nm_usuario_p,
                        clock_timestamp(),
                        vl_mes_w,
                        0,
                        ie_tipo_centro_origem_w,
                        ie_tipo_gasto_w,
                        nr_seq_ng_w,
                        nr_seq_tabela_p);
               exception when others then
                         ds_erro_w       := sqlerrm(SQLSTATE);
                         ds_mensagem_w   := substr(WHEB_MENSAGEM_PCK.get_texto(nr_seq_mensagem_p => 818137,Vl_Macros_P =>  'CD_CENTRO_CONTROLE_W=' || cd_centro_controle_w ||
                                                                                     ';NR_SEQUENCIA_W='  || nr_sequencia_w ||
                                                                                     ';IE_CLASSIF_CONTA_W=' || ie_classif_conta_w ||
                                                                                     ';IE_TIPO_GASTO_W=' || ie_tipo_gasto_w  ||
                                                                                     ';NR_SEQ_NG_W='  || nr_seq_ng_w) || chr(13) || chr(10)||ds_erro_w,1,4000);
                         CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 188139, vl_macros_p => ds_mensagem_w);
               end;
           end;
       end loop;
       close c03;

       commit;
       end;
else
       begin
       insert into resultado_centro_controle(nr_seq_interno,
               cd_estabelecimento,
               cd_tabela_custo,
               cd_centro_controle,
               ie_classif_conta,
               nr_sequencia,
               cd_natureza_gasto,
               nm_usuario,
               dt_atualizacao,
               vl_mes,
               pr_rec_liquida,
               ie_tipo_centro_origem,
               ie_tipo_gasto,
               nr_seq_ng,
               nr_seq_tabela)
               SELECT  nextval('resultado_centro_controle_seq'),
                       x.cd_estabelecimento,
                       cd_tabela_custo_p,
                       x.cd_centro_controle,
                       x.cd_classif_result,
                       nextval('resultado_centro_controle_seq'),
                       x.cd_natureza_gasto,
                       nm_usuario_p,
                       clock_timestamp(),
                       x.vl_mes,
                       0,
                       x.ie_tipo_centro_origem,
                       x.ie_tipo_gasto,
                       x.nr_seq_ng,
                       nr_seq_tabela_p
               from (  SELECT  a.cd_estabelecimento,
                               a.cd_centro_controle,
                               b.cd_classif_result,
                               a.cd_natureza_gasto nr_sequencia,
                               a.cd_natureza_gasto,
                               b.nr_sequencia nr_seq_ng,
                               sum(coalesce(a.vl_avista,0)) vl_mes,
                               null ie_tipo_centro_origem,
                               coalesce(a.ie_tipo_gasto,c.ie_tipo_gasto) ie_tipo_gasto
                       from    grupo_natureza_gasto c,
                               natureza_gasto b,
                               orcamento_custo a
                       where   a.nr_seq_tabela         = nr_seq_tabela_orc_w
                       and     a.cd_estabelecimento    = coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
                       and     a.nr_seq_ng             = b.nr_sequencia
                       and     a.cd_estabelecimento    = coalesce(c.cd_estabelecimento, a.cd_estabelecimento)
                       and     b.nr_seq_gng            = c.nr_sequencia
                       and     b.cd_empresa            = c.cd_empresa
                       and     c.cd_empresa            = cd_empresa_w
                       and     exists ( select 1
                                        from   estabelecimento x
                                        where  x.cd_empresa         = c.cd_empresa
                                        and    x.cd_estabelecimento = a.cd_estabelecimento
                                        and    x.cd_estabelecimento = coalesce(cd_estab_tabela_w, x.cd_estabelecimento)
                                        and    x.cd_empresa         = cd_empresa_w)
                      group by
                               a.cd_estabelecimento,
                               a.cd_centro_controle,
                               b.cd_classif_result,
                               a.cd_natureza_gasto,
                               b.nr_sequencia,
                               coalesce(a.ie_tipo_gasto,c.ie_tipo_gasto)

union all

                      select  a.cd_estab_dest,
                                a.cd_centro_controle_dest,
                                CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result  ELSE e.cd_classif_result END  cd_classif_result,
                                (a.nr_seq_ng_dest + 100000) nr_sequencia,
                                a.cd_natureza_gasto_dest cd_natureza_gasto,
                                a.nr_seq_ng_dest,
                                sum(coalesce(a.vl_distribuido,0)) vl_mes,
                                min(e.ie_tipo_centro_controle) ie_tipo_centro_origem,
                                null ie_tipo_gasto
                        from    centro_controle e,
                                grupo_natureza_gasto c,
                                natureza_gasto b,
                                orcamento_distribuido a
                        where   a.nr_seq_tabela         = nr_seq_tabela_orc_w
                        and     a.cd_estabelecimento    = coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
                        and     a.nr_seq_ng_dest        = b.nr_sequencia
                        and     a.cd_estabelecimento    = coalesce(c.cd_estabelecimento, a.cd_estabelecimento)
                        and     b.nr_seq_gng            = c.nr_sequencia
                        and     b.cd_empresa            = c.cd_empresa
                        and     c.cd_empresa            = cd_empresa_w
                        and     a.cd_centro_controle    = e.cd_centro_controle
                        and     a.cd_estabelecimento    = e.cd_estabelecimento
                        and     exists ( select  1
                                         from    estabelecimento x
                                         where   x.cd_estabelecimento    = a.cd_estab_dest
                                         and     x.cd_empresa            = cd_empresa_w
                                         and     x.cd_estabelecimento    = coalesce(cd_estab_tabela_w, x.cd_estabelecimento))
                        group by
                                 a.cd_estab_dest,
                                 a.cd_centro_controle_dest,
                                 CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result  ELSE e.cd_classif_result END ,
                                 (a.cd_natureza_gasto_dest  + 100000),
                                 a.cd_natureza_gasto_dest,
                                 a.nr_seq_ng_dest
						
union all

						select  a.cd_estabelecimento,
                                a.cd_centro_controle,
                                CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result_distr  ELSE e.cd_classif_result_distr END  cd_classif_result,
                                (a.nr_seq_ng_orig + 100000) nr_sequencia,
                                a.cd_natureza_gasto_orig cd_natureza_gasto,
                                a.nr_seq_ng_orig,
                                sum(coalesce(a.vl_distribuido,0)) vl_mes,
                                min(e.ie_tipo_centro_controle) ie_tipo_centro_origem,
                                null ie_tipo_gasto
                        from    centro_controle e,
                                grupo_natureza_gasto c,
                                natureza_gasto b,
                                orcamento_distribuido a
                        where   a.nr_seq_tabela         = nr_seq_tabela_orc_w
                        and     a.cd_estabelecimento    = coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
                        and     a.nr_seq_ng_dest        = b.nr_sequencia
                        and     a.cd_estabelecimento    = coalesce(c.cd_estabelecimento, a.cd_estabelecimento)
                        and     b.nr_seq_gng            = c.nr_sequencia
                        and     b.cd_empresa            = c.cd_empresa
                        and     c.cd_empresa            = cd_empresa_w
                        and     a.cd_centro_controle    = e.cd_centro_controle
                        and     a.cd_estabelecimento    = e.cd_estabelecimento
						and 	CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result_distr  ELSE e.cd_classif_result_distr (END IS NOT NULL AND END::text <> '')
                        and     exists ( select  1
                                         from    estabelecimento x
                                         where   x.cd_estabelecimento    = a.cd_estab_dest
                                         and     x.cd_empresa            = cd_empresa_w
                                         and     x.cd_estabelecimento    = coalesce(cd_estab_tabela_w, x.cd_estabelecimento))
                        group by
                                 a.cd_estabelecimento,
                                 a.cd_centro_controle,
                                 CASE WHEN c.ie_tipo_gasto='R' THEN  b.cd_classif_result_distr  ELSE e.cd_classif_result_distr END ,
                                 (a.cd_natureza_gasto_orig  + 100000),
                                 a.cd_natureza_gasto_orig,
                                 a.nr_seq_ng_orig) x;
       commit;
       end;
end if;


open c00;
loop
fetch c00 into
    cd_estabelecimento_w,
    cd_centro_controle_w,
    cd_empresa_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
    begin
    qt_contador_w   := qt_contador_w + 1;
    CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299409, Vl_Macros_P => 'CD_CENTRO_CONTROLE=' || cd_centro_controle_w), 'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

    vl_custo_total_w    := 0;

    select  coalesce(sum(CASE WHEN b.ie_custo_setor='S' THEN  vl_mes  ELSE vl_mes * -1 END ),0)
    into STRICT    vl_custo_total_w
    from    classif_result b,
            resultado_centro_controle a
    where   cd_estabelecimento  = cd_estabelecimento_w
    and     a.nr_seq_tabela     = nr_seq_tabela_p
    and     cd_centro_controle  = cd_centro_controle_w
    and     ie_classif_conta    = cd_classificacao
    and     b.cd_empresa        = cd_empresa_w
    and     ie_custo_setor      <> 'N';

    /*  calcular o resultado do centro de controle */


    open c01;
    loop
    fetch c01 into
        ie_union_w,
        cd_classif_calc_w,
        cd_classif_w,
        ie_rec_liquida_w,
        ie_emite_perc_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
        qt_contador_w   := qt_contador_w + 1;
        CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299410,Vl_Macros_P => 'CD_CENTRO_CONTROLE=' || cd_centro_controle_w), 'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

        pr_rec_liquida_w    := 0;

        if (ie_union_w = 1) then
               begin
               select  coalesce(sum(CASE WHEN b.ie_operacao='A' THEN  vl_mes WHEN b.ie_operacao='S' THEN  vl_mes * -1  ELSE 0 END ),0)
               into STRICT    vl_mes_w
               from    classif_result b,
                       resultado_centro_controle a
               where   cd_estabelecimento  = cd_estabelecimento_w
               and     b.cd_empresa        = cd_empresa_w
               and     a.nr_seq_tabela     = nr_seq_tabela_p
               and     cd_centro_controle  = cd_centro_controle_w
               and     ie_classif_conta    = cd_classificacao
               and     cd_classif_calc     = cd_classif_w;
               end;
        elsif (ie_union_w = 2) then
               begin

               select  coalesce(sum(CASE WHEN c.ie_operacao='A' THEN  vl_mes WHEN c.ie_operacao='S' THEN  vl_mes * -1  ELSE 0 END ),0)
               into STRICT    vl_mes_w
               from    classif_result c,
                       classif_result_calc b,
                       resultado_centro_controle a
               where   cd_estabelecimento   = cd_estabelecimento_w
               and     c.cd_empresa         = cd_empresa_w
               and     c.cd_classificacao   = b.cd_classif_calc
               and     a.nr_seq_tabela      = nr_seq_tabela_p
               and     a.cd_centro_controle = cd_centro_controle_w
               and     a.ie_classif_conta   = b.cd_classif_calc
               and     b.cd_classificacao   = cd_classif_w;

               end;
        end if;

        if (ie_rec_liquida_w = 'S') then
               vl_rec_liquida_w := vl_mes_w;
        end if;

        if (vl_rec_liquida_w <> 0 and ie_emite_perc_w = 'S') then
               pr_rec_liquida_w    := vl_mes_w * 100 / vl_rec_liquida_w;
        end if;

        if (vl_mes_w <> 0 or coalesce(obter_valor_param_usuario(927,95,obter_perfil_ativo,nm_usuario_p,Obter_estab_usuario(nm_usuario_p)),'N') = 'S') then
               insert into resultado_centro_controle(nr_seq_interno,
                      cd_estabelecimento,
                      cd_tabela_custo,
                      cd_centro_controle,
                      ie_classif_conta,
                      nr_sequencia,
                      nm_usuario,
                      dt_atualizacao,
                      vl_mes,
                      pr_rec_liquida,
                      nr_seq_tabela)
               values (nextval('resultado_centro_controle_seq'),
                      cd_estabelecimento_w,
                      cd_tabela_custo_p,
                      cd_centro_controle_w,
                      cd_classif_w,
                      nextval('resultado_centro_controle_seq'),
                      nm_usuario_p,
                      clock_timestamp(),
                      vl_mes_w,
                      pr_rec_liquida_w,
                      nr_seq_tabela_p);
        end if;
    end loop;
    close c01;

    /* calcular indicadores de desempenho */


    open c02;
    loop
    fetch c02 into
        vet02;
    EXIT WHEN NOT FOUND; /* apply on c02 */

        qt_contador_w   := qt_contador_w + 1;
        CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299411, Vl_Macros_P =>'DS_INDICADOR=' || vet02.ds_indicador),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

        qt_indicador_w          := vet02.qt_indicador;
        cd_sequencia_criterio_w     := null;

        /* verifica se o indicador possui criterio para obter a quantidade */


        select  count(1)
        into STRICT    qt_registro_w
        from    resultado_ind_criterio a
        where   a.nr_seq_indicador    = vet02.nr_seq_indicador
        and     a.cd_estabelecimento  = cd_estabelecimento_w
        and     a.nr_seq_tabela       = nr_seq_tabela_p  LIMIT 1;

        qt_divisor_w    := null;

        /*indicadores atualizados pela function*/


        if (vet02.ie_forma_obtencao = 'S') and (vet02.ie_rotina_obtencao IS NOT NULL AND vet02.ie_rotina_obtencao::text <> '') and (qt_registro_w = 0) then
                begin
                qt_contador_w   := qt_contador_w + 1;
                CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299413,Vl_Macros_P => 'IE_OBTENCAO=' || vet02.ie_rotina_obtencao),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

                qt_indicador_w  := coalesce(obter_indicador_cc(  cd_estabelecimento_w,
                                                            dt_mes_referencia_w,
                                                            cd_centro_controle_w,
                                                            cd_centro_controle_w,
                                                            vet02.ie_rotina_obtencao,
                                                            nr_seq_tabela_p),0);

               if (vet02.ie_rotina_obtencao = '8') then
                      qt_contador_w   := qt_contador_w + 1;
                      CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299413,Vl_Macros_P => 'IE_OBTENCAO=' || vet02.ie_rotina_obtencao),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

                      qt_divisor_w    := coalesce(obter_indicador_cc(  cd_estabelecimento_w,
                                                                  dt_mes_referencia_w,
                                                                  cd_centro_controle_w,
                                                                  cd_centro_controle_w,
                                                                  '-8',
                                                                  nr_seq_tabela_p),0);
            end if;

            end;
        end if;

        /* indicadores atualizados por crit?rio  matheus os 85179 18/04/2008*/


        if (vet02.ie_forma_obtencao = 'S') and (qt_registro_w > 0) then
              qt_contador_w   := qt_contador_w + 1;
              CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299418, Vl_Macros_P => 'NR_SEQ_CRITERIO=' || cd_sequencia_criterio_w),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

              cus_obter_indicador_criterio(   cd_estabelecimento_w,
                                              nr_seq_tabela_p,
                                              cd_centro_controle_w,
                                              vet02.nr_seq_indicador,
                                              cd_sequencia_criterio_w,
                                              qt_indicador_w);
        end if;

        /* C?lculo dos indicadores por SQL*/


        if (vet02.ie_forma_obtencao = 'B') then
              qt_contador_w   := qt_contador_w + 1;
              CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299419,Vl_Macros_P => 'NR_SEQ_CRITERIO=' || cd_sequencia_criterio_w),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

              qt_indicador_w      := 0;

              cus_calcular_result_ind_sql(    vet02.nr_seq_indicador,
                                              cd_tabela_custo_p,
                                              cd_estabelecimento_w,
                                              cd_centro_controle_w,
                                              dt_mes_referencia_w,
                                              qt_indicador_w,
                                              nr_seq_tabela_p);
        end if;

        qt_contador_w   := qt_contador_w + 1;
        CALL gravar_processo_longo( Wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 299411,Vl_Macros_P =>'DS_INDICADOR=' || vet02.ds_indicador),'APURAR_RES_CENTRO_CONTROLE', qt_contador_w);

        /* atualizar o custo do indicador */


        begin
        vl_indicador_w          := 0;

        if (vet02.ie_calcula_total = 'S') and (qt_indicador_w <> 0) then
              vl_indicador_w      := dividir(vl_custo_total_w,qt_indicador_w);
        end if;

        if (vet02.ie_rotina_obtencao = '16') then
              vl_indicador_w      := qt_indicador_w;
              qt_indicador_w      := 0;
        end if;

        update  resultado_ind_cen_cont
        set     qt_indicador            = qt_indicador_w,
                vl_indicador            = vl_indicador_w,
                cd_sequencia_criterio   = cd_sequencia_criterio_w,
                qt_divisor              = qt_divisor_w,
                vl_custo_total          = vl_custo_total_w
        where   cd_estabelecimento      = cd_estabelecimento_w
        and     nr_seq_tabela           = nr_seq_tabela_p
        and     cd_centro_controle      = cd_centro_controle_w
        and     nr_seq_indicador        = vet02.nr_seq_indicador;
        end;
    end loop;
    close c02;
    end;
end loop;
close c00;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.apurar_res_centro_controle ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, ie_atualizar_indic_p text, nm_usuario_p text, nr_seq_tabela_p bigint) FROM PUBLIC;
