-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.obter_custo_tabela_preco ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_parametro_w          timestamp;
vl_custo_unit_w         double precision    := 0;
cd_material_w           integer       := 0;
cd_tabela_preco_w       smallint       := 0;
cd_tabela_preco_ww      smallint       := 0;
cd_estabelecimento_w    custo_material.cd_estabelecimento%type;

c01 CURSOR FOR
        SELECT  a.cd_material,
                a.cd_estabelecimento
        from    custo_material a
        where   a.nr_seq_tabela     =  nr_seq_tabela_p
        and     a.vl_cotado_consumo = 0;


BEGIN


select  coalesce(max(dt_parametro),clock_timestamp())
into STRICT    dt_parametro_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 4;


select  coalesce(max(qt_parametro),0)
into STRICT    cd_tabela_preco_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 5;

cd_tabela_preco_ww  := cd_tabela_preco_w;
open c01;
loop
fetch c01 into
    cd_material_w,
    cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    cd_tabela_preco_w   := coalesce(cus_obter_regra_custo_mat(cd_estabelecimento_w, cd_material_w), cd_tabela_preco_ww);
    begin
    select  dividir(coalesce(vl_preco_venda,0),coalesce(QT_CONVERSAO,1))  
    into STRICT    vl_custo_unit_w
    from    preco_material 
    where   cd_estabelecimento  = cd_estabelecimento_w
    and     cd_tab_preco_mat    = cd_tabela_preco_w
    and     cd_material         = cd_material_w
    and     dt_inicio_vigencia  = ( SELECT  max(x.dt_inicio_vigencia)
                                    from    preco_material x
                                    where   x.cd_estabelecimento  = cd_estabelecimento_w
                                    and     x.cd_tab_preco_mat    = cd_tabela_preco_w
                                    and     x.cd_material         = cd_material_w
                                    and     x.dt_inicio_vigencia  <= dt_parametro_w
                                    and     coalesce(x.dt_final_vigencia,dt_parametro_w) >= dt_parametro_w);
    exception when others then
              vl_custo_unit_w := 0;
    end;
  
    if (vl_custo_unit_w > 0)  then
           update  custo_material 
           set     vl_cotado_consumo   = vl_custo_unit_w,
                   vl_cotado_compra    = vl_custo_unit_w,
                   pr_frete            = 0,
                   qt_dias_prazo       = 0,
                   dt_atualizacao      = clock_timestamp()
           where   nr_seq_tabela       = nr_seq_tabela_p
           and     cd_material         = cd_material_w;
    end if;
end loop;
close c01;
commit;
CALL custos_pck.calcular_cotacao_avista( cd_estabelecimento_p    => cd_estabelecimento_p,
                                    cd_tabela_custo_p       => cd_tabela_custo_p, 
                                    nr_seq_tabela_p         => nr_seq_tabela_p, 
                                    nm_usuario_p            => nm_usuario_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.obter_custo_tabela_preco ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) FROM PUBLIC;
