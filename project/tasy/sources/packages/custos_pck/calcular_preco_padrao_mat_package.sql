-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.calcular_preco_padrao_mat ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nm_usuario_p text, cd_tabela_componente_p bigint, cd_tabela_custo_padrao_p bigint, cd_tabela_preco_anterior_p bigint, cd_comp_perc_margem_p bigint, pr_custo_indireto_fixo_p bigint, pr_despesa_fixa_p bigint, nr_seq_tabela_p bigint) AS $body$
DECLARE


nr_nivel_estrutura_w                ficha_tecnica.nr_nivel_estrutura%type := 0;
cd_material_w                       preco_padrao_mat.cd_material%type     := 0;
qt_lote_padrao_w                    double precision := 0;
---                                                             

cd_componente_w                     componente_custo.cd_componente%type   := 0;
cd_empresa_w                        tabela_custo.cd_empresa%type;
---                                                             

pr_dvv_w                            double precision := 0;
pr_margem_lucro_w                   double precision := 0;
pr_componente_w                     double precision := 0;
---                                                             

qt_parametro_w                      double precision := 0;
vl_preco_anterior_w                 double precision := 0;
vl_Custo_Variavel_w                 double precision := 0;
vl_Custo_Direto_Fixo_w              double precision := 0;
vl_preco_calculado_w                double precision := 0;
---                                                             

dt_referencia_w                     timestamp         := clock_timestamp();
dt_atualizacao_w                    timestamp         := clock_timestamp();
ie_dvv_w                            varchar(1);
ie_tipo_componente_w                varchar(1);
ds_resultado_w                      varchar(255);
nr_seq_comp_custo_w                 bigint;
nr_seq_comp_perc_margem_w           bigint;

nr_seq_tab_material_w               bigint;
nr_seq_tabela_componente_w          bigint;
nr_seq_tabela_custo_padrao_w        bigint;
nr_seq_tabela_preco_anterior_w      bigint;
ie_calcula_conta_w                  varchar(1);
nr_fator_conversao_w                bigint;
nr_ficha_tecnica_w                  bigint;

c01 CURSOR FOR
       SELECT  cd_material,
               nr_nivel_estrutura,
               qt_lote_padrao,
               vl_custo_fixo,
               vl_custo_variavel,
               ie_calcula_conta,
               null,
               nr_ficha_tecnica
       from    custo_padrao_v
       where   cd_estabelecimento  = cd_estabelecimento_p
       and     nr_seq_tabela       = nr_seq_tabela_custo_padrao_w
       and     ie_situacao         = 'A'
       and     ie_situacao_calculo = 'C'
       and     (cd_material IS NOT NULL AND cd_material::text <> '')

union

       SELECT  a.cd_material,
               1, 1, 0,
               vl_presente,'S',
               nr_fator_conversao,
               null
       from    custo_material a
       where   a.cd_estabelecimento = cd_estabelecimento_p
       and     a.nr_seq_tabela      = nr_seq_tab_material_w
       and     a.vl_presente        > 0
       and     not exists (  select  b.cd_material
                              from    custo_padrao_v b
                              where   b.cd_estabelecimento  = cd_estabelecimento_p
                              and     b.nr_seq_tabela       = nr_seq_tabela_custo_padrao_w
                              and     b.cd_material         = a.cd_material);

c02 CURSOR FOR
       SELECT  nr_sequencia,
               cd_componente
       from    componente_custo
       where   cd_empresa  = cd_empresa_w
       and     coalesce(cd_estabelecimento,cd_estabelecimento_p)    = cd_estabelecimento_p
       and     ie_dvv      = 'S';


BEGIN

begin
select  cd_empresa
into STRICT    cd_empresa_w
from    tabela_custo
where   nr_sequencia    = nr_seq_tabela_p;
exception when others then
        cd_empresa_w    := null;
end;

select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tabela_componente_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 1;

select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tabela_custo_padrao_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 2;

select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tabela_preco_anterior_w
from    tabela_parametro
where   nr_seq_tabela       = nr_seq_tabela_p
and     nr_seq_parametro    = 3;


Select  max(nr_seq_tabela_param)
into STRICT    nr_seq_tab_material_w
from    tabela_parametro
where   nr_seq_tabela   = nr_seq_tabela_p
and     nr_seq_parametro   = 6;

delete from preco_padrao_mat
where  cd_estabelecimento  = cd_estabelecimento_p
and    nr_seq_tabela       = nr_seq_tabela_p;

open c01;
loop
fetch c01 into
    cd_material_w,
    nr_nivel_estrutura_w,
    qt_lote_padrao_w,
    vl_custo_direto_fixo_w,
    vl_custo_variavel_w,
    ie_calcula_conta_w,
    nr_fator_conversao_w,
    nr_ficha_tecnica_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
    begin

    obter_valor_componente( cd_estabelecimento_p,
                            cd_comp_perc_margem_p, 
                            null, 
                            cd_tabela_componente_p,
                            0,
                            cd_material_w, 
                            0, 
                            0, 
                            dt_referencia_w,
                            pr_margem_lucro_w, 
                            ie_dvv_w, 
                            ie_tipo_componente_w, 
                            ds_resultado_w,0);

    pr_dvv_w            := 0;
    open c02;
    loop
    fetch c02 into
        nr_seq_comp_custo_w,
        cd_componente_w;
    EXIT WHEN NOT FOUND; /* apply on c02 */
        begin
        obter_valor_componente( cd_estabelecimento_p,
                                nr_seq_comp_custo_w,
                                null, 
                                cd_tabela_componente_p,
                                0, 
                                cd_material_w, 
                                0, 
                                0, 
                                dt_referencia_w,
                                pr_componente_w, 
                                ie_dvv_w, 
                                ie_tipo_componente_w, 
                                ds_resultado_w,0);
        if (pr_componente_w > 0)   then
                pr_dvv_w    := pr_dvv_w + pr_componente_w;
        end if;
        end;
    end loop;
    close c02;

    begin
    select  qt_parametro,
            CASE WHEN vl_preco_tabela=0 THEN  vl_preco_calculado  ELSE vl_preco_tabela END
    into STRICT    qt_parametro_w,
            vl_preco_anterior_w
    from    preco_padrao_mat
    where   nr_seq_tabela    = nr_seq_tabela_preco_anterior_w
    and     cd_material      = cd_material_w;
    exception when others then
              begin
              qt_parametro_w          := 1;
              vl_preco_anterior_w     := 0;
              end;
    end;

    vl_preco_calculado_w            :=   dividir(((vl_custo_variavel_w + vl_custo_direto_fixo_w) *
                                                (1 + dividir(pr_custo_indireto_fixo_p,100) + dividir(pr_despesa_fixa_p,100))) ,
                                                (1 - dividir(pr_dvv_w ,100) - dividir(pr_margem_lucro_w , 100)));


    if     (nr_fator_conversao_w IS NOT NULL AND nr_fator_conversao_w::text <> '' AND nr_fator_conversao_w <> 0)then
           vl_preco_calculado_w  := dividir(vl_preco_calculado_w,nr_fator_conversao_w);
           vl_custo_variavel_w   := dividir(vl_custo_variavel_w,nr_fator_conversao_w);
    end if;


    insert into Preco_padrao_mat(cd_estabelecimento,
            cd_tabela_custo, 
            cd_material,
            nm_usuario, 
            dt_atualizacao, 
            qt_parametro, 
            pr_dvv, 
            pr_despesa_fixa,
            pr_custo_indireto_fixo, 
            pr_margem_lucro, 
            vl_custo_variavel,
            vl_custo_direto_fixo, 
            vl_preco_calculado, 
            vl_preco_tabela,
            vl_preco_tabela_anterior, 
            nr_seq_tabela,
            ie_calcula_conta,
            nm_usuario_nrec,
            dt_atualizacao_nrec, 
            nr_ficha_tecnica)
    values ( cd_estabelecimento_p, 
            cd_tabela_custo_p, 
            cd_material_w,
            nm_usuario_p, 
            dt_atualizacao_w, 
            qt_parametro_w, 
            pr_dvv_w, 
            pr_despesa_fixa_p,
            pr_custo_indireto_fixo_p, 
            pr_margem_lucro_w, 
            vl_custo_variavel_w,
            vl_custo_direto_fixo_w,
            vl_preco_calculado_w, 
            0, 
            vl_preco_anterior_w, 
            nr_seq_tabela_p,
            ie_calcula_conta_w,
            nm_usuario_p,
            dt_atualizacao_w, 
            nr_ficha_tecnica_w);

    end;
    end loop;
    close c01;
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.calcular_preco_padrao_mat ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nm_usuario_p text, cd_tabela_componente_p bigint, cd_tabela_custo_padrao_p bigint, cd_tabela_preco_anterior_p bigint, cd_comp_perc_margem_p bigint, pr_custo_indireto_fixo_p bigint, pr_despesa_fixa_p bigint, nr_seq_tabela_p bigint) FROM PUBLIC;
