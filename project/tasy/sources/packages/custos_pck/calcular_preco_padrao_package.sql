-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.calcular_preco_padrao ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, pr_despesa_fixa_p bigint, pr_custo_fixo_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_origem_proced_w              ficha_tecnica_componente.ie_origem_proced%type := 0;
cd_tabela_custo_padrao_w        tabela_parametro.cd_tabela_parametro%type      := 0;
cd_tabela_componente_w          tabela_parametro.cd_tabela_parametro%type      := 0;
cd_tabela_preco_anterior_w      tabela_parametro.cd_tabela_parametro%type      := 0;
cd_comp_custo_ind_fixo_w        parametro_custo.cd_comp_custo_ind_fixo%type    := 0;
cd_comp_desp_fixas_w            tabela_parametro.cd_comp_parametro%type        := 0;
nr_seq_comp_perc_margem_w       componente_custo.nr_sequencia%type             := 0;
cd_componente_w                 componente_custo.cd_componente%type            := 0;
nr_seq_comp_custo_w             bigint;

pr_custo_indireto_fixo_w        double precision    := 0;
pr_despesa_fixa_w               double precision    := 0;
pr_dvv_w                        double precision    := 0;
pr_margem_lucro_w               double precision    := 0;
pr_componente_w                 double precision    := 0;
dt_atualizacao_w                timestamp            := clock_timestamp();
dt_referencia_w                 timestamp            := clock_timestamp();
ie_dvv_w                        varchar(1);
ie_tipo_componente_w            varchar(1);
ds_resultado_w                  varchar(255);
qt_contador_w                   bigint      := 0;
ie_atualizar_preco_final_w      varchar(1);

nr_seq_tabela_custo_padrao_w    tabela_parametro.nr_seq_tabela_param%type     := 0;
nr_seq_tabela_componente_w      tabela_parametro.nr_seq_tabela_param%type     := 0;
nr_seq_tabela_preco_anterior_w  tabela_parametro.nr_seq_tabela_param%type     := 0;

cd_estabelecimento_w            tabela_custo.cd_estabelecimento%type;

c00 CURSOR FOR
       SELECT  distinct cd_estabelecimento
       from    tabela_custo_acesso_v tca
       where   tca.nr_sequencia    = nr_seq_tabela_p;


BEGIN

qt_contador_w   := qt_contador_w + 1;
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(300651),'CALCULAR_PRECO_PADRAO',qt_contador_w);

open c00;
loop
fetch c00 into
    cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
    begin
    select  max(cd_tabela_parametro),
            max(nr_seq_tabela_param)
    into STRICT    cd_tabela_componente_w,
            nr_seq_tabela_componente_w
    from    tabela_parametro
    where   nr_seq_tabela       = nr_seq_tabela_p
    and     nr_seq_parametro    = 1;

    select  max(cd_tabela_parametro),
            max(nr_seq_tabela_param)
    into STRICT    cd_tabela_custo_padrao_w,
            nr_seq_tabela_custo_padrao_w
    from    tabela_parametro
    where   nr_seq_tabela       = nr_seq_tabela_p
    and     nr_seq_parametro    = 2;

    select  max(cd_tabela_parametro),
            max(nr_seq_tabela_param)
    into STRICT    cd_tabela_preco_anterior_w,
            nr_seq_tabela_preco_anterior_w
    from    tabela_parametro
    where   nr_seq_tabela       = nr_seq_tabela_p
    and     nr_seq_parametro    = 3;

    select  cd_comp_custo_ind_fixo,
            cd_comp_desp_fixas,
            cd_comp_perc_margem
    into STRICT    cd_comp_custo_ind_fixo_w,
            cd_comp_desp_fixas_w,
            nr_seq_comp_perc_margem_w
    from    parametro_custo
    where   cd_estabelecimento = cd_estabelecimento_w;

    exception when others then
              CALL wheb_mensagem_pck.exibir_mensagem_abort(1115315);
    end;

    pr_custo_indireto_fixo_w    := 0;

    if (pr_custo_fixo_p = 0) and (coalesce(cd_comp_custo_ind_fixo_w,0) > 0) then

            select  max(nr_sequencia)
            into STRICT    nr_seq_comp_custo_w
            from    componente_custo
            where   coalesce(cd_estabelecimento,cd_estabelecimento_w)    = cd_estabelecimento_W
            and     cd_componente   = cd_comp_custo_ind_fixo_w
            and     cd_empresa      =  obter_empresa_estab(cd_estabelecimento_w);

            obter_valor_componente( cd_estabelecimento_w,
                                    nr_seq_comp_custo_w,
                                    cd_comp_custo_ind_fixo_w,
                                    cd_tabela_componente_w,
                                    0,
                                    0,
                                    0,
                                    ie_origem_proced_w,
                                    dt_referencia_w,
                                    pr_custo_indireto_fixo_w,
                                    ie_dvv_w,
                                    ie_tipo_componente_w,
                                    ds_resultado_w,
                                    0);
    else
            pr_custo_indireto_fixo_w := pr_custo_fixo_p;
    end if;

    pr_despesa_fixa_w       := 0;

    if (pr_despesa_fixa_p = 0) and (coalesce(cd_comp_desp_fixas_w,0) > 0) then

            select  max(nr_sequencia)
            into STRICT    nr_seq_comp_custo_w
            from    componente_custo
            where   coalesce(cd_estabelecimento,cd_estabelecimento_w)    = cd_estabelecimento_w
            and cd_componente   = cd_comp_desp_fixas_w
            and cd_empresa  =  obter_empresa_estab(cd_estabelecimento_w);

            obter_valor_componente( cd_estabelecimento_w,
                                    nr_seq_comp_custo_w,
                                    cd_comp_desp_fixas_w,
                                    cd_tabela_componente_w,
                                    0,
                                    0,
                                    0,
                                    ie_origem_proced_w,
                                    dt_referencia_w,
                                    pr_despesa_fixa_w,
                                    ie_dvv_w,
                                    ie_tipo_componente_w,
                                    ds_resultado_w,
                                    0);
    else
            pr_despesa_fixa_w := pr_Despesa_fixa_p;
    end if;

    update  tabela_parametro
    set     dt_parametro        = dt_referencia_w,
            cd_comp_parametro   = cd_comp_custo_ind_fixo_w,
            qt_parametro        = pr_custo_indireto_fixo_w
    where   cd_estabelecimento  = cd_estabelecimento_w
    and     nr_seq_tabela       = nr_seq_tabela_p
    and     nr_seq_parametro    = 4;

    update  tabela_parametro
    set     dt_parametro        = dt_referencia_w,
            cd_comp_parametro   = cd_comp_desp_fixas_w,
            qt_parametro        = pr_despesa_fixa_w
    where   cd_estabelecimento  = cd_estabelecimento_w
    and     nr_seq_tabela       = nr_seq_tabela_p
    and     nr_seq_parametro    = 5;

    qt_contador_w   := qt_contador_w + 1;
    CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(300652),'CALCULAR_PRECO_PADRAO',qt_contador_w);

    CALL custos_pck.calcular_preco_padrao_proc( cd_estabelecimento_p           => cd_estabelecimento_w,
                                           cd_tabela_custo_p              => cd_tabela_custo_p,
                                           nm_usuario_p                   => nm_usuario_p,
                                           cd_tabela_componente_p         => cd_tabela_componente_w,
                                           cd_tabela_custo_padrao_p       => cd_tabela_custo_padrao_w,
                                           cd_tabela_preco_anterior_p     => cd_tabela_Preco_Anterior_w,
                                           cd_comp_perc_margem_p          => nr_seq_comp_perc_margem_w,
                                           pr_custo_indireto_fixo_p       => pr_custo_indireto_fixo_w,
                                           pr_despesa_fixa_p              => pr_Despesa_fixa_w,
                                           nr_seq_tabela_p                => nr_seq_tabela_p);

    qt_contador_w   := qt_contador_w + 1;
    CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(300653),'CALCULAR_PRECO_PADRAO',qt_contador_w);

    CALL custos_pck.calcular_preco_padrao_mat(  cd_estabelecimento_p           => cd_estabelecimento_w,
                                           cd_tabela_custo_p              => cd_tabela_custo_p,
                                           nm_usuario_p                   => nm_usuario_p,
                                           cd_tabela_componente_p         => cd_tabela_componente_w,
                                           cd_tabela_custo_padrao_p       => cd_tabela_custo_padrao_w,
                                           cd_tabela_preco_anterior_p     => cd_tabela_Preco_Anterior_w,
                                           cd_comp_perc_margem_p          => nr_seq_comp_perc_margem_w,
                                           pr_custo_indireto_fixo_p       => pr_custo_indireto_fixo_w,
                                           pr_despesa_fixa_p              => pr_despesa_fixa_w,
                                           nr_seq_tabela_p                => nr_seq_tabela_p);

    ie_atualizar_preco_final_w  := coalesce(obter_valor_param_usuario(927, 59, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

    if (ie_atualizar_preco_final_w = 'S') then
           CALL custos_pck.cus_atualizar_preco_final_mat(  cd_estabelecimento_p  => cd_estabelecimento_w,
                                                      cd_tabela_custo_p     => cd_tabela_custo_p, 
                                                      nr_seq_tabela_p       => nr_seq_tabela_p, 
                                                      nm_usuario_p          => nm_usuario_p);
           CALL custos_pck.cus_atualizar_preco_final_proc( cd_estabelecimento_p  => cd_estabelecimento_w,
                                                      cd_tabela_custo_p     => cd_tabela_custo_p, 
                                                      nr_seq_tabela_p       => nr_seq_tabela_p, 
                                                      nm_usuario_p          => nm_usuario_p);
    end if;

end loop;
close c00;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.calcular_preco_padrao ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, pr_despesa_fixa_p bigint, pr_custo_fixo_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) FROM PUBLIC;
