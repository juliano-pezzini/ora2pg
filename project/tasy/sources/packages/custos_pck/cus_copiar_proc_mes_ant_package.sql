-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE custos_pck.cus_copiar_proc_mes_ant ( cd_estabelecimento_p bigint, cd_tabela_origem_p bigint, cd_tabela_destino_p bigint, nm_usuario_p text, nr_seq_tabela_p bigint, nr_seq_tabela_origem_p bigint) AS $body$
DECLARE


cd_estabelecimento_w      smallint;
cd_procedimento_w         bigint;
ie_origem_proced_w        bigint;
qt_dias_prazo_w           double precision;
vl_cotado_w               double precision;
vl_presente_w             double precision;
ds_observacao_w           varchar(2000);


c01 CURSOR(
          nr_seq_tabela_origem_pc custo_procedimento.nr_seq_tabela%type
          ) FOR
          SELECT  x.cd_estabelecimento,
                  x.cd_procedimento,
                  x.ie_origem_proced,
                  x.qt_dias_prazo,
                  x.vl_cotado,
                  x.vl_presente,
                  x.nr_seq_proc_interno,
                  x.ds_observacao,
                  x.nr_seq_exame,
                  nextval('custo_procedimento_seq') nr_seq_custo
          from (   SELECT  a.cd_estabelecimento,
                          a.cd_procedimento,
                          a.ie_origem_proced,
                          a.qt_dias_prazo,
                          a.vl_cotado,
                          a.vl_presente,
                          a.nr_seq_proc_interno,
                          a.ds_observacao,
                          a.nr_seq_exame
                  from    custo_procedimento a,
                          tabela_custo b
                  where   a.nr_seq_tabela = b.nr_sequencia
                  and     a.nr_seq_tabela = nr_seq_tabela_origem_pc)
          x;

type vetor_c01 is table of c01%rowtype index by integer;
v_c01_w    vetor_c01;

type vetor_custo_procedimento is table of custo_procedimento%rowtype index by integer;
v_custo_procedimento_w  vetor_custo_procedimento;

BEGIN

delete   from custo_procedimento
where    nr_seq_tabela  = nr_seq_tabela_p;

open c01(
        nr_seq_tabela_origem_pc => nr_seq_tabela_origem_p
        );
        loop fetch c01 bulk collect into v_c01_w limit 1000;
        exit when v_c01_w.count = 0;
             for i in v_c01_w.first .. v_c01_w.last loop
        
             if     ((v_c01_w[i]coalesce(.cd_procedimento::text, '') = '') and ((v_c01_w[i](.nr_seq_proc_interno IS NOT NULL AND .nr_seq_proc_interno::text <> '')) 
                    or (v_c01_w[i](.nr_seq_exame IS NOT NULL AND .nr_seq_exame::text <> '')))) then
                    v_c01_w[i].ie_origem_proced := null;
             end if;

             v_custo_procedimento_w[i].nr_sequencia          := v_c01_w[i].nr_seq_custo;
             v_custo_procedimento_w[i].cd_estabelecimento    := v_c01_w[i].cd_estabelecimento;
             v_custo_procedimento_w[i].cd_tabela_custo       := cd_tabela_destino_p;
             v_custo_procedimento_w[i].cd_procedimento       := v_c01_w[i].cd_procedimento;
             v_custo_procedimento_w[i].ie_origem_proced      := v_c01_w[i].ie_origem_proced;
             v_custo_procedimento_w[i].nm_usuario            := nm_usuario_p;
             v_custo_procedimento_w[i].dt_atualizacao        := clock_timestamp();
             v_custo_procedimento_w[i].qt_dias_prazo         := v_c01_w[i].qt_dias_prazo;
             v_custo_procedimento_w[i].vl_cotado             := v_c01_w[i].vl_cotado;
             v_custo_procedimento_w[i].vl_presente           := v_c01_w[i].vl_presente;
             v_custo_procedimento_w[i].nr_seq_proc_interno   := v_c01_w[i].nr_seq_proc_interno;
             v_custo_procedimento_w[i].ds_observacao         := v_c01_w[i].ds_observacao;
             v_custo_procedimento_w[i].nr_seq_tabela         := nr_seq_tabela_p;
             v_custo_procedimento_w[i].nr_seq_exame          := v_c01_w[i].nr_seq_exame;

             end loop;
             forall indice in v_custo_procedimento_w.first .. v_custo_procedimento_w.last
             insert into custo_procedimento values v_custo_procedimento_w(indice);
             commit;
             v_custo_procedimento_w.delete;
        end loop;
close c01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE custos_pck.cus_copiar_proc_mes_ant ( cd_estabelecimento_p bigint, cd_tabela_origem_p bigint, cd_tabela_destino_p bigint, nm_usuario_p text, nr_seq_tabela_p bigint, nr_seq_tabela_origem_p bigint) FROM PUBLIC;
