-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



	/* ------------------------- Etapas --------------------------- */

CREATE OR REPLACE PROCEDURE panorama_leito_pck.gerar_w_pan_setor () AS $body$
DECLARE

        ds_departamento_w	varchar(255);
        qt_reg_w			bigint;

        c_setor CURSOR FOR
        SELECT	distinct
                u.cd_setor_atendimento,
                obter_se_sem_acomodacao(u.cd_tipo_acomodacao) ie_sem_acomodacao,
                s.cd_classif_setor,
				s.cd_estabelecimento
        from	unidade_atendimento u
                left join atendimento_paciente a on a.nr_atendimento = u.nr_atendimento
                left join pessoa_fisica p on p.cd_pessoa_fisica = a.cd_pessoa_fisica,
                setor_atendimento s
        where	s.cd_setor_atendimento = u.cd_setor_atendimento
        and		u.ie_situacao = 'A';

        c_departamento_setor CURSOR(cd_setor_atendimento_pc	bigint,
                                    ie_sem_acomodacao_pc text) FOR
        /* Gerar um registro para cada departamento vinculado */

        SELECT	a.ds_setor_atendimento,
                c.cd_departamento,
                c.ds_departamento,
                'N' ie_emprestado
        from	departamento_medico c,
                departamento_setor b,
                setor_atendimento a
        where	a.cd_setor_atendimento = b.cd_setor_atendimento
        and		b.cd_departamento = c.cd_departamento
        and		a.cd_setor_atendimento = cd_setor_atendimento_pc

union all

        /* Gerar um registro para os setores que nao possuem associacao com departamento */

        SELECT	a.ds_setor_atendimento,
                null cd_departamento,
                null ds_departamento,
                'N' ie_emprestado
        from	setor_atendimento a
        where	a.cd_setor_atendimento	= cd_setor_atendimento_pc
        and		not exists (select	1
                            from	departamento_setor x
                            where	x.cd_setor_atendimento	= a.cd_setor_atendimento)
        
union all

        /* Gerar um registro para os setores que possuem algum leito emprestado */

        select	distinct
                s.ds_setor_atendimento,
                obter_departamento_data(u.nr_atendimento,clock_timestamp()) cd_departamento,
                null ds_departamento,
                'S' ie_emprestado
        from	unidade_atendimento u,
                setor_atendimento s
        where	s.cd_setor_atendimento = u.cd_setor_atendimento
        and		u.ie_situacao = 'A'
        and		(u.nr_atendimento IS NOT NULL AND u.nr_atendimento::text <> '')
        and		u.cd_setor_atendimento = cd_setor_atendimento_pc
        and		ie_sem_acomodacao_pc = 'N'
        and		obter_departamento_data(u.nr_atendimento,clock_timestamp()) is not null
        and		not exists (select	1
                            from	departamento_setor x
                            where	x.cd_setor_atendimento	= s.cd_setor_atendimento
                            and		x.cd_departamento	= obter_departamento_data(u.nr_atendimento,clock_timestamp()));
	
BEGIN
		if (current_setting('panorama_leito_pck.ie_gerar_log')::varchar(1) = 'S') then
			insert into w_panorama_etapa(ie_panorama_conc,
				ie_etapa,
				dt_inicio_etapa,
				dt_fim_etapa)
			values ('N',
				'AGR',
				clock_timestamp(),
				null);

			commit;
		end if;

		for r_c_setor in c_setor loop
            for r_c_departamento_setor in c_departamento_setor(r_c_setor.cd_setor_atendimento,r_c_setor.ie_sem_acomodacao) loop

                if (coalesce(r_c_departamento_setor.ds_departamento::text, '') = '') then
                    ds_departamento_w	:= OBTER_NOME_DEPARTAMENTO_MEDICO(r_c_departamento_setor.cd_departamento);
                else
                    ds_departamento_w	:= r_c_departamento_setor.ds_departamento;
                end if;

                insert into w_pan_agrup_leito(cd_setor_atendimento,
                    ds_setor_atendimento,
                    cd_departamento,
                    ds_departamento,
                    ie_pronto_atendimento,
                    cd_exp_emprestado,
                    nr_seq_texto_emprestado,
                    ie_sem_acomodacao,
                    cd_classif_setor,
                    ie_emprestado,
                    ie_concluido,
					cd_estabelecimento)
                values (r_c_setor.cd_setor_atendimento,
                    r_c_departamento_setor.ds_setor_atendimento,
                    r_c_departamento_setor.cd_departamento,
                    ds_departamento_w,
                    null,
                    null,
                    null,
                    r_c_setor.ie_sem_acomodacao,
                    r_c_setor.cd_classif_setor,
                    r_c_departamento_setor.ie_emprestado,
                    'N',
					r_c_setor.cd_estabelecimento);

            end loop;
        end loop;

        commit;
		if (current_setting('panorama_leito_pck.ie_gerar_log')::varchar(1) = 'S') then
			update	w_panorama_etapa
			set		dt_fim_etapa = clock_timestamp()
			where	ie_etapa = 'AGR'
			and		coalesce(dt_fim_etapa::text, '') = '';

			commit;
		end if;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE panorama_leito_pck.gerar_w_pan_setor () FROM PUBLIC;
