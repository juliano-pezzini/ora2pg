-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_pp_filtro_rec_glosa_pck.obter_restricao_protocolo ( nr_protocolo_prestador_p pls_pp_rp_filtro_prot.nr_protocolo_prestador%type, nr_seq_protocolo_p pls_pp_rp_filtro_prot.nr_seq_protocolo%type, nr_seq_tipo_prest_prot_p pls_pp_rp_filtro_prot.nr_seq_tipo_prest_prot%type, ie_tipo_data_ref_p pls_pp_lote.ie_tipo_dt_referencia%type, ds_campos_p out text, ds_tabela_p out text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


ds_restricao_prot_w	varchar(2500);
ds_restr_tprest_w	varchar(1000);
ds_alias_prot_w		varchar(10);
ds_alias_prot_orig_w	varchar(60);
ds_alias_res_w		varchar(10);
ds_campos_w		varchar(500);
ds_tabela_w		varchar(200);


BEGIN

ds_restricao_prot_w := null;
ds_restr_tprest_w := null;
ds_campos_w := null;
ds_tabela_w := null;
ds_alias_prot_w := pls_pp_filtro_rec_glosa_pck.obter_alias_tabela('protocolo');
ds_alias_prot_orig_w := pls_pp_filtro_rec_glosa_pck.obter_alias_tabela('protocolo_original');
ds_alias_res_w := pls_pp_filtro_rec_glosa_pck.obter_alias_tabela('resumo');

-- lote do prestador

if (nr_protocolo_prestador_p IS NOT NULL AND nr_protocolo_prestador_p::text <> '') then
	ds_restricao_prot_w := ds_restricao_prot_w || ' and ' || ds_alias_prot_orig_w || '.nr_protocolo_prestador = :nr_protocolo_prestador_pc ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_protocolo_prestador_pc', nr_protocolo_prestador_p, valor_bind_p);
end if;

-- sequencia do protocolo

if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
	ds_restricao_prot_w := ds_restricao_prot_w || ' and ' || ds_alias_prot_orig_w || '.nr_sequencia = :nr_seq_protocolo_pc ' || pls_util_pck.enter_w;
	valor_bind_p := sql_pck.bind_variable(':nr_seq_protocolo_pc', nr_seq_protocolo_p, valor_bind_p);
end if;

-- tipo do prestador do protocolo

if (nr_seq_tipo_prest_prot_p IS NOT NULL AND nr_seq_tipo_prest_prot_p::text <> '') then

	-- filtro da data de vigencia para tipo de prestador

	-- data de competencia do protocolo

	if (ie_tipo_data_ref_p = '1') then
		ds_restr_tprest_w := ds_restr_tprest_w || ' and ' || ds_alias_prot_w || '.dt_competencia_lote between pretip.dt_inicio_vigencia_ref and pretip.dt_fim_vigencia_ref';

	-- data de liberacao de pagamento do protocolo

	elsif (ie_tipo_data_ref_p = '2') then
		ds_restr_tprest_w := ds_restr_tprest_w || ' and ' || ds_alias_prot_w || '.dt_liberacao_pag between pretip.dt_inicio_vigencia_ref and pretip.dt_fim_vigencia_ref';
		
	-- data de competencia do resumo de conta medica

	elsif (ie_tipo_data_ref_p = '3') then
		ds_restr_tprest_w := ds_restr_tprest_w || ' and ' || ds_alias_res_w || '.dt_competencia_pgto between pretip.dt_inicio_vigencia_ref and pretip.dt_fim_vigencia_ref';	
	end if;
	
	ds_restr_tprest_w := ds_restr_tprest_w || pls_util_pck.enter_w;
	
	-- faz exists com a pls_prestador_tipo_v para verificar os tipos do prestador

	ds_restricao_prot_w	:= ds_restricao_prot_w ||
				' and	exists	(select	1 ' ||
				'		from	pls_prestador_tipo pretip' || pls_util_pck.enter_w ||
				'		where	pretip.nr_seq_prestador = ' || ds_alias_prot_w || '.nr_seq_prestador' || pls_util_pck.enter_w ||
						ds_restr_tprest_w ||
				'		and	pretip.nr_seq_tipo = :nr_seq_tipo_prestador_pc' || pls_util_pck.enter_w ||
				'		union all' || pls_util_pck.enter_w ||
				'		select	1 ' || pls_util_pck.enter_w ||
				'		from	pls_prestador pretip' || pls_util_pck.enter_w ||
				'		where	pretip.nr_sequencia = ' || ds_alias_prot_w || '.nr_seq_prestador' || pls_util_pck.enter_w ||
				'		and	pretip.nr_seq_tipo_prestador = :nr_seq_tipo_prestador_pc)' || pls_util_pck.enter_w;

	valor_bind_p := sql_pck.bind_variable(':nr_seq_tipo_prestador_pc', nr_seq_tipo_prest_prot_p, valor_bind_p);
end if;

ds_campos_p := ds_campos_w;
ds_tabela_p := ds_tabela_w;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_pp_filtro_rec_glosa_pck.obter_restricao_protocolo ( nr_protocolo_prestador_p pls_pp_rp_filtro_prot.nr_protocolo_prestador%type, nr_seq_protocolo_p pls_pp_rp_filtro_prot.nr_seq_protocolo%type, nr_seq_tipo_prest_prot_p pls_pp_rp_filtro_prot.nr_seq_tipo_prest_prot%type, ie_tipo_data_ref_p pls_pp_lote.ie_tipo_dt_referencia%type, ds_campos_p out text, ds_tabela_p out text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
