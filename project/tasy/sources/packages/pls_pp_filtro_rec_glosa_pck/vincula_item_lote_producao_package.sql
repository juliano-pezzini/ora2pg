-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_filtro_rec_glosa_pck.vincula_item_lote_producao ( nr_id_transacao_p pls_pp_cta_rec_selecao.nr_id_transacao%type, nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_regra_periodo_p pls_pp_lote.nr_seq_regra_periodo%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
tb_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_seq_resumo_w		pls_util_cta_pck.t_number_table;
ie_tipo_registro_w	pls_pp_cta_rec_selecao.ie_tipo_registro%type;

tb_seq_prestador_w	pls_util_cta_pck.t_number_table;
tb_seq_evento_w		pls_util_cta_pck.t_number_table;
tb_vl_liberado_w	pls_util_cta_pck.t_number_table;
tb_vl_glosa_w		pls_util_cta_pck.t_number_table;
tb_vl_liquido_w		pls_util_cta_pck.t_number_table;
tb_dt_item_w		pls_util_cta_pck.t_date_table;
tb_ie_tipo_contrat_w	pls_util_cta_pck.t_varchar2_table_10;

-- todos os filtros bons que foram processados no lote

c_filtro CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
			nr_seq_regra_periodo_pc	pls_pp_lote.nr_seq_regra_periodo%type) FOR
	SELECT	a.nr_sequencia nr_seq_filtro,
		a.ie_filtro_procedimento,
		a.ie_filtro_material
	from	pls_pp_rp_cta_filtro a
	where	a.nr_seq_regra_periodo = nr_seq_regra_periodo_pc
	and	a.ie_tipo_filtro = 'R'
	and	a.ie_excecao = 'N'
	and	a.ie_situacao = 'A'
	
union all

	SELECT	a.nr_sequencia nr_seq_filtro,
		a.ie_filtro_procedimento,
		a.ie_filtro_material
	from	pls_pp_rp_cta_filtro a
	where	a.nr_seq_lote = nr_seq_lote_pc
	and	a.ie_tipo_filtro = 'R'
	and	a.ie_excecao = 'N'
	and	a.ie_situacao = 'A';
	
-- todos os procedimentos/materiais selecionados por filtros do cursor c_filtro

c_proc_mat CURSOR(	nr_id_transacao_pc	pls_pp_cta_rec_selecao.nr_id_transacao%type,
			nr_seq_filtro_pc	pls_pp_cta_rec_selecao.nr_seq_filtro%type,
			ie_tipo_registro_pc	pls_pp_cta_rec_selecao.ie_tipo_registro%type) FOR
	SELECT	distinct a.nr_seq_resumo_rec
	from	pls_pp_cta_rec_selecao a
	where	a.nr_id_transacao = nr_id_transacao_pc
	and	a.nr_seq_filtro = nr_seq_filtro_pc
	and	a.ie_tipo_registro = ie_tipo_registro_pc
	and	a.ie_valido = 'S'
	
union all

	SELECT	distinct a.nr_seq_resumo_rec
	from	pls_pp_cta_rec_selecao a
	where	a.nr_id_transacao = nr_id_transacao_pc
	and	a.nr_seq_filtro = nr_seq_filtro_pc
	and	coalesce(ie_tipo_registro_pc::text, '') = ''
	and	a.ie_valido = 'S';

-- seleciona tudo o que foi vinculado ao lote para gravar em tabela especifica

c_pp_item CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type) FOR
	SELECT	a.nr_seq_prestador_pgto,
		a.nr_seq_pp_evento,
		a.nr_sequencia nr_seq_resumo_rec,
		coalesce(a.vl_liberado, 0) vl_liberado,
		coalesce(a.vl_glosa, 0) vl_glosa,
		coalesce(a.vl_liberado, 0) vl_liquido,
		a.dt_competencia_pgto,
		(SELECT	max(b.ie_tipo_contratacao)
		 from	pls_conta_medica_resumo b
		 where	b.nr_seq_conta = a.nr_seq_conta
		 and	b.ie_situacao = 'A') ie_tipo_contratacao
	from 	pls_conta_rec_resumo_item a
	where 	a.nr_seq_pp_lote = nr_seq_lote_pc;

BEGIN
-- abre o cursor com todos os filtros bons

-- so devem ser selecionados registros onde o filtro bom fez a selecao

for r_c_filtro_w in c_filtro(nr_seq_lote_p, nr_seq_regra_periodo_p) loop
	
	ie_tipo_registro_w := null;
	-- para obter o tipo de registro que deve ser buscado de acordo com o filtro

	-- so existe esse caso para filtros de procedimento ou material

	-- qualquer outro caso nao filtra o tipo de registro, pois e conta e vale tudo o que foi selecionado

	if (r_c_filtro_w.ie_filtro_procedimento = 'S') then
		ie_tipo_registro_w := 'P';
	elsif (r_c_filtro_w.ie_filtro_material = 'S') then
		ie_tipo_registro_w := 'M';
	end if;

	open c_proc_mat(nr_id_transacao_p, r_c_filtro_w.nr_seq_filtro, ie_tipo_registro_w);
	loop
		fetch c_proc_mat bulk collect into tb_seq_resumo_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_seq_resumo_w.count = 0;
		
		forall i in tb_seq_resumo_w.first..tb_seq_resumo_w.last
			update	pls_conta_rec_resumo_item a
			set	a.nr_seq_pp_lote = nr_seq_lote_p
			where	a.nr_sequencia = tb_seq_resumo_w(i);
		commit;
	end loop;
	close c_proc_mat;
end loop;

-- limpa a variavel utilizadas acima

tb_seq_resumo_w.delete;

-- busca tudo o que foi gravado no processo anterior e grava na tabela pls_pp_item_lote

-- essa tabela contera todos os itens que fazem parte do lote, sendo recurso de glosa ou qualquer ocorrencia financeira

open c_pp_item(nr_seq_lote_p);
loop
	fetch c_pp_item bulk collect into 	tb_seq_prestador_w, tb_seq_evento_w, tb_seq_resumo_w,
						tb_vl_liberado_w, tb_vl_glosa_w, tb_vl_liquido_w,
						tb_dt_item_w, tb_ie_tipo_contrat_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_seq_resumo_w.count = 0;
	
	forall i in tb_seq_resumo_w.first..tb_seq_resumo_w.last
		insert into pls_pp_item_lote(
			nr_sequencia, nr_seq_lote, nr_seq_prestador,
			nr_seq_evento, nr_seq_resumo_rec,
			ie_tipo_item, vl_item, vl_glosa,
			dt_item, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, vl_liquido,
			ie_tipo_contratacao, ie_acao_negativo, vl_desconto_tributo,
			vl_acao_negativo, ie_cancelado, nr_seq_prestador_origem
		) values (
			nextval('pls_pp_item_lote_seq'), nr_seq_lote_p, tb_seq_prestador_w(i),
			tb_seq_evento_w(i), tb_seq_resumo_w(i),
			'8', tb_vl_liberado_w(i), tb_vl_glosa_w(i),
			tb_dt_item_w(i), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, tb_vl_liquido_w(i),
			tb_ie_tipo_contrat_w(i), 'N', 0,
			0, 'N', tb_seq_prestador_w(i)
		);
	commit;
end loop;
close c_pp_item;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_filtro_rec_glosa_pck.vincula_item_lote_producao ( nr_id_transacao_p pls_pp_cta_rec_selecao.nr_id_transacao%type, nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_regra_periodo_p pls_pp_lote.nr_seq_regra_periodo%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
