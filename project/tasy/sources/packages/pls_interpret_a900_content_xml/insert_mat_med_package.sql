-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_interpret_a900_content_xml.insert_mat_med ( reg_mat_med_aux_p reg_mat_med ) AS $body$
DECLARE


-- Variables
nr_seq_mat_med_unimed_w w_pls_material_unimed.nr_sequencia%type;
BEGIN

select  max(nr_sequencia)
into STRICT    nr_seq_mat_med_unimed_w
from	w_pls_material_unimed
where	cd_material	= reg_mat_med_aux_p.cd_mat_med_w;

-- if (    tab_mat_med_w(index_1_w).ie_tipo_ww in ('902', '905')) then
--     if (    tab_mat_med_w(index_1_w).tipoCarga = 2 and
--             tab_mat_med_w(index_1_w).ie_situacao_w = 'I' ) then
--         update  w_pls_material_unimed
--         set     dt_exclusao = reg_mat_med_aux_p.dt_exclusao_w
--         where   cd_material = reg_mat_med_aux_p.cd_mat_med_w;
--     elsif ( reg_mat_med_aux_p.ie_situacao_w = 'A') then
--         update 	w_pls_material_unimed
--         set     dt_exclusao	= null
--         where	cd_material	= reg_mat_med_aux_p.cd_mat_med_w;
--     end if;
-- end if;
if (    coalesce(nr_seq_mat_med_unimed_w::text, '') = '') then
    if (    reg_mat_med_aux_p.ie_tipo_ww in ('902', '905')) then
        insert into w_pls_material_unimed(
            nr_sequencia,				cd_material,			    cd_unidade_medida,
            ie_tipo,				    ie_situacao,			    dt_atualizacao,
            nm_usuario,				    nm_material,			    cd_cnpj,
            nm_fabricante,				nm_importador,			    nr_registro_anvisa,
            dt_validade_anvisa,			ds_motivo_ativo_inativo,    vl_fabrica,
            vl_max_consumidor,			dt_inicio_obrigatorio,		ds_material,
            ds_especialidade,			ds_classe,			        ds_apresentacao,
            vl_fator_conversao,			ie_generico,			    ds_grupo_farmacologico,
            ds_classe_farmacologico,    ds_forma_farmaceutico,		pr_icms,
            vl_pmc,					    ds_principio_ativo,		    ie_origem,
            cd_ref_material_fab,		cd_anterior_material,		cd_anterior_medicamento,
            cd_material_tuss,			tp_produto,			        tp_codificacao,
            dt_inicio_vigencia,			dt_fim_vigencia,		    dt_fim_implantacao,
            preco_unico,				ds_unidade_medida,		    ie_produto_med,
            ie_confaz,				    vl_tc,                      nm_tecnico,
            ds_observacao,              ds_equiv_tecnica )
        values (
            nextval('w_pls_material_unimed_seq'),              reg_mat_med_aux_p.cd_mat_med_w,                 coalesce(reg_mat_med_aux_p.cd_unidade_medida_w,'UND'),
            reg_mat_med_aux_p.ie_tipo_ww,				    reg_mat_med_aux_p.ie_situacao_w,			    clock_timestamp(),
            reg_mat_med_aux_p.nm_usuario_w,                 reg_mat_med_aux_p.nm_material_w,			    reg_mat_med_aux_p.cd_cnpj_w,
            reg_mat_med_aux_p.nm_fabricante_w,			    reg_mat_med_aux_p.nm_importador_w,		        reg_mat_med_aux_p.nr_registro_anvisa_w,
            reg_mat_med_aux_p.dt_validade_anvisa_w,			reg_mat_med_aux_p.ds_motivo_ativo_inativo_w,	reg_mat_med_aux_p.vl_fabrica_w,
            reg_mat_med_aux_p.vl_max_consumidor_w,			reg_mat_med_aux_p.dt_inicio_obrigatorio_w,	    reg_mat_med_aux_p.ds_material_w,
            reg_mat_med_aux_p.ds_especialidade_w,			reg_mat_med_aux_p.ds_classe_w,			        reg_mat_med_aux_p.ds_apresentacao_w,
            reg_mat_med_aux_p.vl_fator_conversao_w,			reg_mat_med_aux_p.ie_generico_w,			    reg_mat_med_aux_p.ds_grupo_farmacologico_w,
            reg_mat_med_aux_p.ds_classe_farmacologico_w,    reg_mat_med_aux_p.ds_forma_farmaceutico_w,	    reg_mat_med_aux_p.pr_icms_w,
            reg_mat_med_aux_p.vl_pmc_w,				        reg_mat_med_aux_p.ds_principio_ativo_w,		    reg_mat_med_aux_p.ie_origem_w,
            reg_mat_med_aux_p.cd_ref_material_fab_w,		reg_mat_med_aux_p.cd_anterior_material_w,		reg_mat_med_aux_p.cd_anterior_medicamento_w,
            reg_mat_med_aux_p.cd_material_tuss_w,			reg_mat_med_aux_p.tp_produto_w,			        reg_mat_med_aux_p.tp_codificacao_w,
            reg_mat_med_aux_p.dt_inicio_vigencia_w,			reg_mat_med_aux_p.dt_fim_vigencia_w,		    reg_mat_med_aux_p.dt_fim_implantacao_w,
            reg_mat_med_aux_p.vl_preco_unico_w,			    reg_mat_med_aux_p.ds_unidade_medida_w,		    reg_mat_med_aux_p.ie_produto_med_w,
            reg_mat_med_aux_p.ie_confaz_w,				    reg_mat_med_aux_p.vl_tc_w,                      reg_mat_med_aux_p.nm_tecnico_w,
            reg_mat_med_aux_p.ds_observacao_w,              reg_mat_med_aux_p.ds_equiv_tecnica_w )
        returning nr_sequencia into nr_seq_mat_med_unimed_w;
    end if;
else
    update  w_pls_material_unimed
    set nm_usuario		        = reg_mat_med_aux_p.nm_usuario_w,		
        dt_atualizacao		    = clock_timestamp(),
        cd_cnpj			        = reg_mat_med_aux_p.cd_cnpj_w,
        cd_material		        = reg_mat_med_aux_p.cd_mat_med_w,
        cd_unidade_medida	    = coalesce(reg_mat_med_aux_p.cd_unidade_medida_w,'UND'),
        ds_motivo_ativo_inativo	= reg_mat_med_aux_p.ds_motivo_ativo_inativo_w,		
        dt_inicio_obrigatorio	= reg_mat_med_aux_p.dt_inicio_obrigatorio_w,
        dt_validade_anvisa	    = reg_mat_med_aux_p.dt_validade_anvisa_w,
        ie_generico		        = reg_mat_med_aux_p.ie_generico_w,
        ie_origem		        = reg_mat_med_aux_p.ie_origem_w,
        ie_situacao		        = reg_mat_med_aux_p.ie_situacao_w,
        ie_tipo			        = reg_mat_med_aux_p.ie_tipo_ww,
        nm_importador		    = reg_mat_med_aux_p.nm_importador_w,
        nr_registro_anvisa	    = reg_mat_med_aux_p.nr_registro_anvisa_w,			
        vl_fabrica		        = reg_mat_med_aux_p.vl_fabrica_w,
        vl_fator_conversao	    = reg_mat_med_aux_p.vl_fator_conversao_w,
        vl_max_consumidor	    = reg_mat_med_aux_p.vl_max_consumidor_w,
        pr_icms			        = reg_mat_med_aux_p.pr_icms_w,
        vl_pmc			        = reg_mat_med_aux_p.vl_pmc_w,
        dt_exclusao		        = reg_mat_med_aux_p.dt_exclusao_w,
        cd_ref_material_fab	    = reg_mat_med_aux_p.cd_ref_material_fab_w,
        cd_anterior_material	= coalesce(reg_mat_med_aux_p.cd_anterior_material_w,cd_anterior_material),
        cd_anterior_medicamento = coalesce(reg_mat_med_aux_p.cd_anterior_medicamento_w,cd_anterior_medicamento),
        cd_material_tuss	    = reg_mat_med_aux_p.cd_material_tuss_w,
        tp_produto		        = reg_mat_med_aux_p.tp_produto_w,
        tp_codificacao		    = reg_mat_med_aux_p.tp_codificacao_w,
        dt_inicio_vigencia	    = reg_mat_med_aux_p.dt_inicio_vigencia_w,
        dt_fim_vigencia		    = reg_mat_med_aux_p.dt_fim_vigencia_w,
        dt_fim_implantacao	    = reg_mat_med_aux_p.dt_fim_implantacao_w,
        preco_unico		        = reg_mat_med_aux_p.vl_preco_unico_w,
        ds_unidade_medida	    = reg_mat_med_aux_p.ds_unidade_medida_w,
        ie_produto_med		    = reg_mat_med_aux_p.ie_produto_med_w,
        ie_confaz		        = reg_mat_med_aux_p.ie_confaz_w
    where   cd_material		    = reg_mat_med_aux_p.cd_mat_med_w;
end if;

if (nr_seq_mat_med_unimed_w IS NOT NULL AND nr_seq_mat_med_unimed_w::text <> '') then
    if (    reg_mat_med_aux_p.mat_simpro_w.count > 0 ) then
        for index_1_w in reg_mat_med_aux_p.mat_simpro_w.first .. reg_mat_med_aux_p.mat_simpro_w.last loop
            CALL pls_interpret_a900_content_xml.insert_simpro( reg_mat_med_aux_p.mat_simpro_w(index_1_w),
                            nr_seq_mat_med_unimed_w );
        end loop;
    end if;

    if (    reg_mat_med_aux_p.med_icms_w.count > 0 ) then
        for index_1_w in reg_mat_med_aux_p.med_icms_w.first .. reg_mat_med_aux_p.med_icms_w.last loop
            CALL pls_interpret_a900_content_xml.insert_icms(   reg_mat_med_aux_p.med_icms_w(index_1_w),
                            nr_seq_mat_med_unimed_w );
        end loop;
    end if;

    if (    reg_mat_med_aux_p.med_bras_w.count > 0 ) then
        for index_1_w in reg_mat_med_aux_p.med_bras_w.first .. reg_mat_med_aux_p.med_bras_w.last loop
            CALL pls_interpret_a900_content_xml.insert_brasindice( reg_mat_med_aux_p.med_bras_w(index_1_w),
                                nr_seq_mat_med_unimed_w );
        end loop;
    end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_interpret_a900_content_xml.insert_mat_med ( reg_mat_med_aux_p reg_mat_med ) FROM PUBLIC;
