-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_proc_mat_regra_pck.gera_seq_tiss_proc_princ ( nr_seq_conta_proc_princ_p pls_conta_proc_regra.nr_sequencia%type, ie_vincular_proc_princ_p text, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera um novo sequencial tiss para os itens que estiverem ligados a um proc principal

		se precisar vincular o item a um outro, tem que passar o sequencial do original
		
		Atualmente o sequencial tem que ser "reiniciado" a nivel de atendimento, a priori nao temos outra
		definiao de sua geraao da ANS, entao  utilizado o max
		
		ie_vinculo_proc_mat_p Define se o vinculo vir de um procedimento (P) ou material (M)
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionrio [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatrios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atenao: 

Alteraoes:

------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_nr_seq_conta_proc_regra_w	dbms_sql.number_table;
tb_nr_seq_item_tiss_w		dbms_sql.number_table;
tb_nr_seq_item_tiss_vinc_w	dbms_sql.number_table;
nr_seq_max_item_tiss_w		pls_conta_proc_regra.nr_seq_item_tiss%type;




c01 CURSOR(	nr_seq_conta_proc_princ_pc	pls_conta_proc_regra.nr_sequencia%type,
		ie_vincular_proc_princ_pc	text,
		nr_seq_max_item_tiss_pc		pls_conta_proc_regra.nr_seq_item_tiss%type) FOR
	SELECT	a.nr_sequencia,
		nr_seq_max_item_tiss_pc  + row_number() OVER () AS rownum,
		(	SELECT	max(x.nr_seq_item_tiss)
			from	pls_conta_proc_regra		x
			where	x.nr_sequencia			= nr_seq_conta_proc_princ_pc
			and	ie_vincular_proc_princ_pc	= 'S')
	from	pls_conta_proc_regra	a,
		pls_conta_proc		b,
		pls_conta		c
	where	b.nr_sequencia		= a.nr_sequencia
	and	c.nr_sequencia		= b.nr_seq_conta
	and	b.nr_seq_proc_princ	= nr_seq_conta_proc_princ_pc
	and	coalesce(a.nr_seq_item_tiss::text, '') = '';


BEGIN

-- carrega o maximo seq tiss do atendimento

select	max(pls_cta_proc_mat_regra_pck.get_max_seq_tiss_atend(a.nr_sequencia, a.nr_seq_segurado))
into STRICT	nr_seq_max_item_tiss_w
from	pls_conta	a
where	a.nr_sequencia	= nr_seq_conta_p;

open c01(	nr_seq_conta_proc_princ_p,
		ie_vincular_proc_princ_p,
		nr_seq_max_item_tiss_w);
loop
fetch c01 bulk collect into	tb_nr_seq_conta_proc_regra_w,
				tb_nr_seq_item_tiss_w,
				tb_nr_seq_item_tiss_vinc_w limit pls_util_pck.qt_registro_transacao_w;
exit when tb_nr_seq_conta_proc_regra_w.count = 0;

	SELECT * FROM pls_cta_proc_mat_regra_pck.grava_seq_tiss_proc(	tb_nr_seq_conta_proc_regra_w, tb_nr_seq_item_tiss_w, tb_nr_seq_item_tiss_vinc_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_conta_proc_regra_w := _ora2pg_r.tb_nr_seq_conta_proc_regra_p; tb_nr_seq_item_tiss_w := _ora2pg_r.tb_nr_seq_item_tiss_p; tb_nr_seq_item_tiss_vinc_w := _ora2pg_r.tb_nr_seq_item_tiss_vinc_p;
				
	tb_nr_seq_item_tiss_w.delete;
	tb_nr_seq_item_tiss_w.delete;
	tb_nr_seq_item_tiss_vinc_w.delete;
	
end loop;

if (c01%isopen) then

	close c01;
end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_proc_mat_regra_pck.gera_seq_tiss_proc_princ ( nr_seq_conta_proc_princ_p pls_conta_proc_regra.nr_sequencia%type, ie_vincular_proc_princ_p text, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
