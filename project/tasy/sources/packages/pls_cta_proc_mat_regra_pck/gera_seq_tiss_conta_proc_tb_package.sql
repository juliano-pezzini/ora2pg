-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_proc_tb ( tb_nr_seq_conta_p INOUT dbms_sql.number_table, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o sequencial com base no vetor de contas passado

		Vai pegar todos os procedimentos relacionados a conta que nao tem o sequencial tiss informado
		e vai gerar um novo.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao: 

Alteracoes:

------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

tb_nr_seq_conta_w	dbms_sql.number_table;

nr_seq_max_item_tiss_w	pls_conta_proc_regra.nr_seq_item_tiss_vinculo%type;


tb_nr_seq_conta_proc_regra_w	dbms_sql.number_table;
tb_nr_seq_item_tiss_w		dbms_sql.number_table;
tb_nr_seq_item_tiss_vinc_w	dbms_sql.number_table;

c01 CURSOR(	tb_nr_seq_conta_pc	pls_conta.nr_sequencia%type,
		nr_seq_max_item_tiss_pc	pls_conta_proc_regra.nr_seq_item_tiss_vinculo%type) FOR
	SELECT	c.nr_sequencia,
		coalesce(nr_seq_max_item_tiss_pc,0) + row_number() OVER () AS rownum,
		null nr_seq_item_tiss_vinc
	from	pls_conta		a,
		pls_conta_proc		b,
		pls_conta_proc_regra	c
	where	b.nr_seq_conta		= a.nr_sequencia
	and	c.nr_sequencia		= b.nr_sequencia
	and	coalesce(c.nr_seq_item_tiss::text, '') = ''
	and	a.nr_sequencia		= tb_nr_seq_conta_pc
	order by c.nr_sequencia;	

BEGIN

-- compacta para evitar numeros repetidos e processamento desnecessario

tb_nr_seq_conta_w := pls_cta_proc_mat_regra_pck.distinct_number_table(tb_nr_seq_conta_p, tb_nr_seq_conta_w);

for i in tb_nr_seq_conta_w.first..tb_nr_seq_conta_w.last loop
	
	select	max(pls_cta_proc_mat_regra_pck.get_max_seq_tiss_atend(a.nr_sequencia, a.nr_seq_segurado))
	into STRICT	nr_seq_max_item_tiss_w
	from	pls_conta	a
	where	a.nr_sequencia	= tb_nr_seq_conta_w(i);
	
	open c01(tb_nr_seq_conta_w(i), nr_seq_max_item_tiss_w);
	loop
	fetch c01 bulk collect into	tb_nr_seq_conta_proc_regra_w,
					tb_nr_seq_item_tiss_w,
					tb_nr_seq_item_tiss_vinc_w limit pls_util_pck.qt_registro_transacao_w;
					
	exit when tb_nr_seq_conta_proc_regra_w.count = 0;
	
		-- manda para o banco

		SELECT * FROM pls_cta_proc_mat_regra_pck.grava_seq_tiss_proc(	tb_nr_seq_conta_proc_regra_w, tb_nr_seq_item_tiss_w, tb_nr_seq_item_tiss_vinc_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_conta_proc_regra_w := _ora2pg_r.tb_nr_seq_conta_proc_regra_p; tb_nr_seq_item_tiss_w := _ora2pg_r.tb_nr_seq_item_tiss_p; tb_nr_seq_item_tiss_vinc_w := _ora2pg_r.tb_nr_seq_item_tiss_vinc_p;
					
		tb_nr_seq_conta_proc_regra_w.delete;
		tb_nr_seq_item_tiss_w.delete;
		tb_nr_seq_item_tiss_vinc_w.delete;
		
		
	end loop;
	
	if (c01%isopen) then
	
		close c01;
	end if;
	
	
end loop;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_proc_tb ( tb_nr_seq_conta_p INOUT dbms_sql.number_table, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
