-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION schedule_daily_calendar_pck.get_data_germany ( dt_filter_p agenda_paciente.dt_agenda%type, cd_anestesista_p agenda_paciente.cd_anestesista%type, cd_medico_p agenda_paciente.cd_medico%type, cd_procedimento_p agenda_paciente.cd_procedimento%type, nr_seq_proc_interno_p agenda_paciente.nr_seq_proc_interno%type, ie_origem_proced_p agenda_paciente.ie_origem_proced%type, ie_status_agenda_p agenda_paciente.ie_status_agenda%type, cd_turno_p agenda_paciente.cd_turno%type, cd_pessoa_fisica_p agenda_paciente.cd_pessoa_fisica%type, cd_agendas_p text, ds_health_funds_p text, hr_inicio_p agenda_paciente.hr_inicio%type, hr_final_p timestamp, ie_horario_p text, cd_departamento_medico_p agenda_horario.cd_departamento_medico%type, ie_carater_p agenda_paciente.ie_carater_cirurgia%type, ie_horarios_p text, ds_regra_p text, ie_status_autor_p agenda_pac_opme.ie_autorizado%type, qt_tempo_p agenda_paciente.nr_minuto_duracao%type, cd_depto_pac_p agenda_paciente_auxiliar.cd_depto_medico%type, cd_convenio_p agenda_paciente.cd_convenio%type, ie_opme_pend_p text, nr_sequencia_p agenda_paciente.nr_sequencia%type, nr_reserva_p agenda_paciente.nr_reserva%type) RETURNS varchar AS $body$
DECLARE


ie_internal_locator_w			varchar(1);
ie_allow_cancelled_schedules_w		varchar(1);
ie_allow_cancelled_w			varchar(1);
ie_allow_cancelled_filtered_w		varchar(1);
ds_where_w				varchar(4000);

cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type		:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w			perfil.cd_perfil%type				:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w			usuario.nm_usuario%type				:= wheb_usuario_pck.get_nm_usuario;


BEGIN

	obter_param_usuario(871, 3, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_allow_cancelled_w);
	obter_param_usuario(871, 4, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_allow_cancelled_filtered_w);
	obter_param_usuario(871, 34, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_internal_locator_w);

	PERFORM set_config('schedule_daily_calendar_pck.ds_binds_w', 'with binds as (select 	:dt_filter_p 	dt_filter_p,
						:hr_inicio_p 	hr_inicio_p,
						:hr_final_p	hr_final_p
						from dual) ', false);

	PERFORM set_config('schedule_daily_calendar_pck.ds_select_query_w', 'select 	to_char(obter_data_nascto_pf(ap.cd_pessoa_fisica),
					pkg_date_formaters.localize_mask(''shortDate'',
					pkg_date_formaters.getUserLanguageTag(' || cd_estabelecimento_w || ', ''' || nm_usuario_w || '''))) date_of_birth,
					obter_sexo_pf(ap.cd_pessoa_fisica, ''D'') patient_gender,
					obter_descricao_Procedimento(ap.cd_procedimento, ap.ie_origem_proced) procedure_desc,
					obter_desc_Proc_Interno(ap.nr_seq_proc_interno) internal_procedure_desc,
					obter_nome_medico(ap.cd_medico, ''PMS'') doctor_name,
					obter_nome_medico(ap.cd_anestesista, ''N'') anest_name,
					initcap(obter_desc_anestesia(ap.cd_tipo_anestesia)) anesthesia_type,
					obter_nome_agenda(ap.cd_agenda) schedule_name,
					obter_compl_pf(ap.cd_pessoa_fisica, 1, ''RFC'') rfc_code,
					obter_se_perm_agecirur_param(ap.cd_pessoa_fisica, obter_dados_usuario_opcao(''' || nm_usuario_w || ''', ''C''), ' || cd_perfil_w || ', ap.cd_agenda) ie_agenda_perm_cirur_param,
					substr(obter_se_agenda_regra_dia(cd_agenda,hr_inicio, ''' || nm_usuario_w || '''),1,1) ie_agenda_regra_dia,
					obter_idade(obter_data_nascto_pf(ap.cd_pessoa_fisica), sysdate, ''A'') age,
					substr(obter_se_autor_desdob_agenda(ap.nr_sequencia),1,1) ie_autor_desdobrada,
					obter_tipo_classif_agenda(nr_seq_classif_agenda) ie_tipo_classif,
					obter_se_paciente_alerta_js(ap.cd_pessoa_fisica, ' || coalesce(cd_pessoa_fisica_p, 'null') || ', null, ' || cd_estabelecimento_w || ') patient_alerts,
					(select b.nr_seq_apresent from agenda b where ap.cd_agenda = b.cd_agenda) nr_seq_apresent,
					obter_status_paciente_painel(ap.dt_analise, ap.dt_chegada, ap.dt_paciente_aguardo, ap.dt_alta_cc, ap.dt_chamada_pre_inducao,
						ap.dt_sala_recuperacao, ap.dt_chegada_fim, ap.dt_saida_paciente_cc, ap.ie_status_agenda) ie_evento_cir_pac,
					get_cycle_week_description((select dt_filter_p from binds), ap.cd_agenda) ds_week,
					(SELECT NVL(MAX(''S''), ''N'') FROM REGRA_AGENDA_FECHADA raf WHERE raf.ie_status_agenda IN (ap.ie_status_agenda)) ie_schedule_closed,
					ap.ie_status_agenda,
					ap.cd_agenda,
					ap.nr_sequencia,
					ap.nm_paciente,
					ap.nr_atendimento,
					ap.nr_cirurgia,
					ap.dt_agenda,
					ap.hr_inicio,
					ap.cd_convenio,
					ap.cd_tipo_acomodacao,
					ap.dt_confirmacao,
					ap.ie_autorizacao,
					ap.nr_minuto_duracao,
					ap.ie_lado,
					ap.dt_nascimento_pac,
					ap.cd_setor_origem,
					ap.cd_doenca_cid,
					ap.ds_observacao,
					ap.nr_seq_proc_interno,
					ap.cd_setor_atendimento,
					obter_desc_setor_atend(ap.cd_setor_atendimento) ds_setor_atendimento,
					ap.dt_agendamento,
					ap.cd_pessoa_fisica,
          obter_sexo_pf(ap.cd_pessoa_fisica, ''C'') ie_sexo,
					case when ap.nm_paciente is null then '''' else OBTER_POPOVER_DESCRIPTION('
						|| cd_perfil_w || ', ap.nr_sequencia, ''P'', ''S'') end ds_popover_info,
					case when ap.nm_paciente is null then '''' else OBTER_POPOVER_DESCRIPTION('
						|| cd_perfil_w || ', ap.nr_sequencia, ''C'', ''N'') end ds_card_info,
                    obter_se_pac_alergia (ap.nr_atendimento) ie_allergy,
                    obter_se_pac_isolamento (ap.nr_atendimento) ie_isolament,
                    obter_se_contido_horario_sala(ap.nr_sequencia) IE_CONTIDO_HORARIO_SALA,
                    ap.dt_bloqueio_faturamento,
                    ap.dt_bloqueio,
                    ap.cd_medico,
                    ap.ie_tipo_atendimento,
                    ap.cd_categoria,
					nvl((SELECT ''S'' FROM dual WHERE ap.hr_inicio < sysdate), ''N'') ie_horario_passado,
                    ap.CD_PROCEDIMENTO,
                    DECODE(ap.ie_status_agenda,''L'',NULL,NVL(obter_prescricao_agenda(ap.nr_sequencia),obter_prescr_cirurgia(ap.nr_cirurgia))) nr_prescr_agenda
					from agenda_paciente ap ', false);

	ds_where_w := ' where obter_tipo_agenda(ap.cd_agenda) = 1
			and ap.hr_inicio between pkg_date_utils.start_of((select dt_filter_p from binds), ''DAY'') and pkg_date_utils.end_of((select dt_filter_p from binds), ''DAY'') ';

	if (hr_inicio_p IS NOT NULL AND hr_inicio_p::text <> '')
		and (hr_final_p IS NOT NULL AND hr_final_p::text <> '')
		and (ie_horario_p = 'S') then
		ds_where_w := ds_where_w || ' and ap.hr_inicio between (select hr_inicio_p from binds) and (select hr_final_p from binds)';
	end if;

	ie_allow_cancelled_schedules_w := 'S';

	if (ie_allow_cancelled_w <> 'S' or (ie_allow_cancelled_filtered_w = 'S' and ie_status_agenda_p <> 'C')) then
		ie_allow_cancelled_schedules_w := 'N';
	end if;

	if (cd_anestesista_p IS NOT NULL AND cd_anestesista_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.cd_anestesista = ' || cd_anestesista_p;
	end if;

	if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.cd_medico = ' || cd_medico_p;
	end if;

	if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
		if (ie_internal_locator_w = 'S') then
			ds_where_w := ds_where_w || ' and ap.nr_seq_proc_interno = ' || nr_seq_proc_interno_p;
		else
			ds_where_w := ds_where_w || ' and ap.cd_procedimento = ' || cd_procedimento_p || '
			 and ap.ie_origem_proced = ' || ie_origem_proced_p;
		end if;
	end if;

	if (ie_status_agenda_p IS NOT NULL AND ie_status_agenda_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.ie_status_agenda = ''' || ie_status_agenda_p || '''';
	elsif (ie_allow_cancelled_w <> 'S'
		or (ie_allow_cancelled_filtered_w = 'S' and ie_status_agenda_p <> 'C')) then
		ds_where_w := ds_where_w || ' and ap.ie_status_agenda <> ''C''';
	end if;

	if (cd_turno_p <> '2') then
		ds_where_w := ds_where_w || ' and ap.cd_turno = ' || cd_turno_p;
	end if;

	if (ds_health_funds_p IS NOT NULL AND ds_health_funds_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.cd_convenio in(' || ds_health_funds_p || ')';
	end if;

	ds_where_w := ds_where_w || ' and ap.cd_agenda in(' || cd_agendas_p || ')';

	if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.nr_sequencia = ' || nr_sequencia_p || ')';
	end if;

	if (cd_departamento_medico_p IS NOT NULL AND cd_departamento_medico_p::text <> '') then
		ds_where_w := ds_where_w || ' and obter_se_turno_departamento(ap.nr_sequencia, ' || cd_departamento_medico_p || ') = ''S'' ';
	end if;

	if (ie_carater_p IS NOT NULL AND ie_carater_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.ie_carater_cirurgia = ' || ie_carater_p;
	end if;

	if (nr_reserva_p IS NOT NULL AND nr_reserva_p::text <> '') then
		ds_where_w := ds_where_w || ' and ap.nr_reserva = ' || nr_reserva_p;
	else
		if (ie_status_agenda_p IS NOT NULL AND ie_status_agenda_p::text <> '') then
			ds_where_w := ds_where_w || ' and ap.ie_status_agenda = ' || ie_status_agenda_p;
		else
			if (ie_allow_cancelled_w = 'S') then
				ds_where_w := ds_where_w || ' and ap.ie_status_agenda <> ''C'' ';
			end if;
			if (ie_allow_cancelled_filtered_w = 'S')
				and (ie_status_agenda_p <> 'C') then
				ds_where_w := ds_where_w || ' and ap.ie_status_agenda <> ''C'' ';
			end if;
			if (ie_horarios_p = 'L') then
				ds_where_w := ds_where_w || ' and ap.ie_status_agenda = ''L'' ';
			elsif (ie_horarios_p = 'M') then
				ds_where_w := ds_where_w || ' and ap.ie_status_agenda <> ''L'' ';
			end if;
		end if;
	end if;

	if (ds_regra_p IS NOT NULL AND ds_regra_p::text <> '') then
		ds_where_w := ds_where_w || ' and obter_regra_agenda_cirurgica(ap.cd_agenda,ap.cd_turno,ap.hr_inicio) like ' || ds_regra_p;
	end if;

	if (ie_status_autor_p IS NOT NULL AND ie_status_autor_p::text <> '') then
		ds_where_w := ds_where_w ||	' and exists (select 1
							from agenda_pac_opme apo
							where ap.nr_sequencia = apo.nr_seq_agenda
							and apo.ie_autorizado = ' || ie_status_autor_p || '
							and nvl(apo.ie_origem_inf,''I'') = ''I'')';
	end if;

	if (ie_opme_pend_p = 'S') then
		ds_where_w := ds_where_w ||	' and exists (select 1
							from agenda_pac_opme apo
							where apo.ie_autorizado = ''P''
							and apo.nr_seq_agenda = ap.nr_sequencia)';
	end if;

	if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') then
		ds_where_w := ds_where_w ||	' and ap.cd_convenio = ' || cd_convenio_p;
	end if;

	if (qt_tempo_p IS NOT NULL AND qt_tempo_p::text <> '') then
		ds_where_w := ds_where_w ||	' and ap.nr_minuto_duracao = ' || qt_tempo_p;
	end if;

	if (cd_depto_pac_p IS NOT NULL AND cd_depto_pac_p::text <> '') then
		ds_where_w := ds_where_w ||	' and obter_depto_agenda_pac(ap.nr_sequencia) = ' || cd_depto_pac_p;
	end if;

	return ds_where_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION schedule_daily_calendar_pck.get_data_germany ( dt_filter_p agenda_paciente.dt_agenda%type, cd_anestesista_p agenda_paciente.cd_anestesista%type, cd_medico_p agenda_paciente.cd_medico%type, cd_procedimento_p agenda_paciente.cd_procedimento%type, nr_seq_proc_interno_p agenda_paciente.nr_seq_proc_interno%type, ie_origem_proced_p agenda_paciente.ie_origem_proced%type, ie_status_agenda_p agenda_paciente.ie_status_agenda%type, cd_turno_p agenda_paciente.cd_turno%type, cd_pessoa_fisica_p agenda_paciente.cd_pessoa_fisica%type, cd_agendas_p text, ds_health_funds_p text, hr_inicio_p agenda_paciente.hr_inicio%type, hr_final_p timestamp, ie_horario_p text, cd_departamento_medico_p agenda_horario.cd_departamento_medico%type, ie_carater_p agenda_paciente.ie_carater_cirurgia%type, ie_horarios_p text, ds_regra_p text, ie_status_autor_p agenda_pac_opme.ie_autorizado%type, qt_tempo_p agenda_paciente.nr_minuto_duracao%type, cd_depto_pac_p agenda_paciente_auxiliar.cd_depto_medico%type, cd_convenio_p agenda_paciente.cd_convenio%type, ie_opme_pend_p text, nr_sequencia_p agenda_paciente.nr_sequencia%type, nr_reserva_p agenda_paciente.nr_reserva%type) FROM PUBLIC;
