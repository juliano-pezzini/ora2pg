-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_gerar_relatorios_pck.pls_obter_producao_neg_prest ( nr_seq_prestador_p pls_prestador.nr_sequencia%type, dt_mes_competencia_p pls_lote_pagamento.dt_mes_competencia%type) RETURNS SETOF T_PLS_PRODUCAO_NEG_PREST AS $body$
DECLARE

 
	 
t_pls_producao_neg_prest_row_w	t_pls_producao_neg_prest_row;

ie_entra_w			varchar(1);
ie_linha_w			bigint	:= 0;
qt_pagamentos_w			bigint	:= 0;
dt_mes_competencia_ant_w	timestamp;
			
C01 CURSOR(	nr_seq_prestador_pc	pls_prestador.nr_sequencia%type, 
		dt_mes_competencia_pc 	pls_lote_pagamento.dt_mes_competencia%type) FOR 
	SELECT	x.nr_seq_prestador, 
		substr(pls_obter_dados_prestador(x.nr_seq_prestador, 'N'),1,255) nm_prestador, 
		substr(pls_obter_dados_prestador(x.nr_seq_prestador, 'CD'),1,255) cd_prestador, 
		trunc(y.dt_mes_competencia, 'month') dt_mes_competencia 
	from 	pls_pag_prest_vencimento	z, 
		pls_pagamento_prestador 	x, 
		pls_lote_pagamento 		y 
	where 	y.nr_sequencia 			= x.nr_seq_lote 
	and	x.nr_sequencia			= z.nr_seq_pag_prestador 
	and (x.nr_seq_prestador = nr_seq_prestador_pc or coalesce(nr_seq_prestador_pc::text, '') = '') 
	and 	trunc(y.dt_mes_competencia, 'month') 	= trunc(dt_mes_competencia_pc, 'month') 
	and	z.vl_liquido < 0 
	and	not exists (	SELECT	1 
				from 	pls_pag_prest_vencimento	c, 
					pls_pagamento_prestador 	b, 
					pls_lote_pagamento 		a 
				where 	a.nr_sequencia 			= b.nr_seq_lote 
				and	b.nr_sequencia			= c.nr_seq_pag_prestador 
				and	b.nr_seq_prestador 		= x.nr_seq_prestador 
				and	a.nr_sequencia			<> y.nr_sequencia 
				and 	trunc(a.dt_mes_competencia, 'month') = trunc(y.dt_mes_competencia, 'month') 
				and	c.vl_liquido >= 0) 
	group by 
		x.nr_seq_prestador, 
		trunc(y.dt_mes_competencia, 'month') 
	order by 2;

C02 CURSOR(	nr_seq_prestador_pc	pls_prestador.nr_sequencia%type, 
		dt_mes_competencia_pc 	pls_lote_pagamento.dt_mes_competencia%type) FOR 
	SELECT	dt_mes_competencia, 
		vl_bruto, 
		nr_seq_pagamento, 
		vl_liquido 
	from (SELECT trunc(a.dt_mes_competencia, 'month') dt_mes_competencia, 
			sum(CASE WHEN e.ie_tipo_evento='P' THEN  d.vl_item  ELSE 0 END ) vl_bruto, 
			b.nr_sequencia nr_seq_pagamento, 
			c.nr_titulo_receber, 
			c.vl_liquido 
		from 	pls_evento			e, 
			pls_pagamento_item		d,		 
			pls_pag_prest_vencimento	c, 
			pls_pagamento_prestador 	b, 
			pls_lote_pagamento 		a 
		where 	a.nr_sequencia 			= b.nr_seq_lote 
		and	b.nr_sequencia			= c.nr_seq_pag_prestador 
		and	b.nr_sequencia			= d.nr_seq_pagamento 
		and	e.nr_sequencia			= d.nr_seq_evento 
		and 	b.nr_seq_prestador 		= nr_seq_prestador_pc 
		and 	trunc(a.dt_mes_competencia, 'month') 	<= trunc(dt_mes_competencia_pc, 'month') 
		group by 
			b.nr_sequencia, 
			c.nr_titulo_receber, 
			c.vl_liquido, 
			a.dt_mes_competencia 
		order by 
			a.dt_mes_competencia desc) a LIMIT 7;
			
BEGIN 
 
for r_c01_w in C01(	nr_seq_prestador_p, 
			dt_mes_competencia_p) loop 
	ie_linha_w					:= 0;
	ie_entra_w 					:= 'S';
	qt_pagamentos_w					:= 0;
	 
	for r_c02_w in C02(r_c01_w.nr_seq_prestador, dt_mes_competencia_p) loop 
		if (r_c02_w.vl_liquido >= 0) then 
			ie_entra_w := 'N';
			exit;
		end if;
		 
		qt_pagamentos_w := qt_pagamentos_w + 1;
	end loop;
	 
	/* Somente apresentar os prestador que não possuem pagamentos positivos nos últimos 7 pagamentos */
 
	if (ie_entra_w = 'S') and (qt_pagamentos_w = 7) then 
		for r_c02_w in C02(r_c01_w.nr_seq_prestador, dt_mes_competencia_p) loop 
			ie_linha_w := ie_linha_w + 1;
			 
			if (ie_linha_w = 1) then 
				t_pls_producao_neg_prest_row_w.vl_bruto_1 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_1 	:= r_c02_w.vl_liquido;
			elsif (ie_linha_w = 2) then 
				t_pls_producao_neg_prest_row_w.vl_bruto_2 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_2 	:= r_c02_w.vl_liquido;
			elsif (ie_linha_w = 3) then				 
				t_pls_producao_neg_prest_row_w.vl_bruto_3 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_3 	:= r_c02_w.vl_liquido;
			elsif (ie_linha_w = 4) then 
				t_pls_producao_neg_prest_row_w.vl_bruto_4 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_4 	:= r_c02_w.vl_liquido;
			elsif (ie_linha_w = 5) then 
				t_pls_producao_neg_prest_row_w.vl_bruto_5 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_5 	:= r_c02_w.vl_liquido;
			elsif (ie_linha_w = 6) then 
				t_pls_producao_neg_prest_row_w.vl_bruto_6 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_6 	:= r_c02_w.vl_liquido;
			elsif (ie_linha_w = 7) then 
				t_pls_producao_neg_prest_row_w.vl_bruto_7 	:= r_c02_w.vl_bruto;
				t_pls_producao_neg_prest_row_w.vl_liquido_7 	:= r_c02_w.vl_liquido;
			end if;				
		end loop;
		 
		t_pls_producao_neg_prest_row_w.nr_seq_prestador	:= r_c01_w.cd_prestador;
		t_pls_producao_neg_prest_row_w.nm_prestador 	:= r_c01_w.nm_prestador;
		 
		RETURN NEXT t_pls_producao_neg_prest_row_w;
	end if;	
end loop;
 
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_gerar_relatorios_pck.pls_obter_producao_neg_prest ( nr_seq_prestador_p pls_prestador.nr_sequencia%type, dt_mes_competencia_p pls_lote_pagamento.dt_mes_competencia%type) FROM PUBLIC;
