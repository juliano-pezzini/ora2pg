-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

 
--function referente os 667746 
CREATE OR REPLACE FUNCTION pls_gerar_relatorios_pck.pls_relat_custo_prox ( dt_competencia_p pls_conta_medica_resumo.dt_competencia%type, cd_prestador_p pls_prestador.cd_prestador%type, ie_tipo_relat_p text, nr_seq_periodo_p pls_lote_pagamento.nr_seq_periodo%type) RETURNS SETOF T_RELAT_CUSTO_PROX_PERIODO AS $body$
DECLARE

 
--declacaracao variaveis 
t_relat_custo_prox_periodo_w 	t_relat_custo_prox_periodo_row;
t_limpa_variavel_w		t_relat_custo_prox_periodo_row;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
dt_final_w			pls_conta_medica_resumo.dt_competencia%type;
dt_inicial_w			pls_conta_medica_resumo.dt_competencia%type;
cd_prestador_w			pls_prestador.cd_prestador%type;
nm_prestador_w			varchar(255);
ds_grupo_receita_W		varchar(255);
cd_proc_mat_w			bigint;
ds_proc_mat_w			varchar(255);
nr_seq_prestador_pgto_w		pls_prestador.nr_sequencia%type;
ie_origem_w			varchar(1);
ie_result_w			bigint;
vl_mes_atual_w			bigint;
vl_media_atual_w		bigint;
vl_item_w			bigint;
qt_item_w			bigint;
qt_lancamento_w			bigint;
dt_competencia_anterior_w	timestamp;
vl_w				bigint;
qt_w				bigint;
media_w				bigint;
dt_anteriores_w			timestamp;
------------------------------------------------------------------------------------------------ 
--variaveis usada no sql dinamico 
ds_sql_relat_sint_w		varchar(6000);
ds_filtro_relat_sint_w		varchar(4000);
ds_filtro_relat_union_w		varchar(4000);
var_cur_w			integer;
var_exec_w			integer;
var_retorno_w			integer;
--------------------------- 
ds_sql_relat_val_ant_w		varchar(4000);
ds_filtro_relat_val_ant_w	varchar(4000);
ds_sql_relat_val_atual_w	varchar(4000);
ds_filtro_relat_val_atual_w	varchar(4000);
var_cur_val_atual_w		integer;
var_exec_val_atual_w		integer;
var_cur_val_ant_w		integer;
var_exec_val_ant_w		integer;
var_retorno_valores_ant_w	integer;
var_retorno_valores_atual_w	integer;
nr_seq_evento_w			integer;
rownum_w			integer;
------------------------------------------------------------------------------------------------ 
	

BEGIN 
 
ds_filtro_relat_sint_w 	:= '';
ie_result_w		:= -1;
 
-- coletando informações da data que serão usadas nos cursores 
if (dt_competencia_p IS NOT NULL AND dt_competencia_p::text <> '')	then 
	select	add_months(trunc(to_date(dt_competencia_p), 'month'), -1) 
	into STRICT	dt_anteriores_w 
	;
	 
	select	dt_anteriores_w, 
		fim_dia(add_months(trunc(to_date(dt_anteriores_w), 'month'), -4)) 
	into STRICT	dt_final_w, 
		dt_inicial_w 
	;
end if;
 
--buscano a sequencia do prestador para quando o mesmo informado já filtrar os itens por prestador. Caso nao informado trara para todos os prestadores do período 
if (cd_prestador_p IS NOT NULL AND cd_prestador_p::text <> '') then 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_prestador_w 
	from 	pls_prestador 
	where	cd_prestador = cd_prestador_p;
end if;
-- busca o código do evento pois para o mes atual o perido corresponde ao evento que deve ser filtrado. Como não tem lote não sei o perído por isso busca a regra cadastra para cada periodo 
if (nr_seq_periodo_p IS NOT NULL AND nr_seq_periodo_p::text <> '') then	 
	select 	distinct a.nr_sequencia nr_sequencia_evento 
	into STRICT	nr_seq_evento_w 
	from  	pls_evento a, 
		pls_evento_regra b, 
		pls_periodo_pagamento c 
	where 	a.nr_sequencia 		= b.nr_seq_evento 
	and  	b.nr_seq_periodo	= c.nr_sequencia 
	and  	c.nr_sequencia 		= nr_seq_periodo_p;
end if;
--inicializo os filtros para o cursore abaixo 
if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then 
	ds_filtro_relat_sint_w 	:= 	'	and	c.nr_sequencia 		= :nr_seq_prestador	';
	ds_filtro_relat_union_w :=	'	and	a.nr_seq_prestador_pgto = :nr_seq_prestador	';
end if;
 
--buscar as informacoes dos prestadores , procedimento e materiais(neste caso o primeiro union é para as conta que estão fechadas porém ainda não estão no lote de pagamento(mes atual) e o segundo os meses anteriores para comparação) 
if (ie_tipo_relat_p = 'A') then 
	--select analitico 
	ds_sql_relat_sint_w 	:=	'	select 	pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''CD'') cd_prestador, 		'|| 
					'    	pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''N'') nm_prestador, 		'|| 
					'    	g.ds_grupo_receita ds_grupo_serv,							'||	 
					'    	c.cd_procedimento cd_item,								'|| 
					'    	c.ds_procedimento ds_item,								'||	 
					'    	substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255) ds_preco,			'|| 
					'		''P'' ie_origem										'|| 
					'	from  	pls_conta_medica_resumo a,								'|| 
					'    	pls_conta_proc     b,								'|| 
					'    	procedimento      c,								'|| 
					'    	pls_lote_pagamento   d,								'|| 
					'    	grupo_receita		g,								'|| 
					'    	pls_conta		h								'|| 
					'	where 	1 = 1											'||	 
					'	and  	a.nr_seq_conta_proc   = b.nr_sequencia						'|| 
					'	and  	b.cd_procedimento    = c.cd_procedimento						'|| 
					'	and  	b.ie_origem_proced   = c.ie_origem_proced						'|| 
					'	and  	d.nr_sequencia(+)    = a.nr_seq_lote_pgto						'|| 
					'	and  	g.nr_sequencia   	= c.nr_seq_grupo_rec						'|| 
					'	and  	h.nr_sequencia   	= a.nr_seq_conta						'|| 
					'	and  	a.nr_seq_lote_pgto is null								'|| 
					'	and  	a.ie_status = ''F''									'|| 
					'	and  	a.nr_seq_evento     = :nr_seq_evento						'|| 
						ds_filtro_relat_union_w										 || 
					'	group by											'|| 
					'   		a.nr_seq_prestador_pgto,								'|| 
					'   		g.ds_grupo_receita,									'|| 
					'   		c.cd_procedimento,									'|| 
					'   		c.ds_procedimento,									'|| 
					'   		substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255)				'|| 
					'	union												'|| 
					'	select 	pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''CD'') cd_prestador,		'|| 
					'    	pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''N'') nm_prestador,		'|| 
					'    	substr(pls_obter_estrutura_material(g.nr_sequencia, null, null),1,50) ds_grupo_serv,	'|| 
					'    	c.nr_sequencia cd_item,									'|| 
					'    	c.ds_material ds_item,									'|| 
					'    	substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255) ds_preco,			'|| 
					'		''M'' ie_origem										'|| 
					'	from  	pls_conta_medica_resumo a,								'|| 
					'    	pls_conta_mat      b,								'|| 
					'    	pls_material      c,								'|| 
					'    	pls_lote_pagamento   d,								'|| 
					'    	pls_estrutura_material g,								'|| 
					'    	pls_conta        h								'|| 
					'	where 	1 = 1    										'|| 
					'	and  	a.nr_seq_conta_mat   = b.nr_sequencia						'|| 
					'	and  	b.nr_seq_material    = c.nr_sequencia						'|| 
					'	and  	d.nr_sequencia(+)     = a.nr_seq_lote_pgto						'|| 
					'	and  	g.nr_sequencia		= c.nr_seq_estrut_mat						'|| 
					'	and  	h.nr_sequencia		= a.nr_seq_conta						'|| 
					'	and  	a.nr_seq_lote_pgto is null								'|| 
					'	and  	a.ie_status = ''F''									'|| 
					'	and  	a.nr_seq_evento     = :nr_seq_evento						'|| 
						ds_filtro_relat_union_w										 || 
					'	group by											'|| 
					'   		a.nr_seq_prestador_pgto,								'|| 
					'   		g.nr_sequencia,										'|| 
					'   		c.nr_sequencia,										'|| 
					'   		c.ds_material,										'|| 
					'   		substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255)				'|| 
					--union com os meses anteriores 
					'	union 												'|| 
					'	select c.cd_prestador,										'||								 
					'		pls_obter_dados_prestador(c.nr_sequencia, ''N'') nm_prestador,				'|| 
					'		g.ds_grupo_receita ds_grupo_serv,							'|| 
					'		f.cd_procedimento cd_item,								'|| 
					'		f.ds_procedimento ds_item,								'|| 
					'		substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255) ds_preco,  		'|| 
					'		''P'' ie_origem										'||	 
					'	from  pls_conta        h,  								'|| 
					'		grupo_receita      g,  								'|| 
					'		procedimento      f,								'||	 
					'		pls_conta_proc     e,     							'|| 
					'		pls_conta_medica_resumo d,								'|| 
					'		pls_prestador      c,								'|| 
					'		pls_pagamento_prestador b,								'|| 
					'		pls_lote_pagamento   a								'|| 
					'	where  a.nr_sequencia = b.nr_seq_lote								'||	 
					'	and   b.nr_seq_prestador 	= c.nr_sequencia						'|| 
					'	and   d.nr_seq_lote_pgto 	= a.nr_sequencia						'|| 
					'	and   e.nr_sequencia   	= d.nr_seq_conta_proc						'|| 
					'	and   f.cd_procedimento 	= e.cd_procedimento						'||	 
					'	and   f.ie_origem_proced 	= e.ie_origem_proced						'|| 
					'	and   g.nr_sequencia   	= f.nr_seq_grupo_rec						'|| 
					'	and   h.nr_sequencia   	= d.nr_seq_conta						'|| 
					'	and	a.nr_seq_periodo	= :nr_seq_periodo						'|| 
					'	and   a.dt_mes_competencia 	between :dt_inicial and last_day(:dt_final)			'|| 
						ds_filtro_relat_sint_w										 || 
					'	group by											'|| 
					'		c.cd_prestador,										'|| 
					'		c.nr_sequencia,										'|| 
					'		g.ds_grupo_receita,									'|| 
					'		f.cd_procedimento,									'|| 
					'		f.ds_procedimento,									'|| 
					'		substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255)				'|| 
					'	union 												'|| 
					'	select c.cd_prestador,										'||		 
					'		pls_obter_dados_prestador(c.nr_sequencia, ''N'') nm_prestador,				'|| 
					'		substr(pls_obter_estrutura_material(g.nr_sequencia, null, null),1,50) ds_grupo_serv, 	'|| 
					'		f.nr_sequencia cd_item,									'|| 
					'		f.ds_material ds_item,									'|| 
					'		substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255) ds_preco,			'|| 
					'		''M'' ie_origem										'||	 
					'	from  pls_conta        h,  								'|| 
					'		pls_estrutura_material g,								'|| 
					'		pls_material      f,								'|| 
					'		pls_conta_mat      e,     							'|| 
					'		pls_conta_medica_resumo d,								'|| 
					'		pls_prestador      c,								'|| 
					'		pls_pagamento_prestador b,								'||			 
					'		pls_lote_pagamento   a								'|| 
					'	where  a.nr_sequencia = b.nr_seq_lote								'|| 
					'	and   b.nr_seq_prestador 	= c.nr_sequencia						'||	 
					'	and   d.nr_seq_lote_pgto 	= a.nr_sequencia						'|| 
					'	and   e.nr_sequencia   	= d.nr_seq_conta_mat						'|| 
					'	and  	f.nr_sequencia 	  	= e.nr_seq_material						'|| 
					'	and   g.nr_sequencia   	= f.nr_seq_estrut_mat						'|| 
					'	and   h.nr_sequencia   	= d.nr_seq_conta						'|| 
					'	and	a.nr_seq_periodo	= :nr_seq_periodo						'|| 
					'	and   a.dt_mes_competencia 	between :dt_inicial and last_day(:dt_final)			'|| 
						ds_filtro_relat_sint_w										 || 
					'	group by											'|| 
					'		c.cd_prestador,										'|| 
					'		c.nr_sequencia,										'|| 
					'		g.nr_sequencia,										'||	 
					'		f.nr_sequencia,										'|| 
					'		f.ds_material,										'|| 
					'		substr(pls_obter_dados_produto(h.nr_seq_plano,''P''),1,255)				'|| 
					'	order by											'|| 
					'   		nm_prestador,										'|| 
					'   		ds_preco,										'|| 
					'   		ds_item'; 							
else 
	-- select 	sintetico 
	ds_sql_relat_sint_w 	:=	'	select 	pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''CD'') cd_prestador,	'||	 		 
					'		pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''N'') nm_prestador, 	'||	 
					'		'''' ds_grupo_serv,								'|| 
					'		'''' cd_item,									'|| 
					'		'''' ds_item,									'|| 
					'		''''ds_preco,									'|| 
					'		'''' ie_origem									'||	 
					'	from  	pls_conta_medica_resumo a							'||	 
					'	where 	1 = 1										'||	 
					'	and  	a.nr_seq_lote_pgto is null							'||	 
					'	and  	a.ie_status = ''F''								'||	 
					'		and  	a.nr_seq_evento     = :nr_seq_evento				'||		 
						ds_filtro_relat_union_w									 ||	 
					'	group by										'||	 
					'		a.nr_seq_prestador_pgto								'|| 
					'	union											'||	 
					'	select 	pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''CD'') cd_prestador,	'||	 
					'		pls_obter_dados_prestador(a.nr_seq_prestador_pgto, ''N'') nm_prestador,	'||	 
					'		'''' ds_grupo_serv,								'|| 
					'		'''' cd_item,									'|| 
					'		'''' ds_item,									'|| 
					'		'''' ds_preco,									'|| 
					'		'''' ie_origem									'||	 
					'	from  	pls_conta_medica_resumo a							'|| 
					'	where 	1 = 1    									'||	 
					'	and  	a.nr_seq_lote_pgto is null							'||	 
					'	and  	a.ie_status = ''F''								'||	 
					'	and  	a.nr_seq_evento     = :nr_seq_evento					'||	 
						ds_filtro_relat_union_w									 ||	 
					'	group by										'||	 
					'		a.nr_seq_prestador_pgto								'||		 
					'	union 											'||	 
					'	select c.cd_prestador,									'||	 
					'		pls_obter_dados_prestador(c.nr_sequencia, ''N'') nm_prestador,			'||	 
					'		'''' ds_grupo_serv,								'|| 
					'		'''' cd_item,									'|| 
					'		'''' ds_item,									'||	 
					'		'''' ds_preco,  								'|| 
					'		'''' ie_origem									'||	 
					'	from  pls_conta        h,  							'||	 
					'		grupo_receita      g,  							'||	 
					'		procedimento      f,							'||	 
					'		pls_conta_proc     e,     						'||	 
					'		pls_conta_medica_resumo d,							'||	 
					'		pls_prestador      c,							'||	 
					'		pls_pagamento_prestador b,							'||	 
					'		pls_lote_pagamento   a							'||	 
					'	where  a.nr_sequencia = b.nr_seq_lote							'||	 
					'	and   b.nr_seq_prestador 	= c.nr_sequencia					'||	 
					'	and   d.nr_seq_lote_pgto 	= a.nr_sequencia					'||	 
					'	and   e.nr_sequencia   	= d.nr_seq_conta_proc					'||	 
					'	and   f.cd_procedimento 	= e.cd_procedimento					'||	 
					'	and   f.ie_origem_proced 	= e.ie_origem_proced					'||	 
					'	and   g.nr_sequencia   	= f.nr_seq_grupo_rec					'||	 
					'	and   h.nr_sequencia   	= d.nr_seq_conta					'||	 
					'	and	a.nr_seq_periodo	= :nr_seq_periodo					'||	 
					'	and   a.dt_mes_competencia 	between :dt_inicial and last_day(:dt_final)		'||	 
						ds_filtro_relat_sint_w									 ||	 
					'	group by										'||	 
					'		c.cd_prestador,									'||	 
					'		c.nr_sequencia									'|| 
					'	union 											'||	 
					'	select c.cd_prestador,									'||	 
					'		pls_obter_dados_prestador(c.nr_sequencia, ''N'') nm_prestador,			'||	 
					'		'''' ds_grupo_serv, 								'|| 
					'		'''' cd_item,									'|| 
					'		'''' ds_item,									'|| 
					'		'''' ds_preco,									'|| 
					'		'''' ie_origem									'||	 
					'	from  pls_conta        h,  							'||	 
					'		pls_estrutura_material g,							'||	 
					'		pls_material      f,							'||	 
					'		pls_conta_mat      e,     						'||	 
					'		pls_conta_medica_resumo d,							'||	 
					'		pls_prestador      c,							'||	 
					'		pls_pagamento_prestador b,							'||	 
					'		pls_lote_pagamento   a							'||	 
					'	where  a.nr_sequencia = b.nr_seq_lote							'||	 
					'	and   b.nr_seq_prestador 	= c.nr_sequencia					'||	 
					'	and   d.nr_seq_lote_pgto 	= a.nr_sequencia					'||	 
					'	and   e.nr_sequencia   	= d.nr_seq_conta_mat					'||	 
					'	and  	f.nr_sequencia 	  	= e.nr_seq_material					'||	 
					'	and   g.nr_sequencia   	= f.nr_seq_estrut_mat					'||	 
					'	and   h.nr_sequencia   	= d.nr_seq_conta					'||	 
					'	and	a.nr_seq_periodo	= :nr_seq_periodo					'||	 
					'	and   a.dt_mes_competencia 	between :dt_inicial and last_day(:dt_final)		'||	 
						ds_filtro_relat_sint_w									 ||	 
					'	group by										'||	 
					'		c.cd_prestador,									'||	 
					'		c.nr_sequencia									'||	 
					'	order by										'||	 
					'		nm_prestador									';	
 								 
end if;
--abro o curso 
var_cur_w := dbms_sql.open_cursor;
dbms_sql.parse(var_cur_w, ds_sql_relat_sint_w, 1);
--inicializo as bind variable 
dbms_sql.bind_variable(var_cur_w, ':dt_inicial', dt_inicial_w);
dbms_sql.bind_variable(var_cur_w, ':dt_final', dt_final_w);
dbms_sql.bind_variable(var_cur_w, ':nr_seq_evento', nr_seq_evento_w);
dbms_sql.bind_variable(var_cur_w, ':nr_seq_periodo', nr_seq_periodo_p);
 
if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then 
	dbms_sql.bind_variable(var_cur_w, ':nr_seq_prestador', nr_seq_prestador_w);
end if;
 
-- 
dbms_sql.define_column(var_cur_w, 1, cd_prestador_w,255);
dbms_sql.define_column(var_cur_w, 2, nm_prestador_w, 255);
dbms_sql.define_column(var_cur_w, 3, ds_grupo_receita_w, 255);
dbms_sql.define_column(var_cur_w, 4, cd_proc_mat_w);
dbms_sql.define_column(var_cur_w, 5, ds_proc_mat_w, 255);
---dbms_sql.define_column(var_cur_w, 6, nr_seq_prestador_pgto_w); 
dbms_sql.define_column(var_cur_w, 7, ie_origem_w, 1);
 
var_exec_w := dbms_sql.execute(var_cur_w);
 
loop 
	var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
	exit when var_retorno_w = 0;
	 
	dbms_sql.column_value(var_cur_w, 1, cd_prestador_w);
	dbms_sql.column_value(var_cur_w, 2, nm_prestador_w);
	dbms_sql.column_value(var_cur_w, 3, ds_grupo_receita_w);
	dbms_sql.column_value(var_cur_w, 4, cd_proc_mat_w);
	dbms_sql.column_value(var_cur_w, 5, ds_proc_mat_w);
	--dbms_sql.column_value(var_cur_w, 6, nr_seq_prestador_pgto_w); 
	dbms_sql.column_value(var_cur_w, 7, ie_origem_w);
	 
	t_relat_custo_prox_periodo_w			:= t_limpa_variavel_w;	
	t_relat_custo_prox_periodo_w.cd_prestador 	:= cd_prestador_w;
	t_relat_custo_prox_periodo_w.nm_prestador	:= nm_prestador_w;
	t_relat_custo_prox_periodo_w.ds_grupo_receita	:= ds_grupo_receita_w;
	t_relat_custo_prox_periodo_w.cd_proc_mat	:= cd_proc_mat_w;
	t_relat_custo_prox_periodo_w.ds_proc_mat	:= ds_proc_mat_w;
	--t_relat_custo_prox_periodo_w.nr_seq_prestador	:= nr_seq_prestador_pgto_w; 
	t_relat_custo_prox_periodo_w.ie_origem		:= ie_origem_w;
	 
	ds_filtro_relat_val_atual_w	:= '';
	ds_filtro_relat_val_ant_w	:= '';
 
	if (ie_tipo_relat_p = 'A') then 
		if (ie_origem_w = 'P') then 
			ds_filtro_relat_val_atual_w 	:= ' and	a.cd_procedimento = :cd_procedimento';
			ds_filtro_relat_val_ant_w	:= ' and	d.cd_procedimento = :cd_procedimento';
			if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then 
				ds_filtro_relat_val_atual_w	:= ds_filtro_relat_val_atual_w 	|| ' and	a.nr_seq_prestador_pgto = :nr_seq_prestador';
				ds_filtro_relat_val_ant_w	:= ds_filtro_relat_val_ant_w	|| ' and	c.nr_sequencia = :nr_seq_prestador';
			end if;	
		else 
			ds_filtro_relat_val_atual_w 	:= ' and	a.nr_seq_material = :cd_procedimento';
			ds_filtro_relat_val_ant_w	:= ' and	d.nr_seq_material = :cd_procedimento';
			if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then 
				ds_filtro_relat_val_atual_w	:= ds_filtro_relat_val_atual_w 	|| ' and	a.nr_seq_prestador_pgto = :nr_seq_prestador';
				ds_filtro_relat_val_ant_w	:= ds_filtro_relat_val_ant_w	|| ' and	c.nr_sequencia = :nr_seq_prestador';
			end if;	
			 
		end if;	
	else 
		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then 
			ds_filtro_relat_val_atual_w	:= ds_filtro_relat_val_atual_w 	|| ' and	a.nr_seq_prestador_pgto = :nr_seq_prestador';
			ds_filtro_relat_val_ant_w	:= ds_filtro_relat_val_ant_w	|| ' and	c.nr_sequencia = :nr_seq_prestador';
		end if;
		ds_filtro_relat_val_ant_w 	:= ds_filtro_relat_val_ant_w || ' and	a.nr_seq_periodo = :nr_seq_periodo';	
	end if;
	 
	--busca os valores do mes atual das contas fora do lote de pagamento e por evento(o evento expecifico referente ao periodo do filtro do relatorio) 
	ds_sql_relat_val_atual_w :=	'	select 	sum(a.vl_liberado) vl_item,							'|| 
					'    	sum(a.qt_item) qt_item								'|| 
					'	from  	pls_conta_medica_resumo a							'|| 
					'	where 1 = 1										'|| 
					'	and  a.nr_seq_lote_pgto is null							'|| 
					'	and  a.ie_status = ''F''								'|| 
					'	and  a.nr_seq_evento     	= :nr_seq_evento					'|| 
						ds_filtro_relat_val_atual_w;
 
	var_cur_val_atual_w := dbms_sql.open_cursor;
	dbms_sql.parse(var_cur_val_atual_w, ds_sql_relat_val_atual_w, 1);
	 
	dbms_sql.bind_variable(var_cur_val_atual_w, ':nr_seq_prestador', nr_seq_prestador_w);	
	dbms_sql.bind_variable(var_cur_val_atual_w, ':nr_seq_evento', nr_seq_evento_w);	
	 
	if (ie_tipo_relat_p = 'A') then 
		dbms_sql.bind_variable(var_cur_val_atual_w, ':cd_procedimento', cd_proc_mat_w);
	end if;	
	 
	dbms_sql.define_column(var_cur_val_atual_w, 1, vl_item_w);
	dbms_sql.define_column(var_cur_val_atual_w, 2, qt_item_w);
	 
	var_exec_val_atual_w :=	dbms_sql.execute(var_cur_val_atual_w);
	 
	loop 
		var_retorno_valores_atual_w	:= dbms_sql.fetch_rows( var_cur_val_atual_w );
		exit when var_retorno_valores_atual_w = 0;
		 
		dbms_sql.column_value( var_cur_val_atual_w, 1, vl_item_w 	);
		dbms_sql.column_value( var_cur_val_atual_w, 2, qt_item_w 	);
		 
		t_relat_custo_prox_periodo_w.vl_mes_atual		:= vl_item_w;
		t_relat_custo_prox_periodo_w.qt_lancamento_atual	:= qt_item_w;
		 
	end loop;
	dbms_sql.close_cursor( var_cur_val_atual_w );
		 
	--buscas os valores do mes anteriores(aqui as contas estão em lote de pagamento) 
	ds_sql_relat_val_ant_w := 	'	select	vl_item,									'|| 
					'		dt_mes_competencia,								'|| 
					'		qt_itens									'|| 
					'	from	(	select	nvl(sum(d.vl_liberado),0) vl_item,				'|| 
					'				a.dt_mes_competencia,						'|| 
					'				sum(d.qt_item) qt_itens						'|| 
					'			from	pls_conta_medica_resumo d, 					'|| 
					'				pls_prestador		c,					'||	 
					'				pls_pagamento_prestador	b,					'|| 
					'				pls_lote_pagamento	a					'|| 
					'			where	a.nr_sequencia 		= b.nr_seq_lote				'|| 
					'			and	b.nr_seq_prestador	= c.nr_sequencia			'|| 
					'			and	d.nr_seq_lote_pgto	= a.nr_sequencia			'|| 
								ds_filtro_relat_val_ant_w						 || 
					'			and	a.dt_mes_competencia	 between :dt_inicial and :dt_final	'|| 
					'			group by								'|| 
					'				a.dt_mes_competencia						'||	 
					'			order by 								'|| 
					'				a.dt_mes_competencia desc)					';
	 
					 
	var_cur_val_ant_w := dbms_sql.open_cursor;
	dbms_sql.parse(var_cur_val_ant_w, ds_sql_relat_val_ant_w,1);
		 
	dbms_sql.bind_variable(var_cur_val_ant_w, ':dt_inicial', dt_inicial_w);
	dbms_sql.bind_variable(var_cur_val_ant_w, ':dt_final', dt_final_w);
	dbms_sql.bind_variable(var_cur_val_ant_w, ':nr_seq_prestador', nr_seq_prestador_w);
	 
	if (ie_tipo_relat_p = 'A') then 
		if (ie_origem_w = 'P') then 
			dbms_sql.bind_variable(var_cur_val_ant_w, ':cd_procedimento', cd_proc_mat_w);
		elsif (ie_origem_w = 'M') then 
			dbms_sql.bind_variable(var_cur_val_ant_w, ':cd_procedimento', (cd_proc_mat_w)::numeric );
		end if;
	else 
		dbms_sql.bind_variable(var_cur_val_ant_w, ':nr_seq_periodo', nr_seq_periodo_p);	
	end if;	
	dbms_sql.define_column(var_cur_val_ant_w, 1, vl_mes_atual_w);
	dbms_sql.define_column(var_cur_val_ant_w, 2, dt_competencia_anterior_w );
	dbms_sql.define_column(var_cur_val_ant_w, 3, qt_lancamento_w);
		 
	var_exec_val_ant_w := dbms_sql.execute( var_cur_val_ant_w );
	 
	loop 
		 
		var_retorno_valores_ant_w := dbms_sql.fetch_rows( var_cur_val_ant_w );
		exit when var_retorno_valores_ant_w = 0;
		 
		dbms_sql.column_value( var_cur_val_ant_w, 1, vl_mes_atual_w 		);
		dbms_sql.column_value(var_cur_val_ant_w, 2, dt_competencia_anterior_w );
		dbms_sql.column_value( var_cur_val_ant_w, 3, qt_lancamento_w 		);
		 
				 
		ie_result_w := round(months_between(trunc(dt_anteriores_w, 'month'), trunc(dt_competencia_anterior_w, 'month')));
		 
		if ( ie_result_w = 0) then 
			--obter valores e quantidade do mês anterior (ex:janeiro)	 
			t_relat_custo_prox_periodo_w.vl_mes_ant2		:= vl_mes_atual_w;
			t_relat_custo_prox_periodo_w.qt_lancamento_ant2		:= qt_lancamento_w;
			--obter valores e quanditade mes anteriror (ex: dezembro) 
		elsif ( ie_result_w = 1) then 
			t_relat_custo_prox_periodo_w.vl_mes_ant3		:= vl_mes_atual_w;
			t_relat_custo_prox_periodo_w.qt_lancamento_ant3		:= qt_lancamento_w;
		--obter valores e quantidade do mês anterior ao mês a cima (ex:novembro) 
		elsif ( ie_result_w = 2) then 
			t_relat_custo_prox_periodo_w.vl_mes_ant4		:= vl_mes_atual_w;
			t_relat_custo_prox_periodo_w.qt_lancamento_ant4		:= qt_lancamento_w;
			--obtendo a media dos valores dos meses								 
		end if;
	end loop;
	dbms_sql.close_cursor( var_cur_val_ant_w );
		 
	RETURN NEXT t_relat_custo_prox_periodo_w;	
	 
end loop;
dbms_sql.close_cursor(var_cur_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_gerar_relatorios_pck.pls_relat_custo_prox ( dt_competencia_p pls_conta_medica_resumo.dt_competencia%type, cd_prestador_p pls_prestador.cd_prestador%type, ie_tipo_relat_p text, nr_seq_periodo_p pls_lote_pagamento.nr_seq_periodo%type) FROM PUBLIC;
