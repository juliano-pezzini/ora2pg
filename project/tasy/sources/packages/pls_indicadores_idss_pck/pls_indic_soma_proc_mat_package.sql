-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_indicadores_idss_pck.pls_indic_soma_proc_mat ( ie_tipo_regra_p text, nr_seq_regra_p bigint, cd_procedimento_p bigint, cd_material_p bigint, dt_referencia_p timestamp, ds_procedimento_p text) RETURNS bigint AS $body$
BEGIN
	
	if (ie_tipo_regra_p = 'N') then
		select	sum(x.qt_item)
		into STRICT	current_setting('pls_indicadores_idss_pck.vl_numerador_w')::pls_conta_proc.vl_liberado%type
		from (SELECT	c.vl_liberado vl_liberado,
				c.qt_procedimento qt_item,
				i.nr_idade_minima nr_idade_minima,
				i.nr_idade_maxima nr_idade_maxima,
				trunc(pkg_date_utils.get_DiffDate(f.dt_nascimento, current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp, 'YEAR')) qt_idade_seg
			from	pls_protocolo_conta a,
				pls_conta b,
				pls_conta_proc c,
				pls_segurado s,
				pessoa_fisica f,
				pls_indic_regra r,
				pls_indic_regra_item i
			where	a.nr_sequencia = b.nr_seq_protocolo
			and	b.nr_sequencia = c.nr_seq_conta
			and	s.nr_sequencia = b.nr_seq_segurado
			and	s.cd_pessoa_fisica = f.cd_pessoa_fisica
			and	i.nr_seq_regra = r.nr_sequencia
			and 	c.cd_procedimento = i.cd_procedimento
			and	r.nr_sequencia = nr_seq_regra_p
			and	i.ie_tipo_regra = 'N'
			and	c.cd_procedimento = cd_procedimento_p
			and	pkg_date_utils.start_of(a.dt_mes_competencia,'MONTH') = current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp
			
union all

			SELECT	c.vl_liberado vl_liberado,
				c.qt_material qt_item,
				i.nr_idade_minima nr_idade_minima,
				i.nr_idade_maxima nr_idade_maxima,
				trunc(pkg_date_utils.get_DiffDate(f.dt_nascimento, current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp, 'YEAR')) qt_idade_seg
			from	pls_protocolo_conta a,
				pls_conta b,
				pls_conta_mat c,
				pls_segurado s,
				pessoa_fisica f,
				pls_indic_regra r,
				pls_indic_regra_item i
			where	a.nr_sequencia = b.nr_seq_protocolo
			and	b.nr_sequencia = c.nr_seq_conta
			and	s.nr_sequencia = b.nr_seq_segurado
			and	s.cd_pessoa_fisica = f.cd_pessoa_fisica
			and	i.nr_seq_regra = r.nr_sequencia
			and	c.cd_material = i.cd_material
			and	r.nr_sequencia = nr_seq_regra_p
			and	i.ie_tipo_regra = 'N'
			and	c.cd_material = cd_material_p
			and	pkg_date_utils.start_of(a.dt_mes_competencia,'MONTH') = current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp)x
		where	x.qt_idade_seg between coalesce(x.nr_idade_minima,x.qt_idade_seg) and coalesce(x.nr_idade_maxima,x.qt_idade_seg);
		
		PERFORM set_config('pls_indicadores_idss_pck.vl_retorno_w', current_setting('pls_indicadores_idss_pck.vl_numerador_w')::pls_conta_proc.vl_liberado%type, false);
		
	elsif (ie_tipo_regra_p = 'D') then
	
		select	sum(x.qt_item)
		into STRICT	current_setting('pls_indicadores_idss_pck.vl_denominador_w')::pls_conta_proc.vl_liberado%type
		from (SELECT	c.vl_liberado vl_liberado,
				c.qt_procedimento qt_item,
				i.nr_idade_minima nr_idade_minima,
				i.nr_idade_maxima nr_idade_maxima,
				trunc(pkg_date_utils.get_DiffDate(f.dt_nascimento, current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp, 'YEAR')) qt_idade_seg
			from	pls_protocolo_conta a,
				pls_conta b,
				pls_conta_proc c,
				pls_segurado s,
				pessoa_fisica f,
				pls_indic_regra r,
				pls_indic_regra_item i
			where	a.nr_sequencia = b.nr_seq_protocolo
			and	b.nr_sequencia = c.nr_seq_conta
			and	s.nr_sequencia = b.nr_seq_segurado
			and	s.cd_pessoa_fisica = f.cd_pessoa_fisica
			and	i.nr_seq_regra = r.nr_sequencia
			and 	c.cd_procedimento = i.cd_procedimento
			and	r.nr_sequencia = nr_seq_regra_p
			and	i.ie_tipo_regra = 'D'
			and	c.cd_procedimento = cd_procedimento_p
			and	pkg_date_utils.start_of(a.dt_mes_competencia,'MONTH') = current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp
			
union all

			SELECT	c.vl_liberado vl_liberado,
				c.qt_material qt_item,
				i.nr_idade_minima nr_idade_minima,
				i.nr_idade_maxima nr_idade_maxima,
				trunc(pkg_date_utils.get_DiffDate(f.dt_nascimento, current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp, 'YEAR')) qt_idade_seg
			from	pls_protocolo_conta a,
				pls_conta b,
				pls_conta_mat c,
				pls_segurado s,
				pessoa_fisica f,
				pls_indic_regra r,
				pls_indic_regra_item i
			where	a.nr_sequencia = b.nr_seq_protocolo
			and	b.nr_sequencia = c.nr_seq_conta
			and	s.nr_sequencia = b.nr_seq_segurado
			and	s.cd_pessoa_fisica = f.cd_pessoa_fisica
			and	i.nr_seq_regra = r.nr_sequencia
			and	c.cd_material = i.cd_material
			and	r.nr_sequencia = nr_seq_regra_p
			and	i.ie_tipo_regra = 'D'
			and	c.cd_material = cd_material_p
			and	pkg_date_utils.start_of(a.dt_mes_competencia,'MONTH') = current_setting('pls_indicadores_idss_pck.dt_ref_inicio_mes_w')::timestamp)x
		where	x.qt_idade_seg between coalesce(x.nr_idade_minima,x.qt_idade_seg) and coalesce(x.nr_idade_maxima,x.qt_idade_seg);
		
		PERFORM set_config('pls_indicadores_idss_pck.vl_retorno_w', current_setting('pls_indicadores_idss_pck.vl_denominador_w')::pls_conta_proc.vl_liberado%type, false);
	end if;

	return coalesce(current_setting('pls_indicadores_idss_pck.vl_retorno_w')::bigint,0);

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_indicadores_idss_pck.pls_indic_soma_proc_mat ( ie_tipo_regra_p text, nr_seq_regra_p bigint, cd_procedimento_p bigint, cd_material_p bigint, dt_referencia_p timestamp, ds_procedimento_p text) FROM PUBLIC;
