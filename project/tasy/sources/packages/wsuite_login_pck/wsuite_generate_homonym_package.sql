-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE wsuite_login_pck.wsuite_generate_homonym ( nm_pessoa_fisica_p pessoa_fisica.nm_pessoa_fisica%type, dt_nascimento_p pessoa_fisica.dt_nascimento%type, nr_cpf_p pessoa_fisica.nr_cpf%type, cd_rfc_p pessoa_fisica.cd_rfc%type, sg_departamento_p pessoa_fisica_aux.sg_departamento%type, nr_digito_verif_p pessoa_fisica_aux.nr_digito_verif%type, nr_seq_inclusao_benef_p wsuite_solic_inclusao_pf.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finality: Insert into Homonym table possibles persons with duplicate informations.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Caution:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


nm_primeiro_nome_w 		varchar(400)   := '%' || ELIMINA_ACENTOS(upper(substr(nm_pessoa_fisica_p,1,position(' ' in nm_pessoa_fisica_p)))) || '%';
nm_sobrenome_w			varchar(400)   := '%' || ELIMINA_ACENTOS(upper(substr(nm_pessoa_fisica_p, position(' ' in nm_pessoa_fisica_p),length(nm_pessoa_fisica_p)))) || '%';
sql_from_str 			varchar(4000)	:= '';
cd_pessoa_fisica_w		varchar(10);
v_select 			integer;
v_execute 			integer;



BEGIN



if (nr_seq_inclusao_benef_p IS NOT NULL AND nr_seq_inclusao_benef_p::text <> '' AND nm_pessoa_fisica_p IS NOT NULL AND nm_pessoa_fisica_p::text <> '') then

		sql_from_str := ' select cd_pessoa_fisica
				from	pessoa_fisica
				where nm_pessoa_pesquisa like :nm_sobrenome_w '  || current_setting('wsuite_login_pck.enter_w')::varchar(2);

		if (dt_nascimento_p IS NOT NULL AND dt_nascimento_p::text <> '')then
			sql_from_str := sql_from_str  || ' and dt_nascimento = :dt_nascimento ' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
		end if;

		if (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '') then
			sql_from_str := sql_from_str || ' and nr_cpf = :nr_cpf ' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
		end if;

		if (cd_rfc_p IS NOT NULL AND cd_rfc_p::text <> '') then
			sql_from_str := sql_from_str || ' and cd_rfc = :cd_rfc ' ||current_setting('wsuite_login_pck.enter_w')::varchar(2);
		end if;

		sql_from_str := sql_from_str || 'union' || current_setting('wsuite_login_pck.enter_w')::varchar(2);

		sql_from_str := sql_from_str ||
				' select	cd_pessoa_fisica
				 from	pessoa_fisica
				 where	nm_pessoa_pesquisa like ( :nm_primeiro_nome_w ) ' ||  current_setting('wsuite_login_pck.enter_w')::varchar(2);

		if (dt_nascimento_p IS NOT NULL AND dt_nascimento_p::text <> '') then
			sql_from_str := sql_from_str || ' and dt_nascimento = :dt_nascimento ' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
		end if;

		if (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '') then
			sql_from_str := sql_from_str || ' and nr_cpf = :nr_cpf ' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
		end if;

		if (cd_rfc_p IS NOT NULL AND cd_rfc_p::text <> '') then
			sql_from_str := sql_from_str || ' and cd_rfc = :cd_rfc ' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
		end if;

		if (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '') then
			sql_from_str := sql_from_str || 'union' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
			sql_from_str := sql_from_str ||
				' select	cd_pessoa_fisica
				from	pessoa_fisica
				where nr_cpf = :nr_cpf ';
		end if;

		if (cd_rfc_p IS NOT NULL AND cd_rfc_p::text <> '') then
			sql_from_str := sql_from_str || 'union' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
			sql_from_str := sql_from_str ||
				' select	cd_pessoa_fisica
				from	pessoa_fisica
				where cd_rfc = :cd_rfc ';
		end if;
				
		/* Validation used by Bolivia */
			
		if (sg_departamento_p IS NOT NULL AND sg_departamento_p::text <> '' AND nr_digito_verif_p IS NOT NULL AND nr_digito_verif_p::text <> '') then
			sql_from_str := sql_from_str || 'union' || current_setting('wsuite_login_pck.enter_w')::varchar(2);
			sql_from_str := sql_from_str ||
				' select	cd_pessoa_fisica
				from		pessoa_fisica_aux
				where 		nr_digito_verif = :nr_digito_verif 
				and		sg_departamento = :sg_departamento ';
		end if;
		

		--Cursor for  dinamic fields

		v_select := dbms_sql.open_cursor;
		dbms_sql.parse( v_select, sql_from_str, dbms_sql.native );
		dbms_sql.define_column(v_select, 1, cd_pessoa_fisica_w,100);

		dbms_sql.bind_variable(v_select, ':nm_sobrenome_w',nm_sobrenome_w);
		dbms_sql.bind_variable(v_select, ':nm_primeiro_nome_w',nm_primeiro_nome_w);

		if (dt_nascimento_p IS NOT NULL AND dt_nascimento_p::text <> '')then
			dbms_sql.bind_variable(v_select, ':dt_nascimento',dt_nascimento_p);
		end if;

		if (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '') then
			dbms_sql.bind_variable(v_select, ':nr_cpf', nr_cpf_p);
		end if;

		if (cd_rfc_p IS NOT NULL AND cd_rfc_p::text <> '') then
			dbms_sql.bind_variable(v_select, ':cd_rfc', cd_rfc_p);
		end if;
		
		/* Validation used by Bolivia */
			
		if (sg_departamento_p IS NOT NULL AND sg_departamento_p::text <> '' AND nr_digito_verif_p IS NOT NULL AND nr_digito_verif_p::text <> '') then
			dbms_sql.bind_variable(v_select, 'nr_digito_verif', nr_digito_verif_p);
			dbms_sql.bind_variable(v_select, 'sg_departamento', sg_departamento_p);
		end if;

		v_execute:= dbms_sql.execute( v_select );

		loop
			exit when dbms_sql.fetch_rows( v_select ) = 0;

			dbms_sql.column_value(v_select,1,cd_pessoa_fisica_w);

			insert into wsuite_homonimo_pf(	nr_sequencia, nr_seq_inclusao_pf, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica )
						values (	nextval('wsuite_homonimo_pf_seq'), nr_seq_inclusao_benef_p, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p, cd_pessoa_fisica_w);

		end loop;

		dbms_sql.close_cursor( v_select );

		commit;

end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE wsuite_login_pck.wsuite_generate_homonym ( nm_pessoa_fisica_p pessoa_fisica.nm_pessoa_fisica%type, dt_nascimento_p pessoa_fisica.dt_nascimento%type, nr_cpf_p pessoa_fisica.nr_cpf%type, cd_rfc_p pessoa_fisica.cd_rfc%type, sg_departamento_p pessoa_fisica_aux.sg_departamento%type, nr_digito_verif_p pessoa_fisica_aux.nr_digito_verif%type, nr_seq_inclusao_benef_p wsuite_solic_inclusao_pf.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;
