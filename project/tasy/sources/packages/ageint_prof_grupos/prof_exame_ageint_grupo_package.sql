-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ageint_prof_grupos.prof_exame_ageint_grupo ( nr_seq_age_int_p bigint, nr_seq_proc_interno_p bigint) RETURNS SETOF INFO_PROFESSIONAL_REC_TABLE AS $body$
DECLARE


qt_idade_w		smallint;
dt_nascimento_w		timestamp;
cd_pessoa_fisica_w	varchar(10);
ie_estab_usuario_w	varchar(1);
cd_estabelecimento_w	smallint;
ie_perm_agenda_w	varchar(1)	:= 'S';
info_professional_w info_professional_table;
nm_pessoa_fisica_sem_acento_w pessoa_fisica.nm_pessoa_fisica_sem_acento%type;

C01 CURSOR FOR
	SELECT	distinct a.cd_medico,
		c.cd_estabelecimento
	from    agenda c,
		agenda_medico a
	where Obter_Se_Ageint_Item_Trigger(a.cd_agenda, nr_seq_age_int_p, c.cd_estabelecimento, nr_seq_proc_interno_p, null, null, a.cd_medico, null, null, null, qt_idade_w) = 'S'
	and	c.cd_agenda = a.cd_agenda
	and	coalesce(c.ie_agenda_integrada,'N')	= 'S'
	and a.ie_situacao = 'A'
	and	c.ie_situacao = 'A'
	and	c.cd_tipo_Agenda = 2
  and (a.cd_medico IS NOT NULL AND a.cd_medico::text <> '')
	and	((qt_idade_w	>= coalesce(qt_idade_min,0)
	and	qt_idade_w	<= coalesce(qt_idade_max,999))
	or	qt_idade_w = 0);

BEGIN

ie_estab_usuario_w	:= coalesce(Obter_Valor_Param_Usuario(869, 1, obter_perfil_ativo, obter_usuario_ativo, cd_estabelecimento_w), 'S');

select cd_pessoa_fisica,
  dt_nascimento,
  cd_estabelecimento
into STRICT cd_pessoa_fisica_w,
 dt_nascimento_w,
 cd_estabelecimento_w
from agenda_integrada
where	nr_sequencia = nr_seq_age_int_p;

if (coalesce(dt_nascimento_w::text, '') = '' and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')) then

    select max(dt_nascimento)
    into STRICT    dt_nascimento_w
    from    pessoa_fisica
    where   cd_pessoa_fisica    = cd_pessoa_fisica_w;

end if;

qt_idade_w := obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

for r_c01 in C01 loop

  ie_perm_agenda_w := 'S';
  if (ie_estab_usuario_w	= 'S') or (ie_estab_usuario_w	= 'C') then

    if (r_c01.cd_estabelecimento	<> cd_estabelecimento_w) then
      ie_perm_agenda_w	:= 'N';
    end if;
  elsif (ie_estab_usuario_w	= 'N') or (ie_estab_usuario_w	= 'T') then

    select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
    into STRICT	ie_perm_agenda_w
    from	usuario_estabelecimento
    where	nm_usuario_param	= obter_usuario_ativo
    and	cd_estabelecimento	= r_c01.cd_estabelecimento;

  end if;

  if (ie_perm_agenda_w	= 'S') then
    select max(nm_pessoa_fisica_sem_acento)
    into STRICT nm_pessoa_fisica_sem_acento_w
    from pessoa_fisica
    where cd_pessoa_fisica = r_c01.cd_medico;

    info_professional_w[r_c01.cd_medico].cd_pessoa_fisica := r_c01.cd_medico;
    info_professional_w[r_c01.cd_medico].nm_pessoa_fisica := obter_nome_pf(r_c01.cd_medico);
    info_professional_w[r_c01.cd_medico].ie_sexo := obter_sexo_pf(r_c01.cd_medico, 'C');
    info_professional_w[r_c01.cd_medico].nm_pessoa_fisica_sem_acento := nm_pessoa_fisica_sem_acento_w;
    RETURN NEXT info_professional_w(r_c01.cd_medico);
  end if;

end loop;
return;
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ageint_prof_grupos.prof_exame_ageint_grupo ( nr_seq_age_int_p bigint, nr_seq_proc_interno_p bigint) FROM PUBLIC;
