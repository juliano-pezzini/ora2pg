-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
	/*				*
	*	ACTIV GROUP FACTS		*
	*				*/

	


CREATE OR REPLACE PROCEDURE hdm_indic_pck.populate_ft_activ_group () AS $body$
DECLARE

	c_group_data CURSOR(dt_start_pc timestamp, dt_end_pc timestamp) FOR
		SELECT	age.nr_sequencia nr_seq_schedule,
			age.dt_agendamento dt_scheduled,
			age.dt_agenda dt_begin,
			age.dt_final_agenda dt_end,
			(mprev_obter_dados_agenda_turma(age.nr_seq_turma,age.nr_sequencia,'E'))::numeric  qt_expected,
			(	SELECT	count(1) 
				from	mprev_grupo_turma_partic x
				where	clock_timestamp() >= dt_entrada
				and (coalesce(dt_saida::text, '') = '' or clock_timestamp() <= dt_saida)
				and	x.nr_seq_turma = tur.nr_sequencia ) qt_real,
			(case	when age.dt_agenda = (	select	min(dt_agenda) 
							from	mprev_agendamento
							where	nr_seq_turma = tur.nr_sequencia) then 'S'
				else 'N'
			 end) si_first_encounter,
			(case	when age.dt_agenda = (	select	max(dt_agenda)
							from	mprev_agendamento
							where	nr_seq_turma = tur.nr_sequencia) then 'S'
				else 'N'
			 end) si_last_encounter,
			(
				(	select	count(1) 
					from	mprev_agendamento x,
						mprev_sel_partic_agenda y  
					where	y.ie_selecionado = 'S'
					and	x.dt_agenda < clock_timestamp()
					and	y.nr_seq_participante = sel.nr_seq_participante
					and	x.nr_seq_turma = tur.nr_sequencia
					and	x.nr_sequencia = y.nr_seq_agendamento) /
				(	select	count(1)
					from	mprev_agendamento
					where	nr_seq_turma = tur.nr_sequencia) * 100
			) pr_conclusion,
			(	select	count(1)
				from	mprev_agendamento x
				where	x.dt_agenda > (	select	max(dt_agenda)
							from	mprev_agendamento
							where	nr_seq_turma = tur.nr_sequencia) 
				and	x.nr_seq_participante = sel.nr_seq_participante
			) qt_individual_after,
			coalesce(ate.ie_forma_atendimento,'0') si_form,
			coalesce(ate.ie_individual_coletivo,'0') si_type,
			coalesce((	select	mprev_obter_dados_agenda(z.cd_agenda, 'NM')
				from	mprev_local_atend_agenda z
				where	exists (select	1
						from	mprev_agendamento a,
							agenda b 
						where	b.cd_agenda = z.cd_agenda
						and	a.nr_seq_mprev_atend = ate.nr_sequencia
						and	a.cd_agenda = b.cd_agenda)),wheb_mensagem_pck.get_texto(383299)) nm_place,
			age.ie_status_agenda si_status,
			coalesce(age.nr_seq_motivo_canc,0) nr_reason_cancel,
			CASE WHEN coalesce(age.dt_confirmacao::text, '') = '' THEN  'N'  ELSE 'S' END  si_confirmed,
			CASE WHEN age.ie_status_agenda='C' THEN  'S'  ELSE 'N' END  si_cancelled,
			(select cd_pessoa_fisica from mprev_participante where nr_sequencia = sel.nr_seq_participante) nr_dif_person,
			sel.ie_selecionado si_present
		FROM mprev_grupo_col_turma tur, mprev_sel_partic_agenda sel, mprev_grupo_col_turma_hor hor, mprev_agendamento age
LEFT OUTER JOIN mprev_atendimento ate ON (age.nr_seq_mprev_atend = ate.nr_sequencia)
WHERE age.dt_agendamento between dt_start_pc and dt_end_pc and age.nr_sequencia = sel.nr_seq_agendamento and tur.nr_sequencia = age.nr_seq_turma and tur.nr_sequencia = hor.nr_seq_turma and hor.nr_sequencia = age.nr_seq_horario_turma;
	
BEGIN
		for r_c_group_data in c_group_data( current_setting('hdm_indic_pck.dt_start_w')::timestamp, current_setting('hdm_indic_pck.dt_end_w')::timestamp) loop
			insert into hdm_indic_ft_group_act(	nr_sequencia,
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_seq_day_scheduled, 
					nr_seq_month_scheduled, 
					nr_seq_day_begin, 
					nr_seq_day_end, 
					qt_expected, 
					qt_real, 
					si_first_encounter, 
					si_last_encounter, 
					pr_conclusion, 
					qt_individual_after, 
					nr_seq_app_detail, 
					nr_dif_person,
					ds_unique,
					si_present,
					nr_seq_schedule)
			values (nextval('hdm_indic_ft_group_act_seq'),
				clock_timestamp(),
				current_setting('hdm_indic_pck.nm_usuario_w')::usuario.nm_usuario%type,
				clock_timestamp(),
				current_setting('hdm_indic_pck.nm_usuario_w')::usuario.nm_usuario%type,
				(	SELECT	x.nr_sequencia
					from	hdm_indic_dm_day x
					where	x.dt_complete_date = pkg_date_utils.start_of(r_c_group_data.dt_scheduled,'DD', 0)),
				(	select	x.nr_sequencia
					from	hdm_indic_dm_month x
					where	x.dt_complete_date = pkg_date_utils.start_of(r_c_group_data.dt_scheduled,'MONTH', 0)),
				(	select	x.nr_sequencia
					from	hdm_indic_dm_day x
					where	x.dt_complete_date = pkg_date_utils.start_of(r_c_group_data.dt_begin,'DD', 0)),
				(	select	x.nr_sequencia
					from	hdm_indic_dm_day x
					where	x.dt_complete_date = pkg_date_utils.start_of(r_c_group_data.dt_end,'DD', 0)),
				r_c_group_data.qt_expected,
				r_c_group_data.qt_real,
				r_c_group_data.si_first_encounter,
				r_c_group_data.si_last_encounter,
				r_c_group_data.pr_conclusion,
				r_c_group_data.qt_individual_after,
				hdm_indic_pck.get_app_detail(	r_c_group_data.si_form, 
						r_c_group_data.si_type, 
						r_c_group_data.nm_place, 
						r_c_group_data.si_status, 
						r_c_group_data.nr_reason_cancel, 
						r_c_group_data.si_confirmed, 
						r_c_group_data.si_cancelled),
				r_c_group_data.nr_dif_person,
				current_setting('hdm_indic_pck.ds_unique_w')::varchar(255),
				r_c_group_data.si_present,
				r_c_group_data.nr_seq_schedule);
			
			if (current_setting('hdm_indic_pck.qt_record_w')::integer >= current_setting('hdm_indic_pck.qt_rec_commit_w')::integer) then
				commit;
				PERFORM set_config('hdm_indic_pck.qt_record_w', 0, false);
			end if;
			PERFORM set_config('hdm_indic_pck.qt_record_w', current_setting('hdm_indic_pck.qt_record_w')::integer + 1, false);
		end loop;
		
		commit;

		CALL hdm_indic_pck.link_activ_group_with_ag_fact();
		CALL hdm_indic_pck.link_program_with_ag_fact();
		CALL hdm_indic_pck.link_professional_with_ag_fact();
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hdm_indic_pck.populate_ft_activ_group () FROM PUBLIC;
