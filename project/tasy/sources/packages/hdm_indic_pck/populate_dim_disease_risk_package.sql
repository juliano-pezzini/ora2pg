-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE hdm_indic_pck.populate_dim_disease_risk () AS $body$
DECLARE

	c_disease_risk CURSOR FOR
		SELECT	a.nr_sequencia,	
			a.cd_doenca_cid
		from	hdm_indic_dm_risk_disease b,
			diagnostico_interno a
		where	a.ds_diagnostico = b.nm_disease_risk;WITH RECURSIVE cte AS (

	c_icd_list CURSOR(nr_seq_diagnostico_pc bigint, cd_doenca_cid_pc text) FOR
		SELECT	',' || cd_doenca_cid_pc || max(cd_doenca_cid) || ','  ds_icd_list
		from (	SELECT cd_doenca_cid,
					row_number() over (order by nr_sequencia) as fila
				from	diagnostico_int_cid_adic
				where	nr_seq_diagnostico = nr_seq_diagnostico_pc) alias5 WHERE fila = 1
  UNION ALL

	c_icd_list CURSOR(nr_seq_diagnostico_pc bigint, cd_doenca_cid_pc text) FOR
		SELECT	c.ds_icd_list || ',' || ',' || cd_doenca_cid_pc || max(cd_doenca_cid) || ','  ds_icd_list
		from (	SELECT cd_doenca_cid, 
					row_number() over (order by nr_sequencia) as fila
				from	diagnostico_int_cid_adic
				where	nr_seq_diagnostico = nr_seq_diagnostico_pc) JOIN cte c ON (c.prior fila = alias5.(fila-1))

) SELECT * FROM cte WHERE connect_by_isleaf = 1;
;
	
BEGIN
		merge into hdm_indic_dm_risk_disease y
		using(	SELECT	a.nr_sequencia nr_seq_diagnosis,
				a.cd_doenca_cid cd_cid,
				a.ds_diagnostico nm_disease_risk,
				substr(coalesce(a.ie_utilizacao,'A'),1,1) si_type,
				CASE WHEN a.ie_utilizacao='FR' THEN  wheb_mensagem_pck.get_texto(358489) WHEN a.ie_utilizacao='DI' THEN  wheb_mensagem_pck.get_texto(358490) WHEN a.ie_utilizacao='A' THEN  wheb_mensagem_pck.get_texto(358491)  ELSE wheb_mensagem_pck.get_texto(358492) END  ds_type,
				'N' si_without_disease
			from	diagnostico_interno a
			/* Without disease */


			
union all

			SELECT	null nr_seq_diagnosis,
				null cd_cid,
				wheb_mensagem_pck.get_texto(358497) nm_disease_risk,
				'A' si_type,
				wheb_mensagem_pck.get_texto(358492) ds_type,
				'S' si_without_disease
			
			) x
		on (	y.nm_disease_risk = x.nm_disease_risk and
			y.si_type = x.si_type)
		when not matched then
			insert(y.nr_sequencia,
				y.dt_atualizacao, 
				y.nm_usuario, 
				y.dt_atualizacao_nrec, 
				y.nm_usuario_nrec, 
				y.si_type, 
				y.nm_disease_risk, 
				y.ds_icd_list, 
				y.ds_type)
			values (CASE WHEN x.si_without_disease='S' THEN  0  ELSE nextval('hdm_indic_dm_risk_disease_seq') END ,
				clock_timestamp(),
				current_setting('hdm_indic_pck.nm_usuario_w')::usuario.nm_usuario%type,
				clock_timestamp(),
				current_setting('hdm_indic_pck.nm_usuario_w')::usuario.nm_usuario%type,
				x.si_type,
				x.nm_disease_risk,
				null,
				x.ds_type);
		commit;
		
		for r_c_disease_risk in c_disease_risk loop
			for r_c_icd_list in c_icd_list(r_c_disease_risk.nr_sequencia, r_c_disease_risk.cd_doenca_cid) loop
				update	hdm_indic_dm_risk_disease
				set	ds_icd_list = SUBSTR(r_c_icd_list.ds_icd_list,1,255)
				where	nr_sequencia = r_c_disease_risk.nr_sequencia;
			end loop;
		end loop;
		commit;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hdm_indic_pck.populate_dim_disease_risk () FROM PUBLIC;
