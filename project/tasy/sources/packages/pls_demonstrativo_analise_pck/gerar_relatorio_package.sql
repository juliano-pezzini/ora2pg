-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_demonstrativo_analise_pck.gerar_relatorio ( nr_seq_protocolo_p pls_relatorio_analise.nr_sequencia%type, nr_seq_prestador_pag_p pls_relatorio_analise.nr_seq_prestador%type, nr_seq_usuario_web_p pls_regra_demons_analise.nr_seq_usuario%type, nm_usuario_p usuario.nm_usuario%type, ie_gera_novo_p text, nr_seq_relatorio_p INOUT pls_relatorio_analise.nr_sequencia%type, nr_seq_relatorio_ws_p INOUT pls_relatorio_analise_ws.nr_sequencia%type, ie_rec_glosa_p text default 'N') AS $body$
BEGIN

-- busca o parametro para saber que tipo de prestador sera utilizado no relatorio

select	max(ie_prest_demonstrativo)
into STRICT	current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type
from	pls_web_param_geral;

-- se nao estiver configurado, seta o prestador do atendimento como padrao

if (current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%coalesce(type::text, '') = '') then
	PERFORM set_config('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w', 'PA', false);
end if;

--Salva o tipo de visualizacao original do demonstrativo

PERFORM set_config('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_orig_w', current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type, false);

-- se for chamada de webservice, nao tera o nr_seq_usuario_web_p, desta forma, sera considerado sempre como se fosse prestador de pagamento.

if (coalesce(nr_seq_usuario_web_p,0) = 0) then
	PERFORM set_config('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w', 'PP', false);
end if;

-- se o parametro estiver configurado para buscar o prestador do pagamento

-- e o mesmo nao for informado, gera uma excecao

if (current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type = 'PP' and coalesce(nr_seq_prestador_pag_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(322111);
end if;

-- se for para buscar o prestador do atendimento faz select no protocolo, 

-- senao pega o que foi passado de parametro

if (current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type = 'PA') then
	
	if ie_rec_glosa_p = 'N' then

		select	max(nr_seq_prestador)
		into STRICT	current_setting('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w')::pls_prestador.nr_sequencia%type
		from	pls_protocolo_conta
		where	nr_sequencia = nr_seq_protocolo_p;
	else
		select	max(nr_seq_prestador)
		into STRICT	current_setting('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w')::pls_prestador.nr_sequencia%type
		from	pls_rec_glosa_protocolo
		where	nr_sequencia = nr_seq_protocolo_p;

  	end if;
	
	-- se nao conseguiu achar o prestador do atendimento gera uma excecao

	if (current_setting('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w')::pls_prestador.nr_sequencia%coalesce(type::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(322115, 'PROTOCOLO=' || nr_seq_protocolo_p);
	end if;
else	
	PERFORM set_config('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w', nr_seq_prestador_pag_p, false);
end if;

CALL pls_demonstrativo_analise_pck.atualizar_regras_demonstrativo(current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type,current_setting('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w')::pls_prestador.nr_sequencia%type,nr_seq_usuario_web_p);

--Asume como o prestador de pagamento da regra

if (current_setting('pls_demonstrativo_analise_pck.dados_regra_demonstrativo_w')::dados_regra_demons_analise.ie_restringe_prest_vinc = 'S') and (current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type = 'PA') then
	PERFORM set_config('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w', 'PP', false);
end if;

-- verifica se ja existe relatorio

select	max(nr_sequencia)
into STRICT	nr_seq_relatorio_p
from	pls_relatorio_analise
where	ie_tipo_prestador	= current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type
and	nr_seq_protocolo	= nr_seq_protocolo_p
and	nr_seq_prestador	= current_setting('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w')::pls_prestador.nr_sequencia%type;

-- se nao existe entao cria o registro caso o parametro permitir

if (ie_gera_novo_p = 'S') then

	if (coalesce(nr_seq_relatorio_p::text, '') = '') then

		insert into pls_relatorio_analise(	
			nr_sequencia, ie_tipo_prestador, nr_seq_protocolo,
			nr_seq_prestador, nm_usuario, dt_atualizacao,
			nm_usuario_nrec, dt_atualizacao_nrec
		) values (	nextval('pls_relatorio_analise_seq'), current_setting('pls_demonstrativo_analise_pck.ie_prest_demonstrativo_gl_w')::pls_web_param_geral.ie_prest_demonstrativo%type, nr_seq_protocolo_p,
				current_setting('pls_demonstrativo_analise_pck.nr_seq_prestador_rel_gl_w')::pls_prestador.nr_sequencia%type, nm_usuario_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp()
		) returning nr_sequencia into nr_seq_relatorio_p;
		
		commit;

	end if;
	
	
	if (coalesce(nm_usuario_p,'TASY') = 'WEBSERVICE') then
		insert into pls_relatorio_analise_ws(	nr_sequencia, nm_usuario, dt_atualizacao,nm_usuario_nrec, dt_atualizacao_nrec,
				nr_seq_relatorio)
		values (	nextval('pls_relatorio_analise_ws_seq'),nm_usuario_p, clock_timestamp(),nm_usuario_p, clock_timestamp(),
				nr_seq_relatorio_p
		) returning nr_sequencia into nr_seq_relatorio_ws_p;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_demonstrativo_analise_pck.gerar_relatorio ( nr_seq_protocolo_p pls_relatorio_analise.nr_sequencia%type, nr_seq_prestador_pag_p pls_relatorio_analise.nr_seq_prestador%type, nr_seq_usuario_web_p pls_regra_demons_analise.nr_seq_usuario%type, nm_usuario_p usuario.nm_usuario%type, ie_gera_novo_p text, nr_seq_relatorio_p INOUT pls_relatorio_analise.nr_sequencia%type, nr_seq_relatorio_ws_p INOUT pls_relatorio_analise_ws.nr_sequencia%type, ie_rec_glosa_p text default 'N') FROM PUBLIC;
