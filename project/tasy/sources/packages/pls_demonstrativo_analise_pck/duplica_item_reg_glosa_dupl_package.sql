-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_demonstrativo_analise_pck.duplica_item_reg_glosa_dupl ( nr_seq_versao_p pls_rel_an_conta.nr_seq_versao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_recriar_pag_cont_w		dbms_sql.number_table;
nr_pagina_w			pls_rel_an_pagina.nr_pagina%type;
nr_seq_an_pagina_w		pls_rel_an_pagina.nr_sequencia%type;

--Busca todos os itens com valor de glosa

current_setting('pls_demonstrativo_analise_pck.c01')::CURSOR( CURSOR( nr_seq_versao_pc	pls_rel_an_conta.nr_seq_versao%type) FOR
	SELECT	a.nr_sequencia nr_seq_item,
		a.cd_glosa,
		a.nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		a.nr_seq_an_conta
	from	pls_rel_an_conta	b,
		pls_rel_an_itens	a
	where	a.nr_seq_an_conta	= b.nr_sequencia
	and	b.nr_seq_versao		= nr_seq_versao_pc
	and	a.vl_glosa		> 0;

--Verifica se para o item tem uma outra glosa do que ja esta na atual

current_setting('pls_demonstrativo_analise_pck.c02')::CURSOR( CURSOR( 	nr_seq_conta_proc_pc	pls_rel_an_itens.nr_seq_conta_proc%type,
		nr_seq_conta_mat_pc	pls_rel_an_itens.nr_seq_conta_mat%type,
		cd_glosa_pc		pls_rel_an_itens.cd_glosa%type) FOR
	SELECT	a.cd_motivo_tiss
	from	pls_conta_glosa		b,
		tiss_motivo_glosa	a
	where	b.nr_seq_motivo_glosa	= a.nr_sequencia
	and	b.nr_seq_conta_proc	= nr_seq_conta_proc_pc
	and	a.cd_motivo_tiss	<> cd_glosa_pc
	and	b.ie_situacao		!= 'I'
	and	coalesce(nr_seq_conta_mat_pc::text, '') = ''
	
union all

	SELECT	a.cd_motivo_tiss
	from	pls_conta_glosa		b,
		tiss_motivo_glosa	a
	where	b.nr_seq_motivo_glosa	= a.nr_sequencia
	and	b.nr_seq_conta_mat	= nr_seq_conta_mat_pc
	and	a.cd_motivo_tiss	<> cd_glosa_pc
	and	b.ie_situacao		!= 'I'
	and	coalesce(nr_seq_conta_proc_pc::text, '') = '';
	
--Duplica todos os itens da conta

current_setting('pls_demonstrativo_analise_pck.c03')::CURSOR( CURSOR( nr_seq_an_conta_pc	pls_rel_an_itens.nr_seq_an_conta%type) FOR
	SELECT	nr_sequencia
	from	pls_rel_an_itens
	where	nr_seq_an_conta	= nr_seq_an_conta_pc
	order by ds_item, nr_seq_conta_proc, nr_seq_conta_mat;

BEGIN

for r_c01_w in current_setting('pls_demonstrativo_analise_pck.c01')::CURSOR( (nr_seq_versao_p) loop

	for r_c02_w in current_setting('pls_demonstrativo_analise_pck.c02')::CURSOR( (r_c01_w.nr_seq_conta_proc,r_c01_w.nr_seq_conta_mat,r_c01_w.cd_glosa) loop
	
		--Armazena a conta com o item duplicado para depois recriar a pagina

		if (not tb_recriar_pag_cont_w.exists(r_c01_w.nr_seq_an_conta)) then
			tb_recriar_pag_cont_w(r_c01_w.nr_seq_an_conta) := r_c01_w.nr_seq_an_conta;
		end if;
		
		insert into pls_rel_an_itens(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_an_conta,nr_seq_an_pagina,dt_item,cd_tabela,cd_procedimento,
				ds_item,cd_grau_partic,vl_informado,qt_executada,vl_processado,
				vl_liberado,vl_glosa,cd_glosa, nr_seq_conta_proc, nr_seq_conta_mat,
				ie_item_duplicado)
		(	SELECT	nextval('pls_rel_an_itens_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_an_conta,nr_seq_an_pagina,dt_item,cd_tabela,cd_procedimento,
				substr(ds_item,1,35) || ' *Item com mais de 1 glosa',cd_grau_partic,vl_informado,qt_executada,vl_processado,
				vl_liberado,vl_glosa,r_c02_w.cd_motivo_tiss, nr_seq_conta_proc, nr_seq_conta_mat,
				'S'
			from	pls_rel_an_itens
			where	nr_sequencia	= r_c01_w.nr_seq_item);
				
	end loop;
	
end loop;

if (tb_recriar_pag_cont_w.count > 0) then

	for i in tb_recriar_pag_cont_w.first .. tb_recriar_pag_cont_w.last loop

		nr_pagina_w	:= 1;
		
		--Limpa toda as paginas dos itens

		update	pls_rel_an_itens
		set	nr_seq_an_pagina	 = NULL
		where	nr_seq_an_conta		= i;
		
		--Deleta todas as paginas

		delete	FROM pls_rel_an_pagina
		where	nr_seq_an_conta		= i;
		
		--Recria a primeira pagina

		insert into	pls_rel_an_pagina(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_an_conta,nr_pagina)
		values (	nextval('pls_rel_an_pagina_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				i,nr_pagina_w)
		returning nr_sequencia into nr_seq_an_pagina_w;
		
		for r_c03_w in current_setting('pls_demonstrativo_analise_pck.c03')::CURSOR( (i) loop
			
			--Coloca a pagina para o item

			update	pls_rel_an_itens
			set	nr_seq_an_pagina	= nr_seq_an_pagina_w
			where	nr_sequencia		= r_c03_w.nr_sequencia;
			
			if	(mod(current_setting('pls_demonstrativo_analise_pck.c03')::CURSOR(%rowCount,17) = 0) then	
			
				nr_pagina_w	:= nr_pagina_w + 1;
			
				insert into	pls_rel_an_pagina(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_an_conta,nr_pagina)
				values (	nextval('pls_rel_an_pagina_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						i,nr_pagina_w)
				returning nr_sequencia into nr_seq_an_pagina_w;
			end if;
		end loop;
		
		--Deleta a pagina senao houve nenhum item para ela

		delete	FROM pls_rel_an_pagina	a
		where	nr_sequencia	= nr_seq_an_pagina_w
		and	not exists ( SELECT	1
				from	pls_rel_an_itens x
				where	x.nr_seq_an_pagina	= a.nr_sequencia);
				

	end loop;
end if;
end;



$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_demonstrativo_analise_pck.duplica_item_reg_glosa_dupl ( nr_seq_versao_p pls_rel_an_conta.nr_seq_versao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
