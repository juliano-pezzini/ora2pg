-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_demonstrativo_analise_pck.gerar_versao_relatorio ( nr_seq_relatorio_p pls_relatorio_analise.nr_sequencia%type, nr_seq_relatorio_ws_p pls_relatorio_analise_ws.nr_sequencia%type, nr_seq_protocolo_p pls_relatorio_analise.nr_sequencia%type, nr_seq_demonstrativo_p w_tiss_demonstra_retorno.nr_sequencia%type, ie_local_solicitacao_p pls_rel_an_versao.ie_local_solicitacao%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_versao_rel_p INOUT pls_rel_an_versao.nr_sequencia%type, ie_rec_glosa_p text default 'N') AS $body$
DECLARE

					
cd_estabelecimento_w			pls_web_param_geral.cd_estabelecimento%type;
cd_ans_w				pls_rel_an_versao.cd_ans%type;
ds_operadora_w				pls_rel_an_versao.ds_operadora%type;
cd_cgc_operadora_w			pls_rel_an_versao.cd_cgc_operadora%type;
nr_seq_lote_w				pls_rel_an_versao.nr_seq_lote%type;
nr_seq_prestador_w			pls_relatorio_analise.nr_seq_prestador%type;
nr_seq_prestador_aux_w			pls_rel_an_versao.nr_seq_prestador%type;
nm_local_w				pls_rel_an_versao.nm_local%type;
cd_cnes_w				pls_rel_an_versao.cd_cnes%type;
dt_protocolo_w				pls_rel_an_versao.dt_protocolo%type;
cd_situacao_protocolo_w			pls_rel_an_versao.cd_situacao_protocolo%type;
nr_seq_versao_rel_w			pls_rel_an_versao.nr_sequencia%type;
ie_tipo_prestador_w			pls_relatorio_analise.ie_tipo_prestador%type;
vl_informado_w				pls_rel_an_versao.vl_informado%type;
vl_processado_w				pls_rel_an_versao.vl_processado%type;
vl_liberado_w				pls_rel_an_versao.vl_liberado%type;
vl_glosa_w				pls_rel_an_versao.vl_glosa%type;
ie_tipo_relatorio_w			pls_rel_an_versao.ie_tipo_relatorio%type;
qt_registros_w				integer;
ie_rec_glosa_w        			w_tiss_demonstra_ret_itens.ie_rec_glosa%type;

current_setting('pls_demonstrativo_analise_pck.c01')::CURSOR( CURSOR FOR
	SELECT	nr_sequencia nr_seq_protocolo,
		'N' ie_rec_glosa
	from	pls_protocolo_conta
	where	nr_sequencia		= nr_seq_protocolo_p
	and	(nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '')
	
union all

	SELECT	nr_seq_protocolo,
		coalesce(ie_rec_glosa,'N') ie_rec_glosa
	from	w_tiss_demonstra_ret_itens
	where	nr_seq_demonstra_ret	= nr_seq_demonstrativo_p
	and	(nr_seq_demonstrativo_p IS NOT NULL AND nr_seq_demonstrativo_p::text <> '');
						
BEGIN

/*Busca o estabelecimento da operadora*/


select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	pls_web_param_geral;

/*Caso nao tiver, busca da outorgante*/


if (coalesce(cd_estabelecimento_w::text, '') = '') then
	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_outorgante;
end if;

/*Busca os dados da operadora*/


select	cd_cgc_outorgante,
	cd_ans,
	substr(obter_nome_pf_pj('',cd_cgc_outorgante),1,255)
into STRICT	cd_cgc_operadora_w,
	cd_ans_w,
	ds_operadora_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_w;

select	nr_seq_prestador,
	ie_tipo_prestador
into STRICT	nr_seq_prestador_w,
	ie_tipo_prestador_w
from	pls_relatorio_analise
where	nr_sequencia	= nr_seq_relatorio_p;

/*Busca os dados do prestador*/


nm_local_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_w,'N'),1,70);
cd_cnes_w		:= coalesce(substr(pls_obter_cnes_prestador(nr_seq_prestador_w),1,40),'9999999');
nr_seq_prestador_aux_w	:= coalesce(substr(pls_obter_dados_prestador(nr_seq_prestador_w,'CD'),1,255),nr_seq_prestador_w);
nm_local_w		:= ptu_somente_caracter_permitido(nm_local_w, 'TISS');

for r_c01_w in current_setting('pls_demonstrativo_analise_pck.c01')::CURSOR( loop
	
  -- e nao for recurso de glosa

	if r_c01_w.ie_rec_glosa = 'N' then

		/*Busca os dados do protocolo*/


		select	dt_protocolo,
			ie_status,
			nr_protocolo_prestador
		into STRICT	dt_protocolo_w,
			cd_situacao_protocolo_w,
			nr_seq_lote_w
		from	pls_protocolo_conta
		where	nr_sequencia = r_c01_w.nr_seq_protocolo;

		if (cd_situacao_protocolo_w not in ('1','4')) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_conta_medica_resumo
			where	nr_seq_protocolo	= r_c01_w.nr_seq_protocolo
			and	ie_situacao		!= 'I';

			if (qt_registros_w = 0) then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_protocolo_conta
				where	nr_seq_prot_referencia	= r_c01_w.nr_seq_protocolo;

				if (qt_registros_w > 0) then
					/*Busca o status do protocolo referencia*/


					select	max(ie_status)
					into STRICT	cd_situacao_protocolo_w
					from	pls_protocolo_conta
					where	nr_seq_prot_referencia = r_c01_w.nr_seq_protocolo;
				end if;
			end if;
		end if;

		ie_tipo_relatorio_w	:= 'A';

		/*Busca os valores do protocolo caso a visualizacao seja por prestador de atendimento*/


		if (ie_tipo_prestador_w = 'PA') then
			if (cd_situacao_protocolo_w in ('3','4','6')) then
				ie_tipo_relatorio_w	:= 'F';
			end if;
		end if;
	else
		/*Busca os dados do protocolo*/


		select	rec.dt_competencia_lote,
			rec.ie_status,
			rec.nr_lote_prestador
		into STRICT	dt_protocolo_w,
			cd_situacao_protocolo_w,
			nr_seq_lote_w
		from	pls_rec_glosa_protocolo rec
		where	rec.nr_sequencia = r_c01_w.nr_seq_protocolo;

		ie_tipo_relatorio_w	:= 'A';

	end if;

	select	nextval('pls_rel_an_versao_seq')
	into STRICT	nr_seq_versao_rel_w
	;

	insert into pls_rel_an_versao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			cd_versao,ie_tipo_relatorio,ie_local_solicitacao,cd_ans,
			ds_operadora,cd_cgc_operadora,dt_emissao,nr_seq_prestador,nm_local,
			cd_cnes,nr_seq_lote,nr_seq_protocolo,dt_protocolo,cd_situacao_protocolo,
			vl_informado_geral,vl_processado_geral,vl_liberado_geral,vl_glosa_geral,
			nr_seq_relatorio_analise,nr_seq_relatorio_ws)
	values (	nr_seq_versao_rel_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			to_char(nr_seq_versao_rel_w),ie_tipo_relatorio_w,ie_local_solicitacao_p,cd_ans_w,
			ds_operadora_w,cd_cgc_operadora_w,clock_timestamp(),nr_seq_prestador_aux_w,nm_local_w,
			cd_cnes_w,nr_seq_lote_w,r_c01_w.nr_seq_protocolo,dt_protocolo_w,cd_situacao_protocolo_w,
			0,0,0,0,
			nr_seq_relatorio_p,nr_seq_relatorio_ws_p);

	nr_seq_versao_rel_p	:= nr_seq_versao_rel_w;

	-- gera registros na tabela pls_rel_an_conta, pls_rel_an_pagina e pls_rel_an_itens

	gerar_contas_relatorio(nr_seq_versao_rel_w,nm_usuario_p, r_c01_w.ie_rec_glosa);
end loop;
		
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_demonstrativo_analise_pck.gerar_versao_relatorio ( nr_seq_relatorio_p pls_relatorio_analise.nr_sequencia%type, nr_seq_relatorio_ws_p pls_relatorio_analise_ws.nr_sequencia%type, nr_seq_protocolo_p pls_relatorio_analise.nr_sequencia%type, nr_seq_demonstrativo_p w_tiss_demonstra_retorno.nr_sequencia%type, ie_local_solicitacao_p pls_rel_an_versao.ie_local_solicitacao%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_versao_rel_p INOUT pls_rel_an_versao.nr_sequencia%type, ie_rec_glosa_p text default 'N') FROM PUBLIC;
