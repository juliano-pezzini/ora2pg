-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_operating_rooms.calc_hist_pacu_occupancy (cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE

        pfcs_panel_seq_w                pfcs_panel.nr_sequencia%type;
        qt_total_unit_w                 integer := 0;
        qt_occupied_unit_w              integer := 0;
        qt_past_avg_pacu_time_w         integer := 0;
        dt_reference_w                  timestamp;

BEGIN
        dt_reference_w := trunc(clock_timestamp(),PFCS_PCK_CONSTANTS.CD_MASK_HH24);

        select  coalesce(sum(vl_indicator),0),
                coalesce(sum(vl_indicator_help),0)
        into STRICT    qt_total_unit_w,
                qt_occupied_unit_w
        from    pfcs_panel
        where   nr_seq_indicator = PFCS_PCK_INDICATORS.NR_OR_PACU_OCCUPANCY
        and     ie_situation = PFCS_PCK_CONSTANTS.IE_ACTIVE
        and     nr_seq_operational_level = cd_establishment_p;

         := pfcs_pck.pfcs_generate_results(
            cd_reference_value_p => to_char(
                trunc(clock_timestamp(), PFCS_PCK_CONSTANTS.CD_MASK_HH24),
                PFCS_PCK_CONSTANTS.CD_MASK_DATETIME_BR), ds_color_p => PFCS_PCK_CONSTANTS.CD_COLOR_HISTOGRAM_PAST_BLUE, vl_indicator_p => pfcs_get_percentage_value(qt_occupied_unit_w, qt_total_unit_w), vl_indicator_help_p => 0, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_HIST_OCCUPANCY, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);

        -- Past and current occupancy
        for qt_hours_increment in 1 .. 22 loop
            qt_occupied_unit_w := 0;

            select count(distinct hst.nr_seq_location)
            into STRICT qt_occupied_unit_w
            from pfcs_patient_loc_hist hst,
                unidade_atendimento uni,
                setor_atendimento sec
            where uni.cd_setor_atendimento = sec.cd_setor_atendimento
                and hst.nr_seq_location = uni.nr_seq_location
                and sec.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
                and uni.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
                and sec.ie_rpa = PFCS_PCK_CONSTANTS.IE_YES_BR
                and sec.cd_estabelecimento_base = cd_establishment_p
                and hst.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
                and hst.si_intent = PFCS_PCK_CONSTANTS.SI_INTENT_ORDER
                and (hst.dt_period_start IS NOT NULL AND hst.dt_period_start::text <> '')
                and (   (dt_reference_w - (qt_hours_increment/24)) between
                            trunc(hst.dt_period_start,PFCS_PCK_CONSTANTS.CD_MASK_HH24) and
                            coalesce(hst.dt_period_end - (1/1440), clock_timestamp())  )
                and (hst.nr_seq_encounter IS NOT NULL AND hst.nr_seq_encounter::text <> '');

            pfcs_pck.pfcs_generate_results(
                cd_reference_value_p => to_char(
                    trunc((clock_timestamp() - ((qt_hours_increment)::numeric )/24),PFCS_PCK_CONSTANTS.CD_MASK_HH24),
                    PFCS_PCK_CONSTANTS.CD_MASK_DATETIME_BR),
                ds_color_p => PFCS_PCK_CONSTANTS.CD_COLOR_HISTOGRAM_PAST_BLUE,
                vl_indicator_p => pfcs_get_percentage_value(qt_occupied_unit_w, qt_total_unit_w),
                vl_indicator_help_p => qt_hours_increment,
                nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_HIST_OCCUPANCY,
                nr_seq_operational_level_p => cd_establishment_p,
                nm_usuario_p => nm_user_p,
                nr_seq_panel_p => pfcs_panel_seq_w);
        end loop;

        CALL pfcs_pck_operating_rooms.calc_avg_pacu_time(cd_establishment_p, PFCS_PCK_CONSTANTS.NM_USER_PFCS, 1);
        qt_past_avg_pacu_time_w := coalesce(
            nullif(pfcs_pck_indicators.get_indicator_value(PFCS_PCK_INDICATORS.NR_OR_PAST_AVG_PACU_TIME, cd_establishment_p),0),
            120
        );

        for qt_hours_increment in 1 .. 22 loop
            qt_occupied_unit_w := 0;

            select count(distinct t.nr_seq_patient)
            into STRICT qt_occupied_unit_w
            from (
                SELECT appt.nr_seq_patient
                from pfcs_appointment appt
                where appt.si_status in (
                        PFCS_PCK_CONSTANTS.SI_STATUS_BOOKED,
                        PFCS_PCK_CONSTANTS.SI_STATUS_ARRIVED,
                        PFCS_PCK_CONSTANTS.SI_STATUS_FULFILLED)
                    and (   (dt_reference_w + (qt_hours_increment/24)) between
                                trunc(appt.period_end,PFCS_PCK_CONSTANTS.CD_MASK_HH24) and
                                (appt.period_end + ((qt_past_avg_pacu_time_w - 1)/1440))   )

union

                SELECT hst.nr_seq_patient
                from pfcs_patient_loc_hist hst,
                    unidade_atendimento uni,
                    setor_atendimento sec
                where uni.cd_setor_atendimento = sec.cd_setor_atendimento
                    and hst.nr_seq_location = uni.nr_seq_location
                    and sec.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
                    and uni.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
                    and sec.ie_rpa = PFCS_PCK_CONSTANTS.IE_YES_BR
                    and sec.cd_estabelecimento_base = cd_establishment_p
                    and hst.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
                    and hst.si_intent = PFCS_PCK_CONSTANTS.SI_INTENT_ORDER
                    and (hst.dt_period_start IS NOT NULL AND hst.dt_period_start::text <> '')
                    and (   (dt_reference_w + (qt_hours_increment/24)) between
                                trunc(hst.dt_period_start,PFCS_PCK_CONSTANTS.CD_MASK_HH24) and
                                (hst.dt_period_start + (qt_past_avg_pacu_time_w/1440))  )
                    and coalesce(hst.dt_period_end::text, '') = ''
                    and (hst.nr_seq_encounter IS NOT NULL AND hst.nr_seq_encounter::text <> '')
            ) t;

            pfcs_pck.pfcs_generate_results(
                cd_reference_value_p => to_char(
                    trunc((clock_timestamp() + ((qt_hours_increment)::numeric )/24),PFCS_PCK_CONSTANTS.CD_MASK_HH24),
                    PFCS_PCK_CONSTANTS.CD_MASK_DATETIME_BR),
                ds_color_p => PFCS_PCK_CONSTANTS.CD_COLOR_HISTOGRAM_PRED_BLUE,
                vl_indicator_p => pfcs_get_percentage_value(qt_occupied_unit_w, qt_total_unit_w),
                ds_reference_aux_p => PFCS_PCK_CONSTANTS.CD_SIMULATION,
                vl_indicator_help_p => qt_hours_increment,
                nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_HIST_OCCUPANCY,
                nr_seq_operational_level_p => cd_establishment_p,
                nm_usuario_p => nm_user_p,
                nr_seq_panel_p => pfcs_panel_seq_w);
        end loop;

        CALL pfcs_pck.pfcs_activate_records(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_HIST_OCCUPANCY,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_operating_rooms.calc_hist_pacu_occupancy (cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;
