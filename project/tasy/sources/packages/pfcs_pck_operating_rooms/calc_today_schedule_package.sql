-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_operating_rooms.calc_today_schedule (cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE

        cur_patients CURSOR(nr_seq_organization_p  bigint) FOR
        SELECT enc.id_encounter nr_encounter,
            pat.patient_id id_patient,
            pfcs_get_human_name(pat.nr_sequencia, PFCS_PCK_CONSTANTS.DS_PATIENT) nm_patient,
            pfcs_pck_utils.get_network_validation(pat.nr_sequencia) ie_in_network,
            pat.gender ds_gender,
            round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)) qt_patient_age,
            enc.period_start dt_period_start,
            pfcs_pck_utils.get_full_location(enc.nr_seq_location) ds_location,
            pfcs_pck_utils.get_discharge_date(enc.nr_sequencia) dt_discharge,
            enc.dt_expected_discharge,
            pfcs_get_human_name(coalesce(proc.nr_seq_practitioner, appt.nr_seq_practitioner), PFCS_PCK_CONSTANTS.DS_PRACTITIONER) nm_surgeon,
            pfcs_pck_utils.get_room_name(appt.nr_seq_location) ds_surgery_room,
            coalesce(proc.ds_coding_disp, appt.ds_reason) ds_procedure,
            proc.period_start dt_procedure,
            appt.period_start dt_appointment,
            round((appt.period_end - appt.period_start) * 1440) vl_expected_surgery_duration,
            round((proc.period_end - proc.period_start) * 1440) vl_real_surgery_duration,
            upper(proc.si_status) ds_surgery_status,
            appt.nr_priority,
            appt.id_appointment cd_appointment
        FROM pfcs_patient pat
LEFT OUTER JOIN pfcs_encounter enc ON (pat.nr_sequencia = enc.nr_seq_patient)
, pfcs_appointment appt
LEFT OUTER JOIN pfcs_procedure proc ON (appt.nr_seq_procedure = proc.nr_sequencia)
, pfcs_pck_constants
LEFT OUTER JOIN pfcs_procedure proc ON (PFCS_PCK_CONSTANTS.CD_SURGICAL_PROCEDURE = proc.cd_category)
WHERE upper(appt.si_status) in (
                PFCS_PCK_CONSTANTS.SI_STATUS_BOOKED,
                PFCS_PCK_CONSTANTS.SI_STATUS_ARRIVED,
                PFCS_PCK_CONSTANTS.SI_STATUS_FULFILLED) and trunc(coalesce(proc.period_start, appt.period_start)) = trunc(clock_timestamp()) and appt.nr_seq_patient = pat.nr_sequencia  and pat.nr_seq_organization = nr_seq_organization_p;

        pfcs_panel_seq_w        pfcs_panel.nr_sequencia%type;
        pfcs_panel_detail_seq_w pfcs_panel_detail.nr_sequencia%type;
        nr_seq_organization_w   pfcs_organization.nr_sequencia%type;
        ds_location_w           pfcs_detail_bed.ds_location%type;
        qt_scheduled_w          integer := 0;
        qt_performed_w          integer := 0;
        qt_urgency_w            integer := 0;

BEGIN
        nr_seq_organization_w := pfcs_pck_utils.get_organization_sequence(cd_establishment_p);
        for c01_w in cur_patients(nr_seq_organization_w) loop
            ds_location_w := null;
            qt_scheduled_w := qt_scheduled_w + 1;

            if (c01_w.ds_surgery_status = PFCS_PCK_CONSTANTS.SI_STATUS_COMPLETED) then
                qt_performed_w := qt_performed_w + 1;
            end if;
            if (coalesce(c01_w.nr_priority,0) > 0) then
                qt_urgency_w := qt_urgency_w + 1;
            end if;

            if (coalesce(c01_w.dt_discharge::text, '') = '') then
                ds_location_w := c01_w.ds_location;
                if (c01_w.ds_surgery_status = PFCS_PCK_CONSTANTS.SI_STATUS_IN_PROGRESS) then
                    ds_location_w := c01_w.ds_surgery_room;
                end if;
            end if;

            select  nextval('pfcs_panel_detail_seq')
            into STRICT    pfcs_panel_detail_seq_w
;

            insert into pfcs_panel_detail(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                ie_situation,
                nr_seq_indicator,
                nr_seq_operational_level)
            values (
                pfcs_panel_detail_seq_w,
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                PFCS_PCK_CONSTANTS.IE_TEMPORARY,
                PFCS_PCK_INDICATORS.NR_OR_PERFORMED_SCHEDULED,
                cd_establishment_p);

            insert into pfcs_detail_bed(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_location)
            values (
                nextval('pfcs_detail_bed_seq'),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                ds_location_w);

            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_age_range,
                dt_expected_discharge,
                dt_last_discharge,
                ds_coverage_network)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_period_start,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.qt_patient_age,
                c01_w.dt_expected_discharge,
                c01_w.dt_discharge,
                c01_w.ie_in_network);

            insert into pfcs_detail_schedule(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_procedure,
                nm_executing_physician,
                ds_room,
                dt_schedule,
                dt_scheduling,
                vl_assertiveness_index,
                cd_appointment)
            values (
                nextval('pfcs_detail_schedule_seq'),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.ds_procedure,
                c01_w.nm_surgeon,
                c01_w.ds_surgery_room,
                c01_w.dt_procedure,
                c01_w.dt_appointment,
                round((dividir(c01_w.vl_real_surgery_duration, c01_w.vl_expected_surgery_duration))::numeric,1),
                c01_w.cd_appointment);
        end loop;

         := pfcs_pck.pfcs_generate_results(
            vl_indicator_p => qt_scheduled_w, vl_indicator_help_p => qt_performed_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PERFORMED_SCHEDULED, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);
         := pfcs_pck.pfcs_generate_results(
            vl_indicator_p => qt_scheduled_w, vl_indicator_help_p => qt_performed_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_PERFORMED_SCHEDULED, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);
         := pfcs_pck.pfcs_generate_results(
            vl_indicator_p => qt_urgency_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_URGENCY_SURGERY, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);

        CALL pfcs_pck.pfcs_update_detail(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PERFORMED_SCHEDULED,
            nr_seq_panel_p => pfcs_panel_seq_w,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);

        CALL pfcs_pck.pfcs_activate_records(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PERFORMED_SCHEDULED,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);
        CALL pfcs_pck.pfcs_activate_records(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_PERFORMED_SCHEDULED,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);
        CALL pfcs_pck.pfcs_activate_records(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_URGENCY_SURGERY,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_operating_rooms.calc_today_schedule (cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;
