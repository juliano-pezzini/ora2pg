-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_operating_rooms.calc_pacu_occupancy (cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE

        cur_patients CURSOR FOR
        SELECT enc.id_encounter nr_encounter,
            pat.patient_id id_patient,
            pfcs_get_human_name(pat.nr_sequencia, PFCS_PCK_CONSTANTS.DS_PATIENT) nm_patient,
            pat.gender ds_gender,
            round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)) qt_patient_age,
            pfcs_pck_utils.get_network_validation(pat.nr_sequencia) ie_in_network,
            enc.period_start dt_period_start,
            enc.dt_expected_discharge,
            (sec.ds_setor_atendimento   || PFCS_PCK_CONSTANTS.DS_HYPHEN ||
                uni.cd_unidade_basica   || PFCS_PCK_CONSTANTS.DS_HYPHEN ||
                uni.cd_unidade_compl ) ds_location,
            pfcs_pck_utils.get_location_entrance_date(enc.nr_sequencia, enc.nr_seq_location) dt_entry_unit,
            proc.ds_coding_disp ds_procedure,
            proc.period_start dt_procedure,
            svc.cd_service cd_svc_request,
            svc.si_status cd_svc_status,
            svc.si_intent cd_svc_intent,
            svc.nr_seq_location nr_seq_destiny_location,
            ((clock_timestamp() - svc.dt_authored_on) * 1440) vl_request_waiting_time
        FROM unidade_atendimento uni, pfcs_service_request svc, setor_atendimento sec, pfcs_patient pat, pfcs_encounter enc
LEFT OUTER JOIN pfcs_procedure proc ON (enc.nr_sequencia = proc.nr_seq_encounter)
, pfcs_pck_constants
LEFT OUTER JOIN pfcs_procedure proc ON (PFCS_PCK_CONSTANTS.CD_SURGICAL_PROCEDURE = proc.cd_category)
WHERE uni.nr_seq_location = enc.nr_seq_location and enc.nr_seq_patient = pat.nr_sequencia and (enc.period_start IS NOT NULL AND enc.period_start::text <> '') and coalesce(enc.period_end::text, '') = ''   and svc.nr_seq_encounter = enc.nr_sequencia and svc.nr_seq_patient = pat.nr_sequencia and sec.ie_rpa = PFCS_PCK_CONSTANTS.IE_YES_BR and uni.cd_setor_atendimento = sec.cd_setor_atendimento and sec.cd_estabelecimento = cd_establishment_p;

        pfcs_panel_seq_w            pfcs_panel.nr_sequencia%type;
        pfcs_panel_detail_seq_w     pfcs_panel_detail.nr_sequencia%type;
        ds_requested_unit_w         pfcs_detail_bed.ds_request_unit%type;
        cd_expr_destiny_w           dic_expressao.cd_expressao%type;
        qt_discharge_rule_w         pfcs_general_rule.qt_time_discharge%type;
        qt_transfer_rule_w          pfcs_general_rule.qt_time_transfer%type;
        ie_discharge_order_status_w varchar(1);
        ie_transfer_order_status_w  varchar(1);
        ie_over_threshold_w         varchar(1);
        qt_beds_w                   integer := 0;
        qt_occupied_beds_w          integer := 0;

BEGIN
        select  count(uni.nr_seq_location)
        into STRICT    qt_beds_w
        from    unidade_atendimento uni,
                setor_atendimento sec
        where   pfcs_get_bed_status(
                    uni.ie_status_unidade,
                    PFCS_PCK_CONSTANTS.IE_TOTAL_BEDS,
                    sec.cd_estabelecimento) = PFCS_PCK_CONSTANTS.IE_YES
        and     sec.ie_rpa = PFCS_PCK_CONSTANTS.IE_YES_BR
        and     uni.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
        and     sec.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
        and     uni.cd_setor_atendimento = sec.cd_setor_atendimento
        and     sec.cd_estabelecimento = cd_establishment_p;

        select  coalesce(max(qt_time_discharge),PFCS_PCK_CONSTANTS.VL_DEFAULT_DISCHARGE_RULE),
                coalesce(max(qt_time_transfer),PFCS_PCK_CONSTANTS.VL_DEFAULT_TRANSFER_RULE)
        into STRICT    qt_discharge_rule_w,
                qt_transfer_rule_w
        from    pfcs_general_rule;

        for c01_w in cur_patients loop
            qt_occupied_beds_w := qt_occupied_beds_w + 1;
            ds_requested_unit_w := null;
            cd_expr_destiny_w := null;

            ie_over_threshold_w := PFCS_PCK_CONSTANTS.IE_NO;
            ie_discharge_order_status_w := PFCS_PCK_CONSTANTS.IE_NO;
            ie_transfer_order_status_w := PFCS_PCK_CONSTANTS.IE_NO;

            if (c01_w.cd_svc_request = PFCS_PCK_CONSTANTS.CD_DISCHARGE) then
                cd_expr_destiny_w := PFCS_PCK_CONSTANTS.CD_EXPR_DISCHARGE;
                ie_discharge_order_status_w := PFCS_PCK_CONSTANTS.IE_YES;
                if (c01_w.vl_request_waiting_time > qt_discharge_rule_w) then
                    ie_over_threshold_w := PFCS_PCK_CONSTANTS.IE_YES;
                end if;
            elsif ( c01_w.cd_svc_request = PFCS_PCK_CONSTANTS.CD_TRANSFER and
                    c01_w.cd_svc_intent in (PFCS_PCK_CONSTANTS.SI_INTENT_PROPOSAL, PFCS_PCK_CONSTANTS.SI_INTENT_PLAN) ) then
                ds_requested_unit_w := PFCS_PCK_UTILS.GET_FULL_LOCATION(c01_w.nr_seq_destiny_location);
                ie_transfer_order_status_w := PFCS_PCK_CONSTANTS.IE_YES;
                if ( c01_w.cd_svc_intent = PFCS_PCK_CONSTANTS.SI_INTENT_PLAN and c01_w.vl_request_waiting_time > qt_transfer_rule_w) then
                    ie_over_threshold_w := PFCS_PCK_CONSTANTS.IE_YES;
                end if;
            else
                cd_expr_destiny_w := PFCS_PCK_CONSTANTS.CD_EXPR_UNKOWN;
            end if;

            select  nextval('pfcs_panel_detail_seq')
            into STRICT    pfcs_panel_detail_seq_w
;

            insert into pfcs_panel_detail(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                ie_situation,
                nr_seq_indicator,
                nr_seq_operational_level)
            values (
                pfcs_panel_detail_seq_w,
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                PFCS_PCK_CONSTANTS.IE_TEMPORARY,
                PFCS_PCK_INDICATORS.NR_OR_PACU_OCCUPANCY,
                cd_establishment_p);

            insert into pfcs_detail_bed(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_location,
                dt_entry_unit,
                ds_request_unit,
                ie_classification,
                ds_classification)
            values (
                nextval('pfcs_detail_bed_seq'),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.ds_location,
                c01_w.dt_entry_unit,
                ds_requested_unit_w,
                pfcs_pck_utils.get_unit_classification(c01_w.nr_seq_destiny_location),
                cd_expr_destiny_w);

            insert into pfcs_detail_patient(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                nr_encounter_varchar,
                dt_entrance,
                id_patient,
                nm_patient,
                ds_gender,
                ds_age_range,
                dt_expected_discharge,
                ie_transfer_order_status,
                ie_discharge_order_status,
                ie_over_threshold,
                ds_coverage_network)
            values (
                nextval('pfcs_detail_patient_seq'),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.nr_encounter,
                c01_w.dt_period_start,
                c01_w.id_patient,
                c01_w.nm_patient,
                c01_w.ds_gender,
                c01_w.qt_patient_age,
                c01_w.dt_expected_discharge,
                ie_transfer_order_status_w,
                ie_discharge_order_status_w,
                ie_over_threshold_w,
                c01_w.ie_in_network);

            insert into pfcs_detail_schedule(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                nr_seq_detail,
                ds_procedure,
                dt_schedule)
            values (
                nextval('pfcs_detail_schedule_seq'),
                nm_user_p,
                clock_timestamp(),
                nm_user_p,
                clock_timestamp(),
                pfcs_panel_detail_seq_w,
                c01_w.ds_procedure,
                c01_w.dt_procedure);
        end loop;

         := pfcs_pck.pfcs_generate_results(
            vl_indicator_p => qt_beds_w, vl_indicator_help_p => qt_occupied_beds_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_OCCUPANCY, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);

        CALL pfcs_pck.pfcs_update_detail(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_OCCUPANCY,
            nr_seq_panel_p => pfcs_panel_seq_w,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);

        CALL pfcs_pck.pfcs_activate_records(
            nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_OR_PACU_OCCUPANCY,
            nr_seq_operational_level_p => cd_establishment_p,
            nm_usuario_p => nm_user_p);
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_operating_rooms.calc_pacu_occupancy (cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;
