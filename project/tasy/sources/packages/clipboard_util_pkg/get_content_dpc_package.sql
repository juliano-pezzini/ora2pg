-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION clipboard_util_pkg.get_content_dpc ( nr_atendimento_p bigint, nr_sequencia_p text, ie_record_type_p text, config_option_p bigint ) RETURNS varchar AS $body$
DECLARE


        ds_content_w   varchar(32000);
        adm_dt_w       varchar(1000);
        si_cat_w       varchar(1000);
        dept_w         varchar(1000);
        code_w         varchar(1000);
        disea_w        varchar(1000);
        st_dt_w        varchar(1000);
        most_exp_w     varchar(1000);
        c01 CURSOR FOR
        SELECT
            *
        FROM
            TABLE( clipboard_util_pkg.get_clipboard_rule(ie_record_type_p) )
        WHERE
            nr_seq = config_option_p
        ORDER BY
            nr_seq_display ASC;


  i RECORD;
BEGIN
        FOR i IN (WITH RECURSIVE cte AS (

            SELECT
                regexp_substr(nr_sequencia_p, '[^,]+', 1, level) AS data_w

            (regexp_substr(nr_sequencia_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_sequencia_p, '[^,]+', 1, level))::text <> '')
          UNION ALL

            SELECT
                regexp_substr(nr_sequencia_p, '[^,]+', 1, level) AS data_w
            
            (regexp_substr(nr_sequencia_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_sequencia_p, '[^,]+', 1, level))::text <> '')
         JOIN cte c ON ()

) SELECT * FROM cte;
) LOOP
            SELECT
                pkg_date_formaters.to_varchar(ap.dt_entrada, 'shortDate', wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck
                .get_nm_usuario),
                obter_valor_dominio(9603, pd.si_category),
                dm.ds_departamento,
                ds.cd_dpc,
                ds.nm_dpc,
                pkg_date_formaters.to_varchar(pd.dt_start_dpc, 'shortDate', wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck
                .get_nm_usuario),
                dd.cd_doenca
                || '-'
                || to_char(cd.ds_doenca_cid)
            INTO STRICT
                adm_dt_w,
                si_cat_w,
                dept_w,
                code_w,
                disea_w,
                st_dt_w,
                most_exp_w
            FROM atendimento_paciente ap, patient_dpc pd
LEFT OUTER JOIN departamento_medico dm ON (pd.cd_departamento = dm.cd_departamento)
LEFT OUTER JOIN dpc_score ds ON (pd.nr_seq_dpc_score = ds.nr_sequencia)
LEFT OUTER JOIN diagnostico_doenca dd ON (pd.nr_seq_most_exp_diagnosis = dd.nr_seq_interno)
LEFT OUTER JOIN cid_doenca cd ON (dd.cd_doenca = cd.cd_doenca)
WHERE pd.nr_atendimento = ap.nr_atendimento     AND ap.cd_pessoa_fisica = clipboard_util_pkg.get_pessao_fisica(nr_atendimento_p) AND pd.nr_sequencia = i.data_w;

            FOR r_c01 IN c01 LOOP IF ( ie_record_type_p = 'DPC' ) THEN
                IF ( r_c01.ie_field = 'ADM_DT' ) THEN
                    IF (adm_dt_w IS NOT NULL AND adm_dt_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || adm_dt_w;

                    END IF;
                END IF;

                IF ( r_c01.ie_field = 'DISE_NAME' ) THEN
                    IF (disea_w IS NOT NULL AND disea_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || disea_w;

                    END IF;

                END IF;

                IF ( r_c01.ie_field = 'DPC_CODE' ) THEN
                    IF (code_w IS NOT NULL AND code_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || code_w;

                    END IF;
                END IF;

                IF ( r_c01.ie_field = 'INC_CLASSI' ) THEN
                    IF (si_cat_w IS NOT NULL AND si_cat_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || si_cat_w;

                    END IF;
                END IF;

                IF ( r_c01.ie_field = 'MED_DEPT' ) THEN
                    IF (dept_w IS NOT NULL AND dept_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || dept_w;

                    END IF;
                END IF;

                IF ( r_c01.ie_field = 'MOST_DIS_NM' ) THEN
                    IF (most_exp_w IS NOT NULL AND most_exp_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || most_exp_w;

                    END IF;
                END IF;

                IF ( r_c01.ie_field = 'START_DT' ) THEN
                    IF (st_dt_w IS NOT NULL AND st_dt_w::text <> '') THEN
                        ds_content_w := ds_content_w
                                        || '</br>'
                                        || coalesce(r_c01.nm_field, r_c01.ds_expressao)
                                        || ' - '
                                        || st_dt_w;

                    END IF;
                END IF;

            END IF;
            END LOOP;

            ds_content_w := ds_content_w || '</br>';
        END LOOP;

        RETURN ds_content_w;
    END;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION clipboard_util_pkg.get_content_dpc ( nr_atendimento_p bigint, nr_sequencia_p text, ie_record_type_p text, config_option_p bigint ) FROM PUBLIC;
