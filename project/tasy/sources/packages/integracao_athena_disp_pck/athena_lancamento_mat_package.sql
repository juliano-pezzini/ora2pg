-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE integracao_athena_disp_pck.athena_lancamento_mat ( cd_acao_p text, nr_atendimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, qt_atual_p bigint, dt_movimento_p timestamp, cd_fornecedor_p text, nr_prescricao_p bigint, nr_seq_material_p bigint, nr_seq_lote_p bigint, ie_atualizou_p INOUT text, ds_erro_p INOUT text, cd_barras_p text DEFAULT NULL, ie_commit_p text DEFAULT 'S') AS $body$
DECLARE

	
		qt_estoque_w                double precision;
		qt_material_w               double precision;
		qt_devolvida_w              double precision;
		cd_acao_w                   varchar(1) := '1';
		cd_fornec_consignado_w      varchar(14);
		cd_setor_atendimento_w      integer;
		ie_cobra_paciente_w         varchar(1);
		cd_unidade_medida_w         varchar(30);
		cd_convenio_w               integer;
		cd_categoria_w              varchar(10);
		nr_doc_convenio_w           varchar(20);
		ie_tipo_guia_w              varchar(2);
		cd_senha_w                  varchar(20);
		dt_entrada_unidade_w        timestamp;
		cd_centro_custo_w           bigint;
		cd_conta_contabil_w         varchar(20);
		cd_operacao_estoque_w       smallint;
		nr_seq_atepacu_w            bigint;
		ie_consignado_w             varchar(1);
		ie_atualizar_consig_w       varchar(1);
		ds_erro_w                   varchar(4000);
		nr_sequencia_w              bigint;

	/* parametros converte_codigo_barras */


		cd_material_w               bigint;
		qt_mat_barras_w             double precision;
		nr_seq_lote_w               bigint;
		nr_seq_lote_agrup_w         bigint;
		cd_kit_mat_w                bigint;
		ds_validade_w               varchar(255);
		ds_material_w               varchar(255);
		cd_unid_med_w               varchar(30);
		nr_etiqueta_lp_w            varchar(255);
	/* parametros converte_codigo_barras */



		nr_seq_tipo_baixa_w         bigint;
		qt_total_dispensar_item_w   double precision;
		qt_total_item_conta_w       double precision;
		qt_existe_w                 bigint;
		nr_seq_lote_ap_w            bigint;
		cd_motivo_baixa_int_w       smallint;
		ie_atualiza_estoque_w       tipo_baixa_prescricao.ie_atualiza_estoque%TYPE;
		ie_conta_paciente_w         tipo_baixa_prescricao.ie_conta_paciente%TYPE;
		ie_gerar_transf_lote_w      parametros_farmacia.ie_gerar_transf_lote%TYPE;
		ie_transf_atend_lote_w      setor_atendimento.ie_transf_atend_lote%TYPE;
		cd_local_estoque_ent_w      local_estoque.cd_local_estoque%TYPE;
		cd_local_estoque_w          local_estoque.cd_local_estoque%TYPE;
		nr_atendimento_w            atendimento_paciente.nr_atendimento%TYPE;
		cd_estabelecimento_w        estabelecimento.cd_estabelecimento%TYPE;
		qt_material_ww              double precision;
	
	
BEGIN
        BEGIN
            nr_atendimento_w := nr_atendimento_p;
            cd_local_estoque_w := cd_local_estoque_p;
            cd_material_w := cd_material_p;
            ie_atualizou_p := 'N';
            IF (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') THEN
                SELECT
                    coalesce(MAX(cd_tipo_baixa), 0),
                    coalesce(MAX(cd_setor_atendimento), 0)
                INTO STRICT
                    cd_motivo_baixa_int_w,
                    cd_setor_atendimento_w
                FROM
                    ap_lote
                WHERE
                    nr_sequencia = nr_seq_lote_p;

            ELSIF (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') THEN
                SELECT
                    coalesce(MAX(cd_setor_atendimento), 0),
                    coalesce(MAX(nr_atendimento), 0),
                    coalesce(MAX(cd_estabelecimento), 0)
                INTO STRICT
                    cd_setor_atendimento_w,
                    nr_atendimento_w,
                    cd_estabelecimento_w
                FROM
                    prescr_medica
                WHERE
                    nr_prescricao = nr_prescricao_p;

            END IF;

            IF ( coalesce(cd_setor_atendimento_w, 0) = 0 ) AND ( coalesce(nr_atendimento_w, 0) > 0 ) THEN
                cd_setor_atendimento_w := obter_setor_atendimento(nr_atendimento_w);
            ELSIF ( coalesce(cd_setor_atendimento_w, 0) = 0 ) THEN
                --Nao encontrado setor de atendimento para o local de estoque!;

                ds_erro_w := wheb_mensagem_pck.get_texto(278817);
            END IF;

            IF ( coalesce(cd_setor_atendimento_w, 0) > 0 ) THEN
                BEGIN
                    SELECT
                        nr_sequencia
                    INTO STRICT nr_sequencia_w
                    FROM
                        dis_regra_setor
                    WHERE
                        cd_setor_atendimento = cd_setor_atendimento_w;

                    SELECT
                        cd_local_estoque
                    INTO STRICT cd_local_estoque_w
                    FROM
                        dis_regra_local_setor
                    WHERE
                        nr_seq_dis_regra_setor = nr_sequencia_w;

                EXCEPTION
                    WHEN OTHERS THEN
                        cd_local_estoque_w := cd_local_estoque_p;
                END;
            END IF;

            IF ( coalesce(cd_local_estoque_w, 0) = 0 ) THEN
                SELECT
                    coalesce(MAX(cd_local_estoque), 0)
                INTO STRICT cd_local_estoque_w
                FROM
                    parametros_farmacia
                WHERE
                    cd_estabelecimento = cd_estabelecimento_w;

                IF ( coalesce(cd_local_estoque_w, 0) = 0 ) THEN
                    SELECT
                        coalesce(MAX(cd_local_estoque), 0)
                    INTO STRICT cd_local_estoque_w
                    FROM
                        setor_atendimento
                    WHERE
                        cd_setor_atendimento = cd_setor_atendimento_w;

                END IF;

            END IF;

            qt_material_w := qt_atual_p;
            IF ( cd_acao_p = 'I' ) THEN
                cd_acao_w := '1';
            ELSIF ( cd_acao_p = 'E' ) THEN
                cd_acao_w := '2';
            END IF;

            IF ( qt_material_w = 0 ) THEN
                --Quantidade de contagem igual ao saldo em estoque!',1,255);

                ds_erro_w := substr(wheb_mensagem_pck.get_texto(278822), 1, 255);
            END IF;

            IF (cd_barras_p IS NOT NULL AND cd_barras_p::text <> '') THEN
                converte_codigo_barras(cd_barras_p, cd_estabelecimento_w, NULL, 'N', cd_material_w, qt_material_ww, nr_seq_lote_w, nr_seq_lote_agrup_w
                , cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_w);
            END IF;

            BEGIN
                SELECT
                    cd_unidade_medida_estoque,
                    ie_cobra_paciente,
                    coalesce(ie_consignado, '0')
                INTO STRICT
                    cd_unidade_medida_w,
                    ie_cobra_paciente_w,
                    ie_consignado_w
                FROM
                    material
                WHERE
                    cd_material = cd_material_w;

            EXCEPTION
                WHEN OTHERS THEN
                    -- Nao encontrado cadastro do material no Tasy!;

                    ds_erro_w := wheb_mensagem_pck.get_texto(278819);
            END;

            IF ( ie_consignado_w <> '0' ) AND (cd_fornecedor_p IS NOT NULL AND cd_fornecedor_p::text <> '') THEN
                BEGIN
                    ie_atualizar_consig_w := 'S';
                    BEGIN
                        SELECT
                            cd_cgc
                        INTO STRICT cd_fornec_consignado_w
                        FROM
                            pessoa_juridica
                        WHERE
                            cd_cgc = cd_fornecedor_p;

                    EXCEPTION
                        WHEN OTHERS THEN
                        -- Nao encontrado cadastro do fornecedor no Tasy! CGC: ' || cd_fornecedor_p,1,255);

                            ds_erro_w := substr(wheb_mensagem_pck.get_texto(278821)
                                                || cd_fornecedor_p, 1, 255);
                    END;

                END;
            ELSE
                BEGIN
                    ie_atualizar_consig_w := 'N';
                    cd_fornec_consignado_w := NULL;
                END;
            END IF;

            IF ( coalesce(ds_erro_w::text, '') = '' ) THEN
                BEGIN
                    IF ( coalesce(nr_atendimento_w, 0) > 0 ) THEN
                        BEGIN
                            obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w
                            , cd_senha_w);
                            nr_seq_atepacu_w := obter_atepacu_paciente(nr_atendimento_w, 'A');
                            SELECT
                                MAX(a.dt_entrada_unidade)
                            INTO STRICT dt_entrada_unidade_w
                            FROM
                                atend_paciente_unidade a
                            WHERE
                                a.nr_seq_interno = nr_seq_atepacu_w;

                            IF ( coalesce(cd_motivo_baixa_int_w, 0) > 0 ) THEN
                                SELECT
                                    coalesce(MAX(nr_sequencia), 0),
                                    coalesce(MAX(ie_atualiza_estoque), 'S'),
                                    coalesce(MAX(ie_conta_paciente), 'S')
                                INTO STRICT
                                    nr_seq_tipo_baixa_w,
                                    ie_atualiza_estoque_w,
                                    ie_conta_paciente_w
                                FROM
                                    tipo_baixa_prescricao
                                WHERE
                                    ie_situacao = 'A'
                                    AND cd_tipo_baixa = cd_motivo_baixa_int_w
                                    AND ie_prescricao_devolucao = 'P';

                            ELSE
                                SELECT
                                    MAX(nr_sequencia)
                                INTO STRICT nr_seq_tipo_baixa_w
                                FROM
                                    tipo_baixa_prescricao
                                WHERE
                                    ie_situacao = 'A'
                                    AND ie_tipo_padrao = 'S'
                                    AND ie_prescricao_devolucao = 'P';

                                SELECT
                                    coalesce(MAX(ie_atualiza_estoque), 'S'),
                                    coalesce(MAX(ie_conta_paciente), 'S')
                                INTO STRICT
                                    ie_atualiza_estoque_w,
                                    ie_conta_paciente_w
                                FROM
                                    tipo_baixa_prescricao
                                WHERE
                                    nr_sequencia = nr_seq_tipo_baixa_w;

                            END IF;

                            IF ( cd_acao_w = 2 ) THEN
                                BEGIN
                                    qt_devolvida_w := qt_material_w;
                                    qt_material_w := ( qt_material_w * -1 );
                                    IF ( coalesce(cd_motivo_baixa_int_w, 0) > 0 ) THEN
                                        SELECT
                                            coalesce(nr_sequencia, 0)
                                        INTO STRICT nr_seq_tipo_baixa_w
                                        FROM
                                            tipo_baixa_prescricao
                                        WHERE
                                            ie_situacao = 'A'
                                            AND cd_tipo_baixa = cd_motivo_baixa_int_w
                                            AND ie_prescricao_devolucao = 'D';

                                        SELECT
                                            coalesce(ie_atualiza_estoque, 'S'),
                                            coalesce(ie_conta_paciente, 'S')
                                        INTO STRICT
                                            ie_atualiza_estoque_w,
                                            ie_conta_paciente_w
                                        FROM
                                            tipo_baixa_prescricao
                                        WHERE
                                            nr_sequencia = nr_seq_tipo_baixa_w;

                                    ELSE
                                        SELECT
                                            MAX(nr_sequencia)
                                        INTO STRICT nr_seq_tipo_baixa_w
                                        FROM
                                            tipo_baixa_prescricao
                                        WHERE
                                            ie_situacao = 'A'
                                            AND ie_tipo_padrao = 'S'
                                            AND ie_prescricao_devolucao = 'D';

                                        SELECT
                                            coalesce(MAX(ie_atualiza_estoque), 'S'),
                                            coalesce(MAX(ie_conta_paciente), 'S')
                                        INTO STRICT
                                            ie_atualiza_estoque_w,
                                            ie_conta_paciente_w
                                        FROM
                                            tipo_baixa_prescricao
                                        WHERE
                                            nr_sequencia = nr_seq_tipo_baixa_w;

                                    END IF;

                                END;
                            END IF;

                            IF ( ie_cobra_paciente_w = 'S' ) AND ( ie_conta_paciente_w = 'S' ) THEN
                                BEGIN
                                    SELECT
                                        nextval('material_atend_paciente_seq')
                                    INTO STRICT nr_sequencia_w
;

                                    INSERT INTO material_atend_paciente(
                                        nr_sequencia,
                                        nr_atendimento,
                                        dt_entrada_unidade,
                                        cd_material,
                                        dt_atendimento,
                                        cd_unidade_medida,
                                        qt_material,
                                        dt_atualizacao,
                                        nm_usuario,
                                        cd_acao,
                                        cd_setor_atendimento,
                                        nr_seq_atepacu,
                                        cd_material_prescricao,
                                        cd_material_exec,
                                        ie_via_aplicacao,
                                        dt_prescricao,
                                        nr_prescricao,
                                        nr_sequencia_prescricao,
                                        cd_cgc_fornecedor,
                                        qt_executada,
                                        nr_cirurgia,
                                        cd_local_estoque,
                                        vl_unitario,
                                        qt_ajuste_conta,
                                        ie_valor_informado,
                                        ie_guia_informada,
                                        ie_auditoria,
                                        nm_usuario_original,
                                        cd_situacao_glosa,
                                        cd_convenio,
                                        cd_categoria,
                                        nr_doc_convenio,
                                        ie_tipo_guia,
                                        nr_seq_lote_fornec,
                                        cd_senha,
                                        dt_conta,
                                        nr_seq_kit_estoque,
                                        qt_devolvida,
                                        cd_funcao,
                                        nr_seq_tipo_baixa,
                                        nr_seq_lote_ap,
                                        nr_seq_cor_exec
                                    ) VALUES (
                                        nr_sequencia_w,
                                        nr_atendimento_w,
                                        dt_entrada_unidade_w,
                                        cd_material_w,
                                        clock_timestamp(),
                                        cd_unidade_medida_w,
                                        qt_material_w,
                                        clock_timestamp(),
                                        'Athena',
                                        cd_acao_w,
                                        cd_setor_atendimento_w,
                                        nr_seq_atepacu_w,
                                        cd_material_w,
                                        cd_material_w,
                                        NULL,
                                        NULL,
                                        CASE WHEN coalesce(nr_prescricao_p, 0)=0 THEN  NULL  ELSE nr_prescricao_p END ,
                                        CASE WHEN coalesce(nr_seq_material_p, 0)=0 THEN  NULL  ELSE nr_seq_material_p END ,
                                        cd_fornec_consignado_w,
                                        qt_material_w,
                                        NULL,
                                        cd_local_estoque_w,
                                        0,
                                        0,
                                        'N',
                                        'N',
                                        'N',
                                        'Athena',
                                        0,
                                        cd_convenio_w,
                                        cd_categoria_w,
                                        nr_doc_convenio_w,
                                        ie_tipo_guia_w,
                                        CASE WHEN coalesce(nr_seq_lote_w, 0)=0 THEN  NULL  ELSE nr_seq_lote_w END ,
                                        cd_senha_w,
                                        clock_timestamp(),
                                        NULL,
                                        qt_devolvida_w,
                                        147,
                                        nr_seq_tipo_baixa_w,
                                        CASE WHEN coalesce(nr_seq_lote_p, 0)=0 THEN  NULL  ELSE nr_seq_lote_p END ,
                                        CASE WHEN cd_acao_w=2 THEN  100  ELSE null END 
                                    );

                                    ie_atualizou_p := 'S';
                                    CALL atualiza_preco_material(nr_sequencia_w, 'Athena');
                                    IF ( nr_prescricao_p > 0 ) AND ( nr_seq_material_p > 0 ) THEN
                                        SELECT
                                            SUM(qt_total_dispensar)
                                        INTO STRICT qt_total_dispensar_item_w
                                        FROM
                                            prescr_material
                                        WHERE
                                            nr_prescricao = nr_prescricao_p
                                            AND nr_sequencia = nr_seq_material_p;

                                        SELECT
                                            SUM(qt_material)
                                        INTO STRICT qt_total_item_conta_w
                                        FROM
                                            material_atend_paciente
                                        WHERE
                                            nr_atendimento = nr_atendimento_w
                                            AND nr_prescricao = nr_prescricao_p
                                            AND nr_sequencia_prescricao = nr_seq_material_p;

                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_existe_w
                                        FROM
                                            prescr_medica
                                        WHERE
                                            nr_prescricao = nr_prescricao_p
                                            AND coalesce(dt_liberacao::text, '') = '';

                                        -- Baixa o item na prescricao quando a quantidade da conta e maior ou igual a quantidade a ser dispensada.    

                                        IF ( qt_existe_w = 0 ) AND ( qt_total_dispensar_item_w <= qt_total_item_conta_w ) THEN
                                            UPDATE prescr_material
                                            SET
                                                cd_motivo_baixa = cd_motivo_baixa_int_w,
                                                dt_baixa = clock_timestamp(),
                                                nm_usuario = 'Athena'
                                            WHERE
                                                nr_prescricao = nr_prescricao_p
                                                AND nr_sequencia = nr_seq_material_p;

                                        END IF;

                                    END IF;

                                    -- Coloca lote como atendido    

                                    IF ( cd_acao_w = 1 ) AND ( coalesce(nr_seq_lote_p, 0) > 0 ) THEN
                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_existe_w
                                        FROM
                                            ap_lote_item
                                        WHERE
                                            coalesce(dt_controle::text, '') = ''
                                            AND obter_se_generico_igual(cd_material, cd_material_w) = 'S'
                                            AND nr_seq_lote = nr_seq_lote_p;

                                        IF ( qt_existe_w > 0 ) THEN
                                            UPDATE ap_lote_item
                                            SET
                                                dt_controle = clock_timestamp(),
                                                dt_atualizacao = clock_timestamp(),
                                                nm_usuario = 'Athena'
                                            WHERE
                                                nr_seq_lote = nr_seq_lote_p
                                                AND obter_se_generico_igual(cd_material, cd_material_w) = 'S';

                                        END IF;

                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_existe_w
                                        FROM
                                            ap_lote_item
                                        WHERE
                                            nr_seq_lote = nr_seq_lote_p
                                            AND coalesce(dt_controle::text, '') = ''
                                            AND ie_prescrito = 'S'
                                            AND coalesce(DT_SUPENSAO::text, '') = '';

                                        IF ( qt_existe_w = 0 ) THEN
                                            UPDATE ap_lote
                                            SET
                                                dt_atend_farmacia = clock_timestamp(),
                                                nm_usuario_atend = 'Athena',
                                                ie_status_lote = 'A'
                                            WHERE
                                                nr_sequencia = nr_seq_lote_p;

                                        END IF;

                                    END IF;

                                END;
                            ELSIF ( ie_atualiza_estoque_w = 'S' ) THEN
                                BEGIN
                                    CALL gerar_prescricao_estoque(cd_estabelecimento_w, nr_atendimento_w, dt_entrada_unidade_w, cd_material_w
                                    , clock_timestamp(), cd_acao_w, cd_local_estoque_w, qt_material_w, cd_setor_atendimento_w, cd_unidade_medida_w
                                    , 'Athena', 'I', nr_prescricao_p, NULL, NULL, 0, cd_fornec_consignado_w, NULL, nr_seq_lote_w, NULL
                                    , NULL, nr_seq_lote_p, NULL, NULL, NULL);

                                    ie_atualizou_p := 'S';

                                    -- Coloca lote como atendido

                                    IF ( cd_acao_w = 1 ) AND ( coalesce(nr_seq_lote_p, 0) > 0 ) THEN
                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_existe_w
                                        FROM
                                            ap_lote_item
                                        WHERE
                                            coalesce(dt_controle::text, '') = ''
                                            AND obter_se_generico_igual(cd_material, cd_material_w) = 'S'
                                            AND nr_seq_lote = nr_seq_lote_p;

                                        IF ( qt_existe_w > 0 ) THEN
                                            UPDATE ap_lote_item
                                            SET
                                                dt_controle = clock_timestamp(),
                                                dt_atualizacao = clock_timestamp(),
                                                nm_usuario = 'Athena'
                                            WHERE
                                                nr_seq_lote = nr_seq_lote_p
                                                AND obter_se_generico_igual(cd_material, cd_material_w) = 'S';

                                        END IF;

                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_existe_w
                                        FROM
                                            ap_lote_item
                                        WHERE
                                            nr_seq_lote = nr_seq_lote_p
                                            AND coalesce(dt_controle::text, '') = ''
                                            AND ie_prescrito = 'S';

                                        IF ( qt_existe_w = 0 ) THEN
                                            UPDATE ap_lote
                                            SET
                                                dt_atend_farmacia = clock_timestamp(),
                                                nm_usuario_atend = 'Athena',
                                                ie_status_lote = 'A'
                                            WHERE
                                                nr_sequencia = nr_seq_lote_p;

                                        END IF;

                                    END IF;

                                END;
                            END IF;

                        END;
                    ELSE
                        BEGIN
                            IF ( ie_atualizar_consig_w = 'N' ) THEN
                                SELECT
                                    MAX(cd_operacao_estoque)
                                INTO STRICT cd_operacao_estoque_w
                                FROM
                                    operacao_estoque
                                WHERE
                                    ie_situacao = 'A'
                                    AND ie_tipo_requisicao = 5
                                    AND coalesce(ie_consignado, 0) = 0
                                    AND ie_atualiza_estoque = 'S'
                                    AND ie_entrada_saida = CASE WHEN cd_acao_w='1' THEN  'S'  ELSE 'E' END;

                            ELSE
                                SELECT
                                    MAX(cd_operacao_estoque)
                                INTO STRICT cd_operacao_estoque_w
                                FROM
                                    operacao_estoque
                                WHERE
                                    ie_situacao = 'A'
                                    AND ie_tipo_requisicao = 5
                                    AND coalesce(ie_consignado, 0) = 7
                                    AND ie_entrada_saida = CASE WHEN cd_acao_w='1' THEN  'S'  ELSE 'E' END;

                            END IF;

                            cd_acao_w := '1';
                            SELECT
                                MAX(cd_centro_custo)
                            INTO STRICT cd_centro_custo_w
                            FROM
                                setor_atendimento
                            WHERE
                                cd_setor_atendimento = cd_setor_atendimento_w;

                            define_conta_material(cd_estabelecimento_w, cd_material_w, '2', NULL, cd_setor_atendimento_w, NULL, NULL, 
                            NULL, NULL, NULL, cd_local_estoque_w, NULL, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, NULL);

                            INSERT INTO movimento_estoque(
                                nr_movimento_estoque,
                                cd_estabelecimento,
                                cd_local_estoque,
                                dt_movimento_estoque,
                                cd_operacao_estoque,
                                cd_acao,
                                cd_material,
                                dt_mesano_referencia,
                                qt_movimento,
                                dt_atualizacao,
                                nm_usuario,
                                ie_origem_documento,
                                nr_documento,
                                nr_sequencia_item_docto,
                                cd_unidade_medida_estoque,
                                cd_setor_atendimento,
                                qt_estoque,
                                cd_centro_custo,
                                cd_unidade_med_mov,
                                cd_fornecedor,
                                ds_observacao,
                                nr_seq_tab_orig,
                                nr_seq_lote_fornec,
                                cd_lote_fabricacao,
                                dt_validade,
                                nr_atendimento,
                                nr_prescricao,
                                nr_receita,
                                cd_conta_contabil,
                                nr_ordem_compra,
                                nr_item_oci,
                                nr_lote_ap,
                                nr_lote_producao,
                                cd_funcao
                            ) VALUES (
                                nextval('movimento_estoque_seq'),
                                cd_estabelecimento_w,
                                cd_local_estoque_w,
                                clock_timestamp(),
                                cd_operacao_estoque_w,
                                '1',
                                cd_material_w,
                                clock_timestamp(),
                                qt_material_w,
                                clock_timestamp(),
                                'Athena',
                                '3',
                                NULL,
                                NULL,
                                cd_unidade_medida_w,
                                cd_setor_atendimento_w,
                                qt_material_w,
                                cd_centro_custo_w,
                                cd_unidade_medida_w,
                                cd_fornec_consignado_w,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                cd_conta_contabil_w,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                147
                            );

                        END;
                    END IF;

                    ie_atualizou_p := 'S';
                END;
            END IF;

            ds_erro_p := ds_erro_w;
            IF ( coalesce(ds_erro_w::text, '') = '' ) AND ( coalesce(ie_commit_p, 'S') = 'S' ) THEN
                COMMIT;
            END IF;

        EXCEPTION
            WHEN OTHERS THEN
                ds_erro_p := substr(ds_erro_w
                                    || ' | '
                                    || sqlerrm(SQLSTATE), 1, 2000);
        END;
	
	END;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integracao_athena_disp_pck.athena_lancamento_mat ( cd_acao_p text, nr_atendimento_p bigint, cd_local_estoque_p bigint, cd_material_p bigint, qt_atual_p bigint, dt_movimento_p timestamp, cd_fornecedor_p text, nr_prescricao_p bigint, nr_seq_material_p bigint, nr_seq_lote_p bigint, ie_atualizou_p INOUT text, ds_erro_p INOUT text, cd_barras_p text DEFAULT NULL, ie_commit_p text DEFAULT 'S') FROM PUBLIC;
