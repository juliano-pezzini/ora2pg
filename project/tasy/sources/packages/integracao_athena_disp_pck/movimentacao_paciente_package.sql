-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE integracao_athena_disp_pck.movimentacao_paciente ( nr_atendimento_p bigint, cd_setor_new_p bigint, cd_setor_old_p bigint, nr_opcao_p bigint, nm_usuario_p text ) AS $body$
DECLARE


    /*
		nr_opcao_p
		1 - Transferencia
		2 - Alta
		3 - Internacao
		4 - Admissao do paciente (dispensario)
    */


        ie_setor_new_w				varchar(1) := 'N';
        ie_setor_old_w				varchar(1) := 'N';
        ie_prescr_vigente_w         varchar(1) := 'N';
        ds_param_integ_hl7_w        varchar(4000) := '';
        cd_setor_w                  setor_atendimento.cd_setor_atendimento%TYPE;
        nr_prescricao_w             prescr_medica.nr_prescricao%TYPE;
        ie_classif_setor_w			setor_atendimento.cd_classif_setor%TYPE;
        nr_seq_atepacu_w            bigint;

        c01 CURSOR FOR
            SELECT nr_prescricao
            FROM prescr_medica
            WHERE dt_validade_prescr > clock_timestamp()
            AND cd_setor_atendimento = cd_setor_old_p
            AND nr_atendimento = nr_atendimento_p;

        c02 CURSOR FOR
            SELECT  a.nr_prescricao
            FROM prescr_medica a,
                 prescr_mat_hor b,
                ( SELECT coalesce(nr_seq_estrut_int, 0) nr_seq_estrut_int, cd_estabelecimento FROM parametros_farmacia) c
            WHERE    (b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
            AND a.dt_validade_prescr > clock_timestamp()
            AND consistir_se_mat_contr_estrut(c.nr_seq_estrut_int, b.cd_material) = 'S'
            AND obter_status_processo(b.nr_seq_processo) IN ('G', 'X')
            AND EXISTS ( SELECT 1 FROM ap_lote x WHERE x.nr_sequencia = b.nr_seq_lote AND coalesce(x.dt_atend_farmacia::text, '') = '' )
            AND b.qt_dispensar_hor > 0
            AND a.cd_setor_atendimento = cd_setor_old_p
            AND a.nr_atendimento = nr_atendimento_p
            AND a.cd_estabelecimento = c.cd_estabelecimento
            AND a.nr_prescricao = b.nr_prescricao
            GROUP BY a.nr_prescricao;


BEGIN
        
        BEGIN          
            SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END 
            INTO STRICT ie_setor_new_w
            FROM far_setores_integracao
            WHERE nr_seq_empresa_int = current_setting('integracao_athena_disp_pck.nr_seq_empresa_integracao_w')::far_setores_integracao.nr_seq_empresa_int%type
            AND cd_setor_atendimento = cd_setor_new_p  LIMIT 1;

            SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END 
            INTO STRICT ie_setor_old_w
            FROM far_setores_integracao
            WHERE nr_seq_empresa_int = current_setting('integracao_athena_disp_pck.nr_seq_empresa_integracao_w')::far_setores_integracao.nr_seq_empresa_int%type
            AND cd_setor_atendimento = cd_setor_old_p  LIMIT 1;

        EXCEPTION
            WHEN OTHERS THEN
                ie_setor_new_w := 'N';
                ie_setor_old_w := 'N';
        END;

        SELECT MAX(cd_classif_setor)
        INTO STRICT ie_classif_setor_w
        FROM setor_atendimento
        WHERE cd_setor_atendimento = coalesce(cd_setor_old_p, cd_setor_new_p);

        IF ( nr_opcao_p = 1 ) THEN -- Transferencia > GERAR_TRANSFERENCIA_PACIENTE              
            -- Athena X nao Athena

            IF ( ie_setor_old_w = 'S' ) AND ( ie_setor_new_w = 'N' ) THEN

                select	coalesce(max(nr_seq_interno),0)
                into STRICT	nr_seq_atepacu_w
                from 	atend_paciente_unidade a
                where	a.nr_atendimento 		= nr_atendimento_p
                and 	a.cd_setor_atendimento = cd_setor_old_p;

                ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv
                                    ||  'nr_seq_interno=' || nr_seq_atepacu_w || obter_separador_bv;
                
                CALL gravar_agend_integracao(922, ds_param_integ_hl7_w);
            END IF;

            -- Athena X Athena

            IF ( ie_setor_old_w = 'S' ) AND ( ie_setor_new_w = 'S' ) THEN
                ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv;
                CALL gravar_agend_integracao(923, ds_param_integ_hl7_w);
            END IF;

            -- Nao Athena X Athena

            IF ( ie_setor_old_w = 'N' ) AND ( ie_setor_new_w = 'S' ) THEN
            
                BEGIN
                    SELECT 'S'
                    INTO STRICT ie_prescr_vigente_w
                    FROM prescr_medica a,prescr_mat_hor b,
                        ( SELECT coalesce(nr_seq_estrut_int, 0) nr_seq_estrut_int, cd_estabelecimento FROM parametros_farmacia ) c
                    WHERE (b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
                    AND a.dt_validade_prescr > clock_timestamp() 
                    AND consistir_se_mat_contr_estrut(c.nr_seq_estrut_int, b.cd_material) = 'S'
                    AND EXISTS ( SELECT 1 FROM ap_lote x WHERE x.nr_sequencia = b.nr_seq_lote AND coalesce(x.dt_atend_farmacia::text, '') = '' )
                    AND b.qt_dispensar_hor > 0
                    AND a.cd_setor_atendimento = cd_setor_old_p
                    AND a.nr_atendimento = nr_atendimento_p
                    AND a.cd_estabelecimento = c.cd_estabelecimento
                    AND a.nr_prescricao = b.nr_prescricao  LIMIT 1;
                EXCEPTION
                    WHEN OTHERS THEN
                        ie_prescr_vigente_w := 'N';
                END;

                IF ( ie_prescr_vigente_w = 'S' ) THEN
                    OPEN c02;
                    LOOP
                        FETCH c02 INTO nr_prescricao_w;
                        EXIT WHEN NOT FOUND; /* apply on c02 */
                        BEGIN
                            ds_param_integ_hl7_w := 'nr_prescricao=' || nr_prescricao_w || obter_separador_bv
                                                    || 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv
                                                    || 'ie_aprazado='|| 'GPMH' || obter_separador_bv
                                                    || 'ie_origem=' || 'SMP'|| obter_separador_bv;

                            CALL gravar_agend_integracao(921, ds_param_integ_hl7_w);
                        END;

                    END LOOP;

                    CLOSE c02;
                END IF;
            END IF;
			
        ELSIF ( nr_opcao_p = 2 ) THEN -- Alta > GERAR_ESTORNAR_ALTA

            SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END 
            INTO STRICT ie_setor_old_w
            FROM far_setores_integracao
            WHERE nr_seq_empresa_int = current_setting('integracao_athena_disp_pck.nr_seq_empresa_integracao_w')::far_setores_integracao.nr_seq_empresa_int%type
            AND cd_setor_atendimento = obter_unidade_atendimento(nr_atendimento_p, 'IAA', 'CS')  LIMIT 1;

            IF ( ie_setor_old_w = 'S' ) THEN

                select	coalesce(max(nr_seq_interno),0)
                into STRICT	nr_seq_atepacu_w
                from 	atend_paciente_unidade a
                where	a.nr_atendimento 		= nr_atendimento_p
                and 	a.cd_setor_atendimento = cd_setor_old_p;

                ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv
                                    ||  'nr_seq_interno=' || nr_seq_atepacu_w || obter_separador_bv;

                CALL gravar_agend_integracao(922, ds_param_integ_hl7_w);
            END IF;
        
        ELSIF ( nr_opcao_p = 3 ) and ( ie_setor_old_w = 'N' ) and ( ie_setor_new_w = 'S' ) THEN --Internacao > ATEND_PACIENTE_UNIDADE_INSERT
            
            BEGIN
                cd_setor_w := obter_setor_atendimento(nr_atendimento_p);

                SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END 
                INTO STRICT ie_setor_old_w
                FROM far_setores_integracao
                WHERE nr_seq_empresa_int = current_setting('integracao_athena_disp_pck.nr_seq_empresa_integracao_w')::far_setores_integracao.nr_seq_empresa_int%type
                AND cd_setor_atendimento = cd_setor_w  LIMIT 1;
            EXCEPTION
                WHEN OTHERS THEN
                    ie_setor_old_w := 'N';
            END;

            IF ( ie_setor_old_w = 'N' ) THEN
                BEGIN
                    SELECT 'S'
                    INTO STRICT ie_prescr_vigente_w
                    FROM prescr_medica    a,
                        prescr_mat_hor   b,
                        ( SELECT coalesce(nr_seq_estrut_int, 0) nr_seq_estrut_int, cd_estabelecimento FROM parametros_farmacia ) c
                    WHERE (b.nr_seq_lote IS NOT NULL AND b.nr_seq_lote::text <> '')
                    AND a.dt_validade_prescr > clock_timestamp()
                    AND consistir_se_mat_contr_estrut(c.nr_seq_estrut_int, b.cd_material) = 'S'
                    AND EXISTS ( SELECT 1 FROM ap_lote x WHERE x.nr_sequencia = b.nr_seq_lote AND coalesce(x.dt_atend_farmacia::text, '') = '' )
                    AND b.qt_dispensar_hor > 0
                    AND a.cd_setor_atendimento = cd_setor_w
                    AND a.nr_atendimento = nr_atendimento_p
                    AND a.cd_estabelecimento = c.cd_estabelecimento
                    AND a.nr_prescricao = b.nr_prescricao  LIMIT 1;

                EXCEPTION
                    WHEN OTHERS THEN
                        ie_prescr_vigente_w := 'N';
                END;

                IF ( ie_prescr_vigente_w = 'N' ) THEN
                    ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv;
                    CALL gravar_agend_integracao(917, ds_param_integ_hl7_w);
                END IF;

            END IF;

        ELSIF ( nr_opcao_p = 4 ) THEN -- Admissao do paciente (dispensario)
            ds_param_integ_hl7_w := 'nr_atendimento=' || nr_atendimento_p || obter_separador_bv;
            CALL gravar_agend_integracao(917, ds_param_integ_hl7_w);
        END IF;

    END;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integracao_athena_disp_pck.movimentacao_paciente ( nr_atendimento_p bigint, cd_setor_new_p bigint, cd_setor_old_p bigint, nr_opcao_p bigint, nm_usuario_p text ) FROM PUBLIC;
