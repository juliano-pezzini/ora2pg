-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE integracao_athena_disp_pck.athena_gerar_req_auto ( nr_requisicao_p bigint, cd_estabelecimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_local_destino_p bigint, ie_liberar_p text, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text ) AS $body$
DECLARE

	
        nr_sequencia_w                bigint;
        cd_unidade_medida_w           varchar(30);
        cd_unidade_medida_estoque_w   varchar(30);
        qt_conv_estoque_cons_w        double precision;
        qt_estoque_w                  double precision;
        ds_erro_w                     varchar(2000);
        nr_seq_erro_w                 bigint;
        nr_item_requisicao_w          bigint;
        qt_atendida_w                 double precision;
        cd_pessoa_requisitante_w      bigint;
        dt_liberacao_w                timestamp;
        cd_pessoa_requisicao_w        varchar(10);
        cd_operacao_estoque_w         smallint;
        cd_local_estoque_w            smallint;
        cd_local_estoque_req_w        smallint;
        nr_seq_req_w                  bigint;
        nm_usuario_w                  usuario.nm_usuario%TYPE;
        cd_material_w                 material.cd_material%TYPE;
        cd_material_ww                material.cd_material%TYPE;
        qt_saldo_w                    double precision := 0;
        qt_saldo_ww                   double precision := 0;
        cd_estabelecimento_w          estabelecimento.cd_estabelecimento%TYPE;

        c01 CURSOR FOR
            SELECT coalesce(substr(wheb_mensagem_pck.get_texto(314232) || cd_material || ' - ' || ds_consistencia || '.', 1, 2000), NULL)
            FROM requisicao_mat_consist
            WHERE nr_requisicao = nr_seq_req_w;

	
BEGIN
		BEGIN
			cd_estabelecimento_w := cd_estabelecimento_p;
			nr_seq_req_w := nr_requisicao_p;
			cd_material_w := cd_material_p;
			IF ( cd_estabelecimento_w = 0 ) AND ( coalesce(cd_local_destino_p, 0) > 0 ) THEN
				SELECT
					coalesce(MAX(cd_estabelecimento), 0)
				INTO STRICT cd_estabelecimento_w
				FROM
					local_estoque
				WHERE
					cd_local_estoque = cd_local_destino_p;

			END IF;

			IF ( cd_estabelecimento_w = 0 ) THEN
				SELECT
					MAX(cd_estabelecimento)
				INTO STRICT cd_estabelecimento_w
				FROM
					parametros_farmacia
				WHERE
					(cd_pessoa_requisicao IS NOT NULL AND cd_pessoa_requisicao::text <> '');

			END IF;

			SELECT
				cd_pessoa_requisicao,
				cd_operacao_estoque,
				cd_local_estoque,
				cd_local_estoque_req,
				obter_usuario_pf(cd_pessoa_requisicao)
			INTO STRICT
				cd_pessoa_requisicao_w,
				cd_operacao_estoque_w,
				cd_local_estoque_w,
				cd_local_estoque_req_w,
				nm_usuario_w
			FROM
				parametros_farmacia
			WHERE
				cd_estabelecimento = cd_estabelecimento_w;

			IF ( coalesce(nr_seq_req_w::text, '') = '' ) OR ( nr_seq_req_w = 0 ) THEN
				BEGIN
					SELECT
						nextval('requisicao_seq')
					INTO STRICT nr_seq_req_w
					;

					nr_sequencia_p := nr_seq_req_w;
					INSERT INTO requisicao_material(
						nr_requisicao,
						cd_estabelecimento,
						cd_local_estoque,
						dt_solicitacao_requisicao,
						dt_atualizacao,
						nm_usuario,
						cd_operacao_estoque,
						cd_pessoa_requisitante,
						cd_local_estoque_destino,
						nm_usuario_lib,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_geracao,
						ie_urgente
					) VALUES (
						nr_seq_req_w,
						cd_estabelecimento_w,
						cd_local_estoque_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_w,
						cd_operacao_estoque_w,
						cd_pessoa_requisicao_w,
						cd_local_estoque_req_w,
						nm_usuario_w,
						clock_timestamp(),
						nm_usuario_w,
						'I',
						'N'
					);

				END;
			END IF;

			IF ( nr_seq_req_w > 0 ) THEN
				BEGIN
					SELECT
						coalesce(MAX(nr_sequencia), 0) + 1
					INTO STRICT nr_sequencia_w
					FROM
						item_requisicao_material
					WHERE
						nr_requisicao = nr_seq_req_w;

					cd_unidade_medida_w := obter_dados_material_estab(cd_material_w, cd_estabelecimento_w, 'UMC');
					cd_unidade_medida_estoque_w := obter_dados_material_estab(cd_material_w, cd_estabelecimento_w, 'UME');
					qt_conv_estoque_cons_w := obter_conversao_material(cd_material_w, 'CE');
					INSERT INTO item_requisicao_material(
						nr_requisicao,
						nr_sequencia,
						cd_estabelecimento,
						cd_material,
						qt_material_requisitada,
						vl_material,
						dt_atualizacao,
						nm_usuario,
						cd_unidade_medida,
						qt_estoque,
						cd_unidade_medida_estoque
					) VALUES (
						nr_seq_req_w,
						nr_sequencia_w,
						cd_estabelecimento_w,
						cd_material_w,
						qt_material_p,
						0,
						clock_timestamp(),
						nm_usuario_w,
						cd_unidade_medida_w,
						qt_estoque_w,
						cd_unidade_medida_estoque_w
					);

				END;
			END IF;

			COMMIT;
			IF ( ie_liberar_p = 'S' ) THEN
				consistir_requisicao(nr_seq_req_w, nm_usuario_w, cd_local_estoque_req_w, NULL, 'N', 'N', 'N', 'N', 'S', 'N', 'N', cd_operacao_estoque_w
				, ds_erro_p);

				SELECT
					dt_liberacao
				INTO STRICT dt_liberacao_w
				FROM
					requisicao_material
				WHERE
					nr_requisicao = nr_seq_req_w;

				IF ( coalesce(dt_liberacao_w::text, '') = '' ) THEN
					OPEN c01;
					LOOP
						FETCH c01 INTO ds_erro_w;
						EXIT WHEN NOT FOUND; /* apply on c01 */
						BEGIN
							ds_erro_p := ds_erro_p || ds_erro_w;
						END;
					END LOOP;

					CLOSE c01;
				END IF;

			END IF;

			COMMIT;
		END;
	END;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integracao_athena_disp_pck.athena_gerar_req_auto ( nr_requisicao_p bigint, cd_estabelecimento_p bigint, cd_material_p bigint, qt_material_p bigint, cd_local_destino_p bigint, ie_liberar_p text, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text ) FROM PUBLIC;
