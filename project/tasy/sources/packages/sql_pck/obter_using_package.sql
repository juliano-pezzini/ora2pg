-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION sql_pck.obter_using ( bind_sql_comando_p sql_pck.t_varchar2_table_bind, bind_sql_valor_p sql_pck.t_dado_bind) RETURNS varchar AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Recebe os binds identificados no comando SQL e os seus respectivos valores e
	constrói uma clausula using que será usada nos próximos passos
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Alterações:
 ------------------------------------------------------------------------------------------------------------------
 usuario OS XXXXXX 01/01/2000 -
 Alteração:	Descrição da alteração.
Motivo:	Descrição do motivo.
 ------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_using_w		varchar(5000);
nm_bind_w		varchar(100);
nr_posicao_bind_w	integer;

BEGIN
ds_using_w := null;
-- se existir algum bind no comando sql
if (bind_sql_comando_p.count > 0) then
	-- percorre todos os binds identificados no comando SQL e verifica seus respectivos valores
	for i in bind_sql_comando_p.first .. bind_sql_comando_p.last loop
		-- obtém o nome da bind do comando SQL
		nm_bind_w := bind_sql_comando_p(i);

		-- pesquisa o bind e se existir retorna a posição
		nr_posicao_bind_w := sql_pck.obter_index_bind(	bind_sql_valor_p, nm_bind_w);

		-- verifica se para o bind identificado dentro do comando SQL existe algum valor
		if (nr_posicao_bind_w IS NOT NULL AND nr_posicao_bind_w::text <> '') then

			if (ds_using_w IS NOT NULL AND ds_using_w::text <> '') then
				ds_using_w := ds_using_w || ', ';
			end if;
			-- faz os tratamentos de acordo com a necessidade e o tipo de dado
			case bind_sql_valor_p[nr_posicao_bind_w].ie_tipo_valor
				when current_setting('sql_pck.b_data')::varchar(10) then
					ds_using_w := ds_using_w || ' to_date(''' || to_char(bind_sql_valor_p[nr_posicao_bind_w].dt_valor, 'DD/MM/YYYY') || ''', ''DD/MM/YYYY'')';
				when current_setting('sql_pck.b_data_hora')::varchar(10) then
					ds_using_w := ds_using_w || ' to_date(''' || to_char(bind_sql_valor_p[nr_posicao_bind_w].dt_valor, 'DD/MM/YYYY HH24:MI:SS') || ''', ''DD/MM/YYYY HH24:MI:SS'')';
				when current_setting('sql_pck.b_hora')::varchar(10) then
					ds_using_w := ds_using_w || ' to_date(''' || to_char(bind_sql_valor_p[nr_posicao_bind_w].dt_valor, 'HH24:MI:SS') || ''', ''HH24:MI:SS'')';
				when current_setting('sql_pck.b_number')::varchar(10) then
					-- tratamento para valores nulos e campos com formatação brasileira (tira primeiro ponto e depois vírgula vira ponto
					ds_using_w := ds_using_w || ' ' || coalesce(replace(replace(to_char(bind_sql_valor_p[nr_posicao_bind_w].vl_valor), '.', ''), ',', '.'), 'to_number(null)');
				when current_setting('sql_pck.b_varchar')::varchar(10) then
					ds_using_w := ds_using_w || ' ''' || replace(bind_sql_valor_p[nr_posicao_bind_w].ds_valor, '''', '''''') || ''' ';
				else
					null;
			end case;
		else
			-- O valor da bind variable #@BIND#@ não foi informado.
			wheb_mensagem_pck.exibir_mensagem_abort(290121,	'BIND=' || nm_bind_w);
		end if;
	end loop;
end if;
-- se teve valores acima, então acrescenta o using
if (ds_using_w IS NOT NULL AND ds_using_w::text <> '') then
	ds_using_w := 'using ' || ds_using_w;
end if;

return ds_using_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sql_pck.obter_using ( bind_sql_comando_p sql_pck.t_varchar2_table_bind, bind_sql_valor_p sql_pck.t_dado_bind) FROM PUBLIC;
