-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




  -- Carregar o arquivo de pre-pagto em XML



CREATE OR REPLACE PROCEDURE pls_imp_pre_pagto_pck.carregar_pre_pagto_xml ( nr_seq_arquivo_p pls_faturamento_arq.nr_sequencia%type, ie_origem_imp_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/*
  ie_origem_imp_p = 1 - A700, 2- A500
*/
                    

ds_xml_w    		text;
-- Cabecalho

ds_cabecalho_w    	text;
ds_origem_w       	text;
ds_destino_w      	text;

-- Contar guias

nr_spsadt_w       	bigint;
nr_internacao_w   	bigint;
nr_honorario_w    	bigint;
nr_consulta_w     	bigint;

-- Arquivo

ie_origem_imp_w      	pls_faturamento_prot.ie_tipo_faturamento%type;
cd_cnpj_origem_w    	pls_faturamento_prot.cd_cgc_prestador%type;
cd_cpf_origem_w      	pls_faturamento_prot.cd_cpf_prestador%type;
cd_registro_ans_dest_w  pls_faturamento_prot.cd_ans%type;
ds_versao_tiss_w    	pls_faturamento_prot.cd_versao_tiss%type;
ds_hash_w        	pls_faturamento_prot.ds_hash%type;
nr_seq_prot_gerado_w	pls_faturamento_prot.nr_sequencia%type;
cd_ans_origem_w		pls_faturamento_prot.cd_ans%type;


BEGIN

	select   ds_xml
	into STRICT  ds_xml_w
	from  pls_faturamento_arq
	where   nr_sequencia = nr_seq_arquivo_p;
	
	-- Cabecalho XML

	ds_cabecalho_w    := pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_xml_w,'ans:cabecalho',1);
	ds_origem_w    := pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_cabecalho_w,'ans:origem',1);
	ds_destino_w    := pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_cabecalho_w,'ans:destino',1);
	
	-- Origem

	cd_ans_origem_w		:= pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_origem_w,'ans:registroANS',1);
	cd_cnpj_origem_w	:= pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_origem_w,'ans:CNPJ',1);
	cd_cpf_origem_w		:= pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_origem_w,'ans:cpf',1);
	
	-- Destino

	cd_registro_ans_dest_w  := pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_destino_w,'ans:registroANS',1);
	
	ds_versao_tiss_w  := pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_cabecalho_w,'ans:Padrao',1);
	ds_hash_w    := pls_imp_pre_pagto_pck.obter_conteudo_tag(ds_xml_w,'ans:hash',1);
	
	if (ie_origem_imp_p = 1) then
		ie_origem_imp_w := 'PRE';
		
	elsif (ie_origem_imp_p = 2) then
		ie_origem_imp_w := 'POS';
	end if;
	
	nr_seq_prot_gerado_w := pls_imp_pre_pagto_pck.inserir_pre_pagto_prot( nr_seq_arquivo_p, cd_cnpj_origem_w, cd_cpf_origem_w, cd_ans_origem_w, cd_registro_ans_dest_w, ds_versao_tiss_w, ds_hash_w, ie_origem_imp_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_prot_gerado_w);
				
	nr_spsadt_w	:= pls_imp_pre_pagto_pck.obter_numero_tag(ds_xml_w,'ans:guiaSP-SADT');
	nr_internacao_w	:= pls_imp_pre_pagto_pck.obter_numero_tag(ds_xml_w,'ans:guiaResumoInternacao');
	nr_honorario_w	:= pls_imp_pre_pagto_pck.obter_numero_tag(ds_xml_w,'ans:guiaHonorarios');
	nr_consulta_w	:= pls_imp_pre_pagto_pck.obter_numero_tag(ds_xml_w,'ans:guiaConsulta');
	
	if (nr_spsadt_w > 0) then -- SP/SADT
		-- Carregar guias

		CALL pls_imp_pre_pagto_pck.carregar_contas_e_dependentes( ds_xml_w, nr_seq_prot_gerado_w , nr_spsadt_w, 4, ds_versao_tiss_w, nm_usuario_p);
		
	elsif (nr_internacao_w > 0) then -- Internacao
		-- Carregar guias

		CALL pls_imp_pre_pagto_pck.carregar_contas_e_dependentes(	ds_xml_w, nr_seq_prot_gerado_w, nr_internacao_w, 5, ds_versao_tiss_w, nm_usuario_p);
	elsif (nr_honorario_w > 0) then -- Honorario    
		-- Carregar guias

		CALL pls_imp_pre_pagto_pck.carregar_contas_e_dependentes( ds_xml_w, nr_seq_prot_gerado_w, nr_honorario_w, 6, ds_versao_tiss_w, nm_usuario_p);
	elsif (nr_consulta_w > 0) then -- Consulta    
		-- Carregar guias

		CALL pls_imp_pre_pagto_pck.carregar_contas_e_dependentes( ds_xml_w, nr_seq_prot_gerado_w, nr_consulta_w, 3, ds_versao_tiss_w, nm_usuario_p);
	end if;
	
	--Identificacao dos beneficiarios atraves das informacoes importadas para as contas.

	CALL pls_imp_pre_pagto_pck.ident_beneficiarios_imp( nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--Identificao dos prestadores a nivel de protocolo, conta e participante, com base nas informacoes obtidas da importacao.

	CALL pls_imp_pre_pagto_pck.ident_prestadores_imp( nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--Etapa para identificacao e conversoes de informacoes das contas importadas.

	CALL pls_imp_pre_pagto_pck.conversao_informacoes_conta(nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--idnetificacao e conversao de materiais

	CALL pls_imp_pre_pagto_pck.conversao_materiais( nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--aqui vira a conversao de procedimentos

	CALL pls_imp_pre_pagto_pck.conversao_procedimentos( nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--Converte campos relativos a participantes importados 

	CALL pls_imp_pre_pagto_pck.conversao_participantes( nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--Apos as conversoes, podera ser populada a pls_fat_conta_mat com aquilo que foi deifnido como sendo de fato material

	CALL pls_imp_pre_pagto_pck.gerar_fat_conta_mat(nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);
	
	--Apos as conversoes, podera ser populada a pls_fat_conta_mat com aquilo que foi deifnido como sendo de fato material

	CALL pls_imp_pre_pagto_pck.gerar_fat_conta_proc(nr_seq_prot_gerado_w, nm_usuario_p, cd_estabelecimento_p);

update  pls_faturamento_arq
set    dt_finalizacao_arquivo  = clock_timestamp()
where  nr_sequencia  = nr_seq_arquivo_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_pre_pagto_pck.carregar_pre_pagto_xml ( nr_seq_arquivo_p pls_faturamento_arq.nr_sequencia%type, ie_origem_imp_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
