-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_imp_pre_pagto_pck.ident_prestadores_imp ( nr_seq_prot_gerado_p pls_faturamento_prot.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

					
nr_seq_prest_inter_w		pls_prestador_intercambio.nr_sequencia%type;	
nr_seq_prest_solic_inter_w	pls_prestador_intercambio.nr_sequencia%type;
nr_seq_outorgante_w		pls_congenere.nr_sequencia%type;
nr_seq_prestador_exec_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_solic_w	pls_prestador.nr_sequencia%type;
nr_seq_prestador_partic_w	pls_prestador.nr_sequencia%type;

C00 CURSOR FOR
	SELECT	a.cd_cgc_prestador cd_cgc_prest_prot,
		a.cd_cpf_prestador cd_cpf_prest_prot,
		a.cd_ans cd_ans
	from	pls_faturamento_prot a
	where	nr_sequencia = nr_seq_prot_gerado_p;
		
C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_cpf_prest_exec cd_cpf_prest_exec_conta,
		a.cd_cpf_prest_solic cd_cpf_prest_solic_conta,
		a.cd_cgc_prest_exec cd_cgc_prest_exec_conta,
		a.cd_cgc_prest_solic cd_cgc_prest_solic_conta,
		a.nm_prestador_exec_imp nm_prestador_exec_conta,
		a.nm_prestador_imp nm_prestador_solic_conta
	from	pls_faturamento_conta a
	where	nr_seq_protocolo = nr_seq_prot_gerado_p;
		
C02 CURSOR(	nr_seq_conta_pc	pls_faturamento_conta.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia,
		b.cd_cpf_prestador,
		null cd_cgc_prestador,
		b.nm_profissional
	from	pls_fat_conta_item a,
		pls_fat_conta_item_equipe b
	where	a.nr_seq_conta = nr_seq_conta_pc
	and 	b.nr_seq_item_conta = a.nr_sequencia;
		
BEGIN

for r_c00_w in C00 loop
	if	((r_c00_w.cd_ans IS NOT NULL AND r_c00_w.cd_ans::text <> '') or (r_c00_w.cd_cgc_prest_prot IS NOT NULL AND r_c00_w.cd_cgc_prest_prot::text <> '')) then
		nr_seq_outorgante_w	:= pls_imp_pre_pagto_pck.obter_outorgante(r_c00_w.cd_ans, r_c00_w.cd_cgc_prest_prot);
	end if;
	
	if (coalesce(nr_seq_outorgante_w::text, '') = '') then
		nr_seq_prest_inter_w := pls_imp_pre_pagto_pck.obter_prest_intercambio(r_c00_w.cd_cpf_prest_prot, r_c00_w.cd_cgc_prest_prot);
	end if;
	
	update 	pls_faturamento_prot
	set 	nr_seq_prest_inter 	= nr_seq_prest_inter_w,
		nr_seq_outorgante	= nr_seq_outorgante_w
	where 	nr_sequencia 		= nr_seq_prot_gerado_p;
	
	for r_c01_w in C01 loop
		nr_seq_prest_inter_w 		:= pls_imp_pre_pagto_pck.obter_prest_intercambio(r_c01_w.cd_cpf_prest_exec_conta, r_c01_w.cd_cgc_prest_exec_conta);
		nr_seq_prest_solic_inter_w 	:= pls_imp_pre_pagto_pck.obter_prest_intercambio(r_c01_w.cd_cpf_prest_solic_conta, r_c01_w.cd_cgc_prest_solic_conta);
		
		-- Se nao tem o prestador executor na base

		if (coalesce(nr_seq_prest_inter_w::text, '') = '') and
			((r_c01_w.cd_cpf_prest_exec_conta IS NOT NULL AND r_c01_w.cd_cpf_prest_exec_conta::text <> '') or (r_c01_w.cd_cgc_prest_exec_conta IS NOT NULL AND r_c01_w.cd_cgc_prest_exec_conta::text <> '')) then
			pls_gerar_prest_intercambio(	r_c01_w.cd_cpf_prest_exec_conta, r_c01_w.cd_cgc_prest_exec_conta, r_c01_w.nm_prestador_exec_conta,
							null, null, nm_usuario_p, null, null, nr_seq_prest_inter_w, nr_seq_prestador_exec_w);
		end if;
		
		-- Se nao tem o prestador solicitante na base

		if (coalesce(nr_seq_prest_solic_inter_w::text, '') = '') and
			((r_c01_w.cd_cpf_prest_solic_conta IS NOT NULL AND r_c01_w.cd_cpf_prest_solic_conta::text <> '') or (r_c01_w.cd_cgc_prest_solic_conta IS NOT NULL AND r_c01_w.cd_cgc_prest_solic_conta::text <> '')) then
			pls_gerar_prest_intercambio(	r_c01_w.cd_cpf_prest_solic_conta, r_c01_w.cd_cgc_prest_solic_conta, r_c01_w.nm_prestador_solic_conta,
							null, null, nm_usuario_p, null, null, nr_seq_prest_solic_inter_w, nr_seq_prestador_solic_w);
		end if;
		
		update 	pls_faturamento_conta			
		set	nr_seq_prest_inter		= nr_seq_prest_inter_w,
			nr_seq_prest_solic_inter	= nr_seq_prest_solic_inter_w
		where	nr_sequencia			= r_c01_w.nr_sequencia;
		
		for r_c02_w in C02(r_c01_w.nr_sequencia) loop
			nr_seq_prest_inter_w := pls_imp_pre_pagto_pck.obter_prest_intercambio(r_c02_w.cd_cpf_prestador, r_c02_w.cd_cgc_prestador);
			
			-- Se nao tem o prestador participante na base

			if (coalesce(nr_seq_prest_inter_w::text, '') = '') and
				((r_c02_w.cd_cpf_prestador IS NOT NULL AND r_c02_w.cd_cpf_prestador::text <> '') or (r_c02_w.cd_cgc_prestador IS NOT NULL AND r_c02_w.cd_cgc_prestador::text <> '')) then
				pls_gerar_prest_intercambio(	r_c02_w.cd_cpf_prestador, r_c02_w.cd_cgc_prestador, r_c02_w.nm_profissional,
								null, null, nm_usuario_p, null, null, nr_seq_prest_inter_w, nr_seq_prestador_partic_w);
			end if;
			
			update	pls_fat_conta_item_equipe
			set	nr_seq_prest_inter	= nr_seq_prest_inter_w
			where	nr_sequencia		= r_c02_w.nr_sequencia;
		end loop;	
	end loop;	
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_pre_pagto_pck.ident_prestadores_imp ( nr_seq_prot_gerado_p pls_faturamento_prot.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
