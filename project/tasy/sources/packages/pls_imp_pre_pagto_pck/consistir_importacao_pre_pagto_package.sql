-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_imp_pre_pagto_pck.consistir_importacao_pre_pagto ( nr_seq_prot_gerado_p pls_faturamento_prot.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

						
--limpa inconsistencias geradas em execucoes anteriores

C00 CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_conta
	from	pls_faturamento_prot a,
		pls_faturamento_conta b
	where	a.nr_sequencia = nr_seq_prot_gerado_p
	and	a.nr_sequencia = b.nr_seq_protocolo;
	
--Para inconsistencias a nivel de conta

C02 CURSOR FOR
	SELECT	a.cd_ans,
		a.cd_ans_destino,
		b.nr_sequencia nr_seq_conta,
		b.cd_guia_prestador,
		b.cd_usuario_plano nr_carteirinha,
		b.ie_recem_nascido,
		b.nm_segurado_imp,
		b.cd_cpf_prest_solic,
		b.cd_cgc_prest_solic,
		b.nm_prestador_imp nm_contratado_solic,
		b.sg_conselho_solic_imp,
		b.nr_crm_solic_imp,
		b.uf_crm_solic_imp,
		b.cd_cbo_saude_solic_imp,
		b.cd_cpf_prest_exec,
		b.cd_cgc_prest_exec,
		b.nm_prestador_exec_imp,
		b.ie_tipo_atendimento,
		b.ie_indicacao_acidente,
		b.vl_total_imp,
		b.ie_tipo_guia,
		b.ie_carater_atendimento,
		b.cd_cnes,
		b.cd_guia_principal,
		b.dt_autorizacao,
		b.cd_senha,
		b.vl_procedimentos_imp,
		b.ie_motivo_encerramento,
		b.ie_regime_internacao,
		b.ie_tipo_internacao,
		b.dt_fim_faturamento,
		b.dt_inicio_faturamento,
		b.ie_tipo_faturamento,
		b.sg_conselho_exec_imp,
		b.nr_crm_exec_imp,
		b.uf_crm_exec_imp,
		b.cd_cbo_saude_exec_imp,
		b.ie_tipo_consulta,
		b.dt_atendimento,
		b.cd_cnes_hosp_exec,
		b.nm_hosp_exec, 
		b.cd_cnpj_hosp_exec
	from	pls_faturamento_prot a,
		pls_faturamento_conta b
	where	a.nr_sequencia = nr_seq_prot_gerado_p
	and	a.nr_sequencia = b.nr_seq_protocolo;

--Para inconsistencias a nivel de procedimento

C03 CURSOR(	nr_seq_conta_p	pls_faturamento_conta.nr_sequencia%type) FOR
	SELECT	d.nr_sequencia nr_seq_conta_proc,
		c.ie_tipo_despesa,
		c.dt_execucao,
		c.cd_procedimento cd_item,
		c.qt_executado,
		c.tx_reducao_acrescimo,
		c.vl_unitario,
		c.vl_total,
		c.ds_procedimento ds_item,
		c.cd_tipo_tabela_conv cd_tipo_tabela,
		c.ie_tipo_item,
		c.ie_tipo_item_conv,
		c.nr_sequencia nr_seq_item
	from	pls_faturamento_conta b,
		pls_fat_conta_item c,
		pls_fat_conta_proc d
	where	b.nr_sequencia = nr_seq_conta_p
	and	c.nr_seq_conta = b.nr_sequencia
	and	c.nr_sequencia = d.nr_seq_item_conta;
	
--Para inconsistencias a nivel de material

C04 CURSOR(	nr_seq_conta_p	pls_faturamento_conta.nr_sequencia%type ) FOR
	SELECT	d.nr_sequencia nr_seq_conta_mat,
		c.ie_tipo_despesa,
		c.dt_execucao,
		c.cd_procedimento cd_item,
		c.qt_executado,
		c.tx_reducao_acrescimo,
		c.vl_unitario,
		c.vl_total,
		c.ds_procedimento ds_item,
		c.cd_tipo_tabela_conv cd_tipo_tabela,
		c.ie_tipo_item,
		c.ie_tipo_item_conv
	from	pls_faturamento_conta b,
		pls_fat_conta_item c,
		pls_fat_conta_mat d
	where	b.nr_sequencia = nr_seq_conta_p
	and	c.nr_seq_conta = b.nr_sequencia
	and	c.nr_sequencia = d.nr_seq_item_conta;
	
C05 CURSOR(	nr_seq_item_p	pls_fat_conta_item_equipe.nr_sequencia%type) FOR
	SELECT	uf_conselho,
		nr_conselho_profissional,
		nm_profissional,
		cd_cpf_prestador,
		cd_grau_partic,
		sg_conselho_imp,
		cd_cbo_saude_profissional
	from	pls_fat_conta_item_equipe
	where	nr_seq_item_conta = nr_seq_item_p;
	
BEGIN
	
	for r_c00_w in C00 loop
	
		delete 	from pls_faturamento_inc
		where 	nr_seq_conta = r_c00_w.nr_seq_conta;
	
	end loop;

	for r_c02_w in C02 loop

		--inconsistencia 1 Registro ANS nao informado (obrigatorio para todos os tipos de guias)

		if (coalesce(r_c02_w.cd_ans_destino::text, '') = '') then
				
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 1, null, nm_usuario_p);
						
		end if;
	
		--inconsistencia 2 Guia do prestador nao informada(Obrigatorio para todos os tipos de guias)

		if (coalesce(r_c02_w.cd_guia_prestador::text, '') = '') then
			
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 2, null, nm_usuario_p);
			
		end if;
		
		--inconsistencia 3 - Numero da carteira nao informado

		if (coalesce(r_c02_w.nr_carteirinha::text, '') = '') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 3, null, nm_usuario_p);
		
		end if;
		
		--Inconsistemncia 4 - Identificador recem-nato nao informado

		if (coalesce(r_c02_w.ie_recem_nascido::text, '') = '') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 4, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 5 - Nome do beneficiario nao informado

		if (coalesce(r_c02_w.nm_segurado_imp::text, '') = '') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 5, null, nm_usuario_p);
		
		end if;
											
		--Inconsistencia 6 - Codigo contratado solicitante nao informado

		if	((coalesce(r_c02_w.cd_cpf_prest_solic::text, '') = '' and coalesce(r_c02_w.cd_cgc_prest_solic::text, '') = '') and (r_c02_w.ie_tipo_guia = '4')) then
			
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 6, null, nm_usuario_p);
			
		end if;
		
		--Inconsistencia 7 - Nome contratado solicitante nao informado

		if ((coalesce(r_c02_w.nm_contratado_solic::text, '') = '') and (r_c02_w.ie_tipo_guia = '4')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 7, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 8 - Cons. profissional solicitante nao informado

		if ((coalesce(r_c02_w.sg_conselho_solic_imp::text, '') = '') and (r_c02_w.ie_tipo_guia = '4')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 8, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 9 - Num. solicitante no conselho prof. nao informado

		if ((coalesce(r_c02_w.nr_crm_solic_imp::text, '') = '') and (r_c02_w.ie_tipo_guia = '4')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 9, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 10 - UF conselho profissional solicitante nao informada

		if (( coalesce(r_c02_w.uf_crm_solic_imp::text, '') = '') and (r_c02_w.ie_tipo_guia = '4')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 10, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 11 - CBO solicitante nao informado

		if (( coalesce(r_c02_w.cd_cbo_saude_solic_imp::text, '') = '') and (r_c02_w.ie_tipo_guia = '4')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 11, null, nm_usuario_p);
		
		end if;
		
		--inconsistencia 12 - Carater atendimento nao informado

		if ((coalesce(r_c02_w.ie_carater_atendimento::text, '') = '') and (r_c02_w.ie_tipo_guia in ('4','5'))) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 12, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 13 - Cod. contratado executante nao informado

		if (coalesce(r_c02_w.cd_cpf_prest_exec::text, '') = '' and coalesce(r_c02_w.cd_cgc_prest_exec::text, '') = '') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 13, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 14 - Nome contratado executante nao informado

		if (coalesce(r_c02_w.nm_prestador_exec_imp::text, '') = '') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 14, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  15 -  CNES executante nao informado

		if (coalesce(r_c02_w.cd_cnes::text, '') = '') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 15, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  16- Tipo de atendimento nao informado 

		if (coalesce(r_c02_w.ie_tipo_atendimento::text, '') = '' and r_c02_w.ie_tipo_guia = '4') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 16, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 17- Indicacao acidente nao informada 

		if (coalesce(r_c02_w.ie_indicacao_acidente::text, '') = '' and r_c02_w.ie_tipo_guia in ('3','4','5')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 17, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  18 - Valor total geral nao informado

		if (coalesce(r_c02_w.vl_total_imp::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 18, null, nm_usuario_p);
		
		end if;
		
		--20 - Data da realizacao nao informada - A nivel de contas apenas para guias de consulta

		if (coalesce(r_c02_w.dt_atendimento::text, '') = '' and r_c02_w.ie_tipo_guia = '3') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 20, null, nm_usuario_p);
		end if;
		
		--Inconsistencia 28 - Guia referencia nao informada

		if (coalesce(r_c02_w.cd_guia_principal::text, '') = '' and r_c02_w.ie_tipo_guia in ('5','6')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 28, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 29 - Data autorizacao nao informada

		if (coalesce(r_c02_w.dt_autorizacao::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 29, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 30 - Senha nao informada

		if (coalesce(r_c02_w.cd_senha::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 30, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 31 - Tipo de faturamento nao informado

		if (coalesce(r_c02_w.ie_tipo_faturamento::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 31, null, nm_usuario_p);
		
		end if;
					
		--Inconsistencia 32 - Data inicio faturamento

		if (coalesce(r_c02_w.dt_inicio_faturamento::text, '') = '' and r_c02_w.ie_tipo_guia in ('5', '6')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 32, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 33 - Hora inicio faturamento. Nao vamos consistir a principio. Hora concatenada com a data do inicio faturamento

		
		
		--Inconsistencia 34 - Data fim faturamento

		if (coalesce(r_c02_w.dt_fim_faturamento::text, '') = '' and r_c02_w.ie_tipo_guia in ('5', '6')) then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 34, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 35 - Hora fim faturamento. Nao vamos consistir a principio. Hora concatenada com a data do fim faturamento

		
		
		--Inconsistencia 36 - Tipo de internacao

		if (coalesce(r_c02_w.ie_tipo_internacao::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 36, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 37 - Regime de internacao

		if (coalesce(r_c02_w.ie_regime_internacao::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 37, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 38 - Motivo de encerramento nao informado

		if (coalesce(r_c02_w.ie_motivo_encerramento::text, '') = '' and r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 38, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 39 - Valor total procedimentos nao informado

		if (coalesce(r_c02_w.vl_procedimentos_imp::text, '') = '' and  r_c02_w.ie_tipo_guia = '5') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 39, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 40 - Conselho profissional executor nao informado

		if ((r_c02_w.sg_conselho_exec_imp IS NOT NULL AND r_c02_w.sg_conselho_exec_imp::text <> '') and r_c02_w.ie_tipo_guia = '3') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 40, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 41 - Numero do Conselho profissional executor nao informado

		if ((r_c02_w.nr_crm_exec_imp IS NOT NULL AND r_c02_w.nr_crm_exec_imp::text <> '') and r_c02_w.ie_tipo_guia = '3') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 41, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 42 - UF do Conselho profissional executor nao informada

		if ((r_c02_w.uf_crm_exec_imp IS NOT NULL AND r_c02_w.uf_crm_exec_imp::text <> '') and r_c02_w.ie_tipo_guia = '3') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 42, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 43 - CBO executor nao informado

		if ((r_c02_w.cd_cbo_saude_exec_imp IS NOT NULL AND r_c02_w.cd_cbo_saude_exec_imp::text <> '') and r_c02_w.ie_tipo_guia = '3') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 43, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia 44 - Tipo de consulta nao informada

		if ((r_c02_w.ie_tipo_consulta IS NOT NULL AND r_c02_w.ie_tipo_consulta::text <> '') and r_c02_w.ie_tipo_guia = '3') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 44, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  45 - Valor total honorarios nao informado

		if (coalesce(r_c02_w.vl_total_imp::text, '') = '' and r_c02_w.ie_tipo_guia = '6') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 45, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  46 - CNES local executor nao informado

		if ( coalesce(r_c02_w.cd_cnes_hosp_exec::text, '') = '' and r_c02_w.ie_tipo_guia = '6') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 46, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  47 - Nome hospital executor nao informado

		if (coalesce(r_c02_w.nm_hosp_exec::text, '') = '' and r_c02_w.ie_tipo_guia = '6') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 47, null, nm_usuario_p);
		
		end if;
		
		--Inconsistencia  48 - CNPJ do hospital executor nao informado

		if (coalesce(r_c02_w.cd_cnpj_hosp_exec::text, '') = '' and r_c02_w.ie_tipo_guia = '6') then
		
			CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, null, 48, null, nm_usuario_p);
		
		end if;

		--Inconsistencias sobre procedimentos

		for r_c03_w in c03(r_c02_w.nr_seq_conta) loop
		
			--19 - Cod. despesa nao informado

			if ( coalesce(r_c03_w.ie_tipo_despesa::text, '') = '' and r_c03_w.ie_tipo_item = 'OD' and r_c02_w.ie_tipo_guia = '5') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 19, null, nm_usuario_p);
			end if;
			
			--20 - Data da realizacao nao informada

			if (coalesce(r_c03_w.dt_execucao::text, '') = '' and r_c02_w.ie_tipo_guia != '3') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 20, null, nm_usuario_p);
			end if;
			
			--21 - Tabela referencia nao informada

			if (coalesce(r_c03_w.cd_tipo_tabela::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 21, null, nm_usuario_p);
			end if;
			
			--22 - Codigo do item nao informado

			if (coalesce(r_c03_w.cd_item::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 22, null, nm_usuario_p);	
			end if;
			
			--23 - Quantidade do item nao informada

			if (coalesce(r_c03_w.qt_executado::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 23, null, nm_usuario_p);
			end if;
			
			--24 - Fator red/acres nao informado

			if (coalesce(r_c03_w.tx_reducao_acrescimo::text, '') = '' and r_c02_w.ie_tipo_guia in ('4', '5', '6')) then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 24, null, nm_usuario_p);
			end if;
			
			--25 - Valor unitario nao informado

			if (coalesce(r_c03_w.vl_unitario::text, '') = '' and r_c02_w.ie_tipo_guia in ('3', '4', '6')) then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 25, null, nm_usuario_p);
			end if;
			
			--26 - Valor total dos itens nao informado

			if (coalesce(r_c03_w.vl_total::text, '') = '' and r_c02_w.ie_tipo_guia in ('4', '6')) then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 26, null, nm_usuario_p);
			end if;
			
			--27 - Descricao do item nao informada

			if (coalesce(r_c03_w.ds_item::text, '') = '' and r_c02_w.ie_tipo_guia != '3') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 27, null, nm_usuario_p);
			end if;
			
			--inconsistencias sobre participantes

			for r_c05_w in c05(r_c03_w.nr_seq_item) loop
				
				--inconsistencia 49 - grau de participacao nao informado.

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.cd_grau_partic::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 49, null, nm_usuario_p);
				end if;
				
				--inconsistencia 50 - Codigo do profissional participante nao informado

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.cd_cpf_prestador::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 50, null, nm_usuario_p);
				end if;
				
				--inconsistencia 51- Nome do profissional participante nao informado

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.nm_profissional::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 51, null, nm_usuario_p);
				end if;
				
				--inconsistencia 52 -Conselho profissional do participante nao informado

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.sg_conselho_imp::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 52, null, nm_usuario_p);
				end if;
				
				--inconsistencia 53 -Numero do conselho profissional do participante nao informado

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.nr_conselho_profissional::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 53, null, nm_usuario_p);
				end if;
				
				--inconsistencia 54 -UF do conselho profissional do participante nao informado

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.uf_conselho::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 54, null, nm_usuario_p);
				end if;
				
				--inconsistencia 55 -CBO do profissional do participante nao informado

				if (r_c02_w.ie_tipo_guia = '6' and coalesce(r_c05_w.cd_cbo_saude_profissional::text, '') = '') then
					CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, r_c03_w.nr_seq_conta_proc, null, 55, null, nm_usuario_p);
				end if;
			
			end loop;
			
		end loop;
		
		--Inconsistencias sobre mateirais

		for r_c04_w in c04(r_c02_w.nr_seq_conta) loop
		
			--19 - Cod. despesa nao informado

			if ( coalesce(r_c04_w.ie_tipo_despesa::text, '') = '' and r_c04_w.ie_tipo_item = 'OD' and r_c02_w.ie_tipo_guia = '5') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 19, null, nm_usuario_p);
			end if;
			
			--20 - Data da realizacao nao informada

			if (coalesce(r_c04_w.dt_execucao::text, '') = '' and r_c02_w.ie_tipo_guia != '3') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 20, null, nm_usuario_p);
			end if;
			
			--21 - Tabela referencia nao informada

			if (coalesce(r_c04_w.cd_tipo_tabela::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 21, null, nm_usuario_p);
			end if;
			
			--22 - Codigo do item nao informado

			if (coalesce(r_c04_w.cd_item::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 22, null, nm_usuario_p);
			end if;
			
			--23 - Quantidade do item nao informada

			if (coalesce(r_c04_w.qt_executado::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 23, null, nm_usuario_p);
			end if;
			
			--24 - Fator red/acres nao informado

			if (coalesce(r_c04_w.tx_reducao_acrescimo::text, '') = '' and r_c02_w.ie_tipo_guia in ('4', '5', '6')) then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 24, null, nm_usuario_p);
			end if;
			
			--25 - Valor unitario nao informado

			if (coalesce(r_c04_w.vl_unitario::text, '') = '' and r_c02_w.ie_tipo_guia in ('3', '4', '6')) then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 25, null, nm_usuario_p);
			end if;
			
			--26 - Valor total dos itens nao informado

			if (coalesce(r_c04_w.vl_total::text, '') = '' and r_c02_w.ie_tipo_guia in ('4', '6')) then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 26, null, nm_usuario_p);
			end if;
			
			--27 - Descricao do item nao informada

			if (coalesce(r_c04_w.ds_item::text, '') = '') then
				CALL pls_imp_pre_pagto_pck.incluir_inconsistencia(r_c02_w.nr_seq_conta, null, r_c04_w.nr_seq_conta_mat, 27, null, nm_usuario_p);
			end if;
		
		end loop;
				
	end loop;
	
END; 												

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_pre_pagto_pck.consistir_importacao_pre_pagto ( nr_seq_prot_gerado_p pls_faturamento_prot.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
