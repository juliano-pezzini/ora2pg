-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

  --
CREATE OR REPLACE FUNCTION pkg_atend_pac_unid.get_device_count (P_START_DATE timestamp, P_END_DATE timestamp, P_CLASS_DISP text, P_CD_ESTAB bigint DEFAULT 0, P_CD_SETOR bigint DEFAULT 0) RETURNS bigint AS $body$
DECLARE


    NR     bigint;

  
BEGIN
  
    IF (P_START_DATE IS NOT NULL AND P_START_DATE::text <> '') AND 
       (P_END_DATE IS NOT NULL AND P_END_DATE::text <> '') AND 
       (trim(both P_CLASS_DISP) IS NOT NULL AND (trim(both P_CLASS_DISP))::text <> '') AND 
       P_START_DATE <= P_END_DATE THEN
  
      BEGIN
      
        SELECT COUNT(DISTINCT NR_ATENDIMENTO || '-' || CD_SETOR_ATENDIMENTO)
          INTO STRICT NR
          FROM (SELECT UN.NR_ATENDIMENTO,
                       UN.CD_ESTABELECIMENTO,
                       UN.CD_SETOR_ATENDIMENTO,
                       /*AD.NR_SEQUENCIA,*/

                       GREATEST(UN.DT_ENTRADA, AD.DT_INSTALACAO) DT_ENTRADA,
                       LEAST(UN.DT_SAIDA, coalesce(AD.DT_RETIRADA, UN.DT_SAIDA)) DT_SAIDA
                  FROM (SELECT U.NR_ATENDIMENTO,
                               S.CD_ESTABELECIMENTO,
                               U.CD_SETOR_ATENDIMENTO,
                               GREATEST(MIN(U.DT_ENTRADA_UNIDADE),
                                        PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, P_START_DATE)) DT_ENTRADA,
                               LEAST(coalesce(PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                    U.DT_ENTRADA_UNIDADE,
                                                                    U.CD_SETOR_ATENDIMENTO),
                                         PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))),
                                     PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))) DT_SAIDA                                              
                          FROM (SELECT DISTINCT A.NR_ATENDIMENTO 
                                  FROM ATEND_PAC_DISPOSITIVO A,
                                       ATENDIMENTO_PACIENTE P 
                                 WHERE A.NR_ATENDIMENTO = P.NR_ATENDIMENTO   
                                   AND A.DT_INSTALACAO < PKG_ATEND_PAC_UNID.GET_SYS_DT(P.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))
                                   AND (coalesce(A.DT_RETIRADA::text, '') = '' OR
                                        A.DT_RETIRADA >= PKG_ATEND_PAC_UNID.GET_SYS_DT(P.CD_ESTABELECIMENTO, P_START_DATE))
                                   AND EXISTS (SELECT 1
                                          FROM DISPOSITIVO D
                                         WHERE D.NR_SEQUENCIA = A.NR_SEQ_DISPOSITIVO
                                           AND D.IE_CLASSIF_DISP_NISS = P_CLASS_DISP)) AP, ATEND_PACIENTE_UNIDADE U, SETOR_ATENDIMENTO S
                         WHERE AP.NR_ATENDIMENTO = U.NR_ATENDIMENTO
                           AND S.CD_SETOR_ATENDIMENTO = U.CD_SETOR_ATENDIMENTO
                           AND CASE WHEN coalesce(P_CD_ESTAB, 0)=0 THEN  0  ELSE S.CD_ESTABELECIMENTO END  = coalesce(P_CD_ESTAB, 0)
                           AND CASE WHEN coalesce(P_CD_SETOR, 0)=0 THEN  0  ELSE U.CD_SETOR_ATENDIMENTO END  = coalesce(P_CD_SETOR, 0)
                           AND U.IE_PASSAGEM_SETOR NOT IN ('S', 'L')
                           AND S.CD_CLASSIF_SETOR NOT IN ('6', '7', '10')
                           AND U.DT_ENTRADA_UNIDADE < PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))         
                           AND coalesce(PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                        U.DT_ENTRADA_UNIDADE,
                                                                        U.CD_SETOR_ATENDIMENTO),
                                   PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, P_START_DATE)) >=
                               PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, P_START_DATE)
                         GROUP BY U.NR_ATENDIMENTO,
                                  S.CD_ESTABELECIMENTO,
                                  U.CD_SETOR_ATENDIMENTO,
                                  PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                       U.DT_ENTRADA_UNIDADE,
                                                                       U.CD_SETOR_ATENDIMENTO)) UN,
                       ATEND_PAC_DISPOSITIVO AD
                 WHERE AD.NR_ATENDIMENTO = UN.NR_ATENDIMENTO
                   AND EXISTS (SELECT 1
                          FROM DISPOSITIVO D
                         WHERE D.NR_SEQUENCIA = AD.NR_SEQ_DISPOSITIVO
                           AND D.IE_CLASSIF_DISP_NISS = P_CLASS_DISP)
                   AND AD.DT_INSTALACAO < UN.DT_SAIDA
                   AND coalesce(AD.DT_RETIRADA, UN.DT_ENTRADA) >= UN.DT_ENTRADA) alias47;

      EXCEPTION WHEN OTHERS THEN
        NR := 0;
      END;

    END IF;

    RETURN coalesce(NR, 0);
  
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pkg_atend_pac_unid.get_device_count (P_START_DATE timestamp, P_END_DATE timestamp, P_CLASS_DISP text, P_CD_ESTAB bigint DEFAULT 0, P_CD_SETOR bigint DEFAULT 0) FROM PUBLIC;
