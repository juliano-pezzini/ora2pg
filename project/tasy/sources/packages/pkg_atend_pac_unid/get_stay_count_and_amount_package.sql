-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

  --
CREATE OR REPLACE FUNCTION pkg_atend_pac_unid.get_stay_count_and_amount (P_START_DATE timestamp, P_END_DATE timestamp, P_CD_ESTAB bigint DEFAULT 0, P_CD_SETOR bigint DEFAULT 0) RETURNS varchar AS $body$
DECLARE


    V_ESTAB  bigint;
    NR       varchar(255);

  
BEGIN
  
    IF (P_START_DATE IS NOT NULL AND P_START_DATE::text <> '') AND 
       (P_END_DATE IS NOT NULL AND P_END_DATE::text <> '') AND 
       P_START_DATE <= P_END_DATE THEN
  
      IF coalesce(P_CD_SETOR, 0) = 0 THEN
        V_ESTAB := coalesce(P_CD_ESTAB, 0);
      ELSE
        V_ESTAB := coalesce(obter_estabelecimento_setor(P_CD_SETOR), 0);
      END IF;

      IF V_ESTAB <> 0 THEN
        BEGIN
          DECLARE
            V_DT_INI timestamp;
            V_DT_FIM timestamp;
          
          BEGIN
            V_DT_INI := PKG_ATEND_PAC_UNID.GET_SYS_DT(V_ESTAB, P_START_DATE);
            V_DT_FIM := PKG_ATEND_PAC_UNID.GET_SYS_DT(V_ESTAB, LEAST(P_END_DATE + 1, clock_timestamp()));

            SELECT COUNT(1)||';'||round((coalesce(SUM(DT_SAIDA - DT_ENTRADA), 0))::numeric, 8)
              INTO STRICT NR
              FROM (SELECT /*U.NR_ATENDIMENTO,
                           S.CD_ESTABELECIMENTO,
                           U.CD_SETOR_ATENDIMENTO,*/
                           GREATEST(MIN(U.DT_ENTRADA_UNIDADE), V_DT_INI)  DT_ENTRADA,
                           LEAST(coalesce(PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                          U.DT_ENTRADA_UNIDADE,
                                                                          U.CD_SETOR_ATENDIMENTO),
                                     V_DT_FIM),
                                 V_DT_FIM) DT_SAIDA
                      FROM ATEND_PACIENTE_UNIDADE U, SETOR_ATENDIMENTO S
                     WHERE S.CD_SETOR_ATENDIMENTO = U.CD_SETOR_ATENDIMENTO
                       AND S.CD_ESTABELECIMENTO = V_ESTAB
                       AND CASE WHEN coalesce(P_CD_SETOR, 0)=0 THEN  0  ELSE U.CD_SETOR_ATENDIMENTO END  = coalesce(P_CD_SETOR, 0)
                       AND U.IE_PASSAGEM_SETOR NOT IN ('S', 'L')
                       AND S.CD_CLASSIF_SETOR NOT IN ('6', '7', '10')
                       AND U.DT_ENTRADA_UNIDADE < V_DT_FIM
                       AND coalesce(PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                    U.DT_ENTRADA_UNIDADE,
                                                                    U.CD_SETOR_ATENDIMENTO),
                               V_DT_INI) >= V_DT_INI
                     GROUP BY U.NR_ATENDIMENTO,
                              S.CD_ESTABELECIMENTO,
                              U.CD_SETOR_ATENDIMENTO,
                              PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                   U.DT_ENTRADA_UNIDADE,
                                                                   U.CD_SETOR_ATENDIMENTO)) T;

          EXCEPTION WHEN OTHERS THEN
            NR := '0;0';
          END;
        END;

      ELSE

        BEGIN
        
          SELECT COUNT(1)||';'||round((coalesce(SUM(DT_SAIDA - DT_ENTRADA), 0))::numeric, 8)
            INTO STRICT NR
            FROM (SELECT /*U.NR_ATENDIMENTO,
                         S.CD_ESTABELECIMENTO,
                         U.CD_SETOR_ATENDIMENTO,*/
                         GREATEST(MIN(U.DT_ENTRADA_UNIDADE),
                                  PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, P_START_DATE)) DT_ENTRADA,
                         LEAST(coalesce(PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                              U.DT_ENTRADA_UNIDADE,
                                                              U.CD_SETOR_ATENDIMENTO),
                                   PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))),
                               PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))) DT_SAIDA                                              
                    FROM ATEND_PACIENTE_UNIDADE U, SETOR_ATENDIMENTO S
                   WHERE S.CD_SETOR_ATENDIMENTO = U.CD_SETOR_ATENDIMENTO
                     AND CASE WHEN coalesce(P_CD_SETOR, 0)=0 THEN  0  ELSE U.CD_SETOR_ATENDIMENTO END  = coalesce(P_CD_SETOR, 0)
                     AND U.IE_PASSAGEM_SETOR NOT IN ('S', 'L')
                     AND S.CD_CLASSIF_SETOR NOT IN ('6', '7', '10')
                     AND U.DT_ENTRADA_UNIDADE < PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, LEAST(P_END_DATE + 1, clock_timestamp()))
                     AND coalesce(PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                  U.DT_ENTRADA_UNIDADE,
                                                                  U.CD_SETOR_ATENDIMENTO),
                             PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, P_START_DATE)) >=
                         PKG_ATEND_PAC_UNID.GET_SYS_DT(S.CD_ESTABELECIMENTO, P_START_DATE)
                   GROUP BY U.NR_ATENDIMENTO,
                            S.CD_ESTABELECIMENTO,
                            U.CD_SETOR_ATENDIMENTO,
                            PKG_ATEND_PAC_UNID.GET_MAX_EXIT_UNIT(U.NR_ATENDIMENTO,
                                                                 U.DT_ENTRADA_UNIDADE,
                                                                 U.CD_SETOR_ATENDIMENTO)) T;

        EXCEPTION WHEN OTHERS THEN
          NR := '0;0';
        END;

      END IF;

    END IF;

    RETURN coalesce(NR, '0;0');
  
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pkg_atend_pac_unid.get_stay_count_and_amount (P_START_DATE timestamp, P_END_DATE timestamp, P_CD_ESTAB bigint DEFAULT 0, P_CD_SETOR bigint DEFAULT 0) FROM PUBLIC;
