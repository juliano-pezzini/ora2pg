-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_env_aviso_ven_doc_pres_pck.enviar_email_paginado (nr_seq_prestador_p pls_prestador.nr_sequencia%type, ds_assunto_p text, ds_cabecalho_p text, ds_email_origem_p text, ds_email_destino_p text, tb_mensagem_p dbms_sql.varchar2_table, qt_tamanho_paginacao_p integer, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_prest_log_comunic_w	pls_prestador_log_comunic.nr_sequencia%type;
i				integer;
ds_mensagem_w			varchar(32000);
qt_tamanho_paginacao_w		integer;

BEGIN
	-- valida se deve enviar o email
	if	((tb_mensagem_p.count > 0) and (ds_email_origem_p IS NOT NULL AND ds_email_origem_p::text <> '') and (obter_se_email_valido(ds_email_destino_p) = 'S')) then
		
		qt_tamanho_paginacao_w := coalesce(qt_tamanho_paginacao_p, 5000);
		
		-- Grava o log do envio
		insert into pls_prestador_log_comunic(nr_sequencia,nr_seq_prestador,dt_envio,ds_assunto,ds_email_origem,ds_email_destino,
			ie_status_envio,dt_atualizacao,dt_atualizacao_nrec,nm_usuario,nm_usuario_nrec)
		values (nextval('pls_prestador_log_comunic_seq'), nr_seq_prestador_p, clock_timestamp(), ds_assunto_p, ds_email_origem_p, ds_email_destino_p,
			'N', clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p) returning nr_sequencia into nr_seq_prest_log_comunic_w;
		
		-- realiza a paginacao, percorrendo a mensagem e validando o tamanho dela
		ds_mensagem_w := '';
		
		-- Inicializa com o cabecalho
		ds_mensagem_w := ds_cabecalho_p;
		
		for i in tb_mensagem_p.first..tb_mensagem_p.last loop
		
			ds_mensagem_w := ds_mensagem_w|| pls_util_pck.enter_w || tb_mensagem_p(i);
			
			-- se chegou no limite de paginacao, entao envia o conteudo e zera tudo
			if (length(ds_mensagem_w) >= qt_tamanho_paginacao_w) then
			
				CALL enviar_email(	ds_assunto_p,
						ds_mensagem_w,
						ds_email_origem_p,
						ds_email_destino_p,
						nm_usuario_p,
						'M');
				-- Inicializa com o cabecalho
				ds_mensagem_w := ds_cabecalho_p;
			end if;
		end loop;
		
		-- no final, verifica se sobrou algo alem do cabecalho
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') and (ds_mensagem_w != ds_cabecalho_p) then
		
			CALL enviar_email(	ds_assunto_p,
					ds_mensagem_w,
					ds_email_origem_p,
					ds_email_destino_p,
					nm_usuario_p,
					'M');
		end if;
		
		update 	pls_prestador_log_comunic
		set	ie_status_envio	= 'S'
		where	nr_sequencia	= nr_seq_prest_log_comunic_w;
		
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_env_aviso_ven_doc_pres_pck.enviar_email_paginado (nr_seq_prestador_p pls_prestador.nr_sequencia%type, ds_assunto_p text, ds_cabecalho_p text, ds_email_origem_p text, ds_email_destino_p text, tb_mensagem_p dbms_sql.varchar2_table, qt_tamanho_paginacao_p integer, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
