-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION apap_history_pck.get_history_information_tree ( nr_seq_information_p w_apap_pac_informacao.nr_sequencia%TYPE, dt_start_p timestamp, dt_end_p timestamp, use_column_value_p text default 'N') RETURNS SETOF T_HISTORY_TABLE AS $body$
DECLARE


	row_w					t_history_row;
	ds_formato_composto_w	w_apap_pac_informacao.ds_formato_composto%type;
	ds_formato_composto_ww	w_apap_pac_informacao.ds_formato_composto%type;
	c_linhas CURSOR FOR
		SELECT  nr_sequencia,
				'@'||nm_atributo_linked||'#' nm_atributo_linked
		from    w_apap_pac_informacao
		where (nr_sequencia = nr_seq_information_p or nr_seq_superior = nr_seq_information_p);
		
	c_history_gruped CURSOR FOR
		SELECT  distinct a.ds_type,
				a.ie_type,
				a.dt_action,
				a.nm_usuario,
				a.dt_reference
		from    w_apap_pac_informacao b,
				table(apap_history_pck.get_history_information(b.nr_sequencia,dt_start_p,dt_end_p,use_column_value_p)) a
		where (b.nr_seq_superior = nr_seq_information_p or b.nr_sequencia = nr_seq_information_p);
		

	c_resume_history CURSOR(nr_seq_linha_p  bigint, ie_type_p  text,dt_action_p  timestamp,dt_reference_p  timestamp, nm_usuario_p  text) FOR
		SELECT  ds_action
		from    table(apap_history_pck.get_history_information(nr_seq_linha_p,dt_start_p,dt_end_p,use_column_value_p))
		where 	ie_type 		= ie_type_p
		and   	dt_action		= dt_action_p
		and   	dt_reference 	= dt_reference_p
		and		nm_usuario		= nm_usuario_p;
		
	c_history CURSOR(nr_seq_linha_p  bigint) FOR
		SELECT  ds_action,
				ds_type,
				ie_type,
				dt_action,
				nm_usuario,
				dt_reference
		from    table(apap_history_pck.get_history_information(nr_seq_linha_p,dt_start_p,dt_end_p,use_column_value_p));


BEGIN
	select	max(ds_formato_composto)
	into STRICT	ds_formato_composto_w
	from	w_apap_pac_informacao
	where	nr_sequencia = nr_seq_information_p;
	ds_formato_composto_ww := ds_formato_composto_w;
	if (ds_formato_composto_ww IS NOT NULL AND ds_formato_composto_ww::text <> '') then
		<<read_history_gruped>>
		for r_history_gruped in c_history_gruped
			loop
			if (r_history_gruped.ie_type <> 'C') then
				ds_formato_composto_ww := ds_formato_composto_w;
				<<read_linhas>>
				for r_linhas in c_linhas
					loop
					<<read_resume_history>>
					for r_resume_history in c_resume_history(r_linhas.nr_sequencia,r_history_gruped.ie_type,r_history_gruped.dt_action,r_history_gruped.dt_reference,r_history_gruped.nm_usuario)
						loop
						ds_formato_composto_ww	:= replace(ds_formato_composto_ww,r_linhas.nm_atributo_linked,r_resume_history.ds_action);
						ds_formato_composto_ww	:= replace(ds_formato_composto_ww,'.DS','');
						end loop read_resume_history;
					end loop read_linhas;
					row_w.ds_type             := r_history_gruped.ds_type;
					row_w.ie_type             := r_history_gruped.ie_type;
					row_w.dt_action           := r_history_gruped.dt_action;
					row_w.nm_usuario          := r_history_gruped.nm_usuario;
					row_w.ds_action           := ds_formato_composto_ww;
					row_w.dt_reference        := r_history_gruped.dt_reference;
					RETURN NEXT row_w;
			end if;
			end loop read_history_gruped;
		<<read_linhas>>
		for r_linhas in c_linhas
			loop
			<<read_history>>
			for r_history in c_history(r_linhas.nr_sequencia)
				loop
				if (r_history.ie_type = 'C') then
					row_w.ds_type             := r_history.ds_type;
					row_w.ie_type             := r_history.ie_type;
					row_w.dt_action           := r_history.dt_action;
					row_w.nm_usuario          := r_history.nm_usuario;
					row_w.ds_action           := r_history.ds_action;
					row_w.dt_reference        := r_history.dt_reference;
					RETURN NEXT row_w;
				end if;	
				end loop read_history;
			end loop read_linhas;	
	else		
		<<read_linhas>>
		for r_linhas in c_linhas
			loop
			<<read_history>>
			for r_history in c_history(r_linhas.nr_sequencia)
				loop
				row_w.ds_type             := r_history.ds_type;
				row_w.ie_type             := r_history.ie_type;
				row_w.dt_action           := r_history.dt_action;
				row_w.nm_usuario          := r_history.nm_usuario;
				row_w.ds_action           := r_history.ds_action;
				row_w.dt_reference        := r_history.dt_reference;
				RETURN NEXT row_w;
				end loop read_history;
			end loop read_linhas;
	end if;		
	RETURN;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION apap_history_pck.get_history_information_tree ( nr_seq_information_p w_apap_pac_informacao.nr_sequencia%TYPE, dt_start_p timestamp, dt_end_p timestamp, use_column_value_p text default 'N') FROM PUBLIC;
