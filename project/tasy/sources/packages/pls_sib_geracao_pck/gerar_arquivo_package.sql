-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sib_geracao_pck.gerar_arquivo ( nr_seq_lote_p pls_sib_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_parametros.cd_estabelecimento%type) AS $body$
DECLARE


nr_sequencia_w			pls_sib_arquivo.nr_sequencia%type;
qt_movimentacao_w		bigint;
qt_registros_envio_sib_w	pls_parametros.qt_registros_envio_sib%type;
qtde_w				bigint;


BEGIN
select	qt_registros_envio_sib
into STRICT	qt_registros_envio_sib_w
from	pls_parametros a
where	cd_estabelecimento = cd_estabelecimento_p;

select	max(nr_sequencia)
into STRICT	nr_sequencia_w
from	pls_sib_arquivo
where	nr_seq_lote = nr_seq_lote_p;

if (qt_registros_envio_sib_w IS NOT NULL AND qt_registros_envio_sib_w::text <> '') then

	loop
		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			nr_sequencia_w := nr_sequencia_w + 1;
		else
			nr_sequencia_w := 1;
		end if;

		select	count(1)
		into STRICT	qt_movimentacao_w
		from	pls_sib_movimento
		where	nr_seq_lote = nr_seq_lote_p
		and	coalesce(nr_seq_arquivo::text, '') = '';

		if (qt_movimentacao_w > qt_registros_envio_sib_w) then
			qtde_w := qt_registros_envio_sib_w;
		else
			qtde_w := qt_movimentacao_w;
		end if;

		insert	into	pls_sib_arquivo(
						nr_sequencia,
						nr_seq_lote,
						qt_movimentacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_atualizacao,
						nm_usuario)
				values (	nr_sequencia_w,
						nr_seq_lote_p,
						qtde_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p);

		update	pls_sib_movimento
		set	nr_seq_arquivo		= nr_sequencia_w,
			nm_usuario_nrec		= nm_usuario_p,
			dt_atualizacao_nrec	= clock_timestamp()
		where	nr_seq_lote = nr_seq_lote_p
		and	coalesce(nr_seq_arquivo::text, '') = ''  LIMIT (qt_registros_envio_sib_w);

		exit when qt_movimentacao_w <= qt_registros_envio_sib_w;
	end loop;
else
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		nr_sequencia_w := nr_sequencia_w + 1;
	else
		nr_sequencia_w := 1;
	end if;

	insert	into	pls_sib_arquivo(
					nr_sequencia,
					nr_seq_lote,
					qt_movimentacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario)
			values (	nr_sequencia_w,
					nr_seq_lote_p,
					qt_movimentacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p);

	update	pls_sib_movimento
	set	nr_seq_arquivo		= nr_sequencia_w,
		nm_usuario_nrec		= nm_usuario_p,
		dt_atualizacao_nrec	= clock_timestamp()
	where	nr_seq_lote = nr_seq_lote_p;
end if;
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_geracao_pck.gerar_arquivo ( nr_seq_lote_p pls_sib_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p pls_parametros.cd_estabelecimento%type) FROM PUBLIC;
