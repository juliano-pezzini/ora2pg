-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

---------------------------------------------RECORDS---------------------------------------------
	

	---------------------------------------------PLS_BOLETO--------------------------------------------------------------------
	

	---------------------------------------------PLS_LOTE_BOLETO_GRUPO---------------------------------------------
	

	---------------------------------------------PLS_BOLETO---------------------------------------------
	

	---------------------------------------------PLS_BOLETO_BANDA---------------------------------------------
	

	---------------------------------------------AUXILIARES---------------------------------------------
	


CREATE OR REPLACE PROCEDURE pls_gerar_boletos_mens_fat_pck.pls_gerar_dados_boleto ( nr_seq_lote_p pls_lote_boleto.nr_sequencia%type, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


	qt_registros_w			bigint;
	nr_seq_lote_mensalidade_w	pls_lote_mensalidade.nr_sequencia%type;
	nr_titulo_w			titulo_receber.nr_titulo%type;
	ie_envia_cobranca_w		pls_lote_boleto_selecao.ie_envia_cobranca%type;
	ds_sql_mensalidades_w		varchar(4000);
	ds_sql_filtros_w		varchar(4000);
	var_cur_w			integer;
	var_exec_w			integer;
	var_retorno_w			integer;
	mensalidades_faturamento_rec_w	mensalidades_faturamento_rec;
	dt_inicio_geracao_w		timestamp;
	dt_fim_geracao_w		timestamp;

	C01 CURSOR FOR
		SELECT	nr_seq_lote_mensalidade,
			nr_titulo,
			ie_envia_cobranca
		from	pls_lote_boleto_selecao
		where	nr_seq_lote_boleto	= nr_seq_lote_p;

	
BEGIN

	dt_inicio_geracao_w	:= clock_timestamp();

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_lote_boleto_selecao
	where	nr_seq_lote_boleto	= nr_seq_lote_p;

	if (qt_registros_w	= 0) then
		ds_erro_p	:= 'Sem informação de lotes e títulos de mensalidades para serem gerados';
		goto final;
	end if;

	select	dt_lote
	into STRICT	current_setting('pls_gerar_boletos_mens_fat_pck.dt_lote_boleto_w')::timestamp
	from	pls_lote_boleto
	where	nr_sequencia	= nr_seq_lote_p;

	current_setting('pls_gerar_boletos_mens_fat_pck.tp_info_boleto_vetor_w')::tp_info_boleto_v.delete;
	current_setting('pls_gerar_boletos_mens_fat_pck.reg_faixas_etarias_w')::reg_faixas_etarias_v.delete;

	PERFORM set_config('pls_gerar_boletos_mens_fat_pck.nr_seq_lote_boleto_w', nr_seq_lote_p, false);

	/*Setar o usuário e estabelecimento*/

	CALL CALL CALL CALL CALL CALL CALL CALL pls_gerar_boletos_mens_fat_pck.set_nm_usuario(nm_usuario_p);
	CALL CALL CALL CALL CALL CALL CALL CALL CALL pls_gerar_boletos_mens_fat_pck.set_cd_estabelecimento(cd_estabelecimento_p);

	/*Armazenar informações auxiliares*/

	CALL pls_gerar_boletos_mens_fat_pck.armezenar_dados_info_boleto();
	CALL pls_gerar_boletos_mens_fat_pck.armazenar_dados_faixa_etaria();
	CALL pls_gerar_boletos_mens_fat_pck.definir_estruturas_boletos();

	PERFORM set_config('pls_gerar_boletos_mens_fat_pck.qt_boletos_criados_w', 0, false);
	PERFORM set_config('pls_gerar_boletos_mens_fat_pck.nr_grupo_w', 1, false);
	PERFORM set_config('pls_gerar_boletos_mens_fat_pck.nr_ordem_w', 0, false);
	PERFORM set_config('pls_gerar_boletos_mens_fat_pck.vl_total_titulos_w', 0, false);

	open C01;
	loop
	fetch C01 into
		nr_seq_lote_mensalidade_w,
		nr_titulo_w,
		ie_envia_cobranca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		ds_sql_filtros_w	:= '';

		if (nr_seq_lote_mensalidade_w IS NOT NULL AND nr_seq_lote_mensalidade_w::text <> '') then
			ds_sql_filtros_w	:= ds_sql_filtros_w||' and a.nr_sequencia	= :nr_seq_lote_mensalidade';
		end if;

		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			ds_sql_filtros_w	:= ds_sql_filtros_w||' and b.nr_titulo	= :nr_titulo';
		end if;

		if (ie_envia_cobranca_w IS NOT NULL AND ie_envia_cobranca_w::text <> '') then
			ds_sql_filtros_w	:= ds_sql_filtros_w||' and (d.ie_envia_cobranca = ''A'' or d.ie_envia_cobranca = :ie_envia_cobranca)';
		end if;

		ds_sql_mensalidades_w		:=	'	select	a.nr_seq_mensalidade,									' ||
							'		a.nr_titulo,										' ||
							'		a.ie_tipo_pagador,									' ||
							'		a.nm_pagador,										' ||
							'		b.cd_cep,										' ||
							'		b.ds_endereco,										' ||
							'		b.ds_complemento,									' ||
							'		b.ds_bairro,										' ||
							'		b.ds_municipio,										' ||
							'		b.nr_endereco,										' ||
							'		a.vl_titulo										' ||
							'	from	(	select	c.nr_sequencia nr_seq_mensalidade,					' ||
							'				b.nr_titulo,								' ||
							'				decode(b.cd_pessoa_fisica,'''',''PJ'',''PF'') ie_tipo_pagador,		' ||
							'				substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1,255) nm_pagador, ' ||
							'				b.cd_pessoa_fisica,							' ||
							'				b.cd_cgc,								' ||
							'				d.IE_ENDERECO_BOLETO,							' ||
							'				b.vl_titulo								' ||
							'			from	pls_mensalidade		c,						' ||
							'				titulo_receber		b,						' ||
							'				pls_contrato_pagador	d,						' ||
							'				pls_lote_mensalidade	a						' ||
							'			where	c.nr_seq_lote		= a.nr_sequencia				' ||
							'			and	b.nr_seq_mensalidade	= c.nr_sequencia				' ||
							'			and	c.nr_seq_pagador	= d.nr_sequencia				' ||
							'			and	c.ie_cancelamento is null 	  					' ||
							'			and	a.ie_status		= 2' 	|| ds_sql_filtros_w || ') a,		' ||
							'			table(pls_gerar_boletos_mens_fat_pck.obter_dados_endereco_pagador(cd_pessoa_fisica,cd_cgc,ie_endereco_boleto)) b '||
							'	' || pls_gerar_boletos_mens_fat_pck.obter_campos_ordenacao('C');

		var_cur_w := dbms_sql.open_cursor;
		DBMS_SQL.PARSE(var_cur_w, ds_sql_mensalidades_w, 1);

		if (nr_seq_lote_mensalidade_w IS NOT NULL AND nr_seq_lote_mensalidade_w::text <> '') then
			dbms_sql.bind_variable(var_cur_w, ':nr_seq_lote_mensalidade', nr_seq_lote_mensalidade_w);
		end if;

		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			dbms_sql.bind_variable(var_cur_w, ':nr_titulo', nr_titulo_w);
		end if;

		if (ie_envia_cobranca_w IS NOT NULL AND ie_envia_cobranca_w::text <> '') then
			dbms_sql.bind_variable(var_cur_w, ':ie_envia_cobranca', ie_envia_cobranca_w);
		end if;

		dbms_sql.define_column(var_cur_w, 1, mensalidades_faturamento_rec_w.nr_seq_mensalidade);
		dbms_sql.define_column(var_cur_w, 2, mensalidades_faturamento_rec_w.nr_titulo);
		dbms_sql.define_column(var_cur_w, 3, mensalidades_faturamento_rec_w.ie_tipo_pagador,10);
		dbms_sql.define_column(var_cur_w, 4, mensalidades_faturamento_rec_w.nm_pagador,255);
		dbms_sql.define_column(var_cur_w, 5, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.cd_cep,15);
		dbms_sql.define_column(var_cur_w, 6, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_endereco,100);
		dbms_sql.define_column(var_cur_w, 7, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_complemento,40);
		dbms_sql.define_column(var_cur_w, 8, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_bairro,80);
		dbms_sql.define_column(var_cur_w, 9, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_municipio,40);
		dbms_sql.define_column(var_cur_w, 11, mensalidades_faturamento_rec_w.vl_titulo);
		--dbms_sql.define_column(var_cur_w, 10, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.NR_ENDERECO,5);
		var_exec_w := dbms_sql.execute(var_cur_w);

		loop
			var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
			exit when var_retorno_w = 0;
			dbms_sql.column_value(var_cur_w, 1, mensalidades_faturamento_rec_w.nr_seq_mensalidade);
			dbms_sql.column_value(var_cur_w, 2, mensalidades_faturamento_rec_w.nr_titulo);
			dbms_sql.column_value(var_cur_w, 3, mensalidades_faturamento_rec_w.ie_tipo_pagador);
			dbms_sql.column_value(var_cur_w, 4, mensalidades_faturamento_rec_w.nm_pagador);
			dbms_sql.column_value(var_cur_w, 5, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.cd_cep);
			dbms_sql.column_value(var_cur_w, 6, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_endereco);
			dbms_sql.column_value(var_cur_w, 7, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_complemento);
			dbms_sql.column_value(var_cur_w, 8, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_bairro);
			dbms_sql.column_value(var_cur_w, 9, mensalidades_faturamento_rec_w.endereco_pagador_boleto_t.ds_municipio);
			dbms_sql.column_value(var_cur_w, 11, mensalidades_faturamento_rec_w.vl_titulo);
			PERFORM set_config('pls_gerar_boletos_mens_fat_pck.nr_linha_boleto_banda_w', 0, false);

			CALL pls_gerar_boletos_mens_fat_pck.criar_boletos(mensalidades_faturamento_rec_w,current_setting('pls_gerar_boletos_mens_fat_pck.nr_boleto_por_grupo_w')::bigint);
		end loop;
		dbms_sql.close_cursor(var_cur_w);

		end;
	end loop;
	close C01;

	dt_fim_geracao_w	:= clock_timestamp();

	update	pls_lote_boleto
	set	dt_inicio_geracao		= dt_inicio_geracao_w,
		dt_fim_geracao			= dt_fim_geracao_w,
		nr_seq_regra_distribuicao	= current_setting('pls_gerar_boletos_mens_fat_pck.nr_seq_regra_distribuicao_w')::pls_regra_bol_distribuicao.nr_sequencia%type,
		nm_atributos_ordem		= substr(pls_gerar_boletos_mens_fat_pck.obter_campos_ordenacao('D'),11,length(pls_gerar_boletos_mens_fat_pck.obter_campos_ordenacao('D')))
	where	nr_sequencia			= nr_seq_lote_p;

	if (current_setting('pls_gerar_boletos_mens_fat_pck.nr_seq_lote_boleto_grupo_w')::pls_lote_boleto_grupo.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
		update	pls_lote_boleto_grupo
		set	qt_boletos	= current_setting('pls_gerar_boletos_mens_fat_pck.qt_boletos_criados_w')::bigint,
			nr_grupo	= current_setting('pls_gerar_boletos_mens_fat_pck.nr_grupo_w')::bigint,
			vl_titulos	= current_setting('pls_gerar_boletos_mens_fat_pck.vl_total_titulos_w')::pls_lote_boleto_grupo.vl_titulos%type
		where	nr_sequencia	= current_setting('pls_gerar_boletos_mens_fat_pck.nr_seq_lote_boleto_grupo_w')::pls_lote_boleto_grupo.nr_sequencia%type;
	end if;

	<<final>>
	qt_registros_w	:= 0;
	end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_boletos_mens_fat_pck.pls_gerar_dados_boleto ( nr_seq_lote_p pls_lote_boleto.nr_sequencia%type, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;
