-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION clinical_notes_pck.get_assessment_details (nr_sequencia_p bigint, nm_usuario_p text) RETURNS varchar AS $body$
DECLARE

ie_sem_resposta_w   varchar(1);
nr_seq_item_w		bigint;
ds_item_w		    varchar(32000);
ds_resultado_w		varchar(32000);
ds_conteudo_w		varchar(32000);
ds_complemento_w	varchar(32000);
ie_resultado_w		varchar(10);
cd_dominio_w		bigint;
ds_titulo_w		    varchar(100);
C01 CURSOR FOR
SELECT	c.nr_sequencia,
		coalesce(ds_label_relat,c.ds_item) ds_item,
		c.IE_RESULTADO,
		coalesce((select d.ds_resultado from med_item_avaliar_res d where d.nr_seq_item = c.nr_sequencia and obter_somente_numero(replace(upper(Aval(a.nr_sequencia,c.nr_sequencia)),'E','')) = d.nr_Seq_res and coalesce(c.cd_dominio::text, '') = ''),substr(Aval(a.nr_sequencia,c.nr_sequencia),1,4000)) ds_resultado,
		cd_dominio,
		c.ds_complemento ds_complemento
from	med_Avaliacao_paciente a,
		med_tipo_avaliacao b,
		med_item_avaliar c
where	b.nr_sequencia = c.nr_seq_tipo
and		coalesce(c.ie_situacao, 'A') = 'A'
and		a.nr_seq_tipo_avaliacao = b.nr_sequencia
and		((ie_sem_resposta_w = 'N') or
		((c.ie_resultado in ('T','H')) and ( exists (select  1
													 from    med_item_avaliar f
													 where   f.nr_seq_superior = c.nr_sequencia
													 and	    substr(Aval(a.nr_sequencia,f.nr_sequencia),1,4000) is not null))) or
	(coalesce((select d.ds_resultado from med_item_avaliar_res d where d.nr_seq_item = c.nr_sequencia and obter_somente_numero(replace(upper(Aval(a.nr_sequencia,c.nr_sequencia)),'E','')) = d.nr_Seq_res and coalesce(c.cd_dominio::text, '') = ''),substr(Aval(a.nr_sequencia,c.nr_sequencia),1,4000)) is not null))
and	((ie_sem_resposta_w = 'N') or
	((c.ie_resultado in ('T','H')) and ( exists (	select  1
													from    med_item_avaliar f
													where   f.nr_seq_superior = c.nr_sequencia
													and	    substr(Aval(a.nr_sequencia,f.nr_sequencia),1,4000) <> 'N'))) or
	(coalesce((select d.ds_resultado from med_item_avaliar_res d where d.nr_seq_item = c.nr_sequencia and obter_somente_numero(replace(upper(Aval(a.nr_sequencia,c.nr_sequencia)),'E','')) = d.nr_Seq_res and coalesce(c.cd_dominio::text, '') = ''),substr(Aval(a.nr_sequencia,c.nr_sequencia),1,4000)) <> 'N'))
and	a.nr_sequencia = nr_sequencia_p
order by c.nr_seq_apresent;


BEGIN

select	coalesce(max(ie_campos_preench_evol_aval),'N')
	into STRICT	ie_sem_resposta_w
	from	parametro_medico
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
   open C01;
	loop
	fetch C01 into
		nr_seq_item_w,
		ds_item_w,
		ie_resultado_w,
		ds_resultado_w,
		cd_dominio_w,
		ds_complemento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_resultado_w in ('X','T')) then
			ds_conteudo_w	:=  ds_conteudo_w || '</br>'  || ds_item_w;
			if ((trim(both ds_complemento_w) IS NOT NULL AND (trim(both ds_complemento_w))::text <> '')) and (ie_resultado_w in ('X')) then
				ds_conteudo_w	:=  ds_conteudo_w || '</br>' ||  ' ' || ds_complemento_w;
			end if;
		elsif (ie_resultado_w = 'B') then
			if (ds_resultado_w	= 'S') or (ds_resultado_w	= '1') or (ds_resultado_w = WHEB_MENSAGEM_PCK.get_texto(298977,null))	then
				ds_resultado_w	:= WHEB_MENSAGEM_PCK.get_texto(298977,null); --'Sim';
			else
				ds_resultado_w	:= WHEB_MENSAGEM_PCK.get_texto(298976,null); --'No';
			end if;
			ds_conteudo_w := ds_conteudo_w  || '</br>' || ds_item_w||' : ' || ds_resultado_w;
		elsif (ie_resultado_w = 'O') then
				if (cd_dominio_w > 0) then
					select	max(ds_valor_dominio)
					into STRICT	ds_resultado_w
					from	med_valor_dominio
					where	nr_seq_dominio = cd_dominio_w
					and		vl_dominio = ds_resultado_w;

					ds_conteudo_w := ds_conteudo_w || '</br>' ||ds_item_w||' : '||ds_resultado_w;
				end if;
		elsif (ie_resultado_w in ('V','C')) then
			ds_conteudo_w :=    ds_conteudo_w || '</br>' || ds_item_w||' : '|| ds_resultado_w|| ' ' || ds_complemento_w;
		else
			ds_conteudo_w :=  ds_conteudo_w || '</br>' || ds_item_w||' : '||ds_resultado_w;
		end if;
		end;
	end loop;
	close C01;
    return ds_conteudo_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION clinical_notes_pck.get_assessment_details (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;
