-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- gera outro procedimento para abertura do participante



CREATE OR REPLACE PROCEDURE pls_cta_gera_hono_indiv_pck.gera_proc_abert_conta ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_proc_partic_p pls_proc_participante.nr_sequencia%type, dt_procedimento_p pls_conta_proc.dt_procedimento%type, dt_inicio_proc_p pls_conta_proc.dt_inicio_proc%type, dt_fim_proc_p pls_conta_proc.dt_fim_proc%type, vl_digitado_complemento_p pls_proc_participante.vl_digitado_complemento%type, nm_usuario_p usuario.nm_usuario%type, dados_regra_p dados_regra_abertura_conta, ie_gerou_novo_p INOUT text) AS $body$
DECLARE

qt_procedimentos_w		integer;
nr_seq_conta_proc_ww		pls_conta_proc.nr_sequencia%type;

nr_seq_item_tiss_w		pls_conta_proc_regra.nr_seq_item_tiss%type;
nr_seq_item_tiss_vinculo_w	pls_conta_proc_regra.nr_seq_item_tiss_vinculo%type;


BEGIN

-- se no processo anterior (criacao da conta) criou um novo registro, obviamente aqui se deve ser gerado um novo procedimento e nem precisa fazer um select para buscar

if (ie_gerou_novo_p = 'N') then

	select	count(a.nr_sequencia),
		max((select max(x.nr_seq_item_tiss) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia)),
		max((select max(x.nr_seq_item_tiss_vinculo) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia))
	into STRICT	qt_procedimentos_w,
		nr_seq_item_tiss_w,
		nr_seq_item_tiss_vinculo_w
	from	pls_conta_proc	a
	where	a.nr_seq_conta				= nr_seq_conta_p
	and	a.nr_seq_participante_hi		= nr_seq_proc_partic_p
	and	((coalesce(a.dt_procedimento::text, '') = '') or (a.dt_procedimento = dt_procedimento_p))
	and	((coalesce(a.dt_inicio_proc::text, '') = '') or (a.dt_inicio_proc = dt_inicio_proc_p))
	and	((coalesce(dt_fim_proc_p::text, '') = '') or (a.dt_fim_proc = dt_fim_proc_p))
	and	a.ie_status != 'D';
end if;

--Se nao existe o procedimento ou se foi gerado uma nova conta, cria um procedimento novo	

if (qt_procedimentos_w = 0 or ie_gerou_novo_p = 'S') then
	ie_gerou_novo_p := 'S';
	
	select	nextval('pls_conta_proc_seq')
	into STRICT	nr_seq_conta_proc_ww
	;
	
	insert into pls_conta_proc(nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, dt_procedimento,
		cd_procedimento, ie_origem_proced, qt_procedimento,
		vl_unitario, vl_procedimento, ie_via_acesso,
		nr_seq_conta, dt_procedimento_imp, cd_procedimento_imp,
		qt_procedimento_imp, vl_unitario_imp, vl_procedimento_imp,
		ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
		dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
		vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
		tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada,
		vl_liberado, vl_glosa, vl_saldo,
		nr_seq_regra, ie_tipo_despesa, ie_situacao,
		ie_status, dt_liberacao, nm_usuario_liberacao,
		tx_item, nr_seq_tiss_tabela, nr_seq_regra_horario,
		vl_custo_operacional, vl_anestesista, vl_materiais,
		vl_medico, vl_auxiliares, nr_seq_regra_liberacao,
		ds_log, cd_conta_cred, cd_conta_deb,
		cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
		cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred,
		nr_seq_grupo_ans, nr_auxiliares, nr_seq_participante_hi,
		nr_seq_proc_ref, ie_status_pagamento, ie_acao_analise)
	SELECT	nr_seq_conta_proc_ww, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, dt_procedimento,
		cd_procedimento, ie_origem_proced, 0,
		0, 0, ie_via_acesso,
		nr_seq_conta_p, dt_procedimento_imp, cd_procedimento_imp,
		qt_procedimento_imp, 0, CASE WHEN coalesce(vl_digitado_complemento_p,0)=0 THEN coalesce(vl_procedimento_imp,0)  ELSE vl_digitado_complemento_p END ,
		ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
		dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
		vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
		tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada,
		0, 0, 0,
		null, ie_tipo_despesa, 'U',
		'U', null, null,
		tx_item, nr_seq_tiss_tabela, null,
		0, 0, 0,
		0, 0, null,
		null, cd_conta_cred, cd_conta_deb,
		cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
		cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred,
		null, null, nr_seq_proc_partic_p,
		nr_seq_conta_proc_p, 'I', ie_acao_analise
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_conta_proc_p;
	
	if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then
	
		CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_ww, nm_usuario_p);
		CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_conta_proc_ww, nr_seq_item_tiss_w, nr_seq_item_tiss_vinculo_w, nm_usuario_p);
		
	end if;
	
	
	if (dados_regra_p.ie_gerar_participante = 'S') then
		
		insert 	into 	pls_proc_participante(	nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_proc,
				cd_medico, nr_cpf_imp, nm_medico_executor_imp,
				sg_conselho_imp, nr_crm_imp, uf_crm_imp,
				ie_funcao_medico_imp, cd_cgc_imp, cd_medico_imp,
				nr_seq_grau_partic, nr_seq_cbo_saude, cd_cbo_saude_imp,
				vl_participante, ie_conselho_profissional, ie_status)
			SELECT	nextval('pls_proc_participante_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_conta_proc_ww,
				cd_medico, nr_cpf_imp, nm_medico_executor_imp,
				sg_conselho_imp, nr_crm_imp, uf_crm_imp,
				ie_funcao_medico_imp, cd_cgc_imp, cd_medico_imp,
				nr_seq_grau_partic, nr_seq_cbo_saude, cd_cbo_saude_imp,
				vl_participante, ie_conselho_profissional, 'U'
			from	pls_proc_participante
			where	nr_sequencia	= nr_seq_proc_partic_p;		
	end if;
else
	ie_gerou_novo_p := 'N';	
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_gera_hono_indiv_pck.gera_proc_abert_conta ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_proc_partic_p pls_proc_participante.nr_sequencia%type, dt_procedimento_p pls_conta_proc.dt_procedimento%type, dt_inicio_proc_p pls_conta_proc.dt_inicio_proc%type, dt_fim_proc_p pls_conta_proc.dt_fim_proc%type, vl_digitado_complemento_p pls_proc_participante.vl_digitado_complemento%type, nm_usuario_p usuario.nm_usuario%type, dados_regra_p dados_regra_abertura_conta, ie_gerou_novo_p INOUT text) FROM PUBLIC;
