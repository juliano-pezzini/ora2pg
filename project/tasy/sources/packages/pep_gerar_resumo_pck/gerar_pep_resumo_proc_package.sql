-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pep_gerar_resumo_pck.gerar_pep_resumo_proc () AS $body$
DECLARE


	ds_procedimento_w		varchar(200);
	ds_observacao_w			varchar(255);
	ds_justificativa_w		varchar(255);
	ds_procedimento_ww		varchar(100);
	nr_seq_exame_w			bigint;
	ds_exame_w	 			varchar(100);
	cd_intervalo_exame_w	varchar(10);
	ds_intervalo_exame_w	varchar(100);

	C01 CURSOR FOR
	SELECT	substr(Obter_Desc_Prescr_Proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,80),
		substr(a.ds_observacao,1,255),
		substr(a.ds_justificativa,1,255),
		a.nr_seq_exame,
		a.cd_intervalo
	from	protocolo_medic_proc a
	where	a.cd_protocolo		= cd_protocolo_w
	and	a.nr_sequencia 		= nr_seq_medicacao_w
	and 	coalesce(ie_anatomia,'N') = 'N'
	and 	((coalesce(nr_seq_proc_interno::text, '') = '') or (Obter_tipo_proc_interno(nr_seq_proc_interno) = 'O'));
	
	
BEGIN
	PERFORM set_config('pep_gerar_resumo_pck.ds_resumo_w', '', false);
	open C01;
	loop
	fetch C01 into	
		ds_procedimento_ww,
		ds_observacao_w,
		ds_justificativa_w,
		nr_seq_exame_w,
		cd_intervalo_exame_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		if (cd_intervalo_exame_w IS NOT NULL AND cd_intervalo_exame_w::text <> '') then
			select substr(max(ds_intervalo),1,80)
			into STRICT ds_intervalo_exame_w
			from intervalo_prescricao 
			where cd_intervalo = cd_intervalo_exame_w;
		end if;
		
		
		if (nr_seq_exame_w > 0) then		
			select substr(max(nm_exame),1,80)
			into STRICT ds_exame_w
			from exame_laboratorio 
			where nr_seq_exame = nr_seq_exame_w;
		
			if (ds_procedimento_ww = ' ') then
				ds_procedimento_w := ds_exame_w;
			else
				ds_procedimento_w := ds_procedimento_ww || ' / ' || ds_exame_w;
			end if;
		else
			ds_procedimento_w := ds_procedimento_ww;
		end if;
		
		if (current_setting('pep_gerar_resumo_pck.ie_rtf_w')::varchar(1) = 'N') then
			PERFORM set_config('pep_gerar_resumo_pck.ds_resumo_w', substr(current_setting('pep_gerar_resumo_pck.ds_resumo_w')::text ||
					pep_gerar_resumo_pck.get_tr_html(ds_procedimento_w, ds_intervalo_exame_w, null, 
							null, null, null,6),1,30000), false);
							
			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				PERFORM set_config('pep_gerar_resumo_pck.ds_resumo_w', substr(current_setting('pep_gerar_resumo_pck.ds_resumo_w')::text || pep_gerar_resumo_pck.get_tr_html_obs(ds_observacao_w),1,30000), false);
			end if;
			
			if (ds_justificativa_w IS NOT NULL AND ds_justificativa_w::text <> '') then
				PERFORM set_config('pep_gerar_resumo_pck.ds_resumo_w', substr(current_setting('pep_gerar_resumo_pck.ds_resumo_w')::text || pep_gerar_resumo_pck.get_tr_html_justif(ds_justificativa_w),1,30000), false);
			end if;				
							
		else
			PERFORM set_config('pep_gerar_resumo_pck.ds_resumo_w', substr(current_setting('pep_gerar_resumo_pck.ds_resumo_w')::text ||
					pep_gerar_resumo_pck.get_tr_rtf(ds_procedimento_w, ds_intervalo_exame_w, null, 
							null, null, null,6),1,30000), false);

		end if;
		
		end;
	end loop;
	close C01;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pep_gerar_resumo_pck.gerar_pep_resumo_proc () FROM PUBLIC;
