-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE reg_test_plan_pck.insert_item_in_test_plan_auto (nm_usuario_p text, nr_seq_intencao_uso_p bigint default 2) AS $body$
DECLARE


	nr_seq_controle_plano_w		reg_plano_teste_controle.nr_sequencia%type;
	ds_version_w			reg_tc_pendencies.ds_version%type;
	nr_seq_pr_w			bigint;
	nr_seq_ct_w			bigint;
	cd_funcao_w			varchar(255);
	ie_matriz_risco_w		varchar(255);
	nr_result_w			smallint;
	nr_seq_script_w			bigint;
	ds_sql_w			varchar(4000);
	ds_params_w			varchar(255);

	c01 CURSOR FOR
		SELECT	b.nr_sequencia nr_seq_pr,
			a.nr_sequencia nr_seq_ct,
			rctf.cd_funcao cd_funcao,
            CASE WHEN(SELECT max(rt.nr_seq_type)                           from reg_product_req_type rt                          where rt.nr_seq_type = 12                            and rt.nr_seq_product_req = b.nr_sequencia)=12 THEN 'S'  ELSE 'N' END  ie_matriz_risco,
			a.nr_seq_test_script
		FROM reg_product_requirement b, reg_caso_teste a
LEFT OUTER JOIN reg_caso_teste_funcao rctf ON (a.nr_sequencia = rctf.nr_seq_caso_teste)
WHERE b.nr_sequencia = a.nr_seq_product  and (a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '') and a.ie_tipo_execucao = 'A' and coalesce(a.ie_situacao,'A') = 'A' and a.nr_seq_intencao_uso = nr_seq_intencao_uso_p and exists (select 1
                      from reg_acao_teste rat
                     where rat.ie_situacao = 'A'
                       and rat.nr_seq_caso_teste = a.nr_sequencia) order by 1, 2, 3;

	
BEGIN

	select	max(nr_sequencia)
	into STRICT	nr_seq_controle_plano_w
	from	reg_plano_teste_controle
	where	coalesce(dt_fim_plano::text, '') = ''
	and	dt_inicio_plano <= clock_timestamp()
    and nr_seq_intencao_uso = nr_seq_intencao_uso_p
	and	ie_situacao = 'A';

	select	cd_versao
	into STRICT	ds_version_w
	from	reg_plano_teste_controle
	where	nr_sequencia = nr_seq_controle_plano_w;

	if (nr_seq_controle_plano_w IS NOT NULL AND nr_seq_controle_plano_w::text <> '' AND ds_version_w IS NOT NULL AND ds_version_w::text <> '') then

	open c01;
	loop
	fetch c01 into	
		nr_seq_pr_w,
		nr_seq_ct_w,
		cd_funcao_w,
		ie_matriz_risco_w,
		nr_seq_script_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			ds_sql_w :=	'select	1 '
				||	'from	schem_test_script@schematic4test sts '
				||	'where	sts.nr_sequencia = :nr_seq_script '
				||	'and	to_number(substr(:cd_version, 6, 4)) >= to_number(sts.ds_version)';

			ds_params_w := 'nr_seq_script=' || nr_seq_script_w||';cd_version=' ||ds_version_w;

			obter_valor_dinamico_bv(ds_sql_w, ds_params_w, nr_result_w);

			if (nr_result_w > 0) then
				begin

				-- nr_seq_controle_p vai ser parametro	

				-- ds_versao_p vai ser parametro	

				-- nm_usuario_p vai ser parametro	


				insert into reg_tc_pendencies(	
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_tc,
					nr_seq_pr,
					ds_version,
					cd_funcao,
					ie_status,
					nr_seq_controle_plano,
                    nr_seq_intencao_uso)
				values (	nextval('reg_tc_pendencies_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_ct_w,
					nr_seq_pr_w,
					ds_version_w,
					cd_funcao_w,
					'P',
					nr_seq_controle_plano_w,
                    nr_seq_intencao_uso_p);

				end;
			end if;
		end;
	end loop;
	close c01;	

	commit;

	end if;		

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reg_test_plan_pck.insert_item_in_test_plan_auto (nm_usuario_p text, nr_seq_intencao_uso_p bigint default 2) FROM PUBLIC;
