-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION surgery_schedule_pck.get_listas (nr_seq_agenda_p bigint, cd_medico_p text, nr_seq_proc_interno_p bigint) RETURNS SETOF T_OBJETO_ROW_DATA AS $body$
DECLARE


t_objeto_row_w						t_objeto_row;
nr_seq_proc_interno_w			varchar(1000);

listas_recursos CURSOR FOR
	SELECT 	'CME' ie_tipo,
				substr(b.nm_conjunto,1,125) ds_informacao
	from   	agenda_pac_cme a,
				cm_conjunto b
	where  	a.nr_seq_conjunto = b.nr_sequencia
	and		nr_seq_agenda 		= nr_seq_agenda_p
	
union

	SELECT	'OPME' ie_tipo,
				substr(b.ds_material,1,80) ds_informacao
	from		material b,
				agenda_pac_opme a
	where		a.cd_material 		= b.cd_material
	and		a.nr_seq_agenda 	= nr_seq_agenda_p
	and		(b.cd_material IS NOT NULL AND b.cd_material::text <> '')
	
union

	select	'EQUIP' ie_tipo,
				substr(b.ds_classificacao,1,80) ds_informacao
	from		agenda_pac_equip a,
				classif_equipamento b
	where		nr_seq_agenda				= nr_seq_agenda_p
	and		a.nr_seq_classif_equip 	= b.nr_sequencia
	and		ie_origem_inf 				= 'I'
	
union all

	select	'EQUIP' ie_tipo,
				substr(coalesce(b.ds_equip_curto,b.ds_equipamento),1,200) ds_informacao
	from		agenda_pac_equip a,
				equipamento b
	where		nr_seq_agenda		= nr_seq_agenda_p
	and		a.cd_equipamento 	= b.cd_equipamento
	and		IE_ORIGEM_INF 		= 'I'
	
union

	select	'SERV' ie_tipo,
				substr(b.ds_proc_exame,1,80) ds_informacao
	from		proc_interno b,
				agenda_pac_servico a
	where		b.nr_sequencia = a.nr_seq_proc_servico
	and		a.nr_seq_agenda	= nr_seq_agenda_p
	
union

	select	'BC' ie_tipo,
				substr(b.ds_proc_exame,1,255) ||' '|| CASE WHEN coalesce(a.qt_bolsas_sangue,0)=0 THEN null  ELSE obter_desc_expressao_idioma(614525,NULL,wheb_usuario_pck.get_nr_seq_idioma)||a.qt_bolsas_sangue END  ds_informacao
	from		agenda_pac_sangue a,
				proc_interno b
	where		a.nr_seq_proc_interno 	= b.nr_sequencia
	and		a.nr_seq_agenda 			= nr_seq_agenda_p
	order by 1,2;
	
procedimentos_adicionais CURSOR FOR	
	SELECT (b.cd_procedimento||' - '||b.ds_procedimento) ds_informacao,
				null nr_seq_proc_interno
	from		procedimento b,
				agenda_paciente_proc a
	where		a.cd_procedimento 		= b.cd_procedimento
	and		a.ie_origem_proced 		= b.ie_origem_proced
	and		a.nr_sequencia 			= nr_seq_agenda_p
	and		coalesce(a.nr_seq_proc_interno::text, '') = ''
	and		(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
	and		(a.ie_origem_proced IS NOT NULL AND a.ie_origem_proced::text <> '')
	
union

	SELECT (b.nr_sequencia||' - '||b.ds_proc_exame) ds_informacao,
				a.nr_seq_proc_interno
	from		proc_interno b,
				agenda_paciente_proc a
	where		a.nr_seq_proc_interno 	= b.nr_sequencia
	and		a.nr_sequencia 			= nr_seq_agenda_p
	and		(a.nr_seq_proc_interno IS NOT NULL AND a.nr_seq_proc_interno::text <> '');
	
kit_procedimento CURSOR FOR
	SELECT	cd_kit_material,
				ds_informacao,
				cd_medico_kit,
				cd_medico_agenda
	from (SELECT  k.cd_kit_material,
							substr('[' ||k.cd_kit_material || ' - ' || k.ds_kit_material ||']',1,4000) ds_informacao,
							null cd_medico_kit,
							null cd_medico_agenda
				from     kit_material k,
							proc_interno b
				where    b.nr_sequencia			= nr_seq_proc_interno_p
				and      b.cd_kit_material    = k.cd_kit_material
				and      k.ie_situacao        = 'A'
				and		(b.cd_kit_material IS NOT NULL AND b.cd_kit_material::text <> '')	
				
union

				select   k.cd_kit_material,
							substr('[' ||k.cd_kit_material || ' - ' || k.ds_kit_material ||']',1,4000) ds_informacao,
							c.cd_medico cd_medico_kit,
							cd_medico_p cd_medico_agenda
				from     kit_material k,
							proc_interno b,
							proc_interno_kit c
				where    c.nr_seq_proc_interno= b.nr_sequencia
				and		b.nr_sequencia			= nr_seq_proc_interno_p
				and      c.cd_kit_material    = k.cd_kit_material
				and      k.ie_situacao        = 'A') alias3
	order by 1;
	
	
kit_procedimento_adic CURSOR FOR	
	SELECT	cd_kit_material,
				ds_informacao,
				cd_medico_kit,
				cd_medico_agenda
	from (SELECT  k.cd_kit_material,
							substr('[' ||k.cd_kit_material || ' - ' || k.ds_kit_material ||']',1,4000) ds_informacao,
							null cd_medico_kit,
							null cd_medico_agenda
				from     kit_material k,
							proc_interno b
				where    obter_se_contido(b.nr_sequencia,nr_seq_proc_interno_w) = 'S'
				and      b.cd_kit_material    = k.cd_kit_material
				and      k.ie_situacao        = 'A'
				and		(b.cd_kit_material IS NOT NULL AND b.cd_kit_material::text <> '')	
				
union

				select   k.cd_kit_material,
							substr('[' ||k.cd_kit_material || ' - ' || k.ds_kit_material ||']',1,4000) ds_informacao,
							c.cd_medico cd_medico_kit,
							a.cd_medico cd_medico_agenda
				from     kit_material k,
							proc_interno b,
							proc_interno_kit c,
							agenda_paciente_proc a
				where    a.nr_seq_proc_interno= b.nr_sequencia
				and      c.nr_seq_proc_interno= b.nr_sequencia
				and      a.nr_sequencia       = nr_seq_agenda_p
				and      c.cd_kit_material    = k.cd_kit_material
				and      k.ie_situacao        = 'A'
				and		(a.nr_seq_proc_interno IS NOT NULL AND a.nr_seq_proc_interno::text <> '')) alias5
	order by 1;
	
BEGIN
if (coalesce(nr_seq_agenda_p,0) > 0) then
	FOR r_c01 IN listas_recursos LOOP
		BEGIN
		if (r_c01.ie_tipo = 'CME') then
			if (coalesce(t_objeto_row_w.ds_lista_conjunto::text, '') = '') then
				t_objeto_row_w.ds_lista_conjunto 	:= substr(r_c01.ds_informacao,1,4000);
			else
				t_objeto_row_w.ds_lista_conjunto 	:= substr((t_objeto_row_w.ds_lista_conjunto || ', '|| r_c01.ds_informacao),1,4000);
			end if;	
		elsif (r_c01.ie_tipo = 'OPME') then
			if (coalesce(t_objeto_row_w.ds_lista_opme::text, '') = '') then
				t_objeto_row_w.ds_lista_opme 	:= substr(r_c01.ds_informacao,1,4000);
			else
				t_objeto_row_w.ds_lista_opme := substr((t_objeto_row_w.ds_lista_opme || ', '|| r_c01.ds_informacao),1,4000);
			end if;	
		elsif (r_c01.ie_tipo = 'EQUIP') then
			if (coalesce(t_objeto_row_w.ds_lista_equip::text, '') = '') then
				t_objeto_row_w.ds_lista_equip	:= substr(r_c01.ds_informacao,1,4000);
			else
				t_objeto_row_w.ds_lista_equip	:= substr((t_objeto_row_w.ds_lista_equip || ', '|| r_c01.ds_informacao),1,4000);
			end if;	
		elsif (r_c01.ie_tipo = 'SERV') then
			if (coalesce(t_objeto_row_w.ds_lista_servico::text, '') = '') then
				t_objeto_row_w.ds_lista_servico 	:= substr(r_c01.ds_informacao,1,4000);
			else
				t_objeto_row_w.ds_lista_servico 	:= substr((t_objeto_row_w.ds_lista_servico || ', '|| r_c01.ds_informacao),1,4000);
			end if;	
		elsif (r_c01.ie_tipo = 'BC') then
			if (coalesce(t_objeto_row_w.ds_banco_sangue::text, '') = '') then
				t_objeto_row_w.ds_banco_sangue	:= substr(r_c01.ds_informacao,1,4000);
			else
				t_objeto_row_w.ds_banco_sangue	:= substr((t_objeto_row_w.ds_banco_sangue || ', '|| r_c01.ds_informacao),1,4000);
			end if;	
		end if;
		END;
	END LOOP;
	
	FOR r_c02 IN procedimentos_adicionais LOOP
		BEGIN
		if (coalesce(t_objeto_row_w.ds_proc_adicional::text, '') = '') then	
			t_objeto_row_w.ds_proc_adicional 	:= substr(r_c02.ds_informacao,1,4000);
		else
			t_objeto_row_w.ds_proc_adicional	:= substr(t_objeto_row_w.ds_proc_adicional || ',' || r_c02.ds_informacao,1,4000);
		end if;	
		if (r_c02.nr_seq_proc_interno IS NOT NULL AND r_c02.nr_seq_proc_interno::text <> '') then
			if (coalesce(nr_seq_proc_interno_w::text, '') = '') then	
				nr_seq_proc_interno_w 	:= substr(r_c02.nr_seq_proc_interno,1,4000);
			else
				nr_seq_proc_interno_w	:= substr(nr_seq_proc_interno_w || ',' || r_c02.nr_seq_proc_interno,1,4000);
			end if;	
		end if;	
		END;
	END LOOP;	
	
	if (coalesce(nr_seq_proc_interno_p,0) > 0) then
		FOR r_c03 IN kit_procedimento LOOP
			BEGIN
			if (r_c03.cd_medico_kit = r_c03.cd_medico_agenda) or (coalesce(r_c03.cd_medico_kit::text, '') = '') or (coalesce(r_c03.cd_medico_agenda::text, '') = '') then
				if (coalesce(t_objeto_row_w.ds_lista_kit::text, '') = '') then	
					t_objeto_row_w.ds_lista_kit 	:= substr(r_c03.ds_informacao,1,4000);
				else
					t_objeto_row_w.ds_lista_kit	:= substr(t_objeto_row_w.ds_lista_kit || ',' || r_c03.ds_informacao,1,4000);
				end if;	
			end if;	
			END;
		END LOOP;	
	end if;
	if (t_objeto_row_w.ds_proc_adicional IS NOT NULL AND t_objeto_row_w.ds_proc_adicional::text <> '') then
		FOR r_c04 IN kit_procedimento_adic LOOP
			BEGIN
			if (r_c04.cd_medico_kit = r_c04.cd_medico_agenda) or (coalesce(r_c04.cd_medico_kit::text, '') = '') or (coalesce(r_c04.cd_medico_agenda::text, '') = '') then
				if (coalesce(t_objeto_row_w.ds_lista_kit::text, '') = '') then	
					t_objeto_row_w.ds_lista_kit 	:= substr(r_c04.ds_informacao,1,4000);
				else
					t_objeto_row_w.ds_lista_kit	:= substr(t_objeto_row_w.ds_lista_kit || ',' || r_c04.ds_informacao,1,4000);
				end if;	
			end if;	
			END;
		END LOOP;
	end if;	
end if;	
RETURN NEXT t_objeto_row_w;
RETURN;
		
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION surgery_schedule_pck.get_listas (nr_seq_agenda_p bigint, cd_medico_p text, nr_seq_proc_interno_p bigint) FROM PUBLIC;
