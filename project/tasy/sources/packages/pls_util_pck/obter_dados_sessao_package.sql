-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_util_pck.obter_dados_sessao ( nm_id_sid_p INOUT text, nm_id_serial_p INOUT text, nm_osuser_p INOUT text, nm_machine_p INOUT text, nm_terminal_p INOUT text, nm_program_p INOUT text, nm_module_p INOUT text, nm_action_p INOUT text) AS $body$
DECLARE


ds_sql_w		varchar(1000);
nm_id_sid_w		varchar(50);
nm_id_serial_w		varchar(50);
dados_sid_serial_w	dados_sid;


BEGIN

-- filtra pelo sid passado de par창metro ou busca da sess찾o atual
if (nm_id_sid_p IS NOT NULL AND nm_id_sid_p::text <> '' AND nm_id_serial_p IS NOT NULL AND nm_id_serial_p::text <> '') then
	nm_id_sid_w := nm_id_sid_p;
	nm_id_serial_w := nm_id_serial_p;
else
	-- busca a sess찾o atual
	dados_sid_serial_w := pls_util_pck.obter_sid_sessao_atual();
	nm_id_sid_w := dados_sid_serial_w.nm_id_sid;
	nm_id_serial_w := dados_sid_serial_w.nm_id_serial;
end if;

-- tenta utilizando este select para ambientes RAC
begin
	ds_sql_w := 	'select	s.sid,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.serial#,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.osuser,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.machine,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.terminal,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.program,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.module,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'	s.action' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'from	gv$session s' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'where	s.sid = :nm_id_sid_pc' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
			'and 	s.serial# = :nm_id_serial_pc';

	EXECUTE ds_sql_w into STRICT nm_id_sid_p, nm_id_serial_p, nm_osuser_p, nm_machine_p,
					nm_terminal_p, nm_program_p, nm_module_p, nm_action_p
	using 	nm_id_sid_w, nm_id_serial_w;

exception
when others then
	nm_id_sid_p := null;
	nm_id_serial_p := null;
	nm_osuser_p := null;
	nm_machine_p := null;
	nm_terminal_p := null;
	nm_program_p := null;
	nm_module_p := null;
	nm_action_p := null;
end;

-- se n찾o der certo acima tenta pelo caminho abaixo
if (coalesce(nm_id_sid_p::text, '') = '') then

	begin
		ds_sql_w := 	'select	s.sid,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.serial#,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.osuser,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.machine,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.terminal,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.program,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.module,' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'	s.action' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'from	v$session s' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'where	s.sid = :nm_id_sid_pc' || current_setting('pls_util_pck.enter_w')::varchar(2) ||
				'and 	s.serial# = :nm_id_serial_pc';

		EXECUTE ds_sql_w into STRICT nm_id_sid_p, nm_id_serial_p, nm_osuser_p, nm_machine_p,
						nm_terminal_p, nm_program_p, nm_module_p, nm_action_p
		using 	nm_id_sid_w, nm_id_serial_w;

	exception
	when others then
		nm_id_sid_p := null;
		nm_id_serial_p := null;
		nm_osuser_p := null;
		nm_machine_p := null;
		nm_terminal_p := null;
		nm_program_p := null;
		nm_module_p := null;
		nm_action_p := null;
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_util_pck.obter_dados_sessao ( nm_id_sid_p INOUT text, nm_id_serial_p INOUT text, nm_osuser_p INOUT text, nm_machine_p INOUT text, nm_terminal_p INOUT text, nm_program_p INOUT text, nm_module_p INOUT text, nm_action_p INOUT text) FROM PUBLIC;
