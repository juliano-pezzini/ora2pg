-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	/**
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Infectious disease information  OCCURS  (n)  
	-- It contains the patient's Infectious disease related information  , fetched from EPC. 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	**/
CREATE OR REPLACE PROCEDURE carestream_japan_l10n_pck.patient_infection_info (unique_key_p text, message_data INOUT text) AS $body$
DECLARE

	c08 CURSOR FOR
	SELECT 	coalesce(a.total_count_row,'0') total_count_row,
            coalesce(a.infection_group,'0') infection_group,
            coalesce(a.infection_code, '0') infection_code,
            coalesce(to_char(a.infection_diagnosis_date , 'YYYYMMDD'), ' ') infection_diagnosis_date,
            coalesce(a.infection_name, ' ') infection_name,
            coalesce(a.infection_status , ' ')  infection_status
    from    (
                SELECT  count(*) over () total_count_row,
                            a.cd_tipo_infeccao infection_group,
                            a.cd_doenca infection_code,
                            coalesce(a.dt_exame, a.dt_registro) infection_diagnosis_date,
                            obter_desc_cid_doenca(a.cd_doenca) infection_name,
                            case
                                when(coalesce(dt_fim::text, '') = '' and a.ie_nega_infeccao  <> 'S') then '+'
                                when ((a.dt_fim IS NOT NULL AND a.dt_fim::text <> '') and (clock_timestamp()  <  a.dt_fim) and a.ie_nega_infeccao  <> 'S') then '-'
                                when(coalesce(a.ie_nega_infeccao, 'N') = 'S') then ' '
                            end  infection_status
                from    	historico_infeccao a 
                left outer join tipo_infeccao b
                on  	    a.cd_tipo_infeccao = b.nr_sequencia
                where	coalesce(a.dt_inativacao::text, '') = ''
                and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
                and     a.cd_pessoa_fisica = unique_key_p
            ) a;

        r_count c08%ROWTYPE;

BEGIN 
        
            PERFORM set_config('carestream_japan_l10n_pck.ds_line_w', null, false);
            open c08;
                fetch c08 into r_count;
                if (c08%NOTFOUND) then
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(0, 5, 'L', '0'); -- ALG_NUM
                else
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(r_count.total_count_row, 5, 'L', '0'); -- ALG_NUM
                 end if;
            close c08;
        for r_c08 in c08 loop
            begin
			    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(r_c08.infection_group, 4, 'L', '0'); --  INFECT_GRP
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(r_c08.infection_code, 4, 'L', '0'); --  INFECT_CD
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(to_char(r_c08.infection_diagnosis_date, 'YYYYMMDD'), 8); -- LAST_IN_DATE
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(r_c08.infection_name, 20, 'R', ' '); -- INFECT_DSP__NAME
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL carestream_japan_l10n_pck.append_text(r_c08.infection_status, 1); -- VALUE
            end;
        end loop;
		message_data := current_setting('carestream_japan_l10n_pck.ds_line_w')::varchar(32767);

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carestream_japan_l10n_pck.patient_infection_info (unique_key_p text, message_data INOUT text) FROM PUBLIC;
