-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE mprev_base_cubo_pck.atualizar_guias_planos (dt_inicio_p pls_competencia.dt_mes_competencia%type, dt_fim_p pls_competencia.dt_mes_competencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Atualizar a base do cubo para contas de beneficiarios.
	Tabelas mprev_guia_plano_cubo_ops e mprev_guia_cubo_ref.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
------------------------------------------------------------------------------------------------------------------

kcboeck 07/10/2015 - Inclusao do procedimento atualizar_guias_planos
------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

			
c_guias_plano CURSOR(	dt_inicio_pc	timestamp,
		dt_final_pc	timestamp) FOR
	SELECT guia_plano.nr_sequencia nr_seq_guia_plano,
		(SELECT	max(benef_cubo.nr_sequencia)
		from	mprev_benef_cubo_ops	benef_cubo
		where	benef_cubo.nr_seq_segurado = guia_plano.nr_seq_segurado) nr_seq_benef_cubo, 
		guia_plano.ie_carater_internacao,
		guia_plano.ie_tipo_atend_tiss nr_seq_tipo_atendimento, 
		guia_plano.nr_seq_clinica,
		guia_plano.dt_solicitacao dt_atendimento,
		pkg_date_utils.start_of(guia_plano.dt_solicitacao, 'MONTH', 0) dt_mes_competencia,
		guia_plano.cd_guia,
		guia_plano.ie_tipo_guia,
		obter_especialidade_medico(guia_plano.cd_medico_solicitante, 'C') cd_especialidade
	from	pls_guia_plano guia_plano
	where	1 = 1
	and	guia_plano.dt_solicitacao between dt_inicio_pc and dt_final_pc
	and	(guia_plano.dt_solicitacao IS NOT NULL AND guia_plano.dt_solicitacao::text <> '')  
	and	guia_plano.ie_status <> '3'  
	and	exists (	select	1
				from	mprev_benef_cubo_ops benef_cubo
				where	benef_cubo.nr_seq_segurado = guia_plano.nr_seq_segurado);
		
table_guias_plano_w		mprev_base_cubo_pck.table_guia_plano;
		

BEGIN

if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '' AND dt_fim_p IS NOT NULL AND dt_fim_p::text <> '') then

	open c_guias_plano(dt_inicio_p,dt_fim_p);
	loop
		fetch c_guias_plano bulk collect
		into	table_guias_plano_w.nr_seq_guia_plano, 
			table_guias_plano_w.nr_seq_benef_cubo,
			table_guias_plano_w.ie_carater_internacao, 
			table_guias_plano_w.nr_seq_tipo_atendimento, 
			table_guias_plano_w.nr_seq_clinica,
			table_guias_plano_w.dt_atendimento, 
			table_guias_plano_w.dt_mes_competencia,
			table_guias_plano_w.cd_guia, 
			table_guias_plano_w.ie_tipo_guia, 
			table_guias_plano_w.cd_especialidade 
		limit current_setting('mprev_base_cubo_pck.qt_reg_commit_w')::integer;
		
		exit when table_guias_plano_w.nr_seq_guia_plano.count = 0;
	
		forall i in table_guias_plano_w.nr_seq_guia_plano.first .. table_guias_plano_w.nr_seq_guia_plano.last
			insert into mprev_guia_plano_cubo_ops(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao,
				nr_seq_benef_cubo, 
				ie_carater_internacao, 
				nr_seq_tipo_atendimento,
				nr_seq_clinica, 
				dt_atendimento, 
				dt_mes_competencia,
				cd_guia, 
				ie_tipo_guia, 
				cd_especialidade
				)
			values (nextval('mprev_guia_plano_cubo_ops_seq'), 
				nm_usuario_p, 
				clock_timestamp(),
				table_guias_plano_w.nr_seq_benef_cubo(i), 
				table_guias_plano_w.ie_carater_internacao(i), 
				table_guias_plano_w.nr_seq_tipo_atendimento(i), 
				table_guias_plano_w.nr_seq_clinica(i), 
				table_guias_plano_w.dt_atendimento(i), 
				table_guias_plano_w.dt_mes_competencia(i),
				table_guias_plano_w.cd_guia(i), 
				table_guias_plano_w.ie_tipo_guia(i),
				table_guias_plano_w.cd_especialidade(i) 
				)
		returning nr_sequencia bulk collect into table_guias_plano_w.nr_sequencia;
		commit;
		
		forall i in table_guias_plano_w.nr_sequencia.first .. table_guias_plano_w.nr_sequencia.last
			insert into mprev_guia_cubo_ref(nr_sequencia, nm_usuario, dt_atualizacao,
				nr_seq_guia_cubo_ops, nr_seq_guia_plano)
			values (nextval('mprev_guia_cubo_ref_seq'), nm_usuario_p, clock_timestamp(),
				table_guias_plano_w.nr_sequencia(i), table_guias_plano_w.nr_seq_guia_plano(i));
		commit;
	end loop;
	close c_guias_plano;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_base_cubo_pck.atualizar_guias_planos (dt_inicio_p pls_competencia.dt_mes_competencia%type, dt_fim_p pls_competencia.dt_mes_competencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
