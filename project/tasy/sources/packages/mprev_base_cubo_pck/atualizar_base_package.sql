-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE mprev_base_cubo_pck.atualizar_base ( dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
------------------------------------------------------------------------------------------------------------------

jjung 24/02/2014 - Fechar os cursores do DBMS_SQL que estavam ficando abertos.
------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dt_inicio_w		timestamp;
dt_fim_w		timestamp;

-- Regras da populacao cadastradas;

cs_regra_geral CURSOR(cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	a.nr_sequencia,
		coalesce(a.qt_meses_atras, 12) qt_meses_atras
	from	mprev_regra_dados_cubo_ops a
	where	a.cd_estabelecimento	= cd_estabelecimento_pc;

BEGIN

-- Varrer as regras cadastradas para o estabelecimento 

for	rw_regras_w in cs_regra_geral(cd_estabelecimento_p) loop
	
	-- Limpa a base da geracao anterior.

	CALL CALL mprev_base_cubo_pck.limpar_base();

	dt_inicio_w	:= pkg_date_utils.add_month(pkg_date_utils.start_of(coalesce(dt_referencia_p, clock_timestamp()),'MONTH', 0),- rw_regras_w.qt_meses_atras, 0);
	dt_fim_w	:= fim_dia(pkg_date_utils.end_of(coalesce(dt_referencia_p, clock_timestamp()), 'MONTH', 0));

	-- Atualizar a base de pessoas e beneficiarios.

	CALL CALL mprev_base_cubo_pck.atualizar_pessoas(rw_regras_w.nr_sequencia, nm_usuario_p);
	commit;
	
	-- Atualiza os dados de contas.

	CALL mprev_base_cubo_pck.atualizar_contas(dt_inicio_w, dt_fim_w, nm_usuario_p);
	commit;
	
	-- Atualizar  plano_guia  

	CALL mprev_base_cubo_pck.atualizar_guias_planos(dt_inicio_w, dt_fim_w, nm_usuario_p);
	commit;
	
	-- Atualizar dados dos diagnosticos 

	CALL mprev_base_cubo_pck.atualizar_diagnosticos(nm_usuario_p);
	commit;
	
	-- Atualizar os dados para os procedimentos executados.

	CALL mprev_base_cubo_pck.atualizar_procedimentos(nm_usuario_p);
	commit;
	
	-- Atualizar procedimentos da guia plano

	CALL mprev_base_cubo_pck.atualizar_procedimentos_guia(nm_usuario_p);
	
	-- Remove as pessoas quais nao houve atendimentos.

	CALL mprev_base_cubo_pck.tirar_pessoas_sem_contas(nm_usuario_p);
	commit;
	
	-- Atualizar os custos.

	CALL mprev_base_cubo_pck.atualizar_custos(dt_inicio_w, dt_fim_w, nm_usuario_p);
	commit;
	
end loop; -- regras

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_base_cubo_pck.atualizar_base ( dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
