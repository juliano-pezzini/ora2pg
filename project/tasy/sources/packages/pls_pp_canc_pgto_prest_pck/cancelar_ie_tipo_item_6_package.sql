-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_canc_pgto_prest_pck.cancelar_ie_tipo_item_6 ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_pp_prest_p pls_pp_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_vl_apropriacao_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_it_aprop_w	pls_util_cta_pck.t_number_table;

c01 CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
		nr_seq_pp_prest_pc	pls_pp_prestador.nr_sequencia%type) FOR
	SELECT	pls_util_pck.obter_valor_negativo(c.vl_item) vl_item,
		c.nr_seq_pp_it_aprop
	from	pls_pp_prest_event_prest a,
		pls_pp_it_prest_event_val b,
		pls_pp_item_lote c,
		pls_pp_item_apropriacao d
	where	a.nr_seq_pp_prest = nr_seq_pp_prest_pc
	and	b.nr_seq_prest_even_val = a.nr_seq_pp_prest_even_val
	and	c.nr_seq_lote = nr_seq_lote_pc
	and	c.nr_sequencia = b.nr_seq_item_lote
	and	c.ie_tipo_item = '6'
	and	d.nr_sequencia = c.nr_seq_pp_it_aprop;

c02 CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
		nr_seq_pp_prest_pc	pls_pp_prestador.nr_sequencia%type) FOR
	SELECT 	d.nr_sequencia
	from	pls_pp_prest_event_prest a,
		pls_pp_it_prest_event_val b,
		pls_pp_item_lote c,
		pls_pp_item_apropriacao d
	where	a.nr_seq_pp_prest = nr_seq_pp_prest_pc
	and	b.nr_seq_prest_even_val = a.nr_seq_pp_prest_even_val
	and	c.nr_seq_lote = nr_seq_lote_pc
	and	c.nr_sequencia = b.nr_seq_item_lote
	and	c.ie_tipo_item = '6'
	and	d.nr_seq_it_lote_orig = c.nr_sequencia
	and not exists (	SELECT	1
			from	pls_pp_item_lote x
			where	x.nr_seq_pp_it_aprop = d.nr_sequencia);


BEGIN
-- retorna todos os registros de apropriacao que entraram neste lote de pagamento

open c01(nr_seq_lote_p, nr_seq_pp_prest_p);
loop
	fetch c01 bulk collect into	tb_vl_apropriacao_w, tb_nr_seq_it_aprop_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_it_aprop_w.count = 0;

	-- seta todos para nao baixados e retorna para o valor de divida anterior ao lote de pagamento

	forall i in tb_nr_seq_it_aprop_w.first..tb_nr_seq_it_aprop_w.last
		update	pls_pp_item_apropriacao
		set	ie_baixado = 'N',
			vl_divida = tb_vl_apropriacao_w(i),
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = tb_nr_seq_it_aprop_w(i);
	commit;
end loop;
close c01;

-- retorna todos os registros de apropriacao gerados neste lote de pagamento e faz a baixa destes

-- registros de apropriacao gerados neste pagamento nao podem ser alterados caso ja tenham entrado em outro lote de pagamento

open c02(nr_seq_lote_p, nr_seq_pp_prest_p);
loop
	fetch c02 bulk collect into	tb_nr_seq_it_aprop_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_it_aprop_w.count = 0;

	forall i in tb_nr_seq_it_aprop_w.first..tb_nr_seq_it_aprop_w.last
		update	pls_pp_item_apropriacao
		set	ie_baixado = 'C',
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = tb_nr_seq_it_aprop_w(i);
	commit;
end loop;
close c02;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_canc_pgto_prest_pck.cancelar_ie_tipo_item_6 ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_pp_prest_p pls_pp_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
