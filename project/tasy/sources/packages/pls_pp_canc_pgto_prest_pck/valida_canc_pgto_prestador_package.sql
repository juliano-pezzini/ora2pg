-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_canc_pgto_prest_pck.valida_canc_pgto_prestador ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_pp_prest_p pls_pp_prestador.nr_sequencia%type) AS $body$
DECLARE


ds_mensagem_w	varchar(200);
qt_registro_w	integer;


BEGIN

-- verifica se ja existe um lote de fechamento gerado.

-- O lote de fechamento do mes ja foi gerado, nao e possivel cancelar o pagamento selecionado.

CALL pls_pp_lote_pagamento_pck.valida_lote_retencao_ja_gerado(	pls_pp_lote_pagamento_pck.dt_mes_comp_lote_w, 458355);

-- verifica se o titulo do prestador ja nao esta em um bordero

ds_mensagem_w := pls_pp_gerar_titulo_pck.obter_titulo_pagar_bordero(	nr_seq_lote_p, nr_seq_pp_prest_p);

if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then

	-- Nao e possivel cancelar o pagamento do prestador pois o titulo ja esta em um bordero.

	-- #@DS_MENSAGEM#@

	CALL wheb_mensagem_pck.exibir_mensagem_abort(458377,'DS_MENSAGEM=' || ds_mensagem_w);
end if;

-- verifica se o titulo do prestador ja nao esta em um pagamento escritural

ds_mensagem_w := pls_pp_gerar_titulo_pck.obter_titulo_pagar_escritural(	nr_seq_lote_p, nr_seq_pp_prest_p);

if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then

	-- Nao e possivel cancelar o pagamento do prestador pois o titulo ja esta em um pagamento escritural.

	-- #@DS_MENSAGEM#@

	CALL wheb_mensagem_pck.exibir_mensagem_abort(458378,'DS_MENSAGEM=' || ds_mensagem_w);
end if;

-- verifica se existe algum titulo a receber vinculado aos itens

select	count(1)
into STRICT	qt_registro_w
from	pls_pp_prest_event_prest a,
	pls_pp_it_prest_event_val b,
	pls_pp_item_lote c,
	titulo_receber d
where	a.nr_seq_pp_prest = nr_seq_pp_prest_p
and	b.nr_seq_prest_even_val = a.nr_seq_pp_prest_even_val
and	c.nr_seq_lote = nr_seq_lote_p
and	c.nr_sequencia = b.nr_seq_item_lote
and	c.ie_tipo_item = '4'
and	d.nr_titulo = c.nr_titulo_receber  LIMIT 1;

-- caso exista os parametros devem possuir algum valor pois sera feita a baixa do titulo e passado estes parametros

if (qt_registro_w > 0) and
	((coalesce(pls_pp_lote_pagamento_pck.cd_tipo_receb_pgto_w::text, '') = '') or (coalesce(pls_pp_lote_pagamento_pck.nr_seq_trans_fin_rec_pgto_w::text, '') = '')) then

	-- Nao e possivel realizar este processo!

	-- Verifique se os campos "Trans fin receb pag producao" e "Tipo receb pag producao" estao informados nos 

	-- parametros do pagamento de producao (OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento producao medica).

	CALL wheb_mensagem_pck.exibir_mensagem_abort(312374);
end if;

-- verifica se existe algum titulo a pagar vinculado aos itens

select	count(1)
into STRICT	qt_registro_w
from	pls_pp_prest_event_prest a,
	pls_pp_it_prest_event_val b,
	pls_pp_item_lote c,
	titulo_pagar d
where	a.nr_seq_pp_prest = nr_seq_pp_prest_p
and	b.nr_seq_prest_even_val = a.nr_seq_pp_prest_even_val
and	c.nr_seq_lote = nr_seq_lote_p
and	c.nr_sequencia = b.nr_seq_item_lote
and	c.ie_tipo_item = '4'
and	d.nr_titulo = c.nr_titulo_pagar  LIMIT 1;

-- caso exista os parametros devem possuir algum valor pois sera feita a baixa do titulo e passado estes parametros

if (qt_registro_w > 0) and
	((coalesce(pls_pp_lote_pagamento_pck.cd_tipo_baixa_pgto_w::text, '') = '') or (coalesce(pls_pp_lote_pagamento_pck.nr_seq_trans_fin_pag_pgto_w::text, '') = '')) then

	-- Nao e possivel realizar este processo!

	-- Verifique se os campos "Trans fin pagar pag producao" e "Tipo baixa pag producao" estao informados nos 

	-- parametros do pagamento de producao (OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento producao medica).

	CALL wheb_mensagem_pck.exibir_mensagem_abort(312374);
end if;

-- verifica se algum registro de apropriacao gerado neste lote ja entrou em um lote posterior

select 	count(1)
into STRICT	qt_registro_w
from	pls_pp_prest_event_prest a,
	pls_pp_it_prest_event_val b,
	pls_pp_item_lote c,
	pls_pp_item_apropriacao d
where	a.nr_seq_pp_prest = nr_seq_pp_prest_p
and	b.nr_seq_prest_even_val = a.nr_seq_pp_prest_even_val
and	c.nr_seq_lote = nr_seq_lote_p
and	c.nr_sequencia = b.nr_seq_item_lote
and	c.ie_tipo_item = '6'
and	d.nr_seq_it_lote_orig = c.nr_sequencia
and	exists (	SELECT	1
		from	pls_pp_item_lote x
		where	x.nr_seq_pp_it_aprop = d.nr_sequencia);

-- se existe algum nao e possivel cancelar o pagamento. Registros de apropriacao que foram cobrados neste pagamento ou registros que 

-- tiveram parte do valor abatido deste nao tem problema cancelarmos pois outro lote de pagamento ira pegar este valor e cobrir a divida

-- porem dividas que foram geradas neste lote e ja foram pagas em outro lote nao podemos alterar

if (qt_registro_w > 0) then

	-- Nao e possivel cancelar o pagamneto pois existem registros de apropriacao gerados que ja estao em outros lotes de pagamento.

	CALL wheb_mensagem_pck.exibir_mensagem_abort(458623);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_canc_pgto_prest_pck.valida_canc_pgto_prestador ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_pp_prest_p pls_pp_prestador.nr_sequencia%type) FROM PUBLIC;
