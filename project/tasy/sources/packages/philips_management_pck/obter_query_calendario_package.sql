-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

/*
        Esta funcao esta retornando uma query com 3158 caracteres. Cuidado ao alterar. Tamanho maximo e 4000
    */
CREATE OR REPLACE FUNCTION philips_management_pck.obter_query_calendario (ie_detalhe_p text default 'N') RETURNS varchar AS $body$
DECLARE


    return_sql varchar(4000) := '';

    
BEGIN
        return_sql :=
            'select
               cal.workday,
               usu.nm_usuario_grupo,
               usu.ie_area_gerencia, ';

        if ie_detalhe_p = 'S' then
            return_sql := return_sql ||  ''''' ds_alocacao      -- usado no fetch' ||chr(10); -- quebra de linha necessaria, evita erro sql;
        else
            return_sql := return_sql ||
                     '  0 pr_projeto,    -- usado no fetch
                        0 nr_seq_projeto, -- usado no fetch
                        '''' dt_atualizacao
                     ';
        end if;

        return_sql := return_sql ||
            ' from
              ( select
                  cal.workday
                from 
                ( select ((to_date(seq.mm || seq.yyyy, ''MM/YYYY'')-1) + seq.num) workday
                  from
                  ( select 
                     result num,
                     -- Data minima
                     to_char(trunc(:dt_inicio_p,''month''),''MM'') as "MM",
                     -- Data Minima
                     to_char(trunc(:dt_inicio_p,''month''),''YYYY'') as "YYYY"
                     from
                     ( select  rownum result
                       from    dual
                       connect by level <= ( 
                          (   -- Data Maxima
                             last_day(trunc(:dt_fim_p,''month'')) -
                             -- Data Minima
                             trunc(:dt_inicio_p,''month'') -- Sempre primeiro dia do mes
                           ) + 1  -- Ultimo dia do ultimo ano
                        )
                     ) -- Quantas sequencias para gerar pelo MAX
                   ) seq
                  ) cal
                  where   pkg_date_utils.get_weekday(workday) not in (1,7)
                  and     obter_se_feriado(1,workday) = 0
              ) cal,
              ( select
                  distinct a.nm_usuario_grupo,
                  c.ie_area_gerencia,
                  b.nr_seq_gerencia
                from 
                  gerencia_wheb_grupo_usu a,
                  gerencia_wheb_grupo b,
                  gerencia_wheb c,
                  usuario e,
                  pessoa_fisica f,
                cargo g                                 
                where a.nr_seq_grupo = b.nr_sequencia
                and b.nr_seq_gerencia = c.nr_sequencia
                and b.ie_situacao = ''A''
                and c.ie_situacao = ''A''
                and e.nm_usuario = a.nm_usuario_grupo  
                and f.cd_pessoa_fisica = e.cd_pessoa_fisica
                and g.cd_cargo = f.cd_cargo
                and a.dt_fim is null  -- somente recursos ativos
                and nvl(a.ie_emprestimo,''N'') = ''N'' -- somentes recursos da gerencia
                -- cargos que nao apontam horas Diretor, Gerentes e Supervisores
                and not exists
                  ( select x.cd_cargo
                    from corp.cargo x
                    where x.cd_cargo = f.cd_cargo
                    and (  lower(ds_cargo) like ''%diretor%''  or lower(ds_cargo) like ''%gerente%'' or lower(ds_cargo) like ''%supervisor%'' )   
                  ) 
                and c.ie_area_gerencia in (
                     (  select regexp_substr(nvl(:ie_area_p,c.ie_area_gerencia),''[^,]+'', 1, level) as resultado
                         from dual 
                         connect by regexp_substr(nvl(:ie_area_p,c.ie_area_gerencia), ''[^,]+'', 1, level) is not null
                     )
                    )
                and a.nm_usuario_grupo = nvl(:nr_recurso_p, a.nm_usuario_grupo )
              ) usu
              order by 1,2 ';

        return return_sql;
    end;



$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION philips_management_pck.obter_query_calendario (ie_detalhe_p text default 'N') FROM PUBLIC;
