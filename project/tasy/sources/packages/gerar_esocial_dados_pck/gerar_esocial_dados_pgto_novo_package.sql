-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE gerar_esocial_dados_pck.gerar_esocial_dados_pgto_novo ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


	cd_pessoa_fisica_ant_w		pessoa_fisica.cd_pessoa_fisica%type;
	qt_registros_w			bigint := 0;
	nr_seq_pagamento_w		bigint := 0;
	vl_trib_ir_w			double precision;
	vl_base_irf_w			double precision;
	vl_base_inss_w			double precision;
	vl_imposto_carta_w		double precision;
	vl_imposto_w			double precision;
	cd_retencao_ir_w		tributo.cd_retencao%type;

	c_prestador CURSOR FOR
		SELECT	dt_competencia,
			ie_tipo_operacao,
			nr_seq_prestador,
			cd_pessoa_fisica,
			vl_rendimento_bruto,
			dt_pagamento,
			nr_titulo_pagar,
			cd_retencao,
			nr_cadastro_colab,
			nr_lote_pagamento,
			vl_trib_inss,
			vl_base_inss,
			vl_deducao_inss,
			ie_tipo_relacao,
			ie_deducao
		from	(
			SELECT	CASE WHEN current_setting('gerar_esocial_dados_pck.ie_referencia_pgto_w')::esocial_regra.ie_referencia_pgto%type='C' THEN l.dt_mes_competencia  ELSE p.dt_venc_titulo END  dt_competencia,
				CASE WHEN p.ie_cancelado='S' THEN 'E'  ELSE 'I' END  ie_tipo_operacao,
				p.nr_seq_prestador,
				pe.cd_pessoa_fisica,
				(	select	coalesce(sum(i.vl_item), 0)
					from	pls_pp_base_atual_trib i
					where	i.nr_seq_lote = l.nr_sequencia
					and 	i.cd_tributo = v.cd_tributo
					and 	i.nr_seq_trib_pessoa = v.nr_seq_trib_pessoa
					and	coalesce(v.pr_aliquota, 0) <> 0) vl_rendimento_bruto,
				(	select	pkg_date_utils.start_of(coalesce(max(dt_liquidacao), p.dt_venc_titulo),'MONTH')
					from	titulo_pagar
					where	nr_titulo = p.nr_titulo_pagar) dt_pagamento,
				p.nr_titulo_pagar,
				coalesce(v.cd_retencao,t.cd_retencao) cd_retencao,
				pe.cd_externo_esocial nr_cadastro_colab,
				l.nr_sequencia nr_lote_pagamento,
				v.vl_tributo vl_trib_inss,
				v.vl_base_calculo vl_base_inss,
				v.vl_reducao vl_deducao_inss,
				pe.ie_tipo_relacao,
				'S' ie_deducao,
				l.dt_geracao_lote
			from	pls_pp_valor_trib_pessoa_v v,
				pls_pp_prestador p,
				pls_pp_lote l,
				tributo t,
				pls_prestador pe
			where	l.nr_sequencia = v.nr_seq_lote
			and	p.nr_seq_prestador = v.nr_seq_prestador
			and	l.nr_sequencia = p.nr_seq_lote
			and	v.cd_tributo = t.cd_tributo
			and	v.nr_seq_prestador = pe.nr_sequencia
			and	t.ie_tipo_tributo = 'INSS'
			and	CASE WHEN current_setting('gerar_esocial_dados_pck.ie_referencia_pgto_w')::esocial_regra.ie_referencia_pgto%type='C' THEN l.dt_mes_competencia  ELSE p.dt_venc_titulo END  between current_setting('gerar_esocial_dados_pck.dt_inicio_w')::esocial_lote.dt_inicio%type and current_setting('gerar_esocial_dados_pck.dt_fim_w')::esocial_lote.dt_fim%type
			--and	l.nr_sequencia = 261
			) alias13
		where	((vl_rendimento_bruto > 0)
		or (vl_base_inss > 0))
		order by cd_pessoa_fisica, dt_pagamento, dt_geracao_lote;

	vet_prestadores c_prestador%rowtype;		
	
	
BEGIN
	cd_pessoa_fisica_ant_w := '';
	
	select	max(cd_externo)
	into STRICT	current_setting('gerar_esocial_dados_pck.cd_filial_colab_w')::esocial_dados_prestador.cd_filial_colab%type
	from	conversao_meio_externo
	where	upper(ie_sistema_externo) = 'ESOCIAL'
	and 	upper(nm_tabela) 	  = 'ESOCIAL_DADOS_PRESTADOR'
	and	upper(nm_atributo)	  = 'CD_FILIAL_COLAB';
	
	open c_prestador;
	loop
	fetch c_prestador into	
		vet_prestadores;
	EXIT WHEN NOT FOUND; /* apply on c_prestador */
		begin
		qt_registros_w := qt_registros_w + 1;
		
		select	max(t.cd_retencao),
			sum(v.vl_tributo),
			sum(v.vl_base)
		into STRICT	cd_retencao_ir_w,
			vl_trib_ir_w,
			vl_base_irf_w
		from	pls_pp_base_atual_trib v,
			pls_pp_prestador p,
			pls_pp_lote l,
			tributo t
		where	l.nr_sequencia = v.nr_seq_lote
		and	p.nr_seq_prestador = v.nr_seq_prestador
		and	l.nr_sequencia = p.nr_seq_lote
		and	v.cd_tributo = t.cd_tributo
		and	v.nr_seq_prestador = vet_prestadores.nr_seq_prestador
		and	v.nr_seq_lote = vet_prestadores.nr_lote_pagamento
		and	t.ie_tipo_tributo = 'IR'
		and	CASE WHEN current_setting('gerar_esocial_dados_pck.ie_referencia_pgto_w')::esocial_regra.ie_referencia_pgto%type='C' THEN l.dt_mes_competencia  ELSE p.dt_venc_titulo END  between current_setting('gerar_esocial_dados_pck.dt_inicio_w')::esocial_lote.dt_inicio%type and current_setting('gerar_esocial_dados_pck.dt_fim_w')::esocial_lote.dt_fim%type;
		
		select	coalesce(sum(CASE WHEN coalesce(b.ie_natureza,'D')='D' THEN (b.vl_diferenca_trib * (-1)) WHEN coalesce(b.ie_natureza,'D')='P' THEN  b.vl_diferenca_trib END ),0)
		into STRICT	vl_imposto_carta_w
		from	pls_pp_lr_lote a,
			pls_pp_lr_trib_pessoa b
		where	b.nr_seq_lote_ret = a.nr_sequencia
		and	a.dt_mes_competencia between current_setting('gerar_esocial_dados_pck.dt_inicio_w')::esocial_lote.dt_inicio%type and current_setting('gerar_esocial_dados_pck.dt_fim_w')::esocial_lote.dt_fim%type
		and	b.cd_pessoa_fisica = vet_prestadores.cd_pessoa_fisica;
		
		vl_base_inss_w	:= vet_prestadores.vl_base_inss;
		
		if (vl_imposto_carta_w > vet_prestadores.vl_trib_inss) then
			vl_imposto_w 	:= 0;
			vl_base_inss_w	:= 0;
		else
			vl_imposto_w 	:= vet_prestadores.vl_trib_inss - vl_imposto_carta_w;
		end if;
		
		if (qt_registros_w = 1) then
			cd_pessoa_fisica_ant_w 	:= vet_prestadores.cd_pessoa_fisica;
			nr_seq_pagamento_w	:= 0;
		elsif (cd_pessoa_fisica_ant_w <> vet_prestadores.cd_pessoa_fisica) then
			cd_pessoa_fisica_ant_w := vet_prestadores.cd_pessoa_fisica;
			nr_seq_pagamento_w	:= 0;
		end if;
		
		nr_seq_pagamento_w := nr_seq_pagamento_w + 1;
		
		insert into esocial_dados_pagamento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_empresa,
			cd_retencao,
			dt_competencia,
			dt_pagamento,
			ie_tipo_operacao,
			nr_cadastro_colab,
			nr_lote_pagamento,
			nr_seq_esocial_lote,
			nr_seq_pagamento,
			vl_rendimento_bruto,
			vl_trib_inss,
			vl_base_inss,
			vl_deducao_inss,
			vl_trib_ir,
			vl_base_irf,
			nr_seq_prestador,
			cd_filial_colab)
		values (nextval('esocial_dados_pagamento_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			current_setting('gerar_esocial_dados_pck.cd_empresa_w')::esocial_lote.cd_empresa%type,
			coalesce(cd_retencao_ir_w,588),
			vet_prestadores.dt_competencia,
			vet_prestadores.dt_pagamento,
			vet_prestadores.ie_tipo_operacao,
			vet_prestadores.nr_cadastro_colab,
			vet_prestadores.nr_lote_pagamento,
			nr_seq_lote_p,
			nr_seq_pagamento_w,
			vet_prestadores.vl_rendimento_bruto,
			vl_imposto_w,
			vl_base_inss_w,
			vet_prestadores.vl_deducao_inss,
			vl_trib_ir_w,
			vl_base_irf_w,
			vet_prestadores.nr_seq_prestador,
			current_setting('gerar_esocial_dados_pck.cd_filial_colab_w')::esocial_dados_prestador.cd_filial_colab%type);		
		
		if (mod(qt_registros_w,1000) = 0) then
			commit;
		end if;
		
		end;
	end loop;
	close c_prestador;
	
	commit;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_esocial_dados_pck.gerar_esocial_dados_pgto_novo ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
