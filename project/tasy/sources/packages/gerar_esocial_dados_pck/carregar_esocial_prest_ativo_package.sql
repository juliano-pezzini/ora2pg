-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE gerar_esocial_dados_pck.carregar_esocial_prest_ativo ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


	qt_registros_w		bigint;
	ie_tipo_operacao_w	esocial_dados_prestador.ie_tipo_operacao%type;
	nr_count_prest_w	bigint:= 0;
	nr_Seq_new_lote_w	esocial_lote.nr_sequencia%type;
	nr_seq_lote_w		esocial_lote.nr_sequencia%type;

	c_prestador CURSOR FOR
		SELECT	max(a.nr_sequencia) nr_sequencia,
			max(a.dt_cadastro) dt_cadastro,
			max(a.cd_externo_esocial) cd_externo_esocial,
			max(a.nm_interno) nm_interno,
			a.cd_pessoa_fisica,
			'I' ie_tipo_operacao
		from	pls_prestador a
		where	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
		and (coalesce(a.dt_exclusao::text, '') = ''
			or	a.dt_exclusao > current_setting('gerar_esocial_dados_pck.dt_fim_w')::esocial_lote.dt_fim%type)
		group by a.cd_pessoa_fisica;

	
BEGIN

	select	max(a.cd_empresa),
		max(a.dt_inicio),
		max(a.dt_fim),
		max(a.ie_dados_prestador),
		max(a.ie_dados_compl)
	into STRICT	current_setting('gerar_esocial_dados_pck.cd_empresa_w')::esocial_lote.cd_empresa%type,
		current_setting('gerar_esocial_dados_pck.dt_inicio_w')::esocial_lote.dt_inicio%type,
		current_setting('gerar_esocial_dados_pck.dt_fim_w')::esocial_lote.dt_fim%type,
		current_setting('gerar_esocial_dados_pck.ie_dados_prestador_w')::esocial_lote.ie_dados_prestador%type,
		current_setting('gerar_esocial_dados_pck.ie_dados_compl_w')::esocial_lote.ie_dados_compl%type
	from	esocial_lote a
	where	a.nr_sequencia	= nr_seq_lote_p;

	select	max(a.nr_sequencia),
		max(a.cd_categoria_colab),
		max(a.cd_categoria_sefip),
		max(a.ie_referencia_pgto)
	into STRICT	current_setting('gerar_esocial_dados_pck.nr_seq_regra_w')::esocial_regra.nr_sequencia%type,
		current_setting('gerar_esocial_dados_pck.cd_categoria_colab_w')::esocial_regra.cd_categoria_colab%type,
		current_setting('gerar_esocial_dados_pck.cd_categoria_sefip_w')::esocial_regra.cd_categoria_sefip%type,
		current_setting('gerar_esocial_dados_pck.ie_referencia_pgto_w')::esocial_regra.ie_referencia_pgto%type
	from	esocial_regra a
	where	current_setting('gerar_esocial_dados_pck.dt_inicio_w')::esocial_lote.dt_inicio%type between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp())
	and	current_setting('gerar_esocial_dados_pck.dt_fim_w')::esocial_lote.dt_fim%type between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp());
	
	nr_seq_lote_w:= nr_seq_lote_p;
	
	open c_prestador;
	loop
	fetch c_prestador into
		current_setting('gerar_esocial_dados_pck.nr_seq_prestador_w')::pls_prestador.nr_sequencia%type,
		current_setting('gerar_esocial_dados_pck.dt_cadastro_w')::pls_prestador.dt_cadastro%type,
		current_setting('gerar_esocial_dados_pck.cd_externo_esocial_w')::pls_prestador.cd_externo_esocial%type,
		current_setting('gerar_esocial_dados_pck.nm_interno_w')::pls_prestador.nm_interno%type,
		current_setting('gerar_esocial_dados_pck.cd_pessoa_fisica_w')::pls_prestador.cd_pessoa_fisica%type,
		ie_tipo_operacao_w;
	EXIT WHEN NOT FOUND; /* apply on c_prestador */
		begin
		qt_registros_w := qt_registros_w + 1;

		CALL gerar_esocial_dados_pck.carregar_esocial_dados_pessoa(current_setting('gerar_esocial_dados_pck.cd_pessoa_fisica_w')::pls_prestador.cd_pessoa_fisica%type);

		CALL gerar_esocial_dados_pck.carregar_esocial_conv_ext_pres(current_setting('gerar_esocial_dados_pck.nr_seq_prestador_w')::pls_prestador.nr_sequencia%type);
		
		/*if	(nvl(nr_count_prest_w, 0) = 20) then
			begin
			
			
			select	esocial_lote_seq.nextval
			into	nr_Seq_new_lote_w
			from	dual;
			
			insert into esocial_lote (	cd_empresa,
							cd_estabelecimento,
							dt_atualizacao,
							dt_fim,
							dt_geracao,
							dt_geracao_xml,
							dt_inicio,
							dt_liberacao,
							ie_dados_compl,
							ie_dados_pagamento,
							ie_dados_prestador,
							nm_usuario,
							nr_sequencia)
							select	cd_empresa,
								cd_estabelecimento,
								dt_atualizacao,
								dt_fim,
								dt_geracao,
								dt_geracao_xml,
								dt_inicio,
								dt_liberacao,
								ie_dados_compl,
								ie_dados_pagamento,
								ie_dados_prestador,
								nm_usuario,
								nr_Seq_new_lote_w 
							from 	esocial_lote
							where nr_Sequencia = nr_seq_lote_w;
							
			nr_count_prest_w:= 0;
			
			update	esocial_lote
			set	dt_geracao	= sysdate,
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_Seq_new_lote_w;
			
			nr_seq_lote_w:= nr_Seq_new_lote_w;
			
			commit;
					
			end;
		else
			nr_count_prest_w:= nr_count_prest_w + 1;
		end if;*/
		if (current_setting('gerar_esocial_dados_pck.ie_dados_prestador_w')::esocial_lote.ie_dados_prestador%type = 'S') then
			CALL gerar_esocial_dados_pck.gerar_esocial_dados_prest(nr_seq_lote_w, current_setting('gerar_esocial_dados_pck.nr_seq_prestador_w')::pls_prestador.nr_sequencia%type, 'I', cd_estabelecimento_p, nm_usuario_p);
		end if;

		if (current_setting('gerar_esocial_dados_pck.ie_dados_compl_w')::esocial_lote.ie_dados_compl%type = 'S') then
			CALL gerar_esocial_dados_pck.gerar_esocial_dados_compl(nr_seq_lote_w, current_setting('gerar_esocial_dados_pck.nr_seq_prestador_w')::pls_prestador.nr_sequencia%type, 'I', cd_estabelecimento_p, nm_usuario_p);
		end if;
		if (current_setting('gerar_esocial_dados_pck.ie_dados_depend_w')::esocial_lote.ie_dados_depend%type = 'S') then
			CALL gerar_esocial_dados_pck.gerar_esocial_dados_depend(nr_seq_lote_w, 'I', current_setting('gerar_esocial_dados_pck.cd_pessoa_fisica_w')::pls_prestador.cd_pessoa_fisica%type, nm_usuario_p);
		end if;
		if (current_setting('gerar_esocial_dados_pck.ie_dados_reten_w')::esocial_lote.ie_dados_reten%type = 'S') then
			CALL gerar_esocial_dados_pck.gerar_esocial_dados_retenc(nr_seq_lote_w, current_setting('gerar_esocial_dados_pck.nr_seq_prestador_w')::pls_prestador.nr_sequencia%type, 'I', current_setting('gerar_esocial_dados_pck.cd_pessoa_fisica_w')::pls_prestador.cd_pessoa_fisica%type, nm_usuario_p);
		end if;

		if (mod(qt_registros_w,1000) = 0) then
			commit;
		end if;
		
		end;
	end loop;
	close c_prestador;

	update	esocial_lote
	set	dt_geracao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_lote_p;


	commit;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_esocial_dados_pck.carregar_esocial_prest_ativo ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
