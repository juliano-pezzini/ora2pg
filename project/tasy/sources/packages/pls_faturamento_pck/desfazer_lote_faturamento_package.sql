-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.desfazer_lote_faturamento ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
qt_fatura_contes_w		integer;
nr_seq_lote_disc_w		pls_lote_faturamento.nr_seq_lote_disc%type;
tb_seq_pos_proc_w		pls_util_cta_pck.t_number_table;
tb_seq_pos_mat_w		pls_util_cta_pck.t_number_table;
tb_seq_contas_w			pls_util_cta_pck.t_number_table;
index_w				integer := 0;
current_setting('pls_faturamento_pck.qt_registro_w')::integer			integer := 0;

c01 CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura,
		dt_geracao_xml
	from	pls_fatura	
	where	nr_seq_lote = nr_seq_lote_pc;
	
c02 CURSOR(	nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura_evento
	from	pls_fatura_evento
	where	nr_seq_fatura = nr_seq_fatura_pc;
	
current_setting('pls_faturamento_pck.c03')::CURSOR( CURSOR(	nr_seq_fat_evt_pc 	pls_fatura_evento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura_conta
	from	pls_fatura_conta
	where	nr_seq_fatura_evento = nr_seq_fat_evt_pc;
	
current_setting('pls_faturamento_pck.c04')::CURSOR( CURSOR(	nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_ptu_fatura
	from	ptu_fatura
	where	nr_seq_pls_fatura = nr_seq_fatura_pc;
	
c05 CURSOR(	nr_seq_ptu_fatura_pc	ptu_fatura.nr_sequencia%type) FOR
        SELECT  nr_sequencia nr_seq_cobranca
        from    ptu_nota_cobranca
        where   nr_seq_fatura = nr_seq_ptu_fatura_pc;
	
c06 CURSOR(	nr_seq_cobranca_pc	ptu_nota_cobranca.nr_sequencia%type) FOR
        SELECT  nr_sequencia nr_seq_hospital
        from    ptu_nota_hospitalar
        where   nr_seq_nota_cobr = nr_seq_cobranca_pc;
	
C07 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_pos_proc,
		null nr_seq_pos_mat,
		a.nr_seq_conta
	from	pls_conta_pos_proc a
	where	a.nr_seq_lote_fat = nr_seq_lote_p
	and 	vl_ajuste != 0
	
union

	SELECT	null nr_seq_pos_proc,
		a.nr_sequencia nr_seq_pos_mat,
		a.nr_seq_conta
	from	pls_conta_pos_mat a
	where	a.nr_seq_lote_fat = nr_seq_lote_p
	and 	vl_ajuste != 0;
	
C08 CURSOR(	nr_seq_ptu_fatura_pc	ptu_fatura.nr_sequencia%type) FOR
        SELECT  nr_sequencia nr_seq_cobranca_rss
        from    ptu_nota_cobranca_rrs
        where   nr_seq_fatura = nr_seq_ptu_fatura_pc;
	
BEGIN
-- CARREGA_PARAMETROS
CALL CALL CALL CALL CALL CALL pls_faturamento_pck.carrega_parametros(nr_seq_lote_p, cd_estabelecimento_p);

-- verifica primeiro se nao existe alguma fatura ja contestada, caso existir aborta a operacao.
select	count(1)
into STRICT	qt_fatura_contes_w
from	pls_lote_contestacao 	b,
	pls_fatura 		a
where	b.nr_seq_pls_fatura 	= a.nr_sequencia
and	a.nr_seq_lote 		= nr_seq_lote_p;

if (qt_fatura_contes_w > 0) then
	-- Nao e possivel desfazer o lote de faturamento, existem faturas em lote de contestacao.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(414111);
end if;

--Se tiver marcado para ajustar taxas de servico para que o valor das faturas dos eventos x tx_adm iguale o somatorio 
--de todas as taxas adm dos itens presentes no respectivo evento, entao ao desfazer o lote de faturamento, sera necessario desfazer o ajuste
if (current_setting('pls_faturamento_pck.ie_aplicar_arredondamento_w')::pls_lote_faturamento.ie_aplicar_arredondamento%type = 'S') then	
	for r_c07_w in C07 loop
		tb_seq_pos_proc_w(index_w) 	:= r_c07_w.nr_seq_pos_proc;
		tb_seq_pos_mat_w(index_w) 	:= r_c07_w.nr_seq_pos_mat;
		tb_seq_contas_w(index_w):= r_c07_w.nr_seq_conta;
		index_w := index_w + 1;
	end loop;
	
end if;

-- Gerar log
CALL pls_gerar_fatura_log( nr_seq_lote_p, null, null, 'PLS_FATURAMENTO_PCK.DESFAZER_LOTE_FATURAMENTO()', 'DL', 'S', nm_usuario_p);

delete 	FROM w_pls_lote_fat_proc
where	nr_seq_lote_fat = nr_seq_lote_p;

delete 	FROM w_pls_lote_fat_mat
where	nr_seq_lote_fat = nr_seq_lote_p;

for r_c01_w in c01( nr_seq_lote_p ) loop

	if (r_c01_w.dt_geracao_xml IS NOT NULL AND r_c01_w.dt_geracao_xml::text <> '') then
		CALL pls_desfazer_lote_guia_fat_xml( r_c01_w.nr_seq_fatura, nm_usuario_p);
	end if;

	delete	FROM pls_fatura_item_trib
	where	nr_seq_fatura_trib in (	SELECT	nr_sequencia
					from	pls_fatura_trib
					where	nr_seq_fatura = r_c01_w.nr_seq_fatura);
	update	nota_fiscal
	set	nr_seq_fatura  = NULL
	where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
	
	update	nota_fiscal
	set	nr_seq_fatura_ndc  = NULL
	where	nr_seq_fatura_ndc = r_c01_w.nr_seq_fatura;
	
	update	titulo_receber
	set	nr_seq_pls_fatura	 = NULL
	where	nr_seq_pls_fatura	= r_c01_w.nr_seq_fatura;
	
	for r_c02_w in c02( r_c01_w.nr_seq_fatura ) loop
		for r_c03_w in current_setting('pls_faturamento_pck.c03')::CURSOR( ( r_c02_w.nr_seq_fatura_evento ) loop
			-- Deletar as faturas que foram duplicadas para a fatura cancelada primeiro.
			delete 	FROM pls_fatura_proc
			where	nr_seq_fat_proc_cancel in (	SELECT	nr_sequencia
								from	pls_fatura_proc
								where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta);
								
			delete 	FROM pls_fatura_proc
			where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
			
			-- Deletar as faturas que foram duplicadas para a fatura cancelada primeiro.
			delete 	FROM pls_fatura_mat
			where	nr_seq_fat_mat_cancel in (	SELECT	nr_sequencia
								from	pls_fatura_mat
								where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta);
			
			delete	FROM pls_fatura_mat
			where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
		end loop;
		
		delete	from pls_fatura_conta
		where	nr_seq_fatura_evento = r_c02_w.nr_seq_fatura_evento;
	end loop;
	
	for r_c04_w in current_setting('pls_faturamento_pck.c04')::CURSOR( ( r_c01_w.nr_seq_fatura ) loop
		for r_c05_w in c05( r_c04_w.nr_seq_ptu_fatura ) loop
			delete	FROM ptu_nota_servico_item
			where	nr_seq_nota_servico in (	SELECT	nr_sequencia
							from	ptu_nota_servico
							where	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca);
							
			delete	FROM ptu_nota_servico_proc
			where	nr_seq_nota_servico in (	SELECT	nr_sequencia
							from	ptu_nota_servico
							where	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca);
							
			delete	FROM ptu_nota_servico_mat
			where	nr_seq_nota_servico in (	SELECT	nr_sequencia
							from	ptu_nota_servico
							where	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca);
							
			delete 	FROM ptu_nota_servico
			where	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;
			
			delete 	FROM ptu_nota_complemento
			where 	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;
			
			delete 	FROM ptu_nota_fiscal
			where 	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;
			
			for r_c06_w in c06( r_c05_w.nr_seq_cobranca ) loop
				delete 	FROM ptu_nota_hosp_compl
				where 	nr_seq_nota_hosp = r_c06_w.nr_seq_hospital;
			end loop;
			
			delete 	FROM ptu_nota_hospitalar
			where 	nr_seq_nota_cobr = r_c05_w.nr_seq_cobranca;
		end loop;
		
		for r_c08_w in c08(r_c04_w.nr_seq_ptu_fatura) loop
		
			delete	FROM ptu_nota_servico_item
			where	nr_seq_nota_servico_rrs in (	SELECT	nr_sequencia
								from	ptu_nota_servico_rrs
								where	nr_seq_nota_cobr_rrs = r_c08_w.nr_seq_cobranca_rss);
							
			delete	FROM ptu_nota_servico_proc
			where	nr_seq_nota_servico_rrs in (	SELECT	nr_sequencia
								from	ptu_nota_servico_rrs
								where	nr_seq_nota_cobr_rrs = r_c08_w.nr_seq_cobranca_rss);
							
			delete	FROM ptu_nota_servico_mat
			where	nr_seq_nota_servico_rrs in (	SELECT	nr_sequencia
								from	ptu_nota_servico_rrs
								where	nr_seq_nota_cobr_rrs = r_c08_w.nr_seq_cobranca_rss);
		
			delete 	from ptu_nota_servico_rrs
			where	nr_seq_nota_cobr_rrs = r_c08_w.nr_seq_cobranca_rss;
		
		end loop;
		
		delete 	from ptu_nota_cobranca_rrs 	
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete 	FROM ptu_nota_cobranca
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete 	FROM ptu_fatura_boleto
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete 	FROM ptu_fatura_boleto
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete 	FROM ptu_fatura_corpo
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete 	FROM ptu_fatura_historico
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete 	FROM ptu_a500_historico
		where 	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete	FROM ptu_fatura_cedente
		where	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
		
		delete	FROM ptu_fatura_conta_exc
		where	nr_seq_fatura = r_c04_w.nr_seq_ptu_fatura;
	end loop;
	
	delete	FROM pls_fat_guia_envio_partic
	where	nr_seq_guia_proc in (	SELECT	b.nr_sequencia
					from	pls_fat_guia_envio_proc	b,
						pls_fatura_guia_envio	a
					where	a.nr_sequencia		= b.nr_seq_guia_envio
					and	a.nr_seq_fatura 	= r_c01_w.nr_seq_fatura);
					
	delete	FROM pls_fat_guia_envio_proc
	where	nr_seq_guia_envio in (	SELECT	nr_sequencia
					from	pls_fatura_guia_envio
					where	nr_seq_fatura = r_c01_w.nr_seq_fatura);
					
	delete	FROM pls_fatura_guia_envio
	where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
	
	delete	FROM ptu_fatura
	where	nr_seq_pls_fatura = r_c01_w.nr_seq_fatura;
	
	delete	FROM pls_fatura_evento
	where 	nr_seq_fatura = r_c01_w.nr_seq_fatura;
	
	delete	FROM pls_fatura_motivo_imp_cob
	where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
end loop;

delete	FROM pls_lote_fat_inconsist
where	nr_seq_lote = nr_seq_lote_p;

delete	FROM pls_fatura_atend
where	nr_seq_lote_fat = nr_seq_lote_p;

delete	FROM pls_fatura_motivo_imp_cob
where	nr_seq_lote_fat = nr_seq_lote_p;

delete	FROM pls_fatura
where	nr_seq_lote = nr_seq_lote_p;

delete	FROM pls_fatura_log
where	nr_seq_lote = nr_seq_lote_p
and	ie_opcao not in ('GL','DL');

update	pls_conta_pos_proc
set	nr_seq_evento_fat	 = NULL,
	nr_seq_lote_fat		 = NULL,
	ie_status_faturamento	= 'L',
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_seq_lote_fat		= nr_seq_lote_p;

update	pls_conta_pos_mat
set	nr_seq_evento_fat	 = NULL,
	nr_seq_lote_fat		 = NULL,
	ie_status_faturamento	= 'L',
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_seq_lote_fat		= nr_seq_lote_p;

update	pls_lote_faturamento
set	dt_geracao 		 = NULL,
	dt_geracao_titulos 	 = NULL,
	dt_fechamento		 = NULL,
	nm_usuario		= nm_usuario_p,
	dt_inicio_ger_lote	 = NULL,
	dt_fim_ger_lote		 = NULL,
	nm_id_sid		 = NULL,
	nm_id_serial		 = NULL,
	nm_usuario_ger_lote	 = NULL,
	ie_status		= 1, -- Aguardando
	dt_atualizacao		= clock_timestamp()
where	nr_sequencia		= nr_seq_lote_p;

select	max(nr_seq_lote_disc)
into STRICT	nr_seq_lote_disc_w
from	pls_lote_faturamento
where	nr_sequencia = nr_seq_lote_p;

if (nr_seq_lote_disc_w IS NOT NULL AND nr_seq_lote_disc_w::text <> '') then
	delete	FROM pls_lote_faturamento
	where	nr_sequencia = nr_seq_lote_p;
end if;

--Se tiver marcado para ajustar taxas de servico para que o valor das faturas dos eventos x tx_adm iguale o somatorio 
--de todas as taxas adm dos itens presentes no respectivo evento, entao ao desfazer o lote de faturamento, sera necessario desfazer o ajuste
if (current_setting('pls_faturamento_pck.ie_aplicar_arredondamento_w')::pls_lote_faturamento.ie_aplicar_arredondamento%type = 'S') then
	if (tb_seq_contas_w.count > 0) then
		CALL pls_faturamento_pck.desfazer_ajuste_taxas_fat(nr_seq_lote_p, tb_seq_pos_proc_w, tb_seq_pos_mat_w, tb_seq_contas_w, nm_usuario_p);
		tb_seq_pos_proc_w.delete;
		tb_seq_pos_mat_w.delete;
		tb_seq_contas_w.delete;
	end if;
end if;

select	count(1)
into STRICT	current_setting('pls_faturamento_pck.qt_registro_w')::integer
from (SELECT	1
	from	pls_conta_pos_proc
	where	nr_seq_lote_fat = nr_seq_lote_p
	
union all

	SELECT	1
	from	pls_conta_pos_mat
	where	nr_seq_lote_fat = nr_seq_lote_p) alias2;

if (current_setting('pls_faturamento_pck.qt_registro_w')::integer > 0) then
	-- Alguns itens de contas medicas ainda permanecem vinculados ao lote de faturamento, verifique com o suporte. (PLSCOVB_PLSLOFA_FK)
	CALL wheb_mensagem_pck.exibir_mensagem_abort(818030);
end if;

-- se desfez tudo, limpa as datas de geracao
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.desfazer_lote_faturamento ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
