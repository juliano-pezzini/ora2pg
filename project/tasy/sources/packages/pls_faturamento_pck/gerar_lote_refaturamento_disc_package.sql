-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.gerar_lote_refaturamento_disc (nr_seq_lote_disc_p pls_lote_discussao.nr_sequencia%type, dt_vencimento_p timestamp, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%type		pls_lote_contestacao.nr_seq_pls_fatura%type;
current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type		pls_lote_faturamento.nr_seq_regra_fat%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
nr_seq_congenere_w		pls_congenere.nr_sequencia%type;
nr_seq_grupo_prestador_w	pls_fatura.nr_seq_grupo_prestador%type;
ie_tipo_relacao_w		pls_fatura.ie_tipo_relacao%type;
nr_seq_lote_faturamento_w	pls_lote_faturamento.nr_sequencia%type;
vl_fatura_w			pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_fatura_proc_w		pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_fatura_mat_w			pls_conta_pos_estabelecido.vl_beneficiario%type;
nr_seq_fatura_w			pls_fatura.nr_sequencia%type;
nr_seq_fatura_evento_w		pls_fatura_evento.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
ie_tipo_cobranca_w		pls_fatura_conta.ie_tipo_cobranca%type;
nr_seq_cong_w			pls_segurado.nr_seq_congenere%type;
current_setting('pls_faturamento_pck.nr_seq_fatura_conta_w')::pls_fatura_conta.nr_sequencia%type		pls_fatura_conta.nr_sequencia%type;
nr_seq_pos_taxa_contab_w	pls_conta_pos_taxa_contab.nr_sequencia%type;
nr_seq_pos_proc_tx_fat_w	pls_conta_pos_taxa_contab.nr_sequencia%type;
nr_seq_pos_mat_tx_fat_w		pls_conta_pos_taxa_contab.nr_sequencia%type;
nr_seq_conta_pos_contab_w	pls_conta_pos_estab_contab.nr_sequencia%type;
nr_seq_conta_pos_proc_fat_w	pls_conta_pos_proc_fat.nr_sequencia%type;
nr_seq_conta_pos_mat_fat_w	pls_conta_pos_mat_fat.nr_sequencia%type;
ie_tipo_cobranca_ant_w		pls_fatura_conta.ie_tipo_cobranca%type;
current_setting('pls_faturamento_pck.qt_registro_w')::integer			integer;
nr_seq_fatura_proc_w		pls_fatura_proc.nr_sequencia%type;
nr_seq_fatura_proc_new_w	pls_fatura_proc.nr_sequencia%type;
nr_seq_fatura_mat_w		pls_fatura_mat.nr_sequencia%type;
nr_seq_fatura_mat_new_w		pls_fatura_mat.nr_sequencia%type;
ie_tipo_lote_ww			pls_lote_faturamento.ie_tipo_lote%type;

c01 CURSOR(	nr_seq_pls_fatura_pc		pls_fatura.nr_sequencia%type,
		nr_seq_lote_disc_pc		pls_lote_discussao.nr_sequencia%type) FOR
	SELECT	nr_seq_evento
	from (	SELECT	c.nr_seq_evento
		from	pls_fatura_evento		c,
			pls_conta_pos_proc		b,
			pls_fatura_conta		a
		where	b.nr_seq_conta			= a.nr_seq_conta
		and	a.nr_seq_fatura_evento		= c.nr_sequencia
		and	c.nr_seq_fatura			= nr_seq_pls_fatura_pc
		and	b.nr_seq_lote_disc		= nr_seq_lote_disc_pc
		and	b.ie_status_faturamento 	= 'L'
		and exists (	select	1 -- pos-estabelecido original
				from	pls_conta_pos_proc	d
				where	d.nr_seq_evento_fat	= c.nr_seq_evento
				and	d.nr_seq_conta_proc	= b.nr_seq_conta_proc
				and	coalesce(d.nr_seq_lote_disc::text, '') = '')
		
union all

		select	c.nr_seq_evento
		from	pls_fatura_evento		c,
			pls_conta_pos_mat		b,
			pls_fatura_conta		a
		where	b.nr_seq_conta			= a.nr_seq_conta
		and	a.nr_seq_fatura_evento		= c.nr_sequencia
		and	c.nr_seq_fatura			= nr_seq_pls_fatura_pc
		and	b.nr_seq_lote_disc		= nr_seq_lote_disc_pc
		and	b.ie_status_faturamento		= 'L'
		and exists (	select	1 -- pos-estabelecido original
				from	pls_conta_pos_mat	d
				where	d.nr_seq_evento_fat	= c.nr_seq_evento
				and	d.nr_seq_conta_mat	= b.nr_seq_conta_mat
				and	coalesce(d.nr_seq_lote_disc::text, '') = '')) alias5
	group by nr_seq_evento;
	
c02 CURSOR(	nr_seq_pls_fatura_pc		pls_fatura.nr_sequencia%type,
		nr_seq_lote_disc_pc		pls_lote_discussao.nr_sequencia%type,
		nr_seq_evento_pc		pls_evento_faturamento.nr_sequencia%type) FOR
	SELECT	nr_seq_conta,
		coalesce(sum(vl_beneficiario), 0) vl_beneficiario,
		coalesce(sum(vl_administracao), 0) vl_administracao
	from (	SELECT	b.nr_seq_conta,
			sum(coalesce(vl_medico, 0) + coalesce(vl_materiais, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0) + coalesce(vl_lib_taxa_servico, 0)) vl_beneficiario,
			sum(coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0) + coalesce(vl_lib_taxa_servico, 0)) vl_administracao
		from	pls_fatura_evento	c,
			pls_conta_pos_proc	b,
			pls_fatura_conta	a
		where	b.nr_seq_conta		= a.nr_seq_conta
		and	a.nr_seq_fatura_evento	= c.nr_sequencia
		and	c.nr_seq_fatura		= nr_seq_pls_fatura_pc
		and	b.nr_seq_lote_disc	= nr_seq_lote_disc_pc
		and	c.nr_seq_evento		= nr_seq_evento_pc
		and	b.ie_status_faturamento	= 'L'
		group by b.nr_seq_conta
		
union all

		select	b.nr_seq_conta,
			sum(coalesce(vl_materiais, 0) + coalesce(vl_lib_taxa_material, 0)) vl_beneficiario,
			sum(coalesce(vl_lib_taxa_material, 0)) vl_administracao
		from	pls_fatura_evento		c,
			pls_conta_pos_mat		b,
			pls_fatura_conta		a
		where	b.nr_seq_conta			= a.nr_seq_conta
		and	a.nr_seq_fatura_evento		= c.nr_sequencia
		and	c.nr_seq_fatura			= nr_seq_pls_fatura_pc
		and	b.nr_seq_lote_disc		= nr_seq_lote_disc_pc
		and	c.nr_seq_evento			= nr_seq_evento_pc
		and	b.ie_status_faturamento		= 'L'
		group by b.nr_seq_conta) alias21
	group by nr_seq_conta;
	
current_setting('pls_faturamento_pck.c03')::CURSOR( CURSOR(	nr_seq_lote_disc_pc		pls_lote_discussao.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type) FOR
	SELECT	null nr_seq_conta_pos,
		a.nr_sequencia nr_seq_conta_pos_proc,
		null nr_seq_conta_pos_mat,
		a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		coalesce(a.vl_medico, 0) + coalesce(a.vl_materiais, 0) + coalesce(a.vl_custo_operacional, 0) + coalesce(a.vl_lib_taxa_co, 0) + coalesce(a.vl_lib_taxa_material, 0) + coalesce(a.vl_lib_taxa_servico, 0) vl_beneficiario,
		null ie_tipo_taxa,
		coalesce(a.vl_lib_taxa_co, 0) + coalesce(a.vl_lib_taxa_material, 0) + coalesce(a.vl_lib_taxa_servico, 0) vl_administracao,
		a.nr_seq_disc_proc,
		null nr_seq_disc_mat,
		null nr_seq_pos_estab_taxa,
		null nr_seq_pos_proc_tx,
		null nr_seq_pos_mat_tx
	from	pls_conta_pos_proc		a
	where	a.nr_seq_lote_disc		= nr_seq_lote_disc_pc
	and	a.nr_seq_conta			= nr_seq_conta_pc
	and	a.ie_status_faturamento		= 'L'
	
union all

	SELECT	null nr_seq_conta_pos,
		a.nr_sequencia nr_seq_conta_pos_proc,
		null nr_seq_conta_pos_mat,
		a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		b.vl_taxa_manutencao vl_beneficiario,
		b.ie_tipo_taxa,
		0 vl_administracao,
		a.nr_seq_disc_proc,
		null nr_seq_disc_mat,
		null nr_seq_pos_estab_taxa,
		b.nr_sequencia nr_seq_pos_proc_tx,
		null nr_seq_pos_mat_tx
	from	pls_conta_pos_proc_tx		b,
		pls_conta_pos_proc		a
	where	a.nr_sequencia			= b.nr_seq_conta_pos_proc
	and	a.nr_seq_lote_disc		= nr_seq_lote_disc_pc
	and	a.nr_seq_conta			= nr_seq_conta_pc
	and	a.ie_status_faturamento		= 'L'
	
union all

	select	null nr_seq_conta_pos,
		null nr_seq_conta_pos_proc,
		a.nr_sequencia nr_seq_conta_pos_mat,
		null nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		coalesce(a.vl_materiais, 0) + coalesce(a.vl_lib_taxa_material, 0) vl_beneficiario,
		null ie_tipo_taxa,
		coalesce(a.vl_lib_taxa_material, 0) vl_administracao,
		null nr_seq_disc_proc,
		a.nr_seq_disc_mat,
		null nr_seq_pos_estab_taxa,
		null nr_seq_pos_proc_tx,
		null nr_seq_pos_mat_tx
	from	pls_conta_pos_mat		a
	where	a.nr_seq_lote_disc		= nr_seq_lote_disc_pc
	and	a.nr_seq_conta			= nr_seq_conta_pc
	and	a.ie_status_faturamento		= 'L'
	
union all

	select	null nr_seq_conta_pos,
		null nr_seq_conta_pos_proc,
		a.nr_sequencia nr_seq_conta_pos_mat,
		null nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		b.vl_taxa_manutencao vl_beneficiario,
		b.ie_tipo_taxa,
		0 vl_administracao,
		null nr_seq_disc_proc,
		a.nr_seq_disc_mat,
		null nr_seq_pos_estab_taxa,
		null nr_seq_pos_proc_tx,
		b.nr_sequencia nr_seq_pos_mat_tx
	from	pls_conta_pos_mat_tx		b,
		pls_conta_pos_mat		a
	where	a.nr_sequencia			= b.nr_seq_conta_mat_pos
	and	a.nr_seq_lote_disc		= nr_seq_lote_disc_pc
	and	a.nr_seq_conta			= nr_seq_conta_pc
	and	a.ie_status_faturamento		= 'L'
	order by 1;
	
BEGIN

-- Gerar o lote, evento e fatura para o refaturamento 
if (nr_seq_lote_disc_p IS NOT NULL AND nr_seq_lote_disc_p::text <> '') then	
	select	max(a.nr_seq_pls_fatura)
	into STRICT	current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%type	
	from	pls_lote_discussao	b,
		pls_lote_contestacao	a
	where	a.nr_sequencia		= b.nr_seq_lote_contest
	and	b.nr_sequencia		= nr_seq_lote_disc_p;
	
	-- Obter dados para o refaturamento
	if (current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
		select	max(c.nr_seq_regra_fat),
			max(a.nr_seq_pagador),
			max(a.nr_seq_congenere),
			max(a.nr_seq_grupo_prestador),
			max(a.ie_tipo_relacao),
			max(c.ie_tipo_lote)
		into STRICT	current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type,
			nr_seq_pagador_w,
			nr_seq_congenere_w,
			nr_seq_grupo_prestador_w,
			ie_tipo_relacao_w,
			ie_tipo_lote_ww
		from	pls_lote_faturamento	c,
			pls_fatura_evento	b,
			pls_fatura		a
		where	c.nr_sequencia		= a.nr_seq_lote
		and	a.nr_sequencia		= b.nr_seq_fatura
		and	a.nr_sequencia		= current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%type;
	end if;
	
	if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') and (current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
		insert into pls_lote_faturamento(	nr_sequencia,				cd_estabelecimento,		dt_atualizacao,
							nm_usuario,				dt_atualizacao_nrec,		nm_usuario_nrec,
							dt_mesano_referencia,			nr_seq_lote_disc,		nr_seq_regra_fat,
							dt_geracao,				dt_fechamento,			dt_vencimento)
						values (nextval('pls_lote_faturamento_seq'),	cd_estabelecimento_p,		clock_timestamp(),
							nm_usuario_p,				clock_timestamp(),			nm_usuario_p,
							clock_timestamp(),				nr_seq_lote_disc_p,		current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type,
							clock_timestamp(),				clock_timestamp(),			null) returning nr_sequencia into nr_seq_lote_faturamento_w;

		select	sum(coalesce(vl_medico, 0) + coalesce(vl_materiais, 0) + coalesce(vl_custo_operacional, 0) + coalesce(vl_lib_taxa_co, 0) + coalesce(vl_lib_taxa_material, 0) + coalesce(vl_lib_taxa_servico, 0))
		into STRICT	vl_fatura_proc_w
		from	pls_conta_pos_proc
		where	nr_seq_lote_disc = nr_seq_lote_disc_p
		and	ie_status_faturamento	= 'L';
		
		select	sum(coalesce(vl_materiais, 0) + coalesce(vl_lib_taxa_material, 0))
		into STRICT	vl_fatura_mat_w
		from	pls_conta_pos_mat
		where	nr_seq_lote_disc = nr_seq_lote_disc_p
		and	ie_status_faturamento	= 'L';
		
		vl_fatura_w := vl_fatura_proc_w + vl_fatura_mat_w;
		
		select	nextval('pls_fatura_seq')
		into STRICT	nr_seq_fatura_w
		;
		
		insert into pls_fatura(	nr_sequencia,			dt_atualizacao,			nm_usuario,
					dt_atualizacao_nrec,		nm_usuario_nrec,		nr_seq_lote,
					dt_vencimento,			vl_fatura,			nr_seq_pagador,
					vl_total_ndc,			nr_seq_congenere,		nr_seq_grupo_prestador,
					ie_tipo_relacao,		nr_fatura,			dt_mes_competencia,
					ie_tipo_fatura)
				values (nr_seq_fatura_w,		clock_timestamp(),			nm_usuario_p,
					clock_timestamp(),			nm_usuario_p,			nr_seq_lote_faturamento_w,
					dt_vencimento_p,		vl_fatura_w,			nr_seq_pagador_w,
					0,				nr_seq_congenere_w,		nr_seq_grupo_prestador_w,
					ie_tipo_relacao_w,		nr_seq_fatura_w,		clock_timestamp(),
					ie_tipo_lote_ww);
					
		for r_c01_w in c01( current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%type , nr_seq_lote_disc_p ) loop
		
			insert into pls_fatura_evento(	nr_sequencia,			dt_atualizacao,		nm_usuario,
							dt_atualizacao_nrec,		nm_usuario_nrec,	nr_seq_fatura,
							nr_seq_evento,			vl_evento)
					values (	nextval('pls_fatura_evento_seq'),	clock_timestamp(),		nm_usuario_p,
							clock_timestamp(),			nm_usuario_p,		nr_seq_fatura_w,
							r_c01_w.nr_seq_evento,		0) returning nr_sequencia into nr_seq_fatura_evento_w;
							
			-- Gerar a conta para o faturamento
			for r_c02_w in c02( current_setting('pls_faturamento_pck.nr_seq_pls_fatura_w')::pls_fatura.nr_sequencia%type , nr_seq_lote_disc_p , r_c01_w.nr_seq_evento ) loop
			
				select	max(nr_seq_segurado)
				into STRICT	nr_seq_segurado_w
				from	pls_conta
				where	nr_sequencia = r_c02_w.nr_seq_conta;
				
				select	max(nr_seq_congenere)
				into STRICT	nr_seq_cong_w
				from	pls_segurado
				where	nr_sequencia = nr_seq_segurado_w;
				
				select	max(ie_tipo_cobranca)
				into STRICT	ie_tipo_cobranca_w
				from	pls_fatura_conta
				where	nr_seq_conta = r_c02_w.nr_seq_conta;
				
				insert into pls_fatura_conta(	nr_sequencia,			dt_atualizacao,			nm_usuario,
								dt_atualizacao_nrec,		nm_usuario_nrec,		nr_seq_fatura_evento,
								nr_seq_conta,			vl_faturado,			nr_seq_segurado,
								ie_tipo_cobranca,		nr_lote_contabil,		vl_faturado_ndc,
								ie_tipo_vinculacao,		nr_seq_congenere)
						values (	nextval('pls_fatura_conta_seq'),	clock_timestamp(),			nm_usuario_p,
								clock_timestamp(),			nm_usuario_p,			nr_seq_fatura_evento_w,
								r_c02_w.nr_seq_conta,		r_c02_w.vl_administracao,	nr_seq_segurado_w,
								ie_tipo_cobranca_w,		0, 				r_c02_w.vl_beneficiario,
								'A', 				nr_seq_cong_w) returning nr_sequencia into current_setting('pls_faturamento_pck.nr_seq_fatura_conta_w')::pls_fatura_conta.nr_sequencia%type;
				
				-- Gerar os itens para a conta do faturamento
				for r_c03_w in current_setting('pls_faturamento_pck.c03')::CURSOR( ( nr_seq_lote_disc_p , r_c02_w.nr_seq_conta ) loop
				
					nr_seq_pos_taxa_contab_w 	:= null;
					nr_seq_pos_proc_tx_fat_w	:= null;
					nr_seq_pos_mat_tx_fat_w		:= null;
	
					if (r_c03_w.nr_seq_pos_proc_tx IS NOT NULL AND r_c03_w.nr_seq_pos_proc_tx::text <> '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_pos_proc_tx_fat_w
						from	pls_conta_pos_proc_tx_fat
						where	nr_seq_proc_pos_tx = r_c03_w.nr_seq_pos_proc_tx;
					end if;

					
					if (r_c03_w.nr_seq_pos_mat_tx IS NOT NULL AND r_c03_w.nr_seq_pos_mat_tx::text <> '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_pos_mat_tx_fat_w
						from	pls_conta_pos_mat_tx_fat
						where	nr_seq_pos_mat_tx = r_c03_w.nr_seq_pos_mat_tx;
					end if;
					
					nr_seq_conta_pos_contab_w	:= null;
					nr_seq_conta_pos_proc_fat_w	:= null;
					nr_seq_conta_pos_mat_fat_w	:= null;
					ie_tipo_cobranca_ant_w		:= null;
					
					-- Inserir os procedimento
					if (r_c03_w.nr_seq_conta_proc IS NOT NULL AND r_c03_w.nr_seq_conta_proc::text <> '') then
						select	count(1)
						into STRICT	current_setting('pls_faturamento_pck.qt_registro_w')::integer
						from	pls_fatura_proc 		e,
							pls_fatura_conta 		d,
							pls_fatura_evento 		c,
							pls_fatura 			b,
							pls_lote_faturamento 		a
						where	a.nr_sequencia			= b.nr_seq_lote
						and	b.nr_sequencia			= c.nr_seq_fatura
						and	c.nr_sequencia			= d.nr_seq_fatura_evento
						and	d.nr_sequencia			= e.nr_seq_fatura_conta
						and	e.nr_seq_pos_proc 		= r_c03_w.nr_seq_conta_pos_proc
						and	a.nr_seq_lote_disc		= nr_seq_lote_disc_p
						and	a.nr_sequencia			= nr_seq_lote_faturamento_w
						and	e.ie_tipo_cobranca not in ('3', '4');
						
						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_pos_proc_fat_w
						from	pls_conta_pos_proc_fat
						where	nr_seq_conta_pos_proc	= r_c03_w.nr_seq_conta_pos_proc
						and	nr_seq_conta		= r_c02_w.nr_seq_conta;
						
						if (r_c03_w.nr_seq_disc_proc IS NOT NULL AND r_c03_w.nr_seq_disc_proc::text <> '') then
							select	max(nr_seq_fatura_proc)
							into STRICT	nr_seq_fatura_proc_w
							from	pls_discussao_proc
							where	nr_sequencia = r_c03_w.nr_seq_disc_proc;
							
							if (nr_seq_fatura_proc_w IS NOT NULL AND nr_seq_fatura_proc_w::text <> '') then
								select	ie_tipo_cobranca
								into STRICT	ie_tipo_cobranca_ant_w
								from	pls_fatura_proc
								where	nr_sequencia = nr_seq_fatura_proc_w;
							end if;
						end if;

						if (current_setting('pls_faturamento_pck.qt_registro_w')::integer = 0) then
							insert into pls_fatura_proc(	nr_sequencia, 			dt_atualizacao, 		nm_usuario,
											dt_atualizacao_nrec, 		nm_usuario_nrec, 		nr_seq_fatura_conta,
											nr_seq_conta_proc, 		vl_faturado, 			nr_lote_contabil,
											nr_seq_conta_pos_estab, 	vl_faturado_ndc,		ie_tipo_cobranca,
											nr_seq_conta_pos_contab, 	nr_seq_pos_estab_taxa, 		nr_seq_pos_taxa_contab,
											nr_seq_pos_proc,		nr_seq_pos_proc_fat,		nr_seq_pos_proc_tx,
											nr_seq_pos_proc_tx_fat)
									values (	nextval('pls_fatura_proc_seq'), 	clock_timestamp(), 			nm_usuario_p,
											clock_timestamp(), 			nm_usuario_p, 			current_setting('pls_faturamento_pck.nr_seq_fatura_conta_w')::pls_fatura_conta.nr_sequencia%type,
											r_c03_w.nr_seq_conta_proc, 	r_c03_w.vl_administracao, 	0,
											r_c03_w.nr_seq_conta_pos,	r_c03_w.vl_beneficiario,	coalesce(ie_tipo_cobranca_ant_w, CASE WHEN coalesce(r_c03_w.ie_tipo_taxa::text, '') = '' THEN  ie_tipo_cobranca_w WHEN r_c03_w.ie_tipo_taxa='1' THEN  '4' WHEN r_c03_w.ie_tipo_taxa='2' THEN  '3' END ),
											nr_seq_conta_pos_contab_w,	r_c03_w.nr_seq_pos_estab_taxa,	nr_seq_pos_taxa_contab_w,
											r_c03_w.nr_seq_conta_pos_proc,	nr_seq_conta_pos_proc_fat_w,	r_c03_w.nr_seq_pos_proc_tx,
											nr_seq_pos_proc_tx_fat_w) returning nr_sequencia into nr_seq_fatura_proc_new_w;
						end if;
					end if;
					
					-- Inserir os materiais
					if (r_c03_w.nr_seq_conta_mat IS NOT NULL AND r_c03_w.nr_seq_conta_mat::text <> '') then
						select	count(1)
						into STRICT	current_setting('pls_faturamento_pck.qt_registro_w')::integer
						from	pls_fatura_mat 			e,
							pls_fatura_conta 		d,
							pls_fatura_evento 		c,
							pls_fatura 			b,
							pls_lote_faturamento 		a
						where	a.nr_sequencia			= b.nr_seq_lote
						and	b.nr_sequencia			= c.nr_seq_fatura
						and	c.nr_sequencia			= d.nr_seq_fatura_evento
						and	d.nr_sequencia			= e.nr_seq_fatura_conta
						and	e.nr_seq_pos_mat 		= r_c03_w.nr_seq_conta_pos_mat
						and	a.nr_seq_lote_disc		= nr_seq_lote_disc_p
						and	a.nr_sequencia			= nr_seq_lote_faturamento_w
						and	e.ie_tipo_cobranca not in ('3', '4');
						
						select	max(nr_sequencia)
						into STRICT	nr_seq_conta_pos_mat_fat_w
						from	pls_conta_pos_mat_fat
						where	nr_seq_conta_mat_pos	= r_c03_w.nr_seq_conta_pos_mat
						and	nr_seq_conta		= r_c02_w.nr_seq_conta;
						
						if (r_c03_w.nr_seq_disc_mat IS NOT NULL AND r_c03_w.nr_seq_disc_mat::text <> '') then
							select	max(nr_seq_fatura_mat)
							into STRICT	nr_seq_fatura_mat_w
							from	pls_discussao_mat
							where	nr_sequencia = r_c03_w.nr_seq_disc_mat;
							
							if (nr_seq_fatura_proc_w IS NOT NULL AND nr_seq_fatura_proc_w::text <> '') then
								select	ie_tipo_cobranca
								into STRICT	ie_tipo_cobranca_ant_w
								from	pls_fatura_mat
								where	nr_sequencia = nr_seq_fatura_mat_w;
							end if;
						end if;
						
						if (current_setting('pls_faturamento_pck.qt_registro_w')::integer = 0) then
							insert into pls_fatura_mat(	nr_sequencia,			dt_atualizacao,			nm_usuario,
											dt_atualizacao_nrec, 		nm_usuario_nrec,		nr_seq_fatura_conta,
											nr_seq_conta_mat, 		vl_faturado, 			nr_lote_contabil,
											nr_seq_conta_pos_estab, 	vl_faturado_ndc,		ie_tipo_cobranca,
											nr_seq_conta_pos_contab,	nr_seq_pos_estab_taxa,		nr_seq_pos_taxa_contab,
											nr_seq_pos_mat,			nr_seq_pos_mat_fat,		nr_seq_pos_mat_tx,
											nr_seq_pos_mat_tx_fat)
									values (	nextval('pls_fatura_mat_seq'), 	clock_timestamp(),			nm_usuario_p,
											clock_timestamp(), 			nm_usuario_p,			current_setting('pls_faturamento_pck.nr_seq_fatura_conta_w')::pls_fatura_conta.nr_sequencia%type,
											r_c03_w.nr_seq_conta_mat, 	r_c03_w.vl_administracao, 	0,
											r_c03_w.nr_seq_conta_pos, 	r_c03_w.vl_beneficiario,	coalesce(ie_tipo_cobranca_ant_w, CASE WHEN coalesce(r_c03_w.ie_tipo_taxa::text, '') = '' THEN  ie_tipo_cobranca_w WHEN r_c03_w.ie_tipo_taxa='1' THEN  '4' WHEN r_c03_w.ie_tipo_taxa='2' THEN  '3' END ),
											nr_seq_conta_pos_contab_w,	r_c03_w.nr_seq_pos_estab_taxa,	nr_seq_pos_taxa_contab_w,
											r_c03_w.nr_seq_conta_pos_mat,	nr_seq_conta_pos_mat_fat_w,	r_c03_w.nr_seq_pos_mat_tx,
											nr_seq_pos_mat_tx_fat_w) returning nr_sequencia into nr_seq_fatura_mat_new_w;
						end if;
					end if;	
				end loop;
				
				-- Atualizar dados pos proc
				update	pls_conta_pos_proc
				set	nr_seq_lote_fat			= nr_seq_lote_faturamento_w,
					nr_seq_evento_fat		= r_c01_w.nr_seq_evento,
					ie_status_faturamento		= 'F',
					dt_atualizacao			= clock_timestamp(),
					nm_usuario			= nm_usuario_p
				where	nr_seq_lote_disc		= nr_seq_lote_disc_p
				and	nr_seq_conta			= r_c02_w.nr_seq_conta
				and	ie_status_faturamento		= 'L';
				
				-- Atualizar dados pos mat
				update	pls_conta_pos_mat
				set	nr_seq_lote_fat			= nr_seq_lote_faturamento_w,
					nr_seq_evento_fat		= r_c01_w.nr_seq_evento,
					ie_status_faturamento		= 'F',
					dt_atualizacao			= clock_timestamp(),
					nm_usuario			= nm_usuario_p
				where	nr_seq_lote_disc		= nr_seq_lote_disc_p
				and	nr_seq_conta			= r_c02_w.nr_seq_conta
				and	ie_status_faturamento		= 'L';
			end loop;
		end loop;
		
		delete	FROM pls_fatura_conta	a
		where (not exists (	SELECT	1
					from	pls_fatura_proc	b
					where	b.nr_seq_fatura_conta = a.nr_sequencia))
		and (not exists (	select	1
					from	pls_fatura_mat	b
					where	b.nr_seq_fatura_conta = a.nr_sequencia))
		and	a.nr_seq_fatura_evento in (	select	d.nr_sequencia
							from	pls_fatura_evento	d,
								pls_fatura		c,
								pls_lote_faturamento	b
							where	b.nr_sequencia		= c.nr_seq_lote
							and	c.nr_sequencia		= d.nr_seq_fatura
							and	b.nr_seq_lote_disc	= nr_seq_lote_disc_p
							and	b.nr_sequencia		= nr_seq_lote_faturamento_w);

		CALL pls_faturamento_pck.limpar_faturas_vazias_lote(nr_seq_lote_faturamento_w, cd_estabelecimento_p, nm_usuario_p);
		
		CALL pls_faturamento_pck.atualizar_vl_lote_fatura(nr_seq_lote_faturamento_w, nm_usuario_p, 'N', 'N', 'S');
	end if;	
end if;

if (coalesce(ie_commit_p, 'N') = 'S') then
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.gerar_lote_refaturamento_disc (nr_seq_lote_disc_p pls_lote_discussao.nr_sequencia%type, dt_vencimento_p timestamp, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
