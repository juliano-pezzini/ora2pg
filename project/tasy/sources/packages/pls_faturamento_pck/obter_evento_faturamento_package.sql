-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.obter_evento_faturamento ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
_ora2pg_r RECORD;
-- SQL dinamico
ds_sql_fat_w			varchar(10000);
ds_filtro_evento_w		varchar(10000);
ds_order_by_w			varchar(10000) := ' order by a.nr_seq_conta ';
cursor_sql_w			sql_pck.t_cursor;
valor_bind_w			sql_pck.t_dado_bind;

-- Variaveis proc
tb_nr_seq_proc_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_mat_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_exec_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_pgto_w	pls_util_cta_pck.t_number_table;
tb_cd_pessoa_fis_prest_exec_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_procedimento_w		pls_util_cta_pck.t_number_table;
tb_ie_origem_proced_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_regra_inter_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_guia_w		pls_util_cta_pck.t_varchar2_table_5;
tb_cd_guia_ok_w			pls_util_cta_pck.t_varchar2_table_20;
tb_dt_alta_w			pls_util_cta_pck.t_date_table;
tb_nr_seq_conta_proc_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_mat_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_proc_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_mat_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_proc_fat_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_mat_fat_w		pls_util_cta_pck.t_number_table;
tb_dt_procedimento_ref_w	pls_util_cta_pck.t_date_table;
tb_dt_material_ref_w		pls_util_cta_pck.t_date_table;
tb_qt_dias_envio_taxa_w		pls_util_cta_pck.t_number_table;
tb_cd_usuario_plano_w		pls_util_cta_pck.t_varchar2_table_50;
tb_nr_seq_pagador_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_contrato_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_segurado_w		pls_util_cta_pck.t_varchar2_table_5;
tb_nr_seq_intercambio_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_ops_congenere_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_congenere_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_congenere_prot_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_cd_guia_referencia_w		pls_util_cta_pck.t_varchar2_table_20;
tb_ie_tipo_protocolo_w		pls_util_cta_pck.t_varchar2_table_5;

nr_seq_prestador_regra_w	bigint;
nr_seq_regra_prof_w		bigint;
cd_prestador_rec_w		pls_prestador.cd_prestador%type;
nr_seq_tipo_prestador_rec_w	bigint;
ie_tipo_pessoa_rec_w		varchar(1);
ie_glosar_cart_w		varchar(1) := 'S';
current_setting('pls_faturamento_pck.qt_dia_proced_receb_w')::integer		bigint;
current_setting('pls_faturamento_pck.ie_tipo_guia_w')::pls_conta.ie_tipo_guia%type			pls_conta.ie_tipo_guia%type;
current_setting('pls_faturamento_pck.dt_alta_w')::pls_conta.dt_alta%type			pls_conta.dt_alta%type;
dt_item_w			pls_conta_proc.dt_procedimento_referencia%type;
vl_item_w			w_pls_lote_fat_proc.vl_item%type;
ie_pagador_cta_w		varchar(5);
current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type			pls_conta.nr_sequencia%type;
nr_seq_evento_w			pls_evento_faturamento.nr_sequencia%type;
ie_prestador_rec_w		varchar(5);
sg_estado_w			pessoa_juridica.sg_estado%type;
qt_lote_fat_excecao_w		integer;
ie_faturar_evento_w		varchar(5);

-- Vetor
tb_nr_seq_item_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_evento_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_regra_fat_w		pls_util_cta_pck.t_number_table;
tb_nr_agrupamento_w		pls_util_cta_pck.t_number_table;
tb_vl_item_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_item_fat_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_pos_item_w	pls_util_cta_pck.t_number_table;
nr_w				integer := 0;

tb_sg_estado_cong_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_tipo_congenere_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_nacional_cong_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_fatura_congenere_coop_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_camara_cong_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_pagador_cong_w	pls_util_cta_pck.t_number_table;

c01 CURSOR(	ie_evento_restritivo_pc		pls_parametro_faturamento.ie_evento_restritivo%type,
		nr_seq_regra_fat_pc		pls_regra_faturamento.nr_sequencia%type) FOR
	SELECT	row_number() OVER () AS rownum,				nr_sequencia,			nr_seq_evento,			nr_seq_regra_fat,		ie_tipo_guia,			
		ie_tipo_guia_princ,		nr_seq_tipo_atendimento,	nr_seq_tipo_conta,		ie_origem_conta,		ie_tipo_segurado,
		ie_internado,			ie_tipo_intercambio,		ie_tipo_conta,			ie_pcmso,			nr_seq_plano,
		nr_seq_classificacao_sca,	nr_seq_grupo_produto,		ie_tipo_despesa_proc,		cd_procedimento,		cd_area_procedimento,
		cd_especialidade,		cd_grupo_proc,			ie_preco,			ie_tipo_despesa_mat,		nr_seq_material,
		nr_seq_grupo_rec,		dt_inicio_vigencia,		dt_fim_vigencia,		cd_prestador,			nr_seq_tipo_prestador,
		ie_tipo_pessoa_prest,		ie_tipo_relacao,		nr_seq_classif_prest,		ie_ato_cooperado,		cd_prestador_rec,
		nr_seq_tipo_prest_rec,		ie_tipo_pessoa_prest_rec,	ie_tipo_pessoa_prest_pag,	ie_ato_cooperado_pag,		ie_apresentacao_prot,
		ie_tipo_pessoa_prest_atend,	ie_tipo_pessoa_prest_ptu,	ie_tipo_pessoa_prest_solic,	nr_seq_grupo_servico,		ie_origem_analise_pos,
		nr_seq_regra_atend_cart,	nr_seq_estrut_mat,		nr_agrupamento,			nr_seq_evento_fat_regra_itens,	nr_seq_regra_evento
	from	(
		SELECT	c.nr_sequencia,							b.nr_sequencia nr_seq_evento,					c.nr_seq_regra nr_seq_regra_fat,
			a.ie_tipo_guia,							a.ie_tipo_guia_princ,						a.nr_seq_tipo_atendimento,
			a.nr_seq_tipo_conta,						a.ie_origem_conta,						a.ie_tipo_segurado,
			coalesce(a.ie_internado,'A') ie_internado,				coalesce(a.ie_tipo_intercambio,'A') ie_tipo_intercambio,		coalesce(a.ie_tipo_conta,'A') ie_tipo_conta,
			coalesce(a.ie_pcmso,'A') ie_pcmso,					a.nr_seq_plano,							a.nr_seq_classificacao_sca,
			a.nr_seq_grupo_produto,						a.ie_tipo_despesa_proc,						a.cd_procedimento,
			a.cd_area_procedimento,						a.cd_especialidade,						a.cd_grupo_proc,
			coalesce(a.ie_preco,'A') ie_preco,					a.ie_tipo_despesa_mat,						a.nr_seq_material,
			a.nr_seq_grupo_rec,						a.dt_inicio_vigencia,						coalesce(a.dt_fim_vigencia,to_date('31/12/3000')) dt_fim_vigencia,
			a.cd_prestador,							a.nr_seq_tipo_prestador,					coalesce(a.ie_tipo_pessoa_prest,'A') ie_tipo_pessoa_prest,
			a.ie_tipo_relacao,						a.nr_seq_classif_prest,						a.ie_ato_cooperado,
			a.cd_prestador_rec,						a.nr_seq_tipo_prest_rec,					coalesce(a.ie_tipo_pessoa_prest_rec,'A') ie_tipo_pessoa_prest_rec,
			coalesce(a.ie_tipo_pessoa_prest_pag,'A') ie_tipo_pessoa_prest_pag,	a.ie_ato_cooperado_pag,						coalesce(a.ie_apresentacao_prot,'T') ie_apresentacao_prot,		
			a.ie_tipo_pessoa_prest_atend,					a.ie_tipo_pessoa_prest_ptu,					a.ie_tipo_pessoa_prest_solic,
			a.nr_seq_grupo_servico,						a.ie_origem_analise_pos,					a.nr_seq_regra_atend_cart,
			a.nr_seq_estrut_mat,						c.nr_agrupamento,						a.nr_sequencia nr_seq_evento_fat_regra_itens,
			(select	coalesce(max(x.nr_seq_regra),0)
			from	pls_regra_fat_evento	x
			where	x.nr_seq_evento = b.nr_sequencia
			and 	x.nr_seq_regra	= nr_seq_regra_fat_pc) nr_seq_regra_evento
		from	pls_regra_fat_evento		c,
			pls_evento_faturamento		b,
			pls_evento_fat_regra_itens	a
		where	a.nr_seq_evento			= b.nr_sequencia
		and	b.nr_sequencia 			= c.nr_seq_evento
		and	b.ie_situacao			= 'A'
		and	((ie_evento_restritivo_pc	= 'N') or (c.nr_seq_regra = nr_seq_regra_fat_pc))
		-- Faz o mesma ordencao do faturamento antigo
		order by
			coalesce(a.nr_seq_plano,0),			coalesce(a.ie_tipo_intercambio,' '),		coalesce(a.ie_tipo_segurado,' '),		
			coalesce(a.ie_preco,' '),			coalesce(a.nr_seq_grupo_produto,0),		coalesce(a.nr_seq_classificacao_sca,0),	
			coalesce(a.ie_pcmso,' '),			coalesce(a.cd_procedimento,0),		coalesce(a.cd_grupo_proc,0),
			coalesce(a.cd_especialidade,0),		coalesce(a.cd_area_procedimento,0),		coalesce(a.nr_seq_grupo_servico,0),
			coalesce(a.nr_seq_grupo_rec,0),		coalesce(a.ie_tipo_despesa_proc,' '),	coalesce(a.ie_tipo_guia_princ,' '),
			coalesce(a.ie_tipo_guia,' '),		coalesce(a.nr_seq_material,0),		coalesce(a.nr_seq_estrut_mat,0),
			coalesce(a.nr_seq_grupo_rec,0),		coalesce(a.ie_tipo_despesa_mat,' '),		coalesce(a.cd_prestador,' '),
			coalesce(a.nr_seq_tipo_prestador,0),		coalesce(a.cd_prestador_rec,' '),		coalesce(a.nr_seq_tipo_prest_rec,0),
			coalesce(a.nr_seq_tipo_atendimento,0),	coalesce(a.nr_seq_tipo_conta,0),		coalesce(a.ie_origem_conta,' '),
			coalesce(a.ie_internado,' '),		coalesce(a.ie_tipo_conta,' '),		coalesce(a.ie_tipo_pessoa_prest,' '),
			coalesce(a.ie_tipo_relacao,' '),		coalesce(a.nr_seq_classif_prest,0),		coalesce(a.ie_tipo_pessoa_prest_rec,' '),
			coalesce(a.ie_apresentacao_prot,' '),	coalesce(a.ie_ato_cooperado, ' '),		coalesce(a.nr_seq_regra_atend_cart, 0),
			coalesce(a.ie_tipo_pessoa_prest_ptu, ' '),	coalesce(a.ie_tipo_pessoa_prest_pag, ' '),	coalesce(a.ie_tipo_pessoa_prest_atend, ' '),
			coalesce(a.ie_tipo_pessoa_prest_solic, ' '),	coalesce(ie_ato_cooperado_pag, ' '),		coalesce(a.ie_tipo_protocolo, ' '),
			coalesce(a.ie_origem_protocolo, ' '))
	-- Por fora inverte a ordenacao, pois o faturamento antigo pega o ultimo retorno, e o faturamento novo pega o primeiro retorno
	order by 1 desc;
BEGIN

CALL CALL CALL CALL CALL CALL pls_faturamento_pck.carrega_parametros( nr_seq_lote_p, cd_estabelecimento_p);
SELECT * FROM pls_faturamento_pck.carregar_dados_congenere( cd_estabelecimento_p, tb_sg_estado_cong_w, tb_ie_tipo_congenere_w, tb_ie_nacional_cong_w, tb_ie_fatura_congenere_coop_w, tb_nr_seq_camara_cong_w, tb_nr_seq_pagador_cong_w) INTO STRICT _ora2pg_r;
 tb_sg_estado_cong_w := _ora2pg_r.tb_sg_estado_cong_p; tb_ie_tipo_congenere_w := _ora2pg_r.tb_ie_tipo_congenere_p; tb_ie_nacional_cong_w := _ora2pg_r.tb_ie_nacional_cong_p; tb_ie_fatura_congenere_coop_w := _ora2pg_r.tb_ie_fatura_congenere_coop_p; tb_nr_seq_camara_cong_w := _ora2pg_r.tb_nr_seq_camara_cong_p; tb_nr_seq_pagador_cong_w := _ora2pg_r.tb_nr_seq_pagador_cong_p;

select	coalesce(max(p.sg_estado), 'X')
into STRICT	sg_estado_w
from	pls_outorgante	o,
	pessoa_juridica p
where	o.cd_cgc_outorgante	= p.cd_cgc
and	o.cd_estabelecimento	= cd_estabelecimento_p;

select	count(1)
into STRICT	qt_lote_fat_excecao_w
from	pls_lote_fat_excecao a
where	a.nr_seq_lote		= nr_seq_lote_p;

-- Varre todas as regras e eventos
for r_c01_w in c01( current_setting('pls_faturamento_pck.ie_evento_restritivo_w')::pls_parametro_faturamento.ie_evento_restritivo%type, current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type ) loop
	ie_pagador_cta_w	:= 'N';
	ie_glosar_cart_w	:= 'S';
	PERFORM set_config('pls_faturamento_pck.nr_seq_conta_w', 0, false);
	
	-- Verifica se a regra esta com os campos especificos de materiais estao preenchidos, afim de ignora-los antes de percorrer os procedimentos
	if (coalesce(r_c01_w.nr_seq_material::text, '') = '') and (coalesce(r_c01_w.nr_seq_estrut_mat::text, '') = '') and (coalesce(r_c01_w.ie_tipo_despesa_mat::text, '') = '') then
		
		ds_sql_fat_w :=	'select	a.nr_sequencia, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_prestador_exec, '										|| pls_util_pck.enter_w ||
				'	a.nr_seq_prestador_pgto, '										|| pls_util_pck.enter_w ||
				'	(select	h.cd_pessoa_fisica ' 										|| pls_util_pck.enter_w ||
				'	from	pls_prestador h  '										|| pls_util_pck.enter_w ||
				'	where	h.nr_sequencia = a.nr_seq_prestador_exec) cd_pessoa_fisica_prest_exec, '			|| pls_util_pck.enter_w ||
				'	a.cd_procedimento, '											|| pls_util_pck.enter_w ||
				'	a.ie_origem_proced, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_conta, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_segurado, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_regra_inter, '											|| pls_util_pck.enter_w ||
				'	a.ie_tipo_guia, '											|| pls_util_pck.enter_w ||
				'	a.cd_guia_ok, '												|| pls_util_pck.enter_w ||
				'	a.dt_alta, '												|| pls_util_pck.enter_w ||
				'	a.nr_seq_conta_proc, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_pos_proc, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_pos_proc_fat, '										|| pls_util_pck.enter_w ||
				'	a.dt_procedimento_ref, '										|| pls_util_pck.enter_w ||
				'	(select	nvl(max(t.qt_dias_envio_taxa),0) '								|| pls_util_pck.enter_w ||
				'	from	pls_regra_intercambio t '									|| pls_util_pck.enter_w ||
				'	where	t.nr_sequencia = a.nr_seq_regra_inter) qt_dias_envio_taxa, '					|| pls_util_pck.enter_w ||
				'	a.cd_usuario_plano, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_pagador, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_contrato, '											|| pls_util_pck.enter_w ||
				'	a.ie_tipo_segurado, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_intercambio, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_ops_congenere, '										|| pls_util_pck.enter_w ||
				'	a.nr_seq_congenere, '											|| pls_util_pck.enter_w ||
				'	a.nr_seq_congenere_prot, '										|| pls_util_pck.enter_w ||
				'	a.nr_seq_protocolo, '											|| pls_util_pck.enter_w ||
				'	a.cd_guia_referencia, '											|| pls_util_pck.enter_w ||
				'	a.ie_tipo_protocolo '											|| pls_util_pck.enter_w ||
				'from	w_pls_lote_fat_proc		a '									|| pls_util_pck.enter_w ||
				'where	a.nr_seq_lote_fat 		= :nr_seq_lote_p '							|| pls_util_pck.enter_w ||
				'and	a.nr_seq_evento_fat		is null '								|| pls_util_pck.enter_w ||
				'and	a.ie_fat_data_alt_pre		= ''S'' '								|| pls_util_pck.enter_w ||
				'and	a.dt_procedimento_ref between :dt_inicio_vigencia_p and :dt_fim_vigencia_p '				|| pls_util_pck.enter_w;
		
		valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_p', nr_seq_lote_p, valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_inicio_vigencia_p', r_c01_w.dt_inicio_vigencia, valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_fim_vigencia_p', r_c01_w.dt_fim_vigencia, valor_bind_w);
		
		if (r_c01_w.ie_tipo_guia IS NOT NULL AND r_c01_w.ie_tipo_guia::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_guia = :ie_tipo_guia ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_guia', r_c01_w.ie_tipo_guia, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_guia_princ IS NOT NULL AND r_c01_w.ie_tipo_guia_princ::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_guia_princ = :ie_tipo_guia_princ ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_guia_princ', r_c01_w.ie_tipo_guia_princ, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_tipo_atendimento IS NOT NULL AND r_c01_w.nr_seq_tipo_atendimento::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_tipo_atendimento = :nr_seq_tipo_atendimento ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_tipo_atendimento', r_c01_w.nr_seq_tipo_atendimento, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_tipo_conta IS NOT NULL AND r_c01_w.nr_seq_tipo_conta::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_tipo_conta = :nr_seq_tipo_conta ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_tipo_conta', r_c01_w.nr_seq_tipo_conta, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_origem_conta IS NOT NULL AND r_c01_w.ie_origem_conta::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_origem_conta = :ie_origem_conta ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_origem_conta', r_c01_w.ie_origem_conta, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_segurado IS NOT NULL AND r_c01_w.ie_tipo_segurado::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_segurado = :ie_tipo_segurado ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_segurado', r_c01_w.ie_tipo_segurado, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_internado != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_internado = :ie_internado ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_internado', r_c01_w.ie_internado, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_intercambio != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_intercambio = :ie_tipo_intercambio ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_intercambio', r_c01_w.ie_tipo_intercambio, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_conta != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_conta = :ie_tipo_conta ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_conta', r_c01_w.ie_tipo_conta, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_pcmso != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_pcmso = :ie_pcmso ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_pcmso', r_c01_w.ie_pcmso, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_plano IS NOT NULL AND r_c01_w.nr_seq_plano::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_plano = :nr_seq_plano ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_plano', r_c01_w.nr_seq_plano, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_classificacao_sca IS NOT NULL AND r_c01_w.nr_seq_classificacao_sca::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_classificacao_sca = :nr_seq_classificacao_sca ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_classificacao_sca', r_c01_w.nr_seq_classificacao_sca, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_grupo_produto IS NOT NULL AND r_c01_w.nr_seq_grupo_produto::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and ((a.nr_seq_plano is not null) and (pls_se_grupo_preco_produto(:nr_seq_grupo_produto, a.nr_seq_plano) = ''S'')) ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_produto', r_c01_w.nr_seq_grupo_produto, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_despesa_proc IS NOT NULL AND r_c01_w.ie_tipo_despesa_proc::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_despesa_proc = :ie_tipo_despesa_proc ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_despesa_proc', r_c01_w.ie_tipo_despesa_proc, valor_bind_w);
		end if;
		
		if (r_c01_w.cd_procedimento IS NOT NULL AND r_c01_w.cd_procedimento::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.cd_procedimento = :cd_procedimento ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':cd_procedimento', r_c01_w.cd_procedimento, valor_bind_w);
		end if;
		
		if (r_c01_w.cd_area_procedimento IS NOT NULL AND r_c01_w.cd_area_procedimento::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.cd_area_procedimento = :cd_area_procedimento ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':cd_area_procedimento', r_c01_w.cd_area_procedimento, valor_bind_w);
		end if;
		
		if (r_c01_w.cd_especialidade IS NOT NULL AND r_c01_w.cd_especialidade::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.cd_especialidade = :cd_especialidade ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':cd_especialidade', r_c01_w.cd_especialidade, valor_bind_w);
		end if;
		
		if (r_c01_w.cd_grupo_proc IS NOT NULL AND r_c01_w.cd_grupo_proc::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.cd_grupo_proc = :cd_grupo_proc ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':cd_grupo_proc', r_c01_w.cd_grupo_proc, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_preco != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_preco = :ie_preco ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_preco', r_c01_w.ie_preco, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_grupo_rec IS NOT NULL AND r_c01_w.nr_seq_grupo_rec::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_grupo_rec = :nr_seq_grupo_rec ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_rec', r_c01_w.nr_seq_grupo_rec, valor_bind_w);
		end if;
		
		if (r_c01_w.cd_prestador IS NOT NULL AND r_c01_w.cd_prestador::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.cd_prestador = :cd_prestador ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':cd_prestador', r_c01_w.cd_prestador, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_tipo_prestador IS NOT NULL AND r_c01_w.nr_seq_tipo_prestador::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_tipo_prestador = :nr_seq_tipo_prestador ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_tipo_prestador', r_c01_w.nr_seq_tipo_prestador, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest = :ie_tipo_pessoa_prest ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest', r_c01_w.ie_tipo_pessoa_prest, valor_bind_w);
		end if;
		
 		if (r_c01_w.ie_tipo_relacao IS NOT NULL AND r_c01_w.ie_tipo_relacao::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_relacao = :ie_tipo_relacao ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_relacao', r_c01_w.ie_tipo_relacao, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_classif_prest IS NOT NULL AND r_c01_w.nr_seq_classif_prest::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_classif_prest = :nr_seq_classif_prest ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_classif_prest', r_c01_w.nr_seq_classif_prest, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_ato_cooperado IS NOT NULL AND r_c01_w.ie_ato_cooperado::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_ato_cooperado = :ie_ato_cooperado ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_ato_cooperado', r_c01_w.ie_ato_cooperado, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_pag != 'A') then
			-- Nem sempre tem prestador de pagamento, por isso o uso de NVL
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and nvl(a.ie_tipo_pessoa_prest_pag,:ie_tipo_pessoa_prest_pag) = :ie_tipo_pessoa_prest_pag ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_pag', r_c01_w.ie_tipo_pessoa_prest_pag, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_ato_cooperado_pag IS NOT NULL AND r_c01_w.ie_ato_cooperado_pag::text <> '') then
			-- Nem sempre tem prestador de pagamento, por isso o uso de NVL
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and nvl(a.ie_ato_cooperado_pag,:ie_ato_cooperado_pag) = :ie_ato_cooperado_pag ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_ato_cooperado_pag', r_c01_w.ie_ato_cooperado_pag, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_apresentacao_prot != 'T') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_apresentacao_prot = :ie_apresentacao_prot ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_apresentacao_prot', r_c01_w.ie_apresentacao_prot, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_atend != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest_atend = :ie_tipo_pessoa_prest_atend ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_atend', r_c01_w.ie_tipo_pessoa_prest_atend, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_ptu != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest_ptu = :ie_tipo_pessoa_prest_ptu ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_ptu', r_c01_w.ie_tipo_pessoa_prest_ptu, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_solic != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest_solic = :ie_tipo_pessoa_prest_solic ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_solic', r_c01_w.ie_tipo_pessoa_prest_solic, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_origem_analise_pos IS NOT NULL AND r_c01_w.ie_origem_analise_pos::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_origem_analise_pos = :ie_origem_analise_pos ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_origem_analise_pos', r_c01_w.ie_origem_analise_pos, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_grupo_servico IS NOT NULL AND r_c01_w.nr_seq_grupo_servico::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and ((select count(1) from table(pls_grupos_pck.obter_procs_grupo_servico(:nr_seq_grupo_servico, a.ie_origem_proced, a.cd_procedimento))) > 0) ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_servico', r_c01_w.nr_seq_grupo_servico, valor_bind_w);
		end if;
		
		-- SEMPRE DEIXAR POR ULTIMO
		ds_sql_fat_w := ds_sql_fat_w || ds_filtro_evento_w || ds_order_by_w;
		
		valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_fat_w, valor_bind_w);

		loop fetch cursor_sql_w bulk collect into 	tb_nr_seq_proc_w,		tb_nr_seq_prestador_exec_w,	tb_nr_seq_prestador_pgto_w,
								tb_cd_pessoa_fis_prest_exec_w,	tb_cd_procedimento_w,		tb_ie_origem_proced_w,
								tb_nr_seq_conta_w,		tb_nr_seq_segurado_w,		tb_nr_seq_regra_inter_w,
								tb_ie_tipo_guia_w,		tb_cd_guia_ok_w,		tb_dt_alta_w,	
								tb_nr_seq_conta_proc_w,		tb_nr_seq_pos_proc_w,		tb_nr_seq_pos_proc_fat_w,
								tb_dt_procedimento_ref_w,	tb_qt_dias_envio_taxa_w,	tb_cd_usuario_plano_w,
								tb_nr_seq_pagador_w,		tb_nr_seq_contrato_w,		tb_ie_tipo_segurado_w,
								tb_nr_seq_intercambio_w,	tb_nr_seq_ops_congenere_w,	tb_nr_seq_congenere_w,
								tb_nr_seq_congenere_prot_w,	tb_nr_seq_protocolo_w, 		tb_cd_guia_referencia_w,
								tb_ie_tipo_protocolo_w
			limit pls_util_pck.qt_registro_transacao_w;
			exit when tb_nr_seq_proc_w.count = 0;
			
			for i in tb_nr_seq_proc_w.first..tb_nr_seq_proc_w.last loop
				ie_prestador_rec_w := 'N';
				cd_prestador_rec_w := 0;
				nr_seq_tipo_prestador_rec_w := 0;
				ie_tipo_pessoa_rec_w := 'J';
				if (r_c01_w.cd_prestador_rec IS NOT NULL AND r_c01_w.cd_prestador_rec::text <> '') or (r_c01_w.nr_seq_tipo_prest_rec IS NOT NULL AND r_c01_w.nr_seq_tipo_prest_rec::text <> '') or (r_c01_w.ie_tipo_pessoa_prest_rec != 'A') then
					ie_prestador_rec_w := 'S';
				end if;

				-- Verificar se deve filtrar por prestador de recebimento
				if (ie_prestador_rec_w = 'S') then
					pls_obter_prest_pgto_prof(	tb_nr_seq_prestador_exec_w(i),	tb_cd_pessoa_fis_prest_exec_w(i),	tb_cd_procedimento_w(i),
									tb_ie_origem_proced_w(i), 	nm_usuario_p, 				null,
									null, 				nr_seq_prestador_regra_w,		nr_seq_regra_prof_w);
									
					if (coalesce(nr_seq_prestador_regra_w::text, '') = '') then
						nr_seq_prestador_regra_w := coalesce(tb_nr_seq_prestador_pgto_w(i), tb_nr_seq_prestador_exec_w(i));
					end if;
					
					select	coalesce(max(cd_prestador), 0),
						coalesce(max(nr_seq_tipo_prestador), 0),
						CASE WHEN coalesce(max(cd_pessoa_fisica)::text, '') = '' THEN  'J'  ELSE 'F' END
					into STRICT	cd_prestador_rec_w,
						nr_seq_tipo_prestador_rec_w,
						ie_tipo_pessoa_rec_w
					from	pls_prestador
					where	nr_sequencia = nr_seq_prestador_regra_w;
				end if;

				if	((cd_prestador_rec_w 		= r_c01_w.cd_prestador_rec) 		or (coalesce(r_c01_w.cd_prestador_rec::text, '') = '')) and
					((nr_seq_tipo_prestador_rec_w  	= r_c01_w.nr_seq_tipo_prest_rec)	or (coalesce(r_c01_w.nr_seq_tipo_prest_rec::text, '') = '')) and
					((ie_tipo_pessoa_rec_w 		= r_c01_w.ie_tipo_pessoa_prest_rec)	or (r_c01_w.ie_tipo_pessoa_prest_rec = 'A')) then
					
					-- Regra carteira atendimento
					if (r_c01_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c01_w.nr_seq_regra_atend_cart::text <> '') then
						if (current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type	!= tb_nr_seq_conta_w(i)) then
							ie_glosar_cart_w := pls_faturamento_pck.consistir_regra_atend_cart( tb_nr_seq_segurado_w(i), r_c01_w.nr_seq_regra_atend_cart, tb_cd_usuario_plano_w(i), ie_glosar_cart_w);
						end if;
					else
						ie_glosar_cart_w := 'S';
					end if;
					
					if (ie_glosar_cart_w = 'S') then
						-- Se nao o mesmo segurado, ou conta ou o evento, puxar nova regra pagador
						if (current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type	!= tb_nr_seq_conta_w(i)) then
							ie_pagador_cta_w := 	pls_faturamento_pck.obter_se_pagador_lote_fat( 	nr_seq_lote_p, tb_nr_seq_segurado_w(i), tb_nr_seq_conta_w(i), r_c01_w.nr_seq_evento,
														current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type, current_setting('pls_faturamento_pck.ie_evento_restritivo_w')::pls_parametro_faturamento.ie_evento_restritivo%type, sg_estado_w, qt_lote_fat_excecao_w,
														tb_nr_seq_pagador_w(i), tb_nr_seq_contrato_w(i), tb_ie_tipo_segurado_w(i),
														tb_nr_seq_intercambio_w(i), tb_nr_seq_ops_congenere_w(i), tb_nr_seq_congenere_w(i),
														tb_nr_seq_congenere_prot_w(i), tb_nr_seq_protocolo_w(i), tb_cd_guia_referencia_w(i),
														tb_sg_estado_cong_w, tb_ie_tipo_congenere_w, tb_ie_nacional_cong_w, 
														tb_ie_fatura_congenere_coop_w, tb_nr_seq_camara_cong_w, tb_nr_seq_pagador_cong_w,
														tb_ie_tipo_protocolo_w(i));
						end if;
						
						ie_faturar_evento_w := 'S';
						-- Verificar se o evento escolhido pertence a regra
						if (current_setting('pls_faturamento_pck.ie_evento_restritivo_w')::pls_parametro_faturamento.ie_evento_restritivo%type = 'N') and (r_c01_w.nr_seq_regra_evento != current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type) then
							ie_faturar_evento_w := 'N';
						end if;
						
						-- Verificar se pagador incidente
						if (ie_pagador_cta_w = 'S') or (ie_faturar_evento_w = 'N') then
							vl_item_w := null;
							-- So atualiza dados se for faturar
							if (ie_faturar_evento_w = 'S') then
								-- Utiliza os valores vindos do cursor, porem, prioriza a data da alta da Guia 5, ou seja, da Guia de Resumo de Internacao
								-- E como consulta (3) nao tem guia de referencia, tambem nao verifica
								PERFORM set_config('pls_faturamento_pck.dt_alta_w', null, false);
								PERFORM set_config('pls_faturamento_pck.ie_tipo_guia_w', null, false);
								if (current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type != tb_nr_seq_conta_w(i)) then
									PERFORM set_config('pls_faturamento_pck.dt_alta_w', tb_dt_alta_w(i), false);
									PERFORM set_config('pls_faturamento_pck.ie_tipo_guia_w', tb_ie_tipo_guia_w(i), false);
									if (tb_ie_tipo_guia_w(i) not in ('5','3')) then
										select	max(dt_alta),
											max(ie_tipo_guia)
										into STRICT	current_setting('pls_faturamento_pck.dt_alta_w')::pls_conta.dt_alta%type,
											current_setting('pls_faturamento_pck.ie_tipo_guia_w')::pls_conta.ie_tipo_guia%type
										from	pls_conta_pos_cab_v
										where	cd_guia_ok		= tb_cd_guia_ok_w(i)
										and	nr_seq_segurado		= tb_nr_seq_segurado_w(i)
										and	ie_tipo_guia		= '5';
									end if;
								end if;
								
								if (current_setting('pls_faturamento_pck.ie_tipo_guia_w')::pls_conta.ie_tipo_guia%type = '5') then
									PERFORM set_config('pls_faturamento_pck.qt_dia_proced_receb_w', (trunc(clock_timestamp()) - trunc(coalesce(current_setting('pls_faturamento_pck.dt_alta_w')::pls_conta.dt_alta%type, tb_dt_procedimento_ref_w(i)))), false);
								else
									PERFORM set_config('pls_faturamento_pck.qt_dia_proced_receb_w', (trunc(clock_timestamp()) - trunc(tb_dt_procedimento_ref_w(i))), false);
								end if;
								
								-- Define nulo para o vl_item_w, em caso do qt_dia_proced_receb_w set maior que o r_c02_w.qt_dias_envio_taxa o mesmo recebera 0 (zero) e o decode ira verificar se zera ou nao o w_pls_lote_fat_proc.vl_item
								if (current_setting('pls_faturamento_pck.qt_dia_proced_receb_w')::integer > tb_qt_dias_envio_taxa_w(i)) then
									vl_item_w := 0;
								end if;
							end if;
							
							-- Atualizando o item com o evento da regra
							nr_w				:= nr_w + 1;	
							tb_nr_seq_item_w(nr_w)		:= tb_nr_seq_proc_w(i);
							
							-- Se for nao for faturar gravar "-1" para sair da leitura das regras de eventos
							tb_nr_seq_evento_w(nr_w)	:= r_c01_w.nr_seq_evento;
							if (ie_faturar_evento_w = 'N') then
								tb_nr_seq_evento_w(nr_w) := -1;
							end if;
							
							tb_nr_seq_regra_fat_w(nr_w) 	:= r_c01_w.nr_seq_regra_fat;
							tb_nr_agrupamento_w(nr_w)	:= r_c01_w.nr_agrupamento;
							tb_vl_item_w(nr_w)		:= vl_item_w;
							tb_nr_seq_pos_item_fat_w(nr_w)	:= tb_nr_seq_pos_proc_fat_w(i);
							tb_nr_seq_conta_pos_item_w(nr_w):= tb_nr_seq_pos_proc_w(i);
						end if;
					end if;
				end if;

				PERFORM set_config('pls_faturamento_pck.nr_seq_conta_w', tb_nr_seq_conta_w(i), false);
				nr_seq_evento_w		:= r_c01_w.nr_seq_evento;
			end loop;			
		end loop;
		close cursor_sql_w;

		if (cursor_sql_w%isopen) then
			close cursor_sql_w;
		end if;
		
		-- Carregar os eventos nos procedimentos do faturamento
		if (tb_nr_seq_item_w.count > 0) then
			CALL pls_faturamento_pck.carregar_evento_proc_fat(	tb_nr_seq_item_w, tb_nr_seq_evento_w, tb_nr_seq_regra_fat_w, tb_nr_agrupamento_w, tb_vl_item_w, tb_nr_seq_pos_item_fat_w,
							tb_nr_seq_conta_pos_item_w, nm_usuario_p);
			
			-- Limpar variaveis
			tb_nr_seq_item_w.delete;		tb_nr_seq_evento_w.delete;	tb_nr_seq_regra_fat_w.delete;
			tb_nr_agrupamento_w.delete;		tb_vl_item_w.delete; 		tb_nr_seq_pos_item_fat_w.delete;
			tb_nr_seq_conta_pos_item_w.delete;	nr_w := 0;
		end if;
		
		ds_filtro_evento_w := null;		valor_bind_w.delete;			ds_sql_fat_w := null;
		tb_nr_seq_proc_w.delete;		tb_nr_seq_prestador_exec_w.delete;	tb_nr_seq_prestador_pgto_w.delete;
		tb_cd_pessoa_fis_prest_exec_w.delete;	tb_cd_procedimento_w.delete;		tb_ie_origem_proced_w.delete;
		tb_nr_seq_conta_w.delete;		tb_nr_seq_segurado_w.delete;		tb_nr_seq_regra_inter_w.delete;
		tb_ie_tipo_guia_w.delete;		tb_cd_guia_ok_w.delete;			tb_dt_alta_w.delete;	
		tb_nr_seq_conta_proc_w.delete;		tb_nr_seq_pos_proc_w.delete;		tb_nr_seq_pos_proc_fat_w.delete;
		tb_dt_procedimento_ref_w.delete;	tb_qt_dias_envio_taxa_w.delete;		tb_cd_usuario_plano_w.delete;
		tb_nr_seq_pagador_w.delete;		tb_nr_seq_contrato_w.delete;		tb_ie_tipo_segurado_w.delete;
		tb_nr_seq_intercambio_w.delete;		tb_nr_seq_ops_congenere_w.delete;	tb_nr_seq_congenere_w.delete;
		tb_nr_seq_mat_w.delete;			tb_nr_seq_conta_mat_w.delete;		tb_nr_seq_pos_mat_w.delete;
		tb_nr_seq_pos_mat_fat_w.delete;		tb_dt_material_ref_w.delete;
	end if;
	
	-- Verifica se a regra esta com os campos especificos de procedimentos estao preenchidos, afim de ignora-los antes de percorrer os materiais
	if (coalesce(r_c01_w.nr_seq_grupo_servico::text, '') = '') and (coalesce(r_c01_w.cd_especialidade::text, '') = '') and (coalesce(r_c01_w.cd_area_procedimento::text, '') = '') and (coalesce(r_c01_w.cd_grupo_proc::text, '') = '') and (coalesce(r_c01_w.cd_procedimento::text, '') = '') and (coalesce(r_c01_w.ie_tipo_despesa_proc::text, '') = '') then
		
		ds_sql_fat_w :=	'select	a.nr_sequencia, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_conta, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_segurado, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_regra_inter, '								|| pls_util_pck.enter_w ||
				'	a.ie_tipo_guia, '								|| pls_util_pck.enter_w ||
				'	a.cd_guia_ok, '									|| pls_util_pck.enter_w ||
				'	a.dt_alta, '									|| pls_util_pck.enter_w ||
				'	a.nr_seq_conta_mat, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_pos_mat, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_pos_mat_fat, '								|| pls_util_pck.enter_w ||
				'	a.dt_material_ref, '								|| pls_util_pck.enter_w ||
				'	(select	nvl(max(t.qt_dias_envio_taxa),0) '					|| pls_util_pck.enter_w ||
				'	from	pls_regra_intercambio t '						|| pls_util_pck.enter_w ||
				'	where	t.nr_sequencia = a.nr_seq_regra_inter) qt_dias_envio_taxa, '		|| pls_util_pck.enter_w ||
				'	a.cd_usuario_plano, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_pagador, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_contrato, '								|| pls_util_pck.enter_w ||
				'	a.ie_tipo_segurado, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_intercambio, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_ops_congenere, '							|| pls_util_pck.enter_w ||
				'	a.nr_seq_congenere, '								|| pls_util_pck.enter_w ||
				'	a.nr_seq_congenere_prot, '							|| pls_util_pck.enter_w ||
				'	a.nr_seq_protocolo, '								|| pls_util_pck.enter_w ||
				'	a.cd_guia_referencia, '								|| pls_util_pck.enter_w ||
				'	a.ie_tipo_protocolo '								|| pls_util_pck.enter_w ||
				'from	w_pls_lote_fat_mat		a '						|| pls_util_pck.enter_w ||
				'where	a.nr_seq_lote_fat 		= :nr_seq_lote_p '				|| pls_util_pck.enter_w ||
				'and	a.nr_seq_evento_fat		is null '					|| pls_util_pck.enter_w ||
				'and	a.ie_fat_data_alt_pre		= ''S'' '					|| pls_util_pck.enter_w ||
				'and	a.dt_material_ref between :dt_inicio_vigencia_p and :dt_fim_vigencia_p '	|| pls_util_pck.enter_w;
				
		valor_bind_w := sql_pck.bind_variable(':nr_seq_lote_p', nr_seq_lote_p, valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_inicio_vigencia_p', r_c01_w.dt_inicio_vigencia, valor_bind_w);
		valor_bind_w := sql_pck.bind_variable(':dt_fim_vigencia_p', r_c01_w.dt_fim_vigencia, valor_bind_w);
		
		if (r_c01_w.ie_tipo_guia IS NOT NULL AND r_c01_w.ie_tipo_guia::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_guia = :ie_tipo_guia ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_guia', r_c01_w.ie_tipo_guia, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_guia_princ IS NOT NULL AND r_c01_w.ie_tipo_guia_princ::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_guia_princ = :ie_tipo_guia_princ ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_guia_princ', r_c01_w.ie_tipo_guia_princ, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_tipo_atendimento IS NOT NULL AND r_c01_w.nr_seq_tipo_atendimento::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_tipo_atendimento = :nr_seq_tipo_atendimento ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_tipo_atendimento', r_c01_w.nr_seq_tipo_atendimento, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_tipo_conta IS NOT NULL AND r_c01_w.nr_seq_tipo_conta::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_tipo_conta = :nr_seq_tipo_conta ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_tipo_conta', r_c01_w.nr_seq_tipo_conta, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_origem_conta IS NOT NULL AND r_c01_w.ie_origem_conta::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_origem_conta = :ie_origem_conta ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_origem_conta', r_c01_w.ie_origem_conta, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_segurado IS NOT NULL AND r_c01_w.ie_tipo_segurado::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_segurado = :ie_tipo_segurado ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_segurado', r_c01_w.ie_tipo_segurado, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_internado != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_internado = :ie_internado ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_internado', r_c01_w.ie_internado, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_intercambio != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_intercambio = :ie_tipo_intercambio ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_intercambio', r_c01_w.ie_tipo_intercambio, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_conta != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_conta = :ie_tipo_conta ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_conta', r_c01_w.ie_tipo_conta, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_pcmso != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_pcmso = :ie_pcmso ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_pcmso', r_c01_w.ie_pcmso, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_plano IS NOT NULL AND r_c01_w.nr_seq_plano::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_plano = :nr_seq_plano ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_plano', r_c01_w.nr_seq_plano, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_classificacao_sca IS NOT NULL AND r_c01_w.nr_seq_classificacao_sca::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_classificacao_sca = :nr_seq_classificacao_sca ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_classificacao_sca', r_c01_w.nr_seq_classificacao_sca, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_grupo_produto IS NOT NULL AND r_c01_w.nr_seq_grupo_produto::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and ((a.nr_seq_plano is not null) and (pls_se_grupo_preco_produto(:nr_seq_grupo_produto, a.nr_seq_plano) = ''S'')) ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_produto', r_c01_w.nr_seq_grupo_produto, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_despesa_mat IS NOT NULL AND r_c01_w.ie_tipo_despesa_mat::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_despesa = :ie_tipo_despesa ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_despesa', r_c01_w.ie_tipo_despesa_mat, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_material IS NOT NULL AND r_c01_w.nr_seq_material::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_material = :nr_seq_material ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_material', r_c01_w.nr_seq_material, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_preco != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_preco = :ie_preco ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_preco', r_c01_w.ie_preco, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_grupo_rec IS NOT NULL AND r_c01_w.nr_seq_grupo_rec::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_grupo_rec = :nr_seq_grupo_rec ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_grupo_rec', r_c01_w.nr_seq_grupo_rec, valor_bind_w);
		end if;
		
		if (r_c01_w.cd_prestador IS NOT NULL AND r_c01_w.cd_prestador::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.cd_prestador = :cd_prestador ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':cd_prestador', r_c01_w.cd_prestador, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_tipo_prestador IS NOT NULL AND r_c01_w.nr_seq_tipo_prestador::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_tipo_prestador = :nr_seq_tipo_prestador ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_tipo_prestador', r_c01_w.nr_seq_tipo_prestador, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest = :ie_tipo_pessoa_prest ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest', r_c01_w.ie_tipo_pessoa_prest, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_relacao IS NOT NULL AND r_c01_w.ie_tipo_relacao::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_relacao = :ie_tipo_relacao ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_relacao', r_c01_w.ie_tipo_relacao, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_classif_prest IS NOT NULL AND r_c01_w.nr_seq_classif_prest::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.nr_seq_classif_prest = :nr_seq_classif_prest ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_classif_prest', r_c01_w.nr_seq_classif_prest, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_ato_cooperado IS NOT NULL AND r_c01_w.ie_ato_cooperado::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_ato_cooperado = :ie_ato_cooperado ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_ato_cooperado', r_c01_w.ie_ato_cooperado, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_pag != 'A') then
			-- Nem sempre tem prestador de pagamento, por isso o uso de NVL
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and nvl(a.ie_tipo_pessoa_prest_pag,:ie_tipo_pessoa_prest_pag) = :ie_tipo_pessoa_prest_pag ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_pag', r_c01_w.ie_tipo_pessoa_prest_pag, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_ato_cooperado_pag IS NOT NULL AND r_c01_w.ie_ato_cooperado_pag::text <> '') then
			-- Nem sempre tem prestador de pagamento, por isso o uso de NVL
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and nvl(a.ie_ato_cooperado_pag,:ie_ato_cooperado_pag) = :ie_ato_cooperado_pag ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_ato_cooperado_pag', r_c01_w.ie_ato_cooperado_pag, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_apresentacao_prot != 'T') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_apresentacao_prot = :ie_apresentacao_prot ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_apresentacao_prot', r_c01_w.ie_apresentacao_prot, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_atend != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest_atend = :ie_tipo_pessoa_prest_atend ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_atend', r_c01_w.ie_tipo_pessoa_prest_atend, valor_bind_w);
		end if;		
		
		if (r_c01_w.ie_tipo_pessoa_prest_ptu != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest_ptu = :ie_tipo_pessoa_prest_ptu ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_ptu', r_c01_w.ie_tipo_pessoa_prest_ptu, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_tipo_pessoa_prest_solic != 'A') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_tipo_pessoa_prest_solic = :ie_tipo_pessoa_prest_solic ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_tipo_pessoa_prest_solic', r_c01_w.ie_tipo_pessoa_prest_solic, valor_bind_w);
		end if;
		
		if (r_c01_w.ie_origem_analise_pos IS NOT NULL AND r_c01_w.ie_origem_analise_pos::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and a.ie_origem_analise_pos = :ie_origem_analise_pos ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':ie_origem_analise_pos', r_c01_w.ie_origem_analise_pos, valor_bind_w);
		end if;
		
		if (r_c01_w.nr_seq_estrut_mat IS NOT NULL AND r_c01_w.nr_seq_estrut_mat::text <> '') then
			ds_filtro_evento_w	:= ds_filtro_evento_w || ' and (pls_obter_se_mat_estrutura(a.nr_seq_material, :nr_seq_estrut_mat) = ''S'') ' || pls_util_pck.enter_w;
			valor_bind_w := sql_pck.bind_variable(':nr_seq_estrut_mat', r_c01_w.nr_seq_estrut_mat, valor_bind_w);
		end if;		
		
		-- SEMPRE DEIXAR POR ULTIMO
		ds_sql_fat_w := ds_sql_fat_w || ds_filtro_evento_w || ds_order_by_w;
		
		valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_fat_w, valor_bind_w);
		
		loop fetch cursor_sql_w bulk collect into 	tb_nr_seq_mat_w,		tb_nr_seq_conta_w,		tb_nr_seq_segurado_w,
								tb_nr_seq_regra_inter_w,	tb_ie_tipo_guia_w,		tb_cd_guia_ok_w,
								tb_dt_alta_w,			tb_nr_seq_conta_mat_w,		tb_nr_seq_pos_mat_w,
								tb_nr_seq_pos_mat_fat_w,	tb_dt_material_ref_w,		tb_qt_dias_envio_taxa_w,
								tb_cd_usuario_plano_w,		tb_nr_seq_pagador_w,		tb_nr_seq_contrato_w,
								tb_ie_tipo_segurado_w,		tb_nr_seq_intercambio_w,	tb_nr_seq_ops_congenere_w,
								tb_nr_seq_congenere_w,		tb_nr_seq_congenere_prot_w,	tb_nr_seq_protocolo_w,
								tb_cd_guia_referencia_w,	tb_ie_tipo_protocolo_w
			limit pls_util_pck.qt_registro_transacao_w;
			exit when tb_nr_seq_mat_w.count = 0;
			
			for i in tb_nr_seq_mat_w.first..tb_nr_seq_mat_w.last loop
				-- Regra carteira atendimento
				if (r_c01_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c01_w.nr_seq_regra_atend_cart::text <> '') then
					if (current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type	!= tb_nr_seq_conta_w(i)) then
						ie_glosar_cart_w := pls_faturamento_pck.consistir_regra_atend_cart( tb_nr_seq_segurado_w(i), r_c01_w.nr_seq_regra_atend_cart, tb_cd_usuario_plano_w(i), ie_glosar_cart_w);
					end if;
				else
					ie_glosar_cart_w := 'S';
				end if;
				
				if (ie_glosar_cart_w = 'S') then
					-- Se nao o mesmo segurado, ou conta ou o evento, puxar nova regra pagador
					if (current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type	!= tb_nr_seq_conta_w(i)) then
						ie_pagador_cta_w := 	pls_faturamento_pck.obter_se_pagador_lote_fat( 	nr_seq_lote_p, tb_nr_seq_segurado_w(i), tb_nr_seq_conta_w(i), r_c01_w.nr_seq_evento,
													current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type, current_setting('pls_faturamento_pck.ie_evento_restritivo_w')::pls_parametro_faturamento.ie_evento_restritivo%type, sg_estado_w, qt_lote_fat_excecao_w,
													tb_nr_seq_pagador_w(i), tb_nr_seq_contrato_w(i), tb_ie_tipo_segurado_w(i),
													tb_nr_seq_intercambio_w(i), tb_nr_seq_ops_congenere_w(i), tb_nr_seq_congenere_w(i),
													tb_nr_seq_congenere_prot_w(i), tb_nr_seq_protocolo_w(i), tb_cd_guia_referencia_w(i),
													tb_sg_estado_cong_w, tb_ie_tipo_congenere_w, tb_ie_nacional_cong_w, 
													tb_ie_fatura_congenere_coop_w, tb_nr_seq_camara_cong_w, tb_nr_seq_pagador_cong_w,
													tb_ie_tipo_protocolo_w(i));
					end if;
					
					ie_faturar_evento_w := 'S';
					-- Verificar se o evento escolhido pertence a regra
					if (current_setting('pls_faturamento_pck.ie_evento_restritivo_w')::pls_parametro_faturamento.ie_evento_restritivo%type = 'N') and (r_c01_w.nr_seq_regra_evento != current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type) then
						ie_faturar_evento_w := 'N';
					end if;
					
					if (ie_pagador_cta_w = 'S') or (ie_faturar_evento_w = 'N') then

						vl_item_w := null;
						-- So atualiza dados se for faturar
						if (ie_faturar_evento_w = 'S') then
							-- Utiliza os valores vindos do cursor, porem, prioriza a data da alta da Guia 5, ou seja, da Guia de Resumo de Internacao
							-- E como consulta (3) nao tem guia de referencia, tambem nao verifica
							if (current_setting('pls_faturamento_pck.nr_seq_conta_w')::pls_conta.nr_sequencia%type != tb_nr_seq_conta_w(i)) then
								PERFORM set_config('pls_faturamento_pck.dt_alta_w', tb_dt_alta_w(i), false);
								PERFORM set_config('pls_faturamento_pck.ie_tipo_guia_w', tb_ie_tipo_guia_w(i), false);
								if (tb_ie_tipo_guia_w(i) not in ('3','5')) then
									select	max(dt_alta),
										max(ie_tipo_guia)
									into STRICT	current_setting('pls_faturamento_pck.dt_alta_w')::pls_conta.dt_alta%type,
										current_setting('pls_faturamento_pck.ie_tipo_guia_w')::pls_conta.ie_tipo_guia%type
									from	pls_conta_pos_cab_v
									where	cd_guia_ok		= tb_cd_guia_ok_w(i)
									and	nr_seq_segurado		= tb_nr_seq_segurado_w(i)
									and	ie_tipo_guia		= '5';
								end if;
							end if;
							
							if (current_setting('pls_faturamento_pck.ie_tipo_guia_w')::pls_conta.ie_tipo_guia%type = '5') then
								PERFORM set_config('pls_faturamento_pck.qt_dia_proced_receb_w', (trunc(clock_timestamp()) - trunc(coalesce(current_setting('pls_faturamento_pck.dt_alta_w')::pls_conta.dt_alta%type, tb_dt_material_ref_w(i)))), false);
							else
								PERFORM set_config('pls_faturamento_pck.qt_dia_proced_receb_w', (trunc(clock_timestamp()) - trunc(tb_dt_material_ref_w(i))), false);
							end if;
							
							-- Define nulo para o vl_item_w, em caso do qt_dia_proced_receb_w set maior que o r_c03_w.qt_dias_envio_taxa o mesmo recebera 0 (zero) e o decode ira verificar se zera ou nao o w_pls_lote_fat_proc.vl_item
							if (current_setting('pls_faturamento_pck.qt_dia_proced_receb_w')::integer > tb_qt_dias_envio_taxa_w(i)) then
								vl_item_w := 0;
							end if;
						end if;
						
						-- Atualizando o item com o evento da regra
						nr_w				:= nr_w + 1;	
						tb_nr_seq_item_w(nr_w)		:= tb_nr_seq_mat_w(i);
						
						-- Se for nao for faturar gravar "-1" para sair da leitura das regras de eventos
						tb_nr_seq_evento_w(nr_w)	:= r_c01_w.nr_seq_evento;
						if (ie_faturar_evento_w = 'N') then
							tb_nr_seq_evento_w(nr_w) := -1;
						end if;
						
						tb_nr_seq_regra_fat_w(nr_w) 	:= r_c01_w.nr_seq_regra_fat;
						tb_nr_agrupamento_w(nr_w)	:= r_c01_w.nr_agrupamento;
						tb_vl_item_w(nr_w)		:= vl_item_w;
						tb_nr_seq_pos_item_fat_w(nr_w)	:= tb_nr_seq_pos_mat_fat_w(i);
						tb_nr_seq_conta_pos_item_w(nr_w):= tb_nr_seq_pos_mat_w(i);
					end if;
				end if;
				
				PERFORM set_config('pls_faturamento_pck.nr_seq_conta_w', tb_nr_seq_conta_w(i), false);
				nr_seq_evento_w		:= r_c01_w.nr_seq_evento;
			end loop;			
		end loop;
		close cursor_sql_w;

		if (cursor_sql_w%isopen) then
			close cursor_sql_w;
		end if;
		
		-- Carregar os eventos nos materiais do faturamento
		if (tb_nr_seq_item_w.count > 0) then
			CALL pls_faturamento_pck.carregar_evento_mat_fat(	tb_nr_seq_item_w, tb_nr_seq_evento_w, tb_nr_seq_regra_fat_w,tb_nr_agrupamento_w, tb_vl_item_w, tb_nr_seq_pos_item_fat_w,
							tb_nr_seq_conta_pos_item_w, nm_usuario_p);
			
			-- Limpar variaveis
			tb_nr_seq_item_w.delete;		tb_nr_seq_evento_w.delete;	tb_nr_seq_regra_fat_w.delete;
			tb_nr_agrupamento_w.delete;		tb_vl_item_w.delete; 		tb_nr_seq_pos_item_fat_w.delete;
			tb_nr_seq_conta_pos_item_w.delete;	nr_w := 0;
		end if;
		
		ds_filtro_evento_w := null;		valor_bind_w.delete;			ds_sql_fat_w := null;
		tb_nr_seq_proc_w.delete;		tb_nr_seq_prestador_exec_w.delete;	tb_nr_seq_prestador_pgto_w.delete;
		tb_cd_pessoa_fis_prest_exec_w.delete;	tb_cd_procedimento_w.delete;		tb_ie_origem_proced_w.delete;
		tb_nr_seq_conta_w.delete;		tb_nr_seq_segurado_w.delete;		tb_nr_seq_regra_inter_w.delete;
		tb_ie_tipo_guia_w.delete;		tb_cd_guia_ok_w.delete;			tb_dt_alta_w.delete;	
		tb_nr_seq_conta_proc_w.delete;		tb_nr_seq_pos_proc_w.delete;		tb_nr_seq_pos_proc_fat_w.delete;
		tb_dt_procedimento_ref_w.delete;	tb_qt_dias_envio_taxa_w.delete;		tb_cd_usuario_plano_w.delete;
		tb_nr_seq_pagador_w.delete;		tb_nr_seq_contrato_w.delete;		tb_ie_tipo_segurado_w.delete;
		tb_nr_seq_intercambio_w.delete;		tb_nr_seq_ops_congenere_w.delete;	tb_nr_seq_congenere_w.delete;
		tb_nr_seq_mat_w.delete;			tb_nr_seq_conta_mat_w.delete;		tb_nr_seq_pos_mat_w.delete;
		tb_nr_seq_pos_mat_fat_w.delete;		tb_dt_material_ref_w.delete;
	end if;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.obter_evento_faturamento ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
