-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.pls_obter_pagador_fatura ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_ref_rescisao_p pls_conta.dt_atendimento_referencia%type, nr_seq_pagador_p INOUT pls_contrato_pagador.nr_sequencia%type, nr_seq_congenere_pesq_p INOUT pls_contrato_pagador.nr_seq_congenere%type, ie_tipo_protocolo_p pls_protocolo_conta.ie_tipo_protocolo%type, nr_seq_congenere_prot_p pls_congenere.nr_sequencia%type) AS $body$
DECLARE

					
nr_seq_congenere_w		pls_segurado.nr_seq_congenere%type;
nr_seq_ops_congenere_w		pls_segurado.nr_seq_ops_congenere%type;
cd_operadora_empresa_w		pls_segurado.cd_operadora_empresa%type;
ie_fatura_congenere_coop_w	varchar(10) := 'N';
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
nr_seq_congenere_pesq_w		pls_contrato_pagador.nr_seq_congenere%type;
nr_seq_pag_contrato_w		pls_contrato_pagador.nr_sequencia%type;
cd_cgc_contrato_w		pessoa_juridica.cd_cgc%type;
cd_pessoa_contrato_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_pag_operadora_w		pls_contrato_pagador.nr_sequencia%type;
cd_cgc_operadora_w		pessoa_juridica.cd_cgc%type;


BEGIN

select	nr_seq_congenere,
	nr_seq_ops_congenere,
	cd_operadora_empresa
into STRICT	nr_seq_congenere_w,
	nr_seq_ops_congenere_w,
	cd_operadora_empresa_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

if (ie_tipo_protocolo_p = 'R') and -- Reembolso
	(nr_seq_congenere_prot_p IS NOT NULL AND nr_seq_congenere_prot_p::text <> '') then
	nr_seq_congenere_w := coalesce(nr_seq_congenere_prot_p,nr_seq_congenere_w);
	
	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		nr_seq_ops_congenere_w := null;
		cd_operadora_empresa_w := null;
	end if;
end if;

-- Fazer estas validacoes somente se tivre gravado uma congenere de fundacao
if (nr_seq_ops_congenere_w IS NOT NULL AND nr_seq_ops_congenere_w::text <> '') then
	select	max(ie_fatura_congenere_coop)
	into STRICT	ie_fatura_congenere_coop_w
	from	pls_congenere
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	nr_sequencia		= nr_seq_ops_congenere_w;
	
	-- Verificar se utiliza o pagador da fundacao
	if (coalesce(ie_fatura_congenere_coop_w, 'N') = 'S') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_pagador_w
		from	pls_contrato_pagador
		where	nr_seq_congenere = nr_seq_ops_congenere_w
		and	coalesce(dt_rescisao::text, '') = '';
	end if;
	
	if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
		nr_seq_congenere_pesq_w	:= nr_seq_ops_congenere_w;
	else
		nr_seq_congenere_pesq_w	:= nr_seq_congenere_w;
	end if;
else
	nr_seq_congenere_pesq_w	:= nr_seq_congenere_w;
end if;

-- Busca o pagador do segurado
if (coalesce(nr_seq_pagador_w::text, '') = '') and (ie_tipo_protocolo_p != 'R') then
	select	nr_seq_pagador
	into STRICT	nr_seq_pag_contrato_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_p;
	
	if (nr_seq_pag_contrato_w IS NOT NULL AND nr_seq_pag_contrato_w::text <> '') and (dt_ref_rescisao_p IS NOT NULL AND dt_ref_rescisao_p::text <> '') then	
		-- Busca a pessoa do contrato pagador
		select	max(cd_cgc),
			max(cd_pessoa_fisica)
		into STRICT	cd_cgc_contrato_w,
			cd_pessoa_contrato_w
		from	pls_contrato_pagador
		where	nr_sequencia = nr_seq_pag_contrato_w
		and	coalesce(dt_rescisao, clock_timestamp()) >= dt_ref_rescisao_p;

		-- Se nao encontrou pessoa no contrato pagador, nao rescindido, descarta o pagador encontrado no segurado
		if (coalesce(cd_cgc_contrato_w::text, '') = '') and (coalesce(cd_pessoa_contrato_w::text, '') = '') then
			nr_seq_pag_contrato_w := null;
		end if;
	end if;
end if;

-- Busca o pagador da operadora
if (coalesce(nr_seq_pagador_w::text, '') = '') and (nr_seq_congenere_pesq_w IS NOT NULL AND nr_seq_congenere_pesq_w::text <> '') and (dt_ref_rescisao_p IS NOT NULL AND dt_ref_rescisao_p::text <> '') then
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_pag_operadora_w
	from	pls_contrato_pagador a
	where	a.nr_seq_congenere = nr_seq_congenere_pesq_w
	and	coalesce(a.dt_rescisao, clock_timestamp()) >= dt_ref_rescisao_p;
	
	if (nr_seq_pag_operadora_w IS NOT NULL AND nr_seq_pag_operadora_w::text <> '') then
		-- Busca a PJ do contrato pagador
		select	max(cd_cgc)
		into STRICT	cd_cgc_operadora_w
		from	pls_contrato_pagador
		where	nr_sequencia = nr_seq_pag_operadora_w;

		-- Se nao encontrou PJ no contrato pagador, nao rescindido, descarta o pagador encontrado na operadora
		if (coalesce(cd_cgc_operadora_w::text, '') = '') then
			nr_seq_pag_operadora_w := null;
		end if;
	end if;
end if;

-- Se encontrou contrato vigente no segurado e contrato vigente na operadora
if (nr_seq_pag_contrato_w IS NOT NULL AND nr_seq_pag_contrato_w::text <> '') and (nr_seq_pag_operadora_w IS NOT NULL AND nr_seq_pag_operadora_w::text <> '') then
	if (cd_cgc_contrato_w = cd_cgc_operadora_w) and ((coalesce(ie_fatura_congenere_coop_w, 'N') = 'S') or (coalesce(nr_seq_ops_congenere_w::text, '') = '')) then
		nr_seq_pagador_w := nr_seq_pag_operadora_w;
	else
		nr_seq_pagador_w := nr_seq_pag_contrato_w;
	end if;
end if;

-- Se ainda nao encontrou pagador, prioriza o pagador do segurado e como segunda opcao utiliza o pagador da operadora
if (coalesce(nr_seq_pagador_w::text, '') = '') then
	nr_seq_pagador_w := coalesce(nr_seq_pag_contrato_w,nr_seq_pag_operadora_w);
end if;

-- Se o pagador nao foi definido em contrato, verificar se nao esta se cobrando o faturamento da propria operadora
if (coalesce(nr_seq_pag_contrato_w::text, '') = '') and (nr_seq_pag_operadora_w IS NOT NULL AND nr_seq_pag_operadora_w::text <> '') and (current_setting('pls_faturamento_pck.nr_seq_outorgante_w')::pls_congenere.nr_sequencia%type = nr_seq_congenere_pesq_w) then
	nr_seq_pagador_w := null;
	nr_seq_congenere_pesq_w := null;
end if;

nr_seq_pagador_p	:= nr_seq_pagador_w;
nr_seq_congenere_pesq_p	:= nr_seq_congenere_pesq_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.pls_obter_pagador_fatura ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_ref_rescisao_p pls_conta.dt_atendimento_referencia%type, nr_seq_pagador_p INOUT pls_contrato_pagador.nr_sequencia%type, nr_seq_congenere_pesq_p INOUT pls_contrato_pagador.nr_seq_congenere%type, ie_tipo_protocolo_p pls_protocolo_conta.ie_tipo_protocolo%type, nr_seq_congenere_prot_p pls_congenere.nr_sequencia%type) FROM PUBLIC;
