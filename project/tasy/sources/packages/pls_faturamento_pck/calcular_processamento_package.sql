-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.calcular_processamento ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, ie_calculo_p text ) AS $body$
DECLARE


qt_contas_w		integer;
qt_itens_w		integer;


BEGIN
if (ie_calculo_p = 'CT') then -- Contas/itens no total
	select	count(distinct nr_seq_conta)
	into STRICT	qt_contas_w
	from (SELECT	nr_seq_conta
		from	w_pls_lote_fat_proc
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	coalesce(nr_seq_evento_fat::text, '') = ''
		and	coalesce(nr_seq_pos_proc_tx::text, '') = ''
		
union all

		SELECT	nr_seq_conta
		from	w_pls_lote_fat_mat
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	coalesce(nr_seq_evento_fat::text, '') = ''
		and	coalesce(nr_seq_pos_mat_tx::text, '') = '') alias6;
		
	select	count(nr_seq_conta)
	into STRICT	qt_itens_w
	from (SELECT	nr_seq_conta
		from	w_pls_lote_fat_proc
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	coalesce(nr_seq_evento_fat::text, '') = ''
		and	coalesce(nr_seq_pos_proc_tx::text, '') = ''
		
union all

		SELECT	nr_seq_conta
		from	w_pls_lote_fat_mat
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	coalesce(nr_seq_evento_fat::text, '') = ''
		and	coalesce(nr_seq_pos_mat_tx::text, '') = '') alias5;
		
	PERFORM set_config('pls_faturamento_pck.ds_log_w', substr(current_setting('pls_faturamento_pck.ds_log_w')::pls_fatura_log.ds_log%type || chr(10) || ' - Contas apuradas: '||qt_contas_w||' - Itens apurados: '||qt_itens_w,1,4000), false);
		
elsif (ie_calculo_p = 'CE') then -- Contas/itens com evento
	select	count(distinct nr_seq_conta)
	into STRICT	qt_contas_w
	from (SELECT	nr_seq_conta
		from	w_pls_lote_fat_proc
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	(nr_seq_evento_fat IS NOT NULL AND nr_seq_evento_fat::text <> '')
		and	coalesce(nr_seq_pos_proc_tx::text, '') = ''
		
union all

		SELECT	nr_seq_conta
		from	w_pls_lote_fat_mat
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	(nr_seq_evento_fat IS NOT NULL AND nr_seq_evento_fat::text <> '')
		and	coalesce(nr_seq_pos_mat_tx::text, '') = '') alias6;
		
	select	count(nr_seq_conta)
	into STRICT	qt_itens_w
	from (SELECT	nr_seq_conta
		from	w_pls_lote_fat_proc
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	(nr_seq_evento_fat IS NOT NULL AND nr_seq_evento_fat::text <> '')
		and	coalesce(nr_seq_pos_proc_tx::text, '') = ''
		
union all

		SELECT	nr_seq_conta
		from	w_pls_lote_fat_mat
		where	nr_seq_lote_fat	= nr_seq_lote_p
		and	(nr_seq_evento_fat IS NOT NULL AND nr_seq_evento_fat::text <> '')
		and	coalesce(nr_seq_pos_mat_tx::text, '') = '') alias5;
		
	PERFORM set_config('pls_faturamento_pck.ds_log_w', substr(current_setting('pls_faturamento_pck.ds_log_w')::pls_fatura_log.ds_log%type || chr(10) || ' - Contas com evento: '||qt_contas_w||' - Itens com evento: '||qt_itens_w,1,4000), false);
	
elsif (ie_calculo_p = 'CV') then -- Contas/itens vinculados ao lote de faturamento
	select	count(distinct nr_seq_conta)
	into STRICT	qt_contas_w
	from (SELECT	nr_seq_conta
		from	pls_conta_pos_proc
		where	nr_seq_lote_fat	= nr_seq_lote_p
		
union all

		SELECT	nr_seq_conta
		from	pls_conta_pos_mat
		where	nr_seq_lote_fat	= nr_seq_lote_p) alias2;
		
	select	count(nr_seq_conta)
	into STRICT	qt_itens_w
	from (SELECT	nr_seq_conta
		from	pls_conta_pos_proc
		where	nr_seq_lote_fat	= nr_seq_lote_p
		
union all

		SELECT	nr_seq_conta
		from	pls_conta_pos_mat
		where	nr_seq_lote_fat	= nr_seq_lote_p) alias1;
		
	PERFORM set_config('pls_faturamento_pck.ds_log_w', substr(current_setting('pls_faturamento_pck.ds_log_w')::pls_fatura_log.ds_log%type || chr(10) || ' - Contas faturadas: '||qt_contas_w||' - Itens faturados: '||qt_itens_w,1,4000), false);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.calcular_processamento ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, ie_calculo_p text ) FROM PUBLIC;
