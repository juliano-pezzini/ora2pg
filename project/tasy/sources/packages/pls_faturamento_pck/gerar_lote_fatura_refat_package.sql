-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.gerar_lote_fatura_refat ( nr_seq_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_vencimento_p timestamp, nr_seq_lote_gerado_p INOUT pls_lote_faturamento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text default 'S', dt_emissao_p timestamp DEFAULT NULL, dt_mesano_referencia_p timestamp DEFAULT NULL) AS $body$
DECLARE

					
current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type		pls_lote_faturamento.nr_seq_regra_fat%type;
nr_seq_lote_origem_w		pls_lote_faturamento.nr_sequencia%type;
nr_seq_lote_faturamento_w	pls_lote_faturamento.nr_sequencia%type;

c01 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	a.nr_seq_evento
	from	pls_fatura_evento	a
	where	a.nr_seq_fatura		= nr_seq_fatura_pc
	and exists (	SELECT	1
			from	pls_fatura_conta 	x
			where	x.nr_seq_fatura_evento	= a.nr_sequencia
			and	x.nr_seq_conta not in (	select	y.nr_seq_conta 		-- Somente contas que nao necessitam de ajuste 
							from	w_pls_fatura_refat	y));
							
c02 CURSOR(	nr_seq_evento_pc		pls_conta_pos_proc.nr_seq_evento_fat%type,
		nr_seq_lote_origem_pc		pls_conta_pos_proc.nr_seq_lote_fat%type) FOR
	SELECT	a.nr_seq_conta
	from	pls_conta_pos_proc	 	a
	where	a.nr_seq_evento_fat		= nr_seq_evento_pc
	and	a.nr_seq_lote_fat		= nr_seq_lote_origem_pc
	and	a.nr_seq_conta not in (	SELECT	b.nr_seq_conta 		-- Somente contas que nao necessitam de ajuste
					from	w_pls_fatura_refat	b)
	and	a.nr_seq_conta in (	select	b.nr_seq_conta 		-- Contas de evento da fatura 
					from	pls_fatura_conta	b
					where	b.nr_seq_fatura_evento in (	select	c.nr_sequencia  	-- Eventos da fatura 
										from	pls_fatura_evento 	c
										where	c.nr_seq_fatura		= nr_seq_fatura_p))
	
union all

	select	a.nr_seq_conta
	from	pls_conta_pos_mat	 	a
	where	a.nr_seq_evento_fat		= nr_seq_evento_pc
	and	a.nr_seq_lote_fat		= nr_seq_lote_origem_pc
	and	a.nr_seq_conta not in (	select	b.nr_seq_conta 		-- Somente contas que nao necessitam de ajuste
					from	w_pls_fatura_refat	b)
	and	a.nr_seq_conta in (	select	b.nr_seq_conta 		-- Contas de evento da fatura 
					from	pls_fatura_conta	b
					where	b.nr_seq_fatura_evento in (	select	c.nr_sequencia  	-- Eventos da fatura 
										from	pls_fatura_evento 	c
										where	c.nr_seq_fatura		= nr_seq_fatura_p))
	group by nr_seq_conta;
	
BEGIN
-- Obter dados para o refaturamento
select	max(b.nr_seq_regra_fat),
	max(b.nr_sequencia)
into STRICT	current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type,
	nr_seq_lote_origem_w
from	pls_lote_faturamento	b,
	pls_fatura		a
where	a.nr_seq_lote		= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_fatura_p;

insert into pls_lote_faturamento(	nr_sequencia,				cd_estabelecimento,		dt_atualizacao,
					nm_usuario, 				dt_atualizacao_nrec, 		nm_usuario_nrec,
					nr_seq_regra_fat,			nr_seq_lote_disc, 		dt_mesano_referencia,
					dt_geracao, 				dt_fechamento, 			dt_vencimento,
					nr_seq_lote_origem, 			dt_emissao,			ie_status)
			values (	nextval('pls_lote_faturamento_seq'), 	cd_estabelecimento_p, 		clock_timestamp(),
					nm_usuario_p, 				clock_timestamp(),			nm_usuario_p,
					current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type, 			null, 				CASE WHEN coalesce(dt_mesano_referencia_p::text, '') = '' THEN  clock_timestamp()  ELSE dt_mesano_referencia_p END ,
					clock_timestamp(), 				null, 				dt_vencimento_p,
					nr_seq_lote_origem_w, 			dt_emissao_p,			1) returning nr_sequencia into nr_seq_lote_faturamento_w;
					
CALL pls_faturamento_pck.inicializa_geracao_lote(nr_seq_lote_faturamento_w, nm_usuario_p);
					
CALL pls_gerar_fatura_log(nr_seq_lote_faturamento_w, null, null, 'PLS_FATURAMENTO_PCK.GERAR_LOTE_FATURA_REFAT()', 'GL', 'S', nm_usuario_p);

for r_c01_w in c01( nr_seq_fatura_p ) loop
	for r_c02_w in c02( r_c01_w.nr_seq_evento , nr_seq_lote_origem_w ) loop
		vincular_conta_lote_fat(nr_seq_lote_faturamento_w, r_c01_w.nr_seq_evento, r_c02_w.nr_seq_conta, cd_estabelecimento_p, nm_usuario_p, 'S', 'RF', nr_seq_lote_origem_w);
	end loop;
end loop;

-- Acima e utilizada a rotina de contas vinculadas manualmente "M" (pasta contas pendentes), apos vincular, deve ser mudado para automatico "A"
update	pls_fatura_conta
set	ie_tipo_vinculacao	= 'A'
where	ie_tipo_vinculacao	= 'M'
and	nr_seq_fatura_evento in (SELECT	b.nr_sequencia
				from	pls_fatura_evento	b,
					pls_fatura		a
				where	a.nr_sequencia		= b.nr_seq_fatura
				and	a.nr_seq_lote		= nr_seq_lote_faturamento_w);
				
CALL pls_faturamento_pck.atualizar_vl_lote_fatura(nr_seq_lote_faturamento_w, nm_usuario_p, 'N', 'N', 'S');

nr_seq_lote_gerado_p := nr_seq_lote_faturamento_w;

CALL pls_faturamento_pck.altera_status_gerado_lote(nr_seq_lote_faturamento_w, nm_usuario_p);


if (coalesce(ie_commit_p, 'S') = 'S') then
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.gerar_lote_fatura_refat ( nr_seq_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_vencimento_p timestamp, nr_seq_lote_gerado_p INOUT pls_lote_faturamento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text default 'S', dt_emissao_p timestamp DEFAULT NULL, dt_mesano_referencia_p timestamp DEFAULT NULL) FROM PUBLIC;
