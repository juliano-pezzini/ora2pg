-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.desfazer_lote_refaturam ( nr_seq_lote_ref_p pls_lote_faturamento.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
-- Finalidade: Desfazer o lote de refaturamento/faturamento gerado pelo lote de discussao
current_setting('pls_faturamento_pck.qt_registro_w')::integer			integer;
nr_seq_lote_disc_w		pls_lote_discussao.nr_sequencia%type;

c01 CURSOR(	nr_seq_lote_ref_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura
	from	pls_fatura	
	where	nr_seq_lote = nr_seq_lote_ref_pc
	order by nr_sequencia desc;
	
c02 CURSOR(	nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura_evento
	from	pls_fatura_evento
	where	nr_seq_fatura = nr_seq_fatura_pc;
	
current_setting('pls_faturamento_pck.c03')::CURSOR( CURSOR(	nr_seq_fatura_evento_pc		pls_fatura_evento.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_fatura_conta
	from	pls_fatura_conta
	where	nr_seq_fatura_evento = nr_seq_fatura_evento_pc;
	
BEGIN

select	count(1)
into STRICT	current_setting('pls_faturamento_pck.qt_registro_w')::integer
from	pls_fatura
where	nr_seq_lote = nr_seq_lote_ref_p
and	(nr_titulo IS NOT NULL AND nr_titulo::text <> '');

select	max(nr_seq_lote_disc)
into STRICT	nr_seq_lote_disc_w
from	pls_lote_faturamento
where	nr_sequencia = nr_seq_lote_ref_p;

if (current_setting('pls_faturamento_pck.qt_registro_w')::integer = 0) then
	delete 	FROM w_pls_lote_fat_item
	where	nr_seq_lote = nr_seq_lote_ref_p;
	
	delete 	FROM w_pls_lote_fat_proc
	where	nr_seq_lote_fat = nr_seq_lote_ref_p;
	
	delete 	FROM w_pls_lote_fat_mat
	where	nr_seq_lote_fat = nr_seq_lote_ref_p;
	
	for r_c01_w in c01( nr_seq_lote_ref_p ) loop
		for r_c02_w in c02( r_c01_w.nr_seq_fatura ) loop
			for r_c03_w in current_setting('pls_faturamento_pck.c03')::CURSOR( ( r_c02_w.nr_seq_fatura_evento ) loop
				delete 	FROM pls_fatura_proc
				where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
				
				delete	FROM pls_fatura_mat
				where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
			end loop;
			
			delete	FROM pls_fatura_conta
			where	nr_seq_fatura_evento = r_c02_w.nr_seq_fatura_evento;
		end loop;
		
		delete	FROM pls_fatura_guia_envio
		where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
		
		delete	FROM pls_fatura_evento
		where 	nr_seq_fatura = r_c01_w.nr_seq_fatura;
		
		delete	FROM pls_fatura_motivo_imp_cob
		where	nr_seq_fatura = r_c01_w.nr_seq_fatura;
	end loop;
	
	delete	FROM pls_fatura_motivo_imp_cob
	where	nr_seq_lote_fat = nr_seq_lote_ref_p;
	
	delete	FROM pls_lote_fat_inconsist
	where	nr_seq_lote = nr_seq_lote_ref_p;
	
	delete	FROM pls_fatura
	where	nr_seq_lote = nr_seq_lote_ref_p;
	
	update	pls_conta_pos_proc
	set	ie_status_faturamento	= 'C',
		nr_seq_lote_fat		 = NULL,
		nr_seq_evento_fat	 = NULL,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		nr_seq_disc_proc	 = NULL
	where	nr_seq_lote_disc 	= nr_seq_lote_disc_w;
	
	update	pls_conta_pos_mat
	set	ie_status_faturamento	= 'C',
		nr_seq_lote_fat		 = NULL,
		nr_seq_evento_fat	 = NULL,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		nr_seq_disc_mat		 = NULL
	where	nr_seq_lote_disc 	= nr_seq_lote_disc_w;
	
	delete	FROM pls_conta_pos_proc_fat
	where	nr_seq_conta_pos_proc in (	SELECT	nr_sequencia
						from	pls_conta_pos_proc
						where	nr_seq_lote_fat	= nr_seq_lote_ref_p);
						
	delete	FROM pls_conta_pos_mat_fat
	where	nr_seq_conta_mat_pos in (	SELECT	nr_sequencia
						from	pls_conta_pos_mat
						where	nr_seq_lote_fat	= nr_seq_lote_ref_p);
						
	delete	FROM pls_lote_faturamento
	where	nr_sequencia = nr_seq_lote_ref_p;
	
	if (coalesce(ie_commit_p,'N') = 'S') then
		commit;
	end if;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(211445);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.desfazer_lote_refaturam ( nr_seq_lote_ref_p pls_lote_faturamento.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
