-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Mesmo tratamento da rotina PLS_OBTER_SE_PAGADOR_LOTE_FAT
CREATE OR REPLACE FUNCTION pls_faturamento_pck.obter_se_pagador_lote_fat ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_evento_p bigint, nr_seq_regra_fat_p pls_regra_faturamento.nr_sequencia%type, ie_evento_restritivo_p pls_parametro_faturamento.ie_evento_restritivo%type, sg_estado_p pessoa_juridica.sg_estado%type, qt_lote_fat_excecao_p bigint, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, ie_tipo_segurado_p pls_segurado.ie_tipo_segurado%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, nr_seq_ops_congenere_p pls_congenere.nr_sequencia%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, nr_seq_congenere_prot_p pls_congenere.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, tb_sg_estado_cong_p pls_util_cta_pck.t_varchar2_table_5, tb_ie_tipo_congenere_p pls_util_cta_pck.t_varchar2_table_5, tb_ie_nacional_cong_p pls_util_cta_pck.t_varchar2_table_5, tb_ie_fatura_congenere_coop_p pls_util_cta_pck.t_varchar2_table_10, tb_nr_seq_camara_cong_p pls_util_cta_pck.t_number_table, tb_nr_seq_pagador_cong_p pls_util_cta_pck.t_number_table, ie_tipo_protocolo_p pls_protocolo_conta.ie_tipo_protocolo%type) RETURNS varchar AS $body$
DECLARE

						
cd_estabelecimento_w		varchar(20);
ie_fatura_congenere_coop_w	varchar(10)	:= 'A';
ie_tipo_faturamento_w		varchar(255);
ie_tipo_segurado_w		varchar(3)	:= ie_tipo_segurado_p;
current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type		varchar(2);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		varchar(2);
ie_pagador_lote_w		varchar(1)	:= 'N';
ie_entra_regra_w		varchar(1)	:= 'N';
ie_regra_restritiva_w		varchar(1)	:= 'N';
current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type		bigint	:= nr_seq_regra_fat_p;
nr_seq_congenere_w		bigint	:= nr_seq_congenere_p;
nr_seq_camara_w			bigint	:= null;
current_setting('pls_faturamento_pck.nr_seq_contrato_w')::pls_segurado.nr_seq_contrato%type		bigint	:= nr_seq_contrato_p;
current_setting('pls_faturamento_pck.qt_registro_w')::integer			integer;
nr_seq_pagador_w		bigint	:= nr_seq_pagador_p;
current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type		bigint	:= nr_seq_intercambio_p;
nr_seq_ops_congenere_w		bigint	:= nr_seq_ops_congenere_p;
nr_seq_regra_w			bigint;
nr_seq_pag_ops_cong_w		bigint;
nr_seq_congenere_prot_w		pls_congenere.nr_sequencia%type := nr_seq_congenere_prot_p;
current_setting('pls_faturamento_pck.nr_seq_protocolo_w')::pls_lote_faturamento.nr_seq_protocolo%type		pls_protocolo_conta.nr_sequencia%type := nr_seq_protocolo_p;
nr_seq_grupo_intercambio_w	pls_intercambio.nr_seq_grupo_intercambio%type;
ie_evento_restritivo_w		pls_parametro_faturamento.ie_evento_restritivo%type := ie_evento_restritivo_p;
ie_nacional_w			pls_congenere.ie_nacional%type;
cd_guia_referencia_w		pls_conta.cd_guia_referencia%type := cd_guia_referencia_p;
current_setting('pls_faturamento_pck.ie_tipo_protocolo_w')::pls_protocolo_conta.ie_tipo_protocolo%type		pls_protocolo_conta.ie_tipo_protocolo%type := ie_tipo_protocolo_p;

C01 CURSOR FOR
	SELECT	a.nr_seq_regra,
		a.ie_entra_regra
	from	pls_regra_fat_pagador	a,
		pls_regra_faturamento	b
	where	b.nr_sequencia = a.nr_seq_regra
	and	b.ie_situacao = 'A'
	and	((a.ie_tipo_faturamento		= ie_tipo_faturamento_w 	or coalesce(a.ie_tipo_faturamento::text, '') = '') or
		 ((a.ie_tipo_faturamento = 'ICOOP') and (ie_tipo_faturamento_w = 'IC') and (current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type = 'CO')))
	and (a.nr_seq_camara		= nr_seq_camara_w 		or coalesce(a.nr_seq_camara::text, '') = '')
	and (a.nr_seq_contrato		= current_setting('pls_faturamento_pck.nr_seq_contrato_w')::pls_segurado.nr_seq_contrato%type 		or coalesce(a.nr_seq_contrato::text, '') = '')
	and (a.nr_seq_intercambio 		= current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type 		or coalesce(a.nr_seq_intercambio::text, '') = '')
	and (a.nr_seq_ops_congenere		= nr_seq_ops_congenere_w	or coalesce(a.nr_seq_ops_congenere::text, '') = '')
	and (a.nr_seq_grupo_intercambio	= nr_seq_grupo_intercambio_w	or coalesce(a.nr_seq_grupo_intercambio::text, '') = '')
	and (ie_evento_restritivo_w		= 'N'				or a.nr_seq_regra = current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type)
	and	((coalesce(a.ie_tipo_intercambio,'A') = 'A') 			or (coalesce(a.ie_tipo_intercambio,'A') 	= coalesce(ie_tipo_intercambio_w,'A')))	
	and	((coalesce(a.ie_fatura_congenere_coop,'A') = 'A') 			or (coalesce(a.ie_fatura_congenere_coop,'A') = coalesce(ie_fatura_congenere_coop_w,'A')))
	and	(((a.nr_seq_cooperativa		= nr_seq_congenere_w 		or coalesce(a.nr_seq_cooperativa::text, '') = '') and a.ie_coop_inferiores = 'N')
		or coalesce(a.nr_seq_cooperativa,coalesce(nr_seq_congenere_w,0)) = coalesce(nr_seq_congenere_w,0))
	and	(((pls_obter_se_unimed_superior(nr_seq_congenere_w, a.nr_seq_cooperativa) = 'S' or coalesce(a.nr_seq_cooperativa::text, '') = '') and a.ie_coop_inferiores  = 'S')
		or coalesce(a.nr_seq_cooperativa,coalesce(nr_seq_congenere_w,0)) = coalesce(nr_seq_congenere_w,0))
	and	exists (SELECT	1
			from	pls_evento_faturamento 	y,
				pls_regra_fat_evento 	x
			where	y.ie_situacao	= 'A'
			and	y.nr_sequencia	= x.nr_seq_evento
			and	x.nr_seq_regra 	= a.nr_seq_regra
			and	x.nr_seq_evento	= nr_seq_evento_p)
	order by
		coalesce(a.ie_tipo_intercambio,' '),
		coalesce(a.nr_seq_intercambio,0),
		coalesce(a.nr_seq_contrato,0),
		coalesce(a.nr_seq_cooperativa,0),
		coalesce(a.nr_seq_ops_congenere,0),
		coalesce(a.nr_seq_grupo_intercambio,0),
		coalesce(a.nr_seq_camara,0),
		coalesce(a.ie_tipo_faturamento,' '),
		coalesce(a.ie_fatura_congenere_coop,' '),
		CASE WHEN a.nr_seq_regra=current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type THEN  1  ELSE 0 END;


BEGIN
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') and (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') and (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then	
	-- Usuario eventual 
	if (ie_tipo_segurado_w in ('I','H')) then
		-- Se for Reembolso, sempre pegar a congenere do protocolo
		if (current_setting('pls_faturamento_pck.ie_tipo_protocolo_w')::pls_protocolo_conta.ie_tipo_protocolo%type = 'R') and (nr_seq_congenere_prot_w IS NOT NULL AND nr_seq_congenere_prot_w::text <> '') then
			nr_seq_congenere_w := nr_seq_congenere_prot_w;
		end if;
	
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			if (nr_seq_ops_congenere_w IS NOT NULL AND nr_seq_ops_congenere_w::text <> '') then	
				ie_fatura_congenere_coop_w := tb_ie_fatura_congenere_coop_p(nr_seq_ops_congenere_w);
			end if;
						
			-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
			sg_estado_int_w		:= tb_sg_estado_cong_p(nr_seq_congenere_w);
			PERFORM set_config('pls_faturamento_pck.ie_tipo_congenere_w', tb_ie_tipo_congenere_p(nr_seq_congenere_w), false);
			ie_nacional_w		:= tb_ie_nacional_cong_p(nr_seq_congenere_w);
			nr_seq_camara_w 	:= tb_nr_seq_camara_cong_p(nr_seq_congenere_w);
			nr_seq_pagador_w	:= tb_nr_seq_pagador_cong_p(nr_seq_congenere_w);
			ie_tipo_faturamento_w	:= 'IC'; -- Intercambio entre cooperativas ou congeneres - Usuario eventual 
			
			if (ie_nacional_w = 'S') then
				ie_tipo_intercambio_w := 'N';
				
			elsif (sg_estado_p <> 'X') and (sg_estado_int_w <> 'X') then
				if (sg_estado_p = sg_estado_int_w) then
					ie_tipo_intercambio_w	:= 'E';
				else	
					ie_tipo_intercambio_w	:= 'N';
				end if;
			else
				ie_tipo_intercambio_w	:= 'A';
			end if;				

			if (ie_fatura_congenere_coop_w = 'S') and (nr_seq_ops_congenere_w IS NOT NULL AND nr_seq_ops_congenere_w::text <> '') then
				nr_seq_pag_ops_cong_w := tb_nr_seq_pagador_cong_p(nr_seq_ops_congenere_w);
				
				if (nr_seq_pag_ops_cong_w IS NOT NULL AND nr_seq_pag_ops_cong_w::text <> '') then
					nr_seq_camara_w := null;
				end if;
			end if;
		end if;
	-- Contrato de intercambio 
	else			
		select	max(c.ie_tipo_congenere) ie_tipo_congenere,
			coalesce(current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type,max(b.nr_sequencia)) nr_seq_intercambio,
			max(b.nr_seq_congenere) nr_seq_congenere,
			max(b.nr_seq_grupo_intercambio)
		into STRICT	current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type,
			current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type,
			nr_seq_congenere_w,
			nr_seq_grupo_intercambio_w
		from	pls_congenere		c,
			pls_intercambio 	b,
			pls_contrato_pagador 	a
		where	b.nr_sequencia	= a.nr_seq_pagador_intercambio
		and	c.nr_sequencia	= b.nr_seq_congenere
		and	a.nr_sequencia	= nr_seq_pagador_w;
		
		if (nr_seq_ops_congenere_w IS NOT NULL AND nr_seq_ops_congenere_w::text <> '') then
			nr_seq_congenere_w	:= nr_seq_ops_congenere_w;
			PERFORM set_config('pls_faturamento_pck.ie_tipo_congenere_w', tb_ie_tipo_congenere_p(nr_seq_congenere_w), false);
		end if;
		
		if (coalesce(nr_seq_congenere_w::text, '') = '') then
			select	max(a.nr_seq_congenere)
			into STRICT	nr_seq_congenere_w
			from	pls_contrato_pagador	a
			where	a.nr_sequencia	= nr_seq_pagador_w;
		end if;
		
		-- Se for Reembolso, sempre pegar a congenere do protocolo
		if (current_setting('pls_faturamento_pck.ie_tipo_protocolo_w')::pls_protocolo_conta.ie_tipo_protocolo%type = 'R') and (nr_seq_congenere_prot_w IS NOT NULL AND nr_seq_congenere_prot_w::text <> '') then
			nr_seq_congenere_w	:= nr_seq_congenere_prot_w;
			PERFORM set_config('pls_faturamento_pck.ie_tipo_congenere_w', tb_ie_tipo_congenere_p(nr_seq_congenere_w), false);
		end if;
		
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			ie_fatura_congenere_coop_w	:= tb_ie_fatura_congenere_coop_p(nr_seq_congenere_w);
			
			if (current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type = 'OP') and (ie_tipo_segurado_w = 'T') then			
				nr_seq_congenere_w := coalesce(nr_seq_congenere_prot_w,nr_seq_congenere_w);
			end if;
			
			-- Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo
			sg_estado_int_w		:= tb_sg_estado_cong_p(nr_seq_congenere_w);
			ie_nacional_w		:= tb_ie_nacional_cong_p(nr_seq_congenere_w);
			
			if (ie_nacional_w = 'S') then
				ie_tipo_intercambio_w	:= 'N';
			
			elsif (sg_estado_p <> 'X') and (sg_estado_int_w <> 'X') then
				if (sg_estado_p	= sg_estado_int_w) then
					ie_tipo_intercambio_w	:= 'E';
				else	
					ie_tipo_intercambio_w	:= 'N';
				end if;
			else
				ie_tipo_intercambio_w	:= 'A';
			end if;			
		end if;
		
		if (current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%coalesce(type::text, '') = '') then
			select	max(c.ie_tipo_congenere) ie_tipo_congenere,
				max(b.nr_sequencia) nr_seq_intercambio,
				max(b.nr_seq_grupo_intercambio)
			into STRICT	current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type,
				current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type,
				nr_seq_grupo_intercambio_w
			from	pls_congenere		c,
				pls_intercambio 	b,
				pls_contrato_pagador 	a
			where	b.nr_sequencia	= a.nr_seq_pagador_intercambio
			and	c.nr_sequencia	= b.nr_seq_oper_congenere
			and	a.nr_sequencia	= nr_seq_pagador_w;
		end if;
		
		if (current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%coalesce(type::text, '') = '') then
			select	max(b.nr_sequencia) nr_seq_intercambio
			into STRICT	current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type
			from	pls_intercambio 	b,
				pls_contrato_pagador 	a
			where	b.nr_sequencia	= a.nr_seq_pagador_intercambio
			and	a.nr_sequencia	= nr_seq_pagador_w;
		end if;
		
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			nr_seq_camara_w	:= tb_nr_seq_camara_cong_p(nr_seq_congenere_w);
			
			if (ie_fatura_congenere_coop_w = 'S') then
				nr_seq_pag_ops_cong_w := tb_nr_seq_pagador_cong_p(nr_seq_congenere_w);
				
				if (nr_seq_pag_ops_cong_w IS NOT NULL AND nr_seq_pag_ops_cong_w::text <> '') then
					nr_seq_camara_w := null;
				end if;
			end if;
		end if;
		
		if (current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%(type IS NOT NULL AND type::text <> '')) then
			if (current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type = 'CO') then
				ie_tipo_faturamento_w 	:= 'PI'; --Contratos entre cooperativas medicas
			elsif (current_setting('pls_faturamento_pck.ie_tipo_congenere_w')::pls_congenere.ie_tipo_congenere%type = 'OP') then
				ie_tipo_faturamento_w 	:= 'PO'; --Contratos entre operadoras congenere 
				ie_tipo_intercambio_w := coalesce(ie_tipo_intercambio_w,'X');
			end if;
		else
			ie_tipo_faturamento_w	:= 'P'; -- Padrao pos - contrato OPS 
		end if;
	end if;
	
	-- Verificar pagadores que incidem na regra 
	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_w,
		ie_entra_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (coalesce(nr_seq_regra_w, current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type) <> current_setting('pls_faturamento_pck.nr_seq_regra_fat_w')::pls_regra_faturamento.nr_sequencia%type) then
		ie_entra_regra_w := 'N';
	end if;
	
	-- Verificar se nao esta nas excecoes do lote
	if (ie_entra_regra_w = 'S') then
		ie_pagador_lote_w := 'S';
		if (qt_lote_fat_excecao_p > 0) then
			select	count(1)
			into STRICT	current_setting('pls_faturamento_pck.qt_registro_w')::integer
			from	pls_lote_fat_excecao a
			where	a.nr_seq_lote		= nr_seq_lote_p
			and (a.nr_seq_cooperativa	= nr_seq_congenere_w 	or coalesce(a.nr_seq_cooperativa::text, '') = '')
			and (a.nr_seq_contrato	= current_setting('pls_faturamento_pck.nr_seq_contrato_w')::pls_segurado.nr_seq_contrato%type 	or coalesce(a.nr_seq_contrato::text, '') = '')
			and (a.nr_seq_conta		= nr_seq_conta_p 	or coalesce(a.nr_seq_conta::text, '') = '')
			and (a.nr_seq_protocolo	= current_setting('pls_faturamento_pck.nr_seq_protocolo_w')::pls_lote_faturamento.nr_seq_protocolo%type	or coalesce(a.nr_seq_protocolo::text, '') = '')
			and (a.nr_seq_intercambio	= current_setting('pls_faturamento_pck.nr_seq_intercambio_w')::pls_segurado.nr_seq_intercambio%type 	or coalesce(a.nr_seq_intercambio::text, '') = '')
			and (a.cd_guia_referencia	= cd_guia_referencia_w 	or coalesce(a.cd_guia_referencia::text, '') = '')  LIMIT 1;
			
			if (current_setting('pls_faturamento_pck.qt_registro_w')::integer > 0) then
				ie_pagador_lote_w	:= 'N';
			end if;
		end if;
	else
		ie_pagador_lote_w	:= 'N';
	end if;
end if;

return ie_pagador_lote_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_faturamento_pck.obter_se_pagador_lote_fat ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_evento_p bigint, nr_seq_regra_fat_p pls_regra_faturamento.nr_sequencia%type, ie_evento_restritivo_p pls_parametro_faturamento.ie_evento_restritivo%type, sg_estado_p pessoa_juridica.sg_estado%type, qt_lote_fat_excecao_p bigint, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, ie_tipo_segurado_p pls_segurado.ie_tipo_segurado%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, nr_seq_ops_congenere_p pls_congenere.nr_sequencia%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, nr_seq_congenere_prot_p pls_congenere.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, tb_sg_estado_cong_p pls_util_cta_pck.t_varchar2_table_5, tb_ie_tipo_congenere_p pls_util_cta_pck.t_varchar2_table_5, tb_ie_nacional_cong_p pls_util_cta_pck.t_varchar2_table_5, tb_ie_fatura_congenere_coop_p pls_util_cta_pck.t_varchar2_table_10, tb_nr_seq_camara_cong_p pls_util_cta_pck.t_number_table, tb_nr_seq_pagador_cong_p pls_util_cta_pck.t_number_table, ie_tipo_protocolo_p pls_protocolo_conta.ie_tipo_protocolo%type) FROM PUBLIC;
