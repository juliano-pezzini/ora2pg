-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_faturamento_pck.gerar_lote_faturamento ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
BEGIN
PERFORM set_config('pls_faturamento_pck.ds_log_w', null, false);

	begin
	-- IMPORTANTE SER A PRIMEIRA ROTINA A SE EXECUTADA.
	CALL pls_faturamento_pck.verifica_lote_sem_session(cd_estabelecimento_p);
	
	-- pls_faturamento_pck.desfazer_lote_faturamento(Executar o desfazer antes da geracao afim de garantir que os campos serao limpos corretamente)
	CALL pls_faturamento_pck.desfazer_lote_faturamento(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- CARREGA_PARAMETROS
	CALL CALL CALL CALL CALL CALL pls_faturamento_pck.carrega_parametros(nr_seq_lote_p, cd_estabelecimento_p);

	-- pls_faturamento_pck.verificar_se_inicia_geracao(Verificar se ha alguma situacao que impeca a geracao do lote)
	CALL pls_faturamento_pck.verificar_se_inicia_geracao(nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);

	-- Marca como iniciado a geracao
	CALL pls_faturamento_pck.inicializa_geracao_lote(nr_seq_lote_p, nm_usuario_p);

	-- LIMPAR TABELAS TEMPORARIAS
	CALL CALL pls_faturamento_pck.limpar_tabelas_temporarias(nr_seq_lote_p);
	
	-- PREPARAR BASE
	CALL pls_faturamento_pck.preparar_base();
	
	-- pls_faturamento_pck.vincular_contas_fat(Vincular as contas para faturamento)
	CALL pls_faturamento_pck.vincular_contas_fat(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p, 'GL', null, null, null);
	
	-- Como a tabela e temporaria e possui indice, tem que atualizar 
	--pls_faturamento_pck.atualiza_estatistica('W_PLS_LOTE_FAT_PROC',100);
	--pls_faturamento_pck.atualiza_estatistica('W_PLS_LOTE_FAT_MAT',100);
	-- pls_faturamento_pck.tratar_fat_conta_fechada(Conceito fatura com conta fechada)
	CALL pls_faturamento_pck.tratar_fat_conta_fechada(nr_seq_lote_p, current_setting('pls_faturamento_pck.ie_conta_fechada_w')::pls_regra_faturamento.ie_conta_fechada%type, current_setting('pls_faturamento_pck.ie_apresentacao_prot_w')::pls_lote_faturamento.ie_apresentacao_prot%type, current_setting('pls_faturamento_pck.ie_somente_resumo_w')::pls_regra_faturamento.ie_somente_resumo%type, 'N', cd_estabelecimento_p, nm_usuario_p);

	-- pls_faturamento_pck.gerar_faturas_lote(Gerar as faturas)
	CALL pls_faturamento_pck.gerar_faturas_lote(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- pls_faturamento_pck.atualizar_vl_lote_fatura(Atualizar os valores)
	CALL pls_faturamento_pck.atualizar_vl_lote_fatura(nr_seq_lote_p, nm_usuario_p, 'N', 'N', 'N');

	-- pls_faturamento_pck.dividir_imped_cobr_fat(Dividir faturas com impedimento)
	CALL pls_faturamento_pck.dividir_imped_cobr_fat(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- DIVIDIR FATURAS POR PROTOCOLO
	CALL pls_faturamento_pck.dividir_faturas_prot(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- pls_faturamento_pck.dividir_faturas_empresas(Dividir faturas com regra de empresa)
	CALL pls_faturamento_pck.dividir_faturas_empresas(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- pls_faturamento_pck.dividir_faturas_prest(Ddividir faturas com regra de prestador)
	CALL pls_faturamento_pck.dividir_faturas_prest(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- pls_faturamento_pck.dividir_faturas_lote(Dividir faturas com regra de valor)
	CALL pls_faturamento_pck.dividir_faturas_lote(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- pls_faturamento_pck.limpar_faturas_vazias_lote(Limpar faturas vazias)
	CALL pls_faturamento_pck.limpar_faturas_vazias_lote(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	if (current_setting('pls_faturamento_pck.ie_aplicar_arredondamento_w')::pls_lote_faturamento.ie_aplicar_arredondamento%type = 'S') then
		-- AJUSTE DO VALOR DAS TAXAS NOS EVENTOS
		ajustar_tx_admin_lote(nr_seq_lote_p, nm_usuario_p);
		commit;
	end if;

	-- pls_faturamento_pck.atualizar_vl_lote_fatura(Atualizar os valores)
	CALL pls_faturamento_pck.atualizar_vl_lote_fatura(nr_seq_lote_p, nm_usuario_p, 'N', 'N', 'S');

	-- FINALIZAR_GERACAO_LOTE
	CALL pls_faturamento_pck.finalizar_geracao_lote(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);

	-- LIMPAR TABELAS TEMPORARIAS
	CALL CALL pls_faturamento_pck.limpar_tabelas_temporarias(nr_seq_lote_p);

	exception
		when others then
		begin
			CALL pls_faturamento_pck.desfazer_lote_faturamento(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);
			-- Restrito em 190, para que na concatenacao da macro nao gere uma string maior que 255
			CALL wheb_mensagem_pck.exibir_mensagem_abort(737118, 'ERRO='|| substr(sqlerrm, 0, 190));
		end;
	end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.gerar_lote_faturamento ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
