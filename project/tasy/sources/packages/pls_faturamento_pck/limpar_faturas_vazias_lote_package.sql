-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- pls_faturamento_pck.limpar_faturas_vazias_lote(limpar faturas vazias)
CREATE OR REPLACE PROCEDURE pls_faturamento_pck.limpar_faturas_vazias_lote ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
c01 CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_fatura_evento
	from	pls_fatura		a,
		pls_fatura_evento	b
	where	a.nr_sequencia	= b.nr_seq_fatura
	and	not exists (	SELECT	1
				from	pls_fatura_conta x
				where	x.nr_seq_fatura_evento = b.nr_sequencia)
	and	a.nr_seq_lote = nr_seq_lote_pc;
	
c02 CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_fatura
	from	pls_fatura 	a
	where	not exists (	SELECT	1
				from	pls_fatura_evento	x
				where	x.nr_seq_fatura		= a.nr_sequencia
				
union all

				select	1
				from	nota_fiscal		x
				where	x.nr_seq_fatura_ndc	= a.nr_sequencia
				
union all

				select	1
				from	nota_fiscal		x
				where	x.nr_seq_fatura		= a.nr_sequencia)
	and	a.nr_seq_lote = nr_seq_lote_pc;
	
current_setting('pls_faturamento_pck.c03')::CURSOR( CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	x.nr_sequencia nr_seq_pos_proc
	from	pls_conta_pos_proc	x
	where	x.nr_seq_lote_fat	= nr_seq_lote_pc
	and	x.ie_status_faturamento	in ('L', 'F')
	and	not exists (	SELECT	1
				from	pls_fatura_conta	c,
					pls_fatura_evento	b,
					pls_fatura		a
				where	a.nr_sequencia		= b.nr_seq_fatura
				and	b.nr_sequencia		= c.nr_seq_fatura_evento
				and	a.nr_seq_lote		= x.nr_seq_lote_fat
				and	c.nr_seq_conta		= x.nr_seq_conta);
				
current_setting('pls_faturamento_pck.c04')::CURSOR( CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	x.nr_sequencia nr_seq_pos_mat
	from	pls_conta_pos_mat	x
	where	x.nr_seq_lote_fat	= nr_seq_lote_pc
	and	x.ie_status_faturamento	in ('L', 'F')
	and	not exists (	SELECT	1
				from	pls_fatura_conta	c,
					pls_fatura_evento	b,
					pls_fatura		a
				where	a.nr_sequencia		= b.nr_seq_fatura
				and	b.nr_sequencia		= c.nr_seq_fatura_evento
				and	a.nr_seq_lote		= x.nr_seq_lote_fat
				and	c.nr_seq_conta		= x.nr_seq_conta);
BEGIN

CALL CALL CALL CALL CALL CALL pls_faturamento_pck.carrega_parametros(nr_seq_lote_p, cd_estabelecimento_p);

-- Deleta eventos que nao possuem contas
for r_c01_w in c01( nr_seq_lote_p ) loop
	delete 	FROM pls_fatura_evento
	where	nr_sequencia = r_c01_w.nr_seq_fatura_evento;
end loop;
commit;

-- Deleta faturas que nao possuem eventos
for r_c02_w in c02( nr_seq_lote_p ) loop
	delete	FROM pls_fatura_motivo_imp_cob
	where	nr_seq_fatura 		= r_c02_w.nr_seq_fatura;
	
	update	pls_fatura
	set	nr_seq_fat_divisao 	 = NULL,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_fat_divisao 	= r_c02_w.nr_seq_fatura;
	
	delete	FROM pls_fatura_atend
	where	nr_seq_fatura_orig 	= r_c02_w.nr_seq_fatura;
	
	delete	FROM pls_fatura
	where	nr_sequencia 		= r_c02_w.nr_seq_fatura;
end loop;
commit;

-- Caso tenha pos vinculado ao lote de faturamento mas nao esta em fatura
for r_c03_w in current_setting('pls_faturamento_pck.c03')::CURSOR( ( nr_seq_lote_p ) loop
	update	pls_conta_pos_proc
	set	nr_seq_evento_fat	 = NULL,
		nr_seq_lote_fat		 = NULL,
		ie_status_faturamento	= 'L',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_lote_fat		= nr_seq_lote_p
	and	nr_sequencia		= r_c03_w.nr_seq_pos_proc;
end loop;

-- Caso tenha pos vinculado ao lote de faturamento mas nao esta em fatura
for r_c04_w in current_setting('pls_faturamento_pck.c04')::CURSOR( ( nr_seq_lote_p ) loop
	update	pls_conta_pos_mat
	set	nr_seq_evento_fat	 = NULL,
		nr_seq_lote_fat		 = NULL,
		ie_status_faturamento	= 'L',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_lote_fat		= nr_seq_lote_p
	and	nr_sequencia		= r_c04_w.nr_seq_pos_mat;
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_faturamento_pck.limpar_faturas_vazias_lote ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
