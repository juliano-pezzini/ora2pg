-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

CREATE OR REPLACE FUNCTION pkg_name_utils.search_names_legacy (name text, name_type text default null) RETURNS SETOF PERSON_NAME_TABLE AS $body$
DECLARE
	person_name_r	person_name_row_score := person_name_row_score(null,null,null,null,null,null,null, null);
	name_types		text[];
	name_w			varchar(512);
	decode_w		varchar(512);
	c01 REFCURSOR;
	query_w			varchar(2000);

BEGIN
	name_w := '%' || replace(lower(name), ' ', '%') || '%';

	query_w :=	' select	nr_sequencia,' ||
					'		ds_given_name,' ||
					'		ds_component_name_1,' ||
					'		ds_component_name_2,' ||
					'		ds_component_name_3,' ||
					'		ds_family_name,' ||
					'		ds_type ';

	if (name_type IS NOT NULL AND name_type::text <> '') then
		name_types := pkg_name_utils.split(name_type,',');

		for i in 1..name_types.last loop
			decode_w := decode_w || ',''' || name_types(i) || ''',' || i;
		end loop;

		query_w := query_w || ' from	(select	a.*, ' ||
									'				row_number() over(partition by nr_sequencia order by decode(ds_type' || decode_w || ')) as ind ' ||
									'		from	person_name a) ' ||
									' where	lower(ds_given_name || ds_component_name_1 || ds_component_name_2 || ds_component_name_3 || ds_family_name) like :name ' ||
									' and	ind = 1 ';
	else
		query_w := query_w || ' from	person_name ' ||
									' where	lower(ds_given_name || ds_component_name_1 || ds_component_name_2 || ds_component_name_3 || ds_family_name) like :name ';
	end if;

	open c01 for EXECUTE query_w using name_w;
	loop
	fetch c01 into
		person_name_r.nr_sequencia,
		person_name_r.ds_given_name,
		person_name_r.ds_component_name_1,
		person_name_r.ds_component_name_2,
		person_name_r.ds_component_name_3,
		person_name_r.ds_family_name,
		person_name_r.ds_type;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		RETURN NEXT person_name_r;
		end;
	end loop;
	close c01;
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pkg_name_utils.search_names_legacy (name text, name_type text default null) FROM PUBLIC;
