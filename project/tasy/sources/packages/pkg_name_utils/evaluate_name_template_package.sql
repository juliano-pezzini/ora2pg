-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pkg_name_utils.evaluate_name_template (template text, bindings text) RETURNS varchar AS $body$
DECLARE


	splitted	split_table;
	splitted2	split_table;
	evaluated	varchar(2000);
BEGIN
	/*Not gonna be using template engine for now*/


	--evaluated := evaluate_template(template, bindings);

	splitted := pkg_name_utils.split(bindings,';');
	evaluated := template;
	for i in 1 .. splitted.count
	loop
		splitted2 := pkg_name_utils.split(splitted(i),'=');
		if (splitted2.last = 2) then
			evaluated	:= replace(evaluated, '${' || splitted2(1) || '.toUpperCase()}', upper(splitted2(2)));
			evaluated	:= replace(evaluated, '${' || splitted2(1) || '.toLowerCase()}', lower(splitted2(2)));
			evaluated	:= replace(evaluated, '${' || splitted2(1) || '.capitalize()}', initcap(splitted2(2)));
			evaluated	:= replace(evaluated, '${' || splitted2(1) || '.capitalizeFirstLetter()}', upper(substr(splitted2(2), 0, 1)));
			if ((splitted2(2) IS NOT NULL AND (splitted2(2))::text <> '')) then
				evaluated	:= replace(evaluated, '${' || splitted2(1) || '?' || splitted2(1) || '.take(1)+".":""}', substr(splitted2(2),1,1));
			end if;
			evaluated	:= replace(evaluated, '${' || splitted2(1) || '}', splitted2(2));
		end if;
	end loop;

	return evaluated;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pkg_name_utils.evaluate_name_template (template text, bindings text) FROM PUBLIC;
