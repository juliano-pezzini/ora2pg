-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



	/* Procedure para identificar as condições lógicas das fórmulas */

CREATE OR REPLACE PROCEDURE sup_gerar_planej_pck.obter_se_condicao_verdadeira ( ds_condicao_p text, cd_material_p bigint, ie_simular_p text, ie_retorno_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


	c001			integer;
	ds_sql_w			varchar(2000);
	vl_coluna_w		varchar(10);
	ds_retorno_w		varchar(1);
	ds_condicao_original_w		varchar(2000);
	ds_informacao_w		varchar(255);
	vl_informacao_w		double precision;
	vl_atributo_w		varchar(50);
	ds_condicao_w		varchar(2000);
	tam_condicao_w		bigint;
	qt_existe_w			bigint;
	ie_pos_separador_w		bigint;
	vl_retorno_atrib_w			bigint;

	
BEGIN

	ds_condicao_w				:= '';
	ds_condicao_original_w		:= ds_condicao_p;

	/* Verifica se existe algum atributo e/ou fórmula dentro da condição para substituir */

	select	count(*)
	into STRICT	qt_existe_w
	
	where	ds_condicao_original_w like '%#%';

	if (qt_existe_w = 0) then
		ds_condicao_w	:= ds_condicao_original_w;
	else
		begin

		/* Loop para quebrar a condição palavra por palavra, remontando-a com as palavras chaves substituidas */

		while(ds_condicao_original_w IS NOT NULL AND ds_condicao_original_w::text <> '') loop
			begin

			tam_condicao_w			:=	length(ds_condicao_original_w);
			ie_pos_separador_w		:=	position(' ' in ds_condicao_original_w);

			if (ie_pos_separador_w <> 0) then
				ds_informacao_w				:= substr(ds_condicao_original_w,1,(ie_pos_separador_w - 1));
				ds_condicao_original_w		:= substr(ds_condicao_original_w,(ie_pos_separador_w + 1),tam_condicao_w);
			else
				ds_informacao_w				:= ds_condicao_original_w;
				ds_condicao_original_w		:= '';
			end if;

			if (substr(ds_informacao_w,1,3) = '#A_') then
				begin

				/* Identifica se é uma simulação para buscar ou os valores informados pelo usuario para teste (caso seja simulação) */

				/* ou os valores reais gerados (caso não seja simulação) */

				if (ie_simular_p = 'S') then
					begin

					select	coalesce(max(vl_macro),0)
					into STRICT	vl_informacao_w
					from	w_sup_simula_form_planej
					where	ds_macro = ds_informacao_w
					and	nm_usuario = nm_usuario_p;

					end;
				else
					begin

					select	coalesce(max(vl_atributo),'0')
					into STRICT	vl_informacao_w
					from	w_valor_atributo
					where	nm_atributo = substr(ds_informacao_w,4,length(ds_informacao_w))
					and	cd_estabelecimento = cd_estabelecimento_p
					and	cd_material = cd_material_p
					and	nm_usuario = nm_usuario_p;

					end;
				end if;

				ds_informacao_w	:= replace(to_char(vl_informacao_w),',','.');

				end;
			elsif (substr(ds_informacao_w,1,3) = '#F_') then
				begin

				/* Identifica se é uma simulação para buscar ou os valores informados pelo usuario para teste (caso seja simulação) */

				/* ou os valores reais gerados (caso não seja simulação) */

				if (ie_simular_p = 'S') then
					begin

					select	coalesce(max(vl_macro),0)
					into STRICT	vl_informacao_w
					from	w_sup_simula_form_planej
					where	ds_macro = ds_informacao_w
					and	nm_usuario = nm_usuario_p;

					end;
				else
					begin

					select	coalesce(max(vl_formula),0)
					into STRICT	vl_informacao_w
					from	w_valor_formula
					where	nm_formula = substr(ds_informacao_w,4,length(ds_informacao_w))
					and	cd_estabelecimento = cd_estabelecimento_p
					and	cd_material = cd_material_p
					and	nm_usuario = nm_usuario_p;

					end;
				end if;

				ds_informacao_w	:= replace(to_char(vl_informacao_w),',','.');

				end;
			end if;

			ds_condicao_w	:= ds_condicao_w || ds_informacao_w;

			end;
		end loop; /*END WHILE*/
		end;
	end if;

	/* Monta o SQL para verificar se a condição é True ou False */

	ds_sql_w	:= 'select count(*) from dual where ' || ds_condicao_w;

	c001	:= dbms_sql.open_cursor;
	dbms_sql.parse(c001,ds_sql_w,dbms_sql.native);
	dbms_sql.define_column(c001, 1, vl_coluna_w, 10);
	vl_retorno_atrib_w	:= dbms_sql.execute(c001);
	vl_retorno_atrib_w	:= dbms_sql.fetch_rows(c001);
	dbms_sql.column_value(c001, 1, vl_coluna_w);
	dbms_sql.close_cursor(c001);

	if (vl_coluna_w = '0') then
		ie_retorno_p	:= 'N';
	else
		ie_retorno_p	:= 'S';
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_gerar_planej_pck.obter_se_condicao_verdadeira ( ds_condicao_p text, cd_material_p bigint, ie_simular_p text, ie_retorno_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
