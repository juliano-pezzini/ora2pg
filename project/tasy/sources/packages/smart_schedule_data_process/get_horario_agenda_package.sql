-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION smart_schedule_data_process.get_horario_agenda () RETURNS SETOF AGEINT_HOR_USUARIO_REC_TABLE AS $body$
BEGIN
    IF current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table.count > 0 THEN
      FOR current_setting('smart_schedule_data_process.i')::bigint IN current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table.first .. current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table.last LOOP
        IF (current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table.exists(current_setting('smart_schedule_data_process.i')::bigint)) AND (current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w.count > 0) THEN
          FOR x IN current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w.first .. current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w.last LOOP
            IF current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w.exists(x) THEN
              FOR z IN current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w[x].first .. current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w[x].last LOOP
                IF current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w[x].exists (z) THEN
                  FOR w IN current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w(x)(z).first .. current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w(x)(z).last LOOP
                    IF current_setting('smart_schedule_data_process.agenda_item_w')::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w(x)(z).exists (w) THEN
                      RETURN NEXT current_setting('smart_schedule_data_process.agenda_item_w'::agenda_item_table(current_setting('smart_schedule_data_process.i')::bigint).horario_agenda_w(x) (z) (w));
                    END IF;
                  END LOOP;
                END IF;
              END LOOP;
            END IF;
          END LOOP;
        END IF;
      END LOOP;
    END IF;
  END;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION smart_schedule_data_process.get_horario_agenda () FROM PUBLIC;
