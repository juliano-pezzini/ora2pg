-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Retorna a restricao que sera aplicada para o select dos procedimentos



CREATE OR REPLACE FUNCTION pls_taxa_intercambio_pck.pls_obter_restricao_regra_proc ( ie_opcao_p text, cursor_p integer, nr_seq_item_p pls_conta_proc.nr_sequencia%type, dados_taxa_intercambio_p dados_taxa_intercambio) RETURNS DADOS_FILTRO_INTERCAMBIO AS $body$
DECLARE


ds_restr_w	dados_filtro_intercambio;
							

BEGIN

	if (dados_taxa_intercambio_p.ie_beneficio_obito = 'S') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_tabela	:= ' ,pls_plano plano';
			ds_restr_w.ds_filtro	:= ' and seg.nr_seq_plano = plano.nr_sequencia' ||pls_util_pck.enter_w;
		end if;
	end if;
	
	if (ie_opcao_p = 'RESTRICAO') then
		--Se for informado um procedimento, entao restringe a pls_conta_proc_v pelo proprio procedimento

		if (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||	'and	proc.nr_sequencia = :nr_seq_proc_pc'|| pls_util_pck.enter_w;
		--Se nao for informado procedimento, entao monta a restricao, para que sejam considerados apenas os procedimentos

		--pertencentes as contas que haviam sido definidas na rotina vincula_conta_tipo_regra, 

		else
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro || 	'and	exists(select	1 '||pls_util_pck.enter_w||
								'	from	pls_aux_tx_inter aux'||pls_util_pck.enter_w||
								'	where	aux.nr_seq_conta = proc.nr_seq_conta'||pls_util_pck.enter_w||
								'	and	aux.ie_tipo_regra = :ie_tipo_regra_pc)'||pls_util_pck.enter_w;
		end if;
	else
		if (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') then
			dbms_sql.bind_variable(cursor_p, ':nr_seq_proc_pc', nr_seq_item_p);
		else
			dbms_sql.bind_variable(cursor_p, ':ie_tipo_regra_pc', dados_taxa_intercambio_p.ie_tipo_regra);
		end if;
	end if;
	--Se tiver informado um congenere superior, entao restringe por ele

	if (dados_taxa_intercambio_p.nr_seq_congenere_sup IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_congenere_sup::text <> '') then
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and	exists	(select	1'||pls_util_pck.enter_w||
									'	 from	pls_congenere cong'||pls_util_pck.enter_w||
									'	 where	cong.nr_sequencia 	= prot.nr_seq_congenere'||pls_util_pck.enter_w||
									'	 and	cong.nr_seq_congenere 	= :nr_seq_congenere_sup)'||pls_util_pck.enter_w;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_congenere_sup', dados_taxa_intercambio_p.nr_seq_congenere_sup);
		end if;
	end if;
	
	--Restringe  por grupo congenere, caso o mesmo for informado na regra

	if (dados_taxa_intercambio_p.nr_seq_grupo_congenere IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_grupo_congenere::text <> '') then
		if (ie_opcao_p =  'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and	exists (select	1'||pls_util_pck.enter_w||
									'		from	pls_cooperativa_grupo cong'||pls_util_pck.enter_w||
									'	 	where	cong.nr_seq_grupo 	= :nr_seq_grupo_congenere'||pls_util_pck.enter_w||
									'	 	and	cong.nr_seq_congenere 	= prot.nr_seq_congenere)'||pls_util_pck.enter_w;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo_congenere', dados_taxa_intercambio_p.nr_seq_grupo_congenere);
		end if;
	end if;
	
	--Restringe os procedimentos pertencentes a um grupo de servico, quando o mesmo for informado na regra

	if (dados_taxa_intercambio_p.nr_seq_grupo_servico IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_grupo_servico::text <> '') then
		
		if (ie_opcao_p = 'RESTRICAO') then
		
			if (pls_util_cta_pck.usar_novo_agrup = 'S') then
			
				ds_restr_w.ds_filtro := ds_restr_w.ds_filtro || 'and	exists (select	1' || pls_util_pck.enter_w ||
										'		from	pls_grupo_servico_tm grupo' || pls_util_pck.enter_w||
										'		where	grupo.nr_seq_grupo_servico = :nr_seq_grupo_servico' || pls_util_pck.enter_w ||
										'		and	grupo.ie_origem_proced = proc.ie_origem_proced' || pls_util_pck.enter_w ||
										'		and	grupo.cd_procedimento = proc.cd_procedimento) ';
			else			
				ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and	exists (select	1'||pls_util_pck.enter_w||
									'		from	table(pls_grupos_pck.obter_procs_grupo_servico( :nr_seq_grupo_servico,' ||pls_util_pck.enter_w||
									'		proc.ie_origem_proced, proc.cd_procedimento )) )'||pls_util_pck.enter_w;
			end if;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo_servico', dados_taxa_intercambio_p.nr_seq_grupo_servico);
		end if;		
	end if;
	
	--Restringe  pelo plano

	if (dados_taxa_intercambio_p.nr_seq_plano IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_plano::text <> '') then
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and seg.nr_seq_plano = :nr_seq_plano'||pls_util_pck.enter_w;
							
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_plano', dados_taxa_intercambio_p.nr_seq_plano);
		end if;	
	end if;
	
	--restringeir pelos produtos de intercambio de beneficio por obito

	if (dados_taxa_intercambio_p.ie_beneficio_obito = 'S') then
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and (plano.ie_seguro_obito = :ie_beneficio_obito)'||pls_util_pck.enter_w;
		else
			dbms_sql.bind_variable(cursor_p, ':ie_beneficio_obito', dados_taxa_intercambio_p.ie_beneficio_obito);
		end if;	
	end if;
	
	--Restringir para quando Beneficiario possui produto PCMSO

	if (dados_taxa_intercambio_p.ie_pcmso IS NOT NULL AND dados_taxa_intercambio_p.ie_pcmso::text <> '') then
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and nvl(seg.ie_pcmso,''N'') = :ie_pcmso'||pls_util_pck.enter_w;
							
		else
			dbms_sql.bind_variable(cursor_p, ':ie_pcmso', dados_taxa_intercambio_p.ie_pcmso);
		end if;	
	end if;
	
	if (dados_taxa_intercambio_p.nr_seq_congenere IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_congenere::text <> '') then
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and prot.nr_seq_congenere = :nr_seq_congenere'||pls_util_pck.enter_w;
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_congenere', dados_taxa_intercambio_p.nr_seq_congenere);
		end if;		
	end if;
	
	if (dados_taxa_intercambio_p.nr_seq_grupo_coop_seg IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_grupo_coop_seg::text <> '') then
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and seg.nr_seq_grupo_coop = :nr_seq_grupo_coop_seg'||pls_util_pck.enter_w;
							
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo_coop_seg', dados_taxa_intercambio_p.nr_seq_grupo_coop_seg);
		end if;		
	end if;
	
	if (dados_taxa_intercambio_p.nr_seq_grupo_rec IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_grupo_rec::text <> '') then
		
		if (ie_opcao_p = 'RESTRICAO') then
			ds_restr_w.ds_filtro	:= ds_restr_w.ds_filtro ||'and seg.nr_seq_grupo_rec  = :nr_seq_grupo_rec '||pls_util_pck.enter_w;
							
		else
			dbms_sql.bind_variable(cursor_p, ':nr_seq_grupo_rec ', dados_taxa_intercambio_p.nr_seq_grupo_rec);
		end if;		
	end if;
	
return ds_restr_w;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_taxa_intercambio_pck.pls_obter_restricao_regra_proc ( ie_opcao_p text, cursor_p integer, nr_seq_item_p pls_conta_proc.nr_sequencia%type, dados_taxa_intercambio_p dados_taxa_intercambio) FROM PUBLIC;
