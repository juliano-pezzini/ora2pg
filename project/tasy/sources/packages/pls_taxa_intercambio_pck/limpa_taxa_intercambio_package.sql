-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_taxa_intercambio_pck.limpa_taxa_intercambio ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type) AS $body$
DECLARE

					
tb_sequencia_w	dbms_sql.number_table;

C01 CURSOR(	nr_seq_lote_pc			pls_lote_protocolo_conta.nr_sequencia%type,
		nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		nr_seq_lote_processo_pc		pls_cta_lote_processo.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type,
		nr_seq_proc_pc			pls_conta_proc.nr_sequencia%type,
		nr_seq_analise_pc		pls_analise_conta.nr_sequencia%type)FOR	
		
	SELECT  proc.nr_sequencia
	from	pls_conta_proc_v	proc
	where	proc.nr_sequencia	= nr_seq_proc_pc
	and	proc.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	proc.ie_status_conta 	in ('A','L','P','U','F')
	and	proc.ie_status_protocolo in ('1','2','3','5')
	and	proc.ie_tipo_conta	= 'I'
	
union all

	SELECT 	proc.nr_sequencia
	from	pls_conta_proc_v	proc
	where	proc.nr_seq_conta	= nr_seq_conta_pc
	and	proc.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	proc.ie_status_conta 	in ('A','L','P','U','F')
	and	proc.ie_status_protocolo in ('1','2','3','5')
	
union all

	select 	proc.nr_sequencia
	from	pls_conta_proc_v	proc
	where	proc.nr_seq_protocolo	= nr_seq_protocolo_pc
	and	proc.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	proc.ie_status_conta 	in ('A','L','P','U','F')
	and	proc.ie_status_protocolo in ('1','2','3','5')
	and	proc.ie_tipo_conta	= 'I'
	
union all

	select 	proc.nr_sequencia
	from	pls_conta_proc_v	proc
	where	proc.nr_seq_lote_conta	= nr_seq_lote_pc
	and	proc.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	proc.ie_status_conta 	in ('A','L','P','U','F')
	and	proc.ie_status_protocolo in ('1','2','3','5')
	and	proc.ie_tipo_conta	= 'I'
	
union all

	select 	proc.nr_sequencia
	from	pls_conta_proc_v	proc
	where	proc.nr_seq_analise	= nr_seq_analise_pc
	and	proc.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	proc.ie_status_conta 	in ('A','L','P','U','F')
	and	proc.ie_status_protocolo in ('1','2','3','5')
	and	proc.ie_tipo_conta	= 'I'	
	
union all

	select	proc.nr_sequencia
	from	pls_conta_proc_v	proc
	where	coalesce(nr_seq_conta_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	and	coalesce(nr_seq_analise_pc::text, '') = ''
	and	proc.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	proc.ie_status_conta 	in ('A','L','P','U','F')
	and	proc.ie_status_protocolo in ('1','2','3','5')
	and	proc.ie_tipo_conta	= 'I'
	and	exists (select	1
			from	pls_cta_lote_proc_cta_temp lote
			where	lote.nr_seq_conta  		= proc.nr_seq_conta);
			
C02 CURSOR(	nr_seq_lote_pc			pls_lote_protocolo_conta.nr_sequencia%type,
		nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		nr_seq_lote_processo_pc		pls_cta_lote_processo.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type,
		nr_seq_mat_pc			pls_conta_mat.nr_sequencia%type,
		nr_seq_analise_pc		pls_analise_conta.nr_sequencia%type) FOR	
	
	SELECT  mat.nr_sequencia
	from	pls_conta_mat_v		mat
	where	mat.nr_sequencia		= nr_seq_mat_pc
	and	mat.ie_status		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	mat.ie_status_conta 	in ('A','L','P','U','F')
	and	mat.ie_status_protocolo in ('1','2','3','5')
	and	mat.ie_tipo_conta	= 'I'
	
union all

	SELECT 	mat.nr_sequencia
	from	pls_conta_mat_v		mat
	where	mat.nr_seq_conta		= nr_seq_conta_pc
	and	mat.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	mat.ie_status_conta 	in ('A','L','P','U','F')
	and	mat.ie_status_protocolo in ('1','2','3','5')
	and	mat.ie_tipo_conta	= 'I'
	
union all

	select 	mat.nr_sequencia
	from	pls_conta_mat_v		mat
	where	mat.nr_seq_protocolo	= nr_seq_protocolo_pc
	and	mat.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	mat.ie_status_conta 	in ('A','L','P','U','F')
	and	mat.ie_status_protocolo in ('1','2','3','5')
	and	mat.ie_tipo_conta	= 'I'
	
union all

	select 	mat.nr_sequencia
	from	pls_conta_mat_v		mat
	where	mat.nr_seq_lote_conta	= nr_seq_lote_pc
	and	mat.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	mat.ie_status_conta 	in ('A','L','P','U','F')
	and	mat.ie_status_protocolo in ('1','2','3','5')
	and	mat.ie_tipo_conta	= 'I'
	
union all

	select 	mat.nr_sequencia
	from	pls_conta_mat_v		mat
	where	mat.nr_seq_analise	= nr_seq_analise_pc
	and	mat.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	mat.ie_status_conta 	in ('A','L','P','U','F')
	and	mat.ie_status_protocolo in ('1','2','3','5')
	and	mat.ie_tipo_conta	= 'I'
	
union all

	select	mat.nr_sequencia
	from	pls_conta_mat_v		mat
	where	coalesce(nr_seq_conta_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	and 	coalesce(nr_seq_analise_pc::text, '') = ''
	and	mat.ie_status		in ('A', 'C', 'L', 'P', 'S', 'U')
	and	mat.ie_status_conta 	in ('A','L','P','U','F')
	and	mat.ie_status_protocolo in ('1','2','3','5')
	and	mat.ie_tipo_conta	= 'I'
	and	exists (select	1
			from	pls_cta_lote_proc_cta_temp lote
			where	lote.nr_seq_conta  		= mat.nr_seq_conta);
				

BEGIN
	--Testa a negacao do parametro, pois e um teste a menos feito

	--Quando nao for infromado a sequencia do procedimento, o cursor dos materiais deve ser executado

	--Quando nao for infromado a sequencia do mateial, o cursor dos procedimentos deve ser exevutado

	--Quando os dois nao forem informados, entao os dois devem ser executados

	if (coalesce(nr_seq_proc_p::text, '') = '') then
		open C02(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_mat_p, nr_seq_analise_p);
		loop	
			-- Limpa os registros da lista para que nao seja processado o mesmo registro mais de uma vez.

			tb_sequencia_w.delete;
			
			-- Executa o fetch de um numero determinado de linhas do cursor na lista.

			fetch C02 bulk collect into tb_sequencia_w limit pls_util_cta_pck.qt_registro_transacao_w;

			-- Quando o cursor nao tiver mais linhas entao sai do loop.

			exit when tb_sequencia_w.count = 0;
						
			--Faz update dos registros(delimitados)

			forall i in tb_sequencia_w.first..tb_sequencia_w.last
				update	pls_conta_mat	cp
				set	tx_intercambio		= 0,
					nr_seq_regra_tx_inter	 = NULL		
				where	cp.nr_sequencia		= tb_sequencia_w(i);
				commit;
		end loop;
		close C02;
	end if;
	
	--Testa a negacao do parametro, pois e um teste a menos feito

	--Quando nao for informado a sequencia do procedimento, o cursor dos materiais deve ser executado

	--Quando nao for informado a sequencia do material, o cursor dos procedimentos deve ser executado

	--Quando os dois nao forem informados, entao os dois devem ser executados

	if (coalesce(nr_seq_mat_p::text, '') = '') then
		
		open C01(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_proc_p, nr_seq_analise_p);
		loop
			-- Limpa os registros da lista para que nao seja processado o mesmo registro mais de uma vez.

			tb_sequencia_w.delete;
			
			-- Executa o fetch de um numero determinado de linhas do cursor na lista.

			fetch C01 bulk collect into tb_sequencia_w limit pls_util_cta_pck.qt_registro_transacao_w;
			-- Quando o cursor nao tiver mais linhas entao sai do loop.

			exit when tb_sequencia_w.count = 0;
			
			--Faz update dos registros(delimitados)

			forall i in tb_sequencia_w.first..tb_sequencia_w.last
				update	pls_conta_proc	cp
				set	tx_intercambio		= 0,
					nr_seq_regra_tx_inter	 = NULL	
	 			where	cp.nr_sequencia		= tb_sequencia_w(i);
				commit;
		end loop;
		close C01;
	end if;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_taxa_intercambio_pck.limpa_taxa_intercambio ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type) FROM PUBLIC;
