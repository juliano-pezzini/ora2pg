-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Essa procedure ira definir qual tipo de regra deve ser considerada para cada conta e 

--gravara tal informacao em uma tabela global temporaria



CREATE OR REPLACE PROCEDURE pls_taxa_intercambio_pck.vincula_conta_tipo_regra ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type ) AS $body$
DECLARE

					
tb_contas_w	dbms_sql.number_table;
tb_regras_w	dbms_sql.varchar2_table;

--Cursor que retorna a(s) conta(s) e o respectivo tipo da regra.

C01 CURSOR(	nr_seq_lote_pc			pls_lote_protocolo_conta.nr_sequencia%type,
		nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		nr_seq_lote_processo_pc		pls_cta_lote_processo.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type,
		nr_seq_analise_pc		pls_analise_conta.nr_sequencia%type) FOR
	
	SELECT 	conta.nr_sequencia,
		pls_taxa_intercambio_pck.obter_tipo_regra(conta.nr_seq_congenere) ie_tipo_regra
	from	pls_conta	conta
	where	nr_sequencia	= nr_seq_conta_pc
	
union all

	SELECT 	conta.nr_sequencia,
		pls_taxa_intercambio_pck.obter_tipo_regra(conta.nr_seq_congenere) ie_tipo_regra
	from	pls_conta		conta
	where	nr_seq_protocolo	= nr_seq_protocolo_pc
	
union all

	select 	conta.nr_sequencia,
		pls_taxa_intercambio_pck.obter_tipo_regra(conta.nr_seq_congenere) ie_tipo_regra
	from	pls_conta	conta,
		pls_protocolo_conta	prot
	where	conta.nr_seq_protocolo 	= prot.nr_sequencia
	and	prot.nr_seq_lote_conta	= nr_seq_lote_pc
	
union all

	select	nr_sequencia,
		pls_taxa_intercambio_pck.obter_tipo_regra(conta.nr_seq_congenere) ie_tipo_regra
	from	pls_conta	conta
	where	coalesce(nr_seq_conta_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	and 	coalesce(nr_seq_analise_pc::text, '') = ''
	and	exists (select	1
			from	pls_cta_lote_proc_cta_temp lote
			where	lote.nr_seq_conta  		= conta.nr_sequencia)
	
union all

	select 	conta.nr_sequencia,
		pls_taxa_intercambio_pck.obter_tipo_regra(conta.nr_seq_congenere) ie_tipo_regra
	from	pls_conta	conta
	where	nr_seq_analise	= nr_seq_analise_pc;
	

BEGIN
					
--Apaga todos os dados da tabela com as vinculacao entre contas e tipos de regra

CALL exec_sql_dinamico(nm_usuario_p, 'truncate table pls_aux_tx_inter');

open C01(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p, nr_seq_conta_p, nr_seq_analise_p);
loop
	--Limpa os registros das listas

	tb_regras_w.delete;
	tb_contas_w.delete;
	
	-- Executa o fetch de um numero determinado de linhas.

	fetch c01 bulk collect into tb_contas_w, tb_regras_w limit pls_util_cta_pck.qt_registro_transacao_w;
	
	-- Quando o cursor nao tiver mais linhas entao sai do loop.

	exit when tb_contas_w.count = 0;
				
	--insere os registros na tabela global temporaria 

	forall i in tb_contas_w.first..tb_contas_w.last
		insert 	into pls_aux_tx_inter
		values (   tb_contas_w(i),
			  tb_regras_w(i));
		commit;		
end loop;
close C01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_taxa_intercambio_pck.vincula_conta_tipo_regra ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type ) FROM PUBLIC;
