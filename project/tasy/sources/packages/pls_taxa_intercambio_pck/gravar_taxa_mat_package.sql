-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Obtem as os materiais elegiveis para a regra, para que os mesmo tenham os campos referentes ao intercambio atualizados



CREATE OR REPLACE PROCEDURE pls_taxa_intercambio_pck.gravar_taxa_mat ( nr_seq_mat_p pls_conta_mat.nr_sequencia%type, dados_taxa_intercambio_p dados_taxa_intercambio) AS $body$
DECLARE


ds_sql_w		varchar(4000);
ret_null_w		dados_filtro_intercambio;
ds_restr_w		dados_filtro_intercambio;

dt_calculo_w		timestamp;

qt_dias_envio_item_w	bigint;

var_cur_w		integer;
var_exec_w		integer;
var_retorno_w		integer;

qt_iteracoes_w		integer;

tb_seq_mat_w 		dbms_sql.number_table;		
tb_seq_regra_mat_w	dbms_sql.number_table;	
tb_pr_mat_w 		dbms_sql.number_table;	

ie_intercambio_w	varchar(1);
nr_seq_mat_w		pls_conta_mat_v.nr_sequencia%type;
ie_tipo_guia_w		pls_conta_mat_v.ie_tipo_guia%type;
ie_tipo_conta_w		pls_conta_mat_v.ie_tipo_conta%type;
dt_alta_w		pls_conta_mat_v.dt_alta_conta%type;
tx_intercambio_imp_w pls_conta_mat.tx_intercambio_imp%type;
dt_atendimento_conta_w	pls_conta_mat_v.dt_atendimento_conta%type;
dt_atendimento_w	pls_conta_mat_v.dt_atendimento%type;
dt_recebimento_fatura_w	pls_conta_mat_v.dt_recebimento_fatura%type;
dt_postagem_fatura_w	pls_conta_mat_v.dt_postagem_fatura%type;
nr_seq_segurado_w	pls_conta_mat_v.nr_seq_segurado%type;
ie_tipo_intercambio_w	pls_regra_intercambio.ie_tipo_intercambio%type;
ie_desconsiderar_taxa_a550_w pls_parametro_faturamento.ie_desconsiderar_taxa_a550%type;
ie_desconsiderar_taxa_a550_ww pls_parametro_faturamento.ie_desconsiderar_taxa_a550%type := 'N';


BEGIN

  select max(f.ie_desconsiderar_taxa_a550)
    into STRICT ie_desconsiderar_taxa_a550_w
    from pls_parametro_faturamento f;

--Obtem a restricao dos materiais

ds_restr_w	:=	pls_taxa_intercambio_pck.pls_obter_restricao_regra_mat('RESTRICAO', var_cur_w, nr_seq_mat_p, dados_taxa_intercambio_p);
							
ds_sql_w     := 	'select mat.nr_sequencia nr_seq_mat,'|| pls_util_pck.enter_w ||
			'	conta.ie_tipo_guia,'|| pls_util_pck.enter_w ||
			'	conta.ie_tipo_conta,'|| pls_util_pck.enter_w ||
			'	conta.dt_alta,'|| pls_util_pck.enter_w ||
			'	conta.dt_atendimento_referencia,'|| pls_util_pck.enter_w ||
			'	mat.dt_atendimento_referencia,'|| pls_util_pck.enter_w ||
			'	fatura.dt_recebimento_fatura,'|| pls_util_pck.enter_w ||
			'	fatura.dt_postagem,'|| pls_util_pck.enter_w ||
			'	conta.nr_seq_segurado, '|| pls_util_pck.enter_w ||
			'	pls_obter_tipo_intercambio(nvl(conta.nr_seq_congenere, prot.nr_seq_congenere), conta.cd_estabelecimento) ie_tipo_intercambio, '|| pls_util_pck.enter_w ||
			'	mat.tx_intercambio_imp '|| pls_util_pck.enter_w ||
			'from	pls_conta_mat mat, '|| pls_util_pck.enter_w ||
			'	pls_conta conta, '|| pls_util_pck.enter_w ||
			'	pls_protocolo_conta prot, '|| pls_util_pck.enter_w ||
			'	ptu_fatura fatura, '|| pls_util_pck.enter_w ||
			'	pls_segurado seg '|| pls_util_pck.enter_w ||
			'	'||ds_restr_w.ds_tabela||pls_util_pck.enter_w||
			'where	1 = 1'|| pls_util_pck.enter_w ||
			'and	prot.nr_sequencia = conta.nr_seq_protocolo '|| pls_util_pck.enter_w ||
			'and	seg.nr_sequencia = conta.nr_seq_segurado '|| pls_util_pck.enter_w ||
			'and	fatura.nr_sequencia = conta.nr_seq_fatura '|| pls_util_pck.enter_w ||
			'and	conta.nr_sequencia = mat.nr_seq_conta '|| pls_util_pck.enter_w ||
			'	'||ds_restr_w.ds_filtro||pls_util_pck.enter_w||
			'and	conta.ie_tipo_conta = ''I'''||pls_util_pck.enter_w||
	 		'and	mat.ie_status in (''A'', ''C'', ''L'', ''P'', ''S'', ''U'' ) '|| pls_util_pck.enter_w ||
			'and	conta.ie_status in (''A'',''L'',''F'',''P'',''U'')'|| pls_util_pck.enter_w ||
			'and	prot.ie_status in (''1'',''2'',''3'',''5'')'|| pls_util_pck.enter_w ||
			'and	mat.nr_seq_regra_tx_inter is null'|| pls_util_pck.enter_w||
			'and 	fatura.dt_postagem between inicio_dia(:dt_inicio_vigencia_pc) and fim_dia(:dt_fim_vigencia_pc)'|| pls_util_pck.enter_w;

-- Abrir um novo cursor

var_cur_w := dbms_sql.open_cursor;
	begin
		-- Criar o cursor

		dbms_sql.parse(var_cur_w, ds_sql_w, 1);

		--Atualiza as binds que serao utilizadas no select

		dbms_sql.bind_variable(var_cur_w, ':dt_inicio_vigencia_pc', dados_taxa_intercambio_p.dt_inicio_vigencia);
		dbms_sql.bind_variable(var_cur_w, ':dt_fim_vigencia_pc', dados_taxa_intercambio_p.dt_fim_vigencia);
		ret_null_w	:= pls_taxa_intercambio_pck.pls_obter_restricao_regra_mat('BIND', var_cur_w, nr_seq_mat_p, dados_taxa_intercambio_p);
								
		--Executar select  dinamico

		dbms_sql.define_column(var_cur_w, 1, nr_seq_mat_w);
		dbms_sql.define_column(var_cur_w, 2, ie_tipo_guia_w,2);
		dbms_sql.define_column(var_cur_w, 3, ie_tipo_conta_w,10 );
		dbms_sql.define_column(var_cur_w, 4, dt_alta_w);
		dbms_sql.define_column(var_cur_w, 5, dt_atendimento_conta_w);
		dbms_sql.define_column(var_cur_w, 6, dt_atendimento_w);
		dbms_sql.define_column(var_cur_w, 7, dt_recebimento_fatura_w);
		dbms_sql.define_column(var_cur_w, 8, dt_postagem_fatura_w);
		dbms_sql.define_column(var_cur_w, 9, nr_seq_segurado_w);
		dbms_sql.define_column(var_cur_w, 10, ie_tipo_intercambio_w,2);
		dbms_sql.define_column(var_cur_w, 11, tx_intercambio_imp_w);
		var_exec_w := dbms_sql.execute(var_cur_w);
	
		qt_iteracoes_w := 0;
		
		loop
			var_retorno_w := dbms_sql.fetch_rows(var_cur_w);

		exit when var_retorno_w = 0;
			-- Pegar os dados do SQL dinamico

			dbms_sql.column_value(var_cur_w, 1, nr_seq_mat_w);
			dbms_sql.column_value(var_cur_w, 2, ie_tipo_guia_w);
			dbms_sql.column_value(var_cur_w, 3, ie_tipo_conta_w );
			dbms_sql.column_value(var_cur_w, 4, dt_alta_w);
			dbms_sql.column_value(var_cur_w, 5, dt_atendimento_conta_w);
			dbms_sql.column_value(var_cur_w, 6, dt_atendimento_w);
			dbms_sql.column_value(var_cur_w, 7, dt_recebimento_fatura_w);
			dbms_sql.column_value(var_cur_w, 8, dt_postagem_fatura_w);
			dbms_sql.column_value(var_cur_w, 9, nr_seq_segurado_w);
			dbms_sql.column_value(var_cur_w, 10, ie_tipo_intercambio_w);
			dbms_sql.column_value(var_cur_w, 11, tx_intercambio_imp_w);
			
			 if((coalesce(tx_intercambio_imp_w,0) = 0) and (ie_desconsiderar_taxa_a550_w = 'S')) then
				ie_desconsiderar_taxa_a550_ww := 'S';
			 else
				ie_desconsiderar_taxa_a550_ww := 'N';
			end if;
			
			
			if (dados_taxa_intercambio_p.ie_tipo_intercambio = 'A') or (dados_taxa_intercambio_p.ie_tipo_intercambio = ie_tipo_intercambio_w) and (ie_desconsiderar_taxa_a550_ww = 'N') then
			
				dt_calculo_w	:= pls_taxa_intercambio_pck.obter_data_item(ie_tipo_guia_w, ie_tipo_conta_w, dt_alta_w, dt_atendimento_conta_w,
							dt_atendimento_w, null, nr_seq_mat_w);
															
				-- Na regra e possivel definir o tipo de data que sera utilizado para calcular o prazo de envio do item. 

				-- Caso for a data de recebimento da Fatura.					

				if (dados_taxa_intercambio_p.ie_tipo_data = 'R') then
					-- Calcular o prazo de envio do procedimento pela data de Recimbento.

					qt_dias_envio_item_w := (trunc(dt_recebimento_fatura_w) - dt_calculo_w);
				
				--No caso de considerar a data de postagem da fatura

				elsif (dados_taxa_intercambio_p.ie_tipo_data = 'P') then
					
					-- Calcular o prazo de envio do procedimento pela data da postagem.

					qt_dias_envio_item_w := (trunc(dt_postagem_fatura_w) - dt_calculo_w);
				end if;
				
				-- Valida a regra de carteira

				if (dados_taxa_intercambio_p.nr_seq_regra_atend_cart IS NOT NULL AND dados_taxa_intercambio_p.nr_seq_regra_atend_cart::text <> '') then
					ie_intercambio_w 	:= coalesce(pls_valida_regra_cart(nr_seq_segurado_w, dados_taxa_intercambio_p.nr_seq_regra_atend_cart), 'S');
				else
					ie_intercambio_w	:= 'S';
				end if;

				-- Se o material foi enviado dentro do prazo entao alimenta o retorno com o valor da taxa.

				if	(((qt_dias_envio_item_w <= dados_taxa_intercambio_p.qt_dias_envio_taxa) or (coalesce(dados_taxa_intercambio_p.qt_dias_envio_taxa::text, '') = '')) and (ie_intercambio_w = 'S')) then
						
					tb_seq_mat_w(qt_iteracoes_w) 		:= nr_seq_mat_w;
					tb_seq_regra_mat_w(qt_iteracoes_w) 	:= dados_taxa_intercambio_p.nr_sequencia;
					tb_pr_mat_w(qt_iteracoes_w) 		:= dados_taxa_intercambio_p.pr_taxa;
					
					if (qt_iteracoes_w = pls_util_cta_pck.qt_registro_transacao_w) then
					--Atualiza a informacao da regra de intercambrio e taxa nos materiais

					-- faz o update atraves do forall

						CALL pls_taxa_intercambio_pck.atualiza_intercambio_item(tb_seq_mat_w, tb_seq_regra_mat_w, tb_pr_mat_w, 'M');		
						qt_iteracoes_w := 0;
						tb_seq_mat_w.delete;
						tb_seq_regra_mat_w.delete;
						tb_pr_mat_w.delete;
					else
						qt_iteracoes_w := qt_iteracoes_w + 1;
					end if;
				end if;	
			end if;
		end loop;		--Envia eventuais registros restantes das listas para fazer update na pls_conta_mat.
		CALL pls_taxa_intercambio_pck.atualiza_intercambio_item(tb_seq_mat_w, tb_seq_regra_mat_w, tb_pr_mat_w, 'M');
		tb_seq_mat_w.delete;
		tb_seq_regra_mat_w.delete;
		tb_pr_mat_w.delete;
		qt_iteracoes_w := 0;
	end;
dbms_sql.close_cursor(var_cur_w);
		
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_taxa_intercambio_pck.gravar_taxa_mat ( nr_seq_mat_p pls_conta_mat.nr_sequencia%type, dados_taxa_intercambio_p dados_taxa_intercambio) FROM PUBLIC;
