-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tax_dmed_ir_pck.load_data_refund (responsible_code_p tax_dmed_dados_gerais.cd_responsavel_pagamento%type, beneficiary_code_p tax_dmed_dados_gerais.cd_beneficiario%type default null) AS $body$
DECLARE

      c_refund CURSOR FOR
          SELECT  sum(x.total_amount) total_amount,
                  x.refund_name refund_name,
                  x.refund_cpf_cnpj refund_cpf_cnpj
          from    (
              SELECT  1 union_order,
                      d.vl_pago total_amount,
                      fis_remove_special_characters(substr(obter_nome_pf(d.cd_pf_prestador_remb), 1, 255)) refund_name,
                      p.nr_cpf refund_cpf_cnpj,
                      CASE coalesce(WHEN(select 1  where d.cd_responsavel_pagamento = d.cd_beneficiario)::text, '') = '' THEN  'N'  ELSE 'S' END  ie_rtop
              from    tax_dmed_controle       c,
                      tax_dmed_lote_mensal    m,
                      tax_dmed_dados_gerais   d,
                      pessoa_fisica           p
              where   m.nr_seq_lote               = c.nr_seq_lote
              and     d.nr_seq_lote_mensal        = m.nr_sequencia
              and     d.cd_responsavel_pagamento  = responsible_code_p
              and     p.cd_pessoa_fisica          = to_char(d.cd_pf_prestador_remb)          
              and     c.nr_sequencia              = file_control_sequence
              and     d.ie_prestador              = 'N'
              and     d.cd_responsavel_pagamento  <> coalesce(d.cd_pf_prestador_remb, 0)
              and     ((coalesce(beneficiary_code_p::text, '') = '' and d.cd_responsavel_pagamento  = d.cd_beneficiario) 
              or (d.cd_beneficiario = beneficiary_code_p and d.cd_responsavel_pagamento <> d.cd_beneficiario))              
              and     (d.cd_pf_prestador_remb IS NOT NULL AND d.cd_pf_prestador_remb::text <> '')
              and     coalesce(d.cd_cnpj_prestador_remb::text, '') = ''
              
union all

              select  2 union_order,
                      d.vl_pago total_amount,
                      fis_remove_special_characters(substr(p.ds_razao_social, 1, 255)) refund_name,
                      p.cd_cgc refund_cpf_cnpj,
                      CASE coalesce(WHEN(select 1  where d.cd_responsavel_pagamento = d.cd_beneficiario)::text, '') = '' THEN  'N'  ELSE 'S' END  ie_rtop
              from    tax_dmed_controle       c,
                      tax_dmed_lote_mensal    m,
                      tax_dmed_dados_gerais   d,
                      pessoa_juridica		    p
              where   m.nr_seq_lote               = c.nr_seq_lote
              and     d.nr_seq_lote_mensal        = m.nr_sequencia            
              and     d.cd_responsavel_pagamento  = responsible_code_p
              and     p.cd_cgc                    = to_char(d.cd_cnpj_prestador_remb)
              and     c.nr_sequencia              = file_control_sequence
              and     d.ie_prestador              = 'N'
              and     d.cd_responsavel_pagamento  <> coalesce(d.cd_pf_prestador_remb, 0)
              and     ((coalesce(beneficiary_code_p::text, '') = '' and d.cd_responsavel_pagamento = d.cd_beneficiario) 
              or (d.cd_beneficiario = beneficiary_code_p and d.cd_responsavel_pagamento <> d.cd_beneficiario))
              and     (d.cd_cnpj_prestador_remb IS NOT NULL AND d.cd_cnpj_prestador_remb::text <> '')
              and     coalesce(d.cd_pf_prestador_remb::text, '') = ''
          ) x
          where     x.ie_rtop = CASE WHEN coalesce(beneficiary_code_p::text, '') = '' THEN  'S'  ELSE 'N' END 
          group by  x.refund_name, 
                    x.refund_cpf_cnpj
          order by  (tax_dmed_ir_pck.remove_special_characters_cpf(x.refund_cpf_cnpj))::numeric;

      refund_vector   c_refund%rowtype;
      record_refund   varchar(255) := data_separator || '%s' || data_separator || '%s' || data_separator || '%s' || data_separator || data_separator;
      record_type     varchar(10) := 'RTOP';

BEGIN

      if (beneficiary_code_p IS NOT NULL AND beneficiary_code_p::text <> '') then
              record_type := 'RDTOP';
      end if;
      record_refund := record_type || record_refund;

      open c_refund;
      loop
          fetch c_refund into refund_vector;
          EXIT WHEN NOT FOUND; /* apply on c_refund */
          begin
            if (refund_vector.total_amount > 0) then
              CALL tax_dmed_ir_pck.add_data_file(utl_lms.format_message(record_refund, refund_vector.refund_cpf_cnpj, 
                                                                  refund_vector.refund_name, 
                                                                  tax_dmed_ir_pck.shape_dmed_default_number(refund_vector.total_amount)), record_type);
            else
              CALL tax_dmed_ir_pck.add_data_file(utl_lms.format_message(record_refund, refund_vector.refund_cpf_cnpj,
                                                                  refund_vector.refund_name, 
                                                                  ''), record_type);
            end if;
          end;
      end loop;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tax_dmed_ir_pck.load_data_refund (responsible_code_p tax_dmed_dados_gerais.cd_responsavel_pagamento%type, beneficiary_code_p tax_dmed_dados_gerais.cd_beneficiario%type default null) FROM PUBLIC;
