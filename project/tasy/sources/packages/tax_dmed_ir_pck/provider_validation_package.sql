-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tax_dmed_ir_pck.provider_validation (document_sequence_p titulo_receber.nr_titulo%type, establishment_code_p titulo_receber.cd_estabelecimento%type, response_p INOUT text, response_index_p INOUT bigint, batch_monthly_sequence_p tax_dmed_lote_mensal.nr_sequencia%type) AS $body$
DECLARE

    c_provider_data CURSOR FOR
      SELECT  r.ie_pls,
              coalesce(l.dt_recebimento, r.dt_emissao) dt_receivement,
              r.ie_situacao ie_situation,
              r.nr_titulo nr_document,
              r.nr_seq_classe nr_seq_class,
              a.nr_atendimento nr_attendance,
              substr(obter_nome_pf(coalesce(obter_pessoa_titulo_data(r.nr_titulo, l.dt_recebimento, 'C'), r.cd_pessoa_fisica)),1,255) responsible_name,
              substr(obter_nome_pf(a.cd_pessoa_fisica),1,255) beneficiary_name,
              coalesce((SELECT max(x.cd_tipo_recebimento) from adiantamento x where x.nr_adiantamento = l.nr_adiantamento), l.cd_tipo_recebimento) cd_type_receipt
      FROM titulo_receber r
LEFT OUTER JOIN atendimento_paciente a ON (r.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
WHERE r.cd_estabelecimento = establishment_code_p   and r.nr_titulo = document_sequence_p group by  r.ie_pls,
                coalesce(l.dt_recebimento, r.dt_emissao),
                r.ie_situacao,
                r.nr_titulo,
                r.nr_seq_classe,
                r.cd_pessoa_fisica,
                l.dt_recebimento,
                l.cd_tipo_recebimento,
                l.nr_adiantamento,
                a.cd_pessoa_fisica,
                a.nr_atendimento;

    response_w varchar(4000);
    response_aux_w varchar(4000);
    index_w bigint := 0;
    is_error_w boolean;


BEGIN

    for provider_data_row in c_provider_data loop
      begin
        index_w := index_w + 1;
        is_error_w := false;

        response_aux_w := 'Pagador: ' || provider_data_row.responsible_name || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);

        if (provider_data_row.beneficiary_name IS NOT NULL AND provider_data_row.beneficiary_name::text <> '') then
          response_aux_w :=  response_aux_w || 'Beneficiario: ' || provider_data_row.beneficiary_name || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
        end if;

        response_aux_w := response_aux_w || 'Data Liquidacao/Emissao: ' || to_char(provider_data_row.dt_receivement, 'dd/mm/rrrr') || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);

        if (coalesce(provider_data_row.ie_pls, 'N') <> 'N') then
          response_aux_w := response_aux_w || 'O campo IE_PLS esta marcado na funcao Manutencao de Titulos a Receber.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if (provider_data_row.dt_receivement not between get_initial_date and get_final_date) then
          response_aux_w := response_aux_w || 'O Titulo a receber nao tem a data de recebimento, ou a data de emissao nao esta dentro do mes referencia estabelecido na regra do lote mensal.' || batch_monthly_sequence_p || ' da DMED/IR.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if (provider_data_row.ie_situation = '3') then
          response_aux_w := response_aux_w || 'O titulo a receber esta com a situacao de "Cancelado".' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if (provider_data_row.ie_situation = '5' and tax_dmed_ir_pck.exists_receipt_receive(provider_data_row.nr_document) = 0) then
          response_aux_w := response_aux_w || 'O titulo a receber esta com o status de "Titulo Transferido" e nao existe recibo.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if (tax_dmed_ir_pck.in_array(provider_data_row.cd_type_receipt, 'R') = 0) then
          response_aux_w := response_aux_w || 'O titulo possui um tipo de recibo diferente das Regras cadastradas (tipo de recibo).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if ((provider_data_row.nr_seq_class IS NOT NULL AND provider_data_row.nr_seq_class::text <> '') and tax_dmed_ir_pck.in_array(provider_data_row.nr_seq_class, 'C') = 0) then
          response_aux_w := response_aux_w || 'O titulo possui uma classe diferente das Regras cadastradas (Classe de titulo).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if((tax_dmed_ir_pck.is_empty('A') <> 1) and (tax_dmed_ir_pck.exists_linked_payment_unit(provider_data_row.nr_attendance) = 0)) then
          response_aux_w := response_aux_w || 'O titulo nao possui unidade de pagamento vinculada favor verificar a regra de setor atendimento' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          is_error_w := true;
        end if;

        if (not is_error_w) then
          response_aux_w := response_aux_w || 'Documento nao possui inconsistencias' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
        end if;

        response_w := response_w || response_aux_w || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);

      end;
    end loop;

    response_index_p := index_w;
    response_p := response_w;
  end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tax_dmed_ir_pck.provider_validation (document_sequence_p titulo_receber.nr_titulo%type, establishment_code_p titulo_receber.cd_estabelecimento%type, response_p INOUT text, response_index_p INOUT bigint, batch_monthly_sequence_p tax_dmed_lote_mensal.nr_sequencia%type) FROM PUBLIC;
