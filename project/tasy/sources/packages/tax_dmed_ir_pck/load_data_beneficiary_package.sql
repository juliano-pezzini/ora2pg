-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tax_dmed_ir_pck.load_data_beneficiary (ie_provider_p tax_dmed_dados_gerais.ie_prestador%type, responsible_code_p tax_dmed_dados_gerais.cd_responsavel_pagamento%type, beneficiary_initials_p text, responsible_cpf_p text) AS $body$
DECLARE

      c_beneficiary CURSOR FOR
          SELECT  max(dmed_obter_grau_parente(d.nr_documento, d.cd_beneficiario)) degree_kinship,
                  fis_remove_special_characters(substr(obter_nome_pf(d.cd_beneficiario), 1, 255)) beneficiary_name,
                  CASE WHEN coalesce(p.nr_cpf, '')=responsible_cpf_p THEN  ''  ELSE coalesce(p.nr_cpf, '') END  beneficiary_cpf,
                  to_char(p.dt_nascimento,'yyyymmdd') date_birth,
                  d.cd_beneficiario beneficiary_code,
                  sum(d.vl_pago) total_amount,
                  sum(CASE WHEN coalesce(d.cd_cnpj_prestador_remb::text, '') = '' THEN  coalesce((SELECT  d.vl_pago                                                                                                                                      where   (d.cd_responsavel_pagamento <> d.cd_beneficiario                                                                  and     ((coalesce(d.cd_pf_prestador_remb, 0) = 0) or d.cd_responsavel_pagamento = d.cd_pf_prestador_remb))), 0)  ELSE 0 END ) total_beneficiary
          from    tax_dmed_controle       c,
                  tax_dmed_lote_mensal    m,
                  tax_dmed_dados_gerais   d,
                  pessoa_fisica           p
          where   m.nr_seq_lote               = c.nr_seq_lote
          and     d.nr_seq_lote_mensal        = m.nr_sequencia
          and     p.cd_pessoa_fisica          = to_char(d.cd_beneficiario)
          and     d.cd_responsavel_pagamento  = responsible_code_p
          and     d.cd_responsavel_pagamento  <> d.cd_beneficiario
          and     c.nr_sequencia              = file_control_sequence
          and     d.ie_prestador              = ie_provider_p
          group by p.nr_cpf, 
                    d.cd_beneficiario,
                    p.dt_nascimento,
                    d.cd_beneficiario
          order by  (tax_dmed_ir_pck.remove_special_characters_cpf(CASE WHEN coalesce(p.nr_cpf, '0')=responsible_cpf_p THEN  '0'  ELSE coalesce(p.nr_cpf, '0') END ))::numeric , 
                    to_char(p.dt_nascimento,'yyyymmdd') asc;

      beneficiary_vector  c_beneficiary%rowtype;
      record_beneficiary  varchar(255) := '%s' || current_setting('tax_dmed_ir_pck.data_separator')::varchar(1) || '%s' || current_setting('tax_dmed_ir_pck.data_separator')::varchar(1) || '%s' || current_setting('tax_dmed_ir_pck.data_separator')::varchar(1) || '%s' || current_setting('tax_dmed_ir_pck.data_separator')::varchar(1) || '%s' || '%s' || current_setting('tax_dmed_ir_pck.data_separator')::varchar(1);
      degree_kinship_w    varchar(255) := '';

BEGIN
      open c_beneficiary;
      loop
          fetch c_beneficiary into beneficiary_vector;
          EXIT WHEN NOT FOUND; /* apply on c_beneficiary */
          begin
              if (beneficiary_vector.total_amount > 0 ) then
                if ie_provider_p = 'N' then
                    degree_kinship_w := beneficiary_vector.degree_kinship || current_setting('tax_dmed_ir_pck.data_separator')::varchar(1);
                end if;

                CALL tax_dmed_ir_pck.add_data_file(utl_lms.format_message(record_beneficiary,beneficiary_initials_p,
                                                                        beneficiary_vector.beneficiary_cpf, 
                                                                        beneficiary_vector.date_birth, 
                                                                        beneficiary_vector.beneficiary_name, 
                                                                        degree_kinship_w,
                                                                        tax_dmed_ir_pck.shape_dmed_default_number(beneficiary_vector.total_beneficiary)), beneficiary_initials_p);

                if ie_provider_p = 'N' then
                    CALL tax_dmed_ir_pck.load_data_refund(responsible_code_p, beneficiary_vector.beneficiary_code);
                end if;
              end if;
          end;
      end loop;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tax_dmed_ir_pck.load_data_beneficiary (ie_provider_p tax_dmed_dados_gerais.ie_prestador%type, responsible_code_p tax_dmed_dados_gerais.cd_responsavel_pagamento%type, beneficiary_initials_p text, responsible_cpf_p text) FROM PUBLIC;
