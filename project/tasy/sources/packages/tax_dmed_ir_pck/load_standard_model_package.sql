-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tax_dmed_ir_pck.load_standard_model () AS $body$
BEGIN
      PERFORM set_config('tax_dmed_ir_pck.dynamic_query_template_1', 'select  r.nr_titulo document_sequence,'                                                                                                || 
                                       q'[ substr(nvl(tax_dmed_ir_pck.single_entry(a.nr_atendimento), nvl(obter_pessoa_titulo_data(r.nr_titulo, l.dt_recebimento, 'C'), r.cd_pessoa_fisica)), 1, 10) responsible_code,]'       || 
                                       q'[ substr(nvl(a.cd_pessoa_fisica, nvl(obter_pessoa_titulo_data(r.nr_titulo, l.dt_recebimento, 'C'), r.cd_pessoa_fisica)), 1, 10) beneficiary_code,]'                                   ||  
                                          'sum(:value_expression) total_amount,'                                                                                          || 
                                          'sum(nvl(l.vl_juros, 0)) interest_amount,'                                                                                      || 
                                          'sum(nvl(l.vl_multa, 0)) fine_amount,'                                                                                          || 
                                          'sum(nvl(l.vl_glosa, 0)) gloss_amount,'                                                                                         || 
                                          'sum(nvl(l.vl_nota_credito, 0)) credit_note_amount, '                                                                           || 
                                          'max(0) trading_fee_amount, '                                                                                                   || 
                                          'sum(nvl(l.vl_rec_maior, 0)) higher_amount,'                                                                                    || 
                                          'nvl(l.dt_recebimento, r.dt_emissao) date_document,'                                                                            || 
                                          'a.nr_atendimento attendance_code,'                                                                                             || 
                                          'max(null) refund_provider_pf,'                                                                                                 ||
                                          'max(null) refund_provider_pj,'                                                                                                 ||
                                          'min(null) data_code,'                                                                                                          || 
                                          'max(0) additional_index,'                                                                                                      ||
                                          'min(null) item_value'                                                                                                          ||					  	
                                  ' from   atendimento_paciente a,'                                                                                                       || 
                                          'pessoa_fisica p,'                                                                                                              || 
                                          'titulo_receber r,'                                                                                                             || 
                                          'titulo_receber_liq l'                                                                                                          || 
                                          ':table_expression '                                                                                                            || 
                                  'where  r.cd_estabelecimento = :reference_establishment '                                                                               || 
                                  'and    r.nr_atendimento = a.nr_atendimento(+) '                                                                                        || 
                                  'and    r.nr_titulo = l.nr_titulo(+) '                                                                                                  || 
                                  'and    r.cd_pessoa_fisica = p.cd_pessoa_fisica ', false);
      PERFORM set_config('tax_dmed_ir_pck.dynamic_query_template_2', ':connections_expression '                                                                                                                     ||
                                    q'[and nvl(r.ie_pls, 'N') = 'N' ]'                                                                                                           || 
                                      'and tax_dmed_ir_pck.exists_intermediary(r.nr_titulo) = 0'                                                                                 || 
                                    q'[and to_date(nvl(l.dt_recebimento, r.dt_emissao), 'dd/mm/rrrr') between tax_dmed_ir_pck.get_initial_date() and tax_dmed_ir_pck.get_final_date() ]'                     || 
                                    q'[and (r.ie_situacao not in ('3', '5') or (r.ie_situacao = '5' and tax_dmed_ir_pck.exists_receipt_receive(r.nr_titulo) > 0)) ]'             || 
                                    q'[and tax_dmed_ir_pck.in_array(:field_receipt, 'R') = 1 ]'                                                                                  || 
                                    q'[and ((r.nr_seq_classe is null) or (tax_dmed_ir_pck.in_array(r.nr_seq_classe, 'C') = 1)) ]'                                                || 
                                    q'[and ((tax_dmed_ir_pck.is_empty('A') = 1) or (tax_dmed_ir_pck.exists_linked_payment_unit(a.nr_atendimento) > 0)) ]'                        ||
                                    q'[and ((r.ie_origem_titulo is null) or (tax_dmed_ir_pck.is_empty('O') = 1) or (tax_dmed_ir_pck.in_array(r.ie_origem_titulo, 'O') = 1)) ]'   || 
                                    ':clauses_expression '                                                                                                                       || 
                                      'group by r.nr_titulo,'                                                                                                                    || 
                                              q'[substr(nvl(tax_dmed_ir_pck.single_entry(a.nr_atendimento), nvl(obter_pessoa_titulo_data(r.nr_titulo, l.dt_recebimento, 'C'), r.cd_pessoa_fisica)), 1, 10),]' || 
                                              q'[substr(nvl(a.cd_pessoa_fisica, nvl(obter_pessoa_titulo_data(r.nr_titulo, l.dt_recebimento, 'C'), r.cd_pessoa_fisica)), 1, 10),]'|| 
                                              'nvl(l.dt_recebimento, r.dt_emissao),'                                                                                             || 
                                              'a.nr_atendimento', false);
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tax_dmed_ir_pck.load_standard_model () FROM PUBLIC;
