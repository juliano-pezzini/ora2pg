-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tax_dmed_ir_pck.operator_validation (document_sequence_p titulo_receber.nr_titulo%type, establishment_code_p titulo_receber.cd_estabelecimento%type, response_p INOUT text, response_index_p INOUT bigint, batch_monthly_sequence_p tax_dmed_lote_mensal.nr_sequencia%type) AS $body$
DECLARE

    c_operator_data CURSOR FOR
        SELECT  x.nr_seq_launch_type,
                sum(x.vl_item) vl_item,
                x.ie_type_hiring,
                x.cd_payer_person,
                x.cd_cgc_manager,
                x.nr_seq_class_ops,
                x.ie_tribute_origin,
                x.ie_type_item_monthly_fee,
                x.ie_insured_type,
                x.cd_cgc,
                x.ie_origin_title,
                x.ie_situation,
                x.nr_sequence,
                max(x.nr_document) nr_document,
                x.cd_receipt_type,
                x.nr_seq_origin,
                x.dt_document,
                x.validation_code,
                max(x.ie_receive) ie_receive
        from (SELECT d.nr_seq_tipo_lanc nr_seq_launch_type,
                        d.vl_item vl_item,
                        d.ie_tipo_contratacao ie_type_hiring,
                        d.cd_pessoa_pagador cd_payer_person,
                        d.cd_cgc_administradora cd_cgc_manager,
                        d.nr_seq_classif_ops nr_seq_class_ops,
                        d.ie_origem_tributo ie_tribute_origin,
                        d.ie_tipo_item_mensalidade ie_type_item_monthly_fee,
                        d.ie_tipo_segurado ie_insured_type,
                        r.cd_cgc cd_cgc,
                        r.ie_origem_titulo ie_origin_title,
                        r.ie_situacao ie_situation,
                        l.nr_sequencia nr_sequence,
                        l.nr_titulo nr_document,
                        l.cd_tipo_recebimento cd_receipt_type,
                        l.nr_seq_liq_origem nr_seq_origin,
                        l.dt_recebimento dt_document,
                        d.nr_seq_item_mens validation_code,
                        'S' ie_receive
                from    fis_dados_dmed d,                                                                    
                        titulo_receber r,                                                                    
                        titulo_receber_liq l                                                                 
                where   d.nr_titulo_rec = r.nr_titulo                                                         
                and     coalesce(d.nr_titulo_pag::text, '') = ''                                                                 
                and     l.nr_sequencia = d.nr_seq_baixa_rec                                                     
                and     r.nr_titulo = l.nr_titulo
                and     r.cd_pessoa_fisica = d.cd_pessoa_pagador
                and     r.cd_estabelecimento = establishment_code_p                                 
                and     r.nr_titulo = document_sequence_p                    
                
union

                select  null nr_seq_launch_type,
                        d.vl_item vl_item,
                        d.ie_tipo_contratacao ie_type_hiring,
                        null cd_payer_person,
                        d.cd_cgc_administradora cd_cgc_manager,
                        null nr_seq_class_ops,
                        null ie_tribute_origin,
                        null ie_type_item_monthly_fee,
                        null ie_insured_type,
                        p.cd_cgc cd_cgc,
                        null ie_origin_title,
                        p.ie_situacao ie_situation,
                        c.nr_sequencia nr_sequence,
                        c.nr_titulo nr_document,
                        null cd_receipt_type,
                        null nr_seq_origin,
                        p.dt_liquidacao dt_document,
                        d.nr_contrato validation_code,
                        'N' ie_receive                                                           
                from    fis_dados_dmed d,                                                                       
                        titulo_pagar p,                                                                         
                        titulo_pagar_baixa c                                                                    
                where   c.nr_titulo = d.nr_titulo_pag                                                           
                and     c.nr_sequencia = d.nr_seq_baixa_pag                                                     
                and     coalesce(c.nr_seq_baixa_origem::text, '') = ''                                                           
                and     p.nr_titulo = c.nr_titulo      
                and     p.cd_pessoa_fisica = d.cd_pessoa_pagador                                                         
                and     p.cd_estabelecimento = establishment_code_p                                                              
                and     p.nr_titulo = document_sequence_p) x
        group by        x.nr_seq_launch_type,
                        x.ie_type_hiring,
                        x.cd_payer_person,
                        x.cd_cgc_manager,
                        x.nr_seq_class_ops,
                        x.ie_tribute_origin,
                        x.ie_type_item_monthly_fee,
                        x.ie_insured_type,
                        x.cd_cgc,
                        x.ie_origin_title,
                        x.ie_situation,
                        x.nr_sequence,
                        x.cd_receipt_type,
                        x.nr_seq_origin,
                        x.dt_document,
                        x.validation_code;

    document_count_w bigint;
    response_w varchar(4000);
    response_aux_w varchar(4000);
    index_w bigint := 0;
    is_error_w boolean;


BEGIN

    for operator_data_row in c_operator_data loop
      begin
        index_w := index_w + 1;
        is_error_w := false;

        if (operator_data_row.ie_receive = 'S') then
          response_aux_w := 'Mensalidade: ' || operator_data_row.validation_code || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          response_aux_w :=  response_aux_w || 'Data Recebimento: ' || to_char(operator_data_row.dt_document,'dd/mm/rrrr') || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);

          if (operator_data_row.dt_document not between get_initial_date and get_final_date) then
            response_aux_w := response_aux_w || 'O Titulo a receber nao tem a data de recebimento ou nao esta dentro do mes referencia estabelecido na regra do lote mensal' || batch_monthly_sequence_p || '.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          end if;

          if (operator_data_row.vl_item = 0 ) then
            response_aux_w := response_aux_w || 'O titulo a receber possui valor zerado.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);  --- 
            is_error_w := true;
          end if;

          if (operator_data_row.nr_seq_origin IS NOT NULL AND operator_data_row.nr_seq_origin::text <> '') then
            response_aux_w := response_aux_w || 'O campo nr_seq_liq_origin esta nulo.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          select  count(1)
          into STRICT    document_count_w
          from    titulo_receber_liq x 
          where   x.nr_titulo = operator_data_row.nr_document
          and     x.nr_seq_liq_origem = operator_data_row.nr_sequence;

          if (document_count_w > 0) then
            response_aux_w := response_aux_w || 'O titulo possui liquidacoes pendentes.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (tax_dmed_ir_pck.is_insured_valid(operator_data_row.ie_type_hiring, operator_data_row.cd_payer_person, operator_data_row.cd_cgc_manager, operator_data_row.cd_cgc, operator_data_row.ie_origin_title) = 0) then
            response_aux_w := response_aux_w || 'O titulo a receber nao possui seguro valido.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if ((operator_data_row.ie_insured_type IS NOT NULL AND operator_data_row.ie_insured_type::text <> '') and tax_dmed_ir_pck.in_array(operator_data_row.ie_insured_type, 'B') = 0) then 
            response_aux_w := response_aux_w || 'O titulo possui um tipo de beneficiario diferente das Regras cadastradas (tipo de beneficiario).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (tax_dmed_ir_pck.in_array(operator_data_row.cd_receipt_type, 'R') = 0) then
            response_aux_w := response_aux_w || 'O titulo possui um tipo de recibo diferente das Regras cadastradas (tipo de recibo).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if((tax_dmed_ir_pck.is_empty('T') = 0) and tax_dmed_ir_pck.in_array(operator_data_row.ie_type_hiring, 'T') = 0) then
            response_aux_w := response_aux_w || 'O titulo possui um tipo de contratacao diferente das Regras cadastradas (tipo de contratacao).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (operator_data_row.ie_situation = '3') then
            response_aux_w := response_aux_w || 'O titulo a receber esta com a situacao de "Cancelado".' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (operator_data_row.ie_situation = '5' and tax_dmed_ir_pck.exists_receipt_receive(operator_data_row.nr_document) = 0) then
            response_aux_w := response_aux_w || 'O titulo a receber esta com o status de "Titulo Transferido" e nao existe recibo.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if ((operator_data_row.nr_seq_class_ops IS NOT NULL AND operator_data_row.nr_seq_class_ops::text <> '') and tax_dmed_ir_pck.in_array(operator_data_row.nr_seq_class_ops, 'C') = 0) then
            response_aux_w := response_aux_w || 'O titulo possui uma classe diferente das Regras cadastradas (Classe).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if ((operator_data_row.ie_tribute_origin IS NOT NULL AND operator_data_row.ie_tribute_origin::text <> '') and tax_dmed_ir_pck.in_array(operator_data_row.ie_tribute_origin, 'O') = 0) then
            response_aux_w := response_aux_w || 'O titulo possui uma origem diferente das Regras cadastradas (Origem de Titulo).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if ((operator_data_row.ie_type_item_monthly_fee IS NOT NULL AND operator_data_row.ie_type_item_monthly_fee::text <> '') and tax_dmed_ir_pck.in_array(operator_data_row.ie_type_item_monthly_fee, 'I') = 0) then
            response_aux_w := response_aux_w || 'O titulo possui uma tipo de mensalidade diferente das Regras cadastradas (tipo de mensalidade).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if((operator_data_row.nr_seq_launch_type is not  null) and (tax_dmed_ir_pck.in_array(operator_data_row.nr_seq_launch_type, 'D', operator_data_row.ie_type_item_monthly_fee) = 0)) then
            response_aux_w := response_aux_w || 'O titulo possui uma tipo de mensalidade diferente das Regras cadastradas (Regras Adicionais).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

        else
          response_aux_w := 'Contrato: ' || operator_data_row.validation_code || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
          response_aux_w :=  response_aux_w || 'Data Liquidacao: ' || operator_data_row.dt_document || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);

          select count(1)
          into STRICT document_count_w
                  from   titulo_pagar_baixa x 
                  where  x.nr_titulo = operator_data_row.nr_document
                  and    x.nr_seq_baixa_origem = operator_data_row.nr_sequence;

          if (document_count_w > 0) then
            response_aux_w := response_aux_w || 'O titulo possui liquidacoes pendentes.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (operator_data_row.dt_document not between get_initial_date and get_final_date) then
            response_aux_w := response_aux_w || 'O Titulo a receber nao tem a data de liquidacao ou nao esta dentro do mes referencia estabelecido na regra do lote mensal ' || batch_monthly_sequence_p || '.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (tax_dmed_ir_pck.is_insured_valid(operator_data_row.ie_type_hiring, operator_data_row.cd_payer_person, operator_data_row.cd_cgc_manager, operator_data_row.cd_cgc, 3) = 0) then
            response_aux_w := response_aux_w || 'O titulo nao possui seguro valido.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;
          
          if((tax_dmed_ir_pck.is_empty('T') = 0) and tax_dmed_ir_pck.in_array(operator_data_row.ie_type_hiring, 'T') = 0) then
            response_aux_w := response_aux_w || 'O titulo possui um tipo de contratacao diferente das Regras cadastradas (tipo de contratacao).' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;

          if (operator_data_row.ie_situation = 'C') then
            response_aux_w := response_aux_w || 'O titulo esta com situacao Cancelado.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
            is_error_w := true;
          end if;
                  
        end if;

        if (not is_error_w) then
          response_aux_w := response_aux_w || 'Documento nao possui inconsistencias.' || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
        end if;
      end;

      response_w := response_w || response_aux_w || current_setting('tax_dmed_ir_pck.line_break_w')::varchar(2);
    end loop;

    response_index_p := index_w;
    response_p := response_w;
  end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tax_dmed_ir_pck.operator_validation (document_sequence_p titulo_receber.nr_titulo%type, establishment_code_p titulo_receber.cd_estabelecimento%type, response_p INOUT text, response_index_p INOUT bigint, batch_monthly_sequence_p tax_dmed_lote_mensal.nr_sequencia%type) FROM PUBLIC;
