-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tax_dmed_ir_pck.run_dynamic_sql (array_p INOUT response_reference, value_expression_p text default 'nvl(l.vl_recebido, r.vl_titulo)', table_expression_p text default '', connections_expression_p text default '', clauses_expression_p text default '', field_receipt_p text default 'l.cd_tipo_recebimento', alternative_query_p text default null, procedure_name_p text default '') AS $body$
DECLARE

      dynamic_query_template_1_w varchar(4000);
      dynamic_query_template_2_w varchar(4000);

BEGIN
    begin
      if coalesce(alternative_query_p::text, '') = '' then        
          dynamic_query_template_1_w := replace(current_setting('tax_dmed_ir_pck.dynamic_query_template_1')::varchar(4000),   ':value_expression',        value_expression_p);
          dynamic_query_template_1_w := replace(dynamic_query_template_1_w, ':reference_establishment', current_setting('tax_dmed_ir_pck.reference_establishment')::tax_dmed_lote.cd_estabelecimento%type);
          dynamic_query_template_1_w := replace(dynamic_query_template_1_w, ':table_expression',        table_expression_p);
          dynamic_query_template_2_w := replace(current_setting('tax_dmed_ir_pck.dynamic_query_template_2')::varchar(4000),   ':connections_expression',  connections_expression_p);
          dynamic_query_template_2_w := replace(dynamic_query_template_2_w, ':clauses_expression',      clauses_expression_p);
          dynamic_query_template_2_w := replace(dynamic_query_template_2_w, ':field_receipt',           field_receipt_p);
          EXECUTE dynamic_query_template_1_w || dynamic_query_template_2_w bulk collect into STRICT array_p;
          CALL tax_dmed_ir_pck.write_execution_log(dynamic_query_template_1_w , dynamic_query_template_2_w, procedure_name_p, array_p);
      else
          EXECUTE alternative_query_p bulk collect into STRICT array_p;
          CALL tax_dmed_ir_pck.write_execution_log(alternative_query_p, '', procedure_name_p, array_p);
      end if;
    exception
    when others then
      array_p := null;
    end;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tax_dmed_ir_pck.run_dynamic_sql (array_p INOUT response_reference, value_expression_p text default 'nvl(l.vl_recebido, r.vl_titulo)', table_expression_p text default '', connections_expression_p text default '', clauses_expression_p text default '', field_receipt_p text default 'l.cd_tipo_recebimento', alternative_query_p text default null, procedure_name_p text default '') FROM PUBLIC;
