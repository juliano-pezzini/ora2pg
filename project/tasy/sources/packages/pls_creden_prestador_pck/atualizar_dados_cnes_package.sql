-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_creden_prestador_pck.atualizar_dados_cnes ( nr_seq_credenciamento_p pls_creden_prestador.nr_sequencia%type, nr_seq_cnes_api_estab_p pls_creden_prestador.nr_seq_cnes_api_estab%type, nm_usuario_p pls_creden_prestador.nm_usuario%type) AS $body$
DECLARE


nr_seq_tipo_credenciamento_w	pls_creden_prestador.nr_seq_tipo_credenciamento%type;
nr_ddi_telefone_w		pls_creden_prestador.nr_ddi_telefone%type;
nr_telefone_w			pls_creden_prestador.nr_telefone%type;
ie_corpo_clinico_w		pls_tipo_cred_prestador.ie_corpo_clinico%type;
ie_colaboradores_w		pls_tipo_cred_prestador.ie_colaboradores%type;
ie_leitos_w			pls_tipo_cred_prestador.ie_leitos%type;
ie_equipamentos_w		pls_tipo_cred_prestador.ie_equipamentos%type;
qt_regra_colab_w		integer;
nr_count_w			integer;
ie_inserir_colab_w		varchar(1);

C01 CURSOR FOR
	SELECT	a.ds_razao_social,
		a.nm_fantasia,
		a.nr_cnpj,
		a.ds_logradouro,
		a.nr_logradouro,
		a.ds_complemento,
		a.ds_bairro,
		a.cd_cep,
		a.cd_municipio_ibge,
		a.ds_municipio,
		a.sg_estado,
		a.dt_atualizacao_cnes,
		a.ds_email,
		a.ds_latitude,
		a.ds_longitude,
		(	SELECT	min(x.nr_sequencia)
			from	cnes_api_contato x
			where	x.nr_seq_estabelecimento = a.nr_sequencia) nr_seq_contato
	from	cnes_api_estabelecimento a
	where	a.nr_sequencia	= nr_seq_cnes_api_estab_p;

C02 CURSOR(	nr_seq_tipo_credenciamento_pc	pls_creden_prestador.nr_seq_tipo_credenciamento%type ) FOR
	SELECT	a.ie_tipo_profissional,
		a.nr_seq_tipo_vinc_colab,
		a.nr_seq_tipo_vinc_med,
		c.cd_cbo
	from	pls_cnes_cred_profissional a,
		pls_cnes_cred_prof_cbo b,
		cbo_saude c
	where	a.nr_sequencia	= b.nr_seq_regra
	and	c.nr_sequencia	= b.nr_seq_cbo_saude
	and	exists (SELECT	1
			from	pls_cnes_cred_prof_tp_cred x
			where	x.nr_seq_regra	= a.nr_sequencia
			and	x.nr_seq_tipo_credenciamento	= nr_seq_tipo_credenciamento_pc)
	
union all

	select	a.ie_tipo_profissional,
		a.nr_seq_tipo_vinc_colab,
		a.nr_seq_tipo_vinc_med,
		c.cd_cbo
	from	pls_cnes_cred_profissional a,
		pls_cnes_cred_prof_cbo b,
		cbo_saude c
	where	a.nr_sequencia	= b.nr_seq_regra
	and	c.nr_sequencia	= b.nr_seq_cbo_saude
	and	not exists (	select	1
				from	pls_cnes_cred_prof_tp_cred x
				where	x.nr_seq_regra	= a.nr_sequencia);

C03 CURSOR(	nr_seq_estabelecimento_pc	cnes_api_estabelecimento.nr_sequencia%type,
		cd_cbo_pc			cbo_saude.cd_cbo%type) FOR
	SELECT	a.nm_profissional,
		a.nr_cpf,
		a.nr_cns
	from	cnes_api_profissionais a
	where	a.nr_seq_estabelecimento	= nr_seq_estabelecimento_pc
	and	exists (SELECT	1
			from	cnes_api_prof_cbo x
			where	x.nr_seq_profissional	= a.nr_sequencia
			and	x.cd_cbo		= cd_cbo_pc);

C04 CURSOR(	nr_seq_estabelecimento_pc	cnes_api_estabelecimento.nr_sequencia%type ) FOR
	SELECT	ie_leito,
		qt_leito,
		qt_leito_sus
	from	cnes_api_leitos
	where	nr_seq_estabelecimento	= nr_seq_estabelecimento_pc
	and	(ie_leito IS NOT NULL AND ie_leito::text <> '');

C05 CURSOR(	nr_seq_estabelecimento_pc	cnes_api_estabelecimento.nr_sequencia%type ) FOR
	SELECT	ie_tipo_equipamento,
		ie_equipamento,
		qt_equipamento,
		qt_equipamento_uso,
		ie_disponivel_sus
	from	cnes_api_equipamentos
	where	nr_seq_estabelecimento	= nr_seq_estabelecimento_pc
	and	(ie_equipamento IS NOT NULL AND ie_equipamento::text <> '');
BEGIN

begin
select	a.nr_seq_tipo_credenciamento,
	coalesce(b.ie_corpo_clinico,'N') ie_corpo_clinico,
	coalesce(b.ie_colaboradores,'N') ie_colaboradores,
	coalesce(b.ie_leitos,'N') ie_leitos,
	coalesce(b.ie_equipamentos,'N') ie_equipamentos,
	(	select	count(1)
		from	pls_tipo_cred_prest_colab x
		where	x.nr_seq_tipo_credenciamento = b.nr_sequencia) qt_regra_colab
into STRICT	nr_seq_tipo_credenciamento_w,
	ie_corpo_clinico_w,
	ie_colaboradores_w,
	ie_leitos_w,
	ie_equipamentos_w,
	qt_regra_colab_w
from	pls_creden_prestador a,
	pls_tipo_cred_prestador b
where	b.nr_sequencia	= a.nr_seq_tipo_credenciamento
and	a.nr_sequencia	= nr_seq_credenciamento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1207549); --Registro invalido
end;

for c01_w in C01 loop
	begin
	if (c01_w.nr_seq_contato IS NOT NULL AND c01_w.nr_seq_contato::text <> '') then
		select	coalesce(nr_ddi_telefone,55),
			nr_ddd_telefone||nr_telefone
		into STRICT	nr_ddi_telefone_w,
			nr_telefone_w
		from	cnes_api_contato
		where	nr_sequencia	= c01_w.nr_seq_contato;
	else
		nr_ddi_telefone_w	:= null;
		nr_telefone_w		:= null;
	end if;
	
	update	pls_creden_prestador
	set	ds_razao_social		= c01_w.ds_razao_social,
		nm_fantasia		= c01_w.nm_fantasia,
		nr_cnpj			= c01_w.nr_cnpj,
		ds_endereco		= c01_w.ds_logradouro,
		nr_endereco		= c01_w.nr_logradouro,
		ds_complemento		= c01_w.ds_complemento,
		ds_bairro		= c01_w.ds_bairro,
		cd_cep			= c01_w.cd_cep,
		cd_municipio_ibge	= c01_w.cd_municipio_ibge,
		ds_municipio		= c01_w.ds_municipio,
		sg_estado		= c01_w.sg_estado,
		dt_atualizacao_cnes	= c01_w.dt_atualizacao_cnes,
		ds_email		= c01_w.ds_email,
		ds_latitude		= c01_w.ds_latitude,
		ds_longitude		= c01_w.ds_longitude,
		nr_ddi_telefone		= nr_ddi_telefone_w,
		nr_telefone		= nr_telefone_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_credenciamento_p;
	end;
end loop;

if (ie_corpo_clinico_w = 'S' or ie_colaboradores_w = 'S') then
	for c02_w in C02(nr_seq_tipo_credenciamento_w) loop
		begin
		
		for c03_w in C03(nr_seq_cnes_api_estab_p, c02_w.cd_cbo) loop
			begin
			
			if (c02_w.ie_tipo_profissional = '1' and ie_colaboradores_w = 'S') then --Colaborador
				
				if (qt_regra_colab_w = 0) then
					ie_inserir_colab_w	:= 'S';
				else
					select	count(*)
					into STRICT	nr_count_w
					from	pls_tipo_cred_prest_colab
					where	nr_seq_tipo_credenciamento	= nr_seq_tipo_credenciamento_w
					and	nr_seq_tipo_vinculo		= c02_w.nr_seq_tipo_vinc_colab;
					
					if (nr_count_w > 0) then
						ie_inserir_colab_w	:= 'S';
					else
						ie_inserir_colab_w	:= 'N';
					end if;
				end if;
				
				if (ie_inserir_colab_w = 'S') then
					insert	into	pls_cred_prest_colaborador(	nr_sequencia, nr_seq_credenciamento, dt_atualizacao,
							nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_tipo_vinculo, nm_pessoa, nr_cpf )
						values (nextval('pls_cred_prest_colaborador_seq'), nr_seq_credenciamento_p, clock_timestamp(),
							nm_usuario_p, clock_timestamp(), nm_usuario_p,
							c02_w.nr_seq_tipo_vinc_colab, c03_w.nm_profissional, c03_w.nr_cpf );
				end if;
			elsif (c02_w.ie_tipo_profissional = '2' and ie_corpo_clinico_w = 'S') then --Corpo clinico
				insert	into	pls_cred_prest_med(	nr_sequencia, nr_seq_credenciamento, dt_atualizacao,
						nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						nr_seq_vinculo, nm_pessoa, nr_cpf,
						cd_cbo, nr_cartao_nac_sus )
					values (nextval('pls_cred_prest_med_seq'), nr_seq_credenciamento_p, clock_timestamp(),
						nm_usuario_p, clock_timestamp(), nm_usuario_p,
						c02_w.nr_seq_tipo_vinc_med, c03_w.nm_profissional, c03_w.nr_cpf,
						c02_w.cd_cbo, c03_w.nr_cns );
			end if;
			
			end;
		end loop;
		
		end;
	end loop;
end if;

if (ie_leitos_w = 'S') then
	for c04_w in C04(nr_seq_cnes_api_estab_p) loop
		begin
		
		insert	into	pls_cred_prest_leito(	nr_sequencia, nr_seq_credenciamento, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				ie_leito, qt_leito, qt_leito_sus )
			values (nextval('pls_cred_prest_leito_seq'), nr_seq_credenciamento_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				c04_w.ie_leito, c04_w.qt_leito, c04_w.qt_leito_sus );
		
		end;
	end loop;
end if;

if (ie_equipamentos_w = 'S') then
	for c05_w in C05(nr_seq_cnes_api_estab_p) loop
		begin
		
		insert	into	pls_cred_prest_equipamento(	nr_sequencia, nr_seq_credenciamento, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				ie_tipo_equipamento, ie_equipamento, qt_equipamento,
				qt_equipamento_uso, ie_disponivel_sus )
			values (nextval('pls_cred_prest_equipamento_seq'), nr_seq_credenciamento_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				c05_w.ie_tipo_equipamento, c05_w.ie_equipamento, c05_w.qt_equipamento,
				c05_w.qt_equipamento_uso, c05_w.ie_disponivel_sus );
		
		end;
	end loop;
end if;

update	pls_creden_prestador
set	nr_seq_cnes_api_estab	= nr_seq_cnes_api_estab_p,
	ie_status		= '1',
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_sequencia		= nr_seq_credenciamento_p;

CALL CALL pls_creden_prestador_pck.gerar_alerta_evento(	nr_seq_credenciamento_p => nr_seq_credenciamento_p,
			ie_tipo_processo_p => 8,
			nm_usuario_p => nm_usuario_p,
			ie_commit_p => 'S');

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_creden_prestador_pck.atualizar_dados_cnes ( nr_seq_credenciamento_p pls_creden_prestador.nr_sequencia%type, nr_seq_cnes_api_estab_p pls_creden_prestador.nr_seq_cnes_api_estab%type, nm_usuario_p pls_creden_prestador.nm_usuario%type) FROM PUBLIC;
