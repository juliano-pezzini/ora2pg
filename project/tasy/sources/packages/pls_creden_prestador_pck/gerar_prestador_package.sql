-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_creden_prestador_pck.gerar_prestador ( nr_seq_credenciamento_p pls_creden_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

ie_tipo_solicitante_w	pls_creden_prestador.ie_tipo_solicitante%type;
cd_estabelecimento_w	pls_creden_prestador.cd_estabelecimento%type;
cd_cgc_w		pls_creden_prestador.cd_cgc%type;
ie_matriz_filial_w	pls_creden_prestador.ie_matriz_filial%type;
nr_cnpj_matriz_w	pls_creden_prestador.nr_cnpj_matriz%type;
nr_seq_prestador_w	pls_prestador.nr_sequencia%type;
nr_seq_prest_princ_w	pls_prestador.nr_seq_prest_princ%type;
ie_gerar_medicos_w	pls_tipo_cred_prestador.ie_gerar_medicos%type;

BEGIN

begin
select	a.ie_tipo_solicitante,
	a.nr_seq_prestador,
	a.cd_estabelecimento,
	a.cd_cgc,
	a.ie_matriz_filial,
	a.nr_cnpj_matriz,
	coalesce(b.ie_gerar_medicos,'N')
into STRICT	ie_tipo_solicitante_w,
	nr_seq_prestador_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	ie_matriz_filial_w,
	nr_cnpj_matriz_w,
	ie_gerar_medicos_w
from	pls_creden_prestador a,
	pls_tipo_cred_prestador b
where	b.nr_sequencia	= a.nr_seq_tipo_credenciamento
and	a.nr_sequencia	= nr_seq_credenciamento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1207549); --Registro invalido
end;

if (ie_tipo_solicitante_w = 'pro') then --Proponente
	select	max(nr_sequencia)
	into STRICT	nr_seq_prest_princ_w
	from	pls_prestador
	where	cd_cgc	= nr_cnpj_matriz_w;

	insert	into	pls_prestador(	nr_sequencia, cd_cgc, nm_usuario,
			dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec,
			ie_situacao, dt_cadastro, cd_estabelecimento,
			dt_inicio_contrato, ie_prestador_matriz, ie_filial,
			ie_particip_qualiss_ans, ie_tipo_relacao, ie_abramge,
			ie_guia_medico, ie_tipo_vinculo, ie_prestador_alto_custo,
			ie_acidente_trabalho, ie_urgencia_emergencia, ie_tabela_propria,
			ie_ptu_a400, ie_regra_data_preco_proc, ie_regra_data_preco_taxas,
			ie_regra_data_preco_diaria, ie_regra_data_preco_pacote, ie_regra_data_preco_mat,
			ie_tipo_endereco, ie_fone_whats_guia_medico, ie_posto_coleta,
			ie_publica_ans, ie_intercambio, ie_cadu,
			ie_login_wsd_tiss, ie_situacao_ptu, ie_divulga_qualificacao,
			ie_divulga_email, ie_divulga_site, ie_notivisa,
			ie_pos_grad_360, ie_residencia_saude, ie_mestrado,
			nr_seq_prest_princ )
		values (nextval('pls_prestador_seq'), cd_cgc_w, nm_usuario_p,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			'A', clock_timestamp(), cd_estabelecimento_w,
			clock_timestamp(), CASE WHEN ie_matriz_filial_w='M' THEN 'S'  ELSE 'N' END , CASE WHEN ie_matriz_filial_w='M' THEN 'N'  ELSE 'S' END ,
			'N', 'D', 'N',
			'S', 'V', 'N',
			'N', 'N', 'N',
			'N', 'E', 'E',
			'E', 'E', 'E',
			'PJ', 'N', 'N',
			'S', 'N', 'N',
			'N', 'A', 'N',
			'S', 'S', 'N',
			'N', 'N', 'N',
			nr_seq_prest_princ_w )
		returning nr_sequencia into nr_seq_prestador_w;
	
	update	pls_visita_tecnica
	set	nr_seq_prestador	= nr_seq_prestador_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_credenciamento	= nr_seq_credenciamento_p;
end if;

CALL pls_creden_prestador_pck.gerar_colaboradores(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);
CALL pls_creden_prestador_pck.gerar_anexos(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);
CALL CALL pls_creden_prestador_pck.gerar_procedimentos(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);
CALL CALL pls_creden_prestador_pck.gerar_materiais(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);
CALL pls_creden_prestador_pck.gerar_especialidades(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);
CALL pls_creden_prestador_pck.gerar_qualificacoes(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);

if	coalesce(ie_gerar_medicos_w,'N') = 'S' then
	CALL pls_creden_prestador_pck.gerar_profissionais(nr_seq_credenciamento_p, nr_seq_prestador_w, nm_usuario_p);
end if;

update	pls_creden_prestador
set	nr_seq_prestador = nr_seq_prestador_w,
	dt_atualizacao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	ie_status	= 5
where	nr_sequencia	= nr_seq_credenciamento_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_creden_prestador_pck.gerar_prestador ( nr_seq_credenciamento_p pls_creden_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
