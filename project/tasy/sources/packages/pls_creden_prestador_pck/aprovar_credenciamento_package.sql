-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_creden_prestador_pck.aprovar_credenciamento ( nr_seq_credenciamento_p pls_creden_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

ie_exige_visita_tecnica_w	pls_tipo_cred_prestador.ie_exige_visita_tecnica%type;
ie_status_visita_w		pls_visita_tecnica.ie_status%type;
nr_count_w			integer;

BEGIN

begin
select	coalesce(b.ie_exige_visita_tecnica,'N')
into STRICT	ie_exige_visita_tecnica_w
from	pls_creden_prestador	a,
	pls_tipo_cred_prestador	b
where	b.nr_sequencia	= a.nr_seq_tipo_credenciamento
and	a.nr_sequencia	= nr_seq_credenciamento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1207549); --Registro invalido
end;

select	count(*)
into STRICT	nr_count_w
from	pls_cred_prest_revisao
where	coalesce(dt_liberacao::text, '') = ''
and	nr_seq_credenciamento = nr_seq_credenciamento_p;

if (nr_count_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1209290); --Nao e possivel realizar a acao, pois ha revisao cadastrada para o credenciamento
end if;

if (ie_exige_visita_tecnica_w = 'S') then
	select	max(a.ie_status)
	into STRICT	ie_status_visita_w
	from	pls_visita_tecnica a
	where	a.nr_sequencia = (	SELECT	max(x.nr_sequencia)
					from	pls_visita_tecnica x
					where	x.nr_seq_credenciamento	= nr_seq_credenciamento_p);
	
	if (coalesce(ie_status_visita_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1211377); --Nao e possivel aprovar o credenciamento, pois nao foi realizada a visita tecnica
	elsif (ie_status_visita_w <> 4) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1211382,'DS_STATUS='||obter_valor_dominio(10693, ie_status_visita_w)); --Nao e possivel aprovar o credenciamento, pois a visita tecnica esta com status "#@DS_STATUS#@"
	end if;
end if;

update	pls_creden_prestador
set	ie_status	= 4,
	dt_atualizacao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia	= nr_seq_credenciamento_p;

CALL CALL pls_creden_prestador_pck.gerar_alerta_evento(	nr_seq_credenciamento_p => nr_seq_credenciamento_p,
			ie_tipo_processo_p => 1,
			nm_usuario_p => nm_usuario_p,
			ie_commit_p => 'S');
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_creden_prestador_pck.aprovar_credenciamento ( nr_seq_credenciamento_p pls_creden_prestador.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
