-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


---------------------------------------------------------------
--- ajustar as diferencas entre saldo e o movimento (arredondamento)
---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE val_mensal_estoque.val_est_dif_saldo ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, nr_movimento_estoque_p bigint, ie_commit_p text) AS $body$
DECLARE


vl_estoque_anterior_w		double precision := 0;
vl_entrada_w			double precision := 0;
vl_saida_w			double precision := 0;
vl_estoque_w			double precision := 0;
qt_estoque_w			double precision := 0;
vl_diferenca_w			double precision := 0;
cd_acao_w			varchar(1);
ie_entrada_saida_w			varchar(1);
vl_movimento_w			double precision := 0;
nr_movimento_estoque_w		bigint;
qt_oper_dif_w			smallint    := 1;
cd_local_diferenca_w		smallint;

c01 CURSOR FOR
SELECT	a.nr_movimento_estoque,
	a.cd_acao,
	b.ie_entrada_saida,
	CASE WHEN d.ie_aumenta_diminui_valor='D' THEN  c.vl_movimento * -1 WHEN d.ie_aumenta_diminui_valor='A' THEN  c.vl_movimento WHEN d.ie_aumenta_diminui_valor='N' THEN  0 END  vl_movimento
from	tipo_valor d,
	movimento_estoque_valor c,
	operacao_estoque b,
	movimento_estoque a
where	a.cd_material_estoque    = cd_material_p
and	a.cd_estabelecimento     = cd_estabelecimento_p
and	a.dt_mesano_referencia   = dt_mesano_referencia_p
and	a.cd_operacao_estoque    = b.cd_operacao_estoque
and	a.nr_movimento_estoque   = c.nr_movimento_estoque
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	b.ie_atualiza_estoque	= 'S'
and	coalesce(b.ie_consignado,0)  = 0
and	c.cd_tipo_valor      = d.cd_tipo_valor;

BEGIN

select	sum(vl_estoque),
	sum(qt_estoque)
into STRICT	vl_estoque_w,
	qt_estoque_w
from	saldo_estoque
where	cd_estabelecimento   = cd_estabelecimento_p
and	cd_material          = cd_material_p
and	dt_mesano_referencia = dt_mesano_referencia_p;

select	coalesce(sum(vl_estoque),0)
into STRICT	vl_estoque_anterior_w
from	saldo_estoque
where	cd_estabelecimento   = cd_estabelecimento_p
and	cd_material          = cd_material_p
and	dt_mesano_referencia = pkg_date_utils.add_month(dt_mesano_referencia_p,-1,0);

qt_oper_dif_w           := 1;

open c01;
loop
fetch c01 into
	nr_movimento_estoque_w,
	cd_acao_w,
	ie_entrada_saida_w,
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (cd_acao_w <> '1') then
		vl_movimento_w  := vl_movimento_w * -1;
	end if;
	
	if (ie_entrada_saida_w = 'S') then
		vl_saida_w      := vl_saida_w + vl_movimento_w;
	else
		vl_entrada_w    := vl_entrada_w + vl_movimento_w;
	end if;

	if (nr_movimento_estoque_w = nr_movimento_estoque_p) then
		begin
		if (ie_entrada_saida_w = 'S') and (cd_acao_w = '1') then
			qt_oper_dif_w       := -1;
		elsif (ie_entrada_saida_w = 'E') and (cd_acao_w <>'1') then
			qt_oper_dif_w       := -1;
		end if;
		end;
	end if;

	end;
end loop;
close c01;

vl_diferenca_w  :=  vl_estoque_w - (vl_estoque_anterior_w + vl_entrada_w - vl_saida_w);

if (vl_diferenca_w <> 0) then
	begin	
	if (nr_movimento_estoque_p > 0) then
		begin
		vl_diferenca_w      := vl_diferenca_w * qt_oper_dif_w;
		
		update	movimento_estoque_valor
		set	vl_movimento		= vl_movimento + vl_diferenca_w
		where	nr_movimento_estoque	= nr_movimento_estoque_p;
		end;
	else
		begin
		select	coalesce(min(cd_local_estoque),0)
		into STRICT	cd_local_diferenca_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_material		= cd_material_p
		and	dt_mesano_referencia	= dt_mesano_referencia_p
		and	qt_estoque 		> 0
		and	qt_estoque      	= (
			SELECT	max(qt_estoque)
			from	saldo_estoque
			where	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_material		= cd_material_p
			and	dt_mesano_referencia	= dt_mesano_referencia_p
			and	qt_estoque      	> 0);
			
		if (cd_local_diferenca_w > 0) then
			begin
			update	saldo_estoque
			set	vl_estoque		= coalesce(vl_estoque,0) - coalesce(vl_diferenca_w,0)
			where	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_material		= cd_material_p
			and	dt_mesano_referencia	= dt_mesano_referencia_p
			and	cd_local_estoque	= cd_local_diferenca_w;
			end;
		else
			begin
			update	saldo_estoque
			set	ie_status_valorizacao	= 'X'
			where	cd_estabelecimento		= cd_estabelecimento_p
			and	cd_material			= cd_material_p
			and	dt_mesano_referencia		= dt_mesano_referencia_p;
			end;
		end if;
		
		if (ie_commit_p = 'S') then
			commit;
		end if;
		end;
	end if;
	end;
end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE val_mensal_estoque.val_est_dif_saldo ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, nr_movimento_estoque_p bigint, ie_commit_p text) FROM PUBLIC;
