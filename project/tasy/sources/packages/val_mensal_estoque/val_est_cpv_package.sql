-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

---------------------------------------------------------------
--- calcular o custo medio dos produtos
---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE val_mensal_estoque.val_est_cpv ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, ie_val_diaria_mensal_p text, nm_usuario_p text, vl_custo_medio_p INOUT bigint) AS $body$
DECLARE


nr_movimento_estoque_w  	bigint   := 0;
cd_acao_w		varchar(1);
ie_entrada_saida_w      	varchar(1);
vl_estoque_w            	double precision := 0;
qt_saldo_estoque_w      	double precision := 0;
vl_movimento_w      	double precision := 0;
qt_estoque_w            	double precision := 0;
ie_altera_custo_w       	varchar(01);
dt_movimento_w      	timestamp;
dt_saldo_w          		timestamp        := pkg_date_utils.start_of(dt_mesano_referencia_p,'MONTH',0);
vl_custo_medio_w        	double precision;
vl_custo_medio_ww       	double precision;
qt_saldo_dia_anterior_w	double precision;
nr_sequencia_w      	bigint;
qt_reg_w           		bigint;

c02 CURSOR FOR
SELECT	trunc(a.dt_movimento_estoque,'dd'),
	a.nr_movimento_estoque,
	a.cd_acao,
	b.ie_entrada_saida,
	coalesce(a.qt_estoque,0),
	b.ie_altera_custo
from	operacao_estoque b,
	movimento_estoque a
where	a.cd_material_estoque  = cd_material_p
and	a.cd_estabelecimento   = cd_estabelecimento_p
and	a.dt_mesano_referencia = dt_mesano_referencia_p
and	a.cd_operacao_estoque  = b.cd_operacao_estoque
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	coalesce(b.ie_consignado,0)  = 0
and	b.ie_altera_custo      in ('S','Z')
order by 1;


BEGIN
select	coalesce(sum(vl_estoque),0),
	coalesce(sum(qt_estoque),0)
into STRICT	vl_estoque_w,
	qt_saldo_estoque_w
from	saldo_estoque
where	cd_estabelecimento		= cd_estabelecimento_p
and	cd_material		= cd_material_p
and	dt_mesano_referencia	= pkg_date_utils.add_month(dt_mesano_referencia_p,-1,0);


/*Alterei a forma de obter o custo medio*/

select	coalesce(max(vl_custo_medio),0)
into STRICT	vl_custo_medio_ww
from	saldo_estoque
where	cd_estabelecimento		= cd_estabelecimento_p
and	cd_material		= cd_material_p
and	dt_mesano_referencia	= (
	SELECT	max(dt_mesano_referencia)
	from	saldo_estoque
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_material	= cd_material_p
	and	dt_mesano_referencia < pkg_date_utils.start_of(dt_mesano_referencia_p,'MONTH',0)
	and	vl_custo_medio > 0);


if (ie_val_diaria_mensal_p = 'D') then
	qt_saldo_dia_anterior_w     := qt_saldo_estoque_w;
	qt_reg_w                    := 0;
	qt_saldo_estoque_w          := 0;
	vl_estoque_w                := 0;
end if;

open c02;
loop
fetch c02 into
	dt_movimento_w,
	nr_movimento_estoque_w,
	cd_acao_w,
	ie_entrada_saida_w,
	qt_estoque_w,
	ie_altera_custo_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	if (ie_val_diaria_mensal_p = 'D') then
        	if (dt_movimento_w <> dt_saldo_w) then
	            	if (dt_saldo_w <> pkg_date_utils.start_of(dt_saldo_w,'MONTH',0)) then

				select  obter_saldo_diario_estoque(dt_saldo_w - 1, cd_estabelecimento_p, null, cd_material_p)
                    		into STRICT	qt_saldo_dia_anterior_w
                    		;

			if (qt_saldo_dia_anterior_w < 0) then
                        	qt_saldo_dia_anterior_w   := 0;
			end if;
		end if;

		vl_estoque_w        := vl_estoque_w + (qt_saldo_dia_anterior_w * vl_custo_medio_ww);
		qt_saldo_estoque_w  := qt_saldo_estoque_w + qt_saldo_dia_anterior_w;

		if (qt_reg_w = 0) or (qt_saldo_estoque_w <= 0) then
			vl_custo_medio_w    := vl_custo_medio_ww;
		else
			vl_custo_medio_w    := dividir(vl_estoque_w,  qt_saldo_estoque_w);
            	end if;

		select	nextval('saldo_estoque_cm_diario_seq')
		into STRICT	nr_sequencia_w
		;

		insert into saldo_estoque_cm_diario(
			nr_sequencia,
			cd_estabelecimento,
			cd_material,
			dt_mesano_referencia,
			dt_referencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			vl_custo_medio)
		values (	nr_sequencia_w,
			cd_estabelecimento_p,
			cd_material_p,
			dt_mesano_referencia_p,
			dt_saldo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_custo_medio_w);

		dt_saldo_w		:= dt_movimento_w;
		vl_custo_medio_ww	:= vl_custo_medio_w;
		qt_saldo_estoque_w	:= 0;
		vl_estoque_w		:= 0;
		qt_reg_w		:= 0;
		end if;
	end if;

	if (ie_altera_custo_w = 'Z') then
		delete
		from	movimento_estoque_valor
		where	nr_movimento_estoque  = nr_movimento_estoque_w;
	end if;

	select	coalesce(sum(CASE WHEN b.ie_aumenta_diminui_valor='D' THEN  vl_movimento * -1 WHEN b.ie_aumenta_diminui_valor='A' THEN  vl_movimento WHEN b.ie_aumenta_diminui_valor='N' THEN  0 END ),0)
	into STRICT	vl_movimento_w
	from	tipo_valor b,
		movimento_estoque_valor a
	where	nr_movimento_estoque = nr_movimento_estoque_w
	and	a.cd_tipo_valor      = b.cd_tipo_valor;

	if (ie_entrada_saida_w = 'S') then
        	qt_estoque_w	:= qt_estoque_w * -1;
		vl_movimento_w	:= vl_movimento_w * -1;
	end if;

	if (cd_acao_w <> '1') then
        	qt_estoque_w	:= qt_estoque_w * -1;
		vl_movimento_w	:= vl_movimento_w * -1;
	end if;

	qt_saldo_estoque_w	:= qt_saldo_estoque_w + qt_estoque_w;
	vl_estoque_w		:= vl_estoque_w + vl_movimento_w;
	qt_reg_w		:= qt_reg_w + 1;

	end;
end loop;
close c02;

if (ie_val_diaria_mensal_p = 'D') then
	begin
	if (dt_saldo_w <> pkg_date_utils.start_of(dt_saldo_w,'MONTH',0)) then

		select  obter_saldo_diario_estoque(dt_saldo_w - 1, cd_estabelecimento_p, null, cd_material_p)
		into STRICT    qt_saldo_dia_anterior_w
		;

		if (qt_saldo_dia_anterior_w < 0) then
			qt_saldo_dia_anterior_w   := 0;
		end if;
	end if;
	vl_estoque_w        := vl_estoque_w + (qt_saldo_dia_anterior_w * vl_custo_medio_ww);
	qt_saldo_estoque_w  := qt_saldo_estoque_w + qt_saldo_dia_anterior_w;

	if (qt_reg_w = 0) or (qt_saldo_estoque_w <= 0) then
		vl_custo_medio_w    := vl_custo_medio_ww;
	else
		vl_custo_medio_w    := dividir(vl_estoque_w,  qt_saldo_estoque_w);
	end if;

	vl_custo_medio_p	:= coalesce(vl_custo_medio_w,0);

	select	nextval('saldo_estoque_cm_diario_seq')
	into STRICT	nr_sequencia_w
	;

	insert into saldo_estoque_cm_diario(
		nr_sequencia,
		cd_estabelecimento,
		cd_material,
		dt_mesano_referencia,
		dt_referencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		vl_custo_medio)
	values ( nr_sequencia_w,
		cd_estabelecimento_p,
		cd_material_p,
		dt_mesano_referencia_p,
		dt_saldo_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		vl_custo_medio_w);
	end;
else
	if (qt_saldo_estoque_w = 0) then
		vl_custo_medio_p := vl_custo_medio_ww;
	else
		vl_custo_medio_p := dividir(coalesce(vl_estoque_w,0), coalesce(qt_saldo_estoque_w,0));
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE val_mensal_estoque.val_est_cpv ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, ie_val_diaria_mensal_p text, nm_usuario_p text, vl_custo_medio_p INOUT bigint) FROM PUBLIC;
