-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

---------------------------------------------------------------
--- controlar o processo de valorizacao mensal do estoque
---------------------------------------------------------------
CREATE TYPE reg_saldos AS (
	cd_material		bigint,
	ie_status_valorizacao	varchar(01));


CREATE OR REPLACE PROCEDURE val_mensal_estoque.val_est_prod ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint , nm_usuario_p text) AS $body$
DECLARE


type saldos is table of reg_saldos index by integer;

dt_atualizacao_w			timestamp			:= clock_timestamp();
vl_custo_medio_w			double precision		:= 0;
cd_operacao_producao_w		integer		:= 0;
cd_operacao_baixa_w		integer		:= 0;
nr_movimento_estoque_w		bigint		:= 0;
ie_val_diaria_mensal_w		varchar(15);
i				integer			:= 0;
saldos_w				saldos;

c01 CURSOR FOR
SELECT distinct
	a.cd_material,
	ie_status_valorizacao
from	saldo_estoque a
where	a.cd_estabelecimento    = cd_estabelecimento_p
and	a.dt_mesano_referencia  = dt_mesano_referencia_p
order by	ie_status_valorizacao,
		cd_material;

Vet01	C01%RowType;


BEGIN

select	cd_oper_producao,
	coalesce(ie_val_diaria_mensal,'M')
into STRICT	cd_operacao_producao_w,
	ie_val_diaria_mensal_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

/*Sidnei - 22/01/2016 - Alinhado com Fabio em Dez/2015 para retirar do sistema a valorizac?o diaria*/

ie_val_diaria_mensal_w	:=	'M';

/* marcus 18/04/2006 os pro */

delete  /*+index (a salescm_i1) */from	saldo_estoque_cm_diario
where	cd_estabelecimento	= cd_estabelecimento_p
and	dt_mesano_referencia	= dt_mesano_referencia_p;

update	saldo_estoque a
set	ie_status_valorizacao   = 'I'
where	a.cd_estabelecimento    = cd_estabelecimento_p
and	a.dt_mesano_referencia  = dt_mesano_referencia_p;

if (coalesce(cd_operacao_producao_w,0) > 0) then
	update	saldo_estoque a
	set	ie_status_valorizacao   = 'P'
	where	a.cd_estabelecimento    = cd_estabelecimento_p
	and	a.dt_mesano_referencia  = dt_mesano_referencia_p
	and	a.cd_material in (SELECT	distinct(x.cd_material)
		from	movimento_estoque x
		where	x.cd_estabelecimento	= cd_estabelecimento_p
		and	x.dt_mesano_referencia	= dt_mesano_referencia_p
		and	x.cd_operacao_estoque	= cd_operacao_producao_w);
end if;

commit;

open C01;
loop
fetch C01 into	
	Vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	i				:= i + 1;
	saldos_w[i].cd_material		:= Vet01.cd_material;
	saldos_w[i].ie_status_valorizacao	:= Vet01.ie_status_valorizacao;
	end;
end loop;
close C01;


for i in 1..saldos_w.Count loop
	begin
/*open c01;
loop
fetch c01 into
	cd_material_w,
	ie_status_valorizacao_w;
exit when c01%notfound;*/
	if (saldos_w[i].ie_status_valorizacao = 'P') then
		CALL val_mensal_estoque.val_est_custo_producao(saldos_w[i].cd_material, cd_estabelecimento_p, dt_mesano_referencia_p, ie_val_diaria_mensal_w, nm_usuario_p);
	end if;
	
	vl_custo_medio_w := val_mensal_estoque.val_est_cpv(saldos_w[i].cd_material, cd_estabelecimento_p, dt_mesano_referencia_p, ie_val_diaria_mensal_w, nm_usuario_p, vl_custo_medio_w);
	CALL val_mensal_estoque.val_est_saldo(saldos_w[i].cd_material, cd_estabelecimento_p, dt_mesano_referencia_p, vl_custo_medio_w, nm_usuario_p, 'S');
	nr_movimento_estoque_w := val_mensal_estoque.val_est_atualizar_cpv(saldos_w[i].cd_material, cd_estabelecimento_p, dt_mesano_referencia_p, ie_val_diaria_mensal_w, vl_custo_medio_w, nm_usuario_p, nr_movimento_estoque_w);
	CALL val_mensal_estoque.val_est_dif_saldo(saldos_w[i].cd_material, cd_estabelecimento_p, dt_mesano_referencia_p, nr_movimento_estoque_w, 'S');
	end;
	commit;
end loop;
--close c01;
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE val_mensal_estoque.val_est_prod ( dt_mesano_referencia_p timestamp, cd_estabelecimento_p bigint , nm_usuario_p text) FROM PUBLIC;
