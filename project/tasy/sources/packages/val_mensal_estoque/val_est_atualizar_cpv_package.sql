-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


---------------------------------------------------------------
--- atualizar o cpv das operacoes que n?o participam do custo medio
---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE val_mensal_estoque.val_est_atualizar_cpv ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, ie_val_diaria_mensal_p text, vl_custo_medio_p bigint, nm_usuario_p text, nr_movimento_estoque_p INOUT bigint) AS $body$
DECLARE


nr_movimento_estoque_w		bigint   := 0;
qt_estoque_w				double precision := 0;
vl_movimento_w			double precision := 0;
cd_tipo_valor_w			bigint   := 7;
ie_entrada_saida_w			varchar(1);
vl_custo_medio_w			double precision;
dt_movimento_w			timestamp;
dt_custo_medio_w			timestamp;
dt_processo_w				timestamp;
ie_tipo_requisicao_w		varchar(3);
ie_atualiza_estoque_w		varchar(1);
cd_operacao_estoque_w		bigint;
ie_consignado_w			varchar(1);
ie_altera_custo_w		varchar(1);
	
c03 CURSOR FOR
SELECT	/*+index (a MOVESTO_I13)*/	a.dt_movimento_estoque,
	a.dt_processo,
	a.nr_movimento_estoque,
	coalesce(a.qt_estoque,0),
	a.cd_operacao_estoque
from	movimento_estoque a
where	a.cd_estabelecimento   = cd_estabelecimento_p
and	a.cd_material_estoque  = cd_material_p
and	a.dt_mesano_referencia = dt_mesano_referencia_p
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
order by 1;


BEGIN
dt_custo_medio_w            := clock_timestamp() - interval '2000 days';
vl_custo_medio_w            := 0;
nr_movimento_estoque_p      := 0;
open c03;
loop
fetch c03 into
	dt_movimento_w,
	dt_processo_w,
	nr_movimento_estoque_w,
	qt_estoque_w,
	cd_operacao_estoque_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	
	select	b.ie_entrada_saida,
		b.ie_tipo_requisicao,
		b.ie_atualiza_estoque,
		b.ie_consignado,
		b.ie_altera_custo
	into STRICT	ie_entrada_saida_w,
		ie_tipo_requisicao_w,
		ie_atualiza_estoque_w,
		ie_consignado_w,
		ie_altera_custo_w
	from	operacao_estoque b
	where	b.cd_operacao_estoque = cd_operacao_estoque_w;
	
	if (coalesce(ie_consignado_w,0) = 0) and (coalesce(ie_altera_custo_w,'N') = 'N') then	
	
		delete	from movimento_estoque_valor
		where	nr_movimento_estoque  = nr_movimento_estoque_w
		and	cd_tipo_valor           <> cd_tipo_valor_w;
	
		if (ie_val_diaria_mensal_p = 'D') then
			if (dt_movimento_w <> dt_custo_medio_w) then
			
				dt_custo_medio_w    := dt_movimento_w;
				
				select	obter_cm_diario_estoque(cd_estabelecimento_p, dt_mesano_referencia_p, cd_material_p, coalesce(dt_processo_w,dt_movimento_w))
				into STRICT	vl_custo_medio_w
				;
			end if;
			
			vl_movimento_w  := qt_estoque_w * vl_custo_medio_w;
		else
			vl_movimento_w  := qt_estoque_w * vl_custo_medio_p;
		end if;
	
		update	movimento_estoque_valor
		set	vl_movimento		= vl_movimento_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_movimento_estoque	= nr_movimento_estoque_w
		and	cd_tipo_valor		= cd_tipo_valor_w;
	
		if (NOT FOUND) then
			begin
			insert into movimento_estoque_valor values (
				nr_movimento_estoque_w,
				cd_tipo_valor_w,
				vl_movimento_w,
				clock_timestamp(),
				nm_usuario_p);
			exception when others then
				qt_estoque_w    := 0;
			end;
		end if;
		if (ie_atualiza_estoque_w = 'S') and (ie_entrada_saida_w = 'S') and (not ie_tipo_requisicao_w in (2,21)) then
			nr_movimento_estoque_p := nr_movimento_estoque_w;
		end if;
	end if;
end loop;
close c03;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE val_mensal_estoque.val_est_atualizar_cpv ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, ie_val_diaria_mensal_p text, vl_custo_medio_p bigint, nm_usuario_p text, nr_movimento_estoque_p INOUT bigint) FROM PUBLIC;
