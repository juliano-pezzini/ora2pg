-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION wsuite_util_pck.wsuite_parameter_function ( cd_funcao_p funcao.cd_funcao%type, ie_tipo_login_p wsuite_usuario.ie_tipo_login%type, ds_login_p wsuite_usuario.ds_login%type) RETURNS SETOF T_PARAMETER_DATA AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Returns the parameters of the requested function
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ x] Outros: Web suite
 ------------------------------------------------------------------------------------------------------------------
Caution: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
parameter_function_row_w 	t_parameter_function_row;
nr_seq_usuario_w		wsuite_usuario.nr_sequencia%type;
nr_seq_perfil_w			wsuite_perfil.nr_sequencia%type;
vl_parametro_w			funcao_parametro.vl_parametro%type;

--Parameter function
C01 CURSOR(	cd_funcao_pc	funcao.cd_funcao%type) FOR
		
	SELECT  nr_sequencia,
		ds_parametro, 
		coalesce(vl_parametro, vl_parametro_padrao) vl_parametro		
	from    funcao_parametro
	where   cd_funcao = cd_funcao_pc;
	
--Parameter by user
C02 CURSOR( 	cd_funcao_pc		funcao.cd_funcao%type,
		nr_sequencia_pc		funcao_parametro.nr_sequencia%type,
		ds_login_pc		wsuite_usuario.ds_login%type,
		ie_tipo_login_pc	wsuite_usuario.ie_tipo_login%type ) FOR

	SELECT  vl_parametro
	from   	wsuite_param_usuario
	where   cd_funcao 		= cd_funcao_pc
	and     nr_seq_funcao_param 	= nr_sequencia_pc
	and	ie_tipo_login		= ie_tipo_login_pc
	and	ds_login  		= ds_login_pc
	and	(vl_parametro IS NOT NULL AND vl_parametro::text <> '');
	
--Parameter by type of login	
C03 CURSOR( 	cd_funcao_pc		funcao.cd_funcao%type,
		nr_sequencia_pc		funcao_parametro.nr_sequencia%type,
		ie_tipo_login_pc	wsuite_usuario.ie_tipo_login%type ) FOR

	SELECT  vl_parametro
	from   	wsuite_param_usuario
	where   cd_funcao 		= cd_funcao_pc
	and     nr_seq_funcao_param 	= nr_sequencia_pc
	and	ie_tipo_login 		= ie_tipo_login_pc
	and	(vl_parametro IS NOT NULL AND vl_parametro::text <> '');

--Parameter by profile
C04 CURSOR( 	cd_funcao_pc		funcao.cd_funcao%type,
		nr_sequencia_pc		funcao_parametro.nr_sequencia%type,
		nr_seq_perfil_pc	wsuite_perfil.nr_sequencia%type,
		ie_tipo_login_pc	wsuite_usuario.ie_tipo_login%type ) FOR

	SELECT  vl_parametro
	from   	wsuite_param_usuario
	where   cd_funcao 		= cd_funcao_pc
	and     nr_seq_funcao_param 	= nr_sequencia_pc
	and	ie_tipo_login		= ie_tipo_login_pc
	and	nr_seq_perfil_wsuite   	= nr_seq_perfil_pc
	and	(vl_parametro IS NOT NULL AND vl_parametro::text <> '');
	
	
BEGIN


begin
	select	nr_sequencia,
		nr_seq_perfil_wsuite
	into STRICT	nr_seq_usuario_w,
		nr_seq_perfil_w
	from	wsuite_usuario
	where	ds_login = ds_login_p;
	
exception
when others then
	nr_seq_usuario_w 	:= null;
	nr_seq_perfil_w		:= null;	
end;


if (cd_funcao_p IS NOT NULL AND cd_funcao_p::text <> '' AND ie_tipo_login_p IS NOT NULL AND ie_tipo_login_p::text <> '') then

	for r_C01 in C01( cd_funcao_p ) loop
		
		vl_parametro_w := null;
		
		if (nr_seq_usuario_w IS NOT NULL AND nr_seq_usuario_w::text <> '') then
			
			for r_C02 in C02( cd_funcao_p, r_C01.nr_sequencia, ds_login_p, ie_tipo_login_p  ) loop
				vl_parametro_w	:= r_C02.vl_parametro;
			end loop;
		end if;
		
		if ( (nr_seq_perfil_w IS NOT NULL AND nr_seq_perfil_w::text <> '') and coalesce(vl_parametro_w::text, '') = '' ) then
		
			for r_C04 in C04( cd_funcao_p, r_C01.nr_sequencia, nr_seq_perfil_w, ie_tipo_login_p  ) loop
				vl_parametro_w := r_C04.vl_parametro;
			end loop;
		end if;
				
		if ( (ie_tipo_login_p IS NOT NULL AND ie_tipo_login_p::text <> '') and  coalesce(vl_parametro_w::text, '') = '' ) then
		
			for r_C03 in C03( cd_funcao_p, r_C01.nr_sequencia, ie_tipo_login_p  ) loop
				vl_parametro_w := r_C03.vl_parametro;
			end loop;
		end if;
		
		parameter_function_row_w.id_parameter	:= r_C01.nr_sequencia;
		parameter_function_row_w.vl_parameter	:= coalesce(vl_parametro_w, r_C01.vl_parametro);
		
		RETURN NEXT parameter_function_row_w;
	end loop;
end if;

return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION wsuite_util_pck.wsuite_parameter_function ( cd_funcao_p funcao.cd_funcao%type, ie_tipo_login_p wsuite_usuario.ie_tipo_login%type, ds_login_p wsuite_usuario.ds_login%type) FROM PUBLIC;
