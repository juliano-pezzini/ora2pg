-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_nutrition_pck.meals_calculation ( nr_atendimento_p text, ds_file_output_p INOUT text ) AS $body$
DECLARE

    -- oral diet and special meals
    	
    c01 CURSOR FOR
		SELECT distinct a.nr_atendimento nr_atendimento
		from    atendimento_paciente a,
			    prescr_medica b,
			    nut_atend_serv_dia_rep d,
			    nut_atend_serv_dia e
		where  a.ie_tipo_atendimento = 1
		and    a.nr_atendimento        = b.nr_atendimento
		and    b.nr_prescricao         in (d.nr_prescr_jejum,d.nr_prescr_oral)
		and    coalesce(a.dt_alta::text, '') = ''      --without discharge
		and    coalesce(a.dt_cancelamento::text, '') = ''      -- encouter not cancelled
		and    coalesce(b.dt_suspensao::text, '') = ''      -- prescription not cancelled
		and    (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')  -- prescription released
		and    e.nr_sequencia          = d.nr_seq_serv_dia
		and    trunc(e.dt_servico)     = trunc(clock_timestamp())		

union all
	
		SELECT distinct a.nr_atendimento
		from   atendimento_paciente a,
		       cpoe_dieta c
		where  a.ie_tipo_atendimento   = 1
		and    a.nr_atendimento        = c.nr_atendimento
		and    coalesce(a.dt_alta::text, '') = ''  --without discharge
		and    coalesce(a.dt_cancelamento::text, '') = ''  -- encouter not cancelled
		and    trunc(c.dt_inicio)      = trunc(clock_timestamp())
		and    (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '');
    r_c01_w c01%rowtype;
	

BEGIN
  
    PERFORM set_config('nais_nutrition_pck.ds_line_w', null, false);
    PERFORM set_config('nais_nutrition_pck.json_output_w', philips_json(), false);
    PERFORM set_config('nais_nutrition_pck.json_output_list_w', philips_json_list(), false);
	
    if (coalesce(nr_atendimento_p::text, '') = '') then
		open c01;	
			loop
				fetch c01 into r_c01_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				CALL nais_nutrition_pck.headerbody(r_c01_w.nr_atendimento);
			end loop;
		close c01;
    else
        CALL nais_nutrition_pck.headerbody(nr_atendimento_p);
    end if;
    dbms_lob.createtemporary( ds_file_output_p, true);
    current_setting('nais_nutrition_pck.json_output_list_w')::philips_json_list.(ds_file_output_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_nutrition_pck.meals_calculation ( nr_atendimento_p text, ds_file_output_p INOUT text ) FROM PUBLIC;
