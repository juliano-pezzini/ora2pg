-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


  ----------
CREATE OR REPLACE PROCEDURE pck_lines_average_report.get_data_generate (dt_ini_p timestamp, dt_fim_p timestamp, cd_unidade_p text) AS $body$
DECLARE

  --
  c1 CURSOR FOR
    SELECT distinct
			t.clinical_unit,
			t.cd_clinical_unit,
			t.site,
			count(*) as no_of_line_insertions,
			floor(avg(coalesce(t.dt_retirada, timezone_utils.getcurrentdate('sysdate')) - t.dt_instalacao)) average_line_duration_days
		from (
			SELECT
				un.ds_setor_atendimento clinical_unit,
    		un.cd_setor_atendimento cd_clinical_unit,
				d.ie_classif_disp_niss site, 
				pkg_atend_pac_unid.get_estab_dt(un.cd_estabelecimento, apd.dt_instalacao) dt_instalacao,
				pkg_atend_pac_unid.get_estab_dt(un.cd_estabelecimento, apd.dt_retirada) dt_retirada
			FROM (
	  		select 
	    		u.nr_atendimento,
					s.cd_estabelecimento,
					u.cd_setor_atendimento,
					s.ds_setor_atendimento,
					greatest(min(u.dt_entrada_unidade), dt_ini_p) dt_entrada,
					least(coalesce(pkg_atend_pac_unid.get_max_exit_unit(u.nr_atendimento, u.dt_entrada_unidade, u.cd_setor_atendimento),
					least(to_date(dt_fim_p) + 1, clock_timestamp())),
					least(to_date(dt_fim_p) + 1, clock_timestamp())) dt_saida                                              
				from (select distinct a.nr_atendimento 
			  			from atend_pac_dispositivo a, atendimento_paciente p 
			  			where a.nr_atendimento = p.nr_atendimento
			  			and a.dt_instalacao between pkg_atend_pac_unid.get_sys_dt(p.cd_estabelecimento, dt_ini_p)
			  			and pkg_atend_pac_unid.get_sys_dt(p.cd_estabelecimento, least(fim_dia(dt_fim_p), clock_timestamp()))) 
        	ap, atend_paciente_unidade u, setor_atendimento s
				where ap.nr_atendimento = u.nr_atendimento
				and s.cd_setor_atendimento = u.cd_setor_atendimento
				and u.ie_passagem_setor not in ('S', 'L')
				and s.cd_classif_setor not in ('6', '7', '10')
				and u.dt_entrada_unidade < pkg_atend_pac_unid.get_sys_dt(s.cd_estabelecimento, least(to_date(dt_fim_p) + 1, clock_timestamp()))         
				and coalesce(pkg_atend_pac_unid.get_max_exit_unit(u.nr_atendimento, u.dt_entrada_unidade, u.cd_setor_atendimento),
						pkg_atend_pac_unid.get_sys_dt(s.cd_estabelecimento, dt_ini_p)) >=
						pkg_atend_pac_unid.get_sys_dt(s.cd_estabelecimento, dt_ini_p)
				group by u.nr_atendimento, s.cd_estabelecimento, u.cd_setor_atendimento, s.ds_setor_atendimento, pkg_atend_pac_unid.get_max_exit_unit(u.nr_atendimento, u.dt_entrada_unidade, u.cd_setor_atendimento)) un, pessoa_fisica pf, atendimento_paciente p, dispositivo d, atend_pac_dispositivo apd
LEFT OUTER JOIN topografia_dor td ON (apd.nr_seq_topografia = td.nr_sequencia)
WHERE apd.nr_atendimento = un.nr_atendimento and p.nr_atendimento = un.nr_atendimento and d.nr_sequencia = apd.nr_seq_dispositivo and d.ie_classif_disp_niss not in ('Resp', 'SVD', 'VMI') and apd.dt_instalacao between un.dt_entrada and pkg_atend_pac_unid.get_max_exit_unit(un.nr_atendimento, un.dt_entrada, un.cd_setor_atendimento) and p.cd_pessoa_fisica = pf.cd_pessoa_fisica  and apd.dt_instalacao between un.dt_entrada and un.dt_saida and apd.dt_instalacao between pkg_atend_pac_unid.get_sys_dt(un.cd_estabelecimento, dt_ini_p) and pkg_atend_pac_unid.get_sys_dt(un.cd_estabelecimento, least(fim_dia(dt_fim_p), clock_timestamp())) and un.cd_setor_atendimento in (select sa2.cd_setor_atendimento
							   from setor_atendimento sa2, usuario_setor us
							   where sa2.cd_setor_atendimento = us.cd_setor_atendimento
							   and sa2.ie_situacao = 'A'
							   and sa2.cd_classif_setor not in ('6', '7', '10')
							   and lower(us.nm_usuario_param) = lower(wheb_usuario_pck.get_nm_usuario)) and ((coalesce(cd_unidade_p::text, '') = '') or (obter_se_contido(un.cd_setor_atendimento, cd_unidade_p) = 'S'))
      ) t
		group by t.clinical_unit, t.cd_clinical_unit, t.site
		order by t.clinical_unit, t.site;

  r1 c1%rowtype;
  created_graph_a boolean := false;
  created_graph_b boolean := false;

BEGIN
  --Limpa tabelas
  delete FROM w_lines_avg_report;

  --Abre cursor principal
  open c1;
  loop
      fetch c1 into r1;
      EXIT WHEN NOT FOUND; /* apply on c1 */

      insert into w_lines_avg_report(ds_clinical_unit,
        	cd_clinical_unit,
          ds_site,
          nr_of_line_insertions,
          nr_average_line_duration_days)
      values ( r1.clinical_unit,
        	r1.cd_clinical_unit,
          r1.site,
          r1.no_of_line_insertions,
          r1.average_line_duration_days);

  end loop;
  close c1;

  --
  commit;
  -- Gerar graficos.
  created_graph_a := pck_lines_average_report.generate_graph_a(dt_ini_p,dt_fim_p,cd_unidade_p);
  created_graph_b := pck_lines_average_report.generate_graph_b(dt_ini_p,dt_fim_p,cd_unidade_p);

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pck_lines_average_report.get_data_generate (dt_ini_p timestamp, dt_fim_p timestamp, cd_unidade_p text) FROM PUBLIC;
