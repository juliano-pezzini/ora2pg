-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Z_BP_KREDITOR_TO_SAP - Advance Payment Entry
*/
CREATE OR REPLACE FUNCTION sap_fin_customer_pck.get_payment_entry ( nr_seq_fila_p bigint) RETURNS SETOF T_GET_PAYMENT_ENTRY AS $body$
DECLARE


nr_seq_documento_w			intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w				  intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w			  intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_w				  intpd_eventos_sistema.nr_seq_regra_conv%type;
r_get_payment_entry_w		r_get_payment_entry;
reg_integracao_w			  gerar_int_padrao.reg_integracao_conv;
pessoa_juridica_w			  pessoa_juridica%rowtype;
nm_pais_w					      pais.nm_pais%type;
nr_prontuario_w         prontuario_estab.nr_sequencia%type;
pessoa_fisica_w				  pessoa_fisica%rowtype;
cd_sistema_ant_w        pessoa_fisica.cd_sistema_ant%type;
cd_iban_w               r_get_payment_entry_w.iv_iban%type;
cd_banco_w              r_get_payment_entry_w.iv_bank_key%type;
ie_tipo_conta_w         r_get_payment_entry_w.iv_id_category%type;
ie_cobra_pf_pj_w        medico.ie_cobra_pf_pj%type;

c01 CURSOR FOR
	SELECT a.nr_adiantamento,
         a.cd_pessoa_fisica,
         a.cd_cgc,
         CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  'ZPAT'  ELSE 'FLCU00' END  role,
         CASE WHEN coalesce(cd_cgc::text, '') = '' THEN  'ZPAT'  ELSE 'ZVER' END  grouping,
         nr_atendimento
	  from adiantamento a
	 where a.nr_adiantamento = nr_seq_documento_w;

c01_w	c01%rowtype;


BEGIN
intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

select	a.nr_seq_documento,
		coalesce(b.ie_conversao,'I'),
		b.nr_seq_sistema,
		b.nr_seq_projeto_xml,
		b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
		ie_conversao_w,
		nr_seq_sistema_w,
		nr_seq_projeto_xml_w,
		nr_seq_regra_w
from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and		a.nr_sequencia = nr_seq_fila_p;

open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		r_get_payment_entry_w			:=	null;
		reg_integracao_w.nm_tabela 		:=	'ADIANTAMENTO';
		reg_integracao_w.nm_elemento	:=	'Z_BP_KREDITOR_TO_SAP';

    begin
      select	*
        into STRICT	pessoa_juridica_w
        from	pessoa_juridica
       where	cd_cgc	=	c01_w.cd_cgc;
		exception
		when others then
			pessoa_juridica_w.cd_cgc := null;
		end;

    begin
			select	*
        into STRICT	pessoa_fisica_w
        from	pessoa_fisica
			 where	cd_pessoa_fisica	=	c01_w.cd_pessoa_fisica;
    exception
    when others then
      pessoa_fisica_w.cd_pessoa_fisica := null;
    end;

    begin
      select c.cd_sistema_ant
        into STRICT cd_sistema_ant_w 
        from atendimento_paciente a, medico b, pessoa_fisica c
       where a.nr_atendimento = c01_w.nr_adiantamento
         and a.cd_medico_resp = b.cd_pessoa_fisica
         and b.cd_pessoa_fisica = c.cd_pessoa_fisica;
    exception
    when others then
      cd_sistema_ant_w := null;
    end;

    begin
      select ie_cobra_pf_pj 
        into STRICT ie_cobra_pf_pj_w
        from medico a 
       where a.cd_pessoa_fisica = c01_w.cd_pessoa_fisica;
    exception
    when others then
      ie_cobra_pf_pj_w := null;
    end;

    
    if ie_cobra_pf_pj_w = 'F' then
      begin
        select a.cd_iban, a.cd_banco, a.ie_tipo_conta
          into STRICT cd_iban_w, cd_banco_w, ie_tipo_conta_w
          from pessoa_fisica_conta a
         where a.cd_pessoa_fisica =  c01_w.cd_pessoa_fisica
           and a.ie_situacao = 'A'
           and a.dt_atualizacao = (SELECT max(b.dt_atualizacao)
                                     from pessoa_fisica_conta b
                                    where b.cd_pessoa_fisica = c01_w.cd_pessoa_fisica
                                      and b.ie_situacao = 'A');
      exception
      when others then
        cd_iban_w := null;
        cd_banco_w := null;
        ie_tipo_conta_w := null;
      end;
    else
      begin
        select a.cd_iban, a.cd_banco, a.ie_tipo_conta
          into STRICT cd_iban_w, cd_banco_w, ie_tipo_conta_w
          from pessoa_juridica_conta a
         where a.cd_cgc =  c01_w.cd_cgc
           and a.ie_situacao = 'A'
           and a.dt_atualizacao = (SELECT max(b.dt_atualizacao)
                                     from pessoa_juridica_conta b
                                    where b.cd_cgc = c01_w.cd_cgc
                                      and b.ie_situacao = 'A');
      exception
      when others then
        cd_iban_w := null;
        cd_banco_w := null;
        ie_tipo_conta_w := null;
      end;
    end if;

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_PESSOA', 'IV_CATEGORY', 'N', 2, 'N', r_get_payment_entry_w.iv_category);
		intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_GROUPING', 'N', c01_w.grouping, 'N', r_get_payment_entry_w.iv_grouping);
		intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_SEARCHTERM1', 'N', upper(coalesce(pessoa_juridica_w.ds_razao_social, pessoa_juridica_w.nm_fantasia)), 'N', r_get_payment_entry_w.iv_searchterm1);
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_RAZAO_SOCIAL','IV_NAME', 'N', pessoa_juridica_w.ds_razao_social, 'N', r_get_payment_entry_w.iv_name);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_SISTEMA_ANT','IV_OEAEK_ID', 'N', cd_sistema_ant_w, 'N', r_get_payment_entry_w.iv_oeaek_id);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC','IV_UID', 'N', c01_w.cd_cgc, 'N', r_get_payment_entry_w.iv_uid);
		intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_ROLE', 'N', c01_w.role, 'N', r_get_payment_entry_w.iv_role);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_BANCO','IV_BANK_KEY', 'N',cd_banco_w, 'N', r_get_payment_entry_w.iv_bank_key);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_IBAN','IV_IBAN', 'N', cd_iban_w, 'N', r_get_payment_entry_w.iv_iban);
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_CONTA','IV_ID_CATEGORY', 'N', ie_tipo_conta_w, 'N', r_get_payment_entry_w.iv_id_category);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_ADIANTAMENTO','IV_ID_NUMBER', 'N', c01_w.nr_adiantamento, 'N', r_get_payment_entry_w.iv_id_number);

		intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'IV_ADDRESS_STREET', 'N', pessoa_juridica_w.ds_endereco, 'N', r_get_payment_entry_w.iv_address_street);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'IV_ADDRESS_POSTL', 'N', pessoa_juridica_w.cd_cep, 'N', r_get_payment_entry_w.iv_address_postl);
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'IV_ADDRESS_CITY', 'N', pessoa_juridica_w.ds_municipio, 'N', r_get_payment_entry_w.iv_address_city);

    begin
        select a.nr_sequencia
          into STRICT nr_prontuario_w
          from prontuario_estab a
         where a.cd_estabelecimento = pessoa_fisica_w.cd_estabelecimento
           and a.cd_pessoa_fisica = pessoa_fisica_w.cd_pessoa_fisica;
    exception
			when others then
				nr_prontuario_w	:=	null;
		end;

    intpd_processar_atrib_envio(reg_integracao_w, 'DS_PAIS','IV_ADDRESS_COUNTRY', 'N', obter_codigo_pais(pessoa_juridica_w.nr_seq_pais), 'N', r_get_payment_entry_w.iv_address_country);

	  --intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_BUKRS', 'N', 'c01_w.', 'N', r_get_payment_entry_w.iv_bukrs);
		--intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_AKONT', 'N', 'c01_w.', 'N', r_get_payment_entry_w.iv_akont);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA','IV_KIS_ID', 'N', nr_prontuario_w, 'N', r_get_payment_entry_w.iv_kis_id);
		

		RETURN NEXT r_get_payment_entry_w;
	end;
end loop;
close c01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sap_fin_customer_pck.get_payment_entry ( nr_seq_fila_p bigint) FROM PUBLIC;
