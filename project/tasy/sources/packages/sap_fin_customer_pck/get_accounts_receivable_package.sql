-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------
'Z_BP_DEBITOR_TO_SAP - Maintenance of Accounts Receivable
*/
CREATE OR REPLACE FUNCTION sap_fin_customer_pck.get_accounts_receivable ( nr_seq_fila_p bigint) RETURNS SETOF T_GET_ACCOUNTS_RECEIVABLE AS $body$
DECLARE


nr_seq_documento_w			  intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w				    intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w			    intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		  intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_w				    intpd_eventos_sistema.nr_seq_regra_conv%type;
r_accounts_receivable_w		r_get_accounts_receivable;
reg_integracao_w			    gerar_int_padrao.reg_integracao_conv;
atend_convenio_end_cob_w	atend_convenio_end_cob%rowtype;
pessoa_fisica_w				    pessoa_fisica%rowtype;
nm_pais_w					        pais.nm_pais%type;
pessoa_juridica_w			    pessoa_juridica%rowtype;
ie_tipo_pessoa_w			    varchar(1);
nr_prontuario_w           prontuario_estab.nr_sequencia%type;
cd_pessoa_fisica_w        pf_codigo_externo.cd_pessoa_fisica_externo%type;

c01 CURSOR FOR
  SELECT a.cd_pessoa_fisica cod_pessoa,
         1 ie_tipo_pessoa,
         'ZPAT' partner_group,
         a.nr_atendimento,
         b.nm_pessoa_fisica nm_pessoa
    from titulo_receber a, pessoa_fisica b
   where b.cd_pessoa_fisica = a.cd_pessoa_fisica
     and nr_titulo = nr_seq_documento_w

union

  SELECT c.cd_cgc cod_pessoa,
         2 ie_tipo_pessoa,
         'ZVER' partner_group,
         c.nr_atendimento,
         d.nm_fantasia nm_pessoa
    from titulo_receber c, pessoa_juridica d
   where d.cd_cgc = c.cd_cgc
     and nr_titulo = nr_seq_documento_w;

c01_w	c01%rowtype;


BEGIN
intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

select	a.nr_seq_documento,
		coalesce(b.ie_conversao,'I'),
		b.nr_seq_sistema,
		b.nr_seq_projeto_xml,
		b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
		ie_conversao_w,
		nr_seq_sistema_w,
		nr_seq_projeto_xml_w,
		nr_seq_regra_w
from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and		a.nr_sequencia = nr_seq_fila_p;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		r_accounts_receivable_w			:=	null;
		reg_integracao_w.nm_tabela 		:=	'TITULO_RECEBER';
		reg_integracao_w.nm_elemento	:=	'Z_BP_DEBITOR_TO_SAP';

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_PESSOA', 'IV_CATEGORY', 'N', c01_w.ie_tipo_pessoa, 'N', r_accounts_receivable_w.iv_category);
		intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_GROUPING', 'N', c01_w.partner_group , 'N', r_accounts_receivable_w.iv_grouping);
		intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_SEARCHTERM1', 'N', upper(c01_w.nm_pessoa), 'N', r_accounts_receivable_w.iv_searchterm1);

		if	c01_w.ie_tipo_pessoa = 1 then
			begin
			select	*
			into STRICT	atend_convenio_end_cob_w
			from	atend_convenio_end_cob
			where 	nr_atendimento	=	c01_w.nr_atendimento
			and		cd_pessoa_fisica =	c01_w.cod_pessoa
			and		ie_tipo_complemento =	1  LIMIT 1;
			exception
			when others then
				atend_convenio_end_cob_w.nr_sequencia := null;
			end;

			begin
			select	*
			into STRICT	pessoa_fisica_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	=	c01_w.cod_pessoa;
			exception
			when others then
				pessoa_fisica_w.cd_pessoa_fisica := null;
			end;

			intpd_processar_atrib_envio(reg_integracao_w, 'NM_PRIMEIRO_NOME', 'IV_FIRSTNAME', 'N', pessoa_fisica_w.nm_primeiro_nome, 'N', r_accounts_receivable_w.iv_firstname);
			intpd_processar_atrib_envio(reg_integracao_w, 'NM_PESSOA_FISICA', 'IV_NAME', 'N', pessoa_fisica_w.nm_pessoa_fisica, 'N', r_accounts_receivable_w.iv_name);
			intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_ROLE', 'N', 'ZPAT', 'N', r_accounts_receivable_w.iv_role);
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'IV_ADDRESS_STREET', 'N', atend_convenio_end_cob_w.ds_endereco, 'N', r_accounts_receivable_w.iv_address_street);
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'IV_ADDRESS_POSTL', 'N', atend_convenio_end_cob_w.cd_cep, 'N', r_accounts_receivable_w.iv_address_postl);
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'IV_ADDRESS_CITY', 'N', atend_convenio_end_cob_w.ds_municipio, 'N', r_accounts_receivable_w.iv_address_city);
			intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_ADDRESS_COUNTRY', 'N', obter_codigo_pais(atend_convenio_end_cob_w.nr_seq_pais), 'N', r_accounts_receivable_w.iv_address_country);
		else
			begin
			select	*
			into STRICT	pessoa_juridica_w
			from	pessoa_juridica
			where	cd_cgc	=	c01_w.cod_pessoa;
			exception
			when others then
				pessoa_juridica_w.cd_cgc := null;
			end;

			intpd_processar_atrib_envio(reg_integracao_w, 'NM_PRIMEIRO_NOME', 'IV_FIRSTNAME', 'N', '', 'N', r_accounts_receivable_w.iv_firstname);
			intpd_processar_atrib_envio(reg_integracao_w, 'NM_FANTASIA', 'IV_NAME', 'N', pessoa_juridica_w.nm_fantasia, 'N', r_accounts_receivable_w.iv_name);
			intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_ROLE', 'N', 'FLCU00', 'N', r_accounts_receivable_w.iv_role);
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'IV_ADDRESS_STREET', 'N', pessoa_juridica_w.ds_endereco, 'N', r_accounts_receivable_w.iv_address_street);
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'IV_ADDRESS_POSTL', 'N', pessoa_juridica_w.cd_cep, 'N', r_accounts_receivable_w.iv_address_postl);
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'IV_ADDRESS_CITY', 'N', pessoa_juridica_w.ds_municipio, 'N', r_accounts_receivable_w.iv_address_city);
      intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_ADDRESS_COUNTRY', 'N', obter_codigo_pais(pessoa_juridica_w.nr_seq_pais), 'N', r_accounts_receivable_w.iv_address_country);
		end if;

    begin
      select	max(a.cd_pessoa_fisica_externo)
        into STRICT  cd_pessoa_fisica_w
        from	pf_codigo_externo a
       where	a.cd_pessoa_fisica = pessoa_fisica_w.cd_pessoa_fisica
         and	a.ie_tipo_codigo_externo = 'ISH'
         and	exists (SELECT 1
                        from pessoa_fisica b
                       where b.cd_pessoa_fisica = a.cd_pessoa_fisica);
    exception
    when others then
      cd_pessoa_fisica_w	:=	null;
    end;

    begin
        select a.nr_sequencia
          into STRICT nr_prontuario_w
          from prontuario_estab a
         where a.cd_estabelecimento = pessoa_fisica_w.cd_estabelecimento
           and a.cd_pessoa_fisica = pessoa_fisica_w.cd_pessoa_fisica;
    exception
			when others then
				nr_prontuario_w	:=	null;
		end;
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_PESSOA_FISICA_EXTERNO','IV_ID_NUMBER', 'N', cd_pessoa_fisica_w, 'N', r_accounts_receivable_w.iv_id_number);
		/*intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_BUKRS', 'N', 'c01_w.', 'N', r_accounts_receivable_w.iv_bukrs);
		intpd_processar_atrib_envio(reg_integracao_w, 'X','IV_AKONT', 'N', 'c01_w.', 'N', r_accounts_receivable_w.iv_akont);*/
    intpd_processar_atrib_envio(reg_integracao_w, 'NR_PRONTUARIO','IV_KIS_ID', 'N', nr_prontuario_w, 'N', r_accounts_receivable_w.iv_kis_id);


		RETURN NEXT r_accounts_receivable_w;
	end;
end loop;
close C01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION sap_fin_customer_pck.get_accounts_receivable ( nr_seq_fila_p bigint) FROM PUBLIC;
