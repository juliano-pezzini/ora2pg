-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_imp_farmacia_pck.integrar_arquivo_reemb ( nr_seq_prot_imp_p pls_imp_prot_conta.nr_sequencia%type, ie_motivo_reembolso_p pls_protocolo_conta.nr_seq_mot_reembolso%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_integrou_p INOUT text) AS $body$
DECLARE



nr_seq_segurado_w       pls_segurado.nr_sequencia%type;
nr_seq_segurado_anterior_w  pls_segurado.nr_sequencia%type;
current_setting('pls_imp_farmacia_pck.nr_seq_protocolo_w')::pls_protocolo_conta.nr_sequencia%type      pls_protocolo_conta.nr_sequencia%type;
nr_seq_conta_gerada_p    pls_conta.nr_sequencia%type;
vl_unitario_w        pls_conta_mat.vl_unitario_imp%type;
nr_seq_mat_w        pls_conta_mat.nr_seq_material%type;
ds_erro_w          varchar(4000);
ie_existe_pj_documento_w  varchar(1);
nr_seq_conta_mat_w    pls_conta_mat.nr_sequencia%type;
nr_seq_plano_w       pls_conta.nr_seq_plano%type;
nr_seq_tipo_atendimento_w	pls_tipo_atendimento.nr_sequencia%type;


C01 CURSOR FOR
  SELECT     cd_usuario_plano_imp,
        nr_crm_exec_imp,
        uf_crm_exec_imp,
        uf_crm_prest_exec_imp,
        max(dt_atendimento) dt_atendimento,
        max(cd_cgc_prestador_imp) cd_cgc_documento
  from    pls_imp_cta
  where    nr_seq_prot_imp = nr_seq_prot_imp_p
  group by   cd_usuario_plano_imp,
        nr_crm_exec_imp,
        uf_crm_exec_imp,
        uf_crm_prest_exec_imp;


C02 CURSOR(  cd_usuario_plano_imp_p  pls_imp_cta.cd_usuario_plano_imp%type,
        nr_crm_exec_imp_p    pls_imp_cta.nr_crm_exec_imp%type,
        uf_crm_exec_imp_p    pls_imp_cta.uf_crm_exec_imp%type,
        uf_crm_prest_exec_imp_p pls_imp_cta.uf_crm_prest_exec_imp%type
        )FOR
  SELECT  nr_sequencia,
      cd_material_imp,
      qt_material_imp,
      vl_material_imp,
      dt_atendimento,
      cd_cgc_prestador_imp,
	  ie_tp_transacao ie_tipo_transacao
  from  pls_imp_cta
  where  nr_seq_prot_imp = nr_seq_prot_imp_p
  and    cd_usuario_plano_imp = cd_usuario_plano_imp_p
  and    nr_crm_exec_imp = nr_crm_exec_imp_p
  and   uf_crm_exec_imp = uf_crm_exec_imp_p
  and    uf_crm_prest_exec_imp = uf_crm_prest_exec_imp_p;

BEGIN

  begin

    ie_integrou_p := 'N';
    nr_seq_segurado_anterior_w := -999;
    for r_c01_w in C01 loop

      select  max(a.nr_sequencia)
      into STRICT    nr_seq_segurado_w
      from    pls_segurado a,
          pls_segurado_carteira b
      where    a.nr_sequencia = b.nr_seq_segurado
      and    b.cd_usuario_plano = trim(both r_c01_w.cd_usuario_plano_imp);

	    select max(nr_sequencia)
	    into STRICT nr_seq_tipo_atendimento_w
	    from pls_tipo_atendimento
	    where ie_situacao = 'A'
	    and cd_tiss = '30';

      if ( nr_seq_segurado_w != nr_seq_segurado_anterior_w ) then

        nr_seq_segurado_anterior_w := nr_seq_segurado_w;

        insert into pls_protocolo_conta(  nr_sequencia, dt_atualizacao_nrec, dt_atualizacao,
              nm_usuario_nrec, nm_usuario, cd_estabelecimento,
              dt_protocolo, ie_situacao, ie_status,
              ie_tipo_protocolo, ie_tipo_guia, nr_seq_segurado,
              dt_mes_competencia, nr_seq_mot_reembolso, ie_origem_protocolo,
	      ie_fornec_direto
              )
        values (  nextval('pls_protocolo_conta_seq'), clock_timestamp(), clock_timestamp(),
            nm_usuario_p, nm_usuario_p, cd_estabelecimento_p,
             clock_timestamp(), 'I', 1,
            'R', '4', nr_seq_segurado_w,
            clock_timestamp(), ie_motivo_reembolso_p, 'F',
	    'S'
            ) returning nr_sequencia into current_setting('pls_imp_farmacia_pck.nr_seq_protocolo_w')::pls_protocolo_conta.nr_sequencia%type;
      end if;

      if (current_setting('pls_imp_farmacia_pck.nr_seq_protocolo_w')::pls_protocolo_conta.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then

        select CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
        into STRICT ie_existe_pj_documento_w
        from pessoa_juridica
        where cd_cgc = r_c01_w.cd_cgc_documento;

        if (ie_existe_pj_documento_w = 'N') then

          ds_erro_w := wheb_mensagem_pck.get_texto(1060104) ||' '|| r_c01_w.cd_cgc_documento;

           CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);

        end if;
		
		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then


			select	max(b.nr_sequencia)
			into STRICT	nr_seq_plano_w
			from	pls_segurado a,
					pls_plano b
			where	a.nr_seq_plano	= b.nr_sequencia
			and		a.nr_sequencia	= nr_seq_segurado_w;

        end if;

        insert into pls_conta(  nr_sequencia, ie_status, dt_atualizacao,
            nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
            cd_estabelecimento, nr_seq_segurado, ie_tipo_guia,
            nr_seq_protocolo, nr_seq_conselho_exec, uf_crm_exec,
            nr_crm_exec, cd_cgc, nr_seq_plano, nr_seq_tipo_atendimento)
          values ( nextval('pls_conta_seq'), 'U', clock_timestamp(),
            nm_usuario_p, clock_timestamp(), nm_usuario_p,
            cd_estabelecimento_p,  nr_seq_segurado_w,'4',
            current_setting('pls_imp_farmacia_pck.nr_seq_protocolo_w')::pls_protocolo_conta.nr_sequencia%type,  r_c01_w.uf_crm_prest_exec_imp , r_c01_w.uf_crm_exec_imp ,
            r_c01_w.nr_crm_exec_imp, r_c01_w.cd_cgc_documento, nr_seq_plano_w, nr_seq_tipo_atendimento_w
            )returning nr_sequencia into nr_seq_conta_gerada_p;

        CALL pls_conta_tiss_pck.criar_registro(  nr_seq_conta_gerada_p,
                  cd_estabelecimento_p,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  nm_usuario_p);

        for r_c02_w in C02( r_c01_w.cd_usuario_plano_imp, r_c01_w.nr_crm_exec_imp,
                  r_c01_w.uf_crm_exec_imp, r_c01_w.uf_crm_prest_exec_imp) loop


          vl_unitario_w := dividir( r_c02_w.vl_material_imp, r_c02_w.qt_material_imp);
          nr_seq_mat_w := pls_imp_farmacia_pck.obter_seq_material( r_c02_w.cd_material_imp ); --cd_material_imp nessa tabela refere-se ao cd_ean

          insert into pls_conta_mat(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
                  ie_situacao, ie_status, nm_usuario,
                  nm_usuario_nrec, dt_atendimento, qt_material_imp,
                  vl_material_imp, vl_unitario_imp, nr_seq_conta,
                  nr_seq_material, cd_material_imp, vl_material,
                  ie_tipo_despesa)
          values (  nextval('pls_conta_mat_seq'), clock_timestamp(), clock_timestamp(),
              'I', 'U',  nm_usuario_p,
              nm_usuario_p, r_c02_w.dt_atendimento, r_c02_w.qt_material_imp,
              r_c02_w.vl_material_imp, vl_unitario_w, nr_seq_conta_gerada_p,
              nr_seq_mat_w, r_c02_w.cd_material_imp, r_c02_w.vl_material_imp,
              2) returning nr_sequencia into nr_seq_conta_mat_w;

          CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_mat(nr_seq_conta_mat_w, nm_usuario_p);
		
		  update	pls_conta_mat_regra
		  set 	ie_tp_transacao = r_c02_w.ie_tipo_transacao
		  where	nr_sequencia = nr_seq_conta_mat_w;

          update pls_imp_cta set nr_seq_protocolo = current_setting('pls_imp_farmacia_pck.nr_seq_protocolo_w')::pls_protocolo_conta.nr_sequencia%type
          where nr_sequencia = r_c02_w.nr_sequencia;

        end loop;
        CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_mat(nr_seq_conta_gerada_p, nm_usuario_p);

      end if;

    end loop;

    update pls_protocolo_conta
    set	ie_situacao = 'T'
    where nr_sequencia = current_setting('pls_imp_farmacia_pck.nr_seq_protocolo_w')::pls_protocolo_conta.nr_sequencia%type;

    update   pls_imp_prot_conta
    set   dt_integracao = clock_timestamp()
    where  nr_sequencia = nr_seq_prot_imp_p;
    ie_integrou_p := 'S';
    commit;
  exception
      when others then
        -- Pega a mensagem de erro

        ds_erro_w := substr(sqlerrm || pls_util_pck.enter_w || 'Error Back Trace: ' || dbms_utility.format_error_backtrace, 1, 4000);

        -- Devolve a mensagem na tela, e para todo o processamento

        CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
    end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_farmacia_pck.integrar_arquivo_reemb ( nr_seq_prot_imp_p pls_imp_prot_conta.nr_sequencia%type, ie_motivo_reembolso_p pls_protocolo_conta.nr_seq_mot_reembolso%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_integrou_p INOUT text) FROM PUBLIC;
