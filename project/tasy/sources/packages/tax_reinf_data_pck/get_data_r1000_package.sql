-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION tax_reinf_data_pck.get_data_r1000 (batch_code_p text) RETURNS SETOF R1000_TABLE_W AS $body$
DECLARE

    r1000_data_w    r1000_record_w;

    c_r1000 CURSOR FOR
      SELECT  tax_reinf_data_pck.get_event_id(e.cd_cgc, rownum) identification,
              f.ie_ident_ambiente  environment_type,
              '1' emission,	
              '1' subscription_type,
              substr(e.cd_cgc, 1, 8)  subscription, 
              to_char(f.dt_validade_inf, 'YYYY-MM') initial_date,
              '' final_date,
              f.cd_classif_trib tax_classification,
              CASE WHEN(SELECT count(dt_geracao) from ctb_sped_controle c where (dt_geracao IS NOT NULL AND dt_geracao::text <> ''))=0 THEN  '0'  ELSE '1' END  bookkeeping,	 	   
              f.cd_ind_desoneracao exemption,
              '0' fine_exemption,
              f.ie_situacao_pj situation,	  							   
              elimina_caractere_especial(substr((select nm_pessoa_fisica from pessoa_fisica where cd_pessoa_fisica = (select em.cd_contabilista cd_contabilista from estabelecimento es, empresa em where es.cd_empresa = em.cd_empresa and cd_estabelecimento = e.cd_estabelecimento)), 1, 70)) accountant_name, 						     
              (select nr_cpf from pessoa_fisica where cd_pessoa_fisica = (select em.cd_contabilista cd_contabilista from estabelecimento es, empresa em where es.cd_empresa = em.cd_empresa and cd_estabelecimento = e.cd_estabelecimento)) accountant_cpf,			  
              substr(somente_numero_char(obter_dados_pf_pj(null, e.cd_cgc, 'DDT') || obter_dados_pf_pj(null, e.cd_cgc, 'T')), 1, 13) accountant_phone,
              substr(somente_numero_char(obter_dados_pf_pj(null, e.cd_cgc, 'DDT') || obter_dados_pf_pj(null, e.cd_cgc, 'T')), 1, 13) accountant_cell,
              substr(obter_dados_pf_pj_estab(e.cd_estabelecimento, null, e.cd_cgc, 'M'), 1, 60) accountant_email,
              '01950338000177' soft_house_cnpj,
              'PHILIPS CLINICAL INFORMATICS - SISTEMAS DE INFORMACAO LTDA' soft_house_name,
              'PHILIPS' soft_house_contact,
              '0004731444000' soft_house_phone,
              'philips@philips.com' soft_house_email,
              f.ie_unidade_adm administrative_unit,
              CASE WHEN f.ie_unidade_adm='N' THEN  f.cd_cnpj_efr END  administrative_cpnj
      from    estabelecimento e,
              fis_reinf_r1000 f
      where   e.cd_estabelecimento = f.cd_estabelecimento
      and     f.nr_sequencia = batch_code_p;

BEGIN
      for r1000_row in c_r1000 loop
        begin
        r1000_data_w.identification       := r1000_row.identification;
        r1000_data_w.environment_type     := r1000_row.environment_type;
        r1000_data_w.emission             := r1000_row.emission;
        r1000_data_w.subscription_type    := r1000_row.subscription_type;
        r1000_data_w.subscription         := r1000_row.subscription;
        r1000_data_w.initial_date         := r1000_row.initial_date;
        r1000_data_w.final_date           := r1000_row.final_date;
        r1000_data_w.tax_classification   := r1000_row.tax_classification;
        r1000_data_w.bookkeeping          := r1000_row.bookkeeping;
        r1000_data_w.exemption            := r1000_row.exemption;
        r1000_data_w.fine_exemption       := r1000_row.fine_exemption;
        r1000_data_w.situation            := r1000_row.situation;
        r1000_data_w.accountant_name      := r1000_row.accountant_name;
        r1000_data_w.accountant_cpf       := r1000_row.accountant_cpf;
        r1000_data_w.accountant_phone     := r1000_row.accountant_phone;
        r1000_data_w.accountant_cell      := r1000_row.accountant_cell;
        r1000_data_w.accountant_email     := r1000_row.accountant_email;
        r1000_data_w.soft_house_cnpj      := r1000_row.soft_house_cnpj;
        r1000_data_w.soft_house_name      := r1000_row.soft_house_name;
        r1000_data_w.soft_house_contact   := r1000_row.soft_house_contact;
        r1000_data_w.soft_house_phone     := r1000_row.soft_house_phone;
        r1000_data_w.soft_house_email     := r1000_row.soft_house_email;
        r1000_data_w.administrative_unit  := r1000_row.administrative_unit;
        r1000_data_w.administrative_cpnj  := r1000_row.administrative_cpnj;
        RETURN NEXT r1000_data_w;
        end;
      end loop;
    return;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION tax_reinf_data_pck.get_data_r1000 (batch_code_p text) FROM PUBLIC;
