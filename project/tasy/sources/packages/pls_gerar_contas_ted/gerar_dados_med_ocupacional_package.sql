-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_contas_ted.gerar_dados_med_ocupacional ( nr_seq_lote_p pls_ted_conta_lote.nr_sequencia%type, dt_competencia_p pls_ted_conta_lote.dt_competencia %type, nr_seq_segurado_p pls_ted_conta_lote.nr_seq_segurado %type, nr_seq_titular_p pls_ted_conta_lote.nr_seq_titular %type, nr_seq_contrato_p pls_ted_conta_lote.nr_seq_contrato %type, nr_seq_contrato_grupo_p pls_ted_conta_lote.nr_seq_contrato_grupo %type, cd_cgc_p pls_ted_conta_lote.cd_cgc %type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

					
nr_seq_ted_conta_benef_w	pls_ted_conta_benef.nr_sequencia%type;
vl_total_benef_w		pls_ted_conta_benef.valor_total_benef%type;
vl_total_lote_w			pls_ted_conta_lote.vl_total_conta%type;
vl_total_reembolso_w		pls_ted_conta_lote.vl_total_reemb%type := 0;

c01 CURSOR FOR

SELECT	a.nr_sequencia nr_seq_segurado,
	substr(pls_obter_dados_segurado(a.nr_sequencia, 'N'), 1, 40) nm_segurado,
	pls_obter_dados_segurado(a.nr_sequencia, 'CME') nr_seq_matricula
from	pls_segurado a,
	pls_contrato b
where	a.nr_seq_contrato = b.nr_sequencia
and (a.nr_sequencia = nr_seq_segurado_p or coalesce(nr_seq_segurado_p,0) = '0')
and (b.nr_contrato = nr_seq_contrato_p  or coalesce(nr_seq_contrato_p,0)  = '0')
and	((b.cd_cgc_estipulante = cd_cgc_p) or (coalesce(trim(both cd_cgc_p), 'x') = 'x'))
and (a.nr_seq_titular = nr_seq_titular_p or coalesce(nr_seq_titular_p,0) = 0)
and		(((nr_seq_contrato_grupo_p IS NOT NULL AND nr_seq_contrato_grupo_p::text <> '') and exists (	SELECT	1
		from	pls_contrato_grupo c
		where	b.nr_Sequencia = c.nr_seq_contrato
		and	c.nr_seq_grupo = nr_seq_contrato_grupo_p)) or (coalesce(nr_seq_contrato_grupo_p,0) = 0))
and exists (	select 1
		from 	pls_conta y,
				pls_tipo_atendimento x
		where 	y.nr_seq_segurado = a.nr_sequencia
		and	y.nr_seq_tipo_atendimento = x.nr_sequencia
		and	x.cd_tiss in ('12','14','15','16','17','18','19','20','21')
		and 	trunc(y.dt_fechamento_conta,'MONTH') = trunc(dt_competencia_p,'MONTH'));
c01_w c01%rowtype;


c02 CURSOR(	nr_seq_segurado_pc	pls_ted_conta_lote.nr_seq_segurado%type) FOR
SELECT	ds_prestador,
	cd_despesa,
	dt_item,
	(vl_reembolso - coalesce(vl_coparticipacao,0)) vl_reembolso_lib,
	(vl_liberado - coalesce(vl_coparticipacao,0)) vl_lib,
	nr_seq_conta,
	nr_seq_prest_exec,
	ie_tipo_guia,
	ie_tipo_atendimento_imp,
	cd_tiss
from (	select 	substr(pls_obter_dados_prestador(a.nr_seq_prestador_exec,'NF'),1,255) ds_prestador,
		b.cd_procedimento cd_despesa,
		b.dt_procedimento dt_item,
		0 vl_liberado,
		b.vl_liberado vl_reembolso,
		(	select  y.vl_coparticipacao
				from	pls_conta_coparticipacao y
				where  y.nr_seq_conta = b.nr_seq_conta
				and    y.nr_seq_conta_mat = b.nr_sequencia ) vl_coparticipacao,
		a.nr_sequencia nr_seq_conta,
		a.nr_seq_prestador_exec nr_seq_prest_exec,
		a.ie_tipo_guia ie_tipo_guia,
		a.ie_tipo_atendimento_imp ie_tipo_atendimento_imp,
		c.cd_tiss cd_tiss
	from	pls_protocolo_conta z,
		pls_conta a,
		pls_conta_proc b,
		pls_tipo_atendimento c
	where	z.nr_sequencia = a.nr_seq_protocolo
	and	b.nr_seq_conta = a.nr_sequencia
	and	a.nr_seq_tipo_atendimento = c.nr_sequencia
	and	a.nr_seq_segurado = nr_seq_segurado_pc
	 and	c.cd_tiss in ('12','14','15','16','17','18','19','20','21')
	and  	z.ie_tipo_protocolo = 'R'
	and 	trunc(a.dt_fechamento_conta,'MONTH') = trunc(dt_competencia_p,'MONTH')
	
union all

	SELECT   substr(pls_obter_dados_prestador(a.nr_seq_prestador_exec,'NF'),1,255) ds_prestador,
	b.cd_material cd_despesa,
	b.dt_atendimento dt_item,
	0 vl_liberado,
	b.vl_liberado vl_reembolso,
	(  	select  y.vl_coparticipacao
		from  pls_conta_coparticipacao y
		where  y.nr_seq_conta = b.nr_seq_conta
		and    y.nr_seq_conta_mat = b.nr_sequencia ) vl_coparticipacao,
	a.nr_sequencia nr_seq_conta,
	a.nr_seq_prestador_exec nr_seq_prest_exec,
	a.ie_tipo_guia ie_tipo_guia,
	a.ie_tipo_atendimento_imp ie_tipo_atendimento_imp,
	c.cd_tiss cd_tiss
	from  pls_protocolo_conta z,
		pls_conta a,
		pls_conta_mat b,
		pls_tipo_atendimento c
	where  z.nr_sequencia = a.nr_seq_protocolo
	and  b.nr_seq_conta = a.nr_sequencia
	and	a.nr_seq_tipo_atendimento = c.nr_sequencia
	and  a.nr_seq_segurado = nr_seq_segurado_pc
	and	c.cd_tiss in ('12','14','15','16','17','18','19','20','21')
	and  z.ie_tipo_protocolo = 'R'
	and 	trunc(a.dt_fechamento_conta,'MONTH') = trunc(dt_competencia_p,'MONTH')
	
union all

	select   substr(pls_obter_dados_prestador(a.nr_seq_prestador_exec,'NF'),1,255) ds_prestador,
		b.cd_procedimento cd_despesa,
		b.dt_procedimento dt_item,
		b.vl_liberado vl_liberado,
		0 vl_reembolso,
	(  select  y.vl_coparticipacao
		from  pls_conta_coparticipacao y
		where  y.nr_seq_conta = b.nr_seq_conta
		and    y.nr_seq_conta_mat = b.nr_sequencia ) vl_coparticipacao,
		a.nr_sequencia nr_seq_conta,
		a.nr_seq_prestador_exec nr_seq_prest_exec,
		a.ie_tipo_guia ie_tipo_guia,
		a.ie_tipo_atendimento_imp ie_tipo_atendimento_imp,
		c.cd_tiss cd_tiss
	from  pls_protocolo_conta z,
			pls_conta a,
			pls_conta_proc b,
			pls_tipo_atendimento c
	where  z.nr_sequencia = a.nr_seq_protocolo
	and  b.nr_seq_conta = a.nr_sequencia
	and	a.nr_seq_tipo_atendimento = c.nr_sequencia
	and  a.nr_seq_segurado = nr_seq_segurado_pc
	and	c.cd_tiss in ('12','14','15','16','17','18','19','20','21')
	and  z.ie_tipo_protocolo = 'C'
	and 	trunc(a.dt_fechamento_conta,'MONTH') = trunc(dt_competencia_p,'MONTH')
	
union all

	select   substr(pls_obter_dados_prestador(a.nr_seq_prestador_exec,'NF'),1,255) ds_prestador,
	b.cd_material cd_despesa,
	b.dt_atendimento dt_item,
	b.vl_liberado vl_liberado,
	0 vl_reembolso,
	(  select  y.vl_coparticipacao
		from  pls_conta_coparticipacao y
		where  y.nr_seq_conta = b.nr_seq_conta
		and    y.nr_seq_conta_mat = b.nr_sequencia ) vl_coparticipacao,
		a.nr_sequencia nr_seq_conta,
		a.nr_seq_prestador_exec nr_seq_prest_exec,
		a.ie_tipo_guia ie_tipo_guia,
		a.ie_tipo_atendimento_imp ie_tipo_atendimento_imp,
		c.cd_tiss cd_tiss
	from  pls_protocolo_conta z,
			pls_conta a,
			pls_conta_mat b,
			pls_tipo_atendimento c
	where  z.nr_sequencia = a.nr_seq_protocolo
	and  b.nr_seq_conta = a.nr_sequencia
	and	a.nr_seq_tipo_atendimento = c.nr_sequencia
	and  a.nr_seq_segurado = nr_seq_segurado_pc
	and  c.cd_tiss in ('12','14','15','16','17','18','19','20','21')
	and  z.ie_tipo_protocolo = 'C'
	and 	trunc(a.dt_fechamento_conta,'MONTH') = trunc(dt_competencia_p,'MONTH')) alias29;
c02_w 					c02%rowtype;



BEGIN
	Open c01;
	Fetch c01 Into c01_w;
	While c01%Found loop
		Begin

		select	nextval('pls_ted_conta_benef_seq')
		into STRICT	nr_seq_ted_conta_benef_w
		;

		insert into pls_ted_conta_benef(
			nr_sequencia, cd_matricula_benef,
			nr_seq_segurado, nr_seq_lote_ted_cta,
			cd_estabelecimento, nm_usuario_nrec,
			dt_atualizacao_nrec, nm_usuario,
			dt_atualizacao
		) values (
			nr_seq_ted_conta_benef_w,  c01_w.nr_seq_matricula,
			c01_w.nr_seq_segurado, nr_seq_lote_p,
			cd_estabelecimento_p, nm_usuario_p,
			clock_timestamp(), nm_usuario_p,
			clock_timestamp()
		);
		commit;

		Open c02(c01_w.nr_seq_segurado);
		Fetch c02 Into c02_w;
		While c02%found loop
			Begin

			insert into pls_ted_conta_dados(
			nr_sequencia, nr_seq_conta,
			nr_seq_prest_exec, ie_tipo_guia,
			ie_tipo_atend, dt_item,
			cd_item, vl_item,
			cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_lote_ted_benef
			) values (
			nextval('pls_ted_conta_dados_seq'),  c02_w.nr_seq_conta,
			c02_w.nr_seq_prest_exec, c02_w.ie_tipo_guia,
			c02_w.cd_tiss, c02_w.dt_item,
			c02_w.cd_despesa, c02_w.vl_lib,
			cd_estabelecimento_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(),
			nm_usuario_p, nr_seq_ted_conta_benef_w
			);
			commit;
			
			vl_total_reembolso_w := vl_total_reembolso_w + c02_w.vl_reembolso_lib;

        Exception
          When Others Then
            Null;

        End;

		Fetch c02 Into c02_w;
		End Loop;
		Close c02;

		if (nr_seq_ted_conta_benef_w IS NOT NULL AND nr_seq_ted_conta_benef_w::text <> '') then
			select	sum(vl_item)
			into STRICT	vl_total_benef_w
			from	pls_ted_conta_dados
			where	nr_seq_lote_ted_benef = nr_seq_ted_conta_benef_w;

			update	pls_ted_conta_benef
			set	valor_total_benef = vl_total_benef_w
			where	nr_sequencia = nr_seq_ted_conta_benef_w;
		end if;

    Exception
      When Others Then
        Null;
    End;

	Fetch c01 Into c01_w;
	End Loop;
	Close c01;

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then
	select	sum(valor_total_benef)
	into STRICT	vl_total_lote_w
	from	pls_ted_conta_benef
	where	nr_seq_lote_ted_cta = nr_seq_lote_p;

	update	pls_ted_conta_lote
	set	vl_total_conta = vl_total_lote_w,
		vl_total_reemb = vl_total_reembolso_w,
		vl_total_geral = vl_total_lote_w + vl_total_reembolso_w,
		ds_valor_extenso = substr(elimina_acentuacao(obter_extenso_param(vl_total_lote_w, null)),1,2000)
	where	nr_sequencia = nr_seq_lote_p;
	commit;
end if;
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_contas_ted.gerar_dados_med_ocupacional ( nr_seq_lote_p pls_ted_conta_lote.nr_sequencia%type, dt_competencia_p pls_ted_conta_lote.dt_competencia %type, nr_seq_segurado_p pls_ted_conta_lote.nr_seq_segurado %type, nr_seq_titular_p pls_ted_conta_lote.nr_seq_titular %type, nr_seq_contrato_p pls_ted_conta_lote.nr_seq_contrato %type, nr_seq_contrato_grupo_p pls_ted_conta_lote.nr_seq_contrato_grupo %type, cd_cgc_p pls_ted_conta_lote.cd_cgc %type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
