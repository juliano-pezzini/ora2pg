-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_simult_concor_pck.obter_select_val_32 ( dados_regra_cab_p pls_simult_concor_pck.t_dado_cab_regra, dados_regra_ocor_p pls_tipos_ocor_pck.dados_regra, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, dt_item_p pls_oc_cta_selecao_ocor_v.dt_item%type, nr_seq_conta_p pls_oc_cta_selecao_ocor_v.nr_seq_conta%type, nr_seq_prestador_exec_princ_p pls_conta.nr_seq_prestador_exec_princ%type, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, bind_sql_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


current_setting('pls_simult_concor_pck.ds_sql_w')::varchar(4000)		varchar(12000);
ds_filtro_proc_w	varchar(1500);
ds_filtro_mat_w		varchar(1500);
ds_campos_adic_w	varchar(1000);
ie_analise_cm_nova_w	pls_parametros.ie_analise_cm_nova%type;
ds_ie_glosa_w		varchar(100);


BEGIN
PERFORM set_config('pls_simult_concor_pck.ds_sql_w', null, false);

-- binds usadas em qualquer situacao
bind_sql_p := sql_pck.bind_variable(	':nr_id_transacao_pc', nr_id_transacao_p, bind_sql_p);
bind_sql_p := sql_pck.bind_variable(	':nr_seq_segurado_pc', nr_seq_segurado_p, bind_sql_p);
bind_sql_p := sql_pck.bind_variable(	':nr_seq_simult_conc_pc', dados_regra_cab_p.nr_sequencia, bind_sql_p);

select	coalesce(max(ie_analise_cm_nova),'S')
into STRICT	ie_analise_cm_nova_w
from	pls_parametros;

-- se tiver regra para procedimento, inclui no select
if (dados_regra_cab_p.qt_regra_proc > 0) then
	
	-- obtem os filtros que sao especificos para o procedimento
	bind_sql_p := pls_simult_concor_pck.obter_filtro_item(	'P', 'proc', dados_regra_ocor_p, dados_regra_cab_p, cd_guia_referencia_p, dt_item_p, nr_seq_conta_p, nr_seq_prestador_exec_princ_p, bind_sql_p, 'A');
						
	-- obtem campos adicionais que sao especificos para procedimento
	bind_sql_p := pls_simult_concor_pck.obter_campo_adic_proc(	dados_regra_ocor_p, dados_regra_cab_p, cd_guia_referencia_p, dt_item_p, nr_seq_conta_p, nr_seq_prestador_exec_princ_p, bind_sql_p);
			
	if (ie_analise_cm_nova_w = 'S') then
		ds_ie_glosa_w := '	 and	proc.ie_glosa = ''N''';
	end if;
			
	PERFORM set_config('pls_simult_concor_pck.ds_sql_w', current_setting('pls_simult_concor_pck.ds_sql_w')::varchar(4000) || pls_util_pck.enter_w ||
			'select	''P'' ie_tipo_registro,' || pls_util_pck.enter_w ||
			'	(select count(distinct proc.ie_origem_proced||proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ')' || pls_util_pck.enter_w ||
			'	 from   pls_conta_proc_ocor_v proc' || pls_util_pck.enter_w ||
			'	 where  proc.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			ds_ie_glosa_w || pls_util_pck.enter_w ||
			ds_filtro_proc_w ||
			'	 and exists(	select	1' || pls_util_pck.enter_w ||
			'			from	pls_combinacao_item_tm x' || pls_util_pck.enter_w ||
			'			where	x.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 		and	x.ie_and_or		= ''AND''' || pls_util_pck.enter_w ||
			'	 		and    	x.ie_origem_proced 	= proc.ie_origem_proced' || pls_util_pck.enter_w ||
			'	 		and    	x.cd_procedimento 	= proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ')) qt_casou_proc_and, ' || pls_util_pck.enter_w ||
			'	(select count(distinct proc.ie_origem_proced||proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ')' || pls_util_pck.enter_w ||
			'	 from   pls_conta_proc_ocor_v proc' || pls_util_pck.enter_w ||
			'	 where  proc.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			ds_ie_glosa_w || pls_util_pck.enter_w ||
			
			ds_filtro_proc_w ||
			'	 and exists(	select	1' || pls_util_pck.enter_w ||
			'			from	pls_combinacao_item_tm x' || pls_util_pck.enter_w ||
			'	 		where	x.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 		and	x.ie_and_or		= ''OR''' || pls_util_pck.enter_w ||
			'	 		and    	x.ie_origem_proced 	= proc.ie_origem_proced' || pls_util_pck.enter_w ||
			'	 		and    	x.cd_procedimento 	= proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ')) qt_casou_proc_ou, ' || pls_util_pck.enter_w ||
			'	(select count(distinct proc.ie_origem_proced||proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ')' || pls_util_pck.enter_w ||
			'	 from   pls_conta_proc_ocor_v proc' || pls_util_pck.enter_w ||
			'	 where  proc.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			'	 and	proc.ie_tipo_despesa = ''4''' || pls_util_pck.enter_w ||
			ds_ie_glosa_w || pls_util_pck.enter_w ||
			ds_filtro_proc_w ||
			'	 and exists(	select	1' || pls_util_pck.enter_w ||
			'			from	pls_comb_cta_item_proc z' || pls_util_pck.enter_w ||
			'			where	z.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 		and	z.ie_and_or		= ''AND''' || pls_util_pck.enter_w ||
			'	 		and    	z.ie_tipo_desp_proc 	= ''4''' || pls_util_pck.enter_w || ')) qt_casou_pacote_and, ' || pls_util_pck.enter_w ||
			'	(select count(distinct proc.ie_origem_proced||proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ')' || pls_util_pck.enter_w ||
			'	 from   pls_conta_proc_ocor_v proc' || pls_util_pck.enter_w ||
			'	 where  proc.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			'	 and	proc.ie_tipo_despesa = ''4''' || pls_util_pck.enter_w ||
			ds_ie_glosa_w || pls_util_pck.enter_w ||
			ds_filtro_proc_w ||
			'	 and exists(	select	1' || pls_util_pck.enter_w ||
			'			from	pls_comb_cta_item_proc z' || pls_util_pck.enter_w ||
			'			where	z.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 		and	z.ie_and_or		= ''OR''' || pls_util_pck.enter_w ||
			'	 		and    	z.ie_tipo_desp_proc 	= ''4''' || pls_util_pck.enter_w || ')) qt_casou_pacote_or, ' || pls_util_pck.enter_w ||
			'	(select count(distinct x.ie_agrupamento_item)' || pls_util_pck.enter_w ||
			'	 from   pls_conta_proc_ocor_v proc,' || pls_util_pck.enter_w ||
			'		pls_combinacao_item_tm x' || pls_util_pck.enter_w ||
			'	 where  proc.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			ds_ie_glosa_w || pls_util_pck.enter_w ||
			ds_filtro_proc_w ||
			'	 and	x.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 and	x.ie_and_or		= ''AND'' ' || pls_util_pck.enter_w ||
			'	 and    x.ie_origem_proced 	= proc.ie_origem_proced' || pls_util_pck.enter_w ||
			'	 and    x.cd_procedimento 	= proc.' || current_setting('pls_simult_concor_pck.ds_campo_proced_g')::varchar(30) || ') ie_agrup_item ' || pls_util_pck.enter_w ||
			ds_campos_adic_w || pls_util_pck.enter_w ||
			'from	dual' || pls_util_pck.enter_w, false);
end if;

-- se tiver regra para material, inclui no select
if (dados_regra_cab_p.qt_regra_mat > 0) then
	
	-- se tiver valor acima inclui o union all
	if (current_setting('pls_simult_concor_pck.ds_sql_w')::(varchar(4000) IS NOT NULL AND (varchar(4000))::text <> '')) then
		PERFORM set_config('pls_simult_concor_pck.ds_sql_w', current_setting('pls_simult_concor_pck.ds_sql_w')::varchar(4000) || pls_util_pck.enter_w || 'union all', false);
	end if;
	
	-- obtem os filtros que sao especificos para o material
	bind_sql_p := pls_simult_concor_pck.obter_filtro_item(	'M', 'mat', dados_regra_ocor_p, dados_regra_cab_p, cd_guia_referencia_p, dt_item_p, nr_seq_conta_p, nr_seq_prestador_exec_princ_p, bind_sql_p, 'A');
						
	-- obtem campos adicionais que sao especificos para material
	bind_sql_p := pls_simult_concor_pck.obter_campo_adic_mat(	dados_regra_ocor_p, dados_regra_cab_p, cd_guia_referencia_p, dt_item_p, nr_seq_conta_p, nr_seq_prestador_exec_princ_p, bind_sql_p);
	
	PERFORM set_config('pls_simult_concor_pck.ds_sql_w', current_setting('pls_simult_concor_pck.ds_sql_w')::varchar(4000) || pls_util_pck.enter_w ||
			'select	''M'' ie_tipo_registro,' || pls_util_pck.enter_w ||
			'	(select count(distinct mat.nr_seq_material)' || pls_util_pck.enter_w ||
			'	 from   pls_conta_mat_ocor_v mat' || pls_util_pck.enter_w ||
			'	 where  mat.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			ds_filtro_mat_w ||
			'	 and exists (	select	1' || pls_util_pck.enter_w ||
			'			from	pls_combinacao_item_tm x' || pls_util_pck.enter_w ||
			'	 		where	x.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 		and	x.ie_and_or		= ''AND''' || pls_util_pck.enter_w ||
			'	 		and    	x.nr_seq_material	= mat.nr_seq_material)) qt_casou_mat_and, ' || pls_util_pck.enter_w ||
			'	(select count(distinct mat.nr_seq_material)' || pls_util_pck.enter_w ||
			'	 from   pls_conta_mat_ocor_v mat' || pls_util_pck.enter_w ||
			'	 where  mat.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			ds_filtro_mat_w ||
			'	 and exists (	select	1' || pls_util_pck.enter_w ||
			'			from	pls_combinacao_item_tm x' || pls_util_pck.enter_w ||
			'	 		where	x.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 		and	x.ie_and_or		= ''OR''' || pls_util_pck.enter_w ||
			'	 		and    	x.nr_seq_material	= mat.nr_seq_material)) qt_casou_mat_ou, ' || pls_util_pck.enter_w ||
			'	0 qt_casou_pacote_and, ' || pls_util_pck.enter_w ||
			'	0 qt_casou_pacote_or, ' || pls_util_pck.enter_w ||
			'	(select count(distinct x.ie_agrupamento_item)' || pls_util_pck.enter_w ||
			'	 from   pls_conta_mat_ocor_v mat,' || pls_util_pck.enter_w ||
			'		pls_combinacao_item_tm x' || pls_util_pck.enter_w ||
			'	 where  mat.nr_seq_segurado = :nr_seq_segurado_pc' || pls_util_pck.enter_w ||
			ds_filtro_mat_w ||
			'	 and	x.nr_seq_combinacao	= :nr_seq_simult_conc_pc' || pls_util_pck.enter_w ||
			'	 and	x.ie_and_or		= ''AND'' ' || pls_util_pck.enter_w ||
			'	 and    x.nr_seq_material	= mat.nr_seq_material) ie_agrup_item ' || pls_util_pck.enter_w ||
			ds_campos_adic_w || pls_util_pck.enter_w ||
			'from	dual' || pls_util_pck.enter_w, false);
end if;
	
return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_simult_concor_pck.obter_select_val_32 ( dados_regra_cab_p pls_simult_concor_pck.t_dado_cab_regra, dados_regra_ocor_p pls_tipos_ocor_pck.dados_regra, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, dt_item_p pls_oc_cta_selecao_ocor_v.dt_item%type, nr_seq_conta_p pls_oc_cta_selecao_ocor_v.nr_seq_conta%type, nr_seq_prestador_exec_princ_p pls_conta.nr_seq_prestador_exec_princ%type, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, bind_sql_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
