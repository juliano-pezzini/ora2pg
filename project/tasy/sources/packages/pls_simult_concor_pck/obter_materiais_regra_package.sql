-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_simult_concor_pck.obter_materiais_regra ( nr_seq_regra_p pls_combinacao_item_cta.nr_sequencia%type, ie_and_or_p text, ie_gera_ocorrencia_p text, cd_guia_p pls_conta.cd_guia%type, ie_evento_ocor_p text) RETURNS SETOF T_MATERIAL_DATA AS $body$
DECLARE


linha_w				t_material_row;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_grupo_rec_w		material.nr_seq_grupo_rec%type;
nr_seq_estrutura_w		pls_ocorrencia_estrutura.nr_sequencia%type;
ie_tipo_desp_mat_w		pls_material.ie_tipo_despesa%type;
ie_gera_ocorrencia_w		varchar(1);

ds_sql_regra_w			varchar(2000);
bind_sql_regra_w		sql_pck.t_dado_bind;
cursor_regra_w			sql_pck.t_cursor;

ds_tabela_mat_w			varchar(500);
ds_filtro_mat_w			varchar(1000);
ds_sql_mat_w			varchar(2000);
bind_sql_mat_w			sql_pck.t_dado_bind;
cursor_mat_w			sql_pck.t_cursor;
tb_material_w			pls_util_cta_pck.t_number_table;
					
BEGIN

bind_sql_regra_w.delete;

ds_sql_regra_w	:= 	'select	a.nr_seq_material, ' || pls_util_pck.enter_w ||
			'	a.nr_seq_estrutura, ' || pls_util_pck.enter_w ||
			'	a.nr_seq_grupo_rec, ' || pls_util_pck.enter_w ||
			'	a.ie_tipo_desp_mat, ' || pls_util_pck.enter_w ||
			'	a.ie_gera_ocorrencia ' || pls_util_pck.enter_w ||
			'from	pls_comb_item_cta_mat a ' || pls_util_pck.enter_w ||
			'where	a.nr_seq_combinacao = :nr_seq_combinacao' || pls_util_pck.enter_w;
			
bind_sql_regra_w := sql_pck.bind_variable(	':nr_seq_combinacao', nr_seq_regra_p, bind_sql_regra_w);
			
if (ie_and_or_p IS NOT NULL AND ie_and_or_p::text <> '') then
	ds_sql_regra_w	:=	ds_sql_regra_w	|| 'and	a.ie_and_or = :ie_and_or' || pls_util_pck.enter_w;
	bind_sql_regra_w := sql_pck.bind_variable(	':ie_and_or', ie_and_or_p, bind_sql_regra_w);
end if;

if (ie_gera_ocorrencia_p IS NOT NULL AND ie_gera_ocorrencia_p::text <> '') then
	ds_sql_regra_w	:=	ds_sql_regra_w	|| 'and	a.ie_gera_ocorrencia = :ie_gera_ocorrencia' || pls_util_pck.enter_w;
	bind_sql_regra_w := sql_pck.bind_variable(	':ie_gera_ocorrencia', ie_gera_ocorrencia_p, bind_sql_regra_w);
end if;

bind_sql_regra_w := sql_pck.executa_sql_cursor(	ds_sql_regra_w, bind_sql_regra_w);
loop
	fetch cursor_regra_w
	into 	nr_seq_material_w, nr_seq_estrutura_w, nr_seq_grupo_rec_w,
		ie_tipo_desp_mat_w, ie_gera_ocorrencia_w;
	EXIT WHEN NOT FOUND; /* apply on cursor_regra_w */
	
	linha_w.nr_seq_material		:= null;
	linha_w.ie_gera_ocorrencia	:= null;
	linha_w.ie_agrupamento_item	:= null;
	
	-- Se tiver informado codigo do procedimento na regra, incluir direto no retorno
	if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
	
		linha_w.nr_seq_material		:= nr_seq_material_w;
		linha_w.ie_gera_ocorrencia	:= ie_gera_ocorrencia_w;
		
		linha_w.ie_agrupamento_item	:= 'M' || nr_seq_material_w;
		
		RETURN NEXT linha_w;
	else
		-- senao busca todos os materiais
		ds_tabela_mat_w := null;
		ds_filtro_mat_w := null;
		bind_sql_mat_w.delete;
		
		-- grupo de receita vem da tabela material
		if (nr_seq_grupo_rec_w IS NOT NULL AND nr_seq_grupo_rec_w::text <> '') then
		
			ds_tabela_mat_w := ds_tabela_mat_w || ', material b' || pls_util_pck.enter_w;
			ds_filtro_mat_w	:= ds_filtro_mat_w || 	'and b.cd_material = a.cd_material' || pls_util_pck.enter_w ||
								'and b.nr_seq_grupo_rec = :nr_seq_grupo_rec' || pls_util_pck.enter_w;
			
			bind_sql_mat_w := sql_pck.bind_variable(	':nr_seq_grupo_rec', nr_seq_grupo_rec_w, bind_sql_mat_w);
			
			linha_w.ie_agrupamento_item := 'MR' || nr_seq_grupo_rec_w;
		end if;

		if (ie_tipo_desp_mat_w IS NOT NULL AND ie_tipo_desp_mat_w::text <> '') then
		
			ds_filtro_mat_w	:= ds_filtro_mat_w || 'and a.ie_tipo_despesa = :ie_tipo_despesa' || pls_util_pck.enter_w;
			bind_sql_mat_w := sql_pck.bind_variable(	':ie_tipo_despesa', ie_tipo_desp_mat_w, bind_sql_mat_w);
			
			linha_w.ie_agrupamento_item := 'MD' || ie_tipo_desp_mat_w;
		end if;
		
		-- se a guia foi informada
		if (cd_guia_p IS NOT NULL AND cd_guia_p::text <> '') then
		
			ds_tabela_mat_w := ds_tabela_mat_w || ', pls_conta_mat_ocor_v c' || pls_util_pck.enter_w;
			ds_filtro_mat_w := ds_filtro_mat_w || ' and c.nr_seq_material = a.nr_sequencia' || pls_util_pck.enter_w;
								
			-- importacao XML
			if (ie_evento_ocor_p = 'IMP') then
				ds_filtro_mat_w := ds_filtro_mat_w || 'and c.cd_guia_imp = :cd_guia' || pls_util_pck.enter_w;
			else
				ds_filtro_mat_w := ds_filtro_mat_w || 'and c.cd_guia_referencia = :cd_guia' || pls_util_pck.enter_w;
			end if;
			
			bind_sql_mat_w := sql_pck.bind_variable(	':cd_guia', cd_guia_p, bind_sql_mat_w);
		end if;
		
		ds_sql_mat_w	:= 	'select	a.nr_sequencia ' || pls_util_pck.enter_w ||
					'from	pls_material a ' || pls_util_pck.enter_w ||
					ds_tabela_mat_w ||
					'where	1 = 1 ' || pls_util_pck.enter_w ||
					ds_filtro_mat_w;
		
		-- executa o comando sql com os respectivos binds
		bind_sql_mat_w := sql_pck.executa_sql_cursor(	ds_sql_mat_w, bind_sql_mat_w);
		loop
			fetch cursor_mat_w bulk collect into tb_material_w
			limit pls_util_pck.qt_registro_transacao_w;
			exit when tb_material_w.count = 0;
			
			for i in tb_material_w.first .. tb_material_w.last loop
			
				linha_w.nr_seq_material		:= tb_material_w(i);
				linha_w.ie_gera_ocorrencia	:= ie_gera_ocorrencia_w;
				
				-- para gravar o agrupamento no caso de regras em branco
				if (coalesce(nr_seq_grupo_rec_w::text, '') = '' and coalesce(ie_tipo_desp_mat_w::text, '') = '') then
					linha_w.ie_agrupamento_item := 'M' || nr_seq_material_w;
				end if;
				
				RETURN NEXT linha_w;
			end loop;
			
		end loop;
		close cursor_mat_w;
	end if;
end loop;
close cursor_regra_w;

return;				
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_simult_concor_pck.obter_materiais_regra ( nr_seq_regra_p pls_combinacao_item_cta.nr_sequencia%type, ie_and_or_p text, ie_gera_ocorrencia_p text, cd_guia_p pls_conta.cd_guia%type, ie_evento_ocor_p text) FROM PUBLIC;
