-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_simult_concor_pck.obter_filtro_item ( ie_tipo_registro_p text, ds_alias_p text, dados_regra_ocor_p pls_tipos_ocor_pck.dados_regra, dados_regra_cab_p pls_simult_concor_pck.t_dado_cab_regra, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, dt_item_p pls_oc_cta_selecao_ocor_v.dt_item%type, nr_seq_conta_p pls_oc_cta_selecao_ocor_v.nr_seq_conta%type, nr_seq_prestador_exec_princ_p pls_conta.nr_seq_prestador_exec_princ%type, bind_sql_p INOUT sql_pck.t_dado_bind, ie_tipo_importacao_p text) AS $body$
DECLARE

	
ds_filtro_sql_w		varchar(1500);


BEGIN
ds_filtro_sql_w := null;

-- alimenta as variaveis globais da package para posterior uso na montagem do filtro
CALL pls_simult_concor_pck.alimenta_ds_campo_filtro(dados_regra_ocor_p, ie_tipo_importacao_p);

-- faz o filtro por guia ou por data de atendimento
if (dados_regra_cab_p.ie_tipo_verificacao = '1') then
	ds_filtro_sql_w := ds_filtro_sql_w || 	'and ' || ds_alias_p || '.' || current_setting('pls_simult_concor_pck.ds_campo_guia_g')::varchar(30) || ' = :cd_guia_referencia_pc' || pls_util_pck.enter_w;
	bind_sql_p := sql_pck.bind_variable(	':cd_guia_referencia_pc', cd_guia_referencia_p, bind_sql_p);
elsif (dados_regra_cab_p.ie_tipo_verificacao = '2') then
	-- faz por data de atendimento
	-- verifica se e proc ou mat
	if (ie_tipo_registro_p = 'P') then
		ds_filtro_sql_w := ds_filtro_sql_w ||	'and ' || ds_alias_p || '.' || current_setting('pls_simult_concor_pck.ds_campo_dt_proc_g')::varchar(30) || ' between :dt_inicio_item_pc and :dt_fim_item_pc' || pls_util_pck.enter_w;
	else
		ds_filtro_sql_w := ds_filtro_sql_w ||	'and ' || ds_alias_p || '.' || current_setting('pls_simult_concor_pck.ds_campo_dt_mat_g')::varchar(30) || ' between :dt_inicio_item_pc and :dt_fim_item_pc' || pls_util_pck.enter_w;
	end if;
	
	bind_sql_p := sql_pck.bind_variable(	':dt_inicio_item_pc', trunc(dt_item_p,'dd'), bind_sql_p, 'DATAHORA');
	bind_sql_p := sql_pck.bind_variable(	':dt_fim_item_pc', trunc(dt_item_p,'dd') + 86399/86400, bind_sql_p, 'DATAHORA');
else
	ds_filtro_sql_w := ds_filtro_sql_w  ||	'and ' ||  ds_alias_p || '.nr_seq_conta = :nr_seq_conta_pc'|| pls_util_pck.enter_w;
	
	bind_sql_p := sql_pck.bind_variable(	':nr_seq_conta_pc', nr_seq_conta_p, bind_sql_p);
end if;

-- filtra a vigencia da data
if (dados_regra_cab_p.dt_inicio_vigencia IS NOT NULL AND dados_regra_cab_p.dt_inicio_vigencia::text <> '' AND dados_regra_cab_p.dt_fim_vigencia IS NOT NULL AND dados_regra_cab_p.dt_fim_vigencia::text <> '') then

	ds_filtro_sql_w := ds_filtro_sql_w || 'and	' || ds_alias_p || '.dt_atendimento_conta between :dt_inicio and :dt_fim' || pls_util_pck.enter_w;
	bind_sql_p := sql_pck.bind_variable(	':dt_inicio', dados_regra_cab_p.dt_inicio_vigencia, bind_sql_p);
	bind_sql_p := sql_pck.bind_variable(	':dt_fim', dados_regra_cab_p.dt_fim_vigencia, bind_sql_p);
else
	if (dados_regra_cab_p.dt_inicio_vigencia IS NOT NULL AND dados_regra_cab_p.dt_inicio_vigencia::text <> '') then
		
		ds_filtro_sql_w := ds_filtro_sql_w || 'and	' || ds_alias_p || '.dt_atendimento_conta >= :dt_inicio' || pls_util_pck.enter_w;
		bind_sql_p := sql_pck.bind_variable(	':dt_inicio', dados_regra_cab_p.dt_inicio_vigencia, bind_sql_p);
	end if;
	
	if (dados_regra_cab_p.dt_fim_vigencia IS NOT NULL AND dados_regra_cab_p.dt_fim_vigencia::text <> '') then
		
		ds_filtro_sql_w := ds_filtro_sql_w || 'and	' || ds_alias_p || '.dt_atendimento_conta <= :dt_fim' || pls_util_pck.enter_w;
		bind_sql_p := sql_pck.bind_variable(	':dt_fim', dados_regra_cab_p.dt_fim_vigencia, bind_sql_p);
	end if;
end if;

if (dados_regra_cab_p.ie_mesmo_prestador_exec_princ = 'S') then

	ds_filtro_sql_w := ds_filtro_sql_w || 'and	' || ds_alias_p || '.nr_seq_prestador_exec_princ = :nr_seq_prestador_exec_princ ' || pls_util_pck.enter_w;
	bind_sql_p := sql_pck.bind_variable(	':nr_seq_prestador_exec_princ', nr_seq_prestador_exec_princ_p, bind_sql_p);
	
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_simult_concor_pck.obter_filtro_item ( ie_tipo_registro_p text, ds_alias_p text, dados_regra_ocor_p pls_tipos_ocor_pck.dados_regra, dados_regra_cab_p pls_simult_concor_pck.t_dado_cab_regra, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, dt_item_p pls_oc_cta_selecao_ocor_v.dt_item%type, nr_seq_conta_p pls_oc_cta_selecao_ocor_v.nr_seq_conta%type, nr_seq_prestador_exec_princ_p pls_conta.nr_seq_prestador_exec_princ%type, bind_sql_p INOUT sql_pck.t_dado_bind, ie_tipo_importacao_p text) FROM PUBLIC;
