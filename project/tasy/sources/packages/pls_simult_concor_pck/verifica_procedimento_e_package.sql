-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_simult_concor_pck.verifica_procedimento_e ( nr_seq_simult_conc_p pls_combinacao_item_cta.nr_sequencia%type, dados_regra_p pls_tipos_ocor_pck.dados_regra, cd_guia_p pls_conta.cd_guia%type) RETURNS varchar AS $body$
DECLARE

			
ie_retorno_w		varchar(1);

qt_item_e_w		integer;
qt_item_regra_w		integer;
qt_item_analise_w	integer;

ie_conta_igual_comb_w	pls_combinacao_item_cta.ie_conta_igual_comb%type;
qt_dias_considerar_w	pls_combinacao_item_cta.qt_dias_considerar%type;

dt_min_proc_w		timestamp;
dt_max_proc_w		timestamp;

qt_dif_dias_w		integer;
			

BEGIN

ie_retorno_w	:= 'N';
qt_item_e_w	:= 0;

-- Obtencao dos dados da regra. 
select	a.ie_conta_igual_comb,
	a.qt_dias_considerar,
	-- Select para verificar a quantidade total de itens da regra "E" para ver se bate com a quantidade do select acima
	-- se bater, e porque o criterio "E" foi atendido 
	(select	count(1)
	from	pls_comb_cta_item_proc x
	where	x.nr_seq_combinacao = a.nr_sequencia
	and	x.ie_and_or = 'AND') qt_regra
into STRICT	ie_conta_igual_comb_w,
	qt_dias_considerar_w,
	qt_item_regra_w
from	pls_combinacao_item_cta a
where	a.nr_sequencia	= nr_seq_simult_conc_p;

-- Verificar se existe regra E primeiro, senao nem precisa buscar 
if (qt_item_regra_w > 0) then

	-- Select para verificar a quantidade de procedimentos da analise que estao na lista de procedimentos "E" da regra 
	if (dados_regra_p.ie_evento = 'IMP') then
		
		select	count(distinct a.cd_procedimento_imp) qt,
			min(a.dt_procedimento_imp),
			max(a.dt_procedimento_imp)
		into STRICT	qt_item_e_w,
			dt_min_proc_w,
			dt_max_proc_w
		from	pls_combinacao_item_tm x,
			pls_conta_proc_ocor_v	a
		where	x.nr_seq_combinacao	= nr_seq_simult_conc_p
		and	x.ie_tipo_registro	= 'P'
		and	x.ie_and_or		= 'AND'
		and	a.cd_guia_imp		= cd_guia_p
		and	a.ie_origem_proced	= x.ie_origem_proced
		and	a.cd_procedimento_imp	= x.cd_procedimento;
		
	else
		select	count(distinct a.cd_procedimento) qt,
			min(a.dt_procedimento),
			max(a.dt_procedimento)
		into STRICT	qt_item_e_w,
			dt_min_proc_w,
			dt_max_proc_w
		from	pls_combinacao_item_tm x,
			pls_conta_proc_ocor_v	a
		where	x.nr_seq_combinacao	= nr_seq_simult_conc_p
		and	x.ie_tipo_registro	= 'P'
		and	x.ie_and_or		= 'AND'
		and	a.cd_guia_referencia	= cd_guia_p
		and	a.ie_origem_proced	= x.ie_origem_proced
		and	a.cd_procedimento	= x.cd_procedimento;
	end if;
end if;

-- Se o campo IE_CONTA_IGUAL_COMB  for S, tem que ser quantidade igual
if (ie_conta_igual_comb_w = 'S') then
	
	if (dados_regra_p.ie_evento = 'IMP') then
		
		select	count(distinct a.cd_procedimento) qt
		into STRICT	qt_item_analise_w
		from	pls_conta_proc_ocor_v	a
		where	a.cd_guia_imp =  cd_guia_p;
	else
		select	count(distinct a.cd_procedimento) qt
		into STRICT	qt_item_analise_w
		from	pls_conta_proc_ocor_v	a
		where	a.cd_guia_referencia =  cd_guia_p;
	end if;

	if (qt_item_e_w = qt_item_regra_w) and (qt_item_e_w = qt_item_analise_w) then
		
		ie_retorno_w	:= 'S';
	end if;
else
	if (qt_item_e_w = qt_item_regra_w) then
	
		ie_retorno_w	:= 'S';
	end if;
end if;

-- So vai ver o resto se tiver valido se nao nem olha.
if (ie_retorno_w = 'S') then

	-- Se a regra tiver restricao de quantidade de dias, ver se atende 
	if (qt_dias_considerar_w > 0) then

		qt_dif_dias_w	:= round(dt_max_proc_w - dt_min_proc_w);
		
		-- Se a quantidade de dias nao se enquadrar, nao pode aplicar a regra 
		if (qt_dif_dias_w > qt_dias_considerar_w) then
		
			ie_retorno_w	:= 'N';
		end if;
	end if;
end if;

return ie_retorno_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_simult_concor_pck.verifica_procedimento_e ( nr_seq_simult_conc_p pls_combinacao_item_cta.nr_sequencia%type, dados_regra_p pls_tipos_ocor_pck.dados_regra, cd_guia_p pls_conta.cd_guia%type) FROM PUBLIC;
