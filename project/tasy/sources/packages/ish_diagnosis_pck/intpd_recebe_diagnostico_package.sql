-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_diagnosis_pck.intpd_recebe_diagnostico (nr_sequencia_p bigint) AS $body$
DECLARE


_ora2pg_r RECORD;
ds_xml_w                	text;
xml_w               		xml;
casediagnosis_w         	xml;
ie_conversao_w          	intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w            	intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w        	intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_conv_w     	conversao_meio_externo.nr_seq_regra%type;
diagnostico_medico_w        	diagnostico_medico%rowtype;
diagnostico_doenca_w        	diagnostico_doenca%rowtype;
diagnostico_medico_new_w        diagnostico_medico%rowtype;
diagnostico_doenca_new_w        diagnostico_doenca%rowtype;
reg_integracao_w            	gerar_int_padrao.reg_integracao_conv;
nr_atendimento_w            	atendimento_paciente.nr_atendimento%type;
cd_doenca_w         		diagnostico_doenca.cd_doenca%type;
nr_seq_diagnostico_w        	diagnostico_doenca.nr_seq_interno%type;
nr_seq_diag_sup_w       	diagnostico_doenca.nr_seq_interno%type;
dt_diagnostico_w            	diagnostico_doenca.dt_diagnostico%type;
cd_medico_atendimento_w     	atendimento_paciente.cd_medico_atendimento%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
ie_sistema_externo_w        	varchar(15);
i               		integer;
ds_erro_w           		varchar(4000);
nr_seq_episodio_w       	episodio_paciente.nr_sequencia%type;
medic_diagnostico_doenca_w  	medic_diagnostico_doenca%rowtype;
ie_status_w         		intpd_fila_transmissao.ie_status%type       :=  'S';
ie_tipo_erro_w          	intpd_fila_transmissao.ie_tipo_erro%type    :=  'F';
dt_exclusao_w           	timestamp;
nr_seq_doc_origem_w     	intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_agrupador_w      	intpd_fila_transmissao.nr_seq_agrupador%type;
ie_evento_w         		intpd_fila_transmissao.ie_evento%type;
nr_seq_hcm_seg_diag_w       	hcm_segmento.nr_sequencia%type;
nr_seq_hcm_mensagem_w       	hcm_segmento.nr_seq_mensagem%type;
nr_seq_hcm_seg_hea_w        	hcm_segmento.nr_sequencia%type;
sapevent_w          		hcm_kopf.sapevent%type;
nm_usuario_w			diagnostico_doenca.nm_usuario%type;

c01 CURSOR FOR
SELECT	x.client,
        x.institution,
        x.patcaseid,
        x.diagseqno,
        x.extdiagno,
        x.movemntseqno,
        x.diagcatalog1,
        x.diagkey1,
        x.diagtyp1,
        x.diagcatalog2,
        x.diagkey2,
	x.diagtext,
        x.diagcreatdate,
        x.diagcreattime,
        x.diagperson,
        x.referraldia,
        x.treatmentdia,
        x.admissiondia,
        x.dischargedia,
        x.deptmaindia,
        x.hospmaindia,
        x.surgerydia,	
	x.causeofdeath,
        x.shorttext,
        x.extdiagrefkey,
        x.drgcategory,
        x.dialink,
        x.diagcertainty,
        x.diaglocation,
        x.diagshorttext,
	x.inttransdiag,
	x.drgrelvant,
	x.cancelind,
	x.canceluser,
	x.canceldate
from (
	SELECT  *
	from    xmltable('/CaseDiagnosis/item' passing casediagnosis_w columns
		client      varchar(3) path    'Client',
		institution     varchar(4) path    'Institution',
		patcaseid       varchar(10)    path    'Patcaseid',
		diagseqno   varchar(3) path    'DiagSeqno',
		extdiagno       varchar(8) path    'ExtDiagno',
		movemntseqno    varchar(5) path    'MovemntSeqno',
		diagcatalog1    varchar(2) path    'DiagCatalog1',
		diagkey1        varchar(30)    path    'DiagKey1',
		diagtyp1        varchar(1) path    'DiagTyp1',
		diagcatalog2    varchar(2) path    'DiagCatalog2',
		diagkey2        varchar(30)    path    'DiagKey2',
		diagtext       varchar(50)    path    'DiagText',
		diagcreatdate   varchar(10)    path    'DiagCreatDate', /* yyyy-mm-dd */

		diagcreattime   varchar(8) path    'DiagCreatTime', /* hh24:mi:ss */

		diagperson  varchar(10)    path    'DiagPerson',
		referraldia     varchar(1) path    'ReferralDia',
		treatmentdia    varchar(1) path    'TreatmentDia',
		admissiondia    varchar(1) path    'AdmissionDia',
		dischargedia    varchar(1) path    'DischargeDia',
		deptmaindia varchar(1) path    'DeptMainDia',
		hospmaindia varchar(1) path    'HospMainDia',
		surgerydia  varchar(1) path    'SurgeryDia',
		causeofdeath varchar(1) path    'CauseOfDeath',	
		shorttext       varchar(50)    path    'ShortText',
		extdiagrefkey   varchar(20)    path    'ExtDiagRefkey',
		drgcategory varchar(1) path    'DrgCategory',
		dialink     varchar(3) path    'DiaLink',
		diagcertainty   varchar(2) path    'DiagCertainty',
		diaglocation    varchar(2) path    'DiagLocation',
		diagshorttext   varchar(120) path 'DiagShortText',
		inttransdiag    varchar(1) path    'InttransDiag',
		drgrelvant	varchar(1) path    'DrgRelvant',
		cancelind	varchar(1)	path	'CancelInd',
		canceluser	varchar(30)	path	'CancelUser',
		canceldate	varchar(10)	path	'CancelDate')
	where   length(patcaseid) > 0
	
union all

	select  *
	from    xmltable('/CaseDiagnosis/item' passing casediagnosis_w columns
		client      varchar(3) path    'CLIENT',
		institution     varchar(4) path    'INSTITUTION',
		patcaseid       varchar(10)    path    'PATCASEID',
		diagseqno   varchar(3) path    'DIAG_SEQNO',
		extdiagno       varchar(8) path    'EXT_DIAGNO',
		movemntseqno    varchar(5) path    'MOVEMNT_SEQNO',
		diagcatalog1    varchar(2) path    'DIAG_CATALOG1',
		diagkey1        varchar(30)    path    'DIAG_KEY1',
		diagtyp1        varchar(1) path    'DIAG_TYP1',
		diagcatalog2    varchar(2) path    'DIAG_CATALOG2',
		diagkey2        varchar(30)    path    'DIAG_KEY2',
		diagtext       varchar(50)    path    'DIAG_TEXT',
		diagcreatdate   varchar(10)    path    'DIAG_CREAT_DATE', /* yyyy-mm-dd */

		diagcreattime   varchar(8) path    'DIAG_CREAT_TIME', /* hh24:mi:ss */

		diagperson  varchar(10)    path    'DIAG_PERSON',
		referraldia     varchar(1) path    'REFERRAL_DIA',
		treatmentdia    varchar(1) path    'TREATMENT_DIA',
		admissiondia    varchar(1) path    'ADMISSION_DIA',
		dischargedia    varchar(1) path    'DISCHARGE_DIA',
		deptmaindia varchar(1) path    'DEPT_MAIN_DIA',
		hospmaindia varchar(1) path    'HOSP_MAIN_DIA',
		surgerydia  varchar(1) path    'SURGERY_DIA',	
		causeofdeath  varchar(1) path    'CAUSE_OF_DEATH',	
		shorttext       varchar(50)    path    'SHORT_TEXT',
		extdiagrefkey   varchar(20)    path    'EXT_DIAG_REFKEY',
		drgcategory varchar(1) path    'DRG_CATEGORY',
		dialink     varchar(3) path    'DIA_LINK',
		diagcertainty   varchar(2) path    'DIAG_CERTAINTY',
		diaglocation    varchar(2) path    'DIAG_LOCATION',
		diagshorttext   varchar(120) path 'DIAG_SHORT_TEXT',
		inttransdiag    varchar(1) path    'INTTRANS_DIAG',
		drgrelvant	varchar(1) path    'DRG_RELVANT',
		cancelind	varchar(1)	path	'CANCEL_IND',
		canceluser	varchar(30)	path	'CANCEL_USER',
		canceldate	varchar(10)	path	'CANCEL_DATE')
	where   length(patcaseid) > 0) x
order by somente_numero(dialink),
    somente_numero(diagseqno);

c01_w   c01%rowtype;

ie_atual_w  varchar(1);

BEGIN
intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_w);

begin
dt_exclusao_w   := clock_timestamp();
select  a.ds_xml_retorno,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_sistema,
	b.nr_seq_projeto_xml,
	b.nr_seq_regra_conv,
	a.nr_seq_documento,
	a.ie_evento,
	a.nr_seq_agrupador
into STRICT    ds_xml_w,
	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_conv_w,
	nr_seq_doc_origem_w,
	ie_evento_w,
	nr_seq_agrupador_w
from    intpd_fila_transmissao a,
	intpd_eventos_sistema b
where   a.nr_seq_evento_sistema = b.nr_sequencia
and 	a.nr_sequencia = nr_sequencia_p;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (nr_seq_doc_origem_w IS NOT NULL AND nr_seq_doc_origem_w::text <> '') then
	begin
	select  nr_seq_segmento
	into STRICT    nr_seq_hcm_seg_diag_w
	from    hcm_fall
	where   nr_sequencia = nr_seq_doc_origem_w;
	
	select  nr_seq_mensagem
	into STRICT    nr_seq_hcm_mensagem_w
	from    hcm_segmento
	where   nr_sequencia = nr_seq_hcm_seg_diag_w;
	
	select  nr_sequencia
	into STRICT    nr_seq_hcm_seg_hea_w
	from    hcm_segmento
	where   nr_seq_mensagem = nr_seq_hcm_mensagem_w
	and 	ie_tipo = 'HEA'  LIMIT 1;
	
	select  sapevent
	into STRICT    sapevent_w
	from    hcm_kopf
	where   nr_seq_segmento = nr_seq_hcm_seg_hea_w;
	
	exception
	when others then
		nr_seq_hcm_seg_hea_w    :=  null;
	end;
end if;

if (ie_status_w = 'E') then
	update  intpd_fila_transmissao
	set 	ie_status 		= ie_status_w,
		ie_tipo_erro 		= ie_tipo_erro_w,
		ie_response_procedure 	= 'S'
	where   nr_sequencia 		= nr_sequencia_p;
else
	begin	
	select  a.casediagnosis
	into STRICT    casediagnosis_w
	from    xmltable(
		xmlnamespaces(
		    'urn:sap-com:document:sap:soap:functions:mc-style' as "n0",
		    'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
		'soapenv:Envelope/soapenv:Body/n0:CasediagnosisGetlistResponse' passing xml_w columns
		casediagnosis xmltype path 'CaseDiagnosis') a;
		
	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		CALL ish_lock_fila(ie_evento_w, c01_w.patcaseid);
		
		nr_seq_diag_sup_w   		:= null;
		diagnostico_doenca_w    	:=  diagnostico_doenca_new_w;
		diagnostico_medico_w    	:=  diagnostico_medico_new_w;
		reg_integracao_w.nm_tabela  	:=  'DIAGNOSTICO_DOENCA';
		reg_integracao_w.nm_elemento    :=  'CaseDiagnosis';
		reg_integracao_w.nr_seq_visao   :=  0;
		
		select  max(nr_sequencia)
		into STRICT    nr_seq_episodio_w
		from    episodio_paciente
		where   nr_episodio = c01_w.patcaseid;

		nr_atendimento_w    :=  ish_get_encounter_case(c01_w.patcaseid, null, c01_w.movemntseqno);
		
		select	substr(get_case_encounter_type(a.nr_seq_episodio, null, a.nr_atendimento, a.ie_tipo_atendimento),1,15) ie_tipo_atendimento
		into STRICT	ie_tipo_atendimento_w
		from	atendimento_paciente a
		where	a.nr_atendimento	= nr_atendimento_w;

		if (coalesce(c01_w.dialink,'000') <> '000') then
			
			intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_INTERNO', substr(c01_w.patcaseid || current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) || c01_w.dialink || current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) || c01_w.movemntseqno,1,40), 'S', nr_seq_diag_sup_w);
			
			if (nr_seq_diag_sup_w IS NOT NULL AND nr_seq_diag_sup_w::text <> '') then
				begin
				select  dt_diagnostico
				into STRICT    diagnostico_doenca_w.dt_diagnostico
				from    diagnostico_doenca
				where   nr_seq_interno = nr_seq_diag_sup_w;
				exception
				when others then
				    null;
				end;
			end if;
		end if;

		if (coalesce(diagnostico_doenca_w.dt_diagnostico::text, '') = '') then
			begin
			diagnostico_doenca_w.dt_diagnostico :=  to_date(c01_w.diagcreatdate || c01_w.diagcreattime,'yyyy-mm-ddhh24:mi:ss');
			exception
			when others then
				diagnostico_doenca_w.dt_diagnostico :=  clock_timestamp();
			end;
		end if;
		
		intpd_processar_atributo(reg_integracao_w, 'NR_ATENDIMENTO', nr_atendimento_w, 'N', diagnostico_doenca_w.nr_atendimento);
		
		if (c01_w.diagtyp1 not in ('+','#')) then
			intpd_processar_atributo(reg_integracao_w, 'CD_DOENCA', c01_w.diagkey1 || c01_w.diagtyp1, 'N', diagnostico_doenca_w.cd_doenca);
		else
			intpd_processar_atributo(reg_integracao_w, 'CD_DOENCA', c01_w.diagkey1, 'N', diagnostico_doenca_w.cd_doenca);
		end if;
		
		diagnostico_doenca_w.nr_seq_interno := somente_numero(intpd_conv('DIAGNOSTICO_DOENCA', 'NR_SEQ_INTERNO', substr(c01_w.patcaseid || current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) || c01_w.diagseqno || current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) || c01_w.movemntseqno,1,40), nr_seq_regra_conv_w, ie_conversao_w, 'I'));
		
		if (nr_seq_diag_sup_w IS NOT NULL AND nr_seq_diag_sup_w::text <> '') then
			begin
			select  cd_doenca
			into STRICT    diagnostico_doenca_w.cd_doenca_superior
			from    diagnostico_doenca
			where   nr_seq_interno = nr_seq_diag_sup_w;
			exception
			when others then
				null;
			end;
		end if;
		--intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_INTERNO', c01_w.diagseqno, 'N', diagnostico_doenca_w.cd_doenca);

		intpd_processar_atributo(reg_integracao_w, 'DS_DIAGNOSTICO', c01_w.diagtext, 'N', diagnostico_doenca_w.ds_diagnostico);
		intpd_processar_atributo(reg_integracao_w, 'IE_LADO', c01_w.diaglocation, 'S', diagnostico_doenca_w.ie_lado);
		intpd_processar_atributo(reg_integracao_w, 'IE_STATUS_DIAG', c01_w.diagcertainty, 'S', diagnostico_doenca_w.ie_status_diag);
		intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', current_setting('ish_diagnosis_pck.usernametasy')::varchar(15), 'N', diagnostico_doenca_w.nm_usuario);
		intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', clock_timestamp(), 'N', diagnostico_doenca_w.dt_atualizacao);
		
		if (position('+' in c01_w.diagtyp1) > 0) then --Quando + significa que e um diag Pai e este nao podeterum cd_doenca_superior vinculado.
			diagnostico_doenca_w.cd_doenca_superior := null;
		end if;

		if (coalesce(c01_w.cancelind,'NULL') = 'X' and (nr_seq_doc_origem_w IS NOT NULL AND nr_seq_doc_origem_w::text <> '') and diagnostico_doenca_w.nr_seq_interno > 0) then
			begin
			select  max(a.nr_sequencia)
			into STRICT    nr_seq_episodio_w
			from    episodio_paciente a,
				hcm_fall b
			where   a.nr_episodio   = b.caseno
			and 	b.nr_sequencia  = nr_seq_doc_origem_w;
			
			intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.canceluser, 'N', nm_usuario_w);

			if (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
				begin
				update  diagnostico_doenca a
				set 	ie_situacao         = 'I',
					dt_inativacao       = clock_timestamp(),
					nm_usuario_inativacao   = nm_usuario_w
				where	nr_seq_interno		= diagnostico_doenca_w.nr_seq_interno;
				end;
			end if;
			end;
		elsif (reg_integracao_w.qt_reg_log = 0) and (coalesce(c01_w.cancelind,'NULL') = 'NULL') then
			begin
			SELECT * FROM ish_diagnosis_pck.record_diag_medico(diagnostico_medico_w, diagnostico_doenca_w, reg_integracao_w) INTO STRICT _ora2pg_r;
 diagnostico_medico_w := _ora2pg_r.diagnostico_medico_p; diagnostico_doenca_w := _ora2pg_r.diagnostico_doenca_p; reg_integracao_w := _ora2pg_r.reg_integracao_p;
			
			diagnostico_doenca_w.ie_situacao := 'A';

			if (diagnostico_doenca_w.nr_seq_interno > 0) then
				
				SELECT * FROM ish_diagnosis_pck.record_diag('U', diagnostico_doenca_w, reg_integracao_w) INTO STRICT _ora2pg_r;
 diagnostico_doenca_w := _ora2pg_r.diagnostico_doenca_p; reg_integracao_w := _ora2pg_r.reg_integracao_p;
			else
				begin
				select  nextval('diagnostico_doenca_seq')
				into STRICT    diagnostico_doenca_w.nr_seq_interno
				;
				
				diagnostico_doenca_w.ie_nivel_atencao   := 'T';
				diagnostico_doenca_w.dt_liberacao   := diagnostico_doenca_w.dt_diagnostico;
				
				SELECT * FROM ish_diagnosis_pck.record_diag('I', diagnostico_doenca_w, reg_integracao_w) INTO STRICT _ora2pg_r;
 diagnostico_doenca_w := _ora2pg_r.diagnostico_doenca_p; reg_integracao_w := _ora2pg_r.reg_integracao_p;
				end;
			end if;
		
			if (coalesce(ie_tipo_atendimento_w,'0') <> '1') then
			
				update  diagnostico_doenca
				set 	ie_diag_referencia 	= case c01_w.referraldia  when 'X' then 'S' else  'N' end,
					ie_diag_tratamento 	= case c01_w.treatmentdia when 'X' then 'S' else  'N' end,
					ie_diag_admissao 	= case c01_w.admissiondia when 'X' then 'S' else  'N' end,
					ie_diag_trat_cert 	= case c01_w.dischargedia when 'X' then 'S' else  'N' end, --Sim, nao esta sendo atualizado o campo do IE_DIAG_ALTA, pois o sistema externo quando nao eh internado, utiliza o campo DISCHARGEDIA como ie_diag_trat_cert
					ie_diag_princ_depart 	= case c01_w.deptmaindia  when 'X' then 'S' else  'N' end,
					ie_diag_princ_episodio 	= case c01_w.hospmaindia  when 'X' then 'S' else  'N' end,
					ie_diag_cirurgia 	= case c01_w.surgerydia   when 'X' then 'S' else  'N' end,
					ie_diag_obito 		= case c01_w.causeofdeath when 'X' then 'S' else  'N' end,
					ie_diag_trat_especial   = case c01_w.inttransdiag when 'X' then 'S' else  'N' end,
					ie_relevante_drg	= case c01_w.drgcategory  when 'P' then 'S' when 'S' then 'S' else 'N' end
				where	nr_seq_interno		= diagnostico_doenca_w.nr_seq_interno;
			else			
				update  diagnostico_doenca
				set 	ie_diag_referencia 	= case c01_w.referraldia  when 'X' then 'S' else  'N' end,
					ie_diag_tratamento 	= case c01_w.treatmentdia when 'X' then 'S' else  'N' end,
					ie_diag_admissao 	= case c01_w.admissiondia when 'X' then 'S' else  'N' end,
					ie_diag_alta 		= case c01_w.dischargedia when 'X' then 'S' else  'N' end,
					ie_diag_princ_depart 	= case c01_w.deptmaindia  when 'X' then 'S' else  'N' end,
					ie_diag_princ_episodio 	= case c01_w.hospmaindia  when 'X' then 'S' else  'N' end,
					ie_diag_cirurgia 	= case c01_w.surgerydia   when 'X' then 'S' else  'N' end,
					ie_diag_obito 		= case c01_w.causeofdeath when 'X' then 'S' else  'N' end,
					ie_diag_trat_especial   = case c01_w.inttransdiag when 'X' then 'S' else  'N' end,
					ie_relevante_drg	= case c01_w.drgcategory  when 'P' then 'S' when 'S' then 'S' else 'N' end
				where	nr_seq_interno		= diagnostico_doenca_w.nr_seq_interno;
			end if;

			CALL gerar_log_diag_doenca(diagnostico_doenca_w.nr_seq_interno, current_setting('ish_diagnosis_pck.usernametasy')::varchar(15), 'U');
			
			CALL gerar_conv_meio_externo(
					null,
					'DIAGNOSTICO_DOENCA',
					'NR_SEQ_INTERNO',
					diagnostico_doenca_w.nr_seq_interno,
					substr(c01_w.patcaseid || current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) || c01_w.diagseqno || current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) || c01_w.movemntseqno,1,40),
					null,
					nr_seq_regra_conv_w,
					'A',
					'INTPDTASY');
			end;
		end if;
		
		end;
	end loop;
	close c01;
		
	if (reg_integracao_w.qt_reg_log > 0) then
		begin
		rollback;
		update  intpd_fila_transmissao
		set 	ie_status = 'E',
			ie_response_procedure = 'S'
		where   nr_sequencia = nr_sequencia_p;
		end;
	else
		update  intpd_fila_transmissao
		set 	ie_status = 'S',
			nr_doc_externo = diagnostico_doenca_w.nr_atendimento|| current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) ||to_char(diagnostico_doenca_w.dt_diagnostico, 'DD/MM/YYYY HH24:MI:SS')|| current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10) ||diagnostico_doenca_w.cd_doenca,
			ie_response_procedure = 'S'
		where   nr_sequencia = nr_sequencia_p;
	end if;

	reg_integracao_w := gerar_int_padrao.gravar_log(reg_integracao_w);
	end;
end if;
exception
when others then
	begin
	ds_erro_w   :=  substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm ,1, 4000);
	rollback;
	
	update  intpd_fila_transmissao
	set 	ie_status = 'E',
		ds_log = ds_erro_w,
		ie_response_procedure = 'S'
	where   nr_sequencia = nr_sequencia_p;
	
	end;
end;

if (nr_seq_agrupador_w > 0) then
	CALL intpd_processar_fila_trans(null, 'S', nr_seq_agrupador_w);
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_diagnosis_pck.intpd_recebe_diagnostico (nr_sequencia_p bigint) FROM PUBLIC;
