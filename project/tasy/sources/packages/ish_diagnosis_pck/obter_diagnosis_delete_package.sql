-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ish_diagnosis_pck.obter_diagnosis_delete ( nr_seq_fila_p bigint, ie_tipo_p text) RETURNS SETOF T_DIAGNOSIS AS $body$
DECLARE


r_diagnosis_row_w		r_diagnosis_row;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_seq_diagnostico_w		diagnostico_doenca.nr_seq_interno%type;
cd_doenca_w			diagnostico_doenca.cd_doenca%type;
ds_classificacao_aux_w		classificacao_diagnostico.ds_classificacao%type;
ds_chave_fila_w			varchar(35);
diagnostico_doenca_chave_w	dbms_sql.varchar2_table;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
movemntseqno_w			varchar(100);
cd_empresa_w			estabelecimento.cd_empresa%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_episodio_w		atendimento_paciente.nr_seq_episodio%type;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
ie_tipo_episodio_w		varchar(15);

c00 CURSOR FOR
SELECT	nr_seq_interno,
	cd_doenca,
	cd_doenca_superior
from	diagnostico_doenca
where	nr_atendimento	= nr_atendimento_w
and	nr_seq_interno in (SELECT	x.nr_seq_interno  --CID pai
	from	diagnostico_doenca x
	where	x.nr_seq_interno	= nr_seq_diagnostico_w
	
union

	select	y.nr_seq_interno  --CID filho
	from	diagnostico_doenca x,
		diagnostico_doenca y
	where	x.nr_atendimento	= nr_atendimento_w
	and	x.nr_seq_interno	= nr_seq_diagnostico_w
	and	x.nr_atendimento	= y.nr_atendimento
	and	y.cd_doenca_superior	= x.cd_doenca
	and	(y.dt_inativacao IS NOT NULL AND y.dt_inativacao::text <> ''))
order by cd_doenca_superior nulls last;

c00_w	c00%rowtype;


BEGIN
intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

if (coalesce(nr_seq_fila_p,0) > 0) then
	select	a.nr_seq_documento,
		b.nr_seq_regra_conv,
		coalesce(b.ie_conversao, 'I')
	into STRICT	ds_chave_fila_w,
		nr_seq_regra_w,
		ie_conversao_w
	from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
	where	a.nr_seq_evento_sistema = b.nr_sequencia
	and	a.nr_sequencia = nr_seq_fila_p;

	diagnostico_doenca_chave_w := obter_lista_string(ds_chave_fila_w, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10));

	nr_atendimento_w		:= diagnostico_doenca_chave_w(1); --nr_atendimento
	nr_seq_diagnostico_w		:= diagnostico_doenca_chave_w(2); --nr_seq_interno
	cd_doenca_w			:= diagnostico_doenca_chave_w(3); --cd_doenca

	/*
	select	b.ds_classificacao
	into	ds_classificacao_aux_w
	from	classificacao_diagnostico b,
		medic_diagnostico_doenca a,
		diagnostico_doenca c
	where	a.nr_seq_classificacao = b.nr_sequencia
	and	a.nr_atendimento = c.nr_atendimento
	and	a.cd_doenca = c.cd_doenca
	and	a.dt_diagnostico = c.dt_diagnostico
	and	c.nr_seq_interno = nr_seq_diagnostico_w;
	*/


	open C00;
	loop
	fetch C00 into
		c00_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */

		select	max(a.cd_empresa),
			max(a.cd_estabelecimento),
			max(b.nr_seq_episodio)
		into STRICT	cd_empresa_w,
			cd_estabelecimento_w,
			nr_seq_episodio_w
		from	estabelecimento a,
			atendimento_paciente b
		where	a.cd_estabelecimento	= b.cd_estabelecimento
		and	b.nr_atendimento	= nr_atendimento_w;

		

		reg_integracao_w.nm_tabela 			:= 'ESTABELECIMENTO';
		reg_integracao_w.nm_elemento			:= 'urn:CasediagnosisDeletemult';

		if (ie_tipo_p = 'I') then
			reg_integracao_w.nm_elemento	:= 'DeletedDiagnosis';
		elsif (ie_tipo_p = 'H') then
			reg_integracao_w.nm_elemento	:= 'urn:CasediagnosisDeletemult';
		end if;

		begin
		select	lpad(nr_episodio,10,0),
			substr(obter_tipo_episodio(nr_sequencia),1,15)
		into STRICT 	r_diagnosis_row_w.patcaseid,
			ie_tipo_episodio_w
		from	episodio_paciente e
		where 	nr_sequencia = nr_seq_episodio_w;
		exception
		when others then
			null;
		end;

		intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'client', 'N', cd_empresa_w, 'S', r_diagnosis_row_w.client);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', cd_estabelecimento_w, 'S', r_diagnosis_row_w.institution);

		reg_integracao_w.nm_tabela 	:= 'DIAGNOSTICO_DOENCA';
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO', 'diagseqno', 'N', c00_w.nr_seq_interno, 'S', movemntseqno_w);
		--o retorno desta function sera patcaseid || ';' || movemntseqno (exemplo 000321321;00044532) e precisamos apenas do movemntseqno

		if (length(movemntseqno_w) > 0) then
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO', 'diagseqno', 'N', obter_valor_campo_separador(movemntseqno_w, 2, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10)), 'N', r_diagnosis_row_w.diagseqno);
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO', 'movemntseqno', 'N', obter_valor_campo_separador(movemntseqno_w, 3, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10)), 'N', r_diagnosis_row_w.movemntseqno);
		end if;

		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_DIAGNOSTICO', 'extdiagno', 'N', c00_w.nr_seq_interno, 'N', r_diagnosis_row_w.extdiagno);

		RETURN NEXT r_diagnosis_row_w;

	end loop;
	close C00;
end if;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_diagnosis_pck.obter_diagnosis_delete ( nr_seq_fila_p bigint, ie_tipo_p text) FROM PUBLIC;
