-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ish_diagnosis_pck.obter_diagnosis_change ( nr_seq_fila_p bigint, ie_tipo_p text) RETURNS SETOF T_DIAGNOSIS AS $body$
DECLARE


r_diagnosis_row_w		r_diagnosis_row;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_seq_diagnostico_w		diagnostico_doenca.nr_seq_interno%type;
nr_seq_diag_sup_w		diagnostico_doenca.nr_seq_interno%type;
cd_doenca_w			diagnostico_doenca.cd_doenca%type;
ds_classificacao_aux_w		classificacao_diagnostico.ds_classificacao%type;
nr_seq_classificao_w		classificacao_diagnostico.nr_sequencia%type;
ds_chave_fila_w			varchar(35);
diagnostico_doenca_chave_w	dbms_sql.varchar2_table;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
movemntseqno_w			varchar(100);
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
ie_tipo_episodio_w		varchar(15);
dt_diagnostico_w		varchar(255);
cd_versao_w			varchar(100);

-- arrumar

c01 CURSOR FOR
SELECT	a.nr_atendimento,
	d.nr_seq_interno nr_seq_interno,
	d.cd_doenca cd_doenca_atual,
	d.cd_doenca_superior,
	d.nr_seq_versao_cid cd_versao_atual,
	obter_ultimo_catalogo_cid(c.cd_doenca_cid) cd_versao_anterior, -- nao temos controle do de-para de cids anteriores
	null cd_doenca_anterior,   -- nao temos controle do de-para de cids anteriores
	d.cd_medico,
	substr(d.ds_diagnostico, 1, 49) shorttext,
	d.dt_diagnostico,
	coalesce(d.dt_cid, d.dt_diagnostico) diagcreatdate,
	coalesce(d.dt_cid, d.dt_diagnostico) diagcreattime,
	d.ie_status_diag,
	d.ie_lado,
	a.cd_estabelecimento,
	a.nr_seq_episodio,
	obter_departamento_data(d.nr_atendimento, d.dt_diagnostico) movemntseqno,
	c.cd_versao,
	e.cd_empresa,
	d.ie_classificacao_doenca,
	case d.ie_diag_referencia when 'S' then 'X' else null end referraldia,
	case d.ie_diag_tratamento when 'S' then 'X' else null end treatmentdia,
	case d.ie_diag_admissao when 'S' then 'X' else null end admissiondia,
	case d.ie_diag_princ_depart when 'S' then 'X' else null end deptmaindia,
	case d.ie_diag_alta when 'S' then 'X' else null end dischargedia,
	case d.ie_diag_cirurgia when 'S' then 'X' else null end surgerydia,
	case d.ie_diag_princ_episodio when 'S' then 'X' else null end hospmaindia,
	case d.ie_diag_trat_especial when 'S' then 'X' else null end inttransdiag,
	case d.ie_diag_trat_cert when 'S' then 'X' else null end ie_diag_trat_cert,
	case d.ie_diag_obito when 'S' then 'X' else null end ie_diag_obito,
	case d.ie_relevante_drg when 'S' then 'X' else null end drgrelvant,
	substr(get_case_encounter_type(a.nr_seq_episodio, null, a.nr_atendimento, a.ie_tipo_atendimento),1,15) ie_tipo_atendimento
from	diagnostico_doenca d,
	atendimento_paciente a,
	cid_doenca c,
	estabelecimento e
where	a.nr_atendimento = d.nr_atendimento
and	c.cd_doenca_cid = d.cd_doenca
and	a.cd_estabelecimento = e.cd_estabelecimento
and	d.nr_atendimento = nr_atendimento_w
and	d.nr_seq_interno = nr_seq_diagnostico_w
and	d.cd_doenca = cd_doenca_w;

c01_w	c01%rowtype;

BEGIN
intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

if (coalesce(nr_seq_fila_p,0) > 0) and (ie_tipo_p in ('H','I'))then
	select	a.nr_seq_documento,
		b.nr_seq_regra_conv,
		coalesce(b.ie_conversao,'I')
	into STRICT	ds_chave_fila_w,
		nr_seq_regra_w,
		ie_conversao_w
	from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
	where	a.nr_seq_evento_sistema = b.nr_sequencia
	and	a.nr_sequencia = nr_seq_fila_p;

	diagnostico_doenca_chave_w := obter_lista_string(ds_chave_fila_w, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10));

	nr_atendimento_w	 := diagnostico_doenca_chave_w(1); --nr_atendimento
	nr_seq_diagnostico_w := diagnostico_doenca_chave_w(2); --dt_diagnostico
	cd_doenca_w			 := diagnostico_doenca_chave_w(3); --cd_doenca

	begin
	select	b.nr_sequencia
	into STRICT	nr_seq_classificao_w
	from	classificacao_diagnostico b,
		medic_diagnostico_doenca a,
		diagnostico_doenca c
	where	a.nr_seq_classificacao = b.nr_sequencia
	and	a.nr_atendimento = c.nr_atendimento
	and	a.cd_doenca = c.cd_doenca
	and	a.dt_diagnostico = c.dt_diagnostico
	and	c.nr_seq_interno = nr_seq_diagnostico_w;
	exception
	when others then
		nr_seq_classificao_w	:=	null;
	end;
	
	reg_integracao_w.ie_somente_alterados		:= 'S';

	if (ie_tipo_p = 'I') then
		reg_integracao_w.nm_elemento	:= 'InputDiagnosis';
	elsif (ie_tipo_p = 'H') then
		reg_integracao_w.nm_elemento	:= 'urn:CasediagnosisChangemult';
	end if;

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		/*limpa todos os atributos do registro*/


		r_diagnosis_row_w := ish_diagnosis_pck.limpar_atributos_diagnosis(r_diagnosis_row_w);
		reg_integracao_w.nm_tabela 	:= 'ESTABELECIMENTO';
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'client', 'N', c01_w.cd_empresa, 'S', r_diagnosis_row_w.client);
		reg_integracao_w.nm_tabela 	:= 'ATENDIMENTO_PACIENTE';
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', c01_w.cd_estabelecimento, 'S', r_diagnosis_row_w.institution);

		begin
		select	lpad(nr_episodio,10,0),
			substr(obter_tipo_episodio(nr_sequencia),1,15)
		into STRICT 	r_diagnosis_row_w.patcaseid,
			ie_tipo_episodio_w
		from	episodio_paciente e
		where 	nr_sequencia = c01_w.nr_seq_episodio;
		exception
		when others then
			null;
		end;

		if (ie_tipo_p = 'H') then
			begin
			RETURN NEXT r_diagnosis_row_w;
			exit;
			end;
		end if;


		reg_integracao_w.nm_tabela 	:= 'DIAGNOSTICO_DOENCA';
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO', 'diagseqno', 'N', c01_w.nr_seq_interno, 'S', movemntseqno_w);
		--o retorno desta function sera patcaseid || ';' || movemntseqno (exemplo 000321321;00044532) e precisamos apenas do movemntseqno

		if (length(movemntseqno_w) > 0) then
			r_diagnosis_row_w.diagseqno		:= obter_valor_campo_separador(movemntseqno_w, 2, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10));
			r_diagnosis_row_w.movemntseqno		:= obter_valor_campo_separador(movemntseqno_w, 3, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10));
		end if;



		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DOENCA_SUPERIOR', 'dialink', 'N', c01_w.cd_doenca_superior, 'N', movemntseqno_w);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DOENCA_SUPERIOR', 'dialinkx', 'S', c01_w.cd_doenca_superior, 'N', r_diagnosis_row_w.dialinkx);

		if (length(movemntseqno_w) > 0) then
			begin
			select	nr_seq_interno
			into STRICT	nr_seq_diag_sup_w
			from	diagnostico_doenca
			where	nr_atendimento = nr_atendimento_w
			and	dt_diagnostico = c01_w.dt_diagnostico
			and	cd_doenca = movemntseqno_w;
			exception
			when others then
				nr_seq_diag_sup_w	:=	null;
			end;

			if (nr_seq_diag_sup_w IS NOT NULL AND nr_seq_diag_sup_w::text <> '') then
				intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO', 'diagseqno', 'N', nr_seq_diag_sup_w, 'S', movemntseqno_w);
				if (length(movemntseqno_w) > 0) then
					r_diagnosis_row_w.dialink		:= obter_valor_campo_separador(movemntseqno_w, 2, current_setting('ish_diagnosis_pck.ds_separador_w')::varchar(10));
				end if;
			end if;
		end if;

		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO','extdiagno', 'N', c01_w.nr_seq_interno, 'N', r_diagnosis_row_w.extdiagno);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO','extdiagnox', 'S', c01_w.nr_seq_interno, 'N', r_diagnosis_row_w.extdiagnox);

		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_VERSAO_CID', 'diagcatalog1', 'N',
			intpd_conv('CID_DOENCA_VERSAO', 'DT_VERSAO', c01_w.cd_versao_atual, reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, 'E'), 'N', r_diagnosis_row_w.diagcatalog1);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_VERSAO_CID','diagcatalog1x', 'S', c01_w.cd_versao_atual, 'N', r_diagnosis_row_w.diagcatalog1x);

		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DOENCA', 'diagkey1', 'N', ish_diagnosis_pck.get_diag(c01_w.nr_atendimento, c01_w.cd_doenca_atual, 'D'), 'N', r_diagnosis_row_w.diagkey1);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DOENCA', 'diagkey1x', 'S', ish_diagnosis_pck.get_diag(c01_w.nr_atendimento, c01_w.cd_doenca_atual, 'T'), 'N', r_diagnosis_row_w.diagkey1x);

		if (r_diagnosis_row_w.diagkey1x = 'X') then
			begin
			r_diagnosis_row_w.diagkey1	:=	ish_diagnosis_pck.get_diag(c01_w.nr_atendimento, r_diagnosis_row_w.diagkey1, 'D');
			r_diagnosis_row_w.diagtyp1	:=	ish_diagnosis_pck.get_diag(c01_w.nr_atendimento, r_diagnosis_row_w.diagkey1, 'T');
			r_diagnosis_row_w.diagtyp1x	:=	'X';
			end;
		end if;

		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_VERSAO_CID', 'diagcatalog2', 'N',
			intpd_conv('CID_DOENCA_VERSAO', 'DT_VERSAO', c01_w.cd_versao_anterior, reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, 'E'), 'N', r_diagnosis_row_w.diagcatalog2);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_VERSAO_CID', 'diagcatalog2x', 'S', c01_w.cd_versao_anterior, 'N', r_diagnosis_row_w.diagcatalog2x);

		intpd_processar_atrib_envio(reg_integracao_w, 'DT_CID','diagcreatdate', 'N', c01_w.diagcreatdate, 'N', dt_diagnostico_w);
		r_diagnosis_row_w.diagcreatdate	:= to_char(to_date(dt_diagnostico_w),'YYYY-MM-DD');
		r_diagnosis_row_w.diagcreattime	:= to_char(to_date(dt_diagnostico_w),'HH24:MI:SS');
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_CID','diagcreatdatex', 'S', c01_w.diagcreatdate, 'N', r_diagnosis_row_w.diagcreatdatex);
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_CID','diagcreattimex', 'S', c01_w.diagcreattime, 'N', r_diagnosis_row_w.diagcreattimex);
		if (coalesce(r_diagnosis_row_w.diagcreatdate,'NULL') = 'NULL') then
			dt_diagnostico_w	:= null;
			intpd_processar_atrib_envio(reg_integracao_w, 'DT_DIAGNOSTICO','diagcreatdate', 'N', c01_w.diagcreatdate, 'N', dt_diagnostico_w);
			r_diagnosis_row_w.diagcreatdate	:= to_char(to_date(dt_diagnostico_w),'YYYY-MM-DD');
			r_diagnosis_row_w.diagcreattime	:= to_char(to_date(dt_diagnostico_w),'HH24:MI:SS');
			intpd_processar_atrib_envio(reg_integracao_w, 'DT_DIAGNOSTICO','diagcreatdatex', 'S', c01_w.diagcreatdate, 'N', r_diagnosis_row_w.diagcreatdatex);
			intpd_processar_atrib_envio(reg_integracao_w, 'DT_DIAGNOSTICO','diagcreattimex', 'S', c01_w.diagcreattime, 'N', r_diagnosis_row_w.diagcreattimex);
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO','diagperson', 'N', c01_w.cd_medico, 'S', r_diagnosis_row_w.diagperson);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO','diagpersonx', 'S', c01_w.cd_medico, 'N', r_diagnosis_row_w.diagpersonx);

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_REFERENCIA','referraldia', 'N', c01_w.referraldia, 'N', r_diagnosis_row_w.referraldia);
		if (r_diagnosis_row_w.referraldia = 'S') then
			r_diagnosis_row_w.referraldia	:= 'X';
		else
			r_diagnosis_row_w.referraldia	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_REFERENCIA','referraldiax', 'S', c01_w.referraldia, 'N', r_diagnosis_row_w.referraldiax);

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_TRATAMENTO','treatmentdia', 'N', c01_w.treatmentdia, 'N', r_diagnosis_row_w.treatmentdia);
		if (r_diagnosis_row_w.treatmentdia = 'S') then
			r_diagnosis_row_w.treatmentdia	:= 'X';
		else
			r_diagnosis_row_w.treatmentdia	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_TRATAMENTO','treatmentdiax', 'S', c01_w.treatmentdia, 'N', r_diagnosis_row_w.treatmentdiax);

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_ADMISSAO','admissiondia', 'N', c01_w.admissiondia, 'N', r_diagnosis_row_w.admissiondia);
		if (r_diagnosis_row_w.admissiondia = 'S') then
			r_diagnosis_row_w.admissiondia	:= 'X';
		else
			r_diagnosis_row_w.admissiondia	:= null;
		end if;		
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_ADMISSAO','admissiondiax', 'S', c01_w.admissiondia, 'N', r_diagnosis_row_w.admissiondiax);		
		
		if (coalesce(c01_w.ie_tipo_atendimento,'0') <> '1') then			
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_TRAT_CERT','dischargedia', 'N', c01_w.IE_DIAG_TRAT_CERT, 'N', r_diagnosis_row_w.dischargedia);
			if (r_diagnosis_row_w.dischargedia = 'S') then
				r_diagnosis_row_w.dischargedia	:= 'X';
			else
				r_diagnosis_row_w.dischargedia	:= null;
			end if;
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_TRAT_CERT','dischargediax', 'S', c01_w.dischargedia, 'N', r_diagnosis_row_w.dischargediax);
		else
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_ALTA','dischargedia', 'N', c01_w.dischargedia, 'N', r_diagnosis_row_w.dischargedia);
			if (r_diagnosis_row_w.dischargedia = 'S') then
				r_diagnosis_row_w.dischargedia	:= 'X';
			else
				r_diagnosis_row_w.dischargedia	:= null;
			end if;
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_ALTA','dischargediax', 'S', c01_w.dischargedia, 'N', r_diagnosis_row_w.dischargediax);
		end if;		

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_PRINC_DEPART','deptmaindia', 'N', c01_w.deptmaindia, 'N', r_diagnosis_row_w.deptmaindia);
		if (r_diagnosis_row_w.deptmaindia = 'S') then
			r_diagnosis_row_w.deptmaindia	:= 'X';
		else
			r_diagnosis_row_w.deptmaindia	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_PRINC_DEPART','deptmaindiax', 'S', c01_w.deptmaindia, 'N', r_diagnosis_row_w.deptmaindiax);

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_PRINC_EPISODIO','hospmaindia', 'N', c01_w.hospmaindia, 'N', r_diagnosis_row_w.hospmaindia);
		if (r_diagnosis_row_w.hospmaindia = 'S') then
			r_diagnosis_row_w.hospmaindia	:= 'X';
		else
			r_diagnosis_row_w.hospmaindia	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_PRINC_EPISODIO','hospmaindiax', 'S', c01_w.hospmaindia, 'N', r_diagnosis_row_w.hospmaindiax);

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_CIRURGIA','surgerydia', 'N', c01_w.surgerydia, 'N', r_diagnosis_row_w.surgerydia);
		if (r_diagnosis_row_w.surgerydia = 'S') then
			r_diagnosis_row_w.surgerydia	:= 'X';
		else
			r_diagnosis_row_w.surgerydia	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_CIRURGIA','surgerydiax', 'S', c01_w.surgerydia, 'N', r_diagnosis_row_w.surgerydiax);
		
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_OBITO','causeofdeath', 'N', c01_w.ie_diag_obito, 'N', r_diagnosis_row_w.causeofdeath);
		if (r_diagnosis_row_w.causeofdeath = 'S') then
			r_diagnosis_row_w.causeofdeath	:= 'X';
		else
			r_diagnosis_row_w.causeofdeath	:= null;
		end if;		
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_OBITO','causeofdeathx', 'S', c01_w.ie_diag_obito, 'N', r_diagnosis_row_w.causeofdeathx);
		
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_TRAT_ESPECIAL','inttransdiag', 'N', c01_w.inttransdiag, 'N', r_diagnosis_row_w.inttransdiag);
		if (r_diagnosis_row_w.inttransdiag = 'S') then
			r_diagnosis_row_w.inttransdiag	:= 'X';
		else
			r_diagnosis_row_w.inttransdiag	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_DIAG_TRAT_ESPECIAL','inttransdiagx', 'S', c01_w.inttransdiag, 'N', r_diagnosis_row_w.inttransdiagx);
		
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_RELEVANTE_DRG','drgrelvant', 'N', c01_w.drgrelvant, 'N', r_diagnosis_row_w.drgrelvant);
		if (r_diagnosis_row_w.drgrelvant = 'S') then
			r_diagnosis_row_w.drgrelvant	:= 'X';
		else
			r_diagnosis_row_w.drgrelvant	:= null;
		end if;
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_RELEVANTE_DRG','drgrelvantx', 'S', c01_w.drgrelvant, 'N', r_diagnosis_row_w.drgrelvantx);		

		reg_integracao_w.nm_tabela 	:=	'DIAGNOSTICO_DOENCA';

		intpd_processar_atrib_envio(reg_integracao_w, 'DS_DIAGNOSTICO','diagtext', 'N', c01_w.shorttext, 'N', r_diagnosis_row_w.diagtext);
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_DIAGNOSTICO','diagtextx', 'S', c01_w.shorttext, 'N', r_diagnosis_row_w.diagtextx);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DOENCA_ATUAL','extdiagrefkey', 'N', ish_diagnosis_pck.get_diag(c01_w.nr_atendimento, c01_w.cd_doenca_atual, 'D'), 'N', r_diagnosis_row_w.extdiagrefkey);
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DOENCA_ATUAL','extdiagrefkeyx', 'S', c01_w.cd_doenca_atual, 'N', r_diagnosis_row_w.extdiagrefkeyx);

		/*select	ie_tipo_drg
		into	r_diagnosis_row_w.drgcategory		--
		from	episodio_paciente_drg
		where	nr_seq_episodio_paciente = c01_w.nr_seq_episodio;*/


		if (coalesce(ie_tipo_episodio_w,'X') <> '8' and
			r_diagnosis_row_w.referraldia <> 'X') then
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_CLASSIFICACAO_DOENCA','drgcategory', 'N', c01_w.ie_classificacao_doenca, 'N', r_diagnosis_row_w.drgcategory);

			if (coalesce(r_diagnosis_row_w.drgcategory,'X') <> 'P') then
				r_diagnosis_row_w.drgcategory	:=	'S';
			end if;
		else
			r_diagnosis_row_w.drgcategory	:= null;
		end if;

		intpd_processar_atrib_envio(reg_integracao_w, 'IE_CLASSIFICACAO_DOENCA','drgcategoryx', 'S', c01_w.ie_classificacao_doenca, 'N', r_diagnosis_row_w.drgcategoryx);
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_STATUS_DIAG','diagcertainty', 'N', c01_w.ie_status_diag, 'S', r_diagnosis_row_w.diagcertainty);
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_STATUS_DIAG','diagcertaintyx', 'S', c01_w.ie_status_diag, 'N', r_diagnosis_row_w.diagcertaintyx);
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_LADO','diaglocation', 'N', c01_w.ie_lado, 'S', r_diagnosis_row_w.diaglocation);
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_LADO','diaglocationx', 'S', c01_w.ie_lado, 'N', r_diagnosis_row_w.diaglocationx);

		/* marca um x no atributo para informar se a coluna correspondente foi modificada,
		neste caso o ish devera considerar todos os atributos como modificados. */


		RETURN NEXT r_diagnosis_row_w;
		end;
	end loop;
	close c01;
end if;

CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_diagnosis_pck.obter_diagnosis_change ( nr_seq_fila_p bigint, ie_tipo_p text) FROM PUBLIC;
