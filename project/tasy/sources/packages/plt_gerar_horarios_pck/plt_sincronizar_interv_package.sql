-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_interv ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE

					
	ds_sep_bv_w				varchar(50);
	nr_seq_pe_prescr_w		bigint;
	nr_seq_pe_proc_w		bigint;
	nr_seq_horario_w		bigint;
	ie_status_horario_w		varchar(1);
	cd_intervencao_w		varchar(255);
	ds_intervencao_w		varchar(255);
	ie_acm_sn_w				varchar(1);
	cd_intervalo_w			varchar(7);
	ds_intervalo_w			varchar(100);
	ds_atividades_w			varchar(2000);
	ds_comando_update_w		varchar(4000);
	current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;
	nr_horario_w			integer;	
	dt_fim_w				timestamp;
	
	
	c01 REFCURSOR;
		
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ds_sep_bv_w	:= obter_separador_bv;

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_seq_pe_prescr,
				nr_seq_pe_proc,
				nr_sequencia,
				ie_status,
				cd_intervencao,
				ds_recomendacao,
				ie_acm_sn,		
				cd_intervalo,
				ds_prescricao,
				ds_atividades,
				dt_horario
		from	(	SELECT	a.nr_sequencia nr_seq_pe_prescr,
							c.nr_seq_pe_proc,
							c.nr_sequencia,
							substr(obter_status_hor_interv(c.dt_fim_horario,c.dt_suspensao),1,1) ie_status,
							c.nr_seq_proc cd_intervencao,
							y.ds_procedimento ds_recomendacao,
							obter_se_acm_sn(null,x.ie_se_necessario) ie_acm_sn,		
							x.cd_intervalo,
							obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao) ds_prescricao,
							substr(adep_obter_desc_ativ_interv(c.nr_seq_proc, x.nr_seq_prescr),1,2000) ds_atividades,
							c.dt_horario,
							x.dt_suspensao
					FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.nr_atendimento = nr_atendimento_p and a.nr_sequencia	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sae_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sae_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(c.ie_situacao,'A') = 'A' and ((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SAE',
																									wheb_usuario_pck.get_cd_setor_atendimento, 
																									wheb_usuario_pck.get_cd_perfil, 
																									null, 
																									wheb_usuario_pck.get_cd_estabelecimento, 
																									null, 
																									null, 
																									null,
																									null, 
																									null,
																									null,
																									null) = 'S'))) group by
							a.nr_sequencia,
							c.nr_seq_pe_proc,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							substr(obter_status_hor_interv(c.dt_fim_horario,c.dt_suspensao),1,1),
							c.nr_seq_proc ,
							y.ds_procedimento ,
							obter_se_acm_sn(null,x.ie_se_necessario),		
							x.cd_intervalo,
							obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao)  ,
							substr(adep_obter_desc_ativ_interv(c.nr_seq_proc, x.nr_seq_prescr),1,2000) ,
							c.dt_horario,
							x.dt_suspensao) alias31
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		null,
											null,						'N',					ie_exibir_hor_suspensos_p,	dt_suspensao,		'E',
											nr_seq_pe_proc,				nr_seq_pe_prescr,		'S') = 'S'
		group by
				nr_seq_pe_prescr,
				nr_seq_pe_proc,
				nr_sequencia,
				ie_status,
				cd_intervencao,
				ds_recomendacao,
				ie_acm_sn,		
				cd_intervalo,
				ds_prescricao,
				ds_atividades,
				dt_horario
		order by
				dt_horario;	
	else
		open	c01 for
		SELECT	nr_seq_pe_prescr,
				nr_seq_pe_proc,
				nr_sequencia,
				ie_status,
				cd_intervencao,
				ds_recomendacao,
				ie_acm_sn,		
				cd_intervalo,
				ds_prescricao,
				ds_atividades,
				dt_horario
		from	(	SELECT	a.nr_sequencia nr_seq_pe_prescr,
							c.nr_seq_pe_proc,
							c.nr_sequencia,
							substr(obter_status_hor_interv(c.dt_fim_horario,c.dt_suspensao),1,1) ie_status,
							c.nr_seq_proc cd_intervencao,
							y.ds_procedimento ds_recomendacao,
							obter_se_acm_sn(null,x.ie_se_necessario) ie_acm_sn,		
							x.cd_intervalo,
							obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao) ds_prescricao,
							substr(adep_obter_desc_ativ_interv(c.nr_seq_proc, x.nr_seq_prescr),1,2000) ds_atividades,
							c.dt_horario,
							x.dt_suspensao
					FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10) and a.nr_sequencia	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sae_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sae_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(c.ie_situacao,'A') = 'A' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SAE', 
																									wheb_usuario_pck.get_cd_estabelecimento, 
																									wheb_usuario_pck.get_cd_setor_atendimento, 
																									wheb_usuario_pck.get_cd_perfil, 
																									null, 
																									null, 
																									null, 
																									null,
																									null, 
																									null,
																									null,
																									null) = 'S'))) and ((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) group by
							a.nr_sequencia,
							c.nr_seq_pe_proc,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							substr(obter_status_hor_interv(c.dt_fim_horario,c.dt_suspensao),1,1),
							c.nr_seq_proc ,
							y.ds_procedimento ,
							obter_se_acm_sn(null,x.ie_se_necessario) ,		
							x.cd_intervalo,
							obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao),
							substr(adep_obter_desc_ativ_interv(c.nr_seq_proc, x.nr_seq_prescr),1,2000) ,
							c.dt_horario,
							x.dt_suspensao) alias32
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		null,
											null,						'N',					ie_exibir_hor_suspensos_p,	dt_suspensao,		'E',
											nr_seq_pe_proc,				nr_seq_pe_prescr,		'S') = 'S'
		group by
				nr_seq_pe_prescr,
				nr_seq_pe_proc,
				nr_sequencia,
				ie_status,
				cd_intervencao,
				ds_recomendacao,
				ie_acm_sn,		
				cd_intervalo,
				ds_prescricao,
				ds_atividades,
				dt_horario
		order by
				dt_horario;		
	end if;
	
	loop
	fetch c01 into	nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			nr_seq_horario_w,
			ie_status_horario_w,
			cd_intervencao_w,
			ds_intervencao_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			ds_intervalo_w,
			ds_atividades_w,
			current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );
		if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then		
			ds_comando_update_w	:=	' update w_rep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
							' ds_diluicao = :ds_atividades, ' ||
							' ds_hint = :ds_atividades ' ||							
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||					
							' and cd_item = :cd_item ' ||
							' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
							' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ';
						
			CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_seq_pe_prescr_w) || ds_sep_bv_w ||
										'ds_atividades=' || to_char(ds_atividades_w) || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=E' || ds_sep_bv_w ||
										'nr_seq_item='|| to_char(nr_seq_pe_proc_w) || ds_sep_bv_w ||
										'cd_item=' || to_char(cd_intervencao_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'ds_prescricao=' || ds_intervalo_w || ds_sep_bv_w );
		end if;
		end;
	end loop;
	close c01;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_interv ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
