-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_obter_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_edicao_p text, ie_exibir_hor_suspensos_p text, dt_plano_p text, ie_prescr_usuario_p text, ie_estendidos_p bigint, dt_referencia_p timestamp) AS $body$
DECLARE


	nr_seq_wadep_w			bigint;
	nr_prescricao_w			bigint;
	nr_seq_solucao_w		integer;
	ds_solucao_w			varchar(255);
	ie_acm_sn_w				varchar(1);
	ds_prescricao_w			varchar(240);
	ie_status_solucao_w		varchar(15);
	ie_suspensa_w			varchar(1);
	dt_prev_prox_etapa_w	timestamp;
	ie_lib_pend_rep_w		varchar(1);
	dt_fim_w				timestamp;
	ds_componentes_w		varchar(240);	
	ie_liberado_w			varchar(1);
	ie_plano_atual_w		varchar(1);
	ie_retrogrado_w			varchar(1);
	ie_copiar_w				varchar(2);
	ie_pend_assinatura_w 	varchar(1);
	ds_cor_titulo_w			varchar(20);
	ie_curta_duracao_w		varchar(1);
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);
		
	
	c01 REFCURSOR;
	
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ie_copiar_w 	:= plt_obter_se_item_marcado('D', get_nr_seq_regra);
	ds_cor_titulo_w	:= plt_obter_cor_titulo('D',get_nr_seq_regra);

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_solucao,
				ds_solucao,
				ie_acm_sn,	
				ds_prescricao,
				ie_status_solucao,
				null,
				dt_prev_prox_etapa,
				CASE WHEN coalesce(obter_se_mostra_adic(1),'S')='N' THEN null  ELSE ds_componentes END  ds_componentes,
				ie_liberado,
				ie_plano_atual,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_curta_duracao,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	nr_prescricao,
							nr_seq_solucao,
							ds_solucao,
							ie_acm_sn,	
							ds_prescricao,
							ie_status_solucao,
							dt_prev_prox_etapa,
							ds_componentes,
							ie_liberado,
							ie_plano_atual,
							ie_retrogrado,
							ie_pend_assinatura,
							ie_curta_duracao,
							ie_prescr_farm,
							ie_recem_nato
					from	(	select	a.nr_prescricao,
										x.nr_seq_solucao,
										substr(coalesce(obter_desc_prot_npt(x.nr_seq_protocolo),obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao,
										obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
										substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
										x.ie_status ie_status_solucao,
										coalesce(x.ie_suspenso,'N') ie_suspenso,
										x.dt_prev_prox_etapa,
										substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p),1,240) ds_componentes,
										plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
										substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
										coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
										obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
										coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
										coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
										x.dt_status,
										x.dt_suspensao
								from	hd_prescricao b,
										prescr_solucao x,
										prescr_medica a
								where	x.nr_prescricao	= a.nr_prescricao
								and     b.nr_sequencia  = x.nr_seq_dialise
								and		a.nr_atendimento = nr_atendimento_p
								and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
								and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
								and		(((a.dt_inicio_prescr	between dt_validade_limite_p	and dt_fim_w) and (coalesce(a.dt_validade_prescr::text, '') = '')) or (a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w))			
								and		coalesce(x.ie_status,'X')		<> 'V'
								and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_dialise_w')::char(1) = 'S') or
										 ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_dialise_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'DI',
																											cd_estabelecimento_p, 
																											cd_setor_usuario_p, 
																											cd_perfil_p, 
																											null, 
																											null, 
																											null, 
																											null,
																											a.cd_setor_Atendimento,
																											null,
																											null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																											null) = 'S'))) -- nr_seq_exame_p
								and		b.ie_tipo_dialise in ('H','P')
								and		(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
								group by
										a.nr_prescricao,
										x.nr_seq_solucao,
										x.nr_seq_protocolo,
										x.ie_acm,
										x.ie_se_necessario,
										nm_usuario_p,
										cd_estabelecimento_p,
										x.ie_suspenso,
										x.dt_prev_prox_etapa,
										x.ie_status,
										a.dt_liberacao,
										a.dt_liberacao_medico,
										a.dt_liberacao_farmacia,
										a.ie_prescr_emergencia,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
										obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
										a.ie_prescr_farm,
										coalesce(a.ie_recem_nato, 'N'),
										x.dt_status,
										x.dt_suspensao)t
			where	plt_obter_se_item_periodo(	dt_validade_limite_p,	dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			t.dt_status,
												dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
												dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	t.dt_suspensao,		'DI',
												t.nr_seq_solucao,		t.nr_prescricao,		'O') = 'S') alias56
			group by
				nr_prescricao,
				nr_seq_solucao,
				ds_solucao,
				ie_acm_sn,	
				ds_prescricao,
				ie_status_solucao,
				null,
				dt_prev_prox_etapa,
				ds_componentes,
				ie_liberado,
				ie_plano_atual,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_curta_duracao,
				ie_prescr_farm,
				ie_recem_nato;	
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_solucao,
				ds_solucao,
				ie_acm_sn,	
				ds_prescricao,
				ie_status_solucao,
				null,
				dt_prev_prox_etapa,
				CASE WHEN coalesce(obter_se_mostra_adic(1),'S')='N' THEN null  ELSE ds_componentes END  ds_componentes,
				ie_liberado,
				ie_plano_atual,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_curta_duracao,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	nr_prescricao,
							nr_seq_solucao,
							ds_solucao,
							ie_acm_sn,	
							ds_prescricao,
							ie_status_solucao,
							dt_prev_prox_etapa,
							ds_componentes,
							ie_liberado,
							ie_plano_atual,
							ie_retrogrado,
							ie_pend_assinatura,
							ie_curta_duracao,
							ie_prescr_farm,
							ie_recem_nato
					from	(	select	a.nr_prescricao,
										x.nr_seq_solucao,
										substr(coalesce(obter_desc_prot_npt(x.nr_seq_protocolo),obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao,
										obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
										substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
										x.ie_status ie_status_solucao,
										coalesce(x.ie_suspenso,'N') ie_suspenso,
										x.dt_prev_prox_etapa,
										substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p),1,240) ds_componentes,
										plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
										substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
										coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
										obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
										coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
										coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
										x.dt_status,
										x.dt_suspensao
								from	hd_prescricao b,
										prescr_solucao x,
										prescr_medica a
								where	x.nr_prescricao	= a.nr_prescricao
								and     b.nr_sequencia  = x.nr_seq_dialise
								and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)					
								and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
								and		a.dt_inicio_prescr	between dt_validade_limite_p	and dt_fim_w		
								and		coalesce(x.ie_status,'X')	<> 'V'
								and		b.ie_tipo_dialise in ('H','P')
								and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_dialise_w')::char(1) = 'S') or
										 ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_dialise_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'DI',
																											cd_estabelecimento_p, 
																											cd_setor_usuario_p, 
																											cd_perfil_p, 
																											null, 
																											null, 
																											null, 
																											null,
																											a.cd_setor_Atendimento,
																											null,
																											null,
																											null) = 'S')))
								and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
								and		(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
								group by
									a.nr_prescricao,
									x.nr_seq_solucao,
									x.nr_seq_protocolo,
									x.ie_acm,
									x.ie_se_necessario,
									nm_usuario_p,
									cd_estabelecimento_p,
									x.ie_suspenso,
									x.dt_prev_prox_etapa,
									x.ie_status,
									a.dt_liberacao,
									a.dt_liberacao_medico,
									a.dt_liberacao_farmacia,
									a.ie_prescr_emergencia,
									substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
									obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
									a.ie_prescr_farm,
									coalesce(a.ie_recem_nato, 'N'),
									x.dt_status,
									x.dt_suspensao) t
					where	plt_obter_se_item_periodo(	dt_validade_limite_p,	dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			t.dt_status,
														dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
														dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	t.dt_suspensao,		'DI',
														t.nr_seq_solucao,		t.nr_prescricao,		'O') = 'S') alias51
		group by
			nr_prescricao,
			nr_seq_solucao,
			ds_solucao,
			ie_acm_sn,	
			ds_prescricao,
			ie_status_solucao,
			null,
			dt_prev_prox_etapa,
			ds_componentes,
			ie_liberado,
			ie_plano_atual,
			ie_retrogrado,
			ie_pend_assinatura,
			ie_curta_duracao,
			ie_prescr_farm,
			ie_recem_nato;		
	end if;
	
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,		
			ds_prescricao_w,
			ie_status_solucao_w,
			ie_suspensa_w,
			dt_prev_prox_etapa_w,
			ds_componentes_w,
			ie_liberado_w,
			ie_plano_atual_w,
			ie_retrogrado_w,
			ie_pend_assinatura_w,
			ie_curta_duracao_w,
			ie_interv_farm_w,
			ie_recem_nato_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin		
		
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;
		
		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,
			ds_item,
			ie_acm_sn,
			ds_prescricao,
			ds_diluicao,
			ie_status_item,
			ie_suspenso,
			dt_prev_term,
			nr_seq_proc_interno,
			nr_agrupamento,
			ie_diferenciado,
			nr_prescricoes,
			cd_item,
			ie_liberado,
			ie_plano_atual,
			ds_hint,
			ie_retrogrado,
			ie_copiar,
			ie_pend_assinatura,
			dt_atualizacao,
			ds_cor_titulo,
			ie_curta_duracao,
			ie_interv_farm,
			ie_item_rn)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'DI',
			nr_prescricao_w,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,
			ds_prescricao_w,
			ds_componentes_w,
			ie_status_solucao_w,
			ie_suspensa_w,
			dt_prev_prox_etapa_w,
			0,
			0,
			'N',
			nr_prescricao_w,
			0,
			ie_liberado_w,
			ie_plano_atual_w,
			ds_componentes_w,
			ie_retrogrado_w,
			CASE WHEN ie_status_solucao_w='S' THEN 'N'  ELSE ie_copiar_w END ,
			ie_pend_assinatura_w,
			clock_timestamp(),
			ds_cor_titulo_w,
			ie_curta_duracao_w,
			ie_interv_farm_w,
			ie_recem_nato_w);
		end;
	end loop;
	close c01;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_obter_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_edicao_p text, ie_exibir_hor_suspensos_p text, dt_plano_p text, ie_prescr_usuario_p text, ie_estendidos_p bigint, dt_referencia_p timestamp) FROM PUBLIC;
