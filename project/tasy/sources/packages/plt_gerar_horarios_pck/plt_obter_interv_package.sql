-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_obter_interv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_agrupar_acm_sn_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE


	nr_seq_wadep_w			bigint;
	nr_seq_pe_prescr_w		bigint;
	nr_seq_pe_proc_w		bigint;
	cd_intervencao_w		varchar(255);
	ds_intervencao_w		varchar(255);
	ie_acm_sn_w			varchar(1);
	cd_intervalo_w			varchar(7);
	ds_intervalo_w			varchar(255);
	ie_status_w			varchar(1);
	ds_interv_prescr_w		varchar(240);
	ie_liberado_w			varchar(1);
	ie_copiar_w			varchar(1);
	dt_fim_w			timestamp;
	hr_prim_horario_w		varchar(5);	
	ie_plano_atual_w		varchar(1);
	ie_pend_assinatura_w 		varchar(1);
	ds_cor_titulo_w				varchar(20);	
	
	
	c01 REFCURSOR;

	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ie_copiar_w 	:= plt_obter_se_item_marcado('E', nr_seq_regra_p);
	ds_cor_titulo_w	:= plt_obter_cor_titulo('E',nr_seq_regra_p);

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END ,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	
				cd_intervencao,
				ds_intervencao,
				ie_acm_sn,	
				cd_intervalo,
				ds_prescricao,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END   ELSE null END   ELSE null END  ie_status,
				ds_intervalo,
				ie_liberado,
				hr_prim_horario,
				ie_plano_atual,
				ie_pend_assinatura
		from	(	SELECT	nr_seq_pe_prescr,
							nr_seq_pe_proc,
							cd_intervencao,
							ds_intervencao,
							ie_acm_sn,	
							cd_intervalo,
							ds_prescricao,
							ie_suspenso,
							ds_intervalo,
							ie_liberado,
							hr_prim_horario,
							ie_plano_atual,
							ie_pend_assinatura
					from	(	select	a.nr_sequencia nr_seq_pe_prescr,
										c.nr_seq_pe_proc,
										c.nr_seq_proc cd_intervencao,
										substr(y.ds_procedimento,1,240) ds_intervencao,
										obter_se_acm_sn(null,x.ie_se_necessario) ie_acm_sn,		
										x.cd_intervalo,
										substr(obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao),1,240) ds_prescricao,
										coalesce(x.ie_suspenso,'N') ie_suspenso,
										obter_desc_intervalo_prescr(x.cd_intervalo)||CASE WHEN coalesce(x.cd_intervalo::text, '') = '' THEN ''  ELSE ' ' END ||obter_desc_acm_sn('N',x.ie_se_necessario) ds_intervalo,
										CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN 'N'  ELSE 'S' END  ie_liberado,
										x.hr_prim_horario,
										substr(PLT_obter_se_sae_plt_atual(a.nr_sequencia),1,1) ie_plano_atual,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
										c.dt_horario,
										x.dt_suspensao
								FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.nr_atendimento = nr_atendimento_p and a.nr_sequencia	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sae_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sae_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(c.ie_situacao,'A') = 'A' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'S') or
										((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SAE',
																												cd_estabelecimento_p, 
																												cd_setor_usuario_p, 
																												cd_perfil_p, 
																												null, 
																												null, 
																												null, 
																												null,
																												null, 
																												null,
																												null,
																												null) = 'S'))) group by
										a.nr_sequencia,
										c.nr_seq_pe_proc,
										c.nr_seq_proc,
										y.ds_procedimento,
										x.ie_se_necessario,
										x.cd_intervalo,
										w.ds_prescricao,
										x.ie_suspenso,
										a.dt_liberacao,
										x.hr_prim_horario,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
										c.dt_horario,
										x.dt_suspensao) t
					where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,					get_ie_plano_por_setor,		dt_plano_p,		t.dt_horario,
														dt_inicial_horarios_p,		dt_final_horarios_p,		ie_prescr_usuario_p,		nm_usuario_p,		null,
														null,						'N',						ie_exibir_hor_suspensos_p,	t.dt_suspensao,		'E',
														t.nr_seq_pe_proc,			t.nr_seq_pe_prescr,			'O') = 'S') alias35
		group by
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END ,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	
				cd_intervencao,
				ds_intervencao,
				ie_acm_sn,	
				cd_intervalo,
				ds_prescricao,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END   ELSE null END   ELSE null END ,
				ds_intervalo,
				ie_liberado,
				hr_prim_horario,
				ie_plano_atual,
				ie_pend_assinatura;	
	else
		open	c01 for
		SELECT	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END ,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	
				cd_intervencao,
				ds_intervencao,
				ie_acm_sn,	
				cd_intervalo,
				ds_prescricao,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END   ELSE null END   ELSE null END  ie_status,
				ds_intervalo,
				ie_liberado,
				hr_prim_horario,
				ie_plano_atual,
				ie_pend_assinatura
		from	(	SELECT	nr_seq_pe_prescr,
							nr_seq_pe_proc,
							cd_intervencao,
							ds_intervencao,
							ie_acm_sn,	
							cd_intervalo,
							ds_prescricao,
							ie_suspenso,
							ds_intervalo,
							ie_liberado,
							hr_prim_horario,
							ie_plano_atual,
							ie_pend_assinatura
					from	(	select	a.nr_sequencia nr_seq_pe_prescr,
										c.nr_seq_pe_proc,
										c.nr_seq_proc cd_intervencao,
										substr(y.ds_procedimento,1,240) ds_intervencao,
										obter_se_acm_sn(null,x.ie_se_necessario) ie_acm_sn,		
										x.cd_intervalo,
										substr(obter_desc_inf_sae_adep(x.ie_se_necessario,w.ds_prescricao),1,240) ds_prescricao,
										coalesce(x.ie_suspenso,'N') ie_suspenso,
										obter_desc_intervalo_prescr(x.cd_intervalo)||CASE WHEN coalesce(x.cd_intervalo::text, '') = '' THEN ''  ELSE ' ' END ||obter_desc_acm_sn('N',x.ie_se_necessario) ds_intervalo,
										CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN 'N'  ELSE 'S' END  ie_liberado,
										x.hr_prim_horario,
										substr(PLT_obter_se_sae_plt_atual(a.nr_sequencia),1,1) ie_plano_atual,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
										c.dt_horario,
										x.dt_suspensao
								FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10) and a.nr_sequencia	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sae_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sae_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(c.ie_situacao,'A') = 'A' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'S') or
										((current_setting('plt_gerar_horarios_pck.ie_regra_incl_intervencao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SAE',
																												cd_estabelecimento_p, 
																												cd_setor_usuario_p, 
																												cd_perfil_p, 
																												null, 
																												null, 
																												null, 
																												null,
																												null, 
																												null,
																												null,
																												null) = 'S'))) group by
										a.nr_sequencia,
										c.nr_seq_pe_proc,
										c.nr_seq_proc,
										y.ds_procedimento,
										x.ie_se_necessario,
										x.cd_intervalo,
										w.ds_prescricao,
										x.ie_suspenso,
										a.dt_liberacao,
										x.hr_prim_horario,
										substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
										c.dt_horario,
										x.dt_suspensao) t
					where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			t.dt_horario,
														dt_inicial_horarios_p,		dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		null,
														null,						'N',					ie_exibir_hor_suspensos_p,	t.dt_suspensao,		'E',
														t.nr_seq_pe_proc,			t.nr_seq_pe_prescr,		'O') = 'S') alias36
		group by
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END ,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	
				cd_intervencao,
				ds_intervencao,
				ie_acm_sn,	
				cd_intervalo,
				ds_prescricao,
				CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END   ELSE null END   ELSE null END ,
				ds_intervalo,
				ie_liberado,
				hr_prim_horario,
				ie_plano_atual,
				ie_pend_assinatura;	
	end if;
	
	loop
	fetch c01 into	nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			cd_intervencao_w,
			ds_intervencao_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			ds_intervalo_w,
			ie_status_w,
			ds_interv_prescr_w,
			ie_liberado_w,
			hr_prim_horario_w,
			ie_plano_atual_w,
			ie_pend_assinatura_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;
		
		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,		
			cd_item,
			ds_item,
			ie_acm_sn,		
			cd_intervalo,
			ds_prescricao,
			ie_status_item,
			nr_agrupamento,
			ie_diferenciado,
			nr_seq_proc_interno,
			ds_interv_prescr,
			ie_liberado,
			ie_copiar,
			hr_prim_horario,
			ie_plano_atual,
			ie_pend_assinatura,
			dt_atualizacao,
			ds_cor_titulo)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'E',
			nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			cd_intervencao_w,
			ds_intervencao_w,
			ie_acm_sn_w,
			cd_intervalo_w,
			ds_intervalo_w,
			ie_status_w,
			0,
			'N',
			0,
			ds_interv_prescr_w,
			ie_liberado_w,
			CASE WHEN ie_status_w='S' THEN 'N'  ELSE ie_copiar_w END ,
			hr_prim_horario_w,
			ie_plano_atual_w,
			ie_pend_assinatura_w,
			clock_timestamp(),
			ds_cor_titulo_w);
		end;
	end loop;
	close c01;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_obter_interv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_agrupar_acm_sn_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
