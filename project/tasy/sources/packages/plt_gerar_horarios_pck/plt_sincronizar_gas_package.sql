-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_gas ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE

			
	ds_sep_bv_w			varchar(50);				
	nr_prescricao_w		bigint;
	nr_sequencia_gas_w	prescr_gasoterapia.nr_sequencia%type;
	nr_seq_horario_w	bigint;
	ie_status_horario_w	varchar(15);
	ds_comando_update_w	varchar(4000);
	nr_etapa_sol_w		bigint;
	dt_etapa_prev_w		timestamp;
	current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp		timestamp;
	nr_horario_w		integer;
	dt_fim_w			timestamp;
	nr_seq_gas_w		bigint;
	qt_gasoterapia_w	double precision;
	cd_intervalo_w		varchar(7);
	ie_respiracao_w 	varchar(15);
	ie_disp_resp_esp_w	varchar(15);
	ie_modo_adm_w		varchar(5);
	ie_interv_farm_w	varchar(1);
	ie_recem_nato_w		varchar(1);
	ie_inicio_w			prescr_gasoterapia.ie_inicio%type;
	
	
	c01 REFCURSOR;

	
BEGIN
	ds_sep_bv_w	:= obter_separador_bv;
	dt_fim_w	:= dt_validade_limite_p + 5;

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status,
				dt_prev_execucao,
				cd_intervalo,
				qt_gasoterapia,
				nr_seq_gas,
				ie_respiracao, 			
				ie_disp_resp_esp,			
				ie_modo_adm,
				ie_prescr_farm,
				ie_recem_nato,
				ie_inicio
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia,
							CASE WHEN coalesce(c.nr_sequencia::text, '') = '' THEN CASE WHEN substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10)='P' THEN CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN 'N'  ELSE 'W' END   ELSE coalesce(substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10),'N') END   ELSE coalesce(substr(obter_status_etapa_gas(x.nr_sequencia,c.nr_etapa,c.dt_fim_horario,c.dt_suspensao),1,10),'N') END  ie_status,
							trunc(coalesce(c.dt_horario, coalesce(x.dt_prev_execucao, a.dt_inicio_prescr)),'mi') dt_prev_execucao,
							x.cd_intervalo,
							x.qt_gasoterapia,
							x.nr_seq_gas,
							x.ie_respiracao, 			
							x.ie_disp_resp_esp,			
							x.ie_modo_adm,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							coalesce(x.ie_inicio,'XPTO') ie_inicio,
							x.dt_suspensao
					FROM prescr_medica a, prescr_gasoterapia x
LEFT OUTER JOIN prescr_gasoterapia_hor c ON (x.nr_prescricao = c.nr_prescricao AND x.nr_sequencia = c.nr_seq_gasoterapia)
WHERE x.nr_prescricao = a.nr_prescricao and a.nr_atendimento = nr_atendimento_p    and a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint and PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'OX',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null, 
																							null) = 'S'))) and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w group by
							trunc(coalesce(c.dt_horario, coalesce(x.dt_prev_execucao, a.dt_inicio_prescr)),'mi'),
							c.nr_sequencia,
							c.nr_etapa,
							c.dt_fim_horario,
							c.dt_suspensao,
							a.nr_prescricao,
							x.nr_sequencia,
							x.cd_intervalo,
							x.qt_gasoterapia,
							x.nr_seq_gas,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							x.ie_respiracao, 			
							x.ie_disp_resp_esp,			
							x.ie_modo_adm,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							coalesce(x.ie_inicio,'XPTO'),
							x.dt_suspensao) alias36
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_prev_execucao,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'O',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status,
				dt_prev_execucao,
				cd_intervalo,
				qt_gasoterapia,
				nr_seq_gas,
				ie_respiracao, 			
				ie_disp_resp_esp,			
				ie_modo_adm,
				ie_prescr_farm,
				ie_recem_nato,
				ie_inicio
		order by
				dt_prev_execucao;	
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status,
				dt_prev_execucao,
				cd_intervalo,
				qt_gasoterapia,
				nr_seq_gas,
				ie_respiracao, 			
				ie_disp_resp_esp,			
				ie_modo_adm,
				ie_prescr_farm,
				ie_recem_nato,
				ie_inicio
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia,
							CASE WHEN coalesce(c.nr_sequencia::text, '') = '' THEN CASE WHEN substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10)='P' THEN CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN 'N'  ELSE 'W' END   ELSE coalesce(substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10),'N') END   ELSE coalesce(substr(obter_status_etapa_gas(x.nr_sequencia,c.nr_etapa,c.dt_fim_horario,c.dt_suspensao),1,10),'N') END  ie_status,
							trunc(coalesce(c.dt_horario, coalesce(x.dt_prev_execucao, a.dt_inicio_prescr)),'mi') dt_prev_execucao,
							x.cd_intervalo,
							x.qt_gasoterapia,
							x.nr_seq_gas,
							x.ie_respiracao, 			
							x.ie_disp_resp_esp,			
							x.ie_modo_adm,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							coalesce(x.ie_inicio,'XPTO') ie_inicio,
							x.dt_suspensao
					FROM prescr_medica a, prescr_gasoterapia x
LEFT OUTER JOIN prescr_gasoterapia_hor c ON (x.nr_prescricao = c.nr_prescricao AND x.nr_sequencia = c.nr_seq_gasoterapia)
WHERE x.nr_prescricao = a.nr_prescricao AND a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)    and a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'OX',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null,
																							null) = 'S'))) group by
						trunc(coalesce(c.dt_horario, coalesce(x.dt_prev_execucao, a.dt_inicio_prescr)),'mi'),
						c.nr_sequencia,
						c.nr_etapa,
						c.dt_fim_horario,
						c.dt_suspensao,
						a.nr_prescricao,
						x.nr_sequencia,
						x.cd_intervalo,
						x.qt_gasoterapia,
						x.nr_seq_gas,
						a.dt_liberacao_medico,
						a.dt_liberacao,
						a.dt_liberacao_farmacia,
						x.ie_respiracao, 			
						x.ie_disp_resp_esp,			
						x.ie_modo_adm,
						a.ie_prescr_farm,
						coalesce(a.ie_recem_nato, 'N'),
						coalesce(x.ie_inicio,'XPTO'),
						x.dt_suspensao) alias37
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_prev_execucao,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'O',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status,
				dt_prev_execucao,
				cd_intervalo,
				qt_gasoterapia,
				nr_seq_gas,
				ie_respiracao, 			
				ie_disp_resp_esp,			
				ie_modo_adm,
				ie_prescr_farm,
				ie_recem_nato,
				ie_inicio
		order by
				dt_prev_execucao;		
	end if;
	
	loop
	fetch c01 into	nr_prescricao_w,
			nr_sequencia_gas_w,
			ie_status_horario_w,
			current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp,
			cd_intervalo_w,
			qt_gasoterapia_w,
			nr_seq_gas_w,
			ie_respiracao_w, 			
			ie_disp_resp_esp_w,			
			ie_modo_adm_w,
			ie_interv_farm_w,
			ie_recem_nato_w,
			ie_inicio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );

		if (ie_inicio_w in ('ACM','D')) then
		
			ds_comando_update_w	:=	' update w_rep_t ' ||
							' set nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and cd_item = :cd_item ' ||
							' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
							' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
							' and nvl(ie_respiracao,nvl(:ie_respiracao,''XPTO'')) = nvl(:ie_respiracao,''XPTO'') ' ||
							' and nvl(ie_disp_resp_esp,nvl(:ie_disp_resp_esp,''XPTO'')) = nvl(:ie_disp_resp_esp,''XPTO'') '||
							' and nvl(ie_modo_adm,nvl(:ie_modo_adm,''XPTO'')) = nvl(:ie_modo_adm,''XPTO'') ' ||
							' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm ' ||
							' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';

			CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=O' || ds_sep_bv_w ||
										'cd_item=' || to_char(nr_seq_gas_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'qt_item=' || to_char(qt_gasoterapia_w) || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_sequencia_gas_w) || ds_sep_bv_w ||
										'ie_respiracao='|| ie_respiracao_w || ds_sep_bv_w ||
										'ie_disp_resp_esp='||ie_disp_resp_esp_w|| ds_sep_bv_w ||
										'ie_modo_adm='||ie_modo_adm_w||ds_sep_bv_w ||
										'ie_interv_farm=' || ie_interv_farm_w || ds_sep_bv_w||
										'ie_recem_nato=' || ie_recem_nato_w || ds_sep_bv_w);
		elsif (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
		
			if ('IN' = ie_status_horario_w) then
				ie_status_horario_w := 'T';
			elsif ('T' = ie_status_horario_w) then
				ie_status_horario_w := 'A';
			elsif ('R' = ie_status_horario_w) then
				ie_status_horario_w := 'I';
			elsif ('V' = ie_status_horario_w) then
				ie_status_horario_w := 'I';
			end if;
		
			ds_comando_update_w	:=	' update w_rep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and cd_item = :cd_item ' ||
							' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
							' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
							' and nvl(ie_respiracao,nvl(:ie_respiracao,''XPTO'')) = nvl(:ie_respiracao,''XPTO'') ' ||
							' and nvl(ie_disp_resp_esp,nvl(:ie_disp_resp_esp,''XPTO'')) = nvl(:ie_disp_resp_esp,''XPTO'') '||
							' and nvl(ie_modo_adm,nvl(:ie_modo_adm,''XPTO'')) = nvl(:ie_modo_adm,''XPTO'') ' ||
							' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm ' ||
							' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';

			CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_sequencia_gas_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=O' || ds_sep_bv_w ||
										'cd_item=' || to_char(nr_seq_gas_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'qt_item=' || to_char(qt_gasoterapia_w) || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_sequencia_gas_w) || ds_sep_bv_w ||
										'ie_respiracao='|| ie_respiracao_w || ds_sep_bv_w ||
										'ie_disp_resp_esp='||ie_disp_resp_esp_w|| ds_sep_bv_w ||
										'ie_modo_adm='||ie_modo_adm_w||ds_sep_bv_w ||
										'ie_interv_farm=' || ie_interv_farm_w || ds_sep_bv_w||
										'ie_recem_nato=' || ie_recem_nato_w || ds_sep_bv_w);	
		end if;
		end;
	end loop;
	close c01;
	
	CALL Atualizar_plt_controle(nm_usuario_p, nr_atendimento_p, current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10), 'G', 'N',null);	
	
	commit;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_gas ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
