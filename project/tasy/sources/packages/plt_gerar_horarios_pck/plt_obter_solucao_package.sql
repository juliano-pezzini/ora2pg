-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_obter_solucao ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_sol_continuas_p text, ie_sol_vigentes_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE


	nr_seq_wadep_w			bigint;
	nr_prescricao_w			bigint;
	nr_seq_solucao_w		integer;
	ds_solucao_w			varchar(255);
	ie_acm_sn_w			varchar(1);
	ds_prescricao_w			varchar(240);
	ds_componentes_w		varchar(1000);
	ie_status_solucao_w		varchar(15);
	ie_suspensa_w			varchar(1);
	dt_prev_prox_etapa_w		timestamp;
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)		varchar(1);
	ie_liberado_w			varchar(1);
	cd_unid_med_qtde_w		varchar(30);
	ie_via_administracao_w		varchar(5);
	qt_solucao_total_w		double precision;
	ds_intervalo_w			varchar(240);
	ie_proximo_plano_w		varchar(1);
	ie_erro_w			integer;
	ie_copiar_w			varchar(1);
	dt_extensao_w			timestamp;
	nr_prescr_sol_w			varchar(2000);
	hr_prim_horario_w		varchar(5);
	ie_plano_atual_w		varchar(1);
	ie_retrogrado_w			varchar(1);
	ie_sol_custo_w			varchar(3);
	ie_alto_risco_w			varchar(3);
	ie_quimio_w			varchar(1);
	ie_item_ordem_w			varchar(1);
	ie_pend_assinatura_w 		varchar(1);
	ie_estendido_w			varchar(1);
	dt_validade_prescr_w		timestamp;
	ds_cor_titulo_w				varchar(20);
	ie_curta_duracao_w			varchar(1);
	cd_funcao_origem_w			bigint;
	cd_classif_setor_w		integer;
	ds_hint_w		varchar(1000);
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);
	ie_prescr_anest_w		varchar(1);

	
	c01 REFCURSOR;
	c02 REFCURSOR;

	
BEGIN

	ie_copiar_w 	:= plt_obter_se_item_marcado('SOL', nr_seq_regra_p);
	ds_cor_titulo_w	:= plt_obter_cor_titulo('SOL',nr_seq_regra_p);

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_solucao,
				ds_solucao,
				ie_acm_sn,
				ds_prescricao,
				CASE WHEN coalesce(obter_se_mostra_adic(16),'S')='N' THEN null  ELSE ds_componentes END  ds_componentes,
				ie_status_solucao,
				ie_suspenso,
				dt_prev_prox_etapa,
				ie_tipo_dosagem,
				ie_via_aplicacao,
				qt_solucao_total,
				ds_intervalo,
				CASE WHEN ie_prescr_emergencia='N' THEN CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_hor_prescr(nr_prescricao, nr_seq_solucao, 'S')='S' THEN 'S'  ELSE 'N' END   ELSE 'N' END   ELSE 'N' END ,
				ie_lib_pend_rep,
				ie_liberado,
				ie_erro,
				dt_extensao,
				hr_prim_horario,
				ie_plano_atual,
				ie_retrogrado,
				ie_alto_custo,
				ie_alto_risco,
				CASE WHEN coalesce(nr_seq_atend::text, '') = '' THEN 'N'  ELSE 'S' END  ie_quimio,
				ie_item_ordem,
				ie_pend_assinatura,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ds_hint,
				ie_prescr_farm,
				ie_recem_nato,
				ie_prescr_anest
		from	(
			SELECT	a.nr_prescricao,
					x.nr_seq_solucao,
					substr(coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao,
					obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
					substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
					substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p) || CASE WHEN coalesce(x.DS_ORIENTACAO::text, '') = '' THEN ''  ELSE Wheb_mensagem_pck.get_texto(343505) || ':' || '<b>' || x.DS_ORIENTACAO || '</b>' END ,1,1000) ds_hint,
					substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p) || CASE WHEN coalesce(x.DS_ORIENTACAO::text, '') = '' THEN ''  ELSE Wheb_mensagem_pck.get_texto(343505) || ':' || x.DS_ORIENTACAO END ,1,1000) ds_componentes,
					CASE WHEN x.ie_status='P' THEN  'W'  ELSE substr(obter_status_solucao_prescr(1,a.nr_prescricao,x.nr_seq_solucao),1,3) END  ie_status_solucao,
					coalesce(x.ie_suspenso,'N') ie_suspenso,
					x.dt_prev_prox_etapa,
					substr(obter_desc_unid_med(obter_unid_med_usua('ml')),1,30) ie_tipo_dosagem,
					x.ie_via_aplicacao,
					CASE WHEN coalesce(x.qt_solucao_total,0)=0 THEN coalesce(x.qt_dosagem,0)  ELSE coalesce(x.qt_solucao_total,0) END  qt_solucao_total,
					substr(obter_interv_solucao_vipe(x.ie_acm,x.ie_se_necessario,x.ie_urgencia,x.nr_etapas,x.qt_hora_fase),1,240) ds_intervalo,
					substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) ie_lib_pend_rep,
					plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
					plt_obter_erro_solucao(a.nr_prescricao,x.nr_seq_solucao) ie_erro,
					coalesce(a.ie_prescr_emergencia,'N') ie_prescr_emergencia,
					PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade) dt_extensao,
					x.hr_prim_horario,
					substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
					coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
					coalesce(obter_se_sol_alto_custo(a.nr_prescricao,x.nr_seq_solucao,cd_estabelecimento_p),'N') ie_alto_custo,
					coalesce(obter_se_sol_alto_risco(a.nr_prescricao,x.nr_seq_solucao),'N') ie_alto_risco,
					a.nr_seq_atend,
					obter_se_item_ordem_medica(x.nr_prescricao, x.nr_seq_solucao, 'S') ie_item_ordem,
					substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
					substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1) ie_estendido,
					a.dt_validade_prescr,
					obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
					a.cd_funcao_origem,
					coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
					coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
					x.dt_suspensao,
					obter_valor_prescr_medica_comp(a.nr_prescricao,'IE_PRESCRICAO_ANESTESICA') ie_prescr_anest
			from	prescr_solucao x,
					prescr_medica a
			where	x.nr_prescricao = a.nr_prescricao
			and		a.nr_atendimento = nr_atendimento_p			
			and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sol_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sol_w')::bigint
			and		coalesce(x.nr_seq_dialise::text, '') = ''
			and		coalesce(x.ie_hemodialise, 'N') = 'N'
			and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'S') or
					((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SOL',
																						wheb_usuario_pck.get_cd_estabelecimento, 
																						wheb_usuario_pck.get_cd_setor_atendimento, 
																						wheb_usuario_pck.get_cd_perfil, 
																						null, 
																						null, 
																						null, 
																						null,
																						a.cd_setor_Atendimento,
																						null,
																						null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																						null) = 'S'))) -- nr_seq_exame_p
			and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
			and		((ie_sol_vigentes_p	= 'N') or (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S') or (exists (	select	1
								from	prescr_mat_hor b
								where	b.nr_prescricao = x.nr_prescricao
								and		b.nr_seq_solucao = x.nr_seq_solucao
								and		b.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)))
			and		((ie_sol_continuas_p = 'S') or (obter_se_sol_continua(a.nr_prescricao,x.nr_seq_solucao,x.ds_solucao, dt_inicial_horarios_p) = 'N'))
			group by
					a.nr_prescricao,
					x.nr_seq_solucao,
					x.ds_solucao,
					x.ie_acm,
					x.ie_se_necessario,
					nm_usuario_p,
					cd_estabelecimento_p,
					x.ie_suspenso,
					x.dt_prev_prox_etapa,
					substr(obter_desc_unid_med(obter_unid_med_usua('ml')),1,30),
					x.ie_via_aplicacao,
					CASE WHEN coalesce(x.qt_solucao_total,0)=0 THEN coalesce(x.qt_dosagem,0)  ELSE coalesce(x.qt_solucao_total,0) END ,
					x.ie_urgencia,
					x.nr_etapas,
					x.qt_hora_fase,
					x.ie_status,
					substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),
					a.dt_liberacao_medico,
					a.dt_liberacao,
					a.dt_liberacao_farmacia,
					x.ie_erro,
					a.ie_prescr_emergencia,
					PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),
					x.hr_prim_horario,
					a.ie_prescr_emergencia,
					a.nr_seq_atend,
					obter_se_item_ordem_medica(x.nr_prescricao, x.nr_seq_solucao, 'S') ,
					substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
					substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1),
					a.dt_validade_prescr,
					obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
					a.cd_funcao_origem,
					x.DS_ORIENTACAO,				
					a.ie_prescr_farm,
					coalesce(a.ie_recem_nato, 'N'),
					x.dt_suspensao,
					obter_valor_prescr_medica_comp(a.nr_prescricao,'IE_PRESCRICAO_ANESTESICA')) alias104
		where	plt_obter_se_item_periodo(	null,					null,					get_ie_plano_por_setor,		dt_plano_p,			null,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SOL',
											nr_seq_solucao,			nr_prescricao,			'O') = 'S'
		group by
			nr_prescricao,
			nr_seq_solucao,
			ds_solucao,
			ie_acm_sn,
			ds_prescricao,
			ds_componentes,
			ie_status_solucao,
			ie_suspenso,
			dt_prev_prox_etapa,
			ie_tipo_dosagem,
			ie_via_aplicacao,
			qt_solucao_total,
			ds_intervalo,
			CASE WHEN ie_prescr_emergencia='N' THEN CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_hor_prescr(nr_prescricao, nr_seq_solucao, 'S')='S' THEN 'S'  ELSE 'N' END   ELSE 'N' END   ELSE 'N' END ,
			ie_lib_pend_rep,
			ie_liberado,
			ie_erro,
			dt_extensao,
			hr_prim_horario,
			ie_plano_atual,
			ie_retrogrado,
			ie_alto_custo,
			ie_alto_risco,
			nr_seq_atend,
			ie_item_ordem,
			ie_pend_assinatura,
			ie_estendido,
			dt_validade_prescr,
			ie_curta_duracao,
			cd_funcao_origem,
			ds_hint,
			ie_prescr_farm,
			ie_recem_nato,
			ie_prescr_anest;

		open	c02 for
		SELECT	distinct to_char(nr_prescricao)
		from	(	SELECT	a.nr_prescricao,
							x.nr_seq_solucao,
							x.dt_suspensao
					from	prescr_solucao x,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and		a.nr_atendimento = nr_atendimento_p
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sol_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sol_w')::bigint
					and		coalesce(x.nr_seq_dialise::text, '') = ''
					and		coalesce(x.ie_hemodialise, 'N') = 'N'
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SOL',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																							null) = 'S'))) -- nr_seq_exame_p
					and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
					and		((ie_sol_vigentes_p	= 'N') or (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S') or (exists (	select	1
										from	prescr_mat_hor b
										where	b.nr_prescricao = x.nr_prescricao
										and		b.nr_seq_solucao = x.nr_seq_solucao
										and		b.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)))
					and	ie_sol_continuas_p = 'N') alias22 
		where	plt_obter_se_item_periodo(	null,					null,					get_ie_plano_por_setor,		dt_plano_p,			null,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SOL',
											nr_seq_solucao,			nr_prescricao,		'O') = 'S';
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_solucao,
				ds_solucao,
				ie_acm_sn,
				ds_prescricao,
				CASE WHEN coalesce(obter_se_mostra_adic(16),'S')='N' THEN null  ELSE ds_componentes END  ds_componentes,
				ie_status_solucao,
				ie_suspenso,
				dt_prev_prox_etapa,
				ie_tipo_dosagem,
				ie_via_aplicacao,
				qt_solucao_total,
				ds_intervalo,
				CASE WHEN ie_prescr_emergencia='N' THEN CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_hor_prescr(nr_prescricao, nr_seq_solucao, 'S')='S' THEN 'S'  ELSE 'N' END   ELSE 'N' END   ELSE 'N' END ,
				ie_lib_pend_rep,
				ie_liberado,
				ie_erro,
				dt_extensao,
				hr_prim_horario,
				ie_plano_atual,
				ie_retrogrado,
				ie_alto_custo,
				ie_alto_risco,
				CASE WHEN coalesce(nr_seq_atend::text, '') = '' THEN 'N'  ELSE 'S' END  ie_quimio,
				ie_item_ordem,
				ie_pend_assinatura,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ds_hint,
				ie_prescr_farm,
				ie_recem_nato,
				ie_prescr_anest
		from	(	SELECT	a.nr_prescricao,
							x.nr_seq_solucao,
							substr(coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao,
							obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
							substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
							substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p) || CASE WHEN coalesce(x.DS_ORIENTACAO::text, '') = '' THEN ''  ELSE ' ' || wheb_mensagem_pck.get_texto(1111251) || ': ' || x.DS_ORIENTACAO END ,1,240) ds_hint,
							substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p),1,240) ds_componentes,
							CASE WHEN x.ie_status='P' THEN  'W'  ELSE substr(obter_status_solucao_prescr(1,a.nr_prescricao,x.nr_seq_solucao),1,3) END  ie_status_solucao,
							coalesce(x.ie_suspenso,'N') ie_suspenso,
							x.dt_prev_prox_etapa,
							substr(obter_desc_unid_med(obter_unid_med_usua('ml')),1,30) ie_tipo_dosagem,
							x.ie_via_aplicacao,
							x.qt_solucao_total,
							substr(obter_interv_solucao_vipe(x.ie_acm,x.ie_se_necessario,x.ie_urgencia,x.nr_etapas,x.qt_hora_fase),1,240) ds_intervalo,
							substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) ie_lib_pend_rep,
							plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
							plt_obter_erro_solucao(a.nr_prescricao,x.nr_seq_solucao) ie_erro,
							coalesce(a.ie_prescr_emergencia,'N') ie_prescr_emergencia,
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade) dt_extensao,
							x.hr_prim_horario,
							substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
							coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
							coalesce(obter_se_sol_alto_custo(a.nr_prescricao, x.nr_seq_solucao, cd_estabelecimento_p),'N') ie_alto_custo,
							coalesce(obter_se_sol_alto_risco(a.nr_prescricao, x.nr_seq_solucao),'N') ie_alto_risco,
							a.nr_seq_atend,
							obter_se_item_ordem_medica(x.nr_prescricao, x.nr_seq_solucao, 'S') ie_item_ordem ,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1) ie_estendido,
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
							a.cd_funcao_origem,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao,
							obter_valor_prescr_medica_comp(a.nr_prescricao,'IE_PRESCRICAO_ANESTESICA') ie_prescr_anest
					from	prescr_solucao x,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sol_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sol_w')::bigint
					and		coalesce(x.nr_seq_dialise::text, '') = ''
					and		coalesce(x.ie_hemodialise, 'N') = 'N'
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SOL',
																								wheb_usuario_pck.get_cd_estabelecimento, 
																								wheb_usuario_pck.get_cd_setor_atendimento, 
																								wheb_usuario_pck.get_cd_perfil, 
																								null, 
																								null, 
																								null, 
																								null,
																								a.cd_setor_Atendimento,
																								null,
																								null,
																								null) = 'S')))
					and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
					and		((ie_sol_vigentes_p	= 'N') or (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S') or (exists (	select	1
										from	prescr_mat_hor b
										where	b.nr_prescricao = x.nr_prescricao
										and		b.nr_seq_solucao = x.nr_seq_solucao
										and		b.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)))
					and		((ie_sol_continuas_p = 'S') or (obter_se_sol_continua(a.nr_prescricao,x.nr_seq_solucao,x.ds_solucao, dt_inicial_horarios_p) = 'N'))
					group by
							a.nr_prescricao,
							x.nr_seq_solucao,
							x.ds_solucao,
							x.ie_acm,
							x.ie_se_necessario,
							nm_usuario_p,
							cd_estabelecimento_p,
							x.ie_suspenso,
							x.dt_prev_prox_etapa,
							substr(obter_desc_unid_med(obter_unid_med_usua('ml')),1,30),
							x.ie_via_aplicacao,
							x.qt_solucao_total,
							x.ie_urgencia,
							x.nr_etapas,
							x.qt_hora_fase,
							x.ie_status,
							substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							x.ie_erro,
							a.ie_prescr_emergencia,
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),
							x.hr_prim_horario,
							a.ie_prescr_emergencia,
							a.nr_seq_atend,
							obter_se_item_ordem_medica(x.nr_prescricao, x.nr_seq_solucao, 'S') ,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1),
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
							a.cd_funcao_origem,
							x.DS_ORIENTACAO,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao,
							obter_valor_prescr_medica_comp(a.nr_prescricao,'IE_PRESCRICAO_ANESTESICA')) alias97
		where	plt_obter_se_item_periodo(	null,					null,					get_ie_plano_por_setor,		dt_plano_p,			null,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SOL',
											nr_seq_solucao,			nr_prescricao,		'O') = 'S'
		group by
				nr_prescricao,
				nr_seq_solucao,
				ds_solucao,
				ie_acm_sn,
				ds_prescricao,
				ds_componentes,
				ie_status_solucao,
				ie_suspenso,
				dt_prev_prox_etapa,
				ie_tipo_dosagem,
				ie_via_aplicacao,
				qt_solucao_total,
				ds_intervalo,
				CASE WHEN ie_prescr_emergencia='N' THEN CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_hor_prescr(nr_prescricao, nr_seq_solucao, 'S')='S' THEN 'S'  ELSE 'N' END   ELSE 'N' END   ELSE 'N' END ,
				ie_lib_pend_rep,
				ie_liberado,
				ie_erro,
				dt_extensao,
				hr_prim_horario,
				ie_plano_atual,
				ie_retrogrado,
				ie_alto_custo,
				ie_alto_risco,
				nr_seq_atend,
				ie_item_ordem,
				ie_pend_assinatura,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ds_hint,
				ie_prescr_farm,
				ie_recem_nato,
				ie_prescr_anest;

		open	c02 for
		SELECT	distinct to_char(nr_prescricao)
		from	(	SELECT	a.nr_prescricao,
							x.nr_seq_solucao,
							x.dt_suspensao
					from	prescr_solucao x,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_sol_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_sol_w')::bigint
					and		coalesce(x.nr_seq_dialise::text, '') = ''
					and		coalesce(x.ie_hemodialise, 'N') = 'N'
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_solucao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SOL',
																								wheb_usuario_pck.get_cd_estabelecimento, 
																								wheb_usuario_pck.get_cd_setor_atendimento, 
																								wheb_usuario_pck.get_cd_perfil, 
																								null, 
																								null, 
																								null, 
																								null,
																								a.cd_setor_Atendimento,
																								null,
																								null, 
																								null) = 'S')))
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		((ie_sol_vigentes_p	= 'N') or (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S') or (exists (	select	1
										from	prescr_mat_hor b
										where	b.nr_prescricao = x.nr_prescricao
										and		b.nr_seq_solucao = x.nr_seq_solucao
										and		b.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)))
					and		ie_sol_continuas_p = 'N') alias24
		where	plt_obter_se_item_periodo(	null,					null,					get_ie_plano_por_setor,		dt_plano_p,			null,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SOL',
											nr_seq_solucao,			nr_prescricao,			'O') = 'S';
	end if;

	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,
			ds_prescricao_w,
			ds_componentes_w,
			ie_status_solucao_w,
			ie_suspensa_w,
			dt_prev_prox_etapa_w,
			cd_unid_med_qtde_w,
			ie_via_administracao_w,
			qt_solucao_total_w,
			ds_intervalo_w,
			ie_proximo_plano_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			ie_liberado_w,
			ie_erro_w,
			dt_extensao_w,
			hr_prim_horario_w,
			ie_plano_atual_w,
			ie_retrogrado_w,
			ie_sol_custo_w,
			ie_alto_risco_w,
			ie_quimio_w,
			ie_item_ordem_w,
			ie_pend_assinatura_w,
			ie_estendido_w,
			dt_validade_prescr_w,
			ie_curta_duracao_w,
			cd_funcao_origem_w,
			ds_hint_w,
			ie_interv_farm_w,
			ie_recem_nato_w,
			ie_prescr_anest_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	coalesce(Obter_classif_setor_atend(nr_atendimento_p),0)
		into STRICT	cd_classif_setor_w
		;
		
		if (ie_Estendido_w	= 'P') and (coalesce(dt_extensao_w::text, '') = '') then
			dt_extensao_w	:= dt_validade_prescr_w;
		end if;	
		
		if (((ie_estendido_w = 'P') and
			 ((coalesce(cd_funcao_origem_w,924) <> 950) or (ie_curta_duracao_w = 'N'))) or (cd_classif_setor_w = 1)) then
			ie_estendido_w	:= 'N';
		end if;
		
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;

		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,
			ds_item,
			ie_acm_sn,
			ds_prescricao,
			ds_diluicao,
			ie_status_item,
			ie_suspenso,
			dt_prev_term,
			nr_seq_proc_interno,
			nr_agrupamento,
			ie_diferenciado,
			nr_prescricoes,
			cd_item,
			cd_unid_med_qtde,
			ie_via_aplicacao,
			qt_item,
			ds_interv_prescr,
			ie_proximo_plano,
			ie_pendente_liberacao,
			ie_liberado,
			ie_erro,
			ie_copiar,
			dt_extensao,
			hr_prim_horario,
			ie_plano_atual,
			ds_hint,
			ie_retrogrado,
			ie_sol_custo,
			ie_alto_risco,
			ie_quimio,
			ie_item_ordem,
			ie_pend_assinatura,
			dt_atualizacao,
			ie_estendido,
			ds_cor_titulo,
			ie_curta_duracao,
			ie_interv_farm,
			ie_item_rn,
			ie_prescricao_anestesica)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'SOL',
			nr_prescricao_w,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,
			ds_prescricao_w,
			ds_componentes_w,
			ie_status_solucao_w,
			ie_suspensa_w,
			dt_prev_prox_etapa_w,
			0,
			0,
			'N',
			nr_prescricao_w,
			0,
			cd_unid_med_qtde_w,
			ie_via_administracao_w,
			qt_solucao_total_w,
			ds_intervalo_w,
			ie_proximo_plano_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			ie_liberado_w,
			ie_erro_w,
			CASE WHEN ie_suspensa_w='S' THEN 'N'  ELSE ie_copiar_w END ,
			dt_extensao_w,
			hr_prim_horario_w,
			ie_plano_atual_w,
			ds_hint_w,
			ie_retrogrado_w,
			ie_sol_custo_w,
			ie_alto_risco_w,
			ie_quimio_w,
			ie_item_ordem_w,
			ie_pend_assinatura_w,
			clock_timestamp(),
			ie_estendido_w,
			ds_cor_titulo_w,
			ie_curta_duracao_w,
			ie_interv_farm_w,
			ie_recem_nato_w,
			ie_prescr_anest_w);
		end;
	end loop;
	close c01;

	PERFORM set_config('plt_gerar_horarios_pck.nr_prescricoes_w', '', false);

	loop
	fetch C02 into
		nr_prescr_sol_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (current_setting('plt_gerar_horarios_pck.nr_prescricoes_w')::coalesce(varchar(4000)::text, '') = '') then
			PERFORM set_config('plt_gerar_horarios_pck.nr_prescricoes_w', nr_prescr_sol_w, false);
		else
			PERFORM set_config('plt_gerar_horarios_pck.nr_prescricoes_w', adep_juntar_prescricao(current_setting('plt_gerar_horarios_pck.nr_prescricoes_w')::varchar(4000),nr_prescr_sol_w), false);
		end if;
		end;
	end loop;
	close C02;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_obter_solucao ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_sol_continuas_p text, ie_sol_vigentes_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
