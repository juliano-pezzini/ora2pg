-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_rec ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE

					
	ds_sep_bv_w				varchar(50);
	nr_prescricao_w			bigint;
	nr_seq_recomendacao_w	integer;
	nr_seq_horario_w		bigint;
	ie_status_horario_w		varchar(1);
	cd_recomendacao_w		varchar(255);
	ds_recomendacao_w		varchar(4000);
	ie_acm_sn_w				varchar(1);
	cd_intervalo_w			varchar(7);
	qt_recomendacao_w		double precision;
	ds_intervalo_w			varchar(100);
	ds_comando_update_w		varchar(4000);
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)		varchar(1);
	current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;
	nr_horario_w			integer;
	dt_fim_w				timestamp;
	hr_prim_horario_w		varchar(5);
	nr_ordem_w				integer;
	ie_status_w				varchar(1);
	ds_hint_w 				varchar(2000);
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);

	
	c01 REFCURSOR;
		
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ds_sep_bv_w := obter_separador_bv;
	
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_recomendacao,
				nr_sequencia,
				ie_status_hor,
				cd_recomendacao,
				ds_recomendacao,
				ie_acm_sn,
				cd_intervalo,
				qt_recomendacao,
				ds_prescricao,
				ie_lib_pend_rep,
				dt_horario,
				hr_prim_horario,
				nr_ordem,
				ie_suspenso,
				ds_recom,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							c.nr_seq_recomendacao,
							c.nr_sequencia,
							substr(plt_obter_status_hor_rec_lib(c.dt_fim_horario,c.dt_suspensao,c.dt_lib_horario),1,1) ie_status_hor,
							substr(coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao),1,255) cd_recomendacao,
							substr(coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao),1,4000) ds_recomendacao,
							obter_se_acm_sn(x.ie_acm, x.ie_se_necessario) ie_acm_sn,
							x.cd_intervalo,
							x.qt_recomendacao,
							w.ds_prescricao ds_prescricao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							x.hr_prim_horario,
							CASE WHEN coalesce(c.dt_suspensao::text, '') = '' THEN CASE WHEN coalesce(c.dt_fim_horario::text, '') = '' THEN CASE WHEN coalesce(c.dt_lib_horario::text, '') = '' THEN 1  ELSE 2 END   ELSE 3 END   ELSE 4 END  nr_ordem,
							coalesce(x.ie_suspenso,'N') ie_suspenso,
							coalesce(substr(x.ds_recomendacao,1,2000),'XPTO') ds_recom,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao
					FROM prescr_rec_hor c, prescr_medica a, prescr_recomendacao x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
LEFT OUTER JOIN tipo_recomendacao y ON (x.cd_recomendacao = y.cd_tipo_recomendacao)
WHERE x.nr_prescricao = c.nr_prescricao and x.nr_sequencia = c.nr_seq_recomendacao and x.nr_prescricao = a.nr_prescricao and c.nr_prescricao = a.nr_prescricao and a.nr_atendimento = nr_atendimento_p and plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S' and a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint and ((a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w) or (a.ie_hemodialise IS NOT NULL AND a.ie_hemodialise::text <> '')) and coalesce(c.ie_situacao,'A') = 'A' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'REC',
																									wheb_usuario_pck.get_cd_estabelecimento, 
																									wheb_usuario_pck.get_cd_setor_atendimento, 
																									wheb_usuario_pck.get_cd_perfil, 
																									null, 
																									null, 
																									null, 
																									null,
																									a.cd_setor_Atendimento,
																									null,
																									null,
																									null) = 'S'))) and ((coalesce(c.ie_horario_especial,'N') = 'N') or 
							 ((coalesce(c.ie_horario_especial,'N') = 'S') and (obter_se_acm_sn(x.ie_acm, x.ie_se_necessario) = 'S')) or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) group by
							a.nr_prescricao,
							c.nr_seq_recomendacao,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao),
							coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao),
							obter_se_acm_sn(x.ie_acm, x.ie_se_necessario),
							x.cd_intervalo,
							x.qt_recomendacao,
							w.ds_prescricao,
							c.dt_lib_horario,
							a.dt_liberacao_medico,	
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							c.dt_horario,
							x.hr_prim_horario,
							x.ie_acm,
							x.ie_suspenso,
							substr(x.ds_recomendacao,1,2000),
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias57
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'R',
											nr_seq_recomendacao,		nr_prescricao,		'S') = 'S'
		group by
				nr_prescricao,
				nr_seq_recomendacao,
				nr_sequencia,
				ie_status_hor,
				cd_recomendacao,
				ds_recomendacao,
				ie_acm_sn,
				cd_intervalo,
				qt_recomendacao,
				ds_prescricao,
				ie_lib_pend_rep,
				dt_horario,
				hr_prim_horario,
				nr_ordem,
				ie_suspenso,
				ds_recom,
				ie_prescr_farm,
				ie_recem_nato
		order by
				dt_horario,
				nr_ordem;	
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_recomendacao,
				nr_sequencia,
				ie_status_hor,
				cd_recomendacao,
				ds_recomendacao,
				ie_acm_sn,
				cd_intervalo,
				qt_recomendacao,
				ds_prescricao,
				ie_lib_pend_rep,
				dt_horario,
				hr_prim_horario,
				nr_ordem,
				ie_suspenso,
				ds_recom,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							c.nr_seq_recomendacao,
							c.nr_sequencia,
							substr(plt_obter_status_hor_rec_lib(c.dt_fim_horario,c.dt_suspensao,c.dt_lib_horario),1,1) ie_status_hor,
							substr(coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao),1,255) cd_recomendacao,
							substr(coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao),1,4000) ds_recomendacao,
							obter_se_acm_sn(x.ie_acm, x.ie_se_necessario) ie_acm_sn,
							x.cd_intervalo,
							x.qt_recomendacao,
							w.ds_prescricao ds_prescricao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							x.hr_prim_horario,
							CASE WHEN coalesce(c.dt_suspensao::text, '') = '' THEN CASE WHEN coalesce(c.dt_fim_horario::text, '') = '' THEN CASE WHEN coalesce(c.dt_lib_horario::text, '') = '' THEN 1  ELSE 2 END   ELSE 3 END   ELSE 4 END  nr_ordem,
							coalesce(x.ie_suspenso,'N') ie_suspenso,
							coalesce(substr(x.ds_recomendacao,1,2000),'XPTO') ds_recom,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao
					FROM prescr_rec_hor c, prescr_medica a, prescr_recomendacao x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
LEFT OUTER JOIN tipo_recomendacao y ON (x.cd_recomendacao = y.cd_tipo_recomendacao)
WHERE x.nr_prescricao = c.nr_prescricao and x.nr_sequencia = c.nr_seq_recomendacao and x.nr_prescricao = a.nr_prescricao and c.nr_prescricao = a.nr_prescricao and a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10) and a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint and ((a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w) or (a.ie_hemodialise IS NOT NULL AND a.ie_hemodialise::text <> '')) and coalesce(c.ie_situacao,'A') = 'A' and plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S' and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_recomendacao_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'REC',
																									wheb_usuario_pck.get_cd_estabelecimento, 
																									wheb_usuario_pck.get_cd_setor_atendimento, 
																									wheb_usuario_pck.get_cd_perfil, 
																									null, 
																									null, 
																									null, 
																									null,
																									a.cd_setor_Atendimento,
																									null,
																									null,
																									null) = 'S'))) and ((coalesce(c.ie_horario_especial,'N') = 'N') or 
							 ((coalesce(c.ie_horario_especial,'N') = 'S') and (obter_se_acm_sn(x.ie_acm, x.ie_se_necessario) = 'S')) or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) group by
							a.nr_prescricao,
							c.nr_seq_recomendacao,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao),
							coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao),
							obter_se_acm_sn(x.ie_acm, x.ie_se_necessario),
							x.cd_intervalo,
							x.qt_recomendacao,
							w.ds_prescricao,
							c.dt_lib_horario,
							a.dt_liberacao_medico,	
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							c.dt_horario,
							x.hr_prim_horario,
							x.ie_acm,
							x.ie_suspenso,
							substr(x.ds_recomendacao,1,2000),
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias58
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'R',
											nr_seq_recomendacao,		nr_prescricao,		'S') = 'S'
		group by
				nr_prescricao,
				nr_seq_recomendacao,
				nr_sequencia,
				ie_status_hor,
				cd_recomendacao,
				ds_recomendacao,
				ie_acm_sn,
				cd_intervalo,
				qt_recomendacao,
				ds_prescricao,
				ie_lib_pend_rep,
				dt_horario,
				hr_prim_horario,
				nr_ordem,
				ie_suspenso,
				ds_recom,
				ie_prescr_farm,
				ie_recem_nato
		order by
				dt_horario,
				nr_ordem;	
	end if;
	
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_recomendacao_w,
			nr_seq_horario_w,
			ie_status_horario_w,
			cd_recomendacao_w,
			ds_recomendacao_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			qt_recomendacao_w,
			ds_intervalo_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp,
			hr_prim_horario_w,
			nr_ordem_w,
			ie_status_w,
			ds_hint_w,
			ie_interv_farm_w,
			ie_recem_nato_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );
				
		if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then		
			ds_comando_update_w	:=	' update w_rep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||					
							' and cd_item = :cd_item ' ||
							' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
							' and nvl(ie_pendente_liberacao,''X'') = :ie_pendente_liberacao ' ||
							' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
							' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ' ||
							' and nvl(ie_status_item,''N'') = :ie_status ' ||
							' and (nvl(hr_prim_horario,''X'') = nvl(:hr_prim_horario,nvl(hr_prim_horario,''X''))) ' ||
							' and nvl(ds_hint,''X'') = :ds_hint' ||
							' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm' ||
							' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';
						
			CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=R' || ds_sep_bv_w ||
										'nr_seq_item='|| to_char(nr_seq_recomendacao_w) || ds_sep_bv_w ||
										'cd_item=' || to_char(cd_recomendacao_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'ie_pendente_liberacao=' || current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15) || ds_sep_bv_w ||																
										'qt_item=' || to_char(qt_recomendacao_w) || ds_sep_bv_w ||
										'ds_prescricao=' || ds_intervalo_w || ds_sep_bv_w ||
										'ie_status=' || to_char(ie_status_w) || ds_sep_bv_w ||
										'hr_prim_horario=' || hr_prim_horario_w || ds_sep_bv_w ||
										'ds_hint=' || ds_hint_w || ds_sep_bv_w ||
										'ie_interv_farm=' || ie_interv_farm_w || ds_sep_bv_w||
										'ie_recem_nato=' || ie_recem_nato_w || ds_sep_bv_w);
		end if;
		end;
	end loop;
	close c01;
	
	CALL Atualizar_plt_controle(nm_usuario_p, nr_atendimento_p, current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10), 'R', 'N',null);
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_rec ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
