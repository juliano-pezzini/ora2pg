-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_obter_gas ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_agrupar_acm_sn_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE


	nr_seq_wadep_w				bigint;
	nr_prescricao_w				bigint;
	nr_seq_gasoterapia_w		bigint;
	nr_seq_gas_w				bigint;
	ds_gas_w					varchar(255);
	ie_acm_sn_w					varchar(1);
	cd_intervalo_w				varchar(7);
	qt_gasoterapia_w			double precision;
	ds_prescricao_w				varchar(100);
	ds_config_gas_w				varchar(255);
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)			varchar(1);
	ie_liberado_w				varchar(1);
	ie_status_gas_w				varchar(10);
	ds_interv_prescr_w			varchar(240);
	ie_copiar_w					varchar(1);
	dt_fim_w					timestamp;
	cd_unid_med_qtde_w			varchar(30);	
	dt_extensao_w				timestamp;
	ie_plano_atual_w			varchar(1);
	ie_retrogrado_w				varchar(1);
	ie_pend_assinatura_w 		varchar(1);
	ie_erro_w					integer;
	ie_estendido_w				varchar(1);
	dt_validade_prescr_w		timestamp;
	ds_cor_titulo_w				varchar(20);
	ie_curta_duracao_w			varchar(1);
	cd_funcao_origem_w			bigint;
	cd_classif_setor_w			integer;
	ie_respiracao_w 			varchar(15);
	ie_disp_resp_esp_w			varchar(15);
	ie_modo_adm_w				varchar(5);	
	ie_interv_farm_w			varchar(1);
	ie_recem_nato_w				varchar(1);
	
	
	c01 REFCURSOR;
		
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ie_copiar_w 	:= plt_obter_se_item_marcado('O', nr_seq_regra_p);
	ds_cor_titulo_w	:= plt_obter_cor_titulo('O',nr_seq_regra_p);

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	null,
				null,
				nr_seq_gas,
				substr(ds_gas || ' + ' || CASE WHEN coalesce(cd_modalidade_vent::text, '') = '' THEN substr(obter_valor_dominio(1612,ie_disp_resp_esp),1,120)  ELSE substr(Obter_Desc_Mod_Ventilatoria(cd_modalidade_vent),1,120) END ,1,255),
				ie_acm_sn,	
				cd_intervalo,
				qt_gasoterapia,
				ds_prescricao,
				CASE WHEN coalesce(obter_se_mostra_adic(3),'S')='N' THEN null  ELSE ds_config_gas END  ds_config_gas,
				ie_lib_pend_rep,
				ie_status_item,
				ds_intervalo,
				ie_liberado,
				ie_unidade_medida,
				dt_extensao,
				ie_plano_atual,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_erro,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ie_respiracao, 			
				ie_disp_resp_esp,			
				ie_modo_adm,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia nr_seq_gasoterapia,
							x.nr_seq_gas,
							y.ds_gas,
							'N' ie_acm_sn,		
							x.cd_intervalo,
							x.qt_gasoterapia,
							x.cd_modalidade_vent,
							x.qt_gasoterapia || ' ' || w.ds_valor_dominio || ' ' || z.ds_intervalo ds_prescricao,
							substr(adep_obter_config_gas(x.cd_modalidade_vent,x.ie_respiracao,x.ie_modo_adm),1,255) ds_config_gas,
							CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN null  ELSE substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) END  ie_lib_pend_rep,
							CASE WHEN substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10)='P' THEN CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN 'N'  ELSE 'P' END   ELSE substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10) END  ie_status_item,
							obter_desc_intervalo_prescr(x.cd_intervalo) ds_intervalo,
							plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
							substr(obter_valor_dominio(1580,x.ie_unidade_medida),1,30) ie_unidade_medida,
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade) dt_extensao,
							substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
							coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
							CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='N' THEN x.ie_erro  ELSE null END  ie_erro,
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1) ie_estendido,
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
							a.cd_funcao_origem,
							x.ie_respiracao, 			
							x.ie_disp_resp_esp,			
							x.ie_modo_adm,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							coalesce(c.dt_horario, x.dt_prev_execucao) dt_prev_execucao,
							x.dt_suspensao
					FROM gas y, prescr_medica a, prescr_gasoterapia x
LEFT OUTER JOIN valor_dominio_v w ON (x.ie_unidade_medida = w.vl_dominio AND 1580 = w.cd_dominio)
LEFT OUTER JOIN intervalo_prescricao z ON (x.cd_intervalo = z.cd_intervalo)
LEFT OUTER JOIN prescr_gasoterapia_hor c ON (x.nr_prescricao = c.nr_prescricao AND x.nr_sequencia = c.nr_seq_gasoterapia)
WHERE y.nr_sequencia = x.nr_seq_gas and x.nr_prescricao = a.nr_prescricao and a.nr_atendimento = nr_atendimento_p    and PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S' and a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'OX',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null,
																							null) = 'S'))) group by
							a.nr_prescricao,
							x.nr_sequencia,
							x.nr_seq_gas,
							y.ds_gas,
							'N',
							x.cd_intervalo,
							x.qt_gasoterapia,
							w.ds_valor_dominio,
							z.ds_intervalo,
							x.cd_modalidade_vent,
							CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN null  ELSE substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) END  ,
							x.ie_respiracao,
							x.ie_modo_adm,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							CASE WHEN substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10)='P' THEN CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN 'N'  ELSE 'P' END   ELSE substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10) END  ,
							substr(obter_valor_dominio(1580,x.ie_unidade_medida),1,30),
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),
							a.ie_prescr_emergencia,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
							x.ie_erro,
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1),
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
							a.cd_funcao_origem,
							x.ie_respiracao, 			
							x.ie_disp_resp_esp,			
							x.ie_modo_adm,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_prev_execucao,
							c.dt_horario,
							x.dt_suspensao) t
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,	dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			t.dt_prev_execucao,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	t.dt_suspensao,		'O',
											t.nr_seq_gasoterapia,	t.nr_prescricao,		'O') = 'S'
		group by
			null,
			null,
			nr_seq_gas,
			ds_gas,
			ie_acm_sn,	
			cd_intervalo,
			qt_gasoterapia,
			ds_prescricao,
			ds_config_gas,
			ie_lib_pend_rep,
			ie_status_item,
			ds_intervalo,
			ie_liberado,
			ie_unidade_medida,
			cd_modalidade_vent,
			dt_extensao,
			ie_plano_atual,
			ie_retrogrado,
			ie_pend_assinatura,
			ie_erro,
			ie_estendido,
			dt_validade_prescr,
			ie_curta_duracao,
			cd_funcao_origem,
			ie_respiracao, 			
			ie_disp_resp_esp,			
			ie_modo_adm,
			ie_prescr_farm,
			ie_recem_nato;
	else
		open	c01 for
		SELECT	null,
				null,
				nr_seq_gas,
				substr(ds_gas || ' + ' || CASE WHEN coalesce(cd_modalidade_vent::text, '') = '' THEN substr(obter_valor_dominio(1612,ie_disp_resp_esp),1,120)  ELSE substr(Obter_Desc_Mod_Ventilatoria(cd_modalidade_vent),1,120) END ,1,255),
				ie_acm_sn,	
				cd_intervalo,
				qt_gasoterapia,
				ds_prescricao,
				CASE WHEN coalesce(obter_se_mostra_adic(3),'S')='N' THEN null  ELSE ds_config_gas END  ds_config_gas,
				ie_lib_pend_rep,
				ie_status_item,
				ds_intervalo,
				ie_liberado,
				ie_unidade_medida,
				dt_extensao,
				ie_plano_atual,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_erro,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ie_respiracao, 			
				ie_disp_resp_esp,			
				ie_modo_adm,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia nr_seq_gasoterapia,
							x.nr_seq_gas,
							y.ds_gas,
							'N' ie_acm_sn,		
							x.cd_intervalo,
							x.qt_gasoterapia,
							x.cd_modalidade_vent,
							x.qt_gasoterapia || ' ' || w.ds_valor_dominio || ' ' || z.ds_intervalo ds_prescricao,
							substr(adep_obter_config_gas(x.cd_modalidade_vent,x.ie_respiracao,x.ie_modo_adm),1,255) ds_config_gas,
							CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN null  ELSE substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) END  ie_lib_pend_rep,
							CASE WHEN substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10)='P' THEN CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN 'N'  ELSE 'P' END   ELSE substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10) END  ie_status_item,
							obter_desc_intervalo_prescr(x.cd_intervalo) ds_intervalo,
							plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
							substr(obter_valor_dominio(1580,x.ie_unidade_medida),1,30) ie_unidade_medida,
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade) dt_extensao,
							substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
							coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
							CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='N' THEN x.ie_erro  ELSE null END  ie_erro,
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1) ie_estendido,
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
							a.cd_funcao_origem,
							x.ie_respiracao, 			
							x.ie_disp_resp_esp,			
							x.ie_modo_adm,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							coalesce(c.dt_horario, x.dt_prev_execucao) dt_prev_execucao,
							x.dt_suspensao
					FROM gas y, prescr_medica a, prescr_gasoterapia x
LEFT OUTER JOIN valor_dominio_v w ON (x.ie_unidade_medida = w.vl_dominio AND 1580 = w.cd_dominio)
LEFT OUTER JOIN intervalo_prescricao z ON (x.cd_intervalo = z.cd_intervalo)
LEFT OUTER JOIN prescr_gasoterapia_hor c ON (x.nr_prescricao = c.nr_prescricao AND x.nr_sequencia = c.nr_seq_gasoterapia)
WHERE y.nr_sequencia = x.nr_seq_gas and x.nr_prescricao = a.nr_prescricao and a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)    and PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S' and a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint and a.dt_validade_prescr	between dt_validade_limite_p and dt_fim_w and ((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_gas_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'OX',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null,
																							null) = 'S'))) group by
							a.nr_prescricao,
							x.nr_sequencia,
							x.nr_seq_gas,
							y.ds_gas,
							'N',
							x.cd_intervalo,
							x.qt_gasoterapia,
							w.ds_valor_dominio,
							z.ds_intervalo,
							x.cd_modalidade_vent,
							CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN null  ELSE substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) END  ,
							x.ie_modo_adm,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							CASE WHEN substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10)='P' THEN CASE WHEN plt_obter_se_liberado_gas(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia)='S' THEN 'N'  ELSE 'P' END   ELSE substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,10) END  ,
							substr(obter_valor_dominio(1580,x.ie_unidade_medida),1,30),
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),
							a.ie_prescr_emergencia,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
							x.ie_erro,
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1),
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
							a.cd_funcao_origem,
							x.ie_respiracao,
							x.ie_disp_resp_esp,				
							x.ie_modo_adm,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_prev_execucao,
							c.dt_horario,
							x.dt_suspensao) t
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,	dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			t.dt_prev_execucao,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	t.dt_suspensao,		'O',
											t.nr_seq_gasoterapia,	t.nr_prescricao,		'O') = 'S'
		group by
			null,
			null,
			nr_seq_gas,
			ds_gas,
			ie_acm_sn,	
			cd_intervalo,
			qt_gasoterapia,
			ds_prescricao,
			ds_config_gas,
			ie_lib_pend_rep,
			ie_status_item,
			ds_intervalo,
			ie_liberado,
			ie_unidade_medida,
			cd_modalidade_vent,
			dt_extensao,
			ie_plano_atual,
			ie_retrogrado,
			ie_pend_assinatura,
			ie_erro,
			ie_estendido,
			dt_validade_prescr,
			ie_curta_duracao,
			cd_funcao_origem,
			ie_respiracao, 			
			ie_disp_resp_esp,			
			ie_modo_adm,
			ie_prescr_farm,
			ie_recem_nato;
				
	end if;
	
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_gasoterapia_w,
			nr_seq_gas_w,
			ds_gas_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			qt_gasoterapia_w,
			ds_prescricao_w,
			ds_config_gas_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			ie_status_gas_w,
			ds_interv_prescr_w,
			ie_liberado_w,
			cd_unid_med_qtde_w,
			dt_extensao_w,
			ie_plano_atual_w,
			ie_retrogrado_w,
			ie_pend_assinatura_w,
			ie_erro_w,
			ie_estendido_w,
			dt_validade_prescr_w,
			ie_curta_duracao_w,
			cd_funcao_origem_w,
			ie_respiracao_w, 			
			ie_disp_resp_esp_w,			
			ie_modo_adm_w,
			ie_interv_farm_w,
			ie_recem_nato_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	coalesce(Obter_classif_setor_atend(nr_atendimento_p),0)
		into STRICT	cd_classif_setor_w
		;
			
		if (ie_estendido_w	= 'P') and (coalesce(dt_extensao_w::text, '') = '') then
			dt_extensao_w	:= dt_validade_prescr_w;
		end if;	
		
		if (((ie_estendido_w = 'P') and
			 ((coalesce(cd_funcao_origem_w,924) <> 950) or (ie_curta_duracao_w = 'N'))) or (cd_classif_setor_w = 1)) then
			ie_estendido_w	:= 'N';
		end if;
		
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;
		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,		
			cd_item,
			ds_item,
			ie_acm_sn,		
			cd_intervalo,
			qt_item,
			ds_prescricao,
			ds_diluicao,
			nr_agrupamento,
			ie_diferenciado,
			ie_pendente_liberacao,
			ie_status_item,
			ds_interv_prescr,
			nr_prescricoes,
			ie_liberado,
			ie_copiar,
			cd_unid_med_qtde,
			dt_extensao,
			ie_plano_atual,
			ds_hint,
			ie_retrogrado,
			ie_pend_assinatura,
			ie_erro,
			dt_atualizacao,
			ie_estendido,
			ds_cor_titulo,
			ie_curta_duracao,
			ie_respiracao, 			
			ie_disp_resp_esp,			
			ie_modo_adm,
			ie_interv_farm,
			ie_item_rn)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'O',
			nr_prescricao_w,
			nr_seq_gasoterapia_w,
			nr_seq_gas_w,
			ds_gas_w,
			ie_acm_sn_w,
			cd_intervalo_w,
			qt_gasoterapia_w,
			ds_prescricao_w,
			ds_config_gas_w,
			0,
			'N',
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			ie_status_gas_w,
			ds_interv_prescr_w,
			nr_prescricao_w,
			ie_liberado_w,
			CASE WHEN ie_status_gas_w='S' THEN 'N'  ELSE ie_copiar_w END ,
			cd_unid_med_qtde_w,
			dt_extensao_w,
			ie_plano_atual_w,
			ds_config_gas_w,
			ie_retrogrado_w,
			ie_pend_assinatura_w,
			ie_erro_w,
			clock_timestamp(),
			ie_estendido_w,
			ds_cor_titulo_w,
			ie_curta_duracao_w,
			ie_respiracao_w, 			
			ie_disp_resp_esp_w,			
			ie_modo_adm_w,
			ie_interv_farm_w,
			ie_recem_nato_w);
		end;
	end loop;
	close c01;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_obter_gas ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_agrupar_acm_sn_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
