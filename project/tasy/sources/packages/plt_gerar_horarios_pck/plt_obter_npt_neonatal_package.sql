-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_obter_npt_neonatal ( nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE


	nr_seq_wadep_w			bigint;
	nr_prescricao_w			bigint;
	nr_seq_npt_w			bigint;
	ds_npt_w				varchar(255);
	ie_status_solucao_w		varchar(3);
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)		varchar(1);
	ie_liberado_w			varchar(1);
	ie_copiar_w				varchar(1);
	dt_fim_w				timestamp;
	dt_extensao_w			timestamp;
	hr_prim_horario_w		varchar(5);
	ie_plano_atual_w		varchar(1);
	ie_via_w				varchar(255);
	qt_fase_npt_w			double precision;
	qt_volume_diario_w		double precision;
	ie_retrogrado_w			varchar(1);
	ie_pend_assinatura_w 	varchar(1);
	ie_estendido_w			varchar(1);
	dt_validade_prescr_w	timestamp;
	ds_cor_titulo_w			varchar(20);
	ie_curta_duracao_w		varchar(1);
	cd_funcao_origem_w		bigint;
	cd_classif_setor_w		integer;
	ie_erro_w				integer;
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);
	
	
	c01 REFCURSOR;
		
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ie_copiar_w 	:= plt_obter_se_item_marcado('NPN', nr_seq_regra_p);
	ds_cor_titulo_w	:= plt_obter_cor_titulo('NPN',nr_seq_regra_p);

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_npt,
				ds_npt,
				ie_status_solucao,
				ie_lib_pend_rep,
				ie_liberado,
				dt_extensao,
				hr_prim_horario,
				ie_plano_atual,
				qt_volume_diario,
				ie_via,
				qt_fase_npt,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ie_erro,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia nr_seq_npt,
							'NPT Neonatal ' || x.hr_prim_horario ds_npt,
							CASE WHEN x.ie_status='P' THEN  'W'  ELSE substr(obter_status_solucao_prescr(5,a.nr_prescricao,x.nr_sequencia),1,3) END  ie_status_solucao,
							substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) ie_lib_pend_rep,
							plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
							PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade) dt_extensao,
							x.hr_prim_horario,
							substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
							x.QT_GOTEJO_NPT qt_volume_diario,
							substr(obter_valor_dominio(1953,x.ie_via_administracao),1,50) ie_via,
							x.qt_fase_npt,
							coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
							substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
							substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1) ie_estendido,
							a.dt_validade_prescr,
							obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
							a.cd_funcao_origem,
							plt_obter_erro_npt(a.nr_prescricao,x.nr_sequencia,x.ie_npt_adulta) ie_erro,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_status,
							x.dt_suspensao
					from	nut_pac x,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and		a.nr_atendimento = nr_atendimento_p
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w			
					and		x.ie_npt_adulta not in ('S','P')
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'NPN',
																									wheb_usuario_pck.get_cd_estabelecimento, 
																									wheb_usuario_pck.get_cd_setor_atendimento, 
																									wheb_usuario_pck.get_cd_perfil, 
																									null, 
																									null, 
																									null, 
																									null,
																									a.cd_Setor_atendimento,
																									null,
																									null,
																									null) = 'S')))
					group by
						a.nr_prescricao,
						x.nr_sequencia,
						x.hr_prim_horario,
						a.dt_liberacao_medico,
						a.dt_liberacao,
						x.QT_GOTEJO_NPT,
						substr(obter_valor_dominio(1953,x.ie_via_administracao),1,50),
						x.qt_fase_npt,
						substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),
						a.dt_liberacao_farmacia,
						PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),
						x.hr_prim_horario,
						a.ie_prescr_emergencia,
						x.ie_status,
						substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
						substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1),
						a.dt_validade_prescr,
						obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
						a.cd_funcao_origem,
						plt_obter_erro_npt(a.nr_prescricao,x.nr_sequencia,x.ie_npt_adulta),
						a.ie_prescr_farm,
						coalesce(a.ie_recem_nato, 'N'),
						x.dt_status,
						x.dt_suspensao) alias56
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,	dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_status,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'NPN',
											nr_seq_npt,				nr_prescricao,			'O') = 'S'
		group by
			nr_prescricao,
			nr_seq_npt,
			ds_npt,
			ie_status_solucao,
			ie_lib_pend_rep,
			ie_liberado,
			qt_volume_diario,
			ie_via,
			qt_fase_npt,
			dt_extensao,
			hr_prim_horario,
			ie_plano_atual,
			ie_retrogrado,
			ie_pend_assinatura,
			ie_estendido,
			dt_validade_prescr,
			ie_curta_duracao,
			cd_funcao_origem,
			ie_erro,
			ie_prescr_farm,
			ie_recem_nato;	
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_npt,
				ds_npt,
				ie_status_solucao,
				ie_lib_pend_rep,
				ie_liberado,
				dt_extensao,
				hr_prim_horario,
				ie_plano_atual,
				qt_volume_diario,
				ie_via,
				qt_fase_npt,
				ie_retrogrado,
				ie_pend_assinatura,
				ie_estendido,
				dt_validade_prescr,
				ie_curta_duracao,
				cd_funcao_origem,
				ie_erro,
				ie_prescr_farm,
				ie_recem_nato
		from	(
			SELECT	a.nr_prescricao,
					x.nr_sequencia nr_seq_npt,
					'NPT Neonatal ' || x.hr_prim_horario ds_npt,
					CASE WHEN x.ie_status='P' THEN  'W'  ELSE substr(obter_status_solucao_prescr(5,a.nr_prescricao,x.nr_sequencia),1,3) END  ie_status_solucao,
					substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1) ie_lib_pend_rep,
					plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) ie_liberado,
					PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade) dt_extensao,
					x.hr_prim_horario,
					substr(PLT_obter_se_plano_atual(a.nr_prescricao),1,1) ie_plano_atual,
					x.QT_GOTEJO_NPT qt_volume_diario,
					substr(obter_valor_dominio(1953,x.ie_via_administracao),1,50) ie_via,
					x.qt_fase_npt,
					coalesce(a.ie_prescr_emergencia,'N') ie_retrogrado,
					substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1) ie_pend_assinatura,
					substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1) ie_estendido,
					a.dt_validade_prescr,
					obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type) ie_curta_duracao,
					a.cd_funcao_origem,
					plt_obter_erro_npt(a.nr_prescricao,x.nr_sequencia,x.ie_npt_adulta) ie_erro,
					coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
					coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
					x.dt_status,
					x.dt_suspensao
			from	nut_pac x,
					prescr_medica a
			where	x.nr_prescricao = a.nr_prescricao
			and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
			and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
			and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'			
			and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w		
			and		x.ie_npt_adulta not in ('S','P')
			and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::char(1) = 'S') or
					((current_setting('plt_gerar_horarios_pck.ie_regra_incl_npt_neonatal_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'NPN',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							null, 
																							null, 
																							null,
																							a.cd_Setor_atendimento,
																							null,
																							null,
																							null) = 'S')))
			group by
					a.nr_prescricao,
					x.nr_sequencia,
					x.hr_prim_horario,
					a.dt_liberacao_medico,
					a.dt_liberacao,
					x.QT_GOTEJO_NPT,
					substr(obter_valor_dominio(1953,x.ie_via_administracao),1,50),
					x.qt_fase_npt,
					substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),
					a.dt_liberacao_farmacia,
					PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),
					x.hr_prim_horario,
					a.ie_prescr_emergencia,
					x.ie_status,
					substr(obter_pendencia_assinatura(nm_usuario_p,a.nr_prescricao,'PR'),1,1),
					substr(PLT_obter_ie_validade(PLT_obter_dt_extensao(x.dt_extensao,a.dt_validade_prescr,a.nr_horas_validade),a.dt_validade_prescr,dt_referencia_p),1,1),
					a.dt_validade_prescr,
					obter_ie_curta_duracao(a.nr_prescricao,dt_referencia_p, current_setting('plt_gerar_horarios_pck.cd_perfil_w')::perfil.cd_perfil%type, current_setting('plt_gerar_horarios_pck.cd_pessoa_usuario_w')::pessoa_fisica.cd_pessoa_fisica%type, current_setting('plt_gerar_horarios_pck.cd_especialidade_w')::especialidade_medica.cd_especialidade%type),
					a.cd_funcao_origem,
					plt_obter_erro_npt(a.nr_prescricao,x.nr_sequencia,x.ie_npt_adulta),
					a.ie_prescr_farm,
					coalesce(a.ie_recem_nato, 'N'),
					x.dt_status,
					x.dt_suspensao) alias57
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,	dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_status,
											dt_inicial_horarios_p,	dt_final_horarios_p,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,		ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'NPN',
											nr_seq_npt,				nr_prescricao,			'O') = 'S'
		group by
			nr_prescricao,
			nr_seq_npt,
			ds_npt,
			ie_status_solucao,
			ie_lib_pend_rep,
			ie_liberado,
			qt_volume_diario,
			ie_via,
			qt_fase_npt,
			dt_extensao,
			hr_prim_horario,
			ie_plano_atual,
			ie_retrogrado,
			ie_pend_assinatura,
			ie_estendido,
			dt_validade_prescr,
			ie_curta_duracao,
			cd_funcao_origem,
			ie_erro,
			ie_prescr_farm,
			ie_recem_nato;		
	end if;
	
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_npt_w,
			ds_npt_w,
			ie_status_solucao_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			ie_liberado_w,
			dt_extensao_w,
			hr_prim_horario_w,
			ie_plano_atual_w,
			qt_volume_diario_w,
			ie_via_w,
			qt_fase_npt_w,
			ie_retrogrado_w,
			ie_pend_assinatura_w,
			ie_estendido_w,
			dt_validade_prescr_w,
			ie_curta_duracao_w,
			cd_funcao_origem_w,
			ie_erro_w,
			ie_interv_farm_w,
			ie_recem_nato_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	coalesce(Obter_classif_setor_atend(nr_atendimento_p),0)
		into STRICT	cd_classif_setor_w
		;
		
		if (ie_estendido_w	= 'P') and (coalesce(dt_extensao_w::text, '') = '') then
			dt_extensao_w	:= dt_validade_prescr_w;
		end if;	
		
		if (((ie_estendido_w = 'P') and
			 ((coalesce(cd_funcao_origem_w,924) <> 950) or (ie_curta_duracao_w = 'N'))) or (cd_classif_setor_w = 1)) then
			ie_estendido_w	:= 'N';
		end if;
		
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;
		
		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,		
			cd_item,
			ds_item,
			ie_acm_sn,
			nr_agrupamento,
			nr_seq_proc_interno,
			ie_diferenciado,
			ie_status_item,
			ie_pendente_liberacao,
			nr_prescricoes,
			ie_liberado,
			ie_copiar,
			dt_extensao,
			hr_prim_horario,
			ie_plano_atual,
			cd_unid_med_qtde,
			ie_via_aplicacao,
			DS_INTERV_PRESCR,
			qt_item,
			ie_retrogrado,
			ie_pend_assinatura,
			dt_atualizacao,
			ie_estendido,
			ds_cor_titulo,
			ie_curta_duracao,
			ie_erro,
			ie_interv_farm,
			ie_item_rn)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'NPN',
			nr_prescricao_w,
			nr_seq_npt_w,
			nr_seq_npt_w,
			ds_npt_w,
			'N',
			0,
			0,
			'N',
			ie_status_solucao_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			nr_prescricao_w,
			ie_liberado_w,
			CASE WHEN ie_status_solucao_w='S' THEN 'N'  ELSE ie_copiar_w END ,
			dt_extensao_w,
			hr_prim_horario_w,
			ie_plano_atual_w,
			substr(obter_desc_unid_med(obter_unid_med_usua('ml/h')),1,30),
			substr(ie_via_w,1,5),
			qt_fase_npt_w,
			qt_volume_diario_w,
			ie_retrogrado_w,
			ie_pend_assinatura_w,
			clock_timestamp(),
			ie_estendido_w,
			ds_cor_titulo_w,
			ie_curta_duracao_w,
			ie_erro_w,
			ie_interv_farm_w,
			ie_recem_nato_w);
		end;
	end loop;
	close c01;

	CALL Atualizar_plt_controle(nm_usuario_p, nr_atendimento_p, current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10), 'NPN', 'N',null);	
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_obter_npt_neonatal ( nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, nr_seq_regra_p bigint, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
