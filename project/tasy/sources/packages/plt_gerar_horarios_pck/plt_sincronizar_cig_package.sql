-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_cig ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE

					
	ds_sep_bv_w				varchar(50);				
	nr_prescricao_w			bigint;
	nr_seq_procedimento_w	integer;
	nr_seq_horario_w		bigint;
	ie_status_horario_w		varchar(15);
	cd_procedimento_w		bigint;
	ds_procedimento_w		varchar(255);
	nr_seq_proc_interno_w	bigint;
	ie_acm_sn_w				varchar(1);
	cd_intervalo_w			varchar(7);
	qt_procedimento_w		double precision;
	ds_prescricao_w			varchar(100);
	ds_mat_med_assoc_w		varchar(2000);
	ie_suspenso_w			varchar(1);
	dt_suspensao_w			timestamp;
	ds_comando_update_w		varchar(4000);
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)		varchar(1);
	current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;
	nr_horario_w			integer;
	dt_fim_w				timestamp;
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);
	
	
	c01 REFCURSOR;
		
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ds_sep_bv_w	:= obter_separador_bv;
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_procedimento,
				nr_sequencia,
				ie_status_horario,
				cd_procedimento,
				ds_valor_dominio,
				nr_seq_proc_interno,
				ie_acm_sn,		
				cd_intervalo,
				qt_procedimento,
				ds_prescricao,
				ds_mat_med_assoc,
				ie_suspenso,
				dt_suspensao,
				ie_lib_pend_rep,
				dt_horario,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							c.nr_seq_procedimento,
							c.nr_sequencia,
							substr(plt_obter_status_hor_proc_cig(c.dt_fim_horario,c.dt_suspensao,c.ie_dose_especial,c.dt_lib_horario),1,15) ie_status_horario,
							c.cd_procedimento,
							z.ds_valor_dominio,
							c.nr_seq_proc_interno,
							obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		
							x.cd_intervalo,
							x.qt_procedimento,
							substr(adep_obter_dados_prescr_proc(a.nr_prescricao,c.nr_seq_procedimento,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
							CASE WHEN coalesce(obter_se_mostra_adic(18),'S')='N' THEN null  ELSE substr(obter_mat_med_assoc_proc(a.nr_prescricao,c.nr_seq_procedimento,'S') ||' '|| substr(x.ds_observacao,1,255),1,2000) END  ds_mat_med_assoc,
							coalesce(x.ie_suspenso,'N') ie_suspenso,
							c.dt_suspensao dt_suspensao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao dt_susp_item
					from	valor_dominio_v z,
							procedimento y,
							proc_interno w,
							prescr_procedimento x,
							prescr_proc_hor c,
							prescr_medica a
					where	z.cd_dominio = 1903
					and		z.vl_dominio = w.ie_ctrl_glic
					and		y.cd_procedimento = x.cd_procedimento
					and		y.ie_origem_proced = x.ie_origem_proced
					and		y.cd_procedimento = c.cd_procedimento
					and		y.ie_origem_proced = c.ie_origem_proced		
					and		w.nr_sequencia = x.nr_seq_proc_interno
					and		w.nr_sequencia = c.nr_seq_proc_interno
					and		x.nr_prescricao = c.nr_prescricao
					and		x.nr_sequencia = c.nr_seq_procedimento
					and		x.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		a.nr_atendimento = nr_atendimento_p		
					and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		((a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w)or (a.ie_hemodialise IS NOT NULL AND a.ie_hemodialise::text <> ''))	
					and		w.ie_tipo <> 'G'
					and		w.ie_tipo <> 'BS'
					and		coalesce(w.ie_ivc,'N') <> 'S'
					and		w.ie_ctrl_glic = 'CIG'
					and		(x.nr_seq_proc_interno IS NOT NULL AND x.nr_seq_proc_interno::text <> '')
					and		coalesce(x.nr_seq_solic_sangue::text, '') = ''
					and		coalesce(x.nr_seq_derivado::text, '') = ''
					and		coalesce(x.nr_seq_exame_sangue::text, '') = ''
					and		coalesce(c.ie_situacao,'A') = 'A'
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_cig_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_cig_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'CIG',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							c.cd_procedimento, 
																							c.ie_origem_proced, 
																							c.nr_seq_proc_interno,
																							a.cd_setor_Atendimento,
																							x.cd_setor_atendimento,
																							null,
																							x.nr_seq_exame) = 'S')))
					and		((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
					group by
							a.nr_prescricao,
							c.nr_seq_procedimento,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							c.ie_dose_especial,
							c.cd_procedimento,
							z.ds_valor_dominio,
							c.nr_seq_proc_interno,
							x.ie_acm,
							x.ie_se_necessario,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),		
							x.cd_intervalo,
							x.qt_procedimento,
							x.ie_suspenso,
							c.dt_lib_horario,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							c.dt_horario,
							x.ds_observacao,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias49
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_susp_item,		'C',
											nr_seq_procedimento,		nr_prescricao,			'S') = 'S'
		group by		
				nr_prescricao,
				nr_seq_procedimento,
				nr_sequencia,
				ie_status_horario,
				cd_procedimento,
				ds_valor_dominio,
				nr_seq_proc_interno,
				ie_acm_sn,		
				cd_intervalo,
				qt_procedimento,
				ds_prescricao,
				ds_mat_med_assoc,
				ie_suspenso,
				dt_suspensao,
				ie_lib_pend_rep,
				dt_horario,
				ie_prescr_farm,
				ie_recem_nato,
				dt_susp_item
		order by
				dt_suspensao;	
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_seq_procedimento,
				nr_sequencia,
				ie_status_horario,
				cd_procedimento,
				ds_valor_dominio,
				nr_seq_proc_interno,
				ie_acm_sn,		
				cd_intervalo,
				qt_procedimento,
				ds_prescricao,
				ds_mat_med_assoc,
				ie_suspenso,
				dt_suspensao,
				ie_lib_pend_rep,
				dt_horario,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							c.nr_seq_procedimento,
							c.nr_sequencia,
							substr(plt_obter_status_hor_proc_cig(c.dt_fim_horario,c.dt_suspensao,c.ie_dose_especial,c.dt_lib_horario),1,15) ie_status_horario,
							c.cd_procedimento,
							z.ds_valor_dominio,
							c.nr_seq_proc_interno,
							obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		
							x.cd_intervalo,
							x.qt_procedimento,
							substr(adep_obter_dados_prescr_proc(a.nr_prescricao,c.nr_seq_procedimento,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
							CASE WHEN coalesce(obter_se_mostra_adic(18),'S')='N' THEN null  ELSE substr(obter_mat_med_assoc_proc(a.nr_prescricao,c.nr_seq_procedimento,'S') ||' '|| substr(x.ds_observacao,1,255),1,2000) END  ds_mat_med_assoc,
							coalesce(x.ie_suspenso,'N') ie_suspenso,
							c.dt_suspensao dt_suspensao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao dt_susp_item
					from	valor_dominio_v z,
							procedimento y,
							proc_interno w,
							prescr_procedimento x,
							prescr_proc_hor c,
							prescr_medica a
					where	z.cd_dominio = 1903
					and		z.vl_dominio = w.ie_ctrl_glic
					and		y.cd_procedimento = x.cd_procedimento
					and		y.ie_origem_proced = x.ie_origem_proced
					and		y.cd_procedimento = c.cd_procedimento
					and		y.ie_origem_proced = c.ie_origem_proced		
					and		w.nr_sequencia = x.nr_seq_proc_interno
					and		w.nr_sequencia = c.nr_seq_proc_interno
					and		x.nr_prescricao = c.nr_prescricao
					and		x.nr_sequencia = c.nr_seq_procedimento
					and		x.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)		
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		((a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w)or (a.ie_hemodialise IS NOT NULL AND a.ie_hemodialise::text <> ''))	
					and		w.ie_tipo <> 'G'
					and		w.ie_tipo <> 'BS'
					and		coalesce(w.ie_ivc,'N') <> 'S'
					and		w.ie_ctrl_glic = 'CIG'
					and		(x.nr_seq_proc_interno IS NOT NULL AND x.nr_seq_proc_interno::text <> '')
					and		coalesce(x.nr_seq_solic_sangue::text, '') = ''
					and		coalesce(x.nr_seq_derivado::text, '') = ''
					and		coalesce(x.nr_seq_exame_sangue::text, '') = ''
					and		coalesce(c.ie_situacao,'A') = 'A'
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_cig_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_cig_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'CIG',
																							wheb_usuario_pck.get_cd_estabelecimento,
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							null, 
																							c.cd_procedimento, 
																							c.ie_origem_proced, 
																							c.nr_seq_proc_interno,
																							a.cd_setor_Atendimento,
																							x.cd_setor_atendimento,
																							null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																							x.nr_seq_exame) = 'S')))	  -- nr_seq_exame_p
					and		((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
					group by
							a.nr_prescricao,
							c.nr_seq_procedimento,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							c.ie_dose_especial,
							c.cd_procedimento,
							z.ds_valor_dominio,
							c.nr_seq_proc_interno,
							x.ie_acm,
							x.ie_se_necessario,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),		
							x.cd_intervalo,
							x.qt_procedimento,
							x.ie_suspenso,
							c.dt_lib_horario,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							c.dt_horario,
							x.ds_observacao,	
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias50
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_susp_item,		'C',
											nr_seq_procedimento,		nr_prescricao,			'S') = 'S'
		group by		
				nr_prescricao,
				nr_seq_procedimento,
				nr_sequencia,
				ie_status_horario,
				cd_procedimento,
				ds_valor_dominio,
				nr_seq_proc_interno,
				ie_acm_sn,		
				cd_intervalo,
				qt_procedimento,
				ds_prescricao,
				ds_mat_med_assoc,
				ie_suspenso,
				dt_suspensao,
				ie_lib_pend_rep,
				dt_horario,
				ie_prescr_farm,
				ie_recem_nato,
				dt_susp_item
		order by
			dt_suspensao;		
	end if;
	
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_procedimento_w,
			nr_seq_horario_w,
			ie_status_horario_w,
			cd_procedimento_w,
			ds_procedimento_w,
			nr_seq_proc_interno_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			qt_procedimento_w,
			ds_prescricao_w,
			ds_mat_med_assoc_w,
			ie_suspenso_w,
			dt_suspensao_w,
			current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
			current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp,
			ie_interv_farm_w,
			ie_recem_nato_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );
		if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then		
			ds_comando_update_w	:=	' update w_rep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
							' ds_diluicao = :ds_mat_med_assoc, ' ||
							' ds_hint = :ds_mat_med_assoc ' ||							
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||					
							' and cd_item = :cd_item ' ||
							' and nvl(nr_seq_proc_interno,nvl(:nr_seq_proc_interno,0)) = nvl(:nr_seq_proc_interno,0) ' ||
							' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
							' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
							' and nvl(ie_pendente_liberacao,''X'') = :ie_pendente_liberacao ' ||
							' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ' ||
							' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm' ||
							' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';
						
			CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'ds_mat_med_assoc=' || ds_mat_med_assoc_w || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=C' || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_seq_procedimento_w) || ds_sep_bv_w ||
										'cd_item=' || to_char(cd_procedimento_w) || ds_sep_bv_w ||
										'nr_seq_proc_interno=' || to_char(nr_seq_proc_interno_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'qt_item=' || to_char(qt_procedimento_w) || ds_sep_bv_w ||
										'ie_pendente_liberacao=' || current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15) || ds_sep_bv_w ||
										'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w ||
										'ie_interv_farm='||ie_interv_farm_w||ds_sep_bv_w||
										'ie_recem_nato='||ie_recem_nato_w||ds_sep_bv_w);
		end if;								
		end;
	end loop;
	close c01;
	CALL Atualizar_plt_controle(nm_usuario_p, nr_atendimento_p,current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10), 'CIG', 'N',null);	
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_cig ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
