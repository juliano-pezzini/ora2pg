-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_dieta_oral ( nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_horarios_dietas_orais_p text, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE

					
	ds_sep_bv_w			varchar(50);
					
	nr_prescricao_w			bigint;
	nr_seq_horario_w		bigint;
	ie_status_horario_w		varchar(15);
	cd_refeicao_w			varchar(15);
	ds_informacoes_w		varchar(255);
	ds_observacoes_w		varchar(255);
	ds_informacoes_ww		varchar(2000);
	ds_comando_update_w		varchar(4000);
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)		varchar(1);
	ie_mostrar_adic_w		varchar(15);
	current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;
	nr_horario_w			integer;		
	dt_fim_w			timestamp;
	ie_status_w			varchar(1);
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);
	
	
	c01 REFCURSOR;
	c02 REFCURSOR;		
			
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ds_sep_bv_w	:= obter_separador_bv;
	
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status_horario,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				dt_horario,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		from (	SELECT	c.nr_prescricao,
							c.nr_sequencia,
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10) ie_status_horario,
							c.cd_refeicao,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
							c.ds_observacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							coalesce(d.ie_suspenso,'N') ie_suspenso,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							c.nr_seq_dieta,
							d.dt_suspensao
					from	valor_dominio_v x,
							prescr_dieta d,
							prescr_dieta_hor c,
							prescr_medica a
					where	x.vl_dominio = c.cd_refeicao
					and		d.nr_prescricao = c.nr_prescricao
					and		d.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia	
					and		x.cd_dominio = 99
					and		(c.cd_refeicao IS NOT NULL AND c.cd_refeicao::text <> '')
					and		a.nr_atendimento = nr_atendimento_p
					and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		coalesce(c.ie_situacao,'A') = 'A'
					group by
							c.nr_prescricao,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							c.cd_refeicao,	
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ,
							c.ds_observacao,
							c.dt_lib_horario,
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao_farmacia,
							c.dt_horario,
							d.ie_suspenso,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							c.nr_seq_dieta,
							d.dt_suspensao
					
union

					select	c.nr_prescricao,
							c.nr_sequencia,
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10) ie_status_horario,
							to_char(d.cd_dieta) cd_refeicao,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
							c.ds_observacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							coalesce(d.ie_suspenso,'N') ie_suspenso,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							c.nr_seq_dieta,
							d.dt_suspensao
					from	dieta x,
							prescr_dieta d,
							prescr_dieta_hor c,
							prescr_medica a
					where	x.cd_dieta 	= d.cd_dieta
					and		d.nr_prescricao = c.nr_prescricao
					and		d.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia
					and		coalesce(c.cd_refeicao::text, '') = ''
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		a.nr_atendimento = nr_atendimento_p
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		coalesce(c.ie_situacao,'A') = 'A'
					group by
							c.nr_prescricao,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							d.cd_dieta,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255),
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10),
							c.ds_observacao,
							c.dt_lib_horario,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao_farmacia,
							c.dt_horario,
							d.ie_suspenso,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							c.nr_seq_dieta,
							d.dt_suspensao) alias60
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'D',
											nr_seq_dieta,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status_horario,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				dt_horario,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		order by
				dt_horario;
							
		open	c02 for
		SELECT	nr_prescricao,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		from (	SELECT	c.nr_prescricao,
							to_char(d.cd_dieta) cd_refeicao,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
							substr(c.ds_observacao,1,255) ds_observacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							coalesce(d.ie_suspenso,'N') ie_suspenso,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							d.nr_sequencia,
							d.dt_suspensao,
							c.dt_horario
					from	prescr_dieta d,
							prescr_dieta_hor c,
							prescr_medica a
					where	d.nr_prescricao = c.nr_prescricao
					and		d.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia
					and		a.nr_atendimento = nr_atendimento_p
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		coalesce(c.ie_situacao,'A') = 'A'
					group by
							c.nr_prescricao,
							d.cd_dieta,
							c.ds_observacao,
							a.dt_liberacao_medico,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							d.nr_sequencia,
							d.ie_suspenso,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							d.dt_suspensao,
							c.dt_horario) alias20
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'D',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		
union

		select	a.nr_prescricao,
				to_char(d.cd_dieta),
				substr(obter_inf_dieta_adep(a.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
				substr(d.ds_observacao,1,255),
				coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
				coalesce(d.ie_suspenso,'N') ie_suspenso,
				coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
				coalesce(a.ie_recem_nato, 'N') ie_recem_nato
		from	dieta x,
				prescr_dieta d,	
				prescr_medica a
		where	x.cd_dieta = d.cd_dieta
		and		d.nr_prescricao	= a.nr_prescricao
		and		a.nr_atendimento = nr_atendimento_p		
		and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
		and		((get_ie_plano_por_setor = 'S' AND a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w) or
				 ((get_ie_plano_por_setor	= 'R') and
				  ((to_char(a.dt_rep_pt,'dd/mm/yyyy') = dt_plano_p) or (to_char(a.dt_rep_pt2,'dd/mm/yyyy') = dt_plano_p))))	
		and		not exists (
					select	1
					from	prescr_dieta_hor c
					where	c.nr_prescricao = d.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia)
		and		((((coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')) and (ie_prescr_usuario_p = 'N')) or (a.nm_usuario_original = nm_usuario_p))
		and		(((ie_estendidos_p = 0) and (PLT_obter_se_estendido(coalesce(d.dt_extensao,a.dt_validade_prescr),dt_referencia_p) = 'S')) or
				 ((ie_estendidos_p = 1) and (PLT_obter_se_estendido(coalesce(d.dt_extensao,a.dt_validade_prescr),dt_referencia_p) = 'N')) or (ie_estendidos_p = 2))
		and		(((ie_edicao_p = 'S') and (plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) = 'N')) or (ie_edicao_p = 'N'))		
		and		((ie_exibir_hor_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
		group by
			a.nr_prescricao,
			d.cd_dieta,
			d.ds_observacao,
			coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
			a.dt_liberacao_medico,
			a.dt_liberacao,
			a.dt_liberacao_farmacia,
			d.nr_sequencia,
			d.ie_suspenso,
			a.ie_prescr_farm,
			coalesce(a.ie_recem_nato, 'N');
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status_horario,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				dt_horario,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		from (	SELECT	c.nr_prescricao,
							c.nr_sequencia,
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10) ie_status_horario,
							c.cd_refeicao,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
							c.ds_observacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							coalesce(d.ie_suspenso,'N') ie_suspenso,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							c.nr_seq_dieta,
							d.dt_suspensao
					from	valor_dominio_v x,
							prescr_dieta d,
							prescr_dieta_hor c,
							prescr_medica a
					where	x.vl_dominio = c.cd_refeicao
					and		d.nr_prescricao = c.nr_prescricao
					and		d.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia
					and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'		
					and		x.cd_dominio = 99
					and		(c.cd_refeicao IS NOT NULL AND c.cd_refeicao::text <> '')
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		coalesce(c.ie_situacao,'A') = 'A'
					group by
							c.nr_prescricao,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							c.cd_refeicao,	
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255),
							c.ds_observacao,
							c.dt_lib_horario,
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao_farmacia,
							c.dt_horario,
							d.ie_suspenso,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							c.nr_seq_dieta,
							d.dt_suspensao
					
union

					select	c.nr_prescricao,
							c.nr_sequencia,
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10) ie_status_horario,
							to_char(d.cd_dieta) cd_refeicao,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
							c.ds_observacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							c.dt_horario,
							coalesce(d.ie_suspenso,'N') ie_suspenso,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							c.nr_seq_dieta,
							d.dt_suspensao
					from	dieta x,
							prescr_dieta d,
							prescr_dieta_hor c,
							prescr_medica a
					where	x.cd_dieta 	= d.cd_dieta
					and		d.nr_prescricao = c.nr_prescricao
					and		d.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia
					and		coalesce(c.cd_refeicao::text, '') = ''
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'			
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		coalesce(c.ie_situacao,'A') = 'A'	
					group by
							c.nr_prescricao,
							c.nr_sequencia,
							c.dt_fim_horario,
							c.dt_suspensao,
							d.cd_dieta,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255),
							substr(obter_status_hor_dieta(get_usa_servico_dietas,c.nr_sequencia, current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp, current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp),1,10),
							c.ds_observacao,
							c.dt_lib_horario,
							a.dt_liberacao_medico,
							a.dt_liberacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao_farmacia,
							c.dt_horario,
							d.ie_suspenso,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							c.nr_seq_dieta,
							d.dt_suspensao) alias63
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'D',
											nr_seq_dieta,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status_horario,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				dt_horario,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		order by
				dt_horario;
			
		open	c02 for
		SELECT	nr_prescricao,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		from (	SELECT	c.nr_prescricao,
							to_char(d.cd_dieta) cd_refeicao,
							substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
							substr(c.ds_observacao,1,255) ds_observacao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							coalesce(d.ie_suspenso,'N') ie_suspenso,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							d.nr_sequencia,
							d.dt_suspensao,
							c.dt_horario
					from	prescr_dieta d,
							prescr_dieta_hor c,
							prescr_medica a
					where	d.nr_prescricao = c.nr_prescricao
					and		d.nr_prescricao = a.nr_prescricao
					and		c.nr_prescricao = a.nr_prescricao
					and		c.nr_seq_dieta	= d.nr_sequencia
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w
					and		coalesce(c.ie_situacao,'A') = 'A'					
					group by
							c.nr_prescricao,
							d.cd_dieta,
							c.ds_observacao,
							a.dt_liberacao_medico,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							d.nr_sequencia,
							d.ie_suspenso,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							d.nr_sequencia,
							d.dt_suspensao,
							c.dt_horario) alias22
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'D',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				cd_refeicao,
				ds_informacoes,
				ds_observacao,
				ie_lib_pend_rep,
				ie_suspenso,
				ie_prescr_farm,
				ie_recem_nato
		
union

		select	a.nr_prescricao,
				to_char(d.cd_dieta),
				substr(obter_inf_dieta_adep(a.nr_prescricao,d.nr_sequencia,'DI'),1,255) ds_informacoes,
				substr(d.ds_observacao,1,255),
				coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
				coalesce(d.ie_suspenso,'N') ie_suspenso,
				coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
				coalesce(a.ie_recem_nato, 'N') ie_recem_nato
		from	dieta x,
				prescr_dieta d,	
				prescr_medica a
		where	x.cd_dieta = d.cd_dieta
		and		d.nr_prescricao	= a.nr_prescricao
		and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)
		and		((get_ie_plano_por_setor = 'S' AND a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w) or
				 ((get_ie_plano_por_setor	= 'R') and
				  ((to_char(a.dt_rep_pt,'dd/mm/yyyy') = dt_plano_p) or (to_char(a.dt_rep_pt2,'dd/mm/yyyy') = dt_plano_p))))
		and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
		
		and		not exists (
					select	1
					from	prescr_dieta_hor c
					where	c.nr_prescricao = d.nr_prescricao
					and	c.nr_prescricao = a.nr_prescricao
					and	c.nr_seq_dieta	= d.nr_sequencia)
		and		((((coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')) and (ie_prescr_usuario_p = 'N')) or (a.nm_usuario_original = nm_usuario_p))
		and		(((ie_estendidos_p = 0) and (PLT_obter_se_estendido(coalesce(d.dt_extensao,a.dt_validade_prescr),dt_referencia_p) = 'S')) or
				 ((ie_estendidos_p = 1) and (PLT_obter_se_estendido(coalesce(d.dt_extensao,a.dt_validade_prescr),dt_referencia_p) = 'N')) or (ie_estendidos_p = 2))
		and		(((ie_edicao_p = 'S') and (plt_obter_se_liberado(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia) = 'N')) or (ie_edicao_p = 'N'))		
		and		((ie_exibir_hor_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
		group by
				a.nr_prescricao,
				d.cd_dieta,
				d.ds_observacao,
				coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
				a.dt_liberacao_medico,
				a.dt_liberacao,
				a.dt_liberacao_farmacia,
				d.nr_sequencia,
				d.ie_suspenso,
				a.ie_prescr_farm,
				coalesce(a.ie_recem_nato, 'N');
	end if;
	
	select	coalesce(obter_se_mostra_adic(2),'S')
	into STRICT	ie_mostrar_adic_w
	;
	
	if (ie_horarios_dietas_orais_p <> 'N') then
		begin
		loop
		fetch c01 into	nr_prescricao_w,
				nr_seq_horario_w,
				ie_status_horario_w,
				cd_refeicao_w,
				ds_informacoes_w,
				ds_observacoes_w,
				current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
				current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp,
				ie_status_w,
				ie_interv_farm_w,
			    ie_recem_nato_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
				
				if (ie_mostrar_adic_w <> 'S') then
					ds_informacoes_ww := null;
				else
					ds_informacoes_ww := substr(ds_informacoes_w || ' - Obs: ' || ds_observacoes_w,1,2000);
				end if;
				
				ds_comando_update_w	:=	' update w_rep_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ds_diluicao = :ds_informacoes, ' ||
								' ds_hint = :ds_informacoes ' ||								
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and nvl(ie_status_item,''N'') = :ie_status ' ||
								' and nvl(ie_pendente_liberacao,''X'') = :ie_pendente_liberacao ' ||
								' and cd_item = :cd_item ' ||
							    ' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm' ||
							    ' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';
							
				CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
											'ds_informacoes=' || ds_informacoes_ww || ds_sep_bv_w || 
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
											'ie_tipo=D' || ds_sep_bv_w || 
											'ie_status=' || to_char(ie_status_w) || ds_sep_bv_w ||
											'ie_pendente_liberacao=' || current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15) || ds_sep_bv_w ||									
											'cd_item=' || cd_refeicao_w || ds_sep_bv_w ||
										    'ie_interv_farm='||ie_interv_farm_w||ds_sep_bv_w||
										    'ie_recem_nato='||ie_recem_nato_w||ds_sep_bv_w);
			end if;
			end;
		end loop;
		close c01;
		end;
	else
		begin
		loop
		fetch c02 into	nr_prescricao_w,
				cd_refeicao_w,
				ds_informacoes_w,
				ds_observacoes_w,
				current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
				ie_status_w,
				ie_interv_farm_w,
			    ie_recem_nato_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (ie_mostrar_adic_w <> 'S') then
				ds_informacoes_ww := null;
			else
				ds_informacoes_ww := substr(ds_informacoes_w || ' - Obs: ' || ds_observacoes_w,1,2000);
			end if;
			
			ds_comando_update_w	:=	' update w_rep_t ' ||
							' set nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
							' ds_diluicao = :ds_informacoes, ' ||
							' ds_hint = :ds_informacoes ' ||							
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(ie_status_item,''N'') = :ie_status ' ||
							' and nvl(ie_pendente_liberacao,''X'') = :ie_pendente_liberacao ' ||
							' and cd_item = :cd_item ' ||
							' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm ' ||
							' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';
						
			CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
										'ds_informacoes=' || ds_informacoes_ww || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=D' || ds_sep_bv_w || 
										'ie_status=' || to_char(ie_status_w) || ds_sep_bv_w ||
										'ie_pendente_liberacao=' || current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15) || ds_sep_bv_w ||									
										'cd_item=' || cd_refeicao_w || ds_sep_bv_w ||
										'ie_interv_farm=' || ie_interv_farm_w || ds_sep_bv_w||
										'ie_recem_nato=' || ie_recem_nato_w || ds_sep_bv_w);
			end;
		end loop;
		close c02;	
		end;
	end if;

	CALL Atualizar_plt_controle(nm_usuario_p, nr_atendimento_p, current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10), 'D', 'N',null);	
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_dieta_oral ( nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_horarios_dietas_orais_p text, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
