-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_sne ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) AS $body$
DECLARE

					
	ds_sep_bv_w			varchar(50);				
	nr_prescricao_w			bigint;
	nr_seq_solucao_w		integer;
	nr_seq_horario_w		bigint;
	ie_status_horario_w		varchar(15);
	ds_comando_update_w		varchar(4000);
	current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15)		varchar(1);
	current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;
	nr_horario_w			integer;	
	dt_fim_w			timestamp;
	cd_material_w			bigint;
	ie_status_w			varchar(15);
	cd_intervalo_w			varchar(50);
	qt_dose_w			double precision;
	ds_prescricao_w			varchar(4000);	
	ds_dil_obs_w			varchar(2000);
	ie_interv_farm_w		varchar(1);
	ie_recem_nato_w			varchar(1);
	
	
	c01 REFCURSOR;
	c02 REFCURSOR;
	
	
BEGIN
	dt_fim_w	:= dt_validade_limite_p + 5;
	ds_sep_bv_w	:= obter_separador_bv;

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		open	c01 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_status,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia,
							substr(plt_obter_status_solucao(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status_solucao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							x.dt_status,
							x.cd_material,
							x.cd_intervalo,
							coalesce(CASE WHEN x.qt_vel_infusao=0 THEN  null  ELSE x.qt_vel_infusao END , x.qt_dose) qt_vel_infusao,
							substr(adep_obter_um_dosagem_prescr(a.nr_prescricao,x.nr_sequencia,x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
							substr(plt_obter_status_solucao(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,x.nr_sequencia),1,2000) END  ds_dil_obs,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao
					from	prescr_material x,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and		a.nr_atendimento = nr_atendimento_p
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		x.ie_agrupador = 8
					and		x.ie_status in ('N','P')
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SNE',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							x.cd_material, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null,
																							null) = 'S')))
					group by
							a.nr_prescricao,
							x.nr_sequencia,
							coalesce(x.ie_suspenso,'N'),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							x.dt_status,
							x.cd_material,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							x.cd_intervalo,
							coalesce(CASE WHEN x.qt_vel_infusao=0 THEN  null  ELSE x.qt_vel_infusao END , x.qt_dose),
							x.ie_acm,
							x.ie_se_necessario,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,x.nr_sequencia),1,2000) END ,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias43
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_status,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SNE',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_status,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato;
			
		open	c02 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_horario,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia,
							substr(obter_status_hor_sol_adep(h.dt_inicio_horario,h.dt_fim_horario,h.dt_suspensao,h.dt_interrupcao,h.ie_dose_especial,h.nr_seq_processo,h.nr_seq_area_prep,a.nr_prescricao,null),1,15) ie_status_solucao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							h.dt_horario,
							x.cd_material,
							x.cd_intervalo,
							coalesce(CASE WHEN x.qt_vel_infusao=0 THEN  null  ELSE x.qt_vel_infusao END , x.qt_dose) qt_vel_infusao,
							substr(adep_obter_um_dosagem_prescr(a.nr_prescricao,x.nr_sequencia,x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
							substr(plt_obter_status_solucao(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,h.nr_seq_material),1,2000) END  ds_dil_obs	,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao
					from	prescr_material x,
							prescr_mat_hor h,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and 	x.nr_prescricao = h.nr_prescricao
					and		x.nr_Sequencia	= h.nr_Seq_material
					and		a.nr_atendimento = nr_atendimento_p		
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		x.ie_agrupador = 8
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SNE',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							x.cd_material, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null,
																							null) = 'S')))
					and		coalesce(h.ie_situacao,'A') = 'A'
					and		((coalesce(h.ie_horario_especial,'N') = 'N') or (h.dt_fim_horario IS NOT NULL AND h.dt_fim_horario::text <> ''))
					group by
							a.nr_prescricao,
							x.nr_sequencia,
							coalesce(x.ie_suspenso,'N'),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							h.dt_horario,
							x.cd_material,
							x.cd_intervalo,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							coalesce(CASE WHEN x.QT_VEL_INFUSAO=0 THEN  null  ELSE x.QT_VEL_INFUSAO END , x.qt_dose),
							x.ie_acm,
							x.ie_se_necessario,
							h.dt_inicio_horario,
							h.dt_fim_horario,
							h.dt_suspensao,
							h.dt_interrupcao,
							h.ie_dose_especial,
							h.nr_seq_processo,
							h.nr_seq_area_prep,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,h.nr_seq_material),1,2000) END , 
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias46
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SNE',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_horario,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato;	
	else
		open	c01 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_status,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia,
							substr(plt_obter_status_solucao(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status_solucao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							x.dt_status,
							x.cd_material,
							x.cd_intervalo,
							coalesce(CASE WHEN x.qt_vel_infusao=0 THEN  null  ELSE x.qt_vel_infusao END , x.qt_dose) qt_vel_infusao,
							substr(adep_obter_um_dosagem_prescr(a.nr_prescricao,x.nr_sequencia,x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
							substr(plt_obter_status_solucao(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,x.nr_sequencia),1,2000) END  ds_dil_obs,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao		
					from	prescr_material x,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)		
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		plt_gerar_horarios_pck.obter_se_mostra_rep_inter(a.ie_motivo_prescricao) = 'S'
					and		x.ie_agrupador = 8
					and		x.ie_status in ('N','P')
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SNE',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							x.cd_material, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null,
																							null) = 'S')))
					group by
							a.nr_prescricao,
							x.nr_sequencia,
							coalesce(x.ie_suspenso,'N'),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							x.dt_status,
							x.cd_material,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							x.cd_intervalo,
							coalesce(CASE WHEN x.QT_VEL_INFUSAO=0 THEN  null  ELSE x.QT_VEL_INFUSAO END , x.qt_dose),
							x.ie_acm,
							x.ie_se_necessario,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,x.nr_sequencia),1,2000) END , 
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias44
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_status,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SNE',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_status,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato;
				
		open c02 for
		SELECT	nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_horario,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato
		from	(	SELECT	a.nr_prescricao,
							x.nr_sequencia,
							substr(obter_status_hor_sol_adep(h.dt_inicio_horario,h.dt_fim_horario,h.dt_suspensao,h.dt_interrupcao,h.ie_dose_especial,h.nr_seq_processo,h.nr_seq_area_prep,a.nr_prescricao,null),1,15) ie_status_solucao,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X') ie_lib_pend_rep,
							h.dt_horario,
							x.cd_material,
							x.cd_intervalo,
							coalesce(CASE WHEN x.qt_vel_infusao=0 THEN  null  ELSE x.qt_vel_infusao END , x.qt_dose) qt_vel_infusao,
							substr(adep_obter_um_dosagem_prescr(a.nr_prescricao,x.nr_sequencia,x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
							substr(plt_obter_status_solucao(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,h.nr_seq_material),1,2000) END  ds_dil_obs	,
							coalesce(a.ie_prescr_farm, 'N') ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N') ie_recem_nato,
							x.dt_suspensao
					from	prescr_material x,
							prescr_mat_hor h,
							prescr_medica a
					where	x.nr_prescricao = a.nr_prescricao
					and 	x.nr_prescricao = h.nr_prescricao
					and		x.nr_Sequencia	= h.nr_Seq_material
					and		a.cd_pessoa_fisica = current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10)		
					and		a.nr_prescricao	between current_setting('plt_gerar_horarios_pck.nr_prescr_inicial_w')::bigint	and current_setting('plt_gerar_horarios_pck.nr_prescr_final_w')::bigint
					and		a.dt_validade_prescr	between dt_validade_limite_p	and dt_fim_w	
					and		x.ie_agrupador = 8
					and		((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'S') or
							((current_setting('plt_gerar_horarios_pck.ie_regra_incl_sne_w')::char(1) = 'R') and (adep_obter_regra_inclusao(	'SNE',
																							wheb_usuario_pck.get_cd_estabelecimento, 
																							wheb_usuario_pck.get_cd_setor_atendimento, 
																							wheb_usuario_pck.get_cd_perfil, 
																							x.cd_material, 
																							null, 
																							null, 
																							null,
																							a.cd_setor_Atendimento,
																							null,
																							null, 
																							null) = 'S')))
					and		PLT_Gerar_Horarios_PCK.OBTER_SE_MOSTRA_REP_INTER(a.ie_motivo_prescricao) = 'S'
					and		coalesce(h.ie_situacao,'A') = 'A'
					and		((coalesce(h.ie_horario_especial,'N') = 'N') or (h.dt_fim_horario IS NOT NULL AND h.dt_fim_horario::text <> ''))
					group by
							a.nr_prescricao,
							x.nr_sequencia,
							coalesce(x.ie_suspenso,'N'),
							a.dt_liberacao_medico,
							a.dt_liberacao,
							a.dt_liberacao_farmacia,
							h.dt_horario,
							x.cd_material,
							x.cd_intervalo,
							coalesce(substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,CASE WHEN a.ie_lib_farm='S' THEN a.dt_liberacao_farmacia  ELSE clock_timestamp() END ),1,1),'X'),
							coalesce(CASE WHEN x.QT_VEL_INFUSAO=0 THEN  null  ELSE x.QT_VEL_INFUSAO END , x.qt_dose),
							x.ie_acm,
							x.ie_se_necessario,
							h.dt_inicio_horario,
							h.dt_fim_horario,
							h.dt_suspensao,
							h.dt_interrupcao,
							h.ie_dose_especial,
							h.nr_seq_processo,
							h.nr_seq_area_prep,
							CASE WHEN coalesce(obter_se_mostra_adic(14),'S')='N' THEN null  ELSE substr(adep_obter_inf_dil_obs(a.nr_prescricao,h.nr_seq_material),1,2000) END ,
							a.ie_prescr_farm,
							coalesce(a.ie_recem_nato, 'N'),
							x.dt_suspensao) alias48
		where	plt_obter_se_item_periodo(	dt_validade_limite_p,		dt_fim_w,				get_ie_plano_por_setor,		dt_plano_p,			dt_horario,
											current_setting('plt_gerar_horarios_pck.dt_horario_inicio_sinc_w')::timestamp,	current_setting('plt_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp,	ie_prescr_usuario_p,		nm_usuario_p,		ie_estendidos_p,
											dt_referencia_p,			ie_edicao_p,			ie_exibir_hor_suspensos_p,	dt_suspensao,		'SNE',
											nr_sequencia,				nr_prescricao,			'S') = 'S'
		group by
				nr_prescricao,
				nr_sequencia,
				ie_status_solucao,
				ie_lib_pend_rep,
				dt_horario,
				cd_material,
				cd_intervalo,
				qt_vel_infusao,
				ds_prescricao,
				ie_status,
				ds_dil_obs,
				ie_prescr_farm,
				ie_recem_nato;
	end if;
	
	if (get_ie_SNE_por_horario = 'N') then
		loop
		fetch c01 into	nr_prescricao_w,
				nr_seq_solucao_w,
				ie_status_horario_w,
				current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
				current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp,
				cd_material_w,
				cd_intervalo_w,
				qt_dose_w,
				ds_prescricao_w,
				ie_status_w,
				ds_dil_obs_w,
				ie_interv_farm_w,
				ie_recem_nato_w;				
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then		
				ds_comando_update_w	:=	' update w_rep_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ds_diluicao = :ds_dil_obs '||
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and nvl(ie_pendente_liberacao,''X'') = :ie_pendente_liberacao ' ||
								' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
								' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
								' and cd_item = :cd_item ' ||
								' and nvl(ie_status_item,''N'') = :ie_status ' ||
								' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
								' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
								' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ' ||
								' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm' ||
								' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';								
							
				CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
											'ds_dil_obs=' ||ds_dil_obs_w || ds_sep_bv_w || 
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
											'ie_tipo=SNE' || ds_sep_bv_w ||
											'ie_pendente_liberacao=' || current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15) || ds_sep_bv_w ||								
											'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w ||
											'cd_item=' || to_char(cd_material_w) || ds_sep_bv_w ||
											'ie_status=' || to_char(ie_status_w) || ds_sep_bv_w ||
											'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
											'qt_item=' || to_char(qt_dose_w) || ds_sep_bv_w ||
											'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w ||
											'ie_interv_farm=' || ie_interv_farm_w || ds_sep_bv_w||
											'ie_recem_nato=' || ie_recem_nato_w || ds_sep_bv_w);	
				
			end if;
			end;
		end loop;
		close c01;
	else
		loop
		fetch c02 into	nr_prescricao_w,
				nr_seq_solucao_w,
				ie_status_horario_w,
				current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15),
				current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp,
				cd_material_w,
				cd_intervalo_w,
				qt_dose_w,
				ds_prescricao_w,
				ie_status_w,
				ds_dil_obs_w,
				ie_interv_farm_w,
				ie_recem_nato_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			
			if (ie_status_w	= 'W') then
			
				ie_status_horario_w	:= ie_status_w;
			
			end if;
			
			nr_horario_w := plt_gerar_horarios_pck.get_posicao_horario( current_setting('plt_gerar_horarios_pck.dt_horario_w')::timestamp );
			
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then		
				ds_comando_update_w	:=	' update w_rep_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao),' ||
								' ds_diluicao = :ds_dil_obs '||
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and nvl(ie_pendente_liberacao,''X'') = :ie_pendente_liberacao ' ||
								' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
								' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
								' and cd_item = :cd_item ' ||
								' and nvl(ie_status_item,''N'') = :ie_status ' ||
								' and nvl(cd_intervalo,0) = nvl(:cd_intervalo,0) ' ||
								' and nvl(qt_item,0) = nvl(:qt_item,0) ' ||
								' and ((ds_prescricao = :ds_prescricao) or (ds_prescricao is null)) ' ||
								' and nvl(ie_interv_farm, ''N'') = :ie_interv_farm' ||
								' and nvl(ie_item_rn, ''N'') = :ie_recem_nato ';
							
				CALL exec_sql_dinamico_bv('PLT', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w ||
											'ds_dil_obs=' ||ds_dil_obs_w || ds_sep_bv_w || 
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
											'ie_tipo=SNE' || ds_sep_bv_w ||
											'ie_pendente_liberacao=' || current_setting('plt_gerar_horarios_pck.ie_lib_pend_rep_w')::varchar(15) || ds_sep_bv_w ||								
											'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w ||
											'cd_item=' || to_char(cd_material_w) || ds_sep_bv_w ||
											'ie_status=' || to_char(ie_status_w) || ds_sep_bv_w ||
											'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
											'qt_item=' || to_char(qt_dose_w) || ds_sep_bv_w ||
											'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w ||
											'ie_interv_farm=' || ie_interv_farm_w || ds_sep_bv_w||
											'ie_recem_nato=' || ie_recem_nato_w || ds_sep_bv_w);
			end if;
			end;
		end loop;
		close c02;
	end if;

	CALL Atualizar_plt_controle(nm_usuario_p, nr_atendimento_p, current_setting('plt_gerar_horarios_pck.cd_pessoa_fisica_w')::varchar(10), 'SNE', 'N',null);	
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_horarios_pck.plt_sincronizar_sne ( nm_usuario_p text, nr_atendimento_p bigint, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, ie_edicao_p text, ie_estendidos_p bigint, dt_referencia_p timestamp, ie_exibir_hor_suspensos_p text, dt_plano_p text) FROM PUBLIC;
