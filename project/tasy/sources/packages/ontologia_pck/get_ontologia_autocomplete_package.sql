-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ontologia_pck.get_ontologia_autocomplete (ds_term_p text, rownum_p bigint) RETURNS SETOF ONTOLOGIA_AUTOCOMPLETE_TABLE AS $body$
DECLARE

        ds_term_w	varchar(2000);

        row_w ontologia_autocomplete;

        c_term CURSOR FOR SELECT ds_id, ds_term, ds_fsn from ( 
            SELECT distinct a.ds_id, a.ds_term, b.ds_term ds_fsn 
            from snomed_descricao a, 
                 snomed_descricao b  
            where a.ds_conceptid = b.ds_conceptid 
            and b.ds_typeid = '900000000000003001'  /* FSN type */
            and a.ds_effectivetime = (select max(ds_effectivetime) from snomed_descricao where ds_id = a.ds_id) 
            and a.ie_situacao = '1' 
            and b.ds_effectivetime = (select max(ds_effectivetime) from snomed_descricao where ds_id = b.ds_id) 
            and b.ie_situacao = '1' 
            and upper(a.ds_term) like '%' || upper(ds_term_w) || '%' 
            order by length(a.ds_term) 
        ) alias7 LIMIT (rownum_p);
	
    	c_id CURSOR FOR SELECT ds_id, ds_term, ds_fsn from (
            SELECT distinct a.ds_id, a.ds_term, b.ds_term ds_fsn 
            from snomed_descricao a, 
                 snomed_descricao b  
            where a.ds_conceptid = b.ds_conceptid 
            and b.ds_typeid = '900000000000003001'  /* FSN type */
  
            and a.ds_effectivetime = (select max(ds_effectivetime) from snomed_descricao where ds_id = a.ds_id) 
            and a.ie_situacao = '1' 
            and b.ds_effectivetime = (select max(ds_effectivetime) from snomed_descricao where ds_id = b.ds_id) 
            and b.ie_situacao = '1' 
            and a.ds_id = ds_term_w
            order by length(a.ds_term) 
        ) alias5 LIMIT (rownum_p);

BEGIN
        ds_term_w := trim(both ds_term_p);
        if (substr(ds_term_w, 1, 1) = '%') then
            ds_term_w := substr(ds_term_w, 2);
        end if;

        if (substr(ds_term_w, length(ds_term_w)) = '%') then
            ds_term_w := substr(ds_term_w, 1, length(ds_term_w) - 1);
        end if;

        if (is_number(ds_term_w) > 0) then
            for c_id_w in c_id
            loop
              row_w.ds_id := c_id_w.ds_id;
              row_w.ds_term := c_id_w.ds_term;
              row_w.ds_fsn := c_id_w.ds_fsn;
              RETURN NEXT row_w;
            end loop;
        else
            for c_term_w in c_term
            loop
              row_w.ds_id := c_term_w.ds_id;
              row_w.ds_term := c_term_w.ds_term;
              row_w.ds_fsn := c_term_w.ds_fsn;
              RETURN NEXT row_w;
            end loop;
        end if;

        return;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ontologia_pck.get_ontologia_autocomplete (ds_term_p text, rownum_p bigint) FROM PUBLIC;
