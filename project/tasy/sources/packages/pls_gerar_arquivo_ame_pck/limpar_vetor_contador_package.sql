-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_arquivo_ame_pck.limpar_vetor_contador () AS $body$
BEGIN
tb_nr_seq_segurado_w.delete;
tb_nr_seq_titular_w.delete;
nr_indice_contador_w	:= 1;
end;
	
begin

	ds_sql_w := '';
	
	if (coalesce(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].ie_soma_valor_familia, 'N') = 'N') then
		ds_sql_w := ' 
		select	d.nr_sequencia																		nr_seq_segurado,
			f.cd_pessoa_fisica																	cd_pessoa_fisica,
			f.nm_pessoa_fisica																	nm_pessoa_fisica,
			k.cd_usuario_plano																	cd_usuario_plano,
			k.dt_validade_carteira																	dt_validade_carteira,
			d.dt_contratacao																	dt_contratacao,
			d.cd_matricula_estipulante																cd_matricula_estipulante,
			d.cd_matricula_familia																	cd_matricula_familia,
			decode(d.nr_seq_titular, null, ''Dependente'', ''Titular'')												titularidade,
			d.ie_titularidade																	ie_titularidade,
			d.nr_seq_titular																	nr_seq_titular,
			(select x.cd_usuario_plano from pls_segurado_carteira x where x.nr_seq_segurado = d.nr_seq_titular)							cd_titular_plano,
			(select y.nm_pessoa_fisica from pessoa_fisica y, pls_segurado x where x.cd_pessoa_fisica = y.cd_pessoa_fisica and x.nr_sequencia = d.nr_seq_titular)	ds_titular,
			f.dt_nascimento																		dt_nascimento,
			f.nr_identidade																		nr_identidade,
			f.nr_cpf																		nr_cpf,
			f.nr_cartao_nac_sus																	nr_cartao_nac_sus,
			f.nm_social																		nm_social,
			g.nr_sequencia																		cd_plano,
			g.ds_plano																		ds_plano,
			i.nm_tabela																		nm_tabela,
			g.ie_regulamentacao																	ie_regulamentacao,
			obter_valor_dominio(2157, g.ie_regulamentacao)														ds_regulamentacao,
			g.ie_segmentacao																	ie_segmentacao,
			obter_valor_dominio(1665, g.ie_segmentacao)														ds_segmentacao,
			g.nm_fantasia																		nm_fantasia,
			g.nr_protocolo_ans																	nr_protocolo_ans,
			d.nr_seq_contrato																	nr_seq_contrato,
			decode(h.cd_cgc_estipulante, null, ''PF'', ''PJ'')													estipulante,
			h.cd_cgc_estipulante																	cd_cgc_estipulante,
			(select ds_razao_social from pessoa_juridica where cd_cgc = h.cd_cgc_estipulante) as									ds_cgc_estipulante,
			h.cd_pf_estipulante																	cd_pf_estipulante,
			(select nm_pessoa_fisica from pessoa_fisica where cd_pessoa_fisica = h.cd_pf_estipulante) as								ds_pf_estipulante,
			h.cd_operadora_empresa																	cd_operadora_empresa,
			b.cd_cobranca																		cd_cobranca,
			b.ds_cobranca																		ds_cobranca,
			sum(b.vl_detalhe)																	vl_detalhe,
			c.qt_dependente																		qt_dependente
		from	pls_ame_lote_rem_arquivo a,
			pls_ame_lote_rem_valor_det b,
			pls_ame_lote_rem_valor c,
			pls_segurado d,
			pessoa_fisica f,
			pls_plano g,
			pls_contrato h,
			pls_tabela_preco i,
			pls_segurado_carteira k
		where	a.nr_sequencia			= c.nr_seq_lote_rem_arq 
		and	b.nr_seq_lote_rem_valor		= c.nr_sequencia
		and	d.nr_sequencia			= c.nr_seq_segurado
		and	d.cd_pessoa_fisica		= f.cd_pessoa_fisica
		and	d.nr_seq_plano			= g.nr_sequencia
		and	d.nr_seq_contrato		= h.nr_sequencia
		and	d.nr_seq_tabela			= i.nr_sequencia
		and	k.nr_seq_segurado		= d.nr_sequencia
		and	a.nr_sequencia			= ' || nr_seq_rem_arq_w || '
		group by 
			b.ds_cobranca,
			b.cd_cobranca,
			f.cd_pessoa_fisica,
			f.nm_pessoa_fisica,
			h.cd_operadora_empresa,
			g.nr_sequencia,
			g.ds_plano,
			f.nm_social,
			f.dt_nascimento,
			f.nr_identidade,
			f.nr_cpf,
			f.nr_cartao_nac_sus,
			d.ie_titularidade,
			d.nr_seq_titular,
			i.nm_tabela,
			g.ie_regulamentacao,
			h.cd_cgc_estipulante,
			h.cd_pf_estipulante,
			g.nm_fantasia,
			g.nr_protocolo_ans,
			d.nr_seq_contrato,
			g.ie_segmentacao,
			d.nr_sequencia,
			k.cd_usuario_plano,
			k.dt_validade_carteira,
			d.dt_contratacao,
			d.cd_matricula_estipulante,
			d.cd_matricula_familia,
			c.qt_dependente';
	elsif (coalesce(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].ie_soma_valor_familia, 'N') = 'S') then
		ds_sql_w := ' 
		select	d.nr_sequencia														nr_seq_segurado,
			f.cd_pessoa_fisica													cd_pessoa_fisica,
			f.nm_pessoa_fisica													nm_pessoa_fisica,
			k.cd_usuario_plano													cd_usuario_plano,
			k.dt_validade_carteira													dt_validade_carteira,
			d.dt_contratacao													dt_contratacao,
			d.cd_matricula_estipulante												cd_matricula_estipulante,
			d.cd_matricula_familia													cd_matricula_familia,
			''Titular''														titularidade,
			d.ie_titularidade													ie_titularidade,
			''''															nr_seq_titular,
			k.cd_usuario_plano													cd_titular_plano,
			f.nm_pessoa_fisica													ds_titular,
			f.dt_nascimento														dt_nascimento,
			f.nr_identidade														nr_identidade,
			f.nr_cpf														nr_cpf,
			f.nr_cartao_nac_sus													nr_cartao_nac_sus,
			f.nm_social														nm_social,
			g.nr_sequencia														cd_plano,
			g.ds_plano														ds_plano,
			i.nm_tabela														nm_tabela,
			g.ie_regulamentacao													ie_regulamentacao,
			obter_valor_dominio(2157, g.ie_regulamentacao)										ds_regulamentacao,
			g.ie_segmentacao													ie_segmentacao,
			obter_valor_dominio(1665, g.ie_segmentacao)										ds_segmentacao,
			g.nm_fantasia														nm_fantasia,
			g.nr_protocolo_ans													nr_protocolo_ans,
			d.nr_seq_contrato													nr_seq_contrato,
			decode(h.cd_cgc_estipulante, null, ''PF'', ''PJ'')									estipulante,
			h.cd_cgc_estipulante													cd_cgc_estipulante,
			(select ds_razao_social from pessoa_juridica where cd_cgc = h.cd_cgc_estipulante)					as ds_cgc_estipulante,
			h.cd_pf_estipulante													cd_pf_estipulante,
			(select nm_pessoa_fisica from pessoa_fisica where cd_pessoa_fisica = h.cd_pf_estipulante)				as ds_pf_estipulante,
			h.cd_operadora_empresa													cd_operadora_empresa,
			b.cd_cobranca														cd_cobranca,
			b.ds_cobranca														ds_cobranca,
			SUM(b.vl_detalhe)													vl_detalhe,
			sum(c.qt_dependente)													qt_dependente
		from	pls_ame_lote_rem_arquivo	a,
			pls_ame_lote_rem_valor_det	b,
			pls_ame_lote_rem_valor		c,
			pls_segurado			d,
			pessoa_fisica			f,
			pls_plano			g,
			pls_contrato			h,
			pls_tabela_preco		i,
			pls_segurado_carteira		k
		where	a.nr_sequencia		= c.nr_seq_lote_rem_arq
		and	c.nr_sequencia		=b.nr_seq_lote_rem_valor
		and	d.nr_sequencia		= nvl(c.nr_seq_titular, c.nr_seq_segurado)
		and	d.cd_pessoa_fisica	= f.cd_pessoa_fisica
		and	g.nr_sequencia		= d.nr_seq_plano
		and	h.nr_sequencia		= d.nr_seq_contrato
		and	i.nr_sequencia		= d.nr_seq_tabela
		and	d.nr_sequencia		= k.nr_seq_segurado
		and	a.nr_sequencia		= '|| nr_seq_rem_arq_w ||'
		group by 
			b.ds_cobranca,
			b.cd_cobranca,
			f.cd_pessoa_fisica,
			f.nm_pessoa_fisica,
			h.cd_operadora_empresa,
			g.nr_sequencia,
			g.ds_plano,
			f.nm_social,
			f.dt_nascimento,
			f.nr_identidade,
			d.ie_titularidade,
			f.nr_cpf,
			f.nr_cartao_nac_sus,
			i.nm_tabela,
			g.ie_regulamentacao,
			h.cd_cgc_estipulante,
			h.cd_pf_estipulante,
			g.nm_fantasia,
			g.nr_protocolo_ans,
			d.nr_seq_contrato,
			g.ie_segmentacao,
			d.nr_sequencia,
			k.cd_usuario_plano,
			k.dt_validade_carteira,
			d.dt_contratacao,
			d.cd_matricula_estipulante,
			d.cd_matricula_familia';
	end if;
	
	--Ordenacao

	ie_ordenou_w := false;
	for r_c04_w in c04(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].nr_sequencia) loop
		if	ie_ordenou_w then
			ds_sql_w := ds_sql_w || ',';
		else
			ds_sql_w := ds_sql_w || chr(13) || 'order by';
			ie_ordenou_w := true;
		end if;
		
		if (r_c04_w.cd_atributo = 2) then
			ds_sql_w := ds_sql_w || ' nr_seq_segurado';
		elsif (r_c04_w.cd_atributo = 3) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' cd_pessoa_fisica';
			else
				ds_sql_w := ds_sql_w || ' nm_pessoa_fisica';
			end if;
			ds_sql_w := ds_sql_w || ' ';
		elsif (r_c04_w.cd_atributo = 4) then
			ds_sql_w := ds_sql_w || ' cd_usuario_plano';
		elsif (r_c04_w.cd_atributo = 5) then
			ds_sql_w := ds_sql_w || ' dt_validade_carteira';
		elsif (r_c04_w.cd_atributo = 6) then
			ds_sql_w := ds_sql_w || ' dt_contratacao';
		elsif (r_c04_w.cd_atributo = 7) then
			ds_sql_w := ds_sql_w || ' cd_matricula_estipulante';
		elsif (r_c04_w.cd_atributo = 8) then
			ds_sql_w := ds_sql_w || ' cd_matricula_familia';
		elsif (r_c04_w.cd_atributo = 9) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' ie_titularidade';
			else
				ds_sql_w := ds_sql_w || ' titularidade';
			end if;
		elsif (r_c04_w.cd_atributo = 10) then
			ds_sql_w := ds_sql_w || ' dt_nascimento';
		elsif (r_c04_w.cd_atributo = 11) then
			ds_sql_w := ds_sql_w || ' nr_identidade';
		elsif (r_c04_w.cd_atributo = 12) then
			ds_sql_w := ds_sql_w || ' nr_cpf';
		elsif (r_c04_w.cd_atributo = 13) then
			ds_sql_w := ds_sql_w || ' nr_cartao_nac_sus';
		elsif (r_c04_w.cd_atributo = 14) then
			ds_sql_w := ds_sql_w || ' nm_social';
		elsif (r_c04_w.cd_atributo = 15) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' cd_plano';
			else
				ds_sql_w := ds_sql_w || ' ds_plano';
			end if;
		elsif (r_c04_w.cd_atributo = 16) then
			ds_sql_w := ds_sql_w || ' nm_tabela';
		elsif (r_c04_w.cd_atributo = 17) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' ie_regulamentacao';
			else
				ds_sql_w := ds_sql_w || ' ds_regulamentacao';
			end if;
		elsif (r_c04_w.cd_atributo = 18) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' ie_segmentacao';
			else
				ds_sql_w := ds_sql_w || ' ds_segmentacao';
			end if;
		elsif (r_c04_w.cd_atributo = 19) then
			ds_sql_w := ds_sql_w || ' nr_protocolo_ans';
		elsif (r_c04_w.cd_atributo = 20) then
			ds_sql_w := ds_sql_w || ' nm_fantasia';
		elsif (r_c04_w.cd_atributo = 21) then
			ds_sql_w := ds_sql_w || ' nr_seq_contrato';
		elsif (r_c04_w.cd_atributo = 22) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' nvl(cd_pf_estipulante, cd_cgc_estipulante)';
			else
				ds_sql_w := ds_sql_w || ' nvl(ds_pf_estipulante, ds_cgc_estipulante)';
			end if;
		elsif (r_c04_w.cd_atributo = 23) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' cd_pf_estipulante';
			else
				ds_sql_w := ds_sql_w || ' ds_pf_estipulante';
			end if;
		elsif (r_c04_w.cd_atributo = 24) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' cd_cgc_estipulante';
			else
				ds_sql_w := ds_sql_w || ' ds_cgc_estipulante';
			end if;
		elsif (r_c04_w.cd_atributo = 25) then
			ds_sql_w := ds_sql_w || ' cd_operadora_empresa';
		elsif (r_c04_w.cd_atributo = 26) then
			if (coalesce(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].ie_soma_valor_familia, 'N') = 'S') then
				if (r_c04_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' cd_pessoa_fisica';
				else
					ds_sql_w := ds_sql_w || ' nm_pessoa_fisica';
				end if;
			else
				if (r_c04_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' nvl(nr_seq_titular, cd_pessoa_fisica)';
				else
					ds_sql_w := ds_sql_w || ' nvl(ds_titular, nm_pessoa_fisica)';
				end if;
			end if;
		elsif (r_c04_w.cd_atributo = 27) then
			ds_sql_w := ds_sql_w || ' nr_seq_titular';
		elsif (r_c04_w.cd_atributo = 28) then
			ds_sql_w := ds_sql_w || ' cd_titular_plano';
		elsif (r_c04_w.cd_atributo = 29) then
			if (r_c04_w.cd_tipo_atributo = 'C') then
				ds_sql_w := ds_sql_w || ' cd_cobranca';
			else
				ds_sql_w := ds_sql_w || ' ds_cobranca';
			end if;
		elsif (r_c04_w.cd_atributo = 30) then
			ds_sql_w := ds_sql_w || ' vl_detalhe';
		elsif (r_c04_w.cd_atributo = 34) then
			ds_sql_w := ds_sql_w || ' qt_dependente';
		end if;
		
		if (r_c04_w.nr_ordem_resultado < 0) then
			ds_sql_w := ds_sql_w || ' desc';
		end if;
	end loop;
	
	CALL pls_gerar_arquivo_ame_pck.limpar_vetor_contador();
	
	open r_sql_w for EXECUTE ds_sql_w;
	loop
	fetch r_sql_w bulk collect into retorno_detalhe_t limit pls_util_cta_pck.qt_registro_transacao_w;
	exit when retorno_detalhe_t.count = 0;
	
		for i in retorno_detalhe_t.first .. retorno_detalhe_t.last loop
			
			PERFORM set_config('pls_gerar_arquivo_ame_pck.qt_nr_linha_detalhe_w', current_setting('pls_gerar_arquivo_ame_pck.qt_nr_linha_detalhe_w')::bigint + 1, false);
			PERFORM set_config('pls_gerar_arquivo_ame_pck.qt_nr_linha_w', current_setting('pls_gerar_arquivo_ame_pck.qt_nr_linha_w')::bigint + 1, false);
			PERFORM set_config('pls_gerar_arquivo_ame_pck.nr_linha_w', current_setting('pls_gerar_arquivo_ame_pck.nr_linha_w')::bigint + 1, false);
		
			ds_linha_w := '';
			
			tb_nr_seq_segurado_w(nr_indice_contador_w)	:= retorno_detalhe_t[i].nr_seq_segurado;
			tb_nr_seq_titular_w(nr_indice_contador_w)	:= coalesce(retorno_detalhe_t[i].nr_seq_titular, retorno_detalhe_t[i].nr_seq_segurado);
			nr_indice_contador_w 				:= nr_indice_contador_w + 1;

			for y in current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row.first .. current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row.last loop

				vl_atributo_w := null;
				if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ie_exibir_atributo = 'S') then
					if	((current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].nr_sequencia) = (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].nr_seq_banda)) then
						-- Nome do Atributo para mensagens de erro

						nm_atributo_w := obter_valor_dominio(9037, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo);
						
						-- ifs para coletar valores.

						if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 1) then
							vl_atributo_w := current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].vl_padrao;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 2) then
							vl_atributo_w := retorno_detalhe_t[i].nr_seq_segurado;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 3) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].cd_pessoa_fisica;
							else
								vl_atributo_w := retorno_detalhe_t[i].nm_pessoa_fisica;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 4) then
							vl_atributo_w := retorno_detalhe_t[i].cd_usuario_plano;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 5) then
							vl_atributo_w := to_char(retorno_detalhe_t[i].dt_validade_carteira, 'dd/mm/rrrr');
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 6) then
							vl_atributo_w := to_char(retorno_detalhe_t[i].dt_contratacao, 'dd/mm/rrrr');
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 7) then
							vl_atributo_w := retorno_detalhe_t[i].cd_matricula_estipulante;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 8) then
							vl_atributo_w := retorno_detalhe_t[i].cd_matricula_familia;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 9) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].ie_titularidade;
							else
								vl_atributo_w := retorno_detalhe_t[i].titularidade;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 10) then
							vl_atributo_w := to_char(retorno_detalhe_t[i].dt_nascimento, 'dd/mm/rrrr');
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 11) then
							vl_atributo_w := retorno_detalhe_t[i].nr_identidade;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 12) then
							vl_atributo_w := retorno_detalhe_t[i].nr_cpf;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 13) then
							vl_atributo_w := retorno_detalhe_t[i].nr_cartao_nac_sus;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 14) then
							vl_atributo_w := retorno_detalhe_t[i].nm_social;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 15) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].cd_plano;
							else
								vl_atributo_w := retorno_detalhe_t[i].ds_plano;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 16) then
							vl_atributo_w := retorno_detalhe_t[i].nm_tabela;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 17) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].ie_regulamentacao;
							else
								vl_atributo_w := retorno_detalhe_t[i].ds_regulamentacao;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 18) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].ie_segmentacao;
							else
								vl_atributo_w := retorno_detalhe_t[i].ds_segmentacao;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 19) then
							vl_atributo_w := retorno_detalhe_t[i].nr_protocolo_ans;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 20) then
							vl_atributo_w := retorno_detalhe_t[i].nm_fantasia;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 21) then
							vl_atributo_w := retorno_detalhe_t[i].nr_seq_contrato;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 22) then
							if (retorno_detalhe_t[i].estipulante = 'PF') then
								if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
									vl_atributo_w := retorno_detalhe_t[i].cd_pf_estipulante;
								else
									vl_atributo_w := retorno_detalhe_t[i].ds_pf_estipulante;
								end if;
							else
								if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
									vl_atributo_w := retorno_detalhe_t[i].cd_cgc_estipulante;
								else
									vl_atributo_w := retorno_detalhe_t[i].ds_cgc_estipulante;
								end if;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 23) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].cd_pf_estipulante;
							else
								vl_atributo_w := retorno_detalhe_t[i].ds_pf_estipulante;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 24) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].cd_cgc_estipulante;
							else
								vl_atributo_w := retorno_detalhe_t[i].ds_cgc_estipulante;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 25) then
							vl_atributo_w := retorno_detalhe_t[i].cd_operadora_empresa;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 26) then
							if (coalesce(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].ie_soma_valor_familia, 'N') = 'S') then
								if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
									vl_atributo_w := retorno_detalhe_t[i].cd_pessoa_fisica;
								else
									vl_atributo_w := retorno_detalhe_t[i].nm_pessoa_fisica;
								end if;
							else
								if (retorno_detalhe_t[i]coalesce(.nr_seq_titular::text, '') = '') then
									if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
										vl_atributo_w := retorno_detalhe_t[i].cd_pessoa_fisica;
									else
										vl_atributo_w := retorno_detalhe_t[i].nm_pessoa_fisica;
									end if;
								else
									if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
										vl_atributo_w := retorno_detalhe_t[i].nr_seq_titular;
									else
										vl_atributo_w := retorno_detalhe_t[i].ds_titular;
									end if;
									
								end if;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 27) then
							vl_atributo_w := retorno_detalhe_t[i].nr_seq_titular;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 28) then
							vl_atributo_w := retorno_detalhe_t[i].cd_titular_plano;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 29) then
							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_tipo_atributo = 'C') then
								vl_atributo_w := retorno_detalhe_t[i].cd_cobranca;
							else
								vl_atributo_w := retorno_detalhe_t[i].ds_cobranca;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 30) then
							vl_atributo_w := retorno_detalhe_t[i].vl_detalhe;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 31) then
							-- Arquivo - Numero da Linha

							vl_atributo_w := current_setting('pls_gerar_arquivo_ame_pck.nr_linha_w')::bigint;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 32) then
							-- Arquivo - Numero da Linha (Detalhe).

							vl_atributo_w := current_setting('pls_gerar_arquivo_ame_pck.qt_nr_linha_detalhe_w')::bigint;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 33) then
							ds_function_w := ' select (' || upper(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_function) || ') from dual where rownum = 1 ';
							
							valor_bind_w := sql_pck.bind_variable(':NR_SEQ_SEGURADO', retorno_detalhe_t[i].nr_seq_segurado, valor_bind_w);
							valor_bind_w := sql_pck.bind_variable(':CD_PESSOA_FISICA', retorno_detalhe_t[i].cd_pessoa_fisica, valor_bind_w);
							valor_bind_w := sql_pck.bind_variable(':NR_SEQ_REGRA_ARQ', current_setting('pls_gerar_arquivo_ame_pck.nr_seq_ame_regra_arq_w')::pls_ame_regra_arq.nr_sequencia%type, valor_bind_w);
							valor_bind_w := sql_pck.bind_variable(':NR_SEQ_LOTE', current_setting('pls_gerar_arquivo_ame_pck.nr_seq_lote_w')::pls_ame_lote_remessa.nr_sequencia%type, valor_bind_w);
							
							valor_bind_w := sql_pck.executa_sql_cursor(ds_function_w, valor_bind_w);
							
							fetch	cursor_w
							into	vl_atributo_w;
							
							if (cursor_w%ISOPEN) then
								close	cursor_w;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 34) then
							vl_atributo_w := retorno_detalhe_t[i].qt_dependente;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 35) then
							--Arquivo - Numero da linha (Beneficiario)

							vl_atributo_w	:= pls_gerar_arquivo_ame_pck.obter_numero_linha(retorno_detalhe_t[i].nr_seq_segurado, null);
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo = 36) then
							--Arquivo - Numero da linha (Familia)

							vl_atributo_w	:= pls_gerar_arquivo_ame_pck.obter_numero_linha(null, coalesce(retorno_detalhe_t[i].nr_seq_titular, retorno_detalhe_t[i].nr_seq_segurado));
						end if;
						
						-- Aplica mascara ao valor do atributo

						if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo in (5,6,10)) then
							-- Datas

							if ((vl_atributo_w IS NOT NULL AND vl_atributo_w::text <> '') and current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y](.ds_mascara IS NOT NULL AND .ds_mascara::text <> '')) then
							begin
								-- Aplica a mascara

								if (vl_atributo_w IS NOT NULL AND vl_atributo_w::text <> '') then
									vl_atributo_w := to_char(to_date(vl_atributo_w), current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara);
								end if;
							exception
								when others then
									CALL wheb_mensagem_pck.exibir_mensagem_abort('A ' || lower(obter_desc_expressao(292909)) || ' ''' || current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara
														|| ''' ' || chr(233) || ' ' || lower(obter_desc_expressao(796824)) || ' para o campo ''' || nm_atributo_w || ''' da regra');
							end;
							end if;
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_atributo in (30))then
							vl_atributo_w := replace(campo_mascara(vl_atributo_w, 2), '.', current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara);
						else
							-- Demais atributos

							if ((vl_atributo_w IS NOT NULL AND vl_atributo_w::text <> '') and current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y](.ds_mascara IS NOT NULL AND .ds_mascara::text <> '')) then
								-- Inicia variaveis

								--qt_tamanho_aux_w	:= regexp_count(pls_ame_regra_atrib_t(i).ds_mascara, '[A-Z,0-9]', 1, 'i');

								qt_tamanho_aux_w	:= length(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara) - coalesce(length(regexp_replace( current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara, '[A-Z,0-9]', null)), 0 );
								vl_atributo_aux_w	:= '';
								str			:= '';
								ind			:= 1;
								
								-- Preenche com caracteres para completar o tamanho do atributo

								if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y](.cd_caracter_complementar IS NOT NULL AND .cd_caracter_complementar::text <> '')) then
									if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ie_posicao_complementar = 'L') then
										vl_atributo_w := lpad(vl_atributo_w, qt_tamanho_aux_w, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_caracter_complementar);
									elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[i].ie_posicao_complementar = 'R') then
										vl_atributo_w := rpad(vl_atributo_w, qt_tamanho_aux_w, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_caracter_complementar);
									end if;
								end if;
								
								-- Aplica a mascara

								for j in 1..length(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara) loop
									str := substr(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ds_mascara, j, 1);
									if (regexp_like(str, '[A-Z,0-9]')) then
										vl_atributo_aux_w := vl_atributo_aux_w || substr(vl_atributo_w, ind, 1);
										ind := ind + 1;
									else
										vl_atributo_aux_w := vl_atributo_aux_w || str;
									end if;
								end loop;
								vl_atributo_w := vl_atributo_aux_w;
							end if;
						end if;
						
						-- Maiusculas e minusculas

						if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ie_letras_valor = 'U') then
							vl_atributo_w := upper(vl_atributo_w);
						elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ie_letras_valor = 'L') then
							vl_atributo_w := lower(vl_atributo_w);
						end if;
						
						-- Valor inicial fixo

						if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y](.vl_fixo_inicio IS NOT NULL AND .vl_fixo_inicio::text <> '')) then
							vl_atributo_w := current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].vl_fixo_inicio || vl_atributo_w;
						end if;
						
						-- Valor padrao caso nao tiver valor.

						if (coalesce(vl_atributo_w::text, '') = '') then
							begin
								vl_atributo_w := current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].vl_padrao;
							end;
						end if;
						
						-- busca separador se tiver no atributo.

						ie_separador_w := coalesce(current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_banda_t')::pls_ame_regra_banda_row[nr_banda_w].ie_separador, '');
							
						-- Ajusta ao tamanho do valor do atributo

						if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y](.qt_tamanho IS NOT NULL AND .qt_tamanho::text <> '')) then
							-- Se possui caracter e posicao, completa o valor do atributo

							if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y](.cd_caracter_complementar IS NOT NULL AND .cd_caracter_complementar::text <> '')) then
								if (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ie_posicao_complementar = 'L') then
									vl_atributo_w := lpad(coalesce(vl_atributo_w, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_caracter_complementar), current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].qt_tamanho, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_caracter_complementar);
								elsif (current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].ie_posicao_complementar = 'R') then
									vl_atributo_w := rpad(coalesce(vl_atributo_w, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_caracter_complementar), current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].qt_tamanho, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].cd_caracter_complementar);
								end if;
							end if;
							
							vl_atributo_w := substr(vl_atributo_w, 1, current_setting('pls_gerar_arquivo_ame_pck.pls_ame_regra_atrib_t')::pls_ame_regra_atrib_row[y].qt_tamanho);
						end if;
						
						if (length(ds_linha_w) > 0) then
							ds_linha_w := ds_linha_w || ie_separador_w || vl_atributo_w;
						else
							ds_linha_w := vl_atributo_w;
						end if;
						
					end if;
				end if;
			end loop;

			if (current_setting('pls_gerar_arquivo_ame_pck.ie_origem_w')::varchar(1) = 'H') then
				insert into pls_ame_export_arq(nr_seq_lote_rem_arquivo, ds_conteudo, nr_ordem, dt_atualizacao, nm_usuario) values (nr_seq_rem_arq_w, ds_linha_w, current_setting('pls_gerar_arquivo_ame_pck.nr_linha_w')::bigint, clock_timestamp(), current_setting('pls_gerar_arquivo_ame_pck.nm_usuario_w')::usuario.nm_usuario%type);
			elsif (current_setting('pls_gerar_arquivo_ame_pck.ie_origem_w')::varchar(1) = 'D') then
				utl_file.put_line(current_setting('pls_gerar_arquivo_ame_pck.arq_texto_w')::utl_file.file_type,ds_linha_w || chr(13));
				utl_file.fflush(current_setting('pls_gerar_arquivo_ame_pck.arq_texto_w')::utl_file.file_type);
			end if;
		end loop;	
	end loop;
	close r_sql_w;
	
	CALL pls_gerar_arquivo_ame_pck.limpar_vetor_contador();

END;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_arquivo_ame_pck.limpar_vetor_contador () FROM PUBLIC;
