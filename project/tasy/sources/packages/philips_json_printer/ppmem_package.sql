-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE philips_json_printer.ppmem (mem philips_json_value, indent bigint, buf INOUT text, spaces boolean) AS $body$
DECLARE

    str varchar(400) := '';

BEGIN
    buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck(philips_json_printer.tab(indent, spaces)) || philips_json_printer.getmemname(mem, spaces));
    case mem.get_type
      when 'number' then
        if (mem.get_number < 1 and mem.get_number > 0) then str := '0'; end if;
        if (mem.get_number < 0 and mem.get_number > -1) then
          str := '-0' || substr(to_char(mem.get_number, 'TM9', 'NLS_NUMERIC_CHARACTERS=''.,'''),2);
        else
          str := str || to_char(mem.get_number, 'TM9', 'NLS_NUMERIC_CHARACTERS=''.,''');
        end if;
        buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck(str));
      when 'string' then
        buf := philips_json_printer.ppstring(mem, buf);
      when 'bool' then
        if (mem.get_bool) then
          buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck('true'));
        else
          buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck('false'));
        end if;
      when 'null' then
        buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck('null'));
      when 'array' then
        buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck('['));
        buf := philips_json_printer.ppea(philips_json_list(mem), indent, buf, spaces);
        buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck(']'));
      when 'object' then
        buf := philips_json_printer.ppobj(philips_json(mem), indent, buf, spaces);
      else buf := philips_json_printer.add_buf(buf, philips_json_printer.llcheck(mem.get_type));
    end case;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE philips_json_printer.ppmem (mem philips_json_value, indent bigint, buf INOUT text, spaces boolean) FROM PUBLIC;
