-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION philips_json_printer.escapestring (str text) RETURNS varchar AS $body$
DECLARE

    sb varchar(32767) := '';
    buf varchar(40);
    ch varchar(1);/* unicode char */
BEGIN
    if (coalesce(str::text, '') = '') then return ''; end if;

    -- clear the cache if global parameters have been changed
    if current_setting('philips_json_printer.char_map_escape_solidus')::boolean <> current_setting('philips_json_printer.escape_solidus')::boolean or
       current_setting('philips_json_printer.char_map_ascii_output')::boolean   <> current_setting('philips_json_printer.ascii_output')::boolean
    then
       current_setting('philips_json_printer.char_map')::Tmap_char_string.delete;
       PERFORM set_config('philips_json_printer.char_map_escape_solidus', current_setting('philips_json_printer.escape_solidus')::boolean, false);
       PERFORM set_config('philips_json_printer.char_map_ascii_output', current_setting('philips_json_printer.ascii_output')::boolean, false);
    end if;

    for i in 1 .. length(str) loop
      ch := substr(str, i, 1 );

      begin
         -- it this char has already been processed, I have cached its escaped value
         buf:=current_setting('philips_json_printer.char_map')::Tmap_char_string(ch);
      exception when no_data_found then
         -- otherwise, i convert the value and add it to the cache
         buf := philips_json_printer.escapechar(ch);
         current_setting('philips_json_printer.char_map')::Tmap_char_string(ch) := buf;
      end;

      sb := sb || buf;
    end loop;
    return sb;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION philips_json_printer.escapestring (str text) FROM PUBLIC;
