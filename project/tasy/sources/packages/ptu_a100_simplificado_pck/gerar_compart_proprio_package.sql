-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
	-- Gerar compartilhamento de risco para beneficiarios proprios



CREATE OR REPLACE PROCEDURE ptu_a100_simplificado_pck.gerar_compart_proprio ( nr_seq_lote_p ptu_intercambio_lote_receb.nr_sequencia%type, cd_estabelecimento_p usuario.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type ) AS $body$
DECLARE

	
	nr_seq_congenere_w		pls_congenere.nr_sequencia%type;
	nr_seq_segurado_repasse_w	pls_segurado_repasse.nr_sequencia%type;
	qt_segurado_repasse_w		bigint;
	ie_gerar_repasse_w		varchar(1);
	
	C01 CURSOR FOR
		SELECT	*
		from	ptu_intercambio_benef_simp
		where	nr_seq_lote_receb = nr_seq_lote_p
		and	ie_proprio_recebido = 'P'
		and	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '')
		and	ie_status	= 'A';
	
	
BEGIN
	
	for r_c01_w in C01 loop
		begin
		nr_seq_congenere_w := pls_obter_cd_seq_congenere(r_c01_w.cd_unimed_destino, 'NR');
		
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_segurado_repasse_w
			from	pls_segurado_repasse
			where	nr_seq_segurado		= r_c01_w.nr_seq_segurado
			and	nr_seq_congenere	= nr_seq_congenere_w
			and	dt_repasse		= r_c01_w.dt_compartilhamento
			and	ie_tipo_compartilhamento = 2
			and	coalesce(dt_fim_repasse::text, '') = '';
			
			if (nr_seq_segurado_repasse_w IS NOT NULL AND nr_seq_segurado_repasse_w::text <> '') and (r_c01_w.dt_fim_compartilhamento IS NOT NULL AND r_c01_w.dt_fim_compartilhamento::text <> '') then
				update	pls_segurado_repasse
				set	dt_fim_repasse		= r_c01_w.dt_fim_compartilhamento,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_sequencia		= nr_seq_segurado_repasse_w;
				
				CALL ptu_a100_simplificado_pck.alterar_status_mov(r_c01_w.nr_sequencia, 'C', null, nm_usuario_p);
			elsif (coalesce(nr_seq_segurado_repasse_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_segurado_repasse_w
				from	pls_segurado_repasse
				where	nr_seq_segurado		= r_c01_w.nr_seq_segurado
				and	nr_seq_congenere	= nr_seq_congenere_w
				and	dt_repasse		<> r_c01_w.dt_compartilhamento
				and	ie_tipo_compartilhamento = 2
				and	coalesce(dt_fim_repasse::text, '') = '';
			
				if (nr_seq_segurado_repasse_w IS NOT NULL AND nr_seq_segurado_repasse_w::text <> '') then
					CALL ptu_a100_simplificado_pck.alterar_status_mov(r_c01_w.nr_sequencia, 'S', wheb_mensagem_pck.get_texto(1123079), nm_usuario_p);
				else
					ie_gerar_repasse_w	:= 'S';
				
					if	(r_c01_w.dt_compartilhamento IS NOT NULL AND r_c01_w.dt_compartilhamento::text <> '' AND r_c01_w.dt_fim_compartilhamento IS NOT NULL AND r_c01_w.dt_fim_compartilhamento::text <> '') then
						select 	count(1)
						into STRICT	qt_segurado_repasse_w
						from	pls_segurado_repasse
						where	ie_tipo_compartilhamento = 2
						and	nr_seq_congenere = nr_seq_congenere_w
						and	nr_seq_segurado = r_c01_w.nr_seq_segurado
						and	trunc(dt_repasse, 'dd') = trunc(r_c01_w.dt_compartilhamento, 'dd')
						and	trunc(dt_fim_repasse, 'dd') = trunc(r_c01_w.dt_fim_compartilhamento, 'dd');
						
						if (qt_segurado_repasse_w > 0) then
							ie_gerar_repasse_w := 'N';
						end if;
					end if;
				
					if (ie_gerar_repasse_w = 'S') then
						insert	into	pls_segurado_repasse(	nr_sequencia, nr_seq_segurado, cd_estabelecimento, dt_repasse, nr_seq_congenere,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_repasse,
								cd_cooperativa, dt_liberacao, nr_seq_congenere_atend, ie_tipo_compartilhamento,
								ie_tipo_repasse, nr_seq_interc_benef_simp )
							values (nextval('pls_segurado_repasse_seq'), r_c01_w.nr_seq_segurado, cd_estabelecimento_p , r_c01_w.dt_compartilhamento , nr_seq_congenere_w,
								clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, r_c01_w.dt_fim_compartilhamento,
								r_c01_w.cd_unimed, null, nr_seq_congenere_w, 2,
								'C', r_c01_w.nr_sequencia )
							returning nr_sequencia into nr_seq_segurado_repasse_w;
						
						begin
							CALL pls_liberar_repasse_seg(nr_seq_segurado_repasse_w, nm_usuario_p, 'N');
							CALL ptu_a100_simplificado_pck.alterar_status_mov(r_c01_w.nr_sequencia, 'C', null, nm_usuario_p);
						exception
						when others then
							delete	from	pls_segurado_repasse
							where	nr_sequencia	= nr_seq_segurado_repasse_w;
						end;
					end if;
				end if;
			end if;
		end if;
		
		end;
	end loop;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_a100_simplificado_pck.gerar_compart_proprio ( nr_seq_lote_p ptu_intercambio_lote_receb.nr_sequencia%type, cd_estabelecimento_p usuario.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type ) FROM PUBLIC;
