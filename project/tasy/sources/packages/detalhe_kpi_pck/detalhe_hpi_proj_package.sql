-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

		
--################################################################################################################################################
CREATE OR REPLACE FUNCTION detalhe_kpi_pck.detalhe_hpi_proj () RETURNS SETOF T_DETALHE AS $body$
DECLARE

	
	t_detalhe_row_w	t_detalhe_row;	

	c01 CURSOR FOR	
	SELECT	a.nr_sequencia,
		a.ds_titulo,
		campo_mascara_virgula(sum(coalesce(c.qt_hora_prev,0))) || ' (Hr. Plan) / ' ||
		campo_mascara_virgula(sum(coalesce(c.qt_hora_real,0))) || ' (Hr. Real) = HPI ' ||
		campo_mascara_virgula(round((sum(coalesce(c.qt_hora_prev,0)) / sum(coalesce(c.qt_hora_real,0)))::numeric,2)) hpi
	from	proj_projeto a,
		proj_cronograma b,
		proj_cron_etapa c
	where	a.nr_sequencia = b.nr_seq_proj
	and	b.nr_sequencia = c.nr_seq_cronograma
	and	(c.dt_fim_prev IS NOT NULL AND c.dt_fim_prev::text <> '')
	and	(c.dt_inicio_prev IS NOT NULL AND c.dt_inicio_prev::text <> '')
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	c.qt_hora_prev > 0
	and	c.pr_etapa = 100
	and	OBTER_DIAS_UTEIS_PERIODO(coalesce(c.dt_inicio_real,c.dt_inicio_prev),coalesce(c.dt_fim_real,clock_timestamp()) ,1) > 0
	and	coalesce(OBTER_DIAS_UTEIS_PERIODO(c.dt_inicio_prev,c.dt_fim_prev,1),1) > 0
	and	c.dt_fim_real between dt_ref_inicio_w and dt_ref_fim_w
	and	a.nr_seq_gerencia in (	SELECT	x.nr_sequencia
					from	gerencia_wheb x
					where	x.nr_seq_diretoria	= nr_seq_diretoria_w)
	and	not exists (	select  1
				from    proj_cron_etapa y 
				where   y.nr_seq_superior = c.nr_sequencia)
	group by a.nr_sequencia,
		a.ds_titulo
	
union

	select	a.nr_sequencia,
		a.ds_titulo,
		campo_mascara_virgula(sum(coalesce(c.qt_hora_prev,0))) || ' (Hr. Plan) / ' ||
		campo_mascara_virgula(sum(coalesce(c.qt_hora_real,0))) || ' (Hr. Real) = HPI ' ||
		campo_mascara_virgula(round((sum(coalesce(c.qt_hora_prev,0)) / sum(coalesce(c.qt_hora_real,0)))::numeric,2)) hpi
	from	proj_projeto a,
		proj_cronograma b,
		proj_cron_etapa c
	where	a.nr_sequencia = b.nr_seq_proj
	and	b.nr_sequencia = c.nr_seq_cronograma
	and	(c.dt_fim_prev IS NOT NULL AND c.dt_fim_prev::text <> '')
	and	(c.dt_inicio_prev IS NOT NULL AND c.dt_inicio_prev::text <> '')
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	c.qt_hora_prev > 0
	and	c.pr_etapa = 100
	and	OBTER_DIAS_UTEIS_PERIODO(coalesce(c.dt_inicio_real,c.dt_inicio_prev),coalesce(c.dt_fim_real,clock_timestamp()) ,1) > 0
	and	coalesce(OBTER_DIAS_UTEIS_PERIODO(c.dt_inicio_prev,c.dt_fim_prev,1),1) > 0
	and	c.dt_fim_real between dt_ref_inicio_w and dt_ref_fim_w
	and	a.nr_seq_gerencia = nr_seq_gerencia_w
	and	not exists (	select  1 
				from    proj_cron_etapa y 
				where   y.nr_seq_superior = c.nr_sequencia)
	group by a.nr_sequencia,
		a.ds_titulo
	
union

		select	a.nr_sequencia,
		a.ds_titulo,
		campo_mascara_virgula(sum(coalesce(c.qt_hora_prev,0))) || ' (Hr. Plan) / ' ||
		campo_mascara_virgula(sum(coalesce(c.qt_hora_real,0))) || ' (Hr. Real) = HPI ' ||
		campo_mascara_virgula(round((sum(coalesce(c.qt_hora_prev,0)) / sum(coalesce(c.qt_hora_real,0)))::numeric,2)) hpi
	from	proj_projeto a,
		proj_cronograma b,
		proj_cron_etapa c
	where	a.nr_sequencia = b.nr_seq_proj
	and	b.nr_sequencia = c.nr_seq_cronograma
	and	(c.dt_fim_prev IS NOT NULL AND c.dt_fim_prev::text <> '')
	and	(c.dt_inicio_prev IS NOT NULL AND c.dt_inicio_prev::text <> '')
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	c.qt_hora_prev > 0
	and	c.pr_etapa = 100
	and	OBTER_DIAS_UTEIS_PERIODO(coalesce(c.dt_inicio_real,c.dt_inicio_prev),coalesce(c.dt_fim_real,clock_timestamp()) ,1) > 0
	and	coalesce(OBTER_DIAS_UTEIS_PERIODO(c.dt_inicio_prev,c.dt_fim_prev,1),1) > 0
	and	c.dt_fim_real between dt_ref_inicio_w and dt_ref_fim_w
	and	a.nr_seq_gerencia in (	select	max(g.nr_seq_gerencia)
					from	grupo_desenvolvimento g
					where	g.nr_sequencia = nr_seq_grupo_w)
	and	not exists (	select  1 
				from    proj_cron_etapa y 
				where   y.nr_seq_superior = c.nr_sequencia)
	group by a.nr_sequencia,
		a.ds_titulo
	
union

	select	a.nr_sequencia,
		a.ds_titulo,
		campo_mascara_virgula(sum(coalesce(c.qt_hora_prev,0))) || ' (Hr. Plan) / ' ||
		campo_mascara_virgula(sum(coalesce(c.qt_hora_real,0))) || ' (Hr. Real) = HPI ' ||
		campo_mascara_virgula(round((sum(coalesce(c.qt_hora_prev,0)) / sum(coalesce(c.qt_hora_real,0)))::numeric,2)) hpi
	from	proj_projeto a,
		proj_cronograma b,
		proj_cron_etapa c
	where	a.nr_sequencia = b.nr_seq_proj
	and	b.nr_sequencia = c.nr_seq_cronograma
	and	(c.dt_fim_prev IS NOT NULL AND c.dt_fim_prev::text <> '')
	and	(c.dt_inicio_prev IS NOT NULL AND c.dt_inicio_prev::text <> '')
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	c.qt_hora_prev > 0
	and	c.pr_etapa = 100
	and	OBTER_DIAS_UTEIS_PERIODO(coalesce(c.dt_inicio_real,c.dt_inicio_prev),coalesce(c.dt_fim_real,clock_timestamp()) ,1) > 0
	and	coalesce(OBTER_DIAS_UTEIS_PERIODO(c.dt_inicio_prev,c.dt_fim_prev,1),1) > 0
	and	c.dt_fim_real between dt_ref_inicio_w and dt_ref_fim_w
	and	a.nr_seq_gerencia in (	select	g.nr_seq_gerencia
					from	grupo_desenvolvimento g,
						usuario_grupo_des u,
						usuario x
					where	g.nr_sequencia 		= u.nr_seq_grupo
					and	u.nm_usuario_grupo 	= x.nm_usuario
					and	x.cd_pessoa_fisica 	= cd_pessoa_fisica_w)
	and	not exists (	select  1 
				from    proj_cron_etapa y 
				where   y.nr_seq_superior = c.nr_sequencia)
	group by a.nr_sequencia,
		a.ds_titulo;	
		
	c01_w	c01%rowtype;	
	
	
BEGIN
	
	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
				
		t_detalhe_row_w.identificador	:= c01_w.nr_sequencia;
		t_detalhe_row_w.descricao	:= c01_w.ds_titulo;		
		t_detalhe_row_w.detalhe		:= c01_w.hpi;	

		RETURN NEXT t_detalhe_row_w;		
	
	end loop;
	close C01;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION detalhe_kpi_pck.detalhe_hpi_proj () FROM PUBLIC;
