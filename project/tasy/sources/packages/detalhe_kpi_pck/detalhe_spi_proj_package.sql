-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
--################################################################################################################################################
CREATE OR REPLACE FUNCTION detalhe_kpi_pck.detalhe_spi_proj () RETURNS SETOF T_DETALHE AS $body$
DECLARE

	
	t_detalhe_row_w		t_detalhe_row;	
	dt_referencia_spi_w	timestamp;

	c01 CURSOR FOR	
	SELECT	y.nr_sequencia,
		y.DS_TITULO,
		((x.qt_hora_prev*x.pr_real/100) || ' (EV) / ' ||
		 (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100) || ' (PV) = SPI ' ||
		 campo_mascara_virgula(dividir((x.qt_hora_prev*x.pr_real/100), (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100)))) spi
	from    dashboard_pmo_proj_graf x,
		proj_projeto y,
		arm_project z
	where   x.nr_seq_proj = y.nr_sequencia
	and 	z.nr_sequencia  = y.nr_seq_arm_proj
	and	coalesce(y.dt_cancelamento::text, '') = ''
	and 	trunc(x.dt_referencia,'dd') = dt_referencia_spi_w
	and 	y.nr_seq_programa not in (231, 355, 357, 380, 382) -- quality programs
	and	y.nr_seq_gerencia in (SELECT	x.nr_sequencia
			from	gerencia_wheb x
			where	x.nr_seq_diretoria = nr_seq_diretoria_w)
	
union

	select	y.nr_sequencia,
		y.DS_TITULO,
		((x.qt_hora_prev*x.pr_real/100) || ' (EV) / ' || 
		 (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100) || ' (PV) = SPI ' ||
		 campo_mascara_virgula(dividir((x.qt_hora_prev*x.pr_real/100), (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100)))) spi
	from    dashboard_pmo_proj_graf x,
		proj_projeto y,
		arm_project z
	where   x.nr_seq_proj = y.nr_sequencia
	and 	z.nr_sequencia  = y.nr_seq_arm_proj
	and	coalesce(y.dt_cancelamento::text, '') = ''
	and 	trunc(x.dt_referencia,'dd') = dt_referencia_spi_w
	and 	y.nr_seq_programa not in (231, 355, 357, 380, 382) -- quality programs
	and	y.nr_seq_gerencia = nr_seq_gerencia_w
	
union

	select	y.nr_sequencia,
		y.DS_TITULO,
		((x.qt_hora_prev*x.pr_real/100) || ' (EV) / ' || 
		 (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100) || ' (PV) = SPI ' ||
		 campo_mascara_virgula(dividir((x.qt_hora_prev*x.pr_real/100), (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100)))) spi
	from    dashboard_pmo_proj_graf x,
		proj_projeto y,
		arm_project z
	where   x.nr_seq_proj = y.nr_sequencia
	and 	z.nr_sequencia  = y.nr_seq_arm_proj
	and	coalesce(y.dt_cancelamento::text, '') = ''
	and 	trunc(x.dt_referencia,'dd') = dt_referencia_spi_w
	and 	y.nr_seq_programa not in (231, 355, 357, 380, 382) -- quality programs
	and	y.nr_seq_gerencia = (
			select	max(g.nr_seq_gerencia)
			from	grupo_desenvolvimento g
			where	g.nr_sequencia = nr_seq_grupo_w)
	
union

	select	y.nr_sequencia,
		y.DS_TITULO,
		((x.qt_hora_prev*x.pr_real/100) || ' (EV) / ' || 
		 (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100) || ' (PV) = SPI ' ||
		 campo_mascara_virgula(dividir((x.qt_hora_prev*x.pr_real/100), (CASE WHEN x.qt_hora_prev*x.pr_prev=0 THEN 1  ELSE x.qt_hora_prev*x.pr_prev END /100)))) spi
	from    dashboard_pmo_proj_graf x,
		proj_projeto y,
		arm_project z
	where   x.nr_seq_proj = y.nr_sequencia
	and 	z.nr_sequencia  = y.nr_seq_arm_proj
	and	coalesce(y.dt_cancelamento::text, '') = ''
	and 	trunc(x.dt_referencia,'dd') = dt_referencia_spi_w
	and 	y.nr_seq_programa not in (231, 355, 357, 380, 382) -- quality programs
	and	y.nr_seq_gerencia in (
			select	g.nr_seq_gerencia
			from	grupo_desenvolvimento g,
				usuario_grupo_des u,
				usuario x
			where	g.nr_sequencia 		= u.nr_seq_grupo
			and	u.nm_usuario_grupo 	= x.nm_usuario
			and	x.cd_pessoa_fisica 	= cd_pessoa_fisica_w);
			
	c01_w	c01%rowtype;	
	
	
BEGIN
	
	if (trunc(current_setting('detalhe_kpi_pck.dt_ref_inicio_w')::timestamp,'month') = trunc(clock_timestamp(),'month')) then
		dt_referencia_spi_w := clock_timestamp();
	elsif (trunc(current_setting('detalhe_kpi_pck.dt_ref_inicio_w')::timestamp,'month') < trunc(clock_timestamp(),'month')) then
		dt_referencia_spi_w := pkg_date_utils.end_of(last_day(current_setting('detalhe_kpi_pck.dt_ref_inicio_w')::timestamp),'DAY');	
	end if;	
	
	dt_referencia_spi_w := trunc(dt_referencia_spi_w,'dd');
	
	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
				
		t_detalhe_row_w.identificador	:= c01_w.nr_sequencia;
		t_detalhe_row_w.descricao	:= c01_w.ds_titulo;		
		t_detalhe_row_w.detalhe		:= c01_w.spi;

		RETURN NEXT t_detalhe_row_w;
		
	end loop;
	close C01;
	
	END;	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION detalhe_kpi_pck.detalhe_spi_proj () FROM PUBLIC;
