-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_cta_val_pck.gerencia_selecao ( nr_id_transacao_p pls_rp_cta_selecao.nr_id_transacao%type, nr_seq_conta_p dbms_sql.number_table, nr_seq_conta_proc_p dbms_sql.number_table, nr_seq_selecao_p dbms_sql.clob_table, ie_valido_p pls_rp_cta_selecao.ie_valido%type, nm_usuario_p usuario.nm_usuario%type, ie_acao_p text, dados_filtro_p dados_filtro) AS $body$
DECLARE


resultado_conversao_table_w dados_table_selecao_val;

tb_atualizar_seqs_w	dbms_sql.number_table;
tb_atualizar_ie_val_w	dbms_sql.varchar2_table;

tb_gravar_conta_w	dbms_sql.number_table;
tb_gravar_proc_w	dbms_sql.number_table;

nr_idx_atual_w		integer;
nr_idx_gravar_w		integer;
qt_cnt_w 		integer := pls_cta_consistir_pck.qt_registro_transacao_w;

BEGIN

-- Deve ter informacao da transacao para executar alguma alteracao.

if (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '') then
		
	-- Quando for filtros deve verificar se e exececao para decidir se insere ou atualiza.

	if (ie_acao_p = 'F') then
			
		-- Inicializa as listas para que nao seja processados dados que possam ter ficado em memoria.

		tb_atualizar_seqs_w.delete;
		tb_atualizar_ie_val_w.delete;
		tb_gravar_conta_w.delete;
		tb_gravar_proc_w.delete;
		
		-- Zerar os indices das listas de insercao e atualizacao.

		nr_idx_atual_w := 0;
		nr_idx_gravar_w := 0;
		
		-- verifica se tem registros no vetor de selecao

		if (nr_seq_selecao_p.count > 0) then

			-- Varrer os registros das listas passadas para verficar se ira inserir ou atualizar os registros.

			for i in nr_seq_selecao_p.first .. nr_seq_selecao_p.last loop
				
				-- Se tiver informacao das sequencias do item ou dos filhos entao deve atualizar.

				if ((nr_seq_selecao_p(i) IS NOT NULL AND (nr_seq_selecao_p(i))::text <> '') or nr_seq_selecao_p(i) <> '') then
					
					-- faz a conversao das sequencias separadas por virgulas para tabelas numericas

					resultado_conversao_table_w := converte_lista_selecao(	nr_seq_selecao_p(i),
												ie_valido_p,
												tb_atualizar_seqs_w,
												tb_atualizar_ie_val_w,
												nr_idx_atual_w);
					-- joga para as variaveis que serao utilizadas para a atualizacao

					tb_atualizar_seqs_w	:= resultado_conversao_table_w.nr_seq_selecao;
					tb_atualizar_ie_val_w	:= resultado_conversao_table_w.ie_valido;
					
					-- se atingiu a quantidade de registros manda para o banco

					if (nr_idx_atual_w >= qt_cnt_w) then
					
						CALL CALL pls_tipos_cta_val_pck.atualizar_lista(tb_atualizar_seqs_w, tb_atualizar_ie_val_w, nm_usuario_p);
						-- reinicializa as variaveis

						tb_atualizar_seqs_w.delete;
						tb_atualizar_ie_val_w.delete;
						nr_idx_atual_w := 0;
					end if;
					
				-- Se nao ?eum novo registro e este deve ser inserido.

				else
					-- Inserir um novo registro.

					tb_gravar_conta_w(nr_idx_gravar_w)	:= nr_seq_conta_p(i);
					tb_gravar_proc_w(nr_idx_gravar_w)	:= nr_seq_conta_proc_p(i);
					
					-- se atingiu a quantidade de registros manda para o banco

					if (nr_idx_atual_w >= qt_cnt_w) then
						CALL gravar_lista(	nr_id_transacao_p, tb_gravar_conta_w, tb_gravar_proc_w,
								ie_valido_p, nm_usuario_p, dados_filtro_p);
						
						tb_gravar_conta_w.delete;
						tb_gravar_proc_w.delete;
						nr_idx_gravar_w := 0;
					else
						-- Incrementar o indice.

						nr_idx_gravar_w := nr_idx_gravar_w + 1;
					end if;
				end if;
			end loop;
		end if;
		
		-- Se tiver algum registro para atualizar entao manda eles pro banco.

		CALL CALL pls_tipos_cta_val_pck.atualizar_lista(tb_atualizar_seqs_w, tb_atualizar_ie_val_w, nm_usuario_p);
		tb_atualizar_seqs_w.delete;
		tb_atualizar_ie_val_w.delete;
		nr_idx_atual_w := 0;
		
		-- Se tiver algum registro para gravar entao manda ele pro banco.

		CALL gravar_lista(	nr_id_transacao_p, tb_gravar_conta_w, tb_gravar_proc_w,
				ie_valido_p, nm_usuario_p, dados_filtro_p);
		tb_gravar_conta_w.delete;
		tb_gravar_proc_w.delete;
		nr_idx_gravar_w := 0;
		
	-- Quando for os filtros padroes ( SEM UTILIZAR FILTROS) entao se pode inserir na tabela de selecao.

	elsif (ie_acao_p = 'FP') then
		
		CALL gravar_lista(	nr_id_transacao_p, nr_seq_conta_p, nr_seq_conta_proc_p,
				ie_valido_p, nm_usuario_p, dados_filtro_p);
		
	-- Quando for para limpar os registros invalidos entao vai la e manda eles pro espaco.

	elsif (ie_acao_p = 'LI') then
	
		CALL CALL CALL CALL CALL CALL pls_tipos_cta_val_pck.limpar_invalidos(nr_id_transacao_p);
		
	-- Quando for para limpar todos os registros

	elsif (ie_acao_p = 'LT') then
	
		CALL pls_tipos_cta_val_pck.limpar_tudo(nr_id_transacao_p);
	end if;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_cta_val_pck.gerencia_selecao ( nr_id_transacao_p pls_rp_cta_selecao.nr_id_transacao%type, nr_seq_conta_p dbms_sql.number_table, nr_seq_conta_proc_p dbms_sql.number_table, nr_seq_selecao_p dbms_sql.clob_table, ie_valido_p pls_rp_cta_selecao.ie_valido%type, nm_usuario_p usuario.nm_usuario%type, ie_acao_p text, dados_filtro_p dados_filtro) FROM PUBLIC;
