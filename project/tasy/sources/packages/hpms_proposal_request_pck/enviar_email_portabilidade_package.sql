-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE hpms_proposal_request_pck.enviar_email_portabilidade ( nr_seq_lead_p pls_solicitacao_comercial.nr_sequencia%type, ie_acao_p pls_solic_prop_regra_email.ie_acao_envio%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ds_remetente_w		varchar(255);
ds_mensagem_w		pls_solic_prop_regra_email.ds_email%type;
ds_assunto_w		pls_solic_prop_regra_email.ds_assunto%type;
nr_seq_email_w		pls_email.nr_sequencia%type;
nr_seq_anexo_w		pls_email_anexo.nr_sequencia%type;
ds_valor_parametro_w	varchar(255);
nr_protocolo_atend_w	pls_protocolo_atendimento.nr_protocolo%type;
dt_criacao_w		pls_proposta_online.dt_criacao%type;

C01 CURSOR(	nr_seq_lead_pc 	pls_solicitacao_comercial.nr_sequencia%type) FOR
	SELECT cd_estabelecimento, nr_seq_contrato, ds_email
	from pls_solicitacao_comercial
	where nr_sequencia = nr_seq_lead_pc;

C02 CURSOR(	ie_acao_envio_pc	text,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	nr_sequencia
	from	pls_solic_prop_regra_email
	where	cd_estabelecimento = cd_estabelecimento_pc
	and	ie_acao_envio = ie_acao_envio_pc;

C03 CURSOR(nr_seq_regra_pc pls_solic_prop_regra_email.nr_sequencia%type)FOR
	SELECT	cd_classif_relat,
		cd_relatorio,
		ds_arquivo
	from	pls_prop_regra_email_anexo
	where	nr_seq_regra = nr_seq_regra_pc;

C04 CURSOR(	cd_classif_relat_pc relatorio.cd_classif_relat%type,
		cd_relatorio_pc relatorio.cd_relatorio%type)FOR
	SELECT	b.cd_parametro,
		b.ie_tipo_atributo
	from	relatorio a,
		relatorio_parametro b
	where	a.nr_sequencia	= b.nr_seq_relatorio
	and	a.cd_classif_relat = cd_classif_relat_pc
	and	a.cd_relatorio	= cd_relatorio_pc;

BEGIN

for r_c01_w in C01(nr_seq_lead_p) loop

	ds_remetente_w	:= Obter_Valor_Param_Usuario(1395, 2, Obter_Perfil_Ativo, nm_usuario_p, r_c01_w.cd_estabelecimento);

	if	(r_c01_w.ds_email IS NOT NULL AND r_c01_w.ds_email::text <> '' AND ds_remetente_w IS NOT NULL AND ds_remetente_w::text <> '') then
		for r_c02_w in C02(ie_acao_p, r_c01_w.cd_estabelecimento) loop
			begin
			select	ds_email,
				ds_assunto
			into STRICT	ds_mensagem_w,
				ds_assunto_w
			from	pls_solic_prop_regra_email
			where	nr_sequencia = r_c02_w.nr_sequencia;

      begin
        select	nr_protocolo
        into STRICT	nr_protocolo_atend_w
        from	pls_protocolo_atendimento
        where	nr_seq_solicitacao_comercial = nr_seq_lead_p;
      exception
      when others then
        nr_protocolo_atend_w	:= '';
      end;

			select	dt_solicitacao
			into STRICT	dt_criacao_w
			from	pls_solicitacao_comercial
			where	nr_sequencia = nr_seq_lead_p;

			ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@PROTOCOLO_ATENDIMENTO', to_char(nr_protocolo_atend_w)), 1, 4000);
			ds_mensagem_w	:= substr(replace(ds_mensagem_w, '@DT_CRIACAO_DDMMYYYY', to_char(dt_criacao_w, 'dd/mm/rrrr') ), 1, 4000);

			insert	into pls_email(nr_sequencia, cd_estabelecimento, nm_usuario,
				dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec,
				ie_tipo_mensagem, ie_status, ie_origem,
				ds_remetente, ds_mensagem, ds_destinatario,
				ds_assunto, nr_seq_solicitacao_comercial)
			values (nextval('pls_email_seq'), r_c01_w.cd_estabelecimento, nm_usuario_p,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				5, 'P', 6,
				ds_remetente_w, ds_mensagem_w, r_c01_w.ds_email,
				ds_assunto_w, nr_seq_lead_p) returning nr_sequencia into nr_seq_email_w;
			end;

			for r_c03_w in C03(r_c02_w.nr_sequencia) loop
					begin

					insert into pls_email_anexo(
								nr_sequencia,
								nr_seq_email,
								nm_usuario,
								nm_usuario_nrec,
								dt_atualizacao,
								dt_atualizacao_nrec,
								cd_classif_relat,
								cd_relatorio,
								ds_arquivo,
								ie_tipo_anexo )
					values (			nextval('pls_email_anexo_seq'),
								nr_seq_email_w,
								nm_usuario_p,
								nm_usuario_p,
								clock_timestamp(),
								clock_timestamp(),
								r_c03_w.cd_classif_relat,
								r_c03_w.cd_relatorio,
								r_c03_w.ds_arquivo,
								CASE WHEN coalesce(r_c03_w.ds_arquivo::text, '') = '' THEN 'R'  ELSE 'A' END
								) returning nr_sequencia into nr_seq_anexo_w;

					if (r_c03_w.cd_relatorio IS NOT NULL AND r_c03_w.cd_relatorio::text <> '') then
						for r_C04_w in C04(	r_c03_w.cd_classif_relat,
									r_c03_w.cd_relatorio) loop

							if (upper(r_C04_w.cd_parametro) = 'NR_SEQ_SOLICITACAO') then
								ds_valor_parametro_w	:= nr_seq_lead_p;
							elsif (upper(r_C04_w.cd_parametro) = 'NR_SEQ_CONTRATO') then
								ds_valor_parametro_w	:= r_c01_w.nr_seq_contrato;
							else
								ds_valor_parametro_w	:= null;
							end if;

							insert	into	pls_email_anexo_param(
											nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_anexo,
											nm_parametro,
											ds_valor_parametro)
							values (				nextval('pls_email_anexo_param_seq'),clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_anexo_w,
											r_C04_w.cd_parametro,
											ds_valor_parametro_w
											);
						end loop;
					end if;
					end;
				end loop;

		end loop;
	end if;

end loop;

if (ie_commit_p = 'S') then
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hpms_proposal_request_pck.enviar_email_portabilidade ( nr_seq_lead_p pls_solicitacao_comercial.nr_sequencia%type, ie_acao_p pls_solic_prop_regra_email.ie_acao_envio%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
