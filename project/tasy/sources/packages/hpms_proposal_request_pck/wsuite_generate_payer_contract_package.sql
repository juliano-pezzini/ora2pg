-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE hpms_proposal_request_pck.wsuite_generate_payer_contract (nr_seq_proposta_p pls_proposta_online.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, dt_contratacao_prev_p pls_contrato.dt_contrato%type, nm_usuario_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Insert the payment informations.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
qt_dias_proposta_w		varchar(3);
nr_seq_regra_proporcional_w	pls_regra_prop_mensalidade.nr_sequencia%type;
ie_calc_primeira_mens_w		pls_regra_prop_mensalidade.ie_calc_primeira_mens%type;
ie_calculo_proporcional_w	pls_regra_prop_mensalidade.ie_calculo_proporcional%type;
cd_condicao_pagamento_w		pls_parametros.cd_condicao_pagamento%type;
cd_tipo_portador_w		pls_regra_portador_mens.cd_tipo_portador%type;
cd_portador_w			pls_regra_portador_mens.cd_portador%type;
nr_seq_conta_banco_w		pls_regra_portador_mens.nr_seq_conta_banco%type;
nr_seq_carteira_cobr_w		pls_regra_portador_mens.nr_seq_carteira_cobr%type;
ie_geracao_nota_titulo_w	pls_regra_portador_mens.ie_geracao_nota_titulo%type;

C01 CURSOR FOR
	SELECT	b.cd_pessoa_fisica,
		b.ds_email,
		a.nr_dia_vencimento,
		a.cd_estabelecimento,
		a.dt_confirmacao,
		coalesce(a.nr_seq_forma_cobranca,'1') nr_seq_forma_cobranca,
		a.cd_banco,
		a.cd_conta,
		a.ie_digito_conta,
		a.cd_agencia_bancaria,
		a.ie_digito_agencia
	from	pls_proposta_online a,
		pls_proposta_benef_online b
	where	b.nr_seq_prop_online	= a.nr_sequencia
	and	a.nr_sequencia		= nr_seq_proposta_p
	and	b.ie_tipo_benef		= 'R'
	
union	all

	PERFORM	b.cd_pessoa_fisica,
		b.ds_email,
		a.nr_dia_vencimento,
		a.cd_estabelecimento,
		a.dt_confirmacao,
		coalesce(a.nr_seq_forma_cobranca,'1') nr_seq_forma_cobranca,
		a.cd_banco,
		a.cd_conta,
		a.ie_digito_conta,
		a.cd_agencia_bancaria,
		a.ie_digito_agencia
	from	pls_proposta_online a,
		pls_proposta_benef_online b
	where	b.nr_seq_prop_online	= a.nr_sequencia
	and	a.nr_sequencia		= nr_seq_proposta_p
	and	b.ie_tipo_benef		= 'T'
	and	not exists (	select	1
				from	pls_proposta_benef_online x
				where	x.nr_seq_prop_online	= nr_seq_proposta_p
				and	x.ie_tipo_benef		= 'R');

BEGIN

select	max(cd_condicao_pagamento)
into STRICT	cd_condicao_pagamento_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

for C01_w in C01 loop
	begin
		qt_dias_proposta_w	:= to_char(C01_w.dt_confirmacao,'dd');
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_proporcional_w
		from	pls_regra_prop_mensalidade
		where	ie_tipo_pessoa = 'PF'
		and	coalesce(qt_dia_limite,qt_dias_proposta_w)	>= qt_dias_proposta_w;
		
		if (coalesce(nr_seq_regra_proporcional_w,0) <> 0) then
			begin
				select	ie_calc_primeira_mens,
					ie_calculo_proporcional
				into STRICT	ie_calc_primeira_mens_w,
					ie_calculo_proporcional_w
				from	pls_regra_prop_mensalidade
				where	nr_sequencia	= nr_seq_regra_proporcional_w;
			exception
			when others then
				ie_calc_primeira_mens_w		:= 'I';
				ie_calculo_proporcional_w	:= 'M';
			end;
		else
			ie_calc_primeira_mens_w		:= 'I';
			ie_calculo_proporcional_w	:= 'M';
		end if;
		
		insert into pls_contrato_pagador(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_contrato,
			cd_pessoa_fisica, ie_tipo_pagador, ie_endereco_boleto,
			ds_email, ie_calc_primeira_mens, ie_calculo_proporcional)
		values (	nextval('pls_contrato_pagador_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nr_seq_contrato_p,
			C01_w.cd_pessoa_fisica, 'P', 'PFR',
			C01_w.ds_email, ie_calc_primeira_mens_w, ie_calculo_proporcional_w)
			returning nr_sequencia into nr_seq_pagador_w;

		pls_obter_inf_fin_pagador(	nr_seq_pagador_w, nr_seq_contrato_p, clock_timestamp(), cd_estabelecimento_p,
						cd_tipo_portador_w, cd_portador_w, nr_seq_conta_banco_w, nr_seq_carteira_cobr_w, 
						ie_geracao_nota_titulo_w, nm_usuario_p);

		if (C01_w.nr_seq_forma_cobranca = '2') then
			insert into pls_contrato_pagador_fin(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_pagador,
				dt_inicio_vigencia, dt_dia_vencimento, nr_seq_forma_cobranca,
				ie_geracao_nota_titulo, cd_condicao_pagamento, cd_banco,
				cd_conta, ie_digito_conta, cd_agencia_bancaria, 
				ie_digito_agencia, cd_tipo_portador, cd_portador, 
				nr_seq_conta_banco, nr_seq_carteira_cobr)
			values (	nextval('pls_contrato_pagador_fin_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_pagador_w,
				coalesce(dt_contratacao_prev_p, C01_w.dt_confirmacao), C01_w.nr_dia_vencimento, C01_w.nr_seq_forma_cobranca,
				'T', cd_condicao_pagamento_w, C01_w.cd_banco, 
				C01_w.cd_conta, C01_w.ie_digito_conta, C01_w.cd_agencia_bancaria, 
				C01_w.ie_digito_agencia, cd_tipo_portador_w, cd_portador_w, 
				nr_seq_conta_banco_w, nr_seq_carteira_cobr_w);
		else
			insert into pls_contrato_pagador_fin(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_pagador,
				dt_inicio_vigencia, dt_dia_vencimento, nr_seq_forma_cobranca,
				ie_geracao_nota_titulo, cd_condicao_pagamento, cd_tipo_portador,
				cd_portador, nr_seq_conta_banco, nr_seq_carteira_cobr)
			values (	nextval('pls_contrato_pagador_fin_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_pagador_w,
				coalesce(dt_contratacao_prev_p, C01_w.dt_confirmacao), C01_w.nr_dia_vencimento, C01_w.nr_seq_forma_cobranca,
				'T', cd_condicao_pagamento_w, cd_tipo_portador_w,
				cd_portador_w, nr_seq_conta_banco_w, nr_seq_carteira_cobr_w);
		end if;		
	end;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hpms_proposal_request_pck.wsuite_generate_payer_contract (nr_seq_proposta_p pls_proposta_online.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, dt_contratacao_prev_p pls_contrato.dt_contrato%type, nm_usuario_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
