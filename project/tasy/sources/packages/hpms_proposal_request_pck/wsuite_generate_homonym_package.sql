-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE hpms_proposal_request_pck.wsuite_generate_homonym ( nr_seq_proposta_p pls_proposta_online.nr_sequencia%type, id_user_p pls_proposta_online.id_subject%type, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finality: Insert into Homonym table possibles persons with duplicate informations.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Caution:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


nm_primeiro_nome_w		varchar(400);
nm_sobrenome_w			varchar(400);
nm_completo_w			varchar(400);
sql_from_str			varchar(4000)	:= null;
cd_pessoa_fisica_w		varchar(10);
v_select			integer;
v_execute			integer;
qt_pessoa_homonimo_w		integer(10);

c01 CURSOR(	nr_seq_proposta_pc	pls_proposta_online.nr_sequencia%type,
		id_user_pc		pls_proposta_online.id_subject%type)FOR
	SELECT	a.nm_pessoa_fisica,
		a.nr_cpf,
		a.dt_nascimento,
		a.nr_sequencia
	from	pls_proposta_benef_online a,
		pls_proposta_online b
	where	a.nr_seq_prop_online = b.nr_sequencia
	and	b.nr_sequencia = nr_seq_proposta_pc
	and	b.id_subject = id_user_pc
	and	b.ie_status = 'U';

BEGIN

for c01_w in c01(nr_seq_proposta_p, id_user_p) loop

	nm_primeiro_nome_w	:= '%' || ELIMINA_ACENTOS(upper(substr(c01_w.nm_pessoa_fisica,1,position(' ' in c01_w.nm_pessoa_fisica)))) || '%';
	nm_sobrenome_w		:= '%' || ELIMINA_ACENTOS(upper(substr(c01_w.nm_pessoa_fisica, position(' ' in c01_w.nm_pessoa_fisica),length(c01_w.nm_pessoa_fisica)))) || '%';
	nm_completo_w		:= '%' || ELIMINA_ACENTOS(upper(c01_w.nm_pessoa_fisica)) || '%';
	
	sql_from_str := ' select 	cd_pessoa_fisica
			from		pessoa_fisica
			where 		nm_pessoa_pesquisa like :nm_sobrenome_w ' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
		
	if (c01_w.dt_nascimento IS NOT NULL AND c01_w.dt_nascimento::text <> '') then
		sql_from_str := sql_from_str || ' and dt_nascimento = :dt_nascimento ' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
	end if;
	
	if (c01_w.nr_cpf IS NOT NULL AND c01_w.nr_cpf::text <> '') then
		sql_from_str := sql_from_str || ' and nr_cpf = :nr_cpf ' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
	end if;
	
	sql_from_str := sql_from_str || 'union' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
	sql_from_str := sql_from_str ||
			' select	cd_pessoa_fisica
			 from		pessoa_fisica
			 where		nm_pessoa_pesquisa like ( :nm_primeiro_nome_w ) ' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
	
	if (c01_w.dt_nascimento IS NOT NULL AND c01_w.dt_nascimento::text <> '') then
		sql_from_str := sql_from_str || ' and dt_nascimento = :dt_nascimento ' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
	end if;
	
	if (c01_w.nr_cpf IS NOT NULL AND c01_w.nr_cpf::text <> '') then
		sql_from_str := sql_from_str || ' and nr_cpf = :nr_cpf ' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
	end if;
	
	if (c01_w.nr_cpf IS NOT NULL AND c01_w.nr_cpf::text <> '') then
		sql_from_str := sql_from_str || 'union' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
		sql_from_str := sql_from_str ||
			' select	cd_pessoa_fisica
			from	pessoa_fisica
			where nr_cpf = :nr_cpf ';
	end if;
	
	if (c01_w.dt_nascimento IS NOT NULL AND c01_w.dt_nascimento::text <> '') then
		sql_from_str := sql_from_str || 'union' || current_setting('hpms_proposal_request_pck.enter_w')::varchar(2);
		sql_from_str := sql_from_str ||
			' select	cd_pessoa_fisica
			from		pessoa_fisica
			where		dt_nascimento = :dt_nascimento
			and		nm_pessoa_pesquisa like ( :nm_completo_w ) ';
	end if;
	
	--Cursor for dinamic fields

	v_select := dbms_sql.open_cursor;
	dbms_sql.parse( v_select, sql_from_str, dbms_sql.native );
	dbms_sql.define_column(v_select, 1, cd_pessoa_fisica_w,100);
	
	dbms_sql.bind_variable(v_select, ':nm_sobrenome_w',nm_sobrenome_w);
	dbms_sql.bind_variable(v_select, ':nm_primeiro_nome_w',nm_primeiro_nome_w);
	dbms_sql.bind_variable(v_select, ':nm_completo_w',nm_completo_w);
	
	if (c01_w.dt_nascimento IS NOT NULL AND c01_w.dt_nascimento::text <> '') then
		dbms_sql.bind_variable(v_select, ':dt_nascimento', c01_w.dt_nascimento);
	end if;
	
	if (c01_w.nr_cpf IS NOT NULL AND c01_w.nr_cpf::text <> '') then
		dbms_sql.bind_variable(v_select, ':nr_cpf', c01_w.nr_cpf);
	end if;
	
	v_execute:= dbms_sql.execute( v_select );
	
	loop
		exit when dbms_sql.fetch_rows( v_select ) = 0;
		
		dbms_sql.column_value(v_select,1,cd_pessoa_fisica_w);
		
		select	count(1)
		into STRICT	qt_pessoa_homonimo_w
		from	pls_homonimo_pessoa_fisica
		where	nr_seq_prop_benef_online	= c01_w.nr_sequencia
		and	cd_pessoa_fisica		= cd_pessoa_fisica_w;
		
		/* Only insert a physical person if it does not already exist */


		if (qt_pessoa_homonimo_w = 0) then
			insert into pls_homonimo_pessoa_fisica(nr_sequencia, nr_seq_prop_benef_online, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica)
			values (	nextval('pls_homonimo_pessoa_fisica_seq'), c01_w.nr_sequencia, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p, cd_pessoa_fisica_w);
		end if;
	end loop;
	dbms_sql.close_cursor( v_select );
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hpms_proposal_request_pck.wsuite_generate_homonym ( nr_seq_proposta_p pls_proposta_online.nr_sequencia%type, id_user_p pls_proposta_online.id_subject%type, nm_usuario_p text) FROM PUBLIC;
