-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sib_dados_benef_pck.obter_enderecos_benef ( cd_pessoa_fisica_p text, nr_seq_contrato_p bigint, nr_seq_subestipulante_p bigint, ie_forma_endereco_p text, ie_tipo_logradouro_p INOUT text, ds_endereco_p INOUT text, nr_endereco_p INOUT text, ds_complemento_p INOUT text, ds_bairro_p INOUT text, cd_municipio_ibge_p INOUT text, cd_municipio_ibge_resid_p INOUT text, cd_cep_p INOUT text, ie_reside_exterior_p INOUT bigint) AS $body$
DECLARE


ds_logradouro_w			varchar(250);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(40);
ds_bairro_w			varchar(80);
ds_municipio_w			varchar(50);
uf_w				compl_pessoa_fisica.sg_estado%type;
cep_w				varchar(15);
ie_tipo_logradouro_w		varchar(10);
cd_tipo_logradouro_w		varchar(10);
nr_seq_cns_tipo_log_w		bigint;
cd_municipio_ibge_resid_w	varchar(10);
cd_cgc_estipulante_w		pls_contrato.cd_cgc_estipulante%type;
cd_cgc_subestipulante_w		pls_sub_estipulante.cd_cgc%type;
nr_seq_regra_end_w		pls_regra_endereco_sib.nr_sequencia%type;
ie_achou_w			varchar(1);

tb_ie_tipo_endereco_w		pls_util_cta_pck.t_number_table;

C01 CURSOR(	nr_seq_contrato_pc	pls_contrato.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia
	from	pls_regra_endereco_sib a
	where (a.nr_seq_contrato = nr_seq_contrato_pc or coalesce(a.nr_seq_contrato::text, '') = '')
	order by coalesce(a.nr_seq_contrato,0) desc;

BEGIN
nr_seq_regra_end_w	:= null;
ie_achou_w		:= 'N';

for r_C01_w in C01(nr_seq_contrato_p) loop
	nr_seq_regra_end_w	:= r_C01_w.nr_sequencia;
end loop; --C01

if (nr_seq_regra_end_w IS NOT NULL AND nr_seq_regra_end_w::text <> '') then
	tb_ie_tipo_endereco_w.delete;
	select	coalesce(a.ie_primeiro_endereco,1),
		coalesce(a.ie_segundo_endereco,1),
		coalesce(a.ie_terceiro_endereco,1),
		coalesce(a.ie_quarto_endereco,1)
	into STRICT	tb_ie_tipo_endereco_w(0),
		tb_ie_tipo_endereco_w(1),
		tb_ie_tipo_endereco_w(2),
		tb_ie_tipo_endereco_w(3)
	from	pls_regra_endereco_sib a
	where	a.nr_sequencia = nr_seq_regra_end_w;
	
	for i in tb_ie_tipo_endereco_w.first..tb_ie_tipo_endereco_w.last loop
		if (ie_achou_w = 'N') then
			if (tb_ie_tipo_endereco_w(i) = 1) then
				begin
					ie_tipo_logradouro_w	:= '2';
					
					select	ds_endereco,
						to_char(nr_endereco),
						current_setting('pls_sib_dados_benef_pck.ds_complemento')::varchar(60),
						current_setting('pls_sib_dados_benef_pck.ds_bairro')::varchar(60),
						current_setting('pls_sib_dados_benef_pck.cd_municipio_ibge')::varchar(7),
						sg_estado,
						current_setting('pls_sib_dados_benef_pck.cd_cep')::varchar(8),
						cd_tipo_logradouro
					into STRICT	ds_logradouro_w,
						ds_numero_w,
						ds_complemento_w,
						ds_bairro_w,
						ds_municipio_w,
						uf_w,
						cep_w,
						cd_tipo_logradouro_w
					from	compl_pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_p
					and	ie_tipo_complemento	= 1;
					
					ie_achou_w := 'S';
				exception
				when others then
					ie_tipo_logradouro_w		:= null;
					ds_logradouro_w			:= null;
					ds_numero_w			:= null;
					ds_complemento_w		:= null;
					ds_bairro_w			:= null;
					ds_municipio_w			:= null;
					uf_w				:= null;
					cep_w				:= null;
					cd_tipo_logradouro_w		:= null;
					ie_achou_w := 'N';
				end;
			elsif (tb_ie_tipo_endereco_w(i) = 2) then
				begin
					ie_tipo_logradouro_w	:= '1';
					
					select	ds_endereco,
						to_char(nr_endereco),
						current_setting('pls_sib_dados_benef_pck.ds_complemento')::varchar(60),
						current_setting('pls_sib_dados_benef_pck.ds_bairro')::varchar(60),
						current_setting('pls_sib_dados_benef_pck.cd_municipio_ibge')::varchar(7),
						sg_estado,
						current_setting('pls_sib_dados_benef_pck.cd_cep')::varchar(8),
						cd_tipo_logradouro
					into STRICT	ds_logradouro_w,
						ds_numero_w,
						ds_complemento_w,
						ds_bairro_w,
						ds_municipio_w,
						uf_w,
						cep_w,
						cd_tipo_logradouro_w
					from	compl_pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_p
					and	ie_tipo_complemento	= 2;
					
					ie_achou_w := 'S';
				exception
				when others then
					ie_tipo_logradouro_w		:= null;
					ds_logradouro_w			:= null;
					ds_numero_w			:= null;
					ds_complemento_w		:= null;
					ds_bairro_w			:= null;
					ds_municipio_w			:= null;
					uf_w				:= null;
					cep_w				:= null;
					cd_tipo_logradouro_w		:= null;
					cd_municipio_ibge_resid_w	:= null;
					ie_achou_w := 'N';
				end;
			elsif (tb_ie_tipo_endereco_w(i) = 3) then
				begin
					select	max(cd_cgc_estipulante)
					into STRICT	cd_cgc_estipulante_w
					from	pls_contrato
					where	nr_sequencia	= nr_seq_contrato_p;
					
					if (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then
						ie_tipo_logradouro_w	:= '1';
						
						select	ds_endereco,
							to_char(nr_endereco),
							substr(current_setting('pls_sib_dados_benef_pck.ds_complemento')::varchar(60),1,40),
							current_setting('pls_sib_dados_benef_pck.ds_bairro')::varchar(60),
							current_setting('pls_sib_dados_benef_pck.cd_municipio_ibge')::varchar(7),
							sg_estado,
							current_setting('pls_sib_dados_benef_pck.cd_cep')::varchar(8),
							nr_seq_tipo_logradouro
						into STRICT	ds_logradouro_w,
							ds_numero_w,
							ds_complemento_w,
							ds_bairro_w,
							ds_municipio_w,
							uf_w,
							cep_w,
							nr_seq_cns_tipo_log_w
						from	pessoa_juridica
						where	cd_cgc		= cd_cgc_estipulante_w;
						
						ie_achou_w := 'S';
					end if;
				exception
				when others then
					ie_tipo_logradouro_w		:= null;
					ds_logradouro_w			:= null;
					ds_numero_w			:= null;
					ds_complemento_w		:= null;
					ds_bairro_w			:= null;
					ds_municipio_w			:= null;
					uf_w				:= null;
					cep_w				:= null;
					cd_tipo_logradouro_w		:= null;
					cd_municipio_ibge_resid_w	:= null;
					nr_seq_cns_tipo_log_w		:= null;
					ie_achou_w := 'N';
				end;
			elsif (tb_ie_tipo_endereco_w(i) = 4) then
				begin
					select	max(cd_cgc)
					into STRICT	cd_cgc_subestipulante_w
					from	pls_sub_estipulante
					where	nr_sequencia	= nr_seq_subestipulante_p;
					
					if (cd_cgc_subestipulante_w IS NOT NULL AND cd_cgc_subestipulante_w::text <> '') then
						ie_tipo_logradouro_w	:= '1';
						
						select	ds_endereco,
							to_char(nr_endereco),
							substr(current_setting('pls_sib_dados_benef_pck.ds_complemento')::varchar(60),1,40),
							current_setting('pls_sib_dados_benef_pck.ds_bairro')::varchar(60),
							current_setting('pls_sib_dados_benef_pck.cd_municipio_ibge')::varchar(7),
							sg_estado,
							current_setting('pls_sib_dados_benef_pck.cd_cep')::varchar(8),
							nr_seq_tipo_logradouro
						into STRICT	ds_logradouro_w,
							ds_numero_w,
							ds_complemento_w,
							ds_bairro_w,
							ds_municipio_w,
							uf_w,
							cep_w,
							nr_seq_cns_tipo_log_w
						from	pessoa_juridica
						where	cd_cgc		= cd_cgc_subestipulante_w;
						
						ie_achou_w := 'S';
					end if;
				exception
				when others then
					ie_tipo_logradouro_w		:= null;
					ds_logradouro_w			:= null;
					ds_numero_w			:= null;
					ds_complemento_w		:= null;
					ds_bairro_w			:= null;
					ds_municipio_w			:= null;
					uf_w				:= null;
					cep_w				:= null;
					cd_tipo_logradouro_w		:= null;
					cd_municipio_ibge_resid_w	:= null;
					nr_seq_cns_tipo_log_w		:= null;
					ie_achou_w := 'N';
				end;
			end if;
		end if;
	end loop;
end if;

if (ie_achou_w = 'S') then
	cd_municipio_ibge_resid_w	:= null;
	if (ie_tipo_logradouro_w = '1') then --Se enviar endereco comercial, precisa enviar o municipio de residencia do beneficiario
		cd_municipio_ibge_resid_w	:= substr(obter_compl_pf(cd_pessoa_fisica_p,1,'CDM'),1,10);
	end if;
	
	if (ie_forma_endereco_p = '2') then
		if (nr_seq_cns_tipo_log_w IS NOT NULL AND nr_seq_cns_tipo_log_w::text <> '') then
			select	cd_tipo_logradouro
			into STRICT	cd_tipo_logradouro_w
			from	cns_tipo_logradouro
			where	nr_sequencia	= nr_seq_cns_tipo_log_w;
		end if;
		
		if (cd_tipo_logradouro_w IS NOT NULL AND cd_tipo_logradouro_w::text <> '') then
			ds_logradouro_w	:= substr(sus_obter_desc_TipoLog(cd_tipo_logradouro_w),1,255) || ' ' || ds_logradouro_w;
		end if;
	end if;
	
	select	CASE WHEN uf_w='IN' THEN 1  ELSE 0 END
	into STRICT	ie_reside_exterior_p
	;
	
	ds_endereco_p			:= substr(pls_sib_dados_benef_pck.ajustar_caracteres(ds_logradouro_w, 'N'),1,50);
	nr_endereco_p			:= substr(ds_numero_w,1,5);
	ds_complemento_p		:= substr(pls_sib_dados_benef_pck.ajustar_caracteres(ds_complemento_w, 'N'),1,15);
	ds_bairro_p			:= substr(pls_sib_dados_benef_pck.ajustar_caracteres(ds_bairro_w, 'N'),1,20);
	cd_municipio_ibge_p		:= substr(ds_municipio_w,1,10);
	cd_municipio_ibge_resid_w	:= substr(cd_municipio_ibge_resid_w,1,10);
	ie_tipo_logradouro_p		:= ie_tipo_logradouro_w;
	
	if (cep_w IS NOT NULL AND cep_w::text <> '') then
		cd_cep_p := lpad(somente_numero(cep_w),8,0);
	else
		cd_cep_p := null;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_dados_benef_pck.obter_enderecos_benef ( cd_pessoa_fisica_p text, nr_seq_contrato_p bigint, nr_seq_subestipulante_p bigint, ie_forma_endereco_p text, ie_tipo_logradouro_p INOUT text, ds_endereco_p INOUT text, nr_endereco_p INOUT text, ds_complemento_p INOUT text, ds_bairro_p INOUT text, cd_municipio_ibge_p INOUT text, cd_municipio_ibge_resid_p INOUT text, cd_cep_p INOUT text, ie_reside_exterior_p INOUT bigint) FROM PUBLIC;
