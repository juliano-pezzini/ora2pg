-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pharmindex_pck.get_prescriptions_response ( nr_sequencia_p bigint) AS $body$
DECLARE


reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_doc_origem_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_status_w			intpd_fila_transmissao.ie_status%type;
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type;
ds_xml_w			text;
xml_w				xml;

getPrescriptionsResult_w	xml;

ds_erro_w			varchar(2000);
nr_seq_documento_w		varchar(80);
pharmindex_prescr_w		pharmindex_prescr%rowtype;


c01 CURSOR FOR
	SELECT	*
	from	xmltable('/getPrescriptionsResult/item' passing getPrescriptionsResult_w columns
			prescription_type_id	varchar(10)		path		'PrescriptionTypeId',
			prescription_type	varchar(15)		path		'PrescriptionType',
			prescription_type_desc	varchar(255)		path		'PrescriptionTypeDesc',
			modified		varchar(20)		path		'Modified',
			status			varchar(15)		path		'Status');

c01_w	c01%rowtype;


BEGIN
CALL intpd_inicializacao(nr_sequencia_p);

delete	FROM intpd_log_recebimento
where	nr_seq_fila = nr_sequencia_p;

begin
select	a.nr_seq_documento,
	a.ds_xml_retorno
into STRICT	nr_seq_doc_origem_w,
	ds_xml_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		ie_response_procedure = 'S'
	where	nr_sequencia = nr_sequencia_p;
else
	begin
	intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_w);

	select	a.getPrescriptionsResult
	into STRICT	getPrescriptionsResult_w
	from	xmltable(
			xmlnamespaces(
			'http://ws.pharmindex.pl/demo/' as "ns1",
			'http://schemas.xmlsoap.org/soap/envelope/' as "SOAP-ENV"),
			'SOAP-ENV:Envelope/SOAP-ENV:Body/ns1:getPrescriptionsResponse' passing xml_w columns
		getPrescriptionsResult xmltype path 'getPrescriptionsResult') a;

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		reg_integracao_w.nm_tabela	:= 'PHARMINDEX_PRESCR';
		reg_integracao_w.nm_elemento	:= 'getPrescriptionsResult';

		pharmindex_prescr_w.prescription_type_id	:=	c01_w.prescription_type_id;
		pharmindex_prescr_w.prescription_type		:=	c01_w.prescription_type;
		pharmindex_prescr_w.prescription_type_desc	:=	c01_w.prescription_type_desc;
		pharmindex_prescr_w.modified			:=	c01_w.modified;
		pharmindex_prescr_w.status			:=	c01_w.status;

		pharmindex_prescr_w.nr_seq_processo	:=	somente_numero(nr_seq_doc_origem_w);

		select	nextval('pharmindex_prescr_seq')
		into STRICT	pharmindex_prescr_w.nr_sequencia
		;

		insert into pharmindex_prescr values (pharmindex_prescr_w.*);
		end;

	end loop;
	close c01;

	if (reg_integracao_w.qt_reg_log > 0) then
		begin
		rollback;

		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'S',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			ie_response_procedure = 'S',
			ds_log  = NULL
		where	nr_sequencia = nr_sequencia_p;
	end if;

	reg_integracao_w := gerar_int_padrao.gravar_log(reg_integracao_w);
	exception
	when others then
		begin
		ds_erro_w	:=	substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
			update	intpd_fila_transmissao
		set	ie_status = 'E',
			ds_log = ds_erro_w,
			ie_response_procedure = 'S'
		where	nr_sequencia = nr_sequencia_p;
		end;
	end;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pharmindex_pck.get_prescriptions_response ( nr_sequencia_p bigint) FROM PUBLIC;
