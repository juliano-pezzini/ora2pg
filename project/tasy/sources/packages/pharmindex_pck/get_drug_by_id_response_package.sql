-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pharmindex_pck.get_drug_by_id_response ( nr_sequencia_p bigint) AS $body$
DECLARE


reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_doc_origem_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_status_w			intpd_fila_transmissao.ie_status%type;
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type;
ds_xml_w			text;
xml_w				xml;

get_drugs_by_id_result_w 	xml;

ds_erro_w			varchar(2000);
nr_seq_documento_w		varchar(80);

pharmindex_medic_w		pharmindex_medic%rowtype;
pharmindex_medic_atc_w		pharmindex_medic_atc%rowtype;
pharmindex_medic_subst_w	pharmindex_medic_subst%rowtype;

c01 CURSOR FOR
	SELECT	*
	from	xmltable('/getDrugByIdResult' passing get_drugs_by_id_result_w columns
		Drug_Id			varchar(10)		path		'DrugId',
		Drug_Short_Name		varchar(255)		path		'DrugShortName',
		Drug_Desc_Composition	text			path		'DrugDescComposition',
		Drug_Desc_Activity	text			path		'DrugDescActivity',
		Drug_Desc_Indication	text			path		'DrugDescIndication',
		Drug_Desc_Contr_Ind	text			path		'DrugDescContrInd',
		Drug_Desc_Warning	text			path		'DrugDescWarning',
		Drug_Desc_Pregn		text			path		'DrugDescPregn',
		Drug_Desc_Side_Eff	text			path		'DrugDescSideEff',
		Drug_Desc_Inter		text			path		'DrugDescInter',
		Drug_Desc_Dosage	text			path		'DrugDescDosage',
		Drug_Desc_Notes		text			path		'DrugDescNotes',
		Drug_Ther_Class		varchar(255)		path		'DrugTherClass',
		Drug_Prod_Name		varchar(255)		path		'DrugProdName',
		Drug_Prod_ID		varchar(10)		path		'DrugProdID',
		Modified		varchar(20)		path		'Modified',
		Status			varchar(15)		path		'Status',
		Drug_Atc		xml			path		'DrugAtc',
		Drug_Subst		xml			path		'DrugSubst');

c01_w	c01%rowtype;

c02 CURSOR FOR
	SELECT	*
	from	xmltable('/DrugAtc/item' passing c01_w.Drug_Atc columns
		atc_code	varchar(10)	path	'AtcCode');

c02_w	c02%rowtype;

c03 CURSOR FOR
	SELECT	*
	from	xmltable('/DrugSubst/item' passing c01_w.Drug_Subst columns
		subst_id	varchar(10)	path	'SubstId');

c03_w	c03%rowtype;


BEGIN
CALL intpd_inicializacao(nr_sequencia_p);

delete	FROM intpd_log_recebimento
where	nr_seq_fila = nr_sequencia_p;

begin
select	a.nr_seq_documento,
	a.ds_xml_retorno
into STRICT	nr_seq_doc_origem_w,
	ds_xml_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		ie_response_procedure = 'S'
	where	nr_sequencia = nr_sequencia_p;
else
	begin
	intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_w);

	select	a.getDrugByIdResult
	into STRICT	get_drugs_by_id_result_w
	from	xmltable(
			xmlnamespaces(
			'http://ws.pharmindex.pl/demo/' as "ns1",
			'http://schemas.xmlsoap.org/soap/envelope/' as "SOAP-ENV"),
			'SOAP-ENV:Envelope/SOAP-ENV:Body/ns1:getDrugByIdResponse' passing xml_w columns
		getDrugByIdResult xmltype path 'getDrugByIdResult') a;

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		reg_integracao_w.nm_tabela		:= 'PHARMINDEX_MEDIC';
		reg_integracao_w.nm_elemento		:= 'getDrugByIdResult';

		pharmindex_medic_w.drug_desc_activity		:=	substr(c01_w.drug_desc_activity,1,4000);
		pharmindex_medic_w.drug_desc_composition	:=	substr(c01_w.drug_desc_composition,1,4000);
		pharmindex_medic_w.drug_desc_contr_ind		:=	substr(c01_w.drug_desc_contr_ind,1,4000);
		pharmindex_medic_w.drug_desc_dosage		:=	substr(c01_w.drug_desc_dosage,1,4000);
		pharmindex_medic_w.drug_desc_indication		:=	substr(c01_w.drug_desc_indication,1,4000);
		pharmindex_medic_w.drug_desc_inter		:=	substr(c01_w.drug_desc_inter,1,4000);
		pharmindex_medic_w.drug_desc_notes		:=	substr(c01_w.drug_desc_notes,1,4000);
		pharmindex_medic_w.drug_desc_pregn		:=	substr(c01_w.drug_desc_pregn,1,4000);
		pharmindex_medic_w.drug_desc_side_eff		:=	substr(c01_w.drug_desc_side_eff,1,4000);
		pharmindex_medic_w.drug_desc_warning		:=	substr(c01_w.drug_desc_warning,1,4000);
		pharmindex_medic_w.drug_id			:=	c01_w.drug_id;
		pharmindex_medic_w.drug_prod_id			:=	c01_w.drug_prod_id;
		pharmindex_medic_w.drug_prod_name		:=	c01_w.drug_prod_name;
		pharmindex_medic_w.drug_short_name		:=	c01_w.drug_short_name;
		pharmindex_medic_w.drug_ther_class		:=	c01_w.drug_ther_class;
		pharmindex_medic_w.modified			:=	c01_w.modified;
		pharmindex_medic_w.status			:=	c01_w.status;

		pharmindex_medic_w.nr_seq_processo		:=	somente_numero(nr_seq_doc_origem_w);

		select	nextval('pharmindex_medic_seq')
		into STRICT	pharmindex_medic_w.nr_sequencia
		;

		insert into pharmindex_medic values (pharmindex_medic_w.*);

		open C02;
		loop
		fetch C02 into
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			pharmindex_medic_atc_w.nr_seq_pharm_medic	:=	pharmindex_medic_w.nr_sequencia;
			pharmindex_medic_atc_w.atc_code			:=	c02_w.atc_code;

			select	nextval('pharmindex_medic_atc_seq')
			into STRICT	pharmindex_medic_atc_w.nr_sequencia
			;

			insert into pharmindex_medic_atc values (pharmindex_medic_atc_w.*);
			end;
		end loop;
		close C02;

		open C03;
		loop
		fetch C03 into
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			pharmindex_medic_subst_w.nr_seq_pharm_medic	:=	pharmindex_medic_w.nr_sequencia;
			pharmindex_medic_subst_w.subst_id		:=	c03_w.subst_id;

			select	nextval('pharmindex_medic_subst_seq')
			into STRICT	pharmindex_medic_subst_w.nr_sequencia
			;

			insert into pharmindex_medic_subst values (pharmindex_medic_subst_w.*);
			end;
		end loop;
		close C03;

		end;
	end loop;
	close c01;

	if (reg_integracao_w.qt_reg_log > 0) then
		begin
		rollback;

		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'S',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			ie_response_procedure = 'S',
			ds_log  = NULL
		where	nr_sequencia = nr_sequencia_p;
	end if;

	reg_integracao_w := gerar_int_padrao.gravar_log(reg_integracao_w);
	exception
	when others then
		begin
		ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);

		rollback;

		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ds_log = ds_erro_w,
			ie_response_procedure = 'S'
		where	nr_sequencia = nr_sequencia_p;
		end;
	end;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pharmindex_pck.get_drug_by_id_response ( nr_sequencia_p bigint) FROM PUBLIC;
