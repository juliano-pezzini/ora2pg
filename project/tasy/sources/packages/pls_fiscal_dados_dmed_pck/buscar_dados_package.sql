-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_fiscal_dados_dmed_pck.buscar_dados () AS $body$
DECLARE


vl_total_w			pls_mensalidade_seg_item.vl_item%type;
vl_diferenca_tit_mens_trib_w	double precision;
nr_seq_tit_rec_liq_w		titulo_receber_liq.nr_sequencia%type;
qt_baixas_w			bigint;
nr_seq_negociacao_w		negociacao_cr.nr_sequencia%type;

c01 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type,
		nr_titulo_pc		titulo_receber_trib.nr_sequencia%type,
		qt_nota_fiscal_pc	bigint) FOR
	SELECT	sum(vl_tributo) vl_tributo,
		ie_retencao	ie_retencao,
		ie_origem_tributo ie_origem_tributo,
		cd_tributo
	from	pls_mensalidade_trib
	where	nr_seq_mensalidade = nr_seq_mensalidade_pc
	and	vl_tributo <> 0
	and	qt_nota_fiscal_pc = 0
	group by
		cd_tributo,
		ie_retencao,
		ie_origem_tributo
	
union all

	SELECT	sum(vl_tributo) vl_tributo,
		null ie_retencao,
		ie_origem_tributo,
		cd_tributo
	from	titulo_receber_trib
	where	nr_titulo = nr_titulo_pc
	and	coalesce(nr_seq_mens_trib::text, '') = ''
	and	coalesce(nr_seq_nota_fiscal::text, '') = ''
	and	vl_tributo <> 0
	group by
		ie_origem_tributo,
		cd_tributo
	
union all

	select	sum(a.vl_tributo),
		a.ie_retencao,
		null ie_origem_tributo,
		a.cd_tributo
	from	nota_fiscal_trib a
	where	exists (select	1
			from	nota_fiscal x
			where	x.nr_sequencia = a.nr_sequencia
			and	x.nr_seq_mensalidade = nr_seq_mensalidade_pc)
	and	a.vl_tributo <> 0
	and	qt_nota_fiscal_pc > 0
	group by
		a.cd_tributo,
		a.ie_retencao;
	
BEGIN

PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_itens_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_desconto_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_glosa_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_nota_credito_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.qt_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_item_rateio_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_juros_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_multa_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_itens_rescisao_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_rec_maior_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.qt_outros_titulos_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_desconto_w', coalesce(current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.vl_descontos,0), false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_glosa_w', coalesce(current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.vl_glosa,0), false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_nota_credito_w', coalesce(current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.vl_nota_credito,0), false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_w', current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.vl_recebido+current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_desconto_w')::titulo_receber_liq.vl_descontos%type+current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_glosa_w')::titulo_receber_liq.vl_glosa%type+current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_nota_credito_w')::titulo_receber_liq.vl_nota_credito%type, false);
vl_diferenca_tit_mens_trib_w	:= 0;
PERFORM set_config('pls_fiscal_dados_dmed_pck.cd_pessoa_fisica_neg_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.cd_pessoa_titular_neg_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.cd_pessoa_pagador_neg_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.nr_seq_segurado_neg_w', null, false);
nr_seq_negociacao_w		:= null;
PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_tipo_contrato_neg_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_tipo_segurado_neg_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.cd_cgc_administradora_neg_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.nr_seq_parcela_cr_w', null, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_outro_tit_neg_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_negociado_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_diferenca_baixa_outro_tit_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.pr_diferenca_baixa_outro_tit_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_dif_desconto_baixa_tit_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_juros_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_total_multa_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_item_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_ant_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_ant_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_ant_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_ant_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.qt_nota_fiscal_w', 0, false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_baixa_rec_maior_w', 'N', false);
PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_valor_rescisao_maior_w', 'N', false);

if	((current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type = 0) and (current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.vl_rec_maior > 0)) then
	PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_baixa_rec_maior_w', 'S', false);
	PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_w', current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.vl_rec_maior, false);
end if;

select	coalesce(sum(a.vl_recebido),0) + coalesce(sum(a.vl_descontos),0) + coalesce(sum(vl_glosa),0) + coalesce(sum(vl_nota_credito),0),
	count(1),
	max(a.nr_sequencia)
into STRICT	current_setting('pls_fiscal_dados_dmed_pck.vl_total_baixas_w')::double,
	qt_baixas_w,
	nr_seq_tit_rec_liq_w
from	titulo_receber_liq a
where	a.nr_titulo = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_titulo
group by
	a.nr_titulo;

if (current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.ie_origem_titulo = 3) then
	select	count(1)
	into STRICT	current_setting('pls_fiscal_dados_dmed_pck.qt_nota_fiscal_w')::bigint
	from	nota_fiscal
	where	nr_seq_mensalidade = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_seq_mensalidade;

	select	sum(vl_item),
		count(1)
	into STRICT	vl_total_w,
		current_setting('pls_fiscal_dados_dmed_pck.qt_total_itens_w')::bigint
	from (SELECT	d.vl_item vl_item
		from	titulo_receber a,
			pls_mensalidade b,
			pls_mensalidade_segurado c,
			pls_mensalidade_seg_item d
		where	c.nr_sequencia = d.nr_seq_mensalidade_seg
		and	b.nr_sequencia = c.nr_seq_mensalidade
		and	b.nr_sequencia = a.nr_seq_mensalidade
		and	a.nr_titulo = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_titulo
		and	not exists (	select	1
					from	pls_mens_seg_item_aprop x
					where	d.nr_sequencia = x.nr_seq_item)
		
union all

		SELECT	e.vl_apropriacao  vl_item
		from	titulo_receber a,
			pls_mensalidade b,
			pls_mensalidade_segurado c,
			pls_mensalidade_seg_item d,
			pls_mens_seg_item_aprop e
		where	c.nr_sequencia = d.nr_seq_mensalidade_seg
		and	b.nr_sequencia = c.nr_seq_mensalidade
		and	b.nr_sequencia = a.nr_seq_mensalidade
		and	d.nr_sequencia = e.nr_seq_item
		and	a.nr_titulo = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_titulo) alias6;
	
	for r_c01_w in c01(	current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_seq_mensalidade,
				current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_titulo,
				current_setting('pls_fiscal_dados_dmed_pck.qt_nota_fiscal_w')::bigint) loop
		begin
		if (r_c01_w.ie_retencao = 'S') then
			vl_diferenca_tit_mens_trib_w	:= vl_diferenca_tit_mens_trib_w - r_c01_w.vl_tributo;
		elsif (r_c01_w.ie_retencao = 'D') then
			vl_diferenca_tit_mens_trib_w	:= vl_diferenca_tit_mens_trib_w + r_c01_w.vl_tributo;
		end if;
		
		if (r_c01_w.ie_origem_tributo = 'CD') then --CALCULADO E DIMINUIDO
			vl_diferenca_tit_mens_trib_w	:= vl_diferenca_tit_mens_trib_w + r_c01_w.vl_tributo;
		end if;
		end;
	end loop;

	PERFORM set_config('pls_fiscal_dados_dmed_pck.pr_baixa_w', current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type/(vl_total_w - vl_diferenca_tit_mens_trib_w), false);

	if (vl_diferenca_tit_mens_trib_w <> 0) then
		PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_w', current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type + (vl_diferenca_tit_mens_trib_w * current_setting('pls_fiscal_dados_dmed_pck.pr_baixa_w')::double), false);
	end if;
	
	if	((current_setting('pls_fiscal_dados_dmed_pck.qt_baixa_rescisao_w')::bigint > 0) and (current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%(rowtype.nr_seq_resc_fin IS NOT NULL AND rowtype.nr_seq_resc_fin::text <> ''))) then
		select	sum(vl_cancelar)
		into STRICT	current_setting('pls_fiscal_dados_dmed_pck.vl_total_rescisao_w')::double
		from	table(pls_obj_dados_rescisao_pck.obter_dados_rescisao(current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.nr_seq_resc_fin,1))
		where	ie_tipo_item = 1
		and	nr_seq_mensalidade = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_seq_mensalidade;
		
		if (current_setting('pls_fiscal_dados_dmed_pck.vl_total_rescisao_w')::double > current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type) then
			PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_valor_rescisao_maior_w', 'S', false);
		end if;
	end if;
elsif (current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.ie_origem_titulo = 4) then
	if (current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%(rowtype.nr_seq_negociacao_origem IS NOT NULL AND rowtype.nr_seq_negociacao_origem::text <> '')) then -- CARTAO, CHEQUE, ESPECIE
		select	count(1),
			sum(vl_item),
			sum(vl_juros_negociacao),
			sum(vl_multa_negociacao),
			sum(vl_desconto_negociacao),
			sum(vl_taxa_negociacao),
			sum(vl_juros_negociacao_ant),
			sum(vl_multa_negociacao_ant),
			sum(vl_taxa_negociacao_ant),
			sum(vl_desconto_negociacao_ant)
		into STRICT	current_setting('pls_fiscal_dados_dmed_pck.qt_total_itens_w')::bigint,
			vl_total_w,
			current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_ant_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_ant_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_ant_w')::double,
			current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_ant_w')::double
		from (SELECT	c.nr_seq_item_mens,
				c.nr_seq_item_mens_aprop,
				sum(c.vl_item) vl_item,
				sum(c.vl_juros_negociacao) vl_juros_negociacao,
				sum(c.vl_multa_negociacao) vl_multa_negociacao,
				sum(c.vl_desconto_negociacao) vl_desconto_negociacao,
				sum(c.vl_taxa_negociacao) vl_taxa_negociacao,
				sum(c.vl_juros_negociacao_ant) vl_juros_negociacao_ant,
				sum(c.vl_multa_negociacao_ant) vl_multa_negociacao_ant,
				sum(c.vl_taxa_negociacao_ant) vl_taxa_negociacao_ant,
				sum(c.vl_desconto_negociacao_ant) vl_desconto_negociacao_ant
			from	negociacao_cr a,
				negociacao_cr_parcela b,
				pls_negociacao_mens_fiscal c
			where	a.nr_sequencia = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_seq_negociacao_origem
			and	a.nr_sequencia = b.nr_seq_negociacao
			and	b.nr_sequencia = c.nr_seq_parcela
			group by
				c.nr_seq_item_mens,
				c.nr_seq_item_mens_aprop) alias34;

		select	sum(b.vl_parcela)
		into STRICT	current_setting('pls_fiscal_dados_dmed_pck.vl_negociado_w')::double
		from	negociacao_cr a,
			negociacao_cr_parcela b
		where	a.nr_sequencia = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_seq_negociacao_origem
		and	a.nr_sequencia = b.nr_seq_negociacao;
				
		nr_seq_negociacao_w	:= current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_seq_negociacao_origem;
	else
		obter_negociacao_parcela(current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.nr_titulo, current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%rowtype.dt_pagamento_previsto, nr_seq_negociacao_w, current_setting('pls_fiscal_dados_dmed_pck.nr_seq_parcela_cr_w')::negociacao_cr_parcela.nr_sequencia%type);

		if (current_setting('pls_fiscal_dados_dmed_pck.nr_seq_parcela_cr_w')::negociacao_cr_parcela.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
			select	sum(vl_item),
				count(1),
				max(vl_parcela),
				sum(vl_juros_negociacao),
				sum(vl_multa_negociacao),
				sum(vl_desconto_negociacao),
				sum(vl_taxa_negociacao),
				sum(vl_juros_negociacao_ant),
				sum(vl_multa_negociacao_ant),
				sum(vl_taxa_negociacao_ant),
				sum(vl_desconto_negociacao_ant)
			into STRICT	vl_total_w,
				current_setting('pls_fiscal_dados_dmed_pck.qt_total_itens_w')::bigint,
				current_setting('pls_fiscal_dados_dmed_pck.vl_negociado_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_ant_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_ant_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_ant_w')::double,
				current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_ant_w')::double
			from (SELECT	sum(b.vl_item) vl_item,
					b.nr_seq_item_mens,
					b.nr_seq_item_mens_aprop,
					max(a.vl_parcela) vl_parcela,
					sum(b.vl_juros_negociacao) vl_juros_negociacao,
					sum(b.vl_multa_negociacao) vl_multa_negociacao,
					sum(b.vl_desconto_negociacao) vl_desconto_negociacao,
					sum(b.vl_taxa_negociacao) vl_taxa_negociacao,
					sum(b.vl_juros_negociacao_ant) vl_juros_negociacao_ant,
					sum(b.vl_multa_negociacao_ant) vl_multa_negociacao_ant,
					sum(b.vl_taxa_negociacao_ant) vl_taxa_negociacao_ant,
					sum(b.vl_desconto_negociacao_ant) vl_desconto_negociacao_ant
				from	negociacao_cr_parcela a,
					pls_negociacao_mens_fiscal b
				where	a.nr_sequencia = b.nr_seq_parcela
				and	a.nr_sequencia = current_setting('pls_fiscal_dados_dmed_pck.nr_seq_parcela_cr_w')::negociacao_cr_parcela.nr_sequencia%type
				group by
					b.nr_seq_item_mens,
					b.nr_seq_item_mens_aprop) alias35;
		end if;
	end if;
	
	if (nr_seq_negociacao_w IS NOT NULL AND nr_seq_negociacao_w::text <> '') then
		select	a.cd_pessoa_fisica,
			a.nr_seq_segurado,
			coalesce(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado, 'PF'), pls_obter_dados_pagador(a.nr_seq_pagador, 'CPFP')), a.cd_pessoa_fisica) cd_pessoa_pagador,
			coalesce(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado, 'PF'), pls_obter_dados_pagador(a.nr_seq_pagador, 'CPFP')), a.cd_pessoa_fisica) cd_pessoa_titular,
			CASE WHEN current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_w')::titulo_receber%coalesce(rowtype.nr_seq_negociacao_origem::text, '') = '' THEN (select	count(1)										from	titulo_rec_negociado x,											titulo_receber y										where	y.nr_titulo = x.nr_titulo										and	x.nr_seq_negociacao = a.nr_sequencia										and	y.ie_origem_titulo not in ('3','4'))  ELSE 0 END  qt_outros_titulos
		into STRICT	current_setting('pls_fiscal_dados_dmed_pck.cd_pessoa_fisica_neg_w')::pessoa_fisica.cd_pessoa_fisica%type,
			current_setting('pls_fiscal_dados_dmed_pck.nr_seq_segurado_neg_w')::pls_segurado.nr_sequencia%type,
			current_setting('pls_fiscal_dados_dmed_pck.cd_pessoa_pagador_neg_w')::pessoa_fisica.cd_pessoa_fisica%type,
			current_setting('pls_fiscal_dados_dmed_pck.cd_pessoa_titular_neg_w')::pessoa_fisica.cd_pessoa_fisica%type,
			current_setting('pls_fiscal_dados_dmed_pck.qt_outros_titulos_w')::bigint
		from	negociacao_cr a
		where	a.nr_sequencia	= nr_seq_negociacao_w;
		
		if (current_setting('pls_fiscal_dados_dmed_pck.nr_seq_segurado_neg_w')::pls_segurado.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
			select	a.ie_tipo_segurado,
				CASE WHEN coalesce(b.cd_pf_estipulante::text, '') = '' THEN  'PJ'  ELSE 'PF' END ,
				b.cd_cgc_administradora
			into STRICT	current_setting('pls_fiscal_dados_dmed_pck.ie_tipo_segurado_neg_w')::pls_segurado.ie_tipo_segurado%type,
				current_setting('pls_fiscal_dados_dmed_pck.ie_tipo_contrato_neg_w')::varchar(2),
				current_setting('pls_fiscal_dados_dmed_pck.cd_cgc_administradora_neg_w')::pls_contrato.cd_cgc_administradora%type
			from	pls_segurado a,
				pls_contrato b
			where	b.nr_sequencia = a.nr_seq_contrato
			and	a.nr_sequencia = current_setting('pls_fiscal_dados_dmed_pck.nr_seq_segurado_neg_w')::pls_segurado.nr_sequencia%type;
		end if;
	end if;

	if (current_setting('pls_fiscal_dados_dmed_pck.qt_outros_titulos_w')::bigint > 0) then
		PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_recebido_outro_tit_neg_w', current_setting('pls_fiscal_dados_dmed_pck.vl_negociado_w')::double - vl_total_w, false);

		PERFORM set_config('pls_fiscal_dados_dmed_pck.pr_baixa_w', current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type/(vl_total_w + current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_outro_tit_neg_w')::double), false);
		
		PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_diferenca_baixa_outro_tit_w', current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type - (vl_total_w * current_setting('pls_fiscal_dados_dmed_pck.pr_baixa_w')::double), false);
			
		PERFORM set_config('pls_fiscal_dados_dmed_pck.pr_diferenca_baixa_outro_tit_w', current_setting('pls_fiscal_dados_dmed_pck.vl_diferenca_baixa_outro_tit_w')::double/current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type, false);
		
		PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_dif_desconto_baixa_tit_w', current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_desconto_w')::titulo_receber_liq.vl_descontos%type * current_setting('pls_fiscal_dados_dmed_pck.pr_diferenca_baixa_outro_tit_w')::double, false);
		
		if (current_setting('pls_fiscal_dados_dmed_pck.vl_dif_desconto_baixa_tit_w')::double > current_setting('pls_fiscal_dados_dmed_pck.vl_diferenca_baixa_outro_tit_w')::double) then
			PERFORM set_config('pls_fiscal_dados_dmed_pck.vl_dif_desconto_baixa_tit_w', current_setting('pls_fiscal_dados_dmed_pck.vl_diferenca_baixa_outro_tit_w')::double, false);
		end if;
	else
		PERFORM set_config('pls_fiscal_dados_dmed_pck.pr_baixa_w', current_setting('pls_fiscal_dados_dmed_pck.vl_recebido_w')::titulo_receber_liq.vl_recebido%type/(((vl_total_w + current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_ant_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_ant_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_ant_w')::double) - current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_w')::double) - current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_ant_w')::double), false);
	end if;
end if;

if	((current_setting('pls_fiscal_dados_dmed_pck.vl_total_baixas_w')::double = (((vl_total_w - vl_diferenca_tit_mens_trib_w + (current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_juros_negociacao_ant_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_multa_negociacao_ant_w')::double + current_setting('pls_fiscal_dados_dmed_pck.vl_taxa_negociacao_ant_w')::double)) - current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_w')::double) - current_setting('pls_fiscal_dados_dmed_pck.vl_desconto_negociacao_ant_w')::double)) and
	(((nr_seq_tit_rec_liq_w = current_setting('pls_fiscal_dados_dmed_pck.titulo_receber_liq_w')::titulo_receber_liq%rowtype.nr_sequencia) and (current_setting('pls_fiscal_dados_dmed_pck.qt_baixa_rescisao_w')::bigint = 0)) or ((qt_baixas_w = current_setting('pls_fiscal_dados_dmed_pck.qt_ordem_baixa_w')::bigint) and (current_setting('pls_fiscal_dados_dmed_pck.qt_baixa_rescisao_w')::bigint > 0))) and (qt_baixas_w > 1)) then
	PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_ultima_baixa_w', 'S', false);
else
	PERFORM set_config('pls_fiscal_dados_dmed_pck.ie_ultima_baixa_w', 'N', false);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_fiscal_dados_dmed_pck.buscar_dados () FROM PUBLIC;
