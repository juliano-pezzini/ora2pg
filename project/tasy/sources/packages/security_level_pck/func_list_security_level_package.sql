-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


    /**
     * Function to return a query with the invilid rules passed as parameters.
     * Example to call this function and return the rules 19, 16 and 2:
     * SELECT * FROM TABLE(SECURITY_LEVEL_PCK.FUNC_LIST_SECURITY_LEVEL('19,16,2'));
     */
CREATE OR REPLACE FUNCTION security_level_pck.func_list_security_level ( ds_listrules text ) RETURNS SETOF SECURITY_LEVEL_TABLE_TYPE AS $body$
DECLARE

        l_row  SECURITY_LEVEL_TYPE;
        IDs    invalid_list;
        l_count     integer;
        l_array     dbms_utility.lname_array;

BEGIN
        IF (LENGTH(ds_listrules) IS NOT NULL AND (LENGTH(ds_listrules))::text <> '') THEN
            RAISE NOTICE 'There are invalid rules ...';
            dbms_utility.comma_to_table(list => regexp_replace(ds_listrules,'(^|,)','\1x'), tablen => l_count, tab => l_array);
            For i in 1 .. l_count Loop
                SELECT  nr_sequencia, OBTER_DESC_EXPRESSAO(cd_exp_description, DS_DESCRIPTION) ds_description
                        INTO STRICT l_row.nr_sequence, l_row.ds_description
                    FROM    SECURITY_LEVEL_RULE
                    WHERE   nr_sequencia = (Substr(l_array(i),2))::numeric;
                RETURN NEXT l_row;
            END LOOP;
        ELSE
            RAISE NOTICE 'There are not invalid rules.';
        END IF;
        RETURN;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION security_level_pck.func_list_security_level ( ds_listrules text ) FROM PUBLIC;
