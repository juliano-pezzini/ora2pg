-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_smp_pck.gerar_itens ( regra_simulacao_p pls_smp_pck.regra_simulacao, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gerar os dados dos itens
	
	Procedimentos / Materiais: Para cada prestador, sera replicado todos os
	procedimentos e materiais informado nas regras de simulacao. A tabela de
	resultado e a pls_smp_result_item, que tera a ligacao com o prestador na 
	nr_seq_smp_result_prest.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
-- cursor com os prestadores
c01 CURSOR(	nr_seq_smp_pc	pls_smp.nr_sequencia%type) FOR
SELECT	nr_sequencia nr_seq_smp_result_prest
from	pls_smp_result_prest
where	nr_seq_smp	= nr_seq_smp_pc;

BEGIN

if (regra_simulacao_p.nr_sequencia IS NOT NULL AND regra_simulacao_p.nr_sequencia::text <> '') then
	
	for r_c01_w in c01(regra_simulacao_p.nr_sequencia) loop
		insert into pls_smp_result_item(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_smp_result_prest,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_material,
							qt_item,
							vl_simulacao,
							ie_tipo_vinculacao)
		SELECT	nextval('pls_smp_result_item_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c01_w.nr_seq_smp_result_prest,
			t.cd_procedimento,
			t.ie_origem_proced,
			t.nr_seq_material,
			t.qt_item,
			-- se o valor foi informado manualmente, entao o mesmo devera ser utilizado
			CASE WHEN t.ie_valor_manual='S' THEN  t.vl_manual * t.qt_item  ELSE 0 END ,
			-- se for valor informado manualmente, recebe 'M' - manual, senao 'A' - automatico
			CASE WHEN t.ie_valor_manual='S' THEN  'M'  ELSE 'A' END
		from (	SELECT	cd_procedimento,
					ie_origem_proced,
					null nr_seq_material,
					coalesce(qt_procedimento,0) qt_item,
					coalesce(ie_valor_manual,'N') ie_valor_manual,
					vl_manual_proc vl_manual
				from	pls_smp_proc
				where	nr_seq_smp	= regra_simulacao_p.nr_sequencia
				
union all

				select	null cd_procedimento,
					null ie_origem_proced,
					nr_seq_material,
					coalesce(qt_material,0) qt_item,
					coalesce(ie_valor_manual,'N') ie_valor_manual,
					vl_manual_mat vl_manual
				from	pls_smp_mat
				where	nr_seq_smp	= regra_simulacao_p.nr_sequencia
			) t;
			
		commit;
		
	end loop; -- c01 prestadores
	
end if; -- existe regra simulacao
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_smp_pck.gerar_itens ( regra_simulacao_p pls_smp_pck.regra_simulacao, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
