-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_smp_pck.gerar_precos_proc ( regra_simulacao_p pls_smp_pck.regra_simulacao, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gerar os precos dos procedimentos simulados
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_categoria_w		pls_categoria.nr_sequencia%type;
regra_simulacao_preco_proc_w	pls_smp_pck.regra_simulacao_preco_proc;
ie_regra_preco_w		pls_controle_estab.ie_regra_preco%type;
cd_area_procedimento_w		pls_regra_preco_proc.cd_area_procedimento%type;
cd_especialidade_w		pls_regra_preco_proc.cd_especialidade%type;
cd_grupo_proc_w			procedimento.cd_grupo_proc%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
ie_tipo_contrato_w		pls_intercambio.ie_tipo_contrato%type;
bind_sql_valor_w		sql_pck.t_dado_bind;

-- Informacoes sobre o beneficiario
c01 CURSOR(	nr_seq_smp_pc	pls_smp.nr_sequencia%type) FOR
SELECT	a.nr_seq_segurado,
	a.nr_sequencia nr_seq_smp_result_benef,
	(pls_obter_dados_segurado(a.nr_seq_segurado, 'NC'))::numeric  nr_seq_contrato,
	pls_obter_dados_segurado(a.nr_seq_segurado, 'TC') ie_tipo_contratacao,
	pls_obter_dados_segurado(a.nr_seq_segurado, 'NRCI') nr_seq_contrato_intercambio,
	pls_obter_dados_segurado(a.nr_seq_segurado, 'TCI') ie_tipo_contrato_intercambio,
	pls_obter_dados_segurado(a.nr_seq_segurado, 'ID') nr_idade,
	pls_obter_dados_segurado(a.nr_seq_segurado, 'TP') ie_tipo_beneficiario,
	c.nr_sequencia cd_plano,
	c.ie_preco,
	b.nr_seq_congenere,
	coalesce(b.nr_seq_intercambio,0) nr_seq_intercambio,
	b.nr_seq_ops_congenere,
	coalesce(b.ie_pcmso,'N') ie_pcmso,
	c.ie_acomodacao,
	coalesce(c.ie_franquia, 'N') ie_franquia,
	b.nr_seq_grupo_intercambio	
from	pls_smp_result_benef	a,
	pls_segurado		b,
	pls_plano		c
where	b.nr_sequencia	= a.nr_seq_segurado
and	c.nr_sequencia	= b.nr_seq_plano
and	a.nr_seq_smp	= nr_seq_smp_pc;


-- Informacoes sobre o procedimento
c02 CURSOR(	nr_seq_smp_result_benef_pc	pls_smp_result_benef.nr_sequencia%type) FOR
SELECT	c.cd_procedimento,
	c.ie_origem_proced,
	b.nr_seq_prestador,
	d.nr_seq_classificacao,
	d.ie_tipo_vinculo,
	d.nr_seq_tipo_prestador,
	d.cd_prestador,
	b.nr_sequencia nr_seq_smp_result_prest,
	c.qt_item,
	c.nr_sequencia nr_seq_item_proc,
	(	select	max(x.nr_seq_grupo_rec)
		from	procedimento	x
		where	x.cd_procedimento	= c.cd_procedimento
		and	x.ie_origem_proced	= c.ie_origem_proced
		and	x.ie_situacao		= 'A'
	) nr_seq_grupo_rec
FROM procedimento e, pls_smp_result_item c, pls_smp_result_benef a, pls_smp_result_prest b
LEFT OUTER JOIN pls_prestador d ON (b.nr_seq_prestador = d.nr_sequencia)
WHERE b.nr_seq_smp_result_benef	= a.nr_sequencia and c.nr_seq_smp_result_prest	= b.nr_sequencia  and e.cd_procedimento		= c.cd_procedimento and e.ie_origem_proced		= c.ie_origem_proced and e.ie_classificacao 		= 1  -- somente procedimentos que nao sao considerados "servicos"
  and c.ie_tipo_vinculacao		= 'A' -- somente os procedimentos que nao tiverem o preco informado manualmente
  and a.nr_sequencia			= nr_seq_smp_result_benef_pc;

BEGIN

-- Somente executa se tem uma regra de simulacao valida
if (regra_simulacao_p.nr_sequencia IS NOT NULL AND regra_simulacao_p.nr_sequencia::text <> '') then
	
	-- carregar dados que serao identicos na rotina inteira
	-- categoria
	begin
		select	nr_sequencia
		into STRICT	nr_seq_categoria_w
		from	pls_categoria
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	ie_situacao	= 'A'  LIMIT 1;
	exception
		when no_data_found then nr_seq_categoria_w := null;
	end;
	
	select  coalesce(max(ie_regra_preco),'S')
	into STRICT    ie_regra_preco_w        
	from    pls_controle_estab;
	
	-- carrega os beneficiarios
	for r_c01_w in c01(	regra_simulacao_p.nr_sequencia) loop
	
	
		-- contrato de intercambio do beneficiario
		if (r_c01_w.nr_seq_intercambio IS NOT NULL AND r_c01_w.nr_seq_intercambio::text <> '') then
			select	max(ie_tipo_contrato)
			into STRICT	ie_tipo_contrato_w
			from	pls_intercambio
			where	nr_sequencia = r_c01_w.nr_seq_intercambio;
		end if;
		
		-- carrega os prestadores e procedimentos que serao gerados o preco
		for r_c02_w in c02(r_c01_w.nr_seq_smp_result_benef) loop
			
		
			-- dados sobre o procedimento
			pls_obter_estrut_proc(	r_c02_w.cd_procedimento,
						r_c02_w.ie_origem_proced,           
						cd_area_procedimento_w,       
						cd_especialidade_w,           
						cd_grupo_proc_w,              
						ie_origem_proced_w);  	
			
			-- preenche tabela de parametros para buscar as regras do procedimento
			regra_simulacao_preco_proc_w	:= null;
			bind_sql_valor_w.delete;
			
			regra_simulacao_preco_proc_w.cd_estabelecimento			:= cd_estabelecimento_p;
			regra_simulacao_preco_proc_w.nr_seq_prestador			:= r_c02_w.nr_seq_prestador;
			regra_simulacao_preco_proc_w.nr_seq_categoria			:= nr_seq_categoria_w;
			regra_simulacao_preco_proc_w.dt_guia				:= regra_simulacao_p.dt_referencia;
			regra_simulacao_preco_proc_w.cd_edicao				:= null;
			regra_simulacao_preco_proc_w.cd_procedimento			:= r_c02_w.cd_procedimento;
			regra_simulacao_preco_proc_w.ie_origem_proced			:= r_c02_w.ie_origem_proced;
			regra_simulacao_preco_proc_w.nr_seq_tipo_acomodacao 		:= null;	
			regra_simulacao_preco_proc_w.ie_acomodacao_autorizada		:= null;
			regra_simulacao_preco_proc_w.nr_seq_tipo_atendimento 		:= null;
			regra_simulacao_preco_proc_w.nr_seq_clinica			:= null;
			regra_simulacao_preco_proc_w.nr_seq_plano			:= r_c01_w.cd_plano;
			regra_simulacao_preco_proc_w.ie_tipo_tabela			:= regra_simulacao_p.ie_regra_preco;
			regra_simulacao_preco_proc_w.nr_seq_contrato			:= r_c01_w.nr_seq_contrato;
			regra_simulacao_preco_proc_w.nr_seq_outorgante			:= null;
			regra_simulacao_preco_proc_w.nr_seq_procedimento		:= null;
			regra_simulacao_preco_proc_w.cd_convenio			:= null;
			regra_simulacao_preco_proc_w.cd_categoria			:= null;
			regra_simulacao_preco_proc_w.ie_tipo_contratacao		:= null;
			regra_simulacao_preco_proc_w.qt_dias_internacao			:= null;
			regra_simulacao_preco_proc_w.nr_seq_segurado			:= r_c01_w.nr_seq_segurado;
			regra_simulacao_preco_proc_w.nr_seq_contrato_intercambio	:= null;
			regra_simulacao_preco_proc_w.nr_seq_clas_prest_exec		:= null;
			regra_simulacao_preco_proc_w.nr_seq_clas_prest			:= r_c02_w.nr_seq_classificacao;
			regra_simulacao_preco_proc_w.cd_medico				:= null;
			regra_simulacao_preco_proc_w.ie_internado			:= 'S';
			regra_simulacao_preco_proc_w.ie_tecnica_utilizada 		:= null;
	--		regra_simulacao_preco_proc_w.ie_tipo_guia			:= null;
			regra_simulacao_preco_proc_w.ie_tipo_intercambio		:= 'A';
			regra_simulacao_preco_proc_w.sg_uf_operadora_intercambio	:= 'X';
			regra_simulacao_preco_proc_w.nr_seq_cbo_saude			:= null;
			regra_simulacao_preco_proc_w.ie_carater_internacao 		:= null;
			regra_simulacao_preco_proc_w.dt_procedimento			:= regra_simulacao_p.dt_referencia;
			regra_simulacao_preco_proc_w.ie_tipo_acomodacao_ptu		:= null;
			regra_simulacao_preco_proc_w.nr_seq_rp_combinada		:= null;
			regra_simulacao_preco_proc_w.ie_regra_preco			:= ie_regra_preco_w;
			regra_simulacao_preco_proc_w.ie_tipo_vinculo_prest		:= r_c02_w.ie_tipo_vinculo;
			regra_simulacao_preco_proc_w.nr_seq_tipo_prest_exec		:= r_c02_w.nr_seq_tipo_prestador;
			regra_simulacao_preco_proc_w.cd_prestador			:= r_c02_w.cd_prestador;
			regra_simulacao_preco_proc_w.ie_prestador_pagamento		:= null;
			regra_simulacao_preco_proc_w.nr_seq_prest_pgto_coleta		:= null;
			regra_simulacao_preco_proc_w.cd_grupo_proc			:= cd_grupo_proc_w;
			regra_simulacao_preco_proc_w.cd_especialidade			:= cd_especialidade_w;
			regra_simulacao_preco_proc_w.nr_seq_clinica			:= null;
			regra_simulacao_preco_proc_w.ie_preco				:= r_c01_w.ie_preco;
			regra_simulacao_preco_proc_w.nr_seq_congenere			:= r_c01_w.nr_seq_congenere;
			regra_simulacao_preco_proc_w.nr_seq_intercambio			:= r_c01_w.nr_seq_intercambio;
			regra_simulacao_preco_proc_w.qt_idade_benef			:= r_c01_w.nr_idade;
			regra_simulacao_preco_proc_w.ie_tipo_beneficiario		:= r_c01_w.ie_tipo_beneficiario;
			regra_simulacao_preco_proc_w.ie_tipo_contrato			:= ie_tipo_contrato_w;
			regra_simulacao_preco_proc_w.ie_cooperado			:= null;
			regra_simulacao_preco_proc_w.ie_acomodacao			:= r_c01_w.ie_acomodacao;
			regra_simulacao_preco_proc_w.ie_acomodacao_autorizada		:= null;
			regra_simulacao_preco_proc_w.ie_franquia			:= r_c01_w.ie_franquia;
			regra_simulacao_preco_proc_w.nr_seq_grupo_rec			:= r_c02_w.nr_seq_grupo_rec;
			regra_simulacao_preco_proc_w.ie_pcmso				:= r_c01_w.ie_pcmso;
			regra_simulacao_preco_proc_w.cd_area_procedimento		:= cd_area_procedimento_w;
			regra_simulacao_preco_proc_w.nr_seq_grupo_intercambio		:= r_c01_w.nr_seq_grupo_intercambio;
			regra_simulacao_preco_proc_w.nr_seq_ops_congenere		:= r_c01_w.nr_seq_ops_congenere;
			regra_simulacao_preco_proc_w.nr_seq_item_proc			:= r_c02_w.nr_seq_item_proc;
			regra_simulacao_preco_proc_w.ie_tipo_atendimento		:= 'A';
			
			CALL pls_smp_pck.gerar_regra_precos_proc(	regra_simulacao_p,
							nm_usuario_p,
							cd_estabelecimento_p,
							regra_simulacao_preco_proc_w);
			
			
		end loop; -- c02 - procedimentos
		
	end loop; -- fim c01 - beneficiarios
end if; -- Fim existe regra simulacao
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_smp_pck.gerar_precos_proc ( regra_simulacao_p pls_smp_pck.regra_simulacao, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
