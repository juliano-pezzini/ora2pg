-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.recalcula_vl_acat_rec_guia ( nr_seq_grg_guia_p pls_grg_guia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Recalcula os valores acatados e recursados da guia, com base nos itens
	
	Essa rotina nao deve alterar o valor da glosa, portanto ele e recuperado, mas 
	sempre sera o mesmo (buscado da propria guia), tambem sera utilizada operacoes
	blocadas, mesmo que por parametro apenas 1 guia seja atualizada, para manter a
	compatibilidade e performance com as demais rotinas que utilizam a gravacao dos dados
	
	
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- Tabelas virtuais, utilizadas por compatibilidade

tb_nr_sequencia_w	dbms_sql.number_table;
tb_vl_acatado_w		dbms_sql.number_table;
tb_vl_recursado_w	dbms_sql.number_table;
tb_vl_glosado_w		dbms_sql.number_table;


BEGIN


-- Sempre deve retornar 1 registro, por isso e enviado o index de vetor "0" fixo

select	max(t.nr_seq_grg_guia),
	max(t.vl_glosado),
	sum(t.vl_recursado) vl_recursado,
	sum(t.vl_acatado) vl_acatado
into STRICT	tb_nr_sequencia_w(0),
	tb_vl_glosado_w(0),
	tb_vl_recursado_w(0),
	tb_vl_acatado_w(0)
from (	SELECT	a.nr_seq_grg_guia,
		b.vl_glosado,
		coalesce(a.vl_recursado, 0) vl_recursado,
		coalesce(a.vl_acatado, 0) vl_acatado
	from	pls_grg_guia_proc	a,
		pls_grg_guia		b
	where	b.nr_sequencia		= a.nr_seq_grg_guia
	and	b.nr_sequencia		= nr_seq_grg_guia_p
	
union all

	SELECT	a.nr_seq_grg_guia,
		b.vl_glosado,
		coalesce(a.vl_recursado, 0) vl_recursado,
		coalesce(a.vl_acatado, 0) vl_acatado
	from	pls_grg_guia_mat	a,
		pls_grg_guia		b
	where	b.nr_sequencia		= a.nr_seq_grg_guia
	and	b.nr_sequencia		= nr_seq_grg_guia_p ) t
group by t.nr_seq_grg_guia, t.vl_glosado;
	
	
-- Verifica se encontrou de fato algum registro, neste caso manda para o banco

if ((tb_nr_sequencia_w(0) IS NOT NULL AND (tb_nr_sequencia_w(0))::text <> '')) then

	SELECT * FROM pls_rec_glosa_emp_pck.atual_valores_rec_guia(	tb_nr_sequencia_w, tb_vl_acatado_w, tb_vl_recursado_w, tb_vl_glosado_w, nm_usuario_p, 'S', 'S') INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_vl_acatado_w := _ora2pg_r.tb_vl_acatado_p; tb_vl_recursado_w := _ora2pg_r.tb_vl_recursado_p; tb_vl_glosado_w := _ora2pg_r.tb_vl_glosado_p;

end if;	


end;

					
					

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.recalcula_vl_acat_rec_guia ( nr_seq_grg_guia_p pls_grg_guia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
