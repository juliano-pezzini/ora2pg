-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.gerar_guia_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera as guias conforme os protocolos do recurso

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- tabelas virtuais

tb_nr_sequencia_w		dbms_sql.number_table;
tb_nr_seq_grg_protocolo_w	dbms_sql.number_table;
tb_cd_guia_w			dbms_sql.varchar2_table;
tb_nr_guia_prestador_w		dbms_sql.varchar2_table;
tb_nr_seq_segurado_w		dbms_sql.number_table;
tb_nr_seq_guia_envio_w		dbms_sql.number_table;
tb_nr_seq_dma_guia_w		dbms_sql.number_table;
tb_dt_inicio_fat_imp_w		dbms_sql.date_table;
tb_dt_fim_fat_imp_w		dbms_sql.date_table;
tb_vl_cobrado_fat_w		dbms_sql.number_table;
tb_vl_glosa_w			dbms_sql.number_table;


-- carrega as guias

c01 CURSOR(nr_seq_demost_analise_pc	pls_dma_demons_analise.nr_sequencia%type) FOR
	SELECT	nextval('pls_grg_guia_seq') nr_sequencia,
		c.nr_sequencia nr_seq_grg_protocolo,
		a.nr_guia_operadora cd_guia,
		a.nr_guia_prestador,
		(	SELECT	max(x.nr_seq_segurado)
			from	pls_fatura_guia_envio	x,
				pls_fat_guia_arquivo	y
			where	y.nr_sequencia		= x.nr_seq_guia_arquivo
			and	y.nr_sequencia		= c.nr_lote_prestador
			and	x.cd_usuario_plano	= a.nr_carteirinha_benef
			and	x.cd_guia		= a.nr_guia_operadora
			and	x.cd_guia_prestador	= a.nr_guia_prestador) nr_seq_segurado,
			
		(	select	max(x.nr_sequencia)
			from	pls_fatura_guia_envio	x,
				pls_fat_guia_arquivo	y
			where	y.nr_sequencia		= x.nr_seq_guia_arquivo
			and	y.nr_sequencia		= c.nr_lote_prestador
			and	x.cd_usuario_plano	= a.nr_carteirinha_benef
			and	x.cd_guia		= a.nr_guia_operadora
			and	x.cd_guia_prestador	= a.nr_guia_prestador) nr_seq_guia_envio,
		a.nr_sequencia nr_seq_dma_guia,
		a.dt_inicio_faturamento dt_inicio_fat_imp,
		a.dt_fim_faturamento dt_fim_fat_imp,
		a.vl_informado vl_cobrado_fat,
		a.vl_glosa
	from	pls_dma_guia_imp	a,
		pls_dma_protocolo_imp	b,
		pls_grg_protocolo	c,
		pls_dma_prestador_imp	d,
		pls_dma_cabecalho_imp	e
	where	a.nr_seq_dma_protocolo	= b.nr_sequencia
	and	c.nr_seq_dma_protocolo	= b.nr_sequencia
	and	d.nr_sequencia		= b.nr_seq_dma_prestador
	and	e.nr_sequencia		= d.nr_seq_dma_cabecalho
	and	e.nr_seq_dma_analise	= nr_seq_demost_analise_pc
	and	exists (	select	1
				from	pls_dma_guia_imp	x
				where	x.nr_sequencia		= a.nr_sequencia
				and	x.vl_glosa		> 0
				
union all

				select	1
				from	pls_dma_procedimento_imp	y
				where	y.nr_seq_dma_guia		= a.nr_sequencia
				and (coalesce(y.vl_informado,0) - coalesce(y.vl_liberado,0))> 0);

BEGIN

begin

	-- Carrega as guias

	open c01(nr_seq_demost_analise_p);
	loop
	fetch c01 bulk collect into	tb_nr_sequencia_w,
					tb_nr_seq_grg_protocolo_w,
					tb_cd_guia_w,
					tb_nr_guia_prestador_w,
					tb_nr_seq_segurado_w,
					tb_nr_seq_guia_envio_w,
					tb_nr_seq_dma_guia_w,
					tb_dt_inicio_fat_imp_w,
					tb_dt_fim_fat_imp_w,
					tb_vl_cobrado_fat_w,
					tb_vl_glosa_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_sequencia_w.count = 0;
		
		-- joga no banco

		SELECT * FROM pls_rec_glosa_emp_pck.grava_guia_recurso(	tb_nr_sequencia_w, tb_nr_seq_grg_protocolo_w, tb_cd_guia_w, tb_nr_guia_prestador_w, tb_nr_seq_segurado_w, tb_nr_seq_guia_envio_w, tb_nr_seq_dma_guia_w, tb_dt_inicio_fat_imp_w, tb_dt_fim_fat_imp_w, tb_vl_cobrado_fat_w, tb_vl_glosa_w, nm_usuario_p, 'N', 'S') INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_nr_seq_grg_protocolo_w := _ora2pg_r.tb_nr_seq_grg_protocolo_p; tb_cd_guia_w := _ora2pg_r.tb_cd_guia_p; tb_nr_guia_prestador_w := _ora2pg_r.tb_nr_guia_prestador_p; tb_nr_seq_segurado_w := _ora2pg_r.tb_nr_seq_segurado_p; tb_nr_seq_guia_envio_w := _ora2pg_r.tb_nr_seq_guia_envio_p; tb_nr_seq_dma_guia_w := _ora2pg_r.tb_nr_seq_dma_guia_p; tb_dt_inicio_fat_imp_w := _ora2pg_r.tb_dt_inicio_fat_imp_p; tb_dt_fim_fat_imp_w := _ora2pg_r.tb_dt_fim_fat_imp_p; tb_vl_cobrado_fat_w := _ora2pg_r.tb_vl_cobrado_fat_p; tb_vl_glosa_w := _ora2pg_r.tb_vl_glosa_p;
					
	end loop; -- fim carga dados
	
	if (c01%isopen) then

		close c01;
	end if;
exception

	when others then
		
		if (c01%isopen) then
		
			close c01;
		end if;
		
		CALL CALL pls_rec_glosa_emp_pck.exibe_msg_erro_padrao();
end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.gerar_guia_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
