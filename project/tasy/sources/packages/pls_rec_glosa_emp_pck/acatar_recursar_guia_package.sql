-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.acatar_recursar_guia ( nr_seq_guia_p pls_grg_guia.nr_sequencia%type, ie_acao_p text, ds_justificativa_p pls_grg_guia_glosa.ds_justificativa%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Acata ou recursa a guia por completo, conforme parametro
	

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

-- tratamento de excecao

ds_msg_erro_w		varchar(4000):= '';
ds_callstack_erro_w	varchar(4000):= '';


-- tabelas virtuais

tb_nr_seq_item_w	dbms_sql.number_table;
tb_vl_acatado_w		dbms_sql.number_table;
tb_vl_recursado_w	dbms_sql.number_table;

-- Embora seja apenas 1 registro por vez, e feito um cursor e vetor para reapoveitamento do codigo

c01 CURSOR(	nr_seq_guia_pc	pls_grg_guia.nr_sequencia%type,
		ie_acao_pc	text) FOR
	SELECT	a.nr_sequencia,
		CASE WHEN ie_acao_pc='A' THEN  a.vl_glosado  ELSE 0.00 END  vl_acatado,
		CASE WHEN ie_acao_pc='R' THEN  a.vl_glosado  ELSE 0.00 END  vl_recursado
	from	pls_grg_guia	a
	where	a.nr_sequencia		= nr_seq_guia_pc;


BEGIN

-- Verifica se e possivel acatar ou recursar a guia

CALL pls_rec_glosa_emp_pck.valida_acatar_recursar_guia(nr_seq_guia_p, ds_justificativa_p, ie_acao_p);
begin

	-- carrega a guia

	open c01(nr_seq_guia_p, ie_acao_p);
	loop
	fetch c01 bulk collect into	tb_nr_seq_item_w,
					tb_vl_acatado_w,
					tb_vl_recursado_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_item_w.count = 0;
	
		SELECT * FROM pls_rec_glosa_emp_pck.grava_acatar_recursar_guia(	tb_nr_seq_item_w, tb_vl_acatado_w, tb_vl_recursado_w, 'G', 'P', nm_usuario_p, 'S', 'S') INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_guia_p; tb_vl_acatado_w := _ora2pg_r.tb_vl_acatado_p; tb_vl_recursado_w := _ora2pg_r.tb_vl_recursado_p;
		
	end loop; -- fim loop 
	close c01;
	
	-- Atualiza a justificativa das glosas

	update	pls_grg_guia_glosa
	set	ds_justificativa	= ds_justificativa_p
	where	nr_seq_grg_guia		= nr_seq_guia_p;
	
	commit;

exception
	when others then
	
		if (c01%isopen) then
			
			close c01;
		end if;

		
		ds_msg_erro_w		:= sqlerrm;
		ds_callstack_erro_w	:= dbms_utility.format_error_backtrace;
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(843136,  'ERRO=' ||ds_msg_erro_w ||';CALL=' || ds_callstack_erro_w);
		
end;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.acatar_recursar_guia ( nr_seq_guia_p pls_grg_guia.nr_sequencia%type, ie_acao_p text, ds_justificativa_p pls_grg_guia_glosa.ds_justificativa%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
