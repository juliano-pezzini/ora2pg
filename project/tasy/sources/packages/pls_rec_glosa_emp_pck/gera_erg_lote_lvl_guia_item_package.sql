-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.gera_erg_lote_lvl_guia_item ( nr_seq_grg_lote_p pls_grg_lote.nr_sequencia%type, ie_objeto_recurso_p pls_erg_cabecalho.ie_objeto_recurso%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o lote de envio de recurso de glosa a nivel de guia OU a nivel de item, 
	conforme parametro.
	
	Foi feito essa "juncao", pois existem muitas rotinas compartilhadas, entao
	e mais seguro controlar por parametro, do que gerar codigo duplicado.

	Esta rotina gera um novo lote de dados, conforme o necessidade das guias, 
	seja o tipo de recurso por Guia ou Item
	
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

nr_sequencia_w		pls_erg_recurso.nr_sequencia%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
nr_seq_grg_lote_w	pls_grg_lote.nr_sequencia%type;
dt_geracao_lote_w	pls_erg_recurso.dt_geracao_lote%type;
qt_itens_validos_w	integer;


-- Carrega os lotes, gerando as informacoes das guias

c01 CURSOR(	nr_seq_grg_lote_pc	pls_grg_lote.nr_sequencia%type,
		ie_objeto_recurso_pc	pls_erg_cabecalho.ie_objeto_recurso%type) FOR
	SELECT	v.cd_estabelecimento,
		v.nr_seq_grg_lote,
		v.dt_geracao_lote,
		v.nr_protocolo,
		v.qt_itens_validos
	from (	-- Primeiro o nivel de "Guia"
		SELECT	x.cd_estabelecimento,
			x.nr_sequencia nr_seq_grg_lote,
			x.nr_sequencia,
			clock_timestamp() dt_geracao_lote,
			y.nr_protocolo,
			-- levanta se possui itens validos conforme o nivel

			(	select	count(1) contador
					from	pls_grg_guia		a						
					where	a.nr_seq_grg_protocolo	= y.nr_sequencia
					-- Apenas as guias que nao tiverem nenhum item

					and (	select	count(1)
							from	pls_grg_guia_proc	z
							where	z.ie_origem_acao	in ('P', 'I')
							and	z.nr_seq_grg_guia	= a.nr_sequencia) = 0
					and (	select	count(1)
							from	pls_grg_guia_mat	z
							where	z.ie_origem_acao	in ('P', 'I')
							and	z.nr_seq_grg_guia	= a.nr_sequencia) = 0) qt_itens_validos

		from	pls_grg_lote		x,
			pls_grg_protocolo	y
		where	y.nr_seq_grg_lote	= x.nr_sequencia
		and	x.nr_sequencia		= nr_seq_grg_lote_pc
		and	ie_objeto_recurso_pc	= 'G'
		
union all

		-- Nivel de "Item"

		select	x.cd_estabelecimento,
			x.nr_sequencia nr_seq_grg_lote,
			x.nr_sequencia,
			clock_timestamp() dt_geracao_lote,
			y.nr_protocolo,
			(	select	sum(contador)
				from (	select	count(1) contador
					from	pls_grg_protocolo	a,
						pls_grg_guia		b,
						pls_grg_guia_proc	c
					where	b.nr_seq_grg_protocolo	= a.nr_sequencia
					and	c.nr_seq_grg_guia	= b.nr_sequencia
					and	c.vl_recursado		> 0
					-- Apenas as guias que possuirem algum item com recursa a nivel de "Item"

					and (	select	count(1)
							from	pls_grg_guia_proc	z
							where	z.ie_origem_acao	= 'I'
							and	z.nr_seq_grg_guia	= b.nr_sequencia) > 0
					and	a.nr_seq_grg_lote	= nr_seq_grg_lote_pc
					
union all

					select	count(1) contador
					from	pls_grg_protocolo	a,
						pls_grg_guia		b,
						pls_grg_guia_mat	c
					where	b.nr_seq_grg_protocolo	= a.nr_sequencia
					and	c.nr_seq_grg_guia	= b.nr_sequencia
					and	c.vl_recursado		> 0
					-- Apenas as guias que possuirem algum item com recursa a nivel de "Item"

					and (	select	count(1)
							from	pls_grg_guia_mat	z
							where	z.ie_origem_acao	= 'I'
							and	z.nr_seq_grg_guia	= b.nr_sequencia) > 0
					and	a.nr_seq_grg_lote	= nr_seq_grg_lote_pc) t ) qt_itens_validos

		from	pls_grg_lote		x,
			pls_grg_protocolo	y
		where	y.nr_seq_grg_lote	= x.nr_sequencia
		and	x.nr_sequencia		= nr_seq_grg_lote_pc
		and	ie_objeto_recurso_pc	= 'I' ) v
	group by v.cd_estabelecimento, v.nr_seq_grg_lote, v.dt_geracao_lote, v.nr_protocolo, v.qt_itens_validos;
BEGIN



for r_c01_w in c01(nr_seq_grg_lote_p, ie_objeto_recurso_p) loop

	-- verifica se existem informacoes para gerar o lote conforme o nivel passado por parametro

	if (coalesce(r_c01_w.qt_itens_validos, 0) > 0) then

		-- levanta a PK

		select	nextval('pls_erg_recurso_seq')
		into STRICT	nr_sequencia_w
		;
			
		-- Manda o lote novo para o banco

		CALL pls_rec_glosa_emp_pck.grava_erg_lote(	nr_sequencia_w,
				r_c01_w.cd_estabelecimento,
				r_c01_w.nr_seq_grg_lote,
				r_c01_w.dt_geracao_lote,
				nm_usuario_p,
				'N');
		
		-- gera o cabecalho

		CALL pls_rec_glosa_emp_pck.gera_erg_cabecalho(	nr_sequencia_w,
					ie_objeto_recurso_p,
					r_c01_w.nr_protocolo,
					nm_usuario_p,
					'N');

		-- gera os prestadores

		CALL pls_rec_glosa_emp_pck.gera_erg_prestador(	nr_sequencia_w,
					nm_usuario_p,
					'N');
		-- Gera as guias, com a definicao de que tipo de recurso, a rotina vai 

		-- gerar tambem as glosas das guias OU os itens

		CALL pls_rec_glosa_emp_pck.gera_erg_guia(	nr_sequencia_w,
				ie_objeto_recurso_p,
				nm_usuario_p,
				'N');
				
				
		CALL pls_rec_glosa_emp_pck.atual_erg_vl_recur_cab(	nr_sequencia_w,
					nm_usuario_p,
					'N');
	end if;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.gera_erg_lote_lvl_guia_item ( nr_seq_grg_lote_p pls_grg_lote.nr_sequencia%type, ie_objeto_recurso_p pls_erg_cabecalho.ie_objeto_recurso%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
