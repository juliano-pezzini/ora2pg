-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.gerar_glosas_protocolo ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera as glosas para os protocolos, com base no demonstrativo

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_nr_sequencia_w		dbms_sql.number_table;
tb_nr_seq_grg_protocolo_w	dbms_sql.number_table;
tb_nr_seq_motivo_glosa_w	dbms_sql.number_table;
tb_nr_seq_dma_prot_glosa_w	dbms_sql.number_table;
tb_ds_justificativa_w		dbms_sql.varchar2_table;


-- Carrega as glosas

c01 CURSOR(nr_seq_demost_analise_pc	pls_dma_demons_analise.nr_sequencia%type) FOR
	SELECT	nextval('pls_grg_protocolo_glosa_seq'),
		a.nr_sequencia nr_seq_grg_protocolo,
		pls_obter_seq_motivo_glosa(c.cd_glosa) nr_seq_motivo_glosa,
		null ds_justificativa,
		c.nr_sequencia nr_seq_dma_prot_glosa
	from	pls_grg_protocolo	a,
		pls_dma_protocolo_imp	b,
		pls_dma_prot_glosa_imp	c,
		pls_dma_prestador_imp	d,
		pls_dma_cabecalho_imp	e
	where	b.nr_sequencia		= a.nr_seq_dma_protocolo
	and	c.nr_seq_dma_protocolo	= b.nr_sequencia
	and	d.nr_sequencia		= b.nr_seq_dma_prestador
	and	e.nr_sequencia		= d.nr_seq_dma_cabecalho
	and	e.nr_seq_dma_analise	= nr_seq_demost_analise_pc;

BEGIN

begin

	-- Carrega as glosas

	open c01(nr_seq_demost_analise_p);
	loop
	fetch c01 bulk collect into	tb_nr_sequencia_w,
					tb_nr_seq_grg_protocolo_w,
					tb_nr_seq_motivo_glosa_w,
					tb_ds_justificativa_w,
					tb_nr_seq_dma_prot_glosa_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_sequencia_w.count = 0;

		-- joga no banco

		SELECT * FROM pls_rec_glosa_emp_pck.grava_glosas_protocolo(	tb_nr_sequencia_w, tb_nr_seq_grg_protocolo_w, tb_nr_seq_motivo_glosa_w, tb_ds_justificativa_w, tb_nr_seq_dma_prot_glosa_w, nm_usuario_p, 'N', 'S') INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_nr_seq_grg_protocolo_w := _ora2pg_r.tb_nr_seq_grg_protocolo_p; tb_nr_seq_motivo_glosa_w := _ora2pg_r.tb_nr_seq_motivo_glosa_p; tb_ds_justificativa_w := _ora2pg_r.tb_ds_justificativa_p; tb_nr_seq_dma_prot_glosa_w := _ora2pg_r.tb_nr_seq_dma_prot_glosa_p;

	end loop; -- fim navegou pelas glosas

	if (c01%isopen) then

		close c01;
	end if;

exception
	when others then
		if (c01%isopen) then
		
			close c01;
		end if;
		
		CALL CALL pls_rec_glosa_emp_pck.exibe_msg_erro_padrao();	
end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.gerar_glosas_protocolo ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
