-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.gerar_proc_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera os procedimentos para as guias

	Na estrutura do XML de demonstrativo, nao e feita uma distincao clara
	sobre o que e procedimento ou material, entao e necessario fazer um join
	com a tabela de faturamento que originou o envio, atraves do tipo de tabela e 
	codigo do procedimento

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

-- Tabelas virtuais

tb_nr_sequencia_w		dbms_sql.number_table;
tb_nr_seq_grg_guia_w		dbms_sql.number_table;
tb_nr_seq_guia_proc_w		dbms_sql.number_table;
tb_nr_seq_dma_procedimento_w	dbms_sql.number_table;
tb_cd_procedimento_w		dbms_sql.varchar2_table;
tb_ie_origem_proced_w		dbms_sql.varchar2_table;
tb_cd_procedimento_imp_w	dbms_sql.varchar2_table;
tb_cd_tabela_imp_w		dbms_sql.varchar2_table;
tb_vl_cobrado_fat_w		dbms_sql.number_table;
tb_vl_glosado_w			dbms_sql.number_table;
tb_vl_recursado_w		dbms_sql.number_table;
tb_vl_acatado_w			dbms_sql.number_table;
tb_dt_realizacao_imp_w		dbms_sql.date_table;

-- Carrega os procedimentos

c01 CURSOR(nr_seq_demost_analise_pc	pls_dma_demons_analise.nr_sequencia%type) FOR
	SELECT	nextval('pls_grg_guia_proc_seq') nr_sequencia,
		t.nr_seq_grg_guia,
		t.nr_seq_guia_proc,
		t.nr_seq_dma_procedimento,
		t.cd_procedimento,
		t.ie_origem_proced,
		t.cd_procedimento_imp,
		t.cd_tabela_imp,
		t.vl_cobrado_fat,
		t.vl_glosado,
		t.vl_recursado,
		t.vl_acatado,
		t.dt_realizacao_imp
	from (	-- busca os procedimentos convertidos no faturamento	
		SELECT	a.nr_sequencia nr_seq_grg_guia,
			g.nr_sequencia nr_seq_guia_proc,
			c.nr_sequencia nr_seq_dma_procedimento,
			coalesce(g.cd_proced_conversao, g.cd_procedimento) cd_procedimento,
			g.ie_origem_proced,
			c.cd_procedimento cd_procedimento_imp,
			c.cd_tabela cd_tabela_imp,
			g.vl_procedimento vl_cobrado_fat,
			(c.vl_informado - c.vl_liberado) vl_glosado,
			null vl_recursado,
			null vl_acatado,
			c.dt_realizacao dt_realizacao_imp
		from	pls_grg_guia			a,
			pls_dma_guia_imp		b,
			pls_dma_procedimento_imp	c,
			pls_dma_protocolo_imp		d,
			pls_dma_prestador_imp		e,
			pls_dma_cabecalho_imp		f,
			pls_fat_guia_envio_proc		g,
			pls_fatura_guia_envio		h
		where	b.nr_sequencia		= a.nr_seq_dma_guia
		and	c.nr_seq_dma_guia	= b.nr_sequencia
		and	d.nr_sequencia		= b.nr_seq_dma_protocolo
		and	e.nr_sequencia		= d.nr_seq_dma_prestador
		and	f.nr_sequencia		= e.nr_seq_dma_cabecalho
		and	h.nr_seq_guia_arquivo	= d.nr_lote_prestador
		and	h.cd_usuario_plano	= b.nr_carteirinha_benef
		and	h.cd_guia		= b.nr_guia_operadora
		and	h.cd_guia_prestador	= b.nr_guia_prestador
		and	g.cd_tipo_tabela	= c.cd_tabela
		and	g.cd_proced_conversao	= c.cd_procedimento
		and	g.nr_seq_guia_envio	= h.nr_sequencia
		and	f.nr_seq_dma_analise	= nr_seq_demost_analise_pc
		-- Busca os procedimentos que nao foram convertidos no faturamento

		
union all

		select	a.nr_sequencia nr_seq_grg_guia,
			g.nr_sequencia nr_seq_guia_proc,
			c.nr_sequencia nr_seq_dma_procedimento,
			coalesce(g.cd_proced_conversao, g.cd_procedimento) cd_procedimento,
			g.ie_origem_proced,
			c.cd_procedimento cd_procedimento_imp,
			c.cd_tabela cd_tabela_imp,
			g.vl_procedimento vl_cobrado_fat,
			(c.vl_informado - c.vl_liberado) vl_glosado,
			null vl_recursado,
			null vl_acatado,
			c.dt_realizacao dt_realizacao_imp
		from	pls_grg_guia			a,
			pls_dma_guia_imp		b,
			pls_dma_procedimento_imp	c,
			pls_dma_protocolo_imp		d,
			pls_dma_prestador_imp		e,
			pls_dma_cabecalho_imp		f,
			pls_fat_guia_envio_proc		g,
			pls_fatura_guia_envio		h
		where	b.nr_sequencia		= a.nr_seq_dma_guia
		and	c.nr_seq_dma_guia	= b.nr_sequencia
		and	d.nr_sequencia		= b.nr_seq_dma_protocolo
		and	e.nr_sequencia		= d.nr_seq_dma_prestador
		and	f.nr_sequencia		= e.nr_seq_dma_cabecalho
		and	h.nr_seq_guia_arquivo	= d.nr_lote_prestador
		and	h.cd_usuario_plano	= b.nr_carteirinha_benef
		and	h.cd_guia		= b.nr_guia_operadora
		and	h.cd_guia_prestador	= b.nr_guia_prestador
		and	g.cd_tipo_tabela	= c.cd_tabela
		and	g.cd_procedimento	= c.cd_procedimento
		and	g.nr_seq_guia_envio	= h.nr_sequencia
		and	coalesce(g.cd_proced_conversao::text, '') = ''  -- Apenas os procedimentos que nao foram convertidos
		and	f.nr_seq_dma_analise	= nr_seq_demost_analise_pc
		) t
	where	t.vl_glosado > 0;

BEGIN

begin

	-- Carrega os procedimentos

	open c01(nr_seq_demost_analise_p);
	loop
	fetch c01 bulk collect into	tb_nr_sequencia_w,
					tb_nr_seq_grg_guia_w,
					tb_nr_seq_guia_proc_w,
					tb_nr_seq_dma_procedimento_w,
					tb_cd_procedimento_w,
					tb_ie_origem_proced_w,
					tb_cd_procedimento_imp_w,
					tb_cd_tabela_imp_w,
					tb_vl_cobrado_fat_w,
					tb_vl_glosado_w,
					tb_vl_recursado_w,
					tb_vl_acatado_w,
					tb_dt_realizacao_imp_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_sequencia_w.count = 0;

		SELECT * FROM pls_rec_glosa_emp_pck.grava_proc_recurso(	tb_nr_sequencia_w, tb_nr_seq_grg_guia_w, tb_nr_seq_guia_proc_w, tb_nr_seq_dma_procedimento_w, tb_cd_procedimento_w, tb_ie_origem_proced_w, tb_cd_procedimento_imp_w, tb_cd_tabela_imp_w, tb_vl_cobrado_fat_w, tb_vl_glosado_w, tb_vl_recursado_w, tb_vl_acatado_w, tb_dt_realizacao_imp_w, nm_usuario_p, 'N', 'S') INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_nr_seq_grg_guia_w := _ora2pg_r.tb_nr_seq_grg_guia_p; tb_nr_seq_guia_proc_w := _ora2pg_r.tb_nr_seq_guia_proc_p; tb_nr_seq_dma_procedimento_w := _ora2pg_r.tb_nr_seq_dma_procedimento_p; tb_cd_procedimento_w := _ora2pg_r.tb_cd_procedimento_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_cd_procedimento_imp_w := _ora2pg_r.tb_cd_procedimento_imp_p; tb_cd_tabela_imp_w := _ora2pg_r.tb_cd_tabela_imp_p; tb_vl_cobrado_fat_w := _ora2pg_r.tb_vl_cobrado_fat_p; tb_vl_glosado_w := _ora2pg_r.tb_vl_glosado_p; tb_vl_recursado_w := _ora2pg_r.tb_vl_recursado_p; tb_vl_acatado_w := _ora2pg_r.tb_vl_acatado_p; tb_dt_realizacao_imp_w := _ora2pg_r.tb_dt_realizacao_imp_p;
	end loop; -- fim procedimentos

	if (c01%isopen) then
		
			close c01;
	end if;
exception
	
	when others then
		
		if (c01%isopen) then
		
			close c01;
		end if;
		
		CALL CALL pls_rec_glosa_emp_pck.exibe_msg_erro_padrao();
end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.gerar_proc_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
