-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.gerar_glosa_mat_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera as glosas para os materiais 

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- tabelas virtuais

tb_nr_sequencia_w		dbms_sql.number_table;
tb_nr_seq_grg_mat_w		dbms_sql.number_table;
tb_nr_seq_motivo_glosa_w	dbms_sql.number_table;
tb_ds_justificativa_w		dbms_sql.varchar2_table;
tb_nr_seq_dma_proc_glosa_w	dbms_sql.number_table;

-- carrega as glosas

c01 CURSOR(	nr_seq_demost_analise_pc	pls_dma_demons_analise.nr_sequencia%type) FOR
	SELECT	nextval('pls_grg_guia_mat_glosa_seq') nr_sequencia,
		a.nr_sequencia nr_seq_grg_mat,
		pls_obter_seq_motivo_glosa(c.cd_glosa) nr_seq_motivo_glosa,
		null ds_justificativa,
		c.nr_sequencia nr_seq_dma_proc_glosa
	from	pls_grg_guia_mat		a,
		pls_dma_procedimento_imp	b,
		pls_dma_proc_glosa_imp		c,
		pls_dma_guia_imp		d,
		pls_dma_protocolo_imp		e,
		pls_dma_prestador_imp		f,
		pls_dma_cabecalho_imp		g
	where	b.nr_sequencia			= a.nr_seq_dma_procedimento
	and	c.nr_seq_dma_procedimento	= b.nr_sequencia
	and	d.nr_sequencia			= b.nr_seq_dma_guia
	and	e.nr_sequencia			= d.nr_seq_dma_protocolo
	and	f.nr_sequencia			= e.nr_seq_dma_prestador
	and	g.nr_sequencia			= f.nr_seq_dma_cabecalho
	and	g.nr_seq_dma_analise		= nr_seq_demost_analise_pc;
	

BEGIN

begin

	--Carrega as glosas

	open c01(nr_seq_demost_analise_p);
	loop
	fetch c01 bulk collect into	tb_nr_sequencia_w,
					tb_nr_seq_grg_mat_w,
					tb_nr_seq_motivo_glosa_w,
					tb_ds_justificativa_w,
					tb_nr_seq_dma_proc_glosa_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_sequencia_w.count = 0;

		SELECT * FROM pls_rec_glosa_emp_pck.grava_glosa_mat_recurso(	tb_nr_sequencia_w, tb_nr_seq_grg_mat_w, tb_nr_seq_motivo_glosa_w, tb_ds_justificativa_w, tb_nr_seq_dma_proc_glosa_w, nm_usuario_p, 'N', 'S') INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_nr_seq_grg_mat_w := _ora2pg_r.tb_nr_seq_grg_mat_p; tb_nr_seq_motivo_glosa_w := _ora2pg_r.tb_nr_seq_motivo_glosa_p; tb_ds_justificativa_w := _ora2pg_r.tb_ds_justificativa_p; tb_nr_seq_dma_proc_glosa_w := _ora2pg_r.tb_nr_seq_dma_proc_glosa_p;
						
	end loop; -- Fim carga de glosas
	
	if (c01%isopen) then
		
			close c01;
	end if;
exception

	when others then
	
		if (c01%isopen) then
		
			close c01;
		end if;
		
		CALL CALL pls_rec_glosa_emp_pck.exibe_msg_erro_padrao();
end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.gerar_glosa_mat_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
