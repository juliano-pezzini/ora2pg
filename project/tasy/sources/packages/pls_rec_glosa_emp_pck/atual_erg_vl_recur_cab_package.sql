-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.atual_erg_vl_recur_cab ( nr_seq_erg_recurso_p pls_erg_recurso.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Atualiza o valor recursado do cabecalho.

	Conforme for gerado os recursos, sera definido a forma de totalizar o cabecalho

-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- Primeiro busca os cabecalhos gerados a partir de glosa de protocolo, a principio o schema tiss determina apenas 1 cabecalho por lote e protocolo

c01 CURSOR(	nr_seq_erg_recurso_pc	pls_erg_recurso.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_erg_cabecalho,
		sum((	SELECT	max((	select	sum(z.vl_recursado) vl_recursado
					from	pls_grg_guia		z
					where	z.nr_seq_grg_protocolo	= x.nr_sequencia))
			from	pls_erg_protocolo	x
			where	x.nr_sequencia	= c.nr_seq_grg_protocolo)) vl_recursado
	from	pls_erg_recurso		a,
		pls_erg_cabecalho	b,
		pls_erg_protocolo	c
	where	b.nr_seq_erg_recurso	= a.nr_sequencia
	and	c.nr_seq_erg_cabecalho	= b.nr_sequencia
	and	b.ie_objeto_recurso	= '1'
	and	a.nr_sequencia		= nr_seq_erg_recurso_pc
	group by b.nr_sequencia;

-- Busca agora os cabecalhos a nivel de guia

c02 CURSOR(	nr_seq_erg_recurso_pc	pls_erg_recurso.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_erg_cabecalho,
	sum((	SELECT	sum(z.vl_recursado) vl_recursado
		from	pls_grg_guia		z
		where	z.nr_sequencia	= c.nr_seq_grg_guia )) vl_recursado
	from	pls_erg_recurso		a,
		pls_erg_cabecalho	b,
		pls_erg_guia		c
	where	b.nr_seq_erg_recurso	= a.nr_sequencia
	and	c.nr_seq_erg_cabecalho	= b.nr_sequencia
	and	b.ie_objeto_recurso	= '2'
	-- Quando e recursado a nivel de guia, nao pode existir itens

	and (	select	count(1)
			from	pls_erg_guia_item	x
			where	x.nr_seq_erg_guia	= c.nr_sequencia) = 0
	and	a.nr_sequencia		= nr_seq_erg_recurso_pc
	group by b.nr_sequencia;

-- Busca agora os cabecalhos a nivel de item

c03 CURSOR(	nr_seq_erg_recurso_pc	pls_erg_recurso.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_erg_cabecalho,
	sum((	SELECT	sum(z.vl_recursado) vl_recursado
		from	pls_grg_guia		z
		where	z.nr_sequencia	= c.nr_seq_grg_guia )) vl_recursado
	from	pls_erg_recurso		a,
		pls_erg_cabecalho	b,
		pls_erg_guia		c
	where	b.nr_seq_erg_recurso	= a.nr_sequencia
	and	c.nr_seq_erg_cabecalho	= b.nr_sequencia
	and	b.ie_objeto_recurso	= '2'
	-- Quando e recursado a nivel de guia, nao pode existir itens

	and (	select	count(1)
			from	pls_erg_guia_item	x
			where	x.nr_seq_erg_guia	= c.nr_sequencia) > 0
	and	a.nr_sequencia		= nr_seq_erg_recurso_pc
	group by b.nr_sequencia;

BEGIN

-- Totaliza primeiro o cabecalho com recurso a nivel de protocolo

for r_c01_w in c01(nr_seq_erg_recurso_p) loop

	update	pls_erg_cabecalho
	set	vl_total_recursado	= r_c01_w.vl_recursado,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= r_c01_w.nr_seq_erg_cabecalho;

end loop;

-- Totaliza o cabecalho a nivel de guia

for r_c02_w in c02(nr_seq_erg_recurso_p) loop

	update	pls_erg_cabecalho
	set	vl_total_recursado	= r_c02_w.vl_recursado,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= r_c02_w.nr_seq_erg_cabecalho;

end loop;


-- Totaliza o cabecalho a nivel de itme

for r_c03_w in c03(nr_seq_erg_recurso_p) loop

	update	pls_erg_cabecalho
	set	vl_total_recursado	= r_c03_w.vl_recursado,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= r_c03_w.nr_seq_erg_cabecalho;

end loop;

if (coalesce(ie_commit_p, 'S') = 'S') then

	commit;
end if;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.atual_erg_vl_recur_cab ( nr_seq_erg_recurso_p pls_erg_recurso.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) FROM PUBLIC;
