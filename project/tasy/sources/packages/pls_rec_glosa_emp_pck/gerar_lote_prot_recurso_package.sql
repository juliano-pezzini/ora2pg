-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_rec_glosa_emp_pck.gerar_lote_prot_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera os lotes de recurso e o protocolo, com base em um demonstrativo de analise ja importado

	A geracao do lote de recurso pode ser particionada, devido a analise de demonstrativo permite
	o agrupamento de diversos envios em um unico arquivo.
	
	Para facilitar o controle do usuario, cada lote de recurso vai ser vinculado a uma fatura distinta,
	entao uma analise pode gerar diversos lotes, portanto os protocolos da respectiva fatura 
	ja serao inseridos aqui
	
	Essa rotina faz apenas o levantamento e controle do que deve ser gravado,
	ela devera chamar outras rotinas para realizar a gravacao dos dodos especificamente
	
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- carrega os lotes de recurso que precisam ser gerados por nr_lote_prestador

c01 CURSOR(	nr_seq_demost_analise_pc	pls_dma_demons_analise.nr_sequencia%type) FOR
	SELECT	nextval('pls_grg_lote_seq') nr_sequencia,
		nr_seq_dma_analise,
		cd_estabelecimento,
		nr_seq_dmp_pagto,
		nr_seq_pls_fatura,
		nr_lote_prestador,
		ie_status
	from (	SELECT	t.nr_seq_dma_analise,
			t.cd_estabelecimento,
			t.nr_seq_dmp_pagto,
			t.nr_seq_pls_fatura,
			t.nr_lote_prestador,
			'A' ie_status
		from (	select	a.nr_sequencia nr_seq_dma_analise,
				a.cd_estabelecimento,
				null nr_seq_dmp_pagto,
				(	select	max(y.nr_seq_fatura)
					from	pls_fat_guia_arquivo	x,
						pls_lote_fat_guia_envio	y
					where	x.nr_seq_lote		= y.nr_sequencia
					and	x.nr_sequencia		= d.nr_lote_prestador) nr_seq_pls_fatura,
				d.nr_lote_prestador
			from	pls_dma_demons_analise	a,
				pls_dma_cabecalho_imp	b,
				pls_dma_prestador_imp	c,
				pls_dma_protocolo_imp	d
			where	b.nr_seq_dma_analise	= a.nr_sequencia
			and	c.nr_seq_dma_cabecalho	= b.nr_sequencia
			and	d.nr_seq_dma_prestador	= c.nr_sequencia
			and	a.nr_sequencia		= nr_seq_demost_analise_pc
			and	exists (	select	1
						from	pls_dma_protocolo_imp	x
						where	x.nr_sequencia		= d.nr_sequencia
						and	x.vl_glosa		> 0
						
union all

						select	1
						from	pls_dma_guia_imp	x
						where	x.nr_seq_dma_protocolo	= d.nr_sequencia
						and	x.vl_glosa		> 0
						
union all

						select	1
						from	pls_dma_guia_imp		x,
							pls_dma_procedimento_imp	y,
							pls_dma_proc_glosa_imp		z
						where	y.nr_seq_dma_guia		= x.nr_sequencia
						and	z.nr_seq_dma_procedimento	= y.nr_sequencia			
						and	x.nr_seq_dma_protocolo		= d.nr_sequencia
						and	z.vl_glosa			> 0)) t
		group by t.nr_seq_dma_analise, t.cd_estabelecimento, t.nr_seq_dmp_pagto, t.nr_seq_pls_fatura, t.nr_lote_prestador) alias6;
	
BEGIN

-- Carrega os lotes ja separados por envio

for r_c01_w in c01(nr_seq_demost_analise_p) loop

	-- Grava o novo lote

	CALL pls_rec_glosa_emp_pck.grava_lote_recurso(	r_c01_w.nr_sequencia,
				r_c01_w.nr_seq_dma_analise,
				r_c01_w.cd_estabelecimento,
				r_c01_w.nr_seq_dmp_pagto,
				r_c01_w.nr_seq_pls_fatura,
				r_c01_w.ie_status,
				nm_usuario_p,
				'N');
	
	CALL pls_rec_glosa_emp_pck.gerar_protocolo_recurso(r_c01_w.nr_seq_dma_analise,
				r_c01_w.nr_sequencia,
				r_c01_w.nr_lote_prestador,
				nm_usuario_p,
				'N');
				

end loop; --fim geracao lotes


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rec_glosa_emp_pck.gerar_lote_prot_recurso ( nr_seq_demost_analise_p pls_dma_demons_analise.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
