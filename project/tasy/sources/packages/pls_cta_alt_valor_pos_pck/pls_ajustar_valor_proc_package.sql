-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Rotina utilizada na antiga geração de pos-estabelecido
CREATE OR REPLACE PROCEDURE pls_cta_alt_valor_pos_pck.pls_ajustar_valor_proc ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, qt_liberada_p pls_conta_proc_v.qt_procedimento%type, vl_liberado_p pls_conta_proc_v.vl_liberado%type, vl_unitario_p pls_conta_proc_v.vl_unitario%type, vl_liberado_hi_p pls_conta_proc_v.vl_liberado_hi%type, vl_liberado_mat_p pls_conta_proc_v.vl_liberado_material%type, vl_liberado_co_p pls_conta_proc_v.vl_liberado_co%type, vl_lib_taxa_hi_p pls_conta_proc_v.vl_lib_taxa_servico%type, vl_lib_taxa_mat_p pls_conta_proc_v.vl_lib_taxa_material%type, vl_lib_taxa_co_p pls_conta_proc_v.vl_taxa_co%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_tipo_conta_w 		pls_conta_v.ie_tipo_conta%type;
ie_tipo_liberacao_w		pls_conta_proc_v.ie_tipo_liberacao%type;
vl_glosa_w			pls_conta_proc_v.vl_glosa%type;
vl_glosa_co_w			pls_conta_proc_v.vl_glosa_co%type;
vl_glosa_hi_w			pls_conta_proc_v.vl_glosa_hi%type;
vl_glosa_material_w		pls_conta_proc_v.vl_glosa_material%type;
vl_glosa_taxa_co_w		pls_conta_proc_v.vl_glosa_taxa_co%type;
vl_glosa_taxa_hi_w		pls_conta_proc_v.vl_glosa_taxa_servico%type;
vl_glosa_taxa_material_w	pls_conta_proc_v.vl_glosa_taxa_material%type;
vl_liberado_w			pls_conta_proc_v.vl_liberado%type;

C01 CURSOR(nr_seq_conta_pos_estab_pc	pls_conta_pos_estabelecido.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia 		nr_seq_pos_estabelecido,
		b.vl_liberado_co,	
		b.vl_liberado_hi,          
		b.vl_liberado_material,             
		b.vl_lib_taxa_co,          
		b.vl_lib_taxa_material,    
		b.vl_lib_taxa_servico      
	from	pls_conta_pos_estabelecido 	a,
		pls_conta_proc_v		b
	where	a.nr_sequencia	= nr_seq_conta_pos_estab_pc
	and	b.nr_sequencia	= a.nr_seq_conta_proc
	and	b.nr_seq_conta	= a.nr_seq_conta
	and	((a.ie_situacao		= 'A') or (coalesce(a.ie_situacao::text, '') = ''));
BEGIN

for r_C01_w in C01(nr_seq_conta_pos_estab_p) loop
	
	-- se  for intercâmbio
	-- cálculo das glosas
	-- se der valor negativo, a glosa é sempre zero
	vl_glosa_co_w 			:= pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_co_p, r_C01_w.vl_liberado_co);
	vl_glosa_hi_w 			:= pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_hi_p, r_C01_w.vl_liberado_hi);
	vl_glosa_material_w 		:= pls_util_cta_pck.pls_obter_vl_glosa(vl_liberado_mat_p, r_C01_w.vl_liberado_material);
	vl_glosa_taxa_co_w 		:= pls_util_cta_pck.pls_obter_vl_glosa(vl_lib_taxa_co_p, r_C01_w.vl_lib_taxa_co);
	vl_glosa_taxa_hi_w 		:= pls_util_cta_pck.pls_obter_vl_glosa(vl_lib_taxa_hi_p, r_C01_w.vl_lib_taxa_servico);
	vl_glosa_taxa_material_w 	:= pls_util_cta_pck.pls_obter_vl_glosa(vl_lib_taxa_mat_p, r_C01_w.vl_lib_taxa_material);
	-- soma tudo
	vl_glosa_w := (	vl_glosa_co_w + vl_glosa_hi_w + vl_glosa_material_w + vl_glosa_taxa_co_w + vl_glosa_taxa_hi_w +
			vl_glosa_taxa_material_w);
	if (vl_liberado_p > 0) and (qt_liberada_p = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(331628);
	end if;
	
	vl_liberado_w := coalesce(vl_liberado_p,0);
	
	if	(coalesce(vl_liberado_p,0) <> (coalesce(vl_liberado_hi_p,0) + coalesce(vl_liberado_co_p,0) + coalesce(vl_liberado_mat_p,0) + coalesce(vl_lib_taxa_hi_p,0) + coalesce(vl_lib_taxa_co_p,0) + coalesce(vl_lib_taxa_mat_p,0))) then
		vl_liberado_w := coalesce(vl_liberado_hi_p,0) + coalesce(vl_liberado_co_p,0) + coalesce(vl_liberado_mat_p,0) + coalesce(vl_lib_taxa_hi_p,0) + coalesce(vl_lib_taxa_co_p,0) + coalesce(vl_lib_taxa_mat_p,0);
	end if;
	
	update 	pls_conta_pos_estabelecido set
		vl_liberado_co_fat  		= vl_liberado_co_p,
		vl_liberado_hi_fat 		= vl_liberado_hi_p,             
		vl_liberado_material_fat      	= vl_liberado_mat_p,  
		vl_lib_taxa_co			= vl_lib_taxa_co_p,                  
		vl_lib_taxa_material 		= vl_lib_taxa_mat_p,           
		vl_lib_taxa_servico       	= vl_lib_taxa_hi_p, 
		vl_administracao		= vl_lib_taxa_mat_p + vl_lib_taxa_hi_p + vl_lib_taxa_co_p,
		vl_glosa_co_fat			= vl_glosa_co_w,          
		vl_glosa_hi_fat			= vl_glosa_hi_w,        
		vl_glosa_material_fat		= vl_glosa_material_w,   
		vl_glosa_taxa_co        	= vl_glosa_taxa_co_w,
		vl_glosa_taxa_material  	= vl_glosa_taxa_material_w,
		vl_glosa_taxa_servico   	= vl_glosa_taxa_hi_w,		
		vl_beneficiario			= vl_liberado_w,
		qt_item				= qt_liberada_p,
		nm_usuario			= nm_usuario_p,
		dt_atualizacao			= clock_timestamp(),
		ie_status_faturamento		= 'L',
		vl_medico			= vl_liberado_hi_p,
		vl_custo_operacional		= vl_liberado_co_p,	
		vl_materiais			= vl_liberado_mat_p,
		ie_tipo_liberacao		= 'U'
	where	nr_sequencia			= r_C01_w.nr_seq_pos_estabelecido;
	
end loop;
						
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_alt_valor_pos_pck.pls_ajustar_valor_proc ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_pos_estab_p pls_conta_pos_estabelecido.nr_sequencia%type, qt_liberada_p pls_conta_proc_v.qt_procedimento%type, vl_liberado_p pls_conta_proc_v.vl_liberado%type, vl_unitario_p pls_conta_proc_v.vl_unitario%type, vl_liberado_hi_p pls_conta_proc_v.vl_liberado_hi%type, vl_liberado_mat_p pls_conta_proc_v.vl_liberado_material%type, vl_liberado_co_p pls_conta_proc_v.vl_liberado_co%type, vl_lib_taxa_hi_p pls_conta_proc_v.vl_lib_taxa_servico%type, vl_lib_taxa_mat_p pls_conta_proc_v.vl_lib_taxa_material%type, vl_lib_taxa_co_p pls_conta_proc_v.vl_taxa_co%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
