-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_a500_pck.gerencia_integracao_cmb ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


c01 CURSOR FOR
SELECT 	prp.nr_sequencia
from 	pls_recebimento_ptu prp
where 	prp.ie_status 		= 'A'
and 	prp.ie_tipo_arquivo	= 'A500';

c02 CURSOR(	nr_sequencia_pc bigint,
		ie_tipo_arquivo_pc text) FOR
	SELECT 	prpa.nm_arquivo,
		prpa.ds_endereco_arquivo,
		prpa.ds_arquivo,
		prpa.ie_tipo_arquivo,
		prpa.nr_sequencia
	from 	pls_recebimento_ptu_arq prpa
	where 	prpa.nr_seq_receb_ptu = nr_sequencia_pc
	and 	prpa.ie_tipo_arquivo = ie_tipo_arquivo_pc;

c03 CURSOR(	nr_sequencia_pc bigint,
		ie_tipo_arquivo_pc text) FOR
	SELECT 	prpa.nm_arquivo,
		prpa.ds_endereco_arquivo,
		prpa.ds_arquivo,
		prpa.ie_tipo_arquivo,
		prpa.nr_sequencia
	from 	pls_recebimento_ptu_arq prpa
	where 	prpa.nr_seq_receb_ptu = nr_sequencia_pc
	and 	prpa.ie_tipo_arquivo = ie_tipo_arquivo_pc;
	
	
	
nr_seq_arq_xml_w  	ptu_aviso_arq_xml.nr_sequencia%type;
nr_seq_fatura_w   	ptu_fatura.nr_sequencia%type;
ds_erro_w		varchar(4000);

nr_seq_nota_cobranca_w	ptu_nota_cobranca.nr_sequencia%type;

BEGIN

-- limpa os arquivos antigos

CALL ptu_a500_imp_pck.limpar_arq_a500_xml('A500',nm_usuario_p, cd_estabelecimento_p);

-- para cada arquivo aguardando importacao

for r01 in c01 loop

	update 	pls_recebimento_ptu prp
	set 	prp.ie_status = 'E',
		prp.dt_atualizacao = clock_timestamp(),
		prp.nm_usuario = nm_usuario_p
	where 	prp.nr_sequencia = r01.nr_sequencia;

	commit;

	-- pega o arquivo da fatura para importar

	for r02 in c02(r01.nr_sequencia,'F') loop

		begin

		insert into ptu_aviso_arq_xml(	nr_sequencia,      		dt_atualizacao,		nm_usuario,
						dt_atualizacao_nrec,		nm_usuario_nrec,	ds_arquivo,
						ie_tipo_arquivo,		nm_arquivo)		
		values (			nextval('ptu_aviso_arq_xml_seq'),	clock_timestamp(),		nm_usuario_p,
						clock_timestamp(),			nm_usuario_p,		r02.ds_arquivo,
						'A500',				r02.nm_arquivo) returning nr_sequencia into nr_seq_arq_xml_w;
		nr_seq_fatura_w := null;

		commit;

		nr_seq_fatura_w := pls_a500_pck.gerencia_imp_a500_xml(nr_seq_arq_xml_w, 'A500', clock_timestamp(), nm_usuario_p, cd_estabelecimento_p, nr_seq_fatura_w);

		if 	(nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then
			
			-- Ira gerar as contas medicas da fatura em questao

			CALL pls_a500_pck.gerar_conta_medica_pend_a500(nr_seq_fatura_w,cd_estabelecimento_p,nm_usuario_p);

			-- ira gerar as analises das contas da fatura em questao

			CALL pls_a500_pck.gerar_analise_pend_a500(nr_seq_fatura_w,cd_estabelecimento_p,nm_usuario_p);

			-- pega os anexos para vincular

			for r03 in c03(r01.nr_sequencia,'A') loop

				begin

					nr_seq_nota_cobranca_w	:= pls_obter_dados_arq_nf_ptu(	nr_seq_fatura_p => nr_seq_fatura_w,
												nm_arquivo_p 	=> r03.nm_arquivo,
												ie_opcao_p 	=> 'A');

					if 	nr_seq_nota_cobranca_w <> 0 then
						CALL pls_gravar_anexo_nota_cobr(	nr_seq_nota_cobr_p 	=> nr_seq_fatura_w,
										ds_arquivo_p 		=> r03.ds_endereco_arquivo,
										nm_usuario_p 		=> nm_usuario_p);
					else
						CALL pls_gravar_anexo_fatura(	nr_seq_fatura_p => nr_seq_fatura_w,
										ds_arquivo_p 	=> r03.ds_endereco_arquivo,
										nm_usuario_p 	=> nm_usuario_p);
					end if;

				exception
				when others then
					ds_erro_w := 'Erro ao processar o anexo('|| r02.nr_sequencia ||') da fatura ('||nr_seq_fatura_w||'). Erro: ' || sqlerrm;
					rollback;
				
					update 	pls_recebimento_ptu 	prp
					set 	prp.ie_status 		= 'R',
						prp.dt_atualizacao 	= clock_timestamp(),
						prp.nm_usuario 		= nm_usuario_p,
						prp.nr_seq_fatura 	= nr_seq_fatura_w
					where 	prp.nr_sequencia 	= r01.nr_sequencia;

					update 	pls_recebimento_ptu_arq prpa
					set 	prpa.ds_erro 		= ds_erro_w
					where 	prpa.nr_sequencia 	= r03.nr_sequencia;
					commit;
				end;

				CALL pls_replica_anexo_fatura_ptu(	nr_seq_fatura_p => nr_seq_fatura_w,
								nm_usuario_p 	=> nm_usuario_p);

				commit;

			end loop;

			update 	pls_recebimento_ptu prp
			set 	prp.ie_status = 'I',
				prp.dt_atualizacao = clock_timestamp(),
				prp.nm_usuario = nm_usuario_p,
				prp.nr_seq_fatura = nr_seq_fatura_w
			where 	prp.nr_sequencia = r01.nr_sequencia;
			
			commit;
		end if;
		exception
			when others then
				
				rollback;
				ds_erro_w := 'Erro ao processar a fatura ('||nr_seq_fatura_w||'). Erro: ' || sqlerrm;

				-- atualizado com erro

				update 	pls_recebimento_ptu 	prp
				set 	prp.ie_status 		= 'R',
					prp.dt_atualizacao 	= clock_timestamp(),
					prp.nm_usuario 		= nm_usuario_p,
					prp.nr_seq_fatura 	= nr_seq_fatura_w
				where 	prp.nr_sequencia 	= r01.nr_sequencia;
			
				update 	pls_recebimento_ptu_arq prpa
				  set 	prpa.ds_erro 	    	= ds_erro_w
				where 	prpa.nr_sequencia 	= r02.nr_sequencia;
				commit;
				
		end;

	end loop;
  
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_a500_pck.gerencia_integracao_cmb ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
