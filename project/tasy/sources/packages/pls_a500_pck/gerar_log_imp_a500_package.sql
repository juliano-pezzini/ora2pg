-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_a500_pck.gerar_log_imp_a500 ( nr_seq_fatura_p ptu_fatura.nr_sequencia%type, ie_opcao_p ptu_processo_fatura.ie_tipo_processo%type, ie_estagio_p ptu_processo_fatura.ie_status_processo%type, nm_usuario_p text, dt_inicio_importacao_p ptu_processo_fatura.dt_inicio%type, dt_fim_importacao_p ptu_processo_fatura.dt_fim%type, ds_erro_p ptu_processo_fatura.ds_erro%type, ie_commit_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o log contendo a etapa da fatura no que se diz respeito a importacao,
	bem como o estagio atual da etapa
	
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [X] Tasy (Delphi/Java) [X] Portal [X]  Relatorios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

qt_historico_w		bigint;			
					

BEGIN
select	count(1)
into STRICT	qt_historico_w
from	ptu_processo_fatura
where	nr_seq_fatura		= nr_seq_fatura_p
and	ie_tipo_processo	= ie_opcao_p;

if (qt_historico_w = 0) and (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then
	insert into ptu_processo_fatura(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_fatura,
		dt_inicio,
		dt_fim,
		ie_tipo_processo,
		ie_status_processo,
		ds_erro)
	values (nextval('ptu_processo_fatura_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_fatura_p,
		coalesce(dt_inicio_importacao_p,clock_timestamp()),
		dt_fim_importacao_p,
		ie_opcao_p,
		ie_estagio_p,
		ds_erro_p);
else
	update	ptu_processo_fatura
	set	dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		ds_erro			= coalesce(ds_erro_p,ds_erro),
		dt_fim			= coalesce(dt_fim_importacao_p,dt_fim),
		ie_status_processo	= ie_estagio_p
	where	nr_seq_fatura		= nr_seq_fatura_p
	and	ie_tipo_processo	= ie_opcao_p;
end if;

if (coalesce(ie_commit_p, 'N') = 'S') then
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_a500_pck.gerar_log_imp_a500 ( nr_seq_fatura_p ptu_fatura.nr_sequencia%type, ie_opcao_p ptu_processo_fatura.ie_tipo_processo%type, ie_estagio_p ptu_processo_fatura.ie_status_processo%type, nm_usuario_p text, dt_inicio_importacao_p ptu_processo_fatura.dt_inicio%type, dt_fim_importacao_p ptu_processo_fatura.dt_fim%type, ds_erro_p ptu_processo_fatura.ds_erro%type, ie_commit_p text) FROM PUBLIC;
