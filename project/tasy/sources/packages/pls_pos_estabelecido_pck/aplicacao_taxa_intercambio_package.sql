-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



/*
	Nessa etapa, processa as taxas de interc_mbio j_ identificadas sobre todos os itens eleg_veis para geracao de p_s. Chegando aqui, a incid_ncia de interc_mbio sobre
	cada _tem estar_ definida pelas etapas anteriores, existindo apenas a preocupacao de ajustar os valores conforme essa taxa j_ existente.
*/



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.aplicacao_taxa_intercambio ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
vl_total_w	pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_dif_w	pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_materiais_w	w_pls_conta_pos_proc.vl_materiais%type;
vl_co_w		w_pls_conta_pos_proc.vl_custo_operacional%type;
vl_medico_w	w_pls_conta_pos_proc.vl_medico%type;
tb_seq_item_w 	pls_util_cta_pck.t_number_table;
tb_materiais_w	pls_util_cta_pck.t_number_table;
tb_medico_w	pls_util_cta_pck.t_number_table;
tb_co_w		pls_util_cta_pck.t_number_table;
i		integer := 0;

/*
	Somente ser_o processados registros cujo campo ie_gera_valor_pos_estab for S e SB e tx_administracao > 0
	Pois s_o as condicaes para geracao de p_s e aplicabilidade de taxa de interc_mbio. 
	se ie_nao_gera_tx_inter da regra de pre_o selecionada for n_o aplicar taxa, n_o
	dever_ aplicar taxa de interc_mbio para os procedimento e se for Aplicar taxa exceto filme, ent_o dever_ 
	aplicar a taxa de interc_mbio para os valores de custo operacional e m_dico(caso tiver esses valores ) e n_o
	aplicar a taxa ao valor individual vl_materiais. 
*/

C01 CURSOR FOR
	SELECT	proc.nr_sequencia,
		(vl_custo_operacional + vl_materiais + vl_medico) vl_total,
		proc.vl_custo_operacional,
		proc.vl_materiais,
		proc.vl_medico,
		proc.tx_administracao,
		proc.ie_nao_gera_tx_inter
	from	w_pls_conta_pos_proc proc
	where	proc.ie_gera_valor_pos_estab in ('S', 'SB')
	and 	coalesce(proc.nr_seq_regra_preco::text, '') = ''
	and	proc.tx_administracao > 0;
	
/*	Para os materiais, o valor total _ constituido apenas pelo vl_materiais(n_o entram valor de CO e m_dico)
	se ie_nao_gera_tx_inter da regra de pre_o selecionada for Aplicar taxa exceto filme e n_o aplicar taxa, n_o
	dever_ aplicar taxa de interc_mbio para materiais, pois os mesmo _ consituido apenas do vl_materiais.  Esse 
	controle _ feito na leitura da regra, setando o tx_administracao = 0 para quando esse campo for 'S' ou 'F'
*/

C02 CURSOR FOR
	SELECT	mat.nr_sequencia,
		(mat.vl_materiais_calc * dividir(mat.tx_administracao, 100)) vl_materiais_com_taxa
	from	w_pls_conta_pos_mat mat
	where	mat.ie_gera_valor_pos_estab in ('S', 'SB')
	and 	coalesce(mat.nr_seq_regra_preco::text, '') = ''
	and	mat.tx_administracao > 0;
	
BEGIN
	--Chama a rotina primeiramente apenas para resetar as estruturas.

	SELECT * FROM pls_pos_estabelecido_pck.atualiza_tx_inter_proc(tb_seq_item_w, tb_materiais_w, tb_medico_w, tb_co_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_w; tb_materiais_w := _ora2pg_r.tb_materiais_w; tb_medico_w := _ora2pg_r.tb_medico_w; tb_co_w := _ora2pg_r.tb_co_w;
	--Aplicacao de taxa de interc_mbio aos procedimentos selecionados.

	for r_c01_w in C01 loop
	
		vl_medico_w	:= dividir(( r_c01_w.vl_medico * r_c01_w.tx_administracao),100);
		vl_co_w		:= dividir(( r_c01_w.vl_custo_operacional * r_c01_w.tx_administracao),100);
		
		--Se na regra de pre_o foi identificado que deve cobrar tx_intercambio exceto filme, ent_o n_o poder_ adicionar o valor de interc_mbio para esse subvalor.

		--Dentro dessa condicao tamb_m tem a verificacao de diverg_ncia, que s_ faz sentido verificar quando o itnerc_mbio _ aplicado a todo o valor, Se apenas for 

		--aplicado a CO e M_dico, n_o dever_ comprar a soma dos valores com o total + interc_mbio.

		if (r_c01_w.ie_nao_gera_tx_inter = 'N') then
		
			vl_materiais_w	:= dividir(( r_c01_w.vl_materiais * r_c01_w.tx_administracao),100);
			vl_total_w 	:= dividir(( r_c01_w.vl_total 	* r_c01_w.tx_administracao),100);
			
			--Existindo alguma diferen_a entre a aplicabilidade individual e sobre o valor total, j_ ajusta aqui antes da atualizacao dos valores.

			--Obs: A diferen_a pode ocorrer devido a quest_es de arredondamento, j_ que estamos trabalhando em n_vel individual de valor, por_m para

			--o usu_rio _ preciso que o percentual seja coerente com o valor total e por isso _ realizada tal verificacao.

			vl_dif_w := vl_total_w - ( vl_materiais_w + vl_medico_w + vl_co_w);
			if (vl_dif_w <> 0) then
				if ( vl_medico_w + vl_dif_w > 0 and vl_medico_w > 0) then
					vl_medico_w := vl_medico_w + vl_dif_w;
					
				elsif ( vl_materiais_w + vl_dif_w > 0 and vl_materiais_w > 0) then	
					vl_materiais_w := vl_materiais_w + vl_dif_w;
					
				elsif ( vl_co_w + vl_dif_w > 0 and vl_co_w > 0) then
					vl_co_w := vl_co_w + vl_dif_w;
					
				end if;
			end if;
			
		end if;
	
		tb_seq_item_w(i) := r_c01_w.nr_sequencia;
		tb_materiais_w(i):= vl_materiais_w;
		tb_medico_w(i)	 := vl_medico_w;
	        tb_co_w(i)	 := vl_co_w;
		
		--Atualiza registros na tabela ao atingir a quantidade estipulada

		if (i > pls_util_cta_pck.qt_registro_transacao_w) then
			
			--Faz a atualizacao na tabela e j_ limpa as estruturas para as pr_ximas iteracaes.

			SELECT * FROM pls_pos_estabelecido_pck.atualiza_tx_inter_proc(tb_seq_item_w, tb_materiais_w, tb_medico_w, tb_co_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_w; tb_materiais_w := _ora2pg_r.tb_materiais_w; tb_medico_w := _ora2pg_r.tb_medico_w; tb_co_w := _ora2pg_r.tb_co_w;
			i := 0;
		else
			i := i + 1;
		end if;
		
	end loop;
	
	--Se sobraram registros, atualiza na tabela

	SELECT * FROM pls_pos_estabelecido_pck.atualiza_tx_inter_proc(tb_seq_item_w, tb_materiais_w, tb_medico_w, tb_co_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_w; tb_materiais_w := _ora2pg_r.tb_materiais_w; tb_medico_w := _ora2pg_r.tb_medico_w; tb_co_w := _ora2pg_r.tb_co_w;
	
	--Aplicacao de taxa de interc_mbio aos procedimentos selecionados. Para materiais a constituicao do valor _ mais simples do que procedimentos,

	--apenas tendo o valor individual de materiais e devido a isso, n_o ocorrer_ diverg_ncia de valor entre individual e total, n_o ocorrendo ajuste e 

	--devido a isso, utilizo bulk collect, n_o gerando troca de contexto.

	open C02;
	loop
		fetch 	C02 bulk collect
		into	tb_seq_item_w, tb_materiais_w
		limit pls_util_cta_pck.qt_registro_transacao_w;
		exit when tb_seq_item_w.count = 0;
		
		--Faz a atualizacao na tabela e j_ limpa as estruturas para as pr_ximas iteracaes.

		SELECT * FROM pls_pos_estabelecido_pck.atualiza_tx_inter_mat(tb_seq_item_w, tb_materiais_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_w; tb_materiais_w := _ora2pg_r.tb_materiais_w;

	end loop;
	close C02;	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.aplicacao_taxa_intercambio ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
