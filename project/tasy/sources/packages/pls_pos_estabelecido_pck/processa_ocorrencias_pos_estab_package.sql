-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.processa_ocorrencias_pos_estab ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
qt_idade_w		varchar(10);
qt_idade_meses_w	varchar(10);
ie_valor_pos_zer_proc_w varchar(1);
ie_valor_pos_zerado_w 	varchar(1);
ie_hm_fat_w		varchar(1);
ie_filme_fat_w		varchar(1);
ie_co_fat_w		varchar(1);
ie_filme_w		varchar(1);
ie_co_w			varchar(1);
ie_hm_w			varchar(1);
ie_faturamento_w	varchar(1);
ie_material_a900_w	varchar(1);
ie_gera_ocor_w		varchar(1);
ie_excecao_w		varchar(1);
nr_contador_w		integer := 0;
qt_glosa_w		integer := 0;
i_proc			integer := 0;
i_mat			integer := 0;
i			integer := 0;
j			integer := 0;
tb_seq_proc_w		pls_util_cta_pck.t_number_table;
tb_seq_proc_ocor_w	pls_util_cta_pck.t_number_table;
tb_seq_mat_w		pls_util_cta_pck.t_number_table;
tb_seq_mat_ocor_w	pls_util_cta_pck.t_number_table;
tb_seq_proc_upd_w	pls_util_cta_pck.t_number_table;
tb_seq_mat_upd_w	pls_util_cta_pck.t_number_table;
nr_seq_grau_partic_w 	pls_grau_participacao.nr_sequencia%type;
nr_seq_mot_liberacao_w	bigint;
nr_seq_oc_benef_w	pls_ocorrencia_benef.nr_sequencia%type;
ie_ocorrencia_w		pls_controle_estab.ie_ocorrencia%type := pls_obter_se_controle_estab('GO');

C01 CURSOR FOR
	SELECT	'P'							ie_item,
		a.nr_seq_analise					nr_seq_analise,
		b.nr_seq_conta						nr_seq_conta,
		b.nr_seq_plano						nr_seq_plano,
		b.ie_pcmso						ie_pcmso,
		a.nr_sequencia						nr_sequencia,
		b.nr_seq_conta_proc					nr_seq_conta_proc,
		null 							nr_seq_conta_mat,
		coalesce(a.vl_materiais, 0)  				vl_materiais,
		coalesce(a.vl_custo_operacional, 0) 				vl_custo_operacional,
		coalesce(a.vl_medico, 0) 					vl_medico,
		a.nr_seq_regra_preco 					nr_seq_regra_preco,
		a.qt_item						qt_item,
		b.cd_procedimento					cd_procedimento,
		b.vl_materiais 						vl_materiais_proc,
		b.vl_custo_operacional 					vl_custo_operacional_proc,
		b.vl_medico 						vl_medico_proc,
		b.ie_origem_proced					ie_origem_proced,
		coalesce(b.vl_prestador_pag, 0) 				vl_liberado_proc,
		null 							nr_seq_material,
		null 							cd_material,
		3 							ie_tipo_item, -- Tipo de item para leitura da excecao
		b.dt_atendimento 					dt_referencia,
		b.ie_origem_conta					ie_origem_protocolo,
		b.ie_tipo_guia						ie_tipo_guia,
		b.nr_seq_segurado					nr_seq_segurado,
		length(b.cd_senha_externa) 				qt_senha_externa,
		b.cd_guia						cd_guia,
		b.nr_seq_protocolo					nr_seq_protocolo,
		b.ie_tipo_conta						ie_tipo_conta,
		b.nr_seq_tipo_atendimento				nr_seq_tipo_atendimento,
		b.nr_seq_prestador_exec					nr_seq_prestador_exec,
		b.nr_seq_clinica					nr_seq_clinica,
		b.nr_seq_tipo_acomodacao				nr_seq_tipo_acomod_conta,
		b.ie_carater_internacao					ie_carater_internacao,
		b.nr_seq_prestador_prot					nr_seq_prest_prot,
		(	SELECT	max(nr_seq_grupo_rec)
			from	procedimento
			where	cd_procedimento = b.cd_procedimento
			and	ie_origem_proced = b.ie_origem_proced)	nr_seq_grupo_rec,
		(	select	count(1)
			from	pls_proc_participante
			where	nr_seq_conta_proc = b.nr_seq_conta_proc)qt_partic,
		(	select	max(nr_seq_grau_partic)
			from	pls_proc_participante
			where	nr_seq_conta_proc = b.nr_seq_conta_proc)nr_seq_grau_partic,
		( coalesce(a.vl_custo_operacional_calc, 0) +
		  coalesce(a.vl_medico_calc,0) + coalesce(a.vl_materiais_calc,0))	vl_calculado,
		(	select	max(ie_preco)
			from	pls_plano
			where	nr_sequencia = b.nr_seq_plano) 		ie_plano,
		(	select	max(nr_seq_grau_partic)
			from	pls_conta
			where	nr_sequencia = b.nr_seq_conta)		nr_seq_grau_partic_conta,
		(	select	max(ie_tipo_segurado)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado) 	ie_tipo_segurado,
		(	select	max(cd_pessoa_fisica)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado)	cd_pessoa_fisica,
		(	select 	max(nr_seq_contrato)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado)	nr_seq_contrato,
		(	select 	max(nr_seq_intercambio)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado)	nr_seq_intercambio,
		(	select 	max(nr_seq_congenere)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado)	nr_seq_congenere,
		(	select 	max(dt_nascimento)
			from	pessoa_fisica	p,
				pls_segurado	s
			where	p.cd_pessoa_fisica = s.cd_pessoa_fisica
			and	s.nr_sequencia  = b.nr_seq_segurado) dt_nascimento,
		( select length(max(cd_matricula_estipulante)) 
			from   pls_segurado 
			where	 nr_sequencia = b.nr_seq_segurado) 	qt_matricula_estip,
		(	select	max(cd_prestador)
			from	pls_prestador
			where	nr_sequencia = b.nr_seq_prestador_exec) cd_prestador_exec,
		(	select	max(nr_seq_tipo_acomodacao)
			from 	pls_plano_acomodacao
			where	nr_seq_plano = b.nr_seq_plano)		nr_seq_tipo_acomodacao,
		( 	pls_obter_se_internado(b.nr_seq_conta, null, 
			null, null, null, cd_estabelecimento_p, 'S'))	ie_internado,
		coalesce(a.ie_vl_pag_prestador,'S') 				ie_vl_pag_prestador
	from	pls_conta_pos_proc a,
		w_pls_conta_pos_proc b
	where	b.nr_seq_conta_proc = a.nr_seq_conta_proc
	and	a.ie_status_faturamento	!= 'A'
	
union all

	select	'M'							ie_item,
		a.nr_seq_analise					nr_seq_analise,
		b.nr_seq_conta						nr_seq_conta,
		b.nr_seq_plano						nr_seq_plano,
		b.ie_pcmso						ie_pcmso,
		a.nr_sequencia						nr_sequencia,
		null 							nr_seq_conta_proc,
		b.nr_seq_conta_mat					nr_seq_conta_mat,
		coalesce(a.vl_materiais, 0) 					vl_materiais,
		0 							vl_custo_operacional,
		0 							vl_medico,
		a.nr_seq_regra_pos_estab 				nr_seq_regra_preco,
		a.qt_item						qt_item,
		null 							cd_procedimento,
		null 							vl_materiais_proc,
		null 							vl_custo_operacional_proc,
		null 							vl_medico_proc,
		null 							ie_origem_proced,
		0 							vl_liberado_proc,
		b.nr_seq_material					nr_seq_material,
		(select	max(cd_material)
			from	pls_material a
			where	a.nr_sequencia	= b.nr_seq_material) 	cd_material,
		4 							ie_tipo_item, -- Tipo de item para leitura da excecao
		b.dt_atendimento 					dt_referencia,
		b.ie_origem_conta					ie_origem_protocolo,
		b.ie_tipo_guia						ie_tipo_guia,
		b.nr_seq_segurado					nr_seq_segurado,
		length(b.cd_senha_externa) 				qt_senha_externa,
		b.cd_guia						cd_guia,
		b.nr_seq_protocolo					nr_seq_protocolo,
		b.ie_tipo_conta						ie_tipo_conta,
		b.nr_seq_tipo_atendimento				nr_seq_tipo_atendimento,
		b.nr_seq_prestador_exec					nr_seq_prestador_exec,
		b.nr_seq_clinica					nr_seq_clinica,
		b.nr_seq_tipo_acomodacao				nr_seq_tipo_acomod_conta,
		b.ie_carater_internacao					ie_carater_internacao,
		b.nr_seq_prestador_prot					nr_seq_prest_prot,
		null							nr_seq_grupo_rec,
		null							qt_partic,
		null							nr_seq_grau_partic,
		coalesce(a.vl_materiais_calc, 0)  	 			vl_calculado,
		(	select	max(ie_preco)
			from	pls_plano
			where	nr_sequencia = b.nr_seq_plano) 		ie_plano,
		(	select	max(nr_seq_grau_partic)
			from	pls_conta
			where	nr_sequencia = b.nr_seq_conta)		nr_seq_grau_partic_conta,
		(	select	max(ie_tipo_segurado)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado) 	ie_tipo_segurado,
		(	select	max(cd_pessoa_fisica)
			from	pls_segurado
			where	nr_sequencia = b.nr_seq_segurado)	cd_pessoa_fisica,
		(	select 	max(nr_seq_contrato)
			from	pls_segurado	
			where	nr_sequencia = b.nr_seq_segurado)	nr_seq_contrato,
		(	select 	max(nr_seq_intercambio)
			from	pls_segurado	
			where	nr_sequencia = b.nr_seq_segurado)	nr_seq_intercambio,
		(	select 	max(nr_seq_congenere)
			from	pls_segurado	
			where	nr_sequencia = b.nr_seq_segurado)	nr_seq_congenere,
		(	select 	max(dt_nascimento)
			from	pessoa_fisica 	p,
				pls_segurado	s
			where	p.cd_pessoa_fisica = s.cd_pessoa_fisica
			and	s.nr_sequencia  = b.nr_seq_segurado) dt_nascimento,
		( select length(max(cd_matricula_estipulante)) 
			from   	pls_segurado 
			where	nr_sequencia = b.nr_seq_segurado) 	qt_matricula_estip,
		(	select	max(cd_prestador)
			from	pls_prestador
			where	nr_sequencia = b.nr_seq_prestador_exec) cd_prestador_exec,
		(	select	max(nr_seq_tipo_acomodacao)
			from 	pls_plano_acomodacao
			where	nr_seq_plano = b.nr_seq_plano)		nr_seq_tipo_acomodacao,
		( 	pls_obter_se_internado(b.nr_seq_conta, null, 
			null, null, null, cd_estabelecimento_p, 'S'))	ie_internado,
		coalesce(a.ie_vl_pag_prestador,'S') 				ie_vl_pag_prestador
	from	pls_conta_pos_mat a,
		w_pls_conta_pos_mat b
	where	b.nr_seq_conta_mat = a.nr_seq_conta_mat
	and	a.ie_status_faturamento	!= 'A';

C02 CURSOR(	ie_preco_pc			pls_conta_pos_estabelecido.ie_preco_plano%type,
		nr_seq_regra_preco_pc		bigint,
		nr_seq_material_pc		pls_conta_mat.nr_seq_material%type,
		cd_procedimento_pc		procedimento.cd_procedimento%type,
		ie_origem_proced_pc		procedimento.ie_origem_proced%type,
		nr_seq_tipo_atendimento_pc	pls_tipo_atendimento.nr_sequencia%type,
		nr_seq_grau_partic_pc		pls_grau_participacao.nr_sequencia%type,
		qt_senha_externa_pc		bigint,
		qt_matricula_estip_pc		bigint,
		nr_seq_grupo_rec_pc		procedimento.nr_seq_grupo_rec%type,
		nr_seq_intercambio_pc		pls_segurado.nr_seq_intercambio%type,
		nr_seq_congenere_pc		pls_segurado.nr_seq_congenere%type,
		ie_tipo_segurado_pc		pls_segurado.ie_tipo_segurado%type,
		ie_tipo_guia_pc			pls_conta.ie_tipo_guia%type,
		dt_atend_referencia_pc		pls_conta.dt_atendimento_referencia%type,
		ie_ocorrencia_pc		pls_controle_estab.ie_ocorrencia%type,
		cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type) FOR
	SELECT	a.nr_sequencia 			nr_seq_regra_pos,
		b.nr_sequencia 			nr_seq_ocorrencia,
		a.nr_seq_grupo_serv,
		a.nr_seq_grupo_material,
		a.nr_seq_grupo_contrato,
		a.nr_seq_estrutura_mat,
		a.ie_internado,
		a.ie_exige_qtd_lib_pag,
		b.ie_glosar_faturamento,
		coalesce(a.ie_ocor_princ,'S')	ie_ocor_princ,
		(SELECT	count(1)
		 from	pls_excecao_ocorrencia x
		 where	x.nr_seq_regra_pos = a.nr_sequencia
		 and	x.ie_situacao = 'A') 	qt_excecao
	from	pls_ocorrencia		b,
		pls_oc_regra_pos_estab	a
	where	b.nr_sequencia 		= a.nr_seq_ocorrencia
	and	b.ie_situacao		= 'A'
	and	dt_atend_referencia_pc 	between  a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
	and	((coalesce(a.ie_tipo_guia::text, '') = '') 	or (a.ie_tipo_guia = ie_tipo_guia_pc))
	and	((coalesce(a.ie_preco::text, '') = '') 	or (a.ie_preco = ie_preco_pc))
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') 	or (a.ie_tipo_segurado = ie_tipo_segurado_pc))
	and	((a.ie_sem_evento_faturamento = 'N') 	or (a.ie_sem_evento_faturamento = ie_faturamento_w))
	/* Por valores de procedimento */


	and 	((a.ie_valor_hm_zerado = 'N') 	or (a.ie_valor_hm_zerado = ie_hm_w) or a.ie_origem_valores = 'POS')
	and 	((a.ie_valor_co_zerado = 'N') 	or (a.ie_valor_co_zerado = ie_co_w) or a.ie_origem_valores = 'POS')
	and 	((a.ie_valor_filme_zerado = 'N')or (a.ie_valor_filme_zerado = ie_filme_w) or a.ie_origem_valores = 'POS')
	/* Por valores de p_s */


	and 	((a.ie_valor_hm_zerado = 'N') 	or (a.ie_valor_hm_zerado = ie_hm_fat_w) or a.ie_origem_valores = 'PRO')
	and 	((a.ie_valor_co_zerado = 'N') 	or (a.ie_valor_co_zerado = ie_co_fat_w) or a.ie_origem_valores = 'PRO')
	and 	((a.ie_valor_pos_zerado= 'N') 	or (coalesce(a.ie_valor_pos_zerado::text, '') = '') or (ie_valor_pos_zerado_w = 'S' and a.ie_origem_valores = 'POS')
		or (ie_valor_pos_zer_proc_w ='S' and a.ie_origem_valores = 'PRO') )
	and 	((a.ie_valor_filme_zerado ='N') or (a.ie_valor_filme_zerado = ie_filme_fat_w) or a.ie_origem_valores = 'PRO')
	/* Regra de pre_o */


	and	((a.ie_regra_preco = 'SR' 	and coalesce(nr_seq_regra_preco_pc::text, '') = '') 	or (a.ie_regra_preco = 'CR' 	and (nr_seq_regra_preco_pc IS NOT NULL AND nr_seq_regra_preco_pc::text <> '')) 	or
		  a.ie_regra_preco = 'NC' 	or coalesce(a.ie_regra_preco::text, '') = '')
	/* Fim tratamento regra de pre_o*/


	and 	((coalesce(a.qt_min_senha_externa::text, '') = '') 	or (a.qt_min_senha_externa <= qt_senha_externa_pc))
	and 	((coalesce(a.qt_max_senha_externa::text, '') = '') 	or (a.qt_max_senha_externa >= qt_senha_externa_pc))
	and 	((coalesce(a.qt_min_matricula_estip::text, '') = '') 	or (a.qt_min_matricula_estip <= qt_matricula_estip_pc))
	and 	((coalesce(a.qt_max_matricula_estip::text, '') = '') 	or (a.qt_max_matricula_estip >= qt_matricula_estip_pc))
	and 	((coalesce(a.nr_seq_congenere::text, '') = '') 	or (a.nr_seq_congenere = nr_seq_congenere_pc))
	and 	((coalesce(a.nr_seq_intercambio::text, '') = '') or (a.nr_seq_intercambio = nr_seq_intercambio_pc))
	and 	((coalesce(a.nr_seq_material::text, '') = '') 	or (a.nr_seq_material = nr_seq_material_pc))
	and 	((a.ie_material_a900 = 'N') 	or (a.ie_material_a900 = ie_material_a900_w))
	and	((coalesce(a.cd_procedimento::text, '') = '') 	or (a.cd_procedimento = cd_procedimento_pc AND a.ie_origem_proced = ie_origem_proced_pc))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') 	or (a.nr_seq_grupo_rec = nr_seq_grupo_rec_pc))
	and	((coalesce(a.nr_seq_tipo_atendimento::text, '') = '') 	or (a.nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_pc))
	and	((coalesce(a.nr_seq_grau_partic::text, '') = '') or (a.nr_seq_grau_partic = nr_seq_grau_partic_pc))
	and	((ie_ocorrencia_pc = 'N')	or (ie_ocorrencia_pc = 'S' and b.cd_estabelecimento = cd_estabelecimento_pc))
	order by 2, 1;

BEGIN
	
	for r_c01_w in C01 loop
		
		qt_idade_w		:= null;
		qt_idade_meses_w	:= null;
		ie_valor_pos_zer_proc_w := 'N';
		ie_valor_pos_zerado_w	:= 'N';
		ie_hm_fat_w		:= null;
		ie_filme_fat_w		:= null;
		ie_co_fat_w		:= null;
		ie_filme_w		:= null;
		ie_co_w			:= null;
		ie_hm_w			:= null;
		ie_faturamento_w	:= null;
		nr_seq_grau_partic_w 	:= null;
		ie_material_a900_w	:= null;
		
		if (r_c01_w.dt_nascimento IS NOT NULL AND r_c01_w.dt_nascimento::text <> '') then
			
			qt_idade_w		:= substr(obter_idade(r_c01_w.dt_nascimento, clock_timestamp(), 'A'),1,10);
			qt_idade_meses_w	:= substr(obter_idade(r_c01_w.dt_nascimento, clock_timestamp(), 'M'),1,10);
		end if;
		
		-- verificacao na conta

		if (r_c01_w.vl_materiais = 0) then
			ie_filme_fat_w := 'S';
		end if;
		
		if (r_c01_w.vl_custo_operacional = 0) then
			ie_co_fat_w := 'S';
		end if;
		
		if (r_c01_w.vl_medico = 0) then
			ie_hm_fat_w := 'S';
		end if;
		
		if (r_c01_w.vl_calculado = 0) then
			ie_valor_pos_zerado_w := 'S';
		end if;
		-- fim verificacao na conta

		
		-- verificacao dos procedimentos

		if (r_c01_w.nr_seq_conta_proc IS NOT NULL AND r_c01_w.nr_seq_conta_proc::text <> '') then
			
			if (r_c01_w.vl_materiais_proc = 0) then
				ie_filme_w := 'S';
			end if;
			
			if (r_c01_w.vl_custo_operacional_proc = 0) then
				ie_co_w := 'S';
			end if;
			
			if (r_c01_w.vl_medico_proc = 0) then
				ie_hm_w := 'S';
			end if;

			if (r_c01_w.vl_liberado_proc = 0) then
				ie_valor_pos_zer_proc_w := 'S';
			end if;
			
			if (r_c01_w.qt_partic < 2) then
				
				if (coalesce(r_c01_w.nr_seq_grau_partic::text, '') = '') then
					nr_seq_grau_partic_w := r_c01_w.nr_seq_grau_partic_conta;
				else
					nr_seq_grau_partic_w := r_c01_w.nr_seq_grau_partic;
				end if;
			end if;
		end if;	
				-- verificacao dos materiais

		if (r_c01_w.nr_seq_conta_mat IS NOT NULL AND r_c01_w.nr_seq_conta_mat::text <> '') then

			if (coalesce(r_c01_w.cd_material::text, '') = '') then
				ie_material_a900_w := 'N';
			end if;
			
		end if;
		
		for r_c02_w in C02(	r_c01_w.ie_plano, r_c01_w.nr_seq_regra_preco,
					r_c01_w.nr_seq_material, r_c01_w.cd_procedimento,
					r_c01_w.ie_origem_proced, r_c01_w.nr_seq_tipo_atendimento,
					nr_seq_grau_partic_w, r_c01_w.qt_senha_externa,
					r_c01_w.qt_matricula_estip, r_c01_w.nr_seq_grupo_rec,
					r_c01_w.nr_seq_intercambio, r_c01_w.nr_seq_congenere,
					r_c01_w.ie_tipo_segurado, r_c01_w.ie_tipo_guia,
					r_c01_w.dt_referencia, ie_ocorrencia_w,
					cd_estabelecimento_p) loop
			
			ie_gera_ocor_w 	:= 'S'; -- se retornou no cursor ent_o come_a sendo v_lida a ocorr_ncia
			nr_contador_w  	:= 0;
			ie_excecao_w	:= 'N';
			-- se possui filtro de grupo de material

			if (r_c02_w.nr_seq_grupo_material IS NOT NULL AND r_c02_w.nr_seq_grupo_material::text <> '') then

			-- verifica se o material pertence ao grupo de materiais

				if (pls_se_grupo_preco_material(r_c02_w.nr_seq_grupo_material, r_c01_w.nr_seq_material) = 'N') then
				
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			-- estrutura de materiais

			if (r_c02_w.nr_seq_estrutura_mat IS NOT NULL AND r_c02_w.nr_seq_estrutura_mat::text <> '') then
			
				if (pls_obter_se_estruturas_mat(r_c02_w.nr_seq_estrutura_mat, r_c01_w.nr_seq_material) = 'N') then
				
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			
			-- filtro por grupo de contrato, feito dois counts se n_o retornar algo ent_o n_o gera

			if (r_c02_w.nr_seq_grupo_contrato IS NOT NULL AND r_c02_w.nr_seq_grupo_contrato::text <> '') then

				select	sum(qtde)
				into STRICT	nr_contador_w
				from (SELECT	count(1) qtde
					from	pls_preco_contrato
					where	nr_seq_grupo = r_c02_w.nr_seq_grupo_contrato
					and	nr_seq_contrato	= r_c01_w.nr_seq_contrato
					
union all

					SELECT	count(1) qtde
					from	pls_preco_contrato
					where	nr_seq_grupo = r_c02_w.nr_seq_grupo_contrato
					and	nr_seq_intercambio = r_c01_w.nr_seq_intercambio  LIMIT 1) alias4;

				if (nr_contador_w = 0) then
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			
			-- se tem grupo de servi_o informado na regra

			if (r_c02_w.nr_seq_grupo_serv IS NOT NULL AND r_c02_w.nr_seq_grupo_serv::text <> '') then

				-- precisa ser do grupo para gerar a ocorr_ncia

				if (pls_se_grupo_preco_servico(r_c02_w.nr_seq_grupo_serv, r_c01_w.cd_procedimento,
									r_c01_w.ie_origem_proced) = 'N') then
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			
			 -- se a regra exige quantidade liberada e n_o tem quantidade ent_o n_o deve gerar

			if (r_c02_w.ie_exige_qtd_lib_pag = 'S') and (r_c01_w.qt_item = 0) then
				
				ie_gera_ocor_w := 'N';
			end if;

			-- Consist_ncia para contas que estiverem em uma guia de internacao

			if (r_c02_w.ie_internado = 'S') then
			
				-- verifica se trata-se de uma internacao

				if (r_c01_w.ie_internado = 'N') then
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			
			-- Caso tenha ocorr_ncia oriunda da analise de prestador, n_o gera a ocorr_ncia.

			if (r_c02_w.ie_ocor_princ = 'N') then
				qt_glosa_w := 0;
				if (r_c01_w.nr_seq_conta_mat IS NOT NULL AND r_c01_w.nr_seq_conta_mat::text <> '') then
					select	count(1)
					into STRICT	qt_glosa_w
					from	pls_ocorrencia_benef a
					where	a.nr_seq_conta_pos_mat = r_c01_w.nr_sequencia
					and	exists (	SELECT	1
							from	pls_ocorrencia_benef b
							where	b.nr_seq_proc = r_c01_w.nr_seq_conta_mat
							and	b.nr_seq_ocorrencia = a.nr_seq_ocorrencia);
				else
					select	count(1)
					into STRICT	qt_glosa_w
					from	pls_ocorrencia_benef a
					where	a.nr_seq_conta_pos_proc = r_c01_w.nr_sequencia
					and	exists (	SELECT	1
							from	pls_ocorrencia_benef b
							where	b.nr_seq_proc = r_c01_w.nr_seq_conta_proc
							and	b.nr_seq_ocorrencia = a.nr_seq_ocorrencia);
				
				end if;
				
				if (qt_glosa_w > 0) then
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			
			if (ie_gera_ocor_w = 'S') and (r_c02_w.qt_excecao > 0) then
				ie_excecao_w := pls_obter_se_regra_excecao_con(	r_c02_w.nr_seq_ocorrencia, r_c01_w.nr_seq_conta, r_c01_w.nr_seq_conta_proc,
										r_c01_w.nr_seq_conta_mat, r_c01_w.dt_referencia, r_c01_w.ie_tipo_item, 
										r_c01_w.nr_seq_prestador_exec, r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, 
										r_c01_w.nr_seq_material, r_C01_w.nr_seq_segurado, nm_usuario_p, 
										cd_estabelecimento_p, r_c01_w.nr_seq_plano, r_c01_w.ie_internado,
										qt_idade_w, qt_idade_meses_w, r_c01_w.nr_seq_prestador_exec, r_c01_w.nr_seq_prest_prot, r_c01_w.cd_pessoa_fisica,
										r_c01_w.nr_seq_contrato, r_c01_w.nr_seq_intercambio, r_c01_w.ie_tipo_segurado, r_c01_w.dt_nascimento, r_c01_w.ie_pcmso,
										r_c01_w.nr_seq_clinica, r_c01_w.nr_seq_tipo_acomod_conta, r_c01_w.cd_guia, r_c01_w.cd_guia, r_c01_w.ie_tipo_guia, 
										r_c01_w.nr_seq_tipo_atendimento, r_c01_w.ie_carater_internacao, r_c01_w.nr_seq_protocolo, r_c01_w.nr_seq_tipo_acomodacao,
										r_c01_w.ie_origem_protocolo, r_c01_w.cd_prestador_exec, r_c02_w.nr_seq_regra_pos);
				if (ie_excecao_w = 'S') then
					ie_gera_ocor_w := 'N';
				end if;
			end if;
			
			-- se _ v_lido ent_o temos que gerar a ocorr_ncia

			if (ie_gera_ocor_w = 'S') then
				
				-- verifica se j_ existe a ocorrencia

				if (r_c01_w.nr_seq_conta_proc IS NOT NULL AND r_c01_w.nr_seq_conta_proc::text <> '') then
					select	count(1)
					into STRICT	nr_contador_w
					from	pls_ocorrencia_benef a
					where	a.nr_seq_conta_pos_proc = r_c01_w.nr_sequencia
					and	a.nr_seq_ocorrencia = r_c02_w.nr_seq_ocorrencia  LIMIT 1;
				else
					select	count(1)
					into STRICT	nr_contador_w
					from	pls_ocorrencia_benef a
					where	a.nr_seq_conta_pos_mat = r_c01_w.nr_sequencia
					and	a.nr_seq_ocorrencia = r_c02_w.nr_seq_ocorrencia  LIMIT 1;
				end if;
				
				-- se existe s_ faz update, sen_o insere

				if (nr_contador_w = 0) then
					
					pls_inserir_ocorrencia(	r_c01_w.nr_seq_segurado, r_c02_w.nr_seq_ocorrencia, null,
								null, null, null,
								null, r_c02_w.nr_seq_regra_pos, nm_usuario_p,
								'', null, 0,
								cd_estabelecimento_p, 'N', null,
								nr_seq_oc_benef_w, r_c01_w.nr_sequencia,
								null, null, null,
								null, null, r_c01_w.ie_item);
					
					null;
				else
				
					if (r_c01_w.nr_seq_conta_proc IS NOT NULL AND r_c01_w.nr_seq_conta_proc::text <> '') then
						tb_seq_proc_w(i_proc) 	:= r_c01_w.nr_sequencia;
						tb_seq_proc_ocor_w(i_proc):= r_c02_w.nr_seq_regra_pos;
						
						i_proc 	:= i_proc + 1;
					else
						tb_seq_mat_w(i_mat)	:= r_c01_w.nr_sequencia;
						tb_seq_mat_ocor_w(i_mat) := r_c02_w.nr_seq_regra_pos;
						
						i_mat	:= i_mat + 1;
					end if;
				
					if ( i_proc + i_mat > pls_util_cta_pck.qt_registro_transacao_w) then
					
						SELECT * FROM pls_pos_estabelecido_pck.update_itens_pos( tb_seq_proc_w, tb_seq_proc_ocor_w, tb_seq_mat_w, tb_seq_mat_ocor_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  tb_seq_proc_w := _ora2pg_r.tb_seq_proc_p; tb_seq_proc_ocor_w := _ora2pg_r.tb_seq_proc_ocor_p; tb_seq_mat_w := _ora2pg_r.tb_seq_mat_p; tb_seq_mat_ocor_w := _ora2pg_r.tb_seq_mat_ocor_p;
						i_proc 	:= 0;
						i_mat	:= 0;
					end if;
				
				end if;
				
				
				if (coalesce(r_c02_w.ie_glosar_faturamento,'N') = 'S') then
				
					select	max(nr_sequencia)
					into STRICT	nr_seq_mot_liberacao_w
					from	pls_mot_lib_analise_conta
					where	ie_tipo_motivo 		= 'N'
					and	ie_situacao		= 'A'
					and	coalesce(ie_analise_conta_med,'S') = 'S'
					and	cd_estabelecimento = cd_estabelecimento_p
					and     not(	ie_pre_analise	 = 'S'
						or	ie_reconsistencia	 = 'S'
						or 	ie_substitui_item	 = 'S'
						or	ie_documento_fisico = 'S'
						or	ie_glosa_manual	 = 'S'
						or	ie_liberacao_especial	 = 'S');
						
					--Caso tfor glosar o faturamento setar a variavel de valor pago ao prestador para 'N' - OS 986125 - aedemuth

					if (r_c01_w.ie_vl_pag_prestador = 'S') then
					
						if (r_c01_w.nr_seq_conta_proc IS NOT NULL AND r_c01_w.nr_seq_conta_proc::text <> '') then
							tb_seq_proc_upd_w(i) := r_c01_w.nr_sequencia;
							i := i + 1;
						else
							tb_seq_mat_upd_w(i)  := r_c01_w.nr_sequencia;
							j := j + 1;
						end if;
							
						if ( i + j > pls_util_cta_pck.qt_registro_transacao_w) then	
							SELECT * FROM pls_pos_estabelecido_pck.update_pag_prest_pos_estab( tb_seq_proc_upd_w, tb_seq_mat_upd_w) INTO STRICT _ora2pg_r;
  tb_seq_proc_upd_w := _ora2pg_r.tb_seq_proc_upd_p; tb_seq_mat_upd_w := _ora2pg_r.tb_seq_mat_upd_p;
							i := 0;
							j := 0;
						end if;
					end if;
					
					CALL pls_analise_glosa_it_novo_pos(	r_c01_w.nr_seq_analise, r_c01_w.nr_seq_conta, r_c01_w.nr_seq_conta_proc,
									r_c01_w.nr_seq_conta_mat, r_c01_w.nr_sequencia, 0,
									nr_seq_mot_liberacao_w, null,cd_estabelecimento_p,
									null, null,null,
									nm_usuario_p,'S');
					null;
				end if;
			end if;
		end loop; -- C02
	end loop; -- C01
	
	--Se sobrarem registros, faz os updates para persistir as informacaes no banco.

	SELECT * FROM pls_pos_estabelecido_pck.update_itens_pos( tb_seq_proc_w, tb_seq_proc_ocor_w, tb_seq_mat_w, tb_seq_mat_ocor_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  tb_seq_proc_w := _ora2pg_r.tb_seq_proc_p; tb_seq_proc_ocor_w := _ora2pg_r.tb_seq_proc_ocor_p; tb_seq_mat_w := _ora2pg_r.tb_seq_mat_p; tb_seq_mat_ocor_w := _ora2pg_r.tb_seq_mat_ocor_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.processa_ocorrencias_pos_estab ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
