-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--identificacao da tabela base para valoriza_ao.



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.identifica_tab_base_valor ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_base_w		pls_util_cta_pck.t_varchar2_table_2;
tb_tipo_item_w		pls_util_cta_pck.t_varchar2_table_1;
tb_seq_item_w		pls_util_cta_pck.t_number_table;
ie_tipo_congenere_w	pls_congenere.ie_tipo_congenere%type;
i			integer := 0;
	
/*
	N_o identificar_ o tipo tabela se o tipo de regra de p_s for um dos seguintes valores:
	* proc.ie_tipo_regra_pos
	2 - Valor apresentado pelo prestador
	3 -  Valor a ser pago ao prestador 
	7 - Aceitar valor apresentado e desconta a taxa de interc_mbio
	8- Aceita valor pago e desconto a taxa de interc_mbio

*/
	
C01 CURSOR FOR
	SELECT	'P' ie_tipo_item,
		proc.nr_sequencia,
		proc.nr_seq_congenere,
		proc.ie_tipo_segurado,
		proc.ie_tipo_conta,
		(	SELECT	coalesce(max(ie_tipo_repasse), 'P')
			from	pls_intercambio 
			where	nr_sequencia = proc.nr_seq_intercambio) ie_tipo_repasse,
		(	select	max(ie_preco)
			from	pls_plano
			where	nr_sequencia = proc.nr_seq_plano) ie_preco_plano
	from	w_pls_conta_pos_proc 	proc
	where	proc.ie_gera_valor_pos_estab in ('S', 'SB')
	and	coalesce(proc.ie_tipo_regra_pos::text, '') = ''
	
union all

	select	'P' ie_tipo_item, 
		proc.nr_sequencia,
		proc.nr_seq_congenere,
		proc.ie_tipo_segurado,
		proc.ie_tipo_conta,
		(	select	coalesce(max(ie_tipo_repasse), 'P')
			from	pls_intercambio 
			where	nr_sequencia = proc.nr_seq_intercambio) ie_tipo_repasse,
		(	select	max(ie_preco)
			from	pls_plano
			where	nr_sequencia = proc.nr_seq_plano) ie_preco_plano
	from	w_pls_conta_pos_proc 	proc
	where	proc.ie_gera_valor_pos_estab in ('S', 'SB')
	and 	proc.ie_tipo_regra_pos not in (2, 3, 7, 8)
	
union all

	select	'M' ie_tipo_item, 
		mat.nr_sequencia,
		mat.nr_seq_congenere,
		mat.ie_tipo_segurado,
		mat.ie_tipo_conta,
		(	select	coalesce(max(ie_tipo_repasse), 'P')
			from	pls_intercambio 
			where	nr_sequencia = mat.nr_seq_intercambio) ie_tipo_repasse,
		(	select	max(ie_preco)
			from	pls_plano
			where	nr_sequencia = mat.nr_seq_plano) ie_preco_plano
	from	w_pls_conta_pos_mat 	mat
	where	mat.ie_gera_valor_pos_estab in ('S', 'SB')
	and 	coalesce(mat.ie_tipo_regra_pos::text, '') = ''
	
union all

	select	'M' ie_tipo_item, 
		mat.nr_sequencia,
		mat.nr_seq_congenere,
		mat.ie_tipo_segurado,
		mat.ie_tipo_conta,
		(	select	coalesce(max(ie_tipo_repasse), 'P')
			from	pls_intercambio 
			where	nr_sequencia = mat.nr_seq_intercambio) ie_tipo_repasse,
		(	select	max(ie_preco)
			from	pls_plano
			where	nr_sequencia = mat.nr_seq_plano) ie_preco_plano
	from	w_pls_conta_pos_mat 	mat
	where	mat.ie_gera_valor_pos_estab in ('S', 'SB')
	and 	mat.ie_tipo_regra_pos not in (2, 3, 7, 8);
					
BEGIN
	
	--Como n_o foi inserido nada nas estruturas, apenas chamar_ o delete para cada uma delas aqui.

	SELECT * FROM pls_pos_estabelecido_pck.atualiza_tipo_tab_base( tb_seq_item_w, tb_base_w, tb_tipo_item_w) INTO STRICT _ora2pg_r;
  tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_base_w := _ora2pg_r.tb_base_p; tb_tipo_item_w := _ora2pg_r.tb_tipo_item_p;
	for r_c01_w in C01 loop
	
		tb_base_w(i) := 'O';
		tb_seq_item_w(i) := r_c01_w.nr_sequencia;
		tb_tipo_item_w(i) := r_c01_w.ie_tipo_item;
		
		if	((r_c01_w.ie_tipo_conta = 'C' and r_c01_w.ie_tipo_repasse <> 'P' ) or (r_c01_w.ie_tipo_conta = 'I')and r_c01_w.ie_preco_plano in ('2','3'))then
			
			if ( (r_c01_w.nr_seq_congenere IS NOT NULL AND r_c01_w.nr_seq_congenere::text <> '') and r_c01_w.ie_tipo_segurado in ('R', 'T', 'I', 'C','H')) then
			
				tb_base_w(i) := 'IC';
				
				select	max(ie_tipo_congenere)
				into STRICT	ie_tipo_congenere_w
				from	pls_congenere
				where	nr_sequencia = r_c01_w.nr_seq_congenere;
				
				--Quando o benefici_rio for de operadora cong_nere, buscar da regra de p_s ao inv_s de interc_mbio */

				if ((current_setting('pls_pos_estabelecido_pck.ie_preco_interc_congenere_w')::pls_parametros.ie_preco_interc_congenere%type = 'F') and ( ie_tipo_congenere_w = 'OP')) then
					tb_base_w(i) := 'O';
				end if;
				
			
			end if;
		end if;

		--atingiu a quantidade m_xima de registros nas estruturas, ent_o manda persistir no banco.

		if (i > pls_util_cta_pck.qt_registro_transacao_w) then
			
			SELECT * FROM pls_pos_estabelecido_pck.atualiza_tipo_tab_base( tb_seq_item_w, tb_base_w, tb_tipo_item_w) INTO STRICT _ora2pg_r;
  tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_base_w := _ora2pg_r.tb_base_p; tb_tipo_item_w := _ora2pg_r.tb_tipo_item_p;
			i := 0;
		else
			--Se n_o atingiu ainda a quantidade m_xima, ent_o nesse caso apenas incrementa o indexador.

			i := i + 1;
		end if;
	
	end loop;
	
	--Para garantir que tudo que foi obtido seja atualizado no banco, pois pode ter alguma sobra nas estrutura

	SELECT * FROM pls_pos_estabelecido_pck.atualiza_tipo_tab_base(tb_seq_item_w, tb_base_w, tb_tipo_item_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_base_w := _ora2pg_r.tb_base_p; tb_tipo_item_w := _ora2pg_r.tb_tipo_item_p;
	i := 0;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.identifica_tab_base_valor ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
