-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Faz as verificacaes e eventuais convers_es de procedimentos conforme as respectivas regras



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.processa_conv_procedimentos ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_somente_codigo_w		pls_conversao_proc.ie_somente_codigo%type;
nr_seq_regra_conversao_w	pls_conversao_proc.nr_sequencia%type;
cd_item_convertido_w		procedimento.cd_procedimento%type;
ie_origem_conversao_w		procedimento.ie_origem_proced%type;
nr_seq_regra_conversao_xml_w	pls_conversao_proc.nr_sequencia%type;
cd_item_convertido_xml_w	procedimento.cd_procedimento%type;
ie_origem_conversao_xml_w	procedimento.ie_origem_proced%type;
ie_calculo_pos_estab_w		varchar(2) := 'X';
tb_proc_conv_p			pls_util_cta_pck.t_number_table;
tb_proc_conv_xml_p		pls_util_cta_pck.t_number_table;
tb_origem_proc_conv_p		pls_util_cta_pck.t_number_table;
tb_origem_proc_conv_xml_p	pls_util_cta_pck.t_number_table;
tb_seq_regra_p			pls_util_cta_pck.t_number_table;
tb_seq_regra_xml_p		pls_util_cta_pck.t_number_table;
tb_seq_item_p			pls_util_cta_pck.t_number_table;
i				integer := 0;
qt_registros_proc_xml_w		integer := 0;
						
C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		ie_tipo_intercambio,
		ie_tipo_conta,
		ie_tipo_segurado,
		nr_seq_intercambio,
		nr_seq_prestador_exec,
		nr_seq_tipo_atendimento,
		nr_seq_congenere,
		(	SELECT	max(nr_seq_contrato)
			from	pls_segurado
			where	nr_sequencia = proc.nr_seq_segurado)	nr_seq_contrato,
		(	select 	max(nr_seq_oper_congenere)
			from 	pls_intercambio
			where	nr_sequencia = proc.nr_seq_intercambio) nr_seq_ops_congenere,
		(	select 	max(ie_tipo_repasse)
			from 	pls_intercambio
			where	nr_sequencia = proc.nr_seq_intercambio) ie_tipo_repasse,
		(	select 	max(ie_preco)
			from	pls_plano
			where 	nr_sequencia = proc.nr_seq_plano) 	ie_tipo_plano
	from	w_pls_conta_pos_proc 	proc
	where	proc.ie_gera_valor_pos_estab in ('S', 'SB');

BEGIN

	select	count(1)
	into STRICT	qt_registros_proc_xml_w
	from	pls_conversao_proc
	where	ie_envio_receb	= 'E'
	and	ie_situacao	= 'A';

	--Se n_o tiver nenhma regra de convers_o para envio, nem entra no processo, para evitar processamento desnecessario.

	if ( qt_registros_proc_xml_w > 0) then
	
		--Chama primeiramente para setar as estruturas.

		SELECT * FROM pls_pos_estabelecido_pck.atualiza_conversoes_proc( 	tb_seq_item_p, tb_proc_conv_p, tb_origem_proc_conv_p, tb_proc_conv_xml_p, tb_origem_proc_conv_xml_p, tb_seq_regra_p, tb_seq_regra_xml_p ) INTO STRICT _ora2pg_r;
  	tb_seq_item_p := _ora2pg_r.tb_seq_item_p; tb_proc_conv_p := _ora2pg_r.tb_proc_conv_p; tb_origem_proc_conv_p := _ora2pg_r.tb_origem_proc_conv_p; tb_proc_conv_xml_p := _ora2pg_r.tb_proc_conv_xml_p; tb_origem_proc_conv_xml_p := _ora2pg_r.tb_origem_proc_conv_xml_p; tb_seq_regra_p := _ora2pg_r.tb_seq_regra_p; tb_seq_regra_xml_p  := _ora2pg_r.tb_seq_regra_xml_p;
	
		for r_c01_w in C01 loop
		
			if	((r_c01_w.nr_seq_congenere IS NOT NULL AND r_c01_w.nr_seq_congenere::text <> '') and (r_c01_w.ie_tipo_segurado in ('R','T','I','C','H'))) then
				
				if (r_c01_w.ie_tipo_conta = 'C' and r_c01_w.ie_tipo_repasse <> 'P') then
					ie_calculo_pos_estab_w := 'IC';
					
				elsif (r_c01_w.ie_tipo_conta = 'I' and r_c01_w.ie_tipo_plano in ('2','3')) then
					ie_calculo_pos_estab_w := 'IC';
				end if;
			end if;
		
			--Obt_m a Convers_o de c_digo do item para cobran_a de p_s_estabelecido.

			if ( ie_calculo_pos_estab_w = 'IC') then
				
				pls_obter_proced_conversao(	r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, r_c01_w.nr_seq_prestador_exec,
								cd_estabelecimento_p, 1, r_c01_w.nr_seq_congenere,
								null, 'E', null,
								r_c01_w.nr_seq_intercambio, null, null,
								r_c01_w.ie_tipo_intercambio, cd_item_convertido_w, ie_origem_conversao_w,
								nr_seq_regra_conversao_w, ie_somente_codigo_w, clock_timestamp(),
								r_c01_w.nr_seq_tipo_atendimento, null, null);
			else
			
				pls_obter_proced_conversao(	r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, r_c01_w.nr_seq_prestador_exec,
								cd_estabelecimento_p, 5, r_c01_w.nr_seq_congenere,
								null, 'E', r_c01_w.nr_seq_contrato,
								r_c01_w.nr_seq_intercambio, r_c01_w.nr_seq_ops_congenere, null,
								r_c01_w.ie_tipo_intercambio, cd_item_convertido_w, ie_origem_conversao_w,
								nr_seq_regra_conversao_w, ie_somente_codigo_w, clock_timestamp(),
								r_c01_w.nr_seq_tipo_atendimento, null, null);

			end if;
			
			--Obt_m a convers_o de c_digo do item para envio para o xml.

			pls_obter_proced_conversao(	r_c01_w.cd_procedimento, r_c01_w.ie_origem_proced, r_c01_w.nr_seq_prestador_exec,
							cd_estabelecimento_p, 6, r_c01_w.nr_seq_congenere,
							null, 'E', r_c01_w.nr_seq_contrato,
							r_c01_w.nr_seq_intercambio, r_c01_w.nr_seq_ops_congenere, null,
							r_c01_w.ie_tipo_intercambio, cd_item_convertido_xml_w, ie_origem_conversao_xml_w,
							nr_seq_regra_conversao_xml_w, ie_somente_codigo_w, clock_timestamp(),
							r_c01_w.nr_seq_tipo_atendimento, null, null);
			
			
			tb_proc_conv_p(i)		:= cd_item_convertido_w;
			tb_proc_conv_xml_p(i)		:= cd_item_convertido_xml_w;
			tb_origem_proc_conv_p(i)	:= ie_origem_conversao_w;
			tb_origem_proc_conv_xml_p(i)	:= ie_origem_conversao_xml_w;
			tb_seq_regra_p(i)		:= nr_seq_regra_conversao_w;
			tb_seq_regra_xml_p(i)		:= nr_seq_regra_conversao_xml_w;
			tb_seq_item_p(i)		:= r_c01_w.nr_sequencia;
			
			if (i > pls_util_cta_pck.qt_registro_transacao_w) then
				
				SELECT * FROM pls_pos_estabelecido_pck.atualiza_conversoes_proc( 	tb_seq_item_p, tb_proc_conv_p, tb_origem_proc_conv_p, tb_proc_conv_xml_p, tb_origem_proc_conv_xml_p, tb_seq_regra_p, tb_seq_regra_xml_p ) INTO STRICT _ora2pg_r;
  	tb_seq_item_p := _ora2pg_r.tb_seq_item_p; tb_proc_conv_p := _ora2pg_r.tb_proc_conv_p; tb_origem_proc_conv_p := _ora2pg_r.tb_origem_proc_conv_p; tb_proc_conv_xml_p := _ora2pg_r.tb_proc_conv_xml_p; tb_origem_proc_conv_xml_p := _ora2pg_r.tb_origem_proc_conv_xml_p; tb_seq_regra_p := _ora2pg_r.tb_seq_regra_p; tb_seq_regra_xml_p  := _ora2pg_r.tb_seq_regra_xml_p;
				
				i := 0;
			else
				i := i + 1;
			end if;
			
		end loop;
	
		SELECT * FROM pls_pos_estabelecido_pck.atualiza_conversoes_proc( 	tb_seq_item_p, tb_proc_conv_p, tb_origem_proc_conv_p, tb_proc_conv_xml_p, tb_origem_proc_conv_xml_p, tb_seq_regra_p, tb_seq_regra_xml_p) INTO STRICT _ora2pg_r;
  	tb_seq_item_p := _ora2pg_r.tb_seq_item_p; tb_proc_conv_p := _ora2pg_r.tb_proc_conv_p; tb_origem_proc_conv_p := _ora2pg_r.tb_origem_proc_conv_p; tb_proc_conv_xml_p := _ora2pg_r.tb_proc_conv_xml_p; tb_origem_proc_conv_xml_p := _ora2pg_r.tb_origem_proc_conv_xml_p; tb_seq_regra_p := _ora2pg_r.tb_seq_regra_p; tb_seq_regra_xml_p := _ora2pg_r.tb_seq_regra_xml_p;
	end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.processa_conv_procedimentos ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
