-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

					

/*	Identifica o tipo de valorizacao de p_s-estabelecido que ser_ aplicada.
	Regras em: OPS - Cadastro de Regras\OPS - Contas M_dicas\Tipo cobran_a valor P_s-estabelecido
*/



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.identifica_tp_valor_pos_estab (nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


dados_regra_preco_pos_estab_w	pls_cta_valorizacao_pck.dados_regra_preco_pos_estab;
dados_conta_pos_w		pls_cta_valorizacao_pck.dados_conta_pos;
ie_origem_proc_regra_w		procedimento.ie_origem_proced%type;
nr_seq_ops_congenere_w		pls_intercambio.nr_seq_oper_congenere%type;
nr_seq_regra_w			dados_regra_preco_pos_estab_w.nr_sequencia%type;
ie_tipo_valor_w			dados_regra_preco_pos_estab_w.ie_tipo_valor%type;
tb_regra_tipo_pos_w		pls_util_cta_pck.t_number_table;
tb_seq_tab_temp_w 	   	pls_util_cta_pck.t_number_table;
tb_ie_tipo_valor_pos_w          pls_util_cta_pck.t_varchar2_table_3;
i				integer := 0;
					
C01 CURSOR FOR
	SELECT	proc.nr_sequencia,
		proc.cd_procedimento,
		proc.ie_origem_proced,
		proc.dt_item,
		proc.nr_seq_congenere,
		(	SELECT	max(x.nr_seq_grupo_rec)
			from	procedimento x
			where	x.ie_origem_proced = proc.ie_origem_proced
			and	x.cd_procedimento = proc.cd_procedimento) nr_seq_grupo_rec,
		conta.nr_seq_segurado,
		conta.nr_seq_prestador_exec,
		conta.ie_origem_conta,
		conta.ie_tipo_intercambio,
		conta.ie_origem_protocolo,
		conta.ie_apresentacao,
		conta.nr_seq_prestador_prot,
		conta.nr_seq_intercambio,
		conta.nr_seq_prest_inter
	from	w_pls_conta_pos_proc 	proc,
		pls_conta_v		conta
	where	proc.ie_gera_valor_pos_estab in ('S', 'SB')
	and	proc.nr_seq_conta = conta.nr_sequencia;
	
C02 CURSOR FOR
	SELECT	mat.nr_sequencia,
		mat.nr_seq_material,
		mat.dt_item,
		mat.nr_seq_congenere,
		mat.ie_tipo_despesa,
		conta.nr_seq_segurado,
		conta.nr_seq_prestador_exec,
		conta.ie_origem_conta,
		conta.ie_tipo_intercambio,
		conta.ie_origem_protocolo,
		conta.ie_apresentacao,
		conta.nr_seq_prestador_prot,
		conta.nr_seq_intercambio,
		conta.nr_seq_prest_inter
	from	w_pls_conta_pos_mat 	mat,
		pls_conta_v		conta
	where	mat.ie_gera_valor_pos_estab in ('S', 'SB')
	and	mat.nr_seq_conta = conta.nr_sequencia;
	
BEGIN

	--Se na gest_o de operadoras estiver definido que o c_lculo de p_s-estabelecido deve ser conforme Regras, ent_o prossegue 

	--com identificacao do tipo de p_s-estabelecido.

	if ( current_setting('pls_pos_estabelecido_pck.ie_calculo_pos_estab_sistema_w')::pls_parametros.ie_calculo_pos_estab%type = 'R') then

		dados_conta_pos_w := null;
		dados_regra_preco_pos_estab_w := null;
		tb_regra_tipo_pos_w.delete;
		tb_ie_tipo_valor_pos_w.delete;
		tb_seq_tab_temp_w.delete;
		--Processa procedimentos

		for r_c01_w in C01 loop
		
			if (r_c01_w.nr_seq_intercambio IS NOT NULL AND r_c01_w.nr_seq_intercambio::text <> '') then
				select	max(nr_seq_oper_congenere)
				into STRICT	nr_seq_ops_congenere_w
				from	pls_intercambio
				where	nr_sequencia = r_c01_w.nr_seq_intercambio;
			end if;
		
			pls_obter_estrut_proc(	r_c01_w.cd_procedimento,
						r_c01_w.ie_origem_proced,	
						dados_conta_pos_w.cd_area_procedimento,
						dados_conta_pos_w.cd_especialidade,
						dados_conta_pos_w.cd_grupo_proc, 
						ie_origem_proc_regra_w);
						
			dados_conta_pos_w.ie_tipo_desp_mat	:= null;
			dados_conta_pos_w.ie_apresentacao_prot 	:= r_c01_w.ie_apresentacao;
			dados_conta_pos_w.nr_seq_prestador_prot	:= r_c01_w.nr_seq_prestador_prot;
			dados_conta_pos_w.nr_seq_congenere	:= r_c01_w.nr_seq_congenere;
			dados_conta_pos_w.nr_seq_segurado	:= r_c01_w.nr_seq_segurado;
			dados_conta_pos_w.dt_referencia		:= r_c01_w.dt_item;
			dados_conta_pos_w.ie_origem_conta	:= r_c01_w.ie_origem_conta;
			dados_conta_pos_w.nr_seq_grupo_rec	:= r_c01_w.nr_seq_grupo_rec;
			dados_conta_pos_w.cd_procedimento	:= r_c01_w.cd_procedimento;
			dados_conta_pos_w.ie_origem_proced	:= r_c01_w.ie_origem_proced;
			dados_conta_pos_w.nr_seq_prestador_exec	:= r_c01_w.nr_seq_prestador_exec;
			dados_conta_pos_w.ie_origem_protocolo	:= r_c01_w.ie_origem_protocolo;
			dados_conta_pos_w.ie_tipo_intercambio	:= r_c01_w.ie_tipo_intercambio;
			dados_conta_pos_w.ie_tipo_congenere	:= coalesce(pls_obter_dados_cooperativa(coalesce(nr_seq_ops_congenere_w, r_c01_w.nr_seq_congenere),'IT'),'A');
			dados_conta_pos_w.nr_seq_prest_inter := r_c01_w.nr_seq_prest_inter;
		
			pls_obter_tipo_valor_pos_estab(	dados_conta_pos_w, nm_usuario_p, cd_estabelecimento_p,
							dados_regra_preco_pos_estab_w);
			
			tb_regra_tipo_pos_w(i)		:= dados_regra_preco_pos_estab_w.nr_sequencia;
			tb_ie_tipo_valor_pos_w(i)	:= dados_regra_preco_pos_estab_w.ie_tipo_valor;
			tb_seq_tab_temp_w(i)		:= r_c01_w.nr_sequencia;
			
			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then
				
				CALL pls_pos_estabelecido_pck.atualiza_info_tab_proc_temp( tb_seq_tab_temp_w, tb_regra_tipo_pos_w, tb_ie_tipo_valor_pos_w);
				tb_regra_tipo_pos_w.delete;
				tb_ie_tipo_valor_pos_w.delete;
				tb_seq_tab_temp_w.delete;
				i := 0;
			else	
				i := i + 1;
			end if;
		
		end loop;
		
		--Sobrando registros para atualizar.

		CALL pls_pos_estabelecido_pck.atualiza_info_tab_proc_temp(tb_seq_tab_temp_w, tb_regra_tipo_pos_w, tb_ie_tipo_valor_pos_w);
		tb_regra_tipo_pos_w.delete;
		tb_ie_tipo_valor_pos_w.delete;
		tb_seq_tab_temp_w.delete;
		i := 0;
		
		--Processa os materiais

		for r_c02_w in C02 loop
		
			if (r_c02_w.nr_seq_intercambio IS NOT NULL AND r_c02_w.nr_seq_intercambio::text <> '') then
				select	max(nr_seq_oper_congenere)
				into STRICT	nr_seq_ops_congenere_w
				from	pls_intercambio
				where	nr_sequencia = r_c02_w.nr_seq_intercambio;
			end if;
									
			dados_conta_pos_w.nr_seq_congenere	:= r_c02_w.nr_seq_congenere;
			dados_conta_pos_w.nr_seq_prestador_prot	:= r_c02_w.nr_seq_prestador_prot;
			dados_conta_pos_w.ie_apresentacao_prot 	:= r_c02_w.ie_apresentacao;
			dados_conta_pos_w.ie_tipo_desp_mat	:= r_c02_w.ie_tipo_despesa;
			dados_conta_pos_w.nr_seq_material	:= r_c02_w.nr_seq_material;
			dados_conta_pos_w.nr_seq_segurado	:= r_c02_w.nr_seq_segurado;
			dados_conta_pos_w.dt_referencia		:= r_c02_w.dt_item;
			dados_conta_pos_w.cd_area_procedimento	:= null;
			dados_conta_pos_w.cd_especialidade	:= null;
			dados_conta_pos_w.cd_grupo_proc		:= null;
			dados_conta_pos_w.ie_origem_conta	:= r_c02_w.ie_origem_conta;
			dados_conta_pos_w.nr_seq_grupo_rec	:= null;
			dados_conta_pos_w.nr_seq_prestador_exec	:= r_c02_w.nr_seq_prestador_exec;
			dados_conta_pos_w.ie_tipo_intercambio	:= r_c02_w.ie_tipo_intercambio;
			dados_conta_pos_w.ie_origem_protocolo	:= r_c02_w.ie_origem_protocolo;
			dados_conta_pos_w.ie_tipo_congenere	:= coalesce(pls_obter_dados_cooperativa(coalesce(nr_seq_ops_congenere_w, r_c02_w.nr_seq_congenere),'IT'),'A');
			dados_conta_pos_w.cd_procedimento	:= null;
			dados_conta_pos_w.ie_origem_proced	:= null;
			dados_conta_pos_w.nr_seq_prest_inter := r_c02_w.nr_seq_prest_inter;
			
			pls_obter_tipo_valor_pos_estab(	dados_conta_pos_w, nm_usuario_p, cd_estabelecimento_p,
							dados_regra_preco_pos_estab_w);
			
			tb_regra_tipo_pos_w(i)		:= dados_regra_preco_pos_estab_w.nr_sequencia;
			tb_ie_tipo_valor_pos_w(i)	:= dados_regra_preco_pos_estab_w.ie_tipo_valor;
			tb_seq_tab_temp_w(i)		:= r_c02_w.nr_sequencia;
			
			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then
				
				CALL pls_pos_estabelecido_pck.atualiza_info_tab_mat_temp( tb_seq_tab_temp_w, tb_regra_tipo_pos_w, tb_ie_tipo_valor_pos_w);
				tb_regra_tipo_pos_w.delete;
				tb_ie_tipo_valor_pos_w.delete;
				tb_seq_tab_temp_w.delete;
				i := 0;
			else	
				i := i + 1;
			end if;
		end loop;
		
		--Sobrando registros para atualizar.

		CALL pls_pos_estabelecido_pck.atualiza_info_tab_mat_temp(tb_seq_tab_temp_w, tb_regra_tipo_pos_w, tb_ie_tipo_valor_pos_w);
		tb_regra_tipo_pos_w.delete;
		tb_ie_tipo_valor_pos_w.delete;
		tb_seq_tab_temp_w.delete;
		i := 0;
	end if;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.identifica_tp_valor_pos_estab (nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
