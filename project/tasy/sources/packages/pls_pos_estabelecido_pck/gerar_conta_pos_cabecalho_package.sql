-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.gerar_conta_pos_cabecalho ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


qt_conta_pos_w		integer := 0;
qt_cabecalho_rec_w	integer := 0;
i			integer := 0;
rec_dados_pos_cab_w	table_conta_cabecalho;
tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;
tb_ie_classificacao_w	pls_util_cta_pck.t_varchar2_table_2;
tb_ie_indicador_dorn_w	pls_util_cta_pck.t_varchar2_table_2;
tb_cd_doenca_w		pls_util_cta_pck.t_varchar2_table_10;
tb_nr_declaracao_w	pls_util_cta_pck.t_varchar2_table_20;
tb_ds_diagnostico_w	pls_util_cta_pck.t_varchar2_table_4000;

/*
	Retorna a conta ou contas a serem processadas para geracao de cabe_alho do p_s-estabelecido. Como a entrada 
	sempre ser_ apenas um dos valores(ou conta, ou protocolo, etc), n_o ir_ repetir sequencias de contas para o
	processamento.
*/

c_contas CURSOR(	nr_seq_lote_pc			pls_lote_protocolo_conta.nr_sequencia%type,
                        nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
                        nr_seq_lote_processo_pc		pls_cta_lote_processo.nr_sequencia%type,
                        nr_seq_analise_pc		pls_analise_conta.nr_sequencia%type,
                        nr_seq_conta_pc			pls_conta.nr_sequencia%type,
                        nr_seq_proc_pc			pls_conta_proc.nr_sequencia%type,
                        nr_seq_mat_pc			pls_conta_mat.nr_sequencia%type)FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_segurado,
		a.cd_guia,
		a.cd_guia_prestador,
		a.cd_guia_referencia,
		a.nr_seq_tipo_atendimento,
		a.dt_alta,
		a.nr_seq_saida_spsadt,
		a.dt_entrada,
		a.ie_tipo_consulta,
		a.cd_excecao,
		a.nr_seq_congenere,
		a.dt_atendimento_referencia,
		a.cd_medico_solicitante,
		a.cd_medico_executor,
		a.ie_carater_internacao,
		a.ie_indicacao_acidente,
		a.nr_seq_tipo_acomodacao,
		a.nr_seq_clinica,
		a.ie_regime_internacao,
		a.cd_cooperativa,
		a.ie_recem_nascido,
		b.dt_recebimento,
		a.nr_seq_saida_consulta,
		a.nr_seq_saida_int,
		a.ie_tipo_guia,
		b.dt_mes_competencia,
		b.nr_protocolo_prestador,
		b.dt_atualizacao_nrec dt_protocolo,
		a.cd_senha,
		a.nr_seq_prestador,
		a.nr_seq_prestador_exec,
		a.ie_tipo_segurado,
		a.ie_origem_conta,
		a.nr_seq_fatura,
		a.nr_seq_nota_cobranca,
		a.cd_senha_externa,
		a.cd_usuario_plano_imp,
		a.nr_seq_grau_partic,
		a.ie_tipo_doenca,
		a.ie_tipo_acomodacao_ptu,
		b.ie_tipo_protocolo,
		a.cd_estabelecimento,
		(	SELECT 	min(nr_sequencia)
			from	pls_tipo_acomodacao c
			where 	c.ie_tipo_acomodacao_ptu = a.ie_tipo_acomodacao_ptu
			and	c.ie_situacao 		 = 'A') nr_seq_tipo_acomodacao_ptu,
		(	select  max(b.nr_sequencia)
			from  	pls_contestacao c,
				pls_contestacao_discussao d
			where  	d.nr_seq_contestacao	= c.nr_sequencia
			and  	c.nr_seq_conta		= a.nr_sequencia) nr_seq_discussao,
		(	select	max(nr_sequencia)
			from	pls_rec_glosa_conta
			where	nr_seq_conta	= a.nr_sequencia) nr_seq_conta_rec,
		(	select 	count(1)
			from	pls_conta_pos_cabecalho
			where	nr_seq_conta = a.nr_sequencia) qt_cabecalhos,
		nextval('pls_conta_pos_cabecalho_seq')	nr_seq_pos_cab,
		b.nr_sequencia nr_seq_protocolo,
		b.nr_seq_prestador nr_seq_prestador_atend,
		(	select	CASE WHEN coalesce(max(cd_cgc)::text, '') = '' THEN 'PF'  ELSE 'PJ' END 
			from	pls_prestador
			where	nr_sequencia	= a.nr_seq_prestador_exec) ie_tipo_prestador_exec,
		(	select	CASE WHEN coalesce(max(cd_cgc)::text, '') = '' THEN 'PF'  ELSE 'PJ' END 
			from	pls_prestador
			where	nr_sequencia	= b.nr_seq_prestador) ie_tipo_prestador_atend,
		(	select	max(y.ie_preco)
			from	pls_segurado x,
				pls_plano y
			where	y.nr_sequencia	= x.nr_seq_plano
			and	x.nr_sequencia	= a.nr_seq_segurado) ie_preco
	from  	pls_protocolo_conta b,
		pls_conta a
	where  	a.nr_seq_protocolo = b.nr_sequencia
	and  	a.nr_sequencia  in (	select 	nr_sequencia
					from	pls_conta_v
					where	nr_seq_lote_conta = nr_seq_lote_pc
					
union all

					select 	nr_sequencia
					from	pls_conta_v
					where	nr_seq_protocolo = nr_seq_protocolo_pc
					
union all

					select 	nr_sequencia
					from	pls_conta_v conta
					where	exists (select	1
							from	pls_cta_lote_proc_conta lote 
							where	lote.nr_seq_lote_processo	= nr_seq_lote_processo_pc 
							and     lote.nr_seq_conta		= conta.nr_sequencia)
					
union all

					select	nr_sequencia
					from	pls_conta_v
					where	nr_seq_analise = nr_seq_analise_pc
					
union all

					select 	nr_sequencia
					from	pls_conta_v
					where	nr_sequencia 	 = nr_seq_conta_pc
					
union all

					select 	nr_seq_conta
					from	pls_conta_proc
					where	nr_sequencia = nr_seq_proc_pc
					
union all

					select 	nr_seq_conta
					from	pls_conta_mat
					where 	nr_sequencia = nr_seq_mat_pc);
	
c_cabecalho CURSOR(	nr_seq_lote_pc			pls_lote_protocolo_conta.nr_sequencia%type,
                        nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
                        nr_seq_lote_processo_pc		pls_cta_lote_processo.nr_sequencia%type,
                        nr_seq_analise_pc		pls_analise_conta.nr_sequencia%type,
                        nr_seq_conta_pc			pls_conta.nr_sequencia%type,
                        nr_seq_proc_pc			pls_conta_proc.nr_sequencia%type,
                        nr_seq_mat_pc			pls_conta_mat.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		nr_seq_conta
	from	pls_conta_pos_cabecalho
	where	nr_seq_conta in (	SELECT 	nr_sequencia
					from	pls_conta_v
					where	nr_seq_lote_conta = nr_seq_lote_pc
					
union all

					select 	nr_sequencia
					from	pls_conta_v
					where	nr_seq_protocolo = nr_seq_protocolo_pc
					
union all

					select 	nr_sequencia
					from	pls_conta_v conta
					where	exists (select	1
							from	pls_cta_lote_proc_conta lote 
							where	lote.nr_seq_lote_processo	= nr_seq_lote_processo_pc 
							and     lote.nr_seq_conta		= conta.nr_sequencia)
					
union all

					select	nr_sequencia
					from	pls_conta_v
					where	nr_seq_analise = nr_seq_analise_pc
					
union all

					select 	nr_sequencia
					from	pls_conta_v
					where	nr_sequencia 	 = nr_seq_conta_pc
					
union all

					select 	nr_seq_conta
					from	pls_conta_proc
					where	nr_sequencia = nr_seq_proc_pc
					
union all

					select 	nr_seq_conta
					from	pls_conta_mat
					where 	nr_sequencia = nr_seq_mat_pc);
	
C02 CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		nr_decl_nasc_vivo
	from	pls_diagnostico_nasc_vivo
	where	nr_seq_conta = nr_seq_conta_pc;
	
C03 CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_doenca,
		nr_declaracao_obito,
		ie_indicador_dorn
	from	pls_diagnost_conta_obito
	where	nr_seq_conta = nr_seq_conta_pc;
	
C04 CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_doenca,
		ds_diagnostico,
		ie_classificacao
	from	pls_diagnostico_conta
	where	nr_seq_conta = nr_seq_conta_pc;
	
BEGIN
	
	 rec_dados_pos_cab_w := pls_pos_estabelecido_pck.insere_conta_pos_cabecalho( rec_dados_pos_cab_w, nm_usuario_p);
	for r_c01_w in c_contas(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p,
				nr_seq_analise_p, nr_seq_conta_p, nr_seq_proc_p, nr_seq_mat_p) loop
		
		if (r_c01_w.qt_cabecalhos = 0) then
			select	count(1)
			into STRICT	qt_conta_pos_w
			from	pls_conta_pos_cabecalho
			where	nr_seq_conta   = r_c01_w.nr_sequencia
			and	((nr_seq_discussao = r_c01_w.nr_seq_discussao) or (coalesce(r_c01_w.nr_seq_discussao::text, '') = ''));
			
			select count(1)
			into STRICT	qt_cabecalho_rec_w
			from	pls_conta_pos_cabecalho
			where	nr_seq_conta   = nr_seq_conta_p
			and	nr_seq_conta_rec = r_c01_w.nr_seq_conta_rec;
			
			--Se n_o tem cabe_alho gerado para o p_s ou para recurso de glosa

			if	((qt_conta_pos_w = 0) or ((r_c01_w.nr_seq_conta_rec IS NOT NULL AND r_c01_w.nr_seq_conta_rec::text <> '') and qt_cabecalho_rec_w = 0)) then
				
				if ( coalesce(r_c01_w.nr_seq_conta_rec::text, '') = '') then
					delete  FROM pls_conta_pos_cabecalho
					where  nr_seq_conta  = nr_seq_conta_p
					and  ((nr_seq_discussao = r_c01_w.nr_seq_discussao) or (coalesce(r_c01_w.nr_seq_discussao::text, '') = ''));
				end if;
			end if;
			
			rec_dados_pos_cab_w.nr_sequencia(i)		:= r_c01_w.nr_seq_pos_cab;
			rec_dados_pos_cab_w.nr_seq_conta(i)		:= r_c01_w.nr_sequencia;
			rec_dados_pos_cab_w.nr_seq_segurado(i)		:= r_c01_w.nr_seq_segurado;
			rec_dados_pos_cab_w.cd_guia(i)			:= r_c01_w.cd_guia;
			rec_dados_pos_cab_w.cd_guia_prestador(i)	:= r_c01_w.cd_guia_prestador;
			rec_dados_pos_cab_w.cd_guia_referencia(i)	:= r_c01_w.cd_guia_referencia;
			rec_dados_pos_cab_w.nr_seq_tipo_atendimento(i)	:= r_c01_w.nr_seq_tipo_atendimento;
			rec_dados_pos_cab_w.dt_alta(i)			:= r_c01_w.dt_alta;
			rec_dados_pos_cab_w.nr_seq_saida_spsadt(i)	:= r_c01_w.nr_seq_saida_spsadt;
			rec_dados_pos_cab_w.dt_entrada(i)		:= r_c01_w.dt_entrada;
			rec_dados_pos_cab_w.ie_tipo_consulta(i)		:= r_c01_w.ie_tipo_consulta;
			rec_dados_pos_cab_w.cd_excecao(i)		:= r_c01_w.cd_excecao;
			rec_dados_pos_cab_w.nr_seq_congenere(i)		:= r_c01_w.nr_seq_congenere;
			rec_dados_pos_cab_w.dt_atendimento(i)		:= r_c01_w.dt_atendimento_referencia;
			rec_dados_pos_cab_w.cd_medico_solicitante(i)	:= r_c01_w.cd_medico_solicitante;
			rec_dados_pos_cab_w.cd_medico_executor(i)	:= r_c01_w.cd_medico_executor;
			rec_dados_pos_cab_w.ie_carater_internacao(i)	:= r_c01_w.ie_carater_internacao;
			rec_dados_pos_cab_w.ie_indicacao_acidente(i)	:= r_c01_w.ie_indicacao_acidente;
			rec_dados_pos_cab_w.nr_seq_tipo_acomodacao(i)	:= coalesce(r_c01_w.nr_seq_tipo_acomodacao, r_c01_w.nr_seq_tipo_acomodacao_ptu);
			rec_dados_pos_cab_w.nr_seq_clinica(i)		:= r_c01_w.nr_seq_clinica;
			rec_dados_pos_cab_w.ie_regime_internacao(i)	:= r_c01_w.ie_regime_internacao;
			rec_dados_pos_cab_w.cd_cooperativa(i)		:= r_c01_w.cd_cooperativa;
			rec_dados_pos_cab_w.ie_recem_nascido(i)		:= r_c01_w.ie_recem_nascido;
			rec_dados_pos_cab_w.dt_recebimento_prot(i)	:= r_c01_w.dt_recebimento;
			rec_dados_pos_cab_w.nr_seq_saida_consulta(i)	:= r_c01_w.nr_seq_saida_consulta;
			rec_dados_pos_cab_w.nr_seq_saida_int(i)		:= r_c01_w.nr_seq_saida_int;
			rec_dados_pos_cab_w.ie_tipo_guia(i)		:= r_c01_w.ie_tipo_guia;
			rec_dados_pos_cab_w.dt_mes_competencia(i)	:= r_c01_w.dt_mes_competencia;
			rec_dados_pos_cab_w.nr_protocolo_prestador(i)	:= r_c01_w.nr_protocolo_prestador;
			rec_dados_pos_cab_w.dt_protocolo(i)		:= r_c01_w.dt_protocolo;
			rec_dados_pos_cab_w.cd_senha(i)			:= r_c01_w.cd_senha;
			rec_dados_pos_cab_w.nr_seq_prestador(i)		:= r_c01_w.nr_seq_prestador;
			rec_dados_pos_cab_w.nr_seq_prestador_exec(i)	:= r_c01_w.nr_seq_prestador_exec;
			rec_dados_pos_cab_w.ie_tipo_segurado(i)		:= r_c01_w.ie_tipo_segurado;
			rec_dados_pos_cab_w.ie_origem_conta(i)		:= r_c01_w.ie_origem_conta;
			rec_dados_pos_cab_w.nr_seq_fatura(i)		:= r_c01_w.nr_seq_fatura;
			rec_dados_pos_cab_w.nr_seq_nota_cobranca(i)	:= r_c01_w.nr_seq_nota_cobranca;
			rec_dados_pos_cab_w.cd_senha_externa(i)		:= r_c01_w.cd_senha_externa;
			rec_dados_pos_cab_w.cd_usuario_plano_imp(i)	:= r_c01_w.cd_usuario_plano_imp;
			rec_dados_pos_cab_w.nr_seq_grau_partic(i)	:= r_c01_w.nr_seq_grau_partic;
			rec_dados_pos_cab_w.ie_tipo_doenca(i)		:= r_c01_w.ie_tipo_doenca;
			rec_dados_pos_cab_w.ie_tipo_acomodacao_ptu(i)	:= r_c01_w.ie_tipo_acomodacao_ptu;
			rec_dados_pos_cab_w.ie_tipo_protocolo(i)	:= r_c01_w.ie_tipo_protocolo;
			rec_dados_pos_cab_w.cd_estabelecimento(i)	:= r_c01_w.cd_estabelecimento;
			rec_dados_pos_cab_w.nr_seq_discussao(i)		:= r_c01_w.nr_seq_discussao;
			rec_dados_pos_cab_w.nr_seq_conta_rec(i)		:= r_c01_w.nr_seq_conta_rec;
			rec_dados_pos_cab_w.nr_seq_protocolo(i)		:= r_c01_w.nr_seq_protocolo;
			rec_dados_pos_cab_w.nr_seq_prestador_atend(i)	:= r_c01_w.nr_seq_prestador_atend;
			rec_dados_pos_cab_w.ie_tipo_prestador_exec(i)	:= r_c01_w.ie_tipo_prestador_exec;
			rec_dados_pos_cab_w.ie_tipo_prestador_atend(i)	:= r_c01_w.ie_tipo_prestador_atend;
			rec_dados_pos_cab_w.ie_preco(i)			:= r_c01_w.ie_preco;
			
			if ( i = pls_util_cta_pck.qt_registro_transacao_w) then
				--Insere as informacaes

				rec_dados_pos_cab_w := pls_pos_estabelecido_pck.insere_conta_pos_cabecalho(rec_dados_pos_cab_w, nm_usuario_p);
				i := 0;
			else
				i := i + 1;
			end if;
		end if;
	end loop;
	
	--Se sobrarem informacaes, ent_o precisa  persistir no banco.

	rec_dados_pos_cab_w := pls_pos_estabelecido_pck.insere_conta_pos_cabecalho(rec_dados_pos_cab_w, nm_usuario_p);
	
	for r_c_cabecalho in c_cabecalho(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p,
					nr_seq_analise_p, nr_seq_conta_p, nr_seq_proc_p, nr_seq_mat_p) loop
		Open C02(r_c_cabecalho.nr_seq_conta);
		loop
			tb_nr_sequencia_w.delete;
			tb_nr_declaracao_w.delete;
			
			fetch C02 bulk collect into tb_nr_sequencia_w, tb_nr_declaracao_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			
			exit when tb_nr_sequencia_w.count = 0;
			
			forall j in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert	into	pls_diagnos_nasc_viv_pos(	dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
						nm_usuario_nrec, nr_decl_nasc_vivo, nr_seq_cabecalho,
						nr_seq_conta, nr_sequencia, nr_seq_diag_nasc_vivo)
				values (	clock_timestamp(), clock_timestamp(), nm_usuario_p,
						nm_usuario_p, tb_nr_declaracao_w(j), r_c_cabecalho.nr_sequencia,
						r_c_cabecalho.nr_seq_conta, nextval('pls_diagnos_nasc_viv_pos_seq'), tb_nr_sequencia_w(j));
			commit;
		end loop;
		close C02;
		
		Open C03(r_c_cabecalho.nr_seq_conta);
		loop
			tb_nr_sequencia_w.delete;
			tb_cd_doenca_w.delete;
			tb_nr_declaracao_w.delete;
			tb_ie_indicador_dorn_w.delete;
			
			fetch C03 bulk collect into tb_nr_sequencia_w, tb_cd_doenca_w, tb_nr_declaracao_w, tb_ie_indicador_dorn_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			
			exit when tb_nr_sequencia_w.count = 0;
			
			forall j in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert	into	pls_diag_conta_obito_pos(	cd_doenca, dt_atualizacao, dt_atualizacao_nrec,
						ie_indicador_dorn, nm_usuario, nm_usuario_nrec,
						nr_declaracao_obito, nr_seq_cabecalho, nr_seq_conta,
						nr_sequencia, nr_seq_diag_conta_obito)
				values (	tb_cd_doenca_w(j), clock_timestamp(), clock_timestamp(),
						tb_ie_indicador_dorn_w(j), nm_usuario_p, nm_usuario_p,
						tb_nr_declaracao_w(j), r_c_cabecalho.nr_sequencia, r_c_cabecalho.nr_seq_conta,
						nextval('pls_diag_conta_obito_pos_seq'), tb_nr_sequencia_w(j));
			commit;						
		end loop;
		close C03;
		
		Open C04(r_c_cabecalho.nr_seq_conta);
		loop
			tb_nr_sequencia_w.delete;
			tb_cd_doenca_w.delete;
			tb_ds_diagnostico_w.delete;
			tb_ie_classificacao_w.delete;
			
			fetch C04 bulk collect into tb_nr_sequencia_w, tb_cd_doenca_w, tb_ds_diagnostico_w, tb_ie_classificacao_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			
			exit when tb_nr_sequencia_w.count = 0;
			
			forall j in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert	into	pls_diagnostico_conta_pos(	cd_doenca, ds_diagnostico, dt_atualizacao,
						dt_atualizacao_nrec, ie_classificacao, nm_usuario,
						nm_usuario_nrec, nr_seq_cabecalho, nr_seq_conta,
						nr_seq_diagnostico_conta, nr_sequencia)
				values (	tb_cd_doenca_w(j), tb_ds_diagnostico_w(j), clock_timestamp(),
						clock_timestamp(), tb_ie_classificacao_w(j), nm_usuario_p,
						nm_usuario_p, r_c_cabecalho.nr_sequencia, r_c_cabecalho.nr_seq_conta,
						tb_nr_sequencia_w(j), nextval('pls_diagnostico_conta_pos_seq'));
			commit;
		end loop;
		close C04;
	end loop;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.gerar_conta_pos_cabecalho ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
