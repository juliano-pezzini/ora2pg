-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--rotina respons_vel pelo controle de atualizacao do valor benefici_rio nos itens.



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.processa_vl_beneficiario_itens ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_vl_benef_w	pls_util_cta_pck.t_number_table;
tb_seq_item_w	pls_util_cta_pck.t_number_table;
i		integer := 0;

C01 CURSOR FOR
	SELECT	pos_proc.nr_seq_conta_proc,
		(sum(pos_proc.vl_medico) + sum(pos_proc.vl_materiais) + sum(pos_proc.vl_custo_operacional) +
		 sum(pos_proc.vl_lib_taxa_co) + sum(pos_proc.vl_lib_taxa_material) + sum(pos_proc.vl_lib_taxa_servico)) vl_benef
	from	w_pls_conta_pos_proc 	proc,
		pls_conta_pos_proc	pos_proc
	where	proc.nr_seq_conta_proc = pos_proc.nr_seq_conta_proc
	and	proc.ie_gera_valor_pos_estab in ('S', 'SB')
	group by pos_proc.nr_seq_conta_proc;

C02 CURSOR FOR
	SELECT	pos_mat.nr_seq_conta_mat,
		(sum(pos_mat.vl_materiais) + sum(pos_mat.vl_lib_taxa_material)) vl_benef
	from	w_pls_conta_pos_mat 	mat,
		pls_conta_pos_mat	pos_mat
	where	mat.nr_seq_conta_mat = pos_mat.nr_seq_conta_mat
	and	mat.ie_gera_valor_pos_estab in ('S', 'SB')
	group by pos_mat.nr_seq_conta_mat;

BEGIN

	for r_c01_w in C01 loop
	
		tb_vl_benef_w(i) := r_c01_w.vl_benef;
		tb_seq_item_w(i) := r_c01_w.nr_seq_conta_proc;
		
		if (i > pls_util_cta_pck.qt_registro_transacao_w) then
		
			SELECT * FROM pls_pos_estabelecido_pck.atualiza_vl_beneficiario_itens( tb_vl_benef_w, tb_seq_item_w, 'P') INTO STRICT _ora2pg_r;
  tb_vl_benef_w := _ora2pg_r.tb_vl_benef_p; tb_seq_item_w := _ora2pg_r.tb_seq_item_p;
			i := 0;
		else
			i := i + 1;
		end if;
	end loop;
	SELECT * FROM pls_pos_estabelecido_pck.atualiza_vl_beneficiario_itens( tb_vl_benef_w, tb_seq_item_w, 'P') INTO STRICT _ora2pg_r;
  tb_vl_benef_w := _ora2pg_r.tb_vl_benef_p; tb_seq_item_w := _ora2pg_r.tb_seq_item_p;
	
	i := 0;
	for r_c02_w in C02 loop
	
		tb_vl_benef_w(i) := r_c02_w.vl_benef;
		tb_seq_item_w(i) := r_c02_w.nr_seq_conta_mat;
		
		if (i > pls_util_cta_pck.qt_registro_transacao_w) then
		
			SELECT * FROM pls_pos_estabelecido_pck.atualiza_vl_beneficiario_itens( tb_vl_benef_w, tb_seq_item_w, 'M') INTO STRICT _ora2pg_r;
  tb_vl_benef_w := _ora2pg_r.tb_vl_benef_p; tb_seq_item_w := _ora2pg_r.tb_seq_item_p;
			i := 0;
		else
			i := i + 1;
		end if;
	end loop;
	SELECT * FROM pls_pos_estabelecido_pck.atualiza_vl_beneficiario_itens( tb_vl_benef_w, tb_seq_item_w, 'M') INTO STRICT _ora2pg_r;
  tb_vl_benef_w := _ora2pg_r.tb_vl_benef_p; tb_seq_item_w := _ora2pg_r.tb_seq_item_p;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.processa_vl_beneficiario_itens ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
