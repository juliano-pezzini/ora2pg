-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Faz o processamento da regra de cobran_a de CO e Filme dos procedimentos eleg_veis para geracao de p_s. 



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.obter_se_cobra_co_filme ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_cobrar_co_w		pls_regra_cobr_val_pos.ie_cobrar_custo_op%type;
ie_cobrar_filme_w	pls_regra_cobr_val_pos.ie_cobrar_filme%type;
nr_seq_regra_w		pls_regra_cobr_val_pos.nr_sequencia%type;
tb_cobra_co_w		pls_util_cta_pck.t_varchar2_table_1;
tb_cobra_filme_w	pls_util_cta_pck.t_varchar2_table_1;
tb_regra_w		pls_util_cta_pck.t_number_table;
tb_seq_item_w		pls_util_cta_pck.t_number_table;
i			integer :=0;

C01 CURSOR FOR
	SELECT	proc.nr_sequencia,
		proc.nr_seq_conta_proc,
		coalesce(pos.dt_item, proc.dt_item) dt_procedimento,
		(	SELECT 	count(1)
			from	pls_proc_participante part
			where	part.nr_seq_conta_proc = proc.nr_seq_conta_proc
		) qt_participantes
	FROM w_pls_conta_pos_proc proc
LEFT OUTER JOIN pls_conta_pos_estabelecido pos ON (proc.nr_seq_conta_proc = pos.nr_seq_conta_proc)
WHERE proc.ie_gera_valor_pos_estab in ('S', 'SB');

BEGIN
	--Primeira chamada somente para zerar as estruturas

	SELECT * FROM pls_pos_estabelecido_pck.atualiza_cobranca_co_filme(tb_seq_item_w, tb_cobra_co_w, tb_cobra_filme_w, tb_regra_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_cobra_co_w := _ora2pg_r.tb_cobra_co_p; tb_cobra_filme_w := _ora2pg_r.tb_cobra_filme_p; tb_regra_w := _ora2pg_r.tb_seq_regra_p;
	for r_c01_w in C01 loop
		
		/*
			 Somente deve ser verificado a regra de cobran_a de custo operacional e filme
			 Caso n_o possua mais de um participante, caso n_o possua participante
			dentro da function ser_ verificado o grau de participacao da conta
		*/

		ie_cobrar_co_w		:= 'S';
		ie_cobrar_filme_w	:= 'S';
		nr_seq_regra_w		:= null;
		if (r_c01_w.qt_participantes <= 1) then
			pls_obter_se_cobra_co_filme( r_c01_w.nr_seq_conta_proc, r_c01_w.dt_procedimento, cd_estabelecimento_p, ie_cobrar_co_w, ie_cobrar_filme_w, nr_seq_regra_w);
			tb_cobra_co_w(i)	:= ie_cobrar_co_w;
			tb_cobra_filme_w(i)	:= ie_cobrar_filme_w;
			tb_seq_item_w(i)	:= r_c01_w.nr_sequencia;
			tb_regra_w(i)		:= nr_seq_regra_w;
			
			--Se atingir a quantidade, atualiza a informacao nas tabelas tempor_rias.

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then
				SELECT * FROM pls_pos_estabelecido_pck.atualiza_cobranca_co_filme(tb_seq_item_w, tb_cobra_co_w, tb_cobra_filme_w, tb_regra_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_cobra_co_w := _ora2pg_r.tb_cobra_co_p; tb_cobra_filme_w := _ora2pg_r.tb_cobra_filme_p; tb_regra_w := _ora2pg_r.tb_seq_regra_p;
				i := 0;
			else
				i := i + 1;
			end if;
		end if;
	end loop;
	
	SELECT * FROM pls_pos_estabelecido_pck.atualiza_cobranca_co_filme(tb_seq_item_w, tb_cobra_co_w, tb_cobra_filme_w, tb_regra_w) INTO STRICT _ora2pg_r;
 tb_seq_item_w := _ora2pg_r.tb_seq_item_p; tb_cobra_co_w := _ora2pg_r.tb_cobra_co_p; tb_cobra_filme_w := _ora2pg_r.tb_cobra_filme_p; tb_regra_w := _ora2pg_r.tb_seq_regra_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.obter_se_cobra_co_filme ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
