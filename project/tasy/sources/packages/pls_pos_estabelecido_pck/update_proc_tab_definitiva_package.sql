-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Faz atualizacao de registros j_ existentes na pls_conta_pos_proc



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.update_proc_tab_definitiva ( result_cursor_p INOUT table_dados_proc_persistir, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
BEGIN
	--Se tiver registros nas estruturas, ent_o prossegue com o update.

	if ( result_cursor_p.cd_procedimento.count > 0) then
		
		forall i in result_cursor_p.cd_procedimento.first..result_cursor_p.cd_procedimento.last
			
			update	pls_conta_pos_proc
			set 	nm_usuario			= nm_usuario_p,
				dt_atualizacao			= clock_timestamp(),
				cd_procedimento 		= result_cursor_p.cd_procedimento(i),
				dt_item				= result_cursor_p.dt_item(i), 
				ie_origem_proced		= result_cursor_p.ie_origem_proced(i),
				nr_seq_cabecalho		= result_cursor_p.nr_seq_cabecalho(i), 
				nr_seq_conta			= result_cursor_p.nr_seq_conta(i), 
				nr_seq_conta_proc		= result_cursor_p.nr_seq_conta_proc(i),                                                      
				nr_seq_regra_horario		= result_cursor_p.nr_seq_regra_horario(i),  
				qt_filme_tab			= result_cursor_p.qt_filme_tab(i),                                                           
				qt_item				= result_cursor_p.qt_item(i), 
				tx_administracao		= result_cursor_p.tx_administracao(i), 
				tx_item				= result_cursor_p.tx_item(i),                                                                
				vl_cotacao_moeda		= result_cursor_p.vl_cotacao_moeda(i), 
				vl_custo_operacional		= result_cursor_p.vl_custo_operacional(i), 
				vl_custo_operacional_calc	= result_cursor_p.vl_custo_operacional_calc(i),                                              
				vl_custo_operacional_tab	= result_cursor_p.vl_custo_operacional_tab(i), 
				vl_liberado_co_fat		= result_cursor_p.vl_liberado_co_fat(i), 
				vl_liberado_hi_fat		= result_cursor_p.vl_liberado_hi_fat(i),                                                     
				vl_liberado_material_fat	= result_cursor_p.vl_liberado_material_fat(i), 
				vl_lib_taxa_co			= result_cursor_p.vl_lib_taxa_co(i), 
				vl_lib_taxa_material		= result_cursor_p.vl_lib_taxa_material(i),                                                   
				vl_lib_taxa_servico		= result_cursor_p.vl_lib_taxa_servico(i), 
				vl_materiais			= result_cursor_p.vl_materiais(i), 
				vl_materiais_calc		= result_cursor_p.vl_materiais_calc(i),                                                      
				vl_material_tab			= result_cursor_p.vl_material_tab(i), 
				vl_medico			= result_cursor_p.vl_medico(i), 
				vl_medico_calc			= result_cursor_p.vl_medico_calc(i),                                                         
				vl_provisao			= CASE WHEN  	result_cursor_p.ie_atualiza_prov(i)='S' THEN result_cursor_p.vl_provisao(i)  ELSE result_cursor_p.vl_provisao_old(i) END , 
				vl_tabela_preco			= result_cursor_p.vl_tabela_preco(i), 
				vl_taxa_co			= result_cursor_p.vl_taxa_co(i),                                                             
				vl_taxa_material		= result_cursor_p.vl_taxa_material(i), 
				vl_taxa_servico			= result_cursor_p.vl_taxa_servico(i), 
				nr_seq_regra_preco		= result_cursor_p.nr_seq_regra_preco(i)	, 
				cd_procedimento_conv		= result_cursor_p.cd_procedimento_conv(i),
				nr_seq_regra_co_filme		= result_cursor_p.nr_seq_regra_co_filme(i),     
				ie_origem_proced_conv		= result_cursor_p.ie_origem_proced_conv(i), 
				cd_procedimento_conv_xml	= result_cursor_p.cd_procedimento_conv_xml(i), 
				nr_seq_regra_conv_xml		= result_cursor_p.nr_seq_regra_conv_xml(i),     
				ie_origem_conv_xml		= result_cursor_p.ie_origem_conv_xml(i), 
				nr_seq_regra_conv		= result_cursor_p.nr_seq_regra_conv(i), 
				dt_inicio_item			= result_cursor_p.dt_inicio_item(i), 
				dt_fim_item			= result_cursor_p.dt_fim_item(i),
				ie_origem_conta			= result_cursor_p.ie_origem_conta(i)
			where	nr_seq_conta_proc 		= result_cursor_p.nr_seq_conta_proc(i);
	end if;
	
	result_cursor_p.cd_procedimento.delete;
	result_cursor_p.dt_item.delete;
	result_cursor_p.ie_origem_proced.delete;
	result_cursor_p.nr_seq_cabecalho.delete;
	result_cursor_p.nr_seq_conta.delete;
	result_cursor_p.nr_seq_conta_proc.delete;
	result_cursor_p.nr_seq_regra_horario.delete;
	result_cursor_p.qt_filme_tab.delete;
	result_cursor_p.qt_item.delete;
	result_cursor_p.tx_administracao.delete;
	result_cursor_p.tx_item.delete;
	result_cursor_p.vl_cotacao_moeda.delete;
	result_cursor_p.vl_custo_operacional.delete;
	result_cursor_p.vl_custo_operacional_calc.delete;
	result_cursor_p.vl_custo_operacional_tab.delete;
	result_cursor_p.vl_liberado_co_fat.delete;
	result_cursor_p.vl_liberado_hi_fat.delete;
	result_cursor_p.vl_liberado_material_fat.delete;
	result_cursor_p.vl_lib_taxa_co.delete;
	result_cursor_p.vl_lib_taxa_material.delete;
	result_cursor_p.vl_lib_taxa_servico.delete;
	result_cursor_p.vl_materiais.delete;
	result_cursor_p.vl_materiais_calc.delete;
	result_cursor_p.vl_material_tab.delete;
	result_cursor_p.vl_medico.delete;
	result_cursor_p.vl_medico_calc.delete;
	result_cursor_p.vl_provisao.delete;
	result_cursor_p.vl_tabela_preco.delete;
	result_cursor_p.vl_taxa_co.delete;
	result_cursor_p.vl_taxa_material.delete;
	result_cursor_p.vl_taxa_servico.delete;
	result_cursor_p.nr_seq_regra_preco.delete;
	result_cursor_p.cd_procedimento_conv.delete;
	result_cursor_p.nr_seq_regra_co_filme.delete;
	result_cursor_p.ie_origem_proced_conv.delete;
	result_cursor_p.cd_procedimento_conv_xml.delete;
	result_cursor_p.nr_seq_regra_conv_xml.delete;
	result_cursor_p.ie_origem_conv_xml.delete;
	result_cursor_p.nr_seq_regra_conv.delete;
	result_cursor_p.dt_inicio_item.delete;
	result_cursor_p.dt_fim_item.delete;
	result_cursor_p.nr_seq_conta_proc.delete;
	result_cursor_p.ie_origem_conta.delete;
	result_cursor_p.vl_provisao_old.delete;
	result_cursor_p.ie_atualiza_prov.delete;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.update_proc_tab_definitiva ( result_cursor_p INOUT table_dados_proc_persistir, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
