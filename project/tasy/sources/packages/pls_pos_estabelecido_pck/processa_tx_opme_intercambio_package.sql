-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Rotina respons_vel pelo processamento das regras de OPME de interc_mbio(OPS - Cadastro de Regras\OPS - Faturamento\Regra de Taxa de OPME de interc_mbio)



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.processa_tx_opme_intercambio ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_proc_lancados_w		pls_conta_proc.nr_sequencia%type;
ie_obteve_regra_w		varchar(1) := 'N';
tb_seq_proc_upd_w 		pls_util_cta_pck.t_number_table;
tb_dt_atend_ref_upd_w	 	pls_util_cta_pck.t_date_table;
tb_lib_taxa_material_upd_w 	pls_util_cta_pck.t_number_table;
tb_vl_materiais_upd_w		pls_util_cta_pck.t_number_table;
tb_cd_procedimento_w		pls_util_cta_pck.t_number_table;
tb_ie_origem_proced_w		pls_util_cta_pck.t_number_table;
tb_seq_cabecalho_ins_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_ins_w		pls_util_cta_pck.t_number_table;
tb_seq_proc_ins_w 		pls_util_cta_pck.t_number_table;
tb_dt_atend_ref_ins_w		pls_util_cta_pck.t_date_table;
tb_lib_taxa_material_ins_w	pls_util_cta_pck.t_number_table;
tb_vl_materiais_ins_w		pls_util_cta_pck.t_number_table;
tb_seq_pos_proc_w		pls_util_cta_pck.t_number_table;
tb_seq_regra_w			pls_util_cta_pck.t_number_table;
tb_seq_proc_excluir_w		pls_util_cta_pck.t_number_table;
nr_seq_pos_proc_w		pls_conta_pos_proc.nr_sequencia%type;
nr_seq_conta_proc_nova_w	pls_conta_proc.nr_sequencia%type;
i				integer := 0;
i_upd				integer := 0;
vl_material_w			pls_conta_pos_mat.vl_materiais%type;
vl_lib_taxa_material_w		pls_conta_pos_mat.vl_lib_taxa_material%type;

C01 CURSOR FOR
	SELECT	mat.nr_seq_conta		nr_seq_conta,
		max(mat.nr_seq_cabecalho)	nr_seq_cabecalho,
		max(mat.dt_atendimento)		dt_atendimento,
		max(mat.nr_seq_intercambio)	nr_seq_intercambio,
		max(mat.nr_seq_congenere)	nr_seq_congenere,
		max(mat.nr_seq_congenere_seg)	nr_seq_congenere_seg,
		sum( pos_mat.vl_materiais) 	vl_materiais,
		sum( pos_mat.vl_lib_taxa_material) vl_lib_taxa_material,
		max((	SELECT	max(ie_tipo_congenere)
			from	pls_congenere
			where	nr_sequencia = mat.nr_seq_congenere)) ie_tipo_congenere,
		max(mat.nr_seq_contrato) nr_seq_contrato
	from	w_pls_conta_pos_mat 	mat,
		pls_conta_pos_mat	pos_mat
	where	mat.ie_gera_valor_pos_estab in ('S', 'SB')
	and	mat.ie_tipo_despesa = '7'
	and	mat.nr_seq_conta_mat = pos_mat.nr_seq_conta_mat
	group by mat.nr_seq_conta;
	
C02 CURSOR(	ie_tipo_congenere_pc		pls_congenere.ie_tipo_congenere%type,
		dt_atendimento_pc		pls_conta.dt_atendimento_referencia%type)FOR
	SELECT 	ie_origem_proced,
		cd_procedimento,
		tx_comercializacao,
		nr_seq_tx_opme,
		nr_seq_cooperativa,
		nr_seq_ops_congenere,
		nr_seq_intercambio,
		nr_seq_contrato
	from (SELECT	ie_origem_proced,
			cd_procedimento,
			tx_comercializacao,
			nr_sequencia nr_seq_tx_opme,
			nr_seq_cooperativa,
			nr_seq_ops_congenere,
			nr_seq_intercambio,
			nr_ordem_execucao,
			nr_seq_contrato
		from	pls_regra_tx_opme
		where	ie_tipo_congenere	= ie_tipo_congenere_pc
		and	dt_atendimento_pc	between dt_inicio_vigencia and dt_fim_vigencia_ref
		
union all

		select	ie_origem_proced,
			cd_procedimento,
			tx_comercializacao,
			nr_sequencia nr_seq_tx_opme,
			nr_seq_cooperativa,
			nr_seq_ops_congenere,
			nr_seq_intercambio,
			nr_ordem_execucao,
			nr_seq_contrato
		from	pls_regra_tx_opme
		where	ie_tipo_congenere = 'A'
		and	dt_atendimento_pc	between dt_inicio_vigencia and dt_fim_vigencia_ref) alias1
	order by
		nr_ordem_execucao desc,
		nr_seq_tx_opme;

C03 CURSOR(	nr_seq_regra_pc		pls_regra_tx_opme.nr_sequencia%type,
		cd_procedimento_pc	pls_conta_proc.cd_procedimento%type,
		ie_origem_proced_pc	pls_conta_proc.ie_origem_proced%type,
		nr_seq_conta_pc		pls_conta.nr_sequencia%type)FOR
	SELECT	distinct nr_seq_conta_proc
	from (SELECT	b.nr_sequencia nr_seq_conta_proc
		from	pls_conta_pos_proc a,
			pls_conta_proc 	   b
		where	a.nr_seq_conta 	= nr_seq_conta_pc
		and	b.nr_sequencia 	= a.nr_seq_conta_proc
		and	a.nr_seq_regra_tx_opme = nr_seq_regra_pc
		and	b.cd_procedimento  <> cd_procedimento_pc
		
union all

		select  b.nr_sequencia nr_seq_conta_proc
		from	pls_conta_pos_proc a,
			pls_conta_proc 	   b
		where	a.nr_seq_conta 	= nr_seq_conta_pc
		and	b.nr_sequencia 	= a.nr_seq_conta_proc
		and	a.nr_seq_regra_tx_opme = nr_seq_regra_pc
		and	b.ie_origem_proced  <> ie_origem_proced_pc) alias1;

BEGIN
	--Cursor com todas as contas onde existam OPME's informados

	for r_c01_w in C01 loop
		ie_obteve_regra_w := 'N';
		--Cursor de regras

		for r_c02_w in C02( r_c01_w.ie_tipo_congenere, r_c01_w.dt_atendimento) loop
			--_ltimas restricaes das regras realizadas aqui para simplificar where nas mesmas . Obs: Como provavelmente existiram poucos registros dessa regra, n_o dever_ existir 

			--diferen_a significativa em relacao a performance.			

			if	(	(coalesce(r_c02_w.nr_seq_cooperativa::text, '') = '' or r_c02_w.nr_seq_cooperativa = r_c01_w.nr_seq_congenere) and (coalesce(r_c02_w.nr_seq_ops_congenere::text, '') = '' 	or r_c02_w.nr_seq_ops_congenere = r_c01_w.nr_seq_congenere_seg) and (coalesce(r_c02_w.nr_seq_intercambio::text, '') = '' or r_c02_w.nr_seq_intercambio = r_c01_w.nr_seq_intercambio) and (coalesce(r_c02_w.nr_seq_contrato::text, '') = '' or r_c02_w.nr_seq_contrato = r_c01_w.nr_seq_contrato) and (r_c01_w.vl_materiais > 0) and ( ie_obteve_regra_w = 'N')	
				)then
				
				--C_lculo de valores com base  nos valores de p_s-estab dos OPME's existentes na conta e tx_comercializacao apontada na regra selecionada.

				vl_material_w		:= dividir(( r_c01_w.vl_materiais * r_C02_w.tx_comercializacao),100);
				vl_lib_taxa_material_w	:= dividir(( r_c01_w.vl_lib_taxa_material * r_C02_w.tx_comercializacao),100);
				ie_obteve_regra_w	:= 'S';
				
				
				--Identifico se o procedimento j_ foi lan_ado na conta em quest_o. Para tal, verifico se existe registro de p_s com a regra OPME informada, al_m de 

				--verificar c_digo e origem do procedimento vinculado a esse registro de p_s-estabelecido.

				select 	max(b.nr_sequencia)
				into STRICT	nr_seq_proc_lancados_w
				from	pls_conta_pos_proc a,
					pls_conta_proc 	   b
				where	a.nr_seq_conta = r_c01_w.nr_seq_conta
				and	b.nr_sequencia = a.nr_seq_conta_proc
				and	a.nr_seq_regra_tx_opme = r_c02_w.nr_seq_tx_opme
				and	b.cd_procedimento = r_c02_w.cd_procedimento
				and 	b.ie_origem_proced = r_c02_w.ie_origem_proced;
				
				--Faz insercao de procedimento e p_s-estab

				if (coalesce(nr_seq_proc_lancados_w::text, '') = '') then
					
					insert	into pls_conta_proc(nr_sequencia, dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
						nr_seq_conta,cd_procedimento, ie_origem_proced, qt_procedimento,qt_procedimento_imp, 
						ie_status,ie_situacao, ie_via_acesso, vl_unitario_imp,
						vl_procedimento_imp, vl_unitario, vl_liberado,vl_medico, vl_anestesista, 
						vl_auxiliares,vl_custo_operacional, vl_materiais, vl_procedimento,vl_glosa, 
						vl_beneficiario,ie_lanc_manual_pos, ie_apenas_pagamento, dt_procedimento,
						dt_inicio_proc,dt_fim_proc,tx_item)
					values ( nextval('pls_conta_proc_seq'), clock_timestamp(), nm_usuario_p,clock_timestamp(), nm_usuario_p, 
						r_c01_w.nr_seq_conta, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, 1,1, 
						'M','D', 'U',0,
						0,0,0,0,0,
						0,0,0,0,0,
						0,'S', 'N', r_c01_w.dt_atendimento,
						r_c01_w.dt_atendimento, r_c01_w.dt_atendimento,100)
					returning nr_sequencia into nr_seq_conta_proc_nova_w;
					
					CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_nova_w, nm_usuario_p);
					
					select 	nextval('pls_conta_pos_proc_seq')
					into STRICT	nr_seq_pos_proc_w
					;
					
					tb_cd_procedimento_w(i)		:= r_c02_w.cd_procedimento;
					tb_ie_origem_proced_w(i)	:= r_c02_w.ie_origem_proced;
					tb_seq_cabecalho_ins_w(i)	:= r_c01_w.nr_seq_cabecalho;
					tb_seq_conta_ins_w(i)		:= r_c01_w.nr_seq_conta;
					tb_seq_proc_ins_w(i) 		:= nr_seq_conta_proc_nova_w;
					tb_dt_atend_ref_ins_w(i)	:= r_c01_w.dt_atendimento;
					tb_lib_taxa_material_ins_w(i)	:= vl_lib_taxa_material_w;
					tb_vl_materiais_ins_w(i)	:= vl_material_w;
					tb_seq_pos_proc_w(i)		:= nr_seq_pos_proc_w;
					tb_seq_regra_w(i)		:= r_c02_w.nr_seq_tx_opme;
					
					if ( i > pls_util_cta_pck.qt_registro_transacao_w) then
						SELECT * FROM pls_pos_estabelecido_pck.insere_registro_regra_opme( 	tb_cd_procedimento_w, tb_ie_origem_proced_w, tb_seq_cabecalho_ins_w, tb_seq_conta_ins_w, tb_seq_proc_ins_w, tb_dt_atend_ref_ins_w, tb_lib_taxa_material_ins_w, tb_vl_materiais_ins_w, tb_seq_pos_proc_w, tb_seq_regra_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  	tb_cd_procedimento_w := _ora2pg_r.tb_cd_procedimento_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_seq_cabecalho_ins_w := _ora2pg_r.tb_seq_cabecalho_ins_p; tb_seq_conta_ins_w := _ora2pg_r.tb_seq_conta_ins_p; tb_seq_proc_ins_w := _ora2pg_r.tb_seq_proc_ins_p; tb_dt_atend_ref_ins_w := _ora2pg_r.tb_dt_atend_ref_ins_p; tb_lib_taxa_material_ins_w := _ora2pg_r.tb_lib_taxa_material_ins_p; tb_vl_materiais_ins_w := _ora2pg_r.tb_vl_materiais_ins_p; tb_seq_pos_proc_w := _ora2pg_r.tb_seq_pos_proc_p; tb_seq_regra_w := _ora2pg_r.tb_seq_regra_tx_opme_p;
									
						i := 0;
					else
						i := i + 1;
					end if;
					
				--Sen_o atualiza procedimentos e p_s-estabelecido

				else
					tb_seq_proc_upd_w(i_upd) 	:=  nr_seq_proc_lancados_w;
					tb_dt_atend_ref_upd_w(i_upd) 	:= r_c01_w.dt_atendimento;
					tb_lib_taxa_material_upd_w(i_upd) := vl_lib_taxa_material_w;
					tb_vl_materiais_upd_w(i_upd)	:= vl_material_w;
					
					if ( i_upd > pls_util_cta_pck.qt_registro_transacao_w) then
						
						SELECT * FROM pls_pos_estabelecido_pck.upd_proc_tx_opme(tb_seq_proc_upd_w, tb_dt_atend_ref_upd_w, tb_lib_taxa_material_upd_w, tb_vl_materiais_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_seq_proc_upd_w := _ora2pg_r.tb_seq_proc_upd_p; tb_dt_atend_ref_upd_w := _ora2pg_r.tb_dt_atend_ref_upd_p; tb_lib_taxa_material_upd_w := _ora2pg_r.tb_lib_taxa_material_p; tb_vl_materiais_upd_w := _ora2pg_r.tb_vl_materiais_p;
						i_upd:= 0;
					else
						i_upd := i_upd + 1;
				
					end if;
				end if;
				
			end if;
		end loop;
		
		CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_conta_proc(r_c01_w.nr_seq_conta, nm_usuario_p);
	end loop;
	
	SELECT * FROM pls_pos_estabelecido_pck.upd_proc_tx_opme(tb_seq_proc_upd_w, tb_dt_atend_ref_upd_w, tb_lib_taxa_material_upd_w, tb_vl_materiais_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_seq_proc_upd_w := _ora2pg_r.tb_seq_proc_upd_p; tb_dt_atend_ref_upd_w := _ora2pg_r.tb_dt_atend_ref_upd_p; tb_lib_taxa_material_upd_w := _ora2pg_r.tb_lib_taxa_material_p; tb_vl_materiais_upd_w := _ora2pg_r.tb_vl_materiais_p;
	i_upd:= 0;
	SELECT * FROM pls_pos_estabelecido_pck.insere_registro_regra_opme( 	tb_cd_procedimento_w, tb_ie_origem_proced_w, tb_seq_cabecalho_ins_w, tb_seq_conta_ins_w, tb_seq_proc_ins_w, tb_dt_atend_ref_ins_w, tb_lib_taxa_material_ins_w, tb_vl_materiais_ins_w, tb_seq_pos_proc_w, tb_seq_regra_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  	tb_cd_procedimento_w := _ora2pg_r.tb_cd_procedimento_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_seq_cabecalho_ins_w := _ora2pg_r.tb_seq_cabecalho_ins_p; tb_seq_conta_ins_w := _ora2pg_r.tb_seq_conta_ins_p; tb_seq_proc_ins_w := _ora2pg_r.tb_seq_proc_ins_p; tb_dt_atend_ref_ins_w := _ora2pg_r.tb_dt_atend_ref_ins_p; tb_lib_taxa_material_ins_w := _ora2pg_r.tb_lib_taxa_material_ins_p; tb_vl_materiais_ins_w := _ora2pg_r.tb_vl_materiais_ins_p; tb_seq_pos_proc_w := _ora2pg_r.tb_seq_pos_proc_p; tb_seq_regra_w := _ora2pg_r.tb_seq_regra_tx_opme_p;
	i := 0;
	
	--Cursor com todas as contas onde existam OPME's informados. Aqui ser_o verificados procedimentos lan_ados por regra anteriormente, mas devido a alguma alteracao na regra que 

	--acabou lan_ando outro procedimento, devem ser exclu_dos.

	for r_c01_w in C01 loop
	
		--Cursor de regras

		for r_c02_w in C02( r_c01_w.ie_tipo_congenere, r_c01_w.dt_atendimento) loop
	
			--_ltimas restricaes das regras realizadas aqui para simplificar where nas mesmas . Obs: Como provavelmente existiram poucos registros dessa regra, n_o dever_ existir 

			--diferen_a significativa em relacao a performance.

			if	(	(coalesce(r_c02_w.nr_seq_cooperativa::text, '') = '' or r_c02_w.nr_seq_cooperativa = r_c01_w.nr_seq_congenere) and (coalesce(r_c02_w.nr_seq_ops_congenere::text, '') = '' 	or r_c02_w.nr_seq_ops_congenere = r_c01_w.nr_seq_congenere_seg) and (coalesce(r_c02_w.nr_seq_intercambio::text, '') = '' or r_c02_w.nr_seq_intercambio = r_c01_w.nr_seq_intercambio) and (r_c01_w.vl_materiais > 0) and ( ie_obteve_regra_w = 'N'))then
				
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_proc_lancados_w
				from	pls_conta_pos_proc a,
					pls_conta_proc 	   b
				where	a.nr_seq_conta = r_c01_w.nr_seq_conta
				and	b.nr_sequencia = a.nr_seq_conta_proc
				and	a.nr_seq_regra_tx_opme = r_c02_w.nr_seq_tx_opme
				and (b.cd_procedimento <> r_c02_w.cd_procedimento or
					 b.ie_origem_proced <> r_c02_w.ie_origem_proced);
				
				delete 	FROM pls_analise_fluxo_ocor
				where 	nr_seq_fluxo_item     in (	SELECT 	nr_sequencia
									from	pls_analise_fluxo_item
									where	nr_seq_conta_proc	= nr_seq_proc_lancados_w);
					
				tb_seq_proc_excluir_w(i) := nr_seq_proc_lancados_w;
					
				if (i > pls_util_cta_pck.qt_registro_transacao_w) then
					
					tb_seq_proc_excluir_w := pls_pos_estabelecido_pck.delete_proc_regra_opme(tb_seq_proc_excluir_w);
					i := 0;
					
				else
					i := i + 1;
				end if;
			
			end if;
		end loop;
	end loop;
	tb_seq_proc_excluir_w := pls_pos_estabelecido_pck.delete_proc_regra_opme(tb_seq_proc_excluir_w);
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.processa_tx_opme_intercambio ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
