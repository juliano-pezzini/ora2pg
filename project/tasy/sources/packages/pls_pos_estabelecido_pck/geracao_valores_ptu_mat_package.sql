-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Rotina respons_vel pela geracao de valores de materiais para PTU.			



CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.geracao_valores_ptu_mat ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
pr_pagamento_liberado_w		double precision;					
qt_registro_w			integer := 0;
vl_lib_taxa_material_w		pls_conta_pos_mat_fat.vl_lib_taxa_material%type;
vl_materiais_w			pls_conta_pos_mat_fat.vl_materiais%type;
vl_administracao_w		pls_conta_pos_mat_fat.vl_administracao%type;	
nr_seq_conta_pos_mat_fat_w	pls_conta_pos_mat_fat.nr_sequencia%type;	
tb_nr_sequencia_upd     	pls_util_cta_pck.t_number_table;	
tb_nr_seq_conta_upd         	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_mat_pos_upd	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_resumo_upd	pls_util_cta_pck.t_number_table;	
tb_nr_seq_prestador_pgto_upd	pls_util_cta_pck.t_number_table;
tb_vl_administracao_upd     	pls_util_cta_pck.t_number_table;
tb_vl_materiais_upd  		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_ins         	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_mat_pos_ins	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_resumo_ins  	pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_pgto_ins	pls_util_cta_pck.t_number_table;
tb_vl_administracao_ins   	pls_util_cta_pck.t_number_table;
tb_vl_materiais_ins  		pls_util_cta_pck.t_number_table;
tb_seq_pos_mat_w		pls_util_cta_pck.t_number_table;
tb_dt_mes_w			pls_util_cta_pck.t_date_table;
tb_dt_mes_upd_w			pls_util_cta_pck.t_date_table;
vl_diferenca_w				double precision;
vl_ajuste_temp_w			double precision;
vl_proporcao_w				double precision;
nr_seq_contab_w				pls_conta_pos_mat_fat.nr_sequencia%type;
tb_vl_materiais_upd_p		pls_util_cta_pck.t_number_table;
tb_vl_administracao_upd_p	pls_util_cta_pck.t_number_table;
tb_nr_sequencia_upd_p		pls_util_cta_pck.t_number_table;
i				integer := 0; --Indexador para controle das estruturas de insercao
i_upd				integer := 0; --Indexador para controle das estruturas de atualizacao

--Cursor que percorre todos os materiais eleg_veis de geracao de p_s-estabelecido.	

C00 CURSOR FOR
	SELECT	nr_seq_conta_mat,
		nr_seq_conta,
		dt_mes_competencia
	from	w_pls_conta_pos_mat mat
	where	mat.ie_gera_valor_pos_estab in ('S', 'SB');

C01 CURSOR(	nr_seq_conta_pc		pls_conta_medica_resumo.nr_seq_conta%type,
		nr_seq_conta_mat_pc	pls_conta_medica_resumo.nr_seq_conta_mat%type) FOR
	SELECT	max(a.nr_sequencia) nr_seq_conta_resumo,
		a.nr_seq_conta,
		sum(a.vl_liberado) vl_lib_pagamento,
		a.nr_seq_conta_mat,
		a.nr_seq_conta_proc,
		a.nr_seq_prestador_pgto,
		sum(vl_hm) vl_hm,
		sum(vl_materiais_pag) vl_materiais_pag,
		sum(vl_co_pag) vl_co_pag,
		max(ie_tipo_item) ie_tipo_item
	from	pls_conta_medica_resumo a
	where	a.nr_seq_conta_mat	= nr_seq_conta_mat_pc 
	and 	a.nr_seq_conta 		= nr_seq_conta_pc
	and	a.ie_tipo_item 		!= 'I'
	and	a.ie_situacao 		= 'A'
	and	((a.vl_lib_original > 0) or (ie_tipo_item in ('M','P')))
	group by a.nr_seq_conta,
		 a.nr_seq_conta_mat,
		 a.nr_seq_conta_proc,
		 a.nr_seq_prestador_pgto;
		
	
C02 CURSOR(	nr_seq_conta_pc		pls_conta_medica_resumo.nr_seq_conta%type,
		nr_seq_conta_mat_pc	pls_conta_medica_resumo.nr_seq_conta_mat%type)FOR
	SELECT	a.nr_sequencia,
		(a.vl_lib_taxa_material + a.vl_materiais) vl_beneficiario,
		coalesce(a.vl_lib_taxa_material,0)  	vl_administracao,
		coalesce(a.vl_lib_taxa_material,0)	vl_lib_taxa_material,
		b.vl_prestador_pag	vl_liberado,
		coalesce(a.vl_materiais,0)	vl_materiais,
		a.nr_seq_lote_disc,
		a.nr_seq_disc_mat
	from	pls_conta_pos_mat a,
		w_pls_conta_pos_mat b
	where	a.nr_seq_conta_mat	= b.nr_seq_conta_mat
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and	a.nr_seq_conta_mat	= nr_seq_conta_mat_pc;
--	and	a.vl_materiais		>= 0;

				
C04 CURSOR(	nr_seq_conta_mat_pc	pls_conta_medica_resumo.nr_seq_conta_mat%type) FOR
	SELECT	null nr_seq_conta_resumo,
		a.nr_seq_conta,
		b.vl_prestador_pag vl_lib_pagamento,
		a.nr_seq_conta_mat nr_seq_conta_mat,
		null nr_seq_prestador_pgto,
		a.nr_seq_lote_disc,
		a.nr_seq_disc_mat
	from	pls_conta_pos_mat a,
		w_pls_conta_pos_mat b
	where	a.nr_seq_conta_mat	= nr_seq_conta_mat_pc
	and 	a.nr_seq_conta_mat	= b.nr_seq_conta_mat
	and	b.ie_tipo_conta	in ('I','D')
	and	b.ie_status	!= 'M'
	
union all

	SELECT	null nr_seq_conta_resumo,
		a.nr_seq_conta,
		b.vl_prestador_pag vl_lib_pagamento,
		a.nr_seq_conta_mat nr_seq_conta_mat,        
		b.nr_seq_prestador_exec nr_seq_prestador_pgto,
		a.nr_seq_lote_disc,
		a.nr_seq_disc_mat
	from	pls_conta_pos_mat a,
		w_pls_conta_pos_mat b
	where	a.nr_seq_conta_mat	= nr_seq_conta_mat_pc
	and 	a.nr_seq_conta_mat	= b.nr_seq_conta_mat
	and	b.ie_status	= 'M'
	and	not exists (select	1
			    from	pls_conta_medica_resumo r
			    where	r.nr_seq_conta 		= a.nr_seq_conta
			    and		r.nr_seq_conta_mat 	= a.nr_seq_conta_mat);
				
--Ajustes finais em valores 					

C05 CURSOR(nr_seq_conta_pc		pls_conta_medica_resumo.nr_seq_conta%type) FOR
	SELECT	nr_seq_conta_mat_pos nr_seq_conta_pos,
			sum(coalesce(vl_lib_taxa_material,0)) vl_lib_taxa_material,
			sum(coalesce(vl_materiais,0)) vl_materiais
	from	pls_conta_pos_mat_fat
	where	nr_seq_conta		= nr_seq_conta_pc
	and		vl_materiais	> 0
	group by nr_seq_conta_mat_pos;
	
C07 CURSOR(nr_seq_conta_pos_pc		pls_conta_pos_estab_contab.nr_seq_conta_pos%type) FOR	
	SELECT	nr_sequencia,	
		nr_seq_conta_mat_pos,
		coalesce(vl_lib_taxa_material,0) vl_lib_taxa_material,
		coalesce(vl_materiais,0) vl_materiais
	from	pls_conta_pos_mat_fat
	where	nr_seq_conta_mat_pos	= nr_seq_conta_pos_pc
	and	vl_materiais	> 0;

BEGIN

	--Percorre todos os materiais definidos para geracao de p_s-estabelecido

	for r_c00_w in C00 loop
	
		--

		for r_c01_w in C01(r_c00_w.nr_seq_conta, r_c00_w.nr_seq_conta_mat) loop
		
			for r_c02_w in C02(r_c00_w.nr_seq_conta, r_c00_w.nr_seq_conta_mat) loop
			
				vl_lib_taxa_material_w	:= 0;
				vl_materiais_w		:= 0;
				
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_conta_medica_resumo
				where	nr_seq_conta_mat	= r_c01_w.nr_seq_conta_mat
				and	nr_seq_conta		= r_c01_w.nr_seq_conta
				and	nr_seq_prestador_pgto	!= r_c01_w.nr_seq_prestador_pgto
				and	ie_tipo_item		!= 'I'
				and	ie_situacao		= 'A';
				--and	nr_seq_exame_coleta	is null;

				
				--obtencao dos valores quando todos foram agrupados em apenas um registro

				if ( qt_registro_w	= 0) then	
					
					--Existem casos que n_o tem valor liberado, por_m tem p_s-estabelecido, ent_o o percentual de pagamento _ 1

					if (r_c01_w.vl_lib_pagamento <> 0) and (r_c02_w.vl_liberado <> 0 ) then
						/* Obter o percentual do valor pago em relacao ao liberado do item da conta m_dica */


						pr_pagamento_liberado_w	:= round((dividir_sem_round( r_c01_w.vl_lib_pagamento, r_c02_w.vl_liberado))::numeric,10);
					else
						pr_pagamento_liberado_w	:= 1;
					end if;
					
					/* Aplicar o percentual obtido sobre o valor p_s estabelecido */


					vl_lib_taxa_material_w		:= round((r_c02_w.vl_lib_taxa_material * pr_pagamento_liberado_w)::numeric,2);
					vl_materiais_w			:= round((r_c02_w.vl_materiais * pr_pagamento_liberado_w)::numeric,2);

								
				--agrupamento dos registros quando estes foram agrupados em mais de um registro 

				elsif (qt_registro_w	= 1) then
				
						vl_lib_taxa_material_w	:= r_c02_w.vl_lib_taxa_material;
						vl_materiais_w		:= r_c02_w.vl_materiais;


				--agrupamento dos registros quando estes foram agrupados em mais de um registro 

				else									
					pr_pagamento_liberado_w	:= round((dividir_sem_round(r_c01_w.vl_materiais_pag,r_c02_w.vl_materiais))::numeric,10);
					
					vl_lib_taxa_material_w	:= round((r_c02_w.vl_lib_taxa_material * pr_pagamento_liberado_w)::numeric,2);
					vl_materiais_w		:= round((r_c02_w.vl_materiais * pr_pagamento_liberado_w)::numeric,2);

				end if;
				
				vl_administracao_w	:= 	coalesce(vl_lib_taxa_material_w,0);
				
				nr_seq_conta_pos_mat_fat_w	:= null;
				
				select	max(z.nr_sequencia)
				into STRICT	nr_seq_conta_pos_mat_fat_w
				from (	-- Dividido em 2 unions para tratar o pos oriundo de contestacao
					-- O primeiro _ a o p_s sem contestacao

					SELECT	t.nr_sequencia
					from	pls_conta_pos_mat_fat 	t,
						pls_conta_pos_mat	c
					where	t.nr_seq_conta			= r_c01_w.nr_seq_conta
					and	t.nr_seq_conta_resumo 		= r_c01_w.nr_seq_conta_resumo
					and	c.nr_sequencia			= t.nr_seq_conta_mat_pos
					and	coalesce(c.nr_seq_disc_mat::text, '') = ''
					and	coalesce(c.nr_seq_lote_disc::text, '') = ''
					and	coalesce(r_c02_w.nr_seq_disc_mat::text, '') = ''
					and	coalesce(r_c02_w.nr_seq_lote_disc::text, '') = ''
					-- Tenta localizar tamb_m quando tiver contestacao

					
union all

					SELECT	t.nr_sequencia
					from	pls_conta_pos_mat_fat 	t,
						pls_conta_pos_mat	c
					where	t.nr_seq_conta			= r_c01_w.nr_seq_conta
					and	t.nr_seq_conta_resumo 		= r_c01_w.nr_seq_conta_resumo
					and	c.nr_sequencia			= t.nr_seq_conta_mat_pos
					and	c.nr_seq_disc_mat		= r_c02_w.nr_seq_disc_mat
					and	c.nr_seq_lote_disc		= r_c02_w.nr_seq_lote_disc
					and	(r_c02_w.nr_seq_disc_mat IS NOT NULL AND r_c02_w.nr_seq_disc_mat::text <> '')
					and	(r_c02_w.nr_seq_lote_disc IS NOT NULL AND r_c02_w.nr_seq_lote_disc::text <> '') ) z;
			
				if ( coalesce(nr_seq_conta_pos_mat_fat_w::text, '') = '')  then
					
					select	max(z.nr_sequencia)
					into STRICT	nr_seq_conta_pos_mat_fat_w
					from (	-- Dividido em 2 unions para tratar o pos oriundo de contestacao
						-- O primeiro _ a o p_s sem contestacao

						SELECT	t.nr_sequencia
						from	pls_conta_pos_mat_fat	t,
							pls_conta_pos_mat	c
						where	t.nr_seq_conta			= r_c01_w.nr_seq_conta
						and	c.nr_seq_conta_mat 		= r_c01_w.nr_seq_conta_mat
						and	t.nr_seq_prestador_pgto		= r_c01_w.nr_seq_prestador_pgto
						and	c.nr_sequencia			= t.nr_seq_conta_mat_pos
						and	coalesce(c.nr_seq_disc_mat::text, '') = ''
						and	coalesce(c.nr_seq_lote_disc::text, '') = ''
						and	coalesce(r_c02_w.nr_seq_disc_mat::text, '') = ''
						and	coalesce(r_c02_w.nr_seq_lote_disc::text, '') = ''
						-- Tenta localizar tamb_m quando tiver contestacao

						
union all

						SELECT	t.nr_sequencia
						from	pls_conta_pos_mat_fat	t,
							pls_conta_pos_mat	c
						where	t.nr_seq_conta			= r_c01_w.nr_seq_conta
						and	c.nr_seq_conta_mat 		= r_c01_w.nr_seq_conta_mat
						and	t.nr_seq_prestador_pgto		= r_c01_w.nr_seq_prestador_pgto
						and	c.nr_sequencia			= t.nr_seq_conta_mat_pos
						and	c.nr_seq_disc_mat		= r_c02_w.nr_seq_disc_mat
						and	c.nr_seq_lote_disc		= r_c02_w.nr_seq_lote_disc
						and	(r_c02_w.nr_seq_disc_mat IS NOT NULL AND r_c02_w.nr_seq_disc_mat::text <> '')
						and	(r_c02_w.nr_seq_lote_disc IS NOT NULL AND r_c02_w.nr_seq_lote_disc::text <> '') ) z;
						
				end if;
				
				if ( coalesce(nr_seq_conta_pos_mat_fat_w::text, '') = '') then	
					tb_nr_seq_conta_ins(i)         	:= r_c01_w.nr_seq_conta;
					tb_nr_seq_conta_mat_pos_ins(i)	:= r_c02_w.nr_sequencia;
					tb_nr_seq_conta_resumo_ins(i)  	:= r_c01_w.nr_seq_conta_resumo;
					tb_nr_seq_prestador_pgto_ins(i)	:= r_c01_w.nr_seq_prestador_pgto;
					tb_vl_administracao_ins(i)     	:= vl_lib_taxa_material_w;
					tb_vl_materiais_ins(i)  	:= vl_materiais_w;
					tb_dt_mes_w(i)			:= r_c00_w.dt_mes_competencia;
					
					select 	nextval('pls_conta_pos_mat_fat_seq')
					into STRICT 	tb_seq_pos_mat_w(i)
					;
					
					if (i > pls_util_cta_pck.qt_registro_transacao_w) then
					
						SELECT * FROM pls_pos_estabelecido_pck.inserir_reg_ptu_mat( 	tb_nr_seq_conta_ins, tb_nr_seq_conta_mat_pos_ins, tb_nr_seq_conta_resumo_ins, tb_nr_seq_prestador_pgto_ins, tb_vl_administracao_ins, tb_vl_materiais_ins, tb_seq_pos_mat_w, tb_dt_mes_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  	tb_nr_seq_conta_ins := _ora2pg_r.tb_nr_seq_conta_ins_p; tb_nr_seq_conta_mat_pos_ins := _ora2pg_r.tb_nr_seq_conta_mat_pos_ins_p; tb_nr_seq_conta_resumo_ins := _ora2pg_r.tb_nr_seq_conta_resumo_ins_p; tb_nr_seq_prestador_pgto_ins := _ora2pg_r.tb_nr_seq_prestador_pgto_ins_p; tb_vl_administracao_ins := _ora2pg_r.tb_vl_administracao_ins_p; tb_vl_materiais_ins := _ora2pg_r.tb_vl_materiais_ins_p; tb_seq_pos_mat_w := _ora2pg_r.tb_seq_pos_mat_p; tb_dt_mes_w := _ora2pg_r.tb_dt_mes_p;
						
						i := 0;
					else
						i := i + 1;
					end if;
														
				else
					tb_nr_sequencia_upd(i_upd)         	:= nr_seq_conta_pos_mat_fat_w;
					tb_nr_seq_conta_upd(i_upd)         	:= r_c01_w.nr_seq_conta;
					tb_nr_seq_conta_mat_pos_upd(i_upd)	:= r_c02_w.nr_sequencia;
					tb_nr_seq_conta_resumo_upd(i_upd)  	:= r_c01_w.nr_seq_conta_resumo;
					tb_nr_seq_prestador_pgto_upd(i_upd)	:= r_c01_w.nr_seq_prestador_pgto;
					tb_vl_administracao_upd(i_upd)     	:= vl_lib_taxa_material_w;
					tb_vl_materiais_upd(i_upd)  		:= vl_materiais_w;
					tb_dt_mes_upd_w(i_upd)			:= r_c00_w.dt_mes_competencia;
					
					if (i_upd > pls_util_cta_pck.qt_registro_transacao_w) then
					
						SELECT * FROM pls_pos_estabelecido_pck.atualizar_reg_ptu_mat(	tb_nr_sequencia_upd, tb_nr_seq_conta_upd, tb_nr_seq_conta_mat_pos_upd, tb_nr_seq_conta_resumo_upd, tb_nr_seq_prestador_pgto_upd, tb_vl_administracao_upd, tb_vl_materiais_upd, tb_dt_mes_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_upd := _ora2pg_r.tb_nr_sequencia_upd_p; tb_nr_seq_conta_upd := _ora2pg_r.tb_nr_seq_conta_upd_p; tb_nr_seq_conta_mat_pos_upd := _ora2pg_r.tb_nr_seq_conta_mat_pos_upd_p; tb_nr_seq_conta_resumo_upd := _ora2pg_r.tb_nr_seq_conta_resumo_upd_p; tb_nr_seq_prestador_pgto_upd := _ora2pg_r.tb_nr_seq_prestador_pgto_upd_p; tb_vl_administracao_upd := _ora2pg_r.tb_vl_administracao_upd_p; tb_vl_materiais_upd := _ora2pg_r.tb_vl_materiais_upd_p; tb_dt_mes_upd_w := _ora2pg_r.tb_dt_mes_p;			
						i_upd := 0;
					else
						i_upd := i_upd + 1;
					end if;
				end if;		
			end loop;
		end loop;
	end loop;

	--Caso sobrarem registros nas estruturas, faz a persist_ncia dos mesmos no banco.

	SELECT * FROM pls_pos_estabelecido_pck.inserir_reg_ptu_mat( 	tb_nr_seq_conta_ins, tb_nr_seq_conta_mat_pos_ins, tb_nr_seq_conta_resumo_ins, tb_nr_seq_prestador_pgto_ins, tb_vl_administracao_ins, tb_vl_materiais_ins, tb_seq_pos_mat_w, tb_dt_mes_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  	tb_nr_seq_conta_ins := _ora2pg_r.tb_nr_seq_conta_ins_p; tb_nr_seq_conta_mat_pos_ins := _ora2pg_r.tb_nr_seq_conta_mat_pos_ins_p; tb_nr_seq_conta_resumo_ins := _ora2pg_r.tb_nr_seq_conta_resumo_ins_p; tb_nr_seq_prestador_pgto_ins := _ora2pg_r.tb_nr_seq_prestador_pgto_ins_p; tb_vl_administracao_ins := _ora2pg_r.tb_vl_administracao_ins_p; tb_vl_materiais_ins := _ora2pg_r.tb_vl_materiais_ins_p; tb_seq_pos_mat_w := _ora2pg_r.tb_seq_pos_mat_p; tb_dt_mes_w := _ora2pg_r.tb_dt_mes_p;
	
	SELECT * FROM pls_pos_estabelecido_pck.atualizar_reg_ptu_mat(	tb_nr_sequencia_upd, tb_nr_seq_conta_upd, tb_nr_seq_conta_mat_pos_upd, tb_nr_seq_conta_resumo_upd, tb_nr_seq_prestador_pgto_upd, tb_vl_administracao_upd, tb_vl_materiais_upd, tb_dt_mes_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_upd := _ora2pg_r.tb_nr_sequencia_upd_p; tb_nr_seq_conta_upd := _ora2pg_r.tb_nr_seq_conta_upd_p; tb_nr_seq_conta_mat_pos_upd := _ora2pg_r.tb_nr_seq_conta_mat_pos_upd_p; tb_nr_seq_conta_resumo_upd := _ora2pg_r.tb_nr_seq_conta_resumo_upd_p; tb_nr_seq_prestador_pgto_upd := _ora2pg_r.tb_nr_seq_prestador_pgto_upd_p; tb_vl_administracao_upd := _ora2pg_r.tb_vl_administracao_upd_p; tb_vl_materiais_upd := _ora2pg_r.tb_vl_materiais_upd_p; tb_dt_mes_upd_w := _ora2pg_r.tb_dt_mes_p;					
	i 	:= 0;
	i_upd 	:= 0;

										
	for r_c00_w in C00 loop
		for r_c04_w in C04(r_c00_w.nr_seq_conta_mat) loop
			for r_c02_w in C02(r_c04_w.nr_seq_conta, r_c00_w.nr_seq_conta_mat) loop
				
				nr_seq_conta_pos_mat_fat_w	:= null;
				
				--Existem casos que n_o tem valor liberado, por_m tem p_s-estabelecido, ent_o o percentual de pagamento _ 1

				if (r_c04_w.vl_lib_pagamento <> 0) then
					/* Obter o percentual do valor pago em relacao ao liberado do item da conta m_dica */


					pr_pagamento_liberado_w	:= round((dividir_sem_round(r_c04_w.vl_lib_pagamento,r_c02_w.vl_liberado))::numeric,10);
				else
					pr_pagamento_liberado_w	:= 1;
				end if;
				
				/* Aplicar o percentual obtido sobre o valor p_s estabelecido */


				vl_lib_taxa_material_w	:= round((r_c02_w.vl_lib_taxa_material * pr_pagamento_liberado_w)::numeric,2);
				vl_materiais_w		:= round((r_c02_w.vl_materiais * pr_pagamento_liberado_w)::numeric,2);
				vl_administracao_w	:= 	coalesce(vl_lib_taxa_material_w,0);
														
				select	max(z.nr_sequencia)
				into STRICT	nr_seq_conta_pos_mat_fat_w
				from (	-- Dividido em 2 unions para tratar o pos oriundo de contestacao
					-- O primeiro _ a o p_s sem contestacao

					SELECT	t.nr_sequencia
					from	pls_conta_pos_mat_fat	t,
						pls_conta_pos_mat	a
					where	t.nr_seq_conta			= r_c04_w.nr_seq_conta
					and	a.nr_sequencia			= t.nr_seq_conta_mat_pos
					and	a.nr_seq_conta_mat 		= r_c04_w.nr_seq_conta_mat
					and	coalesce(a.nr_seq_disc_mat::text, '') = ''
					and	coalesce(a.nr_seq_lote_disc::text, '') = ''
					and	coalesce(r_c02_w.nr_seq_disc_mat::text, '') = ''
					and	coalesce(r_c02_w.nr_seq_lote_disc::text, '') = ''
					-- Tenta localizar tamb_m quando tiver contestacao

					
union all

					SELECT	t.nr_sequencia
					from	pls_conta_pos_mat_fat	t,
						pls_conta_pos_mat	a
					where	t.nr_seq_conta			= r_c04_w.nr_seq_conta
					and	a.nr_sequencia			= t.nr_seq_conta_mat_pos
					and	a.nr_seq_conta_mat 		= r_c04_w.nr_seq_conta_mat
					and	a.nr_seq_disc_mat		= r_c02_w.nr_seq_disc_mat
					and	a.nr_seq_lote_disc		= r_c02_w.nr_seq_lote_disc
					and	(r_c02_w.nr_seq_disc_mat IS NOT NULL AND r_c02_w.nr_seq_disc_mat::text <> '')
					and	(r_c02_w.nr_seq_lote_disc IS NOT NULL AND r_c02_w.nr_seq_lote_disc::text <> '') ) z;
					
				
				if ( coalesce(nr_seq_conta_pos_mat_fat_w::text, '') = '') then	
					tb_nr_seq_conta_ins(i)         	:= r_c04_w.nr_seq_conta;
					tb_nr_seq_conta_mat_pos_ins(i)	:= r_c02_w.nr_sequencia;
					tb_nr_seq_conta_resumo_ins(i)  	:= r_c04_w.nr_seq_conta_resumo;
					tb_nr_seq_prestador_pgto_ins(i)	:= r_c04_w.nr_seq_prestador_pgto;
					tb_vl_administracao_ins(i)     	:= vl_lib_taxa_material_w;
					tb_vl_materiais_ins(i)  	:= vl_materiais_w;
					tb_dt_mes_w(i)			:= r_c00_w.dt_mes_competencia;
					
					select 	nextval('pls_conta_pos_mat_fat_seq')
					into STRICT 	tb_seq_pos_mat_w(i)
					;
					
					
					if (i > pls_util_cta_pck.qt_registro_transacao_w) then
					
						SELECT * FROM pls_pos_estabelecido_pck.inserir_reg_ptu_mat( 	tb_nr_seq_conta_ins, tb_nr_seq_conta_mat_pos_ins, tb_nr_seq_conta_resumo_ins, tb_nr_seq_prestador_pgto_ins, tb_vl_administracao_ins, tb_vl_materiais_ins, tb_seq_pos_mat_w, tb_dt_mes_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  	tb_nr_seq_conta_ins := _ora2pg_r.tb_nr_seq_conta_ins_p; tb_nr_seq_conta_mat_pos_ins := _ora2pg_r.tb_nr_seq_conta_mat_pos_ins_p; tb_nr_seq_conta_resumo_ins := _ora2pg_r.tb_nr_seq_conta_resumo_ins_p; tb_nr_seq_prestador_pgto_ins := _ora2pg_r.tb_nr_seq_prestador_pgto_ins_p; tb_vl_administracao_ins := _ora2pg_r.tb_vl_administracao_ins_p; tb_vl_materiais_ins := _ora2pg_r.tb_vl_materiais_ins_p; tb_seq_pos_mat_w := _ora2pg_r.tb_seq_pos_mat_p; tb_dt_mes_w := _ora2pg_r.tb_dt_mes_p;
						
						i := 0;
					else
						i := i + 1;
					end if;
														
				else
					tb_nr_sequencia_upd(i_upd)         	:= nr_seq_conta_pos_mat_fat_w;
					tb_nr_seq_conta_upd(i_upd)         	:= r_c04_w.nr_seq_conta;
					tb_nr_seq_conta_mat_pos_upd(i_upd)	:= r_c02_w.nr_sequencia;
					tb_nr_seq_conta_resumo_upd(i_upd)  	:= r_c04_w.nr_seq_conta_resumo;
					tb_nr_seq_prestador_pgto_upd(i_upd)	:= r_c04_w.nr_seq_prestador_pgto;
					tb_vl_administracao_upd(i_upd)     	:= vl_lib_taxa_material_w;
					tb_vl_materiais_upd(i_upd)  		:= vl_materiais_w;
					tb_dt_mes_upd_w(i_upd)			:= r_c00_w.dt_mes_competencia;
					
					if (i_upd > pls_util_cta_pck.qt_registro_transacao_w) then
					
						SELECT * FROM pls_pos_estabelecido_pck.atualizar_reg_ptu_mat(	tb_nr_sequencia_upd, tb_nr_seq_conta_upd, tb_nr_seq_conta_mat_pos_upd, tb_nr_seq_conta_resumo_upd, tb_nr_seq_prestador_pgto_upd, tb_vl_administracao_upd, tb_vl_materiais_upd, tb_dt_mes_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_upd := _ora2pg_r.tb_nr_sequencia_upd_p; tb_nr_seq_conta_upd := _ora2pg_r.tb_nr_seq_conta_upd_p; tb_nr_seq_conta_mat_pos_upd := _ora2pg_r.tb_nr_seq_conta_mat_pos_upd_p; tb_nr_seq_conta_resumo_upd := _ora2pg_r.tb_nr_seq_conta_resumo_upd_p; tb_nr_seq_prestador_pgto_upd := _ora2pg_r.tb_nr_seq_prestador_pgto_upd_p; tb_vl_administracao_upd := _ora2pg_r.tb_vl_administracao_upd_p; tb_vl_materiais_upd := _ora2pg_r.tb_vl_materiais_upd_p; tb_dt_mes_upd_w := _ora2pg_r.tb_dt_mes_p;			
						i_upd := 0;
					else
						i_upd := i_upd + 1;
					end if;
				end if;					
				
			end loop;

		end loop;
	end loop;
					
	SELECT * FROM pls_pos_estabelecido_pck.inserir_reg_ptu_mat( 	tb_nr_seq_conta_ins, tb_nr_seq_conta_mat_pos_ins, tb_nr_seq_conta_resumo_ins, tb_nr_seq_prestador_pgto_ins, tb_vl_administracao_ins, tb_vl_materiais_ins, tb_seq_pos_mat_w, tb_dt_mes_w, nm_usuario_p) INTO STRICT _ora2pg_r;
  	tb_nr_seq_conta_ins := _ora2pg_r.tb_nr_seq_conta_ins_p; tb_nr_seq_conta_mat_pos_ins := _ora2pg_r.tb_nr_seq_conta_mat_pos_ins_p; tb_nr_seq_conta_resumo_ins := _ora2pg_r.tb_nr_seq_conta_resumo_ins_p; tb_nr_seq_prestador_pgto_ins := _ora2pg_r.tb_nr_seq_prestador_pgto_ins_p; tb_vl_administracao_ins := _ora2pg_r.tb_vl_administracao_ins_p; tb_vl_materiais_ins := _ora2pg_r.tb_vl_materiais_ins_p; tb_seq_pos_mat_w := _ora2pg_r.tb_seq_pos_mat_p; tb_dt_mes_w := _ora2pg_r.tb_dt_mes_p;

	SELECT * FROM pls_pos_estabelecido_pck.atualizar_reg_ptu_mat(	tb_nr_sequencia_upd, tb_nr_seq_conta_upd, tb_nr_seq_conta_mat_pos_upd, tb_nr_seq_conta_resumo_upd, tb_nr_seq_prestador_pgto_upd, tb_vl_administracao_upd, tb_vl_materiais_upd, tb_dt_mes_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_sequencia_upd := _ora2pg_r.tb_nr_sequencia_upd_p; tb_nr_seq_conta_upd := _ora2pg_r.tb_nr_seq_conta_upd_p; tb_nr_seq_conta_mat_pos_upd := _ora2pg_r.tb_nr_seq_conta_mat_pos_upd_p; tb_nr_seq_conta_resumo_upd := _ora2pg_r.tb_nr_seq_conta_resumo_upd_p; tb_nr_seq_prestador_pgto_upd := _ora2pg_r.tb_nr_seq_prestador_pgto_upd_p; tb_vl_administracao_upd := _ora2pg_r.tb_vl_administracao_upd_p; tb_vl_materiais_upd := _ora2pg_r.tb_vl_materiais_upd_p; tb_dt_mes_upd_w := _ora2pg_r.tb_dt_mes_p;	
				

	--Percorre todos os materiais definidos para geracao de p_s-estabelecido

	for r_c00_w in C00 loop
		
		i := 0;
	
		for r_c05_w in C05(r_c00_w.nr_seq_conta) loop
		
			select	
				coalesce(vl_lib_taxa_material,0),
				coalesce(vl_materiais,0)
			into STRICT
				vl_lib_taxa_material_w,
				vl_materiais_w
			from	pls_conta_pos_mat
			where	nr_sequencia	= r_c05_w.nr_seq_conta_pos;
			
			--registros da pls_conta_pos_estab_contab sem agrupar pelonr_seq_conta_pos 

			--Nessa abertura de cursor, corrige diferen_as causadas por provisionado x pago

			for r_c07_w in c07(r_c05_w.nr_seq_conta_pos) loop
				
										
				vl_diferenca_w					:= 0;
				
				--Ajuste de taxa de material

				if (coalesce(vl_lib_taxa_material_w,0)	!= coalesce(r_c05_w.vl_lib_taxa_material,0)) then
					
					vl_diferenca_w	:= vl_lib_taxa_material_w - r_c05_w.vl_lib_taxa_material;
					--A diferen_a deve ser dividida proporcionalmente entre os registros

					if (vl_diferenca_w <> 0) then
					
						--Divide o valor do registro pela soma dos registros agrupados(Todos os participantes) para achar a proporcao

						vl_proporcao_w :=  round((dividir_sem_round(r_c07_w.vl_lib_taxa_material, r_c05_w.vl_lib_taxa_material))::numeric,10);	
						
						vl_diferenca_w := vl_diferenca_w * vl_proporcao_w;
						      												
						update	pls_conta_pos_mat_fat
						set 	vl_lib_taxa_material	= coalesce(vl_lib_taxa_material,0) + vl_diferenca_w,
								vl_administracao	= coalesce(vl_administracao,0) + vl_diferenca_w
						where	nr_sequencia 		= r_c07_w.nr_sequencia;
										
					end if;
				end if;
				
				vl_diferenca_w := 0;
					--Ajuste dos valor de materiais

				if (coalesce(vl_materiais_w,0)	!= coalesce(r_c05_w.vl_materiais,0)) then
					
					select	sum(coalesce(vl_materiais,0))
					into STRICT	vl_ajuste_temp_w
					from	pls_conta_pos_mat_fat
					where	nr_seq_conta_mat_pos = r_c05_w.nr_seq_conta_pos;
					
					vl_diferenca_w	:= vl_materiais_w - vl_ajuste_temp_w;
					
					if (vl_diferenca_w <> 0) then
						
						if (vl_diferenca_w > 0) then
							select	max(nr_sequencia)
							into STRICT	nr_seq_contab_w
							from	pls_conta_pos_mat_fat
							where	nr_seq_conta_mat_pos	= r_c05_w.nr_seq_conta_pos;
						else
							select	max(nr_sequencia)
							into STRICT	nr_seq_contab_w
							from	pls_conta_pos_mat_fat
							where	nr_seq_conta_mat_pos	= r_c05_w.nr_seq_conta_pos
							and	vl_materiais		> 0
							and 	vl_materiais		> vl_diferenca_w;
						end if;
							
						tb_nr_sequencia_upd_p(i)	:= r_c07_w.nr_sequencia;
						tb_vl_materiais_upd_p(i)  		:= vl_diferenca_w;
							
						update	pls_conta_pos_mat_fat
						set 	vl_materiais	= coalesce(vl_materiais,0) + vl_diferenca_w,
								vl_pos_estabelecido = coalesce(vl_pos_estabelecido,0) + vl_diferenca_w
						where	nr_sequencia 		= nr_seq_contab_w;
							
					end if;	
				end if;	
								
			end loop;
		end loop;
	end loop;

	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.geracao_valores_ptu_mat ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
