-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pos_estabelecido_pck.carrega_procedimentos_geracao ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

	
ie_beneficio_obito_w	pls_plano.ie_seguro_obito%type;
rec_dados_proc_w 	table_conta_proc_temp;
i			integer := 0;
ds_log_call_w		varchar(1500);
	
--Retorna as informacaes dos procedimentos para populacao da tabela tempor_ria. Considera os status de protocolo,

--conta e procedimento, pois em processamentos em massa passando uma entrada mais abrangente, como lote de processo

--por exemplo, precisa controlar quais itens s_o eleg_veis para o processamento aqui	

C01 CURSOR(	nr_seq_lote_pc		pls_lote_protocolo_conta.nr_sequencia%type,
                nr_seq_protocolo_pc	pls_protocolo_conta.nr_sequencia%type,
                nr_seq_lote_processo_pc	pls_cta_lote_processo.nr_sequencia%type,
		nr_seq_analise_pc	pls_analise_conta.nr_sequencia%type,
                nr_seq_conta_pc		pls_conta.nr_sequencia%type,
                nr_seq_proc_pc		pls_conta_proc.nr_sequencia%type) FOR
	SELECT	proc.cd_procedimento,
		proc.ie_origem_proced,
		proc.nr_seq_conta,
		proc.nr_sequencia,
		proc.nr_seq_regra_horario,
		proc.qt_filme_tab,
		proc.qt_procedimento qt_item,
		proc.vl_custo_operacional,
		proc.vl_custo_operacional_tab,
		proc.tx_item,
		proc.vl_lib_taxa_co, 
		proc.vl_lib_taxa_material, 
		proc.vl_lib_taxa_servico,      
		proc.vl_materiais,        
		proc.vl_medico, 
		proc.vl_provisao,               
		coalesce(proc.vl_taxa_co,0) vl_taxa_co, 
		coalesce(proc.vl_taxa_material,0) vl_taxa_material,         
		coalesce(proc.vl_taxa_servico,0) vl_taxa_servico,
		proc.dt_procedimento,
		proc.ie_tecnica_utilizada,
		proc.dt_inicio_proc,
		proc.dt_fim_proc,
		proc.ie_criterio_horario,
		proc.ie_status,
		proc.ie_repassa_medico,
		proc.tx_custo_operacional,
		proc.tx_material,
		proc.tx_medico,
		proc.tx_auxiliares,
		proc.tx_anestesista,
		proc.nr_seq_rp_combinada,
		proc.ie_via_acesso,
		proc.vl_liberado,
		proc.vl_procedimento_imp vl_apresentado,
		conta.nr_seq_conta_referencia,
		conta.nr_seq_protocolo,
		conta.nr_seq_guia,
		conta.nr_seq_prestador_solic_ref,
		conta.nr_seq_cbo_saude,
		conta.nr_seq_cbo_saude_solic,
		conta.dt_autorizacao,
		coalesce(seg.nr_seq_ops_congenere,seg.nr_seq_congenere) nr_seq_congenere_seg, 				
		conta.nr_seq_segurado,					
		seg.nr_seq_intercambio,				
		pls_obter_produto_benef(seg.nr_sequencia, conta.dt_atendimento_referencia) nr_seq_plano,					
		seg.nr_seq_grupo_coop,
		seg.ie_tipo_segurado 	ie_tipo_beneficiario,				
		seg.ie_pcmso   		ie_pcmso_beneficiario,													
		conta.ie_origem_conta,					
		conta.ie_tipo_conta,					
		conta.ie_tipo_guia,
		conta.dt_alta,
		conta.dt_atendimento_referencia	dt_atendimento,
		conta.nr_seq_fatura,
		proc.ie_tipo_despesa,
		coalesce(proc.vl_calc_co_util,0)	vl_co_calc,
		coalesce(proc.vl_calc_mat_util,0)	vl_mat_calc,
		coalesce(proc.vl_calc_hi_util,0)	vl_med_calc,
		conta.nr_seq_tipo_atendimento,	
		conta.nr_seq_prestador_exec,	
		prot.dt_mes_competencia,
		CASE WHEN conta.ie_tipo_conta='I' THEN (SELECT	max(z.dt_recebimento_fatura)						from	ptu_fatura z						where	z.nr_sequencia = conta.nr_seq_fatura)  ELSE clock_timestamp() END  dt_recebimento_fatura,
		CASE WHEN conta.ie_tipo_conta='I' THEN (select	max(z.dt_postagem)						from	ptu_fatura z						where	z.nr_sequencia = conta.nr_seq_fatura)  ELSE clock_timestamp() END  dt_postagem_fatura,
		pls_obter_tipo_intercambio(coalesce(conta.nr_seq_congenere, prot.nr_seq_congenere), cd_estabelecimento_p) ie_tipo_intercambio,
		(	select 	max(nr_sequencia)
			from	pls_conta_pos_cabecalho
			where	nr_seq_conta = proc.nr_seq_conta) nr_seq_cabecalho,
		nextval('w_pls_conta_pos_proc_seq')	nr_seq_w_proc,
		conta.cd_senha_externa,
		coalesce(conta.cd_guia, conta.cd_guia_referencia) cd_guia,
		conta.nr_seq_clinica,
		conta.nr_seq_tipo_acomodacao,
		conta.ie_carater_internacao,
		prot.nr_seq_prestador nr_seq_prestador_prot,
		proc.nr_seq_sca_cobertura,
		conta.nr_seq_ajuste_fat,
		proc.nr_seq_proc_princ
	from	pls_conta_proc 	proc,
		pls_conta	conta,
		pls_segurado	seg,
		pls_protocolo_conta	prot
	where 	proc.nr_sequencia in ( 	select  p.nr_sequencia
					from	pls_conta_proc_v	p
					where	p.nr_sequencia	= nr_seq_proc_pc
					and	((p.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U') and coalesce(p.nr_seq_regra_pct_fat::text, '') = '')
						or p.ie_status = 'M')
					and	((coalesce(p.nr_seq_regra_conv::text, '') = '') or ((p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '') and coalesce(p.ie_regra_qtde_execucao,'N') = 'N'))
					and	p.ie_status_conta 	in ('A','L','P','U','F')
					
union all

					select 	p.nr_sequencia
					from	pls_conta_proc_v	p
					where	p.nr_seq_conta	= nr_seq_conta_pc
					and	((p.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U') and coalesce(p.nr_seq_regra_pct_fat::text, '') = '')
						or p.ie_status = 'M')
					and	((coalesce(p.nr_seq_regra_conv::text, '') = '') or ((p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '') and coalesce(p.ie_regra_qtde_execucao,'N') = 'N'))
					and	p.ie_status_conta 	in ('A','L','P','U','F')
					
union all

					select 	p.nr_sequencia
					from	pls_conta_proc_v	p
					where	p.nr_seq_protocolo	= nr_seq_protocolo_pc
					and	((p.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U') and coalesce(p.nr_seq_regra_pct_fat::text, '') = '')
						or p.ie_status = 'M')
					and	((coalesce(p.nr_seq_regra_conv::text, '') = '') or ((p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '') and coalesce(p.ie_regra_qtde_execucao,'N') = 'N'))
					and	p.ie_status_conta 	in ('A','L','P','U','F')
					
union all

					select 	p.nr_sequencia
					from	pls_conta_proc_v	p
					where	p.nr_seq_lote_conta	= nr_seq_lote_pc
					and	((coalesce(p.nr_seq_regra_conv::text, '') = '') or ((p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '') and coalesce(p.ie_regra_qtde_execucao,'N') = 'N'))
					and	((p.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U') and coalesce(p.nr_seq_regra_pct_fat::text, '') = '')
						or p.ie_status = 'M')
					and	p.ie_status_conta 	in ('A','L','P','U','F')
					
union all

					select 	p.nr_sequencia
					from	pls_conta_proc_v	p
					where	p.nr_seq_analise	= nr_seq_analise_pc
					and	((p.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U') and coalesce(p.nr_seq_regra_pct_fat::text, '') = '')
						or p.ie_status = 'M')
					and	((coalesce(p.nr_seq_regra_conv::text, '') = '') or ((p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '') and coalesce(p.ie_regra_qtde_execucao,'N') = 'N'))
					and	p.ie_status_conta 	in ('A','L','P','U','F')
					
union all

					select	p.nr_sequencia
					from	pls_conta_proc_v	p
					where	coalesce(nr_seq_conta_pc::text, '') = ''
					and	coalesce(nr_seq_protocolo_pc::text, '') = ''
					and	coalesce(nr_seq_lote_pc::text, '') = ''
					and	coalesce(nr_seq_analise_pc::text, '') = ''
					and	((p.ie_status 		in ('A', 'C', 'L', 'P', 'S', 'U') and coalesce(p.nr_seq_regra_pct_fat::text, '') = '')
						or p.ie_status = 'M')
					and	((coalesce(p.nr_seq_regra_conv::text, '') = '') or ((p.nr_seq_proc_princ IS NOT NULL AND p.nr_seq_proc_princ::text <> '') and coalesce(p.ie_regra_qtde_execucao,'N') = 'N'))
					and	p.ie_status_conta 	in ('A','L','P','U','F')
					and	exists (select	1
							from	pls_cta_lote_proc_cta_temp lote 
							where	lote.nr_seq_conta  = p.nr_seq_conta)	
				)
	and	proc.nr_seq_conta 	= conta.nr_sequencia
	and	conta.nr_seq_segurado 	= seg.nr_sequencia
	and	conta.nr_seq_protocolo	= prot.nr_sequencia;

BEGIN

	--Primeiramente limpa a tabela tempor_ria utilizada

	CALL exec_sql_dinamico(nm_usuario_p, 'truncate table w_pls_conta_pos_proc');
	
	--Chama aqui apenas para inicializar estrutura 

	rec_dados_proc_w := pls_pos_estabelecido_pck.insere_proc_tab_temp(rec_dados_proc_w, nm_usuario_p);
	
	for r_c01_w in C01( nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p,	
	                    nr_seq_analise_p, nr_seq_conta_p, nr_seq_proc_p) loop
			
		select	ie_seguro_obito
		into STRICT	ie_beneficio_obito_w
		from	pls_plano
		where	nr_sequencia = r_c01_w.nr_seq_plano;
		
		rec_dados_proc_w.cd_procedimento(i)		:= r_c01_w.cd_procedimento;
		rec_dados_proc_w.dt_alta(i)			:= r_c01_w.dt_alta;
		rec_dados_proc_w.dt_item(i)			:= r_c01_w.dt_procedimento;
		rec_dados_proc_w.dt_atendimento(i)		:= r_c01_w.dt_atendimento;
		rec_dados_proc_w.dt_postagem_fatura(i)		:= r_c01_w.dt_postagem_fatura;
		rec_dados_proc_w.dt_recebimento_fatura(i)	:= r_c01_w.dt_recebimento_fatura;
		rec_dados_proc_w.ie_obito(i)			:= ie_beneficio_obito_w;
		rec_dados_proc_w.ie_origem_conta(i)		:= r_c01_w.ie_origem_conta;
		rec_dados_proc_w.ie_origem_proced(i)		:= r_c01_w.ie_origem_proced;
		rec_dados_proc_w.ie_pcmso(i)			:= r_c01_w.ie_pcmso_beneficiario;
		rec_dados_proc_w.ie_tipo_conta(i)		:= r_c01_w.ie_tipo_conta;
		rec_dados_proc_w.ie_tipo_guia(i)		:= r_c01_w.ie_tipo_guia;
		rec_dados_proc_w.ie_tipo_segurado(i)		:= r_c01_w.ie_tipo_beneficiario;
		rec_dados_proc_w.nr_seq_cabecalho(i)		:= r_c01_w.nr_seq_cabecalho;
		rec_dados_proc_w.nr_seq_conta(i)		:= r_c01_w.nr_seq_conta;
		rec_dados_proc_w.nr_seq_conta_proc(i)		:= r_c01_w.nr_sequencia;
		rec_dados_proc_w.nr_sequencia(i)		:= r_c01_w.nr_seq_w_proc;
		rec_dados_proc_w.nr_seq_congenere_seg(i)	:= r_c01_w.nr_seq_congenere_seg;
		rec_dados_proc_w.nr_seq_fatura(i)		:= r_c01_w.nr_seq_fatura;
		rec_dados_proc_w.nr_seq_grupo_coop(i)		:= r_c01_w.nr_seq_grupo_coop;
		rec_dados_proc_w.nr_seq_intercambio(i)		:= r_c01_w.nr_seq_intercambio;
		rec_dados_proc_w.nr_seq_plano(i)		:=r_c01_w.nr_seq_plano;
		rec_dados_proc_w.nr_seq_regra_horario(i)	:= r_c01_w.nr_seq_regra_horario;
		rec_dados_proc_w.nr_seq_segurado(i)		:= r_c01_w.nr_seq_segurado;
		rec_dados_proc_w.qt_filme_tab(i)		:=r_c01_w.qt_filme_tab;
		rec_dados_proc_w.qt_item(i)			:=r_c01_w.qt_item;
		rec_dados_proc_w.tx_administracao(i)		:= 0;
		rec_dados_proc_w.tx_item(i)			:= r_c01_w.tx_item;
		rec_dados_proc_w.vl_cotacao_moeda(i)		:= null;
		rec_dados_proc_w.vl_custo_operacional(i)	:= 0;
		rec_dados_proc_w.vl_custo_operacional_calc(i)	:= r_c01_w.vl_co_calc;
		rec_dados_proc_w.vl_custo_operacional_tab(i)	:= r_c01_w.vl_custo_operacional_tab;
		rec_dados_proc_w.vl_liberado_co_fat(i)		:= null;
		rec_dados_proc_w.vl_liberado_hi_fat(i)		:= null;
		rec_dados_proc_w.vl_liberado_material_fat(i)	:= null;
		rec_dados_proc_w.vl_lib_taxa_co(i)		:= r_c01_w.vl_lib_taxa_co;
		rec_dados_proc_w.vl_lib_taxa_material(i)	:= r_c01_w.vl_lib_taxa_material;
		rec_dados_proc_w.vl_lib_taxa_servico(i)		:= r_c01_w.vl_lib_taxa_servico;
		rec_dados_proc_w.vl_materiais(i)		:= 0;
		rec_dados_proc_w.vl_materiais_calc(i)		:= r_c01_w.vl_mat_calc;
		rec_dados_proc_w.vl_material_tab(i)		:= null;
		rec_dados_proc_w.vl_medico(i)			:= 0;
		rec_dados_proc_w.vl_medico_calc(i)		:= r_c01_w.vl_med_calc;
		rec_dados_proc_w.vl_provisao(i)			:= r_c01_w.vl_provisao;
		rec_dados_proc_w.vl_tabela_preco(i)		:= null;
		rec_dados_proc_w.vl_taxa_co(i)			:= r_c01_w.vl_taxa_co;
		rec_dados_proc_w.vl_taxa_material(i)		:= r_c01_w.vl_taxa_material;
		rec_dados_proc_w.vl_taxa_servico(i)		:= r_c01_w.vl_taxa_servico;
		rec_dados_proc_w.ie_tipo_intercambio(i)		:= r_c01_w.ie_tipo_intercambio;
		rec_dados_proc_w.ie_tecnica_utilizada(i)	:= r_c01_w.ie_tecnica_utilizada	;
		rec_dados_proc_w.dt_inicio_proc(i)		:= r_c01_w.dt_inicio_proc;
		rec_dados_proc_w.dt_fim_proc(i)			:= r_c01_w.dt_fim_proc;
		rec_dados_proc_w.ie_criterio_horario(i)		:= r_c01_w.ie_criterio_horario;
		rec_dados_proc_w.ie_status_proc(i)		:= r_c01_w.ie_status;
		rec_dados_proc_w.ie_repassa_medico(i)		:= r_c01_w.ie_repassa_medico;
		rec_dados_proc_w.tx_custo_operacional(i)	:= r_c01_w.tx_custo_operacional;
		rec_dados_proc_w.tx_material(i)			:= r_c01_w.tx_material;
		rec_dados_proc_w.tx_medico(i)			:= r_c01_w.tx_medico;
		rec_dados_proc_w.tx_auxiliares(i)		:= r_c01_w.tx_auxiliares;
		rec_dados_proc_w.tx_anestesista(i)		:= r_c01_w.tx_anestesista;
		rec_dados_proc_w.nr_seq_cbo_saude(i)		:= r_c01_w.nr_seq_cbo_saude;
		rec_dados_proc_w.nr_seq_cbo_saude_solic(i)	:= r_c01_w.nr_seq_cbo_saude_solic;
		rec_dados_proc_w.dt_autorizacao(i)		:= r_c01_w.dt_autorizacao;
		rec_dados_proc_w.nr_seq_rp_combinada(i)		:= r_c01_w.nr_seq_rp_combinada;
		rec_dados_proc_w.nr_seq_conta_referencia(i)	:= r_c01_w.nr_seq_conta_referencia;
		rec_dados_proc_w.nr_seq_protocolo(i)		:= r_c01_w.nr_seq_protocolo;
		rec_dados_proc_w.nr_seq_guia(i)			:= r_c01_w.nr_seq_guia;
		rec_dados_proc_w.nr_seq_prestador_solic_ref(i)	:= r_c01_w.nr_seq_prestador_solic_ref;
		rec_dados_proc_w.ie_via_acesso(i)		:= r_c01_w.ie_via_acesso;
		rec_dados_proc_w.ie_tipo_despesa(i)		:= r_c01_w.ie_tipo_despesa;
		rec_dados_proc_w.vl_prestador_apresentado(i)	:= r_c01_w.vl_apresentado;
		rec_dados_proc_w.vl_prestador_pag(i)		:= r_c01_w.vl_liberado;
		rec_dados_proc_w.nr_seq_tipo_atendimento(i)	:= r_c01_w.nr_seq_tipo_atendimento;
		rec_dados_proc_w.nr_seq_prestador_exec(i)	:= r_c01_w.nr_seq_prestador_exec;
		rec_dados_proc_w.dt_mes_competencia(i)		:= r_c01_w.dt_mes_competencia;
		rec_dados_proc_w.cd_senha_externa(i)		:= r_c01_w.cd_senha_externa;
		rec_dados_proc_w.cd_guia(i)			:= r_c01_w.cd_guia;
		rec_dados_proc_w.nr_seq_clinica(i)		:= r_c01_w.nr_seq_clinica;
		rec_dados_proc_w.nr_seq_tipo_acomodacao(i)	:= r_c01_w.nr_seq_tipo_acomodacao;
		rec_dados_proc_w.ie_carater_internacao(i)	:= r_c01_w.ie_carater_internacao;
		rec_dados_proc_w.nr_seq_prestador_prot(i)	:= r_c01_w.nr_seq_prestador_prot;
		rec_dados_proc_w.nr_seq_sca(i)			:= r_c01_w.nr_seq_sca_cobertura;
		rec_dados_proc_w.nr_seq_ajuste_fat(i)		:= r_c01_w.nr_seq_ajuste_fat;
		rec_dados_proc_w.nr_seq_proc_princ(i)		:= r_c01_w.nr_seq_proc_princ;
		
		if ( i > pls_util_cta_pck.qt_registro_transacao_w) then
			rec_dados_proc_w := pls_pos_estabelecido_pck.insere_proc_tab_temp(rec_dados_proc_w, nm_usuario_p);
			i := 0;
		else
			i := i + 1;
		end if;
	end loop;
	
	--Se sobrarem registros nas estruturas, atualiza no banco.

	rec_dados_proc_w := pls_pos_estabelecido_pck.insere_proc_tab_temp(rec_dados_proc_w, nm_usuario_p);
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pos_estabelecido_pck.carrega_procedimentos_geracao ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_proc_p pls_conta_proc.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
