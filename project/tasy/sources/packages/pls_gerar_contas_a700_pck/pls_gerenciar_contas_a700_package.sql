-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_contas_a700_pck.pls_gerenciar_contas_a700 ( nr_seq_servico_p ptu_servico_pre_pagto.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE
		
			
nr_seq_protocolo_w		pls_conta.nr_seq_protocolo%type;
ds_processo_w			varchar(255);
ds_erro_w			varchar(4000);
ds_log_w			varchar(4000);
			

BEGIN

begin
	--Altera o status do lote para "Gerado com Falha" ira atualizar para o status contas geradas no final do processo

	CALL pls_gerar_contas_a700_pck.altera_status_serv_pre_pagto(	nr_seq_servico_p,'F', nm_usuario_p,
						cd_estabelecimento_p);
						
	ds_processo_w := 'Verficar inconsistencia A700.';
	-- Verifica se existe alguma nota de cobranca consistente, ou seja, apta para que as contas possam ser geradas 

	CALL pls_gerar_contas_a700_pck.verificar_inconsistencia_a700(nr_seq_servico_p, nm_usuario_p, cd_estabelecimento_p);
	
	ds_processo_w := 'Gerar lote e protocolos de contas medicas.';
	--Se ainda nao houver um protocolo vinculado ao servico sera criado um novo lote de protocolo e um protocolo que estara vinculado ao servico (NR_SEQ_SERV_PRE_PAGTO)

	ptu_gerar_lote_conta_a700(nr_seq_servico_p, nr_seq_protocolo_w, cd_estabelecimento_p, nm_usuario_p);

	ds_processo_w := 'Gerar as contas medicas.';
	-- Gera as contas / Gera declaracoes de obito e de nascimento

	CALL pls_gerar_contas_a700_pck.definir_contas_a_gerar_a700(nr_seq_servico_p, nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_p);		
	
	ds_processo_w := 'Define a conta principal do atendimento.';
	CALL pls_insere_conta_princ(null, null, null, nr_seq_protocolo_w);
	
	ds_processo_w := 'Gerar procedimentos e materiais.';
	--  Gera procedimentos e materiais / Atualiza dados das contas

	CALL pls_gerar_contas_a700_pck.definir_proc_mat_a_gerar_a700(nm_usuario_p, cd_estabelecimento_p);	
	
	ds_processo_w := 'Atualizar valores totais dos protocolos.';
	-- Atualiza os valores do protocolo gerado / Atualiza a quantidade de contas informadas e o status do protocolo

	CALL pls_gerar_contas_a700_pck.atualiza_dados_protocolo_a700(nr_seq_protocolo_w, nm_usuario_p);
	
	ds_processo_w := 'Gerar as analises.';
	-- Gera as analises para as contas geradas

	pls_analise_cta_pck.gerar_analise(null, nr_seq_protocolo_w, null, null,	nm_usuario_p, cd_estabelecimento_p, 'N', 'N', 'S');

	ds_processo_w := 'Fehchar as analises.';
	-- Fecha a analise e gera a nota de pos caso o usuario possua permissao / Atualiza o tipo de origem da analise (IE_ORIGEM_ANALISE) para "Contas de A700"

	CALL pls_gerar_contas_a700_pck.fechar_analise_conta_a700(nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_p);

	ds_processo_w := 'Finalizar o lote';
	--ira finalizar setar o lote de analie para iniciada

	CALL pls_gerar_contas_a700_pck.fechar_lote_prot_conta_a700(nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_p);
	
	ds_processo_w := 'Definir o "conta_resumo" do lote.';
	-- Atualiza o status da conta para "A700 finalizado" / Elimina o resumo da conta medica

	CALL pls_gerar_contas_a700_pck.definir_conta_resumo_a700(nr_seq_protocolo_w, nm_usuario_p, cd_estabelecimento_p);
	
	ds_processo_w := 'Alterar status do lote para "Contas geradas".';
	--Altera o status do lote para "Contas geradas" 

	CALL pls_gerar_contas_a700_pck.altera_status_serv_pre_pagto(	nr_seq_servico_p,'C', nm_usuario_p,
						cd_estabelecimento_p);

exception
when others then
	ds_erro_w := substr(sqlerrm, 0, 4000);
	ds_log_w := substr(	'Processo executado: ' || ds_processo_w || pls_util_pck.enter_w ||
				'Erro: ' || pls_util_pck.enter_w ||
				ds_erro_w, 1, 4000);
				
	insert	into	pls_log_geracao_cta_a700(	ds_log, dt_atualizacao, dt_atualizacao_nrec,
			nm_usuario, nm_usuario_nrec, nr_seq_serv_pre_pagto,
			nr_sequencia)
	values (	ds_log_w, clock_timestamp(), clock_timestamp(),
			nm_usuario_p, nm_usuario_p, nr_seq_servico_p,
			nextval('pls_log_geracao_cta_a700_seq'));
end;
					
commit;	

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_contas_a700_pck.pls_gerenciar_contas_a700 ( nr_seq_servico_p ptu_servico_pre_pagto.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;
