-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/




CREATE OR REPLACE PROCEDURE pls_gerar_contas_a700_pck.inserir_conta_proc_a700 ( dados_proc_p pls_gerar_contas_a700_pck.dados_proc, nr_seq_proc_table_p INOUT dbms_sql.number_table, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Rotina responsavel por gerar procedimentos.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 	


BEGIN
			
if (dados_proc_p.ie_tipo_despesa.count > 0) then
	forall i in dados_proc_p.ie_tipo_despesa.first..dados_proc_p.ie_tipo_despesa.last
		insert into pls_conta_proc(	nr_sequencia, 					nm_usuario, 					dt_atualizacao,
			nm_usuario_nrec, 				dt_atualizacao_nrec, 				cd_procedimento,
			ie_via_acesso, 					dt_procedimento, 				tx_item,
			qt_procedimento, 				ie_status, 					vl_procedimento_imp, 
			ie_tipo_despesa, 				nr_seq_conta, 					ie_situacao, 
			vl_unitario_imp, 				qt_procedimento_imp, 				ie_origem_proced, 
			vl_adic_procedimento, 				vl_adic_co, 					vl_adic_materiais, 
			cd_procedimento_imp, 				tx_intercambio_imp,				vl_taxa_co_imp, 
			vl_taxa_servico_imp, 				vl_taxa_material_imp,				vl_procedimento_ptu_imp, 
			vl_co_ptu_imp, 					vl_material_ptu_imp,				dt_inicio_proc,
			cd_porte_anestesico_imp,			ds_procedimento_imp,				ie_ato_cooperado, 
			ie_pacote_ptu,					qt_ptu_item, 					vl_apresentado_xml, 		
			vl_liberado, 					vl_unitario )
		values (	nextval('pls_conta_proc_seq'), 			nm_usuario_p, 					clock_timestamp(),
			nm_usuario_p, 					clock_timestamp(), 					dados_proc_p.cd_procedimento(i),
			dados_proc_p.ie_via_acesso(i), 			dados_proc_p.dt_procedimento(i), 		dados_proc_p.tx_item(i),
			dados_proc_p.qt_procedimento(i), 		dados_proc_p.ie_status(i), 			dados_proc_p.vl_procedimento_imp(i), 
			dados_proc_p.ie_tipo_despesa(i), 		dados_proc_p.nr_seq_conta(i), 			dados_proc_p.ie_situacao(i), 
			dados_proc_p.vl_unitario_imp(i), 		dados_proc_p.qt_procedimento_imp(i), 		dados_proc_p.ie_origem_proced(i), 
			dados_proc_p.vl_adic_procedimento(i), 		dados_proc_p.vl_adic_co(i), 			dados_proc_p.vl_adic_materiais(i), 
			dados_proc_p.cd_procedimento_imp(i), 		dados_proc_p.tx_intercambio_imp(i),		dados_proc_p.vl_taxa_co_imp(i), 
			dados_proc_p.vl_taxa_servico_imp(i), 		dados_proc_p.vl_taxa_material_imp(i),		dados_proc_p.vl_procedimento_ptu_imp(i), 
			dados_proc_p.vl_co_ptu_imp(i), 			dados_proc_p.vl_material_ptu_imp(i),		dados_proc_p.dt_inicio_proc(i),
			dados_proc_p.cd_porte_anestesico_imp(i),	dados_proc_p.ds_procedimento_imp(i),		dados_proc_p.ie_ato_cooperado(i), 
			dados_proc_p.ie_pacote_ptu(i),			dados_proc_p.qt_ptu_item(i), 			dados_proc_p.vl_apresentado_xml(i), 		
			dados_proc_p.vl_liberado(i), 			dados_proc_p.vl_unitario(i))	
			returning nr_sequencia bulk collect into nr_seq_proc_table_p;	

	commit;		
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_contas_a700_pck.inserir_conta_proc_a700 ( dados_proc_p pls_gerar_contas_a700_pck.dados_proc, nr_seq_proc_table_p INOUT dbms_sql.number_table, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
