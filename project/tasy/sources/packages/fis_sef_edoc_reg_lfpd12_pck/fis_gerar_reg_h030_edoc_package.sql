-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Registro h030: REGISTRO DE INVENTÁRIO
CREATE OR REPLACE PROCEDURE fis_sef_edoc_reg_lfpd12_pck.fis_gerar_reg_h030_edoc (nr_seq_superior_p bigint) AS $body$
DECLARE


--Variaveis
qt_cursor_h030_w bigint:=0;

nr_seq_fis_sef_edoc_h030_w	fis_sef_edoc_h030.nr_sequencia%type;
ind_item_w			fis_sef_edoc_h030.cd_ind_item%type;

c_reg_h030 CURSOR FOR
	SELECT 	0 ind_posse,
			obter_cgc_estabelecimento(cd_estabelecimento_w) cd_part,
			c.ie_tipo_fiscal ind_item,
			substr(obter_dados_ncm(c.nr_seq_ncm, 'C'),1,8) cd_ncm,
			a.cd_material cd_item,
			max(b.cd_unidade_medida_estoque) cd_unid,
			max(a.vl_custo_medio) vl_unit,
			sum(a.qt_estoque) qt_item,
			sum(a.vl_estoque) vl_item,
			0 vl_icms,
			0 vl_ipi,
			0 vl_pis,
			0 vl_cofins,
			0 vl_trib_nc,
			null cd_inf_obs
	FROM material b, saldo_estoque a
LEFT OUTER JOIN material_fiscal c ON (a.cd_material = c.cd_material)
WHERE a.cd_material 			= b.cd_material and a.qt_estoque > 0 and a.cd_estabelecimento 	= cd_estabelecimento_w and fim_mes(a.dt_mesano_referencia) 	= fim_mes(dt_inicio_apuracao_w)  group by
			a.cd_material,
			c.ie_tipo_fiscal,
			obter_cgc_estabelecimento(cd_estabelecimento_w),
			obter_dados_ncm(c.nr_seq_ncm, 'C')
	
union all

	SELECT 	2 ind_posse,
			a.cd_fornecedor cd_part,
			c.ie_tipo_fiscal ind_item,
			substr(obter_dados_ncm(c.nr_seq_ncm, 'C'),1,8) cd_ncm,
			a.cd_material cd_item,
			max(b.cd_unidade_medida_estoque) cd_unid,
			max(a.vl_custo_medio) vl_unit,
			sum(a.qt_estoque) qt_item,
			sum(a.vl_estoque) vl_item,
			0 vl_icms,
			0 vl_ipi,
			0 vl_pis,
			0 vl_cofins,
			0 vl_trib_nc,
			null cd_inf_obs
	FROM material b, fornecedor_mat_consignado a
LEFT OUTER JOIN material_fiscal c ON (a.cd_material = c.cd_material)
WHERE a.cd_material 			= b.cd_material and a.qt_estoque > 0 and a.cd_estabelecimento 	= cd_estabelecimento_w and fim_mes(a.dt_mesano_referencia) 	= fim_mes(dt_inicio_apuracao_w)  group by
			a.cd_material,
			c.ie_tipo_fiscal,
			a.cd_fornecedor,
			obter_dados_ncm(c.nr_seq_ncm, 'C');


--Criação do array com o tipo sendo do cursor eespecificado - c_reg_0150
type reg_c_reg_h030 is table of c_reg_h030%RowType;
vetregh030 reg_c_reg_h030;

--Criação do array com o tipo sendo do cursor eespecificado - fis_sef_edoc_h030
type registro_h030 is table of fis_sef_edoc_h030%rowtype index by integer;
fis_registros_h030_w registro_h030;

BEGIN

open c_reg_h030;
loop
fetch c_reg_h030 bulk collect into vetregh030 limit 1000;
	for i in 1 .. vetregh030.Count loop
		begin

		--Incrementa a variavel para o array
		qt_cursor_h030_w:=	qt_cursor_h030_w + 1;

		--Popula o identificador de inventario -- ind_item
		case
		when vetregh030[i].ind_item = '00' then
			ind_item_w := '0';
		when vetregh030[i].ind_item = '01' then
			ind_item_w := '1';
		when vetregh030[i].ind_item in ('05','06') then
			ind_item_w := '2';
		when vetregh030[i].ind_item = '03' then
			ind_item_w := '3';
		when vetregh030[i].ind_item = '04' then
			ind_item_w := '4';
		when vetregh030[i].ind_item = '02' then
			ind_item_w := '5';
		when vetregh030[i].ind_item = '08' then
			ind_item_w := '8';
		when vetregh030[i].ind_item in ('07','09','10','99') then
			ind_item_w := '9';
		else
			ind_item_w := null;
		end case;

		--Pega a sequencia da taleba fis_sef_edoc_ para o insert
		select	nextval('fis_sef_edoc_h030_seq')
		into STRICT	nr_seq_fis_sef_edoc_h030_w
		;

		--Inserindo valores no array para realização do forall posteriormente
		fis_registros_h030_w[qt_cursor_h030_w].nr_sequencia 		:= nr_seq_fis_sef_edoc_h030_w;
		fis_registros_h030_w[qt_cursor_h030_w].dt_atualizacao 		:= clock_timestamp();
		fis_registros_h030_w[qt_cursor_h030_w].nm_usuario 		:= current_setting('fis_sef_edoc_reg_lfpd12_pck.nm_usuario_w')::usuario.nm_usuario%type;
		fis_registros_h030_w[qt_cursor_h030_w].dt_atualizacao_nrec	:= clock_timestamp();
		fis_registros_h030_w[qt_cursor_h030_w].nm_usuario_nrec 		:= current_setting('fis_sef_edoc_reg_lfpd12_pck.nm_usuario_w')::usuario.nm_usuario%type;
		fis_registros_h030_w[qt_cursor_h030_w].cd_reg 			:= 'H030';
		fis_registros_h030_w[qt_cursor_h030_w].cd_ind_posse		:= vetregh030[i].ind_posse;
		fis_registros_h030_w[qt_cursor_h030_w].cd_part			:= vetregh030[i].cd_part;
		fis_registros_h030_w[qt_cursor_h030_w].cd_ind_item		:= ind_item_w;
		fis_registros_h030_w[qt_cursor_h030_w].cd_ncm			:= vetregh030[i].cd_ncm;
		fis_registros_h030_w[qt_cursor_h030_w].cd_item			:= vetregh030[i].cd_item;
		fis_registros_h030_w[qt_cursor_h030_w].cd_unid			:= vetregh030[i].cd_unid;
		fis_registros_h030_w[qt_cursor_h030_w].vl_unit			:= vetregh030[i].vl_unit;
		fis_registros_h030_w[qt_cursor_h030_w].qt_item			:= vetregh030[i].qt_item;
		fis_registros_h030_w[qt_cursor_h030_w].vl_item			:= vetregh030[i].vl_item;
		fis_registros_h030_w[qt_cursor_h030_w].vl_icms			:= vetregh030[i].vl_icms;
		fis_registros_h030_w[qt_cursor_h030_w].vl_ipi			:= vetregh030[i].vl_ipi;
		fis_registros_h030_w[qt_cursor_h030_w].vl_pis			:= vetregh030[i].vl_pis;
		fis_registros_h030_w[qt_cursor_h030_w].vl_cofins		:= vetregh030[i].vl_cofins;
		fis_registros_h030_w[qt_cursor_h030_w].vl_trib_nc		:= vetregh030[i].vl_trib_nc;
		fis_registros_h030_w[qt_cursor_h030_w].cd_inf_obs		:= vetregh030[i].cd_inf_obs;
		fis_registros_h030_w[qt_cursor_h030_w].nr_seq_superior		:= nr_seq_superior_p;
		fis_registros_h030_w[qt_cursor_h030_w].nr_seq_controle		:= current_setting('fis_sef_edoc_reg_lfpd12_pck.nr_seq_controle_w')::fis_sef_edoc_controle.nr_sequencia%type;

		--Insere registro caso for maior que 1000 a array
		if (fis_registros_h030_w.count >= 1000) then
		begin
		  --Inserindo registros definitivamente na tabela especifica - FIS_SEF_EDOC_C300
		  forall i in fis_registros_h030_w.first .. fis_registros_h030_w.last

		  insert into fis_sef_edoc_h030 values fis_registros_h030_w(i);

		  fis_registros_h030_w.delete;

		  commit;

		end;
		end if;

		end;
	end loop;
EXIT WHEN NOT FOUND; /* apply on c_reg_h030 */
end loop;
close c_reg_h030;

--Insere registro caso for maior que 1000 a array
if (fis_registros_h030_w.count > 0) then
begin
	--Inserindo registros definitivamente na tabela especifica - FIS_SEF_EDOC_C300
	forall i in fis_registros_h030_w.first .. fis_registros_h030_w.last

	insert into fis_sef_edoc_h030 values fis_registros_h030_w(i);

	fis_registros_h030_w.delete;

	commit;

end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_sef_edoc_reg_lfpd12_pck.fis_gerar_reg_h030_edoc (nr_seq_superior_p bigint) FROM PUBLIC;
