-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE atualiza_versao_pck.gen_update_records (p_table_name text, p_ds_campo_atualizacao text, p_reg_count bigint) AS $body$
DECLARE

    v_col_list_a varchar(32000);
    v_col_list_b varchar(32000);
    v_col_pk     varchar(32000);
    --v_dt_tasy_prod varchar2(100);
    v_cmd text;

  tep_cols RECORD;

BEGIN
    /* select to_char(dt_atualizacao, 'dd/mm/rrrr hh24:mi:ss')
     into v_dt_tasy_prod
     from aplicacao_tasy
    where cd_aplicacao_tasy = 'Tasy';*/
    for tep_cols in (SELECT nm_tabela table_name, nm_atributo column_name
                       from tasy_versao.tabela_atributo
                      where nm_tabela = p_table_name
                        and ie_atualizar_versao = 'S'
                        and ie_tipo_atributo not in ('FUNCTION', 'TIMESTAMP', 'LONG', 'LONG RAW',
                             'VISUAL')) loop
      -- FUNCTION, TIMESTAMP, LONG, LONG RAW, VISUAL: Tipos de dados não existentes no Oracle ou não passeiveis de atualização pela instrução MERGE.
      v_col_list_a := v_col_list_a || 'a.' || tep_cols.column_name || ',';
      v_col_list_b := v_col_list_b || 'b.' || tep_cols.column_name || ',';
      if atualiza_versao_pck.is_pk_column(tep_cols.table_name, tep_cols.column_name) then
        v_col_pk := v_col_pk || ' and a.' || tep_cols.column_name || '= b.' ||
                    tep_cols.column_name;
      end if;

    end loop;

    v_col_list_a := trim(both ',' from v_col_list_a);
    v_col_list_b := trim(both ',' from v_col_list_b);

    v_cmd := 'update ' || p_table_name || ' a set (' || v_col_list_a ||
             ') = (select ' || v_col_list_b || ' from tasy_versao.' ||
             p_table_name || ' b where 1=1 ' || v_col_pk ||
             ') where exists (select 1 from tasy_versao.' || p_table_name ||
             ' b where 1=1 ' || v_col_pk ||
             ' and b.dt_atualizacao > a.dt_atualizacao) ' || chr(10) ||
             ' log errors into log_error_exp_tables (''' ||
             upper(p_table_name) || ''') reject limit unlimited';

    CALL atualiza_versao_pck.insert_cmd(p_operacao         => 'UPDATE RECORDS ON DICTIONARY TABLES',
               p_cmd              => v_cmd,
               p_object_name      => p_table_name,
               p_qt_reg_exp_table => p_reg_count);
  end;

  --------------------------------------------------------------------------------------
  --                                                                                 
  -- Cria as instruções para INSERT das tabela de dicionário
  --                                                                                 
  --------------------------------------------------------------------------------------
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_versao_pck.gen_update_records (p_table_name text, p_ds_campo_atualizacao text, p_reg_count bigint) FROM PUBLIC;
