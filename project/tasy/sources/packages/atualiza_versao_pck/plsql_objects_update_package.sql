-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE atualiza_versao_pck.plsql_objects_update () AS $body$
DECLARE

    v_object_content text;
    v_cnpj_estab     varchar(30);

  o RECORD;
BEGIN
    EXECUTE 'select obter_cgc_estabelecimento(1) from dual'
      into STRICT v_cnpj_estab;

    for o in (SELECT dd.nm_objeto, dd.ds_script_criacao, dd.ie_tipo_objeto
                from objeto_sistema_dtr dd
               where dd.nr_sequencia in (select d.nr_sequencia
                        from objeto_sistema_dtr d, objeto_sistema o
                       where d.nr_sequencia = o.nr_sequencia
                         and d.dt_atualizacao > o.dt_atualizacao
                         and upper(d.ie_tipo_objeto) in ('TRIGGER', 'PROCEDURE', 'PACKAGE', 'FUNCTION',
                              'VIEW')
                         and (d.ds_script_criacao IS NOT NULL AND d.ds_script_criacao::text <> '')
                         and atualiza_versao_pck.gerar_objeto_aplicacao(d.ds_aplicacao,
                                                                        v_cnpj_estab,
                                                                        d.CD_CNPJ) = 'S'
                      
union

                      SELECT d.nr_sequencia
                        from objeto_sistema_dtr d
                       where not exists (select 1
                                from objeto_sistema o
                               where o.nm_objeto = d.nm_objeto)
                         and upper(d.ie_tipo_objeto) in ('TRIGGER', 'PROCEDURE', 'PACKAGE', 'FUNCTION',
                              'VIEW')
                         and (d.ds_script_criacao IS NOT NULL AND d.ds_script_criacao::text <> '')
                         and atualiza_versao_pck.gerar_objeto_aplicacao(d.ds_aplicacao,
                                                                        v_cnpj_estab,
                                                                        d.CD_CNPJ) = 'S'
                      
union

                      select a.nr_sequencia
                        from objeto_sistema_dtr a
                       where upper(a.ie_tipo_objeto) in ('TRIGGER',
                              'PROCEDURE',
                              'PACKAGE',
                              'FUNCTION',
                              'VIEW')
                         and atualiza_versao_pck.gerar_objeto_aplicacao(a.ds_aplicacao,
                                                                        v_cnpj_estab,
                                                                        a.CD_CNPJ) = 'S'
                         and a.dt_atualizacao >= current_setting('atualiza_versao_pck.g_tasy_version_date')::timestamp
                         and (a.ds_script_criacao IS NOT NULL AND a.ds_script_criacao::text <> ''))
                 and length(dd.ds_script_criacao) > 5
              /*and product_mgmt_pck.is_product_installed(dd.nm_produto) = 'Y'*/

              ) loop
    
      v_object_content := o.ds_script_criacao;

      for i in 1 .. 5 loop
        v_object_content := trim(both chr(13) from v_object_content);
        v_object_content := trim(both chr(10) from v_object_content);
        v_object_content := trim(both chr(9) from v_object_content);
        v_object_content := trim(both ' ' from v_object_content);
      end loop;
      v_object_content := trim(both '/' from v_object_content);

      if upper(o.ie_tipo_objeto) in ('VIEW', 'SEQUENCE') then
        for i in 1 .. 5 loop
          v_object_content := trim(both chr(13) from v_object_content);
          v_object_content := trim(both chr(10) from v_object_content);
          v_object_content := trim(both chr(9) from v_object_content);
          v_object_content := trim(both ' ' from v_object_content);
        end loop;
        v_object_content := trim(both ';' from v_object_content);
        if upper(o.ie_tipo_objeto) = 'VIEW' then

          if ((instr(upper(v_object_content), 'FORCE VIEW', 1, 1) = 0) and (instr(upper(v_object_content), 'VIEW', 1, 1) > 0)) then
            v_object_content := regexp_replace(v_object_content,
                                               'VIEW',
                                               'FORCE VIEW',
                                               1,
                                               1,
                                               'i');
          end if;

        end if;
      end if;

      v_object_content := replace(v_object_content, chr(13), null);

      CALL atualiza_versao_pck.insert_cmd(p_operacao    => 'UPDATE DATABASE OBJECTS',
                 p_cmd         => v_object_content,
                 p_object_name => o.nm_objeto,
                 p_object_type => upper(o.ie_tipo_objeto));

    end loop;
    CALL atualiza_versao_pck.insert_cmd(p_operacao => 'RECOMPILE PLSQL OBJECTS',
               p_cmd      => 'begin null; end;');

    CALL atualiza_versao_pck.insert_cmd(p_operacao => 'RECOMPILE PLSQL OBJECTS',
               p_cmd      => 'begin sys.utl_recomp.recomp_parallel(schema => ''' ||
                             upper(user) || '''); end;');

    CALL atualiza_versao_pck.insert_cmd(p_operacao => 'RECOMPILE PLSQL OBJECTS',
               p_cmd      => 'begin sys.utl_recomp.recomp_parallel(schema => ''' ||
                             upper(user) || '''); end;');

    CALL atualiza_versao_pck.insert_cmd(p_operacao => 'RECOMPILE PLSQL OBJECTS',
               p_cmd      => 'begin sys.utl_recomp.recomp_serial(schema => ''' ||
                             upper(user) || '''); end;');
  end;

  --------------------------------------------------------------------------------------
  --                                                                                 
  -- Cria os registros de SERVICE PACK. Este processo utiliza as tabelas 
  -- do processo de aplicação de service pack existente.
  --                                                                                 
  --------------------------------------------------------------------------------------
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_versao_pck.plsql_objects_update () FROM PUBLIC;
