-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

    
       /** 
   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Patient Discharge Information
	unique_key :- encounter number
	message type:- 3K -> Discharge confirm information
				   3L -> Discharge cancellation information 
	-- This message contains a common header and discharge information respective to patient.
	-- Based on 3K/3L if (3K , then send 1 - disharge confirm, if cancel the transfer ie 3L send 2-Admission as cancel d discharge)
    ** for first time log_sequence_number_p should be 0 and file_name_p should be null
   
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   **/
CREATE OR REPLACE PROCEDURE tosho_pck.patient_discharge_info ( unique_key_p bigint, message_type_p text, processing_type_p text, nm_usuario_p text, log_sequence_number_p text default 0, file_name_p text default null, cd_establishment_p bigint default 1, ie_retransmit_p text  DEFAULT NULL) AS $body$
DECLARE


        nm_tabela_w varchar(255);
        c01 CURSOR FOR

        SELECT obter_pessoa_atendimento(a.encounter_id, 'C') patient_id,
               CASE WHEN message_type_p='3L' THEN  '2' WHEN message_type_p='3K' THEN  '1' END  encounter_type,
               coalesce(to_char(a.encounter_discharge_date,'YYYYMMDD'), ' ')  discharge_date,
               coalesce(to_char(b.dt_atualizacao,'YYYYMMDD'), ' ')  undo_discharge_date,
               coalesce(to_char(a.encounter_discharge_date,'HH24MISS'), ' ')  discharge_time,
               coalesce(to_char(b.dt_atualizacao,'YYYYMMDD'), ' ')  undo_discharge_time,
               (SELECT  max( coalesce(to_char(x.dt_previsto_alta ,'YYYYMMDD'), ' ') )
                    from atend_previsao_alta x  
                    where x.nr_atendimento = unique_key_p 
                    and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                    and coalesce(dt_inativacao::text, '') = '') estimated_discharge_date,
          --     decode(message_type_p, '3K', lpad(trim(a.type_discharge_date), 4, 0) , ' ')  discharge_reason,
               coalesce(obter_conversao_externa_int(null, nm_tabela_w, 'NR_SEQUENCIA', a.type_discharge_date, 'TOSHO') , 1) discharge_reason,
               CASE WHEN message_type_p='3L' THEN  lpad(trim(both a.department_id), 3, 0)  ELSE ' ' END   ward_code,
               CASE WHEN message_type_p='3L' THEN  trim(both a.department_name)  ELSE ' ' END   ward_name,
               CASE WHEN message_type_p='3L' THEN  lpad(trim(both a.room_id), 4, 0)  ELSE ' ' END    room_code,
               CASE WHEN message_type_p='3L' THEN  trim(both a.room_name)  ELSE ' ' END    room_name
        from   bft_encounter_v a , atendimento_paciente b
        where  a.encounter_id = unique_key_p
        and a.encounter_id = b.nr_atendimento;



        
    
BEGIN
        PERFORM set_config('tosho_pck.ds_line_w', null, false);
        PERFORM set_config('tosho_pck.nm_interface_w', null, false);
        PERFORM set_config('tosho_pck.data_file_name_w', null, false);
        PERFORM set_config('tosho_pck.file_sequence_w', null, false);
        PERFORM set_config('tosho_pck.ds_message_w', 'Patient Discharge Information', false);
        PERFORM set_config('tosho_pck.file_seq_directory_w', 'TOSHO_PDATA', false);
        PERFORM set_config('tosho_pck.log_sequence_number_w', log_sequence_number_p, false);
        PERFORM set_config('tosho_pck.interface_event_w', 948, false);
        nm_tabela_w := 'MOTIVO_ALTA'; -- discharge reason
        nm_tabela_w := 'MOTIVO_TRANSF_PAC'; -- transfer/stay
        select is_integration_exist(929, m.patient_mrn),
               m.patient_mrn
        into STRICT   current_setting('tosho_pck.ie_exist_w')::varchar(1),
               current_setting('tosho_pck.patient_mrn_w')::varchar(10)
        from (SELECT obter_prontuario_atendimento(unique_key_p) patient_mrn 
                ) m;

        if (current_setting('tosho_pck.ie_exist_w')::varchar(1) = 'N')then
            return;
        end if;

       SELECT * FROM tosho_pck.get_interface_event_details(current_setting('tosho_pck.interface_event_w')::integer, current_setting('tosho_pck.ds_message_w')::varchar(255), current_setting('tosho_pck.nm_interface_w')::varchar(255)) INTO STRICT current_setting('tosho_pck.ds_message_w')::varchar(255), current_setting('tosho_pck.nm_interface_w')::varchar(255);
   
        PERFORM set_config('tosho_pck.cd_integartion_event_w', tosho_pck.get_directory_event_code(message_type_p), false);

        PERFORM set_config('tosho_pck.log_file_name_w', tosho_pck.get_log_file_name(current_setting('tosho_pck.cd_integartion_event_w')::philips_json.get['control_code'].value_of(), current_setting('tosho_pck.tosho_dept_code_w')::varchar(2), current_setting('tosho_pck.his_system_code')::varchar(2)), false);

        begin
        
            for r_c01 in c01 loop begin
                PERFORM set_config('tosho_pck.patient_id_w', r_c01.patient_id, false);
                 CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(message_type_p,2,'L'); --DENBUN_SYBT
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(to_char(clock_timestamp(),'YYYYMMDD'),8,'L'); --SAKUSEI_DATE
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(to_char(clock_timestamp(),'HH24MISS'),6,'L'); --SAKUSEI_TIME
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(current_setting('tosho_pck.his_system_code')::varchar(2), 2, 'L'); --S_SYS_CD
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(current_setting('tosho_pck.tosho_dept_code_w')::varchar(2) ,2, 'L'); --S_SYS_CD
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(1,8,'L','0');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(processing_type_p,1,'R',0); --SYORI_KBN
                if (message_type_p = '3K') then
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.discharge_date, 8, 'L'); --SYORI_DATE
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.discharge_time, 6, 'L'); --SYORI_TIME
                else
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.undo_discharge_date, 8, 'L'); --SYORI_DATE
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.undo_discharge_time, 6, 'L'); --SYORI_TIME
                end if;

                --message body info
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(current_setting('tosho_pck.patient_mrn_w')::varchar(10), 10, 'L', '0'); -- PT_ID
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.encounter_type, 1, 'L'); --NYUGAI_KBN
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(coalesce(r_c01.estimated_discharge_date,  r_c01.discharge_date), 8, 'L'); -- OUT_DATE
                 if (message_type_p = '3K') then
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.discharge_reason, 4); -- LVE_REASON_CD
                else
                 CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(coalesce(' ',  r_c01.discharge_date), 4); -- LVE_REASON_CD
                end if;
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.ward_code, 3); -- BYOTO_CD
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.ward_name, 20); -- BYOTO_NAME
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.room_code, 4); -- ROOM_CD
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(r_c01.room_name, 20); -- ROOM_NAME
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL tosho_pck.append_text(' ', 20, 'L'); -- FILLER
            end;
            end loop;

        exception
            when others then
                PERFORM set_config('tosho_pck.ds_log_message_w', 'Error occured while sending the integration message for'
                                    || current_setting('tosho_pck.ds_message_w')::varchar(255) || chr(10)
                                    || 'Integration name - japan_tosho_patient_data('
                                    || current_setting('tosho_pck.ds_message_w')::varchar(255)
                                    || ').'
                                    || chr(10)
                                    || 'Message Type:'
                                    || message_type_p
                                    || chr(10)
                                    || 'Time of faliure : '
                                    || clock_timestamp() || chr(10)
                                    || 'Encounter number :'
                                    || unique_key_p || chr(10)
                                    || 'ERROR : '
                                    || SQLERRM, false);

                record_integration_call_log(nm_usuario_p, nm_usuario_p, clock_timestamp(), current_setting('tosho_pck.nm_interface_w')::varchar(255), current_setting('tosho_pck.ds_message_w')::varchar(255),
                                            'F', 'E', null, current_setting('tosho_pck.ds_log_message_w')::varchar(32767), current_setting('tosho_pck.ds_line_w')::varchar(32767),
                                            current_setting('tosho_pck.ds_log_message_w')::varchar(32767), current_setting('tosho_pck.data_file_name_w')::varchar(100), current_setting('tosho_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type, current_setting('tosho_pck.patient_mrn_w')::varchar(10), current_setting('tosho_pck.interface_event_w')::integer);

                CALL CALL tosho_pck.save_log(current_setting('tosho_pck.cd_integartion_event_w')::philips_json.get['cd_event_log'].value_of(), current_setting('tosho_pck.log_file_name_w')::varchar(100), current_setting('tosho_pck.ds_log_message_w')::varchar(32767));
                return;
        end;

        if (file_name_p IS NOT NULL AND file_name_p::text <> '') then
            PERFORM set_config('tosho_pck.data_file_name_w', file_name_p, false);
        else
            generate_int_serial_number(0, current_setting('tosho_pck.file_seq_directory_w')::varchar(15), cd_establishment_p, nm_usuario_p, current_setting('tosho_pck.file_sequence_w')::smallint, current_setting('tosho_pck.interface_event_w')::integer);
            PERFORM set_config('tosho_pck.data_file_name_w', tosho_pck.get_file_name(current_setting('tosho_pck.cd_integartion_event_w')::philips_json.get['control_code'].value_of(), current_setting('tosho_pck.tosho_dept_code_w')::varchar(2), current_setting('tosho_pck.his_system_code')::varchar(2), current_setting('tosho_pck.file_sequence_w')::smallint), false);

        end if;

        PERFORM set_config('tosho_pck.ds_script_w', 'tosho_pck.patient_discharge_info ('
                       || unique_key_p
                       || ','''
                       || message_type_p
                       || ''', '''
                       || processing_type_p
                       || ''', '''
                       || ':nm_exec_user' 
                       || ''' ,'
                       || ':nr_seq_int_call_log'
                       || ', '''
                       || current_setting('tosho_pck.data_file_name_w')::varchar(100)
                       || ''' ,'
                       || cd_establishment_p
                       || ', ''S'');', false);

        CALL CALL tosho_pck.perform_integration(unique_key_p, message_type_p, nm_usuario_p, current_setting('tosho_pck.log_sequence_number_w')::integration_message_log.nr_seq_int_call_log%type, current_setting('tosho_pck.data_file_name_w')::varchar(100),
                            current_setting('tosho_pck.log_file_name_w')::varchar(100), cd_establishment_p, current_setting('tosho_pck.file_seq_directory_w')::varchar(15), current_setting('tosho_pck.cd_integartion_event_w')::philips_json, current_setting('tosho_pck.ds_message_w')::varchar(255),
                            current_setting('tosho_pck.ds_script_w')::integration_call_log.ds_resend_script%type, current_setting('tosho_pck.nm_interface_w')::varchar(255), current_setting('tosho_pck.interface_event_w')::integer, current_setting('tosho_pck.patient_mrn_w')::varchar(10), ie_retransmit_p);

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tosho_pck.patient_discharge_info ( unique_key_p bigint, message_type_p text, processing_type_p text, nm_usuario_p text, log_sequence_number_p text default 0, file_name_p text default null, cd_establishment_p bigint default 1, ie_retransmit_p text  DEFAULT NULL) FROM PUBLIC;
