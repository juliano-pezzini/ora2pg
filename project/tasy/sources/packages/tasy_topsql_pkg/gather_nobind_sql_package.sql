-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



/* 
    Gathers data about SQLs that are not using binds (that are using literal values in the SQL text - repeated SQLs)
*/
CREATE OR REPLACE PROCEDURE tasy_topsql_pkg.gather_nobind_sql (p_snap_nobind_sql_maxcount bigint) AS $body$
BEGIN
    -- Sanity check
    IF p_snap_nobind_sql_maxcount < 1 THEN
        RAISE EXCEPTION '%', 'You must try to collect at least 1 SQL! Check the config table and try again.' USING ERRCODE = '45005';
    END IF;

    -- If the force_matching signature exists, just update the number of occurrences and counts
    -- Limit the amount of data to be returned to the parameter
    MERGE INTO tasy_topsql_nobind_sql B
    USING(
        SELECT * FROM (    
            WITH c AS (
                SELECT
                    force_matching_signature,
                    COUNT(*) cnt
                FROM
                    gv_$sqlarea
                WHERE
                    force_matching_signature != 0
                AND 
                    parsing_user_id IN (
                        SELECT user_id
                        FROM user_users
                    )
                GROUP BY
                    force_matching_signature
                HAVING
                    COUNT(*) > 10
            ), sq AS (
                SELECT
                    sql_text,
                    force_matching_signature,
                    program_id,
                    program_line# program_line,
                    module,
                    action,
                    last_load_time,
                    ROW_NUMBER() OVER (
                        PARTITION BY force_matching_signature
                        ORDER BY
                            last_load_time DESC
                    ) p
                FROM
                    gv_$sqlarea s
                WHERE
                    force_matching_signature IN (
                        SELECT
                            force_matching_signature
                        FROM
                            c
                    )
                AND 
                    parsing_user_id IN (
                        SELECT user_id
                        FROM user_users
                    )
            )
            SELECT
                sq.force_matching_signature,
                o.object_name   AS program_name,
                sq.program_line,
                sq.module,
                sq.action,
                sq.last_load_time,
                c.cnt           AS unshared_count,
                sq.sql_text
            FROM c, sq
LEFT OUTER JOIN user_objects o ON (sq.program_id = o.object_id)
WHERE sq.force_matching_signature = c.force_matching_signature  AND sq.p = 1 ORDER BY
                c.cnt DESC
        ) alias9 LIMIT (p_snap_nobind_sql_maxcount)) Q
    ON (B.force_matching_signature = Q.force_matching_signature)
    WHEN MATCHED THEN UPDATE SET
        B.number_of_occurences = B.number_of_occurences + 1,
        B.last_load_time = Q.last_load_time,
        B.program_name = Q.program_name,
        B.program_line = Q.program_line,
        B.module = Q.module,
        B.action = Q.action,  
        B.last_unshared_count = Q.unshared_count,
        B.total_unshared_count = B.total_unshared_count + Q.unshared_count,
        B.sql_text = Q.sql_text
    WHEN NOT MATCHED THEN INSERT(
        B.force_matching_signature,
        B.number_of_occurences,
        B.last_load_time,
        B.program_name,
        B.program_line,
        B.module,
        B.action,  
        B.last_unshared_count,
        B.total_unshared_count,
        B.sql_text
    )
    VALUES (
        Q.force_matching_signature,
        1,
        Q.last_load_time,
        Q.program_name,
        Q.program_line,
        Q.module,
        Q.action,  
        Q.unshared_count,
        Q.unshared_count,
        Q.sql_text    
    );

EXCEPTION
    WHEN SQLSTATE '50013' THEN
        RAISE EXCEPTION '%', 'Missing privilege on view "sys.gv_$sqlarea".'
            || ' Please grant SELECT on sys.gv_$sqlarea to TASY: ' || sqlerrm USING ERRCODE = '45006';
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_topsql_pkg.gather_nobind_sql (p_snap_nobind_sql_maxcount bigint) FROM PUBLIC;
