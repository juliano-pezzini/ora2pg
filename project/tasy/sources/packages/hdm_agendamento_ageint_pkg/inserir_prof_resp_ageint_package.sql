-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	/* -------------------------------------------------------------------------------------------------------------------
	Finalidade:  Inserir na agenda integrada os profissionais responsável pelo agendamento.
	*/
CREATE OR REPLACE PROCEDURE hdm_agendamento_ageint_pkg.inserir_prof_resp_ageint (nr_seq_captacao_p mprev_captacao.nr_sequencia%type, nr_seq_partic_ciclo_item_p mprev_partic_ciclo_item.nr_sequencia%type, nr_seq_agenda_integrada_p agenda_integrada.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


	nr_seq_motivo_agendamento_w	motivo_agendamento.nr_sequencia%type;
	cd_classificacao_w		agenda_classif.cd_classificacao%type;
	nm_obter_regra_agenda_w     bigint;

	C01 CURSOR FOR
		SELECT	cd_pessoa_fisica_resp,
			cd_classificacao,
			cd_especialidade,
			cd_estabelecimento
		from	w_hdm_prof_resp_ageint
		where (nr_seq_captacao = nr_seq_captacao_p or nr_seq_partic_ciclo_item = nr_seq_partic_ciclo_item_p)
		and	nm_usuario = nm_usuario_p;

	
BEGIN

    
	nm_obter_regra_agenda_w := hdm_agendamento_ageint_pkg.obter_regra_gera_ageint(nr_seq_captacao_p, nr_seq_partic_ciclo_item_p);

	select	max(ie_classif_agenda),
		max(nr_seq_motivo_agendamento)
	into STRICT	cd_classificacao_w,
		nr_seq_motivo_agendamento_w
	from    hdm_regra_gerar_agenda
	where   nr_sequencia = nm_obter_regra_agenda_w;

	if (coalesce(nr_seq_motivo_agendamento_w::text, '') = '') then
		/*Entra no if caso a procedure for chamada pela funA§A?o HDM - Acompanhamento do plano de atendimento*/

		if (nr_seq_partic_ciclo_item_p IS NOT NULL AND nr_seq_partic_ciclo_item_p::text <> '') then
			/*Busca a sequencia do motivo do agendamento do atendimento previsto gerado manualmente*/

			select	a.nr_seq_motivo_agendamento
			into STRICT	nr_seq_motivo_agendamento_w
			from	mprev_partic_ciclo_item a
			where	nr_sequencia = nr_seq_partic_ciclo_item_p;

		end if;

		/*Entra no if caso a procedure for chamada pela funão HDM - Captação*/

		if (nr_seq_captacao_p IS NOT NULL AND nr_seq_captacao_p::text <> '') then
			/*Motivo padrão ao gerar agendamento na Agenda Integrada. Parâmetro [7] da função HDM - Captação.*/

			nr_seq_motivo_agendamento_w	:= obter_valor_param_usuario(10155, 7, Obter_Perfil_Ativo, nm_usuario_p, 0);
		end if;
	end if;

	for r_C01 in C01 loop
		begin

		insert 	into agenda_integrada_item(nr_sequencia, nr_seq_agenda_int, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_agendamento, cd_medico, dt_prevista_item,
			nr_seq_partic_ciclo_item, nr_seq_motivo_agendamento, nr_seq_captacao,
			ie_classif_agenda, cd_especialidade)
		values (nextval('agenda_integrada_item_seq'), nr_seq_agenda_integrada_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nm_usuario_p,
			'C', r_C01.cd_pessoa_fisica_resp, null,
			nr_seq_partic_ciclo_item_p, nr_seq_motivo_agendamento_w, nr_seq_captacao_p,
			coalesce(r_C01.cd_classificacao, cd_classificacao_w), r_C01.cd_especialidade);
		end;
	end loop;

	commit;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hdm_agendamento_ageint_pkg.inserir_prof_resp_ageint (nr_seq_captacao_p mprev_captacao.nr_sequencia%type, nr_seq_partic_ciclo_item_p mprev_partic_ciclo_item.nr_sequencia%type, nr_seq_agenda_integrada_p agenda_integrada.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
