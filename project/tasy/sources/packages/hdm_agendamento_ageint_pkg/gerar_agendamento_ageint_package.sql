-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

/* -------------------------------------------------------------------------------------------------------------------
	Finalidade:  Gerar agendamento na Agenda integrada para participantes da medicina preventiva
	*/
CREATE OR REPLACE PROCEDURE hdm_agendamento_ageint_pkg.gerar_agendamento_ageint ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, dt_prevista_p timestamp, nr_seq_partic_ciclo_item_p mprev_partic_ciclo_item.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_pf_usuario_logado_p pessoa_fisica.cd_pessoa_fisica%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_captacao_p mprev_captacao.nr_sequencia%type, nr_seq_agenda_integrada_p INOUT agenda_integrada.nr_sequencia%type) AS $body$
DECLARE


	dt_nascimento_w			pessoa_fisica.dt_nascimento%type;
	nm_paciente_w			pessoa_fisica.nm_pessoa_fisica%type;
	nr_seq_status_w			agenda_integrada_status.nr_sequencia%type;
	nr_sequencia_w			agenda_integrada.nr_sequencia%type;
	nr_seq_item_w			agenda_integrada_item.nr_sequencia%type;
	ie_sexo_w			pessoa_fisica.ie_sexo%type;
	nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
	cd_procedencia_w		procedencia.cd_procedencia%type;
	cd_convenio_w			integer;
	cd_categoria_w			varchar(10);
	cd_usuario_convenio_w		varchar(30);
	cd_pessoa_fisica_bene_w 	varchar(10);
	nm_pessoa_fisica_bene_w 	varchar(60);
	ie_situacao_atend_bene_w 	varchar(1);
	ds_abort_bene_w 		varchar(500);
	dt_validade_carteira_w 		timestamp;
	cd_plano_w 			varchar(10);
	nr_doc_convenio_w		varchar(20) := null;
	cd_tipo_acomodacao_w		smallint := null;
	ds_observacao_w			varchar(4000);
	param_agenda_integrada_w	varchar(2);
	nr_telefone_w			agenda_integrada.nr_telefone%type;
	qt_altura_cm_w			agenda_integrada.qt_altura_cm%type;
	qt_altura_cm_ant_w		agenda_integrada.qt_altura_cm%type;
	qt_peso_w			agenda_integrada.qt_peso%type;
	qt_peso_ant_w			agenda_integrada.qt_peso%type;
	qt_idade_pac_w			agenda_integrada.qt_idade_pac%type;
	ie_altu_agenda_anterior_w	varchar(1);
	ie_peso_agenda_anterior_w	varchar(1);
	cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
	ie_tipo_atendimento_w		agenda_integrada.ie_tipo_atendimento%type;
    nm_obter_regra_agenda_w     bigint;


	
BEGIN

  if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

		nm_paciente_w := substr(obter_nome_pf(cd_pessoa_fisica_p),1,60);

		cd_estabelecimento_w := coalesce(cd_estabelecimento_p, wheb_usuario_pck.get_cd_estabelecimento);

		ie_peso_agenda_anterior_w	:= coalesce(obter_valor_param_usuario(869, 15, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N');
		ie_altu_agenda_anterior_w	:= coalesce(obter_valor_param_usuario(869, 16, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

		select	nextval('agenda_integrada_seq')
		into STRICT	nr_sequencia_w
		;

		SELECT 	MAX(nr_sequencia)
		into STRICT	nr_seq_status_w
		FROM 	agenda_integrada_status
		WHERE 	ie_status_tasy = 'EA'
		and	coalesce(IE_SITUACAO,'A') = 'A';

		select	max(dt_nascimento),
			max(ie_sexo),
			substr(obter_fone_pac_agenda(max(cd_pessoa_fisica)),1,60) nr_telefone,
			max(qt_altura_cm),
			ageint_obter_dados_agenda_ant(max(cd_pessoa_fisica), clock_timestamp(),'','','A') qt_altura_cm_ant,
			max(qt_peso),
			ageint_obter_dados_agenda_ant(max(cd_pessoa_fisica), clock_timestamp(),'','','P') qt_peso_ant,
			Obter_Idade_PF(max(cd_pessoa_fisica),clock_timestamp(),'A')
		into STRICT	dt_nascimento_w,
			ie_sexo_w,
			nr_telefone_w,
			qt_altura_cm_w,
			qt_altura_cm_ant_w,
			qt_peso_w,
			qt_peso_ant_w,
			qt_idade_pac_w
		from	pessoa_fisica
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_p;

		if (nr_seq_captacao_p IS NOT NULL AND nr_seq_captacao_p::text <> '') then
			nr_seq_segurado_w := mprev_obter_dados_captacao(nr_seq_captacao_p, clock_timestamp(), 'BN');
		else
			nr_seq_segurado_w := mprev_obter_benef_partic(null, cd_pessoa_fisica_p);
		end if;


        nm_obter_regra_agenda_w := hdm_agendamento_ageint_pkg.obter_regra_gera_ageint(nr_seq_captacao_p, nr_seq_partic_ciclo_item_p);

 		select
            max(cd_procedencia), 
            max(ie_tipo_atendimento)
        into STRICT	
			cd_procedencia_w,
			ie_tipo_atendimento_w 
        from 
            hdm_regra_gerar_agenda hr
        where 
            hr.nr_sequencia = nm_obter_regra_agenda_w;

		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '')then
			obter_dados_segurado_agenda(nr_seq_segurado_w, nm_usuario_p, cd_estabelecimento_p,
						cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w,
						cd_pessoa_fisica_bene_w,  nm_pessoa_fisica_bene_w, ie_situacao_atend_bene_w,
						ds_abort_bene_w, dt_validade_carteira_w, cd_plano_w, ie_tipo_atendimento_w);
		else
			param_agenda_integrada_w	:= coalesce(obter_valor_param_usuario(869, 13, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');

			if (param_agenda_integrada_w in ('AG', 'AT')) then
				gerar_convenio_ageint(	cd_pessoa_fisica_p, null, nr_sequencia_w,
							param_agenda_integrada_w, cd_convenio_w, cd_categoria_w,
							cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w,
							cd_tipo_acomodacao_w, cd_plano_w, nm_usuario_p,
							ds_observacao_w);
			end if;
		end if;

		if (ie_peso_agenda_anterior_w = 'S') then
		    qt_peso_w := qt_peso_ant_w;
		end if;

		if (ie_altu_agenda_anterior_w = 'S') then
		   qt_altura_cm_w := qt_altura_cm_ant_w;
		end if;

		insert 	into agenda_integrada(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, dt_inicio_agendamento,
				dt_fim_agendamento, nr_seq_status, cd_pessoa_fisica,
				nm_paciente, dt_nascimento, ie_turno,
				dt_prevista, cd_estabelecimento, ie_sexo,
				cd_categoria, cd_convenio, cd_plano,
				cd_usuario_convenio, dt_validade_carteira, nr_doc_convenio,
				cd_procedencia, nr_seq_captacao, nr_seq_partic_ciclo_item,
				nr_telefone, qt_peso, qt_altura_cm, qt_idade_pac,
                                ie_tipo_atendimento)
			values (nr_sequencia_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, clock_timestamp(),
				null, nr_seq_status_w, cd_pessoa_fisica_p,
				nm_paciente_w, dt_nascimento_w, 2,
				dt_prevista_p, cd_estabelecimento_p, ie_sexo_w,
				cd_categoria_w, cd_convenio_w, cd_plano_w,
				cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w,
				cd_procedencia_w, nr_seq_captacao_p, nr_seq_partic_ciclo_item_p,
				nr_telefone_w, qt_peso_w, qt_altura_cm_w, qt_idade_pac_w,
                                ie_tipo_atendimento_w);

	end if;

	nr_seq_agenda_integrada_p	:= nr_sequencia_w;

	commit;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hdm_agendamento_ageint_pkg.gerar_agendamento_ageint ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, dt_prevista_p timestamp, nr_seq_partic_ciclo_item_p mprev_partic_ciclo_item.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_pf_usuario_logado_p pessoa_fisica.cd_pessoa_fisica%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_captacao_p mprev_captacao.nr_sequencia%type, nr_seq_agenda_integrada_p INOUT agenda_integrada.nr_sequencia%type) FROM PUBLIC;
