-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ger_envio_anexos_ans_pck.validar_anexo_conta_guia ( nr_protocolo_prestador_p pls_anexo_imp.nr_protocolo_prestador%type, cd_guia_prestador_p pls_anexo_imp.cd_guia_prestador%type, cd_guia_p pls_anexo_imp.cd_guia%type, nr_seq_prestador_p pls_anexo_imp.nr_seq_prestador%type, nr_seq_conta_p INOUT pls_conta.nr_sequencia%type, cd_motivo_glosa_p INOUT pls_anexo_imp.cd_motivo_glosa%type, ds_motivo_glosa_p INOUT pls_anexo_imp.ds_motivo_glosa%type, ie_status_p INOUT pls_anexo_imp.ie_status%type, nr_seq_protocolo_p INOUT pls_protocolo_conta.nr_sequencia%type) AS $body$
DECLARE


nr_seq_prest_prot_w    	pls_protocolo_conta.nr_seq_prestador%type;
nr_seq_prest_conta_w  	pls_conta.nr_seq_prestador_exec%type;
current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%type    	pls_conta.nr_sequencia%type;
qt_contas_localizadas_w  integer := 0;


BEGIN
	
	if (nr_protocolo_prestador_p IS NOT NULL AND nr_protocolo_prestador_p::text <> '') then
	
		select  max(nr_sequencia),
				count(1)
		into STRICT   	current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%type,
				qt_contas_localizadas_w
		from (
			SELECT   a.nr_sequencia
			from  	pls_conta a,
					pls_protocolo_conta b
			where   a.nr_seq_protocolo = b.nr_sequencia
			and   	a.cd_guia = cd_guia_p
			and   	a.nr_seq_protocolo = nr_protocolo_prestador_p
			and   	a.cd_guia_prestador = cd_guia_prestador_p
			and 	a.nr_seq_prestador_exec = nr_seq_prestador_p
			
union

			SELECT   a.nr_sequencia
			from  	pls_conta a,
					pls_protocolo_conta b
			where   a.nr_seq_protocolo = b.nr_sequencia
			and   	a.cd_guia = cd_guia_p
			and   	a.nr_seq_protocolo = nr_protocolo_prestador_p
			and   	a.cd_guia_prestador = cd_guia_prestador_p
			and 	b.nr_seq_prestador = nr_seq_prestador_p
		) alias4;
		
		--se nao achou nada, procura conta considerando o prestador informado nos participantes
		if ( current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%coalesce(type::text, '') = '') then
		
			select   max(a.nr_sequencia),
					count(1)
			into STRICT   	current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%type,
					qt_contas_localizadas_w
			from  	pls_conta a,
					pls_protocolo_conta b
			where   a.nr_seq_protocolo = b.nr_sequencia
			and   	a.cd_guia = cd_guia_p
			and   	a.nr_seq_protocolo = nr_protocolo_prestador_p
			and   	a.cd_guia_prestador = cd_guia_prestador_p
			and exists (SELECT  1
						from  	pls_conta_proc x,
								pls_proc_participante y
						where   x.nr_seq_conta = a.nr_sequencia
						and   	y.nr_seq_conta_proc = x.nr_sequencia
						and 	y.nr_seq_prestador = nr_seq_prestador_p);
		end if;
	else -- faz as mesmas buscas aqui, soh que sem o protocolo informado
		select  max(nr_sequencia),
				count(1)
		into STRICT   	current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%type,
				qt_contas_localizadas_w
		from (
			SELECT   a.nr_sequencia
			from  	pls_conta a,
					pls_protocolo_conta b
			where   a.nr_seq_protocolo = b.nr_sequencia
			and   	a.cd_guia = cd_guia_p
			and   	a.cd_guia_prestador = cd_guia_prestador_p
			and 	a.nr_seq_prestador_exec = nr_seq_prestador_p
			
union

			SELECT   a.nr_sequencia
			from  	pls_conta a,
					pls_protocolo_conta b
			where   a.nr_seq_protocolo = b.nr_sequencia
			and   	a.cd_guia = cd_guia_p
			and   	a.cd_guia_prestador = cd_guia_prestador_p
			and 	b.nr_seq_prestador = nr_seq_prestador_p
			
union

			select   a.nr_sequencia
			from  	pls_conta a,
					pls_protocolo_conta b
			where   a.nr_seq_protocolo = b.nr_sequencia
			and   	a.cd_guia = cd_guia_p
			and   	a.cd_guia_prestador = cd_guia_prestador_p) alias3;
			
			if ( current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%coalesce(type::text, '') = '') then
		
				select   max(a.nr_sequencia),
						count(1)
				into STRICT   	current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%type,
						qt_contas_localizadas_w
				from  	pls_conta a,
						pls_protocolo_conta b
				where   a.nr_seq_protocolo = b.nr_sequencia
				and   	a.cd_guia = cd_guia_p
				and   	a.nr_seq_protocolo = nr_protocolo_prestador_p
				and   	a.cd_guia_prestador = cd_guia_prestador_p
				and exists (SELECT  1
							from  	pls_conta_proc x,
									pls_proc_participante y
							where   x.nr_seq_conta = a.nr_sequencia
							and   	y.nr_seq_conta_proc = x.nr_sequencia
							and 	y.nr_seq_prestador = nr_seq_prestador_p);
			end if;
	end if;

	--Se localizar mais de uma contas com as informacoes de guia recebidas, retorna com gloSA 1307, para nao gerar anexo em conta incorreta
	if (qt_contas_localizadas_w > 1) then
		cd_motivo_glosa_p := '1307';
		ds_motivo_glosa_p := obter_texto_dic_objeto( 1211642, wheb_usuario_pck.get_nr_seq_idioma, null);
		ie_status_p := 'G';
		PERFORM set_config('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w', null, false);
		
	--achou uma conta correspondente
	elsif ( qt_contas_localizadas_w = 1) then
		nr_seq_conta_p := current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%type;
		nr_seq_protocolo_p := nr_protocolo_prestador_p;
	else  --se nao encontrou nenhuma conta com as informacoes enviadas
		if ( current_setting('pls_ger_envio_anexos_ans_pck.nr_seq_conta_temp_w')::pls_conta.nr_sequencia%coalesce(type::text, '') = '') then
		
			--Nos casos onde foram enviadas as informacoes de guia e tambem o sequencial do prestador, e nao e localizado nenhuma conta com essa combinacao de informacoes
			--entao emite glosa 3162 - Codigo protocolo nao encontrado, se nao tem o seq protocolo informado no recebimento, entao nao localizou  a conta devido a informacoes
			--corretas de guia\prestador, e emitira a glosa 5052 para esse caso
			if (nr_protocolo_prestador_p IS NOT NULL AND nr_protocolo_prestador_p::text <> '') then
				cd_motivo_glosa_p := '3162';
				ds_motivo_glosa_p := obter_texto_dic_objeto(1211643, wheb_usuario_pck.get_nr_seq_idioma, null);
				ie_status_p := 'G';
			else
				cd_motivo_glosa_p := '5052';
				ds_motivo_glosa_p := obter_texto_dic_objeto( 1211641, wheb_usuario_pck.get_nr_seq_idioma, null);
				ie_status_p := 'G';
			end if;		
		end if;
		
	end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ger_envio_anexos_ans_pck.validar_anexo_conta_guia ( nr_protocolo_prestador_p pls_anexo_imp.nr_protocolo_prestador%type, cd_guia_prestador_p pls_anexo_imp.cd_guia_prestador%type, cd_guia_p pls_anexo_imp.cd_guia%type, nr_seq_prestador_p pls_anexo_imp.nr_seq_prestador%type, nr_seq_conta_p INOUT pls_conta.nr_sequencia%type, cd_motivo_glosa_p INOUT pls_anexo_imp.cd_motivo_glosa%type, ds_motivo_glosa_p INOUT pls_anexo_imp.ds_motivo_glosa%type, ie_status_p INOUT pls_anexo_imp.ie_status%type, nr_seq_protocolo_p INOUT pls_protocolo_conta.nr_sequencia%type) FROM PUBLIC;
