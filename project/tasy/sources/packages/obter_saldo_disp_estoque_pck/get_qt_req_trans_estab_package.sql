-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION obter_saldo_disp_estoque_pck.get_qt_req_trans_estab ( cd_estabelecimento_p bigint, cd_material_p bigint, cd_local_estoque_p bigint default null, nr_seq_lote_p bigint default null) RETURNS bigint AS $body$
DECLARE


	qt_req_transf_estab_w		double precision	:= 0;
	cd_material_estoque_ww		material.cd_material%type;

	
BEGIN
	CALL CALL CALL CALL CALL CALL CALL CALL CALL obter_saldo_disp_estoque_pck.set_cd_estabelecimento(cd_estabelecimento_p);
	CALL obter_saldo_disp_estoque_pck.set_nr_seq_lote(nr_seq_lote_p);
	CALL obter_saldo_disp_estoque_pck.set_cd_material(cd_material_p);
	cd_material_estoque_ww		:=	obter_saldo_disp_estoque_pck.get_cd_material_estoque();

	if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_req_trans_estab_w')::parametro_estoque.ie_disp_req_trans_estab%type = 'S') then
		if (cd_local_estoque_p > 0) then
			if	((nr_seq_lote_p > 0) and (current_setting('obter_saldo_disp_estoque_pck.ie_estoque_lote_w')::material_estab.ie_estoque_lote%type = 'S')) then
				select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega - obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci,'S'), b.cd_unidade_medida_compra, 'UME')),0) qt_estoque
				into STRICT	qt_req_transf_estab_w
				from	ordem_compra a,
					ordem_compra_item b,
					ordem_compra_item_entrega c
				where	a.nr_ordem_compra = b.nr_ordem_compra
				and	a.nr_ordem_compra = c.nr_ordem_compra
				and	b.nr_item_oci = c.nr_item_oci
				and	coalesce(c.dt_cancelamento::text, '') = ''
				and	coalesce(b.dt_reprovacao::text, '') = ''
				and	(b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '')
				and	coalesce(a.dt_baixa::text, '') = ''
				and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
				and	a.ie_tipo_ordem = 'T'
				and (coalesce(c.qt_prevista_entrega,0) - coalesce(c.qt_real_entrega,0)) > 0
				and	a.cd_local_transf = current_setting('obter_saldo_disp_estoque_pck.cd_local_estoque_w')::local_estoque.cd_local_estoque%type
				and	b.nr_seq_lote_fornec = nr_seq_lote_p
				and	exists (SELECT	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material);
			else
				select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega - obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci,'S'), b.cd_unidade_medida_compra, 'UME')),0) qt_estoque
				into STRICT	qt_req_transf_estab_w
				from	ordem_compra a,
					ordem_compra_item b,
					ordem_compra_item_entrega c
				where	a.nr_ordem_compra = b.nr_ordem_compra
				and	a.nr_ordem_compra = c.nr_ordem_compra
				and	b.nr_item_oci = c.nr_item_oci
				and	coalesce(c.dt_cancelamento::text, '') = ''
				and	coalesce(b.dt_reprovacao::text, '') = ''
				and	(b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '')
				and	coalesce(a.dt_baixa::text, '') = ''
				and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
				and	a.ie_tipo_ordem = 'T'
				and (coalesce(c.qt_prevista_entrega,0) - coalesce(c.qt_real_entrega,0)) > 0
				and	a.cd_local_transf = current_setting('obter_saldo_disp_estoque_pck.cd_local_estoque_w')::local_estoque.cd_local_estoque%type
				and	exists (SELECT	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material);
			end if;
		else
			if	((nr_seq_lote_p > 0) and (current_setting('obter_saldo_disp_estoque_pck.ie_estoque_lote_w')::material_estab.ie_estoque_lote%type = 'S')) then
				select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega - obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci,'S'), b.cd_unidade_medida_compra, 'UME')),0) qt_estoque
				into STRICT	qt_req_transf_estab_w
				from	ordem_compra a,
					ordem_compra_item b,
					ordem_compra_item_entrega c
				where	a.nr_ordem_compra = b.nr_ordem_compra
				and	a.nr_ordem_compra = c.nr_ordem_compra
				and	b.nr_item_oci = c.nr_item_oci
				and	coalesce(c.dt_cancelamento::text, '') = ''
				and	coalesce(b.dt_reprovacao::text, '') = ''
				and	(b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '')
				and	coalesce(a.dt_baixa::text, '') = ''
				and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
				and	a.ie_tipo_ordem = 'T'
				and (coalesce(c.qt_prevista_entrega,0) - coalesce(c.qt_real_entrega,0)) > 0
				and	b.nr_seq_lote_fornec = nr_seq_lote_p
				and	exists (	SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = a.cd_local_transf
						and	loc.cd_estabelecimento = cd_estabelecimento_p)
				and	exists (select	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material);
			else
				select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega - obter_qt_oci_trans_nota(a.nr_ordem_compra, b.nr_item_oci,'S'), b.cd_unidade_medida_compra, 'UME')),0) qt_estoque
				into STRICT	qt_req_transf_estab_w
				from	ordem_compra a,
					ordem_compra_item b,
					ordem_compra_item_entrega c
				where	a.nr_ordem_compra = b.nr_ordem_compra
				and	a.nr_ordem_compra = c.nr_ordem_compra
				and	b.nr_item_oci = c.nr_item_oci
				and	coalesce(c.dt_cancelamento::text, '') = ''
				and	coalesce(b.dt_reprovacao::text, '') = ''
				and	(b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '')
				and	coalesce(a.dt_baixa::text, '') = ''
				and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
				and	a.ie_tipo_ordem = 'T'
				and (coalesce(c.qt_prevista_entrega,0) - coalesce(c.qt_real_entrega,0)) > 0
				and	exists (	SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = a.cd_local_transf
						and	loc.cd_estabelecimento = cd_estabelecimento_p)
				and	exists (select	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material);
			end if;
		end if;
	end if;
	return qt_req_transf_estab_w;
	end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_disp_estoque_pck.get_qt_req_trans_estab ( cd_estabelecimento_p bigint, cd_material_p bigint, cd_local_estoque_p bigint default null, nr_seq_lote_p bigint default null) FROM PUBLIC;
