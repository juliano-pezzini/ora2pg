-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION obter_saldo_disp_estoque_pck.get_qt_emprestimo ( cd_estabelecimento_p bigint, cd_material_p bigint, cd_local_estoque_p bigint default null, nr_seq_lote_p bigint default null) RETURNS bigint AS $body$
DECLARE


	qt_emprestimo_w				double precision	:= 0;
	cd_material_estoque_ww		material.cd_material%type;

	
BEGIN
	CALL CALL CALL CALL CALL CALL CALL CALL CALL obter_saldo_disp_estoque_pck.set_cd_estabelecimento(cd_estabelecimento_p);
	CALL obter_saldo_disp_estoque_pck.set_nr_seq_lote(nr_seq_lote_p);
	CALL obter_saldo_disp_estoque_pck.set_cd_material(cd_material_p);
	cd_material_estoque_ww		:=	obter_saldo_disp_estoque_pck.get_cd_material_estoque();

	if	((nr_seq_lote_p > 0) and (current_setting('obter_saldo_disp_estoque_pck.ie_estoque_lote_w')::material_estab.ie_estoque_lote%type = 'S')) then
		qt_emprestimo_w	:=	0;
	else
		begin
		if (cd_local_estoque_p > 0) then
			if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_emprestimo_lib_w')::parametro_estoque.ie_disp_emprestimo_lib%type = 'S') then
				begin
				if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_nf_emprestimo_w')::parametro_estoque.ie_disp_nf_emprestimo%type = 'N') then
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN  qt_material * -1  ELSE qt_material END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	c.cd_local_estoque	= cd_local_estoque_p
					and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						SELECT	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				else
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN (qt_material - coalesce(b.qt_nota_fiscal,0)) * -1  ELSE (qt_material - coalesce(b.qt_nota_fiscal,0)) END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	c.cd_local_estoque	= cd_local_estoque_p
					and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and 	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						SELECT	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				end if;
				end;
			else
				begin
				if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_nf_emprestimo_w')::parametro_estoque.ie_disp_nf_emprestimo%type = 'N') then
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN  qt_material * -1  ELSE qt_material END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	c.cd_local_estoque	= cd_local_estoque_p
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						SELECT	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				else
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN (qt_material - coalesce(b.qt_nota_fiscal,0)) * -1  ELSE (qt_material - coalesce(b.qt_nota_fiscal,0)) END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	c.cd_local_estoque	= cd_local_estoque_p
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						SELECT	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				end if;
				end;
			end if;
		else
			if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_emprestimo_lib_w')::parametro_estoque.ie_disp_emprestimo_lib%type = 'S') then
				begin
				if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_nf_emprestimo_w')::parametro_estoque.ie_disp_nf_emprestimo%type = 'N') then
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN  qt_material * -1  ELSE qt_material END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	exists (	SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = c.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p
						and	loc.ie_tipo_local = '2'
						
union all

						SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = c.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p
						and	loc.ie_baixa_disp = 'S')
					and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						select	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				else
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN (qt_material - coalesce(b.qt_nota_fiscal,0)) * -1  ELSE (qt_material - coalesce(b.qt_nota_fiscal,0)) END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	exists (	SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = c.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p
						and	loc.ie_tipo_local = '2'
						
union all

						SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = c.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p
						and	loc.ie_baixa_disp = 'S')
					and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and 	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						select	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				end if;
				end;
			else
				begin
				if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_nf_emprestimo_w')::parametro_estoque.ie_disp_nf_emprestimo%type = 'N') then
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN  qt_material * -1  ELSE qt_material END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	exists (	SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = c.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p)
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						SELECT	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				else
					select	coalesce(sum(CASE WHEN c.ie_tipo='S' THEN (qt_material - coalesce(b.qt_nota_fiscal,0)) * -1  ELSE (qt_material - coalesce(b.qt_nota_fiscal,0)) END ),0)
					into STRICT	qt_emprestimo_w
					from	emprestimo c,
						emprestimo_material b
					where	b.nr_emprestimo		= c.nr_emprestimo
					and	exists (	SELECT	1
						from	local_estoque loc
						where	loc.cd_local_estoque = c.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p)
					and	b.qt_material		> 0
					and	coalesce(b.ie_atualiza_estoque,'X') <> 'S'
					and	c.ie_situacao		<> 'I'
					and	((coalesce(c.ie_origem,'D') <> 'P') or ((c.dt_aprovacao IS NOT NULL AND c.dt_aprovacao::text <> '') and coalesce(c.dt_reprovacao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')))
					and	exists (
						SELECT	1
						from	material a
						where	a.cd_material_estoque	= cd_material_estoque_ww
						and	a.cd_material 		= b.cd_material);
				end if;
				end;
			end if;
		end if;
		end;
	end if;

	return qt_emprestimo_w;
	end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_disp_estoque_pck.get_qt_emprestimo ( cd_estabelecimento_p bigint, cd_material_p bigint, cd_local_estoque_p bigint default null, nr_seq_lote_p bigint default null) FROM PUBLIC;
