-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION obter_saldo_disp_estoque_pck.get_qt_ap_lote ( cd_estabelecimento_p bigint, cd_material_p bigint, cd_local_estoque_p bigint default null, nr_seq_lote_p bigint default null) RETURNS bigint AS $body$
DECLARE


	qt_mat_ap_lote_w		double precision	:= 0;
	cd_material_estoque_ww		material.cd_material%type;

	
BEGIN
	CALL CALL CALL CALL CALL CALL CALL CALL CALL obter_saldo_disp_estoque_pck.set_cd_estabelecimento(cd_estabelecimento_p);
	CALL obter_saldo_disp_estoque_pck.set_nr_seq_lote(nr_seq_lote_p);
	CALL obter_saldo_disp_estoque_pck.set_cd_material(cd_material_p);
	cd_material_estoque_ww		:=	obter_saldo_disp_estoque_pck.get_cd_material_estoque();

	if (current_setting('obter_saldo_disp_estoque_pck.ie_disp_ap_lote_w')::parametro_estoque.ie_disp_ap_lote%type = 'S') then
		if (cd_local_estoque_p > 0) then
			if	((nr_seq_lote_p > 0) and (current_setting('obter_saldo_disp_estoque_pck.ie_estoque_lote_w')::material_estab.ie_estoque_lote%type = 'S')) then
				select	coalesce(sum(b.qt_material),0)
				into STRICT	qt_mat_ap_lote_w
				from	ap_lote_item_consistido b,
					ap_lote a,
					prescr_medica c
				where	exists (SELECT	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material)
				and	b.nr_lote_fornec = nr_seq_lote_p
				and	b.cd_local_estoque = current_setting('obter_saldo_disp_estoque_pck.cd_local_estoque_w')::local_estoque.cd_local_estoque%type
				and	c.cd_estabelecimento = cd_estabelecimento_p
				and	a.ie_status_lote = 'CO'
				and	a.nr_sequencia = b.nr_lote_ap
				and	c.nr_prescricao = a.nr_prescricao;
			else
				select	coalesce(sum(b.qt_material),0)
				into STRICT	qt_mat_ap_lote_w
				from	ap_lote_item_consistido b,
					ap_lote a,
					prescr_medica c
				where	exists (	SELECT	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material)
				and	b.cd_local_estoque = current_setting('obter_saldo_disp_estoque_pck.cd_local_estoque_w')::local_estoque.cd_local_estoque%type
				and	c.cd_estabelecimento = cd_estabelecimento_p
				and	a.ie_status_lote = 'CO'
				and	a.nr_sequencia = b.nr_lote_ap
				and	c.nr_prescricao = a.nr_prescricao;
			end if;
		else
			if	((nr_seq_lote_p > 0) and (current_setting('obter_saldo_disp_estoque_pck.ie_estoque_lote_w')::material_estab.ie_estoque_lote%type = 'S')) then
				select	coalesce(sum(b.qt_material),0)
				into STRICT	qt_mat_ap_lote_w
				from	ap_lote_item_consistido b,
					ap_lote a,
					prescr_medica c
				where	exists (	SELECT	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material)
				and	exists (	select	1
						from	local_estoque loc
						where	loc.cd_local_estoque = b.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p)
				and	b.nr_lote_fornec = nr_seq_lote_p
				and	c.cd_estabelecimento = cd_estabelecimento_p
				and	a.ie_status_lote = 'CO'
				and	a.nr_sequencia = b.nr_lote_ap
				and	c.nr_prescricao = a.nr_prescricao;
			else
				select	coalesce(sum(b.qt_material),0)
				into STRICT	qt_mat_ap_lote_w
				from	ap_lote_item_consistido b,
					ap_lote a,
					prescr_medica c
				where	exists (	SELECT	1
						from	material x
						where	x.cd_material_estoque = cd_material_estoque_ww
						and	x.cd_material = b.cd_material)
				and	exists (	select	1
						from	local_estoque loc
						where	loc.cd_local_estoque = b.cd_local_estoque
						and	loc.cd_estabelecimento = cd_estabelecimento_p)
				and	c.cd_estabelecimento = cd_estabelecimento_p
				and	a.ie_status_lote = 'CO'
				and	a.nr_sequencia = b.nr_lote_ap
				and	c.nr_prescricao = a.nr_prescricao;
			end if;
		end if;



		qt_mat_ap_lote_w := dividir(coalesce(qt_mat_ap_lote_w,0),coalesce(current_setting('obter_saldo_disp_estoque_pck.qt_conv_estoque_w')::material.qt_conv_estoque_consumo%type,1));
	end if;
	return qt_mat_ap_lote_w;
	end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_saldo_disp_estoque_pck.get_qt_ap_lote ( cd_estabelecimento_p bigint, cd_material_p bigint, cd_local_estoque_p bigint default null, nr_seq_lote_p bigint default null) FROM PUBLIC;
