-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_regra_partic_pck.obter_tipo_regra_grupo ( nr_seq_regra_partic_p pls_oc_regra_participante.nr_sequencia%type) RETURNS SETOF T_TIPO_REGRA_GRUPO_DATA AS $body$
DECLARE


linha_w		t_tipo_regra_grupo_row;
qt_registro_w	integer;

c01 CURSOR(nr_seq_regra_partic_pc	pls_oc_regra_participante.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia nr_seq_grupo
	from	pls_oc_regra_participante a,
		pls_oc_regra_grupo_partic c
	where	a.nr_sequencia = nr_seq_regra_partic_pc
	and	a.ie_situacao = 'A'
	and	c.nr_seq_regra_partic = a.nr_sequencia;

BEGIN

-- busca todas as regras

for r_c01_w in c01(nr_seq_regra_partic_p) loop

	-- 1 prestador nulo e grau de participacao informado

	select  count(1)
	into STRICT	qt_registro_w
	from    pls_itens_regra_partic
	where   nr_seq_grupo_regra = r_c01_w.nr_seq_grupo
	and     coalesce(nr_seq_prestador::text, '') = ''
	and	coalesce(nr_seq_grupo_prestador::text, '') = ''
	and     (nr_seq_grau_partic IS NOT NULL AND nr_seq_grau_partic::text <> '');

	if (qt_registro_w > 0) then
		linha_w.nr_seq_grupo_regra	:= r_c01_w.nr_seq_grupo;
		linha_w.ie_tipo_regra_grupo	:= 1;

		RETURN NEXT linha_w;
	end if;

	-- 2 prestador informado e grau de participacao nulo

	select  count(1)
	into STRICT	qt_registro_w
	from    pls_itens_regra_partic
	where   nr_seq_grupo_regra = r_c01_w.nr_seq_grupo
	and ((nr_seq_prestador IS NOT NULL AND nr_seq_prestador::text <> '') or (nr_seq_grupo_prestador IS NOT NULL AND nr_seq_grupo_prestador::text <> ''))
	and     coalesce(nr_seq_grau_partic::text, '') = '';

	if (qt_registro_w > 0) then
		linha_w.nr_seq_grupo_regra	:= r_c01_w.nr_seq_grupo;
		linha_w.ie_tipo_regra_grupo	:= 2;

		RETURN NEXT linha_w;
	end if;

	-- 3 prestador informado e grau de participacao informado

	select  count(1)
	into STRICT	qt_registro_w
	from    pls_itens_regra_partic
	where   nr_seq_grupo_regra = r_c01_w.nr_seq_grupo
	and ((nr_seq_prestador IS NOT NULL AND nr_seq_prestador::text <> '') or (nr_seq_grupo_prestador IS NOT NULL AND nr_seq_grupo_prestador::text <> ''))
	and     (nr_seq_grau_partic IS NOT NULL AND nr_seq_grau_partic::text <> '');

	if (qt_registro_w > 0) then
		linha_w.nr_seq_grupo_regra	:= r_c01_w.nr_seq_grupo;
		linha_w.ie_tipo_regra_grupo	:= 3;

		RETURN NEXT linha_w;
	end if;
end loop;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_regra_partic_pck.obter_tipo_regra_grupo ( nr_seq_regra_partic_p pls_oc_regra_participante.nr_sequencia%type) FROM PUBLIC;
