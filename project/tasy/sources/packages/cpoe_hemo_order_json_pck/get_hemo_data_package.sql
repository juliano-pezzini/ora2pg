-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION cpoe_hemo_order_json_pck.get_hemo_data (nr_cpoe_hemo_p bigint) RETURNS PHILIPS_JSON_LIST AS $body$
DECLARE

	json_item_w		philips_json;
	json_item_list_w	philips_json_list;
	
	C01 CURSOR FOR
		SELECT
       NR_SEQUENCIA,
       IE_TIPO_HEMOTERAP, 
       CD_INTERVALO,
       IE_TIPO,
       adep_obter_desc_info_material(nr_sequencia, 'HM' )  desc_info_item,
       cpoe_obter_dt_suspensao(nr_sequencia,'N') dt_suspensao,
       obter_conv_envio('CID_DOENCA', 'CD_DOENCA_CID', CD_DOENCA_CID, 'E') code_red_value,
       obter_conv_envio('CID_DOENCA', 'CD_DOENCA_CID', CD_DOENCA_CID, 'S') code_red_system, 
       OBTER_DESC_CID(CD_DOENCA_CID) DESC_CID,
       Obter_Desc_Hemocomponente(NR_SEQ_DERIVADO) desc_Hemocomponente, 
       obter_conv_envio('SAN_DERIVADO', 'NR_SEQUENCIA', NR_SEQ_DERIVADO, 'E')    hem_code_value,
       obter_conv_envio('SAN_DERIVADO', 'NR_SEQUENCIA', NR_SEQ_DERIVADO, 'S')    hem_code_system, 
       obter_conv_envio('VIA_APLICACAO', 'IE_VIA_APLICACAO', IE_VIA_APLICACAO, 'S')  via_code_system,
       obter_conv_envio('VIA_APLICACAO', 'IE_VIA_APLICACAO', IE_VIA_APLICACAO, 'E')  via_code_vale, 
       Obter_Desc_via(IE_VIA_APLICACAO)   desc_via,
       obter_conv_envio('UNIDADE_MEDIDA', 'CD_UNIDADE_MEDIDA', 'ml', 'S')  unidade_medida_code_system,
       obter_conv_envio('UNIDADE_MEDIDA', 'CD_UNIDADE_MEDIDA', 'ml', 'E')  unidade_medida_code_value, 
       obter_desc_unidade_medida('ml')  unidade_medida_text,
       obter_conv_envio('UNIDADE_MEDIDA', 'CD_UNIDADE_MEDIDA', 'Min', 'S')  minute_code_system,
       obter_conv_envio('UNIDADE_MEDIDA', 'CD_UNIDADE_MEDIDA', 'Min', 'E')  minute_code_value,
       obter_minutos_hora(QT_HORA_MIN_INFUSAO)  MIN_QT_HORA_MIN_INFUSAO,
       obter_minutos_hora(QT_TEMPO_INF_ETAPA)   MIN_QT_TEMPO_INF_ETAPA,
       Obter_Desc_Proc_Interno(NR_SEQ_PROC_INTERNO) desc_procedimento, 
       obter_conv_envio('PROC_INTERNO', 'NR_SEQUENCIA', NR_SEQ_PROC_INTERNO, 'E')    proc_code_value,
       obter_conv_envio('PROC_INTERNO', 'NR_SEQUENCIA', NR_SEQ_PROC_INTERNO, 'S')    proc_code_system, 
       obter_conv_envio('INTERVALO_PRESCRICAO', 'CD_INTERVALO', CD_INTERVALO, 'E')  interval_code_vale, 
       QT_PROCEDIMENTO, 
       QT_VOL_HEMOCOMP, 
       QT_VOLUME_RETIRAR,
       QT_TEMPO_INF_ETAPA, 
       QT_HORA_MIN_INFUSAO, 
       /* list */

       IE_ALIQUOTADO, 
       IE_FILTRADO, 
       IE_IRRADIADO, 
       IE_LAVADO, 
       NR_SEQ_INDICACAO1, 
       QT_HEMOGLOBINA, 
       QT_HEMATOCRITO, 
       QT_PLAQUETA, 
       QT_TAP, 
       QT_TAP_INR,
       QT_TTPA, 
       QT_TTPA_REL, 
       QT_FIBRINOGENIO, 
       QT_ALBUMINA, 
       QT_CALCIO, 
       QT_MAGNESIO, 
       QT_BILIRRUBINA_DIR, 
       QT_BILIRRUBINA_IND,
       QT_HEMOGLOBINA_S, 
       QT_LEUCOCITOS, 
       Obter_Descricao_Dominio(4506,IE_COOMBS_DIRETO) DS_IE_COOMBS_DIRETO,
       DS_COAGULOPATIA, 
       CASE WHEN coalesce(DS_OBSERVACAO::text, '') = '' THEN ''  ELSE '. ' ||elimina_acentuacao(DS_OBSERVACAO) END  DS_OBSERVACAO,
       CASE WHEN coalesce(DS_JUSTIFICATIVA::text, '') = '' THEN ''  ELSE '. ' ||elimina_acentuacao(DS_JUSTIFICATIVA) END  DS_JUSTIFICATIVA, 
       /* end list */

       DT_PROGRAMADA, 
       DT_FIM, 
       DT_LIBERACAO           requested_date_time, 
       DT_LIB_SUSPENSAO  suspended_time, 
       cd_medico ordering_provider_id_number,
       obter_dados_pf(cd_medico,'PNG') ordering_provider_given_name,
       obter_dados_pf(cd_medico,'PNL') ordering_provider_last_name,
       obter_dados_pf(cd_medico,'PNM') ordering_provider_middle_name, 
       Obter_Pessoa_Fisica_Usuario(nm_usuario_susp,'C') ordering_prov_susp_id_number,
       substr(obter_nome_pf(cd_medico),1,80) nm_medico_solicitante,
       Obter_Pessoa_Fisica_Usuario(nm_usuario_nrec,'C') ordering_user_id_number,
       Obter_Pessoa_Fisica_Usuario(nm_usuario_susp,'C') order_prov_susp_id_number
from CPOE_HEMOTERAPIA
where NR_SEQUENCIA = nr_cpoe_hemo_p;

		
	
BEGIN
	json_item_list_w	:= philips_json_list();
	
	for r_c01 in c01 loop
		begin
		json_item_w		:= philips_json();

    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'nrSequencia', r_c01.NR_SEQUENCIA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'ieTipoHemoterap', r_c01.IE_TIPO_HEMOTERAP);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'cdIntervalo', r_c01.CD_INTERVALO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'nrSequencia', r_c01.NR_SEQUENCIA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dtSuspensao', r_c01.DT_SUSPENSAO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'codeRedValue', r_c01.CODE_RED_VALUE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'codeRedSystem', r_c01.CODE_RED_SYSTEM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'descCid', r_c01.DESC_CID);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'descHemocomponente', r_c01.DESC_HEMOCOMPONENTE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'hemCodeValue', r_c01.HEM_CODE_VALUE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'hemCodeSystem', r_c01.HEM_CODE_SYSTEM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'viaCodeSystem', r_c01.VIA_CODE_SYSTEM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'viaCodeVale', r_c01.VIA_CODE_VALE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'descVia', r_c01.DESC_VIA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'unidadeMedidaCodeSystem', r_c01.UNIDADE_MEDIDA_CODE_SYSTEM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'unidadeMedidaCodeValue', r_c01.UNIDADE_MEDIDA_CODE_VALUE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'unidadeMedidaText', r_c01.UNIDADE_MEDIDA_TEXT);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'minuteCodeSystem', r_c01.MINUTE_CODE_SYSTEM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'minuteCodeValue', r_c01.MINUTE_CODE_VALUE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'minQtHoraMinInfusao', r_c01.MIN_QT_HORA_MIN_INFUSAO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'minQtTempoInfEtapa', r_c01.MIN_QT_TEMPO_INF_ETAPA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'descProcedimento', r_c01.DESC_PROCEDIMENTO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'procCodeValue', r_c01.PROC_CODE_VALUE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'procCodeSystem', r_c01.PROC_CODE_SYSTEM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'intervalCodeVale', r_c01.INTERVAL_CODE_VALE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtProcedimento', r_c01.QT_PROCEDIMENTO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtVolHemocomp', r_c01.QT_VOL_HEMOCOMP);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtVolumeRetirar', r_c01.QT_VOLUME_RETIRAR);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtTempoInfEtapa', r_c01.QT_TEMPO_INF_ETAPA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtHoraMinInfusao', r_c01.QT_HORA_MIN_INFUSAO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'ieAliquotado', r_c01.IE_ALIQUOTADO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'ieFiltrado', r_c01.IE_FILTRADO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'ieIrradiado', r_c01.IE_IRRADIADO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'ieLavado', r_c01.IE_LAVADO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'nrSeqIndicacao1', r_c01.NR_SEQ_INDICACAO1);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtHemoglobina', r_c01.QT_HEMOGLOBINA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtHematocrito', r_c01.QT_HEMATOCRITO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtPlaqueta', r_c01.QT_PLAQUETA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtTap', r_c01.QT_TAP);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtTapInr', r_c01.QT_TAP_INR);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtTtpa', r_c01.QT_TTPA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtTtpaRel', r_c01.QT_TTPA_REL);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtFibrinogenio', r_c01.QT_FIBRINOGENIO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtAlbumina', r_c01.QT_ALBUMINA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtCalcio', r_c01.QT_CALCIO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtMagnesio', r_c01.QT_MAGNESIO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtBilirrubinaDir', r_c01.QT_BILIRRUBINA_DIR);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtBilirrubinaInd', r_c01.QT_BILIRRUBINA_IND);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtHemoglobinaS', r_c01.QT_HEMOGLOBINA_S);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'qtLeucocitos', r_c01.QT_LEUCOCITOS);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dsIeCoombsDireto', r_c01.DS_IE_COOMBS_DIRETO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dsCoagulopatia', r_c01.DS_COAGULOPATIA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dsObservacao', r_c01.DS_OBSERVACAO);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dsJustificativa', r_c01.DS_JUSTIFICATIVA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dtProgramada', r_c01.DT_PROGRAMADA);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'dtFim', r_c01.DT_FIM);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'requestedDateTime', r_c01.REQUESTED_DATE_TIME);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'suspendedTime', r_c01.SUSPENDED_TIME);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderingProviderIdNumber', r_c01.ORDERING_PROVIDER_ID_NUMBER);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderingProviderGivenName', r_c01.ORDERING_PROVIDER_GIVEN_NAME);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderingProviderLastName', r_c01.ORDERING_PROVIDER_LAST_NAME);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderingProviderMiddleName', r_c01.ORDERING_PROVIDER_MIDDLE_NAME);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderingProvSuspIdNumber', r_c01.ORDERING_PROV_SUSP_ID_NUMBER);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'nmMedicoSolicitante', r_c01.NM_MEDICO_SOLICITANTE);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderingUserIdNumber', r_c01.ORDERING_USER_ID_NUMBER);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'orderProvSuspIdNumber', r_c01.ORDER_PROV_SUSP_ID_NUMBER);
    json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'descInfoItem', cpoe_hemo_order_json_pck.escapehl7(r_c01.desc_info_item));

		if (r_c01.dt_fim IS NOT NULL AND r_c01.dt_fim::text <> '') then
				json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'numberOfDays', OBTER_DIAS_ENTRE_DATAS(r_c01.DT_PROGRAMADA, r_c01.dt_fim));
		end if;
		
		if (r_c01.ie_tipo in ('4', '3')) then
      json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'priority', 'S');
    else
      json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'priority', 'R');
    end if;

    if (r_c01.MIN_QT_TEMPO_INF_ETAPA IS NOT NULL AND r_c01.MIN_QT_TEMPO_INF_ETAPA::text <> '') then
      json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'occurrenceDurationId', r_c01.minute_code_value || r_c01.min_qt_tempo_inf_etapa);
      json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'occurrenceDurationCodeSystem', r_c01.minute_code_value);
    end if;

		json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'effectiveDate', coalesce(r_c01.suspended_time, r_c01.requested_date_time));
		json_item_w := cpoe_hemo_order_json_pck.add_json_value(json_item_w, 'enteredBy', coalesce(r_c01.order_prov_susp_id_number, r_c01.ordering_user_id_number));
		
		
		json_item_list_w.append(json_item_w.to_json_value());
		end;
	end loop;
	
	return json_item_list_w;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION cpoe_hemo_order_json_pck.get_hemo_data (nr_cpoe_hemo_p bigint) FROM PUBLIC;
