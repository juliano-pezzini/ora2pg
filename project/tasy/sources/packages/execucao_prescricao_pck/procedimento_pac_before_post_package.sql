-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE execucao_prescricao_pck.procedimento_pac_before_post ( nr_atendimento_p INOUT bigint, nr_prescricao_p INOUT bigint, nr_sequencia_prescricao_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, ie_acao_executada_p INOUT bigint, ie_auditoria_p INOUT text, dt_procedimento_p INOUT timestamp, dt_entrada_unidade_p INOUT timestamp, nr_seq_atepacu_p INOUT bigint, tx_procedimento_p INOUT bigint, qt_procedimento_p INOUT bigint, nr_seq_proc_princ_p INOUT bigint, cd_procedimento_princ_p INOUT bigint, nr_sequencia_p INOUT bigint, cd_medico_executor_p INOUT text, ie_funcao_medico_p INOUT text, cd_especialidade_p INOUT text, nr_interno_conta_p INOUT bigint, cd_atividade_prof_bpa_p INOUT text, ie_tipo_atend_bpa_p INOUT text, ie_grupo_atend_bpa_p INOUT text, cd_pessoa_fisica_p INOUT text, nr_seq_exame_p INOUT bigint, nr_seq_proc_interno_p INOUT bigint, cd_setor_atendimento_p INOUT bigint, nr_seq_grupo_rec_p INOUT bigint, nr_seq_cor_exec_p INOUT bigint, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, ie_valor_informado_p INOUT text, cd_motivo_exc_conta_p INOUT bigint, ds_compl_motivo_excon_p INOUT text, nr_minuto_duracao_p INOUT bigint, nr_doc_convenio_p INOUT text, ie_tipo_atendimento_p INOUT bigint, nr_seq_classificacao_p INOUT bigint, ie_via_acesso_p INOUT text, cd_plano_convenio_p INOUT text, dt_entrada_p INOUT timestamp, dt_alta_p INOUT timestamp, dt_conta_p INOUT timestamp, ie_forma_apresentacao_p INOUT bigint, dt_inicio_procedimento_p INOUT timestamp, cd_unidade_medida_p INOUT text, ds_proc_convenio_p INOUT text, ds_proc_interno_conv_p INOUT text, cd_cgc_prestador_p INOUT text, cd_kit_material_p INOUT bigint, cd_funcao_medico_p INOUT text, nr_seq_agenda_p INOUT bigint, ie_tipo_servico_sus_p INOUT text, ie_tipo_ato_sus_p INOUT text, cd_local_estoque_p INOUT bigint, ie_atualiza_estoque_p text, cd_medico_barras_p text, ie_classificacao_p text, cd_medico_resp_p text, ie_ajustar_wdlg_p text, ie_funcao_med_enabled_p text, ie_medico_exe_enabled_p text, ie_visivel_min_duracao_p text, ie_barras_p text, cd_equipamento_p bigint, nr_cirurgia_p bigint, dt_entrada_unid_atend_p timestamp, nr_seq_atepacu_atend_p bigint, ie_proc_prescrito_p text, varie_autitoria_p text, ie_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

											
	dt_entrada_unid_cir_w	timestamp;
	cd_setor_atend_cir_w	setor_atendimento.cd_setor_atendimento%type;
	nr_atend_conta_w		atendimento_paciente.nr_atendimento%type;
	ie_consiste_autor_exec_w	parametro_faturamento.ie_consiste_autor_exec%type;
	current_setting('execucao_prescricao_pck.cd_convenio_w')::convenio.cd_convenio%type			atend_categoria_convenio.cd_convenio%type;
	current_setting('execucao_prescricao_pck.cd_plano_convenio_w')::atend_categoria_convenio.cd_plano_convenio%type		atend_categoria_convenio.cd_plano_convenio%type;
	current_setting('execucao_prescricao_pck.ie_tipo_atendimento_w')::atendimento_paciente.ie_tipo_atendimento%type	atendimento_paciente.ie_tipo_atendimento%type;
	current_setting('execucao_prescricao_pck.cd_categoria_w')::categoria_convenio.cd_categoria%type			atend_categoria_convenio.cd_categoria%type;
	ie_glosa_w				varchar(2);
	current_setting('execucao_prescricao_pck.nr_seq_regra_w')::bigint			bigint;
	nr_seq_regra_ajuste_w	bigint;
	ie_autorizacao_w		prescr_procedimento.ie_autorizacao%type;
	nm_usuario_audit_w		usuario.nm_usuario%type;
	ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
	nr_seq_proc_w			procedimento_paciente.nr_sequencia%type;
	nr_interno_conta_w		procedimento_paciente.nr_interno_conta%type;
	ds_consiste_regra_w		varchar(255);
	
	
BEGIN
	
	obter_param_usuario(24, 221, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_alterar_item_aud_w')::varchar(1));
	obter_param_usuario(24, 159, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.qt_tempo_limite_w')::bigint);
	obter_param_usuario(24, 272, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_somente_mesmo_mes_w')::varchar(1));
	obter_param_usuario(24, 6, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.qt_parametro_6_w')::bigint);
	obter_param_usuario(24, 144, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_consiste_glosa_particular_w')::varchar(1));
	obter_param_usuario(24, 217, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ds_mensagem_parametro_w')::varchar(255));
	obter_param_usuario(67, 139, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_139_w')::varchar(1));
	obter_param_usuario(24, 149, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_msg_glosa_exclusao_w')::varchar(1));
	obter_param_usuario(24, 151, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_151_w')::varchar(1));
	obter_param_usuario(24, 169, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_169_w')::varchar(1));
	obter_param_usuario(24, 173, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_173_w')::varchar(1));
	obter_param_usuario(24, 283, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_283_w')::varchar(1));
	obter_param_usuario(24, 267, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_exige_guia_w')::varchar(1));
	obter_param_usuario(24, 19, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_19_w')::varchar(1));
	obter_param_usuario(24, 100, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_100_w')::varchar(1));
	obter_param_usuario(24, 140, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_140_w')::varchar(1));
	obter_param_usuario(24, 120, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_120_w')::varchar(1));
	obter_param_usuario(24, 47, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_47_w')::varchar(1));
	obter_param_usuario(24, 185, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.qt_parametro_185_w')::bigint);
	obter_param_usuario(24, 207, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_207_w')::varchar(1));
	

	
	SELECT * FROM execucao_prescricao_pck.atrib_focus_lost_cd_proced(	nr_atendimento_p, nr_prescricao_p, nr_sequencia_prescricao_p, cd_procedimento_p, ie_origem_proced_p, ie_acao_executada_p, ie_auditoria_p, dt_procedimento_p, dt_entrada_unidade_p, nr_seq_atepacu_p, tx_procedimento_p, qt_procedimento_p, nr_seq_proc_princ_p, cd_procedimento_princ_p, nr_sequencia_p, cd_medico_executor_p, ie_funcao_medico_p, cd_especialidade_p, nr_interno_conta_p, cd_atividade_prof_bpa_p, ie_tipo_atend_bpa_p, ie_grupo_atend_bpa_p, cd_pessoa_fisica_p, nr_seq_exame_p, nr_seq_proc_interno_p, cd_setor_atendimento_p, nr_seq_grupo_rec_p, nr_seq_cor_exec_p, cd_convenio_p, cd_categoria_p, ie_valor_informado_p, cd_motivo_exc_conta_p, ds_compl_motivo_excon_p, nr_minuto_duracao_p, nr_doc_convenio_p, ie_tipo_atendimento_p, nr_seq_classificacao_p, ie_via_acesso_p, cd_plano_convenio_p, dt_entrada_p, dt_alta_p, dt_conta_p, ie_forma_apresentacao_p, dt_inicio_procedimento_p, cd_unidade_medida_p, ds_proc_convenio_p, ds_proc_interno_conv_p, cd_cgc_prestador_p, cd_kit_material_p, cd_funcao_medico_p, nr_seq_agenda_p, ie_tipo_servico_sus_p, ie_tipo_ato_sus_p, ie_classificacao_p, cd_medico_resp_p, ie_ajustar_wdlg_p, ie_funcao_med_enabled_p, ie_medico_exe_enabled_p, ie_visivel_min_duracao_p, ie_barras_p, cd_equipamento_p, nr_cirurgia_p, dt_entrada_unid_atend_p, nr_seq_atepacu_atend_p, ie_proc_prescrito_p, varie_autitoria_p, ie_erro_p, nm_usuario_p) INTO STRICT 	nr_atendimento_p, nr_prescricao_p, nr_sequencia_prescricao_p, cd_procedimento_p, ie_origem_proced_p, ie_acao_executada_p, ie_auditoria_p, dt_procedimento_p, dt_entrada_unidade_p, nr_seq_atepacu_p, tx_procedimento_p, qt_procedimento_p, nr_seq_proc_princ_p, cd_procedimento_princ_p, nr_sequencia_p, cd_medico_executor_p, ie_funcao_medico_p, cd_especialidade_p, nr_interno_conta_p, cd_atividade_prof_bpa_p, ie_tipo_atend_bpa_p, ie_grupo_atend_bpa_p, cd_pessoa_fisica_p, nr_seq_exame_p, nr_seq_proc_interno_p, cd_setor_atendimento_p, nr_seq_grupo_rec_p, nr_seq_cor_exec_p, cd_convenio_p, cd_categoria_p, ie_valor_informado_p, cd_motivo_exc_conta_p, ds_compl_motivo_excon_p, nr_minuto_duracao_p, nr_doc_convenio_p, ie_tipo_atendimento_p, nr_seq_classificacao_p, ie_via_acesso_p, cd_plano_convenio_p, dt_entrada_p, dt_alta_p, dt_conta_p, ie_forma_apresentacao_p, dt_inicio_procedimento_p, cd_unidade_medida_p, ds_proc_convenio_p, ds_proc_interno_conv_p, cd_cgc_prestador_p, cd_kit_material_p, cd_funcao_medico_p, nr_seq_agenda_p, ie_tipo_servico_sus_p, ie_tipo_ato_sus_p, ie_erro_p;	

	if (ie_erro_p = 'S') then
		goto Final;
	end if;

	ie_erro_p := execucao_prescricao_pck.consiste_medico(
			nr_atendimento_p, cd_convenio_p, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, nr_seq_proc_interno_p, dt_procedimento_p, nr_seq_classificacao_p, ie_acao_executada_p, ie_funcao_medico_p, ie_funcao_med_enabled_p, ie_medico_exe_enabled_p, cd_medico_executor_p, nm_usuario_p, ie_erro_p);
	
	if (ie_erro_p = 'S') then
		goto Final;
	end if;
			
	if (current_setting('execucao_prescricao_pck.ie_parametro_100_w')::varchar(1) = 'S') and (cd_procedimento_p > 0) then
		nr_seq_proc_w := 0;
		if (ie_acao_executada_p = 2) then
			nr_seq_proc_w := nr_sequencia_p;
		end if;
		select	coalesce(max(nr_interno_conta),0)
		into STRICT	nr_interno_conta_w
		from	conta_paciente
		where	nr_atendimento = nr_atendimento_p
		and	ie_status_acerto = 1;
	
		ds_consiste_regra_w := obter_se_uso_qtde_proc(
											nr_atendimento_p,
											cd_procedimento_p, 
											ie_origem_proced_p, 
											qt_procedimento_p,
											cd_medico_executor_p, 
											cd_setor_atendimento_p, 
											dt_procedimento_p, 3, 
											nr_seq_proc_w, 
											ie_via_acesso_p, 
											nr_interno_conta_w, 
											nr_seq_proc_interno_p, 
											cd_categoria_p, 
											cd_plano_convenio_p, 
											nr_seq_exame_p);

		if (ds_consiste_regra_w IS NOT NULL AND ds_consiste_regra_w::text <> '') then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, ds_consiste_regra_w, null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;
		end if;
	end if;
	
	---------------dtProcedimentoOnFocusLost-----

	
	ie_erro_p := execucao_prescricao_pck.valida_data_proc(
				nr_atendimento_p, cd_procedimento_p, ie_origem_proced_p, dt_procedimento_p, dt_entrada_p, dt_entrada_unidade_p, dt_alta_p, nm_usuario_p, ie_erro_p);

	if (ie_erro_p = 'N') then
		dt_conta_p := dt_procedimento_p;
		if (dt_inicio_procedimento_p IS NOT NULL AND dt_inicio_procedimento_p::text <> '') then
			if (ie_forma_apresentacao_p = 2) then
				qt_procedimento_p := (((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440) + 1);
				nr_minuto_duracao_p := ((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440);
			elsif (ie_forma_apresentacao_p = 3) then
				qt_procedimento_p := (((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440) / 60);
				if	(((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440) > 0) then
					qt_procedimento_p := (((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440) / 60) + 1;
				end if;
			elsif (ie_forma_apresentacao_p = 8) then
				dt_conta_p := dt_inicio_procedimento_p;			
			elsif (ie_forma_apresentacao_p = 10) then
				qt_procedimento_p := (((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440) / 30);
			elsif (ie_forma_apresentacao_p = 16) then
				qt_procedimento_p := (((to_date(dt_procedimento_p,'dd/mm/yyyy hh24:mi:ss') - to_date(dt_inicio_procedimento_p,'dd/mm/yyyy hh24:mi:ss')) *1440) / 60);
			end if;
		end if;
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_140_w')::varchar(1) = 'S') and (dt_procedimento_p IS NOT NULL AND dt_procedimento_p::text <> '') and ((to_char(dt_procedimento_p, 'hh24'))::numeric  = 0) and ((to_char(dt_procedimento_p, 'mi'))::numeric  = 0) and ((to_char(dt_procedimento_p, 'ss'))::numeric  = 0) then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(219228), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;
		end if;		
	else
		goto Final;
	end if;
	
	---------------FIM dtProcedimentoOnFocusLost-----

	
	---------------atribFocusLostQtProcedimento------

	
	if (ie_acao_executada_p in (1,2)) and (qt_procedimento_p = 0) and (current_setting('execucao_prescricao_pck.ie_parametro_120_w')::varchar(1) <> 'S') then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(176806), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
			/*if (!validaData(procedimentoPacienteWDBP.getValorAsDate("DT_PROCEDIMENTO"))) {
						UGeneric.abort();
						
				Essa parte ja foi chamada acima na valida_data_proc.
				
					}*/

	
	if (current_setting('execucao_prescricao_pck.ie_parametro_47_w')::varchar(1) in ('N', 'A')) and (ie_ajustar_wdlg_p = 'N') and (qt_procedimento_p IS NOT NULL AND qt_procedimento_p::text <> '') and (qt_procedimento_p < 0) then ---o metodo consisteQtdeProcedimento foi realizado acima
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(176872), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
					
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_207_w')::varchar(1) in ('A', 'P')) and (current_setting('execucao_prescricao_pck.qt_parametro_185_w')::bigint > 0) and (qt_procedimento_p > current_setting('execucao_prescricao_pck.qt_parametro_185_w')::bigint) then
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(237355), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
	end if;
	
	---------------FIM atribFocusLostQtProcedimento------

	
	----------------INICIO atribFocusLostCdProcedimento----------------

			
	----------------FIM atribFocusLostCdProcedimento----------------

		
	if (ie_proc_prescrito_p = 'S') then
		select	count(1)
		into STRICT	current_setting('execucao_prescricao_pck.qt_existe_w')::bigint
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia  = nr_sequencia_prescricao_p
		and	coalesce(dt_baixa::text, '') = ''
		and	cd_motivo_baixa  = 0;
		
		if (current_setting('execucao_prescricao_pck.qt_existe_w')::bigint = 0) then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(1053140), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;
		end if;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_alterar_item_aud_w')::varchar(1) = 'N') and (ie_acao_executada_p = 2) and (ie_auditoria_p in ('S', 'A')) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(176319), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'221;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	if (coalesce(current_setting('execucao_prescricao_pck.qt_tempo_limite_w')::bigint, 0) > 0) and (dt_procedimento_p IS NOT NULL AND dt_procedimento_p::text <> '') and
		(dt_procedimento_p <= (clock_timestamp() - coalesce(current_setting('execucao_prescricao_pck.qt_tempo_limite_w')::bigint, 0))) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(176331), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'159;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_somente_mesmo_mes_w')::varchar(1) = 'S') and (dt_procedimento_p IS NOT NULL AND dt_procedimento_p::text <> '') and (trunc(to_date(dt_procedimento_p, 'dd/mm/yyyy hh24:mi:ss'), 'month') <> trunc(clock_timestamp(), 'month')) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(180046), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'272;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	if (coalesce(dt_entrada_unidade_p::text, '') = '') then
		dt_entrada_unidade_p := dt_entrada_unid_atend_p;
		nr_seq_atepacu_p	:= nr_seq_atepacu_atend_p;
	end if;
	
	if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
		select	max(dt_entrada_unidade),
			max(cd_setor_atendimento)
		into STRICT	dt_entrada_unid_cir_w,
			cd_setor_atend_cir_w
		from	cirurgia
		where	nr_cirurgia = nr_cirurgia_p;
		
		if (dt_entrada_unid_cir_w IS NOT NULL AND dt_entrada_unid_cir_w::text <> '') and (dt_entrada_unid_cir_w <> dt_entrada_unidade_p) then
			dt_entrada_unidade_p := dt_entrada_unid_cir_w;
			select	/*+ index (A ATEPACU_I2) */
				max(a.nr_seq_interno)
			into STRICT	nr_seq_atepacu_p
			from	atend_paciente_unidade a
			where	a.nr_atendimento = nr_atendimento_p
			and	a.cd_setor_atendimento = cd_setor_atend_cir_w
			and	a.dt_entrada_unidade   = dt_entrada_unid_cir_w;
		end if;
	end if;
	
	if (tx_procedimento_p > 999) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(176453), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	if (qt_procedimento_p > current_setting('execucao_prescricao_pck.qt_parametro_6_w')::bigint) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(176457), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'6;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;	
	end if;
	
	if (ie_acao_executada_p in (1,2)) and (nr_seq_proc_princ_p IS NOT NULL AND nr_seq_proc_princ_p::text <> '') and (coalesce(cd_procedimento_princ_p::text, '') = '') then
		select	max(cd_procedimento)
		into STRICT	cd_procedimento_princ_p
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_p;
	end if;
	
	if (coalesce(cd_medico_executor_p::text, '') = '') then
		ie_funcao_medico_p := null;
	end if;
	
	if (coalesce(cd_especialidade_p::text, '') = '') then
		cd_especialidade_p := obter_especialidade_medico(cd_medico_executor_p, 'C');
	end if;
	
	if (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') and (nr_interno_conta_p > 0) then
		
		select	max(nr_atendimento)
		into STRICT	nr_atend_conta_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_p;
		
		if (nr_atend_conta_w > 0) and (nr_atend_conta_w <> nr_atendimento_p) then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177087), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;	
		end if;
	end if;
	
	if (cd_atividade_prof_bpa_p IS NOT NULL AND cd_atividade_prof_bpa_p::text <> '') then
		select	max(ie_tipo_atend_bpa),
			max(ie_grupo_atend_bpa)
		into STRICT	ie_tipo_atend_bpa_p,
			ie_grupo_atend_bpa_p
		from	sus_atividade_prof_proc
		where	cd_procedimento = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_p
		and	cd_atividade_profissional = cd_atividade_prof_bpa_p;
	end if;
	
	select	coalesce(max(ie_consiste_autor_exec), 'N')
	into STRICT	ie_consiste_autor_exec_w
	from	parametro_faturamento
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
	
	if (ie_consiste_autor_exec_w = 'S') and (nr_sequencia_prescricao_p IS NOT NULL AND nr_sequencia_prescricao_p::text <> '') then
		
		select	max(a.cd_convenio),
			max(a.cd_plano_convenio),
			max(b.ie_tipo_atendimento),
			max(a.cd_categoria)
		into STRICT	current_setting('execucao_prescricao_pck.cd_convenio_w')::convenio.cd_convenio%type,
			current_setting('execucao_prescricao_pck.cd_plano_convenio_w')::atend_categoria_convenio.cd_plano_convenio%type,
			current_setting('execucao_prescricao_pck.ie_tipo_atendimento_w')::atendimento_paciente.ie_tipo_atendimento%type,
			current_setting('execucao_prescricao_pck.cd_categoria_w')::categoria_convenio.cd_categoria%type
		from	atendimento_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento  = b.nr_atendimento
		and	a.nr_atendimento  = nr_atendimento_p
        and	obter_atecaco_atendimento(a.nr_atendimento) = a.nr_seq_interno;
		
		if (current_setting('execucao_prescricao_pck.cd_convenio_w')::convenio.cd_convenio%(type IS NOT NULL AND type::text <> '')) then
			begin
			consiste_plano_convenio(
							nr_atendimento_p,
							current_setting('execucao_prescricao_pck.cd_convenio_w')::convenio.cd_convenio%type,
							cd_procedimento_p,
							ie_origem_proced_p,
							dt_procedimento_p,
							qt_procedimento_p,
							current_setting('execucao_prescricao_pck.ie_tipo_atendimento_w')::atendimento_paciente.ie_tipo_atendimento%type,
							current_setting('execucao_prescricao_pck.cd_plano_convenio_w')::atend_categoria_convenio.cd_plano_convenio%type,
							null,
							current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000),
							cd_setor_atendimento_p,
							nr_seq_exame_p,
							current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10),
							null,
							current_setting('execucao_prescricao_pck.nr_seq_regra_w')::bigint,
							nr_seq_proc_interno_p,
							current_setting('execucao_prescricao_pck.cd_categoria_w')::categoria_convenio.cd_categoria%type,
							wheb_usuario_pck.get_cd_estabelecimento,
							null,
							null,
							null,
							ie_glosa_w,
							nr_seq_regra_ajuste_w,
							nr_prescricao_p,
							nr_sequencia_prescricao_p);
			exception
			when others then
				null;
			end;
			
			if (current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10) = '7') and (current_setting('execucao_prescricao_pck.ds_erro_w')::(varchar(2000) IS NOT NULL AND (varchar(2000))::text <> '')) then
				select	max(ie_autorizacao)
				into STRICT	ie_autorizacao_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and	nr_sequencia = nr_sequencia_prescricao_p;
				
				if (ie_autorizacao_w not in ('A', 'B')) then
					ie_erro_p := 'S';
					CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177172), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
					goto Final;	
				end if;
			end if;
		end if;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_consiste_glosa_particular_w')::varchar(1) = 'S') then
		SELECT * FROM execucao_prescricao_pck.obter_glosa_mat_proc(	'P', nr_atendimento_p, current_setting('execucao_prescricao_pck.ie_tipo_atendimento_w')::atendimento_paciente.ie_tipo_atendimento%type, null, dt_procedimento_p, cd_procedimento_p, ie_origem_proced_p, qt_procedimento_p, nr_seq_exame_p, nr_seq_proc_interno_p, nr_seq_grupo_rec_p, nr_sequencia_p, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.ds_sem_ret_proc_w')::varchar(255), current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.ie_glosa_out_w')::varchar(10)) INTO STRICT current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.ds_sem_ret_proc_w')::varchar(255), current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.ie_glosa_out_w')::varchar(10);
								
		if (current_setting('execucao_prescricao_pck.ie_glosa_out_w')::(varchar(10) IS NOT NULL AND (varchar(10))::text <> '')) and (current_setting('execucao_prescricao_pck.ie_glosa_out_w')::varchar(10) in ('G', 'T', 'D', 'F')) then
			if (current_setting('execucao_prescricao_pck.ds_mensagem_parametro_w')::(varchar(255) IS NOT NULL AND (varchar(255))::text <> '')) then
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(183149, 'DS_MSG='|| current_setting('execucao_prescricao_pck.ds_mensagem_parametro_w')::varchar(255)), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'144/217;DS_REGRA='||''), 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			else
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(181853), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'144;DS_REGRA='||''), 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			end if;
			
			nr_seq_cor_exec_p := 95;
			
		end if;

	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_139_w')::varchar(1) = 'N') and (ie_acao_executada_p = 1) then
		
		select	count(1)
		into STRICT	current_setting('execucao_prescricao_pck.qt_existe_w')::bigint
		from	auditoria_conta_paciente a
		where	nr_atendimento = nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	dt_procedimento_p between dt_periodo_inicial and dt_periodo_final;
		
		select	max(nm_usuario)
		into STRICT	nm_usuario_audit_w
		from	auditoria_conta_paciente
		where	nr_atendimento = nr_atendimento_p
		and	coalesce(dt_liberacao::text, '') = ''
		and	dt_procedimento_p between dt_periodo_inicial and dt_periodo_final;
		
		if (current_setting('execucao_prescricao_pck.qt_existe_w')::bigint > 0) or
			(nm_usuario_audit_w IS NOT NULL AND nm_usuario_audit_w::text <> '' AND nm_usuario_audit_w <> nm_usuario_p) then
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177275), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'139;DS_REGRA='||''), 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		end if;

	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_msg_glosa_exclusao_w')::varchar(1) = 'S') then
		SELECT * FROM execucao_prescricao_pck.obter_glosa_mat_proc(	'P', nr_atendimento_p, current_setting('execucao_prescricao_pck.ie_tipo_atendimento_w')::atendimento_paciente.ie_tipo_atendimento%type, null, dt_procedimento_p, cd_procedimento_p, ie_origem_proced_p, qt_procedimento_p, nr_seq_exame_p, nr_seq_proc_interno_p, nr_seq_grupo_rec_p, nr_sequencia_p, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.ds_sem_ret_proc_w')::varchar(255), current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.cd_motivo_exc_out_w')::bigint, current_setting('execucao_prescricao_pck.ie_glosa_out_w')::varchar(10)) INTO STRICT current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.ds_sem_ret_proc_w')::varchar(255), current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, current_setting('execucao_prescricao_pck.cd_motivo_exc_out_w')::bigint, current_setting('execucao_prescricao_pck.ie_glosa_out_w')::varchar(10);
								
		if (current_setting('execucao_prescricao_pck.ie_glosa_out_w')::varchar(10) = 'E') and (current_setting('execucao_prescricao_pck.cd_motivo_exc_out_w')::(bigint IS NOT NULL AND bigint::text <> '')) then
			
			select	max(ds_motivo_exc_conta)
			into STRICT	current_setting('execucao_prescricao_pck.ds_motivo_exc_conta_w')::motivo_exc_conta.ds_motivo_exc_conta%type
			from	motivo_exc_conta
			where	cd_motivo_exc_conta = current_setting('execucao_prescricao_pck.cd_motivo_exc_out_w')::bigint;
			
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(181871, 'DS_MOTIVO='||current_setting('execucao_prescricao_pck.ds_motivo_exc_conta_w')::motivo_exc_conta.ds_motivo_exc_conta%type), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			
		end if;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_151_w')::varchar(1) <> 'N') then
		
		select	max(a.cd_convenio),
			max(a.cd_plano_convenio),
			max(b.ie_tipo_atendimento),
			max(a.cd_categoria)
		into STRICT	current_setting('execucao_prescricao_pck.cd_convenio_w')::convenio.cd_convenio%type,
			current_setting('execucao_prescricao_pck.cd_plano_convenio_w')::atend_categoria_convenio.cd_plano_convenio%type,
			current_setting('execucao_prescricao_pck.ie_tipo_atendimento_w')::atendimento_paciente.ie_tipo_atendimento%type,
			current_setting('execucao_prescricao_pck.cd_categoria_w')::categoria_convenio.cd_categoria%type
		from	atendimento_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento  = b.nr_atendimento
		and	a.nr_atendimento  = nr_atendimento_p
        and	obter_atecaco_atendimento(a.nr_atendimento) = a.nr_seq_interno;
		
		obter_regra_qtde_proc_exec(	nr_atendimento_p,
									cd_procedimento_p,
									ie_origem_proced_p,
									qt_procedimento_p,
									dt_procedimento_p,
									cd_medico_executor_p,
									current_setting('execucao_prescricao_pck.ie_acao_excesso_w')::varchar(5),
									current_setting('execucao_prescricao_pck.qt_excedida_w')::double,
									current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000),
									current_setting('execucao_prescricao_pck.cd_convenio_excesso_w')::atend_categoria_convenio.cd_convenio%type,
									current_setting('execucao_prescricao_pck.cd_categoria_excesso_w')::categoria_convenio.cd_categoria%type,
									nr_seq_proc_interno_p,
									current_setting('execucao_prescricao_pck.cd_categoria_w')::categoria_convenio.cd_categoria%type,
									current_setting('execucao_prescricao_pck.cd_plano_convenio_w')::atend_categoria_convenio.cd_plano_convenio%type,
									null,
									null,
									nr_seq_exame_p,
									cd_setor_atendimento_p,
									nr_sequencia_p);
		
		if (current_setting('execucao_prescricao_pck.ie_acao_excesso_w')::varchar(5) = 'P') then
			if (current_setting('execucao_prescricao_pck.qt_excedida_w')::double >= qt_procedimento_p) then
				nr_interno_conta_p := null;

				obter_convenio_particular_pf(
								wheb_usuario_pck.get_cd_estabelecimento,
								cd_convenio_p,
								null,
								dt_procedimento_p,
								cd_convenio_p,
								cd_categoria_p);
								
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177347, 'ERRO='|| current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000)), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);		
				
			else
				
				qt_procedimento_p := qt_procedimento_p - current_setting('execucao_prescricao_pck.qt_excedida_w')::double;
				
				obter_convenio_particular_pf(
								wheb_usuario_pck.get_cd_estabelecimento,
								cd_convenio_p,
								null,
								dt_procedimento_p,
								cd_convenio_p,
								cd_categoria_p);
								
				inserir_procedimento_paciente(
								cd_procedimento_p,
								current_setting('execucao_prescricao_pck.qt_excedida_w')::double,
								nr_seq_exame_p,
								nr_seq_proc_interno_p,
								ie_origem_proced_p,
								cd_setor_atendimento_p,
								nr_atendimento_p,
								wheb_usuario_pck.get_cd_estabelecimento,
								nm_usuario_p,
								null,
								null,
								null,
								nr_seq_atepacu_p,
								dt_procedimento_p,
								cd_convenio_p,
								cd_categoria_p,
								current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint,
								null,
								null);

				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177347, 'ERRO='|| current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000)), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);

			end if;

		elsif (current_setting('execucao_prescricao_pck.ie_acao_excesso_w')::varchar(5) = 'Z') then
		
			if (current_setting('execucao_prescricao_pck.qt_excedida_w')::double >= qt_procedimento_p) then
				ie_valor_informado_p := 'S';
			else
				qt_procedimento_p := qt_procedimento_p - current_setting('execucao_prescricao_pck.qt_excedida_w')::double;
				
				inserir_procedimento_paciente(
								cd_procedimento_p,
								current_setting('execucao_prescricao_pck.qt_excedida_w')::double,
								nr_seq_exame_p,
								nr_seq_proc_interno_p,
								ie_origem_proced_p,
								cd_setor_atendimento_p,
								nr_atendimento_p,
								wheb_usuario_pck.get_cd_estabelecimento,
								nm_usuario_p,
								null,
								'S',
								null,
								nr_seq_atepacu_p,
								dt_procedimento_p,
								cd_convenio_p,
								cd_categoria_p,
								current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint,
								null,
								null);				
			end if;
			
		elsif (current_setting('execucao_prescricao_pck.ie_acao_excesso_w')::varchar(5) = 'C') and (current_setting('execucao_prescricao_pck.cd_convenio_excesso_w')::atend_categoria_convenio.cd_convenio%(type IS NOT NULL AND type::text <> '')) and (current_setting('execucao_prescricao_pck.cd_categoria_excesso_w')::categoria_convenio.cd_categoria%(type IS NOT NULL AND type::text <> '')) then
			
			if (current_setting('execucao_prescricao_pck.qt_excedida_w')::double >= qt_procedimento_p) then
				nr_interno_conta_p := null;
				cd_convenio_p := current_setting('execucao_prescricao_pck.cd_convenio_excesso_w')::atend_categoria_convenio.cd_convenio%type;
				cd_categoria_p := current_setting('execucao_prescricao_pck.cd_categoria_excesso_w')::categoria_convenio.cd_categoria%type;
			end if;
			/*
		elsif	(ie_acao_excesso_w = 'J') then
			else
			  if (ie_acao_regra = 'J') then
				 begin
				 if (Uvar.Varcd_funcao_ativa = 24) then
					begin
					Messagedlg(ds_erro+' Quantidade Excedida = '+FloatToStr(qt_excedida),MtInformation,[mbok],0);
					{$IFDEF TASY} {$IFNDEF W98}
					AtePac_f6.selecao_justificativaProc_ep;
					AtePac_f6.varMostrarDlg := False;
					DataSet.FieldByName('ds_observacao').AsString:= Copy(DataSet.FieldByName('ds_observacao').AsString + ' Justificativa: '+AtePac_qm.ds_justificativaProc,1,255);
					{ENDIF} {ENDIF}
					end;
				 end
					
				end if;*/

		elsif (current_setting('execucao_prescricao_pck.ie_acao_excesso_w')::varchar(5) = 'E') then
			if (current_setting('execucao_prescricao_pck.qt_excedida_w')::double > 0) then
				
				qt_procedimento_p := qt_procedimento_p - current_setting('execucao_prescricao_pck.qt_excedida_w')::double;
				
				if (qt_procedimento_p = 0) then
					qt_procedimento_p := current_setting('execucao_prescricao_pck.qt_excedida_w')::double;
					select	max(cd_motivo_exc_conta)
					into STRICT	cd_motivo_exc_conta_p
					from	parametro_faturamento
					where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
					ds_compl_motivo_excon_p := wheb_mensagem_pck.get_texto(177423);
					nr_interno_conta_p := null;
				
				else
					
					inserir_procedimento_paciente(
								cd_procedimento_p,
								current_setting('execucao_prescricao_pck.qt_excedida_w')::double,
								nr_seq_exame_p,
								nr_seq_proc_interno_p,
								ie_origem_proced_p,
								cd_setor_atendimento_p,
								nr_atendimento_p,
								wheb_usuario_pck.get_cd_estabelecimento,
								nm_usuario_p,
								null,
								null,
								null,
								nr_seq_atepacu_p,
								dt_procedimento_p,
								cd_convenio_p,
								cd_categoria_p,
								current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint,
								null,
								null);
					
					CALL atualiza_preco_procedimento(
										nr_sequencia_p,
										cd_convenio_p,
										nm_usuario_p);
				
					select	max(cd_motivo_exc_conta)
					into STRICT	cd_motivo_exc_conta_p
					from	parametro_faturamento
					where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
					
					CALL excluir_matproc_conta(
									nr_sequencia_p,
									nr_interno_conta_p,
									cd_motivo_exc_conta_p,
									substr(wheb_mensagem_pck.get_texto(177423),1,255),
									'P',
									nm_usuario_p);
					
				end if;
			end if;
		elsif (current_setting('execucao_prescricao_pck.ds_erro_w')::(varchar(2000) IS NOT NULL AND (varchar(2000))::text <> '')) then
			if (current_setting('execucao_prescricao_pck.ie_parametro_151_w')::varchar(1) = 'S') then
				ie_erro_p := 'S';
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
				goto Final;
			elsif (current_setting('execucao_prescricao_pck.ie_parametro_151_w')::varchar(1) = 'M') then
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			end if;
			
    	end if;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_169_w')::varchar(1) = 'N') then
		select	count(1)
		into STRICT	current_setting('execucao_prescricao_pck.qt_existe_w')::bigint
		from	conversao_proc_convenio
		where	cd_convenio = cd_convenio_p;
		
		if (current_setting('execucao_prescricao_pck.qt_existe_w')::bigint > 0) and (cd_procedimento_p = coalesce(obter_codigo_item_convenio(cd_convenio_p, 1, cd_procedimento_p, ie_origem_proced_p, 'N', null, null, null), cd_procedimento_p)) then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177444), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;	
		end if;
	
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_173_w')::varchar(1) = 'S') and (ie_origem_proced_p = 7) then
		
		select	max(ie_tipo_convenio)
		into STRICT	ie_tipo_convenio_w
		from	convenio
		where	cd_convenio = cd_convenio_p;
		
		if (ie_tipo_convenio_w = '3') then
			if (sus_consiste_proced_Atend(nr_atendimento_p, cd_procedimento_p, ie_origem_proced_p) = 'N') then
				ie_erro_p := 'S';
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177461), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
				goto Final;					
			end if;
		end if;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_283_w')::varchar(1) = 'S') and (cd_equipamento_p = 0) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177462), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_19_w')::varchar(1) = 'S') and (coalesce(nr_minuto_duracao_p::text, '') = '') and (ie_visivel_min_duracao_p = 'S') and (ie_barras_p = 'S') then--atribFocusLostNrMinutoDuracao();
		
		if (ie_acao_executada_p in (1,2)) then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(183205), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;
		end if;
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_exige_guia_w')::varchar(1) in ('P', 'A')) and (coalesce(nr_doc_convenio_p::text, '') = '') and (ie_barras_p = 'N') and (cd_procedimento_p > 0) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(180039), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	<<Final>>
	
	PERFORM set_config('execucao_prescricao_pck.qt_existe_w', 0, false);
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE execucao_prescricao_pck.procedimento_pac_before_post ( nr_atendimento_p INOUT bigint, nr_prescricao_p INOUT bigint, nr_sequencia_prescricao_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, ie_acao_executada_p INOUT bigint, ie_auditoria_p INOUT text, dt_procedimento_p INOUT timestamp, dt_entrada_unidade_p INOUT timestamp, nr_seq_atepacu_p INOUT bigint, tx_procedimento_p INOUT bigint, qt_procedimento_p INOUT bigint, nr_seq_proc_princ_p INOUT bigint, cd_procedimento_princ_p INOUT bigint, nr_sequencia_p INOUT bigint, cd_medico_executor_p INOUT text, ie_funcao_medico_p INOUT text, cd_especialidade_p INOUT text, nr_interno_conta_p INOUT bigint, cd_atividade_prof_bpa_p INOUT text, ie_tipo_atend_bpa_p INOUT text, ie_grupo_atend_bpa_p INOUT text, cd_pessoa_fisica_p INOUT text, nr_seq_exame_p INOUT bigint, nr_seq_proc_interno_p INOUT bigint, cd_setor_atendimento_p INOUT bigint, nr_seq_grupo_rec_p INOUT bigint, nr_seq_cor_exec_p INOUT bigint, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, ie_valor_informado_p INOUT text, cd_motivo_exc_conta_p INOUT bigint, ds_compl_motivo_excon_p INOUT text, nr_minuto_duracao_p INOUT bigint, nr_doc_convenio_p INOUT text, ie_tipo_atendimento_p INOUT bigint, nr_seq_classificacao_p INOUT bigint, ie_via_acesso_p INOUT text, cd_plano_convenio_p INOUT text, dt_entrada_p INOUT timestamp, dt_alta_p INOUT timestamp, dt_conta_p INOUT timestamp, ie_forma_apresentacao_p INOUT bigint, dt_inicio_procedimento_p INOUT timestamp, cd_unidade_medida_p INOUT text, ds_proc_convenio_p INOUT text, ds_proc_interno_conv_p INOUT text, cd_cgc_prestador_p INOUT text, cd_kit_material_p INOUT bigint, cd_funcao_medico_p INOUT text, nr_seq_agenda_p INOUT bigint, ie_tipo_servico_sus_p INOUT text, ie_tipo_ato_sus_p INOUT text, cd_local_estoque_p INOUT bigint, ie_atualiza_estoque_p text, cd_medico_barras_p text, ie_classificacao_p text, cd_medico_resp_p text, ie_ajustar_wdlg_p text, ie_funcao_med_enabled_p text, ie_medico_exe_enabled_p text, ie_visivel_min_duracao_p text, ie_barras_p text, cd_equipamento_p bigint, nr_cirurgia_p bigint, dt_entrada_unid_atend_p timestamp, nr_seq_atepacu_atend_p bigint, ie_proc_prescrito_p text, varie_autitoria_p text, ie_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;
