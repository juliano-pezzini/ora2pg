-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE execucao_prescricao_pck.procedimento_pac_new_record ( dt_inicio_real_cir_p timestamp, dt_entrada_p timestamp, cd_convenio_wlcb_p bigint, cd_categoria_wlcb_p text, cd_convenio_cat_p bigint, cd_categoria_cat_p text, cd_pessoa_usuario_p text, ie_auto_colar_data_p text, dt_copia_p timestamp, dt_fim_auditoria_p timestamp, ie_barras_p text, dt_conta_p INOUT timestamp, cd_pessoa_fisica_p INOUT text, ie_tipo_atendimento_p INOUT bigint, ie_tipo_convenio_p INOUT bigint, dt_procedimento_p INOUT timestamp, nr_atendimento_p INOUT bigint, cd_setor_atendmento_p INOUT bigint, dt_entrada_unidade_p INOUT timestamp, ie_funcao_medico_p INOUT text, nr_sequencia_p INOUT bigint, ie_proc_princ_atend_p INOUT text, ie_video_p INOUT text, qt_procedimento_p INOUT bigint, tx_medico_p INOUT bigint, tx_anestesia_p INOUT bigint, tx_procedimento_p INOUT bigint, ie_valor_informado_p INOUT text, ie_guia_informada_p INOUT text, cd_situacao_glosa_p INOUT bigint, nm_usuario_original_p INOUT text, nr_seq_atepacu_p INOUT bigint, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, nr_doc_convenio_p INOUT text, ie_tipo_guia_p INOUT text, cd_senha_p INOUT text, ie_auditoria_p INOUT text, cd_cgc_prestador_p INOUT text, ie_emite_conta_p INOUT text, ie_origem_proced_p INOUT bigint, ie_mostra_wdlg_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

	
	ie_parametro_92_w		varchar(1);
	ie_parametro_18_w		varchar(3);
	ie_emite_conta_w		varchar(3);
	
	
BEGIN

	obter_param_usuario(901, 92, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_92_w);
	obter_param_usuario(24, 224, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_224_w')::varchar(1));
	obter_param_usuario(81, 18, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_18_w);
	obter_param_usuario(24, 281, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_281_w')::varchar(1));
	obter_param_usuario(24, 55, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_55_w')::varchar(255));
	
	if (ie_parametro_92_w = 'N') and (dt_inicio_real_cir_p IS NOT NULL AND dt_inicio_real_cir_p::text <> '') and (dt_inicio_real_cir_p < dt_procedimento_p) then
		dt_procedimento_p := dt_inicio_real_cir_p;
	elsif (coalesce(dt_procedimento_p::text, '') = '') then
		dt_procedimento_p := clock_timestamp();
	end if;
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_55_w')::varchar(255) = 'S') then
		select	max(a.dt_alta)
		into STRICT	current_setting('execucao_prescricao_pck.dt_param_w')::timestamp
		from	atendimento_paciente a
		where	a.nr_atendimento = nr_atendimento_p;
		if (current_setting('execucao_prescricao_pck.dt_param_w')::(timestamp IS NOT NULL AND timestamp::text <> '')) then
			dt_procedimento_p := current_setting('execucao_prescricao_pck.dt_param_w')::timestamp;
		end if;
	end if;
	
	if (coalesce(ie_funcao_medico_p::text, '') = '') then
		ie_funcao_medico_p := '0';
	end if;
	
	if (nr_sequencia_p = 0) then
		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_sequencia_p
		;
		ie_proc_princ_atend_p	:= 'N';
		ie_video_p				:= 'N';
		qt_procedimento_p		:= 1;
		tx_medico_p				:= 100;
		tx_anestesia_p			:= 100;
		tx_procedimento_p		:= 100;
		ie_valor_informado_p	:= 'N';
		ie_guia_informada_p		:= 'N';
		cd_situacao_glosa_p		:= 0;
		nm_usuario_original_p	:= nm_usuario_p;
	end if;
	
	if (dt_procedimento_p < dt_entrada_p) then
		dt_procedimento_p := dt_entrada_p;
	end if;
	
	obter_convenio_execucao(
				nr_atendimento_p,
				dt_procedimento_p,
				cd_convenio_p,
				cd_categoria_p,
				nr_doc_convenio_p,
				ie_tipo_guia_p,
				cd_senha_p);				
				
	if (current_setting('execucao_prescricao_pck.ie_parametro_224_w')::varchar(1) = 'S') and (cd_convenio_wlcb_p IS NOT NULL AND cd_convenio_wlcb_p::text <> '') and (cd_categoria_wlcb_p IS NOT NULL AND cd_categoria_wlcb_p::text <> '') then
		cd_convenio_p := cd_convenio_wlcb_p;
		cd_categoria_p := cd_categoria_wlcb_p;
	end if;
	
	ie_auditoria_p := 'N';
	ie_emite_conta_p := ie_parametro_18_w;
	
	select	max(a.cd_cgc)
	into STRICT	cd_cgc_prestador_p
	from	estabelecimento a,
		atendimento_paciente b
	where	a.cd_estabelecimento = b.cd_estabelecimento
	and	b.nr_atendimento = nr_atendimento_p;

	if (ie_barras_p = 'N' and coalesce(ie_origem_proced_p::text, '') = '') then
		ie_origem_proced_p := execucao_prescricao_pck.define_ie_origem_proced(	cd_convenio_cat_p,
													ie_tipo_atendimento_p,
													ie_tipo_convenio_p,
													cd_categoria_cat_p);
	end if;

	ie_mostra_wdlg_p := 'S';
	
	if (current_setting('execucao_prescricao_pck.ie_parametro_281_w')::varchar(1) = 'S') then
		cd_pessoa_fisica_p	:= cd_pessoa_usuario_p;
	end if;
	
	if (ie_auto_colar_data_p = 'S') and (dt_copia_p IS NOT NULL AND dt_copia_p::text <> '') then
		dt_procedimento_p := dt_copia_p;
	end if;

	if (dt_fim_auditoria_p IS NOT NULL AND dt_fim_auditoria_p::text <> '') and (dt_fim_auditoria_p < dt_procedimento_p) then
		dt_procedimento_p	:= dt_fim_auditoria_p;
		dt_conta_p	:= dt_fim_auditoria_p;
	end if;	
	
	
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE execucao_prescricao_pck.procedimento_pac_new_record ( dt_inicio_real_cir_p timestamp, dt_entrada_p timestamp, cd_convenio_wlcb_p bigint, cd_categoria_wlcb_p text, cd_convenio_cat_p bigint, cd_categoria_cat_p text, cd_pessoa_usuario_p text, ie_auto_colar_data_p text, dt_copia_p timestamp, dt_fim_auditoria_p timestamp, ie_barras_p text, dt_conta_p INOUT timestamp, cd_pessoa_fisica_p INOUT text, ie_tipo_atendimento_p INOUT bigint, ie_tipo_convenio_p INOUT bigint, dt_procedimento_p INOUT timestamp, nr_atendimento_p INOUT bigint, cd_setor_atendmento_p INOUT bigint, dt_entrada_unidade_p INOUT timestamp, ie_funcao_medico_p INOUT text, nr_sequencia_p INOUT bigint, ie_proc_princ_atend_p INOUT text, ie_video_p INOUT text, qt_procedimento_p INOUT bigint, tx_medico_p INOUT bigint, tx_anestesia_p INOUT bigint, tx_procedimento_p INOUT bigint, ie_valor_informado_p INOUT text, ie_guia_informada_p INOUT text, cd_situacao_glosa_p INOUT bigint, nm_usuario_original_p INOUT text, nr_seq_atepacu_p INOUT bigint, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, nr_doc_convenio_p INOUT text, ie_tipo_guia_p INOUT text, cd_senha_p INOUT text, ie_auditoria_p INOUT text, cd_cgc_prestador_p INOUT text, ie_emite_conta_p INOUT text, ie_origem_proced_p INOUT bigint, ie_mostra_wdlg_p INOUT text, nm_usuario_p text) FROM PUBLIC;
