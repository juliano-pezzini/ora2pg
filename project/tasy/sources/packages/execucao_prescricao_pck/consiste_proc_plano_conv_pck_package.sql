-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE execucao_prescricao_pck.consiste_proc_plano_conv_pck ( nr_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_funcao_medico_p text, nr_seq_exame_p bigint, cd_setor_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, nr_seq_proc_interno_p bigint, nr_seq_grupo_rec_p bigint, ie_acao_executada_p bigint, ie_funcao_medico_p text, cd_medico_executor_p text, cd_plano_convenio_p text, cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, nm_usuario_p text, ie_erro_p INOUT text) AS $body$
DECLARE

	
	ie_bloqueia_proc_sem_autor_w	varchar(1);
	
	
BEGIN
	consiste_plano_convenio(
						nr_atendimento_p,
						cd_convenio_p, 
						cd_procedimento_p, 
						ie_origem_proced_p, 
						clock_timestamp(), 
						1, 
						ie_tipo_atendimento_p, 
						cd_plano_convenio_p, 
						null, 
						current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000), 
						cd_setor_atendimento_p, 
						nr_seq_exame_p,
						current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10), 
						nr_seq_agenda_p, 
						current_setting('execucao_prescricao_pck.nr_seq_regra_w')::bigint, 
						nr_seq_proc_interno_p, 
						cd_categoria_p, 
						get_estabelecimento, 
						null, 
						null, 
						cd_pessoa_fisica_p, 
						current_setting('execucao_prescricao_pck.ds_sem_ret_proc_w')::varchar(255), 
						current_setting('execucao_prescricao_pck.nr_sem_ret_proc_w')::bigint, 
						null, 
						null); 	
						
	if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then
		if (current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10) in ('1','2')) then
			if (ie_acao_executada_p in (1,2)) then
				update	agenda_paciente
				set	ie_autorizacao = 'B'
				where	nr_sequencia = nr_seq_agenda_p;
			else
				update	agenda_paciente
				set	ie_autorizacao = 'B'
				where nr_sequencia = nr_seq_agenda_p
				and ie_autorizacao <> 'B';
			end if;
		elsif (current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10) = '3') then
			if (ie_acao_executada_p in (1,2)) then
				update	agenda_paciente
				set	ie_autorizacao = 'PA'
				where	nr_sequencia = nr_seq_agenda_p;
			else
				update	agenda_paciente
				set	ie_autorizacao = 'PA'
				where nr_sequencia = nr_seq_agenda_p
				and ie_autorizacao <> 'PA';
			end if;
		end if;
	end if;
	
	ie_erro_p := 'N';
	
	if (current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10) = '7') and (substr(current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000),1,3) = '406') then
		select	coalesce(ie_bloqueia_proc_sem_autor,'N')
		into STRICT	ie_bloqueia_proc_sem_autor_w
		from	convenio_estabelecimento
		where	cd_estabelecimento = get_estabelecimento
		and	cd_convenio = cd_convenio_p;
		if (ie_bloqueia_proc_sem_autor_w = 'S') then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(183413), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		end if;
	end if;
	
	if (ie_erro_p = 'N') then
		if (current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10) in (1,2)) then
			obter_param_usuario(24, 182, obter_perfil_ativo, nm_usuario_p, get_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_182_w')::varchar(1));
			if (current_setting('execucao_prescricao_pck.ie_parametro_182_w')::varchar(1) = 'S') then
				select	coalesce(max(ds_observacao),'.')
				into STRICT	current_setting('execucao_prescricao_pck.ds_mensagem_w')::varchar(255)
				from	regra_convenio_plano
				where	nr_sequencia = current_setting('execucao_prescricao_pck.nr_seq_regra_w')::bigint;
				ie_erro_p := 'S';
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(183413), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);	
			end if;
		elsif (current_setting('execucao_prescricao_pck.ie_regra_w')::varchar(10) = 3) then
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(183421), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);	
		end if;	
	end if;
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE execucao_prescricao_pck.consiste_proc_plano_conv_pck ( nr_atendimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_funcao_medico_p text, nr_seq_exame_p bigint, cd_setor_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_atendimento_p bigint, nr_seq_proc_interno_p bigint, nr_seq_grupo_rec_p bigint, ie_acao_executada_p bigint, ie_funcao_medico_p text, cd_medico_executor_p text, cd_plano_convenio_p text, cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, nm_usuario_p text, ie_erro_p INOUT text) FROM PUBLIC;
