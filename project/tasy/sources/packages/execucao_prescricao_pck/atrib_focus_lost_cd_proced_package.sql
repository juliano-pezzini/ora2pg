-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE execucao_prescricao_pck.atrib_focus_lost_cd_proced ( nr_atendimento_p INOUT bigint, nr_prescricao_p INOUT bigint, nr_sequencia_prescricao_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, ie_acao_executada_p INOUT bigint, ie_auditoria_p INOUT text, dt_procedimento_p INOUT timestamp, dt_entrada_unidade_p INOUT timestamp, nr_seq_atepacu_p INOUT bigint, tx_procedimento_p INOUT bigint, qt_procedimento_p INOUT bigint, nr_seq_proc_princ_p INOUT bigint, cd_procedimento_princ_p INOUT bigint, nr_sequencia_p INOUT bigint, cd_medico_executor_p INOUT text, ie_funcao_medico_p INOUT text, cd_especialidade_p INOUT text, nr_interno_conta_p INOUT bigint, cd_atividade_prof_bpa_p INOUT text, ie_tipo_atend_bpa_p INOUT text, ie_grupo_atend_bpa_p INOUT text, cd_pessoa_fisica_p INOUT text, nr_seq_exame_p INOUT bigint, nr_seq_proc_interno_p INOUT bigint, cd_setor_atendimento_p INOUT bigint, nr_seq_grupo_rec_p INOUT bigint, nr_seq_cor_exec_p INOUT bigint, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, ie_valor_informado_p INOUT text, cd_motivo_exc_conta_p INOUT bigint, ds_compl_motivo_excon_p INOUT text, nr_minuto_duracao_p INOUT bigint, nr_doc_convenio_p INOUT text, ie_tipo_atendimento_p INOUT bigint, nr_seq_classificacao_p INOUT bigint, ie_via_acesso_p INOUT text, cd_plano_convenio_p INOUT text, dt_entrada_p INOUT timestamp, dt_alta_p INOUT timestamp, dt_conta_p INOUT timestamp, ie_forma_apresentacao_p INOUT bigint, dt_inicio_procedimento_p INOUT timestamp, cd_unidade_medida_p INOUT text, ds_proc_convenio_p INOUT text, ds_proc_interno_conv_p INOUT text, cd_cgc_prestador_p INOUT text, cd_kit_material_p INOUT bigint, cd_funcao_medico_p INOUT text, nr_seq_agenda_p INOUT bigint, ie_tipo_servico_sus_p INOUT text, ie_tipo_ato_sus_p INOUT text, ie_classificacao_p text, cd_medico_resp_p text, ie_ajustar_wdlg_p text, ie_funcao_med_enabled_p text, ie_medico_exe_enabled_p text, ie_visivel_min_duracao_p text, ie_barras_p text, cd_equipamento_p bigint, nr_cirurgia_p bigint, dt_entrada_unid_atend_p timestamp, nr_seq_atepacu_atend_p bigint, ie_proc_prescrito_p text, varie_autitoria_p text, ie_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

											
	ie_situacao_w		procedimento.ie_situacao%type;
	
	
BEGIN

	obter_param_usuario(24, 112, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_112_w')::varchar(1));
	obter_param_usuario(24, 124, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_124_w')::varchar(1));
	obter_param_usuario(24, 167, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_167_w')::varchar(1));
	obter_param_usuario(24, 247, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_247_w')::varchar(1));
	obter_param_usuario(24, 30, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_30_w')::varchar(1));
	obter_param_usuario(24, 31, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_31_w')::varchar(1));
	obter_param_usuario(24, 108, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_108_w')::varchar(1));
	obter_param_usuario(24, 107, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_107_w')::varchar(1));
	obter_param_usuario(24, 135, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_135_w')::varchar(1));
	obter_param_usuario(24, 210, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_210_w')::varchar(1));
	obter_param_usuario(24, 193, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, current_setting('execucao_prescricao_pck.ie_parametro_193_w')::varchar(1));
	

	if (current_setting('execucao_prescricao_pck.ie_parametro_112_w')::varchar(1) <> 'S') then
		select	max(ie_situacao)
		into STRICT	ie_situacao_w
		from	procedimento
		where	cd_procedimento  = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_p;
		
		if (ie_situacao_w = 'I') then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177522), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;
		end if;
	end if;
	
	if (ie_acao_executada_p = 1) and (varie_autitoria_p = 'S') then
		ie_auditoria_p := 'S';
	end if;
	
	select	max(ie_forma_apresentacao)
	into STRICT	ie_forma_apresentacao_p
	from	procedimento
	where	cd_procedimento = cd_procedimento_p
	and	ie_origem_proced = ie_origem_proced_p;
	
	if (ie_acao_executada_p in (1,2)) and (ie_forma_apresentacao_p = 8) then
		dt_inicio_procedimento_p := dt_entrada_unidade_p;
		dt_conta_p	:= dt_inicio_procedimento_p;
		dt_procedimento_p := null;
	end if;
	
	if (ie_acao_executada_p = 1) and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (not execucao_prescricao_pck.libera_setor_exclusivo(cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, cd_convenio_p, cd_categoria_p, cd_setor_atendimento_p, nm_usuario_p)) then
		ie_erro_p := 'S';
		CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(177759), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
		goto Final;
	end if;
	
	if (ie_acao_executada_p in (1,2)) and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
		cd_unidade_medida_p := obter_unid_med_Servico(cd_convenio_p, cd_categoria_p, cd_procedimento_p, ie_origem_proced_p, get_estabelecimento);
		
		if (coalesce(nr_seq_cor_exec_p::text, '') = '') then
			nr_seq_cor_exec_p := 95;
		end if;
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_124_w')::varchar(1) = 'S') then
			ie_via_acesso_p := substr(obter_regra_via_acesso(cd_procedimento_p, ie_origem_proced_p, get_estabelecimento, cd_convenio_p),1,2);
		end if;
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_167_w')::varchar(1) <> 'S') and (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
			ds_proc_convenio_p := obter_desc_prescr_proc(cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p);
			ds_proc_interno_conv_p := obter_desc_prescr_proc(cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p);
		end if;
		
		consiste_medico_executor(
				get_estabelecimento,
				cd_convenio_p,
				cd_setor_atendimento_p,
				cd_procedimento_p,
				ie_origem_proced_p,
				ie_tipo_atendimento_p,
				null,
				nr_seq_proc_interno_p,
				current_setting('execucao_prescricao_pck.ie_medico_executor_w')::varchar(10),
				current_setting('execucao_prescricao_pck.cd_cgc_w')::varchar(14),
				current_setting('execucao_prescricao_pck.cd_medico_executor_w')::procedimento_paciente.cd_medico_executor%type,
				current_setting('execucao_prescricao_pck.cd_pessoa_fisica_w')::procedimento_paciente.cd_pessoa_fisica%type,
				null,
				dt_procedimento_p,
				nr_seq_classificacao_p,
				null,
				null,
				null,
				null);
				
		if (coalesce(cd_medico_executor_p::text, '') = '') then
			if (current_setting('execucao_prescricao_pck.ie_medico_executor_w')::varchar(10) = 'A') then
				cd_medico_executor_p := cd_medico_resp_p;
			elsif (current_setting('execucao_prescricao_pck.ie_medico_executor_w')::varchar(10) = 'F') then
				cd_medico_executor_p := current_setting('execucao_prescricao_pck.cd_medico_executor_w')::procedimento_paciente.cd_medico_executor%type;
			end if;
		end if;
		
		if (coalesce(cd_pessoa_fisica_p::text, '') = '') then
			cd_pessoa_fisica_p := current_setting('execucao_prescricao_pck.cd_pessoa_fisica_w')::procedimento_paciente.cd_pessoa_fisica%type;
			--procedimentoPacienteWDBP.setCampoEnabled("CD_MEDICO_EXECUTOR", !"N".equalsIgnoreCase(Funcoes.validaString(consisteMedicoExecutor.get("IE_MEDICO_EXECUTOR_P"))));

		end if;
		
		select	count(1),
			max(ie_classificacao),
			max(cd_kit_material)
		into STRICT	current_setting('execucao_prescricao_pck.qt_existe_w')::bigint,
			current_setting('execucao_prescricao_pck.ie_classificacao_w')::procedimento.ie_classificacao%type,
			cd_kit_material_p
		from	procedimento
		where	cd_procedimento  = cd_procedimento_p
		and	((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_ignora_origem, 'N') = 'S'));
		
		select	max(ie_origem_proced)
		into STRICT	current_setting('execucao_prescricao_pck.ie_origem_proced_w')::procedimento_paciente.ie_origem_proced%type
		from	procedimento
		where	cd_procedimento   = cd_procedimento_p
		and		ie_ignora_origem  = 'S';
		
		if (current_setting('execucao_prescricao_pck.ie_origem_proced_w')::procedimento_paciente.ie_origem_proced%type <> 0) and
			((current_setting('execucao_prescricao_pck.ie_origem_proced_w')::procedimento_paciente.ie_origem_proced%type = ie_origem_proced_p) or (coalesce(ie_origem_proced_p::text, '') = '')) then
			ie_origem_proced_p := current_setting('execucao_prescricao_pck.ie_origem_proced_w')::procedimento_paciente.ie_origem_proced%type;		
		end if;
		
		if (current_setting('execucao_prescricao_pck.qt_existe_w')::bigint = 0) then
			if (ie_origem_proced_p not in (1,2,3)) then
				select	max(ie_classificacao),
					max(cd_kit_material)
				into STRICT	current_setting('execucao_prescricao_pck.ie_classificacao_w')::procedimento.ie_classificacao%type,
					cd_kit_material_p
				from procedimento
				where	cd_procedimento = cd_procedimento_p
				and ie_origem_proced  = 1;
			end if;
		end if;
		
		/*
                parametros = atePac_F6.getValoresConsultaPadrao(parametrosProc, 177803);
                if (parametros.isEmpty()) {
                    if (!UGeneric.equalsIgnoreCaseAll(Funcoes.validaString(procedimentoPacienteWDBP.getValor("IE_ORIGEM_PROCED")), "1", "2", "3")) {
                        parametros = atePac_F6.getValoresConsultaPadrao(parametrosProc, 177822);
                        //Procedimento nao encontrado. Confirma utilizacao de procedimento AMB ?
                    }
                    if (parametros.isEmpty() || Dialogs.YES != Dialogs.showConfirmPergunta(177829, getUsuario())) {
                        //Procedimento nao encontrado. Verifique tipo de
                        procedimentoPacienteWDBP.doDataSourceCancel();
                        if (!procedimentoPacienteWDBP.isGridVisivel()) {
                            procedimentoPacienteWDBP.alternaGridDetalhe();
                        }
                        Dialogs.showDialogAbort(177830, Dialogs.INFO, getUsuario());
                    }
                    procedimentoPacienteWDBP.setValor("IE_ORIGEM_PROCED", 1);
                    UVar.setIeOrigemProced(getUsuario(), 1);
		*/

		
		if (ie_origem_proced_p = 0) then
			ie_origem_proced_p := 1;
		end if;
		if (current_setting('execucao_prescricao_pck.cd_cgc_w')::(varchar(14) IS NOT NULL AND (varchar(14))::text <> '')) then
			cd_cgc_prestador_p := current_setting('execucao_prescricao_pck.cd_cgc_w')::varchar(14);
		end if;
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_247_w')::varchar(1) <> 'S') and (current_setting('execucao_prescricao_pck.ie_classificacao_w')::procedimento.ie_classificacao%type = 1) then
			ie_funcao_medico_p := null;
			if (current_setting('execucao_prescricao_pck.ie_parametro_30_w')::varchar(1) = 'S') then
				ie_erro_p := execucao_prescricao_pck.consiste_preco(2, nr_atendimento_p, cd_convenio_p, cd_categoria_p, cd_funcao_medico_p, nr_seq_exame_p, dt_conta_p, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, nr_seq_proc_interno_p, nr_seq_grupo_rec_p, dt_procedimento_p, nr_seq_classificacao_p, ie_acao_executada_p, ie_funcao_medico_p, cd_medico_executor_p, nm_usuario_p, ie_erro_p);
				if (ie_erro_p = 'S') then
					goto Final;
				end if;
			end if;
		elsif (current_setting('execucao_prescricao_pck.ie_parametro_31_w')::varchar(1) = 'S') then
			ie_erro_p := execucao_prescricao_pck.consiste_preco(3, nr_atendimento_p, cd_convenio_p, cd_categoria_p, cd_funcao_medico_p, nr_seq_exame_p, dt_conta_p, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, nr_seq_proc_interno_p, nr_seq_grupo_rec_p, dt_procedimento_p, nr_seq_classificacao_p, ie_acao_executada_p, ie_funcao_medico_p, cd_medico_executor_p, nm_usuario_p, ie_erro_p);
			if (ie_erro_p = 'S') then
				goto Final;
			end if;
		end if;
		
		current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000) := execucao_prescricao_pck.valida_procedimento(nr_atendimento_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, cd_pessoa_fisica_p, 0, nm_usuario_p, current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000));
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_108_w')::varchar(1) = 'S') then
			select	max(ie_clinica)
			into STRICT	current_setting('execucao_prescricao_pck.ie_clinica_w')::atendimento_paciente.ie_clinica%type
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_p;
			
			obter_proced_espec_medica( get_estabelecimento, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, null, null, null, current_setting('execucao_prescricao_pck.ie_clinica_w')::atendimento_paciente.ie_clinica%type, cd_setor_atendimento_p, cd_especialidade_p,
							current_setting('execucao_prescricao_pck.ie_funcao_medico_w')::procedimento_paciente.ie_funcao_medico%type, null, nr_seq_proc_interno_p, ie_tipo_atendimento_p);
			
			if (coalesce(ie_funcao_medico_p::text, '') = '') or (ie_funcao_medico_p = '0') then
				ie_funcao_medico_p := current_setting('execucao_prescricao_pck.ie_funcao_medico_w')::procedimento_paciente.ie_funcao_medico%type;
			end if;
		end if;
		
		ie_erro_p := execucao_prescricao_pck.consiste_proc_plano_conv_pck(
						nr_atendimento_p, cd_convenio_p, cd_categoria_p, cd_funcao_medico_p, nr_seq_exame_p, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, nr_seq_proc_interno_p, nr_seq_grupo_rec_p, ie_acao_executada_p, ie_funcao_medico_p, cd_medico_executor_p, cd_plano_convenio_p, cd_pessoa_fisica_p, nr_seq_agenda_p, nm_usuario_p, ie_erro_p);
		
		if (ie_erro_p = 'S') then
			goto Final;
		end if;
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_107_w')::varchar(1) = 'S') then
				consiste_regra_ajuste_proc(
							get_estabelecimento,
							nr_atendimento_p, 
							cd_procedimento_p, 
							ie_origem_proced_p, 
							dt_procedimento_p,
							cd_setor_atendimento_p,
							current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000));
				if (current_setting('execucao_prescricao_pck.ds_erro_w')::(varchar(2000) IS NOT NULL AND (varchar(2000))::text <> '')) then
					CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, current_setting('execucao_prescricao_pck.ds_erro_w')::varchar(2000), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
				end if;
		end if;
		
		if (ie_origem_proced_p = 2) then
			definir_tipo_ato_servico(
						get_estabelecimento,
						cd_procedimento_p,
						cd_convenio_p,
						cd_medico_executor_p,
						cd_cgc_prestador_p,
						current_setting('execucao_prescricao_pck.cd_tipo_ato_w')::bigint,
						current_setting('execucao_prescricao_pck.cd_tipo_servico_w')::bigint);
			if (current_setting('execucao_prescricao_pck.cd_tipo_servico_w')::bigint > 0) then
				ie_tipo_servico_sus_p := current_setting('execucao_prescricao_pck.cd_tipo_servico_w')::bigint;
			end if;
			if (current_setting('execucao_prescricao_pck.cd_tipo_ato_w')::bigint > 0) then
				ie_tipo_ato_sus_p := current_setting('execucao_prescricao_pck.cd_tipo_ato_w')::bigint;
			end if;
		end if;
		
		if (ie_acao_executada_p = 1) then
			select	max(a.nr_sequencia)
			into STRICT	current_setting('execucao_prescricao_pck.nr_sequencia_w')::bigint
			from	convenio_taxa_exame b,
					procedimento_paciente a
			where	a.nr_atendimento = nr_atendimento_p
			and	a.ie_origem_proced = b.ie_origem_proced
			and	a.cd_procedimento  = b.cd_procedimento  
			and	b.cd_taxa_exame    = cd_procedimento_p;
			if (current_setting('execucao_prescricao_pck.nr_sequencia_w')::(bigint IS NOT NULL AND bigint::text <> '')) then
				nr_seq_proc_princ_p := current_setting('execucao_prescricao_pck.nr_sequencia_w')::bigint;
			end if;
		end if;
		
		select	max(cd_atividade_prof_bpa)
		into STRICT	current_setting('execucao_prescricao_pck.cd_atividade_prof_bpa_w')::procedimento.cd_atividade_prof_bpa%type
		from	procedimento
		where	cd_procedimento = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_p;
		
		if (current_setting('execucao_prescricao_pck.cd_atividade_prof_bpa_w')::procedimento.cd_atividade_prof_bpa%(type IS NOT NULL AND type::text <> '')) then
			cd_atividade_prof_bpa_p := current_setting('execucao_prescricao_pck.cd_atividade_prof_bpa_w')::procedimento.cd_atividade_prof_bpa%type;
		else
			select	max(a.cd_atividade_profissional)
			into STRICT	cd_atividade_prof_bpa_p
			from	sus_atividade_profissional a,
					sus_atividade_prof_proc b
			where	a.cd_atividade_profissional = b.cd_atividade_profissional
			and	b.cd_procedimento = cd_procedimento_p
			and b.ie_origem_proced = ie_origem_proced_p;
		end if;
		
		SELECT * FROM execucao_prescricao_pck.get_descricao_procedimento(	
							nr_atendimento_p, cd_convenio_p, cd_categoria_p, nr_seq_exame_p, cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, nr_seq_proc_interno_p, ie_acao_executada_p, nm_usuario_p, cd_especialidade_p, dt_procedimento_p, nr_seq_atepacu_p, current_setting('execucao_prescricao_pck.ds_retorno_w')::varchar(255), ie_erro_p) INTO STRICT current_setting('execucao_prescricao_pck.ds_retorno_w')::varchar(255), ie_erro_p;
							
		/*
		Apenas sera utilizado na aba material ou procedimento
		if (!atePac_F6.consisteGlosaZerarConv()) {
                    procedimentoPacienteWDBP.doDataSourceCancel();
                    UGeneric.abort();
                }*/

				
		if (current_setting('execucao_prescricao_pck.ie_parametro_135_w')::varchar(1) <> 'N') and (obter_se_proc_conv(get_estabelecimento, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, ie_tipo_atendimento_p) = 'N') and (obter_se_pacote_convenio(cd_procedimento_p, ie_origem_proced_p, cd_convenio_p, get_estabelecimento) = 'N') then
			if (current_setting('execucao_prescricao_pck.ie_parametro_135_w')::varchar(1) = 'S') then
				ie_erro_p := 'S';
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(178525), null, 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
				goto Final;
			else
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(178526), null, 'N', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			end if;
		end if;
		
		/*if ("S".equalsIgnoreCase(getParametroStr(147)) procedimentoPacienteWDBP.isModoEdicaoOuNovoRegistro()) {
                    defineProcInformado();
		}*/


		if (current_setting('execucao_prescricao_pck.ie_parametro_210_w')::varchar(1) = 'S') and (sus_consiste_habilitacao_proc(cd_procedimento_p, ie_origem_proced_p, dt_procedimento_p, get_estabelecimento) = 'N') then
			ie_erro_p := 'S';
			CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(178540), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'210;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			goto Final;
		end if;
		
		if (current_setting('execucao_prescricao_pck.ie_parametro_193_w')::varchar(1) = 'S') then
			PERFORM set_config('execucao_prescricao_pck.ie_permanecia_pac_w', substr(sus_obter_permanecia_paciente(nr_atendimento_p, cd_procedimento_p), 1, 5), false);
			if (current_setting('execucao_prescricao_pck.ie_permanecia_pac_w')::varchar(5) = 'A') then
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(178542), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'193;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			elsif (current_setting('execucao_prescricao_pck.ie_permanecia_pac_w')::varchar(5) = 'L') then
				CALL execucao_prescricao_pck.gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(178543), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'193;DS_REGRA='||''), 'S', cd_procedimento_p, null, ie_origem_proced_p, nm_usuario_p);
			end if;
		end if;

	end if;
	
	<<Final>>
	
	PERFORM set_config('execucao_prescricao_pck.qt_existe_w', 0, false);
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE execucao_prescricao_pck.atrib_focus_lost_cd_proced ( nr_atendimento_p INOUT bigint, nr_prescricao_p INOUT bigint, nr_sequencia_prescricao_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, ie_acao_executada_p INOUT bigint, ie_auditoria_p INOUT text, dt_procedimento_p INOUT timestamp, dt_entrada_unidade_p INOUT timestamp, nr_seq_atepacu_p INOUT bigint, tx_procedimento_p INOUT bigint, qt_procedimento_p INOUT bigint, nr_seq_proc_princ_p INOUT bigint, cd_procedimento_princ_p INOUT bigint, nr_sequencia_p INOUT bigint, cd_medico_executor_p INOUT text, ie_funcao_medico_p INOUT text, cd_especialidade_p INOUT text, nr_interno_conta_p INOUT bigint, cd_atividade_prof_bpa_p INOUT text, ie_tipo_atend_bpa_p INOUT text, ie_grupo_atend_bpa_p INOUT text, cd_pessoa_fisica_p INOUT text, nr_seq_exame_p INOUT bigint, nr_seq_proc_interno_p INOUT bigint, cd_setor_atendimento_p INOUT bigint, nr_seq_grupo_rec_p INOUT bigint, nr_seq_cor_exec_p INOUT bigint, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, ie_valor_informado_p INOUT text, cd_motivo_exc_conta_p INOUT bigint, ds_compl_motivo_excon_p INOUT text, nr_minuto_duracao_p INOUT bigint, nr_doc_convenio_p INOUT text, ie_tipo_atendimento_p INOUT bigint, nr_seq_classificacao_p INOUT bigint, ie_via_acesso_p INOUT text, cd_plano_convenio_p INOUT text, dt_entrada_p INOUT timestamp, dt_alta_p INOUT timestamp, dt_conta_p INOUT timestamp, ie_forma_apresentacao_p INOUT bigint, dt_inicio_procedimento_p INOUT timestamp, cd_unidade_medida_p INOUT text, ds_proc_convenio_p INOUT text, ds_proc_interno_conv_p INOUT text, cd_cgc_prestador_p INOUT text, cd_kit_material_p INOUT bigint, cd_funcao_medico_p INOUT text, nr_seq_agenda_p INOUT bigint, ie_tipo_servico_sus_p INOUT text, ie_tipo_ato_sus_p INOUT text, ie_classificacao_p text, cd_medico_resp_p text, ie_ajustar_wdlg_p text, ie_funcao_med_enabled_p text, ie_medico_exe_enabled_p text, ie_visivel_min_duracao_p text, ie_barras_p text, cd_equipamento_p bigint, nr_cirurgia_p bigint, dt_entrada_unid_atend_p timestamp, nr_seq_atepacu_atend_p bigint, ie_proc_prescrito_p text, varie_autitoria_p text, ie_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;
