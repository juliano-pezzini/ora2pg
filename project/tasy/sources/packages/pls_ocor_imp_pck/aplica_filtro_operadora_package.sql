-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ocor_imp_pck.aplica_filtro_operadora ( ie_considera_selecao_p INOUT boolean, ie_incidencia_selecao_regra_p text, ie_incidencia_selecao_filtro_p text, ie_processo_excecao_p text, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, ie_filtro_excecao_p pls_oc_cta_filtro.ie_excecao%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_filtro_p pls_oc_cta_filtro.nr_sequencia%type, nr_seq_lote_protocolo_p pls_protocolo_conta_imp.nr_seq_lote_protocolo%type, nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nr_seq_conta_p pls_conta_imp.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_imp.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_imp.nr_sequencia%type, dt_inicio_vigencia_p pls_oc_cta_combinada.dt_inicio_vigencia%type, dt_fim_vigencia_p pls_oc_cta_combinada.dt_fim_vigencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_guia_referencia_w	pls_util_cta_pck.t_varchar2_table_20;
tb_seq_segurado_w	pls_util_cta_pck.t_number_table;
tb_dt_item_w		pls_util_cta_pck.t_date_table;
tb_dt_item_hora_ini_w	pls_util_cta_pck.t_date_table;
tb_dt_item_hora_fim_w	pls_util_cta_pck.t_date_table;
tb_ie_origem_proced_w	pls_util_cta_pck.t_number_table;
tb_cd_procedimento_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_material_w	pls_util_cta_pck.t_number_table;

dados_restricao_w	varchar(2000);
valor_bind_w		sql_pck.t_dado_bind;
ds_tabelas_w		varchar(20000);
ds_select_w		varchar(20000);
cursor_w		sql_pck.t_cursor;
qt_filtro_processado_w	integer;

c_filtro CURSOR(	nr_seq_filtro_pc	pls_oc_cta_filtro.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_congenere,
		a.nr_seq_congenere_sup,
		a.nr_seq_grupo_cooperativa,
		a.sg_estado_operadora,
		a.ie_tipo_intercambio
	from	pls_oc_cta_filtro_oper a
	where	a.nr_seq_oc_cta_filtro	= nr_seq_filtro_pc;
					
BEGIN
-- gerencia a aplicaaao do filtro de operadora


-- Se nao tiver informaaaes da regra nao sera possavel aplicar os filtros.

if (nr_seq_filtro_p IS NOT NULL AND nr_seq_filtro_p::text <> '') then

	qt_filtro_processado_w := 0;
	
	-- Abrir vetor com todas as combinaaaes de filtro da regra 

	for r_c_filtro in c_filtro(nr_seq_filtro_p) loop
		
		--somente a primeira vez que passar no cursor atualiza apas isto nao atualiza mais

		if (qt_filtro_processado_w = 0) then
			-- Atualizar o campo auxiliar que sera utilizado para sinalizar os registros que foram processados

			CALL CALL CALL CALL CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'F', ie_processo_excecao_p,
							nr_id_transacao_p, nr_seq_filtro_p);
		end if;
		
		begin			
			-- obtam a restriaao do produto

			SELECT * FROM pls_ocor_imp_pck.obter_restricao_operadora(	r_c_filtro.nr_seq_congenere, r_c_filtro.nr_seq_congenere_sup, r_c_filtro.nr_seq_grupo_cooperativa, r_c_filtro.sg_estado_operadora, r_c_filtro.ie_tipo_intercambio, valor_bind_w, ds_tabelas_w) INTO STRICT _ora2pg_r;
 valor_bind_w := _ora2pg_r.valor_bind_p; ds_tabelas_w := _ora2pg_r.ds_tabelas_p;
									
			-- Montar o select padrao juntamente as restriaaes.						

			valor_bind_w := pls_ocor_imp_pck.obter_select_filtro(	ie_considera_selecao_p, ie_incidencia_selecao_regra_p, ie_incidencia_selecao_filtro_p, ie_processo_excecao_p, nr_seq_ocorrencia_p, nr_id_transacao_p, nr_seq_filtro_p, nr_seq_lote_protocolo_p, nr_seq_protocolo_p, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, dt_inicio_vigencia_p, dt_fim_vigencia_p, null, ds_tabelas_w, dados_restricao_w, null, ds_tabelas_w, dados_restricao_w, null, ds_tabelas_w, dados_restricao_w, cd_estabelecimento_p, valor_bind_w);
								
			-- executa o comando sql com os respectivos binds

			valor_bind_w := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w);
			
			loop
				fetch cursor_w bulk collect into	tb_seq_conta_w, tb_seq_conta_proc_w,
									tb_seq_conta_mat_w, tb_guia_referencia_w,
									tb_seq_segurado_w, tb_dt_item_w,
									tb_dt_item_hora_ini_w, tb_dt_item_hora_fim_w,
									tb_ie_origem_proced_w, tb_cd_procedimento_w,
									tb_nr_seq_material_w, tb_seq_selecao_w
				limit pls_util_pck.qt_registro_transacao_w;
				exit when tb_seq_conta_w.count = 0;
				
				-- Insere todos os registros das listas na tabela de seleaao

				CALL CALL CALL CALL CALL pls_ocor_imp_pck.gerencia_selecao_filtro(	'F', ie_regra_excecao_p,
								nr_seq_filtro_p, nr_id_transacao_p,
								'S', tb_seq_conta_w,
								tb_seq_conta_proc_w, tb_seq_conta_mat_w,
								tb_guia_referencia_w, tb_seq_segurado_w,
								tb_dt_item_w, tb_dt_item_hora_ini_w,
								tb_dt_item_hora_fim_w, tb_ie_origem_proced_w,
								tb_cd_procedimento_w, tb_nr_seq_material_w,
								tb_seq_selecao_w);
			end loop;
			close cursor_w;
			
		exception
			when others then
			
			if (cursor_w%isopen) then
				close cursor_w;
			end if;
			-- Tratar erro gerado no sql dinamico, sera inserido registro no log e abortado o processo exibindo mensagem de erro.

			CALL CALL CALL CALL CALL CALL pls_ocor_imp_pck.trata_erro_sql_dinamico(	nr_seq_combinada_p, nr_seq_ocorrencia_p,
							ds_select_w, nr_id_transacao_p,
							nm_usuario_p, 'S');
		end;
		
		qt_filtro_processado_w := qt_filtro_processado_w + 1;
	end loop;
	
	-- se processou algum filtro

	if (qt_filtro_processado_w > 0) then
		-- Atualizar o campo definitivo que sera utilizado para sinalizar os registros que foram processados

		CALL CALL CALL CALL CALL pls_ocor_imp_pck.atualiza_campo_valido(	'F', ie_processo_excecao_p, ie_regra_excecao_p,
					ie_filtro_excecao_p, nr_id_transacao_p,
					nr_seq_filtro_p);
		ie_considera_selecao_p := true;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ocor_imp_pck.aplica_filtro_operadora ( ie_considera_selecao_p INOUT boolean, ie_incidencia_selecao_regra_p text, ie_incidencia_selecao_filtro_p text, ie_processo_excecao_p text, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, ie_filtro_excecao_p pls_oc_cta_filtro.ie_excecao%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_filtro_p pls_oc_cta_filtro.nr_sequencia%type, nr_seq_lote_protocolo_p pls_protocolo_conta_imp.nr_seq_lote_protocolo%type, nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nr_seq_conta_p pls_conta_imp.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_imp.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_imp.nr_sequencia%type, dt_inicio_vigencia_p pls_oc_cta_combinada.dt_inicio_vigencia%type, dt_fim_vigencia_p pls_oc_cta_combinada.dt_fim_vigencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
