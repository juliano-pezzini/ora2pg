-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ocor_imp_pck.grava_ocor_selecao ( nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_sequencia_w	pls_ocorrencia_imp.nr_sequencia%type;

nr_indice_ins_w			integer;
tb_ins_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_ins_nr_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_ins_nr_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_ins_ds_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

nr_indice_upd_w		integer;
tb_upd_nr_sequencia_w	pls_util_cta_pck.t_number_table;
tb_upd_ds_observacao_w	pls_util_cta_pck.t_varchar2_table_4000;
				
-- Retorna a informaaao dos itens que estao na tabela de seleaao.

c_gera_ocor CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	distinct
		x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		x.ds_observacao
	from	pls_oc_cta_selecao_imp	x
	where	x.nr_id_transacao = nr_id_transacao_pc
	and	x.ie_valido = 'S';

BEGIN
-- Gerar ocorrancia para todos os registros que estao como validos na tabela de seleaao


-- chama somente para limpar as variaveis

SELECT * FROM pls_ocor_imp_pck.inserir_ocorrencia_imp(	null, tb_ins_nr_seq_conta_w, tb_ins_nr_seq_conta_proc_w, tb_ins_nr_seq_conta_mat_w, tb_ins_ds_observacao_w, nr_indice_ins_w, null) INTO STRICT _ora2pg_r;
 tb_ins_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ins_nr_seq_conta_proc_w := _ora2pg_r.tb_nr_seq_conta_proc_p; tb_ins_nr_seq_conta_mat_w := _ora2pg_r.tb_nr_seq_conta_mat_p; tb_ins_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_ins_w := _ora2pg_r.nr_indice_p;
SELECT * FROM pls_ocor_imp_pck.atualizar_ocorrencia_imp(	tb_upd_nr_sequencia_w, tb_upd_ds_observacao_w, nr_indice_upd_w, null) INTO STRICT _ora2pg_r;
 	tb_upd_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_upd_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_upd_w := _ora2pg_r.nr_indice_p;

-- grava as ocorrancias

for r_c_gera_ocor in c_gera_ocor(nr_id_transacao_p) loop

	-- verifica se ja existe ocorrancia				

	nr_sequencia_w := pls_ocor_imp_pck.obter_seq_ocorrencia(	nr_seq_ocorrencia_p, r_c_gera_ocor.nr_seq_conta,
							r_c_gera_ocor.nr_seq_conta_proc, r_c_gera_ocor.nr_seq_conta_mat);
	
	-- se a ocorrancia ja existir sa atualiza a observaaao e ativa ela

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		tb_upd_nr_sequencia_w(nr_indice_upd_w) := nr_sequencia_w;
		tb_upd_ds_observacao_w(nr_indice_upd_w) := r_c_gera_ocor.ds_observacao;
	else
		-- dados para a inseraao

		tb_ins_nr_seq_conta_w(nr_indice_ins_w) := r_c_gera_ocor.nr_seq_conta;
		tb_ins_nr_seq_conta_proc_w(nr_indice_ins_w) := r_c_gera_ocor.nr_seq_conta_proc;
		tb_ins_nr_seq_conta_mat_w(nr_indice_ins_w) := r_c_gera_ocor.nr_seq_conta_mat;
		tb_ins_ds_observacao_w(nr_indice_ins_w) := r_c_gera_ocor.ds_observacao;
	end if;
	
	-- se atingiu os registros limite para inseraao

	-- insere no banco e reinicializa as variaveis

	if (nr_indice_ins_w >= pls_util_pck.qt_registro_transacao_w) then
		SELECT * FROM pls_ocor_imp_pck.inserir_ocorrencia_imp(	nr_seq_ocorrencia_p, tb_ins_nr_seq_conta_w, tb_ins_nr_seq_conta_proc_w, tb_ins_nr_seq_conta_mat_w, tb_ins_ds_observacao_w, nr_indice_ins_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_ins_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ins_nr_seq_conta_proc_w := _ora2pg_r.tb_nr_seq_conta_proc_p; tb_ins_nr_seq_conta_mat_w := _ora2pg_r.tb_nr_seq_conta_mat_p; tb_ins_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_ins_w := _ora2pg_r.nr_indice_p;
	else
		nr_indice_ins_w := nr_indice_ins_w + 1;
	end if;
	
	
	-- se atingiu os registros limite para atualizaaao

	-- atualiza no banco e reinicializa as variaveis

	if (nr_indice_upd_w >= pls_util_pck.qt_registro_transacao_w) then
		SELECT * FROM pls_ocor_imp_pck.atualizar_ocorrencia_imp(	tb_upd_nr_sequencia_w, tb_upd_ds_observacao_w, nr_indice_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_upd_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_upd_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_upd_w := _ora2pg_r.nr_indice_p;
	else
		nr_indice_upd_w := nr_indice_upd_w + 1;
	end if;
end loop;

-- se sobrou algo para inserir ou atualizar manda para o banco

SELECT * FROM pls_ocor_imp_pck.inserir_ocorrencia_imp(	nr_seq_ocorrencia_p, tb_ins_nr_seq_conta_w, tb_ins_nr_seq_conta_proc_w, tb_ins_nr_seq_conta_mat_w, tb_ins_ds_observacao_w, nr_indice_ins_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_ins_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ins_nr_seq_conta_proc_w := _ora2pg_r.tb_nr_seq_conta_proc_p; tb_ins_nr_seq_conta_mat_w := _ora2pg_r.tb_nr_seq_conta_mat_p; tb_ins_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_ins_w := _ora2pg_r.nr_indice_p;
SELECT * FROM pls_ocor_imp_pck.atualizar_ocorrencia_imp(	tb_upd_nr_sequencia_w, tb_upd_ds_observacao_w, nr_indice_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_upd_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_upd_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_upd_w := _ora2pg_r.nr_indice_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ocor_imp_pck.grava_ocor_selecao ( nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
