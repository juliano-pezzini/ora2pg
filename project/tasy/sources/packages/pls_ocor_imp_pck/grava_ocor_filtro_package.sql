-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ocor_imp_pck.grava_ocor_filtro ( nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_tipo_aplicacao_ocor_p pls_oc_cta_tipo_validacao.ie_aplicacao_ocorrencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_incidencia_filtro_w	varchar(5);
nr_seq_conta_w		pls_oc_cta_selecao_imp.nr_seq_conta%type;
nr_seq_conta_proc_w	pls_oc_cta_selecao_imp.nr_seq_conta_proc%type;
nr_seq_conta_mat_w	pls_oc_cta_selecao_imp.nr_seq_conta_mat%type;
ds_observacao_w		pls_oc_cta_selecao_imp.ds_observacao%type;
nr_sequencia_w		pls_ocorrencia_imp.nr_sequencia%type;

nr_indice_ins_w			integer;
tb_ins_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_ins_nr_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_ins_nr_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_ins_ds_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

nr_indice_upd_w		integer;
tb_upd_nr_sequencia_w	pls_util_cta_pck.t_number_table;
tb_upd_ds_observacao_w	pls_util_cta_pck.t_varchar2_table_4000;

c_filtro_ocor CURSOR(	nr_seq_regra_pc		pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_filtro,
		coalesce(a.ie_filtro_proc, 'N') ie_filtro_proc,
		coalesce(a.ie_filtro_mat, 'N') ie_filtro_mat
	from	pls_oc_cta_filtro a
	where	a.nr_seq_oc_cta_comb = nr_seq_regra_pc
	and	a.ie_situacao = 'A'
	and 	a.ie_excecao = 'N'
	order by nr_seq_filtro;

c_dado_sel CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_imp.nr_id_transacao%type,
			nr_seq_filtro_pc		pls_oc_cta_filtro.nr_sequencia%type,
			ie_incidencia_filtro_pc		text) FOR
	SELECT	distinct x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		x.ds_observacao
	from	pls_oc_cta_selecao_imp x
	where	x.nr_id_transacao	= nr_id_transacao_pc
	and	x.nr_seq_filtro		= nr_seq_filtro_pc
	and	x.ie_tipo_registro	= ie_incidencia_filtro_pc
	and	x.ie_valido		= 'S'
	and	ie_incidencia_filtro_pc in ('P', 'M')
	
union all

	-- daqui para baixo sao os casos onde o filtro nao a por procedimento ou material

	SELECT	distinct x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		x.ds_observacao
	from	pls_oc_cta_selecao_imp x
	where	x.nr_id_transacao	= nr_id_transacao_pc
	and	x.nr_seq_filtro		= nr_seq_filtro_pc
	and	x.ie_valido		= 'S'
	and	ie_incidencia_filtro_pc not in ('P', 'M');
BEGIN
-- Gerar ocorrancia para todos os registros que estao como validos na tabela de seleaao	de acordo com a incidancia de cada filtro.


-- chama somente para limpar as variaveis

SELECT * FROM pls_ocor_imp_pck.inserir_ocorrencia_imp(	null, tb_ins_nr_seq_conta_w, tb_ins_nr_seq_conta_proc_w, tb_ins_nr_seq_conta_mat_w, tb_ins_ds_observacao_w, nr_indice_ins_w, null) INTO STRICT _ora2pg_r;
 tb_ins_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ins_nr_seq_conta_proc_w := _ora2pg_r.tb_nr_seq_conta_proc_p; tb_ins_nr_seq_conta_mat_w := _ora2pg_r.tb_nr_seq_conta_mat_p; tb_ins_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_ins_w := _ora2pg_r.nr_indice_p;
SELECT * FROM pls_ocor_imp_pck.atualizar_ocorrencia_imp(	tb_upd_nr_sequencia_w, tb_upd_ds_observacao_w, nr_indice_upd_w, null) INTO STRICT _ora2pg_r;
 	tb_upd_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_upd_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_upd_w := _ora2pg_r.nr_indice_p;

-- varre todos os filtros				

for r_c_filtro_ocor in c_filtro_ocor(nr_seq_combinada_p) loop
	
	if (r_c_filtro_ocor.ie_filtro_proc = 'N' and r_c_filtro_ocor.ie_filtro_mat = 'N') then
		-- se o filtro nao define a navel de item, busca a definiaao da regra como um todo para mais abaixo fazer o tratamento

		ie_incidencia_filtro_w := ie_tipo_aplicacao_ocor_p;
		
	elsif (r_c_filtro_ocor.ie_filtro_proc = 'S') then
		ie_incidencia_filtro_w := 'P';
		
	elsif (r_c_filtro_ocor.ie_filtro_mat = 'S') then
		ie_incidencia_filtro_w := 'M';
	end if;
		
	for r_c_dado_sel_w in c_dado_sel(nr_id_transacao_p, r_c_filtro_ocor.nr_seq_filtro, ie_incidencia_filtro_w) loop
		
		-- atribui tudo o que voltou do select				

		nr_seq_conta_w := r_c_dado_sel_w.nr_seq_conta;
		nr_seq_conta_proc_w := r_c_dado_sel_w.nr_seq_conta_proc;
		nr_seq_conta_mat_w := r_c_dado_sel_w.nr_seq_conta_mat;
		ds_observacao_w := r_c_dado_sel_w.ds_observacao;
		
		-- gerar para conta

		if (ie_incidencia_filtro_w = 'C') then
			-- conta nao pode ter item e dependendo da configuraaao dos filtros isso pode vir a ter valor

			-- por isso zeramos tudo aqui

			nr_seq_conta_proc_w := null;
			nr_seq_conta_mat_w := null;
			
		-- gerar para procedimento

		elsif (ie_incidencia_filtro_w = 'P') then
			-- seguranaa

			nr_seq_conta_mat_w := null;
			
		-- gerar para material	

		elsif (ie_incidencia_filtro_w = 'M') then
			-- seguranaa

			nr_seq_conta_proc_w := null;
			
		-- procedimento ou material

		elsif (ie_incidencia_filtro_w = 'PM') then
		
			-- se cair aqui analisa o item em questao e lanaa a ocorrancia para ele

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				-- seguranaa

				nr_seq_conta_mat_w := null;
				
			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				-- seguranaa

				nr_seq_conta_proc_w := null;
			end if;
		-- senao pode ser conforme filtro

		else
			-- se cair aqui analisa o item em questao e lanaa a ocorrancia para ele

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				-- seguranaa

				nr_seq_conta_mat_w := null;
				
			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				-- seguranaa

				nr_seq_conta_proc_w := null;
			else
				-- por conta

				nr_seq_conta_proc_w := null;
				nr_seq_conta_mat_w := null;
			end if;
		end if;
		
		-- verifica se ja existe ocorrancia				

		nr_sequencia_w := pls_ocor_imp_pck.obter_seq_ocorrencia(	nr_seq_ocorrencia_p, nr_seq_conta_w,
								nr_seq_conta_proc_w, nr_seq_conta_mat_w);
	
		-- se a ocorrancia ja existir sa atualiza a observaaao e ativa ela

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			tb_upd_nr_sequencia_w(nr_indice_upd_w) := nr_sequencia_w;
			tb_upd_ds_observacao_w(nr_indice_upd_w) := ds_observacao_w;
		else
			-- dados para a inseraao

			tb_ins_nr_seq_conta_w(nr_indice_ins_w) := nr_seq_conta_w;
			tb_ins_nr_seq_conta_proc_w(nr_indice_ins_w) := nr_seq_conta_proc_w;
			tb_ins_nr_seq_conta_mat_w(nr_indice_ins_w) := nr_seq_conta_mat_w;
			tb_ins_ds_observacao_w(nr_indice_ins_w) := ds_observacao_w;
		end if;
		
		-- se atingiu os registros limite para inseraao

		-- insere no banco e reinicializa as variaveis

		if (nr_indice_ins_w >= pls_util_pck.qt_registro_transacao_w) then

			SELECT * FROM pls_ocor_imp_pck.inserir_ocorrencia_imp(	nr_seq_ocorrencia_p, tb_ins_nr_seq_conta_w, tb_ins_nr_seq_conta_proc_w, tb_ins_nr_seq_conta_mat_w, tb_ins_ds_observacao_w, nr_indice_ins_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_ins_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ins_nr_seq_conta_proc_w := _ora2pg_r.tb_nr_seq_conta_proc_p; tb_ins_nr_seq_conta_mat_w := _ora2pg_r.tb_nr_seq_conta_mat_p; tb_ins_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_ins_w := _ora2pg_r.nr_indice_p;
		else
			nr_indice_ins_w := nr_indice_ins_w + 1;
		end if;
		
		
		-- se atingiu os registros limite para atualizaaao

		-- atualiza no banco e reinicializa as variaveis

		if (nr_indice_upd_w >= pls_util_pck.qt_registro_transacao_w) then
			SELECT * FROM pls_ocor_imp_pck.atualizar_ocorrencia_imp(	tb_upd_nr_sequencia_w, tb_upd_ds_observacao_w, nr_indice_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_upd_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_upd_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_upd_w := _ora2pg_r.nr_indice_p;
		else
			nr_indice_upd_w := nr_indice_upd_w + 1;
		end if;
	end loop;
end loop;

-- se sobrou algo para inserir ou atualizar manda para o banco

SELECT * FROM pls_ocor_imp_pck.inserir_ocorrencia_imp(	nr_seq_ocorrencia_p, tb_ins_nr_seq_conta_w, tb_ins_nr_seq_conta_proc_w, tb_ins_nr_seq_conta_mat_w, tb_ins_ds_observacao_w, nr_indice_ins_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 tb_ins_nr_seq_conta_w := _ora2pg_r.tb_nr_seq_conta_p; tb_ins_nr_seq_conta_proc_w := _ora2pg_r.tb_nr_seq_conta_proc_p; tb_ins_nr_seq_conta_mat_w := _ora2pg_r.tb_nr_seq_conta_mat_p; tb_ins_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_ins_w := _ora2pg_r.nr_indice_p;
SELECT * FROM pls_ocor_imp_pck.atualizar_ocorrencia_imp(	tb_upd_nr_sequencia_w, tb_upd_ds_observacao_w, nr_indice_upd_w, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_upd_nr_sequencia_w := _ora2pg_r.tb_nr_sequencia_p; tb_upd_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; nr_indice_upd_w := _ora2pg_r.nr_indice_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ocor_imp_pck.grava_ocor_filtro ( nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_tipo_aplicacao_ocor_p pls_oc_cta_tipo_validacao.ie_aplicacao_ocorrencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
