-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_ocor_imp_pck.obter_restricao_regra ( nr_seq_lote_protocolo_p pls_protocolo_conta_imp.nr_seq_lote_protocolo%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_incidencia_regra_p text, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, ie_tipo_excecao_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_campo_p out text, ds_tabela_p out text, bind_sql_valor_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

ds_restricao_w		varchar(1500);
ie_excecao_w		varchar(1);
ie_ocorrencia_w		pls_controle_estab.ie_ocorrencia%type := pls_obter_se_controle_estab('GO');


BEGIN

-- Finalidade: Retornar as restriaaes e campos adicionais do select inicial da rotina de

-- ocorrancias combinadas. O select mencionado a responsavel pela leitura de todas as regras

-- que devem ser processadas.


-- por seguranaa faz a inicializaaao das variaveis

ds_campo_p := null;
ds_tabela_p := null;
ds_restricao_w := null;

-- se nao tem uma transacao para a regra gera uma com base na sequence

-- caso ja tenha apenas inclui ela no select (casos de regras de exceaao

if (coalesce(nr_id_transacao_p::text, '') = '') then
	ds_campo_p := 	ds_campo_p || ', ' || pls_util_pck.enter_w ||
			'pls_id_transacao_ocor_imp_seq.nextval nr_id_transacao';
else
	ds_campo_p := 	ds_campo_p || ', ' || pls_util_pck.enter_w ||
			':nr_id_transacao_pc nr_id_transacao';
	bind_sql_valor_p := sql_pck.bind_variable(	':nr_id_transacao_pc', nr_id_transacao_p, bind_sql_valor_p);
end if;

-- tratamento para nao buscar a incidancia da seleaao todas as vezes

-- se for feita uma chamada recursiva para a funaao principal ja se passa de parametro a incidancia da regra

-- que a uma sa para a regra inteira

if (coalesce(ie_incidencia_regra_p::text, '') = '') then
	
	ds_campo_p := 	ds_campo_p || ', ' || pls_util_pck.enter_w ||
			'(pls_tipos_ocor_pck.obter_incidencia_regra_selecao(	regra.nr_seq_ocorrencia, ' || pls_util_pck.enter_w ||
			'							regra.nr_sequencia, ' || pls_util_pck.enter_w ||
			'							:nr_seq_lote_conta_pc, ' || pls_util_pck.enter_w ||
			'							:nr_seq_protocolo_pc,' || pls_util_pck.enter_w ||
			'							null,' || pls_util_pck.enter_w ||
			'							:nr_seq_conta_pc,' || pls_util_pck.enter_w ||
			'							:nr_seq_conta_proc_pc,' || pls_util_pck.enter_w ||
			'							:nr_seq_conta_mat_pc,' || pls_util_pck.enter_w ||
			'							null,' || pls_util_pck.enter_w ||
			'							:cd_estabelecimento_pc,' || pls_util_pck.enter_w ||
			'							''N'')) incidencia_selecao';
	
	bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_lote_conta_pc', nr_seq_lote_protocolo_p, bind_sql_valor_p);
	bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_protocolo_pc', nr_seq_protocolo_p, bind_sql_valor_p);
	bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_conta_pc', nr_seq_conta_p, bind_sql_valor_p);
	bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_conta_proc_pc', nr_seq_conta_proc_p, bind_sql_valor_p);
	bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_conta_mat_pc', nr_seq_conta_mat_p, bind_sql_valor_p);
	bind_sql_valor_p := sql_pck.bind_variable(	':cd_estabelecimento_pc', cd_estabelecimento_p, bind_sql_valor_p);
else
	ds_campo_p := 	ds_campo_p || ', ' || pls_util_pck.enter_w ||
			':ie_incidencia_sel incidencia_selecao';
	bind_sql_valor_p := sql_pck.bind_variable(	':ie_incidencia_sel', ie_incidencia_regra_p, bind_sql_valor_p);
end if;

-- se for exceaao

if (ie_tipo_excecao_p IS NOT NULL AND ie_tipo_excecao_p::text <> '') then

	ie_excecao_w := 'S';
	
	-- exceaao para regra filtra apenas o campo nr_seq_combinada

	if (ie_tipo_excecao_p = 'ER') then
		-- Adiciona a restriaao para buscar as regras de exceaao realacionadas a regra que esta sendo verificada;

		ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
					'and	regra.nr_seq_ocorrencia is not null ' || pls_util_pck.enter_w || 
					'and	regra.nr_seq_combinada = :nr_seq_combinada ';
		bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_combinada', nr_seq_combinada_p, bind_sql_valor_p);
	end if;
	
	-- exceaao geral filtra apenas o campo nr_seq_ocorrencia

	if (ie_tipo_excecao_p = 'EG') then
		-- Adiciona a restriaao para pegar apenas as regras de exceaao geral da ocorrancia.

		ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
					'and	regra.nr_seq_ocorrencia = :nr_seq_ocorrencia ' || pls_util_pck.enter_w ||
					'and	regra.nr_seq_combinada is null ';
		bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_ocorrencia', nr_seq_ocorrencia_p, bind_sql_valor_p);
	end if;
	
	-- Restriaao para evitar de processar uma regra invalida de exceaao se nao os registros ficam como sendo invalidos na tabela de selecao.

	-- Foi criada a variavel para nao necessitar escrever a restriaao em dois lugares diferentes.

	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
				'and	(regra.ie_utiliza_filtro = ''N'' or ' || pls_util_pck.enter_w || 
				'	((regra.ie_utiliza_filtro = ''S'' or val.cd_validacao = 1) and ' || pls_util_pck.enter_w || 
				'	exists ( ' || pls_util_pck.enter_w || 
				'		select	0 ' || pls_util_pck.enter_w || 
				'		from	pls_oc_cta_filtro filtro ' || pls_util_pck.enter_w || 
				'		where	filtro.nr_seq_oc_cta_comb = regra.nr_sequencia ' || pls_util_pck.enter_w || 
				'		and	filtro.ie_situacao = ''A''))) ';
else
	ie_excecao_w := 'N';
	
	-- se o tipo de exceaao for nulo e for informada uma ocorrancia, significa que deve apenas ser consistida a ocorrancia em questao

	if (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') then
		-- Adiciona a restriaao pelo evento da geraaao;

		ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
					'and	regra.nr_seq_ocorrencia = :nr_seq_ocorrencia ';
		bind_sql_valor_p := sql_pck.bind_variable(	':nr_seq_ocorrencia', nr_seq_ocorrencia_p, bind_sql_valor_p);
	end if;
end if;

-- filtra a exceaao S ou N

ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
			'and	regra.ie_excecao = :ie_excecao ';
bind_sql_valor_p := sql_pck.bind_variable(	':ie_excecao', ie_excecao_w, bind_sql_valor_p);

-- Verificar o estabelecimento de onde as regras devem buscadas.

if ((cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and
	 coalesce(ie_tipo_excecao_p, 'X') != 'ER') and (ie_ocorrencia_w = 'S') then
	-- Adiciona a restriaao pelo estabelecimento da geraaao;

	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w || 
				'and	regra.cd_estabelecimento = :cd_estabelecimento ';
	bind_sql_valor_p := sql_pck.bind_variable(	':cd_estabelecimento', cd_estabelecimento_p, bind_sql_valor_p);
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_ocor_imp_pck.obter_restricao_regra ( nr_seq_lote_protocolo_p pls_protocolo_conta_imp.nr_seq_lote_protocolo%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_incidencia_regra_p text, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, ie_tipo_excecao_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_campo_p out text, ds_tabela_p out text, bind_sql_valor_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
