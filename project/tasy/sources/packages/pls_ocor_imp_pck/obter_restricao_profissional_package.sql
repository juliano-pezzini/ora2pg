-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_ocor_imp_pck.obter_restricao_profissional ( cd_medico_p pls_oc_cta_filtro_prof.cd_medico%type, nr_seq_conselho_p pls_oc_cta_filtro_prof.nr_seq_conselho%type, nr_seq_grau_partic_p pls_oc_cta_filtro_prof.nr_seq_grau_partic%type, ie_medico_cooperado_p pls_oc_cta_filtro_prof.ie_medico_cooperado%type, ie_medico_p pls_oc_cta_filtro_prof.ie_medico%type, nr_seq_cbo_saude_p pls_oc_cta_filtro_prof.nr_seq_cbo_saude%type, ie_filtro_mat_p pls_oc_cta_filtro.ie_filtro_mat%type, ie_incidencia_selecao_regra_p text, ie_incidencia_selecao_filtro_p text, ie_processo_excecao_p text, ds_tabelas_p INOUT text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE
					
					
dados_restricao_w	varchar(2500);
ds_alias_conta_w	varchar(10);
ds_alias_partic_w	varchar(10);
ds_alias_proc_w		varchar(10);
ds_tabelas_w		varchar(1000);
ie_valor_filtro_w	boolean := false;


BEGIN
-- Inicializar o retorno

dados_restricao_w := null;

--Obter alias das tabelas

ds_alias_conta_w := pls_ocor_imp_pck.obter_alias_tabela('pls_conta_imp');
ds_alias_partic_w := pls_ocor_imp_pck.obter_alias_tabela('pls_conta_item_equipe_imp');
ds_alias_proc_w := pls_ocor_imp_pck.obter_alias_tabela('pls_conta_proc_imp');

--Filtros de Solicitante

if (ie_medico_p = 'S') then
	-- Cadigo do madico

	if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
	
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_conta_w || '.cd_profissional_solic_conv = :cd_medico_pc';
		
		valor_bind_p := sql_pck.bind_variable(	':cd_medico_pc', cd_medico_p, valor_bind_p);
	end if;
	
	-- Conselho do profissional 

	if (nr_seq_conselho_p IS NOT NULL AND nr_seq_conselho_p::text <> '') then
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_conta_w || '.nr_seq_cons_prof_solic_conv = :nr_seq_conselho_pc ';
					
		valor_bind_p := sql_pck.bind_variable(	':nr_seq_conselho_pc', nr_seq_conselho_p, valor_bind_p);
	end if;
	
	-- Tipo de madico ( Cooperado ou Nao cooperado) se for nulo ou for A(Ambos)  nao adiciona a restriaao

	if (ie_medico_cooperado_p <> 'A') then
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_conta_w || '.cd_prof_coop_solic_conv = :ie_medico_cooperado_pc ';
					
		valor_bind_p := sql_pck.bind_variable(	':ie_medico_cooperado_pc', ie_medico_cooperado_p, valor_bind_p);
	end if;
	
	if (nr_seq_cbo_saude_p IS NOT NULL AND nr_seq_cbo_saude_p::text <> '') then
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_conta_w || '.nr_seq_cbo_prof_solic_conv = :nr_seq_cbo_prof_solic_conv ';
					
		valor_bind_p := sql_pck.bind_variable(	':nr_seq_cbo_prof_solic_conv', nr_seq_cbo_saude_p, valor_bind_p);
	end if;
	
--Filtros de Executor	

elsif (ie_medico_p = 'E') then
	-- Cadigo do madico

	if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
	
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_conta_w || '.cd_profissional_exec_conv = :cd_medico_pc';
		
		valor_bind_p := sql_pck.bind_variable(	':cd_medico_pc', cd_medico_p, valor_bind_p);
	end if;
	
	-- Conselho do profissional 

	if (nr_seq_conselho_p IS NOT NULL AND nr_seq_conselho_p::text <> '') then
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_conta_w || '.nr_seq_cons_prof_exec_conv = :nr_seq_conselho_pc ';
					
		valor_bind_p := sql_pck.bind_variable(	':nr_seq_conselho_pc', nr_seq_conselho_p, valor_bind_p);
	end if;
		
	-- Tipo de madico ( Cooperado ou Nao cooperado) se for nulo ou for A(Ambos)  nao adiciona a restriaao

	if (ie_medico_cooperado_p <> 'A') then
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_conta_w || '.cd_profissional_coop_exec_conv = :ie_medico_cooperado_pc ';
					
		valor_bind_p := sql_pck.bind_variable(	':ie_medico_cooperado_pc', ie_medico_cooperado_p, valor_bind_p);
	end if;
	
	if (nr_seq_cbo_saude_p IS NOT NULL AND nr_seq_cbo_saude_p::text <> '') then
		dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_conta_w || '.nr_seq_cbo_prof_exec_conv = :nr_seq_cbo_prof_exec_conv ';
					
		valor_bind_p := sql_pck.bind_variable(	':nr_seq_cbo_prof_exec_conv', nr_seq_cbo_saude_p, valor_bind_p);
	end if;
	
-- Participante

-- Se for a incidancia da regra pela conta sera verificado todos os procedimentos da conta, se for por procedimento sera olhado para os participantes dos procedimentos em especafico apenas. Se for por material nao faz nada.

--Para considerar um filtro de profissional participante na mesmo filtro nao pode ter um filtro de material	

elsif	(ie_medico_p = 'P' AND ie_filtro_mat_p != 'S') then

	if ( ie_incidencia_selecao_filtro_p = 'C') and (not(ie_incidencia_selecao_regra_p = 'PM' and ie_processo_excecao_p = 'N')) and
		 (not ((ie_incidencia_selecao_filtro_p = 'P' and ie_processo_excecao_p = 'S') or (ie_incidencia_selecao_regra_p = 'P'))) then
	
		--Monta Ligaaao das tabelas PLS_SEGURADO e PLS_CONTRATO

		ds_tabelas_w	:= ds_tabelas_w || ', ' || pls_util_pck.enter_w ||
				'	pls_conta_proc_imp ' || ds_alias_proc_w || ', ' || pls_util_pck.enter_w ||
				'	pls_conta_item_equipe_imp ' || ds_alias_partic_w;
				
		dados_restricao_w	:= dados_restricao_w || 'and ' || ds_alias_proc_w || '.nr_seq_conta = ' || ds_alias_conta_w || '.nr_sequencia ' || pls_util_pck.enter_w ||
				'and	' || ds_alias_partic_w || '.nr_seq_conta_proc = ' || ds_alias_proc_w || '.nr_sequencia ' || pls_util_pck.enter_w;

		-- Cadigo do madico

		if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
		
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
							'and	' || ds_alias_partic_w || '.cd_profissional_conv = :cd_medico_pc';
			
			valor_bind_p := sql_pck.bind_variable(	':cd_medico_pc', cd_medico_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		-- Conselho do profissional 

		if (nr_seq_conselho_p IS NOT NULL AND nr_seq_conselho_p::text <> '') then
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_partic_w || '.nr_seq_cons_profissional_conv = :nr_seq_conselho_pc ';
						
			valor_bind_p := sql_pck.bind_variable(	':nr_seq_conselho_pc', nr_seq_conselho_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		-- Grau de participacao

		if (nr_seq_grau_partic_p IS NOT NULL AND nr_seq_grau_partic_p::text <> '') then
			dados_restricao_w :=	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_partic_w || '.nr_seq_grau_partic_conv = :nr_seq_grau_partic_pc';				

			valor_bind_p := sql_pck.bind_variable(	':nr_seq_grau_partic_pc', nr_seq_grau_partic_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		-- Tipo de madico ( Cooperado ou Nao cooperado) se for nulo ou for A(Ambos)  nao adiciona a restriaao

		if (ie_medico_cooperado_p <> 'A') then
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_partic_w || '.cd_profissional_coop_conv = :ie_medico_cooperado_pc ';
					
			valor_bind_p := sql_pck.bind_variable(	':ie_medico_cooperado_pc', ie_medico_cooperado_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		if (nr_seq_cbo_saude_p IS NOT NULL AND nr_seq_cbo_saude_p::text <> '') then
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_partic_w || '.nr_seq_cbo_profissional_conv = :nr_seq_cbo_profissional_conv ';
						
			valor_bind_p := sql_pck.bind_variable(	':nr_seq_cbo_profissional_conv', nr_seq_cbo_saude_p, valor_bind_p);
		end if;
		
	--Caso a incidancia nao seja por conta, faz a ligaaao da PLS_CONTA_ITEM_EQUIPE_IMP direto da PLS_CONTA_PROC_IMP	

	else
		--Monta Ligaaao das tabelas PLS_SEGURADO e PLS_CONTRATO

		ds_tabelas_w	:= ds_tabelas_w || ', ' || pls_util_pck.enter_w ||
				'	pls_conta_item_equipe_imp ' || ds_alias_partic_w;
				
		dados_restricao_w	:= dados_restricao_w || 'and ' || ds_alias_partic_w || '.nr_seq_conta_proc = ' || ds_alias_proc_w || '.nr_sequencia ' || pls_util_pck.enter_w;

		-- Cadigo do madico

		if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
		
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
							'and	' || ds_alias_partic_w || '.cd_profissional_conv = :cd_medico_pc';
			
			valor_bind_p := sql_pck.bind_variable(	':cd_medico_pc', cd_medico_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		-- Conselho do profissional 

		if (nr_seq_conselho_p IS NOT NULL AND nr_seq_conselho_p::text <> '') then
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_partic_w || '.nr_seq_cons_profissional_conv = :nr_seq_conselho_pc ';
						
			valor_bind_p := sql_pck.bind_variable(	':nr_seq_conselho_pc', nr_seq_conselho_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		-- Grau de participacao

		if (nr_seq_grau_partic_p IS NOT NULL AND nr_seq_grau_partic_p::text <> '') then
			dados_restricao_w :=	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_partic_w || '.nr_seq_grau_partic_conv = :nr_seq_grau_partic_pc';				

			valor_bind_p := sql_pck.bind_variable(	':nr_seq_grau_partic_pc', nr_seq_grau_partic_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		-- Tipo de madico ( Cooperado ou Nao cooperado) se for nulo ou for A(Ambos)  nao adiciona a restriaao

		if (ie_medico_cooperado_p <> 'A') then
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_partic_w || '.cd_profissional_coop_conv = :ie_medico_cooperado_pc ';
					
			valor_bind_p := sql_pck.bind_variable(	':ie_medico_cooperado_pc', ie_medico_cooperado_p, valor_bind_p);
			ie_valor_filtro_w := true;
		end if;
		
		if (nr_seq_cbo_saude_p IS NOT NULL AND nr_seq_cbo_saude_p::text <> '') then
			dados_restricao_w := 	dados_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_partic_w || '.nr_seq_cbo_profissional_conv = :nr_seq_cbo_profissional_conv ';
						
			valor_bind_p := sql_pck.bind_variable(	':nr_seq_cbo_profissional_conv', nr_seq_cbo_saude_p, valor_bind_p);
		end if;
			
	end if;
	
	--Caso seja cadastrado um filtro para profissional em branco nao precisa relacionar as tabelas pls_conta_proc_imp e pls_conta_item_equipe_imp

	if (ie_valor_filtro_w = false) then
		dados_restricao_w := null;
		ds_tabelas_w   	  := null;
	end if;
end if;

ds_tabelas_p := ds_tabelas_w;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_ocor_imp_pck.obter_restricao_profissional ( cd_medico_p pls_oc_cta_filtro_prof.cd_medico%type, nr_seq_conselho_p pls_oc_cta_filtro_prof.nr_seq_conselho%type, nr_seq_grau_partic_p pls_oc_cta_filtro_prof.nr_seq_grau_partic%type, ie_medico_cooperado_p pls_oc_cta_filtro_prof.ie_medico_cooperado%type, ie_medico_p pls_oc_cta_filtro_prof.ie_medico%type, nr_seq_cbo_saude_p pls_oc_cta_filtro_prof.nr_seq_cbo_saude%type, ie_filtro_mat_p pls_oc_cta_filtro.ie_filtro_mat%type, ie_incidencia_selecao_regra_p text, ie_incidencia_selecao_filtro_p text, ie_processo_excecao_p text, ds_tabelas_p INOUT text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
