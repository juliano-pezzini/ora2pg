-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_ocor_imp_pck.obter_restricao_produto ( nr_seq_tipo_acomodacao_p pls_oc_cta_filtro_produto.nr_seq_tipo_acomodacao%type, ie_preco_p pls_oc_cta_filtro_produto.ie_preco%type, nr_seq_grupo_produto_p pls_oc_cta_filtro_produto.nr_seq_grupo_produto%type, nr_seq_plano_p pls_oc_cta_filtro_produto.nr_seq_plano%type, nr_seq_categoria_p pls_oc_cta_filtro_produto.nr_seq_categoria%type, ie_regulamentacao_p pls_oc_cta_filtro_produto.ie_regulamentacao%type, ds_tabelas_p INOUT text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

ds_alias_conta_w	varchar(5);
ds_alias_seg_w		varchar(5);
ds_alias_plano_w	varchar(5);

ds_restricao_w		varchar(1000);
ds_tabelas_w		varchar(1000);
ie_valor_filtro_w	boolean := false;	



BEGIN
-- Monta as restriaaes e binds dos campos de filtro de produto

ds_restricao_w := null;
ds_tabelas_w := null;

-- obtam o alias da tabela 

ds_alias_conta_w := pls_ocor_imp_pck.obter_alias_tabela('pls_conta_imp');
ds_alias_seg_w := 'seg';
ds_alias_plano_w := 'plano';

--Monta Ligaaao das tabelas PLS_SEGURADO e PLS_PLANO

ds_tabelas_w	:= ds_tabelas_w || ', ' || pls_util_pck.enter_w ||
			'	pls_segurado ' || ds_alias_seg_w || ', ' || pls_util_pck.enter_w ||
			'	pls_plano ' || ds_alias_plano_w;
			
ds_restricao_w	:= ds_restricao_w || 'and ' || ds_alias_seg_w || '.nr_sequencia = ' || ds_alias_conta_w || '.nr_seq_segurado_conv ' || pls_util_pck.enter_w ||
			'and	' || ds_alias_plano_w || '.nr_sequencia = ' || ds_alias_seg_w || '.nr_seq_plano ' || pls_util_pck.enter_w; 			

-- Acomodaaao

if (nr_seq_tipo_acomodacao_p IS NOT NULL AND nr_seq_tipo_acomodacao_p::text <> '') then
	
	ds_restricao_w := 	ds_restricao_w || pls_util_pck.enter_w ||
				'and	exists	(select	1' || pls_util_pck.enter_w ||
				'		from	pls_plano_acomodacao x ' || pls_util_pck.enter_w ||
				'		where	x.nr_seq_plano = ' || ds_alias_plano_w || '.nr_sequencia ' || pls_util_pck.enter_w ||
				'		and	x.nr_seq_tipo_acomodacao = :nr_seq_tipo_acomodacao_pc)';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_tipo_acomodacao_pc', nr_seq_tipo_acomodacao_p, valor_bind_p);
	ie_valor_filtro_w := true;
end if;
	
-- Formaaao de preao

if (ie_preco_p IS NOT NULL AND ie_preco_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_plano_w || '.ie_preco = :ie_preco_pc ';

	valor_bind_p := sql_pck.bind_variable(	':ie_preco_pc', ie_preco_p, valor_bind_p);
	ie_valor_filtro_w := true;
end if;
	
-- Grupo de produto

if (nr_seq_grupo_produto_p IS NOT NULL AND nr_seq_grupo_produto_p::text <> '') then
	
	ds_restricao_w := 	ds_restricao_w || pls_util_pck.enter_w ||
				'and	exists	(select	1' || pls_util_pck.enter_w ||
				'		from	pls_preco_produto x ' || pls_util_pck.enter_w ||
				'		where	x.nr_seq_plano = ' || ds_alias_plano_w || '.nr_sequencia ' || pls_util_pck.enter_w ||
				'		and	x.nr_seq_grupo = :nr_seq_grupo_produto_pc)';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_grupo_produto_pc', nr_seq_grupo_produto_p, valor_bind_p);
	ie_valor_filtro_w := true;
end if;

-- Produto

if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_plano_w || '.nr_sequencia = :nr_seq_plano_pc ';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_plano_pc', nr_seq_plano_p, valor_bind_p);
	ie_valor_filtro_w := true;
end if;

-- Regulamentacao

if (ie_regulamentacao_p IS NOT NULL AND ie_regulamentacao_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
			'and	' || ds_alias_plano_w || '.ie_regulamentacao = :ie_regulamentacao ';

	valor_bind_p := sql_pck.bind_variable(	':ie_regulamentacao', ie_regulamentacao_p, valor_bind_p);
end if;

-- Categoria

if (nr_seq_categoria_p IS NOT NULL AND nr_seq_categoria_p::text <> '') then
	
	ds_restricao_w := 	ds_restricao_w || pls_util_pck.enter_w ||
				'and	exists	(select	1' || pls_util_pck.enter_w ||
				'		from	pls_plano_acomodacao y ' || pls_util_pck.enter_w ||
				'		where	y.nr_seq_plano = ' || ds_alias_plano_w || '.nr_sequencia ' || pls_util_pck.enter_w ||
				'		and	y.nr_seq_categoria = :nr_seq_categoria_pc)';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_categoria_pc', nr_seq_categoria_p, valor_bind_p);
	ie_valor_filtro_w := true;
end if;

--Caso seja cadastrado um filtro para produto em branco nao precisa relacionar as tabelas pls_segurado e pls_plano

if (ie_valor_filtro_w = false) then
	ds_restricao_w := null;
	ds_tabelas_w   := null;
end if;
	
ds_tabelas_p	:= ds_tabelas_w;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_ocor_imp_pck.obter_restricao_produto ( nr_seq_tipo_acomodacao_p pls_oc_cta_filtro_produto.nr_seq_tipo_acomodacao%type, ie_preco_p pls_oc_cta_filtro_produto.ie_preco%type, nr_seq_grupo_produto_p pls_oc_cta_filtro_produto.nr_seq_grupo_produto%type, nr_seq_plano_p pls_oc_cta_filtro_produto.nr_seq_plano%type, nr_seq_categoria_p pls_oc_cta_filtro_produto.nr_seq_categoria%type, ie_regulamentacao_p pls_oc_cta_filtro_produto.ie_regulamentacao%type, ds_tabelas_p INOUT text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
