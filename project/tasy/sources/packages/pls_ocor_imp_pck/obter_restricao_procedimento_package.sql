-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_ocor_imp_pck.obter_restricao_procedimento ( cd_procedimento_p pls_oc_cta_filtro_proc.cd_procedimento%type, ie_origem_proced_p pls_oc_cta_filtro_proc.ie_origem_proced%type, cd_area_procedimento_p pls_oc_cta_filtro_proc.cd_area_procedimento%type, cd_especialidade_p pls_oc_cta_filtro_proc.cd_especialidade%type, cd_grupo_proc_p pls_oc_cta_filtro_proc.cd_grupo_proc%type, nr_seq_estrutura_p pls_oc_cta_filtro_proc.nr_seq_estrutura%type, ie_tipo_desp_proc_p pls_oc_cta_filtro_proc.ie_tipo_desp_proc%type, nr_seq_grupo_rec_p pls_oc_cta_filtro_proc.nr_seq_grupo_rec%type, nr_seq_grupo_servico_p pls_oc_cta_filtro_proc.nr_seq_grupo_servico%type, dt_dia_semana_p pls_oc_cta_filtro_proc.dt_dia_semana%type, ie_feriado_p pls_oc_cta_filtro_proc.ie_feriado%type, ie_tipo_feriado_p pls_oc_cta_filtro_proc.ie_tipo_feriado%type, hr_inicial_p pls_oc_cta_filtro_proc.hr_inicial%type, hr_final_p pls_oc_cta_filtro_proc.hr_final%type, vl_minimo_item_p pls_oc_cta_filtro_proc.vl_minimo_item%type, vl_max_item_p pls_oc_cta_filtro_proc.vl_max_item%type, ie_via_acesso_p pls_oc_cta_filtro_proc.ie_via_acesso%type, valor_bind_p INOUT sql_pck.t_dado_bind, ds_campos_p INOUT text, ds_campos_mat_p INOUT text) AS $body$
DECLARE

					
ds_alias_conta_w	varchar(5);
ds_alias_proc_w		varchar(5);

ds_restricao_w		varchar(5000);
ds_campos_w		varchar(1000);
ds_campos_mat_w		varchar(1000);


BEGIN
-- Monta as restriaaes e binds dos campos de filtro de procedimento

ds_restricao_w := null;
ds_campos_w := null;

-- obtam o alias da tabela 

ds_alias_conta_w := pls_ocor_imp_pck.obter_alias_tabela('pls_conta_imp');
ds_alias_proc_w  := pls_ocor_imp_pck.obter_alias_tabela('pls_conta_proc_imp');

--Caso a incidancia seja PM precisa criar o campo para o union do material nulo

ds_campos_mat_w  := ',' || pls_util_pck.enter_w || ' null hr_inicial ,' || pls_util_pck.enter_w ||
			' null hr_final ';
			
--Cadigo do procedimento

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
	
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_proc_w || '.ie_origem_proced_conv = :ie_origem_proced_pc' || pls_util_pck.enter_w ||
						'and	' || ds_alias_proc_w || '.cd_procedimento_conv = :cd_procedimento_pc';
						
	valor_bind_p := sql_pck.bind_variable(	':ie_origem_proced_pc', ie_origem_proced_p, valor_bind_p);
	valor_bind_p := sql_pck.bind_variable(	':cd_procedimento_pc', cd_procedimento_p, valor_bind_p);
end if;

-- Grupo

if (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	exists (select	1 ' || pls_util_pck.enter_w ||
						'		from	estrutura_procedimento_v p2' || pls_util_pck.enter_w ||
						'		where	p2.ie_origem_proced = ' || ds_alias_proc_w || '.ie_origem_proced_conv' || pls_util_pck.enter_w ||
						'		and	p2.cd_procedimento = ' || ds_alias_proc_w || '.cd_procedimento_conv' || pls_util_pck.enter_w ||
						'		and	p2.cd_grupo_proc = :cd_grupo_proc_pc' || pls_util_pck.enter_w ||
						'		)';
	
	valor_bind_p := sql_pck.bind_variable(	':cd_grupo_proc_pc', cd_grupo_proc_p, valor_bind_p);
end if;

-- Especialidade

if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	exists (select	1 ' || pls_util_pck.enter_w ||
						'		from	estrutura_procedimento_v p3' || pls_util_pck.enter_w ||
						'		where	p3.ie_origem_proced = ' || ds_alias_proc_w || '.ie_origem_proced_conv' || pls_util_pck.enter_w ||
						'		and	p3.cd_procedimento = ' || ds_alias_proc_w || '.cd_procedimento_conv' || pls_util_pck.enter_w ||
						'		and	p3.cd_especialidade = :cd_especialidade_pc' || pls_util_pck.enter_w ||
						'		)';
	
	valor_bind_p := sql_pck.bind_variable(	':cd_especialidade_pc', cd_especialidade_p, valor_bind_p);
end if;

-- area procedimento

if (cd_area_procedimento_p IS NOT NULL AND cd_area_procedimento_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	exists (select	1 ' || pls_util_pck.enter_w ||
						'		from	estrutura_procedimento_v p4' || pls_util_pck.enter_w ||
						'		where	p4.ie_origem_proced = ' || ds_alias_proc_w || '.ie_origem_proced_conv' || pls_util_pck.enter_w ||
						'		and	p4.cd_procedimento = ' || ds_alias_proc_w || '.cd_procedimento_conv' || pls_util_pck.enter_w ||
						'		and	p4.cd_area_procedimento = :cd_area_procedimento_pc' || pls_util_pck.enter_w ||
						'		)';

	valor_bind_p := sql_pck.bind_variable(	':cd_area_procedimento_pc', cd_area_procedimento_p, valor_bind_p);
end if;

-- Estrutura

if (nr_seq_estrutura_p IS NOT NULL AND nr_seq_estrutura_p::text <> '') then
	
	-- gerencia a atualizaaao da tabela TM

	CALL pls_gerencia_upd_obj_pck.atualizar_objetos('tasy', 'PLS_OCOR_IMP_PCK.OBTER_RESTRICAO_PROCEDIMENTO()', 'PLS_ESTRUTURA_OCOR_TM');
	
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
				'and	exists(	select	1 ' || pls_util_pck.enter_w ||
				'		from	pls_estrutura_ocor_tm est '|| pls_util_pck.enter_w ||
				'		where	est.nr_seq_estrutura = :nr_seq_estrutura_pc '|| pls_util_pck.enter_w ||
				'		and	est.cd_procedimento = '||ds_alias_proc_w||'.cd_procedimento_conv '|| pls_util_pck.enter_w ||
				'		and	est.ie_origem_proced = '||ds_alias_proc_w||'.ie_origem_proced_conv'|| pls_util_pck.enter_w ||
				'	) ';
	
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_estrutura_pc', nr_seq_estrutura_p, valor_bind_p);
end if;

-- Tipo de despesa

if (ie_tipo_desp_proc_p IS NOT NULL AND ie_tipo_desp_proc_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_proc_w || '.ie_tipo_despesa_conv = :ie_tipo_despesa_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':ie_tipo_despesa_pc', ie_tipo_desp_proc_p, valor_bind_p);
end if;

-- Grupo receita

if (nr_seq_grupo_rec_p IS NOT NULL AND nr_seq_grupo_rec_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	exists (select	1 ' || pls_util_pck.enter_w ||
						'		from	procedimento p1' || pls_util_pck.enter_w ||
						'		where	p1.ie_origem_proced = ' || ds_alias_proc_w || '.ie_origem_proced_conv' || pls_util_pck.enter_w ||
						'		and	p1.cd_procedimento = ' || ds_alias_proc_w || '.cd_procedimento_conv' || pls_util_pck.enter_w ||
						'		and	p1.nr_seq_grupo_rec = :nr_seq_grupo_rec_pc' || pls_util_pck.enter_w ||
						'		)';

	valor_bind_p := sql_pck.bind_variable(	':nr_seq_grupo_rec_pc', nr_seq_grupo_rec_p, valor_bind_p);
end if;

-- Grupo de serviao

if (nr_seq_grupo_servico_p IS NOT NULL AND nr_seq_grupo_servico_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and exists (	select	1' || pls_util_pck.enter_w ||
						'		from	pls_grupo_servico_tm grupox' || pls_util_pck.enter_w ||
						'		where	grupox.nr_seq_grupo_servico = :nr_seq_grupo_pc' || pls_util_pck.enter_w ||
						'		and	grupox.ie_origem_proced = ' || ds_alias_proc_w || '.ie_origem_proced_conv' || pls_util_pck.enter_w ||
						'		and	grupox.cd_procedimento = ' || ds_alias_proc_w || '.cd_procedimento_conv)';
							
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_grupo_pc', nr_seq_grupo_servico_p, valor_bind_p);
end if;

-- Dia semana

if (dt_dia_semana_p IS NOT NULL AND dt_dia_semana_p::text <> '') then
	if (dt_dia_semana_p <> 9) then
		ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_proc_w || '.dt_dia_semana_exec_conv = :dt_dia_semana_pc ';
				
		valor_bind_p := sql_pck.bind_variable(	':dt_dia_semana_pc', dt_dia_semana_p, valor_bind_p);		
	else
		ds_restricao_w := 	ds_restricao_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_proc_w || '.dt_dia_semana_exec_conv in (2,3,4,5,6) ';
	end if;	
end if;

-- Feriado

if (ie_feriado_p = 'S') then
		ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	exists	(select	1' || pls_util_pck.enter_w ||
						'		from	feriado xy' || pls_util_pck.enter_w ||
						'		where	xy.cd_estabelecimento = ' || ds_alias_conta_w || '.cd_estabelecimento ' || pls_util_pck.enter_w ||
						'		and	xy.dt_feriado = ' || ds_alias_proc_w || '.dt_execucao_trunc_conv)';
	
end if;

-- Tipo feriado

if (ie_tipo_feriado_p IS NOT NULL AND ie_tipo_feriado_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	exists	(select	1' || pls_util_pck.enter_w ||
						'		from	feriado xz' || pls_util_pck.enter_w ||
						'		where	xz.cd_estabelecimento = ' || ds_alias_conta_w || '.cd_estabelecimento' || pls_util_pck.enter_w ||
						'		and	xz.dt_feriado = ' || ds_alias_proc_w || '.dt_execucao_trunc_conv' || pls_util_pck.enter_w ||
						'		and	xz.ie_tipo_feriado = :ie_tipo_feriado_pc)';
						
	valor_bind_p := sql_pck.bind_variable(	':ie_tipo_feriado_pc', ie_tipo_feriado_p, valor_bind_p);
end if;

-- Hora inicial

if (hr_inicial_p IS NOT NULL AND hr_inicial_p::text <> '') then
	ds_campos_w :=	ds_campos_w || ',' || pls_util_pck.enter_w ||
						' pls_manipulacao_datas_pck.obter_hora_data_atual( ' || ds_alias_proc_w || '.dt_inicio) hr_inicial ';
else
	ds_campos_w :=	ds_campos_w || ',' || pls_util_pck.enter_w ||
						' null hr_inicial ';
end if;

-- Hora final

if (hr_final_p IS NOT NULL AND hr_final_p::text <> '') then
	ds_campos_w :=	ds_campos_w || ',' || pls_util_pck.enter_w ||
						' pls_manipulacao_datas_pck.obter_hora_data_atual( ' || ds_alias_proc_w || '.dt_fim) hr_final ';
else
	ds_campos_w :=	ds_campos_w || ',' || pls_util_pck.enter_w ||
						' null hr_final ';
end if;

-- Valor manimo

if (vl_minimo_item_p IS NOT NULL AND vl_minimo_item_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_proc_w || '.vl_total <= :vl_minimo_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':vl_minimo_pc', vl_minimo_item_p, valor_bind_p);
end if;

-- Valor maximo

if (vl_max_item_p IS NOT NULL AND vl_max_item_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and	' || ds_alias_proc_w || '.vl_total >= :vl_maximo_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':vl_maximo_pc', vl_max_item_p, valor_bind_p);
end if;

-- Via de acesso

if (ie_via_acesso_p IS NOT NULL AND ie_via_acesso_p::text <> '') then
	ds_restricao_w :=	ds_restricao_w || pls_util_pck.enter_w ||
						'and 	' || ds_alias_proc_w || '.ie_via_acesso_conv = :ie_via_acesso_pc';
	
	valor_bind_p := sql_pck.bind_variable(	':ie_via_acesso_pc', ie_via_acesso_p, valor_bind_p);
end if;

ds_campos_p 	:= ds_campos_w;
ds_campos_mat_p := ds_campos_mat_w;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_ocor_imp_pck.obter_restricao_procedimento ( cd_procedimento_p pls_oc_cta_filtro_proc.cd_procedimento%type, ie_origem_proced_p pls_oc_cta_filtro_proc.ie_origem_proced%type, cd_area_procedimento_p pls_oc_cta_filtro_proc.cd_area_procedimento%type, cd_especialidade_p pls_oc_cta_filtro_proc.cd_especialidade%type, cd_grupo_proc_p pls_oc_cta_filtro_proc.cd_grupo_proc%type, nr_seq_estrutura_p pls_oc_cta_filtro_proc.nr_seq_estrutura%type, ie_tipo_desp_proc_p pls_oc_cta_filtro_proc.ie_tipo_desp_proc%type, nr_seq_grupo_rec_p pls_oc_cta_filtro_proc.nr_seq_grupo_rec%type, nr_seq_grupo_servico_p pls_oc_cta_filtro_proc.nr_seq_grupo_servico%type, dt_dia_semana_p pls_oc_cta_filtro_proc.dt_dia_semana%type, ie_feriado_p pls_oc_cta_filtro_proc.ie_feriado%type, ie_tipo_feriado_p pls_oc_cta_filtro_proc.ie_tipo_feriado%type, hr_inicial_p pls_oc_cta_filtro_proc.hr_inicial%type, hr_final_p pls_oc_cta_filtro_proc.hr_final%type, vl_minimo_item_p pls_oc_cta_filtro_proc.vl_minimo_item%type, vl_max_item_p pls_oc_cta_filtro_proc.vl_max_item%type, ie_via_acesso_p pls_oc_cta_filtro_proc.ie_via_acesso%type, valor_bind_p INOUT sql_pck.t_dado_bind, ds_campos_p INOUT text, ds_campos_mat_p INOUT text) FROM PUBLIC;
