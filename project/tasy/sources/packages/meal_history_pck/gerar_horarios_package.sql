-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION meal_history_pck.gerar_horarios (nr_seq_item_cpoe_p bigint, --generate times in meal tab 
 ie_tipo_item_p text, ds_horarios_p text, dt_inicio_p timestamp, dt_fim_p timestamp, dt_lib_suspensao_p timestamp, ie_tipo_item_cpoe_p text) RETURNS SETOF T_TIMES AS $body$
DECLARE


	t_times_row_r			t_times_row;
	dt_ult_horario_w		timestamp;
	ds_horario_w			varchar(4000);
	ds_hora_w			varchar(2000)	:= null;
	ds_horarios_w			varchar(2000)	:= null;
	ds_horarios_fut_w		varchar(2000)	:= null;
	dt_aux_w			timestamp;
	ds_status_hora_w        	varchar(4000) := '';
	ds_status_hora_fut_w        	varchar(4000) := '';
	k				integer;

	c01 CURSOR FOR
    SELECT
        x.*
    FROM
        cpoe_overview_itens_data_v x
    WHERE
            x.nr_sequencia = nr_seq_item_cpoe_p
        AND x.ie_tipo_item = ie_tipo_item_p
--and x.dt_horario between dt_inicio and dt_fim
        AND x.dt_horario >= trunc(dt_inicio_p,'MI')
        AND ( coalesce(dt_fim::text, '') = ''
              OR x.dt_horario <= dt_fim_p )
    ORDER BY
        dt_horario;
		
	C02 CURSOR FOR
		SELECT	*
		from	table(meal_history_pck.gerar_horario_futuro(	ds_horario_w,
				dt_ult_horario_w - 1, --Nao sei porque, mas precisei colocar.
				dt_inicio_p,
				dt_fim_p,
				dt_lib_suspensao_p,
				nr_seq_item_cpoe_p));

	
BEGIN
	
	if (ie_tipo_item_cpoe_p = 'J') then
	
		 select
				x.nr_prescricao,
				x.nr_seq_item_prescr,
                x.dt_suspensao
		into STRICT	current_setting('meal_history_pck.nr_prescricao_f')::bigint,
				current_setting('meal_history_pck.nr_seq_item_prescr_f')::bigint,
                current_setting('meal_history_pck.dt_suspensao_f')::timestamp
        from    cpoe_overview_itens_data_v x
        where    x.nr_sequencia = nr_seq_item_cpoe_p
        and    x.ie_tipo_item = ie_tipo_item_p;

        PERFORM set_config('meal_history_pck.dt_fim_f', dt_fim_p, false);

        if (coalesce(current_setting('meal_history_pck.dt_suspensao_f')::timestamp,dt_fim_p) < dt_fim_p) then
            PERFORM set_config('meal_history_pck.dt_fim_f', current_setting('meal_history_pck.dt_suspensao_f')::timestamp, false);
        end if;

        PERFORM set_config('meal_history_pck.dt_control_w', dt_inicio_p, false);
        begin
            while(current_setting('meal_history_pck.dt_control_w')::timestamp <= current_setting('meal_history_pck.dt_fim_f')::timestamp)
            loop --initial is less than or equal to end date
            
                if ((to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'HH24'))::numeric  >01) and ((to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'HH24'))::numeric  <12) then
                    t_times_row_r.dt_horario        := current_setting('meal_history_pck.dt_control_w')::timestamp;
                    PERFORM set_config('meal_history_pck.dt_control_w', to_date(to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'dd/mm/yyyy')||'14','dd/mm/yyyy hh24'), false);

                elsif ((to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'HH24'))::numeric  >=12) and ((to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'HH24'))::numeric  <=17) then
                    t_times_row_r.dt_horario        := current_setting('meal_history_pck.dt_control_w')::timestamp;
                    PERFORM set_config('meal_history_pck.dt_control_w', to_date(to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'dd/mm/yyyy')||'19','dd/mm/yyyy hh24'), false);

                elsif ((to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'HH24'))::numeric  >17) and ((to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'HH24'))::numeric  <=24) then
                    t_times_row_r.dt_horario        := current_setting('meal_history_pck.dt_control_w')::timestamp;
                    PERFORM set_config('meal_history_pck.dt_control_w', current_setting('meal_history_pck.dt_control_w')::timestamp + 1, false);
                    PERFORM set_config('meal_history_pck.dt_control_w', to_date(to_char(current_setting('meal_history_pck.dt_control_w')::timestamp,'dd/mm/yyyy')||'08','dd/mm/yyyy hh24'), false);
                end if;

                t_times_row_r.nr_seq_item_cpoe    := nr_seq_item_cpoe_p;
                t_times_row_r.ie_future        := 'N';
                t_times_row_r.nr_prescricao        := current_setting('meal_history_pck.nr_prescricao_f')::bigint;
                t_times_row_r.nr_seq_item_prescr    := current_setting('meal_history_pck.nr_seq_item_prescr_f')::bigint;
                t_times_row_r.nr_seq_prescr_hor    := null;
                RETURN NEXT t_times_row_r;

            end loop;
        end;
	end if;
	
	for r_c01 in c01 loop
		begin

		t_times_row_r.nr_seq_item_cpoe	:= r_c01.nr_sequencia;
		t_times_row_r.dt_horario		:= r_c01.dt_horario;
		t_times_row_r.ie_future		:= 'N';
		t_times_row_r.nr_prescricao		:= r_c01.nr_prescricao;
		t_times_row_r.nr_seq_item_prescr	:= r_c01.nr_seq_item_prescr;
		t_times_row_r.nr_seq_prescr_hor	:= r_c01.nr_seq_prescr_hor;
		dt_ult_horario_w		:= r_c01.dt_horario;
		ds_horario_w			:= r_c01.ds_horarios;

		RETURN NEXT t_times_row_r;

		end;
	end loop;

  --if (ds_horario_w is null) then
ds_horario_w := ds_horarios_p;
dt_ult_horario_w := dt_inicio_p;
--end if;
	for r_c02 in c02 loop
		begin

		t_times_row_r.nr_seq_item_cpoe	:= r_c02.nr_seq_item_cpoe;
		t_times_row_r.dt_horario		:= r_c02.dt_horario;
		t_times_row_r.ie_future			:= r_c02.ie_future;

		RETURN NEXT t_times_row_r;

		end;
	end loop;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION meal_history_pck.gerar_horarios (nr_seq_item_cpoe_p bigint, ie_tipo_item_p text, ds_horarios_p text, dt_inicio_p timestamp, dt_fim_p timestamp, dt_lib_suspensao_p timestamp, ie_tipo_item_cpoe_p text) FROM PUBLIC;
