-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_gerar_titulo_pck.gerar_titulo_receber_lote ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_ie_bloqueto_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ds_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;
tb_nr_seq_conta_banco_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_carteira_cobr_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_trans_fin_baixa_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_trans_fin_contab_w 	pls_util_cta_pck.t_number_table;
tb_tx_juros_cr_w		pls_util_cta_pck.t_number_table;
tb_tx_multa_cr_w		pls_util_cta_pck.t_number_table;
tb_dt_contabil_w		pls_util_cta_pck.t_date_table;
tb_dt_vencimento_w		pls_util_cta_pck.t_date_table;
tb_vl_liquido_w			pls_util_cta_pck.t_number_table;
tb_cd_pessoa_fisica_w		pls_util_cta_pck.t_number_table;
tb_cd_cgc_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_pp_prest_w		pls_util_cta_pck.t_number_table;

qt_dias_vencimento_w		pls_prestador_rec.qt_dias_vencimento%type;
ie_data_emissao_geracao_w	pls_prestador_rec.ie_data_emissao_geracao%type;
nr_seq_trans_fin_baixa_rec_w	pls_prestador_rec.nr_seq_trans_fin_baixa%type;
nr_cont_w			integer;
cd_estab_financeiro_w		estabelecimento.cd_estab_financeiro%type;
nr_seq_forma_cobranca_w		pls_prestador_rec.nr_seq_forma_cobranca%type;

c01 CURSOR(	nr_seq_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.dt_venc_titulo,
		abs(a.vl_titulo_receber) vl_titulo_receber,
		a.nr_seq_prestador,
		b.cd_pessoa_fisica,
		b.cd_cgc,
		b.cd_prestador
	from	pls_pp_prestador a,
		pls_pp_prestador_tmp b
	where	a.nr_seq_lote = nr_seq_lote_pc
	and	a.vl_titulo_receber < 0
	and	b.nr_seq_prestador = a.nr_seq_prestador;

BEGIN
select	max(coalesce(cd_estab_financeiro, cd_estabelecimento))
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

-- inicializa as variaveis

SELECT * FROM pls_pp_gerar_titulo_pck.inserir_titulo_receber_prest(	nr_cont_w, tb_nr_seq_pp_prest_w, tb_ie_bloqueto_w, tb_ds_observacao_w, tb_nr_seq_conta_banco_w, tb_nr_seq_carteira_cobr_w, tb_nr_seq_trans_fin_baixa_w, tb_nr_seq_trans_fin_contab_w, tb_tx_juros_cr_w, tb_tx_multa_cr_w, tb_dt_contabil_w, tb_dt_vencimento_w, tb_vl_liquido_w, tb_cd_pessoa_fisica_w, tb_cd_cgc_w, cd_estabelecimento_p, nm_usuario_p, cd_estab_financeiro_w, nr_seq_forma_cobranca_w) INTO STRICT _ora2pg_r;
 	nr_cont_w := _ora2pg_r.nr_cont_p; tb_nr_seq_pp_prest_w := _ora2pg_r.tb_nr_seq_pp_prest_p; tb_ie_bloqueto_w := _ora2pg_r.tb_ie_bloqueto_p; tb_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; tb_nr_seq_conta_banco_w := _ora2pg_r.tb_nr_seq_conta_banco_p; tb_nr_seq_carteira_cobr_w := _ora2pg_r.tb_nr_seq_carteira_cobr_p; tb_nr_seq_trans_fin_baixa_w := _ora2pg_r.tb_nr_seq_trans_fin_baixa_p; tb_nr_seq_trans_fin_contab_w := _ora2pg_r.tb_nr_seq_trans_fin_contab_p; tb_tx_juros_cr_w := _ora2pg_r.tb_tx_juros_cr_p; tb_tx_multa_cr_w := _ora2pg_r.tb_tx_multa_cr_p; tb_dt_contabil_w := _ora2pg_r.tb_dt_contabil_p; tb_dt_vencimento_w := _ora2pg_r.tb_dt_vencimento_p; tb_vl_liquido_w := _ora2pg_r.tb_vl_liquido_p; tb_cd_pessoa_fisica_w := _ora2pg_r.tb_cd_pessoa_fisica_p; tb_cd_cgc_w := _ora2pg_r.tb_cd_cgc_p;

-- retorna os prestadores que possuem valores de titulos a receber

for r_c01_w in c01(nr_seq_lote_p) loop

	tb_nr_seq_pp_prest_w(nr_cont_w) := r_c01_w.nr_sequencia;

	pls_obter_dados_prestador_rec(	r_c01_w.nr_seq_prestador, null,
					tb_nr_seq_conta_banco_w(nr_cont_w), tb_ie_bloqueto_w(nr_cont_w), 
					tb_nr_seq_carteira_cobr_w(nr_cont_w), tb_nr_seq_trans_fin_contab_w(nr_cont_w),
					nr_seq_trans_fin_baixa_rec_w, tb_ds_observacao_w(nr_cont_w), 
					ie_data_emissao_geracao_w, qt_dias_vencimento_w,nr_seq_forma_cobranca_w);



	-- se nao tem uma observacao na regra entao coloca o codigo do prestador

	if (coalesce(tb_ds_observacao_w(nr_cont_w)::text, '') = '') then
		tb_ds_observacao_w(nr_cont_w) := wheb_mensagem_pck.get_texto(449178) || ' do prestador: ' || r_c01_w.cd_prestador;
	end if;

	-- se for prestador PJ aplica a taxa informada nos parametros do contas a receber

	if (r_c01_w.cd_cgc IS NOT NULL AND r_c01_w.cd_cgc::text <> '') then
	
		tb_tx_juros_cr_w(nr_cont_w) := current_setting('pls_pp_gerar_titulo_pck.tx_juros_pj_cr_w')::parametro_contas_receber.pr_juro_pj%type;
		tb_tx_multa_cr_w(nr_cont_w) := current_setting('pls_pp_gerar_titulo_pck.tx_multa_pj_cr_w')::parametro_contas_receber.pr_multa_pj%type;
	else
		tb_tx_juros_cr_w(nr_cont_w) := 0;
		tb_tx_multa_cr_w(nr_cont_w) := 0;
	end if;

	-- verifica se a data de emissao deve ser a atual ou a de competencia do lote

	if (ie_data_emissao_geracao_w = 'S') then
		tb_dt_contabil_w(nr_cont_w) := clock_timestamp();
		tb_dt_vencimento_w(nr_cont_w) := clock_timestamp() + coalesce(qt_dias_vencimento_w,0);
	else
		tb_dt_contabil_w(nr_cont_w) := clock_timestamp();
		tb_dt_vencimento_w(nr_cont_w) := r_c01_w.dt_venc_titulo;
	end if;

	-- se o parametro do contas a receber estiver nulo entao usa o campo que retornou na rotina 

	if (current_setting('pls_pp_gerar_titulo_pck.nr_seq_trans_fin_baixa_w')::pls_parametro_pagamento.nr_seq_trans_fin_baixa%coalesce(type::text, '') = '') then

		tb_nr_seq_trans_fin_baixa_w(nr_cont_w) := nr_seq_trans_fin_baixa_rec_w;
	else
		tb_nr_seq_trans_fin_baixa_w(nr_cont_w) := current_setting('pls_pp_gerar_titulo_pck.nr_seq_trans_fin_baixa_w')::pls_parametro_pagamento.nr_seq_trans_fin_baixa%type;
	end if;
	
	tb_vl_liquido_w(nr_cont_w) := r_c01_w.vl_titulo_receber;
	tb_cd_pessoa_fisica_w(nr_cont_w) := r_c01_w.cd_pessoa_fisica;
	tb_cd_cgc_w(nr_cont_w) := r_c01_w.cd_cgc;

	-- se atingiu a quantidade manda pro banco

	if (nr_cont_w >= pls_util_pck.qt_registro_transacao_w) then
		SELECT * FROM pls_pp_gerar_titulo_pck.inserir_titulo_receber_prest(	nr_cont_w, tb_nr_seq_pp_prest_w, tb_ie_bloqueto_w, tb_ds_observacao_w, tb_nr_seq_conta_banco_w, tb_nr_seq_carteira_cobr_w, tb_nr_seq_trans_fin_baixa_w, tb_nr_seq_trans_fin_contab_w, tb_tx_juros_cr_w, tb_tx_multa_cr_w, tb_dt_contabil_w, tb_dt_vencimento_w, tb_vl_liquido_w, tb_cd_pessoa_fisica_w, tb_cd_cgc_w, cd_estabelecimento_p, nm_usuario_p, cd_estab_financeiro_w, nr_seq_forma_cobranca_w) INTO STRICT _ora2pg_r;
 	nr_cont_w := _ora2pg_r.nr_cont_p; tb_nr_seq_pp_prest_w := _ora2pg_r.tb_nr_seq_pp_prest_p; tb_ie_bloqueto_w := _ora2pg_r.tb_ie_bloqueto_p; tb_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; tb_nr_seq_conta_banco_w := _ora2pg_r.tb_nr_seq_conta_banco_p; tb_nr_seq_carteira_cobr_w := _ora2pg_r.tb_nr_seq_carteira_cobr_p; tb_nr_seq_trans_fin_baixa_w := _ora2pg_r.tb_nr_seq_trans_fin_baixa_p; tb_nr_seq_trans_fin_contab_w := _ora2pg_r.tb_nr_seq_trans_fin_contab_p; tb_tx_juros_cr_w := _ora2pg_r.tb_tx_juros_cr_p; tb_tx_multa_cr_w := _ora2pg_r.tb_tx_multa_cr_p; tb_dt_contabil_w := _ora2pg_r.tb_dt_contabil_p; tb_dt_vencimento_w := _ora2pg_r.tb_dt_vencimento_p; tb_vl_liquido_w := _ora2pg_r.tb_vl_liquido_p; tb_cd_pessoa_fisica_w := _ora2pg_r.tb_cd_pessoa_fisica_p; tb_cd_cgc_w := _ora2pg_r.tb_cd_cgc_p;
	else
		nr_cont_w := nr_cont_w + 1;
	end if;
end loop;

-- se sobrou algo manda pro banco

SELECT * FROM pls_pp_gerar_titulo_pck.inserir_titulo_receber_prest(	nr_cont_w, tb_nr_seq_pp_prest_w, tb_ie_bloqueto_w, tb_ds_observacao_w, tb_nr_seq_conta_banco_w, tb_nr_seq_carteira_cobr_w, tb_nr_seq_trans_fin_baixa_w, tb_nr_seq_trans_fin_contab_w, tb_tx_juros_cr_w, tb_tx_multa_cr_w, tb_dt_contabil_w, tb_dt_vencimento_w, tb_vl_liquido_w, tb_cd_pessoa_fisica_w, tb_cd_cgc_w, cd_estabelecimento_p, nm_usuario_p, cd_estab_financeiro_w, nr_seq_forma_cobranca_w) INTO STRICT _ora2pg_r;
 	nr_cont_w := _ora2pg_r.nr_cont_p; tb_nr_seq_pp_prest_w := _ora2pg_r.tb_nr_seq_pp_prest_p; tb_ie_bloqueto_w := _ora2pg_r.tb_ie_bloqueto_p; tb_ds_observacao_w := _ora2pg_r.tb_ds_observacao_p; tb_nr_seq_conta_banco_w := _ora2pg_r.tb_nr_seq_conta_banco_p; tb_nr_seq_carteira_cobr_w := _ora2pg_r.tb_nr_seq_carteira_cobr_p; tb_nr_seq_trans_fin_baixa_w := _ora2pg_r.tb_nr_seq_trans_fin_baixa_p; tb_nr_seq_trans_fin_contab_w := _ora2pg_r.tb_nr_seq_trans_fin_contab_p; tb_tx_juros_cr_w := _ora2pg_r.tb_tx_juros_cr_p; tb_tx_multa_cr_w := _ora2pg_r.tb_tx_multa_cr_p; tb_dt_contabil_w := _ora2pg_r.tb_dt_contabil_p; tb_dt_vencimento_w := _ora2pg_r.tb_dt_vencimento_p; tb_vl_liquido_w := _ora2pg_r.tb_vl_liquido_p; tb_cd_pessoa_fisica_w := _ora2pg_r.tb_cd_pessoa_fisica_p; tb_cd_cgc_w := _ora2pg_r.tb_cd_cgc_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_gerar_titulo_pck.gerar_titulo_receber_lote ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
