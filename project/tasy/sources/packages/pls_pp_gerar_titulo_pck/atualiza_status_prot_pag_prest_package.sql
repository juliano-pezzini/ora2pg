-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_gerar_titulo_pck.atualiza_status_prot_pag_prest (nr_titulo_p titulo_pagar.nr_titulo%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_prot_referencia_w	pls_protocolo_conta.nr_seq_prot_referencia%type;
vl_saldo_titulo_w		titulo_pagar.vl_saldo_titulo%type;
qt_conta_sem_pagto_w		integer;
qt_contas_fechadas_w		integer;
qt_registros_w			integer;
nr_seq_lote_w			pls_pp_lote.nr_sequencia%type := nr_seq_lote_p;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type := nr_seq_prestador_p;

C01 CURSOR(nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
		nr_seq_prestador_pc	pls_prestador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_protocolo
	from	pls_protocolo_conta p
	where exists (	SELECT	1
			from	pls_conta_medica_resumo		c
			where	c.nr_seq_pp_lote	= nr_seq_lote_pc
			and	c.nr_seq_prestador_pgto	= nr_seq_prestador_pc
			and 	c.nr_seq_protocolo	= p.nr_sequencia);

BEGIN
if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') then
	select	max(nr_seq_lote),
		max(nr_seq_prestador)
	into STRICT	nr_seq_lote_w,
		nr_seq_prestador_w
	from	pls_pp_prestador
	where	nr_titulo_pagar	= nr_titulo_p;
end if;

if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') then

	for r_c01_w in c01( nr_seq_lote_w, nr_seq_prestador_w ) loop
		vl_saldo_titulo_w := 0;	
		
		select	coalesce(sum(d.vl_saldo_titulo),0)
		into STRICT	vl_saldo_titulo_w
		from	titulo_pagar			d,
			pls_conta_medica_resumo		c,
			pls_pp_prestador		b
		where	b.nr_seq_prestador	= c.nr_seq_prestador_pgto
		and	b.nr_seq_lote		= c.nr_seq_pp_lote
		and	b.nr_titulo_pagar	= d.nr_titulo
		and	c.nr_seq_protocolo	= r_c01_w.nr_seq_protocolo
		and	c.ie_situacao		= 'A';
		
		select	count(1)
		into STRICT	qt_conta_sem_pagto_w
		from	pls_conta_medica_resumo a,
			pls_conta b
		where	b.nr_sequencia		= a.nr_seq_conta
		and	b.nr_seq_protocolo	= r_c01_w.nr_seq_protocolo
		and	b.ie_status		!= 'C'
		and	a.ie_situacao		= 'A'
		and	a.ie_tipo_item		!= 'I'
		and	coalesce(a.nr_seq_pp_lote::text, '') = '';
		
		--aaschlote 19/03/2015 OS 860619 - Nao permite mudar o status para pago caso tenha contas que nao estejam fechadas, canceladas ou A700 finalizado

		select	count(1)
		into STRICT	qt_contas_fechadas_w
		from	pls_conta
		where	nr_seq_protocolo	= r_c01_w.nr_seq_protocolo
		and	ie_status		not in ('F','C','S');
		
		if (qt_conta_sem_pagto_w = 0) and (qt_contas_fechadas_w = 0) then
			if (vl_saldo_titulo_w = 0) then
				update	pls_protocolo_conta
				set	ie_status	= '6' --pago

				where	nr_sequencia	= r_c01_w.nr_seq_protocolo
				and	ie_status	<> '4'; -- 4 = Encerrado sem pagamento
				
				--Verifica se o protocolo tem um protocolo principal

				select	max(nr_seq_prot_referencia)
				into STRICT	nr_seq_prot_referencia_w
				from	pls_protocolo_conta
				where	nr_sequencia	= r_c01_w.nr_seq_protocolo;
				
				--Verifica se o protocolo o protocolo principal tem conta medica resumo

				if (nr_seq_prot_referencia_w IS NOT NULL AND nr_seq_prot_referencia_w::text <> '') then
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_conta_medica_resumo
					where	nr_seq_protocolo	= nr_seq_prot_referencia_w
					and	ie_situacao		= 'A';
					
					if (qt_registros_w = 0) then
						update	pls_protocolo_conta
						set	ie_status	= '6' --pago

						where	nr_sequencia	= nr_seq_prot_referencia_w
						and	ie_status	<> '4'; -- 4 = Encerrado sem pagamento
					end if;
				end if;
			else
				update	pls_protocolo_conta
				set	ie_status	= '3' --Liberado pagamento

				where	nr_sequencia	= r_c01_w.nr_seq_protocolo
				and	ie_status	<> '4'; -- 4 = Encerrado sem pagamento
				
				--Verifica se o protocolo tem um protocolo principal

				select	max(nr_seq_prot_referencia)
				into STRICT	nr_seq_prot_referencia_w
				from	pls_protocolo_conta
				where	nr_sequencia	= r_c01_w.nr_seq_protocolo;
				
				--Verifica se o protocolo o protocolo principal tem conta medica resumo

				if (nr_seq_prot_referencia_w IS NOT NULL AND nr_seq_prot_referencia_w::text <> '') then
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_conta_medica_resumo
					where	nr_seq_protocolo	= nr_seq_prot_referencia_w
					and	ie_situacao		= 'A';
					
					if (qt_registros_w = 0) then
						update	pls_protocolo_conta
						set	ie_status	= '3' --Liberado pagamento

						where	nr_sequencia	= nr_seq_prot_referencia_w
						and	ie_status	<> '4'; -- 4 = Encerrado sem pagamento
					end if;
				end if;
				
			end if;
		end if;
	end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_gerar_titulo_pck.atualiza_status_prot_pag_prest (nr_titulo_p titulo_pagar.nr_titulo%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
