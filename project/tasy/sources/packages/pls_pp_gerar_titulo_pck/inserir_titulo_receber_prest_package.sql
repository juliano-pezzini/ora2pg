-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_gerar_titulo_pck.inserir_titulo_receber_prest ( nr_cont_p INOUT integer, tb_nr_seq_pp_prest_p INOUT pls_util_cta_pck.t_number_table, tb_ie_bloqueto_p INOUT pls_util_cta_pck.t_varchar2_table_5, tb_ds_observacao_p INOUT pls_util_cta_pck.t_varchar2_table_4000, tb_nr_seq_conta_banco_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_carteira_cobr_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_trans_fin_baixa_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_trans_fin_contab_p INOUT pls_util_cta_pck.t_number_table, tb_tx_juros_cr_p INOUT pls_util_cta_pck.t_number_table, tb_tx_multa_cr_p INOUT pls_util_cta_pck.t_number_table, tb_dt_contabil_p INOUT pls_util_cta_pck.t_date_table, tb_dt_vencimento_p INOUT pls_util_cta_pck.t_date_table, tb_vl_liquido_p INOUT pls_util_cta_pck.t_number_table, tb_cd_pessoa_fisica_p INOUT pls_util_cta_pck.t_number_table, tb_cd_cgc_p INOUT pls_util_cta_pck.t_number_table, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, cd_estab_financeiro_p estabelecimento.cd_estab_financeiro%type, nr_seq_forma_cobranca_p pls_prestador_rec.nr_seq_forma_cobranca%type) AS $body$
DECLARE
	

tb_nr_titulo_receber_w	pls_util_cta_pck.t_number_table;

BEGIN
-- se tiver algo insere os titulos e verifica quais precisam ser gerados os bloquetos

if (tb_nr_seq_pp_prest_p.count > 0) then

	-- insere os titulos a receber e retorna o numeros dos titulos inseridos

	forall i in tb_nr_seq_pp_prest_p.first..tb_nr_seq_pp_prest_p.last
		insert into titulo_receber(
			nr_titulo, dt_atualizacao, nm_usuario,
			dt_inclusao, nm_usuario_orig, dt_vencimento,
			ie_situacao, cd_portador, ie_tipo_inclusao,
			ie_origem_titulo, dt_pagamento_previsto, cd_tipo_taxa_multa,
			cd_moeda, ie_tipo_titulo, cd_tipo_portador,
			cd_estabelecimento, vl_titulo, dt_emissao,
			dt_contabil, cd_tipo_taxa_juro, tx_desc_antecipacao,
			ie_tipo_emissao_titulo, vl_saldo_titulo, vl_saldo_juros,
			vl_saldo_multa, tx_juros, tx_multa,
			cd_pessoa_fisica, cd_cgc, nr_seq_conta_banco,
			nr_seq_classe, nr_seq_trans_fin_baixa, nr_seq_carteira_cobr,
			nr_seq_trans_fin_contab, ds_observacao_titulo, cd_estab_financeiro


		) values (
			nextval('titulo_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, tb_dt_vencimento_p(i),
			'1', current_setting('pls_pp_gerar_titulo_pck.cd_portador_w')::parametro_contas_receber.cd_portador%type, '2',
			'18', tb_dt_vencimento_p(i), current_setting('pls_pp_gerar_titulo_pck.cd_tipo_taxa_multa_w')::parametro_contas_receber.cd_tipo_taxa_multa%type,
			current_setting('pls_pp_gerar_titulo_pck.cd_moeda_padrao_receber_w')::parametro_contas_receber.cd_moeda_padrao%type, CASE WHEN nr_seq_forma_cobranca_p=2 THEN  '10'  ELSE '1' END , current_setting('pls_pp_gerar_titulo_pck.cd_tipo_portador_w')::parametro_contas_receber.cd_tipo_portador%type,
			cd_estabelecimento_p, tb_vl_liquido_p(i), trunc(clock_timestamp(),'dd'),
			tb_dt_contabil_p(i), current_setting('pls_pp_gerar_titulo_pck.cd_tipo_taxa_juro_w')::parametro_contas_receber.cd_tipo_taxa_juro%type, 0,
			'1', tb_vl_liquido_p(i), 0,
			0, tb_tx_juros_cr_p(i), tb_tx_multa_cr_p(i),
			tb_cd_pessoa_fisica_p(i), tb_cd_cgc_p(i), tb_nr_seq_conta_banco_p(i),
			current_setting('pls_pp_gerar_titulo_pck.nr_seq_classe_pgto_neg_w')::pls_parametro_pagamento.nr_seq_classe%type, tb_nr_seq_trans_fin_baixa_p(i), tb_nr_seq_carteira_cobr_p(i),
			tb_nr_seq_trans_fin_contab_p(i), tb_ds_observacao_p(i), cd_estab_financeiro_p


		) returning nr_titulo bulk collect into tb_nr_titulo_receber_w;
	commit;

	-- alimenta na pls_pp_prestador o numero do titulo a receber

	forall i in tb_nr_seq_pp_prest_p.first..tb_nr_seq_pp_prest_p.last
		update	pls_pp_prestador
		set	nr_titulo_receber = tb_nr_titulo_receber_w(i)
		where	nr_sequencia = tb_nr_seq_pp_prest_p(i);
	commit;

	-- verifica se algum dos titulos gerados precisa gerar o bloqueto

	for i in tb_nr_seq_pp_prest_p.first..tb_nr_seq_pp_prest_p.last loop

		if (tb_ie_bloqueto_p(i) = 'S') then

			-- gera o bloqueto para o titulo

			CALL gerar_bloqueto_tit_rec(	tb_nr_titulo_receber_w(i), 'OPSNP');
		end if;
	end loop;
end if;

-- limpa os parametros

nr_cont_p := 1;
tb_ie_bloqueto_p.delete;
tb_ds_observacao_p.delete;
tb_nr_seq_conta_banco_p.delete;
tb_nr_seq_carteira_cobr_p.delete;
tb_nr_seq_trans_fin_baixa_p.delete;
tb_nr_seq_trans_fin_contab_p.delete;
tb_tx_juros_cr_p.delete;
tb_tx_multa_cr_p.delete;
tb_dt_contabil_p.delete;
tb_dt_vencimento_p.delete;
tb_vl_liquido_p.delete;
tb_cd_pessoa_fisica_p.delete;
tb_cd_cgc_p.delete;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_gerar_titulo_pck.inserir_titulo_receber_prest ( nr_cont_p INOUT integer, tb_nr_seq_pp_prest_p INOUT pls_util_cta_pck.t_number_table, tb_ie_bloqueto_p INOUT pls_util_cta_pck.t_varchar2_table_5, tb_ds_observacao_p INOUT pls_util_cta_pck.t_varchar2_table_4000, tb_nr_seq_conta_banco_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_carteira_cobr_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_trans_fin_baixa_p INOUT pls_util_cta_pck.t_number_table, tb_nr_seq_trans_fin_contab_p INOUT pls_util_cta_pck.t_number_table, tb_tx_juros_cr_p INOUT pls_util_cta_pck.t_number_table, tb_tx_multa_cr_p INOUT pls_util_cta_pck.t_number_table, tb_dt_contabil_p INOUT pls_util_cta_pck.t_date_table, tb_dt_vencimento_p INOUT pls_util_cta_pck.t_date_table, tb_vl_liquido_p INOUT pls_util_cta_pck.t_number_table, tb_cd_pessoa_fisica_p INOUT pls_util_cta_pck.t_number_table, tb_cd_cgc_p INOUT pls_util_cta_pck.t_number_table, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, cd_estab_financeiro_p estabelecimento.cd_estab_financeiro%type, nr_seq_forma_cobranca_p pls_prestador_rec.nr_seq_forma_cobranca%type) FROM PUBLIC;
