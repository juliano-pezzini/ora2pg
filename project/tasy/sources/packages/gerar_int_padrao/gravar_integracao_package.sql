-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE gerar_int_padrao.gravar_integracao ( ie_evento_p text, nr_seq_documento_p text, nm_usuario_p text, reg_integracao_p INOUT reg_integracao, ds_parametros_adic_p text default null, ie_manter_padrao_p text default 'N') AS $body$
DECLARE

		
	nr_seq_evento_sistema_w	intpd_eventos_sistema.nr_sequencia%type;
	ie_integra_w		varchar(1) := 'S';
	cd_estab_logado_w	estabelecimento.cd_estabelecimento%type;
	cd_grupo_material_w	grupo_material.cd_grupo_material%type;
	cd_subgrupo_material_w	subgrupo_material.cd_subgrupo_material%type;
	cd_classe_material_w	classe_material.cd_classe_material%type;
	nr_seq_familia_w		material.nr_seq_familia%type;
	ie_padronizado_w		material_estab.ie_padronizado%type;
	ie_material_estoque_w	material_estab.ie_material_estoque%type;
	cd_material_w		material.cd_material%type;
	cd_local_estoque_w	local_estoque.cd_local_estoque%type;
	cd_centro_custo_w		centro_custo.cd_centro_custo%type;
	ie_tipo_nota_w		nota_fiscal.ie_tipo_nota%type;
	cd_operacao_nf_w		nota_fiscal.cd_operacao_nf%type;
	cd_natureza_operacao_w	nota_fiscal.cd_natureza_operacao%type;
	cd_estabelecimento_w	nota_fiscal.cd_estabelecimento%type;
	qt_registros_w		bigint;
	nr_seq_fila_w		intpd_fila_transmissao.nr_sequencia%type;
	nr_seq_filtro_w		intpd_eventos_sistema_rest.nr_sequencia%type;
	ie_envio_recebe_w		varchar(1);
	cd_estabelecimento_regra_w 		intpd_fila_transmissao.cd_estab_documento%type;
	cd_perfil_regra_w			intpd_fila_transmissao.cd_perfil%type;
	cd_setor_atendimento_regra_w	intpd_fila_transmissao.cd_setor_usuario%type;
	nm_usuario_regra_w		intpd_fila_transmissao.nm_usuario%type;
	ds_erro_w varchar(4000);
	ie_operacao_w		intpd_fila_transmissao.ie_operacao%type;
	ie_situacao_nota_w  	intpd_eventos_sistema_rest.ie_situacao_nota%type;	
	
	ie_status_w		intpd_fila_transmissao.ie_status%type;
	ie_status_reproc_w		intpd_fila_transmissao.ie_status%type;
	nr_seq_agrupador_w	intpd_fila_transmissao.nr_seq_agrupador%type;
	nr_seq_agrupador_ww	intpd_fila_transmissao.nr_seq_agrupador%type;
	nr_seq_servidor_origem_w 	intpd_eventos.nr_seq_serv_origem%type;
	nr_seq_projeto_xml_w	intpd_eventos_sistema.nr_seq_projeto_xml%type;
	nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
	nr_seq_ordem_exec_w	intpd_eventos_sistema.nr_seq_ordem_exec%type;
	ie_existe_log_doc_w	integer;
		
	c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.nr_seq_serv_origem,
		b.nr_seq_projeto_xml,
		coalesce(b.nr_seq_ordem_exec,0) nr_seq_ordem_exec
	from	intpd_eventos a,
		intpd_eventos_sistema b
	where	a.nr_sequencia = b.nr_seq_evento
	and	a.ie_evento = ie_evento_p
	and	coalesce(reg_integracao_p.nr_seq_sistema,0) = 0
	and	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	
union all

	SELECT	b.nr_sequencia,
		a.nr_seq_serv_origem,
		b.nr_seq_projeto_xml,
		coalesce(b.nr_seq_ordem_exec,0) nr_seq_ordem_exec
	from	intpd_eventos a,
		intpd_eventos_sistema b
	where	a.nr_sequencia = b.nr_seq_evento
	and	b.nr_seq_sistema = reg_integracao_p.nr_seq_sistema
	and	a.ie_evento = ie_evento_p
	and	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	order by nr_seq_ordem_exec,
		nr_sequencia;
		
	/*enviar cadastro de materiais*/

	c02 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
	and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
	and	coalesce(cd_classe_material, cd_classe_material_w)		= cd_classe_material_w
	and (coalesce(cd_material, nr_seq_documento_p) 			= nr_seq_documento_p or nr_seq_documento_p = 0)
	and	((coalesce(nr_seq_familia, nr_seq_familia_w)			= nr_seq_familia_w) or (coalesce(nr_seq_familia::text, '') = ''))
	and	((coalesce(ie_material_estoque,'A') = 'A') or
		((coalesce(ie_material_estoque,'A') = 'S') and (ie_material_estoque_w = 'S')) or
		((coalesce(ie_material_estoque,'A') = 'N') and (ie_material_estoque_w = 'N')))
	and	((coalesce(ie_padronizado,'A') = 'A') or
		((coalesce(ie_padronizado,'A') = 'S') and (ie_padronizado_w = 'S')) or
		((coalesce(ie_padronizado,'A') = 'N') and (ie_padronizado_w = 'N')))
	order by
		coalesce(cd_material, 0),
		coalesce(nr_seq_familia,0),
		coalesce(cd_classe_material, 0),
		coalesce(cd_subgrupo_material, 0),
		coalesce(cd_grupo_material, 0);
		
	/*enviar pessoa juridica*/
	
	c03 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and 	cd_tipo_pessoa = reg_integracao_p.cd_tipo_pessoa;

	/*enviar ordem de compra (ao aprovar)*/

	c05 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento)		= reg_integracao_p.cd_estab_documento
	and	coalesce(ie_tipo_ordem,reg_integracao_p.ie_tipo_ordem)			= reg_integracao_p.ie_tipo_ordem
	and	coalesce(nr_seq_tipo_compra,coalesce(reg_integracao_p.nr_seq_tipo_compra,0))	= coalesce(reg_integracao_p.nr_seq_tipo_compra,0)
	and	coalesce(nr_seq_mod_compra,coalesce(reg_integracao_p.nr_seq_mod_compra,0))	= coalesce(reg_integracao_p.nr_seq_mod_compra,0)
	and	coalesce(ds_id_origin, reg_integracao_p.ds_id_origin)			= reg_integracao_p.ds_id_origin;

	/*enviar nota fiscal (ao calcular/antes de calcular)*/

	c07 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')
	from   	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_w,0))      = coalesce(cd_estabelecimento_w,0)
	and	coalesce(ie_tipo_nota, coalesce(ie_tipo_nota_w,0))                 = coalesce(ie_tipo_nota_w,0)
	and	coalesce(cd_operacao_nf, coalesce(cd_operacao_nf_w,0))             = coalesce(cd_operacao_nf_w,0)
	and	coalesce(cd_natureza_operacao,coalesce(cd_natureza_operacao_w,0))  = coalesce(cd_natureza_operacao_w,0)
	and	coalesce(ds_id_origin, coalesce(reg_integracao_p.ds_id_origin,'X'))	 = coalesce(reg_integracao_p.ds_id_origin,'X')
	and	coalesce(ie_situacao_nota,coalesce(ie_situacao_nota_w,0))  		 = coalesce(ie_situacao_nota_w,0);
	
	/*enviar estrutura de materiais*/
	
	c08 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')
	from   	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_grupo_material, cd_grupo_material_w)		 = cd_grupo_material_w
	and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	 = cd_subgrupo_material_w
	and	coalesce(cd_classe_material, cd_classe_material_w)		 = cd_classe_material_w
	order by	cd_classe_material desc,
		cd_subgrupo_material desc,
		cd_grupo_material desc;
	
	/*envia local de estoque*/

	c11 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and 	coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento) = reg_integracao_p.cd_estab_documento
	and	coalesce(ie_tipo_local, reg_integracao_p.ie_tipo_local) = reg_integracao_p.ie_tipo_local
	order by	ie_tipo_local desc,
		cd_estabelecimento desc;

	/*envia setor de atendimento*/

	c12 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and 	coalesce(cd_classif_setor, reg_integracao_p.cd_classif_setor) = reg_integracao_p.cd_classif_setor
	order by	cd_classif_setor desc;

	/*enviar movimento de estoque*/
	
	c13 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento)			= reg_integracao_p.cd_estab_documento
	and	coalesce(cd_local_estoque, reg_integracao_p.cd_local_estoque)				= reg_integracao_p.cd_local_estoque
	and	coalesce(cd_centro_custo, coalesce(reg_integracao_p.cd_centro_custo,0))			= coalesce(reg_integracao_p.cd_centro_custo, 0)
	and	coalesce(cd_local_estoque_destino, coalesce(reg_integracao_p.cd_local_estoque_destino,0))	= coalesce(reg_integracao_p.cd_local_estoque_destino, 0)
	and	coalesce(ie_origem_documento, reg_integracao_p.ie_origem_documento)			= reg_integracao_p.ie_origem_documento
	and	coalesce(cd_operacao_estoque, reg_integracao_p.cd_operacao_estoque)			= reg_integracao_p.cd_operacao_estoque
	and	((coalesce(ie_padronizado,'A') = 'A') or ie_padronizado 					= reg_integracao_p.ie_padronizado)
	and	coalesce(cd_grupo_material, reg_integracao_p.cd_grupo_material)				= reg_integracao_p.cd_grupo_material
	and	coalesce(cd_subgrupo_material, reg_integracao_p.cd_subgrupo_material)			= reg_integracao_p.cd_subgrupo_material
	and	coalesce(cd_classe_material, reg_integracao_p.cd_classe_material)			= reg_integracao_p.cd_classe_material
	and	coalesce(cd_material, reg_integracao_p.cd_material)					= reg_integracao_p.cd_material
	and	coalesce(nr_seq_familia, coalesce(reg_integracao_p.nr_seq_familia,0))				= coalesce(reg_integracao_p.nr_seq_familia, 0)
	order by	cd_material desc,
		cd_classe_material desc,
		cd_subgrupo_material desc,
		cd_grupo_material desc,
		nr_seq_familia desc,
		cd_estabelecimento desc,
		cd_operacao_estoque desc,
		cd_local_estoque desc,
		cd_centro_custo desc,
		cd_local_estoque_destino desc,
		ie_origem_documento desc,
		ie_padronizado desc;

	/*enviar fechamento mensal de estoque*/

	c14 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and 	coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento) = reg_integracao_p.cd_estab_documento
	order by	cd_estabelecimento desc;

	/*enviar requisicao de materiais e medicamentos*/
	
	c15 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento)			= reg_integracao_p.cd_estab_documento
	and	coalesce(cd_local_estoque, reg_integracao_p.cd_local_estoque)				= reg_integracao_p.cd_local_estoque
	and	coalesce(cd_centro_custo, coalesce(reg_integracao_p.cd_centro_custo,0))			= coalesce(reg_integracao_p.cd_centro_custo, 0)
	and	coalesce(cd_local_estoque_destino, coalesce(reg_integracao_p.cd_local_estoque_destino,0))	= coalesce(reg_integracao_p.cd_local_estoque_destino, 0)
	and	coalesce(cd_operacao_estoque, reg_integracao_p.cd_operacao_estoque)			= reg_integracao_p.cd_operacao_estoque
	order by	cd_estabelecimento desc,
		cd_operacao_estoque desc,
		cd_local_estoque desc,
		cd_centro_custo desc,
		cd_local_estoque_destino desc;
		
	/*envio do titulo a receber - integracao padrao (evento 26)*/
	
	c16 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and		coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento)	= reg_integracao_p.cd_estab_documento
	and		coalesce(ie_origem_titulo_cre, coalesce(reg_integracao_p.ie_origem_titulo_cre,0))	= coalesce(reg_integracao_p.ie_origem_titulo_cre, 0)
	and		coalesce(ie_tipo_titulo_cre, coalesce(reg_integracao_p.ie_tipo_titulo_cre,0))	= coalesce(reg_integracao_p.ie_tipo_titulo_cre, 0)
	order by cd_estabelecimento desc,
			 ie_origem_titulo_cre desc,
			 ie_tipo_titulo_cre desc;
			
	/*itens da solicitacao de compras*/

	c17 CURSOR FOR
	SELECT	cd_material
	from	solic_compra_item
	where	nr_solic_compra = nr_seq_documento_p;
	
	/*enviar baixa da requisicao de materiais e medicamentos*/
	
	c18 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento)			= reg_integracao_p.cd_estab_documento
	and	coalesce(cd_local_estoque, reg_integracao_p.cd_local_estoque)				= reg_integracao_p.cd_local_estoque
	and	coalesce(cd_centro_custo, coalesce(reg_integracao_p.cd_centro_custo,0))			= coalesce(reg_integracao_p.cd_centro_custo, 0)
	and	coalesce(cd_local_estoque_destino, coalesce(reg_integracao_p.cd_local_estoque_destino,0))	= coalesce(reg_integracao_p.cd_local_estoque_destino, 0)
	and	coalesce(cd_operacao_estoque, reg_integracao_p.cd_operacao_estoque)			= reg_integracao_p.cd_operacao_estoque
	and	coalesce(ds_id_origin, coalesce(reg_integracao_p.ds_id_origin,0))					= coalesce(reg_integracao_p.ds_id_origin,0)
	order by	cd_estabelecimento desc,
		cd_operacao_estoque desc,
		cd_local_estoque desc,
		cd_centro_custo desc,
		cd_local_estoque_destino desc;
	
	/*enviar cotacao de compra*/

	c19 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento)		= reg_integracao_p.cd_estab_documento
	and	coalesce(ie_tipo_ordem,reg_integracao_p.ie_tipo_ordem)			= reg_integracao_p.ie_tipo_ordem
	and	coalesce(ie_finalidade_cotacao,coalesce(reg_integracao_p.ie_finalidade_cotacao,0))	= coalesce(reg_integracao_p.ie_finalidade_cotacao,0);
	
	
	/*enviar lote fornecedor*/

	c20 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento)	= reg_integracao_p.cd_estab_documento
	and	coalesce(cd_grupo_material,reg_integracao_p.cd_grupo_material)		= reg_integracao_p.cd_grupo_material
	and	coalesce(cd_subgrupo_material,reg_integracao_p.cd_subgrupo_material)	= reg_integracao_p.cd_subgrupo_material
	and	coalesce(cd_classe_material,reg_integracao_p.cd_classe_material)	= reg_integracao_p.cd_classe_material
	and	coalesce(cd_material,reg_integracao_p.cd_material)			= reg_integracao_p.cd_material
	and	coalesce(ie_origem_lote,reg_integracao_p.ie_origem_lote)		= reg_integracao_p.ie_origem_lote
	order by
		coalesce(cd_material, 0),
		coalesce(cd_classe_material, 0),
		coalesce(cd_subgrupo_material, 0),
		coalesce(cd_grupo_material, 0),
		coalesce(ie_origem_lote,0),
		coalesce(cd_estabelecimento,0);
		
	/* enviar dados internacao */

	c21 CURSOR FOR
		SELECT	coalesce(ie_integrar,'S')
		from	intpd_eventos_sistema_rest
		where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
		and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento) 	= reg_integracao_p.cd_estab_documento
		and	coalesce(ie_tipo_atendimento,reg_integracao_p.ie_tipo_atendimento)	= reg_integracao_p.ie_tipo_atendimento
		and	coalesce(cd_convenio,reg_integracao_p.cd_convenio)			= reg_integracao_p.cd_convenio
		and	coalesce(cd_categoria,reg_integracao_p.cd_categoria)			= reg_integracao_p.cd_categoria
		and	coalesce(cd_plano_convenio,reg_integracao_p.cd_plano_convenio)	= reg_integracao_p.cd_plano_convenio
		order by
			coalesce(cd_estabelecimento,0),			
			coalesce(cd_convenio,0),
			coalesce(cd_categoria,0);
	
	/*enviar saldo estoque conforme consulta*/

	c22 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(ds_id_origin, reg_integracao_p.ds_id_origin)			= reg_integracao_p.ds_id_origin;
	
	
	c23 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'));
		
	/*enviar procedimento paciente*/

	c24 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	and	coalesce(ie_classif_proced,reg_integracao_p.ie_classif_proced)		= reg_integracao_p.ie_classif_proced
	and	coalesce(cd_procedimento,reg_integracao_p.cd_procedimento)		= reg_integracao_p.cd_procedimento
    and	coalesce(cd_grupo_proc,reg_integracao_p.cd_grupo_proc)		= reg_integracao_p.cd_grupo_proc
	and	((coalesce(ie_origem_proced,reg_integracao_p.ie_origem_proced)		= reg_integracao_p.ie_origem_proced) or (coalesce(cd_procedimento::text, '') = ''))
	and	coalesce(nr_seq_proc_interno,coalesce(reg_integracao_p.nr_seq_proc_interno,0))	= coalesce(reg_integracao_p.nr_seq_proc_interno,0)
	order by coalesce(cd_procedimento,0),
		coalesce(nr_seq_proc_interno,0),
		ie_classif_proced,
        coalesce(cd_grupo_proc,0);

	c25 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'));
		
	c26 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S') or (reg_integracao_p.ie_operacao = 'T' and ie_atribuicao_episodio = 'S'));
		
	c27 CURSOR FOR
		SELECT	coalesce(ie_integrar,'S')
		from	intpd_eventos_sistema_rest
		where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
		and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento) 	= reg_integracao_p.cd_estab_documento
		and	coalesce(cd_convenio,reg_integracao_p.cd_convenio)			= reg_integracao_p.cd_convenio
		and	coalesce(cd_categoria,reg_integracao_p.cd_categoria)			= reg_integracao_p.cd_categoria
		and	coalesce(cd_procedimento,reg_integracao_p.cd_procedimento)		= reg_integracao_p.cd_procedimento
		and	coalesce(nr_seq_exame,reg_integracao_p.nr_seq_exame)		= reg_integracao_p.nr_seq_exame
		order by
			coalesce(cd_estabelecimento, 0),
			coalesce(cd_convenio, 0),
			coalesce(cd_categoria, 0),
			coalesce(cd_procedimento, 0),
			coalesce(nr_seq_exame, 0);				

	c28 CURSOR FOR
		SELECT	coalesce(ie_integrar,'S')
		from	intpd_eventos_sistema_rest
		where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
		and	coalesce(cd_estabelecimento,reg_integracao_p.cd_estab_documento) 	= reg_integracao_p.cd_estab_documento
		and	coalesce(cd_convenio,reg_integracao_p.cd_convenio)			= reg_integracao_p.cd_convenio
		and	coalesce(cd_categoria,reg_integracao_p.cd_categoria)			= reg_integracao_p.cd_categoria
		and	coalesce(cd_procedimento,reg_integracao_p.cd_material)		= reg_integracao_p.cd_material
		order by
			coalesce(cd_estabelecimento, 0),
			coalesce(cd_convenio, 0),
			coalesce(cd_categoria, 0),
			coalesce(cd_material, 0);
	
	/*enviar atendimento convenio*/

	c29 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'));

	c30 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_setor_atendimento,reg_integracao_p.cd_setor_atendimento) 	= reg_integracao_p.cd_setor_atendimento
	and	coalesce(cd_classif_setor,reg_integracao_p.cd_classif_setor)		= reg_integracao_p.cd_classif_setor
	and	coalesce(ie_tipo_movimentacao,reg_integracao_p.ie_tipo_movimentacao)	= reg_integracao_p.ie_tipo_movimentacao
	order by
		coalesce(cd_setor_atendimento,0),
		coalesce(cd_classif_setor,0),
		coalesce(ie_tipo_movimentacao,0),
		coalesce(ie_acao_movimentacao,0);
		
	/* enviar pessoa fisica somente com prontuario */

	c31 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	and	(((reg_integracao_p.nr_prontuario IS NOT NULL AND reg_integracao_p.nr_prontuario::text <> '') and ie_prontuario = 'S') or (coalesce(ie_prontuario,'N') = 'N'))
	and	((reg_integracao_p.ie_funcionario = 'N' and coalesce(ie_funcionario,'N') = 'N' and coalesce(reg_integracao_p.nr_seq_conselho::text, '') = '') or (coalesce(ie_funcionario,'S') = 'S'))
	and ((coalesce(ie_pessoa_atend, 'N') = 'N') or (coalesce(ie_pessoa_atend, 'N') = 'S' and reg_integracao_p.ie_pessoa_atend = 'S'))
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	and ((coalesce(ie_somente_cpf, 'N') = 'N') or (coalesce(ie_somente_cpf, 'N') = 'S' and reg_integracao_p.ie_possui_cpf = 'S'));

	c32 CURSOR FOR
		SELECT	coalesce(ie_integrar,'S')
		from	intpd_eventos_sistema_rest
		where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
		and	coalesce(cd_estabelecimento,coalesce(reg_integracao_p.cd_estab_documento,0)) = coalesce(reg_integracao_p.cd_estab_documento,0)
		and	coalesce(cd_convenio,coalesce(reg_integracao_p.cd_convenio,0)) = coalesce(reg_integracao_p.cd_convenio,0)
		and	coalesce(cd_categoria,coalesce(reg_integracao_p.cd_categoria,'XXX')) = coalesce(reg_integracao_p.cd_categoria,'XXX')
		and	coalesce(cd_procedimento,coalesce(reg_integracao_p.cd_procedimento,0)) = coalesce(reg_integracao_p.cd_procedimento,0)
		and	coalesce(nr_seq_proc_interno,coalesce(reg_integracao_p.nr_seq_proc_interno,0)) = coalesce(reg_integracao_p.nr_seq_proc_interno,0)
		and (coalesce(ie_alteracao, 'N') = 'N' or (reg_integracao_p.cd_agenda_externa IS NOT NULL AND reg_integracao_p.cd_agenda_externa::text <> ''))
		order by
			coalesce(cd_estabelecimento, 0),
			coalesce(cd_convenio, 0),
			coalesce(cd_categoria, 0),
			coalesce(cd_procedimento, 0),
			coalesce(nr_seq_exame, 0);
	
	/* enviar movimentacao de setor */

	c33 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	and	((coalesce(ie_saida_setor,'S') = 'S') or (coalesce(ie_saida_setor,'S') = 'N' and reg_integracao_p.ie_saida_unidade = 'N'))
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	and	((reg_integracao_p.ie_primeiro_reg_setor = 'P' and coalesce(ie_primeiro_reg_setor,'N') = 'P') or (reg_integracao_p.ie_primeiro_reg_setor = 'S' and coalesce(ie_primeiro_reg_setor,'N') = 'S') or (coalesce(ie_primeiro_reg_setor,'N') = 'N'))
	and	(coalesce(ie_tipo_movimentacao,reg_integracao_p.ie_tipo_movimentacao)	= reg_integracao_p.ie_tipo_movimentacao
	and ((coalesce(ie_passagem_sem_acomd,'N') = 'S' and coalesce(reg_integracao_p.ie_passagem_sem_acomd,'N') = 'N') or coalesce(ie_passagem_sem_acomd,'N') = 'N')
	);
	/*and	((reg_integracao_p.dt_saida_unidade is null and (nvl(ie_saida_setor,'S') = 'S')) or
		 (reg_integracao_p.dt_saida_unidade is null and (nvl(ie_saida_setor,'S') = 'N')) or
		 (reg_integracao_p.dt_saida_unidade is not null and (nvl(ie_saida_setor,'S') = 'S')));*/
		
	c34 CURSOR FOR  -- enviar dados do convenio do atendimento
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	and	coalesce(ie_trocar_convenio, 'N') = coalesce(reg_integracao_p.ie_trocar_convenio, 'N');
		
	/* enviar lote prescricao */

	c35 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and 	coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento) = reg_integracao_p.cd_estab_documento
	and	coalesce(cd_local_estoque, reg_integracao_p.cd_local_estoque) = reg_integracao_p.cd_local_estoque
	and	coalesce(cd_setor_atendimento,reg_integracao_p.cd_setor_atendimento) = reg_integracao_p.cd_setor_atendimento;
	
	/* enviar devolucao de materias e medicamentos */

	c36 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and	coalesce(cd_setor_atendimento,reg_integracao_p.cd_setor_atendimento) = reg_integracao_p.cd_setor_atendimento;
	
	c37 CURSOR FOR  -- enviar dados do convenio do atendimento
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))	
	and	coalesce(ie_tipo_atendimento,coalesce(reg_integracao_p.ie_tipo_atendimento,0))	= coalesce(reg_integracao_p.ie_tipo_atendimento,0)
	and	coalesce(nr_seq_tipo_admissao_fat,coalesce(reg_integracao_p.nr_seq_tipo_admissao_fat,0)) = coalesce(reg_integracao_p.nr_seq_tipo_admissao_fat,0)
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	and coalesce(cd_motivo_alta, coalesce(reg_integracao_p.cd_motivo_alta, 0)) = coalesce(reg_integracao_p.cd_motivo_alta, 0)
	order by ie_tipo_atendimento nulls first, 
		nr_seq_tipo_admissao_fat nulls first,
		cd_motivo_alta nulls first;
	
	/* Filtro somente estabelecimento */

	c38 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w	
	and 	coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento) = reg_integracao_p.cd_estab_documento
	order by	cd_estabelecimento desc;	

	/* enviar admissao paciente no setor */

	c39 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))	
	and	coalesce(ie_tipo_atendimento,coalesce(reg_integracao_p.ie_tipo_atendimento,0))	= coalesce(reg_integracao_p.ie_tipo_atendimento,0)
	and	coalesce(nr_seq_tipo_admissao_fat,coalesce(reg_integracao_p.nr_seq_tipo_admissao_fat,0)) = coalesce(reg_integracao_p.nr_seq_tipo_admissao_fat,0)
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	order by ie_tipo_atendimento nulls first, 
		nr_seq_tipo_admissao_fat nulls first;	
		
	c40 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and ((ie_somente_com_login = 'S' and exists (SELECT 1 from usuario x where x.cd_pessoa_fisica = nr_seq_documento_p))
	or (ie_somente_com_login = 'N'))
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
		
	/*envio do titulo a pagar - integracao padrao (evento 53)*/
		
	c41 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and		coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento)	= reg_integracao_p.cd_estab_documento
	and		coalesce(ie_tipo_titulo_cpa, coalesce(reg_integracao_p.ie_tipo_titulo_cpa,0))	= coalesce(reg_integracao_p.ie_tipo_titulo_cpa, 0)
	order by cd_estabelecimento desc,
			 ie_tipo_titulo_cpa desc;
	
	/*Enviar usuario*/

	c42 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and ((ie_somente_com_login = 'S' and exists (SELECT 1 from usuario x where x.cd_pessoa_fisica = nr_seq_documento_p))
	or (ie_somente_com_login = 'N'))
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
	
	c43 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')	
	from 	intpd_eventos_sistema_rest
	where 	nr_seq_evento_sistema = nr_seq_evento_sistema_w;
	
	/* Enviar saida temporaria do setor */

	c44 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	and coalesce(CD_ESTABELECIMENTO, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
	
	c45 CURSOR FOR  -- Send episode treatment certificate
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))	
	and	coalesce(nr_seq_tipo_admissao_fat,coalesce(reg_integracao_p.nr_seq_tipo_admissao_fat,0)) = coalesce(reg_integracao_p.nr_seq_tipo_admissao_fat,0)
	order by nr_seq_tipo_admissao_fat nulls first;
	
	c46 CURSOR FOR  --Enviar Inventario
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
   	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	reg_integracao_p.ie_operacao = 'I'
	and	coalesce(cd_local_estoque, reg_integracao_p.cd_local_estoque) = reg_integracao_p.cd_local_estoque;
	
	   
	c47 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	and	((coalesce(ie_status_episodio,reg_integracao_p.ie_status_episodio)		= reg_integracao_p.ie_status_episodio) or (coalesce(ie_status_episodio::text, '') = ''))
	order by ie_status_episodio nulls first;
	
	c48 CURSOR FOR
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento, reg_integracao_p.cd_estab_documento) = reg_integracao_p.cd_estab_documento
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'));
		
	c49 CURSOR FOR  -- Envio/Consulta Classificacao Pessoa
	SELECT	coalesce(ie_integrar,'S')
	from	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(coalesce(nr_seq_classif_pessoa, reg_integracao_p.nr_seq_classif_pessoa),0) = coalesce(reg_integracao_p.nr_seq_classif_pessoa, 0)
	and	((reg_integracao_p.ie_operacao = 'I' and ie_inclusao = 'S') or (reg_integracao_p.ie_operacao = 'E' and ie_exclusao = 'S') or (reg_integracao_p.ie_operacao = 'A' and ie_alteracao = 'S'))
	order by nr_seq_classif_pessoa nulls first;
	
	c433 CURSOR FOR
	SELECT 	coalesce(ie_integrar,'S')
	from   	intpd_eventos_sistema_rest
	where	nr_seq_evento_sistema = nr_seq_evento_sistema_w
	and	coalesce(cd_estabelecimento,coalesce(reg_integracao_p.cd_estabelecimento,0))      = coalesce(reg_integracao_p.cd_estabelecimento,0)
	and	coalesce(cd_operacao_nf, coalesce(reg_integracao_p.cd_operacao_nf,0))             = coalesce(reg_integracao_p.cd_operacao_nf,0)
	and	coalesce(cd_natureza_operacao,coalesce(reg_integracao_p.cd_natureza_operacao,0))  = coalesce(reg_integracao_p.cd_natureza_operacao,0);

	
BEGIN
	
	current_setting('gerar_int_padrao.intpd_fila_w')::t_intpd_fila.delete;
	
	if	((get_executando_recebimento = 'N') or (ie_evento_p in ('98', '30', '75', '260', '275'))) then --lhalves os 1790793 em 08/11/2018 - movi este if para o inicio da rotina, para nao realizar o processo abaixo desnecessariamente
	
		cd_estab_logado_w	:= 	wheb_usuario_pck.get_cd_estabelecimento;	
		ie_status_w		:=	coalesce(reg_integracao_p.ie_status, 'P');
		ie_operacao_w		:= 	reg_integracao_p.ie_operacao; --guarda a operacao original
		
		if (coalesce(reg_integracao_p.nr_seq_agrupador,0) > 0) then
			nr_seq_agrupador_w	:=	reg_integracao_p.nr_seq_agrupador;
		else
			select	nextval('intpd_fila_transmissao_seq')
			into STRICT	nr_seq_agrupador_w
			;
		end if;	
		
		open c01;
		loop
		fetch c01 into	
			nr_seq_evento_sistema_w,
			nr_seq_servidor_origem_w,
			nr_seq_projeto_xml_w,
			nr_seq_ordem_exec_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			ie_integra_w	:=	'S';
			
			reg_integracao_p.ie_operacao	:=	ie_operacao_w;		--atualiza com a operacao original, para os casos de varios eventos de sistema para o mesmo evento.
			reg_integracao_p.nr_seq_agrupador	:=	nr_seq_agrupador_w;	--atualiza com o agrupador original, para os casos de varios eventos de sistema para o mesmo evento.
			
			if (substr(obter_se_integracao_ish(nr_seq_projeto_xml_w),1,1) = 'S') then
				nr_seq_agrupador_ww	:=	reg_integracao_p.nr_seq_agrupador;
				
				reg_integracao_p.ie_status		:= ie_status_w;
				
				ish_validar_criacao_reg(
					reg_integracao_p => reg_integracao_p,
					nr_seq_evento_sistema_p => nr_seq_evento_sistema_w,
					nr_seq_documento_p => nr_seq_documento_p,
					ie_evento_p => ie_evento_p,
					ie_operacao_p => reg_integracao_p.ie_operacao,
					ie_integra_p => ie_integra_w,
					nr_seq_agrupador_p => nr_seq_agrupador_ww);
				
				reg_integracao_p.nr_seq_agrupador	:=	nr_seq_agrupador_ww;
				ie_status_w				:=	reg_integracao_p.ie_status;
			elsif  ((reg_integracao_p.ie_operacao in ('A','E')) and (coalesce(ie_manter_padrao_p,'N') = 'N')) then
				intpd_validar_update_delete(
					nr_seq_evento_sistema_w,
					nr_seq_documento_p,
					ie_evento_p,
					ds_parametros_adic_p,
					reg_integracao_p.nr_seq_item_documento_p,
					reg_integracao_p.ie_operacao,
					ie_integra_w);
			end if;

			if (ie_integra_w = 'S') then
				begin
				begin
				select	nr_seq_sistema
				into STRICT	nr_seq_sistema_w
				from	intpd_eventos_sistema
				where	nr_sequencia = nr_seq_evento_sistema_w;
				exception
				when others then
					nr_seq_sistema_w	:=	null;
				end;

				begin
				select	1,
					a.ie_status,
					a.nr_sequencia
				into STRICT	qt_registros_w,
					ie_status_reproc_w,
					nr_seq_fila_w
				from	intpd_fila_transmissao a,
					intpd_eventos_sistema b
				where	a.nr_seq_evento_sistema = b.nr_sequencia
				and	b.nr_seq_sistema = nr_seq_sistema_w
				and	a.nr_seq_documento = nr_seq_documento_p
				and	coalesce(a.ds_parametros_adic, '-1') = coalesce(ds_parametros_adic_p,'-1')
				and	((coalesce(reg_integracao_p.nr_seq_item_documento_p,0) = 0) or (a.nr_seq_item_documento = reg_integracao_p.nr_seq_item_documento_p))
				and	a.ie_evento = ie_evento_p
				and (coalesce(a.ie_operacao, 'INTPD') = coalesce(reg_integracao_p.ie_operacao, 'INTPD') or (coalesce(a.ie_operacao, 'INTPD') = 'I' and coalesce(reg_integracao_p.ie_operacao, 'INTPD') = 'A'))
				and	a.ie_status in ('P', 'E', 'AP', 'A')  LIMIT 1;
				exception
				when others then
					qt_registros_w	:=	0;
				end;

				/*caso ja tenha uma pendencia, ou erro, na fila com o mesmo evento, mesmo documento e mesmos parametros... ele nao gera outro registro na fila, para nao ter integracoes duplicadas.*/

				if (qt_registros_w > 0) then
					ie_integra_w := 'N';
					
					CALL gerar_reg_alter_fila(nr_seq_fila_w, nr_seq_evento_sistema_w);

					if (ie_status_reproc_w = 'E') then
						CALL atualizar_status_reproc_intpd(nr_seq_fila_w, ie_status_w, nm_usuario_p, 'N');
						reg_integracao_p.nr_seq_fila	:=	nr_seq_fila_w;
					end if;
				end if;
				end;
			end if;
			
			if (ie_integra_w = 'S') then
				begin		
				begin
				select	1
				into STRICT	qt_registros_w
				from	intpd_eventos_sistema_rest
				where	nr_seq_evento_sistema = nr_seq_evento_sistema_w  LIMIT 1;		
				exception
				when others then
					qt_registros_w	:=	0;
				end;
				
				
				/*se nao tem nenhum filtro, integra todos*/

				if (qt_registros_w = 0) then
					ie_integra_w := 'S';				
				elsif (ie_evento_p = '1') then /*enviar cadastro de materiais*/
					begin
					/*se tem regra recebe n, e abaixo faz a verificacao se integra ou nao*/

					ie_integra_w := 'N';
					
					begin
					select	a.cd_grupo_material,
						a.cd_subgrupo_material,
						a.cd_classe_material,
						a.nr_seq_familia			
					into STRICT	cd_grupo_material_w,
						cd_subgrupo_material_w,
						cd_classe_material_w,
						nr_seq_familia_w			
					from	estrutura_material_v a
					where	a.cd_material = nr_seq_documento_p;
					
					exception
					when others then
						cd_grupo_material_w  := coalesce(reg_integracao_p.cd_grupo_material, 0);
						cd_subgrupo_material_w  := coalesce(reg_integracao_p.cd_subgrupo_material, 0);
						cd_classe_material_w  := coalesce(reg_integracao_p.cd_classe_material, 0);
						nr_seq_familia_w  := coalesce(reg_integracao_p.nr_seq_familia, 0);
					end;
					
					begin
					select	ie_padronizado,
						ie_material_estoque
					into STRICT	ie_padronizado_w,
						ie_material_estoque_w
					from	material_estab
					where	cd_material = nr_seq_documento_p
					and	cd_estabelecimento = cd_estab_logado_w;
					exception
					when others then
						ie_padronizado_w 	:= coalesce(reg_integracao_p.ie_padronizado,'S');
						ie_material_estoque_w	:= coalesce(reg_integracao_p.ie_material_estoque,'S');
					end;
					
					open c02;
					loop
					fetch c02 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin	
						ie_integra_w := ie_integra_w;
						end;
					end loop;
					close c02;
					end;
				elsif (ie_evento_p = '2') then /*enviar ordem de compra (ao aprovar)*/
					begin
					ie_integra_w := 'N';
									
					open c05;
					loop
					fetch c05 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c05 */
						begin

						ie_integra_w := ie_integra_w;
						
						/*quando encontrar registro que integra = s, o sistema ira integrar a ordem de compra*/

						if (ie_integra_w = 'S') then
							exit;
						end if;
						end;
					end loop;
					close c05;
					end;
				elsif (ie_evento_p in ('3')) then /*enviar nota fiscal (ao calcular/antes de calcular)*/
					begin
					ie_integra_w := 'N';
				

					select	max(ie_tipo_nota),
						max(cd_operacao_nf),
						max(cd_natureza_operacao),
						max(cd_estabelecimento),
						max(ie_situacao)
					into STRICT	ie_tipo_nota_w,
						cd_operacao_nf_w,
						cd_natureza_operacao_w,
						cd_estabelecimento_w,
						ie_situacao_nota_w
					from	nota_fiscal
					where	nr_sequencia = nr_seq_documento_p;
					
					
					open c07;
					loop
					fetch c07 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c07 */
						begin			
						ie_integra_w := ie_integra_w;
										
						/*quando encontrar registro que integra = s, o sistema ira integrar a nota fiscal*/

						if (ie_integra_w = 'S') then
							exit;
						end if;	
							
						end;
					end loop;
					close c07;			
					end;			
				elsif (ie_evento_p = '65') then
					begin
					ie_integra_w := 'N';
				
					ie_tipo_nota_w := reg_integracao_p.ie_tipo_nota;
					cd_operacao_nf_w := reg_integracao_p.cd_operacao_nf;
					cd_natureza_operacao_w := reg_integracao_p.cd_natureza_operacao;
					cd_estabelecimento_w := reg_integracao_p.cd_estabelecimento;
					ie_situacao_nota_w := reg_integracao_p.ie_situacao_nota;
					
					open c07;
					loop
					fetch c07 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c07 */
						begin			
						ie_integra_w := ie_integra_w;
						if (ie_integra_w = 'S') then
							exit;
						end if;	
							
						end;
					end loop;
					close c07;			
					end;
				elsif (ie_evento_p = '4') then /*enviar estrutura de materiais*/
					begin
					ie_integra_w := 'N';
					
					cd_classe_material_w	:=	coalesce(reg_integracao_p.cd_classe_material,0);
					
					begin
					select	cd_subgrupo_material
					into STRICT	cd_subgrupo_material_w
					from	classe_material
					where	cd_classe_material = cd_classe_material_w;		
					exception
					when others then
						cd_subgrupo_material_w	:=	coalesce(reg_integracao_p.cd_subgrupo_material,0);
					end;
					
					begin
					select	cd_grupo_material
					into STRICT	cd_grupo_material_w
					from	subgrupo_material
					where	cd_subgrupo_material = cd_subgrupo_material_w;		
					exception
					when others then
						cd_grupo_material_w	:=	coalesce(reg_integracao_p.cd_grupo_material,0);
					end;
					
					open c08;
					loop
					fetch c08 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c08 */
					end loop;
					close c08;
					end;	
				elsif (ie_evento_p = '6') then /*enviar solicitacao de compra (ao aprovar)*/
		
					begin
					
					ie_integra_w := intpd_obter_se_solic_integra(	
							nr_seq_documento_p,
							nr_seq_evento_sistema_w, 
							reg_integracao_p.cd_estab_documento,
							reg_integracao_p.cd_local_estoque,
							reg_integracao_p.cd_centro_custo,
							reg_integracao_p.ie_tipo_solicitacao,
							reg_integracao_p.ie_tipo_compra,
							reg_integracao_p.nr_seq_forma_compra,
							reg_integracao_p.ie_tipo_servico,
							reg_integracao_p.nr_prescricao);
					
					
					end;
				elsif (ie_evento_p = '7') then /*enviar pessoa juridica*/
					begin
					ie_integra_w := 'N';
					
					open c03;
					loop
					fetch c03 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
						begin
						ie_integra_w := ie_integra_w;
						end;
					end loop;
					close c03;
					end;
				elsif (ie_evento_p = '8') then /*enviar local de estoque*/
		
					begin
					ie_integra_w := 'N';
					open c11;
					loop
					fetch c11 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c11 */				
					end loop;
					close c11;
					end;
				elsif (ie_evento_p = '9') or (ie_evento_p = '392') or (ie_evento_p = '399') then /*enviar fechamento mensal de estoque*/
		
					begin
					ie_integra_w := 'N';
					open c14;
					loop
					fetch c14 into	
						ie_integra_w;
						if (ie_evento_p = '392') then	
							
							select count(*)
							into STRICT ie_existe_log_doc_w
							from transm_BNDASAF
							where cd_registro_origem = nr_seq_documento_p;

							if (ie_existe_log_doc_w = 0) then
								INSERT INTO transm_BNDASAF(
								    nr_sequencia,
								    dt_atualizacao, 
								    nm_usuario, 
								    dt_atualizacao_nrec, 
								    nm_usuario_nrec, 
								    ie_evento, 
								    cd_registro_origem,
								    nr_atendimento)
								VALUES (
								    nextval('transm_bndasaf_seq'), 
								    clock_timestamp(), 
								    nm_usuario_p, 
								    clock_timestamp(), 
								    nm_usuario_p,
								    ie_evento_p, 
								    nr_seq_documento_p,
								    reg_integracao_p.nr_atendimento);
							end if;
						end if;
					EXIT WHEN NOT FOUND; /* apply on c14 */				
					end loop;
					close c14;
					end;
				elsif (ie_evento_p = '10') or (ie_evento_p = '301')  or (ie_evento_p = '393')   or (ie_evento_p = '394')  or (ie_evento_p = '396') or (ie_evento_p = '397') then /*enviar movimento de estoque / envia atualizacao da movimento estoque valor*/
	
					begin					
					ie_integra_w := 'N';
					
					open c13;
					loop
					fetch c13 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c13 */
						begin
						if (ie_evento_p = '393') or (ie_evento_p = '394') or (ie_evento_p = '396') then	
							begin
							select	count(*)
							into STRICT	ie_existe_log_doc_w
							from 	transm_BNDASAF
							where	cd_registro_origem = nr_seq_documento_p;

							if (ie_existe_log_doc_w = 0) then
								INSERT INTO transm_BNDASAF(
								    nr_sequencia,
								    dt_atualizacao, 
								    nm_usuario, 
								    dt_atualizacao_nrec, 
								    nm_usuario_nrec, 
								    ie_evento, 
								    cd_registro_origem,
								    nr_atendimento,
								    qt_dispensacao,
								    dt_dispensacao,
								    ie_lido,
                                    cd_acao,
                                    cd_material,
                                    qt_movimento,
                                    nr_documento)
								VALUES (
								    nextval('transm_bndasaf_seq'), 
								    clock_timestamp(), 
								    nm_usuario_p, 
								    clock_timestamp(), 
								    nm_usuario_p,
								    ie_evento_p, 
								    nr_seq_documento_p,
								    reg_integracao_p.nr_atendimento,
								    reg_integracao_p.qt_mes,
								    reg_integracao_p.dt_processo,
								    reg_integracao_p.ie_lido,
                                    reg_integracao_p.cd_acao,
                                    reg_integracao_p.cd_material,
                                    reg_integracao_p.qt_movimento,
                                    reg_integracao_p.nr_documento);
							end if;
							end;
						elsif (ie_evento_p = '398') then
							UPDATE	transm_BNDASAF
							SET	ie_lido = 'R'
							where	cd_registro_origem = nr_seq_documento_p
							and	qt_dispensacao = reg_integracao_p.qt_mes
							and	dt_dispensacao = reg_integracao_p.dt_processo;
						elsif (ie_evento_p = '397') then
							UPDATE	transm_BNDASAF
							SET	ie_lido = 'E'
							where	cd_registro_origem = nr_seq_documento_p;
						end if;
						end;
					end loop;
					close c13;					
					end;
				elsif (ie_evento_p in ('106')) then /*'enviar episodio do paciente'*/
					begin
					reg_integracao_p.cd_estab_documento	:=	coalesce(reg_integracao_p.cd_estab_documento, obter_estabelecimento_ativo);
					
					ie_integra_w := 'N';
					open c48;
					loop
					fetch c48 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c48 */				
					end loop;
					close c48;
					end;
				elsif (ie_evento_p in ('365', '370')) then /*'enviar / consultar classificacao pessoa'*/
					begin					
					ie_integra_w := 'N';
					
					open c49;
					loop
					fetch c49 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c49 */				
					end loop;
					close c49;
					end;
				elsif (ie_evento_p in ('120','190','273')) then /*'Filtro 96000 - Somente acao | Enviar pessoa fisica - enviar episodio do paciente'*/
					begin
					ie_integra_w := 'N';
					open c23;
					loop
					fetch c23 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c23 */				
					end loop;
					close c23;
					end;
				elsif (ie_evento_p in ('114','402')) then /*enviar alta do paciente*/
					begin
					ie_integra_w := 'N';
					open c37;
					loop
					fetch c37 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c37 */				
					end loop;
					close c37;
					end;
				elsif (ie_evento_p in ('118')) then /* enviar movimentacao de setor */
					begin
					ie_integra_w := 'N';
					open c33;
					loop
					fetch c33 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c33 */				
					end loop;
					close c33;
					end;
				elsif (ie_evento_p in ('195')) then /* Enviar saida temporaria do setor */
					begin
					ie_integra_w := 'N';
					open c44;
					loop
					fetch c44 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c44 */				
					end loop;
					close c44;
					end;					
				elsif (ie_evento_p in ('12')) then /*enviar pessoa fisica somento com prontuario*/
					begin
					ie_integra_w := 'N';
					
					begin				
					reg_integracao_p := gerar_int_padrao.setnrprontuario(nr_seq_documento_p, reg_integracao_p);				
					exception
					when others then
						null;
					end;
					
					open c31;
					loop
					fetch c31 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c31 */				
					end loop;
					close c31;				
					end;
				elsif (ie_evento_p in ('104','253')) then /*consultar episodio paciente*/
					begin
					ie_integra_w := 'N';
					open c26;
					loop
					fetch c26 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c26 */					
					end loop;
					close c26;
					end;
				elsif (ie_evento_p = '13') then /*enviar setor de atendimento*/
					begin
					ie_integra_w := 'N';
					open c12;
					loop
					fetch c12 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c12 */				
					end loop;
					close c12;
					end;
				elsif (ie_evento_p = '26') then /*envio do titulo a receber*/
					begin
					ie_integra_w := 'N';
					open c16;
					loop
					fetch c16 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c16 */
					end loop;
					close c16;
					end;
				elsif (ie_evento_p = '30') then /*enviar requisicao de materiais e medicamentos*/
					begin
					ie_integra_w := 'N';
					open c15;
					loop
					fetch c15 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c15 */
					end loop;
					close c15;
					end;
				elsif (ie_evento_p = '54') then /*enviar procedimento paciente*/
					begin
					ie_integra_w := 'N';
					open c24;
					loop
					fetch c24 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c24 */
					end loop;
					close c24;
					--evitar que o item seja agendado em duplicidade.
					if (ie_integra_w = 'S') then
						begin
						select	'N'
						into STRICT	ie_integra_w
						from	intpd_fila_transmissao
						where	ie_evento		= ie_evento_p
						and	nr_seq_documento	= nr_seq_documento_p
						and	ie_status		= ie_status_w
						and	nr_seq_evento_sistema	= nr_seq_evento_sistema_w  LIMIT 1;
						exception
						when others then
							ie_integra_w	:= 'S';
						end;				
					end if;				
					if (ie_integra_w = 'S') then
						begin
							select	'P'
							into STRICT	ie_status_w
							from	intpd_eventos_sistema
							where	nr_sequencia = nr_seq_evento_sistema_w
							and nr_seq_projeto_xml = 102231  LIMIT 1;
							exception
							when others then
							ie_status_w := ie_status_w;
						end;
					end if;
					
					end;
				elsif (ie_evento_p = '56') then /*enviar baixa da requisicao de materiais e medicamentos*/
					begin
					ie_integra_w := 'N';
					open c18;
					loop
					fetch c18 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c18 */
					end loop;
					close c18;
					end;
				elsif (ie_evento_p = '57') then /*enviar cotacao de compra*/
					begin
					ie_integra_w := 'N';
					open c19;
					loop
					fetch c19 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c19 */
						begin
						ie_integra_w := ie_integra_w;				
						if (ie_integra_w = 'S') then
							exit;
						end if;
						end;
					end loop;
					close c19;
					end;
				elsif (ie_evento_p in (74, 69, 70, 123)) then /*enviar dados internacao*/
	
					begin
					if (reg_integracao_p.ie_filtrar_conv = 'N') then
						ie_integra_w := 'S';
					else	
						ie_integra_w := 'N';
						open c21;
						loop
						fetch c21 into	
							ie_integra_w;
						EXIT WHEN NOT FOUND; /* apply on c21 */
						end loop;
						close c21;
					end if;
					end;
				elsif (ie_evento_p in (71, 72)) then
					begin
					if (reg_integracao_p.ie_filtrar_conv = 'N') then
						ie_integra_w := 'S';
					else	
						ie_integra_w := 'S';
						open c28;
						loop
						fetch c28 into	
							ie_integra_w;
						EXIT WHEN NOT FOUND; /* apply on c28 */
						end loop;
						close c28;
					end if;
					end;					
				elsif (ie_evento_p  in ('73','102','126','143','144','146','174','175')) then
					begin
					if (reg_integracao_p.ie_filtrar_conv = 'N') then
						ie_integra_w := 'S';
					else	
						ie_integra_w := 'S';
						open c27;
						loop
						fetch c27 into	
							ie_integra_w;
						EXIT WHEN NOT FOUND; /* apply on c27 */
						end loop;
						close c27;
					end if;
					end;
				elsif (ie_evento_p  in ('148', '149', '166', '180')) then
					begin
					if (reg_integracao_p.ie_filtrar_conv = 'N') then
						ie_integra_w := 'S';
					else
						ie_integra_w := 'N';
						open c32;
						loop
						fetch c32 into
							ie_integra_w;
						EXIT WHEN NOT FOUND; /* apply on c32 */
						end loop;
						close c32;
					end if;
					end;
				elsif (ie_evento_p = '75') then /*enviar lote fornecedor*/
					begin
					ie_integra_w := 'N';
					open c20;
					loop
					fetch c20 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c20 */					
					end loop;
					close c20;
					end;
				elsif (ie_evento_p = '82') then /* enviar diagnostico */
					begin
					ie_integra_w := 'N';
					open c25;
					loop
					fetch c25 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c25 */					
					end loop;
					close c25;
					end;			
				elsif (ie_evento_p = '98') then /*enviar saldo estoque conforme consulta*/
					begin
					ie_integra_w := 'N';
					open c22;
					loop
					fetch c22 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c22 */					
					end loop;
					close c22;
					end;
				elsif (ie_evento_p = '135') then /*enviar atendimento convenio*/
					begin
					ie_integra_w := 'N';
					open c34;
					loop
					fetch c34 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c34 */
					end loop;
					close c34;
					--evitar que o item seja agendado em duplicidade.
					if (ie_integra_w = 'S') then
						begin
						select	'N'
						into STRICT	ie_integra_w
						from	intpd_fila_transmissao
						where	ie_evento		= ie_evento_p
						and	nr_seq_documento	= nr_seq_documento_p
						and	ie_status		= ie_status_w
						and	nr_seq_evento_sistema	= nr_seq_evento_sistema_w  LIMIT 1;
						exception
						when others then
							ie_integra_w	:= 'S';
						end;				
					end if;
					
					end;
				elsif (ie_evento_p in ('150','151','152')) then /*enviar informacoes unidade atendimento*/
					begin
					ie_integra_w := 'N';
					open c30;
					loop
					fetch c30 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c30 */					
					end loop;
					close c30;
					end;
				elsif (ie_evento_p = '260') then /* enviar lote prescricao */
					begin
					ie_integra_w := 'N';
					open c35;
					loop
					fetch c35 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c35 */					
					end loop;
					close c35;
					end;
				elsif (ie_evento_p in ('421','422')) then /*Enviar informacoes de conferencia do recebimento/por item*/
					begin
					ie_integra_w := 'N';
					open c35;
					loop
					fetch c35 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c35 */					
					end loop;
					close c35;
					end;
				elsif (ie_evento_p = '275') then /* enviar cancelamento lote prescricao */
					begin
					ie_integra_w := 'N';
					open c35;
					loop
					fetch c35 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c35 */					
					end loop;
					close c35;
					end;
				elsif (ie_evento_p = '290') then /* enviar devolucao de materias e medicamentos */
					begin
					ie_integra_w := 'N';
					open c36;
					loop
					fetch c36 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c36 */					
					end loop;
					close c36;
					end;					
				elsif (ie_evento_p in ('127','309','320','305','310','306','328','314','302','303','307','327','389')) then /* Enviar case outpatient, Enviar cadastro de exames laboratoriais -- Enviar refeicao -- Itens da Prescricao */
					begin
					if (ie_evento_p = '127') then
						reg_integracao_p.cd_estab_documento	:=	coalesce(reg_integracao_p.cd_estab_documento, obter_estabelecimento_ativo);
					end if;
					
					ie_integra_w := 'N';
					open c38;
					loop
					fetch c38 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c38 */					
					end loop;
					close c38;
					end;
				elsif (ie_evento_p = '308') then /* enviar admissao paciente no setor */
					begin
					ie_integra_w := 'N';
					open c39;
					loop
					fetch c39 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c39 */					
					end loop;
					close c39;
					end;
				elsif (ie_evento_p in ('168', '304')) then
					begin
					  ie_integra_w := 'N';
					  open c40;
					  loop
					  fetch c40 into	
						ie_integra_w;
					  EXIT WHEN NOT FOUND; /* apply on c40 */					
					  end loop;
					  close c40;
					end;
				elsif (ie_evento_p = '53') then /*envio do titulo a pagar*/
					begin
					ie_integra_w := 'N';
					open c41;
					loop
					fetch c41 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c41 */
					end loop;
					close c41;
					end;
				 elsif (ie_evento_p = '313') then
					begin
					ie_integra_w := 'N';
					open c42;
					loop
					fetch c42 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c42 */
					end loop;
					close c42;
					end;
				elsif (ie_evento_p = '395') then
					begin
					ie_integra_w := 'N';
					open c43;
					loop
					fetch c43 into
						ie_integra_w;
						
						select count(*)
						into STRICT ie_existe_log_doc_w
						from transm_BNDASAF
						where cd_registro_origem = nr_seq_documento_p;

						if (ie_existe_log_doc_w = 0) then
							INSERT INTO transm_BNDASAF(
							    nr_sequencia,
							    dt_atualizacao, 
							    nm_usuario, 
							    dt_atualizacao_nrec, 
							    nm_usuario_nrec, 
							    ie_evento, 
							    cd_registro_origem,
							    nr_atendimento,
							    qt_dispensacao,
							    dt_dispensacao,
							    ie_lido)
							VALUES (
							    nextval('transm_bndasaf_seq'), 
							    clock_timestamp(), 
							    nm_usuario_p, 
							    clock_timestamp(), 
							    nm_usuario_p,
							    ie_evento_p, 
							    nr_seq_documento_p,
							    reg_integracao_p.nr_atendimento,
							    reg_integracao_p.qt_mes,
							    reg_integracao_p.dt_processo,
							    reg_integracao_p.ie_lido);
							end if;
					EXIT WHEN NOT FOUND; /* apply on c43 */
					end loop;
					close c43;
					end;
				elsif (ie_evento_p in ('403')) then /*Send episode treatment certificate*/
					begin
					ie_integra_w := 'N';
					open c45;
					loop
					fetch c45 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c45 */				
					end loop;
					close c45;
					end;
				elsif (ie_evento_p in ('433')) then
					begin
					ie_integra_w := 'N';
				

					open c433;
					loop
					fetch c433 into	
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c433 */
						begin
						ie_integra_w := ie_integra_w;

						if (ie_integra_w = 'S') then
							exit;
						end if;	

						end;
					end loop;
					close c433;			
					end;
					
				elsif (ie_evento_p = '426') then
         					begin
         					open c46;
         					loop
         					fetch c46 into
               						ie_integra_w;
         					EXIT WHEN NOT FOUND; /* apply on c46 */
         					end loop;
         				close c46;
         				end;
				elsif (ie_evento_p = '401') then /*send case status*/
					begin
					ie_integra_w := 'N';
					open c47;
					loop
					fetch c47 into
						ie_integra_w;
					EXIT WHEN NOT FOUND; /* apply on c47 */
					end loop;
					close c47;
					end;
				end if;			
				end;
				end if;	
		
			if (ie_integra_w = 'S') then
				--((get_executando_recebimento = 'N')  or (ie_evento_p = '98')) then lhalves os 1790793 em 08/11/2018 - movi esta condicao para o inicio da rotina, para nao realizar todo o item acima desnecessariamente
          /*coloquei esse or porque o evento 98 nao tem nm_usuario*/

        
        begin      
        select  nextval('intpd_fila_transmissao_seq')
        into STRICT  nr_seq_fila_w
;
		
        select  coalesce(max(ie_envia_recebe),'E')
        into STRICT  ie_envio_recebe_w
        from  intpd_config_eventos
        where   ie_evento = ie_evento_p;

	
		
        if (ie_envio_recebe_w =  'R') then
          begin
          select  cd_estabelecimento,
            cd_perfil,
            cd_setor_atendimento,
            nm_usuario_regra
          into STRICT  cd_estabelecimento_regra_w,
            cd_perfil_regra_w,
            cd_setor_atendimento_regra_w,
            nm_usuario_regra_w
          from   intpd_eventos_inf_receb
          where  nr_seq_evento_sistema = nr_seq_evento_sistema_w;
          exception
            when others then
            cd_estabelecimento_regra_w  := null;
            cd_perfil_regra_w       := 0;
            cd_setor_atendimento_regra_w    := null;
            nm_usuario_regra_w      := null;
            end;
        end if;

        if (ie_envio_recebe_w =  'E') then
          cd_perfil_regra_w := wheb_usuario_pck.get_cd_perfil;
          cd_setor_atendimento_regra_w := wheb_usuario_pck.get_cd_setor_atendimento;

          if (ie_evento_p in ('12','144','118','168','304','308','313')) and (coalesce(reg_integracao_p.cd_estab_documento::text, '') = '') then
            cd_estabelecimento_regra_w := wheb_usuario_pck.get_cd_estabelecimento;
          end if;
        end if;

        --estava gerando erro na base da alemanha, quando usuario nao tinha setor configurado para o usuario.
        begin
        select  cd_setor_atendimento
        into STRICT  cd_setor_atendimento_regra_w
        from  setor_atendimento
        where  cd_setor_atendimento  = cd_setor_atendimento_regra_w  LIMIT 1;
        exception
        when others then
          cd_setor_atendimento_regra_w := null;
        end;

        insert into intpd_fila_transmissao(
          nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec, 
          ie_evento,
          nr_seq_documento,
          nr_seq_evento_sistema,
          ie_status,
          ie_operacao,
          ie_envio_recebe,
          nr_seq_item_documento,
          cd_estab_documento,
          ds_parametros_adic,
          nr_seq_agrupador,
          cd_perfil,
          cd_setor_usuario,
          ie_controle_tag,
          nr_seq_servidor,
          ie_geracao)
        values (  nr_seq_fila_w,
          clock_timestamp(),
          coalesce(nm_usuario_regra_w, nm_usuario_p),
          clock_timestamp(),
          coalesce(nm_usuario_regra_w, nm_usuario_p),
          ie_evento_p,
          CASE WHEN ie_evento_p='11' THEN  to_char(nr_seq_fila_w)  ELSE nr_seq_documento_p END ,
          nr_seq_evento_sistema_w,
          ie_status_w,
          reg_integracao_p.ie_operacao,
          ie_envio_recebe_w,
          reg_integracao_p.nr_seq_item_documento_p,
          coalesce(cd_estabelecimento_regra_w, reg_integracao_p.cd_estab_documento),
          ds_parametros_adic_p,
          reg_integracao_p.nr_seq_agrupador,
          CASE WHEN cd_perfil_regra_w=0 THEN null  ELSE cd_perfil_regra_w END ,
          cd_setor_atendimento_regra_w,
          reg_integracao_p.ie_controle_tag,
          nr_seq_servidor_origem_w,
          reg_integracao_p.ie_geracao);

        reg_integracao_p.nr_seq_fila      :=  nr_seq_fila_w;
        current_setting('gerar_int_padrao.intpd_fila_w')::t_intpd_fila(current_setting('gerar_int_padrao.intpd_fila_w')::t_intpd_fila.count).nr_sequencia  :=  nr_seq_fila_w;
        end;
      end if;
      end;
    end loop;
    close c01;

  end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_padrao.gravar_integracao ( ie_evento_p text, nr_seq_documento_p text, nm_usuario_p text, reg_integracao_p INOUT reg_integracao, ds_parametros_adic_p text default null, ie_manter_padrao_p text default 'N') FROM PUBLIC;
