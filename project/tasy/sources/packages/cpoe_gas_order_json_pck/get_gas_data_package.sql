-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION cpoe_gas_order_json_pck.get_gas_data (nr_cpoe_gas_p bigint) RETURNS PHILIPS_JSON_LIST AS $body$
DECLARE

	json_item_w		philips_json;
	json_item_list_w	philips_json_list;
	
	C01 CURSOR FOR
		SELECT NR_SEQUENCIA,
        DT_LIBERACAO,
        DT_LIB_SUSPENSAO, 
        DT_INICIO, 
        DT_FIM, 
        IE_DURACAO, 
        IE_URGENCIA, 
        Dt_atualizacao,
        cpoe_obter_dt_suspensao(nr_sequencia,'G') dt_suspensao,
        obter_conv_envio('INTERVALO_PRESCRICAO', 'CD_INTERVALO', CD_INTERVALO, 'E')  interval_code_value,
        a.cd_medico ordering_provider_id_number,
        obter_dados_pf(a.cd_medico,'PNG') ordering_provider_given_name,
        obter_dados_pf(a.cd_medico,'PNL') ordering_provider_last_name,
        obter_dados_pf(a.cd_medico,'PNM') ordering_provider_middle_name, 
        substr(obter_nome_pf(a.cd_medico),1,80) nm_medico_solicitante,
        Obter_Pessoa_Fisica_Usuario(a.nm_usuario_nrec,'C') ordering_user_id_number,
        Obter_Pessoa_Fisica_Usuario(a.nm_usuario_susp,'C') order_prov_susp_id_number,
        substr(OBTER_DESCRICAO_DOMINIO(1299, IE_RESPIRACAO),1,80) desc_respiration_type,
        obter_conv_envio('CPOE_GASOTERAPIA', 'IE_RESPIRACAO', IE_RESPIRACAO, 'E')  code_value,
        obter_conv_envio('CPOE_GASOTERAPIA', 'IE_RESPIRACAO', IE_RESPIRACAO, 'S')  code_system,
        CASE WHEN coalesce(a.DS_OBSERVACAO::text, '') = '' THEN ''  ELSE '. ' ||elimina_acentuacao(a.DS_OBSERVACAO) END  DS_OBSERVACAO, /* OBR fields */
        CASE WHEN coalesce(a.DS_JUSTIFICATIVA::text, '') = '' THEN ''  ELSE '. ' ||elimina_acentuacao(a.DS_JUSTIFICATIVA) END  DS_JUSTIFICATIVA, 
        Obter_Desc_Mod_Ventilatoria(CD_MODALIDADE_VENT) DS_MOD_VENTILATORIA,
        Obter_Desc_Gas(NR_SEQ_GAS) DS_GAS,
        QT_VC_PROG,
        QT_TI_TE,
        QT_INSPIRATORIO_PORC,
        QT_TEMPO_BAIXO,
        QT_TEMPO_ALTO,
        QT_SENSIB_MIN,
        QT_TEMPO_INSP,
        QT_SENSIB_RESP,
        QT_SATO2,
        QT_ABAIXO_PEEP,
        QT_PIP,
        QT_PH,
        QT_PEEP,
        QT_PCO2,
        QT_PS,
        QT_ACIMA_PEEP,
        QT_MAP,
        QT_IPAP,
        QT_FREQ_VENT_HZ,
        QT_FREQ_VENT,
        QT_FLUXO_INSP,
        QT_FRACAO_OXIGENIO,
        QT_FIO2,
        QT_EPAP,
        QT_CPAP,
        QT_BIC,
        QT_BE,
        QT_AMPLITUDE,
        QT_AMPLITUDE_PORCENT,
        QT_GASOTERAPIA, 
        IE_UNIDADE_MEDIDA,
        IE_ADMINISTRACAO
  from CPOE_GASOTERAPIA a
  where NR_SEQUENCIA = nr_cpoe_gas_p;
		
	
BEGIN
	json_item_list_w	:= philips_json_list();
	
	for r_c01 in c01 loop
		begin
		json_item_w		:= philips_json();

    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'nrSequencia', r_c01.nr_sequencia);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dtLiberacao', r_c01.dt_liberacao);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dtLibSuspensao', r_c01.dt_lib_suspensao);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dtInicio', r_c01.dt_inicio);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dtFim', r_c01.dt_fim);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'ieDuracao', r_c01.ie_duracao);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'ieUrgencia', r_c01.ie_urgencia);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dtAtualizacao', r_c01.dt_atualizacao);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dtSuspensao', r_c01.dt_suspensao);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'intervalCodeValue', r_c01.interval_code_value);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'orderingProviderIdNumber', r_c01.ordering_provider_id_number);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'orderingProviderGivenName', r_c01.ordering_provider_given_name);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'orderingProviderLastName', r_c01.ordering_provider_last_name);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'orderingProviderMiddleName', r_c01.ordering_provider_middle_name);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'nmMedicoSolicitante', r_c01.nm_medico_solicitante);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'orderingUserIdNumber', r_c01.ordering_user_id_number);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'orderProvSuspIdNumber', r_c01.order_prov_susp_id_number);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'descRespirationType', r_c01.desc_respiration_type);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'codeValue', r_c01.code_value);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'codeSystem', r_c01.code_system);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dsObservacao', r_c01.ds_observacao);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dsJustificativa', r_c01.ds_justificativa);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dsModVentilatoria', r_c01.DS_MOD_VENTILATORIA);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'dsGas', r_c01.DS_GAS);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtVcProg', r_c01.qt_vc_prog);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtTiTe', r_c01.qt_ti_te);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtInspiratorioPorc', r_c01.qt_inspiratorio_porc);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtTempoBaixo', r_c01.qt_tempo_baixo);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtTempoAlto', r_c01.qt_tempo_alto);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtSensibMin', r_c01.qt_sensib_min);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtTempoInsp', r_c01.qt_tempo_insp);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtSensibResp', r_c01.qt_sensib_resp);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtSato2', r_c01.qt_sato2);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtAbaixoPeep', r_c01.qt_abaixo_peep);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtPip', r_c01.qt_pip);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtPh', r_c01.qt_ph);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtPeep', r_c01.qt_peep);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtPco2', r_c01.qt_pco2);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtPs', r_c01.qt_ps);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtAcimaPeep', r_c01.qt_acima_peep);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtMap', r_c01.qt_map);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtIpap', r_c01.qt_ipap);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtFreqVentHz', r_c01.qt_freq_vent_hz);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtFreqVent', r_c01.qt_freq_vent);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtFluxoInsp', r_c01.qt_fluxo_insp);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtFracaoOxigenio', r_c01.qt_fracao_oxigenio);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtFio2', r_c01.qt_fio2);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtEpap', r_c01.qt_epap);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtCpap', r_c01.qt_cpap);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtBic', r_c01.qt_bic);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtBe', r_c01.qt_be);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtAmplitude', r_c01.qt_amplitude);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtAmplitude porcent', r_c01.qt_amplitude);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'qtGasoterapia', r_c01.qt_gasoterapia);
    json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'ieUnidadeMedida', r_c01.ie_unidade_medida);

		if (r_c01.dt_fim IS NOT NULL AND r_c01.dt_fim::text <> '') then
				json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'numberOfDays', OBTER_DIAS_ENTRE_DATAS(r_c01.dt_inicio, r_c01.dt_fim));
		end if;
		
		if (r_c01.IE_ADMINISTRACAO in ('N', 'C')) then
      json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'priority', 'PRN');
    elsif (r_c01.IE_URGENCIA = '0') then
      json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'priority', 'S');
    elsif (r_c01.IE_URGENCIA = '5') then
      json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'priority', 'TM5');
    elsif (r_c01.IE_URGENCIA = '10') then
      json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'priority', 'TM10');
    elsif (r_c01.IE_URGENCIA = '15') then
      json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'priority', 'TM15');
    else
      json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'priority', 'R');
    end if;

		json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'effectiveDate', coalesce(r_c01.dt_lib_suspensao, r_c01.dt_liberacao));
		json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'enteredBy', coalesce(r_c01.order_prov_susp_id_number, r_c01.ordering_user_id_number));
		json_item_w := cpoe_gas_order_json_pck.add_json_value(json_item_w, 'testInstruction', r_c01.ds_justificativa || '~' || r_c01.ds_observacao);
		
		json_item_list_w.append(json_item_w.to_json_value());
		end;
	end loop;
	
	return json_item_list_w;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION cpoe_gas_order_json_pck.get_gas_data (nr_cpoe_gas_p bigint) FROM PUBLIC;
