-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function proc_interno_estrut_int_pck.obter_registros() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION proc_interno_estrut_int_pck.obter_registros (nr_seq_tipo_p bigint, nr_seq_superior_p bigint, ie_nivel_cadastro_p text, nr_seq_order_unit_p bigint default null) RETURNS SETOF T_ESTRUTURA AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	T_ESTRUTURA;
BEGIN
	v_query := 'SELECT * FROM proc_interno_estrut_int_pck.obter_registros_atx ( ' || quote_nullable(nr_seq_tipo_p) || ',' || quote_nullable(nr_seq_superior_p) || ',' || quote_nullable(ie_nivel_cadastro_p) || ',' || quote_nullable(nr_seq_order_unit_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret T_ESTRUTURA);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION proc_interno_estrut_int_pck.obter_registros_atx (nr_seq_tipo_p bigint, nr_seq_superior_p bigint, ie_nivel_cadastro_p text, nr_seq_order_unit_p bigint default null) RETURNS SETOF T_ESTRUTURA AS $body$
DECLARE


t_estrutura_row_w	t_estrutura_row;
qt_retorno_w		bigint := 0;
ie_exige_lado_w		varchar(1);

c01 CURSOR FOR
SELECT	nr_sequencia,
	ds_estrutura,
	ie_nivel_cadastro,
	nr_seq_estrut_sup,
	cpoe_proc_is_group_structure(nr_seq_superior_p) si_group_appointment
from	pi_estrutura
where	nr_seq_tipo 	= nr_seq_tipo_p
and	ie_situacao	= 'A'
and	coalesce(nr_seq_estrut_sup::text, '') = ''
and	coalesce(nr_seq_superior_p::text, '') = ''

union

SELECT	nr_sequencia,
	ds_estrutura,
	ie_nivel_cadastro,
	nr_seq_estrut_sup,
	cpoe_proc_is_group_structure(nr_seq_superior_p) si_group_appointment
from	pi_estrutura
where	nr_seq_tipo 	= nr_seq_tipo_p
and	ie_situacao	= 'A'
and	nr_seq_estrut_sup = nr_seq_superior_p
order by ds_estrutura;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	nr_seq_proc_int,
  nr_sequencia,
	substr(obter_desc_proc_interno(nr_seq_proc_int),1,255) ds_estrutura,
  (SELECT p.CD_PROCEDIMENTO from proc_interno p where p.NR_SEQUENCIA = nr_seq_proc_int) CD_PROCEDIMENTO,
  (select p.IE_ORIGEM_PROCED from proc_interno p where p.NR_SEQUENCIA = nr_seq_proc_int) IE_ORIGEM_PROCED
from	pi_estrutura_cad
where	nr_seq_estrutura = nr_seq_superior_p
and	obter_estrut_int_order_type(nr_seq_tipo_p, nr_sequencia, nr_seq_order_unit_p) = 'S'
order by 2;

c02_w	c02%rowtype;
BEGIN

if (coalesce(ie_nivel_cadastro_p,'N') = 'N') then

	open C01;
	loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		t_estrutura_row_w.nr_sequencia			:= c01_w.nr_sequencia;
		t_estrutura_row_w.ds_registro			:= c01_w.ds_estrutura;
		t_estrutura_row_w.nr_seq_proc_int		:= null;
		t_estrutura_row_w.ie_nivel_cadastro 	:= c01_w.ie_nivel_cadastro;
		t_estrutura_row_w.si_group_appointment	:= c01_w.si_group_appointment;
		qt_retorno_w	:=	qt_retorno_w + 1;
		RETURN NEXT t_estrutura_row_w;

	end loop;
	close C01;
else
	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	
		select 	ie_exige_lado
		into STRICT 	ie_exige_lado_w
		from 	proc_interno
		where 	nr_sequencia = c02_w.nr_seq_proc_int
		and 	ie_origem_proced = c02_w.ie_origem_proced;

		t_estrutura_row_w.nr_sequencia		:= null;
		t_estrutura_row_w.ds_registro		:= c02_w.ds_estrutura;
		t_estrutura_row_w.nr_seq_proc_int	:= c02_w.nr_seq_proc_int;
		t_estrutura_row_w.ie_nivel_cadastro	:= 'N';
		t_estrutura_row_w.CD_PROCEDIMENTO	:= c02_w.CD_PROCEDIMENTO;
		t_estrutura_row_w.IE_ORIGEM_PROCED	:= c02_w.IE_ORIGEM_PROCED;
		t_estrutura_row_w.ie_exige_lado		:= ie_exige_lado_w;
		t_estrutura_row_w.nr_seq_proc_estrutura := c02_w.nr_sequencia;

		qt_retorno_w :=	qt_retorno_w + 1;

		RETURN NEXT t_estrutura_row_w;
	
	end loop;
	close C02;
end if;

commit;


end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION proc_interno_estrut_int_pck.obter_registros (nr_seq_tipo_p bigint, nr_seq_superior_p bigint, ie_nivel_cadastro_p text, nr_seq_order_unit_p bigint default null) FROM PUBLIC; -- REVOKE ALL ON FUNCTION proc_interno_estrut_int_pck.obter_registros_atx (nr_seq_tipo_p bigint, nr_seq_superior_p bigint, ie_nivel_cadastro_p text, nr_seq_order_unit_p bigint default null) FROM PUBLIC;
