-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE import_drug_master_jp_l10_pkg.import_drug_master_material ( cd_estabelecimento_p bigint, nr_seq_version_p bigint, nm_usuario_p text, cd_imp_material_p bigint, cd_yj_code_p text, ie_dirty_p bigint ) AS $body$
DECLARE


        c01 CURSOR FOR
        SELECT  *
        from    imp_material_imagem
        where   cd_yj_code = cd_yj_code_p
        and     nr_seq_mims_version = nr_seq_version_p;

        nr_seq_material_w            material.cd_material%type;
        material_w                   imp_material%rowtype;
        material_ww                  material%rowtype;
        via_aplic_w                  via_aplicacao%rowtype;
        ds_via_aplicacao_w           via_aplicacao.ds_via_aplicacao%type;
        medic_ficha_tecnica_w        medic_ficha_tecnica%rowtype;
        medic_ficha_tecnica_seq_w    medic_ficha_tecnica.nr_sequencia%type;
        ds_substancia_w              medic_ficha_tecnica.ds_substancia%type;
        ds_grupo_material_w          grupo_material.ds_grupo_material%type;
        cd_grupo_material_w          grupo_material.cd_grupo_material%type;
        grupo_material_w             grupo_material%rowtype;
        subgrupo_material_w          subgrupo_material%rowtype;
        subgrupo_material_seq_w      subgrupo_material.cd_subgrupo_material%type;
        ds_subgrupo_material_w       subgrupo_material.ds_subgrupo_material%type;
        classe_material_w            classe_material%rowtype;
        classe_material_seq_w        classe_material.cd_classe_material%type;
        classe_material_ds_w         classe_material.ds_classe_material%type;
        unidade_medida_w             unidade_medida%rowtype;
        cd_unidada_medida_w          unidade_medida.cd_unidade_medida%type;
        ds_unidade_medida_w          unidade_medida.ds_unidade_medida%type;
        material_imagem_w            material_imagem%rowtype;
        material_imagem_seq_w        material_imagem.nr_sequencia%type;
        mat_via_aplic_w              mat_via_aplic%rowtype;
        material_sistema_externo_w   material_sistema_externo%rowtype;
        c01_w                        c01%rowtype;
        ie_data_exist_w              varchar(1);

BEGIN

	/*  0 - existing no change
        1- existing with change
        2-  new  */
        
        select *
        into STRICT material_w
        from imp_material a
        where
            a.cd_material = cd_imp_material_p
            and cd_yj_code = cd_yj_code_p
            and cd_material = cd_imp_material_p
            and nr_seq_mims_version = nr_seq_version_p;

    if (material_w.ie_cd_sistema_ant_updated <> 1) then
        
	/** Adminstration route existing check **/

        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END 
        into STRICT ie_data_exist_w
        from
            via_aplicacao
        where
            ie_via_aplicacao = material_w.ie_via_aplicacao;

        if ( ie_data_exist_w = 'N' ) then
            select
                b.ds_via_aplicacao
            into STRICT ds_via_aplicacao_w
            from
                imp_via_aplicacao b
            where
                b.ie_via_aplicacao = material_w.ie_via_aplicacao;

            via_aplic_w.ie_situacao := 'A';
            via_aplic_w.ie_gera_diluicao := 'N';
            via_aplic_w.ie_via_aplicacao := material_w.ie_via_aplicacao;
            via_aplic_w.ds_via_aplicacao := ds_via_aplicacao_w;
            via_aplic_w.nm_usuario := nm_usuario_p;
            via_aplic_w.nm_usuario_nrec := nm_usuario_p;
            via_aplic_w.dt_atualizacao := clock_timestamp();
            via_aplic_w.dt_atualizacao_nrec := clock_timestamp();
            insert into via_aplicacao values (via_aplic_w.*);
            commit;
        end if;

	 /** End of Adminstration route existing check **/

	 /** Active Ingredient existing check **/

        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END 
        into STRICT ie_data_exist_w
        from
            medic_ficha_tecnica       a,
            imp_medic_ficha_tecnica   b
        where
            a.ds_substancia = b.ds_substancia
            and b.nr_sequencia = material_w.nr_seq_ficha_tecnica;

        if ( ie_data_exist_w = 'N' ) then
            select
                nextval('medic_ficha_tecnica_seq')
            into STRICT medic_ficha_tecnica_seq_w
;

            select
                b.ds_substancia
            into STRICT ds_substancia_w
            from
                imp_medic_ficha_tecnica b
            where
                b.nr_sequencia = material_w.nr_seq_ficha_tecnica;

            medic_ficha_tecnica_w.nr_sequencia := medic_ficha_tecnica_seq_w;
            medic_ficha_tecnica_w.ds_substancia := ds_substancia_w; --need to check conversion master	
            medic_ficha_tecnica_w.nm_usuario := nm_usuario_p;
            medic_ficha_tecnica_w.nm_usuario_nrec := nm_usuario_p;
            medic_ficha_tecnica_w.dt_atualizacao := clock_timestamp();
            medic_ficha_tecnica_w.dt_atualizacao_nrec := clock_timestamp();
            medic_ficha_tecnica_w.ie_antimicrobiano := 'N';
            insert into medic_ficha_tecnica values (medic_ficha_tecnica_w.*);
            commit;

        else
            select
                max(a.nr_sequencia)
            into STRICT medic_ficha_tecnica_seq_w
            from
                medic_ficha_tecnica       a,
                imp_medic_ficha_tecnica   b
            where
                a.ds_substancia = b.ds_substancia
                and b.nr_sequencia = material_w.nr_seq_ficha_tecnica;

        end if;
	  /** End of Active Ingredient existing check **/

	  /**group existing check **/

        ds_grupo_material_w := 'NHI Group';
        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
        into STRICT ie_data_exist_w
        from
            grupo_material
        where
            ds_grupo_material = ds_grupo_material_w
            and ie_situacao = 'A';

        if ( ie_data_exist_w = 'N' ) then
            select
                max(cd_grupo_material) + 1
            into STRICT cd_grupo_material_w
            from
                grupo_material;

            grupo_material_w.cd_grupo_material := cd_grupo_material_w;
            grupo_material_w.ds_grupo_material := ds_grupo_material_w;
            grupo_material_w.ie_situacao := 'A';
            grupo_material_w.nm_usuario := nm_usuario_p;
            grupo_material_w.nm_usuario_nrec := nm_usuario_p;
            grupo_material_w.dt_atualizacao := clock_timestamp();
            grupo_material_w.dt_atualizacao_nrec := clock_timestamp();
            insert into grupo_material values (grupo_material_w.*);
            commit;

        else
            select
                max(cd_grupo_material)
            into STRICT cd_grupo_material_w
            from
                grupo_material
            where
                ds_grupo_material = ds_grupo_material_w
                and ie_situacao = 'A';

        end if;

	  /** End of group existing check **/

	  /**Subgroup existing check **/

        ds_subgrupo_material_w := 'NHI Material SubGroup';
        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
        into STRICT ie_data_exist_w
        from
            subgrupo_material       a,
            imp_subgrupo_material   b
        where
            a.ds_subgrupo_material = b.ds_subgrupo_material
            and b.ds_subgrupo_material = ds_subgrupo_material_w
            and a.ie_situacao = 'A'
            and a.cd_grupo_material = cd_grupo_material_w;

        if ( ie_data_exist_w = 'N' ) then
            select
                max(cd_subgrupo_material) + 1
            into STRICT subgrupo_material_seq_w
            from
                subgrupo_material;

            subgrupo_material_w.ie_situacao := 'A';
            subgrupo_material_w.cd_subgrupo_material := subgrupo_material_seq_w;
            subgrupo_material_w.ds_subgrupo_material := ds_subgrupo_material_w;
            subgrupo_material_w.nm_usuario := nm_usuario_p;
            subgrupo_material_w.dt_atualizacao := clock_timestamp();
            subgrupo_material_w.cd_grupo_material := cd_grupo_material_w;
            insert into subgrupo_material values (subgrupo_material_w.*);
            commit;

        else
            select
                max(a.cd_subgrupo_material)
            into STRICT subgrupo_material_seq_w
            from
                subgrupo_material       a,
                imp_subgrupo_material   b
            where
                a.ds_subgrupo_material = b.ds_subgrupo_material
                and b.ds_subgrupo_material = ds_subgrupo_material_w
                and a.ie_situacao = 'A'
                and a.cd_grupo_material = cd_grupo_material_w;

        end if;

	  /** End of Subgroup existing check **/

	  /**Material Class existing check **/

        classe_material_ds_w := substr(cd_yj_code_p, 1, 4)|| '- Material Class';
        select
            CASE WHEN count(a.cd_classe_material)=0 THEN  'N'  ELSE 'S' END
        into STRICT ie_data_exist_w
        from
            classe_material       a,
            imp_classe_material   b
        where
            a.ds_classe_material = b.ds_classe_material
            and a.cd_subgrupo_material = subgrupo_material_seq_w
            and b.ds_classe_material = classe_material_ds_w;

        if ( ie_data_exist_w = 'N' ) then
            select
                max(cd_classe_material) + 1
            into STRICT classe_material_seq_w
            from
                classe_material;

            select
                ds_classe_material
            into STRICT classe_material_ds_w
            from
                imp_classe_material
            where
                cd_classe_material = material_w.cd_classe_material;

            classe_material_w.ie_situacao := 'A';
            classe_material_w.cd_classe_material := classe_material_seq_w;
            classe_material_w.ds_classe_material := classe_material_ds_w;
            classe_material_w.nm_usuario := nm_usuario_p;
            classe_material_w.dt_atualizacao := clock_timestamp();
            classe_material_w.cd_subgrupo_material := subgrupo_material_seq_w;
            insert into classe_material values (classe_material_w.*);

        else
            select
                max(a.cd_classe_material)
            into STRICT classe_material_seq_w
            from
                classe_material       a,
                imp_classe_material   b
            where
                a.ds_classe_material = b.ds_classe_material
                and a.cd_subgrupo_material = subgrupo_material_seq_w
                and b.ds_classe_material = classe_material_ds_w;

        end if;
	  /**End of Material Class existing check **/

	  /**Conversion Unit existing check **/

        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
        into STRICT ie_data_exist_w
        from
            unidade_medida       a,
            imp_unidade_medida   b
        where
            a.cd_unidade_medida = b.cd_unidade_medida
            and b.cd_unidade_medida = material_w.cd_unidade_medida_compra;

        if ( ie_data_exist_w = 'N' ) then
            select
                ds_unidade_medida,
                cd_unidade_medida
            into STRICT
                ds_unidade_medida_w,
                cd_unidada_medida_w
            from
                imp_unidade_medida
            where
                cd_unidade_medida = material_w.cd_unidade_medida_compra;

            unidade_medida_w.ie_situacao := 'A';
            unidade_medida_w.cd_unidade_medida := cd_unidada_medida_w;
            unidade_medida_w.ds_unidade_medida := ds_unidade_medida_w;
            unidade_medida_w.nm_usuario := nm_usuario_p;
            unidade_medida_w.nm_usuario_nrec := nm_usuario_p;
            unidade_medida_w.dt_atualizacao := clock_timestamp();
            unidade_medida_w.dt_atualizacao_nrec := clock_timestamp();
            unidade_medida_w.ie_adm_diluicao := 'N';
            insert into unidade_medida values (unidade_medida_w.*);
            commit;

        else
            select
                max(cd_unidade_medida)
            into STRICT cd_unidada_medida_w
            from
                unidade_medida
            where
                cd_unidade_medida = material_w.cd_unidade_medida_compra;
        end if;
		/**End of Conversion Unit existing check **/

        
        /**Inserting/Updating data to material record **/

        begin
            select  max(cd_material)
            into STRICT    nr_seq_material_w
            from    material
            where   cd_yj_code = cd_yj_code_p;
        exception
            when others then
                nr_seq_material_w := null;
        end;


        if ( coalesce(nr_seq_material_w::text, '') = '' and ie_dirty_p = 2) then
            select
                nextval('material_seq')
            into STRICT nr_seq_material_w
;

            material_ww.cd_material := nr_seq_material_w;
            material_ww.ds_material := material_w.ds_material;
            material_ww.ds_reduzida := coalesce(material_w.ds_reduzida, material_w.ds_material);
            material_ww.ds_general_name := material_w.ds_general_name;
            material_ww.cd_yj_code := material_w.cd_yj_code;
            material_ww.cd_material_estoque := nr_seq_material_w;
            material_ww.ie_psychotropic := material_w.ie_psychotropic;
            material_ww.dt_atualizacao_nrec := clock_timestamp();
            material_ww.nm_usuario_nrec := nm_usuario_p;
            material_ww.dt_atualizacao := clock_timestamp();
            material_ww.nm_usuario := nm_usuario_p;
            material_ww.nr_seq_ficha_tecnica := medic_ficha_tecnica_seq_w;
            material_ww.ie_via_aplicacao := material_w.ie_via_aplicacao;
            material_ww.ie_receita := material_w.ie_receita;
            material_ww.ie_alto_risco := material_w.ie_alto_risco;
            material_ww.ie_permite_partir := material_w.ie_permite_partir;
            material_ww.cd_classe_material := classe_material_seq_w;
            material_ww.cd_unidade_medida_compra := cd_unidada_medida_w;
            material_ww.cd_unidade_medida_consumo := cd_unidada_medida_w;
            material_ww.cd_unidade_medida_estoque := cd_unidada_medida_w;
            material_ww.ie_situacao := material_w.ie_situacao;
            material_ww.ie_tipo_material := material_w.ie_tipo_material;
            material_ww.ie_gravar_obs_prescr := 'N';
            material_ww.ie_umidade_controlada := 'N';
            material_ww.ie_material_estoque := 'N';
            material_ww.ie_cobra_paciente := 'N';
            material_ww.ie_baixa_inteira := 'N';
            material_ww.dt_cadastramento := clock_timestamp();
            material_ww.qt_minimo_multiplo_solic := material_w.qt_minimo_multiplo_solic;
            material_ww.qt_conv_compra_estoque := material_w.qt_conv_compra_estoque;
            material_ww.qt_conv_estoque_consumo := material_w.qt_conv_estoque_consumo;
            material_ww.cd_material_estoque := nr_seq_material_w;
            material_ww.ie_controle_medico := 0;
            material_ww.ie_baixa_estoq_pac := 'N';
            material_ww.ie_bomba_infusao := 'N';
            material_ww.ie_diluicao := 'N';
            material_ww.ie_solucao := 'N';
            material_ww.ie_mistura := 'N';
            material_ww.ie_abrigo_luz := 'N';
            material_ww.ie_inf_ultima_compra := 'N';
            insert into material values (material_ww.*);

        elsif ( (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') and ie_dirty_p = 1 ) then

            update material
            set
                cd_unidade_medida_compra = material_w.cd_unidade_medida_compra,
                cd_unidade_medida_consumo = material_w.cd_unidade_medida_consumo,
                cd_unidade_medida_estoque = material_w.cd_unidade_medida_estoque,
                ds_general_name = material_w.ds_general_name,
                ds_material = material_w.ds_material,
                ie_alto_risco = material_w.ie_alto_risco,
                ie_permite_partir = material_w.ie_permite_partir,
                ie_psychotropic = material_w.ie_psychotropic,
                ie_receita = material_w.ie_receita,
                ie_via_aplicacao = material_w.ie_via_aplicacao,
                ie_tipo_material = material_w.ie_tipo_material,
                nr_seq_ficha_tecnica = medic_ficha_tecnica_seq_w,
                cd_classe_material = classe_material_seq_w,
                ie_situacao = material_w.ie_situacao,
                cd_material_estoque = nr_seq_material_w,
                dt_atualizacao = clock_timestamp(),
                nm_usuario = nm_usuario_p
            where
                cd_yj_code = cd_yj_code_p
                and cd_material = nr_seq_material_w;
        end if;	
       commit;

      /** Insert Material Adminstratin Route  **/

        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END 
        into STRICT ie_data_exist_w
        from
            mat_via_aplic
        where
            cd_material = nr_seq_material_w
            and ie_via_aplicacao = material_w.ie_via_aplicacao;

        if ( ie_data_exist_w = 'N' ) then
            select  nextval('mat_via_aplic_seq')
            into STRICT    mat_via_aplic_w.nr_sequencia
;

            mat_via_aplic_w.cd_material := nr_seq_material_w;
            mat_via_aplic_w.ie_diluicao := 'N';
            mat_via_aplic_w.ie_via_aplicacao := material_w.ie_via_aplicacao;
            mat_via_aplic_w.nm_usuario := nm_usuario_p;
            mat_via_aplic_w.nm_usuario_nrec := nm_usuario_p;
            mat_via_aplic_w.dt_atualizacao := clock_timestamp();
            mat_via_aplic_w.dt_atualizacao_nrec := clock_timestamp();
            insert into mat_via_aplic values (mat_via_aplic_w.*);
            commit;

        end if;

        /**inserting extrernalsystem code for nais **/
  

        select
            CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END 
        into STRICT ie_data_exist_w
        from
            material_sistema_externo
        where
            cd_material = nr_seq_material_w
            and cd_codigo = material_w.cd_sistema_ant;

        if ( ie_data_exist_w = 'N' ) then
            select  nextval('material_sistema_externo_seq')
            into STRICT    material_sistema_externo_w.nr_sequencia
;

            material_sistema_externo_w.cd_material := nr_seq_material_w;
            material_sistema_externo_w.cd_codigo := material_w.cd_sistema_ant;
            material_sistema_externo_w.ie_sistema := 'NAIS';
            material_sistema_externo_w.nm_usuario := nm_usuario_p;
            material_sistema_externo_w.nm_usuario_nrec := nm_usuario_p;
            material_sistema_externo_w.dt_atualizacao := clock_timestamp();
            material_sistema_externo_w.dt_atualizacao_nrec := clock_timestamp();
            insert into material_sistema_externo values (material_sistema_externo_w.*);
            commit;

        end if;

            
      /**inserting images to material record, Deleting the existing images and overwriting with the new one**/

        delete from material_imagem
        where
            cd_material = nr_seq_material_w;

        open c01;
        loop
            fetch c01 into c01_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */
            begin
                select  nextval('material_imagem_seq')
                into STRICT    material_imagem_w.nr_sequencia
;

                material_imagem_w.cd_material := nr_seq_material_w;
                material_imagem_w.ie_tipo_image := c01_w.ie_tipo_image;
                material_imagem_w.im_material := c01_w.im_material;
                material_imagem_w.nm_usuario := nm_usuario_p;
                material_imagem_w.nm_usuario_nrec := nm_usuario_p;
                material_imagem_w.dt_atualizacao := clock_timestamp();
                material_imagem_w.dt_atualizacao_nrec := clock_timestamp();
                insert into material_imagem values (material_imagem_w.*);
                commit;
            end;

        end loop;
        close c01;

        update imp_material
        set IE_CD_SISTEMA_ANT_UPDATED = 1 
        where cd_material = cd_imp_material_p;

    end if;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE import_drug_master_jp_l10_pkg.import_drug_master_material ( cd_estabelecimento_p bigint, nr_seq_version_p bigint, nm_usuario_p text, cd_imp_material_p bigint, cd_yj_code_p text, ie_dirty_p bigint ) FROM PUBLIC;
