-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE import_drug_master_jp_l10_pkg.compare_drug_master_material ( cd_estabelecimento_p bigint, nr_seq_version_p bigint, nm_usuario_p text, cd_material_p bigint, cd_yj_code_p text ) AS $body$
DECLARE


        mims_mat_tasy_mat_w   mims_material_tasy%rowtype;
        cd_material_tasy_w    material.cd_material%type;
        ie_material_exist_w   varchar(2);
        ie_dirty_flag_w       smallint := 1;
        ie_dirty_aplic_w      smallint := 1;
        ie_dirty_med_w        smallint := 1;
        ie_dirty_mat_w        smallint := 1;
        ie_dirty_unit_w       smallint := 1;
        ie_exist_w            varchar(2) := 'N';

BEGIN
        begin
            select  max(a.cd_material)
            into STRICT    cd_material_tasy_w
            from    material a
            where   a.cd_yj_code = cd_yj_code_p;
        exception
            when others then
                cd_material_tasy_w := null;
        end;

        select
            CASE WHEN coalesce(cd_material_tasy_w::text, '') = '' THEN  'N'  ELSE 'S' END
        into STRICT ie_material_exist_w
;

        if ( ie_material_exist_w = 'N' ) then
            ie_dirty_flag_w := 2;
            ie_dirty_aplic_w := 2;
            ie_dirty_med_w := 2;
            ie_dirty_mat_w := 2;
            ie_dirty_unit_w := 2;
		
        else
            begin
		    /** Compaing the adminstration Route **/

                select
                    CASE WHEN count(*)='0' THEN  'N'  ELSE 'S' END 
                into STRICT ie_exist_w
                from
                    material            a,
                    imp_material        b,
                    imp_mat_via_aplic   c,
                    mat_via_aplic       d
                where
                    a.cd_yj_code = b.cd_yj_code
                    and c.cd_material = cd_material_p
                    and b.ie_via_aplicacao = c.ie_via_aplicacao
                    and a.cd_yj_code = cd_yj_code_p
                    and b.nr_seq_mims_version = c.nr_seq_mims_version
                    and c.nr_seq_mims_version = nr_seq_version_p
                    and a.cd_material = d.cd_material
                    and a.ie_via_aplicacao = d.ie_via_aplicacao
                    and a.ie_via_aplicacao = b.ie_via_aplicacao;

                if ( ie_exist_w = 'S' ) then
                    ie_dirty_aplic_w := 0;
                end if;
			
			/** End of Compaing the adminstration Route **/

			
			/** Compaing the Active ingredient **/

                select
                    CASE WHEN count(*)='0' THEN  'N'  ELSE 'S' END
                into STRICT ie_exist_w
                from
                    material                  a,
                    imp_material              b,
                    imp_medic_ficha_tecnica   c,
                    medic_ficha_tecnica       d
                where
                    a.cd_yj_code = b.cd_yj_code
                    and c.nr_sequencia = b.nr_seq_ficha_tecnica
                    and a.nr_seq_ficha_tecnica = d.nr_sequencia
                    and c.ds_substancia = d.ds_substancia
                    and a.ie_permite_partir = b.ie_permite_partir
                    and b.cd_yj_code = cd_yj_code_p
                    and b.nr_seq_mims_version = nr_seq_version_p;

                if ( ie_exist_w = 'S' ) then
                    ie_dirty_med_w := 0;
                end if;
			
			/** End of Compaing the Active ingredient **/

            
            /**  Comparing the Unit Conversion **/

                select
                    CASE WHEN count(*)='0' THEN  'N'  ELSE 'S' END
                into STRICT ie_exist_w
                from
                    imp_material_conv_unidade   a,
                    material                    b,
                    imp_material                c
                where
                    b.cd_yj_code = c.cd_yj_code
                    and a.cd_unidade_medida = c.cd_unidade_medida_compra
                    and a.cd_material = c.cd_material
                    and b.cd_yj_code = cd_yj_code_p
                    and a.cd_material = cd_material_p
                    and a.nr_seq_mims_version = nr_seq_version_p;

                if ( ie_exist_w = 'S' ) then
                    ie_dirty_unit_w := 0;
                end if;
            
             /**  End of Comparing the Unit Conversion **/

			
			/**  Compaing the Material **/

                select
                    CASE WHEN count(*)='0' THEN  'N'  ELSE 'S' END 
                into STRICT ie_exist_w
                from
                    material       a,
                    imp_material   b
                where
                    a.cd_yj_code = b.cd_yj_code
                    and a.ds_general_name = b.ds_general_name
                    and a.ds_material = b.ds_material
                    and a.ie_alto_risco = b.ie_alto_risco
                    and a.ie_psychotropic = b.ie_psychotropic
                    and a.ie_receita = b.ie_receita
                    and a.ie_tipo_material = b.ie_tipo_material
                    and b.nr_seq_mims_version = nr_seq_version_p
                    and a.cd_yj_code = cd_yj_code_p; -- check for reciept code also...
                if ( ie_exist_w = 'S' ) then
                    ie_dirty_mat_w := 0;
                end if;
                if ( ie_dirty_aplic_w = 0 and ie_dirty_med_w = 0 and ie_dirty_mat_w = 0 and ie_dirty_unit_w = 0 ) then
                    ie_dirty_flag_w := 0;
                end if;
            end;
        end if;

        update imp_mat_via_aplic
        set    ie_dirty_check = ie_dirty_aplic_w
        where  cd_material = cd_material_p
        and    nr_seq_mims_version = nr_seq_version_p;

        update  imp_material
        set     ie_medicine_dirty_check = ie_dirty_med_w
        where   cd_yj_code = cd_yj_code_p
        and     nr_seq_mims_version = nr_seq_version_p;

        update  imp_material_conv_unidade
        set     ie_dirty_check = ie_dirty_unit_w
        where   cd_material = cd_material_p
        and     nr_seq_mims_version = nr_seq_version_p;

        update  imp_material
        set     ie_druginteract_dirty_check = ie_dirty_mat_w
        where   cd_yj_code = cd_yj_code_p
        and     nr_seq_mims_version = nr_seq_version_p;

        update  imp_material
        set     ie_dirty_check = ie_dirty_flag_w
        where   cd_yj_code = cd_yj_code_p
        and     nr_seq_mims_version = nr_seq_version_p;

        commit;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE import_drug_master_jp_l10_pkg.compare_drug_master_material ( cd_estabelecimento_p bigint, nr_seq_version_p bigint, nm_usuario_p text, cd_material_p bigint, cd_yj_code_p text ) FROM PUBLIC;
