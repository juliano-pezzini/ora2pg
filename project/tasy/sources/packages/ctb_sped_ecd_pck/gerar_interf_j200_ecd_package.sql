-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_j200_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE




ds_linha_w			varchar(8000);
sep_w				varchar(1) := '|';
tp_registro_w			varchar(15) := 'J200';

c_demo_rubrica CURSOR(
	nr_seq_demo_dmpl_pc 	 ctb_sped_controle.nr_seq_demo_dmpl%type,
	nr_seq_demo_dlpa_pc 	 ctb_sped_controle.nr_seq_demo_dlpa%type
	) FOR
	SELECT 	b.nr_seq_rubrica cd_hist_fato_contabil,
		b.ds_rubrica ds_fato_contabil
	from 	ctb_demo_rubrica_v b
	where 	b.nr_seq_demo in ( nr_seq_demo_dmpl_pc, nr_seq_demo_dlpa_pc )
	order by 2;

type vetor_demo_rubrica is table of c_demo_rubrica%rowtype index by integer;
v_demo_rubrica_w    vetor_demo_rubrica;

c_dmpl_movimento CURSOR(
	nr_seq_demo_dmpl_pc  ctb_sped_controle.nr_seq_demo_dmpl%type
	) FOR
	SELECT	nr_seq_mutacao_pl cd_hist_fato_contabil,
		ds_linha ds_fato_contabil
	from	ctb_dmpl_movimento_v
	where	nr_seq_dmpl = nr_seq_demo_dmpl_pc
	and 	(nr_seq_mutacao_pl IS NOT NULL AND nr_seq_mutacao_pl::text <> '')
	order by 2;

type vetor_dmpl_movimento is table of c_dmpl_movimento%rowtype index by integer;
v_dmpl_movimento_w    vetor_dmpl_movimento;

type vetor_ctb_sped_registro is table of ctb_sped_registro%rowtype index by integer;
v_ctb_sped_registro_w  vetor_ctb_sped_registro;
BEGIN

if (coalesce(regra_sped_p.cd_versao,'8.0') not in ('8.0', '7.0')) then
	if (regra_sped_p.dt_ano >= TO_DATE('31/12/2014', 'dd/mm/yyyy')) then
		begin
		open c_dmpl_movimento(
			nr_seq_demo_dmpl_pc 	=> regra_sped_p.nr_seq_demo_dmpl
			);
			loop fetch c_dmpl_movimento bulk collect into v_dmpl_movimento_w limit 1000;
			EXIT WHEN NOT FOUND; /* apply on c_dmpl_movimento */
				for i in v_dmpl_movimento_w.first .. v_dmpl_movimento_w.last loop
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w 					||
								sep_w || v_dmpl_movimento_w[i].cd_hist_fato_contabil 	||
								sep_w || coalesce(v_dmpl_movimento_w[i].ds_fato_contabil, 'Nao identificado pelo usuario') 	|| sep_w ,1,8000);

				regra_sped_p.cd_registro_variavel := tp_registro_w;
				regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
				
				end;
				end loop;
				regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
			end loop;
		close c_dmpl_movimento;
		end;
	else
		begin
		open c_demo_rubrica(
			nr_seq_demo_dmpl_pc 	=> regra_sped_p.nr_seq_demo_dmpl,
			nr_seq_demo_dlpa_pc	=> regra_sped_p.nr_seq_demo_dlpa
			);
			loop fetch c_demo_rubrica bulk collect into v_demo_rubrica_w limit 1000;
			EXIT WHEN NOT FOUND; /* apply on c_demo_rubrica */
				for i in v_demo_rubrica_w.first .. v_demo_rubrica_w.last loop
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w 					||
								sep_w || v_demo_rubrica_w[i].cd_hist_fato_contabil 	||
								sep_w || coalesce(v_demo_rubrica_w[i].ds_fato_contabil, 'Nao identificado pelo usuario') 	|| sep_w ,1,8000);

				regra_sped_p.cd_registro_variavel := tp_registro_w;
				regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
				
				end;
				end loop;
				regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
			end loop;
		close c_demo_rubrica;
		end;
	end if;
end if;
			
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_j200_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
