-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_j100_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE



cd_codigo_conta_ecd_w				varchar(40);
ds_linha_w					varchar(8000);
sep_w						varchar(1) := '|';
tp_registro_w					varchar(15) := 'J100';
vl_saldo_ini_w					double precision;
ie_debito_credito_ww				varchar(2);
ie_grupo_balanco_ecd_w          		varchar(1) := 'A';
ind_saldo_ini_w         			varchar(1) := 'C';
ind_saldo_fim_w         			varchar(1) := 'C';
dt_fim_w					timestamp;

c_balanco CURSOR(
	dt_fim_pc 			 timestamp,
	cd_estabelecimento_pc 		 ctb_sped_controle.cd_estabelecimento%type,
	ie_consolida_empresa_pc   	 ctb_regra_sped.ie_consolida_empresa%type,
	cd_empresa_pc  			 ctb_sped_controle.cd_empresa%type
	) FOR
	SELECT  x.ds_identificador,
		x.cd_aglutinacao,
		x.ie_nivel_aglutinacao,
		x.cd_grupo,
		x.ds_aglutinacao,
		x.vl_conta,
		x.ie_debito_credito,
		x.cd_classificacao,
		x.dt_referencia
	from (	SELECT  ds_identificador,
			cd_aglutinacao,
			ie_nivel_aglutinacao,
			cd_grupo,
			ds_aglutinacao,
			vl_conta,
			a.ie_debito_credito,
			a.cd_classificacao,
			a.dt_referencia dt_referencia
		from	ecd_balanco_patrimonial_v a
		where	a.dt_referencia 	= dt_fim_pc
		and	a.cd_estabelecimento	= cd_estabelecimento_pc
		and	ie_consolida_empresa_pc = 'N'
		
union all

		select  ds_identificador,
			cd_aglutinacao,
			ie_nivel_aglutinacao,
			cd_grupo,
			ds_aglutinacao,
			sum(vl_conta),
			'' ie_debito_credito,
			a.cd_classificacao,
			a.dt_referencia dt_referencia
		from	estabelecimento b,
			ecd_balanco_patrimonial_v a
		where	a.dt_referencia 	= dt_fim_pc
		and	a.cd_estabelecimento	= b.cd_estabelecimento
		and	a.cd_empresa		= cd_empresa_pc
		and	ie_consolida_empresa_pc = 'S'
		group by ds_identificador,
				cd_aglutinacao,
				ie_nivel_aglutinacao,
				cd_grupo,
				ds_aglutinacao,
				a.cd_classificacao,
				a.dt_referencia,
				a.cd_classificacao
			order by
				dt_referencia,
				cd_classificacao)
	x;
				
type vetor_balanco is table of c_balanco%rowtype index by integer;
v_balanco_w    vetor_balanco;

type vetor_ctb_sped_registro is table of ctb_sped_registro%rowtype index by integer;
v_ctb_sped_registro_w  vetor_ctb_sped_registro;

c_demonstrativo CURSOR(
		dt_ref_final_pc		 ctb_sped_controle.dt_ref_final%type,
		dt_ref_inicial_pc	 ctb_sped_controle.dt_ref_inicial%type,
		nr_seq_demo_bp_pc	 ctb_sped_controle.nr_seq_demo_bp%type
	)FOR
	SELECT 	x.cd_aglutinacao,
		x.nr_nivel,
		x.ie_grupo_balanco_ecd,
		x.ds_aglutinacao,
		x.ie_cod_agl,
		x.cd_aglutinacao_sup,
		x.vl_conta,
		x.ie_saldo,
		x.vl_2_coluna,
		x.ie_saldo_ini
	from (	SELECT	a.nr_seq_rubrica cd_aglutinacao,
			a.qt_desl_esq nr_nivel,
			b.ie_grupo_balanco_ecd,
			a.ds_rubrica ds_aglutinacao,
			CASE WHEN coalesce(b.ie_total,'N')='N' THEN 'D'  ELSE 'T' END  ie_cod_agl,
			b.nr_seq_rubrica_sup cd_aglutinacao_sup,
			a.vl_1_coluna vl_conta,
			substr(ctb_obter_situacao_saldo_ecd(a.nr_seq_rubrica, 'J100',dt_ref_final_pc, a.vl_1_coluna),1,1) ie_saldo,
			a.vl_2_coluna,
			substr(ctb_obter_situacao_saldo_ecd(a.nr_seq_rubrica,'J100',dt_ref_inicial_pc, a.vl_2_coluna),1,1) ie_saldo_ini
		from	ctb_modelo_rubrica	b,
			ctb_demo_rubrica_v	a
		where	a.nr_seq_rubrica	= b.nr_sequencia
		and	a.nr_seq_demo		= nr_seq_demo_bp_pc
		and	ie_situacao		= 'A'
		and 	((coalesce(a.vl_1_coluna,0) <> 0) or (coalesce(a.vl_2_coluna,0) <> 0))
		order by
			a.nr_seq_apres)
	x;

type vetor_demonstrativo is table of c_demonstrativo%rowtype index by integer;
v_demonstrativo_w   vetor_demonstrativo;

BEGIN
dt_fim_w := trunc(regra_sped_p.dt_ref_final,'mm');

if (regra_sped_p.nr_seq_demo_bp = -10) then /*Senao tiver Demonstrativo especifico, e exportado Ativo e Passivo - Inativo para a escritucao referente a 2018*/
	begin
	open c_balanco(
			dt_fim_pc 		=> dt_fim_w,
			cd_estabelecimento_pc 	=> regra_sped_p.cd_estabelecimento,
			ie_consolida_empresa_pc => regra_sped_p.ie_consolida_empresa,
			cd_empresa_pc  		=> regra_sped_p.cd_empresa
		);
		loop fetch c_balanco bulk collect into v_balanco_w limit 1000;
		EXIT WHEN NOT FOUND; /* apply on c_balanco */
			for i in v_balanco_w.first .. v_balanco_w.last loop
			begin
			
			cd_codigo_conta_ecd_w	:= ctb_sped_ecd_pck.obter_cod_conta_ecd(ie_tipo_conta_p	=> 'C', 
								ie_apres_conta_ctb_p	=> regra_sped_p.ie_apres_conta_ctb, 
								cd_empresa_p		=> null, 
								cd_conta_contabil_p	=> v_balanco_w[i].cd_aglutinacao, 
								cd_classificacao_p	=> v_balanco_w[i].cd_classificacao,
								dt_vigencia_p		=> null);
		
			if (regra_sped_p.ie_consolida_empresa = 'S')then
				v_balanco_w[i].ie_debito_credito := substr(ctb_obter_situacao_saldo(v_balanco_w[i].cd_aglutinacao, v_balanco_w[i].vl_conta),1,1);
			end if;

			v_balanco_w[i].ie_debito_credito := replace(v_balanco_w[i].ie_debito_credito,'|','');
			
			if (regra_sped_p.cd_versao = '6.0') then
				begin
				vl_saldo_ini_w	:= 0;

				case	regra_sped_p.ie_periodo
					when 'A' then
						vl_saldo_ini_w	:= ctb_obter_saldo_data_ecd(regra_sped_p.cd_estabelecimento,
											v_balanco_w[i].cd_aglutinacao,
											null,
											add_months(regra_sped_p.dt_ref_final,-12),
											regra_sped_p.cd_empresa,
											regra_sped_p.ie_consolida_empresa);
					when 'T' then
						vl_saldo_ini_w	:= ctb_obter_saldo_data_ecd(regra_sped_p.cd_estabelecimento,
											v_balanco_w[i].cd_aglutinacao,
											null,
											add_months(regra_sped_p.dt_ref_final,-3),
											regra_sped_p.cd_empresa,
											regra_sped_p.ie_consolida_empresa);
					when 'M' then
						vl_saldo_ini_w	:= ctb_obter_saldo_data_ecd(regra_sped_p.cd_estabelecimento,
											v_balanco_w[i].cd_aglutinacao,
											null,
											trunc(regra_sped_p.dt_ref_final,'mm'),
											regra_sped_p.cd_empresa,
											regra_sped_p.ie_consolida_empresa);
				else
					null;
				end case;
		
				ie_debito_credito_ww	:= substr(ctb_obter_situacao_saldo(v_balanco_w[i].cd_aglutinacao, vl_saldo_ini_w),1,1);

				ds_linha_w	:= substr(	'|J100'								|| --01
								sep_w || cd_codigo_conta_ecd_w					|| --02
								sep_w || v_balanco_w[i].ie_nivel_aglutinacao 			|| --03
								sep_w || v_balanco_w[i].cd_grupo				|| --04
								sep_w || v_balanco_w[i].ds_aglutinacao 				|| --05
								sep_w || sped_obter_campo_valor(v_balanco_w[i].vl_conta) 	|| --06
								sep_w || v_balanco_w[i].ie_debito_credito 			|| --07
								sep_w || sped_obter_campo_valor(vl_saldo_ini_w)			|| --08
								sep_w || ie_debito_credito_ww					|| --09
								sep_w || ''							|| --10
								sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao in ('2.0', '3.0', '4.0', '5.0')) then
				begin
				
				vl_saldo_ini_w	:= 0;

				case	regra_sped_p.ie_periodo
					when 'A' then
						vl_saldo_ini_w	:= ctb_obter_saldo_data_ecd(regra_sped_p.cd_estabelecimento,
											v_balanco_w[i].cd_aglutinacao,
											null,
											add_months(regra_sped_p.dt_ref_final,-12),
											regra_sped_p.cd_empresa,
											regra_sped_p.ie_consolida_empresa);
					when 'T' then
						vl_saldo_ini_w	:= ctb_obter_saldo_data_ecd(regra_sped_p.cd_estabelecimento,
											v_balanco_w[i].cd_aglutinacao,
											null,
											add_months(regra_sped_p.dt_ref_final,-3),
											regra_sped_p.cd_empresa,
											regra_sped_p.ie_consolida_empresa);
					when 'M' then
						vl_saldo_ini_w	:= ctb_obter_saldo_data_ecd(regra_sped_p.cd_estabelecimento,
											v_balanco_w[i].cd_aglutinacao,
											null,
											trunc(regra_sped_p.dt_ref_final,'mm'),
											regra_sped_p.cd_empresa,
											regra_sped_p.ie_consolida_empresa);
				else
					null;
				end case;
	
				ie_debito_credito_ww	:= substr(ctb_obter_situacao_saldo(v_balanco_w[i].cd_aglutinacao, vl_saldo_ini_w),1,1);

				ds_linha_w	:= substr(	'|J100'								|| --01
								sep_w || cd_codigo_conta_ecd_w					|| --02
								sep_w || v_balanco_w[i].ie_nivel_aglutinacao  			|| --03
								sep_w || v_balanco_w[i].cd_grupo				|| --04
								sep_w || v_balanco_w[i].ds_aglutinacao				|| --05
								sep_w || sped_obter_campo_valor(v_balanco_w[i].vl_conta) 	|| --06
								sep_w || v_balanco_w[i].ie_debito_credito 			|| --07
								sep_w || sped_obter_campo_valor(vl_saldo_ini_w)			|| --08
								sep_w || ie_debito_credito_ww					|| --09
								sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao = '1.0') then
				begin
				ds_linha_w	:= substr(	'|J100'								|| --01
								sep_w || cd_codigo_conta_ecd_w					|| --02
								sep_w || v_balanco_w[i].ie_nivel_aglutinacao  			|| --03
								sep_w || v_balanco_w[i].cd_grupo				|| --04
								sep_w || v_balanco_w[i].ds_aglutinacao				|| --05
								sep_w || sped_obter_campo_valor(v_balanco_w[i].vl_conta) 	|| --06
								sep_w || v_balanco_w[i].ie_debito_credito 			|| --07
								sep_w,1,8000);
				end;
			end if;
			regra_sped_p.cd_registro_variavel := tp_registro_w;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
			end;
			end loop;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
		end loop;
	close c_balanco;
	end;
else
	begin
	
	open c_demonstrativo(
		dt_ref_final_pc		=> regra_sped_p.dt_ref_final,
		dt_ref_inicial_pc	=> regra_sped_p.dt_ref_inicial,
		nr_seq_demo_bp_pc  	=> regra_sped_p.nr_seq_demo_bp
		);
		loop fetch c_demonstrativo bulk collect into v_demonstrativo_w limit 1000;
		EXIT WHEN NOT FOUND; /* apply on c_demonstrativo */
			for i in v_demonstrativo_w.first .. v_demonstrativo_w.last loop
			begin
			if (regra_sped_p.cd_versao in ('7.0','8.0')) then
				begin
				if (v_demonstrativo_w[i].ie_grupo_balanco_ecd = 2) then
					ie_grupo_balanco_ecd_w := 'P';
				else
					ie_grupo_balanco_ecd_w := 'A';
				end if;

				if (v_demonstrativo_w[i].vl_2_coluna > 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 1) then
					ind_saldo_ini_w := 'D';
				elsif (v_demonstrativo_w[i].vl_2_coluna < 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 1) then
					ind_saldo_ini_w := 'C';
				elsif (v_demonstrativo_w[i].vl_2_coluna > 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 2) then
					ind_saldo_ini_w := 'C';
				elsif (v_demonstrativo_w[i].vl_2_coluna < 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 2) then
					ind_saldo_ini_w := 'D';
				end if;

				if (v_demonstrativo_w[i].vl_conta > 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 1) then
					ind_saldo_fim_w := 'D';
				elsif (v_demonstrativo_w[i].vl_conta < 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 1) then
					ind_saldo_fim_w := 'C';
				elsif (v_demonstrativo_w[i].vl_conta > 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 2) then
					ind_saldo_fim_w := 'C';
				elsif (v_demonstrativo_w[i].vl_conta < 0 and v_demonstrativo_w[i].ie_grupo_balanco_ecd = 2) then
					ind_saldo_fim_w := 'D';
				
				end if;
				end;

				ds_linha_w	:= substr(	sep_w || tp_registro_w							|| --01
								sep_w || v_demonstrativo_w[i].cd_aglutinacao 				|| --02
								sep_w || v_demonstrativo_w[i].ie_cod_agl 				|| --03
								sep_w || v_demonstrativo_w[i].nr_nivel 					|| --04
								sep_w || v_demonstrativo_w[i].cd_aglutinacao_sup			|| --05
								sep_w || ie_grupo_balanco_ecd_w						|| --06
								sep_w || v_demonstrativo_w[i].ds_aglutinacao				|| --07
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_2_coluna)	|| --08
								sep_w || ind_saldo_ini_w						|| --09
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_conta)		|| --10
								sep_w || ind_saldo_fim_w						|| --11
								sep_w || ''								|| --12
								sep_w,1,8000);
			
			elsif (regra_sped_p.cd_versao = '6.0') then
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w							|| --01
								sep_w || v_demonstrativo_w[i].cd_aglutinacao 				|| --02
								sep_w || v_demonstrativo_w[i].nr_nivel 					|| --03
								sep_w || v_demonstrativo_w[i].ie_grupo_balanco_ecd			|| --04
								sep_w || v_demonstrativo_w[i].ds_aglutinacao				|| --05
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_conta)		|| --06
								sep_w || v_demonstrativo_w[i].ie_saldo					|| --07
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_2_coluna)	|| --08
								sep_w || v_demonstrativo_w[i].ie_saldo_ini				|| --09
								sep_w || ''								|| --10
								sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao in ('2.0', '3.0', '4.0', '5.0')) then
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w							|| --01
								sep_w || v_demonstrativo_w[i].cd_aglutinacao 				|| --02
								sep_w || v_demonstrativo_w[i].nr_nivel 					|| --03
								sep_w || v_demonstrativo_w[i].ie_grupo_balanco_ecd			|| --04
								sep_w || v_demonstrativo_w[i].ds_aglutinacao				|| --05
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_conta)		|| --06
								sep_w || v_demonstrativo_w[i].ie_saldo					|| --07
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_2_coluna)	|| --08
								sep_w || v_demonstrativo_w[i].ie_saldo_ini				|| --09
								sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao = '1.0') then
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w							|| --01
								sep_w || v_demonstrativo_w[i].cd_aglutinacao 				|| --02
								sep_w || v_demonstrativo_w[i].nr_nivel 					|| --03
								sep_w || v_demonstrativo_w[i].ie_grupo_balanco_ecd			|| --04
								sep_w || v_demonstrativo_w[i].ds_aglutinacao				|| --05
								sep_w || sped_obter_campo_valor(v_demonstrativo_w[i].vl_conta)		|| --06
								sep_w || v_demonstrativo_w[i].ie_saldo					|| --07
								sep_w,1,8000);
				end;
			end if;
			regra_sped_p.cd_registro_variavel := tp_registro_w;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
			
			end;
			end loop;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
		end loop;
	close c_demonstrativo;
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_j100_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
