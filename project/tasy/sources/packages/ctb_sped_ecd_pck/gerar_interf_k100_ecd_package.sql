-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_k100_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE


			
ds_linha_w			varchar(8000);
sep_w 				varchar(1) 		:= '|';
tp_registro_w			varchar(15) 		:= 'K100';
qt_evento_w			smallint		:= 0;
ie_evento_w			varchar(1)		:= 'N';
nr_seq_grupo_emp_w  		grupo_emp_estrutura.nr_seq_grupo%type;

c_grupo_empresa CURSOR(
	dt_fim_emp_pc		 ctb_sped_controle.dt_ref_final%type,
	nr_seq_grupo_emp_pc 	 grupo_emp_estrutura.nr_seq_grupo%type
	)FOR
	SELECT	coalesce(p.cd_bacen, '01058') nr_cod_pais,
		gee.cd_empresa,
		emp.cd_base_cgc,
		obter_nome_empresa(gee.cd_empresa) ds_nome,
		coalesce(gee.pr_participacao, 0) pr_participacao,
		100 nr_per_cons
	FROM grupo_emp_estrutura gee, estabelecimento estab, empresa emp, pessoa_juridica pj
LEFT OUTER JOIN pais p ON (pj.nr_seq_pais = p.nr_sequencia)
WHERE emp.cd_empresa 		= gee.cd_empresa and estab.cd_empresa 	= emp.cd_empresa and pj.cd_cgc 		= estab.cd_cgc and emp.ie_situacao     	= 'A' and estab.ie_situacao   	= 'A' and estab.ie_tipo_estab 	= 'M' and (gee.dt_inicio_vigencia <= dt_fim_emp_pc) and (coalesce(gee.dt_fim_vigencia::text, '') = '' or gee.dt_fim_vigencia <= dt_fim_emp_pc)  and gee.nr_seq_grupo 	= nr_seq_grupo_emp_pc order by gee.ie_tipo_estrutura;

type vetor_grupo_empresa is table of c_grupo_empresa%rowtype index by integer;
v_grupo_empresa_w    vetor_grupo_empresa;

BEGIN

nr_seq_grupo_emp_w := holding_pck.get_grupo_emp_estrut_vigente(regra_sped_p.cd_empresa);

open c_grupo_empresa(
	dt_fim_emp_pc		=> regra_sped_p.dt_ref_final,
	nr_seq_grupo_emp_pc 	=> nr_seq_grupo_emp_w
	);
	loop fetch c_grupo_empresa bulk collect into v_grupo_empresa_w limit 1000;
	EXIT WHEN NOT FOUND; /* apply on c_grupo_empresa */
		for i in v_grupo_empresa_w.first .. v_grupo_empresa_w.last loop
		begin
			select	count(*)
			into STRICT	qt_evento_w
			from	ctb_sit_especial_empresa sit
			where	sit.cd_empresa = v_grupo_empresa_w[i].cd_empresa
			and	sit.dt_situacao between regra_sped_p.dt_ref_inicial and regra_sped_p.dt_ref_final;

			if (qt_evento_w > 0) then
				ie_evento_w	:=	'S';
			end if;
		
			ds_linha_w	:= substr(	sep_w || tp_registro_w 						||
							sep_w || v_grupo_empresa_w[i].nr_cod_pais			|| 
							sep_w || v_grupo_empresa_w[i].cd_empresa 			|| 
							sep_w || v_grupo_empresa_w[i].cd_base_cgc			|| 
							sep_w || v_grupo_empresa_w[i].ds_nome 				|| 
							sep_w || v_grupo_empresa_w[i].pr_participacao			|| 
							sep_w || ie_evento_w 						|| 
							sep_w || v_grupo_empresa_w[i].nr_per_cons			|| 
							sep_w || to_char(regra_sped_p.dt_ref_inicial, 'ddmmyyyy') 	|| 
							sep_w || to_char(regra_sped_p.dt_ref_final, 'ddmmyyyy') 	|| 
							sep_w,1,8000);
			
			regra_sped_p.cd_registro_variavel := tp_registro_w;			
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
			
			if (qt_evento_w > 0) then
				regra_sped_p	=>	regra_sped_p := ctb_sped_ecd_pck.gerar_interf_k110_ecd(regra_sped_p	=>	regra_sped_p, nm_usuario_p 		=> 	nm_usuario_p, cd_empresa_p 		=>	v_grupo_empresa_w[i].cd_empresa
						);
			end if;
		end;
		end loop;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
	end loop;
close c_grupo_empresa;
				
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_k100_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
