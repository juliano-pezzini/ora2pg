-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_j150_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE



cd_aglutinacao_w		varchar(40);
ds_linha_w			varchar(8000);
sep_w				varchar(1) 	:= '|';
tp_registro_w			varchar(15) 	:= 'J150';
ind_grp_bal_w        		varchar(1) 	:= 'C';
ind_grp_bal_ant_w       	varchar(1) 	:= 'C';
cd_codigo_conta_ecd_w		varchar(40);




c01 CURSOR(
	dt_fim_pc 			 timestamp,
	cd_estabelecimento_pc 		 ctb_sped_controle.cd_estabelecimento%type,
	ie_consolida_empresa_pc   	 ctb_regra_sped.ie_consolida_empresa%type,
	cd_empresa_pc  			 ctb_sped_controle.cd_empresa%type
	) FOR
	SELECT	x.ds_identificador,
		x.cd_classificacao,
		x.cd_aglutinacao,
		x.ie_nivel_aglutinacao,
		x.ds_aglutinacao,
		x.vl_conta,
		x.ie_valor,
		x.dt_referencia
	from (	SELECT	ds_identificador,
			cd_classificacao,
			cd_aglutinacao,
			ie_nivel_aglutinacao,
			ds_aglutinacao,
			vl_conta,
			substr(ctb_obter_situacao_result(a.cd_aglutinacao, null,vl_conta),1,1) ie_valor,
			a.dt_referencia dt_referencia
		from	ecd_demonstracao_resultado_v a
		where   a.dt_referencia 	= dt_fim_pc
		and	a.cd_estabelecimento	= cd_estabelecimento_pc
		and	ie_consolida_empresa_pc	= 'N'
		
union

		select	ds_identificador,
			cd_classificacao,
			cd_aglutinacao,
			ie_nivel_aglutinacao,
			ds_aglutinacao,
			coalesce(sum(vl_conta),0) vl_conta,
			substr(ctb_obter_situacao_result(a.cd_aglutinacao, null,coalesce(sum(vl_conta),0)),1,1) ie_valor,
			a.dt_referencia dt_referencia
		from	estabelecimento b,
			ecd_demonstracao_resultado_v a
		where	a.cd_estabelecimento	= b.cd_estabelecimento
		and	a.dt_referencia 	= dt_fim_pc
		and	a.cd_empresa		= cd_empresa_pc
		and	ie_consolida_empresa_pc	= 'S'
		group by ds_identificador,
			cd_classificacao,
			cd_aglutinacao,
			ie_nivel_aglutinacao,
			ds_aglutinacao,
			a.dt_referencia
		order by dt_referencia,
			cd_classificacao)
	x;

type vetor_c01 is table of c01%rowtype index by integer;
vetor_c01_w    vetor_c01;
	
c02 CURSOR(
	dt_ref_final_pc		 ctb_sped_controle.dt_ref_final%type,
	nr_seq_demo_dre_pc	 ctb_sped_controle.nr_seq_demo_dre%type
	) FOR
	SELECT 	row_number() OVER () AS nr_ordem,
		x.cd_aglutinacao,
		x.nr_nivel,
		x.ds_aglutinacao,
		x.vl_conta,
		x.ie_cod_agl,
		x.cd_aglutinacao_sup,
		x.ind_grp_dre,
		x.ie_saldo,
		x.vl_conta_ant,
		x.ie_saldo_ant
	from (	SELECT	a.nr_seq_rubrica	cd_aglutinacao,
			a.qt_desl_esq		nr_nivel,
			a.ds_rubrica ds_aglutinacao,
			a.vl_1_coluna vl_conta,
			CASE WHEN coalesce(b.ie_total,'N')='N' THEN 'D'  ELSE 'T' END  ie_cod_agl,
			b.nr_seq_rubrica_sup cd_aglutinacao_sup,
			b.ie_tipo_linha_sped ind_grp_dre,
			substr(ctb_obter_situacao_saldo_ecd(a.nr_seq_rubrica, 'J150',dt_ref_final_pc, a.vl_1_coluna),1,1) ie_saldo,
			coalesce(a.vl_2_coluna, 0) vl_conta_ant,
			substr(ctb_obter_situacao_saldo_ecd(a.nr_seq_rubrica, 'J150',dt_ref_final_pc, a.vl_2_coluna),1,1) ie_saldo_ant
		from	ctb_modelo_rubrica b,
			ctb_demo_rubrica_v a
		where	a.nr_seq_rubrica	= b.nr_sequencia
		and	a.nr_seq_demo		= nr_seq_demo_dre_pc
		and	b.ie_situacao = 'A'
		and 	((coalesce(a.vl_1_coluna,0) <> 0) or (coalesce(a.vl_2_coluna,0) <> 0))
		order by a.nr_seq_apres) x;

type vetor_c02 is table of c02%rowtype index by integer;
vetor_c02_w    vetor_c02;

type vetor_ctb_sped_registro is table of ctb_sped_registro%rowtype index by integer;
v_ctb_sped_registro_w  vetor_ctb_sped_registro;
BEGIN

if ( regra_sped_p.nr_seq_demo_dre = -10) then --Inativo para a escritucao referente a 2018
	begin
	open c01(
		dt_fim_pc 		=> trunc(regra_sped_p.dt_ref_final, 'mm'),
		cd_estabelecimento_pc	=> regra_sped_p.cd_estabelecimento,
		ie_consolida_empresa_pc => regra_sped_p.ie_consolida_empresa,
		cd_empresa_pc  		=> regra_sped_p.cd_empresa
		);
		loop fetch c01 bulk collect into vetor_c01_w limit 1000;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			for i in vetor_c01_w.first .. vetor_c01_w.last loop
			cd_codigo_conta_ecd_w	:= ctb_sped_ecd_pck.obter_cod_conta_ecd(ie_tipo_conta_p	=> 'C', 
								ie_apres_conta_ctb_p	=> regra_sped_p.ie_apres_conta_ctb, 
								cd_empresa_p		=> null, 
								cd_conta_contabil_p	=> null, 
								cd_classificacao_p	=> vetor_c01_w[i].cd_classificacao,
								dt_vigencia_p		=> null);
								
			ds_linha_w	:= substr(	sep_w || tp_registro_w						||
							sep_w || cd_codigo_conta_ecd_w 					||
							sep_w || vetor_c01_w[i].ie_nivel_aglutinacao			||
							sep_w || vetor_c01_w[i].ds_aglutinacao				||
							sep_w || sped_obter_campo_valor(vetor_c01_w[i].vl_conta) 	||
							sep_w || vetor_c01_w[i].ie_valor				|| sep_w,1,8000);
							
			regra_sped_p.cd_registro_variavel := tp_registro_w;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
			end loop;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
		end loop;
	close c01;
	end;
else
	begin

	open c02(
		dt_ref_final_pc 	=> regra_sped_p.dt_ref_final,
		nr_seq_demo_dre_pc	=> regra_sped_p.nr_seq_demo_dre
		);
		loop fetch c02 bulk collect into vetor_c02_w limit 1000;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			for i in vetor_c02_w.first .. vetor_c02_w.last loop
			begin

			if (regra_sped_p.cd_versao = '8.0') then
				begin

				if (vetor_c02_w[i].vl_conta > 0 and vetor_c02_w[i].ind_grp_dre = 'R') then
					ind_grp_bal_w := 'C';
				elsif (vetor_c02_w[i].vl_conta < 0 and vetor_c02_w[i].ind_grp_dre = 'R') then
					ind_grp_bal_w := 'D';
				elsif (vetor_c02_w[i].vl_conta > 0 and vetor_c02_w[i].ind_grp_dre = 'D') then
					ind_grp_bal_w := 'D';
				elsif (vetor_c02_w[i].vl_conta < 0 and vetor_c02_w[i].ind_grp_dre = 'D') then
					ind_grp_bal_w := 'C';
				end if;

				if (vetor_c02_w[i].vl_conta_ant > 0 and vetor_c02_w[i].ind_grp_dre = 'R') then
					ind_grp_bal_ant_w := 'C';
				elsif (vetor_c02_w[i].vl_conta_ant < 0 and vetor_c02_w[i].ind_grp_dre = 'R') then
					ind_grp_bal_ant_w := 'D';
				elsif (vetor_c02_w[i].vl_conta_ant > 0 and vetor_c02_w[i].ind_grp_dre = 'D') then
					ind_grp_bal_ant_w := 'D';
				elsif (vetor_c02_w[i].vl_conta_ant < 0 and vetor_c02_w[i].ind_grp_dre = 'D') then
					ind_grp_bal_ant_w := 'C';
				end if;

				ds_linha_w	:= substr(	sep_w || tp_registro_w							||
								sep_w || vetor_c02_w[i].nr_ordem					||
								sep_w || vetor_c02_w[i].cd_aglutinacao 					||
								sep_w || vetor_c02_w[i].ie_cod_agl 					||
								sep_w || vetor_c02_w[i].nr_nivel					||
								sep_w || vetor_c02_w[i].cd_aglutinacao_sup				||
								sep_w || vetor_c02_w[i].ds_aglutinacao					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta_ant)		||
								sep_w || ind_grp_bal_ant_w						||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta)		||
								sep_w || ind_grp_bal_w							||
								sep_w || vetor_c02_w[i].ind_grp_dre					||
								sep_w || ''								|| sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao = '7.0') then
				begin

				if (vetor_c02_w[i].vl_conta > 0 and vetor_c02_w[i].ind_grp_dre = 'R') then
					ind_grp_bal_w := 'C';
				elsif (vetor_c02_w[i].vl_conta < 0 and vetor_c02_w[i].ind_grp_dre = 'R') then
					ind_grp_bal_w := 'D';
				elsif (vetor_c02_w[i].vl_conta > 0 and vetor_c02_w[i].ind_grp_dre = 'D') then
					ind_grp_bal_w := 'D';
				elsif (vetor_c02_w[i].vl_conta < 0 and vetor_c02_w[i].ind_grp_dre = 'D') then
					ind_grp_bal_w := 'C';
				end if;

				ds_linha_w	:= substr(	sep_w || tp_registro_w							||
								sep_w || vetor_c02_w[i].cd_aglutinacao 					||
								sep_w || vetor_c02_w[i].ie_cod_agl 					||
								sep_w || vetor_c02_w[i].nr_nivel					||
								sep_w || vetor_c02_w[i].cd_aglutinacao_sup				||
								sep_w || vetor_c02_w[i].ds_aglutinacao					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta)		||
								sep_w || ind_grp_bal_w							||
								sep_w || vetor_c02_w[i].ind_grp_dre					||
								sep_w || ''								|| sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao = '6.0') then
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w							||
								sep_w || vetor_c02_w[i].cd_aglutinacao 					||
								sep_w || vetor_c02_w[i].nr_nivel					||
								sep_w || vetor_c02_w[i].ds_aglutinacao					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta)		||
								sep_w || vetor_c02_w[i].ie_saldo					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta_ant)		||
								sep_w || vetor_c02_w[i].ie_saldo_ant					||
								sep_w || ''								|| sep_w,1,8000);
				end;
			elsif (regra_sped_p.cd_versao in ('4.0','5.0')) then
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w							||
								sep_w || vetor_c02_w[i].cd_aglutinacao 					||
								sep_w || vetor_c02_w[i].nr_nivel					||
								sep_w || vetor_c02_w[i].ds_aglutinacao					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta)		||
								sep_w || vetor_c02_w[i].ie_saldo					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta_ant)		||
								sep_w || vetor_c02_w[i].ie_saldo_ant					|| sep_w,1,8000);
				end;
			else
				begin
				ds_linha_w	:= substr(	sep_w || tp_registro_w							||
								sep_w || vetor_c02_w[i].cd_aglutinacao 					||
								sep_w || vetor_c02_w[i].nr_nivel					||
								sep_w || vetor_c02_w[i].ds_aglutinacao					||
								sep_w || sped_obter_campo_valor(vetor_c02_w[i].vl_conta)		||
								sep_w || vetor_c02_w[i].ie_saldo					|| sep_w,1,8000);
				end;
			end if;
			regra_sped_p.cd_registro_variavel := tp_registro_w;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
			
			end;
			end loop;
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);	
		end loop;
	close c02;
	end;
end if;
		
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_j150_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
