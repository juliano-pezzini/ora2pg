-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_k300_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE



ds_linha_w			varchar(8000);
sep_w				varchar(1) := '|';
tp_registro_w			varchar(15) := 'K300';
nr_seq_grupo_empresa_w		bigint;
	
	
c01 CURSOR(
	ie_apres_conta_ctb_pc 	 	text,
	nr_seq_grupo_empresa_pc  	bigint,
	dt_ref_inicial_pc 		ctb_sped_controle.dt_ref_inicial%type,
	dt_ref_final_pc 		ctb_sped_controle.dt_ref_final%type,
	cd_empresa_pc 			ctb_sped_controle.cd_empresa%type
    ) FOR
	SELECT  cd_conta_contabil cd_conta_contabil,
		ie_debito_credito,
		abs(vl_saldo) vl_saldo,
		coalesce(abs(vl_eliminacao_debito),0) vl_eliminacao_debito,
		coalesce(abs(vl_eliminacao_credito),0) vl_eliminacao_credito,
		coalesce(abs(vl_movto_eliminacao),0) vl_movto_eliminacao,
		(vl_saldo - vl_movto_eliminacao) vl_saldo_final_absoluto,
		substr(ctb_obter_situacao_saldo(cd_conta_contabil,vl_movto_eliminacao),1,1) ie_debito_credito_elim,
		substr(ctb_obter_situacao_saldo(cd_conta_contabil,vl_saldo),1,1) ie_debito_credito_saldofinal,
		substr(ctb_obter_situacao_saldo(cd_conta_contabil,(vl_saldo - vl_movto_eliminacao)),1,1) ie_debito_credito_absoluto,
		case ie_apres_conta_ctb_pc
		when 'CL' then
			substr(ctb_obter_classif_conta(cd_conta_contabil,null,dt_ref_final_pc),1,40)
		when 'CP' then
			substr(replace(ctb_obter_classif_conta(cd_conta_contabil, null, dt_ref_final_pc),'.',''),1,40)
		else
			cd_conta_contabil
		end cd_codigo_conta_ecd,
		case	when(vl_eliminacao_debito <> 0) then 1
			when(vl_eliminacao_credito <> 0) then 1
			when ((vl_eliminacao_debito <> 0) or (vl_eliminacao_credito <> 0)) then 1
		else 0
		end ie_teve_elim
	from (	SELECT  k300.cd_conta_contabil cd_conta_contabil,
			k300.ie_debito_credito,
			sum(k300.vl_saldo) vl_saldo,
			sum(k300.vl_eliminacao_debito) vl_eliminacao_debito,
			sum(k300.vl_eliminacao_credito) vl_eliminacao_credito,
			case k300.ie_debito_credito
			when 'D' then
			sum(k300.vl_eliminacao_debito) - sum(k300.vl_eliminacao_credito)
			when 'C' then
			sum(k300.vl_eliminacao_credito) - sum(k300.vl_eliminacao_debito)
			else
			0
			end vl_movto_eliminacao
		from (select	a.cd_conta_contabil cd_conta_contabil,
				x.ie_debito_credito,
				a.vl_saldo,
				0 vl_eliminacao_debito,
				0 vl_eliminacao_credito
			from    ctb_grupo_conta x,
				ctb_saldo a,
				estabelecimento b,
				conta_contabil c,
				ctb_mes_ref r
			where   a.cd_estabelecimento	= b.cd_estabelecimento
			and	a.cd_conta_contabil	= c.cd_conta_contabil
			and	b.cd_empresa		= c.cd_empresa
			and	a.nr_seq_mes_ref	= r.nr_sequencia
			and	r.cd_empresa		= b.cd_empresa
			and	c.cd_grupo		= x.cd_grupo
			and	c.ie_tipo		= 'A'
			and	r.dt_referencia		= trunc(dt_ref_final_pc, 'mm')
			and	b.cd_empresa		= cd_empresa_pc
			
union all

			select  c.cd_conta_referencia cd_conta_contabil,
				x.ie_debito_credito,
				a.vl_saldo,
				0 vl_eliminacao_debito,
				0 vl_eliminacao_credito
			from    ctb_grupo_conta x,
				ctb_saldo a,
				estabelecimento b,
				conta_contabil c,
				ctb_mes_ref r
			where	a.cd_estabelecimento	= b.cd_estabelecimento
			and	a.cd_conta_contabil	= c.cd_conta_contabil
			and	b.cd_empresa		= c.cd_empresa
			and	a.nr_seq_mes_ref	= r.nr_sequencia
			and	r.cd_empresa		= b.cd_empresa
			and	c.cd_grupo		= x.cd_grupo
			and	c.ie_tipo		= 'A'
			and	r.dt_referencia     	= trunc(dt_ref_final_pc, 'mm')
			and	b.cd_empresa 		in (	select	cd_empresa
								from    grupo_empresa_v v
								where   v.nr_seq_grupo_empresa = nr_seq_grupo_empresa_pc
								and	v.cd_empresa <> cd_empresa_pc
								and	v.ie_tipo_estrutura = 2)
			
union all

			select  a.cd_conta_contabil cd_conta_contabil,
				x.ie_debito_credito,
				0 vl_saldo,
				sum(vl_movimento) vl_eliminacao_debito,
				0 vl_eliminacao_credito
			from    ctb_grupo_conta x,
				conta_contabil a,
				ctb_movimento m,
				estabelecimento e,
				ctb_mes_ref re
			where	m.cd_estabelecimento	= e.cd_estabelecimento
			and	m.nr_seq_mes_ref	= re.nr_sequencia
			and	re.dt_referencia between dt_ref_inicial_pc and dt_ref_final_pc
			and	e.cd_empresa		= cd_empresa_pc
			and	m.cd_conta_debito	= a.cd_conta_contabil
			and	a.cd_grupo		= x.cd_grupo
			and	m.ie_eliminacao_lancto	= 'S'
			group by a.cd_conta_contabil
			
union all

			select  a.cd_conta_contabil cd_conta_contabil,
				x.ie_debito_credito,
				0 vl_saldo,
				0 vl_eliminacao_debito,
				coalesce(sum(vl_movimento),0) vl_eliminacao_credito
			from    ctb_grupo_conta x,
				conta_contabil a,
				ctb_movimento m,
				estabelecimento e,
				ctb_mes_ref re
			where	m.cd_estabelecimento	= e.cd_estabelecimento
			and	m.nr_seq_mes_ref	= re.nr_sequencia
			and	re.dt_referencia between dt_ref_inicial_pc and dt_ref_final_pc
			and	e.cd_empresa		= cd_empresa_pc
			and	m.cd_conta_credito	= a.cd_conta_contabil
			and	a.cd_grupo		= x.cd_grupo
			and	m.ie_eliminacao_lancto	= 'S'
			group by a.cd_conta_contabil
		) k300
	    group by k300.cd_conta_contabil,k300.ie_debito_credito
	    ) alias40
	order by 2;

type vetor_c01 is table of c01%rowtype index by integer;
vetor_c01_w    vetor_c01;


BEGIN

nr_seq_grupo_empresa_w := holding_pck.get_grupo_emp_estrut_vigente(regra_sped_p.cd_empresa);
open c01(
	ie_apres_conta_ctb_pc 	=> regra_sped_p.ie_apres_conta_ctb,
	nr_seq_grupo_empresa_pc => nr_seq_grupo_empresa_w,
	dt_ref_inicial_pc 	=> regra_sped_p.dt_ref_inicial,
	dt_ref_final_pc 	=> regra_sped_p.dt_ref_final,
	cd_empresa_pc 		=> regra_sped_p.cd_empresa
	);
	loop fetch C01 bulk collect into vetor_c01_w limit 1000;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		for i in vetor_c01_w.first .. vetor_c01_w.last loop
		ds_linha_w := substr(   sep_w 													||
					tp_registro_w                                       							|| sep_w ||
					vetor_c01_w[i].cd_codigo_conta_ecd                                  					|| sep_w ||
					replace(replace(campo_mascara_virgula(vetor_c01_w[i].vl_saldo),'.',''),'-','')         			|| sep_w ||
					vetor_c01_w[i].ie_debito_credito_saldofinal                              				|| sep_w ||
					replace(replace(campo_mascara_virgula(vetor_c01_w[i].vl_movto_eliminacao),'.',''),'-','')    		|| sep_w ||
					vetor_c01_w[i].ie_debito_credito_elim                                					|| sep_w ||
					replace(replace(campo_mascara_virgula(vetor_c01_w[i].vl_saldo_final_absoluto),'.',''),'-','')    	|| sep_w ||
					vetor_c01_w[i].ie_debito_credito_absoluto                                				|| sep_w,1,8000);
					
		regra_sped_p.cd_registro_variavel := tp_registro_w;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
		if (vetor_c01_w[i].ie_teve_elim = 1) then
			regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.gerar_interf_k310_ecd(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p, cd_conta_contabil_p => vetor_c01_w[i].cd_conta_contabil);
		end if;
		end loop;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
	end loop;
close c01;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_k300_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
