-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_i030_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE

			
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= '|';
dt_fim_ctb_w			empresa.dt_fim_ctb%type;
cd_pf_auditor_w			empresa.cd_pf_auditor%type;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
ds_codigo_prof_w		pessoa_fisica.ds_codigo_prof%type;
cd_cnpj_auditor_w		empresa.cd_cnpj_auditor%type;
ds_razao_social_auditoria_w	pessoa_juridica.ds_razao_social%type;
cd_cvm_w			pessoa_juridica.cd_cvm%type;

c_estabelecimento CURSOR(
	cd_pf_auditor_pc 	 empresa.cd_pf_auditor%type,
	cd_cnpj_auditor_pc 	 empresa.cd_cnpj_auditor%type,
	estabelecimento_pc 	 estabelecimento.cd_estabelecimento%type
	) FOR
	SELECT	dt_inicio_atividade dt_arquivamento,
		dt_arq_conv_emp dt_arquivam_conv,
		substr(obter_razao_social(cd_cgc),1,255) ds_razao_social,
		cd_cgc cd_cnpj,
		lpad(nr_reg_junta_comercial,11,0) nr_reg_junta_comercial,
		(obter_dados_pf_pj(null, cd_cgc, 'CI')) ds_municipio,
		coalesce(cd_pf_auditor,cd_pf_auditor_pc) cd_pf_auditor,
		coalesce(cd_cnpj_auditor, cd_cnpj_auditor_pc) cd_cnpj_auditor
	from	estabelecimento
	where   cd_estabelecimento	= estabelecimento_pc;
	
type vetor_estabelecimento is table of c_estabelecimento%rowtype index by integer;
v_estabelecimento_w    vetor_estabelecimento;

type vetor_ctb_sped_registro is table of ctb_sped_registro%rowtype index by integer;
v_ctb_sped_registro_w  vetor_ctb_sped_registro;

BEGIN

select	max(dt_fim_ctb),
	max(cd_pf_auditor),
	max(cd_cnpj_auditor)
into STRICT	dt_fim_ctb_w,
	cd_pf_auditor_w,
	cd_cnpj_auditor_w
from	empresa
where	cd_empresa	= regra_sped_p.cd_empresa;

open c_estabelecimento(
		cd_pf_auditor_pc 	=> cd_pf_auditor_w,
		cd_cnpj_auditor_pc 	=> cd_cnpj_auditor_w,
		estabelecimento_pc 	=> regra_sped_p.cd_estabelecimento
	);
	loop fetch c_estabelecimento bulk collect into v_estabelecimento_w limit 1000;
	EXIT WHEN NOT FOUND; /* apply on c_estabelecimento */
		for i in v_estabelecimento_w.first .. v_estabelecimento_w.last loop
		begin
		if (regra_sped_p.cd_versao = '1.0') then
			ds_linha_w	:= substr(	sep_w || 'I030' ||
							sep_w || 'TERMO DE ABERTURA' ||
							sep_w || regra_sped_p.nr_livro ||
							sep_w || regra_sped_p.ds_natureza_livro ||
							sep_w || '#QT_LINHAS' ||
							sep_w || v_estabelecimento_w[i].ds_razao_social  ||
							sep_w || v_estabelecimento_w[i].nr_reg_junta_comercial ||
							sep_w || v_estabelecimento_w[i].cd_cnpj  ||
							sep_w || to_char(v_estabelecimento_w[i].dt_arquivamento,'ddmmyyyy')  ||
							sep_w || to_char(v_estabelecimento_w[i].dt_arquivam_conv,'ddmmyyyy') ||
							sep_w || v_estabelecimento_w[i].ds_municipio ||
							sep_w ,1,8000);
		elsif (regra_sped_p.cd_versao = '2.0') then
			begin
			if (cd_pf_auditor_w IS NOT NULL AND cd_pf_auditor_w::text <> '') then
				select	a.nm_pessoa_fisica,
					a.ds_codigo_prof
				into STRICT	nm_pessoa_fisica_w,
					ds_codigo_prof_w
				from	pessoa_fisica	a
				where	a.cd_pessoa_fisica	= cd_pf_auditor_w;
			elsif (cd_cnpj_auditor_w IS NOT NULL AND cd_cnpj_auditor_w::text <> '') then
				begin
				select	ds_razao_social,
					cd_cvm
				into STRICT	ds_razao_social_auditoria_w,
					cd_cvm_w
				from	pessoa_juridica a
				where	cd_cgc	= cd_cnpj_auditor_w;
				exception when others then
					ds_razao_social_auditoria_w	:= '';
				end;
			end if;	
		
		
			ds_linha_w	:= substr(	sep_w || 'I030' ||
							sep_w || 'TERMO DE ABERTURA' ||
							sep_w || regra_sped_p.nr_livro ||
							sep_w || regra_sped_p.ds_natureza_livro ||
							sep_w || '#QT_LINHAS' ||
							sep_w || v_estabelecimento_w[i].ds_razao_social  ||
							sep_w || v_estabelecimento_w[i].nr_reg_junta_comercial ||
							sep_w || v_estabelecimento_w[i].cd_cnpj   ||
							sep_w || to_char(v_estabelecimento_w[i].dt_arquivamento,'ddmmyyyy')  ||
							sep_w || to_char(v_estabelecimento_w[i].dt_arquivam_conv,'ddmmyyyy') ||
							sep_w || v_estabelecimento_w[i].ds_municipio ||
							sep_w || to_char(dt_fim_ctb_w,'ddmmyyyy') ||
							sep_w || coalesce(nm_pessoa_fisica_w,ds_razao_social_auditoria_w) ||
							sep_w || coalesce(ds_codigo_prof_w,cd_cvm_w) ||
							sep_w ,1,8000);
			end;
		elsif (regra_sped_p.cd_versao in ('3.0', '4.0', '5.0', '6.0', '7.0', '8.0')) then
			ds_linha_w	:= substr(	sep_w || 'I030' ||
							sep_w || 'TERMO DE ABERTURA' ||
							sep_w || regra_sped_p.nr_livro ||
							sep_w || regra_sped_p.ds_natureza_livro ||
							sep_w || '#QT_LINHAS' ||
							sep_w || v_estabelecimento_w[i].ds_razao_social  ||
							sep_w || v_estabelecimento_w[i].nr_reg_junta_comercial ||
							sep_w || v_estabelecimento_w[i].cd_cnpj  ||
							sep_w || to_char(v_estabelecimento_w[i].dt_arquivamento,'ddmmyyyy')  ||
							sep_w || to_char(v_estabelecimento_w[i].dt_arquivam_conv,'ddmmyyyy') ||
							sep_w || v_estabelecimento_w[i].ds_municipio ||
							sep_w || to_char(dt_fim_ctb_w,'ddmmyyyy') ||
							sep_w ,1,8000);
		
		end if;
		regra_sped_p.cd_registro_variavel := 'I030';
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
		end;
		end loop;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
	end loop;
close c_estabelecimento;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_i030_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
