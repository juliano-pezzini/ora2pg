-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_i100_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE

			

ds_linha_w		varchar(8000);
sep_w			varchar(1) 	:= '|';
tp_registro_w		varchar(15) 	:= 'I100';

c01 CURSOR(	
		dt_ref_final_pc		 ctb_sped_controle.dt_ref_final%type,
		cd_empresa_pc		 ctb_regra_sped.cd_empresa%type,
		dt_ref_inicial_pc	 ctb_sped_controle.dt_ref_inicial%type,
		ie_consolida_empresa_pc	 ctb_regra_sped.ie_consolida_empresa%type,
		cd_estabelecimento_pc	 ctb_sped_controle.cd_estabelecimento%type
	)FOR
	SELECT	trunc(dt_ref_final_pc,'year') dt_atualizacao,
		a.cd_centro_custo,
		a.ds_centro_custo
	from	estabelecimento b,
		centro_custo a
	where	a.cd_estabelecimento	= b.cd_estabelecimento
	and	b.cd_empresa		= cd_empresa_pc
	and	exists (
			SELECT	1
			from	ctb_saldo x,
				ctb_mes_ref z
			where	x.cd_centro_custo = a.cd_centro_custo
			and (x.vl_credito <> 0 or x.vl_debito <> 0 or x.vl_saldo <> 0)
			and 	x.nr_seq_mes_ref = z.nr_sequencia
			and 	z.cd_empresa = cd_empresa_pc
			and	z.dt_referencia between pkg_date_utils.start_of(dt_ref_inicial_pc,'yyyy') and pkg_date_utils.end_of(dt_ref_inicial_pc, 'YEAR',0)
			and (ie_consolida_empresa_pc = 'S' or x.cd_estabelecimento = cd_estabelecimento_pc)  LIMIT 1)
	order by	3;

type vetor_c01 is table of c01%rowtype index by integer;
vetor_c01_w    vetor_c01;

type vetor_ctb_sped_registro is table of ctb_sped_registro%rowtype index by integer;
v_ctb_sped_registro_w  vetor_ctb_sped_registro;
	
BEGIN


open c01(
	dt_ref_final_pc		   => regra_sped_p.dt_ref_final,
	cd_empresa_pc		   => regra_sped_p.cd_empresa,
	dt_ref_inicial_pc	   => regra_sped_p.dt_ref_inicial,
	ie_consolida_empresa_pc	   => regra_sped_p.ie_consolida_empresa,
	cd_estabelecimento_pc	   => regra_sped_p.cd_estabelecimento
	);
	loop fetch c01 bulk collect into vetor_c01_w limit 1000;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		for i in vetor_c01_w.first .. vetor_c01_w.last loop
		begin
		ds_linha_w:= substr(	sep_w || tp_registro_w 						|| 
					sep_w || to_char(vetor_c01_w[i].dt_atualizacao,'ddmmyyyy') 	|| 
					sep_w || vetor_c01_w[i].cd_centro_custo 			|| 
					sep_w || vetor_c01_w[i].ds_centro_custo 			|| sep_w,1,8000);
		
		regra_sped_p.cd_registro_variavel := tp_registro_w;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
		end;
		end loop;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
	end loop;
close C01;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_i100_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
