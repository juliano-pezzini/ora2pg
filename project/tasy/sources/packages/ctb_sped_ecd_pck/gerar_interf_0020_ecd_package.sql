-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_0020_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE

			

ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= '|';
tp_registro_w			varchar(15)	:= '0020';


c_estabelecimentos CURSOR(
	cd_estabelecimento_pc 	 estabelecimento.cd_estabelecimento%type,
	cd_empresa_pc		 estabelecimento.cd_empresa%type,	
	ie_consolida_empresa_pc	 ctb_regra_sped.ie_consolida_empresa%type	
	) FOR
	SELECT  x.cd_cnpj,
		x.sg_estado,
		x.cd_inscricao_estadual,
		x.cd_municipio_ibge,
		x.nr_inscricao_municipal,
		x.nr_reg_junta_comercial
	from (	SELECT 	a.cd_cgc cd_cnpj,
			substr(obter_dados_pf_pj(null, a.cd_cgc, 'UF'), 1, 2) sg_estado,
			a.cd_inscricao_estadual cd_inscricao_estadual,
			lpad(coalesce(substr(obter_dados_pf_pj(null, a.cd_cgc, 'CDMDV'), 1, 7),a.cd_localidade), 7, 0) cd_municipio_ibge,
			substr(replace(a.cd_inscricao_municipal, '-', ''), 1, 20) nr_inscricao_municipal,
			a.nr_reg_junta_comercial
		from	estabelecimento	a
		where	a.cd_estabelecimento	= coalesce(cd_estabelecimento_pc, a.cd_estabelecimento)
		and	a.cd_empresa		= cd_empresa_pc
		and	ie_consolida_empresa_pc	= 'N'
		
union all

		select 	a.cd_cgc cd_cnpj,
			substr(obter_dados_pf_pj(null, a.cd_cgc, 'UF'), 1, 2) sg_estado,
			a.cd_inscricao_estadual cd_inscricao_estadual,
			lpad(coalesce(substr(obter_dados_pf_pj(null, a.cd_cgc, 'CDMDV'), 1, 7),a.cd_localidade), 7, 0) cd_municipio_ibge,
			substr(replace(a.cd_inscricao_municipal, '-', ''),1,20) nr_inscricao_municipal,
			a.nr_reg_junta_comercial
		from	estabelecimento	a
		where	a.cd_empresa			= cd_empresa_pc
		and	coalesce(a.ie_gerar_sped,'S')	=	'S'
		and	ie_consolida_empresa_pc		= 'S')
	x;
	
type vetor_estabelecimento is table of c_estabelecimentos%rowtype index by integer;
v_estabelecimento_w    vetor_estabelecimento;

type vetor_ctb_sped_registro is table of ctb_sped_registro%rowtype index by integer;
v_ctb_sped_registro_w  vetor_ctb_sped_registro;
	
BEGIN

open c_estabelecimentos(
	cd_estabelecimento_pc 	=> regra_sped_p.cd_estabelecimento,
	cd_empresa_pc		=> regra_sped_p.cd_empresa,
	ie_consolida_empresa_pc	=> regra_sped_p.ie_consolida_empresa
	);
	loop fetch c_estabelecimentos bulk collect into v_estabelecimento_w limit 1000;
		EXIT WHEN NOT FOUND; /* apply on c_estabelecimentos */
		for i in v_estabelecimento_w.first .. v_estabelecimento_w.last loop
		begin
		ds_linha_w	:= substr(	sep_w || tp_registro_w					||
						sep_w || '0' 						||
						sep_w || v_estabelecimento_w[i].cd_cnpj  		||
						sep_w || v_estabelecimento_w[i].sg_estado		||
						sep_w || v_estabelecimento_w[i].cd_inscricao_estadual	||
						sep_W || v_estabelecimento_w[i].cd_municipio_ibge  	||
						sep_w || v_estabelecimento_w[i].nr_inscricao_municipal	||
						sep_w || v_estabelecimento_w[i].nr_reg_junta_comercial	||
						sep_w, 1, 8000);
		
		regra_sped_p.cd_registro_variavel := tp_registro_w;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);
		end;
		end loop;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
	end loop;
close c_estabelecimentos;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_0020_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
