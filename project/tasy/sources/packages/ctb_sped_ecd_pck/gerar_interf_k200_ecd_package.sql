-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_sped_ecd_pck.gerar_interf_k200_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) AS $body$
DECLARE



ds_linha_w		varchar(8000);
sep_w			varchar(1) := '|';
tp_registro_w		varchar(15) := 'K200';
cd_codigo_conta_sup_w	varchar(40);
cd_codigo_conta_ecd_w	varchar(40);	
	
	
c01 CURSOR(
	cd_empresa_pc		 ctb_sped_controle.cd_empresa%type,
	dt_ref_inicial_pc 	 ctb_sped_controle.dt_ref_inicial%type,
	dt_ref_final_pc		 ctb_sped_controle.dt_ref_final%type
	) FOR
	SELECT	substr(lpad(coalesce(a.ie_natureza_sped,CASE WHEN b.ie_tipo='A' THEN '1' WHEN b.ie_tipo='P' THEN '2' WHEN b.ie_tipo='R' THEN '4' WHEN b.ie_tipo='C' THEN '4' WHEN b.ie_tipo='D' THEN '4'  ELSE '9' END ),2,'0'),1,2) cd_grupo_ecd,
		substr(CASE WHEN a.ie_tipo='T' THEN 'S'  ELSE 'A' END ,1,1) ie_tipo_ecd,
		ctb_obter_nivel_classif_conta(a.cd_classificacao) nr_nivel,
		substr(ctb_obter_classif_conta(a.cd_conta_contabil, a.cd_classificacao, regra_sped_p.dt_ref_final),1,40) cd_classificacao,
		a.cd_conta_contabil cd_conta_contabil,
		a.ds_conta_contabil ds_conta_contabil
	from	ctb_grupo_conta b,
		conta_contabil  a
	where	a.cd_grupo = b.cd_grupo
	and	a.cd_empresa = b.cd_empresa
	and	a.cd_empresa = cd_empresa_pc
	and	a.ie_situacao = 'A'
	and	substr(obter_se_vigencia_periodo(a.dt_inicio_vigencia, a.dt_fim_vigencia,dt_ref_inicial_pc, dt_ref_final_pc,'S'),1,1) = 'S'
	and	exists (
			SELECT	1
			from	ctb_saldo x
			where	x.cd_conta_contabil = a.cd_conta_contabil
			and	((substr(CASE WHEN a.ie_tipo='T' THEN 'S'  ELSE 'A' END ,1,1) = 'S') or (x.vl_credito <> 0 or x.vl_debito <> 0 or x.vl_saldo <> 0))
			and	x.nr_seq_mes_ref in (
						select	z.nr_sequencia
						from	ctb_mes_ref z
						where	z.cd_empresa = cd_empresa_pc
						and	z.dt_referencia between pkg_date_utils.start_of(dt_ref_inicial_pc,'yyyy') and pkg_date_utils.end_of(dt_ref_final_pc, 'YEAR',0))
			 LIMIT 1)		
	order by 4;
	
type vetor_c01 is table of c01%rowtype index by integer;
vetor_c01_w    vetor_c01;

BEGIN

open c01(
	cd_empresa_pc		=> regra_sped_p.cd_empresa,
	dt_ref_inicial_pc 	=> regra_sped_p.dt_ref_inicial,
	dt_ref_final_pc		=> regra_sped_p.dt_ref_final
	);
	loop fetch c01 bulk collect into vetor_c01_w limit 1000;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		for i in vetor_c01_w.first .. vetor_c01_w.last loop
		cd_codigo_conta_ecd_w	:= ctb_sped_ecd_pck.obter_cod_conta_ecd(ie_tipo_conta_p	=> 'C', 
							ie_apres_conta_ctb_p	=> regra_sped_p.ie_apres_conta_ctb, 
							cd_empresa_p		=> null, 
							cd_conta_contabil_p	=> vetor_c01_w[i].cd_conta_contabil, 
							cd_classificacao_p	=> vetor_c01_w[i].cd_classificacao,
							dt_vigencia_p		=> null);
							
		cd_codigo_conta_sup_w	:= ctb_sped_ecd_pck.obter_cod_conta_ecd(ie_tipo_conta_p	=> 'S',
							ie_apres_conta_ctb_p	=> regra_sped_p.ie_apres_conta_ctb, 
							cd_empresa_p		=> regra_sped_p.cd_empresa, 
							cd_conta_contabil_p	=> vetor_c01_w[i].cd_conta_contabil, 
							cd_classificacao_p	=> vetor_c01_w[i].cd_classificacao,
							dt_vigencia_p		=> regra_sped_p.dt_ref_inicial);

		ds_linha_w	:=   substr(sep_w       ||
					tp_registro_w               			|| sep_w ||
					vetor_c01_w[i].cd_grupo_ecd              	|| sep_w ||
					vetor_c01_w[i].ie_tipo_ecd              	|| sep_w ||
					vetor_c01_w[i].nr_nivel                  	|| sep_w ||
					cd_codigo_conta_ecd_w        			|| sep_w ||
					cd_codigo_conta_sup_w				|| sep_w ||
					vetor_c01_w[i].ds_conta_contabil        	|| sep_w
					,1,8000);

		regra_sped_p.cd_registro_variavel := tp_registro_w;			
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.inserir_registros_vetor(regra_sped_p => regra_sped_p, ds_linha_p => ds_linha_w);

		if (vetor_c01_w[i].ie_tipo_ecd = 'A') then 
			regra_sped_p 	=> regra_sped_p := ctb_sped_ecd_pck.gerar_interf_k210_ecd(regra_sped_p 	=> regra_sped_p, nm_usuario_p 		=> nm_usuario_p, cd_conta_contabil_p 	=> vetor_c01_w[i].cd_conta_contabil);
		end if;
		end loop;
		regra_sped_p => regra_sped_p := ctb_sped_ecd_pck.persistir_registros_em_lote(regra_sped_p => regra_sped_p, nm_usuario_p => nm_usuario_p);
	end loop;
close c01;
		
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_sped_ecd_pck.gerar_interf_k200_ecd (regra_sped_p INOUT ctb_sped_ecd_pck.regra_sped, nm_usuario_p text) FROM PUBLIC;
