-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_pat_case_pck.ish_receber_atend_pac_unidade ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, nr_seq_regra_p bigint, ie_conversao_p text, nr_seq_interno_p INOUT atend_paciente_unidade.nr_seq_interno%type, creationdate_p text, creationtime_p text, creationuser_p text, updatedate_p text, updateuser_p text, patcaseid_p text, CancelInd_p text, canceldate_p text, canceluser_p text, movemntseqno_p text, movemntdate_p text, movemnttime_p text, movemntenddate_p text, movemntendtime_p text, nurstreatou_p text, bed_p text, room_p text, department_p text, movemntcomment_p text, movemntctgry_p text, movemnttype_p text, nr_atendimento_p bigint, treatmcategory_p text default null, casetype_p text default null) AS $body$
DECLARE

	
_ora2pg_r RECORD;
episodio_paciente_w		episodio_paciente%rowtype;
atendimento_paciente_w		atendimento_paciente%rowtype;
atend_paciente_unidade_w	atend_paciente_unidade%rowtype;
atend_paciente_unidade_ww	atend_paciente_unidade%rowtype;
unidade_atendimento_w		unidade_atendimento%rowtype;

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;

dt_atualizacao_nrec_w		timestamp;
dt_atualizacao_w			timestamp;
nm_usuario_nrec_w			usuario.nm_usuario%type;
nm_usuario_w			usuario.nm_usuario%type;

dt_cancelamento_w		timestamp;

ds_erro_w			varchar(4000);
ie_disponivel_w			varchar(1);


BEGIN
begin
dt_atualizacao_nrec_w	:=	to_date(creationdate_p||creationtime_p,'yyyy-mm-ddhh24:mi:ss');
exception
when others then
	dt_atualizacao_nrec_w	:=	coalesce(dt_atualizacao_nrec_w,clock_timestamp());
end;
begin
dt_atualizacao_w		:=	to_date(updatedate_p,'yyyy-mm-dd');
exception
when others then
	dt_atualizacao_w		:=	coalesce(dt_atualizacao_nrec_w,clock_timestamp());
end;

intpd_processar_atributo(reg_integracao_p,'NM_USUARIO_NREC',coalesce(creationuser_p,updateuser_p),'N',nm_usuario_nrec_w);
intpd_processar_atributo(reg_integracao_p,'NM_USUARIO',coalesce(updateuser_p, creationuser_p),'N',nm_usuario_w);

reg_integracao_p.nm_elemento	:=	'Movementlist';
reg_integracao_p.nr_seq_visao	:=	0;

begin
select	*
into STRICT	episodio_paciente_w
from	episodio_paciente
where	nr_episodio = ltrim(patcaseid_p, '0');	
exception
when others then
	episodio_paciente_w.nr_sequencia	:=	null;
end;

if (episodio_paciente_w.nr_sequencia IS NOT NULL AND episodio_paciente_w.nr_sequencia::text <> '') and (coalesce(nr_atendimento_p::text, '') = '') then
	begin	
	nr_atendimento_w := ish_get_encounter_case(
				coalesce(patcaseid_p, episodio_paciente_w.nr_sequencia),
				'INPAT', 
				movemntseqno_p,
				null,
				null,
				null,
				null,
				movemntctgry_p,
				movemnttype_p,
				'S',
				casetype_p);
	exception
	when others then
		nr_atendimento_w	:=	null;
	end;
else
	nr_atendimento_w	:=	nr_atendimento_p;
end if;

begin
select	*
into STRICT	atendimento_paciente_w
from	atendimento_paciente		
where	nr_atendimento = nr_atendimento_w;	
exception
when others then
	atendimento_paciente_w.nr_atendimento	:=	null;
	nr_atendimento_w			:=	null;
end;

reg_integracao_p.nm_tabela		:=	'EPISODIO_PACIENTE';
	
episodio_paciente_w.nm_usuario	:=	nm_usuario_w;
episodio_paciente_w.dt_atualizacao	:=	dt_atualizacao_w;
		
reg_integracao_p.nm_tabela	:=	'ATEND_PACIENTE_UNIDADE';

atend_paciente_unidade_w.nr_seq_interno := somente_numero(intpd_conv('ATEND_PACIENTE_UNIDADE', 'NR_SEQ_INTERNO', substr(patcaseid_p || current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10) || movemntseqno_p,1,40), nr_seq_regra_p, ie_conversao_p, 'I'));

begin
select	*
into STRICT	atend_paciente_unidade_w
from	atend_paciente_unidade
where	nr_seq_interno = atend_paciente_unidade_w.nr_seq_interno;
exception
when others then
	atend_paciente_unidade_w.nr_seq_interno := null;
end;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

	if (coalesce(CancelInd_p,'NULL') = 'X') then
		begin
		if (atend_paciente_unidade_w.nr_seq_interno IS NOT NULL AND atend_paciente_unidade_w.nr_seq_interno::text <> '') then
			begin
			begin
			dt_cancelamento_w	:=	to_date(canceldate_p,'yyyy-mm-dd');
			exception
			when others then
				dt_cancelamento_w	:=	null;
			end;	
			
			--OS 2046479
			if (coalesce(atend_paciente_unidade_w.dt_saida_unidade::text, '') = '') then
				update	atend_paciente_unidade
				set	dt_saida_unidade 	= atend_paciente_unidade_w.dt_entrada_unidade + 1/24/60/60
				where	nr_seq_interno		= atend_paciente_unidade_w.nr_seq_interno
				and	nr_atendimento		= atend_paciente_unidade_w.nr_atendimento;
			end if;

			CALL wheb_usuario_pck.set_ie_commit('N');
			
			begin
			Excluir_Atend_Pac_Unidade( 	
				atend_paciente_unidade_w.nr_atendimento,
				atend_paciente_unidade_w.DT_ENTRADA_UNIDADE,
				nm_usuario_w,
				ds_erro_w,
				atend_paciente_unidade_w.nr_seq_interno);
			exception
			when others then
				ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1, 2000);
			end;
			
			CALL wheb_usuario_pck.set_ie_commit('S');
			
			if (coalesce(ds_erro_w,'NULL') <> 'NULL') and (length(ds_erro_w) > 1) then
				begin
				reg_integracao_p.intpd_log_receb[reg_integracao_p.qt_reg_log].ds_log	:=	ds_erro_w;			
				reg_integracao_p.qt_reg_log	:=	reg_integracao_p.qt_reg_log + 1;
				end;
			end if;
			end;
		end if;
		
		
		end;
	else
		begin
		begin
		atend_paciente_unidade_w.dt_saida_unidade	:=	to_date(movemntenddate_p || movemntendtime_p,'yyyy-mm-ddhh24:mi:ss');
		
		if (atend_paciente_unidade_w.dt_saida_unidade > clock_timestamp()) then
			atend_paciente_unidade_w.dt_saida_unidade	:=	null;
		end if;
		exception
		when others then
			atend_paciente_unidade_w.dt_saida_unidade	:=	null;
		end;
		
		atend_paciente_unidade_w.cd_setor_atendimento	:=	null;
		atend_paciente_unidade_w.cd_unidade_basica	:=	null;
		atend_paciente_unidade_w.cd_unidade_compl	:=	null;

		begin
		select	cd_setor_atendimento
		into STRICT	atend_paciente_unidade_w.cd_setor_atendimento
		from	setor_atendimento
		where	cd_setor_externo = nurstreatou_p  LIMIT 1;
		exception
		when others then
			intpd_processar_atributo(reg_integracao_p, 'CD_SETOR_ATENDIMENTO', nurstreatou_p, 'S', atend_paciente_unidade_w.cd_setor_atendimento);
		end;
		
		begin
		select	cd_unidade_basica,
			cd_unidade_compl
		into STRICT	atend_paciente_unidade_w.cd_unidade_basica,
			atend_paciente_unidade_w.cd_unidade_compl
		from	unidade_atendimento
		where	cd_setor_atendimento 	= atend_paciente_unidade_w.cd_setor_atendimento
		and	nm_leito_integracao 	= room_p ||current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10)|| bed_p;
		exception
		when others then
			begin
			select	cd_unidade_basica,
				cd_unidade_compl
			into STRICT	atend_paciente_unidade_w.cd_unidade_basica,
				atend_paciente_unidade_w.cd_unidade_compl
			from	unidade_atendimento
			where	cd_setor_atendimento = atend_paciente_unidade_w.cd_setor_atendimento
			and	nm_leito_integracao = bed_p;
			exception
			when others then
				begin
				if (coalesce(bed_p,'X') <> 'X') then
					begin
					intpd_processar_atributo(reg_integracao_p, 'CD_UNIDADE_BASICA', room_p, 'S', atend_paciente_unidade_w.cd_unidade_basica);
					intpd_processar_atributo(reg_integracao_p, 'CD_UNIDADE_COMPL', bed_p, 'S', atend_paciente_unidade_w.cd_unidade_compl);
					end;
				end if;
				end;
			end;
		end;		

		if (coalesce(department_p,'XPTO') <> 'XPTO') then						
			reg_integracao_p.nm_tabela 	:= 'ATEND_PACIENTE_UNIDADE';
			intpd_processar_atributo(reg_integracao_p, 'CD_DEPARTAMENTO', department_p, 'S', atend_paciente_unidade_w.cd_departamento);
		end if;

		if (coalesce(atend_paciente_unidade_w.cd_unidade_basica::text, '') = '') then
			begin		
			select	cd_unidade_basica,
				cd_unidade_compl
			into STRICT	atend_paciente_unidade_w.cd_unidade_basica,
				atend_paciente_unidade_w.cd_unidade_compl
			from	unidade_atendimento a,
				tipo_acomodacao b
			where	a.cd_tipo_acomodacao  = b.cd_tipo_acomodacao
			and	b.ie_sem_acomodacao = 'S'
			and	a.cd_setor_atendimento = atend_paciente_unidade_w.cd_setor_atendimento
			and	a.ie_situacao = 'A'
			and	b.ie_situacao = 'A'  LIMIT 1;
			exception
			when others then
				null;
			end;
		end if;
			
		intpd_processar_atributo(reg_integracao_p, 'DS_OBSERVACAO', movemntcomment_p, 'N', atend_paciente_unidade_w.DS_OBSERVACAO);
		intpd_processar_atributo(reg_integracao_p, 'NR_SEQ_CLASSIF_ESP', treatmcategory_p, 'S', atend_paciente_unidade_w.nr_seq_classif_esp);		

		atend_paciente_unidade_w.nm_usuario	:=	nm_usuario_w;
		atend_paciente_unidade_w.dt_atualizacao	:=	dt_atualizacao_w;
		
		atend_paciente_unidade_ww	:=	atend_paciente_unidade_w;
		
		SELECT * FROM ish_pat_case_pck.valida_status_unidade(
			reg_integracao_p.nr_seq_fila_transmissao, reg_integracao_p, atend_paciente_unidade_w, movemntenddate_p, movemntendtime_p, ie_disponivel_w) INTO STRICT _ora2pg_r;
 reg_integracao_p := _ora2pg_r.reg_integracao_p; atend_paciente_unidade_w := _ora2pg_r.atend_paciente_unidade_p; ie_disponivel_w := _ora2pg_r.ie_disponivel_p;		
		
		if (reg_integracao_p.qt_reg_log = 0) then
			if (atend_paciente_unidade_w.nr_seq_interno IS NOT NULL AND atend_paciente_unidade_w.nr_seq_interno::text <> '') then
				begin
				atend_paciente_unidade_w.dt_entrada_unidade	:=	ISH_UTILS_PCK.get_ish_valid_time(movemntdate_p,movemnttime_p);
				exception
				when others then
					null;
				end;
				
				/*
				update	atend_paciente_unidade
				set	row = atend_paciente_unidade_w
				where	nr_seq_interno = atend_paciente_unidade_w.nr_seq_interno;
				*/
				
				atend_paciente_unidade_w := ish_pat_case_pck.registrar_movto('U', atend_paciente_unidade_w);
			else
				begin
				
				begin
				atend_paciente_unidade_w.dt_entrada_unidade	:=	ISH_UTILS_PCK.get_ish_valid_time(movemntdate_p,movemnttime_p);
				exception
				when others then
					atend_paciente_unidade_w.dt_entrada_unidade	:=	null;
				end;
				
				atend_paciente_unidade_w.nm_usuario_nrec	:=	nm_usuario_nrec_w;
				atend_paciente_unidade_w.dt_atualizacao_nrec	:=	dt_atualizacao_nrec_w;
				atend_paciente_unidade_w.nr_atendimento	:=	nr_atendimento_w;	
				
				if (atend_paciente_unidade_w.dt_saida_unidade IS NOT NULL AND atend_paciente_unidade_w.dt_saida_unidade::text <> '') then
					begin
					select	nextval('atend_paciente_unidade_seq')
					into STRICT	atend_paciente_unidade_w.nr_seq_interno
					;
					
					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	atend_paciente_unidade_w.nr_sequencia
					from	atend_paciente_unidade
					where	nr_atendimento = atend_paciente_unidade_w.nr_atendimento;			
					
					--insert into atend_paciente_unidade values atend_paciente_unidade_w;
					atend_paciente_unidade_w := ish_pat_case_pck.registrar_movto('I', atend_paciente_unidade_w);
					end;
				else
					begin
					CALL Gerar_Transferencia_Paciente(	
						atend_paciente_unidade_w.nr_atendimento,
						atend_paciente_unidade_w.cd_setor_atendimento,
						atend_paciente_unidade_w.cd_unidade_basica,
						atend_paciente_unidade_w.cd_unidade_compl,
						atend_paciente_unidade_w.cd_tipo_acomodacao,
						null,
						atend_paciente_unidade_w.nr_seq_motivo_transf,
						atend_paciente_unidade_w.ds_observacao,
						atend_paciente_unidade_w.nm_usuario,
						atend_paciente_unidade_w.dt_entrada_unidade,
						atend_paciente_unidade_w.nr_seq_classif_esp,
						atend_paciente_unidade_w.cd_departamento);
				
					select	nr_seq_interno,
						nr_sequencia
					into STRICT	atend_paciente_unidade_w.nr_seq_interno,
						atend_paciente_unidade_w.nr_sequencia
					from	atend_paciente_unidade
					where	nr_atendimento = atend_paciente_unidade_w.nr_atendimento
					and	cd_setor_atendimento = atend_paciente_unidade_w.cd_setor_atendimento
					and	cd_unidade_basica = atend_paciente_unidade_w.cd_unidade_basica
					and	cd_unidade_compl = atend_paciente_unidade_w.cd_unidade_compl
					and	dt_entrada_unidade = atend_paciente_unidade_w.dt_entrada_unidade;
					end;
				end if;			
				
				CALL gerar_conv_meio_externo(
					null,
					'ATEND_PACIENTE_UNIDADE', 
					'NR_SEQ_INTERNO', 
					atend_paciente_unidade_w.nr_seq_interno, 
					substr(patcaseid_p || current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10) || movemntseqno_p,1,40),
					null, 
					nr_seq_regra_p, 
					'A', 
					atend_paciente_unidade_w.nm_usuario);
				end;
			end if;
			
			if (ie_disponivel_w = 'N') then
				CALL ish_pat_case_pck.reproc_get_transfer(
					reg_integracao_p.nr_seq_fila_transmissao,
					atend_paciente_unidade_w.nr_seq_interno,
					atend_paciente_unidade_w.nr_atendimento,				
					atend_paciente_unidade_ww.cd_setor_atendimento,
					atend_paciente_unidade_ww.cd_unidade_basica,
					atend_paciente_unidade_ww.cd_unidade_compl,
					0);
			end if;
		end if;
		
		end;
	end if;
end if;

nr_seq_interno_p	:=	atend_paciente_unidade_w.nr_seq_interno;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_pat_case_pck.ish_receber_atend_pac_unidade ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, nr_seq_regra_p bigint, ie_conversao_p text, nr_seq_interno_p INOUT atend_paciente_unidade.nr_seq_interno%type, creationdate_p text, creationtime_p text, creationuser_p text, updatedate_p text, updateuser_p text, patcaseid_p text, CancelInd_p text, canceldate_p text, canceluser_p text, movemntseqno_p text, movemntdate_p text, movemnttime_p text, movemntenddate_p text, movemntendtime_p text, nurstreatou_p text, bed_p text, room_p text, department_p text, movemntcomment_p text, movemntctgry_p text, movemnttype_p text, nr_atendimento_p bigint, treatmcategory_p text default null, casetype_p text default null) FROM PUBLIC;
