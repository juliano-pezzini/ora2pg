-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ish_pat_case_pck.get_inpat_admiss_data ( nr_seq_fila_p bigint) RETURNS SETOF T_INPAT_ADMISS_DATA AS $body$
DECLARE


r_inpat_admiss_data_w	r_inpat_admiss_data;

nr_seq_documento_w	intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w		intpd_eventos_sistema.ie_conversao%type;
nr_seq_regra_w		intpd_eventos_sistema.nr_seq_regra_conv%type;

nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
nr_seq_atepacu_w	atend_paciente_unidade.nr_seq_interno%type;

nr_seq_classif_w	classif_pessoa.nr_sequencia%type;
cur_ferida_admiss_w	cur_ferida%rowtype;
agenda_lista_espera_inpat_ad_w agenda_lista_espera%rowtype;

pessoa_fisica_inpat_ad_w pessoa_fisica%rowtype;
nm_fantasia_ad_w pessoa_juridica.nm_fantasia%type;

reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
dt_geral_w			varchar(255);
cd_setor_externo_w		setor_atendimento.cd_setor_externo%type;
nm_leito_integracao_w		unidade_atendimento.nm_leito_integracao%type;
ie_tipo_atendimento_ret_w	atendimento_paciente.ie_tipo_atendimento%type;
famphys_medic_w			pf_medico_externo.nr_seq_tipo_medico%type;
famrefphys_medic_w			pf_medico_externo.nr_seq_tipo_medico%type;
cd_medico_resp_w		varchar(100);
movemnttype_w			varchar(255);
nm_localidade_w			varchar(255);
qt_peso_w			varchar(7);
dt_atualizacao_nrec_w		pep_pac_ci.dt_atualizacao_nrec%type;
ie_controla_alta_w		pep_pac_ci.ie_controla_alta%type;
nr_seq_posicao_w			posicao_sap.nr_sequencia%type;
nr_seq_posicao_return_w		posicao_sap.nr_sequencia%type;
cd_cgc_indicacao_w			atendimento_paciente.cd_cgc_indicacao%type;

c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_episodio,
	nr_seq_tipo_episodio,
	nr_seq_subtipo_episodio,
	cd_pessoa_fisica,
	ie_status,
	dt_episodio,
	dt_fim_episodio,
	coalesce(dt_atualizacao_nrec, clock_timestamp()) dt_atualizacao_nrec,
	coalesce(nm_usuario_nrec, nm_usuario) nm_usuario_nrec,	
	substr(ds_observacao,1,30) ds_observacao
from	episodio_paciente
where	nr_sequencia = nr_seq_documento_w;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	cd_estabelecimento,
	ie_tipo_atendimento,
	nr_dias_prev_alta,
	cd_cgc_indicacao,
	nr_seq_tipo_acidente,
	dt_ocorrencia,
	cd_municipio_ocorrencia,
	nr_seq_forma_chegada,	
	cd_medico_resp,
	dt_ultima_menstruacao,
	qt_ig_semana,
	nr_seq_queixa,	
	nr_seq_tipo_admissao_fat,
	nr_seq_classificacao,
	dt_chegada_paciente,
	dt_entrada,
	cd_procedencia,
	ie_inform_incompletas
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

c02_w	c02%rowtype;

c03 CURSOR FOR
SELECT	nr_seq_interno,
	nr_seq_motivo_int,
	dt_entrada_unidade,
	dt_saida_unidade,
	cd_tipo_acomodacao,
	cd_setor_atendimento,
	cd_unidade_basica,
	cd_unidade_compl,
	cd_departamento,
	substr(obter_dados_atepacu(a.nr_seq_interno, 3),1,10) nr_seq_classif_esp
from	atend_paciente_unidade a
where	nr_seq_interno = nr_seq_atepacu_w;

c03_w	c03%rowtype;

c04 CURSOR FOR
SELECT	qt_peso,
	qt_altura_cm,
	b.cd_medico,
	b.nr_seq_tipo_medico
FROM pessoa_fisica a
LEFT OUTER JOIN pf_medico_externo b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica = c01_w.cd_pessoa_fisica and (coalesce(b.dt_fim_vigencia::text, '') = '' or (trunc(b.dt_fim_vigencia) > trunc(clock_timestamp()))) order by b.dt_atualizacao desc;

c04_w	c04%rowtype;

c05 CURSOR FOR
SELECT	a.*
from	atendimento_paciente_inf a
where	a.nr_atendimento in (select	x.nr_atendimento
	from	atendimento_paciente x
	where	x.nr_seq_episodio = c01_w.nr_sequencia)  LIMIT 1;
	
c05_w	c05%rowtype;


BEGIN
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
	ie_conversao_w,	
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_seq_fila_p;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);


open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	reg_integracao_w.nm_elemento		:= 'InpatAdmissData';
	reg_integracao_w.nm_tabela 		:= 'EPISODIO_PACIENTE';
	
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQUENCIA', 'extcaseid', 'N', c01_w.nr_sequencia, 'N', r_inpat_admiss_data_w.extcaseid);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_TIPO_EPISODIO', 'casetypeext', 'N', c01_w.nr_seq_tipo_episodio, 'S', r_inpat_admiss_data_w.casetypeext);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_SUBTIPO_EPISODIO', 'casecategory', 'N', c01_w.nr_seq_subtipo_episodio, 'S', r_inpat_admiss_data_w.casecategory);
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_EPISODIO', 'startdate', 'N', c01_w.dt_episodio, 'N', dt_geral_w);
	r_inpat_admiss_data_w.startdate		:=	to_char(to_date(dt_geral_w),'YYYY-MM-DD');
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_FIM_EPISODIO', 'enddate', 'N', c01_w.dt_fim_episodio, 'N', dt_geral_w);
	r_inpat_admiss_data_w.enddate		:=	to_char(to_date(dt_geral_w),'YYYY-MM-DD');
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO_NREC', 'creationdate', 'N', c01_w.dt_atualizacao_nrec, 'N', dt_geral_w);
	r_inpat_admiss_data_w.creationdate	:=	to_char(to_date(dt_geral_w),'YYYY-MM-DD');
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO_NREC', 'creationtime', 'N', c01_w.dt_atualizacao_nrec, 'N', dt_geral_w);
	r_inpat_admiss_data_w.creationtime	:=	to_char(to_date(dt_geral_w),'HH24:MI:SS');
	intpd_processar_atrib_envio(reg_integracao_w, 'NM_USUARIO_NREC', 'creationuser', 'N', ish_param_pck.get_nm_usuario, 'N', r_inpat_admiss_data_w.creationuser);
	intpd_processar_atrib_envio(reg_integracao_w, 'DS_OBSERVACAO', 'casecomment', 'N', c01_w.ds_observacao, 'N', r_inpat_admiss_data_w.casecomment);
	
	nr_atendimento_w	:=	ish_get_encounter_case(coalesce(c01_w.nr_episodio, c01_w.nr_sequencia), 'INPAT','X','X','X','X','X','NULL','NULL','S','NULL','N');
	
	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin		
		reg_integracao_w.nm_tabela 			:= 'ATENDIMENTO_PACIENTE';
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_ATENDIMENTO', 'emergadm', 'N', c02_w.ie_tipo_atendimento, 'N', ie_tipo_atendimento_ret_w);
		if (ie_tipo_atendimento_ret_w = 3) then
			r_inpat_admiss_data_w.emergadm	:= 'X';
		end if;
		
		intpd_processar_atrib_envio(reg_integracao_w, 'REFPSTTRTTYPE', 'refpsttrttype', 'N', c02_w.cd_procedencia, 'S', r_inpat_admiss_data_w.refpsttrttype);
		
		dt_geral_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_ENTRADA', 'movemntdate', 'N', c02_w.dt_entrada, 'N', dt_geral_w);
		r_inpat_admiss_data_w.movemntdate	:= to_char(to_date(dt_geral_w),'YYYY-MM-DD');
		dt_geral_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_ENTRADA', 'movemnttime', 'N', c02_w.dt_entrada, 'N', dt_geral_w);
		r_inpat_admiss_data_w.movemnttime	:= to_char(to_date(dt_geral_w),'HH24:MI:SS');
		
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_TIPO_ADMISSAO_FAT', 'movemnttype', 'N', c02_w.nr_seq_tipo_admissao_fat, 'S', movemnttype_w);
		
		if (ish_param_pck.get_conv_tipo_adm_fat = 'CTMCMT') then
			r_inpat_admiss_data_w.movemnttype	:=	substr(obter_valor_campo_separador(movemnttype_w, 3, current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10)), 1, 255);
		else
			r_inpat_admiss_data_w.movemnttype	:=	substr(obter_valor_campo_separador(movemnttype_w, 2, current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10)), 1, 255);
		end if;
		
		--r_inpat_admiss_data_w.lengthofstay		:=	c02_w.nr_dias_prev_alta;
		cd_cgc_indicacao_w := c02_w.cd_cgc_indicacao;

		if (coalesce(cd_cgc_indicacao_w, 'NULL') = 'NULL') then
			begin
				select	api.cd_cgc_indicacao
				into STRICT	cd_cgc_indicacao_w
				from	atendimento_paciente_inf api
				where	api.nr_sequencia = (SELECT	max(aux.nr_sequencia)
											from	atendimento_paciente_inf aux
											where	aux.nr_atendimento = nr_atendimento_w);
			exception when no_data_found then
				cd_cgc_indicacao_w := null;
			end;
		end if;

		if (coalesce(cd_cgc_indicacao_w, 'NULL') <> 'NULL') then
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC_INDICACAO', 'refhospital', 'N', lpad(somente_numero(cd_cgc_indicacao_w), 10, 0), 'N', r_inpat_admiss_data_w.refhospital);
		else
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CGC_INDICACAO', 'refhospital', 'N', null, 'N', r_inpat_admiss_data_w.refhospital);
		end if;
		--intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO_RESP', 'admphys', 'N', c02_w.cd_medico_resp, 'S', r_inpat_admiss_data_w.admphys);
		dt_geral_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_ULTIMA_MENSTRUACAO', 'lastmenstrualperiod', 'N', c02_w.dt_ultima_menstruacao, 'N', dt_geral_w);
		r_inpat_admiss_data_w.lastmenstrualperiod	:= to_char(to_date(dt_geral_w),'YYYY-MM-DD');		
		
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_CLASSIFICACAO', 'movemntreas1', 'N', c02_w.nr_seq_classificacao, 'S', r_inpat_admiss_data_w.movemntreas1);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_QUEIXA', 'movemntreas2', 'N', c02_w.nr_seq_queixa, 'S', r_inpat_admiss_data_w.movemntreas2);

    if (coalesce(c02_w.ie_inform_incompletas, 'N') = 'S') then
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_INFORM_INCOMPLETAS', 'quickadm', 'N', 'X', 'N', r_inpat_admiss_data_w.quickadm);
		else
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_INFORM_INCOMPLETAS', 'quickadm', 'N', '', 'N', r_inpat_admiss_data_w.quickadm);
		end if;
		
		reg_integracao_w.nm_tabela 			:= 'ATEND_PREVISAO_ALTA';
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_DIAS_PREV_ALTA', 'lengthofstay', 'N', ish_pat_case_pck.obter_lenght_of_stay(nr_atendimento_w), 'N', r_inpat_admiss_data_w.lengthofstay);		
		exit;
		end;
	end loop;
	close c02;
	
	open C05;
	loop
	fetch C05 into
		c05_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		reg_integracao_w.nm_tabela 	:= 'ATENDIMENTO_PACIENTE_INF';
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_TIPO_ACIDENTE', 'accident', 'N', c05_w.nr_seq_tipo_acidente, 'S', r_inpat_admiss_data_w.accident);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_FORMA_CHEGADA', 'arrivalmode', 'N', c05_w.nr_seq_forma_chegada, 'S', r_inpat_admiss_data_w.arrivalmode);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_ACIDENTE', 'accidentno', 'N', c05_w.nr_acidente, 'N', r_inpat_admiss_data_w.accidentno);		
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO', 'refphys', 'N', c05_w.cd_medico, 'S', r_inpat_admiss_data_w.refphys);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_BSNR', 'refphysbsnr', 'N', c05_w.nr_bsnr, 'N', r_inpat_admiss_data_w.refphysbsnr);
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_RQE', 'refphyslanr', 'N', c05_w.nr_rqe, 'N', r_inpat_admiss_data_w.refphyslanr);		
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_ACIDENTE', 'accidentloc', 'N', c05_w.ds_acidente, 'N', r_inpat_admiss_data_w.accidentloc);	
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_OCORRENCIA', 'accidentdate', 'N', c05_w.dt_ocorrencia, 'N', dt_geral_w);
		r_inpat_admiss_data_w.accidentdate	:= to_char(to_date(dt_geral_w),'YYYY-MM-DD');
		dt_geral_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_OCORRENCIA', 'accidenttime', 'N', c05_w.dt_ocorrencia, 'N', dt_geral_w);
		r_inpat_admiss_data_w.accidenttime	:= to_char(to_date(dt_geral_w),'HH24:MI:SS');
		dt_geral_w	:= null;
		
		if (c05_w.dt_validade IS NOT NULL AND c05_w.dt_validade::text <> '') then
			intpd_processar_atrib_envio(reg_integracao_w, 'DT_INICIO_VALIDADE', 'startdate', 'N', c05_w.dt_inicio_validade, 'N', dt_geral_w);			
			r_inpat_admiss_data_w.startdate		:=	to_char(to_date(dt_geral_w),'YYYY-MM-DD');			
			dt_geral_w	:= null;			
			intpd_processar_atrib_envio(reg_integracao_w, 'DT_VALIDADE', 'enddate', 'N', c05_w.dt_validade, 'N', dt_geral_w);			
			r_inpat_admiss_data_w.enddate		:=	to_char(to_date(dt_geral_w),'YYYY-MM-DD');			
			dt_geral_w	:= null;
		end if;
	end loop;
	close C05;
	
	/*'P = Primeira Unidade'*/

	nr_seq_atepacu_w	:=	obter_atepacu_paciente(nr_atendimento_w,'P');

	open c03;
	loop
	fetch c03 into	
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin		
		reg_integracao_w.nm_tabela 		:= 'ATEND_PACIENTE_UNIDADE';
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_CLASSIF_ESP', 'treatmcategory', 'N', c03_w.nr_seq_classif_esp, 'S', r_inpat_admiss_data_w.treatmcategory);		
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_DEPARTAMENTO', 'department', 'N', c03_w.cd_departamento, 'S', r_inpat_admiss_data_w.department);		
		
		begin
		select	cd_setor_externo
		into STRICT	cd_setor_externo_w
		from	setor_atendimento
		where	cd_setor_atendimento = c03_w.cd_setor_atendimento
		and	(cd_setor_externo IS NOT NULL AND cd_setor_externo::text <> '')  LIMIT 1;
		
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_SETOR_ATENDIMENTO', 'nurstreatou', 'N', cd_setor_externo_w, 'N', r_inpat_admiss_data_w.nurstreatou);
		exception
		when others then
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_SETOR_ATENDIMENTO', 'nurstreatou', 'N', c03_w.cd_setor_atendimento, 'S', r_inpat_admiss_data_w.nurstreatou);
		end;
		
		reg_integracao_w.nm_tabela	:= 'UNIDADE_ATENDIMENTO';
		
		begin
		select	nm_leito_integracao
		into STRICT	nm_leito_integracao_w
		from	unidade_atendimento
		where	cd_setor_atendimento 	= c03_w.cd_setor_atendimento
		and	cd_unidade_basica 	= c03_w.cd_unidade_basica
		and	cd_unidade_compl 	= c03_w.cd_unidade_compl
		and	(nm_leito_integracao IS NOT NULL AND nm_leito_integracao::text <> '');
		exception
		when others then
			begin
			--Se a unidade for uma unidade virtual no Tasy, nao enecessario enviar para o ISH.
			if (ish_pat_case_pck.obter_se_sem_acomod(c03_w.cd_setor_atendimento,c03_w.cd_unidade_basica, c03_w.cd_unidade_compl) = 'N') then
				reg_integracao_w.nm_tabela	:= 'ATEND_PACIENTE_UNIDADE';
				intpd_processar_atrib_envio(reg_integracao_w, 'CD_UNIDADE_BASICA', 'room', 'N', c03_w.cd_unidade_basica, 'S', r_inpat_admiss_data_w.room);
				intpd_processar_atrib_envio(reg_integracao_w, 'CD_UNIDADE_COMPL', 'bed', 'N', c03_w.cd_unidade_compl, 'S', r_inpat_admiss_data_w.bed);
			end if;
			nm_leito_integracao_w	:=	null;
			end;
		end;

		if (position(current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10) in nm_leito_integracao_w) > 0) then
			intpd_processar_atrib_envio(reg_integracao_w, 'NM_LEITO_INTEGRACAO', 'bed', 'N', obter_valor_campo_separador(nm_leito_integracao_w,2,current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10)), 'N', r_inpat_admiss_data_w.bed);
		else			
			intpd_processar_atrib_envio(reg_integracao_w, 'NM_LEITO_INTEGRACAO', 'bed', 'N', nm_leito_integracao_w, 'N', r_inpat_admiss_data_w.bed);
		end if;
		
		if (position(current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10) in nm_leito_integracao_w) > 0) then
			r_inpat_admiss_data_w.room 	:= obter_valor_campo_separador(nm_leito_integracao_w,1,current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10));
			
		elsif (somente_numero(r_inpat_admiss_data_w.bed) > 0) then
			r_inpat_admiss_data_w.room 	:= ish_pat_case_pck.get_room_code(r_inpat_admiss_data_w.bed);				
			--r_inpat_admiss_data_w.room	:=	'Z' || somente_numero(r_inpat_admiss_data_w.bed);
		end if;
		
		if	((trunc(c03_w.dt_entrada_unidade) > trunc(clock_timestamp())) and (coalesce(c02_w.dt_chegada_paciente::text, '') = '')) or (obter_se_atendimento_futuro(nr_atendimento_w) = 'S') then
			r_inpat_admiss_data_w.StatusInd	:= 'P';
			r_inpat_admiss_data_w.startdate	:= null;
		else	
			r_inpat_admiss_data_w.StatusInd	:= null;
		end if;
				
		exit;
		end;
	end loop;
	close c03;

	reg_integracao_w.nm_tabela	:= 'ATENDIMENTO_PACIENTE_AUX';

	begin
		select	atendimento_paciente_aux.nr_seq_posicao
		into STRICT	nr_seq_posicao_w
		from	atendimento_paciente_aux
		where	atendimento_paciente_aux.nr_atendimento = nr_atendimento_w;
	exception
	when others then
		nr_seq_posicao_w := null;
	end;

	intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_POSICAO', 'admittdept', 'N', nr_seq_posicao_w, 'N', nr_seq_posicao_return_w);

	if (nr_seq_posicao_return_w IS NOT NULL AND nr_seq_posicao_return_w::text <> '') then
		begin
			select	posicao_sap.cd_external_code
			into STRICT	r_inpat_admiss_data_w.admittdept
			from	posicao_sap
			where	posicao_sap.nr_sequencia = nr_seq_posicao_return_w;
		exception
		when others then
			r_inpat_admiss_data_w.admittdept := null;
		end;
	end if;

	reg_integracao_w.nm_tabela	:= 'EPISODIO_PACIENTE';	
		
	r_inpat_admiss_data_w.specialty		:=	null;
		
	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		reg_integracao_w.nm_tabela		:= 'PESSOA_FISICA';
		intpd_processar_atrib_envio(reg_integracao_w, 'QT_PESO', 'patweight', 'N', c04_w.qt_peso, 'N', qt_peso_w);
		r_inpat_admiss_data_w.patweight	:=	replace(qt_peso_w,',','.');
		--r_inpat_admiss_data_w.weightunit	:= 'kg';
		r_inpat_admiss_data_w.weightunitiso	:= 'KGM'; --OS1956899 
		intpd_processar_atrib_envio(reg_integracao_w, 'QT_ALTURA_CM', 'patheight', 'N', c04_w.qt_altura_cm, 'N', r_inpat_admiss_data_w.patheight);
		--r_inpat_admiss_data_w.heightunit	:= 'cm';
		r_inpat_admiss_data_w.heightunitiso	:= 'CMT'; --OS1956899 
	
		reg_integracao_w.nm_tabela		:= 'PF_MEDICO_EXTERNO';
		
		famphys_medic_w := somente_numero(intpd_conv('TIPO_MEDICO_EXTERNO', 'NR_SEQUENCIA', 'FAMPHYS', nr_seq_regra_w, ie_conversao_w, 'I'));
		famrefphys_medic_w := somente_numero(intpd_conv('TIPO_MEDICO_EXTERNO', 'NR_SEQUENCIA', 'FAMREFPHYS', nr_seq_regra_w, ie_conversao_w, 'I'));
		
		if (c04_w.nr_seq_tipo_medico = famphys_medic_w) or (c04_w.nr_seq_tipo_medico = famrefphys_medic_w) then
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO', 'famphys', 'N', c04_w.cd_medico, 'S', r_inpat_admiss_data_w.famphys);
			exit;
		end if;
		end;
	end loop;
	close c04;
	
	nr_seq_classif_w := intpd_conv('CLASSIF_PESSOA', 'NR_SEQUENCIA', 'RESTRICTED', nr_seq_regra_w, ie_conversao_w, 'I');		
		
	begin
	select	'X'
	into STRICT	r_inpat_admiss_data_w.restricted
	from	pessoa_classif
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica
	and	nr_seq_classif = nr_seq_classif_w
	and	coalesce(dt_final_vigencia::text, '') = ''
	and	dt_inicio_vigencia < clock_timestamp()
	and	coalesce(dt_inativacao::text, '') = ''  LIMIT 1;		
	exception
	when others then
		r_inpat_admiss_data_w.restricted	:=	null;
	end;
	
	begin
	select	*
	into STRICT	cur_ferida_admiss_w
	from	cur_ferida
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica  LIMIT 1;
	exception
	when others then
		null;
	end;	

	reg_integracao_w.nm_tabela	:= 'CUR_FERIDA';
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ALTA_CURATIVO', 'healeddate', 'N', cur_ferida_admiss_w.dt_alta_curativo, 'N', r_inpat_admiss_data_w.healeddate);
	
	reg_integracao_w.nm_tabela	:= 'ATENDIMENTO_PACIENTE';
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_ATENDIMENTO', 'emergcase', 'N', c02_w.ie_tipo_atendimento, 'N', ie_tipo_atendimento_ret_w);

	if (ie_tipo_atendimento_ret_w = 3) then
		r_inpat_admiss_data_w.emergcase	:=	'X';
	end if;
	
	begin
	select	*
	into STRICT	agenda_lista_espera_inpat_ad_w
	from	agenda_lista_espera
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica;
	exception
	when others then
		null;
	end;	
	
	/*21/08/2019 - Segundo Daniel, cliente nao utiliza o processo de waiting list no ISH
	reg_integracao_w.nm_tabela	:= 'AGENDA_LISTA_ESPERA';
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_URGENTE', 'waitlistprio', 'N', agenda_lista_espera_inpat_ad_w.ie_urgente, 'N', r_inpat_admiss_data_w.waitlistprio);	
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_STATUS_ESPERA', 'waitliststatus', 'N', agenda_lista_espera_inpat_ad_w.ie_status_espera, 'N', r_inpat_admiss_data_w.waitliststatus);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_AGENDA', 'waitlisthosp', 'N', agenda_lista_espera_inpat_ad_w.cd_agenda, 'N', r_inpat_admiss_data_w.waitlisthosp);
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_AGENDAMENTO', 'waitlistdeldat', 'N', agenda_lista_espera_inpat_ad_w.dt_agendamento, 'N', dt_geral_w);
	r_inpat_admiss_data_w.waitlistdeldat	:= to_char(to_date(dt_geral_w),'yyyy-mm-dd');*/
	reg_integracao_w.nm_tabela	:= 'ATENDIMENTO_PACIENTE';
	
	select	max(a.ds_valor)
	into STRICT	cd_medico_resp_w
	from	intpd_eventos_valores a,
		intpd_fila_transmissao b
	where	a.nm_elemento	= 'ATENDIMENTO_PACIENTE'
	and	a.nm_atributo	= 'CD_MEDICO_RESP'
	and	a.ie_situacao	= 'A'
	and	a.nr_seq_evento_sistema = b.nr_seq_evento_sistema
	and	b.nr_sequencia = nr_seq_fila_p;
	
	if (c02_w.cd_medico_resp = cd_medico_resp_w) then
		r_inpat_admiss_data_w.attphys	:= null;
	else	
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_MEDICO_RESP', 'attphys', 'N', c02_w.cd_medico_resp, 'ISHMED', r_inpat_admiss_data_w.attphys);
	end if;
	
	begin
	select	*
	into STRICT	pessoa_fisica_inpat_ad_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = c01_w.cd_pessoa_fisica;
	exception
	when others then
		null;
	end;
	
	reg_integracao_w.nm_tabela	:= 'PESSOA_FISICA';
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_SISTEMA_ANT', 'plsno', 'N', pessoa_fisica_inpat_ad_w.cd_sistema_ant, 'N', r_inpat_admiss_data_w.plsno);

	begin
	select	nm_fantasia
	into STRICT	nm_fantasia_ad_w
	from	pessoa_juridica
	where	cd_cgc = c02_w.cd_cgc_indicacao;
	exception
	when others then
		nm_fantasia_ad_w	:=	null;
	end;	
	
	reg_integracao_w.nm_tabela	:= 'PESSOA_JURIDICA';
	intpd_processar_atrib_envio(reg_integracao_w, 'NM_FANTASIA', 'refhospitalname2', 'N', nm_fantasia_ad_w, 'N', r_inpat_admiss_data_w.refhospitalname2);
	intpd_processar_atrib_envio(reg_integracao_w, 'NM_FANTASIA', 'refhospitalname3', 'N', nm_fantasia_ad_w, 'N', r_inpat_admiss_data_w.refhospitalname3);

	reg_integracao_w.nm_tabela	:= 'PEP_PAC_CI';

	begin
	select  dt_atualizacao_nrec,
		ie_controla_alta
	into STRICT    dt_atualizacao_nrec_w,
		ie_controla_alta_w
	from (SELECT	*
		from	pep_pac_ci
		where	nr_atendimento = nr_atendimento_w
		and	ie_situacao = 'A'
		order by  nr_sequencia desc) alias0 LIMIT 1;
	exception
	when others then
		dt_atualizacao_nrec_w := null;
		ie_controla_alta_w := null;
	end;

	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO_NREC', 'disconsdat', 'N', dt_atualizacao_nrec_w, 'N', dt_geral_w);
	r_inpat_admiss_data_w.disconsdat  := to_char(to_date(dt_geral_w),'YYYY-MM-DD');
	dt_geral_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_CONTROLA_ALTA', 'disconsent', 'N', ie_controla_alta_w, 'N', r_inpat_admiss_data_w.disconsent);

	if (coalesce(r_inpat_admiss_data_w.disconsent,'NULL') = 'S') then
		r_inpat_admiss_data_w.disconsent := 'X';
	else
		r_inpat_admiss_data_w.disconsent := null;
	end if;

	reg_integracao_w.nm_tabela	:= 'ATEND_CATEGORIA_CONV';
	
	begin
	select  'X'
	into STRICT	r_inpat_admiss_data_w.pirconsent
	from  	atendimento_paciente a,
		atend_categoria_convenio b,
		convenio c
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.cd_convenio		= c.cd_convenio
	/*and	c.ie_tipo_convenio	= 2	--SO 2157727 We should not have the restriction for public or private. When checked, we should send it*/

	and	a.nr_seq_episodio	= c01_w.nr_sequencia
	and	b.ie_autoriza_envio_convenio = 'S'  LIMIT 1;
	exception
	when others then
		r_inpat_admiss_data_w.pirconsent	:= null;
	end;
	
--	r_inpat_admiss_data_w.foreigncase	:=
--	r_inpat_admiss_data_w.nonresident	:=
--	r_inpat_admiss_data_w.geograrea	:=
--	r_inpat_admiss_data_w.caseendtype	:=
--	r_inpat_admiss_data_w.billblock	:=
--	r_inpat_admiss_data_w.statstcblock	:=
--	r_inpat_admiss_data_w.pparelev	:=
--	r_inpat_admiss_data_w.recorder	:=
--	r_inpat_admiss_data_w.previousdays	:=
--	r_inpat_admiss_data_w.children	:=
--	r_inpat_admiss_data_w.employeetype	:=
--	r_inpat_admiss_data_w.cantontariff	:=
--	r_inpat_admiss_data_w.cantonconvtn	:=
--	r_inpat_admiss_data_w.applstatus	:=
--	r_inpat_admiss_data_w.phoneno	:=
--	r_inpat_admiss_data_w.tv		:=
--	r_inpat_admiss_data_w.accidentemstyp	:=
--	r_inpat_admiss_data_w.accidentemsvce	:=
--	r_inpat_admiss_data_w.accident3rdpty	:=
--	r_inpat_admiss_data_w.latestadm	:=
--	r_inpat_admiss_data_w.department	:=
--	r_inpat_admiss_data_w.roomstatusind	:=	
--	r_inpat_admiss_data_w.class	:=
--	r_inpat_admiss_data_w.waitlistprio	:=
--	r_inpat_admiss_data_w.waitlisttype	:=
--	r_inpat_admiss_data_w.waitliststatus	:=
--	r_inpat_admiss_data_w.waitlisthosp	:=
--	r_inpat_admiss_data_w.waitlistinclon	:=
--	r_inpat_admiss_data_w.waitlistdeldat	:=
--	r_inpat_admiss_data_w.waitlistdelreas	:=
--	r_inpat_admiss_data_w.doctype	:=
--	r_inpat_admiss_data_w.docno	:=
--	r_inpat_admiss_data_w.choicecl	:=
--	r_inpat_admiss_data_w.treatcode	:=
--	r_inpat_admiss_data_w.specialtyadmission	:=
--	r_inpat_admiss_data_w.respiration	:=
--	r_inpat_admiss_data_w.extmovementid	:=
--	r_inpat_admiss_data_w.nobilldays	:=
--	r_inpat_admiss_data_w.plsno	:=
--	r_inpat_admiss_data_w.invoicecopy	:=
--	r_inpat_admiss_data_w.attphyslanr	:=
--	r_inpat_admiss_data_w.refhospitalname2	:=
--	r_inpat_admiss_data_w.refhospitalname3	:=
--	r_inpat_admiss_data_w.mentalhealthlegalstatus	:=
--	r_inpat_admiss_data_w.postdisphys	:=
--	r_inpat_admiss_data_w.readmission	:=
--	r_inpat_admiss_data_w.weeksatdelivery	:=
--	r_inpat_admiss_data_w.occdisease	:=
	end;
end loop;
close c01;

RETURN NEXT r_inpat_admiss_data_w;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_pat_case_pck.get_inpat_admiss_data ( nr_seq_fila_p bigint) FROM PUBLIC;
