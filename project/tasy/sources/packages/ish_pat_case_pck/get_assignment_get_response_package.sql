-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_pat_case_pck.get_assignment_get_response ( nr_sequencia_p bigint) AS $body$
DECLARE

		
nr_seq_regra_w		intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w		intpd_eventos_sistema.ie_conversao%type;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w	intpd_eventos_sistema.nr_seq_projeto_xml%type;

nr_seq_doc_origem_w	intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_agrupador_w	intpd_fila_transmissao.nr_seq_agrupador%type;
ds_xml_w			text;
xml_w			xml;

onffz_w 		xml;

dt_atualizacao_nrec_w	timestamp;
dt_atualizacao_w		timestamp;
nm_usuario_nrec_w		usuario.nm_usuario%type;
nm_usuario_w			usuario.nm_usuario%type;
nr_seq_episodio_princ_w		episodio_paciente.nr_sequencia%type;
nr_seq_episodio_sec_w		episodio_paciente.nr_sequencia%type;
cd_pessoa_acompanhante_w	episodio_paciente.cd_pessoa_fisica%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_case_princ_w			varchar(10);
nr_case_sec_w			varchar(10);
atendimento_acompanhante_w	atendimento_acompanhante%rowtype;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;

ds_erro_w		varchar(2000);

c01 CURSOR FOR
SELECT	*
from	xmltable('/ONffz/item' passing onffz_w columns
	mandt	varchar(3)	path	'Mandt',
	einri	varchar(4)	path	'Einri',
	faln1	varchar(10)	path	'Faln1',
	faln2	varchar(10)	path	'Faln2',
	enddt	varchar(10)	path	'Enddt',
	begdt	varchar(10)	path	'Begdt',
	refa1	varchar(1)	path	'Refa1',
	refa2	varchar(1)	path	'Refa2',
	kztxt	varchar(50)	path	'Kztxt',
	lgtxt	varchar(1)	path	'Lgtxt',
	storn	varchar(1)	path	'Storn',
	stusr	varchar(12)	path	'Stusr',
	stdat	varchar(10)	path	'Stdat',
	erdat	varchar(10)	path	'Erdat',
	erusr	varchar(12)	path	'Erusr',
	updat	varchar(10)	path	'Updat',
	upusr	varchar(12)	path	'Upusr'
	);

c01_w	c01%rowtype;	

ie_status_w			intpd_fila_transmissao.ie_status%type		:=	'S';
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type	:=	'F';
ie_evento_w			intpd_fila_transmissao.ie_evento%type;


BEGIN
intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_w);

begin
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_sistema,
	b.nr_seq_projeto_xml,
	b.nr_seq_regra_conv,
	a.ds_xml_retorno,
	a.ie_evento,
	a.nr_seq_agrupador
into STRICT	nr_seq_doc_origem_w,
	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w,
	ds_xml_w,
	ie_evento_w,
	nr_seq_agrupador_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		ie_response_procedure = 'S'
	where	nr_sequencia = nr_sequencia_p;
else
	begin
	select	a.onffz
	into STRICT	onffz_w
	from	xmltable(
			xmlnamespaces(
			'urn:sap-com:document:sap:soap:functions:mc-style' as "n0",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soap-env"),
			'soap-env:Envelope/soap-env:Body/n0:_-rzvish_-assignmentGetResponse' passing xml_w columns
		onffz xmltype path 'ONffz') a;

	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		CALL ish_lock_fila(ie_evento_w, c01_w.faln1);
		CALL ish_lock_fila(ie_evento_w, c01_w.faln2);
		
		/*Identifica qual e o case principal e o secundario, para fazer a relacao entre eles.*/

		if (c01_w.refa1 = 'P') then
			nr_case_princ_w	:= c01_w.faln1;
			nr_case_sec_w	:= lpad(c01_w.faln2,10,'0');			
		else
			nr_case_princ_w	:= c01_w.faln2;
			nr_case_sec_w	:= lpad(c01_w.faln1,10,'0');
		end if;		
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_episodio_princ_w
		from	episodio_paciente
		where	nr_episodio = nr_case_princ_w;
		
		--OS 1986199, como agora nao sera mais criado o case do acompanhante no Tasy, buscamos o codigo da PF da HCM_FALL com base no numero do case.
		begin
		select	a.cd_pessoa_fisica
		into STRICT	cd_pessoa_acompanhante_w
		from	pf_codigo_externo a,
			hcm_fall b
		where	a.cd_pessoa_fisica_externo = b.casepatno
		and	a.ie_tipo_codigo_externo = 'ISH'
		and	b.caseno = nr_case_sec_w  LIMIT 1;
		exception
		when others then
			cd_pessoa_acompanhante_w := null;
		end;
		
		/*select	max(nr_sequencia)
		into	nr_seq_episodio_sec_w
		from	episodio_paciente
		where	nr_episodio = nr_case_sec_w;*/
		
		if (nr_seq_episodio_princ_w IS NOT NULL AND nr_seq_episodio_princ_w::text <> '') and (cd_pessoa_acompanhante_w IS NOT NULL AND cd_pessoa_acompanhante_w::text <> '') then
		
			/*select	max(cd_pessoa_fisica)
			into	cd_pessoa_acompanhante_w
			from	episodio_paciente
			where	nr_sequencia	= nr_seq_episodio_sec_w;*/
			
			if (cd_pessoa_acompanhante_w IS NOT NULL AND cd_pessoa_acompanhante_w::text <> '') then
				--Busca o atendimento atual do case principal
				nr_atendimento_w := ish_get_encounter_case( coalesce(nr_case_princ_w, nr_seq_episodio_princ_w), 'INPAT');
				
				if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
				
					nr_seq_interno_w	:= Obter_Atepacu_paciente(nr_atendimento_w,'A');
					
					reg_integracao_w.nm_tabela 	:= 'ATENDIMENTO_ACOMPANHANTE';
					intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TIPO', c01_w.refa2, 'S', atendimento_acompanhante_w.nr_seq_tipo);
					
					atendimento_acompanhante_w.nr_atendimento	:= nr_atendimento_w;
					atendimento_acompanhante_w.dt_acompanhante	:= coalesce(to_date(c01_w.begdt,'yyyy-mm-dd'),clock_timestamp());					
					atendimento_acompanhante_w.nr_acompanhante	:= 1;
					atendimento_acompanhante_w.dt_atualizacao	:= clock_timestamp();
					intpd_processar_atributo(reg_integracao_w,'NM_USUARIO',coalesce(c01_w.upusr,c01_w.erusr),'N',atendimento_acompanhante_w.nm_usuario);
					atendimento_acompanhante_w.nm_acompanhante	:= substr(obter_nome_pf(cd_pessoa_acompanhante_w),1,40);
					atendimento_acompanhante_w.cd_pessoa_fisica	:= cd_pessoa_acompanhante_w;
					atendimento_acompanhante_w.ie_alojamento	:= 'S';
					atendimento_acompanhante_w.nr_seq_interno	:= nr_seq_interno_w;
					
					if (reg_integracao_w.qt_reg_log = 0) then	
						update	atendimento_acompanhante
						set	row = atendimento_acompanhante_w
						where	nr_atendimento = atendimento_acompanhante_w.nr_atendimento
						and	dt_acompanhante = atendimento_acompanhante_w.dt_acompanhante;
						
						if (NOT FOUND) then
							insert into atendimento_acompanhante values (atendimento_acompanhante_w.*);
						end if;
						
						update	atendimento_paciente
						set	cd_pessoa_responsavel	= cd_pessoa_acompanhante_w
						where	nr_atendimento		= nr_atendimento_w;
					end if;
				end if;
			end if;
		
		elsif (coalesce(nr_seq_episodio_princ_w::text, '') = '') then
		
			--Nao foi localizado case no Tasy para o valor recebido.
			--Valor externo: #@DS_VALOR#@			
			reg_integracao_w.intpd_log_receb[reg_integracao_w.qt_reg_log].ds_log	:=	substr(	wheb_mensagem_pck.get_texto(1040672,'DS_VALOR='||nr_case_princ_w),1,4000);
			reg_integracao_w.qt_reg_log	:=	reg_integracao_w.qt_reg_log + 1;
		
		elsif (coalesce(cd_pessoa_acompanhante_w::text, '') = '') then
			--Nao foi localizado case no Tasy para o valor recebido.
			--Valor externo: #@DS_VALOR#@			
			reg_integracao_w.intpd_log_receb[reg_integracao_w.qt_reg_log].ds_log	:=	substr(	wheb_mensagem_pck.get_texto(1040672,'DS_VALOR='||' patno:'|| cd_pessoa_acompanhante_w ),1,4000);
			reg_integracao_w.qt_reg_log	:=	reg_integracao_w.qt_reg_log + 1;
		end if;

		/*
		select	max(nr_sequencia)
		into	nr_seq_episodio_dest_w
		from	episodio_paciente
		where	nr_episodio = c01_w.faln1;
		
		select	max(nr_sequencia)
		into	nr_seq_episodio_orig_w
		from	episodio_paciente
		where	nr_episodio = c01_w.faln2;
		
		if	(nr_seq_episodio_orig_w is not null) and (nr_seq_episodio_dest_w is not null) then
			begin
			insere_itens_unir_episodio(nr_seq_episodio_orig_w, nr_seq_episodio_dest_w);
			unir_episodio(nr_seq_episodio_dest_w);
			end;
		end if;*/
		end;
	end loop;
	close c01;
	
	if (reg_integracao_w.qt_reg_log > 0) then
		begin
			
		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ds_log = ds_erro_w,
			ie_response_procedure = 'S'
		where	nr_sequencia = nr_sequencia_p;		
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			nr_doc_externo = nr_seq_episodio_princ_w,
			ie_response_procedure = 'S'
		where	nr_sequencia = nr_sequencia_p;	
	end if;
	
	reg_integracao_w := gerar_int_padrao.gravar_log(reg_integracao_w);
	exception
	when others then
		begin
		ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,2000);
		
		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ds_log = ds_erro_w,
			ie_response_procedure = 'S'
		where	nr_sequencia = nr_sequencia_p;
		end;
	end;	
end if;

if (nr_seq_agrupador_w > 0) then
	CALL intpd_processar_fila_trans(null, 'S', nr_seq_agrupador_w);
end if;
	
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_pat_case_pck.get_assignment_get_response ( nr_sequencia_p bigint) FROM PUBLIC;
