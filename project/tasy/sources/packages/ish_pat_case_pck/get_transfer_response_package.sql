-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_pat_case_pck.get_transfer_response ( nr_sequencia_p bigint) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;

nr_seq_doc_origem_w		intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_agrupador_w		intpd_fila_transmissao.nr_seq_agrupador%type;
ds_xml_w				text;
xml_w				xml;
inpattransferdata_w 		xml;

ds_erro_w			varchar(2000);

c01 CURSOR FOR
SELECT	*
from	xmltable('/InpatTransferData' passing inpattransferdata_w columns
--	client		varchar2(3)	path	'Client',
	institution		varchar(4)	path	'Institution',
	inststext		varchar(15)	path	'InstStext',
	patcaseid		varchar(10)	path	'Patcaseid',
--	chkdigitcase	varchar2(1)	path	'Chkdigitcase',
	casetype		varchar(1)	path	'Casetype',
	casetypeext	varchar(1)	path	'CasetypeExt',
	casetypestext	varchar(14)	path	'CasetypeStext',
	patientid		varchar(10)	path	'Patientid',
--	billingstatus	varchar2(1)	path	'BillingStatus',
--	billstext		varchar2(60)	path	'BillStext',
	restricted		varchar(1)	path	'Restricted',
--	geograrea	varchar2(9)	path	'GeogrArea',
--	geograreatext	varchar2(40)	path	'GeogrAreaText',
--	casecomment	varchar2(30)	path	'CaseComment',
	casestatus	varchar(1)	path	'CaseStatus',
	casestatstext	varchar(60)	path	'CaseStatStext',
	emergadm	varchar(1)	path	'EmergAdm',
--	quickadm		varchar2(1)	path	'QuickAdm',
	startdate		varchar(10)	path	'StartDate',
	enddate		varchar(10)	path	'EndDate',
--	billblock		varchar2(1)	path	'BillBlock',
--	billblockstext	varchar2(60)	path	'BillBlockStext',
--	prevtreatdays	varchar2(3)	path	'Prevtreatdays',
--	statstcblock	varchar2(1)	path	'StatstcBlock',
--	pparelev		varchar2(1)	path	'PpaRelev',
--	recorder		varchar2(12)	path	'RecOrder',
--	previousdays	varchar2(3)	path	'PreviousDays',
--	objectno		varchar2(22)	path	'ObjectNo',
--	nonresident	varchar2(1)	path	'NonResident',
--	children		varchar2(2)	path	'Children',
--	foreigncase	varchar2(1)	path	'ForeignCase',
	casecategory	varchar(2)	path	'CaseCategory',
	casecategorystext	varchar(25)	path	'CaseCategoryStext',
--	employeetype	varchar2(2)	path	'EmployeeType',
--	employeetypestext	varchar2(20)	path	'EmployeeTypeStext',
--	cantontariff	varchar2(3)	path	'CantonTariff',
--	cantontariffstext	varchar2(25)	path	'CantonTariffStext',
--	cantonconvtn	varchar2(3)	path	'CantonConvtn',
--	cantonconvtnstext	varchar2(25)	path	'CantonConvtnStext',
--	srvgento		varchar2(10)	path	'SrvGenTo',
	healeddate	varchar(10)	path	'HealedDate',
--	applstatus	varchar2(2)	path	'Applstatus',
--	applstatusstext	varchar2(40)	path	'ApplstatusStext',
	specialty		varchar(4)	path	'Specialty',
	specialtystext	varchar(30)	path	'SpecialtyStext',
--	caseendtype	varchar2(2)	path	'Caseendtype',
--	caseendtypestext	varchar2(25)	path	'CaseendtypeStext',
--	doctype		varchar2(2)	path	'DocType',
--	doctypetext	varchar2(15)	path	'DocTypeText',
--	docno		varchar2(30)	path	'DocNo',
--	choicecl		varchar2(1)	path	'ChoiceCl',
--	choicecltext	varchar2(25)	path	'ChoiceClText',
	patweight		varchar(7)	path	'PatWeight',
--	weightunit	varchar2(3)	path	'WeightUnit',
--	weightunitiso	varchar2(3)	path	'WeightUnitIso',
	patheight		varchar(5)	path	'PatHeight',
--	heightunit		varchar2(3)	path	'HeightUnit',
--	heightunitiso	varchar2(3)	path	'HeightUnitIso',
	movemntseqno	varchar(5)	path	'MovemntSeqno',
	movemntctgry	varchar(1)	path	'MovemntCtgry',
	movemntctgrytext	varchar(15)	path	'MovemntCtgryText',
	movemnttype	varchar(2)	path	'MovemntType',
--	movemnttypetext	varchar2(15)	path	'MovemntTypeText',
	movemntdate	varchar(10)	path	'MovemntDate',
	movemnttime	varchar(8)	path	'MovemntTime',
--	statusind		varchar2(1)	path	'StatusInd',
--	statusindtext	varchar2(60)	path	'StatusIndText',
	movemntenddate	varchar(10)	path	'MovemntEnddate',
	movemntendtime	varchar(8)	path	'MovemntEndtime',
	treatmcategory	varchar(6)	path	'Treatmcategory',
	treatmctgrystext	varchar(15)	path	'TreatmctgryStext',
	treatmctgrytext	varchar(30)	path	'TreatmctgryText',
--	class		varchar2(4)	path	'Class',
--	classstext		varchar2(15)	path	'ClassStext',
--	classtext		varchar2(30)	path	'ClassText',
--	movemntspec	varchar2(4)	path	'MovemntSpec',
--	movemntspecstext	varchar2(30)	path	'MovemntSpecStext',
	department	varchar(8)	path	'Department',
	departmentstext	varchar(12)	path	'DepartmentStext',
	nurstreatou	varchar(8)	path	'NursTreatOu',
	nurstreatoustext	varchar(12)	path	'NursTreatOuStext',
	room		varchar(8)	path	'Room',
	roomidentifier	varchar(8)	path	'RoomIdentifier',
	bed		varchar(8)	path	'Bed',
	bedidentifier	varchar(8)	path	'BedIdentifier',
	roomstatusind	varchar(1)	path	'RoomStatusInd',
	roomstatusindtext	varchar(60)	path	'RoomStatusIndText',
--	phoneno		varchar2(16)	path	'Phoneno',
--	tv		varchar2(1)	path	'Tv',
	creationdate	varchar(10)	path	'CreationDate',
	creationuser	varchar(12)	path	'CreationUser',
	updatedate	varchar(10)	path	'UpdateDate',
	updateuser	varchar(12)	path	'UpdateUser',
	cancelind	varchar(1)	path	'CancelInd',
	canceldate	varchar(10)	path	'CancelDate',
	canceluser	varchar(12)	path	'CancelUser',
	cancelreason	varchar(3)	path	'CancelReason',
	cancelreasontext	varchar(15)	path	'CancelReasonText',
	creationtime	varchar(8)	path	'CreationTime',
--	respiration	varchar2(5)	path	'Respiration',
	extcaseid		varchar(20)	path	'ExtCaseId',
	extmovementid	varchar(20)	path	'ExtMovementId',
	attphys		varchar(10)	path	'AttPhys'
--	nobilldays		varchar2(3)	path	'NobillDays',
--	attphyslanr	varchar2(9)	path	'AttPhysLanr',
	);
	
c01_w	c01%rowtype;

ie_status_w			intpd_fila_transmissao.ie_status%type		:=	'S';
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type	:=	'F';
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;
ie_evento_w			intpd_fila_transmissao.ie_evento%type;


BEGIN
intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_w);

begin
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_sistema,
	b.nr_seq_projeto_xml,
	b.nr_seq_regra_conv,
	a.ds_xml_retorno,
	a.ie_evento,
	a.nr_seq_agrupador
into STRICT	nr_seq_doc_origem_w,
	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w,
	ds_xml_w,
	ie_evento_w,
	nr_seq_agrupador_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		ie_response_procedure = 'S'
	where	nr_sequencia = nr_sequencia_p;
else
	begin
	select	a.inpattransferdata
	into STRICT	inpattransferdata_w
	from	xmltable(
			xmlnamespaces(
			'urn:sap-com:document:sap:soap:functions:mc-style' as "n0",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
		'soapenv:Envelope/soapenv:Body//n0:PatcaseGettransferResponse' passing xml_w columns
		inpattransferdata xmltype path 'InpatTransferData') a;	
		
	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (substr(coalesce(ish_obter_se_reg_alterado(nr_sequencia_p, c01_w.creationuser, c01_w.updateuser, c01_w.canceluser),'S'),1,1) = 'S') then
			CALL ish_lock_fila(ie_evento_w, c01_w.patcaseid);
			
			SELECT * FROM ish_pat_case_pck.ish_receber_atend_pac_unidade(
				reg_integracao_w, nr_seq_regra_w, ie_conversao_w, nr_seq_interno_w, c01_w.creationdate, c01_w.creationtime, c01_w.creationuser, c01_w.updatedate, c01_w.updateuser, c01_w.patcaseid, c01_w.CancelInd, c01_w.canceldate, c01_w.canceluser, c01_w.movemntseqno, c01_w.movemntdate, c01_w.movemnttime, c01_w.movemntenddate, c01_w.movemntendtime, c01_w.nurstreatou, c01_w.bed, c01_w.room, c01_w.department, null /*c01_w.movemntcomment*/
, c01_w.MovemntCtgry, c01_w.MovemntType, null, c01_w.treatmcategory, c01_w.casetype) INTO STRICT _ora2pg_r;

				reg_integracao_w := _ora2pg_r.reg_integracao_p; nr_seq_interno_w := _ora2pg_r.nr_seq_interno_p;
		end if;
		end;
	end loop;
	close c01;	

	if (reg_integracao_w.qt_reg_log > 0) then
		begin	
		/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'S',
			ds_log  = NULL
		where	nr_sequencia = nr_sequencia_p;
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			ie_response_procedure = 'S',
			nr_doc_externo = nr_seq_interno_w
		where	nr_sequencia = nr_sequencia_p;
	end if;
	
	reg_integracao_w := gerar_int_padrao.gravar_log(reg_integracao_w);
	exception
	when others then
		begin
		ds_erro_w	:=	substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,2000);
		
		rollback;	
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'S',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;
		end;
	end;
end if;

if (nr_seq_agrupador_w > 0) then
	CALL intpd_processar_fila_trans(null, 'S', nr_seq_agrupador_w);
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_pat_case_pck.get_transfer_response ( nr_sequencia_p bigint) FROM PUBLIC;
