-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- response
CREATE OR REPLACE PROCEDURE ish_pat_case_pck.get_discharge_response (nr_sequencia_p bigint) AS $body$
DECLARE


nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;

nr_seq_doc_origem_w		intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_agrupador_w		intpd_fila_transmissao.nr_seq_agrupador%type;
ds_xml_w				text;
xml_w				xml;
inpatdischargedata_w 		xml;

episodio_paciente_w		episodio_paciente%rowtype;
atendimento_paciente_w		atendimento_paciente%rowtype;

cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_atendimento_w			atendimento_paciente.nr_atendimento%type;

dt_alta_w				timestamp;
cd_motivo_alta_w			motivo_alta.cd_motivo_alta%type;
nm_usuario_w			usuario.nm_usuario%type;
ds_erro_w			varchar(2000);

cd_cgc_w			atendimento_paciente.cd_cgc_indicacao%type;

c01 CURSOR FOR
	SELECT	*
	from	xmltable('/InpatDischargeData' passing inpatdischargedata_w columns
		--client		number(3)		path		'Client',
		institution		varchar(4)		path		'Institution',
		--inststext		varchar2(15)		path		'InstStext',
		patcaseid		varchar(10)		path		'Patcaseid',
		--chkdigitcase		varchar2(1)		path		'Chkdigitcase',
		casetype		varchar(1)		path		'Casetype',
		casetypeext		varchar(1)		path		'CasetypeExt',
		--casetypestext		varchar2(14)		path		'CasetypeStext',
		patientid		varchar(10)		path		'Patientid',
		--billingstatus		varchar2(1)		path		'BillingStatus',
		--billstext		varchar2(60)		path		'BillStext',
		restricted		varchar(1)		path		'Restricted',
		--geograrea		varchar2(9)		path		'GeogrArea',
		--geograreatext		varchar2(40)		path		'GeogrAreaText',
		casecomment		varchar(30)		path		'CaseComment',
		casestatus		varchar(1)		path		'CaseStatus',
		casestatstext		varchar(60)		path		'CaseStatStext',
		--emergadm		varchar2(1)		path		'EmergAdm',
		--quickadm		varchar2(1)		path		'QuickAdm',
		startdate		varchar(10)		path		'StartDate',
		enddate			varchar(10)		path		'EndDate',
		--billblock		varchar2(1)		path		'BillBlock',
		--billblockstext	varchar2(60)		path		'BillBlockStext',
		--prevtreatdays		number(3)		path		'Prevtreatdays',
		--statstcblock		varchar2(1)		path		'StatstcBlock',
		--pparelev		varchar2(1)		path		'PpaRelev',
		--recorder		varchar2(12)		path		'RecOrder',
		--previousdays		number(3)		path		'PreviousDays',
		--objectno		varchar2(22)		path		'ObjectNo',
		--nonresident		varchar2(1)		path		'NonResident',
		--children		varchar2(2)		path		'Children',
		--foreigncase		varchar2(1)		path		'ForeignCase',
		casecategory		varchar(2)		path		'CaseCategory',
		casecategorystext	varchar(25)		path		'CaseCategoryStext',
		--employeetype		varchar2(2)		path		'EmployeeType',
		--employeetypestext	varchar2(20)		path		'EmployeeTypeStext',
		--cantontariff		varchar2(3)		path		'CantonTariff',
		--cantontariffstext	varchar2(25)		path		'CantonTariffStext',
		--cantonconvtn		varchar2(3)		path		'CantonConvtn',
		--cantonconvtnstext	varchar2(25)		path		'CantonConvtnStext',
		--srvgento		date			path		'SrvGenTo',
		--healeddate		date			path		'HealedDate',
		--applstatus		varchar2(2)		path		'Applstatus',
		--applstatusstext	varchar2(40)		path		'ApplstatusStext',
		specialty		varchar(4)		path		'Specialty',
		specialtystext		varchar(30)		path		'SpecialtyStext',
		--caseendtype		varchar2(2)		path		'Caseendtype',
		--caseendtypestext	varchar2(25)		path		'CaseendtypeStext',
		--doctype		varchar2(2)		path		'DocType',
		--doctypetext		varchar2(15)		path		'DocTypeText',
		--docno			varchar2(30)		path		'DocNo',
		--choicecl		varchar2(1)		path		'ChoiceCl',
		--choicecltext		varchar2(25)		path		'ChoiceClText',
		patweight		varchar(7)		path		'PatWeight',
		--weightunit		varchar2(3)		path		'WeightUnit',
		--weightunitiso		varchar2(3)		path		'WeightUnitIso',
		patheight		varchar(5)		path		'PatHeight',
		--heightunit		varchar2(3)		path		'HeightUnit',
		--heightunitiso		varchar2(3)		path		'HeightUnitIso',
		movemntseqno		integer		path		'MovemntSeqno',
		movemntctgry		varchar(1)		path		'MovemntCtgry',
		movemntctgrytext	varchar(15)		path		'MovemntCtgryText',
		movemnttype		varchar(2)		path		'MovemntType',
		--movemnttypetext	varchar2(15)		path		'MovemntTypeText',
		movemntdate		varchar(10)		path		'MovemntDate',
		movemnttime		varchar(10)		path		'MovemntTime',
		movemntreas1		varchar(2)		path		'MovemntReas1',
		movemntreas1text	varchar(15)		path		'MovemntReas1Text',
		--movemntreas2		varchar2(2)		path		'MovemntReas2',
		--movemntreas2text	varchar2(15)		path		'MovemntReas2Text',
		statusind		varchar(1)		path		'StatusInd',
		statusindtext		varchar(60)		path		'StatusIndText',
		refpsttrttype		varchar(2)		path		'RefPsttrtType',
		refpsttrttypetext	varchar(15)		path		'RefPsttrtTypeText',
		refhospital		varchar(10)		path		'RefHospital',	
		--dischrgdisp		varchar2(2)		path		'DischrgDisp',
		--dischrgdisptext	varchar2(15)		path		'DischrgDispText',
		--workincapacity	date			path		'WorkIncapacity',
		--creationdate		date			path		'CreationDate',
		creationuser		varchar(12)		path		'CreationUser',
		--updatedate		date			path		'UpdateDate',
		updateuser		varchar(12)		path		'UpdateUser',
		cancelind		varchar(1)		path		'CancelInd',
		canceldate		varchar(10)			path		'CancelDate',
		canceluser		varchar(12)		path		'CancelUser'
		--cancelreason		varchar2(3)		path		'CancelReason',
		--cancelreasontext	varchar2(15)		path		'CancelReasonText',
		--creationtime		date			path		'CreationTime',
		--respiration		number(5)		path		'Respiration',
		--extcaseid		varchar2(20)		path		'ExtCaseId',
		--extmovementid		varchar2(20)		path		'ExtMovementId',
		--postdisphys		varchar2(10)		path		'PostDisPhys',
		--disphys		varchar2(10)		path		'DisPhys',
		--nobilldays		number(3)		path		'NobillDays',
		)
	where	length(startdate) > 0
	
union all

	SELECT	*
	from	xmltable('/InpatDischargeData' passing inpatdischargedata_w columns
		--client		number(3)		path		'CLIENT',
		institution		varchar(4)		path		'INSTITUTION',
		--inststext		varchar2(15)		path		'INSTS_TEXT',
		patcaseid		varchar(10)		path		'PAT_CASE_ID',
		--chkdigitcase		varchar2(1)		path		'CHK_DIGIT_CASE',
		casetype		varchar(1)		path		'CASE_TYPE',
		casetypeext		varchar(1)		path		'CASE_TYPE_EXT',
		--casetypestext		varchar2(14)		path		'CASE_TYPE_STEXT',
		patientid		varchar(10)		path		'PATIENT_ID',
		--billingstatus		varchar2(1)		path		'BILLING_STATUS',
		--billstext		varchar2(60)		path		'BILL_STEXT',
		restricted		varchar(1)		path		'RESTRICTED',
		--geograrea		varchar2(9)		path		'GEOGR_AREA',
		--geograreatext		varchar2(40)		path		'GEOGR_AREATEXT',
		casecomment		varchar(30)		path		'CASE_COMMENT',
		casestatus		varchar(1)		path		'CASE_STATUS',
		casestatstext		varchar(60)		path		'CASE_STAT_STEXT',
		--emergadm		varchar2(1)		path		'EMER_GADM',
		--quickadm		varchar2(1)		path		'QUICK_ADM',
		startdate		varchar(10)		path		'START_DATE',
		enddate			varchar(10)		path		'END_DATE',
		--billblock		varchar2(1)		path		'BILL_BLOCK',
		--billblockstext	varchar2(60)		path		'BILL_BLOCK_STEXT',
		--prevtreatdays		number(3)		path		'PREV_TREAT_DAYS',
		--statstcblock		varchar2(1)		path		'STATSTC_BLOCK',
		--pparelev		varchar2(1)		path		'PPARELEV',
		--recorder		varchar2(12)		path		'RECORDER',
		--previousdays		number(3)		path		'PREVIOUS_DAYS',
		--objectno		varchar2(22)		path		'OBJECT_NO',
		--nonresident		varchar2(1)		path		'NON_RESIDENT',
		--children		varchar2(2)		path		'CHILDREN',
		--foreigncase		varchar2(1)		path		'FOREIGN_CASE',
		casecategory		varchar(2)		path		'CASE_CATEGORY',
		casecategorystext	varchar(25)		path		'CASE_CATEGORY_STEXT',
		--employeetype		varchar2(2)		path		'EMPLOYEETYPE',
		--employeetypestext	varchar2(20)		path		'EMPLOYEETYPE_STEXT',
		--cantontariff		varchar2(3)		path		'CANTON_TARIFF',
		--cantontariffstext	varchar2(25)		path		'CANTON_TARIFFSTEXT',
		--cantonconvtn		varchar2(3)		path		'CANTON_CONVTN',
		--cantonconvtnstext	varchar2(25)		path		'CANTON_CONVTNSTEXT',
		--srvgento		date			path		'SRVGENTO',
		--healeddate		date			path		'HEALED_DATE',
		--applstatus		varchar2(2)		path		'APPL_STATUS',
		--applstatusstext	varchar2(40)		path		'APPL_STATUS_STEXT',
		specialty		varchar(4)		path		'SPECIALTY',
		specialtystext		varchar(30)		path		'SPECIALTY_STEXT',
		--caseendtype		varchar2(2)		path		'CASE_END_TYPE',
		--caseendtypestext	varchar2(25)		path		'CASE_END_TYPE_STEXT',
		--doctype		varchar2(2)		path		'DOC_TYPE',
		--doctypetext		varchar2(15)		path		'DOC_TYPE_TEXT',
		--docno			varchar2(30)		path		'DOC_NO',
		--choicecl		varchar2(1)		path		'CHOICE_CL',
		--choicecltext		varchar2(25)		path		'CHOICE_CL_TEXT',
		patweight		varchar(7)		path		'PAT_WEIGHT',
		--weightunit		varchar2(3)		path		'WEIGHT_UNIT',
		--weightunitiso		varchar2(3)		path		'WEIGHT_UNIT_ISO',
		patheight		varchar(5)		path		'PAT_HEIGHT',
		--heightunit		varchar2(3)		path		'HEIGHT_UNIT',
		--heightunitiso		varchar2(3)		path		'HEIGHT_UNIT_ISO',
		movemntseqno		integer		path		'MOVEMNT_SEQ_NO',
		movemntctgry		varchar(1)		path		'MOVEMNT_CTGRY',
		movemntctgrytext	varchar(15)		path		'MOVEMNT_CTGRY_TEXT',
		movemnttype		varchar(2)		path		'MOVEMNT_TYPE',
		--movemnttypetext	varchar2(15)		path		'MOVEMNT_TYPE_TEXT',
		movemntdate		varchar(10)		path		'MOVEMNT_DATE',
		movemnttime		varchar(10)		path		'MOVEMNT_TIME',
		movemntreas1		varchar(2)		path		'MOVEMNT_REAS1',
		movemntreas1text	varchar(15)		path		'MOVEMNT_REAS1_TEXT',
		--movemntreas2		varchar2(2)		path		'MOVEMNT_REAS2',
		--movemntreas2text	varchar2(15)		path		'MOVEMNT_REAS2TEXT',
		statusind		varchar(1)		path		'STATUS_IND',
		statusindtext		varchar(60)		path		'STATUS_IND_TEXT',
		refpsttrttype		varchar(2)		path		'REF_PST_TRT_TYPE',
		refpsttrttypetext	varchar(15)		path		'REF_PST_TRT_TYPE_TEXT',
		refhospital		varchar(10)		path		'REF_HOSPITAL',	
		--dischrgdisp		varchar2(2)		path		'DISCHRG_DISP',
		--dischrgdisptext	varchar2(15)		path		'DISCHRG_DISP_TEXT',
		--workincapacity	date			path		'WORKIN_CAPACITY',
		--creationdate		date			path		'CREATION_DATE',
		creationuser		varchar(12)		path		'CREATION_USER',
		--updatedate		date			path		'UPDATE_DATE',
		updateuser		varchar(12)		path		'UPDATE_USER',
		cancelind		varchar(1)		path		'CANCEL_IND',
		canceldate		varchar(10)			path		'CANCEL_DATE',
		canceluser		varchar(12)		path		'CANCEL_USER'
		--cancelreason		varchar2(3)		path		'CANCEL_REASON',
		--cancelreasontext	varchar2(15)		path		'CANCEL_REASON_TEXT',
		--creationtime		date			path		'CREATION_TIME',
		--respiration		number(5)		path		'RESPIRATION',
		--extcaseid		varchar2(20)		path		'EXT_CASE_ID',
		--extmovementid		varchar2(20)		path		'EXT_MOVEMENT_ID',
		--postdisphys		varchar2(10)		path		'POST_DIS_PHYS',
		--disphys		varchar2(10)		path		'DIS_PHYS',
		--nobilldays		number(3)		path		'NO_BILL_DAYS',
		)
	where	length(startdate) > 0;
		
c01_w	c01%rowtype;

ie_status_w			intpd_fila_transmissao.ie_status%type		:=	'S';
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type	:=	'F';
ie_evento_w			intpd_fila_transmissao.ie_evento%type;

nr_seq_hcm_seg_pat_w		hcm_fall.nr_seq_segmento%type;
nr_seq_hcm_registro_w		hcm_segmento.nr_seq_registro%type;
nr_seq_hcm_seg_hea_w		hcm_segmento.nr_sequencia%type;
SAPEVENT_w			hcm_kopf.SAPEVENT%type;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;

ie_previsao_w			varchar(1);
ie_acao_w			varchar(1);
ie_alta_estorno_w		varchar(1);
qt_reg_w			bigint;


BEGIN
intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_w);
CALL wheb_usuario_pck.set_nm_usuario(current_setting('ish_pat_case_pck.usernametasy')::varchar(15));

begin
select	a.ds_xml_retorno,
	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_sistema,
	b.nr_seq_projeto_xml,
	b.nr_seq_regra_conv,
	a.ie_evento,
	a.nr_seq_agrupador
into STRICT	ds_xml_w,
	nr_seq_doc_origem_w,
	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w,
	ie_evento_w,
	nr_seq_agrupador_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

if (nr_seq_doc_origem_w IS NOT NULL AND nr_seq_doc_origem_w::text <> '') then
	/*begin
	select	nr_seq_segmento
	into	nr_seq_hcm_seg_pat_w
	from	hcm_fall
	where	nr_sequencia = nr_seq_doc_origem_w;	
	
	select	nr_seq_registro
	into	nr_seq_hcm_seg_hea_w
	from	hcm_segmento
	where	nr_sequencia = nr_seq_hcm_seg_pat_w;

	select	nr_sequencia
	into	nr_seq_hcm_seg_hea_w
	from	hcm_segmento a,
		hcm_segmento b
	where	a.nr_seq_registro = nr_seq_hcm_registro_w
	and	ie_tipo = 'HEA' 
	and	rownum = 1;

	select	SAPEVENT
	into	SAPEVENT_w
	from	hcm_kopf
	where	NR_SEQ_SEGMENTO = nr_seq_hcm_seg_hea_w;
	exception
	when others then
		SAPEVENT_w	:=	'NP97I0';
	end;*/
	
	begin --Substituido o select acima, pois estava retornando o SAPEVENT errado.
	select	d.sapevent
	into STRICT	sapevent_w
	from	hcm_segmento a,
		hcm_segmento b,
		hcm_fall c,
		hcm_kopf d
	where	b.nr_seq_registro   	= a.nr_seq_registro
	and     b.nr_seq_mensagem   	= a.nr_seq_mensagem
	and     a.nr_sequencia      	= c.nr_seq_segmento
	and     b.nr_sequencia		= d.nr_seq_segmento
	and     c.nr_sequencia       	= nr_seq_doc_origem_w
	and	b.ie_tipo           	= 'HEA'  LIMIT 1;
	exception
	when others then
		sapevent_w	:=	'NP97I0';
	end;
end if;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		ie_response_procedure = 'S'
	where	nr_sequencia = nr_sequencia_p;
else
	begin
	select	a.inpatdischargedata
	into STRICT	inpatdischargedata_w
	from	xmltable(
		xmlnamespaces(
			'urn:sap-com:document:sap:soap:functions:mc-style' as "n0",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soap-env"),
		'soap-env:Envelope/soap-env:Body/n0:PatcaseGetdischargeResponse' passing xml_w columns
		inpatdischargedata xmltype path 'InpatDischargeData') a;

	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */		
		begin
		intpd_processar_atributo(reg_integracao_w,'NM_USUARIO',coalesce(c01_w.updateuser,c01_w.creationuser),'N',nm_usuario_w);

		if (substr(coalesce(ish_obter_se_reg_alterado(nr_sequencia_p, c01_w.creationuser, c01_w.updateuser),'S'),1,1) = 'S') then
			CALL ish_lock_fila(ie_evento_w, c01_w.patcaseid);
			
			ds_erro_w	:=	null;
			begin
			dt_alta_w := to_date(c01_w.movemntdate || c01_w.movemnttime, 'yyyy-mm-ddhh24:mi:ss');
			exception
			when 	others then
				dt_alta_w := coalesce(dt_alta_w, clock_timestamp());
			end;
			
			begin
			cd_motivo_alta_w := intpd_conv('MOTIVO_ALTA','CD_MOTIVO_ALTA', c01_w.movemntreas1, nr_seq_regra_w, ie_conversao_w, 'I');
			exception
			when 	others then
				cd_motivo_alta_w := null;
			end;
			
			begin
			select	a.cd_cgc
			into STRICT	cd_cgc_w
			from	pessoa_juridica a
			where	ltrim(a.cd_cgc,'0')	= ltrim(c01_w.refhospital,'0')  LIMIT 1;
			exception
			when 	others then
				cd_cgc_w := null;
			end;
			
			reg_integracao_w.nm_elemento	:= 'InpatDischargeData';
			reg_integracao_w.nm_tabela	:= 'EPISODIO_PACIENTE';
			reg_integracao_w.nr_seq_visao	:= 0;
			
			begin
			select	*
			into STRICT	episodio_paciente_w
			from	episodio_paciente
			where	nr_episodio = ltrim(c01_w.patcaseid, '0')  LIMIT 1;
			
			intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c01_w.casecomment, 'N', episodio_paciente_w.DS_OBSERVACAO);
			
			update	episodio_paciente
			set	row = episodio_paciente_w
			where	nr_sequencia = episodio_paciente_w.nr_sequencia;
			exception
			when 	others then
				episodio_paciente_w.nr_sequencia := null;
			end;
			
			if (episodio_paciente_w.nr_sequencia IS NOT NULL AND episodio_paciente_w.nr_sequencia::text <> '') then
				begin
				--nr_atendimento_w := ish_get_encounter_case(nvl(c01_w.patcaseid, episodio_paciente_w.nr_sequencia), 'INPAT');
				
				select	a.*
				into STRICT	atendimento_paciente_w
				from	atendimento_paciente a
				where	a.nr_seq_episodio = episodio_paciente_w.nr_sequencia
				and	a.ie_tipo_atendimento = 1
				and	coalesce(a.dt_cancelamento::text, '') = ''  LIMIT 1;
				
				nr_atendimento_w	:=	atendimento_paciente_w.nr_atendimento;
				exception
				when others then
					atendimento_paciente_w	:=	null;
					nr_atendimento_w	:=	null;
				end;				
			end if;

			if (atendimento_paciente_w.nr_atendimento IS NOT NULL AND atendimento_paciente_w.nr_atendimento::text <> '') then
				ie_previsao_w		:= null;
				ie_acao_w		:= null;
				ie_alta_estorno_w	:= null;
				
				if (coalesce(c01_w.cancelind,'NULL') = 'X') then
					begin
					if (coalesce(c01_w.statusind,'NULL') = 'P') then
						--Canceled planned discharge
						ie_previsao_w		:= 'P';
						ie_acao_w		:= 'E';
						intpd_processar_atributo(reg_integracao_w,'NM_USUARIO',c01_w.canceluser,'N',nm_usuario_w);
					else
						--Canceled real discharge
						ie_previsao_w		:= 'R';
						ie_acao_w		:= 'E';
						ie_alta_estorno_w	:= 'E';
						intpd_processar_atributo(reg_integracao_w,'NM_USUARIO',c01_w.canceluser,'N',nm_usuario_w);
					end if;
					end;
				else
					begin
					if (coalesce(c01_w.statusind,'NULL') = 'P') then
						select	max(1)
						into STRICT	qt_reg_w
						from	atend_previsao_alta
						where	nr_atendimento	= atendimento_paciente_w.nr_atendimento
						and	ie_situacao	= 'A';
						
						if (qt_reg_w = 0) then
							--Created planned discharge
							ie_previsao_w	:= 'P';
							ie_acao_w	:= 'I';
						else
							--Changed planned discharge
							ie_previsao_w		:= 'P';
							ie_acao_w		:= 'A';
							intpd_processar_atributo(reg_integracao_w,'NM_USUARIO',coalesce(c01_w.updateuser,c01_w.creationuser),'N',nm_usuario_w);
						end if;
					else
						if (coalesce(atendimento_paciente_w.dt_alta::text, '') = '') then
							--Created real discharge
							ie_previsao_w		:= 'R';
							ie_acao_w		:= 'I';
							ie_alta_estorno_w	:= 'A';
						else
							--Changed real discharge
							ie_previsao_w		:= 'R';
							ie_acao_w		:= 'A';
							ie_alta_estorno_w	:= 'A';
							intpd_processar_atributo(reg_integracao_w,'NM_USUARIO',coalesce(c01_w.updateuser,c01_w.creationuser),'N',nm_usuario_w);
						end if;					
					end if;
					end;					
				end if;

			end if;

			ish_gerar_alta(atendimento_paciente_w.nr_atendimento,
				null,/*cd_profissional_p*/
				'S',
				dt_alta_w,
				nm_usuario_w,
				c01_w.movemntreas1text,
				ie_previsao_w,
				ie_acao_w,
				cd_motivo_alta_w,
				ie_alta_estorno_w,
				ds_erro_w,
				cd_cgc_w);

			if (coalesce(ds_erro_w,'NULL') <> 'NULL') and (length(ds_erro_w) > 1) then
				begin
				reg_integracao_w.intpd_log_receb[reg_integracao_w.qt_reg_log].ds_log	:=	ds_erro_w;
				reg_integracao_w.qt_reg_log	:=	reg_integracao_w.qt_reg_log + 1;
				end;
			elsif (coalesce(ie_acao_w,'NULL') = 'I') and (coalesce(ie_previsao_w,'NULL') = 'R')	then
				begin
				select	nr_seq_interno
				into STRICT	nr_seq_interno_w
				from	alta_hospitalar_v
				where	nr_atendimento = atendimento_paciente_w.nr_atendimento;
				
				CALL gerar_conv_meio_externo(
					null,
					'ATEND_PACIENTE_UNIDADE', 
					'NR_SEQ_INTERNO', 
					'D=' || nr_seq_interno_w, 
					substr(c01_w.patcaseid || current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10) || c01_w.movemntseqno,1,40),
					null, 
					nr_seq_regra_w, 
					'A', 
					nm_usuario_w);
				exception
				when others then
					null;
				end;
			end if;
		end if;
		end;
	end loop;
	close c01;
	
	if (reg_integracao_w.qt_reg_log > 0) then
		begin
			
		/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'E',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;		
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			ie_response_procedure = 'E',
			nr_doc_externo = atendimento_paciente_w.nr_atendimento
		where	nr_sequencia = nr_sequencia_p;
	end if;
	
	reg_integracao_w := gerar_int_padrao.gravar_log(reg_integracao_w);
	exception
	when 	others then
		ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
		
		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'E',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;
		
	end;
end if;

if (nr_seq_agrupador_w > 0) then
	CALL intpd_processar_fila_trans(null, 'S', nr_seq_agrupador_w);
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_pat_case_pck.get_discharge_response (nr_sequencia_p bigint) FROM PUBLIC;
