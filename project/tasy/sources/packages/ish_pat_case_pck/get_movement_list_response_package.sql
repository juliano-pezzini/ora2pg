-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_pat_case_pck.get_movement_list_response ( nr_sequencia_p bigint) AS $body$
DECLARE


		
		
_ora2pg_r RECORD;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
reg_integracao_conv_w			gerar_int_padrao.reg_integracao_conv;
reg_integracao_w			gerar_int_padrao.reg_integracao;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;

nr_seq_doc_origem_w		intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_agrupador_w		intpd_fila_transmissao.nr_seq_agrupador%type;
ds_xml_w				text;
xml_w				xml;
movementlist_w 			xml;

nr_seq_episodio_w		episodio_paciente.nr_sequencia%type;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;
nr_seq_interno_ww		atend_paciente_unidade.nr_seq_interno%type;
nm_usuario_w			usuario.nm_usuario%type;

c00 CURSOR FOR
SELECT	patcaseid
from	xmltable('/Movementlist/item' passing movementlist_w columns
	patcaseid	varchar(10)	path	'Patcaseid')
group by patcaseid;
	
c00_w	c00%rowtype;

c01 CURSOR FOR
SELECT	*
from	xmltable('/Movementlist/item' passing movementlist_w columns
--	client		varchar2(3)	path	'Client',
	institution		varchar(4)	path	'Institution',
	patcaseid		varchar(10)	path	'Patcaseid',
	movemntseqno	varchar(5)	path	'MovemntSeqno',
	movemntctgry	varchar(1)	path	'MovemntCtgry',
	movemnttype	varchar(2)	path	'MovemntType',
	movemntdate	varchar(10)	path	'MovemntDate',
	movemnttime	varchar(8)	path	'MovemntTime',
--	statusind		varchar2(1)	path	'StatusInd',
--	intvisitstat		varchar2(2)	path	'IntVisitStat',
--	movemntpdate	varchar2(10)	path	'MovemntPdate',
--	movemntptime	varchar2(8)	path	'MovemntPtime',
	movemntenddate	varchar(10)	path	'MovemntEnddate',
	movemntendtime	varchar(8)	path	'MovemntEndtime',
	statusindend	varchar(1)	path	'StatusIndEnd',
	movemntcomment	varchar(50)	path	'MovemntComment',
--	movemntltext	varchar2(1)	path	'MovemntLtext',
	movemntreas1	varchar(2)	path	'MovemntReas1',
--	movemntreas2	varchar2(2)	path	'MovemntReas2',
--	refmoveseqno	varchar2(5)	path	'RefmoveSeqno',
--	phoneno		varchar2(16)	path	'Phoneno',
--	tv		varchar2(1)	path	'Tv',
	emergcase	varchar(1)	path	'EmergCase',
	accident		varchar(3)	path	'Accident',
	accidentno	varchar(12)	path	'AccidentNo',
	accidentloc	varchar(25)	path	'AccidentLoc',
	accidenttime	varchar(8)	path	'AccidentTime',
	accidentdate	varchar(10)	path	'AccidentDate',
	accidentcmmnt	varchar(50)	path	'AccidentCmmnt',
--	accidentltext	varchar2(1)	path	'AccidentLtext',
--	accidentemstyp	varchar2(4)	path	'AccidentEmstyp',
--	latestadm		varchar2(10)	path	'LatestAdm',
	department	varchar(8)	path	'Department',
	nurstreatou	varchar(8)	path	'NursTreatOu',
	room		varchar(8)	path	'Room',
	bed		varchar(8)	path	'Bed',
--	roomstatusind	varchar2(1)	path	'RoomStatusInd',
	lengthofstay	varchar(5)	path	'LengthOfStay',
	refhospital	varchar(10)	path	'RefHospital',
	admittdept	varchar(8)	path	'AdmittDept',
--	dischrgdisp	varchar2(2)	path	'DischrgDisp',
--	cofdeath		varchar2(3)	path	'COfDeath',
--	workincapacity	varchar2(10)	path	'WorkIncapacity',
--	absnceapprov	varchar2(1)	path	'AbsnceApprov',
--	accidentemsvce	varchar2(15)	path	'AccidentEmsvce',
	treatmcategory	varchar(6)	path	'Treatmcategory',
--	subseqmove	varchar2(5)	path	'SubseqMove',
--	priormove		varchar2(5)	path	'PriorMove',
--	noofcalls		varchar2(2)	path	'NoOfCalls',
--	medicaltext	varchar2(50)	path	'MedicalText',
--	medicalltext	varchar2(1)	path	'MedicalLtext',
--	priority		varchar2(1)	path	'Priority',
--	schedultype	varchar2(8)	path	'SchedulType',
--	visitcategory	varchar2(1)	path	'Visitcategory',
--	transporttype	varchar2(2)	path	'TransportType',
--	accident3rdpty	varchar2(1)	path	'Accident3rdpty',
--	genevent		varchar2(4)	path	'GenEvent',
--	surgerytype	varchar2(2)	path	'SurgeryType',
--	class		varchar2(4)	path	'Class',
	refpsttrttype	varchar(2)	path	'RefPsttrtType',
	specialty		varchar(4)	path	'Specialty',
	arrivalmode	varchar(2)	path	'ArrivalMode',
	waitlistprio	varchar(2)	path	'WaitlistPrio',
--	waitlisttype	varchar2(6)	path	'WaitlistType',
	waitlistdeldat	varchar(10)	path	'WaitlistDeldat',
--	waitlistdelreas	varchar2(3)	path	'WaitlistDelreas',
	waitliststatus	varchar(2)	path	'WaitlistStatus',
	waitlisthosp	varchar(10)	path	'WaitlistHosp',
--	waitlistinclon	varchar2(10)	path	'WaitlistInclon',
	creationdate	varchar(10)	path	'CreationDate',
	creationuser	varchar(12)	path	'CreationUser',
	updatedate	varchar(10)	path	'UpdateDate',
	updateuser	varchar(12)	path	'UpdateUser',
	cancelind	varchar(1)	path	'CancelInd',
	canceluser	varchar(12)	path	'CancelUser',
	canceldate	varchar(10)	path	'CancelDate',
	cancelreason	varchar(3)	path	'CancelReason',
--	treatcode		varchar2(1)	path	'TreatCode',
	creationtime	varchar(8)	path	'CreationTime',
--	prioritylong	varchar2(3)	path	'PriorityLong',
	extmovementid	varchar(20)	path	'ExtMovementId')
where	patcaseid = c00_w.patcaseid;
	
c01_w	c01%rowtype;

ds_erro_w	varchar(2000);

ie_status_w			intpd_fila_transmissao.ie_status%type		:=	'S';
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type	:=	'F';
ie_evento_w			intpd_fila_transmissao.ie_evento%type;
atendimento_paciente_w		atendimento_paciente%rowtype;
nr_seq_evento_sistema_w		intpd_fila_transmissao.nr_seq_evento_sistema%type;
nr_Seq_motivo_w			ATENDIMENTO_CANCELAMENTO.nr_Seq_motivo%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
ie_tipo_proc_w			varchar(1);
qt_reg_w			bigint;
nr_agrupador_w			bigint;

ie_alta_w			varchar(1)	:=	'N';
cd_pessoa_fisica_w		episodio_paciente.cd_pessoa_fisica%type;
nr_seq_movto_alta_w		varchar(5);


BEGIN
intpd_reg_integracao_inicio(nr_sequencia_p, 'R', reg_integracao_conv_w);

begin
nm_usuario_w	:=	current_setting('ish_pat_case_pck.usernametasy')::varchar(15);

select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_sistema,
	b.nr_seq_projeto_xml,
	b.nr_seq_regra_conv,
	a.ds_xml_retorno,
	a.ie_evento,
	a.nr_seq_agrupador,
	a.nr_seq_evento_sistema
into STRICT	nr_seq_doc_origem_w,
	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w,
	ds_xml_w,
	ie_evento_w,
	nr_seq_agrupador_w,
	nr_seq_evento_sistema_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

if (position('-' in nr_seq_doc_origem_w) > 0) then	
	ie_tipo_proc_w		:=	substr(obter_valor_campo_separador(nr_seq_doc_origem_w, 2, '-'),1 , 1);
	nr_seq_doc_origem_w	:=	substr(obter_valor_campo_separador(nr_seq_doc_origem_w, 1, '-'),1 , 10);	
else
	ie_tipo_proc_w		:=	'N';
end if;

ish_converter_response(nr_sequencia_p, ds_xml_w, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		ie_response_procedure = 'S'
	where	nr_sequencia = nr_sequencia_p;
else	
	begin
	select	a.movementlist
	into STRICT	movementlist_w
	from	xmltable(
		xmlnamespaces(
			'urn:sap-com:document:sap:soap:functions:mc-style' as "n0",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
		'soapenv:Envelope/soapenv:Body/n0:PatcaseGetmovementlistResponse' passing xml_w columns
		movementlist xmltype path 'Movementlist') a;
		
	open C00;
	loop
	fetch C00 into	
		C00_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin
		CALL ish_lock_fila(ie_evento_w, c00_w.patcaseid);
		
		begin
		select	nr_sequencia,
			cd_pessoa_fisica
		into STRICT	nr_seq_episodio_w,
			cd_pessoa_fisica_w
		from	episodio_paciente
		where	nr_episodio = ltrim(c00_w.patcaseid, '0');		
		exception
		when others then
			nr_seq_episodio_w	:=	null;
		end;
		
		if (ie_tipo_proc_w = 'R') then
			begin
			select	nr_agrupador
			into STRICT	nr_agrupador_w
			from	ISH_AGRUPADOR
			where	cd_pessoa_fisica = cd_pessoa_fisica_w  LIMIT 1;		
			exception
			when others then
				nr_agrupador_w	:=	null;
			end;

			select	count(1)
			into STRICT	qt_reg_w
			from	intpd_fila_transmissao
			where	nr_seq_agrupador = nr_agrupador_w
			and	nr_sequencia <> nr_sequencia_p
			and	ie_status <> 'S';
			
			if (qt_reg_w > 0) then
				/*There are some pending itens for this patient*/

				CALL wheb_mensagem_pck.exibir_mensagem_abort(obter_desc_expressao(875006));
			end if;
			
			CALL ish_pat_case_pck.limpar_atend_case(nr_sequencia_p, nr_seq_episodio_w, nr_seq_regra_w);
		end if;
		
		nr_seq_movto_alta_w	:=	null;
			
		open c01;
		loop
		fetch c01 into
			c01_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			intpd_processar_atributo(reg_integracao_conv_w,'NM_USUARIO',coalesce(c01_w.updateuser,c01_w.creationuser),'N',nm_usuario_w);

			if (ie_tipo_proc_w = 'R') then
				begin
				
				reg_integracao_w.cd_pessoa_fisica		:=	cd_pessoa_fisica_w;
				reg_integracao_w.nr_atendimento			:=	nr_atendimento_w;
				reg_integracao_w.nr_seq_item_documento_p	:=	c01_w.movemntseqno;
				reg_integracao_w.ie_geracao			:=	'U';
				
				/*
				MovemntCtgry
				1	Admission
				2	Discharge
				3	Transfer
				4	Outpatient Visit
				6	Absence From
				7	Absence To 
								
				CasediagnosisGetlist+		84
				CaseprocedureGetlist+		105
				CaseserviceGetlist+		110
				PatcaseGetabsence*+		185
				PatcaseGetdischarge*+		119
				PatcaseGetinpatadmiss*+		104
				PatcaseGetoutpatvisit*+		117
				PatcaseGettransfer*+		130
				_-rzvish_-egkGet+		362
				_-rzvish_-insuranceGet+		131
				*/
				
				if (c01_w.MovemntCtgry = '1') then				
					reg_integracao_w := gerar_int_padrao.gravar_integracao('104', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
				elsif (c01_w.MovemntCtgry = '2') then
					nr_seq_movto_alta_w	:=	c01_w.movemntseqno;				
				elsif (c01_w.MovemntCtgry = '3') then				
					reg_integracao_w := gerar_int_padrao.gravar_integracao('130', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
				elsif (c01_w.MovemntCtgry = '4') then				
					reg_integracao_w := gerar_int_padrao.gravar_integracao('117', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);					
				elsif (c01_w.MovemntCtgry in ('6','7')) then				
					reg_integracao_w := gerar_int_padrao.gravar_integracao('185', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);				
				end if;
				end;
			else			
				begin
				nr_seq_interno_w 	:= 	null;
				nr_seq_interno_ww	:=	null;			
				
				begin
				nr_seq_interno_w 	:= 	somente_numero(intpd_conv('ATEND_PACIENTE_UNIDADE', 'NR_SEQ_INTERNO', substr(c01_w.patcaseid || current_setting('ish_pat_case_pck.ds_separador_w')::varchar(10) || c01_w.movemntseqno,1,40), null, 'I', 'I'));
				
				select	nr_atendimento
				into STRICT	nr_atendimento_w
				from	atend_paciente_unidade
				where	nr_seq_interno = nr_seq_interno_w;
				
				nr_seq_interno_ww	:=	Obter_Atepacu_paciente(	nr_atendimento_w, 'P');
				exception
				when others then
					nr_atendimento_w	:=	null;
				end;		
				
				begin		
				select	*
				into STRICT	atendimento_paciente_w
				from	atendimento_paciente		
				where	nr_atendimento = nr_atendimento_w;		
				exception
				when others then
					atendimento_paciente_w.nr_atendimento	:=	null;
				end;
				
				/*Se for o movimento de admissao com cancelamento recebido do IS-H, nao altera movimentacao*/

				if (somente_numero(c01_w.MovemntCtgry) in (1,4)) and (atendimento_paciente_w.nr_atendimento IS NOT NULL AND atendimento_paciente_w.nr_atendimento::text <> '') and (nr_seq_interno_w = nr_seq_interno_ww) and (c01_w.CancelInd = 'X') and (coalesce(atendimento_paciente_w.dt_cancelamento::text, '') = '') then
					begin				
					select	coalesce(max(a.ds_valor),'')
					into STRICT	nr_Seq_motivo_w
					from	intpd_eventos_valores	a
					where	a.nr_seq_evento_sistema = nr_seq_evento_sistema_w
					and	a.nm_elemento	= 'ATENDIMENTO_CANCELAMENTO'
					and	a.nm_atributo	= 'NR_SEQ_MOTIVO';
				
					CALL wheb_usuario_pck.set_ie_commit('N');
					
					CALL call_cancel_reverse_encounter(
						atendimento_paciente_w.nr_atendimento,
						c01_w.canceluser,
						nr_Seq_motivo_w,
						atendimento_paciente_w.cd_pessoa_fisica,
						null);

					CALL wheb_usuario_pck.set_ie_commit('S');			
					end;			
				elsif (somente_numero(c01_w.MovemntCtgry) = 3) then
					if (substr(coalesce(ish_obter_se_reg_alterado(nr_sequencia_p, c01_w.creationuser, c01_w.updateuser, c01_w.canceluser),'S'),1,1) = 'S') or
						(c01_w.CancelInd = 'X' AND nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then			
						SELECT * FROM ish_pat_case_pck.ish_receber_atend_pac_unidade(
							reg_integracao_conv_w, nr_seq_regra_w, ie_conversao_w, nr_seq_interno_w, c01_w.creationdate, c01_w.creationtime, c01_w.creationuser, c01_w.updatedate, c01_w.updateuser, c01_w.patcaseid, c01_w.CancelInd, c01_w.canceldate, c01_w.canceluser, c01_w.movemntseqno, c01_w.movemntdate, c01_w.movemnttime, c01_w.movemntenddate, c01_w.movemntendtime, c01_w.nurstreatou, c01_w.bed, c01_w.room, c01_w.department, c01_w.movemntcomment, c01_w.MovemntCtgry, c01_w.MovemntType, atendimento_paciente_w.nr_atendimento, c01_w.treatmcategory, null) INTO STRICT _ora2pg_r;

							reg_integracao_conv_w := _ora2pg_r.reg_integracao_p; nr_seq_interno_w := _ora2pg_r.nr_seq_interno_p;
					end if;
				end if;
				end;
			end if;
			end;
		end loop;
		close c01;		
		
		reg_integracao_w.nr_seq_item_documento_p	:=	null;
		reg_integracao_w := gerar_int_padrao.gravar_integracao('131', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
		reg_integracao_w := gerar_int_padrao.gravar_integracao('362', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
		reg_integracao_w := gerar_int_padrao.gravar_integracao('84', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
		reg_integracao_w := gerar_int_padrao.gravar_integracao('105', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
		reg_integracao_w := gerar_int_padrao.gravar_integracao('110', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
		
		if (somente_numero(nr_seq_movto_alta_w) > 0) then
			reg_integracao_w.nr_seq_item_documento_p	:=	nr_seq_movto_alta_w;
			reg_integracao_w := gerar_int_padrao.gravar_integracao('119', c00_w.patcaseid, nm_usuario_w, reg_integracao_w);
		end if;
		end;
	end loop;
	close C00;	
	
	if (reg_integracao_conv_w.qt_reg_log > 0) then
		begin	
		/*'Em caso de qualquer consistencia o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistencia'*/

		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'S',
			ds_log  = NULL
		where	nr_sequencia = nr_sequencia_p;		
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status = 'S',
			ie_response_procedure = 'S',
			nr_doc_externo = nr_seq_episodio_w
		where	nr_sequencia = nr_sequencia_p;
	end if;
	
	reg_integracao_conv_w := gerar_int_padrao.gravar_log(reg_integracao_conv_w);
	exception
	when others then
		begin
		ds_erro_w	:=	substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,2000);
		
		rollback;
		
		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ie_response_procedure = 'S',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;
		end;
	end;
end if;

if (nr_seq_agrupador_w > 0) then
	CALL intpd_processar_fila_trans(null, 'S', nr_seq_agrupador_w);
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_pat_case_pck.get_movement_list_response ( nr_sequencia_p bigint) FROM PUBLIC;
