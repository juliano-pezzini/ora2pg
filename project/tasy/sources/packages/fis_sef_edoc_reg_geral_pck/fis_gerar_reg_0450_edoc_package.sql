-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*Registro 0450: tabela de informações complementares/registro de observações*/

CREATE OR REPLACE PROCEDURE fis_sef_edoc_reg_geral_pck.fis_gerar_reg_0450_edoc () AS $body$
DECLARE


nr_seq_fis_sef_edoc_0450_w	fis_sef_edoc_0450.nr_sequencia%type;
qt_cursor_w 			bigint := 0;
nr_vetor_w  			bigint := 0;

c_reg_0450 CURSOR FOR
	SELECT	distinct a.cd_inf,
		fis_efd_icmsipi_elimina_c(a.ds_txt) ds_txt
	from (
		SELECT	a.cd_inf_obs	cd_inf,
			b.ds_observacao	ds_txt
		from	fis_sef_edoc_c020 a,
			nota_fiscal b
		where	a.nr_Seq_nota		= b.nr_sequencia
		and 	a.nr_seq_controle	= current_setting('fis_sef_edoc_reg_geral_pck.nr_seq_controle_w')::fis_sef_edoc_controle.nr_sequencia%type
		
union

		select	a.cd_inf_obs	cd_inf,
			b.ds_observacao	ds_txt
		from	fis_sef_edoc_e020 a,
			nota_fiscal b
		where	a.nr_Seq_nota		= b.nr_sequencia
		and 	a.nr_seq_controle	= current_setting('fis_sef_edoc_reg_geral_pck.nr_seq_controle_w')::fis_sef_edoc_controle.nr_sequencia%type
		
union

		select	a.cd_inf_obs	cd_inf,
			b.ds_observacao	ds_txt
		from	fis_sef_edoc_e100 a,
			nota_fiscal b
		where	a.nr_Seq_nota		= b.nr_sequencia
		and 	a.nr_seq_controle	= current_setting('fis_sef_edoc_reg_geral_pck.nr_seq_controle_w')::fis_sef_edoc_controle.nr_sequencia%type
		
union

		select	a.cd_inf_obs	cd_inf,
			b.ds_observacao	ds_txt
		from	fis_sef_edoc_e120 a,
			nota_fiscal b
		where	a.nr_Seq_nota		= b.nr_sequencia
		and 	a.nr_seq_controle	= current_setting('fis_sef_edoc_reg_geral_pck.nr_seq_controle_w')::fis_sef_edoc_controle.nr_sequencia%type
		) a
	where	coalesce(a.ds_txt, 'XX') <> 'XX';

/*Criação do array com o tipo sendo do cursor eespecificado - c_reg_0450*/

type reg_c_reg_0450 is table of c_reg_0450%RowType;
vetreg0450 reg_c_reg_0450;

/*Criação do array com o tipo sendo da tabela especificada - fis_sef_edoc_0450*/

type registro is table of fis_sef_edoc_0450%rowtype index by integer;
fis_registros_w registro;

BEGIN

open c_reg_0450;
loop
fetch c_reg_0450 bulk collect into vetreg0450 limit 1000;
	for i in 1 .. vetreg0450.Count loop
		begin

		/*Incrementa a variavel para o array*/

		qt_cursor_w:=	qt_cursor_w + 1;

		/*Pega a sequencia da taleba fis_sef_edoc_0450 para o insert*/

		select	nextval('fis_sef_edoc_0450_seq')
		into STRICT	nr_seq_fis_sef_edoc_0450_w
		;

		/*Inserindo valores no array para realização do forall posteriormente*/

		fis_registros_w[qt_cursor_w].nr_sequencia 		:= nr_seq_fis_sef_edoc_0450_w;
		fis_registros_w[qt_cursor_w].dt_atualizacao 		:= clock_timestamp();
		fis_registros_w[qt_cursor_w].nm_usuario 		:= current_setting('fis_sef_edoc_reg_geral_pck.nm_usuario_w')::usuario.nm_usuario%type;
		fis_registros_w[qt_cursor_w].dt_atualizacao_nrec	:= clock_timestamp();
		fis_registros_w[qt_cursor_w].nm_usuario_nrec 		:= current_setting('fis_sef_edoc_reg_geral_pck.nm_usuario_w')::usuario.nm_usuario%type;
		fis_registros_w[qt_cursor_w].cd_reg 			:= '0450';
		fis_registros_w[qt_cursor_w].cd_inf			:= vetreg0450[i].cd_inf;
		fis_registros_w[qt_cursor_w].ds_txt			:= substr(vetreg0450[i].ds_txt,1,255);
		fis_registros_w[qt_cursor_w].nr_seq_controle 		:= current_setting('fis_sef_edoc_reg_geral_pck.nr_seq_controle_w')::fis_sef_edoc_controle.nr_sequencia%type;

		if (nr_vetor_w >= 1000) then
			begin
			/*Inserindo registros definitivamente na tabela especifica - fis_sef_edoc_0450 */

			forall i in fis_registros_w.first .. fis_registros_w.last
				insert into fis_sef_edoc_0450 values fis_registros_w(i);

			nr_vetor_w := 0;
			fis_registros_w.delete;

			commit;

			end;
		end if;

		/*incrementa variavel para realizar o forall quando chegar no valor limite*/

		nr_vetor_w := nr_vetor_w + 1;

		end;
	end loop;
EXIT WHEN NOT FOUND; /* apply on c_reg_0450 */
end loop;
close c_reg_0450;

if (fis_registros_w.count > 0) then
	begin
	/*Inserindo registro que não entraram outro for all devido a quantidade de registros no vetor*/

	forall i in fis_registros_w.first .. fis_registros_w.last
		insert into fis_sef_edoc_0450 values fis_registros_w(i);

	fis_registros_w.delete;

	commit;

	end;
end if;

/*Libera memoria*/

dbms_session.free_unused_user_memory;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_sef_edoc_reg_geral_pck.fis_gerar_reg_0450_edoc () FROM PUBLIC;
