-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mov_mens_pck.inserir_mov_itens ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

C01 CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_mov_benef,
		e.nr_sequencia nr_seq_item_mens,
		e.ie_tipo_item,
		coalesce(e.dt_inicio_cobertura,d.dt_inicio_cobertura) dt_inicio_cobertura,
		coalesce(e.dt_fim_cobertura,d.dt_fim_cobertura) dt_fim_cobertura,
		coalesce(e.vl_item, '0') vl_item,
		coalesce(e.vl_antecipacao, '0') vl_antecipacao,
		coalesce(e.vl_pro_rata_dia, '0') vl_pro_rata_dia,
		coalesce(e.vl_ato_cooperado, '0') vl_ato_cooperado,
		coalesce(e.vl_ato_cooperado_antec, '0') vl_ato_cooperado_antec,
		coalesce(e.vl_ato_cooperado_pro_rata, '0') vl_ato_cooperado_pro_rata,
		coalesce(e.vl_ato_auxiliar, '0') vl_ato_auxiliar,
		coalesce(e.vl_ato_auxiliar_antec, '0') vl_ato_auxiliar_antec,
		coalesce(e.vl_ato_auxiliar_pro_rata, '0') vl_ato_auxiliar_pro_rata,
		coalesce(e.vl_ato_nao_cooperado, '0') vl_ato_nao_cooperado,
		coalesce(e.vl_ato_nao_coop_antec, '0') vl_ato_nao_coop_antec,
		coalesce(e.vl_ato_nao_coop_pro_rata, '0') vl_ato_nao_coop_pro_rata
	from	pls_mov_mens_operadora	a,
		pls_mov_mens_benef	b,
		pls_mov_mens_temp	c,
		pls_mensalidade_segurado d,
		pls_mensalidade_seg_item e,
		pls_mensalidade		f
	where	a.nr_seq_lote		= pls_mov_mens_lote_w.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_mov_operadora
	and	b.nr_seq_segurado	= d.nr_seq_segurado
	and	d.nr_sequencia		= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia		= e.nr_seq_mensalidade_seg
	and	f.nr_sequencia		= d.nr_seq_mensalidade
	and	coalesce(f.ie_cancelamento::text, '') = ''
	and	e.ie_tipo_item	= '1' --Conforme definição de negócio, no momento será gerado apenas o preço pré-estabelecido
	group by
		b.nr_sequencia,
		e.nr_sequencia,
		e.ie_tipo_item,
		e.dt_inicio_cobertura,
		e.dt_fim_cobertura,
		d.dt_inicio_cobertura,
		d.dt_fim_cobertura,
		e.vl_item,
		e.vl_pro_rata_dia,
		e.vl_antecipacao,
		e.vl_ato_auxiliar,
		e.vl_ato_auxiliar_antec,
		e.vl_ato_auxiliar_pro_rata,
		e.vl_ato_cooperado,
		e.vl_ato_cooperado_antec,
		e.vl_ato_cooperado_pro_rata,
		e.vl_ato_nao_cooperado,
		e.vl_ato_nao_coop_antec,
		e.vl_ato_nao_coop_pro_rata;
BEGIN

for r_c01_w in C01 loop
	begin
	insert	into	pls_mov_mens_benef_item(	nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_mov_benef,
			dt_inicio_cobertura, dt_fim_cobertura, ie_tipo_item,
			vl_antecipacao, vl_ato_auxiliar, vl_ato_auxiliar_antec,
			vl_ato_auxiliar_pro_rata, vl_ato_cooperado, vl_ato_cooperado_antec,
			vl_ato_cooperado_pro_rata, vl_ato_nao_coop_antec, vl_ato_nao_cooperado,
			vl_ato_nao_coop_pro_rata, vl_item, vl_pro_rata_dia,
			nr_seq_item_mens)
		values (	nextval('pls_mov_mens_benef_item_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, r_c01_w.nr_seq_mov_benef,
			r_c01_w.dt_inicio_cobertura, r_c01_w.dt_fim_cobertura, r_c01_w.ie_tipo_item,
			r_c01_w.vl_antecipacao, r_c01_w.vl_ato_auxiliar, r_c01_w.vl_ato_auxiliar_antec,
			r_c01_w.vl_ato_auxiliar_pro_rata, r_c01_w.vl_ato_cooperado, r_c01_w.vl_ato_cooperado_antec,
			r_c01_w.vl_ato_cooperado_pro_rata, r_c01_w.vl_ato_nao_coop_antec , r_c01_w.vl_ato_nao_cooperado,
			r_c01_w.vl_ato_nao_coop_pro_rata, r_c01_w.vl_item, r_c01_w.vl_pro_rata_dia,
			r_c01_w.nr_seq_item_mens);
	end;
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mov_mens_pck.inserir_mov_itens ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
