-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


    -- General Census
CREATE OR REPLACE PROCEDURE pfcs_pck_census.calc_occupancy ( cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE

        pfcs_panel_seq_w                pfcs_panel.nr_sequencia%type;
        nr_seq_indicator_w              pfcs_panel.nr_seq_indicator%type;
        pfcs_panel_detail_seq_w         pfcs_panel_detail.nr_sequencia%type;
        pfcs_detail_bed_seq_w           pfcs_detail_bed.nr_sequencia%type;

        ds_unit_w                       pfcs_unit.ds_unit%type;
        cd_unit_w                       pfcs_unit.nr_sequencia%type;
        cd_unit_classification_w        pfcs_unit.cd_type%type;

        qt_beds_w                       integer  := 0;
        qt_census_beds_w                integer  := 0;
        qt_occupied_beds_w              integer  := 0;
        qt_blocked_beds_w               integer  := 0;
        qt_available_beds_w             integer  := 0;
        qt_discharge_orders_w           integer  := 0;
        qt_discharge_delays_w           integer  := 0;

        ie_occupied_w                   varchar(1);
        ie_over_threshold_w             varchar(1);
        ie_discharge_order_status_w     varchar(1);
        ie_transfer_order_status_w      varchar(1);

        qt_discharge_rule_w             pfcs_general_rule.qt_time_discharge%type;
        qt_transfer_rule_w              pfcs_general_rule.qt_time_transfer%type;
        nr_seq_last_location_w          pfcs_location.nr_sequencia%type;

BEGIN
        select  coalesce(max(qt_time_discharge),PFCS_PCK_CONSTANTS.VL_DEFAULT_DISCHARGE_RULE),
                coalesce(max(qt_time_transfer),PFCS_PCK_CONSTANTS.VL_DEFAULT_TRANSFER_RULE)
        into STRICT    qt_discharge_rule_w,
                qt_transfer_rule_w
        from    pfcs_general_rule;

        nr_seq_indicator_w := PFCS_PCK_INDICATORS.NR_VC_CAPACITY;
        for c01_w in pfcs_pck_cursors.cur_units(cd_establishment_p) loop
            ds_unit_w := c01_w.ds_unit;
            cd_unit_w := c01_w.cd_unit;
            cd_unit_classification_w := c01_w.cd_unit_classification;

            qt_beds_w := 0;
            qt_census_beds_w := 0;
            qt_occupied_beds_w := 0;
            qt_blocked_beds_w := 0;
            qt_available_beds_w := 0;
            qt_discharge_orders_w := 0;
            qt_discharge_delays_w := 0;

            for c02_w in current_setting('pfcs_pck_census.cur_patients_by_unit')::CURSOR((c01_w.cd_unit, c01_w.ds_unit, c01_w.cd_unit_classification, cd_establishment_p) loop
                ie_occupied_w := PFCS_PCK_CONSTANTS.IE_NO;

                if (c02_w.nr_seq_location <> coalesce(nr_seq_last_location_w,0)) then
                    nr_seq_last_location_w := c02_w.nr_seq_location;

                    nr_seq_operational_level_p  => cd_establishment_p := pfcs_pck.pfcs_insert_panel_detail(
                        nr_seq_panel_detail_p       => pfcs_panel_detail_seq_w, nm_usuario_p                => nm_user_p, nr_seq_indicator_p          => nr_seq_indicator_w, nr_seq_operational_level_p  => cd_establishment_p);

                    CALL pfcs_pck.pfcs_insert_detail_bed(
                        nr_seq_detail_p             => pfcs_panel_detail_seq_w,
                        nm_usuario_p                => nm_user_p,
                        ds_location_p               => c02_w.ds_location,
                        cd_department_p             => c01_w.cd_unit,
                        ds_department_p             => c01_w.ds_unit,
                        cd_status_p                 => c02_w.cd_status,
                        ds_status_p                 => c02_w.ie_census,
                        ie_classification_p         => cd_unit_classification_w);

                    if (c02_w.nr_encounter IS NOT NULL AND c02_w.nr_encounter::text <> '') then
                        qt_occupied_beds_w := qt_occupied_beds_w + 1;
                        ie_occupied_w := PFCS_PCK_CONSTANTS.IE_YES;

                        ie_over_threshold_w := PFCS_PCK_CONSTANTS.IE_NO;
                        ie_discharge_order_status_w := PFCS_PCK_CONSTANTS.IE_NO;
                        ie_transfer_order_status_w := null;

                        if (c02_w.cd_svc_request = PFCS_PCK_CONSTANTS.CD_DISCHARGE and
                            c02_w.cd_svc_intent = PFCS_PCK_CONSTANTS.SI_INTENT_PLAN and
                            c02_w.cd_svc_status = PFCS_PCK_CONSTANTS.SI_STATUS_ACTIVE) then
                        ie_discharge_order_status_w := PFCS_PCK_CONSTANTS.IE_YES;
                        qt_discharge_orders_w := qt_discharge_orders_w + 1;
                        if ( ((clock_timestamp() - c02_w.dt_svc_request) * 1440) > qt_discharge_rule_w ) then
                                qt_discharge_delays_w := qt_discharge_delays_w + 1;
                                ie_over_threshold_w := PFCS_PCK_CONSTANTS.IE_YES;
                            end if;
                        elsif (c02_w.cd_svc_request = PFCS_PCK_CONSTANTS.CD_TRANSFER and
                                c02_w.cd_svc_status <> PFCS_PCK_CONSTANTS.SI_STATUS_REVOKED) then
                            if (c02_w.cd_svc_intent = PFCS_PCK_CONSTANTS.SI_INTENT_PLAN) then
                                ie_transfer_order_status_w := 'O';
                                if ( ((clock_timestamp() - c02_w.dt_svc_request) * 1440) > qt_transfer_rule_w ) then
                                    ie_over_threshold_w := PFCS_PCK_CONSTANTS.IE_YES;
                                end if;
                            elsif (c02_w.cd_svc_intent = PFCS_PCK_CONSTANTS.SI_INTENT_PROPOSAL) then
                                ie_transfer_order_status_w := 'P';
                            end if;
                        end if;

                        CALL pfcs_pck.pfcs_insert_detail_patient(
                            nr_seq_detail_p             => pfcs_panel_detail_seq_w,
                            nm_usuario_p                => nm_user_p,
                            nr_encounter_varchar_p      => c02_w.nr_encounter,
                            dt_entrance_p               => c02_w.dt_period_start,
                            id_patient_p                => c02_w.id_patient,
                            nm_patient_p                => c02_w.nm_patient,
                            ds_gender_p                 => c02_w.ds_gender,
                            dt_birthdate_p              => c02_w.dt_birthdate,
                            ds_age_range_p              => c02_w.qt_patient_age,
                            ds_symptoms_p               => c02_w.ds_problem,
                            ds_dnr_status_p             => c02_w.cd_code_status,
                            ds_physician_p              => c02_w.nm_physician,
                            ds_special_request_p        => c02_w.ds_special_requests,
                            ds_care_status_p            => c02_w.ds_care_status,
                            ds_checklist_p              => c02_w.ds_checklist,
                            ie_over_threshold_p         => ie_over_threshold_w,
                            dt_expected_discharge_p     => c02_w.dt_expected_discharge,
                            dt_request_p                => c02_w.dt_svc_request,
                            ds_discharge_disposition_p  => c02_w.ds_discharge_disposition,
                            ie_discharge_order_status_p => ie_discharge_order_status_w,
                            ie_transfer_order_status_p  => ie_transfer_order_status_w,
                            ie_freq_flyer_p             => c02_w.ie_frequent_flyer,
                            ds_readmission_risk_p       => c02_w.ds_readmission_risk,
                            ds_readm_risk_contrb_p      => c02_w.ds_readm_risk_contrb,
                            ds_rec_pat_adm_data_p       => c02_w.ds_recur_pat_adm_data,
                            ds_rec_pat_comorbd_p        => c02_w.ds_recur_pat_comorbd,
                            ds_rec_pat_reasons_p        => c02_w.ds_recur_pat_reasons,
                            qt_edi_score_p              => c02_w.qt_trs,
                            ds_edi_vitals_warn_p        => c02_w.ds_edi_vitals_warn,
                            ds_edi_contrb_p             => c02_w.ds_edi_contrb,
                            vl_los_remaining_p          => c02_w.vl_los_remaining,
                            cd_classification_p         => c02_w.si_classif,
                            nr_seq_encounter_p          => c02_w.nr_seq_encounter,
                            ds_admit_source_p           => c02_w.ds_admit_source
                        );
                    end if;

                    if (c02_w.ie_census IS NOT NULL AND c02_w.ie_census::text <> '') then
                        qt_beds_w := qt_beds_w + 1;
                    end if;
                    if (c02_w.ie_total_beds = PFCS_PCK_CONSTANTS.IE_YES) then
                        qt_census_beds_w := qt_census_beds_w + 1;
                    end if;
                    if (c02_w.ie_census = 'B') then
                        qt_blocked_beds_w := qt_blocked_beds_w + 1;
                    end if;
                    if (c02_w.ie_census = 'A' and ie_occupied_w = PFCS_PCK_CONSTANTS.IE_NO) then
                        qt_available_beds_w := qt_available_beds_w + 1;
                    end if;

                end if;
            end loop;

             := pfcs_pck.pfcs_generate_results(
                ds_reference_value_p => ds_unit_w, cd_reference_value_p => cd_unit_w, cd_reference_aux_p => cd_unit_classification_w, vl_indicator_p => qt_census_beds_w, vl_indicator_help_p => qt_occupied_beds_w, nr_seq_indicator_p => nr_seq_indicator_w, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);
            pfcs_pck.pfcs_generate_results(
                ds_reference_value_p => ds_unit_w,
                cd_reference_value_p => cd_unit_w,
                cd_reference_aux_p => cd_unit_classification_w,
                vl_indicator_p => qt_available_beds_w,
                vl_indicator_help_p => (qt_beds_w - qt_blocked_beds_w),
                nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_AVAILABLE_BEDS,
                nr_seq_operational_level_p => cd_establishment_p,
                nm_usuario_p => nm_user_p,
                nr_seq_panel_p => pfcs_panel_seq_w);
             := pfcs_pck.pfcs_generate_results(
                ds_reference_value_p => ds_unit_w, cd_reference_value_p => cd_unit_w, cd_reference_aux_p => cd_unit_classification_w, vl_indicator_p => qt_blocked_beds_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_UNAVAILABLE_BEDS, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);
             := pfcs_pck.pfcs_generate_results(
                ds_reference_value_p => ds_unit_w, cd_reference_value_p => cd_unit_w, cd_reference_aux_p => cd_unit_classification_w, vl_indicator_p => qt_discharge_orders_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_DISCHARGE_ORDERS, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);
             := pfcs_pck.pfcs_generate_results(
                ds_reference_value_p => ds_unit_w, cd_reference_value_p => cd_unit_w, cd_reference_aux_p => cd_unit_classification_w, vl_indicator_p => qt_discharge_delays_w, nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_DISCHARGE_DELAYS, nr_seq_operational_level_p => cd_establishment_p, nm_usuario_p => nm_user_p, nr_seq_panel_p => pfcs_panel_seq_w);
        end loop;

            CALL pfcs_pck.pfcs_update_detail(
                    nr_seq_indicator_p => nr_seq_indicator_w,
                    nr_seq_panel_p => pfcs_panel_seq_w,
                    nr_seq_operational_level_p => cd_establishment_p,
                    nm_usuario_p => nm_user_p);

            CALL pfcs_pck.pfcs_activate_records(
                    nr_seq_indicator_p => nr_seq_indicator_w,
                    nr_seq_operational_level_p => cd_establishment_p,
                    nm_usuario_p => nm_user_p);
            CALL pfcs_pck.pfcs_activate_records(
                    nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_AVAILABLE_BEDS,
                    nr_seq_operational_level_p => cd_establishment_p,
                    nm_usuario_p => nm_user_p);
            CALL pfcs_pck.pfcs_activate_records(
                    nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_UNAVAILABLE_BEDS,
                    nr_seq_operational_level_p => cd_establishment_p,
                    nm_usuario_p => nm_user_p);
            CALL pfcs_pck.pfcs_activate_records(
                    nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_DISCHARGE_ORDERS,
                    nr_seq_operational_level_p => cd_establishment_p,
                    nm_usuario_p => nm_user_p);
            CALL pfcs_pck.pfcs_activate_records(
                    nr_seq_indicator_p => PFCS_PCK_INDICATORS.NR_VC_DISCHARGE_DELAYS,
                    nr_seq_operational_level_p => cd_establishment_p,
                    nm_usuario_p => nm_user_p);
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_census.calc_occupancy ( cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;
