-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pfcs_pck_census.get_care_status ( cd_establishment_p bigint, cd_unit_p bigint, cd_unit_classification_p text, cd_category_p text, ie_over_threshold_p text) RETURNS bigint AS $body$
DECLARE

        ie_stepdown_w varchar(1);
        cd_unit_classification_w varchar(2);
        qt_care_status_count_w integer;

BEGIN
        if (cd_unit_classification_p = PFCS_PCK_CONSTANTS.CD_TCU) then
            ie_stepdown_w := PFCS_PCK_CONSTANTS.IE_YES_BR;
            cd_unit_classification_w := PFCS_PCK_CONSTANTS.CD_ICU;
        else
            cd_unit_classification_w := cd_unit_classification_p;
        end if;

        select count(enc.nr_sequencia)
        into STRICT qt_care_status_count_w
        from pfcs_encounter enc,
            pfcs_patient pat,
            unidade_atendimento uni,
            setor_atendimento sec,
            pfcs_procedure prc,
            pfcs_service_request svc
        where uni.nr_seq_location = coalesce(enc.nr_seq_location, pfcs_get_pat_location(pat.nr_sequencia, enc.nr_sequencia))
            and uni.cd_setor_atendimento = sec.cd_setor_atendimento
            and uni.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
            and sec.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
            and ((sec.cd_classif_setor = cd_unit_classification_w) or (coalesce(cd_unit_classification_w::text, '') = '' and sec.ie_ocup_hospitalar <> 'N'))
            and ((sec.cd_setor_atendimento = cd_unit_p) or (coalesce(cd_unit_p::text, '') = ''))
            and (sec.ie_semi_intensiva = ie_stepdown_w or coalesce(ie_stepdown_w::text, '') = '')
            and sec.cd_estabelecimento = cd_establishment_p
            and enc.nr_seq_patient = pat.nr_sequencia
            and (enc.period_start IS NOT NULL AND enc.period_start::text <> '')
            and prc.nr_seq_encounter = enc.nr_sequencia
            and (prc.period_start IS NOT NULL AND prc.period_start::text <> '')
            and upper(prc.si_status) = PFCS_PCK_CONSTANTS.SI_STATUS_IN_PROGRESS
            and svc.nr_seq_encounter = enc.nr_sequencia
            and svc.nr_seq_patient = pat.nr_sequencia
            and pfcs_pck_utils.validate_inpatient_request(
                    svc.cd_service, svc.si_status,  svc.si_intent) = PFCS_PCK_CONSTANTS.IE_YES
            and ((prc.period_end < clock_timestamp()) or (coalesce(ie_over_threshold_p, PFCS_PCK_CONSTANTS.IE_NO) = PFCS_PCK_CONSTANTS.IE_NO))
            and ((upper(prc.cd_category) = upper(cd_category_p)) or (coalesce(cd_category_p::text, '') = ''));
        return qt_care_status_count_w;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pfcs_pck_census.get_care_status ( cd_establishment_p bigint, cd_unit_p bigint, cd_unit_classification_p text, cd_category_p text, ie_over_threshold_p text) FROM PUBLIC;
