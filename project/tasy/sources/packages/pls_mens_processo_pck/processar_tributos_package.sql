-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_processo_pck.processar_tributos ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


vl_tributo_w			double precision;
vl_diferenca_w			double precision;
nr_seq_nota_credito_w		nota_credito.nr_sequencia%type;
vl_soma_total_nc_w		double precision;
qt_beneficiario_w		bigint;
vl_nota_credito_benef_w		double precision;
ie_possui_nc_tributacao_w	varchar(2);
nr_seq_mensalidade_seg_item_w	pls_mensalidade_seg_item.nr_sequencia%type;
vl_diferenca_ww			double precision;
ie_atualizar_mens_nc_w		varchar(1) := 'N';
		
C01 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type,
		nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade,
		a.dt_referencia,
		c.nr_seq_contrato,
		c.nr_seq_pagador_intercambio nr_seq_intercambio,
		c.cd_cgc,
		c.cd_pessoa_fisica,
		(SELECT	sum(x.vl_item)
		from	pls_mensalidade_seg_item x,
			pls_mensalidade_segurado y
		where	y.nr_sequencia = x.nr_seq_mensalidade_seg
		and	y.nr_seq_mensalidade = a.nr_sequencia) vl_mensalidade
	from	pls_mensalidade	a,
		pls_lote_mensalidade b,
		pls_contrato_pagador c
	where	b.nr_sequencia	= a.nr_seq_lote
	and	c.nr_sequencia	= a.nr_seq_pagador
	and	b.nr_sequencia	= nr_seq_lote_pc
	and	((a.nr_sequencia = nr_seq_mensalidade_pc) or (coalesce(nr_seq_mensalidade_pc::text, '') = ''));

C05 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg
	from	pls_mensalidade_segurado a
	where	a.nr_seq_mensalidade = nr_seq_mensalidade_pc
	and	(	coalesce( (	SELECT	sum(x.vl_item)
				from	pls_mensalidade_seg_item x
				where	a.nr_sequencia = x.nr_seq_mensalidade_seg
				and	x.ie_tipo_mensalidade not in ('P')),0) > 0);
	
BEGIN

for r_c01_w in C01(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	CALL pls_mens_tributos_pck.gerar_tributos(r_c01_w.nr_seq_mensalidade, r_c01_w.dt_referencia, r_c01_w.cd_cgc, r_c01_w.cd_pessoa_fisica,
				r_c01_w.nr_seq_contrato, r_c01_w.nr_seq_intercambio, cd_estabelecimento_p, nm_usuario_p);
	end;
end loop; --C01

CALL exec_sql_dinamico(nm_usuario_p, 'truncate table pls_mensalidade_seg_tmp');
CALL exec_sql_dinamico(nm_usuario_p, 'truncate table pls_mensalidade_tmp');

for r_c01_w in c01(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	
	select	coalesce(sum(d.vl_tributo), 0)
	into STRICT	vl_tributo_w
	from	pls_mensalidade_seg_item a,
		pls_mensalidade_segurado b,
		pls_mensalidade c,
		pls_mensalidade_trib d
	where	b.nr_sequencia = a.nr_seq_mensalidade_seg
	and	c.nr_sequencia = b.nr_seq_mensalidade
	and	a.nr_sequencia = d.nr_seq_item_mens
	and	c.nr_sequencia = r_c01_w.nr_seq_mensalidade
	and (d.ie_retencao = 'D' or (d.ie_retencao = 'N' and d.ie_origem_tributo = 'CD'));
	
	vl_soma_total_nc_w	:= 0;
	vl_nota_credito_benef_w := 0;
	
	if (vl_tributo_w > r_c01_w.vl_mensalidade) then
		select	max(a.nr_seq_nota_credito)
		into STRICT	nr_seq_nota_credito_w
		from	pls_mensalidade_seg_item a,
			pls_mensalidade_segurado b,
			pls_mensalidade c
		where	c.nr_sequencia = b.nr_seq_mensalidade
		and	b.nr_sequencia = a.nr_seq_mensalidade_seg
		and	c.nr_sequencia = r_c01_w.nr_seq_mensalidade
		and	(a.nr_seq_nota_credito IS NOT NULL AND a.nr_seq_nota_credito::text <> '');
		
		if (nr_seq_nota_credito_w IS NOT NULL AND nr_seq_nota_credito_w::text <> '') then
			vl_diferenca_w	:= vl_tributo_w - r_c01_w.vl_mensalidade;
			
			ie_possui_nc_tributacao_w := 'N';
			
			select	count(1)
			into STRICT	qt_beneficiario_w
			from	pls_mensalidade_segurado a
			where	a.nr_seq_mensalidade = r_c01_w.nr_seq_mensalidade
			and	(	coalesce( (	SELECT	sum(x.vl_item)
						from	pls_mensalidade_seg_item x
						where	a.nr_sequencia = x.nr_seq_mensalidade_seg
						and	x.ie_tipo_mensalidade not in ('P')),0) > 0);

			for r_c05_w in c05(r_c01_w.nr_seq_mensalidade) loop
				begin
				
				ie_possui_nc_tributacao_w := 'S';
				ie_atualizar_mens_nc_w	:= 'S';
				
				vl_nota_credito_benef_w	:= dividir_sem_round(vl_diferenca_w, qt_beneficiario_w);
				
				insert	into	pls_mensalidade_seg_item(	nr_sequencia, nr_seq_mensalidade_seg, ie_tipo_item, vl_item, ie_tipo_mensalidade,
						nm_usuario, nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec,
						nr_seq_nota_credito, nr_seq_lote, vl_ato_nao_coop_pro_rata, vl_antecipacao)
				values (	nextval('pls_mensalidade_seg_item_seq'), r_c05_w.nr_seq_mensalidade_seg, '27', vl_nota_credito_benef_w, 'P',
						nm_usuario_p, nm_usuario_p, clock_timestamp(), clock_timestamp(),
						nr_seq_nota_credito_w, nr_seq_lote_p, vl_nota_credito_benef_w, 0)
					returning nr_sequencia into nr_seq_mensalidade_seg_item_w;
				
				insert into pls_mensalidade_seg_tmp values (r_c05_w.nr_seq_mensalidade_seg);
				
				vl_soma_total_nc_w := vl_soma_total_nc_w + vl_nota_credito_benef_w;
				
				end;
			end loop;
			
			if (ie_possui_nc_tributacao_w = 'S') then
				vl_diferenca_ww := 0;
				
				if (vl_soma_total_nc_w <> vl_diferenca_w) then
				
					vl_diferenca_ww	:= vl_soma_total_nc_w - vl_diferenca_w;
				
					update	pls_mensalidade_seg_item
					set	vl_item = vl_item - vl_diferenca_ww
					where	nr_sequencia = nr_seq_mensalidade_seg_item_w;
				end if;
				
				insert into pls_mensalidade_tmp values (r_c01_w.nr_seq_mensalidade);
				
				CALL atualizar_saldo_nota_credito(nr_seq_nota_credito_w, nm_usuario_p);
			end if;
		end if;
	end if;
	end;
end loop;

if (ie_atualizar_mens_nc_w = 'S') then
	CALL pls_mens_atualizacao_pck.atualizar_valores_lote(nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p, 'NC');
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_processo_pck.processar_tributos ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
