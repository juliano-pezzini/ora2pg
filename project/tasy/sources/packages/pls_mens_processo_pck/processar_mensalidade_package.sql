-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_processo_pck.processar_mensalidade (nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, dt_mesano_referencia_p pls_lote_mensalidade.dt_mesano_referencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_regra_vl_minimo_w	pls_regra_mens_contrato.nr_sequencia%type;
vl_minimo_w			pls_regra_mens_contrato.vl_minimo%type;
vl_minimo_abat_fatura_w		pls_regra_mens_contrato.vl_minimo_abat_fatura%type;

nr_seq_log_w			pls_mens_log_geracao.nr_sequencia%type;
dt_auxiliar_w			timestamp;
qt_cobranca_adap_w		integer;
dt_inicio_cobertura_w		timestamp;
dt_fim_cobertura_w		timestamp;
nr_seq_item_pre_w		pls_mensalidade_seg_item.nr_sequencia%type;
vl_adaptacao_w			pls_mensalidade_seg_item.vl_item%type;
ds_observacao_w			varchar(255);
qt_dias_prop_w			bigint;
qt_dias_cobertura_w		bigint;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;
ie_mens_adaptacao_retro_w	pls_parametros.ie_mens_adaptacao_retro%type;

C01 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type,
		nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade,
		a.dt_referencia,
		a.ie_tipo_estipulante,
		a.nr_parcela,
		a.nr_seq_pagador,
		a.nr_seq_pagador_fin,
		a.nr_seq_conta_banco,
		a.nr_seq_forma_cobranca,
		b.dt_mesano_referencia dt_referencia_lote,
		c.nr_seq_contrato,
		c.nr_seq_pagador_intercambio nr_seq_intercambio,
		coalesce(c.ie_taxa_emissao_boleto,'N') ie_taxa_emissao_boleto,
		c.nr_seq_classif_itens,
		c.cd_cgc,
		c.cd_pessoa_fisica,
		(SELECT	sum(x.vl_item)
		from	pls_mensalidade_seg_item x,
			pls_mensalidade_segurado y
		where	y.nr_sequencia = x.nr_seq_mensalidade_seg
		and	y.nr_seq_mensalidade = a.nr_sequencia) vl_mensalidade,
		a.nr_seq_motivo_susp
	from	pls_mensalidade	a,
		pls_lote_mensalidade b,
		pls_contrato_pagador c
	where	b.nr_sequencia	= a.nr_seq_lote
	and	c.nr_sequencia	= a.nr_seq_pagador
	and	b.nr_sequencia	= nr_seq_lote_pc
	and	((a.nr_sequencia = nr_seq_mensalidade_pc) or (coalesce(nr_seq_mensalidade_pc::text, '') = ''));

--Cursor para gerar bonificacao

C02 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type,
		nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg,
		a.dt_mesano_referencia,
		a.nr_seq_segurado,
		a.qt_idade,
		a.nr_parcela,
		a.nr_parcela_contrato,
		a.nr_seq_segurado_preco,
		a.dt_inicio_cobertura,
		a.dt_fim_cobertura,
		a.ie_remido,
		b.nr_sequencia nr_seq_mensalidade,
		b.nr_seq_pagador,
		b.nr_seq_forma_cobranca,
		c.nr_seq_titular,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		c.nr_seq_parentesco,
		c.ie_acao_contrato,
		c.cd_pessoa_fisica,
		c.ie_situacao_trabalhista
	from	pls_mensalidade_segurado a,
		pls_mensalidade b,
		pls_segurado c
	where	c.nr_sequencia		= a.nr_seq_segurado
	and	b.nr_sequencia		= a.nr_seq_mensalidade
	and	b.nr_seq_lote		= nr_seq_lote_pc
	and	((b.nr_sequencia = nr_seq_mensalidade_pc) or (coalesce(nr_seq_mensalidade_pc::text, '') = ''))
	and	exists (SELECT	1 --Gerar bonificacao somente se existir itens para a mensalidade
			from	pls_mensalidade_seg_item x
			where	a.nr_sequencia	= x.nr_seq_mensalidade_seg);

C03 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type,
		nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg,
		a.dt_mesano_referencia,
		a.nr_seq_segurado,
		b.nr_sequencia nr_seq_mensalidade,
		(	SELECT	max(x.dt_alteracao)
			from	pls_segurado_alt_plano x
			where	x.nr_seq_segurado = c.nr_sequencia
			and	x.ie_situacao = 'A'
			and	x.nr_seq_plano_atual = c.nr_seq_plano) dt_adaptacao,
		d.vl_item,
		d.nr_seq_plano,
		e.tx_adaptacao
	from	pls_mensalidade_seg_item d,
		pls_mensalidade_segurado a,
		pls_mensalidade b,
		pls_segurado c,
		pls_tabela_preco e
	where	a.nr_sequencia	= d.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= a.nr_seq_segurado
	and	b.nr_sequencia	= a.nr_seq_mensalidade
	and	e.nr_sequencia	= c.nr_seq_tabela
	and	b.nr_seq_lote	= nr_seq_lote_pc
	and	((b.nr_sequencia = nr_seq_mensalidade_pc) or (coalesce(nr_seq_mensalidade_pc::text, '') = ''))
	and	d.ie_tipo_item	= '31'
	order by a.dt_mesano_referencia;

C04 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type,
		nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	a.nr_seq_lancamento_mens
	from	pls_mensalidade_seg_item a,
		pls_mensalidade_segurado b,
		pls_mensalidade c
	where	c.nr_sequencia = b.nr_seq_mensalidade
	and	b.nr_sequencia = a.nr_seq_mensalidade_seg
	and	((c.nr_sequencia = nr_seq_mensalidade_pc) or (coalesce(nr_seq_mensalidade_pc::text, '') = ''))
	and	c.nr_seq_lote	= nr_seq_lote_pc
	and	(a.nr_seq_lancamento_mens IS NOT NULL AND a.nr_seq_lancamento_mens::text <> '')
	group by
		a.nr_seq_lancamento_mens;

c06 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type,
		nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	b.nr_seq_segurado_preco,
		b.nr_seq_segurado,
		e.dt_reajuste,
		b.nr_seq_regra_susp_reaj_fx
	from	pls_mensalidade a,
		pls_mensalidade_segurado b,
		pls_mensalidade_seg_item c,
		pls_segurado_preco e
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
	and	e.nr_sequencia	= b.nr_seq_segurado_preco
	and	(b.nr_seq_regra_susp_reaj_fx IS NOT NULL AND b.nr_seq_regra_susp_reaj_fx::text <> '')
	and	a.nr_seq_lote = nr_seq_lote_pc
	and	((a.nr_sequencia = nr_seq_mensalidade_pc) or (coalesce(nr_seq_mensalidade_pc::text, '') = ''))
	and	c.ie_tipo_item = '5';

c07 CURSOR(	nr_seq_item_mens_pc	pls_mensalidade_seg_item.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_item_mens_aprop
	from	pls_mens_seg_item_aprop
	where	nr_seq_item = nr_seq_item_mens_pc;

BEGIN

PERFORM set_config('pls_mens_processo_pck.cd_estabelecimento_w', cd_estabelecimento_p, false);
PERFORM set_config('pls_mens_processo_pck.nm_usuario_w', nm_usuario_p, false);

update	pls_segurado_preco
set	ie_situacao			= 'I'
where	(nr_seq_regra_susp_reaj_fx IS NOT NULL AND nr_seq_regra_susp_reaj_fx::text <> '')
and	nr_seq_lote_mens		= nr_seq_lote_p
and	cd_motivo_reajuste		= 'E'
and	ie_situacao			= 'A';
	
for r_c06_w in c06(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	update	pls_segurado_preco
	set	ie_situacao			= 'A',
		nr_seq_regra_susp_reaj_fx	= r_c06_w.nr_seq_regra_susp_reaj_fx,
		ds_observacao			 = NULL
	where	nr_seq_segurado			= r_c06_w.nr_seq_segurado
	and	cd_motivo_reajuste		= 'SF'
	and	dt_reajuste			= add_months(r_c06_w.dt_reajuste,1);
	end;
end loop;

begin
	select	ie_mens_adaptacao_retro
	into STRICT	ie_mens_adaptacao_retro_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_mens_adaptacao_retro_w := 'N';
end;

if (ie_mens_adaptacao_retro_w = 'S') and (pls_mens_itens_pck.obter_se_item_grupo('40',null) = 'S') then
	--Gerar taxa de adaptacao retroativa

	for r_c03_w in C03(nr_seq_lote_p, nr_seq_mensalidade_p) loop
		begin
		if (add_months(trunc(r_c03_w.dt_adaptacao,'month'),3) >= r_c03_w.dt_mesano_referencia) then
			dt_auxiliar_w	:= add_months(r_c03_w.dt_mesano_referencia,-1);
			
			while(dt_auxiliar_w >= trunc(r_c03_w.dt_adaptacao,'month')) loop
				begin
				select	count(1)
				into STRICT	qt_cobranca_adap_w
				
				where	exists (SELECT	1
						from	pls_mensalidade_seg_item a,
							pls_segurado		d,
							pls_mensalidade_segurado b,
							pls_mensalidade		c
						where	a.nr_seq_mensalidade_seg = b.nr_sequencia
						and	b.nr_seq_segurado	= d.nr_sequencia
						and	b.nr_seq_mensalidade	= c.nr_sequencia
						and	coalesce(c.ie_cancelamento::text, '') = ''
						and	d.nr_sequencia		= r_c03_w.nr_seq_segurado
						and	b.dt_mesano_referencia	= dt_auxiliar_w
						and	a.ie_tipo_item		= '31');
				
				if (qt_cobranca_adap_w = 0) then
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_item_pre_w
					from	pls_mensalidade_seg_item a,
						pls_segurado		d,
						pls_mensalidade_segurado b,
						pls_mensalidade		c
					where	a.nr_seq_mensalidade_seg = b.nr_sequencia
					and	b.nr_seq_segurado	= d.nr_sequencia
					and	b.nr_seq_mensalidade	= c.nr_sequencia
					and	coalesce(c.ie_cancelamento::text, '') = ''
					and	d.nr_sequencia		= r_c03_w.nr_seq_segurado
					and	b.dt_mesano_referencia	= dt_auxiliar_w
					and	a.ie_tipo_item		= '1';
					
					if (nr_seq_item_pre_w IS NOT NULL AND nr_seq_item_pre_w::text <> '') then
						select	b.dt_inicio_cobertura,
							b.dt_fim_cobertura,
							a.vl_item
						into STRICT	dt_inicio_cobertura_w,
							dt_fim_cobertura_w,
							vl_item_w
						from	pls_mensalidade_seg_item a,
							pls_mensalidade_segurado b
						where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
						and	a.nr_sequencia	= nr_seq_item_pre_w;
						
						if (r_c03_w.dt_adaptacao between dt_inicio_cobertura_w and dt_fim_cobertura_w) then
							vl_adaptacao_w	:= (vl_item_w * r_c03_w.tx_adaptacao) / 100; --Preca calcular o valor proporcional referente ao valor que foi gerado de mensalidade no mes da daptacao
							
							qt_dias_prop_w		:= (trunc(dt_fim_cobertura_w,'dd') - trunc(r_c03_w.dt_adaptacao,'dd')) + 1;
							if (pls_mensalidade_util_pck.get_ie_data_base_proporcional = 'T') then
								vl_adaptacao_w		:= (vl_adaptacao_w * ((qt_dias_prop_w * 100) / 30)) / 100;
							else
								qt_dias_cobertura_w	:= (trunc(dt_fim_cobertura_w,'dd') - trunc(dt_inicio_cobertura_w,'dd')) + 1;
								vl_adaptacao_w		:= (vl_adaptacao_w * ((qt_dias_prop_w * 100) / qt_dias_cobertura_w)) / 100;
							end if;
							ds_observacao_w		:= wheb_mensagem_pck.get_texto(1109035,'DT_ADAPTACAO='||to_char(r_c03_w.dt_adaptacao,'dd/mm/yyyy')||';DT_FIM_COBERTURA='||to_char(dt_fim_cobertura_w,'dd/mm/yyyy')||';VL_ADAPTACAO='||vl_adaptacao_w);
						else
							vl_adaptacao_w	:= r_c03_w.vl_item;
							ds_observacao_w	:= wheb_mensagem_pck.get_texto(1109034, 'DT_AUXILIAR='||dt_auxiliar_w||';VL_ADAPTACAO='||vl_adaptacao_w);
						end if;
						
						insert	into	pls_mensalidade_seg_item(	nr_sequencia, nr_seq_mensalidade_seg, nr_seq_lote,
								dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
								ie_tipo_item, vl_item, ie_tipo_mensalidade, ds_observacao,
								nr_seq_plano, vl_sca_embutido, dt_inicio_cobertura, dt_fim_cobertura)
							values (	nextval('pls_mensalidade_seg_item_seq'), r_c03_w.nr_seq_mensalidade_seg, nr_seq_lote_p,
								clock_timestamp(), clock_timestamp(), current_setting('pls_mens_processo_pck.nm_usuario_w')::usuario.nm_usuario%type, current_setting('pls_mens_processo_pck.nm_usuario_w')::usuario.nm_usuario%type,
								'40', vl_adaptacao_w, 'N', ds_observacao_w,
								r_c03_w.nr_seq_plano, 0, dt_inicio_cobertura_w, dt_fim_cobertura_w);
					end if;
					dt_auxiliar_w	:= add_months(dt_auxiliar_w,-1);
				else
					dt_auxiliar_w	:= r_c03_w.dt_adaptacao-1; --Coloca data anterior a adatacao para sair do while se encontrou taxa de adaptacao cobrada
				end if;
				end;
			end loop;
			
		end if;
		end;
	end loop; --C03

end if;

--Gerar bonificacao

if (pls_mens_itens_pck.obter_se_item_grupo('14',null) = 'S') then
	pls_mens_gravar_log_geracao(nr_seq_lote_p, '8', 'I', nm_usuario_p, nr_seq_log_w);
	current_setting('pls_mens_processo_pck.tb_nr_seq_mensalidade_seg_w')::pls_util_cta_pck.t_number_table.delete;
	CALL pls_mens_processo_pck.inserir_bonificacao(nr_seq_lote_p, nm_usuario_p);
	for r_c02_w in C02(nr_seq_lote_p, nr_seq_mensalidade_p) loop
		begin
		CALL pls_mens_item_bonificacao(	r_c02_w.nr_seq_mensalidade_seg,
				r_c02_w.dt_mesano_referencia,
				r_c02_w.nr_seq_segurado,
				r_c02_w.qt_idade,
				r_c02_w.nr_parcela,
				r_c02_w.nr_parcela_contrato,
				r_c02_w.dt_inicio_cobertura,
				r_c02_w.dt_fim_cobertura,
				nr_seq_lote_p,
				r_c02_w.nr_seq_mensalidade,
				r_c02_w.nr_seq_pagador,
				r_c02_w.nr_seq_forma_cobranca,
				r_c02_w.nr_seq_titular,
				r_c02_w.nr_seq_contrato,
				r_c02_w.nr_seq_intercambio,
				r_c02_w.nr_seq_parentesco,
				r_c02_w.ie_acao_contrato,
				r_c02_w.cd_pessoa_fisica,
				r_c02_w.ie_situacao_trabalhista,
				r_c02_w.nr_seq_segurado_preco,
				r_c02_w.ie_remido,
				nm_usuario_p,
				cd_estabelecimento_p);
		
		if (current_setting('pls_mens_processo_pck.nr_indice_bonificacao_w')::integer >= pls_util_pck.qt_registro_transacao_w) then
			CALL pls_mens_processo_pck.inserir_bonificacao(nr_seq_lote_p, nm_usuario_p);
		end if;
		end;
	end loop; --C02

	--Inserir os itens pendentes

	CALL pls_mens_processo_pck.inserir_bonificacao(nr_seq_lote_p, nm_usuario_p);
	pls_mens_gravar_log_geracao(nr_seq_lote_p, '8', 'F', nm_usuario_p, nr_seq_log_w);
end if;

--Gerar itens do pagador

pls_mens_gravar_log_geracao(nr_seq_lote_p, '7', 'I', nm_usuario_p, nr_seq_log_w);
for r_c01_w in C01(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	
	--Gerar lancamento manual para o pagador

	CALL pls_mens_item_lanc_prog_pag(nr_seq_lote_p, r_c01_w.nr_seq_mensalidade, r_c01_w.dt_referencia, r_c01_w.nr_seq_pagador, r_c01_w.nr_seq_motivo_susp, nm_usuario_p);
	
	--Gerar amortizacao

	if (pls_mens_itens_pck.obter_se_item_grupo('16', null) = 'S') and (pls_mens_itens_pck.obter_se_gera_item_suspensao('16', r_c01_w.nr_seq_motivo_susp) = 'S') then
		CALL pls_mens_item_amortizacao(nr_seq_lote_p, r_c01_w.nr_seq_mensalidade, r_c01_w.nr_seq_pagador, r_c01_w.dt_referencia, nm_usuario_p);
	end if;
	
	--Baixar nota de credito

	if (pls_mens_itens_pck.obter_se_item_grupo('27', null) = 'S') and (pls_mens_itens_pck.obter_se_gera_item_suspensao('27', r_c01_w.nr_seq_motivo_susp) = 'S') then
		CALL pls_mens_item_nota_credito(nr_seq_lote_p, r_c01_w.nr_seq_mensalidade, r_c01_w.nr_seq_pagador, nm_usuario_p);
	end if;
	
	--Gerar taxa de emissao de boleto

	if (r_c01_w.ie_taxa_emissao_boleto <> 'N') and (pls_mens_itens_pck.obter_se_item_grupo('17',null) = 'S') and (pls_mens_itens_pck.obter_se_gera_item_suspensao('17', r_c01_w.nr_seq_motivo_susp) = 'S') then
		CALL pls_mens_processo_pck.gerar_taxa_emissao_boleto(nr_seq_lote_p, r_c01_w.nr_seq_mensalidade, r_c01_w.ie_taxa_emissao_boleto, r_c01_w.nr_parcela, r_c01_w.nr_seq_pagador_fin, r_c01_w.dt_referencia);
	end if;
	end;
end loop; --C01
pls_mens_gravar_log_geracao(nr_seq_lote_p, '7', 'F', nm_usuario_p, nr_seq_log_w);

for r_c04_w in c04(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	CALL pls_atualizar_saldo_lanc_prog(r_c04_w.nr_seq_lancamento_mens, 'N');
	end;
end loop;

--Consistir regra de valor minimo e geracao de mensagens

pls_mens_gravar_log_geracao(nr_seq_lote_p, '9', 'I', nm_usuario_p, nr_seq_log_w);
for r_c01_w in C01(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	SELECT * FROM pls_mensalidade_util_pck.obter_regra_vl_minimo(r_c01_w.nr_seq_contrato, r_c01_w.nr_seq_intercambio, r_c01_w.ie_tipo_estipulante, r_c01_w.dt_referencia_lote, nr_seq_regra_vl_minimo_w, vl_minimo_w, vl_minimo_abat_fatura_w) INTO STRICT nr_seq_regra_vl_minimo_w, vl_minimo_w, vl_minimo_abat_fatura_w;
	if (nr_seq_regra_vl_minimo_w IS NOT NULL AND nr_seq_regra_vl_minimo_w::text <> '') then
		if (vl_minimo_w > 0) then
			CALL pls_mens_processo_pck.tratar_valor_minimo_fatura(r_c01_w.nr_seq_mensalidade, vl_minimo_w);
		elsif (vl_minimo_abat_fatura_w >= 0) and (pls_mens_itens_pck.obter_se_item_grupo('28',null) = 'S') then
			CALL pls_mens_processo_pck.tratar_valor_min_abat_fatura(nr_seq_lote_p, r_c01_w.nr_seq_mensalidade, r_c01_w.nr_seq_pagador, r_c01_w.dt_referencia_lote, vl_minimo_abat_fatura_w);
		end if;
	end if;
	end;
end loop; --C01
pls_mens_gravar_log_geracao(nr_seq_lote_p, '9', 'F', nm_usuario_p, nr_seq_log_w);


--Gerar valores ato cooperado

pls_mens_gravar_log_geracao(nr_seq_lote_p, '80', 'I', nm_usuario_p, nr_seq_log_w);
for r_c01_w in C01(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	CALL pls_gerar_valor_ato_cooperado(r_c01_w.nr_seq_mensalidade,null);
	end;
end loop; --C01
pls_mens_gravar_log_geracao(nr_seq_lote_p, '80', 'F', nm_usuario_p, nr_seq_log_w);

--Gerar valores pro-rata dia

pls_mens_gravar_log_geracao(nr_seq_lote_p, '85', 'I', nm_usuario_p, nr_seq_log_w);
for r_c01_w in C01(nr_seq_lote_p, nr_seq_mensalidade_p) loop
	begin
	CALL pls_gerar_pro_rata_dia(r_c01_w.nr_seq_mensalidade);
	end;
end loop; --C01
pls_mens_gravar_log_geracao(nr_seq_lote_p, '85', 'F', nm_usuario_p, nr_seq_log_w);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_processo_pck.processar_mensalidade (nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, dt_mesano_referencia_p pls_lote_mensalidade.dt_mesano_referencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
