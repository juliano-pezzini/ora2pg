-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_processo_pck.tratar_valor_min_abat_fatura ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, dt_referencia_lote_p pls_lote_mensalidade.dt_mesano_referencia%type, vl_minimo_abat_fatura_p pls_regra_mens_contrato.vl_minimo_abat_fatura%type) AS $body$
DECLARE


vl_mensalidade_w		pls_mensalidade_seg_item.vl_item%type;
vl_mens_segurado_w		pls_mensalidade_seg_item.vl_item%type;

C01 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_mensalidade_seg,
		nr_seq_segurado
	from	pls_mensalidade_segurado
	where	nr_seq_mensalidade	= nr_seq_mensalidade_pc;

BEGIN

select	sum(a.vl_item)
into STRICT	vl_mensalidade_w
from	pls_mensalidade_seg_item a,
	pls_mensalidade_segurado b
where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
and	b.nr_seq_mensalidade	= nr_seq_mensalidade_p;

if (vl_mensalidade_w < vl_minimo_abat_fatura_p) then
	for r_c01_w in C01(nr_seq_mensalidade_p) loop
		begin
		
		select	sum(a.vl_item)
		into STRICT	vl_mens_segurado_w
		from	pls_mensalidade_seg_item	a,
			pls_mensalidade_segurado	b
		where	a.nr_seq_mensalidade_seg = b.nr_sequencia
		and	b.nr_sequencia	= r_c01_w.nr_seq_mensalidade_seg;
		
		if (coalesce(vl_mens_segurado_w,0) <> 0) then
			insert	into	pls_mensalidade_seg_item(	nr_sequencia, nr_seq_mensalidade_seg, nr_seq_lote,
				dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
				ie_tipo_item, vl_item, ie_tipo_mensalidade
				)
			values (	nextval('pls_mensalidade_seg_item_seq'), r_c01_w.nr_seq_mensalidade_seg, nr_seq_lote_p,
				clock_timestamp(), clock_timestamp(), current_setting('pls_mens_processo_pck.nm_usuario_w')::usuario.nm_usuario%type, current_setting('pls_mens_processo_pck.nm_usuario_w')::usuario.nm_usuario%type,
				'28', vl_mens_segurado_w*-1, 'P'
				);
			
			-- Lancamento programado para o proximo mes

			insert	into	pls_segurado_mensalidade(	nr_sequencia, nr_seq_segurado, nr_seq_pagador,
					cd_estabelecimento, dt_referencia, ie_tipo_item,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					vl_item, tx_desconto, ie_acao_desfazer,
					ie_situacao, ie_tipo_lanc, nr_seq_mens_seg_gerado,
					ds_observacao
					)
				values (	nextval('pls_segurado_mensalidade_seq'), r_c01_w.nr_seq_segurado, nr_seq_pagador_p,
					current_setting('pls_mens_processo_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type, add_months(dt_referencia_lote_p,1), '29',
					clock_timestamp(), current_setting('pls_mens_processo_pck.nm_usuario_w')::usuario.nm_usuario%type, clock_timestamp(), current_setting('pls_mens_processo_pck.nm_usuario_w')::usuario.nm_usuario%type,
					vl_mens_segurado_w, 0, 'A',
					'A','B', r_c01_w.nr_seq_mensalidade_seg,
					wheb_mensagem_pck.get_texto(391705,'NR_SEQ_LOTE_P='||nr_seq_lote_p)
					);
			commit;
		end if;
		
		end;
	end loop;
end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_processo_pck.tratar_valor_min_abat_fatura ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, dt_referencia_lote_p pls_lote_mensalidade.dt_mesano_referencia%type, vl_minimo_abat_fatura_p pls_regra_mens_contrato.vl_minimo_abat_fatura%type) FROM PUBLIC;
