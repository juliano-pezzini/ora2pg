-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>++++++ VALORES COMPROMETIDOS ++++++<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--

	--VC>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Solicitacao de Compra <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--

	/*
	Objetivo: Retornar o valor comprometido da solcilitacao de compra passada por parametro no projeto recurso passado por parametro.
	Parametros: 
	nr_seq_proj_rec_p = Numero de sequencia do projeto recurso.
	nr_solic_compra_p = Numero da solicitacao de compra.
	*/



CREATE OR REPLACE FUNCTION projeto_recurso_pck.obter_vl_comprometido_solic ( nr_seq_proj_rec_p bigint, nr_solic_compra_p bigint) RETURNS bigint AS $body$
DECLARE

	
	vl_comprometido_w	projeto_recurso_saldo.vl_comprometido%type;
	qt_material_solic_w	solic_compra_item.qt_material%type;	
	qt_material_ordem_w	ordem_compra_item.qt_material%type;	
	vl_unit_previsto_w	solic_compra_item.vl_unit_previsto%type;
	nr_item_solic_compra_w	solic_compra_item.nr_item_solic_compra%type;	
	
		
	c01 CURSOR FOR	
		SELECT	b.qt_material - coalesce(b.qt_material_cancelado,0),
			b.vl_unit_previsto,
			b.nr_item_solic_compra
		from 	solic_compra a,
			solic_compra_item b
		where	a.nr_solic_compra = b.nr_solic_compra
		and	b.nr_seq_proj_rec = nr_seq_proj_rec_p
		and     a.nr_solic_compra = nr_solic_compra_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and     coalesce(a.nr_seq_motivo_cancel::text, '') = ''
		and	b.vl_unit_previsto > 0
		and 	coalesce(b.dt_reprovacao::text, '') = ''
		and	((coalesce(b.dt_baixa::text, '') = '' and coalesce(b.cd_motivo_baixa::text, '') = '')
		or 	(((b.dt_baixa IS NOT NULL AND b.dt_baixa::text <> '') or (b.cd_motivo_baixa IS NOT NULL AND b.cd_motivo_baixa::text <> '')) 
		and 	(b.qt_material - coalesce(b.qt_material_cancelado,0) > (	SELECT 	coalesce(sum(e.qt_prevista_entrega),0)
						from	ordem_compra o,
							ordem_compra_item i,
							ordem_compra_item_entrega e
						where	o.nr_ordem_compra = i.nr_ordem_compra
						and	i.nr_ordem_compra = e.nr_ordem_compra
						and	i.nr_item_oci = e.nr_item_oci
						and	i.nr_solic_compra = b.nr_solic_compra
						and	i.nr_item_solic_compra = b.nr_item_solic_compra
						and	(o.dt_liberacao IS NOT NULL AND o.dt_liberacao::text <> '')
						and 	coalesce(o.nr_seq_motivo_cancel::text, '') = ''
						and	coalesce(e.dt_cancelamento::text, '') = ''))))
		order by 1;
	
	
BEGIN
	
	vl_comprometido_w := 0;
	
	open c01;
	loop
	fetch c01 into
		qt_material_solic_w,
		vl_unit_previsto_w,
		nr_item_solic_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select  coalesce(sum(c.qt_prevista_entrega),0)
		into STRICT	qt_material_ordem_w
		from    ordem_compra a,
			ordem_compra_item b,
			ordem_compra_item_entrega c
		where   a.nr_ordem_compra = b.nr_ordem_compra
		and	b.nr_ordem_compra = c.nr_ordem_compra
		and	b.nr_item_oci = c.nr_item_oci
		and	coalesce(c.dt_cancelamento::text, '') = ''
		and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	coalesce(b.dt_reprovacao::text, '') = ''
		and b.nr_seq_proj_rec = nr_seq_proj_rec_p
		and b.nr_solic_compra = nr_solic_compra_p
		and b.nr_item_solic_compra = nr_item_solic_compra_w
		and coalesce(a.nr_seq_motivo_cancel::text, '') = ''
		order by 1;
		
		if (qt_material_ordem_w <> 0) and (qt_material_solic_w > qt_material_ordem_w) then
			vl_comprometido_w := vl_comprometido_w + ((qt_material_solic_w - qt_material_ordem_w) * vl_unit_previsto_w);
		elsif (qt_material_ordem_w = 0) then
			vl_comprometido_w := vl_comprometido_w + (qt_material_solic_w * vl_unit_previsto_w);
		end if;
		
		end;
	end loop;
	close c01;
		
	return	vl_comprometido_w;
	
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION projeto_recurso_pck.obter_vl_comprometido_solic ( nr_seq_proj_rec_p bigint, nr_solic_compra_p bigint) FROM PUBLIC;
