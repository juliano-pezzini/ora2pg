-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
	--VC>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Projeto possui valor comprometido  (Conceito Booleano)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--

	/*
	Objetivo: Retornar 1 se o projeto passado por parametro possui valor comprometido.
	Parametros: 
	nr_seq_proj_rec_p = Numero de sequencia do projeto recurso.
	*/



CREATE OR REPLACE FUNCTION projeto_recurso_pck.obter_ie_comprometido ( nr_seq_proj_rec_p bigint) RETURNS bigint AS $body$
DECLARE

			
	/*Solicitacao de Compra*/
		
	nr_solic_compra_w		solic_compra.nr_solic_compra%type;

	/*Ordem de Compra*/


	nr_ordem_compra_w		ordem_compra.nr_ordem_compra%type;
			
	
	/*Solicitacao de Compra*/


	c01 CURSOR FOR	
		SELECT  a.nr_solic_compra
		from    solic_compra a
		where   coalesce(a.nr_seq_motivo_cancel::text, '') = ''
		and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and     exists (SELECT  1
				from    solic_compra_item b
				where   b.nr_seq_proj_rec = nr_seq_proj_rec_p
				and	b.vl_unit_previsto > 0
				and 	coalesce(b.dt_reprovacao::text, '') = ''
				and	((coalesce(b.dt_baixa::text, '') = '' and coalesce(b.cd_motivo_baixa::text, '') = '')
				or 	(((b.dt_baixa IS NOT NULL AND b.dt_baixa::text <> '') or (b.cd_motivo_baixa IS NOT NULL AND b.cd_motivo_baixa::text <> '')) 
				and 	(b.qt_material - coalesce(b.qt_material_cancelado,0) > (	select 	coalesce(sum(e.qt_prevista_entrega),0)
						from	ordem_compra o,
							ordem_compra_item i,
							ordem_compra_item_entrega e
						where	o.nr_ordem_compra = i.nr_ordem_compra
						and	i.nr_ordem_compra = e.nr_ordem_compra
						and	i.nr_item_oci = e.nr_item_oci
						and	i.nr_solic_compra = b.nr_solic_compra
						and	i.nr_item_solic_compra = b.nr_item_solic_compra
						and	(o.dt_liberacao IS NOT NULL AND o.dt_liberacao::text <> '')
						and     coalesce(o.nr_seq_motivo_cancel::text, '') = ''
						and	coalesce(e.dt_cancelamento::text, '') = ''))))
				and     a.nr_solic_compra = b.nr_solic_compra);
	
	/*Ordem de Compra*/


	c02 CURSOR FOR
		SELECT nr_ordem_compra
		from ordem_compra_item 
		where nr_seq_proj_rec = nr_seq_proj_rec_p 
		group by nr_ordem_compra;
	
	
BEGIN

	/*Confere se a Solicitacao de Compra nao possui valor comprometido*/


	open c01;
	loop
	fetch c01 into
		nr_solic_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (1 = projeto_recurso_pck.obter_ie_comprometido_solic(nr_seq_proj_rec_p, nr_solic_compra_w)) then
			return 1;
		end if;
	
		end;
	end loop;
	close c01;

	/*Confere se a Ordem de Compra nao possui valor comprometido*/


	open c02;
	loop
	fetch c02 into
		nr_ordem_compra_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
	
		if (0 < projeto_recurso_pck.obter_vl_comprometido_ordem(nr_seq_proj_rec_p, nr_ordem_compra_w)) then
			return 1;
		end if;
	
		end;
	end loop;
	close c02;

	return 0;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION projeto_recurso_pck.obter_ie_comprometido ( nr_seq_proj_rec_p bigint) FROM PUBLIC;
