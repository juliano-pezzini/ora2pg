-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION sus_proc_detalhe_pck.get_qtde_detalhe_proc (cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_detalhe_p text, dt_competencia_p timestamp default clock_timestamp()) RETURNS bigint AS $body$
BEGIN

        if (coalesce(current_setting('sus_proc_detalhe_pck.registros_w')::numeric(38),0) > 0) then
        for i in 1..registros_w loop
                if (current_setting('sus_proc_detalhe_pck.array_dt_compt_ini')::strarray(i) = to_char(dt_competencia_p) and
                        current_setting('sus_proc_detalhe_pck.array_cd_procedimento')::strarray(i) = to_char(cd_procedimento_p) and
                        current_setting('sus_proc_detalhe_pck.array_cd_detalhe')::strarray(i) = to_char(cd_detalhe_p)) then
                        return (current_setting('sus_proc_detalhe_pck.array_ds_retorno')::strarray(i))::numeric;
                end if;
        end loop;
        end if;

        begin
        select	nr_sequencia
        into STRICT	current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
        from	sus_detalhe
        where	cd_detalhe	= cd_detalhe_p  LIMIT 1;
        exception
        when others then
                PERFORM set_config('sus_proc_detalhe_pck.nr_seq_detalhe_w', 0, false);
        end;

        begin
        select	max(dt_compt_ini)
        into STRICT	current_setting('sus_proc_detalhe_pck.dt_compt_ini_w')::sus_detalhe_proc.dt_compt_ini%type
        from	sus_detalhe_proc
        where	nr_seq_detalhe		= current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
        and	cd_procedimento		= cd_procedimento_p
        and	ie_origem_proced	= ie_origem_proced_p;
        end;

        begin
        select	nr_sequencia
        into STRICT	current_setting('sus_proc_detalhe_pck.nr_seq_det_proc_w')::sus_detalhe_proc.nr_sequencia%type
        from	sus_detalhe_proc
        where	nr_seq_detalhe	= current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
        and	cd_procedimento		= cd_procedimento_p
        and	ie_origem_proced	= ie_origem_proced_p
        and	(dt_compt_fim IS NOT NULL AND dt_compt_fim::text <> '')
        and	dt_compt_ini 		= coalesce(current_setting('sus_proc_detalhe_pck.dt_compt_ini_w')::sus_detalhe_proc.dt_compt_ini%type,clock_timestamp())  LIMIT 1;
        exception
        when others then
                PERFORM set_config('sus_proc_detalhe_pck.nr_seq_det_proc_w', 0, false);
        end;


        if (coalesce(current_setting('sus_proc_detalhe_pck.nr_seq_det_proc_w')::sus_detalhe_proc.nr_sequencia%type,0) = 0) then
                begin
                select	count(1)
                into STRICT	current_setting('sus_proc_detalhe_pck.ds_retorno_w')::integer
                from	sus_detalhe_proc
                where	nr_seq_detalhe		= current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
                and	cd_procedimento		= cd_procedimento_p
                and	ie_origem_proced	= ie_origem_proced_p  LIMIT 1;
                end;
        elsif (cd_detalhe_p in ('014','022','023','025','033','040','041','33','40')) then
                begin
                select	count(1)
                into STRICT	current_setting('sus_proc_detalhe_pck.ds_retorno_w')::integer
                from	sus_detalhe_proc
                where	nr_seq_detalhe	= current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
                and	cd_procedimento		= cd_procedimento_p
                and	ie_origem_proced	= ie_origem_proced_p
                and	nr_sequencia		= current_setting('sus_proc_detalhe_pck.nr_seq_det_proc_w')::sus_detalhe_proc.nr_sequencia%type  LIMIT 1;
                end;
        else
                begin
                select	count(1)
                into STRICT	current_setting('sus_proc_detalhe_pck.ds_retorno_w')::integer
                from	sus_detalhe_proc
                where	nr_seq_detalhe	= current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
                and	cd_procedimento		= cd_procedimento_p
                and	ie_origem_proced	= ie_origem_proced_p
                and	nr_sequencia		= current_setting('sus_proc_detalhe_pck.nr_seq_det_proc_w')::sus_detalhe_proc.nr_sequencia%type
                and (establishment_timezone_utils.startOfMonth(dt_competencia_p) <= establishment_timezone_utils.startOfMonth(coalesce(dt_compt_fim,clock_timestamp() + interval '999 days')))  LIMIT 1;
                end;
        end if;

        if (cd_detalhe_p = '10057')then
                begin
                select	nr_sequencia
                into STRICT	current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
                from	sus_detalhe
                where	cd_detalhe	= 10047  LIMIT 1;
                exception
                        when others then
                                PERFORM set_config('sus_proc_detalhe_pck.nr_seq_detalhe_w', 0, false);
                end;			
                begin			
                select	count(1)
                into STRICT	current_setting('sus_proc_detalhe_pck.ds_retorno_w')::integer
                from	sus_detalhe_proc
                where	nr_seq_detalhe		= current_setting('sus_proc_detalhe_pck.nr_seq_detalhe_w')::sus_detalhe.nr_sequencia%type
                and	cd_procedimento		= cd_procedimento_p
                and	ie_origem_proced	= ie_origem_proced_p  LIMIT 1;
                exception
                        when others then
                                PERFORM set_config('sus_proc_detalhe_pck.ds_retorno_w', 0, false);
                end;
        end if;

        PERFORM set_config('sus_proc_detalhe_pck.registros_w', current_setting('sus_proc_detalhe_pck.registros_w')::numeric(38) + 1, false);
        current_setting('sus_proc_detalhe_pck.array_dt_compt_ini')::strarray.extend;
        current_setting('sus_proc_detalhe_pck.array_cd_procedimento')::strarray.extend;
        current_setting('sus_proc_detalhe_pck.array_cd_detalhe')::strarray.extend;
        current_setting('sus_proc_detalhe_pck.array_ds_retorno')::strarray.extend;
        current_setting('sus_proc_detalhe_pck.array_dt_compt_ini')::strarray(current_setting('sus_proc_detalhe_pck.registros_w')::numeric(38)) := dt_competencia_p;
        current_setting('sus_proc_detalhe_pck.array_cd_procedimento')::strarray(current_setting('sus_proc_detalhe_pck.registros_w')::numeric(38)) := cd_procedimento_p;
        current_setting('sus_proc_detalhe_pck.array_cd_detalhe')::strarray(current_setting('sus_proc_detalhe_pck.registros_w')::numeric(38)) := cd_detalhe_p;
        current_setting('sus_proc_detalhe_pck.array_ds_retorno')::strarray(current_setting('sus_proc_detalhe_pck.registros_w')::numeric(38)) := current_setting('sus_proc_detalhe_pck.ds_retorno_w')::integer;

        return coalesce(current_setting('sus_proc_detalhe_pck.ds_retorno_w')::integer,0);
        end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION sus_proc_detalhe_pck.get_qtde_detalhe_proc (cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_detalhe_p text, dt_competencia_p timestamp default clock_timestamp()) FROM PUBLIC;
