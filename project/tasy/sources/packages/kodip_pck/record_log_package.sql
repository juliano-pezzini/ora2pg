-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function kodip_pck.record_log() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE kodip_pck.record_log ( nr_seq_episodio_p bigint, reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM kodip_pck.record_log_atx ( ' || quote_nullable(nr_seq_episodio_p) || ',' || quote_nullable(reg_integracao_p) || ' )';
	SELECT v_ret INTO reg_integracao_p FROM dblink(v_conn_str, v_query) AS p (v_ret gerar_int_padrao.reg_integracao_conv);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE kodip_pck.record_log_atx ( nr_seq_episodio_p bigint, reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv) AS $body$
DECLARE

		
nm_usuario_w	varchar(15);
i		integer;
BEGIN

if (reg_integracao_p.ie_envio_recebe = 'E') then
	nm_usuario_w	:=	'KODIP-SEND';
else
	nm_usuario_w	:=	'KODIP-RECEIVE';
end if;

for i in 0..reg_integracao_p.intpd_log_receb.count-1 loop
	begin
	intpd_gravar_log_recebimento(	
		reg_integracao_p.nr_seq_fila_transmissao,
		reg_integracao_p.intpd_log_receb[i].ds_log,
		nm_usuario_w,
		reg_integracao_p.intpd_log_receb[i].cd_default_message,
		'E');
		
	CALL kodip_pck.generate_case_consist(
		nr_seq_episodio_p,
		nm_usuario_w,
		reg_integracao_p.intpd_log_receb[i].ds_log,
		'E',
		nm_usuario_w);
	end;
end loop;

i	:=	0;
reg_integracao_p.qt_reg_log	:=	0;

for i in 0..reg_integracao_p.intpd_warning_receb.count-1 loop
	begin
	intpd_gravar_log_recebimento(	
		reg_integracao_p.nr_seq_fila_transmissao,
		reg_integracao_p.intpd_warning_receb[i].ds_log,
		nm_usuario_w,
		reg_integracao_p.intpd_warning_receb[i].cd_default_message,
		'W');
		
	CALL kodip_pck.generate_case_consist(
		nr_seq_episodio_p,
		nm_usuario_w,
		reg_integracao_p.intpd_log_receb[i].ds_log,
		'W',
		nm_usuario_w);
	end;
end loop;

reg_integracao_p.qt_reg_warning	:=	0;

reg_integracao_p.intpd_log_receb.delete;
reg_integracao_p.intpd_warning_receb.delete;
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE kodip_pck.record_log ( nr_seq_episodio_p bigint, reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE kodip_pck.record_log_atx ( nr_seq_episodio_p bigint, reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv) FROM PUBLIC;
