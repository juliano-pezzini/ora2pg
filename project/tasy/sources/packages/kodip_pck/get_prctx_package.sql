-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function kodip_pck.get_prctx() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION kodip_pck.get_prctx ( nr_seq_documento_p text, nr_atendimento_p bigint) RETURNS SETOF T_PRCTX AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	T_PRCTX;
BEGIN
	v_query := 'SELECT * FROM kodip_pck.get_prctx_atx ( ' || quote_nullable(nr_seq_documento_p) || ',' || quote_nullable(nr_atendimento_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret T_PRCTX);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;


/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------
'PrCtx'
*/
CREATE OR REPLACE FUNCTION kodip_pck.get_prctx_atx ( nr_seq_documento_p text, nr_atendimento_p bigint) RETURNS SETOF T_PRCTX AS $body$
DECLARE


_ora2pg_r RECORD;
nr_seq_episodio_w		episodio_paciente.nr_sequencia%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
		
r_prctx_w		r_prctx;
BEGIN
CALL kodip_pck.set_seq_fila(null);

begin
nr_seq_episodio_w	:=	somente_numero(nr_seq_documento_p);
nr_atendimento_w	:=	nr_atendimento_p;
SELECT * FROM kodip_pck.inicializacao(nr_seq_episodio_w, nr_atendimento_w, reg_integracao_w) INTO STRICT _ora2pg_r;
 nr_seq_episodio_w := _ora2pg_r.nr_seq_episodio_p; nr_atendimento_w := _ora2pg_r.nr_atendimento_p; reg_integracao_w := _ora2pg_r.reg_integracao_p;

delete	FROM episodio_paciente_consist
where	nr_seq_episodio = nr_seq_episodio_w
and	nm_usuario_nrec like 'KODIP-SEND';

if (reg_integracao_w.nr_seq_fila_transmissao > 0) then
	delete	FROM intpd_log_recebimento
	where	nr_seq_fila = reg_integracao_w.nr_seq_fila_transmissao
	and	nm_usuario = 'KODIP-SEND';
end if;

r_prctx_w.clientid		:=	'standard';
r_prctx_w.userid		:=	coalesce(obter_usuario_ativo,'TASY');
r_prctx_w.isstandalone	:=	'False';
exception
when others then
	rollback;
end;

reg_integracao_w := kodip_pck.record_log(nr_seq_episodio_w, reg_integracao_w);
commit;
RETURN NEXT r_prctx_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION kodip_pck.get_prctx ( nr_seq_documento_p text, nr_atendimento_p bigint) FROM PUBLIC; -- REVOKE ALL ON FUNCTION kodip_pck.get_prctx_atx ( nr_seq_documento_p text, nr_atendimento_p bigint) FROM PUBLIC;
