-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


----------------     GET_UPDATE_NOMINAL_RESPONSE
CREATE OR REPLACE PROCEDURE qsm_nominal_pck.get_update_nominal_response ( nr_sequencia_p bigint, ds_xml_p text) AS $body$
DECLARE


reg_integracao_p		gerar_int_padrao.reg_integracao;
ds_case_w			varchar(32);
ds_client_w			varchar(32);
ds_statistics_year_w		varchar(32);
ds_module_w			varchar(32);
ds_usage_w			varchar(32);
ds_key_w			varchar(32);
ds_group_w			varchar(32);
ds_role_w			varchar(32);
ds_status_w			varchar(32);

xml_w				xml;
ds_erro_w			varchar(4000);

nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_evento_w			intpd_fila_transmissao.ie_evento%type;
nm_usuario_w			intpd_fila_transmissao.nm_usuario%type;
nr_seq_agrupador_w		intpd_fila_transmissao.nr_seq_agrupador%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
diagnostico_doenca_chave_w	dbms_sql.varchar2_table;

C01 CURSOR FOR
	SELECT distinct x.ds_case, x.ds_client, y.moduleId, z.ds_role, z.ds_status
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/nominal' as "nom",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'soapenv:Envelope/soapenv:Body/nom:updateNominalDataResponse/nom:statusData' passing xml_w columns
			ds_case		varchar(32)	path	'@case',
			ds_client	varchar(32)	path	'@client',
			statusData	xml		path	'.') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed' as "qai",
			'http://www.mmm.com/his/qsmed/nominal' as "nom",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'nom:statusData/qai:module' passing x.statusData columns
      moduleId		varchar(32)		path	'@id',
			moduleStatus		xml		path	'qai:status') y,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed' as "qai",
			'http://www.mmm.com/his/qsmed/nominal' as "nom",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'qai:status' passing y.moduleStatus columns
      ds_role		varchar(32)		path	'@role',
			ds_status		varchar(32)		path	'@status') z;

C10 CURSOR FOR
	SELECT	messages
	from	xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/nominal' as "nom",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'soapenv:Envelope/soapenv:Body' passing xml_w columns
			updateNominalDataResponse		xml		path	'nom:updateNominalDataResponse') x,
		xmltable(
			xmlnamespaces(
			'http://www.mmm.com/his/qsmed/nominal' as "nom",
			'http://schemas.xmlsoap.org/soap/envelope/' as "soapenv"),
			'nom:updateNominalDataResponse' passing x.updateNominalDataResponse columns
			messages		xml		path	'nom:messages') z;
BEGIN

xml_w	:= xmlparse(DOCUMENT, convert_from(, 'utf-8'));

select	a.nr_seq_documento,
	a.ie_evento,
	a.nm_usuario,
	a.nr_seq_agrupador
into STRICT	nr_seq_documento_w,
	ie_evento_w,
	nm_usuario_w,
	nr_seq_agrupador_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia		= nr_sequencia_p;

if (ie_evento_w = '82') then
	diagnostico_doenca_chave_w := obter_lista_string(nr_seq_documento_w, obter_desc_expressao(960897));
	nr_atendimento_w := diagnostico_doenca_chave_w(1); --nr_atendimento
elsif (ie_evento_w = '54') then
	nr_atendimento_w := nr_seq_agrupador_w;
elsif (ie_evento_w = '120') or (ie_evento_w = '114') then
	nr_atendimento_w := nr_seq_documento_w;
else
	nr_atendimento_w := 0;
end if;

for r_C01_w in C01 loop
	begin
		if (r_C01_w.ds_role = 'USE' and r_C01_w.ds_status = 'MISSING')then
			reg_integracao_p := gerar_int_padrao.gravar_integracao('129', nr_atendimento_w, nm_usuario_w, reg_integracao_p, r_C01_w.moduleId || ';' || nr_atendimento_w);
		elsif (r_C01_w.ds_role = 'USE' and r_C01_w.ds_status = 'REDUNDANT') then
			reg_integracao_p := gerar_int_padrao.gravar_integracao('432', nr_atendimento_w, nm_usuario_w, reg_integracao_p, nr_atendimento_w);
			exit;
		end if;
	end;
end loop;

for r_C10_w in C10 loop
	begin
		CALL qsm_messages_pck.qsm_process_message( nr_sequencia_p, r_C10_w.messages, 'NOM' );
	end;
end loop;

update	intpd_fila_transmissao
set	ie_status		= 'S',
	ie_response_procedure	= 'S',
	dt_atualizacao		= clock_timestamp(),
	ds_xml_retorno		= ds_xml_p
where	nr_sequencia		= nr_sequencia_p;

commit;

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);

	rollback;

	update	intpd_fila_transmissao
	set	ie_status		= 'E',
		ie_response_procedure	= 'S',
		ds_log			= ds_erro_w,
		dt_atualizacao		= clock_timestamp(),
		ds_xml_retorno		= ds_xml_p
	where	nr_sequencia		= nr_sequencia_p;

	commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qsm_nominal_pck.get_update_nominal_response ( nr_sequencia_p bigint, ds_xml_p text) FROM PUBLIC;
