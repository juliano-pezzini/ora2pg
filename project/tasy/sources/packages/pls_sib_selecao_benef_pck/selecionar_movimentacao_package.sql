-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_sib_selecao_benef_pck.selecionar_movimentacao ( dt_inicio_mov_p pls_sib_lote.dt_inicio_mov%type, dt_fim_mov_p pls_sib_lote.dt_fim_mov%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


indice_w	bigint;

C01 CURSOR FOR  --Inclusão / Reinclusão / Mudança contratual
	SELECT	a.nr_seq_segurado
	from   	pls_segurado_status a,
		pls_segurado b
	where 	a.nr_seq_segurado = b.nr_sequencia
	and	b.ie_tipo_segurado in ('B','R')
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	(a.ie_envio_sib IS NOT NULL AND a.ie_envio_sib::text <> '')
	and 	a.dt_inicial between dt_inicio_mov_p and  dt_fim_mov_p
	and 	b.cd_estabelecimento = cd_estabelecimento_p
	group by a.nr_seq_segurado;

C02 CURSOR FOR  --Cancelamento
	SELECT	a.nr_seq_segurado
	from   	pls_segurado_status a,
		pls_segurado b
	where 	a.nr_seq_segurado = b.nr_sequencia
	and	b.ie_tipo_segurado in ('B','R')
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	(b.cd_cco IS NOT NULL AND b.cd_cco::text <> '')  --Não gera cancelamento se não tiver CCO
	and	(a.ie_exclusao_sib IS NOT NULL AND a.ie_exclusao_sib::text <> '')
	and	a.dt_final between dt_inicio_mov_p and dt_fim_mov_p
	and 	b.cd_estabelecimento = cd_estabelecimento_p
	and 	not exists (	SELECT	1
				from	pls_sib_selecao_temp x
				where	x.nr_seq_segurado = b.nr_sequencia)
	group by a.nr_seq_segurado;

C04 CURSOR FOR  --Retificação - Cadastro do beneficiário
	SELECT	a.nr_seq_segurado
	from	pls_segurado_historico a,
		pls_segurado b
	where 	a.nr_seq_segurado = b.nr_sequencia
	and	b.ie_tipo_segurado in ('B','R')
	and	a.ie_envio_sib = 'S'
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	(b.cd_cco IS NOT NULL AND b.cd_cco::text <> '')  --Não gera retificação se não tiver CCO
	and 	a.dt_ocorrencia_sib between dt_inicio_mov_p and dt_fim_mov_p
	and	b.dt_contratacao <= dt_fim_mov_p
	and 	b.cd_estabelecimento = cd_estabelecimento_p
	and 	not exists (	SELECT	1
				from	pls_sib_selecao_temp x
				where	x.nr_seq_segurado = b.nr_sequencia)
	group by a.nr_seq_segurado;

C05 CURSOR FOR  --Retificação - Cadastro da pessoa física do beneficiário
	SELECT	b.nr_sequencia nr_seq_segurado
	from  	pls_pessoa_fisica_sib a,
		pls_segurado b
	where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	b.ie_tipo_segurado in ('B','R')
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	coalesce(b.dt_cancelamento::text, '') = ''
	and	(b.cd_cco IS NOT NULL AND b.cd_cco::text <> '')  --Não gera retificação se não tiver CCO
	and (coalesce(b.dt_rescisao::text, '') = '' or b.dt_rescisao >= dt_fim_mov_p) --Não gera retificação para beneficiário rescindido
	and 	a.dt_atualizacao between dt_inicio_mov_p and  dt_fim_mov_p  --Não pode utilizar dt_ocorrencia_sib pois a data é truncada por mês
	and	b.dt_contratacao <= dt_fim_mov_p
	and	b.cd_estabelecimento = cd_estabelecimento_p
	and 	not exists (	SELECT	1
				from	pls_sib_selecao_temp x
				where	x.nr_seq_segurado = b.nr_sequencia)
	group by b.nr_sequencia;

C06 CURSOR FOR  --Retificação - Cadastro do Contrato
	SELECT	a.nr_seq_segurado
	from	pls_contrato_historico a,
		pls_contrato b,
		pls_segurado c
	where 	b.nr_sequencia	= a.nr_seq_contrato
	and	b.nr_sequencia	= c.nr_seq_contrato
	and	c.ie_tipo_segurado in ('B','R')
	and	a.ie_tipo_historico = '103'
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	and	coalesce(c.dt_cancelamento::text, '') = ''
	and	(c.cd_cco IS NOT NULL AND c.cd_cco::text <> '')  --Não gera retificação se não tiver CCO
	and 	a.dt_historico between dt_inicio_mov_p and dt_fim_mov_p
	and	c.dt_contratacao <= dt_fim_mov_p
	and 	c.cd_estabelecimento = cd_estabelecimento_p
	and 	not exists (	SELECT	1
				from	pls_sib_selecao_temp x
				where	x.nr_seq_segurado = c.nr_sequencia)
	group by a.nr_seq_segurado;
BEGIN
indice_w := 0;
current_setting('pls_sib_selecao_benef_pck.tb_nr_seq_segurado_w')::pls_util_cta_pck.t_number_table.delete;

for r_c01_w in C01 loop
	current_setting('pls_sib_selecao_benef_pck.tb_nr_seq_segurado_w')::pls_util_cta_pck.t_number_table(indice_w) := r_c01_w.nr_seq_segurado;
	indice_w := indice_w + 1;
	if (indice_w = pls_util_pck.qt_registro_transacao_w) then
		CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();
		indice_w := 0;
	end if;
end loop;

CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();

for r_c02_w in C02 loop
	current_setting('pls_sib_selecao_benef_pck.tb_nr_seq_segurado_w')::pls_util_cta_pck.t_number_table(indice_w) := r_c02_w.nr_seq_segurado;
	indice_w := indice_w + 1;
	if (indice_w = pls_util_pck.qt_registro_transacao_w) then
		CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();
		indice_w := 0;
	end if;
end loop;

CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();

for r_c04_w in C04 loop
	current_setting('pls_sib_selecao_benef_pck.tb_nr_seq_segurado_w')::pls_util_cta_pck.t_number_table(indice_w) := r_c04_w.nr_seq_segurado;
	indice_w := indice_w + 1;
	if (indice_w =pls_util_pck.qt_registro_transacao_w) then
		CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();
		indice_w := 0;
	end if;
end loop;

CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();

for r_c05_w in C05 loop
	current_setting('pls_sib_selecao_benef_pck.tb_nr_seq_segurado_w')::pls_util_cta_pck.t_number_table(indice_w) := r_c05_w.nr_seq_segurado;
	indice_w := indice_w + 1;
	if (indice_w = pls_util_pck.qt_registro_transacao_w) then
		CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();
		indice_w := 0;
	end if;
end loop;

CALL pls_sib_selecao_benef_pck.inserir_sib_selecao();

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_selecao_benef_pck.selecionar_movimentacao ( dt_inicio_mov_p pls_sib_lote.dt_inicio_mov%type, dt_fim_mov_p pls_sib_lote.dt_fim_mov%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
