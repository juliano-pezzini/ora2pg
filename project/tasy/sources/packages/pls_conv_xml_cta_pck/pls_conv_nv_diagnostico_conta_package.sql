-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.pls_conv_nv_diagnostico_conta ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
--Dados utilizados para atualizar a tabela tempor_ria

tb_nr_seq_conta_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_diag_cta_w	pls_util_cta_pck.t_number_table;
tb_cd_doenca_w		pls_util_cta_pck.t_varchar2_table_10;
--Dados convertidos

tb_cd_doenca_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_classi_conv_w	pls_util_cta_pck.t_varchar2_table_10;
--Vari_veis utilizadas

nr_indice_w		integer;
nr_seq_conta_ant_w	pls_conta_imp.nr_sequencia%type;
						
C01 CURSOR(	nr_seq_protocolo_pc pls_protocolo_conta_imp.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_diag_cta,
		b.nr_seq_conta,
		b.cd_doenca
	from	pls_conta_imp a,
		pls_diagnostico_conta_imp b	
	where	a.nr_seq_protocolo = nr_seq_protocolo_pc
	and 	b.nr_seq_conta = a.nr_sequencia;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta,
		a.cd_doenca
	from	pls_diag_cta_imp_tmp a
	order by a.nr_seq_conta, a.nr_sequencia;

BEGIN
-- Limpa a tabela tempor_ria

EXECUTE 'truncate table pls_diag_cta_imp_tmp';

-- Alimenta a tabela tempor_ria com os dados necess_rios

open C01(nr_seq_protocolo_p);
loop
	fetch C01 bulk collect into 	tb_nr_seq_diag_cta_w, tb_nr_seq_conta_w,
					tb_cd_doenca_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_diag_cta_w.count = 0;

	forall i in tb_nr_seq_diag_cta_w.first..tb_nr_seq_diag_cta_w.last
		insert 	into pls_diag_cta_imp_tmp(
			nr_sequencia, nr_seq_conta, cd_doenca
		) values (
			tb_nr_seq_diag_cta_w(i), tb_nr_seq_conta_w(i), tb_cd_doenca_w(i)
		);
	commit;
end loop;
close C01;

-- _ chamado a procedure para limpar as vari_veis

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_diagnostico_cta(tb_nr_seq_diag_cta_w, tb_cd_doenca_conv_w, tb_ie_classi_conv_w) INTO STRICT _ora2pg_r;
 tb_nr_seq_diag_cta_w := _ora2pg_r.tb_nr_seq_diag_cta_p; tb_cd_doenca_conv_w := _ora2pg_r.tb_cd_doenca_conv_p; tb_ie_classi_conv_w := _ora2pg_r.tb_ie_classi_conv_p;
nr_indice_w := 0;
nr_seq_conta_ant_w := null;

-- Busca os dados da tabela tempor_ria para fazer o processamento

for r_c02_w in C02 loop
	
	-- alimenta o campo com a conta atual do cursor

	--nr_seq_conta_atual_w := r_c02_w.nr_seq_conta;

	tb_nr_seq_diag_cta_w(nr_indice_w) := r_c02_w.nr_sequencia;
	tb_cd_doenca_conv_w(nr_indice_w)  := pls_conv_xml_cta_pck.formata_cd_doenca(r_c02_w.cd_doenca, cd_estabelecimento_p);
	
	-- se mudou de conta sempre ser_ o CID principal

	if (r_c02_w.nr_seq_conta != coalesce(nr_seq_conta_ant_w, -1)) then
	
		tb_ie_classi_conv_w(nr_indice_w) := 'P';
		nr_seq_conta_ant_w := r_c02_w.nr_seq_conta;
	
	-- sen_o significa que _ igual a anterior e o diagnostico _ secund_rio

	else
		tb_ie_classi_conv_w(nr_indice_w) := 'S';
	end if;
	
	if (nr_indice_w >= pls_util_pck.qt_registro_transacao_w) then	
		
		SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_diagnostico_cta(tb_nr_seq_diag_cta_w, tb_cd_doenca_conv_w, tb_ie_classi_conv_w) INTO STRICT _ora2pg_r;
 tb_nr_seq_diag_cta_w := _ora2pg_r.tb_nr_seq_diag_cta_p; tb_cd_doenca_conv_w := _ora2pg_r.tb_cd_doenca_conv_p; tb_ie_classi_conv_w := _ora2pg_r.tb_ie_classi_conv_p;
		
		nr_indice_w := 0;
	else
		nr_indice_w := nr_indice_w + 1;
	end if;	
end loop;

-- chama a procedure para verificar se ficou algo sem atualizar

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_diagnostico_cta(tb_nr_seq_diag_cta_w, tb_cd_doenca_conv_w, tb_ie_classi_conv_w) INTO STRICT _ora2pg_r;
 tb_nr_seq_diag_cta_w := _ora2pg_r.tb_nr_seq_diag_cta_p; tb_cd_doenca_conv_w := _ora2pg_r.tb_cd_doenca_conv_p; tb_ie_classi_conv_w := _ora2pg_r.tb_ie_classi_conv_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.pls_conv_nv_diagnostico_conta ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
