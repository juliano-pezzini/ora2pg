-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.identificacao_final_proc ( cd_versao_tiss_conv_p pls_protocolo_conta_imp.cd_versao_tiss_conv%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_nr_seq_item_w	pls_util_cta_pck.t_number_table;
tb_cd_proced_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_orig_proc_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_tipo_desp_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_pacote_conv_w	pls_util_cta_pck.t_number_table;
nr_contador_w		integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_item,
		a.cd_procedimento_conv,
		a.ie_origem_proced_conv,
		a.cd_tipo_tabela_conv,
		a.ie_tipo_despesa_conv,
		a.cd_procedimento
	from	pls_conta_item_imp_tmp a
	where	a.ie_tipo_item_conv = 'P';

BEGIN
-- limpa as vari_veis

SELECT * FROM pls_conv_xml_cta_pck.atualiza_ident_final_proc(	tb_nr_seq_item_w, tb_cd_proced_conv_w, tb_ie_orig_proc_conv_w, tb_ie_tipo_desp_conv_w, tb_nr_seq_pacote_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_orig_proc_conv_w := _ora2pg_r.tb_ie_orig_proc_conv_p; tb_ie_tipo_desp_conv_w := _ora2pg_r.tb_ie_tipo_desp_conv_p; tb_nr_seq_pacote_conv_w := _ora2pg_r.tb_nr_seq_pacote_conv_p;
nr_contador_w := 0;

for r_c01_w in C01 loop

	tb_nr_seq_item_w(nr_contador_w) := r_c01_w.nr_seq_item;
	-- inicializa para que se abaixo n_o houver nenhuma modificacao continue com o procedimento identificado

	tb_ie_orig_proc_conv_w(nr_contador_w) := r_c01_w.ie_origem_proced_conv;
	tb_cd_proced_conv_w(nr_contador_w) := r_c01_w.cd_procedimento_conv;	
	
	-- obt_m o tipo de despesa do procedimento no dom_nio do Tasy

	-- at_ este momento estavamos utilizando o padr_o do TISS com zero na frente

	tb_ie_tipo_desp_conv_w(nr_contador_w) := pls_conv_xml_cta_pck.obter_ie_tipo_despesa_proc( 	r_c01_w.cd_procedimento_conv, r_c01_w.ie_origem_proced_conv,
										r_c01_w.ie_tipo_despesa_conv, cd_versao_tiss_conv_p);

	-- verifica se existe um pacote cadastrado, verifica tamb_m regra de pre_o de pacote caso necess_rio

	-- o prestador _ feito um nvl entre o executor da conta e do protocolo

	tb_nr_seq_pacote_conv_w(nr_contador_w) := pls_conv_xml_cta_pck.obter_nr_seq_pacote(	r_c01_w.nr_seq_item, r_c01_w.cd_procedimento_conv,
									r_c01_w.ie_origem_proced_conv, nm_usuario_p);
	
	-- se tiver encontrado um pacote o tipo de despesa obrigat_riamente ser_ quatro

	if ((tb_nr_seq_pacote_conv_w(nr_contador_w) IS NOT NULL AND (tb_nr_seq_pacote_conv_w(nr_contador_w))::text <> '')) then
	
		tb_ie_tipo_desp_conv_w(nr_contador_w) := '4';
		
		-- se encontrou um pacote, busca o ie_origem_proced da pls_pacote

		tb_ie_orig_proc_conv_w(nr_contador_w) := pls_conv_xml_cta_pck.obter_origem_pacote(tb_nr_seq_pacote_conv_w(nr_contador_w));
	else
		-- caso origem do procedimento seja TUSS faz verificao das regras de convers_o TUSS

		if (r_c01_w.ie_origem_proced_conv = 8) then
			pls_converte_codigo_tuss(	r_c01_w.cd_procedimento_conv, r_c01_w.ie_origem_proced_conv,
							tb_cd_proced_conv_w(nr_contador_w), tb_ie_orig_proc_conv_w(nr_contador_w));
		end if;
	end if;
	
	-- se por algum motivo n_o conseguiu identificar o procedimento na sua totalidade

	if (coalesce(tb_cd_proced_conv_w(nr_contador_w)::text, '') = '' or coalesce(tb_ie_orig_proc_conv_w(nr_contador_w)::text, '') = '') then
		-- se n_o encontrou um procedimento ou pacote verifica na AMB

		tb_ie_orig_proc_conv_w(nr_contador_w) := pls_conv_xml_cta_pck.obter_proced_amb(	tb_cd_proced_conv_w(nr_contador_w), r_c01_w.cd_procedimento, tb_ie_orig_proc_conv_w(nr_contador_w));
	end if;

	-- se j_ atingiu a quantidade manda para o banco

	if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then

		SELECT * FROM pls_conv_xml_cta_pck.atualiza_ident_final_proc(	tb_nr_seq_item_w, tb_cd_proced_conv_w, tb_ie_orig_proc_conv_w, tb_ie_tipo_desp_conv_w, tb_nr_seq_pacote_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_orig_proc_conv_w := _ora2pg_r.tb_ie_orig_proc_conv_p; tb_ie_tipo_desp_conv_w := _ora2pg_r.tb_ie_tipo_desp_conv_p; tb_nr_seq_pacote_conv_w := _ora2pg_r.tb_nr_seq_pacote_conv_p;
		nr_contador_w := 0;
	else
		nr_contador_w := nr_contador_w + 1;
	end if;

end loop;

-- se sobrou algo manda pro banco

SELECT * FROM pls_conv_xml_cta_pck.atualiza_ident_final_proc(	tb_nr_seq_item_w, tb_cd_proced_conv_w, tb_ie_orig_proc_conv_w, tb_ie_tipo_desp_conv_w, tb_nr_seq_pacote_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_orig_proc_conv_w := _ora2pg_r.tb_ie_orig_proc_conv_p; tb_ie_tipo_desp_conv_w := _ora2pg_r.tb_ie_tipo_desp_conv_p; tb_nr_seq_pacote_conv_w := _ora2pg_r.tb_nr_seq_pacote_conv_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.identificacao_final_proc ( cd_versao_tiss_conv_p pls_protocolo_conta_imp.cd_versao_tiss_conv%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
