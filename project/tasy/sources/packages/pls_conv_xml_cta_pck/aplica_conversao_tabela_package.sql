-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.aplica_conversao_tabela ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, ie_tipo_item_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


tb_nr_seq_conta_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_item_w	pls_util_cta_pck.t_number_table;
tb_cd_procedimento_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_mat_conv_w	pls_util_cta_pck.t_number_table;
tb_dt_execucao_w	pls_util_cta_pck.t_date_table;
tb_ie_tipo_item_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_tipo_tabela_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_tipo_despesa_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_prest_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_proced_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_tipo_item_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_orig_proc_conv_w 	pls_util_cta_pck.t_number_table;
tb_nr_seq_regra_w	pls_util_cta_pck.t_number_table;
tb_cd_tipo_tab_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_tipo_desp_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_proced_imp_w	pls_util_cta_pck.t_number_table;

ie_tipo_item_regra_w	varchar(1);
ie_tipo_item_sel_w	varchar(1);

-- no campo cd_procedimento _ pego somente o numero, pois para usar o between com varchar2

-- n_o funcionaria da forma esperada

C01 CURSOR(	nr_seq_protocolo_pc	pls_protocolo_conta_imp.nr_sequencia%type,
		ie_tipo_item_sel_pc	text) FOR
	SELECT	a.nr_sequencia nr_seq_conta,
		b.nr_sequencia nr_seq_item,
		b.cd_procedimento_conv,
		b.nr_seq_material_ini_conv,
		b.dt_execucao,
		b.cd_tipo_tabela,
		b.ie_tipo_despesa_conv,
		c.nr_seq_prestador_conv,
		pls_util_pck.obter_somente_numero(b.cd_procedimento) cd_proced_number_conv,
		b.ie_tipo_item,
		b.cd_procedimento
	from	pls_protocolo_conta_imp c,
		pls_conta_imp a,
		pls_conta_item_imp b
	where	c.nr_sequencia = nr_seq_protocolo_pc
	and	a.nr_seq_protocolo = c.nr_sequencia
	and 	b.nr_seq_conta = a.nr_sequencia;

-- retorna todos os registros que entraram em alguma regra (nr_seq_regra is not null)

C02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_item,
		cd_procedimento_conv,
		ie_tipo_item_conv,
		nr_seq_material_conv,
		ie_origem_proced_conv,
		nr_seq_regra,
		cd_tipo_tabela_conv,
		ie_tipo_despesa_conv
	from	pls_conta_item_imp_tmp
	where	CASE WHEN coalesce(nr_seq_regra::text, '') = '' THEN  -1  ELSE -2 END  = -2;
	

BEGIN

-- limpa os dados da tabela tempor_ria

EXECUTE 'truncate table pls_conta_item_imp_tmp';

tb_nr_seq_conta_w.delete;
tb_nr_seq_item_w.delete;
tb_cd_procedimento_w.delete;
tb_nr_seq_mat_conv_w.delete;
tb_dt_execucao_w.delete;
tb_cd_tipo_tabela_w.delete;
tb_ie_tipo_despesa_w.delete;
tb_nr_seq_prest_conv_w.delete;

-- aqui faz uma identificacao quanto ao tipo de item que precisamos selecionar

-- isto porque para regra de convers_o de tabela de procedimento analisamos os

-- materiais para identificar o que vai virar procedimento. 

-- J_ as regras de convers_o de tabela de material buscamos todos os procedimentos

-- para identificar o que vai virar material

if (ie_tipo_item_p = 'P') then
	ie_tipo_item_sel_w := 'M';
else
	ie_tipo_item_sel_w := 'P';
end if;

ie_tipo_item_regra_w := ie_tipo_item_p;

-- alimenta a tabela tempor_ria com os dados que ser_o utilizados para validacao das regras

open C01(nr_seq_protocolo_p, ie_tipo_item_sel_w);
loop
	fetch C01 bulk collect into 	tb_nr_seq_conta_w, tb_nr_seq_item_w, tb_cd_proced_conv_w,
					tb_nr_seq_mat_conv_w, tb_dt_execucao_w, tb_cd_tipo_tabela_w,
					tb_ie_tipo_despesa_w, tb_nr_seq_prest_conv_w, tb_cd_procedimento_w,
					tb_ie_tipo_item_w, tb_cd_proced_imp_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_item_w.count = 0;

	forall i in tb_nr_seq_item_w.first..tb_nr_seq_item_w.last
		
		insert 	into pls_conta_item_imp_tmp(
			nr_seq_protocolo, nr_seq_conta, nr_sequencia, 
			cd_procedimento_conv, nr_seq_material_conv, dt_execucao, 
			cd_tipo_tabela, ie_tipo_despesa_conv, nr_seq_prest_prot_conv, 
			cd_proced_number_conv, ie_tipo_item, cd_procedimento,
			ie_tipo_item_conv
		) values (
			nr_seq_protocolo_p, tb_nr_seq_conta_w(i), tb_nr_seq_item_w(i), 
			tb_cd_proced_conv_w(i), tb_nr_seq_mat_conv_w(i), tb_dt_execucao_w(i), 
			tb_cd_tipo_tabela_w(i), tb_ie_tipo_despesa_w(i), tb_nr_seq_prest_conv_w(i), 
			tb_cd_procedimento_w(i), tb_ie_tipo_item_w(i), tb_cd_proced_imp_w(i),
			ie_tipo_item_p
		);
	commit;
end loop;
close C01;

-- aqui seleciona as regras que ser_o processadas de acordo com o tipo de item

CALL pls_conv_xml_cta_pck.gerencia_sel_reg_tab_tiss(ie_tipo_item_sel_w, ie_tipo_item_regra_w, cd_estabelecimento_p);

-- processa todas as regras que foram selecionadas 

CALL pls_conv_xml_cta_pck.processa_reg_conv_tab_tiss(cd_estabelecimento_p);

-- faz as alteracoes necess_rias nos itens que entraram em alguma regra

-- isso significa que aqui dentro procedimento pode virar material ou vice-versa (somente essas duas opcoes)

-- convers_o de tabela ou ie_tipo_despesa j_ _ feita dentro da processa_reg_conv_tab_tiss

CALL pls_conv_xml_cta_pck.aplica_conv_item_tab_tiss(ie_tipo_item_regra_w);

-- aplica todas as alteracoes encontradas na tabela principal, todas as alteracoes nas procedures devem ser feitas

-- na tabela tempor_ria e este cursor deve se encarregar de passar todas as alteracoes encontradas para a tabela 

-- principal

open C02;
loop
	fetch C02 bulk collect into 	tb_nr_seq_item_w, tb_cd_proced_conv_w,
					tb_ie_tipo_item_conv_w, tb_nr_seq_mat_conv_w,
					tb_ie_orig_proc_conv_w, tb_nr_seq_regra_w,
					tb_cd_tipo_tab_conv_w, tb_ie_tipo_desp_conv_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_item_w.count = 0;

	forall i in tb_nr_seq_item_w.first..tb_nr_seq_item_w.last
		update 	pls_conta_item_imp
		set     cd_procedimento_conv = tb_cd_proced_conv_w(i),
			ie_tipo_item_conv = tb_ie_tipo_item_conv_w(i),
			nr_seq_material_ini_conv = tb_nr_seq_mat_conv_w(i),
			ie_origem_proced_conv = tb_ie_orig_proc_conv_w(i),
			nr_seq_regra_tab_tiss_conv = tb_nr_seq_regra_w(i),
			cd_tipo_tabela_conv = tb_cd_tipo_tab_conv_w(i),
			ie_tipo_despesa_conv = tb_ie_tipo_desp_conv_w(i)
		where  	nr_sequencia = tb_nr_seq_item_w(i);
	commit;
end loop;
close C02;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.aplica_conversao_tabela ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, ie_tipo_item_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
