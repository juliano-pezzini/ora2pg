-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_conv_xml_cta_pck.valida_cart_beneficiario ( ie_tipo_validacao_p bigint, cd_usuario_plano_conv_p pls_conta_imp.cd_usuario_plano_conv%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_msg_invalida_p out text) AS $body$
DECLARE


/* ie_tipo_validacao_p
 * 1 -> Valida tudo
 * 2 -> Valida apenas se tem valor de carteirinha 
 * 3 -> Valida apenas tamanho da carteirinha com a m_scara cadastrada
 * 4 -> Valida apenas d_gito verificador da carteirinha
 */

						
ie_carteirinha_valida_w		varchar(1);
qt_criterios_invalidos_w	integer;
qt_tamanho_carteira_w		integer;
qt_mascara_emissor_w		integer;
nr_digito_calculado_w		integer;
nr_digito_carteirinha_w		integer;
cd_carteirina_sem_digito_w	pls_conta_imp.cd_usuario_plano_conv%type;


BEGIN
qt_criterios_invalidos_w := 0;
ds_msg_invalida_p := '';

-- se existir carteirinha informada

if (cd_usuario_plano_conv_p IS NOT NULL AND cd_usuario_plano_conv_p::text <> '') then
	
	if (ie_tipo_validacao_p in (1, 3)) then
	
		qt_mascara_emissor_w	:= length(elimina_caracteres_especiais(pls_obter_mascara_cartao_benef(null, 'O', cd_estabelecimento_p)));
		-- se tiver m_scara cadastrada

		if (qt_mascara_emissor_w IS NOT NULL AND qt_mascara_emissor_w::text <> '') then
			-- verifica se a quantidade de d_gitos da carteirinha est_ dentro dos padr_es cadastrados

			if (qt_tamanho_carteira_w != qt_mascara_emissor_w) then
				qt_criterios_invalidos_w := qt_criterios_invalidos_w + 1;
				ds_msg_invalida_p := 	ds_msg_invalida_p || 'Quantidade de d_gitos da carteira fora do padr_o. Qt. importada= ' ||
							qt_tamanho_carteira_w || '. Qt. m_scara= ' || qt_mascara_emissor_w;
				
			end if;
		end if;
	end if;
	
	if (ie_tipo_validacao_p in (1, 4)) then
	
		-- c_digo da carteirinha sem d_gito

		cd_carteirina_sem_digito_w := substr(cd_usuario_plano_conv_p, 0, length(cd_usuario_plano_conv_p) -1);
		-- calcula o d_gito da carteirinha

		nr_digito_calculado_w := pls_calcula_digito_carteira(cd_carteirina_sem_digito_w);
		-- _ltimo d_gito da carteirinha _ o c_digo verificador

		nr_digito_carteirinha_w := substr(cd_usuario_plano_conv_p, -1);
		-- compara os d_gitos

		if (nr_digito_calculado_w != nr_digito_carteirinha_w) then
			qt_criterios_invalidos_w := qt_criterios_invalidos_w + 1;
			ds_msg_invalida_p := 	ds_msg_invalida_p || 'O digito verificador da carteira do benefici_rio n_o consiste com o digito calculado.';
		end if;
	end if;
else
	if (ie_tipo_validacao_p in (1, 2)) then
	
		qt_criterios_invalidos_w := qt_criterios_invalidos_w + 1;
		ds_msg_invalida_p := 'Benefici_rio n_o encontrado na base';
	end if;
end if;

-- se tiver algo inv_lido retorna N, sen_o significa que _ v_lida

if (qt_criterios_invalidos_w > 0) then
	ie_carteirinha_valida_w := 'N';
else
	ie_carteirinha_valida_w := 'S';
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_conv_xml_cta_pck.valida_cart_beneficiario ( ie_tipo_validacao_p bigint, cd_usuario_plano_conv_p pls_conta_imp.cd_usuario_plano_conv%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_msg_invalida_p out text) FROM PUBLIC;
