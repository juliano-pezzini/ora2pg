-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Obt_m os dados dos profissionais



CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.obter_profissional_tasy ( ie_tipo_profissional_p text, nr_conselho_prof_p pls_conta_imp.nr_conselho_prof_exec%type, cd_conselho_prof_p pls_conta_imp.cd_conselho_prof_exec%type, cd_uf_conselho_prof_p pls_conta_imp.cd_uf_conselho_prof_exec%type, cd_cbo_saude_prof_p pls_conta_imp.cd_cbo_saude_prof_exec%type, nm_profissional_p pls_conta_imp.nm_profissional_exec%type, ie_tipo_guia_p pls_protocolo_conta_imp.ie_tipo_guia%type, cd_versao_tiss_p pls_protocolo_conta_imp.cd_versao_tiss%type, nr_seq_tipo_atend_conv_p pls_conta_imp.nr_seq_tipo_atend_conv%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p text, nr_seq_regra_prof_conv_p INOUT pls_conta_imp.nr_seq_regra_prof_exec_conv%type, nr_conselho_prof_conv_p INOUT pls_conta_imp.nr_cons_prof_exec_conv%type, nr_seq_cons_prof_conv_p INOUT pls_conta_imp.nr_seq_cons_prof_exec_conv%type, cd_uf_cons_prof_conv_p INOUT pls_conta_imp.cd_uf_cons_prof_exec_conv%type, nr_seq_cbo_saude_conv_p INOUT pls_conta_imp.nr_seq_cbo_prof_exec_conv%type, cd_profissional_conv_p INOUT pls_conta_imp.cd_profissional_exec_conv%type, ie_regime_atendimento_p pls_conta_imp.ie_regime_atendimento%type, ie_saude_ocupacional_p pls_conta_imp.ie_saude_ocupacional%type) AS $body$
DECLARE
							 	
									
cd_uf_cons_prof_conv_w		pls_conta_imp.cd_uf_cons_prof_exec_conv%type;
nr_seq_regra_prof_conv_w	pls_conta_imp.nr_seq_regra_prof_exec_conv%type;
ie_tipo_consistencia_w		pls_regra_medico_imp.ie_tipo_consistencia%type;
ie_zero_esquerda_w		pls_regra_medico_imp.ie_zero_esquerda%type;
ie_consiste_nome_w		pls_regra_medico_imp.ie_consiste_nome%type;
ie_vincula_cbo_xml_w		pls_regra_medico_imp.ie_vincula_cbo_xml%type;
nr_conselho_prof_conv_w		pls_conta_imp.nr_cons_prof_exec_conv%type;
nr_seq_cons_prof_conv_w		pls_conta_imp.nr_seq_cons_prof_exec_conv%type;
ie_profissional_valido_w	varchar(1);
ds_observacao_w			varchar(4000);
cd_pessoa_fisica_w 		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_cbo_saude_conv_w		pls_conta_imp.nr_seq_cbo_prof_exec_conv%type;


BEGIN
-- Inicializa os parametros out como null

cd_pessoa_fisica_w:= null;
cd_uf_cons_prof_conv_w := null;

-- Para vers_es apartir da 3.01 precisamos buscar a UF pelo c_digo da UF enviado no XML

if (cd_versao_tiss_p >= '3.01.00') then
	cd_uf_cons_prof_conv_w := pls_obter_sg_uf_tiss(cd_uf_conselho_prof_p);
else	
	cd_uf_cons_prof_conv_w := cd_uf_conselho_prof_p;
end if;

-- Obt_m a regra que ser_ utilizada para cadastrar ou n_o o profissional e verificar se _ necess_rio retirar o zero ou n_o

SELECT * FROM pls_conv_xml_cta_pck.obter_regra_profissional(	ie_tipo_guia_p, nr_seq_tipo_atend_conv_p, ie_tipo_profissional_p, ie_regime_atendimento_p, ie_saude_ocupacional_p) INTO STRICT ie_tipo_consistencia_w, ie_zero_esquerda_w, ie_vincula_cbo_xml_w, ie_consiste_nome_w;
														
-- formata o n_mero do conselho de acordo com a regra retornada acima

nr_conselho_prof_conv_w := pls_conv_xml_cta_pck.formata_nr_cons_profissional(nr_conselho_prof_p, ie_zero_esquerda_w, null);

-- Obt_m sequencia do conselho do profissional

nr_seq_cons_prof_conv_w := pls_conv_xml_cta_pck.obter_conselho_profissional(cd_conselho_prof_p, cd_versao_tiss_p);

--Identifica o CBO do profissional se a regra diz que _ para verificar o CBO do XML

if (ie_vincula_cbo_xml_w = 'S') then
	nr_seq_cbo_saude_conv_w := pls_conv_xml_cta_pck.obter_cbo_profissional_tasy(cd_cbo_saude_prof_p);
else
	nr_seq_cbo_saude_conv_w := null;
end if;

-- Identifica o profissional

if (ie_consiste_nome_w = 'S') then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	medico a,
		pessoa_fisica b
	where	a.nr_crm = nr_conselho_prof_conv_w
	and	a.uf_crm = cd_uf_cons_prof_conv_w
	and	b.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	b.nr_seq_conselho = nr_seq_cons_prof_conv_w
	and	b.nm_pessoa_fisica = nm_profissional_p;
	
	if (coalesce(cd_pessoa_fisica_w::text, '') = '') then	
		select	max(a.cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	medico a,
			pessoa_fisica b
		where	a.nr_crm = nr_conselho_prof_conv_w
		and	a.uf_crm = cd_uf_cons_prof_conv_w
		and	b.cd_pessoa_fisica = a.cd_pessoa_fisica
		and	b.nr_seq_conselho = nr_seq_cons_prof_conv_w
		and	b.nm_pessoa_fisica_sem_acento = nm_profissional_p;
	end if;
	
else

	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	medico a,
		pessoa_fisica b
	where	a.nr_crm = nr_conselho_prof_conv_w
	and	a.uf_crm = cd_uf_cons_prof_conv_w
	and	b.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	b.nr_seq_conselho = nr_seq_cons_prof_conv_w;

end if;

-- Caso n_o tenha encontrado um profissional e a regra utilizada diz que _ para cadastrar

if (coalesce(cd_pessoa_fisica_w::text, '') = '') and (nr_seq_regra_prof_conv_w IS NOT NULL AND nr_seq_regra_prof_conv_w::text <> '') and (ie_tipo_consistencia_w = 2) then
	
	-- Valida todos os dados do profissional, caso algum n_o seja v_lido n_o _ cadastrado o profissional

	ds_observacao_w := pls_conv_xml_cta_pck.valida_dados_profissional(	1, nr_seq_cons_prof_conv_w, nr_conselho_prof_conv_w, cd_uf_cons_prof_conv_w, nm_profissional_p);		
	
	-- se dados estiverem v_lidos

	if (ie_profissional_valido_w = 'S') then
					
		 cd_pessoa_fisica_w := pls_conv_xml_cta_pck.gerar_profissional( 	nr_seq_cons_prof_conv_w, nr_conselho_prof_conv_w, cd_uf_cons_prof_conv_w, nm_profissional_p, nr_seq_cbo_saude_conv_w, cd_versao_tiss_p, null, nm_usuario_p, cd_pessoa_fisica_w);	
	end if;
end if;

cd_profissional_conv_p := cd_pessoa_fisica_w;
nr_seq_regra_prof_conv_p := nr_seq_regra_prof_conv_w;
nr_conselho_prof_conv_p	:= nr_conselho_prof_conv_w;
nr_seq_cons_prof_conv_p := nr_seq_cons_prof_conv_w;
cd_uf_cons_prof_conv_p := cd_uf_cons_prof_conv_w;
nr_seq_cbo_saude_conv_p	:= nr_seq_cbo_saude_conv_w;
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.obter_profissional_tasy ( ie_tipo_profissional_p text, nr_conselho_prof_p pls_conta_imp.nr_conselho_prof_exec%type, cd_conselho_prof_p pls_conta_imp.cd_conselho_prof_exec%type, cd_uf_conselho_prof_p pls_conta_imp.cd_uf_conselho_prof_exec%type, cd_cbo_saude_prof_p pls_conta_imp.cd_cbo_saude_prof_exec%type, nm_profissional_p pls_conta_imp.nm_profissional_exec%type, ie_tipo_guia_p pls_protocolo_conta_imp.ie_tipo_guia%type, cd_versao_tiss_p pls_protocolo_conta_imp.cd_versao_tiss%type, nr_seq_tipo_atend_conv_p pls_conta_imp.nr_seq_tipo_atend_conv%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p text, nr_seq_regra_prof_conv_p INOUT pls_conta_imp.nr_seq_regra_prof_exec_conv%type, nr_conselho_prof_conv_p INOUT pls_conta_imp.nr_cons_prof_exec_conv%type, nr_seq_cons_prof_conv_p INOUT pls_conta_imp.nr_seq_cons_prof_exec_conv%type, cd_uf_cons_prof_conv_p INOUT pls_conta_imp.cd_uf_cons_prof_exec_conv%type, nr_seq_cbo_saude_conv_p INOUT pls_conta_imp.nr_seq_cbo_prof_exec_conv%type, cd_profissional_conv_p INOUT pls_conta_imp.cd_profissional_exec_conv%type, ie_regime_atendimento_p pls_conta_imp.ie_regime_atendimento%type, ie_saude_ocupacional_p pls_conta_imp.ie_saude_ocupacional%type) FROM PUBLIC;
