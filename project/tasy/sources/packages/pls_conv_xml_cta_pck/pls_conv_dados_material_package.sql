-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.pls_conv_dados_material ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, cd_versao_tiss_conv_p pls_protocolo_conta_imp.cd_versao_tiss_conv%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_nr_seq_item_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_dt_execucao_w		pls_util_cta_pck.t_date_table;
tb_nr_seq_prest_exec_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_desp_conv_w		pls_util_cta_pck.t_varchar2_table_10;
tb_dt_atendimento_w		pls_util_cta_pck.t_date_table;
tb_dt_transacao_w		pls_util_cta_pck.t_date_table;

nr_contador_w 			integer;
tb_ie_tecn_util_conv_w		pls_util_cta_pck.t_varchar2_table_10;
tb_dt_execucao_conv_w		pls_util_cta_pck.t_date_table;
tb_dt_dia_semana_exec_conv_w	pls_util_cta_pck.t_number_table;
tb_dt_execucao_trunc_conv_w	pls_util_cta_pck.t_date_table;

C01 CURSOR(	nr_seq_protocolo_pc	pls_protocolo_conta_imp.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia nr_seq_item,
		b.nr_sequencia nr_seq_conta,
		c.dt_execucao,
		b.nr_seq_prest_exec_conv,
		c.ie_tipo_despesa_conv,
		b.dt_atendimento,
		a.dt_transacao
	from 	pls_protocolo_conta_imp a,
		pls_conta_imp b,
		pls_conta_item_imp c
	where	a.nr_sequencia = nr_seq_protocolo_pc
	and	b.nr_seq_protocolo = a.nr_sequencia
	and 	c.nr_seq_conta = b.nr_sequencia
	and 	c.ie_tipo_item_conv = 'M';
	
C02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_item,
		dt_execucao,
		nr_seq_prest_exec_conv,
		ie_tipo_despesa_conv,
		dt_atendimento,
		dt_transacao
	from	pls_conta_item_imp_tmp;

BEGIN
-- carrega os par_metros para vari_veis globais da package

CALL CALL CALL CALL CALL CALL pls_conv_xml_cta_pck.carrega_parametros(cd_estabelecimento_p, 'C');

-- limpa a tabela tempor_ria

EXECUTE 'truncate table pls_conta_item_imp_tmp';

tb_nr_seq_item_w.delete;

open C01(nr_seq_protocolo_p);
loop
	fetch C01 bulk collect into	tb_nr_seq_item_w, tb_nr_seq_conta_w, tb_dt_execucao_w,
					tb_nr_seq_prest_exec_w, tb_ie_tipo_desp_conv_w, tb_dt_atendimento_w, 
					tb_dt_transacao_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_item_w.count = 0;

	forall i in tb_nr_seq_item_w.first..tb_nr_seq_item_w.last
		insert into pls_conta_item_imp_tmp(
			nr_seq_protocolo, nr_seq_conta, nr_sequencia,
			dt_execucao, nr_seq_prest_exec_conv, ie_tipo_despesa_conv, 
			dt_atendimento, dt_transacao
		) values (
			nr_seq_protocolo_p, tb_nr_seq_conta_w(i), tb_nr_seq_item_w(i), 
			tb_dt_execucao_w(i), tb_nr_seq_prest_exec_w(i), tb_ie_tipo_desp_conv_w(i), 
			tb_dt_atendimento_w(i), tb_dt_transacao_w(i)
		);
	commit;
end loop;
close C01;

-- inicializa as vari_veis

SELECT * FROM pls_conv_xml_cta_pck.atualiza_dados_material(tb_nr_seq_item_w, tb_dt_execucao_conv_w, tb_dt_dia_semana_exec_conv_w, tb_dt_execucao_trunc_conv_w) INTO STRICT _ora2pg_r;
 tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_dt_execucao_conv_w := _ora2pg_r.tb_dt_execucao_conv_p; tb_dt_dia_semana_exec_conv_w := _ora2pg_r.tb_dt_dia_semana_exec_conv_p; tb_dt_execucao_trunc_conv_w := _ora2pg_r.tb_dt_execucao_trunc_conv_p;
nr_contador_w := 0;

for r_c02_w in C02 loop

	tb_nr_seq_item_w(nr_contador_w) := r_c02_w.nr_seq_item;

	-- obt_m a data de execucao do item de acordo com a regra do prestador

	tb_dt_execucao_conv_w(nr_contador_w)		:= pls_obter_data_conta_mat(	r_c02_w.nr_seq_prest_exec_conv, r_c02_w.dt_execucao,
											r_c02_w.dt_atendimento, r_c02_w.dt_transacao, 
											r_c02_w.dt_transacao);

	--data de execucao do item truncada para melhor performance nas comparacoes da rotina de ocorr_ncia

	tb_dt_execucao_trunc_conv_w(nr_contador_w)	:= trunc(tb_dt_execucao_conv_w(nr_contador_w));
	
	--Dia da semana da execucao do item

	tb_dt_dia_semana_exec_conv_w(nr_contador_w)	:= pls_manipulacao_datas_pck.obter_dia_semana(tb_dt_execucao_conv_w(nr_contador_w));
	
	-- se atingiu a quantidade manda pro banco

	if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then

		SELECT * FROM pls_conv_xml_cta_pck.atualiza_dados_material(tb_nr_seq_item_w, tb_dt_execucao_conv_w, tb_dt_dia_semana_exec_conv_w, tb_dt_execucao_trunc_conv_w) INTO STRICT _ora2pg_r;
 tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_dt_execucao_conv_w := _ora2pg_r.tb_dt_execucao_conv_p; tb_dt_dia_semana_exec_conv_w := _ora2pg_r.tb_dt_dia_semana_exec_conv_p; tb_dt_execucao_trunc_conv_w := _ora2pg_r.tb_dt_execucao_trunc_conv_p;
		nr_contador_w := 0;
	else
		nr_contador_w := nr_contador_w + 1;
	end if;
end loop;

-- se sobrou algo manda pro banco

SELECT * FROM pls_conv_xml_cta_pck.atualiza_dados_material(tb_nr_seq_item_w, tb_dt_execucao_conv_w, tb_dt_dia_semana_exec_conv_w, tb_dt_execucao_trunc_conv_w) INTO STRICT _ora2pg_r;
 tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_dt_execucao_conv_w := _ora2pg_r.tb_dt_execucao_conv_p; tb_dt_dia_semana_exec_conv_w := _ora2pg_r.tb_dt_dia_semana_exec_conv_p; tb_dt_execucao_trunc_conv_w := _ora2pg_r.tb_dt_execucao_trunc_conv_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.pls_conv_dados_material ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, cd_versao_tiss_conv_p pls_protocolo_conta_imp.cd_versao_tiss_conv%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
