-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.pls_conv_nv_conta ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

_ora2pg_r RECORD;
--Dados do segurado

tb_cd_usuario_plano_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_principal_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_operadora_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_prestador_w		pls_util_cta_pck.t_varchar2_table_20;
tb_nm_beneficiario_w		pls_util_cta_pck.t_varchar2_table_200;
--Dados do prestador executor	

tb_cd_prestador_exec_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cgc_prest_exec_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cpf_prest_exec_w		pls_util_cta_pck.t_varchar2_table_20;
--Dados do prestador solicitante	

tb_cd_prestador_solic_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cgc_prest_solic_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cpf_prest_solic_w		pls_util_cta_pck.t_varchar2_table_20;
--Dados do profissional executor

tb_nr_conselho_prof_exec_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_conselho_prof_exec_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_uf_conselho_prof_exec_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cbo_saude_prof_exec_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nm_profissional_exec_w	pls_util_cta_pck.t_varchar2_table_200;
--Dados do profissional solicitante

tb_nr_conselho_prof_solic_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_conselho_prof_solic_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_uf_conselho_prof_solic_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cbo_saude_prof_solic_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nm_profissional_solic_w	pls_util_cta_pck.t_varchar2_table_200;
--Tabelas utilizadas para armazenar dados da conta

tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_guia_w		pls_util_cta_pck.t_varchar2_table_10;
tb_ie_carater_atendimento_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_tipo_atendimento_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_motivo_encerramento_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_versao_tiss_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_senha_w			pls_util_cta_pck.t_varchar2_table_20;
tb_dt_fim_faturamento_w		pls_util_cta_pck.t_date_table;
tb_dt_emissao_guia_w		pls_util_cta_pck.t_date_table;
tb_ie_tipo_atend_odonto_w	pls_util_cta_pck.t_varchar2_table_10;
tb_ie_tipo_internacao_w		pls_util_cta_pck.t_varchar2_table_10;
tb_regime_atendimento	pls_util_cta_pck.t_varchar2_table_10;
tb_saude_ocupacional	pls_util_cta_pck.t_varchar2_table_10;
tb_dt_atendimento		pls_util_cta_pck.t_date_table;

--V_ri_veis utilizadas no processo de convers_o da conta (ser_o utilizadas para gravar na pls_conta_imp)

nr_indice_w			integer;
cd_guia_operadora_pesquisa_w	pls_conta_imp.cd_guia_operadora%type;
cd_guia_principal_pesquisa_w	pls_conta_imp.cd_guia_principal%type;

--Tabelas utilizadas para armazenar dados da conta convertidos

tb_nr_seq_conta_conv_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_tipo_atend_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_carater_atend_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_moti_ence_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_guia_conv_w		pls_util_cta_pck.t_number_table;
tb_cd_guia_principal_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_dt_atendimento_conv_w	pls_util_cta_pck.t_date_table;
tb_ie_tipo_atend_odonto_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_ie_tipo_internacao_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_tipo_internado_conv_w	pls_util_cta_pck.t_varchar2_table_1;
tb_ie_vinc_internacao_conv_w	pls_util_cta_pck.t_varchar2_table_1;
--Dados convertidos do segurado

tb_cd_usuario_plano_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_operadora_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_guia_ok_conv_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cooperativa_cart_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_coop_cart_number_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_congen_cart_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_segurado_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_congenere_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_convenio_conv_w   	pls_util_cta_pck.t_number_table;
tb_cd_categoria_conv_w		pls_util_cta_pck.t_number_table;
tb_qt_idade_conta_meses_conv_w	pls_util_cta_pck.t_number_table;
tb_qt_idade_conta_anos_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_sexo_conv_w		pls_util_cta_pck.t_varchar2_table_1;
tb_sg_estado_operadora_conv_w	pls_util_cta_pck.t_varchar2_table_2;
tb_ie_tipo_inter_oper_conv_w	pls_util_cta_pck.t_varchar2_table_10;
--Dados convertidos do prestador executor

tb_cd_prest_exec_conv_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prest_exec_upper_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prest_exec_number_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_cgc_prest_exec_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cpf_prest_exec_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_prest_exec_conv_w	pls_util_cta_pck.t_varchar2_table_20;
--Dados convertidos do prestador solicitante

tb_cd_prest_solic_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prest_solic_upper_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prest_solic_num_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_cgc_prest_solic_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cpf_prest_solic_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_prest_solic_conv_w	pls_util_cta_pck.t_varchar2_table_20;
--Dados convertidos do profissional executor

tb_regra_prof_exec_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_prof_exec_conv_w		pls_util_cta_pck.t_varchar2_table_20;
tb_nr_cbo_prof_exec_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_cons_prof_exec_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_cons_prof_exe_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_uf_cons_prof_exec_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_prof_coop_exec_conv_w	pls_util_cta_pck.t_varchar2_table_1;
--Dados convertidos do profissional solicitante

tb_regra_prof_solic_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_prof_solic_conv_w		pls_util_cta_pck.t_varchar2_table_20;
tb_nr_cbo_prof_solic_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_cons_prof_solic_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_cons_prof_sol_conv_w 	pls_util_cta_pck.t_number_table;
tb_cd_uf_cons_prof_sol_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_cd_prof_coop_solic_conv_w 	pls_util_cta_pck.t_varchar2_table_1;	
tb_tipo_faturamento_w		pls_util_cta_pck.t_varchar2_table_1;
tb_cd_cnes_w			pls_util_cta_pck.t_varchar2_table_20;
cd_guia_ok_w			pls_conta_imp.cd_guia_ok_conv%type;

c01 CURSOR(nr_seq_protocolo_pc	pls_protocolo_conta_imp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_conta,
		a.cd_usuario_plano,
		a.cd_guia_principal,
		a.cd_guia_operadora,
		a.cd_guia_prestador,
		a.nm_beneficiario,
		a.cd_prestador_exec,
		a.cd_cgc_prest_exec,
		a.cd_cpf_prest_exec,
		a.cd_prestador_solic,
		a.cd_cgc_prest_solic,
		a.cd_cpf_prest_solic,
		a.nr_conselho_prof_exec,
		a.cd_conselho_prof_exec,
		a.cd_uf_conselho_prof_exec,
		a.cd_cbo_saude_prof_exec,
		a.nm_profissional_exec,
		a.ie_tipo_atendimento,
		b.ie_tipo_guia,
		a.ie_carater_atendimento,
		a.nr_conselho_prof_solic,
		a.cd_conselho_prof_solic,
		a.cd_uf_conselho_prof_solic,
		a.cd_cbo_saude_prof_solic,
		a.nm_profissional_solic,
		a.ie_motivo_encerramento,
		b.cd_versao_tiss_conv,
		a.cd_senha,
		a.dt_fim_faturamento,
		a.dt_emissao_guia,
		a.ie_tipo_atend_odonto,
		a.ie_tipo_internacao,
		a.ie_tipo_faturamento,
		a.cd_cnes_prest_exec,
		a.ie_regime_atendimento,
		a.ie_saude_ocupacional,
		a.dt_atendimento
	from	pls_protocolo_conta_imp b,
		pls_conta_imp a		
	where	b.nr_sequencia	= nr_seq_protocolo_pc
	and	a.nr_seq_protocolo = b.nr_sequencia;
	
c02 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_conta,
		a.cd_usuario_plano,
		a.cd_guia_principal,
		a.cd_guia_operadora,
		a.cd_guia_prestador,
		a.nm_beneficiario,
		a.cd_prestador_exec,
		a.cd_cgc_prest_exec,
		a.cd_cpf_prest_exec,
		a.cd_prestador_solic,
		a.cd_cgc_prest_solic,
		a.cd_cpf_prest_solic,
		a.nr_conselho_prof_exec,
		a.cd_conselho_prof_exec,
		a.cd_uf_conselho_prof_exec,
		a.cd_cbo_saude_prof_exec,
		a.nm_profissional_exec,
		a.ie_tipo_atendimento,
		a.ie_tipo_guia,
		a.ie_carater_atendimento,
		a.nr_conselho_prof_solic,
		a.cd_conselho_prof_solic,
		a.cd_uf_conselho_prof_solic,
		a.cd_cbo_saude_prof_solic,
		a.nm_profissional_solic,
		a.ie_motivo_encerramento,
		a.cd_versao_tiss_conv,
		a.cd_senha,
		a.dt_fim_faturamento,
		a.dt_emissao_guia,
		a.ie_tipo_atend_odonto,
		a.ie_tipo_internacao,
		a.ie_tipo_faturamento,
		a.cd_cnes,
		a.ie_regime_atendimento,
		a.ie_saude_ocupacional,
		a.dt_atendimento
	from	pls_conta_imp_tmp a;
	
BEGIN
-- carrega os par_metros para vari_veis globais da package

CALL CALL CALL CALL CALL CALL pls_conv_xml_cta_pck.carrega_parametros(cd_estabelecimento_p, 'C');

-- copia os dados que ser_o utilizados para realizar a convers_o para a tabela pls_conta_imp_tmp

-- feito isso por quest_es de performance, visto que n_o _ saud_vel ficar atualizando dados em massa de uma tabela

-- que est_ sendo utilizada no cursor durante toda a execucao

EXECUTE 'truncate table pls_conta_imp_tmp';

open c01(nr_seq_protocolo_p);
loop
	fetch c01 bulk collect into 	tb_nr_seq_conta_w, tb_cd_usuario_plano_w,
					tb_cd_guia_principal_w, tb_cd_guia_operadora_w,
					tb_cd_guia_prestador_w, tb_nm_beneficiario_w,
					tb_cd_prestador_exec_w,	tb_cd_cgc_prest_exec_w,
					tb_cd_cpf_prest_exec_w,	tb_cd_prestador_solic_w, 
					tb_cd_cgc_prest_solic_w, tb_cd_cpf_prest_solic_w,
					tb_nr_conselho_prof_exec_w, tb_cd_conselho_prof_exec_w,
					tb_cd_uf_conselho_prof_exec_w, tb_cd_cbo_saude_prof_exec_w,
					tb_nm_profissional_exec_w, tb_ie_tipo_atendimento_w, 
					tb_ie_tipo_guia_w, tb_ie_carater_atendimento_w,
					tb_nr_conselho_prof_solic_w, tb_cd_conselho_prof_solic_w,
					tb_cd_uf_conselho_prof_solic_w, tb_cd_cbo_saude_prof_solic_w,					
					tb_nm_profissional_solic_w, tb_ie_motivo_encerramento_w,
					tb_cd_versao_tiss_w, tb_cd_senha_w,
					tb_dt_fim_faturamento_w, tb_dt_emissao_guia_w,
					tb_ie_tipo_atend_odonto_w, tb_ie_tipo_internacao_w,
					tb_tipo_faturamento_w, tb_cd_cnes_w, tb_regime_atendimento, 
					tb_saude_ocupacional, tb_dt_atendimento
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_conta_w.count = 0;

	forall i in tb_nr_seq_conta_w.first..tb_nr_seq_conta_w.last 
		insert 	into pls_conta_imp_tmp(
			nr_sequencia, cd_usuario_plano,
			cd_guia_principal, cd_guia_operadora,
			cd_guia_prestador, nm_beneficiario,
			cd_prestador_exec, cd_cgc_prest_exec, 
			cd_cpf_prest_exec, cd_prestador_solic, 
			cd_cgc_prest_solic, cd_cpf_prest_solic,
			nr_conselho_prof_exec, cd_conselho_prof_exec,
			cd_uf_conselho_prof_exec, cd_cbo_saude_prof_exec,
			nm_profissional_exec, ie_tipo_atendimento, 
			ie_tipo_guia, ie_carater_atendimento,
			nr_conselho_prof_solic, cd_conselho_prof_solic,
			cd_uf_conselho_prof_solic, cd_cbo_saude_prof_solic,
			nm_profissional_solic, ie_motivo_encerramento,
			cd_versao_tiss_conv, cd_senha, 
			cd_estabelecimento, dt_fim_faturamento,
			dt_emissao_guia, ie_tipo_atend_odonto,
			ie_tipo_internacao, ie_tipo_faturamento,
			cd_cnes, ie_regime_atendimento, ie_saude_ocupacional,
			dt_atendimento
		) values (
			tb_nr_seq_conta_w(i), tb_cd_usuario_plano_w(i),
			tb_cd_guia_principal_w(i), tb_cd_guia_operadora_w(i),
			tb_cd_guia_prestador_w(i), tb_nm_beneficiario_w(i),
			tb_cd_prestador_exec_w(i), tb_cd_cgc_prest_exec_w(i), 
			tb_cd_cpf_prest_exec_w(i), tb_cd_prestador_solic_w(i), 
			tb_cd_cgc_prest_solic_w(i), tb_cd_cpf_prest_solic_w(i),
			tb_nr_conselho_prof_exec_w(i), tb_cd_conselho_prof_exec_w(i),
			tb_cd_uf_conselho_prof_exec_w(i), tb_cd_cbo_saude_prof_exec_w(i),
			tb_nm_profissional_exec_w(i), tb_ie_tipo_atendimento_w(i), 
			tb_ie_tipo_guia_w(i), tb_ie_carater_atendimento_w(i),
			tb_nr_conselho_prof_solic_w(i), tb_cd_conselho_prof_solic_w(i),
			tb_cd_uf_conselho_prof_solic_w(i), tb_cd_cbo_saude_prof_solic_w(i),					
			tb_nm_profissional_solic_w(i), tb_ie_motivo_encerramento_w(i),
			tb_cd_versao_tiss_w(i), tb_cd_senha_w(i),
			cd_estabelecimento_p, tb_dt_fim_faturamento_w(i),
			tb_dt_emissao_guia_w(i), tb_ie_tipo_atend_odonto_w(i),
			tb_ie_tipo_internacao_w(i), tb_tipo_faturamento_w(i),
			tb_cd_cnes_w(i), tb_regime_atendimento(i), tb_saude_ocupacional(i),
			tb_dt_atendimento(i)
		);
	commit;		
end loop;
close c01;

-- inicializa as vari_veis utilizadas no processo abaixo

nr_indice_w := 0;
-- chama a procedure aqui apenas para inicializar as vari_veis

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_conta(	tb_nr_seq_conta_conv_w, tb_cd_usuario_plano_conv_w, tb_cd_guia_operadora_conv_w, tb_cd_guia_principal_conv_w, tb_cd_cooperativa_cart_conv_w, tb_cd_coop_cart_number_conv_w, tb_nr_seq_congen_cart_conv_w, tb_nr_seq_segurado_conv_w, tb_nr_seq_congenere_conv_w, tb_cd_prest_exec_conv_w, tb_cd_prest_exec_upper_conv_w, tb_cd_prest_exec_number_conv_w, tb_cd_cgc_prest_exec_conv_w, tb_cd_cpf_prest_exec_conv_w, tb_nr_seq_prest_exec_conv_w, tb_cd_prest_solic_conv_w, tb_cd_prest_solic_upper_conv_w, tb_cd_prest_solic_num_conv_w, tb_cd_cgc_prest_solic_conv_w, tb_cd_cpf_prest_solic_conv_w, tb_nr_seq_prest_solic_conv_w, tb_regra_prof_exec_conv_w, tb_cd_prof_exec_conv_w, tb_nr_cons_prof_exec_conv_w, tb_nr_seq_cons_prof_exe_conv_w, tb_cd_uf_cons_prof_exec_conv_w, tb_nr_cbo_prof_exec_conv_w, tb_ie_carater_atend_conv_w, tb_regra_prof_solic_conv_w, tb_cd_prof_solic_conv_w, tb_nr_cbo_prof_solic_conv_w, tb_nr_cons_prof_solic_conv_w, tb_nr_seq_cons_prof_sol_conv_w, tb_cd_uf_cons_prof_sol_conv_w, tb_nr_seq_moti_ence_conv_w, tb_nr_seq_guia_conv_w, tb_nr_seq_tipo_atend_conv_w, tb_cd_guia_ok_conv_w, tb_dt_atendimento_conv_w, tb_ie_tipo_atend_odonto_conv_w, tb_ie_tipo_internacao_conv_w, tb_ie_tipo_internado_conv_w, tb_ie_vinc_internacao_conv_w, tb_cd_convenio_conv_w, tb_cd_categoria_conv_w, tb_ie_sexo_conv_w, tb_qt_idade_conta_meses_conv_w, tb_qt_idade_conta_anos_conv_w, tb_cd_prof_coop_exec_conv_w, tb_cd_prof_coop_solic_conv_w, tb_sg_estado_operadora_conv_w, tb_ie_tipo_inter_oper_conv_w, tb_tipo_faturamento_w, tb_cd_cnes_w, cd_estabelecimento_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_conta_conv_w := _ora2pg_r.tb_nr_seq_conta_conv_p; tb_cd_usuario_plano_conv_w := _ora2pg_r.tb_cd_usuario_plano_conv_p; tb_cd_guia_operadora_conv_w := _ora2pg_r.tb_cd_guia_operadora_conv_p; tb_cd_guia_principal_conv_w := _ora2pg_r.tb_cd_guia_principal_conv_p; tb_cd_cooperativa_cart_conv_w := _ora2pg_r.tb_cd_cooperativa_cart_conv_p; tb_cd_coop_cart_number_conv_w := _ora2pg_r.tb_cd_coop_cart_number_conv_p; tb_nr_seq_congen_cart_conv_w := _ora2pg_r.tb_nr_seq_congen_cart_conv_p; tb_nr_seq_segurado_conv_w := _ora2pg_r.tb_nr_seq_segurado_conv_p; tb_nr_seq_congenere_conv_w := _ora2pg_r.tb_nr_seq_congenere_conv_p; tb_cd_prest_exec_conv_w := _ora2pg_r.tb_cd_prest_exec_conv_p; tb_cd_prest_exec_upper_conv_w := _ora2pg_r.tb_cd_prest_exec_upper_conv_p; tb_cd_prest_exec_number_conv_w := _ora2pg_r.tb_cd_prest_exec_number_conv_p; tb_cd_cgc_prest_exec_conv_w := _ora2pg_r.tb_cd_cgc_prest_exec_conv_p; tb_cd_cpf_prest_exec_conv_w := _ora2pg_r.tb_cd_cpf_prest_exec_conv_p; tb_nr_seq_prest_exec_conv_w := _ora2pg_r.tb_nr_seq_prest_exec_conv_p; tb_cd_prest_solic_conv_w := _ora2pg_r.tb_cd_prest_solic_conv_p; tb_cd_prest_solic_upper_conv_w := _ora2pg_r.tb_cd_prest_solic_upper_conv_p; tb_cd_prest_solic_num_conv_w := _ora2pg_r.tb_cd_prest_solic_num_conv_p; tb_cd_cgc_prest_solic_conv_w := _ora2pg_r.tb_cd_cgc_prest_solic_conv_p; tb_cd_cpf_prest_solic_conv_w := _ora2pg_r.tb_cd_cpf_prest_solic_conv_p; tb_nr_seq_prest_solic_conv_w := _ora2pg_r.tb_nr_seq_prest_solic_conv_p; tb_regra_prof_exec_conv_w := _ora2pg_r.tb_regra_prof_exec_conv_p; tb_cd_prof_exec_conv_w := _ora2pg_r.tb_cd_prof_exec_conv_p; tb_nr_cons_prof_exec_conv_w := _ora2pg_r.tb_nr_cons_prof_exec_conv_p; tb_nr_seq_cons_prof_exe_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_exe_conv_p; tb_cd_uf_cons_prof_exec_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_exec_conv_p; tb_nr_cbo_prof_exec_conv_w := _ora2pg_r.tb_nr_cbo_prof_exec_conv_p; tb_ie_carater_atend_conv_w := _ora2pg_r.tb_ie_carater_atend_conv_p; tb_regra_prof_solic_conv_w := _ora2pg_r.tb_regra_prof_solic_conv_p; tb_cd_prof_solic_conv_w := _ora2pg_r.tb_cd_prof_solic_conv_p; tb_nr_cbo_prof_solic_conv_w := _ora2pg_r.tb_nr_cbo_prof_solic_conv_p; tb_nr_cons_prof_solic_conv_w := _ora2pg_r.tb_nr_cons_prof_solic_conv_p; tb_nr_seq_cons_prof_sol_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_sol_conv_p; tb_cd_uf_cons_prof_sol_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_sol_conv_p; tb_nr_seq_moti_ence_conv_w := _ora2pg_r.tb_nr_seq_moti_ence_conv_p; tb_nr_seq_guia_conv_w := _ora2pg_r.tb_nr_seq_guia_conv_p; tb_nr_seq_tipo_atend_conv_w := _ora2pg_r.tb_nr_seq_tipo_atend_conv_p; tb_cd_guia_ok_conv_w := _ora2pg_r.tb_cd_guia_ok_conv_p; tb_dt_atendimento_conv_w := _ora2pg_r.tb_dt_atendimento_conv_p; tb_ie_tipo_atend_odonto_conv_w := _ora2pg_r.tb_ie_tipo_atend_odonto_conv_p; tb_ie_tipo_internacao_conv_w := _ora2pg_r.tb_ie_tipo_internacao_conv_p; tb_ie_tipo_internado_conv_w := _ora2pg_r.tb_ie_tipo_internado_conv_p; tb_ie_vinc_internacao_conv_w := _ora2pg_r.tb_ie_vinc_internacao_conv_p; tb_cd_convenio_conv_w := _ora2pg_r.tb_cd_convenio_conv_p; tb_cd_categoria_conv_w := _ora2pg_r.tb_cd_categoria_conv_p; tb_ie_sexo_conv_w := _ora2pg_r.tb_ie_sexo_conv_p; tb_qt_idade_conta_meses_conv_w := _ora2pg_r.tb_qt_idade_conta_meses_conv_p; tb_qt_idade_conta_anos_conv_w := _ora2pg_r.tb_qt_idade_conta_anos_conv_p; tb_cd_prof_coop_exec_conv_w := _ora2pg_r.tb_cd_prof_coop_exec_conv_p; tb_cd_prof_coop_solic_conv_w := _ora2pg_r.tb_cd_prof_coop_solic_conv_p; tb_sg_estado_operadora_conv_w := _ora2pg_r.tb_sg_estado_operadora_conv_p; tb_ie_tipo_inter_oper_conv_w := _ora2pg_r.tb_ie_tipo_inter_oper_conv_p; tb_tipo_faturamento_w := _ora2pg_r.tb_tipo_faturamento_p; tb_cd_cnes_w := _ora2pg_r.tb_cd_cnes_p;
-- percorre a tabela tempor_ria e faz as devidas convers_es

for r_c02_w in c02 loop

	-- formata a guia para utiliz_-la em algumas pesquisas

	cd_guia_operadora_pesquisa_w := pls_converte_cd_guia_pesquisa(r_c02_w.cd_guia_operadora);
	cd_guia_principal_pesquisa_w := pls_converte_cd_guia_pesquisa(r_c02_w.cd_guia_principal);
	cd_guia_ok_w		     :=  coalesce(r_c02_w.cd_guia_principal, coalesce(r_c02_w.cd_guia_operadora, r_c02_w.cd_guia_prestador));
	
	tb_nr_seq_conta_conv_w(nr_indice_w) := r_c02_w.nr_seq_conta;
	tb_nr_seq_tipo_atend_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_tipo_atendimento(r_c02_w.ie_tipo_atendimento, cd_estabelecimento_p);
	tb_ie_carater_atend_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_carater_atendimento_tasy(r_c02_w.ie_carater_atendimento, r_c02_w.cd_versao_tiss_conv);
	tb_nr_seq_moti_ence_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_motivo_saida_tiss_tasy(r_c02_w.ie_motivo_encerramento, r_c02_w.cd_versao_tiss_conv,
										cd_estabelecimento_p);
	
	-- identifica/gera o benefici_rio identificado pelo Tasy

	SELECT * FROM pls_conv_xml_cta_pck.obter_beneficiario_tasy(	r_c02_w.cd_usuario_plano, r_c02_w.cd_guia_operadora, r_c02_w.nm_beneficiario, cd_guia_operadora_pesquisa_w, cd_guia_ok_w, nm_usuario_p, cd_estabelecimento_p, tb_cd_usuario_plano_conv_w(nr_indice_w), tb_cd_cooperativa_cart_conv_w(nr_indice_w), tb_cd_coop_cart_number_conv_w(nr_indice_w), tb_nr_seq_congen_cart_conv_w(nr_indice_w), tb_nr_seq_segurado_conv_w(nr_indice_w)) INTO STRICT tb_cd_usuario_plano_conv_w(nr_indice_w), tb_cd_cooperativa_cart_conv_w(nr_indice_w), tb_cd_coop_cart_number_conv_w(nr_indice_w), tb_nr_seq_congen_cart_conv_w(nr_indice_w), tb_nr_seq_segurado_conv_w(nr_indice_w);
	-- obt_m a congenere do benefici_rio				

	tb_nr_seq_congenere_conv_w(nr_indice_w) :=  pls_conv_xml_cta_pck.obter_congenere_benef(tb_nr_seq_segurado_conv_w(nr_indice_w));
	
	-- Obt_m a sequencia de acordo com o c_digo da guia informada

	-- cd_guia_operadora = cd_guia_imp

	-- cd_guia_principal = cd_guia_solic_imp

	-- cd_guia_operadora_conv = cd_guia_pesquisa

	tb_nr_seq_guia_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_seq_guia_tasy(	'E', null,
									null, r_c02_w.cd_guia_operadora,
									cd_guia_operadora_pesquisa_w, r_c02_w.cd_guia_principal,
									tb_nr_seq_segurado_conv_w(nr_indice_w), tb_nr_seq_conta_conv_w(nr_indice_w),
									tb_nr_seq_congenere_conv_w(nr_indice_w), r_c02_w.cd_senha,
									null);
									
	-- ap_s identificar a sequencia da guia _ necess_rio buscar o cd guia operadora do mesmo

	-- isto porque em alguns clientes a guia da operadora possui carateres especiais e quando

	-- o prestador envia no XML este dado ele manda sem estes caracteres especiais para isso

	-- buscamos da pls_guia_plano de acordo com a sequencia que encontramos

	tb_cd_guia_operadora_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_guia_oper_autorizacao(tb_nr_seq_guia_conv_w(nr_indice_w), r_c02_w.cd_guia_operadora);
	
	-- o mesmo vale para a guia principal

	tb_cd_guia_principal_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_guia_prin_autorizacao(cd_guia_principal_pesquisa_w, tb_nr_seq_segurado_conv_w(nr_indice_w));

	-- obt_m a data de atendimento da conta

	tb_dt_atendimento_conv_w(nr_indice_w) := pls_conv_xml_cta_pck.obter_dt_atendimento_conta(	r_c02_w.nr_seq_conta, r_c02_w.ie_tipo_guia,
										r_c02_w.dt_fim_faturamento, r_c02_w.dt_emissao_guia);
	
	-- Obt_m a sequ_ncia do prestador executor da conta

	SELECT * FROM pls_conv_xml_cta_pck.obter_prestador_tasy(	'C', r_c02_w.cd_prestador_exec, r_c02_w.cd_cgc_prest_exec, r_c02_w.cd_cpf_prest_exec, cd_estabelecimento_p, tb_dt_atendimento_conv_w(nr_indice_w)) INTO STRICT tb_cd_prest_exec_conv_w(nr_indice_w), tb_cd_prest_exec_upper_conv_w(nr_indice_w), tb_cd_prest_exec_number_conv_w(nr_indice_w), tb_cd_cgc_prest_exec_conv_w(nr_indice_w), tb_cd_cpf_prest_exec_conv_w(nr_indice_w);

	-- Obt_m a sequ_ncia do prestador solicitante da conta

	SELECT * FROM pls_conv_xml_cta_pck.obter_prestador_tasy(	'C', r_c02_w.cd_prestador_solic, r_c02_w.cd_cgc_prest_solic, r_c02_w.cd_cpf_prest_solic, cd_estabelecimento_p, tb_dt_atendimento_conv_w(nr_indice_w)) INTO STRICT tb_cd_prest_solic_conv_w(nr_indice_w), tb_cd_prest_solic_upper_conv_w(nr_indice_w), tb_cd_prest_solic_num_conv_w(nr_indice_w), tb_cd_cgc_prest_solic_conv_w(nr_indice_w), tb_cd_cpf_prest_solic_conv_w(nr_indice_w);
										
	-- Obt_m profissional executor da conta

	SELECT * FROM pls_conv_xml_cta_pck.obter_profissional_tasy(	'ME', r_c02_w.nr_conselho_prof_exec, r_c02_w.cd_conselho_prof_exec, r_c02_w.cd_uf_conselho_prof_exec, r_c02_w.cd_cbo_saude_prof_exec, r_c02_w.nm_profissional_exec, r_c02_w.ie_tipo_guia, r_c02_w.cd_versao_tiss_conv, tb_nr_seq_tipo_atend_conv_w(nr_indice_w), cd_estabelecimento_p, nm_usuario_p, tb_regra_prof_exec_conv_w(nr_indice_w), tb_nr_cons_prof_exec_conv_w(nr_indice_w), tb_nr_seq_cons_prof_exe_conv_w(nr_indice_w), tb_cd_uf_cons_prof_exec_conv_w(nr_indice_w), tb_nr_cbo_prof_exec_conv_w(nr_indice_w), tb_cd_prof_exec_conv_w(nr_indice_w), tb_regime_atendimento(nr_indice_w), tb_saude_ocupacional(nr_indice_w)) INTO STRICT tb_regra_prof_exec_conv_w(nr_indice_w), tb_nr_cons_prof_exec_conv_w(nr_indice_w), tb_nr_seq_cons_prof_exe_conv_w(nr_indice_w), tb_cd_uf_cons_prof_exec_conv_w(nr_indice_w), tb_nr_cbo_prof_exec_conv_w(nr_indice_w), tb_cd_prof_exec_conv_w(nr_indice_w);

	-- Obt_m profissional solicitante da conta

	SELECT * FROM pls_conv_xml_cta_pck.obter_profissional_tasy(	'MS', r_c02_w.nr_conselho_prof_solic, r_c02_w.cd_conselho_prof_solic, r_c02_w.cd_uf_conselho_prof_solic, r_c02_w.cd_cbo_saude_prof_solic, r_c02_w.nm_profissional_solic, r_c02_w.ie_tipo_guia, r_c02_w.cd_versao_tiss_conv, tb_nr_seq_tipo_atend_conv_w(nr_indice_w), cd_estabelecimento_p, nm_usuario_p, tb_regra_prof_solic_conv_w(nr_indice_w), tb_nr_cons_prof_solic_conv_w(nr_indice_w), tb_nr_seq_cons_prof_sol_conv_w(nr_indice_w), tb_cd_uf_cons_prof_sol_conv_w(nr_indice_w), tb_nr_cbo_prof_solic_conv_w(nr_indice_w), tb_cd_prof_solic_conv_w(nr_indice_w), tb_regime_atendimento(nr_indice_w), tb_saude_ocupacional(nr_indice_w)) INTO STRICT tb_regra_prof_solic_conv_w(nr_indice_w), tb_nr_cons_prof_solic_conv_w(nr_indice_w), tb_nr_seq_cons_prof_sol_conv_w(nr_indice_w), tb_cd_uf_cons_prof_sol_conv_w(nr_indice_w), tb_nr_cbo_prof_solic_conv_w(nr_indice_w), tb_cd_prof_solic_conv_w(nr_indice_w);

	-- campo que ser_ utilizado para armazenar a guia que deve ser utilizada para selecionar atendimentos

	-- o cd_guia_ok_conv juntamente com o nr_seq_segurado_conv retornar todas as contas de uma mesmo atendimento e benefici_rio

	tb_cd_guia_ok_conv_w(nr_indice_w) := coalesce(r_c02_w.cd_guia_principal, coalesce(r_c02_w.cd_guia_operadora, r_c02_w.cd_guia_prestador));
																					
	--obt_m o tipo de atendimento de odontologia

	tb_ie_tipo_atend_odonto_conv_w(nr_indice_w)	:= pls_conv_xml_cta_pck.obter_tipo_atend_odont(	r_c02_w.ie_tipo_atend_odonto);
	
	--obt_m a sequ_ncia da cl_nica pelo tipo de interncacao

	tb_ie_tipo_internacao_conv_w(nr_indice_w)	:= pls_conv_xml_cta_pck.obter_seq_clinica_inter(	r_c02_w.ie_tipo_internacao);
	
	--obt_m se o atendimento est_ internado

	tb_ie_tipo_internado_conv_w(nr_indice_w)	:= pls_conv_xml_cta_pck.obter_se_internado(	r_c02_w.nr_seq_conta, r_c02_w.ie_tipo_guia,
										tb_nr_seq_tipo_atend_conv_w(nr_indice_w), r_c02_w.ie_tipo_atendimento,
										r_c02_w.ie_regime_atendimento, r_c02_w.ie_saude_ocupacional, r_c02_w.dt_atendimento);
	
	--obt_m se o atendimento _ vinculado a outro atendimento internado

	tb_ie_vinc_internacao_conv_w(nr_indice_w)	:= pls_conv_xml_cta_pck.obter_se_vinc_internacao(	r_c02_w.ie_tipo_guia, tb_nr_seq_segurado_conv_w(nr_indice_w),
											tb_cd_guia_ok_conv_w(nr_indice_w));
	
	--Verifica se existe segurado

	if ((tb_nr_seq_segurado_conv_w(nr_indice_w) IS NOT NULL AND (tb_nr_seq_segurado_conv_w(nr_indice_w))::text <> '')) then
		--Conv_nio do segurado

		tb_cd_convenio_conv_w(nr_indice_w)              := pls_obter_conv_cat_segurado(	tb_nr_seq_segurado_conv_w(nr_indice_w), 1);
		--Categoria do conv_nio do segurado

		tb_cd_categoria_conv_w(nr_indice_w)		:= pls_obter_conv_cat_segurado(	tb_nr_seq_segurado_conv_w(nr_indice_w), 2);
		--Sexo do segurado

		tb_ie_sexo_conv_w(nr_indice_w)			:= pls_conv_xml_cta_pck.obter_dados_beneficiario(	tb_nr_seq_segurado_conv_w(nr_indice_w), 'SXS');
		--Estado Operadora

		tb_sg_estado_operadora_conv_w(nr_indice_w)	:= pls_conv_xml_cta_pck.obter_dados_beneficiario(	tb_nr_seq_segurado_conv_w(nr_indice_w), 'UF');	
		--Tipo de interc_mbio (Nacional ou Estadual) 

		tb_ie_tipo_inter_oper_conv_w(nr_indice_w)	:= pls_conv_xml_cta_pck.obter_dados_beneficiario(	tb_nr_seq_segurado_conv_w(nr_indice_w), 'INT');	
		--Idade do segurado em anos e meses

		SELECT * FROM pls_conv_xml_cta_pck.obter_idade_beneficiario(	tb_nr_seq_segurado_conv_w(nr_indice_w), tb_dt_atendimento_conv_w(nr_indice_w), tb_qt_idade_conta_meses_conv_w(nr_indice_w), tb_qt_idade_conta_anos_conv_w(nr_indice_w)) INTO STRICT tb_qt_idade_conta_meses_conv_w(nr_indice_w), tb_qt_idade_conta_anos_conv_w(nr_indice_w);
	else
		tb_cd_convenio_conv_w(nr_indice_w)		:= null;
		tb_cd_categoria_conv_w(nr_indice_w)		:= null;
		tb_ie_sexo_conv_w(nr_indice_w)			:= null;
		tb_sg_estado_operadora_conv_w(nr_indice_w)	:= null;
		tb_ie_tipo_inter_oper_conv_w(nr_indice_w)	:= null;
		tb_qt_idade_conta_meses_conv_w(nr_indice_w)	:= null;
		tb_qt_idade_conta_anos_conv_w(nr_indice_w)	:= null;
	end if;
	
	--Verifica se existe profissional Executor

	if ((tb_cd_prof_exec_conv_w(nr_indice_w) IS NOT NULL AND (tb_cd_prof_exec_conv_w(nr_indice_w))::text <> '')) then
		--Profissional Executor cooperado

		tb_cd_prof_coop_exec_conv_w(nr_indice_w)	:= pls_obter_se_cooperado_ativo(tb_cd_prof_exec_conv_w(nr_indice_w), tb_dt_atendimento_conv_w(nr_indice_w), null);	
	else
		tb_cd_prof_coop_exec_conv_w(nr_indice_w)	:= null;
	end if;
	--Verifica se existe profissional Solicitante

	if ((tb_cd_prof_solic_conv_w(nr_indice_w) IS NOT NULL AND (tb_cd_prof_solic_conv_w(nr_indice_w))::text <> '')) then
		--Profissional Solicitante cooperado

		tb_cd_prof_coop_solic_conv_w(nr_indice_w)	:= pls_obter_se_cooperado_ativo(tb_cd_prof_solic_conv_w(nr_indice_w), tb_dt_atendimento_conv_w(nr_indice_w), null);
	else
		tb_cd_prof_coop_solic_conv_w(nr_indice_w)	:= null;
	end if;
	
	if (r_c02_w.cd_versao_tiss_conv >= '3.01.00') then
		tb_tipo_faturamento_w(nr_indice_w) := pls_obter_tipo_faturamento(r_c02_w.ie_tipo_faturamento );
	else
		tb_tipo_faturamento_w(nr_indice_w) := r_c02_w.ie_tipo_faturamento;
	end if;
	
	if ((tb_nr_seq_prest_exec_conv_w(nr_indice_w) IS NOT NULL AND (tb_nr_seq_prest_exec_conv_w(nr_indice_w))::text <> '')) then
		tb_cd_cnes_w(nr_indice_w) 	   := coalesce(substr(pls_obter_cnes_prestador(tb_nr_seq_prest_exec_conv_w(nr_indice_w)), 1, 40), r_c02_w.cd_cnes);
	else
		tb_cd_cnes_w(nr_indice_w) 	   := r_c02_w.cd_cnes;
	end if;
	
	-- se atingiu a quantidade envia para o banco e reinicia as vari_veis

	-- sen_o apenas incremente o contador

	if (nr_indice_w >= pls_util_pck.qt_registro_transacao_w) then	
		
		SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_conta(	tb_nr_seq_conta_conv_w, tb_cd_usuario_plano_conv_w, tb_cd_guia_operadora_conv_w, tb_cd_guia_principal_conv_w, tb_cd_cooperativa_cart_conv_w, tb_cd_coop_cart_number_conv_w, tb_nr_seq_congen_cart_conv_w, tb_nr_seq_segurado_conv_w, tb_nr_seq_congenere_conv_w, tb_cd_prest_exec_conv_w, tb_cd_prest_exec_upper_conv_w, tb_cd_prest_exec_number_conv_w, tb_cd_cgc_prest_exec_conv_w, tb_cd_cpf_prest_exec_conv_w, tb_nr_seq_prest_exec_conv_w, tb_cd_prest_solic_conv_w, tb_cd_prest_solic_upper_conv_w, tb_cd_prest_solic_num_conv_w, tb_cd_cgc_prest_solic_conv_w, tb_cd_cpf_prest_solic_conv_w, tb_nr_seq_prest_solic_conv_w, tb_regra_prof_exec_conv_w, tb_cd_prof_exec_conv_w, tb_nr_cons_prof_exec_conv_w, tb_nr_seq_cons_prof_exe_conv_w, tb_cd_uf_cons_prof_exec_conv_w, tb_nr_cbo_prof_exec_conv_w, tb_ie_carater_atend_conv_w, tb_regra_prof_solic_conv_w, tb_cd_prof_solic_conv_w, tb_nr_cbo_prof_solic_conv_w, tb_nr_cons_prof_solic_conv_w, tb_nr_seq_cons_prof_sol_conv_w, tb_cd_uf_cons_prof_sol_conv_w, tb_nr_seq_moti_ence_conv_w, tb_nr_seq_guia_conv_w, tb_nr_seq_tipo_atend_conv_w, tb_cd_guia_ok_conv_w, tb_dt_atendimento_conv_w, tb_ie_tipo_atend_odonto_conv_w, tb_ie_tipo_internacao_conv_w, tb_ie_tipo_internado_conv_w, tb_ie_vinc_internacao_conv_w, tb_cd_convenio_conv_w, tb_cd_categoria_conv_w, tb_ie_sexo_conv_w, tb_qt_idade_conta_meses_conv_w, tb_qt_idade_conta_anos_conv_w, tb_cd_prof_coop_exec_conv_w, tb_cd_prof_coop_solic_conv_w, tb_sg_estado_operadora_conv_w, tb_ie_tipo_inter_oper_conv_w, tb_tipo_faturamento_w, tb_cd_cnes_w, cd_estabelecimento_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_conta_conv_w := _ora2pg_r.tb_nr_seq_conta_conv_p; tb_cd_usuario_plano_conv_w := _ora2pg_r.tb_cd_usuario_plano_conv_p; tb_cd_guia_operadora_conv_w := _ora2pg_r.tb_cd_guia_operadora_conv_p; tb_cd_guia_principal_conv_w := _ora2pg_r.tb_cd_guia_principal_conv_p; tb_cd_cooperativa_cart_conv_w := _ora2pg_r.tb_cd_cooperativa_cart_conv_p; tb_cd_coop_cart_number_conv_w := _ora2pg_r.tb_cd_coop_cart_number_conv_p; tb_nr_seq_congen_cart_conv_w := _ora2pg_r.tb_nr_seq_congen_cart_conv_p; tb_nr_seq_segurado_conv_w := _ora2pg_r.tb_nr_seq_segurado_conv_p; tb_nr_seq_congenere_conv_w := _ora2pg_r.tb_nr_seq_congenere_conv_p; tb_cd_prest_exec_conv_w := _ora2pg_r.tb_cd_prest_exec_conv_p; tb_cd_prest_exec_upper_conv_w := _ora2pg_r.tb_cd_prest_exec_upper_conv_p; tb_cd_prest_exec_number_conv_w := _ora2pg_r.tb_cd_prest_exec_number_conv_p; tb_cd_cgc_prest_exec_conv_w := _ora2pg_r.tb_cd_cgc_prest_exec_conv_p; tb_cd_cpf_prest_exec_conv_w := _ora2pg_r.tb_cd_cpf_prest_exec_conv_p; tb_nr_seq_prest_exec_conv_w := _ora2pg_r.tb_nr_seq_prest_exec_conv_p; tb_cd_prest_solic_conv_w := _ora2pg_r.tb_cd_prest_solic_conv_p; tb_cd_prest_solic_upper_conv_w := _ora2pg_r.tb_cd_prest_solic_upper_conv_p; tb_cd_prest_solic_num_conv_w := _ora2pg_r.tb_cd_prest_solic_num_conv_p; tb_cd_cgc_prest_solic_conv_w := _ora2pg_r.tb_cd_cgc_prest_solic_conv_p; tb_cd_cpf_prest_solic_conv_w := _ora2pg_r.tb_cd_cpf_prest_solic_conv_p; tb_nr_seq_prest_solic_conv_w := _ora2pg_r.tb_nr_seq_prest_solic_conv_p; tb_regra_prof_exec_conv_w := _ora2pg_r.tb_regra_prof_exec_conv_p; tb_cd_prof_exec_conv_w := _ora2pg_r.tb_cd_prof_exec_conv_p; tb_nr_cons_prof_exec_conv_w := _ora2pg_r.tb_nr_cons_prof_exec_conv_p; tb_nr_seq_cons_prof_exe_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_exe_conv_p; tb_cd_uf_cons_prof_exec_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_exec_conv_p; tb_nr_cbo_prof_exec_conv_w := _ora2pg_r.tb_nr_cbo_prof_exec_conv_p; tb_ie_carater_atend_conv_w := _ora2pg_r.tb_ie_carater_atend_conv_p; tb_regra_prof_solic_conv_w := _ora2pg_r.tb_regra_prof_solic_conv_p; tb_cd_prof_solic_conv_w := _ora2pg_r.tb_cd_prof_solic_conv_p; tb_nr_cbo_prof_solic_conv_w := _ora2pg_r.tb_nr_cbo_prof_solic_conv_p; tb_nr_cons_prof_solic_conv_w := _ora2pg_r.tb_nr_cons_prof_solic_conv_p; tb_nr_seq_cons_prof_sol_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_sol_conv_p; tb_cd_uf_cons_prof_sol_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_sol_conv_p; tb_nr_seq_moti_ence_conv_w := _ora2pg_r.tb_nr_seq_moti_ence_conv_p; tb_nr_seq_guia_conv_w := _ora2pg_r.tb_nr_seq_guia_conv_p; tb_nr_seq_tipo_atend_conv_w := _ora2pg_r.tb_nr_seq_tipo_atend_conv_p; tb_cd_guia_ok_conv_w := _ora2pg_r.tb_cd_guia_ok_conv_p; tb_dt_atendimento_conv_w := _ora2pg_r.tb_dt_atendimento_conv_p; tb_ie_tipo_atend_odonto_conv_w := _ora2pg_r.tb_ie_tipo_atend_odonto_conv_p; tb_ie_tipo_internacao_conv_w := _ora2pg_r.tb_ie_tipo_internacao_conv_p; tb_ie_tipo_internado_conv_w := _ora2pg_r.tb_ie_tipo_internado_conv_p; tb_ie_vinc_internacao_conv_w := _ora2pg_r.tb_ie_vinc_internacao_conv_p; tb_cd_convenio_conv_w := _ora2pg_r.tb_cd_convenio_conv_p; tb_cd_categoria_conv_w := _ora2pg_r.tb_cd_categoria_conv_p; tb_ie_sexo_conv_w := _ora2pg_r.tb_ie_sexo_conv_p; tb_qt_idade_conta_meses_conv_w := _ora2pg_r.tb_qt_idade_conta_meses_conv_p; tb_qt_idade_conta_anos_conv_w := _ora2pg_r.tb_qt_idade_conta_anos_conv_p; tb_cd_prof_coop_exec_conv_w := _ora2pg_r.tb_cd_prof_coop_exec_conv_p; tb_cd_prof_coop_solic_conv_w := _ora2pg_r.tb_cd_prof_coop_solic_conv_p; tb_sg_estado_operadora_conv_w := _ora2pg_r.tb_sg_estado_operadora_conv_p; tb_ie_tipo_inter_oper_conv_w := _ora2pg_r.tb_ie_tipo_inter_oper_conv_p; tb_tipo_faturamento_w := _ora2pg_r.tb_tipo_faturamento_p; tb_cd_cnes_w := _ora2pg_r.tb_cd_cnes_p;

		nr_indice_w := 0;
	else
		nr_indice_w := nr_indice_w + 1;
	end if;
end loop;

-- se sobrou alguma coisa manda para o banco

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_conta(	tb_nr_seq_conta_conv_w, tb_cd_usuario_plano_conv_w, tb_cd_guia_operadora_conv_w, tb_cd_guia_principal_conv_w, tb_cd_cooperativa_cart_conv_w, tb_cd_coop_cart_number_conv_w, tb_nr_seq_congen_cart_conv_w, tb_nr_seq_segurado_conv_w, tb_nr_seq_congenere_conv_w, tb_cd_prest_exec_conv_w, tb_cd_prest_exec_upper_conv_w, tb_cd_prest_exec_number_conv_w, tb_cd_cgc_prest_exec_conv_w, tb_cd_cpf_prest_exec_conv_w, tb_nr_seq_prest_exec_conv_w, tb_cd_prest_solic_conv_w, tb_cd_prest_solic_upper_conv_w, tb_cd_prest_solic_num_conv_w, tb_cd_cgc_prest_solic_conv_w, tb_cd_cpf_prest_solic_conv_w, tb_nr_seq_prest_solic_conv_w, tb_regra_prof_exec_conv_w, tb_cd_prof_exec_conv_w, tb_nr_cons_prof_exec_conv_w, tb_nr_seq_cons_prof_exe_conv_w, tb_cd_uf_cons_prof_exec_conv_w, tb_nr_cbo_prof_exec_conv_w, tb_ie_carater_atend_conv_w, tb_regra_prof_solic_conv_w, tb_cd_prof_solic_conv_w, tb_nr_cbo_prof_solic_conv_w, tb_nr_cons_prof_solic_conv_w, tb_nr_seq_cons_prof_sol_conv_w, tb_cd_uf_cons_prof_sol_conv_w, tb_nr_seq_moti_ence_conv_w, tb_nr_seq_guia_conv_w, tb_nr_seq_tipo_atend_conv_w, tb_cd_guia_ok_conv_w, tb_dt_atendimento_conv_w, tb_ie_tipo_atend_odonto_conv_w, tb_ie_tipo_internacao_conv_w, tb_ie_tipo_internado_conv_w, tb_ie_vinc_internacao_conv_w, tb_cd_convenio_conv_w, tb_cd_categoria_conv_w, tb_ie_sexo_conv_w, tb_qt_idade_conta_meses_conv_w, tb_qt_idade_conta_anos_conv_w, tb_cd_prof_coop_exec_conv_w, tb_cd_prof_coop_solic_conv_w, tb_sg_estado_operadora_conv_w, tb_ie_tipo_inter_oper_conv_w, tb_tipo_faturamento_w, tb_cd_cnes_w, cd_estabelecimento_p, nm_usuario_p) INTO STRICT _ora2pg_r;
 	tb_nr_seq_conta_conv_w := _ora2pg_r.tb_nr_seq_conta_conv_p; tb_cd_usuario_plano_conv_w := _ora2pg_r.tb_cd_usuario_plano_conv_p; tb_cd_guia_operadora_conv_w := _ora2pg_r.tb_cd_guia_operadora_conv_p; tb_cd_guia_principal_conv_w := _ora2pg_r.tb_cd_guia_principal_conv_p; tb_cd_cooperativa_cart_conv_w := _ora2pg_r.tb_cd_cooperativa_cart_conv_p; tb_cd_coop_cart_number_conv_w := _ora2pg_r.tb_cd_coop_cart_number_conv_p; tb_nr_seq_congen_cart_conv_w := _ora2pg_r.tb_nr_seq_congen_cart_conv_p; tb_nr_seq_segurado_conv_w := _ora2pg_r.tb_nr_seq_segurado_conv_p; tb_nr_seq_congenere_conv_w := _ora2pg_r.tb_nr_seq_congenere_conv_p; tb_cd_prest_exec_conv_w := _ora2pg_r.tb_cd_prest_exec_conv_p; tb_cd_prest_exec_upper_conv_w := _ora2pg_r.tb_cd_prest_exec_upper_conv_p; tb_cd_prest_exec_number_conv_w := _ora2pg_r.tb_cd_prest_exec_number_conv_p; tb_cd_cgc_prest_exec_conv_w := _ora2pg_r.tb_cd_cgc_prest_exec_conv_p; tb_cd_cpf_prest_exec_conv_w := _ora2pg_r.tb_cd_cpf_prest_exec_conv_p; tb_nr_seq_prest_exec_conv_w := _ora2pg_r.tb_nr_seq_prest_exec_conv_p; tb_cd_prest_solic_conv_w := _ora2pg_r.tb_cd_prest_solic_conv_p; tb_cd_prest_solic_upper_conv_w := _ora2pg_r.tb_cd_prest_solic_upper_conv_p; tb_cd_prest_solic_num_conv_w := _ora2pg_r.tb_cd_prest_solic_num_conv_p; tb_cd_cgc_prest_solic_conv_w := _ora2pg_r.tb_cd_cgc_prest_solic_conv_p; tb_cd_cpf_prest_solic_conv_w := _ora2pg_r.tb_cd_cpf_prest_solic_conv_p; tb_nr_seq_prest_solic_conv_w := _ora2pg_r.tb_nr_seq_prest_solic_conv_p; tb_regra_prof_exec_conv_w := _ora2pg_r.tb_regra_prof_exec_conv_p; tb_cd_prof_exec_conv_w := _ora2pg_r.tb_cd_prof_exec_conv_p; tb_nr_cons_prof_exec_conv_w := _ora2pg_r.tb_nr_cons_prof_exec_conv_p; tb_nr_seq_cons_prof_exe_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_exe_conv_p; tb_cd_uf_cons_prof_exec_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_exec_conv_p; tb_nr_cbo_prof_exec_conv_w := _ora2pg_r.tb_nr_cbo_prof_exec_conv_p; tb_ie_carater_atend_conv_w := _ora2pg_r.tb_ie_carater_atend_conv_p; tb_regra_prof_solic_conv_w := _ora2pg_r.tb_regra_prof_solic_conv_p; tb_cd_prof_solic_conv_w := _ora2pg_r.tb_cd_prof_solic_conv_p; tb_nr_cbo_prof_solic_conv_w := _ora2pg_r.tb_nr_cbo_prof_solic_conv_p; tb_nr_cons_prof_solic_conv_w := _ora2pg_r.tb_nr_cons_prof_solic_conv_p; tb_nr_seq_cons_prof_sol_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_sol_conv_p; tb_cd_uf_cons_prof_sol_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_sol_conv_p; tb_nr_seq_moti_ence_conv_w := _ora2pg_r.tb_nr_seq_moti_ence_conv_p; tb_nr_seq_guia_conv_w := _ora2pg_r.tb_nr_seq_guia_conv_p; tb_nr_seq_tipo_atend_conv_w := _ora2pg_r.tb_nr_seq_tipo_atend_conv_p; tb_cd_guia_ok_conv_w := _ora2pg_r.tb_cd_guia_ok_conv_p; tb_dt_atendimento_conv_w := _ora2pg_r.tb_dt_atendimento_conv_p; tb_ie_tipo_atend_odonto_conv_w := _ora2pg_r.tb_ie_tipo_atend_odonto_conv_p; tb_ie_tipo_internacao_conv_w := _ora2pg_r.tb_ie_tipo_internacao_conv_p; tb_ie_tipo_internado_conv_w := _ora2pg_r.tb_ie_tipo_internado_conv_p; tb_ie_vinc_internacao_conv_w := _ora2pg_r.tb_ie_vinc_internacao_conv_p; tb_cd_convenio_conv_w := _ora2pg_r.tb_cd_convenio_conv_p; tb_cd_categoria_conv_w := _ora2pg_r.tb_cd_categoria_conv_p; tb_ie_sexo_conv_w := _ora2pg_r.tb_ie_sexo_conv_p; tb_qt_idade_conta_meses_conv_w := _ora2pg_r.tb_qt_idade_conta_meses_conv_p; tb_qt_idade_conta_anos_conv_w := _ora2pg_r.tb_qt_idade_conta_anos_conv_p; tb_cd_prof_coop_exec_conv_w := _ora2pg_r.tb_cd_prof_coop_exec_conv_p; tb_cd_prof_coop_solic_conv_w := _ora2pg_r.tb_cd_prof_coop_solic_conv_p; tb_sg_estado_operadora_conv_w := _ora2pg_r.tb_sg_estado_operadora_conv_p; tb_ie_tipo_inter_oper_conv_w := _ora2pg_r.tb_ie_tipo_inter_oper_conv_p; tb_tipo_faturamento_w := _ora2pg_r.tb_tipo_faturamento_p; tb_cd_cnes_w := _ora2pg_r.tb_cd_cnes_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.pls_conv_nv_conta ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
