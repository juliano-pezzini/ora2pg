-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.aplica_conv_item_tab_tiss ( ie_tipo_item_p text) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_nr_seq_material_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_item_w	pls_util_cta_pck.t_number_table;
tb_ie_origem_proced_w	pls_util_cta_pck.t_number_table;
tb_cd_proced_conv_w	pls_util_cta_pck.t_number_table;
tb_ie_tipo_item_conv_w	pls_util_cta_pck.t_varchar2_table_10;
nr_contador_w		integer;
qt_existe_proc_w	integer;

-- retorna todos os itens que o nr_seq_regra seja not null

C01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_item,
		cd_procedimento,
		cd_tipo_tabela_conv,
		ie_tipo_despesa_conv
	from	pls_conta_item_imp_tmp
	where	CASE WHEN coalesce(nr_seq_regra::text, '') = '' THEN  -1  ELSE -2 END  = -2;

BEGIN
-- inicia as vari_veis

nr_contador_w := 0;
-- chama inicialmente para limpar as tabelas

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_tab_tiss(	tb_nr_seq_item_w, tb_nr_seq_material_w, tb_ie_origem_proced_w, tb_cd_proced_conv_w, tb_ie_tipo_item_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_material_w := _ora2pg_r.tb_nr_seq_material_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_tipo_item_conv_w := _ora2pg_r.tb_ie_tipo_item_conv_p;

-- aqui verificamos se estamos tranformando materiais em procedimentos ou procedimentos em materiais

-- isto porque a forma de identifica-los _ diferente. Quando P _ material para procedimento

if (ie_tipo_item_p = 'P') then

	-- processa todos os itens que entraram em alguma regra

	for r_c01_w in C01 loop
		tb_ie_tipo_item_conv_w(nr_contador_w) := 'P';
		-- apenas vira procedimento os itens que tiveram o tipo despesa alterados

		-- identifica a origem do procedimento pelo tipo da tabela e altera o tipo para P		

		if (r_c01_w.ie_tipo_despesa_conv in ('05', '07')) then			
			-- AMB

			if (r_c01_w.cd_tipo_tabela_conv in ('01', '02', '03', '04', '07', '08')) then
				tb_ie_origem_proced_w(nr_contador_w) := 1;
			-- CBHPM

			elsif (r_c01_w.cd_tipo_tabela_conv = '06') then
				tb_ie_origem_proced_w(nr_contador_w) := 5;
			-- SUS_2008

			elsif (r_c01_w.cd_tipo_tabela_conv in ('10', '11')) then
				tb_ie_origem_proced_w(nr_contador_w) := 7;
			-- TUSS

			elsif (r_c01_w.cd_tipo_tabela_conv in ('16', '18', '22')) then
				tb_ie_origem_proced_w(nr_contador_w) := 8;
			-- PROPRIO

			elsif (r_c01_w.cd_tipo_tabela_conv in ('94', '95', '96', '97', '98', '99', '00')) then
				tb_ie_origem_proced_w(nr_contador_w) := 4;
			else
				tb_ie_origem_proced_w(nr_contador_w) := null;
			end if;
			
			-- se encontrou uma regra para transformar material em procedimento limpamos o campo nr_seq_material

			tb_cd_proced_conv_w(nr_contador_w) := r_c01_w.cd_procedimento;
			tb_nr_seq_item_w(nr_contador_w) := r_c01_w.nr_seq_item;
			tb_nr_seq_material_w(nr_contador_w) := null;
			tb_ie_tipo_item_conv_w(nr_contador_w) := 'P';
			
			-- se atingiu a quantidade atualiza a tabela tempor_ria

			if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then

				SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_tab_tiss(	tb_nr_seq_item_w, tb_nr_seq_material_w, tb_ie_origem_proced_w, tb_cd_proced_conv_w, tb_ie_tipo_item_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_material_w := _ora2pg_r.tb_nr_seq_material_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_tipo_item_conv_w := _ora2pg_r.tb_ie_tipo_item_conv_p;
				nr_contador_w := 0;
			else
				nr_contador_w := nr_contador_w + 1;
			end if;
		end if;
	end loop;
-- quando M _ procedimento para Material

elsif (ie_tipo_item_p = 'M') then

	-- processa todos os itens que entraram em alguma regra

	for r_c01_w in C01 loop
	
		-- quando tabela 00 verifica se existe algo cadastrado com o cd_procedimento que veio no XML

		if (r_c01_w.cd_tipo_tabela_conv = '00') then

			-- coloquei em um exception pois o campo da tabela _ um number por_m no XML

			-- vem um varchar e quando gera uma exception por este motivo acredito que 

			-- n_o ir_ existir um c_digo de precodimento v_lido, logo deve ser um material

			begin
				select	count(1) 
				into STRICT	qt_existe_proc_w
				from	procedimento
				where	cd_procedimento = r_c01_w.cd_procedimento;
			exception
			when others then
				qt_existe_proc_w := 0;
			end;
		end if;

		-- vira material tudo que for tabelas pr_prias de materiais, tipo despesa pr_prio de material

		-- ou ainda se tiver tabela 00 e n_o exista um procedimento com o c_digo que veio no XML

		
		if (r_c01_w.cd_tipo_tabela_conv in ('05','12','95','96','99')) or (r_c01_w.ie_tipo_despesa_conv in ('01','02','03','08')) or (r_c01_w.cd_tipo_tabela_conv = '00' and qt_existe_proc_w = 0) then
			
			-- caso vire material limpa os dados dos campos de procedimento cd_procedimento_conv e ie_origem_proc_conv

			tb_nr_seq_material_w(nr_contador_w) := (pls_obter_seq_codigo_material(null,
											r_c01_w.cd_procedimento))::numeric;
			tb_nr_seq_item_w(nr_contador_w) := r_c01_w.nr_seq_item;
			tb_ie_tipo_item_conv_w(nr_contador_w) := 'M';
			tb_ie_origem_proced_w(nr_contador_w) := null;
			tb_cd_proced_conv_w(nr_contador_w) := null;
			
			-- se atingiu a quantidade atualiza a tabela tempor_ria

			if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then

				SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_tab_tiss(	tb_nr_seq_item_w, tb_nr_seq_material_w, tb_ie_origem_proced_w, tb_cd_proced_conv_w, tb_ie_tipo_item_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_material_w := _ora2pg_r.tb_nr_seq_material_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_tipo_item_conv_w := _ora2pg_r.tb_ie_tipo_item_conv_p;
				nr_contador_w := 0;
			else
				nr_contador_w := nr_contador_w + 1;
			end if;
		end if;
	end loop;
end if;
	
-- se sobrou algo manda pra tabela

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_tab_tiss(	tb_nr_seq_item_w, tb_nr_seq_material_w, tb_ie_origem_proced_w, tb_cd_proced_conv_w, tb_ie_tipo_item_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_material_w := _ora2pg_r.tb_nr_seq_material_p; tb_ie_origem_proced_w := _ora2pg_r.tb_ie_origem_proced_p; tb_cd_proced_conv_w := _ora2pg_r.tb_cd_proced_conv_p; tb_ie_tipo_item_conv_w := _ora2pg_r.tb_ie_tipo_item_conv_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.aplica_conv_item_tab_tiss ( ie_tipo_item_p text) FROM PUBLIC;
