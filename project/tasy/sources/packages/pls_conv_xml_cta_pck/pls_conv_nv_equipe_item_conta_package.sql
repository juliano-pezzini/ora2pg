-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.pls_conv_nv_equipe_item_conta ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


_ora2pg_r RECORD;
-- utilizados para alimentar a tabela tempor_ria

tb_nr_seq_item_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_equipe_w		pls_util_cta_pck.t_number_table;
tb_nr_cons_profissional_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_conselho_prof_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_uf_cons_prof_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_cbo_saude_prof_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_grau_partic_w		pls_util_cta_pck.t_varchar2_table_10;
tb_nm_profissional_w		pls_util_cta_pck.t_varchar2_table_200;
tb_ie_tipo_guia_w		pls_util_cta_pck.t_varchar2_table_10;
tb_cd_versao_tiss_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_tipo_atend_conv_w	pls_util_cta_pck.t_number_table;

-- campos conv

tb_nr_seq_regra_prof_conv_w 	pls_util_cta_pck.t_number_table;
tb_nr_conselho_prof_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_cons_prof_conv_w 	pls_util_cta_pck.t_number_table;
tb_cd_uf_cons_prof_conv_w 	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_cbo_saude_conv_w	pls_util_cta_pck.t_number_table;
tb_cd_profissional_conv_w	pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_grau_partic_conv_w	pls_util_cta_pck.t_number_table;
tb_dt_atendimento_conv_w	pls_util_cta_pck.t_date_table;
tb_cd_prof_coop_conv_w		pls_util_cta_pck.t_varchar2_table_1;

--Prestador

tb_cd_prestador_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cpf_prestador_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prestador_conv_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cpf_prestador_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_cgc_prestador_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prestador_upper_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_cd_prestador_number_conv_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_conv_w	pls_util_cta_pck.t_varchar2_table_20;
tb_regime_atendimento_w	pls_util_cta_pck.t_varchar2_table_10;
tb_saude_ocupacional_w	pls_util_cta_pck.t_varchar2_table_10;

nr_contador_w			integer;

C01 CURSOR(	nr_seq_protocolo_pc	pls_protocolo_conta_imp.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia nr_seq_item,
		d.nr_sequencia nr_seq_equipe,
		d.nr_conselho_profissional,
		d.cd_conselho_profissional,
		d.cd_uf_conselho_profissional,
		d.cd_cbo_saude_profissional,
		d.cd_grau_partic,
		d.cd_prestador,
		d.nm_profissional,
		a.ie_tipo_guia,
		a.cd_versao_tiss_conv,
		b.nr_seq_tipo_atend_conv,
		b.dt_atendimento_conv,
		d.cd_cpf_prestador,
		b.ie_regime_atendimento,
		b.ie_saude_ocupacional
	from	pls_protocolo_conta_imp a,
		pls_conta_imp b,
		pls_conta_item_imp c,
		pls_conta_item_equipe_imp d
	where	a.nr_sequencia = nr_seq_protocolo_pc
	and	b.nr_seq_protocolo = a.nr_sequencia
	and	c.nr_seq_conta = b.nr_sequencia
	and	c.ie_tipo_item_conv = 'P'
	and	d.nr_seq_conta_item = c.nr_sequencia;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_conta_item,
		nr_conselho_profissional,
		cd_conselho_profissional,
		cd_uf_conselho_profissional,
		cd_cbo_saude_profissional,
		cd_grau_partic,
		cd_prestador,
		nm_profissional,
		ie_tipo_guia,
		cd_versao_tiss_conv,
		nr_seq_tipo_atend_conv,
		dt_atendimento_conv,
		cd_cpf_prestador,
		ie_regime_atendimento,
		ie_saude_ocupacional
	from 	pls_cta_it_equipe_imp_tmp;

BEGIN
-- limpa a tabela tempor_ria

EXECUTE 'truncate table pls_cta_it_equipe_imp_tmp';

-- Alimenta a tabela tempor_ria com os dados necess_rios

open C01(nr_seq_protocolo_p);
loop
	fetch C01 bulk collect into	tb_nr_seq_item_w, tb_nr_seq_equipe_w, tb_nr_cons_profissional_w,
					tb_cd_conselho_prof_w, tb_cd_uf_cons_prof_w, tb_cd_cbo_saude_prof_w,
					tb_cd_grau_partic_w, tb_cd_prestador_w, tb_nm_profissional_w,
					tb_ie_tipo_guia_w, tb_cd_versao_tiss_conv_w, tb_nr_seq_tipo_atend_conv_w,
					tb_dt_atendimento_conv_w, tb_cd_cpf_prestador_w, tb_regime_atendimento_w,
					tb_saude_ocupacional_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_item_w.count = 0;
	
	forall i in tb_nr_seq_item_w.first..tb_nr_seq_item_w.last
		insert into pls_cta_it_equipe_imp_tmp(
			nr_sequencia, nr_seq_conta_item, nr_conselho_profissional,
			cd_conselho_profissional, cd_uf_conselho_profissional, cd_cbo_saude_profissional,
			cd_grau_partic, cd_prestador, nm_profissional,
			ie_tipo_guia, cd_versao_tiss_conv, nr_seq_tipo_atend_conv,
			dt_atendimento_conv, cd_cpf_prestador, ie_regime_atendimento,
			ie_saude_ocupacional
		) values (
			tb_nr_seq_equipe_w(i), tb_nr_seq_item_w(i), tb_nr_cons_profissional_w(i),
			tb_cd_conselho_prof_w(i), tb_cd_uf_cons_prof_w(i), tb_cd_cbo_saude_prof_w(i),
			tb_cd_grau_partic_w(i), tb_cd_prestador_w(i), tb_nm_profissional_w(i),
			tb_ie_tipo_guia_w(i), tb_cd_versao_tiss_conv_w(i), tb_nr_seq_tipo_atend_conv_w(i),
			tb_dt_atendimento_conv_w(i), tb_cd_cpf_prestador_w(i), tb_regime_atendimento_w(i),
			tb_saude_ocupacional_w(i)
		);
	commit;
end loop;
close C01;

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_equipe(	tb_nr_seq_equipe_w, tb_nr_seq_item_w, tb_nr_seq_regra_prof_conv_w, tb_nr_conselho_prof_conv_w, tb_nr_seq_cons_prof_conv_w, tb_cd_uf_cons_prof_conv_w, tb_nr_seq_cbo_saude_conv_w, tb_cd_profissional_conv_w, tb_nr_seq_grau_partic_conv_w, tb_cd_prof_coop_conv_w, tb_cd_prestador_conv_w, tb_cd_prestador_upper_conv_w, tb_cd_prestador_number_conv_w, tb_cd_cpf_prestador_conv_w, tb_nr_seq_prestador_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_equipe_w := _ora2pg_r.tb_nr_seq_equipe_p; tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_regra_prof_conv_w := _ora2pg_r.tb_nr_seq_regra_prof_conv_p; tb_nr_conselho_prof_conv_w := _ora2pg_r.tb_nr_conselho_prof_conv_p; tb_nr_seq_cons_prof_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_conv_p; tb_cd_uf_cons_prof_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_conv_p; tb_nr_seq_cbo_saude_conv_w := _ora2pg_r.tb_nr_seq_cbo_saude_conv_p; tb_cd_profissional_conv_w := _ora2pg_r.tb_cd_profissional_conv_p; tb_nr_seq_grau_partic_conv_w := _ora2pg_r.tb_nr_seq_grau_partic_conv_p; tb_cd_prof_coop_conv_w := _ora2pg_r.tb_cd_profissional_coop_conv_p; tb_cd_prestador_conv_w := _ora2pg_r.tb_cd_prestador_conv_p; tb_cd_prestador_upper_conv_w := _ora2pg_r.tb_cd_prestador_upper_conv_p; tb_cd_prestador_number_conv_w := _ora2pg_r.tb_cd_prestador_number_conv_p; tb_cd_cpf_prestador_conv_w := _ora2pg_r.tb_cd_cpf_prestador_conv_p; tb_nr_seq_prestador_conv_w := _ora2pg_r.tb_nr_seq_prestador_conv_p;
nr_contador_w := 0;

for r_c02_w in C02 loop

	tb_nr_seq_item_w(nr_contador_w) 	  := r_c02_w.nr_seq_conta_item;
	tb_nr_seq_equipe_w(nr_contador_w) 	  := r_c02_w.nr_sequencia;
	
	--Para obter os dados do prestador _ utilizada a rotina padr_o e passado o CGC nulo pois segundo manual TISS o prestador participante  sempre ser_ uma pessoa f_sica

	SELECT * FROM pls_conv_xml_cta_pck.obter_prestador_tasy(	'C', r_c02_w.cd_prestador, null, r_c02_w.cd_cpf_prestador, cd_estabelecimento_p, r_c02_w.dt_atendimento_conv) INTO STRICT tb_cd_prestador_conv_w(nr_contador_w), tb_cd_prestador_upper_conv_w(nr_contador_w), tb_cd_prestador_number_conv_w(nr_contador_w), tb_cd_cgc_prestador_conv_w(nr_contador_w), tb_cd_cpf_prestador_conv_w(nr_contador_w);
	-- obt_m os dados dos profissional executor participante

	SELECT * FROM pls_conv_xml_cta_pck.obter_profissional_tasy(	'ME', r_c02_w.nr_conselho_profissional, r_c02_w.cd_conselho_profissional, r_c02_w.cd_uf_conselho_profissional, r_c02_w.cd_cbo_saude_profissional, r_c02_w.nm_profissional, r_c02_w.ie_tipo_guia, r_c02_w.cd_versao_tiss_conv, r_c02_w.nr_seq_tipo_atend_conv, cd_estabelecimento_p, nm_usuario_p, tb_nr_seq_regra_prof_conv_w(nr_contador_w), tb_nr_conselho_prof_conv_w(nr_contador_w), tb_nr_seq_cons_prof_conv_w(nr_contador_w), tb_cd_uf_cons_prof_conv_w(nr_contador_w), tb_nr_seq_cbo_saude_conv_w(nr_contador_w), tb_cd_profissional_conv_w(nr_contador_w), r_c02_w.ie_regime_atendimento, r_c02_w.ie_saude_ocupacional) INTO STRICT tb_nr_seq_regra_prof_conv_w(nr_contador_w), tb_nr_conselho_prof_conv_w(nr_contador_w), tb_nr_seq_cons_prof_conv_w(nr_contador_w), tb_cd_uf_cons_prof_conv_w(nr_contador_w), tb_nr_seq_cbo_saude_conv_w(nr_contador_w), tb_cd_profissional_conv_w(nr_contador_w);

	tb_nr_seq_grau_partic_conv_w(nr_contador_w) := pls_conv_xml_cta_pck.obter_grau_participacao(r_c02_w.cd_grau_partic, cd_estabelecimento_p);
	
	--Verifica se existe Profissional

	if ((tb_cd_profissional_conv_w(nr_contador_w) IS NOT NULL AND (tb_cd_profissional_conv_w(nr_contador_w))::text <> '')) then
		--Profissional cooperado

		tb_cd_prof_coop_conv_w(nr_contador_w) := pls_obter_se_cooperado_ativo(tb_cd_profissional_conv_w(nr_contador_w), r_c02_w.dt_atendimento_conv, null);
	else	
		tb_cd_prof_coop_conv_w(nr_contador_w) := null;
	end if;
		
	-- se atigiu a quantidade manda pro banco

	if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then
	
		SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_equipe(	tb_nr_seq_equipe_w, tb_nr_seq_item_w, tb_nr_seq_regra_prof_conv_w, tb_nr_conselho_prof_conv_w, tb_nr_seq_cons_prof_conv_w, tb_cd_uf_cons_prof_conv_w, tb_nr_seq_cbo_saude_conv_w, tb_cd_profissional_conv_w, tb_nr_seq_grau_partic_conv_w, tb_cd_prof_coop_conv_w, tb_cd_prestador_conv_w, tb_cd_prestador_upper_conv_w, tb_cd_prestador_number_conv_w, tb_cd_cpf_prestador_conv_w, tb_nr_seq_prestador_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_equipe_w := _ora2pg_r.tb_nr_seq_equipe_p; tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_regra_prof_conv_w := _ora2pg_r.tb_nr_seq_regra_prof_conv_p; tb_nr_conselho_prof_conv_w := _ora2pg_r.tb_nr_conselho_prof_conv_p; tb_nr_seq_cons_prof_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_conv_p; tb_cd_uf_cons_prof_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_conv_p; tb_nr_seq_cbo_saude_conv_w := _ora2pg_r.tb_nr_seq_cbo_saude_conv_p; tb_cd_profissional_conv_w := _ora2pg_r.tb_cd_profissional_conv_p; tb_nr_seq_grau_partic_conv_w := _ora2pg_r.tb_nr_seq_grau_partic_conv_p; tb_cd_prof_coop_conv_w := _ora2pg_r.tb_cd_profissional_coop_conv_p; tb_cd_prestador_conv_w := _ora2pg_r.tb_cd_prestador_conv_p; tb_cd_prestador_upper_conv_w := _ora2pg_r.tb_cd_prestador_upper_conv_p; tb_cd_prestador_number_conv_w := _ora2pg_r.tb_cd_prestador_number_conv_p; tb_cd_cpf_prestador_conv_w := _ora2pg_r.tb_cd_cpf_prestador_conv_p; tb_nr_seq_prestador_conv_w := _ora2pg_r.tb_nr_seq_prestador_conv_p;
		nr_contador_w := 0;
	else
		nr_contador_w := nr_contador_w + 1;
	end if;
	
end loop;

-- se sobrou algo manda pro banco

SELECT * FROM pls_conv_xml_cta_pck.atualiza_conv_item_equipe(	tb_nr_seq_equipe_w, tb_nr_seq_item_w, tb_nr_seq_regra_prof_conv_w, tb_nr_conselho_prof_conv_w, tb_nr_seq_cons_prof_conv_w, tb_cd_uf_cons_prof_conv_w, tb_nr_seq_cbo_saude_conv_w, tb_cd_profissional_conv_w, tb_nr_seq_grau_partic_conv_w, tb_cd_prof_coop_conv_w, tb_cd_prestador_conv_w, tb_cd_prestador_upper_conv_w, tb_cd_prestador_number_conv_w, tb_cd_cpf_prestador_conv_w, tb_nr_seq_prestador_conv_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_equipe_w := _ora2pg_r.tb_nr_seq_equipe_p; tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_nr_seq_regra_prof_conv_w := _ora2pg_r.tb_nr_seq_regra_prof_conv_p; tb_nr_conselho_prof_conv_w := _ora2pg_r.tb_nr_conselho_prof_conv_p; tb_nr_seq_cons_prof_conv_w := _ora2pg_r.tb_nr_seq_cons_prof_conv_p; tb_cd_uf_cons_prof_conv_w := _ora2pg_r.tb_cd_uf_cons_prof_conv_p; tb_nr_seq_cbo_saude_conv_w := _ora2pg_r.tb_nr_seq_cbo_saude_conv_p; tb_cd_profissional_conv_w := _ora2pg_r.tb_cd_profissional_conv_p; tb_nr_seq_grau_partic_conv_w := _ora2pg_r.tb_nr_seq_grau_partic_conv_p; tb_cd_prof_coop_conv_w := _ora2pg_r.tb_cd_profissional_coop_conv_p; tb_cd_prestador_conv_w := _ora2pg_r.tb_cd_prestador_conv_p; tb_cd_prestador_upper_conv_w := _ora2pg_r.tb_cd_prestador_upper_conv_p; tb_cd_prestador_number_conv_w := _ora2pg_r.tb_cd_prestador_number_conv_p; tb_cd_cpf_prestador_conv_w := _ora2pg_r.tb_cd_cpf_prestador_conv_p; tb_nr_seq_prestador_conv_w := _ora2pg_r.tb_nr_seq_prestador_conv_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.pls_conv_nv_equipe_item_conta ( nr_seq_protocolo_p pls_protocolo_conta_imp.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
