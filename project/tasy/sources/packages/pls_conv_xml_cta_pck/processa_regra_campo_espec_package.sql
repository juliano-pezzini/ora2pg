-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_conv_xml_cta_pck.processa_regra_campo_espec () AS $body$
DECLARE


_ora2pg_r RECORD;
ds_procedimento_w	pls_conta_item_imp_tmp.ds_procedimento%type;
ds_aux_proced_w		varchar(200);
cd_fornec_material_w	varchar(200);
cd_setor_atend_w	varchar(200);
cd_seq_prestador_w	varchar(200);
nr_contador_w		integer;

tb_cd_fornec_material_w		pls_util_cta_pck.t_varchar2_table_200;
tb_cd_setor_atedimento_w	pls_util_cta_pck.t_varchar2_table_200;
tb_cd_seq_prestador_w		pls_util_cta_pck.t_varchar2_table_200;
tb_nr_seq_item_w		pls_util_cta_pck.t_number_table;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_regra,
		ds_procedimento
	from	pls_conta_item_imp_tmp
	where	CASE WHEN coalesce(nr_seq_regra::text, '') = '' THEN  -1  ELSE -2 END  = -2;

-- aqui passamos a descricao do procedimento e verificamos na clausula where se a string possui o caracter

-- anterior, se n_o tiver nem retorna registro para processar

C02 CURSOR(	nr_seq_regra_pc		pls_xml_regra_campo_esp.nr_sequencia%type,
		ds_procedimento_pc	pls_conta_item_imp.ds_procedimento%type) FOR
	SELECT	ds_anterior,
		ds_posterior,
		ie_campo,
		qt_caracteres
	from	pls_xml_regra_esp_compl
	where	nr_seq_regra = nr_seq_regra_pc
	and	position(ds_anterior in ds_procedimento_pc) > 0
	order by nr_seq_apresentacao;

BEGIN
nr_contador_w := 0;
-- limpa as variaveis

 SELECT * FROM pls_conv_xml_cta_pck.alimenta_campo_indent_esp(	tb_nr_seq_item_w, tb_cd_fornec_material_w, tb_cd_setor_atedimento_w, tb_cd_seq_prestador_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_cd_fornec_material_w := _ora2pg_r.tb_fornecedor_material_p; tb_cd_setor_atedimento_w := _ora2pg_r.tb_setor_atendimento_p; tb_cd_seq_prestador_w := _ora2pg_r.tb_seq_prestador_p;

-- para cada item que tenha entrado em alguma regra verificamos os campos que precisam ser identificados

for r_c01_w in C01 loop

	tb_nr_seq_item_w(nr_contador_w) := r_c01_w.nr_sequencia;
	
	ds_procedimento_w  := r_c01_w.ds_procedimento;
	
	--limpa as variaveis a cada novo item

	cd_fornec_material_w := null;
	cd_setor_atend_w := null;
	cd_seq_prestador_w := null;
	
	-- busca todos os campos que precisam ser verificados, passado o ds procedimento e no pr_prio cursor

	-- _ verificado se o campo anterior existe no ds_procedimento, se n_o existir n_o precisamos processar

	for r_c02_w in C02(r_c01_w.nr_seq_regra, r_c01_w.ds_procedimento) loop

		-- limpa as variavel auxiliar pra cada regra

		ds_aux_proced_w := null;
	
		ds_procedimento_w := pls_conv_xml_cta_pck.obter_valor_campo_especial(	r_c02_w.qt_caracteres, r_c02_w.ds_anterior, r_c02_w.ds_posterior, ds_procedimento_w);
								
		-- se identificou algo verifica se _ Setor de atendimento, Fornecedor do material ou Sequencial do prestador

		if (ds_aux_proced_w IS NOT NULL AND ds_aux_proced_w::text <> '') then

			case(r_c02_w.ie_campo)
				--Setor de atendimento

				when 'S' then

					cd_setor_atend_w := ds_aux_proced_w;
				-- Fornecedor do material

				when 'F' then

					cd_fornec_material_w := ds_aux_proced_w;
				-- Sequencial do prestador

				when 'SP' then

					cd_seq_prestador_w := ds_aux_proced_w;
				else
					null;
			end case;
		end if;
	end loop; -- C02
	
	--atribui os valor para as vari_veis

	tb_cd_fornec_material_w(nr_contador_w) := cd_fornec_material_w;
	tb_cd_setor_atedimento_w(nr_contador_w) := cd_setor_atend_w;
	tb_cd_seq_prestador_w(nr_contador_w) := cd_seq_prestador_w;
	
	-- se atingiu a quantidade manda pro banco

	if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then
	
		 SELECT * FROM pls_conv_xml_cta_pck.alimenta_campo_indent_esp(	tb_nr_seq_item_w, tb_cd_fornec_material_w, tb_cd_setor_atedimento_w, tb_cd_seq_prestador_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_cd_fornec_material_w := _ora2pg_r.tb_fornecedor_material_p; tb_cd_setor_atedimento_w := _ora2pg_r.tb_setor_atendimento_p; tb_cd_seq_prestador_w := _ora2pg_r.tb_seq_prestador_p;
		nr_contador_w := 0;
	else
		nr_contador_w := nr_contador_w + 1;
	end if;
	
end loop; -- C01

-- se sobrou algo manda pro banco

SELECT * FROM pls_conv_xml_cta_pck.alimenta_campo_indent_esp(	tb_nr_seq_item_w, tb_cd_fornec_material_w, tb_cd_setor_atedimento_w, tb_cd_seq_prestador_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_item_w := _ora2pg_r.tb_nr_seq_item_p; tb_cd_fornec_material_w := _ora2pg_r.tb_fornecedor_material_p; tb_cd_setor_atedimento_w := _ora2pg_r.tb_setor_atendimento_p; tb_cd_seq_prestador_w := _ora2pg_r.tb_seq_prestador_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conv_xml_cta_pck.processa_regra_campo_espec () FROM PUBLIC;
