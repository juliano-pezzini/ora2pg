-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Busca o prestador atravez do CNPJ



CREATE OR REPLACE FUNCTION pls_conv_xml_cta_pck.obter_prestador_cgc ( cd_cgc_prestador_p pls_protocolo_conta_imp.cd_cgc_prestador%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS bigint AS $body$
DECLARE


nr_seq_prestador_conv_w		pls_protocolo_conta_imp.nr_seq_prestador_conv%type;


BEGIN
nr_seq_prestador_conv_w := null;

if (current_setting('pls_conv_xml_cta_pck.ie_prestador_w')::pls_controle_estab.ie_prestador%type = 'S') then

	if (cd_cgc_prestador_p IS NOT NULL AND cd_cgc_prestador_p::text <> '') then
		
		--Verifica se existe um prestador com o cgc cadastrado ativo e com ie_prestador_matriz informado

		select 	max(nr_sequencia)
		into STRICT	nr_seq_prestador_conv_w
		from	pls_prestador
		where	cd_cgc = cd_cgc_prestador_p
		and	ie_prestador_matriz = 'S'
		and 	ie_situacao = 'A'
		and	cd_estabelecimento = cd_estabelecimento_p;
		
		-- Se n_o encontra verifica apenas se existe um ativo

		if (coalesce(nr_seq_prestador_conv_w::text, '') = '') then
		
			select 	max(nr_sequencia)
			into STRICT	nr_seq_prestador_conv_w
			from	pls_prestador
			where	cd_cgc = cd_cgc_prestador_p
			and 	ie_situacao = 'A'
			and	cd_estabelecimento = cd_estabelecimento_p;
			
			--Caso n_o exista ativo verifica se tem algum inativo

			if (coalesce(nr_seq_prestador_conv_w::text, '') = '') then
				
				select 	max(nr_sequencia)
				into STRICT	nr_seq_prestador_conv_w
				from	pls_prestador
				where	cd_cgc	= cd_cgc_prestador_p
				and	cd_estabelecimento = cd_estabelecimento_p;
			end if;
		end if;
	end if;
else
	if (cd_cgc_prestador_p IS NOT NULL AND cd_cgc_prestador_p::text <> '') then
		
		--Verifica se existe um prestador com o cgc cadastrado ativo e com ie_prestador_matriz informado

		select 	max(nr_sequencia)
		into STRICT	nr_seq_prestador_conv_w
		from	pls_prestador
		where	cd_cgc = cd_cgc_prestador_p
		and	ie_prestador_matriz = 'S'
		and 	ie_situacao = 'A';
		
		-- Se n_o encontra verifica apenas se existe um ativo

		if (coalesce(nr_seq_prestador_conv_w::text, '') = '') then
		
			select 	max(nr_sequencia)
			into STRICT	nr_seq_prestador_conv_w
			from	pls_prestador
			where	cd_cgc = cd_cgc_prestador_p
			and 	ie_situacao = 'A';
			
			--Caso n_o exista ativo verifica se tem algum inativo

			if (coalesce(nr_seq_prestador_conv_w::text, '') = '') then
				
				select 	max(nr_sequencia)
				into STRICT	nr_seq_prestador_conv_w
				from	pls_prestador
				where	cd_cgc	= cd_cgc_prestador_p;
			end if;
		end if;
	end if;
end if;

return	nr_seq_prestador_conv_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_conv_xml_cta_pck.obter_prestador_cgc ( cd_cgc_prestador_p pls_protocolo_conta_imp.cd_cgc_prestador%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
