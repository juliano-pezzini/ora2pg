-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_conv_xml_cta_pck.obter_seq_guia_tasy ( ie_origem_conta_p pls_conta.ie_origem_conta%type, cd_guia_p pls_conta.cd_guia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, cd_guia_imp_p pls_conta.cd_guia_imp%type, cd_guia_pesquisa_p pls_conta.cd_guia_pesquisa%type, cd_guia_solic_imp_p pls_conta.cd_guia_solic_imp%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_congenere_p pls_conta.nr_seq_congenere%type, cd_senha_p pls_conta.cd_senha%type, cd_senha_externa_p pls_conta.cd_senha_externa%type) RETURNS bigint AS $body$
DECLARE


nr_seq_guia_w		pls_guia_plano.nr_sequencia%type;
nr_seq_congenere_sup_w	pls_congenere.nr_sequencia%type;
			

BEGIN
-- apenas o que _ importacao

if (ie_origem_conta_p = 'E') then

	-- para a nova importacao s_o os campos: 

	-- cd_guia_operadora = cd_guia_imp

	-- cd_guia_principal = cd_guia_solic_imp

	-- cd_guia_operadora_conv = cd_guia_pesquisa

	select	max(x.nr_sequencia)
	into STRICT	nr_seq_guia_w
	from (	SELECT	a.nr_sequencia
			from	pls_guia_plano a
			where	a.nr_seq_segurado = nr_seq_segurado_p
			and	a.cd_guia in (cd_guia_p, cd_guia_imp_p, cd_guia_pesquisa_p)
			and	a.ie_status in ('1', '2')
			
union all

			SELECT	b.nr_sequencia
			from	pls_guia_plano b
			where	b.nr_seq_segurado = nr_seq_segurado_p
			and	b.cd_guia_pesquisa in (cd_guia_p, cd_guia_imp_p, cd_guia_pesquisa_p)
			and	b.ie_status in ('1', '2')) x;

	-- se n_o encontrou pelo cd_guia, cd_guia_imp e cd_guia_pesquisa 

	-- tenta pelo cd_guia_referencia e cd_guia_solic_imp

	if (coalesce(nr_seq_guia_w::text, '') = '') then

		select	max(x.nr_sequencia)
		into STRICT	nr_seq_guia_w
		from (	SELECT	a.nr_sequencia
				from	pls_guia_plano a
				where	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.cd_guia in (cd_guia_referencia_p, cd_guia_solic_imp_p)
				and	a.ie_status in ('1', '2')
				
union all

				SELECT	b.nr_sequencia
				from	pls_guia_plano b
				where	b.nr_seq_segurado = nr_seq_segurado_p
				and	b.cd_guia_pesquisa in (cd_guia_referencia_p, cd_guia_solic_imp_p)
				and	b.ie_status in ('1', '2')) x;
	end if;
		
-- tudo que n_o _ importacao

else		
	-- tenta primeiro pelo cd_guia e pesquisa

	select	max(x.nr_sequencia)
	into STRICT	nr_seq_guia_w
	from (	SELECT	a.nr_sequencia
			from	pls_guia_plano a
			where	a.nr_seq_segurado = nr_seq_segurado_p
			and	a.cd_guia in (cd_guia_p, cd_guia_pesquisa_p)
			and	a.ie_status in ('1', '2')
			
union all

			SELECT	b.nr_sequencia
			from	pls_guia_plano b
			where	b.nr_seq_segurado = nr_seq_segurado_p
			and	b.cd_guia_pesquisa in (cd_guia_p, cd_guia_pesquisa_p)
			and	b.ie_status in ('1', '2')) x;

	-- Se for conta de A500 e ainda n_o tiver identificado a guia, ent_o deve ser buscado a guia tamb_m pela senha interna e externa.

	if (coalesce(nr_seq_guia_w::text, '') = '') and (ie_origem_conta_p = 'A') then

		-- caso n_o encontre vai tentar buscar do PTU pelo numero da conta

		select	min(e.nr_seq_guia)
		into STRICT	nr_seq_guia_w
		from	ptu_nota_servico c,
			ptu_resposta_autorizacao d,
			ptu_nota_cobranca b,
			pls_execucao_requisicao e,
			ptu_fatura a
		where	c.nr_seq_conta_proc 	in ( SELECT	x.nr_sequencia
							  from		pls_conta_proc x
							  where		x.nr_seq_conta = nr_seq_conta_p)
		and	d.nr_seq_origem	= c.nr_autorizacao
		and	b.nr_sequencia = c.nr_seq_nota_cobr
		and	e.nr_seq_requisicao = d.nr_seq_requisicao
		and	a.cd_unimed_origem = d.cd_unimed_executora
		and	a.nr_sequencia = b.nr_seq_fatura
		and 	a.ie_operacao = 'R'; --apenas verifica faturas recebidas, ignorando _s faturas geradas para envio
		
		-- se tiver a informacao da congenere ent_o busca a guia pela senha.

		if ((nr_seq_congenere_p IS NOT NULL AND nr_seq_congenere_p::text <> '') and coalesce(nr_seq_guia_w::text, '') = '') then
			
			-- as senha interna ou externa da autorizacao devem ser iguais a da conta.

			select	min(x.nr_sequencia)
			into STRICT	nr_seq_guia_w
			from (
				SELECT	a.nr_sequencia
				from	pls_guia_plano a
				where	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.nr_seq_uni_exec = nr_seq_congenere_p
				and	a.cd_senha = cd_senha_p
				and	a.ie_status in ('1', '2')
				
union all

				SELECT	a.nr_sequencia
				from	pls_guia_plano a
				where	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.nr_seq_uni_exec = nr_seq_congenere_p
				and	a.cd_senha_externa = cd_senha_externa_p
				and	a.ie_status in ('1', '2')
				) x;
			
			-- Tratamento inclu_do devido ao fato de a senha da autorizacao, n_o ser igual ao n_mero da resposta ptu

			if (coalesce(nr_seq_guia_w::text, '') = '') then
				
				select	min(guia.nr_sequencia)
				into STRICT	nr_seq_guia_w
				from	pls_guia_plano guia,
					ptu_resposta_autorizacao resposta
				where	guia.nr_seq_segurado = nr_seq_segurado_p
				and	guia.nr_seq_uni_exec = nr_seq_congenere_p
				and	guia.ie_status in ('1', '2')
				and	resposta.nr_seq_guia = guia.nr_sequencia
				and	resposta.nr_seq_origem = cd_senha_p;

				-- Tratamento inclu_do devido ao fato que a operadora do A500 n_o ser a mesma da guia do SCS

				if (coalesce(nr_seq_guia_w::text, '') = '') then
					
					select	min(resposta.nr_seq_guia)
					into STRICT	nr_seq_guia_w
					from	ptu_resposta_autorizacao resposta
					where	resposta.nr_seq_origem = cd_senha_p
					and	exists (SELECT 1
						        from   pls_guia_plano guia
						        where  guia.nr_seq_segurado = nr_seq_segurado_p
						        and    guia.ie_status in ('1', '2')
						        and    guia.nr_sequencia = resposta.nr_seq_guia);
 					
					-- Verifica se a operadora superior da guia _ a mesma do protocolo do A500

					if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
					
						select	min(a.nr_seq_congenere)
						into STRICT	nr_seq_congenere_sup_w
						from	pls_guia_plano b,
							pls_congenere a
						where	b.nr_sequencia = nr_seq_guia_w
						and	a.nr_sequencia = b.nr_seq_uni_exec;

						if (nr_seq_congenere_sup_w <> nr_seq_congenere_p) then
							nr_seq_guia_w	:= null;
						end if;	
					end if;
				end if;
				
				--Tratativa para os casos onde n_o h_ o nr_seq_guia na ptu_resposta_autorizacao, mas tem o nr_seq_requisicao,

				--ent_o nesses casos busca a ligacao com a guia pela requisicao

				if (coalesce(nr_seq_guia_w::text, '') = '' ) then
				
					select  min(guia.nr_sequencia)
					into STRICT	nr_seq_guia_w
					from  	pls_guia_plano guia,
						ptu_resposta_autorizacao resposta,
						pls_requisicao req,
						pls_execucao_requisicao exe_req
					where 	guia.nr_seq_segurado = nr_seq_segurado_p
					and 	guia.nr_seq_uni_exec = nr_seq_congenere_p
					and 	guia.ie_status in ('1', '2')
					and 	resposta.nr_seq_requisicao = req.nr_sequencia
					and 	exe_req.nr_seq_requisicao  = req.nr_sequencia
					and 	exe_req.nr_seq_guia 	= guia.nr_sequencia
					and 	resposta.nr_seq_origem 	= cd_senha_p;
					

					-- Tratamento inclu_do devido ao fato que a operadora do A500 n_o ser a mesma da guia do SCS

					if (coalesce(nr_seq_guia_w::text, '') = '') then
						
						select	min(exe_req.nr_seq_guia)
						into STRICT	nr_seq_guia_w
						from	ptu_resposta_autorizacao resposta ,
							pls_requisicao req,
							pls_execucao_requisicao exe_req
						where	resposta.nr_seq_origem = cd_senha_p
						and	req.nr_sequencia = resposta.nr_seq_requisicao
						and	exe_req.nr_seq_requisicao = req.nr_sequencia
						and	exists (SELECT 	1
								from    pls_guia_plano guia
								where  	guia.nr_seq_segurado = nr_seq_segurado_p
								and    	guia.ie_status in ('1', '2')
								and    	guia.nr_sequencia = exe_req.nr_seq_guia);
						
						-- Verifica se a operadora superior da guia _ a mesma do protocolo do A500

						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
						
							select	min(a.nr_seq_congenere)
							into STRICT	nr_seq_congenere_sup_w
							from	pls_guia_plano b,
								pls_congenere a
							where	b.nr_sequencia = nr_seq_guia_w
							and	a.nr_sequencia = b.nr_seq_uni_exec;

							if (nr_seq_congenere_sup_w <> nr_seq_congenere_p) then
								nr_seq_guia_w	:= null;
							end if;	
						end if;
					end if;
					
					if (coalesce(nr_seq_guia_w::text, '') = '') then
					
						select  min(guia.nr_sequencia)
						into STRICT	nr_seq_guia_w
						from  	pls_guia_plano guia,
							ptu_resposta_auditoria resposta,
							pls_requisicao req,
							pls_execucao_requisicao exe_req
						where 	guia.nr_seq_segurado = nr_seq_segurado_p
						and 	guia.nr_seq_uni_exec = nr_seq_congenere_p
						and 	guia.ie_status in ('1', '2')
						and 	resposta.nr_seq_requisicao = req.nr_sequencia
						and 	exe_req.nr_seq_requisicao  = req.nr_sequencia
						and 	exe_req.nr_seq_guia 	= guia.nr_sequencia
						and 	resposta.nr_seq_origem 	= cd_senha_p;
						
						if (coalesce(nr_seq_guia_w::text, '') = '') then
							
							select	min(exe_req.nr_seq_guia)
							into STRICT	nr_seq_guia_w
							from	ptu_resposta_auditoria resposta ,
								pls_requisicao req,
								pls_execucao_requisicao exe_req
							where	resposta.nr_seq_origem = cd_senha_p
							and	req.nr_sequencia = resposta.nr_seq_requisicao
							and	exe_req.nr_seq_requisicao = req.nr_sequencia
							and	exists (SELECT 	1
									from    pls_guia_plano guia
									where  	guia.nr_seq_segurado = nr_seq_segurado_p
									and    	guia.ie_status in ('1', '2')
									and    	guia.nr_sequencia = exe_req.nr_seq_guia);
									
							if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
								
								select	max(a.nr_seq_congenere)
								into STRICT	nr_seq_congenere_sup_w
								from	pls_guia_plano b,
									pls_congenere a
								where	b.nr_sequencia = nr_seq_guia_w
								and	a.nr_sequencia = b.nr_seq_uni_exec;
								
								if (nr_seq_congenere_sup_w <> nr_seq_congenere_p) then
									nr_seq_guia_w	:= null;
								end if;	
							end if;
						end if;
						
						if (coalesce(nr_seq_guia_w::text, '') = '') then
							
							select  min(guia.nr_sequencia)
							into STRICT	nr_seq_guia_w
							from  	pls_guia_plano guia,
								ptu_confirmacao resposta,
								pls_requisicao req,
								pls_execucao_requisicao exe_req
							where 	guia.nr_seq_segurado = nr_seq_segurado_p
							and 	guia.nr_seq_uni_exec = nr_seq_congenere_p
							and 	guia.ie_status in ('1', '2')
							and 	resposta.nr_seq_requisicao = req.nr_sequencia
							and 	exe_req.nr_seq_requisicao  = req.nr_sequencia
							and 	exe_req.nr_seq_guia 	= guia.nr_sequencia
							and	resposta.ie_tipo_resposta = 'DP'
							and 	resposta.nr_seq_origem 	= cd_senha_p;
							
							if (coalesce(nr_seq_guia_w::text, '') = '') then
								
								select	min(exe_req.nr_seq_guia)
								into STRICT	nr_seq_guia_w
								from	ptu_confirmacao resposta,
									pls_requisicao req,
									pls_execucao_requisicao exe_req
								where	resposta.nr_seq_origem = cd_senha_p
								and	req.nr_sequencia = resposta.nr_seq_requisicao
								and	exe_req.nr_seq_requisicao = req.nr_sequencia
								and	resposta.ie_tipo_resposta = 'DP'
								and	exists (SELECT 	1
										from    pls_guia_plano guia
										where  	guia.nr_seq_segurado = nr_seq_segurado_p
										and    	guia.ie_status in ('1', '2')
										and    	guia.nr_sequencia = exe_req.nr_seq_guia);
										
								if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
								
									select	min(a.nr_seq_congenere)
									into STRICT	nr_seq_congenere_sup_w
									from	pls_guia_plano b,
										pls_congenere a
									where	b.nr_sequencia = nr_seq_guia_w
									and	a.nr_sequencia = b.nr_seq_uni_exec;
									
									if (nr_seq_congenere_sup_w <> nr_seq_congenere_p) then
										nr_seq_guia_w	:= null;
									end if;	
								end if;
							end if;							
						end if;
					end if;				
				end if;
			end if;
		end if;
	end if;	

	if	((coalesce(nr_seq_guia_w::text, '') = '') and (cd_guia_referencia_p IS NOT NULL AND cd_guia_referencia_p::text <> '')) then

		select	max(nr_sequencia)
		into STRICT	nr_seq_guia_w
		from (	SELECT	a.nr_sequencia
				from	pls_guia_plano a
				where	a.cd_guia = cd_guia_referencia_p
				and	a.nr_seq_segurado = nr_seq_segurado_p
				and	a.ie_status in ('1', '2')
				
union all

				SELECT	b.nr_sequencia
				from	pls_guia_plano b
				where	b.cd_guia_pesquisa = cd_guia_referencia_p
				and	b.nr_seq_segurado = nr_seq_segurado_p
				and	b.ie_status in ('1', '2')) x;
	end if;		
end if;

return	nr_seq_guia_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_conv_xml_cta_pck.obter_seq_guia_tasy ( ie_origem_conta_p pls_conta.ie_origem_conta%type, cd_guia_p pls_conta.cd_guia%type, cd_guia_referencia_p pls_conta.cd_guia_referencia%type, cd_guia_imp_p pls_conta.cd_guia_imp%type, cd_guia_pesquisa_p pls_conta.cd_guia_pesquisa%type, cd_guia_solic_imp_p pls_conta.cd_guia_solic_imp%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_congenere_p pls_conta.nr_seq_congenere%type, cd_senha_p pls_conta.cd_senha%type, cd_senha_externa_p pls_conta.cd_senha_externa%type) FROM PUBLIC;
