-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION gerenciador_mipres_agenda_pck.get_nopbs_itens_agendas (nr_seq_agenda_p agenda_consulta.nr_sequencia%type, cd_agenda_p agenda.cd_agenda%type default null) RETURNS varchar AS $body$
DECLARE

    is_eps_convenio_w       convenio_plano.ie_eps%type;
    ds_result_w             varchar(2);
    cd_tipo_agenda_w        agenda.cd_agenda%type;
    main_proc_is_nopbs_w    varchar(1);
    proc_adic_is_nopbs_w    varchar(1);
    exam_is_nopbs_w		varchar(1);
    has_link_mipres_w       varchar(1);
    nm_table_w    varchar(30);

    
BEGIN
    
        ds_result_w := 'N';
        if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') then
            select	cd_tipo_agenda
            into STRICT	cd_tipo_agenda_w
            from	agenda
            where	cd_agenda	= cd_agenda_p;
        else
            cd_tipo_agenda_w := 0;
        end if;

        if (cd_tipo_agenda_w in (3,5)) then
            nm_table_w := 'AGENDA_CONSULTA';
        elsif (cd_tipo_agenda_w = 2) then
            nm_table_w := 'AGENDA_PACIENTE';
        elsif (cd_tipo_agenda_w = 0) then
            nm_table_w := 'AGENDA_INTEGRADA';
        end if;
    
        EXECUTE  'SELECT MAX(IS_EPS_CONVENIO(A.CD_CONVENIO, A.CD_PLANO))
                            FROM ' || nm_table_w || ' A
                            WHERE   A.NR_SEQUENCIA = :NR_SEQ_AGENDA_P' 
                            into STRICT    is_eps_convenio_w  
                            using   nr_seq_agenda_p;

        if (is_eps_convenio_w = 'S') then 
    
            if (cd_tipo_agenda_w = 2) then  
    
                select  CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END  
                into STRICT    has_link_mipres_w
                from    agenda_paciente_proc a
                where   a.nr_sequencia = nr_seq_agenda_p
                and     coalesce(a.nr_seq_controle_mipres::text, '') = '';

                if (has_link_mipres_w = 'S') then 
                    select  CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END  
                    into STRICT    has_link_mipres_w
                    from    agenda_paciente_auxiliar a
                    where   a.nr_seq_agenda = nr_seq_agenda_p
                    and     coalesce(a.nr_seq_controle_mipres::text, '') = '';
                end if;
                if (has_link_mipres_w = 'N') then
                    select  CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END   
                    into STRICT    main_proc_is_nopbs_w
                    from    agenda_paciente a,
                            procedimento b
                    where (a.nr_sequencia = nr_seq_agenda_p
                    and     a.cd_procedimento = b.cd_procedimento
                    and     coalesce(b.ie_nopbs, 'N') = 'S'
                    and     b.ie_origem_proced = 4);

                    if (main_proc_is_nopbs_w = 'N') then
                        select CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END 
                        into STRICT	ds_result_w
                        from  	agenda_paciente_proc a
                        where (a.nr_sequencia = nr_seq_agenda_p
                        and 	exists (SELECT  1
                                            from    procedimento b
                                            where   b.cd_procedimento = a.cd_procedimento
                                            and     coalesce(b.ie_nopbs, 'N') = 'S'
                                            and     b.ie_origem_proced = 4));

                    else
                        ds_result_w := 'MS';
                    end if;
                end if;

            elsif (cd_tipo_agenda_w  in (3,5)) then  
    
                select  CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END  
                into STRICT    has_link_mipres_w
                from    agenda_consulta_proc a
                where   a.nr_seq_agenda = nr_seq_agenda_p
                and     coalesce(a.nr_seq_controle_mipres::text, '') = '';

                if (has_link_mipres_w = 'S') then 
                    select  CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END     
                    into STRICT    has_link_mipres_w
                    from    agenda_consulta_adic b
                    where   b.nr_seq_agenda = nr_seq_agenda_p
                    and     coalesce(b.nr_seq_controle_mipres::text, '') = '';
                end if;
                if (has_link_mipres_w = 'N') then

                    select  CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END   
                    into STRICT    main_proc_is_nopbs_w
                    from    agenda_consulta a,
                            procedimento b,
                            exame_laboratorio c
                    where (a.nr_sequencia = nr_seq_agenda_p
                    and     a.cd_procedimento = b.cd_procedimento
                    and     coalesce(b.ie_nopbs, 'N') = 'S'
                    and     b.ie_origem_proced = 4)
                    or (a.nr_sequencia = nr_seq_agenda_p
                    and     a.nr_seq_exame = c.nr_seq_exame
                    and     a.cd_procedimento = c.cd_procedimento
                    and     coalesce(b.ie_nopbs, 'N') = 'S'
                    and     b.ie_origem_proced = 4);

                    if (main_proc_is_nopbs_w = 'N') then
                        select CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END 
                        into STRICT	ds_result_w
                        from  	agenda_consulta_proc a
                        where (a.nr_seq_agenda = nr_seq_agenda_p
                        and 	exists (SELECT  1
                                            from    procedimento b
                                            where   b.cd_procedimento = a.cd_procedimento
                                            and     coalesce(b.ie_nopbs, 'N') = 'S'
                                            and     b.ie_origem_proced = 4))
                        or (a.nr_seq_agenda = nr_seq_agenda_p
                        and     exists (select  1
                                            from    procedimento b,
                                                    exame_laboratorio c
                                            where   a.nr_seq_exame = c.nr_seq_exame
                                            and     a.ie_origem_proced = 4
                                            and     coalesce(b.ie_nopbs, 'N') = 'S'));

                    else 
                        ds_result_w := 'MS';
                    end if;
                end if;
            end if;
        end if;
    
      return ds_result_w;
    exception
      when no_data_found then return null;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION gerenciador_mipres_agenda_pck.get_nopbs_itens_agendas (nr_seq_agenda_p agenda_consulta.nr_sequencia%type, cd_agenda_p agenda.cd_agenda%type default null) FROM PUBLIC;
