-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_interface_pck.process_insurance_data ( insurance_pattern_count_p bigint, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, patient_data_p text, dt_health_card_check_p timestamp) AS $body$
DECLARE

        nr_insuarnce_seq_w	smallint;
        nr_principal_number_w	varchar(2);
        nr_accessory_number_one_w	varchar(2);
        nr_accessory_number_two_w	varchar(2);
        nr_accessory_number_three_w	varchar(2);
        nr_accessory_number_four_w  varchar(2);
        nr_continue_classification_w smallint;
        ie_classification_w smallint;
        qt_outpatient_rate_w	smallint;
        qt_inpatient_rate_w smallint;
        dt_application_start_w	timestamp;
        dt_application_end_w	timestamp;
        io_classification_w integer;
        cd_reason_classification_w	smallint;
        limitation_classification_w smallint;
        cd_insurance_number_w	integer;
        cd_exist_pattern_code_w   smallint;
        ds_symbol_number_w	varchar(58);
        ds_branch_number_w	varchar(58);
        ds_symbol_area_number_w	varchar(150);
        ds_branch_area_w	varchar(10);
        ds_insurance_name_japanese_w	varchar(200);
	ds_modified_insurance_name_w	varchar(200);
        counter_w smallint;
        limited_department_table_w varchar(100);
        accessory_insurance_table_w varchar(112);
        insuarnce_pattern_code_w smallint;
        insuarnce_pattern_code_list_w varchar(500);
        nais_insurance_seq_w nais_insurance.nr_sequencia%type;
		cd_convenio_w   convenio.cd_convenio%type;
        ie_exists_w smallint := 0;

BEGIN
        if (insurance_pattern_count_p>0) then
            for counter_w in 0 .. (insurance_pattern_count_p - 1)
              loop
                begin
                  select  to_number(CASE WHEN coalesce(to_char(substr(patient_data_p, 387 + (226 * counter_w),2)),0)='  ' THEN  0  ELSE to_char(substr(patient_data_p, 387 + (226 * counter_w),2)) END ) insurance_pattern_code,
                          to_number(substr(patient_data_p, 389 + (226 * counter_w),2)) insurance_seq,
                          substr(patient_data_p, 391 + (226 * counter_w),2) principal_number,
                          substr(patient_data_p, 393 + (226 * counter_w),2) accessory_number_one,
                          substr(patient_data_p, 395 + (226 * counter_w),2) accessory_number_two,
                          substr(patient_data_p, 397 + (226 * counter_w),2) accessory_number_three,
                          substr(patient_data_p, 399 + (226 * counter_w),2) accessory_number_four,
                          to_number(substr(patient_data_p, 401 + (226 * counter_w),1)) continuation_classification,
                          to_number(substr(patient_data_p, 402 + (226 * counter_w),1)) ie_classification,
                          to_number(substr(patient_data_p, 403 + (226 * counter_w),3)) qt_outpatient_rate,
                          to_number(substr(patient_data_p, 406 + (226 * counter_w),3)) qt_inpatient_rate,
                          to_date(to_char(substr(patient_data_p, 409 + (226 * counter_w),8)),'YYYYMMDD') dt_application_start,
                          case
                            when to_char(substr(patient_data_p, 417 + (226 * counter_w),8)) = '00000000' then null
                            when coalesce(substr(patient_data_p, 417 + (226 * counter_w),8),null) is null then null
                            else to_date(to_char(substr(patient_data_p, 417 + (226 * counter_w),8)),'YYYYMMDD')
                          end dt_application_end,
                          to_number(substr(patient_data_p, 425 + (226 * counter_w),1)) io_classification,
                          substr(patient_data_p, 426 + (226 * counter_w),12) limited_department,
                          to_number(substr(patient_data_p, 438 + (226 * counter_w),1)) reason_classification,
                          to_number(substr(patient_data_p, 439 + (226 * counter_w),1)) limitation_classification,
                          to_number(substr(patient_data_p, 440 + (226 * counter_w),8)) insurer_number,
                          substr(patient_data_p,448 + (226 * counter_w),29) symbol_area_number,
                          substr(patient_data_p,477 + (226 * counter_w),2) branch_area,
                          substr(patient_data_p,479 + (226 * counter_w),112) accessory_insurance_table,
                          substr(patient_data_p,591 + (226 * counter_w),22) insurance_name_japanese
                    into STRICT  insuarnce_pattern_code_w,	
                          nr_insuarnce_seq_w,	
                          nr_principal_number_w,
                          nr_accessory_number_one_w,
                          nr_accessory_number_two_w,
                          nr_accessory_number_three_w,
                          nr_accessory_number_four_w,
                          nr_continue_classification_w,
                          ie_classification_w,
                          qt_outpatient_rate_w,
                          qt_inpatient_rate_w,
                          dt_application_start_w,
                          dt_application_end_w,
                          io_classification_w,
                          limited_department_table_w,
                          cd_reason_classification_w,
                          limitation_classification_w,
                          cd_insurance_number_w,
                          ds_symbol_area_number_w,
                          ds_branch_area_w,
                          accessory_insurance_table_w,
                          ds_insurance_name_japanese_w
;
                exception
                when others then
                    PERFORM set_config('nais_interface_pck.ds_error_w', sqlerrm||' Error occurred while retriving patient insurance result. ', false);
                    RAISE EXCEPTION 'nais_exception_w' USING ERRCODE = '50020';
                end;

                insuarnce_pattern_code_list_w := insuarnce_pattern_code_list_w || insuarnce_pattern_code_w ||',';
				
		if (trim(both replace(ds_insurance_name_japanese_w,current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' ')) is not null)  then
				
			select  replace(replace(replace(trim(both substr(replace(ds_insurance_name_japanese_w, current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' '), 1, 4))
									|| '('
									|| trim(both substr(replace(ds_insurance_name_japanese_w, current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' '), 5, 2))
									|| ')'
									|| '/'
									|| trim(both substr(replace(ds_insurance_name_japanese_w, current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' '), 7, 4))
									|| '/'
									|| trim(both substr(replace(ds_insurance_name_japanese_w, current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' '), 11, 4))
									|| '/'
									|| trim(both substr(replace(ds_insurance_name_japanese_w, current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' '), 15, 4))
									|| '/'
									|| trim(both substr(replace(ds_insurance_name_japanese_w, current_setting('nais_interface_pck.jpn_space_w')::varchar(255), ' '), 19, 4)), '///', ''), '//', ''),
											'()', '')
			into STRICT    ds_modified_insurance_name_w
			;
					
			if (substr(ds_modified_insurance_name_w,1, 1) = '/') then
				ds_modified_insurance_name_w := substr(ds_modified_insurance_name_w, 2);
			end if;
			
			if (substr(ds_modified_insurance_name_w,-1) = '/') then
            			ds_modified_insurance_name_w := substr(ds_modified_insurance_name_w, 1, length(ds_modified_insurance_name_w)-1);
        		end if;
			
					
                end if;
				
                select  coalesce(max(nr_sequencia), 0)
                into STRICT    nais_insurance_seq_w
                from    nais_insurance
                where   cd_pessoa_fisica = cd_pessoa_fisica_p
                and     cd_insurance_pattern = insuarnce_pattern_code_w;

                if nais_insurance_seq_w <> 0 then
                    begin
                        update  nais_insurance
                        set     nr_insuarnce_seq = nr_insuarnce_seq_w,
                                nr_principal_number = nr_principal_number_w,
                                nr_accessory_number_one = nr_accessory_number_one_w,
                                nr_accessory_number_two = nr_accessory_number_two_w,
                                nr_accessory_number_three = nr_accessory_number_three_w,
                                nr_accessory_number_four = nr_accessory_number_four_w,
                                nr_continuation_classification = nr_continue_classification_w,
                                ie_classification = ie_classification_w,
                                qt_outpatient_rate = qt_outpatient_rate_w,
                                qt_inpatient_rate = qt_inpatient_rate_w,
                                dt_application_start = dt_application_start_w,
								dt_application_end = dt_application_end_w,
                                cd_reason_classification = cd_reason_classification_w,
                                cd_insurance_number = cd_insurance_number_w,
                                ds_symbol_number = ds_symbol_number_w,
                                ds_symbol_area_number = trim(both replace(ds_symbol_area_number_w,current_setting('nais_interface_pck.jpn_space_w')::varchar(255),' ') ),
                                ds_branch_area = ds_branch_area_w,
                                ds_insurance_name_japanese = ds_modified_insurance_name_w,
                                dt_health_card_check = dt_health_card_check_p
                        where   nr_sequencia = nais_insurance_seq_w;
                        commit;
                    exception
                    when others then
                        PERFORM set_config('nais_interface_pck.ds_error_w', sqlerrm||' Error occurred while updating the nais insurance details.', false);
                        RAISE EXCEPTION 'nais_exception_w' USING ERRCODE = '50020';
                    end;
                else
                    select  coalesce(max(nr_sequencia),0)+1 
                    into STRICT    nais_insurance_seq_w
                    from    nais_insurance;

                    begin
                      insert
                      into nais_insurance(
                        nr_sequencia,
                        cd_pessoa_fisica,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_insuarnce_seq,
                        nr_principal_number,
                        nr_accessory_number_one,
                        nr_accessory_number_two,
                        nr_accessory_number_three,
                        nr_accessory_number_four,
                        nr_continuation_classification,
                        ie_classification,
                        qt_outpatient_rate,
                        qt_inpatient_rate,
                        dt_application_start,
                        dt_application_end,
                        cd_reason_classification,
                        cd_insurance_number,
                        ds_symbol_number,
                        ds_symbol_area_number,
                        ds_branch_area,
                        ds_insurance_name_japanese,
                        dt_health_card_check,
                        cd_insurance_pattern
                      )
                      values (
                        nais_insurance_seq_w,
                        cd_pessoa_fisica_p,
                        clock_timestamp(),
                        current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
                        nr_insuarnce_seq_w,
                        nr_principal_number_w,
                        nr_accessory_number_one_w,
                        nr_accessory_number_two_w,
                        nr_accessory_number_three_w,
                        nr_accessory_number_four_w,
                        nr_continue_classification_w,
                        ie_classification_w,
                        qt_outpatient_rate_w,
                        qt_inpatient_rate_w,
                        dt_application_start_w,
                        dt_application_end_w,
                        cd_reason_classification_w,
                        cd_insurance_number_w,
                        ds_symbol_number_w,
                        trim(both replace(ds_symbol_area_number_w,current_setting('nais_interface_pck.jpn_space_w')::varchar(255),' ') ),
                        ds_branch_area_w,
                        ds_modified_insurance_name_w,
                        dt_health_card_check_p,
                        insuarnce_pattern_code_w
                      );
                    commit;
                    exception
                    when others then
                        PERFORM set_config('nais_interface_pck.ds_error_w', sqlerrm||' Error occurred while inserting the nais insurance details.', false);
                        RAISE EXCEPTION 'nais_exception_w' USING ERRCODE = '50020';
                    end;
                end if;

                if (io_classification_w = 0) then
                    io_classification_w := 150;
                elsif (io_classification_w = 1) then
                    io_classification_w := 160;
                elsif (io_classification_w = 2) then
                    io_classification_w := 170;
                end if;
                CALL nais_interface_pck.save_person_classification(io_classification_w, 'Inpatient/Outpatient classification', cd_pessoa_fisica_p, cd_pessoa_fisica_p, 'IO');

                CALL nais_interface_pck.save_limited_department_data(limited_department_table_w, nais_insurance_seq_w);
                CALL nais_interface_pck.save_insurance_accessory_data(accessory_insurance_table_w, nais_insurance_seq_w);
            end loop;
        end if;
        insuarnce_pattern_code_list_w := coalesce(insuarnce_pattern_code_list_w, ',');
        update  nais_insurance
        set     dt_application_end = clock_timestamp()
        where   obter_se_contido(cd_insurance_pattern,insuarnce_pattern_code_list_w) = 'N'
        and     cd_pessoa_fisica = cd_pessoa_fisica_p;
        commit;
		
		begin 				
			select  coalesce(max(cd_convenio), 0)
			into STRICT    cd_convenio_w
			from    convenio
			where   ie_tipo_convenio = 1
			and		ie_situacao = 'A';
			
			if (cd_convenio_w <> 0) then
			
				select  coalesce(max(1),0)
				into STRICT	ie_exists_w
				from 	pessoa_titular_convenio
				where	cd_convenio = cd_convenio_w
				and		cd_pessoa_fisica = cd_pessoa_fisica_p;
				
				if (ie_exists_w = 0) then
			
					insert into pessoa_titular_convenio(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							cd_convenio) values (
											nextval('pessoa_titular_convenio_seq'),
											clock_timestamp(),
											current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
											clock_timestamp(),
											current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
											cd_pessoa_fisica_p,
											cd_convenio_w);
					commit;	
				/* Self insurance is handled by Nais system */

				/*
					select  nvl(max(nr_sequencia),0)+1 
					into    nais_insurance_seq_w
					from    nais_insurance;

					select	max(cd_externo),
							max(tx_outpatient_self_pay),
							max(tx_inpatient_self_pay),
							max(ds_convenio)
					into	insuarnce_pattern_code_w,
							qt_outpatient_rate_w,
							qt_inpatient_rate_w,
							ds_insurance_name_japanese_w
					from	convenio
					where	cd_convenio = cd_convenio_w;
					
					insert	into	nais_insurance(
											nr_sequencia,
											cd_pessoa_fisica,
											dt_atualizacao_nrec,
											nm_usuario_nrec,													
											qt_outpatient_rate,
											qt_inpatient_rate,													
											ds_insurance_name_japanese,
											cd_insurance_pattern
										  )
										  values
										  (
											nais_insurance_seq_w,
											cd_pessoa_fisica_p,
											sysdate,
											nm_usuario_w,													
											qt_outpatient_rate_w,
											qt_inpatient_rate_w,
											ds_insurance_name_japanese_w,													
											insuarnce_pattern_code_w);														
					commit; 
				*/
				end if;
			end if;
				
		exception
		when others then
			PERFORM set_config('nais_interface_pck.ds_error_w', sqlerrm||' Error occurred while inserting the self payment insurance details.', false);
			RAISE EXCEPTION 'nais_exception_w' USING ERRCODE = '50020';
		end;

  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_interface_pck.process_insurance_data ( insurance_pattern_count_p bigint, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, patient_data_p text, dt_health_card_check_p timestamp) FROM PUBLIC;
