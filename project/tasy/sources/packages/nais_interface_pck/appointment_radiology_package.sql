-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_interface_pck.appointment_radiology (nr_seq_registro_p bigint, ds_file_output_p INOUT text, ie_tipo_file_p text) AS $body$
DECLARE


	cd_department_w     varchar(10);
    cd_especialidade_w  varchar(10);
	cd_dept_affair_w    nais_conversion_master%rowtype;

	c01 CURSOR FOR
		SELECT	current_setting('nais_interface_pck.nr_serial_w')::bigint serial_number,
				'H' system_code,
				'YO' message_type_code,
				'E' continuation_flag,
				'M' destination_code,
				'D' sender_code,
				clock_timestamp() processing_date,
				clock_timestamp() processing_time,
				'TASY' terminal_name,
				current_setting('nais_interface_pck.nm_usuario_w')::varchar(20) user_number,
				current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556) processing_classification,
				' ' response_class,
				378  telegram_length,
				' ' eot,
				' ' med_institution_code,
				' ' blank
		;

	c02 CURSOR FOR
		SELECT  substr(obter_prontuario_pf(obter_estab_atend(C.nr_atendimento),C.cd_pessoa_fisica),1,10) patient_id,
				coalesce(cd_dept_affair_w.cd_medical_affair, '00') department_code,
				to_char(C.dt_inicio,'YYYYMMDD') appointment_date,
				to_char(C.dt_inicio,'HH24MI') appointment_time,
				' ' consultation_room_no,
				' ' physician_code,
				' ' physician_name,
				CASE    WHEN to_char(C.dt_inicio,'YYYYMMDD') = to_char(clock_timestamp(),'YYYYMMDD') THEN '1'
						ELSE '0'
				END on_the_day_appointment_class,
				' ' application_classification,
				' ' appointment_slot_name,
				'Radiology' yo_comment1_radiology,
				' ' appointment_comment2,
				' ' appointment_departament_code,
				' ' appointment_code,
				' ' spare,
				0 date_of_registration,
				0 time_of_registration,
				a.nr_order_patient_seq order_number,
				' ' send_destination_code,
				' ' urgent_exam_flag,
				'F0' appointment_classification,
				' ' spare2
		FROM    cpoe_order_unit A,
				cpoe_tipo_pedido b,
				cpoe_procedimento C,
				prescr_procedimento D,
				prescr_medica F
		WHERE   A.nr_seq_cpoe_tipo_pedido   = b.nr_sequencia
		  AND   A.nr_sequencia              = C.nr_seq_cpoe_order_unit
		  AND   C.nr_sequencia              = D.nr_seq_proc_cpoe
		  AND   D.nr_prescricao             = F.nr_prescricao
		  and 	d.nr_seq_interno            = (SELECT max(y.nr_seq_interno) from prescr_procedimento y where y.nr_prescricao = nr_seq_registro_p)
		  AND   b.nr_seq_sub_grp            = 'R'
		  AND   ie_tipo_file_p              like '%appointmentMessageRequestRadiology%' 

		
UNION ALL


		SELECT  substr(obter_prontuario_pf(obter_estab_atend(C.nr_atendimento),C.cd_pessoa_fisica),1,10) patient_id,
				coalesce(cd_dept_affair_w.cd_medical_affair, '00') department_code,
				to_char(C.dt_inicio,'YYYYMMDD') appointment_date,
				to_char(C.dt_inicio,'HH24MI') appointment_time,
				' ' consultation_room_no,
				' ' physician_code,
				' ' physician_name,
				CASE    WHEN to_char(C.dt_inicio,'YYYYMMDD') = to_char(clock_timestamp(),'YYYYMMDD') THEN '1'
						ELSE '0'
				END on_the_day_appointment_class,
				' ' application_classification,
				' ' appointment_slot_name,
				'Radiology' yo_comment1_radiology,
				' ' appointment_comment2,
				' ' appointment_departament_code,
				' ' appointment_code,
				' ' spare,
				0 date_of_registration,
				0 time_of_registration,
				a.nr_order_patient_seq order_number,
				' ' send_destination_code,
				' ' urgent_exam_flag,
				'F0' appointment_classification,
				' ' spare2
	FROM    cpoe_order_unit A,
			cpoe_tipo_pedido b,
			cpoe_procedimento C,
			prescr_procedimento D,
			prescr_medica F
	WHERE   A.nr_seq_cpoe_tipo_pedido   = b.nr_sequencia
	  AND   A.nr_sequencia              = C.nr_seq_cpoe_order_unit    
	  AND   C.nr_sequencia              = D.nr_seq_proc_cpoe
	  AND   D.nr_prescricao             = F.nr_prescricao
	  AND   D.nr_seq_interno            =  nr_seq_registro_p
	  AND   b.nr_seq_sub_grp            = 'R'            
	  and (select count(k.nr_seq_interno) from prescr_procedimento k where k.nr_prescricao = d.nr_prescricao and coalesce(k.dt_suspensao::text, '') = '') = 0
	  AND   ie_tipo_file_p              like '%appointmentMessageCancelRadiology%';

	
BEGIN

		PERFORM set_config('nais_interface_pck.ds_line_w', NULL, false);
		PERFORM set_config('nais_interface_pck.json_output_w', philips_json(), false);
		PERFORM set_config('nais_interface_pck.json_output_list_w', philips_json_list(), false);

		if ( ie_tipo_file_p = 'appointmentMessageRequestRadiology') then
			PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '01', false);

			select	f.dt_prescricao,
					f.nr_prescricao,
					coalesce(c.nm_usuario_susp,f.nm_usuario),
					f.cd_estabelecimento,
					coalesce(a.cd_departamento_med, ''),
					coalesce(a.cd_especialidade_med, '')		
			into STRICT 	current_setting('nais_interface_pck.dt_suspencao_w')::timestamp,
					current_setting('nais_interface_pck.nr_prescricao_w')::prescr_procedimento.nr_prescricao%type,
					current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
					current_setting('nais_interface_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type,
					cd_department_w,
					cd_especialidade_w
			from 
				cpoe_order_unit a,
				cpoe_tipo_pedido b,
				cpoe_procedimento c,
				prescr_procedimento d,             
				prescr_medica f,
				atendimento_paciente g
			where
				a.nr_seq_cpoe_tipo_pedido = b.nr_sequencia
				and a.nr_sequencia 		  = c.nr_seq_cpoe_order_unit    
				and c.nr_sequencia 		  = d.nr_seq_proc_cpoe
				and d.nr_prescricao       = f.nr_prescricao
				and a.nr_atendimento      = g.nr_atendimento
				and d.nr_seq_interno      = (SELECT max(y.nr_seq_interno) from prescr_procedimento y where y.nr_prescricao = nr_seq_registro_p);

			if (cd_department_w IS NOT NULL AND cd_department_w::text <> '') then
				cd_dept_affair_w := get_medicalaffair_code('OS', 'DEPARTAMENTO_MEDICO', 'CD_DEPARTAMENTO', cd_department_w, null, null);		
			elsif (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then
				cd_dept_affair_w := get_medicalaffair_code('OS', 'ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', cd_especialidade_w, null, null);
			end if;

		end if;
		if ( ie_tipo_file_p = 'appointmentMessageCancelRadiology') then  
			PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '03', false);

			select	coalesce(a.dt_lib_suspensao, f.dt_atualizacao),
					f.nr_prescricao,
					coalesce(c.nm_usuario_susp,f.nm_usuario),
					f.cd_estabelecimento,
					coalesce(a.cd_departamento_med, ''),
					coalesce(a.cd_especialidade_med, '')	
			into STRICT 	current_setting('nais_interface_pck.dt_suspencao_w')::timestamp,
					current_setting('nais_interface_pck.nr_prescricao_w')::prescr_procedimento.nr_prescricao%type,
					current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
					current_setting('nais_interface_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type,
					cd_department_w,
					cd_especialidade_w
			from 
				cpoe_order_unit a,
				cpoe_tipo_pedido b,
				cpoe_procedimento c,
				prescr_procedimento d,             
				prescr_medica f,
				atendimento_paciente g
			where
				a.nr_seq_cpoe_tipo_pedido = b.nr_sequencia
				and a.nr_sequencia 		  = c.nr_seq_cpoe_order_unit    
				and c.nr_sequencia 		  = d.nr_seq_proc_cpoe
				and d.nr_prescricao       = f.nr_prescricao
				and a.nr_atendimento      = g.nr_atendimento
				and (SELECT count(k.nr_seq_interno) from prescr_procedimento k where k.nr_prescricao = d.nr_prescricao and coalesce(k.dt_suspensao::text, '') = '') = 0
				and d.nr_seq_interno      = nr_seq_registro_p;

			if (cd_department_w IS NOT NULL AND cd_department_w::text <> '') then
				cd_dept_affair_w := get_medicalaffair_code('OS', 'DEPARTAMENTO_MEDICO', 'CD_DEPARTAMENTO', cd_department_w, null, null);		
			elsif (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then
				cd_dept_affair_w := get_medicalaffair_code('OS', 'ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', cd_especialidade_w, null, null);
			end if;
		end if;

		FOR r_c02 IN c02 LOOP
			BEGIN
				PERFORM set_config('nais_interface_pck.ds_line_w', NULL, false);

				generate_int_serial_number(0,'MLA_ORDER_KK',current_setting('nais_interface_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type, current_setting('nais_interface_pck.nm_usuario_w')::varchar(20), current_setting('nais_interface_pck.nr_serial_w')::bigint,944);

				FOR r_c01 IN c01 LOOP
					BEGIN
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.serial_number,5,'L','0');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.system_code,1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.message_type_code,2,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.continuation_flag,1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.destination_code,1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.sender_code,1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_c01.processing_date,'YYYYMMDD'),8,'L','0');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_c01.processing_time,'HH24MISS'),6,'L','0');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.terminal_name,8,'R');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.user_number,8,'R');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.processing_classification,2,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.response_class,2,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.telegram_length,5,'L','0');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.eot,1,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.med_institution_code,2,'L');
						CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c01.blank,11,'L');
					END;
				END LOOP;

				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.patient_id,10,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.department_code,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_date,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_time,4,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.consultation_room_no,5,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.physician_code,8,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.physician_name,20,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.on_the_day_appointment_class,1,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.application_classification,2,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_slot_name,20,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.yo_comment1_radiology,50, 'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_comment2,130,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_departament_code,2,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_code,5,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.spare,13,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.date_of_registration,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.time_of_registration,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.order_number,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.send_destination_code,2,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.urgent_exam_flag,1,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.appointment_classification,2,'L');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_c02.spare2,5,'L');

				current_setting('nais_interface_pck.json_output_w')::philips_json := nais_interface_pck.add_json_value(current_setting('nais_interface_pck.json_output_w')::philips_json, 'message', current_setting('nais_interface_pck.ds_line_w')::varchar(32767));
				current_setting('nais_interface_pck.json_output_list_w')::philips_json_list.append(current_setting('nais_interface_pck.json_output_w')::philips_json.to_json_value());
			END;
		END LOOP;


		dbms_lob.createtemporary( ds_file_output_p, true);
		current_setting('nais_interface_pck.json_output_list_w')::philips_json_list.(ds_file_output_p);
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_interface_pck.appointment_radiology (nr_seq_registro_p bigint, ds_file_output_p INOUT text, ie_tipo_file_p text) FROM PUBLIC;
