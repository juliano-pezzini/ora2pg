-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_interface_pck.acceptance_information ( parameter_id_p bigint, ds_file_output_p INOUT text, ie_tipo_file_p text, nr_waiting_seq_p text) AS $body$
DECLARE


    cd_establishment            bigint;
    nr_whole_reception_w        varchar(10);
    cd_department_reception_w   varchar(10);
    nm_maquina_w                varchar(255);
    ie_waiting_number           bigint;
    ie_cancellation_flag_w      varchar(255);
    ie_appointment_flag_w       varchar(255);
	cd_department_w             numeric(20);
    cd_dept_affair_w            nais_conversion_master%rowtype;

    C01 CURSOR FOR
    SELECT  coalesce(current_setting('nais_interface_pck.nr_serial_w')::bigint, 0) serial_number,
            'H' system_code,
            'UR' message_type_code,
            'E' continuation_flag,
            'M' destination_code,
            'D' sender_code,
            clock_timestamp() processing_date,
            clock_timestamp() processing_time,
            coalesce(nm_maquina_w, 'TASY') terminal_name,
            current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20) user_number,
            coalesce(current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556), ' ') processing_classification,
            '  ' response_class,
            320  telegram_length,
            ' ' eot,
            ' ' med_institution_code,
            ' ' blank
;

    C02 CURSOR FOR
    SELECT  coalesce(current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556), ' ')  processing_classification, ---used nvl because incase of the status in not confirmed
            substr(obter_prontuario_pf(obter_estab_agenda(a.cd_agenda),a.cd_pessoa_fisica),1,255) patient_id,
            to_char(a.dt_agendamento,'YYYYMMDD') date_of_consultation,
            1 number_of_visits,
            coalesce(cd_dept_affair_w.cd_medical_affair, ' ') department,
            coalesce(ie_cancellation_flag_w, ' ') cancellation_flag,
            coalesce(substr(obter_senha_gerada_agendas(a.cd_agenda, a.nr_sequencia),1,255), 0) whole_reception_no,
            coalesce(substr(obter_senha_gerada_agendas(a.cd_agenda, a.nr_sequencia),1,255), 0)department_reception_no,
            ' ' admission_physician_code,
            ' ' medical_fee_flag,
            '0' out_of_hours,
            ' ' letter_of_introduction,
            ie_appointment_flag_w appoitnment_flag,
            to_char(a.dt_agenda,'HH24MISS') time_of_appoinment,
            coalesce(to_char(a.dt_chegada,'HH24MISS'),'153000') time_of_arrival,
            '0' medicine_only_flag,
            '0' injection_only_flag,
            '0' document_only_flag,
            '0' payment_only_flag,
            '0' spare_flag_a,
            '0' spare_flag_aa,
            '0' spare_flag_aaa,
            '0' spare_flag_aaaa,
            '0' spare_flag_aaaaa,
            '0' applied_insurance,
            coalesce(a.ds_observacao, ' ') comment_japanse,
            ' ' ds_spare,
            chr(13) eot_two
    from    agenda_consulta a,
            agenda b
    where   a.cd_agenda			=    b.cd_agenda
    and     a.nr_sequencia      =     parameter_id_p
    and     b.cd_tipo_agenda    =     current_setting('nais_interface_pck.cd_type_schedule_w')::bigint;

    C03 CURSOR FOR
    SELECT  coalesce(current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556), ' ') processing_classification, ---used nvl because incase of the status in not confirmed
            substr(obter_prontuario_pf(obter_estab_agenda(a.cd_agenda),a.cd_pessoa_fisica),1,255) patient_id,
            to_char(a.dt_agendamento,'YYYYMMDD') date_of_consultation,
            1 number_of_visits,
            substr(obter_conversao_externa_int(null, 'SETOR_ATENDIMENTO', 'CD_SETOR_ATENDIMENTO', a.cd_setor_atendimento, 'NAIS'),1,255) department,
            coalesce(ie_cancellation_flag_w, ' ') cancellation_flag,
            substr(obter_senha_gerada_agendas(a.cd_agenda, a.nr_sequencia),1,255) whole_reception_no,
            substr(obter_senha_gerada_agendas(a.cd_agenda, a.nr_sequencia),1,255) department_reception_no,
            ' ' admission_physician_code,
            ' ' medical_fee_flag,
            '0' out_of_hours,
            ' ' letter_of_introduction,
            ie_appointment_flag_w appoitnment_flag,
            to_char(a.hr_inicio,'HH24MISS') time_of_appoinment,
            coalesce(to_char(a.dt_chegada,'HH24MISS'),'153000') time_of_arrival,
            '0' medicine_only_flag,
            '0' injection_only_flag,
            '0' document_only_flag,
            '0' payment_only_flag,
            '0' spare_flag_a,
            '0' spare_flag_aa,
            '0' spare_flag_aaa,
            '0' spare_flag_aaaa,
            '0' spare_flag_aaaaa,
            '0' applied_insurance,
            a.ds_observacao comment_japanse,
            ' ' ds_spare,
            ' ' eot_two
    from    agenda_paciente a,
            agenda b
    where   a.cd_agenda          =    b.cd_agenda
    and     a.nr_sequencia       =     parameter_id_p
    and     b.cd_tipo_agenda     =     current_setting('nais_interface_pck.cd_type_schedule_w')::bigint;

    C04 CURSOR FOR
    SELECT coalesce(current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556), ' ')  processing_classification, ---used nvl because incase of the status in not confirmed
            substr(obter_prontuario_pf(obter_estab_agenda(a.cd_agenda),a.cd_pessoa_fisica),1,255) patient_id,
            to_char(a.dt_agendamento,'YYYYMMDD') date_of_consultation,
            1 number_of_visits,
            substr(obter_conversao_externa_int(null, 'SETOR_ATENDIMENTO', 'CD_SETOR_ATENDIMENTO', a.cd_setor_atendimento, 'NAIS'),1,255) department,
            coalesce(ie_cancellation_flag_w, ' ') cancellation_flag,
            substr(obter_senha_gerada_agendas(a.cd_agenda, a.nr_sequencia),1,255) whole_reception_no,
            substr(obter_senha_gerada_agendas(a.cd_agenda, a.nr_sequencia),1,255) department_reception_no,
            ' ' admission_physician_code,
            ' ' medical_fee_flag,
            '0' out_of_hours,
            ' 'letter_of_introduction,
            ie_appointment_flag_w appoitnment_flag,
            to_char(a.dt_agenda,'HH24MISS') time_of_appoinment,
            coalesce(to_char(a.dt_chegada,'HH24MISS'),'153000') time_of_arrival,
            '0' medicine_only_flag,
            '0' injection_only_flag,
            '0' document_only_flag,
            '0' payment_only_flag,
            '0' spare_flag_a,
            '0' spare_flag_aa,
            '0' spare_flag_aaa,
            '0' spare_flag_aaaa,
            '0' spare_flag_aaaaa,
            '0' applied_insurance,
            a.ds_observacao comment_japanse,
            ' ' ds_spare,
            ' ' eot_two
    from    agenda_consulta a,
            agenda b
    where   a.cd_agenda          =    b.cd_agenda
    and     a.nr_sequencia       =     parameter_id_p
    and     b.cd_tipo_agenda     =     current_setting('nais_interface_pck.cd_type_schedule_w')::bigint;

    
    
BEGIN

    PERFORM set_config('nais_interface_pck.ds_line_w', null, false);


    if (ie_tipo_file_p = 'acceptanceInfoConsultation') then


        PERFORM set_config('nais_interface_pck.cd_type_schedule_w', 3, false);

        begin
        --for setting up the current user 
            select  coalesce(max(a.nm_usuario), 'NAIS')
            into STRICT    current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20)
            from    agenda_consulta a
            where   a.nr_sequencia = parameter_id_p;
        end;

        select  coalesce(max(b.cd_estabelecimento), 1)
        into STRICT    cd_establishment
        from    agenda_consulta a,
                agenda b
        where	a.cd_agenda = b.cd_agenda		
		and	    b.cd_tipo_agenda = 3
        and     a.nr_sequencia 		= parameter_id_p;

        generate_int_serial_number(0,'NAIS_ACPT_UR', cd_establishment, current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20), current_setting('nais_interface_pck.nr_serial_w')::bigint,979);


        --user name check
        select	coalesce(ie_status_agenda, 'xyz')
        into STRICT 	current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556)
        from 	agenda_consulta
        where 	nr_sequencia = parameter_id_p;

        --  For fetching waiting number
        select  coalesce(nr_seq_pac_senha_fila,0)
        into STRICT    ie_waiting_number
        from    agenda_consulta
        where 	nr_sequencia = parameter_id_p;

		--  Fectching department code from nais_convertion_master
        select  coalesce(b.cd_especialidade,0)
        into STRICT    cd_department_w
        from    agenda_consulta a,
                agenda b
        where   a.cd_agenda         =    b.cd_agenda
        and     a.nr_sequencia      =     parameter_id_p
        and     b.cd_tipo_agenda    =     current_setting('nais_interface_pck.cd_type_schedule_w')::bigint;

        cd_dept_affair_w := get_medicalaffair_code('OS', 'ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', cd_department_w, null, null);
		
        --Fectching user PC name. in case of null it will by default take 'TASY'
        nm_maquina_w := nais_interface_pck.get_machine_name(current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20));


        -- Processing Classification check
        /*
        01:New
        03:Delete
        */
        if (ie_waiting_number <> 0) then
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '1', false);
        else
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '3', false);
        end if;

        if (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('A','CN')) then
            /*
            A - Waiting
            CN - Confirmed
            */
            PERFORM set_config('nais_interface_pck.ie_execution_w', '1', false); -- New
        elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('RE')) then
            /*
            RE - Reschedule	
            */
			
            PERFORM set_config('nais_interface_pck.ie_execution_w', '2', false); -- Change
        elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('C', 'F') or (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) = 'N' and current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556) = '3')) then
            /*
            C - Canceled
            F - Justified absence 						
            */
            PERFORM set_config('nais_interface_pck.ie_execution_w', '3', false); -- Delete
            ie_cancellation_flag_w	:=	'C';

        else
            PERFORM set_config('nais_interface_pck.ie_execution_w', '4', false); -- Not execute the interface
        end if;	

        -- End Processing Classification check
        if (current_setting('nais_interface_pck.ie_execution_w')::varchar(10) <> '4') then

            begin

            -- Appointment Flag check
            /*
            If dates of Scheduring Date (DT_AGENDAMENTO) and appointment slot (DT_AGENDA) are the same, Without appointment 

            Y: With appointment  
            ' ': Without appointment -- Space/Empty
            */
            select	coalesce(max(' '),'Y')
            into STRICT 	ie_appointment_flag_w
            from 	agenda_paciente
            where 	trunc(dt_agenda) = trunc(dt_agendamento)
            and 	nr_sequencia = parameter_id_p;

            -- End Appointment Classification check
            for r_C01 in C01 loop
                begin
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.serial_number,5,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.system_code,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.message_type_code,2,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.continuation_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.destination_code,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.sender_code,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_date,'YYYYMMDD'),8,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_time,'HH24MISS'),6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.terminal_name,8,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.user_number,8,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.processing_classification,2,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.response_class,2,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.telegram_length,5,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.eot,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.med_institution_code,2,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.blank,11,'R');
                end;
            end loop;	

            for r_C02 in C02 loop
                begin
                    if (ie_cancellation_flag_w = 'C' and current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556) = '3' and (nr_waiting_seq_p IS NOT NULL AND nr_waiting_seq_p::text <> '')) then
                        cd_department_reception_w := nr_waiting_seq_p;
                        nr_whole_reception_w := nr_waiting_seq_p;
                    else
                        cd_department_reception_w := r_C02.department_reception_no;
                        nr_whole_reception_w := r_C02.whole_reception_no;
                    end if;
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.processing_classification,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.patient_id,10,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.date_of_consultation,8,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.number_of_visits,1,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.department,3,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.cancellation_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(nr_whole_reception_w,4,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(cd_department_reception_w,4,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.admission_physician_code,11,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.medical_fee_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.out_of_hours,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.letter_of_introduction,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appoitnment_flag, 1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.time_of_appoinment,6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.time_of_arrival,6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.medicine_only_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.injection_only_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.document_only_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.payment_only_flag,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.spare_flag_a,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.spare_flag_aa,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.spare_flag_aaa,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.spare_flag_aaaa,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.spare_flag_aaaaa,1,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.applied_insurance,2,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.comment_japanse,40,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.ds_spare,145,'R');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.eot_two,1,'R');
                end;
            end loop;
            end;
        end if;
    end if;


    if (ie_tipo_file_p = 'acceptanceInfoExam') then


        PERFORM set_config('nais_interface_pck.cd_type_schedule_w', 2, false);

        select  coalesce(a.nm_usuario, 'NAIS')
        into STRICT    current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20)
        from    agenda_paciente a
        where   a.nr_sequencia = parameter_id_p;
        --user name check
        select	ie_status_agenda
        into STRICT 	current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556)
        from 	agenda_paciente
        where 	nr_sequencia = parameter_id_p;


        -- Processing Classification check
        /*
        1:New
        2:Change
        3:Delete
        */
        if (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('A','CN')) then
            /*
            A - Waiting
            CN - Confirmed
            */
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '1', false); -- New
        elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('RE')) then
            /*
            RE - Reschedule	
            */
			
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '2', false); -- Change
        elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('C', 'F')) then
            /*
            C - Canceled
            F - Justified absence 						
            */
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '3', false); -- Delete
            ie_cancellation_flag_w	:=	'C';

        else
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '4', false); -- Not execute the interface
        end if;		

        -- End Processing Classification check
        if (current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556) <> '4') then

            begin

            -- Appointment Flag check
            /*
            If dates of Scheduring Date (DT_AGENDAMENTO) and appointment slot (DT_AGENDA) are the same, Without appointment 

            Y: With appointment  
            ' ': Without appointment -- Space/Empty
            */
            select	coalesce(max(' '),'Y')
            into STRICT 	ie_appointment_flag_w
            from 	agenda_paciente
            where 	trunc(dt_agenda) = trunc(dt_agendamento)
            and 	nr_sequencia = parameter_id_p;

            -- End Appointment Classification check
            for r_C01 in C01 loop
                begin
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.serial_number,5,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.system_code,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.message_type_code,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.continuation_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.destination_code,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.sender_code,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_date,'YYYYMMDD'),8,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_time,'HHMISS'),6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.terminal_name,8,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.user_number,8,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.processing_classification,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.response_class,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.telegram_length,5,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.eot,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.med_institution_code,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.blank,11,'L');
                end;
            end loop;	


            for r_C03 in C03 loop
                begin
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.processing_classification,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.patient_id,10,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.date_of_consultation,8,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.number_of_visits,1,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.department,3,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.cancellation_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.whole_reception_no,4,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.department_reception_no,4,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.admission_physician_code,11,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.medical_fee_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.out_of_hours,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.letter_of_introduction,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.appoitnment_flag, 1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.time_of_appoinment,6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.time_of_arrival,6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.medicine_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.injection_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.document_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.payment_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.spare_flag_a,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.spare_flag_aa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.spare_flag_aaa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.spare_flag_aaaa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.spare_flag_aaaaa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.applied_insurance,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C03.comment_japanse,40,'L');
                end;
            end loop;
            end;
        end if;
    end if;

    if (ie_tipo_file_p = 'acceptanceInfoService') then

        PERFORM set_config('nais_interface_pck.cd_type_schedule_w', 5, false);

        select  coalesce(a.nm_usuario, 'NAIS')
        into STRICT    current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20)
        from    agenda_consulta a
        where   a.nr_sequencia = parameter_id_p;
        --user name check
        select	ie_status_agenda
        into STRICT 	current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556)
        from 	agenda_consulta
        where 	nr_sequencia = parameter_id_p;


        -- Processing Classification check
        /*
        1:New
        2:Change
        3:Delete
        */
        if (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('A','CN','M','N')) then
            /*
            A - Waiting
            CN - Confirmed
            M - Scheduled
            N - Regular
            */
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '1', false); -- New
        elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('RE','AD','B','E','IN','L','LF','P','EC')) then
            /*
            RE - Reschedule	
            AD - Serviced
            B - Blocked
            E - Performed
            IN - Started
            L - Available
            LF - Available forced
            P - Admitted patient
            EC - Exams conferred
            */
			
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '2', false); -- Change
        elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('C','F','I','II','S')) then
            /*
            C - Canceled
            F - Justified absence
            I - Not justified absence
            II - Inactive
            S - Suspended
            */
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '3', false); -- Delete
            ie_cancellation_flag_w	:=	'C';

        else
            PERFORM set_config('nais_interface_pck.ie_processing_classification_w', '4', false); -- Not execute the interface
        end if;		

        -- End Processing Classification check
        if (current_setting('nais_interface_pck.ie_processing_classification_w')::varchar(32556) <> '4') then

            begin

            -- Appointment Flag check
            /*
            If dates of Scheduring Date (DT_AGENDAMENTO) and appointment slot (DT_AGENDA) are the same, Without appointment 

            Y: With appointment  
            ' ': Without appointment -- Space/Empty
            */
            select	coalesce(max(' '),'Y')
            into STRICT 	ie_appointment_flag_w
            from 	agenda_paciente
            where 	trunc(dt_agenda) = trunc(dt_agendamento)
            and 	nr_sequencia = parameter_id_p;

            -- End Appointment Classification check
            for r_C01 in C01 loop
                begin
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.serial_number,5,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.system_code,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.message_type_code,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.continuation_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.destination_code,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.sender_code,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_date,'YYYYMMDD'),8,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_time,'HHMISS'),6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.terminal_name,8,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.user_number,8,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.processing_classification,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.response_class,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.telegram_length,5,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.eot,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.med_institution_code,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.blank,11,'L');
                end;
            end loop;	


            for r_C04 in C04 loop
                begin
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.processing_classification,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.patient_id,10,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.date_of_consultation,8,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.number_of_visits,1,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.department,3,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.cancellation_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.whole_reception_no,4,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.department_reception_no,4,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.admission_physician_code,11,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.medical_fee_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.out_of_hours,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.letter_of_introduction,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.appoitnment_flag, 1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.time_of_appoinment,6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.time_of_arrival,6,'L','0');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.medicine_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.injection_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.document_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.payment_only_flag,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.spare_flag_a,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.spare_flag_aa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.spare_flag_aaa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.spare_flag_aaaa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.spare_flag_aaaaa,1,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.applied_insurance,2,'L');
                    CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C04.comment_japanse,40,'L');
                end;
            end loop;
            end;
        end if;
    end if;

    RAISE NOTICE '%', current_setting('nais_interface_pck.ds_line_w')::varchar(32767);
    ds_file_output_p    := current_setting('nais_interface_pck.ds_line_w')::varchar(32767);


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_interface_pck.acceptance_information ( parameter_id_p bigint, ds_file_output_p INOUT text, ie_tipo_file_p text, nr_waiting_seq_p text) FROM PUBLIC;
