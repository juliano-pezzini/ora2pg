-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_interface_pck.save_person_classification ( cd_person_flag_p bigint, ds_person_flag_p text, ds_given_name_p text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, ie_flag_p text) AS $body$
DECLARE

        pessoa_classif_seq_w    pessoa_classif.nr_sequencia%type;
        nr_seq_classif_w pessoa_classif.nr_seq_classif%type;
        ds_query_condition_w    varchar(500);

BEGIN

        select  nais_interface_pck.get_internal_conversion(cd_person_flag_p)
        into STRICT    nr_seq_classif_w
;
		
		if (nr_seq_classif_w IS NOT NULL AND nr_seq_classif_w::text <> '') then

			if (ie_flag_p = 'TF') then --  test patient flag      
				select  coalesce(max(nr_sequencia), 0)
				into STRICT    pessoa_classif_seq_w
				from    pessoa_classif
				where   cd_pessoa_fisica = cd_pessoa_fisica_p
				and     nr_seq_classif in (nais_interface_pck.get_internal_conversion(110), nais_interface_pck.get_internal_conversion(120), nais_interface_pck.get_internal_conversion(130), nais_interface_pck.get_internal_conversion(140));
			
			elsif (ie_flag_p = 'IO') then -- I/O classification
				select  coalesce(max(nr_sequencia), 0)
				into STRICT    pessoa_classif_seq_w
				from    pessoa_classif
				where   cd_pessoa_fisica = cd_pessoa_fisica_p
				and     nr_seq_classif in (nais_interface_pck.get_internal_conversion(150), nais_interface_pck.get_internal_conversion(160), nais_interface_pck.get_internal_conversion(170));
				
			elsif (ie_flag_p = 'IN') then -- identical name flag
				select  coalesce(max(nr_sequencia), 0)
				into STRICT    pessoa_classif_seq_w
				from    pessoa_classif
				where   cd_pessoa_fisica = cd_pessoa_fisica_p
				and     nr_seq_classif in (nais_interface_pck.get_internal_conversion(90), nais_interface_pck.get_internal_conversion(100));
			end if;
			
			if (pessoa_classif_seq_w = 0) then

				select nextval('pessoa_classif_seq')
				into STRICT pessoa_classif_seq_w 
				;
		
				begin
					insert 
					into pessoa_classif(
						nr_sequencia,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						nr_seq_classif,
						dt_inicio_vigencia,
						cd_pessoa_fisica
					) 
					values (
						pessoa_classif_seq_w,
						clock_timestamp(),
						clock_timestamp(),
						current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
						current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
						nr_seq_classif_w,
						clock_timestamp(),
						cd_pessoa_fisica_p
					);
				  commit;
				exception
				when others then
					PERFORM set_config('nais_interface_pck.ds_error_w', sqlerrm || ' Error occurred while saving the '||ds_person_flag_p||' of ' || ds_given_name_p || ' .' || chr(13) || chr(10), false);
					RAISE EXCEPTION 'nais_exception_w' USING ERRCODE = '50020';
				end;
			else
				begin
					update  pessoa_classif
					set     dt_atualizacao = clock_timestamp(),
							nm_usuario   = current_setting('nais_interface_pck.nm_usuario_w')::varchar(20),
							nr_seq_classif = nr_seq_classif_w
					where   nr_sequencia = pessoa_classif_seq_w;
					commit;
				exception
				when others then
					PERFORM set_config('nais_interface_pck.ds_error_w', sqlerrm || ' Error occurred while updating the '||ds_person_flag_p||' of ' || ds_given_name_p ||' .' || chr(13) || chr(10), false);
					RAISE EXCEPTION 'nais_exception_w' USING ERRCODE = '50020';
				end;
			end if;
		end if;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_interface_pck.save_person_classification ( cd_person_flag_p bigint, ds_person_flag_p text, ds_given_name_p text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, ie_flag_p text) FROM PUBLIC;
