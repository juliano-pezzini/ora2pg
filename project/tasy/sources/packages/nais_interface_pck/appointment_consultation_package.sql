-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE nais_interface_pck.appointment_consultation ( parameter_id_p bigint, ds_file_output_p INOUT text) AS $body$
DECLARE


        slot_date                   varchar(20);
        arrival_date                varchar(20);
        on_day_appointment_w        varchar(20);
        appoint_dept_code_w         varchar(20);
        current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556)     varchar(10);
        cd_establishment            bigint;
        nm_maquina_w                varchar(255);
        cd_dept_affair_w            nais_conversion_master%rowtype;
        ie_processing_class_w       varchar(20);
        dt_confirmation_w             varchar(20);

        C01 CURSOR FOR
		SELECT	current_setting('nais_interface_pck.nr_serial_w')::bigint serial_number,
				'H' system_code,
				'YO' message_type_code,
				'E' continuation_flag,
				'M' destination_code,
				'D' sender_code,
				clock_timestamp() processing_date,
				clock_timestamp() processing_time,
				coalesce(nm_maquina_w, 'TASY') terminal_name,
                current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20) user_number,
				ie_processing_class_w processing_classification,
				' ' response_class,
				378  telegram_length,
				' ' eot,
				' ' med_institution_code,
				' ' blank
		;

		C02 CURSOR FOR
		SELECT 	substr(obter_prontuario_pf(obter_estab_agenda(a.cd_agenda),a.cd_pessoa_fisica),1,255) patient_id,
				coalesce(cd_dept_affair_w.cd_medical_affair, '8') appointment_department_code,	
				to_char(a.dt_agenda,'YYYYMMDD') appointment_date, 	--Scheduled date of consultation
				to_char(a.dt_agenda,'HH24MI') appointment_time,	--Scheduled start time
				' ' consultation_room_no,
				coalesce(a.cd_medico, ' ') physician_code,	
				' ' physician_name, 	
				on_day_appointment_w on_the_day_appointment_class,		--Scheduling date 
				' ' application_classification,
				' ' appointment_slot_name, 	
				' ' appointment_comment1,
                ' ' appointment_comment2,
                ' ' appointment_dept_code,
				' ' appointment_code,
                ' ' ds_spare_one,
				0 date_of_registration,
				0 time_of_registration,
				00000000 order_number,
				' ' send_destination_code,
				' ' urgent_exam_flag,
				' ' appointment_classification,
                ' ' ds_spare_two

		from agenda_consulta a,
			agenda b

		where	a.cd_agenda = b.cd_agenda		
		and	b.cd_tipo_agenda = 3
		and a.nr_sequencia = parameter_id_p;	

		
BEGIN

		PERFORM set_config('nais_interface_pck.ds_line_w', null, false);


        select  coalesce(a.nm_usuario, 'NAIS')
        into STRICT    current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20)
        from    agenda_consulta a
        where   a.nr_sequencia = parameter_id_p;
        --user name check
        select	coalesce((ie_status_agenda), ' '), dt_confirmacao
        into STRICT 	current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556),
                dt_confirmation_w
        from 	agenda_consulta
        where 	nr_sequencia = parameter_id_p;


    -- Check for on day appointment 
    select  to_char(dt_agenda,'YYYYMMDD'),
            to_char(dt_agendamento ,'YYYYMMDD')

    into STRICT    slot_date,
            arrival_date

    from    agenda_consulta
    where 	nr_sequencia = parameter_id_p;


    if ( slot_date = arrival_date ) then
        on_day_appointment_w := '1';
    else
        on_day_appointment_w := '0';
    end if;

    --  Fetching serial number
        select  coalesce(max(b.cd_estabelecimento), 1)
        into STRICT    cd_establishment
        from    agenda_consulta a,
                agenda b
        where	a.cd_agenda = b.cd_agenda		
		and	    b.cd_tipo_agenda = 3
        and     a.nr_sequencia 		= parameter_id_p;

        generate_int_serial_number(0,'NAIS_APTINF_YO', cd_establishment, current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20), current_setting('nais_interface_pck.nr_serial_w')::bigint,980);

     --Fectching user PC name. in case of null it will by default take 'TASY'
        nm_maquina_w := nais_interface_pck.get_machine_name(current_setting('nais_interface_pck.nm_usuario_ww')::varchar(20));

    --  Convertion for appointment department code   --
    select  coalesce(max(b.cd_especialidade),0)
    into STRICT    appoint_dept_code_w
    from    agenda_consulta a,
            especialidade_medica b
    where   b.ie_situacao = 'A'
    and     a.cd_especialidade = b.cd_especialidade
    and     a.nr_sequencia = parameter_id_p;

    cd_dept_affair_w := get_medicalaffair_code('OS', 'ESPECIALIDADE_MEDICA', 'CD_ESPECIALIDADE', appoint_dept_code_w, null, null);

	-- Processing Classification check
	/*
	1:New
	2:Change
	3:Delete
	*/
	if (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('A','CN') or
        (dt_confirmation_w IS NOT NULL AND dt_confirmation_w::text <> ''))  then 
		/*
		A - Waiting
		CN - Confirmed
		*/
		ie_processing_class_w := '01'; -- New
	elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('RE')) then
		/*
		RE - Reschedule	
		*/
			
		ie_processing_class_w := '02'; -- Change
	elsif (current_setting('nais_interface_pck.ie_status_appointment_w')::varchar(32556) in ('C', 'F')) then
		/*
		C - Canceled
		F - Justified absence 						
		*/
		ie_processing_class_w := '03'; -- Delete
	else
		ie_processing_class_w := '04'; -- Not execute the interface
	end if;		

	-- End Processing Classification check
	if (ie_processing_class_w <> '04') then

        begin
        
		for r_C01 in C01 loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.serial_number,5,'L','0');   									
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.system_code,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.message_type_code,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.continuation_flag,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.destination_code,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.sender_code,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_date,'YYYYMMDD'),8,'L','0'); 					
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(to_char(r_C01.processing_time,'HH24MISS'),6,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.terminal_name,8,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.user_number,8,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.processing_classification,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.response_class,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.telegram_length,5,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.eot,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.med_institution_code,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C01.blank,11,'R');
			end;
		end loop;

		for r_C02 in C02 loop
			begin
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.patient_id,10,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_department_code,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_date,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_time,4,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.consultation_room_no,5,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.physician_code,8,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.physician_name,20,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.on_the_day_appointment_class,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.application_classification,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_slot_name,20,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_comment1,50, 'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_comment2,130,'R');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_dept_code,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_code,5,'R');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.ds_spare_one,13,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.date_of_registration,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.time_of_registration,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.order_number,8,'L','0');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.send_destination_code,2,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.urgent_exam_flag,1,'R');
				CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.appointment_classification,2,'R');
                CALL CALL CALL CALL CALL CALL CALL CALL CALL CALL nais_interface_pck.append_text(r_C02.ds_spare_two,5,'R');
			end;
		end loop;
        end;
    end if;

		RAISE NOTICE '%', current_setting('nais_interface_pck.ds_line_w')::varchar(32767);
		ds_file_output_p	:= current_setting('nais_interface_pck.ds_line_w')::varchar(32767);

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nais_interface_pck.appointment_consultation ( parameter_id_p bigint, ds_file_output_p INOUT text) FROM PUBLIC;
