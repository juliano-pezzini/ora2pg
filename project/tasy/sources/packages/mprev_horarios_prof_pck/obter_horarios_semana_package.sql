-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION mprev_horarios_prof_pck.obter_horarios_semana ( cd_agenda_p bigint, dt_inicio_semana_p timestamp) RETURNS SETOF T_HORARIO_PROF_DATA AS $body$
DECLARE


	linha_w			t_horario_prof_row;
	i	bigint;
	j	bigint;
	tipo_w	varchar(30);

	C01 CURSOR(dt_inicio_semana_p	timestamp) FOR
		SELECT	' ' horario,
			to_char(dt_inicio_semana_p + 1,'dd') ie_segunda,
			to_char(dt_inicio_semana_p + 2,'dd') ie_terca,
			to_char(dt_inicio_semana_p + 3,'dd') ie_quarta,
			to_char(dt_inicio_semana_p + 4,'dd') ie_quinta,
			to_char(dt_inicio_semana_p + 5,'dd') ie_sexta,
			to_char(dt_inicio_semana_p + 6,'dd') ie_sabado,
			to_char(dt_inicio_semana_p + 0,'dd') ie_domingo
		;

	C02 CURSOR(cd_agenda_p		bigint) FOR
		SELECT	'HOR' ie_tipo,
			a.ie_dia_semana,
			a.dt_inicio_vigencia,
			a.dt_final_vigencia,
			to_char(a.hr_inicial,'hh24:mi') hr_inicial,
			to_char(a.hr_inicial_intervalo,'hh24:mi') hr_intervalo,
			to_char(a.hr_final_intervalo,'hh24:mi') hr_fim_intervalo,
			to_char(a.hr_final,'hh24:mi') hr_final,
			null ie_motivo_bloqueio
		from	agenda_turno a
		where	a.cd_agenda 	= cd_agenda_p
		
union all

		/* In√≠cio bloqueio */

		SELECT	'HOR' ie_tipo,
			9 ie_dia_semana,
			a.dt_inicial,
			a.dt_inicial,
			to_char(a.hr_inicio_bloqueio,'hh24:mi') hr_inicial,
			null hr_intervalo,
			null hr_fim_intervalo,
			null hr_final,
			a.ie_motivo_bloqueio
		from	agenda_bloqueio a
		where	a.cd_agenda	= cd_agenda_p
		
union all

		/* Fim bloqueio */

		select	'HOR' ie_tipo,
			9 ie_dia_semana,
			a.dt_final,
			a.dt_final,
			null hr_inicial,
			null hr_intervalo,
			null hr_fim_intervalo,
			to_char(a.hr_final_bloqueio,'hh24:mi') hr_final,
			a.ie_motivo_bloqueio
		from	agenda_bloqueio a
		where	a.cd_agenda	= cd_agenda_p;


	
BEGIN
	for r_C01 in C01(dt_inicio_semana_p) loop
		linha_w.horario := r_C01.horario;
		linha_w.ie_segunda := r_C01.ie_segunda;
		linha_w.ie_terca := r_C01.ie_terca;
		linha_w.ie_quarta := r_C01.ie_quarta;
		linha_w.ie_quinta := r_C01.ie_quinta;
		linha_w.ie_sexta := r_C01.ie_sexta;
		linha_w.ie_sabado := r_C01.ie_sabado;
		linha_w.ie_domingo := r_C01.ie_domingo;
		RETURN NEXT linha_w;
	end loop;

	for r_C02 in C02(cd_agenda_p) loop
		-- Loop dos dias da semana
		for	i in 1.. 4 loop
			tipo_w	:= null;

			if (i = 1) and (r_C02.hr_inicial IS NOT NULL AND r_C02.hr_inicial::text <> '') then
				-- Criar nova linha
				linha_w.horario := r_C02.hr_inicial;
				if (r_C02.ie_motivo_bloqueio IS NOT NULL AND r_C02.ie_motivo_bloqueio::text <> '') then
					tipo_w	:= 'IB-' || r_C02.ie_motivo_bloqueio;
				else
					tipo_w	:= 'EN';
				end if;
			end if;

			if (i = 2) and (r_C02.hr_intervalo IS NOT NULL AND r_C02.hr_intervalo::text <> '') then
				-- Criar nova linha
				linha_w.horario := r_C02.hr_intervalo;
				if (r_C02.ie_motivo_bloqueio IS NOT NULL AND r_C02.ie_motivo_bloqueio::text <> '') then
					tipo_w	:= 'BL-' || r_C02.ie_motivo_bloqueio;
				else
					tipo_w	:= 'II';
				end if;
			end if;

			if (i = 3) and (r_c02.hr_fim_intervalo IS NOT NULL AND r_c02.hr_fim_intervalo::text <> '') then
				-- Criar nova linha
				linha_w.horario := r_C02.hr_fim_intervalo;
				if (r_C02.ie_motivo_bloqueio IS NOT NULL AND r_C02.ie_motivo_bloqueio::text <> '') then
					tipo_w	:= 'BL-' || r_C02.ie_motivo_bloqueio;
				else
					tipo_w	:= 'FI';
				end if;
			end if;

			if (i = 4) and (r_c02.hr_final IS NOT NULL AND r_c02.hr_final::text <> '') then
				-- Criar nova linha
				linha_w.horario := r_C02.hr_final;
				if (r_C02.ie_motivo_bloqueio IS NOT NULL AND r_C02.ie_motivo_bloqueio::text <> '') then
					tipo_w	:= 'FB-' || r_C02.ie_motivo_bloqueio;
				else
					tipo_w	:= 'SA';
				end if;
			end if;
			-- Percorrer dias da semana
			linha_w.ie_segunda 	:= null;
			linha_w.ie_terca 	:= null;
			linha_w.ie_quarta 	:= null;
			linha_w.ie_quinta 	:= null;
			linha_w.ie_sexta 	:= null;
			linha_w.ie_sabado 	:= null;
			linha_w.ie_domingo 	:= null;

			for j in 0.. 6 loop
				if (dt_inicio_semana_p + j >= r_C02.dt_inicio_vigencia) and (dt_inicio_semana_p + j <= coalesce(r_C02.dt_final_vigencia,dt_inicio_semana_p + j)) then
					if (j = 0) and (r_C02.ie_dia_semana in (1)) then
						linha_w.ie_domingo	:= tipo_w;
					end if;
					if (j = 1) and (r_C02.ie_dia_semana in (2,9)) then
						linha_w.ie_segunda	:= tipo_w;
					end if;
					if (j = 2) and (r_C02.ie_dia_semana in (3,9)) then
						linha_w.ie_terca	:= tipo_w;
					end if;
					if (j = 3) and (r_C02.ie_dia_semana in (4,9)) then
						linha_w.ie_quarta	:= tipo_w;
					end if;
					if (j = 4) and (r_C02.ie_dia_semana in (5,9)) then
						linha_w.ie_quinta	:= tipo_w;
					end if;
					if (j = 5) and (r_C02.ie_dia_semana in (6,9)) then
						linha_w.ie_sexta	:= tipo_w;
					end if;
					if (j = 6) and (r_C02.ie_dia_semana in (7)) then
						linha_w.ie_sabado	:= tipo_w;
					end if;
				end if;
			end loop;
			if (linha_w.ie_segunda IS NOT NULL AND linha_w.ie_segunda::text <> '') or (linha_w.ie_terca IS NOT NULL AND linha_w.ie_terca::text <> '') or (linha_w.ie_quarta IS NOT NULL AND linha_w.ie_quarta::text <> '') or (linha_w.ie_quinta IS NOT NULL AND linha_w.ie_quinta::text <> '') or (linha_w.ie_sexta IS NOT NULL AND linha_w.ie_sexta::text <> '') or (linha_w.ie_sabado IS NOT NULL AND linha_w.ie_sabado::text <> '') or (linha_w.ie_domingo IS NOT NULL AND linha_w.ie_domingo::text <> '') then
				RETURN NEXT linha_w;
			end if;
		end loop;
	end loop;

	return;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION mprev_horarios_prof_pck.obter_horarios_semana ( cd_agenda_p bigint, dt_inicio_semana_p timestamp) FROM PUBLIC;
