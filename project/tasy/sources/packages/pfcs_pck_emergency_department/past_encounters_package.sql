-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pfcs_pck_emergency_department.past_encounters (cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE

		pfcs_panel_detail_seq_w		pfcs_panel_detail.nr_sequencia%type;
		pfcs_panel_seq_w			pfcs_panel.nr_sequencia%type;

		dt_execution_w              timestamp := to_date(to_char(clock_timestamp(), 'dd-mm-yyyy hh24:mi'), 'dd-mm-yyyy hh24:mi');
		dt_period_w					timestamp := coalesce(pfcs_get_pa_period(),dt_execution_w-1);
		qt_total_w					integer := 0;
		qt_admitted_w		        integer := 0;
		ie_admitted_w               pfcs_detail_patient.ie_admitted%type := PFCS_PCK_CONSTANTS.IE_NO;

		c01 CURSOR FOR
		SELECT	pat.patient_id id_patient,
				enc.id_encounter nr_encounter,
				enc.nr_esi,
				enc.ds_triage_value,
				enc.ds_triage_display,
				pfcs_get_human_name(pat.nr_sequencia, PFCS_PCK_CONSTANTS.DS_PATIENT) nm_patient,
				pat.gender ds_gender,
				round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)) qt_patient_age,
				enc.period_start dt_period_start,
				enc.period_end dt_period_end,
				((enc.period_end - enc.period_start) * 24 * 60 ) nr_total_time,
				PFCS_PCK_UTILS.GET_FULL_LOCATION(uni_req.nr_seq_location) ds_location,
				PFCS_PCK_UTILS.GET_NETWORK_VALIDATION(pat.nr_sequencia) ds_coverage_network,
				PFCS_PCK_UTILS.GET_COVERAGE_CLASS_VALUE(pat.nr_sequencia, CD_TYPE_COVERAGE_CLASS) ds_coverage_class,
				enc.cd_service_type,
				sec_req.ds_setor_atendimento ds_department,
				ser.cd_service
		  from	pfcs_service_request ser
		inner join pfcs_encounter enc			on ser.nr_seq_encounter = enc.nr_sequencia
		inner join pfcs_patient pat				on enc.nr_seq_patient = pat.nr_sequencia
		inner join unidade_atendimento uni		on uni.nr_seq_location = coalesce(enc.nr_seq_location, pfcs_get_pat_location(pat.nr_sequencia, enc.nr_sequencia))
		inner join setor_atendimento sec		on sec.cd_setor_atendimento = uni.cd_setor_atendimento
		inner join unidade_atendimento uni_req	on ser.nr_seq_location = uni_req.nr_seq_location
		inner join setor_atendimento sec_req	on sec_req.cd_setor_atendimento = uni_req.cd_setor_atendimento
		 where	sec.cd_classif_setor = PFCS_PCK_CONSTANTS.CD_ED
		   and	(((ser.cd_service = PFCS_PCK_CONSTANTS.CD_TRANSFER) and (upper(ser.si_status) = PFCS_PCK_CONSTANTS.SI_STATUS_ACTIVE) and (upper(ser.si_intent) = PFCS_PCK_CONSTANTS.SI_INTENT_PLAN) and (sec_req.cd_classif_setor <> PFCS_PCK_CONSTANTS.CD_ED) and (ser.nr_seq_location <> uni.nr_seq_location)) or
				((ser.cd_service = PFCS_PCK_CONSTANTS.CD_DISCHARGE) and (upper(ser.si_status) = PFCS_PCK_CONSTANTS.SI_STATUS_COMPLETED) and (upper(ser.si_intent) = PFCS_PCK_CONSTANTS.SI_INTENT_ORDER) and (upper(enc.si_status) = PFCS_PCK_CONSTANTS.SI_STATUS_FINISHED)))
		   and (enc.period_start between dt_period_w and clock_timestamp())
		   and	sec.cd_estabelecimento = cd_establishment_p;
	
BEGIN
		<<C01_loop>>
		for c01_w in c01 loop
			qt_total_w := qt_total_w + 1;
			ie_admitted_w := PFCS_PCK_CONSTANTS.IE_NO;
			
			if (c01_w.cd_service = PFCS_PCK_CONSTANTS.CD_TRANSFER )then
				qt_admitted_w := qt_admitted_w + 1;
				ie_admitted_w := PFCS_PCK_CONSTANTS.IE_YES;
			end if;

			select	nextval('pfcs_panel_detail_seq')
			  into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level
			)
			values (
				pfcs_panel_detail_seq_w,
				nm_user_p,
				dt_execution_w,
				nm_user_p,
				clock_timestamp(),
				PFCS_PCK_CONSTANTS.IE_TEMPORARY,
				PFCS_PCK_INDICATORS.NR_ED_PAST_ENCOUNTERS,
				cd_establishment_p
			);

			insert into pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				ds_department
			)
			values (
				nextval('pfcs_detail_bed_seq'),
				nm_user_p,
				dt_execution_w,
				nm_user_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.ds_location,
				c01_w.ds_department
			);

			insert into pfcs_detail_patient(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				nr_esi,
				ds_triage_value,
				ds_triage_display,
				nm_patient,
				ds_gender,
				ds_age_range,
				id_patient,
				dt_entrance,
				dt_last_discharge,
				qt_time_total_pa,
				ds_coverage_network,
				ds_coverage_class,
				ie_admitted,
				cd_service_type,
				nr_encounter_varchar
			)
			values (
				nextval('pfcs_detail_patient_seq'),
				nm_user_p,
				dt_execution_w,
				nm_user_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.nr_esi,
				c01_w.ds_triage_value,
				c01_w.ds_triage_display,
				c01_w.nm_patient,
				c01_w.ds_gender,
				c01_w.qt_patient_age,
				c01_w.id_patient,
				c01_w.dt_period_start,
				c01_w.dt_period_end,
				c01_w.nr_total_time,
				c01_w.ds_coverage_network,
				c01_w.ds_coverage_class,
				ie_admitted_w,
				c01_w.cd_service_type,
				c01_w.nr_encounter
			);
		end loop C01_loop;

		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_total_w, vl_indicator_aux_p          => qt_admitted_w, nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_PAST_ENCOUNTERS, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_PAST_ENCOUNTERS,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_PAST_ENCOUNTERS,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_emergency_department.past_encounters (cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;
