-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

/*========================================== Procedures ===========================================*/

CREATE OR REPLACE PROCEDURE pfcs_pck_emergency_department.current_encounters (cd_establishment_p bigint, nm_user_p text) AS $body$
DECLARE

		pfcs_panel_detail_seq_w		pfcs_panel_detail.nr_sequencia%type;
		pfcs_panel_seq_w			pfcs_panel.nr_sequencia%type;
		qt_time_ed_stage_w			pfcs_general_rule.qt_time_ed_stage%type;
		cd_calc_method_w			pfcs_general_rule.ie_ed_calc_method%type;

		qt_total_w					integer := 0;
		qt_total_time_in_ed_w		integer := 0;
		qt_time_in_ed_max			integer := 0;
		qt_consolidated_time_w		integer := 0;
		
		qt_total_obs_w				integer := 0;
		qt_in_network_w				integer := 0;
		qt_out_network_w			integer := 0;
		qt_doctor_consultation_w	integer := 0;
		qt_total_post_cons_w		integer := 0;
		qt_doctor_cons_wait_time_w	integer := 0;
		qt_post_cons_wait_time_w	integer := 0;
		qt_doctor_cons_sla_w		integer := 0;
		qt_post_cons_sla_w			integer := 0;
		qt_wait_time_w				integer := 0;
		qt_total_triage_w			integer := 0;
		qt_triage_wait_time_w		integer := 0;
		qt_triage_sla_w				integer := 0;
    dt_execution_w              timestamp := to_date(to_char(clock_timestamp(), 'dd-mm-yyyy hh24:mi'), 'dd-mm-yyyy hh24:mi');

		c01 CURSOR FOR
		SELECT	enc.id_encounter nr_encounter,
				pat.patient_id id_patient,
				enc.nr_esi,
				enc.ds_triage_value,
				enc.ds_triage_display,
				pfcs_get_human_name(pat.nr_sequencia, PFCS_PCK_CONSTANTS.DS_PATIENT) nm_patient,
				pat.gender ds_gender,
				round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)) qt_patient_age,
				enc.period_start dt_period_start,
				enc.nr_sequencia nr_seq_encounter,
				PFCS_PCK_UTILS.GET_FULL_LOCATION(uni.nr_seq_location) ds_location,
				PFCS_PCK_UTILS.GET_NETWORK_VALIDATION(pat.nr_sequencia) ie_in_network,
				PFCS_PCK_UTILS.GET_COVERAGE_CLASS_VALUE(pat.nr_sequencia,CD_TYPE_COVERAGE_CLASS) ds_coverage_class,
				enc.cd_service_type,
				sec.ds_setor_atendimento ds_department,
				pfcs_pck_emergency_department.get_encounter_stage(enc.nr_sequencia) cd_stage,
				svc.dt_authored_on dt_svc_request,
				tsk.cd_reason cd_reason_task,
				tsk.ds_reason_display ds_reason_task
		  from	pfcs_patient pat
		inner join pfcs_encounter enc			on pat.nr_sequencia = enc.nr_seq_patient
		inner join pfcs_service_request svc		on enc.nr_sequencia = svc.nr_seq_encounter and
												   svc.nr_seq_patient = enc.nr_seq_patient
		inner join unidade_atendimento uni		on uni.nr_seq_location = coalesce(enc.nr_seq_location, pfcs_get_pat_location(pat.nr_sequencia, enc.nr_sequencia))
		inner join setor_atendimento sec		on uni.cd_setor_atendimento = sec.cd_setor_atendimento
		inner join unidade_atendimento uni_req	on svc.nr_seq_location = uni_req.nr_seq_location
		inner join setor_atendimento sec_req	on sec_req.cd_setor_atendimento = uni_req.cd_setor_atendimento
		left  join pfcs_task tsk				on tsk.nr_seq_encounter = enc.nr_sequencia and 
												   tsk.cd_establishment = sec.cd_estabelecimento_base and
												   tsk.si_status = PFCS_PCK_CONSTANTS.SI_STATUS_COMPLETED and
												   tsk.si_intent = PFCS_PCK_CONSTANTS.SI_INTENT_ORDER
		 where	pat.ie_active = TO_CHAR(PFCS_PCK_CONSTANTS.IE_TRUE)
		   and	(enc.period_start IS NOT NULL AND enc.period_start::text <> '')
		   and	coalesce(enc.period_end::text, '') = ''
		   and	((svc.cd_service = PFCS_PCK_CONSTANTS.CD_ADMISSION and
				  svc.si_status = PFCS_PCK_CONSTANTS.SI_STATUS_COMPLETED and
				  svc.si_intent = PFCS_PCK_CONSTANTS.SI_INTENT_ORDER) or (svc.cd_service = PFCS_PCK_CONSTANTS.CD_TRANSFER and
				  sec_req.cd_classif_setor = PFCS_PCK_CONSTANTS.CD_ED) or (svc.cd_service = PFCS_PCK_CONSTANTS.CD_DISCHARGE and
				  svc.si_status <> PFCS_PCK_CONSTANTS.SI_STATUS_COMPLETED and
				  svc.si_intent <> PFCS_PCK_CONSTANTS.SI_INTENT_ORDER))
		   and	sec.ie_situacao = PFCS_PCK_CONSTANTS.IE_ACTIVE
		   and	sec.cd_classif_setor = PFCS_PCK_CONSTANTS.CD_ED
		   and  (svc.dt_authored_on IS NOT NULL AND svc.dt_authored_on::text <> '')
		   and	sec.cd_estabelecimento_base = cd_establishment_p;

	
BEGIN
		select max(qt_time_ed_stage) into STRICT qt_time_ed_stage_w from pfcs_general_rule;
		select max(ie_ed_calc_method) into STRICT cd_calc_method_w from pfcs_general_rule;

		<<C01_loop>>
		for c01_w in c01 loop
			qt_total_w := qt_total_w + 1;
			qt_wait_time_w := (dt_execution_w - c01_w.dt_period_start) * 1440;
			qt_total_time_in_ed_w := qt_total_time_in_ed_w + qt_wait_time_w;
			
			if qt_wait_time_w > qt_time_in_ed_max then
				qt_time_in_ed_max := qt_wait_time_w;
			end if;

			if (c01_w.ie_in_network = PFCS_PCK_CONSTANTS.IE_YES) then
				qt_in_network_w := qt_in_network_w + 1;
			else
				qt_out_network_w := qt_out_network_w + 1;
			end if;
			
			if c01_w.cd_stage = current_setting('pfcs_pck_emergency_department.cd_stage_doctor_consultation')::smallint then
				qt_doctor_consultation_w := qt_doctor_consultation_w + 1;
				qt_doctor_cons_wait_time_w := qt_doctor_cons_wait_time_w + qt_wait_time_w;
				if qt_wait_time_w <= qt_time_ed_stage_w then
					qt_doctor_cons_sla_w := qt_doctor_cons_sla_w + 1;
				end if;
				
			elsif c01_w.cd_stage in (current_setting('pfcs_pck_emergency_department.cd_stage_observation')::smallint, current_setting('pfcs_pck_emergency_department.cd_stage_medication')::smallint, current_setting('pfcs_pck_emergency_department.cd_stage_laboratory')::smallint) then
				qt_total_post_cons_w := qt_total_post_cons_w + 1;
				qt_post_cons_wait_time_w := qt_post_cons_wait_time_w + qt_wait_time_w;
				if qt_wait_time_w <= qt_time_ed_stage_w then
					qt_post_cons_sla_w := qt_post_cons_sla_w + 1;
				end if;
				if (c01_w.cd_stage = current_setting('pfcs_pck_emergency_department.cd_stage_observation')::smallint) then
					qt_total_obs_w := qt_total_obs_w + 1;
				end if;
				
			elsif c01_w.cd_stage = current_setting('pfcs_pck_emergency_department.cd_stage_triage')::smallint then
				qt_total_triage_w := qt_total_triage_w + 1;
				qt_triage_wait_time_w := qt_triage_wait_time_w + qt_wait_time_w;
				if qt_wait_time_w <= qt_time_ed_stage_w then
					qt_triage_sla_w := qt_triage_sla_w + 1;
				end if;
			end if;

			select	nextval('pfcs_panel_detail_seq')
			  into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level
			)
			values (
				pfcs_panel_detail_seq_w,
				nm_user_p,
				dt_execution_w,
				nm_user_p,
				clock_timestamp(),
				PFCS_PCK_CONSTANTS.IE_TEMPORARY,
				PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS,
				cd_establishment_p
			);

			insert into pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				ds_department
			)
			values (
				nextval('pfcs_detail_bed_seq'),
				nm_user_p,
				dt_execution_w,
				nm_user_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.ds_location,
				c01_w.ds_department
			);

			insert into pfcs_detail_patient(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				nr_encounter_varchar,
				nr_esi,
				ds_triage_value,
				ds_triage_display,
				nm_patient,
				ds_gender,
				ds_age_range,
				id_patient,
				dt_entrance,
				ds_coverage_network,
				ds_coverage_class,
				cd_service_type,
				nr_seq_encounter,
				cd_stage_pa,
				dt_request
			)
			values (
				nextval('pfcs_detail_patient_seq'),
				nm_user_p,
				dt_execution_w,
				nm_user_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.nr_encounter,
				c01_w.nr_esi,
				c01_w.ds_triage_value,
				c01_w.ds_triage_display,
				c01_w.nm_patient,
				c01_w.ds_gender,
				c01_w.qt_patient_age,
				c01_w.id_patient,
				c01_w.dt_period_start,
				c01_w.ie_in_network,
				c01_w.ds_coverage_class,
				c01_w.cd_service_type,
				c01_w.nr_seq_encounter,
				to_char(c01_w.cd_stage),
				c01_w.dt_svc_request
			);
		end loop C01_loop;
		
		if (cd_calc_method_w = current_setting('pfcs_pck_emergency_department.cd_calc_time_avg')::pfcs_general_rule.ie_ed_calc_method%type) then
			qt_consolidated_time_w  := round(dividir(qt_total_time_in_ed_w, qt_total_w));
		elsif (cd_calc_method_w = current_setting('pfcs_pck_emergency_department.cd_calc_time_max')::pfcs_general_rule.ie_ed_calc_method%type) then
			qt_consolidated_time_w := qt_time_in_ed_max;
		end if;

		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_total_w, vl_indicator_collab_p       => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_IN_NETWORK, vl_indicator_help_p         => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_OUT_NETWORK, nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		----- IN_NETWORK -----
		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_in_network_w, nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_IN_NETWORK, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_IN_NETWORK,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_IN_NETWORK,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		----- OUT_NETWORK -----
		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_out_network_w, nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_OUT_NETWORK, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_OUT_NETWORK,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_ENCOUNTERS_OUT_NETWORK,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		----- TOTAL TIME IN ED -----
		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_consolidated_time_w, nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_TOTAL_TIME, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_TOTAL_TIME,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_TOTAL_TIME,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		----- DOCTOR CONSULTATION -----
		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_doctor_consultation_w, vl_indicator_assist_p       => round(dividir(qt_doctor_cons_wait_time_w, qt_doctor_consultation_w)), vl_indicator_aux_p          => round(pfcs_get_percentage_value(qt_doctor_cons_sla_w, qt_doctor_consultation_w)), nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_PHYSICIAN_CONSULTATION, vl_indicator_collab_p       => PFCS_PCK_INDICATORS.NR_ED_DOCTOR_CONS_WAIT_TIME, vl_indicator_help_p         => PFCS_PCK_INDICATORS.NR_ED_DOCTOR_CONS_SLA, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_PHYSICIAN_CONSULTATION,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_PHYSICIAN_CONSULTATION,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		----- SERVICE FLOW ----
		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_total_post_cons_w, vl_indicator_assist_p       => round(dividir(qt_post_cons_wait_time_w, qt_total_post_cons_w)), vl_indicator_aux_p          => round(pfcs_get_percentage_value(qt_post_cons_sla_w, qt_total_post_cons_w)), nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_CARE_FLOW, vl_indicator_collab_p       => PFCS_PCK_INDICATORS.NR_ED_POST_CONS_WAIT_TIME, vl_indicator_help_p         => PFCS_PCK_INDICATORS.NR_ED_POST_CONS_SLA, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_CARE_FLOW,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_CARE_FLOW,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		----- OBSERVATION----
         := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_total_obs_w, nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_OBSERVATION, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_OBSERVATION,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_OBSERVATION,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);
			
		----- TRIAGE ----
		 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p              => qt_total_triage_w, vl_indicator_assist_p       => round(dividir(qt_triage_wait_time_w, qt_total_triage_w)), vl_indicator_aux_p          => round(pfcs_get_percentage_value(qt_triage_sla_w, qt_total_triage_w)), nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_TRIAGE, vl_indicator_collab_p       => PFCS_PCK_INDICATORS.NR_ED_TRIAGE_WAIT_TIME, vl_indicator_help_p         => PFCS_PCK_INDICATORS.NR_ED_TRIAGE_SLA, nr_seq_operational_level_p  => cd_establishment_p, nm_usuario_p                => nm_user_p, nr_seq_panel_p              => pfcs_panel_seq_w);

		CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_TRIAGE,
			nr_seq_panel_p              => pfcs_panel_seq_w,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

		CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p          => PFCS_PCK_INDICATORS.NR_ED_TRIAGE,
			nr_seq_operational_level_p  => cd_establishment_p,
			nm_usuario_p                => nm_user_p);

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pck_emergency_department.current_encounters (cd_establishment_p bigint, nm_user_p text) FROM PUBLIC;
