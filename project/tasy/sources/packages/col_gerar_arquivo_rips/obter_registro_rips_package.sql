-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION col_gerar_arquivo_rips.obter_registro_rips ( nr_lote_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_registro_p valor_dominio.vl_dominio%TYPE ) RETURNS COL_ARQ_REGISTRO_RIPS_TYPE AS $body$
DECLARE


        c01                 integer := dbms_sql.open_cursor();
        l_columnvalue_w       varchar(32767);
        l_columntype_w       smallint;
        l_status_w            integer;
        l_desctbl_w           dbms_sql.desc_tab;
        l_colcnt_w            bigint;
        ds_arquivo_w        text;
        qt_registro_w       bigint := 0;
        registro_rips_w     col_arq_registro_rips_type;
        nr_seq_sql_dic_objeto_w  DIC_OBJETO.NR_SEQUENCIA%TYPE;
        ds_sql_w            varchar(32767);
        nm_campo_base_c     REFCURSOR := NULL;
        nm_separador        CONSTANT varchar(1) := ',';
        nm_formato_arquivo  CONSTANT varchar(4) := '.txt';

BEGIN

        nr_seq_sql_dic_objeto_w := col_gerar_arquivo_rips.obter_nr_seq_sql_rips(ie_tipo_registro_p);
        ds_sql_w := col_gerar_arquivo_rips.obter_ds_sql_rips(nr_seq_sql_dic_objeto_w);
        nm_campo_base_c := col_gerar_arquivo_rips.obter_ds_parametros_sql_rips(nr_seq_sql_dic_objeto_w, nm_campo_base_c);
        IF (ie_tipo_registro_p IS NOT NULL AND ie_tipo_registro_p::text <> '' AND ds_sql_w IS NOT NULL AND ds_sql_w::text <> '') THEN
            dbms_sql.parse(c01, ds_sql_w, dbms_sql.native);
            dbms_sql.describe_columns(c01, l_colcnt_w, l_desctbl_w);
            FOR i IN 1..l_colcnt_w LOOP
                dbms_sql.define_column(c01, i, l_columnvalue_w, 4000);
            END LOOP;

            CALL col_gerar_arquivo_rips.bind_parametros(c01, nm_campo_base_c, nr_lote_p,dt_inicio_p, dt_fim_p);

            l_status_w := dbms_sql.execute(c01);
            WHILE( dbms_sql.fetch_rows(c01) > 0 ) LOOP
                FOR i IN 1..l_colcnt_w LOOP
                    dbms_sql.column_value(c01, i, l_columnvalue_w);
                    IF ( i = 1 ) OR ( i > l_colcnt_w ) THEN
                        ds_arquivo_w := ds_arquivo_w || col_gerar_arquivo_rips.converte_valor_coluna(l_columnvalue_w, l_desctbl_w[i].col_type);
                    ELSE
                        ds_arquivo_w := ds_arquivo_w
                                        || nm_separador
                                        || col_gerar_arquivo_rips.converte_valor_coluna(l_columnvalue_w, l_desctbl_w[i].col_type);
                    END IF;

                END LOOP;

                ds_arquivo_w := ds_arquivo_w || chr(13);
                qt_registro_w := qt_registro_w + 1;
            END LOOP;

            dbms_sql.close_cursor(c01);
            registro_rips_w.ie_tipo_registro := ie_tipo_registro_p;
            registro_rips_w.ds_arquivo := ie_tipo_registro_p
                                          || nr_lote_p
                                          || nm_formato_arquivo;
            registro_rips_w.dt_geracao := clock_timestamp();
            registro_rips_w.nm_usuario_geracao := wheb_usuario_pck.get_nm_usuario;
            registro_rips_w.ds_conteudo_arquivo := UPPER(ds_arquivo_w);
            registro_rips_w.qt_registro := qt_registro_w;
        END IF;

        RETURN registro_rips_w;
        EXCEPTION
            when others then CALL wheb_mensagem_pck.exibir_mensagem_abort(1202101,'DS_ARQUIVO='||ie_tipo_registro_p);
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION col_gerar_arquivo_rips.obter_registro_rips ( nr_lote_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ie_tipo_registro_p valor_dominio.vl_dominio%TYPE ) FROM PUBLIC;
