-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE tie_sms.grava_log_retorno_sms (lista_retorno_xml_p text) AS $body$
DECLARE

								
json_data_w    philips_json;
replied_list_w philips_json_list;

id_sms_w        log_sms_tie.id_sms%type;
nr_celular_w    log_envio_sms.nr_telefone%type;
nm_usuario_w    log_envio_sms.nm_usuario%type;
dt_resposta_w   log_sms_tie.dt_retorno%type;
ds_resposta_w   log_envio_sms.ds_mensagem%type;
ds_remetente_w  log_sms_tie.nr_tel_remetente%type;
ds_evento_tie_w log_sms_tie.ds_evento_tie%type;
  msg RECORD;

BEGIN
	
	--setar com base na requisicao para pegar os valores de param caso necessario ou deixar para obter padrao cliente
	/*wheb_usuario_pck.set_nm_usuario('integracao' ou usuario ativo);
	wheb_usuario_pck.set_cd_perfil(1939 ou perfil ativo);
	wheb_usuario_pck.set_cd_funcao(869 ou funcao ativa);
	wheb_usuario_pck.set_cd_estabelecimento(1 ou estabelecimento ativo);*/
	
	replied_list_w := philips_json_list(lista_retorno_xml_p);
	
	for i in 1 .. replied_list_w.count LOOP
	
		json_data_w := philips_json(replied_list_w.get(i));
		
		id_sms_w        := json_data_w.get['id_sms'].get_string();
		nr_celular_w    := json_data_w.get['nr_celular_from'].get_string();
		ds_resposta_w   := json_data_w.get['ds_resposta_clean'].get_string();
		nm_usuario_w    := json_data_w.get['nm_usuario'].get_string();
		ds_remetente_w  := json_data_w.get['nr_celular_to'].get_string();
		ds_evento_tie_w := json_data_w.get['ds_evento_tie'].get_string();
		dt_resposta_w   := to_date(json_data_w.get['dt_resposta'].get_string(), 'yyyy-mm-dd hh24:mi:ss');
		
		for msg in (select * from table(wheb_sms.get_patient_by_mobile(nr_celular_w, ds_resposta_w, dt_resposta_w))) loop
			
			insert into log_retorno_sms(
				nr_sequencia,
				nr_celular,
				ds_resposta,
				dt_resposta,
				ie_processado,
				cd_pessoa_fisica,
				nr_seq_ageint,
				nr_seq_agenda_pac,
				nr_seq_agenda_cons,
				dt_agendamento
				) values (
				nextval('log_retorno_sms_seq'),
				trim(both nr_celular_w),
				trim(both ds_resposta_w),
				dt_resposta_w,
				'N',
				msg.cd_pessoa_fisica,
				msg.agenda_int_seq,
				CASE WHEN msg.ds_type='IP' THEN  msg.agend_seq  ELSE null END ,
				CASE WHEN msg.ds_type='C' THEN  msg.agend_seq WHEN msg.ds_type='IC' THEN  msg.agend_seq  ELSE null END ,
				msg.dt_agenda);
			
			commit;
			CALL tie_sms.gravar_log_sms_tie(null, nm_usuario_w, ds_remetente_w, nr_celular_w, ds_evento_tie_w, ds_resposta_w, id_sms_w, dt_resposta_w, null);
		end loop;
end loop;
END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE tie_sms.grava_log_retorno_sms (lista_retorno_xml_p text) FROM PUBLIC;
