-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_envio_ans_extra_pck.pls_converter_cbo_tiss (nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


cd_cbo_executante_w 		pls_monitor_tiss_cta_val.cd_cbo_executante%type;
nr_versao_ptu_w			varchar(10);
nr_cbo_req_w			ptu_nota_servico.nr_cbo_exec%type;
nr_seq_nota_cobranca_w		ptu_nota_servico.nr_seq_nota_cobr%type;
cd_especialidade_w		ptu_nota_servico.cd_especialidade%type;
nr_seq_especialidade_w		especialidade_medica.cd_especialidade%type;
nr_seq_prest_inter_w		pls_conta.nr_seq_prest_inter%type;
nr_seq_cbo_saude_w		tiss_cbo_saude.nr_seq_cbo_saude%type;
nr_seq_cbo_partic_w		pls_proc_participante.nr_seq_cbo_saude%type;
nr_seq_cbo_pf_w			pessoa_fisica.nr_seq_cbo_saude%type;
ie_tipo_atendimento_w		varchar(15);
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;

nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
cd_procedimento_w		pls_conta_proc.cd_procedimento%type;
ie_origem_proced_w		pls_conta_proc.ie_origem_proced%type;
nr_sequencia_regra_conv_w 	pls_monitor_tiss_conv_cbo.nr_sequencia%type;
nr_seq_regra_w			pls_monitor_tiss_conv_cbo.nr_sequencia%type;
nr_seq_cbo_saude_conv_w		pls_monitor_tiss_conv_cbo.nr_seq_cbo_saude_conv%type;
nr_seq_grupo_proc_w		pls_monitor_tiss_conv_cbo.nr_seq_grupo_proc%type;
nr_seq_grupo_prest_w		pls_monitor_tiss_conv_cbo.nr_seq_grupo_prest%type;
nr_seq_grupo_mat_w		pls_monitor_tiss_conv_cbo.nr_seq_grupo_mat%type;
nr_seq_material_w		pls_conta_mat.nr_seq_material%type;
ie_grupo_serv_w			varchar(1);
ie_grupo_prestador_w		varchar(1);
ie_grupo_mat_w			varchar(1);
cd_versao_tiss_w		pls_monitor_tiss_lote.cd_versao_tiss%type;
nr_seq_conta_ant_w		pls_conta.nr_sequencia%type;
nr_seq_conta_w			pls_monitor_tiss_cta_val.nr_seq_conta%type;
nr_sequencia_regra_conta_w	pls_monitor_tiss_conv_cbo.nr_sequencia%type;
ie_cbo_prest_executor_w		pls_monitor_tiss_param.ie_cbo_prest_executor%type;
cd_conversao_cbo_w		pls_monitor_tiss_cta_val.cd_conversao_cbo%type;
nr_seq_cbo_saude_conv_regra_w	pls_monitor_tiss_conv_cbo.nr_seq_cbo_saude_conv%type;
cb_cbo_conta_ant_w		pls_monitor_tiss_cta_val.cd_cbo_executante%type;

/*
Rotina criada para a fazer a conversao do CBO executante da conta presente na conta medica para o CBO presente na regra de conversao do monitoramento
Primeiramente pegamos as contas do lote e validamos as regras elegiveis, somente apos isso fazemos a comparacao da regra a nivel de item.
Criamos o atributo pls_monitor_tiss_cta_val.cd_conversao_cbo que vai gravar o status dessa conversao com os valores abaixo:

GI - Gerou inconsistecnia - Quando a conta pegar esse status, vai gerar uma inconsistencia mencionando que ha regras duplicadas
CA - Competencia anterior - Quando a conta pegar esse status, vai gerar uma inconsistencia mencionando que a conta ja foi enviada em competencia anterior
RP - Regra procedimento - Sera gerado quando a conta encontrar uma regra a nivel de procedimento
RM - Regra material - Sera gerado quando a conta encontrar uma regra a nivel de material
RC - Regra conta - Sera gerado quando a conta encontrar uma regra a nivel de conta

Quando a conta se encaixar nos status GI e CA nao havera conversao e se mantera o comportamento atual do sistema, gerando uma inconsistencia informativa na conta
*/
C00 CURSOR FOR
	SELECT 	a.nr_seq_conta,
		a.ie_tipo_guia,
		obter_seq_cbo_saude(a.cd_cbo_executante),
		x.dt_atendimento_referencia,
		coalesce(x.nr_seq_prestador_exec,null)
	from 	pls_monitor_tiss_cta_val a,
		pls_conta x
	where	a.nr_seq_conta		= x.nr_sequencia
	and	a.nr_seq_lote_monitor = nr_seq_lote_p
	order by a.nr_seq_conta;	
	
C01 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced
	from	pls_monitor_tiss_proc_val a,
		pls_monitor_tiss_cta_val b
	where	a.nr_seq_conta	= b.nr_seq_conta
	and 	a.nr_seq_conta	= nr_seq_conta_w
	and 	b.nr_seq_lote_monitor = nr_seq_lote_p
	group by 	a.cd_procedimento,	
			a.ie_origem_proced;
	
C02 CURSOR FOR
	SELECT	a.nr_seq_material	
	from	pls_monitor_tiss_mat_val a,
		pls_monitor_tiss_cta_val b
	where	a.nr_seq_conta	= b.nr_seq_conta
	and 	a.nr_seq_conta	= nr_seq_conta_w
	and 	b.nr_seq_lote_monitor = nr_seq_lote_p
	group by a.nr_seq_material;
	
C03 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_monitor_tiss_conv_cbo a
	where	dt_atendimento_referencia_w between a.dt_vigencia and coalesce(a.dt_fim_vigencia,dt_atendimento_referencia_w)	
	and	((coalesce(a.ie_tipo_guia::text, '') = '') 	or (a.ie_tipo_guia = ie_tipo_guia_w))
	and	((coalesce(a.nr_seq_prestador::text, '') = '') 	or (a.nr_seq_prestador = nr_seq_prestador_exec_w))
	and 	((coalesce(a.nr_seq_cbo_saude_origem::text, '') = '') 	or (a.nr_seq_cbo_saude_origem = nr_seq_cbo_saude_w))
	order by a.cd_procedimento,
	a.nr_seq_grupo_proc,
	a.nr_seq_material,
	a.nr_seq_grupo_mat,
	a.ie_tipo_guia,
	a.nr_seq_prestador;
		
C04 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_cbo_saude_conv,
		a.nr_seq_grupo_proc,
		a.nr_seq_grupo_prest
	from	pls_monitor_tiss_conv_cbo a
	where	a.nr_sequencia	= nr_sequencia_regra_conta_w
	and 	dt_atendimento_referencia_w between a.dt_vigencia and coalesce(a.dt_fim_vigencia,dt_atendimento_referencia_w)
	and	((a.nr_seq_grupo_proc IS NOT NULL AND a.nr_seq_grupo_proc::text <> '') 		or 	(a.cd_procedimento = cd_procedimento_w AND ie_origem_proced = ie_origem_proced_w))
	order by coalesce(a.cd_procedimento,'0') desc,
		coalesce(a.nr_seq_material,'0') desc,
		coalesce(a.nr_seq_grupo_proc,'0') desc;

C05 CURSOR FOR		
	SELECT	a.nr_sequencia,
		a.nr_seq_cbo_saude_conv,
		a.nr_seq_grupo_prest
	from	pls_monitor_tiss_conv_cbo a
	where	a.nr_sequencia	= nr_sequencia_regra_conta_w
	and	dt_atendimento_referencia_w between a.dt_vigencia and coalesce(a.dt_fim_vigencia,dt_atendimento_referencia_w)	
	and	((coalesce(a.ie_tipo_guia::text, '') = '') 	or (a.ie_tipo_guia = ie_tipo_guia_w))
	and	((coalesce(a.nr_seq_prestador::text, '') = '') 	or (a.nr_seq_prestador = nr_seq_prestador_exec_w))	
	and	coalesce(a.cd_procedimento::text, '') = ''
	and	coalesce(a.nr_seq_material::text, '') = ''
	and 	coalesce(a.nr_seq_grupo_mat::text, '') = ''
	and	coalesce(a.nr_seq_grupo_proc::text, '') = ''
	and 	((coalesce(a.nr_seq_cbo_saude_origem::text, '') = '') 	or (a.nr_seq_cbo_saude_origem = nr_seq_cbo_saude_w))
	order by coalesce(a.ie_tipo_guia,'O'),
		coalesce(a.nr_seq_prestador,0) desc;

C06 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_cbo_saude_conv,
		a.nr_seq_grupo_prest,
		a.nr_seq_grupo_mat
	from	pls_monitor_tiss_conv_cbo a
	where	a.nr_sequencia	= nr_sequencia_regra_conta_w
	and 	dt_atendimento_referencia_w between a.dt_vigencia and coalesce(a.dt_fim_vigencia,dt_atendimento_referencia_w)
	and	((a.nr_seq_grupo_mat IS NOT NULL AND a.nr_seq_grupo_mat::text <> '') 		or (a.nr_seq_material = nr_seq_material_w))
	order by coalesce(a.nr_seq_material,'0') desc,
		coalesce(a.nr_seq_grupo_proc,'0') desc;
		

BEGIN

select	max(cd_versao_tiss)
into STRICT	cd_versao_tiss_w
from	pls_monitor_tiss_lote
where	nr_sequencia = nr_seq_lote_p;

select	coalesce(max(ie_cbo_prest_executor),'N') ie_cbo_prest_executor
into STRICT	ie_cbo_prest_executor_w
from 	pls_monitor_tiss_param
where	cd_estabelecimento = cd_estabelecimento_p;

open C00;
loop
fetch C00 into
nr_seq_conta_w,
ie_tipo_guia_w,
nr_seq_cbo_saude_w,
dt_atendimento_referencia_w,
nr_seq_prestador_exec_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	
	cd_conversao_cbo_w 	:= null;
	nr_seq_cbo_saude_conv_w	:= null;
	nr_seq_regra_w		:= null;
	cb_cbo_conta_ant_w	:= null;
	
	select coalesce(max(a.cd_cbo_executante),null)
	into STRICT 	cb_cbo_conta_ant_w
	from 	pls_monitor_tiss_cta_val a,
		pls_monitor_tiss_alt b
	where 	a.nr_seq_conta = b.nr_seq_conta
	and	a.nr_seq_conta = nr_seq_conta_w
	and	b.ie_status 	= 'A'
	and 	nr_seq_lote_monitor <> nr_seq_lote_p;
	
	if (cb_cbo_conta_ant_w IS NOT NULL AND cb_cbo_conta_ant_w::text <> '') then
	
	cd_conversao_cbo_w := 'CA';
	
	elsif (coalesce(cb_cbo_conta_ant_w::text, '') = '') then
	
		open C03;
		loop
		fetch C03 into
			nr_sequencia_regra_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
		
			open C01;
			loop
			fetch C01 into
				cd_procedimento_w,
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				
					open C04;
					loop
					fetch C04 into
						nr_sequencia_regra_conv_w,
						nr_seq_cbo_saude_conv_w,
						nr_seq_grupo_proc_w,
						nr_seq_grupo_prest_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin

							if (nr_seq_grupo_proc_w IS NOT NULL AND nr_seq_grupo_proc_w::text <> '') then
								ie_grupo_serv_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_proc_w, cd_procedimento_w, ie_origem_proced_w);
							end if;

							if (nr_seq_grupo_prest_w IS NOT NULL AND nr_seq_grupo_prest_w::text <> '') then
								ie_grupo_prestador_w := pls_se_grupo_preco_prestador(nr_seq_grupo_prest_w, nr_seq_prestador_exec_w, null);
							end if;
								
							if	(((coalesce(ie_grupo_serv_w,'N') = 'S') or (coalesce(nr_seq_grupo_proc_w::text, '') = '')) and
								((coalesce(ie_grupo_prestador_w,'N') = 'S') or (coalesce(nr_seq_grupo_prest_w::text, '') = '')) and
								(nr_seq_conta_ant_w = nr_seq_conta_w AND cd_conversao_cbo_w = 'RP')) then						
								cd_conversao_cbo_w	:= 'GI';
								nr_seq_regra_w		:= null;
							end if;

							if	(((coalesce(ie_grupo_serv_w,'N') = 'S') or (coalesce(nr_seq_grupo_proc_w::text, '') = '')) and
								((coalesce(ie_grupo_prestador_w,'N') = 'S') or (coalesce(nr_seq_grupo_prest_w::text, '') = '')) and (coalesce(cd_conversao_cbo_w, 'N') = 'N'))	then
								nr_seq_regra_w			:= nr_sequencia_regra_conv_w;
								nr_seq_cbo_saude_conv_regra_w	:= nr_seq_cbo_saude_conv_w;
								nr_seq_conta_ant_w 		:= nr_seq_conta_w;
								cd_conversao_cbo_w		:= 'RP';
							end if;
						end;
						end loop;
					close C04;			
				end;
			end loop;
			close C01;	

			if (coalesce(cd_conversao_cbo_w,'N') <> 'GI') then
			
				open C02;
				loop
				fetch C02 into
					nr_seq_material_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
						open C06;
						loop
						fetch C06 into
							nr_sequencia_regra_conv_w,
							nr_seq_cbo_saude_conv_w,
							nr_seq_grupo_prest_w,
							nr_seq_grupo_mat_w;
						EXIT WHEN NOT FOUND; /* apply on C06 */
							begin
												
							if (nr_seq_grupo_prest_w IS NOT NULL AND nr_seq_grupo_prest_w::text <> '') then
								ie_grupo_prestador_w := pls_se_grupo_preco_prestador(nr_seq_grupo_prest_w, nr_seq_prestador_exec_w, null);
							end if;
							
							if (nr_seq_grupo_mat_w IS NOT NULL AND nr_seq_grupo_mat_w::text <> '') then
								ie_grupo_mat_w := pls_se_grupo_preco_material(nr_seq_grupo_mat_w, nr_seq_material_w);
							end if;	
							
							if	(((coalesce(ie_grupo_mat_w,'N') = 'S') or (coalesce(nr_seq_grupo_mat_w::text, '') = '')) and
								((coalesce(ie_grupo_prestador_w,'N') = 'S') or (coalesce(nr_seq_grupo_prest_w::text, '') = '')) and
								((nr_seq_conta_ant_w = nr_seq_conta_w) and ((cd_conversao_cbo_w = 'RP') or (cd_conversao_cbo_w = 'RM')))) then							
								cd_conversao_cbo_w	:= 'GI';
								nr_seq_regra_w		:= null;
							end if;			
							
							if	(((coalesce(ie_grupo_mat_w,'N') = 'S') or (coalesce(nr_seq_grupo_mat_w::text, '') = '')) and
								((coalesce(ie_grupo_prestador_w,'N') = 'S') or (coalesce(nr_seq_grupo_prest_w::text, '') = '')) and (coalesce(cd_conversao_cbo_w, 'N') = 'N'))	then
								nr_seq_regra_w			:= nr_sequencia_regra_conv_w;
								nr_seq_cbo_saude_conv_regra_w	:= nr_seq_cbo_saude_conv_w;
								nr_seq_conta_ant_w 		:= nr_seq_conta_w;
								cd_conversao_cbo_w		:= 'RM';
							end if;				
						end;
						end loop;
						close C06;
					end;
				end loop;
				close C02;		
			end if;	

			if (((coalesce(cd_conversao_cbo_w,'N') = 'N') or (cd_conversao_cbo_w = 'RC')) and (coalesce(cd_conversao_cbo_w,'N') <> 'GI'))  then
					
				open C05;
				loop
				fetch C05 into
					nr_sequencia_regra_conv_w,
					nr_seq_cbo_saude_conv_w,
					nr_seq_grupo_prest_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin
						if (nr_seq_grupo_prest_w IS NOT NULL AND nr_seq_grupo_prest_w::text <> '') then
							ie_grupo_prestador_w := pls_se_grupo_preco_prestador(nr_seq_grupo_prest_w, nr_seq_prestador_exec_w, null);
						end if;

						if	(((coalesce(ie_grupo_prestador_w,'N') = 'S') or (coalesce(nr_seq_grupo_prest_w::text, '') = '')) and
							(nr_seq_conta_ant_w = nr_seq_conta_w AND cd_conversao_cbo_w = 'RC'))	then							
							cd_conversao_cbo_w	:= 'GI';
							nr_seq_regra_w		:= null;
						end if;	

						if	(((coalesce(ie_grupo_prestador_w,'N') = 'S') or (coalesce(nr_seq_grupo_prest_w::text, '') = '')) and (coalesce(cd_conversao_cbo_w, 'N') = 'N'))	then
							nr_seq_regra_w			:= nr_sequencia_regra_conv_w;
							nr_seq_cbo_saude_conv_regra_w	:= nr_seq_cbo_saude_conv_w;
							nr_seq_conta_ant_w 		:= nr_seq_conta_w;
							cd_conversao_cbo_w		:= 'RC';
						end if;			
					end;
				end loop;
				close C05;		
			end if;		
		end;
		end loop;
		close C03;
	end if;

	if ((nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') and ((cd_conversao_cbo_w = 'RP') or (cd_conversao_cbo_w = 'RM') or (cd_conversao_cbo_w = 'RC')) ) then

		update 	pls_monitor_tiss_cta_val
		set	cd_cbo_executante 	=  substr(obter_codigo_cbo_saude(nr_seq_cbo_saude_conv_regra_w),1,15),
			nr_seq_regra_conv_cbo 	= nr_seq_regra_w,
			cd_conversao_cbo	= cd_conversao_cbo_w
		where 	nr_seq_conta 		= nr_seq_conta_w
		and	nr_seq_lote_monitor 	= nr_seq_lote_p;
	
	elsif ((coalesce(nr_seq_regra_w::text, '') = '') or (cd_conversao_cbo_w = 'GI') or (cd_conversao_cbo_w = 'CA')) then

		select	max(a.nr_seq_cbo_saude),
		max( 	select 	pp.nr_seq_cbo_saude
			from	pls_prestador p,
				pessoa_fisica pp
			where	p.nr_sequencia = a.nr_seq_prestador_exec
			and	pp.cd_pessoa_fisica = p.cd_pessoa_fisica) nr_seq_cbo_pf,
		max(ie_tipo_guia),
		max(nr_seq_nota_cobranca),
		max(nr_seq_prest_inter),
		max(CASE WHEN a.ie_tipo_guia='4' THEN  pls_gerencia_envio_ans_pck.obter_informacao_alter_varchar(a.nr_sequencia, 'TA', pls_obter_cd_tiss_atendimento(a.nr_seq_tipo_atendimento))  ELSE '' END ) ie_tipo_atendimento,
		max(a.nr_seq_prestador_exec),
		max(a.dt_atendimento_referencia)
		into STRICT	nr_seq_cbo_saude_w,
			nr_seq_cbo_pf_w,
			ie_tipo_guia_w,
			nr_seq_nota_cobranca_w,
			nr_seq_prest_inter_w,
			ie_tipo_atendimento_w,
			nr_seq_prestador_exec_w,
			dt_atendimento_referencia_w
		from	pls_conta	a
		where	nr_sequencia	= nr_seq_conta_w;
		
		nr_versao_ptu_w := ptu_obter_versao_dominio('A500', pls_obter_interf_ptu(cd_estabelecimento_p, null, clock_timestamp(), 'A500'));
		
		-- Obter o cdigo CBO do executante, somente para guias de Consuta
		if (ie_tipo_guia_w = '3' ) or
			(ie_tipo_guia_w = '4' AND ie_tipo_atendimento_w = '04') then
			-- Tratamento do A500
			if (nr_seq_nota_cobranca_w IS NOT NULL AND nr_seq_nota_cobranca_w::text <> '') then

				select	max(nr_cbo_exec)
				into STRICT	nr_cbo_req_w
				from	ptu_nota_servico
				where	nr_seq_nota_cobr	= nr_seq_nota_cobranca_w
				and	ie_tipo_tabela		= '0'
				and	nr_cbo_exec		!= '999999';

				if (coalesce(nr_cbo_req_w,0) = 0) then
					select	max(nr_cbo_exec)
					into STRICT	nr_cbo_req_w
					from	ptu_nota_servico
					where	nr_seq_nota_cobr	= nr_seq_nota_cobranca_w
					and	ie_tipo_tabela		= '0';

					if (coalesce(nr_cbo_req_w,0) = 0) then
						select	max(nr_cbo_exec)
						into STRICT	nr_cbo_req_w
						from	ptu_nota_servico
						where	nr_seq_nota_cobr	= nr_seq_nota_cobranca_w;

						if (coalesce(nr_cbo_req_w,0) = 0) then
							select	max(nr_cbo_req)
							into STRICT	nr_cbo_req_w
							from	ptu_nota_cobranca
							where	nr_sequencia	= nr_seq_nota_cobranca_w;
						end if;
					end if;
				end if;

				if (coalesce(nr_cbo_req_w, 0) > 0) then
					if (nr_versao_ptu_w IS NOT NULL AND nr_versao_ptu_w::text <> '') then
						select	max(b.cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude_ptu	a,
							cbo_saude	b
						where	a.nr_seq_cbo_saude	= b.nr_sequencia
						and	a.cd_cbo_ptu		= to_char(nr_cbo_req_w)
						and	a.nr_versao_ptu		= nr_versao_ptu_w;
					end if;

					if (coalesce(cd_cbo_executante_w::text, '') = '') then
						select	max(cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude
						where	cd_cbo_ptu	= to_char(nr_cbo_req_w)
						and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
					end if;
				end if;

				--Seno achar o CBO no A500, busca o CBO pela especialidade
				if (coalesce(cd_cbo_executante_w::text, '') = '') then
					select	max(cd_especialidade)
					into STRICT	cd_especialidade_w
					from	ptu_nota_servico
					where	nr_seq_nota_cobr	= nr_seq_nota_cobranca_w;

					if (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> '') then
						select	max(cd_especialidade)
						into STRICT	nr_seq_especialidade_w
						from	especialidade_medica
						where	cd_ptu	= cd_especialidade_w;

						if (nr_seq_especialidade_w IS NOT NULL AND nr_seq_especialidade_w::text <> '') then
							select 	max(nr_seq_cbo_saude)
							into STRICT	nr_seq_cbo_saude_w
							from	tiss_cbo_saude
							where	cd_especialidade	= nr_seq_especialidade_w
							and	ie_versao		= cd_versao_tiss_w;

							if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
								select	max(cd_cbo)
								into STRICT	cd_cbo_executante_w
								from	cbo_saude
								where	nr_sequencia	= nr_seq_cbo_saude_w;
							end if;
						end if;
					end if;
				end if;

				if	((coalesce(nr_seq_cbo_saude_w::text, '') = '') and (coalesce(cd_cbo_executante_w::text, '') = '' )) or (cd_cbo_executante_w = '999999') then
					select	max(nr_seq_cbo_saude)
					into STRICT	nr_seq_cbo_saude_w
					from	pls_prestador_intercambio
					where	nr_sequencia = nr_seq_prest_inter_w;

					if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
						select	max(a.cd_cbo)
						into STRICT	cd_cbo_executante_w
						from	cbo_saude a,
							cbo_saude_tiss b
						where	a.nr_sequencia 	= b.nr_seq_cbo_saude
						and	a.nr_sequencia 	= nr_seq_cbo_saude_w
						and	b.ie_versao 	= cd_versao_tiss_w;

						if (coalesce(cd_cbo_executante_w::text, '') = '') then
							select	max(a.cd_cbo)
							into STRICT	cd_cbo_executante_w
							from	cbo_saude a
							where	a.nr_sequencia = nr_seq_cbo_saude_w;
						end if;
					end if;
				end if;

			elsif (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '') then
				select 	max(a.cd_cbo)
				into STRICT	cd_cbo_executante_w
				from	cbo_saude a,
					cbo_saude_tiss b
				where	b.nr_seq_cbo_saude 	= a.nr_sequencia
				and	a.nr_sequencia 		= nr_seq_cbo_saude_w
				and (coalesce(b.ie_versao::text, '') = '' or b.ie_versao = cd_versao_tiss_w);

			elsif (ie_tipo_guia_w = '4') and (ie_tipo_atendimento_w = '04') and (coalesce(nr_seq_cbo_saude_w::text, '') = '') then

				select	max(nr_seq_cbo_saude)
				into STRICT	nr_seq_cbo_partic_w
				from	pls_proc_participante a,
					pls_conta_proc b
				where	b.nr_sequencia = a.nr_seq_conta_proc
				and	b.nr_seq_conta = nr_seq_conta_w;

				if (nr_seq_cbo_partic_w IS NOT NULL AND nr_seq_cbo_partic_w::text <> '') then
					select 	max(a.cd_cbo)
					into STRICT	cd_cbo_executante_w
					from	cbo_saude a,
						cbo_saude_tiss b
					where	b.nr_seq_cbo_saude 	= a.nr_sequencia
					and	a.nr_sequencia 		= nr_seq_cbo_partic_w
					and (coalesce(b.ie_versao::text, '') = '' or b.ie_versao = cd_versao_tiss_w);
				end if;
			end if;
		end if;	

		if ( coalesce(cd_cbo_executante_w::text, '') = '' and ie_cbo_prest_executor_w = 'S') then
		
			select 	max(a.cd_cbo)
			into STRICT	cd_cbo_executante_w
			from	cbo_saude a
			where	a.nr_sequencia 	= nr_seq_cbo_pf_w;
			
			update 	pls_monitor_tiss_cta_val
			set	cd_cbo_executante = cd_cbo_executante_w,
				cd_conversao_cbo = cd_conversao_cbo_w
			where 	nr_seq_conta = nr_seq_conta_w
			and	nr_seq_lote_monitor = nr_seq_lote_p;
			
		elsif ((cd_conversao_cbo_w = 'GI') or (cd_conversao_cbo_w = 'CA')) then
		
			update 	pls_monitor_tiss_cta_val
			set	cd_conversao_cbo = cd_conversao_cbo_w
			where 	nr_seq_conta = nr_seq_conta_w
			and	nr_seq_lote_monitor = nr_seq_lote_p;
		end if;		
	end if;
end;
end loop;
close C00;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_envio_ans_extra_pck.pls_converter_cbo_tiss (nr_seq_lote_p pls_monitor_tiss_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
