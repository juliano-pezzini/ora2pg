-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_obj_plussoft_pck.incluir_excluir_benef_proposta ( nr_seq_proposta_p bigint, cd_pessoa_fisica_p text, nr_seq_parentesco_p bigint, nr_seq_regra_carencia_p bigint, ie_nascido_plano_p text, ie_acao_p text, cd_pessoa_usuario_p text, nr_seq_lista_sca_p text, ds_mensagem_erro_p INOUT text) AS $body$
DECLARE

/*
ie_acao_p:
'E' - Excluir
'A' - Alterar
'I' - incluir
*/
nr_seq_parentesco_w		pls_proposta_beneficiario.nr_seq_parentesco%type;
ie_nascido_plano_w		pls_proposta_beneficiario.ie_nascido_plano%type;
nr_seq_pessoa_proposta_w	pls_proposta_beneficiario.nr_sequencia%type;
current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type			usuario.nm_usuario%type;
ie_status_w			pls_proposta_adesao.ie_status%type;
ie_tipo_proposta_w		pls_proposta_adesao.ie_tipo_proposta%type;
nr_seq_titular_contrato_w	pls_segurado.nr_sequencia%type;
nr_seq_titular_w		pls_proposta_beneficiario.nr_sequencia%type;
nr_seq_plano_w			pls_proposta_plano.nr_seq_plano%type;
nr_seq_tabela_w			pls_proposta_plano.nr_seq_tabela%type;
nr_seq_pagador_w		pls_proposta_pagador.nr_sequencia%type;
dt_inicio_proposta_w		pls_proposta_adesao.dt_inicio_proposta%type;
qt_registro_w			bigint;
nr_seq_tab_sca_w		bigint;
current_setting('pls_obj_plussoft_pck.nr_seq_proposta_benef_w')::pls_proposta_beneficiario.nr_sequencia%type		bigint;

C01 CURSOR FOR
	SELECT	b.nr_seq_tipo_carencia,
		b.nr_seq_grupo_carencia,
		b.qt_dias_padrao
	from 	pls_regra_carencia a,
		pls_regra_carencia_padrao b
	where 	a.nr_sequencia = b.nr_seq_regra
	and 	a.nr_sequencia = nr_seq_regra_carencia_p
	and 	a.ie_situacao = 'A'
	order by 1;

current_setting('pls_obj_plussoft_pck.c02')::CURSOR CURSOR FOR
	SELECT 	nr_sequencia
	from	pls_proposta_beneficiario
	where 	nr_seq_proposta = nr_seq_proposta_p
	and 	cd_beneficiario = cd_pessoa_fisica_p
	order by 1;
	
C03 CURSOR(	nr_seq_lista_sca_pc	bigint) FOR
	SELECT	nr_sequencia,
		nr_item,
		nr_seq_plano_sca,
		nr_seq_tabela_sca
	from	w_plussoft_plano_proposta
	where	nr_sequencia = nr_seq_lista_sca_pc
	order by nr_item asc;
BEGIN
begin
select	max(nm_usuario)
into STRICT	current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type
from	usuario
where	cd_pessoa_fisica = cd_pessoa_usuario_p
and	ie_situacao = 'A';
exception
when others then
	PERFORM set_config('pls_obj_plussoft_pck.nm_usuario_w', null, false);
end;

if (coalesce(nr_seq_proposta_p::text, '') = '') then
	ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110437) ,1,255);
end if;

if (coalesce(cd_pessoa_fisica_p::text, '') = '') and (coalesce(ds_mensagem_erro_p::text, '') = '') then
	ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110438) ,1,255);
end if;

select	max(a.ie_status)
into STRICT	ie_status_w
from 	pls_proposta_adesao a
where 	nr_sequencia = nr_seq_proposta_p;

if not(ie_status_w in ('M','C','N','E','R','U')) then
	ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110439) ,1,255);
end if;

if (coalesce(ds_mensagem_erro_p::text, '') = '') then
	--'E' - Excluir
	if (ie_acao_p = 'E') then
		for r_C02_w in current_setting('pls_obj_plussoft_pck.c02')::loop CURSOR
			delete 	from 	pls_carencia
			where 	nr_seq_pessoa_proposta = r_C02_w.nr_sequencia;
			
			delete 	from 	pls_indicacao_venda
			where 	nr_seq_segurado_prop = r_C02_w.nr_sequencia;

			delete 	from 	pls_sca_vinculo
			where 	nr_seq_benef_proposta = r_C02_w.nr_sequencia;
			
		end loop;
		
		begin
			delete	from	pls_proposta_beneficiario
			where 	nr_seq_proposta = nr_seq_proposta_p
			and 	cd_beneficiario = cd_pessoa_fisica_p;
		exception
		when others then
			ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110440) || ' ' || sqlerrm(SQLSTATE) ,1,255);
		end;

	--'A' - Alterar
	elsif (ie_acao_p = 'A') then
		select	max(a.nr_seq_parentesco),
			max(a.ie_nascido_plano),
			max(a.nr_sequencia)
		into STRICT	nr_seq_parentesco_w,
			ie_nascido_plano_w,
			nr_seq_pessoa_proposta_w
		from	pls_proposta_beneficiario a
		where 	a.nr_seq_proposta = nr_seq_proposta_p
		and 	a.cd_beneficiario = cd_pessoa_fisica_p;
		
		if (nr_seq_parentesco_p IS NOT NULL AND nr_seq_parentesco_p::text <> '') and (nr_seq_parentesco_p <> nr_seq_parentesco_w) then
			begin
				update	pls_proposta_beneficiario
				set	nr_seq_parentesco = nr_seq_parentesco_p,
					dt_atualizacao = clock_timestamp(),
					nm_usuario = current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type
				where 	nr_sequencia = nr_seq_pessoa_proposta_w;
			exception
			when others then
				ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110441) || ' ' || sqlerrm(SQLSTATE) ,1,255);
			end;
		end if;
		
		if (ie_nascido_plano_p IS NOT NULL AND ie_nascido_plano_p::text <> '') and (ie_nascido_plano_p <> ie_nascido_plano_w) then
			begin
				update	pls_proposta_beneficiario
				set	ie_nascido_plano = ie_nascido_plano_p,
					dt_atualizacao = clock_timestamp(),
					nm_usuario = current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type
				where 	nr_sequencia = nr_seq_pessoa_proposta_w;
			exception
			when others then
				ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110441) || ' ' || sqlerrm(SQLSTATE) ,1,255);
			end;
		end if;
	
		if (coalesce(ds_mensagem_erro_p::text, '') = '') then
			begin
				delete	from	pls_carencia
				where 	nr_seq_pessoa_proposta = nr_seq_pessoa_proposta_w				
				and 	(nr_seq_regra_padrao IS NOT NULL AND nr_seq_regra_padrao::text <> '');
			exception
			when others then
				ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110442) || ' ' || sqlerrm(SQLSTATE) ,1,255);
			end;
			
			if	(nr_seq_regra_carencia_p IS NOT NULL AND nr_seq_regra_carencia_p::text <> '' AND nr_seq_pessoa_proposta_w IS NOT NULL AND nr_seq_pessoa_proposta_w::text <> '') then
				CALL pls_inserir_carencia_regra(nr_seq_pessoa_proposta_w, null, null, null, nr_seq_regra_carencia_p, current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type);
			end if;
		end if;
	--'I' - incluir
	elsif (ie_acao_p = 'I') then
		select	max(a.ie_tipo_proposta),
			max(dt_inicio_proposta)
		into STRICT	ie_tipo_proposta_w,
			dt_inicio_proposta_w
		from 	pls_proposta_adesao a
		where 	nr_sequencia = nr_seq_proposta_p;
		
		if (ie_tipo_proposta_w = 1) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_titular_w
			from 	pls_proposta_beneficiario
			where 	nr_seq_proposta = nr_seq_proposta_p
			and 	coalesce(nr_seq_titular::text, '') = '';
			
			nr_seq_titular_contrato_w := null;
			
		elsif (ie_tipo_proposta_w = 2) then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_titular_contrato_w
			from   	pls_proposta_adesao a,
				pls_segurado b
			where 	a.nr_sequencia = nr_seq_proposta_p
			and 	a.nr_seq_contrato = b.nr_seq_contrato
			and 	coalesce(b.nr_seq_titular::text, '') = ''
			and (coalesce(b.dt_rescisao::text, '') = '' or b.dt_rescisao > clock_timestamp());
			
			nr_seq_titular_w := null;
			
		end if;
		
		select	max(nr_seq_plano),
			max(nr_seq_tabela)
		into STRICT	nr_seq_plano_w,
			nr_seq_tabela_w
		from 	pls_proposta_plano
		where 	nr_seq_proposta = nr_seq_proposta_p;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_pagador_w
		from 	pls_proposta_pagador
		where 	nr_seq_proposta = nr_seq_proposta_p;
		
		select	nextval('pls_proposta_beneficiario_seq')
		into STRICT	current_setting('pls_obj_plussoft_pck.nr_seq_proposta_benef_w')::pls_proposta_beneficiario.nr_sequencia%type
		;
		
		begin
			insert into pls_proposta_beneficiario(
						nr_sequencia,
						nr_seq_proposta,
						cd_beneficiario,
						nr_seq_pagador,
						nr_seq_plano,
						nr_seq_tabela,
						ie_nascido_plano,
						nr_seq_parentesco,
						nr_seq_titular,
						nr_seq_titular_contrato,
						ie_taxa_inscricao,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
			values (			current_setting('pls_obj_plussoft_pck.nr_seq_proposta_benef_w')::pls_proposta_beneficiario.nr_sequencia%type,
						nr_seq_proposta_p,
						cd_pessoa_fisica_p,
						nr_seq_pagador_w,
						nr_seq_plano_w,
						nr_seq_tabela_w,
						ie_nascido_plano_p,
						nr_seq_parentesco_p,
						nr_seq_titular_w,
						nr_seq_titular_contrato_w,
						'S',
						clock_timestamp(),
						current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
						clock_timestamp(),
						current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type);
		
		exception
		when others then
			ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110443) || ' ' || sqlerrm(SQLSTATE), 1, 255);
		end;

		--Gerar SCA por beneficiario da proposta
		for r_c03_w in C03(nr_seq_lista_sca_p) loop
			--Busca tabela de preco padrao da regra de simulador de preco cadastrada para o produto/sca
			begin
			select	max(nr_seq_tabela)
			into STRICT	nr_seq_tab_sca_w
			from	pls_regra_simulador_web
			where	nr_seq_plano = r_c03_w.nr_seq_plano_sca
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	clock_timestamp() between pls_util_pck.obter_dt_vigencia_null(dt_inicio_vigencia,'I') and pls_util_pck.obter_dt_vigencia_null(dt_fim_vigencia,'F');
			exception
			when others then
				nr_seq_tab_sca_w := null;
			end;
			
			insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_benef_proposta, nr_seq_plano, nr_seq_tabela, nr_seq_vendedor_canal, nr_seq_vendedor_pf,
					dt_inicio_vigencia)
			values (	nextval('pls_sca_vinculo_seq'), clock_timestamp(), current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type, clock_timestamp(), current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
					current_setting('pls_obj_plussoft_pck.nr_seq_proposta_benef_w')::pls_proposta_beneficiario.nr_sequencia%type, r_c03_w.nr_seq_plano_sca, coalesce(r_c03_w.nr_seq_tabela_sca, nr_seq_tab_sca_w), null, null,
					dt_inicio_proposta_w);
		end loop;--C03
		
		if	((nr_seq_regra_carencia_p IS NOT NULL AND nr_seq_regra_carencia_p::text <> '') and (current_setting('pls_obj_plussoft_pck.nr_seq_proposta_benef_w')::pls_proposta_beneficiario.nr_sequencia%(type IS NOT NULL AND type::text <> ''))) then
			CALL pls_inserir_carencia_regra(current_setting('pls_obj_plussoft_pck.nr_seq_proposta_benef_w')::pls_proposta_beneficiario.nr_sequencia%type, null, null, null, nr_seq_regra_carencia_p, current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type);
		end if;
	end if;

	if (coalesce(ds_mensagem_erro_p::text, '') = '') then
		commit;
	else
		rollback;
	end if;
end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obj_plussoft_pck.incluir_excluir_benef_proposta ( nr_seq_proposta_p bigint, cd_pessoa_fisica_p text, nr_seq_parentesco_p bigint, nr_seq_regra_carencia_p bigint, ie_nascido_plano_p text, ie_acao_p text, cd_pessoa_usuario_p text, nr_seq_lista_sca_p text, ds_mensagem_erro_p INOUT text) FROM PUBLIC;
