-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--Obter tabelas de preco para SCA
CREATE OR REPLACE FUNCTION pls_obj_plussoft_pck.obter_tabela_preco_sca ( nr_seq_plano_p pls_plano.nr_sequencia%type, nr_contrato_p pls_contrato.nr_contrato%type) RETURNS SETOF T_TABELA_PRECO_SCA_DATA AS $body$
DECLARE

			
linha_w			t_tabela_preco_sca_row;
vl_preco_w		pls_plano_preco.vl_preco_atual%type;

--Carrega tabela de preco do SCA
current_setting('pls_obj_plussoft_pck.c01')::CURSOR CURSOR(	nr_seq_plano_pc		pls_plano.nr_sequencia%type) FOR
	SELECT	b.nr_seq_plano,
		b.nr_sequencia nr_seq_tabela,
		null nr_seq_contrato,
		null nr_contrato
	from 	pls_plano a,
		pls_tabela_preco b
	where 	nr_seq_plano = nr_seq_plano_pc
	and 	a.nr_sequencia = b.nr_seq_plano
	and 	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and 	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia > clock_timestamp()))
	and 	coalesce(nr_segurado::text, '') = ''
	and 	coalesce(nr_contrato::text, '') = ''
	and 	a.ie_tipo_operacao = 'A'
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

--Verifica segurados vinculados ao contrato
current_setting('pls_obj_plussoft_pck.c02')::CURSOR CURSOR(	nr_contrato_pc		pls_contrato.nr_contrato%type) FOR
	SELECT 	a.nr_seq_plano,
		a.nr_seq_tabela,
		a.nr_seq_contrato,
		b.nr_contrato
	from 	pls_sca_regra_contrato a,
		pls_contrato b
	where 	a.nr_seq_contrato = b.nr_sequencia
	and (coalesce(nr_seq_plano_p::text, '') = ''
	or 	a.nr_seq_plano = nr_seq_plano_p)
	and	b.nr_contrato = nr_contrato_pc;
BEGIN
--Verifica se tem Numero de contrato
if (nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '') then
	begin
	--verifica segurados vinculados ao contrato
	for r_C02_w in current_setting('pls_obj_plussoft_pck.c02')::CURSOR(nr_contrato_p) loop
		select	max(vl_preco_atual)
		into STRICT	vl_preco_w
		from 	pls_plano_preco
		where 	nr_seq_tabela = r_C02_w.nr_seq_tabela;
		
		linha_w.nr_seq_plano	 := r_C02_w.nr_seq_plano;
		linha_w.nr_seq_tabela	 := r_C02_w.nr_seq_tabela;
		linha_w.nr_seq_contrato	 := r_C02_w.nr_seq_contrato;
		linha_w.nr_contrato	 := r_C02_w.nr_contrato;
		linha_w.vl_preco_atual	 := vl_preco_w;
			
		RETURN NEXT linha_w;
	end loop;
	
	exception
	when others then
		linha_w.ds_mensagem := substr(wheb_mensagem_pck.get_texto(1110367, 'NR_CONTRATO='||nr_contrato_p||';DS_ERRO='||sqlerrm(SQLSTATE)) ,1,255);
		RETURN NEXT linha_w;
	end;
--Caso contrario eh obrigado informar o sequencial do SCA
elsif (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
	begin
	--verifica as tabelas de preco para o SCA
	for r_C01_w in current_setting('pls_obj_plussoft_pck.c01')::CURSOR(nr_seq_plano_p) loop
		select	max(vl_preco_atual)
		into STRICT	vl_preco_w
		from 	pls_plano_preco
		where 	nr_seq_tabela = r_C01_w.nr_seq_tabela;
		
		linha_w.nr_seq_plano	 := r_C01_w.nr_seq_plano;
		linha_w.nr_seq_tabela	 := r_C01_w.nr_seq_tabela;
		linha_w.nr_seq_contrato	 := r_C01_w.nr_seq_contrato;
		linha_w.nr_contrato	 := r_C01_w.nr_contrato;
		linha_w.vl_preco_atual	 := vl_preco_w;
			
		RETURN NEXT linha_w;
	end loop;
	exception
	when others then
		linha_w.ds_mensagem := substr(wheb_mensagem_pck.get_texto(1110368) || ' ' || sqlerrm(SQLSTATE) ,1,255);
		RETURN NEXT linha_w;
	end;
--Caso contrario apenas apesenta uma linha com erro
else
	linha_w.ds_mensagem := wheb_mensagem_pck.get_texto(1110558);
	RETURN NEXT linha_w;
end if;
--nao retorna nada
return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obj_plussoft_pck.obter_tabela_preco_sca ( nr_seq_plano_p pls_plano.nr_sequencia%type, nr_contrato_p pls_contrato.nr_contrato%type) FROM PUBLIC;
