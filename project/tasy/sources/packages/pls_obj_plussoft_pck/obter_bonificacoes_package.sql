-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_obj_plussoft_pck.obter_bonificacoes ( nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, nm_bonificacao_p pls_bonificacao.nm_bonificacao%type, cd_pessoa_fisica_p text) RETURNS SETOF T_TABELA_BONIFICACAO_DATA AS $body$
DECLARE

				
linha_w		t_tabela_bonificacao_row;
current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type	usuario.nm_usuario%type;

--Busca bonificacao
current_setting('pls_obj_plussoft_pck.c01')::CURSOR CURSOR(	nr_seq_bonificacao_pc	pls_bonificacao.nr_sequencia%type,
		nm_usuario_pc		text) FOR
	SELECT	b.nr_seq_bonificacao,
		a.nm_bonificacao,
		b.vl_bonificacao,
		b.tx_bonificacao,
		b.qt_idade_inicial,
		b.qt_idade_final,
		b.nr_parcela_inicial,
		b.nr_parcela_final
	from	pls_bonificacao 	a,
		pls_bonificacao_regra 	b
	where	a.nr_sequencia	= coalesce(nr_seq_bonificacao_pc,a.nr_sequencia)
	and	trunc(clock_timestamp(),'dd') between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp()),'dd') and trunc(coalesce(a.dt_fim_vigencia,clock_timestamp()),'dd')
	and	b.nr_seq_bonificacao = a.nr_sequencia
	and	exists (	SELECT	1
			from	pls_bonificacao_liberacao	x
			where	x.nr_seq_bonificacao = a.nr_sequencia
			and	trunc(clock_timestamp(),'dd') between trunc(coalesce(x.dt_inicio_vigencia,clock_timestamp()),'dd') and trunc(coalesce(x.dt_fim_vigencia,clock_timestamp()),'dd')
			and (x.nm_usuario_liberacao	= nm_usuario_pc or coalesce(x.nm_usuario_liberacao::text, '') = '')
			and (x.cd_perfil in (select	y.cd_perfil from usuario_perfil y where	y.nm_usuario = nm_usuario_pc) or coalesce(x.cd_perfil::text, '') = ''));
				
--Buscao bonificacao por nome
current_setting('pls_obj_plussoft_pck.c02')::CURSOR CURSOR(	nr_seq_bonificacao_pc	pls_bonificacao.nr_sequencia%type,
		nm_bonificacao_pc	pls_bonificacao.nm_bonificacao%type,
		nm_usuario_pc		text) FOR
	SELECT	b.nr_seq_bonificacao,
		a.nm_bonificacao,
		b.vl_bonificacao,
		b.tx_bonificacao,
		b.qt_idade_inicial,
		b.qt_idade_final,
		b.nr_parcela_inicial,
		b.nr_parcela_final
	from	pls_bonificacao 	a,
		pls_bonificacao_regra 	b
	where	a.nr_sequencia	= coalesce(nr_seq_bonificacao_pc,a.nr_sequencia)
	and	a.nm_bonificacao like '%' || nm_bonificacao_pc || '%'
	and	trunc(clock_timestamp(),'dd') between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp()),'dd') and trunc(coalesce(a.dt_fim_vigencia,clock_timestamp()),'dd')
	and	b.nr_seq_bonificacao = a.nr_sequencia
	and	exists (	SELECT	1
			from	pls_bonificacao_liberacao	x
			where	x.nr_seq_bonificacao = a.nr_sequencia
			and	trunc(clock_timestamp(),'dd') between trunc(coalesce(x.dt_inicio_vigencia,clock_timestamp()),'dd') and trunc(coalesce(x.dt_fim_vigencia,clock_timestamp()),'dd')
			and (x.nm_usuario_liberacao	= nm_usuario_pc or coalesce(x.nm_usuario_liberacao::text, '') = '')
			and (x.cd_perfil in (select	y.cd_perfil from usuario_perfil y where	y.nm_usuario = nm_usuario_pc) or coalesce(x.cd_perfil::text, '') = ''));
BEGIN

--Encontra o usuario
begin
select	max(nm_usuario)
into STRICT	current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type
from	usuario
where	cd_pessoa_fisica = cd_pessoa_fisica_p
and	ie_situacao = 'A';
exception
when others then
	PERFORM set_config('pls_obj_plussoft_pck.nm_usuario_w', null, false);
end;

--Caso tenha encontrado o usuario
if (current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%(type IS NOT NULL AND type::text <> '')) then
	--Verifica se foi filtrado por nome
	if (nm_bonificacao_p IS NOT NULL AND nm_bonificacao_p::text <> '') then
		--Busca bonificacao pelo nome
		for r_C02_w in current_setting('pls_obj_plussoft_pck.c02')::CURSOR(nr_seq_bonificacao_p,nm_bonificacao_p,current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type) loop
			linha_w.nr_seq_bonificacao	:= r_C02_w.nr_seq_bonificacao;
			linha_w.nm_bonificacao		:= r_C02_w.nm_bonificacao;
			linha_w.vl_bonificacao		:= r_C02_w.vl_bonificacao;
			linha_w.tx_bonificacao		:= r_C02_w.tx_bonificacao;
			linha_w.qt_idade_inicial	:= r_C02_w.qt_idade_inicial;
			linha_w.qt_idade_final		:= r_C02_w.qt_idade_final;
			linha_w.nr_parcela_inicial	:= r_C02_w.nr_parcela_inicial;
			linha_w.nr_parcela_final	:= r_C02_w.nr_parcela_final;

			RETURN NEXT linha_w;
		end loop;
	--caso contrario tenta encontrar pela sequencia ou traz todas
	else
		--Busca bonificacao pela sequencia ou traz todas
		for r_C01_w in current_setting('pls_obj_plussoft_pck.c01')::CURSOR(nr_seq_bonificacao_p,current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type) loop
			linha_w.nr_seq_bonificacao	:= r_C01_w.nr_seq_bonificacao;
			linha_w.nm_bonificacao		:= r_C01_w.nm_bonificacao;
			linha_w.vl_bonificacao		:= r_C01_w.vl_bonificacao;
			linha_w.tx_bonificacao		:= r_C01_w.tx_bonificacao;
			linha_w.qt_idade_inicial	:= r_C01_w.qt_idade_inicial;
			linha_w.qt_idade_final		:= r_C01_w.qt_idade_final;
			linha_w.nr_parcela_inicial	:= r_C01_w.nr_parcela_inicial;
			linha_w.nr_parcela_final	:= r_C01_w.nr_parcela_final;

			RETURN NEXT linha_w;
		end loop;
	end if;
end if;

--nao retorna nada
return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obj_plussoft_pck.obter_bonificacoes ( nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, nm_bonificacao_p pls_bonificacao.nm_bonificacao%type, cd_pessoa_fisica_p text) FROM PUBLIC;
