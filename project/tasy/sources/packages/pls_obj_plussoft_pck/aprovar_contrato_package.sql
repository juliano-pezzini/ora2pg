-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_obj_plussoft_pck.aprovar_contrato ( nr_contrato_p INOUT pls_contrato.nr_contrato%type, cd_moeda_p moeda.cd_moeda%type, qt_idade_limite_reaj_p bigint, qt_anos_limite_reaj_p bigint, cd_participacao_fin_p text, cd_pessoa_usuario_p pessoa_fisica.cd_pessoa_fisica%type, ds_retorno_p INOUT text, ds_mensagem_p INOUT text) AS $body$
DECLARE


current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint		pls_contrato.nr_sequencia%type;
current_setting('pls_obj_plussoft_pck.ds_erro_w')::varchar(255)			varchar(255);
ie_tipo_erro_w			varchar(255);
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_motivo_inclusao_w	pls_segurado.nr_seq_motivo_inclusao%type;
current_setting('pls_obj_plussoft_pck.cd_estabelecimento_w')::smallint		pls_segurado.cd_estabelecimento%type;
current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type			usuario.nm_usuario%type;

current_setting('pls_obj_plussoft_pck.c01')::CURSOR CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_motivo_inclusao,
		cd_estabelecimento
	from	pls_segurado
	where	nr_seq_contrato	= current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint
	order by nr_sequencia;

BEGIN
--Encontra o usuario
begin
select	max(nm_usuario)
into STRICT	current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type
from	usuario
where	cd_pessoa_fisica = cd_pessoa_usuario_p
and	ie_situacao = 'A';
exception
when others then
	PERFORM set_config('pls_obj_plussoft_pck.nm_usuario_w', null, false);
end;
--Tenta encontrar o contrato
begin
select	max(nr_sequencia)
into STRICT	current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint
from	pls_contrato
where	nr_contrato	= nr_contrato_p;

exception
when others then
	PERFORM set_config('pls_obj_plussoft_pck.nr_seq_contrato_w', null, false);
end;
--Caso tenha encontrado o contrato, aprova
if (current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::(bigint IS NOT NULL AND bigint::text <> '')) then
	begin
	--Idade limite
	if (qt_idade_limite_reaj_p IS NOT NULL AND qt_idade_limite_reaj_p::text <> '') then
		update	pls_contrato
		set	qt_idade_limite_reaj = qt_idade_limite_reaj_p,
			nm_usuario = current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia    = current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint;
	end if;
	--Anos limite
	if (qt_anos_limite_reaj_p IS NOT NULL AND qt_anos_limite_reaj_p::text <> '') then
		update	pls_contrato
		set	qt_anos_limite_reaj = qt_anos_limite_reaj_p,
			nm_usuario = current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia   	    = current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint;
	end if;
	--Participacao financeira
	if (cd_participacao_fin_p in ('C','N','S')) then
		update	pls_contrato
		set	ie_participacao = cd_participacao_fin_p,
			nm_usuario = current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia    = current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint;
	end if;
	--Indice de reajuste
	if (cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') then
		update	pls_contrato
		set	nr_seq_indice_reajuste = cd_moeda_p,
			nm_usuario 	= current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
			dt_atualizacao 	= clock_timestamp()
		where	nr_sequencia    = current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint;
	end if;
	
	open current_setting('pls_obj_plussoft_pck.c01')::CURSOR;
	loop
	fetch current_setting('pls_obj_plussoft_pck.c01')::into CURSOR
		nr_seq_segurado_w,
		nr_seq_motivo_inclusao_w,
		current_setting('pls_obj_plussoft_pck.cd_estabelecimento_w')::smallint;
	EXIT WHEN NOT FOUND; /* apply on current_setting('pls_obj_plussoft_pck.c01')::CURSOR */
		begin
		if (coalesce(nr_seq_motivo_inclusao_w::text, '') = '') then
			begin
			select	nr_seq_motivo_inclusao
			into STRICT	nr_seq_motivo_inclusao_w
			from	pls_parametros
			where	cd_estabelecimento = current_setting('pls_obj_plussoft_pck.cd_estabelecimento_w')::smallint;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(194711);
			end;
			
			if (coalesce(nr_seq_motivo_inclusao_w::text, '') = '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(194711);
			end if;
			
			update	pls_segurado
			set	nr_seq_motivo_inclusao 	= nr_seq_motivo_inclusao_w,
				nm_usuario = current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia		= nr_seq_segurado_w;
		end if;
		end;
	end loop;
	close current_setting('pls_obj_plussoft_pck.c01')::CURSOR;
	
	--Aplicar alteracoes do contrato
	commit;

	--esta usando o estabelecimento 1 como default, pois nao esta sendo passado o estabelecimento
	pls_aprovar_contrato(	current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint, current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type, 1,
				current_setting('pls_obj_plussoft_pck.ds_erro_w')::varchar(255), 'S', 'S',
				'S', 'S', ie_tipo_erro_w,
				'S');
	
	--Verifica se gerou erro ao aprovar contrato
	if (current_setting('pls_obj_plussoft_pck.ds_erro_w')::(varchar(255) IS NOT NULL AND (varchar(255))::text <> '')) then
		ds_mensagem_p := current_setting('pls_obj_plussoft_pck.ds_erro_w')::varchar(255);
		ds_retorno_p  := wheb_mensagem_pck.get_texto(1110470);
	else
		ds_mensagem_p := '';
		ds_retorno_p  := wheb_mensagem_pck.get_texto(1110471	);
	end if;

	exception
	when others then
		rollback;
		ds_mensagem_p := substr(wheb_mensagem_pck.get_texto(1110474, 'DS_ERRO='||sqlerrm(SQLSTATE)) ,1,255);
		ds_retorno_p  := '';
	end;
	
else
	ds_mensagem_p := wheb_mensagem_pck.get_texto(1110473);
	ds_retorno_p  := '';
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obj_plussoft_pck.aprovar_contrato ( nr_contrato_p INOUT pls_contrato.nr_contrato%type, cd_moeda_p moeda.cd_moeda%type, qt_idade_limite_reaj_p bigint, qt_anos_limite_reaj_p bigint, cd_participacao_fin_p text, cd_pessoa_usuario_p pessoa_fisica.cd_pessoa_fisica%type, ds_retorno_p INOUT text, ds_mensagem_p INOUT text) FROM PUBLIC;
