-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_obj_plussoft_pck.obter_regra_isencao_carencia ( nr_seq_regra_isenc_p pls_regra_carencia.nr_sequencia%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type ) RETURNS SETOF T_REGRA_ISENCAO_CARENCIA_DATA AS $body$
DECLARE


linha_w			t_regra_isencao_carencia_row;
current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type		usuario.nm_usuario%type;
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;

--Regra de liberacao de carencia
current_setting('pls_obj_plussoft_pck.c01')::CURSOR CURSOR(	nm_usuario_pc		usuario.nm_usuario%type,
		nr_seq_regra_isenc_pc	pls_regra_carencia.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia		nr_seq_regra_carencia,
		a.ds_regra 		ds_regra,
		b.nm_usuario_liberacao	nm_usuario
	from	pls_regra_carencia 		a,
		pls_regra_carencia_lib 		b
	where	a.nr_sequencia 	= b.nr_seq_regra
	and (b.nm_usuario_liberacao = nm_usuario_pc or coalesce(nm_usuario_pc::text, '') = '')
	and (a.nr_sequencia = nr_seq_regra_isenc_pc or coalesce(nr_seq_regra_isenc_pc::text, '') = '')
	and	a.ie_situacao 		= 'A'
	group by a.nr_sequencia, a.ds_regra, b.nm_usuario_liberacao
	order by 1;
	

BEGIN

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	--Encontra o usuario
	begin
	select	max(nm_usuario)
	into STRICT	current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type
	from	usuario
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	exception
	when others then
		PERFORM set_config('pls_obj_plussoft_pck.nm_usuario_w', null, false);
	end;
end if;

--Caso tenha encontrado o usuario
if (current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%(type IS NOT NULL AND type::text <> '')) or (coalesce(cd_pessoa_fisica_p::text, '') = '') then
	--encontra regras por usuario
	for r_c01_w in current_setting('pls_obj_plussoft_pck.c01')::CURSOR(current_setting('pls_obj_plussoft_pck.nm_usuario_w')::usuario.nm_usuario%type, nr_seq_regra_isenc_p) loop
		if (coalesce(cd_pessoa_fisica_p::text, '') = '') then
			begin
			select	max(cd_pessoa_fisica)
			into STRICT 	cd_pessoa_fisica_w
			from	usuario
			where	nm_usuario = r_c01_w.nm_usuario;
			exception
			when others then
				cd_pessoa_fisica_w := null;
			end;
		end if;
	
		linha_w.cd_pessoa_fisica	:= coalesce(cd_pessoa_fisica_p,cd_pessoa_fisica_w);
		linha_w.nm_usuario		:= r_c01_w.nm_usuario;
		linha_w.nr_seq_regra_carencia	:= r_c01_w.nr_seq_regra_carencia;
		linha_w.ds_regra		:= r_c01_w.ds_regra;
		
		RETURN NEXT linha_w;
	end loop;
end if;

--nao retorna nada
return;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obj_plussoft_pck.obter_regra_isencao_carencia ( nr_seq_regra_isenc_p pls_regra_carencia.nr_sequencia%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type ) FROM PUBLIC;
