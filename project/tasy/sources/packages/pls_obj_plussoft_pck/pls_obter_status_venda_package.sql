-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_obj_plussoft_pck.pls_obter_status_venda ( cd_cgc_p pessoa_juridica.cd_cgc%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type) RETURNS varchar AS $body$
DECLARE


ds_retorno_w		varchar(255) := '';
qt_registro_w		bigint;
nr_seq_lead_w		pls_solicitacao_comercial.nr_sequencia%type;


BEGIN

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	
	--Contrato
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_contrato
	where	cd_pf_estipulante = cd_pessoa_fisica_p
	and	((coalesce(dt_rescisao_contrato::text, '') = '') or (dt_rescisao_contrato > clock_timestamp()));
	
	--Verifica se ja esta contratado
	if (qt_registro_w > 0) then
		ds_retorno_w := wheb_mensagem_pck.get_texto(1110349);
	else
		select 	count(*)
		into STRICT	qt_registro_w
		from 	pls_segurado
		where 	cd_pessoa_fisica = cd_pessoa_fisica_p 
		and 	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > clock_timestamp()));
		
		if (qt_registro_w > 0) then
			ds_retorno_w := wheb_mensagem_pck.get_texto(1110349);
		end if;
	end if;
	
	--Mesmo que seja cliente, caso tenha um lead em aberto deve retornar como Lead OS 1364571
	/*
	if	(qt_registro_w > 0) then
		select	max(nr_sequencia)
		into	nr_seq_lead_w
		from	pls_solicitacao_comercial
		where	cd_pf_vinculado = cd_pessoa_fisica_p
		and	ie_status  = 'PE';
		
		--Caso exista um lead pendente
		if	(nr_seq_lead_w is not null) then
			select	count(1)
			into	qt_registro_w
			from	pls_comercial_cliente	
			where	nr_seq_solicitacao	= nr_seq_lead_w
			and	cd_pessoa_fisica 	= cd_pessoa_fisica_p;
			
			--Caso tenha sido prospectado em cima deste novo lead em aberto manda como prospect mesmo que o cliente ja esteja contratado OS 1364571
			if	(qt_registro_w > 0) then
				ds_retorno_w := 'Prospect';
			else
				qt_registro_w := 1;
				ds_retorno_w  := 'Lead';
			end if;
		end if;
	end if; */
	--Caso ainda nao esteja contratado
	if (qt_registro_w = 0) then
		
		--Prospect
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_comercial_cliente
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		
		--Verifica se ja esta em prospect
		if (qt_registro_w > 0) then
			ds_retorno_w := wheb_mensagem_pck.get_texto(1110350);
		end if;
		
		--Caso ainda nao esteja em Prospect
		if (qt_registro_w = 0) then
			
			--Lead
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_solicitacao_comercial
			where	cd_pf_vinculado = cd_pessoa_fisica_p;
			
			--Verifica se ja esta em LEAD
			if (qt_registro_w > 0) then
				ds_retorno_w := wheb_mensagem_pck.get_texto(1110351);
			end if;
		end if;
		
	end if;
	
elsif (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	
	--Contrato
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_contrato
	where	cd_cgc_estipulante = cd_cgc_p
	and	((coalesce(dt_rescisao_contrato::text, '') = '') or (dt_rescisao_contrato > clock_timestamp()));
	
	--Verifica se ja esta contratado
	if (qt_registro_w > 0) then
		ds_retorno_w := wheb_mensagem_pck.get_texto(1110349);
	end if;
	
	--Caso ainda nao esteja contratado
	if (qt_registro_w = 0) then
		
		--Prospect
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_comercial_cliente
		where	cd_cgc = cd_cgc_p;
		
		--Verifica se ja esta em prospect
		if (qt_registro_w > 0) then
			ds_retorno_w := wheb_mensagem_pck.get_texto(1110350);
		end if;
		
		--Caso ainda nao esteja em Prospect
		if (qt_registro_w = 0) then
			
			--Lead
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_solicitacao_comercial
			where	cd_cnpj_vinculado = cd_cgc_p;
			
			--Verifica se ja esta em LEAD
			if (qt_registro_w > 0) then
				ds_retorno_w := wheb_mensagem_pck.get_texto(1110351);
			end if;
		end if;
		
	end if;
	
end if;

return ds_retorno_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obj_plussoft_pck.pls_obter_status_venda ( cd_cgc_p pessoa_juridica.cd_cgc%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type) FROM PUBLIC;
