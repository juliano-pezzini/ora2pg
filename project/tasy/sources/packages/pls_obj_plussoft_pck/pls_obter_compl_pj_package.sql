-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_obj_plussoft_pck.pls_obter_compl_pj ( cd_cgc_p pessoa_juridica.cd_cgc%type, ie_tipo_complemento_p pessoa_juridica_compl.ie_tipo_complemento%type, ie_opcao_p text) RETURNS varchar AS $body$
DECLARE

/* ie_opcao_p

T 	- Telefone
CI 	- Cidade		
UF	- Estado
CEP	- CEP
B	- Bairro
E	- Endereco 
EN	- Endereco + Numero + Complemento
EC	- Endereco completo (Numero + Complemento + Bairro + UF
ES	- Endereco + numero + Bairro + Complemento
NR	- Numero do Endereco
CO	- Complemento
M	- Email
FAX	- Numero do fax
CEL	- Numero do celular
ENC	- Pessoa contato
NRENC	- Ramal pessoa contato
IBGE	- Municipio IBGE
DDT	- DDD
ME	- Municipio + Estado
ENDR	- Endereco completo para relatorio
LOG              - Logradouro
DTA              - Data atualizacao

*/
ds_endereco_w		varchar(60);
nr_endereco_w		varchar(10);
ds_complemento_w	varchar(100);
ds_bairro_w		varchar(40);
ds_municipio_w		varchar(40);
sg_estado_w		pessoa_juridica_compl.sg_estado%type;
cd_cep_w		varchar(15);
nr_telefone_w		varchar(15);
nr_fax_w		varchar(15);
ds_email_w		varchar(80);
nr_ramal_contato_w	integer;
nm_pessoa_contato_w	varchar(40);
nr_telefone_celular_w	varchar(20);
qt_registro_w		integer;
cd_municipio_ibge_w	varchar(6);
nr_ddd_telefone_w	varchar(3);
nr_seq_ident_cnes_w	bigint;
cd_cnes_w		varchar(20);
cd_municipio_ibge_ww	varchar(7);
ds_retorno_w		varchar(255);
ds_tipo_logradouro_w	varchar(255);
nr_seq_tipo_logradouro_w	pessoa_juridica_compl.nr_seq_tipo_logradouro%type;
dt_atualizacao_w		timestamp;


BEGIN

select	count(*)
into STRICT	qt_registro_w
from	pessoa_juridica_compl
where	cd_cgc 			= cd_cgc_p
and	ie_tipo_complemento 	= ie_tipo_complemento_p;

if (qt_registro_w = 0) then
	return 'N/D';
end if;

select	max(ds_endereco),
	max(nr_endereco),
	max(ds_complemento),
	max(ds_bairro),
	max(ds_municipio),
	max(sg_estado),
	max(cd_cep),
	max(nr_telefone),
	max(nr_fax),
	max(ds_email),
	max(nr_ramal_contato),
	max(nm_pessoa_contato),
	max(nr_telefone_celular),
	max(cd_municipio_ibge),
	max(nr_ddd_telefone),
	max(nr_seq_ident_cnes),
	max(nr_seq_tipo_logradouro),
	max(dt_atualizacao)
into STRICT	ds_endereco_w,
	nr_endereco_w,
	ds_complemento_w,
	ds_bairro_w,
	ds_municipio_w,
	sg_estado_w,
	cd_cep_w,
	nr_telefone_w,
	nr_fax_w,
	ds_email_w,
	nr_ramal_contato_w,
	nm_pessoa_contato_w,
	nr_telefone_celular_w,
	cd_municipio_ibge_w,
	nr_ddd_telefone_w,
	nr_seq_ident_cnes_w,
	nr_seq_tipo_logradouro_w,
	dt_atualizacao_w
from	pessoa_juridica_compl
where	cd_cgc 			= cd_cgc_p
and	ie_tipo_complemento 	= ie_tipo_complemento_p;

if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	if (ie_opcao_p = 'T')	then
		return NR_TELEFONE_W;
	elsif (ie_opcao_p = 'CI')	then
		return DS_MUNICIPIO_W;
	elsif (ie_opcao_p = 'UF')	then
		return SG_ESTADO_W;
	elsif (ie_opcao_p = 'CEP')	then
		return CD_CEP_W;
	elsif (ie_opcao_p = 'B')	then
		return DS_BAIRRO_W;
	elsif (ie_opcao_p = 'E')	then
		return(DS_ENDERECO_W);
	elsif (ie_opcao_p = 'EN')	then
		return(DS_ENDERECO_W ||', ' || NR_ENDERECO_W || ', ' || DS_COMPLEMENTO_W);
	elsif (ie_opcao_p = 'EC')	then
		return(DS_ENDERECO_W ||', ' || NR_ENDERECO_W || ', ' || DS_COMPLEMENTO_W || ', ' || DS_BAIRRO_W || ', ' || SG_ESTADO_W);
	elsif (ie_opcao_p = 'ES')	then
		return(DS_ENDERECO_W ||', ' || NR_ENDERECO_W || ', ' || DS_BAIRRO_W || ', ' || DS_COMPLEMENTO_W);
	elsif (ie_opcao_p = 'NR') then
		return(nr_endereco_w);
	elsif (ie_opcao_p = 'CO') then
		return(ds_complemento_w);
	elsif (ie_opcao_p = 'M') then
		return(ds_email_w);
	elsif (ie_opcao_p = 'FAX') then
		return nr_fax_w;
	elsif (ie_opcao_p = 'CEL') then
		return nr_telefone_celular_w;
	elsif (ie_opcao_p = 'ENC') then
		return nm_pessoa_contato_w;
	elsif (ie_opcao_p = 'NRENC') then
		return nr_ramal_contato_w;
	elsif (ie_opcao_p = 'IBGE') then
		return	cd_municipio_ibge_w;
	elsif (ie_opcao_p = 'CDMDV') then
		cd_municipio_ibge_ww	:= coalesce(cd_municipio_ibge_w ,substr(obter_municipio_ibge(coalesce(ELIMINA_CARACTERES_ESPECIAIS(cd_cep_w),0)),1,14)) ||
				substr(calcula_digito('MODULO10',coalesce(cd_municipio_ibge_w ,substr(obter_municipio_ibge(coalesce(ELIMINA_CARACTERES_ESPECIAIS(cd_cep_w),0)),1,14))),1,1);
	
		return cd_municipio_ibge_ww;
	elsif (ie_opcao_p = 'DDT') then
		return nr_ddd_telefone_w;
	elsif (ie_opcao_p = 'ME') then
		return(ds_municipio_w||' - '||sg_estado_w);
	elsif (ie_opcao_p = 'CNES') then
		select	max(cd_cnes)
		into STRICT	cd_cnes_w
		from	cnes_identificacao
		where	nr_sequencia	= nr_seq_ident_cnes_w;
		return cd_cnes_w;
	elsif (ie_opcao_p = 'ENDR') then
		
		ds_retorno_w	:= substr(DS_ENDERECO_W	|| ', ' || NR_ENDERECO_W	|| ', ' || DS_COMPLEMENTO_W|| ', ' || DS_BAIRRO_W	||
		'                                  ' || wheb_mensagem_pck.get_texto(304981) || ': ' || DS_MUNICIPIO_W	||
		'                                  ' || wheb_mensagem_pck.get_texto(304982) || ': ' || CD_CEP_W	||
		'                                  ' || wheb_mensagem_pck.get_texto(304983) || ': ' || SG_ESTADO_W,1,255);
		return ds_retorno_w;
	elsif (ie_opcao_p = 'LOG') then
		
		select	max(ds_tipo_logradouro)
		into STRICT	ds_tipo_logradouro_w	
		from  	cns_tipo_logradouro
		where 	nr_sequencia = nr_seq_tipo_logradouro_w;
		
		ds_retorno_w := ds_tipo_logradouro_w;
		
	elsif (ie_opcao_p = 'DTA') then
		ds_retorno_w	:= dt_atualizacao_w;
	else
		return null;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obj_plussoft_pck.pls_obter_compl_pj ( cd_cgc_p pessoa_juridica.cd_cgc%type, ie_tipo_complemento_p pessoa_juridica_compl.ie_tipo_complemento%type, ie_opcao_p text) FROM PUBLIC;
