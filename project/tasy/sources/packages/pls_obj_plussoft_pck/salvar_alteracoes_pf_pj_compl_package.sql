-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


----Objeto que verifica as alteracoes cadastrais e gera solicitacao de alteracao PF e PJ
CREATE OR REPLACE PROCEDURE pls_obj_plussoft_pck.salvar_alteracoes_pf_pj_compl ( cd_pessoa_fisica_p INOUT pessoa_fisica.cd_pessoa_fisica%type, cd_cgc_p INOUT pessoa_juridica.cd_cgc%type, nr_seq_vendedor_p pls_vendedor.nr_sequencia%type, nr_seq_agente_motivador_p pls_agente_motivador.nr_sequencia%type, nr_seq_origem_agente_p pls_agente_motivador_orig.nr_sequencia%type, nr_seq_segurado_indic_p pls_solicitacao_comercial.nr_seq_segurado_indic%type, cd_pessoa_indicacao_p pls_solicitacao_comercial.cd_pessoa_indicacao%type, ds_observacao_p pls_solicitacao_comercial.ds_observacao%type, ds_naturalidade_p text, cd_nacionalidade_p text, ie_grau_instrucao_p text, nr_pis_pasep_p text, nr_cartao_nac_sus_p text, dt_emissao_ci_p timestamp, ds_orgao_emissor_ci_p text, sg_emissora_ci_p text, nm_pais_p text, cd_declaracao_nasc_vivo_p text, nm_contato_p text, nm_mae_p text, nm_usuario_p text, --Parametros de saida
 ie_retorno_p INOUT bigint, ds_mensagem_erro_p INOUT text) AS $body$
DECLARE


cd_municipio_ibge_old_w		pessoa_fisica.cd_municipio_ibge%type;
cd_nacionalidade_old_w		pessoa_fisica.cd_nacionalidade%type;
ie_grau_instrucao_old_w		pessoa_fisica.ie_grau_instrucao%type;
nr_pis_pasep_old_w		pessoa_fisica.nr_pis_pasep%type;
nr_cartao_nac_sus_old_w		pessoa_fisica.nr_cartao_nac_sus%type;
dt_emissao_ci_old_w		pessoa_fisica.dt_emissao_ci%type;
ds_orgao_emissor_ci_old_w	pessoa_fisica.ds_orgao_emissor_ci%type;
sg_emissora_ci_old_w		pessoa_fisica.sg_emissora_ci%type;
nr_seq_pais_old_w		pessoa_fisica.nr_seq_pais%type;
cd_declaracao_nasc_vivo_old_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
nm_contato_old_w		compl_pessoa_fisica.nm_contato%type;
nm_mae_old_w			compl_pessoa_fisica.nm_contato%type;
ds_observacao_old_w		compl_pessoa_fisica.ds_observacao%type;
nm_pessoa_contato_old_w		varchar(255);
nr_seq_log_atual_w		bigint;
ie_log_w			varchar(2);
nr_seq_agente_motivador_old_w	pls_agente_motivador.nr_sequencia%type;
nr_seq_lead_w			bigint;
nr_seq_origem_agente_old_w	pls_agente_motivador_orig.nr_sequencia%type;
nr_seq_segurado_indic_old_w	pls_solicitacao_comercial.nr_seq_segurado_indic%type;
cd_pessoa_indicacao_old_w	pls_solicitacao_comercial.cd_pessoa_indicacao%type;
vl_parametro_w			varchar(2);
qt_registro_comp_w		bigint;
nr_compl_pessoa_fisica_w	bigint;


BEGIN
--Verifica se eh PF
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	begin
	Obter_Param_Usuario(1220, 26, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, vl_parametro_w);
	if (vl_parametro_w <> 'N') then
		--Dados atuais PF
		select	cd_municipio_ibge,
			cd_nacionalidade,
			ie_grau_instrucao,
			nr_pis_pasep,
			nr_cartao_nac_sus,
			dt_emissao_ci,
			ds_orgao_emissor_ci,
			sg_emissora_ci,
			nr_seq_pais,
			cd_declaracao_nasc_vivo,
			ds_observacao
		into STRICT	cd_municipio_ibge_old_w,
			cd_nacionalidade_old_w,
			ie_grau_instrucao_old_w,
			nr_pis_pasep_old_w,
			nr_cartao_nac_sus_old_w,
			dt_emissao_ci_old_w,
			ds_orgao_emissor_ci_old_w,
			sg_emissora_ci_old_w,
			nr_seq_pais_old_w,
			cd_declaracao_nasc_vivo_old_w,
			ds_observacao_old_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p  LIMIT 1;
		
		--Naturalidade
		if (ds_naturalidade_p IS NOT NULL AND ds_naturalidade_p::text <> '') and (upper(ds_naturalidade_p) <> upper(cd_municipio_ibge_old_w) or coalesce(cd_municipio_ibge_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_municipio_ibge_old_w, ds_naturalidade_p, 'CD_MUNICIPIO_IBGE', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Nacionalidade
		if (cd_nacionalidade_p IS NOT NULL AND cd_nacionalidade_p::text <> '') and (upper(cd_nacionalidade_p) <> upper(cd_nacionalidade_old_w) or coalesce(cd_nacionalidade_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_nacionalidade_old_w, cd_nacionalidade_p, 'CD_NACIONALIDADE', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Grau de instrucao
		if (ie_grau_instrucao_p IS NOT NULL AND ie_grau_instrucao_p::text <> '') and (ie_grau_instrucao_p <> ie_grau_instrucao_old_w or coalesce(ie_grau_instrucao_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ie_grau_instrucao_old_w, ie_grau_instrucao_p, 'IE_GRAU_INSTRUCAO', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--PISPASEP
		if (nr_pis_pasep_p IS NOT NULL AND nr_pis_pasep_p::text <> '') and (nr_pis_pasep_p <> nr_pis_pasep_old_w or coalesce(nr_pis_pasep_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_pis_pasep_old_w, nr_pis_pasep_p, 'NR_PIS_PASEP', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Cartao SUS
		if (nr_cartao_nac_sus_p IS NOT NULL AND nr_cartao_nac_sus_p::text <> '') and (nr_cartao_nac_sus_p <> nr_cartao_nac_sus_old_w or coalesce(nr_cartao_nac_sus_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_cartao_nac_sus_old_w, nr_cartao_nac_sus_p, 'NR_CARTAO_NAC_SUS', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Data emissao CI
		if (dt_emissao_ci_p IS NOT NULL AND dt_emissao_ci_p::text <> '') and (dt_emissao_ci_p <> dt_emissao_ci_old_w or coalesce(dt_emissao_ci_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(dt_emissao_ci_old_w, dt_emissao_ci_p, 'DT_EMISSAO_CI', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Orgao emissor CI
		if (ds_orgao_emissor_ci_p IS NOT NULL AND ds_orgao_emissor_ci_p::text <> '') and (ds_orgao_emissor_ci_p <> ds_orgao_emissor_ci_old_w or coalesce(ds_orgao_emissor_ci_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_orgao_emissor_ci_old_w, ds_orgao_emissor_ci_p, 'DS_ORGAO_EMISSOR_CI', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Estado emissor CI
		if (sg_emissora_ci_p IS NOT NULL AND sg_emissora_ci_p::text <> '') and (sg_emissora_ci_p <> sg_emissora_ci_old_w or coalesce(sg_emissora_ci_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(sg_emissora_ci_old_w, sg_emissora_ci_p, 'SG_EMISSORA_CI', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Pais
		if (nm_pais_p IS NOT NULL AND nm_pais_p::text <> '') and (nm_pais_p <> nr_seq_pais_old_w or coalesce(nr_seq_pais_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nr_seq_pais_old_w, nm_pais_p, 'NR_SEQ_PAIS', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		--Declaracao nasc vivo
		if (cd_declaracao_nasc_vivo_p IS NOT NULL AND cd_declaracao_nasc_vivo_p::text <> '') and (cd_declaracao_nasc_vivo_p <> cd_declaracao_nasc_vivo_old_w or coalesce(cd_declaracao_nasc_vivo_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(cd_declaracao_nasc_vivo_old_w, cd_declaracao_nasc_vivo_p, 'CD_DECLARACAO_NASC_VIVO', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		
		CALL pls_tasy_gerar_solicitacao(cd_pessoa_fisica_p,'A');
	else
		update	pessoa_fisica
		set	cd_municipio_ibge 	= ds_naturalidade_p,
			cd_nacionalidade 	= cd_nacionalidade_p,
			ie_grau_instrucao	= ie_grau_instrucao_p,
			nr_pis_pasep		= nr_pis_pasep_p,
			nr_cartao_nac_sus	= nr_cartao_nac_sus_p,
			dt_emissao_ci		= dt_emissao_ci_p,
			ds_orgao_emissor_ci	= ds_orgao_emissor_ci_p,
			sg_emissora_ci		= sg_emissora_ci_p,
			nr_seq_pais		= nm_pais_p,
			cd_declaracao_nasc_vivo	= cd_declaracao_nasc_vivo_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	
	end if;
	
	begin
		select 	max(nr_sequencia)
		into STRICT	nr_seq_lead_w
		from 	pls_solicitacao_comercial
		where 	cd_pf_vinculado = cd_pessoa_fisica_p;
	exception
	when others then
		nr_seq_lead_w := null;
	end;
	
	if (coalesce(nr_seq_lead_w,0) > 0) then
	
		select	nr_seq_agente_motivador,
			nr_seq_origem_agente,
			nr_seq_segurado_indic,
			cd_pessoa_indicacao
		into STRICT	nr_seq_agente_motivador_old_w,
			nr_seq_origem_agente_old_w,
			nr_seq_segurado_indic_old_w,
			cd_pessoa_indicacao_old_w
		from	pls_solicitacao_comercial
		where 	nr_sequencia = nr_seq_lead_w;
		
		if (nr_seq_agente_motivador_p IS NOT NULL AND nr_seq_agente_motivador_p::text <> '') and (nr_seq_agente_motivador_p <> nr_seq_agente_motivador_old_w or coalesce(nr_seq_agente_motivador_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	nr_seq_agente_motivador = nr_seq_agente_motivador_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		if (nr_seq_origem_agente_p IS NOT NULL AND nr_seq_origem_agente_p::text <> '') and (nr_seq_origem_agente_p <> nr_seq_origem_agente_old_w or coalesce(nr_seq_origem_agente_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	nr_seq_origem_agente = nr_seq_origem_agente_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		if (nr_seq_segurado_indic_p IS NOT NULL AND nr_seq_segurado_indic_p::text <> '') and (nr_seq_segurado_indic_p <> nr_seq_segurado_indic_old_w or coalesce(nr_seq_segurado_indic_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	nr_seq_segurado_indic 	= nr_seq_segurado_indic_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		if (coalesce(cd_pessoa_indicacao_p, 0) <> cd_pessoa_indicacao_old_w or coalesce(cd_pessoa_indicacao_old_w::text, '') = '') then
			update 	pls_solicitacao_comercial
			set	cd_pessoa_indicacao 	= cd_pessoa_indicacao_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
	end if;
	
	--Complemento
	if (vl_parametro_w <> 'N') then
		begin
		select	nm_contato,
			ds_observacao
		into STRICT	nm_contato_old_w,
			ds_observacao_old_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	ie_tipo_complemento	= 1;
		exception
		when others then
			nm_contato_old_w	:= null;
			ds_observacao_old_w	:= null;
		end;
		
		--Contato
		if (nm_contato_p IS NOT NULL AND nm_contato_p::text <> '') and (nm_contato_p <> nm_contato_old_w or coalesce(nm_contato_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nm_contato_old_w, nm_contato_p, 'NM_CONTATO', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		
		--Observacao
		if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') and (ds_observacao_p <> ds_observacao_old_w or coalesce(ds_observacao_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(ds_observacao_old_w, ds_observacao_p, 'DS_OBSERVACAO', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		
		CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_p, 1,'A','pls_obj_plussoft_pck.salvar_alteracoes_pf_pj_compl()');
		
		begin
			select	nm_contato
			into STRICT	nm_mae_old_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	ie_tipo_complemento	= 5;
		exception
		when others then
			nm_mae_old_w	:= null;
		end;
		
		--Nome da Mae
		if (nm_mae_p IS NOT NULL AND nm_mae_p::text <> '') and (nm_mae_p <> nm_mae_old_w or coalesce(nm_mae_old_w::text, '') = '') then
			CALL pls_gerar_solicitacao_alt(nm_mae_old_w, nm_mae_p, 'NM_CONTATO', cd_pessoa_fisica_p, null, nm_usuario_p);
		end if;
		
		CALL pls_tasy_gerar_solic_compl(cd_pessoa_fisica_p, 5,'A','pls_obj_plussoft_pck.salvar_alteracoes_pf_pj_compl()');
	else
		update	compl_pessoa_fisica
		set	nm_contato		= nm_contato_p,
			ds_observacao		= ds_observacao_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	ie_tipo_complemento	= 1;
		
		select	count(1)
		into STRICT	qt_registro_comp_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_p
		and	ie_tipo_complemento 	= 5;
		
		if (qt_registro_comp_w > 0) then
			update	compl_pessoa_fisica
			set	nm_contato		= nm_mae_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	ie_tipo_complemento 	= 5;
		else
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_compl_pessoa_fisica_w
			from	compl_pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
			
			insert into compl_pessoa_fisica(nr_sequencia, dt_atualizacao, nm_usuario,
							ie_tipo_complemento, cd_pessoa_fisica, nm_contato)
			values (nr_compl_pessoa_fisica_w, clock_timestamp(), nm_usuario_p,
							5, cd_pessoa_fisica_p, nm_mae_p);
		end if;
	end if;
	
	commit;
	--Sucesso
	ie_retorno_p := 0;
	exception
	when others then
		rollback;
		--Erro
		ie_retorno_p := 1;
		ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110549, 'DS_ERRO='||sqlerrm(SQLSTATE)) ,1,255);
	end;
--Caso contrario eh PJ
else
	begin
	select	nr_seq_pais,
		nm_pessoa_contato,
		ds_observacao
	into STRICT	nr_seq_pais_old_w,
		nm_pessoa_contato_old_w,
		ds_observacao_old_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_p  LIMIT 1;
	
	--Pais
	if (nm_pais_p IS NOT NULL AND nm_pais_p::text <> '') and (upper(nm_pais_p) <> upper(nr_seq_pais_old_w) or coalesce(nr_seq_pais_old_w::text, '') = '') then
		
		update	pessoa_juridica
		set	nr_seq_pais		= nm_pais_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	cd_cgc		= cd_cgc_p;
		
		gravar_log_alteracao(nr_seq_pais_old_w, nm_pais_p, nm_usuario_p, nr_seq_log_atual_w, 'NR_SEQ_PAIS', ie_log_w, '', 'PESSOA_JURIDICA', cd_cgc_p, 'CD_CGC='||cd_cgc_p);
	end if;
	--Contato
	if (nm_contato_p IS NOT NULL AND nm_contato_p::text <> '') and (upper(nm_contato_p) <> upper(nm_pessoa_contato_old_w) or coalesce(nm_pessoa_contato_old_w::text, '') = '') then
		
		update	pessoa_juridica
		set		nm_pessoa_contato	= nm_contato_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
		where	cd_cgc			= cd_cgc_p;
		
		gravar_log_alteracao(nm_pessoa_contato_old_w, nm_contato_p, nm_usuario_p, nr_seq_log_atual_w, 'NM_PESSOA_CONTATO', ie_log_w, '', 'PESSOA_JURIDICA', cd_cgc_p, 'CD_CGC='||cd_cgc_p);
	end if;
	
	
	begin
		select 	max(nr_sequencia)
		into STRICT	nr_seq_lead_w
		from 	pls_solicitacao_comercial
		where 	cd_cnpj_vinculado = cd_cgc_p;
	exception
	when others then
		nr_seq_lead_w := null;
	end;
	
	if (coalesce(nr_seq_lead_w,0) > 0) then
		
		select	nr_seq_agente_motivador,
			nr_seq_origem_agente,
			nr_seq_segurado_indic,
			cd_pessoa_indicacao,
			ds_observacao
		into STRICT	nr_seq_agente_motivador_old_w,
			nr_seq_origem_agente_old_w,
			nr_seq_segurado_indic_old_w,
			cd_pessoa_indicacao_old_w,
			ds_observacao_old_w
		from	pls_solicitacao_comercial
		where 	nr_sequencia = nr_seq_lead_w;
		
		if (nr_seq_agente_motivador_p IS NOT NULL AND nr_seq_agente_motivador_p::text <> '') and (nr_seq_agente_motivador_p <> nr_seq_agente_motivador_old_w or coalesce(nr_seq_agente_motivador_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	nr_seq_agente_motivador = nr_seq_agente_motivador_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		if (nr_seq_origem_agente_p IS NOT NULL AND nr_seq_origem_agente_p::text <> '') and (nr_seq_origem_agente_p <> nr_seq_origem_agente_old_w or coalesce(nr_seq_origem_agente_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	nr_seq_origem_agente 	= nr_seq_origem_agente_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		if (nr_seq_segurado_indic_p IS NOT NULL AND nr_seq_segurado_indic_p::text <> '') and (nr_seq_segurado_indic_p <> nr_seq_segurado_indic_old_w or coalesce(nr_seq_segurado_indic_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	nr_seq_segurado_indic 	= nr_seq_segurado_indic_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		if (cd_pessoa_indicacao_p IS NOT NULL AND cd_pessoa_indicacao_p::text <> '') and (cd_pessoa_indicacao_p <> cd_pessoa_indicacao_old_w or coalesce(cd_pessoa_indicacao_old_w::text, '') = '') then
			
			update 	pls_solicitacao_comercial
			set	cd_pessoa_indicacao	= cd_pessoa_indicacao_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where 	nr_sequencia = nr_seq_lead_w;
		end if;
		
		--Observacao
		if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') and (upper(ds_observacao_p) <> upper(ds_observacao_old_w) or coalesce(ds_observacao_old_w::text, '') = '') then
		
		update	pls_solicitacao_comercial
		set		ds_observacao	= ds_observacao_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
		where	nr_sequencia = nr_seq_lead_w;
		end if;
		
	end if;
	
	commit;
	--Sucesso
	ie_retorno_p := 0;
	exception
	when others then
		rollback;
		--Erro
		ie_retorno_p := 1;
		ds_mensagem_erro_p := substr(wheb_mensagem_pck.get_texto(1110550, 'DS_ERRO='||sqlerrm(SQLSTATE)) ,1,255);
	end;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obj_plussoft_pck.salvar_alteracoes_pf_pj_compl ( cd_pessoa_fisica_p INOUT pessoa_fisica.cd_pessoa_fisica%type, cd_cgc_p INOUT pessoa_juridica.cd_cgc%type, nr_seq_vendedor_p pls_vendedor.nr_sequencia%type, nr_seq_agente_motivador_p pls_agente_motivador.nr_sequencia%type, nr_seq_origem_agente_p pls_agente_motivador_orig.nr_sequencia%type, nr_seq_segurado_indic_p pls_solicitacao_comercial.nr_seq_segurado_indic%type, cd_pessoa_indicacao_p pls_solicitacao_comercial.cd_pessoa_indicacao%type, ds_observacao_p pls_solicitacao_comercial.ds_observacao%type, ds_naturalidade_p text, cd_nacionalidade_p text, ie_grau_instrucao_p text, nr_pis_pasep_p text, nr_cartao_nac_sus_p text, dt_emissao_ci_p timestamp, ds_orgao_emissor_ci_p text, sg_emissora_ci_p text, nm_pais_p text, cd_declaracao_nasc_vivo_p text, nm_contato_p text, nm_mae_p text, nm_usuario_p text,  ie_retorno_p INOUT bigint, ds_mensagem_erro_p INOUT text) FROM PUBLIC;
