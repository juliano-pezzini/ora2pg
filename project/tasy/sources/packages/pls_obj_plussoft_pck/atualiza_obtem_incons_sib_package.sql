-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_obj_plussoft_pck.atualiza_obtem_incons_sib ( nr_seq_proposta_p pls_proposta_adesao.nr_sequencia%type, nr_contrato_p pls_contrato.nr_contrato%type) RETURNS SETOF T_DADOS_INCONSIST_SIB_DATA AS $body$
DECLARE


linha_w			t_dados_inconsist_sib_row;
current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint	pls_contrato.nr_sequencia%type;

current_setting('pls_obj_plussoft_pck.c01')::CURSOR CURSOR(	nr_seq_proposta_pc	pls_proposta_adesao.nr_sequencia%type) FOR
	SELECT	cd_beneficiario,
		substr(obter_nome_pf(cd_beneficiario),1,200) nm_beneficiario,
		ds_consistencia,
		nr_seq_inconsistencia
	from	pls_lote_consistencia_sib
	where	nr_seq_proposta   = nr_seq_proposta_pc;

current_setting('pls_obj_plussoft_pck.c02')::CURSOR CURSOR(	nr_seq_contrato_pc	pls_contrato.nr_sequencia%type) FOR
	SELECT	cd_beneficiario,
		substr(obter_nome_pf(cd_beneficiario),1,200) nm_beneficiario,
		ds_consistencia,
		nr_seq_inconsistencia
	from	pls_lote_consistencia_sib
	where	nr_seq_contrato   = nr_seq_contrato_pc;
BEGIN

if (nr_contrato_p IS NOT NULL AND nr_contrato_p::text <> '') then
	begin
		select	max(nr_sequencia)
		into STRICT	current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint
		from 	pls_contrato
		where 	nr_contrato = nr_contrato_p;
	exception
	when others then
		PERFORM set_config('pls_obj_plussoft_pck.nr_seq_contrato_w', null, false);
	end;
	
	--beneficiarios inconsistentes
	for r_c02_w in current_setting('pls_obj_plussoft_pck.c02')::CURSOR(current_setting('pls_obj_plussoft_pck.nr_seq_contrato_w')::bigint) loop
		linha_w.nr_seq_inconsistencia	:= r_c02_w.nr_seq_inconsistencia;
		linha_w.ds_inconsistencia	:= r_c02_w.ds_consistencia;
		linha_w.cd_beneficiario		:= r_c02_w.cd_beneficiario;
		linha_w.nm_beneficiario		:= r_c02_w.nm_beneficiario;

		RETURN NEXT linha_w;
	end loop;
elsif (nr_seq_proposta_p IS NOT NULL AND nr_seq_proposta_p::text <> '') then
	--beneficiarios inconsistentes
	for r_c01_w in current_setting('pls_obj_plussoft_pck.c01')::CURSOR(nr_seq_proposta_p) loop
		linha_w.nr_seq_inconsistencia	:= r_c01_w.nr_seq_inconsistencia;
		linha_w.ds_inconsistencia	:= r_c01_w.ds_consistencia;
		linha_w.cd_beneficiario		:= r_c01_w.cd_beneficiario;
		linha_w.nm_beneficiario		:= r_c01_w.nm_beneficiario;

		RETURN NEXT linha_w;
	end loop;
end if;

--nao retorna nada
return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_obj_plussoft_pck.atualiza_obtem_incons_sib ( nr_seq_proposta_p pls_proposta_adesao.nr_sequencia%type, nr_contrato_p pls_contrato.nr_contrato%type) FROM PUBLIC;
