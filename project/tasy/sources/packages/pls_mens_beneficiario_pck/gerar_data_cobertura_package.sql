-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_beneficiario_pck.gerar_data_cobertura ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_pagador_benef_p pls_segurado.nr_seq_pagador%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, dt_contratacao_p pls_segurado.dt_contratacao%type, dt_reativacao_p pls_segurado.dt_reativacao%type, dt_reativacao_ant_p pls_segurado.dt_reativacao_ant%type, dt_inclusao_pce_p pls_segurado.dt_inclusao_pce%type, dt_rescisao_p pls_segurado.dt_rescisao%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_parcela_p pls_mensalidade_segurado.nr_parcela%type, ie_mensalidade_proporcional_p pls_segurado.ie_mensalidade_proporcional%type, ie_calc_primeira_mens_p pls_contrato_pagador.ie_calc_primeira_mens%type, ie_calculo_proporcional_p pls_contrato_pagador.ie_calculo_proporcional%type, dt_vencimento_p pls_mensalidade.dt_vencimento%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_dia_vencimento_p pls_contrato_pagador_fin.dt_dia_vencimento%type, dt_rescisao_ant_p pls_segurado.dt_rescisao_ant%type, dt_inicio_cobertura_p INOUT timestamp, dt_fim_cobertura_p INOUT timestamp, ie_rescisao_proporcional_p INOUT text, ie_pce_proporcional_p INOUT text, ie_reativacao_proporcional_p INOUT text ) AS $body$
DECLARE


dt_inicio_cobertura_w	timestamp;
dt_fim_cobertura_w	timestamp;
dt_cobertura_w		timestamp;

ie_mensalidade_proporcional_w	varchar(1);
ie_pce_proporcional_w		varchar(1);
ie_reativacao_proporcional_w	varchar(1);
ie_reativacao_w			varchar(1);
ie_tipo_contrato_w		varchar(2);
nr_dia_contratacao_w		smallint;
nr_seq_pagador_pce_benef_w	pls_segurado_pagador.nr_seq_pagador%type;


BEGIN
ie_pce_proporcional_w		:= 'N';
ie_reativacao_proporcional_w	:= 'N';

if (coalesce(ie_mensalidade_proporcional_p::text, '') = '') then
	if (ie_calc_primeira_mens_p = 'P') then
		ie_mensalidade_proporcional_w	:= 'S';
	else
		ie_mensalidade_proporcional_w	:= 'N';
	end if;
	
	update	pls_segurado
	set	ie_mensalidade_proporcional	= ie_mensalidade_proporcional_w
	where	nr_sequencia			= nr_seq_segurado_p;
else
	ie_mensalidade_proporcional_w	:= ie_mensalidade_proporcional_p;
end if;

if (trunc(dt_reativacao_p,'month') = dt_referencia_p and pls_mensalidade_util_pck.get_ie_att_cobertura_reativ in ('S','P') and nr_seq_pagador_benef_p = nr_seq_pagador_p) then
	ie_reativacao_w	:= 'S';
else
	ie_reativacao_w	:= 'N';
end if;

if (nr_parcela_p = 1) or (ie_reativacao_w = 'S') then
	if (ie_reativacao_w = 'S') then
		dt_inicio_cobertura_w	:= dt_reativacao_p;
	else
		dt_inicio_cobertura_w	:= dt_contratacao_p;
	end if;
	
	if (ie_mensalidade_proporcional_w = 'S') then
		if (ie_calculo_proporcional_p = 'M') then --Data vencimento
			begin
			dt_fim_cobertura_w	:= to_date(to_char(dt_vencimento_p,'dd') || '/' || to_char(add_months(dt_inicio_cobertura_w,1),'mm/yyyy'))-1;
			exception
			when others then
				dt_fim_cobertura_w	:= last_day(dt_inicio_cobertura_w);
			end;
		else --Mes calendario
			dt_fim_cobertura_w	:= last_day(dt_inicio_cobertura_w);
		end if;		
		
		if (trunc(dt_reativacao_p,'month') = dt_referencia_p) then
			ie_reativacao_proporcional_w	:= 'S';
		end if;
	else
		if (pls_mensalidade_util_pck.get_ie_att_cobertura_reativ = 'P') and (trunc(dt_reativacao_p,'month') = dt_referencia_p) then
			nr_dia_contratacao_w	:= (to_char(dt_contratacao_p,'dd'))::numeric -1;
			dt_fim_cobertura_w	:= add_months(trunc(dt_inicio_cobertura_w,'month')+nr_dia_contratacao_w,1)-1;
			ie_reativacao_proporcional_w	:= 'S';
		else
			dt_fim_cobertura_w	:= add_months(dt_inicio_cobertura_w,1)-1;
		end if;
	end if;
elsif (trunc(dt_inclusao_pce_p,'month') = dt_referencia_p) and (nr_seq_pagador_benef_p = nr_seq_pagador_p) and (pls_mensalidade_util_pck.get_ie_mens_prop_pce = 'S') then --Se for inclusao de PCE e mensalidade proporcional, entao calcula cobertura conforme a inclusao no PCE
	dt_inicio_cobertura_w	:= dt_inclusao_pce_p;
	dt_fim_cobertura_w	:= last_day(dt_inclusao_pce_p);
	ie_pce_proporcional_w	:= 'S';

	update	pls_segurado
	set	ie_mensalidade_proporcional	= ie_pce_proporcional_w
	where	nr_sequencia			= nr_seq_segurado_p;
else
	if (ie_mensalidade_proporcional_w = 'S') then
		if (ie_calculo_proporcional_p = 'M') then --Data vencimento
			begin
			dt_inicio_cobertura_w	:= to_date(to_char(dt_vencimento_p,'dd') || '/'|| to_char(dt_referencia_p,'mm/yyyy'));
			exception
			when others then
				dt_inicio_cobertura_w	:= last_day(dt_referencia_p);
			end;
			
			begin
			if ((to_char(dt_inicio_cobertura_w,'dd'))::numeric  < dt_dia_vencimento_p) then
				dt_fim_cobertura_w	:= to_date(dt_dia_vencimento_p || '/'|| to_char(add_months(dt_inicio_cobertura_w,1)-1,'mm/yyyy')) -1;
			else
				dt_fim_cobertura_w	:= to_date(to_char(dt_inicio_cobertura_w,'dd') || '/' || to_char(add_months(dt_inicio_cobertura_w,1),'mm/yyyy')) -1;
			end if;
			exception
			when others then
				dt_fim_cobertura_w	:= add_months(dt_inicio_cobertura_w,1)-1;
			end;
		else
			dt_inicio_cobertura_w	:= dt_referencia_p;
			dt_fim_cobertura_w	:= fim_dia(last_day(dt_referencia_p));
		end if;
	else
		if (pls_mensalidade_util_pck.get_ie_att_cobertura_reativ = 'S') and (dt_reativacao_p IS NOT NULL AND dt_reativacao_p::text <> '') then
			dt_cobertura_w	:= dt_reativacao_p;
		else
			dt_cobertura_w	:= dt_contratacao_p;
		end if;
		
		begin
		dt_inicio_cobertura_w	:= to_date(to_char(dt_cobertura_w,'dd') || '/'|| to_char(dt_referencia_p,'mm/yyyy'));
		exception
		when others then
			dt_inicio_cobertura_w	:= last_day(dt_referencia_p);
		end;
		
		dt_fim_cobertura_w	:= add_months(dt_inicio_cobertura_w,1)-1;
	end if;

	if (trunc(dt_inclusao_pce_p,'month') = dt_referencia_p) and (pls_mensalidade_util_pck.get_ie_mens_prop_pce = 'S') and (trunc(dt_inclusao_pce_p,'dd') <> trunc(dt_inicio_cobertura_w,'dd')) and (dt_inclusao_pce_p between dt_inicio_cobertura_w and dt_fim_cobertura_w) then
		
		select	max(nr_seq_pagador)
		into STRICT	nr_seq_pagador_pce_benef_w
		from	pls_segurado_pagador
		where	nr_sequencia	=  (	SELECT	max(x.nr_sequencia)
						from	pls_segurado_pagador x,
							pls_contrato_pagador y
						where	y.nr_sequencia		= x.nr_seq_pagador
						and	x.nr_seq_segurado	= nr_seq_segurado_p
						and	(y.cd_cgc IS NOT NULL AND y.cd_cgc::text <> '')
						and	x.nr_seq_pagador	<> nr_seq_pagador_benef_p);
		
		if (nr_seq_pagador_p = nr_seq_pagador_pce_benef_w) then
			dt_fim_cobertura_w	:= fim_dia(coalesce(dt_rescisao_ant_p, dt_inclusao_pce_p-1));
			ie_pce_proporcional_w	:= 'E';
			
			if	(dt_rescisao_p IS NOT NULL AND dt_rescisao_p::text <> '' AND dt_reativacao_ant_p > dt_fim_cobertura_w) then
				dt_fim_cobertura_w	:= dt_inicio_cobertura_w - 1;
			end if;
		end if;
	end if;
end if;

if (dt_rescisao_p IS NOT NULL AND dt_rescisao_p::text <> '') then
	if (dt_rescisao_p between dt_inicio_cobertura_w and dt_fim_cobertura_w) then
		if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
			select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN  'PJ'  ELSE 'PF' END
			into STRICT	ie_tipo_contrato_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_p;
		elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
			select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END
			into STRICT	ie_tipo_contrato_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_p;
		end if;
		
		if (pls_obter_se_rescisao_proporc(nr_seq_contrato_p, nr_seq_intercambio_p, ie_tipo_contrato_w, dt_referencia_p, cd_estabelecimento_p) = 'S') then
			ie_rescisao_proporcional_p	:= 'S';
			dt_fim_cobertura_w		:= dt_rescisao_p;
		else
			ie_rescisao_proporcional_p	:= 'N';
		end if;
	else
		ie_rescisao_proporcional_p	:= 'N';
	end if;
else
	ie_rescisao_proporcional_p	:= 'N';
end if;

ie_pce_proporcional_p		:= ie_pce_proporcional_w;
ie_reativacao_proporcional_p	:= ie_reativacao_proporcional_w;
dt_inicio_cobertura_p		:= dt_inicio_cobertura_w;
dt_fim_cobertura_p		:= dt_fim_cobertura_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_beneficiario_pck.gerar_data_cobertura ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_pagador_benef_p pls_segurado.nr_seq_pagador%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, dt_contratacao_p pls_segurado.dt_contratacao%type, dt_reativacao_p pls_segurado.dt_reativacao%type, dt_reativacao_ant_p pls_segurado.dt_reativacao_ant%type, dt_inclusao_pce_p pls_segurado.dt_inclusao_pce%type, dt_rescisao_p pls_segurado.dt_rescisao%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_parcela_p pls_mensalidade_segurado.nr_parcela%type, ie_mensalidade_proporcional_p pls_segurado.ie_mensalidade_proporcional%type, ie_calc_primeira_mens_p pls_contrato_pagador.ie_calc_primeira_mens%type, ie_calculo_proporcional_p pls_contrato_pagador.ie_calculo_proporcional%type, dt_vencimento_p pls_mensalidade.dt_vencimento%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, dt_dia_vencimento_p pls_contrato_pagador_fin.dt_dia_vencimento%type, dt_rescisao_ant_p pls_segurado.dt_rescisao_ant%type, dt_inicio_cobertura_p INOUT timestamp, dt_fim_cobertura_p INOUT timestamp, ie_rescisao_proporcional_p INOUT text, ie_pce_proporcional_p INOUT text, ie_reativacao_proporcional_p INOUT text ) FROM PUBLIC;
