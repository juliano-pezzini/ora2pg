-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_coparticipacao_pck.get_result_consistencias_regra (pls_regra_copartic_p pls_regra_copartic) RETURNS varchar AS $body$
DECLARE

 
		ie_restricao_w	varchar(1)	:= 'S';
	
BEGIN
		if (pls_regra_copartic_p.ie_beneficiario = 'S') then 
			declare 
				qt_regras_beneficiario_w	number(10);
			current_setting('pls_coparticipacao_pck.begin')::for 
				select	count(1) 
				into STRICT	qt_regras_beneficiario_w 
				from	pls_regra_copartic_benef 
				where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
				 
				if (qt_regras_beneficiario_w > 0) then 
					declare 
						ie_dependencia_w		varchar2(255)	:= pls_coparticipacao_pck.get_ie_dependencia();
						qt_idade_w			number(10)	:= pls_coparticipacao_pck.get_qt_idade();
						dt_contrato_w			date		:= pls_coparticipacao_pck.get_dt_contrato();
						nr_nivel_w			pls_faixa_salarial.nr_nivel%type;
					current_setting('pls_coparticipacao_pck.begin')::for 
						select	max(nr_nivel) 
						into STRICT	nr_nivel_w 
						from	pls_faixa_salarial 
						where	nr_sequencia = current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_faixa_salarial;
						 
						select	count(1) 
						into STRICT	qt_regras_beneficiario_w 
						from	pls_regra_copartic_benef 
						where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia 
						and (nr_seq_plano = current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_plano or coalesce(nr_seq_plano::text, '') = '') 
						and	((ie_titularidade = 'A') or 
							 ((ie_titularidade = 'T') and (current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%coalesce(rowtype.nr_seq_titular::text, '') = '')) or 
							 ((ie_titularidade = 'D') and (current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%(rowtype.nr_seq_titular IS NOT NULL AND rowtype.nr_seq_titular::text <> '')) and (coalesce(ie_tipo_parentesco::text, '') = '' or ie_dependencia_w = ie_tipo_parentesco))) 
						and	qt_idade_w between coalesce(qt_idade_min, qt_idade_w) and coalesce(qt_idade_max, qt_idade_w) 
						and	dt_contrato_w between coalesce(dt_contrato_de, dt_contrato_w) and fim_dia(coalesce(dt_contrato_ate, dt_contrato_w)) 
						and	((nr_nivel_w between coalesce(nr_faixa_salarial_inicial, nr_nivel_w) and coalesce(nr_faixa_salarial_final, nr_nivel_w)) or (coalesce(nr_nivel_w::text, '') = '' and coalesce(nr_faixa_salarial_inicial::text, '') = '' and coalesce(nr_faixa_salarial_final::text, '') = ''));
						 
						if (qt_regras_beneficiario_w = 0) then 
							ie_restricao_w := 'N';
						end if;
					end;
				end if;
			end;
		end if;
 
		if (pls_regra_copartic_p.ie_prestador = 'S' and ie_restricao_w = 'S') then 
			declare 
				qt_regras_prestador_w		number(10);
			current_setting('pls_coparticipacao_pck.begin')::for 
				select	count(1) 
				into STRICT	qt_regras_prestador_w 
				from	pls_regra_copartic_prest 
				where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
				 
				if (qt_regras_prestador_w > 0) then 
					declare 
						nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
					current_setting('pls_coparticipacao_pck.begin')::for 
						select	max(nr_seq_tipo_prestador) 
						into STRICT	nr_seq_tipo_prestador_w 
						from	pls_prestador 
						where	nr_sequencia = current_setting('pls_coparticipacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador;
						 
						select	count(1) 
						into STRICT	qt_regras_prestador_w 
						from	pls_regra_copartic_prest 
						where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia 
						and	((ie_prestador_cooperado = 'S' and exists (	SELECT	1 
													from	pls_congenere	b, 
														pls_prestador	a 
													where	a.cd_cgc	= b.cd_cgc 
													and	a.nr_sequencia	= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec)) 
						or (ie_prestador_cooperado = 'N')) 
						and (nr_seq_prestador_atend = current_setting('pls_coparticipacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador or coalesce(nr_seq_prestador_atend::text, '') = '') 
						and (nr_seq_tipo_prestador_atend = nr_seq_tipo_prestador_w or coalesce(nr_seq_tipo_prestador_atend::text, '') = '');
						 
						if (qt_regras_prestador_w = 0) then 
							ie_restricao_w := 'N';
						end if;
					end;
				end if;
			end;
		end if;
		 
		if (pls_regra_copartic_p.ie_conta_medica = 'S' and ie_restricao_w = 'S') then 
			declare 
				qt_regras_conta_w	number(10);
			current_setting('pls_coparticipacao_pck.begin')::for 
				select	count(1) 
				into STRICT	qt_regras_conta_w 
				from	pls_regra_copartic_conta 
				where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
				 
				if (qt_regras_conta_w > 0) then						 
					declare 
						formas_cobranca CURSOR(nr_seq_regra_copartic_p	pls_regra_copartic.nr_sequencia%type) FOR 
							SELECT	ie_forma_cobr_internacao, 
								vl_item_minimo, 
								vl_item_maximo 
							from	pls_regra_copartic_conta 
							where	nr_seq_regra = nr_seq_regra_copartic_p;
						 
						qt_coparticipacoes_w	number(10)	:= 0;
						vl_unitario_w		number(17,4);
					current_setting('pls_coparticipacao_pck.begin')::for 
						 
						ie_restricao_w := 'N';
						 
						for formas_cobranca_w in formas_cobranca(pls_regra_copartic_p.nr_sequencia) loop 
							if (formas_cobranca_w.ie_forma_cobr_internacao = 'C') then 
								if (current_setting('pls_coparticipacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then 
									select	count(1) 
									into STRICT	qt_coparticipacoes_w 
									from	pls_conta_coparticipacao	a, 
										pls_conta_proc			c 
									where	c.nr_sequencia		= a.nr_seq_conta_proc 
									and	c.nr_seq_conta		= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia 
									and	c.cd_procedimento	= current_setting('pls_coparticipacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.cd_procedimento 
									and	c.ie_origem_proced	= current_setting('pls_coparticipacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_origem_proced;
								elsif (current_setting('pls_coparticipacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then 
									select	count(1) 
									into STRICT	qt_coparticipacoes_w 
									from	pls_conta_coparticipacao	a, 
										pls_conta_mat			c 
									where	c.nr_sequencia		= a.nr_seq_conta_mat 
									and	c.nr_seq_conta		= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia 
									and	c.nr_seq_material	= current_setting('pls_coparticipacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_seq_material;
								end if;
							elsif (formas_cobranca_w.ie_forma_cobr_internacao = 'G') then 
								 
								select	count(1) 
								into STRICT	qt_coparticipacoes_w 
								from	pls_conta_coparticipacao	a, 
									pls_conta_proc			b 
								where	a.nr_seq_conta_proc	= b.nr_sequencia 
								and	b.nr_seq_conta		= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
								 
								if (qt_coparticipacoes_w = 0) then 
								 
									select	count(1) 
									into STRICT	qt_coparticipacoes_w 
									from	pls_conta_coparticipacao	a, 
										pls_conta_mat			b 
									where	a.nr_seq_conta_mat	= b.nr_sequencia 
									and	b.nr_seq_conta		= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
								 
								end if;
							end if;
							 
							if (qt_coparticipacoes_w = 0) then 
								if (current_setting('pls_coparticipacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then 
									vl_unitario_w := current_setting('pls_coparticipacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_unitario;
								elsif (current_setting('pls_coparticipacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then 
									vl_unitario_w := current_setting('pls_coparticipacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_unitario;
								end if;
								 
								if ((coalesce(formas_cobranca_w.vl_item_minimo::text, '') = '') or ((formas_cobranca_w.vl_item_minimo IS NOT NULL AND formas_cobranca_w.vl_item_minimo::text <> '') and vl_unitario_w >= formas_cobranca_w.vl_item_minimo)) and 
								  ((coalesce(formas_cobranca_w.vl_item_maximo::text, '') = '') or ((formas_cobranca_w.vl_item_maximo IS NOT NULL AND formas_cobranca_w.vl_item_maximo::text <> '') and vl_unitario_w <= formas_cobranca_w.vl_item_maximo)) then 
									ie_restricao_w := 'S';
									exit;
								end if;
							end if;
						end loop;
					end;
				end if;
			end;
		end if;
 
		if (pls_regra_copartic_p.ie_guia = 'S' and ie_restricao_w = 'S') then 
			declare 
				 
				qt_regras_guia_w		number(10);
				 
				regras_guia CURSOR(nr_seq_regra_p	pls_regra_copartic.nr_sequencia%type) FOR 
					SELECT	nr_seq_controle_interno, 
						ie_tipo_atend_tiss 
					from	pls_regra_copartic_guia 
					where	nr_seq_regra = nr_seq_regra_p;
				 
			current_setting('pls_coparticipacao_pck.begin')::for 
				 
				select	count(1) 
				into STRICT	qt_regras_guia_w 
				from	pls_regra_copartic_guia 
				where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
				 
				if (qt_regras_guia_w > 0) then 
				 
					ie_restricao_w := 'N';
				 
					for regras_guia_w in regras_guia(pls_regra_copartic_p.nr_sequencia) loop 
						 
						if (regras_guia_w.nr_seq_controle_interno IS NOT NULL AND regras_guia_w.nr_seq_controle_interno::text <> '') then 
							select	count(1) 
							into STRICT	qt_regras_guia_w 
							from	pls_guia_plano			a, 
								pls_controle_interno_guia	b 
							where	a.nr_sequencia			= b.nr_seq_guia 
							and	a.nr_sequencia			= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_guia 
							and	b.nr_seq_controle_interno	= regras_guia_w.nr_seq_controle_interno 
							and	((a.ie_tipo_atend_tiss		= regras_guia_w.ie_tipo_atend_tiss) or (coalesce(regras_guia_w.ie_tipo_atend_tiss::text, '') = ''));
						else 
							select	count(1) 
							into STRICT	qt_regras_guia_w 
							from	pls_guia_plano			a 
							where	a.nr_sequencia			= current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_guia 
							and	((a.ie_tipo_atend_tiss		= regras_guia_w.ie_tipo_atend_tiss) or (coalesce(regras_guia_w.ie_tipo_atend_tiss::text, '') = ''));
						end if;
						 
						if (qt_regras_guia_w > 0) then 
							ie_restricao_w := 'S';
							exit;
						end if;
					end loop;
				end if;
			end;
		end if;
		 
		return ie_restricao_w;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_coparticipacao_pck.get_result_consistencias_regra (pls_regra_copartic_p pls_regra_copartic) FROM PUBLIC;
