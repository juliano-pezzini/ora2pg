-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_coparticipacao_pck.iterar_regras_coparticipacao () AS $body$
DECLARE

		 
		regras_coparticipacao CURSOR(	nr_seq_contrato_p	pls_segurado.nr_seq_contrato%type, 
						nr_seq_intercambio_p	pls_segurado.nr_seq_intercambio%type, 
						nr_seq_plano_p		pls_plano.nr_sequencia%type, 
						ie_tipo_atendimento_p	text, 
						dt_autorizacao_p	timestamp, 
						nr_seq_mot_reemb_p	pls_protocolo_conta.nr_seq_mot_reembolso%type) FOR 
					SELECT	* 
					from	pls_regra_copartic 
					where	((nr_seq_contrato	= nr_seq_contrato_p	and coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio	= nr_seq_intercambio_p	and coalesce(nr_seq_contrato::text, '') = '')) 
					and	ie_tipo_atendimento	= ie_tipo_atendimento_p 
					and (nr_seq_mot_reembolso 	= nr_seq_mot_reemb_p or coalesce(nr_seq_mot_reembolso::text, '') = '') 
					and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p)) 
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
					
union
 
					SELECT	* 
					from	pls_regra_copartic 
					where	nr_seq_contrato = (	select	max(nr_contrato_principal) 
									from	pls_contrato 
									where	nr_sequencia = nr_seq_contrato_p) 
					and	ie_tipo_atendimento	= ie_tipo_atendimento_p 
					and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p)) 
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
					and (nr_seq_mot_reembolso 	= nr_seq_mot_reemb_p or coalesce(nr_seq_mot_reembolso::text, '') = '') 
					and	not exists (	select	1 
								from	pls_regra_copartic 
								where	((nr_seq_contrato	= nr_seq_contrato_p	and coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio	= nr_seq_intercambio_p	and coalesce(nr_seq_contrato::text, '') = '')) 
								and	ie_tipo_atendimento	= ie_tipo_atendimento_p 
								and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p)) 
								and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')) 
					
union
 
					select	* 
					from	pls_regra_copartic 
					where	nr_seq_plano		= nr_seq_plano_p 
					and	ie_tipo_atendimento	= ie_tipo_atendimento_p 
					and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p)) 
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
					and (nr_seq_mot_reembolso 	= nr_seq_mot_reemb_p or coalesce(nr_seq_mot_reembolso::text, '') = '') 
					and	not exists(	select	1 
								from	pls_regra_copartic 
								where	nr_seq_contrato = (	select	max(nr_contrato_principal) 
												from	pls_contrato 
												where	nr_sequencia = nr_seq_contrato_p) 
								and	ie_tipo_atendimento	= ie_tipo_atendimento_p 
								and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p)) 
								and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
								and	not exists (	select	1 
											from	pls_regra_copartic 
											where	((nr_seq_contrato	= nr_seq_contrato_p	and coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio	= nr_seq_intercambio_p	and coalesce(nr_seq_contrato::text, '') = '')) 
											and	ie_tipo_atendimento	= ie_tipo_atendimento_p 
											and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p)) 
											and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')));
					
		--Este cursor deve estar ordenado pelo tipo de apropriação pois deve-se primeiro gerar a apropriação para "valor fixo" , para então gerar apropriação para "percentual sobre a diferença", isto porque o percentual sobre a diferença utiliza a somatória dos valores fixos gerados. 
		apropriacoes_regra CURSOR(	nr_seq_regra_pc		pls_regra_copartic.nr_sequencia%type) FOR 
					SELECT	a.*, 
						b.ie_coparticipacao 
					from	pls_regra_copartic_aprop	a, 
						pls_centro_apropriacao		b 
					where	a.nr_seq_centro_apropriacao	= b.nr_sequencia 
					and	a.nr_seq_regra			= nr_seq_regra_pc 
					order by ie_tipo_apropriacao;
					
		ie_status_mensalidade_w	varchar(1) := pls_coparticipacao_pck.get_ie_status_mensalidade();
	
BEGIN
		for regras_coparticipacao_w in regras_coparticipacao(	current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_contrato, 
									current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_intercambio, 
									coalesce(current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_plano, current_setting('pls_coparticipacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_plano), 
									get_ie_conta_internacao, 
									get_dt_autorizacao, 
									current_setting('pls_coparticipacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_mot_reembolso) loop 
			 
			if (	pls_coparticipacao_pck.obter_se_item_pertence_copart(regras_coparticipacao_w.nr_seq_tipo_coparticipacao) = 'S' and 
				pls_coparticipacao_pck.get_result_consistencias_regra(regras_coparticipacao_w) = 'S') then 
				 
				declare 
					vl_apropriado_w			pls_conta_proc_aprop.vl_apropriado%type;
					current_setting('pls_coparticipacao_pck.vl_fixo_ja_apropriado_w')::pls_conta_proc_aprop.vl_apropriado%type		pls_conta_proc_aprop.vl_apropriado%type	:= 0;
					current_setting('pls_coparticipacao_pck.ie_primeira_coparticipacao_w')::boolean	boolean := true;
					current_setting('pls_coparticipacao_pck.nr_seq_conta_coparticipacao_w')::pls_conta_coparticipacao.nr_sequencia%type	pls_conta_coparticipacao.nr_sequencia%type;
					current_setting('pls_coparticipacao_pck.vl_total_coparticipacao_w')::pls_conta_coparticipacao.vl_coparticipacao%type	pls_conta_coparticipacao.vl_coparticipacao%type := 0;
					current_setting('pls_coparticipacao_pck.vl_total_copartic_conta_w')::pls_conta.vl_coparticipacao%type	pls_conta.vl_coparticipacao%type;
					current_setting('pls_coparticipacao_pck.vl_apropriado_copartic_w')::pls_conta_copartic_aprop.vl_apropriacao%type	pls_conta_copartic_aprop.vl_apropriacao%type := 0;
					current_setting('pls_coparticipacao_pck.qt_itens_cobrar_w')::bigint		number(15);
					
;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_coparticipacao_pck.iterar_regras_coparticipacao () FROM PUBLIC;
