-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_coparticipacao_pck.obter_se_proc_tipo_copartic ( nr_seq_tipo_coparticipacao_p pls_tipo_coparticipacao.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_clinica_p pls_conta.nr_seq_clinica%type, nr_seq_saida_int_p pls_conta.nr_seq_saida_int%type) RETURNS varchar AS $body$
DECLARE

						 
		ie_liberado_w			varchar(1) := 'N';
		ie_grupo_lib_w			varchar(1);
		cd_area_w			bigint;
		cd_especialidade_w		bigint;
		cd_grupo_w			bigint;
		ie_origem_proced_w		bigint;
		
		coparticipacoes_proc CURSOR FOR 
			SELECT	b.nr_seq_grupo_servico, 
				b.ie_liberado 
			from	pls_tipo_coparticipacao a, 
				pls_coparticipacao_proc b 
			where	a.nr_sequencia							= b.nr_seq_tipo_coparticipacao 
			and	a.nr_sequencia							= nr_seq_tipo_coparticipacao_p 
			and	coalesce(b.cd_procedimento, cd_procedimento_p)			= cd_procedimento_p 
			and	coalesce(b.ie_origem_proced, ie_origem_proced_w) 			= ie_origem_proced_w 
			and	((coalesce(b.cd_grupo_proc, cd_grupo_w)				= cd_grupo_w) or (coalesce(b.cd_grupo_proc::text, '') = '' and coalesce(cd_grupo_w::text, '') = '')) 
			and	((coalesce(b.cd_especialidade, cd_especialidade_w)			= cd_especialidade_w) or (coalesce(b.cd_especialidade::text, '') = '' and coalesce(cd_especialidade_w::text, '') = '')) 
			and	((coalesce(b.cd_area_procedimento, cd_area_w)			= cd_area_w) or (coalesce(b.cd_area_procedimento::text, '') = '' and coalesce(cd_area_w::text, '') = '')) 
			and	((coalesce(b.nr_seq_clinica, nr_seq_clinica_p)			= nr_seq_clinica_p) or (coalesce(b.nr_seq_clinica::text, '') = '' and coalesce(nr_seq_clinica_p::text, '') = '')) 
			and	((coalesce(b.nr_seq_saida_int, nr_seq_saida_int_p)			= nr_seq_saida_int_p) or (coalesce(b.nr_seq_saida_int::text, '') = '' and coalesce(nr_seq_saida_int_p::text, '') = '')) 
			and	a.ie_situacao	= 'A';
	
BEGIN
		pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w);
		 
		if (cd_procedimento_p = current_setting('pls_coparticipacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.cd_procedimento) and (ie_origem_proced_p = current_setting('pls_coparticipacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_origem_proced) and (nr_seq_clinica_p = current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_clinica) and (nr_seq_saida_int_p = current_setting('pls_coparticipacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_saida_int) then 
			current_setting('pls_coparticipacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_origem_proced := ie_origem_proced_w;
		end if;
		 
		for coparticipacoes_proc_w in coparticipacoes_proc loop		 
		 
			ie_grupo_lib_w := 'S';
		 
			if (coparticipacoes_proc_w.nr_seq_grupo_servico IS NOT NULL AND coparticipacoes_proc_w.nr_seq_grupo_servico::text <> '') then 
				ie_grupo_lib_w := pls_se_grupo_preco_servico_lib(coparticipacoes_proc_w.nr_seq_grupo_servico, cd_procedimento_p, ie_origem_proced_w);
			end if;
			 
			if (ie_grupo_lib_w = 'S') then 
				ie_liberado_w := coparticipacoes_proc_w.ie_liberado;
				if (ie_liberado_w = 'S') then 
					exit;
				end if;
			end if;
		end loop;
		 
		return ie_liberado_w;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_coparticipacao_pck.obter_se_proc_tipo_copartic ( nr_seq_tipo_coparticipacao_p pls_tipo_coparticipacao.nr_sequencia%type, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_clinica_p pls_conta.nr_seq_clinica%type, nr_seq_saida_int_p pls_conta.nr_seq_saida_int%type) FROM PUBLIC;
