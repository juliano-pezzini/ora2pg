-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE surgery_case_review_pck.generate_case_review (nr_cirurgia_p bigint, nm_usuario_p text ) AS $body$
DECLARE


/*
  Events - EV
  Surgical times - EV
  Anesthetic Agents - AA
  Anesthesia Technique - AT
  Blood Products - BP
  Intakes and Outputs - IO
  Devices - DV
*/
	dt_incio_cirurgia_w		timestamp;
	dt_fim_cirurgia_w		timestamp;
	
	c1 CURSOR(dt_incio_cirurgia_p timestamp, dt_fim_cirurgia_p timestamp) FOR

	SELECT dt_registro,
		   obter_descricao_padrao('EVENTO_CIRURGIA','DS_EVENTO',nr_seq_evento) as ds_evento,
		   ds_observacao,
		   substr(obter_nome_pf(cd_profissional),1,50) nm_profissional,
		   to_char(nr_seq_evento) vl_informacao,
		   nm_usuario,
		   'EV' ie_grupo,
		   upper('EVENTO_CIRURGIA_PACIENTE') tabela,
		   upper('NR_SEQUENCIA') campo,
		   nr_sequencia,
		   null ie_modo_adm,
		   ie_protocolo,
		   nr_protocolo_pepo,
		   null nr_seq_evento,
		   ie_situacao
	  from evento_cirurgia_paciente e
	 where nr_cirurgia = nr_cirurgia_p
	   and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	   and not exists (SELECT 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'EVENTO_CIRURGIA_PACIENTE'
						  and nr_seq_origem = e.nr_sequencia)
	
union

	SELECT coalesce(b.dt_inicio_adm, b.dt_atualizacao) dt_registro,
		   coalesce(substr(obter_desc_material(cd_material),1,40), '-') ds_evento,
		   trim(both ltrim(b.qt_dose || ' ' || substr(obter_dosagem_agente_grid(b.nr_sequencia,2),1,14) || ' - ' || substr(obter_valor_dominio(1568,a.ie_modo_adm),1,14) || CASE WHEN b.ie_aplic_bolus='S' THEN  ' (Bolus)' WHEN b.ie_aplic_bolus='N' THEN  ' ' END , ' -')) ds_observacao,
		   substr(obter_nome_usuario(b.nm_usuario), 1, 50) nm_profissional,
		   to_char(b.qt_dose) vl_informado,
		   b.nm_usuario,
		   CASE WHEN a.ie_tipo=1 THEN 'AA' WHEN a.ie_tipo=2 THEN 'SL' WHEN a.ie_tipo=3 THEN 'MD'  ELSE 'AA' END  ie_grupo,
		   upper('CIRURGIA_AGENTE_ANEST_OCOR') tabela,
		   upper('NR_SEQUENCIA') campo,
		   b.nr_sequencia,
		   a.ie_modo_adm,
		   null ie_protocolo,
		   b.nr_protocolo_pepo,
		   coalesce(b.nr_seq_evento, a.nr_seq_evento) nr_seq_evento,
		   b.ie_situacao
	  FROM agente_anestesico c, cirurgia_agente_anestesico a
LEFT OUTER JOIN cirurgia_agente_anest_ocor b ON (a.nr_sequencia = b.nr_seq_cirur_agente)
WHERE a.ie_tipo IN (1,2,3) and a.nr_seq_agente = c.nr_sequencia AND a.nr_cirurgia = nr_cirurgia_p and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'CIRURGIA_AGENTE_ANEST_OCOR'
						  and nr_seq_origem = b.nr_sequencia)
	
union

	-- Materiais
    SELECT a.dt_atualizacao dt_registro,
		   substr(obter_desc_material(cd_material),1,40) ds_evento,
		   to_char(a.qt_dose) ds_observacao,
		   substr(obter_nome_usuario(a.nm_usuario), 1, 50) nm_profissional,
		   to_char(a.qt_dose) vl_informado,
		   a.nm_usuario,
		   'MT' ie_grupo,
		   upper('CIRURGIA_AGENTE_ANESTESICO') tabela,
		   upper('NR_SEQUENCIA') campo,
		   a.nr_sequencia,
		   a.ie_modo_adm,
		   null ie_protocolo,
		   a.nr_protocolo_pepo,
		   a.nr_seq_evento,
		   a.ie_situacao
	  FROM agente_anestesico c,
		   cirurgia_agente_anestesico a
	 WHERE a.ie_tipo = 4
	   and a.nr_seq_agente = c.nr_sequencia
	   AND a.nr_cirurgia = nr_cirurgia_p
	   and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'CIRURGIA_AGENTE_ANESTESICO'
						  and nr_seq_origem = a.nr_sequencia)
    
union

	select coalesce(b.dt_inicio_adm, b.dt_atualizacao) dt_registro,
		   c.ds_derivado ds_evento,
		   trim(both ltrim(b.qt_dose || ' ' || substr(obter_dosagem_agente_grid(b.nr_sequencia,2),1,14) || ' - ' || substr(obter_valor_dominio(1568,a.ie_modo_adm),1,14) || CASE WHEN b.ie_aplic_bolus='S' THEN  ' (Bolus)' WHEN b.ie_aplic_bolus='N' THEN  ' ' END , ' -')) ds_observacao,
		   substr(obter_nome_usuario(b.nm_usuario), 1, 50) nm_profissional,
		   to_char(b.qt_dose) vl_informado,
		   b.nm_usuario,
		   'BP' ie_grupo,
		   upper('CIRURGIA_AGENTE_ANEST_OCOR') tabela,
		   upper('NR_SEQUENCIA') campo,
		   b.nr_sequencia,
		   ie_modo_adm,
		   null ie_protocolo,
		   b.nr_protocolo_pepo,
		   coalesce(b.nr_seq_evento, a.nr_seq_evento) nr_seq_evento,
		   b.ie_situacao
	  FROM san_derivado c, cirurgia_agente_anestesico a
LEFT OUTER JOIN cirurgia_agente_anest_ocor b ON (a.nr_sequencia = b.nr_seq_cirur_agente)
WHERE a.nr_seq_derivado = c.nr_sequencia and a.nr_cirurgia = nr_cirurgia_p and a.ie_tipo = 5 and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'CIRURGIA_AGENTE_ANEST_OCOR'
						  and nr_seq_origem = b.nr_sequencia)
	 
union

	select 	a.dt_medida dt_registro,
			substr(CASE WHEN b.ie_perda_ganho='G' THEN 'Intake' WHEN b.ie_perda_ganho='P' THEN 'Loss' END ,1,10) ds_evento,
			substr(obter_desc_tipo_perda_ganho(a.nr_seq_tipo),1,150) ds_observacao,
			substr(obter_nome_usuario(a.nm_usuario), 1, 50) nm_profissional,
			to_char(a.qt_volume) vl_informado,
			a.nm_usuario,
			'IO' ie_grupo,
			upper('ATENDIMENTO_PERDA_GANHO') tabela,
			  upper('NR_SEQUENCIA') campo,
			  a.nr_sequencia,
		   null ie_modo_adm,
		   null ie_protocolo,
		   null nr_protocolo_pepo,
		   null nr_seq_evento,
		   b.ie_situacao
	FROM	tipo_perda_ganho c,
		grupo_perda_ganho b,
		atendimento_perda_ganho a
	WHERE	c.nr_sequencia = a.nr_seq_tipo
	and	c.nr_seq_grupo = b.nr_sequencia
	AND	nr_cirurgia = nr_cirurgia_p
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'ATENDIMENTO_PERDA_GANHO'
						  and nr_seq_origem = a.nr_sequencia)
	
union

	SELECT	b.dt_instalacao dt_registro,
		substr(obter_descricao_padrao('DISPOSITIVO','DS_DISPOSITIVO', b.nr_seq_dispositivo),1,400) ds_evento,
		rtrim(rtrim(ltrim(ltrim(trim(both b.ds_titulo || ' - ' ||
		SUBSTR(obter_desc_topografia_dor(b.nr_seq_topografia),1,100) || ' - ' ||
		substr(obter_valor_dominio(1372, b.ie_lado),1,10)), ' - '), ' - '), ' - '), ' - ') ds_observacao,
		substr(obter_nome_usuario(b.nm_usuario), 1, 50) nm_profissional,
		campo_mascara_virgula(SUBSTR((b.qt_hora_permanencia / 24),1,30)) vl_informado,
		b.nm_usuario,
		'DV' ie_grupo,
		upper('ATEND_PAC_DISPOSITIVO') tabela,
		upper('NR_SEQUENCIA') campo,
		b.nr_sequencia,
		null ie_modo_adm,
   		null ie_protocolo,
		null nr_protocolo_pepo,
		null nr_seq_evento,
		'A' ie_situacao
	FROM	atendimento_paciente a,
		  atend_pac_dispositivo b,
		  cirurgia c
	where	a.nr_atendimento	= b.nr_atendimento
	and c.nr_atendimento = a.nr_atendimento
	and b.nr_cirurgia = c.nr_cirurgia
	and	c.nr_cirurgia	= nr_cirurgia_p
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'ATEND_PAC_DISPOSITIVO'
						  and nr_seq_origem = b.nr_sequencia)
	
union

	SELECT
		dt_inicio dt_registro,
		SUBSTR(obter_desc_tecnica_anest(nr_seq_tecnica),1,100) ds_evento,
		null ds_observacao,
		substr(obter_nome_pf(cd_profissional),1,40) nm_profissional,
		to_char(nr_seq_tecnica) vl_infomado,
		nm_usuario,
		'AT' ie_grupo,
		upper('CIRURGIA_TEC_ANESTESICA') tabela,
		upper('NR_SEQUENCIA') campo,
		nr_sequencia,
		null ie_modo_adm,
		null ie_protocolo,
		b.nr_seq_protocolo nr_protocolo_pepo,
		b.nr_seq_evento,
		ie_situacao
	FROM    cirurgia_tec_anestesica b
	WHERE    nr_cirurgia    = nr_cirurgia_p
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'CIRURGIA_TEC_ANESTESICA'
						  and nr_seq_origem = b.nr_sequencia)
	
union

	select
	a.dt_atualizacao dt_registro,
	substr(b.ds_tempo,1,150) ds_evento,
	CONCAT(Obter_Min_Entre_Datas(a.dt_inicio,a.dt_fim,null), ' min.') ds_observacao,
	substr(obter_nome_pf(a.cd_profissional),1,255) nm_profissional,
	to_char(b.ds_tempo) vl_informado,
	b.nm_usuario,
	'EV' ie_grupo,
	upper('TEMPO_CIRURGICO_CIRURGIA') tabela,
	upper('NR_SEQUENCIA') campo,
	a.nr_sequencia,
		   null ie_modo_adm,
			   null ie_protocolo,
		   null nr_protocolo_pepo,
		   null nr_seq_evento,
		   'A' ie_situacao
	from
	tempo_cirurgico_cirurgia a,
	tempo_cirurgico b
	where b.nr_sequencia = a.nr_seq_tempo
	and nr_cirurgia    = nr_cirurgia_p
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'TEMPO_CIRURGICO_CIRURGIA'
						  and nr_seq_origem = a.nr_sequencia)
    
union
							
	select
		b.dt_inicio dt_registro, 
		substr(Obter_Desc_Prescr_Proc_J(CD_PROCEDIMENTO,IE_ORIGEM_PROCED, nr_seq_proc_interno),1,240) ds_evento, 
		b.ds_observacao,
		obter_nome_pf(cd_medico_exec) nm_profissional,
		null vl_informado,
		nm_usuario,
		'EP' ie_grupo,
		upper('PRESCR_PROCEDIMENTO') tabela,
		upper('NR_SEQUENCIA') campo,
		b.nr_sequencia,
		null ie_modo_adm,
		null ie_protocolo,
		null nr_protocolo_pepo,
		null nr_seq_evento,
		'A' ie_situacao
    from 
    prescr_procedimento b
    where 
    nr_prescricao = (select max(x.nr_prescricao) from cirurgia x where nr_cirurgia = nr_cirurgia_p)
	and (b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '')
    and not exists (select 1 
                     from revisao_cirurgia a
                        where nr_cirurgia = nr_cirurgia_p 
                          and UPPER(ie_tabela_referencia) = UPPER('PRESCR_PROCEDIMENTO') 
                          and nr_seq_origem = b.nr_sequencia)
	
union

    SELECT DISTINCT
		a.DT_RESULTADO dt_registro,
		substr(obter_desc_exame_lab(b.nr_seq_exame,null,null,null),1,255) ds_evento,
		rtrim(ltrim(coalesce(b.qt_resultado, '') || b.ds_unidade_medida || ' - ' || coalesce(b.ds_resultado, '') || wheb_mensagem_pck.get_texto(1129742)||': '||  coalesce(b.ds_referencia, ''), ' - '), '('||wheb_mensagem_pck.get_texto(1129742) || ': )') ds_observacao,
		substr(obter_nome_usuario(a.nm_usuario), 1, 50) nm_profissional,
		coalesce(to_char(b.qt_resultado), b.ds_resultado) vl_informado,
		a.nm_usuario,
		'EP' ie_grupo,
		upper('EXAME_LAB_RESULT_ITEM') tabela,
		upper('NR_SEQ_RESULTADO') campo,
		b.nr_seq_resultado nr_sequencia,
		null ie_modo_adm,
		null ie_protocolo,
		null nr_protocolo_pepo,
		null nr_seq_evento,
		'A' ie_situacao
    FROM
        material_exame_lab      d,
        grupo_exame_lab         c,
        exame_laboratorio       e,
        exame_lab_result_item   b,
        exame_lab_resultado     a,
		prescr_medica			pm,
		prescr_procedimento		pp
    WHERE a.nr_atendimento = (select max(x.nr_atendimento) from cirurgia x where nr_cirurgia = nr_cirurgia_p)
		AND pm.nr_prescricao = pp.nr_prescricao
        AND a.nr_seq_resultado = b.nr_seq_resultado
        AND coalesce(ie_grid_pep, 'S') = 'S'
        AND b.nr_seq_exame = e.nr_seq_exame
        AND e.nr_seq_grupo = c.nr_sequencia		
        AND pm.nr_prescricao = a.nr_prescricao
        AND pp.nr_sequencia = b.nr_seq_prescr
        and d.nr_sequencia = obter_mat_exame_lab_prescr(pm.nr_prescricao, pp.nr_sequencia, 1)
		and a.dt_resultado between dt_incio_cirurgia_p and dt_fim_cirurgia_p
		and not exists (select 1 
                     from revisao_cirurgia x
                        where nr_cirurgia = nr_cirurgia_p 
                          and UPPER(ie_tabela_referencia) = UPPER('EXAME_LAB_RESULT_ITEM') 
                          and nr_seq_origem = b.nr_seq_resultado)

union

    SELECT  DISTINCT
		a.DT_RESULTADO dt_registro,
		substr(obter_desc_exame_lab(b.nr_seq_exame,null,null,null),1,255) ds_evento,
		rtrim(ltrim(coalesce(b.qt_resultado, '') || b.ds_unidade_medida || ' - ' || coalesce(b.ds_resultado, '') || wheb_mensagem_pck.get_texto(1129742)||': '||  coalesce(b.ds_referencia, ''), ' - '), '('||wheb_mensagem_pck.get_texto(1129742) || ': )') ds_observacao,
		substr(obter_nome_usuario(a.nm_usuario), 1, 50) nm_profissional,
		coalesce(to_char(b.qt_resultado), b.ds_resultado) vl_informado,
		a.nm_usuario,
		'EP' ie_grupo,
		upper('EXAME_LAB_RESULT_ITEM') tabela,
		upper('NR_SEQ_RESULTADO') campo,
		b.nr_seq_resultado nr_sequencia,
		null ie_modo_adm,
		null ie_protocolo,
		null nr_protocolo_pepo,
		null nr_seq_evento,
		'A' ie_situacao
    FROM exame_laboratorio e, grupo_exame_lab c, exame_lab_resultado a, exame_lab_result_item b
LEFT OUTER JOIN material_exame_lab d ON (b.nr_seq_material = d.nr_sequencia)
WHERE a.nr_atendimento = (select max(x.nr_atendimento) from cirurgia x where nr_cirurgia = nr_cirurgia_p) AND a.nr_seq_resultado = b.nr_seq_resultado AND coalesce(ie_grid_pep, 'S') = 'S' AND b.nr_seq_exame = e.nr_seq_exame AND e.nr_seq_grupo = c.nr_sequencia AND coalesce(a.nr_prescricao::text, '') = '' AND (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') AND obter_se_lib_nivel_atencao(a.ie_nivel_atencao, 15, a.nm_usuario, a.nr_prescricao) = 'S'  and a.dt_resultado between dt_incio_cirurgia_p and dt_fim_cirurgia_p and not exists (select 1 
                     from revisao_cirurgia x
                        where nr_cirurgia = nr_cirurgia_p 
                          and UPPER(ie_tabela_referencia) = UPPER('EXAME_LAB_RESULT_ITEM') 
                          and nr_seq_origem = b.nr_seq_resultado)
	 
union

    select dt_posicao,
		   SUBSTR(coalesce(obter_valor_dominio(1552,ie_posicao), obter_valor_dominio(8664,ie_posicao)),1,40) as ds_evento,
		   ds_justificativa,
		   substr(obter_nome_pf(cd_profissional),1,50) nm_profissional,
		   to_char(ie_posicao) vl_informacao,
		   nm_usuario,
		   'PS' ie_grupo,
		   upper('POSICAO_CIRURGIA') tabela,
		   upper('NR_SEQUENCIA') campo,
		   nr_sequencia,
		   null ie_modo_adm,
		   null ie_protocolo,
		   null nr_protocolo_pepo,
		   null nr_seq_evento,
		   ie_situacao
	  from posicao_cirurgia e
	  where nr_cirurgia = nr_cirurgia_p
	   --and nvl(ie_situacao,'A') = 'A'
	   and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'POSICAO_CIRURGIA'
						  and nr_seq_origem = e.nr_sequencia)
    
union

    select dt_liberacao,
		   substr(obter_funcao_medico(IE_FUNCAO),1,80) as ds_evento,
		   nm_participante ds_observacao,
		   nm_participante nm_profissional,
		   to_char(cd_pessoa_fisica) vl_informacao,
		   nm_usuario,
		   'ST' ie_grupo,
		   upper('CIRURGIA_PARTICIPANTE') tabela,
		   upper('NR_SEQUENCIA') campo,
		   nr_sequencia,
		   null ie_modo_adm,
		   null ie_protocolo,
		   null nr_protocolo_pepo,
		   null nr_seq_evento,
		   ie_situacao
	  from cirurgia_participante e
	  where nr_cirurgia = nr_cirurgia_p
	   and (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	   and not exists (select 1
						 from revisao_cirurgia
						where nr_cirurgia = nr_cirurgia_p
						  and ie_tabela_referencia = 'CIRURGIA_PARTICIPANTE'
						  and nr_seq_origem = e.nr_sequencia)
	ORDER BY	2,3;

	
BEGIN
	
select coalesce(dt_inicio_real,clock_timestamp()), coalesce(dt_fim_cirurgia,clock_timestamp())
  into STRICT dt_incio_cirurgia_w, dt_fim_cirurgia_w
  from cirurgia where nr_cirurgia = nr_cirurgia_p;

		for r1 in c1(dt_incio_cirurgia_w, dt_fim_cirurgia_w) loop
		  insert into revisao_cirurgia(
				 nr_sequencia,
				 dt_atualizacao,
				 nm_usuario,
				 dt_atualizacao_nrec,
				 nm_usuario_nrec,
				 ie_grupo,
				 ds_informacao,
		   ds_observacao,
				 vl_informacao,
				 dt_registro,
				 nm_usuario_reg,
				 dt_liberacao,
				 nm_usuario_lib,
		   	 ie_tabela_referencia,
				 ie_campo_referencia,
				 nr_seq_origem,
				 ie_status,
				 nr_cirurgia,
				 ie_situacao,
				 ie_modo_adm,
				 ie_protocolo,
				 nr_seq_evento, 
				 nr_protocolo_pepo
				 )
			values (
			nextval('revisao_cirurgia_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r1.ie_grupo,
			r1.ds_evento,
			r1.ds_observacao,
			r1.vl_informacao,
			r1.dt_registro,
			r1.nm_usuario,
			r1.dt_registro,
			r1.nm_usuario,
			r1.tabela,
			coalesce(r1.campo,'NR_SEQUENCIA'),
			r1.nr_sequencia,
			'A',
			nr_cirurgia_p,
			r1.ie_situacao,
			r1.ie_modo_adm,
			r1.ie_protocolo, 
			r1.nr_seq_evento, 
			r1.nr_protocolo_pepo
			
				 );
		end loop;

	commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE surgery_case_review_pck.generate_case_review (nr_cirurgia_p bigint, nm_usuario_p text ) FROM PUBLIC;
