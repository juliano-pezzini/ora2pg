-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	  -- end generate_data_hcp_pkg.insert_dataset(); 

  
  


CREATE OR REPLACE PROCEDURE generate_data_hcp_pkg.obtain_hcp_file_name (dt_extract_date_p timestamp, nr_seq_batch_p bigint, nm_usuario_p text, nm_filetype_p text, cd_estabelecimento_p bigint, nr_file_seq_p INOUT bigint, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

    cd_estabelecimento_w estabelecimento.cd_estabelecimento%TYPE;
    cd_facility_number_w pessoa_juridica.cd_facility_code%TYPE;
    ds_collection_year_w varchar(16);
    nr_seq_hcp_file_w    hcp_files.nr_sequencia%TYPE;
    ds_initial_gen_w     varchar(4);
    nm_filename_w        hcp_files.ds_file_name%TYPE;
    ds_erro_w            varchar(2000);
    nr_seq_log_w         bigint;
    v_errm               varchar(100 );
    nr_test              bigint;
    nr_extract_seq_w     qhapdc_rule_filename.nr_extract_seq%TYPE;
    nr_seq_file_w        qhapdc_rule_filename.nr_sequencia%TYPE;
    cd_externo_w         convenio.cd_externo%TYPE;
    cd_convenio_w        hcp_batch_sending.cd_convenio%Type;
	
	
BEGIN
  
      /* eight-digit facility number */
 
		SELECT	coalesce(max(pj.cd_facility_code), '00000000') facility 
		INTO STRICT	cd_facility_number_w 
		FROM	pessoa_juridica pj, 
				estabelecimento es 
		WHERE	es.cd_estabelecimento = cd_estabelecimento_p
		and		es.cd_cgc = pj.cd_cgc  LIMIT 1;

      /* collection year */
 
		SELECT ( To_char(dt_initial_generation, 'YYYY') 
			   || To_char(Add_months(dt_initial_generation, 12), 'YYYY') ) 
		INTO STRICT   ds_collection_year_w 
		FROM   hcp_batch_sending 
		WHERE  nr_sequencia = nr_seq_batch_p;

		SELECT To_char(dt_initial_generation, 'YYYY') 
		INTO STRICT   ds_initial_gen_w 
		FROM   hcp_batch_sending 
		WHERE  nr_sequencia = nr_seq_batch_p;

		SELECT nextval('qhapdc_rule_filename_seq') 
		INTO STRICT   nr_seq_file_w 
		;
	  
	  /* create the filename */
 
		if (nm_filetype_p = 'PHDB') then

			/* collection year and month */
 
			SELECT ( To_char(dt_initial_ref, 'MM') 
				   || To_char(dt_initial_ref, 'YYYY') ) 
			INTO STRICT   ds_collection_year_w 
			FROM   hcp_batch_sending 
			WHERE  nr_sequencia = nr_seq_batch_p;

			SELECT Substr(Lpad(To_char(cd_facility_number_w), 8, '0'), 1, 8)
				 || '_' 
				 || nm_filetype_p 
				 || '_' 
				 || ds_collection_year_w 
				 || '.txt' 
			INTO STRICT   nm_filename_w 
			;
		
		else

			/* Date range selected from Application */
 
			SELECT 	To_char(dt_initial_ref, 'MMyyyy'),
				cd_convenio
			INTO STRICT	ds_collection_year_w,
				cd_convenio_w
			from	hcp_batch_sending
			where	nr_sequencia = nr_seq_batch_p;

			if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
				select  coalesce(max(b.cd_externo),'')
				into STRICT    cd_externo_w
				from    hcp_batch_sending a, convenio b
				where   a.cd_convenio = b.cd_convenio
				and     a.nr_sequencia = nr_seq_batch_p;
			else
				select	substr(b.ds_classificacao,1,3)
				into STRICT  	cd_externo_w
				from	classificacao_convenio b , hcp_batch_sending c
				where 	c.cd_convenio_group = b.nr_sequencia
				and     c.nr_sequencia = nr_seq_batch_p;
			end if;


			SELECT Substr(Lpad(To_char(cd_facility_number_w), 8, '0'), 1, 8)
				|| '_'
				|| nm_filetype_p
				|| '_'
				|| cd_externo_w
				|| '_'
				|| ds_collection_year_w
				|| '.txt'
			INTO STRICT   nm_filename_w
			;

		end if;

		SELECT nextval('hcp_files_seq')
		INTO STRICT   nr_seq_hcp_file_w 
		;

		INSERT INTO qhapdc_rule_filename(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_start_ref, 
				nr_extract_seq, 
				dt_extraction) 
		VALUES (nextval('qhapdc_file_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_extract_seq_w, 
				dt_extract_date_p );

		/* insert file */
 
		INSERT INTO hcp_files(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				ds_file_name, 
				nr_file_batch_seq) 
		VALUES (nr_seq_hcp_file_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nm_filename_w, 
				nr_seq_batch_p );

		nr_file_seq_p := nr_seq_hcp_file_w;

		returned_value_p := 1;

		other_exception_p := NULL;
	EXCEPTION 
	WHEN data_exception OR unique_violation OR invalid_cursor_state THEN 
	v_errm := Substr(SQLERRM, 1, 100);

	returned_value_p := 0;

	other_exception_p := v_errm;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_data_hcp_pkg.obtain_hcp_file_name (dt_extract_date_p timestamp, nr_seq_batch_p bigint, nm_usuario_p text, nm_filetype_p text, cd_estabelecimento_p bigint, nr_file_seq_p INOUT bigint, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;
