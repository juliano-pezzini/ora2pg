-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE generate_data_hcp_pkg.insert_dataset (nr_seq_batch_p bigint, nr_seq_arquivo_p bigint, ie_dataset_p text, nm_usuario_p text, nr_atendimento_p bigint, nr_seq_dataset_p INOUT bigint, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

	 nr_seq_dataset_w           hcp_dataset_send.nr_sequencia%TYPE;
	 nr_atendimento_w           atendimento_paciente.nr_atendimento%TYPE := NULL;
	 nr_interno_conta_w         conta_paciente.nr_interno_conta%TYPE := NULL;
	 nr_seq_nota_fiscal_w       nota_fiscal.nr_sequencia%TYPE := NULL;
	 nr_seq_atend_prev_alta_w   atend_previsao_alta.nr_sequencia%TYPE := NULL;
	 nr_seq_atend_alta_w        atendimento_alta.nr_sequencia%TYPE := NULL;
	 nr_seq_arquivo_w           hcp_files.nr_sequencia%TYPE;
	 nr_cd_pessao_fisicia_w     pessoa_fisica.cd_pessoa_fisica%TYPE;
	 nr_cd_plano_convenio_w     atend_categoria_convenio.cd_plano_convenio%TYPE;
	 nr_cd_usuario_convenio_w
	 atend_categoria_convenio.cd_usuario_convenio%TYPE;
	 nr_discharge_date_w        atendimento_paciente.dt_alta%TYPE;
	 patient_care_dept_w        atend_paciente_unidade.cd_setor_atendimento%TYPE;
	 basic_care_unit_w          atend_paciente_unidade.cd_unidade_basica%TYPE;
	 entry_date_w               atend_paciente_unidade.dt_entrada_unidade%TYPE;
	 nr_atendimento_admission_w atendimento_paciente.nr_atendimento%TYPE;
	 v_errm                     varchar(100 );
		-- HCP / PHDB variables -- 

	 nr_atendimento_hcp_w       hcp_segment_data.nr_atendimento%TYPE;
	 cd_insurer_id_w            hcp_segment_data.cd_insurer%TYPE;
	 payer_identifier           hcp_segment_data.cd_insurer%TYPE :='OT';
	 cd_insurer_membership_w    hcp_segment_data.cd_insurer_membership%TYPE;
	 nm_family_name_hcp_w       hcp_segment_data.nm_family_name%TYPE;
	 nm_given_name_hcp_w        hcp_segment_data.nm_given_name%TYPE;
	 dt_dob_w                   hcp_segment_data.dt_dob%TYPE;
	 cd_postal_code_w           hcp_segment_data.cd_postal_code%TYPE;
	 dt_admission_w             hcp_segment_data.dt_admission%TYPE;
	 dt_discharge_w             hcp_segment_data.dt_discharge%TYPE;
	 ie_gender_w                hcp_segment_data.ie_gender%TYPE;
	 cd_hosp_type_w             hcp_segment_data.cd_hosp_type%TYPE;
	 nr_icu_days_w              hcp_segment_data.nr_icu_days%TYPE;
	 nr_icu_hours_w             hcp_segment_data.nr_icu_hours%TYPE;
	 nr_psyc_care_days_w        hcp_segment_data.nr_psyc_care_days%TYPE;
	 cd_drg_w                   hcp_segment_data.cd_drg%TYPE;
	 cd_drg_version_w           hcp_segment_data.cd_drg_version%TYPE;
	 dt_admission_time_w        hcp_segment_data.dt_admission_time%TYPE;
	 ie_adm_urgency_w           hcp_segment_data.ie_adm_urgency%TYPE;
	 cd_trnsfr_hosp_w           hcp_segment_data.cd_trnsfr_hosp%TYPE;
	 cd_care_type_w             hcp_segment_data.cd_care_type%TYPE;
	 ie_src_ref_w               hcp_segment_data.ie_src_ref%TYPE;
	 ie_discharge_reason_w      hcp_segment_data.ie_discharge_reason%TYPE;
	 ie_contract_patient_w      hcp_segment_data.ie_contract_patient%TYPE;
	 ie_mental_health_w         hcp_segment_data.ie_mental_health%TYPE;
	 ie_palliative_care_w       hcp_segment_data.ie_palliative_care%TYPE;
	 ie_readm_w                 hcp_segment_data.ie_readm_28%TYPE;
	 ie_theatre_visit_w         hcp_segment_data.ie_theatre_visit%TYPE;
	 nr_birth_weight_w          hcp_segment_data.nr_birth_weight%TYPE;
	 nr_vent_hrs_w              hcp_segment_data.nr_vent_hrs%TYPE;
	 ie_sepa_home_w             hcp_segment_data.ie_sepa_mode%TYPE;
	 nr_sep_time_w              hcp_segment_data.nr_sep_time%TYPE;
	 nr_leave_days_w            hcp_segment_data.nr_leave_days%TYPE;
	 cd_trnsfr_hosp_to_w        hcp_segment_data.cd_trnsfr_hosp_to%TYPE;
	 nr_nc_days_of_stay_w       hcp_segment_data.nr_nc_days_of_stay%TYPE;
	 nr_home_care_days_w        hcp_segment_data.nr_home_care_days%TYPE;
	 cd_main_diag_w             hcp_segment_data.cd_main_diag%TYPE;
	 cd_additonal_diag_w        hcp_segment_data.cd_addi_diag%TYPE;
	 cd_procedure_w             hcp_segment_data.cd_procedure%TYPE;
	 ie_day_status_w            hcp_segment_data.ie_day_status%TYPE;
	 cd_main_mbs_w              hcp_segment_data.cd_main_mbs%TYPE;
	 cd_mbs_date_w              hcp_segment_data.cd_mbs_date%TYPE;
	 nr_min_in_ot_w             hcp_segment_data.nr_min_in_ot%TYPE;
	 cd_second_mbs_w            hcp_segment_data.cd_second_mbs%TYPE;
	 vl_accom_charge_w          hcp_segment_data.vl_accom_charge%TYPE;
	 vl_theatre_charge_w        hcp_segment_data.vl_theatre_charge%TYPE;
	 vl_ward_charge_w           hcp_segment_data.vl_ward_charge%TYPE;
	 vl_icu_charge_w            hcp_segment_data.vl_icu_charge%TYPE;
	 vl_pros_chrg_w             hcp_segment_data.vl_pros_chrg%TYPE;
	 vl_phar_chrg_w             hcp_segment_data.vl_phar_chrg%TYPE;
	 vl_bundles_chrg_w          hcp_segment_data.vl_bundle_chrg%TYPE;
	 vl_othr_chrg_w             hcp_segment_data.vl_othr_chrg%TYPE;
	 nr_mrn_w                   hcp_segment_data.nr_mrn%TYPE;
	 cd_misc_srvc_w             hcp_segment_data.cd_misc_srvc%TYPE;
	 vl_hmcare_chrg_w           hcp_segment_data.vl_hmcare_chrg%TYPE;
	 vl_scn_chrg_w              hcp_segment_data.vl_scn_chrg%TYPE;
	 vl_ccu_chrg_w              hcp_segment_data.vl_ccu_chrg%TYPE;
	 nr_scn_hrs_w               hcp_segment_data.nr_scn_hrs%TYPE;
	 nr_ccu_hrs_w               hcp_segment_data.nr_ccu_hrs%TYPE;
	 nr_scn_days_w              hcp_segment_data.nr_scn_days%TYPE;
	 nr_ccu_days_w              hcp_segment_data.nr_ccu_days%TYPE;
	 nr_newborn_days_w          hcp_segment_data.nr_newborn_days%TYPE;
	 dt_hhc_start_w             hcp_segment_data.dt_hhc_start%TYPE;
	 dt_hhc_end_w               hcp_segment_data.dt_hhc_end%TYPE;
	 nr_patv_care_days_w        hcp_segment_data.nr_paltv_care_days%TYPE;
		---SNAP--- 

	 cd_usuario_convenio_w
	 atend_categoria_convenio.cd_usuario_convenio%TYPE;
	 cd_externo_w               convenio.cd_externo%TYPE;
	 dt_alta_w                  atendimento_paciente.dt_alta%TYPE;
	 ie_episode_type_w          hcp_snap_seg_data.ie_episode_type%TYPE;
	 nm_family_name_w           hcp_snap_seg_data.nm_last_name%TYPE;
	 nm_given_name_w            hcp_snap_seg_data.nm_first_name%TYPE;
	 dt_nascimento_w            pessoa_fisica.dt_nascimento%TYPE;
	 ie_sexo_w                  smallint;
	 cd_cep_w                   compl_pessoa_fisica.cd_cep%TYPE;
	 dt_entrada_w               atendimento_paciente.dt_entrada%TYPE;
	 cd_procedimento_w          procedimento_paciente.cd_procedimento%TYPE;
	 dt_previsto_alta_w         atendimento_paciente.dt_previsto_alta%TYPE;
	 qt_pontuacao_w             escala_mif.qt_pontuacao%TYPE;
	 cd_episode_start_w         hcp_snap_seg_data.cd_episode_start%TYPE;
	 cd_episode_end_w           hcp_snap_seg_data.cd_episode_end%TYPE;
	 inter_hos                  smallint := 9;
	 mental_health              smallint := 9;
	 readmission                smallint := 8;
	 unplanned_theater          smallint := 2;
	 leave                      smallint := 0000;
	 home_care                  smallint := 0000;
	 qualified_days_count       integer := 00000;
	 counts                     bigint;
	 misc_codes                 varchar(200 ) := NULL;
	 codes                      varchar(200 );
	 care_type                  varchar(3) :='10';WITH RECURSIVE cte AS (



	 
		c_patient_visit_num CURSOR( codes text ) FOR 
		SELECT Regexp_substr(codes, '[^,]+', 1, LEVEL) AS misc_codes 
		 
		(Regexp_substr(codes, '[^,]+', 1, LEVEL) IS NOT NULL AND (Regexp_substr(codes, '[^,]+', 1, LEVEL))::text <> '')  UNION ALL


 
	 
		c_patient_visit_num CURSOR( codes text ) FOR 
		SELECT Regexp_substr(codes, '[^,]+', 1, LEVEL) AS misc_codes 
		 
		(Regexp_substr(codes, '[^,]+', 1, LEVEL) IS NOT NULL AND (Regexp_substr(codes, '[^,]+', 1, LEVEL))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
;
	 misc_codes_val             c_patient_visit_num%ROWTYPE;
	
	
BEGIN 

		SELECT Count(*) 
		INTO STRICT   counts 
		FROM   hcp_assessment_data 
		WHERE  nr_atendimento = nr_atendimento_p;

		IF ( counts > 0 )THEN 
		
			select	coalesce(cd_inter_hospital, 9) , 
					coalesce(cd_mental_health_status, 9) , 
					coalesce(nr_readmission_days, 8),
					coalesce(cd_unplanned_theatre, 2),
					coalesce(nr_total_leave_days, 0000) ,
					coalesce(cd_num_day_hosp, 0000),
					coalesce(nr_quaday_newborns, 00000) ,
					coalesce(cd_payer_identifier, 'OT'),
					coalesce(cd_care_type, '10')
			into STRICT	inter_hos,
					mental_health,
					readmission,
					unplanned_theater,
					leave,
					home_care,
					qualified_days_count,
					payer_identifier,
					care_type
			FROM   hcp_assessment_data 
			WHERE  nr_atendimento = nr_atendimento_p  LIMIT 1;
			
		END IF;

		OPEN c_patient_visit_num(codes);

		LOOP 
		FETCH c_patient_visit_num INTO misc_codes_val;
		EXIT WHEN NOT FOUND; /* apply on c_patient_visit_num */

			IF ( coalesce(misc_codes::text, '') = '' )THEN 
				misc_codes := Rpad(misc_codes_val.misc_codes, 11, ' ');
			ELSE 
				misc_codes := Concat(misc_codes, Rpad(misc_codes_val.misc_codes, 11, ' '));
			END IF;
		END LOOP;

		CLOSE c_patient_visit_num;

		SELECT nextval('hcp_dataset_send_seq') 
		INTO STRICT   nr_seq_dataset_w 
		;

		INSERT INTO hcp_dataset_send(nr_sequencia, 
					nm_usuario, 
					dt_atualizacao, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nr_seq_file, 
					ie_dataset, 
					nr_atendimento) 
		VALUES (nr_seq_dataset_w, 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nr_seq_arquivo_p, 
					ie_dataset_p, 
					nr_atendimento_p );

		nr_seq_dataset_p := nr_seq_dataset_w;

		IF ( ie_dataset_p = 'HCP' or ie_dataset_p = 'PHDB') THEN 
		
		SELECT substr(CASE WHEN ie_dataset_p='HCP' THEN ac.cd_usuario_convenio WHEN ie_dataset_p='PHDB' THEN NULL END ,1,15), /*Insurer  Membership Identifier*/
 
				substr((SELECT cd_externo FROM   convenio a WHERE  a.cd_convenio = ac.cd_convenio),1,3),/* Insurer Identifier*/
 
				substr(CASE WHEN ie_dataset_p='HCP' THEN Parse_person_name(pf.nr_seq_person_name, 'FN') WHEN ie_dataset_p='PHDB' THEN NULL END ,1,20),/*Given name */
 
				substr(CASE WHEN ie_dataset_p='HCP' THEN Parse_person_name(pf.nr_seq_person_name, 'LN') WHEN ie_dataset_p='PHDB' THEN NULL END ,1,28),/*Family name */
 
				pf.dt_nascimento,/*date of birth */
 
				Substr(( CASE WHEN(SELECT y.sg_pais  FROM   compl_pessoa_fisica x, pais y 								WHERE  x.cd_pessoa_fisica = pf.cd_pessoa_fisica 								AND x.nr_seq_pais = y.nr_sequencia  LIMIT 1)='AU' THEN (SELECT get_info_end_endereco(max(cpf.nr_seq_pessoa_endereco),'CODIGO_POSTAL','C') FROM compl_pessoa_fisica cpf WHERE cpf.cd_pessoa_fisica = pf.cd_pessoa_fisica)  ELSE 8888 END  ), 1, 4) postal_code ,/*postal code */
 
				CASE WHEN pf.ie_sexo='M' THEN  1 WHEN pf.ie_sexo='F' THEN  2 WHEN pf.ie_sexo='I' THEN  3  ELSE 9 END   gender,    /*gender */
 
				ap.dt_entrada,/* admission date */
 
				coalesce(pf.dt_obito, ap.dt_alta)  separation_date,/*Separation Date*/
 
				2,/*hospital type. This has been hard coded for SATH */
 
				substr(coalesce(get_days_hours_by_classif(ap.nr_atendimento, 4, 'D'), 0),1,3),          /*icu days*/
 
				substr(coalesce(get_days_hours_by_classif(ap.nr_atendimento, 4, 'H'), 0),1,4),          /*icu hours */
 
				substr(Obtain_dept_stay_days(1, ap.nr_atendimento, 'S'),1,5),          /*Total Psychiatric Care Days */
 
				
				substr((SELECT Obter_dados_drg(ep.nr_seq_drg_proc, 'C') 
				FROM   episodio_paciente_drg ep 
				WHERE  ep.nr_atendimento = ap.nr_atendimento
				and ie_situacao='A'),1,4)  drg , /* DRG*/

				
				CASE WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='n.a' THEN  '' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='4.1' THEN '41' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='4.2' THEN '42' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='5.0' THEN '50' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='5.1' THEN '51' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='5.2' THEN '52' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.0' THEN '60' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.1' THEN '61' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.2' THEN '62' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.3' THEN '63' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.4' THEN '64' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.5' THEN '65' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.6' THEN '66' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.7' THEN '67' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.8' THEN '68' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='6.9' THEN '69' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='7.0' THEN '70' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='8.0' THEN '80' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='9.0' THEN '90' WHEN(SELECT obtain_drg_version(ep.nr_atendimento, ep.nr_seq_episodio_paciente)				FROM   episodio_paciente_drg ep 				WHERE  ep.nr_atendimento = ap.nr_atendimento				and ie_situacao='A')='10.0' THEN 'A0'  ELSE '' END   drg_edition, /*DRG Edition*/

				
				ap.dt_entrada   adm_time,  /* Admission Time */

				substr(ap. ie_carater_inter_sus,1,1),						/* urgency of admission */
 
				Substr((SELECT  case when position('AUSTRALIA' in upper(get_complete_address_desc(a.nr_seq_pessoa_endereco, null, null, a.cd_cgc, null, 'Y'))) >0 
								then a.cd_cnes 
								else 'OVERSEAS' end 
					 FROM   pessoa_juridica a 
					 WHERE  a.cd_cgc = ap.cd_cgc_indicacao  LIMIT 1), 1, 8)   FACILITY_NUM,/*Provider Number of Hospital from which transferred*/
 
							
				substr(coalesce(Get_conversion_qhapdc('HCP_CARE_TYPE', NULL, 9561, care_type, 'I'), '80'),1,3) care_type ,/*Care Type*/

				substr(coalesce(Get_conversion_qhapdc('HCP_REF_SOURCE', 'PROCEDENCIA', NULL, ap.cd_procedencia, 'I'), 9),1,1),/*Source of Referral*/
 
				substr(coalesce(Get_conversion_qhapdc('HCP_DISCHARGE_INTENTION', 'MOTIVO_ALTA', NULL, ap.cd_motivo_alta, 'I'), 0),1,1),   /*Discharge Intention on Admission*/
 
				substr(inter_hos,1,1),  /* Inter-hospital contracted patient.*/
 
				substr(mental_health,1,1),  /*Mental Health Legal Status. */

				
				substr((SELECT Count(*) 
				FROM   diagnostico_doenca 
				WHERE  nr_atendimento = ap.nr_atendimento 
				AND cd_doenca = 'Z51.5'),1,1) palliative_care_status,/* Palliative Care Status */
 
				substr(readmission,1,1), /* readmission with 28 days.  */

				substr(unplanned_theater,1,1),  /* Unplanned Theatre Visit During Episode.*/

				
				substr(coalesce((SELECT qt_peso_sala_parto 
				  FROM   nascimento 
				  WHERE  nr_atendimento = 31856  LIMIT 1), 0),1,4),/* birth weight. */
 
				substr(Get_ventilation_hours(ap.nr_atendimento),1,4),   /*Hours of Mechanical Ventilation */
 
				substr(ap.cd_motivo_alta,1,2),/*Mode of Separation*/
 
				substr((Replace(To_char(coalesce(pf.dt_obito, ap.dt_alta), 'HH24:MI'), ':' , ''))::numeric ,1,4)  sep_time,     /*Separation Time*/
 
				substr(leave,1,4),     /*Total Leave Days */

				
				substr((SELECT  case when position('AUSTRALIA' in upper(get_complete_address_desc(a.nr_seq_pessoa_endereco, null, null, a.cd_cgc, null, 'Y'))) >0 
								then a.cd_cnes 
								else 'OVERSEAS' end 
				FROM   pessoa_juridica a 
				WHERE  a.cd_cgc = (SELECT x.cd_cgc 
								 FROM   atendimento_transf x 
								 WHERE  x.nr_sequencia = ap.nr_atendimento)),1,8)  TRANS_HOSP,/*Provider Number of Hospital to which transferred*/
 
				substr(0,1,4),/* Non-Certified Days of Stay */
 
				substr(home_care,1,4),      /*Number of days of hospital-in-the-home care*/
 
				substr(Obter_cid_princ_atendimento(ap.nr_atendimento),1,6),          /*Principal Diagnosis*/
 
				substr(Get_additional_diagnosis(ap.nr_atendimento, 100),1,294),          /*Additional Diagnosis*/
 
				substr(Obtain_procedures_encounter(ap.nr_atendimento),1,350),/*Procedure*/
 
				CASE WHEN coalesce(Floor(ap.dt_alta - ap.dt_entrada), 0)=0 THEN  1  ELSE 2 END ,    /*Same-day Status*/
 
				substr((SELECT a.cd_procedimento_princ 
				FROM   procedimento_paciente a 
				WHERE  a.nr_sequencia = ap.nr_atendimento 
				AND (a.cd_procedimento_princ IS NOT NULL AND a.cd_procedimento_princ::text <> '') 
				AND a.ie_origem_proced = 20  LIMIT 1),1,14)   principal_mbs,/*Principal MBS Item Number*/
 
				
				substr((SELECT a.dt_procedimento_princ 
				FROM   procedimento_paciente a 
				WHERE  a.nr_sequencia = ap.nr_atendimento 
				AND (a.cd_procedimento_princ IS NOT NULL AND a.cd_procedimento_princ::text <> '') 
				AND a.ie_origem_proced = 20  LIMIT 1),1,8)   principal_mbs_dt,/*Principal MBS Item Date*/
 
				
				
				substr((SELECT SUM(nr_min_duracao_real) 
				FROM   cirurgia 
				WHERE  nr_atendimento = ap.nr_atendimento 
				GROUP  BY nr_atendimento),1,4)   total_ops_mins,/* Minutes of operating theatre time*/
 
				
				substr(( Obtain_mbs_numbers(ap.nr_atendimento) ),1,126)   secondary_mbs,/*Secondary MBS Item numbers*/
 
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
					 procedimento p 
				WHERE  pp.nr_atendimento = ap.nr_atendimento 
					 AND ( pp.cd_procedimento = p.cd_procedimento 
						   AND pp.ie_origem_proced = p.ie_origem_proced ) 
					 AND p.ie_classificacao = '3'),1,9),/*Accommodation Charge*/
 
					 
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
					 setor_atendimento sa, 
					 procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
					 AND pp.nr_atendimento = ap.nr_atendimento 
					 AND ( pp.cd_procedimento = p.cd_procedimento 
						   AND pp.ie_origem_proced = p.ie_origem_proced ) 
					 AND p.ie_classificacao = '1' 
					 AND sa.cd_classif_setor = '2'),1,9),/*Theatre Charge*/
 
					 
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
					 setor_atendimento sa, 
					 procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
					 AND pp.nr_atendimento = ap.nr_atendimento 
					 AND ( pp.cd_procedimento = p.cd_procedimento 
						   AND pp.ie_origem_proced = p.ie_origem_proced ) 
					 AND p.ie_classificacao = '1' 
					 AND 1 = CASE WHEN Get_conversion_qhapdc('HCP_DEPART_TYPE', 'SETOR_ATENDIMENTO', NULL, sa.cd_setor_atendimento, 'I') =4 THEN  1   ELSE -99 END  ),1,9),/*Labour Ward Charge*/
 
					 
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
				setor_atendimento sa, 
				procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
				AND pp.nr_atendimento = ap.nr_atendimento 
				AND ( pp.cd_procedimento = p.cd_procedimento 
				AND pp.ie_origem_proced = p.ie_origem_proced ) 
				AND p.ie_classificacao = '1' 
				AND 1 = CASE WHEN Get_conversion_qhapdc('HCP_DEPART_TYPE', 'SETOR_ATENDIMENTO', NULL, sa.cd_setor_atendimento, 'I')=5 THEN  1   ELSE -99 END  ),1,9),/*Intensive Care Unit Charge*/
 
				
				substr((SELECT coalesce(SUM(mp.vl_material), 0) 
				FROM   material_atend_paciente mp 
				WHERE  mp.nr_atendimento = ap.nr_atendimento 
				AND mp.ie_opme = 'S'),1,9),/*Prosthesis Charge*/
 
				
				substr((SELECT coalesce(SUM(a.vl_material), 0) 
				FROM   material_atend_paciente a, 
				local_estoque b 
				WHERE  b.ie_tipo_local = 1 
				AND a.nr_atendimento = ap.nr_atendimento 
				AND a.cd_local_estoque = b.cd_local_estoque),1,9), /* pharmacy charges. */
 
				
				0,/*Other charges.  */
 
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp 
				WHERE  pp.nr_atendimento = ap.nr_atendimento),1,9),/* Bundled Charges */
 
	--0, 

				substr(pf.nr_prontuario,1,20),/*Medical Record Number*/
 
				substr( misc_codes,1,110 ),/*Miscellaneous Service Codes*/
 
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
				setor_atendimento sa, 
				procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
				AND pp.nr_atendimento = ap.nr_atendimento 
				AND ( pp.cd_procedimento = p.cd_procedimento 
				AND pp.ie_origem_proced = p.ie_origem_proced ) 
				AND p.ie_classificacao = '1' 
				AND sa.cd_classif_setor = '8'),1,9), /*Hospital-in-the-home care Charges*/
 
				
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
				setor_atendimento sa, 
				procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
				AND pp.nr_atendimento = ap.nr_atendimento 
				AND ( pp.cd_procedimento = p.cd_procedimento 
				AND pp.ie_origem_proced = p.ie_origem_proced ) 
				AND p.ie_classificacao = '1' 
				AND 1 = CASE WHEN Get_conversion_qhapdc('HCP_DEPART_TYPE','SETOR_ATENDIMENTO', NULL, sa.cd_setor_atendimento, 'I')=2 THEN  1   ELSE -99 END  ),1,9),/*Special Care Nursery Charges.  */
 
				
				substr((SELECT coalesce(SUM(pp.vl_procedimento), 0) 
				FROM   procedimento_paciente pp, 
				setor_atendimento sa, 
				procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
				AND pp.nr_atendimento = ap.nr_atendimento 
				AND ( pp.cd_procedimento = p.cd_procedimento 
				AND pp.ie_origem_proced = p.ie_origem_proced ) 
				AND p.ie_classificacao = '1' 
				AND 1 = CASE WHEN Get_conversion_qhapdc('HCP_DEPART_TYPE','SETOR_ATENDIMENTO', NULL, sa.cd_setor_atendimento, 'I')=3 THEN  1   ELSE -99 END  ),1,9),/*Coronary Care Unit Charges.*/
 
				
				substr(( Obtain_dept_stay_days(2, ap.nr_atendimento, 'N') ),1,4), /*Special Care Nursery hours.*/
 
				substr(( Obtain_dept_stay_days(3, ap.nr_atendimento, 'N') ),1,4), /*Coronary Care Unit hours. */
 
				substr(Obtain_dept_stay_days(2, ap.nr_atendimento, 'S'),1,3), /*Special Care Nursery days. */
 
				substr(Obtain_dept_stay_days(3, ap.nr_atendimento, 'S'),1,3), /*Coronary CareUnit days*/
 
				substr(qualified_days_count,1,5),/*Number of Qualified Days for Newborns. */
 
				(SELECT ap.dt_entrada 
				FROM   	procedimento_paciente pp, 
						setor_atendimento sa, 
						procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
				AND pp.nr_atendimento = ap.nr_atendimento 
				AND ( pp.cd_procedimento = p.cd_procedimento 
				AND pp.ie_origem_proced = p.ie_origem_proced ) 
				AND p.ie_classificacao = '1' 
				AND sa.cd_classif_setor = '8'), /*Hospital-in-the-home care Commencement Date */
 
				
				(SELECT ap.dt_alta 
				FROM   	procedimento_paciente pp, 
						setor_atendimento sa, 
						procedimento p 
				WHERE  pp.cd_setor_atendimento = sa.cd_setor_atendimento 
				AND pp.nr_atendimento = ap.nr_atendimento 
				AND ( pp.cd_procedimento = p.cd_procedimento 
				AND pp.ie_origem_proced = p.ie_origem_proced ) 
				AND p.ie_classificacao = '1' 
				AND sa.cd_classif_setor = '8'), /*Hospital-in-the-home care Completed Date */
 
				
				substr((SELECT ( ap.dt_alta - ap.dt_entrada ) + 1 
				FROM   atendimento_paciente ap 
				WHERE  (Obter_cid_princ_atendimento(ap.nr_atendimento) IS NOT NULL AND (Obter_cid_princ_atendimento(ap.nr_atendimento))::text <> '') 
				AND Obter_cid_princ_atendimento(ap.nr_atendimento) = 'Z51.5'),1,4) /*Palliative Care Days */
 
		INTO STRICT  	cd_insurer_membership_w, 
				cd_insurer_id_w, 
				nm_given_name_hcp_w, 
				nm_family_name_hcp_w, 
				dt_dob_w, 
				cd_postal_code_w, 
				ie_gender_w, 
				dt_admission_w, 
				dt_discharge_w, 
				cd_hosp_type_w, 
				nr_icu_days_w, 
				nr_icu_hours_w, 
				nr_psyc_care_days_w, 
				cd_drg_w, 
				cd_drg_version_w, 
				dt_admission_time_w, 
				ie_adm_urgency_w, 
				cd_trnsfr_hosp_w, 
				cd_care_type_w, 
				ie_src_ref_w, 
				ie_discharge_reason_w, 
				ie_contract_patient_w, 
				ie_mental_health_w, 
				ie_palliative_care_w, 
				ie_readm_w, 
				ie_theatre_visit_w, 
				nr_birth_weight_w, 
				nr_vent_hrs_w, 
				ie_sepa_home_w, 
				nr_sep_time_w, 
				nr_leave_days_w, 
				cd_trnsfr_hosp_to_w, 
				nr_nc_days_of_stay_w, 
				nr_home_care_days_w, 
				cd_main_diag_w, 
				cd_additonal_diag_w, 
				cd_procedure_w, 
				ie_day_status_w, 
				cd_main_mbs_w, 
				cd_mbs_date_w, 
				nr_min_in_ot_w, 
				cd_second_mbs_w, 
				vl_accom_charge_w, 
				vl_theatre_charge_w, 
				vl_ward_charge_w, 
				vl_icu_charge_w, 
				vl_pros_chrg_w, 
				vl_phar_chrg_w, 
				vl_othr_chrg_w, 
				vl_bundles_chrg_w, 
				nr_mrn_w, 
				cd_misc_srvc_w, 
				vl_hmcare_chrg_w, 
				vl_scn_chrg_w, 
				vl_ccu_chrg_w, 
				nr_scn_hrs_w, 
				nr_ccu_hrs_w, 
				nr_scn_days_w, 
				nr_ccu_days_w, 
				nr_newborn_days_w, 
				dt_hhc_start_w, 
				dt_hhc_end_w, 
				nr_patv_care_days_w 
		FROM   	atendimento_paciente ap, 
				pessoa_fisica pf, 
				atend_categoria_convenio ac 
		WHERE	pf.cd_pessoa_fisica = ap.cd_pessoa_fisica 
		AND		ap.nr_atendimento = ac.nr_atendimento 
		AND		ap.nr_atendimento = nr_atendimento_p 
		AND		(pf.nr_seq_person_name IS NOT NULL AND pf.nr_seq_person_name::text <> '')  LIMIT 1;

	  INSERT INTO hcp_segment_data(nr_sequencia, 
				   dt_atualizacao, 
				   nm_usuario, 
				   dt_atualizacao_nrec, 
				   nm_usuario_nrec, 
				   nr_seq_dataset, 
				   cd_insurer_membership, 
				   cd_insurer, 
				   nr_atendimento, 
				   nm_family_name, 
				   nm_given_name, 
				   dt_dob,--- 
				   cd_postal_code, 
				   dt_admission, 
				   dt_discharge, 
				   ie_gender, 
				   cd_hosp_type, 
				   nr_icu_days, 
				   nr_icu_hours, 
				   nr_psyc_care_days, 
				   cd_drg, 
				   cd_drg_version, 
				   dt_admission_time, 
				   ie_adm_urgency, 
				   cd_trnsfr_hosp, 
				   cd_care_type, 
				   ie_src_ref,--- 
				   ie_discharge_reason, 
				   ie_contract_patient, 
				   ie_mental_health, 
				   ie_palliative_care, 
				   ie_readm_28, 
				   ie_theatre_visit, 
				   nr_birth_weight, 
				   nr_vent_hrs, 
				   ie_sepa_mode, 
				   nr_sep_time, 
				   nr_leave_days, 
				   cd_trnsfr_hosp_to, 
				   nr_nc_days_of_stay,--40 
				   nr_home_care_days, 
				   cd_main_diag, 
				   cd_addi_diag, 
				   cd_procedure,--- 
				   ie_day_status, 
				   cd_main_mbs, 
				   cd_mbs_date, 
				   nr_min_in_ot, 
				   cd_second_mbs, 
				   vl_accom_charge, 
				   vl_theatre_charge, 
				   vl_ward_charge, 
				   vl_icu_charge, 
				   vl_pros_chrg, 
				   vl_phar_chrg, 
				   vl_othr_chrg, 
				   nr_mrn, 
				   cd_misc_srvc, 
				   vl_hmcare_chrg, 
				   vl_bundle_chrg, 
				   vl_scn_chrg, 
				   vl_ccu_chrg, 
				   nr_scn_hrs, 
				   nr_ccu_hrs, 
				   nr_scn_days, 
				   nr_ccu_days, 
				   nr_newborn_days, 
				   dt_hhc_start, 
				   dt_hhc_end, 
				   nr_paltv_care_days) 
	  VALUES ( nextval('hcp_segment_data_seq'), 
				   clock_timestamp(), 
				   nm_usuario_p, 
				   clock_timestamp(), 
				   NULL, 
				   nr_seq_dataset_w, 
				   cd_insurer_membership_w, 
				   (CASE WHEN ie_dataset_p='PHDB' THEN  payer_identifier WHEN ie_dataset_p='HCP' THEN  cd_insurer_id_w  ELSE cd_insurer_id_w END ), 
				   nr_atendimento_p, 
				   nm_family_name_hcp_w, 
				   nm_given_name_hcp_w, 
				   dt_dob_w,--- 
				   cd_postal_code_w, 
				   dt_admission_w, 
				   dt_discharge_w, 
				   ie_gender_w, 
				   cd_hosp_type_w, 
				   nr_icu_days_w, 
				   nr_icu_hours_w, 
				   nr_psyc_care_days_w, 
				   cd_drg_w, 
				   cd_drg_version_w, 
				   dt_admission_time_w, 
				   ie_adm_urgency_w, 
				   cd_trnsfr_hosp_w, 
				   cd_care_type_w, 
				   ie_src_ref_w,---- 
				   ie_discharge_reason_w, 
				   ie_contract_patient_w, 
				   ie_mental_health_w, 
				   ie_palliative_care_w, 
				   ie_readm_w, 
				   ie_theatre_visit_w, 
				   nr_birth_weight_w, 
				   nr_vent_hrs_w, 
				   ie_sepa_home_w, 
				   nr_sep_time_w, 
				   nr_leave_days_w, 
				   cd_trnsfr_hosp_to_w, 
				   nr_nc_days_of_stay_w, 
				   nr_home_care_days_w, 
				   cd_main_diag_w, 
				   cd_additonal_diag_w, 
				   cd_procedure_w,-- 
				   ie_day_status_w, 
				   cd_main_mbs_w, 
				   cd_mbs_date_w, 
				   nr_min_in_ot_w, 
				   cd_second_mbs_w, 
				   vl_accom_charge_w, 
				   vl_theatre_charge_w, 
				   vl_ward_charge_w, 
				   vl_icu_charge_w, 
				   vl_pros_chrg_w, 
				   vl_phar_chrg_w, 
				   vl_othr_chrg_w, 
				   nr_mrn_w, 
				   cd_misc_srvc_w, 
				   vl_hmcare_chrg_w, 
				   vl_bundles_chrg_w, 
				   vl_scn_chrg_w, 
				   vl_ccu_chrg_w, 
				   nr_scn_hrs_w, 
				   nr_ccu_hrs_w, 
				   nr_scn_days_w, 
				   nr_ccu_days_w, 
				   nr_newborn_days_w, 
				   dt_hhc_start_w, 
				   dt_hhc_end_w, 
				   nr_patv_care_days_w );

			returned_value_p := 1;

			other_exception_p := NULL;
		END IF;

		IF ( ie_dataset_p = 'SNAP' ) THEN 
		
			SELECT 	a.cd_usuario_convenio,--Insurer Membership Identifier 
				(SELECT Max(cd_externo) FROM   convenio f WHERE  f.cd_convenio = a.cd_convenio) cd_externo, -- Insurer Identifier 
				C.nr_atendimento,--AN-SNAP Identifier 
				CASE WHEN coalesce(Floor(c.dt_alta - c.dt_entrada), 0)=0 THEN  'S'  ELSE 'O' END  EPISODE_TYPE, 	-- Episode Type 
				Parse_person_name(b.nr_seq_person_name, 'FN')        FIRST_NAME, 
				Parse_person_name(b.nr_seq_person_name, 'LN')        LAST_NAME, ---Family Name 
				b.dt_nascimento,-- Date of Birth 
				CASE WHEN b.ie_sexo='M' THEN  1 WHEN b.ie_sexo='F' THEN  2 WHEN b.ie_sexo='O' THEN  3 END                             IE_SEXO,-- Sex 
				CASE WHEN(SELECT y.sg_pais FROM   compl_pessoa_fisica d, 	pais y, pessoa_fisica b 						WHERE  d.cd_pessoa_fisica = b.cd_pessoa_fisica 						AND d.nr_seq_pais = y.nr_sequencia  LIMIT 1)='AU' THEN (SELECT d.cd_cep FROM compl_pessoa_fisica d, pessoa_fisica b 						WHERE d.cd_pessoa_fisica = b.cd_pessoa_fisica  LIMIT 1) coalesce(WHEN(SELECT y.sg_pais FROM   compl_pessoa_fisica d, 	pais y, pessoa_fisica b 						WHERE  d.cd_pessoa_fisica = b.cd_pessoa_fisica 						AND d.nr_seq_pais = y.nr_sequencia  LIMIT 1)::text, '') = '' THEN  9999  ELSE 8888 END  CD_CEP, --Postcode - Australian 
				c.dt_entrada,--Admission Date 
				
				(SELECT Count(cd_procedimento) 
				FROM   procedimento_paciente E 
				WHERE  E.nr_atendimento = A.nr_atendimento) ASSESSMENT_INDICATOR , 	--Assessment Only Indicator 
				c.dt_previsto_alta,--Discharge plan date 
				
				(SELECT g.qt_pontuacao 
				FROM   escala_mif g 
				WHERE  g.nr_sequencia = (SELECT Max(g.nr_sequencia) 
						   FROM   escala_mif g 
						   WHERE 
				g.nr_atendimento = a.nr_atendimento)) 
							 DISCHARGE_FIM, --Discharge FIM Item Scores 
				c.dt_alta,-- Separation Date 
				
				(SELECT g.qt_pontuacao 
				FROM   escala_mif g 
				WHERE  g.nr_sequencia = (SELECT Min(g.nr_sequencia) FROM   escala_mif g WHERE g.nr_atendimento = a.nr_atendimento)) ADMISSION_FIM,	--Admission FIM Item Scores 
				Get_conversion_qhapdc('HPC_EPISODE_START','PROCEDENCIA', NULL, c.CD_PROCEDENCIA , 'I') EPISODE_START,--- EPISODE START
				Get_conversion_qhapdc('HPC_EPISODE_END','MOTIVO_ALTA', NULL, c.cd_motivo_alta , 'I') EPISODE_END
			INTO STRICT	cd_usuario_convenio_w, 
					cd_externo_w, 
					nr_atendimento_w, 
					ie_episode_type_w, 
					nm_given_name_w, 
					nm_family_name_w, 
					dt_nascimento_w,
					ie_sexo_w, 
					cd_cep_w, 
					dt_entrada_w, 
					cd_procedimento_w, 
					dt_previsto_alta_w, 
					qt_pontuacao_w, 
					dt_alta_w, 
					qt_pontuacao_w,
					cd_episode_start_w,
					cd_episode_end_w
			FROM atendimento_paciente c, atend_categoria_convenio a, pessoa_fisica b
LEFT OUTER JOIN compl_pessoa_fisica d ON (b.cd_pessoa_fisica = d.cd_pessoa_fisica)
WHERE c.nr_atendimento = nr_atendimento_p AND c.cd_pessoa_fisica = b.cd_pessoa_fisica  AND (b.nr_seq_person_name IS NOT NULL AND b.nr_seq_person_name::text <> '')   LIMIT 1;

			INSERT INTO hcp_snap_seg_data(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						cd_membership_id, 
						cd_insurer_id, 
						nr_adm_fim_score, 
						cd_snap, 
						nm_last_name, 
						nm_first_name, 
						dt_dob, 
						cd_zip_code, 
						ie_gender, 
						dt_admission, 
						dt_separation, 
						ie_episode_type, 
						nr_dis_fim_score, 
						cd_primary_impairment, 
						cd_assesmt_indic, 
						cd_snap_class, 
						cd_snap_version, 
						dt_rehab_plan, 
						dt_discharge_plan, 
						nr_seq_dataset,
						cd_episode_start,
						cd_episode_end)
			VALUES (nextval('hcp_snap_seg_data_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						NULL, 
						cd_usuario_convenio_w, 
						cd_externo_w, 
						qt_pontuacao_w, 
						nr_atendimento_w, 
						nm_given_name_w, 
						nm_family_name_w, 
						dt_nascimento_w, 
						cd_cep_w, 
						ie_sexo_w, 
						dt_entrada_w, 
						dt_alta_w, 
						ie_episode_type_w, 
						qt_pontuacao_w, 
						NULL, 
						cd_procedimento_w, 
						NULL, 
						NULL, 
						NULL, 
						dt_previsto_alta_w, 
						nr_seq_dataset_w,
						cd_episode_start_w,
						cd_episode_end_w);
		END IF;

			returned_value_p := 1;

			other_exception_p := NULL;
	EXCEPTION 
	WHEN no_data_found THEN 
			 RAISE NOTICE 'error inside package';
			 RAISE NOTICE '%', SQLERRM;
			 nr_atendimento_w := -99; WHEN data_exception OR unique_violation OR
									  invalid_cursor_state THEN 
			 v_errm := Substr(SQLERRM, 1, 100);
			 returned_value_p := 0;
			 other_exception_p := v_errm; WHEN OTHERS THEN
			 v_errm := Substr(SQLERRM, 1, 100);
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_data_hcp_pkg.insert_dataset (nr_seq_batch_p bigint, nr_seq_arquivo_p bigint, ie_dataset_p text, nm_usuario_p text, nr_atendimento_p bigint, nr_seq_dataset_p INOUT bigint, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;
