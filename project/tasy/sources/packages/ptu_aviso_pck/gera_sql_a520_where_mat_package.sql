-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_aviso_pck.gera_sql_a520_where_mat ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, ie_join_mat_p text, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o SQL, parte do WHERE relacionada ao material.

		Existe o parametro ie_join_mat_p, que se estiver marcado como N, sera considerado o where
		com base na conta, senao sera considerado que a query principal ja esta a nivel de material
		
		Isto e util para os casos onde necessita validar tanto proc quanto mat ao mesmo tempo, e em certos
		casos a consulta fica mais performatica, por conta da cardinalidade
		
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_sql_w	varchar(32000);


qt_ie_status_w		integer;
qt_ie_tipo_despesa_w	integer;
in_ie_status_w		varchar(4000);
in_ie_tipo_despesa_w	varchar(4000);

mat_w 		alias_p.material%type;
cta_w 		alias_p.conta%type;
ds_and_w	varchar(10);


BEGIN

	-- quantidade de regras status

select	max((	select	count(1)
		from	ptu_regra_aviso_cob_mat		x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.ie_status IS NOT NULL AND x.ie_status::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_ie_status,
	-- quantidade de regras tipo de despesa

	max((	select	count(1)
		from	ptu_regra_aviso_cob_mat		x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.ie_tipo_despesa IS NOT NULL AND x.ie_tipo_despesa::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_ie_tipo_despesa,
	-- Levante das regras por status

	max((WITH RECURSIVE cte AS (
select	substr(''''||t.ie_status,3)||''''
		from (	select	x.ie_status,
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_status) seq
			from	ptu_regra_aviso_cob_mat		x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_status IS NOT NULL AND x.ie_status::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_status, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
select	c. || ''',' || substr(''''||t.ie_status,3)||''''
		from (	select	x.ie_status, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_status) seq
			from	ptu_regra_aviso_cob_mat		x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_status IS NOT NULL AND x.ie_status::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_status, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq)

) SELECT * FROM cte WHERE seq	= cnt;
)) in_ie_status,
	-- Levante das regras por status

	max((WITH RECURSIVE cte AS (
(select	substr(''''||t.ie_tipo_despesa,3)||''''
		from (	select	x.ie_tipo_despesa, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_despesa) seq
			from	ptu_regra_aviso_cob_mat		x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_tipo_despesa IS NOT NULL AND x.ie_tipo_despesa::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_tipo_despesa, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
(select	c. || ''',' || substr(''''||t.ie_tipo_despesa,3)||''''
		from (	select	x.ie_tipo_despesa, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_despesa) seq
			from	ptu_regra_aviso_cob_mat		x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_tipo_despesa IS NOT NULL AND x.ie_tipo_despesa::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_tipo_despesa, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq))

) SELECT * FROM cte WHERE seq	= cnt;
)) in_ie_tipo_despesa
into STRICT	qt_ie_status_w,
	qt_ie_tipo_despesa_w,
	in_ie_status_w,
	in_ie_tipo_despesa_w
from	ptu_lote_aviso	a
where	a.nr_sequencia	= dados_a520_p.nr_seq_lote;

ds_sql_w	:= '';
ds_and_w	:= '';
mat_w 		:= alias_p.material;
cta_w 		:= alias_p.conta;

-- carrega conforme regras e nivel do filtros

if (ie_join_mat_p = 'N') then

	if (qt_ie_status_w > 0) then
	
		ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_conta_mat	x ' || pls_util_pck.enter_w ||
						'		where	x.nr_seq_conta	= '||cta_w||'.nr_sequencia ' || pls_util_pck.enter_w ||
						'		and	x.ie_status	in ('||in_ie_status_w||')) ' || pls_util_pck.enter_w;
		ds_and_w := 'and	';
	end if;
	
	if (qt_ie_tipo_despesa_w > 0) then
	
		ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_conta_mat		x ' || pls_util_pck.enter_w ||
						'		where	x.nr_seq_conta		= '||cta_w||'.nr_sequencia ' || pls_util_pck.enter_w ||
						'		and	x.ie_tipo_despesa	in ('||in_ie_tipo_despesa_w||')) ' || pls_util_pck.enter_w;
		ds_and_w := 'and	';
	end if;
	
else

	if (qt_ie_status_w > 0) then
	
		ds_sql_w := ds_sql_w||ds_and_w||mat_w||'.ie_status	in ('||in_ie_status_w||') ' || pls_util_pck.enter_w;
		ds_and_w := 'and	';
	end if;
	
	if (qt_ie_tipo_despesa_w > 0) then
	
		ds_sql_w := ds_sql_w||ds_and_w||mat_w||'.ie_tipo_despesa	in ('||in_ie_tipo_despesa_w||') ' || pls_util_pck.enter_w;
		ds_and_w := 'and	';
	end if;

end if;

return;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_aviso_pck.gera_sql_a520_where_mat ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, ie_join_mat_p text, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
