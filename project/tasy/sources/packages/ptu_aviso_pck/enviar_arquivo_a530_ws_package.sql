-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



-- Enviar arquivo A530



CREATE OR REPLACE PROCEDURE ptu_aviso_pck.enviar_arquivo_a530_ws ( nr_seq_arquivo_p ptu_aviso_glosa_bx.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


req_w			utl_http.req;
res_w			utl_http.resp;
url_w			varchar(100);
ds_resposta_w		varchar(32647);
ds_resposta_original_w	varchar(32647);
ds_parametros_w		varchar(100);
ds_webservice_envio_w	pls_end_webservice_a530.ds_webservice_envio%type;
ds_servlet_w		pls_end_webservice_a530.ds_servlet%type;
ds_erro_w		ptu_fat_baixa_interc.ds_falha%type;

ie_status_w		ptu_aviso_glosa_bx.ie_status%type;

BEGIN


	begin
	
		-- levanta inf do arquivo

		select	max(a.ie_status)
		into STRICT	ie_status_w
		from	ptu_aviso_glosa_bx	a
		where	nr_sequencia		= nr_seq_arquivo_p;
		
		-- somente processa se o status for "Pendente" ou "Falha"

		
		if (ie_status_w in ('1', '4')) then
		
			-- altera para processando

			CALL ptu_aviso_pck.alterar_status_arq_a530(nr_seq_arquivo_p, '2', nm_usuario_p);
			-- importante ter o commit logo em seguida para servir de controle para multiplos usuarios.

			commit;
			
			-- configura o timeout

			utl_http.set_transfer_timeout(180);
			
			-- pega os dados do servlet

			ds_servlet_w		:= ptu_aviso_pck.pls_obter_dados_ws_a530('SV?');
			ds_webservice_envio_w	:= ptu_aviso_pck.pls_obter_dados_ws_a530('CP');
			url_w			:= ds_webservice_envio_w||ds_servlet_w;
			
			-- monta os parametros passados ao servlet

			ds_parametros_w := 'CHAVE='||nr_seq_arquivo_p||';';
			
			-- inicia o contato

			req_w := utl_http.begin_request(url => url_w||ds_parametros_w, method => 'POST');
			-- Parametriza

			utl_http.set_header(req_w, 'user-agent', 'mozilla/4.0');
			utl_http.set_header(r => req_w, name => 'Content-Type', value => 'text/plain;charset=UTF-8');
			utl_http.set_header(r => req_w, name => 'Content-Length', value => length(ds_parametros_w));
			
			-- busca a resposta

			res_w := utl_http.get_response(req_w);
			
			-- navega pelo retorno, a fim de "consumir ele inteiro"

			loop
				utl_http.read_line(res_w, ds_resposta_w);
			end loop;
			
			-- finaliza o contato

			utl_http.end_response(res_w);
			
			-- altera o status conforme retorno

			if (ds_resposta_w = 'OK') then
			
				CALL ptu_aviso_pck.alterar_status_arq_a530(nr_seq_arquivo_p, '3', nm_usuario_p);
				
			else	
			
				CALL ptu_aviso_pck.alterar_status_arq_a530(nr_seq_arquivo_p, '4', nm_usuario_p);
				CALL ptu_inserir_log_arq_cobr_ws(null, nr_seq_arquivo_p, 'Erro:'||ds_resposta_w, nm_usuario_p);
			end if;
			
			-- importante ter o commit logo em seguida para servir de controle para multiplos usuarios.			

			commit;
			
		end if; -- fim processamento
	
	exception
	
		-- pode cair na exception quando o corpo do contato ja foi todo transmitido, gerando o end_of_body, neste caso fazer o tratamento condizente

		when utl_http.end_of_body then
		
			-- finaliza o contato

			utl_http.end_response(res_w);
			-- altera o status para "Concluido"

			CALL ptu_aviso_pck.alterar_status_arq_a530(nr_seq_arquivo_p, '3', nm_usuario_p);
			-- importante ter o commit logo em seguida para servir de controle para multiplos usuarios.			

			commit;
		
		when others then
		
			ds_erro_w	:= substr(sqlerrm(SQLSTATE),1,4000);
			
			-- grava o log

			CALL ptu_inserir_log_arq_cobr_ws(null, nr_seq_arquivo_p, 'Erro:'||ds_erro_w, nm_usuario_p);
			-- altera o status para "Falha"

			CALL ptu_aviso_pck.alterar_status_arq_a530(nr_seq_arquivo_p, '4', nm_usuario_p);
			-- importante ter o commit logo em seguida para servir de controle para multiplos usuarios.			

			commit;
			
			-- finaliza o contato

			utl_http.end_response(res_w);
			
		
	end;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_aviso_pck.enviar_arquivo_a530_ws ( nr_seq_arquivo_p ptu_aviso_glosa_bx.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
