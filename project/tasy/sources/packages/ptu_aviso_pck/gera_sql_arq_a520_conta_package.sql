-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_aviso_pck.gera_sql_arq_a520_conta ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, nr_seq_aviso_protocolo_p ptu_aviso_protocolo.nr_sequencia%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Monta o SQL dinamico para a carga das contas medicas relacionada aos arquivos gerados

		Neste caso e feito um agrupamento conforme o processo da geracao (manual ou webservice).
		Este agrupamento se resume ao arquivo que sera gerado, se ele possui uma conta informada explicita,
		ou apenas o protocolo. Com base nesta informacao sera feito(ou nao) um join e where mais especifico.
		
		
		Como o arquivo e baseado no protocolo (e outros filtros), entende-se que o filtro de protocolo ja esta
		correto e nao precisa aplicar eles novamente, no entanto os filtros do mesmo nivel da conta, como o 
		beneficiario, ou abaixo, como procedimento, estes precisam ser ativados novamente, independente do
		processo de geracao, para garantir a integridade dos filtros
		
		
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

			Devido a possibilidade do usuario configurar a geracao para ser baseada no pos estabelecido OU
			no pagamento(prestador), foi criado um sistema de alias, que vai permitir a mesma query
			se ajustar, diminuindo a duplicacao de codigo.
			
			E importante sempre que for adicionar um campo, verificar o alias e se o campo e compativel
			entre os registros de pos ou pagamento(prestador)

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_sql_w	varchar(32000);
ds_sql_temp_w	varchar(32000);

cta_pos_w	alias_t%type;
cta_w		alias_t%type;
benef_w		alias_t%type;
cong_w		alias_t%type;

BEGIN

-- define os alias, conforme parametrizacao

benef_w	:= alias_p.beneficiario;
cta_w	:= alias_p.conta;
cong_w	:= alias_p.congenere;

-- se for usar o pos

if (dados_a520_p.ie_geracao_aviso_cobr in ('PO', 'PA')) then

	cta_pos_w := alias_p.pos;
else -- se for utilizar o pagamento(prestador)

	cta_pos_w := alias_p.conta;
end if;

ds_sql_w	:=	'select	'||cta_pos_w||'.nr_sequencia nr_seq_conta, '																														|| pls_util_pck.enter_w ||
			'	'||cta_w||'.nr_seq_segurado, '																																|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_guia_referencia nr_guia_principal, '																													|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_guia nr_guia_operadora,  '																														|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_guia_prestador nr_guia_prestador, '																													|| pls_util_pck.enter_w ||
			'	pls_obter_dados_outorgante('||cta_pos_w||'.cd_estabelecimento,''ANS'') cd_registro_ans, '																								|| pls_util_pck.enter_w ||
			'	nvl(nvl('||cta_pos_w||'.dt_autorizacao,ptu_obter_dt_ultima_autor('||cta_pos_w||'.nr_seq_guia)),'||cta_pos_w||'.dt_atendimento_referencia) dt_autorizacao, '																															|| pls_util_pck.enter_w ||
			'	substr(nvl('||cta_pos_w||'.cd_senha_externa,'||cta_pos_w||'.cd_senha),1,20) cd_senha, '																									|| pls_util_pck.enter_w ||
			case	dados_a520_p.ie_geracao_aviso_cobr
				when 'PO' then '	'||cta_pos_w||'.dt_validade_senha, '
				when 'PP' then '	nvl('||cta_pos_w||'.dt_validade_senha_imp, '||cta_pos_w||'.dt_validade_senha) dt_validade_senha, '
				when 'PA' then '	'||cta_pos_w||'.dt_validade_senha, '
			end																																				|| pls_util_pck.enter_w ||
			'	substr(pls_obter_dados_segurado('||cta_pos_w||'.nr_seq_segurado,''CR''),1,17) nr_carteira_benef, '																							|| pls_util_pck.enter_w ||
			'	nvl('||cta_pos_w||'.ie_atend_rn_sala_parto,''N'') ie_atendimento_rn, '																											|| pls_util_pck.enter_w ||
			'	substr(pls_obter_dados_segurado('||cta_pos_w||'.nr_seq_segurado,''N''),1,70) nm_beneficiario, '																								|| pls_util_pck.enter_w ||
			'	substr(pls_obter_dados_segurado('||cta_pos_w||'.nr_seq_segurado,''CNS''),1,15) nr_cns_benef, '																								|| pls_util_pck.enter_w ||
			'	null ie_ident_beneficiario, '																																|| pls_util_pck.enter_w ||
			'	'||cta_w||'.cd_prestador_solic_imp cd_prestador_solicitante, '																												|| pls_util_pck.enter_w ||
			'	decode('||cta_w||'.cd_prestador_solic_imp, null, nvl('||cta_w||'.cd_cpf_prestador_imp, obter_dados_pf(nvl('||cta_w||'.cd_medico_solicitante_imp, '||cta_w||'.cd_medico_solicitante), ''CPF'')), null) cd_cpf_solicitante, '								|| pls_util_pck.enter_w ||
			'	(case when ('||cta_w||'.cd_prestador_solic_imp is null) and ('||cta_w||'.cd_cpf_prestador_imp is null) and ('||cta_w||'.cd_medico_solicitante_imp is null) and ('||cta_w||'.cd_medico_solicitante is null) then '||cta_w||'.cd_cgc_prestador_imp else null end) cd_cnpj_solicitante, '	|| pls_util_pck.enter_w ||
			'	substr(nvl('||cta_w||'.nm_medico_solic_imp, obter_nome_medico(nvl('||cta_w||'.cd_medico_solicitante_imp, '||cta_w||'.cd_medico_solicitante), ''N'')),1,70) nm_profissional_solicitante, '												|| pls_util_pck.enter_w ||
			'	substr(nvl('||cta_w||'.sg_conselho_solic_imp,'||cta_w||'.sg_conselho_solic),1,5) sg_conselho_solicitante, '																						|| pls_util_pck.enter_w ||
			'	'||cta_w||'.nr_crm_solic_imp nr_conselho_solicitante, '																													|| pls_util_pck.enter_w ||
			'	'||cta_w||'.uf_crm_solic_imp sg_uf_solicitante, '																													|| pls_util_pck.enter_w ||
			'	substr('||cta_w||'.cd_cbo_saude_solic_imp,1,6) nr_cbo_solicitante, '																											|| pls_util_pck.enter_w ||
			'	substr('||cta_w||'.nm_prestador_imp,1,70) nm_solicitante, '																												|| pls_util_pck.enter_w ||
			'	substr(nvl('||cta_w||'.cd_cnes_imp,'||cta_w||'.cd_cnes),1,7) cd_cnes_solicitante, '																									|| pls_util_pck.enter_w ||
			'	null dt_solicitacao, '																																	|| pls_util_pck.enter_w ||
			'	decode ('||cta_pos_w||'.ie_carater_internacao, ''U'', ''2'', ''1'') ie_carater_atendimento, '																								|| pls_util_pck.enter_w ||
			case	dados_a520_p.ie_geracao_aviso_cobr
				when 'PO' then '	ptu_somente_caracter_permitido(substr('||cta_pos_w||'.ds_indicacao_clinica,1,500), ''ANSE'') ds_indicacao_clinica, '
				when 'PP' then '	ptu_somente_caracter_permitido(substr(nvl('||cta_pos_w||'.ds_indicacao_clinica_imp, '||cta_pos_w||'.ds_indicacao_clinica),1,500), ''ANSE'') ds_indicacao_clinica, '
				when 'PA' then '	ptu_somente_caracter_permitido(substr('||cta_pos_w||'.ds_indicacao_clinica,1,500), ''ANSE'') ds_indicacao_clinica, '
			end																																				|| pls_util_pck.enter_w ||
			'	nvl('||cta_w||'.cd_prestador_exec_imp,(select p.cd_prestador from pls_prestador p where p.nr_sequencia = '||cta_w||'.nr_seq_prestador_exec )) cd_prestador_executante, '														|| pls_util_pck.enter_w ||
			'	nvl('||cta_w||'.cd_cpf_executor_imp,'||cta_w||'.cd_cpf_exec_compl_imp) cd_cpf_executante, '																								|| pls_util_pck.enter_w ||
			'	'||cta_w||'.cd_cgc_executor_imp cd_cnpj_executante, '																													|| pls_util_pck.enter_w ||
			'	substr('||cta_w||'.nm_medico_executor_imp,1,70) nm_profissional_executante, '																										|| pls_util_pck.enter_w ||
			'	substr(nvl('||cta_w||'.sg_conselho_exec_imp, '||cta_w||'.sg_conselho_exec),1,5) sg_conselho_executante, '																						|| pls_util_pck.enter_w ||
			'	substr(nvl('||cta_w||'.nr_crm_exec_imp,'||cta_w||'.nr_crm_exec),1,15) nr_conselho_executante, '																								|| pls_util_pck.enter_w ||
			'	nvl('||cta_w||'.uf_crm_exec_imp,'||cta_w||'.uf_crm_prest_exec_imp) sg_uf_executante, '																									|| pls_util_pck.enter_w ||
			'	substr(obter_codigo_cbo_saude('||cta_w||'.nr_seq_cbo_saude),1,6) nr_cbo_executante, ' 																									|| pls_util_pck.enter_w ||
			'	substr('||cta_w||'.nm_prestador_exec_imp,1,70) nm_executante, '																												|| pls_util_pck.enter_w ||
			'	substr('||cta_w||'.cd_cnes_executor_imp,1,7) cd_cnes_executante, '																											|| pls_util_pck.enter_w ||
			'	nvl(pls_obter_dados_tipo_atend(nvl('||cta_pos_w||'.nr_seq_tipo_atendimento,'||cta_w||'.nr_seq_tipo_atendimento),''T''),'||cta_w||'.ie_tipo_atendimento_imp) ie_tipo_atendimento, '													|| pls_util_pck.enter_w ||
			case	dados_a520_p.ie_geracao_aviso_cobr
				when 'PO' then '	'||cta_pos_w||'.ie_indicacao_acidente, '
				when 'PP' then '	nvl('||cta_pos_w||'.ie_indicacao_acidente_imp,  '||cta_pos_w||'.ie_indicacao_acidente) ie_indicacao_acidente, '
				when 'PA' then '	'||cta_pos_w||'.ie_indicacao_acidente, '
			end																																				|| pls_util_pck.enter_w ||
			case	dados_a520_p.ie_geracao_aviso_cobr
				when 'PO' then '	'||cta_pos_w||'.ie_tipo_consulta, '
				when 'PP' then '	nvl('||cta_pos_w||'.ie_tipo_consulta_imp, '||cta_pos_w||'.ie_tipo_consulta) ie_tipo_consulta, '
				when 'PA' then '	'||cta_pos_w||'.ie_tipo_consulta, '
			end																																				|| pls_util_pck.enter_w ||
			'	(select max(x.cd_tiss) from pls_motivo_saida x where x.nr_sequencia = '||cta_pos_w||'.nr_seq_saida_int) ie_motivo_encerramento, '															|| pls_util_pck.enter_w ||
			'	ptu_somente_caracter_permitido(substr('||cta_pos_w||'.ds_observacao,1,500), ''ANSE'') ds_observacao, '																							|| pls_util_pck.enter_w ||
			'	0 vl_procedimento, '																																	|| pls_util_pck.enter_w ||
			'	0 vl_diaria, '																																		|| pls_util_pck.enter_w ||
			'	0 vl_taxa, '																																		|| pls_util_pck.enter_w ||
			'	0 vl_material, '																																	|| pls_util_pck.enter_w ||
			'	0 vl_medicamento, '																																	|| pls_util_pck.enter_w ||
			'	0 vl_opme, '																																		|| pls_util_pck.enter_w ||
			'	0 vl_gases, '																																		|| pls_util_pck.enter_w ||
			'	0 vl_total_geral, '																																	|| pls_util_pck.enter_w ||
			'	decode('||cta_pos_w||'.ie_tipo_faturamento, ''P'', ''1'', ''F'', ''2'', ''C'', ''3'', ''T'', ''4'') ie_tipo_faturamento, '																				|| pls_util_pck.enter_w ||
			'	nvl('||cta_pos_w||'.dt_entrada,'||cta_pos_w||'.dt_inicio_faturamento) dt_inicio_faturamento, '																								|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.dt_alta dt_fim_faturamento, '																															|| pls_util_pck.enter_w ||
			'	nvl('||cta_pos_w||'.dt_entrada,'||cta_pos_w||'.dt_inicio_faturamento) hr_inicio_faturamento, '																								|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.dt_alta hr_fim_faturamento, '																														|| pls_util_pck.enter_w ||
			'	(	select	max(x.cd_tiss) '																															|| pls_util_pck.enter_w ||
			'		from	pls_clinica	x '																															|| pls_util_pck.enter_w ||
			'		where	x.nr_sequencia	= '||cta_w||'.nr_seq_clinica) ie_tipo_internacao, '																									|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.ie_regime_internacao, '																															|| pls_util_pck.enter_w ||
			'	null ds_diagnostico, '																																	|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.dt_atendimento_referencia dt_atendimento_ref, '																												|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_medico_solicitante cd_med_solic_pos, '																												|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_medico_executor cd_med_exec_pos, '																													|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_medico_solicitante cd_med_solic_conta, '																												|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.cd_medico_executor cd_med_exec_conta, '																													|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.nr_seq_prestador_exec nr_seq_prest_exec_pos, '																												|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.nr_seq_prestador nr_seq_prest_exec_conta, '																												|| pls_util_pck.enter_w ||
			'	'||cta_pos_w||'.ie_tipo_guia, '																																|| pls_util_pck.enter_w ||
			'	'||cta_w||'.nr_seq_cbo_saude_solic '																															|| pls_util_pck.enter_w ||
			'from	ptu_aviso_arquivo	aa, '																																|| pls_util_pck.enter_w ||
			'	ptu_aviso_protocolo	pp, '																																|| pls_util_pck.enter_w ||
			'	pls_protocolo_conta 	pc, '																																|| pls_util_pck.enter_w; -- como nao vai existir filtro a nivel de protocolo neste caso, nao precisa manter o alias dinamico
			if (dados_a520_p.ie_geracao_aviso_cobr = 'PO') then
					
				ds_sql_w	:= ds_sql_w||	'	pls_conta_pos_cab_v	'||cta_pos_w||', '																									|| pls_util_pck.enter_w;
				
			end if;
			
			if (dados_a520_p.ie_geracao_aviso_cobr = 'PA') then
			
				ds_sql_w	:= ds_sql_w||	'	pls_conta	'||cta_pos_w||', '																									|| pls_util_pck.enter_w;
			
			end if;
			
ds_sql_w := ds_sql_w||	'	pls_conta		'||cta_w||', '																															|| pls_util_pck.enter_w ||
			'	pls_segurado		'||benef_w||', '																														|| pls_util_pck.enter_w ||
			'	pls_congenere		'||cong_w||' '																															|| pls_util_pck.enter_w ||
			'where	aa.nr_sequencia		= pp.nr_seq_arquivo '																														|| pls_util_pck.enter_w;
			-- se for processo WebService, entao e considerado uma conta por arquivo			

			if (dados_a520_p.ie_processo = 'W') then
					
				ds_sql_w	:= ds_sql_w||	'and	'||cta_w||'.nr_sequencia		= aa.nr_seq_conta '																							|| pls_util_pck.enter_w;

			end if;
			
ds_sql_w := ds_sql_w||	'and	'||benef_w||'.nr_sequencia		= '||cta_w||'.nr_seq_segurado '																											|| pls_util_pck.enter_w ||
			'and	pc.nr_sequencia		= '||cta_w||'.nr_seq_protocolo '																												|| pls_util_pck.enter_w ||
			'and	pc.nr_sequencia		= pp.nr_seq_protocolo '																														|| pls_util_pck.enter_w ||
			'and	'||cong_w||'.nr_sequencia		= '||benef_w||'.nr_seq_congenere '																										|| pls_util_pck.enter_w;
			-- so faz o join com o pos se for baseado no pos			

			if (dados_a520_p.ie_geracao_aviso_cobr in ('PO', 'PA')) then
					
				ds_sql_w	:= ds_sql_w||	'and	'||cta_w||'.nr_sequencia		= '||cta_pos_w||'.nr_sequencia'																						|| pls_util_pck.enter_w;

			end if;
			
ds_sql_w := ds_sql_w||	'and	'||benef_w||'.nr_seq_congenere 	= :nr_seq_congenere_p '																													|| pls_util_pck.enter_w ||
			'and	pp.nr_sequencia		= :nr_seq_aviso_protocolo_p '																													|| pls_util_pck.enter_w;
			dados_bind_p := sql_pck.bind_variable(':nr_seq_congenere_p', nr_seq_congenere_p, dados_bind_p);
			dados_bind_p := sql_pck.bind_variable(':nr_seq_aviso_protocolo_p', nr_seq_aviso_protocolo_p, dados_bind_p);
			

			-- se for processo WebService, entao e considerado uma conta por arquivo			

			if (dados_a520_p.ie_processo = 'W') then
					
				ds_sql_w	:= ds_sql_w||	'and	aa.nr_seq_conta is not null '																											|| pls_util_pck.enter_w;

			else
				ds_sql_w	:= ds_sql_w||	'and	aa.nr_seq_conta is null '																											|| pls_util_pck.enter_w;
			end if;			
			
ds_sql_w := ds_sql_w||	'and	not exists	(select	1 '																																|| pls_util_pck.enter_w ||
			'			from	ptu_aviso_conta ac '																														|| pls_util_pck.enter_w ||
			'			where	ac.nr_seq_conta	= '||cta_w||'.nr_sequencia) '																											|| pls_util_pck.enter_w;

			
-- Adiciona agora os filtros da conta, beneficiario e itens


-- Conta

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_cta(dados_a520_p, alias_p, dados_gerais_a520_p, dados_bind_p));

-- beneficiario

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_benef(dados_a520_p, alias_p, dados_gerais_a520_p, dados_bind_p));

-- Procedimento

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_proc(dados_a520_p, alias_p, 'N', dados_gerais_a520_p, dados_bind_p));

-- Material

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_mat(dados_a520_p, alias_p, 'N', dados_gerais_a520_p, dados_bind_p));

-- Geral

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_geral(dados_a520_p, alias_p, 'N', 'N', dados_bind_p));

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_aviso_pck.gera_sql_arq_a520_conta ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, nr_seq_aviso_protocolo_p ptu_aviso_protocolo.nr_sequencia%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
