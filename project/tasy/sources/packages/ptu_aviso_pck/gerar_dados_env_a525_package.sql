-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Gerar dados para enviar o arquivo A525



CREATE OR REPLACE PROCEDURE ptu_aviso_pck.gerar_dados_env_a525 ( nr_seq_arquivo_p ptu_aviso_arquivo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_mens_erro_p text) AS $body$
DECLARE


qt_ret_arquivo_w		integer;
nr_seq_ret_arquivo_w		ptu_aviso_ret_arquivo.nr_sequencia%type;
nr_seq_ret_protocolo_w		ptu_aviso_ret_protocolo.nr_sequencia%type;
nr_seq_ret_guia_w		ptu_aviso_ret_guia.nr_sequencia%type;
nr_seq_aviso_conta_w		ptu_aviso_conta.nr_sequencia%type;

nr_seq_aviso_protocolo_w	ptu_aviso_ret_protocolo.nr_seq_aviso_protocolo%type;
nr_registro_ans_w		ptu_aviso_ret_protocolo.nr_registro_ans%type;
nr_lote_w			ptu_aviso_ret_protocolo.nr_lote%type := null;
dt_envio_lote_w			ptu_aviso_ret_protocolo.dt_envio_lote%type;
cd_prestador_w			ptu_aviso_ret_protocolo.cd_prestador%type;
nr_cpf_prestador_w		ptu_aviso_ret_protocolo.nr_cpf_prestador%type;
cd_cnpj_prestador_w		ptu_aviso_ret_protocolo.cd_cnpj_prestador%type;
nm_prestador_w			ptu_aviso_ret_protocolo.nm_prestador%type;
nr_protocolo_w			ptu_aviso_ret_protocolo.nr_protocolo%type;
vl_total_protocolo_w		ptu_aviso_ret_protocolo.vl_total_protocolo%type;
cd_cnes_prestador_w		ptu_aviso_ret_protocolo.cd_cnes_prestador%type;
vl_total_item_w			ptu_aviso_ret_protocolo.vl_total_protocolo%type;
dt_realizacao_w			ptu_aviso_ret_guia.dt_realizacao%type;
nr_seq_item_tiss_w		ptu_aviso_ret_item.nr_seq_item_tiss%type;	

c01 CURSOR(	nr_seq_aviso_protocolo_pc  ptu_aviso_conta.nr_seq_aviso_protocolo%type ) FOR
	SELECT  nextval('ptu_aviso_ret_guia_seq') nr_seq_ret_guia,
		ac.nr_sequencia nr_seq_guia,
		ac.nr_guia_prestador,
		ac.nr_guia_operadora,
		ac.nr_carteira_benef,
		coalesce(ac.ie_atendimento_rn,'N') ie_atendimento_rn,
		ac.nm_beneficiario,
		ac.nr_cns_benef,
		ac.ie_ident_beneficiario,
		ac.dt_atendimento_ref dt_atendimento_ref,
		aa.dt_transacao dt_transacao,
		coalesce(ac.vl_procedimento,0) + coalesce(ac.vl_diaria,0) + coalesce(ac.vl_taxa,0) + coalesce(ac.vl_medicamento,0) + coalesce(ac.vl_material,0) + coalesce(ac.vl_opme,0) vl_processado
	from	ptu_aviso_conta		ac,
		ptu_aviso_protocolo	ap,
		ptu_aviso_arquivo	aa
	where	aa.nr_sequencia			= ap.nr_seq_arquivo
	and	ap.nr_sequencia			= ac.nr_seq_aviso_protocolo
	and	ac.nr_seq_aviso_protocolo	= nr_seq_aviso_protocolo_pc;
	
c02 CURSOR(	nr_seq_guia_pc		ptu_aviso_conta.nr_sequencia%type ) FOR
	SELECT	nextval('ptu_aviso_ret_item_seq') nr_seq_aviso_proc,
		ap.nr_sequencia nr_seq_aviso_procedimento,
		ap.dt_execucao,
		ap.hr_inicial,
		ap.hr_final,
		ap.cd_tabela,
		ap.cd_proc_envio,
		coalesce(ap.qt_executada,1) qt_executada,
		CASE WHEN ap.cd_despesa='00' THEN '07'  ELSE ap.cd_despesa END  cd_despesa,
		ap.ie_via_acesso,
		ap.ie_tecnica_utilizada,
		ap.tx_reducao_acrescimo,
		coalesce(ap.vl_unitario,0) vl_unitario,
		coalesce(ap.vl_total,0) vl_total,
		ptu_somente_caracter_permitido(coalesce(ap.ds_procedimento,substr(obter_desc_procedimento(ap.cd_proc_envio,null),1,150)),'ANS') ds_procedimento,
		ap.nr_seq_item_tiss
	from	ptu_aviso_procedimento  ap
	where	ap.nr_seq_aviso_conta  = nr_seq_guia_pc;
	
c03 CURSOR(	nr_seq_guia_pc		ptu_aviso_conta.nr_sequencia%type ) FOR
	SELECT	nextval('ptu_aviso_ret_item_seq') nr_seq_aviso_mat,
		am.nr_sequencia nr_seq_aviso_material,
		am.dt_execucao,
		am.hr_inicial,
		am.hr_final,
		am.cd_tabela,
		am.cd_mat_envio,
		am.ds_material,
		coalesce(am.qt_executada,1) qt_executada,
		am.cd_unidade_medida,
		am.cd_despesa,
		am.tx_reducao_acrescimo,
		coalesce(am.vl_unitario,0) vl_unitario,
		coalesce(am.vl_total,0) vl_total,
		am.nr_seq_item_tiss
	from	ptu_aviso_material  am
	where	am.nr_seq_aviso_conta  = nr_seq_guia_pc;

BEGIN
if (nr_seq_arquivo_p IS NOT NULL AND nr_seq_arquivo_p::text <> '') then
	select	count(1)
	into STRICT	qt_ret_arquivo_w
	from	ptu_aviso_ret_arquivo
	where	nr_seq_arquivo  = nr_seq_arquivo_p;

	if (qt_ret_arquivo_w = 0) then
		-- Arquivo A525

		select  nextval('ptu_aviso_ret_arquivo_seq')
		into STRICT  nr_seq_ret_arquivo_w
		;

		insert into ptu_aviso_ret_arquivo(nr_sequencia,		dt_atualizacao,		nm_usuario,
			dt_atualizacao_nrec,	nm_usuario_nrec,	nr_seq_arquivo,
			dt_geracao,		dt_importacao,		ds_hash,
			dt_transacao,		cd_cnpj_prest_origem,	nr_cpf_prest_origem,
			cd_prestador_origem,	cd_registro_ans_orig,	cd_cnpj_prest_destino,
			nr_cpf_prest_destino,	cd_prestador_destino,	cd_registro_ans_dest)
		SELECT  nr_seq_ret_arquivo_w,	clock_timestamp(),		nm_usuario_p,
			clock_timestamp(),		nm_usuario_p,		nr_seq_arquivo_p,
			null,			null,			null,
			dt_transacao,		cd_cnpj_destino,		null,
			cd_unimed_destino,	cd_registro_ans_dest,	cd_cnpj_origem,
			null,			cd_unimed_origem,	cd_registro_ans_orig
		from	ptu_aviso_arquivo
		where	nr_sequencia	= nr_seq_arquivo_p;

		-- PTU_AVISO_RET_MENS_ERRO

		if (ie_mens_erro_p = 'S') then
			insert into ptu_aviso_ret_mens_erro(  nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_ret_arquivo,
				cd_glosa,
				ds_glosa)
			values (nextval('ptu_aviso_ret_mens_erro_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_ret_arquivo_w,
				5012,
				'RECEBIMENTO DE MENSAGEM NAO FINALIZADO');
		else
			-- Protocolo

			select  max(ap.nr_sequencia),
				max(aa.nr_lote),
				max(aa.dt_transacao),
				max(ac.nr_sequencia),
				sum(coalesce(ac.vl_procedimento,0)) + sum(coalesce(ac.vl_diaria,0)) + sum(coalesce(ac.vl_taxa,0)) +
				sum(coalesce(ac.vl_medicamento,0)) + sum(coalesce(ac.vl_material,0)) + sum(coalesce(ac.vl_opme,0)) vl_total_protocolo,
				sum(coalesce((select sum(coalesce(i.vl_total,0)) from ptu_aviso_procedimento i where i.nr_seq_aviso_conta = ac.nr_sequencia),0)) +
				sum(coalesce((select sum(coalesce(i.vl_total,0)) from ptu_aviso_material i where i.nr_seq_aviso_conta = ac.nr_sequencia),0)) vl_total_item
			into STRICT	nr_seq_aviso_protocolo_w,
				nr_lote_w,
				dt_envio_lote_w,
				nr_seq_aviso_conta_w,
				vl_total_protocolo_w,
				vl_total_item_w
			from 	ptu_aviso_arquivo  aa,
				ptu_aviso_protocolo  ap,
				ptu_aviso_conta    ac
			where	aa.nr_sequencia  = ap.nr_seq_arquivo
			and	ap.nr_sequencia  = ac.nr_seq_aviso_protocolo
			and	aa.nr_sequencia  = nr_seq_arquivo_p;
			
			select	max(ac.cd_registro_ans),
				max(ac.cd_prestador_executante),
				max(ac.cd_cpf_executante),
				max(ac.cd_cnpj_executante),
				max(ac.nm_executante)
			into STRICT	nr_registro_ans_w,
				cd_prestador_w,
				nr_cpf_prestador_w,
				cd_cnpj_prestador_w,
				nm_prestador_w
			from	ptu_aviso_conta ac
			where	ac.nr_sequencia	= nr_seq_aviso_conta_w;

			if (vl_total_protocolo_w = 0) and (vl_total_item_w > 0) then
				vl_total_protocolo_w := vl_total_item_w;
			end if;

			insert into ptu_aviso_ret_protocolo(nr_sequencia,				dt_atualizacao,		nm_usuario,
				dt_atualizacao_nrec,			nm_usuario_nrec,	nr_seq_ret_arquivo,
				nr_seq_aviso_protocolo,			nr_registro_ans,	nr_lote,
				dt_envio_lote,				cd_prestador,		nr_cpf_prestador,
				cd_cnpj_prestador,			nm_prestador,		nr_protocolo,
				vl_total_protocolo,			vl_glosa_prot,		cd_cnes_prestador)
			values (nextval('ptu_aviso_ret_protocolo_seq'),	clock_timestamp(),		nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,		nr_seq_ret_arquivo_w,
				nr_seq_aviso_protocolo_w,		nr_registro_ans_w,	nr_lote_w,
				dt_envio_lote_w,			cd_prestador_w,		nr_cpf_prestador_w,
				cd_cnpj_prestador_w,			nm_prestador_w,		coalesce(nr_protocolo_w, nr_lote_w),
				vl_total_protocolo_w,			0,			cd_cnes_prestador_w) returning nr_sequencia into nr_seq_ret_protocolo_w;
			
					dt_realizacao_w := null;
			for r_c01_w in c01(nr_seq_aviso_protocolo_w) loop

				if (coalesce(r_c01_w.dt_atendimento_ref::text, '') = '') then
					select	coalesce(max(dt_execucao), r_c01_w.dt_transacao)
					into STRICT	dt_realizacao_w
					from (	SELECT	dt_execucao
						from	ptu_aviso_procedimento
						where	nr_seq_aviso_conta = r_c01_w.nr_seq_guia
						
union

						SELECT	dt_execucao
						from	ptu_aviso_material
						where	nr_seq_aviso_conta = r_c01_w.nr_seq_guia) alias5;
				else
					dt_realizacao_w	:= r_c01_w.dt_atendimento_ref;
				end if;
				
				-- Guia

				insert into ptu_aviso_ret_guia(nr_sequencia,			dt_atualizacao,			nm_usuario,
					dt_atualizacao_nrec,		nm_usuario_nrec,		nr_seq_ret_protocolo,
					nr_seq_aviso_conta,		nr_guia_prestador,		nr_guia_operadora,
					nr_carteira_benef,		ie_atendimento_rn,		nm_beneficiario,
					nr_cns_benef,			ie_ident_beneficiario,		dt_realizacao,
					vl_processado,			vl_glosa,			vl_liberado)
				values (  r_c01_w.nr_seq_ret_guia,	clock_timestamp(),			nm_usuario_p,
					clock_timestamp(),			nm_usuario_p,			nr_seq_ret_protocolo_w,
					r_c01_w.nr_seq_guia,		r_c01_w.nr_guia_prestador,	r_c01_w.nr_guia_operadora,
					r_c01_w.nr_carteira_benef,	r_c01_w.ie_atendimento_rn,	r_c01_w.nm_beneficiario,
					r_c01_w.nr_cns_benef,		r_c01_w.ie_ident_beneficiario,	dt_realizacao_w,
					r_c01_w.vl_processado,		0,				0);
				
				-- PTU_AVISO_RET_GUIA_GLOSA

				/*insert	into ptu_aviso_ret_guia_glosa
					(nr_sequencia,				dt_atualizacao,		nm_usuario,
					dt_atualizacao_nrec,			nm_usuario_nrec,	nr_seq_ret_guia,
					cd_glosa,				ds_glosa)
				values	(ptu_aviso_ret_guia_glosa_seq.nextval,	sysdate,		nm_usuario_p,
					sysdate,				nm_usuario_p,		r_c01_w.nr_seq_ret_guia,
					'5043',					'Motivo invalido');*/

				
				
				-- Procedimento

				for r_c02_w in c02( r_c01_w.nr_seq_guia ) loop
				
					insert into ptu_aviso_ret_item(nr_sequencia,				dt_atualizacao,			nm_usuario,
						dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_ret_guia,
						nr_seq_aviso_procedimento,		nr_seq_aviso_material,		dt_execucao,
						hr_inicial,				hr_final,			cd_tabela,
						cd_item,				vl_glosa,			qt_executada,
						cd_unidade_medida,			cd_despesa,			ie_via_acesso,
						ie_tecnica_utilizada,			tx_reducao_acrescimo,		vl_unitario,
						vl_total,				ds_item,			nr_seq_item_tiss)
					values (	r_c02_w.nr_seq_aviso_proc,		clock_timestamp(),			nm_usuario_p,
						clock_timestamp(),				nm_usuario_p,			r_c01_w.nr_seq_ret_guia,
						r_c02_w.nr_seq_aviso_procedimento,	null,				coalesce(r_c02_w.dt_execucao,r_c01_w.dt_atendimento_ref),
						r_c02_w.hr_inicial,			r_c02_w.hr_final,		r_c02_w.cd_tabela,
						r_c02_w.cd_proc_envio,			0,				r_c02_w.qt_executada,
						null,					r_c02_w.cd_despesa,		r_c02_w.ie_via_acesso,
						r_c02_w.ie_tecnica_utilizada,		r_c02_w.tx_reducao_acrescimo,	r_c02_w.vl_unitario,
						r_c02_w.vl_total,			r_c02_w.ds_procedimento,	r_c02_w.nr_seq_item_tiss);
				
					/*insert into ptu_aviso_ret_item_glosa
						(nr_sequencia,				dt_atualizacao,		nm_usuario,
						dt_atualizacao_nrec,			nm_usuario_nrec,	nr_seq_ret_item,
						cd_glosa,				ds_glosa)
					values	(ptu_aviso_ret_item_glosa_seq.nextval,	sysdate,		nm_usuario_p,
						sysdate,				nm_usuario_p,		r_c02_w.nr_seq_aviso_proc,
						'5043',					'Motivo invalido');*/

				end loop;
				
				-- Material

				for r_c03_w in c03( r_c01_w.nr_seq_guia ) loop
				
					insert into ptu_aviso_ret_item(nr_sequencia,				dt_atualizacao,			nm_usuario,
						dt_atualizacao_nrec,			nm_usuario_nrec,		nr_seq_ret_guia,
						nr_seq_aviso_procedimento,		nr_seq_aviso_material,		dt_execucao,
						hr_inicial,				hr_final,			cd_tabela,
						cd_item,				ds_item,			qt_executada,
						cd_unidade_medida,			cd_despesa,			ie_via_acesso,
						ie_tecnica_utilizada,			tx_reducao_acrescimo,		vl_unitario,
						vl_total,				vl_glosa,			nr_seq_item_tiss)
					values (	r_c03_w.nr_seq_aviso_mat,		clock_timestamp(),			nm_usuario_p,
						clock_timestamp(),				nm_usuario_p,			r_c01_w.nr_seq_ret_guia,
						null,					r_c03_w.nr_seq_aviso_material,	coalesce(r_c03_w.dt_execucao,r_c01_w.dt_atendimento_ref),
						r_c03_w.hr_inicial,			r_c03_w.hr_final,		r_c03_w.cd_tabela,
						r_c03_w.cd_mat_envio,			r_c03_w.ds_material,		r_c03_w.qt_executada,
						r_c03_w.cd_unidade_medida,		r_c03_w.cd_despesa,		null,
						null,					r_c03_w.tx_reducao_acrescimo,	r_c03_w.vl_unitario,
						r_c03_w.vl_total,			0,				r_c03_w.nr_seq_item_tiss);
						
					
					/*insert into ptu_aviso_ret_item_glosa
						(nr_sequencia,				dt_atualizacao,		nm_usuario,
						dt_atualizacao_nrec,			nm_usuario_nrec,	nr_seq_ret_item,
						cd_glosa,				ds_glosa)
					values	(ptu_aviso_ret_item_glosa_seq.nextval,	sysdate,		nm_usuario_p,
						sysdate,				nm_usuario_p,		r_c03_w.nr_seq_aviso_mat,
						'5043',					'Motivo invalido');*/

				end loop;
			end loop;
		end if;
	end if;
end if;

commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_aviso_pck.gerar_dados_env_a525 ( nr_seq_arquivo_p ptu_aviso_arquivo.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_mens_erro_p text) FROM PUBLIC;
