-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_aviso_pck.gera_sql_arq_a520_proc ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, nr_seq_aviso_conta_p ptu_aviso_conta.nr_sequencia%type, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o SQL para a carga dos procedimentos no A520, vinculados diretamente na conta

-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

			Como e possivel configurar se o A520 vai ser baseado no pos ou pagamento(prestador), alguns calculos
			serao diferentes, inclusive os joins. Somando a possibilidade de usar o pos novo ou antigo, acaba deixando
			com muitas possibilidades e a montagem do SQL dinamico vai deixar muito ilegivel.
			
			Para facilitar a leitura e futuras manutencoes, foi separado a montagem principal conforme parametrizacao.

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

ds_sql_w	varchar(32000);
pos_w		alias_t%type;
cta_w		alias_t%type;
proc_w		alias_t%type;


BEGIN

pos_w	:= alias_p.pos;
cta_w	:= alias_p.conta;
proc_w	:= alias_p.procedimento;

-- define se vai ser baseado no pos ou pos aviso

if (coalesce(dados_a520_p.ie_geracao_aviso_cobr, 'PO') in ('PO', 'PA')) then

	if (dados_a520_p.ie_novo_pos_estab = 'N') then -- Pos anterior
		ds_sql_w :=	'select	'||proc_w||'.nr_sequencia nr_seq_conta_proc, '														|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.ie_origem_proced,'||proc_w||'.ie_origem_proced) ie_origem_proced, '									|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.cd_procedimento,'||proc_w||'.cd_procedimento) cd_procedimento, '									|| pls_util_pck.enter_w ||
				'	decode('||proc_w||'.ie_tipo_despesa,1,''00'',2,''07'',3,''00'',4,''00'') cd_despesa, '	/* 00 - Procedimento / 07 - Taxa / 05 - Diarias */
				|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.dt_item,'||proc_w||'.dt_procedimento) dt_execucao, '											|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.dt_inicio_item,'||proc_w||'.dt_inicio_proc) hr_inicial, '										|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.dt_fim_item,'||proc_w||'.dt_fim_proc) hr_final, '											|| pls_util_pck.enter_w ||
				' 	ptu_aviso_pck.gera_cd_tabela(''P'','||proc_w||'.ie_tipo_despesa, '||pos_w||'.ie_origem_proced,nvl('||pos_w||'.cd_procedimento,'||proc_w||'.cd_procedimento)) cd_tabela,  '    	|| pls_util_pck.enter_w ||
				'	substr(nvl('||pos_w||'.cd_procedimento,'||proc_w||'.cd_procedimento),1,10) cd_proc_envio, '								|| pls_util_pck.enter_w ||
				'	nvl(nvl('||pos_w||'.ds_item_convertido,'||pos_w||'.ds_item_ptu),'											|| pls_util_pck.enter_w ||
				'		substr(obter_descricao_procedimento('||pos_w||'.cd_procedimento,'||pos_w||'.ie_origem_proced),1,150)) ds_procedimento, '			|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.qt_item,1) qt_executada, '														|| pls_util_pck.enter_w ||
				'	decode('||proc_w||'.ie_via_acesso, ''U'', ''1'', ''M'', ''2'', ''B'', ''3'', null) ie_via_acesso, '							|| pls_util_pck.enter_w ||
				'	decode('||proc_w||'.ie_tecnica_utilizada, ''C'', ''1'', ''V'', ''2'', ''R'', ''3'', null) ie_tecnica_utilizada, '					|| pls_util_pck.enter_w ||
				'	ptu_aviso_pck.obter_tx_reducao_acrescimo('||proc_w||'.tx_item, '||proc_w||'.ie_via_acesso, :ie_via_acesso_mult_p) tx_reducao_acrescimo, '		|| pls_util_pck.enter_w ||
				'	'||pos_w||'.vl_beneficiario/nvl(decode('||pos_w||'.qt_item,0,1,'||pos_w||'.qt_item),1) vl_unitario, '							|| pls_util_pck.enter_w ||
				'	'||pos_w||'.vl_beneficiario vl_total, '															|| pls_util_pck.enter_w ||
				'	'||cta_w||'.nr_sequencia nr_seq_conta, '														|| pls_util_pck.enter_w ||
				'	'||pos_w||'.nr_sequencia nr_seq_conta_pos_estab, '													|| pls_util_pck.enter_w ||
				'	null nr_seq_pos_proc, '																	|| pls_util_pck.enter_w ||
				'	''1'' ie_local '																	|| pls_util_pck.enter_w ||
				'from	pls_conta_pos_estabelecido '||pos_w||', '														|| pls_util_pck.enter_w ||
				'	pls_conta_proc	'||proc_w||', '																|| pls_util_pck.enter_w ||
				'	pls_conta	'||cta_w||', '																|| pls_util_pck.enter_w ||
				'	ptu_aviso_conta	ac '																	|| pls_util_pck.enter_w ||
				'where	'||cta_w||'.nr_sequencia	= ac.nr_seq_conta '													|| pls_util_pck.enter_w ||
				'and	'||cta_w||'.nr_sequencia	= '||proc_w||'.nr_seq_conta '												|| pls_util_pck.enter_w ||
				'and	'||proc_w||'.nr_sequencia	= '||pos_w||'.nr_seq_conta_proc '											|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.nr_seq_proc_rec is null '															|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.nr_seq_disc_proc is null '															|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.nr_seq_lote_fat is null '															|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.ie_status_faturamento = '||case dados_a520_p.ie_geracao_aviso_cobr when 'PA' then '''A''' else '''L''' end					|| pls_util_pck.enter_w ||
				'and	ac.nr_sequencia	= :nr_seq_aviso_conta_p '														|| pls_util_pck.enter_w;

	elsif (dados_a520_p.ie_novo_pos_estab = 'S') then -- Pos novo
		ds_sql_w :=	'select	'||proc_w||'.nr_sequencia nr_seq_conta_proc, '														|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.ie_origem_proced,'||proc_w||'.ie_origem_proced) ie_origem_proced, '									|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.cd_procedimento,'||proc_w||'.cd_procedimento) cd_procedimento, '									|| pls_util_pck.enter_w ||
				'	''00'' cd_despesa, '																	|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.dt_item,'||proc_w||'.dt_procedimento) dt_execucao, '											|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.dt_inicio_item,'||proc_w||'.dt_inicio_proc) hr_inicial, '										|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.dt_fim_item,'||proc_w||'.dt_fim_proc) hr_final, '											|| pls_util_pck.enter_w ||
				' 	ptu_aviso_pck.gera_cd_tabela(''P'','||proc_w||'.ie_tipo_despesa, '||pos_w||'.ie_origem_proced,nvl('||pos_w||'.cd_procedimento,'||proc_w||'.cd_procedimento)) cd_tabela, '    	|| pls_util_pck.enter_w ||
				'	substr(nvl('||pos_w||'.cd_procedimento,'||proc_w||'.cd_procedimento), 1, 10) cd_proc_envio, '								|| pls_util_pck.enter_w ||
				'	nvl(nvl('||pos_w||'.ds_item_convertido,'||pos_w||'.ds_item_ptu),'											|| pls_util_pck.enter_w ||
				'		substr(obter_descricao_procedimento('||pos_w||'.cd_procedimento,'||pos_w||'.ie_origem_proced),1,150)) ds_procedimento, '			|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.qt_item,1) qt_executada, '														|| pls_util_pck.enter_w ||
				'	decode('||proc_w||'.ie_via_acesso,  ''U'', ''1'', ''M'', ''2'', ''B'', ''3'', null) ie_via_acesso, '							|| pls_util_pck.enter_w ||
				'	decode('||proc_w||'.ie_tecnica_utilizada, ''C'', ''1'', ''V'', ''2'', ''R'', ''3'', null) ie_tecnica_utilizada,'					|| pls_util_pck.enter_w ||
				'	ptu_aviso_pck.obter_tx_reducao_acrescimo('||proc_w||'.tx_item, '||proc_w||'.ie_via_acesso, :ie_via_acesso_mult_p) tx_reducao_acrescimo, '		|| pls_util_pck.enter_w ||
				'	(nvl('||pos_w||'.vl_medico,0) + nvl('||pos_w||'.vl_custo_operacional,0) + nvl('||pos_w||'.vl_materiais,0) + '						|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.vl_lib_taxa_servico,0) + nvl('||pos_w||'.vl_lib_taxa_co,0) + '										|| pls_util_pck.enter_w ||
				'						nvl('||pos_w||'.vl_lib_taxa_material,0))/nvl(decode(qt_item,0,1,qt_item),1) vl_unitario, ' 			|| pls_util_pck.enter_w ||
				'	(nvl('||pos_w||'.vl_medico,0) + nvl('||pos_w||'.vl_custo_operacional,0) + nvl('||pos_w||'.vl_materiais,0) + '						|| pls_util_pck.enter_w ||
				'	nvl('||pos_w||'.vl_lib_taxa_servico,0) + nvl('||pos_w||'.vl_lib_taxa_co,0) + nvl('||pos_w||'.vl_lib_taxa_material,0)) vl_total, '			|| pls_util_pck.enter_w ||
				'	'||cta_w||'.nr_sequencia nr_seq_conta, '														|| pls_util_pck.enter_w ||
				'	null nr_seq_pos_proc, '																	|| pls_util_pck.enter_w ||
				'	'||pos_w||'.nr_sequencia nr_seq_conta_pos_proc, '													|| pls_util_pck.enter_w ||
				'	''1'' ie_local '																	|| pls_util_pck.enter_w ||
				'from	pls_conta_pos_proc '||pos_w||', '															|| pls_util_pck.enter_w ||
				'	pls_conta_proc	'||proc_w||', '																|| pls_util_pck.enter_w ||
				'	pls_conta	'||cta_w||', '																|| pls_util_pck.enter_w ||
				'	ptu_aviso_conta	ac '																	|| pls_util_pck.enter_w ||
				'where	'||cta_w||'.nr_sequencia	= ac.nr_seq_conta '													|| pls_util_pck.enter_w ||
				'and	'||cta_w||'.nr_sequencia	= '||proc_w||'.nr_seq_conta '												|| pls_util_pck.enter_w ||
				'and	'||proc_w||'.nr_sequencia	= '||pos_w||'.nr_seq_conta_proc '											|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.nr_seq_proc_rec is null '															|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.nr_seq_disc_proc is null '															|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.nr_seq_lote_fat is null '															|| pls_util_pck.enter_w ||
				'and	'||pos_w||'.ie_status_faturamento = '||case dados_a520_p.ie_geracao_aviso_cobr when 'PA' then '''A''' else '''L''' end					|| pls_util_pck.enter_w ||
				'and	ac.nr_sequencia	= :nr_seq_aviso_conta_p '														|| pls_util_pck.enter_w;
	end if;

else -- Baseado no prestador

	ds_sql_w :=	'select	'||proc_w||'.nr_sequencia nr_seq_conta_proc, '															|| pls_util_pck.enter_w ||
			'	'||proc_w||'.ie_origem_proced, '																|| pls_util_pck.enter_w ||
			'	'||proc_w||'.cd_procedimento, '																	|| pls_util_pck.enter_w ||
			--'	decode('||proc_w||'.ie_tipo_despesa,1,''00'',2,''07'',3,''05'',4,''00'') cd_despesa, '										|| pls_util_pck.enter_w ||

			'	''00'' cd_despesa, '																	|| pls_util_pck.enter_w ||
			'	'||proc_w||'.dt_procedimento dt_execucao, '															|| pls_util_pck.enter_w ||
			'	'||proc_w||'.dt_inicio_proc hr_inicial, '															|| pls_util_pck.enter_w ||
			'	'||proc_w||'.dt_fim_proc hr_final, '																|| pls_util_pck.enter_w ||
			' 	ptu_aviso_pck.gera_cd_tabela(''P'','||proc_w||'.ie_tipo_despesa, '||proc_w||'.ie_origem_proced,'||proc_w||'.cd_procedimento) cd_tabela, '    					|| pls_util_pck.enter_w ||
			'	substr('||proc_w||'.cd_procedimento,1,10) cd_proc_envio, '													|| pls_util_pck.enter_w ||
			'	substr(obter_descricao_procedimento('||proc_w||'.cd_procedimento,'||proc_w||'.ie_origem_proced),1,150) ds_procedimento, '					|| pls_util_pck.enter_w ||
			'	nvl('||proc_w||'.qt_procedimento,1) qt_executada, '														|| pls_util_pck.enter_w ||
			'	decode('||proc_w||'.ie_via_acesso,  ''U'', ''1'', ''M'', ''2'', ''B'', ''3'', null) ie_via_acesso, '								|| pls_util_pck.enter_w ||
			'	decode('||proc_w||'.ie_tecnica_utilizada, ''C'', ''1'', ''V'', ''2'', ''R'', ''3'', null) ie_tecnica_utilizada,'						|| pls_util_pck.enter_w ||
			'	'||proc_w||'.tx_reducao_acrescimo_imp tx_reducao_acrescimo, '													|| pls_util_pck.enter_w ||
			'	'||proc_w||'.vl_unitario, '																	|| pls_util_pck.enter_w ||
			'	'||proc_w||'.tx_reducao_acrescimo_imp tx_reducao_acrescimo, '													|| pls_util_pck.enter_w ||
			'	'||cta_w||'.nr_sequencia nr_seq_conta, '															|| pls_util_pck.enter_w ||
			'	null nr_seq_pos_proc, '																		|| pls_util_pck.enter_w ||
			'	null nr_seq_conta_pos_proc, '																	|| pls_util_pck.enter_w ||
			'	''1'' ie_local '																		|| pls_util_pck.enter_w ||
			'from	pls_conta_proc	'||proc_w||', '																	|| pls_util_pck.enter_w ||
			'	pls_conta	'||cta_w||', '																	|| pls_util_pck.enter_w ||
			'	ptu_aviso_conta	ac '																		|| pls_util_pck.enter_w ||
			'where	'||cta_w||'.nr_sequencia	= ac.nr_seq_conta '														|| pls_util_pck.enter_w ||
			'and	ac.nr_seq_conta	= '||proc_w||'.nr_seq_conta '															|| pls_util_pck.enter_w ||
			'and	ac.nr_sequencia	= :nr_seq_aviso_conta_p '															|| pls_util_pck.enter_w;

end if;


-- bind

dados_bind_p := sql_pck.bind_variable(':nr_seq_aviso_conta_p', nr_seq_aviso_conta_p, dados_bind_p);
dados_bind_p := sql_pck.bind_variable(':ie_via_acesso_mult_p', dados_a520_p.ie_via_acesso_mult, dados_bind_p);


-- monta os demais filtros


-- Procedimento

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_proc(dados_a520_p, alias_p, 'S', dados_gerais_a520_p, dados_bind_p));
-- Geral

ds_sql_w := ptu_aviso_pck.add_sql(ds_sql_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_geral(dados_a520_p, alias_p, 'N', 'N', dados_bind_p));

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_aviso_pck.gera_sql_arq_a520_proc ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, nr_seq_aviso_conta_p ptu_aviso_conta.nr_sequencia%type, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
