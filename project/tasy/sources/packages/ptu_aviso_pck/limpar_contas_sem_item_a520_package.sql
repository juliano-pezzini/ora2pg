-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_aviso_pck.limpar_contas_sem_item_a520 ( nr_seq_lote_p ptu_lote_aviso.nr_sequencia%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Varre o lote, verificando quais contas que nao possuem itens informados, e apaga elas.
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


-- tabela virtual para a carga das contas

tb_nr_seq_conta_w	dbms_sql.number_table;

-- carrega as contas sem itens

c01 CURSOR(	nr_seq_lote_pc	ptu_lote_aviso.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia
	from	ptu_aviso_arquivo	a,
		ptu_aviso_protocolo	b,
		ptu_aviso_conta		c
	where	b.nr_seq_arquivo		= a.nr_sequencia
	and	c.nr_seq_aviso_protocolo	= b.nr_sequencia
	-- somente os que nao possuirem nenhum item informado

	and	not exists (	SELECT	1
					from	ptu_aviso_procedimento	x
					where	x.nr_seq_aviso_conta	= c.nr_sequencia
					
union all

					select	1
					from	ptu_aviso_material	x
					where	x.nr_seq_aviso_conta	= c.nr_sequencia)
	and	a.nr_seq_lote	= nr_seq_lote_pc;
	
	

BEGIN

-- abre o cursor e carrega as contas

open c01(nr_seq_lote_p);
loop
	fetch c01 bulk collect into tb_nr_seq_conta_w limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_conta_w.count = 0;
	
	-- apaga todas as declaracoes das contas

	forall i in tb_nr_seq_conta_w.first..tb_nr_seq_conta_w.last
		delete	FROM ptu_aviso_declaracao
		where	nr_seq_aviso_conta	= tb_nr_seq_conta_w(i);
	
	commit;
	
	-- apaga as contas

	forall i in tb_nr_seq_conta_w.first..tb_nr_seq_conta_w.last
		delete	FROM ptu_aviso_conta
		where	nr_sequencia	= tb_nr_seq_conta_w(i);
	
	commit;
	-- limpa o vetor

	tb_nr_seq_conta_w.delete;
	
end loop;

if (c01%isopen) then

	close c01;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_aviso_pck.limpar_contas_sem_item_a520 ( nr_seq_lote_p ptu_lote_aviso.nr_sequencia%type) FROM PUBLIC;
