-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Gerar lote para enviar o arquivo A520



CREATE OR REPLACE PROCEDURE ptu_aviso_pck.gerar_lote_env_a520 ( nr_seq_lote_p ptu_lote_aviso.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type ) AS $body$
DECLARE



dados_a520_w			dados_lote_a520_t;
alias_w				alias_a520_t;
dados_gerais_a520_w		dados_gerais_a520_t;

ie_geracao_aviso_cobr_ori_w	pls_parametros.ie_geracao_aviso_cobr%type;


BEGIN

update	ptu_lote_aviso
set	dt_geracao	= clock_timestamp()
where	nr_sequencia	= nr_seq_lote_p;


commit;	

begin

-- carrega os dados iniciais do lote

dados_a520_w := ptu_aviso_pck.busca_dados_lote_a520(nr_seq_lote_p, dados_a520_w);

-- prepara as regras

CALL ptu_aviso_pck.prepara_cad_regra_a520();

-- gera os dados gerais para o processo

-- primeiro marca como N, para carregar todos, depois quando for aplicar na selecao, devera ser marcado como S

dados_gerais_a520_w.ie_excecao := 'N';


-- Quando for a opcao PA - Pos de A520, sempre deve ser gerado os dados primeiro com base no pos A520,

--  e depois mais uma vez para PO - pos estabelecido, para garantir que vai ser gerado com algum pos estabelecido

-- As rotinas internas ja filtram quando ja tem informacao duplicada, portanto nao deve gerar informacao duplicada

-- Esse comportamento e exclusivo PA - POS DE A520, PARA PO, devera executar apenas uma vez

-- E copiado o valor, para depois restaurar ele. Importante esse passo

ie_geracao_aviso_cobr_ori_w := dados_a520_w.ie_geracao_aviso_cobr;
-- se for pagamento (prestador), tambem gera nesta etapa

if (dados_a520_w.ie_geracao_aviso_cobr in ('PP', 'PA')) then

	-- gera os arquivos

	CALL ptu_aviso_pck.gerar_dados_ptu_arq_env_a520(dados_a520_w, alias_w, dados_gerais_a520_w, nm_usuario_p);
	
	-- Gerar dados do protocolo

	CALL ptu_aviso_pck.gerar_dados_ptu_prot_env_a520(dados_a520_w, alias_w, dados_gerais_a520_w, nm_usuario_p);

end if;

-- agora, se for PA ou PO, tenta gerar como PO, mesmo se precisar FORCAR, conforme comentario acima

if (dados_a520_w.ie_geracao_aviso_cobr in ('PA', 'PO')) then

	-- FORCA para PO, conforme comentarios acima

	dados_a520_w.ie_geracao_aviso_cobr := 'PO';
	
	-- gera os arquivos

	CALL ptu_aviso_pck.gerar_dados_ptu_arq_env_a520(dados_a520_w, alias_w, dados_gerais_a520_w, nm_usuario_p);
	
	-- Gerar dados do protocolo

	CALL ptu_aviso_pck.gerar_dados_ptu_prot_env_a520(dados_a520_w, alias_w, dados_gerais_a520_w, nm_usuario_p);
	
	-- volta o parametro original

	dados_a520_w.ie_geracao_aviso_cobr := ie_geracao_aviso_cobr_ori_w;
end if;


-- aplica as excecoes 

CALL ptu_aviso_pck.aplica_exec_env_a520(nr_seq_lote_p);


-- Limpa os dados

CALL ptu_aviso_pck.limpar_dados_ptu_env_a520(nr_seq_lote_p);

exception
when others then
	-- Desfazer o lote

	CALL ptu_aviso_pck.desfazer_lote_env_a520(	nr_seq_lote_p, nm_usuario_p);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1027928, 'ERRO='|| substr(sqlerrm||' - CallStack: '||dbms_utility.format_error_backtrace, 0, 4000));
end;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_aviso_pck.gerar_lote_env_a520 ( nr_seq_lote_p ptu_lote_aviso.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type ) FROM PUBLIC;
