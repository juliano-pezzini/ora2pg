-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_aviso_pck.gera_sql_exec_env_a520 ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, ie_nivel_item_p text, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Monta o sql para a carga de excecoes.

		O ie_nivel_item_p vai indicar o nivel de detalhamento do FROM:
			P - Procedimentos
			M - Materiais
			N - Nenhum item ( O FROM nao vai descer a nivel de item
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:	
Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

ds_retorno_w	varchar(32000);

cta_w		alias_t%type;
benef_w		alias_t%type;
cong_w		alias_t%type;
proc_w		alias_t%type;
mat_w		alias_t%type;
prot_w		alias_t%type;


BEGIN

cta_w		:= alias_p.conta;
benef_w		:= alias_p.beneficiario;
cong_w		:= alias_p.congenere;
proc_w		:= alias_p.procedimento;
mat_w		:= alias_p.material;
prot_w		:= alias_p.protocolo;

ds_retorno_w :=	'select	ca.nr_sequencia ' 								|| pls_util_pck.enter_w ||
		'from	ptu_aviso_arquivo	a, '							|| pls_util_pck.enter_w ||
		'	ptu_aviso_protocolo	pa, '							|| pls_util_pck.enter_w ||
		'	ptu_aviso_conta		ca, '							|| pls_util_pck.enter_w ||
		'	pls_conta		'||cta_w||', '						|| pls_util_pck.enter_w ||
		'	pls_segurado		'||benef_w||', '					|| pls_util_pck.enter_w ||
		'	pls_congenere		'||cong_w||', '						|| pls_util_pck.enter_w ||
		'	pls_protocolo_conta	'||prot_w||' '						|| pls_util_pck.enter_w ||
		case	ie_nivel_item_p
			when 'P' then '	,pls_conta_proc	'||proc_w||' '
			when 'M' then '	,pls_conta_mat	'||mat_w||' '
		end || pls_util_pck.enter_w ||
		'where	a.nr_sequencia			= pa.nr_seq_arquivo '				|| pls_util_pck.enter_w ||
		'and	ca.nr_seq_aviso_protocolo	= pa.nr_sequencia ' 				|| pls_util_pck.enter_w ||
		'and	'||cta_w||'.nr_sequencia		= ca.nr_seq_conta '			|| pls_util_pck.enter_w ||
		'and	'||benef_w||'.nr_sequencia		= '||cta_w||'.nr_seq_segurado '		|| pls_util_pck.enter_w ||
		'and	'||cong_w||'.nr_sequencia		= '||benef_w||'.nr_seq_congenere '	|| pls_util_pck.enter_w ||
		'and	'||prot_w||'.nr_sequencia		= pa.nr_seq_protocolo '			|| pls_util_pck.enter_w ||
		case	ie_nivel_item_p
			when 'P' then 'and	'||proc_w||'.nr_seq_conta		= '||cta_w||'.nr_sequencia '
			when 'M' then 'and	'||mat_w||'.nr_seq_conta		= '||cta_w||'.nr_sequencia '
		end || pls_util_pck.enter_w ||
		'and	a.nr_seq_lote		= :nr_seq_lote ';

dados_bind_p := sql_pck.bind_variable(':nr_seq_lote', dados_a520_p.nr_seq_lote, dados_bind_p);


-- protocolo

ds_retorno_w := ptu_aviso_pck.add_sql(ds_retorno_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_prot(dados_a520_p, alias_p, dados_gerais_a520_p, dados_bind_p));

-- Conta

ds_retorno_w := ptu_aviso_pck.add_sql(ds_retorno_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_cta(dados_a520_p, alias_p, dados_gerais_a520_p, dados_bind_p));

-- Beneficiario

ds_retorno_w := ptu_aviso_pck.add_sql(ds_retorno_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_benef(dados_a520_p, alias_p, dados_gerais_a520_p, dados_bind_p));

if (coalesce(ie_nivel_item_p, 'N') = 'P') then

	-- Procedimento

	ds_retorno_w := ptu_aviso_pck.add_sql(ds_retorno_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_proc(dados_a520_p, alias_p, 'S', dados_gerais_a520_p, dados_bind_p));
end if;

if (coalesce(ie_nivel_item_p, 'N') = 'M') then

	-- Material

	ds_retorno_w := ptu_aviso_pck.add_sql(ds_retorno_w, 'and	', dados_bind_p := ptu_aviso_pck.gera_sql_a520_where_mat(dados_a520_p, alias_p, 'S', dados_gerais_a520_p, dados_bind_p));
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_aviso_pck.gera_sql_exec_env_a520 ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, ie_nivel_item_p text, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
