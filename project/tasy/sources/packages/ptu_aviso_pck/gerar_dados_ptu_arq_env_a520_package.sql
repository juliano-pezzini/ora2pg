-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




-- Gerar dados PTU_AVISO_ARQUIVO para envio



CREATE OR REPLACE PROCEDURE ptu_aviso_pck.gerar_dados_ptu_arq_env_a520 ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_cd_guia_referencia_w		pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_congenere_w		pls_util_cta_pck.t_number_table;
tb_ds_versao_tiss_w		pls_util_cta_pck.t_varchar2_table_20;
tb_dt_transacao_w		pls_util_cta_pck.t_date_table;
tb_cd_cnpj_origem_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_unimed_origem_w		pls_util_cta_pck.t_varchar2_table_5;
tb_cd_registro_ans_orig_w	pls_util_cta_pck.t_varchar2_table_50;
tb_cd_cnpj_destino_w		pls_util_cta_pck.t_varchar2_table_15;
tb_cd_unimed_destino_w		pls_util_cta_pck.t_varchar2_table_5;
tb_cd_registro_ans_dest_w	pls_util_cta_pck.t_varchar2_table_50;
tb_nr_lote_w			pls_util_cta_pck.t_varchar2_table_20;
tb_nr_seq_prestador_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;
tb_dt_competencia_w		pls_util_cta_pck.t_date_table;

						
cursor_w			sql_pck.t_cursor; 	-- Cursor para o sql dinamico
valor_bind_w			sql_pck.t_dado_bind;	-- Binds para o sql dinamico
ds_sql_arquivo_w		varchar(10000);	-- SQL dinamico
BEGIN

-- monta o SQL dinamico para a busca

valor_bind_w := ptu_aviso_pck.gera_sql_arq_a520(dados_a520_p, alias_p, dados_gerais_a520_p, valor_bind_w);

valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_arquivo_w, valor_bind_w);

loop
	fetch cursor_w bulk collect into	tb_nr_seq_protocolo_w,		tb_nr_seq_conta_w,	tb_cd_guia_referencia_w,	
						tb_nr_seq_congenere_w,		tb_ds_versao_tiss_w,	tb_dt_transacao_w,
						tb_cd_cnpj_origem_w,		tb_cd_unimed_origem_w,	tb_cd_registro_ans_orig_w,
						tb_cd_cnpj_destino_w,		tb_cd_unimed_destino_w,	tb_cd_registro_ans_dest_w,
						tb_nr_lote_w,			tb_nr_seq_prestador_w,	tb_nr_seq_segurado_w,
						tb_dt_competencia_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_protocolo_w.count = 0;
	
	forall	i in tb_nr_seq_protocolo_w.first..tb_nr_seq_protocolo_w.last
		insert into ptu_aviso_arquivo(	nr_sequencia,			dt_atualizacao,			nm_usuario,
						dt_atualizacao_nrec,		nm_usuario_nrec,		nr_seq_lote,
						nr_seq_protocolo,		nr_seq_conta,			cd_guia_referencia,
						nr_seq_congenere,		ds_versao_tiss,			dt_transacao,
						cd_cnpj_origem,			cd_unimed_origem,		cd_registro_ans_orig,
						cd_cnpj_destino,		cd_unimed_destino,		cd_registro_ans_dest,
						nr_lote,			nr_seq_prestador,		nr_seq_segurado,
						ie_status,			dt_competencia)
					values (nextval('ptu_aviso_arquivo_seq'),	clock_timestamp(),			nm_usuario_p,
						clock_timestamp(),			nm_usuario_p,			dados_a520_p.nr_seq_lote,
						tb_nr_seq_protocolo_w(i),	tb_nr_seq_conta_w(i),		tb_cd_guia_referencia_w(i),	
						tb_nr_seq_congenere_w(i),	tb_ds_versao_tiss_w(i),		tb_dt_transacao_w(i),
						tb_cd_cnpj_origem_w(i),		tb_cd_unimed_origem_w(i),	tb_cd_registro_ans_orig_w(i),
						tb_cd_cnpj_destino_w(i),	tb_cd_unimed_destino_w(i),	tb_cd_registro_ans_dest_w(i),
						tb_nr_lote_w(i),		tb_nr_seq_prestador_w(i),	tb_nr_seq_segurado_w(i),
						'1',				tb_dt_competencia_w(i));
	commit;
end loop;

if (cursor_w%isopen) then

	close cursor_w;
end if;



END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_aviso_pck.gerar_dados_ptu_arq_env_a520 ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
