-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_aviso_pck.gera_sql_a520_where_cta ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o SQL, parte do WHERE relacionada a conta medica.
		
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_sql_w			varchar(32000);

qt_ie_status_w			integer;
qt_nr_seq_tipo_atendimento_w	integer;
qt_nr_seq_tipo_conta_w		integer;
qt_ie_intercambio_w		integer;
in_ie_status_w			varchar(4000);
in_ie_intercambio_w		varchar(4000);


ds_and_w			varchar(10);
cta_w 				alias_p.conta%type;
cong_w 				alias_p.congenere%type;

BEGIN

ds_sql_w	:= '';
cta_w		:= alias_p.conta;
cong_w		:= alias_p.congenere;

--carrega as inf das regras de conta medica, ja proprias para binding


	-- quantidade de regras com status

select	max((	select	count(1)
		from	ptu_regra_aviso_cob_conta	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.ie_status IS NOT NULL AND x.ie_status::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_ie_status,
	-- quantidade de regras com tipo de atendimento

	max((	select	count(1)
		from	ptu_regra_aviso_cob_conta	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_tipo_atendimento IS NOT NULL AND x.nr_seq_tipo_atendimento::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_tipo_atendimento,
	-- quantidade de regras com tipo de conta

	max((	select	count(1)
		from	ptu_regra_aviso_cob_conta	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_tipo_conta IS NOT NULL AND x.nr_seq_tipo_conta::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_tipo_conta,
	-- quantidade de regras com tipo de intercambio

	max((	select	count(1)
		from	ptu_regra_aviso_cob_conta	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.ie_tipo_intercambio IS NOT NULL AND x.ie_tipo_intercambio::text <> '')
		and	x.ie_tipo_intercambio		!= 'A' -- Ambos - com esta opcao, nem deve ser considerado como filtro para performance

		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_ie_intercambio,
	-- Levante das regras por status

	max((WITH RECURSIVE cte AS (
select	substr(''''||t.ie_status,3)||''''
		from (	select	x.ie_status,
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_status) seq
			from	ptu_regra_aviso_cob_conta	x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_status IS NOT NULL AND x.ie_status::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_status, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
select	c. || ''',' || substr(''''||t.ie_status,3)||''''
		from (	select	x.ie_status, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_status) seq
			from	ptu_regra_aviso_cob_conta	x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_status IS NOT NULL AND x.ie_status::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_status, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq)

) SELECT * FROM cte WHERE seq	= cnt;
)) in_ie_status,
	-- Levante das regras por tipo de intercambio

	max((WITH RECURSIVE cte AS (
(select	substr(''''||t.ie_tipo_intercambio,3)||''''
		from (	select	x.ie_tipo_intercambio, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_intercambio) seq
			from	ptu_regra_aviso_cob_conta	x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_tipo_intercambio IS NOT NULL AND x.ie_tipo_intercambio::text <> '')
			and	x.ie_tipo_intercambio		!= 'A' -- Ambos - com esta opcao, nem deve ser considerado como filtro para performance

			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_tipo_intercambio, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
(select	c. || ''',' || substr(''''||t.ie_tipo_intercambio,3)||''''
		from (	select	x.ie_tipo_intercambio, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_intercambio) seq
			from	ptu_regra_aviso_cob_conta	x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_tipo_intercambio IS NOT NULL AND x.ie_tipo_intercambio::text <> '')
			and	x.ie_tipo_intercambio		!= 'A' 

			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_tipo_intercambio, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq))

) SELECT * FROM cte WHERE seq	= cnt;
)) in_ie_intercambio
into STRICT	qt_ie_status_w,
	qt_nr_seq_tipo_atendimento_w,
	qt_nr_seq_tipo_conta_w,
	qt_ie_intercambio_w,
	in_ie_status_w,
	in_ie_intercambio_w
from	ptu_lote_aviso	a
where	a.nr_sequencia	= dados_a520_p.nr_seq_lote;

ds_and_w := '';

-- monta conforme regras

if (qt_ie_status_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||cta_w||'.ie_status in ('||in_ie_status_w||') ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
end if;


if (qt_ie_intercambio_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'ptu_aviso_pck.retorna_tipo_intercambio('||cong_w||'.nr_sequencia, '||cta_w||'.cd_estabelecimento) in (''A'', '||in_ie_intercambio_w||') ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
end if;

if (qt_nr_seq_tipo_atendimento_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_conta	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_tipo_atendimento	= '||cta_w||'.nr_seq_tipo_atendimento ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
	
end if;


if (qt_nr_seq_tipo_conta_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_conta	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_tipo_conta		= '||cta_w||'.nr_seq_tipo_conta ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
	
end if;


-- Verifica os filtros adicionais

if (dados_a520_p.qt_conta_adic > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select 	1 ' 							|| pls_util_pck.enter_w ||
					'		from	ptu_lote_aviso_adic	y ' 				|| pls_util_pck.enter_w ||
					'		where	y.nr_seq_conta		= '||cta_w||'.nr_sequencia'	|| pls_util_pck.enter_w ||
					'		and	y.nr_seq_lote		= :nr_seq_lote '		|| pls_util_pck.enter_w ||
					'		and	y.nr_seq_conta		is not null) '			|| pls_util_pck.enter_w;
	dados_bind_p := sql_pck.bind_variable(':nr_seq_lote', dados_a520_p.nr_seq_lote, dados_bind_p);
	ds_and_w := 'and	';
end if;


if (dados_a520_p.qt_guia_ref_adic > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select 	1 ' 								|| pls_util_pck.enter_w ||
					'		from	ptu_lote_aviso_adic	y ' 					|| pls_util_pck.enter_w ||
					'		where	y.cd_guia_referencia	= '||cta_w||'.cd_guia_referencia'	|| pls_util_pck.enter_w ||
					'		and	y.nr_seq_lote		= :nr_seq_lote '			|| pls_util_pck.enter_w ||
					'		and	y.cd_guia_referencia	is not null) '				|| pls_util_pck.enter_w;
	dados_bind_p := sql_pck.bind_variable(':nr_seq_lote', dados_a520_p.nr_seq_lote, dados_bind_p);
	ds_and_w := 'and	';
end if;



-- Verifica os filtros excecao

if (dados_a520_p.qt_conta_exce > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'not exists (	select 	1 ' 							|| pls_util_pck.enter_w ||
					'		from	ptu_lote_aviso_excecao	y ' 				|| pls_util_pck.enter_w ||
					'		where	y.nr_seq_conta		= '||cta_w||'.nr_sequencia'	|| pls_util_pck.enter_w ||
					'		and	y.nr_seq_lote		= :nr_seq_lote '		|| pls_util_pck.enter_w ||
					'		and	y.nr_seq_conta		is not null) '			|| pls_util_pck.enter_w;
	dados_bind_p := sql_pck.bind_variable(':nr_seq_lote', dados_a520_p.nr_seq_lote, dados_bind_p);
	ds_and_w := 'and	';
end if;


if (dados_a520_p.qt_guia_ref_exce > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'not exists (	select 	1 ' 								|| pls_util_pck.enter_w ||
					'		from	ptu_lote_aviso_excecao	y ' 					|| pls_util_pck.enter_w ||
					'		where	y.cd_guia_referencia	= '||cta_w||'.cd_guia_referencia'	|| pls_util_pck.enter_w ||
					'		and	y.nr_seq_lote		= :nr_seq_lote '			|| pls_util_pck.enter_w ||
					'		and	y.cd_guia_referencia	is not null) '				|| pls_util_pck.enter_w;
	dados_bind_p := sql_pck.bind_variable(':nr_seq_lote', dados_a520_p.nr_seq_lote, dados_bind_p);
	ds_and_w := 'and	';
end if;





return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_aviso_pck.gera_sql_a520_where_cta ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
