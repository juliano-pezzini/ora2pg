-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_aviso_pck.gera_sql_a520_where_benef ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gera o SQL, parte do WHERE relacionada ao beneficiario.
		
-------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_sql_w	varchar(32000);

qt_ie_tipo_segurado_w		integer;
qt_nr_seq_ops_congenere_w	integer;
qt_nr_seq_congenere_w		integer;
qt_nr_seq_contrato_w		integer;
qt_nr_seq_intercambio_w		integer;
in_ie_tipo_segurado_w		varchar(4000);
qt_nr_seq_plano_w		integer;
qt_nr_seq_carteira_w		integer;

benef_w 			alias_p.beneficiario%type;
cta_w				alias_p.conta%type;
ds_and_w			varchar(10);


BEGIN

ds_sql_w	:= '';
benef_w		:= alias_p.beneficiario;
cta_w		:= alias_p.conta;

	-- quantidade de regras com tipo de segurado

select	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.ie_tipo_segurado IS NOT NULL AND x.ie_tipo_segurado::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_ie_tipo_segurado,
	-- quantidade de regras com congenere OPS

	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_ops_congenere IS NOT NULL AND x.nr_seq_ops_congenere::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_ops_congenere,
	-- quantidade de regras com congenere

	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_congenere IS NOT NULL AND x.nr_seq_congenere::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_congenere,
	-- quantidade de regras com contrato

	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_contrato IS NOT NULL AND x.nr_seq_contrato::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_contrato,
	-- quantidade de regras com intercambio

	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_intercambio IS NOT NULL AND x.nr_seq_intercambio::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_intercambio,
	-- quantidade de regras com produto

	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x
		where	x.nr_seq_regra			= a.nr_seq_regra
		and	(x.nr_seq_plano IS NOT NULL AND x.nr_seq_plano::text <> '')
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_plano,
	-- quantidade de regras de carteira ativas

	max((	select	count(1)
		from	ptu_regra_aviso_cob_benef	x,
			pls_oc_atend_carteira		z
		where	z.nr_sequencia			= x.nr_seq_regra_atend_cart
		and	x.nr_seq_regra			= a.nr_seq_regra
		and	z.ie_situacao			= 'A'
		and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao)) qt_nr_seq_carteira,
	-- Levante das regras por tipo de segurado

	max((WITH RECURSIVE cte AS (
select	substr(''''||t.ie_tipo_segurado,3)||''''
		from (	select	x.ie_tipo_segurado,
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_segurado) seq
			from	ptu_regra_aviso_cob_benef	x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_tipo_segurado IS NOT NULL AND x.ie_tipo_segurado::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_tipo_segurado, x.nr_seq_regra) t WHERE t.seq = 1
  UNION ALL
select	c. || ''',' || substr(''''||t.ie_tipo_segurado,3)||''''
		from (	select	x.ie_tipo_segurado, 
				count(1) over (partition by x.nr_seq_regra) cnt,
				row_number() over (partition by x.nr_seq_regra order by x.ie_tipo_segurado) seq
			from	ptu_regra_aviso_cob_benef	x
			where	x.nr_seq_regra			= dados_a520_p.nr_seq_regra
			and	(x.ie_tipo_segurado IS NOT NULL AND x.ie_tipo_segurado::text <> '')
			and	x.ie_excecao			= dados_gerais_a520_p.ie_excecao
			group by x.ie_tipo_segurado, x.nr_seq_regra) JOIN cte c ON (c.prior seq + 1 = t.seq)

) SELECT * FROM cte WHERE seq	= cnt;
)) in_ie_tipo_segurado
into STRICT	qt_ie_tipo_segurado_w,
	qt_nr_seq_ops_congenere_w,
	qt_nr_seq_congenere_w,
	qt_nr_seq_contrato_w,
	qt_nr_seq_intercambio_w,
	qt_nr_seq_plano_w,
	qt_nr_seq_carteira_w,
	in_ie_tipo_segurado_w
from	ptu_lote_aviso	a
where	a.nr_sequencia	= dados_a520_p.nr_seq_lote;


ds_and_w := '';

-- Monta a query e realiza os bindings necessarios

if (qt_ie_tipo_segurado_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||' nvl('||cta_w||'.ie_tipo_segurado,'||benef_w||'.ie_tipo_segurado) in ('||in_ie_tipo_segurado_w||') ' || pls_util_pck.enter_w;	
	ds_and_w := 'and	';
	
end if;

if (qt_nr_seq_ops_congenere_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_benef	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_ops_congenere		= '||benef_w||'.nr_seq_ops_congenere ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
	
end if;

if (qt_nr_seq_congenere_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_benef	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_congenere		= '||benef_w||'.nr_seq_congenere ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
	
end if;


if (qt_nr_seq_contrato_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_benef	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_contrato		= '||benef_w||'.nr_seq_contrato ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
	
end if;

if (qt_nr_seq_intercambio_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_benef	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_intercambio		= '||benef_w||'.nr_seq_intercambio ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
	
end if;

if (qt_nr_seq_plano_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_benef	x ' || pls_util_pck.enter_w ||
					'		where	x.nr_seq_plano			= '||benef_w||'.nr_seq_plano ' || pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra			= :nr_seq_regra ) ' || pls_util_pck.enter_w;
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
end if;

if (qt_nr_seq_carteira_w > 0) then

	ds_sql_w := ds_sql_w||ds_and_w||'exists (	select	1 ' || pls_util_pck.enter_w ||
					'		from	ptu_regra_aviso_cob_benef			x, ' || pls_util_pck.enter_w ||
					'			pls_oc_atend_carteira				z ' || pls_util_pck.enter_w ||
					'		where	z.nr_sequencia					= x.nr_seq_regra_atend_cart '|| pls_util_pck.enter_w ||
					'		and	z.ie_situacao					= ''A'' ' || pls_util_pck.enter_w ||
					'		and	pls_valida_regra_cart('||benef_w||'.nr_sequencia, z.nr_sequencia)		= ''S'' '|| pls_util_pck.enter_w ||
					'		and	x.nr_seq_regra					= :nr_seq_regra ) ' || pls_util_pck.enter_w;
					
					
	ds_and_w := 'and	';
	
	dados_bind_p := sql_pck.bind_variable(':nr_seq_regra', dados_a520_p.nr_seq_regra, dados_bind_p);
end if;


return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_aviso_pck.gera_sql_a520_where_benef ( dados_a520_p dados_lote_a520_t, alias_p alias_a520_t, dados_gerais_a520_p dados_gerais_a520_t, dados_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
