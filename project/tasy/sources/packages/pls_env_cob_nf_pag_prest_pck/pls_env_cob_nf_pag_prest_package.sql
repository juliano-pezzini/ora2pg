-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_env_cob_nf_pag_prest_pck.pls_env_cob_nf_pag_prest ( nm_usuario_p usuario.nm_usuario%type ) AS $body$
DECLARE


ds_assunto_w		varchar(4000) := 'Cobrança de envio da nota fiscal do pagamento médico';
ds_mensagem_w		varchar(4000);
dt_vencimento_w		timestamp;
dt_atual_w		timestamp := trunc(clock_timestamp());

C01 CURSOR FOR
	SELECT	m.nr_sequencia nr_seq_regra,
		e.nr_sequencia nr_seq_regra_env,
		d.nr_sequencia nr_seq_regra_dest,
		m.ds_mensagem,
		m.nm_usuario_origem,
		to_char(e.nr_dia_env_cob) nr_dia_env_cob,
		coalesce(e.qt_dias_venc,0) qt_dias_venc,
		e.ie_situacao,
		d.nr_seq_prestador,
		(SELECT	max(u.ds_email)
		from	usuario	u
		where	u.nm_usuario = m.nm_usuario_origem) ds_email_origem,
		(select	max(u.ds_email)
		from	usuario	u
		where	u.nm_usuario = nm_usuario_p) ds_email_usuario
	from	pls_regra_cob_nf_pp	m,
		pls_regra_cob_nf_pp_env	e,
		pls_regra_cob_nf_pp_dest d
	where	m.nr_sequencia	= e.nr_seq_regra
	and	e.nr_sequencia	= d.nr_seq_regra
	and	m.ie_situacao	= 'A'
	order by 1,2;

C02 CURSOR(nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		ie_situacao_pc		titulo_pagar.ie_situacao%type) FOR
	SELECT	substr(pls_obter_dados_prestador(pp.nr_seq_prestador, 'N'),1,255) nm_prestador,
		pls_obter_dados_prestador(pp.nr_seq_prestador,'M') ds_email_destino,
		pp.nr_seq_lote,
		lp.dt_mes_competencia,
		tp.nr_titulo,
		tp.dt_vencimento_atual,
		tp.vl_titulo,
		pv.vl_liquido
	from	titulo_pagar			tp,
		pls_pag_prest_vencimento	pv,
		pls_pagamento_prestador		pp,
		pls_lote_pagamento		lp
	where	tp.nr_titulo		= pv.nr_titulo
	and	pp.nr_sequencia		= pv.nr_seq_pag_prestador
	and	lp.nr_sequencia		= pp.nr_seq_lote
	and (tp.ie_situacao		= ie_situacao_pc	or coalesce(ie_situacao_pc::text, '') = '')
	and (pp.nr_seq_prestador 	= nr_seq_prestador_pc	or coalesce(nr_seq_prestador_pc::text, '') = '');
BEGIN
-- Obter regras de envio de cobrança da NF do pagamento
for r_c01_w in c01 loop

	-- Verificar se é o dia de envio das cobranças
	if (r_c01_w.nr_dia_env_cob = to_char(clock_timestamp(),'dd')) then

		-- Obter títulos e emails dos prestadores
		for r_c02_w in c02( r_c01_w.nr_seq_prestador, r_c01_w.ie_situacao) loop
			-- Somar o dias vencidos a data de vencimento
			dt_vencimento_w := trunc(r_c02_w.dt_vencimento_atual + r_c01_w.qt_dias_venc);

			-- Verifica se esta vencido o título para cobrança
			if (dt_vencimento_w <= dt_atual_w) then
				-- Mensagem de envio para o email
				ds_mensagem_w	:= r_c01_w.ds_mensagem;
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@NM_PRESTADOR', r_c02_w.nm_prestador),1,4000);
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@NR_LOTE_PGTO', r_c02_w.nr_seq_lote),1,4000);
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@DT_COMP_LOTE', r_c02_w.dt_mes_competencia),1,4000);
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@NR_TITULO', r_c02_w.nr_titulo),1,4000);
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@DT_VENC_TIT', r_c02_w.dt_vencimento_atual),1,4000);
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@VL_TOTAL_TIT', r_c02_w.vl_titulo),1,4000);
				ds_mensagem_w	:= substr( replace_macro( ds_mensagem_w, '@VL_TOTAL_NF', r_c02_w.vl_liquido),1,4000);

				-- Enviar email ao prestador
				CALL enviar_email(	ds_assunto_w, ds_mensagem_w, coalesce(r_c01_w.ds_email_origem,r_c01_w.ds_email_usuario), r_c02_w.ds_email_destino, nm_usuario_p, 'M');
			end if;
		end loop;
	end if;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_env_cob_nf_pag_prest_pck.pls_env_cob_nf_pag_prest ( nm_usuario_p usuario.nm_usuario%type ) FROM PUBLIC;
