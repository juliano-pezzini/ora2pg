-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_gerar_tit_fat ( nr_seq_lote_p bigint, nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


	ie_tipo_movimento_w		varchar(3);
	ie_lote_reembolso_fat_w		pls_parametro_contabil.ie_lote_reembolso_fat%type;
	ie_lote_dif_fat_w		pls_parametro_contabil.ie_lote_dif_fat%type;
	ie_lote_ajuste_fat_w		pls_parametro_contabil.ie_lote_ajuste_fat%type;
	ie_lote_taxa_fat_w		pls_parametro_contabil.ie_lote_taxa_fat%type;
	vl_contabil_w			ctb_documento.vl_movimento%type;
	nm_atributo_w			ctb_documento.nm_atributo%type;
	nr_seq_atualizacao_w		pls_atualizacao_contabil.nr_sequencia%type := 0;
	qt_movimento_w			bigint := 0;

	c_rec_fat CURSOR FOR
	SELECT	coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0) vl_contab_ndc,
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='T' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END  vl_contab_dif,
		e.vl_administracao vl_contab_taxa,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0) vl_contab_ajuste,
		coalesce(h.vl_taxa,0) vl_contab_taxa_adm,
		trunc(f.dt_mes_competencia,'month') dt_mes_competencia,
		'PLS_FATURA_PROC' nm_tabela,
		30 nr_seq_info_ctb,
		f.dt_emissao,
		r.dt_emissao dt_emissao_titulo,
		p.ie_tipo_cobranca,
		(SELECT	x.ie_status
		from	pls_conta_proc x
		where	a.nr_seq_conta_proc	= x.nr_sequencia) ie_status,
		f.nr_sequencia nr_seq_fatura,
		t.nr_sequencia nr_documento,
		e.nr_sequencia nr_seq_doc_compl,
		p.nr_sequencia nr_doc_analitico
	FROM pls_conta t, pls_segurado s, pls_lote_faturamento l, pls_conta_pos_estab_contab e, pls_fatura_evento d, pls_fatura_conta c, pls_conta_pos_estabelecido a, pls_fatura f
LEFT OUTER JOIN titulo_receber r ON (f.nr_titulo = r.nr_titulo)
, pls_fatura_proc p
LEFT OUTER JOIN pls_conta_pos_taxa_contab h ON (p.nr_seq_pos_taxa_contab = h.nr_sequencia)
WHERE t.nr_sequencia 		= a.nr_seq_conta and a.nr_sequencia 		= e.nr_seq_conta_pos and s.nr_sequencia 		= t.nr_seq_segurado and a.nr_sequencia 		= p.nr_seq_conta_pos_estab and c.nr_sequencia 		= p.nr_seq_fatura_conta and d.nr_sequencia 		= c.nr_seq_fatura_evento and f.nr_sequencia 		= d.nr_seq_fatura and l.nr_sequencia 		= f.nr_seq_lote and coalesce(f.ie_impedimento_cobranca,'X') not in ('NF','BP') and e.nr_sequencia		= p.nr_seq_conta_pos_contab   and coalesce(f.nr_titulo, 0) 	<> 0 and coalesce(f.nr_seq_cancel_fat::text, '') = '' and coalesce(a.ie_status_faturamento, 'A') <> 'A' and (l.nr_sequencia = nr_seq_lote_p or coalesce(nr_seq_lote_p::text, '') = '') and (f.nr_sequencia = nr_seq_fatura_p or coalesce(nr_seq_fatura_p::text, '') = '')
	
union all

	select	coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0) vl_contab_ndc,
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='T' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END  vl_contab_dif,
		e.vl_administracao vl_contab_taxa,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0) vl_contab_ajuste,
		coalesce(h.vl_taxa,0) vl_contab_taxa_adm,
		trunc(f.dt_mes_competencia,'month') dt_mes_competencia,
		'PLS_FATURA_PROC' nm_tabela,
		30 nr_seq_info_ctb,
		f.dt_emissao,
		r.dt_emissao dt_emissao_titulo,
		p.ie_tipo_cobranca,
		(select	x.ie_status
		from	pls_conta_proc x
		where	a.nr_seq_conta_proc	= x.nr_sequencia) ie_status,
		f.nr_sequencia nr_seq_fatura,
		t.nr_sequencia nr_documento,
		e.nr_sequencia nr_seq_doc_compl,
		p.nr_sequencia nr_doc_analitico
	FROM pls_conta t, pls_segurado s, pls_lote_faturamento l, pls_conta_pos_estab_contab e, pls_fatura_evento d, pls_fatura_conta c, pls_conta_pos_estabelecido a, pls_fatura f
LEFT OUTER JOIN titulo_receber r ON (f.nr_titulo = r.nr_titulo)
, pls_fatura_proc p
LEFT OUTER JOIN pls_conta_pos_taxa_contab h ON (p.nr_seq_pos_taxa_contab = h.nr_sequencia)
WHERE t.nr_sequencia 		= a.nr_seq_conta and a.nr_sequencia 		= e.nr_seq_conta_pos and s.nr_sequencia 		= t.nr_seq_segurado and a.nr_sequencia 		= p.nr_seq_conta_pos_estab and c.nr_sequencia 		= p.nr_seq_fatura_conta and d.nr_sequencia 		= c.nr_seq_fatura_evento and f.nr_sequencia 		= d.nr_seq_fatura and l.nr_sequencia 		= f.nr_seq_lote  and coalesce(f.nr_titulo, 0) 	<> 0  and coalesce(f.ie_impedimento_cobranca,'X') not in ('NF','BP') and coalesce(f.nr_seq_cancel_fat::text, '') = '' and not exists ( 	select 1
					from   pls_fatura_proc z
					where  a.nr_sequencia  = z.nr_seq_conta_pos_estab
					and    e.nr_sequencia  = z.nr_seq_conta_pos_contab) and (l.nr_sequencia = nr_seq_lote_p or coalesce(nr_seq_lote_p::text, '') = '') and (f.nr_sequencia = nr_seq_fatura_p or coalesce(nr_seq_fatura_p::text, '') = '')
	 
union all

	select	coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0) vl_contab_ndc,
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='T' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END  vl_contab_dif,
		e.vl_administracao vl_contab_taxa,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0) vl_contab_ajuste,
		coalesce(h.vl_taxa,0) vl_contab_taxa_adm,
		trunc(f.dt_mes_competencia,'month') dt_mes_competencia,
		'PLS_FATURA_MAT' nm_tabela,
		30 nr_seq_info_ctb,
		f.dt_emissao,
		r.dt_emissao dt_emissao_titulo,
		m.ie_tipo_cobranca,
		(select	x.ie_status
		from	pls_conta_mat x
		where	a.nr_seq_conta_mat	= x.nr_sequencia) ie_status,
		f.nr_sequencia nr_seq_fatura,
		t.nr_sequencia nr_documento,
		e.nr_sequencia nr_seq_doc_compl,
		m.nr_sequencia nr_doc_analitico
	FROM pls_conta t, pls_segurado s, pls_lote_faturamento l, pls_conta_pos_estab_contab e, pls_fatura_evento d, pls_fatura_conta c, pls_conta_pos_estabelecido a, pls_fatura f
LEFT OUTER JOIN titulo_receber r ON (f.nr_titulo = r.nr_titulo)
, pls_fatura_mat m
LEFT OUTER JOIN pls_conta_pos_taxa_contab h ON (m.nr_seq_pos_taxa_contab = h.nr_sequencia)
WHERE t.nr_sequencia 		= a.nr_seq_conta and a.nr_sequencia 		= e.nr_seq_conta_pos and s.nr_sequencia 		= t.nr_seq_segurado and a.nr_sequencia 		= m.nr_seq_conta_pos_estab and c.nr_sequencia 		= m.nr_seq_fatura_conta and d.nr_sequencia 		= c.nr_seq_fatura_evento and f.nr_sequencia 		= d.nr_seq_fatura and l.nr_sequencia 		= f.nr_seq_lote and coalesce(f.ie_impedimento_cobranca,'X') not in ('NF','BP') and e.nr_sequencia		= m.nr_seq_conta_pos_contab  and coalesce(f.nr_titulo, 0) 	<> 0  and coalesce(f.nr_seq_cancel_fat::text, '') = '' and coalesce(a.ie_status_faturamento, 'A') <> 'A' and (l.nr_sequencia = nr_seq_lote_p or coalesce(nr_seq_lote_p::text, '') = '') and (f.nr_sequencia = nr_seq_fatura_p or coalesce(nr_seq_fatura_p::text, '') = '')
	 
union all

	select	coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0) vl_contab_ndc,
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='T' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END  vl_contab_dif,
		e.vl_administracao vl_contab_taxa,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0) vl_contab_ajuste,
		coalesce(h.vl_taxa,0) vl_contab_taxa_adm,
		trunc(f.dt_mes_competencia,'month') dt_mes_competencia,
		'PLS_FATURA_MAT' nm_tabela,
		30 nr_seq_info_ctb,
		f.dt_emissao,
		r.dt_emissao dt_emissao_titulo,
		m.ie_tipo_cobranca,
		(select	x.ie_status
		from	pls_conta_mat x
		where	a.nr_seq_conta_mat	= x.nr_sequencia) ie_status,
		f.nr_sequencia nr_seq_fatura,
		t.nr_sequencia nr_documento,
		e.nr_sequencia nr_seq_doc_compl,
		m.nr_sequencia nr_doc_analitico
	FROM pls_conta t, pls_segurado s, pls_lote_faturamento l, pls_conta_pos_estab_contab e, pls_fatura_evento d, pls_fatura_conta c, pls_conta_pos_estabelecido a, pls_fatura f
LEFT OUTER JOIN titulo_receber r ON (f.nr_titulo = r.nr_titulo)
, pls_fatura_mat m
LEFT OUTER JOIN pls_conta_pos_taxa_contab h ON (m.nr_seq_pos_taxa_contab = h.nr_sequencia)
WHERE t.nr_sequencia 		= a.nr_seq_conta and a.nr_sequencia 		= e.nr_seq_conta_pos and s.nr_sequencia 		= t.nr_seq_segurado and a.nr_sequencia 		= m.nr_seq_conta_pos_estab and c.nr_sequencia 		= m.nr_seq_fatura_conta and d.nr_sequencia 		= c.nr_seq_fatura_evento and f.nr_sequencia 		= d.nr_seq_fatura and l.nr_sequencia 		= f.nr_seq_lote and coalesce(f.ie_impedimento_cobranca,'X') not in ('NF','BP')  and coalesce(f.nr_titulo, 0) 	<> 0  and coalesce(f.nr_seq_cancel_fat::text, '') = '' and not exists ( 	select 1
					from   pls_fatura_mat z
					where  a.nr_sequencia  = z.nr_seq_conta_pos_estab
					and    e.nr_sequencia  = z.nr_seq_conta_pos_contab) and (l.nr_sequencia = nr_seq_lote_p or coalesce(nr_seq_lote_p::text, '') = '') and (f.nr_sequencia = nr_seq_fatura_p or coalesce(nr_seq_fatura_p::text, '') = '');

	vet_rec_fat c_rec_fat%rowtype;
	
	c_tipo_movimento CURSOR FOR
		SELECT	'NDR'
		
		where	ie_lote_reembolso_fat_w in ('R','A')
		and 	vet_rec_fat.ie_tipo_cobranca not in ('3','4')
		
union

		SELECT	'DIF'
		
		where (ie_lote_dif_fat_w = 'R'
		or (coalesce(ie_lote_dif_fat_w,'X') = 'X'
		and	ie_lote_ajuste_fat_w	= 'R'))
		and 	vet_rec_fat.ie_tipo_cobranca not in ('3','4')
		and	coalesce(vet_rec_fat.ie_status,'X') <> 'M'
		
union

		select	'VTX'
		
		where	ie_lote_taxa_fat_w in ('R','A')
		and 	vet_rec_fat.ie_tipo_cobranca not in ('3','4')
		
union

		select	'VLA'
		
		where	vet_rec_fat.vl_contab_ajuste <> 0
		and	ie_lote_ajuste_fat_w = 'R'
		and 	vet_rec_fat.ie_tipo_cobranca not in ('3','4')
		
union

		select	'VTA'
		
		where	vet_rec_fat.ie_tipo_cobranca in ('3','4');

	
BEGIN
	select	max(coalesce(a.ie_lote_ajuste_fat,'R')),
		max(coalesce(a.ie_lote_reembolso_fat,'R')),
		max(coalesce(a.ie_lote_taxa_fat,'R')),
		max(ie_lote_dif_fat)
	into STRICT	ie_lote_ajuste_fat_w,
		ie_lote_reembolso_fat_w,
		ie_lote_taxa_fat_w,
		ie_lote_dif_fat_w
	from	pls_parametro_contabil	a
	where	a.cd_estabelecimento	= cd_estabelecimento_p;

	open c_rec_fat;
	loop
	fetch c_rec_fat into
		vet_rec_fat;
	EXIT WHEN NOT FOUND; /* apply on c_rec_fat */
		begin
	pls_gerar_atualizacao_contabil(		clock_timestamp(),
						nm_usuario_p,
						cd_estabelecimento_p,
						44,
						'G',
						qt_movimento_w,
						nr_seq_atualizacao_w);

	CALL ctb_pls_atualizar_faturamento(		vet_rec_fat.nr_seq_fatura,	
						null,
						null,
						nr_seq_atualizacao_w,
						nm_usuario_p,
						cd_estabelecimento_p);
					
	CALL pls_atualizar_tributo_fat(		nm_usuario_p,
						cd_estabelecimento_p,
						vet_rec_fat.nr_seq_fatura,
						nr_seq_atualizacao_w);
		


		open c_tipo_movimento;
		loop
		fetch c_tipo_movimento into
			ie_tipo_movimento_w;
		EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
			begin
			if (ie_tipo_movimento_w = 'NDR') then
				vl_contabil_w		:= vet_rec_fat.vl_contab_ndc;
				nm_atributo_w		:= 'VL_FATURADO_NDC';
			elsif (ie_tipo_movimento_w = 'DIF') then
				vl_contabil_w		:= vet_rec_fat.vl_contab_dif;
				nm_atributo_w		:= 'VL_FATURADO_DIF';
			elsif (ie_tipo_movimento_w = 'VTX') then
				vl_contabil_w		:= vet_rec_fat.vl_contab_taxa;
				nm_atributo_w		:= 'VL_TAXA';
			elsif (ie_tipo_movimento_w = 'VLA') then
				vl_contabil_w		:= vet_rec_fat.vl_contab_ajuste;
				nm_atributo_w		:= 'VL_AJUSTE';
			elsif (ie_tipo_movimento_w = 'VTA') then
				vl_contabil_w		:= vet_rec_fat.vl_contab_taxa_adm;
				nm_atributo_w		:= 'VL_TAXA_ADM';
			end if;

			if (coalesce(vl_contabil_w, 0) <> 0) then
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										44,
										null,
										vet_rec_fat.nr_seq_info_ctb,
										vet_rec_fat.nr_documento,
										vet_rec_fat.nr_seq_doc_compl,
										vet_rec_fat.nr_doc_analitico,
										vl_contabil_w,
										vet_rec_fat.nm_tabela,
										nm_atributo_w,
										nm_usuario_p);
			end if;
			end;
		end loop;
		close c_tipo_movimento;

	pls_gerar_atualizacao_contabil(		vet_rec_fat.dt_emissao_titulo,
						nm_usuario_p,
						cd_estabelecimento_p,
						44,
						'A',
						qt_movimento_w,
						nr_seq_atualizacao_w);
		end;
	end loop;
	close c_rec_fat;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_gerar_tit_fat ( nr_seq_lote_p bigint, nr_seq_fatura_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
