-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_pos_estab_update ( nr_seq_conta_pos_estab_p bigint, nr_seq_conta_p bigint, nr_seq_log_pos_estab_p bigint, nr_seq_conta_rec_p bigint, ie_situacao_p text, ie_status_faturamento_p text, nm_usuario_p text) AS $body$
DECLARE


	ie_tipo_movimento_w		varchar(1);
	ie_lote_ajuste_fat_w		pls_parametro_contabil.ie_lote_ajuste_fat%type;
	ie_lote_taxa_fat_w		pls_parametro_contabil.ie_lote_taxa_fat%type;
	ie_lote_reembolso_fat_w		pls_parametro_contabil.ie_lote_reembolso_fat%type;
	ie_lote_dif_fat_w		pls_parametro_contabil.ie_lote_dif_fat%type;
	ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
	vl_contabil_w			pls_conta_pos_estab_contab.vl_provisao%type;
	nm_tabela_w			ctb_documento.nm_tabela%type;
	nm_atributo_w			ctb_documento.nm_atributo%type;
	nr_seq_info_ctb_w		ctb_documento.nr_seq_info%type;
	cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
	nr_seq_ctb_doc_w		ctb_documento.nr_sequencia%type;
	ie_situacao_ctb_doc_w		ctb_documento.ie_situacao_ctb%type;
	ie_registro_ctb_doc_w		varchar(1);


	c_prov_fat CURSOR FOR
	SELECT	CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * coalesce(e.vl_provisao,0) vl_provisao,
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * coalesce(e.vl_administracao,0) vl_administracao,
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T', nr_seq_conta_rec_p))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T', nr_seq_conta_rec_p))::numeric   ELSE 0 END  vl_diferenca,
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * (coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0)) vl_reembolso,
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * (coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0)) vl_ajuste,
		trunc(f.dt_atualizacao_nrec) dt_atualizacao_nrec_log,
		trunc(e.dt_mes_competencia) dt_mes_competencia,
		CASE WHEN f.ie_status_faturamento_new='C' THEN  'ESTORNO' WHEN f.ie_status_faturamento_new='N' THEN  'ESTORNO' WHEN f.ie_status_faturamento_new='U' THEN  'ESTORNO' END  ds_origem,
		f.nr_sequencia nr_seq_log,
		b.nr_sequencia nr_seq_conta,
		e.nr_sequencia nr_seq_conta_pos_estab_contab
	from	pls_log_pos_estabelecido		f,
		pls_conta_pos_estab_contab 		e,
		pls_conta				b,
		pls_protocolo_conta			a,
		pls_segurado				s
	where	nr_seq_conta_pos_estab_p		= f.nr_seq_conta_pos
	and	b.nr_sequencia				= f.nr_seq_conta
	and	f.nr_seq_conta_pos			= e.nr_seq_conta_pos
	and	b.nr_sequencia				= nr_seq_conta_p
	and	f.nr_sequencia				= nr_seq_log_pos_estab_p
	and	a.nr_sequencia				= b.nr_seq_protocolo
	and	s.nr_sequencia 				= b.nr_seq_segurado
	and	coalesce(f.ie_tipo_registro,'H') 		= 'H' -- Historico
	and	((coalesce(f.ie_status_faturamento_ant,'X') 	in ('C','N','U','X')
	and	f.ie_status_faturamento_new 		in ('L','P'))
	or (f.ie_status_faturamento_ant 		in ('L','P')
	and	f.ie_status_faturamento_new 		in ('C','N','U'))
	or (f.ie_status_faturamento_ant		= 'P'
	and	f.ie_status_faturamento_new		= 'L'
	and	coalesce(e.nr_lote_contabil_prov, 0)		= 0
	and	not exists (	SELECT 	1
				from	ctb_documento x
				where	x.nr_documento = nr_seq_conta_pos_estab_p
				and	x.nr_seq_doc_compl = e.nr_sequencia
				and	x.ie_situacao_ctb = 'P'
				and	coalesce(x.ds_origem, 'X') <> 'ESTORNO'
				and	x.cd_tipo_lote_contabil = 43)))
	and	a.cd_estabelecimento			= cd_estabelecimento_w
	and	a.ie_situacao				<> 'RE'
	and	coalesce(ie_situacao_p,'A')			= 'A'
        and     coalesce(ie_status_faturamento_p, 'A') 	<> 'A'
	and	coalesce((	select	max(r.ie_situacao)
			from	pls_conta_medica_resumo r
			where	b.nr_sequencia	= r.nr_seq_conta
			and	r.nr_sequencia	= e.nr_seq_conta_resumo),'X')	<> 'I';
	
	vet_prov_fat c_prov_fat%rowtype;

	c_tipo_movimento CURSOR FOR
	SELECT	'P'
	
	where (ie_lote_taxa_fat_w	not('P','A')
	and	ie_lote_reembolso_fat_w	not in ('P','A'))
	
union

	SELECT	'A'
	
	where	vet_prov_fat.vl_ajuste <> 0
	and	ie_lote_ajuste_fat_w	= 'P'
	
union

	select	'T'
	
	where	ie_lote_taxa_fat_w	in ('P','A')
	
union

	select	'D'
	
	where	ie_lote_dif_fat_w	= 'P'
	or (coalesce(ie_lote_dif_fat_w,'X') = 'X'
	and	ie_lote_ajuste_fat_w	= 'P')
	
union

	select	'R'
	
	where	ie_lote_reembolso_fat_w	in ('P','A');
	
	
BEGIN
	begin
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	exception when others then
	cd_estabelecimento_w := null;
	end;

	select	coalesce(max(ie_status_prov_pagto),'N'),
		max(coalesce(ie_lote_ajuste_fat,'R')),
		max(coalesce(ie_lote_taxa_fat,'R')),
		max(coalesce(ie_lote_reembolso_fat,'R')),
		max(ie_lote_dif_fat)
	into STRICT	ie_status_prov_pagto_w,
		ie_lote_ajuste_fat_w,
		ie_lote_taxa_fat_w,
		ie_lote_reembolso_fat_w,
		ie_lote_dif_fat_w
	from	pls_parametro_contabil
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	open c_prov_fat;
	loop
	fetch c_prov_fat into
		vet_prov_fat;
	EXIT WHEN NOT FOUND; /* apply on c_prov_fat */
		begin

		open c_tipo_movimento;
		loop
		fetch c_tipo_movimento into
			ie_tipo_movimento_w;
		EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */

			begin
			nm_tabela_w		:= 'PLS_CONTA_POS_ESTABELECIDO';

			if (ie_tipo_movimento_w = 'P') then /* Provisao */
				vl_contabil_w		:= vet_prov_fat.vl_provisao;
				nm_atributo_w		:= 'VL_LIBERADO';
				
				if (coalesce(vet_prov_fat.nr_seq_log,0) = 0) then
					nr_seq_info_ctb_w	:= 32;
				else
					nr_seq_info_ctb_w	:= 76;
				end if;
				
			elsif (ie_tipo_movimento_w = 'T') then /* Taxa */
				vl_contabil_w		:= vet_prov_fat.vl_administracao;
				nm_atributo_w		:= 'VL_ADMINISTRACAO';
				nr_seq_info_ctb_w	:= 33;
				
			elsif (ie_tipo_movimento_w = 'D') then /* Diferenca */
				vl_contabil_w		:= vet_prov_fat.vl_diferenca;
				nm_atributo_w		:= 'VL_DIFERENCA';
				nr_seq_info_ctb_w	:= 32;
			
			elsif (ie_tipo_movimento_w = 'R') then /* Reembolso */
				vl_contabil_w		:= vet_prov_fat.vl_reembolso;
				nm_atributo_w		:= 'VL_REEMBOLSO';
				nr_seq_info_ctb_w	:= 32;	
			
			elsif (ie_tipo_movimento_w = 'A') then /* Ajuste */
				vl_contabil_w		:= vet_prov_fat.vl_ajuste;	
				nm_atributo_w		:= 'VL_AJUSTE';
				nr_seq_info_ctb_w	:= 32;
			end if;	

			if (coalesce(vl_contabil_w, 0) <> 0) then

				if (coalesce(vet_prov_fat.ds_origem, 'X') = 'ESTORNO') then
					select	coalesce(max('S'), 'N'),
						coalesce(max(a.nr_sequencia), 0),
						coalesce(max(ie_situacao_ctb), 'C')
					into STRICT	ie_registro_ctb_doc_w,
						nr_seq_ctb_doc_w,
						ie_situacao_ctb_doc_w
					from	ctb_documento a
					where	nr_sequencia = (SELECT 	max(nr_sequencia)
								from 	ctb_documento b
								where	b.nr_documento	= nr_seq_conta_pos_estab_p
								and	b.nr_seq_doc_compl = vet_prov_fat.nr_seq_conta_pos_estab_contab
								and	b.nm_atributo = nm_atributo_w
								and	b.cd_tipo_lote_contabil = 43
								and 	abs(b.vl_movimento) = abs(vl_contabil_w))
					and	coalesce(a.ds_origem, 'X') <> 'ESTORNO';

					if (ie_registro_ctb_doc_w = 'S' and ie_situacao_ctb_doc_w = 'P') then
						delete 	FROM ctb_documento
						where	nr_sequencia = nr_seq_ctb_doc_w;

						return;
					elsif (ie_registro_ctb_doc_w = 'N') then
						return;
					end if;
				end if;
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_w,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										43,
										null,
										nr_seq_info_ctb_w,
										nr_seq_conta_pos_estab_p,
										vet_prov_fat.nr_seq_conta_pos_estab_contab,
										vet_prov_fat.nr_seq_log,
										vl_contabil_w,
										nm_tabela_w,
										nm_atributo_w,
										nm_usuario_p,
										'P',
										vet_prov_fat.ds_origem);


			end if;
			end;
		end loop;
		close c_tipo_movimento;
		end;
	end loop;
	close c_prov_fat;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_pos_estab_update ( nr_seq_conta_pos_estab_p bigint, nr_seq_conta_p bigint, nr_seq_log_pos_estab_p bigint, nr_seq_conta_rec_p bigint, ie_situacao_p text, ie_status_faturamento_p text, nm_usuario_p text) FROM PUBLIC;
