-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_gerar_tit_pp ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


	nr_seq_atualizacao_w			pls_atualizacao_contabil.nr_sequencia%type := 0;
	ie_status_prov_pagto_w			pls_parametro_contabil.ie_status_prov_pagto%type;
	ie_lote_ajuste_prod_w			pls_parametro_contabil.ie_lote_ajuste_prod%type;
	ie_data_trib_prod_med_w			pls_parametro_contabil.ie_data_trib_prod_med%type;
	dt_referencia_w 			timestamp;
	dt_referencia_month_w			timestamp;
	qt_movimento_w				bigint := 0;
	qt_outro_w				bigint;
	qt_prest_pgto_w				bigint;
	ie_tipo_movimento_w			varchar(2);

	c_evento CURSOR FOR
	SELECT	coalesce(i.vl_item,0) vl_item,  /*Contabilizar os valores dos itens, conforme o lancamento no pagamento de producao medica*/
		trunc(l.dt_geracao_titulo) dt_movimento,
		'PLS_PP_ITEM_LOTE' nm_tabela,
		'VL_ITEM' nm_atributo,
		i.nr_sequencia nr_seq_item_pp,
		l.nr_sequencia nr_documento,
		e.nr_sequencia nr_seq_doc_compl,
		i.nr_sequencia nr_doc_analitico
	FROM pls_prestador p, pls_pp_lote l, pls_evento e, pls_pp_item_lote i
LEFT OUTER JOIN pls_pp_lanc_programado z ON (i.nr_seq_lanc_prog = z.nr_sequencia)
WHERE l.nr_sequencia		= i.nr_seq_lote and p.nr_sequencia		= i.nr_seq_prestador and e.nr_sequencia		= i.nr_seq_evento  and e.ie_tipo_evento	= 'F' and l.ie_status		= 'D' and l.nr_sequencia		= nr_seq_lote_p
	
union all

	SELECT	coalesce(i.vl_acao_negativo,0) * -1 vl_item, /*Contabilizar as apropriacoes para o proximo pagamento, invertendo as contas de debito e credito*/
		trunc(l.dt_geracao_titulo) dt_movimento,
		'PLS_PP_ITEM_LOTE' nm_tabela,
		'VL_ITEM' nm_atributo,
		i.nr_sequencia nr_seq_item_pp,
		l.nr_sequencia nr_documento,
		e.nr_sequencia nr_seq_doc_compl,
		i.nr_sequencia nr_doc_analitico
	FROM pls_prestador p, pls_pp_lote l, pls_evento e, pls_pp_item_lote i
LEFT OUTER JOIN pls_pp_lanc_programado z ON (i.nr_seq_lanc_prog = z.nr_sequencia)
WHERE l.nr_sequencia		= i.nr_seq_lote and p.nr_sequencia		= i.nr_seq_prestador and e.nr_sequencia		= i.nr_seq_evento  and e.ie_tipo_evento	= 'F' and coalesce(i.vl_acao_negativo,0) <> 0 and l.ie_status		= 'D' and l.nr_sequencia		= nr_seq_lote_p;

	vet_evento c_evento%rowtype;

	c_pagamento CURSOR FOR
	SELECT	'P' ie_proc_mat, /*Procedimento*/
		trunc(a.dt_geracao_titulo) dt_movimento,
		coalesce(d.vl_liberado,0) vl_contabil,
		coalesce(d.vl_glosa,0) vl_glosa,
		d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
		b.nr_seq_protocolo nr_documento,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico,
		c.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat,
		b.nr_sequencia nr_seq_conta
	FROM pls_pp_item_lote i, pls_conta_proc c, pls_conta b, pls_pp_lote a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_proc and b.nr_sequencia		= c.nr_seq_conta and b.nr_sequencia		= d.nr_seq_conta and d.nr_sequencia		= i.nr_seq_resumo and b.nr_sequencia		= i.nr_seq_conta and a.nr_sequencia		= i.nr_seq_lote  and ((d.ie_situacao = 'A') or (coalesce(d.ie_situacao::text, '') = '')) and a.ie_status		= 'D' and a.nr_sequencia		= nr_seq_lote_p	
	
union all

	SELECT	'M' ie_proc_mat, /*Material*/
		trunc(a.dt_geracao_titulo) dt_movimento,
		coalesce(d.vl_liberado,0) vl_contabil,
		coalesce(d.vl_glosa,0) vl_glosa,
		d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
		b.nr_seq_protocolo nr_documento,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico,
		null nr_seq_conta_proc,
		c.nr_sequencia nr_seq_conta_mat,
		b.nr_sequencia nr_seq_conta
	FROM pls_pp_item_lote i, pls_conta_mat c, pls_conta b, pls_pp_lote a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_mat and b.nr_sequencia		= c.nr_seq_conta and b.nr_sequencia		= d.nr_seq_conta and d.nr_sequencia		= i.nr_seq_resumo and b.nr_sequencia		= i.nr_seq_conta and a.nr_sequencia		= i.nr_seq_lote  and ((d.ie_situacao = 'A') or (coalesce(d.ie_situacao::text, '') = '')) and a.ie_status		= 'D' and a.nr_sequencia = nr_seq_lote_p;

	vet_pagamento	c_pagamento%rowtype;

	c_tipo_movimento CURSOR FOR
		SELECT	'C'
		
		
union

		SELECT	'G'
		
		where	ie_status_prov_pagto_w <> 'F'
		
union

		select	'A'
		
		where	ie_lote_ajuste_prod_w = 'R'
		and	vet_pagamento.vl_ajuste > 0;

	c_tributo CURSOR FOR
	SELECT r.vl_tributo vl_contabil,
		trunc(CASE WHEN 	ie_data_trib_prod_med_w='VE' THEN fim_mes(b.dt_competencia) WHEN 	ie_data_trib_prod_med_w='T' THEN l.dt_geracao_titulo  ELSE fim_mes(l.dt_mes_competencia) END ) dt_movimento,
		r.nr_sequencia	nr_seq_trib_pp,
		'PLS_PP_BASE_ATUAL_TRIB' nm_tabela,
		'VL_TRIBUTO' nm_atributo,
		l.nr_sequencia nr_documento,
		i.nr_sequencia nr_seq_doc_compl,
		r.nr_sequencia nr_doc_analitico
	from	pls_pp_base_atual_trib		r,
		pls_pp_valor_trib_pessoa 	b,
		pls_pp_item_lote		i,
		pls_pp_lote			l,
		pls_pp_prestador		t,
		pls_prestador			p
	where	b.nr_sequencia		= r.nr_seq_trib_pessoa
	and	l.nr_sequencia		= r.nr_seq_lote
	and	i.nr_sequencia		= r.nr_seq_item_lote
	and	p.nr_sequencia		= b.nr_seq_prestador
	and	p.nr_sequencia		= t.nr_seq_prestador
	and	l.nr_sequencia		= t.nr_seq_lote
	and	l.ie_status		= 'D'
	and	l.nr_sequencia		= nr_seq_lote_p;

	vet_tributo c_tributo%rowtype;

	
BEGIN
	
	select	max(ie_data_trib_prod_med),
		max(coalesce(ie_status_prov_pagto,'NC')),
		max(coalesce(ie_lote_ajuste_prod,'R'))
	into STRICT	ie_data_trib_prod_med_w,
		ie_status_prov_pagto_w,
		ie_lote_ajuste_prod_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= cd_estabelecimento_p;

	select 	max(dt_mes_competencia)
	into STRICT	dt_referencia_w
	from	pls_pp_lote
	where	nr_sequencia	= nr_seq_lote_p;

	dt_referencia_month_w := trunc(dt_referencia_w, 'MONTH');

	select	sum(CASE WHEN ie_prestador_codificacao='P' THEN  1  ELSE 0 END ) qt_prest_pgto,
		sum(CASE WHEN ie_prestador_codificacao='P' THEN  0  ELSE 1 END ) qt_outro
	into STRICT	qt_prest_pgto_w,
		qt_outro_w
	from	pls_esquema_contabil
	where	ie_tipo_regra		= 'PM'
	and	ie_tipo_movimentacao	!= '13'
	and	dt_referencia_month_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_referencia_month_w);


	pls_gerar_atualizacao_contabil(	dt_referencia_w,
					nm_usuario_p,
					cd_estabelecimento_p,
					41,
					'G',
					qt_movimento_w,
					nr_seq_atualizacao_w);
	open c_evento;
	loop
	fetch c_evento into	
		vet_evento;
	EXIT WHEN NOT FOUND; /* apply on c_evento */
		begin
		ctb_pls_atualizar_eventos_pp(	nr_seq_lote_p,
						vet_evento.nr_seq_item_pp,
						nr_seq_atualizacao_w,
						cd_estabelecimento_p,
						nm_usuario_p,
						qt_movimento_w);

		if (coalesce(vet_evento.vl_item, 0) <> 0) then
			CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
									pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
									41,
									null,		
									39,
									vet_evento.nr_documento,
									vet_evento.nr_seq_doc_compl,
									vet_evento.nr_doc_analitico,
									vet_evento.vl_item,
									vet_evento.nm_tabela,
									vet_evento.nm_atributo,
									nm_usuario_p);
		end if;
		end;
	end loop;
	close c_evento;

	open c_pagamento;
	loop
	fetch c_pagamento into
		vet_pagamento;
	EXIT WHEN NOT FOUND; /* apply on c_pagamento */
		begin
			if (qt_outro_w > 0) then
				ctb_pls_atualizar_prod_med_in(	vet_pagamento.nr_seq_conta,
								vet_pagamento.nr_seq_conta_proc,
								vet_pagamento.nr_seq_conta_mat,
								nr_seq_atualizacao_w,
								nm_usuario_p,
								cd_estabelecimento_p,
								qt_movimento_w);
			end if;	

			if (qt_prest_pgto_w > 0) then
				ctb_pls_atualizar_prod_med_res(	vet_pagamento.nr_seq_conta,
								vet_pagamento.nr_seq_conta_proc,
								vet_pagamento.nr_seq_conta_mat,
								nr_seq_atualizacao_w,
								nm_usuario_p,
								cd_estabelecimento_p,
								qt_movimento_w,
								dt_referencia_w);						
			end if;
			open c_tipo_movimento;
				loop
				fetch c_tipo_movimento into
					ie_tipo_movimento_w;
				EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
					begin
					if (ie_tipo_movimento_w = 'C') then /* Conta */
						if (coalesce(vet_pagamento.vl_contabil, 0) <> 0) then
							CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
													pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
													41,
													null,		
													36,
													vet_pagamento.nr_documento,
													vet_pagamento.nr_seq_doc_compl,
													vet_pagamento.nr_doc_analitico,
													vet_pagamento.vl_contabil,
													'PLS_CONTA_MEDICA_RESUMO',
													'VL_LIBERADO',
													nm_usuario_p);
						end if;
					elsif (ie_tipo_movimento_w = 'G') then /* Glosa */
						if (coalesce(vet_pagamento.vl_glosa, 0) <> 0) then
							CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
													pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
													41,
													null,		
													24,
													vet_pagamento.nr_documento,
													vet_pagamento.nr_seq_doc_compl,
													vet_pagamento.nr_doc_analitico,
													vet_pagamento.vl_glosa,
													'PLS_CONTA_MEDICA_RESUMO',
													'VL_GLOSA',
													nm_usuario_p);
						end if;
					elsif (ie_tipo_movimento_w = 'A') then /* Valor de ajuste */
						if (coalesce(vet_pagamento.vl_ajuste, 0) <> 0) then
							CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
													pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
													41,
													null,		
													36,
													vet_pagamento.nr_documento,
													vet_pagamento.nr_seq_doc_compl,
													vet_pagamento.nr_doc_analitico,
													vet_pagamento.vl_ajuste,
													'PLS_CONTA_MEDICA_RESUMO',
													'VL_AJUSTE',
													nm_usuario_p);
						end if;
					end if;	
					end;
				end loop;
				close c_tipo_movimento;
		end;
	end loop;
	close c_pagamento;

	open c_tributo;
	loop
	fetch c_tributo into
		vet_tributo;
	EXIT WHEN NOT FOUND; /* apply on c_tributo */
		begin

		ctb_pls_atualizar_tributo_pp(	nr_seq_lote_p,
						vet_tributo.nr_seq_trib_pp,
						nr_seq_atualizacao_w,
						cd_estabelecimento_p,
						nm_usuario_p,
						qt_movimento_w);

			if (coalesce(vet_tributo.vl_contabil, 0) <> 0) then
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										41,
										null,		
										40,
										vet_tributo.nr_documento,
										vet_tributo.nr_seq_doc_compl,
										vet_tributo.nr_doc_analitico,
										vet_tributo.vl_contabil,
										vet_tributo.nm_tabela,
										vet_tributo.nm_atributo,
										nm_usuario_p);
			end if;
		end;
	end loop;
	close c_tributo;
	
	pls_gerar_atualizacao_contabil(	dt_referencia_w,
					nm_usuario_p,
					cd_estabelecimento_p,
					41,
					'A',
					qt_movimento_w,
					nr_seq_atualizacao_w);


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_gerar_tit_pp ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
