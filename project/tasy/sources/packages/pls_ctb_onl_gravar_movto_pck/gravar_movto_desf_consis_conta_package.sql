-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_desf_consis_conta ( nr_seq_conta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


	ie_lote_ajuste_prod_w			pls_parametro_contabil.ie_lote_ajuste_prod%type;
	ie_status_prov_pagto_w			pls_parametro_contabil.ie_status_prov_pagto%type;
	nr_seq_protocolo_w			pls_protocolo_conta.nr_sequencia%type;

	c_itens_prov_prod CURSOR FOR
		SELECT	p.nr_sequencia,
			d.nm_tabela,
			d.nm_atributo,
			CASE WHEN a.ie_tipo_protocolo='F' THEN  coalesce(p.vl_liberado, 0)  ELSE coalesce(p.vl_provisao,0) END  vl_provisao,
			a.ie_tipo_protocolo,
			d.cd_tipo_lote_contabil,
			d.nr_seq_info,
			a.nr_sequencia nr_documento,
			b.nr_sequencia nr_seq_doc_compl,
			p.nr_sequencia nr_doc_analitico,
			count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_conta_proc		p,
			pls_conta		b,
			pls_protocolo_conta	a,
			ctb_documento		d
		where	p.nr_seq_conta 			= b.nr_sequencia
		and	a.nr_sequencia			= b.nr_seq_protocolo
		and	p.nr_seq_conta			= nr_seq_conta_p
		and	a.cd_estabelecimento 		= cd_estabelecimento_p
		and	d.nr_documento			= a.nr_sequencia
		and	d.nr_seq_doc_compl		= b.nr_sequencia
		and	d.nr_doc_analitico		= p.nr_sequencia
		and	d.nm_tabela 			= 'PLS_CONTA_PROC'
		and	d.nm_atributo 			= 'VL_PROVISAO'
		and	coalesce(d.ds_origem, 'X') 		<> 'ESTORNO'
		and	d.cd_tipo_lote_contabil 	= 40
		group by p.nr_sequencia,
			d.nm_tabela,
			d.nm_atributo,
			a.ie_tipo_protocolo,
			p.vl_liberado,
			p.vl_provisao,
			a.ie_tipo_protocolo,
			d.cd_tipo_lote_contabil,
			d.nr_seq_info,
			a.nr_sequencia,
			b.nr_sequencia,
			p.nr_sequencia
		
union all

		SELECT	p.nr_sequencia,
			d.nm_tabela,
			d.nm_atributo,
			CASE WHEN a.ie_tipo_protocolo='F' THEN  coalesce(p.vl_liberado, 0)  ELSE coalesce(p.vl_provisao, 0) END  vl_provisao,
			a.ie_tipo_protocolo,
			d.cd_tipo_lote_contabil,
			d.nr_seq_info,
			a.nr_sequencia nr_documento,
			b.nr_sequencia nr_seq_doc_compl,
			p.nr_sequencia nr_doc_analitico,
			count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_conta_mat		p,
			pls_conta		b,
			pls_protocolo_conta	a,
			ctb_documento		d
		where	b.nr_sequencia			= p.nr_seq_conta
		and	a.nr_sequencia			= b.nr_seq_protocolo
		and	p.nr_seq_conta			= nr_seq_conta_p
		and	a.cd_estabelecimento		= cd_estabelecimento_p
		and	d.nr_documento			= a.nr_sequencia
		and	d.nr_seq_doc_compl		= b.nr_sequencia
		and	d.nr_doc_analitico		= p.nr_sequencia
		and	d.nm_tabela 			= 'PLS_CONTA_MAT'
		and	d.nm_atributo 			= 'VL_PROVISAO'
		and	coalesce(d.ds_origem, 'X') 		<> 'ESTORNO'
		and	d.cd_tipo_lote_contabil 	= 40
		group by p.nr_sequencia,
			d.nm_tabela,
			d.nm_atributo,
			a.ie_tipo_protocolo,
			p.vl_liberado,
			p.vl_provisao,
			a.ie_tipo_protocolo,
			d.cd_tipo_lote_contabil,
			d.nr_seq_info,
			a.nr_sequencia,
			b.nr_sequencia,
			p.nr_sequencia;
		
	vet_itens_prov_prod	c_itens_prov_prod%rowtype;

	
BEGIN

	select	max(coalesce(ie_status_prov_pagto,'NC')),
		max(coalesce(ie_lote_ajuste_prod,'R'))
	into STRICT	ie_status_prov_pagto_w,
		ie_lote_ajuste_prod_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= cd_estabelecimento_p;

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_protocolo_w
	from	pls_protocolo_conta	a,
		pls_conta		b
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= nr_seq_conta_p;
	
	if (ie_status_prov_pagto_w = 'NC') then
		open c_itens_prov_prod;
		loop
		fetch c_itens_prov_prod into	
			vet_itens_prov_prod;
		EXIT WHEN NOT FOUND; /* apply on c_itens_prov_prod */
			begin
			if (vet_itens_prov_prod.qt_pendente > 0) then
				delete 	FROM ctb_documento
				where	nr_documento 			= vet_itens_prov_prod.nr_documento
				and	nr_seq_doc_compl 		= vet_itens_prov_prod.nr_seq_doc_compl
				and	nr_doc_analitico 		= vet_itens_prov_prod.nr_doc_analitico
				and 	nm_tabela 			= vet_itens_prov_prod.nm_tabela
				and	nm_atributo 			= vet_itens_prov_prod.nm_atributo
				and	cd_tipo_lote_contabil 		= vet_itens_prov_prod.cd_tipo_lote_contabil
				and	nr_seq_info 			= vet_itens_prov_prod.nr_seq_info
				and	ie_situacao_ctb 		= 'P'
				and	coalesce(ds_origem, 'X')		<> 'ESTORNO';
			else
				if (vet_itens_prov_prod.vl_provisao > 0) then
					CALL ctb_concil_financeira_pck.ctb_gravar_documento(cd_estabelecimento_p,
											pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
											40,
											null,
											vet_itens_prov_prod.nr_seq_info,
											vet_itens_prov_prod.nr_documento,
											vet_itens_prov_prod.nr_seq_doc_compl,
											vet_itens_prov_prod.nr_doc_analitico,
											vet_itens_prov_prod.vl_provisao * -1, --Inverte o valor pois se trata de um estorno
											vet_itens_prov_prod.nm_tabela,
											vet_itens_prov_prod.nm_atributo,
											nm_usuario_p,
											'P',
											'ESTORNO');
				end if;
			end if;
			end;
		end loop;
		close c_itens_prov_prod;
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_desf_consis_conta ( nr_seq_conta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;
