-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_envio_a520 ( nr_seq_arquivo_p bigint, nm_usuario_p text) AS $body$
DECLARE


	cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
	ie_tipo_lote_w			ptu_lote_aviso.ie_tipo_lote%type;
	nr_seq_lote_w			ptu_lote_aviso.nr_sequencia%type;
	nm_atributo_w			ctb_documento.nm_atributo%type;
	nr_seq_atualizacao_w		pls_atualizacao_contabil.nr_sequencia%type := 0;
	qt_movimento_w			bigint := 0;
	ie_tipo_movimento_w		varchar(1);
	dt_movimento_w			timestamp;

	c_aviso CURSOR FOR
	SELECT	CASE WHEN ie_tipo_movimento_w='N' THEN x.vl_contabil  ELSE x.vl_contabil * -1 END  vl_contabil,
		x.nm_tabela,
		CASE WHEN ie_tipo_movimento_w='N' THEN 'VL_TOTAL'  ELSE 'VL_GLOSA' END  nm_atributo,
		86 nr_seq_info_ctb,
		nr_seq_aviso_proc_item,
		nr_seq_aviso_mat_item,
		x.nr_doc_analitico
	from (SELECT	i.vl_total vl_contabil,
			'PTU_AVISO_PROC_ITEM' nm_tabela,
			b.nr_seq_aviso_conta,
			i.nr_sequencia nr_seq_aviso_proc_item,
			null nr_seq_aviso_mat_item,
			i.nr_sequencia nr_doc_analitico
		from	ptu_aviso_procedimento	b,
			ptu_aviso_proc_item	i
		where	b.nr_sequencia		= i.nr_seq_aviso_procedimento
		
union all

		select	i.vl_total vl_contabil,
			'PTU_AVISO_MAT_ITEM' nm_tabela,
			b.nr_seq_aviso_conta,
			null nr_seq_aviso_proc_item,
			i.nr_sequencia nr_seq_aviso_mat_item,
			i.nr_sequencia nr_doc_analitico
		from	ptu_aviso_material	b,
			ptu_aviso_mat_item	i
		where	b.nr_sequencia		= i.nr_seq_aviso_material) x,
		ptu_aviso_protocolo	ap,
		ptu_aviso_conta		ac,
		pls_conta		c
	where	ap.nr_seq_arquivo		= nr_seq_arquivo_p
	and	ap.nr_sequencia			= ac.nr_seq_aviso_protocolo
	and	ac.nr_sequencia			= x.nr_seq_aviso_conta
	and	c.nr_sequencia			= ac.nr_seq_conta
	and	ie_tipo_lote_w			= 'E';
	vet_aviso c_aviso%rowtype;

	
BEGIN

	-- Obtem as informacoes referentes a ptu_lote_aviso, utilizadas para gravar o movimento
	begin
	select	b.cd_estabelecimento,
		b.ie_tipo_lote,
		coalesce(b.dt_referencia_inicio,b.dt_importacao),
		a.nr_seq_lote
	into STRICT	cd_estabelecimento_w,
		ie_tipo_lote_w,
		dt_movimento_w,
		nr_seq_lote_w
	from	ptu_aviso_arquivo a,
		ptu_lote_aviso b
	where 	a.nr_sequencia = nr_seq_arquivo_p
	and	a.nr_seq_lote = b.nr_sequencia;
	exception when others then
	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
	ie_tipo_lote_w		:= 'X';
	dt_movimento_w		:= null;
	nr_seq_lote_w		:= null;
	end;

	-- Se existir registro na tabela ptu_aviso_glosa_bx_dados para este arquivo, o tipo e 'G'. Caso contrario sera 'N'
	select 	coalesce((	select	'G'
			from	ptu_aviso_glosa_bx		g,
				ptu_aviso_glosa_bx_dados	d
			where	g.nr_sequencia		= d.nr_seq_glosa_baixa
			and	g.nr_seq_arquivo	= nr_seq_arquivo_p), 'N')
	into STRICT	ie_tipo_movimento_w
	;

	pls_gerar_atualizacao_contabil(		trunc(dt_movimento_w, 'month'),
						nm_usuario_p,
						cd_estabelecimento_w,
						57,
						'G',
						qt_movimento_w,
						nr_seq_atualizacao_w);

	ctb_pls_atualizar_aviso_cobr(		nr_seq_lote_w,
						nr_seq_arquivo_p,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_atualizacao_w,
						nm_usuario_p,
						cd_estabelecimento_w,
						qt_movimento_w);

	pls_gerar_atualizacao_contabil(		trunc(dt_movimento_w, 'month'),
						nm_usuario_p,
						cd_estabelecimento_w,
						57,
						'A',
						qt_movimento_w,
						nr_seq_atualizacao_w);

	open c_aviso;
	loop
	fetch c_aviso into
		vet_aviso;
	EXIT WHEN NOT FOUND; /* apply on c_aviso */
		begin

		if (coalesce(vet_aviso.vl_contabil, 0) <> 0) then

	

			CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_w,
									pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
									57,
									null,
									vet_aviso.nr_seq_info_ctb,
									nr_seq_lote_w,
									nr_seq_arquivo_p,
									vet_aviso.nr_doc_analitico,
									vet_aviso.vl_contabil,
									vet_aviso.nm_tabela,
									vet_aviso.nm_atributo,
									nm_usuario_p);

		end if;

		end;
	end loop;
	close c_aviso;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_envio_a520 ( nr_seq_arquivo_p bigint, nm_usuario_p text) FROM PUBLIC;
