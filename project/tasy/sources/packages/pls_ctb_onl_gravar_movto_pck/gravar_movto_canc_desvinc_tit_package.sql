-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_canc_desvinc_tit ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_cancelamento_p timestamp) AS $body$
DECLARE


	dt_cancelamento_w		timestamp;

	-- Obtem os registros da CTB_DOCUMENTO, ja ligando com a origem para gerar o estorno do movimento caso ele ja exista na tabela.
	c_pagamento CURSOR FOR
		/* Pagamento proc */

		SELECT distinct	'P' ie_proc_mat,
			b.nr_seq_protocolo	nr_documento,
			b.nr_sequencia		nr_seq_doc_compl,
			d.nr_sequencia 		nr_doc_analitico,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			e.ds_origem,
			coalesce(d.vl_liberado,0) vl_contabil,
			coalesce(d.vl_glosa,0) vl_glosa,
			d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
			count(case e.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		FROM pls_periodo_pagamento x, ctb_documento e, pls_conta_proc c, pls_conta b, pls_lote_pagamento a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_proc and c.nr_seq_conta		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= d.nr_seq_lote_pgto and a.nr_seq_periodo	= x.nr_sequencia  and a.nr_sequencia		= nr_seq_lote_p and e.cd_tipo_lote_contabil = 41 and e.cd_estabelecimento 	= cd_estabelecimento_p and e.nr_seq_info		in (24, 36, 39, 40) and e.nm_tabela		in ('PLS_CONTA_MEDICA_RESUMO') and e.nm_atributo 		in ('VL_LIBERADO', 'VL_GLOSA', 'VL_AJUSTE') and coalesce(e.ds_origem, 'X') 	<> 'ESTORNO' and e.nr_documento		= b.nr_seq_protocolo and e.nr_seq_doc_compl	= b.nr_sequencia and e.nr_doc_analitico	= d.nr_sequencia group by b.nr_seq_protocolo,
			b.nr_sequencia,
			d.nr_sequencia,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			e.ds_origem,
			d.vl_liberado,
			d.vl_glosa,
			d.vl_apresentado,
			d.vl_calculado
		
union all

		/* Pagamento mat*/

		SELECT distinct	'M' ie_proc_mat,
			b.nr_seq_protocolo	nr_documento,
			b.nr_sequencia	nr_seq_doc_compl,
			d.nr_sequencia 	nr_doc_analitico,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			e.ds_origem,
			coalesce(d.vl_liberado,0) vl_contabil,
			coalesce(d.vl_glosa,0) vl_glosa,
			d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
			count(case e.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		FROM pls_periodo_pagamento x, ctb_documento e, pls_conta_mat c, pls_conta b, pls_lote_pagamento a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_mat and c.nr_seq_conta		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= d.nr_seq_lote_pgto and a.nr_seq_periodo	= x.nr_sequencia  and a.nr_sequencia		= nr_seq_lote_p and e.cd_tipo_lote_contabil = 41 and e.cd_estabelecimento 	= cd_estabelecimento_p and e.nr_seq_info		in (24, 36, 39, 40) and e.nm_tabela		in ('PLS_CONTA_MEDICA_RESUMO') and e.nm_atributo 		in ('VL_LIBERADO', 'VL_GLOSA', 'VL_AJUSTE') and coalesce(e.ds_origem, 'X') 	<> 'ESTORNO' and e.nr_documento		= b.nr_seq_protocolo and e.nr_seq_doc_compl	= b.nr_sequencia and e.nr_doc_analitico	= d.nr_sequencia group by b.nr_seq_protocolo,
			b.nr_sequencia,
			d.nr_sequencia,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			e.ds_origem,
			d.vl_liberado,
			d.vl_glosa,
			d.vl_apresentado,
			d.vl_calculado;

	vet_pagamento	c_pagamento%rowtype;

	c_evento CURSOR FOR
		/* Evento */

		SELECT distinct	c.nr_sequencia nr_documento,
			b.nr_sequencia	nr_seq_doc_compl,
			a.nr_sequencia 	nr_doc_analitico,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			coalesce(a.vl_movimento,0) vl_movimento,
			count(case e.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_evento_movimento	a,
			pls_lote_evento		b,
			pls_lote_pagamento 	c,
			pls_periodo_pagamento 	x,
			ctb_documento 		e
		where	b.nr_sequencia		= a.nr_seq_lote
		and	c.nr_sequencia		= a.nr_seq_lote_pgto
		and	c.nr_seq_periodo	= x.nr_sequencia
		and	c.ie_status		= 'D'
		and	coalesce(b.nr_seq_lote_pgto_apropr,0) = 0
		and	coalesce(b.nr_seq_lote_ret_trib,0)	= 0
		and	c.nr_sequencia = nr_seq_lote_p
		and	e.cd_tipo_lote_contabil = 41
		and	e.cd_estabelecimento 	= cd_estabelecimento_p
		and	e.nr_seq_info		= 39
		and	e.nm_tabela		= 'PLS_EVENTO_MOVIMENTO'
		and	e.nm_atributo 		= 'VL_MOVIMENTO'
		and	coalesce(e.ds_origem, 'X') 	<> 'ESTORNO'
		and	e.nr_documento		= c.nr_sequencia
		and	e.nr_seq_doc_compl	= b.nr_sequencia
		and	e.nr_doc_analitico	= a.nr_sequencia
		group by c.nr_sequencia,
			b.nr_sequencia,
			a.nr_sequencia,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			a.vl_movimento
		/* Evento */

		
union all

		SELECT	distinct c.nr_sequencia nr_documento,
			b.nr_sequencia	nr_seq_doc_compl,
			a.nr_sequencia 	nr_doc_analitico,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			coalesce(a.vl_movimento,0),
			count(case e.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_evento_movimento	a,
			pls_lote_evento		b,
			pls_lote_pagamento 	c,
			pls_periodo_pagamento  	x,
			ctb_documento		e
		where	b.nr_sequencia		= a.nr_seq_lote
		and	c.nr_sequencia		= b.nr_seq_pgto_desc_liq
		and	c.nr_seq_periodo	= x.nr_sequencia
		and	coalesce(b.nr_seq_lote_pgto_apropr,0) 	= 0
		and	coalesce(b.nr_seq_lote_ret_trib,0)		= 0
		and	c.ie_status				= 'D'
		and	coalesce(a.nr_seq_lote_pgto, 0) 		= 0
		and	c.nr_sequencia		= nr_seq_lote_p
		and	e.cd_tipo_lote_contabil = 41
		and	e.cd_estabelecimento 	= cd_estabelecimento_p
		and	e.nr_seq_info		= 39
		and	e.nm_tabela		= 'PLS_EVENTO_MOVIMENTO'
		and	e.nm_atributo 		= 'VL_MOVIMENTO'
		and	coalesce(e.ds_origem, 'X') 	<> 'ESTORNO'
		and	e.nr_documento		= c.nr_sequencia
		and	e.nr_seq_doc_compl	= b.nr_sequencia
		and	e.nr_doc_analitico	= a.nr_sequencia
		group by c.nr_sequencia,
			b.nr_sequencia,
			a.nr_sequencia,
			e.cd_tipo_lote_contabil,
			e.nm_tabela,
			e.nm_atributo,
			e.nr_seq_info,
			a.vl_movimento
		
union all

		/* Evento */

		select distinct	c.nr_sequencia nr_documento,
			b.nr_sequencia	nr_seq_doc_compl,
			a.nr_sequencia 	nr_doc_analitico,
			d.cd_tipo_lote_contabil,
			d.nm_tabela,
			d.nm_atributo,
			d.nr_seq_info,
			coalesce(a.vl_movimento,0) * (-1),
			count(case d.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_evento_movimento	a,
			pls_lote_evento		b,
			pls_lote_pagamento 	c,
			pls_periodo_pagamento  	x,
			ctb_documento		d
		where	b.nr_sequencia		= a.nr_seq_lote
		and	c.nr_sequencia		= b.nr_seq_lote_pgto_apropr
		and	c.nr_seq_periodo	= x.nr_sequencia
		and	coalesce(b.nr_seq_lote_ret_trib,0)	= 0
		and	c.ie_status			= 'D'
		and	c.nr_sequencia		= nr_seq_lote_p
		and	d.cd_tipo_lote_contabil = 41
		and	d.cd_estabelecimento 	= cd_estabelecimento_p
		and	d.nr_seq_info		= 39
		and	d.nm_tabela		= 'PLS_EVENTO_MOVIMENTO'
		and	d.nm_atributo 		= 'VL_MOVIMENTO'
		and	coalesce(d.ds_origem, 'X') 	<> 'ESTORNO'
		and	d.nr_documento		= c.nr_sequencia
		and	d.nr_seq_doc_compl	= b.nr_sequencia
		and	d.nr_doc_analitico	= a.nr_sequencia
		group by c.nr_sequencia,
			b.nr_sequencia,
			a.nr_sequencia,
			d.cd_tipo_lote_contabil,
			d.nm_tabela,
			d.nm_atributo,
			d.nr_seq_info,
			a.vl_movimento;

	vet_evento	c_evento%rowtype;

	c_tributo CURSOR FOR
		SELECT distinct	e.nr_sequencia nr_documento,
			b.nr_sequencia	nr_seq_doc_compl,
			a.nr_sequencia 	nr_doc_analitico,
			f.cd_tipo_lote_contabil,
			f.nm_tabela,
			f.nm_atributo,
			f.nr_seq_info,
			a.vl_imposto vl_contabil,
			count(case f.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_pag_prest_venc_trib		a,
			pls_pag_prest_vencimento	b,
			pls_pagamento_prestador		d,
			pls_lote_pagamento		e,
			pls_periodo_pagamento  		x,
			ctb_documento			f
		where	b.nr_sequencia	= a.nr_seq_vencimento
		and	d.nr_sequencia	= b.nr_seq_pag_prestador
		and	e.nr_sequencia	= d.nr_seq_lote
		and	e.nr_seq_periodo = x.nr_sequencia
		and	a.ie_pago_prev	!= 'R'
		and	not exists (	SELECT	1
					from 	pls_pag_item_trib       x,
						pls_pagamento_item      y
					where	y.nr_sequencia		= x.nr_seq_pagamento
					and	a.nr_sequencia		= x.nr_seq_venc_trib
					and	d.nr_sequencia		= y.nr_seq_pagamento )
		and	e.nr_sequencia	= nr_seq_lote_p
		and	f.cd_tipo_lote_contabil = 41
		and	f.cd_estabelecimento 	= cd_estabelecimento_p
		and	f.nr_seq_info		= 40
		and	f.nm_tabela		= 'PLS_PAG_PREST_VENC_TRIB'
		and	f.nm_atributo 		= 'VL_IMPOSTO'
		and	f.nr_documento		= e.nr_sequencia
		and	f.nr_seq_doc_compl	= b.nr_sequencia
		and	f.nr_doc_analitico	= a.nr_sequencia
		and	coalesce(f.ds_origem, 'X')	<> 'ESTORNO'
		group by e.nr_sequencia,
			b.nr_sequencia,
			a.nr_sequencia ,
			f.cd_tipo_lote_contabil,
			f.nm_tabela,
			f.nm_atributo,
			f.nr_seq_info,
			a.vl_imposto
		
union all

		select	distinct e.nr_sequencia nr_documento,
			b.nr_sequencia	nr_seq_doc_compl,
			a.nr_sequencia 	nr_doc_analitico,
			g.cd_tipo_lote_contabil,
			g.nm_tabela,
			g.nm_atributo,
			g.nr_seq_info,
			b.vl_evento vl_contabil,
			count(case g.ie_situacao_ctb when 'P' then 1 end) qt_pendente
		from	pls_pagamento_item 		a,
			pls_pag_item_trib 		b,
			pls_pag_prest_venc_trib		c,
			pls_pag_prest_vencimento	d,
			pls_pagamento_prestador		e,
			pls_lote_pagamento		f,
			pls_periodo_pagamento  		x,
			ctb_documento			g
		where	a.nr_sequencia	= b.nr_seq_pagamento
		and	c.nr_sequencia	= b.nr_seq_venc_trib
		and	d.nr_sequencia	= c.nr_seq_vencimento
		and	e.nr_sequencia	= d.nr_seq_pag_prestador
		and	f.nr_sequencia	= e.nr_seq_lote
		and	e.nr_sequencia	= a.nr_seq_pagamento
		and	f.nr_seq_periodo = x.nr_sequencia
		and	c.ie_pago_prev	!= 'R'
		and	f.nr_sequencia	= nr_seq_lote_p
		and	g.cd_tipo_lote_contabil = 41
		and	g.cd_estabelecimento 	= cd_estabelecimento_p
		and	g.nr_seq_info		= 40
		and	g.nm_tabela		= 'PLS_PAGAMENTO_ITEM'
		and	g.nm_atributo 		= 'VL_IMPOSTO'
		and	g.nr_documento		= e.nr_sequencia
		and	g.nr_seq_doc_compl	= b.nr_sequencia
		and	g.nr_doc_analitico	= a.nr_sequencia
		and	coalesce(g.ds_origem, 'X')	<> 'ESTORNO'
		group by e.nr_sequencia,
			b.nr_sequencia,
			a.nr_sequencia ,
			g.cd_tipo_lote_contabil,
			g.nm_tabela,
			g.nm_atributo,
			g.nr_seq_info,
			b.vl_evento;

	vet_tributo 	c_tributo%rowtype;

	
BEGIN

	if (dt_cancelamento_p IS NOT NULL AND dt_cancelamento_p::text <> '') then
		dt_cancelamento_w := dt_cancelamento_p;
	else
		dt_cancelamento_w := clock_timestamp();
	end if;

	open c_evento;
	loop
	fetch c_evento into
		vet_evento;
	EXIT WHEN NOT FOUND; /* apply on c_evento */
		begin

		if (vet_evento.qt_pendente > 0) then
			delete 	FROM ctb_documento
			where	nr_documento 			= vet_evento.nr_documento
			and	nr_seq_doc_compl 		= vet_evento.nr_seq_doc_compl
			and	nr_doc_analitico 		= vet_evento.nr_doc_analitico
			and 	nm_tabela 			= vet_evento.nm_tabela
			and	nm_atributo 			= vet_evento.nm_atributo
			and	cd_tipo_lote_contabil 		= vet_evento.cd_tipo_lote_contabil
			and	nr_seq_info 			= vet_evento.nr_seq_info
			and	ie_situacao_ctb 		= 'P'
			and	coalesce(ds_origem, 'X')		<> 'ESTORNO';
		else
			CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
									pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
									41,
									null,		
									39,
									vet_evento.nr_documento,
									vet_evento.nr_seq_doc_compl,
									vet_evento.nr_doc_analitico,
									vet_evento.vl_movimento * - 1 ,-- Inverte o valor pois e estorno
									vet_evento.nm_tabela,
									vet_evento.nm_atributo,
									nm_usuario_p,
									'P',
									'ESTORNO');
		end if;
		end;
		end loop;
	close c_evento;

	open c_pagamento;
	loop
	fetch c_pagamento into
		vet_pagamento;
	EXIT WHEN NOT FOUND; /* apply on c_pagamento */
		begin
		if (vet_pagamento.qt_pendente > 0) then
			delete 	FROM ctb_documento
			where	nr_documento 		= vet_pagamento.nr_documento
			and	nr_seq_doc_compl 	= vet_pagamento.nr_seq_doc_compl
			and	nr_doc_analitico 	= vet_pagamento.nr_doc_analitico
			and 	nm_tabela 		= vet_pagamento.nm_tabela
			and	nm_atributo 		= vet_pagamento.nm_atributo
			and	cd_tipo_lote_contabil 	= vet_pagamento.cd_tipo_lote_contabil
			and	nr_seq_info 		= vet_pagamento.nr_seq_info
			and	ie_situacao_ctb 	= 'P'
			and	coalesce(ds_origem, 'X') 	<> 'ESTORNO';
		else
			if (vet_pagamento.ds_origem = 'C') then
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										41,
										null,		
										36,
										vet_pagamento.nr_documento,
										vet_pagamento.nr_seq_doc_compl,
										vet_pagamento.nr_doc_analitico,
										vet_pagamento.vl_contabil * -1, -- Inverte o valor pois e estorno
										'PLS_CONTA_MEDICA_RESUMO',
										'VL_LIBERADO',
										nm_usuario_p,
										'P',
										'ESTORNO');
			elsif (vet_pagamento.ds_origem = 'G') then
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										41,
										null,		
										24,
										vet_pagamento.nr_documento,
										vet_pagamento.nr_seq_doc_compl,
										vet_pagamento.nr_doc_analitico,
										vet_pagamento.vl_glosa  * -1, -- Inverte o valor pois e estorno,
										'PLS_CONTA_MEDICA_RESUMO',
										'VL_GLOSA',
										nm_usuario_p,
										'P',
										'ESTORNO');
			elsif (vet_pagamento.ds_origem = 'A') then
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										41,
										null,		
										36,
										vet_pagamento.nr_documento,
										vet_pagamento.nr_seq_doc_compl,
										vet_pagamento.nr_doc_analitico,
										vet_pagamento.vl_ajuste * -1, -- Inverte o valor pois e estorno,,
										'PLS_CONTA_MEDICA_RESUMO',
										'VL_AJUSTE',
										nm_usuario_p,
										'P',
										'ESTORNO');
			end if;
		end if;
		end;
	end loop;
	close c_pagamento;

	open c_tributo;
	loop
	fetch c_tributo into
		vet_tributo;
	EXIT WHEN NOT FOUND; /* apply on c_tributo */
		begin
		if (vet_tributo.qt_pendente > 0) then
			delete 	FROM ctb_documento
			where	nr_documento 			= vet_tributo.nr_documento
			and	nr_seq_doc_compl 		= vet_tributo.nr_seq_doc_compl
			and	nr_doc_analitico 		= vet_tributo.nr_doc_analitico
			and 	nm_tabela 			= vet_tributo.nm_tabela
			and	nm_atributo 			= vet_tributo.nm_atributo
			and	cd_tipo_lote_contabil 		= vet_tributo.cd_tipo_lote_contabil
			and	nr_seq_info 			= vet_tributo.nr_seq_info
			and	ie_situacao_ctb 		= 'P'
			and	coalesce(ds_origem, 'X')		<> 'ESTORNO';
		else
			if (coalesce(vet_tributo.vl_contabil, 0) <> 0) then
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_p,
										pkg_date_utils.start_of(clock_timestamp(), 'DAY'),
										41,             
										null,		
										40,
										vet_tributo.nr_documento,
										vet_tributo.nr_seq_doc_compl,
										vet_tributo.nr_doc_analitico,
										vet_tributo.vl_contabil * -1, --Inverte o valor pois e estorno
										vet_tributo.nm_tabela,
										vet_tributo.nm_atributo,
										nm_usuario_p,
										'P',
										'ESTORNO');
			end if;
		end if;
		end;
	end loop;
	close c_tributo;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ctb_onl_gravar_movto_pck.gravar_movto_canc_desvinc_tit ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_cancelamento_p timestamp) FROM PUBLIC;
