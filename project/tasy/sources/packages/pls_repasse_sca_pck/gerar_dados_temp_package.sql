-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



---------------- INSERE TODOS OS DADOS EM UMA TABELA TEMPORARIA.
CREATE OR REPLACE PROCEDURE pls_repasse_sca_pck.gerar_dados_temp () AS $body$
DECLARE


ds_sql_w		text;
tb_seq_vinculo_sca_w	pls_util_cta_pck.t_number_table;
tb_seq_sca_w		pls_util_cta_pck.t_number_table;
tb_seq_segurado_w	pls_util_cta_pck.t_number_table;
tb_seq_prestador_w	pls_util_cta_pck.t_number_table;

valor_bind_w		sql_pck.t_dado_bind;
cursor_w		sql_pck.t_cursor;


BEGIN

if (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.ie_tipo_movimentacao = 1) then
	ds_sql_w := '	select	a.nr_sequencia nr_seq_vinculo_sca,
				a.nr_seq_plano nr_seq_sca,
				a.nr_seq_segurado,
				c.nr_seq_prestador
			from	pls_sca_vinculo a,
				pls_plano b,
				pls_plano_fornecedor c,
				pls_segurado e
			where	a.nr_seq_plano			= b.nr_sequencia
			and	b.nr_sequencia			= c.nr_seq_plano 
			and	a.nr_seq_segurado		= e.nr_sequencia
			and	a.dt_liberacao			is not null
			and	a.nr_seq_segurado		is not null
			and	c.nr_seq_prestador		is not null
			and	c.cd_estabelecimento		= :CD_ESTABELECIMENTO ';
elsif (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.ie_tipo_movimentacao = 2) then
	ds_sql_w := '	select	a.nr_sequencia nr_seq_vinculo_sca,
				a.nr_seq_plano nr_seq_sca,
				a.nr_seq_segurado,
				c.nr_seq_prestador
			from	pls_sca_vinculo a,
				pls_plano b,
				pls_plano_fornecedor c,
				pls_sca_vinculo_med d,
				pls_segurado e
			where	a.nr_seq_plano			= b.nr_sequencia
			and	b.nr_sequencia			= c.nr_seq_plano
			and	a.nr_sequencia			= d.nr_seq_sca_vinculo
			and	a.nr_seq_segurado		= e.nr_sequencia
			and	a.dt_liberacao			is not null
			and	a.nr_seq_segurado		is not null
			and	c.nr_seq_prestador		is not null
			and	c.cd_estabelecimento		= :CD_ESTABELECIMENTO ';
end if;

if (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.ie_titularidade = 'T') then
	ds_sql_w := ds_sql_w || ' and	e.nr_seq_titular is null';
elsif (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.ie_titularidade = 'D') then
	ds_sql_w := ds_sql_w || ' and	e.nr_seq_titular is not null';
end if;

if (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%(rowtype.nr_seq_classificacao IS NOT NULL AND rowtype.nr_seq_classificacao::text <> '')) then
	ds_sql_w := ds_sql_w || ' and	b.nr_seq_classificacao	= :NR_SEQ_CLASSIFICACAO ';
end if;

if (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%(rowtype.nr_seq_sca IS NOT NULL AND rowtype.nr_seq_sca::text <> '')) then
	ds_sql_w := ds_sql_w || ' and	a.nr_seq_plano = :NR_SEQ_SCA ';
end if;

if (current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%(rowtype.nr_seq_prestador IS NOT NULL AND rowtype.nr_seq_prestador::text <> '')) then
	ds_sql_w := ds_sql_w || ' and	c.nr_seq_prestador = :NR_SEQ_PRESTADOR ';
end if;

if (coalesce(current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.ie_carencia_cumprida, 'N') = 'S') then
	ds_sql_w := ds_sql_w || ' and	not exists (	select	1 --Carência do SCA que não exista no beneficiário
							from	pls_carencia x
							where	b.nr_sequencia = x.nr_seq_plano
							and	to_date(:DATA_FINAL) < trunc(a.dt_inicio_vigencia + x.qt_dias, ''dd'')
							and	not exists (	select	1
										from	pls_carencia w
										where	w.nr_seq_segurado = e.nr_sequencia
										and	w.nr_seq_tipo_carencia = x.nr_seq_tipo_carencia
										and	w.ie_origem_carencia_benef = ''S''))
				and	not exists (	select	1 --Carência do SCA vinculada ao beneficiário
							from	pls_carencia x
							where	e.nr_sequencia = x.nr_seq_segurado
							and	x.ie_origem_carencia_benef = ''S''
							and	to_date(:DATA_FINAL) < trunc(a.dt_inicio_vigencia + x.qt_dias, ''dd'')
							and	exists (	select	1
										from	pls_carencia w
										where	w.nr_seq_plano = b.nr_sequencia
										and	w.nr_seq_tipo_carencia = x.nr_seq_tipo_carencia))';
end if;

if (current_setting('pls_repasse_sca_pck.pls_repasse_sca_lote_w')::pls_repasse_sca_lote%rowtype.ie_tipo_movimento = 'I') then
	ds_sql_w := ds_sql_w || ' and	a.dt_inicio_vigencia between :DATA_INICIAL and :DATA_FINAL ';
	
elsif (current_setting('pls_repasse_sca_pck.pls_repasse_sca_lote_w')::pls_repasse_sca_lote%rowtype.ie_tipo_movimento = 'E') then
	ds_sql_w := ds_sql_w || ' and	a.dt_fim_vigencia between :DATA_INICIAL and :DATA_FINAL ';
elsif (current_setting('pls_repasse_sca_pck.pls_repasse_sca_lote_w')::pls_repasse_sca_lote%rowtype.ie_tipo_movimento = 'A') then
	ds_sql_w := ds_sql_w || ' and	(a.dt_fim_vigencia is null 
				  or	a.dt_fim_vigencia > :DATA_FINAL) ';
elsif (current_setting('pls_repasse_sca_pck.pls_repasse_sca_lote_w')::pls_repasse_sca_lote%rowtype.ie_tipo_movimento = 'P') then
	ds_sql_w := ds_sql_w || ' and	(a.dt_inicio_vigencia	between :DATA_INICIAL and :DATA_FINAL
				  or	a.dt_fim_vigencia	between :DATA_INICIAL and :DATA_FINAL) ';
end if;

valor_bind_w := sql_pck.bind_variable(':DATA_INICIAL', current_setting('pls_repasse_sca_pck.pls_repasse_sca_lote_w')::pls_repasse_sca_lote%rowtype.dt_movimento_inicial, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':DATA_FINAL', current_setting('pls_repasse_sca_pck.pls_repasse_sca_lote_w')::pls_repasse_sca_lote%rowtype.dt_movimento_final, valor_bind_w);

valor_bind_w := sql_pck.bind_variable(':NR_SEQ_SCA', current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.nr_seq_sca, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':CD_ESTABELECIMENTO', current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.cd_estabelecimento, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':NR_SEQ_CLASSIFICACAO', current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.nr_seq_classificacao, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':NR_SEQ_PRESTADOR', current_setting('pls_repasse_sca_pck.pls_regra_repasse_sca_w')::pls_regra_repasse_sca%rowtype.nr_seq_prestador, valor_bind_w);

valor_bind_w := sql_pck.executa_sql_cursor(ds_sql_w, valor_bind_w);

loop
	fetch cursor_w bulk collect into tb_seq_vinculo_sca_w, tb_seq_sca_w, tb_seq_segurado_w, tb_seq_prestador_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_seq_vinculo_sca_w.count = 0;
	
	forall i in tb_seq_vinculo_sca_w.first .. tb_seq_vinculo_sca_w.last
	
		insert	into	pls_repasse_sca_temp(	nr_seq_vinculo_sca,
				nr_seq_sca,
				nr_seq_segurado,
				nr_seq_prestador)
			values (tb_seq_vinculo_sca_w(i),
				tb_seq_sca_w(i),
				tb_seq_segurado_w(i),
				tb_seq_prestador_w(i));
	commit;
end loop;

close cursor_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_repasse_sca_pck.gerar_dados_temp () FROM PUBLIC;
