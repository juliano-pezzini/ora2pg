-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_radar_tiss_pck.gerar_pergunta_radar_1 () AS $body$
DECLARE

	 
		ie_tipo_valor_w		varchar(5);
		cd_estabelecimento_w	bigint;
		dt_inicio_radar_w	timestamp;
		dt_fim_radar_w		timestamp;
		nr_seq_radar_conta_w	bigint;
		ie_tipo_guia_w		varchar(255);
		ie_tipo_relacao_w	varchar(255);
		ie_grupo_evento_w	varchar(255);
		nr_seq_conta_w		bigint;
		ie_tipo_protocolo_w	varchar(255);
		nr_seq_prestador_exec_w	bigint;
		nr_seq_pergunta01_w	bigint;
		vl_proc_tuss_w		double precision;
		vl_mat_tuss_w		double precision;
		vl_tuss_w		double precision;
		vl_evento_w		double precision;

		C01 CURSOR FOR 
			SELECT	VL_DOMINIO 
			from	valor_dominio 
			where	CD_DOMINIO = 5895;

		c02 CURSOR FOR 
			SELECT	b.nr_sequencia, 
				a.ie_tipo_guia, 
				c.ie_grupo_evento, 
				a.nr_sequencia, 
				e.ie_tipo_protocolo, 
				a.nr_seq_prestador_exec 
			FROM pls_protocolo_conta e, pls_radar_conta b, pls_conta a
LEFT OUTER JOIN pls_tipo_atendimento c ON (a.nr_seq_tipo_atendimento = c.nr_sequencia)
WHERE b.nr_seq_conta			= a.nr_sequencia and a.nr_seq_protocolo		= e.nr_sequencia  and b.nr_seq_radar			= pls_gerar_radar_tiss_pck.get_nr_seq_radar();
		
BEGIN
 
		select	cd_estabelecimento, 
			trunc(dt_inicio_radar), 
			fim_dia(dt_fim_radar) 
		into STRICT	cd_estabelecimento_w, 
			dt_inicio_radar_w, 
			dt_fim_radar_w 
		from	pls_radar_tiss 
		where	nr_sequencia	= pls_gerar_radar_tiss_pck.get_nr_seq_radar();
 
		delete	from pls_radar_conta 
		where	nr_seq_radar	= pls_gerar_radar_tiss_pck.get_nr_seq_radar();
	 
		commit;
 
		/* Gerar as contas que devem entrar no RADAR */
 
		insert	into pls_radar_conta(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_radar, 
			ie_grupo_evento, 
			ie_tipo_valor, 
			vl_evento, 
			nr_seq_conta, 
			nr_seq_pergunta01) 
		SELECT	nextval('pls_radar_conta_seq'), 
			clock_timestamp(), 
			get_nm_usuario, 
			clock_timestamp(), 
			get_nm_usuario, 
			get_nr_seq_radar, 
			null, 
			null, 
			coalesce(CASE WHEN coalesce(a.vl_cobrado,0)=0 THEN a.vl_total  ELSE a.vl_cobrado END ,0), 
			a.nr_sequencia, 
			null 
		from	pls_conta a, 
			pls_protocolo_conta b 
		where	b.nr_sequencia		= a.nr_seq_protocolo 
		and	a.cd_estabelecimento	= cd_estabelecimento_w 
		and	b.dt_recebimento	between dt_inicio_radar_w and dt_fim_radar_w 
		and	a.ie_status		not in ('C','S') 
		and	b.ie_situacao		in ('D','T');
 
		/* Tratar as informações das contas que devem entrar no radar */
 
		open	c02;
		loop 
		fetch c02 into 
			nr_seq_radar_conta_w, 
			ie_tipo_guia_w, 
			ie_grupo_evento_w, 
			nr_seq_conta_w, 
			ie_tipo_protocolo_w, 
			nr_seq_prestador_exec_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
 
			/* 
			Definição dos grupos de evento (DOMÍNIO 5894) 
					grupo_evento_vetor_w(i).ie_grupo_evento 
					1        Consulta 
					2        Atendimento ambulatorial 
					3        Tratamento Odontológico 
					4        Diagnose e Terapia 
					5        Internação 
 
			Definição do Tipo de Valor (DOMÍNIO 5895) 
					ie_tipo_valor_w 
					1        Rede contratada / Credenciada 
					2        Serviço Próprio 
					3        Reembolso e Outros 
					4        Valor Exclusivamente com utilização da TUSS 
			*/
 
 
 
			-- Definição dos grupos de evento (DOMÍNIO 5894) 
			if (coalesce(ie_grupo_evento_w::text, '') = '') then 
				if (ie_tipo_guia_w = '3') then 
					ie_grupo_evento_w		:= '1';				/*Consulta*/
				elsif (ie_tipo_guia_w = '4') then 
					ie_grupo_evento_w		:= '4';				/*Diagnose e terapia*/
				elsif (pls_obter_se_internado(nr_seq_conta_w,null) = 'N') then 
					ie_grupo_evento_w		:= '2';				/*Atendimento ambulatorial*/
				elsif (pls_obter_se_internado(nr_seq_conta_w,null) = 'S') then 
					ie_grupo_evento_w		:= '5';				/*Internação*/
				end if;
			end if;
 
			-- Definição do Tipo de Valor (DOMÍNIO 5895) 
			ie_tipo_valor_w			:= '3';					/* Reembolso e OUTROS */
			if (ie_tipo_protocolo_w = 'R') then 
				ie_tipo_valor_w		:= '3';					/* Reembolso e Outros */
			elsif (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then 
 
				select	ie_tipo_relacao 
				into STRICT	ie_tipo_relacao_w 
				from	pls_prestador 
				where	nr_sequencia	= nr_seq_prestador_exec_w;
 
				if (ie_tipo_relacao_w in ('C','D','I')) then 
					ie_tipo_valor_w		:= '1';				/* Rede contratada / Credenciada */
				elsif (ie_tipo_relacao_w in ('P')) then 
					ie_tipo_valor_w		:= '2';				/* Serviço Próprio */
				elsif (ie_tipo_relacao_w not in ('C','D','I','P')) then	/* Reembolso e Outros */
 
					ie_tipo_valor_w		:= '3';				/* Reembolso e Outros */
				end if;
			end if;
 
			/* Obter o valor dos procedimentos e materiais que utilizaram a tabela TUSS para fins de cálculo */
 
			select	coalesce(sum(coalesce(coalesce(VL_PROCEDIMENTO_IMP, vl_procedimento),0)),0) 
			into STRICT	vl_proc_tuss_w 
			from	pls_conta_proc 
			where	nr_seq_conta		= nr_seq_conta_w 
			and	((nr_seq_tiss_tabela	in (30, 32, 31, 23, 27, 28, 36, 29, 39, 33, 25, 26)) or (cd_tipo_tabela_imp	in (18,19,20,22)));
 
			select	coalesce(sum(coalesce(coalesce(VL_MATERIAL_IMP, vl_material),0)),0) 
			into STRICT	vl_mat_tuss_w 
			from	pls_conta_mat 
			where	nr_seq_conta	= nr_seq_conta_w 
			and	((nr_seq_tiss_tabela	in (30, 32, 31, 23, 27, 28, 36, 29, 39, 33, 25, 26)) or (ie_origem_preco_imp	in (18,19,20,22)));
 
			update	pls_radar_conta 
			set	ie_grupo_evento	= ie_grupo_evento_w, 
				ie_tipo_valor	= ie_tipo_valor_w, 
				vl_tuss		= vl_proc_tuss_w + vl_mat_tuss_w 
			where	nr_sequencia	= nr_seq_radar_conta_w;
 
		end loop;
		close c02;
 
		for i in 1..grupo_evento_vetor_w.count loop 
			open c01;
			loop 
			fetch c01 into	 
				ie_tipo_valor_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
 
				select	nextval('pls_radar_pergunta01_seq') 
				into STRICT	nr_seq_pergunta01_w 
				;
 
				insert into PLS_RADAR_PERGUNTA01(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
						NR_SEQ_RADAR,IE_GRUPO_EVENTO,IE_TIPO_VALOR,VL_EVENTO) 
				values (	nr_seq_pergunta01_w,clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario, 
						get_nr_seq_radar,current_setting('pls_gerar_radar_tiss_pck.grupo_evento_vetor_w')::grupo_evento_v[i].ie_grupo_evento,ie_tipo_valor_w,0);
 
				-- Gravar em qual pergunta a conta se encaixa, caso não seja o tipo de valor TUSS 
				if (ie_tipo_valor_w <> '4') then 
					update	pls_radar_conta 
					set	nr_seq_pergunta01	= nr_seq_pergunta01_w 
					where	nr_seq_radar		= get_nr_seq_radar 
					and	ie_tipo_valor		= ie_tipo_valor_w 
					and	ie_grupo_evento		= current_setting('pls_gerar_radar_tiss_pck.grupo_evento_vetor_w')::grupo_evento_v[i].ie_grupo_evento 
					and	coalesce(nr_seq_pergunta01::text, '') = '';
 
					select	coalesce(sum(vl_evento),0) + coalesce(sum(vl_tuss),0) 
					into STRICT	vl_evento_w 
					from	pls_radar_conta 
					where	nr_seq_pergunta01	= nr_seq_pergunta01_w;
 
				else		-- Se for o tipo de valor TUSS 
 
					update	pls_radar_conta 
					set	nr_seq_pergunta01_tuss	= nr_seq_pergunta01_w 
					where	nr_seq_radar		= get_nr_seq_radar 
					and	ie_grupo_evento		= current_setting('pls_gerar_radar_tiss_pck.grupo_evento_vetor_w')::grupo_evento_v[i].ie_grupo_evento 
					and	coalesce(nr_seq_pergunta01_tuss::text, '') = '';
 
					select	coalesce(sum(vl_tuss),0) 
					into STRICT	vl_evento_w 
					from	pls_radar_conta 
					where	nr_seq_pergunta01_tuss	= nr_seq_pergunta01_w;
 
				end if;
 
				update	PLS_RADAR_PERGUNTA01 
				set	vl_evento		= vl_evento_w 
				where	nr_sequencia		= nr_seq_pergunta01_w;
 
				commit;
 
			end loop;
			close c01;
		end loop;
	 
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_radar_tiss_pck.gerar_pergunta_radar_1 () FROM PUBLIC;
