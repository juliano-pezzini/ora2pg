-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_tipos_ocor_pck.obter_restricao_beneficiario ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_benef_p pls_tipos_ocor_pck.dados_filtro_benef, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Monta as restricoes e binds dos campos de filtro de beneficiario.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dados_restricao_w	pls_tipos_ocor_pck.dados_select;
ds_alias_w		varchar(5);
ds_alias_benef_w	varchar(6);
ds_select_benef_w	varchar(500);
ds_filtro_benef_w	varchar(2000);


BEGIN

-- Inicializar o retorno

dados_restricao_w.ds_campos	:= null;
dados_restricao_w.ds_tabelas	:= null;
dados_restricao_w.ds_restricao	:= null;
ds_filtro_benef_w	:= null;
ds_alias_benef_w	:= 'bnfx';

-- obtem o alias da tabela

ds_alias_w := pls_tipos_ocor_pck.obter_alias_tab(	dados_filtro_p.ie_processo_excecao, dados_regra_p.ie_incidencia_selecao,
				dados_filtro_p.ie_incidencia_selecao, ie_tipo_tabela_p);

-- Montar o subselect base.

ds_select_benef_w := pls_util_pck.enter_w ||	'and	exists (' || pls_util_pck.enter_w ||
				'			select	1 ' || pls_util_pck.enter_w ||
				'			from	pls_segurado_conta_ocor_v ' || ds_alias_benef_w || pls_util_pck.enter_w ||
				'			where	' || ds_alias_benef_w || '.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta ' || pls_util_pck.enter_w;

--Sequencia do segurado

if (dados_filtro_benef_p.nr_seq_segurado IS NOT NULL AND dados_filtro_benef_p.nr_seq_segurado::text <> '') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.nr_sequencia = :nr_seq_segurado ';

	valor_bind_p := sql_pck.bind_variable(	':nr_seq_segurado', dados_filtro_benef_p.nr_seq_segurado, valor_bind_p);
end if;

if (dados_filtro_benef_p.nr_seq_regra_atend_cart IS NOT NULL AND dados_filtro_benef_p.nr_seq_regra_atend_cart::text <> '') then

	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
			'and  pls_valida_regra_cart(' || ds_alias_benef_w || '.nr_sequencia, :nr_seq_regra_atend_cart_pc)   = ''S'' ';
	valor_bind_p := sql_pck.bind_variable(	':nr_seq_regra_atend_cart_pc', dados_filtro_benef_p.nr_seq_regra_atend_cart, valor_bind_p);
end if;
-- Codigo do convenio

if (dados_filtro_benef_p.cd_convenio IS NOT NULL AND dados_filtro_benef_p.cd_convenio::text <> '') then
	ds_filtro_benef_w :=	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.cd_convenio = :cd_convenio ';

	valor_bind_p := sql_pck.bind_variable(	':cd_convenio', dados_filtro_benef_p.cd_convenio, valor_bind_p);
end if;

-- Local de cadastro do beneificario

if (dados_filtro_benef_p.ie_local_cadastro IS NOT NULL AND dados_filtro_benef_p.ie_local_cadastro::text <> '') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.ie_local_cadastro = :ie_local_cadastro ';

	valor_bind_p := sql_pck.bind_variable(	':ie_local_cadastro', dados_filtro_benef_p.ie_local_cadastro, valor_bind_p);
end if;

-- Tipo de beneficiario

if (dados_filtro_benef_p.ie_tipo_segurado IS NOT NULL AND dados_filtro_benef_p.ie_tipo_segurado::text <> '') then
	ds_filtro_benef_w :=	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.ie_tipo_segurado = :ie_tipo_segurado ';

	valor_bind_p := sql_pck.bind_variable(	':ie_tipo_segurado', dados_filtro_benef_p.ie_tipo_segurado, valor_bind_p);
end if;

-- Categoria de convenio

if (dados_filtro_benef_p.cd_categoria IS NOT NULL AND dados_filtro_benef_p.cd_categoria::text <> '') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.cd_categoria = :cd_categoria ';

	valor_bind_p := sql_pck.bind_variable(	':cd_categoria', dados_filtro_benef_p.cd_categoria, valor_bind_p);
end if;

-- Idade minima

if (dados_filtro_benef_p.qt_idade_min IS NOT NULL AND dados_filtro_benef_p.qt_idade_min::text <> '') then

	-- Unidade de tempo da idade

	if (dados_filtro_benef_p.ie_unid_tempo_idade = 'A' or coalesce(dados_filtro_benef_p.ie_unid_tempo_idade::text, '') = '') then

		ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_benef_w || '.qt_idade_conta_anos > :qt_idade_min';

	elsif (dados_filtro_benef_p.ie_unid_tempo_idade = 'M') then

		ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_benef_w || '.qt_idade_conta_meses > :qt_idade_min';
	end if;

	valor_bind_p := sql_pck.bind_variable(	':qt_idade_min', dados_filtro_benef_p.qt_idade_min, valor_bind_p);
end if;

-- Idade Maxima

if (dados_filtro_benef_p.qt_idade_max IS NOT NULL AND dados_filtro_benef_p.qt_idade_max::text <> '') then

	-- Unidade de tempo da idade

	if (dados_filtro_benef_p.ie_unid_tempo_idade = 'A' or coalesce(dados_filtro_benef_p.ie_unid_tempo_idade::text, '') = '') then

		ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_benef_w || '.qt_idade_conta_anos < :qt_idade_max';

	elsif (dados_filtro_benef_p.ie_unid_tempo_idade = 'M') then

		ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
					'and	' || ds_alias_benef_w || '.qt_idade_conta_meses < :qt_idade_max';
	end if;

	valor_bind_p := sql_pck.bind_variable(	':qt_idade_max', dados_filtro_benef_p.qt_idade_max, valor_bind_p);
end if;

-- Sexo do beneficiario

if (dados_filtro_benef_p.ie_sexo IS NOT NULL AND dados_filtro_benef_p.ie_sexo::text <> '') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.ie_sexo = :ie_sexo ';

	valor_bind_p := sql_pck.bind_variable(	':ie_sexo', dados_filtro_benef_p.ie_sexo, valor_bind_p);
end if;

-- PCMSO

if (dados_filtro_benef_p.ie_pcmso = 'S') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.ie_pcmso = :ie_pcmso ';

	valor_bind_p := sql_pck.bind_variable(	':ie_pcmso', dados_filtro_benef_p.ie_pcmso, valor_bind_p);
end if;

-- Titularidade

if (dados_filtro_benef_p.ie_titularidade <> 'A') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.ie_titularidade = :ie_titularidade ';
				
	valor_bind_p := sql_pck.bind_variable(	':ie_titularidade', dados_filtro_benef_p.ie_titularidade, valor_bind_p);
end if;

-- Nascido plano

if (dados_filtro_benef_p.ie_nascido_plano = 'S') then
	ds_filtro_benef_w := 	ds_filtro_benef_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.ie_nascido_plano = ''S''';
end if;

if (ds_filtro_benef_w IS NOT NULL AND ds_filtro_benef_w::text <> '') then

	dados_restricao_w.ds_restricao := ds_select_benef_w || ds_filtro_benef_w ||'		)';
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_tipos_ocor_pck.obter_restricao_beneficiario ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_benef_p pls_tipos_ocor_pck.dados_filtro_benef, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
