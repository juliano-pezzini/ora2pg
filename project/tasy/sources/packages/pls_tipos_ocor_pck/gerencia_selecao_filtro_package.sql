-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.gerencia_selecao_filtro ( ie_acao_p text, tb_seq_conta_p pls_util_cta_pck.t_number_table, tb_seq_conta_proc_p pls_util_cta_pck.t_number_table, tb_seq_conta_mat_p pls_util_cta_pck.t_number_table, tb_guia_referencia_p pls_util_cta_pck.t_varchar2_table_20, tb_seq_segurado_p pls_util_cta_pck.t_number_table, tb_dt_item_p pls_util_cta_pck.t_date_table, tb_dt_hora_ini_p pls_util_cta_pck.t_date_table, tb_dt_hora_fim_p pls_util_cta_pck.t_date_table, tb_dt_dia_ini_p pls_util_cta_pck.t_date_table, tb_dt_dia_fim_p pls_util_cta_pck.t_date_table, tb_ie_origem_proced_p pls_util_cta_pck.t_number_table, tb_cd_procedimento_p pls_util_cta_pck.t_number_table, tb_seq_material_p pls_util_cta_pck.t_number_table, tb_seq_selecao_p pls_util_cta_pck.t_number_table, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, ie_valido_p pls_selecao_ocor_cta.ie_valido%type, nm_usuario_p usuario.nm_usuario%type, dados_filtro_p dados_filtro, dados_regra_p dados_regra) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Gerenciar a manutencao da tabela PLS_SELECAO_OCOR_CTA para situacoes
	que envolvam o processamento de filtros
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
ie_acao_p ->	F - Filtros;
	FP - Filtro Padrao (insere direto no banco)
	LI - Limpar Invalidos.
	LT - Limpar todos os registros da selecao

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_atualizar_seqs_w		pls_util_cta_pck.t_number_table;
tb_gravar_conta_w		pls_util_cta_pck.t_number_table;
tb_gravar_proc_w		pls_util_cta_pck.t_number_table;
tb_gravar_mat_w			pls_util_cta_pck.t_number_table;
tb_gravar_seg_w			pls_util_cta_pck.t_number_table;
tb_gravar_guia_w		pls_util_cta_pck.t_varchar2_table_20;
tb_gravar_dt_item_w		pls_util_cta_pck.t_date_table;
tb_gravar_dt_hora_ini_w		pls_util_cta_pck.t_date_table;
tb_gravar_dt_hora_fim_w		pls_util_cta_pck.t_date_table;
tb_gravar_dt_dia_ini_w		pls_util_cta_pck.t_date_table;
tb_gravar_dt_dia_fim_w		pls_util_cta_pck.t_date_table;
tb_gravar_ie_origem_proced_w	pls_util_cta_pck.t_number_table;
tb_gravar_cd_procedimento_w	pls_util_cta_pck.t_number_table;
tb_gravar_seq_material_w	pls_util_cta_pck.t_number_table;
nr_idx_atual_w		integer;
nr_idx_gravar_w		integer;

BEGIN

-- Deve ter informacao da transacao para executar alguma alteracao.

if (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '') then

	-- Quando nao for uma regra de excecao entao deve ser verificado os filtros para decidir se ira inserir ou atualizar.

	if (dados_regra_p.ie_excecao = 'N') then

		-- Quando for filtros deve verificar se e exececao para decidir se insere ou atualiza.

		if (ie_acao_p = 'F') then

			-- limpa as listas

			tb_atualizar_seqs_w.delete;
			tb_gravar_conta_w.delete;
			tb_gravar_proc_w.delete;
			tb_gravar_mat_w.delete;
			tb_gravar_seg_w.delete;
			tb_gravar_guia_w.delete;
			tb_gravar_dt_item_w.delete;
			tb_gravar_dt_hora_ini_w.delete;
			tb_gravar_dt_hora_fim_w.delete;
			tb_gravar_dt_dia_ini_w.delete;
			tb_gravar_dt_dia_fim_w.delete;
			tb_gravar_ie_origem_proced_w.delete;
			tb_gravar_cd_procedimento_w.delete;
			tb_gravar_seq_material_w.delete;

			-- Zerar os indices das listas de insercao e atualizacao.

			nr_idx_atual_w := 0;
			nr_idx_gravar_w := 0;

			-- verifica se tem registros no vetor de selecao

			if (tb_seq_selecao_p.count > 0) then

				-- Varrer os registros das listas passadas para verficar se ira inserir ou atualizar os registros.

				for i in tb_seq_selecao_p.first .. tb_seq_selecao_p.last loop

					-- Se tiver informacao das sequencias do item ou dos filhos entao deve atualizar.

					if ((tb_seq_selecao_p(i) IS NOT NULL AND (tb_seq_selecao_p(i))::text <> '')) then

						-- joga para as variaveis que serao utilizadas para a atualizacao

						tb_atualizar_seqs_w(nr_idx_atual_w)	:= tb_seq_selecao_p(i);

						-- Incrementar o indice.

						nr_idx_atual_w := nr_idx_atual_w + 1;

					-- Se nao e um novo registro e este deve ser inserido.

					else
						-- Inserir um novo registro.

						tb_gravar_conta_w(nr_idx_gravar_w)		:= tb_seq_conta_p(i);
						tb_gravar_proc_w(nr_idx_gravar_w)		:= tb_seq_conta_proc_p(i);
						tb_gravar_mat_w(nr_idx_gravar_w)		:= tb_seq_conta_mat_p(i);
						tb_gravar_seg_w(nr_idx_gravar_w)		:= tb_seq_segurado_p(i);
						tb_gravar_guia_w(nr_idx_gravar_w)		:= tb_guia_referencia_p(i);
						tb_gravar_dt_item_w(nr_idx_gravar_w)		:= tb_dt_item_p(i);
						tb_gravar_dt_hora_ini_w(nr_idx_gravar_w)	:= tb_dt_hora_ini_p(i);
						tb_gravar_dt_hora_fim_w(nr_idx_gravar_w)	:= tb_dt_hora_fim_p(i);
						tb_gravar_dt_dia_ini_w(nr_idx_gravar_w)		:= tb_dt_dia_ini_p(i);
						tb_gravar_dt_dia_fim_w(nr_idx_gravar_w)		:= tb_dt_dia_fim_p(i);
						tb_gravar_ie_origem_proced_w(nr_idx_gravar_w)	:= tb_ie_origem_proced_p(i);
						tb_gravar_cd_procedimento_w(nr_idx_gravar_w)	:= tb_cd_procedimento_p(i);
						tb_gravar_seq_material_w(nr_idx_gravar_w)	:= tb_seq_material_p(i);

						-- Incrementar o indice.

						nr_idx_gravar_w := nr_idx_gravar_w + 1;
					end if;
				end loop;
			end if;

			-- Atualiza os registros passados por parametro no banco.

			if (tb_atualizar_seqs_w.count > 0) then
				CALL CALL CALL CALL CALL pls_tipos_ocor_pck.atualizar_lista_filtro(	tb_atualizar_seqs_w, ie_valido_p,
							nm_usuario_p);
			end if;

			-- Se tiver algum registro para gravar entao manda ele pro banco.

			if (tb_gravar_conta_w.count > 0) then
				CALL CALL CALL CALL CALL pls_tipos_ocor_pck.gravar_lista_filtro(	nr_id_transacao_p, tb_gravar_conta_w,
							tb_gravar_proc_w, tb_gravar_mat_w,
							tb_gravar_seg_w, tb_gravar_guia_w,
							tb_gravar_dt_item_w, tb_gravar_dt_hora_ini_w,
							tb_gravar_dt_hora_fim_w, tb_gravar_dt_dia_ini_w,
							tb_gravar_dt_dia_fim_w, tb_gravar_ie_origem_proced_w,
							tb_gravar_cd_procedimento_w, tb_gravar_seq_material_w,
							ie_valido_p, nm_usuario_p,
							dados_filtro_p, dados_regra_p);
			end if;

		-- Quando for os filtros padroes ( SEM UTILIZAR FILTROS) entao so pode inserir na tabela de selecao.

		elsif (ie_acao_p = 'FP') then
			CALL CALL CALL CALL CALL pls_tipos_ocor_pck.gravar_lista_filtro(	nr_id_transacao_p, tb_seq_conta_p,
						tb_seq_conta_proc_p, tb_seq_conta_mat_p,
						tb_seq_segurado_p, tb_guia_referencia_p,
						tb_dt_item_p, tb_dt_hora_ini_p,
						tb_dt_hora_fim_p, tb_dt_dia_ini_p,
						tb_dt_dia_fim_p, tb_ie_origem_proced_p,
						tb_cd_procedimento_p, tb_seq_material_p,
						ie_valido_p, nm_usuario_p,
						dados_filtro_p, dados_regra_p);
		end if;

	-- Caso for uma regra de excecao entao atualiza o registro  da selecao apenas, EXCECAO NAO INSERE NINGUEM.

	elsif (dados_regra_p.ie_excecao = 'S') then

		-- Se tiver algum registro passado por parametro entao temos que olhar para ele.

		if (tb_seq_selecao_p.count > 0) then
			CALL CALL CALL CALL CALL pls_tipos_ocor_pck.atualizar_lista_filtro(	tb_seq_selecao_p, ie_valido_p,
							nm_usuario_p);
		end if;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.gerencia_selecao_filtro ( ie_acao_p text, tb_seq_conta_p pls_util_cta_pck.t_number_table, tb_seq_conta_proc_p pls_util_cta_pck.t_number_table, tb_seq_conta_mat_p pls_util_cta_pck.t_number_table, tb_guia_referencia_p pls_util_cta_pck.t_varchar2_table_20, tb_seq_segurado_p pls_util_cta_pck.t_number_table, tb_dt_item_p pls_util_cta_pck.t_date_table, tb_dt_hora_ini_p pls_util_cta_pck.t_date_table, tb_dt_hora_fim_p pls_util_cta_pck.t_date_table, tb_dt_dia_ini_p pls_util_cta_pck.t_date_table, tb_dt_dia_fim_p pls_util_cta_pck.t_date_table, tb_ie_origem_proced_p pls_util_cta_pck.t_number_table, tb_cd_procedimento_p pls_util_cta_pck.t_number_table, tb_seq_material_p pls_util_cta_pck.t_number_table, tb_seq_selecao_p pls_util_cta_pck.t_number_table, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, ie_valido_p pls_selecao_ocor_cta.ie_valido%type, nm_usuario_p usuario.nm_usuario%type, dados_filtro_p dados_filtro, dados_regra_p dados_regra) FROM PUBLIC;
