-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.trata_erro_sql_dinamico ( dados_regra_p pls_tipos_ocor_pck.dados_regra, ds_select_p text, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type, ie_grava_log_p text default 'S') AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Exibir uma mensagem mais amigavel e que contenha as informacoes necessarias
	para que seja facil identificar os problemas da ocorrencia combinada.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Usar sempre o nr_id_transacao

Alteracoes:
------------------------------------------------------------------------------------------------------------------

jjung OS 684164 - 30/12/2013 -

Alteracao:	Removido o codigo do erro do ultimo parametro da procedure
	WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT

Motivo:	Quando este parametro e passado a procedure nao retorna a mensagem correta, ficando como @ERRO@.
------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_log_w	pls_oc_cta_log_erro.ds_log%type;


BEGIN
-- Desfazer qualquer alteracao anterior;

rollback;

-- Limpar a tabela de selecao.

CALL pls_tipos_ocor_pck.limpar_transacao(nr_id_transacao_p);

-- como isso e chamado varias vezes dentro das rotinas foi criado este parametro com default para nao gravar o registro

-- e grava somente no tratamento de excecao da pls_oc_cta_gerar_combinada

if (ie_grava_log_p = 'S') then

	-- Se nao foi preenchido ainda entao preenche com o atual.

	if (current_setting('pls_tipos_ocor_pck.ds_sql_erro_w')::coalesce(varchar(32000)::text, '') = '') then

		-- obter o callstack

		PERFORM set_config('pls_tipos_ocor_pck.ds_stack_w', dbms_utility.format_call_stack, false);
		PERFORM set_config('pls_tipos_ocor_pck.ds_err_stack_w', dbms_utility.format_error_backtrace, false);
		PERFORM set_config('pls_tipos_ocor_pck.ds_sql_erro_w', ds_select_p, false);
		PERFORM set_config('pls_tipos_ocor_pck.ds_sqlerrm_w', sqlerrm, false);
	end if;

	-- Obter o log a ser gravado

	ds_log_w	:= substr(
				'Ocorrencia: ' || dados_regra_p.nr_seq_ocorrencia || pls_util_pck.enter_w ||
				'Regra: ' || dados_regra_p.nr_sequencia || pls_util_pck.enter_w ||
				'Erro: ' || current_setting('pls_tipos_ocor_pck.ds_sqlerrm_w')::varchar(4000) || pls_util_pck.enter_w || pls_util_pck.enter_w ||
				'SQL: ' || pls_util_pck.enter_w ||
				current_setting('pls_tipos_ocor_pck.ds_sql_erro_w')::varchar(32000) ||pls_util_pck.enter_w|| pls_util_pck.enter_w ||
				'Stack:' || pls_util_pck.enter_w ||
				current_setting('pls_tipos_ocor_pck.ds_stack_w')::varchar(4000) || pls_util_pck.enter_w ||
				'Error Back Trace: ' || pls_util_pck.enter_w ||
				current_setting('pls_tipos_ocor_pck.ds_err_stack_w')::varchar(4000),1,4000);

	-- Anula os dados para a proxima execucao.

	PERFORM set_config('pls_tipos_ocor_pck.ds_sql_erro_w', null, false);
	PERFORM set_config('pls_tipos_ocor_pck.ds_stack_w', null, false);
	PERFORM set_config('pls_tipos_ocor_pck.ds_err_stack_w', null, false);

	-- Grava o log na tabela;

	insert into pls_oc_cta_log_erro(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nr_id_transacao,
		ds_log)
	values (nextval('pls_oc_cta_log_erro_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nr_id_transacao_p,
		ds_log_w);
else
	-- Se nao salva o erro para usar depois,

	PERFORM set_config('pls_tipos_ocor_pck.ds_sql_erro_w', ds_select_p, false);
	-- obter o callstack

	PERFORM set_config('pls_tipos_ocor_pck.ds_stack_w', dbms_utility.format_call_stack, false);
	PERFORM set_config('pls_tipos_ocor_pck.ds_err_stack_w', dbms_utility.format_error_backtrace, false);
	PERFORM set_config('pls_tipos_ocor_pck.ds_sqlerrm_w', sqlerrm, false);
end if;

-- Gravar alteracoes

						
CALL wheb_mensagem_pck.exibir_mensagem_abort(241019,	'OCOR=' || dados_regra_p.nr_seq_ocorrencia ||
						';REGRA=' || dados_regra_p.nr_sequencia ||
						';ERRO=' || current_setting('pls_tipos_ocor_pck.ds_sql_erro_w')::varchar(32000) || ' ' || current_setting('pls_tipos_ocor_pck.ds_stack_w')::varchar(4000) || ' ' || current_setting('pls_tipos_ocor_pck.ds_err_stack_w')::varchar(4000) || ' ' || current_setting('pls_tipos_ocor_pck.ds_sqlerrm_w')::varchar(4000));

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.trata_erro_sql_dinamico ( dados_regra_p pls_tipos_ocor_pck.dados_regra, ds_select_p text, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type, ie_grava_log_p text default 'S') FROM PUBLIC;
