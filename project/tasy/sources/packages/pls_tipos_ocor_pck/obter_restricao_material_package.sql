-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_tipos_ocor_pck.obter_restricao_material ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_mat_p pls_tipos_ocor_pck.dados_filtro_mat, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Monta as restricoes e binds dos campos de filtro de material.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dados_restricao_w	pls_tipos_ocor_pck.dados_select;
ds_alias_w		varchar(5);


BEGIN
-- Inicializar o retorno

dados_restricao_w.ds_campos	:= null;
dados_restricao_w.ds_tabelas	:= null;
dados_restricao_w.ds_restricao	:= null;

if (dados_filtro_mat_p.nr_sequencia > 0) then

	-- obtem o alias da tabela

	ds_alias_w := pls_tipos_ocor_pck.obter_alias_tab(	dados_filtro_p.ie_processo_excecao, dados_regra_p.ie_incidencia_selecao,
					dados_filtro_p.ie_incidencia_selecao, ie_tipo_tabela_p);

	-- Sequencia do material

	if (dados_filtro_mat_p.nr_seq_material IS NOT NULL AND dados_filtro_mat_p.nr_seq_material::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.nr_seq_material = :nr_seq_material ';

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_material', dados_filtro_mat_p.nr_seq_material, valor_bind_p);
	end if;

	if (dados_regra_p.ie_evento = 'IMP') then
		-- Tipo prestador fornec

		if (dados_filtro_mat_p.nr_seq_tipo_prestador IS NOT NULL AND dados_filtro_mat_p.nr_seq_tipo_prestador::text <> '') then

			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_prestador w ' || pls_util_pck.enter_w ||
							'		where	w.nr_sequencia = ' || ds_alias_w || '.nr_seq_prest_fornec_imp ' || pls_util_pck.enter_w ||
							'		and	w.nr_seq_tipo_prestador = :nr_seq_tipo_prestador)';

			valor_bind_p := sql_pck.bind_variable(	':nr_seq_tipo_prestador', dados_filtro_mat_p.nr_seq_tipo_prestador, valor_bind_p);


		end if;

		--tipo relacao prestador fornecedor

		if (dados_filtro_mat_p.ie_tipo_relacao IS NOT NULL AND dados_filtro_mat_p.ie_tipo_relacao::text <> '') then

			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_prestador w ' || pls_util_pck.enter_w ||
							'		where	w.nr_sequencia = ' || ds_alias_w || '.nr_seq_prest_fornec_imp ' || pls_util_pck.enter_w ||
							'		and	w.ie_tipo_relacao = :ie_tipo_relacao)';

			valor_bind_p := sql_pck.bind_variable(	':ie_tipo_relacao', dados_filtro_mat_p.ie_tipo_relacao, valor_bind_p);


		end if;

	else
		-- tipo prestador fornec

		if (dados_filtro_mat_p.nr_seq_tipo_prestador IS NOT NULL AND dados_filtro_mat_p.nr_seq_tipo_prestador::text <> '') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_prestador w ' || pls_util_pck.enter_w ||
							'		where	w.nr_sequencia = ' || ds_alias_w || '.nr_seq_prest_fornec ' || pls_util_pck.enter_w ||
							'		and	w.nr_seq_tipo_prestador = :nr_seq_tipo_prestador)';

			valor_bind_p := sql_pck.bind_variable(	':nr_seq_tipo_prestador', dados_filtro_mat_p.nr_seq_tipo_prestador, valor_bind_p);
		end if;

		--Tipo relacao prestador fornecedor

		if (dados_filtro_mat_p.ie_tipo_relacao IS NOT NULL AND dados_filtro_mat_p.ie_tipo_relacao::text <> '') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_prestador w ' || pls_util_pck.enter_w ||
							'		where	w.nr_sequencia = ' || ds_alias_w || '.nr_seq_prest_fornec ' || pls_util_pck.enter_w ||
							'		and	w.ie_tipo_relacao = :ie_tipo_relacao)';

			valor_bind_p := sql_pck.bind_variable(	':ie_tipo_relacao', dados_filtro_mat_p.ie_tipo_relacao, valor_bind_p);
		end if;
	end if;

	-- Grupo do material

	if (dados_filtro_mat_p.nr_seq_grupo_material IS NOT NULL AND dados_filtro_mat_p.nr_seq_grupo_material::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_grupo_material_tm xy ' || pls_util_pck.enter_w ||
							'		where	xy.nr_seq_material = ' || ds_alias_w || '.nr_seq_material ' || pls_util_pck.enter_w ||
							'		and	xy.nr_seq_grupo = :nr_seq_grupo_material)';

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_grupo_material', dados_filtro_mat_p.nr_seq_grupo_material, valor_bind_p);
	end if;

	-- Tipo despesa

	if (dados_filtro_mat_p.ie_tipo_despesa_mat IS NOT NULL AND dados_filtro_mat_p.ie_tipo_despesa_mat::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_tipo_despesa = :ie_tipo_despesa';

		valor_bind_p := sql_pck.bind_variable(	':ie_tipo_despesa', dados_filtro_mat_p.ie_tipo_despesa_mat, valor_bind_p);
	end if;

	-- Dia semana

	if (dados_filtro_mat_p.dt_dia_semana IS NOT NULL AND dados_filtro_mat_p.dt_dia_semana::text <> '') then
		-- se for importacao XML

		if (dados_regra_p.ie_evento = 'IMP') then

			--aaschlote 23/03/2015 OS 862545 - Tratamento para os dias de trabalho

			if (dados_filtro_mat_p.dt_dia_semana <> 9) then
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.dt_dia_semana_imp = :dt_dia_semana';
			else
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.dt_dia_semana_imp between 2 and 6';
			end if;
		else
			--aaschlote 23/03/2015 OS 862545 - Tratamento para os dias de trabalho

			if (dados_filtro_mat_p.dt_dia_semana <> 9) then
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.dt_dia_semana = :dt_dia_semana';
			else
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.dt_dia_semana between 2 and 6';
			end if;
		end if;

		if (dados_filtro_mat_p.dt_dia_semana <> 9) then
			valor_bind_p := sql_pck.bind_variable(	':dt_dia_semana', dados_filtro_mat_p.dt_dia_semana, valor_bind_p);
		end if;
	end if;

	-- Feriado

	if (dados_filtro_mat_p.ie_feriado = 'S') then
		-- se for importacao XML

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	exists	(select	1' || pls_util_pck.enter_w ||
								'		from	feriado xz' || pls_util_pck.enter_w ||
								'		where	xz.cd_estabelecimento = :cd_estabelecimento' || pls_util_pck.enter_w ||
								'		and	xz.dt_feriado = ' || ds_alias_w || '.dt_atendimento_imp_trunc)';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	exists	(select	1' || pls_util_pck.enter_w ||
									'		from	feriado xz' || pls_util_pck.enter_w ||
									'		where	xz.cd_estabelecimento = :cd_estabelecimento' || pls_util_pck.enter_w ||
									'		and	xz.dt_feriado = ' || ds_alias_w || '.dt_atendimento_trunc)';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':cd_estabelecimento', dados_regra_p.cd_estabelecimento, valor_bind_p);
	end if;

	-- Tipo feriado

	if (dados_filtro_mat_p.ie_tipo_feriado IS NOT NULL AND dados_filtro_mat_p.ie_tipo_feriado::text <> '') then
		-- se for importacao XML

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	exists	(select	1' || pls_util_pck.enter_w ||
								'		from	feriado xh' || pls_util_pck.enter_w ||
								'		where	xh.cd_estabelecimento = :cd_estabelecimento' || pls_util_pck.enter_w ||
								'		and	xh.dt_feriado = ' || ds_alias_w || '.dt_atendimento_imp_trunc' || pls_util_pck.enter_w ||
								'		and	xh.ie_tipo_feriado = :ie_tipo_feriado)';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	exists	(select	1' || pls_util_pck.enter_w ||
								'		from	feriado xh' || pls_util_pck.enter_w ||
								'		where	xh.cd_estabelecimento = :cd_estabelecimento' || pls_util_pck.enter_w ||
								'		and	xh.dt_feriado = ' || ds_alias_w || '.dt_atendimento_trunc' || pls_util_pck.enter_w ||
								'		and	xh.ie_tipo_feriado = :ie_tipo_feriado)';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':cd_estabelecimento', dados_regra_p.cd_estabelecimento, valor_bind_p);
		valor_bind_p := sql_pck.bind_variable(	':ie_tipo_feriado', dados_filtro_mat_p.ie_tipo_feriado, valor_bind_p);
	end if;

	-- Hora inicial

	if (dados_filtro_mat_p.hr_inicial IS NOT NULL AND dados_filtro_mat_p.hr_inicial::text <> '') then
		-- se for importacao XML

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.hr_inicio_mat_imp >= :hr_inicial';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.hr_inicio_mat >= :hr_inicial';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':hr_inicial', to_date(to_char(dados_filtro_mat_p.hr_inicial,'hh24:mi:ss'),'hh24:mi:ss'), valor_bind_p, sql_pck.b_hora);
	end if;

	-- Hora final

	if (dados_filtro_mat_p.hr_final IS NOT NULL AND dados_filtro_mat_p.hr_final::text <> '') then
		-- se for importacao XML

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.hr_fim_mat_imp <= :hr_final';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.hr_fim_mat <= :hr_final';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':hr_final', to_date(to_char(dados_filtro_mat_p.hr_final,'hh24:mi:ss'),'hh24:mi:ss'), valor_bind_p, sql_pck.b_hora);
	end if;

	-- Valor minimo

	if (dados_filtro_mat_p.vl_minimo_item IS NOT NULL AND dados_filtro_mat_p.vl_minimo_item::text <> '') then
		--Quando for importacao XML ignoramos o tipo de consistencia de valor pois na importacao XML so existe a consistencia para valor apresentado

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.vl_material_imp <= :vl_minimo';
		else
			-- Se for valor calculado

			if (dados_filtro_mat_p.ie_consistencia_valor = 'C') then
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.vl_material <= :vl_minimo';
			-- Se for valor apresentado

			else
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.vl_material_imp <= :vl_minimo';
			end if;
		end if;

		valor_bind_p := sql_pck.bind_variable(	':vl_minimo', to_char(dados_filtro_mat_p.vl_minimo_item), valor_bind_p);
	end if;

	-- Valor maximo

	if (dados_filtro_mat_p.vl_max_item IS NOT NULL AND dados_filtro_mat_p.vl_max_item::text <> '') then
		--Quando for importacao XML ignoramos o tipo de consistencia de valor pois na importacao XML so existe a consistencia para valor apresentado

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.vl_material_imp >= :vl_maximo';
		else
			-- Se for valor calculado

			if (dados_filtro_mat_p.ie_consistencia_valor = 'C') then
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.vl_material >= :vl_maximo';
			-- Se for valor apresentado

			else
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
									'and	' || ds_alias_w || '.vl_material_imp >= :vl_maximo';
			end if;
		end if;

		valor_bind_p := sql_pck.bind_variable(	':vl_maximo', to_char(dados_filtro_mat_p.vl_max_item), valor_bind_p);
	end if;

	-- Estrutura de material

	if (dados_filtro_mat_p.nr_seq_estrut_mat IS NOT NULL AND dados_filtro_mat_p.nr_seq_estrut_mat::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(select	1 '  || pls_util_pck.enter_w ||
							'		from	pls_estrutura_material_tm  estrut_mat ' || pls_util_pck.enter_w ||
							'		where	estrut_mat.nr_seq_estrutura = :nr_seq_estrut_mat ' || pls_util_pck.enter_w ||
							'		and	estrut_mat.nr_seq_material = ' || ds_alias_w || '.nr_seq_material) ';

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_estrut_mat', dados_filtro_mat_p.nr_seq_estrut_mat, valor_bind_p);
	end if;

	-- Prestador de alto custo

	if (dados_filtro_mat_p.ie_prestador_alto_custo = 'S') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.ie_alto_custo = ''S'' ';
	end if;

	if (dados_filtro_mat_p.ie_material_tuss = 'PC') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							' and	exists(	select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_material x ' || pls_util_pck.enter_w ||
							'		where	x.nr_sequencia = ' || ds_alias_w || '.nr_seq_material ' || pls_util_pck.enter_w ||
							'		and	x.nr_seq_tuss_mat_item is not null) ';
	elsif (dados_filtro_mat_p.ie_material_tuss = 'NP') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							' and	exists(	select	1 ' || pls_util_pck.enter_w ||
							'		from	pls_material x ' || pls_util_pck.enter_w ||
							'		where	x.nr_sequencia = ' || ds_alias_w || '.nr_seq_material ' || pls_util_pck.enter_w ||
							'		and	x.nr_seq_tuss_mat_item is null) ';
	end if;
	
	if (dados_filtro_mat_p.id_pacote_ptu = 'S') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							' and ' || ds_alias_w || '.ie_pacote_ptu = ''S''';	
	end if;
	
	if	((dados_filtro_mat_p.ie_acres_urg_emer in ('S', 'N')) and (dados_regra_p.ie_evento in ('CC', 'PTU')))then
		
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							' and	exists(	select	1 ' || pls_util_pck.enter_w ||
							' from	pls_conta_mat_regra cmr '|| pls_util_pck.enter_w ||
							' where	nvl(cmr.ie_acres_urg_emer, ''N'') = :ie_acres_urg_emer '|| pls_util_pck.enter_w ||
							' and cmr.nr_Sequencia = ' || ds_alias_w || '.nr_sequencia' ||
							' ) ';
		
		valor_bind_p := sql_pck.bind_variable(	':ie_acres_urg_emer', dados_filtro_mat_p.ie_acres_urg_emer, valor_bind_p);
	end if;
	
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_tipos_ocor_pck.obter_restricao_material ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_mat_p pls_tipos_ocor_pck.dados_filtro_mat, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
