-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.finaliza_processo_filtro ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Faz a finalizacao do processamento dos filtros. Consiste basicamente em marcar as
	contas que tiveram itens excluidos por processos de excecao e limpar todos
	os invalidos.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_seq_conta_w	pls_util_cta_pck.t_number_table;

C01 CURSOR(	nr_id_transacao_pc pls_selecao_ocor_cta.nr_id_transacao%type) FOR
	SELECT	distinct nr_seq_conta
	from	pls_selecao_ocor_cta
	where	nr_id_transacao = nr_id_transacao_pc
	and	ie_valido = 'N'
	and	ie_marcado_excecao = 'S';


BEGIN

-- seleciona todos os registros que foram invalidados por algum processo de excecao e deixa armazenado em uma tabela temporaria

open c01(nr_id_transacao_p);
loop
	tb_seq_conta_w.delete;

	fetch c01 bulk collect into tb_seq_conta_w
	limit pls_util_pck.qt_registro_transacao_w;

	exit when tb_seq_conta_w.count = 0;

	forall i in tb_seq_conta_w.first..tb_seq_conta_w.last
		insert into 	pls_oc_cta_conta_ex(nr_seq_conta)
		values (tb_seq_conta_w(i));

	

end loop;
close c01;

-- limpa tudo o que for invalido, porque na tabela de selecao so podera ser utilizado o que for ie_valido = S nos passos seguintes

CALL CALL CALL CALL CALL CALL pls_tipos_ocor_pck.limpar_invalidos(nr_id_transacao_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.finaliza_processo_filtro ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type) FROM PUBLIC;
