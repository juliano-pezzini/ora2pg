-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_tipos_ocor_pck.obter_restricao_conta ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_conta_p pls_tipos_ocor_pck.dados_filtro_conta, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: gerencia a aplicacao do filtro de conta
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Nao incluir restricoes nessa procedure, ela e responsavel apenas  por passar no cursor
dos filtros e incluir na selecao das contas que devem ter a ocorrencia gerada.

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
------------------------------------------------------------------------------------------------------------------

jjkruk OS 726741
Alteracao: filtro de nr_seq_clinica_imp usa exists
Motivo: comparava o valor importado do XML com o nr_sequencia da tabela pls_clinica
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dados_restricao_w	pls_tipos_ocor_pck.dados_select;
ds_alias_w		varchar(5);
ie_tipo_faturamento_w	pls_oc_cta_filtro_conta.ie_tipo_faturamento%type;


BEGIN
-- Inicializar o retorno

dados_restricao_w.ds_campos	:= null;
dados_restricao_w.ds_tabelas	:= null;
dados_restricao_w.ds_restricao	:= null;

if (dados_filtro_conta_p.nr_sequencia IS NOT NULL AND dados_filtro_conta_p.nr_sequencia::text <> '') then

	-- obtem o alias da tabela

	ds_alias_w := pls_tipos_ocor_pck.obter_alias_tab(	dados_filtro_p.ie_processo_excecao, dados_regra_p.ie_incidencia_selecao,
					dados_filtro_p.ie_incidencia_selecao, ie_tipo_tabela_p);

	-- Tipo de Guia

	if (dados_filtro_conta_p.ie_tipo_guia IS NOT NULL AND dados_filtro_conta_p.ie_tipo_guia::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.ie_tipo_guia = :ie_tipo_guia';

		valor_bind_p := sql_pck.bind_variable(	':ie_tipo_guia', dados_filtro_conta_p.ie_tipo_guia, valor_bind_p);
	end if;

	-- Regime Internacao

	if (dados_filtro_conta_p.ie_regime_internacao IS NOT NULL AND dados_filtro_conta_p.ie_regime_internacao::text <> '') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_regime_internacao_imp = :ie_regime_internacao';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_regime_internacao = :ie_regime_internacao';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':ie_regime_internacao', dados_filtro_conta_p.ie_regime_internacao, valor_bind_p);
	end if;

	-- Tipo internacao

	if (dados_filtro_conta_p.ie_tipo_internado IS NOT NULL AND dados_filtro_conta_p.ie_tipo_internado::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.ie_tipo_internado = :ie_tipo_internado';

		valor_bind_p := sql_pck.bind_variable(	':ie_tipo_internado', dados_filtro_conta_p.ie_tipo_internado, valor_bind_p);
	end if;

	-- Tipo consulta

	if (dados_filtro_conta_p.ie_tipo_consulta IS NOT NULL AND dados_filtro_conta_p.ie_tipo_consulta::text <> '') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_tipo_consulta_imp = :ie_tipo_consulta';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_tipo_consulta = :ie_tipo_consulta';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':ie_tipo_consulta', dados_filtro_conta_p.ie_tipo_consulta, valor_bind_p);
	end if;

	-- Motivo saida Internacao

	if (dados_filtro_conta_p.nr_seq_saida_int IS NOT NULL AND dados_filtro_conta_p.nr_seq_saida_int::text <> '') then
		if (dados_regra_p.ie_evento = 'IMP') then
			if (dados_filtro_conta_p.nr_seq_saida_int IS NOT NULL AND dados_filtro_conta_p.nr_seq_saida_int::text <> '') then
				dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	exists	(	select	1 '	|| pls_util_pck.enter_w ||
								'		from	pls_motivo_saida pms	'	|| pls_util_pck.enter_w ||
								'		where	pms.nr_sequencia = :nr_seq_saida_int'	|| pls_util_pck.enter_w ||
								'		and	pms.cd_tiss = '	||ds_alias_w||'.ie_motivo_encerramento)';
			end if;
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.nr_seq_saida_int = :nr_seq_saida_int';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_saida_int', dados_filtro_conta_p.nr_seq_saida_int, valor_bind_p);
	end if;

	-- Indicacao Clinica

	if (dados_filtro_conta_p.nr_seq_clinica IS NOT NULL AND dados_filtro_conta_p.nr_seq_clinica::text <> '') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||


							'and 	exists (select 1 ' || pls_util_pck.enter_w ||
							'		from	pls_clinica xp ' || pls_util_pck.enter_w ||
							'		where	xp.nr_sequencia = :nr_seq_clinica ' || pls_util_pck.enter_w ||
							'		and	xp.cd_clinica = ' || ds_alias_w || '.nr_seq_clinica_imp)';

		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.nr_seq_clinica = :nr_seq_clinica';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_clinica', dados_filtro_conta_p.nr_seq_clinica, valor_bind_p);
	end if;

	-- Internacao Obstetrica

	if (dados_filtro_conta_p.ie_internacao_obstetrica = 'S') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.ie_internacao_obstetrica = :ie_internacao_obstetrica';

		valor_bind_p := sql_pck.bind_variable(	':ie_internacao_obstetrica', dados_filtro_conta_p.ie_internacao_obstetrica, valor_bind_p);
	end if;

	-- Verifica se o beneficiario esta internado

	if (dados_filtro_conta_p.ie_internado = 'S') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
							ds_alias_w || '.ie_internado_imp';
		else
			dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
							ds_alias_w || '.ie_internado';
		end if;
	else
		dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
						'null ie_internado';
	end if;

	-- Verifica se o beneficiario esta internado(Tipo guia 5 ou 6, ou se for tipo guia 4 e referencia uma internacao).

	if (dados_filtro_conta_p.ie_vinc_internacao = 'S') then
		-- Para consistencia da conta ou import de xml pode ser utilizado somente esse campo

		dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
						ds_alias_w || '.ie_vinc_internado';

	else
		dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
						'null ie_vinc_internado';
	end if;

	-- Indica se o obito e do recem-nato durante a internacao da mae e nao possui numero da declaracao de obito

	if (dados_filtro_conta_p.ie_indicador_dorn = 'S') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao 					  		  || pls_util_pck.enter_w ||
								' and exists  (	select	1							' || pls_util_pck.enter_w ||
								'		from	pls_diagnost_conta_obito  x				' || pls_util_pck.enter_w ||
								'		where	x.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta 	' || pls_util_pck.enter_w ||
								' 		and    	x.ie_indicador_dorn_imp = ''S''      			' || pls_util_pck.enter_w ||
								'		and	x.nr_declaracao_obito_imp is null )			';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao 					  		  || pls_util_pck.enter_w ||
								' and exists  (	select	1							' || pls_util_pck.enter_w ||
								'		from	pls_diagnost_conta_obito  x				' || pls_util_pck.enter_w ||
								'		where	x.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta 	' || pls_util_pck.enter_w ||
								' 		and    	x.ie_indicador_dorn = ''S''      			' || pls_util_pck.enter_w ||
								'		and	x.nr_declaracao_obito is null )				';
		end if;
	-- Indica se o obito e do recem-nato durante a internacao da mae e possui numero da declaracao de obito

	elsif (dados_filtro_conta_p.ie_indicador_dorn = 'C') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao 					  		  || pls_util_pck.enter_w ||
								' and exists  (	select	1							' || pls_util_pck.enter_w ||
								'		from	pls_diagnost_conta_obito  x				' || pls_util_pck.enter_w ||
								'		where	x.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta 	' || pls_util_pck.enter_w ||
								' 		and    	x.ie_indicador_dorn_imp = ''S''      			' || pls_util_pck.enter_w ||
								'		and	x.nr_declaracao_obito_imp is not null )			';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao 					  		  || pls_util_pck.enter_w ||
								' and exists  (	select	1							' || pls_util_pck.enter_w ||
								'		from	pls_diagnost_conta_obito  x				' || pls_util_pck.enter_w ||
								'		where	x.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta 	' || pls_util_pck.enter_w ||
								' 		and    	x.ie_indicador_dorn = ''S''      			' || pls_util_pck.enter_w ||
								'		and	x.nr_declaracao_obito is not null )				';
		end if;
	end if;

	-- Tipo acomodacao

	if (dados_filtro_conta_p.nr_seq_tipo_acomod_conta IS NOT NULL AND dados_filtro_conta_p.nr_seq_tipo_acomod_conta::text <> '') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.nr_seq_tipo_acomod_imp = :nr_seq_tipo_acomodacao';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.nr_seq_tipo_acomodacao = :nr_seq_tipo_acomodacao';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_tipo_acomodacao', dados_filtro_conta_p.nr_seq_tipo_acomod_conta, valor_bind_p);
	end if;

	-- Origem conta

	if (dados_filtro_conta_p.ie_origem_conta IS NOT NULL AND dados_filtro_conta_p.ie_origem_conta::text <> '') then
		dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.ie_origem_conta = :ie_origem_conta';

		valor_bind_p := sql_pck.bind_variable(	':ie_origem_conta', dados_filtro_conta_p.ie_origem_conta, valor_bind_p);
	end if;

	-- Tipo conta

	if (dados_filtro_conta_p.ie_tipo_conta IS NOT NULL AND dados_filtro_conta_p.ie_tipo_conta::text <> '') then
		dados_restricao_w.ds_restricao := 	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
							'and	' || ds_alias_w || '.ie_tipo_conta = :ie_tipo_conta';

		valor_bind_p := sql_pck.bind_variable(	':ie_tipo_conta', dados_filtro_conta_p.ie_tipo_conta, valor_bind_p);
	end if;

	-- Tipo Atendimento

	if (dados_filtro_conta_p.nr_seq_tipo_atendimento IS NOT NULL AND dados_filtro_conta_p.nr_seq_tipo_atendimento::text <> '') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.nr_seq_tipo_atend_imp = :nr_seq_tipo_atendimento';
		else
			dados_restricao_w.ds_restricao	:=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.nr_seq_tipo_atendimento = :nr_seq_tipo_atendimento';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_tipo_atendimento', dados_filtro_conta_p.nr_seq_tipo_atendimento, valor_bind_p);
	end if;
	
	--Regime atendimento(nao diferencia entre imp ou nao)

	if (dados_filtro_conta_p.ie_regime_atendimento IS NOT NULL AND dados_filtro_conta_p.ie_regime_atendimento::text <> '') then
	
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_regime_atendimento = :ie_regime_atendimento';
	

		valor_bind_p := sql_pck.bind_variable(	':ie_regime_atendimento', dados_filtro_conta_p.ie_regime_atendimento, valor_bind_p);
	end if;
	
	--Saude ocupacional(nao diferencia entre imp ou nao)

	if (dados_filtro_conta_p.ie_saude_ocupacional IS NOT NULL AND dados_filtro_conta_p.ie_saude_ocupacional::text <> '') then
	
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_saude_ocupacional = :ie_saude_ocupacional';
	

		valor_bind_p := sql_pck.bind_variable(	':ie_saude_ocupacional', dados_filtro_conta_p.ie_saude_ocupacional, valor_bind_p);
	end if;

	-- CID

	if (dados_filtro_conta_p.cd_doenca_cid IS NOT NULL AND dados_filtro_conta_p.cd_doenca_cid::text <> '') then
		-- Quando a ocorrencia for gerada durante a importacao deve se olhar para o campo IMP,

		-- Do contrario se olha no campo quente.

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
						'and	exists ( ' || pls_util_pck.enter_w ||
						'		select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_diagnostico_conta diag ' || pls_util_pck.enter_w ||
						'		where	diag.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta ' || pls_util_pck.enter_w ||
						'		and	diag.cd_doenca_imp = :cd_doenca_cid ' || pls_util_pck.enter_w ||
						'	) ';
		else

			dados_restricao_w.ds_restricao	:=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
						'and	exists ( ' || pls_util_pck.enter_w ||
						'		select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_diagnostico_conta diag ' || pls_util_pck.enter_w ||
						'		where	diag.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta ' || pls_util_pck.enter_w ||
						'		and	diag.cd_doenca = :cd_doenca_cid ' || pls_util_pck.enter_w ||
						'	) ';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':cd_doenca_cid', dados_filtro_conta_p.cd_doenca_cid, valor_bind_p);
	end if;

	-- Grupo doenca

	if (dados_filtro_conta_p.nr_seq_grupo_doenca IS NOT NULL AND dados_filtro_conta_p.nr_seq_grupo_doenca::text <> '') then
		-- Quando a ocorrencia for gerada durante a importacao deve se olhar para o campo IMP,

		-- Do contrario se olha no campo quente.

		if (dados_regra_p.ie_evento = 'IMP') then

			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
						'and	exists ( ' || pls_util_pck.enter_w ||
						'		select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_diagnostico_conta	diag, ' || pls_util_pck.enter_w ||
						'			pls_preco_doenca_v	grupo ' || pls_util_pck.enter_w ||
						'		where	diag.nr_seq_conta	= ' || ds_alias_w || '.nr_seq_conta ' || pls_util_pck.enter_w ||
						'		and	grupo.nr_seq_grupo	= :nr_seq_grupo ' || pls_util_pck.enter_w ||
						'		and	diag.cd_doenca_imp	= grupo.cd_doenca_cid ' || pls_util_pck.enter_w ||
						'	) ';
		else

			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
						'and	exists ( ' || pls_util_pck.enter_w ||
						'		select	1 ' || pls_util_pck.enter_w ||
						'		from	pls_diagnostico_conta	diag, ' || pls_util_pck.enter_w ||
						'			pls_preco_doenca_v	grupo ' || pls_util_pck.enter_w ||
						'		where	diag.nr_seq_conta	= ' || ds_alias_w || '.nr_seq_conta ' || pls_util_pck.enter_w ||
						'		and	grupo.nr_seq_grupo	= :nr_seq_grupo ' || pls_util_pck.enter_w ||
						'		and	diag.cd_doenca		= grupo.cd_doenca_cid ' || pls_util_pck.enter_w ||
						'	) ';
		end if;

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_grupo', dados_filtro_conta_p.nr_seq_grupo_doenca, valor_bind_p);
	end if;

	--Identifica se conta e de recem nascido

	if (dados_filtro_conta_p.ie_recem_nascido = 'S') then
		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao 					  		  || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_recem_nascido_imp = :ie_recem_nascido';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao 					  		  || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_recem_nascido = :ie_recem_nascido';
		end if;
		valor_bind_p := sql_pck.bind_variable(':ie_recem_nascido', dados_filtro_conta_p.ie_recem_nascido, valor_bind_p);
	end if;

	--Identifica se conta do tipo de faturamento

	if (dados_filtro_conta_p.ie_tipo_faturamento IS NOT NULL AND dados_filtro_conta_p.ie_tipo_faturamento::text <> '') then

		ie_tipo_faturamento_w 	:= dados_filtro_conta_p.ie_tipo_faturamento;

		-- Se a regra for para Importacao do XML tem que filtrar o campo IMP

		if (dados_regra_p.ie_evento = 'IMP') then

			/*XML vem diferente, por isso e feito essa conversao*/


			if (dados_filtro_conta_p.ie_tipo_faturamento = 'P') then
				ie_tipo_faturamento_w := '1';
			elsif (dados_filtro_conta_p.ie_tipo_faturamento = 'F') then
				ie_tipo_faturamento_w := '2';
			elsif (dados_filtro_conta_p.ie_tipo_faturamento = 'C') then
				ie_tipo_faturamento_w := '3';
			elsif (dados_filtro_conta_p.ie_tipo_faturamento = 'T') then
				ie_tipo_faturamento_w := '4';
			end if;

			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_tipo_faturamento_imp = :ie_tipo_faturamento';
		else
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_tipo_faturamento = :ie_tipo_faturamento';
		end if;

		valor_bind_p := sql_pck.bind_variable(':ie_tipo_faturamento', ie_tipo_faturamento_w, valor_bind_p);
	end if;

	-- Carater Internacao

	-- Caso tenha algo no filtro ie_carater_internacao busco os campos para depois verificar se entra ou nao na regra, se estiver null retorno null nos campos

	if (dados_filtro_conta_p.ie_carater_internacao IS NOT NULL AND dados_filtro_conta_p.ie_carater_internacao::text <> '') then

		dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
						ds_alias_w || '.ie_carater_internacao,' || pls_util_pck.enter_w ||
						ds_alias_w || '.ie_carater_internacao_imp,' || pls_util_pck.enter_w ||
						ds_alias_w || '.cd_versao_tiss';
	else
		dados_restricao_w.ds_campos :=	dados_restricao_w.ds_campos || ',' || pls_util_pck.enter_w ||
						'null ie_carater_internacao,' || pls_util_pck.enter_w ||
						'null ie_carater_internacao_imp,' || pls_util_pck.enter_w ||
						'null cd_versao_tiss';
	end if;
	
	--Indicacao acidente

	if (dados_filtro_conta_p.ie_indicacao_acidente IS NOT NULL AND dados_filtro_conta_p.ie_indicacao_acidente::text <> '') then
		
			dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
								'and	' || ds_alias_w || '.ie_indicacao_acidente = :ie_indicacao_acidente';
		
		valor_bind_p := sql_pck.bind_variable(':ie_indicacao_acidente', dados_filtro_conta_p.ie_indicacao_acidente, valor_bind_p);
	end if;

	if (dados_filtro_conta_p.ie_acomodacao_autorizada != 'N') then

		dados_restricao_w.ds_restricao := dados_restricao_w.ds_restricao ||
						' and exists( select	1 ' || pls_util_pck.enter_w ||
						  ' 		from 	pls_guia_plano y,' || pls_util_pck.enter_w ||
						  '			pls_tipo_acomodacao x ' || pls_util_pck.enter_w ||
						  '		where	y.nr_sequencia = ' || ds_alias_w || '.nr_seq_guia' || pls_util_pck.enter_w ||
						  '		and	x.nr_sequencia = y.nr_seq_tipo_acomodacao ' || pls_util_pck.enter_w ||
						  '		and	x.ie_tipo_acomodacao = :ie_acomodacao_autorizada ) ' || pls_util_pck.enter_w;
		valor_bind_p := sql_pck.bind_variable(	':ie_acomodacao_autorizada', dados_filtro_conta_p.ie_acomodacao_autorizada, valor_bind_p);
	end if;
	
	
	if (coalesce(dados_filtro_conta_p.ie_conta_autorizada, 'N') = 'S') then
		begin
		
		dados_restricao_w.ds_restricao	:=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
					'and	' || ds_alias_w || '.nr_seq_guia is not null';
		
		end;
	end if;
	
	if (dados_filtro_conta_p.tp_rede_min IS NOT NULL AND dados_filtro_conta_p.tp_rede_min::text <> '') then
		
		dados_restricao_w.ds_restricao	:= 	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
					'and	' || ds_alias_w || '.tp_rede_min = :tp_rede_min';
		valor_bind_p := sql_pck.bind_variable(':tp_rede_min', dados_filtro_conta_p.tp_rede_min, valor_bind_p);

	end if;
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_tipos_ocor_pck.obter_restricao_conta ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_conta_p pls_tipos_ocor_pck.dados_filtro_conta, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
