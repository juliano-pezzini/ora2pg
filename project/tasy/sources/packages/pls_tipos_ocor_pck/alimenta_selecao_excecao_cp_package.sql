-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.alimenta_selecao_excecao_cp ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_id_transacao_ex_p INOUT pls_selecao_ex_ocor_cta.nr_id_transacao%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Alimentar utilizando somente a conta principal do atendimento nos registros que estao como validos na tabela de
	selecao para a tabela de processamento da excecao do atendimento
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_tipo_registro_w	pls_util_cta_pck.t_varchar2_table_1;
tb_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_seq_segurado_w	pls_util_cta_pck.t_number_table;
tb_cd_guia_referencia_w	pls_util_cta_pck.t_varchar2_table_20;

c01 CURSOR(	nr_id_transacao_pc		pls_selecao_ocor_cta.nr_id_transacao%type) FOR
	SELECT	distinct b.nr_sequencia nr_seq_conta
	from	pls_selecao_ocor_cta	a,
		pls_conta		b
	where	a.nr_id_transacao	= nr_id_transacao_pc
	and	a.ie_valido 		= 'S'
	and	b.nr_sequencia		= a.nr_seq_conta
	and	b.nr_sequencia		= b.nr_seq_conta_princ;

c_conta CURSOR(	nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	'C' ie_tipo_registro,
		b.nr_sequencia nr_seq_conta,
		null nr_seq_conta_proc,
		null nr_seq_conta_mat,
		b.nr_seq_segurado,
		b.cd_guia_referencia
	from	pls_conta_ocor_v b
	where	b.nr_seq_conta = nr_seq_conta_pc;

c_proc CURSOR(	nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	'P' ie_tipo_registro,
		b.nr_seq_conta,
		b.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat,
		b.nr_seq_segurado,
		b.cd_guia_referencia
	from	pls_conta_proc_ocor_v b
	where	b.nr_seq_conta = nr_seq_conta_pc;

c_mat CURSOR(	nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	'M' ie_tipo_registro,
		b.nr_seq_conta,
		null nr_seq_conta_proc,
		b.nr_sequencia nr_seq_conta_mat,
		b.nr_seq_segurado,
		b.cd_guia_referencia
	from	pls_conta_mat_ocor_v b
	where	b.nr_seq_conta = nr_seq_conta_pc;

BEGIN
-- busca a transacao da excecao

select	nextval('pls_id_transacao_ocor_seq')
into STRICT	nr_id_transacao_ex_p
;

for r_c01_w in c01(nr_id_transacao_p) loop

	-- incidencia por conta

	if (dados_filtro_p.ie_incidencia_selecao = 'C') then

		open c_conta(r_c01_w.nr_seq_conta);
		loop
			tb_tipo_registro_w.delete;
			tb_seq_conta_w.delete;
			tb_seq_conta_proc_w.delete;
			tb_seq_conta_mat_w.delete;
			tb_seq_segurado_w.delete;
			tb_cd_guia_referencia_w.delete;

			fetch c_conta bulk collect into 	tb_tipo_registro_w, tb_seq_conta_w,
								tb_seq_conta_proc_w, tb_seq_conta_mat_w,
								tb_seq_segurado_w, tb_cd_guia_referencia_w
			limit pls_util_pck.qt_registro_transacao_w;

			exit when tb_tipo_registro_w.count = 0;

			-- manda para o banco

			CALL pls_tipos_ocor_pck.insere_selecao_excecao(	tb_tipo_registro_w, tb_seq_conta_w,
						tb_seq_conta_proc_w, tb_seq_conta_mat_w,
						tb_seq_segurado_w, tb_cd_guia_referencia_w,
						nr_id_transacao_ex_p);
		end loop;
		close c_conta;

	-- incidencia por procedimento

	elsif (dados_filtro_p.ie_incidencia_selecao = 'P') then

		open c_proc(r_c01_w.nr_seq_conta);
		loop
			tb_tipo_registro_w.delete;
			tb_seq_conta_w.delete;
			tb_seq_conta_proc_w.delete;
			tb_seq_conta_mat_w.delete;
			tb_seq_segurado_w.delete;
			tb_cd_guia_referencia_w.delete;

			fetch c_proc bulk collect into 	tb_tipo_registro_w, tb_seq_conta_w,
							tb_seq_conta_proc_w, tb_seq_conta_mat_w,
							tb_seq_segurado_w, tb_cd_guia_referencia_w
			limit pls_util_pck.qt_registro_transacao_w;

			exit when tb_tipo_registro_w.count = 0;

			-- manda para o banco

			CALL pls_tipos_ocor_pck.insere_selecao_excecao(	tb_tipo_registro_w, tb_seq_conta_w,
						tb_seq_conta_proc_w, tb_seq_conta_mat_w,
						tb_seq_segurado_w, tb_cd_guia_referencia_w,
						nr_id_transacao_ex_p);
		end loop;
		close c_proc;

	-- incidencia por material

	elsif (dados_filtro_p.ie_incidencia_selecao = 'M') then

		open c_mat(r_c01_w.nr_seq_conta);
		loop
			tb_tipo_registro_w.delete;
			tb_seq_conta_w.delete;
			tb_seq_conta_proc_w.delete;
			tb_seq_conta_mat_w.delete;
			tb_seq_segurado_w.delete;
			tb_cd_guia_referencia_w.delete;

			fetch c_mat bulk collect into 	tb_tipo_registro_w, tb_seq_conta_w,
							tb_seq_conta_proc_w, tb_seq_conta_mat_w,
							tb_seq_segurado_w, tb_cd_guia_referencia_w
			limit pls_util_pck.qt_registro_transacao_w;

			exit when tb_tipo_registro_w.count = 0;

			-- manda para o banco

			CALL pls_tipos_ocor_pck.insere_selecao_excecao(	tb_tipo_registro_w, tb_seq_conta_w,
						tb_seq_conta_proc_w, tb_seq_conta_mat_w,
						tb_seq_segurado_w, tb_cd_guia_referencia_w,
						nr_id_transacao_ex_p);
		end loop;
		close c_mat;
	end if;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.alimenta_selecao_excecao_cp ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_id_transacao_ex_p INOUT pls_selecao_ex_ocor_cta.nr_id_transacao%type) FROM PUBLIC;
