-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.aplica_filtro_material ( ie_considera_selecao_p boolean, dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_consistencia_p pls_tipos_ocor_pck.dados_consistencia, dados_forma_geracao_ocor_p pls_tipos_ocor_pck.dados_forma_geracao_ocor, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: gerencia a aplicacao do filtro de material.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Nao incluir restricoes nessa procedure, ela e responsavel apenas  por passar no cursor
dos filtros e incluir na selecao das contas que devem ter a ocorrencia gerada.

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


tb_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_seq_conta_proc_w	pls_util_cta_pck.t_number_table;
tb_seq_conta_mat_w	pls_util_cta_pck.t_number_table;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_guia_referencia_w	pls_util_cta_pck.t_varchar2_table_20;
tb_seq_segurado_w	pls_util_cta_pck.t_number_table;
tb_dt_item_w		pls_util_cta_pck.t_date_table;
tb_dt_item_hora_ini_w	pls_util_cta_pck.t_date_table;
tb_dt_item_hora_fim_w	pls_util_cta_pck.t_date_table;
tb_dt_item_dia_ini_w	pls_util_cta_pck.t_date_table;
tb_dt_item_dia_fim_w	pls_util_cta_pck.t_date_table;
tb_ie_origem_proced_w	pls_util_cta_pck.t_number_table;
tb_cd_procedimento_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_material_w	pls_util_cta_pck.t_number_table;

dados_filtro_mat_w	pls_tipos_ocor_pck.dados_filtro_mat;
ds_select_w		varchar(8000);
valor_bind_w		sql_pck.t_dado_bind;
dados_restricao_w	pls_tipos_ocor_pck.dados_select;
dados_restricao_proc_w	pls_tipos_ocor_pck.dados_select;
dados_restricao_mat_w	pls_tipos_ocor_pck.dados_select;
cursor_w		sql_pck.t_cursor;

c_filtro CURSOR(	nr_seq_filtro_pc	pls_oc_cta_filtro.nr_sequencia%type) FOR
	SELECT	a.nr_seq_material,
		a.ie_tipo_despesa_mat,
		a.nr_seq_grupo_material,
		a.ie_feriado,
		a.dt_dia_semana,
		a.hr_inicial,
		a.hr_final,
		a.ie_tipo_feriado,
		a.ie_tipo_data,
		a.ie_consistencia_valor,
		a.vl_max_item,
		a.vl_minimo_item,
		a.nr_seq_estrut_mat,
		a.nr_sequencia,
		a.ie_prestador_alto_custo,
		--Feito tratamento com nvl pois modificamos a forma de cadastrar as regras e nao fizemos um BACA por motivos de seguranca

		--Sendo assim, cadastros antigos terao os dados gravados dentro dos campos que nao sao IMP e os novos terao dados nos campos IMP para o caso de importacao XML

		coalesce(a.vl_max_item_imp,a.vl_max_item) vl_max_item_imp,
		coalesce(a.vl_minimo_item_imp,a.vl_minimo_item) vl_minimo_item_imp,
		a.nr_seq_tipo_prestador,
		a.ie_tipo_relacao,
		a.ie_material_tuss,
		a.id_pacote_ptu,
		a.ie_acres_urg_emer
	from	pls_oc_cta_filtro_mat a
	where	a.nr_seq_oc_cta_filtro	= nr_seq_filtro_pc
	and	a.ie_situacao = 'A';
BEGIN

-- Se nao tiver informacoes da regra nao sera possivel aplicar os filtros.

if (dados_filtro_p.nr_sequencia IS NOT NULL AND dados_filtro_p.nr_sequencia::text <> '') then

	-- Atualizar o campo auxiliar que sera utilizado para sinalizar os registros que foram processados

	CALL CALL CALL CALL CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar( 'F', nr_id_transacao_p, dados_filtro_p, dados_regra_p);

	-- Passar para todos os filtros da regra.

	for	r_c_filtro_w in c_filtro(dados_filtro_p.nr_sequencia) loop

		-- Atualizar a variavel com os dados do filtro

		dados_filtro_mat_w.nr_sequencia			:= r_c_filtro_w.nr_sequencia;
		dados_filtro_mat_w.nr_seq_material		:= r_c_filtro_w.nr_seq_material;
		dados_filtro_mat_w.ie_tipo_despesa_mat		:= r_c_filtro_w.ie_tipo_despesa_mat;
		dados_filtro_mat_w.nr_seq_grupo_material	:= r_c_filtro_w.nr_seq_grupo_material;
		dados_filtro_mat_w.ie_feriado			:= r_c_filtro_w.ie_feriado;
		dados_filtro_mat_w.dt_dia_semana		:= r_c_filtro_w.dt_dia_semana;
		dados_filtro_mat_w.hr_inicial			:= r_c_filtro_w.hr_inicial;
		dados_filtro_mat_w.hr_final			:= r_c_filtro_w.hr_final;
		dados_filtro_mat_w.ie_tipo_feriado		:= r_c_filtro_w.ie_tipo_feriado;
		dados_filtro_mat_w.ie_tipo_data			:= r_c_filtro_w.ie_tipo_data;
		dados_filtro_mat_w.ie_consistencia_valor	:= r_c_filtro_w.ie_consistencia_valor;
		dados_filtro_mat_w.nr_seq_estrut_mat		:= r_c_filtro_w.nr_seq_estrut_mat;
		dados_filtro_mat_w.ie_prestador_alto_custo	:= r_c_filtro_w.ie_prestador_alto_custo;
		dados_filtro_mat_w.nr_seq_tipo_prestador	:= r_c_filtro_w.nr_seq_tipo_prestador;
		dados_filtro_mat_w.ie_tipo_relacao		:= r_c_filtro_w.ie_tipo_relacao;
		dados_filtro_mat_w.ie_material_tuss		:= r_c_filtro_w.ie_material_tuss;
		dados_filtro_mat_w.id_pacote_ptu		:= r_c_filtro_w.id_pacote_ptu;

		if (dados_forma_geracao_ocor_p.ie_evento = 'IMP') then
			dados_filtro_mat_w.vl_max_item			:= r_c_filtro_w.vl_max_item_imp;
			dados_filtro_mat_w.vl_minimo_item		:= r_c_filtro_w.vl_minimo_item_imp;
		else
			dados_filtro_mat_w.vl_max_item			:= r_c_filtro_w.vl_max_item;
			dados_filtro_mat_w.vl_minimo_item		:= r_c_filtro_w.vl_minimo_item;
		end if;
		
		dados_filtro_mat_w.ie_acres_urg_emer  := r_c_filtro_w.ie_acres_urg_emer;

		-- Estrutura de material

		if (dados_filtro_mat_w.nr_seq_estrut_mat IS NOT NULL AND dados_filtro_mat_w.nr_seq_estrut_mat::text <> '') then
			-- usa uma tabela para armazenar a estrutura de materiais

			-- no futuro isso deve ser feito atraves de uma view materializada, nao foi feito ainda por motivo de nao existir suporte para este tipo de objetos no TASY

			-- se o campo nr_seq_estrut_mat tiver valor sei que vou precisar dessa tabela atualizada, por isso resolvo tudo aqui

			CALL pls_gerencia_upd_obj_pck.atualizar_objetos(nm_usuario_p, 'PLS_TIPOS_OCOR_PCK.APLICA_FILTRO_MATERIAL()', 'PLS_ESTRUTURA_MATERIAL_TM');
		end if;

		if (dados_filtro_mat_w.nr_seq_grupo_material IS NOT NULL AND dados_filtro_mat_w.nr_seq_grupo_material::text <> '') then
			CALL pls_gerencia_upd_obj_pck.atualizar_objetos(nm_usuario_p, 'PLS_TIPOS_OCOR_PCK.APLICA_FILTRO_MATERIAL()', 'PLS_GRUPO_MATERIAL_TM');
		end if;

		begin
			-- so respeita a incidencia da regra PM para filtros que nao sao excecao

			-- um filtro de excecao ira atingir somente a sua incidencia e jamais sera PM

			if	(dados_regra_p.ie_incidencia_selecao = 'PM' AND dados_filtro_p.ie_processo_excecao = 'N') then
				-- restricao para o filtro de procedimento

				valor_bind_w := pls_tipos_ocor_pck.obter_restricao_material(	dados_regra_p, dados_filtro_p, dados_filtro_mat_w, 'MAT', valor_bind_w);
			else
				-- restricao para todas as outras situacoes

				valor_bind_w := pls_tipos_ocor_pck.obter_restricao_material(		dados_regra_p, dados_filtro_p, dados_filtro_mat_w, null, valor_bind_w);
			end if;

			-- Montar o select padrao juntamente as restricoes.

			valor_bind_w := pls_tipos_ocor_pck.obter_select_filtro(	ie_considera_selecao_p, nr_id_transacao_p, dados_consistencia_p, dados_regra_p, dados_forma_geracao_ocor_p, dados_filtro_p, dados_restricao_w, dados_restricao_proc_w, dados_restricao_mat_w, cd_estabelecimento_p, valor_bind_w);

			-- executa o comando sql com os respectivos binds

			valor_bind_w := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w);

			loop
				fetch cursor_w bulk collect into	tb_seq_conta_w, tb_seq_conta_proc_w,
									tb_seq_conta_mat_w, tb_guia_referencia_w,
									tb_seq_segurado_w, tb_dt_item_w,
									tb_dt_item_hora_ini_w, tb_dt_item_hora_fim_w,
									tb_dt_item_dia_ini_w, tb_dt_item_dia_fim_w,
									tb_ie_origem_proced_w, tb_cd_procedimento_w,
									tb_nr_seq_material_w, tb_seq_selecao_w
				limit pls_util_pck.qt_registro_transacao_w;
				exit when tb_seq_conta_w.count = 0;

				-- Insere todos os registros das listas na tabela de selecao

				CALL CALL CALL CALL CALL pls_tipos_ocor_pck.gerencia_selecao_filtro(	'F', tb_seq_conta_w,
								tb_seq_conta_proc_w, tb_seq_conta_mat_w,
								tb_guia_referencia_w, tb_seq_segurado_w,
								tb_dt_item_w, tb_dt_item_hora_ini_w,
								tb_dt_item_hora_fim_w, tb_dt_item_dia_ini_w,
								tb_dt_item_dia_fim_w, tb_ie_origem_proced_w,
								tb_cd_procedimento_w, tb_nr_seq_material_w,
								tb_seq_selecao_w, nr_id_transacao_p,
								'S', nm_usuario_p,
								dados_filtro_p, dados_regra_p);
			end loop;
			close cursor_w;

		exception
			when others then

			if (cursor_w%isopen) then
				close cursor_w;
			end if;

			-- Tratar erro gerado no sql dinamico, sera inserido registro no log e abortado o processo exibindo mensagem de erro.

			CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(	dados_regra_p, ds_select_w,
									nr_id_transacao_p, nm_usuario_p);
		end;

	end loop; -- filtro

	-- Atualizar o campo definitivo que sera utilizado para sinalizar os registros que foram processados

	CALL CALL CALL CALL CALL pls_tipos_ocor_pck.atualiza_campo_valido(	'F', nr_id_transacao_p, dados_filtro_p, dados_regra_p);
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.aplica_filtro_material ( ie_considera_selecao_p boolean, dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_consistencia_p pls_tipos_ocor_pck.dados_consistencia, dados_forma_geracao_ocor_p pls_tipos_ocor_pck.dados_forma_geracao_ocor, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
