-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.grava_ocor_selecao ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_ocor_p pls_tipos_ocor_pck.dados_ocor, cd_acao_analise_p pls_acao_analise.cd_acao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar ocorrencia para todos os registros que estao como validos na tabela de selecao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ie_tipo_item_w			integer;
qt_oc_benef_w			integer;
nr_seq_ocorrencia_benef_w	pls_ocorrencia_benef.nr_sequencia%type;

-- Retorna a informacao dos itens que estao na tabela de selecao.

c_gera_ocor CURSOR(	nr_id_transacao_pc		pls_selecao_ocor_cta.nr_id_transacao%type,
			cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type,
			cd_acao_analise_pc		pls_acao_analise.cd_acao%type) FOR
	SELECT	distinct
		x.nr_seq_conta,
		x.nr_seq_conta_proc,
		x.nr_seq_conta_mat,
		x.ie_tipo_registro,
		x.ds_observacao,
		a.nr_seq_segurado,
		x.qt_excedido,
		x.nr_seq_oc_cta_comb
	from	pls_selecao_ocor_cta	x,
		pls_conta 		a
	where	x.nr_id_transacao	= nr_id_transacao_pc
	-- qualquer item com D deve gerar ocorrencia pois era um S que foi desconsiderado por nao atender

	-- as datas de vigencia da regra

	and	x.ie_valido		in ('S', 'D')
	and	a.nr_sequencia		= x.nr_seq_conta
	and	a.cd_estabelecimento	= cd_estabelecimento_pc
	-- tratamento para lancar somente as ocorrencias em contas que sejam validas.

	-- na tabela de selecao pode existir alguma conta fechada, porque contas fechadas sao consideradas durante o processo apenas para leitura

	-- isso existe basicamente pelo motivo de geracao de contas de honorario individual

	-- em resumo, so as contas que tiverem os status abaixo podem ter ocorrencias combinadas

	and	((a.ie_status 		in ('A', 'L', 'P', 'U')) or (a.ie_status = 'F'	and cd_acao_analise_pc = '8'));

BEGIN

-- grava as ocorrencias

for r_c_gera_ocor in c_gera_ocor(nr_id_transacao_p, cd_estabelecimento_p, cd_acao_analise_p) loop

	-- Gera ocorrencia ou Reativar

	qt_oc_benef_w := pls_tipos_ocor_pck.obter_qt_ocorrencia(	r_c_gera_ocor.nr_seq_conta,
									r_c_gera_ocor.nr_seq_conta_proc,
									r_c_gera_ocor.nr_seq_conta_mat,
									dados_regra_p);



	-- se nao tiver registros insere glosa

	if (qt_oc_benef_w = 0) then

		-- gerar para conta

		if (r_c_gera_ocor.ie_tipo_registro = 'C') then
			ie_tipo_item_w := 8;
		-- gerar para procedimento

		elsif (r_c_gera_ocor.ie_tipo_registro = 'P') then
			ie_tipo_item_w := 3;
		-- gerar para material

		elsif (r_c_gera_ocor.ie_tipo_registro = 'M') then
			ie_tipo_item_w := 4;
		-- senao e nulo

		else
			ie_tipo_item_w := null;
		end if;

		-- Insere a ocorrencia para o item selecionado.

		pls_inserir_ocorrencia(	r_c_gera_ocor.nr_seq_segurado, dados_regra_p.nr_seq_ocorrencia, null,
					null, r_c_gera_ocor.nr_seq_conta, r_c_gera_ocor.nr_seq_conta_proc,
					r_c_gera_ocor.nr_seq_conta_mat, null, nm_usuario_p,
					r_c_gera_ocor.ds_observacao, dados_ocor_p.nr_seq_motivo_glosa, ie_tipo_item_w,
					dados_regra_p.cd_estabelecimento, 'N' ,null,
					nr_seq_ocorrencia_benef_w, null,
					null, null, null, r_c_gera_ocor.qt_excedido,
					r_c_gera_ocor.nr_seq_oc_cta_comb);
	else
		-- Se o item ja tiver a ocorrencia lancada sera reativado a ocorrencia.

		CALL pls_reativar_ocor_conta( dados_regra_p.nr_seq_ocorrencia, r_c_gera_ocor.nr_seq_conta,
					 r_c_gera_ocor.nr_seq_conta_proc, r_c_gera_ocor.nr_seq_conta_mat, nm_usuario_p,
					 r_c_gera_ocor.qt_excedido, r_c_gera_ocor.nr_seq_oc_cta_comb);
	end if;
	
end loop; -- c_gera_ocor

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.grava_ocor_selecao ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_ocor_p pls_tipos_ocor_pck.dados_ocor, cd_acao_analise_p pls_acao_analise.cd_acao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
