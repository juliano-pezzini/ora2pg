-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_tipos_ocor_pck.grava_ocor_filtro ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_ocor_p pls_tipos_ocor_pck.dados_ocor, ie_tipo_aplicacao_ocor_p pls_oc_cta_tipo_validacao.ie_aplicacao_ocorrencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Gerar ocorrencia para todos os registros que estao como validos na tabela de selecao
	de acordo com a incidencia de cada filtro.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

ie_incidencia_filtro_w	varchar(5);
ds_sql_w		varchar(2000);
ds_sql_exec_w		varchar(2200);
ds_filtro_sql_w		varchar(200);
bind_sql_valor_w	sql_pck.t_dado_bind;
cursor_w		sql_pck.t_cursor;
qt_oc_benef_w		integer;
current_setting('pls_tipos_ocor_pck.nr_seq_conta_w')::pls_util_cta_pck.t_number_table		pls_selecao_ocor_cta.nr_seq_conta%type;
nr_seq_conta_proc_w	pls_selecao_ocor_cta.nr_seq_conta_proc%type;
nr_seq_conta_mat_w	pls_selecao_ocor_cta.nr_seq_conta_mat%type;
ds_observacao_w		pls_selecao_ocor_cta.ds_observacao%type;
nr_seq_segurado_w	pls_conta.nr_seq_segurado%type;
ie_tipo_item_w		integer;
nr_seq_ocorrencia_benef_w	pls_ocorrencia_benef.nr_sequencia%type;
qt_excedido_w		pls_selecao_ocor_cta.qt_excedido%type;
nr_seq_oc_cta_comb_w	pls_selecao_ocor_cta.nr_seq_oc_cta_comb%type;
c_filtro_ocor CURSOR(	nr_seq_regra_pc		pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_filtro,
		a.ie_filtro_proc,
		a.ie_filtro_mat
	from	pls_oc_cta_filtro a
	where	a.nr_seq_oc_cta_comb = nr_seq_regra_pc
	and	a.ie_situacao = 'A'
	and 	a.ie_excecao = 'N'
	order by nr_seq_filtro;
BEGIN

-- qualquer item com D deve gerar ocorrencia pois era um S que foi desconsiderado por nao atender

-- as datas de vigencia da regra

ds_sql_w := 	'select	distinct x.nr_seq_conta,' || pls_util_pck.enter_w ||
		'	x.nr_seq_conta_proc,' || pls_util_pck.enter_w ||
		'	x.nr_seq_conta_mat,' || pls_util_pck.enter_w ||
		'	x.ds_observacao,' || pls_util_pck.enter_w ||
		'	a.nr_seq_segurado,' || pls_util_pck.enter_w ||
		'	x.qt_excedido,' || pls_util_pck.enter_w ||
		'	x.nr_seq_oc_cta_comb' || pls_util_pck.enter_w ||
		'from	pls_selecao_ocor_cta x,' || pls_util_pck.enter_w ||
		'	pls_conta a' || pls_util_pck.enter_w ||
		'where	x.nr_id_transacao	= :nr_id_transacao_pc' || pls_util_pck.enter_w ||
		'and	x.nr_seq_filtro		= :nr_seq_filtro_pc' || pls_util_pck.enter_w ||
		'and	x.ie_valido		in (''S'', ''D'')' || pls_util_pck.enter_w ||
		'and	a.nr_sequencia		= x.nr_seq_conta' || pls_util_pck.enter_w ||
		'and	a.cd_estabelecimento	= :cd_estabelecimento_pc' || pls_util_pck.enter_w ||
		'and	((a.ie_status 		in (''A'', ''L'', ''P'', ''U'')) or '|| pls_util_pck.enter_w ||
		'	(a.ie_status	= ''F'' and	:cd_acao_analise_pc = ''8'' ))';

-- varre todos os filtros

for r_c_filtro_ocor in c_filtro_ocor(dados_regra_p.nr_sequencia) loop

	ds_filtro_sql_w := null;
	bind_sql_valor_w.delete;

	if (r_c_filtro_ocor.ie_filtro_proc = 'N' and r_c_filtro_ocor.ie_filtro_mat = 'N') then
		-- se o filtro nao define a nivel de item, busca a definicao da regra como um todo para mais abaixo fazer o tratamento

		ie_incidencia_filtro_w := ie_tipo_aplicacao_ocor_p;

	elsif (r_c_filtro_ocor.ie_filtro_proc = 'S') then
		ie_incidencia_filtro_w := 'P';

	elsif (r_c_filtro_ocor.ie_filtro_mat = 'S') then
		ie_incidencia_filtro_w := 'M';
	end if;

	-- obtem a incidencia do filtro

	if (ie_incidencia_filtro_w = 'P') then
		ds_filtro_sql_w := 	ds_filtro_sql_w || pls_util_pck.enter_w ||
					'and	x.nr_seq_conta_proc is not null';

	elsif (ie_incidencia_filtro_w = 'M') then
		ie_incidencia_filtro_w := 'M';
		ds_filtro_sql_w := 	ds_filtro_sql_w || pls_util_pck.enter_w ||
					'and	x.nr_seq_conta_mat is not null';
	end if;

	bind_sql_valor_w := sql_pck.bind_variable(	':nr_id_transacao_pc', nr_id_transacao_p, bind_sql_valor_w);
	bind_sql_valor_w := sql_pck.bind_variable(	':nr_seq_filtro_pc', r_c_filtro_ocor.nr_seq_filtro, bind_sql_valor_w);
	bind_sql_valor_w := sql_pck.bind_variable(	':cd_estabelecimento_pc', cd_estabelecimento_p, bind_sql_valor_w);
	bind_sql_valor_w := sql_pck.bind_variable(	':cd_acao_analise_pc', cd_acao_analise_p, bind_sql_valor_w);

	ds_sql_exec_w := ds_sql_w || ds_filtro_sql_w;
	-- executa o comando e devolve o cursor

	bind_sql_valor_w := sql_pck.executa_sql_cursor(	ds_sql_exec_w, bind_sql_valor_w);

	loop
		fetch cursor_w
		into 	current_setting('pls_tipos_ocor_pck.nr_seq_conta_w')::pls_util_cta_pck.t_number_table, nr_seq_conta_proc_w, nr_seq_conta_mat_w,
			ds_observacao_w, nr_seq_segurado_w, qt_excedido_w,
			nr_seq_oc_cta_comb_w;
		EXIT WHEN NOT FOUND; /* apply on cursor_w */

		-- gerar para conta

		if (ie_incidencia_filtro_w = 'C') then
			ie_tipo_item_w := 8;
			-- conta nao pode ter item e dependendo da configuracao dos filtros isso pode vir a ter valor

			-- por isso zeramos tudo aqui

			nr_seq_conta_proc_w := null;
			nr_seq_conta_mat_w := null;
		-- gerar para procedimento

		elsif (ie_incidencia_filtro_w = 'P') then
			ie_tipo_item_w := 3;
		-- gerar para material

		elsif (ie_incidencia_filtro_w = 'M') then
			ie_tipo_item_w := 4;
		-- procedimento ou material

		elsif (ie_incidencia_filtro_w = 'PM') then
			-- se cair aqui analisa o item em questao e lanca a ocorrencia para ele

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				ie_tipo_item_w := 3;

			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				ie_tipo_item_w := 4;
			end if;
		-- senao pode ser CF

		else
			-- se cair aqui analisa o item em questao e lanca a ocorrencia para ele

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				ie_tipo_item_w := 3;

			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				ie_tipo_item_w := 4;
			else
				-- por conta

				ie_tipo_item_w := 8;
			end if;
		end if;

		-- Gera ocorrencia ou Reativar

		qt_oc_benef_w := pls_tipos_ocor_pck.obter_qt_ocorrencia(	current_setting('pls_tipos_ocor_pck.nr_seq_conta_w')::pls_util_cta_pck.t_number_table, nr_seq_conta_proc_w,
							nr_seq_conta_mat_w, dados_regra_p);

		-- se nao tiver registros insere glosa

		if (qt_oc_benef_w = 0) then

			-- Insere a ocorrencia para o item selecionado.

			pls_inserir_ocorrencia(	nr_seq_segurado_w, dados_regra_p.nr_seq_ocorrencia, null,
						null, current_setting('pls_tipos_ocor_pck.nr_seq_conta_w')::pls_util_cta_pck.t_number_table, nr_seq_conta_proc_w,
						nr_seq_conta_mat_w, null, nm_usuario_p,
						ds_observacao_w, dados_ocor_p.nr_seq_motivo_glosa, ie_tipo_item_w,
						cd_estabelecimento_p, 'N' ,null,
						nr_seq_ocorrencia_benef_w, null,
						null, null, null,
						qt_excedido_w, nr_seq_oc_cta_comb_w);
		else
			-- Se o item ja tiver a ocorrencia lancada sera reativado a ocorrencia.

			CALL pls_reativar_ocor_conta( dados_regra_p.nr_seq_ocorrencia, current_setting('pls_tipos_ocor_pck.nr_seq_conta_w')::pls_util_cta_pck.t_number_table,
						 nr_seq_conta_proc_w, nr_seq_conta_mat_w, nm_usuario_p,
						 qt_excedido_w, nr_seq_oc_cta_comb_w);
		end if;

		
	end loop;
	close cursor_w;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tipos_ocor_pck.grava_ocor_filtro ( nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_ocor_p pls_tipos_ocor_pck.dados_ocor, ie_tipo_aplicacao_ocor_p pls_oc_cta_tipo_validacao.ie_aplicacao_ocorrencia%type, cd_acao_analise_p pls_acao_analise.cd_acao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
