-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_tipos_ocor_pck.obter_restricao_contrato ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_contr_p pls_tipos_ocor_pck.dados_filtro_contr, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Monta as restricoes e binds dos campos de filtro de contrato
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


dados_restricao_w	pls_tipos_ocor_pck.dados_select;
ds_alias_w		varchar(5);
ds_alias_benef_w	varchar(5);
ds_select_contr_w	varchar(500);
ds_filtro_contr_w	varchar(2000);


BEGIN
-- Inicializar o retorno

dados_restricao_w.ds_campos	:= null;
dados_restricao_w.ds_tabelas	:= null;
dados_restricao_w.ds_restricao	:= null;
ds_filtro_contr_w	:= null;
ds_alias_benef_w	:= 'benef';

-- obtem o alias da tabela

ds_alias_w := pls_tipos_ocor_pck.obter_alias_tab(	dados_filtro_p.ie_processo_excecao, dados_regra_p.ie_incidencia_selecao,
				dados_filtro_p.ie_incidencia_selecao, ie_tipo_tabela_p);

-- Montar o subselect base.

ds_select_contr_w :=	'and	exists (select	1 ' || pls_util_pck.enter_w||
			'		from	pls_segurado_conta_v ' || ds_alias_benef_w || pls_util_pck.enter_w||
			'		where	benef.nr_sequencia = ' || ds_alias_w || '.nr_seq_segurado ';

-- Contrato

if (dados_filtro_contr_p.nr_contrato IS NOT NULL AND dados_filtro_contr_p.nr_contrato::text <> '') then
	ds_filtro_contr_w :=	ds_filtro_contr_w || pls_util_pck.enter_w ||
				'and	' || ds_alias_benef_w || '.nr_contrato = :nr_contrato ';

	valor_bind_p := sql_pck.bind_variable(	':nr_contrato', dados_filtro_contr_p.nr_contrato, valor_bind_p);
end if;

-- Grupo de contrato

if (dados_filtro_contr_p.nr_seq_grupo_contrato IS NOT NULL AND dados_filtro_contr_p.nr_seq_grupo_contrato::text <> '') then

	ds_filtro_contr_w :=	ds_filtro_contr_w || pls_util_pck.enter_w ||
				'and	exists	(select	1' || pls_util_pck.enter_w ||
				'		from	pls_preco_contrato x ' || pls_util_pck.enter_w ||
				'		where	x.nr_seq_grupo = :nr_seq_grupo_contrato ' || pls_util_pck.enter_w ||
				'		and	x.nr_seq_contrato = ' || ds_alias_benef_w || '.nr_seq_contrato)';

	valor_bind_p := sql_pck.bind_variable(	':nr_seq_grupo_contrato', dados_filtro_contr_p.nr_seq_grupo_contrato, valor_bind_p);
end if;

-- Se executa a filtragem se tiver algum campo informado no filtro de contrato.

if (ds_filtro_contr_w IS NOT NULL AND ds_filtro_contr_w::text <> '') then

	dados_restricao_w.ds_restricao :=	dados_restricao_w.ds_restricao || pls_util_pck.enter_w ||
						ds_select_contr_w || pls_util_pck.enter_w ||
						ds_filtro_contr_w || '		)';
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_tipos_ocor_pck.obter_restricao_contrato ( dados_regra_p pls_tipos_ocor_pck.dados_regra, dados_filtro_p pls_tipos_ocor_pck.dados_filtro, dados_filtro_contr_p pls_tipos_ocor_pck.dados_filtro_contr, ie_tipo_tabela_p text, valor_bind_p INOUT sql_pck.t_dado_bind) FROM PUBLIC;
