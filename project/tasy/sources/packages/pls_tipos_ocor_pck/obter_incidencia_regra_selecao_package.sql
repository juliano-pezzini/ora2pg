-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_tipos_ocor_pck.obter_incidencia_regra_selecao ( nr_seq_ocorrencia_p pls_oc_cta_combinada.nr_seq_ocorrencia%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_conta_sem_item_p text) RETURNS varchar AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter a incidencia da regra como um todo, ou seja, analisa todos os filtros e validacoes
para decidir se sera incluido na tabela de selecao contas, procedimentos, materiais ou os tres juntos
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
Qualquer mudanca nesta rotina pode ocasionar efeitos colaterais drasticos, pois e ela que decide
o que sera gravado na tabela de selecao para posterior processamento.

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

ie_incidencia_w			varchar(2);
qt_conta_w			integer;
qt_proc_w			integer;
qt_mat_w			integer;
qt_proc_mat_w			integer;
qt_filtro_w			integer;
ds_sql_w			varchar(1000);
qt_filtro_incid_w		integer;
ie_tem_conta_sem_proc_mat_w	varchar(1);

C01 CURSOR(	nr_seq_ocorrencia_pc	pls_oc_cta_combinada.nr_seq_ocorrencia%type,
		nr_seq_combinada_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	-- analisa os filtros da proria regra

	SELECT	CASE WHEN b.ie_filtro_proc='S' THEN  1  ELSE 0 END  filtro_proc,
		CASE WHEN b.ie_filtro_mat='S' THEN  1  ELSE 0 END  filtro_mat,
		a.ie_utiliza_filtro,
		(SELECT c.cd_validacao
		 from	pls_oc_cta_tipo_validacao c
		 where	c.nr_sequencia = a.nr_seq_tipo_validacao) cd_validacao
	from 	pls_oc_cta_combinada a,
		pls_oc_cta_filtro b
	where 	a.nr_sequencia = nr_seq_combinada_p
	and	b.nr_seq_oc_cta_comb = a.nr_sequencia
	and 	b.ie_situacao = 'A'
	
union all

	-- analisa os filtros da regra de excecao especifica

	select 	CASE WHEN b.ie_filtro_proc='S' THEN  1  ELSE 0 END  filtro_proc,
		CASE WHEN b.ie_filtro_mat='S' THEN  1  ELSE 0 END  filtro_mat,
		a.ie_utiliza_filtro,
		(select c.cd_validacao
		 from	pls_oc_cta_tipo_validacao c
		 where	c.nr_sequencia = a.nr_seq_tipo_validacao) cd_validacao
	from 	pls_oc_cta_combinada a,
		pls_oc_cta_filtro b
	where 	a.nr_seq_combinada = nr_seq_combinada_p
	and   	a.ie_excecao = 'S'
	and   	b.nr_seq_oc_cta_comb = a.nr_sequencia
	and   	b.ie_situacao = 'A'
	
union all

	-- analisa os filtros da regra de excecao geral

	select	CASE WHEN b.ie_filtro_proc='S' THEN  1  ELSE 0 END  filtro_proc,
		CASE WHEN b.ie_filtro_mat='S' THEN  1  ELSE 0 END  filtro_mat,
		a.ie_utiliza_filtro,
		(select c.cd_validacao
		 from	pls_oc_cta_tipo_validacao c
		 where	c.nr_sequencia = a.nr_seq_tipo_validacao) cd_validacao
	from 	pls_oc_cta_combinada a,
		pls_oc_cta_filtro b
	where 	a.nr_seq_ocorrencia = nr_seq_ocorrencia_p
	and 	coalesce(a.nr_seq_combinada, 1) = 1
	and   	a.ie_excecao = 'S'
	and   	b.nr_seq_oc_cta_comb = a.nr_sequencia
	and   	b.ie_situacao = 'A';

C02 CURSOR(	nr_seq_ocorrencia_pc	pls_oc_cta_combinada.nr_seq_ocorrencia%type,
		nr_seq_combinada_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_aplicacao_ocorrencia,
		a.ie_excecao
	from	pls_oc_cta_combinada a,
		pls_oc_cta_tipo_validacao  b
	where 	a.nr_sequencia = nr_seq_combinada_pc
	and  	b.nr_sequencia = a.nr_seq_tipo_validacao
	and  	b.cd_validacao > 1
	
union all

	SELECT 	a.ie_aplicacao_ocorrencia,
		a.ie_excecao
	from 	pls_oc_cta_combinada a,
		pls_oc_cta_tipo_validacao	b
	where 	a.nr_seq_combinada = nr_seq_combinada_pc
	and   	a.ie_excecao = 'S'
	and  	b.nr_sequencia = a.nr_seq_tipo_validacao
	and  	b.cd_validacao > 1
	
union all

	select 	a.ie_aplicacao_ocorrencia,
		a.ie_excecao
	from 	pls_oc_cta_combinada a,
		pls_oc_cta_tipo_validacao	b
	where 	a.nr_seq_ocorrencia = nr_seq_ocorrencia_pc
	and   	coalesce(a.nr_seq_combinada, 1) = 1
	and   	a.ie_excecao = 'S'
	and  	b.nr_sequencia = a.nr_seq_tipo_validacao
	and  	b.cd_validacao > 1;
BEGIN

ie_incidencia_w := null;
qt_conta_w := 0;
qt_proc_w := 0;
qt_mat_w := 0;
qt_proc_mat_w := 0;
qt_filtro_w := 0;

-- select que le todos os filtros que serao aplicados durante a validacao da regra

for r_C01_w in C01(	nr_seq_ocorrencia_p, nr_seq_combinada_p) loop

	-- para previnir nos casos de existir uma validacao com filtro e o checkbox do utiliza filtro for desmarcado e o filtro ficar ativo na tabela

	if (r_C01_w.ie_utiliza_filtro = 'S' or r_C01_w.cd_validacao = 1) then
		-- soma de acordo com o filtro

		qt_proc_w := qt_proc_w + r_C01_w.filtro_proc;
		qt_mat_w := qt_mat_w + r_C01_w.filtro_mat;
		-- para sinalizar que a regra possui filtros cadastrados

		qt_filtro_w := qt_filtro_w + 1;

		-- se tiver filtro de procedimento e material ja para de processar tudo porque esse e o menor nivel de detalhe

		if (qt_proc_w > 0 and qt_mat_w > 0) then
			qt_proc_mat_w := qt_proc_mat_w + (qt_proc_w + qt_mat_w);
			exit;
		end if;
	end if;
end loop;

-- se tiver verificado acima que precisa gerar por procedimento e material nao e necessario fazer nenhuma validacao, pois isso ja e o menor nivel possivel de detalhes

if (qt_proc_mat_w = 0) then
	-- aqui procura todos as validacoes e suas aplicacoes

	for r_C02_w in C02(	nr_seq_ocorrencia_p, nr_seq_combinada_p) loop

		case(r_C02_w.ie_aplicacao_ocorrencia)
			when 'PM' then
				qt_proc_mat_w := qt_proc_mat_w + 1;
				-- aqui e o menor nivel, pode sair fora direto

				exit;
			when 'RV' then
				qt_proc_mat_w := qt_proc_mat_w + 1;
				-- aqui e o menor nivel, pode sair fora direto

				exit;
			when 'P' then
				qt_proc_w := qt_proc_w + 1;
			when 'M' then
				qt_mat_w := qt_mat_w + 1;
			when 'C' then
				qt_conta_w := qt_conta_w + 1;
			else
				null;
		end case;
	end loop;
end if;

-- grava proc e mat na selecao

if	((qt_proc_mat_w > 0) or (qt_proc_w > 0 and qt_mat_w > 0)) then
	ie_incidencia_w := 'PM';
-- grava proc na selecao

elsif (qt_proc_w > 0) then
	ie_incidencia_w := 'P';
-- grava mat na selecao

elsif (qt_mat_w > 0) then
	ie_incidencia_w := 'M';
-- grava somente as contas na selecao

else
	ie_incidencia_w := 'C';
end if;

-- se for uma regra com incidencia por procedimento ou material e possuir filtros

if (ie_incidencia_w in ('P', 'M') and qt_filtro_w > 0) then

	-- verificar se o filtro de procedimento ou material esta cadastrado para filtros bons (que nao sejam excecao)

	ds_sql_w := 	'select	count(1) ' || pls_util_pck.enter_w ||
			'from 	pls_oc_cta_filtro b ' || pls_util_pck.enter_w ||
			'where 	b.nr_seq_oc_cta_comb = :nr_seq_combinada_pc ' || pls_util_pck.enter_w ||
			'and	b.ie_excecao = ''N'' ' || pls_util_pck.enter_w ||
			'and 	b.ie_situacao = ''A''';

	if (ie_incidencia_w = 'P') then
		ds_sql_w := 	ds_sql_w || pls_util_pck.enter_w ||
				'and	b.ie_filtro_proc = ''S''';
	else
		ds_sql_w := 	ds_sql_w || pls_util_pck.enter_w ||
				'and	b.ie_filtro_mat = ''S''';
	end if;

	EXECUTE ds_sql_w into STRICT qt_filtro_incid_w using nr_seq_combinada_p;

	-- se nao tem filtro bom da incidencia da regra significa que o mesmo deve estar no filtro de excecao ou em alguma validacao em regra de excecao

	-- sendo assim, e preciso verificar se existe alguma conta sem procedimento (para incidencia P) ou sem material (para incidencia M)

	-- caso exista, a incidencia ira virar PM, pois e preciso incluir a conta na validacao.

	-- esse trabalho e feito pois contas sem procedimentos nao entram quando a incidencia for P e a mesma situacao ocorre para materiais

	-- o motivo delas nao entrarem e que selecionamos, por exemplo, direto os procedimentos quando a aplicacao for P so que se a conta nao tem procedimento ela nao entra

	-- e as vezes existe so um filtro de excecao para procedimento, o que quer dizer que se a conta atender a todos os filtros bons e deve ter excecao gerada

	if (qt_filtro_incid_w = 0) then
		-- verifica se tem contas com sem proc ou mat (dependendo da incidencia) dentro dos parametros que foram passados para serem consistidos

		ie_tem_conta_sem_proc_mat_w := pls_tipos_ocor_pck.obter_conta_sem_proc_mat(	nr_seq_lote_conta_p, nr_seq_protocolo_p,
										nr_seq_lote_processo_p, nr_seq_conta_p,
										nr_seq_conta_proc_p, nr_seq_conta_mat_p,
										nr_seq_analise_p, cd_estabelecimento_p,
										ie_incidencia_w);

		-- se tem conta sem proc ou mat manda gerar por PM para incluir todas as contas que tem a necessidade

		if (ie_tem_conta_sem_proc_mat_w = 'S') then

			-- se nao tem item nao adianta ser PM, tem que obrigatoriamente ser C

			if (ie_conta_sem_item_p = 'S') then
				ie_incidencia_w := 'C';
			else
				ie_incidencia_w := 'PM';
			end if;
		end if;
	end if;
end if;

-- Caso a incidencia tenha ficado 'P' ou 'M'

if (ie_incidencia_w in ('P', 'M') and qt_filtro_w > 0) then
	
	-- verificar se o filtro de procedimento ou material esta cadastrado para filtros bons (que nao sejam excecao)

	ds_sql_w := 	'select	count(1) ' || pls_util_pck.enter_w ||
			'from 	pls_oc_cta_filtro b ' || pls_util_pck.enter_w ||
			'where 	b.nr_seq_oc_cta_comb = :nr_seq_combinada_pc ' || pls_util_pck.enter_w ||
			'and	b.ie_excecao = ''N'' ' || pls_util_pck.enter_w ||
			'and 	b.ie_situacao = ''A''' || pls_util_pck.enter_w ||
			'and	b.ie_filtro_proc = ''N''' || pls_util_pck.enter_w ||
			'and	b.ie_filtro_mat = ''N''';
	
	EXECUTE ds_sql_w into STRICT qt_filtro_incid_w using nr_seq_combinada_p;
	
	-- Caso a regra possua um filtro totalmente aberto 

	-- e a incidencia for 'P' ou 'M', a incidencia da regra deve ser 'PM'

	if (qt_filtro_incid_w > 0) then
		ie_incidencia_w := 'PM';
	end if;
end if;

-- pode ser que nao tenha feito nenhuma classificacao e neste caso fica por conta

return coalesce(ie_incidencia_w, 'C');

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_tipos_ocor_pck.obter_incidencia_regra_selecao ( nr_seq_ocorrencia_p pls_oc_cta_combinada.nr_seq_ocorrencia%type, nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, nr_seq_lote_conta_p pls_protocolo_conta.nr_seq_lote%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_conta_sem_item_p text) FROM PUBLIC;
