-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_tipos_ocor_pck.obter_restricao_reg_selecao ( ie_considera_selecao_p boolean, ie_processo_excecao_p text, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, ie_regra_excecao_p text, ie_filtro_excecao_p text, nr_seq_filtro_p pls_oc_cta_filtro.nr_sequencia%type, ie_incidencia_selecao_p text, ie_incidencia_filtro_p text, valor_bind_p INOUT sql_pck.t_dado_bind, ie_tipo_tabela_p text default null) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Retornar as restricoes padrao para um exists que e feito para saber quais registros
 devem ser considerados durante o processamento dos filtros
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Alteracoes:
 ------------------------------------------------------------------------------------------------------------------

 usuario OS XXXXXX 01/01/2000 -
 Alteracao:	Descricao da alteracao.
Motivo:	Descricao do motivo.
 ------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


ds_restricao_w	pls_tipos_ocor_pck.dados_select;
ds_filtro_w	varchar(1000);
ds_alias_w	varchar(20);


BEGIN

ds_restricao_w.ds_campos := null;
ds_restricao_w.ds_tabelas := null;
ds_restricao_w.ds_restricao := null;
ds_filtro_w := null;

-- obtem o alias da tabela

ds_alias_w := pls_tipos_ocor_pck.obter_alias_tab(	ie_processo_excecao_p, ie_incidencia_selecao_p,
				ie_incidencia_filtro_p, ie_tipo_tabela_p);

-- transacao filtra sempre

ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
		'and sel.nr_id_transacao = :nr_id_transacao' || pls_util_pck.enter_w;
valor_bind_p := sql_pck.bind_variable(	':nr_id_transacao', nr_id_transacao_p, valor_bind_p);

-- se for regra ou filtro de excecao, seleciona somente o que estiver marcado com o ie_excecao

if (ie_regra_excecao_p = 'S' or ie_filtro_excecao_p = 'S') then

	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.ie_excecao = ''S'' ';
else
	-- aplica a filtragem pelo filtro

	if (nr_seq_filtro_p IS NOT NULL AND nr_seq_filtro_p::text <> '') then
		ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
				'and	sel.nr_seq_filtro = :nr_seq_filtro';

		valor_bind_p := sql_pck.bind_variable(	':nr_seq_filtro', nr_seq_filtro_p, valor_bind_p);
	end if;

	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.ie_valido = ''S'' ';
end if;

-- procedimento

if	((ie_incidencia_filtro_p = 'P' and ie_processo_excecao_p = 'S') or (ie_incidencia_selecao_p = 'P')) then

	 ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.nr_seq_conta_proc = ' || ds_alias_w || '.nr_sequencia ';
-- material

elsif	((ie_incidencia_filtro_p = 'M' and ie_processo_excecao_p = 'S') or (ie_incidencia_selecao_p = 'M')) then

	 ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.nr_seq_conta_mat = ' || ds_alias_w || '.nr_sequencia ';
-- procedimento ou material

elsif (ie_incidencia_selecao_p = 'PM' and ie_processo_excecao_p = 'N') then

	-- procedimento

	if (coalesce(ie_tipo_tabela_p, 'X') = 'PROC') then
		ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.nr_seq_conta_proc = ' || ds_alias_w || '.nr_sequencia ';
	-- material

	elsif (coalesce(ie_tipo_tabela_p, 'X') = 'MAT') then
		ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.nr_seq_conta_mat = ' || ds_alias_w || '.nr_sequencia ';
	end if;
-- conta

else
	ds_filtro_w := 	ds_filtro_w || pls_util_pck.enter_w ||
			'and	sel.nr_seq_conta = ' || ds_alias_w || '.nr_seq_conta ';
end if;

-- se for para considerar os registros validos na tabela de selecao, devolve o comando

if (ie_considera_selecao_p) then

	ds_restricao_w.ds_tabelas := 	ds_restricao_w.ds_tabelas || ', ' || pls_util_pck.enter_w ||
					'pls_selecao_ocor_cta sel' || pls_util_pck.enter_w;

	ds_restricao_w.ds_campos := 	ds_restricao_w.ds_campos || ', ' || pls_util_pck.enter_w ||
					'sel.nr_sequencia nr_seq_selecao' || pls_util_pck.enter_w;

	ds_restricao_w.ds_restricao := ds_filtro_w;

else
	-- se nao for para restringir pelos registros da selecao, apenas coloca um subselect para retornar a sequencia do registro que sera atualizado na tabela de selecao

	ds_restricao_w.ds_campos := 	ds_restricao_w.ds_campos || ', ' || pls_util_pck.enter_w ||
					'(select	sel.nr_sequencia' || pls_util_pck.enter_w ||
					' from 		pls_selecao_ocor_cta sel' || pls_util_pck.enter_w ||
					'where		1 = 1' || pls_util_pck.enter_w ||
					ds_filtro_w || pls_util_pck.enter_w ||
					') nr_seq_selecao ';
end if;

return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_tipos_ocor_pck.obter_restricao_reg_selecao ( ie_considera_selecao_p boolean, ie_processo_excecao_p text, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, ie_regra_excecao_p text, ie_filtro_excecao_p text, nr_seq_filtro_p pls_oc_cta_filtro.nr_sequencia%type, ie_incidencia_selecao_p text, ie_incidencia_filtro_p text, valor_bind_p INOUT sql_pck.t_dado_bind, ie_tipo_tabela_p text default null) FROM PUBLIC;
