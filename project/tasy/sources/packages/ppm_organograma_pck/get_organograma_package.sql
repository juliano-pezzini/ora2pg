-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ppm_organograma_pck.get_organograma (nm_usuario_p text, nr_nivel_p bigint) RETURNS SETOF T_ORGANOGRAMA AS $body$
DECLARE


	line_w			t_organograma_row;
	qt_lider_grupo_w	bigint;
	qt_depart_inf_w		bigint;
	qt_gerencia_w		bigint;
	nr_seq_grupo_w		bigint;
	nr_seq_gerencia_w	bigint;
	cd_responsavel_w	varchar(10);
	nm_usuario_resp_w	varchar(15);
	cd_pessoa_fisica_w	varchar(10);

	c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nm_usuario_grupo
	from	gerencia_wheb_grupo a,
		gerencia_wheb_grupo_usu b,
		usuario c
	where	a.nr_sequencia 	 	= b.nr_seq_grupo
	and	b.nm_usuario_grupo 	= c.nm_usuario
	and	a.nm_usuario_lider 	= nm_usuario_p
	and	coalesce(nr_seq_grupo_w::text, '') = ''
	and	a.ie_situacao		= 'A'
	and	c.ie_situacao 		= 'A'
	
union

	SELECT	a.nr_sequencia,
		b.nm_usuario_grupo
	from	gerencia_wheb_grupo a,
		gerencia_wheb_grupo_usu b,
		usuario c
	where	a.nr_sequencia 	 	= b.nr_seq_grupo
	and	b.nm_usuario_grupo 	= c.nm_usuario
	and	a.nr_sequencia	 	= nr_seq_grupo_w
	and	a.ie_situacao		= 'A'
	and	c.ie_situacao 		= 'A'
	group by a.nr_sequencia,
		b.nm_usuario_grupo;

	c01_w	c01%rowtype;

	c02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	gerencia_wheb_grupo a,
		gerencia_wheb b
	where	a.nr_seq_gerencia 	= b.nr_sequencia
	and	b.cd_responsavel 	= cd_pessoa_fisica_w
	and	coalesce(nr_seq_gerencia_w::text, '') = ''
	and	b.ie_situacao 		= 'A'
	and	a.ie_situacao 		= 'A'
	
union

	SELECT	a.nr_sequencia
	from	gerencia_wheb_grupo a,
		gerencia_wheb b
	where	a.nr_seq_gerencia 	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_gerencia_w
	and	b.ie_situacao 		= 'A'
	and	a.ie_situacao 		= 'A'
	group by a.nr_sequencia;

	c03 CURSOR FOR
	SELECT	a.nr_seq_gerencia,
		c.cd_responsavel
	from	depto_gerencia_philips a,
		departamento_philips b,
		gerencia_wheb c
	where	a.nr_seq_departamento 	= b.nr_sequencia
	and	c.nr_sequencia		= a.nr_seq_gerencia
	and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w
	and	b.ie_situacao 		= 'A'
	and	(b.nr_seq_superior IS NOT NULL AND b.nr_seq_superior::text <> '');

	
BEGIN
		line_w.nm_usuario	:= nm_usuario_p;
		RETURN NEXT line_w;

		nr_seq_grupo_w	:= null;

		select	cd_pessoa_fisica
		into STRICT	cd_pessoa_fisica_w
		from	usuario
		where	nm_usuario = nm_usuario_p;

		if (nr_nivel_p	= 1) then

			begin
			select	1
			into STRICT	qt_lider_grupo_w
			from	gerencia_wheb_grupo
			where	nm_usuario_lider 	= nm_usuario_p
			and	ie_situacao 		= 'A'  LIMIT 1;
			exception
			when others then
				qt_lider_grupo_w := 0;
			end;

			--Se for lider de algum grupo, pega os usuários do grupo que ele é lider.
			if (qt_lider_grupo_w > 0) then

				open C01;
				loop
				fetch C01 into
					c01_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin

					line_w.nm_usuario	:= c01_w.nm_usuario_grupo;
					RETURN NEXT line_w;

					end;
				end loop;
				close C01;

			end if;

		end if;

		--Se a PF do usuário é responsável por alguma gerência
		if (nr_nivel_p	= 2) then
			begin
				select	1
				into STRICT	qt_gerencia_w
				from	gerencia_wheb a
				where	a.cd_responsavel = cd_pessoa_fisica_w
				and	a.ie_situacao = 'A'  LIMIT 1;
			exception
			when others then
				qt_gerencia_w	:= 0;
			end;

			if (qt_gerencia_w > 0) then

				open C02;
				loop
				fetch C02 into
					nr_seq_grupo_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin

					open C01;
					loop
					fetch C01 into
						c01_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
						begin

						line_w.nm_usuario	:= c01_w.nm_usuario_grupo;
						RETURN NEXT line_w;

						end;
					end loop;
					close C01;

					end;
				end loop;
				close C02;

			end if;
		end if;

		--Se for responsável por algum departamento da Philips que possui departamento superior.
		if (nr_nivel_p	= 3) then
			begin
			select	1
			into STRICT	qt_depart_inf_w
			from	departamento_philips
			where	cd_pessoa_fisica 	= cd_pessoa_fisica_w
			and	ie_situacao 		= 'A'
			and	(nr_seq_superior IS NOT NULL AND nr_seq_superior::text <> '');
			exception
			when others then
				qt_depart_inf_w	:= 0;
			end;

			if (qt_depart_inf_w > 0) then

				open C03;
				loop
				fetch C03 into
					nr_seq_gerencia_w,
					cd_responsavel_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin

					select	nm_usuario
					into STRICT	nm_usuario_resp_w
					from	usuario
					where	cd_pessoa_fisica = cd_responsavel_w
					and	ie_situacao = 'A';

					line_w.nm_usuario	:= nm_usuario_resp_w;
					RETURN NEXT line_w;

					open C02;
					loop
					fetch C02 into
						nr_seq_grupo_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin

						open C01;
						loop
						fetch C01 into
							c01_w;
						EXIT WHEN NOT FOUND; /* apply on C01 */
							begin

							line_w.nm_usuario	:= c01_w.nm_usuario_grupo;
							RETURN NEXT line_w;

							end;
						end loop;
						close C01;

						end;
					end loop;
					close C02;

					end;
				end loop;
				close C03;

			end if;
		end if;
	end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION ppm_organograma_pck.get_organograma (nm_usuario_p text, nr_nivel_p bigint) FROM PUBLIC;
