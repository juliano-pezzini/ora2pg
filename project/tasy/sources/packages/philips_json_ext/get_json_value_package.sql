-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION philips_json_ext.get_json_value (obj philips_json, v_path text, base bigint default 1) RETURNS PHILIPS_JSON_VALUE AS $body$
DECLARE

    path philips_json_list;
    current_setting('philips_json_ext.ret')::philips_json_list philips_json_value;
    o philips_json;l philips_json_list;

BEGIN
    path := parsePath(v_path, base);
    PERFORM set_config('philips_json_ext.ret', obj.to_json_value, false);
    if (path.count = 0) then return current_setting('philips_json_ext.ret')::philips_json_list; end if;

    for i in 1 .. path.count loop
      if (path.get[i].is_string()) then

        o := philips_json(current_setting('philips_json_ext.ret')::philips_json_list);
        PERFORM set_config('philips_json_ext.ret', o.get(path.get[i].get_string()), false);
      else

        if (current_setting('philips_json_ext.ret')::philips_json_list.is_array()) then
          l := philips_json_list(current_setting('philips_json_ext.ret')::philips_json_list);
          PERFORM set_config('philips_json_ext.ret', l.get(path.get[i].get_number()), false);
        else
          o := philips_json(current_setting('philips_json_ext.ret')::philips_json_list);
          l := o.get_values();
          PERFORM set_config('philips_json_ext.ret', l.get(path.get[i].get_number()), false);
        end if;
      end if;
    end loop;

    return current_setting('philips_json_ext.ret')::philips_json_list;
  exception
    when SQLSTATE '50021' then CALL wheb_mensagem_pck.exibir_mensagem_abort('Error');
    when SQLSTATE '50022' then CALL wheb_mensagem_pck.exibir_mensagem_abort('Error');
    when SQLSTATE '50023' then CALL wheb_mensagem_pck.exibir_mensagem_abort('Error');
    when others then return null;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION philips_json_ext.get_json_value (obj philips_json, v_path text, base bigint default 1) FROM PUBLIC;
