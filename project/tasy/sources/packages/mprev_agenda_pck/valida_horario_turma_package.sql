-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	/*---------------------------------------------------------------------------------------------------------------------------------------------
	|			VALIDA_HORARIO_TURMA				|
	*/
	/* Vai validar se o horario do agendamento esta disponivel para cadas participante da equipe*/

CREATE OR REPLACE PROCEDURE mprev_agenda_pck.valida_horario_turma (dados_agenda_p dados_agendamento, nm_usuario_p text) AS $body$
DECLARE


	nr_seq_turma_w		bigint;
	nr_seq_participante_w	bigint;
	cd_agenda_w		mprev_agendamento.cd_agenda%type;
	dt_agenda_w		varchar(255);
	dados_agendamento_w	dados_agendamento;

	C01 CURSOR FOR
		SELECT	nr_seq_participante
		from	mprev_grupo_turma_partic
		where	nr_seq_turma = dados_agenda_p.nr_seq_turma
		and	pkg_date_utils.start_of(clock_timestamp(), 'DD', 0) between pkg_date_utils.start_of(coalesce(dt_entrada, clock_timestamp()), 'DD', 0) and pkg_date_utils.start_of(coalesce(dt_saida, clock_timestamp()), 'DD', 0);

	
BEGIN

	dados_agendamento_w := dados_agenda_p;

	for cr_01 in C01 loop
		begin

		nr_seq_participante_w := cr_01.nr_seq_participante;

		begin
			cd_agenda_w := null;

			if (coalesce(dados_agenda_p.nr_sequencia,0 ) = 0) then
				select	cd_agenda,
					to_char(dt_agenda, 'dd/mm/yyyy hh24:mi') || ' ' || wheb_mensagem_pck.get_texto(69052) ||' '|| to_char((dt_agenda + (nr_minuto_duracao * (1/24/60))), 'dd/mm/yyyy hh24:mi')
				into STRICT	cd_agenda_w,
					dt_agenda_w
				from	mprev_agendamento a
				where	nr_seq_participante = nr_seq_participante_w
				and	((dados_agenda_p.dt_final_agendamento- (60/86400)  between dt_agenda and  (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) )  --decrementa 1 minuto
				or	(dados_agenda_p.dt_agendamento between dt_agenda and (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) ))
				and	ie_status_agenda <> 'C'
				and	ie_status_agenda <> 'E'  LIMIT 1;
			else
				select	cd_agenda,
					to_char(dt_agenda, 'dd/mm/yyyy hh24:mi') || ' ' || wheb_mensagem_pck.get_texto(69052) ||' '|| to_char((dt_agenda + (nr_minuto_duracao * (1/24/60))), 'dd/mm/yyyy hh24:mi')
				into STRICT	cd_agenda_w,
					dt_agenda_w
				from	mprev_agendamento a
				where	nr_seq_participante = nr_seq_participante_w
				and	((dados_agenda_p.dt_final_agendamento- (60/86400)  between dt_agenda and  (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) )  --decrementa 1 minuto
				or	(dados_agenda_p.dt_agendamento between dt_agenda and (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) ))
				and     nr_sequencia <> coalesce(dados_agenda_p.nr_sequencia,0 )
				and	ie_status_agenda <> 'C'
				and	ie_status_agenda <> 'E'
				and	not exists (SELECT	 1
						    from	 mprev_agendamento b
						    where (b.cd_agenda_local = a.cd_agenda
						    or		 b.cd_agenda_profissional = a.cd_agenda )
						    and		 b.dt_agenda = a.dt_agenda)
				and	not exists (select	 1
						    from	 mprev_agendamento b
						    where (a.cd_agenda_local = b.cd_agenda
						    or		 a.cd_agenda_profissional = b.cd_agenda )
						    and		 b.dt_agenda = a.dt_agenda)  LIMIT 1;
			end if;


			if (cd_agenda_w IS NOT NULL AND cd_agenda_w::text <> '') then
				dados_agendamento_w.nr_seq_participante := nr_seq_participante_w;
				--Paciente ja possui horario agendado para #@DT_AGENDAMENTO#@ na agenda #@CD_AGENDA#@ que coincide com este horario, deseja marcar mesmo assim?
				CALL CALL CALL mprev_agenda_pck.gravar_inconsistencia(dados_agendamento_w, 269374, 'DT_AGENDAMENTO='||dt_agenda_w||';CD_AGENDA='||cd_agenda_w,
						      'C',  '7', null,nm_usuario_p);
				dados_agendamento_w.nr_seq_participante := null;
			end if;
		exception
		when others then
			cd_agenda_w	:= null;
			dt_agenda_w	:= null;
		end;

		end;
	end loop;

	begin
	if (coalesce(dados_agenda_p.nr_sequencia,0 ) = 0) then
		select	cd_agenda,
			to_char(dt_agenda, 'dd/mm/yyyy hh24:mi') || ' ' || wheb_mensagem_pck.get_texto(69052) ||' '|| to_char((dt_agenda + (nr_minuto_duracao * (1/24/60))), 'dd/mm/yyyy hh24:mi')
		into STRICT	cd_agenda_w,
			dt_agenda_w
		from	mprev_agendamento a
		where	nr_seq_turma = dados_agenda_p.nr_seq_turma
		and	((dados_agenda_p.dt_final_agendamento- (60/86400)  between dt_agenda and  (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) )  --decrementa 1 minuto
		or	(dados_agenda_p.dt_agendamento between dt_agenda and (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) ))
		and	ie_status_agenda <> 'C'
		and	ie_status_agenda <> 'E'  LIMIT 1;
	else
		select	cd_agenda,
			to_char(dt_agenda, 'dd/mm/yyyy hh24:mi') || ' ' || wheb_mensagem_pck.get_texto(69052) ||' '|| to_char((dt_agenda + (nr_minuto_duracao * (1/24/60))), 'dd/mm/yyyy hh24:mi')
		into STRICT	cd_agenda_w,
			dt_agenda_w
		from	mprev_agendamento a
		where	nr_seq_turma = dados_agenda_p.nr_seq_turma
		and	((dados_agenda_p.dt_final_agendamento- (60/86400)  between dt_agenda and  (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) )  --decrementa 1 minuto
		or	(dados_agenda_p.dt_agendamento between dt_agenda and (dt_agenda + (nr_minuto_duracao * (1/24/60)))- (60/86400) ))
		and     nr_sequencia <> coalesce(dados_agenda_p.nr_sequencia,0 )
		and	ie_status_agenda <> 'C'
		and	ie_status_agenda <> 'E'
		and	not exists (SELECT	 1
				    from	 mprev_agendamento b
				    where (b.cd_agenda_local = a.cd_agenda
				    or		 b.cd_agenda_profissional = a.cd_agenda )
				    and		 b.dt_agenda = a.dt_agenda)
		and	not exists (select	 1
				    from	 mprev_agendamento b
				    where (a.cd_agenda_local = b.cd_agenda
				    or		 a.cd_agenda_profissional = b.cd_agenda )
				    and		 b.dt_agenda = a.dt_agenda)  LIMIT 1;
	end if;
	exception
		when others then
		cd_agenda_w	:= null;
		dt_agenda_w	:= null;
	end;

	if (cd_agenda_w IS NOT NULL AND cd_agenda_w::text <> '') then
		--A turma ja possui horario agendado para #@DT_AGENDAMENTO#@ na agenda #@CD_AGENDA#@ que coincide com este horario, deseja marcar mesmo assim?
		CALL CALL CALL mprev_agenda_pck.gravar_inconsistencia(dados_agenda_p, 273330, 'DT_AGENDAMENTO='||dt_agenda_w||';CD_AGENDA='||cd_agenda_w,
				      'C',  '7', null,nm_usuario_p);
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_agenda_pck.valida_horario_turma (dados_agenda_p dados_agendamento, nm_usuario_p text) FROM PUBLIC;
