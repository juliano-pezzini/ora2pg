-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	/*---------------------------------------------------------------------------------------------------------------------------------------------
	|			VALIDA_HORARIO_AGENDA				|
	*/
CREATE OR REPLACE PROCEDURE mprev_agenda_pck.valida_horario_agenda (dados_agenda_p dados_agendamento, nm_usuario_p text) AS $body$
DECLARE


	dt_agenda_temp_w		mprev_agendamento.dt_agenda%type;
	nr_minuto_duracao_w		mprev_agendamento.nr_minuto_duracao%type;
	cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;

	
BEGIN

	select	max(dt_agenda),
		max(nr_minuto_duracao)
	into STRICT	dt_agenda_temp_w,
		nr_minuto_duracao_w
	from	mprev_agendamento
	where 	cd_agenda = dados_agenda_p.cd_agenda
	and	dt_agenda >= dados_agenda_p.dt_agendamento
	and	dt_agenda < dados_agenda_p.dt_final_agendamento
	and     nr_sequencia <> coalesce(dados_agenda_p.nr_sequencia,0)
	and	ie_status_agenda <> 'C';

	if (dt_agenda_temp_w IS NOT NULL AND dt_agenda_temp_w::text <> '') then
		/*Agendamento previsto para iniciar em #@DT_INICIO_AGENDAMENTO#@ e terminar em #@DT_FIM_AGENDAMENTO#@ porem ja existe horario marcado para iniciar em
		#@DT_OUTRO_ATENDIMENTO#@ com duracao de #@NR_MINUTO_DURACAO#@, por favor diminua a duracao ou selecione outro horario.*/
		CALL CALL CALL mprev_agenda_pck.gravar_inconsistencia(dados_agenda_p, 328848,	'DT_INICIO_AGENDAMENTO='||
								pkg_date_formaters.to_varchar(dados_agenda_p.dt_agendamento, 'shortDate', cd_estabelecimento_w, nm_usuario_p)||
								';DT_FIM_AGENDAMENTO='||pkg_date_formaters.to_varchar(dados_agenda_p.dt_final_agendamento, 'shortDate', cd_estabelecimento_w, nm_usuario_p)||
								';DT_OUTRO_ATENDIMENTO='||pkg_date_formaters.to_varchar(dt_agenda_temp_w, 'shortDate', cd_estabelecimento_w, nm_usuario_p)||
								';NR_MINUTO_DURACAO='||nr_minuto_duracao_w,
				      'E',  '7', null,nm_usuario_p);
	else
		/* Fazer uma segunda verificacao inversa */

		select	max(dt_agenda),
			max(nr_minuto_duracao)
		into STRICT	dt_agenda_temp_w,
			nr_minuto_duracao_w
		from	mprev_agendamento
		where 	cd_agenda = dados_agenda_p.cd_agenda
		and	dados_agenda_p.dt_agendamento >= dt_agenda
		and	dados_agenda_p.dt_agendamento < dt_agenda + nr_minuto_duracao/1440
		and     nr_sequencia <> coalesce(dados_agenda_p.nr_sequencia,0)
		and	ie_status_agenda <> 'C';

		if (dt_agenda_temp_w IS NOT NULL AND dt_agenda_temp_w::text <> '') then
			/*Agendamento previsto para iniciar em #@DT_INICIO_AGENDAMENTO#@ e terminar em #@DT_FIM_AGENDAMENTO#@ porem ja existe horario marcado para iniciar em
			#@DT_OUTRO_ATENDIMENTO#@ com duracao de #@NR_MINUTO_DURACAO#@, por favor diminua a duracao ou selecione outro horario.*/
			CALL CALL CALL mprev_agenda_pck.gravar_inconsistencia(dados_agenda_p, 328848,	'DT_INICIO_AGENDAMENTO='||
									pkg_date_formaters.to_varchar(dados_agenda_p.dt_agendamento, 'shortDate', cd_estabelecimento_w, nm_usuario_p)||
									';DT_FIM_AGENDAMENTO='||pkg_date_formaters.to_varchar(dados_agenda_p.dt_final_agendamento, 'shortDate', cd_estabelecimento_w, nm_usuario_p)||
									';DT_OUTRO_ATENDIMENTO='||pkg_date_formaters.to_varchar(dt_agenda_temp_w, 'shortDate', cd_estabelecimento_w, nm_usuario_p)||
									';NR_MINUTO_DURACAO='||nr_minuto_duracao_w,
						'E',  '7', null,nm_usuario_p);
		end if;				
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_agenda_pck.valida_horario_agenda (dados_agenda_p dados_agendamento, nm_usuario_p text) FROM PUBLIC;
