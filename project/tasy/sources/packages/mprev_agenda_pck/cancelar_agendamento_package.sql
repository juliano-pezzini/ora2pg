-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	/*---------------------------------------------------------------------------------------------------------------------------------------------
	|			CANCELAR_AGENDAMENTO				|
	*/
CREATE OR REPLACE PROCEDURE mprev_agenda_pck.cancelar_agendamento ( nr_sequencia_p bigint, nr_seq_agendamento_ref_p bigint, nr_seq_partic_ciclo_item_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, ie_cancelar_plano_p text, nr_seq_canc_ativ_p mprev_partic_canc_ativ.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE


	ie_status_agenda_w	mprev_agendamento.ie_status_agenda%type;
	ie_status_ciclo_w	mprev_partic_ciclo_item.ie_status%type;

	
BEGIN

	select	coalesce(MAX(ie_status_agenda), 'C')
	into STRICT	ie_status_agenda_w
	from	mprev_agendamento
	where	nr_sequencia = nr_sequencia_p;

	if (ie_status_agenda_w = 'A' or ie_status_agenda_w = 'CN') then
		update	mprev_agendamento
		set	dt_atualizacao 		= clock_timestamp(),
			nm_usuario 		= nm_usuario_p,
			ds_observacao 		= ds_observacao_p,
			nr_seq_motivo_canc 	= nr_seq_motivo_p,
			ie_status_agenda 	= 'C',
			nr_seq_part_canc_ativ	= nr_seq_canc_ativ_p
		where	nr_sequencia		= nr_sequencia_p;

		/*Cancela os agendamentos gerados vinculados ao agendamento cancelado quando cancelado ou transferido o agendamento de origem*/

		update	mprev_agendamento
		set	dt_atualizacao 		= clock_timestamp(),
			nm_usuario 		= nm_usuario_p,
			ds_observacao 		= ds_observacao_p,
			nr_seq_motivo_canc 	= nr_seq_motivo_p,
			ie_status_agenda 	= 'C',
			nr_seq_part_canc_ativ	= nr_seq_canc_ativ_p
		where	nr_seq_agendamento_ref	= nr_sequencia_p;

		/*Cancela o agendamento de origem quando cancelado ou transferido o agendamento originado*/

		if (coalesce(nr_seq_agendamento_ref_p, 0) <> 0) then
			update	mprev_agendamento
			set	dt_atualizacao 		= clock_timestamp(),
				nm_usuario 		= nm_usuario_p,
				ds_observacao 		= ds_observacao_p,
				nr_seq_motivo_canc 	= nr_seq_motivo_p,
				ie_status_agenda 	= 'C',
				nr_seq_part_canc_ativ	= nr_seq_canc_ativ_p
			where	nr_sequencia 		= nr_seq_agendamento_ref_p;
		end if;

		if (coalesce(nr_seq_partic_ciclo_item_p, 0) <> 0) then
			if (ie_cancelar_plano_p = 'S') then
				ie_status_ciclo_w	:= 'C';
			else
				ie_status_ciclo_w	:= 'P';
			end if;

			update	mprev_partic_ciclo_item
			set	dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				ie_status = ie_status_ciclo_w
			where	nr_sequencia = nr_seq_partic_ciclo_item_p;
		end if;
        end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_agenda_pck.cancelar_agendamento ( nr_sequencia_p bigint, nr_seq_agendamento_ref_p bigint, nr_seq_partic_ciclo_item_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, ie_cancelar_plano_p text, nr_seq_canc_ativ_p mprev_partic_canc_ativ.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;
