-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

  
  
	
	/*---------------------------------------------------------------------------------------------------------------------------------------------
	|			OBTER_SE_PERMITE_FERIADO				|
	*/
	/* Verifica no cadastro de turno da agenda se a mesma permite feriado e se o dia em questao se trata de feriado. */

CREATE OR REPLACE FUNCTION mprev_agenda_pck.obter_se_permite_feriado (cd_agenda_p bigint, dt_agendamento_p timestamp, dt_final_agendamento_p timestamp) RETURNS varchar AS $body$
DECLARE


	cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
	ie_permite_w		varchar(1) := 'S';
	ie_feriado_w		varchar(1) := 'N';
	ie_permite_feriado_w	varchar(1) := 'S';
	nr_dia_semana_w		smallint := pkg_date_utils.get_weekday(dt_agendamento_p);
	dt_horario_w		timestamp := to_date(to_char(dt_agendamento_p, 'hh24:mi'), 'hh24:mi');
	dt_horario_final_w	timestamp := to_date(to_char(dt_final_agendamento_p, 'hh24:mi'), 'hh24:mi');

	
BEGIN

		select	min(ie_feriado)
		into STRICT	ie_permite_feriado_w
		from	agenda_turno
		where	cd_agenda = cd_agenda_p
		and (ie_dia_semana	= nr_dia_semana_w or (ie_dia_semana = '9' and nr_dia_semana_w > 1 and nr_dia_semana_w < 7))
		and	pkg_date_utils.start_of(dt_agendamento_p, 'DD', 0)  between dt_inicio_vigencia and coalesce(dt_final_vigencia, dt_agendamento_p)
		and 	to_date(to_char(hr_inicial, 'hh24:mi'), 'hh24:mi') <= dt_horario_w
		and 	to_date(to_char(hr_final, 'hh24:mi'), 'hh24:mi') >= dt_horario_final_w
		and	((coalesce(hr_inicial_intervalo::text, '') = '' and coalesce(hr_final_intervalo::text, '') = '') -- se nao tiver intervalo ja retorna o registro
		or	((dt_horario_w <= to_date(to_char(hr_inicial_intervalo,'hh24:mi'), 'hh24:mi') -- senao vai verificar se a data de agendamento esta fora do intervalo
		and	dt_horario_final_w <= to_date(to_char(hr_inicial_intervalo,'hh24:mi'), 'hh24:mi'))
		or (dt_horario_w >= to_date(to_char(hr_final_intervalo,'hh24:mi'), 'hh24:mi')
		and	dt_horario_final_w >= to_date(to_char(hr_final_intervalo,'hh24:mi'), 'hh24:mi'))));
		

		if (ie_permite_feriado_w = 'N') or (ie_permite_feriado_w = 'F')	then
		
		    select	CASE WHEN obter_se_feriado(cd_estabelecimento_w,dt_agendamento_p)=0 THEN 'N'  ELSE 'S' END 
		    into STRICT	ie_feriado_w
		;
		
		    if (ie_feriado_w = 'S') then
			if (ie_permite_feriado_w = 'N') then
			    ie_permite_w := 'N';
			end if;
		    else
			if (ie_permite_feriado_w = 'F') then
			    ie_permite_w := 'N';
			end if;
		    end if;
		end if;

	return	ie_permite_w;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION mprev_agenda_pck.obter_se_permite_feriado (cd_agenda_p bigint, dt_agendamento_p timestamp, dt_final_agendamento_p timestamp) FROM PUBLIC;
