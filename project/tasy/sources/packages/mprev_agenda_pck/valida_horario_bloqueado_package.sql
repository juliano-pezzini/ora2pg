-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



	/*---------------------------------------------------------------------------------------------------------------------------------------------
	|			VALIDA_HORARIO_BLOQUEADO				|
	*/
CREATE OR REPLACE PROCEDURE mprev_agenda_pck.valida_horario_bloqueado ( dados_agenda_p dados_agendamento, nm_usuario_p text) AS $body$
DECLARE


	qt_registro_w	bigint;
	ds_motivo_w	varchar(255)	:= null;

	
BEGIN

	begin
	select	substr(obter_valor_dominio(1007, ie_motivo_bloqueio ),1,255) ds_motivo_bloqueio
	into STRICT	ds_motivo_w
	from	agenda_bloqueio
	where	cd_agenda = dados_agenda_p.cd_agenda
	and	pkg_date_utils.get_time(
		dt_inicial,
		coalesce(CASE WHEN coalesce(to_char(hr_inicio_bloqueio), '0')='0' THEN  0  ELSE pkg_date_utils.extract_field('HOUR', hr_inicio_bloqueio, 0) END , 0),
		coalesce(CASE WHEN coalesce(to_char(hr_inicio_bloqueio), '0')='0' THEN  0  ELSE pkg_date_utils.extract_field('MINUTE', hr_inicio_bloqueio, 0) END , 0),
		0,
		0) <= dados_agenda_p.dt_agendamento
	and	pkg_date_utils.get_time(
		dt_final,
		coalesce(CASE WHEN coalesce(to_char(hr_final_bloqueio), '0')='0' THEN  0  ELSE pkg_date_utils.extract_field('HOUR', hr_final_bloqueio, 0) END , 0),
		coalesce(CASE WHEN coalesce(to_char(hr_final_bloqueio), '0')='0' THEN  0  ELSE pkg_date_utils.extract_field('MINUTE', hr_final_bloqueio, 0) END , 0),
		0,
		0) >= dados_agenda_p.dt_final_agendamento
	and	coalesce(to_char(ie_dia_semana),Obter_Dia_Semana(dados_agenda_p.dt_agendamento)) = Obter_Dia_Semana(dados_agenda_p.dt_agendamento)  LIMIT 1;
	exception
		when others then
		ds_motivo_w	:= null;
	end;

	if (ds_motivo_w IS NOT NULL AND ds_motivo_w::text <> '') then
		--Horario bloqueado. Motivo: #@DS_MOTIVO#@
		CALL CALL CALL mprev_agenda_pck.gravar_inconsistencia(dados_agenda_p, 271931, 'DS_MOTIVO='|| ds_motivo_w,
				      'E', '2', null, nm_usuario_p);
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_agenda_pck.valida_horario_bloqueado ( dados_agenda_p dados_agendamento, nm_usuario_p text) FROM PUBLIC;
