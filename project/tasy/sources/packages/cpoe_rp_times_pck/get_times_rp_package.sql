-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION cpoe_rp_times_pck.get_times_rp (nr_seq_cpoe_rp_p bigint, dt_start_p timestamp default null, dt_end_p timestamp default null) RETURNS SETOF T_LINHA_DATA AS $body$
DECLARE

	   linha_w			t_linha_row;
	   dt_start_w timestamp;
	   dt_end_w timestamp;
	   ds_horarios_w varchar(2000);
	   date_w timestamp;
	   date_out_w timestamp;

	
  DATS RECORD;
  REC RECORD;

BEGIN
	if (nr_seq_cpoe_rp_p IS NOT NULL AND nr_seq_cpoe_rp_p::text <> '') then
		select cr.ds_horarios,
               CASE WHEN coalesce(dt_start_p::text, '') = '' THEN  cr.dt_inicio  ELSE dt_start_p END ,
               CASE WHEN coalesce(dt_end_p::text, '') = '' THEN  cr.dt_fim  ELSE dt_end_p END 
		into STRICT ds_horarios_w,
			dt_start_w,
			dt_end_w
		from cpoe_rp cr
		where cr.nr_sequencia = nr_seq_cpoe_rp_p;


		FOR DATS IN (WITH RECURSIVE cte AS (
SELECT TO_DATE(TO_CHAR(dt_start_w, 'DD/MM/YYYY')) + LEVEL - 1 AS transaction_date
		
			TO_DATE(TO_CHAR(dt_start_w, 'DD/MM/YYYY')) + LEVEL - 1 <= TO_DATE(TO_CHAR(dt_end_w, 'DD/MM/YYYY'))  UNION ALL
SELECT TO_DATE(TO_CHAR(dt_start_w, 'DD/MM/YYYY')) + LEVEL - 1 AS transaction_date
		
			TO_DATE(TO_CHAR(dt_start_w, 'DD/MM/YYYY')) + LEVEL - 1 <= TO_DATE(TO_CHAR(dt_end_w, 'DD/MM/YYYY')) JOIN cte c ON ()

) SELECT * FROM cte;
)
			LOOP
				FOR REC IN (WITH RECURSIVE cte AS (
SELECT regexp_substr(ds_horarios_w, '[^ ]+',1, level) AS HORA
								
								(regexp_substr(ds_horarios_w, '[^ ]+',1, level) IS NOT NULL AND (regexp_substr(ds_horarios_w, '[^ ]+',1, level))::text <> '')  UNION ALL
SELECT regexp_substr(ds_horarios_w, '[^ ]+',1, level) AS HORA
								
								(regexp_substr(ds_horarios_w, '[^ ]+',1, level) IS NOT NULL AND (regexp_substr(ds_horarios_w, '[^ ]+',1, level))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
)
				 LOOP
				 date_w := TO_DATE(TO_CHAR(DATS.transaction_date, 'DD/MM/YYYY') || REC.HORA, 'DD/MM/YYYY HH24:MI:SS');

				 if(date_w >= dt_start_w AND date_w <= dt_end_w) then
					date_out_w := pkg_date_utils.get_DateTime(
									pkg_date_utils.get_Date(pkg_date_utils.extract_field('YEAR',date_w,0), 
									pkg_date_utils.extract_field('MONTH',date_w,0),
									pkg_date_utils.extract_field('DAY',date_w,0)),
									pkg_date_utils.get_Time(pkg_date_utils.extract_field('HOUR', date_w, 0),
									pkg_date_utils.extract_field('MINUTE', date_w, 0), 0));
					linha_w.dt_atual := date_out_w;
					RETURN NEXT linha_w;
				 end if;

			 END LOOP;
		  END LOOP;

	return;	

	else
		return;
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION cpoe_rp_times_pck.get_times_rp (nr_seq_cpoe_rp_p bigint, dt_start_p timestamp default null, dt_end_p timestamp default null) FROM PUBLIC;
