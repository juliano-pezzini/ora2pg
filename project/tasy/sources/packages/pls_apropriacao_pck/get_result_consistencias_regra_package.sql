-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_apropriacao_pck.get_result_consistencias_regra (pls_regra_copartic_p pls_apropriacao_pck.dados_regra_copartic) RETURNS varchar AS $body$
DECLARE

	ie_restricao_w	varchar(1)	:= 'S';
BEGIN
	PERFORM set_config('pls_apropriacao_pck.qt_itens_nao_cobrar_w', 0, false);
	PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'N', false);
	PERFORM set_config('pls_apropriacao_pck.ie_verificou_regra_inclusao_w', 'N', false);
	PERFORM set_config('pls_apropriacao_pck.qt_itens_regra_inclusao_w', 0, false);
	
	if (pls_regra_copartic_p.ie_beneficiario = 'S') then
		declare
			qt_regras_beneficiario_w	bigint;
		begin
			select	count(1)
			into STRICT	qt_regras_beneficiario_w
			from	pls_regra_copartic_benef
			where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
			
			if (qt_regras_beneficiario_w > 0) then
				declare
					ie_dependencia_w		varchar2(255)	:= pls_apropriacao_pck.get_ie_dependencia();
					qt_idade_w			number(10)	:= pls_apropriacao_pck.get_qt_idade();
					dt_contrato_w			date		:= pls_apropriacao_pck.get_dt_contrato();
					nr_nivel_w			pls_faixa_salarial.nr_nivel%type;
				begin
					select	max(nr_nivel)
					into STRICT	nr_nivel_w
					from	pls_faixa_salarial
					where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_faixa_salarial;
					
					select	count(1)
					into STRICT	qt_regras_beneficiario_w
					from	pls_regra_copartic_benef
					where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia
					and (nr_seq_plano = current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_plano or coalesce(nr_seq_plano::text, '') = '')
					and	((ie_titularidade = 'A') or
						 ((ie_titularidade = 'T') and (current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%coalesce(rowtype.nr_seq_titular::text, '') = '')) or
						 ((ie_titularidade = 'D') and (current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%(rowtype.nr_seq_titular IS NOT NULL AND rowtype.nr_seq_titular::text <> '')) and (coalesce(ie_tipo_parentesco::text, '') = '' or ie_dependencia_w = ie_tipo_parentesco)))
					and	((ie_situacao_benef = 'T') or
						 ((ie_situacao_benef = 'A') and (current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%(rowtype.dt_liberacao IS NOT NULL AND rowtype.dt_liberacao::text <> '')) and (current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.dt_rescisao > current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento or current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%coalesce(rowtype.dt_rescisao::text, '') = '')) or
						 ((ie_situacao_benef = 'I') and (current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.dt_rescisao <= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento)))
					and	qt_idade_w between coalesce(qt_idade_min, qt_idade_w) and coalesce(qt_idade_max, qt_idade_w)
					and	dt_contrato_w between coalesce(dt_contrato_de, dt_contrato_w) and fim_dia(coalesce(dt_contrato_ate, dt_contrato_w))
					and	((nr_nivel_w between coalesce(nr_faixa_salarial_inicial, nr_nivel_w) and coalesce(nr_faixa_salarial_final, nr_nivel_w)) or (coalesce(nr_nivel_w::text, '') = '' and coalesce(nr_faixa_salarial_inicial::text, '') = '' and coalesce(nr_faixa_salarial_final::text, '') = ''));
					
					if (qt_regras_beneficiario_w = 0) then
						ie_restricao_w := 'N';
					end if;
				end;
			end if;
		end;
	end if;
	
	if (pls_regra_copartic_p.ie_conta_medica = 'S' and ie_restricao_w = 'S') then
		declare
			qt_regras_conta_w	bigint;
			ie_cobranca_prevista_w	pls_rec_glosa_proc.ie_cobranca_prevista%type;
		begin
			select	count(1)
			into STRICT	qt_regras_conta_w
			from	pls_regra_copartic_conta
			where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
			
			if (qt_regras_conta_w > 0) then
				declare
					regras_conta CURSOR FOR
						SELECT	vl_item_minimo,
							vl_item_maximo
						from	pls_regra_copartic_conta
						where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia
						and	((nr_seq_tipo_conta = current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_tipo_conta) or (coalesce(nr_seq_tipo_conta::text, '') = ''))
						and	((coalesce(ie_cobranca_prevista,'N') = 'S'
						and	current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_cobranca_prevista = 'S')
						or	coalesce(ie_cobranca_prevista,'N') = 'N')
						and	coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N'
						
union all

						SELECT	vl_item_minimo,
							vl_item_maximo
						from	pls_regra_copartic_conta
						where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia
						and	((nr_seq_tipo_conta = current_setting('pls_apropriacao_pck.pls_rec_glosa_conta_w')::pls_rec_glosa_conta%rowtype.nr_seq_tipo_conta) or (coalesce(nr_seq_tipo_conta::text, '') = ''))
						and	((ie_cobranca_prevista = ie_cobranca_prevista_w) or (coalesce(ie_cobranca_prevista::text, '') = ''))
						and	coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'S';
					
					vl_unitario_w	number(17,4);
				begin
					ie_restricao_w := 'N';
					
					if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'S') then
						if (current_setting('pls_apropriacao_pck.ie_gerando_rec_proc_mat_w')::varchar(1) = 'P') then
							ie_cobranca_prevista_w := coalesce(current_setting('pls_apropriacao_pck.pls_rec_glosa_proc_w')::pls_rec_glosa_proc%rowtype.ie_cobranca_prevista,'N');
						elsif (current_setting('pls_apropriacao_pck.ie_gerando_rec_proc_mat_w')::varchar(1) = 'M') then
							ie_cobranca_prevista_w := coalesce(current_setting('pls_apropriacao_pck.pls_rec_glosa_mat_w')::pls_rec_glosa_mat%rowtype.ie_cobranca_prevista,'N');
						end if;
					end if;
					
					for regras_conta_w in regras_conta loop
						if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'S') then
							if (current_setting('pls_apropriacao_pck.ie_gerando_rec_proc_mat_w')::varchar(1) = 'P') then
								vl_unitario_w := current_setting('pls_apropriacao_pck.pls_rec_glosa_proc_w')::pls_rec_glosa_proc%rowtype.vl_acatado;
							elsif (current_setting('pls_apropriacao_pck.ie_gerando_rec_proc_mat_w')::varchar(1) = 'M') then
								vl_unitario_w := current_setting('pls_apropriacao_pck.pls_rec_glosa_mat_w')::pls_rec_glosa_mat%rowtype.vl_acatado;							
							end if;
						else
							if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
								vl_unitario_w := current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_unitario;
							elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
								vl_unitario_w := current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_unitario;
							end if;
						end if;
						
						if 	((coalesce(regras_conta_w.vl_item_minimo::text, '') = '') or ((regras_conta_w.vl_item_minimo IS NOT NULL AND regras_conta_w.vl_item_minimo::text <> '') and vl_unitario_w >= regras_conta_w.vl_item_minimo)) and
							((coalesce(regras_conta_w.vl_item_maximo::text, '') = '') or ((regras_conta_w.vl_item_maximo IS NOT NULL AND regras_conta_w.vl_item_maximo::text <> '') and vl_unitario_w <= regras_conta_w.vl_item_maximo)) then
							ie_restricao_w := 'S';
							exit;
						end if;
					end loop;
				end;
			end if;
		end;
	end if;
	
	if (pls_regra_copartic_p.ie_utilizacao = 'S' and ie_restricao_w = 'S') then
		declare
			qt_regras_utilizacao_w		bigint;
		begin
			select	count(1)
			into STRICT	qt_regras_utilizacao_w
			from	pls_regra_copartic_util
			where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
			
			if (qt_regras_utilizacao_w > 0) then
				declare
					regras_incidencia CURSOR FOR
						SELECT	*
						from	pls_regra_copartic_util
						where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
					
					begin
					ie_restricao_w := 'N';
					
					for regras_incidencia_w in regras_incidencia loop
						if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') and
						   ((regras_incidencia_w.ie_eventos_incidencia = 'S') or (pls_se_grupo_preco_servico(regras_incidencia_w.nr_seq_grupo_serv, current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.cd_procedimento, current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_origem_proced) = 'S')) then
							PERFORM set_config('pls_apropriacao_pck.qt_itens_regra_inclusao_w', coalesce(current_setting('pls_apropriacao_pck.qt_itens_regra_inclusao_w')::double, 0) + pls_apropriacao_pck.get_qt_proc_incidencia_cobrar(regras_incidencia_w, pls_regra_copartic_p), false);
						elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M' and regras_incidencia_w.ie_eventos_incidencia = 'S') then
							PERFORM set_config('pls_apropriacao_pck.qt_itens_regra_inclusao_w', coalesce(current_setting('pls_apropriacao_pck.qt_itens_regra_inclusao_w')::double, 0) + pls_apropriacao_pck.get_qt_mat_incidencia_cobrar(regras_incidencia_w, pls_regra_copartic_p), false);
						end if;
					end loop;
					
					PERFORM set_config('pls_apropriacao_pck.qt_itens_regra_inclusao_w', coalesce(current_setting('pls_apropriacao_pck.qt_itens_regra_inclusao_w')::double, get_qt_itens), false);
					
					PERFORM set_config('pls_apropriacao_pck.ie_verificou_regra_inclusao_w', 'S', false);
					
					if (current_setting('pls_apropriacao_pck.qt_itens_regra_inclusao_w')::double > 0 ) then
						ie_restricao_w := 'S';
					end if;
				end;
			end if;
		end;
	end if;
	
	if (pls_regra_copartic_p.ie_prestador = 'S' and ie_restricao_w = 'S') then
		declare
			qt_regras_prestador_w		bigint;
		begin
			select	count(1)
			into STRICT	qt_regras_prestador_w
			from	pls_regra_copartic_prest
			where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
			
			if (qt_regras_prestador_w > 0) then
				declare
					nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
				begin
					select	max(nr_seq_tipo_prestador)
					into STRICT	nr_seq_tipo_prestador_w
					from	pls_prestador
					where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador;
					
					select	count(1)
					into STRICT	qt_regras_prestador_w
					from	pls_regra_copartic_prest
					where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia
					and	((ie_prestador_cooperado = 'S' and exists (	SELECT	1
												from	pls_congenere	b,
													pls_prestador	a
												where	a.cd_cgc	= b.cd_cgc
												and	a.nr_sequencia	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec))
					or (ie_prestador_cooperado = 'N'))
					and (nr_seq_prestador_atend = current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador or coalesce(nr_seq_prestador_atend::text, '') = '')
					and (nr_seq_tipo_prestador_atend = nr_seq_tipo_prestador_w or coalesce(nr_seq_tipo_prestador_atend::text, '') = '');
					
					if (qt_regras_prestador_w = 0) then
						ie_restricao_w := 'N';
					end if;
				end;
			end if;
		end;
	end if;
	
	if (pls_regra_copartic_p.ie_guia = 'S' and ie_restricao_w = 'S') then
		declare
			qt_regras_guia_w		bigint;
			nr_seq_conta_rec_w		pls_rec_glosa_conta.nr_sequencia%type;	
			cd_guia_rec_w			pls_rec_glosa_conta.cd_guia_ref%type;
			
			regras_guia CURSOR FOR
				SELECT	nr_seq_controle_interno,
					ie_tipo_atend_tiss
				from	pls_regra_copartic_guia
				where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
		begin
			select	count(1)
			into STRICT	qt_regras_guia_w
			from	pls_regra_copartic_guia
			where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
			
			if (qt_regras_guia_w > 0) then
				ie_restricao_w := 'N';
				
				for regras_guia_w in regras_guia loop				
					if (regras_guia_w.nr_seq_controle_interno IS NOT NULL AND regras_guia_w.nr_seq_controle_interno::text <> '') then
					
						select	count(1)
						into STRICT	qt_regras_guia_w
						from	pls_guia_plano			a,
							pls_controle_interno_guia	b
						where	a.nr_sequencia			= b.nr_seq_guia
						and	a.nr_sequencia			= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_guia
						and	b.nr_seq_controle_interno	= regras_guia_w.nr_seq_controle_interno
						and	((a.ie_tipo_atend_tiss		= regras_guia_w.ie_tipo_atend_tiss) or (coalesce(regras_guia_w.ie_tipo_atend_tiss::text, '') = ''));
						
						if (current_setting('pls_apropriacao_pck.pls_rec_glosa_conta_w')::pls_rec_glosa_conta%(rowtype.cd_guia_ref IS NOT NULL AND rowtype.cd_guia_ref::text <> '')) and (qt_regras_guia_w = 0) then
							
							select	count(1)
							into STRICT	qt_regras_guia_w
							from	pls_guia_plano			a,
								pls_controle_interno_guia	b
							where	a.nr_sequencia			= b.nr_seq_guia
							and	a.cd_guia			= current_setting('pls_apropriacao_pck.pls_rec_glosa_conta_w')::pls_rec_glosa_conta%rowtype.cd_guia_ref
							and	a.nr_seq_segurado		= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado
							and	b.nr_seq_controle_interno	= regras_guia_w.nr_seq_controle_interno
							and	((a.ie_tipo_atend_tiss		= regras_guia_w.ie_tipo_atend_tiss) or (coalesce(regras_guia_w.ie_tipo_atend_tiss::text, '') = ''));							
						end if;
					else
						select	count(1)
						into STRICT	qt_regras_guia_w
						from	pls_guia_plano			a
						where	a.nr_sequencia			= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_guia
						and	((a.ie_tipo_atend_tiss		= regras_guia_w.ie_tipo_atend_tiss) or (coalesce(regras_guia_w.ie_tipo_atend_tiss::text, '') = ''));
						
						if (current_setting('pls_apropriacao_pck.pls_rec_glosa_conta_w')::pls_rec_glosa_conta%(rowtype.cd_guia_ref IS NOT NULL AND rowtype.cd_guia_ref::text <> '')) and (qt_regras_guia_w = 0) then
							select	count(1)
							into STRICT	qt_regras_guia_w
							from	pls_guia_plano			a
							where	a.cd_guia			= current_setting('pls_apropriacao_pck.pls_rec_glosa_conta_w')::pls_rec_glosa_conta%rowtype.cd_guia_ref
							and	a.nr_seq_segurado		= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado
							and	((a.ie_tipo_atend_tiss		= regras_guia_w.ie_tipo_atend_tiss) or (coalesce(regras_guia_w.ie_tipo_atend_tiss::text, '') = ''));
						end if;
					end if;
					
					if (qt_regras_guia_w > 0) then
						ie_restricao_w := 'S';
						exit;
					end if;
				end loop;
			end if;
		end;
	end if;
	
	if (pls_regra_copartic_p.ie_internacao = 'S' and ie_restricao_w = 'S') then
		declare
			qt_regras_internacao_w		number(10);
			dt_inicio_w			date;
			dt_final_w			date;
			qt_diarias_outras_contas_w	pls_conta_proc.qt_procedimento%type;
			qt_diarias_proc_w		pls_conta_proc.qt_procedimento%type;
			qt_diarias_total_w		pls_conta_proc.qt_procedimento%type;
			qt_diarias_anteriores_w		pls_conta_proc.qt_procedimento%type;
			qt_itens_cobrar_w		pls_conta_proc.qt_procedimento%type;
			ie_possui_qt_diaria_final_w	varchar2(1);
			qt_diaria_inicial_w		pls_conta_proc.qt_procedimento%type;
			qt_diaria_final_w		pls_conta_proc.qt_procedimento%type;
			
			regras_internacao CURSOR FOR
				SELECT	nr_seq_clinica,
					qt_diaria_inicial,
					qt_diaria_final
				from	pls_regra_copartic_interna
				where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia
				order by coalesce(qt_diaria_inicial,0);
			
			
			diarias_proc CURSOR(	nr_seq_clinica_pc	pls_regra_copartic_interna.nr_seq_clinica%type) FOR
				SELECT	a.nr_sequencia nr_seq_diaria,
					a.qt_procedimento qt_diarias,
					a.dt_procedimento dt_proc_diaria
				from	pls_conta_proc	a,
					pls_conta	b
				where	a.nr_seq_conta		= b.nr_sequencia
				and	b.nr_sequencia		= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia
				and	a.ie_tipo_despesa	= '3'
				and	b.ie_tipo_guia		= '5' 
				and	b.nr_seq_clinica 	= coalesce(nr_seq_clinica_pc, b.nr_seq_clinica)
				and	a.dt_procedimento between dt_inicio_w and dt_final_w
				order by a.dt_procedimento;
		begin
		
		PERFORM set_config('pls_apropriacao_pck.qt_itens_nao_cobrar_w', 0, false);
		
		select	count(1)
		into STRICT	qt_regras_internacao_w
		from	pls_regra_copartic_interna
		where	nr_seq_regra = pls_regra_copartic_p.nr_sequencia;
		
		if (qt_regras_internacao_w > 0) then
			ie_restricao_w 	:= 'N';
			dt_inicio_w	:= add_months(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento, -12);
			dt_final_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento;
			qt_diarias_proc_w 	:= 0;
			qt_diarias_total_w	:= 0;
			qt_diarias_anteriores_w	:= 0;
			
			for regras_internacao_w in regras_internacao loop
				if (regras_internacao_w.qt_diaria_inicial IS NOT NULL AND regras_internacao_w.qt_diaria_inicial::text <> '') or (regras_internacao_w.qt_diaria_final IS NOT NULL AND regras_internacao_w.qt_diaria_final::text <> '') then
					
					ie_possui_qt_diaria_final_w := 'S';
					
					if (coalesce(regras_internacao_w.qt_diaria_inicial, 0) > 0) then
						qt_diaria_inicial_w := regras_internacao_w.qt_diaria_inicial - 1;
					else
						qt_diaria_inicial_w := coalesce(regras_internacao_w.qt_diaria_inicial, 0);
					end if;
					
					if (coalesce(regras_internacao_w.qt_diaria_final, 0) > 0) then
						qt_diaria_final_w := regras_internacao_w.qt_diaria_final - 1;
					else
						qt_diaria_final_w := coalesce(regras_internacao_w.qt_diaria_inicial, 0);
					end if;
					
					if (coalesce(regras_internacao_w.qt_diaria_final, 0) = 0) then
						ie_possui_qt_diaria_final_w := 'N';
					end if;
					
					
					select	coalesce(sum(a.qt_procedimento),0)
					into STRICT	qt_diarias_outras_contas_w
					from	pls_conta_proc	a,
						pls_conta	b
					where	a.nr_seq_conta		= b.nr_sequencia
					and	b.nr_seq_segurado	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado
					and	a.nr_sequencia		<> current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
					and	b.ie_status		= 'F'
					and	a.ie_tipo_despesa	= '3' 
					and	b.ie_tipo_guia		= '5' 
					and	b.nr_seq_clinica 	= coalesce(regras_internacao_w.nr_seq_clinica, b.nr_seq_clinica)
					and	a.dt_procedimento between dt_inicio_w and dt_final_w;
					
					qt_diarias_anteriores_w := qt_diarias_outras_contas_w;
					
					for diarias_proc_w in diarias_proc(regras_internacao_w.nr_seq_clinica) loop
						qt_diarias_proc_w 	:= qt_diarias_proc_w + diarias_proc_w.qt_diarias;
						qt_diarias_total_w 	:= qt_diarias_anteriores_w + diarias_proc_w.qt_diarias;
						
						if (diarias_proc_w.qt_diarias > 0) then
							
							if (qt_diarias_anteriores_w < coalesce(regras_internacao_w.qt_diaria_inicial, qt_diarias_anteriores_w)) then
								
								qt_diarias_anteriores_w := qt_diarias_anteriores_w + diarias_proc_w.qt_diarias;
								
								if (qt_diarias_total_w >= coalesce(regras_internacao_w.qt_diaria_inicial, qt_diarias_total_w)) and (qt_diarias_total_w <= coalesce(regras_internacao_w.qt_diaria_final, qt_diarias_total_w)) then
									
									if (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_tipo_despesa = '3') then
										qt_itens_cobrar_w := qt_diarias_total_w - (regras_internacao_w.qt_diaria_inicial - 1);
										PERFORM set_config('pls_apropriacao_pck.qt_itens_nao_cobrar_w', diarias_proc_w.qt_diarias - qt_itens_cobrar_w, false);
										
										if (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia = diarias_proc_w.nr_seq_diaria) then
											PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
											ie_restricao_w 			:= 'S';
											exit;
										end if;
									else
										if 	(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento >= (diarias_proc_w.dt_proc_diaria + qt_diaria_inicial_w)) and
											(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento <= (diarias_proc_w.dt_proc_diaria + qt_diaria_final_w) or
											 ie_possui_qt_diaria_final_w = 'N') then
											
											PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
											ie_restricao_w 			:= 'S';
											exit;
										end if;
									end if;
								elsif (qt_diarias_total_w >= coalesce(regras_internacao_w.qt_diaria_inicial, qt_diarias_total_w)) then
									if (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_tipo_despesa = '3') then
										qt_itens_cobrar_w := qt_diarias_total_w - (regras_internacao_w.qt_diaria_inicial - 1);
										PERFORM set_config('pls_apropriacao_pck.qt_itens_nao_cobrar_w', (diarias_proc_w.qt_diarias - qt_itens_cobrar_w) +
													 (qt_diarias_total_w - regras_internacao_w.qt_diaria_final), false);
										
										if (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia = diarias_proc_w.nr_seq_diaria) then
											PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
											ie_restricao_w 			:= 'S';
											exit;
										end if;
									else
										if 	(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento >= (diarias_proc_w.dt_proc_diaria + qt_diaria_inicial_w)) and
											(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento <= (diarias_proc_w.dt_proc_diaria + qt_diaria_final_w) or
											 ie_possui_qt_diaria_final_w = 'N') then
											
											PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
											ie_restricao_w 			:= 'S';
											exit;
										end if;
									end if;
								end if;
							
							elsif (qt_diarias_anteriores_w <= coalesce(regras_internacao_w.qt_diaria_final, qt_diarias_anteriores_w)) then
								qt_diarias_anteriores_w := qt_diarias_anteriores_w + diarias_proc_w.qt_diarias;
								
								if (qt_diarias_total_w > coalesce(regras_internacao_w.qt_diaria_final, qt_diarias_total_w)) then
									if (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_tipo_despesa = '3') then
										PERFORM set_config('pls_apropriacao_pck.qt_itens_nao_cobrar_w', qt_diarias_total_w - regras_internacao_w.qt_diaria_final, false);
										qt_itens_cobrar_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.qt_procedimento - current_setting('pls_apropriacao_pck.qt_itens_nao_cobrar_w')::pls_conta_proc.qt_procedimento%type;
										
										if (qt_itens_cobrar_w > 0) and (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia = diarias_proc_w.nr_seq_diaria) then
											PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
											ie_restricao_w 			:= 'S';
											exit;
										end if;
									else
										if 	(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento >= (diarias_proc_w.dt_proc_diaria + qt_diaria_inicial_w)) and
											(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.dt_procedimento <= (diarias_proc_w.dt_proc_diaria + qt_diaria_final_w) or
											 ie_possui_qt_diaria_final_w = 'N') then
											
											PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
											ie_restricao_w 			:= 'S';
											exit;
										end if;
									end if;
								else
									PERFORM set_config('pls_apropriacao_pck.ie_restricao_qt_diarias_w', 'S', false);
									ie_restricao_w 			:= 'S';
									exit;
								end if;
							end if;
						end if;
					end loop;
				elsif (regras_internacao_w.nr_seq_clinica IS NOT NULL AND regras_internacao_w.nr_seq_clinica::text <> '') then
					select	count(1)
					into STRICT	qt_itens_cobrar_w
					from	pls_conta	a
					where	a.nr_sequencia 		= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia
					and	a.ie_tipo_guia		= '5'
					and	a.nr_seq_clinica 	= regras_internacao_w.nr_seq_clinica;
					
					if (qt_itens_cobrar_w > 0) then
						ie_restricao_w := 'S';
						exit;
					end if;
				else
					ie_restricao_w := 'S';
					exit;
				end if;
			end loop;
		end if;
		end;
	end if;
	
	return ie_restricao_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_apropriacao_pck.get_result_consistencias_regra (pls_regra_copartic_p pls_apropriacao_pck.dados_regra_copartic) FROM PUBLIC;
