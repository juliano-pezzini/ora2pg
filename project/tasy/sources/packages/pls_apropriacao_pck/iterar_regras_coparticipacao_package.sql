-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_apropriacao_pck.iterar_regras_coparticipacao ( ie_tipo_p text default 'C') AS $body$
DECLARE


	regras_coparticipacao CURSOR(	nr_seq_contrato_p	pls_segurado.nr_seq_contrato%type,
					nr_seq_intercambio_p	pls_segurado.nr_seq_intercambio%type,
					nr_seq_plano_p		pls_plano.nr_sequencia%type,
					ie_tipo_atendimento_p	text,
					dt_autorizacao_p	timestamp,
					nr_seq_mot_reemb_p	pls_protocolo_conta.nr_seq_mot_reembolso%type) FOR
				SELECT	nr_sequencia,
					nr_seq_tipo_coparticipacao,
					ie_beneficiario,
					ie_prestador,
					ie_conta_medica,
					ie_utilizacao,
					nr_seq_plano,
					nr_seq_contrato,
					nr_seq_intercambio,
					vl_maximo_copartic,
					ie_guia,
					coalesce(ie_forma_cobr_internacao,'I') ie_forma_cobr_internacao,
					ie_internacao,
					coalesce(nr_ordem_prioridade,999) nr_prioridade,
					ie_tp_transacao
				from	pls_regra_copartic
				where	((nr_seq_contrato	= nr_seq_contrato_p	and coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio	= nr_seq_intercambio_p	and coalesce(nr_seq_contrato::text, '') = ''))
				and	ie_tipo_atendimento	= ie_tipo_atendimento_p
				and (nr_seq_mot_reembolso 	= nr_seq_mot_reemb_p or coalesce(nr_seq_mot_reembolso::text, '') = '')
				and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and coalesce(dt_fim_vigencia, dt_autorizacao_p)
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				
union

				SELECT	nr_sequencia,
					nr_seq_tipo_coparticipacao,
					ie_beneficiario,
					ie_prestador,
					ie_conta_medica,
					ie_utilizacao,
					nr_seq_plano,
					nr_seq_contrato,
					nr_seq_intercambio,
					vl_maximo_copartic,
					ie_guia,
					coalesce(ie_forma_cobr_internacao,'I') ie_forma_cobr_internacao,
					ie_internacao,
					coalesce(nr_ordem_prioridade,999) nr_prioridade,
					ie_tp_transacao
				from	pls_regra_copartic
				where	nr_seq_plano		= nr_seq_plano_p
				and	ie_tipo_atendimento	= ie_tipo_atendimento_p
				and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and fim_dia(coalesce(dt_fim_vigencia, dt_autorizacao_p))
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and (nr_seq_mot_reembolso 	= nr_seq_mot_reemb_p or coalesce(nr_seq_mot_reembolso::text, '') = '')
				and	not exists(	select	1
							from	pls_regra_copartic
							where	((nr_seq_contrato	= nr_seq_contrato_p	and coalesce(nr_seq_intercambio::text, '') = '') or (nr_seq_intercambio	= nr_seq_intercambio_p	and coalesce(nr_seq_contrato::text, '') = ''))
							and	ie_tipo_atendimento	= ie_tipo_atendimento_p
							and	dt_autorizacao_p between coalesce(dt_inicio_vigencia, dt_autorizacao_p) and coalesce(dt_fim_vigencia, dt_autorizacao_p)
							and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
				order 	by nr_prioridade;
	
	
	apropriacoes_regra CURSOR(	nr_seq_regra_p	pls_regra_copartic.nr_sequencia%type) FOR
				SELECT	a.nr_sequencia,
					a.tx_apropriacao,
					a.tx_apropriacao,
					a.ie_tipo_apropriacao,
					a.nr_seq_centro_apropriacao,
					b.ie_coparticipacao,
					coalesce(a.vl_apropriacao,0) vl_apropriacao,
					coalesce(a.vl_apropriacao,0) vl_apropriacao_benef
				from	pls_regra_copartic_aprop	a,
					pls_centro_apropriacao		b
				where	a.nr_seq_centro_apropriacao	= b.nr_sequencia
				and	a.nr_seq_regra			= nr_seq_regra_p
				order 	by ie_tipo_apropriacao,
						vl_apropriacao desc;
	
	aprop_proc_copartic_nao CURSOR(	nr_seq_conta_proc_p	pls_conta_proc.nr_sequencia%type) FOR
				SELECT	b.nr_sequencia,
						a.tx_apropriacao
				from	pls_regra_copartic_aprop	a,
						pls_conta_proc_aprop		b
				where	a.nr_seq_regra 			= b.nr_seq_regra_copartic
				and	a.nr_seq_centro_apropriacao 	= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_proc 		= nr_seq_conta_proc_p
				and	b.ie_coparticipacao		= 'N';
	
	vl_total_apropriado_w		double precision := 0;
	qt_regras_ja_inculadas_w	integer;
	qt_copartic_nao_w			integer;
	qt_apropriada_w			pls_conta_proc_aprop.qt_apropriada%type;
	tx_aprop_copartic_nao_w		pls_regra_copartic_aprop.tx_apropriacao%type;
	dados_regra_copartic_w		pls_apropriacao_pck.dados_regra_copartic;
	nr_seq_aprop_a_descontar_w 	pls_conta_proc_aprop.nr_sequencia%type;
	vl_total_beneficiario_w		pls_conta_proc_aprop.vl_beneficiario%type;
	qt_aprop_nao_copartic_w		integer;
	ie_gerou_apropriacao_w		varchar(1) := 'N';
	vl_liberado_w			pls_conta_proc.vl_liberado%type;
	vl_beneficiario_w		pls_conta_proc.vl_beneficiario%type;
	vl_ja_apropriado_w		pls_conta_proc_aprop.vl_apropriado%type;
	vl_benef_ja_apropriado_w	pls_conta_proc_aprop.vl_apropriado%type;
	vl_prov_benef_w			pls_conta_proc_aprop.vl_apropriado%type;
	ie_cobranca_prevista_w		varchar(1);
	qt_item_original_w		pls_conta_mat.qt_material_imp%type;
	qt_item_lib_w			pls_conta_mat.qt_material_imp%type;
	nr_seq_tipo_prestador_w	pls_prestador.nr_seq_tipo_prestador%type;
	dt_autorizacao_w		timestamp;
	nr_seq_regra_exclusao_w	bigint;
	nr_seq_grau_partic_w	pls_proc_participante.nr_seq_grau_partic%type;
	nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;
	ie_regime_atendimento_w 	pls_conta.ie_regime_atendimento%type;
	ie_saude_ocupacional_w 		pls_conta.ie_saude_ocupacional%type;
	qt_registros_duplicados_w	integer := 0;
	ds_log_call_w				varchar(4000);
	ds_observacao_w				varchar(255);
	dt_coparticipacao_w			timestamp;
	ie_tipo_valor_w 			pls_regra_preco_copartic.ie_tipo_valor%type;
	nr_seq_regra_copartic_w 	pls_regra_preco_copartic.nr_sequencia%type;
	ie_multi_internacao_w		pls_regra_preco_copartic.ie_multi_internacao%type;
	ie_glosa_w					varchar(1);
	ie_regra_transac_valida_w	varchar(1) := 'N';
	
BEGIN

for regras_coparticipacao_w in regras_coparticipacao(	current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_contrato,
							current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_intercambio,
							coalesce(current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_plano, current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_plano),
							get_ie_conta_internacao,
							get_dt_autorizacao,
							current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_mot_reembolso) loop
		
		dados_regra_copartic_w.nr_sequencia			:= regras_coparticipacao_w.nr_sequencia;
		dados_regra_copartic_w.nr_seq_tipo_coparticipacao	:= regras_coparticipacao_w.nr_seq_tipo_coparticipacao;
		dados_regra_copartic_w.ie_beneficiario  		:= regras_coparticipacao_w.ie_beneficiario;
		dados_regra_copartic_w.ie_prestador     		:= regras_coparticipacao_w.ie_prestador;
		dados_regra_copartic_w.ie_conta_medica  		:= regras_coparticipacao_w.ie_conta_medica;
		dados_regra_copartic_w.ie_utilizacao         		:= regras_coparticipacao_w.ie_utilizacao;
		dados_regra_copartic_w.nr_seq_plano      		:= regras_coparticipacao_w.nr_seq_plano;
		dados_regra_copartic_w.nr_seq_contrato      		:= regras_coparticipacao_w.nr_seq_contrato;
		dados_regra_copartic_w.nr_seq_intercambio   		:= regras_coparticipacao_w.nr_seq_intercambio;
		dados_regra_copartic_w.vl_maximo_copartic   		:= regras_coparticipacao_w.vl_maximo_copartic;
		dados_regra_copartic_w.ie_guia          		:= regras_coparticipacao_w.ie_guia;
		dados_regra_copartic_w.ie_forma_cobr_internacao		:= regras_coparticipacao_w.ie_forma_cobr_internacao;
		dados_regra_copartic_w.ie_internacao               	:= regras_coparticipacao_w.ie_internacao;
		dados_regra_copartic_w.nr_ordem_prioridade     		:= regras_coparticipacao_w.nr_prioridade;
		dados_regra_copartic_w.ie_tp_transacao    		:= regras_coparticipacao_w.ie_tp_transacao;
				
		ie_regra_transac_valida_w := 'S';
		if (dados_regra_copartic_w.ie_tp_transacao IS NOT NULL AND dados_regra_copartic_w.ie_tp_transacao::text <> '') then
		
			select CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
			into STRICT	ie_regra_transac_valida_w
			from	pls_conta_mat_regra
			where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
			and 	ie_tp_transacao = dados_regra_copartic_w.ie_tp_transacao;
		
		end if;
					
		if (ie_regra_transac_valida_w = 'S') then
			if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
				select	count(1)
				into STRICT	qt_regras_ja_inculadas_w
				from	pls_conta_proc_aprop
				where	nr_seq_conta_proc 	= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
				and	nr_seq_regra_copartic 	<> dados_regra_copartic_w.nr_sequencia
				and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''));
				
				if (qt_regras_ja_inculadas_w > 0) then
					goto final;
				end if;
				
				ie_cobranca_prevista_w := coalesce(current_setting('pls_apropriacao_pck.pls_rec_glosa_proc_w')::pls_rec_glosa_proc%rowtype.ie_cobranca_prevista,'N');
				
			elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
				select	count(1)
				into STRICT	qt_regras_ja_inculadas_w
				from	pls_conta_mat_aprop
				where	nr_seq_conta_mat 	= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
				and	nr_seq_regra_copartic 	<> dados_regra_copartic_w.nr_sequencia
				and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''));
				
				if (qt_regras_ja_inculadas_w > 0) then
					goto final;
				end if;
				
				ie_cobranca_prevista_w := coalesce(current_setting('pls_apropriacao_pck.pls_rec_glosa_mat_w')::pls_rec_glosa_mat%rowtype.ie_cobranca_prevista,'N');
			end if;
			
			if (	pls_apropriacao_pck.obter_se_item_pertence_copart(dados_regra_copartic_w.nr_seq_tipo_coparticipacao) = 'S' and
				pls_apropriacao_pck.get_result_consistencias_regra(dados_regra_copartic_w) = 'S') or (ie_cobranca_prevista_w = 'S') then
				
				declare
					vl_beneficiario_aprop_w		double precision := 0;
					vl_apropriado_w			double precision;
					qt_itens_cobrar_w		double precision;
					
					type apropriacoes_r is record(	nr_sequencia			pls_regra_copartic_aprop.nr_sequencia%type,
									tx_apropriacao			double precision,
									tx_aprop_valor_benef		double precision,
									ie_tipo_apropriacao		pls_regra_copartic_aprop.ie_tipo_apropriacao%type,
									nr_seq_centro_apropriacao	pls_regra_copartic_aprop.nr_seq_centro_apropriacao%type,
									ie_coparticipacao		pls_centro_apropriacao.ie_coparticipacao%type,
									vl_apropriacao			double precision,
									vl_apropriacao_benef		double precision);
					type apropriacoes_t is table of apropriacoes_r;
					
					apropriacoes_w	apropriacoes_t;
					tx_coparticipacao_total_w	double precision := 0;
					vl_cobranca_w			double precision;
					vl_coparticipacao_w		double precision := 0;
					vl_coparticipacao_total_w	double precision := 0;
					vl_apropriacao_total_w		double precision := 0;
					vl_apropriacao_total2_w		double precision := 0;
					vl_fixo_benef_ja_apropriado_w	double precision := 0;
					vl_fixo_aprop_item_w		double precision := 0;
					vl_beneficiario_w		double precision := 0;
					vl_cobrar_w			double precision := 0;
					vl_apropriado_guia_w		pls_conta_proc_aprop.vl_apropriado%type;
					ie_vl_pendente_zero_w		varchar(1);
					vl_pend_guia_table_w		double precision := 0;
					nr_seq_centro_aprop_w		pls_centro_apropriacao.nr_Sequencia%type;
				begin
					if (current_setting('pls_apropriacao_pck.ie_verificou_regra_inclusao_w')::varchar(1) = 'S') then
						qt_itens_cobrar_w := current_setting('pls_apropriacao_pck.qt_itens_regra_inclusao_w')::double;
					else
						qt_itens_cobrar_w := pls_apropriacao_pck.get_qt_itens_cobrar(dados_regra_copartic_w);
					end if;
					
					if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
					
						if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
							vl_cobranca_w	:= (current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_unitario * qt_itens_cobrar_w);
						else
							select	max(vl_acatado)
							into STRICT	vl_cobranca_w
							from	pls_rec_glosa_proc
							where	nr_sequencia	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type;
						end if;
					elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
					
						if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
							vl_cobranca_w	:= (current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_unitario * qt_itens_cobrar_w );
						else
							select	max(vl_acatado)
							into STRICT	vl_cobranca_w
							from	pls_rec_glosa_mat
							where	nr_sequencia	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type;
						end if;
					end if;			
					
					open apropriacoes_regra(dados_regra_copartic_w.nr_sequencia);
					fetch apropriacoes_regra bulk collect into apropriacoes_w;
					close apropriacoes_regra;
					
					if (apropriacoes_w.count > 0) then					
						
						
						if (apropriacoes_w[1].ie_tipo_apropriacao = '2') then
						
							for i in apropriacoes_w.first .. apropriacoes_w.last loop
								if (apropriacoes_w[i].ie_coparticipacao = 'S') then
									tx_coparticipacao_total_w := tx_coparticipacao_total_w + apropriacoes_w[i].tx_apropriacao;
								end if;
							end loop;
							
							
							if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
								if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
									vl_cobranca_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_unitario;
								elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
									vl_cobranca_w	:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_unitario;
								end if;
							end if;
							
							if ( current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
								dt_coparticipacao_w	:= coalesce(get_dt_autorizacao, pls_obter_data_preco_item(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia, 'P'));	
								ie_glosa_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_glosa;
							elsif ( current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
								dt_coparticipacao_w	:= coalesce(get_dt_autorizacao, coalesce(current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.dt_atendimento, clock_timestamp()));
								ie_glosa_w	:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.ie_glosa;
							end if;
							
							if ( current_setting('pls_apropriacao_pck.pls_parametros_w')::pls_parametros%rowtype.ie_calculo_coparticipacao = 'R') then
								pls_obter_tipo_valor_copartic(	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, 		dt_coparticipacao_w, 	wheb_usuario_pck.get_nm_usuario,
																'0', current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_origem_conta,	ie_glosa_w,
																current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec,
																current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_solic_ref,	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_clinica,	ie_tipo_valor_w,
																nr_seq_regra_copartic_w,	ie_multi_internacao_w);														
										
								if ( ie_tipo_valor_w = '6') then
															
									if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
										if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
											vl_cobranca_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_proc_copartic;
										elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
											vl_cobranca_w	:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_mat_copartic;
										end if;
									end if;
									
								
								end if;
							end if;
							
							
						
							vl_coparticipacao_w 	:= (vl_cobranca_w * tx_coparticipacao_total_w/100);
							
							if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') and (coalesce(dados_regra_copartic_w.vl_maximo_copartic,0) > 0) then
								if (dados_regra_copartic_w.vl_maximo_copartic < vl_coparticipacao_w) then
									vl_coparticipacao_w 	:= dados_regra_copartic_w.vl_maximo_copartic;
									vl_cobranca_w := vl_cobranca_w * 100 - vl_coparticipacao_w;
								else
									vl_cobranca_w := vl_cobranca_w * (100 - tx_coparticipacao_total_w);
								end if;
							end if;
							
							for i in apropriacoes_w.first .. apropriacoes_w.last loop
								if (apropriacoes_w[i].ie_coparticipacao = 'S') then
									apropriacoes_w[i].tx_apropriacao := apropriacoes_w[i].tx_apropriacao * (100/tx_coparticipacao_total_w);
								else
									apropriacoes_w[i].tx_apropriacao := apropriacoes_w[i].tx_apropriacao * (100/(100 - tx_coparticipacao_total_w));
								end if;
							end loop;
							
							for i in apropriacoes_w.first .. apropriacoes_w.last loop
															
								if (apropriacoes_w[i].ie_coparticipacao = 'S') then
									vl_apropriado_w	:= (vl_coparticipacao_w/100) * apropriacoes_w[i].tx_apropriacao;								
								else
									vl_apropriado_w	:= (coalesce(vl_cobranca_w, 0)/100) * apropriacoes_w[i].tx_aprop_valor_benef;
								end if;
								
								if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
									if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
										vl_beneficiario_aprop_w	:= (coalesce(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_beneficiario, 0)/100) * apropriacoes_w[i].tx_aprop_valor_benef;
									else
										vl_beneficiario_aprop_w	:= (coalesce(vl_cobranca_w, 0)/100) * apropriacoes_w[i].tx_aprop_valor_benef;
									end if;
								elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
									if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
										vl_beneficiario_aprop_w	:= (coalesce(current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_beneficiario, 0)/100) * apropriacoes_w[i].tx_aprop_valor_benef;
									else
										vl_beneficiario_aprop_w	:= (coalesce(vl_cobranca_w, 0)/100) * apropriacoes_w[i].tx_aprop_valor_benef;
									end if;
								end if;
								
								if (vl_apropriado_w <> vl_beneficiario_aprop_w) and (vl_apropriado_w > 0) then
									vl_beneficiario_aprop_w := vl_apropriado_w;
								end if;
								
								if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
									vl_beneficiario_aprop_w	:= vl_beneficiario_aprop_w * qt_itens_cobrar_w;
									vl_apropriado_w		:= vl_apropriado_w * qt_itens_cobrar_w;
								end if;
								
								if (ie_cobranca_prevista_w = 'S') then
									select	max(nr_sequencia)
									into STRICT	nr_seq_centro_aprop_w
									from	pls_centro_apropriacao
									where	ie_responsavel_apropriacao = '1';
								else
									nr_seq_centro_aprop_w := apropriacoes_w[i].nr_seq_centro_apropriacao;
								end if;
								
								select 	max(nr_seq_grau_partic)
								into STRICT	nr_seq_grau_partic_w
								from	pls_proc_participante
								where 	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia;
															
								if (coalesce(nr_seq_grau_partic_w::text, '') = '') then
									nr_seq_grau_partic_w := current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_grau_partic;
								end if;
								
								select	max(nr_seq_tipo_prestador)
								into STRICT	nr_seq_tipo_prestador_w
								from	pls_prestador
								where	nr_sequencia	= current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador;
																						
								if (current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_guia in (4,6) and current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%(rowtype.nr_seq_conta_princ IS NOT NULL AND rowtype.nr_seq_conta_princ::text <> '')) then
									
									select	max(nr_seq_tipo_atendimento),
											max(ie_regime_atendimento),
											max(ie_saude_ocupacional)
									into STRICT	nr_seq_tipo_atendimento_w,
											ie_regime_atendimento_w,
											ie_saude_ocupacional_w
									from	pls_conta
									where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_conta_princ;
								else
									nr_seq_tipo_atendimento_w := current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_tipo_atendimento;
									ie_regime_atendimento_w := current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_regime_atendimento;
									ie_saude_ocupacional_w := current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_saude_ocupacional;
								end if;
																												
								dt_autorizacao_w := pls_apropriacao_pck.get_dt_autorizacao();												
								nr_seq_regra_exclusao_w	:= pls_obter_copartic_exclusao(	dados_regra_copartic_w.nr_seq_tipo_coparticipacao,
																						current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec, 
																						dt_autorizacao_w,
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_conta_princ, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_guia, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_saida_int, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_faturamento,
																						nr_seq_grau_partic_w, 
																						current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_contrato, 
																						nr_seq_tipo_prestador_w,
																						current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.cd_procedimento, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_solic_ref, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_guia_ok, 
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_origem_conta,
																						nr_seq_tipo_atendimento_w,
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_carater_internacao,
																						current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_apresentacao,
																						current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_plano,
																						ie_regime_atendimento_w,
																						ie_saude_ocupacional_w);														
								
								if (nr_seq_regra_exclusao_w <> 0) then
									vl_apropriado_w := 0;
								end if;
																					
								if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
								
									select   count(1)
									into STRICT  qt_registros_duplicados_w
									from  pls_conta_proc_aprop
									where  nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
									and    nr_seq_centro_aprop = nr_seq_centro_aprop_w
									and    nr_seq_regra_copartic = dados_regra_copartic_w.nr_sequencia
									and    nr_seq_regra_copart_aprop = apropriacoes_w[i].nr_sequencia;
									
									if (qt_registros_duplicados_w > 0) then
									

									ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);
									
									ds_observacao_w := 'Duplicidade de registros de apropriacao - Conta proc: '||current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia;
										
									insert into plsprco_cta(   nr_sequencia, dt_atualizacao, nm_usuario,
											  dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela, 
											  ds_log, ds_log_call, ds_funcao_ativa, 
											  ie_aplicacao_tasy, nm_maquina, pls_conta_proc, ie_opcao )
										values (   nextval('plsprco_cta_seq'), clock_timestamp(), substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuario nao identificado '),1,14),
											  clock_timestamp(), substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuario nao identificado '),1,14), 'PLS_CONTA_PROC', 
											  ds_observacao_w, ds_log_call_w, obter_funcao_ativa, 
											  'N', wheb_usuario_pck.get_machine, current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia, '0');
									end if;
								
								
									insert into pls_conta_proc_aprop(
										nr_sequencia,
										nr_seq_regra_copartic,
										nr_seq_conta_proc,
										nr_seq_centro_aprop,
										vl_apropriado,
										vl_beneficiario,
										qt_apropriada,
										ie_coparticipacao,
										ie_recuperar,
										nr_seq_regra_copart_aprop,
										nm_usuario,
										nm_usuario_nrec,
										dt_atualizacao,
										dt_atualizacao_nrec,
										nr_seq_proc_rec,
										nr_seq_regra_copar_exc)
									values (nextval('pls_conta_proc_aprop_seq'),
										dados_regra_copartic_w.nr_sequencia,
										current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia,
										nr_seq_centro_aprop_w,
										coalesce(vl_apropriado_w,0),
										0,
										qt_itens_cobrar_w,
										coalesce(apropriacoes_w[i].ie_coparticipacao, 'N'),
										'N',
										apropriacoes_w[i].nr_sequencia,
										current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
										current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
										clock_timestamp(),
										clock_timestamp(),
										current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type,
										CASE WHEN nr_seq_regra_exclusao_w=0 THEN  null  ELSE nr_seq_regra_exclusao_w END );
								else
									insert into pls_conta_mat_aprop(
										nr_sequencia,
										nr_seq_regra_copartic,
										nr_seq_conta_mat,
										nr_seq_centro_aprop,
										vl_apropriado,
										vl_beneficiario,
										qt_apropriada,
										ie_coparticipacao,
										ie_recuperar,
										nr_seq_regra_copart_aprop,
										nm_usuario,
										nm_usuario_nrec,
										dt_atualizacao,
										dt_atualizacao_nrec,
										nr_seq_mat_rec,
										nr_seq_regra_copar_exc)
									values (nextval('pls_conta_mat_aprop_seq'),
										dados_regra_copartic_w.nr_sequencia,
										current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia,
										nr_seq_centro_aprop_w,
										coalesce(vl_apropriado_w,0),
										0,
										qt_itens_cobrar_w,
										coalesce(apropriacoes_w[i].ie_coparticipacao, 'N'),
										'N',
										apropriacoes_w[i].nr_sequencia,
										current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
										current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
										clock_timestamp(),
										clock_timestamp(),
										current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type,
										CASE WHEN nr_seq_regra_exclusao_w=0 THEN  null  ELSE nr_seq_regra_exclusao_w END );
								end if;
								ie_gerou_apropriacao_w := 'S';
							end loop;
						else
						
							if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
							
								if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
									vl_beneficiario_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_beneficiario;
									vl_cobrar_w		:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_unitario * qt_itens_cobrar_w;
								else
									select	max(vl_acatado)
									into STRICT	vl_cobrar_w
									from	pls_rec_glosa_proc
									where	nr_sequencia	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type;
									
									vl_beneficiario_w	:= vl_cobrar_w;
								end if;
									
							elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
							
								if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
									vl_beneficiario_w	:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_beneficiario;
									vl_cobrar_w		:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_unitario * qt_itens_cobrar_w;
								else
									select	max(vl_acatado)
									into STRICT	vl_cobrar_w
									from	pls_rec_glosa_mat
									where	nr_sequencia	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type;
									
									vl_beneficiario_w	:= vl_cobrar_w;
								end if;
							end if;
							
							for i in apropriacoes_w.first .. apropriacoes_w.last loop
								
								if (apropriacoes_w[i].ie_tipo_apropriacao = '1') then
									if (current_setting('pls_apropriacao_pck.nr_seq_regra_aprop_ant_w')::pls_regra_copartic.nr_sequencia%type <> dados_regra_copartic_w.nr_sequencia) then
										PERFORM set_config('pls_apropriacao_pck.vl_fixo_aprop_conta_w', 0, false);
									end if;

									if (dados_regra_copartic_w.ie_forma_cobr_internacao = 'I') then
																		
										
										if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
											apropriacoes_w[i].vl_apropriacao := apropriacoes_w[i].vl_apropriacao * qt_itens_cobrar_w;
										end if;
									
										if  ((coalesce(apropriacoes_w[i].vl_apropriacao, 0) > vl_beneficiario_w) and (ie_tipo_p = 'P') )then
											vl_beneficiario_aprop_w	:= vl_beneficiario_w;
										else
											vl_beneficiario_aprop_w	:= coalesce(apropriacoes_w[i].vl_apropriacao, 0);
										end if;
										
										if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
											vl_fixo_benef_ja_apropriado_w	:= vl_fixo_benef_ja_apropriado_w + vl_beneficiario_aprop_w;
											
											if  ((vl_fixo_benef_ja_apropriado_w > coalesce(vl_beneficiario_w, 0)) and (ie_tipo_p = 'P'))then
												vl_fixo_benef_ja_apropriado_w := vl_fixo_benef_ja_apropriado_w - vl_beneficiario_aprop_w;
												vl_beneficiario_aprop_w := coalesce(vl_beneficiario_w, 0) - vl_fixo_benef_ja_apropriado_w;
											end if;
										else
											if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then
												select	sum(vl_apropriado),
													sum(vl_beneficiario)
												into STRICT	vl_ja_apropriado_w,
													vl_benef_ja_apropriado_w
												from	pls_conta_proc_aprop
												where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
												and	nr_seq_centro_aprop in (	SELECT	nr_sequencia
																from	pls_centro_apropriacao
																where	ie_responsavel_apropriacao = '1');
																
												select	max(qt_procedimento_imp),
													max(qt_procedimento)
												into STRICT	qt_item_original_w,
													qt_item_lib_w
												from	pls_conta_proc
												where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia;
											else
												select	sum(vl_apropriado),
													sum(vl_beneficiario)
												into STRICT	vl_ja_apropriado_w,
													vl_benef_ja_apropriado_w
												from	pls_conta_mat_aprop
												where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
												and	nr_seq_centro_aprop in (	SELECT	nr_sequencia
																from	pls_centro_apropriacao
																where	ie_responsavel_apropriacao = '1');
																
												select	max(qt_material_imp),
													max(qt_material)
												into STRICT	qt_item_original_w,
													qt_item_lib_w
												from	pls_conta_mat
												where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia;
											end if;
															
											vl_fixo_benef_ja_apropriado_w	:= vl_ja_apropriado_w + vl_beneficiario_aprop_w;
											
											if (qt_item_original_w = qt_item_lib_w) and (qt_item_lib_w > 1) then
												apropriacoes_w[i].vl_apropriacao := coalesce(apropriacoes_w[i].vl_apropriacao,0) * qt_item_lib_w;
											end if;
											
											if (vl_fixo_benef_ja_apropriado_w > coalesce(apropriacoes_w[i].vl_apropriacao,0)) then
												vl_beneficiario_aprop_w := coalesce(apropriacoes_w[i].vl_apropriacao,0) - vl_ja_apropriado_w;
											end if;
										end if;
										
										apropriacoes_w[i].vl_apropriacao_benef := vl_beneficiario_aprop_w;
										
										if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
											if (coalesce(apropriacoes_w[i].vl_apropriacao, 0) > vl_cobrar_w) then
												apropriacoes_w[i].vl_apropriacao := vl_cobrar_w;
											end if;
										else
									
											apropriacoes_w[i].vl_apropriacao := vl_beneficiario_aprop_w;
											
											
											
										end if;
										
										vl_fixo_aprop_item_w := vl_fixo_aprop_item_w + apropriacoes_w[i].vl_apropriacao;
									elsif (dados_regra_copartic_w.ie_forma_cobr_internacao = 'C') then
										SELECT * FROM pls_apropriacao_pck.tratar_distribuicao_aprop('C', i, dados_regra_copartic_w, 0, vl_cobrar_w, vl_beneficiario_w, vl_pend_guia_table_w, vl_fixo_aprop_item_w, vl_beneficiario_aprop_w, vl_fixo_benef_ja_apropriado_w, apropriacoes_w[i].vl_apropriacao, apropriacoes_w[i].vl_apropriacao_benef) INTO STRICT vl_pend_guia_table_w, vl_fixo_aprop_item_w, vl_beneficiario_aprop_w, vl_fixo_benef_ja_apropriado_w, apropriacoes_w[i].vl_apropriacao, apropriacoes_w[i].vl_apropriacao_benef;
									elsif (dados_regra_copartic_w.ie_forma_cobr_internacao = 'G') then
										select	coalesce(sum(vl_apropriado),0)
										into STRICT	vl_apropriado_guia_w
										from (	SELECT	sum(c.vl_apropriado) vl_apropriado
											from	pls_conta_proc_aprop	c,
												pls_conta_proc		b,
												pls_conta		a
											where	a.nr_sequencia 	= b.nr_seq_conta
											and	b.nr_sequencia	= c.nr_seq_conta_proc
											and	a.cd_guia_ok 	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_guia_ok
											and	a.nr_sequencia 	<> current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia
											and	c.nr_seq_centro_aprop 	= apropriacoes_w[i].nr_seq_centro_apropriacao
											and	c.nr_seq_regra_copartic = dados_regra_copartic_w.nr_sequencia
											
union all

											SELECT	sum(c.vl_apropriado) vl_apropriado
											from	pls_conta_mat_aprop	c,
												pls_conta_mat		b,
												pls_conta		a
											where	a.nr_sequencia 	= b.nr_seq_conta
											and	b.nr_sequencia	= c.nr_seq_conta_mat
											and	a.cd_guia_ok 	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_guia_ok
											and	a.nr_sequencia 	<> current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia
											and	c.nr_seq_centro_aprop 	= apropriacoes_w[i].nr_seq_centro_apropriacao
											and	c.nr_seq_regra_copartic = dados_regra_copartic_w.nr_sequencia) alias9;
										
										if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'S') then
											select	coalesce(sum(vl_apropriado),0)
											into STRICT	current_setting('pls_apropriacao_pck.vl_fixo_aprop_conta_w')::pls_regra_copartic_aprop.vl_apropriacao%type
											from (	SELECT	sum(c.vl_apropriado) vl_apropriado
												from	pls_conta_proc_aprop	c,
													pls_conta_proc		b,
													pls_conta		a
												where	a.nr_sequencia 	= b.nr_seq_conta
												and	b.nr_sequencia	= c.nr_seq_conta_proc
												and	a.cd_guia_ok 	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_guia_ok
												and	c.nr_seq_centro_aprop 	= apropriacoes_w[i].nr_seq_centro_apropriacao
												and	c.nr_seq_regra_copartic = dados_regra_copartic_w.nr_sequencia
												
union all

												SELECT	sum(c.vl_apropriado) vl_apropriado
												from	pls_conta_mat_aprop	c,
													pls_conta_mat		b,
													pls_conta		a
												where	a.nr_sequencia 	= b.nr_seq_conta
												and	b.nr_sequencia	= c.nr_seq_conta_mat
												and	a.cd_guia_ok 	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_guia_ok
												and	c.nr_seq_centro_aprop 	= apropriacoes_w[i].nr_seq_centro_apropriacao
												and	c.nr_seq_regra_copartic = dados_regra_copartic_w.nr_sequencia) alias11;
										end if;
										if (vl_apropriado_guia_w = 0) then
											SELECT * FROM pls_apropriacao_pck.tratar_distribuicao_aprop('G1', i, dados_regra_copartic_w, 0, vl_cobrar_w, vl_beneficiario_w, vl_pend_guia_table_w, vl_fixo_aprop_item_w, vl_beneficiario_aprop_w, vl_fixo_benef_ja_apropriado_w, apropriacoes_w[i].vl_apropriacao, apropriacoes_w[i].vl_apropriacao_benef) INTO STRICT vl_pend_guia_table_w, vl_fixo_aprop_item_w, vl_beneficiario_aprop_w, vl_fixo_benef_ja_apropriado_w, apropriacoes_w[i].vl_apropriacao, apropriacoes_w[i].vl_apropriacao_benef;
										else
											SELECT * FROM pls_apropriacao_pck.tratar_distribuicao_aprop('G2', i, dados_regra_copartic_w, vl_apropriado_guia_w, vl_cobrar_w, vl_beneficiario_w, vl_pend_guia_table_w, vl_fixo_aprop_item_w, vl_beneficiario_aprop_w, vl_fixo_benef_ja_apropriado_w, apropriacoes_w[i].vl_apropriacao, apropriacoes_w[i].vl_apropriacao_benef) INTO STRICT vl_pend_guia_table_w, vl_fixo_aprop_item_w, vl_beneficiario_aprop_w, vl_fixo_benef_ja_apropriado_w, apropriacoes_w[i].vl_apropriacao, apropriacoes_w[i].vl_apropriacao_benef;
										end if;
									end if;
									
									PERFORM set_config('pls_apropriacao_pck.nr_seq_regra_aprop_ant_w', dados_regra_copartic_w.nr_sequencia, false);
								elsif (apropriacoes_w[i].ie_tipo_apropriacao = '3') then
									apropriacoes_w[i].vl_apropriacao_benef := ((vl_beneficiario_w - vl_fixo_benef_ja_apropriado_w) / 100) * apropriacoes_w[i].tx_apropriacao;
									
									if (apropriacoes_w[i].ie_coparticipacao = 'S') then
										apropriacoes_w[i].vl_apropriacao := ((vl_cobrar_w - coalesce(vl_fixo_aprop_item_w, 0)) /100) * apropriacoes_w[i].tx_apropriacao;
									else
										apropriacoes_w[i].vl_apropriacao := ((vl_beneficiario_w - coalesce(vl_fixo_aprop_item_w, 0)) /100) * apropriacoes_w[i].tx_apropriacao;
									end if;
									
									if (apropriacoes_w[i].vl_apropriacao < 0) then
										apropriacoes_w[i].vl_apropriacao := 0;
									end if;
								end if;
							end loop;
							
							for i in apropriacoes_w.first .. apropriacoes_w.last loop
								if (apropriacoes_w[i].ie_coparticipacao = 'S') then
									vl_coparticipacao_w := vl_coparticipacao_w + apropriacoes_w[i].vl_apropriacao;
								end if;
								
								vl_apropriacao_total_w := vl_apropriacao_total_w + apropriacoes_w[i].vl_apropriacao;
							end loop;
							
							if (dados_regra_copartic_w.vl_maximo_copartic < vl_coparticipacao_w) then
								for i in apropriacoes_w.first .. apropriacoes_w.last loop
									if (apropriacoes_w[i].ie_coparticipacao = 'S')  then
										if (vl_coparticipacao_w = 0) then
											apropriacoes_w[i].vl_apropriacao := 0;
										else
											apropriacoes_w[i].vl_apropriacao := apropriacoes_w[i].vl_apropriacao * (dados_regra_copartic_w.vl_maximo_copartic / vl_coparticipacao_w);
											vl_coparticipacao_total_w := vl_coparticipacao_total_w + round((apropriacoes_w[i].vl_apropriacao)::numeric,2);
										end if;
									else
										if	((vl_apropriacao_total_w - vl_coparticipacao_w) = 0) then
											apropriacoes_w[i].vl_apropriacao := 0;
										else
											apropriacoes_w[i].vl_apropriacao := apropriacoes_w[i].vl_apropriacao * ((vl_apropriacao_total_w - dados_regra_copartic_w.vl_maximo_copartic) / (vl_apropriacao_total_w - vl_coparticipacao_w));
											vl_apropriacao_total2_w := vl_apropriacao_total2_w + round((apropriacoes_w[i].vl_apropriacao)::numeric,2);
										end if;
									end if;
								end loop;
								
								if (vl_coparticipacao_total_w < dados_regra_copartic_w.vl_maximo_copartic) then
									for i in apropriacoes_w.first .. apropriacoes_w.last loop
										if (apropriacoes_w[i].ie_coparticipacao = 'S') then
											apropriacoes_w[i].vl_apropriacao := apropriacoes_w[1].vl_apropriacao + dados_regra_copartic_w.vl_maximo_copartic - vl_coparticipacao_total_w;
											exit;
										end if;
									end loop;
								end if;
								
								if (vl_apropriacao_total2_w < vl_apropriacao_total_w - dados_regra_copartic_w.vl_maximo_copartic) then
									for i in apropriacoes_w.first .. apropriacoes_w.last loop
										if (apropriacoes_w[i].ie_coparticipacao = 'N') then
											apropriacoes_w[i].vl_apropriacao := apropriacoes_w[1].vl_apropriacao + ((vl_apropriacao_total_w - dados_regra_copartic_w.vl_maximo_copartic) - vl_apropriacao_total2_w);
											exit;
										end if;
									end loop;
								end if;
							end if;
							
							
							for i in apropriacoes_w.first .. apropriacoes_w.last loop
								
								if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') and (coalesce(apropriacoes_w[i].vl_apropriacao,0) <> coalesce(apropriacoes_w[i].vl_apropriacao_benef,0)) and
									( 	((coalesce(apropriacoes_w[i].vl_apropriacao_benef,0) >= 0) and (dados_regra_copartic_w.ie_forma_cobr_internacao != 'G')) or
										((coalesce(apropriacoes_w[i].vl_apropriacao_benef,0) > 0) and (dados_regra_copartic_w.ie_forma_cobr_internacao = 'G'))) then
									apropriacoes_w[i].vl_apropriacao := apropriacoes_w[i].vl_apropriacao_benef;
								end if;
							end loop;
							
							select 	max(nr_seq_grau_partic)
							into STRICT	nr_seq_grau_partic_w
							from	pls_proc_participante
							where 	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia;
														
							if (coalesce(nr_seq_grau_partic_w::text, '') = '') then
								nr_seq_grau_partic_w := current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_grau_partic;
							end if;
							
							select	max(nr_seq_tipo_prestador)
							into STRICT	nr_seq_tipo_prestador_w
							from	pls_prestador
							where	nr_sequencia	= current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador;
							
							dt_autorizacao_w := pls_apropriacao_pck.get_dt_autorizacao();	
							
							if (current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_guia in (4,6) and current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%(rowtype.nr_seq_conta_princ IS NOT NULL AND rowtype.nr_seq_conta_princ::text <> '')) then
									
								select	max(nr_seq_tipo_atendimento),
										max(ie_regime_atendimento),
										max(ie_saude_ocupacional)
								into STRICT	nr_seq_tipo_atendimento_w,
										ie_regime_atendimento_w,
										ie_saude_ocupacional_w
								from	pls_conta
								where	nr_sequencia = current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_conta_princ;
							else
								nr_seq_tipo_atendimento_w := current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_tipo_atendimento;
							end if;
							
							nr_seq_regra_exclusao_w	:= pls_obter_copartic_exclusao(	dados_regra_copartic_w.nr_seq_tipo_coparticipacao,
																					current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec, 
																					dt_autorizacao_w, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_conta_princ, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_guia, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_saida_int, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_faturamento,
																					nr_seq_grau_partic_w, 
																					current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_contrato, 
																					nr_seq_tipo_prestador_w,
																					current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.cd_procedimento, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_solic_ref, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_guia_ok, 
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_origem_conta,
																					nr_seq_tipo_atendimento_w,
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_carater_internacao,
																					current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_apresentacao,
																					current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_plano,
																					ie_regime_atendimento_w,
																					ie_saude_ocupacional_w);
																			
							if (nr_seq_regra_exclusao_w <> 0) then
								vl_apropriado_w := 0;
							end if;
																
							
							for i in apropriacoes_w.first .. apropriacoes_w.last loop						
								if	((apropriacoes_w[i].vl_apropriacao >= 0) or (apropriacoes_w[i].vl_apropriacao = 0 and nr_seq_regra_exclusao_w <> 0))then
									if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then		

										select   count(1)
										into STRICT  qt_registros_duplicados_w
										from  pls_conta_proc_aprop
										where  nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
										and    nr_seq_centro_aprop = nr_seq_centro_aprop_w
										and    nr_seq_regra_copartic = dados_regra_copartic_w.nr_sequencia
										and    nr_seq_regra_copart_aprop = apropriacoes_w[i].nr_sequencia;
										
										if (qt_registros_duplicados_w > 0) then
										

										ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);
										
										ds_observacao_w := 'Duplicidade de registros de apropriacao - Conta proc: '||current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia;
											
										insert into plsprco_cta(   nr_sequencia, dt_atualizacao, nm_usuario,
												  dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela, 
												  ds_log, ds_log_call, ds_funcao_ativa, 
												  ie_aplicacao_tasy, nm_maquina, pls_conta_proc, ie_opcao )
											values (   nextval('plsprco_cta_seq'), clock_timestamp(), substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuario nao identificado '),1,14),
												  clock_timestamp(), substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuario nao identificado '),1,14), 'PLS_CONTA_PROC', 
												  ds_observacao_w, ds_log_call_w, obter_funcao_ativa, 
												  'N', wheb_usuario_pck.get_machine, current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia, '0');
										end if;
									
										insert into pls_conta_proc_aprop(
											nr_sequencia,
											nr_seq_regra_copartic,
											nr_seq_conta_proc,
											nr_seq_centro_aprop,
											vl_apropriado,
											vl_beneficiario,
											qt_apropriada,
											ie_coparticipacao,
											ie_recuperar,
											nr_seq_regra_copart_aprop,
											nm_usuario,
											nm_usuario_nrec,
											dt_atualizacao,
											dt_atualizacao_nrec,
											nr_seq_proc_rec,
											nr_seq_regra_copar_exc)
										values (nextval('pls_conta_proc_aprop_seq'),
											dados_regra_copartic_w.nr_sequencia,
											current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia,
											apropriacoes_w[i].nr_seq_centro_apropriacao,
											CASE WHEN nr_seq_regra_exclusao_w=0 THEN  coalesce(apropriacoes_w[i].vl_apropriacao,0)  ELSE 0 END ,
											0,
											qt_itens_cobrar_w,
											coalesce(apropriacoes_w[i].ie_coparticipacao, 'N'),
											'N',
											apropriacoes_w[i].nr_sequencia,
											current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
											current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
											clock_timestamp(),
											clock_timestamp(),
											current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type,
											CASE WHEN nr_seq_regra_exclusao_w=0 THEN  null  ELSE nr_seq_regra_exclusao_w END );
									else
										insert into pls_conta_mat_aprop(
											nr_sequencia,
											nr_seq_regra_copartic,
											nr_seq_conta_mat,
											nr_seq_centro_aprop,
											vl_apropriado,
											vl_beneficiario,
											qt_apropriada,
											ie_coparticipacao,
											ie_recuperar,
											nr_seq_regra_copart_aprop,
											nm_usuario,
											nm_usuario_nrec,
											dt_atualizacao,
											dt_atualizacao_nrec,
											nr_seq_mat_rec,
											nr_seq_regra_copar_exc)
										values (nextval('pls_conta_mat_aprop_seq'),
											dados_regra_copartic_w.nr_sequencia,
											current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia,
											apropriacoes_w[i].nr_seq_centro_apropriacao,
											CASE WHEN nr_seq_regra_exclusao_w=0 THEN  coalesce(apropriacoes_w[i].vl_apropriacao,0)  ELSE 0 END ,
											0,
											qt_itens_cobrar_w,
											coalesce(apropriacoes_w[i].ie_coparticipacao, 'N'),
											'N',
											apropriacoes_w[i].nr_sequencia,
											current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
											current_setting('pls_apropriacao_pck.nm_usuario_w')::usuario.nm_usuario%type,
											clock_timestamp(),
											clock_timestamp(),
											current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type,
											CASE WHEN nr_seq_regra_exclusao_w=0 THEN  null  ELSE nr_seq_regra_exclusao_w END );
									end if;
									ie_gerou_apropriacao_w := 'S';
								end if;
							end loop;
						end if;
					end if;
				end;
			end if;
		end if;
end loop;

<<final>>

select	sum(vl_apropriado)
into STRICT	vl_total_apropriado_w
from	pls_conta_proc_aprop
where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''));

if (ie_gerou_apropriacao_w = 'S') then
	
	if (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'P') then

		if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
			vl_liberado_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_liberado;
			vl_beneficiario_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_beneficiario;
		else
			select	max(vl_acatado)
			into STRICT	vl_liberado_w
			from	pls_rec_glosa_proc
			where	nr_sequencia	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type;
			
			vl_beneficiario_w	:= vl_liberado_w;
		end if;
	
		select	sum(vl_apropriado)
		into STRICT	vl_total_apropriado_w
		from	pls_conta_proc_aprop
		where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
		and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''));
		
		if (vl_total_apropriado_w < vl_liberado_w) then
			select	count(1)
			into STRICT	qt_copartic_nao_w
			from	pls_conta_proc_aprop
			where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
			and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
			and	ie_coparticipacao = 'N';
			
			if (qt_copartic_nao_w = 1) then
				select	coalesce(sum(vl_apropriado),0)
				into STRICT	vl_prov_benef_w
				from	pls_conta_proc_aprop
				where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
				and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
				and	ie_coparticipacao = 'S';
			
				update	pls_conta_proc_aprop
				set	vl_apropriado = vl_liberado_w - vl_prov_benef_w
				where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
				and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
				and	ie_coparticipacao = 'N';
			elsif (qt_copartic_nao_w > 1) then
				select	sum(a.tx_apropriacao)
				into STRICT	tx_aprop_copartic_nao_w
				from	pls_regra_copartic_aprop	a,
					pls_conta_proc_aprop		b
				where	a.nr_seq_regra 			= b.nr_seq_regra_copartic
				and	a.nr_seq_centro_apropriacao  	= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_proc 		= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
				and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
				and	b.ie_coparticipacao 			= 'N';
				
				for aprop_proc_copartic_nao_w in aprop_proc_copartic_nao(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia) loop
					update	pls_conta_proc_aprop
					set	vl_apropriado 	= (aprop_proc_copartic_nao_w.tx_apropriacao * (vl_beneficiario_w - vl_total_apropriado_w)) / tx_aprop_copartic_nao_w
					where	nr_sequencia 	= aprop_proc_copartic_nao_w.nr_sequencia;
				end loop;
			end if;
		elsif (vl_total_apropriado_w > vl_liberado_w) then
			select	count(1)
			into STRICT	qt_aprop_nao_copartic_w
			from	pls_conta_proc_aprop
			where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
			and	ie_coparticipacao = 'N'
			and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
			and	vl_apropriado > (vl_total_apropriado_w - vl_liberado_w);
			
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_aprop_a_descontar_w
			from	pls_centro_apropriacao	a,
				pls_conta_proc_aprop	b
			where	a.nr_sequencia 		= b.nr_seq_centro_aprop
			and	b.nr_seq_conta_proc 	= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
			and	((qt_aprop_nao_copartic_w > 0 and b.ie_coparticipacao = 'N')
			or (qt_aprop_nao_copartic_w = 0 and coalesce(ie_responsavel_apropriacao,'1') = '1'))
			and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
			and	b.vl_apropriado > (vl_total_apropriado_w - vl_liberado_w);
			
			if (coalesce(nr_seq_aprop_a_descontar_w::text, '') = '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_aprop_a_descontar_w
				from	pls_centro_apropriacao	a,
					pls_conta_proc_aprop	b
				where	a.nr_sequencia 		= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_proc 	= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
				and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
				and	b.vl_apropriado > (vl_total_apropriado_w - vl_liberado_w);
			end if;
			
			if (nr_seq_aprop_a_descontar_w IS NOT NULL AND nr_seq_aprop_a_descontar_w::text <> '') then
				update	pls_conta_proc_aprop
				set	vl_apropriado = vl_apropriado - (vl_total_apropriado_w - vl_liberado_w)
				where	nr_sequencia = nr_seq_aprop_a_descontar_w;
			end if;
		end if;
		
		select	sum(vl_beneficiario)
		into STRICT	vl_total_beneficiario_w
		from	pls_conta_proc_aprop
		where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
		and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''));
		
		if (vl_total_beneficiario_w > vl_beneficiario_w) then
			select	count(1)
			into STRICT	qt_aprop_nao_copartic_w
			from	pls_conta_proc_aprop
			where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
			and	ie_coparticipacao = 'N'
			and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
			and	vl_beneficiario > (vl_total_beneficiario_w - vl_beneficiario_w);
			
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_aprop_a_descontar_w
			from	pls_centro_apropriacao	a,
				pls_conta_proc_aprop	b
			where	a.nr_sequencia 		= b.nr_seq_centro_aprop
			and	b.nr_seq_conta_proc 	= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
			and	((qt_aprop_nao_copartic_w > 0 and b.ie_coparticipacao = 'N')
			or (qt_aprop_nao_copartic_w = 0 and coalesce(ie_responsavel_apropriacao,'1') = '1'))
			and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
			and	b.vl_beneficiario > (vl_total_beneficiario_w - vl_beneficiario_w);
			
			if (coalesce(nr_seq_aprop_a_descontar_w::text, '') = '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_aprop_a_descontar_w
				from	pls_centro_apropriacao	a,
					pls_conta_proc_aprop	b
				where	a.nr_sequencia 		= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_proc 	= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
				and	((nr_seq_proc_rec	= current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_proc_rec_w')::pls_rec_glosa_proc.nr_sequencia%coalesce(type::text, '') = ''))
				and	b.vl_beneficiario > (vl_total_beneficiario_w - vl_beneficiario_w);
			end if;
			
			if (nr_seq_aprop_a_descontar_w IS NOT NULL AND nr_seq_aprop_a_descontar_w::text <> '') then
				update	pls_conta_proc_aprop
				set	vl_beneficiario = vl_beneficiario - (vl_total_beneficiario_w - vl_beneficiario_w)
				where	nr_sequencia = nr_seq_aprop_a_descontar_w;
			end if;
		end if;
		
		if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
			qt_apropriada_w := current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.qt_procedimento;
		else
			qt_apropriada_w := 1;
		end if;
		
		
		update	pls_conta_proc_aprop
		set	qt_apropriada = qt_apropriada_w
		where	nr_seq_conta_proc = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia
		and	ie_coparticipacao = 'N';
	elsif (current_setting('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w')::varchar(255) = 'M') then
		select	sum(vl_apropriado)
		into STRICT	vl_total_apropriado_w
		from	pls_conta_mat_aprop
		where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
		and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''));
		
		if (coalesce(current_setting('pls_apropriacao_pck.ie_recurso_glosa_w')::varchar(10),'N') = 'N') then
			vl_liberado_w		:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_liberado;
			vl_beneficiario_w	:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_beneficiario;
		else
			select	max(vl_acatado)
			into STRICT	vl_liberado_w
			from	pls_rec_glosa_mat
			where	nr_sequencia	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type;
			
			vl_beneficiario_w	:= vl_liberado_w;
		end if;
		
		if (vl_total_apropriado_w < vl_liberado_w) then
			select	count(1)
			into STRICT	qt_copartic_nao_w
			from	pls_conta_mat_aprop
			where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
			and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
			and	ie_coparticipacao = 'N';
			
			if (qt_copartic_nao_w = 1) then
				select	coalesce(sum(vl_apropriado),0)
				into STRICT	vl_prov_benef_w
				from	pls_conta_mat_aprop
				where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
				and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
				and	ie_coparticipacao = 'S';
			
				update	pls_conta_mat_aprop
				set	vl_apropriado = vl_liberado_w - vl_prov_benef_w
				where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
				and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
				and	ie_coparticipacao = 'N';
			elsif (qt_copartic_nao_w > 1) then
				select	sum(a.tx_apropriacao)
				into STRICT	tx_aprop_copartic_nao_w
				from	pls_regra_copartic_aprop	a,
					pls_conta_mat_aprop		b
				where	a.nr_seq_regra 			= b.nr_seq_regra_copartic
				and	a.nr_seq_centro_apropriacao  	= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_mat 		= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
				and	((nr_seq_mat_rec		= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
				and	b.ie_coparticipacao		= 'N';
				
				for aprop_proc_copartic_nao_w in aprop_proc_copartic_nao(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia) loop
					update	pls_conta_mat_aprop
					set	vl_apropriado 	= (aprop_proc_copartic_nao_w.tx_apropriacao * (vl_beneficiario_w - vl_total_apropriado_w)) / tx_aprop_copartic_nao_w
					where	nr_sequencia 	= aprop_proc_copartic_nao_w.nr_sequencia;
				end loop;
			end if;
		elsif (vl_total_apropriado_w > vl_liberado_w) then
			select	count(1)
			into STRICT	qt_aprop_nao_copartic_w
			from	pls_conta_mat_aprop
			where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
			and	ie_coparticipacao = 'N'
			and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
			and	vl_apropriado > (vl_total_apropriado_w - vl_liberado_w);
			
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_aprop_a_descontar_w
			from	pls_centro_apropriacao	a,
				pls_conta_mat_aprop	b
			where	a.nr_sequencia 		= b.nr_seq_centro_aprop
			and	b.nr_seq_conta_mat 	= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
			and	((qt_aprop_nao_copartic_w > 0 and b.ie_coparticipacao = 'N')
			or (qt_aprop_nao_copartic_w = 0 and coalesce(ie_responsavel_apropriacao,'1') = '1'))
			and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
			and	b.vl_apropriado > (vl_total_apropriado_w - vl_liberado_w);
			
			if (coalesce(nr_seq_aprop_a_descontar_w::text, '') = '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_aprop_a_descontar_w
				from	pls_centro_apropriacao	a,
					pls_conta_mat_aprop	b
				where	a.nr_sequencia 		= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_mat 	= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
				and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
				and	b.vl_apropriado > (vl_total_apropriado_w - vl_liberado_w);
			end if;
			
			if (nr_seq_aprop_a_descontar_w IS NOT NULL AND nr_seq_aprop_a_descontar_w::text <> '') then
				update	pls_conta_mat_aprop
				set	vl_apropriado = vl_apropriado - (vl_total_apropriado_w - vl_liberado_w)
				where	nr_sequencia = nr_seq_aprop_a_descontar_w;
			end if;
		end if;
		
		select	sum(vl_beneficiario)
		into STRICT	vl_total_beneficiario_w
		from	pls_conta_mat_aprop
		where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
		and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''));
		
		if (vl_total_beneficiario_w > vl_beneficiario_w) then
			select	count(1)
			into STRICT	qt_aprop_nao_copartic_w
			from	pls_conta_mat_aprop
			where	nr_seq_conta_mat = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
			and	ie_coparticipacao = 'N'
			and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
			and	vl_beneficiario > (vl_total_beneficiario_w - vl_beneficiario_w);
			
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_aprop_a_descontar_w
			from	pls_centro_apropriacao	a,
				pls_conta_mat_aprop	b
			where	a.nr_sequencia 		= b.nr_seq_centro_aprop
			and	b.nr_seq_conta_mat 	= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
			and	((qt_aprop_nao_copartic_w > 0 and b.ie_coparticipacao = 'N')
			or (qt_aprop_nao_copartic_w = 0 and coalesce(ie_responsavel_apropriacao,'1') = '1'))
			and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
			and	b.vl_beneficiario > (vl_total_beneficiario_w - vl_beneficiario_w);
			
			if (coalesce(nr_seq_aprop_a_descontar_w::text, '') = '') then
				select	max(b.nr_sequencia)
				into STRICT	nr_seq_aprop_a_descontar_w
				from	pls_centro_apropriacao	a,
					pls_conta_mat_aprop	b
				where	a.nr_sequencia 		= b.nr_seq_centro_aprop
				and	b.nr_seq_conta_mat 	= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia
				and	((nr_seq_mat_rec	= current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%type) or (current_setting('pls_apropriacao_pck.nr_seq_mat_rec_w')::pls_rec_glosa_mat.nr_sequencia%coalesce(type::text, '') = ''))
				and	b.vl_beneficiario > (vl_total_beneficiario_w - vl_beneficiario_w);
			end if;
			
			if (nr_seq_aprop_a_descontar_w IS NOT NULL AND nr_seq_aprop_a_descontar_w::text <> '') then
				update	pls_conta_mat_aprop
				set	vl_beneficiario = vl_beneficiario - (vl_total_beneficiario_w - vl_beneficiario_w)
				where	nr_sequencia = nr_seq_aprop_a_descontar_w;
			end if;
		end if;
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_apropriacao_pck.iterar_regras_coparticipacao ( ie_tipo_p text default 'C') FROM PUBLIC;
