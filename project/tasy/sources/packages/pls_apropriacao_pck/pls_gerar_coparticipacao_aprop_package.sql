-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_apropriacao_pck.pls_gerar_coparticipacao_aprop ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

	regras_copartic CURSOR FOR
		SELECT	distinct nr_seq_regra_copartic
		from	pls_conta_proc_aprop
		where	nr_seq_conta_proc = nr_seq_conta_proc_p
		
union all

		SELECT	distinct nr_seq_regra_copartic
		from	pls_conta_mat_aprop
		where	nr_seq_conta_mat = nr_seq_conta_mat_p;
	
	apropriacoes_procedimento CURSOR(nr_seq_regra_copartic_p	pls_regra_copartic.nr_sequencia%type) FOR
		SELECT	a.*,
			(CASE WHEN (b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') THEN 'C' ELSE (CASE WHEN (b.nr_seq_intercambio IS NOT NULL AND b.nr_seq_intercambio::text <> '') THEN 'I' ELSE 'P' END) END)	ie_origem_regra,
			c.tx_apropriacao,
			c.ie_tipo_apropriacao	c_ie_tipo_aprop
		from	pls_conta_proc_aprop		a,
			pls_regra_copartic		b,
			pls_regra_copartic_aprop	c
		where	a.nr_seq_regra_copartic	= b.nr_sequencia
		and	c.nr_sequencia		= a.nr_seq_regra_copart_aprop
		and	b.nr_sequencia		= nr_seq_regra_copartic_p
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	a.ie_coparticipacao	= 'S'
		and	a.vl_apropriado 	<> 0
		
union all

		SELECT	a.*,
			(CASE WHEN (b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') THEN 'C' ELSE (CASE WHEN (b.nr_seq_intercambio IS NOT NULL AND b.nr_seq_intercambio::text <> '') THEN 'I' ELSE 'P' END) END)	ie_origem_regra,
			c.tx_apropriacao,
			c.ie_tipo_apropriacao c_ie_tipo_aprop
		from	pls_conta_proc_aprop		a,
			pls_regra_copartic		b,
			pls_regra_copartic_aprop	c
		where	a.nr_seq_regra_copartic	= b.nr_sequencia
		and	c.nr_sequencia		= a.nr_seq_regra_copart_aprop
		and	b.nr_sequencia		= nr_seq_regra_copartic_p
		and	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	a.ie_coparticipacao	= 'S'
		and	a.vl_apropriado 	= 0
		and (a.nr_seq_regra_copar_exc IS NOT NULL AND a.nr_seq_regra_copar_exc::text <> '')
		order by c_ie_tipo_aprop;
	
	apropriacoes_material CURSOR(nr_seq_regra_copartic_p	pls_regra_copartic.nr_sequencia%type) FOR
		SELECT	a.*,
			b.vl_maximo_copartic,
			(CASE WHEN (b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') THEN 'C' ELSE (CASE WHEN (b.nr_seq_intercambio IS NOT NULL AND b.nr_seq_intercambio::text <> '') THEN 'I' ELSE 'P' END) END)	ie_origem_regra,
			c.tx_apropriacao,
			c.ie_tipo_apropriacao	c_ie_tipo_aprop
		from	pls_conta_mat_aprop		a,
			pls_regra_copartic		b,
			pls_regra_copartic_aprop	c
		where	a.nr_seq_regra_copartic = b.nr_sequencia
		and	c.nr_sequencia		= a.nr_seq_regra_copart_aprop
		and	b.nr_sequencia		= nr_seq_regra_copartic_p
		and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	a.ie_coparticipacao	= 'S'
		and	a.vl_apropriado 	<> 0
		
union all

		SELECT	a.*,
			b.vl_maximo_copartic,
			(CASE WHEN (b.nr_seq_contrato IS NOT NULL AND b.nr_seq_contrato::text <> '') THEN 'C' ELSE (CASE WHEN (b.nr_seq_intercambio IS NOT NULL AND b.nr_seq_intercambio::text <> '') THEN 'I' ELSE 'P' END) END)	ie_origem_regra,
			c.tx_apropriacao,
			c.ie_tipo_apropriacao	c_ie_tipo_aprop
		from	pls_conta_mat_aprop		a,
			pls_regra_copartic		b,
			pls_regra_copartic_aprop	c
		where	a.nr_seq_regra_copartic = b.nr_sequencia
		and	c.nr_sequencia		= a.nr_seq_regra_copart_aprop
		and	b.nr_sequencia		= nr_seq_regra_copartic_p
		and	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	a.ie_coparticipacao	= 'S'
		and	a.vl_apropriado 	= 0
		and (a.nr_seq_regra_copar_exc IS NOT NULL AND a.nr_seq_regra_copar_exc::text <> '')
		order by c_ie_tipo_aprop;
	
	ie_status_mensalidade_w		varchar(1);
	ie_primeira_apropriacao_w	boolean := true;
	vl_total_copartic_conta_w	double precision := 0;
	vl_coparticipacao_w		double precision := 0;
	nr_seq_conta_coparticipacao_w	pls_conta_coparticipacao.nr_sequencia%type;
	qt_itens_cobrados_w		pls_conta_proc_aprop.qt_apropriada%type;
	pls_regra_copartic_w		pls_regra_copartic%rowtype;
	nr_seq_conta_copartic_aprop_w	pls_conta_copartic_aprop.nr_sequencia%type;
	ie_gerar_copartic_w		varchar(1);
	ie_cobrar_pos_estab_w		varchar(1) := 'N';
	qt_registros_w			integer := 0;
	dt_coparticipacao_w		timestamp;
	ie_glosa_w				varchar(1);
	ie_tipo_valor_w			pls_regra_preco_copartic.ie_tipo_valor%type;
	nr_seq_regra_copartic_w	pls_regra_preco_copartic.nr_sequencia%type;	
	ie_multi_internacao_w	pls_regra_preco_copartic.ie_multi_internacao%type;
	vl_base_w				pls_conta_coparticipacao.vl_base_copartic%type;
	
BEGIN
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		PERFORM set_config('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w', 'P', false);
		
		select	*
		into STRICT	current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype
		from	pls_conta_proc
		where	nr_sequencia = nr_seq_conta_proc_p;
		
		if ( coalesce(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_cobranca_prevista,'N') <> 'S') then
		
			CALL CALL pls_apropriacao_pck.carregar_variaveis_pck(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_seq_conta, null, nm_usuario_p);
			
			ie_status_mensalidade_w := pls_apropriacao_pck.get_ie_status_mensalidade(current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_guia);
			ie_gerar_copartic_w	:= 'N';
		
			
			ie_cobrar_pos_estab_w	:= pls_obter_se_pos_estab(current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_estabelecimento, get_dt_autorizacao);
			
			if (ie_gerar_copartic_w = 'N') and (ie_cobrar_pos_estab_w = 'N') then
				
				for regras_copartic_w in regras_copartic loop
					begin
					select	*
					into STRICT	pls_regra_copartic_w
					from	pls_regra_copartic
					where	nr_sequencia = regras_copartic_w.nr_seq_regra_copartic;
					exception
					when others then
						pls_regra_copartic_w := null;
					end;
					
					ie_primeira_apropriacao_w := true;
					
					for apropriacoes_procedimento_w in apropriacoes_procedimento(regras_copartic_w.nr_seq_regra_copartic) loop
						if (ie_primeira_apropriacao_w) then
						
							select	count(1)
							into STRICT	qt_registros_w
							from	pls_conta_coparticipacao
							where	nr_seq_conta_proc	= nr_seq_conta_proc_p;
						
							if (qt_registros_w = 0) then
								select	coalesce(max(qt_apropriada), 0)
								into STRICT	qt_itens_cobrados_w
								from	pls_conta_proc_aprop
								where	nr_seq_conta_proc	= nr_seq_conta_proc_p
								and	nr_seq_regra_copartic	= regras_copartic_w.nr_seq_regra_copartic;
								
								select	nextval('pls_conta_coparticipacao_seq')
								into STRICT	nr_seq_conta_coparticipacao_w
								;
								
								
								dt_coparticipacao_w	:= coalesce(get_dt_autorizacao, pls_obter_data_preco_item(current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia, 'P'));	
								ie_glosa_w	:= current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_glosa;																
								vl_base_w := current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_unitario;
								if ( current_setting('pls_apropriacao_pck.pls_parametros_w')::pls_parametros%rowtype.ie_calculo_coparticipacao = 'R') then
									pls_obter_tipo_valor_copartic(	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, 		dt_coparticipacao_w, 	wheb_usuario_pck.get_nm_usuario,
																	'0', current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_origem_conta,	ie_glosa_w,
																	current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec,
																	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_solic_ref,	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_clinica,	ie_tipo_valor_w,
																	nr_seq_regra_copartic_w,	ie_multi_internacao_w);														
											
									if ( ie_tipo_valor_w = '6') then
													
										 vl_base_w := current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_proc_copartic;													
									
									
									end if;
								end if;
								
								insert into pls_conta_coparticipacao(
									nr_sequencia,
									nr_seq_conta_proc,
									vl_coparticipacao,
									tx_coparticipacao,
									nr_seq_conta,
									ie_status_mensalidade,
									ie_origem_regra,
									vl_base_copartic,
									qt_liberada_copartic,
									ie_calculo_coparticipacao,
									nr_seq_regra_copartic,
									nm_usuario,
									nm_usuario_nrec,
									dt_atualizacao,
									dt_atualizacao_nrec,
									ie_ato_cooperado,
									ie_tipo_protocolo,
									ie_tipo_guia,
									dt_mes_competencia,
									ie_tipo_segurado,
									nr_seq_segurado,
									nr_seq_protocolo,
									ie_preco,
									nr_seq_prestador_atend,
									nr_seq_prestador_exec,
									ie_tipo_prestador_atend,
									ie_tipo_prestador_exec,
									ie_status_coparticipacao)
								values (	nr_seq_conta_coparticipacao_w,
									nr_seq_conta_proc_p,
									0,
									0,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia,
									ie_status_mensalidade_w,
									apropriacoes_procedimento_w.ie_origem_regra,
									vl_base_w,
									qt_itens_cobrados_w,
									'P',
									apropriacoes_procedimento_w.nr_seq_regra_copartic,
									nm_usuario_p,
									nm_usuario_p,
									clock_timestamp(),
									clock_timestamp(),
									current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_ato_cooperado,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_guia,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.dt_mes_competencia,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_segurado,
									current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_sequencia,
									current_setting('pls_apropriacao_pck.pls_plano_w')::pls_plano%rowtype.ie_preco,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec,
									current_setting('pls_apropriacao_pck.ie_tipo_prestador_atend_w')::varchar(2),
									current_setting('pls_apropriacao_pck.ie_tipo_prestador_exec_w')::varchar(2),
									CASE WHEN coalesce(apropriacoes_procedimento_w.nr_seq_regra_copar_exc::text, '') = '' THEN  null  ELSE 'N' END );								
								ie_primeira_apropriacao_w := false;
							end if;
						end if;
						
						if (nr_seq_conta_coparticipacao_w IS NOT NULL AND nr_seq_conta_coparticipacao_w::text <> '') then
							vl_coparticipacao_w	  := vl_coparticipacao_w + apropriacoes_procedimento_w.vl_apropriado;
							
							select	nextval('pls_conta_copartic_aprop_seq')
							into STRICT	nr_seq_conta_copartic_aprop_w
							;
							
							insert into pls_conta_copartic_aprop(	nr_sequencia,nr_seq_conta_coparticipacao,nr_seq_centro_apropriacao,vl_apropriacao,
								nm_usuario,nm_usuario_nrec,dt_atualizacao,dt_atualizacao_nrec)
							values (	nr_seq_conta_copartic_aprop_w,nr_seq_conta_coparticipacao_w,apropriacoes_procedimento_w.nr_seq_centro_aprop,coalesce(apropriacoes_procedimento_w.vl_apropriado,0),
								nm_usuario_p,nm_usuario_p,clock_timestamp(),clock_timestamp());
						end if;
					end loop;
					
					if (vl_coparticipacao_w <> 0) then
						if (coalesce(qt_itens_cobrados_w,0) = 0) then
							qt_itens_cobrados_w	:= 1;
						end if;
													
						update	pls_conta_coparticipacao
						set	vl_coparticipacao_unit	= coalesce((vl_coparticipacao_w / qt_itens_cobrados_w),0),
							vl_coparticipacao	= coalesce(vl_coparticipacao_w,0),
							tx_coparticipacao	= coalesce(((vl_coparticipacao_w / current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.vl_liberado) * 100),0),
							vl_provisao		= coalesce(vl_coparticipacao_w,0)
						where	nr_sequencia		= nr_seq_conta_coparticipacao_w;
						
						update	pls_conta_proc
						set	vl_coparticipacao = coalesce(vl_coparticipacao_w,0)
						where	nr_sequencia	  = current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.nr_sequencia;
						
						if (current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo = 'R') then
							select 	sum(vl_coparticipacao)
							into STRICT	vl_total_copartic_conta_w
							from	pls_conta_proc
							where	nr_seq_conta	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
						else
							select	sum(vl_coparticipacao)
							into STRICT	vl_total_copartic_conta_w
							from	pls_conta_coparticipacao
							where	nr_seq_conta	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
						end if;
						
						if (vl_total_copartic_conta_w > 0) then
							update	pls_conta
							set	vl_coparticipacao	= vl_total_copartic_conta_w
							where	nr_sequencia		= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
						end if;
					end if;
				end loop;
			end if;
		end if;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		PERFORM set_config('pls_apropriacao_pck.ie_gerando_conta_proc_mat_w', 'M', false);
		
		select	*
		into STRICT	current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype
		from	pls_conta_mat
		where	nr_sequencia = nr_seq_conta_mat_p;
			
		if ( coalesce(current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.ie_cobranca_prevista, 'N') <> 'S') then
		
			CALL CALL pls_apropriacao_pck.carregar_variaveis_pck(current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_seq_conta, null, nm_usuario_p);
			
			ie_status_mensalidade_w := pls_apropriacao_pck.get_ie_status_mensalidade(current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_guia);
			ie_gerar_copartic_w	:= 'N';
					
			ie_cobrar_pos_estab_w	:= pls_obter_se_pos_estab(current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.cd_estabelecimento, get_dt_autorizacao);

			if (ie_gerar_copartic_w = 'N') and (ie_cobrar_pos_estab_w = 'N') then
				
				for regras_copartic_w in regras_copartic loop
					select	*
					into STRICT	pls_regra_copartic_w
					from	pls_regra_copartic
					where	nr_sequencia = regras_copartic_w.nr_seq_regra_copartic;
					
					ie_primeira_apropriacao_w := true;
					
					for apropriacoes_material_w in apropriacoes_material(regras_copartic_w.nr_seq_regra_copartic) loop
						if (ie_primeira_apropriacao_w) then
							
							select	count(1)
							into STRICT	qt_registros_w
							from	pls_conta_coparticipacao
							where	nr_seq_conta_mat	= nr_seq_conta_mat_p;
							
							if (qt_registros_w = 0) then
								select	coalesce(max(qt_apropriada), 0)
								into STRICT	qt_itens_cobrados_w
								from	pls_conta_mat_aprop
								where	nr_seq_conta_mat	= nr_seq_conta_mat_p
								and	nr_seq_regra_copartic	= regras_copartic_w.nr_seq_regra_copartic;
								
								select	nextval('pls_conta_coparticipacao_seq')
								into STRICT	nr_seq_conta_coparticipacao_w
								;
																
								dt_coparticipacao_w	:= coalesce(get_dt_autorizacao, coalesce(current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.dt_atendimento, clock_timestamp()));
								ie_glosa_w	:= current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.ie_glosa;
								
								vl_base_w := current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_unitario;
								if ( current_setting('pls_apropriacao_pck.pls_parametros_w')::pls_parametros%rowtype.ie_calculo_coparticipacao = 'R') then
									pls_obter_tipo_valor_copartic(	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_segurado, 		dt_coparticipacao_w, 	wheb_usuario_pck.get_nm_usuario,
																	'0', current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_origem_conta,	ie_glosa_w,
																	current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia, current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec,
																	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_solic_ref,	current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_clinica,	ie_tipo_valor_w,
																	nr_seq_regra_copartic_w,	ie_multi_internacao_w);														
											
									if ( ie_tipo_valor_w = '6') then
													
										 vl_base_w := current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_mat_copartic;													
									
									
									end if;
								end if;
								
								insert into pls_conta_coparticipacao(
									nr_sequencia,
									nr_seq_conta_mat,
									vl_coparticipacao,
									tx_coparticipacao,
									nr_seq_conta,
									ie_status_mensalidade,
									ie_origem_regra,
									vl_base_copartic,
									qt_liberada_copartic,
									ie_calculo_coparticipacao,
									nr_seq_regra_copartic,
									nm_usuario,
									nm_usuario_nrec,
									dt_atualizacao,
									dt_atualizacao_nrec,
									ie_ato_cooperado,
									ie_tipo_protocolo,
									ie_tipo_guia,
									dt_mes_competencia,
									ie_tipo_segurado,
									nr_seq_segurado,
									nr_seq_protocolo,
									ie_preco,
									nr_seq_prestador_atend,
									nr_seq_prestador_exec,
									ie_tipo_prestador_atend,
									ie_tipo_prestador_exec,
									ie_status_coparticipacao)
								values (	nr_seq_conta_coparticipacao_w,
									nr_seq_conta_mat_p,
									0,
									0,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia,
									ie_status_mensalidade_w,
									apropriacoes_material_w.ie_origem_regra,
									vl_base_w,
									qt_itens_cobrados_w,
									'P',
									apropriacoes_material_w.nr_seq_regra_copartic,
									nm_usuario_p,
									nm_usuario_p,
									clock_timestamp(),
									clock_timestamp(),
									current_setting('pls_apropriacao_pck.pls_conta_proc_w')::pls_conta_proc%rowtype.ie_ato_cooperado,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_guia,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.dt_mes_competencia,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.ie_tipo_segurado,
									current_setting('pls_apropriacao_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_sequencia,
									current_setting('pls_apropriacao_pck.pls_plano_w')::pls_plano%rowtype.ie_preco,
									current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.nr_seq_prestador,
									current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_seq_prestador_exec,
									current_setting('pls_apropriacao_pck.ie_tipo_prestador_atend_w')::varchar(2),
									current_setting('pls_apropriacao_pck.ie_tipo_prestador_exec_w')::varchar(2),
									CASE WHEN coalesce(apropriacoes_material_w.nr_seq_regra_copar_exc::text, '') = '' THEN  null  ELSE 'N' END );
								
								ie_primeira_apropriacao_w := false;
							end if;
						end if;
						
						if (nr_seq_conta_coparticipacao_w IS NOT NULL AND nr_seq_conta_coparticipacao_w::text <> '') then
							vl_coparticipacao_w	  := vl_coparticipacao_w + apropriacoes_material_w.vl_apropriado;
						
							select	nextval('pls_conta_copartic_aprop_seq')
							into STRICT	nr_seq_conta_copartic_aprop_w
							;
													
							insert into pls_conta_copartic_aprop(	nr_sequencia,nr_seq_conta_coparticipacao,nr_seq_centro_apropriacao,vl_apropriacao,
									nm_usuario,nm_usuario_nrec,dt_atualizacao,dt_atualizacao_nrec	)
							values (	nr_seq_conta_copartic_aprop_w,nr_seq_conta_coparticipacao_w,apropriacoes_material_w.nr_seq_centro_aprop,apropriacoes_material_w.vl_apropriado,
									nm_usuario_p,nm_usuario_p,clock_timestamp(),clock_timestamp());
						end if;
					end loop;
					
					if (vl_coparticipacao_w <> 0) then										
					
						update	pls_conta_coparticipacao
						set	vl_coparticipacao_unit	= (vl_coparticipacao_w / qt_itens_cobrados_w),
							vl_coparticipacao	= vl_coparticipacao_w,
							tx_coparticipacao	= (vl_coparticipacao_w / current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.vl_liberado) * 100,
							vl_provisao		= vl_coparticipacao_w
						where	nr_sequencia		= nr_seq_conta_coparticipacao_w;
						
						update	pls_conta_mat
						set	vl_participacao = vl_coparticipacao_w
						where	nr_sequencia	  = current_setting('pls_apropriacao_pck.pls_conta_mat_w')::pls_conta_mat%rowtype.nr_sequencia;
						
						if (current_setting('pls_apropriacao_pck.pls_protocolo_conta_w')::pls_protocolo_conta%rowtype.ie_tipo_protocolo = 'R') then
							select 	sum(vl_participacao)
							into STRICT	vl_total_copartic_conta_w
							from	pls_conta_mat
							where	nr_seq_conta	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
						else
							select	sum(vl_coparticipacao)
							into STRICT	vl_total_copartic_conta_w
							from	pls_conta_coparticipacao
							where	nr_seq_conta	= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
						end if;
						
						if (vl_total_copartic_conta_w > 0) then
							update	pls_conta
							set	vl_coparticipacao	= vl_total_copartic_conta_w
							where	nr_sequencia		= current_setting('pls_apropriacao_pck.pls_conta_w')::pls_conta%rowtype.nr_sequencia;
						end if;
					end if;
				end loop;
			end if;
		end if;
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_apropriacao_pck.pls_gerar_coparticipacao_aprop ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
