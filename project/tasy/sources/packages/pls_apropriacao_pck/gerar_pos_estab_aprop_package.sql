-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_apropriacao_pck.gerar_pos_estab_aprop (nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_proc_rec_p pls_rec_glosa_proc.nr_sequencia%type, nr_seq_mat_rec_p pls_rec_glosa_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

	
	vl_total_benef_w		pls_conta_proc_aprop.vl_beneficiario%type;
	nr_seq_conta_pos_estab_w	pls_conta_pos_estabelecido.nr_sequencia%type;
	vl_beneficiario_pos_w		pls_conta_pos_estabelecido.vl_beneficiario%type;
	pr_proporcao_w				double precision := 1;
	vl_difereca_w				double precision;
	
	C02 CURSOR FOR
		SELECT	a.nr_seq_centro_aprop	nr_seq_centro_aprop,
			a.vl_apropriado		vl_beneficiario,
			c.nr_sequencia		nr_seq_conta_pos_estab,
			c.vl_beneficiario	vl_beneficiario_pos
		from	pls_conta_proc_aprop		a,
			pls_conta_proc			b,
			pls_conta_pos_estabelecido	c
		where	a.nr_seq_conta_proc	= b.nr_sequencia
		and	b.nr_sequencia		= c.nr_seq_conta_proc
		and	b.nr_sequencia		= nr_seq_conta_proc_p
		and	((c.nr_seq_proc_rec	= nr_seq_proc_rec_p) or (coalesce(nr_seq_proc_rec_p::text, '') = ''))
		and	((a.nr_seq_proc_rec	= nr_seq_proc_rec_p) or (coalesce(nr_seq_proc_rec_p::text, '') = ''))
		and	(a.vl_apropriado IS NOT NULL AND a.vl_apropriado::text <> '')
		and	a.ie_coparticipacao = 'S'
		and c.ie_situacao = 'A'
		
union all

		SELECT	a.nr_seq_centro_aprop	nr_seq_centro_aprop,
			a.vl_apropriado		vl_beneficiario,
			c.nr_sequencia		nr_seq_conta_pos_estab,
			c.vl_beneficiario	vl_beneficiario_pos
		from	pls_conta_mat_aprop		a,
			pls_conta_mat			b,
			pls_conta_pos_estabelecido	c
		where	a.nr_seq_conta_mat	= b.nr_sequencia
		and	b.nr_sequencia		= c.nr_seq_conta_mat
		and	b.nr_sequencia		= nr_seq_conta_mat_p
		and	((c.nr_seq_mat_rec	= nr_seq_mat_rec_p) or (coalesce(nr_seq_mat_rec_p::text, '') = ''))
		and	((a.nr_seq_mat_rec	= nr_seq_mat_rec_p) or (coalesce(nr_seq_mat_rec_p::text, '') = ''))
		and	(a.vl_apropriado IS NOT NULL AND a.vl_apropriado::text <> '')		
		and	a.ie_coparticipacao = 'S'
		and c.ie_situacao = 'A';
		
	c03 CURSOR(nr_seq_conta_pos_estab_pc		pls_conta_pos_estabelecido.nr_sequencia%type)FOR	
		SELECT 	vl_materiais_calc,
				vl_custo_operacional_calc, 
				vl_medico_calc, 
				vl_taxa_co, 
				vl_taxa_material, 
				vl_taxa_servico,
				vl_beneficiario,
				(vl_materiais_calc + vl_custo_operacional_calc + vl_medico_calc + vl_taxa_co + vl_taxa_material + vl_taxa_servico) vl_total_pos
		from pls_conta_pos_estabelecido
		where nr_sequencia = nr_seq_conta_pos_estab_pc;
		
BEGIN
	vl_total_benef_w :=0;
	for C02_w in C02 loop
		insert into pls_conta_pos_estab_aprop(nr_sequencia,				dt_atualizacao, nm_usuario,	nr_seq_conta_pos_estab,		nr_seq_centro_apropriacao, vl_apropriacao)
		values (nextval('pls_conta_pos_estab_aprop_seq'),	clock_timestamp(),	nm_usuario_p,	C02_w.nr_seq_conta_pos_estab,	C02_w.nr_seq_centro_aprop, C02_w.vl_beneficiario);
		
		vl_total_benef_w 		:= vl_total_benef_w + C02_w.vl_beneficiario;
		nr_seq_conta_pos_estab_w	:= C02_w.nr_seq_conta_pos_estab;
		vl_beneficiario_pos_w		:= C02_w.vl_beneficiario_pos;
	end loop;

	if (vl_beneficiario_pos_w <> vl_total_benef_w) then	
	pr_proporcao_w := dividir(vl_total_benef_w,vl_beneficiario_pos_w);	
	end if;
		
	if (nr_seq_conta_pos_estab_w IS NOT NULL AND nr_seq_conta_pos_estab_w::text <> '') then	

		update 	pls_conta_pos_estabelecido
		set	vl_beneficiario = vl_total_benef_w,
		vl_materiais_calc = vl_materiais_calc * pr_proporcao_w,
		vl_custo_operacional_calc = vl_custo_operacional_calc * pr_proporcao_w,
		vl_medico_calc = vl_medico_calc * pr_proporcao_w,
		vl_taxa_co = vl_taxa_co * pr_proporcao_w,
		vl_taxa_material = vl_taxa_material * pr_proporcao_w,
		vl_taxa_servico = vl_taxa_servico * pr_proporcao_w,
		vl_provisao = vl_total_benef_w,
    	vl_medico = vl_medico * pr_proporcao_w,
    	vl_custo_operacional = vl_custo_operacional * pr_proporcao_w,
    	vl_materiais = vl_materiais * pr_proporcao_w
		where	nr_sequencia = nr_seq_conta_pos_estab_w;
		
		
			for r_c03_w in C03(nr_seq_conta_pos_estab_w) loop
			
				if (r_c03_w.vl_beneficiario <> r_c03_w.vl_total_pos) then
			
					vl_difereca_w := r_c03_w.vl_beneficiario - r_c03_w.vl_total_pos;
			
					if (r_c03_w.vl_medico_calc > r_c03_w.vl_custo_operacional_calc) and (r_c03_w.vl_medico_calc > r_c03_w.vl_materiais_calc) then
						update pls_conta_pos_estabelecido
						set vl_medico_calc = vl_medico_calc + vl_difereca_w
						where nr_sequencia = nr_seq_conta_pos_estab_w;
					
					elsif (r_c03_w.vl_custo_operacional_calc > r_c03_w.vl_materiais_calc) then
						update pls_conta_pos_estabelecido
						set vl_custo_operacional_calc = vl_custo_operacional_calc + vl_difereca_w
						where nr_sequencia = nr_seq_conta_pos_estab_w;
					
					else  						
						update pls_conta_pos_estabelecido
						set vl_materiais_calc = vl_materiais_calc + vl_difereca_w
						where nr_sequencia = nr_seq_conta_pos_estab_w;
					
					end if;
				end if;
			end loop;
				
	elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		delete 	FROM pls_conta_pos_estab_taxa a
		where	exists (SELECT	1
				from	pls_conta_pos_estabelecido x
				where	x.nr_seq_conta_proc = nr_seq_conta_proc_p
				and	x.nr_sequencia = a.nr_seq_conta_pos_estab
				and	x.ie_status_faturamento	!= 'A'
				and	x.ie_cobrar_mensalidade	!= 'A'
				and	((x.nr_seq_proc_rec	= nr_seq_proc_rec_p) or (coalesce(nr_seq_proc_rec_p::text, '') = '')));
				
		delete	from	pls_conta_pos_estabelecido
		where	nr_seq_conta_proc = nr_seq_conta_proc_p
		and	ie_status_faturamento	!= 'A'
		and	ie_cobrar_mensalidade	!= 'A'
		and	((nr_seq_proc_rec	= nr_seq_proc_rec_p) or (coalesce(nr_seq_proc_rec_p::text, '') = ''));
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		delete 	FROM pls_conta_pos_estab_taxa a
		where	exists (SELECT	1
				from	pls_conta_pos_estabelecido x
				where	x.nr_seq_conta_mat = nr_seq_conta_mat_p
				and	x.nr_sequencia = a.nr_seq_conta_pos_estab
				and	x.ie_status_faturamento	!= 'A'
				and	x.ie_cobrar_mensalidade	!= 'A'
				and	((x.nr_seq_mat_rec	= nr_seq_mat_rec_p) or (coalesce(nr_seq_mat_rec_p::text, '') = '')));
	
		delete	from	pls_conta_pos_estabelecido
		where	nr_seq_conta_mat = nr_seq_conta_mat_p
		and	ie_status_faturamento	!= 'A'
		and	ie_cobrar_mensalidade	!= 'A'
		and	((nr_seq_mat_rec	= nr_seq_mat_rec_p) or (coalesce(nr_seq_mat_rec_p::text, '') = ''));
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_apropriacao_pck.gerar_pos_estab_aprop (nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_proc_rec_p pls_rec_glosa_proc.nr_sequencia%type, nr_seq_mat_rec_p pls_rec_glosa_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
