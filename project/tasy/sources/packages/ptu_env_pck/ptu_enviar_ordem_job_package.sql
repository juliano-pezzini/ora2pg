-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


----------------------------------------------------------------------------------JOB para envio dos pedidos de autorizacao para as ordens de servicos recebidas de forma automatica-----------------------------------------------------------------------------------



CREATE OR REPLACE PROCEDURE ptu_env_pck.ptu_enviar_ordem_job ( nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ie_funcao_scs_w			varchar(1);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
cd_medico_solicitante_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_uni_exec_w		pls_congenere.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_prestador_exec_w		pls_prestador.nr_sequencia%type;
qt_reg_consulta_w		integer	:= 0;
qt_reg_internacao_w		integer	:= 0;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_tipo_acomodacao_w	pls_plano_acomodacao.nr_seq_tipo_acomodacao%type;
nr_seq_categoria_w		pls_plano_acomodacao.nr_seq_categoria%type;
ie_estagio_w			pls_requisicao.ie_estagio%type;
nr_seq_pedido_w			ptu_pedido_autorizacao.nr_sequencia%type;

nm_recem_nascido_w		pls_requisicao.nm_recem_nascido%type;
dt_nasc_recem_nascido_w		pls_requisicao.dt_nasc_recem_nascido%type;
nr_seq_motivo_inclusao_w	pls_requisicao.nr_seq_motivo_inclusao%type;

ds_pedido_autorizacao_w		pls_end_webservice_scs.ds_pedido_autorizacao%type;
ds_ip_proxy_w			pls_end_webservice_scs.ds_ip_proxy%type;
ds_porta_proxy_w		pls_end_webservice_scs.ds_porta_proxy%type;
ds_usuario_proxy_w		pls_end_webservice_scs.ds_usuario_proxy%type;
ds_senha_proxy_w		pls_end_webservice_scs.ds_senha_proxy%type;
ds_senha_certificado_w		pls_end_webservice_scs.ds_senha_certificado%type;
ds_caminho_certificado_w	pls_end_webservice_scs.ds_caminho_certificado%type;
ds_webservice_envio_w		pls_end_webservice_scs.ds_webservice_envio%type;
ds_porta_w			pls_end_webservice_scs.ds_porta%type;

req_w				utl_http.req;
res_w				utl_http.resp;
url_w				varchar(100);
ds_resposta_w			varchar(32647);
ds_parametros_w			varchar(1000);
ds_retorno_w			varchar(255);

nr_seq_projeto_w		xml_projeto.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_segurado,
		ie_recem_nascido,
		nr_seq_prestador_req,
		nr_seq_prestador,
		cd_unimed_prestador,
		dt_prov_atendimento,
		dt_validade,
		ie_urg_emerg,
		ie_liminar,
		cd_municipio_ibge,
		ie_tipo_acidente,
		sg_conselho_profissional,
		nr_conselho_profissional,
		uf_conselho_profissional,
		ds_observacao,
		ds_ind_clinica,
		cd_unimed_executora,
		ie_tipo_internacao,
		cd_doenca_cid,
		nm_benficiario,
		substr(pls_obter_dados_segurado(nr_seq_segurado ,'NAS'),1,255) dt_nascimento
	from	ptu_requisicao_ordem_serv
	where	ie_estagio	= 8
	and	trunc(dt_atualizacao_nrec) > trunc(clock_timestamp() - interval '15 days');

BEGIN

--Obter funcao utilizada pelo SCS

ie_funcao_scs_w		:= pls_obter_funcao_scs;

cd_estabelecimento_w	:= ptu_obter_estab_padrao;

for	c01_w	in c01	loop
	begin
		begin
			select	cd_pessoa_fisica
			into STRICT	cd_medico_solicitante_w
			from	pls_prestador
			where	nr_sequencia	= c01_w.nr_seq_prestador_req;

			select	nr_sequencia
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	nr_sequencia	= c01_w.nr_seq_prestador_req;

			select	nr_sequencia
			into STRICT	nr_seq_prestador_exec_w
			from	pls_prestador
			where	nr_sequencia	= c01_w.nr_seq_prestador;
		exception
		when others then
			cd_medico_solicitante_w	:= '';
			nr_seq_prestador_w	:= null;
			nr_seq_prestador_exec_w	:= null;
		end;

		begin
			nr_seq_uni_exec_w	:= pls_obter_seq_cooperativa(lpad(c01_w.cd_unimed_executora,4,0));
		exception
		when others then
			nr_seq_uni_exec_w	:= null;
		end;

		if (coalesce(c01_w.ie_recem_nascido, 'N') = 'S') then
			nm_recem_nascido_w	:= c01_w.nm_benficiario;
			dt_nasc_recem_nascido_w	:= c01_w.dt_nascimento;
		else
			nm_recem_nascido_w	:= null;
			dt_nasc_recem_nascido_w	:= null;
		end if;

		select	max(nr_sequencia)
		into STRICT	nr_seq_motivo_inclusao_w
		from	pls_motivo_inc_requisicao
		where	ie_ordem_serv_interc = 'S';

		if	((c01_w.ie_tipo_internacao IS NOT NULL AND c01_w.ie_tipo_internacao::text <> '' AND nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') or (coalesce(c01_w.ie_tipo_internacao::text, '') = '')) then
			if ( ie_funcao_scs_w = 'R' ) then	--Funcao OPS - Requisicao para autorizacao
				insert	into pls_requisicao(nr_sequencia, nm_usuario_nrec, dt_atualizacao_nrec,
					nm_usuario, dt_atualizacao, cd_estabelecimento,
					nr_seq_segurado, dt_requisicao, nr_seq_prestador,
					cd_medico_solicitante, nr_seq_prestador_exec,
					qt_dia_solicitado, qt_dia_autorizado, dt_internacao_sugerida,
					dt_entrada_hospital, dt_alta_hospital, nr_seq_motivo_prorrogacao,
					ie_carater_atendimento, ie_tipo_atendimento, ie_consulta_urgencia,
					ie_tipo_consulta, ie_tipo_saida, cd_especialidade,
					ds_indicacao_clinica, ds_observacao, nr_seq_uni_exec,
					nr_seq_clinica, ie_tipo_gat, ie_recem_nascido,
					nm_recem_nascido, dt_nasc_recem_nascido, nr_seq_motivo_inclusao)
				values ( nextval('pls_requisicao_seq'), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), cd_estabelecimento_w,
					c01_w.nr_seq_segurado, clock_timestamp(), nr_seq_prestador_w,
					cd_medico_solicitante_w, nr_seq_prestador_exec_w,
					null, null, c01_w.dt_prov_atendimento,
					null, null, null,
					CASE WHEN c01_w.ie_urg_emerg='S' THEN  'U'  ELSE 'E' END , null, c01_w.ie_urg_emerg,
					null, null, null,
					c01_w.ds_ind_clinica, c01_w.ds_observacao, nr_seq_uni_exec_w,
					c01_w.ie_tipo_internacao, 'N', coalesce(c01_w.ie_recem_nascido, 'N'),
					nm_recem_nascido_w, dt_nasc_recem_nascido_w, nr_seq_motivo_inclusao_w) returning nr_sequencia into nr_seq_requisicao_w;

				CALL ptu_gerar_autoriz_ordem_serv(c01_w.nr_sequencia, null, nr_seq_requisicao_w, 'PA', nm_usuario_p);

				CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', expressao_pck.obter_desc_expressao(962797), null, nm_usuario_p);

				if (c01_w.ie_tipo_acidente IS NOT NULL AND c01_w.ie_tipo_acidente::text <> '') then
					/*PTU
					1 = Acidente de Trabalho
					2 = Acidente de Transito
					3 = Acidente - Outros
					9 = Nao acidente
					*/

					update	pls_requisicao_diagnostico
					set	ie_tipo_doenca		= '',
						ie_indicacao_acidente	= CASE WHEN c01_w.ie_tipo_acidente=1 THEN 0 WHEN c01_w.ie_tipo_acidente=2 THEN 1 WHEN c01_w.ie_tipo_acidente=3 THEN 2  ELSE 9 END ,
						ie_classificacao	= 'P',
						cd_doenca		= c01_w.cd_doenca_cid,
						ds_diagnostico		= ''
					where	nr_seq_requisicao	= nr_seq_requisicao_w;
				end if;

				select	count(1)
				into STRICT	qt_reg_consulta_w
				from	pls_requisicao_proc	a,
					procedimento		b
				where	a.nr_seq_requisicao	= nr_seq_requisicao_w
				and	a.cd_procedimento	= b.cd_procedimento
				and	b.ie_origem_proced	= a.ie_origem_proced
				and	b.cd_tipo_procedimento	= 71;

				select	count(1)
				into STRICT	qt_reg_internacao_w
				from	pls_requisicao_proc	a,
					procedimento		b
				where	a.nr_seq_requisicao	= nr_seq_requisicao_w
				and	a.cd_procedimento	= b.cd_procedimento
				and	b.ie_origem_proced	= a.ie_origem_proced
				and	b.cd_tipo_procedimento	= 37;

				if (qt_reg_internacao_w	> 0) then
					begin
						select	nr_seq_plano
						into STRICT	nr_seq_plano_w
						from	pls_requisicao
						where	nr_sequencia	= nr_seq_requisicao_w;
					exception
					when others then
						nr_seq_plano_w		:= null;
					end;

					select	max(a.nr_seq_tipo_acomodacao)
					into STRICT	nr_seq_tipo_acomodacao_w
					from	pls_plano_acomodacao	a,
						pls_plano b
					where	b.nr_sequencia		= nr_seq_plano_w
					and	a.nr_seq_plano		= b.nr_sequencia
					and	a.ie_acomod_padrao 	= 'S';

					if (coalesce(nr_seq_tipo_acomodacao_w::text, '') = '') then
						select	max(a.nr_seq_categoria)
						into STRICT	nr_seq_categoria_w
						from	pls_plano_acomodacao	a,
							pls_plano b
						where	b.nr_sequencia		= nr_seq_plano_w
						and	a.nr_seq_plano		= b.nr_sequencia
						and	a.ie_acomod_padrao 	= 'S';

						select	max(nr_seq_tipo_acomodacao)
						into STRICT	nr_seq_tipo_acomodacao_w
						from	pls_regra_categoria
						where	nr_seq_categoria	= nr_seq_categoria_w
						and	ie_acomod_padrao	= 'S';
					end if;

					update	pls_requisicao
					set	ie_tipo_guia		= '1',
						ie_carater_atendimento	= '',
						nr_seq_tipo_acomodacao 	= nr_seq_tipo_acomodacao_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_requisicao_w;
				elsif (qt_reg_consulta_w	> 0) and (qt_reg_internacao_w	= 0) then

					update	pls_requisicao
					set	ie_tipo_guia		= '3',
						ie_tipo_consulta	= 4,
						ie_carater_atendimento	= '',
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_requisicao_w;
				else
					update	pls_requisicao
					set	ie_tipo_guia	= '2',
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_requisicao_w;
				end if;

				CALL pls_consistir_requisicao(nr_seq_requisicao_w, cd_estabelecimento_w, nm_usuario_p);

				select	ie_estagio
				into STRICT	ie_estagio_w
				from	pls_requisicao
				where	nr_sequencia	= nr_seq_requisicao_w;

				nr_seq_guia_w	:= null;
			elsif ( ie_funcao_scs_w = 'A' ) then	--Funcao OPS - Autorizacao
				insert	into pls_guia_plano(nr_sequencia, nm_usuario_nrec, dt_atualizacao_nrec,
					nm_usuario, dt_atualizacao, cd_estabelecimento,
					nr_seq_segurado, dt_solicitacao, nr_seq_prestador,
					cd_medico_solicitante, dt_internacao_sugerida,
					ie_carater_internacao, ie_tipo_atend_tiss, ie_consulta_urgencia,
					ie_tipo_consulta, ie_tipo_saida, cd_especialidade,
					ds_indicacao_clinica, ds_observacao, nr_seq_uni_exec,
					nr_seq_clinica, ie_tipo_gat, ie_recem_nascido,
					nm_recem_nascido, dt_nasc_recem_nascido,
					ie_tipo_guia, ie_status, ie_tipo_processo)
				values ( nextval('pls_guia_plano_seq'), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), cd_estabelecimento_w,
					c01_w.nr_seq_segurado, clock_timestamp(), nr_seq_prestador_exec_w,
					cd_medico_solicitante_w, c01_w.dt_prov_atendimento,
					CASE WHEN c01_w.ie_urg_emerg='S' THEN  'U'  ELSE 'E' END , null, c01_w.ie_urg_emerg,
					null, null, null,
					c01_w.ds_ind_clinica, c01_w.ds_observacao, nr_seq_uni_exec_w,
					c01_w.ie_tipo_internacao, 'N', coalesce(c01_w.ie_recem_nascido, 'N'),
					nm_recem_nascido_w, dt_nasc_recem_nascido_w,
					'2', '2', 'I') returning nr_sequencia into nr_seq_guia_w;

				CALL ptu_gerar_autoriz_ordem_serv(c01_w.nr_sequencia, nr_seq_guia_w, null, 'PA', nm_usuario_p);

				CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, expressao_pck.obter_desc_expressao(962799), '', nm_usuario_p);

				if (c01_w.ie_tipo_acidente IS NOT NULL AND c01_w.ie_tipo_acidente::text <> '') then
					/*PTU
					1 = Acidente de Trabalho
					2 = Acidente de Transito
					3 = Acidente - Outros
					9 = Nao acidente
					*/

					update	pls_diagnostico
					set	ie_tipo_doenca		= '',
						ie_indicacao_acidente	= CASE WHEN c01_w.ie_tipo_acidente=1 THEN 0 WHEN c01_w.ie_tipo_acidente=2 THEN 1 WHEN c01_w.ie_tipo_acidente=3 THEN 2  ELSE 9 END ,
						ie_classificacao	= 'P',
						cd_doenca		= c01_w.cd_doenca_cid,
						ds_diagnostico		= ''
					where	nr_seq_guia		= nr_seq_guia_w;
				end if;

				select	count(1)
				into STRICT	qt_reg_consulta_w
				from	pls_guia_plano_proc	a,
					procedimento		b
				where	nr_seq_guia		= nr_seq_guia_w
				and	a.cd_procedimento	= b.cd_procedimento
				and	b.ie_origem_proced	= a.ie_origem_proced
				and	b.cd_tipo_procedimento	= 71;

				select	count(1)
				into STRICT	qt_reg_internacao_w
				from	pls_guia_plano_proc	a,
					procedimento		b
				where	nr_seq_guia		= nr_seq_guia_w
				and	a.cd_procedimento	= b.cd_procedimento
				and	b.ie_origem_proced	= a.ie_origem_proced
				and	b.cd_tipo_procedimento	= 37;

				if (qt_reg_internacao_w	> 0) then
					begin
						select	nr_seq_plano
						into STRICT	nr_seq_plano_w
						from	pls_guia_plano
						where	nr_sequencia	= nr_seq_guia_w;
					exception
					when others then
						nr_seq_plano_w		:= null;
					end;

					select	max(a.nr_seq_tipo_acomodacao)
					into STRICT	nr_seq_tipo_acomodacao_w
					from	pls_plano_acomodacao	a,
						pls_plano b
					where	b.nr_sequencia		= nr_seq_plano_w
					and	a.nr_seq_plano		= b.nr_sequencia
					and	a.ie_acomod_padrao 	= 'S';

					if (coalesce(nr_seq_tipo_acomodacao_w::text, '') = '') then
						select	max(a.nr_seq_categoria)
						into STRICT	nr_seq_categoria_w
						from	pls_plano_acomodacao	a,
							pls_plano b
						where	b.nr_sequencia		= nr_seq_plano_w
						and	a.nr_seq_plano		= b.nr_sequencia
						and	a.ie_acomod_padrao 	= 'S';

						select	max(nr_seq_tipo_acomodacao)
						into STRICT	nr_seq_tipo_acomodacao_w
						from	pls_regra_categoria
						where	nr_seq_categoria	= nr_seq_categoria_w
						and	ie_acomod_padrao	= 'S';
					end if;

					update	pls_guia_plano
					set	ie_tipo_guia		= '1',
						ie_carater_internacao	= '',
						nr_seq_tipo_acomodacao 	= nr_seq_tipo_acomodacao_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_guia_w;
				elsif (qt_reg_consulta_w	> 0) and (qt_reg_internacao_w	= 0) then
					update	pls_guia_plano
					set	ie_tipo_guia		= '3',
						ie_tipo_consulta	= 4,
						ie_carater_internacao	= '',
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_guia_w;
				else
					update	pls_guia_plano
					set	ie_tipo_guia	= '2',
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_guia_w;
				end if;

				CALL pls_consistir_guia(nr_seq_guia_w, cd_estabelecimento_w, nm_usuario_p);

				select	ie_estagio
				into STRICT	ie_estagio_w
				from	pls_guia_plano
				where	nr_sequencia	= nr_seq_guia_w;

				nr_seq_requisicao_w	:= null;
			end if;

			if	(nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '' AND ie_estagio_w = 10) or
				(nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '' AND ie_estagio_w = 12) then

				begin
					nr_seq_pedido_w := ptu_env_pck.ptu_env_00600_v70(nr_seq_guia_w, nr_seq_requisicao_w, pls_obter_versao_scs, cd_estabelecimento_w, nm_usuario_p, nr_seq_pedido_w);
				exception
				when others then
					if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
						CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', expressao_pck.obter_desc_expressao(962801) || sqlerrm, null, nm_usuario_p);
					elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
						CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, expressao_pck.obter_desc_expressao(962801) || sqlerrm, '', nm_usuario_p);
					end if;
				end;

				begin
					select	ds_pedido_autorizacao,
						ds_ip_proxy,
						ds_porta_proxy,
						ds_usuario_proxy,
						ds_senha_proxy,
						ds_senha_certificado,
						ds_caminho_certificado,
						ds_webservice_envio,
						ds_porta
					into STRICT	ds_pedido_autorizacao_w,
						ds_ip_proxy_w,
						ds_porta_proxy_w,
						ds_usuario_proxy_w,
						ds_senha_proxy_w,
						ds_senha_certificado_w,
						ds_caminho_certificado_w,
						ds_webservice_envio_w,
						ds_porta_w
					from	pls_end_webservice_scs
					where	ie_situacao = 'A';

					if (ds_porta_w IS NOT NULL AND ds_porta_w::text <> '') then
						if (pls_obter_versao_scs = '090') then
							url_w	:= 'http://' || ds_webservice_envio_w || ':' || ds_porta_w || '/SCS90Server/WScsServletProcessor';
							nr_seq_projeto_w	:= 103270;
						else	
							url_w	:= 'http://' || ds_webservice_envio_w || ':' || ds_porta_w || '/SCS80Server/WScsServletProcessor';
							nr_seq_projeto_w	:= 102923;
						end if;

						utl_http.set_transfer_timeout(30);

						ds_parametros_w	:= 	'xml='				||
									'<nrSequenciaProjeto>'		|| nr_seq_projeto_w		|| '</nrSequenciaProjeto>'||
									'<cdTransacaoWebService>'	|| 1				|| '</cdTransacaoWebService>' ||
									'<nrSequenciaTransacao>'	|| nr_seq_pedido_w		|| '</nrSequenciaTransacao>' ||
									'<nmUsuario>'			|| nm_usuario_p			|| '</nmUsuario>' ||
									'<cdEstabelecimento>'		|| cd_estabelecimento_w		|| '</cdEstabelecimento>' ||
									'<urlWSDLServico>'		|| ds_pedido_autorizacao_w	|| '</urlWSDLServico>' ||
									'<ipProxy>'			|| ds_ip_proxy_w		|| '</ipProxy>' ||
									'<portaProxy>'			|| ds_porta_proxy_w		|| '</portaProxy>' ||
									'<usuarioProxy>'		|| ds_usuario_proxy_w		|| '</usuarioProxy>' ||
									'<senhaProxy>'			|| ds_senha_proxy_w		|| '</senhaProxy>' ||
									'<senhaCertificado>'		|| ds_senha_certificado_w	|| '</senhaCertificado>' ||
									'<caminhoCertificado>'		|| ds_caminho_certificado_w	|| '</caminhoCertificado>';

						req_w           := utl_http.begin_request(url_w , method => 'POST');
						utl_http.set_header(req_w, 'user-agent', 'mozilla/4.0');
						utl_http.set_header(r => req_w, name => 'Content-Type', value => 'application/x-www-form-urlencoded;charset=utf-8');
						utl_http.set_header(r => req_w, name => 'Content-Length', value => length(ds_parametros_w));
						utl_http.write_text(r => req_w, data => ds_parametros_w);

						res_w := utl_http.get_response(req_w);

						utl_http.read_line(res_w, ds_resposta_w);

						utl_http.end_response(res_w);

						ds_retorno_w		:= substr(ds_resposta_w, 1, 5);

						if (ds_retorno_w = 'ERRO#') then
							if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
								CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', substr(ds_resposta_w, 5, length(ds_resposta_w)), null, nm_usuario_p);
							elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
								CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, substr(ds_resposta_w, 5, length(ds_resposta_w)), '', nm_usuario_p);
							end if;
						end if;
					end if;
				exception
				when others then
					if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
						CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w, 'L', expressao_pck.obter_desc_expressao(962803) || sqlerrm, null, nm_usuario_p);
					elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
						CALL pls_guia_gravar_historico(nr_seq_guia_w, 2, expressao_pck.obter_desc_expressao(962803) || sqlerrm, '', nm_usuario_p);
					end if;
				end;
			end if;
		end if;
	exception
	when others then
		ds_retorno_w	:= '';
		rollback;
	end;
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_env_pck.ptu_enviar_ordem_job ( nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
