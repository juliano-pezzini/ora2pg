-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--------------------------------------------------------------------------------00412 Consulta de Dados do Beneficiario----------------------------------------------------------------------------------------------------------------------------------------------------------------



CREATE OR REPLACE PROCEDURE ptu_env_pck.ptu_env_00412_v70 ( cd_unimed_benef_p ptu_consulta_beneficiario.cd_unimed_beneficiario%type, cd_usuario_plano_p text, nm_beneficiario_p ptu_consulta_beneficiario.nm_beneficiario%type, sobrenome_benef_p ptu_consulta_beneficiario.sobrenome_beneficiario%type, dt_nascimento_p ptu_consulta_beneficiario.dt_nascimento%type, nr_versao_ptu_p ptu_consulta_beneficiario.nr_versao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_cpf_p ptu_consulta_beneficiario.nr_cpf%type, nr_cns_p ptu_consulta_beneficiario.nr_cns%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type default null, nr_seq_cons_benef_p INOUT ptu_consulta_beneficiario.nr_sequencia%type  DEFAULT NULL) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Preparar os dados para enviar o pedido de Consulta Dados Beneficiario a Unimed Destino
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ x] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

Verificar para passar o campo Dt nascimento, somente se houver valor
Verificar se o tratamento para a quantidade de caracteres da carteirinha nao pode ser feito direto no Delphi

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


cd_cooperativa_w		ptu_consulta_beneficiario.cd_unimed_executora%type;
cd_unimed_w			ptu_consulta_beneficiario.cd_unimed%type;
cd_usuario_plano_w		varchar(255);
nm_beneficiario_w		varchar(255);
nm_beneficiario_inicial_w	varchar(255);
ie_separa_nome_w		integer := 0;

ie_funcao_autorizador_w		pls_param_atend_geral.ie_funcao_autorizador%type;
ie_execucao_posterior_w		pls_param_importacao_guia.ie_execucao_posterior%type;


BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	ie_funcao_autorizador_w	:= pls_obter_param_atend_geral('FA');

	select	coalesce(max(ie_execucao_posterior),'N')
	into STRICT	ie_execucao_posterior_w
	from	pls_param_importacao_guia;

	-- Tratamento feito devido a uso da regra 'Disponibilizar requisicao para execucao futura' em OPS - Gestao de Operadoras > Parametros da OPS > Importacao XML guia,

	-- caso use a regra, tenta identificar primeiro se existe uma requisicao com a sequencia antes de verificar as guias.

	if (ie_funcao_autorizador_w = '2') and (ie_execucao_posterior_w = 'S') then
		begin
			select	substr(pls_obter_dados_segurado(nr_seq_segurado,'CR'),1,255),
				substr(pls_obter_dados_segurado(nr_seq_segurado,'N'),1,255)
			into STRICT	cd_usuario_plano_w,
				nm_beneficiario_inicial_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_guia_p
			and	ie_origem_solic	= 'W';
		exception
		when others then
			begin
				select	substr(pls_obter_dados_segurado(nr_seq_segurado,'CR'),1,255),
					substr(pls_obter_dados_segurado(nr_seq_segurado,'N'),1,255)
				into STRICT	cd_usuario_plano_w,
					nm_beneficiario_inicial_w
				from	pls_guia_plano
				where	nr_sequencia = nr_seq_guia_p;
			exception
			when others then
				cd_usuario_plano_w := '';
				nm_beneficiario_inicial_w := '';
			end;
		end;
	else
		select	substr(pls_obter_dados_segurado(nr_seq_segurado,'CR'),1,255),
			substr(pls_obter_dados_segurado(nr_seq_segurado,'N'),1,255)
		into STRICT	cd_usuario_plano_w,
			nm_beneficiario_inicial_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_p;
	end if;

	cd_unimed_w		:= substr(cd_usuario_plano_w,1,4);
	cd_usuario_plano_w	:= substr(cd_usuario_plano_w,5,17);

	select	position(' ' in nm_beneficiario_inicial_w)
	into STRICT	ie_separa_nome_w
	;

	select	substr(nm_beneficiario_inicial_w, 0, ie_separa_nome_w)
	into STRICT	nm_beneficiario_w
	;

	cd_cooperativa_w	:= pls_obter_unimed_estab(cd_estabelecimento_p);

	select	nextval('ptu_consulta_beneficiario_seq')
	into STRICT	nr_seq_cons_benef_p
	;

	insert	into ptu_consulta_beneficiario(nr_sequencia, cd_transacao, ie_tipo_cliente,
		cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
		dt_atualizacao, nm_usuario, cd_unimed,
		cd_usuario_plano, nm_beneficiario,
		sobrenome_beneficiario,  nm_usuario_nrec, dt_atualizacao_nrec,
		nr_versao)
	values (nr_seq_cons_benef_p, '00412', 'U',
		cd_cooperativa_w, cd_unimed_w, nr_seq_cons_benef_p,
		clock_timestamp(), nm_usuario_p, cd_unimed_w,
		cd_usuario_plano_w, substr(nm_beneficiario_w,1,25),
		'', nm_usuario_p, clock_timestamp(),
		pls_obter_versao_scs);

	commit;
else
	cd_cooperativa_w	:= pls_obter_unimed_estab(cd_estabelecimento_p);
	cd_unimed_w		:= substr(cd_usuario_plano_p,1,4);
	cd_usuario_plano_w	:= substr(cd_usuario_plano_p,5,17);

	select	nextval('ptu_consulta_beneficiario_seq')
	into STRICT	nr_seq_cons_benef_p
	;

	insert	into ptu_consulta_beneficiario(nr_sequencia, cd_transacao, ie_tipo_cliente,
		cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
		dt_atualizacao, nm_usuario, cd_unimed,
		cd_usuario_plano, dt_nascimento, nm_beneficiario,
		sobrenome_beneficiario,  nm_usuario_nrec, dt_atualizacao_nrec,
		nr_versao, nr_cpf, nr_cns)
	values (nr_seq_cons_benef_p, '00412', 'U',
		cd_cooperativa_w, cd_unimed_benef_p, nr_seq_cons_benef_p,
		clock_timestamp(), nm_usuario_p, cd_unimed_w,
		cd_usuario_plano_w, dt_nascimento_p, substr(nm_beneficiario_p,1,25),
		substr(sobrenome_benef_p,1,10),  nm_usuario_p, clock_timestamp(),
		pls_obter_versao_scs, nr_cpf_p, nr_cns_p);

	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_env_pck.ptu_env_00412_v70 ( cd_unimed_benef_p ptu_consulta_beneficiario.cd_unimed_beneficiario%type, cd_usuario_plano_p text, nm_beneficiario_p ptu_consulta_beneficiario.nm_beneficiario%type, sobrenome_benef_p ptu_consulta_beneficiario.sobrenome_beneficiario%type, dt_nascimento_p ptu_consulta_beneficiario.dt_nascimento%type, nr_versao_ptu_p ptu_consulta_beneficiario.nr_versao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_cpf_p ptu_consulta_beneficiario.nr_cpf%type, nr_cns_p ptu_consulta_beneficiario.nr_cns%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type default null, nr_seq_cons_benef_p INOUT ptu_consulta_beneficiario.nr_sequencia%type  DEFAULT NULL) FROM PUBLIC;
