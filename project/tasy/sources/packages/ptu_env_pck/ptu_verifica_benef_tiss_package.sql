-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

----------------------------------------------------------------------------------------------------------------------------------------------FIM---------------------------------------------------------------------------------------------------------------------------------------------------




CREATE OR REPLACE PROCEDURE ptu_env_pck.ptu_verifica_benef_tiss ( cd_usuario_plano_p pls_segurado_carteira.cd_usuario_plano%type, nm_beneficiario_p pls_guia_plano_imp.nm_beneficiario%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_segurado_p INOUT pls_segurado.nr_sequencia%type) AS $body$
DECLARE


cd_usuario_plano_w			pls_segurado_carteira.cd_usuario_plano%type;
cd_unimed_benef_w			varchar(4);
cd_unimed_exec_w			varchar(4);
nr_seq_segurado_w			pls_segurado.nr_sequencia%type;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
dt_validade_w				timestamp;
qt_cooperativa_benef_w			integer	:= 0;
nr_seq_consulta_benef_w			ptu_consulta_beneficiario.nr_sequencia%type;
ie_abrangencia_w			ptu_resp_nomes_benef.ie_abrangencia%type;
ie_tipo_acomodacao_w			ptu_resp_nomes_benef.ie_tipo_acomodacao%type;
nr_seq_plano_w				pls_plano.nr_sequencia%type;

ds_consulta_dados_benef_w		pls_end_webservice_scs.ds_consulta_dados_benef%type;
ds_ip_proxy_w				pls_end_webservice_scs.ds_ip_proxy%type;
ds_porta_proxy_w			pls_end_webservice_scs.ds_porta_proxy%type;
ds_usuario_proxy_w			pls_end_webservice_scs.ds_usuario_proxy%type;
ds_senha_proxy_w			pls_end_webservice_scs.ds_senha_proxy%type;
ds_senha_certificado_w			pls_end_webservice_scs.ds_senha_certificado%type;
ds_caminho_certificado_w		pls_end_webservice_scs.ds_caminho_certificado%type;
ds_webservice_envio_w			pls_end_webservice_scs.ds_webservice_envio%type;
ds_porta_w				pls_end_webservice_scs.ds_porta%type;
nr_seq_execucao_w			integer := 0;
nr_seq_resp_consulta_benef_w		ptu_resp_consulta_benef.nr_sequencia%type;
ie_confirmacao_w			ptu_resp_consulta_benef.ie_confirmacao%type;
nr_seq_dados_consulta_benef_w		ptu_resp_nomes_benef.nr_sequencia%type;
nr_seq_tipo_acomodacao_w		pls_tipo_acomodacao.nr_sequencia%type;
ie_consultar_benef_w			pls_param_intercambio_scs.ie_consultar_benef%type;
qt_regras_produto_w			integer := 0;

req_w					utl_http.req;
res_w					utl_http.resp;
url_w					varchar(100);
ds_resposta_w				varchar(32647);
ds_parametros_w				varchar(1000);
ds_retorno_w				varchar(255);

nr_seq_projeto_w			xml_projeto.nr_sequencia%type;


BEGIN

--Verifica qual o estabelecimento padrao utilizado no SCS

select	coalesce(max(cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	pls_parametros_scs
where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

cd_usuario_plano_w	:= lpad(cd_usuario_plano_p,17,'0');

select	max(b.nr_sequencia)
into STRICT	nr_seq_segurado_w
from    pls_segurado_carteira a,
	pls_segurado b
where   a.nr_cartao_intercambio	= cd_usuario_plano_w
and     a.nr_seq_segurado	= b.nr_sequencia
and	coalesce(b.dt_rescisao::text, '') = ''
and	coalesce(b.dt_cancelamento::text, '') = '';

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from    pls_segurado_carteira a,
		pls_segurado b
	where   a.cd_usuario_plano	= cd_usuario_plano_w
	and     a.nr_seq_segurado	= b.nr_sequencia
	and	coalesce(b.dt_rescisao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = '';

	cd_unimed_benef_w	:= substr(cd_usuario_plano_w,1,4);

	select	count(1)
	into STRICT	qt_cooperativa_benef_w
	from	pls_congenere
	where	cd_cooperativa = cd_unimed_benef_w;

	if (coalesce(nr_seq_segurado_w::text, '') = '') and (qt_cooperativa_benef_w > 0) then
		cd_unimed_exec_w	:= pls_obter_unimed_estab(cd_estabelecimento_w);
		dt_validade_w		:= trunc(clock_timestamp()) + 365;

		-----------------Realiza consulta de dados do beneficiario-------------------------------------------------------------------------------

		begin
			select	coalesce(ie_consultar_benef, 'N')
			into STRICT	ie_consultar_benef_w
			from	pls_param_intercambio_scs;

			select	count(1)
			into STRICT	qt_regras_produto_w
			from	pls_regra_plano_benef_web
			where	coalesce(ie_webservice,'N') = 'S'
			and	ie_situacao = 'A'
			and	ie_tipo_operacao = 'T';
		exception
		when others then
			ie_consultar_benef_w := 'N';
		end;
		if (ie_consultar_benef_w ='S') and (qt_regras_produto_w > 0) then
			begin

				nr_seq_consulta_benef_w := ptu_env_pck.ptu_env_00412_v70(cd_unimed_benef_w, cd_usuario_plano_w, nm_beneficiario_p, '', null, pls_obter_versao_scs, cd_estabelecimento_w, nm_usuario_p, null, null, null, nr_seq_consulta_benef_w);
			exception
			when others then
				nr_seq_plano_w := null;
			end;

			begin
				select	ds_consulta_dados_benef,
					ds_ip_proxy,
					ds_porta_proxy,
					ds_usuario_proxy,
					ds_senha_proxy,
					ds_senha_certificado,
					ds_caminho_certificado,
					ds_webservice_envio,
					ds_porta
				into STRICT	ds_consulta_dados_benef_w,
					ds_ip_proxy_w,
					ds_porta_proxy_w,
					ds_usuario_proxy_w,
					ds_senha_proxy_w,
					ds_senha_certificado_w,
					ds_caminho_certificado_w,
					ds_webservice_envio_w,
					ds_porta_w
				from	pls_end_webservice_scs
				where	ie_situacao = 'A';

				if (ds_porta_w IS NOT NULL AND ds_porta_w::text <> '') then
					if (pls_obter_versao_scs = '090') then
						url_w	:= 'http://' || ds_webservice_envio_w || ':' || ds_porta_w || '/SCS90Server/WScsServletProcessor';
						nr_seq_projeto_w	:= 103270;
					else	
						url_w	:= 'http://' || ds_webservice_envio_w || ':' || ds_porta_w || '/SCS80Server/WScsServletProcessor';
						nr_seq_projeto_w	:= 102923;
					end if;

					utl_http.set_transfer_timeout(30);

					ds_parametros_w	:= 	'xml='					||
								'<nrSequenciaProjeto>'			|| nr_seq_projeto_w			|| '</nrSequenciaProjeto>'||
								'<cdTransacaoWebService>'		|| 30					|| '</cdTransacaoWebService>' ||
								'<nrSequenciaTransacao>'		|| nr_seq_consulta_benef_w		|| '</nrSequenciaTransacao>' ||
								'<nmUsuario>'				|| nm_usuario_p				|| '</nmUsuario>' ||
								'<cdEstabelecimento>'			|| cd_estabelecimento_w			|| '</cdEstabelecimento>' ||
								'<urlWSDLServico>'			|| ds_consulta_dados_benef_w		|| '</urlWSDLServico>' ||
								'<ipProxy>'				|| ds_ip_proxy_w			|| '</ipProxy>' ||
								'<portaProxy>'				|| ds_porta_proxy_w			|| '</portaProxy>' ||
								'<usuarioProxy>'			|| ds_usuario_proxy_w			|| '</usuarioProxy>' ||
								'<senhaProxy>'				|| ds_senha_proxy_w			|| '</senhaProxy>' ||
								'<senhaCertificado>'			|| ds_senha_certificado_w		|| '</senhaCertificado>' ||
								'<caminhoCertificado>'			|| ds_caminho_certificado_w		|| '</caminhoCertificado>';

					req_w           := utl_http.begin_request(url_w , method => 'POST');
					utl_http.set_header(req_w, 'user-agent', 'mozilla/4.0');
					utl_http.set_header(r => req_w, name => 'Content-Type', value => 'application/x-www-form-urlencoded;charset=utf-8');
					utl_http.set_header(r => req_w, name => 'Content-Length', value => length(ds_parametros_w));
					utl_http.write_text(r => req_w, data => ds_parametros_w);

					res_w := utl_http.get_response(req_w);

					utl_http.read_line(res_w, ds_resposta_w);

					utl_http.end_response(res_w);

					ds_retorno_w		:= substr(ds_resposta_w, 1, 5);

					if (ds_retorno_w = 'ERRO#') then
						nr_seq_plano_w := null;
					else
						nr_seq_execucao_w := obter_somente_numero(ds_resposta_w);

						select	nr_sequencia,
							ie_confirmacao
						into STRICT	nr_seq_resp_consulta_benef_w,
							ie_confirmacao_w
						from	ptu_resp_consulta_benef
						where	nr_seq_execucao = nr_seq_execucao_w;

						if (ie_confirmacao_w = 'S') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_dados_consulta_benef_w
							from	ptu_resp_nomes_benef
							where	nr_seq_resp_benef = nr_seq_resp_consulta_benef_w
							and	dt_validade_carteira = (SELECT	max(dt_validade_carteira)
											from	ptu_resp_nomes_benef
											where	nr_seq_resp_benef = nr_seq_resp_consulta_benef_w);

							select 	ie_abrangencia,
								ie_tipo_acomodacao
							into STRICT		ie_abrangencia_w,
								ie_tipo_acomodacao_w
							from 	ptu_resp_nomes_benef
							where	nr_sequencia = nr_seq_dados_consulta_benef_w;

							select 	max(nr_sequencia)
							into STRICT	nr_seq_tipo_acomodacao_w
							from 	pls_tipo_acomodacao
							where 	ie_tipo_acomodacao_ptu = ie_tipo_acomodacao_w
							and	ie_situacao = 'A'
							and	ie_identificacao_benef = 'S';

							if ((ie_abrangencia_w IS NOT NULL AND ie_abrangencia_w::text <> '') or (ie_tipo_acomodacao_w IS NOT NULL AND ie_tipo_acomodacao_w::text <> '')) then
								nr_seq_plano_w := pls_obter_plano_benef_web(nr_seq_tipo_acomodacao_w, ie_abrangencia_w, 'T',  null, 'W');
							else
								nr_seq_plano_w := null;
							end if;
						end if;
					end if;
				end if;
			exception
			when others then
				nr_seq_plano_w := null;
			end;
		else
			nr_seq_plano_w := null;
		end if;
		-------------------------------------------------------------FIM--------------------------------------------------------------------------------


		ptu_gerar_novo_beneficiario(	nm_beneficiario_p, cd_unimed_benef_w, cd_usuario_plano_w,
					cd_unimed_exec_w, dt_validade_w, cd_estabelecimento_w,
					nm_usuario_p, 0, nr_seq_segurado_p, nr_seq_plano_w);
	else
		nr_seq_segurado_p	:= nr_seq_segurado_w;
	end if;
else
	nr_seq_segurado_p	:= nr_seq_segurado_w;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_env_pck.ptu_verifica_benef_tiss ( cd_usuario_plano_p pls_segurado_carteira.cd_usuario_plano%type, nm_beneficiario_p pls_guia_plano_imp.nm_beneficiario%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_segurado_p INOUT pls_segurado.nr_sequencia%type) FROM PUBLIC;
