-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION validar_integracao_pck.validacao_sms (cd_perfil_p text, nm_usuario_p text, cd_estabelecimento_p text) RETURNS varchar AS $body$
DECLARE

    host_w varchar(5000) := '';
    porta_w varchar(5000) := '';
    msg_erro_w varchar(15000) := '';
    sms_forma_envio_w varchar(500);
    sms_empresa_w varchar(500);
	
BEGIN
    sms_forma_envio_w := obter_valor_param_usuario(0,202,cd_perfil_p,nm_usuario_p, cd_estabelecimento_p);
    sms_empresa_w := obter_valor_param_usuario(0,89,cd_perfil_p,nm_usuario_p, cd_estabelecimento_p);


    if (sms_forma_envio_w <> 'W') then
      case sms_empresa_w
        when '1' then
          host_w := 'sms.vola.it';
          porta_w := 443;
        when '2' then
          host_w := 'www.twwwireless.com.br';
          porta_w := 8080;
        when '3' then
          host_w := 'webservices.twwwireless.com.br';
          porta_w := 8080;
        when '4' then
          host_w := 'system.human.com.br';
          porta_w := 8080;
        when '5' then
          host_w :=  obter_valor_param_usuario(9041,5,cd_perfil_p,nm_usuario_p, cd_estabelecimento_p);
          porta_w :=substr(host_w, position(':' in host_w) + 1, length(host_w));
          host_w := substr(host_w,1,position(':' in host_w)-1);
        when '7' then
          host_w :=  obter_valor_param_usuario(0,206,cd_perfil_p,nm_usuario_p, cd_estabelecimento_p);
          porta_w :=substr(host_w, position(':' in host_w) + 1, length(host_w));
          host_w := substr(host_w,1,position(':' in host_w)-1);
        when '8' then
          host_w := 'webservice.smsdigital.com.br';
          porta_w := 8080;
        else porta_w := '';
        end case;
    else
      host_w :=  obter_valor_param_usuario(9041,5,cd_perfil_p,nm_usuario_p, cd_estabelecimento_p);
      porta_w :=substr(host_w, position(':' in host_w) + 1, length(host_w));
      host_w := substr(host_w,1,position(':' in host_w)-1);
    end if;

    if (coalesce(host_w::text, '') = '') then
      msg_erro_w := VALIDAR_INTEGRACAO_METODO_PCK.tratar_mensagem(msg_erro_w, 'Não foi possível carregar o Host para validação.');
    else
      msg_erro_w := VALIDAR_INTEGRACAO_METODO_PCK.tratar_mensagem(msg_erro_w, VALIDAR_INTEGRACAO_METODO_PCK.validar_espaco(host_w));
      msg_erro_w := VALIDAR_INTEGRACAO_METODO_PCK.tratar_mensagem(msg_erro_w, VALIDAR_INTEGRACAO_METODO_PCK.validar_regra_acl(host_w));
      msg_erro_w := VALIDAR_INTEGRACAO_METODO_PCK.tratar_mensagem(msg_erro_w, 'Teste de conectividade "' || host_w || ':' || porta_w || '"' || chr(10) || ' - ' ||VALIDAR_INTEGRACAO_METODO_PCK.testar_conectividade(host_w, porta_w));
    end if;
    return msg_erro_w;
  end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION validar_integracao_pck.validacao_sms (cd_perfil_p text, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;
