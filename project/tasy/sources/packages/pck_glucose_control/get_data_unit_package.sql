-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


   --
CREATE OR REPLACE PROCEDURE pck_glucose_control.get_data_unit (dt_inicio_p timestamp, dt_fim_p timestamp, cd_unidade_p text, nr_relatorio_p bigint) AS $body$
DECLARE

      c1 CURSOR FOR
         SELECT mes_ano,
                dt_controle,
                --sum(dias) dias,
                sum(normal+hiper+hipo) dias,
                sum(normal) normal,
                trunc(100 * sum(normal) / sum(normal+hiper+hipo), 2) normal_perc,
                --trunc((sum(normal) / decode(sum(normal+hiper+hipo),0,1,sum(dias))) * 100, 2) normal_perc,
                sum(hiper) hiper,
                trunc(100 * sum(hiper) / sum(normal+hiper+hipo), 2) hiper_perc,
                --trunc((sum(hiper) / decode(sum(dias),0,1,sum(dias))) * 100, 2) hiper_perc,
                sum(hipo) hipo,
                trunc(100 * sum(hipo) / sum(normal+hiper+hipo), 2) hipo_perc,
                --trunc((sum(hipo) / decode(sum(dias),0,1,sum(dias))) * 100, 2) hipo_perc,
                cd_setor_atendimento
           from (SELECT distinct to_char(to_date(rg.dt_controle), 'FMMONTH"-" yyyy', 'nls_date_language=english') mes_ano,
                                 rg.nr_atendimento,
                                 (select coalesce(sum(r.qtd), 0)
                                    from rel_resultado_glicemia_v r
                                   where to_char(r.dt_controle, 'YYYY-MM') =  to_char(rg.dt_controle, 'YYYY-MM')
                                     and r.nr_atendimento = rg.nr_atendimento) total,
                                 obter_dias_norm_glicose(rg.nr_atendimento, dt_inicio_p, fim_dia(dt_fim_p)) dias,
                                 (select coalesce(sum(r.qtd), 0)
                                    from rel_resultado_glicemia_v r
                                   where r.ds_resultado =
                                         'Glucose Compliance'
                                     and to_char(r.dt_controle, 'YYYY-MM') = to_char(rg.dt_controle, 'YYYY-MM')
                                     And r.nr_atendimento = rg.nr_atendimento) normal,
                                 (select coalesce(sum(r.qtd), 0)
                                    from rel_resultado_glicemia_v r
                                   where r.ds_resultado = 'Low Glucose'
                                     and to_char(r.dt_controle, 'YYYY-MM') = to_char(rg.dt_controle, 'YYYY-MM')
                                     and r.nr_atendimento = rg.nr_atendimento) hipo,
                                 (select coalesce(sum(r.qtd), 0)
                                    from rel_resultado_glicemia_v r
                                   where r.ds_resultado = 'High Glucose'
                                     and to_char(r.dt_controle, 'YYYY-MM') = to_char(rg.dt_controle, 'YYYY-MM')
                                     and r.nr_atendimento = rg.nr_atendimento) hiper,
                                 to_char(rg.dt_controle, 'YYYY-MM') dt_controle,
                                 obter_setor_atendimento(rg.NR_ATENDIMENTO) cd_setor_atendimento
                   from rel_resultado_glicemia_v rg
                  where rg.dt_controle between dt_inicio_p and fim_dia(dt_fim_p)
                    and ((coalesce(cd_unidade_p::text, '') = '') or (obter_se_contido(obter_setor_atendimento(rg.nr_atendimento), cd_unidade_p) = 'S'))
                    and rg.nr_seq_protocolo = PKG_REPORT_DATA.GET_PROTOCOL(4)
                  group by to_char(rg.dt_controle, 'YYYY-MM'),
                           rg.dt_controle,
                           rg.nr_atendimento,
                           obter_setor_atendimento(rg.NR_ATENDIMENTO)
              ) alias49
          group by mes_ano, dt_controle, cd_setor_atendimento;
      r1 c1%rowtype;

BEGIN
      --Limpa tabela W
      delete FROM w_rep_glucose_control_unit
       where nm_usuario  = wheb_usuario_pck.get_nm_usuario
         and nr_relatorio = nr_relatorio_p;

      --Abre cursor principal
      open c1;
      loop
         fetch c1
            into r1;
         EXIT WHEN NOT FOUND; /* apply on c1 */

         
         insert into w_rep_glucose_control_unit(nm_usuario,
             dt_atualizacao,
             nr_relatorio,
             nr_mes_ano,
             dt_controle,
             nr_dias,
             nr_normal,
             nr_normal_perc,
             nr_hiper,
             nr_hiper_perc,
             nr_hipo,
             nr_hipo_perc,
             cd_setor_atendimento)
         values (wheb_usuario_pck.get_nm_usuario,
             clock_timestamp(),
             nr_relatorio_p,
             r1.mes_ano,
             r1.dt_controle,
             r1.dias,
             r1.normal,
             r1.normal_perc,
             r1.hiper,
             r1.hiper_perc,
             r1.hipo,
             r1.hipo_perc,
             r1.cd_setor_atendimento);

      end loop;
      close c1;

      commit;

      CALL pck_glucose_control.get_data_graph_unit(dt_inicio_p,
                     dt_fim_p,
                     cd_unidade_p,
                     nr_relatorio_p);
      --
   END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pck_glucose_control.get_data_unit (dt_inicio_p timestamp, dt_fim_p timestamp, cd_unidade_p text, nr_relatorio_p bigint) FROM PUBLIC;
