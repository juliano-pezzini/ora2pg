-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dashboard_html5_pck.atualizar_resumo () AS $body$
DECLARE

        /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Finalidade:  Atualizar dados de Resumo do Dashboard do HTML5
        ---------------------------------------------------------------------------------------------------------------------------------------------

        Locais de chamada direta: 
        [  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [X] Outros: Procedure atualizar_dashboard
         --------------------------------------------------------------------------------------------------------------------------------------------

        Pontos de atencao:
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


        c06 CURSOR FOR
            SELECT a.nr_seq_agrupamento,
                   'A' ie_tipo_informacao,
                   min(a.dt_prev_inicio_anal_fun) dt_prev_inicio_baseline,
                   max(a.dt_prev_fim_anal_fun) dt_prev_fim_baseline,
                   min(a.dt_prev_inicio_analise) dt_prev_inicio,
                   min(a.dt_real_inicio_analise) dt_real_inicio,
                   max(a.dt_prev_fim_analise) dt_prev_fim,
                   sum(a.qt_horas_cron_analise) qt_horas_previstas,
                   sum(a.qt_horas_total_analista) qt_horas_realizadas,
                   dividir(sum(a.qt_horas_cron_analise * dividir(a.pr_conclusao_analis, 100)), sum(a.qt_horas_cron_analise)) * 100 pr_realizado,
                   sum(a.qt_horas_cron_analise * dividir(a.pr_conclusao_analis, 100)) qt_horas_prev_ponderadas
              from funcoes_html5 a
             where (a.nr_seq_agrupamento IS NOT NULL AND a.nr_seq_agrupamento::text <> '')
               and a.ie_escopo_atual = 'S'
             group by a.nr_seq_agrupamento
            
union all

            SELECT a.nr_seq_agrupamento,
                   'D' ie_tipo_informacao,
                   min(a.dt_prev_inicio_prog_fun) dt_prev_inicio_baseline,
                   max(a.dt_prev_fim_prog_fun) dt_prev_fim_baseline,
                   min(a.dt_prev_inicio_prog) dt_prev_inicio,
                   min(a.dt_real_inicio_prog) dt_real_inicio,
                   max(a.dt_prev_fim_prog) dt_prev_fim,
                   sum(a.qt_horas_cron_prog) qt_horas_previstas,
                   sum(a.qt_horas_total_prog) qt_horas_realizadas,
                   dividir(sum(a.qt_horas_cron_prog * dividir(a.pr_conclusao_prog, 100)), sum(a.qt_horas_cron_prog)) * 100 pr_realizado,
                   sum(a.qt_horas_cron_prog * dividir(a.pr_conclusao_prog, 100)) qt_horas_prev_ponderadas
              from funcoes_html5 a
             where (a.nr_seq_agrupamento IS NOT NULL AND a.nr_seq_agrupamento::text <> '')
               and a.ie_escopo_atual = 'S'
             group by a.nr_seq_agrupamento
            
union all

            select a.nr_seq_agrupamento,
                   'V' ie_tipo_informacao,
                   min(a.dt_prev_inicio_teste_fun) dt_prev_inicio_baseline,
                   max(a.dt_prev_fim_teste_fun) dt_prev_fim_baseline,
                   min(a.dt_prev_inicio_teste) dt_prev_inicio,
                   min(a.dt_real_inicio_teste) dt_real_inicio,
                   max(a.dt_prev_fim_teste) dt_prev_fim,
                   sum(a.qt_horas_cron_teste) qt_horas_previstas,
                   sum(a.qt_horas_total_teste) qt_horas_realizadas,
                   dividir(sum(a.qt_horas_cron_teste * dividir(a.pr_conclusao_teste, 100)), sum(a.qt_horas_cron_teste)) * 100 pr_realizado,
                   sum(a.qt_horas_cron_teste * dividir(a.pr_conclusao_teste, 100)) qt_horas_prev_ponderadas
              from funcoes_html5 a
             where (a.nr_seq_agrupamento IS NOT NULL AND a.nr_seq_agrupamento::text <> '')
               and a.ie_escopo_atual = 'S'
             group by a.nr_seq_agrupamento
             order by 1,
                      2;

        pr_previsto_baseline_w       double precision;
        pr_previsto_w                double precision;
        pr_previsto_baseline_geral_w double precision;
        pr_previsto_geral_w          double precision;
        pr_realizado_geral_w         double precision;
        qt_horas_realizadas_geral_w  double precision := 0;
        qt_horas_previstas_geral_w   double precision := 0;
        qt_horas_prev_pond_geral_w   double precision := 0;
        nr_seq_resumo_w              bigint;
        dt_prev_ini_baseline_geral_w timestamp := null;
        dt_prev_ini_geral_w          timestamp := null;

    
BEGIN
    
        for c06_w in c06 loop
        
            if (c06_w.ie_tipo_informacao <> 'V') then
            
                pr_previsto_baseline_w := obter_pr_prev_crono(c06_w.dt_prev_inicio_baseline, c06_w.dt_prev_fim_baseline);
                pr_previsto_w          := obter_pr_prev_crono(c06_w.dt_prev_inicio, c06_w.dt_prev_fim);
                nr_seq_resumo_w        := dashboard_html5_pck.obter_nr_seq_resumo(c06_w.ie_tipo_informacao, c06_w.nr_seq_agrupamento);

                if nr_seq_resumo_w = 0 then
                    CALL dashboard_html5_pck.insert_funcoes_html5_resumo(c06_w.nr_seq_agrupamento,
                                                c06_w.ie_tipo_informacao,
                                                c06_w.qt_horas_previstas,
                                                c06_w.qt_horas_realizadas,
                                                pr_previsto_baseline_w,
                                                pr_previsto_w,
                                                c06_w.pr_realizado);
                else
                    CALL dashboard_html5_pck.update_funcoes_html5_resumo(nr_seq_resumo_w, c06_w.pr_realizado, c06_w.qt_horas_realizadas);
                end if;

                /*obter dados inicio para inserir registro ie_tipo_informacao = 'G' (geral) */


                if (c06_w.ie_tipo_informacao = 'A') then
                    dt_prev_ini_baseline_geral_w := c06_w.dt_prev_inicio_baseline;
                    dt_prev_ini_geral_w          := c06_w.dt_prev_inicio;
                end if;

                /*obter dados fim para inserir registro ie_tipo_informacao = 'G' (geral) */


                qt_horas_realizadas_geral_w := qt_horas_realizadas_geral_w + c06_w.qt_horas_realizadas;
                qt_horas_previstas_geral_w  := qt_horas_previstas_geral_w + c06_w.qt_horas_previstas;
                qt_horas_prev_pond_geral_w  := qt_horas_prev_pond_geral_w + c06_w.qt_horas_prev_ponderadas;

            else
            
                /*obter dados fim para inserir registro ie_tipo_informacao = 'G' (geral) */


                pr_previsto_baseline_geral_w := obter_pr_prev_crono(dt_prev_ini_baseline_geral_w, c06_w.dt_prev_fim_baseline);
                pr_previsto_geral_w          := obter_pr_prev_crono(dt_prev_ini_geral_w, c06_w.dt_prev_fim);
                pr_realizado_geral_w         := (qt_horas_prev_pond_geral_w / qt_horas_previstas_geral_w) * 100;
                nr_seq_resumo_w              := dashboard_html5_pck.obter_nr_seq_resumo('G', c06_w.nr_seq_agrupamento);

                if nr_seq_resumo_w = 0 then
                    CALL dashboard_html5_pck.insert_funcoes_html5_resumo(c06_w.nr_seq_agrupamento,
                                                'G',
                                                qt_horas_previstas_geral_w,
                                                qt_horas_realizadas_geral_w,
                                                pr_previsto_baseline_geral_w,
                                                pr_previsto_geral_w,
                                                pr_realizado_geral_w);
                else
                    CALL dashboard_html5_pck.update_funcoes_html5_resumo(nr_seq_resumo_w, pr_realizado_geral_w, qt_horas_realizadas_geral_w);
                end if;

                /*reinicializa variaveis*/


                qt_horas_realizadas_geral_w := 0;
                qt_horas_previstas_geral_w  := 0;
                qt_horas_prev_pond_geral_w  := 0;
            end if;

        end loop;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dashboard_html5_pck.atualizar_resumo () FROM PUBLIC;
