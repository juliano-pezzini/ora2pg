-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dashboard_html5_pck.atualizar_grupo_todo () AS $body$
DECLARE

        /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Finalidade:  Atualizar dados do Dashboard do HTML5 - Grupo de Trabalho TODO
        ---------------------------------------------------------------------------------------------------------------------------------------------

        Locais de chamada direta: 
        [  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [X] Outros: Procedure atualizar_dashboard
         --------------------------------------------------------------------------------------------------------------------------------------------

        Pontos de atencao:
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


        dt_prev_inicio_fun_w         timestamp;
        dt_prev_fim_fun_w            timestamp;
        dt_prev_inicio_anal_fun_w    timestamp;
        dt_prev_fim_anal_fun_w       timestamp;
        dt_prev_inicio_prog_fun_w    timestamp;
        dt_prev_fim_prog_fun_w       timestamp;
        dt_prev_inicio_teste_fun_w   timestamp;
        dt_prev_fim_teste_fun_w      timestamp;
        dt_prev_checkpoint_w         timestamp;
        dt_real_inicio_fun_w         timestamp;
        dt_real_fim_fun_w            timestamp;
        dt_real_checkpoint_w         timestamp;
        dt_prev_inicio_analise_w     timestamp;
        dt_prev_fim_analise_w        timestamp;
        dt_prev_inicio_prog_w        timestamp;
        dt_prev_fim_prog_w           timestamp;
        dt_prev_inicio_teste_w       timestamp;
        dt_prev_fim_teste_w          timestamp;
        dt_real_inicio_analise_w     timestamp;
        dt_real_fim_analise_w        timestamp;
        dt_real_inicio_prog_w        timestamp;
        dt_real_fim_prog_w           timestamp;
        dt_real_inicio_teste_w       timestamp;
        dt_real_fim_teste_w          timestamp;
        dt_prev_aprov_gerente_w      timestamp;
        dt_real_aprov_gerente_w      timestamp;
        dt_inicio_prev_w             timestamp;
        dt_inicio_real_w             timestamp;
        dt_fim_prev_w                timestamp;
        qt_horas_cron_analise_w      double precision;
        qt_horas_cron_ana_exe_w      double precision;
        qt_horas_cron_ana_ext_w      double precision;
        qt_horas_cron_prog_w         double precision;
        qt_horas_cron_prog_exe_w     double precision;
        qt_horas_cron_prog_ext_w     double precision;
        qt_horas_cron_prog_ret_w     double precision;
        qt_horas_total_prog_ret_w    double precision;
        qt_horas_pend_prog_ret_w     double precision;
        qt_horas_cron_teste_w        double precision;
        qt_horas_cron_teste_exe_w    double precision;
        qt_horas_cron_teste_ext_w    double precision;
        qt_horas_total_teste_w       double precision;
        qt_horas_total_test_exe_w    double precision;
        qt_horas_total_test_ext_w    double precision;
        qt_horas_total_analista_w    double precision;
        qt_horas_total_ana_exe_w     double precision;
        qt_horas_total_ana_ext_w     double precision;
        qt_horas_total_prog_w        double precision;
        qt_horas_total_prog_exe_w    double precision;
        qt_horas_total_prog_ext_w    double precision;
        qt_horas_cron_pend_analise_w double precision;
        qt_horas_cron_pend_ana_exe_w double precision;
        qt_horas_cron_pend_ana_ext_w double precision;
        qt_horas_cron_pend_prog_w    double precision;
        qt_horas_cron_pend_pro_exe_w double precision;
        qt_horas_cron_pend_pro_ext_w double precision;
        qt_horas_cron_pend_teste_w   double precision;
        qt_horas_cron_pend_tes_exe_w double precision;
        qt_horas_cron_pend_tes_ext_w double precision;
        qt_horas_pend_analista_w     double precision;
        qt_horas_pend_analista_exe_w double precision;
        qt_horas_pend_analista_ext_w double precision;
        qt_horas_pend_prog_w         double precision;
        qt_horas_pend_prog_exe_w     double precision;
        qt_horas_pend_prog_ext_w     double precision;
        qt_horas_pend_teste_w        double precision;
        qt_horas_pend_teste_exe_w    double precision;
        qt_horas_pend_teste_ext_w    double precision;
        qt_os_pend_analista_w        double precision;
        qt_os_pend_analista_exe_w    double precision;
        qt_os_pend_analista_ext_w    double precision;
        qt_os_total_analista_w       double precision;
        qt_os_total_analista_exe_w   double precision;
        qt_os_total_analista_ext_w   double precision;
        qt_os_total_prog_w           double precision;
        qt_os_total_prog_exe_w       double precision;
        qt_os_total_prog_ext_w       double precision;
        qt_os_pend_vv_w              double precision;
        qt_os_pend_vv_exe_w          double precision;
        qt_os_pend_vv_ext_w          double precision;
        qt_os_vv_w                   double precision;
        qt_os_vv_exe_w               double precision;
        qt_os_vv_ext_w               double precision;
        qt_os_tec_defeito_w          double precision;
        qt_os_design_w               double precision;
        qt_os_pend_prog_w            double precision;
        qt_os_pend_prog_exe_w        double precision;
        qt_os_pend_prog_ext_w        double precision;
        qt_os_tec_w                  double precision;
        pr_os_analise_w              double precision;
        pr_os_prog_w                 double precision;
        pr_os_teste_w                double precision;
        pr_horas_analise_w           double precision;
        pr_horas_prog_w              double precision;
        pr_horas_teste_w             double precision;
        pr_var_horas_analise_w       double precision;
        pr_var_horas_prog_w          double precision;
        pr_var_horas_teste_w         double precision;
        pr_var_horas_funcao_w        double precision;
        pr_conclusao_w               double precision;
        pr_conclusao_analis_w        double precision;
        pr_conclusao_prog_w          double precision;
        pr_conclusao_teste_w         double precision;
        pr_prev_conclus_analise_w    double precision;
        pr_prev_conclus_prog_w       double precision;
        pr_prev_conclus_teste_w      double precision;
        pr_previsto_conclusao_w      double precision;
        dt_ordem_serv_tre_w          timestamp;
        dt_ordem_serv_tre_en_w       timestamp;
        dt_inicio_prev_tre_w         timestamp;
        dt_fim_prev_tre_w            timestamp;
        dt_inicio_real_tre_w         timestamp;
        dt_inicio_prev_tre_en_w      timestamp;
        dt_fim_real_tre_w            timestamp;
        dt_inicio_real_tre_en_w      timestamp;
        dt_fim_prev_tre_en_w         timestamp;
        dt_fim_real_tre_en_w         timestamp;
        qt_ordem_serv_tre_w          bigint;
        qt_ordem_serv_tre_en_w       bigint;

        /* funcoes TODO */


        c01 CURSOR FOR
            SELECT nr_sequencia,
                   nr_seq_proj_analise,
                   nr_seq_proj_prog,
                   nr_seq_proj_teste,
                   cd_funcao,
                   ie_status,
                   nr_ordem_serv_tre,
                   nr_ordem_serv_tre_en
              from funcoes_html5
             where (nr_seq_proj_analise IS NOT NULL AND nr_seq_proj_analise::text <> '')
               and (nr_seq_proj_prog IS NOT NULL AND nr_seq_proj_prog::text <> '')
               and (nr_seq_proj_teste IS NOT NULL AND nr_seq_proj_teste::text <> '');

    
BEGIN
    
        /*LOOP FUNCOES*/


        for c01_w in c01 loop
            pr_conclusao_w        := null;
            pr_conclusao_analis_w := null;

            /* Base line para analise */


            SELECT * FROM dashboard_html5_pck.obter_base_line(c01_w.nr_seq_proj_analise, dt_prev_inicio_fun_w, dt_prev_fim_anal_fun_w) INTO STRICT dt_prev_inicio_fun_w, dt_prev_fim_anal_fun_w;
            dt_prev_inicio_anal_fun_w := dt_prev_inicio_fun_w;

            /* Base line para programacao */


            SELECT * FROM dashboard_html5_pck.obter_base_line(c01_w.nr_seq_proj_prog, dt_prev_inicio_prog_fun_w, dt_prev_fim_prog_fun_w) INTO STRICT dt_prev_inicio_prog_fun_w, dt_prev_fim_prog_fun_w;

            /* Base line para teste */


            SELECT * FROM dashboard_html5_pck.obter_base_line(c01_w.nr_seq_proj_teste, dt_prev_inicio_teste_fun_w, dt_prev_fim_fun_w) INTO STRICT dt_prev_inicio_teste_fun_w, dt_prev_fim_fun_w;
            dt_prev_fim_teste_fun_w := dt_prev_fim_fun_w;

            /* Aprovacao do gerente para checkpoint */


            SELECT * FROM dashboard_html5_pck.obter_dt_fim_prev_real(c01_w.nr_seq_proj_analise, 'Approved to proceed (Manager Approval)', dt_prev_aprov_gerente_w, dt_real_aprov_gerente_w) INTO STRICT dt_prev_aprov_gerente_w, dt_real_aprov_gerente_w;

            /* CheckPoint */


            SELECT * FROM dashboard_html5_pck.obter_dt_fim_prev_real(c01_w.nr_seq_proj_analise, 'Checkpoint Meeting (Analysis Phase Exit)', dt_prev_checkpoint_w, dt_real_checkpoint_w) INTO STRICT dt_prev_checkpoint_w, dt_real_checkpoint_w;

            /* Inicio de analise */


            SELECT * FROM dashboard_html5_pck.obter_dt_inicio_prev_real(c01_w.nr_seq_proj_analise, 'Create Statement of Work', dt_prev_inicio_analise_w, dt_real_inicio_analise_w) INTO STRICT dt_prev_inicio_analise_w, dt_real_inicio_analise_w;
            dt_real_inicio_fun_w := dt_real_inicio_analise_w;

            /* Fim de analise */


            SELECT * FROM dashboard_html5_pck.obter_dt_fim_prev_real(c01_w.nr_seq_proj_analise, 'Finilize the Check Point Actions', dt_prev_fim_analise_w, dt_real_fim_analise_w) INTO STRICT dt_prev_fim_analise_w, dt_real_fim_analise_w;

            /* Inicio de programacao */


            SELECT * FROM dashboard_html5_pck.obter_dt_inicio_prev_real(c01_w.nr_seq_proj_prog, 'Define Project Team', dt_prev_inicio_prog_w, dt_real_inicio_prog_w) INTO STRICT dt_prev_inicio_prog_w, dt_real_inicio_prog_w;

            /* Fim de programacao */


            SELECT * FROM dashboard_html5_pck.obter_dt_fim_prev_real(c01_w.nr_seq_proj_prog, 'Initial Development  Completed (Ready to Test and development Clearing)', dt_prev_fim_prog_w, dt_real_fim_prog_w) INTO STRICT dt_prev_fim_prog_w, dt_real_fim_prog_w;

            /* Inicio de teste */


            SELECT * FROM dashboard_html5_pck.obter_dt_inicio_prev_real(c01_w.nr_seq_proj_prog, 'Smoke Test', dt_prev_inicio_teste_w, dt_real_inicio_teste_w) INTO STRICT dt_prev_inicio_teste_w, dt_real_inicio_teste_w;

            if (coalesce(dt_prev_inicio_teste_w::text, '') = '') then
                SELECT * FROM dashboard_html5_pck.obter_dt_inicio_prev_real(c01_w.nr_seq_proj_teste, 'Execution', dt_prev_inicio_teste_w, dt_real_inicio_teste_w) INTO STRICT dt_prev_inicio_teste_w, dt_real_inicio_teste_w;
            end if;

            /* Fim do teste */


            SELECT * FROM dashboard_html5_pck.obter_dt_fim_prev_real(c01_w.nr_seq_proj_teste, 'Final Test Report  (Phase Exit)', dt_prev_fim_teste_w, dt_real_fim_fun_w) INTO STRICT dt_prev_fim_teste_w, dt_real_fim_fun_w;
            dt_real_fim_teste_w := dt_real_fim_fun_w;

            /* Horas cronograma de analise TOTAL */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, null, qt_horas_cron_analise_w, qt_horas_total_analista_w, qt_horas_cron_pend_analise_w) INTO STRICT qt_horas_cron_analise_w, qt_horas_total_analista_w, qt_horas_cron_pend_analise_w;

            /* Horas cronograma de analise EXEC */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, 'E', qt_horas_cron_ana_exe_w, qt_horas_total_ana_exe_w, qt_horas_cron_pend_ana_exe_w) INTO STRICT qt_horas_cron_ana_exe_w, qt_horas_total_ana_exe_w, qt_horas_cron_pend_ana_exe_w;

            /* Horas cronograma de analise EXTRA */


            qt_horas_cron_ana_ext_w      := qt_horas_cron_analise_w - qt_horas_cron_ana_exe_w;
            qt_horas_total_ana_ext_w     := qt_horas_total_analista_w - qt_horas_total_ana_exe_w;
            qt_horas_cron_pend_ana_ext_w := qt_horas_cron_pend_analise_w - qt_horas_cron_pend_ana_exe_w;

            /*Horas cronograma de programacao TOTAL */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', null, qt_horas_cron_prog_w, qt_horas_total_prog_w, qt_horas_cron_pend_prog_w) INTO STRICT qt_horas_cron_prog_w, qt_horas_total_prog_w, qt_horas_cron_pend_prog_w;

            /*Horas cronograma de programacao EXEC */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', 'E', qt_horas_cron_prog_exe_w, qt_horas_total_prog_exe_w, qt_horas_cron_pend_pro_exe_w) INTO STRICT qt_horas_cron_prog_exe_w, qt_horas_total_prog_exe_w, qt_horas_cron_pend_pro_exe_w;

            /*Horas cronograma de programacao EXTRA */


            qt_horas_cron_prog_ext_w     := qt_horas_cron_prog_w - qt_horas_cron_prog_exe_w;
            qt_horas_total_prog_ext_w    := qt_horas_total_prog_w - qt_horas_total_prog_exe_w;
            qt_horas_cron_pend_pro_ext_w := qt_horas_cron_pend_prog_w - qt_horas_cron_pend_pro_exe_w;

            /*Horas cronograma de programacao RETRABALHO */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', 'RT', qt_horas_cron_prog_ret_w, qt_horas_total_prog_ret_w, qt_horas_pend_prog_ret_w) INTO STRICT qt_horas_cron_prog_ret_w, qt_horas_total_prog_ret_w, qt_horas_pend_prog_ret_w;

            /* Horas cronograma de teste TOTAL */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, null, qt_horas_cron_teste_w, qt_horas_total_teste_w, qt_horas_cron_pend_teste_w) INTO STRICT qt_horas_cron_teste_w, qt_horas_total_teste_w, qt_horas_cron_pend_teste_w;

            /* Horas cronograma de teste EXEC  */


            SELECT * FROM dashboard_html5_pck.obter_horas_cronograma(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, 'E', qt_horas_cron_teste_exe_w, qt_horas_total_test_exe_w, qt_horas_cron_pend_tes_exe_w) INTO STRICT qt_horas_cron_teste_exe_w, qt_horas_total_test_exe_w, qt_horas_cron_pend_tes_exe_w;

            /* Horas cronograma de teste EXTRA  */


            qt_horas_cron_teste_ext_w    := qt_horas_cron_teste_w - qt_horas_cron_teste_exe_w;
            qt_horas_total_test_ext_w    := qt_horas_total_teste_w - qt_horas_total_test_exe_w;
            qt_horas_cron_pend_tes_ext_w := qt_horas_cron_pend_teste_w - qt_horas_cron_pend_tes_exe_w;

            /* quantidade de horas previstas nas OS pendentes do cronograma de analise - TOTAL */


            qt_horas_pend_analista_w := dashboard_html5_pck.obter_horas_previstas(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, null, qt_horas_pend_analista_w);

            /* quantidade de horas previstas nas OS pendentes do cronograma de analise - EXEC */


            qt_horas_pend_analista_exe_w := dashboard_html5_pck.obter_horas_previstas(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, 'E', qt_horas_pend_analista_exe_w);

            /* quantidade de horas previstas nas OS pendentes do cronograma de analise - EXT */


            qt_horas_pend_analista_ext_w := qt_horas_pend_analista_w - qt_horas_pend_analista_exe_w;

            /* quantidade de horas previstas nas OS pendentes do cronograma de programacao - TOTAL */


            qt_horas_pend_prog_w := dashboard_html5_pck.obter_horas_previstas(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', null, qt_horas_pend_prog_w);

            /* quantidade de horas previstas nas OS pendentes do cronograma de programacao - EXEC  */


            qt_horas_pend_prog_exe_w := dashboard_html5_pck.obter_horas_previstas(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', 'E', qt_horas_pend_prog_exe_w);

            /* quantidade de horas previstas nas OS pendentes do cronograma de programacao - EXTRA  */


            qt_horas_pend_prog_ext_w := qt_horas_pend_prog_w - qt_horas_pend_prog_exe_w;

            /* quantidade de horas previstas nas OS pendentes do cronograma de teste - TOTAL */


            qt_horas_pend_teste_w := dashboard_html5_pck.obter_horas_previstas(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, null, qt_horas_pend_teste_w);

            /* quantidade de horas previstas nas OS pendentes do cronograma de teste - EXEC  */


            qt_horas_pend_teste_exe_w := dashboard_html5_pck.obter_horas_previstas(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, 'E', qt_horas_pend_teste_exe_w);

            /* quantidade de horas previstas nas OS pendentes do cronograma de teste - EXTRA  */


            qt_horas_pend_teste_ext_w := qt_horas_pend_teste_w - qt_horas_pend_teste_exe_w;

            /* Quantidade de OS's pendentes no projeto de analise - TOTAL */


            qt_os_pend_analista_w := dashboard_html5_pck.obter_qt_os_pendentes(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, null, qt_os_pend_analista_w);

            /* Quantidade de OS's pendentes no projeto de analise - EXEC  */


            qt_os_pend_analista_exe_w := dashboard_html5_pck.obter_qt_os_pendentes(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, 'E', qt_os_pend_analista_exe_w);

            /* Quantidade de OS's pendentes no projeto de analise - EXTRA  */


            qt_os_pend_analista_ext_w := qt_os_pend_analista_w - qt_os_pend_analista_exe_w;

            /* Quantidade de OS's pendentes no projeto de programacao TOTAL */


            qt_os_pend_prog_w := dashboard_html5_pck.obter_qt_os_pendentes(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', null, qt_os_pend_prog_w);

            /* Quantidade de OS's pendentes no projeto de programacao EXEC  */


            qt_os_pend_prog_exe_w := dashboard_html5_pck.obter_qt_os_pendentes(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', 'E', qt_os_pend_prog_exe_w);

            /* Quantidade de OS's pendentes no projeto de programacao EXTRA  */


            qt_os_pend_prog_ext_w := qt_os_pend_prog_w - qt_os_pend_prog_exe_w;

            /* Quantidade de OS's pendentes no projeto de testes - TOTAL */


            qt_os_pend_vv_w := dashboard_html5_pck.obter_qt_os_pendentes(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, null, qt_os_pend_vv_w);

            /* Quantidade de OS's pendentes no projeto de testes - EXEC */


            qt_os_pend_vv_exe_w := dashboard_html5_pck.obter_qt_os_pendentes(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, 'E', qt_os_pend_vv_exe_w);

            /* Quantidade de OS's pendentes no projeto de testes - EXTRA  */


            qt_os_pend_vv_ext_w := qt_os_pend_vv_w - qt_os_pend_vv_exe_w;

            /* Quantidade total de OS's do projeto de analise - TOTAL */


            qt_os_total_analista_w := dashboard_html5_pck.obter_qt_os_projeto(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, null, qt_os_total_analista_w);

            /* Quantidade total de OS's do projeto de analise - EXEC */


            qt_os_total_analista_exe_w := dashboard_html5_pck.obter_qt_os_projeto(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, 'E', qt_os_total_analista_exe_w);

            /* Quantidade total de OS's do projeto de analise - EXTRA */


            qt_os_total_analista_ext_w := qt_os_total_analista_w - qt_os_total_analista_exe_w;

            /* Quantidade total de OS's do projeto de programacao - TOTAL */


            qt_os_total_prog_w := dashboard_html5_pck.obter_qt_os_projeto(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', null, qt_os_total_prog_w);

            /* Quantidade total de OS's do projeto de programacao - EXEC */


            qt_os_total_prog_exe_w := dashboard_html5_pck.obter_qt_os_projeto(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', 'E', qt_os_total_prog_exe_w);

            /* Quantidade total de OS's do projeto de programacao - EXTRA */


            qt_os_total_prog_ext_w := qt_os_total_prog_w - qt_os_total_prog_exe_w;

            /* Quantidade total de OS's do projeto de testes -TOTAL */


            qt_os_vv_w := dashboard_html5_pck.obter_qt_os_projeto(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, null, qt_os_vv_w);

            /* Quantidade total de OS's do projeto de testes -EXEC */


            qt_os_vv_exe_w := dashboard_html5_pck.obter_qt_os_projeto(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, 'E', qt_os_vv_exe_w);

            /* Quantidade total de OS's do projeto de testes -EXTRA */


            qt_os_vv_ext_w := qt_os_vv_w - qt_os_vv_exe_w;

            /* Quantidade total de OS's tecnologia pendente */


            select count(1)
              into STRICT qt_os_tec_w
              from man_estagio_processo m,
                   man_ordem_servico    a
             where a.nr_seq_estagio = m.nr_sequencia
               and a.cd_funcao = c01_w.cd_funcao
               and a.ie_plataforma = 'H'
               and m.ie_tecnologia = 'S';

            /* Quantidade total de OS's de defeito da tecnologia pendente  */


            select count(1)
              into STRICT qt_os_tec_defeito_w
              from man_estagio_processo m,
                   man_ordem_servico    a
             where a.nr_seq_estagio = m.nr_sequencia
               and a.cd_funcao = c01_w.cd_funcao
               and a.ie_plataforma = 'H'
               and a.ie_tipo_ordem = 1
               and m.ie_tecnologia = 'S';

            /* Quantidade total de OS's de design pendente */


            select count(1)
              into STRICT qt_os_design_w
              from man_estagio_processo m,
                   man_ordem_servico    a
             where a.nr_seq_estagio = m.nr_sequencia
               and a.cd_funcao = c01_w.cd_funcao
               and a.ie_plataforma = 'H'
               and m.ie_design = 'S';

            /* Percentual Previsto/Real do cronograma de analise */


            SELECT * FROM dashboard_html5_pck.obter_pr_prev_real_crono(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'A', null, null, pr_prev_conclus_analise_w, pr_conclusao_analis_w) INTO STRICT pr_prev_conclus_analise_w, pr_conclusao_analis_w;

            /* Percentual Previsto/Real do cronograma de programacao */


            SELECT * FROM dashboard_html5_pck.obter_pr_prev_real_crono(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'P', 'DL', null, pr_prev_conclus_prog_w, pr_conclusao_prog_w) INTO STRICT pr_prev_conclus_prog_w, pr_conclusao_prog_w;

            /* Percentual Previsto/Real do cronograma de teste */


            SELECT * FROM dashboard_html5_pck.obter_pr_prev_real_crono(c01_w.nr_seq_proj_analise, c01_w.nr_seq_proj_prog, c01_w.nr_seq_proj_teste, 'T', null, null, pr_prev_conclus_teste_w, pr_conclusao_teste_w) INTO STRICT pr_prev_conclus_teste_w, pr_conclusao_teste_w;

            pr_os_analise_w        := 100 - dividir(qt_os_pend_analista_w * 100, qt_os_total_analista_w);
            pr_os_prog_w           := 100 - dividir(qt_os_pend_prog_w * 100, qt_os_total_prog_w);
            pr_os_teste_w          := 100 - dividir(qt_os_pend_vv_w * 100, qt_os_vv_w);
            pr_horas_analise_w     := dividir(qt_horas_total_analista_w * 100, qt_horas_cron_analise_w);
            pr_horas_prog_w        := dividir(qt_horas_total_prog_w * 100, qt_horas_cron_prog_w);
            pr_horas_teste_w       := dividir(qt_horas_total_teste_w * 100, qt_horas_cron_teste_w);
            pr_var_horas_analise_w := dividir((qt_horas_total_analista_w + qt_horas_pend_analista_w) * 100,
                                              qt_horas_cron_analise_w);
            pr_var_horas_prog_w    := dividir((qt_horas_total_prog_w + qt_horas_pend_prog_w) * 100, qt_horas_cron_prog_w);
            pr_var_horas_teste_w   := dividir((qt_horas_total_teste_w + qt_horas_pend_teste_w) * 100, qt_horas_cron_teste_w);
            pr_var_horas_funcao_w  := dividir((qt_horas_total_analista_w + qt_horas_pend_analista_w + qt_horas_total_prog_w +
                                              qt_horas_pend_prog_w + qt_horas_total_teste_w + qt_horas_pend_teste_w) * 100,
                                              (qt_horas_cron_analise_w + qt_horas_cron_prog_w + qt_horas_cron_teste_w));
            pr_conclusao_w         := pr_var_horas_funcao_w;

            /* Calculo Pecentual Previsto da funcao */


            if (trunc(dt_prev_inicio_anal_fun_w) > trunc(clock_timestamp())) or (coalesce(dt_prev_inicio_anal_fun_w::text, '') = '') then
                pr_previsto_conclusao_w := 0;
            else
                pr_previsto_conclusao_w := obter_pr_prev_crono(dt_real_inicio_analise_w, dt_prev_fim_teste_w);
            end if;

            if (pr_conclusao_w > 100) then
                pr_conclusao_w := 100;
            end if;

            if (dt_real_fim_analise_w IS NOT NULL AND dt_real_fim_analise_w::text <> '') then
                pr_conclusao_analis_w := 100;
            end if;
            if (dt_real_fim_prog_w IS NOT NULL AND dt_real_fim_prog_w::text <> '') then
                pr_conclusao_prog_w := 100;
            end if;
            if (dt_real_fim_teste_w IS NOT NULL AND dt_real_fim_teste_w::text <> '') then
                pr_conclusao_teste_w := 100;
            end if;
            if (c01_w.ie_status in ('V', 'L', 'R')) then
                pr_conclusao_w        := 100;
                pr_conclusao_analis_w := 100;
                pr_conclusao_prog_w   := 100;
                pr_conclusao_teste_w  := 100;
            end if;

            SELECT * FROM dashboard_html5_pck.obter_dados_os_tre(c01_w.nr_ordem_serv_tre, dt_inicio_prev_tre_w, dt_fim_prev_tre_w, dt_inicio_real_tre_w, dt_fim_real_tre_w, qt_ordem_serv_tre_w) INTO STRICT dt_inicio_prev_tre_w, dt_fim_prev_tre_w, dt_inicio_real_tre_w, dt_fim_real_tre_w, qt_ordem_serv_tre_w;

            SELECT * FROM dashboard_html5_pck.obter_dados_os_tre(c01_w.nr_ordem_serv_tre_en, dt_inicio_prev_tre_en_w, dt_fim_prev_tre_en_w, dt_inicio_real_tre_en_w, dt_fim_real_tre_en_w, qt_ordem_serv_tre_en_w) INTO STRICT dt_inicio_prev_tre_en_w, dt_fim_prev_tre_en_w, dt_inicio_real_tre_en_w, dt_fim_real_tre_en_w, qt_ordem_serv_tre_en_w;

            update funcoes_html5
               set dt_prev_inicio_fun         = dt_prev_inicio_fun_w,
                   dt_prev_fim_fun            = dt_prev_fim_fun_w,
                   dt_prev_inicio_anal_fun    = dt_prev_inicio_anal_fun_w,
                   dt_prev_fim_anal_fun       = dt_prev_fim_anal_fun_w,
                   dt_prev_inicio_prog_fun    = dt_prev_inicio_prog_fun_w,
                   dt_prev_fim_prog_fun       = dt_prev_fim_prog_fun_w,
                   dt_prev_inicio_teste_fun   = dt_prev_inicio_teste_fun_w,
                   dt_prev_fim_teste_fun      = dt_prev_fim_teste_fun_w,
                   dt_prev_checkpoint         = dt_prev_checkpoint_w,
                   dt_real_inicio_fun         = dt_real_inicio_fun_w,
                   dt_real_fim_fun            = dt_real_fim_fun_w,
                   dt_real_checkpoint         = dt_real_checkpoint_w,
                   dt_prev_inicio_analise     = dt_prev_inicio_analise_w,
                   dt_prev_fim_analise        = dt_prev_fim_analise_w,
                   dt_prev_inicio_prog        = dt_prev_inicio_prog_w,
                   dt_prev_fim_prog           = dt_prev_fim_prog_w,
                   dt_prev_inicio_teste       = dt_prev_inicio_teste_w,
                   dt_prev_fim_teste          = dt_prev_fim_teste_w,
                   dt_real_inicio_analise     = dt_real_inicio_analise_w,
                   dt_real_fim_analise        = dt_real_fim_analise_w,
                   dt_real_inicio_prog        = dt_real_inicio_prog_w,
                   dt_real_fim_prog           = dt_real_fim_prog_w,
                   dt_real_inicio_teste       = dt_real_inicio_teste_w,
                   dt_real_fim_teste          = dt_real_fim_teste_w,
                   dt_prev_aprov_gerente      = dt_prev_aprov_gerente_w,
                   dt_real_aprov_gerente      = dt_real_aprov_gerente_w,
                   qt_horas_cron_analise      = qt_horas_cron_analise_w,
                   qt_horas_cron_ana_exe      = qt_horas_cron_ana_exe_w,
                   qt_horas_cron_ana_ext      = qt_horas_cron_ana_ext_w,
                   qt_horas_cron_prog         = qt_horas_cron_prog_w,
                   qt_horas_cron_prog_exe     = qt_horas_cron_prog_exe_w,
                   qt_horas_cron_prog_ext     = qt_horas_cron_prog_ext_w,
                   qt_horas_cron_prog_ret     = qt_horas_cron_prog_ret_w,
                   qt_horas_cron_teste        = qt_horas_cron_teste_w,
                   qt_horas_cron_teste_exe    = qt_horas_cron_teste_exe_w,
                   qt_horas_cron_teste_ext    = qt_horas_cron_teste_ext_w,
                   qt_horas_total_teste       = qt_horas_total_teste_w,
                   qt_horas_total_teste_exe   = qt_horas_total_test_exe_w,
                   qt_horas_total_teste_ext   = qt_horas_total_test_ext_w,
                   qt_horas_total_analista    = qt_horas_total_analista_w,
                   qt_horas_total_ana_exe     = qt_horas_total_ana_exe_w,
                   qt_horas_total_ana_ext     = qt_horas_total_ana_ext_w,
                   qt_horas_total_prog        = qt_horas_total_prog_w,
                   qt_horas_total_prog_exe    = qt_horas_total_prog_exe_w,
                   qt_horas_total_prog_ext    = qt_horas_total_prog_ext_w,
                   qt_horas_cron_pend_analise = qt_horas_cron_pend_analise_w,
                   qt_horas_cron_pend_ana_exe = qt_horas_cron_pend_ana_exe_w,
                   qt_horas_cron_pend_ana_ext = qt_horas_cron_pend_ana_ext_w,
                   qt_horas_cron_pend_prog    = qt_horas_cron_pend_prog_w,
                   qt_horas_cron_pend_pro_exe = qt_horas_cron_pend_pro_exe_w,
                   qt_horas_cron_pend_pro_ext = qt_horas_cron_pend_pro_ext_w,
                   qt_horas_cron_pend_teste   = qt_horas_cron_pend_teste_w,
                   qt_horas_cron_pend_tes_exe = qt_horas_cron_pend_tes_exe_w,
                   qt_horas_cron_pend_tes_ext = qt_horas_cron_pend_tes_ext_w,
                   qt_horas_pend_analista     = qt_horas_pend_analista_w,
                   qt_horas_pend_analista_exe = qt_horas_pend_analista_exe_w,
                   qt_horas_pend_analista_ext = qt_horas_pend_analista_ext_w,
                   qt_horas_pend_prog         = qt_horas_pend_prog_w,
                   qt_horas_pend_prog_exe     = qt_horas_pend_prog_exe_w,
                   qt_horas_pend_prog_ext     = qt_horas_pend_prog_ext_w,
                   qt_horas_pend_teste        = qt_horas_pend_teste_w,
                   qt_horas_pend_teste_exe    = qt_horas_pend_teste_exe_w,
                   qt_horas_pend_teste_ext    = qt_horas_pend_teste_ext_w,
                   qt_os_pend_analista        = qt_os_pend_analista_w,
                   qt_os_pend_analista_exe    = qt_os_pend_analista_exe_w,
                   qt_os_pend_analista_ext    = qt_os_pend_analista_ext_w,
                   qt_os_pend_prog            = qt_os_pend_prog_w,
                   qt_os_pend_prog_exe        = qt_os_pend_prog_exe_w,
                   qt_os_pend_prog_ext        = qt_os_pend_prog_ext_w,
                   qt_os_total_analista       = qt_os_total_analista_w,
                   qt_os_total_analista_exe   = qt_os_total_analista_exe_w,
                   qt_os_total_analista_ext   = qt_os_total_analista_ext_w,
                   qt_os_total_prog           = qt_os_total_prog_w,
                   qt_os_total_prog_exe       = qt_os_total_prog_exe_w,
                   qt_os_total_prog_ext       = qt_os_total_prog_ext_w,
                   qt_os_pend_vv              = qt_os_pend_vv_w,
                   qt_os_pend_vv_exe          = qt_os_pend_vv_exe_w,
                   qt_os_pend_vv_ext          = qt_os_pend_vv_ext_w,
                   qt_os_vv                   = qt_os_vv_w,
                   qt_os_vv_exe               = qt_os_vv_exe_w,
                   qt_os_vv_ext               = qt_os_vv_ext_w,
                   qt_os_tec                  = qt_os_tec_w,
                   qt_os_tec_defeito          = qt_os_tec_defeito_w,
                   qt_os_design               = qt_os_design_w,
                   pr_os_analise              = pr_os_analise_w,
                   pr_os_prog                 = pr_os_prog_w,
                   pr_os_teste                = pr_os_teste_w,
                   pr_horas_analise           = pr_horas_analise_w,
                   pr_horas_prog              = pr_horas_prog_w,
                   pr_horas_teste             = pr_horas_teste_w,
                   pr_var_horas_analise       = pr_var_horas_analise_w,
                   pr_var_horas_prog          = pr_var_horas_prog_w,
                   pr_var_horas_teste         = pr_var_horas_teste_w,
                   pr_var_horas_funcao        = pr_var_horas_funcao_w,
                   pr_conclusao               = coalesce(pr_conclusao_w, pr_conclusao),
                   pr_conclusao_analis        = coalesce(pr_conclusao_analis_w, pr_conclusao_analis),
                   pr_conclusao_prog          = coalesce(pr_conclusao_prog_w, pr_conclusao_prog),
                   pr_conclusao_teste         = coalesce(pr_conclusao_teste_w, pr_conclusao_teste),
                   pr_prev_conclus_analise    = pr_prev_conclus_analise_w,
                   pr_prev_conclus_prog       = pr_prev_conclus_prog_w,
                   pr_prev_conclus_teste      = pr_prev_conclus_teste_w,
                   pr_previsto_conclusao      = pr_previsto_conclusao_w,
                   dt_inicio_prev_tre         = dt_inicio_prev_tre_w,
                   dt_fim_prev_tre            = dt_fim_prev_tre_w,
                   dt_inicio_real_tre         = dt_inicio_real_tre_w,
                   dt_fim_real_tre            = dt_fim_real_tre_w,
                   dt_inicio_prev_tre_en      = dt_inicio_prev_tre_en_w,
                   dt_fim_prev_tre_en         = dt_fim_prev_tre_en_w,
                   dt_inicio_real_tre_en      = dt_inicio_real_tre_en_w,
                   dt_fim_real_tre_en         = dt_fim_real_tre_en_w,
                   qt_ordem_serv_tre          = qt_ordem_serv_tre_w,
                   qt_ordem_serv_tre_en       = qt_ordem_serv_tre_en_w
             where nr_sequencia = c01_w.nr_sequencia;

            CALL dashboard_html5_pck.atualizar_milestone(c01_w.nr_sequencia, c01_w.nr_seq_proj_analise, 'A');
            CALL dashboard_html5_pck.atualizar_milestone(c01_w.nr_sequencia, c01_w.nr_seq_proj_prog, 'D');
            CALL dashboard_html5_pck.atualizar_milestone(c01_w.nr_sequencia, c01_w.nr_seq_proj_teste, 'T');

        end loop;

        commit;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dashboard_html5_pck.atualizar_grupo_todo () FROM PUBLIC;
