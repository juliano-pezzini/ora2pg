-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerencia_dados_ocor_pck.pls_gerencia_situ_glo_ocor ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_v.nr_sequencia%type, nr_seq_proc_partic_p pls_proc_participante_v.nr_sequencia%type, ie_situacao_p text, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/*Rotina criada para que seja feito o gerenciamento da situação da glosa/ocorrência do item 
Por hora existe apenas o tratamento para inativar caso seja passado o parâmetro para ativo deve ser realizada as customizações necessárias*/
 
 
-- ocorrências e glosas ativas dos procedimentos 
C01 CURSOR(nr_seq_conta_proc_p		pls_conta_proc_v.nr_sequencia%type) FOR 
	SELECT a.nr_sequencia  	nr_seq_ocorrencia, 
		null       	nr_seq_glosa 
	from  pls_ocorrencia_benef  a 
	where  a.nr_seq_conta_proc   = nr_seq_conta_proc_p 
	
union
 
	SELECT null       	nr_seq_ocorrencia, 
		b.nr_sequencia  	nr_seq_glosa 
	from  pls_conta_glosa     b 
	where  b.nr_seq_conta_proc   = nr_seq_conta_proc_p;

-- ocorrências e glosas ativas dos materiais 
C02 CURSOR(nr_seq_conta_mat_p		pls_conta_mat_v.nr_sequencia%type) FOR 
	SELECT a.nr_sequencia  	nr_seq_ocorrencia, 
		null       	nr_seq_glosa 
	from  pls_ocorrencia_benef  a 
	where  a.nr_seq_conta_mat   = nr_seq_conta_mat_p 
	and   a.ie_situacao      = 'A' 
	
union
 
	SELECT null       	nr_seq_ocorrencia, 
		b.nr_sequencia  	nr_seq_glosa 
	from  pls_conta_glosa     b 
	where  b.nr_seq_conta_mat   = nr_seq_conta_mat_p 
	and   b.ie_situacao      = 'A';

-- ocorrências e glosas ativas dos materiais 
C03 CURSOR(nr_seq_proc_partic_p		pls_proc_participante_v.nr_sequencia%type) FOR 
	SELECT a.nr_sequencia  	nr_seq_ocorrencia, 
		null       	nr_seq_glosa 
	from  pls_ocorrencia_benef  a 
	where  a.nr_seq_proc_partic  = nr_seq_proc_partic_p 
	and   a.ie_situacao      = 'A' 
	
union
 
	SELECT null       	nr_seq_ocorrencia, 
		b.nr_sequencia  	nr_seq_glosa 
	from  pls_conta_glosa     b 
	where  b.nr_seq_proc_partic  = nr_seq_proc_partic_p 
	and   b.ie_situacao      = 'A';
BEGIN
 
-- se o participante estiver informado, significa que é para cancelar o participante e não o procedimento 
-- caso se deseja cancelar procedimento e participante, a rotina deve ser chamada duas vezes 
if ((nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') and coalesce(nr_seq_proc_partic_p::text, '') = '') then 
	-- inativar glosas ou ocorrências do procedimento 
	for r_C01_w in C01(nr_seq_conta_proc_p) loop 
  
		-- inativa as glosas 
		if (r_C01_w.nr_seq_glosa IS NOT NULL AND r_C01_w.nr_seq_glosa::text <> '') then 
			CALL pls_gerencia_dados_ocor_pck.pls_gerencia_situacao_glosa( r_C01_w.nr_seq_glosa, ie_situacao_p, nm_usuario_p, null,'U');
		end if;
    
		-- inativa as ocorrências 
		if (r_C01_w.nr_seq_ocorrencia IS NOT NULL AND r_C01_w.nr_seq_ocorrencia::text <> '') then 
			CALL pls_gerencia_dados_ocor_pck.pls_gerencia_situacao_ocor( r_C01_w.nr_seq_ocorrencia, ie_situacao_p, nm_usuario_p,'U');
		end if;
	end loop;
end if;
 
if (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then 
	-- inativar glosas ou ocorrências do material 
	for r_C02_w in C02(nr_seq_conta_mat_p) loop 
  
		-- inativa as glosas 
		if (r_C02_w.nr_seq_glosa IS NOT NULL AND r_C02_w.nr_seq_glosa::text <> '') then 
			CALL pls_gerencia_dados_ocor_pck.pls_gerencia_situacao_glosa( r_C02_w.nr_seq_glosa, ie_situacao_p, nm_usuario_p, null,'U');
		end if;
    
		-- inativa as ocorrências 
		if (r_C02_w.nr_seq_ocorrencia IS NOT NULL AND r_C02_w.nr_seq_ocorrencia::text <> '') then 
			CALL pls_gerencia_dados_ocor_pck.pls_gerencia_situacao_ocor( r_C02_w.nr_seq_ocorrencia, ie_situacao_p, nm_usuario_p,'U');
		end if;
	end loop;
end if;
 
if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then 
	-- inativar glosas ou ocorrências do material 
	for r_C03_w in C03(nr_seq_proc_partic_p) loop 
  
		-- inativa as glosas 
		if (r_C03_w.nr_seq_glosa IS NOT NULL AND r_C03_w.nr_seq_glosa::text <> '') then 
			CALL pls_gerencia_dados_ocor_pck.pls_gerencia_situacao_glosa( r_C03_w.nr_seq_glosa, ie_situacao_p, nm_usuario_p, null,'U');
		end if;
    
		-- inativa as ocorrências 
		if (r_C03_w.nr_seq_ocorrencia IS NOT NULL AND r_C03_w.nr_seq_ocorrencia::text <> '') then 
			CALL pls_gerencia_dados_ocor_pck.pls_gerencia_situacao_ocor( r_C03_w.nr_seq_ocorrencia, ie_situacao_p, nm_usuario_p,'U');
		end if;
	end loop;
end if;
 
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerencia_dados_ocor_pck.pls_gerencia_situ_glo_ocor ( nr_seq_conta_p pls_conta_v.nr_sequencia%type, nr_seq_conta_proc_p pls_conta_proc_v.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat_v.nr_sequencia%type, nr_seq_proc_partic_p pls_proc_participante_v.nr_sequencia%type, ie_situacao_p text, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
