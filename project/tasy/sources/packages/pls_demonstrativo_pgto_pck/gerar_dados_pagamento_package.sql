-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_demonstrativo_pgto_pck.gerar_dados_pagamento ( tb_pls_rel_pag_prestador_p pls_rel_pag_prestador, nm_usuario_p usuario.nm_usuario%type, nr_seq_versao_rel_p pls_rel_pprest_versao.nr_sequencia%type) AS $body$
DECLARE


tb_nr_seq_prest_venc_w		pls_util_cta_pck.t_number_table;
ie_forma_pagamento_w		pls_rel_pprest_dados_pag.ie_forma_pagamento%type;
cd_banco_w			pls_rel_pprest_dados_pag.cd_banco%type;
cd_conta_w			pls_rel_pprest_dados_pag.cd_conta%type;
cd_agencia_w			pls_rel_pprest_dados_pag.cd_agencia%type;
nr_seq_dados_pag_w		pls_rel_pprest_dados_pag.nr_sequencia%type;
dt_pagamento_inicio_w		pls_rel_pag_prestador.dt_pagamento%type;
dt_pagamento_fim_w		pls_rel_pag_prestador.dt_pagamento%type;
dt_competencia_inicio_w		pls_rel_pag_prestador.dt_competencia%type;
dt_competencia_fim_w		pls_rel_pag_prestador.dt_competencia%type;

C01 CURSOR(	nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		nr_seq_protocolo_rec_pc		pls_rec_glosa_protocolo.nr_sequencia%type,
		nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		dt_pagamento_inicio_pc		pls_rel_pag_prestador.dt_pagamento%type,
		dt_pagamento_fim_pc		pls_rel_pag_prestador.dt_pagamento%type,
		dt_competencia_inicio_pc	pls_rel_pag_prestador.dt_competencia%type,
		dt_competencia_fim_pc		pls_rel_pag_prestador.dt_competencia%type,
		nr_seq_lote_pc			pls_lote_pagamento.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_prest_venc
	from	pls_pag_prest_vencimento	b,
		pls_pagamento_prestador		a
	where	a.nr_sequencia			= b.nr_seq_pag_prestador
	and	a.nr_seq_prestador		= nr_seq_prestador_pc
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	exists (	SELECT	1
			from	pls_conta_medica_resumo	y
			where	y.nr_seq_protocolo	= nr_seq_protocolo_pc
			and	y.ie_situacao		!= 'I'
			and	y.nr_seq_prestador_pgto = a.nr_seq_prestador
			and	y.nr_seq_lote_pgto	= a.nr_seq_lote)
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	b.nr_sequencia nr_seq_prest_venc
	from	pls_pag_prest_vencimento	b,
		pls_pagamento_prestador		a
	where	a.nr_sequencia			= b.nr_seq_pag_prestador
	and	a.nr_seq_prestador		= nr_seq_prestador_pc
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	exists (	select	1
			from	pls_conta_rec_resumo_item	y,
				pls_rec_glosa_conta		x
			where	y.nr_seq_conta_rec		= x.nr_sequencia
			and	x.nr_seq_protocolo		= nr_seq_protocolo_rec_pc
			and	y.ie_situacao			!= 'I'
			and	y.nr_seq_prestador_pgto 	= a.nr_seq_prestador
			and	y.nr_seq_lote_pgto		= a.nr_seq_lote)
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia nr_seq_prest_venc
	from	pls_pagamento_prestador		b,
		pls_pag_prest_vencimento	a
	where	b.nr_sequencia			= a.nr_seq_pag_prestador
	and	b.nr_seq_prestador		= nr_seq_prestador_pc
	and	coalesce(b.ie_cancelamento::text, '') = ''
	and	a.dt_vencimento			>= dt_pagamento_inicio_pc
	and	a.dt_vencimento			<= dt_pagamento_fim_pc
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia nr_seq_prest_venc
	from	pls_pagamento_prestador		b,
		pls_pag_prest_vencimento	a,
		pls_lote_pagamento		z
	where	b.nr_sequencia			= a.nr_seq_pag_prestador
	and	z.nr_sequencia			= b.nr_seq_lote
	and	b.nr_seq_prestador		= nr_seq_prestador_pc
	and	coalesce(b.ie_cancelamento::text, '') = ''
	and	z.dt_mes_competencia		>= dt_competencia_inicio_pc 
	and	z.dt_mes_competencia		<= dt_competencia_fim_pc
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia nr_seq_prest_venc
	from	pls_pagamento_prestador		b,
		pls_pag_prest_vencimento	a
	where	b.nr_sequencia			= a.nr_seq_pag_prestador
	and	b.nr_seq_prestador		= nr_seq_prestador_pc
	and	coalesce(b.ie_cancelamento::text, '') = ''
	and	b.nr_seq_lote			= nr_seq_lote_pc
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = '';

c02 CURSOR(	nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		nr_seq_protocolo_rec_pc		pls_rec_glosa_protocolo.nr_sequencia%type,
		nr_seq_prestador_pc		pls_prestador.nr_sequencia%type,
		dt_pagamento_inicio_pc		pls_rel_pag_prestador.dt_pagamento%type,
		dt_pagamento_fim_pc		pls_rel_pag_prestador.dt_pagamento%type,
		dt_competencia_inicio_pc	pls_rel_pag_prestador.dt_competencia%type,
		dt_competencia_fim_pc		pls_rel_pag_prestador.dt_competencia%type,
		nr_seq_lote_pc			pls_lote_pagamento.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.dt_venc_titulo
	from	pls_pp_prestador a
	where	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.ie_cancelado = 'N'
	and	exists (	SELECT	1
			from	pls_conta_medica_resumo x
			where	x.nr_seq_protocolo = nr_seq_protocolo_pc
			and	x.ie_situacao = 'A'
			and	x.nr_seq_prestador_pgto = nr_seq_prestador_pc
			and	x.nr_seq_pp_lote = a.nr_seq_lote)
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia,
		a.dt_venc_titulo
	from	pls_pp_prestador a
	where	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.ie_cancelado = 'N'
	and	exists (	select	1
			from	pls_rec_glosa_conta x,
				pls_conta_rec_resumo_item y
			where	x.nr_seq_protocolo = nr_seq_protocolo_rec_pc
			and	y.nr_seq_conta_rec = x.nr_sequencia
			and	y.ie_situacao = 'A'
			and	y.nr_seq_prestador_pgto = nr_seq_prestador_pc
			and	y.nr_seq_pp_lote = a.nr_seq_lote)
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia,
		a.dt_venc_titulo
	from	pls_pp_prestador a
	where	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.ie_cancelado = 'N'
	and	a.dt_venc_titulo between dt_pagamento_inicio_pc and dt_pagamento_fim_pc
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia,
		a.dt_venc_titulo
	from	pls_pp_lote b,
		pls_pp_prestador a
	where	b.dt_mes_competencia between dt_competencia_inicio_pc and dt_competencia_fim_pc
	and	a.nr_seq_lote = b.nr_sequencia
	and	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.ie_cancelado = 'N'
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(nr_seq_lote_pc::text, '') = ''
	
union all

	select	a.nr_sequencia,
		a.dt_venc_titulo
	from	pls_pp_prestador a
	where	a.nr_seq_lote = nr_seq_lote_pc
	and	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.ie_cancelado = 'N'
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_rec_pc::text, '') = ''
	and	coalesce(dt_pagamento_inicio_pc::text, '') = ''
	and	coalesce(dt_competencia_inicio_pc::text, '') = '';

BEGIN

if (tb_pls_rel_pag_prestador_p.dt_pagamento IS NOT NULL AND tb_pls_rel_pag_prestador_p.dt_pagamento::text <> '') then
	dt_pagamento_fim_w	:= fim_mes(tb_pls_rel_pag_prestador_p.dt_pagamento);
	dt_pagamento_inicio_w	:= trunc(tb_pls_rel_pag_prestador_p.dt_pagamento,'Month');
end if;

if (tb_pls_rel_pag_prestador_p.dt_competencia IS NOT NULL AND tb_pls_rel_pag_prestador_p.dt_competencia::text <> '') then
	dt_competencia_inicio_w := trunc(tb_pls_rel_pag_prestador_p.dt_competencia,'Month');
	dt_competencia_fim_w := fim_mes(tb_pls_rel_pag_prestador_p.dt_competencia);
end if;

-- separei a rotina atual da nova para nao ter nenhum problema

if (tb_pls_rel_pag_prestador_p.ie_funcao_pagamento = '1') then
	--Busca e armazena os vencimentos do pagamento

	for r01_w in C01(	tb_pls_rel_pag_prestador_p.nr_seq_protocolo,
				tb_pls_rel_pag_prestador_p.nr_seq_protocolo_rec,
				tb_pls_rel_pag_prestador_p.nr_seq_prestador,
				dt_pagamento_inicio_w,
				dt_pagamento_fim_w,
				dt_competencia_inicio_w,
				dt_competencia_fim_w,
				tb_pls_rel_pag_prestador_p.nr_seq_lote_pgto) loop

			tb_nr_seq_prest_venc_w(C01%rowCount) := r01_w.nr_seq_prest_venc;
	end loop;
end if;

--Busca os dados do pagamento do prestador

ie_forma_pagamento_w := pls_obter_dados_prestador(tb_pls_rel_pag_prestador_p.nr_seq_prestador,'FP');

if (ie_forma_pagamento_w = 'BB') then
	ie_forma_pagamento_w	:= '3';
elsif (ie_forma_pagamento_w = 'C') then
	ie_forma_pagamento_w	:= '2';
elsif (ie_forma_pagamento_w = 'CA') then
	ie_forma_pagamento_w	:= '2';
elsif (ie_forma_pagamento_w = 'CH') then
	ie_forma_pagamento_w	:= '4';
elsif (ie_forma_pagamento_w = 'DCC') then
	ie_forma_pagamento_w	:= '1';
else
	ie_forma_pagamento_w	:= '1';
end if;

cd_banco_w	:= pls_obter_dados_prestador(tb_pls_rel_pag_prestador_p.nr_seq_prestador,'B');
cd_conta_w	:= coalesce(pls_obter_dados_prestador(tb_pls_rel_pag_prestador_p.nr_seq_prestador,'C'),'000000');
cd_agencia_w	:= coalesce(pls_obter_dados_prestador(tb_pls_rel_pag_prestador_p.nr_seq_prestador,'A'),'00000000');
--Variavel global de todas as paginas

PERFORM set_config('pls_demonstrativo_pgto_pck.nr_pagina_w', 0, false);

if (tb_pls_rel_pag_prestador_p.ie_funcao_pagamento = '1') then
	if (tb_nr_seq_prest_venc_w.count > 0) then
		--Insere os vencimentos do pagamento, essa e a parte "Por data de pagamento" do demonstrativo de pagamento

		for i in tb_nr_seq_prest_venc_w.first .. tb_nr_seq_prest_venc_w.last loop
			
			insert into pls_rel_pprest_dados_pag(	
				nr_sequencia, nm_usuario, dt_atualizacao,
				nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_versao_rel,
				dt_pagamento, ie_forma_pagamento, cd_banco,
				cd_conta, cd_agencia, vl_total_informado,
				vl_total_processado, vl_total_liberado, vl_total_glosa,
				vl_total_debito, vl_total_credito, vl_final_receber
			) values (
				nextval('pls_rel_pprest_dados_pag_seq'), nm_usuario_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nr_seq_versao_rel_p,
				(select max(dt_vencimento) from pls_pag_prest_vencimento where nr_sequencia = tb_nr_seq_prest_venc_w(i)), ie_forma_pagamento_w, cd_banco_w,
				cd_conta_w, cd_agencia_w, 0,
				0, 0, 0,
				0, 0, 0
			) returning nr_sequencia into STRICT nr_seq_dados_pag_w;

			--Gera os itens do pagamentos (Protocolo e Creditos/Debitos)

			CALL pls_demonstrativo_pgto_pck.gerar_itens_pagamento(	tb_nr_seq_prest_venc_w(i), tb_pls_rel_pag_prestador_p, nr_seq_dados_pag_w,
						nr_seq_versao_rel_p, nm_usuario_p);
			
		end loop;
	end if;
else
	for r_c02_w in c02(	tb_pls_rel_pag_prestador_p.nr_seq_protocolo, tb_pls_rel_pag_prestador_p.nr_seq_protocolo_rec,
				tb_pls_rel_pag_prestador_p.nr_seq_prestador, dt_pagamento_inicio_w,
				dt_pagamento_fim_w, dt_competencia_inicio_w,
				dt_competencia_fim_w, tb_pls_rel_pag_prestador_p.nr_seq_lote_pgto) loop

		--Insere os vencimentos do pagamento, essa e a parte "Por data de pagamento" do demonstrativo de pagamento

		insert into pls_rel_pprest_dados_pag(
			nr_sequencia, nm_usuario, dt_atualizacao,
			nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_versao_rel,
			dt_pagamento, ie_forma_pagamento, cd_banco,
			cd_conta, cd_agencia, vl_total_informado,
			vl_total_processado, vl_total_liberado, vl_total_glosa, 
			vl_total_debito, vl_total_credito, vl_final_receber
		) values (
			nextval('pls_rel_pprest_dados_pag_seq'), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, clock_timestamp(), nr_seq_versao_rel_p,
			r_c02_w.dt_venc_titulo, ie_forma_pagamento_w, cd_banco_w,
			cd_conta_w, cd_agencia_w, 0,
			0, 0, 0,
			0, 0, 0
		) returning nr_sequencia into nr_seq_dados_pag_w;

		--Gera os itens do pagamentos (Protocolo e Creditos/Debitos)

		CALL pls_demonstrativo_pgto_pck.gerar_itens_pagamento(	r_c02_w.nr_sequencia, tb_pls_rel_pag_prestador_p, nr_seq_dados_pag_w,
					nr_seq_versao_rel_p, nm_usuario_p);
	end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_demonstrativo_pgto_pck.gerar_dados_pagamento ( tb_pls_rel_pag_prestador_p pls_rel_pag_prestador, nm_usuario_p usuario.nm_usuario%type, nr_seq_versao_rel_p pls_rel_pprest_versao.nr_sequencia%type) FROM PUBLIC;
