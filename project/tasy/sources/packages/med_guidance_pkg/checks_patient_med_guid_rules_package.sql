-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE med_guidance_pkg.checks_patient_med_guid_rules ( dt_referencia_p timestamp, cd_pessoa_fisica_p PESSOA_FISICA.CD_PESSOA_FISICA%type, nr_atendimento_p ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%type, nm_usuario_p text, ds_candidate_med_fee_p INOUT text ) AS $body$
DECLARE


    ds_reason_w                 varchar(255);
    qt_hospitalizarion_w        double precision;
    qt_peso_w                   double precision;
    qt_peso_nascer_w            double precision;
    qt_idade_w                  varchar(3);
    qt_idade_meses_w            varchar(3);
    si_validation_w             boolean;
    si_peso_valido_w            boolean;
    si_dias_peso_valido_w       boolean;
    dt_nascimento_w             timestamp;
    dt_guidance_w               timestamp;
    dt_teste_w			timestamp;
    ds_default_positive_s       varchar(1) := 'S';
    dt_sysdate_s                timestamp := clock_timestamp();
    qt_proc_w			bigint;

    cursor_rules CURSOR FOR
    SELECT  NR_SEQUENCIA,
            CD_MEDICAL_PRACTICE_CODE,
            SI_CATEGORY,
            DT_START,
            DT_END,
            SI_AGE,
            SI_AGE_CONDITION,
            QT_AGE_YEAR,
            QT_AGE_MONTH,
            SI_LIMIT,
            QT_PERIOD,
            SI_PERIOD_OPTION,
            SI_INTERVAL_FIRST,
            SI_INTERVAL_CONDITION_FIRST,
            QT_INTERVAL_FIRST_PERIOD,
            SI_PERIOD_INTERVAL_FIRST,
            SI_INTERVAL_LAST,
            SI_INTERVAL_CONDITION_LAST,
            QT_INTERVAL_LAST_PERIOD,
            SI_PERIOD_INTERVAL_LAST,
            SI_INTERVAL_HOSPITALIZATION,
            SI_INTERVAL_CONDITION_HOSP,
            QT_INTERVAL_HOSP_PERIOD,
            SI_PERIOD_INTERVAL_HOSP,
            SI_INTERVAL_DISCHARGE,
            SI_INTERVAL_COND_DISCHARGE,
            QT_INTERVAL_HOSP_DISCHARGE,
            SI_PERIOD_INTERVAL_DISCHARGE,
            SI_LIMIT_MED_DEPT,
            CD_LIMIT_MED_DEPARTMENT,
            SI_ASST_DOCT_MED_DEPT,
            CD_ASST_DOCT_MED_DEPARTMNT,
            SI_ASST_DOCT_OCCUPATION,
            CD_ASST_DOCT_ROLE,
            SI_WEIGHT,
            SI_WEIGHT_CONDITION,
            QT_WEIGHT_GRAMS,
            QT_WEIGHT_DAYS,
            SI_BIRTH_WEIGHT,
            SI_BRTH_WEIGHT_CONDITION,
            QT_BRTH_WEIGHT_GRAMS,
            SI_PACEMAKER,
            SI_DISEASE_NAME,
            SI_NARCO_DRUG,
            SI_MEDICINE,
            SI_SURGERY,
            SI_EXAMINATION,
            QT_EXAMS
    FROM    MED_GUID_FEE_WARN_RULE
    WHERE   dt_referencia_p between DT_START AND DT_END;


BEGIN

	DELETE  FROM W_CANDIDATE_MEDICAL_FEE
        WHERE   NM_USUARIO = nm_usuario_p;
	
        ds_candidate_med_fee_p := 'N';
        dt_nascimento_w     := obter_dados_pf_dt(cd_pessoa_fisica_p, 'DN');
        qt_idade_w          := obter_idade(dt_nascimento_w, dt_sysdate_s, 'A');
        qt_idade_meses_w    := obter_idade(dt_nascimento_w, dt_sysdate_s, 'MM');
        qt_peso_nascer_w    := obter_dados_pf(cd_pessoa_fisica_p, 'KGN') * 1000;

        FOR r_cursor_rules IN cursor_rules LOOP
	
	IF (MED_GUIDANCE_PKG.CHECK_HAS_MEDICAL_PRATICE(nr_atendimento_p, r_cursor_rules.cd_medical_practice_code)) THEN
		GOTO FIM;
	END IF;

	IF (r_cursor_rules.si_category >= 0) THEN
                
		IF r_cursor_rules.si_category =  MED_GUIDANCE_PKG.GET_VALUE_CATEGORY(cd_pessoa_fisica_p, r_cursor_rules.cd_medical_practice_code) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(284678) || ';';
		ELSE
			GOTO FIM;
		END IF;

	END IF;

        IF (r_cursor_rules.si_age = ds_default_positive_s) THEN

		si_validation_w := MED_GUIDANCE_PKG.COMPARE_RULE(qt_idade_w || qt_idade_meses_w,
								r_cursor_rules.si_age_condition,
								r_cursor_rules.qt_age_year || r_cursor_rules.qt_age_month);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(291539) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;
	
	IF (r_cursor_rules.si_limit = ds_default_positive_s ) AND (r_cursor_rules.si_category = 0) THEN

		dt_guidance_w := MED_GUIDANCE_PKG.GET_LAST_GUIDANCE(nr_atendimento_p, r_cursor_rules.cd_medical_practice_code);
	
		IF (Length(dt_guidance_w) = 0) THEN
			EXIT;
		END IF;
		
		IF (r_cursor_rules.si_period_option = 3) THEN
	
			qt_hospitalizarion_w := MED_GUIDANCE_PKG.GET_HOSPITALIZATION_PERIOD(cd_pessoa_fisica_p, dt_guidance_w);

			si_validation_w := MED_GUIDANCE_PKG.COMPARE_RULE(qt_hospitalizarion_w, r_cursor_rules.si_period_option, r_cursor_rules.qt_period);

		ELSE

		si_validation_w := MED_GUIDANCE_PKG.COMPARE_REGRA_PERIOD(dt_guidance_w,
									dt_sysdate_s,
									r_cursor_rules.si_period_option,
									'=',
									r_cursor_rules.qt_period);

		END IF;

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043536) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_interval_first = ds_default_positive_s) THEN
		
		si_validation_w := MED_GUIDANCE_PKG.COMPARE_REGRA_PERIOD(MED_GUIDANCE_PKG.GET_DT_ENTRADA_MIN(cd_pessoa_fisica_p),
									dt_sysdate_s,
									r_cursor_rules.si_period_interval_last,
									r_cursor_rules.si_interval_condition_last,
									r_cursor_rules.qt_interval_last_period);

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043537) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_interval_last = ds_default_positive_s) THEN
	
		si_validation_w := MED_GUIDANCE_PKG.COMPARE_REGRA_PERIOD(MED_GUIDANCE_PKG.GET_DT_ENTRADA_MAX(cd_pessoa_fisica_p),
									dt_sysdate_s,
									r_cursor_rules.si_period_interval_last,
									r_cursor_rules.si_interval_condition_last,
									r_cursor_rules.qt_interval_last_period);

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043538) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_interval_hospitalization = ds_default_positive_s) THEN

		si_validation_w := MED_GUIDANCE_PKG.COMPARE_REGRA_PERIOD(MED_GUIDANCE_PKG.GET_DT_ENTRADA_INTER(cd_pessoa_fisica_p),
									dt_sysdate_s,
									r_cursor_rules.si_period_interval_hosp,
									r_cursor_rules.si_interval_condition_hosp,
									r_cursor_rules.qt_interval_hosp_period);

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043539) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_interval_discharge  = ds_default_positive_s) THEN

		si_validation_w := MED_GUIDANCE_PKG.COMPARE_REGRA_PERIOD(MED_GUIDANCE_PKG.GET_DT_ALTA(cd_pessoa_fisica_p),
									dt_sysdate_s,
									r_cursor_rules.si_period_interval_hosp,
									r_cursor_rules.si_interval_cond_discharge,
									r_cursor_rules.qt_interval_hosp_discharge);

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043540) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_limit_med_dept = ds_default_positive_s) THEN

              si_validation_w := 
		MED_GUIDANCE_PKG.COMPARE_DEPART_MED_RESP(cd_pessoa_fisica_p, r_cursor_rules.cd_limit_med_department);

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043541) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_asst_doct_med_dept  = ds_default_positive_s) THEN

		si_validation_w := 
			MED_GUIDANCE_PKG.COMPARE_DEPART_MED_ASSIST(cd_pessoa_fisica_p, 
									r_cursor_rules.cd_asst_doct_med_departmnt);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043542) || ';';
                ELSE
			GOTO FIM;
                END IF;
		
        END IF;

        IF (r_cursor_rules.si_asst_doct_occupation  = ds_default_positive_s) THEN

		si_validation_w := MED_GUIDANCE_PKG.COMPARE_RULE(r_cursor_rules.CD_ASST_DOCT_ROLE, 
								'=', 
								MED_GUIDANCE_PKG.GET_ROLE_MED_ASSIST(cd_pessoa_fisica_p));

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043543) || ';';
		ELSE
			GOTO FIM;
		END IF;

        END IF;

        IF (r_cursor_rules.si_weight  = ds_default_positive_s) THEN

		si_peso_valido_w :=
			MED_GUIDANCE_PKG.COMPARE_RULE(MED_GUIDANCE_PKG.GET_WEIGHT_DAYS(cd_pessoa_fisica_p, 'PESO'),
							r_cursor_rules.si_weight_condition, 
							r_cursor_rules.qt_weight_grams);

                si_dias_peso_valido_w :=
			MED_GUIDANCE_PKG.COMPARE_RULE(MED_GUIDANCE_PKG.GET_WEIGHT_DAYS(cd_pessoa_fisica_p, 'DIAS'),
							'=',
							r_cursor_rules.qt_weight_days);

                si_validation_w := (si_peso_valido_w and si_dias_peso_valido_w);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(927624) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;

        IF (r_cursor_rules.si_birth_weight  = ds_default_positive_s) THEN
		
		si_validation_w := MED_GUIDANCE_PKG.COMPARE_RULE(qt_peso_nascer_w,
								r_cursor_rules.si_brth_weight_condition,
								r_cursor_rules.qt_brth_weight_grams);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043545) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;

        IF (r_cursor_rules.si_narco_drug  = ds_default_positive_s) THEN
		
		si_validation_w := MED_GUIDANCE_PKG.CHECK_HAS_NARCOTIC_DRUGS(cd_pessoa_fisica_p);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043977) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;
	
	IF (r_cursor_rules.si_pacemaker  = ds_default_positive_s) THEN

		si_validation_w := MED_GUIDANCE_PKG.CHECK_HAS_PACEMAKER(cd_pessoa_fisica_p);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(1043975) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;
	
        IF (r_cursor_rules.qt_exams > 0) THEN
                    
		IF (r_cursor_rules.qt_exams = med_guidance_pkg.get_count_exams(cd_pessoa_fisica_p)) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(694984) || ';';
                ELSE
			GOTO FIM;
                END IF;

            END IF;

	IF (r_cursor_rules.si_disease_name = ds_default_positive_s) THEN
                
		si_validation_w := MED_GUIDANCE_PKG.COMPARE_DISEASE_RULE(r_cursor_rules.nr_sequencia, cd_pessoa_fisica_p);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(288148) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;

        IF (r_cursor_rules.si_medicine = ds_default_positive_s) THEN
		
		si_validation_w := MED_GUIDANCE_PKG.COMPARE_MEDICINE_RULE(r_cursor_rules.nr_sequencia, cd_pessoa_fisica_p);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(293070) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;

        IF (r_cursor_rules.si_surgery = ds_default_positive_s) THEN
		
		si_validation_w := MED_GUIDANCE_PKG.COMPARE_SURGERY_RULE(r_cursor_rules.nr_sequencia, cd_pessoa_fisica_p);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(284979) || ';';
                ELSE
			GOTO FIM;
                END IF;
                
        END IF;

        IF (r_cursor_rules.si_examination = ds_default_positive_s) THEN

		si_validation_w := MED_GUIDANCE_PKG.COMPARE_EXAMINATION_RULE(r_cursor_rules.nr_sequencia, cd_pessoa_fisica_p);

                IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(929143) || ';';
                ELSE
			GOTO FIM;
                END IF;

        END IF;

	SELECT count(1)
	INTO STRICT	qt_proc_w
	FROM	MED_GUID_FEE_PROCEDURE
	WHERE	nr_seq_med_guid_fee = r_cursor_rules.nr_sequencia
	AND	clock_timestamp() BETWEEN dt_start AND dt_end;
	    
	IF (qt_proc_w > 0) THEN
		 si_validation_w := MED_GUIDANCE_PKG.COMPARE_PROCEDURE_RULE(r_cursor_rules.nr_sequencia, cd_pessoa_fisica_p);

		IF (si_validation_w) THEN
			ds_reason_w := ds_reason_w || obter_desc_expressao(884230) || ';';
		ELSE
			GOTO FIM;
		END IF;
	END IF;	

            IF LENGTH(ds_reason_w) > 0 THEN
                INSERT INTO W_CANDIDATE_MEDICAL_FEE(
                    NR_SEQUENCIA,
                    DT_ATUALIZACAO,
                    NM_USUARIO,
                    DT_ATUALIZACAO_NREC,
                    NM_USUARIO_NREC,
                    NR_SEQ_MED_GUID_RULE,
                    SI_STATUS,
                    CD_MEDICAL_PRACTICE_CODE,
                    SI_CATEGORY,
                    DS_REASON
                ) VALUES (
                    nextval('w_candidate_medical_fee_seq'),
                    dt_sysdate_s,
                    nm_usuario_p,
                    dt_sysdate_s,
                    nm_usuario_p,
                    r_cursor_rules.nr_sequencia,
                    r_cursor_rules.si_category,
                    r_cursor_rules.cd_medical_practice_code,
                    r_cursor_rules.si_category,
                    ds_reason_w
                );

                ds_candidate_med_fee_p := 'S';
            END IF;
        <<FIM>>
	null;
	END LOOP;
        COMMIT;

    EXCEPTION WHEN OTHERS THEN
        CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(799647, 'DS_ERRO_W=CHECKS_PATIENT_MED_GUID_RULES'|| chr(10) ||SQLERRM);
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE med_guidance_pkg.checks_patient_med_guid_rules ( dt_referencia_p timestamp, cd_pessoa_fisica_p PESSOA_FISICA.CD_PESSOA_FISICA%type, nr_atendimento_p ATENDIMENTO_PACIENTE.NR_ATENDIMENTO%type, nm_usuario_p text, ds_candidate_med_fee_p INOUT text ) FROM PUBLIC;
