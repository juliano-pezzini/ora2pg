-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_arquivo_carteira_pck.carregar_carteiras ( nr_seq_lote_p pls_lote_carteira.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

	ds_sql_w	text;
	r_sql_w		REFCURSOR;
	pls_carencia_w	pls_carencia_row;
	ie_ordenou	boolean;

-- Atributos para ordenacao
c01_w CURSOR FOR
	SELECT	cd_atributo,
		cd_tipo_atributo,
		nr_ordem_resultado
	from	pls_regra_arq_cart_atrib
	where	nr_seq_regra 		= nr_seq_regra_w
	and	(nr_ordem_resultado IS NOT NULL AND nr_ordem_resultado::text <> '')
	and	cd_atributo not in ('1','23','24')
	order	by abs(nr_ordem_resultado);

-- Carencias do Beneficiario
c02_w CURSOR(	nr_seq_segurado_p	pls_segurado.nr_sequencia%type,
		dt_inclusao_operadora_p	pls_segurado.dt_inclusao_operadora%type,
		nr_seq_plano_p		pls_plano.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_carencia,
		b.nr_sequencia nr_seq_tipo_carencia,
		null nr_seq_grupo_carencia,
		coalesce(b.ds_carencia_carteira,b.ds_carencia) ds_carencia,
		to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_inclusao_operadora_p)+a.qt_dias)) dt_carencia,
		b.nr_apresentacao nr_apresentacao,
		c.dt_contratacao,
		b.ie_utilizacao,
		coalesce(a.qt_dias_fora_abrang_ant,a.qt_dias) qt_dias
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
	and	a.ie_origem_carencia_benef	<> 'S'
	and	b.ie_cpt	= 'N'
	
union all

	SELECT	a.nr_sequencia nr_seq_carencia,
		b.nr_sequencia nr_seq_tipo_carencia,
		null nr_seq_grupo_carencia,
		coalesce(b.ds_carencia_carteira,b.ds_carencia) ds_carencia,
		to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_inclusao_operadora_p)+a.qt_dias)) dt_carencia,
		b.nr_apresentacao nr_apresentacao,
		c.dt_contratacao,
		b.ie_utilizacao,
		coalesce(a.qt_dias_fora_abrang_ant,a.qt_dias) qt_dias
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c,
		pls_contrato		d
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_contrato	= d.nr_sequencia
	and	c.nr_seq_contrato	= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	((a.nr_seq_plano_contrato	= nr_seq_plano_p) or (coalesce(a.nr_seq_plano_contrato::text, '') = ''))
	and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
	and	b.ie_cpt	= 'N'
	and	not exists (	select	1
				from	pls_carencia x
				where	x.nr_seq_segurado	= c.nr_sequencia
				and	x.ie_origem_carencia_benef <> 'S'
				and	x.ie_cpt = 'N')
	
union all

	select	a.nr_sequencia nr_seq_carencia,
		b.nr_sequencia nr_seq_tipo_carencia,
		null nr_seq_grupo_carencia,
		coalesce(b.ds_carencia_carteira,b.ds_carencia) ds_carencia,
		to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_inclusao_operadora_p)+a.qt_dias)) dt_carencia,
		b.nr_apresentacao nr_apresentacao,
		c.dt_contratacao,
		b.ie_utilizacao,
		coalesce(a.qt_dias_fora_abrang_ant,a.qt_dias) qt_dias
	from	pls_carencia		a,
		pls_tipo_carencia	b,
		pls_segurado		c,
		pls_plano		d
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_plano		= d.nr_sequencia
	and	c.nr_seq_plano		= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_padrao_carteira,'N')	= 'S'
	and	b.ie_cpt	= 'N'
	and	not exists (	select	1
				from	pls_carencia x
				where	x.nr_seq_segurado	= c.nr_sequencia
				and	x.ie_origem_carencia_benef <> 'S'
				and	x.ie_cpt = 'N')
	and	not exists (	select	1
				from	pls_carencia x
				where	x.nr_seq_contrato	= c.nr_seq_contrato)
	
union all

	--Grupos de carencia
	select	a.nr_sequencia nr_seq_carencia,
		null nr_seq_tipo_carencia,
		b.nr_sequencia nr_seq_grupo_carencia,
		b.ds_grupo ds_carencia,
		to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_inclusao_operadora_p)+a.qt_dias)) dt_carencia,
		b.ie_ordem_impressao nr_apresentacao,
		c.dt_contratacao,
		null ie_utilizacao,
		coalesce(a.qt_dias_fora_abrang_ant,a.qt_dias) qt_dias
	from	pls_carencia		a,
		pls_grupo_carencia	b,
		pls_segurado		c
	where	a.nr_seq_grupo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= c.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_imprimir_carteira,'N')	= 'S'
	
union all

	select	a.nr_sequencia nr_seq_carencia,
		null nr_seq_tipo_carencia,
		b.nr_sequencia nr_seq_grupo_carencia,
		b.ds_grupo ds_carencia,
		to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_inclusao_operadora_p)+a.qt_dias)) dt_carencia,
		b.ie_ordem_impressao nr_apresentacao,
		c.dt_contratacao,
		null ie_utilizacao,
		coalesce(a.qt_dias_fora_abrang_ant,a.qt_dias) qt_dias
	from	pls_carencia		a,
		pls_grupo_carencia	b,
		pls_segurado		c,
		pls_contrato		d
	where	a.nr_seq_grupo_carencia	= b.nr_sequencia
	and	a.nr_seq_contrato	= d.nr_sequencia
	and	c.nr_seq_contrato	= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_imprimir_carteira,'N')	= 'S'
	and	not exists (	select	1
				from	pls_carencia x
				where	x.nr_seq_segurado	= c.nr_sequencia
				and	x.ie_origem_carencia_benef <> 'S'
				and	x.ie_cpt = 'N')
	
union all

	select	a.nr_sequencia nr_seq_carencia,
		null nr_seq_tipo_carencia,
		b.nr_sequencia nr_seq_grupo_carencia,
		b.ds_grupo ds_carencia,
		to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_inclusao_operadora_p)+a.qt_dias)) dt_carencia,
		b.ie_ordem_impressao nr_apresentacao,
		c.dt_contratacao,
		null ie_utilizacao,
		coalesce(a.qt_dias_fora_abrang_ant,a.qt_dias) qt_dias
	from	pls_carencia		a,
		pls_grupo_carencia	b,
		pls_segurado		c,
		pls_plano		d
	where	a.nr_seq_grupo_carencia	= b.nr_sequencia
	and	a.nr_seq_plano		= d.nr_sequencia
	and	c.nr_seq_plano		= d.nr_sequencia
	and	c.nr_sequencia		= nr_seq_segurado_p
	and	coalesce(b.ie_imprimir_carteira,'N')	= 'S'
	and	not exists (	select	1
				from	pls_carencia x
				where	x.nr_seq_segurado	= c.nr_sequencia
				and	x.ie_origem_carencia_benef <> 'S'
				and	x.ie_cpt = 'N')
	and	not exists (	select	1
				from	pls_carencia x
				where	x.nr_seq_contrato	= c.nr_seq_contrato)
	order	by	nr_apresentacao, dt_carencia desc; --Precisa ordenar pela data, pois na regra pode definir para gerar espaco em branco para carencias cumpridas
BEGIN
	-- Cria o comando SQL dinamicamente para buscar as carteiras do lote
	ds_sql_w := 'select	b.nr_seq_segurado,
				c.dt_inclusao_operadora,
				a.nr_sequencia											nr_seq_carteira_emissao,
				trim(b.cd_usuario_plano)									cd_usuario_plano,
				f.dt_nascimento,
				c.dt_contratacao,
				e.ie_tipo_contratacao,
				obter_valor_dominio(1666, e.ie_tipo_contratacao)						ds_tipo_contratacao,
				e.ie_acomodacao,
				decode(e.ie_acomodacao, ''I'', ''Individual'', ''C'', ''Coletivo'', ''N'', ''Nenhum'', null)	ds_acomodacao,
				b.dt_validade_carteira,
				c.cd_pessoa_fisica,
				trim(f.nm_pessoa_fisica)									nm_pessoa_fisica,
				trim(e.cd_rede_refer_ptu)									cd_rede,
				trim((	select	max(x.ds_rede)
					from	ptu_rede_referenciada x
					where	x.cd_rede = e.cd_rede_refer_ptu))						ds_rede,
				e.ie_abrangencia,
				obter_valor_dominio(1667, e.ie_abrangencia)							ds_abrangencia,
				b.nr_via_solicitacao,				
				nvl(d.cd_cgc_estipulante,h.cd_cgc)								cd_estipulante_pj,								
				trim((	select	x.ds_razao_social
					from	pessoa_juridica x
					where	x.cd_cgc = d.cd_cgc_estipulante
					union all
					select	x.ds_razao_social
					from	pessoa_juridica x
					where	x.cd_cgc = h.cd_cgc))								nm_estipulante_pj,
				e.ie_segmentacao,
				obter_valor_dominio(1665, e.ie_segmentacao)							ds_segmentacao,
				b.ds_trilha1,
				b.ds_trilha2,
				b.ds_trilha3,
				b.ds_trilha_qr_code,
				e.ie_regulamentacao,
				obter_valor_dominio(2157, e.ie_regulamentacao)							ds_regulamentacao,
				decode(e.ie_regulamentacao,''P'',e.nr_protocolo_ans,e.cd_scpa)					nr_registro_ans,
				e.nr_sequencia											nr_seq_plano,
				trim(e.nm_fantasia)										nm_fantasia,
				f.nr_cartao_nac_sus,
				(select to_char(nvl(max(y.dt_inicio_vigencia), max(c.dt_inclusao_operadora)) + max(y.qt_dias), ''dd/mm/yyyy'')
				from	pls_tipo_carencia	z,
					pls_carencia		y
				where	z.nr_sequencia		= y.nr_seq_tipo_carencia
				and	y.nr_seq_segurado	= c.nr_sequencia
				and	z.ie_cpt		= ''S'')							dt_cpt,
				c.nr_seq_congenere,
				nvl(d.cd_pf_estipulante,h.cd_pessoa_fisica)							cd_estipulante_pf,
				trim((	select	x.nm_pessoa_fisica
					from	pessoa_fisica x
					where	x.cd_pessoa_fisica = d.cd_pf_estipulante
					union all
					select	x.nm_pessoa_fisica
					from	pessoa_fisica x
					where	x.cd_pessoa_fisica = h.cd_pessoa_fisica))					nm_estipulante_pf,
				decode(nvl(d.cd_pf_estipulante,h.cd_pessoa_fisica),null,''PJ'',''PF'')				ie_tipo_estipulante,
				g.nr_seq_congenere_atend									nr_seq_ops_repasse,
				trim(nvl(pls_obter_dados_segurado(c.nr_sequencia, ''NT''), f.nm_pessoa_fisica))			nm_titular,
				trim(f.nm_abreviado)										nm_abreviado,
				d.cd_cgc_administradora,
				nvl(d.cd_operadora_empresa,h.cd_operadora_empresa),
				trim((	select	max(x.ds_razao_social)
					from	pessoa_juridica x
					where	x.cd_cgc = d.cd_cgc_administradora))						nm_estipulante_adm,
				f.nm_social											nm_social,
				pls_gerar_nome_abreviado(f.nm_social)								nm_social_abreviado,
				f.ie_sexo											ie_sexo,
				obter_valor_dominio(4, f.ie_sexo)								ds_sexo,
				g.ie_tipo_repasse										ie_tipo_repasse,
				g.dt_repasse 											dt_repasse,
				g.dt_fim_repasse										dt_fim_repasse,
				decode(c.nr_seq_titular,null,''T'',''D'') 							cd_titular,
				c.cd_matricula_familia										cd_matricula_familia,
				c.cd_matricula_estipulante									cd_matricula_estipulante,
				pls_obter_area_cobranca(c.nr_sequencia,'|| cd_estabelecimento_p ||')				ds_local_cobranca,
				e.ds_carteira_acomodacao
			from	pls_intercambio h,
				pls_segurado_repasse	g,
				pessoa_fisica		f,
				pls_plano		e,
				pls_contrato		d,
				pls_segurado		c,
				pls_segurado_carteira	b,
				pls_carteira_emissao	a
			where	f.cd_pessoa_fisica		= c.cd_pessoa_fisica
			and	e.nr_sequencia			= c.nr_seq_plano
			and	d.nr_sequencia(+)		= c.nr_seq_contrato
			and	c.nr_sequencia			= b.nr_seq_segurado
			and	b.nr_sequencia			= a.nr_seq_seg_carteira
			and	g.nr_seq_segurado(+)		= c.nr_sequencia
			and	g.ie_tipo_compartilhamento(+)	= 1
			and	g.dt_liberacao(+)		is not null
			and	g.dt_fim_repasse(+)		is null
			and     h.nr_sequencia(+)		= c.nr_seq_intercambio
			and	a.nr_seq_lote			= ' || nr_seq_lote_p;
	
	-- Ordenacao
	ie_ordenou := false;
	
	for r01_w in c01_w loop
		
		if (r01_w.cd_atributo not in (23,24,27,28,46))then --Dominios sem possibilidade de order by
			-- Virgula
			if 	ie_ordenou then
				ds_sql_w := ds_sql_w || ',';
			else
				ds_sql_w := ds_sql_w || chr(13) || ' order by ';
				ie_ordenou := true;
			end if;
			
			if (r01_w.cd_atributo = 2) then
				-- Beneficiario - Data de contratacao
				ds_sql_w := ds_sql_w || ' dt_contratacao';
			elsif (r01_w.cd_atributo = 3) then
				-- Beneficiario - Data de nascimento 
				ds_sql_w := ds_sql_w || ' dt_nascimento';
			elsif (r01_w.cd_atributo = 4) then
				-- Beneficiario - Nome
				ds_sql_w := ds_sql_w || ' nm_pessoa_fisica';
			elsif (r01_w.cd_atributo = 5) then
				-- Beneficiario - CPT (Sim ou Nao)
				ds_sql_w := ds_sql_w || ' decode(dt_cpt, null, ''N'', ''S'')';
			elsif (r01_w.cd_atributo = 6) then
				-- Beneficiario - Cartao nacional de saude
				ds_sql_w := ds_sql_w || ' nr_cartao_nac_sus';
			elsif (r01_w.cd_atributo = 7) then
				-- Carteira - Cartao de Identificacao
				ds_sql_w := ds_sql_w || ' cd_usuario_plano';
			elsif (r01_w.cd_atributo = 8) then
				-- Carteira - Validade da carteira
				ds_sql_w := ds_sql_w || ' dt_validade_carteira';
			elsif (r01_w.cd_atributo = 9) then
				-- Carteira - Via da carteira
				ds_sql_w := ds_sql_w || ' nr_via_solicitacao';
			elsif (r01_w.cd_atributo = 10) then
				-- Carteira - Trilha 1
				ds_sql_w := ds_sql_w || ' ds_trilha1';
			elsif (r01_w.cd_atributo = 11) then
				-- Carteira - Trilha 2
				ds_sql_w := ds_sql_w || ' ds_trilha2';
			elsif (r01_w.cd_atributo = 12) then
				-- Carteira - Trilha 3
				ds_sql_w := ds_sql_w || ' ds_trilha3';
			elsif (r01_w.cd_atributo = 13) then
				-- Contrato - Estipulante
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' cd_estipulante_pj';
				else
					ds_sql_w := ds_sql_w || ' nm_estipulante_pj';
				end if;
			elsif (r01_w.cd_atributo = 14) then
				-- Produto - Tipo de contratacao
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' ie_tipo_contratacao';
				else
					ds_sql_w := ds_sql_w || ' ds_tipo_contratacao';
				end if;
			elsif (r01_w.cd_atributo = 15) then
				-- Produto - Acomodacao
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' ie_acomodacao';
				else
					ds_sql_w := ds_sql_w || ' ds_acomodacao';
				end if;
			elsif (r01_w.cd_atributo = 16) then
				-- Produto - Rede de atendimento
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' cd_rede';
				else
					ds_sql_w := ds_sql_w || ' ds_rede';
				end if;
			elsif (r01_w.cd_atributo = 17) then
				-- Produto - Regulamentacao
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' ie_regulamentacao';
				else
					ds_sql_w := ds_sql_w || ' ds_regulamentacao';
				end if;
			elsif (r01_w.cd_atributo = 18) then
				-- Produto - Abrangencia
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' ie_abrangencia';
				else
					ds_sql_w := ds_sql_w || ' ds_abrangencia';
				end if;
			elsif (r01_w.cd_atributo = 19) then
				-- Produto - Segmentacao
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' ie_segmentacao';
				else
					ds_sql_w := ds_sql_w || ' ds_segmentacao';
				end if;
			elsif (r01_w.cd_atributo = 20) then
				-- Produto - Registro ANS
				ds_sql_w := ds_sql_w || ' nr_registro_ans';
			elsif (r01_w.cd_atributo = 21) then
				-- Produto - Nome fantasia
				ds_sql_w := ds_sql_w || ' nm_fantasia';
			elsif (r01_w.cd_atributo = 22) then
				-- Beneficiario - CPT (Data de vencimento)
				ds_sql_w := ds_sql_w || ' dt_cpt';
			elsif (r01_w.cd_atributo = 25) then
				--Estipulante PF
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' cd_estipulante_pf';
				else
					ds_sql_w := ds_sql_w || ' nm_estipulante_pf';
				end if;
			elsif (r01_w.cd_atributo = 26) then
				--Estipulante PF ou PJ
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' nvl(cd_estipulante_pf, cd_estipulante_pj)';
				else
					ds_sql_w := ds_sql_w || ' nvl(nm_estipulante_pf, nm_estipulante_pj)';
				end if;
			elsif (r01_w.cd_atributo = 29) then
				--Beneficiario - Nome titular
				ds_sql_w := ds_sql_w || ' nm_titular';
			elsif (r01_w.cd_atributo = 30) then
				--Beneficiario - Nome abreviado
				ds_sql_w := ds_sql_w || ' nm_abreviado';
			elsif (r01_w.cd_atributo = 31) then
				--Contrato - Administradora de beneficios
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' cd_cgc_administradora';
				else
					ds_sql_w := ds_sql_w || ' nm_estipulante_adm';
				end if;
			elsif (r01_w.cd_atributo = 32) then
				--Contrato - Codigo da empresa
				ds_sql_w := ds_sql_w || ' cd_operadora_empresa';
			elsif (r01_w.cd_atributo = 33) then
				-- Beneficiario - Nome social
				ds_sql_w := ds_sql_w || ' nm_social';
			elsif (r01_w.cd_atributo = 34) then
				-- Beneficiario - Nome social abreviado
				ds_sql_w := ds_sql_w || ' nm_social_abreviado';
			elsif (r01_w.cd_atributo = 35) then
				-- Beneficiario - Sexo
				if (r01_w.cd_tipo_atributo = 'C') then
					ds_sql_w := ds_sql_w || ' ie_sexo';
				else
					ds_sql_w := ds_sql_w || ' ds_sexo';
				end if;
			elsif (r01_w.cd_atributo = 36) then
				--Carteira - QR CODE
				ds_sql_w := ds_sql_w || ' ds_trilha_qr_code';
			elsif (r01_w.cd_atributo = 37) then
				--Compartilhamento de risco - Tipo
				ds_sql_w := ds_sql_w || ' ie_tipo_repasse';
			elsif (r01_w.cd_atributo = 38) then
				--Compartilhamento de risco - Data inicio
				ds_sql_w := ds_sql_w || ' dt_repasse';
			elsif (r01_w.cd_atributo = 39) then
				--Compartilhamento de risco - Data fim
				ds_sql_w := ds_sql_w || ' dt_fim_repasse';
			elsif (r01_w.cd_atributo = 40) then
				--Beneficiario - Titularidade
				ds_sql_w := ds_sql_w || ' cd_titular';
			elsif (r01_w.cd_atributo = 41) then
				--Beneficiario - Matricula familia
				ds_sql_w := ds_sql_w || ' cd_matricula_familia';
			elsif (r01_w.cd_atributo = 42) then
				--Beneficiario - Matricula estipulante
				ds_sql_w := ds_sql_w || ' cd_matricula_estipulante';
			elsif (r01_w.cd_atributo = 43) then
				--Beneficiario - Local de cobranca
				ds_sql_w := ds_sql_w || ' ds_local_cobranca';
			elsif (r01_w.cd_atributo = 44) then
				--Contrato - Tipo de estipulante
				ds_sql_w := ds_sql_w || ' ie_tipo_estipulante';
			elsif (r01_w.cd_atributo = 45) then
				--Produto - Descricao acomodacao
				ds_sql_w := ds_sql_w || ' ds_carteira_acomodacao';
			end if; 		
			-- Crescente ou decrescente
			if (r01_w.nr_ordem_resultado < 0) then
				ds_sql_w := ds_sql_w || ' desc';
			end if;
		end if;
	end loop;

	-- Carrega as carteiras em um vetor global
	open r_sql_w for EXECUTE ds_sql_w;
	loop
		fetch r_sql_w bulk collect into current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row limit pls_util_cta_pck.qt_registro_transacao_w;
		exit when current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row.count = 0;
		
		-- Processa Carteiras
		for i in current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row.first .. current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row.last loop
			-- Carrega Carencias do Beneficiario
			current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row.delete;
			open c02_w(current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row[i].nr_seq_segurado, current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row[i].dt_inclusao_operadora, current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row[i].nr_seq_plano);
			loop
				fetch c02_w bulk collect into pls_carencia_w;
				exit when pls_carencia_w.count = 0;
				PERFORM set_config('pls_gerar_arquivo_carteira_pck.pls_carencia_t', pls_carencia_w, false);
			end loop;
			close c02_w;
			
			-- Processa Atributos da Carteira
			CALL CALL pls_gerar_arquivo_carteira_pck.criar_registro(current_setting('pls_gerar_arquivo_carteira_pck.pls_carteira_t')::pls_carteira_row(i), nr_seq_lote_p, cd_estabelecimento_p);
		end loop;
	end loop;
	close r_sql_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_arquivo_carteira_pck.carregar_carteiras ( nr_seq_lote_p pls_lote_carteira.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
