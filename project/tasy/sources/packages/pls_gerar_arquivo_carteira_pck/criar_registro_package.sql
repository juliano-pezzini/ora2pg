-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_gerar_arquivo_carteira_pck.criar_registro ( pls_carteira_p pls_carteira_r, nr_seq_lote_p pls_lote_carteira.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

	ie_gerar_atributo_w	varchar(1);
	nm_atributo_w		varchar(255)	:= '';
        qt_tamanho_aux_w	bigint;
        vl_atributo_aux_w	varchar(255);
	str			varchar(1);
        ind			bigint;
	nr_carencia_w		integer;
	cd_ans_w		pls_congenere.cd_ans%type;
	ie_carencia_cumprir_w	varchar(1);
	cd_caracter_completar_w	pls_regra_arq_cart_atrib.cd_caracter_completar%type;
	valor_bind_w			sql_pck.t_dado_bind;
	cursor_w					sql_pck.t_cursor;
	ds_function_w 		varchar(4000);
	
	c01_w CURSOR(nr_seq_regra_atrib_p pls_regra_arq_cart_atrib.nr_sequencia%type) FOR
		SELECT	max(a.ds_valor_convertido)
		from	pls_regra_arq_cart_depara a
		where	a.nr_seq_regra_atrib		= nr_seq_regra_atrib_p
		and	trim(both upper(a.ds_valor_original))= trim(both upper(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000)));
	
	C02 CURSOR(	nr_seq_plano_pc	pls_plano.nr_sequencia%type) FOR
		SELECT	ds_municipio
		from (
			SELECT	b.ds_municipio
			from	pls_plano_area a,
				sus_municipio b
			where	b.cd_municipio_ibge	= a.cd_municipio_ibge
			and	a.nr_seq_plano		= nr_seq_plano_pc
			
union all

			select	b.ds_municipio
			from	pls_plano_area a,
				sus_municipio b
			where	b.ds_unidade_federacao	= a.sg_estado
			and	a.nr_seq_plano		= nr_seq_plano_pc
			
union all

			select	d.ds_municipio
			from	pls_plano_area a,
				pls_regiao b,
				pls_regiao_local c,
				sus_municipio d
			where	b.nr_sequencia	= a.nr_seq_regiao
			and	b.nr_sequencia	= c.nr_seq_regiao
			and	d.cd_municipio_ibge = c.cd_municipio_ibge
			and	a.nr_seq_plano	= nr_seq_plano_pc
			
union all

			select	d.ds_municipio
			from	pls_plano_area a,
				pls_regiao b,
				pls_regiao_local c,
				sus_municipio d
			where	b.nr_sequencia	= a.nr_seq_regiao
			and	b.nr_sequencia	= c.nr_seq_regiao
			and	d.ds_unidade_federacao = c.sg_uf_municipio
			and 	coalesce(c.cd_municipio_ibge::text, '') = ''
			and	a.nr_seq_plano	= nr_seq_plano_pc
		) alias2 group by ds_municipio;
BEGIN
	-- Inicia contador de carencias
	nr_carencia_w := 0;
	ie_carencia_cumprir_w	:= 'N';
	
	--Verifica se tem carencias a cumprir
	if (current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row.count > 0) then
		for i in current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row.first..pls_carencia_t.last loop
			if 	((current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[i](.dt_carencia IS NOT NULL AND .dt_carencia::text <> '')) and (trunc(current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[i].dt_carencia,'dd') > trunc(clock_timestamp(),'dd'))) then
				ie_carencia_cumprir_w	:= 'S';
			end if;
		end loop;
	end if;
	
	-- Cria linha para ser inserida no arquivo posteriormente
	PERFORM set_config('pls_gerar_arquivo_carteira_pck.ds_linha_w', '', false);
	for i in current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row.first .. current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row.last loop
		ie_gerar_atributo_w	:= 'N';
		if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].qt_regra_condicao > 0) then
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_gerar_atributo_w
			from	pls_regra_arq_cart_cond a
			where	a.nr_seq_regra_atrib	= current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].nr_sequencia
			and	((a.ie_tipo_estipulante = 'A') or (a.ie_tipo_estipulante = pls_carteira_p.ie_tipo_estipulante))
			and	((coalesce(a.ie_abrangencia::text, '') = '') or (a.ie_abrangencia = pls_carteira_p.ie_abrangencia))
			and	((coalesce(a.nr_seq_sca::text, '') = '') or (	exists (SELECT	1
									from	pls_sca_vinculo x
									where	x.nr_seq_segurado = pls_carteira_p.nr_seq_segurado
									and	x.nr_seq_plano = a.nr_seq_sca)));
		else
			ie_gerar_atributo_w	:= 'S';
		end if;
		if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_exibir_atributo = 'S') then
			if (ie_gerar_atributo_w = 'S') then
				-- Nome do Atributo para mensagens de erro
				nm_atributo_w := obter_valor_dominio(8571, current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo);
				
				-- O tamanho da mascara nao pode ser maior que o tamanho do atributo
				if (coalesce(length(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara), 0) > current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].qt_tamanho) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1107367,'NM_ATRIBUTO='||nm_atributo_w||';QT_TAMANHO_ATRIB='||length(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara)||';QT_TAMANHO='||current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].qt_tamanho);
				end if;
				
				-- Limpa o conteudo do atributo anterior
				PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', null, false);
				
				-- Verifica qual atributo carregar
				if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 1) then
					-- Valor padrao
					if (coalesce(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_somente_sem_carencia, 'N') = 'N') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].vl_padrao, false);
					elsif 	((current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_somente_sem_carencia = 'S') and (ie_carencia_cumprir_w = 'N')) then
						-- Somente se nao possui carencia e estiver configurado para ser exibido
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].vl_padrao, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 2) then
					-- Beneficiario - Data de contratacao
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', to_char(pls_carteira_p.dt_contratacao, 'dd/mm/rrrr'), false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 3) then
					-- Beneficiario - Data de nascimento
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', to_char(pls_carteira_p.dt_nascimento, 'dd/mm/rrrr'), false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 4) then
					-- Beneficiario - Nome
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_pessoa_fisica, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 5) then
					-- Beneficiario - CPT (Sim ou Nao)
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						if (coalesce(pls_carteira_p.dt_cpt::text, '') = '') then
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', 'N', false);
						else
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', 'S', false);
						end if;
					else
						if (coalesce(pls_carteira_p.dt_cpt::text, '') = '') then
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', wheb_mensagem_pck.get_texto(1107366), false);--'Nao';
						else
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', wheb_mensagem_pck.get_texto(1107393), false);--'Sim';
						end if;
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 6) then
					-- Beneficiario - Cartao nacional de saude
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nr_cartao_nac_sus, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 7) then
					-- Carteira - Cartao de Identificacao
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_usuario_plano, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 8) then
					-- Carteira - Validade da carteira
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', to_char(pls_carteira_p.dt_validade_carteira, 'dd/mm/rrrr'), false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 9) then
					-- Carteira - Via da carteira
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nr_via_solicitacao, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 10) then
					-- Carteira - Trilha 1
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_trilha1, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 11) then
					-- Carteira - Trilha 2
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_trilha2, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 12) then
					-- Carteira - Trilha 3
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_trilha3, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 13) then
					-- Contrato - Estipulante PJ
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_estipulante_pj, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_estipulante_pj, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 14) then
					-- Produto - Tipo de contratacao
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_tipo_contratacao, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_tipo_contratacao, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 15) then
					-- Produto - Acomodacao
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_acomodacao, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_acomodacao, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 16) then
					-- Produto - Rede de atendimento
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_rede, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_rede, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 17) then
					-- Produto - Regulamentacao
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_regulamentacao, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_regulamentacao, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 18) then
					-- Produto - Abrangencia
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_abrangencia, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_abrangencia, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 19) then
					-- Produto - Segmentacao
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_segmentacao, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_segmentacao, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 20) then
					-- Produto - Registro ANS
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nr_registro_ans, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 21) then
					-- Produto - Nome fantasia
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_fantasia, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 22) then
					-- Beneficiario - CPT (Data de vencimento)
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.dt_cpt, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 23) then
					if	((current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_carencias_cumpridas = '1') or (ie_carencia_cumprir_w = 'S'))  then
						-- Carencia
						if (current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row.count > nr_carencia_w) and (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row.count > 0) then
							nr_carencia_w := nr_carencia_w + 1;
							for j in current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row.first..pls_atr_car_t.last loop
								-- Limpa a carencia anterior
								vl_atributo_aux_w	:= null;
								
								-- Verifica qual atributo carregar
								if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].cd_atributo = 1) then -- Valor padrao
									vl_atributo_aux_w := current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].vl_padrao;
								elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].cd_atributo = 2) then -- Descricao
									-- Verifica se considera valor padrao caso a carencia esteja cumprida
									if (current_setting('pls_gerar_arquivo_carteira_pck.pls_regra_w')::pls_regra_arq_carteira%rowtype.ie_padrao_dt_carencia = 'S') and (current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[nr_carencia_w].dt_carencia <= trunc(clock_timestamp())) and (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j](.vl_padrao IS NOT NULL AND .vl_padrao::text <> '')) then
										vl_atributo_aux_w := current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].vl_padrao;
									else
										vl_atributo_aux_w := current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[nr_carencia_w].ds_carencia;
									end if;
								elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].cd_atributo = 3) then --Data
									-- Verifica se considera valor padrao caso a carencia esteja cumprida
									if (current_setting('pls_gerar_arquivo_carteira_pck.pls_regra_w')::pls_regra_arq_carteira%rowtype.ie_padrao_dt_carencia = 'S') and (current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[nr_carencia_w].dt_carencia <= trunc(clock_timestamp())) and (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j](.vl_padrao IS NOT NULL AND .vl_padrao::text <> '')) then
										vl_atributo_aux_w := current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].vl_padrao;
									elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[nr_carencia_w](.dt_carencia IS NOT NULL AND .dt_carencia::text <> '')) then
										begin
											-- Aplica a mascara
											vl_atributo_aux_w := to_char(current_setting('pls_gerar_arquivo_carteira_pck.pls_carencia_t')::pls_carencia_row[nr_carencia_w].dt_carencia, coalesce(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara,'dd/mm/rrrr'));
										exception
											when others then
												CALL wheb_mensagem_pck.exibir_mensagem_abort(1107370,'DS_MASCARA='||current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara||';NM_ATRIBUTO_W='||nm_atributo_w);
										end;
									end if;
								end if;
								
								-- Valor padrao
								if (coalesce(vl_atributo_aux_w::text, '') = '') then
									vl_atributo_aux_w := current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].vl_padrao;
								end if;
								
								-- Ajusta ao tamanho do valor do atributo
								if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j](.qt_tamanho IS NOT NULL AND .qt_tamanho::text <> '')) then
									vl_atributo_aux_w := rpad(coalesce(vl_atributo_aux_w, ' '), current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].qt_tamanho, ' ');
									vl_atributo_aux_w := substr(vl_atributo_aux_w, 1, current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].qt_tamanho);
								end if;
								
								-- Carrega todas os atributos da carencia em uma unica coluna
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000) || vl_atributo_aux_w, false);
							end loop;
						elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row.count > 0) then	--Se nao tem carencia, precisa gerar o valor padrao (Separador)
							for j in current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row.first..pls_atr_car_t.last loop
								vl_atributo_aux_w	:= null;
								
								if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].cd_atributo = 1) then -- Valor padrao
									vl_atributo_aux_w := current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].vl_padrao;
								end if;
								
								if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j](.qt_tamanho IS NOT NULL AND .qt_tamanho::text <> '')) then
									vl_atributo_aux_w := rpad(coalesce(vl_atributo_aux_w, ' '), current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].qt_tamanho, ' ');
									vl_atributo_aux_w := substr(vl_atributo_aux_w, 1, current_setting('pls_gerar_arquivo_carteira_pck.pls_atr_car_t')::pls_atr_car_row[j].qt_tamanho);
								end if;
								
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000) || vl_atributo_aux_w, false);
							end loop;
						end if;
					elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_carencias_cumpridas = '2') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', lpad(' ', current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].qt_tamanho, ' '), false);
					elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_carencias_cumpridas = '3') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', null, false);	-- Desconsiderar atributo
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 24) then
					cd_ans_w	:= null;
					
					if (pls_carteira_p.nr_seq_congenere IS NOT NULL AND pls_carteira_p.nr_seq_congenere::text <> '') then
						select	max(cd_ans)
						into STRICT	cd_ans_w
						from	pls_congenere
						where	nr_sequencia = pls_carteira_p.nr_seq_congenere
						and	cd_estabelecimento = cd_estabelecimento_p;
					end if;
					
					if (coalesce(cd_ans_w::text, '') = '') then
						select	max(cd_ans)
						into STRICT	cd_ans_w
						from	pls_outorgante
						where	cd_estabelecimento = cd_estabelecimento_p;
					end if;
					
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', cd_ans_w, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 25) then --Contrato estipulante PF
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_estipulante_pf, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_estipulante_pf, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 26) then --Contrato estipulante PF ou PJ
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', coalesce(pls_carteira_p.cd_estipulante_pf, pls_carteira_p.cd_estipulante_pj), false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', coalesce(pls_carteira_p.nm_estipulante_pf, pls_carteira_p.nm_estipulante_pj), false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 27) then --Produto - area de atuacao (Municipios)
					for r_c02_w in C02(pls_carteira_p.nr_seq_plano) loop
						begin
						if	((current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i]coalesce(.qt_tamanho::text, '') = '') or (length(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000) || ',' || r_c02_w.ds_municipio) <= current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].qt_tamanho)) then
							if (current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::coalesce(varchar(2000)::text, '') = '') then
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', r_c02_w.ds_municipio, false);
							else
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', substr(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000) || ',' || r_c02_w.ds_municipio, 1, 2000), false);
							end if;
						end if;
						end;
					end loop;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 28) then --Beneficiario - Operadora de compartilhamento (Transferido)
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', coalesce(pls_obter_dados_cooperativa(pls_carteira_p.nr_seq_ops_repasse,'C'),pls_carteira_p.nr_seq_ops_repasse), false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_obter_dados_cooperativa(pls_carteira_p.nr_seq_ops_repasse,'RS'), false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 29) then
					-- Beneficiario - Nome titular
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_titular, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 30) then --Beneficiario - Nome abreviado
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_abreviado, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 31) then --Contrato - Administradora de beneficios
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_cgc_administradora, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_estipulante_adm, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 32) then --Contrato - Codigo da empresa
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_operadora_empresa, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 33) then --Beneficiario - Nome social
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_social, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 34) then --Beneficiario - Nome social abreviado
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.nm_social_abreviado, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 35) then --Beneficiario - Sexo
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_sexo, false);
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_sexo, false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 36) then
					-- Carteira - QR CODE
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_trilha_qr_code, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 37) then
					--Compartilhamento de risco - Tipo
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_tipo_repasse, false);						
					else
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', obter_valor_dominio(3384,pls_carteira_p.ie_tipo_repasse), false);
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 38) then
					--Compartilhamento de risco - Data inicio
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.dt_repasse, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 39) then
					--Compartilhamento de risco - Data fim
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.dt_fim_repasse, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 40) then
					--Beneficiario - Titularidade
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_titular, false);
					else
						if (pls_carteira_p.cd_titular = 'T') then
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', obter_expressao_dic_objeto(1105960), false);--'Titular';
						else
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', obter_expressao_dic_objeto(1107357), false);--'Dependente';
						end if;
					end if;
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 41) then
					--Beneficiario - Matricula familia
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_matricula_familia, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 42) then
					--Beneficiario - Matricula estipulante
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.cd_matricula_estipulante, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 43) then
					--Beneficiario - Local de cobranca
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_local_cobranca, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 45) then
					--Produto - Descricao acomodacao
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ds_carteira_acomodacao, false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 46) then
					--Funcao - Objeto do cliente
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i](.ds_function IS NOT NULL AND .ds_function::text <> '')) then
						valor_bind_w := sql_pck.bind_variable(':NR_SEQ_LOTE', nr_seq_lote_p, valor_bind_w);
						valor_bind_w := sql_pck.bind_variable(':NR_SEQ_SEGURADO', pls_carteira_p.nr_seq_segurado, valor_bind_w);
						valor_bind_w := sql_pck.bind_variable(':CD_PESSOA_FISICA', pls_carteira_p.cd_pessoa_fisica, valor_bind_w);
						valor_bind_w := sql_pck.bind_variable(':NR_SEQ_PLANO', pls_carteira_p.nr_seq_plano, valor_bind_w);
						valor_bind_w := sql_pck.bind_variable(':CD_ESTABELECIMENTO', cd_estabelecimento_p, valor_bind_w);
						ds_function_w := ' select (' || upper(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_function) || ') from dual where rownum = 1 ';
						
						valor_bind_w := sql_pck.executa_sql_cursor(ds_function_w, valor_bind_w);
						fetch	cursor_w
							into	current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000);
							
							if (cursor_w%ISOPEN) then
								close	cursor_w;
						end if;
					end if;
					
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo = 44) then
					--Contrato - Tipo de estipulante
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_tipo_atributo = 'C') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_carteira_p.ie_tipo_estipulante, false);
					else
						if (pls_carteira_p.ie_tipo_estipulante = 'PF') then
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', obter_expressao_dic_objeto(1107358), false);--'Pessoa Fisica';
						else
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', obter_expressao_dic_objeto(1107359), false);--'Pessoa Juridica';
						end if;
					end if;				
				end if;
				
				-- Aplica mascara ao valor do atributo
				if (current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::(varchar(2000) IS NOT NULL AND (varchar(2000))::text <> '') and current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i](.ds_mascara IS NOT NULL AND .ds_mascara::text <> '')) then
					if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo in (2, 3, 8, 22, 38, 39)) then
						-- Datas
						begin
							-- Aplica a mascara
							if (current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::(varchar(2000) IS NOT NULL AND (varchar(2000))::text <> '')) then
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', to_char(to_date(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), 'dd/mm/rrrr'), current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara), false);
							end if;
						exception
							when others then
								CALL wheb_mensagem_pck.exibir_mensagem_abort(1107370,'DS_MASCARA='||current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara||';NM_ATRIBUTO_W='||nm_atributo_w);
						end;
					elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_atributo not in (23)) then
						-- Demais atributos 
						
						-- Inicia variaveis
						--qt_tamanho_aux_w	:= regexp_count(pls_atributo_t(i).ds_mascara, '[A-Z,0-9]', 1, 'i');
						qt_tamanho_aux_w	:= length(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara) - coalesce(length(regexp_replace( current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara, '[A-Z,0-9]', null)), 0 );
						vl_atributo_aux_w	:= '';
						str			:= '';
						ind			:= 1;
						
						-- Preenche com caracteres para completar o tamanho do atributo
						if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i](.cd_caracter_completar IS NOT NULL AND .cd_caracter_completar::text <> '')) then
							if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_posicao_completar = 'L') then
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', lpad(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), qt_tamanho_aux_w, current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_caracter_completar), false);
							elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_posicao_completar = 'R') then
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', rpad(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), qt_tamanho_aux_w, current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].cd_caracter_completar), false);
							end if;
						end if;
						
						-- Aplica a mascara
						for j in 1..length(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara) loop
							str := substr(current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ds_mascara, j, 1);
							if (regexp_like(str, '[A-Z,0-9]')) then
								vl_atributo_aux_w := vl_atributo_aux_w || substr(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), ind, 1);
								ind := ind + 1;
							else
								vl_atributo_aux_w := vl_atributo_aux_w || str;
							end if;
						end loop;
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', vl_atributo_aux_w, false);
					end if;
				end if;
				
				-- Maiusculas e minusculas
				if (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_letras_valor = 'U') then
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', upper(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000)), false);
				elsif (current_setting('pls_gerar_arquivo_carteira_pck.pls_atributo_t')::pls_atributo_row[i].ie_letras_valor = 'L') then
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', lower(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000)), false);
				end if;
				
				-- Troca de Valor (De/Para)
				open c01_w(pls_atributo_t[i].nr_sequencia);
				fetch c01_w into vl_atributo_aux_w;
				close c01_w;
				
				if (vl_atributo_aux_w IS NOT NULL AND vl_atributo_aux_w::text <> '') then
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', vl_atributo_aux_w, false);
				end if;
				
				-- Valor Padrao
				if (pls_atributo_t[i].cd_atributo != 1) then
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', coalesce(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), pls_atributo_t[i].vl_padrao), false);
				end if;
				
				-- Valor inicial fixo
				if (pls_atributo_t[i](.vl_fixo_inicio IS NOT NULL AND .vl_fixo_inicio::text <> '')) then
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_atributo_t[i].vl_fixo_inicio || current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), false);
				end if;
				
				-- Ajusta ao tamanho do valor do atributo
				if (pls_atributo_t[i](.qt_tamanho IS NOT NULL AND .qt_tamanho::text <> '')) then
					-- Se possui caracter e posicao, completa o valor do atributo
					if (pls_atributo_t[i](.cd_caracter_completar IS NOT NULL AND .cd_caracter_completar::text <> '')) then
						if (pls_atributo_t[i].ie_posicao_completar = 'L') then
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', lpad(coalesce(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), pls_atributo_t[i].cd_caracter_completar), pls_atributo_t[i].qt_tamanho, pls_atributo_t[i].cd_caracter_completar), false);
						elsif (pls_atributo_t[i].ie_posicao_completar = 'R') then
							PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', rpad(coalesce(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), pls_atributo_t[i].cd_caracter_completar), pls_atributo_t[i].qt_tamanho, pls_atributo_t[i].cd_caracter_completar), false);
						end if;
					end if;
					
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', substr(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), 1, pls_atributo_t[i].qt_tamanho), false);
				end if;
				
				--Remove acentuacao
				if (pls_atributo_t[i].ie_remover_acentuacao = 'S') then
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', elimina_acentuacao(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000)), false);
				end if;
				
				-- Adiciona a linha
				PERFORM set_config('pls_gerar_arquivo_carteira_pck.ds_linha_w', current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767) || current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000) || current_setting('pls_gerar_arquivo_carteira_pck.ie_separador_w')::varchar(10), false);
			else
				if (pls_atributo_t[i].ie_vl_padrao_condicao <> 'N') then
					if (pls_atributo_t[i].ie_vl_padrao_condicao = 'P') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', pls_atributo_t[i].vl_padrao, false);
						cd_caracter_completar_w	:= pls_atributo_t[i].cd_caracter_completar;
					elsif (pls_atributo_t[i].ie_vl_padrao_condicao = 'B') then
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', ' ', false);
						cd_caracter_completar_w	:= ' ';
					end if;
					
					if (pls_atributo_t[i](.qt_tamanho IS NOT NULL AND .qt_tamanho::text <> '')) then
						-- Se possui caracter e posicao, completa o valor do atributo
						if (cd_caracter_completar_w IS NOT NULL AND cd_caracter_completar_w::text <> '') then
							if (pls_atributo_t[i].ie_posicao_completar = 'L') then
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', lpad(coalesce(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), cd_caracter_completar_w), pls_atributo_t[i].qt_tamanho, cd_caracter_completar_w), false);
							elsif (pls_atributo_t[i].ie_posicao_completar = 'R') then
								PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', rpad(coalesce(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), cd_caracter_completar_w), pls_atributo_t[i].qt_tamanho, cd_caracter_completar_w), false);
							end if;
						end if;
						PERFORM set_config('pls_gerar_arquivo_carteira_pck.vl_atributo_w', substr(current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000), 1, pls_atributo_t[i].qt_tamanho), false);
					end if;
					
					-- Adiciona a linha
					PERFORM set_config('pls_gerar_arquivo_carteira_pck.ds_linha_w', current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767) || current_setting('pls_gerar_arquivo_carteira_pck.vl_atributo_w')::varchar(2000) || current_setting('pls_gerar_arquivo_carteira_pck.ie_separador_w')::varchar(10), false);
				end if;
			end if;
		end if;
	end loop;

	if (current_setting('pls_gerar_arquivo_carteira_pck.ie_separador_w')::(varchar(10) IS NOT NULL AND (varchar(10))::text <> '')) then
		select substr(current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767), 0, (length(current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767)) -1))
		into STRICT 	 current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767)
		;
	end if;
	-- Verifica que a linha gerada nao possua mais do que a quantidade de caracteres permitidas
	if (length(current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767)) > current_setting('pls_gerar_arquivo_carteira_pck.qt_tamanho_max_linha_w')::integer-2) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1107387,'QT_TAM_LINHA='||length(current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767))||';QT_TAM_MAX_LINHA='||current_setting('pls_gerar_arquivo_carteira_pck.qt_tamanho_max_linha_w')::integer);
	end if;
	
	-- Escreve linha no arquivo
	CALL pls_utl_file_pck.escrever(current_setting('pls_gerar_arquivo_carteira_pck.ds_linha_w')::varchar(32767));
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_arquivo_carteira_pck.criar_registro ( pls_carteira_p pls_carteira_r, nr_seq_lote_p pls_lote_carteira.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
