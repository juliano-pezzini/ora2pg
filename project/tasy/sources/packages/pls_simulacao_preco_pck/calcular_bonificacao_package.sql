-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_simulacao_preco_pck.calcular_bonificacao ( nr_seq_simulacao_p pls_simulacao_preco.nr_sequencia%type, nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, nr_seq_simul_benef_p pls_simulpreco_individual.nr_sequencia%type, qt_idade_p pls_simulpreco_individual.qt_idade%type, ie_tipo_benef_p pls_simulpreco_individual.ie_tipo_benef%type, nr_seq_parentesco_p pls_simulpreco_individual.nr_seq_parentesco%type, nr_seq_simul_perfil_p pls_simulacao_perfil.nr_sequencia%type, qt_vidas_perfil_p bigint, vl_base_p bigint, vl_bonific_vinc_p bigint, tx_bonific_vinc_p bigint, vl_bonificacao_p INOUT bigint) AS $body$
DECLARE

	vl_bonificacao_w		double precision;
	tx_desconto_w			pls_preco_regra.tx_desconto%type;
	qt_total_vidas_simul_w		integer;
	C01 CURSOR FOR
		SELECT	coalesce(vl_bonific_vinc_p,a.vl_bonificacao) vl_bonificacao,
			coalesce(tx_bonific_vinc_p,a.tx_bonificacao) tx_bonificacao
		from	pls_bonificacao_regra	a,
			pls_bonificacao		b
		where	a.nr_seq_bonificacao	= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_bonificacao_p
		and	a.ie_tipo_regra		= 'M'
		and	pls_obter_item_mens(1,a.ie_tipo_item) = 'S'
		and	((qt_idade_p between coalesce(a.qt_idade_inicial,qt_idade_p) and coalesce(a.qt_idade_final,qt_idade_p)) or coalesce(qt_idade_p::text, '') = '')
		and (ie_tipo_benef_p = a.ie_titularidade or a.ie_titularidade = 'A' or coalesce(a.ie_titularidade::text, '') = '')
		and (nr_seq_parentesco_p = a.nr_seq_parentesco or coalesce(a.nr_seq_parentesco::text, '') = '');
	
	C02 CURSOR FOR
		SELECT	a.nr_seq_desconto,
			a.ie_tipo_segurado
		from	pls_bonificacao_regra	a,
			pls_bonificacao		b
		where	a.nr_seq_bonificacao	= b.nr_sequencia
		and	b.nr_sequencia		= nr_seq_bonificacao_p
		and	a.ie_tipo_regra		= 'D'
		and	(a.nr_seq_desconto IS NOT NULL AND a.nr_seq_desconto::text <> '')
		and	pls_obter_item_mens(1,a.ie_tipo_item) = 'S';
	
	C03 CURSOR(	nr_seq_desconto_pc	bigint,
			qt_vidas_pc		bigint) FOR
		SELECT	coalesce(tx_desconto,0) tx_desconto,
			coalesce(vl_desconto,0) vl_desconto
		from	pls_preco_regra
		where	nr_seq_regra	= nr_seq_desconto_pc
		and	qt_vidas_pc between coalesce(qt_min_vidas,qt_vidas_pc) and coalesce(qt_max_vidas,qt_vidas_pc);
	
	C04 CURSOR FOR
		SELECT	coalesce(tx_bonific_vinc_p,a.tx_bonificacao) tx_bonificacao,
			coalesce(vl_bonific_vinc_p,a.vl_bonificacao) vl_bonificacao,
			a.ie_tipo_item,
			a.nr_seq_desconto
		from	pls_bonificacao_regra	a,
			pls_bonificacao		b
		where	b.nr_sequencia		= a.nr_seq_bonificacao
		and	a.nr_seq_bonificacao	= nr_seq_bonificacao_p
		and	pls_obter_item_mens('1',a.ie_tipo_item) = 'S';
	
	
BEGIN
	vl_bonificacao_w	:= 0;
	if (nr_seq_simul_benef_p IS NOT NULL AND nr_seq_simul_benef_p::text <> '') then
		for r_c01_w in C01 loop
			begin
			vl_bonificacao_w	:= vl_bonificacao_w + ((((coalesce(r_c01_w.tx_bonificacao,0) /100) * coalesce(vl_base_p,0)) + coalesce(r_c01_w.vl_bonificacao,0))*-1);
			null;
			end;
		end loop; --C01
		
		for r_c02_w in C02 loop
			begin
			if (r_c02_w.ie_tipo_segurado = 'T') then --Todos
				qt_total_vidas_simul_w	:= pls_simulacao_preco_pck.obter_qt_vidas_simulacao(nr_seq_simulacao_p, 'A');
			elsif (r_c02_w.ie_tipo_segurado = 'E') then --Titular mais dependentes legais
				qt_total_vidas_simul_w	:= pls_simulacao_preco_pck.obter_qt_vidas_simulacao(nr_seq_simulacao_p, 'TD');
			end if;
			
			for r_c03_w in C03(r_c02_w.nr_seq_desconto, qt_total_vidas_simul_w) loop
				begin
				vl_bonificacao_w	:= vl_bonificacao_w + ((((coalesce(r_c03_w.tx_desconto,0) /100) * coalesce(vl_base_p,0)) + coalesce(r_c03_w.vl_desconto,0))*-1);
				end;
			end loop;
			
			end;
		end loop; --C02
	elsif (nr_seq_simul_perfil_p IS NOT NULL AND nr_seq_simul_perfil_p::text <> '') then
		vl_bonificacao_w	:= 0;
		for r_c04_w in C04 loop
			begin
			if (r_c04_w.nr_seq_desconto IS NOT NULL AND r_c04_w.nr_seq_desconto::text <> '') then
				select	max(tx_desconto)
				into STRICT	tx_desconto_w
				from	pls_preco_regra
				where	nr_seq_regra = r_c04_w.nr_seq_desconto
				and	qt_vidas_perfil_p between qt_min_vidas and qt_max_vidas;
				
				vl_bonificacao_w := vl_bonificacao_w - ((tx_desconto_w/100) * vl_base_p);
			elsif (r_c04_w.ie_tipo_item IS NOT NULL AND r_c04_w.ie_tipo_item::text <> '') then
				vl_bonificacao_w := vl_bonificacao_w - ((coalesce(r_c04_w.tx_bonificacao,0)/100) * coalesce(vl_base_p,0)) - coalesce(r_c04_w.vl_bonificacao,0);
			end if;
			end;
		end loop; --C04
	end if;
	vl_bonificacao_p	:= vl_bonificacao_w;
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_simulacao_preco_pck.calcular_bonificacao ( nr_seq_simulacao_p pls_simulacao_preco.nr_sequencia%type, nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, nr_seq_simul_benef_p pls_simulpreco_individual.nr_sequencia%type, qt_idade_p pls_simulpreco_individual.qt_idade%type, ie_tipo_benef_p pls_simulpreco_individual.ie_tipo_benef%type, nr_seq_parentesco_p pls_simulpreco_individual.nr_seq_parentesco%type, nr_seq_simul_perfil_p pls_simulacao_perfil.nr_sequencia%type, qt_vidas_perfil_p bigint, vl_base_p bigint, vl_bonific_vinc_p bigint, tx_bonific_vinc_p bigint, vl_bonificacao_p INOUT bigint) FROM PUBLIC;
