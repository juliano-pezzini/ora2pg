-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_simulacao_preco_pck.add_desconto ( nr_seq_simulacao_p pls_simulacao_preco.nr_sequencia%type, nr_seq_simul_benef_p pls_simulpreco_individual.nr_sequencia%type, dt_simulacao_p pls_simulacao_preco.dt_simulacao%type, ie_titularidade_p text, ie_tipo_parentesco_p grau_parentesco.ie_tipo_parentesco%type, vl_simulacao_produto_p bigint, nr_seq_regra_p INOUT bigint, tx_desconto_p INOUT bigint) AS $body$
DECLARE

	nr_seq_regra_w	pls_regra_desconto.nr_sequencia%type	:= 0;
	ds_regra_w	pls_regra_desconto.ds_regra%type;
	tx_desconto_w	pls_preco_regra.tx_desconto%type;
	vl_desconto_w	pls_preco_regra.vl_desconto%type;
	qt_vidas_w	bigint;
	
	C01 CURSOR FOR
		SELECT	b.nr_sequencia nr_seq_regra,
			b.ds_regra,
			a.tx_desconto,
			a.vl_desconto,
			CASE WHEN a.ie_tipo_segurado='T' THEN 'A' WHEN a.ie_tipo_segurado='E' THEN 'TD' END  ie_tipo_segurado,
			a.qt_min_vidas,
			a.qt_max_vidas
		from	pls_preco_regra		a,
			pls_regra_desconto	b
		where	a.nr_seq_regra	= b.nr_sequencia
		and	clock_timestamp() between coalesce(b.dt_inicio_vigencia,clock_timestamp()) and coalesce(b.dt_fim_vigencia, clock_timestamp())
		and	b.ie_situacao		= 'A'
		and	b.cd_estabelecimento	= cd_estabelecimento_w
		and	exists (SELECT	1
				from	pls_regra_simul_preco_desc x
				where	x.nr_seq_regra	= b.nr_sequencia
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
				and	dt_simulacao_p between trunc(coalesce(x.dt_inicio_vigencia,dt_simulacao_p),'dd') and fim_dia(coalesce(x.dt_fim_vigencia,dt_simulacao_p)))
		and	((b.ie_tipo_regra = 'T') or  --Todos
			 (b.ie_tipo_regra = 'I' and ie_titularidade_p = 'T') or  --Titular
			 (b.ie_tipo_regra = 'L' and ie_tipo_parentesco_p = '1') or  --Dependentes legais
			 (b.ie_tipo_regra = 'E' and (ie_titularidade_p = 'T' or ie_tipo_parentesco_p = '1'))); --Titular + Dependentes legais*/
	
	
BEGIN
	if (vl_simulacao_produto_p > 0) then
		for r_c01_w in C01 loop
			begin
			qt_vidas_w	:= pls_simulacao_preco_pck.obter_qt_vidas_simulacao(nr_seq_simulacao_p,r_c01_w.ie_tipo_segurado);
			if (qt_vidas_w between coalesce(r_c01_w.qt_min_vidas,qt_vidas_w) and coalesce(r_c01_w.qt_max_vidas,qt_vidas_w)) then
				nr_seq_regra_w	:= r_c01_w.nr_seq_regra;
				ds_regra_w	:= r_c01_w.ds_regra;
				tx_desconto_w	:= coalesce(r_c01_w.tx_desconto,0);
				vl_desconto_w	:= coalesce(r_c01_w.vl_desconto,0);
			end if;
			end;
		end loop;
		
		if (nr_seq_regra_w > 0) then
			CALL CALL pls_simulacao_preco_pck.add_item(current_setting('pls_simulacao_preco_pck.ds_espaco_w')::varchar(255)||ds_regra_w, (vl_desconto_w+dividir((vl_simulacao_produto_p * tx_desconto_w), 100))*-1, nr_seq_simul_benef_p, null, '1');
			nr_seq_regra_p	:= nr_seq_regra_w;
			tx_desconto_p	:= tx_desconto_w;
		end if;
	end if;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_simulacao_preco_pck.add_desconto ( nr_seq_simulacao_p pls_simulacao_preco.nr_sequencia%type, nr_seq_simul_benef_p pls_simulpreco_individual.nr_sequencia%type, dt_simulacao_p pls_simulacao_preco.dt_simulacao%type, ie_titularidade_p text, ie_tipo_parentesco_p grau_parentesco.ie_tipo_parentesco%type, vl_simulacao_produto_p bigint, nr_seq_regra_p INOUT bigint, tx_desconto_p INOUT bigint) FROM PUBLIC;
