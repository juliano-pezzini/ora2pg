-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE cancelar_por_periodo.cancelar_servico (dt_inicial_p timestamp, dt_final_p timestamp, hr_inicial_p timestamp, hr_final_p timestamp, cd_agenda_p bigint, cd_dia_semana_p bigint, cd_motivo_p text, ie_lista_espera_p text, ie_reabilitacao_p text, ie_futuros_p text) AS $body$
DECLARE


dt_inicial_w timestamp;
dt_final_w timestamp;
hr_inicial_w timestamp;
hr_final_w timestamp;

dt_agenda_padrao_w varchar(20);
ie_dia_semana_agen_w smallint;
qt_registros_w integer;
dt_formatada_w varchar(255);
ie_cancel_fut_obito_w varchar(1) := 'N';
ie_pac_age_futura_w varchar(1);
ds_msg_w varchar(4000);
ie_protoc_canc_w varchar(1);
ds_protoc_canc_w varchar(255);
ie_cancel_lista_espera_w	varchar(1) := 'N';
nr_seq_lista_espera_w bigint;
ds_retorno_n_utilizado_w varchar(4000);

cd_estabelecimento_w integer;
nm_pessoa_fisica_w varchar(255);
cd_perfil_w integer;

ie_alterar_suspenso_w varchar(1);
ie_motivo_cancelamento_w varchar(1);
cd_motivo_cancelamento_w varchar(255);
ie_exibe_msg_can_futuro_w varchar(1);
ie_param_lista_espera_w varchar(1);

C01 CURSOR FOR
  SELECT dt_agenda,
    nr_sequencia,
    ie_status_agenda,
    cd_agenda,
    nr_seq_lista_espera,
    cd_medico,
    nr_seq_lista_reab,
    cd_pessoa_fisica
  from agenda_consulta
  where cd_agenda = cd_agenda_p
  and ((cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '') or (nm_paciente IS NOT NULL AND nm_paciente::text <> ''))
  and dt_agenda between dt_inicial_w and dt_final_w
  and ie_status_agenda not in ('C')
  order by dt_agenda;

BEGIN

  CALL cancelar_por_periodo.validar_data_hora(dt_inicial_p, dt_final_p, hr_inicial_p, hr_final_p);

  cd_estabelecimento_w := obter_estabelecimento_ativo;
  nm_pessoa_fisica_w := obter_usuario_ativo;
  cd_perfil_w := obter_perfil_ativo;

  Obter_Param_Usuario(866, 234, cd_perfil_w, nm_pessoa_fisica_w, cd_estabelecimento_w, ie_alterar_suspenso_w);
  Obter_Param_Usuario(866, 5, cd_perfil_w, nm_pessoa_fisica_w, cd_estabelecimento_w, ie_motivo_cancelamento_w);
  Obter_Param_Usuario(866, 96, cd_perfil_w, nm_pessoa_fisica_w, cd_estabelecimento_w, cd_motivo_cancelamento_w);
  Obter_Param_Usuario(866, 111, cd_perfil_w, nm_pessoa_fisica_w, cd_estabelecimento_w, ie_exibe_msg_can_futuro_w);
  Obter_Param_Usuario(866, 126, cd_perfil_w, nm_pessoa_fisica_w, cd_estabelecimento_w, ie_param_lista_espera_w);

  dt_agenda_padrao_w := 'vazio';
  dt_inicial_w := trunc(coalesce(dt_inicial_p, clock_timestamp()));
  dt_final_w := fim_dia(coalesce(dt_final_p, to_date('9999', 'yyyy')));

  if ie_motivo_cancelamento_w = 'S' and cd_motivo_cancelamento_w = cd_motivo_p then
    ie_cancel_fut_obito_w := 'S';
  end if;
  select coalesce(max(ie_exibir_protoc_canc),'N') ie_protoc_canc
  into STRICT ie_protoc_canc_w
  from parametro_agenda
  where	cd_estabelecimento = cd_estabelecimento_w;

  for c_01 in C01 loop

    if to_char(c_01.dt_agenda, 'dd/mm/yyyy') <> dt_agenda_padrao_w then

      dt_agenda_padrao_w := to_char(c_01.dt_agenda, 'dd/mm/yyyy');
      hr_inicial_w := to_date(dt_agenda_padrao_w || to_char(hr_inicial_p, 'HH24:mi') , 'dd/mm/yyyy HH24:mi');
      hr_final_w  := to_date(dt_agenda_padrao_w || to_char(hr_final_p, 'HH24:mi') , 'dd/mm/yyyy HH24:mi');
      ie_dia_semana_agen_w := Obter_Cod_Dia_Semana(c_01.dt_agenda);
    end if;

    if (c_01.dt_agenda between hr_inicial_w and hr_final_w) and (coalesce(cd_dia_semana_p::text, '') = '' or ie_dia_semana_agen_w = cd_dia_semana_p or (cd_dia_semana_p = 9 and ie_dia_semana_agen_w not in (1,7))) then

        dt_formatada_w := pkg_date_formaters.to_varchar(c_01.dt_agenda, 'short', cd_estabelecimento_w, nm_pessoa_fisica_w);

        if (c_01.ie_status_agenda = 'S' and ie_alterar_suspenso_w = 'N') then
          PERFORM set_config('cancelar_por_periodo.ds_texto_retorno_w', current_setting('cancelar_por_periodo.ds_texto_retorno_w')::text || dt_formatada_w || ' - ' || ' bloqueio parametro 234. procurara expressao depois' || chr(10), false);

        else

          if ie_motivo_cancelamento_w = 'S' then
            CALL atualizar_motivo_cancel_agenda(cd_motivo_p, null, c_01.nr_sequencia, nm_pessoa_fisica_w);
          else
            CALL Cancelar_Agenda_Consulta(c_01.nr_sequencia, nm_pessoa_fisica_w);
            CALL Gerar_comunicacao_alter_status('C', c_01.nr_sequencia, nm_pessoa_fisica_w, cd_estabelecimento_w);
          end if;
          --mesmo tratamento no fonte do IE_CANCELADO, sempre vem true
          cancel_agenda_consulta_ageserv(c_01.nr_sequencia, ie_cancel_fut_obito_w, c_01.cd_pessoa_fisica, c_01.dt_agenda, cd_motivo_p, null, nm_pessoa_fisica_w, ie_pac_age_futura_w, ds_msg_w);

          if ie_pac_age_futura_w = 'S' and ie_exibe_msg_can_futuro_w = 'S' and ie_futuros_p = 'S' then

            if ie_param_lista_espera_w = 'S' and ie_lista_espera_p = 'S' and (c_01.nr_seq_lista_espera IS NOT NULL AND c_01.nr_seq_lista_espera::text <> '') then
              ie_cancel_lista_espera_w := 'S';
              nr_seq_lista_espera_w := c_01.nr_seq_lista_espera;
            end if;

            consist_cancela_agenda_ageserv('S', c_01.cd_agenda, c_01.dt_agenda, c_01.cd_pessoa_fisica, cd_motivo_p, null, c_01.nr_sequencia, ie_cancel_lista_espera_w,
                                          nr_seq_lista_espera_w, nm_pessoa_fisica_w, ds_retorno_n_utilizado_w, c_01.cd_medico);
          end if;

          if ie_reabilitacao_p = 'S' and (c_01.nr_seq_lista_reab IS NOT NULL AND c_01.nr_seq_lista_reab::text <> '') then

            CALL Alter_Status_Lista_Reab('A', c_01.nr_seq_lista_reab, null, null, null, nm_pessoa_fisica_w);
          end if;
          CALL cancelar_por_periodo.cancelar_integrada(c_01.nr_sequencia, 'S', nm_pessoa_fisica_w);
        end if;

    end if;

  end loop;

end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_por_periodo.cancelar_servico (dt_inicial_p timestamp, dt_final_p timestamp, hr_inicial_p timestamp, hr_final_p timestamp, cd_agenda_p bigint, cd_dia_semana_p bigint, cd_motivo_p text, ie_lista_espera_p text, ie_reabilitacao_p text, ie_futuros_p text) FROM PUBLIC;
