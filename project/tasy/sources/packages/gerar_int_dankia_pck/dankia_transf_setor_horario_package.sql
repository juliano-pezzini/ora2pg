-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function gerar_int_dankia_pck.dankia_transf_setor_horario() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_int_dankia_pck.dankia_transf_setor_horario ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL gerar_int_dankia_pck.dankia_transf_setor_horario_atx ( ' || quote_nullable(nr_atendimento_p) || ',' || quote_nullable(cd_setor_atendimento_p) || ',' || quote_nullable(cd_estabelecimento_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_int_dankia_pck.dankia_transf_setor_horario_atx ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint) AS $body$
BEGIN
	if (get_ie_int_dankia = 'S') then
	
		select 	max(cd_local_estoque)
		into STRICT 	current_setting('gerar_int_dankia_pck.cd_local_setor_w')::local_estoque.cd_local_estoque%type
		from	setor_atendimento
		where 	cd_Setor_atendimento = cd_setor_atendimento_p;
		
		if (gerar_int_dankia_pck.get_ie_local_dankia(current_setting('gerar_int_dankia_pck.cd_local_setor_w')::local_estoque.cd_local_estoque%type) = 'S') then
		
			select	max(dt_entrada_unidade)
			into STRICT	dt_entrada_origem_w
			from 	atend_paciente_unidade
			where  	nr_atendimento = nr_atendimento_p;
												
			select	max(cd_setor_atendimento)
			into STRICT	current_setting('gerar_int_dankia_pck.cd_setor_atendimento_w')::dis_regra_setor.cd_setor_atendimento%type
			from 	atend_paciente_unidade
			where	nr_atendimento = nr_atendimento_p
			and 	to_char(dt_entrada_unidade,'dd/mm/yyyy hh24:mi:ss') = to_char(dt_entrada_origem_w,'dd/mm/yyyy hh24:mi:ss');
			
			select	max(cd_local_estoque)
			into STRICT 	current_setting('gerar_int_dankia_pck.cd_local_estoque_w')::local_estoque.cd_local_estoque%type
			from	setor_atendimento
			where 	cd_setor_atendimento = current_setting('gerar_int_dankia_pck.cd_setor_atendimento_w')::dis_regra_setor.cd_setor_atendimento%type;
			
			select	count(1)
			into STRICT	qt_transf_w
			from	dis_regra_movimentacao
			where 	cd_setor_origem = cd_setor_atendimento_p
			and 	cd_estabelecimento = cd_estabelecimento_p;
		
			
		
		
			if (gerar_int_dankia_pck.get_ie_local_dankia(current_setting('gerar_int_dankia_pck.cd_local_estoque_w')::local_estoque.cd_local_estoque%type) = 'S') or (qt_transf_w > 0) then
				
				insert into dankia_disp_mat_hor(
						nr_sequencia,
						cd_estabelecimento,
						nr_prescricao,
						dt_atualizacao,
						nr_seq_lote,
						nm_usuario,
						nr_seq_prescricao,
						nr_seq_horario,
						qt_dispensar,
						dt_horario,
						dt_suspensao,
						ds_prescricao,
						ie_medic_principal,
						dt_validade,
						cd_local_estoque,
						ie_operacao,
						dt_lido_dankia,
						ie_processado,
						ds_processado_observacao,
						ds_stack,
						cd_material,
						nr_atendimento,
						ie_tipo_horario,
						ds_procedimento)
				SELECT	nextval('dankia_disp_mat_hor_seq'),
						cd_estabelecimento,
						nr_prescricao,
						dt_atualizacao,
						nr_seq_lote,
						nm_usuario,
						nr_seq_prescricao,
						nr_seq_horario,
						qt_dispensar,
						dt_horario,
						dt_suspensao,
						ds_prescricao,
						ie_medic_principal,
						dt_validade,
						cd_local_estoque,
						'E',
						dt_lido_dankia,
						ie_processado,
						ds_processado_observacao,
						ds_stack,
						cd_material,
						nr_atendimento,
						ie_tipo_horario,
						ds_procedimento
				from	dankia_disp_mat_hor
				where 	nr_atendimento = nr_atendimento_p
				and 	ie_operacao = 'I';
				
				
			insert into dankia_disp_mat_hor(
						nr_sequencia,
						cd_estabelecimento,
						nr_prescricao,
						dt_atualizacao,
						nr_seq_lote,
						nm_usuario,
						nr_seq_prescricao,
						nr_seq_horario,
						qt_dispensar,
						dt_horario,
						dt_suspensao,
						ds_prescricao,
						ie_medic_principal,
						dt_validade,
						cd_local_estoque,
						ie_operacao,
						dt_lido_dankia,
						ie_processado,
						ds_processado_observacao,
						ds_stack,
						cd_material,
						nr_atendimento,
						ie_tipo_horario,
						ds_procedimento)
				SELECT	nextval('dankia_disp_mat_hor_seq'),
						cd_estabelecimento,
						nr_prescricao,
						dt_atualizacao,
						nr_seq_lote,
						nm_usuario,
						nr_seq_prescricao,
						nr_seq_horario,
						qt_dispensar,
						dt_horario,
						dt_suspensao,
						ds_prescricao,
						ie_medic_principal,
						dt_validade,
						current_setting('gerar_int_dankia_pck.cd_local_setor_w')::local_estoque.cd_local_estoque%type,
						'I',
						dt_lido_dankia,
						ie_processado,
						ds_processado_observacao,
						ds_stack,
						cd_material,
						nr_atendimento,
						ie_tipo_horario,
						ds_procedimento
				from	dankia_disp_mat_hor
				where 	nr_atendimento = nr_atendimento_p
				and 	ie_operacao = 'I';
			end if;
		end if;
	end if;
	commit;
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_dankia_pck.dankia_transf_setor_horario ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_int_dankia_pck.dankia_transf_setor_horario_atx ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;
