-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE gerar_int_dankia_pck.dankia_gerar_estornar_alta ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_compl_p text, cd_estabelecimento_p bigint, ie_alta_p text, nm_usuario_p text) AS $body$
DECLARE


	ie_dispensario_old_w	varchar(1);
	qt_existe_disp_atend_w	bigint;
	nr_seq_atend_pac_w		bigint;
	cd_leito_w				varchar(20);
	
	
BEGIN

	if (get_ie_int_dankia = 'S') and (cd_unidade_compl_p IS NOT NULL AND cd_unidade_compl_p::text <> '') and (ie_alta_p = 'A') then
		
		select	coalesce(max('S'), 'N')
		into STRICT 	ie_dispensario_old_w
		from	dis_regra_setor
		where 	cd_setor_atendimento = cd_setor_atendimento_p;

		select	max(cd_pessoa_fisica),
			max(ie_tipo_atendimento),
			max(dt_alta)
		into STRICT	current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type,
			ie_tipo_atendimento_w,
			current_setting('gerar_int_dankia_pck.dt_alta_w')::atendimento_paciente.dt_alta%type
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;

		select 	count(1)
		into STRICT	current_setting('gerar_int_dankia_pck.qt_existe_w')::bigint
		from	dankia_disp_paciente
		where 	cd_pessoa_fisica = current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type;
				
		if (current_setting('gerar_int_dankia_pck.qt_existe_w')::bigint > 0) and (ie_dispensario_old_w = 'S') then
			
			select 	max(a.nm_pessoa_fisica),
					max(a.ie_sexo),
					max(a.dt_nascimento),
					max(gerar_int_dankia_pck.get_nm_mae_dankia(a.cd_pessoa_fisica))
			into STRICT	nm_paciente_w,
					ie_sexo_w,
					dt_nascimento_w,
					current_setting('gerar_int_dankia_pck.nm_mae_w')::compl_pessoa_fisica.nm_contato%type
			from	pessoa_fisica a
			where	a.cd_pessoa_fisica	= current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_atend_pac_w
			from	dankia_disp_atend_paciente
			where	nr_atendimento = nr_atendimento_p
			and		cd_setor_atendimento = cd_setor_atendimento_p
			and		ie_operacao = 'I';
				
			insert into dankia_disp_paciente(
					nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					nm_paciente,
					nm_mae,
					ie_sexo,
					dt_nascimento,
					ie_operacao,
					dt_lido_dankia,
					ie_processado,
					ds_processado_observacao,
					ds_stack)
			values (	nextval('dankia_disp_paciente_seq'),
					cd_estabelecimento_p,
					clock_timestamp(),
					nm_usuario_p,
					current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type,
					nm_paciente_w,
					current_setting('gerar_int_dankia_pck.nm_mae_w')::compl_pessoa_fisica.nm_contato%type,
					ie_sexo_w,
					dt_nascimento_w,
					'I',
					null,
					'N',
					null,
					substr(dbms_utility.format_call_stack,1,2000));
					
			insert into dankia_disp_atend_paciente(
					nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					nr_atendimento,
					cd_setor_atendimento,
					ie_tipo_atendimento,
					cd_leito,
					ie_alta,
					dt_alta,
					ie_operacao,
					dt_lido_dankia,
					ie_processado,
					ds_processado_observacao,
					ds_stack)
			(SELECT nextval('dankia_disp_atend_paciente_seq'),
					cd_estabelecimento,
					clock_timestamp(),
					nm_usuario,
					cd_pessoa_fisica,
					nr_atendimento,
					cd_setor_atendimento,
					ie_tipo_atendimento,
					cd_leito,
					CASE WHEN current_setting('gerar_int_dankia_pck.dt_alta_w')::atendimento_paciente.dt_alta%coalesce(type::text, '') = '' THEN 'N'  ELSE 'S' END ,
					clock_timestamp(),
					'A',
					null,
					'N',
					ds_processado_observacao,
					substr(dbms_utility.format_call_stack,1,2000)
				from dankia_disp_atend_paciente
				where nr_sequencia = nr_seq_atend_pac_w);
				
		elsif (ie_dispensario_old_w = 'N') then

			select count(*)
			into STRICT qt_existe_disp_atend_w
			from dankia_disp_atend_paciente
			where nr_atendimento = nr_atendimento_p
			and coalesce(dt_alta::text, '') = ''
			and ie_alta = 'N';

			if (qt_existe_disp_atend_w > 0) then

				insert into dankia_disp_atend_paciente(
					nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					nr_atendimento,
					cd_setor_atendimento,
					ie_tipo_atendimento,
					cd_leito,
					ie_alta,
					dt_alta,
					ie_operacao,
					dt_lido_dankia,
					ie_processado,
					ds_processado_observacao,
					ds_stack)
				(SELECT nextval('dankia_disp_atend_paciente_seq'),
					cd_estabelecimento,
					clock_timestamp(),
					nm_usuario,
					cd_pessoa_fisica,
					nr_atendimento,
					cd_setor_atendimento,
					ie_tipo_atendimento,
					cd_leito,
					'S',
					clock_timestamp(),
					'A',
					null,
					'N',
					ds_processado_observacao,
					substr(dbms_utility.format_call_stack,1,2000)
				from dankia_disp_atend_paciente
				where nr_atendimento = nr_atendimento_p
				and coalesce(dt_alta::text, '') = ''
				and ie_alta = 'N');
			end if;
		
		end if;
	elsif (get_ie_int_dankia = 'S') and (ie_alta_p = 'E') then
		
		select	coalesce(max('S'), 'N')
		into STRICT 	ie_dispensario_old_w
		from	dis_regra_setor
		where 	cd_setor_atendimento = cd_setor_atendimento_p;

		select	max(cd_pessoa_fisica),
			max(ie_tipo_atendimento),
			max(dt_alta)
		into STRICT	current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type,
			ie_tipo_atendimento_w,
			current_setting('gerar_int_dankia_pck.dt_alta_w')::atendimento_paciente.dt_alta%type
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;

		select 	count(1)
		into STRICT	current_setting('gerar_int_dankia_pck.qt_existe_w')::bigint
		from	dankia_disp_paciente
		where 	cd_pessoa_fisica = current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type;
				
		if (current_setting('gerar_int_dankia_pck.qt_existe_w')::bigint > 0) and (ie_dispensario_old_w = 'S') then
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_atend_pac_w
			from	dankia_disp_atend_paciente
			where	nr_atendimento = nr_atendimento_p
			and		cd_setor_atendimento = cd_setor_atendimento_p
			and		ie_operacao = 'A';
			
			select	max(cd_leito)
			into STRICT	cd_leito_w
			from	dankia_disp_atend_paciente
			where	nr_sequencia = nr_seq_atend_pac_w;
		
			select 	max(a.nm_pessoa_fisica),
					max(a.ie_sexo),
					max(a.dt_nascimento),
					max(gerar_int_dankia_pck.get_nm_mae_dankia(a.cd_pessoa_fisica))
			into STRICT	nm_paciente_w,
					ie_sexo_w,
					dt_nascimento_w,
					current_setting('gerar_int_dankia_pck.nm_mae_w')::compl_pessoa_fisica.nm_contato%type
			from	pessoa_fisica a
			where	a.cd_pessoa_fisica	= current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type;
				
			insert into dankia_disp_paciente(
					nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					nm_paciente,
					nm_mae,
					ie_sexo,
					dt_nascimento,
					ie_operacao,
					dt_lido_dankia,
					ie_processado,
					ds_processado_observacao,
					ds_stack)
			values (	nextval('dankia_disp_paciente_seq'),
					cd_estabelecimento_p,
					clock_timestamp(),
					nm_usuario_p,
					current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type,
					nm_paciente_w,
					current_setting('gerar_int_dankia_pck.nm_mae_w')::compl_pessoa_fisica.nm_contato%type,
					ie_sexo_w,
					dt_nascimento_w,
					'I',
					null,
					'N',
					null,
					substr(dbms_utility.format_call_stack,1,2000));

			insert into dankia_disp_atend_paciente(
					nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					nr_atendimento,
					cd_setor_atendimento,
					ie_tipo_atendimento,
					cd_leito,
					ie_alta,
					dt_alta,
					ie_operacao,
					dt_lido_dankia,
					ie_processado,
					ds_processado_observacao,
					ds_stack)
			values (	nextval('dankia_disp_atend_paciente_seq'),
					cd_estabelecimento_p,
					clock_timestamp(),
					nm_usuario_p,
					current_setting('gerar_int_dankia_pck.cd_pessoa_fisica_w')::atendimento_paciente.cd_pessoa_fisica%type,
					nr_atendimento_p,
					cd_setor_atendimento_p,
					ie_tipo_atendimento_w,
					coalesce(cd_leito_w, cd_unidade_compl_p),
					CASE WHEN current_setting('gerar_int_dankia_pck.dt_alta_w')::atendimento_paciente.dt_alta%coalesce(type::text, '') = '' THEN 'N'  ELSE 'S' END ,
					current_setting('gerar_int_dankia_pck.dt_alta_w')::atendimento_paciente.dt_alta%type,
					'I',
					null,
					'N',
					null,
					substr(dbms_utility.format_call_stack,1,2000));			
		end if;
	end if;
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_dankia_pck.dankia_gerar_estornar_alta ( nr_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_unidade_compl_p text, cd_estabelecimento_p bigint, ie_alta_p text, nm_usuario_p text) FROM PUBLIC;
