-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pfcs_pck_dynamic_cards.get_card_header_values (nr_seq_indicator_p bigint, cd_establishment_p bigint) RETURNS varchar AS $body$
DECLARE

        VL_CARD_HEADER_1    PFCS_PCK_SUBTYPES.VARCHAR_255_T;
        VL_CARD_HEADER_2    PFCS_PCK_SUBTYPES.VARCHAR_255_T;
        VL_CARD_HEADER_3    PFCS_PCK_SUBTYPES.VARCHAR_255_T;
        json_item_w         PHILIPS_JSON := PHILIPS_JSON();

BEGIN
        case
            when(nr_seq_indicator_p = PFCS_PCK_INDICATORS.NR_ED_WAITING_TIME) then
                select  count(1) qt_items
                into STRICT    VL_CARD_HEADER_3
                from    pfcs_panel_detail ppd
                        inner join pfcs_detail_queue pdq on ppd.nr_sequencia = pdq.nr_seq_detail
                where   ppd.nr_seq_indicator = PFCS_PCK_INDICATORS.NR_ED_WAITING_TIME
                        and ppd.nr_seq_operational_level = cd_establishment_p
                        and ppd.ie_situation = PFCS_PCK_CONSTANTS.IE_ACTIVE;

                VL_CARD_HEADER_1 := case when(VL_CARD_HEADER_3 > 1) then VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENT) else VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENTS) end;
                VL_CARD_HEADER_2 := null;
                VL_CARD_HEADER_3 := null;

            when(nr_seq_indicator_p = PFCS_PCK_INDICATORS.NR_ED_TRIAGE) then
                select  count(1) qt_items,
                        case
                            when(pfcs_pck_emergency_department.get_time_calc_method() = PFCS_PCK_EMERGENCY_DEPARTMENT.CD_CALC_TIME_AVG) then avg(pat.dt_atualizacao - pat.dt_entrance)
                            when(pfcs_pck_emergency_department.get_time_calc_method() = PFCS_PCK_EMERGENCY_DEPARTMENT.CD_CALC_TIME_MAX) then max(pat.dt_atualizacao - pat.dt_entrance)
                            else 0
                        end waiting_time,
                        sum(
                            case
                                when ((pat.dt_atualizacao - pat.dt_entrance) * 1440) <= pfcs_pck_emergency_department.get_acceptable_duration(pat.cd_stage_pa, pfcs_pck_emergency_department.get_queue_type_from_encounter(pat.nr_seq_encounter))
                                then 1
                                else 0
                            end
                        ) qt_sla
                into STRICT    VL_CARD_HEADER_3,
                        VL_CARD_HEADER_2,
                        VL_CARD_HEADER_1
                from    pfcs_panel_detail ppd
                        inner join pfcs_detail_patient pat on ppd.nr_sequencia = pat.nr_seq_detail
                where   ppd.nr_seq_indicator = PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS
                        and pat.cd_stage_pa = TO_CHAR(PFCS_PCK_EMERGENCY_DEPARTMENT.CD_STAGE_TRIAGE)
                        and ppd.nr_seq_operational_level = cd_establishment_p
                        and ppd.ie_situation = PFCS_PCK_CONSTANTS.IE_ACTIVE;

                VL_CARD_HEADER_1 := round(pfcs_get_percentage_value(VL_CARD_HEADER_1, VL_CARD_HEADER_3)) || '%';
                VL_CARD_HEADER_2 := get_time_by_minutes(VL_CARD_HEADER_2 * 1440);
                VL_CARD_HEADER_3 := case when(VL_CARD_HEADER_3 > 1) then VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENT) else VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENTS) end;

            when(nr_seq_indicator_p = PFCS_PCK_INDICATORS.NR_ED_PHYSICIAN_CONSULTATION) then
                select  count(1) qt_items,
                        case
                            when(pfcs_pck_emergency_department.get_time_calc_method() = PFCS_PCK_EMERGENCY_DEPARTMENT.CD_CALC_TIME_AVG) then avg(pat.dt_atualizacao - pat.dt_request)
                            when(pfcs_pck_emergency_department.get_time_calc_method() = PFCS_PCK_EMERGENCY_DEPARTMENT.CD_CALC_TIME_MAX) then max(pat.dt_atualizacao - pat.dt_request)
                            else 0
                        end waiting_time,
                        sum(
                            case
                                when ((pat.dt_atualizacao - pat.dt_request) * 1440) <= pfcs_pck_emergency_department.get_acceptable_duration(pat.cd_stage_pa, pat.ds_triage_value)
                                then 1
                                else 0
                            end
                        ) qt_sla
                into STRICT    VL_CARD_HEADER_3,
                        VL_CARD_HEADER_2,
                        VL_CARD_HEADER_1
                from    pfcs_panel_detail ppd
                        inner join pfcs_detail_patient pat on ppd.nr_sequencia = pat.nr_seq_detail
                where   ppd.nr_seq_indicator = PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS
                        and pat.cd_stage_pa = TO_CHAR(PFCS_PCK_EMERGENCY_DEPARTMENT.CD_STAGE_DOCTOR_CONSULTATION)
                        and ppd.nr_seq_operational_level = cd_establishment_p
                        and ppd.ie_situation = PFCS_PCK_CONSTANTS.IE_ACTIVE;

                VL_CARD_HEADER_1 := round(pfcs_get_percentage_value(VL_CARD_HEADER_1, VL_CARD_HEADER_3)) || '%';
                VL_CARD_HEADER_2 := get_time_by_minutes(VL_CARD_HEADER_2 * 1440);
                VL_CARD_HEADER_3 := case when(VL_CARD_HEADER_3 > 1) then VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENT) else VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENTS) end;

            when(nr_seq_indicator_p = PFCS_PCK_INDICATORS.NR_ED_CARE_FLOW) then
                select  count(1) qt_items,
                        case
                            when(pfcs_pck_emergency_department.get_time_calc_method() = PFCS_PCK_EMERGENCY_DEPARTMENT.CD_CALC_TIME_AVG) then avg(pat.dt_atualizacao - pat.dt_request)
                            when(pfcs_pck_emergency_department.get_time_calc_method() = PFCS_PCK_EMERGENCY_DEPARTMENT.CD_CALC_TIME_MAX) then max(pat.dt_atualizacao - pat.dt_request)
                            else 0
                        end waiting_time,
                        sum(
                            case
                                when ((pat.dt_atualizacao - pat.dt_request) * 1440) <= pfcs_pck_emergency_department.get_acceptable_duration(pat.cd_stage_pa, null)
                                then 1
                                else 0
                            end
                        ) qt_sla
                into STRICT    VL_CARD_HEADER_3,
                        VL_CARD_HEADER_2,
                        VL_CARD_HEADER_1
                from    pfcs_panel_detail ppd
                        inner join pfcs_detail_patient pat on ppd.nr_sequencia = pat.nr_seq_detail
                where   ppd.nr_seq_indicator = PFCS_PCK_INDICATORS.NR_ED_CURRENT_ENCOUNTERS
                        and pat.cd_stage_pa in (TO_CHAR(PFCS_PCK_EMERGENCY_DEPARTMENT.CD_STAGE_OBSERVATION), TO_CHAR(PFCS_PCK_EMERGENCY_DEPARTMENT.CD_STAGE_MEDICATION),
                                                TO_CHAR(PFCS_PCK_EMERGENCY_DEPARTMENT.CD_STAGE_LABORATORY), TO_CHAR(PFCS_PCK_EMERGENCY_DEPARTMENT.CD_STAGE_UNKNOWN))
                        and ppd.nr_seq_operational_level = cd_establishment_p
                        and ppd.ie_situation = PFCS_PCK_CONSTANTS.IE_ACTIVE;

                VL_CARD_HEADER_1 := round(pfcs_get_percentage_value(VL_CARD_HEADER_1, VL_CARD_HEADER_3)) || '%';
                VL_CARD_HEADER_2 := get_time_by_minutes(VL_CARD_HEADER_2 * 1440);
                VL_CARD_HEADER_3 := case when(VL_CARD_HEADER_3 > 1) then VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENT) else VL_CARD_HEADER_3 || ' ' || obter_desc_expressao(PFCS_PCK_CONSTANTS.CD_EXPR_PATIENTS) end;

            else
                VL_CARD_HEADER_1 := null;
                VL_CARD_HEADER_2 := null;
                VL_CARD_HEADER_3 := null;

        end case;

        json_item_w.put('VL_CARD_HEADER_1', VL_CARD_HEADER_1);
        json_item_w.put('VL_CARD_HEADER_2', VL_CARD_HEADER_2);
        json_item_w.put('VL_CARD_HEADER_3', VL_CARD_HEADER_3);

        return json_item_w.to_char();
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pfcs_pck_dynamic_cards.get_card_header_values (nr_seq_indicator_p bigint, cd_establishment_p bigint) FROM PUBLIC;
