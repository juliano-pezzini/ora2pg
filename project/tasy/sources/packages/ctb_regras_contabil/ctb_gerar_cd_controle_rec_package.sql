-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_regras_contabil.ctb_gerar_cd_controle_rec ( nr_lote_contabil_p TITULO_RECEBER.NR_LOTE_CONTABIL%type, nm_usuario_p text ) AS $body$
DECLARE


    cd_tipo_lote_contabil_w     LOTE_CONTABIL.CD_TIPO_LOTE_CONTABIL%type;
    nr_seq_liq_origem_w         TITULO_RECEBER_LIQ.NR_SEQ_LIQ_ORIGEM%type;

    nr_titulo_w                 TITULO_RECEBER.NR_TITULO%type;
    ie_origem_titulo_w          TITULO_RECEBER.IE_ORIGEM_TITULO%type;
    cd_tipo_recebimento_w       TITULO_RECEBER.CD_TIPO_RECEBIMENTO%type;

    vl_tipo_movimento_w         REGRAS_TIPO_LOTE_CONTABIL.CD_REGRA%type;
    cd_regra_w                  REGRAS_TIPO_LOTE_CONTABIL.CD_REGRA%type;
    ds_prefixo_w                REGRAS_TIPO_LOTE_CONTABIL.DS_PREFIXO%type;

    nr_comprovante_w            varchar(255);
    arr_data_w                  arr_regra_prefix_t;

    c010 CURSOR FOR
        SELECT	 NR_SEQ_TAB_ORIG,
		 NR_CODIGO_CONTROLE
        FROM     W_MOVIMENTO_CONTABIL
        WHERE    NR_LOTE_CONTABIL = nr_lote_contabil_p
        GROUP BY NR_SEQ_TAB_ORIG,
		 NR_CODIGO_CONTROLE;


BEGIN
        IF nr_lote_contabil_p > 0 THEN
	    CALL ctb_regras_contabil.restore_comprovante_from_cache(nr_lote_contabil_p, nm_usuario_p);

            SELECT  MAX(CD_TIPO_LOTE_CONTABIL)
            INTO STRICT    cd_tipo_lote_contabil_w
            FROM    LOTE_CONTABIL
            WHERE   NR_LOTE_CONTABIL = nr_lote_contabil_p;

            SELECT  MAX(NR_SEQ_LIQ_ORIGEM)
            INTO STRICT    nr_seq_liq_origem_w
            FROM    TITULO_RECEBER_LIQ
            WHERE   NR_LOTE_CONTABIL = nr_lote_contabil_p;

            FOR movimento IN c010 LOOP
		IF (coalesce(movimento.nr_codigo_controle::text, '') = '') THEN
			BEGIN
				SELECT  NR_TITULO,
					IE_ORIGEM_TITULO,
					CD_TIPO_RECEBIMENTO,
					NR_CODIGO_CONTROLE
				INTO STRICT    nr_titulo_w,
					ie_origem_titulo_w,
					cd_tipo_recebimento_w,
					nr_comprovante_w
				FROM    TITULO_RECEBER
				WHERE   NR_TITULO = movimento.nr_seq_tab_orig;

				arr_data_w              := ctb_regras_contabil.obter_prefix_regra_rest(cd_tipo_lote_contabil_w, ie_origem_titulo_w || ',' || cd_tipo_recebimento_w);
				cd_regra_w              := arr_data_w(1);
				ds_prefixo_w            := arr_data_w(2);
				
				vl_tipo_movimento_w     := trim(both REGEXP_SUBSTR(REPLACE(cd_regra_w, '-', '- '),'[^-]+', 1, 3));
				
				IF coalesce(nr_comprovante_w::text, '') = '' THEN
					nr_comprovante_w	:= ctb_regras_contabil.obter_estorno_tit_receber(nr_titulo_w, nr_seq_liq_origem_w);
				END IF;
				
				IF coalesce(nr_comprovante_w::text, '') = '' AND (ds_prefixo_w IS NOT NULL AND ds_prefixo_w::text <> '') THEN
				    nr_comprovante_w		:= ctb_regras_contabil.gerar_seq_comprovante(ds_prefixo_w, nm_usuario_p);
				END IF;

				UPDATE  W_MOVIMENTO_CONTABIL
				SET     NR_CODIGO_CONTROLE 	= nr_comprovante_w
				WHERE   NR_LOTE_CONTABIL 	= nr_lote_contabil_p
				AND     NR_SEQ_TAB_ORIG 	= movimento.nr_seq_tab_orig;
				
				IF vl_tipo_movimento_w = 1 OR coalesce(vl_tipo_movimento_w::text, '') = '' THEN
				    UPDATE  TITULO_RECEBER
				    SET     NR_CODIGO_CONTROLE 	= nr_comprovante_w
				    WHERE   NR_TITULO 		= nr_titulo_w;

				    UPDATE  ALTERACAO_VALOR
				    SET     NR_CODIGO_CONTROLE 	= nr_comprovante_w
				    WHERE   EXISTS (
					SELECT  1
					FROM    ALTERACAO_VALOR
					WHERE   NR_TITULO 	 = nr_titulo_w
					AND     NR_LOTE_CONTABIL = nr_lote_contabil_p
				    );

				    UPDATE  TITULO_RECEBER_TRIB
				    SET     NR_CODIGO_CONTROLE	 = nr_comprovante_w
				    WHERE   EXISTS (
					SELECT  1
					FROM    TITULO_RECEBER_TRIB
					WHERE   NR_TITULO 	 = nr_titulo_w
					AND     NR_LOTE_CONTABIL = nr_lote_contabil_p
				    );
				ELSIF vl_tipo_movimento_w = 2 THEN
				    UPDATE  TITULO_RECEBER_LIQ
				    SET     NR_CODIGO_CONTROLE 	= nr_comprovante_w
				    WHERE   NR_TITULO 		= nr_titulo_w;
				END IF;
			EXCEPTION
				WHEN no_data_found THEN NULL;
			END;
		END IF;
	    END LOOP;
	    COMMIT;
        END IF;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_regras_contabil.ctb_gerar_cd_controle_rec ( nr_lote_contabil_p TITULO_RECEBER.NR_LOTE_CONTABIL%type, nm_usuario_p text ) FROM PUBLIC;
