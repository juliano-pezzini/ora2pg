-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ctb_regras_contabil.ctb_gerar_cd_controle_patri ( nr_lote_contabil_p LOTE_CONTABIL.NR_LOTE_CONTABIL%type, ie_exclusao_p text, nm_usuario_p text ) AS $body$
DECLARE


    cd_tipo_lote_contabil_w     LOTE_CONTABIL.CD_TIPO_LOTE_CONTABIL%type;
    nr_seq_bem_w		PAT_BEM.NR_SEQUENCIA%type;
    cd_regra_w                  REGRAS_TIPO_LOTE_CONTABIL.CD_REGRA%type;
    ds_prefixo_w                REGRAS_TIPO_LOTE_CONTABIL.DS_PREFIXO%type;

    nr_comprovante_w            varchar(255);
    arr_data_w                  arr_regra_prefix_t;
    arr_comandos_w		arr_comandos_t;

    c010 CURSOR FOR
        SELECT   NR_SEQ_AGRUPAMENTO,
		 NM_TABELA,
		 NR_SEQ_TAB_ORIG,
		 NR_CODIGO_CONTROLE
        FROM     W_MOVIMENTO_CONTABIL
        WHERE    NR_LOTE_CONTABIL = nr_lote_contabil_p
	ORDER BY NR_SEQ_AGRUPAMENTO,
		 NM_TABELA,
		 NR_SEQ_TAB_ORIG,
		 NR_CODIGO_CONTROLE;


BEGIN

        IF nr_lote_contabil_p > 0 THEN
	    CALL ctb_regras_contabil.restore_comprovante_from_cache(nr_lote_contabil_p, nm_usuario_p);

            SELECT  MAX(CD_TIPO_LOTE_CONTABIL)
            INTO STRICT    cd_tipo_lote_contabil_w
            FROM    LOTE_CONTABIL
            WHERE   NR_LOTE_CONTABIL = nr_lote_contabil_p;

            arr_data_w        := ctb_regras_contabil.obter_prefix_regra_rest(cd_tipo_lote_contabil_w, '');
            arr_comandos_w(1) := 'UPDATE   PAT_BEM ' 		 	||
				 'SET      NR_CODIGO_CONTROLE = :1 ' 	||
				 'WHERE    NR_SEQUENCIA = :2 ';

            arr_comandos_w(2) := 'UPDATE   PAT_VALOR_BEM '		||
				 'SET      NR_CODIGO_CONTROLE = :1 ' 	||
				 'WHERE    NR_SEQ_BEM = :2 ';

            arr_comandos_w(3) := 'UPDATE   PAT_HISTORICO_BEM ' 	 	||
				 'SET      NR_CODIGO_CONTROLE = :1 ' 	||
				 'WHERE    NR_SEQ_BEM = :2 ';

            IF ((arr_data_w(1) IS NOT NULL AND (arr_data_w(1))::text <> '') AND ie_exclusao_p = 'N') THEN
                FOR operacao IN c010 LOOP
			IF (coalesce(operacao.nr_codigo_controle::text, '') = '') THEN
				nr_comprovante_w	:= ctb_regras_contabil.obter_comprovante_origem(operacao.nm_tabela, operacao.nr_seq_tab_orig);

				cd_regra_w          := arr_data_w(1);
				ds_prefixo_w        := arr_data_w(2);

				IF (coalesce(nr_comprovante_w::text, '') = '' AND (ds_prefixo_w IS NOT NULL AND ds_prefixo_w::text <> '')) THEN
					nr_comprovante_w    := ctb_regras_contabil.gerar_seq_comprovante(ds_prefixo_w, nm_usuario_p);
				END IF;

				UPDATE	W_MOVIMENTO_CONTABIL
				SET	NR_CODIGO_CONTROLE	= nr_comprovante_w
				WHERE	NR_LOTE_CONTABIL	= nr_lote_contabil_p
				AND	NR_SEQ_AGRUPAMENTO	= operacao.nr_seq_agrupamento;
				
				BEGIN
					IF (operacao.nm_tabela <> 'PAT_BEM' AND (operacao.nm_tabela IS NOT NULL AND operacao.nm_tabela::text <> '')) THEN
						BEGIN
							EXECUTE 'SELECT MAX(NR_SEQ_BEM) ' 			  ||
									  'FROM '   		    			  ||
									  operacao.nm_tabela				  ||
									  ' WHERE ' 		    			  || 
									  ctb_regras_contabil.obter_coluna_chave_primaria(operacao.nm_tabela) || 
									  ' = :1'
							INTO STRICT 	nr_seq_bem_w
							USING 	operacao.nr_seq_tab_orig;
						EXCEPTION
							WHEN OTHERS THEN nr_seq_bem_w := null;
						END;
					END IF;

					IF (operacao.nm_tabela = 'PAT_BEM') THEN
						FOR i IN 1 .. 3 LOOP
							EXECUTE arr_comandos_w(i)
							USING	nr_comprovante_w,
								operacao.nr_seq_tab_orig;
						END LOOP;
					ELSIF (
						operacao.nm_tabela = 'PAT_VALOR_BEM'        OR
						operacao.nm_tabela = 'PAT_VALOR_BEM_RATEIO' OR 
						operacao.nm_tabela = 'PAT_BEM_AVALIACAO'    OR 
						operacao.nm_tabela = 'PAT_HISTORICO_BEM'
					) THEN
						EXECUTE arr_comandos_w(1) 
						USING nr_comprovante_w, nr_seq_bem_w;
					END IF;

					IF (operacao.nm_tabela = 'PAT_BEM_AVALIACAO') THEN
						EXECUTE arr_comandos_w(2)
						USING nr_comprovante_w, nr_seq_bem_w;
					END IF;

					IF (operacao.nm_tabela = 'PAT_HISTORICO_BEM') THEN
						EXECUTE arr_comandos_w(3)
						USING nr_comprovante_w, nr_seq_bem_w;
					END IF;
					
					IF (operacao.nm_tabela = 'MEMORIA_CALCULO_AITB') THEN
						UPDATE	MEMORIA_CALCULO_AITB
						SET	NR_CODIGO_CONTROLE	= nr_comprovante_w
						WHERE	NR_SEQ_BEM		= nr_seq_bem_w
						AND	NR_SEQUENCIA 		= operacao.nr_seq_tab_orig;
					END IF;
					
				EXCEPTION
					WHEN OTHERS THEN nr_comprovante_w := NULL;
				END;
			END IF;
                END LOOP;
                COMMIT;
            END IF;
        END IF;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_regras_contabil.ctb_gerar_cd_controle_patri ( nr_lote_contabil_p LOTE_CONTABIL.NR_LOTE_CONTABIL%type, ie_exclusao_p text, nm_usuario_p text ) FROM PUBLIC;
