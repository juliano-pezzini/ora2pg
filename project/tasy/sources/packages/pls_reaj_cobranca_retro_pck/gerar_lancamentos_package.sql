-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_reaj_cobranca_retro_pck.gerar_lancamentos ( nr_seq_reajuste_p pls_reajuste.nr_sequencia%type, nr_seq_lote_retro_p pls_reajuste_cobr_retro.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tx_reajuste_correto_w	pls_reajuste.tx_reajuste_correto%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		trunc(dt_referencia_reajuste,'month') dt_referencia_reajuste,
		trunc(dt_referencia_mensalidade,'month') dt_referencia_mensalidade,
		coalesce(qt_parcelas,1) qt_parcelas,
		ie_recomposicao
	from	pls_reajuste_cobr_retro
	where	nr_seq_reajuste = nr_seq_reajuste_p
	and (nr_sequencia = nr_seq_lote_retro_p or coalesce(nr_seq_lote_retro_p,0) = 0)
	and	coalesce(dt_liberacao::text, '') = '';

BEGIN
CALL CALL CALL CALL CALL pls_reaj_cobranca_retro_pck.carregar_parametros(cd_estabelecimento_p);

begin
select	a.tx_reajuste,
	a.dt_reajuste,
	coalesce((	select	max(ie_tipo_lote)
		from	pls_reajuste x
		where	x.nr_sequencia = a.nr_seq_lote_referencia),'N'),
	coalesce(a.tx_reajuste_correto,0)
into STRICT	current_setting('pls_reaj_cobranca_retro_pck.tx_reajuste_w')::pls_reajuste.tx_reajuste%type,
	current_setting('pls_reaj_cobranca_retro_pck.dt_reajuste_w')::pls_reajuste.dt_reajuste%type,
	current_setting('pls_reaj_cobranca_retro_pck.ie_tipo_lote_w')::pls_reajuste.ie_tipo_lote%type,
	tx_reajuste_correto_w
from	pls_reajuste a
where	a.nr_sequencia	= nr_seq_reajuste_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(736124); --Ocorreu um erro ao recuperar os dados do reajuste. Favor verifique os parametros.
end;

if	((current_setting('pls_reaj_cobranca_retro_pck.ie_tipo_lote_w')::pls_reajuste.ie_tipo_lote%type = 'D') and (tx_reajuste_correto_w <> 0)) then
	PERFORM set_config('pls_reaj_cobranca_retro_pck.tx_reajuste_w', tx_reajuste_correto_w, false);
end if;

for r_c01_w in C01 loop
	begin

	CALL pls_reaj_cobranca_retro_pck.gerar_lancamentos_preco_pre(	nr_seq_reajuste_p, r_c01_w.nr_sequencia, r_c01_w.dt_referencia_reajuste,
					r_c01_w.dt_referencia_mensalidade, r_c01_w.qt_parcelas, r_c01_w.ie_recomposicao, 
					cd_estabelecimento_p, nm_usuario_p);
	CALL pls_reaj_cobranca_retro_pck.gerar_lancamentos_sca(	nr_seq_reajuste_p, r_c01_w.nr_sequencia, r_c01_w.dt_referencia_reajuste,
				r_c01_w.dt_referencia_mensalidade, r_c01_w.qt_parcelas, r_c01_w.ie_recomposicao,
				cd_estabelecimento_p, nm_usuario_p);

	update	pls_reajuste_cobr_retro
	set	dt_liberacao		= clock_timestamp(),
		nm_usuario_liberacao	= nm_usuario_p
	where	nr_sequencia		= r_c01_w.nr_sequencia;
	
	commit;
	
	end;
end loop; --C01

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reaj_cobranca_retro_pck.gerar_lancamentos ( nr_seq_reajuste_p pls_reajuste.nr_sequencia%type, nr_seq_lote_retro_p pls_reajuste_cobr_retro.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
