-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pde.insert_log (NR_SEQ_PDE_MAIN_P PDE_ATTRIBUTE.NR_SEQ_PDE_MAIN%TYPE) AS $body$
DECLARE


  A RECORD;

BEGIN
      SELECT nextval('pde_log_seq') INTO STRICT NR_SEQ_PDE_LOG_W;

      INSERT INTO PDE_LOG(NR_SEQUENCIA,
         NR_SEQ_PDE_MAIN,
         CD_PESSOA_FISICA,
         NR_ATENDIMENTO,
         NR_PRESCRICAO,
         DT_ATUALIZACAO,
         NM_USUARIO,
         DT_ATUALIZACAO_NREC,
         NM_USUARIO_NREC)
      VALUES (NR_SEQ_PDE_LOG_W,
         NR_SEQ_PDE_MAIN_P,
         current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE,
         NR_ATENDIMENTO_P,
         NR_PRESCRICAO_P,
         clock_timestamp(),
         coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, NM_USUARIO_P),
         clock_timestamp(),
         coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, NM_USUARIO_P));

      INSERT INTO PDE_STAGE_LOG(NR_SEQUENCIA, NR_SEQ_STAGE, NR_SEQ_LOG)
      VALUES (nextval('pde_stage_log_seq'), current_setting('pde.nr_seq_pde_stage_w')::PDE_STAGE.NR_SEQUENCIA%TYPE, NR_SEQ_PDE_LOG_W);
    END;

  BEGIN
    IF ((NM_TABELA_P IS NOT NULL AND NM_TABELA_P::text <> '') AND (NM_ATTRIBUTO_P IS NOT NULL AND NM_ATTRIBUTO_P::text <> '') AND
       (VL_ATRIBUTO_P IS NOT NULL AND VL_ATRIBUTO_P::text <> '') AND ((CD_PESSOA_FISICA_P IS NOT NULL AND CD_PESSOA_FISICA_P::text <> '') OR (NR_ATENDIMENTO_P IS NOT NULL AND NR_ATENDIMENTO_P::text <> '') OR
       (NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> ''))) THEN
      IF (CD_PESSOA_FISICA_P IS NOT NULL AND CD_PESSOA_FISICA_P::text <> '') THEN
        PERFORM set_config('pde.cd_pessoa_fisica_w', CD_PESSOA_FISICA_P, false);
      ELSIF (NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> '') THEN
        current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE := pde.prc_patient_finder(NR_PRESCRICAO_P, 'PR', 'PF', current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE);
      ELSIF (NR_ATENDIMENTO_P IS NOT NULL AND NR_ATENDIMENTO_P::text <> '') THEN
        current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE := pde.prc_patient_finder(NR_ATENDIMENTO_P, 'AT', 'PF', current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE);
      END IF;

      SELECT nextval('pde_stage_seq') INTO STRICT current_setting('pde.nr_seq_pde_stage_w')::PDE_STAGE.NR_SEQUENCIA%TYPE;

      INSERT INTO PDE_STAGE(NR_SEQUENCIA,
         CD_PESSOA_FISICA,
         NR_ATENDIMENTO,
         NR_PRESCRICAO,
         NR_SEQ_PRESCRICAO,
         NM_TABELA,
         NM_ATRIBUTO,
         VL_ATRIBUTO,
         VL_FK_1,
         VL_FK_2,
         VL_FK_3,
         VL_FK_4,
         DT_ATUALIZACAO,
         NM_USUARIO,
         DT_ATUALIZACAO_NREC,
         NM_USUARIO_NREC)
      VALUES (current_setting('pde.nr_seq_pde_stage_w')::PDE_STAGE.NR_SEQUENCIA%TYPE,
         current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE,
         NR_ATENDIMENTO_P,
         NR_PRESCRICAO_P,
         NR_SEQ_PRESCRICAO_P,
         NM_TABELA_P,
         NM_ATTRIBUTO_P,
         VL_ATRIBUTO_P,
         VL_FK_1_P,
         VL_FK_2_P,
         VL_FK_3_P,
         VL_FK_4_P,
         coalesce(DT_ATUALIZACAO_P, clock_timestamp()),
         coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, NM_USUARIO_P),
         clock_timestamp(),
         coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, NM_USUARIO_P));

      FOR A IN (SELECT DISTINCT PA.NR_SEQ_PDE_MAIN
                  FROM PDE_ATTRIBUTE PA
                 WHERE PA.NM_TABELA = NM_TABELA_P
                   AND PA.NM_ATRIBUTO = NM_ATTRIBUTO_P
                 ORDER BY PA.NR_SEQ_PDE_MAIN) LOOP
        BEGIN
          SELECT PL.NR_SEQUENCIA
            INTO STRICT NR_SEQ_PDE_LOG_W
            FROM PDE_LOG PL
           WHERE PL.NR_SEQ_PDE_MAIN = A.NR_SEQ_PDE_MAIN
             AND coalesce(PL.DS_JSON::text, '') = ''
             AND coalesce(PL.CD_PESSOA_FISICA, '#@#@') =
                 coalesce(current_setting('pde.cd_pessoa_fisica_w')::PESSOA_FISICA.CD_PESSOA_FISICA%TYPE, '#@#@')
             AND coalesce(PL.NR_ATENDIMENTO, -123) = coalesce(NR_ATENDIMENTO_P, -123)
             AND coalesce(PL.NR_PRESCRICAO, -123) = coalesce(NR_PRESCRICAO_P, -123);

          INSERT INTO PDE_STAGE_LOG(NR_SEQUENCIA, NR_SEQ_STAGE, NR_SEQ_LOG)
          VALUES (nextval('pde_stage_log_seq'),
             current_setting('pde.nr_seq_pde_stage_w')::PDE_STAGE.NR_SEQUENCIA%TYPE,
             NR_SEQ_PDE_LOG_W);
        EXCEPTION
          WHEN no_data_found THEN
            CALL pde.insert_log(A.NR_SEQ_PDE_MAIN);
        END;
      END LOOP;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      CALL PDE.GRAVA_LOG_ERRO('INSERT.STAGE.ERROR',
                         'CD_PESSOA_FISICA_P: ' || CD_PESSOA_FISICA_P ||
                         ', NR_ATENDIMENTO_P: ' || NR_ATENDIMENTO_P ||
                         ', NR_PRESCRICAO_P: ' || NR_PRESCRICAO_P ||
                         ', NR_SEQ_PRESCRICAO_P: ' || NR_SEQ_PRESCRICAO_P ||
                         ', NM_TABELA_P: ' || NM_TABELA_P ||
                         ', NM_ATTRIBUTO_P: ' || NM_ATTRIBUTO_P ||
                         ', VL_ATRIBUTO_P: ' || VL_ATRIBUTO_P ||
                         ', VL_FK_1_P: ' || VL_FK_1_P || ', VL_FK_2_P: ' ||
                         VL_FK_2_P || ', VL_FK_3_P: ' || VL_FK_3_P ||
                         ', VL_FK_4_P: ' || VL_FK_4_P || ', NM_USUARIO_P: ' ||
                         NM_USUARIO_P,
                         SQLSTATE,
                         SQLERRM);
  END;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pde.insert_log (NR_SEQ_PDE_MAIN_P PDE_ATTRIBUTE.NR_SEQ_PDE_MAIN%TYPE) FROM PUBLIC;
