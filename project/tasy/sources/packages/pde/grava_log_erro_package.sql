-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function pde.grava_log_erro() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE pde.grava_log_erro (DS_REF_P text, DS_ERRO_P text, SQLCODE_P bigint DEFAULT NULL, SQLERRM_P text DEFAULT NULL) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL pde.grava_log_erro_atx ( ' || quote_nullable(DS_REF_P) || ',' || quote_nullable(DS_ERRO_P) || ',' || quote_nullable(SQLCODE_P) || ',' || quote_nullable(SQLERRM_P) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE pde.grava_log_erro_atx (DS_REF_P text, DS_ERRO_P text, SQLCODE_P bigint DEFAULT NULL, SQLERRM_P text DEFAULT NULL) AS $body$
DECLARE

    DS_ORA_W varchar(4000);
BEGIN
    IF (SQLCODE_P IS NOT NULL AND SQLCODE_P::text <> '' AND SQLERRM_P IS NOT NULL AND SQLERRM_P::text <> '') THEN
      DS_ORA_W := '(' || SQLCODE_P || ') ' || SQLERRM_P || '#@#@BR#@#@';
    END IF;

    INSERT INTO PDE_ERRO_LOG(NR_SEQUENCIA,
       DT_ATUALIZACAO,
       NM_USUARIO,
       DT_ATUALIZACAO_NREC,
       NM_USUARIO_NREC,
       NM_REFERENCIA,
       DS_ERRO,
       DS_ERRO_FULL)
    VALUES (nextval('pde_erro_log_seq'),
       clock_timestamp(),
       coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, 'integration'),
       clock_timestamp(),
       coalesce(WHEB_USUARIO_PCK.GET_NM_USUARIO, 'integration'),
       DS_REF_P,
       SUBSTR(REPLACE(DS_ORA_W, '#@#@BR#@#@', ' - ') || DS_ERRO_P, 1, 4000),
       REPLACE(DS_ORA_W, '#@#@BR#@#@', CHR(10) || CHR(10)) || DS_ERRO_P ||
       CHR(10) || CHR(10) || '***** CALL STACK: ' || CHR(10) ||
       DBMS_UTILITY.FORMAT_CALL_STACK);

    
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pde.grava_log_erro (DS_REF_P text, DS_ERRO_P text, SQLCODE_P bigint DEFAULT NULL, SQLERRM_P text DEFAULT NULL) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE pde.grava_log_erro_atx (DS_REF_P text, DS_ERRO_P text, SQLCODE_P bigint DEFAULT NULL, SQLERRM_P text DEFAULT NULL) FROM PUBLIC;
