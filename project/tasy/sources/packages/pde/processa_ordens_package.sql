-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pde.processa_ordens (PDE_ATTRIBUTE_P PDE_ATTRIBUTE, IE_FILHO_P text DEFAULT 'N', VL_FK_ROW_FILHOS_P PDE.VL_FK_ROW_DATA_T DEFAULT NULL) AS $body$
DECLARE

      JSON_ATRIBUTOS_W PHILIPS_JSON_LIST;
      JSON_ORDEM_W     PHILIPS_JSON;
      VL_FK_ROW_DATA_W PDE.VL_FK_ROW_DATA_T := PDE.VL_FK_ROW_DATA_T();
      TABLES_W         varchar(4000) := '';
      ORDER_INDEX_W    integer;

  G RECORD;
  F RECORD;

BEGIN
      ORDER_INDEX_W := BUSCA_ORDER_INDEX(PDE_ATTRIBUTE_P.NR_SEQUENCIA);

      IF (ORDER_INDEX_W < 0) THEN
        JSON_ORDEM_W     := PHILIPS_JSON();
        JSON_ATRIBUTOS_W := PHILIPS_JSON_LIST();

        JSON_ORDEM_W.PUT('internalOrderNumber',
                         PDE_ATTRIBUTE_P.NR_SEQUENCIA);
        JSON_ORDEM_W.PUT('externalOrderNumber', current_setting('pde.ds_pedido_ext_w')::PRESCR_MEDICA.DS_PEDIDO_EXT%TYPE);
        JSON_ORDEM_W.PUT('code',
                         COALESCE(PDE_ATTRIBUTE_P.CD_ONTOLOGIA,
                                  PDE_ATTRIBUTE_P.CD_ONTOLOGIA2,
                                  PDE_ATTRIBUTE_P.CD_ONTOLOGIA3,
                                  PDE_ATTRIBUTE_P.CD_ONTOLOGIA4,
                                  PDE_ATTRIBUTE_P.CD_ONTOLOGIA5,
                                  PDE_ATTRIBUTE_P.CD_ONTOLOGIA6,
                                  PDE_ATTRIBUTE_P.CD_ONTOLOGIA7));
        IF (coalesce(PDE_ATTRIBUTE_P.NM_ATRIBUTO::text, '') = '') THEN
          JSON_ORDEM_W.PUT('name',
                           EXPRESSAO_PCK.OBTER_DESC_EXPRESSAO(coalesce(PDE_ATTRIBUTE_P.CD_EXP_TABELA,
                                                                  PDE_ATTRIBUTE_P.CD_EXP_TABELA_GRUPO)));
        ELSE
          JSON_ORDEM_W.PUT('name',
                           EXPRESSAO_PCK.OBTER_DESC_EXPRESSAO(coalesce(PDE_ATTRIBUTE_P.CD_EXP_ATRIBUTO,
                                                                  PDE_ATTRIBUTE_P.CD_EXP_ATRIBUTO_GRUPO)));
        END IF;

        JSON_ORDEM_W.PUT('system', 'SNM');
        JSON_ORDEM_W.PUT('date', TO_CHAR(clock_timestamp(), 'MM/DD/YYYY HH24:MI:SS'));
      ELSE
        JSON_ORDEM_W := PHILIPS_JSON(JSON_ORDENS_W.GET(ORDER_INDEX_W));

        IF (JSON_ORDEM_W.EXIST('results')) THEN
          JSON_ATRIBUTOS_W := PHILIPS_JSON_LIST(JSON_ORDEM_W.GET('results'));
        ELSE
          JSON_ATRIBUTOS_W := PHILIPS_JSON_LIST();
        END IF;
      END IF;

      IF (coalesce(IE_FILHO_P, 'N') = 'N') THEN
        BUSCA_ATRIBUTOS(PDE_ATTRIBUTE_P.NR_SEQUENCIA,
                        JSON_ATRIBUTOS_W,
                        VL_FK_ROW_DATA_W);
      ELSE
        BUSCA_ATRIBUTOS(PDE_ATTRIBUTE_P.NR_SEQUENCIA,
                        JSON_ATRIBUTOS_W,
                        VL_FK_ROW_DATA_W,
                        'S',
                        VL_FK_ROW_FILHOS_P);
      END IF;

      FOR G IN (SELECT PA.NR_SEQUENCIA
                  FROM PDE_ATTRIBUTE PA
                 WHERE PA.NR_SEQ_PDE_MAIN = NR_SEQ_PDE_MAIN_W
                   AND PA.NR_SEQUENCIA_SUP = PDE_ATTRIBUTE_P.NR_SEQUENCIA
                   AND coalesce(PA.NM_ATRIBUTO::text, '') = ''
                   AND coalesce(PA.IE_SITUACAO, 'A') = 'A'
                   AND coalesce(PA.IE_ENVIAR, 'S') = 'S'
                   AND coalesce(PA.NM_TABELA_FK::text, '') = ''
                   AND coalesce(PA.NM_FK_TABELA_FK::text, '') = ''
                   AND (PA.CD_EXP_ATRIBUTO_GRUPO IS NOT NULL AND PA.CD_EXP_ATRIBUTO_GRUPO::text <> '')
                 ORDER BY PA.NR_SEQUENCIA) LOOP
        BUSCA_ATRIBUTOS(G.NR_SEQUENCIA, JSON_ATRIBUTOS_W, VL_FK_ROW_DATA_W);
      END LOOP;

      IF (JSON_ATRIBUTOS_W.COUNT() > 0) THEN
        JSON_ORDEM_W.PUT('results', JSON_ATRIBUTOS_W.TO_JSON_VALUE());
      END IF;

      IF (ORDER_INDEX_W < 0) THEN
        JSON_ORDENS_W.APPEND(JSON_ORDEM_W.TO_JSON_VALUE());
      ELSE
        JSON_ORDENS_W.replace(ORDER_INDEX_W, JSON_ORDEM_W.TO_JSON_VALUE(), '');
      END IF;

      FOR I IN 1 .. VL_FK_ROW_DATA_W.COUNT LOOP
        IF ((trim(both TABLES_W) IS NOT NULL AND (trim(both TABLES_W))::text <> '')) THEN
          TABLES_W := TABLES_W || ',';
        END IF;

        TABLES_W := TABLES_W || VL_FK_ROW_DATA_W[I].NM_TABELA;
      END LOOP;

      FOR F IN (SELECT CD_REGISTRO NM_TABELA
                  FROM TABLE(LISTA_PCK.OBTER_LISTA_CHAR(TABLES_W))) LOOP
        FOR G IN (SELECT PA.*
                    FROM PDE_ATTRIBUTE PA
                   WHERE PA.NR_SEQ_PDE_MAIN = NR_SEQ_PDE_MAIN_W
                     AND coalesce(PA.NR_SEQUENCIA_SUP::text, '') = ''
                     AND PA.NM_TABELA_FK = F.NM_TABELA
                     AND coalesce(PA.NM_ATRIBUTO::text, '') = ''
                     AND (PA.NM_FK_TABELA_FK IS NOT NULL AND PA.NM_FK_TABELA_FK::text <> '')
                     AND coalesce(PA.IE_SITUACAO, 'A') = 'A'
                     AND coalesce(PA.IE_ENVIAR, 'S') = 'S'
                   ORDER BY PA.NR_SEQUENCIA) LOOP
          CALL pde.processa_ordens(G, 'S', VL_FK_ROW_DATA_W);
        END LOOP;
      END LOOP;

      IF (coalesce(IE_FILHO_P, 'N') = 'N') THEN
        FOR G IN (SELECT PA.*
                    FROM PDE_ATTRIBUTE PA
                   WHERE PA.NR_SEQ_PDE_MAIN = NR_SEQ_PDE_MAIN_W
                     AND PA.NR_SEQUENCIA_SUP = PDE_ATTRIBUTE_P.NR_SEQUENCIA
                     AND coalesce(PA.NM_ATRIBUTO::text, '') = ''
                     AND coalesce(PA.IE_SITUACAO, 'A') = 'A'
                     AND coalesce(PA.IE_ENVIAR, 'S') = 'S'
                     AND coalesce(PA.NM_TABELA_FK::text, '') = ''
                     AND coalesce(PA.NM_FK_TABELA_FK::text, '') = ''
                     AND coalesce(PA.CD_EXP_ATRIBUTO_GRUPO::text, '') = ''
                   ORDER BY PA.NR_SEQUENCIA) LOOP
          CALL pde.processa_ordens(G);
        END LOOP;
      END IF;
    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pde.processa_ordens (PDE_ATTRIBUTE_P PDE_ATTRIBUTE, IE_FILHO_P text DEFAULT 'N', VL_FK_ROW_FILHOS_P PDE.VL_FK_ROW_DATA_T DEFAULT NULL) FROM PUBLIC;
