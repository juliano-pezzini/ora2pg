-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--
-- dblink wrapper to call function flowsheet_history_pck.get_date() as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION flowsheet_history_pck.get_date ( nm_tabela_p tabela_atributo.nm_tabela%type, ds_campo_p tabela_atributo.nm_atributo%type, cd_chave_p text) RETURNS timestamp AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	timestamp;
BEGIN
	v_query := 'SELECT * FROM flowsheet_history_pck.get_date_atx ( ' || quote_nullable(nm_tabela_p) || ',' || quote_nullable(ds_campo_p) || ',' || quote_nullable(cd_chave_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret timestamp);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE FUNCTION flowsheet_history_pck.get_date_atx ( nm_tabela_p tabela_atributo.nm_tabela%type, ds_campo_p tabela_atributo.nm_atributo%type, cd_chave_p text) RETURNS timestamp AS $body$
DECLARE

						
	
	dt_retorno_w		timestamp;
	ds_comando_w		varchar(2000);
	ds_campo_chave_w	indice_atributo.nm_atributo%type;
	c001				integer;
	retorno_w			integer;
	sql_errm_w			varchar(4000);
	nm_tabela_w			tabela_atributo.nm_tabela%type;
BEGIN
	begin
	nm_tabela_w	:= flowsheet_history_pck.get_tabela(nm_tabela_p);
	
	select 	max(b.nm_atributo)
	into STRICT 	ds_campo_chave_w
	from 	indice_atributo b,
			indice a
	where	a.nm_tabela	= nm_tabela_w
	and		a.nm_tabela	= b.nm_tabela
	and		a.nm_indice	= b.nm_indice
	and		a.ie_tipo	= 'PK';
	
	ds_comando_w	:= 'select ' || ds_campo_p || ' from ' || nm_tabela_w || ' where ' || ds_campo_chave_w || ' = :CD_CHAVE_P ';
	C001 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C001, ds_comando_w, dbms_sql.Native);
	dbms_sql.define_column(C001,1,dt_retorno_w);
	DBMS_SQL.BIND_VARIABLE(C001, 'CD_CHAVE_P', cd_chave_p,255);
	retorno_w := DBMS_SQL.execute(c001);
	retorno_w := DBMS_SQL.fetch_rows(c001);
	DBMS_SQL.COLUMN_VALUE(C001, 1, dt_retorno_w );
	DBMS_SQL.CLOSE_CURSOR(C001);
	exception
		WHEN unique_violation THEN
			dt_retorno_w 	:= null;
		WHEN others THEN	
			dt_retorno_w 	:= null;
			sql_errm_w 		:= sqlerrm;
			DBMS_SQL.CLOSE_CURSOR(C001);
	end;
	
	RETURN	dt_retorno_w;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 IMMUTABLE;
-- REVOKE ALL ON FUNCTION flowsheet_history_pck.get_date ( nm_tabela_p tabela_atributo.nm_tabela%type, ds_campo_p tabela_atributo.nm_atributo%type, cd_chave_p text) FROM PUBLIC; -- REVOKE ALL ON FUNCTION flowsheet_history_pck.get_date_atx ( nm_tabela_p tabela_atributo.nm_tabela%type, ds_campo_p tabela_atributo.nm_atributo%type, cd_chave_p text) FROM PUBLIC;
