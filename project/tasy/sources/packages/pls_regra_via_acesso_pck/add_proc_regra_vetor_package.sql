-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

CREATE OR REPLACE PROCEDURE pls_regra_via_acesso_pck.add_proc_regra_vetor ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_regra_p pls_tipo_via_acesso.nr_sequencia%type, nr_seq_proc_ref_p pls_conta_proc.nr_seq_proc_ref%type, ie_proc_ref_via_p pls_parametros.ie_proc_ref_via%type, idx integer, ie_via_acesso_ref_p INOUT pls_conta_proc.ie_via_acesso%type, tx_item_ref_p INOUT pls_conta_proc.tx_item%type, nr_seq_proc_table_p INOUT dbms_sql.number_table, nr_seq_regra_table_p INOUT dbms_sql.number_table, ie_via_acesso_table_p INOUT dbms_sql.varchar2_table, tx_item_table_p INOUT dbms_sql.number_table) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:     Adiciona novos registros nos vetores.
                necessario realizar o processo desta forma pois pode ser que o registro ainda nao tenha sido salva
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN

nr_seq_proc_table_p(idx)	:= nr_seq_conta_proc_p;	
nr_seq_regra_table_p(idx)	:= nr_seq_regra_p;

if (ie_proc_ref_via_P = 'S') then
        for	x in nr_seq_proc_table_p.first..nr_seq_proc_table_p.last loop
                begin
                        if (nr_seq_proc_ref_p      = nr_seq_proc_table_p(x)) and (nr_seq_regra_p         = nr_seq_regra_table_p(x)) then

                                ie_via_acesso_ref_p := ie_via_acesso_table_p(x);
                                tx_item_ref_p := tx_item_table_p(x);
                        end if;
                end;
        end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_regra_via_acesso_pck.add_proc_regra_vetor ( nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, nr_seq_regra_p pls_tipo_via_acesso.nr_sequencia%type, nr_seq_proc_ref_p pls_conta_proc.nr_seq_proc_ref%type, ie_proc_ref_via_p pls_parametros.ie_proc_ref_via%type, idx integer, ie_via_acesso_ref_p INOUT pls_conta_proc.ie_via_acesso%type, tx_item_ref_p INOUT pls_conta_proc.tx_item%type, nr_seq_proc_table_p INOUT dbms_sql.number_table, nr_seq_regra_table_p INOUT dbms_sql.number_table, ie_via_acesso_table_p INOUT dbms_sql.varchar2_table, tx_item_table_p INOUT dbms_sql.number_table) FROM PUBLIC;
