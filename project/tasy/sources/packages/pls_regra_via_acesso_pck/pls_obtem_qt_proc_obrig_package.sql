-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

CREATE OR REPLACE FUNCTION pls_regra_via_acesso_pck.pls_obtem_qt_proc_obrig ( dados_conta_proc_p pls_regra_via_acesso_pck.c_dados_proc, dados_regra_p pls_regra_via_acesso_pck.dados_regra, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS integer AS $body$
DECLARE

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Rotina responsavel por obter a quantidade de procedimentos que se encaixa na regra.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_campo_sql_w		varchar(200);

ds_restricao_proc_w	varchar(4000);
ds_binds_w		varchar(4000);

var_cur_w 		integer;
var_exec_w		integer;
var_retorno_w		integer;

ds_sql_w		varchar(4000);

qt_proc_conta_w		integer;	
qt_procedimentos_w	integer;	


BEGIN

ds_campo_sql_w := '';
qt_procedimentos_w := 0;
			
case(dados_regra_p.ie_regra)
	when 'M' then -- Mesmo medico
		ds_campo_sql_w := ' pls_obter_med_grau_part_exec(cp.nr_sequencia, ''P'', ''M'') ';
	when 'MP' then -- Mesmo medico e mesma participacao
		ds_campo_sql_w := ' pls_obter_med_grau_part_exec(cp.nr_sequencia, ''P'', ''M''), pls_obter_med_grau_part_exec(cp.nr_sequencia, ''P'', ''G'')  ';
	when 'MG' then -- Mesma guia
		ds_campo_sql_w := ' cp.ie_tipo_guia ';
	else
		ds_campo_sql_w := ' null ';
end case;

-- Carrega as restricoes vinculadas ao procedimento
ds_restricao_proc_w := pls_regra_via_acesso_pck.pls_obtem_restricao_via_obrig('RESTRICAO', dados_conta_proc_p, dados_regra_p, var_cur_w, 'CP');

-- Aqui e montado o select para recuperar os procedimentos que foram executados e se encaixam na regra
ds_sql_w := '	select	sum(cp.qt_procedimento_imp) qt_procedimento,					' || pls_util_pck.enter_w ||
			ds_campo_sql_w									  || pls_util_pck.enter_w ||
	    ' 	from	pls_conta_proc_v	 cp 							' || pls_util_pck.enter_w ||
	    '	where	1 = 1										' || pls_util_pck.enter_w ||
	    '	and	cp.nr_seq_segurado 	= :nr_seq_segurado 					' || pls_util_pck.enter_w ||
	    '	and	((cp.nr_seq_conta 	= :nr_seq_conta) or					' || pls_util_pck.enter_w ||
	    ' 		(cp.cd_guia_referencia 	= :cd_guia_referencia))	 				' || pls_util_pck.enter_w ||
	    '	and	cp.ie_glosa		= ''N'' 						' || pls_util_pck.enter_w ||
	    '	and	cp.ie_status		not in (''D'',''M'') 					' || pls_util_pck.enter_w || -- 'D' = cancelado / 'M' = Faturamento manual			
		ds_restricao_proc_w		 							  || 
	    '	group 	by ' || ds_campo_sql_w;

-- Abrir um novo cursor
var_cur_w := dbms_sql.open_cursor;

begin
	-- Cria o cursor	
	dbms_sql.parse(var_cur_w, ds_sql_w, 1);

	dbms_sql.bind_variable(var_cur_w, ':nr_seq_segurado', dados_conta_proc_p.nr_seq_segurado);	
	dbms_sql.bind_variable(var_cur_w, ':nr_seq_conta', dados_conta_proc_p.nr_seq_conta);				
	dbms_sql.bind_variable(var_cur_w, ':cd_guia_referencia', dados_conta_proc_p.cd_guia_referencia);
	--Atualiza as binds que serao utilizadas no select
	ds_binds_w := pls_regra_via_acesso_pck.pls_obtem_restricao_via_obrig('BIND', dados_conta_proc_p, dados_regra_p, var_cur_w, 'CP');

	--Executa o select  dinamico
	dbms_sql.define_column(var_cur_w, 1, qt_proc_conta_w);

	var_exec_w := dbms_sql.execute(var_cur_w);

	loop
	var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
	exit when var_retorno_w = 0;
		-- Pega os dados do SQL dinamico
		dbms_sql.column_value(var_cur_w, 1, qt_proc_conta_w);	
		qt_procedimentos_w := qt_procedimentos_w + qt_proc_conta_w;
	end loop;
	dbms_sql.close_cursor(var_cur_w);
end;

return qt_procedimentos_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_regra_via_acesso_pck.pls_obtem_qt_proc_obrig ( dados_conta_proc_p pls_regra_via_acesso_pck.c_dados_proc, dados_regra_p pls_regra_via_acesso_pck.dados_regra, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
