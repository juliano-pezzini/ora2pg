-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

CREATE OR REPLACE PROCEDURE pls_regra_via_acesso_pck.pls_obtem_proc_ref_spsadt ( dados_conta_proc_p pls_regra_via_acesso_pck.c_dados_proc_ref, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, i_p INOUT integer, nr_seq_conta_proc_table_p INOUT dbms_sql.number_table, nr_seq_proc_ref_table_p INOUT dbms_sql.number_table) AS $body$
DECLARE

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Rotina responsavel por obter os procedimentos junto a seus novos procedimentos de referencia quando o tipo de guia da conta vinculada ao procedimento 
	passado como parametro for "Guia de SP/SADT" (IE_TIPO_GUIA = 4).
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 	

nr_seq_proc_ref_w	pls_conta_proc.nr_seq_proc_ref%type;
			

BEGIN

/* Obs. :	* Em guias de SP/SADT poode haver procedimentos que referenciam outras guias de SP/SADT;
	* As guias de SP/SADT que referenciam outras guias de SP/SADT possuem informado na guia de referencia o CD_GUIA da guia principal;
	* A guia principal nao possui guia de referencia informada */
if (dados_conta_proc_p.cd_guia_referencia IS NOT NULL AND dados_conta_proc_p.cd_guia_referencia::text <> '') then -- Se for guia filha entao ...	
	
	--Se existir uma guia na base com a guia informada significa que esta nao e uma situacao onde ha o mesmo procedimento
	select	min(nr_sequencia)
	into STRICT	nr_seq_proc_ref_w
	from  (	SELECT	a.nr_sequencia
		from	pls_conta_proc_v	a
		where	a.cd_guia		= dados_conta_proc_p.cd_guia_referencia
		and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
		and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
		and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
		and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
		and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
		and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
		and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
		and	a.ie_glosa		= 'N'	
		and	a.ie_tipo_guia		= '5' -- Guia de SP/SADT		
		and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
		and	coalesce(a.nr_seq_proc_ref::text, '') = ''
		and	not exists (	select	1
					from	pls_conta_proc_v x
					where	a.nr_sequencia = x.nr_seq_proc_ref
					and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
		
union all

		SELECT	a.nr_sequencia
		from	pls_conta_proc_v	a
		where	a.cd_guia		= dados_conta_proc_p.cd_guia_referencia
		and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
		and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
		and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
		and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
		and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
		and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
		and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
		and	a.ie_glosa		= 'N'	
		and	a.ie_tipo_guia		= '5' -- Guia de SP/SADT		
		and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
		and	coalesce(a.nr_seq_proc_ref::text, '') = ''
		and	not exists (	select	1
					from	pls_conta_proc_v x
					where	a.nr_sequencia = x.nr_seq_proc_ref
					and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
		
union all

		select	a.nr_sequencia
		from	pls_conta_proc_v	a
		where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
		and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
		and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
		and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
		and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
		and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
		and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
		and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
		and	a.ie_glosa		= 'N'
		and	a.ie_tipo_guia		= '5' -- Guia de SP/SADT			
		and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
		and	coalesce(a.nr_seq_proc_ref::text, '') = ''
		and	not exists (	select	1
					from	pls_conta_proc_v x
					where	x.nr_seq_proc_ref = a.nr_sequencia
					and	x.nr_seq_conta 	  = dados_conta_proc_p.nr_seq_conta)
		
union all

		select	a.nr_sequencia
		from	pls_conta_proc_v	a
		where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
		and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
		and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
		and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
		and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
		and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
		and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
		and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
		and	a.ie_glosa		= 'N'
		and	a.ie_tipo_guia		= '5' -- Guia de SP/SADT			
		and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
		and	coalesce(a.nr_seq_proc_ref::text, '') = ''
		and	not exists (	select	1
					from	pls_conta_proc_v x
					where	x.nr_seq_proc_ref = a.nr_sequencia
					and	x.nr_seq_conta 	  = dados_conta_proc_p.nr_seq_conta));
	
	if (coalesce(nr_seq_proc_ref_w::text, '') = '') then
		select	min(nr_sequencia)
		into STRICT	nr_seq_proc_ref_w
		from  (	SELECT	a.nr_sequencia
			from	pls_conta_proc_v	a
			where	a.cd_guia		= dados_conta_proc_p.cd_guia_referencia
			and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
			and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
			and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
			and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
			and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
			and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
			and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
			and	a.ie_glosa		= 'N'	
			and	a.ie_tipo_guia		= '6' -- Guia de SP/SADT		
			and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
			and	coalesce(a.nr_seq_proc_ref::text, '') = ''
			and	not exists (	select	1
						from	pls_conta_proc_v x
						where	a.nr_sequencia = x.nr_seq_proc_ref
						and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta
						and	x.nr_sequencia != dados_conta_proc_p.nr_seq_conta_proc)
			
union all

			SELECT	a.nr_sequencia
			from	pls_conta_proc_v	a
			where	a.cd_guia		= dados_conta_proc_p.cd_guia_referencia
			and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
			and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
			and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
			and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
			and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
			and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
			and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
			and	a.ie_glosa		= 'N'	
			and	a.ie_tipo_guia		= '6' -- Guia de SP/SADT		
			and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
			and	coalesce(a.nr_seq_proc_ref::text, '') = ''
			and	not exists (	select	1
						from	pls_conta_proc_v x
						where	a.nr_sequencia = x.nr_seq_proc_ref
						and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta
						and	x.nr_sequencia != dados_conta_proc_p.nr_seq_conta_proc)
			
union all

			select	a.nr_sequencia
			from	pls_conta_proc_v	a
			where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
			and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
			and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
			and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
			and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
			and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
			and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
			and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
			and	a.ie_glosa		= 'N'
			and	a.ie_tipo_guia		= '6' -- Guia de SP/SADT			
			and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
			and	coalesce(a.nr_seq_proc_ref::text, '') = ''
			and	not exists (	select	1
						from	pls_conta_proc_v x
						where	x.nr_seq_proc_ref = a.nr_sequencia
						and	x.nr_seq_conta 	  = dados_conta_proc_p.nr_seq_conta
						and	x.nr_sequencia != dados_conta_proc_p.nr_seq_conta_proc)
			
union all

			select	a.nr_sequencia
			from	pls_conta_proc_v	a
			where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
			and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
			and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
			and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
			and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
			and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
			and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
			and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
			and	a.ie_glosa		= 'N'
			and	a.ie_tipo_guia		= '6' -- Guia de SP/SADT			
			and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
			and	coalesce(a.nr_seq_proc_ref::text, '') = ''
			and	not exists (	select	1
						from	pls_conta_proc_v x
						where	x.nr_seq_proc_ref = a.nr_sequencia
						and	x.nr_seq_conta 	  = dados_conta_proc_p.nr_seq_conta
						and	x.nr_sequencia !=  dados_conta_proc_p.nr_seq_conta_proc));
		
		if (coalesce(nr_seq_proc_ref_w::text, '') = '') then
			select	min(nr_sequencia)
			into STRICT	nr_seq_proc_ref_w
			from  (	SELECT	a.nr_sequencia
				from	pls_conta_proc_v	a
				where	a.cd_guia		= dados_conta_proc_p.cd_guia_referencia
				and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
				and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
				and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
				and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
				and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
				and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
				and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
				and	a.ie_glosa		= 'N'	
				and	a.ie_tipo_guia		= '4' -- Guia de SP/SADT		
				and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
				and	coalesce(a.nr_seq_proc_ref::text, '') = ''
				and	not exists (	select	1
							from	pls_conta_proc_v x
							where	a.nr_sequencia = x.nr_seq_proc_ref
							and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
				
union all

				SELECT	a.nr_sequencia
				from	pls_conta_proc_v	a
				where	a.cd_guia		= dados_conta_proc_p.cd_guia_referencia
				and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
				and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
				and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
				and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
				and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
				and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
				and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
				and	a.ie_glosa		= 'N'	
				and	a.ie_tipo_guia		= '4' -- Guia de SP/SADT		
				and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
				and	coalesce(a.nr_seq_proc_ref::text, '') = ''
				and	not exists (	select	1
							from	pls_conta_proc_v x
							where	a.nr_sequencia = x.nr_seq_proc_ref
							and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
				
union all

				select	a.nr_sequencia
				from	pls_conta_proc_v	a
				where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
				and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
				and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
				and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
				and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
				and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
				and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
				and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
				and	a.ie_glosa		= 'N'
				and	a.ie_tipo_guia		= '4' -- Guia de SP/SADT			
				and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
				and	coalesce(a.nr_seq_proc_ref::text, '') = ''
				and	not exists (	select	1
							from	pls_conta_proc_v x
							where	x.nr_seq_proc_ref = a.nr_sequencia
							and	x.nr_seq_conta 	  = dados_conta_proc_p.nr_seq_conta)
				
union all

				select	a.nr_sequencia
				from	pls_conta_proc_v	a
				where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
				and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
				and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
				and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento			
				and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
				and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
				and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
				and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
				and	a.ie_glosa		= 'N'
				and	a.ie_tipo_guia		= '4' -- Guia de SP/SADT			
				and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
				and	coalesce(a.nr_seq_proc_ref::text, '') = ''
				and	not exists (	select	1
							from	pls_conta_proc_v x
							where	x.nr_seq_proc_ref = a.nr_sequencia
							and	x.nr_seq_conta 	  = dados_conta_proc_p.nr_seq_conta));
		end if;
	end if;
	nr_seq_conta_proc_table_p(i_p) 	:= dados_conta_proc_p.nr_seq_conta_proc;
	nr_seq_proc_ref_table_p(i_p)	:= nr_seq_proc_ref_w;
	
	i_p := i_p + 1;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_regra_via_acesso_pck.pls_obtem_proc_ref_spsadt ( dados_conta_proc_p pls_regra_via_acesso_pck.c_dados_proc_ref, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, i_p INOUT integer, nr_seq_conta_proc_table_p INOUT dbms_sql.number_table, nr_seq_proc_ref_table_p INOUT dbms_sql.number_table) FROM PUBLIC;
