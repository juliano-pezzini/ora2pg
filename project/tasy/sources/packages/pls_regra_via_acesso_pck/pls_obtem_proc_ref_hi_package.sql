-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

CREATE OR REPLACE PROCEDURE pls_regra_via_acesso_pck.pls_obtem_proc_ref_hi ( dados_conta_proc_p pls_regra_via_acesso_pck.c_dados_proc_ref, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, i_p INOUT integer, nr_seq_conta_proc_table_p INOUT dbms_sql.number_table, nr_seq_proc_ref_table_p INOUT dbms_sql.number_table) AS $body$
DECLARE

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 	Rotina responsavel por obter os procedimentos junto a seus novos procedimentos de referencia quando o tipo de guia da conta vinculada ao procedimento 
	passado como parametro for "Guia de Honorario Individual" (IE_TIPO_GUIA = 6).
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 

nr_seq_proc_ref_w		pls_conta_proc.nr_seq_proc_ref%type;
nr_seq_proc_ref_final_w		pls_conta_proc.nr_seq_proc_ref%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_proc_ref_via_w		pls_parametros.ie_proc_ref_via%type;
			
BEGIN

/* Obs. :	* Em guias de honorario individual (HI) tem que existir um correspondente nas guias de internacao. Logo todo procedimento existente na guia de HI sera considerado uma referencia a um procedimento existente na internacao;
	* O procedimento da guia de HI ira receber a referencia do procedimento que ele representa na internacao;
	* Nao havendo a guia de internacao e existindo mais de uma guia de HI e definido que a menor guia de HI sera considerada a referencia ate o momento em que a guia de internacao seja lanca no sistema. */
	
-- Busca qual o procedimento de internacao a guia de honorario se refere	
select	min(sequencia)
into STRICT	nr_seq_proc_ref_w
from	(
	SELECT	min(a.nr_sequencia) sequencia
	from	pls_conta_proc_v	a
	where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
	and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
	and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
	and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento
	and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
	and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
	and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
	and	a.ie_glosa		= 'N'
	and	a.ie_tipo_guia		= '5' -- Guia de Resumo de Internacao	
	and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
	and	not exists (	SELECT	1
				from	pls_conta_proc_v x
				where	a.nr_sequencia = x.nr_seq_proc_ref
				and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
	
union all

	select	min(a.nr_sequencia) sequencia
	from	pls_conta_proc_v	a
	where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia
	and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
	and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
	and	a.cd_procedimento	= dados_conta_proc_p.cd_procedimento
	and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
	and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
	and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
	and	a.ie_glosa		= 'N'
	and	a.ie_tipo_guia		= '5' -- Guia de Resumo de Internacao	
	and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
	and	not exists (	select	1
				from	pls_conta_proc_v x
				where	a.nr_sequencia = x.nr_seq_proc_ref
				and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
	);
	
-- Se nao existir um procedimento de internacao, busca uma outra guia de honarario individual para ser a referencia	
if (coalesce(nr_seq_proc_ref_w::text, '') = '') then
	select	min(sequencia)
	into STRICT	nr_seq_proc_ref_w
	from	(
		SELECT	min(a.nr_sequencia) sequencia
		from	pls_conta_proc_v	a
		where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia	
		and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
		and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
		and	a.cd_procedimento	= dados_conta_proc_P.cd_procedimento
		and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
		and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
		and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
		and	a.nr_seq_analise	= dados_conta_proc_p.nr_seq_analise
		and	a.ie_glosa		= 'N'
		and	a.ie_tipo_guia		= '6' -- Guia de Honorario Individual
		and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
		and	coalesce(a.nr_seq_proc_ref::text, '') = ''
		and	not exists (	SELECT	1
					from	pls_conta_proc_v x
					where	a.nr_sequencia = x.nr_seq_proc_ref
					and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
		
union all

		select	min(a.nr_sequencia) sequencia
		from	pls_conta_proc_v	a
		where	a.cd_guia_referencia	= dados_conta_proc_p.cd_guia_referencia	
		and	a.nr_seq_segurado	= dados_conta_proc_p.nr_seq_segurado
		and	a.ie_origem_proced	= dados_conta_proc_p.ie_origem_proced
		and	a.cd_procedimento	= dados_conta_proc_P.cd_procedimento
		and	a.nr_seq_conta		!= dados_conta_proc_p.nr_seq_conta
		and	a.dt_procedimento_trunc = dados_conta_proc_p.dt_procedimento_trunc
		and	a.hr_inicio_proc	= dados_conta_proc_p.hr_inicio_proc
		and	coalesce(dados_conta_proc_p.nr_seq_analise::text, '') = ''
		and	a.ie_glosa		= 'N'
		and	a.ie_tipo_guia		= '6' -- Guia de Honorario Individual
		and	a.ie_status		not in ('D','M') -- 'D' = cancelado / 'M' = Faturamento manual
		and	coalesce(a.nr_seq_proc_ref::text, '') = '' 
		and	not exists (	select	1
					from	pls_conta_proc_v x
					where	a.nr_sequencia = x.nr_seq_proc_ref
					and	x.nr_seq_conta = dados_conta_proc_p.nr_seq_conta)
		);
end if;

if (nr_seq_proc_ref_w IS NOT NULL AND nr_seq_proc_ref_w::text <> '') then

	select	min(nr_seq_conta)
	into STRICT	nr_seq_conta_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_proc_ref_w;

	-- Cursor de procedimentos
	for r_C01 in current_setting('pls_regra_via_acesso_pck.c_dados_proc_conta')::CURSOR((	dados_conta_proc_p.cd_guia_referencia,
						dados_conta_proc_p.nr_seq_segurado,
						dados_conta_proc_p.cd_procedimento,
						dados_conta_proc_p.ie_origem_proced,
						dados_conta_proc_p.dt_procedimento_trunc,
						dados_conta_proc_p.hr_inicio_proc,
						dados_conta_proc_p.nr_seq_analise) loop
		begin			
		nr_seq_proc_ref_final_w := null;
		
		if (nr_seq_conta_w	<> r_C01.nr_seq_conta) then			
			nr_seq_proc_ref_final_w := nr_seq_proc_ref_w;
			
			if (nr_seq_proc_ref_w = r_C01.nr_seq_conta_proc) then
				nr_seq_proc_ref_final_w	:= null;
			end if;		
		end if;	
		
		nr_seq_conta_proc_table_p(i_p) 	:= r_C01.nr_seq_conta_proc;
		nr_seq_proc_ref_table_p(i_p)	:= nr_seq_proc_ref_final_w;

		i_p := i_p + 1;
		end;
	end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_regra_via_acesso_pck.pls_obtem_proc_ref_hi ( dados_conta_proc_p pls_regra_via_acesso_pck.c_dados_proc_ref, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, i_p INOUT integer, nr_seq_conta_proc_table_p INOUT dbms_sql.number_table, nr_seq_proc_ref_table_p INOUT dbms_sql.number_table) FROM PUBLIC;
