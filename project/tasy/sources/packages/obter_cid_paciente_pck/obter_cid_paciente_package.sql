-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION obter_cid_paciente_pck.obter_cid_paciente ( nr_atendimento_p atestado_paciente.nr_atendimento%TYPE ) RETURNS SETOF OBTER_CID_PACIENTE_T AS $body$
DECLARE

obter_cid_paciente_w         obter_cid_paciente_type;
cd_doenca_atual_w            DIAGNOSTICO_DOENCA.CD_DOENCA%type;
dt_diagnostico_atual_w       DIAGNOSTICO_DOENCA.DT_DIAGNOSTICO%type;
cd_doenca_old_w              DIAGNOSTICO_DOENCA.CD_DOENCA%type;
dt_atestado_old_w            ATESTADO_PACIENTE.DT_ATESTADO%type;
dt_fim_old_w                 ATESTADO_PACIENTE.DT_FIM%type;
dias_acumulados_old_w        ATESTADO_PACIENTE.QT_DIAS_ACUMULADOS%type;
nr_seq_atual_w               DIAGNOSTICO_DOENCA.NR_SEQ_INTERNO%type;
param_w                      varchar(3);


BEGIN

<<ULTIMA_SEQ_ATUAL>>
SELECT  MAX(a.NR_SEQ_INTERNO)
INTO STRICT    nr_seq_atual_w
FROM    DIAGNOSTICO_DOENCA a
WHERE   a.IE_CLASSIFICACAO_DOENCA   = 'P'
AND     a.IE_SITUACAO               = 'A'
AND     (a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
AND     a.NR_ATENDIMENTO            = nr_atendimento_p;

<<DIAS_PARAMETRO>>
obter_param_usuario(281,1684, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, param_w);

<<CID_ATUAL>>
SELECT  MAX(a.CD_DOENCA),MAX(a.DT_DIAGNOSTICO)
INTO STRICT    cd_doenca_atual_w,dt_diagnostico_atual_w
FROM    DIAGNOSTICO_DOENCA a
WHERE   a.IE_CLASSIFICACAO_DOENCA   = 'P'
AND     a.IE_SITUACAO               = 'A'
AND     (a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
AND     a.NR_ATENDIMENTO            = nr_atendimento_p
AND     a.NR_SEQ_INTERNO            = nr_seq_atual_w;

<<CID_ANTERIOR>>
SELECT  MAX(a.CD_DOENCA),MAX(b.DT_ATESTADO),MAX(b.DT_FIM),MAX(QT_DIAS_ACUMULADOS)
INTO STRICT    cd_doenca_old_w,dt_atestado_old_w,dt_fim_old_w,dias_acumulados_old_w
FROM    CID_ATESTADO_PACIENTE a,
        ATESTADO_PACIENTE b
WHERE   a.NR_SEQ_ATESTADO_PACIENTE  = b.NR_SEQUENCIA
AND     b.IE_AFASTAMENTO            = 'S'
AND     b.IE_SITUACAO               = 'A'
AND     (b.DT_LIBERACAO IS NOT NULL AND b.DT_LIBERACAO::text <> '')
AND     b.CD_PESSOA_FISICA          = to_char(obter_pf_atendimento(nr_atendimento_p,'C'))
AND     a.CD_DOENCA                 = cd_doenca_atual_w
AND     dt_diagnostico_atual_w      >= trunc(b.DT_ATESTADO)
AND     dt_diagnostico_atual_w      <= trunc(b.DT_FIM)+1+param_w;

obter_cid_paciente_w.cd_doenca_old        := cd_doenca_old_w;
obter_cid_paciente_w.dt_atestado_old      := dt_atestado_old_w;
obter_cid_paciente_w.dt_fim_old           := dt_fim_old_w;
obter_cid_paciente_w.cd_doenca_atual      := cd_doenca_atual_w;
obter_cid_paciente_w.dt_diagnostico_atual := dt_diagnostico_atual_w;
obter_cid_paciente_w.dias_acumulados_old  := dias_acumulados_old_w;
obter_cid_paciente_w.param_old            := param_w;

RETURN NEXT  obter_cid_paciente_w;
RETURN;
EXCEPTION
	WHEN no_data_found THEN
		RAISE EXCEPTION '%', sqlerrm USING ERRCODE = '45001';
	WHEN OTHERS THEN
		RAISE EXCEPTION '%', sqlerrm USING ERRCODE = '45002';
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION obter_cid_paciente_pck.obter_cid_paciente ( nr_atendimento_p atestado_paciente.nr_atendimento%TYPE ) FROM PUBLIC;
