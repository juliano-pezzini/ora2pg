-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_itens_conta_pck.gerar_conta_pos_estab (nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
sql_pos_w			varchar(32000);
valor_bind_w			sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;
qt_excecao_pos_w		integer;
qt_excecao_pos_rateio_w		integer;
tb_nr_seq_conta_pos_mat_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_pos_proc_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_ie_preco_plano_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_tipo_protocolo_w		pls_util_cta_pck.t_varchar2_table_5;
tb_dt_competencia_mens_w	pls_util_cta_pck.t_date_table;
tb_vl_beneficiario_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_w			pls_util_cta_pck.t_varchar2_table_5;
tb_vl_baixa_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_proc_rec_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_mat_rec_w		pls_util_cta_pck.t_number_table;

ie_pos_estab_faturamento_w	pls_parametros.ie_pos_estab_faturamento%type;
ie_forma_cobr_pos_estab_w	varchar(255);
ie_preco_plano_w		pls_plano.ie_preco%type;
qt_beneficiarios_w		integer;
vl_mensalidade_seg_w		pls_conta_pos_estabelecido.vl_beneficiario%type;
vl_rateio_w			pls_conta_pos_estabelecido.vl_beneficiario%type;
nr_seq_conta_ant_w		pls_conta.nr_sequencia%type;
vl_saldo_pos_estab_w		double precision;
ie_gerar_pos_estab_zerado_w	varchar(1);
indice_regra_limit_pos_estab_w	bigint;
regra_limite_pos_estab_w	pls_mens_itens_limite_pck.regra_limite_item;
ie_gerar_taxa_w			varchar(1);
vl_ato_cooperado_w		double precision;
vl_ato_auxiliar_w		double precision;
vl_ato_nao_cooperado_w		double precision;
ds_observacao_item_pos_estab_w	pls_mensalidade_item_conta.ds_observacao%type;
vl_saldo_restante_pos_estab_w	pls_conta_pos_estabelecido.vl_beneficiario%type;

C02 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type,
		dt_referencia_pc	pls_mensalidade_segurado.dt_mesano_referencia%type)FOR
	SELECT	nr_sequencia nr_seq_mens_seg_rateio
	from	pls_mensalidade_segurado
	where	nr_seq_mensalidade	= nr_seq_mensalidade_pc
	and	dt_mesano_referencia	= dt_referencia_pc;

C03 CURSOR(	nr_seq_conta_proc_pc	pls_conta_pos_proc.nr_sequencia%type) FOR
	SELECT	vl_taxa_manutencao,
		CASE WHEN ie_tipo_taxa='1' THEN  '10' WHEN ie_tipo_taxa='2' THEN  '9'  ELSE null END  ie_tipo_item
	from	pls_conta_pos_proc_tx
	where	nr_seq_conta_pos_proc = nr_seq_conta_proc_pc
	order by
		ie_tipo_taxa;
		
C04 CURSOR(	nr_seq_conta_mat_pc	pls_conta_pos_mat.nr_sequencia%type) FOR
	SELECT	vl_taxa_manutencao,
		CASE WHEN ie_tipo_taxa='1' THEN  '10' WHEN ie_tipo_taxa='2' THEN  '9'  ELSE null END  ie_tipo_item
	from	pls_conta_pos_mat_tx
	where	nr_seq_conta_mat_pos = nr_seq_conta_mat_pc
	order by
		ie_tipo_taxa;

BEGIN

qt_excecao_pos_w		:= 0;
qt_excecao_pos_rateio_w		:= 0;
nr_seq_conta_ant_w		:= 0;

if (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
	select	count(1)
	into STRICT	qt_excecao_pos_w
	from	pls_susp_cobr_mens_excecao a,
		pls_motivo_susp_cobr_mens b
	where	a.nr_seq_motivo = b.nr_sequencia
	and	a.nr_seq_motivo = current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%type
	and	a.ie_tipo_item  = '6'
	and	b.ie_situacao   = 'A';
	
	select	count(1)
	into STRICT	qt_excecao_pos_rateio_w
	from	pls_susp_cobr_mens_excecao a,
		pls_motivo_susp_cobr_mens b
	where	a.nr_seq_motivo = b.nr_sequencia
	and	a.nr_seq_motivo = current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%type
	and	a.ie_tipo_item  = '7'
	and	b.ie_situacao   = 'A';
end if;

ie_pos_estab_faturamento_w	:= pls_mensalidade_util_pck.get_ie_pos_estab_faturamento;

if (ie_pos_estab_faturamento_w = 'R') then
	ie_forma_cobr_pos_estab_w	:= pls_obter_forma_cobr_pos_estab(current_setting('pls_mens_itens_conta_pck.cd_estabelecimento_w')::estabelecimento.cd_estabelecimento%type,current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.ie_tipo_segurado);
	--Se o resultado da regra para o tipo de beneficiario for F (Faturamento), e alterada a variavel de geracao do pos-estabelecido para "N" (Nao gerar na mensalidade)

	if (ie_forma_cobr_pos_estab_w = 'F') then
		ie_pos_estab_faturamento_w	:= 'S';
	else
		ie_pos_estab_faturamento_w	:= 'N';
	end if;
end if;

sql_pos_w :=	'select	null nr_seq_conta_mat,							' ||
		'	b.nr_sequencia nr_seq_conta_proc,					' ||
		'	b.nr_seq_conta,								' ||
		'	a.nr_seq_protocolo,							' ||
		'	a.ie_preco,								' ||
		'	a.ie_tipo_protocolo,							' ||
		'	b.nr_seq_proc_rec,							' ||
		'	null nr_seq_mat_rec,							' ||
		'	b.dt_competencia_mens,							' ||
		'	nvl(b.vl_medico, 0) + nvl(b.vl_materiais, 0) + 				' ||
		'	nvl(b.vl_custo_operacional, 0) + nvl(b.vl_lib_taxa_co, 0) +		' ||
		'	nvl(b.vl_lib_taxa_material, 0) + nvl(b.vl_lib_taxa_servico, 0) vl_item,	' ||
		'	1 ie_tipo,								' ||
		'	(select nvl(sum(mic.vl_item), 0) 					' ||
		'	from 	pls_mensalidade_item_conta mic,					' ||
		'		pls_mensalidade_seg_item msi,					' ||
		'		pls_mensalidade_segurado ms,					' ||
		'		pls_mensalidade m						' ||
		'	where 	msi.nr_sequencia 	= mic.nr_seq_item			' ||
		'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg		' ||
		'	and	m.nr_sequencia		= ms.nr_seq_mensalidade			' ||
		'	and	mic.nr_seq_pos_proc 	= b.nr_sequencia			' ||
		'	and	m.ie_cancelamento is null) vl_baixa				' ||			
		'from	pls_conta_pos_proc	 b,						' ||
		'	pls_conta_pos_cabecalho  a						' ||
		'where	b.nr_seq_segurado	= :nr_seq_segurado_pc				' ||
		'and	b.nr_seq_pagador	= :nr_seq_pagador_pc				' ||
		'and	a.nr_sequencia		= b.nr_seq_cabecalho				' ||
		'and	b.ie_status_faturamento = ''L'' 					' ||
		'and	a.dt_mes_competencia <= fim_mes(:dt_referencia_pc)			';
SELECT * FROM pls_mens_itens_conta_pck.add_restricao_regra_grupo(sql_pos_w, valor_bind_w) INTO STRICT _ora2pg_r;
 sql_pos_w := _ora2pg_r.ds_select_p; valor_bind_w := _ora2pg_r.valor_bind_p;
sql_pos_w := sql_pos_w || 'union								' ||
		'select	b.nr_sequencia nr_seq_conta_mat,					' ||
		'	null nr_seq_conta_pos,							' ||
		'	b.nr_seq_conta,								' ||
		'	a.nr_seq_protocolo,							' ||
		'	a.ie_preco,								' ||
		'	a.ie_tipo_protocolo,							' ||
		'	null nr_seq_proc_rec,							' ||
		'	b.nr_seq_mat_rec,							' ||
		'	b.dt_competencia_mens,							' ||
		'	nvl(b.vl_materiais, 0) +  nvl(b.vl_lib_taxa_material, 0) vl_item,	' ||
		'	2 ie_tipo,								' ||
		'	(select nvl(sum(mic.vl_item), 0) 					' ||
		'	from 	pls_mensalidade_item_conta mic,					' ||
		'		pls_mensalidade_seg_item msi,					' ||
		'		pls_mensalidade_segurado ms,					' ||
		'		pls_mensalidade m						' ||
		'	where 	msi.nr_sequencia 	= mic.nr_seq_item			' ||
		'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg		' ||
		'	and	m.nr_sequencia		= ms.nr_seq_mensalidade			' ||
		'	and	mic.nr_seq_pos_mat 	= b.nr_sequencia			' ||
		'	and	m.ie_cancelamento is null) vl_baixa				' ||
		'from	pls_conta_pos_mat	 b,						' ||
		'	pls_conta_pos_cabecalho  a						' ||
		'where	b.nr_seq_segurado	= :nr_seq_segurado_pc				' ||
		'and	b.nr_seq_pagador	= :nr_seq_pagador_pc				' ||
		'and	a.nr_sequencia		= b.nr_seq_cabecalho				' ||
		'and	b.ie_status_faturamento = ''L'' 					' ||
		'and	a.dt_mes_competencia <= fim_mes(:dt_referencia_pc)			';
SELECT * FROM pls_mens_itens_conta_pck.add_restricao_regra_grupo(sql_pos_w, valor_bind_w) INTO STRICT _ora2pg_r;
 sql_pos_w := _ora2pg_r.ds_select_p; valor_bind_w := _ora2pg_r.valor_bind_p;

valor_bind_w := sql_pck.bind_variable(':nr_seq_segurado_pc', current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':nr_seq_pagador_pc', current_setting('pls_mens_itens_conta_pck.nr_seq_pagador_w')::pls_contrato_pagador.nr_sequencia%type, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':dt_referencia_pc', current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp, valor_bind_w);

sql_pos_w :=	sql_pos_w || ' order by nr_seq_conta '; --Precisa ordenar por conta para agrupar todos itens da mesma conta em um item de mensalidade
valor_bind_w := sql_pck.executa_sql_cursor(sql_pos_w, valor_bind_w);

loop
	fetch cursor_w bulk collect
	into	tb_nr_seq_conta_pos_mat_w, tb_nr_seq_conta_pos_proc_w, tb_nr_seq_conta_w, tb_nr_seq_protocolo_w, tb_ie_preco_plano_w,
		tb_ie_tipo_protocolo_w,	tb_nr_seq_proc_rec_w, tb_nr_seq_mat_rec_w, tb_dt_competencia_mens_w,
		tb_vl_beneficiario_w, tb_ie_tipo_w, tb_vl_baixa_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_conta_w.count = 0;
	
	for i in tb_nr_seq_conta_w.first .. tb_nr_seq_conta_w.last loop

	vl_saldo_pos_estab_w		:= tb_vl_beneficiario_w(i) - tb_vl_baixa_w(i);
	ie_gerar_pos_estab_zerado_w	:= 'N';
	ie_gerar_taxa_w			:= 'N';
	ds_observacao_item_pos_estab_w	:= null;

	if	((tb_ie_tipo_protocolo_w(i) in ('C','I')) or ((tb_ie_tipo_protocolo_w(i) = 'R') and (pls_mensalidade_util_pck.get_ie_pos_estab_reembolso = 'S')) or
		((tb_ie_tipo_protocolo_w(i) = 'F') and (pls_mensalidade_util_pck.get_ie_gerar_copartic_a700 = 'S'))) and (coalesce(tb_dt_competencia_mens_w(i)::text, '') = '' or tb_dt_competencia_mens_w(i) = current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp) and (pls_mens_itens_conta_pck.obter_se_status_liberado(tb_nr_seq_protocolo_w(i), tb_nr_seq_conta_w(i), tb_nr_seq_proc_rec_w(i), tb_nr_seq_mat_rec_w(i), 'P') = 'S') then
		ie_preco_plano_w	:= tb_ie_preco_plano_w(i);
		if (coalesce(current_setting('pls_mens_itens_conta_pck.nr_seq_intercambio_w')::pls_intercambio.nr_sequencia%type,0) <> 0) then
			if (current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.ie_tipo_repasse = 'P') then
				ie_preco_plano_w	:= '1';
			elsif (current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.ie_tipo_repasse = 'C') then
				ie_preco_plano_w	:= '3';
			end if;
		end if;

		if	(((ie_preco_plano_w in ('2','3')) and (ie_pos_estab_faturamento_w = 'N')) or
			 ((ie_preco_plano_w = '1') and --Restricao para beneficiario de preco pre rescindido
			  (pls_mensalidade_util_pck.get_ie_gerar_preco_pos_seg_pre = 'S') and (pls_mensalidade_util_pck.get_ie_pos_estab_fat_resc = 'M') and
			  ((current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%(rowtype.dt_rescisao IS NOT NULL AND rowtype.dt_rescisao::text <> '')) and (current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp >= trunc(current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.dt_rescisao,'month'))))) then

			if	((ie_preco_plano_w in ('1','3')) and --Preco pos-estabelecido por custo operacional
				(((qt_excecao_pos_w = 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%coalesce(type::text, '') = '')) or
				  ((qt_excecao_pos_w > 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> ''))))) or
				((ie_preco_plano_w = '2') and --Preco pos-estabelecido por rateio
				 (((qt_excecao_pos_rateio_w = 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%coalesce(type::text, '') = '')) or
				  ((qt_excecao_pos_rateio_w > 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> ''))))) then

				if (current_setting('pls_mens_itens_conta_pck.ie_desconsiderar_vl_limite_w')::pls_causa_rescisao.ie_desconsiderar_vl_limite%type = 'N') then
					indice_regra_limit_pos_estab_w	:= pls_mens_itens_limite_pck.obter_indice_regra_item('6',null);
				end if;
				
				if (indice_regra_limit_pos_estab_w IS NOT NULL AND indice_regra_limit_pos_estab_w::text <> '') then
					regra_limite_pos_estab_w	:= pls_mens_itens_limite_pck.obter_regra_limite(indice_regra_limit_pos_estab_w);
					
					if (regra_limite_pos_estab_w.nr_seq_regra IS NOT NULL AND regra_limite_pos_estab_w.nr_seq_regra::text <> '') then
						SELECT * FROM pls_mens_itens_conta_pck.tratar_regra_limite(	regra_limite_pos_estab_w.nr_seq_regra, null, null, null, tb_nr_seq_conta_pos_mat_w(i), tb_nr_seq_conta_pos_proc_w(i), regra_limite_pos_estab_w.vl_maximo_item, regra_limite_pos_estab_w.ie_acao, nm_usuario_p, ie_gerar_pos_estab_zerado_w, regra_limite_pos_estab_w.vl_item_gerado_mes, vl_saldo_pos_estab_w) INTO STRICT ie_gerar_pos_estab_zerado_w, regra_limite_pos_estab_w.vl_item_gerado_mes, vl_saldo_pos_estab_w;
						CALL pls_mens_itens_limite_pck.add_valor_regra(indice_regra_limit_pos_estab_w, vl_saldo_pos_estab_w);
					end if;
				end if;
				
				if	((vl_saldo_pos_estab_w > 0) or (ie_gerar_pos_estab_zerado_w = 'S')) then
					if (ie_preco_plano_w in ('1','3')) then --Preco pos-estabelecido por custo operacional
						if (nr_seq_conta_ant_w <> tb_nr_seq_conta_w(i)) then
							current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) := pls_mens_itens_pck.add_item_conta(current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type, '6', 0, tb_nr_seq_conta_w(i), tb_nr_seq_protocolo_w(i), current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular, 0, 0, 0, '', tb_ie_tipo_w(i), current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1));
							PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_item_w', pls_mens_itens_pck.obter_ultimo_indice, false);
							nr_seq_conta_ant_w	:= tb_nr_seq_conta_w(i);
						end if;

						if (current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) = 'S') then
							if	((vl_saldo_pos_estab_w + tb_vl_baixa_w(i) <> tb_vl_beneficiario_w(i)) and (regra_limite_pos_estab_w.nr_seq_regra IS NOT NULL AND regra_limite_pos_estab_w.nr_seq_regra::text <> '')) then
								vl_saldo_restante_pos_estab_w	:= tb_vl_beneficiario_w(i)-(vl_saldo_pos_estab_w + tb_vl_baixa_w(i));
								ds_observacao_item_pos_estab_w	:= pls_mens_itens_conta_pck.obter_observacao_item_conta(	regra_limite_pos_estab_w.ie_acao, regra_limite_pos_estab_w.nr_seq_regra,
																regra_limite_pos_estab_w.vl_maximo_item, vl_saldo_restante_pos_estab_w);
							end if;
						
							CALL pls_mens_itens_pck.add_detalhe_item_conta(current_setting('pls_mens_itens_conta_pck.nr_indice_item_w')::integer, null, null, null, vl_saldo_pos_estab_w,
												0, 0, 0, tb_nr_seq_conta_pos_proc_w(i), tb_nr_seq_conta_pos_mat_w(i),
												ds_observacao_item_pos_estab_w, null, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item);

							if	(((vl_saldo_pos_estab_w + tb_vl_baixa_w(i)) = tb_vl_beneficiario_w(i)) or (regra_limite_pos_estab_w.ie_acao = 1)) then
								if (tb_ie_tipo_w(i) = 1) then
									update	pls_conta_pos_proc
									set	ie_status_faturamento 	= 'F',
										dt_atualizacao		= clock_timestamp(),
										nm_usuario		= nm_usuario_p
									where	nr_sequencia		= tb_nr_seq_conta_pos_proc_w(i);
								elsif (tb_ie_tipo_w(i) = 2) then
									update	pls_conta_pos_mat
									set	ie_status_faturamento 	= 'F',
										dt_atualizacao		= clock_timestamp(),
										nm_usuario		= nm_usuario_p
									where	nr_sequencia		= tb_nr_seq_conta_pos_mat_w(i);
								end if;
								
								ie_gerar_taxa_w	:= 'S';
							end if;
						end if;
					elsif (ie_preco_plano_w = '2') then --Preco pos-estabelecido por rateio
						ie_gerar_taxa_w	:= 'S';
					
						select	count(1)
						into STRICT	qt_beneficiarios_w
						from (SELECT	nr_seq_segurado
							from	pls_mensalidade_segurado
							where	nr_seq_mensalidade	= current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_w')::pls_mensalidade.nr_sequencia%type
							group by nr_seq_segurado) alias2;
						
						vl_mensalidade_seg_w := dividir(tb_vl_beneficiario_w(i), qt_beneficiarios_w);
						
						for r_c02_w in C02(current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_w')::pls_mensalidade.nr_sequencia%type, current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp) loop
							begin
							--Tratar para a diferenca devivo ao arredondamento ser lancada para o beneficiario que originou a conta

							if (r_c02_w.nr_seq_mens_seg_rateio = current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type) then
								vl_rateio_w	:= vl_mensalidade_seg_w + (tb_vl_beneficiario_w(i) - (vl_mensalidade_seg_w * qt_beneficiarios_w));
							else
								vl_rateio_w	:= vl_mensalidade_seg_w;
							end if;
							
							PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_item_w', pls_mens_itens_pck.obter_indice_pos_estab(r_c02_w.nr_seq_mens_seg_rateio, tb_nr_seq_conta_w(i)), false);
							if (current_setting('pls_mens_itens_conta_pck.nr_indice_item_w')::integer = 0) then
								current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) := pls_mens_itens_pck.add_item_conta(r_c02_w.nr_seq_mens_seg_rateio, '7', 0, tb_nr_seq_conta_w(i), tb_nr_seq_protocolo_w(i), current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular, 0, 0, 0, '', tb_ie_tipo_w(i), current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1));
								PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_item_w', pls_mens_itens_pck.obter_indice_pos_estab(r_c02_w.nr_seq_mens_seg_rateio, tb_nr_seq_conta_w(i)), false);
							end if;
							
							CALL pls_mens_itens_pck.add_detalhe_item_conta(current_setting('pls_mens_itens_conta_pck.nr_indice_item_w')::integer, null, null, null, vl_rateio_w,
												0, 0, 0, tb_nr_seq_conta_pos_proc_w(i), tb_nr_seq_conta_pos_mat_w(i),
												null, null, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item);
							end;
						end loop;
					end if;
				else
					if (coalesce(regra_limite_pos_estab_w.nr_seq_regra::text, '') = '') then
						ie_gerar_taxa_w	:= 'S';
					end if;
				end if;
				
				if (ie_gerar_taxa_w = 'S') then
					if ((tb_nr_seq_conta_pos_proc_w(i) IS NOT NULL AND (tb_nr_seq_conta_pos_proc_w(i))::text <> '')) then
						for r_c03_w in C03(tb_nr_seq_conta_pos_proc_w(i)) loop
							begin
							current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) := pls_mens_itens_pck.add_item_conta(current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type, r_c03_w.ie_tipo_item, r_c03_w.vl_taxa_manutencao, tb_nr_seq_conta_w(i), tb_nr_seq_protocolo_w(i), current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular, 0, 0, 0, '', tb_ie_tipo_w(i), current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1));
							end;
						end loop;
					elsif ((tb_nr_seq_conta_pos_mat_w(i) IS NOT NULL AND (tb_nr_seq_conta_pos_mat_w(i))::text <> '')) then
						for r_c04_w in C04(tb_nr_seq_conta_pos_mat_w(i)) loop
							begin
							current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) := pls_mens_itens_pck.add_item_conta(current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type, r_c04_w.ie_tipo_item, r_c04_w.vl_taxa_manutencao, tb_nr_seq_conta_w(i), tb_nr_seq_protocolo_w(i), current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular, 0, 0, 0, '', tb_ie_tipo_w(i), current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1));
							end;
						end loop;
					end if;
				end if;
			end if;
		end if;
	end if;
	end loop;
end loop;
close cursor_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_itens_conta_pck.gerar_conta_pos_estab (nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
