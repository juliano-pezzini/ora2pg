-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_itens_conta_pck.gerar_itens_contas ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, dt_referencia_mens_p pls_mensalidade.dt_referencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_seq_titular%type, ie_tipo_segurado_p pls_segurado.ie_tipo_segurado%type, ie_tipo_repasse_p pls_segurado.ie_tipo_repasse%type, dt_rescisao_p pls_segurado.dt_rescisao%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, ie_tipo_estipulante_p pls_mensalidade_segurado.ie_tipo_estipulante%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, nr_seq_motivo_susp_p pls_motivo_susp_cobr_mens.nr_sequencia%type, ie_existe_mensalidade_mes_p text, ie_mensalidade_mes_anterior_p pls_lote_mensalidade.ie_mensalidade_mes_anterior%type, ie_inseriu_preco_pre_p text, dt_lote_p pls_lote_mensalidade.dt_mesano_referencia%type, ie_desconsiderar_vl_limite_p pls_causa_rescisao.ie_desconsiderar_vl_limite%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

qt_registro_w	integer;

BEGIN
PERFORM set_config('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w', nr_seq_mensalidade_seg_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.nr_seq_mensalidade_w', nr_seq_mensalidade_p, false);
current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia	:= nr_seq_segurado_p;
current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular	:= nr_seq_titular_p;
current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.ie_tipo_segurado	:= ie_tipo_segurado_p;
current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.ie_tipo_repasse	:= ie_tipo_repasse_p;
current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.dt_rescisao	:= dt_rescisao_p;
PERFORM set_config('pls_mens_itens_conta_pck.nr_seq_pagador_w', nr_seq_pagador_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.dt_referencia_w', dt_referencia_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.dt_referencia_mens_w', dt_referencia_mens_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.nr_seq_contrato_w', nr_seq_contrato_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.nr_seq_intercambio_w', nr_seq_intercambio_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w', nr_seq_motivo_susp_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.cd_estabelecimento_w', cd_estabelecimento_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.ie_inseriu_preco_pre_w', ie_inseriu_preco_pre_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.dt_lote_w', dt_lote_p, false);
PERFORM set_config('pls_mens_itens_conta_pck.ie_desconsiderar_vl_limite_w', ie_desconsiderar_vl_limite_p, false);

CALL pls_mens_itens_conta_pck.carregar_regra_grupo(nr_seq_contrato_p, nr_seq_intercambio_p);

--Coparticipacao

if (pls_mens_itens_pck.obter_se_item_grupo('3',null) = 'S')
	and
	((ie_tipo_segurado_p in ('B','A','R')) or (pls_mensalidade_util_pck.get_ie_gerar_copart_congenere = 'S' and ie_tipo_segurado_p = 'C'))
	and
	((ie_existe_mensalidade_mes_p = 'N') or (pls_mensalidade_util_pck.get_ie_gerar_coparticipacao = 'A') or (pls_mensalidade_util_pck.get_ie_gerar_coparticipacao = ie_tipo_estipulante_p))
	and
	((pls_mensalidade_util_pck.get_ie_copartic_mens_mes_ant = 'S') or (ie_mensalidade_mes_anterior_p = 'N'))then
	
	select	count(1) --Nao alterar esse select, pois possui indice especifico  PLSCOCOP_I4
	into STRICT	qt_registro_w
	
	where	exists (	SELECT	1
			from	pls_conta_coparticipacao a
			where	a.nr_seq_segurado	= current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia
			and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '');
	
	if (qt_registro_w > 0) then
		CALL CALL pls_mens_itens_conta_pck.gerar_coparticipacao(nm_usuario_p); --Coparticipacao
	end if;
end if;

--Custo operacional

if (pls_mens_itens_pck.obter_se_item_grupo('13',null) = 'S') then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_co	a
	where	a.nr_seq_segurado	= current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia
	and	a.nr_seq_pagador	= current_setting('pls_mens_itens_conta_pck.nr_seq_pagador_w')::pls_contrato_pagador.nr_sequencia%type
	and	a.ie_cobrar_mensalidade	= 'S'
	and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '';

	if (qt_registro_w > 0) then
		CALL pls_mens_itens_conta_pck.gerar_custo_operacional(nm_usuario_p); --Valores nao cobertos pelo contrato
	end if;
end if;

if (pls_mens_itens_pck.obter_se_item_grupo('6',null) = 'S') then
	if (pls_mensalidade_util_pck.get_ie_novo_pos_estab = 'N') then --Pos-estabelecido Rotina Antiga
		select	count(1)
		into STRICT	qt_registro_w
		
		where	exists (	SELECT	1
				from	pls_conta_pos_estabelecido a
				where	a.nr_seq_segurado	= current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia
				and	coalesce(a.nr_seq_mensalidade_seg::text, '') = '');
		
		if (qt_registro_w > 0) then
			CALL pls_mens_itens_conta_pck.gerar_pos_estabelecido(nm_usuario_p); --Preco pos-estabelecido por custo operacional e por rateio
		end if;
	elsif (pls_mensalidade_util_pck.get_ie_novo_pos_estab = 'S') then --Pos-estabelecido  Rotina Nova
		select	count(1)
		into STRICT	qt_registro_w
		
		where (exists (SELECT	1
				from	pls_conta_pos_proc a
				where	a.nr_seq_segurado = current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia
				and	a.ie_status_faturamento = 'L')
			or
			exists (	select	1
				from	pls_conta_pos_mat a
				where	a.nr_seq_segurado = current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia
				and	a.ie_status_faturamento = 'L'));
				
		if (qt_registro_w > 0) then
			CALL pls_mens_itens_conta_pck.gerar_conta_pos_estab(nm_usuario_p);
		end if;
	end if;
end if;

--Taxa de atendimento

if (pls_mens_itens_pck.obter_se_item_grupo('38',null) = 'S') then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_val_atend
	where	nr_seq_segurado 	= current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia
	and	coalesce(nr_seq_mensalidade_seg::text, '') = ''
	and	ie_cobrar_mensalidade	= 'S';

	if (qt_registro_w > 0) then
		CALL pls_mens_itens_conta_pck.gerar_taxa_atendimento(nm_usuario_p); --Valor de atendimento fora da area definida pela operadora
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_itens_conta_pck.gerar_itens_contas ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, dt_referencia_mens_p pls_mensalidade.dt_referencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_seq_titular%type, ie_tipo_segurado_p pls_segurado.ie_tipo_segurado%type, ie_tipo_repasse_p pls_segurado.ie_tipo_repasse%type, dt_rescisao_p pls_segurado.dt_rescisao%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, ie_tipo_estipulante_p pls_mensalidade_segurado.ie_tipo_estipulante%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_intercambio_p pls_intercambio.nr_sequencia%type, nr_seq_motivo_susp_p pls_motivo_susp_cobr_mens.nr_sequencia%type, ie_existe_mensalidade_mes_p text, ie_mensalidade_mes_anterior_p pls_lote_mensalidade.ie_mensalidade_mes_anterior%type, ie_inseriu_preco_pre_p text, dt_lote_p pls_lote_mensalidade.dt_mesano_referencia%type, ie_desconsiderar_vl_limite_p pls_causa_rescisao.ie_desconsiderar_vl_limite%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
