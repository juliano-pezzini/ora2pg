-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_itens_conta_pck.gerar_custo_operacional (nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
sql_co_w	varchar(32000);
valor_bind_w	sql_pck.t_dado_bind;
cursor_w	sql_pck.t_cursor;

tb_nr_seq_conta_co_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_dt_competencia_mens_w	pls_util_cta_pck.t_date_table;
tb_vl_beneficiario_w		pls_util_cta_pck.t_number_table;
tb_vl_baixa_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_proc_rec_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_mat_rec_w		pls_util_cta_pck.t_number_table;
tb_ie_ato_cooperado_w		pls_util_cta_pck.t_varchar2_table_5;
tb_vl_baixa_ato_coop_w		pls_util_cta_pck.t_number_table;
tb_vl_baixa_ato_nao_coop_w	pls_util_cta_pck.t_number_table;
tb_vl_baixa_ato_auxiliar_w	pls_util_cta_pck.t_number_table;


nr_seq_conta_ant_w		pls_conta.nr_sequencia%type;
qt_excecao_co_w			bigint;
vl_saldo_co_w			pls_conta_co.vl_beneficiario%type;
indice_regra_limite_co_w	bigint;
regra_limite_co_w		pls_mens_itens_limite_pck.regra_limite_item;
ie_gerar_co_zerado_w		varchar(1);
vl_ato_cooperado_w		double precision;
vl_ato_auxiliar_w		double precision;
vl_ato_nao_cooperado_w		double precision;
ie_gerou_apropriacao_co_w	varchar(1);
ie_encerrou_saldo_co_w		varchar(1);
vl_saldo_restante_co_w		pls_conta_co.vl_beneficiario%type;
ds_observacao_item_co_w		pls_mensalidade_item_conta.ds_observacao%type;

C01 CURSOR(	nr_seq_conta_co_pc		pls_conta_co.nr_sequencia%type,
		nr_seq_regra_pc			pls_regra_limite_copartic.nr_sequencia%type)FOR
	SELECT	nr_seq_centro_apropriacao,
		vl_apropriacao,
		vl_baixado,
		qt_registros_regra_apropriacao
	from	(SELECT	a.nr_seq_centro_apropriacao,
			a.vl_apropriacao,
			coalesce((	select	sum(x.vl_apropriacao)
				from	pls_mens_item_conta_aprop x,
					pls_mensalidade_item_conta y
				where	y.nr_sequencia		= x.nr_seq_mens_item_conta
				and	y.nr_seq_conta_co	= nr_seq_conta_co_pc
				and	x.nr_seq_centro_apropriacao = a.nr_seq_centro_apropriacao),0) vl_baixado,
			(select	count(1)
			from	pls_regra_limite_mens_apro x
			where	x.nr_seq_regra = nr_seq_regra_pc
			and	x.nr_seq_centro_apropriacao = a.nr_seq_centro_apropriacao) qt_registros_regra_apropriacao
		from	pls_conta_co_aprop a
		where	a.nr_seq_conta_co = nr_seq_conta_co_pc) alias6
	order by
		qt_registros_regra_apropriacao;

BEGIN
nr_seq_conta_ant_w	:= 0;
qt_excecao_co_w		:= 0;

if (current_setting('pls_mens_itens_conta_pck.ie_desconsiderar_vl_limite_w')::pls_causa_rescisao.ie_desconsiderar_vl_limite%type = 'N') then
	indice_regra_limite_co_w	:= pls_mens_itens_limite_pck.obter_indice_regra_item('13',null);
end if;

if (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
	select	count(1)
	into STRICT	qt_excecao_co_w
	from	pls_susp_cobr_mens_excecao a,
		pls_motivo_susp_cobr_mens b
	where	a.nr_seq_motivo = b.nr_sequencia
	and	a.nr_seq_motivo = current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%type
	and	a.ie_tipo_item  = '13'
	and	b.ie_situacao   = 'A';
end if;

sql_co_w :=	'select	a.nr_sequencia nr_seq_conta_co,					' ||
		'	a.nr_seq_conta,							' ||
		'	a.nr_seq_protocolo,						' ||
		'	a.dt_competencia_mens,						' ||
		'	a.nr_seq_proc_rec,						' ||
		'	a.nr_seq_mat_rec,						' ||
		'	a.vl_beneficiario,						' ||
		'	(select nvl(sum(mic.vl_item), 0) 				' ||
		'	from 	pls_mensalidade_item_conta mic,				' ||
		'		pls_mensalidade_seg_item msi,				' ||
		'		pls_mensalidade_segurado ms,				' ||
		'		pls_mensalidade m					' ||
		'	where 	msi.nr_sequencia 	= mic.nr_seq_item		' ||
		'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg	' ||
		'	and	m.nr_sequencia		= ms.nr_seq_mensalidade		' ||
		'	and	mic.nr_seq_conta_co 	= a.nr_sequencia		' ||
		'	and	m.ie_cancelamento is null) vl_baixa,			' ||
		'	(select	x.ie_ato_cooperado					' ||
		'	from	pls_conta_proc x					' ||
		'	where	x.nr_sequencia = a.nr_seq_conta_proc			' ||
		'	union								' ||
		'	select	x.ie_ato_cooperado					' ||
		'	from	pls_conta_mat x						' ||
		'	where	x.nr_sequencia = a.nr_seq_conta_mat) ie_ato_cooperado,	';
		
if (indice_regra_limite_co_w IS NOT NULL AND indice_regra_limite_co_w::text <> '') then
	sql_co_w	:= sql_co_w ||	'	(select nvl(sum(mic.vl_ato_cooperado), 0) 			' ||
					'	from 	pls_mensalidade_item_conta mic,				' ||
					'		pls_mensalidade_seg_item msi,				' ||
					'		pls_mensalidade_segurado ms,				' ||
					'		pls_mensalidade m					' ||
					'	where 	msi.nr_sequencia 	= mic.nr_seq_item		' ||
					'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg	' ||
					'	and	m.nr_sequencia		= ms.nr_seq_mensalidade		' ||
					'	and	mic.nr_seq_conta_co	= a.nr_sequencia		' ||
					'	and	m.ie_cancelamento is null) vl_baixa_ato_cooperado,	' ||
					'	(select nvl(sum(mic.vl_ato_nao_cooperado), 0) 			' ||
					'	from 	pls_mensalidade_item_conta mic,				' ||
					'		pls_mensalidade_seg_item msi,				' ||
					'		pls_mensalidade_segurado ms,				' ||
					'		pls_mensalidade m					' ||
					'	where 	msi.nr_sequencia 	= mic.nr_seq_item		' ||
					'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg	' ||
					'	and	m.nr_sequencia		= ms.nr_seq_mensalidade		' ||
					'	and	mic.nr_seq_conta_co	= a.nr_sequencia		' ||
					'	and	m.ie_cancelamento is null) vl_baixa_ato_nao_cooperado,	' ||
					'	(select nvl(sum(mic.vl_ato_auxiliar), 0) 			' ||
					'	from 	pls_mensalidade_item_conta mic,				' ||
					'		pls_mensalidade_seg_item msi,				' ||
					'		pls_mensalidade_segurado ms,				' ||
					'		pls_mensalidade m					' ||
					'	where 	msi.nr_sequencia 	= mic.nr_seq_item		' ||
					'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg	' ||
					'	and	m.nr_sequencia		= ms.nr_seq_mensalidade		' ||
					'	and	mic.nr_seq_conta_co	= a.nr_sequencia		' ||
					'	and	m.ie_cancelamento is null) vl_baixa_ato_auxiliar 	';
else
	sql_co_w	:= sql_co_w ||	' 	0 vl_baixa_ato_cooperado,					' ||
					'	0 vl_baixa_ato_nao_cooperado,					' ||
					'	0 vl_baixa_ato_auxiliar 					';
end if;
		
sql_co_w	:= sql_co_w ||		'from	pls_conta_co	a						' ||
					'where	a.nr_seq_segurado	= :nr_seq_segurado_pc			' ||
					'and	a.nr_seq_pagador	= :nr_seq_pagador_pc			' ||
					'and	a.ie_cobrar_mensalidade	= ''S''					' ||
					'and	a.nr_seq_mensalidade_seg is null				';
valor_bind_w := sql_pck.bind_variable(':nr_seq_segurado_pc', current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, valor_bind_w);
valor_bind_w := sql_pck.bind_variable(':nr_seq_pagador_pc', current_setting('pls_mens_itens_conta_pck.nr_seq_pagador_w')::pls_contrato_pagador.nr_sequencia%type, valor_bind_w);
SELECT * FROM pls_mens_itens_conta_pck.add_restricao_regra_grupo(sql_co_w, valor_bind_w) INTO STRICT _ora2pg_r;
 sql_co_w := _ora2pg_r.ds_select_p; valor_bind_w := _ora2pg_r.valor_bind_p;
sql_co_w :=	sql_co_w || ' order by a.nr_seq_conta ';

valor_bind_w := sql_pck.executa_sql_cursor(sql_co_w, valor_bind_w);

loop
	fetch cursor_w bulk collect
	into	tb_nr_seq_conta_co_w, tb_nr_seq_conta_w, tb_nr_seq_protocolo_w, tb_dt_competencia_mens_w,
		tb_nr_seq_proc_rec_w, tb_nr_seq_mat_rec_w, tb_vl_beneficiario_w, tb_vl_baixa_w,tb_ie_ato_cooperado_w,
		tb_vl_baixa_ato_coop_w, tb_vl_baixa_ato_nao_coop_w, tb_vl_baixa_ato_auxiliar_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_conta_w.count = 0;
	
	for i in tb_nr_seq_conta_w.first .. tb_nr_seq_conta_w.last loop

	ie_gerar_co_zerado_w		:= 'N';
	ie_gerou_apropriacao_co_w	:= 'N';
	ie_encerrou_saldo_co_w		:= 'N';
	PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_apropriacao_w', 0, false);
	vl_saldo_co_w			:= 0;
	ds_observacao_item_co_w		:= null;
	
	if (tb_ie_ato_cooperado_w(i) = '1') then
		vl_ato_cooperado_w		:= coalesce(tb_vl_beneficiario_w(i), 0);
		vl_ato_auxiliar_w		:= 0;
		vl_ato_nao_cooperado_w		:= 0;
	elsif (tb_ie_ato_cooperado_w(i) = '2') then
		vl_ato_cooperado_w		:= 0;
		vl_ato_auxiliar_w		:= coalesce(tb_vl_beneficiario_w(i), 0);
		vl_ato_nao_cooperado_w		:= 0;
	elsif (tb_ie_ato_cooperado_w(i) = '3') then
		vl_ato_cooperado_w		:= 0;
		vl_ato_auxiliar_w		:= 0;
		vl_ato_nao_cooperado_w		:= coalesce(tb_vl_beneficiario_w(i), 0);
	end if;
	
	current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item.delete;
	
	if	(((qt_excecao_co_w = 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%coalesce(type::text, '') = '')) or
		((qt_excecao_co_w > 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> '')))) then	
		if (pls_mens_itens_conta_pck.obter_se_status_liberado(tb_nr_seq_protocolo_w(i), tb_nr_seq_conta_w(i), tb_nr_seq_proc_rec_w(i), tb_nr_seq_mat_rec_w(i), 'O') = 'S') and (coalesce(tb_dt_competencia_mens_w(i)::text, '') = '' or tb_dt_competencia_mens_w(i) = current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp) then

			if (indice_regra_limite_co_w IS NOT NULL AND indice_regra_limite_co_w::text <> '') then
				regra_limite_co_w	:= pls_mens_itens_limite_pck.obter_regra_limite(indice_regra_limite_co_w);
			end if;

			for r_c01_w in c01(tb_nr_seq_conta_co_w(i), regra_limite_co_w.nr_seq_regra) loop
				begin
				
				PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_apropriacao_w', current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint + 1, false);
				
				current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).nr_seq_centro_apropriacao 	:= r_c01_w.nr_seq_centro_apropriacao;
				current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao		:= r_c01_w.vl_apropriacao - r_c01_w.vl_baixado;
				
				if	((r_c01_w.qt_registros_regra_apropriacao > 0) or (coalesce(regra_limite_co_w.ie_apropriacao, 'N') = 'N')) then
					current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao 	:= pls_mens_itens_limite_pck.obter_valor_regra_limite(	indice_regra_limite_co_w,
																				current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao, 
																				'S');

					SELECT * FROM pls_mens_itens_conta_pck.tratar_regra_limite(	regra_limite_co_w.nr_seq_regra, null, tb_nr_seq_conta_co_w(i), null, null, null, regra_limite_co_w.vl_maximo_item, regra_limite_co_w.ie_acao, nm_usuario_p, ie_gerar_co_zerado_w, regra_limite_co_w.vl_item_gerado_mes, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao) INTO STRICT ie_gerar_co_zerado_w, regra_limite_co_w.vl_item_gerado_mes, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao;
				end if;
				
				vl_saldo_co_w	:= vl_saldo_co_w + current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao;
				
				ie_gerou_apropriacao_co_w	:= 'S';
				
				end;
			end loop;
			
			if (ie_gerou_apropriacao_co_w = 'N') then
				vl_saldo_co_w	:= tb_vl_beneficiario_w(i) - tb_vl_baixa_w(i);
				
				if	((indice_regra_limite_co_w IS NOT NULL AND indice_regra_limite_co_w::text <> '') and (coalesce(regra_limite_co_w.ie_apropriacao,'N') = 'N')) then
					vl_saldo_co_w	:= pls_mens_itens_limite_pck.obter_valor_regra_limite(indice_regra_limite_co_w, vl_saldo_co_w, 'S');
				end if;
			end if;
			
			if	((tb_vl_baixa_w(i) + vl_saldo_co_w) = tb_vl_beneficiario_w(i)) then
					ie_encerrou_saldo_co_w	:= 'S';
			end if;
			
			if	((ie_gerar_co_zerado_w = 'N') and (tb_vl_beneficiario_w(i) <> 0)) then
				SELECT * FROM pls_mens_itens_conta_pck.tratar_valores_ato_cooperado(	tb_vl_beneficiario_w(i), vl_saldo_co_w, tb_vl_baixa_ato_coop_w(i), tb_vl_baixa_ato_nao_coop_w(i), tb_vl_baixa_ato_auxiliar_w(i), ie_encerrou_saldo_co_w, vl_ato_cooperado_w, vl_ato_nao_cooperado_w, vl_ato_auxiliar_w) INTO STRICT vl_ato_cooperado_w, vl_ato_nao_cooperado_w, vl_ato_auxiliar_w;
			else
				vl_ato_cooperado_w	:= 0;
				vl_ato_nao_cooperado_w	:= 0;
				vl_ato_auxiliar_w	:= 0;
			end if;
			
			if 	((vl_saldo_co_w <> 0) or (ie_gerar_co_zerado_w = 'S')) then
				if (nr_seq_conta_ant_w <> tb_nr_seq_conta_w(i)) then
					current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) := pls_mens_itens_pck.add_item_conta(current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type, '13', 0, tb_nr_seq_conta_w(i), tb_nr_seq_protocolo_w(i), current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular, 0, 0, 0, '', null, current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1));
					PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_item_w', pls_mens_itens_pck.obter_ultimo_indice, false);
					nr_seq_conta_ant_w	:= tb_nr_seq_conta_w(i);
				end if;
				
				if (current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) = 'S') then
					if	((vl_saldo_co_w + tb_vl_baixa_w(i) <> tb_vl_beneficiario_w(i)) and (regra_limite_co_w.nr_seq_regra IS NOT NULL AND regra_limite_co_w.nr_seq_regra::text <> '')) then
						vl_saldo_restante_co_w	:= tb_vl_beneficiario_w(i)-(vl_saldo_co_w + tb_vl_baixa_w(i));
						ds_observacao_item_co_w	:= pls_mens_itens_conta_pck.obter_observacao_item_conta(	regra_limite_co_w.ie_acao, regra_limite_co_w.nr_seq_regra,
													regra_limite_co_w.vl_maximo_item, vl_saldo_restante_co_w);
					end if;					
				
					CALL pls_mens_itens_pck.add_detalhe_item_conta(current_setting('pls_mens_itens_conta_pck.nr_indice_item_w')::integer, null, null, tb_nr_seq_conta_co_w(i), vl_saldo_co_w,
										vl_ato_cooperado_w, vl_ato_auxiliar_w, vl_ato_nao_cooperado_w, null, null,
										ds_observacao_item_co_w, null, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item);
					
					if	(((vl_saldo_co_w + tb_vl_baixa_w(i)) = tb_vl_beneficiario_w(i)) or (regra_limite_co_w.ie_acao = 1)) then
						update	pls_conta_co
						set	nr_seq_mensalidade_seg	= current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type
						where	nr_sequencia		= tb_nr_seq_conta_co_w(i);
					end if;
				end if;
			end if;
		end if;
	end if;
	current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item.delete;
	end loop;
end loop;
close cursor_w;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_itens_conta_pck.gerar_custo_operacional (nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
