-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_mens_itens_conta_pck.gerar_coparticipacao (nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
select_copartic_w		varchar(32000);
valor_bind_w			sql_pck.t_dado_bind;
cursor_w			sql_pck.t_cursor;

tb_nr_seq_conta_copartic_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_protocolo_w		pls_util_cta_pck.t_number_table;
tb_dt_mes_competencia_w		pls_util_cta_pck.t_date_table;
tb_dt_competencia_mens_w	pls_util_cta_pck.t_date_table;
tb_vl_coparticipacao_w		pls_util_cta_pck.t_number_table;
tb_vl_ato_cooperado_w		pls_util_cta_pck.t_number_table;
tb_vl_ato_auxiliar_w		pls_util_cta_pck.t_number_table;
tb_vl_ato_nao_cooperado_w	pls_util_cta_pck.t_number_table;
tb_ie_tipo_protocolo_w		pls_util_cta_pck.t_varchar2_table_5;
tb_qt_fat_invalida_w		pls_util_cta_pck.t_number_table;
tb_vl_baixa_w			pls_util_cta_pck.t_number_table;
tb_vl_baixa_ato_coop_w		pls_util_cta_pck.t_number_table;
tb_vl_baixa_ato_nao_coop_w	pls_util_cta_pck.t_number_table;
tb_vl_baixa_ato_auxiliar_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_proc_rec_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_mat_rec_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_tipo_copartic_w	pls_util_cta_pck.t_number_table;

ie_gerar_copartic_zerada_w	varchar(1);
vl_ato_cooperado_w		pls_conta_coparticipacao.vl_ato_cooperado%type;
vl_ato_auxiliar_w		pls_conta_coparticipacao.vl_ato_auxiliar%type;
vl_ato_nao_cooperado_w		pls_conta_coparticipacao.vl_ato_nao_cooperado%type;
qt_conta_w			integer;
nr_seq_mensalidade_canc_w	pls_mensalidade.nr_sequencia%type;
nr_seq_conta_ant_w		pls_conta.nr_sequencia%type;
qt_excecao_copartic_w		bigint;
ie_gerou_apropriacao_w		varchar(1);
vl_saldo_copartic_w		pls_conta_coparticipacao.vl_coparticipacao%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
ie_encerrou_saldo_item_w	varchar(1);
nr_etapa_geracao_copart_w	bigint;
ds_observacao_item_copart_w	pls_mensalidade_item_conta.ds_observacao%type;
vl_saldo_restante_copart_w	pls_conta_coparticipacao.vl_coparticipacao%type;

indice_regra_limite_w		bigint;
regra_limite_copartic_w		pls_mens_itens_limite_pck.regra_limite_item;
ie_excecao_copartic_w		varchar(1);

C01 CURSOR(	nr_seq_conta_copartic_pc	pls_conta_coparticipacao.nr_sequencia%type,
		nr_seq_regra_pc			pls_regra_limite_copartic.nr_sequencia%type,
		nr_seq_pagador_pc		pls_contrato_pagador.nr_sequencia%type)FOR
	SELECT	nr_seq_centro_apropriacao,
		vl_apropriacao,
		vl_baixado,
		qt_registros_regra_apropriacao,
		nr_seq_conta_coparticipacao
	from	(SELECT	a.nr_seq_centro_apropriacao,
			a.vl_apropriacao,
			coalesce((	select	sum(x.vl_apropriacao)
				from	pls_mens_item_conta_aprop x,
					pls_mensalidade_item_conta y
				where	y.nr_sequencia		= x.nr_seq_mens_item_conta
				and	y.nr_seq_conta_copartic = nr_seq_conta_copartic_pc
				and	x.nr_seq_centro_apropriacao = a.nr_seq_centro_apropriacao),0) vl_baixado,
			(select	count(1)
			from	pls_regra_limite_mens_apro x
			where	x.nr_seq_regra = nr_seq_regra_pc
			and	x.nr_seq_centro_apropriacao = a.nr_seq_centro_apropriacao) qt_registros_regra_apropriacao,
			a.nr_seq_conta_coparticipacao
		from	pls_conta_copartic_aprop a
		where	a.nr_seq_conta_coparticipacao = nr_seq_conta_copartic_pc
		and	a.nr_seq_pagador = nr_seq_pagador_pc) alias6
	order by
		qt_registros_regra_apropriacao;

BEGIN

/*
nr_etapa_geracao_copart_w	quando o valor for 0 vai gerar as coparticipacoes sem apropriacao
nr_etapa_geracao_copart_w	quando o valor for 1 vai gerar as coparticipacoes com apropriacao
*/

nr_etapa_geracao_copart_w	:= 0;
while(nr_etapa_geracao_copart_w < 2) loop
	begin
	nr_etapa_geracao_copart_w 	:= nr_etapa_geracao_copart_w + 1;
	qt_excecao_copartic_w		:= 0;
	nr_seq_conta_ant_w		:= 0;

	if (current_setting('pls_mens_itens_conta_pck.ie_desconsiderar_vl_limite_w')::pls_causa_rescisao.ie_desconsiderar_vl_limite%type = 'N') then
		indice_regra_limite_w	:= pls_mens_itens_limite_pck.obter_indice_regra_item('3',null);
	end if;

	if (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> '')) then
		select	count(1)
		into STRICT	qt_excecao_copartic_w
		from	pls_susp_cobr_mens_excecao a,
			pls_motivo_susp_cobr_mens b
		where	a.nr_seq_motivo = b.nr_sequencia
		and	a.nr_seq_motivo = current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%type
		and	a.ie_tipo_item  = '3'
		and	b.ie_situacao   = 'A';
	end if;

	PERFORM_copartic_w := 	'	select	a.nr_sequencia,											' ||
				'		(select	prc.nr_seq_tipo_coparticipacao								' ||
				'		from	pls_regra_coparticipacao prc								' ||
				'		where	prc.nr_sequencia = a.nr_seq_regra) nr_seq_tipo_coparticipacao,				' ||
				'		a.nr_seq_conta,											' ||
				'		a.nr_seq_protocolo,										' ||
				'		a.dt_mes_competencia,										' ||
				'		a.dt_competencia_mens,										' ||
				'		a.vl_coparticipacao,										' ||
				'		a.vl_ato_cooperado,										' ||
				'		a.vl_ato_auxiliar,										' ||
				'		a.vl_ato_nao_cooperado,										' ||
				'		a.ie_tipo_protocolo,										' ||
				'		a.nr_seq_proc_rec,										' ||
				'		a.nr_seq_mat_rec,										' ||
				'		(select	count(1)										' ||
				'		from	pls_conta		x,								' ||
				'			pls_protocolo_conta	y,								' ||
				'			ptu_fatura		z								' ||
				'		where	y.nr_sequencia		= x.nr_seq_protocolo						' ||
				'		and	z.nr_seq_protocolo	= y.nr_sequencia						' ||
				'		and	x.nr_sequencia		= a.nr_seq_conta 						' ||
				'		and	z.ie_status		in (''CA'',''EI'', ''I'', ''R'')) qt_fat_invalida,		' ||
				'		(select nvl(sum(mic.vl_item), 0) 								' ||
				'		from 	pls_mensalidade_item_conta mic,								' ||
				'			pls_mensalidade_seg_item msi,								' ||
				'			pls_mensalidade_segurado ms,								' ||
				'			pls_mensalidade m									' ||
				'		where 	msi.nr_sequencia 	= mic.nr_seq_item						' ||
				'		and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg					' ||
				'		and	m.nr_sequencia		= ms.nr_seq_mensalidade						' ||
				'		and	mic.nr_seq_conta_copartic = a.nr_sequencia						' ||
				'		and	m.ie_cancelamento is null) vl_baixa, 							';

	if (indice_regra_limite_w IS NOT NULL AND indice_regra_limite_w::text <> '') then
		PERFORM_copartic_w	:= select_copartic_w || '	(select nvl(sum(mic.vl_ato_cooperado), 0) 				' ||
								'	from 	pls_mensalidade_item_conta mic,					' ||
								'		pls_mensalidade_seg_item msi,					' ||
								'		pls_mensalidade_segurado ms,					' ||
								'		pls_mensalidade m						' ||
								'	where 	msi.nr_sequencia 	= mic.nr_seq_item			' ||
								'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg		' ||
								'	and	m.nr_sequencia		= ms.nr_seq_mensalidade			' ||
								'	and	mic.nr_seq_conta_copartic = a.nr_sequencia			' ||
								'	and	m.ie_cancelamento is null) vl_baixa_ato_cooperado,		' ||
								'	(select nvl(sum(mic.vl_ato_nao_cooperado), 0) 				' ||
								'	from 	pls_mensalidade_item_conta mic,					' ||
								'		pls_mensalidade_seg_item msi,					' ||
								'		pls_mensalidade_segurado ms,					' ||
								'		pls_mensalidade m						' ||
								'	where 	msi.nr_sequencia 	= mic.nr_seq_item			' ||
								'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg		' ||
								'	and	m.nr_sequencia		= ms.nr_seq_mensalidade			' ||
								'	and	mic.nr_seq_conta_copartic = a.nr_sequencia			' ||
								'	and	m.ie_cancelamento is null) vl_baixa_ato_nao_cooperado,		' ||
								'	(select nvl(sum(mic.vl_ato_auxiliar), 0) 				' ||
								'	from 	pls_mensalidade_item_conta mic,					' ||
								'		pls_mensalidade_seg_item msi,					' ||
								'		pls_mensalidade_segurado ms,					' ||
								'		pls_mensalidade m						' ||
								'	where 	msi.nr_sequencia 	= mic.nr_seq_item			' ||
								'	and	ms.nr_sequencia		= msi.nr_seq_mensalidade_seg		' ||
								'	and	m.nr_sequencia		= ms.nr_seq_mensalidade			' ||
								'	and	mic.nr_seq_conta_copartic = a.nr_sequencia			' ||
								'	and	m.ie_cancelamento is null) vl_baixa_ato_auxiliar 		';
	else
		PERFORM_copartic_w	:= select_copartic_w || ' 	0 vl_baixa_ato_cooperado,						' ||
								'	0 vl_baixa_ato_nao_cooperado,						' ||
								'	0 vl_baixa_ato_auxiliar 						';
	end if;

	if (nr_etapa_geracao_copart_w = 1) then
		PERFORM_copartic_w	:= select_copartic_w ||	' 	from	pls_conta_coparticipacao a						' ||
								'	where	a.nr_seq_segurado			= :nr_seq_segurado_pc		' ||
								'	and	a.nr_seq_pagador			= :nr_seq_pagador_pc		' ||
								'	and	nvl(a.ie_status_mensalidade,''L'') 	= ''L''				' ||
								'	and	nvl(a.ie_status_coparticipacao,''S'') 	= ''S''				' ||
								'	and	nvl(a.ie_gerar_mensalidade,''S'')	= ''S''				' ||
								'	and	a.dt_estorno is null							' ||
								'	and	a.nr_seq_mensalidade_seg is null 					' ||
								'	and	not exists (	select	1						' ||
								'				from	pls_conta_copartic_aprop x			' ||
								'				where	a.nr_sequencia = x.nr_seq_conta_coparticipacao)	';
	elsif (nr_etapa_geracao_copart_w = 2) then
		PERFORM_copartic_w	:= select_copartic_w ||	' 	from	pls_conta_coparticipacao a						' ||
								'	where	a.nr_seq_segurado			= :nr_seq_segurado_pc		' ||
								'	and	nvl(a.ie_status_mensalidade,''L'') 	= ''L''				' ||
								'	and	nvl(a.ie_status_coparticipacao,''S'') 	= ''S''				' ||
								'	and	nvl(a.ie_gerar_mensalidade,''S'')	= ''S''				' ||
								'	and	a.dt_estorno is null							' ||
								'	and	a.nr_seq_mensalidade_seg is null 					' ||
								'	and	exists (	select	1						' ||
								'				from	pls_conta_copartic_aprop x			' ||
								'				where	a.nr_sequencia = x.nr_seq_conta_coparticipacao	' ||
								'				and	x.nr_seq_pagador = :nr_seq_pagador_pc)		';
	end if;
	
	valor_bind_w := sql_pck.bind_variable(':nr_seq_segurado_pc', current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, valor_bind_w);
	valor_bind_w := sql_pck.bind_variable(':nr_seq_pagador_pc', current_setting('pls_mens_itens_conta_pck.nr_seq_pagador_w')::pls_contrato_pagador.nr_sequencia%type, valor_bind_w);

	SELECT * FROM pls_mens_itens_conta_pck.add_restricao_regra_grupo(select_copartic_w, valor_bind_w) INTO STRICT _ora2pg_r;
 PERFORM_copartic_w := _ora2pg_r.ds_select_p; valor_bind_w := _ora2pg_r.valor_bind_p;

	PERFORM_copartic_w	:= select_copartic_w || ' order by 	nvl(a.ie_iniciou_cobranca, 0) desc,				' ||
							'		a.nr_seq_conta 							';			

	valor_bind_w := sql_pck.executa_sql_cursor(select_copartic_w, valor_bind_w);

	loop
		fetch cursor_w bulk collect
		into	tb_nr_seq_conta_copartic_w, tb_nr_seq_tipo_copartic_w, tb_nr_seq_conta_w, tb_nr_seq_protocolo_w, tb_dt_mes_competencia_w,
			tb_dt_competencia_mens_w, tb_vl_coparticipacao_w, tb_vl_ato_cooperado_w, tb_vl_ato_auxiliar_w, tb_vl_ato_nao_cooperado_w,
			tb_ie_tipo_protocolo_w, tb_nr_seq_proc_rec_w, tb_nr_seq_mat_rec_w, tb_qt_fat_invalida_w, tb_vl_baixa_w, 
			tb_vl_baixa_ato_coop_w, tb_vl_baixa_ato_nao_coop_w, tb_vl_baixa_ato_auxiliar_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_seq_conta_w.count = 0;
		
		for i in tb_nr_seq_conta_w.first .. tb_nr_seq_conta_w.last loop

		ie_gerar_copartic_zerada_w	:= 'N';
		ie_gerou_apropriacao_w		:= 'N';
		ie_encerrou_saldo_item_w	:= 'N';
		vl_ato_cooperado_w		:= coalesce(tb_vl_ato_cooperado_w(i), 0);
		vl_ato_auxiliar_w		:= coalesce(tb_vl_ato_auxiliar_w(i), 0);
		vl_ato_nao_cooperado_w		:= coalesce(tb_vl_ato_nao_cooperado_w(i), 0);
		qt_conta_w			:= 1;
		vl_saldo_copartic_w		:= 0;
		PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_apropriacao_w', 0, false);
		ds_observacao_item_copart_w	:= null;
		ie_excecao_copartic_w		:= 'N';
		current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item.delete;

		if (pls_mensalidade_util_pck.get_ie_ref_copartic_mens = 'C') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_mensalidade_canc_w
			from	pls_mensalidade
			where	nr_seq_pagador	= current_setting('pls_mens_itens_conta_pck.nr_seq_pagador_w')::pls_contrato_pagador.nr_sequencia%type
			and	ie_cancelamento	= 'C'
			and	dt_referencia	= current_setting('pls_mens_itens_conta_pck.dt_referencia_mens_w')::timestamp;
			
			if (nr_seq_mensalidade_canc_w IS NOT NULL AND nr_seq_mensalidade_canc_w::text <> '') then
				select	count(1)
				into STRICT	qt_conta_w
				from	pls_mensalidade a,
					pls_mensalidade_segurado b,
					pls_mensalidade_seg_item c
				where	a.nr_sequencia = b.nr_seq_mensalidade
				and	b.nr_sequencia = c.nr_seq_mensalidade_seg
				and	b.dt_mesano_referencia = current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp
				and	c.nr_seq_conta = tb_nr_seq_conta_w(i);
			end if;
		end if;
		-- verifica se existe uma uma fatura invalida para gerar a coparticipacao

		if (tb_qt_fat_invalida_w(i) = 0) then
			if	(((qt_excecao_copartic_w = 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%coalesce(type::text, '') = '')) or
				((qt_excecao_copartic_w > 0) and (current_setting('pls_mens_itens_conta_pck.nr_seq_motivo_susp_w')::pls_motivo_susp_cobr_mens.nr_sequencia%(type IS NOT NULL AND type::text <> '')))) then
				if (qt_conta_w > 0) and (trunc(tb_dt_mes_competencia_w(i),'month') <= current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp) and
					(((coalesce(tb_dt_competencia_mens_w(i)::text, '') = '') and ((current_setting('pls_mens_itens_conta_pck.ie_inseriu_preco_pre_w')::varchar(1) = 'S') or (trunc(current_setting('pls_mens_itens_conta_pck.dt_lote_w')::pls_lote_mensalidade.dt_mesano_referencia%type, 'mm') = current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp))) or (tb_dt_competencia_mens_w(i) = current_setting('pls_mens_itens_conta_pck.dt_referencia_w')::timestamp)) and
					((tb_ie_tipo_protocolo_w(i) in ('C','I')) or ((tb_ie_tipo_protocolo_w(i) = 'F') and (pls_mensalidade_util_pck.get_ie_gerar_copartic_a700 = 'S'))) then
					if (pls_mens_itens_conta_pck.obter_se_status_liberado(tb_nr_seq_protocolo_w(i), tb_nr_seq_conta_w(i), tb_nr_seq_proc_rec_w(i), tb_nr_seq_mat_rec_w(i), 'C') = 'S') then
						
						if (indice_regra_limite_w IS NOT NULL AND indice_regra_limite_w::text <> '') then
							-- verificar se tem regra de excecao coparticipacao

							if ((tb_nr_seq_tipo_copartic_w(i) IS NOT NULL AND (tb_nr_seq_tipo_copartic_w(i))::text <> '')) then
								ie_excecao_copartic_w	:= pls_mens_itens_limite_pck.obter_excecao_copartic(tb_nr_seq_tipo_copartic_w(i), indice_regra_limite_w);
							end if;
							
							if (ie_excecao_copartic_w = 'N') then
								regra_limite_copartic_w	:= pls_mens_itens_limite_pck.obter_regra_limite(indice_regra_limite_w);
							end if;
						
						end if;

						for r_c01_w in c01(tb_nr_seq_conta_copartic_w(i), regra_limite_copartic_w.nr_seq_regra, current_setting('pls_mens_itens_conta_pck.nr_seq_pagador_w')::pls_contrato_pagador.nr_sequencia%type) loop
							begin
							
							PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_apropriacao_w', current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint + 1, false);
							
							current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).nr_seq_centro_apropriacao 	:= r_c01_w.nr_seq_centro_apropriacao;

							current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao		:= r_c01_w.vl_apropriacao - (r_c01_w.vl_baixado + pls_mens_itens_pck.obter_vl_copartic_aprop_vetor(	r_c01_w.nr_seq_conta_coparticipacao,
																													r_c01_w.nr_seq_centro_apropriacao));
							if	(((r_c01_w.qt_registros_regra_apropriacao > 0) or (coalesce(regra_limite_copartic_w.ie_apropriacao, 'N') = 'N')) and (ie_excecao_copartic_w = 'N')) then
								current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao 	:= pls_mens_itens_limite_pck.obter_valor_regra_limite(	indice_regra_limite_w,
																							current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao, 
																							'S');
								SELECT * FROM pls_mens_itens_conta_pck.tratar_regra_limite(	regra_limite_copartic_w.nr_seq_regra, tb_nr_seq_conta_copartic_w(i), null, null, null, null, regra_limite_copartic_w.vl_maximo_item, regra_limite_copartic_w.ie_acao, nm_usuario_p, ie_gerar_copartic_zerada_w, regra_limite_copartic_w.vl_item_gerado_mes, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao) INTO STRICT ie_gerar_copartic_zerada_w, regra_limite_copartic_w.vl_item_gerado_mes, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao;
							end if;
							
							vl_saldo_copartic_w	:= vl_saldo_copartic_w + current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item(current_setting('pls_mens_itens_conta_pck.nr_indice_apropriacao_w')::bigint).vl_apropriacao;

							ie_gerou_apropriacao_w	:= 'S';

							end;
						end loop;
						
						if (ie_gerou_apropriacao_w = 'N')  then
							vl_saldo_copartic_w	:= tb_vl_coparticipacao_w(i) - (tb_vl_baixa_w(i) + pls_mens_itens_pck.obter_valor_itens_copartic(tb_nr_seq_conta_copartic_w(i)));
							
							if	((indice_regra_limite_w IS NOT NULL AND indice_regra_limite_w::text <> '') and (coalesce(regra_limite_copartic_w.ie_apropriacao,'N') = 'N') and (ie_excecao_copartic_w = 'N') ) then
								vl_saldo_copartic_w	:= pls_mens_itens_limite_pck.obter_valor_regra_limite(indice_regra_limite_w, vl_saldo_copartic_w, 'S');
							end if;
						end if;
					
						if	((tb_vl_baixa_w(i) + vl_saldo_copartic_w) = tb_vl_coparticipacao_w(i)) then
							ie_encerrou_saldo_item_w	:= 'S';
						end if;

						if (ie_gerar_copartic_zerada_w = 'N') then
							SELECT * FROM pls_mens_itens_conta_pck.tratar_valores_ato_cooperado(	tb_vl_coparticipacao_w(i), vl_saldo_copartic_w, tb_vl_baixa_ato_coop_w(i), tb_vl_baixa_ato_nao_coop_w(i), tb_vl_baixa_ato_auxiliar_w(i), ie_encerrou_saldo_item_w, vl_ato_cooperado_w, vl_ato_nao_cooperado_w, vl_ato_auxiliar_w) INTO STRICT vl_ato_cooperado_w, vl_ato_nao_cooperado_w, vl_ato_auxiliar_w;
						else
							vl_ato_cooperado_w		:= 0;
							vl_ato_nao_cooperado_w		:= 0;
							vl_ato_auxiliar_w		:= 0;
						end if;

						if	((vl_saldo_copartic_w > 0) or (ie_gerar_copartic_zerada_w = 'S')) then
							--Tratamento para inserir um item de mensalidade para cada conta, para o primeiro item da conta e inserido o item da mensalidade, e depois so vai somando os itens no item da mensalidade

							if (nr_seq_conta_ant_w <> tb_nr_seq_conta_w(i)) then
								current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) := pls_mens_itens_pck.add_item_conta(current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type, '3', 0, tb_nr_seq_conta_w(i), tb_nr_seq_protocolo_w(i), current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_sequencia, current_setting('pls_mens_itens_conta_pck.pls_segurado_w')::pls_segurado%rowtype.nr_seq_titular, 0, 0, 0, '', null, current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1));
								PERFORM set_config('pls_mens_itens_conta_pck.nr_indice_item_w', pls_mens_itens_pck.obter_ultimo_indice, false);
								nr_seq_conta_ant_w	:= tb_nr_seq_conta_w(i);
							end if;
							
							if (current_setting('pls_mens_itens_conta_pck.ie_inseriu_item_w')::varchar(1) = 'S') then
								if	(((vl_saldo_copartic_w + tb_vl_baixa_w(i) + pls_mens_itens_pck.obter_valor_itens_copartic(tb_nr_seq_conta_copartic_w(i))) <> tb_vl_coparticipacao_w(i)) and (regra_limite_copartic_w.nr_seq_regra IS NOT NULL AND regra_limite_copartic_w.nr_seq_regra::text <> '') and (ie_excecao_copartic_w = 'N')) then
									vl_saldo_restante_copart_w	:= tb_vl_coparticipacao_w(i)-(vl_saldo_copartic_w + tb_vl_baixa_w(i) + pls_mens_itens_pck.obter_valor_itens_copartic(tb_nr_seq_conta_copartic_w(i)));
									ds_observacao_item_copart_w	:= pls_mens_itens_conta_pck.obter_observacao_item_conta(	regra_limite_copartic_w.ie_acao, regra_limite_copartic_w.nr_seq_regra,
																	regra_limite_copartic_w.vl_maximo_item, vl_saldo_restante_copart_w);
								end if;
							
								CALL pls_mens_itens_pck.add_detalhe_item_conta(current_setting('pls_mens_itens_conta_pck.nr_indice_item_w')::integer, tb_nr_seq_conta_copartic_w(i), null, null, vl_saldo_copartic_w,
													vl_ato_cooperado_w, vl_ato_auxiliar_w, vl_ato_nao_cooperado_w, null, null,
													ds_observacao_item_copart_w, ie_excecao_copartic_w, current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item);

								-- Se nao existir mais saldo ou se e para desconsiderar o saldo, gera a mensalidade

								if	((vl_saldo_copartic_w + tb_vl_baixa_w(i) = tb_vl_coparticipacao_w(i)) or (regra_limite_copartic_w.ie_acao = 1)) then
									update	pls_conta_coparticipacao
									set	nr_seq_mensalidade_seg	= current_setting('pls_mens_itens_conta_pck.nr_seq_mensalidade_seg_w')::pls_mensalidade_segurado.nr_sequencia%type,
										ie_iniciou_cobranca	= 1, -- Sim
										ie_status_mensalidade   = 'G',
										dt_atualizacao		= clock_timestamp(),
										nm_usuario		= nm_usuario_p
									where	nr_sequencia		= tb_nr_seq_conta_copartic_w(i);
								elsif (vl_saldo_copartic_w > 0) then
									update	pls_conta_coparticipacao
									set	ie_iniciou_cobranca	= 1, -- Sim
										dt_atualizacao		= clock_timestamp(),
										nm_usuario		= nm_usuario_p
									where	nr_sequencia		= tb_nr_seq_conta_copartic_w(i);
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
		
		current_setting('pls_mens_itens_conta_pck.apropriacao_item_w')::pls_mens_itens_pck.tb_apropriacao_item.delete;
		end loop;
	end loop;
	close cursor_w;
	end;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_itens_conta_pck.gerar_coparticipacao (nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
