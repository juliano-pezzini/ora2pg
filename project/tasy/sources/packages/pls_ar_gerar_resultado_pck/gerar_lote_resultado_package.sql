-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- GERAR_LOTE_RESULTADO



CREATE OR REPLACE PROCEDURE pls_ar_gerar_resultado_pck.gerar_lote_resultado ( nr_seq_lote_p pls_ar_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/*	ie_tipo_processo - 7884
		1	Gerar valor mensalidade
		2	Gerar valor contas medicas
		3	Gerar valor coparticipacao
		4	Gerar valor comissao
		5	Gerar valor ressarcimento SUS
		6	Gerar valor recurso de glosa
		7	Gerar valor faturamento
		8	Gerar valor taxa de intercambio
		9	Gerar valor reembolso
		10	Gerar despesas contabeis
		99	Gerar grupo contrato
*/


dt_inicio_w		pls_ar_lote.dt_inicio%type;
dt_fim_w		pls_ar_lote.dt_fim%type;

ie_situacao_w		pls_ar_lote.ie_situacao%type;


BEGIN
-- inicializa a geracao

CALL pls_ar_gerar_resultado_pck.inicializa_geracao(nr_seq_lote_p);

-- Limpa o log geral

CALL pls_ar_gerar_resultado_pck.grava_log_geral(nr_seq_lote_p, '', 'S');

--Marca a geracao como concluida, se na ocorrer nenhum erro

ie_situacao_w	:= 'C';

begin
	select	dt_inicio,
		dt_fim
	into STRICT	dt_inicio_w,
		dt_fim_w
	from	pls_ar_lote
	where	nr_sequencia = nr_seq_lote_p;
	
	select	coalesce(max(ie_data_conta_medica),'C'),
		coalesce(max(ie_data_coparticipacao),'M')
	into STRICT	current_setting('pls_ar_gerar_resultado_pck.ie_data_conta_medica_w')::pls_parametros_ar.ie_data_conta_medica%type,
		current_setting('pls_ar_gerar_resultado_pck.ie_data_coparticipacao_w')::pls_parametros_ar.ie_data_coparticipacao%type
	from	pls_parametros_ar
	where	cd_estabelecimento = cd_estabelecimento_p;
	
	CALL pls_ar_gerar_resultado_pck.grava_log_geral(nr_seq_lote_p, 'Limpando registros antigos...', 'S');
	CALL CALL pls_ar_gerar_resultado_pck.pls_ar_desfazer_lote_resultado(nr_seq_lote_p, nm_usuario_p, 'G');
	CALL pls_ar_gerar_resultado_pck.grava_log_geral(nr_seq_lote_p, '', 'S');
	
	CALL pls_ar_gerar_resultado_pck.limpar_progressao(nr_seq_lote_p, nm_usuario_p);
	
	-- Mensalidades

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '1', nm_usuario_p);
	CALL CALL pls_ar_gerar_resultado_pck.gerar_mensalidade(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '1', nm_usuario_p);
	
	-- Contas medicas

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '2', nm_usuario_p);
	gerar_contas_medicas(nr_seq_lote_p, dt_inicio_w, dt_fim_w, current_setting('pls_ar_gerar_resultado_pck.ie_data_conta_medica_w')::pls_parametros_ar.ie_data_conta_medica%type, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '2', nm_usuario_p);
	
	-- Coparticipacao

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '3', nm_usuario_p);
	CALL CALL pls_ar_gerar_resultado_pck.gerar_coparticipacao(nr_seq_lote_p, dt_inicio_w, dt_fim_w, current_setting('pls_ar_gerar_resultado_pck.ie_data_coparticipacao_w')::pls_parametros_ar.ie_data_coparticipacao%type, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '3', nm_usuario_p);
	
	-- Comissao

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '4', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.gerar_comissao(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '4', nm_usuario_p);
	
	-- Ressarcimento SUS

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '5', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.gerar_ressarcimento_sus(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '5', nm_usuario_p);
	
	-- Recurso de glosas

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '6', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.gerar_recurso_glosas(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.gerar_contestacao(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '6', nm_usuario_p);
	
	-- Faturamento / Taxa intercambio

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '7', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.gerar_faturamento(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '7', nm_usuario_p);
	
	--Reembolso

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '9', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.gerar_reembolso(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '9', nm_usuario_p);
	
	--Gerar valores de despesas contabeis

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '10', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.gerar_desp_contab_lote(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.rateio_despesas_contabeis(nr_seq_lote_p, dt_inicio_w, dt_fim_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '10', nm_usuario_p);
	
	-- Grupo de contrato deve ser OBRIGATORIAMENTE o ULTIMO

	CALL pls_ar_gerar_resultado_pck.iniciar_progresso(nr_seq_lote_p, '99', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.popular_grupos_contratos(nr_seq_lote_p, '', nm_usuario_p);
	CALL pls_ar_gerar_resultado_pck.finalizar_progresso(nr_seq_lote_p, '99', nm_usuario_p);
	-- Grupo de contrato deve ser OBRIGATORIAMENTE o ULTIMO

	
	CALL pls_ar_gerar_resultado_pck.grava_log_geral(nr_seq_lote_p, wheb_mensagem_pck.get_texto(1138850), 'S');
exception
	when others then
		ie_situacao_w := 'A';
		CALL pls_ar_gerar_resultado_pck.grava_log_geral(nr_seq_lote_p, wheb_mensagem_pck.get_texto(1138851)||': '||sqlerrm|| chr(13) || chr(10)||' Callstack: '||chr(13) || chr(10)||substr(dbms_utility.format_call_stack,1,1500), 'S');
end;

CALL pls_ar_gerar_resultado_pck.finalizar_geracao(nr_seq_lote_p, nm_usuario_p, ie_situacao_w);
commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ar_gerar_resultado_pck.gerar_lote_resultado ( nr_seq_lote_p pls_ar_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
