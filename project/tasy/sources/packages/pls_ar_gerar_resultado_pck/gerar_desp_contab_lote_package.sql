-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_ar_gerar_resultado_pck.gerar_desp_contab_lote ( nr_seq_lote_p pls_ar_lote.nr_sequencia%type, dt_inicio_p pls_ar_lote.dt_inicio%type, dt_fim_p pls_ar_lote.dt_fim%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE

vl_despesa_w			double precision;
nr_seq_ar_desp_contab_lote_w	pls_ar_despesa_contab_lote.nr_sequencia%type;
vl_base_mensalidade_w		pls_ar_despesa_contab_lote.vl_base_mensalidade%type;
vl_total_mensalidade_w		pls_ar_mensalidade.vl_item%type;
qt_total_benef_w		integer;

C01 CURSOR FOR
	SELECT	'1' ie_tipo_despesa, --Despesas nao assistenciais
		a.nr_sequencia nr_seq_regra,
		a.cd_conta_contabil,
		a.ie_acao_conta,
		coalesce(a.ie_tipo_rateio,'A') ie_tipo_rateio,
		(	SELECT	count(1)
			from	pls_ctb_despesa_regra x
			where	x.nr_seq_ctb_desp	= a.nr_sequencia) qt_regra
	from	pls_ctb_despesa a
	
union all

	select	'2' ie_tipo_despesa, --Encargos
		a.nr_sequencia nr_seq_regra,
		a.cd_conta_contabil,
		null ie_acao_conta,
		coalesce(a.ie_tipo_rateio,'A') ie_tipo_rateio,
		(	select	count(1)
			from	pls_ctb_imposto_res_regra x
			where	x.nr_seq_ctb_imposto	= a.nr_sequencia) qt_regra
	from	pls_ctb_imposto_resultado a
	
union all

	select	'3' ie_tipo_despesa, --Provisoes
		a.nr_sequencia nr_seq_regra,
		a.cd_conta_contabil,
		a.ie_acao_conta,
		coalesce(a.ie_tipo_rateio,'A') ie_tipo_rateio,
		(	select	count(1)
			from	pls_ctb_prov_tec_regra x
			where	x.nr_seq_ctb_prov	= a.nr_sequencia) qt_regra
	from	pls_ctb_provisoes_tecnicas a;

C02 CURSOR(	ie_tipo_despesa_pc	text,
		nr_seq_regra_pc		bigint) FOR
	SELECT	ie_tipo_segurado
	from	pls_ctb_despesa_regra
	where	nr_seq_ctb_desp		= nr_seq_regra_pc
	and	ie_tipo_despesa_pc	= '1'
	
union all

	SELECT	ie_tipo_segurado
	from	pls_ctb_imposto_res_regra
	where	nr_seq_ctb_imposto	= nr_seq_regra_pc
	and	ie_tipo_despesa_pc	= '2'
	
union all

	select	ie_tipo_segurado
	from	pls_ctb_prov_tec_regra
	where	nr_seq_ctb_prov	= nr_seq_regra_pc
	and	ie_tipo_despesa_pc	= '3';

BEGIN

for r_c01_w in C01 loop
	begin
	vl_total_mensalidade_w	:= 0;
	
	select	coalesce(sum(b.vl_debito - b.vl_credito), 0)
	into STRICT	vl_despesa_w
	from	ctb_mes_ref			c,
		ctb_balancete_v			b
	where	b.cd_conta_contabil		= r_c01_w.cd_conta_contabil
	and	b.nr_seq_mes_ref		= c.nr_sequencia
	and	b.ie_normal_encerramento	= 'E'
	and	trunc(c.dt_referencia, 'month')	= dt_inicio_p;
	
	if (r_c01_w.ie_acao_conta = 'SB') and (vl_despesa_w > 0) then
		vl_despesa_w	:= vl_despesa_w*-1;
	end if;
	
	if (r_c01_w.ie_tipo_rateio = 'P') then
		qt_total_benef_w	:= 0;
		
		if (r_c01_w.qt_regra = 0) then
			vl_base_mensalidade_w	:= pls_ar_gerar_resultado_pck.obter_total_mensalidade(nr_seq_lote_p, vl_total_mensalidade_w);
		else
			if (r_c01_w.ie_tipo_despesa = '1') then
				select	sum(a.vl_item)
				into STRICT	vl_base_mensalidade_w
				from	pls_ar_mensalidade a
				where	a.nr_seq_lote	= nr_seq_lote_p
				and	exists (	SELECT	1
						from	pls_ctb_despesa_regra x
						where	x.nr_seq_ctb_desp	= r_c01_w.nr_seq_regra
						and	a.ie_tipo_segurado	= x.ie_tipo_segurado);
			elsif (r_c01_w.ie_tipo_despesa = '2') then
				select	sum(a.vl_item)
				into STRICT	vl_base_mensalidade_w
				from	pls_ar_mensalidade a
				where	a.nr_seq_lote	= nr_seq_lote_p
				and	exists (	SELECT	1
						from	pls_ctb_imposto_res_regra x
						where	x.nr_seq_ctb_imposto	= r_c01_w.nr_seq_regra
						and	a.ie_tipo_segurado	= x.ie_tipo_segurado);
			elsif (r_c01_w.ie_tipo_despesa = '3') then
				select	sum(a.vl_item)
				into STRICT	vl_base_mensalidade_w
				from	pls_ar_mensalidade a
				where	a.nr_seq_lote	= nr_seq_lote_p
				and	exists (	SELECT	1
						from	pls_ctb_prov_tec_regra x
						where	x.nr_seq_ctb_prov	= r_c01_w.nr_seq_regra
						and	a.ie_tipo_segurado	= x.ie_tipo_segurado);
			end if;
		end if;
	else
		if (r_c01_w.qt_regra = 0) then
			select	count(1)
			into STRICT	qt_total_benef_w
			from	pls_segurado
			where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	dt_contratacao <= dt_fim_p
			and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_fim_p));
		else
			if (r_c01_w.ie_tipo_despesa = '1') then
				select	count(1)
				into STRICT	qt_total_benef_w
				from	pls_segurado a
				where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	a.dt_contratacao <= dt_fim_p
				and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_fim_p))
				and	exists (	SELECT	1
						from	pls_ctb_despesa_regra x
						where	x.nr_seq_ctb_desp	= r_c01_w.nr_seq_regra
						and	a.ie_tipo_segurado	= x.ie_tipo_segurado);
			elsif (r_c01_w.ie_tipo_despesa = '2') then
				select	count(1)
				into STRICT	qt_total_benef_w
				from	pls_segurado a
				where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	a.dt_contratacao <= dt_fim_p
				and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_fim_p))
				and	exists (	SELECT	1
						from	pls_ctb_imposto_res_regra x
						where	x.nr_seq_ctb_imposto	= r_c01_w.nr_seq_regra
						and	a.ie_tipo_segurado	= x.ie_tipo_segurado);
			elsif (r_c01_w.ie_tipo_despesa = '3') then
				select	count(1)
				into STRICT	qt_total_benef_w
				from	pls_segurado a
				where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	a.dt_contratacao <= dt_fim_p
				and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_fim_p))
				and	exists (	SELECT	1
						from	pls_ctb_prov_tec_regra x
						where	x.nr_seq_ctb_prov	= r_c01_w.nr_seq_regra
						and	a.ie_tipo_segurado	= x.ie_tipo_segurado);
			end if;
		end if;
		
		vl_base_mensalidade_w	:= 0;
	end if;
	
	
	select	nextval('pls_ar_despesa_contab_lote_seq')
	into STRICT	nr_seq_ar_desp_contab_lote_w
	;
	
	insert	into	pls_ar_despesa_contab_lote(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			ie_tipo_despesa, cd_conta_contabil, vl_despesa, vl_base_mensalidade,
			nr_seq_lote, ie_tipo_rateio, qt_beneficiarios)
	values (	nr_seq_ar_desp_contab_lote_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
			r_c01_w.ie_tipo_despesa, r_c01_w.cd_conta_contabil, vl_despesa_w, vl_base_mensalidade_w,
			nr_seq_lote_p, r_c01_w.ie_tipo_rateio, qt_total_benef_w);
	
	for r_c02_w in C02(r_c01_w.ie_tipo_despesa, r_c01_w.nr_seq_regra) loop
		begin
		insert	into	pls_ar_desp_contab_regra(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_ar_desp_contab, ie_tipo_segurado)
		values (	nextval('pls_ar_desp_contab_regra_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_ar_desp_contab_lote_w, r_c02_w.ie_tipo_segurado);
		end;
	end loop;
	end;
end loop;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ar_gerar_resultado_pck.gerar_desp_contab_lote ( nr_seq_lote_p pls_ar_lote.nr_sequencia%type, dt_inicio_p pls_ar_lote.dt_inicio%type, dt_fim_p pls_ar_lote.dt_fim%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
