-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_via_acesso_pck.pls_atualiza_tx_via_acesso ( dados_conta_p pls_via_acesso_pck.dados_conta, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: 

Rotina responsável por zerar a via de acesso  dos itens relacionados, se faz necessário este processo nos casos de atualziação pois caso o contrário 
como os itens já possuem regra de via de acesso as mesmas não serão re-validadas
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_via_acesso_regra_w	pls_parametros.ie_via_acesso_regra%type;
ie_via_acesso_inf_w	varchar(1);
ie_via_acesso_manual_w	pls_conta_proc.ie_via_acesso_manual%type;

C01 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		nr_seq_conta_proc_pc	pls_conta_proc.nr_sequencia%type) FOR
	-- feito com union por motivo de performance, antes era feito em um select só com OR e em bases grandes apresentava problemas de performance
	SELECT	hr_inicio_proc,
		dt_procedimento_trunc
	from	pls_conta_proc_v a
	where	a.nr_seq_conta = nr_seq_conta_pc
	
union

	SELECT	hr_inicio_proc,
		dt_procedimento_trunc
	from	pls_conta_proc_v a
	where	a.nr_sequencia = nr_seq_conta_proc_pc;

-- são buscados todos os procedimentos levando em consideração a guia de referencia e os que foram executados na mesma hora e minuto
-- isso faz com que não seja buscado todo o atendimento, ou seja, altero só que tiver relacionado.
-- Existia aqui um union para buscar pelo cd_guia e cd_guia_referencia. Foi criado um novo campo que fica com o nvl(referencia, guia)
-- tiramos o union fora pelo motivo que acreditamos que como os valores estão todos dentro de um campo, ficará tudo legal. Décio 25/09/2013
C02 CURSOR( 	cd_guia_referencia_pc		pls_conta.cd_guia_referencia%type,
		nr_seq_segurado_pc		pls_conta.nr_seq_segurado%type,
		dt_procedimento_pc		pls_conta_proc_v.dt_procedimento_trunc%type,
		hr_inicio_proc_pc		pls_conta_proc_v.hr_inicio_proc%type)FOR
	SELECT	a.nr_sequencia,
		a.ie_via_acesso,
		a.ie_via_acesso_imp,
		a.nr_seq_regra_via_acesso,
		a.ie_via_acesso_manual
	from	pls_conta_proc_v	a
	where	a.cd_guia_referencia	= cd_guia_referencia_pc
	and	a.nr_seq_segurado	= nr_seq_segurado_pc
	and	a.hr_inicio_proc	= hr_inicio_proc_pc
	and	a.dt_procedimento_trunc	= dt_procedimento_pc
	and	a.ie_status_conta	not in ('F','C', 'Z');
	
BEGIN

select	ie_via_acesso_regra
into STRICT	ie_via_acesso_regra_w
from	table(pls_parametros_pck.f_retorna_param(cd_estabelecimento_p));

-- busca todos os procedimentos
for r_C01_w in C01(dados_conta_p.nr_seq_conta, nr_seq_conta_proc_p) loop

	for r_C02_w in C02(	dados_conta_p.cd_guia_referencia,
				dados_conta_p.nr_seq_segurado,
				r_C01_w.dt_procedimento_trunc,
				r_C01_w.hr_inicio_proc) loop
		begin
		ie_via_acesso_inf_w	:= 'S';
		
		-- conta de importação de arquivo XML
		if (dados_conta_p.ie_origem_conta = 'E') and (ie_via_acesso_regra_w = 'S') then
			-- se a via de acesso não foi informada manualmente
			-- o campo imp na importação do XML, se o parametro estiver como N é colocado para o campo quente
			if (coalesce(r_C02_w.ie_via_acesso,'X') = coalesce(r_C02_w.ie_via_acesso_imp,'X')) and (not r_c02_w.ie_via_acesso_manual = 'S')then
				-- seta para limpar via de acesso
				ie_via_acesso_inf_w	:= 'N';
			end if;
		end if;
		
		if (ie_via_acesso_inf_w = 'N') or (r_C02_w.nr_seq_regra_via_acesso IS NOT NULL AND r_C02_w.nr_seq_regra_via_acesso::text <> '')then
			update	pls_conta_proc
			set	ie_via_acesso		 = NULL,
				nr_seq_regra_via_acesso	 = NULL,
				tx_item			= 100,
				nr_seq_proc_ref		 = NULL
			where	nr_sequencia		= r_C02_w.nr_sequencia;
		end if;
		
		end;
	end loop;
end loop;	

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_via_acesso_pck.pls_atualiza_tx_via_acesso ( dados_conta_p pls_via_acesso_pck.dados_conta, nr_seq_conta_proc_p pls_conta_proc.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
