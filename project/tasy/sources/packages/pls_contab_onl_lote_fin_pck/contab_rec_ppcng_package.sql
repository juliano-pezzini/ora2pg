-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE t_valores_ppcng AS (vl_movimento t_vl_movimento);
CREATE TYPE t_contas_contabeis_ppcng AS (cd_conta_contabil t_conta_contabil);


CREATE OR REPLACE PROCEDURE pls_contab_onl_lote_fin_pck.contab_rec_ppcng ( doc_p INOUT ctb_documento, nm_usuario_p text) AS $body$
DECLARE


	type t_vl_movimento is table of pls_mensalidade_seg_item.vl_item%type index by integer;
	vet_valores_ppcng_w		t_valores_ppcng;

	type t_conta_contabil is table of pls_conta.cd_conta_cred%type index by integer;
	vet_contas_contabeis_ppcng_w	t_contas_contabeis_ppcng;

	dados_contab_w				dados_contab;
	vet_contas_contabeis_w			vet_contas_contabeis;
	nr_titulo_w				titulo_receber.nr_titulo%type;
	nr_seq_mensalidade_w			pls_mensalidade.nr_sequencia%type;
	cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
	cd_cgc_w				pessoa_juridica.cd_cgc%type;
	nr_seq_nota_fiscal_w			nota_fiscal.nr_sequencia%type;
	nr_nota_fiscal_w			nota_fiscal.nr_nota_fiscal%type;
	nm_pagador_w				pessoa_juridica.ds_razao_social%type;
	nr_seq_pagador_w			pls_contrato_pagador.nr_sequencia%type;
	ds_classif_sca_w			pls_sca_classificacao.ds_classificacao%type;
	nr_seq_vinculo_sca_w			pls_mensalidade_seg_item.nr_seq_vinculo_sca%type;
	ds_grupo_w				pls_contab_mov_mens_lote.ds_grupo%type;
	nr_seq_esquema_w			pls_esquema_contabil.nr_sequencia%type;
	nr_nfe_imp_w				nota_fiscal.nr_nfe_imp%type;
	cd_cgc_pagador_w			pls_contrato.cd_cgc_estipulante%type;
	cd_pf_pagador_w				pls_contrato.cd_pf_estipulante%type;
	nr_seq_contrato_w			pls_contrato.nr_sequencia%type;
	nr_seq_regra_deb_w			pls_mensalidade_seg_item.nr_seq_regra_ctb_mensal_deb%type;
	nr_seq_regra_cred_w			pls_mensalidade_seg_item.nr_seq_regra_ctb_mensal%type;
	ie_tipo_item_w				pls_mensalidade_seg_item.ie_tipo_item%type;
	ie_cancelamento_w			pls_mensalidade.ie_cancelamento%type;
	nr_seq_item_cancel_w			pls_mensalidade_seg_item.nr_sequencia%type;
	cd_centro_custo_w			centro_custo.cd_centro_custo%type;
	cd_centro_custo_ww			centro_custo.cd_centro_custo%type;
	nr_protocolo_w				pls_protocolo_conta.nr_sequencia%type;
	nr_seq_conta_w				pls_conta.nr_sequencia%type;
	nm_segurado_w				pessoa_fisica.nm_pessoa_fisica%type;
	nr_seq_lote_mensalidade_w		pls_lote_mensalidade.nr_sequencia%type;
	nr_seq_tipo_lanc_w			pls_mensalidade_seg_item.nr_seq_tipo_lanc%type;
	nr_seq_copartic_w			pls_conta_coparticipacao.nr_sequencia%type;
	ie_mensalidade_mes_anterior_w		pls_lote_mensalidade.ie_mensalidade_mes_anterior%type;
	cd_conta_debito_w			conta_contabil.cd_conta_contabil%type;
	cd_historico_deb_w			historico_padrao.cd_historico%type;
	cd_conta_credito_w			conta_contabil.cd_conta_contabil%type;
	cd_historico_cred_w			historico_padrao.cd_historico%type;
	cd_historico_estorno_w			historico_padrao.cd_historico%type;
	cd_conta_ato_cooperado_w		conta_contabil.cd_conta_contabil%type;
	cd_conta_ato_auxiliar_w			conta_contabil.cd_conta_contabil%type;
	cd_conta_ato_nao_coop_w			conta_contabil.cd_conta_contabil%type;
	vl_ato_cooperado_w			pls_mensalidade_seg_item.vl_ato_cooperado%type;
	vl_ato_auxiliar_w			pls_mensalidade_seg_item.vl_ato_auxiliar%type;
	vl_ato_nao_cooperado_w			pls_mensalidade_seg_item.vl_ato_nao_cooperado%type;
	vl_ato_cooperado_pro_rata_w		pls_mensalidade_seg_item.vl_ato_cooperado_pro_rata%type;
	vl_ato_auxiliar_pro_rata_w		pls_mensalidade_seg_item.vl_ato_auxiliar_pro_rata%type;
	vl_ato_nao_coop_pro_rata_w		pls_mensalidade_seg_item.vl_ato_nao_coop_pro_rata%type;
	vl_titulo_w				titulo_receber.vl_titulo%type;
	nr_seq_agrupamento_w			pls_lote_mensalidade.nr_sequencia%type;
	cd_conta_contabil_aux_w			conta_contabil.cd_conta_contabil%type;
	cd_historico_aux_w			historico_padrao.cd_historico%type;
	nr_seq_regra_aux_w			pls_mensalidade_seg_item.nr_seq_regra_ctb_mensal%type;
	vl_pro_rata_dia_w			pls_mensalidade_seg_item.vl_pro_rata_dia%type;
	vl_antecipacao_w			pls_mensalidade_seg_item.vl_antecipacao%type;
	nr_lote_contabil_w			lote_contabil.nr_lote_contabil%type;
	nr_seq_mensalidade_seg_item_w		pls_mensalidade_seg_item.nr_sequencia%type;
	dt_referencia_lote_w			timestamp;
	dt_liquidacao_titulo_w			timestamp;
	dt_inicio_cobertura_w			timestamp;
	qt_atrib_hist_pad_w			smallint;
	qt_pro_rata_regra_w			smallint;
	ds_conteudo_deb_w			varchar(4000);
	ds_compl_historico_deb_ww		varchar(4000);	
	ds_conteudo_cred_w			varchar(4000);
	ds_conteudo_antecip_w			varchar(4000);
	ds_compl_historico_cred_ww		varchar(4000);
	ds_compl_historico_deb_w		varchar(255);
	ds_compl_historico_deb_ant_ww		varchar(255);
	ds_compl_historico_cred_ant_ww		varchar(255);
	ds_compl_historico_cred_w		varchar(255);
	nm_agrupador_w				varchar(255);
	ds_item_w				varchar(255);
	ie_tipo_valor_w				varchar(2);
	ie_somente_inverte_estorno_w		varchar(1);
	ie_inconsistencia_w			varchar(1);
	ie_ato_cooperado_w			varchar(1);
	ie_centro_custo_w			varchar(1);
	ie_entrou_cursor_w			varchar(1);

	/* Cursor especifico para abrir a coparticipacao e pos-estabelecido pelas tabelas PLS_CONTA_COPARTICIPACAO, PLS_CONTA_POS_ESTABELECIDO
	e PLS_MENSALIDADE_ITEM_CONTA. e aberto apos o select "normal" de contabilizacao.
	Existe um union que traz os valores ja salvos nas variaveis, para que a contabilizacao seja executada normalmente caso o atributo
	do doc_p nao seja VL_COPARTICIPACAO, VL_POS_ESTABELECIDO ou VL_CONTA_CO.*/
	c_tipo_movimento CURSOR FOR
		SELECT	CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_item,0) * -1  ELSE coalesce(j.vl_item,0) END  vl_item,
			CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_ato_cooperado,0) * -1  ELSE coalesce(j.vl_ato_cooperado,0) END  vl_ato_cooperado,
			CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_ato_auxiliar,0) * -1  ELSE coalesce(j.vl_ato_auxiliar,0) END  vl_ato_auxiliar,
			CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_ato_nao_cooperado,0) * -1  ELSE coalesce(j.vl_ato_nao_cooperado,0) END  vl_ato_nao_cooperado,
			cd_conta_debito_w,
			cd_conta_credito_w,
			cd_historico_cred_w,
			nr_seq_regra_deb_w,
			nr_seq_regra_cred_w,
			nr_seq_copartic_w,
			cd_centro_custo_ww,
			nr_seq_esquema_w
		from	pls_mensalidade_item_conta	j,
			pls_mensalidade_seg_item	a,
			pls_mensalidade_segurado	b,
			pls_segurado			c,
			pls_mensalidade			d,
			pls_lote_mensalidade		f,
			pls_plano			g
		where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
		and	c.nr_sequencia		= b.nr_seq_segurado
		and	d.nr_sequencia		= b.nr_seq_mensalidade
		and	g.nr_sequencia		= b.nr_seq_plano
		and	f.nr_sequencia		= d.nr_seq_lote
		and	a.nr_sequencia		= j.nr_seq_item
		and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
		and	doc_p.nm_atributo 	= 'VL_CONTA_CO'
		and	doc_p.nr_documento	= f.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= d.nr_sequencia
		and	doc_p.nr_doc_analitico 	= j.nr_sequencia
		
union all

		SELECT 	CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_item,0) * -1  ELSE coalesce(j.vl_item,0) END  vl_item,
			0 vl_ato_cooperado,
			0 vl_ato_auxiliar,
			0 vl_ato_nao_cooperado,
			coalesce(c.cd_conta_contabil_ppcng, f.cd_conta_cred) cd_conta_debito,
			f.cd_conta_cred cd_conta_credito,
			f.cd_historico cd_historico_cred,
			f.nr_seq_regra_ctb_deb nr_seq_regra_deb,
			f.nr_seq_regra_ctb_cred nr_seq_regra_cred,
			f.nr_sequencia nr_seq_copartic,
			f.cd_centro_custo cd_centro_custo,
			f.nr_seq_esquema nr_seq_esquema
		from	pls_mensalidade_item_conta	j,
			pls_lote_mensalidade		i,
			pls_mensalidade			a,
			pls_mensalidade_segurado	b,
			pls_mensalidade_seg_item	c,
			pls_conta			d,
			pls_conta_coparticipacao	f,
			pls_segurado			g,
			pls_plano			h,
			pls_protocolo_conta		e
		where	f.nr_sequencia		= j.nr_seq_conta_copartic
		and	j.nr_seq_item		= c.nr_sequencia
		and	a.nr_sequencia		= b.nr_seq_mensalidade
		and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
		and	d.nr_sequencia		= c.nr_seq_conta
		and	d.nr_sequencia		= f.nr_seq_conta
		and	g.nr_sequencia		= b.nr_seq_segurado
		and	h.nr_sequencia		= b.nr_seq_plano
		and	i.nr_sequencia		= a.nr_seq_lote
		and	e.nr_sequencia 		= d.nr_seq_protocolo
		and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
		and	doc_p.nm_atributo 	= 'VL_COPARTICIPACAO'
		and	doc_p.nr_documento	= i.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
		and	doc_p.nr_doc_analitico 	= c.nr_sequencia
		
union all

		select 	CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_item,0) * -1  ELSE coalesce(j.vl_item,0) END  vl_item,
			0 vl_ato_cooperado,
			0 vl_ato_auxiliar,
			0 vl_ato_nao_cooperado,
			cd_conta_debito_w cd_conta_debito,
			f.cd_conta_cred cd_conta_credito,
			f.cd_historico cd_historico_cred,
			f.nr_seq_regra_ctb_deb nr_seq_regra_deb,
			f.nr_seq_regra_ctb_cred nr_seq_regra_cred,
			f.nr_sequencia nr_seq_copartic,
			f.cd_centro_custo cd_centro_custo,
			f.nr_seq_esquema nr_seq_esquema
		from	pls_mensalidade_item_conta	j,
			pls_lote_mensalidade		i,
			pls_mensalidade			a,
			pls_mensalidade_segurado	b,
			pls_mensalidade_seg_item	c,
			pls_conta			d,
			pls_conta_pos_estabelecido	f,
			pls_segurado			g,
			pls_plano			h
		where	a.nr_sequencia		= b.nr_seq_mensalidade
		and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
		and	d.nr_sequencia		= c.nr_seq_conta
		and	d.nr_sequencia		= f.nr_seq_conta
		and	g.nr_sequencia		= b.nr_seq_segurado
		and	h.nr_sequencia		= b.nr_seq_plano
		and	i.nr_sequencia		= a.nr_seq_lote
		and	f.nr_sequencia		= j.nr_seq_conta_pos_estab
		and	c.nr_sequencia		= j.nr_seq_item
		and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
		and	doc_p.nm_atributo 	= 'VL_POS_ESTABELECIDO'
		and	doc_p.nr_documento	= i.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
		and	doc_p.nr_doc_analitico 	= c.nr_sequencia
		
union all

		select	doc_p.vl_movimento,
			vl_ato_cooperado_w,
			vl_ato_auxiliar_w,
			vl_ato_nao_cooperado_w,
			cd_conta_debito_w,
			cd_conta_credito_w,
			cd_historico_cred_w,
			nr_seq_regra_deb_w,
			nr_seq_regra_cred_w,
			nr_seq_copartic_w,
			cd_centro_custo_ww,
			nr_seq_esquema_w
		
		where	doc_p.nm_atributo not in ('VL_POS_ESTABELECIDO', 'VL_COPARTICIPACAO', 'VL_CONTA_CO');

	
BEGIN
	begin
	 select	ie_tipo_valor,
	 	cd_conta_debito,
	 	cd_conta_credito,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_pro_rata_dia * -1  ELSE vl_pro_rata_dia END ,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_antecipacao * -1  ELSE vl_antecipacao END ,
		cd_historico_deb,
		cd_historico_cred,
		ds_item,
		nr_seq_regra_deb,
		nr_seq_regra_cred,
		ie_tipo_item,
		nr_seq_copartic,
		ie_cancelamento,
		cd_centro_custo,
		nr_seq_lote_mensalidade,
		nr_seq_mensalidade,
		ie_mensalidade_mes_anterior,
		cd_conta_ato_cooperado,
		cd_conta_ato_auxiliar,
		cd_conta_ato_nao_coop,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_ato_cooperado * -1  ELSE vl_ato_cooperado END ,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_ato_auxiliar * -1  ELSE vl_ato_auxiliar END ,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_ato_nao_cooperado * -1  ELSE vl_ato_nao_cooperado END ,
		nr_seq_tipo_lanc,
		nr_seq_pagador,
		nr_seq_esquema,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_ato_cooperado_pro_rata * -1  ELSE vl_ato_cooperado_pro_rata END ,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_ato_auxiliar_pro_rata * -1  ELSE vl_ato_auxiliar_pro_rata END ,
		CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  vl_ato_nao_coop_pro_rata * -1  ELSE vl_ato_nao_coop_pro_rata END ,
		dt_referencia_lote,
		nr_seq_vinculo_sca,
		dt_inicio_cobertura,
		nr_seq_item_cancel,
		nm_segurado,
		nr_seq_conta,
		nr_protocolo,
		nr_seq_contrato,
		nr_seq_mensalidade_seg_item
	 into STRICT	ie_tipo_valor_w,
	 	cd_conta_debito_w,
	 	cd_conta_credito_w,
		vl_pro_rata_dia_w,
		vl_antecipacao_w,
		cd_historico_deb_w,
		cd_historico_cred_w,
		ds_item_w,
		nr_seq_regra_deb_w,
		nr_seq_regra_cred_w,
		ie_tipo_item_w,
		nr_seq_copartic_w,
		ie_cancelamento_w,
		cd_centro_custo_ww,
		nr_seq_lote_mensalidade_w,
		nr_seq_mensalidade_w,
		ie_mensalidade_mes_anterior_w,
		cd_conta_ato_cooperado_w,
		cd_conta_ato_auxiliar_w,
		cd_conta_ato_nao_coop_w,
		vl_ato_cooperado_w,
		vl_ato_auxiliar_w,
		vl_ato_nao_cooperado_w,
		nr_seq_tipo_lanc_w,
		nr_seq_pagador_w,
		nr_seq_esquema_w,
		vl_ato_cooperado_pro_rata_w,
		vl_ato_auxiliar_pro_rata_w,
		vl_ato_nao_coop_pro_rata_w,
		dt_referencia_lote_w,
		nr_seq_vinculo_sca_w,
		dt_inicio_cobertura_w,
		nr_seq_item_cancel_w,
		nm_segurado_w,
		nr_seq_conta_w,
		nr_protocolo_w,
		nr_seq_contrato_w,
		nr_seq_mensalidade_seg_item_w
	from (	SELECT	'A' ie_tipo_valor,
				a.cd_conta_contabil_ppcng cd_conta_debito,
				a.cd_conta_rec cd_conta_credito,
				null vl_pro_rata_dia,
				coalesce(a.vl_antecipacao,0) vl_antecipacao,
				a.cd_historico_ppcng cd_historico_deb,
				a.cd_historico cd_historico_cred,
				substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
				null nr_seq_regra_deb,
				null nr_seq_regra_cred,
				a.ie_tipo_item ie_tipo_item,
				null nr_seq_copartic,
				c.ie_cancelamento ie_cancelamento,
				a.cd_centro_custo cd_centro_custo,
				e.nr_sequencia nr_seq_lote_mensalidade,
				c.nr_sequencia nr_seq_mensalidade,
				null ie_mensalidade_mes_anterior,
				a.cd_conta_ato_cooperado,
				a.cd_conta_ato_auxiliar,
				a.cd_conta_ato_nao_coop,
				coalesce(a.vl_ato_cooperado_antec,0) vl_ato_cooperado,
				coalesce(a.vl_ato_auxiliar_antec,0) vl_ato_auxiliar,
				coalesce(a.vl_ato_nao_coop_antec,0) vl_ato_nao_cooperado,
				null nr_seq_tipo_lanc,
				c.nr_seq_pagador,
				a.nr_seq_esquema,
				null vl_ato_cooperado_pro_rata,
				null vl_ato_auxiliar_pro_rata,
				null vl_ato_nao_coop_pro_rata,
				e.dt_mesano_referencia dt_referencia_lote,
				a.nr_seq_vinculo_sca,
				null dt_inicio_cobertura,
				a.nr_seq_item_cancel,
				substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_segurado,
				null nr_seq_conta,
				null nr_protocolo,
				null nr_seq_contrato,
				a.nr_sequencia nr_seq_mensalidade_seg_item
			from	pls_mensalidade_seg_item	a,
				pls_mensalidade_segurado	b,
				pls_mensalidade			c,
				pls_lote_mensalidade		e,
				pls_segurado			s
			where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
			and	c.nr_sequencia	= b.nr_seq_mensalidade
			and	e.nr_sequencia	= c.nr_seq_lote
			and	s.nr_sequencia	= b.nr_seq_segurado
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_ANTECIPACAO'
			and	doc_p.nr_documento	= e.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= c.nr_sequencia
			and	doc_p.nr_doc_analitico 	= a.nr_sequencia
			
union all

			SELECT	'N' ie_tipo_valor,
				a.cd_conta_contabil_ppcng cd_conta_debito,
				a.cd_conta_rec cd_conta_credito,
				coalesce(a.vl_pro_rata_dia,0) vl_pro_rata_dia,
				coalesce(a.vl_antecipacao,0) vl_antecipacao,
				a.cd_historico_ppcng cd_historico_deb,
				a.cd_historico cd_historico_cred,
				substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
				a.nr_seq_regra_ctb_mensal_deb nr_seq_regra_deb,
				a.nr_seq_regra_ctb_mensal nr_seq_regra_cred,
				a.ie_tipo_item ie_tipo_item,
				CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
				d.ie_cancelamento ie_cancelamento,
				a.cd_centro_custo cd_centro_custo,
				f.nr_sequencia nr_seq_lote_mensalidade,
				d.nr_sequencia nr_seq_mensalidade,
				coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
				a.cd_conta_ato_cooperado,
				a.cd_conta_ato_auxiliar,
				a.cd_conta_ato_nao_coop,
				a.vl_ato_cooperado,
				a.vl_ato_auxiliar,
				a.vl_ato_nao_cooperado,
				a.nr_seq_tipo_lanc,
				d.nr_seq_pagador,
				a.nr_seq_esquema,
				a.vl_ato_cooperado_pro_rata,
				a.vl_ato_auxiliar_pro_rata,
				a.vl_ato_nao_coop_pro_rata,
				f.dt_mesano_referencia dt_referencia_lote,
				a.nr_seq_vinculo_sca,
				coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
				a.nr_seq_item_cancel,
				substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
				null nr_seq_conta,
				null nr_protocolo,
				c.nr_seq_contrato nr_seq_contrato,
				a.nr_sequencia nr_seq_mensalidade_seg_item
			from	pls_mensalidade_seg_item	a,
				pls_mensalidade_segurado	b,
				pls_segurado			c,
				pls_mensalidade			d,
				pls_lote_mensalidade		f,
				pls_plano			g
			where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
			and	c.nr_sequencia		= b.nr_seq_segurado
			and	d.nr_sequencia		= b.nr_seq_mensalidade
			and	g.nr_sequencia		= b.nr_seq_plano
			and	f.nr_sequencia		= d.nr_seq_lote
			and	a.ie_tipo_item 		<> '20'
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_ITEM'
			and	doc_p.nr_documento	= f.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= d.nr_sequencia
			and	doc_p.nr_doc_analitico 	= a.nr_sequencia
			
union all

			select	'CO' ie_tipo_valor,
				a.cd_conta_contabil_ppcng cd_conta_debito,
				a.cd_conta_rec cd_conta_credito,
				0 vl_pro_rata_dia,
				0 vl_antecipacao,
				a.cd_historico_ppcng cd_historico_deb,
				a.cd_historico cd_historico_cred,
				substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
				a.nr_seq_regra_ctb_mensal_deb nr_seq_regra_deb,
				a.nr_seq_regra_ctb_mensal nr_seq_regra_cred,
				a.ie_tipo_item ie_tipo_item,
				CASE WHEN coalesce(ie_cancelamento,'X')='X' THEN 1  ELSE d.nr_sequencia END  nr_seq_copartic,
				d.ie_cancelamento ie_cancelamento,
				a.cd_centro_custo cd_centro_custo,
				f.nr_sequencia nr_seq_lote_mensalidade,
				d.nr_sequencia nr_seq_mensalidade,
				coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
				a.cd_conta_ato_cooperado,
				a.cd_conta_ato_auxiliar,
				a.cd_conta_ato_nao_coop,
				null vl_ato_cooperado,
				null vl_ato_auxiliar,
				null vl_ato_nao_cooperado,
				a.nr_seq_tipo_lanc,
				d.nr_seq_pagador,
				a.nr_seq_esquema,
				a.vl_ato_cooperado_pro_rata,
				a.vl_ato_auxiliar_pro_rata,
				a.vl_ato_nao_coop_pro_rata,
				f.dt_mesano_referencia dt_referencia_lote,
				a.nr_seq_vinculo_sca,
				coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
				a.nr_seq_item_cancel,
				substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
				null nr_seq_conta,
				null nr_protocolo,
				c.nr_seq_contrato nr_seq_contrato,
				a.nr_sequencia nr_seq_mensalidade_seg_item
			from	pls_mensalidade_seg_item	a,
				pls_mensalidade_segurado	b,
				pls_segurado			c,
				pls_mensalidade			d,
				pls_lote_mensalidade		f,
				pls_plano			g
			where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
			and	c.nr_sequencia		= b.nr_seq_segurado
			and	d.nr_sequencia		= b.nr_seq_mensalidade
			and	g.nr_sequencia		= b.nr_seq_plano
			and	f.nr_sequencia		= d.nr_seq_lote
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_CONTA_CO'
			and	doc_p.nr_documento	= f.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= d.nr_sequencia
			and	doc_p.nr_doc_analitico 	= a.nr_sequencia
			
union all

			select	'C' ie_tipo_valor,
				null cd_conta_debito,
				null cd_conta_credito,
				0 vl_pro_rata_dia,
				0 vl_antecipacao,
				c.cd_historico_ppcng cd_historico_deb,
				null cd_historico_cred,
				substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
				null nr_seq_regra_deb,
				null nr_seq_regra_cred,
				c.ie_tipo_item ie_tipo_item,
				null nr_seq_copartic,
				a.ie_cancelamento ie_cancelamento,
				null cd_centro_custo,
				i.nr_sequencia nr_seq_lote_mensalidade,
				a.nr_sequencia nr_seq_mensalidade,
				coalesce(i.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
				null cd_conta_ato_cooperado,
				null cd_conta_ato_auxiliar,
				null cd_conta_ato_nao_coop,
				null vl_ato_cooperado,
				null vl_ato_auxiliar,
				null vl_ato_nao_cooperado,
				null nr_seq_tipo_lanc,
				a.nr_seq_pagador nr_seq_pagador,
				null nr_seq_esquema,
				null vl_ato_cooperado_pro_rata,
				null vl_ato_auxiliar_pro_rata,
				null vl_ato_nao_coop_pro_rata,
				i.dt_mesano_referencia dt_referencia_lote,
				c.nr_seq_vinculo_sca nr_seq_vinculo_sca,
				coalesce(c.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
				c.nr_seq_item_cancel nr_seq_item_cancel,
				substr(pls_obter_dados_segurado(g.nr_sequencia,'N'),1,255) nm_segurado,
				d.nr_sequencia nr_seq_conta,
				e.nr_sequencia nr_protocolo,
				g.nr_seq_contrato nr_seq_contrato,
				c.nr_sequencia nr_seq_mensalidade_seg_item
			from	pls_lote_mensalidade		i,
				pls_mensalidade			a,
				pls_mensalidade_segurado	b,
				pls_mensalidade_seg_item	c,
				pls_conta			d,
				pls_segurado			g,
				pls_plano			h,
				pls_protocolo_conta		e
			where	a.nr_sequencia		= b.nr_seq_mensalidade
			and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
			and	d.nr_sequencia		= c.nr_seq_conta
			and	g.nr_sequencia		= b.nr_seq_segurado
			and	h.nr_sequencia		= b.nr_seq_plano
			and	i.nr_sequencia		= a.nr_seq_lote
			and	e.nr_sequencia 		= d.nr_seq_protocolo
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_COPARTICIPACAO'
			and	doc_p.nr_documento	= i.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
			and	doc_p.nr_doc_analitico 	= c.nr_sequencia
			
union all

			select	'P' ie_tipo_valor,
				c.cd_conta_contabil_ppcng cd_conta_debito,
				null cd_conta_credito,
				0 vl_pro_rata_dia,
				0 vl_antecipacao,
				c.cd_historico_ppcng cd_historico_deb,
				null cd_historico_cred,
				substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
				null nr_seq_regra_deb,
				null nr_seq_regra_cred,
				c.ie_tipo_item,
				null nr_seq_copartic,
				a.ie_cancelamento,
				null,
				i.nr_sequencia nr_seq_lote_mensalidade,
				a.nr_sequencia nr_seq_mensalidade,
				coalesce(i.ie_mensalidade_mes_anterior,'N'),
				null cd_conta_ato_cooperado,
				null cd_conta_ato_auxiliar,
				null cd_conta_ato_nao_coop,
				null vl_ato_cooperado,
				null vl_ato_auxiliar,
				null vl_ato_nao_cooperado,
				null nr_seq_tipo_lanc,
				a.nr_seq_pagador,
				null nr_seq_esquema,
				null vl_ato_cooperado_pro_rata,
				null vl_ato_auxiliar_pro_rata,
				null vl_ato_nao_coop_pro_rata,
				i.dt_mesano_referencia dt_referencia_lote,
				c.nr_seq_vinculo_sca,
				coalesce(c.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
				c.nr_seq_item_cancel,
				substr(pls_obter_dados_segurado(g.nr_sequencia,'N'),1,255) nm_segurado,
				null nr_seq_conta,
				null nr_protocolo,
				g.nr_seq_contrato nr_seq_contrato,
				c.nr_sequencia nr_seq_mensalidade_seg_item
			from	pls_lote_mensalidade		i,
				pls_mensalidade			a,
				pls_mensalidade_segurado	b,
				pls_mensalidade_seg_item	c,
				pls_conta			d,
				pls_segurado			g,
				pls_plano			h
			where	a.nr_sequencia		= b.nr_seq_mensalidade
			and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
			and	d.nr_sequencia		= c.nr_seq_conta
			and	g.nr_sequencia		= b.nr_seq_segurado
			and	h.nr_sequencia		= b.nr_seq_plano
			and	i.nr_sequencia		= a.nr_seq_lote
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_POS_ESTABELECIDO'
			and	doc_p.nr_documento	= i.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
			and	doc_p.nr_doc_analitico 	= c.nr_sequencia
			
union all

			select	'N' ie_tipo_valor,
				a.cd_conta_contabil_ppcng cd_conta_debito,
				a.cd_conta_rec cd_conta_credito,
				sum(coalesce(a.vl_pro_rata_dia,0)) vl_pro_rata_dia,
				sum(coalesce(a.vl_antecipacao,0)) vl_antecipacao,
				a.cd_historico_ppcng cd_historico_deb,
				a.cd_historico cd_historico_cred,
				substr(obter_desc_expressao(331083),1, 20) ds_item,
				max(a.nr_seq_regra_ctb_mensal_deb) nr_seq_regra_deb,
				max(a.nr_seq_regra_ctb_mensal) nr_seq_regra_cred,
				'20' ie_tipo_item,
				null nr_seq_copartic,
				d.ie_cancelamento ie_cancelamento,
				a.cd_centro_custo cd_centro_custo,
				f.nr_sequencia nr_seq_lote_mensalidade,
				d.nr_sequencia nr_seq_mensalidade,
				coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
				a.cd_conta_ato_cooperado,
				a.cd_conta_ato_auxiliar,
				a.cd_conta_ato_nao_coop,
				sum(a.vl_ato_cooperado) vl_ato_cooperado,
				sum(a.vl_ato_auxiliar) vl_ato_auxiliar,
				sum(a.vl_ato_nao_cooperado) vl_ato_nao_cooperado,
				a.nr_seq_tipo_lanc,
				d.nr_seq_pagador,
				a.nr_seq_esquema,
				sum(a.vl_ato_cooperado_pro_rata) vl_ato_cooperado_pro_rata,
				sum(a.vl_ato_auxiliar_pro_rata) vl_ato_auxiliar_pro_rata,
				sum(a.vl_ato_nao_coop_pro_rata) vl_ato_nao_coop_pro_rata,
				f.dt_mesano_referencia dt_referencia_lote,
				max(a.nr_seq_vinculo_sca) nr_seq_vinculo_sca,
				coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
				a.nr_seq_item_cancel,
				substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
				null nr_seq_conta,
				null nr_protocolo,
				c.nr_seq_contrato nr_seq_contrato,
				d.nr_sequencia nr_seq_mensalidade_seg_item
			from	pls_mensalidade_seg_item	a,
				pls_mensalidade_segurado	b,
				pls_segurado			c,
				pls_mensalidade			d,
				pls_lote_mensalidade		f,
				pls_plano			g
			where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
			and	c.nr_sequencia		= b.nr_seq_segurado
			and	d.nr_sequencia		= b.nr_seq_mensalidade
			and	g.nr_sequencia		= b.nr_seq_plano
			and	f.nr_sequencia		= d.nr_seq_lote
			and	a.ie_tipo_item 		= '20'
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_ITEM'
			and	doc_p.nr_documento	= f.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= d.nr_Sequencia
			and	doc_p.nr_doc_analitico 	= a.nr_sequencia 
			group by a.cd_conta_contabil_ppcng,
				a.cd_conta_rec,
				a.cd_historico_ppcng,
				a.cd_historico,
				d.ie_cancelamento,
				a.cd_centro_custo,
				f.nr_sequencia,
				d.nr_sequencia,
				f.ie_mensalidade_mes_anterior,
				a.cd_conta_ato_cooperado,
				a.cd_conta_ato_auxiliar,
				a.cd_conta_ato_nao_coop,
				a.nr_seq_tipo_lanc,
				d.nr_seq_pagador,
				a.nr_seq_esquema,
				f.dt_mesano_referencia,
				a.nr_seq_item_cancel,
				a.dt_inicio_cobertura,
				b.dt_inicio_cobertura,
				c.nr_sequencia,
				c.nr_seq_contrato,
				d.nr_sequencia) alias63;
	exception when no_data_found then
	/* Salva a inconsistencia: "Nao foi possivel identificar o movimento de origem." */

	select 	obter_desc_expressao(950251)
	into STRICT	doc_p.ds_inconsistencia
	;
	return;
	end;

	if (trunc(doc_p.dt_competencia) > trunc(clock_timestamp())) then
		return;
	elsif (trunc(doc_p.dt_competencia) < trunc(clock_timestamp())) then
		/* Salva a inconsistencia: "Movimento gerado apos a competencia de contabilizacao"*/

		select 	obter_desc_expressao(950249)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;

	ie_inconsistencia_w := 'N';

	/* Select que ira verificar se todos os registros da tabela PLS_CONTA_POS_ESTABELECIDO/PLS_CONTA_COPARTICIPACAO possuem contas contabeis
	e historico. A contabilizacao so devera ser feita se todos os itens possuirem as contas contabeis.*/
	if (doc_p.nm_atributo in ('VL_POS_ESTABELECIDO', 'VL_COPARTICIPACAO')) then
		select 	max(ie_inconsistencia) -- Max = 'S' (So pode ser 'S' ou 'N'). Se houver algum que seja SIM, o max sera SIM.
		into STRICT	ie_inconsistencia_w
		from (SELECT	coalesce(max('S'), 'N') ie_inconsistencia
			from	pls_mensalidade_item_conta	j,
				pls_lote_mensalidade		i,
				pls_mensalidade			a,
				pls_mensalidade_segurado	b,
				pls_mensalidade_seg_item	c,
				pls_conta			d,
				pls_conta_coparticipacao	f,
				pls_segurado			g,
				pls_plano			h,
				pls_protocolo_conta		e
			where	f.nr_sequencia		= j.nr_seq_conta_copartic
			and	j.nr_seq_item		= c.nr_sequencia
			and	a.nr_sequencia		= b.nr_seq_mensalidade
			and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
			and	d.nr_sequencia		= c.nr_seq_conta
			and	d.nr_sequencia		= f.nr_seq_conta
			and	g.nr_sequencia		= b.nr_seq_segurado
			and	h.nr_sequencia		= b.nr_seq_plano
			and	i.nr_sequencia		= a.nr_seq_lote
			and	e.nr_sequencia 		= d.nr_seq_protocolo
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_COPARTICIPACAO'
			and	doc_p.nr_documento	= i.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
			and	doc_p.nr_doc_analitico 	= c.nr_sequencia
			and (coalesce(f.cd_conta_cred::text, '') = ''
			or	coalesce(f.cd_historico::text, '') = '')
			
union all

			SELECT	coalesce(max('S'), 'N') ie_inconsistencia
			from	pls_mensalidade_item_conta	j,
				pls_lote_mensalidade		i,
				pls_mensalidade			a,
				pls_mensalidade_segurado	b,
				pls_mensalidade_seg_item	c,
				pls_conta			d,
				pls_conta_pos_estabelecido	f,
				pls_segurado			g,
				pls_plano			h
			where	a.nr_sequencia		= b.nr_seq_mensalidade
			and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
			and	d.nr_sequencia		= c.nr_seq_conta
			and	d.nr_sequencia		= f.nr_seq_conta
			and	g.nr_sequencia		= b.nr_seq_segurado
			and	h.nr_sequencia		= b.nr_seq_plano
			and	i.nr_sequencia		= a.nr_seq_lote
			and	f.nr_sequencia		= j.nr_seq_conta_pos_estab
			and	c.nr_sequencia		= j.nr_seq_item
			and	doc_p.nm_tabela 	= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo 	= 'VL_POS_ESTABELECIDO'
			and	doc_p.nr_documento	= i.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
			and	doc_p.nr_doc_analitico 	= c.nr_sequencia
			and (coalesce(f.cd_conta_cred::text, '') = ''
			or	coalesce(f.cd_historico::text, '') = '')) alias13;
	end if;

	if (ie_inconsistencia_w = 'S') then
		/* Salva a inconsistencia: "Conta nao encontrada" */

		select 	obter_desc_expressao(330747)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;

	ie_entrou_cursor_w := 'N';

	open c_tipo_movimento;
	loop
	fetch c_tipo_movimento into
		doc_p.vl_movimento,
		vl_ato_cooperado_w,
		vl_ato_auxiliar_w,
		vl_ato_nao_cooperado_w,
		cd_conta_debito_w,
		cd_conta_credito_w,
		cd_historico_cred_w,
		nr_seq_regra_deb_w,
		nr_seq_regra_cred_w,
		nr_seq_copartic_w,
		cd_centro_custo_w,
		nr_seq_esquema_w;
	EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
		begin

		ie_entrou_cursor_w := 'S';
		if (ie_cancelamento_w = 'E') then
			select	max(cd_historico_estorno),
				CASE WHEN max(ie_status_mensalidade)='C' THEN 'N'  ELSE 'S' END
			into STRICT	cd_historico_cred_w,
				ie_somente_inverte_estorno_w
			from	pls_esquema_contabil
			where	nr_sequencia	= nr_seq_esquema_w;
		end if;

		/* Verifica se este tipo de item esta cadastrado na aba Pro-rata (Funcao OPS - Criterios Contabeis)*/

		select	count(1)
		into STRICT	qt_pro_rata_regra_w
		from	pls_regra_pro_rata_dia
		where	ie_tipo_item_mensalidade	= ie_tipo_item_w  LIMIT 1;
		
		/*Campo criado para identificar quando a mensalidade foi gerada a partir da opcao "Gerar mensalidades abertas meses anteriores". */

		/*Nesse caso o valor e contabilizado integralmente no mes de referencia do lote da mensalidade */

		if (ie_mensalidade_mes_anterior_w = 'S') and
			((coalesce(vl_antecipacao_w,0) = 0) or (dt_inicio_cobertura_w < trunc(dt_referencia_lote_w,'month'))) then
			qt_pro_rata_regra_w	:= 0;
		end if;

		if (ie_tipo_valor_w in ('C', 'P')
			and ie_somente_inverte_estorno_w = 'N'
			and doc_p.vl_movimento > 0 
			and ie_cancelamento_w = 'E'
			and doc_p.nm_atributo <> 'VL_ANTECIPACAO') then
			
			cd_conta_contabil_aux_w	:= cd_conta_debito_w;
			cd_historico_aux_w	:= cd_historico_deb_w;
			nr_seq_regra_aux_w	:= nr_seq_regra_deb_w;
			
			cd_conta_debito_w	:= cd_conta_credito_w;
			cd_historico_deb_w	:= cd_historico_cred_w;
			nr_seq_regra_deb_w	:= nr_seq_regra_cred_w;
			
			cd_conta_credito_w	:= cd_conta_contabil_aux_w;
			cd_historico_cred_w	:= cd_historico_aux_w;
			nr_seq_regra_cred_w	:= nr_seq_regra_aux_w;
		end if;

		
		/* Contabilizar a antecipacao nos tipos pre-estabelecidos e pre-estabelecidos nao subsidiados */

		if (qt_pro_rata_regra_w > 0 and doc_p.nm_atributo <> 'VL_ANTECIPACAO') then
			doc_p.vl_movimento		:= coalesce(vl_pro_rata_dia_w,0);
			dados_contab_w.nm_atributo	:= 'VL_PRO_RATA_DIA';
			vl_ato_cooperado_w		:= vl_ato_cooperado_pro_rata_w;
			vl_ato_auxiliar_w		:= vl_ato_auxiliar_pro_rata_w;
			vl_ato_nao_cooperado_w		:= vl_ato_nao_coop_pro_rata_w;
		end if;

		/* Se nao houver informacoes de contas contabeis ou de historico, nao segue o processo */

		if (coalesce(cd_conta_debito_w, 'X') = 'X' or coalesce(cd_conta_credito_w, 'X') = 'X' or coalesce(cd_historico_deb_w, 0) = 0 or coalesce(cd_historico_cred_w, 0) = 0) and
			((coalesce(cd_conta_ato_auxiliar_w, 'X') = 'X' and coalesce(cd_conta_ato_cooperado_w, 'X') = 'X' and coalesce(cd_conta_ato_nao_coop_w, 'X') = 'X') and (coalesce(cd_historico_deb_w, 0) = 0) or (coalesce(cd_historico_cred_w, 0) = 0) or (coalesce(cd_conta_debito_w, 'X') = 'X')) then
			/* Salva a inconsistencia: "Conta nao encontrada" */

			select 	obter_desc_expressao(330747)
			into STRICT	doc_p.ds_inconsistencia
			;
			return;
		end if;

		if (coalesce(cd_conta_credito_w, 'X') <> 'X') then
			ie_ato_cooperado_w := 'N';
		elsif (coalesce(cd_conta_ato_auxiliar_w, 'X') <> 'X' or coalesce(cd_conta_ato_cooperado_w, 'X') <> 'X' or coalesce(cd_conta_ato_nao_coop_w, 'X') <> 'X') then
			ie_ato_cooperado_w := 'S';
		end if;

		/* Salva as contas contabeis em um vetor, pois sera feito um insert com cada uma delas 
		Para os movimentos de ato cooperado sera contabilizado apenas uma vez a conta de debito, porem ira inserir uma vez para cada ato
		a fim de manter a estrutura do vetor ([Debito, Credito, Debito, Credito])
		*/
		if (coalesce(ie_ato_cooperado_w, 'N') = 'N') then
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_debito_w;
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_credito_w;
		elsif (coalesce(ie_ato_cooperado_w, 'N') = 'S') then
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_debito_w;
			vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 						:= doc_p.vl_movimento;
			-- Insere um valor zerado para contabilizar corretamente ao abrir o vetor
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_debito_w;
			vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 						:= 0;
			if ((cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') and vl_ato_cooperado_w <> 0) then
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_debito_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= 0;
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_ato_cooperado_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= vl_ato_cooperado_w;
			end if;
			if ((cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') and vl_ato_auxiliar_w <> 0) then
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_debito_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= 0;
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_ato_auxiliar_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= vl_ato_auxiliar_w;
			end if;
			if ((cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') and vl_ato_nao_cooperado_w <> 0) then
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_debito_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= 0;
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_ato_nao_coop_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= vl_ato_nao_cooperado_w;
			end if;
		end if;

		/* Informacoes presentes no doc_p */

		dados_contab_w.cd_tipo_lote_contabil    := doc_p.cd_tipo_lote_contabil;
		dados_contab_w.cd_estabelecimento       := doc_p.cd_estabelecimento;
		dados_contab_w.dt_movimento             := doc_p.dt_competencia;

		/* Obtem o numero do titulo, utilizado no complemento historico*/

		select	min(nr_titulo)
		into STRICT	nr_titulo_w
		from	titulo_receber
		where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

		if (coalesce(nr_titulo_w,0) = 0) then
			begin
			
			select	max(nr_titulo)
			into STRICT	nr_titulo_w
			from	titulo_receber 			d,
				pls_mensalidade 		c,
				pls_mensalidade_segurado 	b,
				pls_mensalidade_seg_item 	a
			where	d.nr_seq_mensalidade 	= c.nr_sequencia
			and	c.nr_sequencia 		= b.nr_seq_mensalidade
			and	b.nr_sequencia 		= a.nr_seq_mensalidade_seg
			and	a.nr_sequencia		= nr_seq_item_cancel_w;
			
			end;
		end if;	

		/* Apos obter o numero do titulo, obtem as informacoes relacionadas a ele */

		if (coalesce(nr_titulo_w,0) > 0) then
			select	max(dt_liquidacao),
				max(cd_pessoa_fisica),
				max(cd_cgc),
				max(vl_titulo)
			into STRICT	dt_liquidacao_titulo_w,
				cd_pessoa_fisica_w,
				cd_cgc_w,
				vl_titulo_w
			from	titulo_receber
			where	nr_titulo	= nr_titulo_w;
		end if;


		/* Verifica se existe algum atributo cadastrado para aquele historico, levando em consideracao o tipo de lote contabil e estabelecimento/empresa */

		select  count(1)
		into STRICT    qt_atrib_hist_pad_w
		from    historico_padrao_atributo   c,
			historico_padrao            b,
			estabelecimento             a
		where   a.cd_estabelecimento    = doc_p.cd_estabelecimento
		and     a.cd_empresa            = b.cd_empresa
		and     b.cd_historico          = c.cd_historico
		and     c.cd_historico          in (cd_historico_deb_w, cd_historico_cred_w)
		and     c.cd_tipo_lote_contabil = doc_p.cd_tipo_lote_contabil;

		if (qt_atrib_hist_pad_w > 0) then

			/* Obtem o numero da nota fiscal, utilizado no complemento historico */

			select	max(nr_sequencia)
			into STRICT	nr_seq_nota_fiscal_w
			from	nota_fiscal
			where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

			if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
				select	max(nr_nota_fiscal)
				into STRICT	nr_nota_fiscal_w
				from	nota_fiscal
				where	nr_sequencia	= nr_seq_nota_fiscal_w;
			
				nr_nota_fiscal_w	:= somente_numero(nr_nota_fiscal_w);
			end if;

			/* Obtem o nome do pagador atraves do cd_cgc, cd_pessoa_fisica, ou pela sequencia do contrato_pagador. Utilizado no complemento historico */

			if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
				begin
				select	ds_razao_social
				into STRICT	nm_pagador_w
				from	pessoa_juridica
				where	cd_cgc	= cd_cgc_w;
				exception
				when others then
				nm_pagador_w	:= null;
				end;
			elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				begin
				select	nm_pessoa_fisica
				into STRICT	nm_pagador_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
				exception
				when others then
				nm_pagador_w	:= null;
				end;
			else
				select (select  x.nm_pessoa_fisica
					from	pessoa_fisica x
					where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
					
union all

					select	y.ds_razao_social
					from	pessoa_juridica y
					where	y.cd_cgc	= a.cd_cgc)
				into STRICT	nm_pagador_w
				from	pls_contrato_pagador a
				where	a.nr_sequencia	= nr_seq_pagador_w;
			end if;

			/* Obtem a sequencia do vinculo SCA, utilizada no complemento historico */

			if (coalesce(nr_seq_vinculo_sca_w,0) > 0) then
				select	max(c.ds_classificacao)
				into STRICT	ds_classif_sca_w
				from	pls_sca_classificacao	c,
					pls_sca_vinculo		b,
					pls_plano		a
				where	a.nr_sequencia	= b.nr_seq_plano
				and	c.nr_sequencia	= a.nr_seq_classificacao
				and	b.nr_sequencia	= nr_seq_vinculo_sca_w;
			end if;
			
			/* Obtem o ds_grupo, utilizado no complemento historico */

			if (coalesce(nr_seq_esquema_w,0) > 0) then
				select	max(b.ds_grupo)	
				into STRICT	ds_grupo_w
				from	pls_contab_mov_mens_lote	b,
					pls_esquema_contabil		a
				where	b.nr_sequencia	= a.nr_seq_movimentacao
				and	a.nr_sequencia	= nr_seq_esquema_w;
			end if;

			/* Obtem o numero da nfe, utilizado no complemento historico */

			begin
			nr_nfe_imp_w	:= substr(obter_dados_titulo_receber(nr_titulo_w,'NE'),1,100);
			exception
			when others then
			nr_nfe_imp_w	:= null;
			end;

			/* Obtem o cd_cgc/cd_cpf do pagador. Utilizados no complemento historico*/

			if (coalesce(nr_seq_contrato_w, 0) > 0) then
				select 	cd_cgc_estipulante,
					cd_pf_estipulante
				into STRICT	cd_cgc_pagador_w,
					cd_pf_pagador_w
				from 	pls_contrato
				where 	nr_sequencia = nr_seq_contrato_w;
			end if;

			ds_conteudo_deb_w	:= substr(	nr_nota_fiscal_w		||'#@'||
								cd_cgc_pagador_w		||'#@'||
								cd_pf_pagador_w			||'#@'||
								nr_titulo_w			||'#@'||
								nm_pagador_w			||'#@'||
								nr_seq_lote_mensalidade_w	||'#@'||
								nr_seq_regra_deb_w		||'#@'||
								dt_referencia_lote_w		||'#@'||
								ds_item_w			||'#@'||
								ds_classif_sca_w		||'#@'||
								ds_grupo_w			||'#@'||
								nr_seq_mensalidade_w		||'#@'||
								nr_nfe_imp_w			||'#@'||
								nm_segurado_w			||'#@'||
								nr_seq_conta_w			||'#@'||
								nr_protocolo_w,1,4000);

			begin
			ds_compl_historico_deb_ww	:= obter_compl_historico(doc_p.cd_tipo_lote_contabil, cd_historico_deb_w, ds_conteudo_deb_w);
			exception
			when others then
			ds_compl_historico_deb_ww	:= null;
			end;
		
			ds_conteudo_cred_w	:= substr(	nr_nota_fiscal_w		||'#@'||
								cd_cgc_pagador_w		||'#@'||
								cd_pf_pagador_w			||'#@'||
								nr_titulo_w			||'#@'||
								nm_pagador_w			||'#@'||
								nr_seq_lote_mensalidade_w	||'#@'||
								nr_seq_regra_cred_w		||'#@'||
								dt_referencia_lote_w		||'#@'||
								ds_item_w			||'#@'||
								ds_classif_sca_w		||'#@'||
								ds_grupo_w			||'#@'||
								nr_seq_mensalidade_w		||'#@'||
								nr_nfe_imp_w			||'#@'||
								nm_segurado_w			||'#@'||
								nr_seq_conta_w			||'#@'||
								nr_protocolo_w,1,4000);

			begin
			ds_compl_historico_cred_ww	:= obter_compl_historico(doc_p.cd_tipo_lote_contabil, cd_historico_cred_w, ds_conteudo_cred_w);
			exception
			when others then
			ds_compl_historico_cred_ww	:= null;
			end;

			ds_conteudo_antecip_w	:= substr(	nr_nota_fiscal_w		||'#@'||
								cd_cgc_pagador_w		||'#@'||
								cd_pf_pagador_w			||'#@'||
								nr_titulo_w			||'#@'||
								nm_pagador_w			||'#@'||
								nr_seq_lote_mensalidade_w	||'#@'||
								null				||'#@'||
								dt_referencia_lote_w		||'#@'||
								ds_item_w			||'#@'||
								ds_classif_sca_w		||'#@'||
								ds_grupo_w			||'#@'||
								nr_seq_mensalidade_w		||'#@'||
								nr_nfe_imp_w			||'#@'||
								nm_segurado_w			||'#@'||
								null				||'#@'||
								null,1,4000);

			begin
			ds_compl_historico_cred_ant_ww	:= obter_compl_historico(doc_p.cd_tipo_lote_contabil, cd_historico_cred_w, ds_conteudo_antecip_w);
			exception
			when others then
				ds_compl_historico_cred_ant_ww	:= null;
			end;
			
			begin
			ds_compl_historico_deb_ant_ww	:= obter_compl_historico(doc_p.cd_tipo_lote_contabil, cd_historico_deb_w, ds_conteudo_antecip_w);
			exception
			when others then
				ds_compl_historico_deb_ant_ww	:= null;
			end;

			if (doc_p.nm_atributo = 'VL_ANTECIPACAO') then
				ds_compl_historico_deb_w	:= substr(ds_compl_historico_cred_ant_ww, 1, 255);
				ds_compl_historico_cred_w	:= substr(ds_compl_historico_deb_ant_ww, 1, 255);
			else
				ds_compl_historico_deb_w	:= substr(ds_compl_historico_deb_ww, 1, 255);
				ds_compl_historico_cred_w	:= substr(ds_compl_historico_cred_ww, 1, 255);
			end if;
		end if;

		/* Obtem a sequencia de agrupamento */

		nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(doc_p.cd_tipo_lote_contabil)),'NR_SEQ_MENSALIDADE');
		if (nm_agrupador_w = 'NR_SEQ_LOTE') then
			nr_seq_agrupamento_w	:= nr_seq_lote_mensalidade_w;
		elsif (nm_agrupador_w = 'NR_SEQ_PAGADOR') then
			nr_seq_agrupamento_w	:= nr_seq_pagador_w;
		elsif (nm_agrupador_w = 'NR_TITULO') then
			nr_seq_agrupamento_w	:= nr_titulo_w;
		elsif (nm_agrupador_w = 'NR_SEQ_MENSALIDADE') then
			nr_seq_agrupamento_w	:= nr_seq_mensalidade_w;	
		elsif (nm_agrupador_w = 'IE_TIPO_ITEM') then
			nr_seq_agrupamento_w	:= ie_tipo_item_w;
		elsif (ie_tipo_item_w	= '20') then
			nr_seq_agrupamento_w	:= nr_seq_tipo_lanc_w;
		elsif (ie_tipo_item_w = '3') then
			nr_seq_agrupamento_w	:= nr_seq_copartic_w;
		else
			nr_seq_agrupamento_w	:= null;
		end if;

		if (coalesce(nr_seq_agrupamento_w,0) = 0) then
			nr_seq_agrupamento_w	:= nr_seq_mensalidade_w;

			/*Nos casos de mensalidade cancelada deve obter o mesmo atributo de fato contabil do lancamento de origem, caso contrario nao agrupa o movimento e gera divergencia entre contabilidade e registro auxiliar*/

			if (coalesce(nr_seq_item_cancel_w,0) <> 0) then
				select	min(c.nr_sequencia)
				into STRICT	nr_seq_agrupamento_w
				from	pls_mensalidade c,
					pls_mensalidade_segurado b,
					pls_mensalidade_seg_item a
				where	c.nr_sequencia = b.nr_seq_mensalidade
				and	b.nr_sequencia = a.nr_seq_mensalidade_seg
				and	a.nr_sequencia = nr_seq_item_cancel_w;			
			end if;
		end if;

		dados_contab_w.nr_seq_agrupamento := nr_seq_agrupamento_w;

		/* Armazena o valor do centro_custo, para nao perder o mesmo ao realizar as trocas no loop das contas contabeis */

		cd_centro_custo_ww := cd_centro_custo_w;
	
		/* Para cada conta conta contabil no vetor, verifica o centro de custo */

		for i in vet_contas_contabeis_ppcng_w.cd_conta_contabil.first..vet_contas_contabeis_ppcng_w.cd_conta_contabil.last loop
			dados_contab_w.cd_centro_custo := null;
			dados_contab_w.cd_conta_cred := null;
			dados_contab_w.cd_conta_deb := null;
			cd_centro_custo_w := null;

			if (ie_ato_cooperado_w = 'N') then
				dados_contab_w.vl_movimento := doc_p.vl_movimento;
			elsif (ie_ato_cooperado_w = 'S') then
				dados_contab_w.vl_movimento := vet_valores_ppcng_w.vl_movimento(i);
			end if;

			/* Centro de custo */

			select	coalesce(max(ie_centro_custo), 'N')
			into STRICT	ie_centro_custo_w
			from	conta_contabil
			where	cd_conta_contabil = vet_contas_contabeis_ppcng_w.cd_conta_contabil(i);

			if (coalesce(ie_centro_custo_w,'N') = 'N') then
				cd_centro_custo_w	:= null;
			else
				cd_centro_custo_w	:= cd_centro_custo_ww;
			end if;
			dados_contab_w.cd_centro_custo := cd_centro_custo_w;
			/* O primeiro elemento sera a conta de debito, o segundo sera credito. Segue alterando caso haja mais de 1 conta de cada tipo
			Ex: [Cd_conta_debito, cd_conta_credito, cd_conta_debito, cd_conta_credito] */
			if (mod(i, 2) = 0) then
				dados_contab_w.cd_conta_deb    		:= vet_contas_contabeis_ppcng_w.cd_conta_contabil(i);
				dados_contab_w.cd_historico     	:= cd_historico_deb_w;
				dados_contab_w.ds_compl_historico 	:= ds_compl_historico_deb_w;
			else
				dados_contab_w.cd_conta_cred     	:= vet_contas_contabeis_ppcng_w.cd_conta_contabil(i);
				dados_contab_w.cd_historico     	:= cd_historico_cred_w;
				dados_contab_w.ds_compl_historico 	:= ds_compl_historico_cred_w;
			end if;

			dados_contab_w := pls_contab_onl_lote_fin_pck.contabiliza_movimento(dados_contab_w, nm_usuario_p);
			doc_p.nr_lote_contabil := dados_contab_w.nr_lote_contabil;
		end loop;

		/* Update no movimento de origem */

		if (coalesce(doc_p.nr_lote_contabil, 0) <> 0) then
			if (coalesce(doc_p.ds_origem, 'X') = 'ESTORNO') then
				nr_lote_contabil_w	:= 0;
			else
				nr_lote_contabil_w	:= doc_p.nr_lote_contabil;
			end if;

			if (doc_p.nm_atributo in ('VL_ITEM', 'VL_COPARTICIPACAO', 'VL_POS_ESTABELECIDO', 'VL_ITEM_CO')) then
				update	pls_mensalidade_seg_item
				set	nr_lote_contabil 	= nr_lote_contabil_w
				where	nr_sequencia 		= nr_seq_mensalidade_seg_item_w;
			elsif (doc_p.nm_atributo = 'VL_ANTECIPACAO') then
				update	pls_mensalidade_seg_item
				set	nr_lote_contab_antecip 	= nr_lote_contabil_w
				where	nr_sequencia 		= nr_seq_mensalidade_seg_item_w;
			end if;
		end if;

		vet_contas_contabeis_ppcng_w.cd_conta_contabil.delete;
		vet_valores_ppcng_w.vl_movimento.delete;

		end;
	end loop;
	close c_tipo_movimento;

	if (coalesce(ie_entrou_cursor_w, 'N') = 'N') then
		/* Salva a inconsistencia: "Nao foi possivel identificar o movimento de origem." */

		select 	obter_desc_expressao(950251)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_contab_onl_lote_fin_pck.contab_rec_ppcng ( doc_p INOUT ctb_documento, nm_usuario_p text) FROM PUBLIC;
