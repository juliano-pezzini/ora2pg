-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE t_valores_ppcng AS (vl_movimento t_vl_movimento);
CREATE TYPE t_contas_contabeis_ppcng AS (cd_conta_contabil t_conta_contabil);


CREATE OR REPLACE PROCEDURE pls_contab_onl_lote_fin_pck.contab_provisao_ppcng ( doc_p INOUT ctb_documento, nm_usuario_p text) AS $body$
DECLARE


	type t_vl_movimento is table of pls_mensalidade_seg_item.vl_item%type index by integer;
	vet_valores_ppcng_w		t_valores_ppcng;

	type t_conta_contabil is table of pls_conta.cd_conta_cred%type index by integer;
	vet_contas_contabeis_ppcng_w	t_contas_contabeis_ppcng;

	dados_contab_w			dados_contab;
	cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
	nr_titulo_w			titulo_pagar.nr_titulo%type;
	cd_conta_cred_w			pls_conta.cd_conta_cred%type;
	cd_conta_deb_w			pls_conta.cd_conta_deb%type;
	cd_conta_ato_cooperado_w	pls_conta.cd_conta_cred%type;
	cd_conta_ato_auxiliar_w		pls_conta.cd_conta_cred%type;
	cd_conta_ato_nao_coop_w		pls_conta.cd_conta_cred%type;
	cd_centro_custo_w		centro_custo.cd_centro_custo%type;
	cd_centro_custo_ww		centro_custo.cd_centro_custo%type;
	cd_historico_w			pls_conta_proc.cd_historico%type;
	cd_historico_deb_w		pls_conta_proc.cd_historico%type;
	cd_historico_cred_w		pls_conta_proc.cd_historico%type;
	nr_seq_conta_w			pls_conta.nr_sequencia%type;
	nr_seq_regra_deb_w		pls_mensalidade_seg_item.nr_seq_regra_ctb_mensal_deb%type;
	nr_seq_regra_cred_w		pls_mensalidade_seg_item.nr_seq_regra_ctb_mensal%type;
	nr_seq_item_w			pls_mensalidade_seg_item.nr_sequencia%type;
	ie_tipo_item_w			pls_mensalidade_seg_item.ie_tipo_item%type;
	nr_seq_copartic_w		pls_mensalidade.nr_sequencia%type;
	ie_cancelamento_w		pls_mensalidade.ie_cancelamento%type;
	nr_seq_lote_mensalidade_w	pls_lote_mensalidade.nr_sequencia%type;
	nr_seq_tipo_lanc_w		pls_mensalidade_seg_item.nr_seq_tipo_lanc%type;
	nr_protocolo_w			pls_protocolo_conta.nr_sequencia%type;
	nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
	nr_seq_item_cancel_w		pls_mensalidade_seg_item.nr_seq_item_cancel%type;
	dt_referencia_lote_w		pls_lote_mensalidade.dt_mesano_referencia%type;
	nr_seq_vinculo_sca_w		pls_mensalidade_seg_item.nr_seq_vinculo_sca%type;
	nr_seq_esquema_w		pls_mensalidade_seg_item.nr_seq_esquema%type;
	nr_seq_agrupamento_w		ctb_movimento.nr_seq_agrupamento%type;
	cd_cgc_w			titulo_receber.cd_cgc%type;
	nr_nota_fiscal_w		pls_prot_conta_titulo.nr_nota_fiscal%type;
	nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;
	ie_contab_nf_mens_w		pls_parametro_contabil.ie_contab_nf_mens%type;
	nr_seq_nota_fiscal_w		nota_fiscal.nr_sequencia%type;
	ds_compl_historico_cred_w	ctb_movimento.ds_compl_historico%type;
	ds_compl_historico_deb_w	ctb_movimento.ds_compl_historico%type;
	nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
	vl_ato_cooperado_w		pls_mensalidade_seg_item.vl_ato_cooperado%type;
	vl_ato_nao_cooperado_w		pls_mensalidade_seg_item.vl_ato_nao_cooperado%type;
	vl_ato_auxiliar_w		pls_mensalidade_seg_item.vl_ato_auxiliar%type;
	nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
	nr_seq_mensalidade_seg_item_w	pls_mensalidade_seg_item.nr_sequencia%type;
	ie_entrou_cursor_w		varchar(1);
	ie_inconsistencia_w		varchar(1);
	ie_ato_cooperado_w		varchar(1);
	ie_centro_custo_w		varchar(1);
	cd_cgc_pagador_w		varchar(14) := null;
	cd_pf_pagador_w			varchar(10) := null;
	nm_pagador_w			varchar(80);
	nr_nfe_imp_w			varchar(100);
	ds_compl_historico_cred_ww	varchar(255);
	ds_compl_historico_deb_ww	varchar(255);
	ds_item_w			varchar(255);
	ds_classif_sca_w		varchar(255);
	nm_segurado_w			varchar(255);
	nm_agrupador_w			varchar(255);
	ds_titulo_w			varchar(255) := '';
	ds_grupo_w			varchar(255);
	ds_conteudo_deb_w		varchar(4000);
	ds_conteudo_cred_w		varchar(4000);

	/* Cursor especifico para abrir a coparticipacao e pos-estabelecido pelas tabelas PLS_CONTA_COPARTICIPACAO, PLS_CONTA_POS_ESTABELECIDO
	e PLS_MENSALIDADE_ITEM_CONTA. e aberto apos o select "normal" de contabilizacao.
	Existe um union que traz os valores ja salvos nas variaveis, para que a contabilizacao seja executada normalmente caso o atributo
	do doc_p nao seja VL_COPARTICIPACAO nem VL_POS_ESTABELECIDO.*/
	c_tipo_movimento CURSOR FOR
	SELECT	CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_item,0) * -1  ELSE coalesce(j.vl_item,0) END  vl_item,
		f.cd_conta_deb cd_conta_debito,
		coalesce(c.cd_conta_contabil_ppcng, f.cd_conta_cred) cd_conta_credito,
		f.cd_historico cd_historico,
		coalesce(c.cd_historico_ppcng, f.cd_historico) cd_historico_cred,
		f.nr_seq_regra_ctb_deb nr_seq_regra_deb,		
		f.nr_seq_regra_ctb_cred nr_seq_regra_cred,
		f.nr_sequencia nr_seq_copartic,
		f.cd_centro_custo cd_centro_custo,
		f.nr_seq_esquema nr_seq_esquema
	from	pls_mensalidade_item_conta	j,
		pls_lote_mensalidade		i,
		pls_mensalidade			a,
		pls_mensalidade_segurado	b,
		pls_mensalidade_seg_item	c,
		pls_conta			d,
		pls_conta_coparticipacao	f,
		pls_protocolo_conta		e,
		pls_segurado			g,
		pls_plano			h
	where	j.nr_seq_conta_copartic	= f.nr_sequencia
	and	j.nr_seq_item		= c.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_mensalidade
	and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia		= c.nr_seq_conta
	and	d.nr_sequencia		= f.nr_seq_conta
	and	g.nr_sequencia		= b.nr_seq_segurado
	and	h.nr_sequencia		= b.nr_seq_plano
	and	i.nr_sequencia		= a.nr_seq_lote
	and	e.nr_sequencia		= d.nr_seq_protocolo
	and	doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
	and	doc_p.nm_atributo	= 'VL_COPARTICIPACAO'
	and	doc_p.nr_documento	= i.nr_sequencia
	and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
	and	doc_p.nr_doc_analitico	= c.nr_sequencia
	
union all

	SELECT  CASE WHEN coalesce(doc_p.ds_origem, 'X')='ESTORNO' THEN  coalesce(j.vl_item,0) * -1  ELSE coalesce(j.vl_item,0) END  vl_item,
		f.cd_conta_deb cd_conta_debito,
		coalesce(c.cd_conta_contabil_ppcng, f.cd_conta_cred) cd_conta_credito,
		f.cd_historico cd_historico_deb,
		coalesce(c.cd_historico_ppcng, f.cd_historico) cd_historico_cred,
		f.nr_seq_regra_ctb_deb nr_seq_regra_deb,
		f.nr_seq_regra_ctb_cred nr_seq_regra_cred,
		f.nr_sequencia nr_seq_copartic,
		f.cd_centro_custo cd_centro_custo,
		f.nr_seq_esquema nr_seq_esquema
	from	pls_mensalidade_item_conta	j,
		pls_lote_mensalidade		i,
		pls_mensalidade			a,
		pls_mensalidade_segurado	b,
		pls_mensalidade_seg_item	c,
		pls_conta			d,
		pls_conta_pos_estabelecido	f,
		pls_protocolo_conta		e,
		pls_segurado			g,
		pls_plano			h
	where	a.nr_sequencia		= b.nr_seq_mensalidade
	and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia		= c.nr_seq_conta
	and	d.nr_sequencia		= f.nr_seq_conta
	and	g.nr_sequencia		= b.nr_seq_segurado
	and	h.nr_sequencia		= b.nr_seq_plano
	and	i.nr_sequencia		= a.nr_seq_lote
	and	e.nr_sequencia		= d.nr_seq_protocolo
	and	f.nr_sequencia		= j.nr_seq_conta_pos_estab
	and	c.nr_sequencia		= j.nr_seq_item
	and     doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
	and     doc_p.nm_atributo	= 'VL_POS_ESTABELECIDO'
	and     doc_p.nr_documento	= i.nr_sequencia
	and     doc_p.nr_seq_doc_compl	= a.nr_sequencia
	and     doc_p.nr_doc_analitico	= c.nr_sequencia
	and	coalesce(h.ie_situacao,'A') = 'A'
	
union all

	select	doc_p.vl_movimento,
		cd_conta_deb_w,
		cd_conta_cred_w,
		cd_historico_deb_w,
		cd_historico_cred_w,
		nr_seq_regra_deb_w,
		nr_seq_regra_cred_w,
		nr_seq_copartic_w,
		cd_centro_custo_w,
		nr_seq_esquema_w
	
	where	doc_p.nm_atributo not in ('VL_POS_ESTABELECIDO', 'VL_COPARTICIPACAO');

	c_titulos CURSOR(nr_seq_mensalidade_p	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	nr_titulo
	from	titulo_receber
	where	nr_seq_mensalidade = nr_seq_mensalidade_p
	order by nr_titulo;

	c_titulos_w c_titulos%rowtype;

	c_titulos_2 CURSOR(nr_seq_item_cancel_p	pls_mensalidade_seg_item.nr_sequencia%type)FOR
		SELECT	nr_titulo
		from	titulo_receber d,
			pls_mensalidade c,
			pls_mensalidade_segurado b,
			pls_mensalidade_seg_item a
		where	d.nr_seq_mensalidade = c.nr_sequencia
		and	c.nr_sequencia = b.nr_seq_mensalidade
		and	b.nr_sequencia = a.nr_seq_mensalidade_seg
		and	a.nr_sequencia = nr_seq_item_cancel_p
		order by nr_titulo;

	c_titulos_2_w c_titulos_2%rowtype;

	
BEGIN

	/* Variavel utilizada no select */

	select	coalesce(max(ie_contab_nf_mens),'N')
	into STRICT	ie_contab_nf_mens_w
	from	pls_parametro_contabil
	where	cd_estabelecimento = doc_p.cd_estabelecimento;

	begin
	select  cd_conta_debito,
		cd_conta_credito,
		cd_historico_deb,
		cd_historico_cred,
		ds_item,
		nr_seq_regra_deb,
		nr_seq_regra_cred,
		ie_tipo_item,
		nr_seq_copartic,
		ie_cancelamento,
		cd_centro_custo,
		nr_seq_lote_mensalidade,
		cd_conta_ato_cooperado,
		cd_conta_ato_auxiliar,
		cd_conta_ato_nao_coop,
		nr_seq_tipo_lanc,
		nr_seq_pagador,
		nm_segurado,
		nr_protocolo,
		nr_seq_mensalidade,
		nr_seq_item_cancel,
		dt_referencia_lote,
		nr_seq_vinculo_sca,
		nr_seq_esquema,
		nr_seq_conta,
		nr_seq_contrato,
		CASE WHEN doc_p.ds_origem='ESTORNO' THEN  vl_ato_cooperado * -1  ELSE vl_ato_cooperado END ,
		CASE WHEN doc_p.ds_origem='ESTORNO' THEN  vl_ato_auxiliar * -1  ELSE vl_ato_auxiliar END ,
		CASE WHEN doc_p.ds_origem='ESTORNO' THEN  vl_ato_nao_cooperado * -1  ELSE vl_ato_nao_cooperado END ,
		nr_seq_mensalidade_seg_item
	into STRICT    cd_conta_deb_w,
		cd_conta_cred_w,
		cd_historico_deb_w,
		cd_historico_cred_w,
		ds_item_w,
		nr_seq_regra_deb_w,
		nr_seq_regra_cred_w,
		ie_tipo_item_w,
		nr_seq_copartic_w,
		ie_cancelamento_w,
		cd_centro_custo_w,
		nr_seq_lote_mensalidade_w,
		cd_conta_ato_cooperado_w,
		cd_conta_ato_auxiliar_w,
		cd_conta_ato_nao_coop_w,
		nr_seq_tipo_lanc_w,
		nr_seq_pagador_w,
		nm_segurado_w,
		nr_protocolo_w,
		nr_seq_mensalidade_w,
		nr_seq_item_cancel_w,
		dt_referencia_lote_w,
		nr_seq_vinculo_sca_w,
		nr_seq_esquema_w,
		nr_seq_conta_w,
		nr_seq_contrato_w,
		vl_ato_cooperado_w,
		vl_ato_auxiliar_w,
		vl_ato_nao_cooperado_w,
		nr_seq_mensalidade_seg_item_w
	from (SELECT	CASE WHEN ie_contab_nf_mens_w='S' THEN a.cd_conta_rec_antecip  ELSE a.cd_conta_deb END  cd_conta_debito,
			coalesce(a.cd_conta_contabil_ppcng, a.cd_conta_rec) cd_conta_credito,
			a.cd_historico cd_historico_deb,
			coalesce(a.cd_historico_ppcng, a.cd_historico) cd_historico_cred,
			substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
			a.nr_seq_regra_ctb_mensal_deb nr_seq_regra_deb,
			a.nr_seq_regra_ctb_mensal nr_seq_regra_cred,
			a.ie_tipo_item ie_tipo_item,
			CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
			d.ie_cancelamento ie_cancelamento,
			a.cd_centro_custo cd_centro_custo,
			f.nr_sequencia nr_seq_lote_mensalidade,
			a.cd_conta_ato_cooperado cd_conta_ato_cooperado,
			a.cd_conta_ato_auxiliar cd_conta_ato_auxiliar,
			a.cd_conta_ato_nao_coop cd_conta_ato_nao_coop,
			a.nr_seq_tipo_lanc nr_seq_tipo_lanc,
			d.nr_seq_pagador nr_seq_pagador,
			substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
			null nr_protocolo,
			d.nr_sequencia nr_seq_mensalidade,
			a.nr_seq_item_cancel nr_seq_item_cancel,
			f.dt_mesano_referencia dt_referencia_lote,
			a.nr_seq_vinculo_sca nr_seq_vinculo_sca,
			a.nr_seq_esquema nr_seq_esquema,
			null nr_seq_conta,
			c.nr_seq_contrato,
			a.vl_ato_cooperado,
			a.vl_ato_auxiliar,
			a.vl_ato_nao_cooperado,
			a.nr_sequencia nr_seq_mensalidade_seg_item
		from	pls_mensalidade_seg_item	a,
			pls_mensalidade_segurado	b,
			pls_segurado			c,
			pls_mensalidade			d,
			pls_lote_mensalidade		f,
			pls_plano			g
		where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
		and	c.nr_sequencia		= b.nr_seq_segurado
		and	d.nr_sequencia		= b.nr_seq_mensalidade
		and	g.nr_sequencia		= b.nr_seq_plano
		and	f.nr_sequencia		= d.nr_seq_lote
		and	doc_p.nr_documento	= f.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= d.nr_sequencia
		and	doc_p.nr_doc_analitico	= a.nr_sequencia
		and	a.ie_tipo_item 		<> '20'
		and	doc_p.nm_tabela       	= 'PLS_MENSALIDADE_SEG_ITEM'
		and     doc_p.nm_atributo      	= 'VL_ITEM'
		
union all

		SELECT	null cd_conta_debito,
			null cd_conta_credito,
			null cd_historico,
			null cd_historico_cred,
			substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
			null nr_seq_regra_deb,		
			null nr_seq_regra_cred,
			c.ie_tipo_item ie_tipo_item,
			null nr_seq_copartic,
			a.ie_cancelamento ie_cancelamento,
			null cd_centro_custo,
			i.nr_sequencia nr_seq_lote_mensalidade,
			null cd_conta_ato_cooperado,
			null cd_conta_ato_auxiliar,
			null cd_conta_ato_nao_coop,
			null nr_seq_tipo_lanc,
			a.nr_seq_pagador nr_seq_pagador,
			substr(pls_obter_dados_segurado(g.nr_sequencia,'N'),1,255) nm_segurado,
			e.nr_sequencia nr_protocolo,
			a.nr_sequencia nr_seq_mensalidade,
			c.nr_seq_item_cancel nr_seq_item_cancel,
			i.dt_mesano_referencia dt_referencia_lote,
			c.nr_seq_vinculo_sca nr_seq_vinculo_sca,
			null nr_seq_esquema,
			d.nr_sequencia nr_seq_conta,
			g.nr_seq_contrato,
			null vl_ato_cooperado,
			null vl_ato_auxiliar,
			null vl_ato_nao_cooperado,
			c.nr_sequencia
		from	pls_lote_mensalidade		i,
			pls_mensalidade			a,
			pls_mensalidade_segurado	b,
			pls_mensalidade_seg_item	c,
			pls_conta			d,
			pls_protocolo_conta		e,
			pls_segurado			g,
			pls_plano			h
		where	a.nr_sequencia		= b.nr_seq_mensalidade
		and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
		and	d.nr_sequencia		= c.nr_seq_conta
		and	g.nr_sequencia		= b.nr_seq_segurado
		and	h.nr_sequencia		= b.nr_seq_plano
		and	i.nr_sequencia		= a.nr_seq_lote
		and	e.nr_sequencia		= d.nr_seq_protocolo
		and	doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
		and	doc_p.nm_atributo	= 'VL_COPARTICIPACAO'
		and	doc_p.nr_documento	= i.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
		and	doc_p.nr_doc_analitico	= c.nr_sequencia
		
union all

		select	null cd_conta_debito,
			null cd_conta_credito,
			null cd_historico_deb,
			null cd_historico_cred,
			substr(obter_valor_dominio(1930, c.ie_tipo_item),1,255) ds_item,
			null nr_seq_regra_deb,
			null nr_seq_regra_cred,
			c.ie_tipo_item ie_tipo_item,
			null nr_seq_copartic,
			a.ie_cancelamento ie_cancelamento,
			null cd_centro_custo,
			i.nr_sequencia nr_seq_lote_mensalidade,
			null cd_conta_ato_cooperado,
			null cd_conta_ato_auxiliar,
			null cd_conta_ato_nao_coop,
			null nr_seq_tipo_lanc,
			a.nr_seq_pagador nr_seq_pagador,
			substr(pls_obter_dados_segurado(g.nr_sequencia,'N'),1,255) nm_segurado,
			e.nr_sequencia nr_protocolo,
			a.nr_sequencia nr_seq_mensalidade,
			c.nr_seq_item_cancel,
			i.dt_mesano_referencia dt_referencia_lote,
			c.nr_seq_vinculo_sca nr_seq_vinculo_sca,
			null nr_seq_esquema,
			d.nr_sequencia nr_seq_conta,
			g.nr_seq_contrato,
			null vl_ato_cooperado,
			null vl_ato_auxiliar,
			null vl_ato_nao_cooperado,
			c.nr_sequencia
		from	pls_lote_mensalidade		i,
			pls_mensalidade			a,
			pls_mensalidade_segurado	b,
			pls_mensalidade_seg_item	c,
			pls_conta			d,
			pls_protocolo_conta		e,
			pls_segurado			g,
			pls_plano			h
		where	a.nr_sequencia		= b.nr_seq_mensalidade
		and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
		and	d.nr_sequencia		= c.nr_seq_conta
		and	g.nr_sequencia		= b.nr_seq_segurado
		and	h.nr_sequencia		= b.nr_seq_plano
		and	i.nr_sequencia		= a.nr_seq_lote
		and	e.nr_sequencia		= d.nr_seq_protocolo
		and     doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
		and     doc_p.nm_atributo	= 'VL_POS_ESTABELECIDO'
		and     doc_p.nr_documento	= i.nr_sequencia
		and     doc_p.nr_seq_doc_compl	= a.nr_sequencia
		and     doc_p.nr_doc_analitico	= c.nr_sequencia
		
union all

		select	a.cd_conta_deb cd_conta_debito,
			coalesce(a.cd_conta_contabil_ppcng, a.cd_conta_rec) cd_conta_credito,
			a.cd_historico cd_historico_deb,
			coalesce(a.cd_historico_ppcng, a.cd_historico) cd_historico_cred,
			substr(obter_desc_expressao(331083),1, 20) ds_item,
			max(a.nr_seq_regra_ctb_mensal_deb) nr_seq_regra_deb,
			max(a.nr_seq_regra_ctb_mensal) nr_seq_regra_cred,
			'20' ie_tipo_item,
			null nr_seq_copartic,
			d.ie_cancelamento ie_cancelamento,
			a.cd_centro_custo cd_centro_custo,
			f.nr_sequencia nr_seq_lote_mensalidade,
			a.cd_conta_ato_cooperado cd_conta_ato_cooperado,
			a.cd_conta_ato_auxiliar cd_conta_ato_auxiliar,
			a.cd_conta_ato_nao_coop cd_conta_ato_nao_coop,
			a.nr_seq_tipo_lanc nr_seq_tipo_lanc,
			d.nr_seq_pagador nr_seq_pagador,
			substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
			null nr_protocolo,
			d.nr_sequencia nr_seq_mensalidade,
			a.nr_seq_item_cancel,
			f.dt_mesano_referencia dt_referencia_lote,
			max(a.nr_seq_vinculo_sca) nr_seq_vinculo_sca,
			a.nr_seq_esquema nr_seq_esquema,
			null nr_seq_conta,
			c.nr_seq_contrato,
			a.vl_ato_cooperado,
			a.vl_ato_auxiliar,
			a.vl_ato_nao_cooperado,
			a.nr_sequencia
		from	pls_mensalidade_seg_item	a,
			pls_mensalidade_segurado	b,
			pls_segurado			c,
			pls_mensalidade			d,
			pls_lote_mensalidade		f,
			pls_plano			g
		where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
		and	c.nr_sequencia		= b.nr_seq_segurado
		and	d.nr_sequencia		= b.nr_seq_mensalidade
		and	g.nr_sequencia		= b.nr_seq_plano
		and	f.nr_sequencia		= d.nr_seq_lote
		and	doc_p.nr_documento	= f.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= d.nr_sequencia
		and	doc_p.nr_doc_analitico	= a.nr_sequencia	
		and	a.ie_tipo_item 		= '20'
		and	doc_p.nm_tabela       	= 'PLS_MENSALIDADE_SEG_ITEM'
		and     doc_p.nm_atributo     	= 'VL_ITEM'
		group by a.cd_conta_deb,
			coalesce(a.cd_conta_contabil_ppcng, a.cd_conta_rec),
			a.cd_historico,
			coalesce(a.cd_historico_ppcng, a.cd_historico),
			d.ie_cancelamento,
			a.cd_centro_custo,
			f.nr_sequencia,
			a.cd_conta_ato_cooperado,
			a.cd_conta_ato_auxiliar,
			a.cd_conta_ato_nao_coop,
			a.nr_seq_tipo_lanc,
			d.nr_seq_pagador,
			substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255),
			d.nr_sequencia,
			a.nr_seq_item_cancel,
			f.dt_mesano_referencia,
			a.nr_seq_esquema,
			c.nr_seq_contrato,
			a.vl_ato_cooperado,
			a.vl_ato_auxiliar,
			a.vl_ato_nao_cooperado,
			a.nr_sequencia
		
union all

		select	CASE WHEN ie_contab_nf_mens_w='S' THEN a.cd_conta_deb WHEN ie_contab_nf_mens_w='SR' THEN a.cd_conta_antec_baixa END  cd_conta_debito,
			a.cd_conta_rec_antecip cd_conta_credito,
			a.cd_historico cd_historico_deb,
			coalesce(a.cd_historico_ppcng, a.cd_historico) cd_historico_cred,
			substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
			a.nr_seq_regra_ctb_mensal_deb nr_seq_regra_deb,
			a.nr_seq_regra_ctb_mensal nr_seq_regra_cred,
			a.ie_tipo_item ie_tipo_item,
			CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
			d.ie_cancelamento ie_cancelamento,
			a.cd_centro_custo cd_centro_custo,
			f.nr_sequencia nr_seq_lote_mensalidade,
			a.cd_conta_ato_cooperado cd_conta_ato_cooperado,
			a.cd_conta_ato_auxiliar cd_conta_ato_auxiliar,
			a.cd_conta_ato_nao_coop cd_conta_ato_nao_coop,
			a.nr_seq_tipo_lanc nr_seq_tipo_lanc,
			d.nr_seq_pagador nr_seq_pagador,
			substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
			null nr_protocolo,
			d.nr_sequencia nr_seq_mensalidade,
			a.nr_seq_item_cancel,
			f.dt_mesano_referencia dt_referencia_lote,
			a.nr_seq_vinculo_sca,
			a.nr_seq_esquema nr_seq_esquema,
			null nr_seq_conta,
			c.nr_seq_contrato,
			a.vl_ato_cooperado,
			a.vl_ato_auxiliar,
			a.vl_ato_nao_cooperado,
			a.nr_sequencia
		from	pls_mensalidade_seg_item	a,
			pls_mensalidade_segurado	b,
			pls_segurado			c,
			pls_mensalidade			d,
			pls_lote_mensalidade		f,
			pls_plano			g
		where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
		and	c.nr_sequencia		= b.nr_seq_segurado
		and	d.nr_sequencia		= b.nr_seq_mensalidade
		and	g.nr_sequencia		= b.nr_seq_plano
		and	f.nr_sequencia		= d.nr_seq_lote
		and     doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
		and     doc_p.nm_atributo	= 'VL_NOTA'
		and     doc_p.nr_documento	= f.nr_sequencia
		and     doc_p.nr_seq_doc_compl	= d.nr_sequencia
		and     doc_p.nr_doc_analitico	= a.nr_sequencia
		
union all

		select	a.cd_conta_rec_antecip cd_conta_debito,
			a.cd_conta_antec_baixa cd_conta_credito,
			a.cd_historico cd_historico_deb,
			coalesce(a.cd_historico_ppcng, a.cd_historico) cd_historico_cred,
			substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
			a.nr_seq_regra_ctb_mensal_deb nr_seq_regra_deb,
			a.nr_seq_regra_ctb_mensal nr_seq_regra_cred,
			a.ie_tipo_item ie_tipo_item,
			CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
			d.ie_cancelamento ie_cancelamento,
			a.cd_centro_custo cd_centro_custo,
			f.nr_sequencia nr_seq_lote_mensalidade,
			a.cd_conta_ato_cooperado cd_conta_ato_cooperado,
			a.cd_conta_ato_auxiliar cd_conta_ato_auxiliar,
			a.cd_conta_ato_nao_coop cd_conta_ato_nao_coop,
			a.nr_seq_tipo_lanc nr_seq_tipo_lanc,
			d.nr_seq_pagador nr_seq_pagador,
			substr(pls_obter_dados_segurado(c.nr_sequencia,'N'),1,255) nm_segurado,
			null nr_protocolo,
			d.nr_sequencia nr_seq_mensalidade,
			a.nr_seq_item_cancel,
			f.dt_mesano_referencia dt_referencia_lote,
			a.nr_seq_vinculo_sca nr_seq_vinculo_sca,
			a.nr_seq_esquema nr_seq_esquema,
			null nr_seq_conta,
			c.nr_seq_contrato,
			a.vl_ato_cooperado,
			a.vl_ato_auxiliar,
			a.vl_ato_nao_cooperado,
			a.nr_sequencia
		from	pls_mensalidade_seg_item	a,
			pls_mensalidade_segurado	b,
			pls_segurado			c,
			pls_mensalidade			d,
			pls_lote_mensalidade		f,
			pls_plano			g
		where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
		and	c.nr_sequencia		= b.nr_seq_segurado
		and	d.nr_sequencia		= b.nr_seq_mensalidade
		and	g.nr_sequencia		= b.nr_seq_plano
		and	f.nr_sequencia		= d.nr_seq_lote
		and	doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
		and	doc_p.nm_atributo	= 'VL_NOTA_REV'
		and	doc_p.nr_documento	= f.nr_sequencia
		and	doc_p.nr_seq_doc_compl	= d.nr_sequencia
		and	doc_p.nr_doc_analitico	= a.nr_sequencia) alias40;
	exception when no_data_found then
	/* Salva a inconsistencia: "Nao foi possivel identificar o movimento de origem." */

	select 	obter_desc_expressao(950251)
	into STRICT	doc_p.ds_inconsistencia
	;
	return;
	end;

	if (trunc(doc_p.dt_competencia) > trunc(clock_timestamp())) then
		return;
	elsif (trunc(doc_p.dt_competencia) < trunc(clock_timestamp())) then
		/* Salva a inconsistencia: "Movimento gerado apos a competencia de contabilizacao"*/

		select 	obter_desc_expressao(950249)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;
	
	ie_inconsistencia_w := 'N';

	/* Select que ira verificar se todos os registros da tabela PLS_CONTA_POS_ESTABELECIDO/PLS_CONTA_COPARTICIPACAO possuem contas contabeis
	e historico. A contabilizacao so devera ser feita se todos os itens possuirem as contas contabeis.*/
	if (doc_p.nm_atributo in ('VL_POS_ESTABELECIDO', 'VL_COPARTICIPACAO')) then
		select 	max(ie_inconsistencia) -- Max = 'S' (So pode ser 'S' ou 'N'). Se houver algum que seja SIM, o max sera SIM.
		into STRICT	ie_inconsistencia_w
		from (SELECT	coalesce(max('S'), 'N') ie_inconsistencia	
			from	pls_mensalidade_item_conta	j,
				pls_lote_mensalidade		i,
				pls_mensalidade			a,
				pls_mensalidade_segurado	b,
				pls_mensalidade_seg_item	c,
				pls_conta			d,
				pls_conta_pos_estabelecido	f,
				pls_protocolo_conta		e,
				pls_segurado			g
			where	a.nr_sequencia		= b.nr_seq_mensalidade
			and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
			and	d.nr_sequencia		= c.nr_seq_conta
			and	d.nr_sequencia		= f.nr_seq_conta
			and	g.nr_sequencia		= b.nr_seq_segurado
			and	i.nr_sequencia		= a.nr_seq_lote
			and	e.nr_sequencia		= d.nr_seq_protocolo
			and	f.nr_sequencia		= j.nr_seq_conta_pos_estab
			and	c.nr_sequencia		= j.nr_seq_item
			and     doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
			and     doc_p.nm_atributo	= 'VL_POS_ESTABELECIDO'
			and     doc_p.nr_documento	= i.nr_sequencia
			and     doc_p.nr_seq_doc_compl	= a.nr_sequencia
			and     doc_p.nr_doc_analitico	= c.nr_sequencia
			and (coalesce(f.cd_conta_deb::text, '') = ''
			or 	coalesce(coalesce(c.cd_conta_contabil_ppcng, f.cd_conta_cred)::text, '') = ''
			or	coalesce(f.cd_historico::text, '') = ''
			or	coalesce(coalesce(c.cd_historico_ppcng, f.cd_historico)::text, '') = '')
			
union

			SELECT	coalesce(max('S'), 'N') ie_inconsistencia
			from	pls_mensalidade_item_conta	j,
				pls_lote_mensalidade		i,
				pls_mensalidade			a,
				pls_mensalidade_segurado	b,
				pls_mensalidade_seg_item	c,
				pls_conta			d,
				pls_conta_coparticipacao	f,
				pls_protocolo_conta		e,
				pls_segurado			g,
				pls_plano			h
			where	j.nr_seq_conta_copartic	= f.nr_sequencia
			and	j.nr_seq_item		= c.nr_sequencia
			and	a.nr_sequencia		= b.nr_seq_mensalidade
			and	b.nr_sequencia		= c.nr_seq_mensalidade_seg
			and	d.nr_sequencia		= c.nr_seq_conta
			and	d.nr_sequencia		= f.nr_seq_conta
			and	g.nr_sequencia		= b.nr_seq_segurado
			and	h.nr_sequencia		= b.nr_seq_plano
			and	i.nr_sequencia		= a.nr_seq_lote
			and	e.nr_sequencia		= d.nr_seq_protocolo
			and	doc_p.nm_tabela		= 'PLS_MENSALIDADE_SEG_ITEM'
			and	doc_p.nm_atributo	= 'VL_COPARTICIPACAO'
			and	doc_p.nr_documento	= i.nr_sequencia
			and	doc_p.nr_seq_doc_compl	= a.nr_sequencia
			and	doc_p.nr_doc_analitico	= c.nr_sequencia
			and (coalesce(f.cd_conta_deb::text, '') = ''
			or	coalesce(coalesce(c.cd_conta_contabil_ppcng, f.cd_conta_cred)::text, '') = ''
			or	coalesce(f.cd_historico::text, '') = ''
			or	coalesce(coalesce(c.cd_historico_ppcng, f.cd_historico)::text, '') = '')) alias21;
	end if;

	if (ie_inconsistencia_w = 'S') then
		/* Salva a inconsistencia: "Conta nao encontrada" */

		select 	obter_desc_expressao(330747)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;
	ie_entrou_cursor_w := 'N';
	
	open c_tipo_movimento;
	loop
	fetch c_tipo_movimento into
	doc_p.vl_movimento,
	cd_conta_deb_w,
	cd_conta_cred_w,
	cd_historico_deb_w,
	cd_historico_cred_w,
	nr_seq_regra_deb_w,
	nr_seq_regra_cred_w,
	nr_seq_copartic_w,
	cd_centro_custo_w,
	nr_seq_esquema_w;
	EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
		begin
		ie_entrou_cursor_w := 'S';
		/* Se nao houver informacoes de contas contabeis ou de historico, nao segue o processo */

		if (coalesce(cd_conta_deb_w, 'X') = 'X' or coalesce(cd_conta_cred_w, 'X') = 'X' or coalesce(cd_historico_deb_w, 0) = 0 or coalesce(cd_historico_cred_w, 0) = 0) and
			((coalesce(cd_conta_ato_auxiliar_w, 'X') = 'X' and coalesce(cd_conta_ato_cooperado_w, 'X') = 'X' and coalesce(cd_conta_ato_nao_coop_w, 'X') = 'X') and (coalesce(cd_historico_deb_w, 0) = 0) or (coalesce(cd_historico_cred_w, 0) = 0) or (coalesce(cd_conta_deb_w, 'X') = 'X')) then
			/* Salva a inconsistencia: "Conta nao encontrada" */

			select 	obter_desc_expressao(330747)
			into STRICT	doc_p.ds_inconsistencia
			;
			return;
		end if;

		if (coalesce(cd_conta_cred_w, 'X') <> 'X') then
			ie_ato_cooperado_w := 'N';
		elsif (coalesce(cd_conta_ato_auxiliar_w, 'X') <> 'X' or coalesce(cd_conta_ato_cooperado_w, 'X') <> 'X' or coalesce(cd_conta_ato_nao_coop_w, 'X') <> 'X') then
			ie_ato_cooperado_w := 'S';
		end if;

		/* Informacoes presentes no doc_p */

		dados_contab_w.dt_movimento             := doc_p.dt_competencia;
		dados_contab_w.vl_movimento             := doc_p.vl_movimento;
		dados_contab_w.cd_tipo_lote_contabil    := doc_p.cd_tipo_lote_contabil;
		dados_contab_w.cd_estabelecimento       := doc_p.cd_estabelecimento;

		/* Salva as contas contabeis em um vetor, pois sera feito um insert com cada uma delas 
		Para os movimentos de ato cooperado sera contabilizado apenas uma vez a conta de debito, porem ira inserir uma vez para cada ato
		a fim de manter a estrutura do vetor ([Debito, Credito, Debito, Credito])
		*/
		if (coalesce(ie_ato_cooperado_w, 'N') = 'N') then
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_deb_w;
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_cred_w;
		elsif (coalesce(ie_ato_cooperado_w, 'N') = 'S') then
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_deb_w;
			vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 						:= doc_p.vl_movimento;
			-- Insere um valor zerado para contabilizar corretamente ao abrir o vetor
			vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)       		:= cd_conta_deb_w;
			vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 						:= 0;
			if ((cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') and vl_ato_cooperado_w <> 0) then
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_deb_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= 0;
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_ato_cooperado_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= vl_ato_cooperado_w;
			end if;
			if ((cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') and vl_ato_auxiliar_w <> 0) then
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_deb_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= 0;
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_ato_auxiliar_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= vl_ato_auxiliar_w;
			end if;
			if ((cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') and vl_ato_nao_cooperado_w <> 0) then
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_deb_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= 0;
				vet_contas_contabeis_ppcng_w.cd_conta_contabil(vet_contas_contabeis_ppcng_w.cd_conta_contabil.count)		:= cd_conta_ato_nao_coop_w;
				vet_valores_ppcng_w.vl_movimento(vet_valores_ppcng_w.vl_movimento.count) 					:= vl_ato_nao_cooperado_w;
			end if;
		end if;

		/* Obtem o numero da nota fiscal, para o complemento historico */

		select	max(nr_sequencia)
		into STRICT	nr_seq_nota_fiscal_w
		from	nota_fiscal
		where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

		select	max(nr_nota_fiscal)
		into STRICT	nr_nota_fiscal_w
		from	nota_fiscal
		where	nr_sequencia	= nr_seq_nota_fiscal_w;

		nr_nota_fiscal_w	:= somente_numero(nr_nota_fiscal_w);

		/* Obtem os titulos, para a variavel ds_titulo_w que e utilizada no complemento historico */

		open c_titulos(nr_seq_mensalidade_w);
		loop
		fetch c_titulos into	
			c_titulos_w;
		EXIT WHEN NOT FOUND; /* apply on c_titulos */
			begin
			
			if (coalesce(nr_titulo_w,0) = 0) then
				begin
				nr_titulo_w := c_titulos_w.nr_titulo;
				end;
			end if;
			
			ds_titulo_w := substr(ds_titulo_w || c_titulos_w.nr_titulo, 0,255) || ', ';
			
			end;
		end loop;
		close c_titulos;

		if (coalesce(nr_titulo_w, 0) = 0) then
			begin
			
			open c_titulos_2(nr_seq_item_cancel_w);
			loop
			fetch c_titulos_2 into	
				c_titulos_2_w;
			EXIT WHEN NOT FOUND; /* apply on c_titulos_2 */
				begin
				
				if (coalesce(nr_titulo_w,0) = 0) then
					begin
					nr_titulo_w := c_titulos_2_w.nr_titulo;
					end;
				end if;
				
				ds_titulo_w := substr(ds_titulo_w || c_titulos_2_w.nr_titulo, 0,255) || ', ';
				
				end;
			end loop;
			close c_titulos_2;
			
			end;
		end if;

		/* Obtem o nm_pagador, para o complemento historico */

		if (coalesce(nr_titulo_w,0) > 0) then
			select	max(cd_pessoa_fisica),
				max(cd_cgc)
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w
			from	titulo_receber
			where	nr_titulo	= nr_titulo_w;
		end if;

		if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			begin
			select	ds_razao_social
			into STRICT	nm_pagador_w
			from	pessoa_juridica
			where	cd_cgc	= cd_cgc_w;
			exception
			when others then
				nm_pagador_w	:= null;
			end;
		elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			begin
			select	nm_pessoa_fisica
			into STRICT	nm_pagador_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
			exception
			when others then
				nm_pagador_w	:= null;
			end;
		else
			select (select x.nm_pessoa_fisica
				from	pessoa_fisica x
				where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
				
union all

				select	y.ds_razao_social
				from	pessoa_juridica y
				where	y.cd_cgc	= a.cd_cgc)
			into STRICT	nm_pagador_w
			from	pls_contrato_pagador a
			where	a.nr_sequencia	= nr_seq_pagador_w;
		end if;

		/* Obtem o ds_classif_sca_w, para o complemento historico */

		if (coalesce(nr_seq_vinculo_sca_w,0) > 0) then
			select	max(c.ds_classificacao)
			into STRICT	ds_classif_sca_w
			from	pls_sca_classificacao		c,
				pls_sca_vinculo			b,
				pls_plano			a
			where	a.nr_sequencia	= b.nr_seq_plano
			and	c.nr_sequencia	= a.nr_seq_classificacao
			and	b.nr_sequencia	= nr_seq_vinculo_sca_w;
		end if;

		/* Obtem o ds_grupo_w, para o complemento historico */

		if (coalesce(nr_seq_esquema_w,0) > 0) then
			select	max(b.ds_grupo)	
			into STRICT	ds_grupo_w
			from	pls_contab_mov_mens_lote	b,
				pls_esquema_contabil		a
			where	b.nr_sequencia	= a.nr_seq_movimentacao
			and	a.nr_sequencia	= nr_seq_esquema_w;
		end if;

		/* Obtem o nr_nfe_imp_w, para o complemento historico*/

		begin
		nr_nfe_imp_w	:= substr(obter_dados_titulo_receber(nr_titulo_w,'NE'),1,100);
		exception
		when others then
			nr_nfe_imp_w	:= null;
		end;

		/* Numero de agrupamento */

		nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(doc_p.cd_tipo_lote_contabil)),'NR_SEQ_MENSALIDADE');

		if (nm_agrupador_w = 'NR_SEQ_LOTE') then
			nr_seq_agrupamento_w	:= nr_seq_lote_mensalidade_w;
		elsif (nm_agrupador_w = 'NR_SEQ_PAGADOR') then
			nr_seq_agrupamento_w	:= nr_seq_pagador_w;
		elsif (nm_agrupador_w = 'NR_TITULO') then
			nr_seq_agrupamento_w	:= nr_titulo_w;
		elsif (nm_agrupador_w = 'IE_TIPO_ITEM') then
			nr_seq_agrupamento_w	:= ie_tipo_item_w;
		elsif (nm_agrupador_w   = 'NR_SEQ_MENSALIDADE')then
			nr_seq_agrupamento_w	:= nr_seq_mensalidade_w;
		elsif (ie_tipo_item_w	= '20') then
			nr_seq_agrupamento_w	:= nr_seq_tipo_lanc_w;
		elsif (ie_tipo_item_w = '3') then
			nr_seq_agrupamento_w	:= nr_seq_copartic_w;
		else
			if (coalesce(nr_seq_item_cancel_w,0) <> 0) then
				select	min(c.nr_sequencia)
				into STRICT	nr_seq_agrupamento_w
				from	pls_mensalidade c,
					pls_mensalidade_segurado b,
					pls_mensalidade_seg_item a
				where	c.nr_sequencia = b.nr_seq_mensalidade
				and	b.nr_sequencia = a.nr_seq_mensalidade_seg
				and	a.nr_sequencia = nr_seq_item_cancel_w;
			end if;
		end if;
		dados_contab_w.nr_seq_agrupamento := nr_seq_agrupamento_w;

		if (coalesce(nr_seq_contrato_w, 0) > 0) then
			select 	cd_cgc_estipulante,
				cd_pf_estipulante
			into STRICT	cd_cgc_pagador_w,
				cd_pf_pagador_w
			from 	pls_contrato
			where 	nr_sequencia = nr_seq_contrato_w;
		end if;

		ds_conteudo_cred_w	:= substr(	nr_nota_fiscal_w		||'#@'||
							cd_cgc_pagador_w		||'#@'||
							cd_pf_pagador_w			||'#@'||
							ds_titulo_w			||'#@'||
							nm_pagador_w			||'#@'||
							nr_seq_lote_mensalidade_w	||'#@'||
							nr_seq_regra_cred_w		||'#@'||
							dt_referencia_lote_w		||'#@'||
							ds_item_w			||'#@'||
							ds_classif_sca_w		||'#@'||
							ds_grupo_w			||'#@'||
							nr_seq_mensalidade_w		||'#@'||
							nr_nfe_imp_w			||'#@'||
							nm_segurado_w			||'#@'||
							nr_seq_conta_w  		||'#@'||
							nr_protocolo_w,1,4000);

		begin										
		ds_compl_historico_cred_ww	:= obter_compl_historico(doc_p.cd_tipo_lote_contabil, cd_historico_cred_w, ds_conteudo_cred_w);
		exception
		when others then
			ds_compl_historico_cred_ww	:= null;
		end;

		ds_conteudo_deb_w	:= substr(	nr_nota_fiscal_w		||'#@'||
							cd_cgc_pagador_w		||'#@'||
							cd_pf_pagador_w			||'#@'||
							ds_titulo_w			||'#@'||
							nm_pagador_w			||'#@'||
							nr_seq_lote_mensalidade_w	||'#@'||
							nr_seq_regra_deb_w		||'#@'||
							dt_referencia_lote_w		||'#@'||
							ds_item_w			||'#@'||
							ds_classif_sca_w		||'#@'||
							ds_grupo_w			||'#@'||
							nr_seq_mensalidade_w		||'#@'||
							nr_nfe_imp_w			||'#@'||
							nm_segurado_w			||'#@'||
							nr_seq_conta_w			||'#@'||
							nr_protocolo_w,1,4000);

		begin										
		ds_compl_historico_deb_ww	:= obter_compl_historico(doc_p.cd_tipo_lote_contabil, cd_historico_deb_w, ds_conteudo_deb_w);
		exception
		when others then
			ds_compl_historico_deb_ww	:= null;
		end;

		ds_compl_historico_deb_w	:= substr(ds_compl_historico_deb_ww,1,255);
		ds_compl_historico_cred_w	:= substr(ds_compl_historico_cred_ww,1,255);

		/* Armazena o valor do centro_custo, para nao perder o mesmo ao realizar as trocas no loop das contas contabeis */

		cd_centro_custo_ww := cd_centro_custo_w;

		/* Para cada conta conta contabil no vetor, verifica o centro de custo */

		for i in vet_contas_contabeis_ppcng_w.cd_conta_contabil.first..vet_contas_contabeis_ppcng_w.cd_conta_contabil.last loop
			dados_contab_w.cd_centro_custo := null;
			dados_contab_w.cd_conta_cred := null;
			dados_contab_w.cd_conta_deb := null;
			cd_centro_custo_w := null;

			if (ie_ato_cooperado_w = 'N') then
				dados_contab_w.vl_movimento := doc_p.vl_movimento;
			elsif (ie_ato_cooperado_w = 'S') then
				dados_contab_w.vl_movimento := vet_valores_ppcng_w.vl_movimento(i);
			end if;

			/* Centro de custo */

			select	coalesce(max(ie_centro_custo), 'N')
			into STRICT	ie_centro_custo_w
			from	conta_contabil
			where	cd_conta_contabil = vet_contas_contabeis_ppcng_w.cd_conta_contabil(i);

			if (coalesce(ie_centro_custo_w,'N') = 'N') then
				cd_centro_custo_w	:= null;
			else
				cd_centro_custo_w	:= cd_centro_custo_ww;
			end if;
			dados_contab_w.cd_centro_custo := cd_centro_custo_w;

			/* O primeiro elemento sera a conta de debito, o segundo sera credito. Segue alterando caso haja mais de 1 conta de cada tipo
			Ex: [Cd_conta_debito, cd_conta_credito, cd_conta_debito, cd_conta_credito] */
			if (mod(i, 2) = 0) then
				dados_contab_w.cd_conta_deb    		:= vet_contas_contabeis_ppcng_w.cd_conta_contabil(i);
				dados_contab_w.cd_historico     	:= cd_historico_deb_w;
				dados_contab_w.ds_compl_historico 	:= ds_compl_historico_deb_w;
			else
				dados_contab_w.cd_conta_cred     	:= vet_contas_contabeis_ppcng_w.cd_conta_contabil(i);
				dados_contab_w.cd_historico     	:= cd_historico_cred_w;
				dados_contab_w.ds_compl_historico 	:= ds_compl_historico_cred_w;
			end if;

			dados_contab_w := pls_contab_onl_lote_fin_pck.contabiliza_movimento(dados_contab_w, nm_usuario_p);
			doc_p.nr_lote_contabil := dados_contab_w.nr_lote_contabil;
		end loop;

		if (coalesce(doc_p.nr_lote_contabil, 0) <> 0) then
			if (coalesce(doc_p.ds_origem, 'X') = 'ESTORNO') then
				nr_lote_contabil_w	:= 0;
			else
				nr_lote_contabil_w	:= doc_p.nr_lote_contabil;
			end if;

			if (doc_p.nm_atributo in ('VL_ITEM', 'VL_COPARTICIPACAO', 'VL_POS_ESTABELECIDO')) then
				update	pls_mensalidade_seg_item
				set	nr_lote_contabil_ppcng 	= nr_lote_contabil_w
				where	nr_sequencia 		= nr_seq_mensalidade_seg_item_w;
			elsif (doc_p.nm_atributo = 'VL_NOTA') then
				update	pls_mensalidade_seg_item
				set	nr_lote_contab_nf	= nr_lote_contabil_w
				where	nr_sequencia		= nr_seq_mensalidade_seg_item_w;
			elsif (doc_p.nm_atributo = 'VL_NOTA_REV') then
				update	pls_mensalidade_seg_item
				set	nr_lote_contab_nf_rev	= nr_lote_contabil_w
				where	nr_sequencia		= nr_seq_mensalidade_seg_item_w;
			end if;
		end if;

		vet_contas_contabeis_ppcng_w.cd_conta_contabil.delete;
		vet_valores_ppcng_w.vl_movimento.delete;
		end;
	end loop;
	close c_tipo_movimento;

	if (coalesce(ie_entrou_cursor_w, 'S') = 'N') then
		select 	obter_desc_expressao(950251)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_contab_onl_lote_fin_pck.contab_provisao_ppcng ( doc_p INOUT ctb_documento, nm_usuario_p text) FROM PUBLIC;
