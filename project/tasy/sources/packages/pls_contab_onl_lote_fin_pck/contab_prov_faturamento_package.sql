-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_contab_onl_lote_fin_pck.contab_prov_faturamento ( doc_p INOUT ctb_documento, nm_usuario_p text) AS $body$
DECLARE


	dados_contab_w			dados_contab;
	vet_contas_contabeis_w		vet_contas_contabeis;
	cd_conta_deb_provisao_w		conta_contabil.cd_conta_contabil%type;
	cd_conta_deb_taxa_prov_w	conta_contabil.cd_conta_contabil%type;
	cd_conta_deb_dif_w		conta_contabil.cd_conta_contabil%type;
	cd_conta_deb_ndc_prov_w		conta_contabil.cd_conta_contabil%type;
	cd_conta_cred_provisao_w	conta_contabil.cd_conta_contabil%type;
	cd_conta_cred_taxa_prov_w	conta_contabil.cd_conta_contabil%type;
	cd_conta_cred_dif_w		conta_contabil.cd_conta_contabil%type;
	cd_conta_cred_ndc_prov_w	conta_contabil.cd_conta_contabil%type;
	cd_historico_provisao_w		historico_padrao.cd_historico%type;
	cd_historico_taxa_prov_w	historico_padrao.cd_historico%type;
	cd_historico_dif_w		historico_padrao.cd_historico%type;
	cd_historico_ajuste_w		historico_padrao.cd_historico%type;
	cd_historico_ndc_prov_w		historico_padrao.cd_historico%type;
	cd_conta_deb_w			conta_contabil.cd_conta_contabil%type;
	cd_conta_cred_w			conta_contabil.cd_conta_contabil%type;
	cd_historico_w			historico_padrao.cd_historico%type;
	nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
	nr_seq_plano_w			pls_plano.nr_sequencia%type;
	ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
	nr_seq_prestador_w		pls_conta.nr_seq_prestador_exec%type;
	nr_seq_segurado_w		pls_conta.nr_seq_segurado%type;
	cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
	cd_cgc_prestador_w		pessoa_juridica.cd_cgc%type;
	cd_cpf_prestador_w		pessoa_fisica.nr_cpf%type;
	nr_nota_fiscal_w		pls_prot_conta_titulo.nr_nota_fiscal%type;
	nr_seq_prot_conta_w		pls_conta.nr_seq_prot_conta%type;
	nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;
	nr_fatura_w			pls_fatura.nr_fatura%type;
	nr_seq_conta_pos_w		pls_conta_pos_estabelecido.nr_sequencia%type;
	cd_centro_custo_w		centro_custo.cd_centro_custo%type;
	nr_seq_regra_cc_w		pls_regra_centro_custo.nr_sequencia%type;
	nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
	nr_seq_conta_w			pls_conta.nr_sequencia%type;
	nr_seq_protocolo_w		pls_conta.nr_seq_protocolo%type;
	nm_prestador_pgto_w		pls_conta_medica_resumo.nm_prestador_pgto%type;
	nm_pagador_w			varchar(80);
	nm_prestador_w			varchar(255);
	ds_compl_historico_w		varchar(255);
	nm_segurado_w			varchar(255);
	nm_agrupador_w			varchar(255);
	ds_conteudo_w			varchar(4000);
	qt_atrib_hist_pad_w		integer;
	
BEGIN

	begin
	select	e.cd_conta_deb_provisao,
		e.cd_conta_deb_taxa_prov,
		e.cd_conta_deb_dif,
		e.cd_conta_deb_ndc_prov,
		e.cd_conta_cred_provisao,
		e.cd_conta_cred_taxa_prov,
		e.cd_conta_cred_dif,
		e.cd_conta_cred_ndc_prov,
		e.cd_historico_provisao,
		e.cd_historico_taxa_prov,
		e.cd_historico_dif,
		e.cd_historico_ajuste,
		e.cd_historico_ndc_prov,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_protocolo,
		b.nr_seq_prestador_exec,
		b.nr_seq_prot_conta,
		b.nr_seq_plano,
		coalesce((	select	max(r.nm_prestador_pgto)
			from	pls_conta_medica_resumo r
			where	b.nr_sequencia	= r.nr_seq_conta
			and	r.nr_sequencia	= e.nr_seq_conta_resumo ), b.nr_seq_prestador_exec) nm_prestador_pgto,
		substr(pls_obter_dados_segurado(b.nr_seq_segurado,'N'),1,255) nm_segurado,
		d.nr_sequencia nr_seq_conta_pos
	into STRICT	cd_conta_deb_provisao_w,
		cd_conta_deb_taxa_prov_w,
		cd_conta_deb_dif_w,
		cd_conta_deb_ndc_prov_w,
		cd_conta_cred_provisao_w,
		cd_conta_cred_taxa_prov_w,
		cd_conta_cred_dif_w,
		cd_conta_cred_ndc_prov_w,
		cd_historico_provisao_w,
		cd_historico_taxa_prov_w,
		cd_historico_dif_w,
		cd_historico_ajuste_w,
		cd_historico_ndc_prov_w,
		nr_seq_conta_w,
		nr_seq_segurado_w,
		nr_seq_protocolo_w,
		nr_seq_prestador_w,
		nr_seq_prot_conta_w,
		nr_seq_plano_w,
		nm_prestador_pgto_w,
		nm_segurado_w,
		nr_seq_conta_pos_w
	from	pls_log_pos_estabelecido	f,
		pls_conta_pos_estab_contab 	e,
		pls_conta_pos_estabelecido	d,
		pls_conta			b,
		pls_protocolo_conta		a,
		pls_segurado			s
	where	d.nr_sequencia		= f.nr_seq_conta_pos
	and	b.nr_sequencia		= f.nr_seq_conta
	and	d.nr_sequencia		= e.nr_seq_conta_pos
	and	b.nr_sequencia		= d.nr_seq_conta
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	s.nr_sequencia 		= b.nr_seq_segurado
	and	doc_p.nr_documento	= d.nr_sequencia
	and	doc_p.nr_seq_doc_compl	= e.nr_sequencia
	and	doc_p.nr_doc_analitico	= f.nr_sequencia
	and	doc_p.nm_tabela		= 'PLS_CONTA_POS_ESTABELECIDO'
	and	doc_p.nm_atributo	in ('VL_LIBERADO', 'VL_ADMINISTRACAO', 'VL_DIFERENCA', 'VL_REEMBOLSO', 'VL_AJUSTE');
	exception when no_data_found then
	/* Salva a inconsistencia: "Nao foi possivel identificar o movimento de origem." */

	select 	obter_desc_expressao(950251)
	into STRICT	doc_p.ds_inconsistencia
	;
	return;
	end;

	if (doc_p.nm_atributo = 'VL_LIBERADO') then
		cd_conta_deb_w 	:= coalesce(cd_conta_deb_provisao_w, 'X');
		cd_conta_cred_w := coalesce(cd_conta_cred_provisao_w, 'X');
		cd_historico_w	:= coalesce(cd_historico_provisao_w,0);
	elsif (doc_p.nm_atributo = 'VL_ADMINISTRACAO') then
		cd_conta_deb_w 	:= coalesce(cd_conta_deb_taxa_prov_w, 'X');
		cd_conta_cred_w := coalesce(cd_conta_cred_taxa_prov_w, 'X');
		cd_historico_w	:= coalesce(cd_historico_taxa_prov_w, 0);
	elsif (doc_p.nm_atributo = 'VL_DIFERENCA') then
		cd_conta_deb_w 	:= coalesce(cd_conta_deb_dif_w, 'X');
		cd_conta_cred_w := coalesce(cd_conta_cred_dif_w, 'X');
		cd_historico_w	:= coalesce(cd_historico_dif_w, 0);
	elsif (doc_p.nm_atributo = 'VL_REEMBOLSO') then
		cd_conta_deb_w 	:= coalesce(cd_conta_deb_ndc_prov_w, 'X');
		cd_conta_cred_w := coalesce(cd_conta_cred_ndc_prov_w, 'X');
		cd_historico_w	:= coalesce(cd_historico_ndc_prov_w, 0);
	elsif (doc_p.nm_atributo = 'VL_AJUSTE') then
		cd_conta_deb_w 	:= coalesce(cd_conta_deb_ndc_prov_w, 'X');
		cd_conta_cred_w := coalesce(cd_conta_cred_provisao_w, 'X');
		cd_historico_w	:= coalesce(cd_historico_ajuste_w, 0);
	end if;

	/* Se nao houver informacoes de contas contabeis ou de historico, nao segue o processo */

	if (cd_conta_deb_w = 'X' or cd_conta_cred_w = 'X' or cd_historico_w = 0) then
		/* Salva a inconsistencia: "Conta nao encontrada" */

		select 	obter_desc_expressao(330747)
		into STRICT	doc_p.ds_inconsistencia
		;
		return;
	end if;

	/* Informacoes presentes no doc_p */

	dados_contab_w.dt_movimento             := doc_p.dt_competencia;
	dados_contab_w.vl_movimento             := doc_p.vl_movimento;
	dados_contab_w.cd_tipo_lote_contabil    := doc_p.cd_tipo_lote_contabil;
	dados_contab_w.cd_estabelecimento       := doc_p.cd_estabelecimento;
	dados_contab_w.cd_historico		:= cd_historico_w;

	/* Numero de agrupamento */

	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(doc_p.cd_tipo_lote_contabil)),'NR_SEQ_CONTA');
	if (nm_agrupador_w = 'NR_SEQ_CONTA') then
		nr_seq_agrupamento_w	:= nr_seq_conta_w;
	elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO') then
		nr_seq_agrupamento_w	:= nr_seq_protocolo_w;
	end if;
	dados_contab_w.nr_seq_agrupamento 	:= nr_seq_agrupamento_w;

	/* Informacoes para obtencao do centro de custo */

	if (coalesce(nr_seq_plano_w::text, '') = '') then
		begin
		select	b.ie_regulamentacao,
			b.nr_sequencia
		into STRICT	ie_regulamentacao_w,
			nr_seq_plano_w
		from	pls_segurado	a,
			pls_plano	b
		where	b.nr_sequencia	= a.nr_seq_plano
		and	a.nr_sequencia	= nr_seq_segurado_w;
		exception
		when others then
			ie_regulamentacao_w	:= null;
			nr_seq_plano_w		:= null;
		end;
	else
		begin
		select	b.ie_regulamentacao
		into STRICT	ie_regulamentacao_w
		from	pls_plano	b
		where	b.nr_sequencia	= nr_seq_plano_w;
		exception
		when others then
			ie_regulamentacao_w	:= null;
		end;
	end if;

	/* Verifica se existe algum atributo cadastrado para aquele historico, levando em consideracao o tipo de lote contabil e estabelecimento/empresa */

	select  count(1)
	into STRICT    qt_atrib_hist_pad_w
	from    historico_padrao_atributo   c,
		historico_padrao            b,
		estabelecimento             a
	where   a.cd_estabelecimento    = doc_p.cd_estabelecimento
	and     a.cd_empresa            = b.cd_empresa
	and     b.cd_historico          = c.cd_historico
	and     c.cd_historico          = cd_historico_w
	and     c.cd_tipo_lote_contabil = doc_p.cd_tipo_lote_contabil;

	if (qt_atrib_hist_pad_w > 0) then

		/* Montagem do complemento historico */

		if (coalesce(nr_seq_prestador_w,0) > 0) then
			select	a.cd_pessoa_fisica,
				a.cd_cgc
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_prestador_w
			from	pls_prestador	a
			where	a.nr_sequencia	= nr_seq_prestador_w;
			
			begin
			nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
			exception
			when others then
				nm_prestador_w	:= null;
			end;
			
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				select	nr_cpf
				into STRICT	cd_cpf_prestador_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
			end if;
		end if;
		
		select	max(nr_nota_fiscal)
		into STRICT	nr_nota_fiscal_w
		from	pls_prot_conta_titulo
		where	nr_sequencia	= nr_seq_prot_conta_w;
		
		select	max(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc)),
			max(b.nr_seq_pagador)
		into STRICT	nm_pagador_w,
			nr_seq_pagador_w
		from	pls_contrato_pagador a,
			pls_segurado b
		where	a.nr_sequencia	= b.nr_seq_pagador
		and	b.nr_sequencia	= nr_seq_segurado_w;
		
		select	max(nr_fatura)
		into STRICT	nr_fatura_w
		from (SELECT	e.nr_fatura
			from	pls_conta_pos_estabelecido a,
				pls_fatura_proc b,
				pls_fatura_conta c,
				pls_fatura_evento d,
				pls_fatura e
			where	a.nr_sequencia = b.nr_seq_conta_pos_estab
			and	c.nr_sequencia = b.nr_seq_fatura_conta
			and	d.nr_sequencia = c.nr_seq_fatura_evento
			and	e.nr_sequencia = d.nr_seq_fatura
			and	a.nr_sequencia = nr_seq_conta_pos_w
			
union all

			SELECT	e.nr_fatura
			from	pls_conta_pos_estabelecido a,
				pls_fatura_mat b,
				pls_fatura_conta c,
				pls_fatura_evento d,
				pls_fatura e
			where	a.nr_sequencia = b.nr_seq_conta_pos_estab
			and	c.nr_sequencia = b.nr_seq_fatura_conta
			and	d.nr_sequencia = c.nr_seq_fatura_evento
			and	e.nr_sequencia = d.nr_seq_fatura
			and	a.nr_sequencia = nr_seq_conta_pos_w) alias1;
		
		ds_conteudo_w	:= substr(	nr_seq_prestador_w	||'#@'||
						nm_prestador_w		||'#@'||
						nr_seq_protocolo_w	||'#@'||
						nr_seq_conta_w		||'#@'||
						cd_cgc_prestador_w	||'#@'||
						cd_cpf_prestador_w	||'#@'||
						nr_nota_fiscal_w	||'#@'||
						nr_seq_pagador_w	||'#@'||
						nm_prestador_pgto_w	||'#@'||
						nm_segurado_w		||'#@'||
						nr_fatura_w		||'#@'||
						nm_pagador_w, 1,4000);
		
		begin
		ds_compl_historico_w	:= substr(obter_compl_historico(doc_p.cd_tipo_lote_contabil, dados_contab_w.cd_historico, ds_conteudo_w),1,255);
		exception
		when others then
			ds_compl_historico_w	:= null;
		end;
					
		dados_contab_w.ds_compl_historico	:= substr(ds_compl_historico_w,1,255);
	end if;

	/* Salva as contas contabeis em um vetor, pois sera feito um insert com cada uma delas*/

	vet_contas_contabeis_w := vet_contas_contabeis();
	vet_contas_contabeis_w.extend(2);
	vet_contas_contabeis_w(1)       := cd_conta_cred_w;
	vet_contas_contabeis_w(2)       := cd_conta_deb_w;

	/* Para cada conta conta contabil no vetor, verifica o centro de custo */

	for i in 1..vet_contas_contabeis_w.count loop
		dados_contab_w.cd_centro_custo := null;
		dados_contab_w.cd_conta_cred := null;
		dados_contab_w.cd_conta_deb := null;
		cd_centro_custo_w := null;

		/* Centro de custo */

		SELECT * FROM pls_contab_onl_lote_fin_pck.verifica_centro_custo(  'D', nr_seq_plano_w, doc_p.cd_estabelecimento, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_w, nr_seq_regra_cc_w, coalesce(vet_contas_contabeis_w(i), 'X')) INTO STRICT cd_centro_custo_w, nr_seq_regra_cc_w;
		dados_contab_w.cd_centro_custo := cd_centro_custo_w;

		/* Segue a ordem das atribuicoes feitas no vetor */

		if (i = 1) then
			dados_contab_w.cd_conta_cred := vet_contas_contabeis_w(i);
		elsif (i = 2) then
			dados_contab_w.cd_conta_deb := vet_contas_contabeis_w(i);
		end if;

		dados_contab_w := pls_contab_onl_lote_fin_pck.contabiliza_movimento(dados_contab_w, nm_usuario_p);
		doc_p.nr_lote_contabil := dados_contab_w.nr_lote_contabil;
	end loop;

	if (coalesce(doc_p.nr_lote_contabil, 0) <> 0) then
		if (coalesce(doc_p.ds_origem, 'X') = 'ESTORNO') then
			nr_lote_contabil_w := 0;
		else
			nr_lote_contabil_w := doc_p.nr_lote_contabil;
		end if;

		update	pls_conta_pos_estab_contab	a
		set	a.nr_lote_contabil_prov		= nr_lote_contabil_w
		where	a.nr_sequencia			= doc_p.nr_seq_doc_compl;

		update	pls_log_pos_estabelecido	a
		set	a.nr_lote_contabil		= doc_p.nr_lote_contabil
		where	nr_sequencia			= doc_p.nr_doc_analitico;
	end if;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_contab_onl_lote_fin_pck.contab_prov_faturamento ( doc_p INOUT ctb_documento, nm_usuario_p text) FROM PUBLIC;
