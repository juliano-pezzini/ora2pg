-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_preco_beneficiario_pck.obter_valores_preco ( nr_seq_plano_preco_p pls_plano_preco.nr_sequencia%type, dt_preco_p timestamp, ie_acao_p pls_segurado_preco.cd_motivo_reajuste%type, nr_seq_reajuste_p pls_reajuste.nr_sequencia%type, qt_reajuste_indice_futuro_p bigint, nr_seq_regra_susp_reaj_fx_p pls_segurado_preco.nr_seq_regra_susp_reaj_fx%type, nr_seq_reaj_preco_p INOUT pls_reajuste_preco.nr_sequencia%type, vl_preco_atual_p INOUT pls_plano_preco.vl_preco_atual%type, vl_preco_nao_subsid_p INOUT pls_plano_preco.vl_preco_nao_subsid_atual%type, vl_minimo_p INOUT pls_plano_preco.vl_minimo%type, vl_adaptacao_p INOUT pls_plano_preco.vl_adaptacao%type, tx_acrescimo_p INOUT pls_plano_preco.tx_acrescimo%type) AS $body$
DECLARE


nr_seq_reaj_futuro_w 	pls_reajuste_preco.nr_sequencia%type;
ie_preco_base_w		varchar(1);

BEGIN

select	min(nr_sequencia)
into STRICT	nr_seq_reaj_futuro_w
from	pls_reajuste_preco
where	nr_seq_preco	= nr_seq_plano_preco_p
and	dt_reajuste	> dt_preco_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

if 	((coalesce(nr_seq_reaj_futuro_w::text, '') = '') or (nr_seq_reajuste_p IS NOT NULL AND nr_seq_reajuste_p::text <> '')/* Quando o preco que esta sendo gerado e referente a reajuste de indice, deve sempre buscar o valor da pls_plano_preco */
) then
	select	coalesce(vl_preco_atual, 0),
		coalesce(vl_preco_nao_subsid_atual, 0),
		coalesce(vl_minimo, 0),
		coalesce(vl_adaptacao, 0),
		coalesce(tx_acrescimo, 0)
	into STRICT	vl_preco_atual_p,
		vl_preco_nao_subsid_p,
		vl_minimo_p,
		vl_adaptacao_p,
		tx_acrescimo_p
	from	pls_plano_preco
	where	nr_sequencia = nr_seq_plano_preco_p;
else
	if (nr_seq_regra_susp_reaj_fx_p IS NOT NULL AND nr_seq_regra_susp_reaj_fx_p::text <> '') and (qt_reajuste_indice_futuro_p > 0) then
		ie_preco_base_w	:= 'N';
	else
		ie_preco_base_w	:= 'S';
	end if;
	
	select 	CASE WHEN ie_preco_base_w='S' THEN  coalesce(a.vl_base, 0)  ELSE coalesce(a.vl_reajustado,0) END ,
		coalesce(a.vl_preco_nao_subsid_base, 0),
		coalesce(a.vl_minimo_base, 0),
		coalesce(a.vl_adaptacao_base, 0),
		coalesce(b.tx_acrescimo, 0)
	into STRICT	vl_preco_atual_p,
		vl_preco_nao_subsid_p,
		vl_minimo_p,
		vl_adaptacao_p,
		tx_acrescimo_p
	from	pls_reajuste_preco a,
		pls_plano_preco b
	where	b.nr_sequencia	= a.nr_seq_preco
	and	a.nr_sequencia	= nr_seq_reaj_futuro_w;
end if;

if (ie_acao_p = 'E') and (nr_seq_regra_susp_reaj_fx_p IS NOT NULL AND nr_seq_regra_susp_reaj_fx_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_reaj_preco_p
	from	pls_reajuste_preco
	where	nr_seq_preco  = nr_seq_plano_preco_p
	and	dt_reajuste <= add_months(dt_preco_p,1)
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_reaj_preco_p
	from	pls_reajuste_preco
	where	nr_seq_preco  = nr_seq_plano_preco_p
	and	dt_reajuste <= dt_preco_p
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_preco_beneficiario_pck.obter_valores_preco ( nr_seq_plano_preco_p pls_plano_preco.nr_sequencia%type, dt_preco_p timestamp, ie_acao_p pls_segurado_preco.cd_motivo_reajuste%type, nr_seq_reajuste_p pls_reajuste.nr_sequencia%type, qt_reajuste_indice_futuro_p bigint, nr_seq_regra_susp_reaj_fx_p pls_segurado_preco.nr_seq_regra_susp_reaj_fx%type, nr_seq_reaj_preco_p INOUT pls_reajuste_preco.nr_sequencia%type, vl_preco_atual_p INOUT pls_plano_preco.vl_preco_atual%type, vl_preco_nao_subsid_p INOUT pls_plano_preco.vl_preco_nao_subsid_atual%type, vl_minimo_p INOUT pls_plano_preco.vl_minimo%type, vl_adaptacao_p INOUT pls_plano_preco.vl_adaptacao%type, tx_acrescimo_p INOUT pls_plano_preco.tx_acrescimo%type) FROM PUBLIC;
