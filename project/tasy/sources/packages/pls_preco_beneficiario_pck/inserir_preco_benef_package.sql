-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_preco_beneficiario_pck.inserir_preco_benef (nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_acao_p text, ie_liberado_p text, dt_preco_p pls_segurado_preco.dt_reajuste%type, ie_commit_p text, ds_observacao_p pls_segurado_preco.ds_observacao%type, dt_referencia_mens_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_reajuste_p pls_reajuste.nr_sequencia%type, nr_seq_reaj_seg_p pls_lote_reaj_segurado.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_idade_p bigint, nr_seq_regra_susp_reaj_fx_p pls_susp_reaj_fx_etaria.nr_sequencia%type, nr_seq_lote_mens_p pls_lote_mensalidade.nr_sequencia%type, ie_gerar_preco_ant_p text, nr_seq_seg_preco_p INOUT pls_segurado_preco.nr_sequencia%type) AS $body$
DECLARE


ie_grau_parentesco_w		pls_segurado.ie_tipo_parentesco%type;
dt_nascimento_w			pessoa_fisica.dt_nascimento%type;
qt_idade_w			bigint;
nr_seq_tabela_w			pls_segurado.nr_seq_tabela%type;
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
vl_preco_atual_w		double precision;
vl_preco_nao_subsid_w		double precision;
vl_preco_nao_subsid_ant_w	double precision;
vl_minimo_w			double precision;
vl_adaptacao_w			double precision;
dt_liberacao_w			pls_segurado_preco.dt_liberacao%type	:= null;
nm_usuario_liberacao_w		usuario.nm_usuario%type			:= null;
nr_seq_reaj_preco_w		pls_reajuste_preco.nr_sequencia%type;
ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
ie_calculo_vidas_w		pls_tabela_preco.ie_calculo_vidas%type;
qt_vidas_w			bigint;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
ie_reaj_idade_limite_pre_w	varchar(1);
ie_data_ref_reaj_adaptado_w	varchar(1);
qt_idade_limite_reaj_w		bigint;
qt_anos_limite_reaj_w		bigint;
qt_idade_operadora_w		bigint;
dt_base_inclusao_w		timestamp;
dt_inclusao_operadora_w		pls_segurado.dt_inclusao_operadora%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
qt_idade_adesao_w		bigint;
ds_observacao_w			pls_segurado_preco.ds_observacao%type;
nr_seq_regra_desc_w		pls_regra_desconto.nr_sequencia%type;
nr_seq_regra_desc_ant_w		pls_regra_desconto.nr_sequencia%type;
vl_desconto_w			pls_segurado_preco.vl_desconto%type;
vl_preco_ant_w			pls_segurado_preco.vl_preco_ant%type;
nr_seq_seg_preco_w		pls_segurado_preco.nr_sequencia%type;
nr_seq_plano_preco_ant_w	pls_plano_preco.nr_sequencia%type;
nr_seq_reaj_preco_ant_w		pls_reajuste_preco.nr_sequencia%type;
dt_aniversario_w		timestamp;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;
pr_reajuste_w			pls_reajuste_preco.pr_reajustado%type;
vl_reajuste_w			double precision;
ds_indice_w			varchar(255);
nr_seq_seg_preco_ant_w		pls_segurado_preco.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_classif_dependencia_w	pls_classif_dependencia.nr_sequencia%type;
nr_seq_regra_aprop_w		pls_regra_apropriacao.nr_sequencia%type;
nr_seq_processo_w		processo_judicial_liminar.nr_sequencia%type;
ie_situacao_preco_w		pls_segurado_preco.ie_situacao%type;
nr_seq_regra_apr_ant_w		pls_regra_apropriacao.nr_sequencia%type;
nr_seq_tabela_ant_w		pls_tabela_preco.nr_sequencia%type;
qt_idade_ant_w			bigint;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
ie_tipo_parentesco_w		grau_parentesco.ie_tipo_parentesco%type;
vl_desconto_ant_w		pls_segurado_preco.vl_desconto%type;
qt_idade_inicial_w		bigint;
qt_idade_inicial_ant_w		bigint;
qt_registros_apropriacao_w	bigint;
qt_idade_final_w		bigint;
qt_idade_final_ant_w		bigint;
nr_seq_alt_plano_w		pls_segurado_alt_plano.nr_sequencia%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
qt_idade_inicial_fx_w		pls_plano_preco.qt_idade_inicial%type;
dt_reajuste_w			timestamp;
qt_reajuste_indice_futuro_w	integer;


BEGIN
ds_observacao_w		:= ds_observacao_p;
nr_seq_processo_w	:= null;
dt_reajuste_w		:= dt_preco_p;

select	coalesce(ie_reaj_idade_limite_pre, 'S'),
	ie_data_ref_reaj_adaptado
into STRICT	ie_reaj_idade_limite_pre_w,
	ie_data_ref_reaj_adaptado_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

select	a.nr_seq_tabela,
	b.dt_nascimento,
	c.ie_regulamentacao,
	a.nr_seq_contrato,
	a.dt_inclusao_operadora,
	a.dt_contratacao,
	a.nr_seq_plano,
	a.nr_seq_classif_dependencia,
	a.nr_seq_titular,
	(	select	coalesce(max(x.ie_tipo_parentesco), '0')
		from	grau_parentesco x
		where	x.nr_sequencia	= a.nr_seq_parentesco) ie_tipo_parentesco,
	b.cd_pessoa_fisica
into STRICT	nr_seq_tabela_w,
	dt_nascimento_w,
	ie_regulamentacao_w,
	nr_seq_contrato_w,
	dt_inclusao_operadora_w,
	dt_contratacao_w,
	nr_seq_plano_w,
	nr_seq_classif_dependencia_w,
	nr_seq_titular_w,
	ie_tipo_parentesco_w,
	cd_pessoa_fisica_w
from	pls_segurado	a,
	pessoa_fisica	b,
	pls_plano	c
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	c.nr_sequencia		= a.nr_seq_plano
and	a.nr_sequencia		= nr_seq_segurado_p;

if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
	if (trunc(dt_contratacao_w,'mm') > trunc(dt_reajuste_w,'mm')) then
		dt_reajuste_w	:= dt_contratacao_w;
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_alt_plano_w
	from	pls_segurado_alt_plano
	where	nr_seq_segurado = nr_seq_segurado_p
	and	nr_seq_plano_atual = nr_seq_plano_w
	and	nr_seq_tabela_atual = nr_seq_tabela_w
	and	ie_situacao = 'A'
	and	trunc(dt_alteracao, 'mm') > trunc(dt_reajuste_w, 'mm');
	
	if (nr_seq_alt_plano_w IS NOT NULL AND nr_seq_alt_plano_w::text <> '') then
		select	nr_seq_tabela_ant,
			nr_seq_plano_ant
		into STRICT	nr_seq_tabela_w,
			nr_seq_plano_w
		from	pls_segurado_alt_plano
		where	nr_sequencia = nr_seq_alt_plano_w;
	end if;

	select	coalesce(ie_preco_vidas_contrato, 'N'),
		coalesce(ie_calculo_vidas, 'A')
	into STRICT	ie_preco_vidas_contrato_w,
		ie_calculo_vidas_w
	from	pls_tabela_preco
	where	nr_sequencia = nr_seq_tabela_w;
	
	if (pls_mensalidade_util_pck.get_ie_mes_reaj_faixa_etaria(ie_regulamentacao_w) = 'P') then
		if (ie_acao_p = 'E') then
			select	count(1)
			into STRICT	qt_reajuste_indice_futuro_w
			from	pls_segurado_preco
			where	nr_seq_segurado = nr_seq_segurado_p
			and	cd_motivo_reajuste = 'I'
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	ie_situacao = 'A'
			and	dt_reajuste = trunc(add_months(dt_reajuste_w, 1),'mm');
		elsif (ie_acao_p = 'I') then
			select	count(1)
			into STRICT	qt_reajuste_indice_futuro_w
			from	pls_segurado_preco
			where	nr_seq_segurado = nr_seq_segurado_p
			and	cd_motivo_reajuste = 'E'
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	ie_situacao = 'A'
			and	dt_reajuste = trunc(add_months(dt_reajuste_w, -1),'mm');
		else
			qt_reajuste_indice_futuro_w	:= 0;
		end if;
	else
		qt_reajuste_indice_futuro_w	:= 0;
	end if;
	
	CALL pls_preco_beneficiario_pck.consistir_faixas_tabela(nr_seq_segurado_p, nr_seq_tabela_w, ie_preco_vidas_contrato_w);
	
	CALL pls_consiste_faixa_tit_tabela(nr_seq_tabela_w);
	
	if (ie_preco_vidas_contrato_w = 'S') then
		qt_vidas_w	:= pls_obter_qt_vidas_tab_preco(nr_seq_segurado_p, ie_calculo_vidas_w, ie_acao_p);
	else
		qt_vidas_w	:= 0;
	end if;
	
	ie_grau_parentesco_w	:= coalesce(pls_obter_garu_dependencia_seg(nr_seq_segurado_p, 'C'),'X');
	
	dt_base_inclusao_w	:= pls_preco_beneficiario_pck.obter_dt_inclusao_benef(ie_regulamentacao_w, ie_data_ref_reaj_adaptado_w, dt_inclusao_operadora_w, nr_seq_segurado_p, dt_contratacao_w);
	
	qt_idade_operadora_w	:= pls_preco_beneficiario_pck.obter_idade_anos(dt_base_inclusao_w, dt_reajuste_w, nr_seq_segurado_p);
	
	pls_obter_limite_reajuste_fx(nr_seq_segurado_p, cd_estabelecimento_p, qt_idade_limite_reaj_w, qt_anos_limite_reaj_w);
	
	if (qt_idade_p IS NOT NULL AND qt_idade_p::text <> '') then
		qt_idade_w	:= qt_idade_p;
	else
		qt_idade_w	:= pls_preco_beneficiario_pck.obter_idade_anos(dt_nascimento_w, dt_reajuste_w, nr_seq_segurado_p);
		--Verificar a idade limite permitida

		
		if	((ie_reaj_idade_limite_pre_w = 'S' AND ie_regulamentacao_w = 'R') or (ie_regulamentacao_w <> 'R')) then
			if (qt_idade_w >= qt_idade_limite_reaj_w) and (qt_idade_operadora_w >= qt_anos_limite_reaj_w) then
				qt_idade_adesao_w	:= pls_preco_beneficiario_pck.obter_idade_anos(dt_nascimento_w, dt_base_inclusao_w, nr_seq_segurado_p);

				if (qt_idade_adesao_w > qt_idade_limite_reaj_w) then
					qt_idade_w	:= qt_idade_adesao_w + qt_anos_limite_reaj_w;
				else
					qt_idade_w	:= qt_idade_adesao_w + qt_anos_limite_reaj_w;
					
					if (qt_idade_w < qt_idade_limite_reaj_w) then
						qt_idade_w	:= qt_idade_limite_reaj_w - 1;
					end if;
					
					ds_observacao_w := substr(ds_observacao_w || ' - ' || wheb_mensagem_pck.get_texto(1108149),1,255);
				end if;
			end if;
		end if;
	end if;
	
	SELECT * FROM pls_preco_beneficiario_pck.obter_faixa_etaria(ie_grau_parentesco_w, nr_seq_tabela_w, qt_idade_w, qt_vidas_w, nr_seq_plano_preco_w, qt_idade_inicial_fx_w) INTO STRICT nr_seq_plano_preco_w, qt_idade_inicial_fx_w;
	
	if	((ie_acao_p = 'SF') or (coalesce(ie_gerar_preco_ant_p,'N') = 'S')) then
		qt_idade_w	:= qt_idade_inicial_fx_w-1;
		nr_seq_plano_preco_w	:= null;
		qt_idade_inicial_fx_w	:= null;
		SELECT * FROM pls_preco_beneficiario_pck.obter_faixa_etaria(ie_grau_parentesco_w, nr_seq_tabela_w, qt_idade_w, qt_vidas_w, nr_seq_plano_preco_w, qt_idade_inicial_fx_w) INTO STRICT nr_seq_plano_preco_w, qt_idade_inicial_fx_w;
	end if;
	
	if (nr_seq_plano_preco_w IS NOT NULL AND nr_seq_plano_preco_w::text <> '') then
		SELECT * FROM pls_preco_beneficiario_pck.obter_valores_preco(	nr_seq_plano_preco_w, dt_reajuste_w, ie_acao_p, nr_seq_reajuste_p, qt_reajuste_indice_futuro_w, nr_seq_regra_susp_reaj_fx_p, nr_seq_reaj_preco_w, vl_preco_atual_w, vl_preco_nao_subsid_w, vl_minimo_w, vl_adaptacao_w, tx_acrescimo_w) INTO STRICT nr_seq_reaj_preco_w, vl_preco_atual_w, vl_preco_nao_subsid_w, vl_minimo_w, vl_adaptacao_w, tx_acrescimo_w;
		
		SELECT * FROM pls_preco_beneficiario_pck.obter_valor_desconto(	nr_seq_segurado_p, nr_seq_contrato_w, dt_reajuste_w, vl_preco_atual_w, nr_seq_titular_w, ie_tipo_parentesco_w, vl_desconto_w, nr_seq_regra_desc_w) INTO STRICT vl_desconto_w, nr_seq_regra_desc_w;
		
		SELECT * FROM pls_preco_beneficiario_pck.obter_valor_anterior(	nr_seq_segurado_p, dt_reajuste_w, ie_acao_p, nr_seq_tabela_w, qt_reajuste_indice_futuro_w, nr_seq_reaj_preco_w, nr_seq_regra_susp_reaj_fx_p, nr_seq_regra_desc_ant_w, vl_preco_ant_w, nr_seq_plano_preco_ant_w, nr_seq_reaj_preco_ant_w, nr_seq_seg_preco_ant_w, nr_seq_regra_apr_ant_w, nr_seq_tabela_ant_w, qt_idade_ant_w, vl_desconto_ant_w, vl_preco_nao_subsid_ant_w) INTO STRICT nr_seq_regra_desc_ant_w, vl_preco_ant_w, nr_seq_plano_preco_ant_w, nr_seq_reaj_preco_ant_w, nr_seq_seg_preco_ant_w, nr_seq_regra_apr_ant_w, nr_seq_tabela_ant_w, qt_idade_ant_w, vl_desconto_ant_w, vl_preco_nao_subsid_ant_w;
		
		if	((ie_acao_p not in ('E','SF')) and (coalesce(ie_gerar_preco_ant_p,'N') = 'N')) then
			if	((nr_seq_tabela_w = nr_seq_tabela_ant_w) and
				((nr_seq_plano_preco_w <> nr_seq_plano_preco_ant_w) and (nr_seq_plano_preco_ant_w IS NOT NULL AND nr_seq_plano_preco_ant_w::text <> '') and (nr_seq_plano_preco_w IS NOT NULL AND nr_seq_plano_preco_w::text <> ''))) then
				
				SELECT * FROM pls_preco_beneficiario_pck.obter_idade_inic_plano_preco(	nr_seq_plano_preco_w, nr_seq_plano_preco_ant_w, qt_idade_inicial_w, qt_idade_inicial_ant_w, qt_idade_final_w, qt_idade_final_ant_w) INTO STRICT qt_idade_inicial_w, qt_idade_inicial_ant_w, qt_idade_final_w, qt_idade_final_ant_w;
				
				--Esse tratamento serve para nao permitir gerar o preco do beneficiario com a nova idade caso o preco nao seja gerado pela mudanca de faixa etaria

				if	((qt_idade_inicial_w <> qt_idade_inicial_ant_w) and (not(qt_idade_final_ant_w between qt_idade_inicial_w and qt_idade_final_w))) then -- A faixa final anterior nao pode estar entre a faixa inicial e final atual

					CALL pls_preco_beneficiario_pck.gerar_preco_sem_alterar_fx(	nr_seq_segurado_p, ie_acao_p, ie_liberado_p,
									dt_reajuste_w, ie_commit_p, ds_observacao_p,
									nr_seq_reajuste_p, nr_seq_reaj_seg_p, nm_usuario_p,
									cd_estabelecimento_p, nr_seq_plano_preco_ant_w);

					goto final;
				end if;
			end if;
		end if;

		nr_seq_regra_aprop_w 	:= pls_preco_beneficiario_pck.verificar_regra_apropriacao(nr_seq_plano_w, nr_seq_tabela_w, nr_seq_classif_dependencia_w, nr_seq_contrato_w, dt_reajuste_w, trunc(dt_contratacao_w,'dd'));

		ie_situacao_preco_w	:= 'A';

		--Verificar Processo Judicial

		if (ie_acao_p in ('E', 'I', 'R')) then
			nr_seq_processo_w	:= pls_preco_beneficiario_pck.verifica_processo_judicial(nr_seq_segurado_p, nr_seq_contrato_w, nr_seq_titular_w, cd_pessoa_fisica_w, dt_reajuste_w, ie_acao_p);
			
			if (nr_seq_processo_w IS NOT NULL AND nr_seq_processo_w::text <> '') then
				if (ie_acao_p in ('E', 'I')) then
					ie_situacao_preco_w := 'I';
				elsif (ie_acao_p = 'R') then
					if (nr_seq_plano_preco_w <> nr_seq_plano_preco_ant_w) and (nr_seq_tabela_w = nr_seq_tabela_ant_w) and (qt_idade_ant_w IS NOT NULL AND qt_idade_ant_w::text <> '') then
						SELECT * FROM pls_preco_beneficiario_pck.obter_faixa_etaria(ie_grau_parentesco_w, nr_seq_tabela_w, qt_idade_ant_w, qt_vidas_w, nr_seq_plano_preco_w, qt_idade_inicial_fx_w) INTO STRICT nr_seq_plano_preco_w, qt_idade_inicial_fx_w;
						
						SELECT * FROM pls_preco_beneficiario_pck.obter_valores_preco(	nr_seq_plano_preco_w, dt_reajuste_w, ie_acao_p, nr_seq_reajuste_p, null, null, nr_seq_reaj_preco_w, vl_preco_atual_w, vl_preco_nao_subsid_w, vl_minimo_w, vl_adaptacao_w, tx_acrescimo_w) INTO STRICT nr_seq_reaj_preco_w, vl_preco_atual_w, vl_preco_nao_subsid_w, vl_minimo_w, vl_adaptacao_w, tx_acrescimo_w;
						
						SELECT * FROM pls_preco_beneficiario_pck.obter_valor_desconto(nr_seq_segurado_p, nr_seq_contrato_w, dt_reajuste_w, vl_preco_atual_w, nr_seq_titular_w, ie_tipo_parentesco_w, vl_desconto_w, nr_seq_regra_desc_w) INTO STRICT vl_desconto_w, nr_seq_regra_desc_w;
						
						qt_idade_w		:= qt_idade_ant_w;
						ds_observacao_w		:= substr(ds_observacao_w || ' - ' || wheb_mensagem_pck.get_texto(1108148),1,255);
					end if;
				end if;
			end if;
		end if;

		if (ie_acao_p = 'E') then
			dt_aniversario_w	:= add_months(dt_nascimento_w, qt_idade_w*12);
			vl_reajuste_w		:= coalesce(vl_preco_atual_w,0) - coalesce(vl_preco_ant_w, 0);
			ds_observacao_w		:= substr(round((tx_acrescimo_w)::numeric, 2) || wheb_mensagem_pck.get_texto(1108147),1,255);
		elsif (ie_acao_p = 'I') then
			select	coalesce(pr_reajustado, 0),
				substr(pls_obter_desc_indice_reaj(obter_descricao_padrao( 'PLS_REAJUSTE', 'IE_INDICE_REAJUSTE', nr_seq_reajuste)),1,255),
				CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN  null  ELSE ds_observacao_w || ' - ' END
			into STRICT	pr_reajuste_w,
				ds_indice_w,
				ds_observacao_w
			from	pls_reajuste_preco
			where	nr_sequencia = nr_seq_reaj_preco_w;
			
			vl_reajuste_w	:= ((vl_preco_ant_w * pr_reajuste_w) / 100);
			ds_observacao_w	:= substr(ds_observacao_w || to_char(pr_reajuste_w) || '% de reajuste - ' || ds_indice_w, 1, 255);
		end if;
		
		if (pls_preco_beneficiario_pck.verificar_gerar_valor(	nr_seq_regra_desc_w, nr_seq_regra_desc_ant_w, nr_seq_plano_preco_w,
						nr_seq_plano_preco_ant_w, nr_seq_reaj_preco_w, nr_seq_reaj_preco_ant_w,
						nr_seq_seg_preco_ant_w, nr_seq_regra_aprop_w, nr_seq_regra_apr_ant_w,
						ie_acao_p, trunc(dt_reajuste_w,'mm'), nr_seq_processo_w,
						nr_seq_segurado_p, vl_desconto_w, vl_desconto_ant_w) = 'S') then
			CALL pls_preco_beneficiario_pck.inativar_reajuste_futuro(nr_seq_segurado_p, dt_reajuste_w, nm_usuario_p);
			
			if (ie_liberado_p = 'S') then
				nm_usuario_liberacao_w	:= nm_usuario_p;
				dt_liberacao_w		:= clock_timestamp();
			end if;

			insert	into pls_segurado_preco(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, dt_reajuste,
				nr_seq_segurado, vl_preco_atual, qt_idade,
				cd_motivo_reajuste, vl_preco_ant, ds_observacao,
				nr_seq_reajuste, nr_seq_preco, dt_liberacao,
				nm_usuario_liberacao, vl_desconto, vl_preco_nao_subsid_desc,
				nr_seq_tabela, vl_minimo_mensalidade, vl_adaptacao,
				ie_situacao, nr_seq_regra, qt_vidas_tabela,
				dt_referencia_mensalidade, dt_aniversario, nr_seq_lote_reajuste,
				tx_reajuste, vl_reajuste, nr_seq_lote,
				nr_seq_processo, nr_seq_regra_apropriacao, nr_seq_regra_susp_reaj_fx,
				nr_seq_lote_mens, vl_preco_nao_subsid_desc_ant)
			values (nextval('pls_segurado_preco_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, trunc(dt_reajuste_w,'mm'),
				nr_seq_segurado_p, coalesce(vl_preco_atual_w,0), qt_idade_w,
				ie_acao_p, vl_preco_ant_w, ds_observacao_w,
				nr_seq_reaj_preco_w, nr_seq_plano_preco_w, dt_liberacao_w,
				nm_usuario_liberacao_w, vl_desconto_w, vl_preco_nao_subsid_w,
				nr_seq_tabela_w, vl_minimo_w, vl_adaptacao_w,
				ie_situacao_preco_w, nr_seq_regra_desc_w, CASE WHEN ie_preco_vidas_contrato_w='N' THEN  null  ELSE qt_vidas_w END ,
				dt_referencia_mens_p, dt_aniversario_w, nr_seq_reajuste_p,
				pr_reajuste_w, vl_reajuste_w, nr_seq_reaj_seg_p,
				nr_seq_processo_w, nr_seq_regra_aprop_w, nr_seq_regra_susp_reaj_fx_p,
				nr_seq_lote_mens_p, vl_preco_nao_subsid_ant_w)
				returning nr_sequencia into nr_seq_seg_preco_w;
			
			if (ie_situacao_preco_w = 'A') then
				nr_seq_seg_preco_p	:= nr_seq_seg_preco_w;
			else
				nr_seq_seg_preco_p	:= null;
			end if;

			-- Devera retirar este tratamento quando o Marcio cunha comecar a utilizar o projeto do preco do beneficiario.

			select	count(1)
			into STRICT	qt_registros_apropriacao_w
			from	pls_segurado_preco_aprop
			where	nr_seq_segurado_preco = nr_seq_seg_preco_w;

			if	(nr_seq_regra_aprop_w IS NOT NULL AND nr_seq_regra_aprop_w::text <> '' AND qt_registros_apropriacao_w = 0) then
				CALL pls_apropriar_preco_benef(	nr_seq_seg_preco_w, nr_seq_segurado_p, dt_reajuste_w,
								coalesce(vl_preco_atual_w,0), nr_seq_plano_preco_w, vl_reajuste_w,
								nm_usuario_p, 'N', 'N',
								coalesce(vl_desconto_w, 0), nr_seq_regra_aprop_w);
			end if;

			if (ie_situacao_preco_w = 'A') then
				if (ie_acao_p not in ('I')) then
					CALL pls_preco_beneficiario_pck.gravar_reajuste_programado(	dt_reajuste_w, nr_seq_plano_preco_w, nr_seq_segurado_p,
									nr_seq_regra_susp_reaj_fx_p, nr_seq_lote_mens_p, ie_commit_p,
									nm_usuario_p, cd_estabelecimento_p);
				end if;

				if (ie_acao_p not in ('P')) then
					CALL pls_preco_beneficiario_pck.reajustar_alteracao_produto(	dt_reajuste_w, nr_seq_segurado_p, nr_seq_regra_susp_reaj_fx_p,
									nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;
		end if;
	end if;
end if;

<<final>>

if (ie_commit_p = 'S') then
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_preco_beneficiario_pck.inserir_preco_benef (nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_acao_p text, ie_liberado_p text, dt_preco_p pls_segurado_preco.dt_reajuste%type, ie_commit_p text, ds_observacao_p pls_segurado_preco.ds_observacao%type, dt_referencia_mens_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_reajuste_p pls_reajuste.nr_sequencia%type, nr_seq_reaj_seg_p pls_lote_reaj_segurado.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_idade_p bigint, nr_seq_regra_susp_reaj_fx_p pls_susp_reaj_fx_etaria.nr_sequencia%type, nr_seq_lote_mens_p pls_lote_mensalidade.nr_sequencia%type, ie_gerar_preco_ant_p text, nr_seq_seg_preco_p INOUT pls_segurado_preco.nr_sequencia%type) FROM PUBLIC;
