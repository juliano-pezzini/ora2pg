-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_preco_beneficiario_pck.atualizar_preco_beneficiarios (nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_subestipulante_p pls_sub_estipulante.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_preco_p pls_segurado_preco.dt_reajuste%type, ds_observacao_p pls_segurado_preco.ds_observacao%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


nr_seq_contrato_w	pls_contrato.nr_sequencia%type;
nr_seq_titular_w	pls_segurado.nr_seq_titular%type;
nr_seq_parentesco_w	grau_parentesco.nr_sequencia%type;
nr_seq_seg_preco_w	pls_segurado_preco.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_segurado,
		b.ie_calculo_vidas,
		a.nr_seq_titular
	from	pls_segurado a,
		pls_tabela_preco b
	where	b.nr_sequencia = a.nr_seq_tabela
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	a.nr_seq_contrato = nr_seq_contrato_w
	and	a.nr_sequencia <> coalesce(nr_seq_segurado_p, 0)
	and	(((nr_seq_pagador_p IS NOT NULL AND nr_seq_pagador_p::text <> '') and (nr_seq_pagador_p <> coalesce(a.nr_seq_pagador, 0))) or (coalesce(nr_seq_pagador_p::text, '') = ''))
	and	(((nr_seq_subestipulante_p IS NOT NULL AND nr_seq_subestipulante_p::text <> '') and (nr_seq_subestipulante_p <> coalesce(a.nr_seq_subestipulante, 0))) or (coalesce(nr_seq_subestipulante_p::text, '') = ''))
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	b.ie_preco_vidas_contrato = 'S';

BEGIN

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then --Se passar o beneficiario recalculara apenas o publico alvo do beneficiario que tenha tabela de preco por quantidade de vidas.
	select	max(a.nr_seq_contrato),
		max(a.nr_seq_titular),
		max(a.nr_seq_parentesco)
	into STRICT	nr_seq_contrato_w,
		nr_seq_titular_w,
		nr_seq_parentesco_w
	from	pls_segurado a
	where	a.nr_sequencia = nr_seq_segurado_p;
	
	for r_c01_w in c01 loop
		begin
		if (pls_preco_beneficiario_pck.verificar_se_recalcula_benef(r_c01_w.ie_calculo_vidas, nr_seq_titular_w, nr_seq_segurado_p, r_c01_w.nr_seq_titular, r_c01_w.nr_seq_segurado, nr_seq_parentesco_w) = 'S') then
			nr_seq_seg_preco_w := pls_preco_beneficiario_pck.inserir_preco_benef(	r_c01_w.nr_seq_segurado, 'Q', 'S', dt_preco_p, ie_commit_p, ds_observacao_p, null, null, null, nm_usuario_p, cd_estabelecimento_p, null, null, null, null, nr_seq_seg_preco_w);
		end if;
		end;
	end loop;
elsif (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then -- Se passar o contrato recalculara todos beneficiarios do contrato que tenha tabela de preco por quantidade de vidas.
	nr_seq_contrato_w := nr_seq_contrato_p;
	
	for r_c01_w in c01 loop
		begin
		nr_seq_seg_preco_w := pls_preco_beneficiario_pck.inserir_preco_benef(	r_c01_w.nr_seq_segurado, 'Q', 'S', dt_preco_p, ie_commit_p, ds_observacao_p, null, null, null, nm_usuario_p, cd_estabelecimento_p, null, null, null, null, nr_seq_seg_preco_w);
		end;
	end loop;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_preco_beneficiario_pck.atualizar_preco_beneficiarios (nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, nr_seq_subestipulante_p pls_sub_estipulante.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_preco_p pls_segurado_preco.dt_reajuste%type, ds_observacao_p pls_segurado_preco.ds_observacao%type, ie_commit_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
