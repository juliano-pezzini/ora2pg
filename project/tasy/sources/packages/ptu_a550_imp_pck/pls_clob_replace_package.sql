-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_a550_imp_pck.pls_clob_replace ( src_p text, match_p text, rep_p text ) RETURNS text AS $body$
DECLARE

max_varchar2 	bigint := 15000;

ret_clob_w 	text;
next_idx_w 	bigint;
search_begin_w 	bigint := 1;
parse_begin_w 	bigint := 1;
parse_end_w 	bigint;
id_achou_w    smallint;



BEGIN

-- create a temporary clob to be returned

dbms_lob.createtemporary( ret_clob_w, true );
id_achou_w := 0;
loop

	next_idx_w := dbms_lob.instr( src_p, match_p, search_begin_w, 1 );

  if next_idx_w > 0 then
     id_achou_w := 1;
  end if;
  
	-- exit once we do not find another occurance of the match string

	exit when next_idx_w = 0;

	-- special handling if we find a match at the first character of the source string

	if next_idx_w = 1 then

		parse_begin_w := length( match_p ) + 1;

		if length( rep_p ) > 0 then
			dbms_lob.append( ret_clob_w, rep_p );
		end if;

	else

		-- copy source data up to the match

		parse_end_w := next_idx_w - 1;
		dbms_lob.copy( ret_clob_w, src_p, ( parse_end_w - parse_begin_w + 1 ), octet_length( ret_clob_w ) + 1, parse_begin_w );

		-- replace the match string

		if length( rep_p ) > 0 then
		dbms_lob.append( ret_clob_w, rep_p );
		end if;

		-- move the beginning of the next parse window past our match string

		parse_begin_w := parse_end_w + length( match_p ) + 1;

	end if;

-- move the beginning of the search window past our match string

search_begin_w := next_idx_w + length( match_p );

end loop;

-- special handling for the trailing final characters of the source clob

if octet_length( src_p ) > ( parse_end_w  + length( match_p ) ) then

	parse_begin_w := parse_end_w  + length( match_p ) + 1;
	parse_end_w := octet_length( src_p );
	dbms_lob.copy( ret_clob_w, src_p, ( parse_end_w - parse_begin_w + 1 ), octet_length( ret_clob_w ) + 1, parse_begin_w );

end if;

if id_achou_w = 0 then
  ret_clob_w := src_p;
end if;

return ret_clob_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_a550_imp_pck.pls_clob_replace ( src_p text, match_p text, rep_p text ) FROM PUBLIC;
