-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


---------------------------------------------------------------
--- calcular o custo de produção
---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE val_estoque_media_ponderada.val_custo_producao ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_local_estoque_w			integer    := 0;
cd_componente_w			integer    := 0;
nr_seq_comp_w				integer    := 0;
nr_movimento_estoque_w		bigint    := 0;
nr_documento_w			bigint    := 0;
cd_operacao_estoque_w		smallint    := 0;
cd_operacao_baixa_w			integer    := 0;
vl_producao_w				double precision;
qt_consumo_w				double precision;
qt_estoque_w				double precision;
vl_componente_w			double precision;

c00 CURSOR FOR
SELECT	nr_movimento_estoque,
	nr_documento
from	movimento_estoque
where	dt_mesano_referencia  = dt_mesano_referencia_p
and	cd_material_estoque   = cd_material_p
and	cd_operacao_estoque   = cd_operacao_estoque_w;

c01 CURSOR FOR
SELECT	a.cd_material,
	a.nr_sequencia,
	a.cd_local_estoque,
	coalesce(a.qt_real,0) + coalesce(qt_perda,0),
	coalesce(a.qt_estoque,0) + coalesce(qt_perda_etq,0),
	coalesce(vl_custo,0)
from	lote_producao_comp a
where	a.nr_lote_producao   = nr_documento_w;


BEGIN
select	cd_oper_producao,
	cd_oper_baixa_producao
into STRICT	cd_operacao_estoque_w,
	cd_operacao_baixa_w
from	parametro_estoque
where	cd_estabelecimento  = cd_estabelecimento_p;

open c00;
loop
begin
fetch c00 into
	nr_movimento_estoque_w,
	nr_documento_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin
	vl_producao_w   := 0;
	open c01;
	loop
	fetch c01 into
		cd_componente_w,
		nr_seq_comp_w,
		cd_local_estoque_w,
		qt_consumo_w,
		qt_estoque_w,
		vl_componente_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (vl_componente_w = 0) and (qt_estoque_w > 0) then
                	begin
                	select	coalesce(sum(CASE WHEN cd_acao=1 THEN b.vl_movimento  ELSE b.vl_movimento * -1 END ),0)
                	into STRICT	vl_componente_w
                	from	movimento_estoque_valor b,
				movimento_estoque a
                	where	a.nr_movimento_estoque	= b.nr_movimento_estoque
                	and	a.cd_material			= cd_componente_w
                	and	a.nr_documento		= nr_documento_w
                	and	a.cd_operacao_estoque	= cd_operacao_baixa_w
                	and	a.dt_mesano_referencia	= dt_mesano_referencia_p
			and	coalesce(a.nr_sequencia_item_docto,0) = coalesce(nr_seq_comp_w,0);

                	update	lote_producao_comp
                	set	vl_custo			= vl_componente_w,
				ie_status_valorizacao	= 'C',
				nm_usuario			= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_lote_producao		= nr_documento_w
			and	nr_sequencia			= nr_seq_comp_w;
			end;
		end if;
		vl_producao_w   := vl_producao_w + vl_componente_w;
		end;
	end loop;
	close c01;
	update	lote_producao
	set	vl_custo_material	= vl_producao_w,
		ie_status_lote	= 'C',
		dt_mesano_referencia	= dt_mesano_referencia_p,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_lote_producao	= nr_documento_w;
	delete	from movimento_estoque_valor
	where	nr_movimento_estoque	= nr_movimento_estoque_w
	and	cd_tipo_valor		= 7;
	begin
	insert into movimento_estoque_valor(
		nr_movimento_estoque,
		cd_tipo_valor,
		vl_movimento,
		dt_atualizacao,
		nm_usuario)
	values (nr_movimento_estoque_w,
		7,
		vl_producao_w,
		clock_timestamp(),
		nm_usuario_p);
	exception when others then
		qt_estoque_w    := 0;
	end;
	end;
	end;
end loop;
close c00;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE val_estoque_media_ponderada.val_custo_producao ( cd_material_p bigint, cd_estabelecimento_p bigint , dt_mesano_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;
