-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ageint_sugerir_html5_pck.obter_info_padrao ( nr_seq_ageint_p bigint, qt_dias_sugestao_p INOUT bigint, ie_hor_por_profissional_p INOUT text, ie_utiliza_dur_classif_p INOUT text, cd_pessoa_fisica_ageint_p INOUT text, cd_convenio_ageint_p INOUT bigint, cd_categoria_ageint_p INOUT text, cd_estabelecimento_ageint_p INOUT bigint, cd_plano_ageint_p INOUT text, ie_sexo_paciente_ageint_p INOUT text, qt_idade_pac_ageint_p INOUT bigint, ie_tipo_atendimento_ageint_p INOUT bigint, dt_nascimento_ageint_p INOUT timestamp, nr_seq_classif_cad_p INOUT bigint, nr_seq_cobertura_ageint_p INOUT bigint, cd_usuario_convenio_ageint_p INOUT text, qt_peso_ageint_p INOUT bigint, ie_sexo_paciente_cad_p INOUT text, ie_sobreposicao_encaixe_p INOUT text, ie_sobreposicao_param_p INOUT text, qt_tipo_exame_p INOUT bigint, qt_tipo_cons_p INOUT bigint, qt_tipo_serv_p INOUT bigint, qt_itens_recorr_serv_p INOUT bigint, qt_regra_agecons_conv_p INOUT bigint, qt_regra_bloq_geral_p INOUT bigint, ie_cons_lib_grupo_exames_p INOUT text, vl_ie_calc_min_dur_p INOUT text, ie_param_244_p INOUT text, ie_cons_dur_exames_adic_p INOUT text, ie_somente_cirur_p INOUT text, ie_param_37_agexam_p INOUT text, nr_seq_classificacao_ageint_p INOUT bigint, ie_consist_bloq_conv_atend_p INOUT text, qt_sugest_hor_p INOUT bigint, ie_param_267_ageint_p INOUT text, qt_dias_combo_p INOUT bigint ) AS $body$
DECLARE

			
	cd_estabelecimento_ativo_w	estabelecimento.cd_estabelecimento%type;
	cd_perfil_ativo_w		perfil.cd_perfil%type;
	cd_funcao_ativo_w		funcao.cd_funcao%type;
	nm_usuario_ativo_w		usuario.nm_usuario%type;

BEGIN
	cd_estabelecimento_ativo_w := obter_estabelecimento_ativo;
	cd_perfil_ativo_w  := obter_perfil_ativo;
	cd_funcao_ativo_w  := obter_funcao_ativa;
	nm_usuario_ativo_w  := obter_usuario_ativo;

	SELECT qt_dias_sugestao,
         qt_dias_combo,
         ie_hor_por_profissional,
         ie_utiliza_dur_classif,
         qt_sugest_hor
	INTO STRICT  qt_dias_sugestao_p,
		qt_dias_combo_p,
		ie_hor_por_profissional_p,
		ie_utiliza_dur_classif_p,
		qt_sugest_hor_p
	FROM (SELECT	coalesce(qt_dias_sugestao, 0) qt_dias_sugestao,
			coalesce(qt_dias_combo, 0) qt_dias_combo,
			coalesce(ie_hor_por_profissional, 'N') ie_hor_por_profissional,
			coalesce(ie_utiliza_dur_classif,'N') ie_utiliza_dur_classif,
			coalesce(qt_sugest_hor, 0) qt_sugest_hor
		from	parametro_agenda_integrada
		where	coalesce(cd_estabelecimento,cd_estabelecimento_ativo_w) = cd_estabelecimento_ativo_w
		order	by nr_sequencia) alias6 LIMIT 1;

	select	a.cd_pessoa_fisica,
		a.cd_convenio,
		a.cd_categoria,
		a.cd_estabelecimento,
		a.cd_plano,
		Obter_Sexo_PF(a.cd_pessoa_fisica, 'C'),
		coalesce(obter_idade_pf(a.cd_pessoa_fisica,clock_timestamp(),'A'),obter_idade(a.dt_nascimento, clock_timestamp(), 'A')),
		a.ie_tipo_atendimento,
		a.dt_nascimento,
		obter_classif_pf(a.cd_pessoa_fisica, cd_estabelecimento_ativo_w),
		nr_seq_cobertura,
		cd_usuario_convenio,
		qt_peso,
		a.nr_seq_classificacao
	into STRICT	cd_pessoa_fisica_ageint_p,
		cd_convenio_ageint_p,
		cd_categoria_ageint_p,
		cd_estabelecimento_ageint_p,
		cd_plano_ageint_p,
		ie_sexo_paciente_ageint_p,
		qt_idade_pac_ageint_p,
		ie_tipo_atendimento_ageint_p,
		dt_nascimento_ageint_p,
		nr_seq_classif_cad_p,
		nr_seq_cobertura_ageint_p,
		cd_usuario_convenio_ageint_p,
		qt_peso_ageint_p,
		nr_seq_classificacao_ageint_p
	from	agenda_integrada a
	where	nr_sequencia = nr_seq_ageint_p;

	select	coalesce(max(ie_sexo), 'A')
	into STRICT	ie_sexo_paciente_cad_p
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_ageint_p;

	select	coalesce(max(ie_sobreposicao_encaixe),'S'),
		coalesce(max(ie_consiste_duracao), 'I')
	into STRICT	ie_sobreposicao_encaixe_p,
		ie_sobreposicao_param_p
	from	parametro_agenda
	where	cd_estabelecimento = cd_estabelecimento_ativo_w;

	select	count(*)
	into STRICT	qt_tipo_exame_p
	from	agenda_integrada_item
	where	nr_seq_agenda_int  = nr_seq_ageint_p
	and	ie_tipo_agendamento  = 'E';

	select	count(*)
	into STRICT	qt_tipo_cons_p
	from	agenda_integrada_item
	where	nr_seq_agenda_int  = nr_seq_ageint_p
	and	ie_tipo_agendamento  = 'C';

	select	count(*)
	into STRICT	qt_tipo_serv_p
	from	agenda_integrada_item
	where	nr_seq_agenda_int  = nr_seq_ageint_p
	and	ie_tipo_agendamento  = 'S';

	select	count(*)
	into STRICT	qt_itens_recorr_serv_p
	from	agenda_integrada_item
	where	nr_seq_agenda_int = nr_seq_ageint_p
	and	ie_tipo_item <> 'P'
	and	(nr_seq_item_princ IS NOT NULL AND nr_seq_item_princ::text <> '')
	and	ie_tipo_agendamento = 'S';

	-- baseado na rotina ageint_consiste_regra_conv_lib

	select	coalesce(max(1),0)
	into STRICT	qt_regra_agecons_conv_p
	FROM regra_agecons_convenio a
LEFT OUTER JOIN regra_agecons_conv_grupo b ON (a.nr_sequencia = b.nr_seq_regra_agecons)
WHERE coalesce(dt_inicial_vigencia::text, '') = '' and coalesce(dt_final_vigencia::text, '') = '' and a.ie_permite = 'N';

	select	coalesce(max(1),0)
	into STRICT	qt_regra_bloq_geral_p
	from	agenda_bloqueio_geral
	where	ie_situacao = 'A'
	and	coalesce(dt_fim_vigencia,clock_timestamp()) >= trunc(clock_timestamp());

	obter_param_usuario(869, 218, cd_perfil_ativo_w, nm_usuario_ativo_w, cd_estabelecimento_ativo_w, ie_cons_lib_grupo_exames_p);
	obter_param_usuario(820, 33, cd_perfil_ativo_w, nm_usuario_ativo_w, cd_estabelecimento_ativo_w, vl_ie_calc_min_dur_p);
	vl_ie_calc_min_dur_p := coalesce(vl_ie_calc_min_dur_p,'N');
	--"Consistir duracao dos exames adicionais com base nas regras 'Tempo proced', para atualizacao da duracao  do agendamento"

	obter_param_usuario(869, 244, cd_perfil_ativo_w, nm_usuario_ativo_w, cd_estabelecimento_ativo_w, ie_param_244_p);
	obter_param_usuario(869, 303, cd_perfil_ativo_w, nm_usuario_ativo_w, cd_estabelecimento_ativo_w, ie_cons_dur_exames_adic_p);
	ie_cons_dur_exames_adic_p := coalesce(ie_cons_dur_exames_adic_p, 'N');
	obter_param_usuario(871,266,cd_perfil_ativo_w,nm_usuario_ativo_w,cd_estabelecimento_ativo_w,ie_somente_cirur_p);
	obter_param_usuario(820,37,cd_perfil_ativo_w,nm_usuario_ativo_w,cd_estabelecimento_ativo_w,ie_param_37_agexam_p);
	obter_param_usuario(869, 146, cd_perfil_ativo_w, nm_usuario_ativo_w, cd_estabelecimento_ativo_w, ie_consist_bloq_conv_atend_p);
	obter_param_usuario(869, 267, cd_perfil_ativo_w, nm_usuario_ativo_w, cd_estabelecimento_ativo_w, ie_param_267_ageint_p);
	
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_sugerir_html5_pck.obter_info_padrao ( nr_seq_ageint_p bigint, qt_dias_sugestao_p INOUT bigint, ie_hor_por_profissional_p INOUT text, ie_utiliza_dur_classif_p INOUT text, cd_pessoa_fisica_ageint_p INOUT text, cd_convenio_ageint_p INOUT bigint, cd_categoria_ageint_p INOUT text, cd_estabelecimento_ageint_p INOUT bigint, cd_plano_ageint_p INOUT text, ie_sexo_paciente_ageint_p INOUT text, qt_idade_pac_ageint_p INOUT bigint, ie_tipo_atendimento_ageint_p INOUT bigint, dt_nascimento_ageint_p INOUT timestamp, nr_seq_classif_cad_p INOUT bigint, nr_seq_cobertura_ageint_p INOUT bigint, cd_usuario_convenio_ageint_p INOUT text, qt_peso_ageint_p INOUT bigint, ie_sexo_paciente_cad_p INOUT text, ie_sobreposicao_encaixe_p INOUT text, ie_sobreposicao_param_p INOUT text, qt_tipo_exame_p INOUT bigint, qt_tipo_cons_p INOUT bigint, qt_tipo_serv_p INOUT bigint, qt_itens_recorr_serv_p INOUT bigint, qt_regra_agecons_conv_p INOUT bigint, qt_regra_bloq_geral_p INOUT bigint, ie_cons_lib_grupo_exames_p INOUT text, vl_ie_calc_min_dur_p INOUT text, ie_param_244_p INOUT text, ie_cons_dur_exames_adic_p INOUT text, ie_somente_cirur_p INOUT text, ie_param_37_agexam_p INOUT text, nr_seq_classificacao_ageint_p INOUT bigint, ie_consist_bloq_conv_atend_p INOUT text, qt_sugest_hor_p INOUT bigint, ie_param_267_ageint_p INOUT text, qt_dias_combo_p INOUT bigint ) FROM PUBLIC;
