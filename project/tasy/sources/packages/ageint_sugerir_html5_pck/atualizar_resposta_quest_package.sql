-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ageint_sugerir_html5_pck.atualizar_resposta_quest (nr_seq_ageint_p bigint, nr_seq_estrutura_p bigint, nr_seq_ageint_item_p bigint, nr_seq_resp_p bigint DEFAULT NULL, ds_resposta_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, nr_sequencia_p bigint DEFAULT NULL, nr_seq_pergunta_p bigint DEFAULT NULL, ds_pergunta_p text DEFAULT NULL, ie_tipo_quest_p text DEFAULT NULL, ie_obrigatorio_p text DEFAULT NULL, nr_sequencia_nova_p INOUT bigint DEFAULT NULL, ie_executa_insert_p INOUT text DEFAULT NULL) AS $body$
DECLARE

  nr_seq_ageint_resp_quest_w bigint;
  nr_seq_sup_resp_quest_w bigint;
  nr_seq_quest_util_w		bigint;
  cd_area_procedimento_w	bigint := NULL;
  cd_grupo_proc_w		bigint := NULL;
  cd_especialidade_w		bigint := NULL;
  cd_pessoa_fisica_w		ageint_marcacao_usuario.cd_pessoa_fisica%type;
  cd_estabelecimento_w		bigint := NULL;
  ie_existe_pergunta_filha_w 	bigint := 0;
  ie_inseriu_quest_w		varchar(1);

  c_itens CURSOR(nr_seq_ageint_p bigint, nr_seq_ageint_item_p bigint) FOR
    SELECT ai.cd_convenio,
           ai.cd_categoria,
           ai.cd_plano,
           ai.qt_idade_pac,
           obter_tipo_convenio(ai.cd_convenio) AS ie_tipo_convenio,
           aii.ie_tipo_agendamento AS ie_tipo_item,
           aii.cd_medico,
           ai.ie_sexo,
           aii.nr_seq_proc_interno,
           aii.cd_procedimento,
           aii.ie_origem_proced,
           aii.nr_sequencia,
           aii.nr_seq_agenda_int,
           substr(obter_item_grid_ageint(aii.nr_seq_proc_interno, aii.cd_medico, aii.cd_especialidade, 1), 1, 255) ds_item,
           ageint_obter_prior_apresent(aii.nr_seq_agenda_int,
                                       aii.nr_seq_proc_interno,
                                       obter_estabelecimento_ativo,
                                       aii.nr_seq_grupo_selec,
                                       aii.nr_sequencia) nr_seq_ordem_apresent,
           ageint_obter_prioridade(aii.nr_seq_agenda_int,
                                   aii.nr_seq_proc_interno,
                                   obter_estabelecimento_ativo,
                                   aii.nr_seq_grupo_selec) nr_seq_ordem,
				   aii.nr_seq_ageint_item_transf
      FROM agenda_integrada      ai,
           agenda_integrada_item aii
     WHERE aii.nr_sequencia = nr_seq_ageint_item_p
       AND aii.nr_seq_agenda_int = ai.nr_sequencia
       AND ai.nr_sequencia = nr_seq_ageint_p       
     ORDER BY nr_seq_ordem_apresent,
              nr_seq_ordem;
	
      c_bloqueio CURSOR(nr_seq_estrutura_p     bigint,
                    cd_estabelecimento_p   bigint,
                    cd_area_procedimento_p bigint,
                    cd_grupo_proc_p        bigint,
                    ie_tipo_item_p         text,
                    nr_seq_proc_interno_p  bigint,
                    cd_especialidade_p     bigint,
                    cd_medico_p            text,
                    cd_convenio_p          bigint,
                    cd_categoria_p         text,
                    cd_plano_convenio_p    text,
                    ie_tipo_convenio_p     text,
                    qt_idade_pac_p         bigint,
                    ie_sexo_p              text) FOR
    SELECT aqu.nr_sequencia
      FROM ageint_quest_regra_bloq aqrb,
           ageint_quest_utilizacao aqu
     WHERE coalesce(aqu.ie_situacao, 'A') = 'A'
       AND coalesce(aqrb.ie_situacao, 'A') = 'A'
       AND aqrb.nr_seq_estrutura = nr_seq_estrutura_p
       AND aqrb.nr_seq_estrutura = aqu.nr_seq_estrutura
       AND aqrb.nr_seq_quest_utilizacao = aqu.nr_sequencia
       AND (coalesce(aqu.cd_estabelecimento::text, '') = '' OR cd_estabelecimento_p = aqu.cd_estabelecimento)
       AND (coalesce(aqu.cd_area_procedimento::text, '') = '' OR cd_area_procedimento_p = aqu.cd_area_procedimento)
       AND (coalesce(aqu.cd_grupo_proc::text, '') = '' OR cd_grupo_proc_p = aqu.cd_grupo_proc)
       AND (coalesce(aqu.ie_tipo_item::text, '') = '' OR ie_tipo_item_p = aqu.ie_tipo_item)
       AND (coalesce(aqu.nr_seq_proc_interno::text, '') = '' OR nr_seq_proc_interno_p = aqu.nr_seq_proc_interno)
       AND (coalesce(aqu.cd_especialidade::text, '') = '' OR cd_especialidade_p = aqu.cd_especialidade)
       AND (coalesce(aqu.cd_medico::text, '') = '' OR cd_medico_p = aqu.cd_medico)
       AND (coalesce(aqu.cd_convenio::text, '') = '' OR cd_convenio_p = aqu.cd_convenio)
       AND (coalesce(aqu.cd_categoria::text, '') = '' OR cd_categoria_p = aqu.cd_categoria)
       AND (coalesce(aqu.cd_plano_convenio::text, '') = '' OR cd_plano_convenio_p = aqu.cd_plano_convenio)
       AND (coalesce(aqu.ie_tipo_convenio::text, '') = '' OR ie_tipo_convenio_p = aqu.ie_tipo_convenio)
       AND (coalesce(aqu.qt_idade_min::text, '') = '' OR qt_idade_pac_p >= aqu.qt_idade_min)
       AND (coalesce(aqu.qt_idade_max::text, '') = '' OR qt_idade_pac_p <= aqu.qt_idade_max)
	   AND((coalesce(aqu.nr_seq_grupo_proc::text, '') = '') OR ((aqu.nr_seq_grupo_proc IS NOT NULL AND aqu.nr_seq_grupo_proc::text <> '') AND EXISTS (SELECT	1
																						FROM 	ageint_proced_regra d
																						WHERE 	d.nr_seq_grupo			= aqu.nr_seq_grupo_proc
																						AND		d.nr_seq_proc_interno	= nr_seq_proc_interno_p
																						AND 	coalesce(d.ie_situacao,'A') = 'A')))
       AND (coalesce(aqu.ie_sexo, 'A') = 'A' OR ie_sexo_p = aqu.ie_sexo);

BEGIN

  cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

  nr_seq_ageint_resp_quest_w := nr_sequencia_p;
  IF (nr_seq_ageint_resp_quest_w IS NOT NULL AND nr_seq_ageint_resp_quest_w::text <> '') THEN
		ie_executa_insert_p := 'N';
    UPDATE ageint_resp_quest
       SET nr_seq_resp    = nr_seq_resp_p,
           ds_resposta    = ds_resposta_p,
           nm_usuario     = nm_usuario_p,
           dt_atualizacao = clock_timestamp()
     WHERE nr_sequencia = nr_seq_ageint_resp_quest_w;
    IF coalesce(ds_resposta_p::text, '') = '' AND coalesce(nr_seq_resp_p::text, '') = '' THEN
       UPDATE ageint_resp_quest
         SET nr_seq_resp    = nr_seq_resp_p,
             ds_resposta    = ds_resposta_p,
             nm_usuario     = nm_usuario_p,
             dt_atualizacao = clock_timestamp()
       WHERE NR_SEQ_AGEINT = nr_seq_ageint_p
       AND NR_SEQ_ESTRUTURA IN (WITH RECURSIVE cte AS (
SELECT aqe.nr_sequencia
                                  FROM ageint_quest_estrutura aqe WHERE aqe.nr_seq_superior = nr_seq_estrutura_p
  UNION ALL
SELECT aqe.nr_sequencia
                                  FROM ageint_quest_estrutura aqe JOIN cte c ON (c.nr_sequencia = aqe.nr_seq_superior)

) SELECT * FROM cte;
);
    END IF;

    SELECT  count(*)
    INTO STRICT    ie_existe_pergunta_filha_w
    FROM    ageint_quest_estrutura a, ageint_quest_perguntas b
    WHERE a.nr_seq_pergunta = b.nr_sequencia AND a.nr_seq_superior = nr_seq_estrutura_p AND a.ie_situacao = 'A';

    IF (ie_existe_pergunta_filha_w > 0) THEN
      	agiq_gerar_questao_item(nr_seq_ageint_p,
                              	nm_usuario_p,
                              	ie_tipo_quest_p,
                              	cd_estabelecimento_w,
                              	NULL,
                              	NULL,
                              	ie_inseriu_quest_w,
                              	'S');
    END IF;
    
  ELSE
    SELECT nextval('ageint_resp_quest_seq') INTO STRICT nr_seq_ageint_resp_quest_w;
		ie_executa_insert_p := 'S';
		nr_sequencia_nova_p := nr_seq_ageint_resp_quest_w;
    INSERT INTO ageint_resp_quest(nr_sequencia,
       dt_atualizacao,
       nm_usuario,
       dt_atualizacao_nrec,
       nm_usuario_nrec,
       nr_seq_ageint,
       nr_seq_estrutura,
       nr_seq_superior,
       nr_seq_pergunta,
       ds_pergunta,
       nr_seq_resp,
       ds_resposta,
       ie_tipo_quest,
       ie_obrigatorio)
    VALUES (nr_seq_ageint_resp_quest_w,
       clock_timestamp(),
       nm_usuario_p,
       clock_timestamp(),
       nm_usuario_p,
       nr_seq_ageint_p,
       nr_seq_estrutura_p,
       NULL,
       nr_seq_pergunta_p,
       ds_pergunta_p,
       nr_seq_resp_p,
       ds_resposta_p,
       ie_tipo_quest_p,
       ie_obrigatorio_p);

       FOR i IN c_itens(nr_seq_ageint_p => nr_seq_ageint_p, nr_seq_ageint_item_p => nr_seq_ageint_item_p) LOOP      
      
  	    	IF (i.ie_tipo_item NOT IN ('CI', 'CH', 'Q')) THEN
  	  	  	SELECT	MAX(cd_area_procedimento),
  	  	        	MAX(cd_grupo_proc),
  	  	        	MAX(cd_especialidade)
  	  	  	INTO STRICT 	cd_area_procedimento_w,
  	  	        	cd_grupo_proc_w,
  	  	        	cd_especialidade_w
  	  	   	FROM	estrutura_procedimento_v
  	  	   	WHERE	cd_procedimento = i.cd_procedimento
  	  	     	AND	ie_origem_proced = i.ie_origem_proced;
  	  	ELSE
  	  	  	cd_area_procedimento_w := NULL;
  	  	  	cd_grupo_proc_w        := NULL;
  	  	  	cd_especialidade_w     := NULL;
  	  	END IF;

    		select max(cd_pessoa_fisica)
    		into STRICT   cd_pessoa_fisica_w
    		from   ageint_marcacao_usuario
    		where  nr_seq_ageint 		= nr_seq_ageint_p
    		and    nr_seq_ageint_item	= nr_seq_ageint_item_p;
      	
		FOR b IN c_bloqueio(nr_seq_estrutura_p     => nr_seq_estrutura_p,
				cd_estabelecimento_p   => cd_estabelecimento_w,
				cd_area_procedimento_p => cd_area_procedimento_w,
				cd_grupo_proc_p        => cd_grupo_proc_w,
				ie_tipo_item_p         => i.ie_tipo_item,
				nr_seq_proc_interno_p  => i.nr_seq_proc_interno,
				cd_especialidade_p     => cd_especialidade_w,
				cd_medico_p            => coalesce(i.cd_medico,cd_pessoa_fisica_w),
				cd_convenio_p          => i.cd_convenio,
				cd_categoria_p         => i.cd_categoria,
				cd_plano_convenio_p    => i.cd_plano,
				ie_tipo_convenio_p     => i.ie_tipo_convenio,
				qt_idade_pac_p         => i.qt_idade_pac,
				ie_sexo_p              => i.ie_sexo) LOOP
      
	        	INSERT INTO ageint_resp_quest_item(nr_sequencia,
	        	   nr_seq_ageint,
	        	   nr_seq_item,
	        	   nr_seq_resp_quest,
	        	   dt_atualizacao,
	        	   nm_usuario,
	        	   dt_atualizacao_nrec,
	        	   nm_usuario_nrec,
	        	   nr_seq_quest_utilizacao)
	        	VALUES (nextval('ageint_resp_quest_item_seq'),
	        	   nr_seq_ageint_p,
	        	   i.nr_sequencia,
	        	   nr_seq_ageint_resp_quest_w,
	        	   clock_timestamp(),
	        	   nm_usuario_p,
	        	   clock_timestamp(),
	        	   nm_usuario_p,
	        	   b.nr_sequencia);

		END LOOP;
  	END LOOP;

  END IF;
  COMMIT;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_sugerir_html5_pck.atualizar_resposta_quest (nr_seq_ageint_p bigint, nr_seq_estrutura_p bigint, nr_seq_ageint_item_p bigint, nr_seq_resp_p bigint DEFAULT NULL, ds_resposta_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, nr_sequencia_p bigint DEFAULT NULL, nr_seq_pergunta_p bigint DEFAULT NULL, ds_pergunta_p text DEFAULT NULL, ie_tipo_quest_p text DEFAULT NULL, ie_obrigatorio_p text DEFAULT NULL, nr_sequencia_nova_p INOUT bigint DEFAULT NULL, ie_executa_insert_p INOUT text DEFAULT NULL) FROM PUBLIC;
