-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_execucao_cirurgica_pck.gerar_exec_guia_proc ( nr_seq_exec_cirurgica_p pls_execucao_cirurgica.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_exec_proc_original_p pls_exec_cirurgica_proc.nr_sequencia%type, ie_situacao_item_p pls_exec_cirurgica_proc.ie_situacao_item%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Criar a guia/itens/participacoes na execucao cirurgica.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_execucao_guia_w			pls_exec_cirurgica_guia.nr_sequencia%type;
nr_seq_exec_proc_w			pls_exec_cirurgica_proc.nr_sequencia%type;
ie_inserir_w				varchar(1) := 'S';
nr_seq_regra_w				pls_oc_regra_proc_partic.nr_sequencia%type;

cProcGuia CURSOR(nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_autorizada
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_pc
	and	ie_status		in ('L', 'P', 'S');

cProcReq CURSOR(nr_seq_requisicao_pc	pls_requisicao.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_pc;

cGrau CURSOR(nr_seq_regra_pc		pls_oc_regra_proc_partic.nr_sequencia%type) FOR
	SELECT	nr_seq_grau_partic
	from	pls_proc_grau_partic
	where	nr_seq_regra		= nr_seq_regra_pc
	and	ie_situacao		= 'A'
	and	((trunc(clock_timestamp())	>= dt_inicio_vigencia	and (dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> ''))	or (coalesce(dt_inicio_vigencia::text, '') = ''))
	and	((trunc(clock_timestamp())	<= dt_fim_vigencia	and (dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> ''))	or (coalesce(dt_fim_vigencia::text, '') = ''));
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	for cProcGuia_w in cProcGuia( nr_seq_guia_p ) loop

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	pls_oc_regra_proc_partic a
		where	a.cd_procedimento	= cProcGuia_w.cd_procedimento
		and	a.ie_origem_proced	= cProcGuia_w.ie_origem_proced
		and	exists			(SELECT	1
						from	pls_proc_grau_partic b
						where	b.nr_seq_regra		= a.nr_sequencia
						and	b.ie_situacao		= 'A'
						and	((trunc(clock_timestamp())	>= b.dt_inicio_vigencia and (b.dt_inicio_vigencia IS NOT NULL AND b.dt_inicio_vigencia::text <> '')) or (coalesce(b.dt_inicio_vigencia::text, '') = ''))
						and	((trunc(clock_timestamp())	<= b.dt_fim_vigencia and (b.dt_fim_vigencia IS NOT NULL AND b.dt_fim_vigencia::text <> '')) or (coalesce(b.dt_fim_vigencia::text, '') = '')));

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') and (ie_inserir_w = 'S') then
			ie_inserir_w := 'N';
			insert into pls_exec_cirurgica_guia(nr_sequencia, nm_usuario, nm_usuario_nrec,
				dt_atualizacao, dt_atualizacao_nrec, ie_situacao,
				cd_estabelecimento, nr_seq_exec_cirurgica, nr_seq_guia,
				nr_seq_requisicao, ie_status)
			values (nextval('pls_exec_cirurgica_guia_seq'), nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), 'A',
				cd_estabelecimento_p, nr_seq_exec_cirurgica_p, nr_seq_guia_p,
				null, 'A') returning nr_sequencia into nr_seq_execucao_guia_w;
		end if;

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			insert into pls_exec_cirurgica_proc(nr_sequencia, nm_usuario, nm_usuario_nrec,
				dt_atualizacao, dt_atualizacao_nrec, cd_estabelecimento,
				nr_seq_execucao_guia, nr_seq_guia_proc, nr_seq_req_proc,
				nr_seq_regra, ie_situacao_item, nr_seq_exec_proc_original,
				ie_finalizado, qt_procedimento, ie_tecnica_utilizada,
				ie_via_acesso, vl_apresentado, vl_fator_red_acrescimo)
			values (nextval('pls_exec_cirurgica_proc_seq'), nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), cd_estabelecimento_p,
				nr_seq_execucao_guia_w, cProcGuia_w.nr_sequencia, null,
				nr_seq_regra_w, ie_situacao_item_p, nr_seq_exec_proc_original_p,
				'N', cProcGuia_w.qt_autorizada, 'C',
				'U', 0, 1) returning nr_sequencia into nr_seq_exec_proc_w;

			for cGrau_w in cGrau( nr_seq_regra_w ) loop
				insert into  pls_exec_cirurg_bio_partic(nr_sequencia, nm_usuario, nm_usuario_nrec,
					dt_atualizacao, dt_atualizacao_nrec, cd_estabelecimento,
					nr_seq_exec_cirurg_proc, nr_seq_grau_partic, ie_status)
				values (nextval('pls_exec_cirurg_bio_partic_seq'), nm_usuario_p, nm_usuario_p,
					clock_timestamp(), clock_timestamp(), cd_estabelecimento_p,
					nr_seq_exec_proc_w, cGrau_w.nr_seq_grau_partic, 'A');
			end loop;
		end if;
	end loop;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	for cProcReq_w in cProcReq( nr_seq_requisicao_p ) loop

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	pls_oc_regra_proc_partic a
		where	a.cd_procedimento	= cProcReq_w.cd_procedimento
		and	a.ie_origem_proced	= cProcReq_w.ie_origem_proced
		and	exists			(SELECT	1
						from	pls_proc_grau_partic b
						where	b.nr_seq_regra		= a.nr_sequencia
						and	b.ie_situacao		= 'A'
						and	((trunc(clock_timestamp())	>= b.dt_inicio_vigencia and (b.dt_inicio_vigencia IS NOT NULL AND b.dt_inicio_vigencia::text <> '')) or (coalesce(b.dt_inicio_vigencia::text, '') = ''))
						and	((trunc(clock_timestamp())	<= b.dt_fim_vigencia and (b.dt_fim_vigencia IS NOT NULL AND b.dt_fim_vigencia::text <> '')) or (coalesce(b.dt_fim_vigencia::text, '') = '')));

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') and (ie_inserir_w = 'S') then
			ie_inserir_w := 'N';
			insert into pls_exec_cirurgica_guia(nr_sequencia, nm_usuario, nm_usuario_nrec,
				dt_atualizacao, dt_atualizacao_nrec, ie_situacao,
				cd_estabelecimento, nr_seq_exec_cirurgica, nr_seq_guia,
				nr_seq_requisicao, ie_status)
			values (nextval('pls_exec_cirurgica_guia_seq'), nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), 'A',
				cd_estabelecimento_p, nr_seq_exec_cirurgica_p, null,
				nr_seq_requisicao_p, 'A') returning nr_sequencia into nr_seq_execucao_guia_w;
		end if;

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			insert into pls_exec_cirurgica_proc(nr_sequencia, nm_usuario, nm_usuario_nrec,
				dt_atualizacao, dt_atualizacao_nrec, cd_estabelecimento,
				nr_seq_execucao_guia, nr_seq_guia_proc, nr_seq_req_proc,
				nr_seq_regra, ie_situacao_item, nr_seq_exec_proc_original,
				ie_finalizado, qt_procedimento, ie_tecnica_utilizada,
				ie_via_acesso, vl_apresentado, vl_fator_red_acrescimo)
			values (nextval('pls_exec_cirurgica_proc_seq'), nm_usuario_p, nm_usuario_p,
				clock_timestamp(), clock_timestamp(), cd_estabelecimento_p,
				nr_seq_execucao_guia_w, null, cProcReq_w.nr_sequencia,
				nr_seq_regra_w, ie_situacao_item_p, nr_seq_exec_proc_original_p,
				'N', cProcReq_w.qt_procedimento, 'C',
				'U', 0, 1) returning nr_sequencia into nr_seq_exec_proc_w;

			for cGrau_w in cGrau( nr_seq_regra_w ) loop
				insert into  pls_exec_cirurg_bio_partic(nr_sequencia, nm_usuario, nm_usuario_nrec,
					dt_atualizacao, dt_atualizacao_nrec, cd_estabelecimento,
					nr_seq_exec_cirurg_proc, nr_seq_grau_partic, ie_status)
				values (nextval('pls_exec_cirurg_bio_partic_seq'), nm_usuario_p, nm_usuario_p,
					clock_timestamp(), clock_timestamp(), cd_estabelecimento_p,
					nr_seq_exec_proc_w, cGrau_w.nr_seq_grau_partic, 'A');
			end loop;
		end if;
	end loop;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_execucao_cirurgica_pck.gerar_exec_guia_proc ( nr_seq_exec_cirurgica_p pls_execucao_cirurgica.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_exec_proc_original_p pls_exec_cirurgica_proc.nr_sequencia%type, ie_situacao_item_p pls_exec_cirurgica_proc.ie_situacao_item%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
