-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_execucao_cirurgica_pck.validar_complemento ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_exec_proc_original_p pls_exec_cirurgica_proc.nr_sequencia%type, nr_seq_usuario_web_p pls_usuario_web.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


ie_estagio_w				pls_requisicao.ie_estagio%type;
nr_seq_prestador_exec_w			pls_requisicao.nr_seq_prestador_exec%type;
nr_seq_segurado_w			pls_segurado.nr_sequencia%type;
nr_seq_guia_principal_w			pls_requisicao.nr_seq_guia_principal%type;
nr_seq_lote_execucao_w			pls_lote_execucao_req.nr_sequencia%type;
nr_seq_execucao_w			pls_execucao_requisicao.nr_sequencia%type;
qt_reg_w				integer;
nr_seq_guia_w				pls_guia_plano.nr_sequencia%type;
nr_seq_exec_cirur_w			pls_exec_cirurgica_guia.nr_seq_exec_cirurgica%type;

nr_seq_pedido_w				ptu_pedido_autorizacao.nr_sequencia%type;

ds_ped_compl_autorizacao_w		pls_end_webservice_scs.ds_ped_compl_autorizacao%type;
ds_ip_proxy_w				pls_end_webservice_scs.ds_ip_proxy%type;
ds_porta_proxy_w			pls_end_webservice_scs.ds_porta_proxy%type;
ds_usuario_proxy_w			pls_end_webservice_scs.ds_usuario_proxy%type;
ds_senha_proxy_w			pls_end_webservice_scs.ds_senha_proxy%type;
ds_senha_certificado_w			pls_end_webservice_scs.ds_senha_certificado%type;
ds_caminho_certificado_w		pls_end_webservice_scs.ds_caminho_certificado%type;
ds_webservice_envio_w			pls_end_webservice_scs.ds_webservice_envio%type;
ds_porta_w				pls_end_webservice_scs.ds_porta%type;

req_w					utl_http.req;
res_w					utl_http.resp;
url_w					varchar(100);
ds_resposta_w				varchar(32647);
ds_parametros_w				varchar(1000);
ds_retorno_w				varchar(255);

nr_seq_projeto_w			xml_projeto.nr_sequencia%type;

cProc CURSOR(nr_seq_requisicao_pc	pls_requisicao.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_item,		
		b.qt_procedimento qt_procedimento
	from	pls_requisicao a,
		pls_requisicao_proc b
	where	a.nr_sequencia = b.nr_seq_requisicao
	and	a.nr_sequencia = nr_seq_requisicao_p;

BEGIN

CALL pls_consistir_requisicao(nr_seq_requisicao_p, cd_estabelecimento_p, nm_usuario_p);

select	ie_estagio,
	coalesce(nr_seq_prestador_exec, nr_seq_prestador),
	nr_seq_segurado,
	nr_seq_guia_principal
into STRICT	ie_estagio_w,
	nr_seq_prestador_exec_w,
	nr_seq_segurado_w,
	nr_seq_guia_principal_w
from	pls_requisicao
where 	nr_sequencia = nr_seq_requisicao_p;

select	nr_sequencia
into STRICT	nr_seq_exec_cirur_w
from	pls_execucao_cirurgica
where	nr_seq_guia		= nr_seq_guia_principal_w;

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') and (ie_estagio_w = 10) then
	begin
		nr_seq_pedido_w := ptu_env_pck.ptu_env_00605_v70(null, nr_seq_requisicao_p, cd_estabelecimento_p, nm_usuario_p, nr_seq_pedido_w);
	exception
	when others then
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p, 'L', expressao_pck.obter_desc_expressao(962801) || sqlerrm, null, nm_usuario_p);
	end;

	begin
		select	ds_ped_compl_autorizacao,
			ds_ip_proxy,
			ds_porta_proxy,
			ds_usuario_proxy,
			ds_senha_proxy,
			ds_senha_certificado,
			ds_caminho_certificado,
			ds_webservice_envio,
			ds_porta
		into STRICT	ds_ped_compl_autorizacao_w,
			ds_ip_proxy_w,
			ds_porta_proxy_w,
			ds_usuario_proxy_w,
			ds_senha_proxy_w,
			ds_senha_certificado_w,
			ds_caminho_certificado_w,
			ds_webservice_envio_w,
			ds_porta_w
		from	pls_end_webservice_scs
		where	ie_situacao = 'A';

		if (ds_porta_w IS NOT NULL AND ds_porta_w::text <> '') then
			if (pls_obter_versao_scs = '090') then
				url_w	:= 'http://' || ds_webservice_envio_w || ':' || ds_porta_w || '/SCS90Server/WScsServletProcessor';
				nr_seq_projeto_w	:= 103270;
			else	
				url_w	:= 'http://' || ds_webservice_envio_w || ':' || ds_porta_w || '/SCS80Server/WScsServletProcessor';
				nr_seq_projeto_w	:= 102923;
			end if;

			utl_http.set_transfer_timeout(30);

			ds_parametros_w	:= 	'xml='				||
						'<nrSequenciaProjeto>'		|| nr_seq_projeto_w		|| '</nrSequenciaProjeto>'||
						'<cdTransacaoWebService>'	|| 3				|| '</cdTransacaoWebService>' ||
						'<nrSequenciaTransacao>'	|| nr_seq_pedido_w		|| '</nrSequenciaTransacao>' ||
						'<nmUsuario>'			|| nm_usuario_p			|| '</nmUsuario>' ||
						'<cdEstabelecimento>'		|| cd_estabelecimento_p		|| '</cdEstabelecimento>' ||
						'<urlWSDLServico>'		|| ds_ped_compl_autorizacao_w	|| '</urlWSDLServico>' ||
						'<ipProxy>'			|| ds_ip_proxy_w		|| '</ipProxy>' ||
						'<portaProxy>'			|| ds_porta_proxy_w		|| '</portaProxy>' ||
						'<usuarioProxy>'		|| ds_usuario_proxy_w		|| '</usuarioProxy>' ||
						'<senhaProxy>'			|| ds_senha_proxy_w		|| '</senhaProxy>' ||
						'<senhaCertificado>'		|| ds_senha_certificado_w	|| '</senhaCertificado>' ||
						'<caminhoCertificado>'		|| ds_caminho_certificado_w	|| '</caminhoCertificado>';

			req_w           := utl_http.begin_request(url_w , method => 'POST');
			utl_http.set_header(req_w, 'user-agent', 'mozilla/4.0');
			utl_http.set_header(r => req_w, name => 'Content-Type', value => 'application/x-www-form-urlencoded;charset=utf-8');
			utl_http.set_header(r => req_w, name => 'Content-Length', value => length(ds_parametros_w));
			utl_http.write_text(r => req_w, data => ds_parametros_w);

			res_w := utl_http.get_response(req_w);

			utl_http.read_line(res_w, ds_resposta_w);

			utl_http.end_response(res_w);

			ds_retorno_w		:= substr(ds_resposta_w, 1, 5);

			if (ds_retorno_w = 'ERRO#') then
				CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p, 'L', substr(ds_resposta_w, 5, length(ds_resposta_w)), null, nm_usuario_p);
			end if;
		end if;
	exception
	when others then
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p, 'L', expressao_pck.obter_desc_expressao(962803) || sqlerrm, null, nm_usuario_p);
	end;
end if;

if (ie_estagio_w = 2) then
	pls_gerar_itens_lote_execucao(  nr_seq_prestador_exec_w, nr_seq_segurado_w, nr_seq_requisicao_p,
						'P', cd_estabelecimento_p, nr_seq_usuario_web_p,
						nm_usuario_p, 'Guia de complemento gerada durante cirurgia.', nr_seq_lote_execucao_w);

	pls_inserir_execusao_req(nr_seq_requisicao_p, nr_seq_prestador_exec_w, nr_seq_lote_execucao_w,
				null, nm_usuario_p, nr_seq_execucao_w, null, null);

	for cProc_w in cProc( nr_seq_requisicao_p ) loop
		begin

		update	pls_itens_lote_execucao
		set	ie_executar 		= 'S',
			qt_item_exec 		= cProc_w.qt_procedimento,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_lote_exec	= nr_seq_lote_execucao_w
		and	nr_seq_req_proc		= cProc_w.nr_seq_item;

		CALL pls_inserir_itens_execusao_req(	'P', nr_seq_segurado_w, cProc_w.qt_procedimento,
						nr_seq_requisicao_p, nr_seq_execucao_w, null,
						cProc_w.nr_seq_item, null, nm_usuario_p, null);

		end;
	end loop;

	CALL pls_gerar_guia_requisicao_lote(	nr_seq_lote_execucao_w, nr_seq_segurado_w, nr_seq_prestador_exec_w,
					nm_usuario_p, 'EP', cd_estabelecimento_p,
					nr_seq_usuario_web_p, null, null,
					null, null);

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_execucao_requisicao
	where	nr_sequencia = nr_seq_execucao_w
	and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '');

	if (qt_reg_w > 0) then
		select	nr_seq_guia
		into STRICT	nr_seq_guia_w
		from	pls_execucao_requisicao
		where	nr_sequencia = nr_seq_execucao_w;

		update	pls_guia_plano
		set	ie_status 		= 1,
			ie_estagio 		= 6,
			dt_atualizacao		= clock_timestamp(),
			dt_autorizacao		= clock_timestamp(),
			dt_liberacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia 		= nr_seq_guia_w;

		update	pls_guia_plano_proc
		set	ie_status 		= 'S',
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_guia 		= nr_seq_guia_w;
	end if;	
end if;

CALL pls_execucao_cirurgica_pck.gerar_exec_guia_proc(nr_seq_exec_cirur_w, nr_seq_guia_w, nr_seq_requisicao_p, nr_seq_exec_proc_original_p, 'A', nm_usuario_p, cd_estabelecimento_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_execucao_cirurgica_pck.validar_complemento ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_exec_proc_original_p pls_exec_cirurgica_proc.nr_sequencia%type, nr_seq_usuario_web_p pls_usuario_web.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
