-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_filtro_regra_event_cta_pck.gerencia_regra_filtro (nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
_ora2pg_r RECORD;
c_regra CURSOR FOR
	SELECT 	z.*,
		nextval('pls_id_transacao_pp_cta_seq') nr_id_transacao
	from (	SELECT 	b.nr_sequencia nr_seq_regra_filtro,
			b.dt_inicio_vigencia_ref,
			b.dt_fim_vigencia_ref,
			b.ie_tipo_regra,
			b.nr_ordem_execucao,
			a.nr_sequencia nr_seq_evento
		from	pls_evento a,
			pls_pp_cta_combinada b
		where	a.ie_natureza = 'P'
		and	a.ie_tipo_evento = 'P'
		and	a.ie_situacao = 'A'
		and	b.nr_seq_evento = a.nr_sequencia
		and	b.ie_situacao = 'A'
		order by b.nr_ordem_execucao desc, nr_seq_regra_filtro) z;
		
nr_contador_w		integer;
tb_regra_w		pls_util_cta_pck.t_number_table;
tb_dt_inicio_w		pls_util_cta_pck.t_date_table;
tb_dt_fim_w		pls_util_cta_pck.t_date_table;
tb_id_trans_w		pls_util_cta_pck.t_number_table;

BEGIN

-- verifica se foi passado algum parametro, caso nao tenha sido passado nao faz nada esta validacao e para evitar que seja processado toda a tabela por nao ter uma restricao

if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') or (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	
	-- carrega os parametros necessarios para processar os dados

	CALL CALL CALL CALL CALL CALL pls_filtro_regra_event_cta_pck.carrega_parametros(cd_estabelecimento_p);
	
	-- esta procedure verifica se ha na base, um evento com a sequencia '-1', se nao existir a mesma ira gerar este registro, este evento com a sequencia '-1' deve existir para que seja possivel manter as integridades referenciais 

	-- com a pls_evento e ao mesmo tempo fazer uso deste registro '-1' em comparacoes possibilitanto por exemplo comparar 'nr_seq_pp_evento = -1' e nao 'nr_seq_pp_evento is null' assim obtendo muito mais performance no processo

	CALL pls_filtro_regra_event_cta_pck.gera_evento_default(cd_estabelecimento_p, nm_usuario_p);
	
	-- Removido por questao de performance, esta sendo chamado nas rotinas PLS_PP_ATUALIZA_EVENTO_RESUMO e PLS_PP_CTA_EVENTO_COMBINADA

	-- verifica se tem algo para atualizar nas tabelas

	--pls_gerencia_upd_obj_pck.atualizar_objetos('Tasy', 'PLS_FILTRO_REGRA_EVENT_CTA_PCK.GERENCIA_REGRA_FILTRO()', 'PLS_GRUPO_SERVICO_TM');

	--pls_gerencia_upd_obj_pck.atualizar_objetos('Tasy', 'PLS_FILTRO_REGRA_EVENT_CTA_PCK.GERENCIA_REGRA_FILTRO()', 'PLS_ESTRUTURA_MATERIAL_TM');

	
	-- limpa o vinculo da regra que existe nos registros que serao processados, neste ponto estamos passando '-1' como forma de limpeza para evitar o uso do comando 'nr_seq_pp_evento is null', utilizando 'nr_seq_pp_evento = '-1''

	CALL CALL pls_filtro_regra_event_cta_pck.limpa_vinculo_regra_filtro(	nr_seq_conta_p, nr_seq_analise_p, cd_estabelecimento_p,
					nm_usuario_p, '-1');
					
	-- limpa as variaveis que serao utilizadas para salvar o tempo de execucao

	SELECT * FROM pls_filtro_regra_event_cta_pck.atualiza_log_tempo(	nr_seq_analise_p, nr_seq_conta_p, nm_usuario_p, tb_dt_inicio_w, tb_dt_fim_w, tb_regra_w, tb_id_trans_w) INTO STRICT _ora2pg_r;
 tb_dt_inicio_w := _ora2pg_r.tb_dt_inicio_p; tb_dt_fim_w := _ora2pg_r.tb_dt_fim_p; tb_regra_w := _ora2pg_r.tb_nr_seq_regra_p; tb_id_trans_w := _ora2pg_r.tb_nr_id_trans_p;
	-- retorna todas as regras de acordo com a prioridade de execucao

	nr_contador_w := 0;
	for r_c_regra_w in c_regra loop
	
		tb_regra_w(nr_contador_w) := r_c_regra_w.nr_seq_regra_filtro;
		tb_dt_inicio_w(nr_contador_w) := clock_timestamp();
		
		-- processa os filtros da regra e deixa os registros validos na tabela pls_pp_cta_selecao

		CALL CALL CALL CALL CALL pls_filtro_regra_event_cta_pck.gerencia_aplicacao_filtro(	r_c_regra_w.nr_seq_regra_filtro, r_c_regra_w.ie_tipo_regra, r_c_regra_w.dt_inicio_vigencia_ref,
						r_c_regra_w.dt_fim_vigencia_ref, r_c_regra_w.nr_id_transacao, nr_seq_analise_p, 
						nr_seq_conta_p, cd_estabelecimento_p, nm_usuario_p);
						
		-- grava na tabela/campo "quente" o codigo da regra que casou com o item

		CALL CALL pls_filtro_regra_event_cta_pck.grava_regra_combinada_item(r_c_regra_w.nr_id_transacao, r_c_regra_w.nr_seq_evento);
						
		tb_id_trans_w(nr_contador_w) := r_c_regra_w.nr_id_transacao;
		tb_dt_fim_w(nr_contador_w) := clock_timestamp();
		
		-- se atingiu a quantidade de registros salva o tempo de execucao

		if (nr_contador_w >= pls_util_pck.qt_registro_transacao_w) then
			SELECT * FROM pls_filtro_regra_event_cta_pck.atualiza_log_tempo(	nr_seq_analise_p, nr_seq_conta_p, nm_usuario_p, tb_dt_inicio_w, tb_dt_fim_w, tb_regra_w, tb_id_trans_w) INTO STRICT _ora2pg_r;
 tb_dt_inicio_w := _ora2pg_r.tb_dt_inicio_p; tb_dt_fim_w := _ora2pg_r.tb_dt_fim_p; tb_regra_w := _ora2pg_r.tb_nr_seq_regra_p; tb_id_trans_w := _ora2pg_r.tb_nr_id_trans_p;
			nr_contador_w := 0;
		else
			nr_contador_w := nr_contador_w + 1;
		end if;
		
		-- limpa a tabela de selecao

		--pls_filtro_regra_event_cta_pck.limpar_transacao(r_c_regra_w.nr_id_transacao);

	end loop;
	
	-- limpa o vinculo da regra que existe nos registros que foram processados, neste ponto estamos passando '-1' como forma de limpeza para evitar o uso do comando 'nr_seq_evento is null', utilizando 'nr_seq_evento = '-1''

	CALL CALL pls_filtro_regra_event_cta_pck.limpa_vinculo_regra_filtro(	nr_seq_conta_p, nr_seq_analise_p, cd_estabelecimento_p,
					nm_usuario_p, null);
					
	-- caso tenha sobrado algo insere no log de tempo

	SELECT * FROM pls_filtro_regra_event_cta_pck.atualiza_log_tempo(	nr_seq_analise_p, nr_seq_conta_p, nm_usuario_p, tb_dt_inicio_w, tb_dt_fim_w, tb_regra_w, tb_id_trans_w) INTO STRICT _ora2pg_r;
 tb_dt_inicio_w := _ora2pg_r.tb_dt_inicio_p; tb_dt_fim_w := _ora2pg_r.tb_dt_fim_p; tb_regra_w := _ora2pg_r.tb_nr_seq_regra_p; tb_id_trans_w := _ora2pg_r.tb_nr_id_trans_p;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_filtro_regra_event_cta_pck.gerencia_regra_filtro (nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
