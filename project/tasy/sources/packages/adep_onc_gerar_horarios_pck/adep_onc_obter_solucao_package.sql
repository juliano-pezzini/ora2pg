-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_onc_gerar_horarios_pck.adep_onc_obter_solucao ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_atendimento_p bigint, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_opcao_filtro_p text, dt_filtro_p timestamp, nr_ciclo_p bigint, ie_lib_pend_rep_p text) AS $body$
DECLARE


	nr_seq_wadep_w		bigint;
	nr_prescricao_w		bigint;
	nr_seq_solucao_w	integer;
	ds_solucao_w		varchar(255);
	ie_acm_sn_w		varchar(1);
	ds_prescricao_w		varchar(240);
	ds_componentes_w	varchar(240);
	ie_status_solucao_w	varchar(15);
	ie_suspensa_w		varchar(1);
	nr_ciclo_w		smallint;
	ds_dia_ciclo_w		varchar(5);
	nr_seq_onc_w		bigint;
	ie_pre_medicacao_w	varchar(1);
	dt_oncologia_w		timestamp;
	nr_seq_sol_cpoe_w	prescr_material.nr_seq_mat_cpoe%type;
						
	c01 CURSOR FOR
	SELECT	nr_prescricao,
		nr_seq_solucao,
		ds_solucao,
		ie_acm_sn,
		ds_prescricao,
		ds_componentes,
		ie_status_solucao,
		nr_ciclo,
		ds_dia_ciclo,
		nr_seq_ordem_adep,
		ie_pre_medicacao,
		dt_oncologia,
		nr_seq_sol_cpoe
	from	(
		SELECT	a.nr_prescricao,
				x.nr_seq_solucao,
				substr(CASE WHEN GetJuntaCompSolucao='S' THEN obter_Concat_comp_sol(a.nr_prescricao,x.nr_seq_solucao)  ELSE coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)) END ,1,240) ds_solucao,
				obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
				substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
				substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p) || CASE WHEN coalesce(x.DS_ORIENTACAO::text, '') = '' THEN  ''  ELSE wheb_mensagem_pck.get_texto(857391,'ds_orientacao='|| x.DS_ORIENTACAO) END ,1,240) ds_componentes,
				substr(obter_status_solucao_prescr(1,a.nr_prescricao,x.nr_seq_solucao),1,3) ie_status_solucao,
				b.nr_ciclo,
				coalesce(b.ds_dia_ciclo, b.ds_dia_ciclo_real) ds_dia_ciclo,
				coalesce(coalesce(x.nr_Seq_ordem_adep,x.nr_agrupamento),0) nr_seq_ordem_adep,
				coalesce(x.ie_pre_medicacao,'N') ie_pre_medicacao,
				coalesce(b.dt_real,b.dt_prevista) dt_oncologia,
				obter_nr_seq_cpoe_sol(x.nr_prescricao, x.nr_seq_solucao) nr_seq_sol_cpoe
		from		prescr_solucao x,
				prescr_medica a,
				paciente_atendimento b,
				paciente_setor p
		where	x.nr_prescricao = a.nr_prescricao
		and		a.nr_seq_atend	= b.nr_seq_atendimento
		and		b.nr_seq_paciente = p.nr_seq_paciente
		and		a.nr_atendimento = nr_atendimento_p
		and		a.cd_pessoa_fisica = p.cd_pessoa_fisica
		and		obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia), ie_data_lib_prescr_p) = 'S'
		and		coalesce(x.nr_seq_dialise::text, '') = ''
		and		((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
		and		coalesce(a.ie_recem_nato,'N')	= 'N'
		and		((ie_opcao_filtro_p	in ('Q','C')) or (coalesce(b.dt_real,b.dt_prevista) between trunc(dt_filtro_p) and fim_dia(dt_filtro_p)))
		and		b.nr_ciclo	= coalesce(nr_ciclo_p,b.nr_ciclo)		
		group by
				a.nr_prescricao,
				x.nr_seq_solucao,
				x.ds_solucao,
				x.ie_acm,
				x.DS_ORIENTACAO,
				x.ie_se_necessario,
				nm_usuario_p,
				substr(CASE WHEN GetJuntaCompSolucao='S' THEN obter_Concat_comp_sol(a.nr_prescricao,x.nr_seq_solucao)  ELSE coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)) END ,1,240),
				cd_estabelecimento_p,
				b.nr_ciclo,
				coalesce(b.ds_dia_ciclo, b.ds_dia_ciclo_real),
				coalesce(coalesce(x.nr_Seq_ordem_adep,x.nr_agrupamento),0),
				coalesce(x.ie_pre_medicacao,'N'),
				coalesce(b.dt_real,b.dt_prevista),
				obter_nr_seq_cpoe_sol(x.nr_prescricao, x.nr_seq_solucao)
		) alias47
	group by
		nr_prescricao,
		nr_seq_solucao,
		ds_solucao,
		ie_acm_sn,	
		ds_prescricao,
		ds_componentes,
		ie_status_solucao,
		nr_ciclo,
		ds_dia_ciclo,
		nr_seq_ordem_adep,
		ie_pre_medicacao,
		dt_oncologia,
		nr_seq_sol_cpoe;
		
	c02 CURSOR FOR
	SELECT	nr_prescricao,
		nr_seq_solucao,
		ds_solucao,
		ie_acm_sn,
		ds_prescricao,
		ds_componentes,
		ie_status_solucao,
		nr_ciclo,
		ds_dia_ciclo,
		nr_seq_ordem_adep,
		ie_pre_medicacao,
		dt_oncologia,
		nr_seq_sol_cpoe
	from	(
		SELECT	a.nr_prescricao,
			x.nr_seq_solucao,
			substr(CASE WHEN GetJuntaCompSolucao='S' THEN obter_Concat_comp_sol(a.nr_prescricao,x.nr_seq_solucao)  ELSE coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)) END ,1,240) ds_solucao,
			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
			substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
			substr(obter_componentes_solucao(a.nr_prescricao,x.nr_seq_solucao,'S',nm_usuario_p,cd_estabelecimento_p) || CASE WHEN coalesce(x.DS_ORIENTACAO::text, '') = '' THEN  ''  ELSE wheb_mensagem_pck.get_texto(857391,'ds_orientacao='|| x.DS_ORIENTACAO) END ,1,240) ds_componentes,
			substr(obter_status_solucao_prescr(1,a.nr_prescricao,x.nr_seq_solucao),1,3) ie_status_solucao,
			b.nr_ciclo,
			coalesce(b.ds_dia_ciclo, b.ds_dia_ciclo_real) ds_dia_ciclo,
			coalesce(coalesce(x.nr_Seq_ordem_adep,x.nr_agrupamento),0) nr_seq_ordem_adep,
			coalesce(x.ie_pre_medicacao,'N') ie_pre_medicacao,
			coalesce(b.dt_real,b.dt_prevista) dt_oncologia,
			obter_nr_seq_cpoe_sol(x.nr_prescricao, x.nr_seq_solucao) nr_seq_sol_cpoe
		from	prescr_solucao x,
			prescr_medica a,
			paciente_atendimento b,
			paciente_setor p
		where	x.nr_prescricao = a.nr_prescricao
		and	a.nr_seq_atend	= b.nr_seq_atendimento
		and	b.nr_seq_paciente = p.nr_seq_paciente
		and	a.nr_atendimento = nr_atendimento_p
		and	a.cd_pessoa_fisica = p.cd_pessoa_fisica
		and	coalesce(obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia), ie_data_lib_prescr_p),'N') <> 'S'
		and	((coalesce(a.dt_liberacao::text, '') = '') or (coalesce(a.dt_liberacao_farmacia::text, '') = ''))
		and	coalesce(x.dt_status::text, '') = ''
		and	coalesce(x.ie_status::text, '') = ''			
		and 	coalesce(x.dt_suspensao::text, '') = ''
		and 	coalesce(a.dt_suspensao::text, '') = ''			
		and	(a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '')
		and	coalesce(x.nr_seq_dialise::text, '') = ''
		and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
		and	coalesce(a.ie_recem_nato,'N')	= 'N'
		and	((ie_opcao_filtro_p	in ('Q','C')) or (coalesce(b.dt_real,b.dt_prevista) between trunc(dt_filtro_p) and fim_dia(dt_filtro_p)))
		and	b.nr_ciclo	= coalesce(nr_ciclo_p,b.nr_ciclo)		
		group by
			a.nr_prescricao,
			x.nr_seq_solucao,
			x.ds_solucao,
			x.ie_acm,
			x.DS_ORIENTACAO,
			x.ie_se_necessario,
			nm_usuario_p,
			substr(CASE WHEN GetJuntaCompSolucao='S' THEN obter_Concat_comp_sol(a.nr_prescricao,x.nr_seq_solucao)  ELSE coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)) END ,1,240),
			cd_estabelecimento_p,
			b.nr_ciclo,
			coalesce(b.ds_dia_ciclo, b.ds_dia_ciclo_real),
			coalesce(coalesce(x.nr_Seq_ordem_adep,x.nr_agrupamento),0),
			coalesce(x.ie_pre_medicacao,'N'),
			coalesce(b.dt_real,b.dt_prevista),
			obter_nr_seq_cpoe_sol(x.nr_prescricao, x.nr_seq_solucao) 
		) alias58
	group by
		nr_prescricao,
		nr_seq_solucao,
		ds_solucao,
		ie_acm_sn,	
		ds_prescricao,
		ds_componentes,
		ie_status_solucao,
		nr_ciclo,
		ds_dia_ciclo,
		nr_seq_ordem_adep,
		ie_pre_medicacao,
		dt_oncologia,
		nr_seq_sol_cpoe;

	
BEGIN

	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,		
			ds_prescricao_w,
			ds_componentes_w,
			ie_status_solucao_w,
			nr_ciclo_w,
			ds_dia_ciclo_w,
			nr_seq_onc_w,
			ie_pre_medicacao_w,
			dt_oncologia_w,
			nr_seq_sol_cpoe_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('w_adep_t_seq')
		into STRICT	nr_seq_wadep_w
		;

		insert into w_adep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,
			ds_item,
			ie_acm_sn,
			ds_prescricao,
			ds_diluicao,
			ie_status_item,
			ie_suspenso,
			nr_agrupamento,
			nr_prescricoes,
			cd_item,
			ds_componentes,
			nr_ciclo,
			ds_dia_ciclo,
			nr_seq_onc,
			ie_pre_medicacao,
			dt_oncologia,
			nr_seq_cpoe)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'SOL',
			nr_prescricao_w,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,
			ds_prescricao_w,
			ds_componentes_w,
			ie_status_solucao_w,
			null,
			0,
			nr_prescricao_w,
			0,
			ds_componentes_w,
			nr_ciclo_w,
			ds_dia_ciclo_w,
			nr_seq_onc_w,
			ie_pre_medicacao_w,
			dt_oncologia_w,
			nr_seq_sol_cpoe_w);
		commit;
		end;
	end loop;
	close c01;

	if (ie_lib_pend_rep_p	= 'S') then
	
		open c02;
		loop
		fetch c02 into	nr_prescricao_w,
				nr_seq_solucao_w,
				ds_solucao_w,
				ie_acm_sn_w,		
				ds_prescricao_w,
				ds_componentes_w,
				ie_status_solucao_w,
				nr_ciclo_w,
				ds_dia_ciclo_w,
				nr_seq_onc_w,
				ie_pre_medicacao_w,
				dt_oncologia_w,
				nr_seq_sol_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	nextval('w_adep_t_seq')
			into STRICT	nr_seq_wadep_w
			;
			
			insert into w_adep_t(
				nr_sequencia,
				nm_usuario,
				ie_tipo_item,
				nr_prescricao,
				nr_seq_item,
				ds_item,
				ie_acm_sn,
				ds_prescricao,
				ds_diluicao,
				ie_status_item,
				ie_suspenso,
				nr_agrupamento,
				nr_prescricoes,
				cd_item,
				ds_componentes,
				nr_ciclo,
				ds_dia_ciclo,
				nr_seq_onc,
				ie_pre_medicacao,
				dt_oncologia,
				nr_seq_cpoe)
			values (
				nr_seq_wadep_w,
				nm_usuario_p,
				'SOL',
				nr_prescricao_w,
				nr_seq_solucao_w,
				ds_solucao_w,
				ie_acm_sn_w,
				ds_prescricao_w,
				ds_componentes_w,
				ie_status_solucao_w,
				null,
				0,
				nr_prescricao_w,
				0,
				ds_componentes_w,
				nr_ciclo_w,
				ds_dia_ciclo_w,
				nr_seq_onc_w,
				ie_pre_medicacao_w,
				dt_oncologia_w,
				nr_seq_sol_cpoe_w);
			commit;
			end;
		end loop;
		close c02;	
	
	end if;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_onc_gerar_horarios_pck.adep_onc_obter_solucao ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_atendimento_p bigint, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_opcao_filtro_p text, dt_filtro_p timestamp, nr_ciclo_p bigint, ie_lib_pend_rep_p text) FROM PUBLIC;
