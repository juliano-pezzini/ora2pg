-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_tributacao_pck.gera_valor_trib_pessoa ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ds_controle_agrup_w		varchar(500);
ds_controle_agrup_temp_w	varchar(500);
vl_item_w			pls_pp_base_atual_trib.vl_item%type;
nr_contador_w			integer;

cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_prestador_w	pls_prestador.nr_sequencia%type;
cd_cgc_w		pessoa_juridica.cd_cgc%type;
cd_tributo_w		tributo.cd_tributo%type;
ie_tipo_contrat_w	varchar(2);
nr_seq_tipo_prest_w	pls_tipo_prestador.nr_sequencia%type;
ie_tipo_prest_w		varchar(2);
dt_comp_base_w		timestamp;
ie_tipo_tributo_w	tributo.ie_tipo_tributo%type;
dt_mes_lote_pgto_orig_w	timestamp;

tb_nr_seq_base_atual_w	pls_util_cta_pck.t_number_table;

-- retorna os registros que deverao existir na PLS_PP_VALOR_TRIB_PESSOA de acordo com a 

-- classificacao do registro (pessoa, tributo, tipo de contratacao, tipo de prestador, data do tributo

c01 CURSOR(	nr_seq_lote_pc	pls_pp_lote.nr_sequencia%type) FOR
	SELECT	b.cd_pessoa_fisica,
		b.nr_seq_prestador,
		b.cd_cgc,
		a.cd_tributo,
		a.ie_tipo_contratacao,
		a.nr_seq_tipo_prestador,
		b.ie_tipo_prestador,
		a.dt_comp_base_calc,
		c.ie_tipo_tributo,
		a.vl_item vl_base_atual,
		a.nr_sequencia nr_seq_base_atual,
		(SELECT	trunc(max(l.dt_mes_competencia),'month')
		from	pls_pp_lote l
		where	l.nr_sequencia	= a.nr_seq_lote) dt_mes_lote_pgto_orig
	from	pls_pp_base_atual_trib a,
		pls_pp_prestador_tmp b,
		tributo c
	where	a.nr_seq_lote = nr_seq_lote_pc
	and	b.nr_seq_prestador = a.nr_seq_prestador
	and	c.cd_tributo = a.cd_tributo
	order by
		b.cd_pessoa_fisica,
		b.nr_seq_prestador,
		b.cd_cgc,
		a.cd_tributo,
		b.ie_tipo_prestador,
		a.dt_comp_base_calc;

BEGIN

vl_item_w := 0;
ds_controle_agrup_w := null;
nr_contador_w := 0;
for r_c01_w in c01(nr_seq_lote_p) loop
	
	-- armazena os valores para utilizar na comparacao posteriormente

	ds_controle_agrup_temp_w := '';
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(r_c01_w.cd_pessoa_fisica, 'X');
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(to_char(r_c01_w.nr_seq_prestador), 'X');
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(r_c01_w.cd_cgc, 'X');
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(to_char(r_c01_w.cd_tributo), 'X');
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(r_c01_w.ie_tipo_prestador, 'X');
	ds_controle_agrup_temp_w := ds_controle_agrup_temp_w || coalesce(to_char(r_c01_w.dt_comp_base_calc), 'X');
	
	if (ds_controle_agrup_w IS NOT NULL AND ds_controle_agrup_w::text <> '') then
		if (ds_controle_agrup_temp_w != ds_controle_agrup_w) then
			-- salva os dados no banco

			SELECT * FROM pls_pp_tributacao_pck.alimenta_pp_trib_pessoa(	nr_contador_w, vl_item_w, tb_nr_seq_base_atual_w, cd_pessoa_fisica_w, nr_seq_prestador_w, cd_cgc_w, cd_tributo_w, ie_tipo_contrat_w, nr_seq_tipo_prest_w, ie_tipo_prest_w, dt_comp_base_w, ie_tipo_tributo_w, nr_seq_lote_p, nm_usuario_p, dt_mes_lote_pgto_orig_w) INTO STRICT _ora2pg_r;
 	nr_contador_w := _ora2pg_r.nr_cont_p; vl_item_w := _ora2pg_r.vl_base_atual_p; tb_nr_seq_base_atual_w := _ora2pg_r.tb_nr_seq_base_atual_p;
		end if;
	end if;
	
	-- salva os valores nas variaveis para salvar posteriormente

	cd_pessoa_fisica_w := r_c01_w.cd_pessoa_fisica;
	nr_seq_prestador_w := r_c01_w.nr_seq_prestador;
	cd_cgc_w := r_c01_w.cd_cgc;
	cd_tributo_w := r_c01_w.cd_tributo;
	ie_tipo_contrat_w := r_c01_w.ie_tipo_contratacao;
	nr_seq_tipo_prest_w := r_c01_w.nr_seq_tipo_prestador;
	ie_tipo_prest_w := r_c01_w.ie_tipo_prestador;
	dt_comp_base_w := r_c01_w.dt_comp_base_calc;
	ie_tipo_tributo_w := r_c01_w.ie_tipo_tributo;
	dt_mes_lote_pgto_orig_w := r_c01_w.dt_mes_lote_pgto_orig;
	
	vl_item_w := vl_item_w + r_c01_w.vl_base_atual;
	tb_nr_seq_base_atual_w(nr_contador_w) := r_c01_w.nr_seq_base_atual;
	
	nr_contador_w := nr_contador_w + 1;
	ds_controle_agrup_w := ds_controle_agrup_temp_w;
end loop;

-- salva os dados no banco da ultima interacao do loop

SELECT * FROM pls_pp_tributacao_pck.alimenta_pp_trib_pessoa(	nr_contador_w, vl_item_w, tb_nr_seq_base_atual_w, cd_pessoa_fisica_w, nr_seq_prestador_w, cd_cgc_w, cd_tributo_w, ie_tipo_contrat_w, nr_seq_tipo_prest_w, ie_tipo_prest_w, dt_comp_base_w, ie_tipo_tributo_w, nr_seq_lote_p, nm_usuario_p, dt_mes_lote_pgto_orig_w) INTO STRICT _ora2pg_r;
 	nr_contador_w := _ora2pg_r.nr_cont_p; vl_item_w := _ora2pg_r.vl_base_atual_p; tb_nr_seq_base_atual_w := _ora2pg_r.tb_nr_seq_base_atual_p;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_tributacao_pck.gera_valor_trib_pessoa ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
