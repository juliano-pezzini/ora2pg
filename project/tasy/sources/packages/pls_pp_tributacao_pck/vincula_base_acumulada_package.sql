-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_tributacao_pck.vincula_base_acumulada ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_tributo_p tributo.cd_tributo%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_nr_seq_base_acum_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_vl_trib_pes_w	pls_util_cta_pck.t_number_table;
tb_vl_base_w		pls_util_cta_pck.t_number_table;
tb_vl_tributo_w		pls_util_cta_pck.t_number_table;
tb_vl_nao_retido_w	pls_util_cta_pck.t_number_table;
tb_vl_base_nao_ret_w	pls_util_cta_pck.t_number_table;
tb_vl_trib_adic_w	pls_util_cta_pck.t_number_table;
tb_vl_base_adic_w	pls_util_cta_pck.t_number_table;
tb_vl_base_total_w	pls_util_cta_pck.t_number_table;

c01 CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
		nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		cd_tributo_pc		tributo.cd_tributo%type) FOR
	SELECT	a.nr_sequencia nr_seq_base_acumulada,
		b.nr_sequencia nr_seq_vl_trib_pes
	from	pls_pp_valor_trib_pessoa b,
		pls_pp_base_acum_trib a		
	where	b.nr_seq_lote = nr_seq_lote_pc
	and	b.nr_seq_prestador = nr_seq_prestador_pc
	and	b.cd_tributo = cd_tributo_pc
	and	b.ie_tipo_prestador = 'PF'
	--and	a.nr_seq_lote_pgto_orig != nr_seq_lote_pc -- Caso a pessoa fisica tenha 2 prestadores, nao pode acumular o tributo do mesmo lote de pagamento

	and	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.dt_competencia = b.dt_competencia
	and	a.ie_tipo_tributo = b.ie_tipo_tributo
	and not exists (	SELECT	1
				from	pls_pp_prestador	z
				where	z.nr_seq_lote		= a.nr_seq_lote_pgto_orig
				and	z.nr_seq_prestador	= b.nr_seq_prestador
				and	z.ie_cancelado		= 'S');

-- No pagamento de producao medica (novo) e trabalhado de forma diferente do resto do sistema quando falamos de base acumulada.

-- Nao salvamos os valores acumulados na base 'atual', ja os demais processos sempre salvam o valor total acumulando os valores.

-- Por este motivo nao somamos na base adic o valor adic quando for novo pagamento

c02 CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
		nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		cd_tributo_pc		tributo.cd_tributo%type) FOR
	SELECT	coalesce(sum(b.vl_base), 0),
		coalesce(sum(b.vl_tributo), 0),
		coalesce(sum(b.vl_nao_retido), 0),
		coalesce(sum(b.vl_base_nao_retido), 0),
		coalesce(sum(b.vl_trib_adic), 0),
		coalesce(sum(CASE WHEN b.ie_origem='NP' THEN  0  ELSE b.vl_base_adic END ), 0) vl_base_adic,
		coalesce(sum(b.vl_item), 0),
		c.nr_sequencia nr_seq_vl_trib_pes
	from	pls_pp_valor_trib_pessoa c,
		pls_pp_ba_acu_trib_pess a,
		pls_pp_base_acum_trib b
	where	c.nr_seq_lote = nr_seq_lote_pc
	and	c.nr_seq_prestador = nr_seq_prestador_pc
	and	c.cd_tributo = cd_tributo_pc
	and	c.ie_tipo_prestador = 'PF'
	and	a.nr_seq_trib_pessoa = c.nr_sequencia
	and	b.nr_sequencia = a.nr_seq_base_acumulada
	group by c.nr_sequencia;


BEGIN

-- busca todos os tributos de pessoa fisica que precisam ser calculados e vincula os registros

-- relacionados a base acumulada

open c01(nr_seq_lote_p, nr_seq_prestador_p, cd_tributo_p);
loop
	fetch c01 bulk collect into	tb_nr_seq_base_acum_w, tb_nr_seq_vl_trib_pes_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_base_acum_w.count = 0;
	
	forall i in tb_nr_seq_base_acum_w.first..tb_nr_seq_base_acum_w.last
		insert into pls_pp_ba_acu_trib_pess(
			nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
			nm_usuario, nm_usuario_nrec, nr_seq_base_acumulada,
			nr_seq_trib_pessoa
		) values (
			nextval('pls_pp_ba_acu_trib_pess_seq'), clock_timestamp(), clock_timestamp(),
			nm_usuario_p, nm_usuario_p, tb_nr_seq_base_acum_w(i),
			tb_nr_seq_vl_trib_pes_w(i)
		);
	commit;
end loop;
close c01;

-- atualiza os dados dos valores acumulados na tabela de tributo da pessoa fisica

open c02(nr_seq_lote_p, nr_seq_prestador_p, cd_tributo_p);
loop
	fetch c02 bulk collect into 	tb_vl_base_w, tb_vl_tributo_w, tb_vl_nao_retido_w,
					tb_vl_base_nao_ret_w, tb_vl_trib_adic_w, tb_vl_base_adic_w,
					tb_vl_base_total_w, tb_nr_seq_vl_trib_pes_w
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_nr_seq_vl_trib_pes_w.count = 0;

	forall i in tb_nr_seq_vl_trib_pes_w.first..tb_nr_seq_vl_trib_pes_w.last
		update	pls_pp_valor_trib_pessoa
		set	vl_base_acumulada = tb_vl_base_w(i),
			vl_tributo_pago = tb_vl_tributo_w(i),
			vl_nao_retido = tb_vl_nao_retido_w(i),
			vl_base_nao_retido = tb_vl_base_nao_ret_w(i),
			vl_trib_adic = tb_vl_trib_adic_w(i),
			vl_base_adic = tb_vl_base_adic_w(i),
			vl_base_total = vl_base_total + tb_vl_base_total_w(i)
		where	nr_sequencia = tb_nr_seq_vl_trib_pes_w(i);
	commit;
end loop;
close c02;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_tributacao_pck.vincula_base_acumulada ( nr_seq_lote_p pls_pp_lote.nr_sequencia%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, cd_tributo_p tributo.cd_tributo%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
