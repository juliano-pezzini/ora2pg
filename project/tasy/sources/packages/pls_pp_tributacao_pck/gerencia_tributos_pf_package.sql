-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_pp_tributacao_pck.gerencia_tributos_pf ( cd_tributo_p tributo.cd_tributo%type, ie_tipo_tributo_p tributo.ie_tipo_tributo%type, nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_acumulativo_w	tributo_conta_pagar.ie_acumulativo%type;
vl_teto_base_calc_w	tributo_conta_pagar.vl_teto_base_calculo%type;
vl_minimo_base_w	tributo_conta_pagar.vl_minimo%type;
vl_minimo_tributo_w	tributo_conta_pagar.vl_minimo_tributo%type;
vl_trib_inss_lote_w	double precision;

tb_nr_seq_trib_pes_w	pls_util_cta_pck.t_number_table;
tb_pr_aliquota_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_tit_pag_w	pls_util_cta_pck.t_number_table;
tb_vl_base_calc_w	pls_util_cta_pck.t_number_table;
tb_vl_tributo_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_irpf_w	pls_util_cta_pck.t_number_table;
tb_vl_reducao_w		pls_util_cta_pck.t_number_table;
tb_vl_desc_depen_w	pls_util_cta_pck.t_number_table;
tb_qt_dependente_w	pls_util_cta_pck.t_number_table;
tb_vl_trib_nao_retido_w	pls_util_cta_pck.t_number_table;
tb_vl_trib_adic_w	pls_util_cta_pck.t_number_table;
tb_vl_base_nao_retido_w	pls_util_cta_pck.t_number_table;
tb_vl_base_adic_w	pls_util_cta_pck.t_number_table;
tb_vl_base_acum_trib_w	pls_util_cta_pck.t_number_table;
tb_vl_base_total_w	pls_util_cta_pck.t_number_table;
tb_dt_pgto_trib_w	pls_util_cta_pck.t_date_table;
tb_nr_seq_trans_reg_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_trans_baixa_w	pls_util_cta_pck.t_number_table;
tb_cd_beneficiario_w	pls_util_cta_pck.t_varchar2_table_20;
tb_ie_periodicidade_w	pls_util_cta_pck.t_varchar2_table_5;
tb_cd_variacao_w	pls_util_cta_pck.t_number_table;
tb_cd_cond_pgto_w	pls_util_cta_pck.t_number_table;
tb_cd_darf_w		pls_util_cta_pck.t_varchar2_table_10;
tb_nr_seq_classe_w	pls_util_cta_pck.t_number_table;
tb_cd_tipo_baixa_neg_w	pls_util_cta_pck.t_number_table;
tb_ie_vencimento_w	pls_util_cta_pck.t_varchar2_table_5;
tb_ie_ger_tit_pagar_w	pls_util_cta_pck.t_varchar2_table_5;
tb_cd_conta_financ_w	pls_util_cta_pck.t_number_table;

nr_cont_w		integer;

c00 CURSOR(	nr_seq_lote_pc	pls_pp_lote.nr_sequencia%type,
		cd_tributo_pc	tributo.cd_tributo%type) FOR
	SELECT distinct nr_seq_prestador
	from (
		SELECT	a.nr_seq_prestador, a.vl_base_atual
		from	pls_pp_valor_trib_pessoa a
		where	a.nr_seq_lote = nr_seq_lote_pc
		and	a.cd_tributo = cd_tributo_pc
		and	a.ie_tipo_prestador = 'PF'
		order by a.vl_base_atual desc) alias1;

c01 CURSOR(	nr_seq_lote_pc		pls_pp_lote.nr_sequencia%type,
		nr_seq_prestador_pc	pls_prestador.nr_sequencia%type,
		cd_tributo_pc		tributo.cd_tributo%type) FOR
	SELECT	a.nr_sequencia,
		a.cd_pessoa_fisica,
		a.nr_seq_prestador,
		a.vl_base_atual,
		a.ie_tipo_contratacao,
		a.dt_competencia,
		a.vl_tributo_pago,
		a.vl_base_acumulada,
		a.vl_base_total,
		a.vl_nao_retido,
		a.vl_base_nao_retido,
		a.vl_trib_adic,
		a.vl_base_adic,
		a.nr_seq_tipo_prestador,
		(SELECT	coalesce(max(z.qt_dependente),0)
		from	pessoa_fisica z
		where	z.cd_pessoa_fisica = a.cd_pessoa_fisica) qt_dependente,
		b.ie_vencimento,
		b.ie_gerar_titulo_pagar,
		coalesce(b.ie_venc_pls_pag_prod, 'X') ie_venc_pls_pag_prod,
		(select	max(x.dt_venc_titulo)
		from	pls_pp_prestador_tmp x
		where	x.nr_seq_prestador = a.nr_seq_prestador) dt_venc_titulo,
		a.dt_mes_lote_pgto_orig,
		(select	max(p.nr_seq_classificacao)
		from	pls_prestador p
		where	p.nr_sequencia = a.nr_seq_prestador) nr_seq_class_prestador
	from	pls_pp_valor_trib_pessoa a,
		tributo b
	where	a.nr_seq_lote = nr_seq_lote_pc
	and	a.nr_seq_prestador = nr_seq_prestador_pc
	and	a.cd_tributo = cd_tributo_pc
	and	a.ie_tipo_prestador = 'PF'
	and	b.cd_tributo = cd_tributo_pc
	order by a.vl_base_atual desc;

BEGIN
-- abre a nivel de prestador

for r_c00_w in c00( nr_seq_lote_p, cd_tributo_p) loop

	-- agora que ja temos os registros para o calculo e ja temos o vinculo dos mesmos com a base atual,

	-- precisamos verificar os registros que devem compor a base acumulada, estes no momento so fazem 

	-- sentido para pessoa fisica, pois pessoa juridica o valor do imposto deve ser pago de acordo com

	-- o rendimento, independente dos valores que ja foram pagos na mesma competencia

	CALL pls_pp_tributacao_pck.vincula_base_acumulada(	nr_seq_lote_p, r_c00_w.nr_seq_prestador, cd_tributo_p, nm_usuario_p);

	-- inicializa as variaveis

	SELECT * FROM pls_pp_tributacao_pck.atualiza_valor_trib_pessoa(	tb_nr_seq_trib_pes_w, tb_pr_aliquota_w, tb_vl_desc_depen_w, tb_nr_seq_tit_pag_w, tb_vl_base_calc_w, tb_vl_tributo_w, tb_nr_seq_irpf_w, tb_vl_reducao_w, tb_qt_dependente_w, tb_vl_trib_nao_retido_w, tb_vl_trib_adic_w, tb_vl_base_nao_retido_w, tb_vl_base_adic_w, tb_vl_base_acum_trib_w, tb_vl_base_total_w, tb_dt_pgto_trib_w, tb_nr_seq_trans_reg_w, tb_nr_seq_trans_baixa_w, tb_cd_beneficiario_w, tb_ie_periodicidade_w, tb_cd_variacao_w, tb_cd_cond_pgto_w, tb_cd_darf_w, tb_nr_seq_classe_w, tb_cd_tipo_baixa_neg_w, tb_ie_vencimento_w, tb_ie_ger_tit_pagar_w, tb_cd_conta_financ_w, nr_cont_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_trib_pes_w := _ora2pg_r.tb_nr_seq_trib_pes_p; tb_pr_aliquota_w := _ora2pg_r.tb_pr_aliquota_p; tb_vl_desc_depen_w := _ora2pg_r.tb_vl_desc_depen_p; tb_nr_seq_tit_pag_w := _ora2pg_r.tb_nr_seq_tit_pag_p; tb_vl_base_calc_w := _ora2pg_r.tb_vl_base_calc_p; tb_vl_tributo_w := _ora2pg_r.tb_vl_tributo_p; tb_nr_seq_irpf_w := _ora2pg_r.tb_nr_seq_irpf_p; tb_vl_reducao_w := _ora2pg_r.tb_vl_reducao_p; tb_qt_dependente_w := _ora2pg_r.tb_qt_dependente_p; tb_vl_trib_nao_retido_w := _ora2pg_r.tb_vl_trib_nao_retido_p; tb_vl_trib_adic_w := _ora2pg_r.tb_vl_trib_adic_p; tb_vl_base_nao_retido_w := _ora2pg_r.tb_vl_base_nao_retido_p; tb_vl_base_adic_w := _ora2pg_r.tb_vl_base_adic_p; tb_vl_base_acum_trib_w := _ora2pg_r.tb_vl_base_acum_trib_p; tb_vl_base_total_w := _ora2pg_r.tb_vl_base_total_p; tb_dt_pgto_trib_w := _ora2pg_r.tb_dt_pgto_trib_p; tb_nr_seq_trans_reg_w := _ora2pg_r.tb_nr_seq_trans_reg_p; tb_nr_seq_trans_baixa_w := _ora2pg_r.tb_nr_seq_trans_baixa_p; tb_cd_beneficiario_w := _ora2pg_r.tb_cd_beneficiario_p; tb_ie_periodicidade_w := _ora2pg_r.tb_ie_periodicidade_p; tb_cd_variacao_w := _ora2pg_r.tb_cd_variacao_p; tb_cd_cond_pgto_w := _ora2pg_r.tb_cd_cond_pgto_p; tb_cd_darf_w := _ora2pg_r.tb_cd_darf_p; tb_nr_seq_classe_w := _ora2pg_r.tb_nr_seq_classe_p; tb_cd_tipo_baixa_neg_w := _ora2pg_r.tb_cd_tipo_baixa_neg_p; tb_ie_vencimento_w := _ora2pg_r.tb_ie_vencimento_p; tb_ie_ger_tit_pagar_w := _ora2pg_r.tb_ie_ger_tit_pagar_p; tb_cd_conta_financ_w := _ora2pg_r.tb_cd_conta_financ_p; nr_cont_w := _ora2pg_r.nr_cont_p;
					
	for r_c01_w in c01( nr_seq_lote_p, r_c00_w.nr_seq_prestador, cd_tributo_p) loop

		tb_nr_seq_trib_pes_w(nr_cont_w) := r_c01_w.nr_sequencia;
		tb_qt_dependente_w(nr_cont_w) := r_c01_w.qt_dependente;
		tb_ie_vencimento_w(nr_cont_w) := r_c01_w.ie_vencimento;
		tb_ie_ger_tit_pagar_w(nr_cont_w) := r_c01_w.ie_gerar_titulo_pagar;

		-- encontra a regra de tributo conta pagar e os dados necessarios para realizar os calculos do tributo

		SELECT * FROM pls_pp_tributacao_pck.obter_regra_trib_tit_pagar_pf(	r_c01_w.cd_pessoa_fisica, cd_tributo_p, r_c01_w.vl_base_atual, r_c01_w.ie_tipo_contratacao, cd_estabelecimento_p, r_c01_w.dt_mes_lote_pgto_orig, r_c01_w.nr_seq_tipo_prestador, r_c01_w.nr_seq_class_prestador) INTO STRICT tb_pr_aliquota_w(nr_cont_w), tb_cd_cond_pgto_w(nr_cont_w), ie_acumulativo_w, vl_teto_base_calc_w, tb_vl_desc_depen_w(nr_cont_w), vl_minimo_base_w, vl_minimo_tributo_w, tb_nr_seq_trans_reg_w(nr_cont_w), tb_nr_seq_trans_baixa_w(nr_cont_w), tb_cd_beneficiario_w(nr_cont_w), tb_ie_periodicidade_w(nr_cont_w), tb_cd_variacao_w(nr_cont_w), tb_cd_darf_w(nr_cont_w), tb_nr_seq_classe_w(nr_cont_w), tb_cd_tipo_baixa_neg_w(nr_cont_w), tb_cd_conta_financ_w(nr_cont_w);

		-- obtem a data de pagamento do tributo

		tb_dt_pgto_trib_w(nr_cont_w) := pls_pp_tributacao_pck.obter_data_pgto_tributo(	tb_cd_cond_pgto_w(nr_cont_w), r_c01_w.ie_vencimento,
										r_c01_w.ie_venc_pls_pag_prod, r_c01_w.dt_competencia,
										r_c01_w.dt_venc_titulo, cd_estabelecimento_p,
										r_c00_w.nr_seq_prestador, cd_tributo_p);

		-- a base de calculo e a base atual, na rotina 	que faz o calculo ira retornar o valor que foi utilizado 

		-- para chegar ao valor do tributo no calculo, esse sera o vl_base_calculo

		tb_vl_base_calc_w(nr_cont_w) := r_c01_w.vl_base_atual;

		-- alimentar os campos auxiliares de tributos, neles estao valores que eventualmente nao foram recolhidos ou valores

		-- que foram utilizados em um calculo e que nao pertenciam a sua base de calculo original (base acumulada por exemplo)

		tb_vl_trib_nao_retido_w(nr_cont_w) := r_c01_w.vl_nao_retido;
		tb_vl_trib_adic_w(nr_cont_w) := r_c01_w.vl_trib_adic;
		tb_vl_base_nao_retido_w(nr_cont_w) := r_c01_w.vl_base_nao_retido;
		tb_vl_base_adic_w(nr_cont_w) := r_c01_w.vl_base_adic;

		case(ie_tipo_tributo_p)

			when	'INSS' then

				-- faz o calculo do INSS, aqui e verificado se chegou no teto se faltou recolher algum INSS 

				-- todos os tratamentos para INSS PF devem ser feitos dentro desta rotina

				SELECT * FROM pls_pp_tributacao_pck.calcula_vl_trib_inss(	ie_acumulativo_w, cd_tributo_p, vl_teto_base_calc_w, vl_minimo_base_w, vl_minimo_tributo_w, r_c01_w.vl_tributo_pago, r_c01_w.vl_base_acumulada, r_c01_w.dt_competencia, r_c01_w.vl_base_total, tb_pr_aliquota_w(nr_cont_w), tb_vl_base_calc_w(nr_cont_w), tb_vl_trib_nao_retido_w(nr_cont_w), tb_vl_trib_adic_w(nr_cont_w), tb_vl_base_nao_retido_w(nr_cont_w), tb_vl_base_adic_w(nr_cont_w)) INTO STRICT tb_pr_aliquota_w(nr_cont_w), tb_vl_base_calc_w(nr_cont_w), tb_vl_trib_nao_retido_w(nr_cont_w), tb_vl_trib_adic_w(nr_cont_w), tb_vl_base_nao_retido_w(nr_cont_w), tb_vl_base_adic_w(nr_cont_w), tb_vl_base_total_w(nr_cont_w), tb_vl_base_acum_trib_w(nr_cont_w), tb_vl_reducao_w(nr_cont_w), tb_nr_seq_irpf_w(nr_cont_w);
			when	'IR' then

				-- para IRPF e necessario descontar o valor que foi pago de INSS pela pessoa fisica, esta rotina busca este valor

				-- e registra o vinculo entre os registros

				vl_trib_inss_lote_w := pls_pp_tributacao_pck.obter_vl_trib_inss_lote(	nr_seq_lote_p, r_c01_w.nr_seq_prestador, r_c01_w.nr_sequencia, r_c01_w.dt_competencia, vl_trib_inss_lote_w);

				SELECT * FROM pls_pp_tributacao_pck.calcula_vl_trib_irpf(	ie_acumulativo_w, cd_tributo_p, vl_teto_base_calc_w, vl_minimo_base_w, vl_minimo_tributo_w, r_c01_w.vl_tributo_pago, r_c01_w.vl_base_acumulada, vl_trib_inss_lote_w, r_c01_w.dt_competencia, tb_qt_dependente_w(nr_cont_w), tb_pr_aliquota_w(nr_cont_w), tb_vl_base_calc_w(nr_cont_w), tb_vl_desc_depen_w(nr_cont_w), tb_vl_trib_nao_retido_w(nr_cont_w), tb_vl_trib_adic_w(nr_cont_w), tb_vl_base_nao_retido_w(nr_cont_w), tb_vl_base_adic_w(nr_cont_w), r_c01_w.cd_pessoa_fisica, cd_estabelecimento_p, tb_dt_pgto_trib_w(nr_cont_w)) INTO STRICT tb_pr_aliquota_w(nr_cont_w), tb_vl_base_calc_w(nr_cont_w), tb_vl_desc_depen_w(nr_cont_w), tb_vl_trib_nao_retido_w(nr_cont_w), tb_vl_trib_adic_w(nr_cont_w), tb_vl_base_nao_retido_w(nr_cont_w), tb_vl_base_adic_w(nr_cont_w), tb_vl_base_total_w(nr_cont_w), tb_vl_base_acum_trib_w(nr_cont_w), tb_vl_reducao_w(nr_cont_w), tb_nr_seq_irpf_w(nr_cont_w);
			else
				SELECT * FROM pls_pp_tributacao_pck.calcula_vl_trib_default(	ie_acumulativo_w, cd_tributo_p, vl_minimo_base_w, vl_minimo_tributo_w, tb_pr_aliquota_w(nr_cont_w), vl_teto_base_calc_w, r_c01_w.dt_competencia, r_c01_w.vl_base_total, tb_vl_base_calc_w(nr_cont_w), tb_vl_trib_nao_retido_w(nr_cont_w), tb_vl_trib_adic_w(nr_cont_w), tb_vl_base_nao_retido_w(nr_cont_w), tb_vl_base_adic_w(nr_cont_w)) INTO STRICT tb_vl_base_calc_w(nr_cont_w), tb_vl_trib_nao_retido_w(nr_cont_w), tb_vl_trib_adic_w(nr_cont_w), tb_vl_base_nao_retido_w(nr_cont_w), tb_vl_base_adic_w(nr_cont_w), tb_vl_base_total_w(nr_cont_w), tb_vl_base_acum_trib_w(nr_cont_w), tb_vl_reducao_w(nr_cont_w), tb_nr_seq_irpf_w(nr_cont_w);
		end case;

		if (nr_cont_w >= pls_util_pck.qt_registro_transacao_w) then

			-- atualiza os valores na tabela pls_pp_valor_trib_pessoa

			SELECT * FROM pls_pp_tributacao_pck.atualiza_valor_trib_pessoa(	tb_nr_seq_trib_pes_w, tb_pr_aliquota_w, tb_vl_desc_depen_w, tb_nr_seq_tit_pag_w, tb_vl_base_calc_w, tb_vl_tributo_w, tb_nr_seq_irpf_w, tb_vl_reducao_w, tb_qt_dependente_w, tb_vl_trib_nao_retido_w, tb_vl_trib_adic_w, tb_vl_base_nao_retido_w, tb_vl_base_adic_w, tb_vl_base_acum_trib_w, tb_vl_base_total_w, tb_dt_pgto_trib_w, tb_nr_seq_trans_reg_w, tb_nr_seq_trans_baixa_w, tb_cd_beneficiario_w, tb_ie_periodicidade_w, tb_cd_variacao_w, tb_cd_cond_pgto_w, tb_cd_darf_w, tb_nr_seq_classe_w, tb_cd_tipo_baixa_neg_w, tb_ie_vencimento_w, tb_ie_ger_tit_pagar_w, tb_cd_conta_financ_w, nr_cont_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_trib_pes_w := _ora2pg_r.tb_nr_seq_trib_pes_p; tb_pr_aliquota_w := _ora2pg_r.tb_pr_aliquota_p; tb_vl_desc_depen_w := _ora2pg_r.tb_vl_desc_depen_p; tb_nr_seq_tit_pag_w := _ora2pg_r.tb_nr_seq_tit_pag_p; tb_vl_base_calc_w := _ora2pg_r.tb_vl_base_calc_p; tb_vl_tributo_w := _ora2pg_r.tb_vl_tributo_p; tb_nr_seq_irpf_w := _ora2pg_r.tb_nr_seq_irpf_p; tb_vl_reducao_w := _ora2pg_r.tb_vl_reducao_p; tb_qt_dependente_w := _ora2pg_r.tb_qt_dependente_p; tb_vl_trib_nao_retido_w := _ora2pg_r.tb_vl_trib_nao_retido_p; tb_vl_trib_adic_w := _ora2pg_r.tb_vl_trib_adic_p; tb_vl_base_nao_retido_w := _ora2pg_r.tb_vl_base_nao_retido_p; tb_vl_base_adic_w := _ora2pg_r.tb_vl_base_adic_p; tb_vl_base_acum_trib_w := _ora2pg_r.tb_vl_base_acum_trib_p; tb_vl_base_total_w := _ora2pg_r.tb_vl_base_total_p; tb_dt_pgto_trib_w := _ora2pg_r.tb_dt_pgto_trib_p; tb_nr_seq_trans_reg_w := _ora2pg_r.tb_nr_seq_trans_reg_p; tb_nr_seq_trans_baixa_w := _ora2pg_r.tb_nr_seq_trans_baixa_p; tb_cd_beneficiario_w := _ora2pg_r.tb_cd_beneficiario_p; tb_ie_periodicidade_w := _ora2pg_r.tb_ie_periodicidade_p; tb_cd_variacao_w := _ora2pg_r.tb_cd_variacao_p; tb_cd_cond_pgto_w := _ora2pg_r.tb_cd_cond_pgto_p; tb_cd_darf_w := _ora2pg_r.tb_cd_darf_p; tb_nr_seq_classe_w := _ora2pg_r.tb_nr_seq_classe_p; tb_cd_tipo_baixa_neg_w := _ora2pg_r.tb_cd_tipo_baixa_neg_p; tb_ie_vencimento_w := _ora2pg_r.tb_ie_vencimento_p; tb_ie_ger_tit_pagar_w := _ora2pg_r.tb_ie_ger_tit_pagar_p; tb_cd_conta_financ_w := _ora2pg_r.tb_cd_conta_financ_p; nr_cont_w := _ora2pg_r.nr_cont_p;
		else
			nr_cont_w := nr_cont_w + 1;
		end if;
	end loop;

	-- atualiza os valores na tabela pls_pp_valor_trib_pessoa

	SELECT * FROM pls_pp_tributacao_pck.atualiza_valor_trib_pessoa(	tb_nr_seq_trib_pes_w, tb_pr_aliquota_w, tb_vl_desc_depen_w, tb_nr_seq_tit_pag_w, tb_vl_base_calc_w, tb_vl_tributo_w, tb_nr_seq_irpf_w, tb_vl_reducao_w, tb_qt_dependente_w, tb_vl_trib_nao_retido_w, tb_vl_trib_adic_w, tb_vl_base_nao_retido_w, tb_vl_base_adic_w, tb_vl_base_acum_trib_w, tb_vl_base_total_w, tb_dt_pgto_trib_w, tb_nr_seq_trans_reg_w, tb_nr_seq_trans_baixa_w, tb_cd_beneficiario_w, tb_ie_periodicidade_w, tb_cd_variacao_w, tb_cd_cond_pgto_w, tb_cd_darf_w, tb_nr_seq_classe_w, tb_cd_tipo_baixa_neg_w, tb_ie_vencimento_w, tb_ie_ger_tit_pagar_w, tb_cd_conta_financ_w, nr_cont_w) INTO STRICT _ora2pg_r;
 	tb_nr_seq_trib_pes_w := _ora2pg_r.tb_nr_seq_trib_pes_p; tb_pr_aliquota_w := _ora2pg_r.tb_pr_aliquota_p; tb_vl_desc_depen_w := _ora2pg_r.tb_vl_desc_depen_p; tb_nr_seq_tit_pag_w := _ora2pg_r.tb_nr_seq_tit_pag_p; tb_vl_base_calc_w := _ora2pg_r.tb_vl_base_calc_p; tb_vl_tributo_w := _ora2pg_r.tb_vl_tributo_p; tb_nr_seq_irpf_w := _ora2pg_r.tb_nr_seq_irpf_p; tb_vl_reducao_w := _ora2pg_r.tb_vl_reducao_p; tb_qt_dependente_w := _ora2pg_r.tb_qt_dependente_p; tb_vl_trib_nao_retido_w := _ora2pg_r.tb_vl_trib_nao_retido_p; tb_vl_trib_adic_w := _ora2pg_r.tb_vl_trib_adic_p; tb_vl_base_nao_retido_w := _ora2pg_r.tb_vl_base_nao_retido_p; tb_vl_base_adic_w := _ora2pg_r.tb_vl_base_adic_p; tb_vl_base_acum_trib_w := _ora2pg_r.tb_vl_base_acum_trib_p; tb_vl_base_total_w := _ora2pg_r.tb_vl_base_total_p; tb_dt_pgto_trib_w := _ora2pg_r.tb_dt_pgto_trib_p; tb_nr_seq_trans_reg_w := _ora2pg_r.tb_nr_seq_trans_reg_p; tb_nr_seq_trans_baixa_w := _ora2pg_r.tb_nr_seq_trans_baixa_p; tb_cd_beneficiario_w := _ora2pg_r.tb_cd_beneficiario_p; tb_ie_periodicidade_w := _ora2pg_r.tb_ie_periodicidade_p; tb_cd_variacao_w := _ora2pg_r.tb_cd_variacao_p; tb_cd_cond_pgto_w := _ora2pg_r.tb_cd_cond_pgto_p; tb_cd_darf_w := _ora2pg_r.tb_cd_darf_p; tb_nr_seq_classe_w := _ora2pg_r.tb_nr_seq_classe_p; tb_cd_tipo_baixa_neg_w := _ora2pg_r.tb_cd_tipo_baixa_neg_p; tb_ie_vencimento_w := _ora2pg_r.tb_ie_vencimento_p; tb_ie_ger_tit_pagar_w := _ora2pg_r.tb_ie_ger_tit_pagar_p; tb_cd_conta_financ_w := _ora2pg_r.tb_cd_conta_financ_p; nr_cont_w := _ora2pg_r.nr_cont_p;
					
	-- faz o rateio dos valores gerados de tributo por pessoa, para os itens que compoem a base de calculo

	CALL pls_pp_tributacao_pck.rateio_vl_trib_base_atual(	nr_seq_lote_p, r_c00_w.nr_seq_prestador, cd_tributo_p, nm_usuario_p);

	-- pega tudo o que existe de base atual no lote e coloca como base acumulada

	CALL pls_pp_tributacao_pck.gera_base_acum_pagamento(	nr_seq_lote_p, r_c00_w.nr_seq_prestador, cd_tributo_p, nm_usuario_p);
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_pp_tributacao_pck.gerencia_tributos_pf ( cd_tributo_p tributo.cd_tributo%type, ie_tipo_tributo_p tributo.ie_tipo_tributo%type, nr_seq_lote_p pls_pp_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;
