-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OBTER restricoes ATENDIMENTO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--
CREATE OR REPLACE FUNCTION mprev_pop_alvo_prest_pck.obter_restricao_atend (dados_regra_p mprev_pop_alvo_prest_pck.regra_atend) RETURNS varchar AS $body$
DECLARE


	ds_retorno_w	varchar(4000)	:= null;

	
BEGIN
		--ie_TIPO_ATENDIMENTO
		if (dados_regra_p.ie_tipo_atendimento IS NOT NULL AND dados_regra_p.ie_tipo_atendimento::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	atend.ie_tipo_atendimento = :ie_tipo_atendimento_pc ';

			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':ie_tipo_atendimento_pc', dados_regra_p.ie_tipo_atendimento, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--CD_MEDICO_RESP
		if (dados_regra_p.cd_medico_resp IS NOT NULL AND dados_regra_p.cd_medico_resp::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	atend.cd_medico_resp = :cd_medico_resp ';

			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_medico_resp', dados_regra_p.cd_medico_resp, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--DT_REFERENCIA_W nunca e tratado os filtros de data. Considerar sempre dentro do periodo do cubo.
		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
								' and	atend.dt_entrada >= :dt_referencia_pc ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
								' group by pessoa.nr_sequencia ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
								' having count(pessoa.nr_sequencia) ';

		current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_prest_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		
		--QT_OCORRENCIA_MINIMA e QT_OCORRENCIA_MAXIMA
		if ((dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') or (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '')) then
			-- Aqui monta a restricao e atualiza o valor das binds.
			if (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '' AND dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||  ' between :qt_ocorrencia_minima_pc and :qt_ocorrencia_maxima_pc ';
			elsif (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||  ' >= :qt_ocorrencia_minima_pc ';
			elsif (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||  ' <= :qt_ocorrencia_maxima_pc ';
			end if;
			
			if (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '' AND dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_minima_pc', dados_regra_p.qt_ocorrencia_minima, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
				current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_maxima_pc', dados_regra_p.qt_ocorrencia_maxima, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
			elsif (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') then
				current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_minima_pc', dados_regra_p.qt_ocorrencia_minima, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
			elsif (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_maxima_pc', dados_regra_p.qt_ocorrencia_maxima, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
			end if;
		end if;

	return	ds_retorno_w;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION mprev_pop_alvo_prest_pck.obter_restricao_atend (dados_regra_p mprev_pop_alvo_prest_pck.regra_atend) FROM PUBLIC;
