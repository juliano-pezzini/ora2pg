-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>INSERIR TRATAMENTO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--
CREATE OR REPLACE PROCEDURE mprev_pop_alvo_prest_pck.selecionar_trat ( nr_seq_regra_cubo_p bigint, nr_seq_populacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


	c_regra_trat CURSOR(nr_seq_regra_cubo_pc	bigint) FOR
		SELECT	a.nr_sequencia,
		        a.ie_tipo_tratamento,
				a.ie_incluir
		from	hdm_regra_cubo_trat a
		where	a.nr_seq_regra_cubo	= nr_seq_regra_cubo_pc;
		
	regra_trat_w		regra_trat;
	cursor_w			sql_pck.t_cursor;

	-- Tabela para inserir a sequencia do beneficiario que retorna do select dinamico "ds_select_w".
	tb_pop_alvo_sel_trat_w	pls_util_cta_pck.t_number_table;

	
BEGIN

	
	if (nr_seq_regra_cubo_p IS NOT NULL AND nr_seq_regra_cubo_p::text <> '')then
	
	PERFORM set_config('mprev_pop_alvo_prest_pck.ds_select_w', '', false);
	
		for r_c_regra_trat in c_regra_trat(nr_seq_regra_cubo_p) loop
			PERFORM set_config('mprev_pop_alvo_prest_pck.ds_restricao_w', null, false);
			regra_trat_w.nr_sequencia	:= r_c_regra_trat.nr_sequencia;
			regra_trat_w.ie_tipo_tratamento	:= r_c_regra_trat.ie_tipo_tratamento;
			regra_trat_w.ie_incluir		:= r_c_regra_trat.ie_incluir;

			PERFORM set_config('mprev_pop_alvo_prest_pck.ds_restricao_w', mprev_pop_alvo_prest_pck.obter_restricao_trat(regra_trat_w) ||' --'|| regra_trat_w.ie_tipo_tratamento, false);

			PERFORM set_config('mprev_pop_alvo_prest_pck.ds_select_comp_w', current_setting('mprev_pop_alvo_prest_pck.ds_select_w')::varchar(4000) ||current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type|| current_setting('mprev_pop_alvo_prest_pck.ds_restricao_w')::varchar(4000), false);			
			
			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.executa_sql_cursor(current_setting('mprev_pop_alvo_prest_pck.ds_select_comp_w')::varchar(4000), current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
			
			loop

				tb_pop_alvo_sel_trat_w.delete;

				fetch	cursor_w bulk collect
				into	tb_pop_alvo_sel_trat_w
				limit	current_setting('mprev_pop_alvo_prest_pck.qt_reg_commit_w')::integer;

				exit when tb_pop_alvo_sel_trat_w.count = 0;

				-- Incluir as pessoas na selecao
				forall i in tb_pop_alvo_sel_trat_w.first .. tb_pop_alvo_sel_trat_w.last
					insert into mprev_pop_alvo_selecao(nr_sequencia, nm_usuario, dt_atualizacao,
						nr_seq_populacao_alvo, nr_seq_pessoa_cubo, ie_selecionar,
						nm_tabela_regra_cubo, nr_seq_tabela_regra_cubo)
					values (nextval('mprev_pop_alvo_selecao_seq'), nm_usuario_p, clock_timestamp(),
						nr_seq_populacao_p, tb_pop_alvo_sel_trat_w(i),
						regra_trat_w.ie_incluir, 'HDM_REGRA_CUBO_TRAT', 2);
				commit;
			end loop;
			close cursor_w;
		end loop;
		commit;
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_pop_alvo_prest_pck.selecionar_trat ( nr_seq_regra_cubo_p bigint, nr_seq_populacao_p bigint, nm_usuario_p text) FROM PUBLIC;
