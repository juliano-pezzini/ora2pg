-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OBTER restricoes DIAGNOSTICO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--
CREATE OR REPLACE FUNCTION mprev_pop_alvo_prest_pck.obter_restricao_diag (dados_regra_p mprev_pop_alvo_prest_pck.regra_diag) RETURNS varchar AS $body$
DECLARE


	ds_retorno_w	varchar(4000)	:= null;

	
BEGIN


	--CID (CD_DOENCA)
	if (dados_regra_p.cd_doenca IS NOT NULL AND dados_regra_p.cd_doenca::text <> '') then
		-- Aqui monta a restricao e atualiza o valor das binds.
		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	        (select count(1) ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		from 	diagnostico_doenca x ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		where 	x.nr_atendimento = atend.nr_atendimento ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		and		x.dt_diagnostico >= :dt_referencia_pc ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		and 	x.cd_doenca = :cd_doenca_pc) >= nvl(:qt_ocorrencia_pc,1) ';

		current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_doenca_pc', dados_regra_p.cd_doenca, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_pc', dados_regra_p.qt_ocorrencia, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_prest_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	--Ira ter dados no CID (CD_DOENCA) ou no CID (CD_DOENCA_INICIAL e CD_DOENCA_FINAL), o usuario nao pode informar os 2.
	--CID (CD_DOENCA_INICIAL e CD_DOENCA_FINAL)
	/*Exemplo:
	cd_doenca_inicial = C100 e cd_doenca_final = C105
	Diferente do bloco acima "CID (CD_DOENCA)" que verifica apenas o cd_doenca informado esta restricao pega todas as doencas entre os codigos passados:
	C100, C101, C102, C103, C104 e C105
	*/
	if ((dados_regra_p.cd_doenca_inicial IS NOT NULL AND dados_regra_p.cd_doenca_inicial::text <> '') or (dados_regra_p.cd_doenca_final IS NOT NULL AND dados_regra_p.cd_doenca_final::text <> '')) then
		-- Aqui monta a restricao e atualiza o valor das binds.
		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	        (select count(1) ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		from 	diagnostico_doenca x ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		where 	x.nr_atendimento = atend.nr_atendimento ' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		and		x.dt_diagnostico >= :dt_referencia_pc  '|| current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'		and 	x.cd_doenca ';
		if (dados_regra_p.cd_doenca_inicial IS NOT NULL AND dados_regra_p.cd_doenca_inicial::text <> '' AND dados_regra_p.cd_doenca_final IS NOT NULL AND dados_regra_p.cd_doenca_final::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||  ' between :cd_doenca_inicial_pc and :cd_doenca_final_pc) >= nvl(:qt_ocorrencia_pc,1) ';
		elsif (dados_regra_p.cd_doenca_inicial IS NOT NULL AND dados_regra_p.cd_doenca_inicial::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||  ' > :cd_doenca_inicial_pc) >= nvl(:qt_ocorrencia_pc,1)';
		elsif (dados_regra_p.cd_doenca_final IS NOT NULL AND dados_regra_p.cd_doenca_final::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||  ' < :cd_doenca_final_pc) >= nvl(:qt_ocorrencia_pc,1)';
		end if;

		if (dados_regra_p.cd_doenca_inicial IS NOT NULL AND dados_regra_p.cd_doenca_inicial::text <> '' AND dados_regra_p.cd_doenca_final IS NOT NULL AND dados_regra_p.cd_doenca_final::text <> '') then
			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_doenca_inicial_pc', dados_regra_p.cd_doenca_inicial, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_doenca_final_pc', dados_regra_p.cd_doenca_final, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		elsif (dados_regra_p.cd_doenca_inicial IS NOT NULL AND dados_regra_p.cd_doenca_inicial::text <> '') then
			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_doenca_inicial_pc', dados_regra_p.cd_doenca_inicial, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		elsif (dados_regra_p.cd_doenca_final IS NOT NULL AND dados_regra_p.cd_doenca_final::text <> '') then
			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_doenca_final_pc', dados_regra_p.cd_doenca_final, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;
		current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_pc', dados_regra_p.qt_ocorrencia, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
		current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_prest_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	return	ds_retorno_w;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION mprev_pop_alvo_prest_pck.obter_restricao_diag (dados_regra_p mprev_pop_alvo_prest_pck.regra_diag) FROM PUBLIC;
