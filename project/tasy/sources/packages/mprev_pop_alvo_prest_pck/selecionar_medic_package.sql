-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

	
-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>INSERIR MEDICAMENTO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--
CREATE OR REPLACE PROCEDURE mprev_pop_alvo_prest_pck.selecionar_medic ( nr_seq_regra_cubo_p bigint, nr_seq_populacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


	c_regra_medic CURSOR(nr_seq_regra_cubo_pc	bigint) FOR
		SELECT	a.nr_sequencia,
		        cd_material,
				qt_dose_inicial,
				qt_dose_final,
				cd_unidade_medida,
				ie_incluir
		from	hdm_regra_cubo_medic a
		where	a.nr_seq_regra_cubo	= nr_seq_regra_cubo_pc;
		
	regra_medic_w		regra_medic;
	cursor_w		sql_pck.t_cursor;

	-- Tabela para inserir a sequencia do beneficiario que retorna do select dinamico "ds_select_w".
	tb_pop_alvo_sel_medic_w	pls_util_cta_pck.t_number_table;

	
BEGIN

	
	if (nr_seq_regra_cubo_p IS NOT NULL AND nr_seq_regra_cubo_p::text <> '')then
	
	/* Monta select dinamico*/

		PERFORM set_config('mprev_pop_alvo_prest_pck.ds_select_w', ' select	pessoa.nr_sequencia 									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						' from		mprev_pessoa_cubo_ops pessoa,							' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			(SELECT	cd_pessoa_fisica seg_cd_pessoa_fisica,			' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cd_material med_cd_material,						' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				NVL(dt_inicio,dt_registro) dt_medicamento_inicial,	' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				NVL(dt_fim,dt_registro) dt_medicamento_final,		' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cast(qt_dose AS NUMBER(20,6)) AS qt_dose,			' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cd_unid_med cd_unid_medida							' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			FROM	paciente_medic_uso								' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			UNION													' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			SELECT	cd_pessoa_fisica seg_cd_pessoa_fisica,			' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cd_material,										' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				dt_inicio,											' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				dt_inicio,											' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cast(qt_dose AS NUMBER(20,6)) AS qt_dose,			' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cd_unidade_medida									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			FROM	medic_uso_continuo								' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			UNION													' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			SELECT	b.cd_pessoa_fisica seg_cd_pessoa_fisica,		' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				a.cd_material,										' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				b.dt_prescricao,									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				b.dt_prescricao,									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cast(a.qt_dose AS NUMBER(20,6)) AS qt_dose,			' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				a.cd_unidade_medida_dose							' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			FROM	prescr_material a,								' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				prescr_medica b										' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			WHERE	a.nr_prescricao = b.nr_prescricao				' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			AND	a.ie_agrupador = 1									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			UNION													' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			SELECT	b.cd_pessoa_fisica seg_cd_pessoa_fisica,		' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				a.cd_material,										' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				b.dt_periodo_inicial,								' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				b.dt_periodo_final,									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				cast(a.qt_dose AS NUMBER(20,6)) AS qt_dose,			' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				a.cd_unidade_baixa									' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			FROM	fa_entrega_medicacao_item a,					' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'				fa_entrega_medicacao b								' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'			WHERE	a.nr_seq_fa_entrega = b.nr_sequencia) medic		' || current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type ||
						'where		pessoa.cd_pessoa_fisica = medic.seg_cd_pessoa_fisica ', false);
						
	
		for r_c_regra_medic in c_regra_medic(nr_seq_regra_cubo_p) loop
			PERFORM set_config('mprev_pop_alvo_prest_pck.ds_restricao_w', null, false);
			regra_medic_w.nr_sequencia	:= r_c_regra_medic.nr_sequencia;
			
			regra_medic_w.cd_material	:= r_c_regra_medic.cd_material;
			regra_medic_w.cd_unidade_medida	:= r_c_regra_medic.cd_unidade_medida;
			regra_medic_w.qt_dose_inicial	:= r_c_regra_medic.qt_dose_inicial;
			regra_medic_w.qt_dose_final	:= r_c_regra_medic.qt_dose_final;
			regra_medic_w.ie_incluir		:= r_c_regra_medic.ie_incluir;

			PERFORM set_config('mprev_pop_alvo_prest_pck.ds_restricao_w', mprev_pop_alvo_prest_pck.obter_restricao_medic(regra_medic_w) ||' --'|| regra_medic_w.nr_sequencia, false);

			PERFORM set_config('mprev_pop_alvo_prest_pck.ds_select_comp_w', current_setting('mprev_pop_alvo_prest_pck.ds_select_w')::varchar(4000) ||current_setting('mprev_pop_alvo_prest_pck.enter_w')::pls_util_pck.enter_w%type|| current_setting('mprev_pop_alvo_prest_pck.ds_restricao_w')::varchar(4000), false);			
			
						
			current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.executa_sql_cursor(current_setting('mprev_pop_alvo_prest_pck.ds_select_comp_w')::varchar(4000), current_setting('mprev_pop_alvo_prest_pck.bind_sql_w')::sql_pck.t_dado_bind);
			
			loop

				tb_pop_alvo_sel_medic_w.delete;

				fetch	cursor_w bulk collect
				into	tb_pop_alvo_sel_medic_w
				limit	current_setting('mprev_pop_alvo_prest_pck.qt_reg_commit_w')::integer;

				exit when tb_pop_alvo_sel_medic_w.count = 0;

				-- Incluir as pessoas na selecao
				forall i in tb_pop_alvo_sel_medic_w.first .. tb_pop_alvo_sel_medic_w.last
					insert into mprev_pop_alvo_selecao(nr_sequencia, nm_usuario, dt_atualizacao,
						nr_seq_populacao_alvo, nr_seq_pessoa_cubo, ie_selecionar,
						nm_tabela_regra_cubo, nr_seq_tabela_regra_cubo)
					values (nextval('mprev_pop_alvo_selecao_seq'), nm_usuario_p, clock_timestamp(),
						nr_seq_populacao_p, tb_pop_alvo_sel_medic_w(i),
						regra_medic_w.ie_incluir, 'HDM_REGRA_CUBO_MEDIC', 6);
				commit;
			end loop;
			close cursor_w;
		end loop;
		commit;
	end if;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_pop_alvo_prest_pck.selecionar_medic ( nr_seq_regra_cubo_p bigint, nr_seq_populacao_p bigint, nm_usuario_p text) FROM PUBLIC;
