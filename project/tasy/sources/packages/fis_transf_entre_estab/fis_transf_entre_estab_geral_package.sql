-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE fis_transf_entre_estab.fis_transf_entre_estab_geral ( nr_seq_nota_original_p bigint, nr_seq_nf_transf_p bigint, nr_seq_nota_ent_p INOUT bigint, nr_seq_nota_sai_p INOUT bigint) AS $body$
DECLARE


ds_retorno_w	varchar(1)	:=	'N';
qt_inconsistencia_nf_en_w	bigint:=  0;
qt_inconsistencia_nf_sai_w	bigint:=  0;


BEGIN

ds_retorno_w:=	fis_transf_entre_estab.fis_carga_nf_trans(nr_seq_nf_transf_p);

if (ds_retorno_w = 'S') then
	begin
	
	ds_retorno_w:=	fis_transf_entre_estab.fis_carga_nf_trans_item(nr_seq_nf_transf_p);
	if (ds_retorno_w = 'S') then
		begin
		PERFORM set_config('fis_transf_entre_estab.nota_fiscal_saida_w', fis_transf_entre_estab.fis_gerar_registro_nota(current_setting('fis_transf_entre_estab.nota_fiscal_transf_saida_w')::registro_nota_fiscal_transf, 'S'), false);
		
		CALL fis_transf_entre_estab.fis_valida_nota_duplicada(current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal);
		
		CALL fis_transf_entre_estab.fis_gerar_nota_fiscal(current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal);
		
		PERFORM set_config('fis_transf_entre_estab.nota_fiscal_item_saida_w', fis_transf_entre_estab.fis_gerar_registro_nota_item(	nr_seq_nota_original_p,
											current_setting('fis_transf_entre_estab.nf_transf_item_saida_w')::registro_nf_transf_item,
											'S',
											current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].nr_sequencia,
											current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].cd_serie_nf,
											current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].cd_estabelecimento,
											current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].cd_operacao_nf), false);
		
		current_setting('fis_transf_entre_estab.nf_transf_item_saida_w')::registro_nf_transf_item.delete;
		
		CALL fis_transf_entre_estab.fis_gerar_nota_fiscal_item(current_setting('fis_transf_entre_estab.nota_fiscal_item_saida_w')::registro_nota_fiscal_item);
		
		current_setting('fis_transf_entre_estab.nota_fiscal_item_saida_w')::registro_nota_fiscal_item.delete;
		
		qt_inconsistencia_nf_sai_w := fis_transf_entre_estab.fis_consistir_atualizar_nf(current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].nr_sequencia, 'N', 'Tasy', qt_inconsistencia_nf_sai_w);
		
		
		PERFORM set_config('fis_transf_entre_estab.nota_fiscal_entrada_w', fis_transf_entre_estab.fis_gerar_registro_nota(current_setting('fis_transf_entre_estab.nota_fiscal_transf_entrada_w')::registro_nota_fiscal_transf, 'E'), false);
		
		CALL fis_transf_entre_estab.fis_valida_nota_duplicada(current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal);
		
		CALL fis_transf_entre_estab.fis_gerar_nota_fiscal(current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal);
		
		PERFORM set_config('fis_transf_entre_estab.nota_fiscal_item_entrada_w', fis_transf_entre_estab.fis_gerar_registro_nota_item(	nr_seq_nota_original_p,
											current_setting('fis_transf_entre_estab.nf_transf_item_entrada_w')::registro_nf_transf_item,
											'E',
											current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].nr_sequencia,
											current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].cd_serie_nf,
											current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].cd_estabelecimento,
											current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].cd_operacao_nf), false);
		
		current_setting('fis_transf_entre_estab.nf_transf_item_entrada_w')::registro_nf_transf_item.delete;
		
		CALL fis_transf_entre_estab.fis_gerar_nota_fiscal_item(current_setting('fis_transf_entre_estab.nota_fiscal_item_entrada_w')::registro_nota_fiscal_item);
		
		current_setting('fis_transf_entre_estab.nota_fiscal_item_entrada_w')::registro_nota_fiscal_item.delete;
		
		qt_inconsistencia_nf_en_w := fis_transf_entre_estab.fis_consistir_atualizar_nf(current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].nr_sequencia, 'N', 'Tasy', qt_inconsistencia_nf_en_w);
		
		nr_seq_nota_sai_p	:= current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].nr_sequencia;
		nr_seq_nota_ent_p	:= current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].nr_sequencia;
		
		update	nota_fiscal_transferencia
		set	dt_geracao_notas	= clock_timestamp(),
			nr_seq_nota_fiscal_s	= current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal[1].nr_sequencia,
			nr_seq_nota_fiscal_e	= current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal[1].nr_sequencia
		where	nr_sequencia		= nr_seq_nf_transf_p;
		
		CALL fis_transf_entre_estab.fis_atualiza_rateio(nr_seq_nf_transf_p, nr_seq_nota_ent_p, nr_seq_nota_sai_p);
		
		commit;
		
		current_setting('fis_transf_entre_estab.nota_fiscal_saida_w')::registro_nota_fiscal.delete;
		current_setting('fis_transf_entre_estab.nota_fiscal_entrada_w')::registro_nota_fiscal.delete;
	
		end;
	end if;

	end;
end if;

dbms_session.free_unused_user_memory;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_transf_entre_estab.fis_transf_entre_estab_geral ( nr_seq_nota_original_p bigint, nr_seq_nf_transf_p bigint, nr_seq_nota_ent_p INOUT bigint, nr_seq_nota_sai_p INOUT bigint) FROM PUBLIC;
