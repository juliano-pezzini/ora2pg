-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_entao_regra_preco_cta_pck.obter_se_medico_credenciado ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, cd_convenio_p pessoa_titular_convenio.cd_convenio%type, cd_especialidade_p especialidade_proc.cd_especialidade%type, cd_categoria_p pessoa_titular_convenio.cd_categoria%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS varchar AS $body$
DECLARE


ie_valido_w		boolean;
ie_medico_cred_w	medico_convenio.ie_conveniado%type;
					
c01 CURSOR(	cd_pessoa_fisica_pc 	medico_convenio.cd_pessoa_fisica%type,
		cd_convenio_pc		medico_convenio.cd_convenio%type) FOR
	SELECT	coalesce(ie_conveniado,'N') ie_conveniado,
		cd_estabelecimento,
		cd_especialidade,
		cd_categoria
	from	medico_convenio
	where	cd_pessoa_fisica = cd_pessoa_fisica_pc
	and	cd_convenio = cd_convenio_pc
	and 	coalesce(cd_prestador::text, '') = ''
	and 	coalesce(cd_plano_convenio::text, '') = ''
	order by	coalesce(cd_estabelecimento,0) desc,	
			coalesce(cd_especialidade,0) desc,
			coalesce(cd_prestador,'0') desc,
			coalesce(cd_categoria,'0') desc,
			coalesce(cd_setor_atendimento,0) desc,
			coalesce(cd_plano_convenio,'0') desc,
			coalesce(ie_funcao_medico,'0') desc,
			coalesce(ie_carater_inter_sus,'0') desc;

BEGIN

-- ordenado para trazer o registro com maior equivalencia primeiro
for r_c01_w in C01(	cd_pessoa_fisica_p, cd_convenio_p) loop

	-- inicia sempre sendo válido
	ie_valido_w := true;
	
	-- se foi informado e não for igual ao registro não é válido
	if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (cd_estabelecimento_p != r_c01_w.cd_estabelecimento) then
		
		ie_valido_w := false;
	end if;
	
	-- se foi informado e não for igual ao registro não é válido
	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') and (cd_especialidade_p != r_c01_w.cd_especialidade) then
	
		ie_valido_w := false;
	end if;
	
	-- se foi informado e não for igual ao registro não é válido
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') and (cd_categoria_p != r_c01_w.cd_categoria) then
		
		ie_valido_w := false;
	end if;
	
	-- se for válido atribui a variável
	if (ie_valido_w) then
	
		-- o primeiro que for válido é o correto
		ie_medico_cred_w := r_c01_w.ie_conveniado;
		
		-- sai do for e fecha o cursor
		exit;
	end if;
end loop;

return ie_medico_cred_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_entao_regra_preco_cta_pck.obter_se_medico_credenciado ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, cd_convenio_p pessoa_titular_convenio.cd_convenio%type, cd_especialidade_p especialidade_proc.cd_especialidade%type, cd_categoria_p pessoa_titular_convenio.cd_categoria%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
