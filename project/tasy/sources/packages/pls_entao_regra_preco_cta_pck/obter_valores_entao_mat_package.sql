-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_entao_regra_preco_cta_pck.obter_valores_entao_mat ( ie_destino_regra_p text, ie_origem_preco_p pls_cp_cta_emat.ie_origem_preco%type, nr_seq_material_preco_p pls_cp_cta_emat.nr_seq_material_preco%type, ie_tabela_adicional_p pls_cp_cta_emat.ie_tabela_adicional%type, dt_base_fixo_p pls_cp_cta_emat.dt_base_fixo%type, ie_tipo_ajuste_pfb_p pls_cp_cta_emat.ie_tipo_ajuste_pfb%type, ie_tipo_preco_bras_p pls_cp_cta_emat.ie_tipo_preco_brasindice%type, ie_tipo_preco_simpro_p pls_cp_cta_emat.ie_tipo_preco_simpro%type, ie_tipo_preco_tab_adic_p pls_cp_cta_emat.ie_tipo_preco_tab_adic%type, tx_ajuste_pfb_p pls_cp_cta_emat.tx_ajuste_pfb%type, tx_ajuste_pmc_neg_p pls_cp_cta_emat.tx_ajuste_pmc_neg%type, tx_ajuste_pmc_neut_p pls_cp_cta_emat.tx_ajuste_pmc_neut%type, tx_ajuste_pmc_pos_p pls_cp_cta_emat.tx_ajuste_pmc_pos%type, tx_ajuste_simpro_pfb_p pls_cp_cta_emat.tx_ajuste_simpro_pfb%type, tx_ajuste_simpro_pmc_p pls_cp_cta_emat.tx_ajuste_simpro_pmc%type, tx_ajuste_tab_propria_p pls_cp_cta_emat.tx_ajuste_tab_propria%type, vl_negociado_p pls_cp_cta_emat.vl_negociado%type, vl_pfb_nao_aplic_simpro_p pls_cp_cta_emat.vl_pfb_nao_aplicavel_simpro%type, vl_pfb_negativa_bras_p pls_cp_cta_emat.vl_pfb_negativa_brasindice%type, vl_pfb_negativa_simpro_p pls_cp_cta_emat.vl_pfb_negativa_simpro%type, vl_pfb_neutra_bras_p pls_cp_cta_emat.vl_pfb_neutra_brasindice%type, vl_pfb_neutra_simpro_p pls_cp_cta_emat.vl_pfb_neutra_simpro%type, vl_pfb_positiva_bras_p pls_cp_cta_emat.vl_pfb_positiva_brasindice%type, vl_pfb_positiva_simpro_p pls_cp_cta_emat.vl_pfb_positiva_simpro%type, nr_seq_prest_exec_p pls_conta.nr_seq_prestador_exec%type, nr_seq_material_p pls_conta_mat.nr_seq_material%type, dt_atend_material_p pls_conta_mat.dt_atendimento%type, nr_seq_fornecedor_p pls_conta_mat.nr_seq_prest_fornec%type, cd_versao_tiss_prot_p pls_protocolo_conta.cd_versao_tiss%type, nr_seq_guia_p pls_conta.nr_seq_guia%type, tx_ajuste_p pls_cp_cta_emat.tx_ajuste%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, vl_material_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_base_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_simpro_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_tabela_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_bras_p INOUT pls_cp_cta_emat.vl_negociado%type) AS $body$
DECLARE


dt_vigencia_orig_w	timestamp;
dt_base_w		timestamp;
cd_moeda_calculo_w	pls_material_valor_item.cd_moeda%type;
ie_origem_w		varchar(1);
vl_material_a900_w	pls_material_valor_item.vl_material%type;
cd_versao_tiss_w	pls_material.ds_versao_tiss%type;
tx_ajuste_w		pls_cp_cta_emat.tx_ajuste%type;
ds_log_w		varchar(500);

BEGIN

-- se o valor negociado estiver informado nem processa nada e assume este valor
if (vl_negociado_p > 0) then

	vl_material_base_p := vl_negociado_p;
else
	if (ie_origem_preco_p IS NOT NULL AND ie_origem_preco_p::text <> '') then

		-- percorre todos os itens da string da origem de preço
		for i in 1..length(ie_origem_preco_p) loop

			-- caso tenha entrado em algum e o valor foi maior que zero então não faz nada
			if (coalesce(vl_material_base_p, 0) = 0) then

				ie_origem_w := substr(ie_origem_preco_p, i, 1);

				case(ie_origem_w)
					-- Brasíndice
					when 'B' then

						if (dt_base_fixo_p IS NOT NULL AND dt_base_fixo_p::text <> '') then
							dt_base_w := dt_base_fixo_p;
						else
							dt_base_w := dt_atend_material_p;
						end if;

						vl_material_base_p := pls_entao_regra_preco_cta_pck.obter_preco_brasindice(	nr_seq_prest_exec_p, nr_seq_material_p,
												dt_base_w, tx_ajuste_pfb_p,
												tx_ajuste_pmc_neut_p, tx_ajuste_pmc_neg_p,
												tx_ajuste_pmc_pos_p, ie_tipo_preco_bras_p,
												vl_pfb_neutra_bras_p, vl_pfb_positiva_bras_p,
												vl_pfb_negativa_bras_p, ie_tipo_ajuste_pfb_p,
												cd_estabelecimento_p, nm_usuario_p);
						vl_material_bras_p := vl_material_base_p;

						ds_log_w := ' origem de preço Brasíndice.';

					-- Simpro
					when 'S' then
					
						vl_material_base_p := pls_entao_regra_preco_cta_pck.obter_preco_simpro(	nr_seq_material_p, tx_ajuste_simpro_pfb_p,
											tx_ajuste_simpro_pmc_p, dt_atend_material_p,
											ie_tipo_preco_simpro_p, vl_pfb_neutra_simpro_p,
											vl_pfb_positiva_simpro_p, vl_pfb_negativa_simpro_p,
											vl_pfb_nao_aplic_simpro_p, ie_tipo_ajuste_pfb_p,
											cd_estabelecimento_p);

						vl_material_simpro_p := vl_material_base_p;

						ds_log_w := ' origem de preço Simpro.';

					-- Materiais especiais
					when 'A' then
						vl_material_base_p := pls_entao_regra_preco_cta_pck.obter_valor_material_espec(	nr_seq_guia_p, nr_seq_material_p);

						vl_material_tabela_p := vl_material_base_p;

						ds_log_w := ' origem de preço Materiais especiais.';

					-- Valor autorizado
					when 'Z' then

						if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
							vl_material_base_p := pls_obter_valor_autorizado(nr_seq_guia_p, nr_seq_material_p);
						end if;

						ds_log_w := 'Origem de preço Valor autorizado.';

					-- Valor solic mat med
					when 'I' then

						if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
							vl_material_base_p := pls_obter_valor_solicmed(nr_seq_guia_p, nr_seq_material_p);
						end if;

						ds_log_w := ' origem de preço Valor solic material/medicamento.';

					-- Tabela
					when 'T' then
					
						-- tenta pegar a versão tiss do material
						cd_versao_tiss_w := pls_obter_dados_material(	nr_seq_material_p, 'TISS');

						-- se não encontrou pega do protocolo
						if (coalesce(cd_versao_tiss_w::text, '') = '') then
							cd_versao_tiss_w := cd_versao_tiss_prot_p;
						end if;
					
						case(ie_tabela_adicional_p)

							-- Federação SC
							when 1 then

								vl_material_base_p := pls_entao_regra_preco_cta_pck.obter_preco_mat_fed_sc(	cd_estabelecimento_p, nr_seq_material_p,
														dt_atend_material_p, tx_ajuste_tab_propria_p, 
														nr_seq_fornecedor_p, cd_versao_tiss_w);

								ds_log_w := ' origem de preço Tabela Federação SC.';

							-- Tabela de preço do fornecedor
							when 2 then
								-- caso não tenha o fornecedor informado utiliza o prestador executor
								vl_material_base_p := pls_entao_regra_preco_cta_pck.obter_preco_mat_forn_adic(	cd_estabelecimento_p, nr_seq_material_p,
														dt_atend_material_p, tx_ajuste_tab_propria_p, 
														coalesce(nr_seq_fornecedor_p, nr_seq_prest_exec_p));

								ds_log_w := ' origem de preço Tabela preço do fornecedor.';

							-- TNUMM (A900)
							when 3 then

								vl_material_a900_w := pls_entao_regra_preco_cta_pck.obter_preco_mat_a900(	nr_seq_material_p, cd_versao_tiss_w);

								-- Edgar 11/11/2013, OS 633529, tratar preço do A900 (TNUMM), mas não aplicar a regra se retornar ZERO
								if (vl_material_a900_w > 0) then
									vl_material_base_p := vl_material_a900_w;
								end if;

								ds_log_w := ' origem de preço Tabela TNUMM(A900).';
							
							-- TNUMM (A900) ICMS
							when 4 then

								vl_material_a900_w := pls_entao_regra_preco_cta_pck.obter_preco_mat_a900_icms(	nr_seq_segurado_p, nr_seq_conta_mat_p,
															dt_atend_material_p, nr_seq_material_p,
															cd_versao_tiss_w);

								if (vl_material_a900_w > 0) then
									vl_material_base_p := vl_material_a900_w;
								end if;
								
								ds_log_w := ' origem de preço Tabela TNUMM(A900) ICMS.';

							-- caso não seja informado nenhuma tabela adicional então é tabela própria
							else

								pls_obter_preco_tabela(	cd_estabelecimento_p, nr_seq_prest_exec_p, nr_seq_material_p,
											nr_seq_material_preco_p, dt_atend_material_p, tx_ajuste_tab_propria_p,
											ie_tipo_preco_tab_adic_p, vl_material_base_p, dt_vigencia_orig_w,
											cd_moeda_calculo_w);

								ds_log_w := ' origem de preço Tabela Própria.';
						end case; -- ie_tabela
					else
						null;
				end case; -- ie_origem
			end if;
		end loop;
	end if;
end if;

CALL pls_entao_regra_preco_cta_pck.gerencia_log_mat(	'Valorização pela' || ds_log_w ,
			nr_seq_conta_mat_p,
			vl_material_base_p,
			ie_destino_regra_p,
			nm_usuario_p);

-- tratamento feito para caso não seja informado tx de ajuste ou seja informado zero
if (coalesce(tx_ajuste_p::text, '') = '') or (tx_ajuste_p = 0) then

	tx_ajuste_w := 1;
else
	tx_ajuste_w := tx_ajuste_p;
end if;

-- aplica a taxa de ajuste informada na regra
vl_material_p := (vl_material_base_p * tx_ajuste_w);

CALL pls_entao_regra_preco_cta_pck.gerencia_log_mat(	'Aplicado taxa de ajuste.',
			nr_seq_conta_mat_p,
			vl_material_p,
			ie_destino_regra_p,
			nm_usuario_p);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_entao_regra_preco_cta_pck.obter_valores_entao_mat ( ie_destino_regra_p text, ie_origem_preco_p pls_cp_cta_emat.ie_origem_preco%type, nr_seq_material_preco_p pls_cp_cta_emat.nr_seq_material_preco%type, ie_tabela_adicional_p pls_cp_cta_emat.ie_tabela_adicional%type, dt_base_fixo_p pls_cp_cta_emat.dt_base_fixo%type, ie_tipo_ajuste_pfb_p pls_cp_cta_emat.ie_tipo_ajuste_pfb%type, ie_tipo_preco_bras_p pls_cp_cta_emat.ie_tipo_preco_brasindice%type, ie_tipo_preco_simpro_p pls_cp_cta_emat.ie_tipo_preco_simpro%type, ie_tipo_preco_tab_adic_p pls_cp_cta_emat.ie_tipo_preco_tab_adic%type, tx_ajuste_pfb_p pls_cp_cta_emat.tx_ajuste_pfb%type, tx_ajuste_pmc_neg_p pls_cp_cta_emat.tx_ajuste_pmc_neg%type, tx_ajuste_pmc_neut_p pls_cp_cta_emat.tx_ajuste_pmc_neut%type, tx_ajuste_pmc_pos_p pls_cp_cta_emat.tx_ajuste_pmc_pos%type, tx_ajuste_simpro_pfb_p pls_cp_cta_emat.tx_ajuste_simpro_pfb%type, tx_ajuste_simpro_pmc_p pls_cp_cta_emat.tx_ajuste_simpro_pmc%type, tx_ajuste_tab_propria_p pls_cp_cta_emat.tx_ajuste_tab_propria%type, vl_negociado_p pls_cp_cta_emat.vl_negociado%type, vl_pfb_nao_aplic_simpro_p pls_cp_cta_emat.vl_pfb_nao_aplicavel_simpro%type, vl_pfb_negativa_bras_p pls_cp_cta_emat.vl_pfb_negativa_brasindice%type, vl_pfb_negativa_simpro_p pls_cp_cta_emat.vl_pfb_negativa_simpro%type, vl_pfb_neutra_bras_p pls_cp_cta_emat.vl_pfb_neutra_brasindice%type, vl_pfb_neutra_simpro_p pls_cp_cta_emat.vl_pfb_neutra_simpro%type, vl_pfb_positiva_bras_p pls_cp_cta_emat.vl_pfb_positiva_brasindice%type, vl_pfb_positiva_simpro_p pls_cp_cta_emat.vl_pfb_positiva_simpro%type, nr_seq_prest_exec_p pls_conta.nr_seq_prestador_exec%type, nr_seq_material_p pls_conta_mat.nr_seq_material%type, dt_atend_material_p pls_conta_mat.dt_atendimento%type, nr_seq_fornecedor_p pls_conta_mat.nr_seq_prest_fornec%type, cd_versao_tiss_prot_p pls_protocolo_conta.cd_versao_tiss%type, nr_seq_guia_p pls_conta.nr_seq_guia%type, tx_ajuste_p pls_cp_cta_emat.tx_ajuste%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nr_seq_segurado_p pls_conta.nr_seq_segurado%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, vl_material_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_base_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_simpro_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_tabela_p INOUT pls_cp_cta_emat.vl_negociado%type, vl_material_bras_p INOUT pls_cp_cta_emat.vl_negociado%type) FROM PUBLIC;
