-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_entao_regra_preco_cta_pck.obter_valor_anest_amb ( cd_edicao_amb_p pls_cp_cta_eproc.cd_edicao_amb%type, nr_porte_anestesico_p porte_anestesico.nr_porte_anestesico%type, dt_procedimento_p porte_anestesico.dt_inicio_vigencia%type, vl_anestesista_p pls_conta_proc.vl_anestesista%type, ie_ch_padrao_anest_p pls_cp_cta_eproc.ie_ch_padrao_anestesista%type, vl_moeda_anestesista_p pls_cp_cta_eproc.cd_moeda_anestesista%type, tx_ajuste_partic_p pls_cp_cta_eproc.tx_ajuste_partic%type, vl_tx_honorarios_p pls_cp_cta_eproc.vl_ch_honorarios%type) RETURNS bigint AS $body$
DECLARE


vl_porte_anestesico_w	porte_anestesico.vl_porte_anestesico%type;
				
C01 CURSOR(	cd_edicao_amb_pc	porte_anestesico.cd_edicao_amb%type,
		nr_porte_anestesico_pc	porte_anestesico.nr_porte_anestesico%type,
		dt_procedimento_pc	porte_anestesico.dt_inicio_vigencia%type) FOR
	SELECT	coalesce(vl_porte_anestesico, 0) vl_porte_anestesico
	from	porte_anestesico
	where	cd_edicao_amb = cd_edicao_amb_pc
	and	dt_inicio_vigencia <= dt_procedimento_pc
	and	nr_porte_anestesico = nr_porte_anestesico_pc
	order by dt_inicio_vigencia desc;

BEGIN
vl_porte_anestesico_w := 0;

-- está ordenado para trazer o registro mais rescente primeiro
for r_c01_w in C01(	cd_edicao_amb_p, nr_porte_anestesico_p, dt_procedimento_p) loop

	-- o primeiro que retornar é o correto
	vl_porte_anestesico_w := r_c01_w.vl_porte_anestesico;
	
	-- sai do for e fecha o cursor
	exit;
end loop;

-- se não tem valor de porte anestesico e tem valor anestesista assume o valor do anestesista
if (vl_porte_anestesico_w = 0) and (vl_anestesista_p > 0) then

	vl_porte_anestesico_w := vl_anestesista_p;
end if;

-- calcular valor do anestesista
if (vl_porte_anestesico_w > 0) then
	-- Ch padrão anestesista
	case(ie_ch_padrao_anest_p) 
		-- Anestesista
		when 'C' then
			-- se tem moeda anestesista aplica
			if (vl_moeda_anestesista_p > 0 ) then

				vl_porte_anestesico_w := (vl_porte_anestesico_w * vl_moeda_anestesista_p * tx_ajuste_partic_p);
			else

				vl_porte_anestesico_w := (vl_porte_anestesico_w * tx_ajuste_partic_p);
			end if;
		-- Médico
		when 'M' then

			vl_porte_anestesico_w := (vl_porte_anestesico_w * tx_ajuste_partic_p * vl_tx_honorarios_p);
		-- Ambos
		when 'A' then
			-- se tem moeda anestesista aplica
			if (vl_moeda_anestesista_p > 0 ) then

				vl_porte_anestesico_w := (vl_porte_anestesico_w * vl_moeda_anestesista_p * tx_ajuste_partic_p * vl_tx_honorarios_p);
			else

				vl_porte_anestesico_w := (vl_porte_anestesico_w * tx_ajuste_partic_p * vl_tx_honorarios_p);
			end if;
		else
			null;
	end case;
end if;

return vl_porte_anestesico_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_entao_regra_preco_cta_pck.obter_valor_anest_amb ( cd_edicao_amb_p pls_cp_cta_eproc.cd_edicao_amb%type, nr_porte_anestesico_p porte_anestesico.nr_porte_anestesico%type, dt_procedimento_p porte_anestesico.dt_inicio_vigencia%type, vl_anestesista_p pls_conta_proc.vl_anestesista%type, ie_ch_padrao_anest_p pls_cp_cta_eproc.ie_ch_padrao_anestesista%type, vl_moeda_anestesista_p pls_cp_cta_eproc.cd_moeda_anestesista%type, tx_ajuste_partic_p pls_cp_cta_eproc.tx_ajuste_partic%type, vl_tx_honorarios_p pls_cp_cta_eproc.vl_ch_honorarios%type) FROM PUBLIC;
