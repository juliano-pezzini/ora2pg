-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_entao_regra_preco_cta_pck.obter_preco_tuss_amb ( cd_edicao_amb_p preco_tuss.cd_edicao_amb%type, cd_procedimento_p procedimento.cd_procedimento%type, dt_referencia_p timestamp, vl_procedimento_p INOUT preco_tuss.vl_procedimento%type, vl_medico_p INOUT preco_tuss.vl_medico%type, vl_anestesista_p INOUT preco_tuss.vl_anestesista%type, vl_auxiliares_p INOUT preco_tuss.vl_auxiliares%type, vl_custo_operacional_p INOUT preco_tuss.vl_custo_operacional%type, qt_filme_p INOUT preco_tuss.qt_filme_amb%type, nr_auxiliares_p INOUT preco_tuss.nr_auxiliares_amb%type, nr_porte_anestesico_p INOUT preco_tuss.nr_porte_anest_amb%type) AS $body$
DECLARE


C01 CURSOR(	cd_edicao_amb_pc 	preco_tuss.cd_edicao_amb%type,
		cd_procedimento_pc	procedimento.cd_procedimento%type,
		dt_referencia_pc	timestamp) FOR
	SELECT	coalesce(vl_procedimento, 0) vl_procedimento,
		coalesce(vl_medico, 0) vl_medico,
		coalesce(vl_anestesista, 0) vl_anestesista,
		coalesce(vl_auxiliares, 0) vl_auxiliares,
		coalesce(vl_custo_operacional, 0) vl_custo_operacional,
		qt_filme_amb,
		nr_auxiliares_amb,
		nr_porte_anest_amb
	from	preco_tuss
	where	cd_edicao_amb = cd_edicao_amb_pc
	and	cd_procedimento	= cd_procedimento_pc
	and	dt_referencia_pc between dt_inicio_vigencia_ref
				and dt_fim_vigencia_ref
	order by dt_inicio_vigencia desc;
	
BEGIN
-- retorna os dados com a vigencia mais atual
for r_c01_w in C01(	cd_edicao_amb_p, cd_procedimento_p,
			trunc(dt_referencia_p, 'dd')) loop

	-- alimenta as variáveis out com o primeiro registro que encontrou
	vl_procedimento_p := r_c01_w.vl_procedimento;
	vl_medico_p := r_c01_w.vl_medico;
	vl_anestesista_p := r_c01_w.vl_anestesista;
	vl_auxiliares_p := r_c01_w.vl_auxiliares;
	vl_custo_operacional_p := r_c01_w.vl_custo_operacional;
	qt_filme_p := r_c01_w.qt_filme_amb;
	nr_auxiliares_p := r_c01_w.nr_auxiliares_amb;
	nr_porte_anestesico_p := r_c01_w.nr_porte_anest_amb;

	-- o primeiro registro é o correto, sai do for e fecha o cursor automaticamente
	exit;
end loop;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_entao_regra_preco_cta_pck.obter_preco_tuss_amb ( cd_edicao_amb_p preco_tuss.cd_edicao_amb%type, cd_procedimento_p procedimento.cd_procedimento%type, dt_referencia_p timestamp, vl_procedimento_p INOUT preco_tuss.vl_procedimento%type, vl_medico_p INOUT preco_tuss.vl_medico%type, vl_anestesista_p INOUT preco_tuss.vl_anestesista%type, vl_auxiliares_p INOUT preco_tuss.vl_auxiliares%type, vl_custo_operacional_p INOUT preco_tuss.vl_custo_operacional%type, qt_filme_p INOUT preco_tuss.qt_filme_amb%type, nr_auxiliares_p INOUT preco_tuss.nr_auxiliares_amb%type, nr_porte_anestesico_p INOUT preco_tuss.nr_porte_anest_amb%type) FROM PUBLIC;
