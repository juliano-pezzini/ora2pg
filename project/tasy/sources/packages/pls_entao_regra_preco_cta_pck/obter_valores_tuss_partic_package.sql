-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_entao_regra_preco_cta_pck.obter_valores_tuss_partic ( ie_destino_regra_p text, ie_calculo_tuss_p edicao_amb.ie_calculo_tuss%type, dt_proced_referencia_p pls_conta_proc.dt_procedimento_referencia%type, cd_procedimento_p pls_conta_proc.cd_procedimento%type, nr_seq_edicao_tuss_p pls_cp_cta_epartic.nr_seq_edicao_tuss%type, cd_edicao_amb_p pls_cp_cta_epartic.cd_edicao_amb%type, vl_tx_honorarios_p pls_cp_cta_epartic.vl_ch_honorarios%type, tx_ajuste_ch_honor_p pls_cp_cta_epartic.tx_ajuste_ch_honor%type, ie_ch_padrao_anest_p pls_cp_cta_epartic.ie_ch_padrao_anestesista%type, vl_moeda_anest_p cotacao_moeda.vl_cotacao%type, tx_ajuste_partic_p pls_cp_cta_epartic.tx_ajuste_partic%type, nr_seq_proc_partic_p pls_proc_participante.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, vl_negociado_p INOUT bigint, vl_medico_out_p INOUT bigint, vl_anestesista_out_p INOUT bigint, vl_auxiliares_out_p INOUT bigint) AS $body$
DECLARE


vl_medico_w		pls_conta_proc.vl_medico%type;
qt_uco_w		preco_tuss.qt_uco%type;
nr_porte_anest_w	preco_tuss.nr_porte_anest_cbhpm%type;
nr_auxiliar_w		preco_tuss.nr_auxiliares_cbhpm%type;
qt_filme_w		preco_tuss.qt_filme_cbhpm%type;
qt_incidencia_w		preco_tuss.qt_incidencia_cbhpm%type;
vl_porte_anestesista_w	pls_conta_proc.vl_anestesista%type;
vl_custo_operacional_w	pls_conta_proc.vl_custo_operacional%type;
vl_anestesista_w	pls_proc_participante.vl_anestesista%type;
vl_filme_w		preco_tuss.vl_filme%type;
vl_auxiliares_w		pls_proc_participante.vl_auxiliares%type;
vl_negociado_w		pls_proc_participante.vl_negociado%type;


BEGIN

-- se for cálculo CBHPM
if (ie_calculo_tuss_p = 'C') then
	
	SELECT * FROM pls_entao_regra_preco_cta_pck.obter_preco_tuss_cbhpm(	dt_proced_referencia_p, cd_procedimento_p, nr_seq_edicao_tuss_p, cd_edicao_amb_p, vl_medico_w, qt_uco_w, nr_porte_anest_w, nr_auxiliar_w, qt_filme_w, qt_incidencia_w, vl_porte_anestesista_w) INTO STRICT vl_medico_w, qt_uco_w, nr_porte_anest_w, nr_auxiliar_w, qt_filme_w, qt_incidencia_w, vl_porte_anestesista_w;

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Valores obtidos na tabela de preços TUSS com cálculo CBHPM.',
				nr_seq_proc_partic_p,
				null,
				null,
				vl_medico_w,
				null,
				ie_destino_regra_p,
				nm_usuario_p);

	-- aplica as taxas pertinentes a CBHPM
	SELECT * FROM pls_entao_regra_preco_cta_pck.aplica_taxas_cbhpm_partic(	vl_medico_w, vl_tx_honorarios_p, tx_ajuste_ch_honor_p, vl_medico_w, nr_porte_anest_w, nr_auxiliar_w) INTO STRICT vl_medico_w, nr_porte_anest_w, nr_auxiliar_w;

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Aplicado taxas e cotação de moedas.',
				nr_seq_proc_partic_p,
				null,
				null,
				vl_medico_w,
				null,
				ie_destino_regra_p,
				nm_usuario_p);

	-- obtém o valor dos auxiliares
	vl_auxiliares_w := pls_entao_regra_preco_cta_pck.obter_valor_aux_cbhpm( 	vl_medico_w, nr_auxiliar_w);

	-- obtém o valor do anestesista
	vl_anestesista_w := pls_entao_regra_preco_cta_pck.obter_valor_anest_cbhpm(	ie_ch_padrao_anest_p, vl_moeda_anest_p, vl_porte_anestesista_w,
							tx_ajuste_partic_p, vl_tx_honorarios_p);

	-- calcula o valor do procedimento
	vl_negociado_w := pls_entao_regra_preco_cta_pck.obter_valor_proced( 	null, vl_anestesista_w, vl_medico_w,
							null, vl_auxiliares_w);

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Obtidos valores dos auxiliares e anestesista. Realizado cálculo do valor do procedimento.',
				nr_seq_proc_partic_p,
				vl_anestesista_w,
				vl_auxiliares_w,
				vl_medico_w,
				vl_negociado_w,
				ie_destino_regra_p,
				nm_usuario_p);

-- se for cálculo AMB
elsif (ie_calculo_tuss_p = 'A') then	

	SELECT * FROM pls_entao_regra_preco_cta_pck.obter_preco_tuss_amb(	cd_edicao_amb_p, cd_procedimento_p, dt_proced_referencia_p, vl_negociado_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, qt_filme_w, nr_auxiliar_w, nr_porte_anest_w) INTO STRICT vl_negociado_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, qt_filme_w, nr_auxiliar_w, nr_porte_anest_w;

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Valores obtidos na tabela de preços TUSS com cálculo AMB.',
				nr_seq_proc_partic_p,
				vl_anestesista_w,
				vl_auxiliares_w,
				vl_medico_w,
				vl_negociado_w,
				ie_destino_regra_p,
				nm_usuario_p);
	
	-- aplica as taxas/moedas pertinentes ao calculo AMB
	vl_medico_w := pls_entao_regra_preco_cta_pck.aplica_taxas_amb_partic(	vl_tx_honorarios_p, tx_ajuste_ch_honor_p, vl_medico_w);

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Valores após aplicar cotação de moeda e/ou taxas.',
				nr_seq_proc_partic_p,
				vl_anestesista_w,
				vl_auxiliares_w,
				vl_medico_w,
				vl_negociado_w,
				ie_destino_regra_p,
				nm_usuario_p);

	-- obtém o valor correto do anestesista quando AMB
	vl_anestesista_w := pls_entao_regra_preco_cta_pck.obter_valor_anest_amb(	cd_edicao_amb_p, nr_porte_anest_w,
							dt_proced_referencia_p, vl_anestesista_w,
							ie_ch_padrao_anest_p, vl_moeda_anest_p,
							tx_ajuste_partic_p, vl_tx_honorarios_p);

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Obtido valor do anestesista de acordo com o porte anestésico e aplicado as taxas pertinentes.',
				nr_seq_proc_partic_p,
				vl_anestesista_w,
				vl_auxiliares_w,
				vl_medico_w,
				vl_negociado_w,
				ie_destino_regra_p,
				nm_usuario_p);

	-- faz o calculo do valor do procedimento, basicamente é somado todos os valores que compoem o mesmo
	-- colocado em uma function própria para facilitar a manutenção da package
	vl_negociado_w := pls_entao_regra_preco_cta_pck.obter_valor_proced(	null, vl_anestesista_w,
						null, vl_filme_w,
						vl_auxiliares_w);

	CALL pls_entao_regra_preco_cta_pck.gerencia_log_partic(	'Realizado o cálculo do valor do procedimento.',
				nr_seq_proc_partic_p,
				vl_anestesista_w,
				vl_auxiliares_w,
				vl_medico_w,
				vl_negociado_w,
				ie_destino_regra_p,
				nm_usuario_p);
end if;

-- alimenta os parametros out
vl_negociado_p := vl_negociado_w;
vl_medico_out_p := vl_medico_w;
vl_auxiliares_out_p := vl_auxiliares_w;
vl_anestesista_out_p := vl_anestesista_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_entao_regra_preco_cta_pck.obter_valores_tuss_partic ( ie_destino_regra_p text, ie_calculo_tuss_p edicao_amb.ie_calculo_tuss%type, dt_proced_referencia_p pls_conta_proc.dt_procedimento_referencia%type, cd_procedimento_p pls_conta_proc.cd_procedimento%type, nr_seq_edicao_tuss_p pls_cp_cta_epartic.nr_seq_edicao_tuss%type, cd_edicao_amb_p pls_cp_cta_epartic.cd_edicao_amb%type, vl_tx_honorarios_p pls_cp_cta_epartic.vl_ch_honorarios%type, tx_ajuste_ch_honor_p pls_cp_cta_epartic.tx_ajuste_ch_honor%type, ie_ch_padrao_anest_p pls_cp_cta_epartic.ie_ch_padrao_anestesista%type, vl_moeda_anest_p cotacao_moeda.vl_cotacao%type, tx_ajuste_partic_p pls_cp_cta_epartic.tx_ajuste_partic%type, nr_seq_proc_partic_p pls_proc_participante.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, vl_negociado_p INOUT bigint, vl_medico_out_p INOUT bigint, vl_anestesista_out_p INOUT bigint, vl_auxiliares_out_p INOUT bigint) FROM PUBLIC;
