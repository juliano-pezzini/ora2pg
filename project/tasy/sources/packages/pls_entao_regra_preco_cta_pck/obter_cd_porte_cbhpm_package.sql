-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_entao_regra_preco_cta_pck.obter_cd_porte_cbhpm ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, dt_referencia_p timestamp, dt_edicao_p timestamp, ie_igual_p text, tx_porte_p INOUT cbhpm_preco.tx_porte%type, cd_porte_p INOUT pls_ajuste_porte_cbhpm.cd_porte%type, qt_uco_p INOUT cbhpm_preco.qt_uco%type, nr_auxiliar_p INOUT cbhpm_preco.nr_auxiliar%type, qt_filme_p INOUT cbhpm_preco.qt_filme%type, nr_porte_anest_p INOUT cbhpm_preco.nr_porte_anest%type) AS $body$
DECLARE


C01 CURSOR(	cd_procedimento_pc	procedimento.cd_procedimento%type,
		ie_origem_proced_pc	procedimento.ie_origem_proced%type,
		dt_referencia_pc	timestamp,
		dt_vigencia_edicao_pc	timestamp,
		ie_igual_pc		text) FOR
	SELECT	dt_vigencia,
		substr(cd_porte, 1, 8) cd_porte,
	 	coalesce(tx_porte, 1) tx_porte,
		qt_uco,
		nr_porte_anest,
		nr_auxiliar,
		qt_filme
	from	cbhpm_preco
	where	cd_procedimento = cd_procedimento_pc
	and	ie_origem_proced = ie_origem_proced_pc
	and	dt_vigencia <= dt_referencia_pc
	and	dt_vigencia <= dt_vigencia_edicao_pc
	and	ie_igual_pc = 'N'
	
union all

	SELECT	dt_vigencia,
		substr(cd_porte, 1, 8) cd_porte,
	 	coalesce(tx_porte, 1) tx_porte,
		qt_uco,
		nr_porte_anest,
		nr_auxiliar,
		qt_filme
	from	cbhpm_preco
	where	cd_procedimento = cd_procedimento_pc
	and	ie_origem_proced = ie_origem_proced_pc
	and	dt_vigencia <= dt_referencia_pc
	and	dt_vigencia = dt_vigencia_edicao_pc
	and	ie_igual_pc = 'S'
	order by dt_vigencia desc;

BEGIN

-- abre o cursor com os parâmetros obtidos com os ifs
for r_c01_w in C01(	cd_procedimento_p, ie_origem_proced_p, dt_referencia_p,
			dt_edicao_p, ie_igual_p) loop

	-- o primeiro registro que retornar é o correto
	tx_porte_p := r_c01_w.tx_porte;
	cd_porte_p := r_c01_w.cd_porte;
	qt_uco_p := r_c01_w.qt_uco;
	nr_auxiliar_p := r_c01_w.nr_auxiliar;
	qt_filme_p := r_c01_w.qt_filme;
	nr_porte_anest_p := r_c01_w.nr_porte_anest;
	
	-- sai do for e fecha o cursor
	exit;
end loop;

-- tratamento feito caso esteja cadastrado como zero a taxa então deve ser 1 para não alterar o valor
if (tx_porte_p = 0) then

	tx_porte_p := 1;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_entao_regra_preco_cta_pck.obter_cd_porte_cbhpm ( cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, dt_referencia_p timestamp, dt_edicao_p timestamp, ie_igual_p text, tx_porte_p INOUT cbhpm_preco.tx_porte%type, cd_porte_p INOUT pls_ajuste_porte_cbhpm.cd_porte%type, qt_uco_p INOUT cbhpm_preco.qt_uco%type, nr_auxiliar_p INOUT cbhpm_preco.nr_auxiliar%type, qt_filme_p INOUT cbhpm_preco.qt_filme%type, nr_porte_anest_p INOUT cbhpm_preco.nr_porte_anest%type) FROM PUBLIC;
