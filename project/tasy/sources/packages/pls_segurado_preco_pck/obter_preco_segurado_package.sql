-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_segurado_preco_pck.obter_preco_segurado ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) RETURNS SETOF T_PRECO_BENEFICIARIO AS $body$
DECLARE


t_preco_beneficiario_row_w	t_preco_beneficiario_row;
nr_sequencia_w			bigint;
dt_nascimento_w			pessoa_fisica.dt_nascimento%type;
qt_idade_w			bigint;
qt_idade_fx_etaria_w		bigint;
qt_idade_reaj_w			bigint;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
vl_preco_atual_w		pls_plano_preco.vl_preco_atual%type;
vl_preco_nao_subsidiado_w	pls_plano_preco.vl_preco_nao_subsidiado%type;
vl_adaptacao_w			pls_plano_preco.vl_adaptacao%type;
vl_minimo_w			pls_plano_preco.vl_minimo%type;
vl_reajuste_indice_w		double precision;
vl_reajuste_fx_etaria_w		double precision;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
qt_meses_niver_w		smallint;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;
dt_prox_valor_w			pls_segurado_valor.dt_preco%type;
qt_idade_limite_reaj_w		pls_segurado.qt_idade_limite_reaj%type;
qt_anos_limite_reaj_w		pls_segurado.qt_anos_limite_reaj%type;
ie_mes_cobranca_reaj_w		pls_contrato.ie_mes_cobranca_reaj%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
dt_inclusao_operadora_w		pls_segurado.dt_inclusao_operadora%type;
nr_seq_segurado_valor_w		pls_segurado_valor.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_preco,
		dt_alteracao,
		dt_inativacao,
		ie_motivo_alteracao,
		nr_seq_plano,
		nr_seq_tabela,
		ie_tipo_parentesco,
		ie_tabela_qt_vidas,
		qt_vidas,
		nr_seq_processo_judicial,
		ie_permite_reaj_fx_etaria,
		ie_permite_reaj_indice,
		nr_seq_regra_desconto,
		tx_desconto,
		vl_desconto,
		nr_seq_regra_apropriacao,
		ie_situacao
	from (SELECT	*
		from	pls_segurado_valor
		where	nr_seq_segurado	= nr_seq_segurado_p
		and	coalesce(nr_seq_segurado_valor_w::text, '') = ''
		
union all

		select	*
		from	pls_segurado_valor
		where	nr_sequencia	= nr_seq_segurado_valor_w) alias1
	order by nr_sequencia;

C02 CURSOR(	nr_seq_tabela_pc	pls_segurado_valor.nr_seq_tabela%type,
		qt_idade_pc		bigint,
		ie_tipo_parentesco_pc	pls_segurado_valor.ie_tipo_parentesco%type,
		ie_tabela_qt_vidas_pc	pls_segurado_valor.ie_tabela_qt_vidas%type,
		qt_vidas_pc		pls_segurado_valor.qt_vidas%type) FOR
	SELECT	nr_sequencia nr_seq_plano_preco,
		trunc(add_months(dt_nascimento_w,(qt_idade_inicial*12)),'month') dt_preco
	from	pls_plano_preco
	where	nr_seq_tabela = nr_seq_tabela_pc
	and	qt_idade_inicial > qt_idade_w
	and (ie_grau_titularidade = ie_tipo_parentesco_pc or coalesce(ie_grau_titularidade::text, '') = '')
	and	(((ie_tabela_qt_vidas_pc = 'S') and qt_vidas_pc between coalesce(qt_vidas_inicial,qt_vidas_pc) and coalesce(qt_vidas_final,qt_vidas_pc))
	or (ie_tabela_qt_vidas_pc = 'N'));

C03 CURSOR(	nr_seq_tabela_pc	pls_segurado_valor.nr_seq_tabela%type,
		qt_idade_pc		bigint,
		ie_tipo_parentesco_pc	pls_segurado_valor.ie_tipo_parentesco%type,
		ie_tabela_qt_vidas_pc	pls_segurado_valor.ie_tabela_qt_vidas%type,
		qt_vidas_pc		pls_segurado_valor.qt_vidas%type,
		dt_prox_valor_pc	timestamp) FOR
	SELECT	a.nr_sequencia nr_seq_plano_preco,
		b.dt_reajuste dt_preco,
		b.dt_liberacao,
		a.qt_idade_inicial,
		a.qt_idade_final,
		b.vl_reajustado vl_preco,
		b.vl_reajustado - b.vl_base vl_reajuste_indice,
		b.vl_preco_nao_subsidiado,
		b.vl_adaptacao,
		b.vl_minimo,
		b.nr_sequencia nr_seq_reajuste_preco
	from	pls_plano_preco a,
		pls_reajuste_preco b
	where	a.nr_sequencia	= b.nr_seq_preco
	and	a.nr_seq_tabela = nr_seq_tabela_pc
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and (b.dt_reajuste < dt_prox_valor_pc or coalesce(dt_prox_valor_pc::text, '') = '')
	and (a.ie_grau_titularidade = ie_tipo_parentesco_pc or coalesce(a.ie_grau_titularidade::text, '') = '')
	and	(((ie_tabela_qt_vidas_pc = 'S') and qt_vidas_pc between coalesce(a.qt_vidas_inicial,qt_vidas_pc) and coalesce(a.qt_vidas_final,qt_vidas_pc))
	or (ie_tabela_qt_vidas_pc = 'N'));
BEGIN
nr_sequencia_w	:= 0;
CALL CALL CALL CALL CALL pls_segurado_preco_pck.carregar_parametros(cd_estabelecimento_p);

if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_segurado_valor_w
	from	pls_segurado_valor
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	ie_situacao = 'A'
	and	dt_preco <= dt_referencia_p;
else
	nr_seq_segurado_valor_w	:= null;
end if;


select	trunc(b.dt_nascimento,'month'),
	a.nr_seq_contrato,
	c.ie_regulamentacao,
	coalesce(a.qt_idade_limite_reaj,d.qt_idade_limite_reaj) qt_idade_limite_reaj,
	coalesce(a.qt_anos_limite_reaj,d.qt_anos_limite_reaj) qt_anos_limite_reaj,
	d.ie_mes_cobranca_reaj,
	a.dt_contratacao,
	a.dt_inclusao_operadora
into STRICT	dt_nascimento_w,
	nr_seq_contrato_w,
	ie_regulamentacao_w,
	qt_idade_limite_reaj_w,
	qt_anos_limite_reaj_w,
	ie_mes_cobranca_reaj_w,
	dt_contratacao_w,
	dt_inclusao_operadora_w
FROM pls_plano c, pessoa_fisica b, pls_segurado a
LEFT OUTER JOIN pls_contrato d ON (a.nr_seq_contrato = d.nr_sequencia)
WHERE b.cd_pessoa_fisica	= a.cd_pessoa_fisica and c.nr_sequencia		= a.nr_seq_plano  and a.nr_sequencia		= nr_seq_segurado_p;

qt_meses_niver_w	:= pls_segurado_preco_pck.obter_qt_meses_niver(ie_mes_cobranca_reaj_w,ie_regulamentacao_w);
dt_nascimento_w		:= add_months(dt_nascimento_w,qt_meses_niver_w);

if (coalesce(qt_idade_limite_reaj_w::text, '') = '') and (coalesce(qt_anos_limite_reaj_w::text, '') = '') then
	qt_idade_limite_reaj_w	:= current_setting('pls_segurado_preco_pck.pls_parametros_w')::pls_parametros%rowtype.qt_idade_limite;
	qt_anos_limite_reaj_w	:= current_setting('pls_segurado_preco_pck.pls_parametros_w')::pls_parametros%rowtype.qt_tempo_limite;
end if;

for r_c01_w in C01 loop
	begin
	if (r_c01_w.ie_permite_reaj_fx_etaria = 'S') or (r_c01_w.ie_motivo_alteracao = '1') then
		qt_idade_w	:= trunc(months_between(r_c01_w.dt_preco, dt_nascimento_w) / 12);
	end if;
	
	SELECT * FROM pls_segurado_preco_pck.obter_valor(r_c01_w.nr_seq_tabela, r_c01_w.dt_preco, qt_idade_w, r_c01_w.ie_tipo_parentesco, r_c01_w.ie_tabela_qt_vidas, r_c01_w.qt_vidas, nr_seq_plano_preco_w, vl_preco_atual_w, vl_preco_nao_subsidiado_w, vl_adaptacao_w, vl_minimo_w, tx_acrescimo_w) INTO STRICT nr_seq_plano_preco_w, vl_preco_atual_w, vl_preco_nao_subsidiado_w, vl_adaptacao_w, vl_minimo_w, tx_acrescimo_w;
	
	nr_sequencia_w	:= nr_sequencia_w+1;
	t_preco_beneficiario_row_w.nr_sequencia			:= nr_sequencia_w;
	t_preco_beneficiario_row_w.nr_seq_segurado_valor	:= r_c01_w.nr_sequencia;
	t_preco_beneficiario_row_w.dt_preco			:= r_c01_w.dt_preco;
	t_preco_beneficiario_row_w.dt_alteracao			:= r_c01_w.dt_alteracao;
	t_preco_beneficiario_row_w.dt_inativacao		:= r_c01_w.dt_inativacao;
	t_preco_beneficiario_row_w.qt_idade			:= qt_idade_w;
	t_preco_beneficiario_row_w.vl_preco			:= pls_segurado_preco_pck.obter_valor_com_desconto(vl_preco_atual_w,r_c01_w.tx_desconto,r_c01_w.vl_desconto);
	t_preco_beneficiario_row_w.vl_sem_desconto		:= vl_preco_atual_w;
	t_preco_beneficiario_row_w.vl_preco_nao_subsidiado	:= pls_segurado_preco_pck.obter_valor_com_desconto(vl_preco_nao_subsidiado_w,r_c01_w.tx_desconto,r_c01_w.vl_desconto);
	t_preco_beneficiario_row_w.vl_adaptacao			:= vl_adaptacao_w;
	t_preco_beneficiario_row_w.vl_reajuste_indice		:= 0;
	t_preco_beneficiario_row_w.vl_reajuste_fx_etaria	:= 0;
	t_preco_beneficiario_row_w.vl_minimo			:= vl_minimo_w;
	t_preco_beneficiario_row_w.ie_motivo_alteracao		:= r_c01_w.ie_motivo_alteracao;
	t_preco_beneficiario_row_w.nr_seq_reajuste_preco	:= null;
	t_preco_beneficiario_row_w.nr_seq_plano			:= r_c01_w.nr_seq_plano;
	t_preco_beneficiario_row_w.nr_seq_tabela		:= r_c01_w.nr_seq_tabela;
	t_preco_beneficiario_row_w.nr_seq_plano_preco		:= nr_seq_plano_preco_w;
	t_preco_beneficiario_row_w.ie_tipo_titularidade		:= r_c01_w.ie_tipo_parentesco;
	t_preco_beneficiario_row_w.ie_tabela_qt_vidas		:= r_c01_w.ie_tabela_qt_vidas;
	t_preco_beneficiario_row_w.qt_vidas			:= r_c01_w.qt_vidas;
	t_preco_beneficiario_row_w.nr_seq_processo_judicial	:= r_c01_w.nr_seq_processo_judicial;
	t_preco_beneficiario_row_w.ie_permite_reaj_fx_etaria	:= r_c01_w.ie_permite_reaj_fx_etaria;
	t_preco_beneficiario_row_w.ie_permite_reaj_indice	:= r_c01_w.ie_permite_reaj_indice;
	t_preco_beneficiario_row_w.nr_seq_regra_desconto	:= r_c01_w.nr_seq_regra_desconto;
	t_preco_beneficiario_row_w.tx_desconto			:= r_c01_w.tx_desconto;
	t_preco_beneficiario_row_w.vl_desconto			:= r_c01_w.vl_desconto;
	t_preco_beneficiario_row_w.nr_seq_regra_apropriacao	:= r_c01_w.nr_seq_regra_apropriacao;
	t_preco_beneficiario_row_w.ie_situacao			:= r_c01_w.ie_situacao;
	
	RETURN NEXT t_preco_beneficiario_row_w;
	
	if (r_c01_w.ie_situacao = 'A') then
		select	min(dt_preco)
		into STRICT	dt_prox_valor_w
		from	pls_segurado_valor
		where	nr_seq_segurado	= nr_seq_segurado_p
		and	dt_preco > r_c01_w.dt_preco
		and	ie_situacao	= 'A';
		
		--Adicionar reajustes por faixa etaria
		if (r_c01_w.ie_permite_reaj_fx_etaria = 'S') then
			for r_c02_w in C02(r_c01_w.nr_seq_tabela, qt_idade_w, r_c01_w.ie_tipo_parentesco, r_c01_w.ie_tabela_qt_vidas, r_c01_w.qt_vidas) loop
				begin
				if (coalesce(dt_prox_valor_w::text, '') = '' or r_c02_w.dt_preco < dt_prox_valor_w) and (coalesce(dt_referencia_p::text, '') = '' or r_c02_w.dt_preco <= trunc(dt_referencia_p,'month')) then
					qt_idade_fx_etaria_w	:= trunc(months_between(r_c02_w.dt_preco, dt_nascimento_w) / 12);
					
					if (pls_segurado_preco_pck.obter_se_permite_reaj(nr_seq_segurado_p,r_c02_w.dt_preco,qt_idade_limite_reaj_w,qt_anos_limite_reaj_w,qt_idade_fx_etaria_w,ie_regulamentacao_w,dt_contratacao_w,dt_inclusao_operadora_w) = 'S') then
						SELECT * FROM pls_segurado_preco_pck.obter_valor(r_c01_w.nr_seq_tabela, r_c02_w.dt_preco, qt_idade_fx_etaria_w, r_c01_w.ie_tipo_parentesco, r_c01_w.ie_tabela_qt_vidas, r_c01_w.qt_vidas, nr_seq_plano_preco_w, vl_preco_atual_w, vl_preco_nao_subsidiado_w, vl_adaptacao_w, vl_minimo_w, tx_acrescimo_w) INTO STRICT nr_seq_plano_preco_w, vl_preco_atual_w, vl_preco_nao_subsidiado_w, vl_adaptacao_w, vl_minimo_w, tx_acrescimo_w;
						
						if (tx_acrescimo_w > 0) then
							vl_reajuste_fx_etaria_w	:= vl_preco_atual_w - ((vl_preco_atual_w * 100) / (100 + tx_acrescimo_w));
						else
							vl_reajuste_fx_etaria_w	:= 0;
						end if;
						
						nr_sequencia_w	:= nr_sequencia_w+1;
						t_preco_beneficiario_row_w.nr_sequencia			:= nr_sequencia_w;
						t_preco_beneficiario_row_w.nr_seq_segurado_valor	:= r_c01_w.nr_sequencia;
						t_preco_beneficiario_row_w.dt_preco			:= r_c02_w.dt_preco;
						t_preco_beneficiario_row_w.dt_alteracao			:= r_c02_w.dt_preco;
						t_preco_beneficiario_row_w.dt_inativacao		:= r_c01_w.dt_inativacao;
						t_preco_beneficiario_row_w.qt_idade			:= qt_idade_fx_etaria_w;
						t_preco_beneficiario_row_w.vl_preco			:= pls_segurado_preco_pck.obter_valor_com_desconto(vl_preco_atual_w,r_c01_w.tx_desconto,r_c01_w.vl_desconto);
						t_preco_beneficiario_row_w.vl_sem_desconto		:= vl_preco_atual_w;
						t_preco_beneficiario_row_w.vl_preco_nao_subsidiado	:= pls_segurado_preco_pck.obter_valor_com_desconto(vl_preco_nao_subsidiado_w,r_c01_w.tx_desconto,r_c01_w.vl_desconto);
						t_preco_beneficiario_row_w.vl_adaptacao			:= vl_adaptacao_w;
						t_preco_beneficiario_row_w.vl_minimo			:= vl_minimo_w;
						t_preco_beneficiario_row_w.vl_reajuste_indice		:= 0;
						t_preco_beneficiario_row_w.vl_reajuste_fx_etaria	:= vl_reajuste_fx_etaria_w;
						t_preco_beneficiario_row_w.ie_motivo_alteracao		:= '2';
						t_preco_beneficiario_row_w.nr_seq_reajuste_preco	:= null;
						t_preco_beneficiario_row_w.nr_seq_plano			:= r_c01_w.nr_seq_plano;
						t_preco_beneficiario_row_w.nr_seq_tabela		:= r_c01_w.nr_seq_tabela;
						t_preco_beneficiario_row_w.nr_seq_plano_preco		:= r_c02_w.nr_seq_plano_preco;
						t_preco_beneficiario_row_w.ie_tipo_titularidade		:= r_c01_w.ie_tipo_parentesco;
						t_preco_beneficiario_row_w.ie_tabela_qt_vidas		:= r_c01_w.ie_tabela_qt_vidas;
						t_preco_beneficiario_row_w.qt_vidas			:= r_c01_w.qt_vidas;
						t_preco_beneficiario_row_w.nr_seq_processo_judicial	:= r_c01_w.nr_seq_processo_judicial;
						t_preco_beneficiario_row_w.ie_permite_reaj_fx_etaria	:= r_c01_w.ie_permite_reaj_fx_etaria;
						t_preco_beneficiario_row_w.ie_permite_reaj_indice	:= r_c01_w.ie_permite_reaj_indice;
						t_preco_beneficiario_row_w.nr_seq_regra_desconto	:= r_c01_w.nr_seq_regra_desconto;
						t_preco_beneficiario_row_w.tx_desconto			:= r_c01_w.tx_desconto;
						t_preco_beneficiario_row_w.vl_desconto			:= r_c01_w.vl_desconto;
						t_preco_beneficiario_row_w.nr_seq_regra_apropriacao	:= r_c01_w.nr_seq_regra_apropriacao;
						t_preco_beneficiario_row_w.ie_situacao			:= r_c01_w.ie_situacao;
						
						RETURN NEXT t_preco_beneficiario_row_w;
					end if;
				end if;
				end;
			end loop; --C02
		end if;
		
		--Adicionar reajustes por indice de correcao
		if (r_c01_w.ie_permite_reaj_indice = 'S') then
			for r_c03_w in C03(r_c01_w.nr_seq_tabela, qt_idade_w, r_c01_w.ie_tipo_parentesco, r_c01_w.ie_tabela_qt_vidas, r_c01_w.qt_vidas, dt_prox_valor_w) loop
				begin
				if (r_c01_w.ie_permite_reaj_fx_etaria = 'S') then
					qt_idade_reaj_w	:= trunc(months_between(r_c03_w.dt_preco, dt_nascimento_w) / 12);
				else
					qt_idade_reaj_w	:= qt_idade_w;
				end if;
				
				if (qt_idade_reaj_w between r_c03_w.qt_idade_inicial and r_c03_w.qt_idade_final) and (r_c03_w.dt_preco > r_c01_w.dt_preco) and (coalesce(dt_referencia_p::text, '') = '' or r_c03_w.dt_preco <= trunc(dt_referencia_p,'month')) then
					nr_sequencia_w	:= nr_sequencia_w+1;
					t_preco_beneficiario_row_w.nr_sequencia			:= nr_sequencia_w;
					t_preco_beneficiario_row_w.nr_seq_segurado_valor	:= r_c01_w.nr_sequencia;
					t_preco_beneficiario_row_w.dt_preco			:= r_c03_w.dt_preco;
					t_preco_beneficiario_row_w.dt_alteracao			:= r_c03_w.dt_liberacao;
					t_preco_beneficiario_row_w.dt_inativacao		:= r_c01_w.dt_inativacao;
					t_preco_beneficiario_row_w.qt_idade			:= qt_idade_reaj_w;
					t_preco_beneficiario_row_w.vl_preco			:= pls_segurado_preco_pck.obter_valor_com_desconto(r_c03_w.vl_preco,r_c01_w.tx_desconto,r_c01_w.vl_desconto);
					t_preco_beneficiario_row_w.vl_sem_desconto		:= r_c03_w.vl_preco;
					t_preco_beneficiario_row_w.vl_preco_nao_subsidiado	:= pls_segurado_preco_pck.obter_valor_com_desconto(r_c03_w.vl_preco_nao_subsidiado,r_c01_w.tx_desconto,r_c01_w.vl_desconto);
					t_preco_beneficiario_row_w.vl_adaptacao			:= r_c03_w.vl_adaptacao;
					t_preco_beneficiario_row_w.vl_minimo			:= r_c03_w.vl_minimo;
					t_preco_beneficiario_row_w.vl_reajuste_indice		:= r_c03_w.vl_reajuste_indice;
					t_preco_beneficiario_row_w.vl_reajuste_fx_etaria	:= 0;
					t_preco_beneficiario_row_w.ie_motivo_alteracao		:= '3';
					t_preco_beneficiario_row_w.nr_seq_reajuste_preco	:= r_c03_w.nr_seq_reajuste_preco;
					t_preco_beneficiario_row_w.nr_seq_plano			:= r_c01_w.nr_seq_plano;
					t_preco_beneficiario_row_w.nr_seq_tabela		:= r_c01_w.nr_seq_tabela;
					t_preco_beneficiario_row_w.nr_seq_plano_preco		:= r_c03_w.nr_seq_plano_preco;
					t_preco_beneficiario_row_w.ie_tipo_titularidade		:= r_c01_w.ie_tipo_parentesco;
					t_preco_beneficiario_row_w.ie_tabela_qt_vidas		:= r_c01_w.ie_tabela_qt_vidas;
					t_preco_beneficiario_row_w.qt_vidas			:= r_c01_w.qt_vidas;
					t_preco_beneficiario_row_w.nr_seq_processo_judicial	:= r_c01_w.nr_seq_processo_judicial;
					t_preco_beneficiario_row_w.ie_permite_reaj_fx_etaria	:= r_c01_w.ie_permite_reaj_fx_etaria;
					t_preco_beneficiario_row_w.ie_permite_reaj_indice	:= r_c01_w.ie_permite_reaj_indice;
					t_preco_beneficiario_row_w.nr_seq_regra_desconto	:= r_c01_w.nr_seq_regra_desconto;
					t_preco_beneficiario_row_w.tx_desconto			:= r_c01_w.tx_desconto;
					t_preco_beneficiario_row_w.vl_desconto			:= r_c01_w.vl_desconto;
					t_preco_beneficiario_row_w.nr_seq_regra_apropriacao	:= r_c01_w.nr_seq_regra_apropriacao;
					t_preco_beneficiario_row_w.ie_situacao			:= r_c01_w.ie_situacao;
					
					RETURN NEXT t_preco_beneficiario_row_w;
				end if;
				end;
			end loop; --C03
		end if;
	end if;
	
	end;
end loop; --C01
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION pls_segurado_preco_pck.obter_preco_segurado ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
