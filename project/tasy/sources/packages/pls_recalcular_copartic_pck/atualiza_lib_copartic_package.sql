-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE pls_recalcular_copartic_pck.atualiza_lib_copartic (tb_lib_copartic_p pls_util_cta_pck.t_number_table) AS $body$
BEGIN
	--Somente executa se tem registros para atualizar
	if (tb_lib_copartic_p.count > 0) then
		forall i in tb_lib_copartic_p.first..tb_lib_copartic_p.last
			update	pls_lib_coparticipacao
			set	nr_seq_conta_coparticipacao  = NULL
			where	nr_sequencia = tb_lib_copartic_p(i);
		commit;
	end if;

end;

begin

select  coalesce(max(ie_calculo_pacote),'P')
into STRICT    ie_calculo_pacote_w
from    pls_parametros
where   cd_estabelecimento      = cd_estabelecimento_p;

select	nr_seq_lote_copartic
into STRICT	nr_seq_lote_copartic_w
from	pls_recalc_copartic_lote a
where	a.nr_sequencia = nr_seq_lote_recalc_p;

--Remover os v?nculos do lote de libera??o com registros de coparticipa??o(Os mesmos ser?o eliminados no decorrer do processo).
if (nr_seq_lote_copartic_w IS NOT NULL AND nr_seq_lote_copartic_w::text <> '') then

	select 	ie_status
	into STRICT	ie_status_lote_copartic_w
	from	pls_lote_coparticipacao
	where	nr_sequencia = nr_seq_lote_copartic_w;

	if ( ie_status_lote_copartic_w = 'D') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort('Lote de coparticipa??o est? com status definitivo.');
	end if;

	nr_index_w := 0;
	tb_lib_copartic_w.delete;
	for r_c01_w in c_lib_copartic loop

		nr_index_w := nr_index_w + 1;
		tb_lib_copartic_w(nr_index_w) := r_c01_w.nr_sequencia;
		if (nr_index_w > pls_util_pck.qt_registro_transacao_w) then
			CALL pls_recalcular_copartic_pck.atualiza_lib_copartic(tb_lib_copartic_w);
			nr_index_w:= 0;
			tb_lib_copartic_w.delete;
		end if;

	end loop;
	--Se sobrarem registros em mem?ria, manda para o banco para atualizar;
	CALL pls_recalcular_copartic_pck.atualiza_lib_copartic(tb_lib_copartic_w);
end if;

CALL gravar_processo_longo('Recalculando e aplicando coparticipa??o ','PLS_APLICAR_COPARTICIPACAO',0);
for r_c01_w in c01(nr_seq_lote_recalc_p) loop

	CALL gravar_processo_longo('Recalculando e aplicando coparticipa??o ' || r_c01_w.nr_seq_conta,'PLS_APLICAR_COPARTICIPACAO',1);
	for	r_c02_w in c02(r_c01_w.nr_seq_conta) loop

		if (r_c02_w.nr_seq_conta_proc IS NOT NULL AND r_c02_w.nr_seq_conta_proc::text <> '') then

			select	max(ie_status_coparticipacao),
				max(nr_sequencia)
			into STRICT	ie_status_coparticipacao_w,
				nr_seq_conta_coparticipacao_w
			from	pls_conta_coparticipacao
			where	nr_seq_conta_proc = r_c02_w.nr_seq_conta_proc;

			select	max(c.nr_seq_lote)
			into STRICT	nr_seq_lote_ted_w
			from	pls_ted_copartic_item	a,
				pls_ted_copartic_benef	b,
				pls_ted_copartic_pagador c
			where	b.nr_sequencia	= a.nr_seq_ted_benef
			and	c.nr_sequencia	= b.nr_seq_ted_pagador
			and	a.nr_seq_conta_copartic	= nr_seq_conta_coparticipacao_w;

			if (nr_seq_lote_ted_w IS NOT NULL AND nr_seq_lote_ted_w::text <> '') then -- N?o ? poss?vel realizar o rec?lculo, pois j? existe coparticipa??o vinculada ao lote #@NR_SEQ_LOTE#@ na fun??o OPS - Transfer?ncia Eletr?nica de Dados (TED) / Controle de coparticipa??es
				CALL wheb_mensagem_pck.exibir_mensagem_abort(336374,'NR_SEQ_LOTE='||nr_seq_lote_ted_w);
			end if;

			if ( r_c02_w.ie_tipo_despesa = 4 and ie_calculo_pacote_w <> 'R') then

				dt_preco_w := pls_obter_data_preco_item(r_c02_w.nr_seq_conta_proc,'P');

				select	nr_seq_segurado,
						ie_origem_conta,
						nr_seq_congenere,
						nr_seq_plano,
						ie_internado,
						nr_seq_tipo_acomodacao,
						ie_tipo_intercambio,
						nr_seq_prest_inter,
						(select max(nr_contrato)
							from pls_contrato where nr_sequencia = a.nr_seq_contrato) nr_contrato,
						nr_seq_intercambio,
						nr_seq_clas_prest_exec,
						coalesce(nr_seq_prestador_exec, nr_seq_prestador_prot)
				into STRICT	nr_seq_segurado_w,
						ie_origem_conta_w,
						nr_seq_congenere_w,
						nr_seq_plano_w,
						ie_internado_w,
						nr_seq_tipo_acomodacao_w,
						ie_tipo_intercambio_w,
						nr_seq_prest_inter_w,
						nr_contrato_w,
						nr_seq_intercambio_w,
						nr_seq_classificacao_prest_w,
						nr_seq_prestador_w
				from	pls_conta_v a
				where 	nr_sequencia = r_c02_w.nr_seq_conta;

				 pls_define_preco_pacote(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_tipo_acomodacao_w,
										dt_preco_w, r_c02_w.cd_procedimento, r_c02_w.ie_origem_proced,
										ie_internado_w,nr_seq_plano_w, nr_contrato_w,
										nr_seq_congenere_w, nm_usuario_p, ie_origem_conta_w,
										ie_tipo_intercambio_w, nr_seq_pacote_copartic_w, nr_seq_regra_copartic_w,cd_proc_pacote_copartic_w,
										ie_origem_pacote_copartic_w, vl_copartic_w, vl_medico_copartic_w,
										vl_anestesista_copartic_w, vl_auxiliares_copartic_w, vl_custo_operacional_copart_w,
										vl_materiais_copartic_w,nr_seq_intercambio_w,nr_seq_classificacao_prest_w,
										r_c02_w.nr_seq_conta_proc, nr_seq_segurado_w, 'N',
										'S', nr_seq_prest_inter_w, 2);


				update pls_conta_proc
				set		nr_seq_regra_copartic = nr_seq_regra_copartic_w,
						vl_proc_copartic = vl_copartic_w
				where 	nr_sequencia = r_c02_w.nr_seq_conta_proc;

			else
				-- Recalcula a coparticipa??o do procedimento
				CALL pls_gerar_coparticipacao_proc(r_c02_w.nr_seq_conta_proc,'N',nm_usuario_p);
			end if;

		elsif (r_c02_w.nr_seq_conta_mat IS NOT NULL AND r_c02_w.nr_seq_conta_mat::text <> '') then

			select	max(ie_status_coparticipacao),
				max(nr_sequencia)
			into STRICT	ie_status_coparticipacao_w,
				nr_seq_conta_coparticipacao_w
			from	pls_conta_coparticipacao
			where	nr_seq_conta_mat = r_c02_w.nr_seq_conta_mat;

			select	max(c.nr_seq_lote)
			into STRICT	nr_seq_lote_ted_w
			from	pls_ted_copartic_item	a,
				pls_ted_copartic_benef	b,
				pls_ted_copartic_pagador c
			where	b.nr_sequencia	= a.nr_seq_ted_benef
			and	c.nr_sequencia	= b.nr_seq_ted_pagador
			and	a.nr_seq_conta_copartic	= nr_seq_conta_coparticipacao_w;

			if (nr_seq_lote_ted_w IS NOT NULL AND nr_seq_lote_ted_w::text <> '') then -- N?o ? poss?vel realizar o rec?lculo, pois j? existe coparticipa??o vinculada ao lote #@NR_SEQ_LOTE#@ na fun??o OPS - Transfer?ncia Eletr?nica de Dados (TED) / Controle de coparticipa??es
				CALL wheb_mensagem_pck.exibir_mensagem_abort(336374,'NR_SEQ_LOTE='||nr_seq_lote_ted_w);
			end if;

			-- Recalcular o valor de coparticipa??o do material
			CALL pls_atualiza_valor_mat_cop(r_c02_w.nr_seq_conta_mat, 'S', nm_usuario_p, 'N', null);

		end if;

	end loop;
	
	CALL pls_recalcular_copartic_pck.pls_marcar_para_estorno(r_c01_w.nr_seq_conta, nr_seq_lote_recalc_p, nm_usuario_p);
  CALL pls_recalcular_copartic_pck.pls_estornar_reg_anteriores(r_c01_w.nr_seq_conta, nr_seq_lote_recalc_p, nm_usuario_p);
	CALL pls_gerar_coparticipacao_conta( r_c01_w.nr_seq_conta, 'R', nm_usuario_p);	
	CALL pls_recalcular_copartic_pck.pls_atualiza_dt_mes_comp(r_c01_w.nr_seq_conta, nr_seq_lote_recalc_p, nm_usuario_p);
	
	for r_copartic_w in c_copartic(r_c01_w.nr_seq_conta) loop

		CALL pls_atualiza_status_copartic(r_c01_w.nr_seq_conta, 'FC', null, nm_usuario_p, cd_estabelecimento_p);

		-- Se possu?a lote de libera??o de coparticipa??o ent?o gera log do rec?lculo
		if (nr_seq_lote_copartic_w IS NOT NULL AND nr_seq_lote_copartic_w::text <> '') then

			CALL pls_gravar_hist_lote_copartic(	nr_seq_lote_copartic_w,
							substr('Realizado rec?lculo da(s) coparticipa??o(?es) da conta ' || r_c01_w.nr_seq_conta ||
								' Atrav?s do lote de rec?lculo ' || nr_seq_lote_recalc_p ,1,4000), nm_usuario_p, cd_estabelecimento_p);
								
		end if;

		qt_coparticipacoes_w := qt_coparticipacoes_w + 1;
		-- Insere as coparticipa??es geradas para esta conta
		select	coalesce(a.vl_coparticipacao,0),
			coalesce(a.tx_coparticipacao,0),
			coalesce(a.vl_coparticipacao_unit,0),
			coalesce(a.vl_base_copartic,0),
			coalesce(a.qt_liberada_copartic,0),
			a.nr_seq_regra
		into STRICT	t_recalc_coparticipacao_w.vl_coparticipacao(qt_coparticipacoes_w),
			t_recalc_coparticipacao_w.tx_coparticipacao(qt_coparticipacoes_w),
			t_recalc_coparticipacao_w.vl_coparticipacao_unit(qt_coparticipacoes_w),
			t_recalc_coparticipacao_w.vl_base_copartic(qt_coparticipacoes_w),
			t_recalc_coparticipacao_w.qt_liberada_copartic(qt_coparticipacoes_w),
			t_recalc_coparticipacao_w.nr_seq_regra(qt_coparticipacoes_w)
		from	pls_conta_coparticipacao a
		where	a.nr_sequencia = r_copartic_w.nr_seq_coparticipacao;

		select	max(cd_procedimento),
			max(ie_origem_proced)
		into STRICT	t_recalc_coparticipacao_w.cd_procedimento(qt_coparticipacoes_w),
			t_recalc_coparticipacao_w.ie_origem_proced(qt_coparticipacoes_w)
		from	pls_conta_proc
		where	nr_sequencia = r_copartic_w.nr_seq_conta_proc;

		select	max(nr_seq_material)
		into STRICT	t_recalc_coparticipacao_w.nr_seq_material(qt_coparticipacoes_w)
		from	pls_conta_mat
		where	nr_sequencia = r_copartic_w.nr_seq_conta_mat;

		t_recalc_coparticipacao_w.nr_seq_recalc_conta(qt_coparticipacoes_w) 			:= r_c01_w.nr_sequencia;
		t_recalc_coparticipacao_w.nr_seq_conta_coparticipacao(qt_coparticipacoes_w) 	:= r_copartic_w.nr_seq_coparticipacao;
		t_recalc_coparticipacao_w.nm_usuario(qt_coparticipacoes_w)						:= nm_usuario_p;

		if (qt_coparticipacoes_w > pls_util_pck.qt_registro_transacao_w) then

			CALL pls_recalcular_copartic_pck.inserir_coparticipacoes(t_recalc_coparticipacao_w);
			qt_coparticipacoes_w := 0;

			--Limpa as estruturas
			t_recalc_coparticipacao_w.vl_coparticipacao.delete;
			t_recalc_coparticipacao_w.tx_coparticipacao.delete;
			t_recalc_coparticipacao_w.nr_seq_recalc_conta.delete;
			t_recalc_coparticipacao_w.nr_seq_conta_coparticipacao.delete;
			t_recalc_coparticipacao_w.vl_coparticipacao_unit.delete;
			t_recalc_coparticipacao_w.vl_base_copartic.delete;
			t_recalc_coparticipacao_w.qt_liberada_copartic.delete;
			t_recalc_coparticipacao_w.nr_seq_regra.delete;
			t_recalc_coparticipacao_w.cd_procedimento.delete;
			t_recalc_coparticipacao_w.ie_origem_proced.delete;
			t_recalc_coparticipacao_w.nr_seq_material.delete;
			t_recalc_coparticipacao_w.nm_usuario.delete;

		end if;

	end loop;

end loop;
CALL pls_recalcular_copartic_pck.inserir_coparticipacoes(t_recalc_coparticipacao_w);

for r_protocolo_w in c_valor_cop_protocolos(nr_seq_lote_recalc_p) loop

	update 	pls_protocolo_conta
	set		vl_coparticipacao = r_protocolo_w.vl_coparticipacao
	where 	nr_sequencia = r_protocolo_w.nr_sequencia;


end loop;

update pls_recalc_copartic_lote set dt_aplicacao = clock_timestamp() where nr_sequencia = nr_seq_lote_recalc_p;
commit;
END;

--Grava os valores de recalculo na tabela de itens de recalculo.
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_recalcular_copartic_pck.atualiza_lib_copartic (tb_lib_copartic_p pls_util_cta_pck.t_number_table) FROM PUBLIC;
