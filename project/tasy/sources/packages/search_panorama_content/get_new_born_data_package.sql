-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION search_panorama_content.get_new_born_data (nr_atendimento_p bigint ) RETURNS SETOF T_OBJETO_NEW_BORN_ROW_DATA AS $body$
DECLARE


c_new_born CURSOR FOR
SELECT  a.nr_atendimento nr_atend_rn,
        a.cd_pessoa_fisica,
        substr((select obter_dados_atendimento(a.nr_atendimento, 'NP') ),1,80) ds_nome_rn,
	CASE WHEN(select obter_idade(pf.dt_nascimento, clock_timestamp(), 'AM') )=(select obter_desc_expressao(344145, wheb_usuario_pck.get_nr_seq_idioma) ) THEN (select obter_idade(pf.dt_nascimento, clock_timestamp(), 'S') )  ELSE (select obter_idade(pf.dt_nascimento, clock_timestamp(), 'AM') ) END  ds_idade_rn,
        substr((select obter_sexo_pf(obter_dados_atendimento(a.nr_atendimento, 'CP'), 'D') ),1,30) ds_sexo_rn,
        substr((select obter_sexo_pf(obter_dados_atendimento(a.nr_atendimento, 'CP'), 'C') ),1,30) ie_sexo_rn,
        SUBSTR((select obter_episodio_atend_tela(a.nr_atendimento) ),1,50) nr_case_rn,
        SUBSTR((select obter_uso_case(obter_usuario_ativo) ),1,3) ie_uso_case_rn,
        nasc.dt_nascimento dt_nascimento_rn,
        'date(shortDate)' ds_mascara,
		substr((select obter_unidade_atendimento(a.nr_atendimento, 'A','CS') ),1,30) cd_setor_atendimento,
        substr((select obter_unidade_atendimento(a.nr_atendimento, 'A','CTA') ),1,30) cd_tipo_acomodacao,
		substr((select obter_unidade_atendimento(a.nr_atendimento, 'A','UB') ),1,30) cd_unidade_basica,
		substr((select obter_unidade_atendimento(a.nr_atendimento, 'A','UC') ),1,30) cd_unidade_compl,
        (select obter_unidade_atendimento(a.nr_atendimento, 'A','NR') ) nr_seq_interno,
        substr((select obter_status_unid_atend(a.nr_atendimento) ),1,3) ie_status_unidade,
        SUBSTR((select obter_ds_triagem_mapa_html(a.nr_atendimento) ),1,200) ds_classif_risco,
        SUBSTR((select obter_cor_triagem_mapa_html(a.nr_atendimento) ),1,20) ds_cor_risco,
		SUBSTR(CASE WHEN coalesce(pf.nr_seq_perfil::text, '') = '' THEN 'N'  ELSE 'S' END ,1,1) ie_vip,
		SUBSTR((select obter_desc_perfil_paciente(pf.nr_seq_perfil) ),1,255) ds_vip,
		SUBSTR((select pan_obter_se_pac_alergia(a.cd_pessoa_fisica) ),1,1) ie_alergia,
		756080 cd_exp_alergia,
		966277 nr_seq_texto_alergia,
		317326 cd_exp_acao_alergia,
		966278 nr_seq_texto_acao_alergia,
		SUBSTR((select obter_descricao_alergias(a.cd_pessoa_fisica) ),1,4000) ds_alergias,
		SUBSTR((select obter_desc_classif_paciente(a.cd_pessoa_fisica,'D') ),1,255) ds_classif_paciente,
		SUBSTR((select obter_se_exibe_classif_pan(obter_classificacao_pf(a.cd_pessoa_fisica)) ),1,1) ie_exibe_classif,
		SUBSTR(CASE WHEN(select obter_classificacao_pf(a.cd_pessoa_fisica) ) IS NULL THEN 'N'  ELSE 'S' END ,1,10) ie_classif_paciente,
		(SELECT	MAX(x.ds_info_adic) FROM	w_pan_info_adicional x	WHERE x.ie_concluido = 'S' AND  x.ie_campo_panorama = 39 AND x.nr_seq_interno = substr((select obter_unidade_atendimento(a.nr_atendimento, 'A','NR') ),1,30)) ds_motivo_isolamento,
	    (select obter_desc_expressao(283172) ) icon_legend,
		(select obter_desc_escala_queda(obter_setor_atendimento(a.nr_atendimento), a.nr_atendimento, 'D') ) AS ds_risco_queda,
		(select obter_desc_escala_queda(obter_setor_atendimento(a.nr_atendimento), a.nr_atendimento, 'R') ) AS ie_risco_queda,
		967932 nr_seq_texto_nasc,
		substr((select obter_dados_atendimento(a.nr_atendimento, 'MR') ),1,60) cd_medico,
		substr((select obter_dados_atendimento(a.nr_atendimento, 'NMR') ),1,80) ds_medico,
		(select obter_classif_setor_atend(a.nr_atendimento) ) cd_classif_setor,
    a.ie_paciente_isolado
from    atendimento_paciente a,
		nascimento nasc,
		pessoa_fisica pf
where   pf.cd_pessoa_fisica 	= a.cd_pessoa_fisica
and     a.nr_atendimento 	= nasc.nr_atend_rn
and     (nasc.nr_atend_rn IS NOT NULL AND nasc.nr_atend_rn::text <> '')
and     (a.nr_atendimento_mae IS NOT NULL AND a.nr_atendimento_mae::text <> '')
and		substr((select obter_se_ult_setor_rn(a.nr_atendimento, obter_unidade_atendimento(a.nr_atendimento, 'A','CS'),
													   obter_unidade_atendimento(a.nr_atendimento, 'A','UB'),
													   obter_unidade_atendimento(a.nr_atendimento, 'A','UC')) ),1,1) = 'S'
and     (nasc.dt_liberacao IS NOT NULL AND nasc.dt_liberacao::text <> '')
and     coalesce(nasc.dt_inativacao::text, '') = ''
and     a.nr_atendimento_mae 	= nr_atendimento_p;

table_aux t_objeto_new_born_row_data;

BEGIN

  OPEN c_new_born;
  FETCH c_new_born BULK COLLECT INTO table_aux;
  CLOSE c_new_born;

  for i in 1..table_aux.count
  loop 
  	RETURN NEXT  table_aux(i );
	end loop;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION search_panorama_content.get_new_born_data (nr_atendimento_p bigint ) FROM PUBLIC;
