-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE contagem_benef_record AS (	ie_tipo_segurado	dbms_sql.varchar2_table,
						ie_tipo_contrato	dbms_sql.varchar2_table,
						ie_preco		dbms_sql.varchar2_table);


CREATE OR REPLACE PROCEDURE ptu_moviment_benef_a1300_pck.gerar_contagem_beneficiarios (nr_seq_lote_p bigint) AS $body$
DECLARE

	
	ds_sql_w			varchar(32000);
	var_cur_w			integer;
	var_exec_w			integer;
	var_retorno_w			integer;
	index_w				integer	:= 1;
	------------------------------------------------------------------------------------------------------------

	dt_inicio_w			timestamp;
	dt_fim_w			timestamp;
	ie_tipo_historico_w		pls_segurado_historico.ie_tipo_historico%type;
	dt_mes_aux_w			timestamp;
	dt_ultimo_hist_inativo_w	timestamp;
	dt_ultimo_hist_reativacao_w	timestamp;
	qt_registros_w			bigint;
	------------------------------------------------------------------------------------------------------------

	nr_seq_segurado_w		bigint;
	dt_rescisao_w			timestamp;
	dt_contratacao_w		timestamp;
	cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
	nr_seq_contrato_w		bigint;
	ie_tipo_contrato_w		varchar(10);
	ie_preco_w			pls_plano.ie_preco%type;
	ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
	qt_repasse_pp_w			bigint;
	------------------------------------------------------------------------------------------------------------

	qt_benef_pf_co_loc_w		ptu_mov_benef_contagem.qt_benef_pf_co_loc%type	:= 0;
	qt_benef_pf_pp_loc_w		ptu_mov_benef_contagem.qt_benef_pf_pp_loc%type	:= 0;
	qt_benef_pj_co_loc_w		ptu_mov_benef_contagem.qt_benef_pj_co_loc%type	:= 0;
	qt_benef_pj_pp_loc_w		ptu_mov_benef_contagem.qt_benef_pj_pp_loc%type	:= 0;
	qt_benef_pf_rep_co_w		ptu_mov_benef_contagem.qt_benef_pf_rep_co%type	:= 0;
	qt_benef_pf_rep_pp_w		ptu_mov_benef_contagem.qt_benef_pf_rep_pp%type	:= 0;
	qt_benef_pj_rep_co_w		ptu_mov_benef_contagem.qt_benef_pj_rep_co%type	:= 0;
	qt_benef_pj_rep_pp_w		ptu_mov_benef_contagem.qt_benef_pj_rep_pp%type	:= 0;
	qt_benef_pf_rec_co_w		ptu_mov_benef_contagem.qt_benef_pf_rec_co%type	:= 0;
	qt_benef_pf_rec_pp_w		ptu_mov_benef_contagem.qt_benef_pf_rec_pp%type	:= 0;
	qt_benef_pj_rec_co_w		ptu_mov_benef_contagem.qt_benef_pj_rec_co%type	:= 0;
	qt_benef_pj_rec_pp_w		ptu_mov_benef_contagem.qt_benef_pj_rec_pp%type	:= 0;
	------------------------------------------------------------------------------------------------------------

	
	contagem_beneficiarios_w contagem_benef_record;
	
	
BEGIN
	
	dt_inicio_w	:= inicio_dia(current_setting('ptu_moviment_benef_a1300_pck.ptu_mov_benef_lote_w')::ptu_mov_benef_lote%rowtype.dt_inicial);
	dt_fim_w	:= fim_dia(current_setting('ptu_moviment_benef_a1300_pck.ptu_mov_benef_lote_w')::ptu_mov_benef_lote%rowtype.dt_final);
	dt_mes_aux_w	:= trunc(current_setting('ptu_moviment_benef_a1300_pck.ptu_mov_benef_lote_w')::ptu_mov_benef_lote%rowtype.dt_final,'Month');
	ds_sql_w	:= ptu_moviment_benef_a1300_pck.obter_sql_cursor('A');
	
	var_cur_w := dbms_sql.open_cursor;
	dbms_sql.parse(var_cur_w, ds_sql_w, 1);
	dbms_sql.bind_variable(var_cur_w, ':dt_fim', dt_fim_w);
	dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', get_cd_estabelecimento);
	
	dbms_sql.define_column(var_cur_w, 1, nr_seq_segurado_w);
	dbms_sql.define_column(var_cur_w, 2, dt_rescisao_w);
	dbms_sql.define_column(var_cur_w, 3, dt_contratacao_w);
	dbms_sql.define_column(var_cur_w, 4, cd_pessoa_fisica_w, 10);
	dbms_sql.define_column(var_cur_w, 5, nr_seq_contrato_w);
	dbms_sql.define_column(var_cur_w, 6, ie_tipo_contrato_w,2);
	dbms_sql.define_column(var_cur_w, 7, ie_preco_w,2);
	dbms_sql.define_column(var_cur_w, 8, ie_tipo_segurado_w,2);
	
	var_exec_w := dbms_sql.execute(var_cur_w);
	
	loop
	var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
	exit when var_retorno_w = 0;
		
		dbms_sql.column_value(var_cur_w, 1, nr_seq_segurado_w);
		dbms_sql.column_value(var_cur_w, 2, dt_rescisao_w);
		dbms_sql.column_value(var_cur_w, 3, dt_contratacao_w);
		dbms_sql.column_value(var_cur_w, 4, cd_pessoa_fisica_w);
		dbms_sql.column_value(var_cur_w, 5, nr_seq_contrato_w);
		dbms_sql.column_value(var_cur_w, 6, ie_tipo_contrato_w);
		dbms_sql.column_value(var_cur_w, 7, ie_preco_w);
		dbms_sql.column_value(var_cur_w, 8, ie_tipo_segurado_w);
		
		dt_rescisao_w		:= trunc(dt_rescisao_w,'Month');
		dt_contratacao_w	:= trunc(dt_contratacao_w,'Month');
		
		if	((dt_rescisao_w > dt_mes_aux_w) or (coalesce(dt_rescisao_w::text, '') = '')) and (dt_contratacao_w <= dt_fim_w) then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado_historico
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	trunc(coalesce(dt_ocorrencia_sib,dt_historico),'month') = dt_mes_aux_w
			and	ie_tipo_historico in ('1','5')  LIMIT 1;
			
			if (qt_registros_w > 0) then
				select	max(z.ie_tipo_historico)
				into STRICT	ie_tipo_historico_w
				from (	SELECT	max(x.nr_sequencia) nr_seq_historico,
							trunc(coalesce(x.dt_ocorrencia_sib,x.dt_historico),'month') dt_ocorrencia_sib,
							x.nr_seq_segurado
						from   pls_segurado_historico x
						where  x.ie_tipo_historico in ('1','2','5')
						group by x.nr_seq_segurado, trunc(coalesce(x.dt_ocorrencia_sib,x.dt_historico),'month')) b,
						pls_segurado_historico z
				where	z.nr_sequencia = b.nr_seq_historico
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	trunc(coalesce(z.dt_ocorrencia_sib,z.dt_historico),'month') = dt_mes_aux_w;
				
				if (ie_tipo_historico_w <> '2') then
					goto final;
				end if;
			end if;
			
			select	max(dt_historico)
			into STRICT	dt_ultimo_hist_inativo_w
			from	pls_segurado_historico
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	trunc(coalesce(dt_ocorrencia_sib,dt_historico),'month') <= dt_mes_aux_w
			and	ie_tipo_historico in ('1','5');
			
			if (dt_ultimo_hist_inativo_w IS NOT NULL AND dt_ultimo_hist_inativo_w::text <> '') then
				select	max(dt_historico)
				into STRICT	dt_ultimo_hist_reativacao_w
				from	pls_segurado_historico
				where	nr_seq_segurado	= nr_seq_segurado_w
				and	trunc(coalesce(dt_ocorrencia_sib,dt_historico),'month') <= dt_mes_aux_w
				and	ie_tipo_historico = '2';
				
				if	((dt_ultimo_hist_inativo_w > dt_ultimo_hist_reativacao_w) or (coalesce(dt_ultimo_hist_reativacao_w::text, '') = '')) then
					goto final;
				end if;
			end if;
			
			--Alterar a formacao de preco quando o usuario e de repasse

			if (ie_tipo_segurado_w = 'R') then
				select	count(1)
				into STRICT	qt_repasse_pp_w
				from	pls_segurado_repasse
				where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	nr_seq_segurado = nr_seq_segurado_w
				and	ie_tipo_repasse = 'P'
				and	dt_mes_aux_w between coalesce(dt_repasse, dt_inicio_w) and coalesce(dt_fim_repasse, dt_fim_w);
				
				if (qt_repasse_pp_w > 0) then
					ie_preco_w	:= '1';
				else
					ie_preco_w	:= '2';
				end if;
			end if;
			
			contagem_beneficiarios_w.ie_tipo_segurado(index_w)	:= ie_tipo_segurado_w;
			contagem_beneficiarios_w.ie_tipo_contrato(index_w)	:= ie_tipo_contrato_w;
			contagem_beneficiarios_w.ie_preco(index_w)		:= ie_preco_w;
			
			index_w	:= index_w + 1;
			
			<<final>>
			nr_seq_segurado_w	:= nr_seq_segurado_w;
		end if;
	end loop;
	dbms_sql.close_cursor(var_cur_w);
	
	if (contagem_beneficiarios_w.ie_preco.count > 0) then
		for i in contagem_beneficiarios_w.ie_preco.first..contagem_beneficiarios_w.ie_preco.count loop
			begin
			
			--Bloco dos contratos PF

			if (contagem_beneficiarios_w.ie_tipo_contrato(i) = 'PF') then
				--Bloco dos beneficiarios de plano de saude

				if (contagem_beneficiarios_w.ie_tipo_segurado(i) = 'B') then
					--Bloco dos beneficiarios de pre-pagamento

					if (contagem_beneficiarios_w.ie_preco(i) = '1') then
						qt_benef_pf_pp_loc_w	:= qt_benef_pf_pp_loc_w + 1;
					--Bloco dos beneficiarios de custo

					else
						qt_benef_pf_co_loc_w	:= qt_benef_pf_co_loc_w + 1;
					end if;
				--Bloco dos beneficiarios de repasse

				elsif (contagem_beneficiarios_w.ie_tipo_segurado(i) = 'R') then
					--Bloco dos beneficiarios de pre-pagamento

					if (contagem_beneficiarios_w.ie_preco(i) = '1') then
						qt_benef_pf_rep_pp_w	:= qt_benef_pf_rep_pp_w + 1;
					--Bloco dos beneficiarios de custo

					else
						qt_benef_pf_rep_co_w	:= qt_benef_pf_rep_co_w + 1;
					end if;
				end if;
			--Bloco dos contratos PJ

			elsif (contagem_beneficiarios_w.ie_tipo_contrato(i) = 'PJ') then
				--Bloco dos beneficiarios de plano de saude

				if (contagem_beneficiarios_w.ie_tipo_segurado(i) = 'B') then
					--Bloco dos beneficiarios de pre-pagamento

					if (contagem_beneficiarios_w.ie_preco(i) = '1') then
						qt_benef_pj_pp_loc_w	:= qt_benef_pj_pp_loc_w + 1;
					--Bloco dos beneficiarios de custo

					else
						qt_benef_pj_co_loc_w	:= qt_benef_pj_co_loc_w + 1;
					end if;
				--Bloco dos beneficiarios de repasse

				elsif (contagem_beneficiarios_w.ie_tipo_segurado(i) = 'R') then
					--Bloco dos beneficiarios de pre-pagamento

					if (contagem_beneficiarios_w.ie_preco(i) = '1') then
						qt_benef_pj_rep_pp_w	:= qt_benef_pj_rep_pp_w + 1;
					--Bloco dos beneficiarios de custo

					else
						qt_benef_pj_rep_co_w	:= qt_benef_pj_rep_co_w + 1;
					end if;
				end if;
			end if;
			
			end;
		end loop;
	end if;
	
	select	count(1)
	into STRICT	qt_benef_pj_rec_co_w
	from	pls_segurado		b,
		pls_intercambio		a
	where	b.nr_seq_intercambio	= a.nr_sequencia
	and	a.ie_tipo_contrato	in ('F','I')
	and	b.ie_tipo_repasse	= 'C'
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')
	and	((coalesce(b.dt_rescisao::text, '') = '') or (b.dt_rescisao > dt_fim_w))
	and	b.ie_tipo_segurado not in ('H','I');
	
	select	count(1)
	into STRICT	qt_benef_pj_rec_pp_w
	from	pls_segurado		b,
		pls_intercambio		a
	where	b.nr_seq_intercambio	= a.nr_sequencia
	and	a.ie_tipo_contrato	in ('F','I')
	and	b.ie_tipo_repasse	= 'P'
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')
	and	((coalesce(b.dt_rescisao::text, '') = '') or (b.dt_rescisao > dt_fim_w));
	
	insert into ptu_mov_benef_contagem(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			qt_benef_pf_co_loc,qt_benef_pf_pp_loc,qt_benef_pj_co_loc,qt_benef_pj_pp_loc,qt_benef_pf_rep_co,
			qt_benef_pf_rep_pp,qt_benef_pj_rep_co,qt_benef_pj_rep_pp,qt_benef_pf_rec_co,qt_benef_pf_rec_pp,
			qt_benef_pj_rec_co,qt_benef_pj_rec_pp,dt_mes_referencia,nr_seq_lote)
	values (	nextval('ptu_mov_benef_contagem_seq'),clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
			qt_benef_pf_co_loc_w,qt_benef_pf_pp_loc_w,qt_benef_pj_co_loc_w,qt_benef_pj_pp_loc_w,qt_benef_pf_rep_co_w,
			qt_benef_pf_rep_pp_w,qt_benef_pj_rep_co_w,qt_benef_pj_rep_pp_w,qt_benef_pf_rec_co_w,qt_benef_pf_rec_pp_w,
			qt_benef_pj_rec_co_w,qt_benef_pj_rec_pp_w,dt_fim_w,nr_seq_lote_p);
	
	contagem_beneficiarios_w.ie_tipo_segurado.delete;
	contagem_beneficiarios_w.ie_preco.delete;
	contagem_beneficiarios_w.ie_tipo_contrato.delete;
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_moviment_benef_a1300_pck.gerar_contagem_beneficiarios (nr_seq_lote_p bigint) FROM PUBLIC;
