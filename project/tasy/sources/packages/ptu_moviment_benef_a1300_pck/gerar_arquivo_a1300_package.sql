-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE unimeds_destinos_record AS (	nr_seq_ptu_mov_dest	ptu_mov_benef_destino.nr_sequencia%type,
							cd_unimed_destino	ptu_mov_benef_destino.cd_unimed_destino%type);


CREATE OR REPLACE PROCEDURE ptu_moviment_benef_a1300_pck.gerar_arquivo_a1300 ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

	
	arq_texto_w			utl_file.file_type;
	ds_local_w			varchar(255) := null;
	ds_erro_w			varchar(255);
	nm_arquivo_w			varchar(255);
	index_w				integer	:= 0;
	nr_mov_dia_w			integer	:= 1;
	type unimeds_destinos_v is table of unimeds_destinos_record index by integer;
	unimeds_destinos_w		unimeds_destinos_v;
	
	c01 CURSOR FOR
		SELECT	nr_sequencia,
			cd_unimed_destino
		from	ptu_mov_benef_destino
		where	nr_seq_lote	= nr_seq_lote_p;
	
	
BEGIN
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_reduzir_r311_w', 0, false);
	CALL CALL CALL CALL CALL CALL CALL CALL ptu_moviment_benef_a1300_pck.set_nm_usuario(nm_usuario_p);
	CALL CALL CALL CALL CALL CALL CALL CALL CALL ptu_moviment_benef_a1300_pck.set_cd_estabelecimento(cd_estabelecimento_p);
	
	for r_c01_w in C01 loop
		begin
		index_w	:= C01%rowCount;
		unimeds_destinos_w[index_w].nr_seq_ptu_mov_dest	:= r_c01_w.nr_sequencia;
		unimeds_destinos_w[index_w].cd_unimed_destino	:= r_c01_w.cd_unimed_destino;
		end;
	end loop;
	
	if (unimeds_destinos_w.count = 0) then
		ds_erro_p  := wheb_mensagem_pck.get_texto(11078240); --Favor inserir alguma Unimed para o envio do A1300!
		goto error;
	end if;
	
	begin
	obter_evento_utl_file(9, null, ds_local_w, ds_erro_w);
	exception
	when others then
		ds_local_w := null;
	end;
	
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		ds_erro_p	:= ds_erro_w;
		goto error;
	end if;
	
	for i in 1..unimeds_destinos_w.count loop
		begin
		
		select	count(1)
		into STRICT	nr_mov_dia_w
		from	ptu_mov_benef_destino
		where	cd_unimed_destino = unimeds_destinos_w[i].cd_unimed_destino
		and	nr_seq_lote = nr_seq_lote_p
		and	(dt_geracao_arquivo IS NOT NULL AND dt_geracao_arquivo::text <> '');
		
		nr_mov_dia_w := nr_mov_dia_w + 1;
		nm_arquivo_w	:= 'CN'||to_char(clock_timestamp(),'ddmmyy')||nr_mov_dia_w||'.'|| substr(lpad(pls_obter_cd_cooperativa(get_cd_estabelecimento),4,0),2, 3);
		
		begin
		arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'w');
		exception
		when others then
			if (SQLSTATE = -29289) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107804); --O acesso ao arquivo foi negado pelo sistema operacional (access_denied).
			elsif (SQLSTATE = -29298) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107803); --O arquivo foi aberto usando FOPEN_NCHAR,  mas efetuaram-se operacoes de I/O usando funcoes nonchar comos PUTF ou GET_LINE (charsetmismatch).
			elsif (SQLSTATE = -29291) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107802); --Nao foi possivel apagar o arquivo (delete_failed).
			elsif (SQLSTATE = -29286) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107801); --Erro interno desconhecido no package UTL_FILE (internal_error).
			elsif (SQLSTATE = -29282) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107800); --O handle do arquivo nao existe (invalid_filehandle).
			elsif (SQLSTATE = -29288) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107799); --O arquivo com o nome especificado nao foi encontrado neste local (invalid_filename).
			elsif (SQLSTATE = -29287) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107798); --O valor de MAX_LINESIZE para FOPEN() e invalido; deveria estar na faixa de 1 a 32767 (invalid_maxlinesize).
			elsif (SQLSTATE = -29281) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107797); --O parametro open_mode na chamda FOPEN e invalido (invalid_mode).
			elsif (SQLSTATE = -29290) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107796); --O parametro ABSOLUTE_OFFSET para a chamada FSEEK() e invalido; deveria ser maior do que 0 e menor do que o numero total de bytes do arquivo (invalid_offset).
			elsif (SQLSTATE = -29283) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107795); --O arquivo nao pode ser aberto ou operado da forma desejada - ou o caminho nao foi encontrado (invalid_operation).
			elsif (SQLSTATE = -29280) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107794); --O caminho especificado nao existe ou nao esta visivel ao Oracle (invalid_path).
			elsif (SQLSTATE = -29284) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107793); --Nao e possivel efetuar a leitura do arquivo (read_error).
			elsif (SQLSTATE = -29292) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107792); --Nao e possivel renomear o arquivo.
			elsif (SQLSTATE = -29285) then
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107791); --Nao foi possivel gravar no arquivo (write_error).
			else
				ds_erro_p  := wheb_mensagem_pck.get_texto(1107790); --Erro desconhecido no package UTL_FILE.
			end if;
			goto error;
		end;
		
		CALL CALL CALL CALL CALL ptu_moviment_benef_a1300_pck.processar_arquivo(nr_seq_lote_p,unimeds_destinos_w[i].cd_unimed_destino,arq_texto_w);
		
		update	ptu_mov_benef_destino
		set	nm_arquivo		= nm_arquivo_w,
			dt_geracao_arquivo	= clock_timestamp(),
			nm_usuario		= get_nm_usuario,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= unimeds_destinos_w[i].nr_seq_ptu_mov_dest;
		
		end;
	end loop;
	
	<<error>>
	ds_erro_w  := '';
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_moviment_benef_a1300_pck.gerar_arquivo_a1300 ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;
