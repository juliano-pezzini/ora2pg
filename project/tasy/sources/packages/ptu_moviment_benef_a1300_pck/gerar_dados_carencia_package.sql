-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE ptu_mov_carencia_record AS (	nr_seq_mov_seg_plano	dbms_sql.number_table,
							tp_cobertura		dbms_sql.varchar2_table,
							dt_fim_carencia		dbms_sql.date_table);


CREATE OR REPLACE PROCEDURE ptu_moviment_benef_a1300_pck.gerar_dados_carencia ( dados_plano_benef_w dados_plano_benef_record, dt_inicio_p timestamp) AS $body$
DECLARE


	ptu_mov_carencia_w		ptu_mov_carencia_record;
	index_w				integer := 1;
	ie_alteracao_abragencia_w 	varchar(1);
	nr_seq_plano_atual_w		pls_plano.nr_sequencia%type;
	nr_seq_segurado_ant_w		pls_segurado.nr_seq_segurado_ant%type;
	ie_abrangencia_ant_w		pls_plano.ie_abrangencia%type;
	ie_abrangencia_atual_w		pls_plano.ie_abrangencia%type;
	dt_contratacao_w		pls_segurado_alt_plano.dt_alteracao%type;
	
	C01 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
			nr_seq_plano_pc		pls_plano.nr_sequencia%type,
			ie_alteracao_abragencia_pc text) FOR
		SELECT	cd_ptu,
			max(dt_carencia) dt_carencia
		from (	SELECT	b.cd_ptu,
				CASE WHEN ie_alteracao_abragencia_pc='S' THEN  dt_contratacao_w+coalesce(qt_dias_fora_abrang_ant,qt_dias)  ELSE to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,c.dt_inclusao_operadora)+a.qt_dias)) END  dt_carencia
			from	pls_carencia		a,
				pls_tipo_carencia	b,
				pls_segurado		c
			where	a.nr_seq_tipo_carencia	= b.nr_sequencia
			and	a.nr_seq_segurado	= c.nr_sequencia
			and	c.nr_sequencia		= nr_seq_segurado_pc
			and	a.ie_origem_carencia_benef	<> 'S'
			and	b.ie_cpt	= 'N'
			and	(b.cd_ptu IS NOT NULL AND b.cd_ptu::text <> '')
			
union all

			select	b.cd_ptu,
				to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,c.dt_inclusao_operadora)+a.qt_dias)) dt_carencia
			from	pls_carencia		a,
				pls_tipo_carencia	b,
				pls_segurado		c,
				pls_contrato		d
			where	a.nr_seq_tipo_carencia	= b.nr_sequencia
			and	a.nr_seq_contrato	= d.nr_sequencia
			and	c.nr_seq_contrato	= d.nr_sequencia
			and	c.nr_sequencia		= nr_seq_segurado_pc
			and	((a.nr_seq_plano_contrato	= nr_seq_plano_pc) or (coalesce(a.nr_seq_plano_contrato::text, '') = ''))
			and	b.ie_cpt	= 'N'
			and	(b.cd_ptu IS NOT NULL AND b.cd_ptu::text <> '')
			and	not exists (	select	1
						from	pls_carencia x
						where	x.nr_seq_segurado	= c.nr_sequencia
						and	x.ie_origem_carencia_benef <> 'S'
						and	x.ie_cpt = 'N')
			
union all

			select	b.cd_ptu,
				to_date(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,c.dt_inclusao_operadora)+a.qt_dias)) dt_carencia
			from	pls_carencia		a,
				pls_tipo_carencia	b,
				pls_segurado		c,
				pls_plano		d
			where	a.nr_seq_tipo_carencia	= b.nr_sequencia
			and	a.nr_seq_plano		= d.nr_sequencia
			and	c.nr_seq_plano		= d.nr_sequencia
			and	c.nr_sequencia		= nr_seq_segurado_pc
			and	b.ie_cpt	= 'N'
			and	(b.cd_ptu IS NOT NULL AND b.cd_ptu::text <> '')
			and	not exists (	select	1
						from	pls_carencia x
						where	x.nr_seq_segurado	= c.nr_sequencia
						and	x.ie_origem_carencia_benef <> 'S'
						and	x.ie_cpt = 'N')
			and	not exists (	select	1
						from	pls_carencia x
						where	x.nr_seq_contrato	= c.nr_seq_contrato)) alias22
		group by cd_ptu;

	
BEGIN

	for i in dados_plano_benef_w.nr_seq_segurado.first..dados_plano_benef_w.nr_seq_segurado.count loop
		begin
		
		ie_alteracao_abragencia_w	:= 'N';
		
		select	a.ie_abrangencia,
			a.nr_sequencia,
			b.nr_seq_segurado_ant,
			b.dt_contratacao
		into STRICT	ie_abrangencia_atual_w,
			nr_seq_plano_atual_w,
			nr_seq_segurado_ant_w,
			dt_contratacao_w
		from	pls_segurado	b,
			pls_plano	a
		where	b.nr_seq_plano	= a.nr_sequencia
		and	b.nr_sequencia	= dados_plano_benef_w.nr_seq_segurado(i);
		
		select	max(b.ie_abrangencia),
			coalesce(max(a.dt_alteracao), dt_contratacao_w)
		into STRICT	ie_abrangencia_ant_w,
			dt_contratacao_w
		from	pls_segurado_alt_plano a,
			pls_plano b
		where	b.nr_sequencia		= a.nr_seq_plano_ant
		and	a.nr_seq_segurado	= dados_plano_benef_w.nr_seq_segurado(i)
		and	a.nr_seq_plano_atual	= nr_seq_plano_atual_w
		and	a.ie_situacao		= 'A';
		
		if	((coalesce(ie_abrangencia_ant_w::text, '') = '') and (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '')) then
			select	max(a.ie_abrangencia)
			into STRICT	ie_abrangencia_ant_w
			from	pls_segurado	b,
				pls_plano	a
			where	b.nr_seq_plano	= a.nr_sequencia
			and	b.nr_sequencia	= nr_seq_segurado_ant_w;
		end if;
		
		if	(ie_abrangencia_ant_w IS NOT NULL AND ie_abrangencia_ant_w::text <> '' AND dt_contratacao_w IS NOT NULL AND dt_contratacao_w::text <> '') then
			if	((ie_abrangencia_ant_w = 'E') and (ie_abrangencia_atual_w = 'N') or
				((ie_abrangencia_ant_w = 'GM') and (ie_abrangencia_atual_w = 'E') or
				((ie_abrangencia_ant_w = 'GM') and (ie_abrangencia_atual_w = 'N') or
				((ie_abrangencia_ant_w = 'M') and (ie_abrangencia_atual_w = 'E') or
				(ie_abrangencia_ant_w = 'M' AND ie_abrangencia_atual_w = 'N'))))) then
				ie_alteracao_abragencia_w	:= 'S';
			end if;
		end if;
		
		for r_c01_w in C01(dados_plano_benef_w.nr_seq_segurado(i), dados_plano_benef_w.nr_seq_plano(i), ie_alteracao_abragencia_w) loop
			begin
			if (r_c01_w.dt_carencia >= dt_inicio_p) then
				ptu_mov_carencia_w.nr_seq_mov_seg_plano(index_w)	:= dados_plano_benef_w.nr_seq_mov_seg_plano(i);
				ptu_mov_carencia_w.tp_cobertura(index_w)		:= r_c01_w.cd_ptu;
				ptu_mov_carencia_w.dt_fim_carencia(index_w)		:= r_c01_w.dt_carencia;
				index_w	:= index_w + 1;
			end if;
			end;
		end loop;
		
		end;
	end loop;
	
	forall i in ptu_mov_carencia_w.nr_seq_mov_seg_plano.first .. ptu_mov_carencia_w.nr_seq_mov_seg_plano.last
		insert into ptu_mov_benef_seg_carencia(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_mov_seg_plano,cd_tipo_cobertura,dt_fim_carencia)
		values (	nextval('ptu_mov_benef_seg_carencia_seq'),clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
				ptu_mov_carencia_w.nr_seq_mov_seg_plano(i),ptu_mov_carencia_w.tp_cobertura(i),ptu_mov_carencia_w.dt_fim_carencia(i));	
	
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r310_w', current_setting('ptu_moviment_benef_a1300_pck.qt_total_r310_w')::ptu_mov_benef_trailer.qt_total_r310%type + ptu_mov_carencia_w.nr_seq_mov_seg_plano.count, false);	
	ptu_mov_carencia_w := null;
	
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_moviment_benef_a1300_pck.gerar_dados_carencia ( dados_plano_benef_w dados_plano_benef_record, dt_inicio_p timestamp) FROM PUBLIC;
