-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_moviment_benef_a1300_pck.gerar_dados_plano_benef ( pls_segurado_w pls_segurado_w_record, cd_unimed_p text, dt_inicio_p timestamp) AS $body$
DECLARE

	
	dados_plano_benef_w		dados_plano_benef_record;
	nr_seq_motivo_exclusao_w	bigint;
	cd_cgc_estipulante_w		pls_contrato.cd_cgc_estipulante%type;
	qt_registros_w			bigint;
	ds_razao_social_w		varchar(255);
	
	
BEGIN
	
	for i in pls_segurado_w.nr_seq_segurado.first..pls_segurado_w.nr_seq_segurado.count loop
		dados_plano_benef_w.nr_seq_mov_benef_seg(i)	:= pls_segurado_w.nr_seq_mov_benef_seg(i);
		dados_plano_benef_w.nr_seq_segurado(i)		:= pls_segurado_w.nr_seq_segurado(i);
		
		select	b.dt_contratacao,
			b.dt_rescisao,
			substr(a.ds_plano,1,60),
			CASE WHEN a.ie_abrangencia='N' THEN 1 WHEN a.ie_abrangencia='GE' THEN 2 WHEN a.ie_abrangencia='E' THEN 3 WHEN a.ie_abrangencia='GM' THEN 4 WHEN a.ie_abrangencia='M' THEN 5  ELSE 0 END ,
			CASE WHEN a.ie_tipo_contratacao='I' THEN 2 WHEN a.ie_tipo_contratacao='CE' THEN 3 WHEN a.ie_tipo_contratacao='CA' THEN 4 WHEN a.ie_tipo_contratacao='I' THEN 5 END ,
			CASE WHEN a.ie_acomodacao='I' THEN 'B' WHEN a.ie_acomodacao='C' THEN 'A'  ELSE 'C' END ,
			CASE WHEN a.ie_regulamentacao='R' THEN 2 WHEN a.ie_regulamentacao='A' THEN 1 WHEN a.ie_regulamentacao='P' THEN 1 END ,
			CASE WHEN a.ie_regulamentacao='P' THEN a.nr_protocolo_ans  ELSE coalesce(c.cd_scpa,a.cd_scpa) END ,
			a.ie_segmentacao,
			a.cd_rede_refer_ptu,
			d.nr_via_solicitacao,
			d.dt_validade_carteira,
			CASE WHEN a.ie_preco='1' THEN 'P'  ELSE 'C' END ,
			b.nr_seq_motivo_cancelamento,
			a.nr_sequencia,
			c.cd_cgc_estipulante,
			b.cd_pessoa_fisica,
			c.nr_contrato,
			b.dt_contratacao,
			c.cd_cgc_administradora
		into STRICT	dados_plano_benef_w.dt_inclusao(i),
			dados_plano_benef_w.dt_exclusao(i),
			dados_plano_benef_w.ds_plano_origem(i),
			dados_plano_benef_w.ie_abrangencia(i),
			dados_plano_benef_w.ie_natureza(i),
			dados_plano_benef_w.ie_acomodacao(i),
			dados_plano_benef_w.ie_plano(i),
			dados_plano_benef_w.cd_prod_ans(i),
			dados_plano_benef_w.ie_segmentacao(i),
			dados_plano_benef_w.cd_rede(i),
			dados_plano_benef_w.nr_via_solicitacao(i),
			dados_plano_benef_w.dt_validade_carteira(i),
			dados_plano_benef_w.ie_repasse(i),
			nr_seq_motivo_exclusao_w,
			dados_plano_benef_w.nr_seq_plano(i),
			cd_cgc_estipulante_w,
			dados_plano_benef_w.cd_pessoa_fisica(i),
			dados_plano_benef_w.nr_contrato(i),
			dados_plano_benef_w.dt_contr_plano(i),
			dados_plano_benef_w.cd_cgc_administradora(i)
		from	pls_segurado_carteira	d,
			pls_contrato		c,
			pls_segurado		b,
			pls_plano		a
		where	d.nr_seq_segurado	= b.nr_sequencia
		and	b.nr_seq_contrato	= c.nr_sequencia
		and	b.nr_seq_plano		= a.nr_sequencia
		and	b.nr_sequencia		= pls_segurado_w.nr_seq_segurado(i)  LIMIT 1;
		
		if (coalesce(dados_plano_benef_w.cd_rede(i)::text, '') = '') then
			dados_plano_benef_w.cd_rede(i)	:= substr(pls_obter_rede_ref_produto(dados_plano_benef_w.nr_seq_plano(i), get_cd_estabelecimento, 'C'),1,255);
		end if;
		
		dados_plano_benef_w.ds_razao_social(i)		:= '';
		
		if (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') then
			ds_razao_social_w	:= obter_nome_pf_pj('',cd_cgc_estipulante_w);
			
			if (length(ds_razao_social_w) > 40) then
				dados_plano_benef_w.ds_razao_social(i)	:= substr(pls_gerar_nome_abreviado(ds_razao_social_w), 1, 40);
			else
				dados_plano_benef_w.ds_razao_social(i)	:= ds_razao_social_w;
			end if;
		end if;
		
		dados_plano_benef_w.ds_rede(i)	:= substr(ptu_obter_desc_rede_ref(dados_plano_benef_w.cd_rede(i)),1,255);
		
		select	max(cd_tipo_logradouro)
		into STRICT	dados_plano_benef_w.cd_tipo_logradouro(i)
		from	ptu_mov_benef_pf_compl
		where	nr_seq_mov_pessoa	= pls_segurado_w.nr_seq_mov_benef_pf(i);
		
		if (nr_seq_motivo_exclusao_w IS NOT NULL AND nr_seq_motivo_exclusao_w::text <> '') then
			select	max(cd_intercambio)
			into STRICT	dados_plano_benef_w.cd_motivo_exclusao(i)
			from	pls_motivo_cancelamento
			where	nr_sequencia	= nr_seq_motivo_exclusao_w;
		else
			dados_plano_benef_w.cd_motivo_exclusao(i)	:= '';
		end if;
		
		dados_plano_benef_w.dt_fim_carencia(i)	:= null;
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_carencia
		where	nr_seq_segurado	= pls_segurado_w.nr_seq_segurado(i)
		and	ie_cpt		= 'S'  LIMIT 1;
		
		if (qt_registros_w > 0) then
			select	max(pls_segurado_w.dt_inclusao(i)+ qt_dias)
			into STRICT	dados_plano_benef_w.dt_fim_carencia(i)
			from	pls_carencia
			where	nr_seq_segurado	= pls_segurado_w.nr_seq_segurado(i)
			and	ie_cpt		= 'S';
		end if;
		
		if ((dados_plano_benef_w.dt_fim_carencia(i) IS NOT NULL AND (dados_plano_benef_w.dt_fim_carencia(i))::text <> '')) then
			dados_plano_benef_w.ie_carencia_temp(i)	:= 'S';
		else
			dados_plano_benef_w.ie_carencia_temp(i)	:= 'N';
		end if;
		
		dados_plano_benef_w.cd_local_atendimento(i)	:= cd_unimed_p;
		
	end loop;
	
	for i in dados_plano_benef_w.nr_seq_plano.first..dados_plano_benef_w.nr_seq_plano.count loop
		begin
		
		dados_plano_benef_w.ds_plano_origem(i)		:= ptu_somente_caracter_permitido(dados_plano_benef_w.ds_plano_origem(i),'ANS');
		dados_plano_benef_w.ds_rede(i)			:= ptu_somente_caracter_permitido(dados_plano_benef_w.ds_rede(i),'ANS');
		dados_plano_benef_w.ds_razao_social(i)		:= ptu_somente_caracter_permitido(dados_plano_benef_w.ds_razao_social(i),'ANS');
		dados_plano_benef_w.nr_contrato(i)		:= ptu_somente_caracter_permitido(dados_plano_benef_w.nr_contrato(i),'ANS');
		
		if (coalesce(dados_plano_benef_w.cd_rede(i)::text, '') = '') then
			CALL ptu_moviment_benef_a1300_pck.gravar_log_inco_vetor(	null,null,dados_plano_benef_w.nr_seq_mov_benef_seg(i),dados_plano_benef_w.cd_pessoa_fisica(i),dados_plano_benef_w.nr_seq_segurado(i),
						wheb_mensagem_pck.get_texto(1107807)/*Falta a informacao do codigo de rede do produto do beneficiario*/
);
		end if;
		
		if (coalesce(dados_plano_benef_w.dt_validade_carteira(i)::text, '') = '') then
			CALL ptu_moviment_benef_a1300_pck.gravar_log_inco_vetor(	null,null,dados_plano_benef_w.nr_seq_mov_benef_seg(i),dados_plano_benef_w.cd_pessoa_fisica(i),dados_plano_benef_w.nr_seq_segurado(i),
						wheb_mensagem_pck.get_texto(1107808)/*Falta a informacao da validade da carteira do beneficiario*/
);
		end if;
		
		IF ((dados_plano_benef_w.DT_EXCLUSAO(i) IS NOT NULL AND (dados_plano_benef_w.DT_EXCLUSAO(i))::text <> '')) and (coalesce(dados_plano_benef_w.cd_motivo_exclusao(i)::text, '') = '') then
			CALL ptu_moviment_benef_a1300_pck.gravar_log_inco_vetor(	null,null,dados_plano_benef_w.nr_seq_mov_benef_seg(i),dados_plano_benef_w.cd_pessoa_fisica(i),dados_plano_benef_w.nr_seq_segurado(i),
						wheb_mensagem_pck.get_texto(1107809)/*Falta a informacao do motivo de cancelamento (codigo intercambio) do beneficiario*/
);
		end if;
		
		end;
	end loop;
	
	forall i in dados_plano_benef_w.nr_seq_mov_benef_seg.first .. dados_plano_benef_w.nr_seq_mov_benef_seg.last
		insert into ptu_mov_benef_seg_plano(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				ds_razao_social,dt_inclusao,dt_exclusao,
				ds_plano_origem,ie_abrangencia,ie_natureza,
				ie_acomodacao,ie_plano,cd_prod_ans,
				ie_segmentacao,cd_rede,ds_rede,
				nr_via_solicitacao,dt_validade_carteira,cd_local_atendimento,
				ie_carencia_temp,dt_fim_carencia,ie_repasse,
				cd_tipo_logradouro,cd_motivo_exclusao,NR_SEQ_MOV_SEGURADO,
				nr_contrato,dt_contr_plano,cd_cgc_administradora)
		values (	nextval('ptu_mov_benef_seg_plano_seq'),clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
				dados_plano_benef_w.ds_razao_social(i),dados_plano_benef_w.dt_inclusao(i),dados_plano_benef_w.dt_exclusao(i),
				dados_plano_benef_w.ds_plano_origem(i),dados_plano_benef_w.ie_abrangencia(i),dados_plano_benef_w.ie_natureza(i),
				dados_plano_benef_w.ie_acomodacao(i),dados_plano_benef_w.ie_plano(i),dados_plano_benef_w.cd_prod_ans(i),
				dados_plano_benef_w.ie_segmentacao(i),dados_plano_benef_w.cd_rede(i),dados_plano_benef_w.ds_rede(i),
				dados_plano_benef_w.nr_via_solicitacao(i),dados_plano_benef_w.dt_validade_carteira(i),dados_plano_benef_w.cd_local_atendimento(i),
				dados_plano_benef_w.ie_carencia_temp(i),dados_plano_benef_w.dt_fim_carencia(i),dados_plano_benef_w.ie_repasse(i),
				dados_plano_benef_w.cd_tipo_logradouro(i),dados_plano_benef_w.cd_motivo_exclusao(i),dados_plano_benef_w.nr_seq_mov_benef_seg(i),
				dados_plano_benef_w.nr_contrato(i),dados_plano_benef_w.dt_contr_plano(i), dados_plano_benef_w.cd_cgc_administradora(i))
		returning nr_sequencia bulk collect into dados_plano_benef_w.NR_SEQ_MOV_SEG_PLANO;
	
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r308_w', current_setting('ptu_moviment_benef_a1300_pck.qt_total_r308_w')::ptu_mov_benef_trailer.qt_total_r308%type + dados_plano_benef_w.nr_seq_mov_benef_seg.count, false);
	
	CALL ptu_moviment_benef_a1300_pck.gerar_dados_abrangencia(dados_plano_benef_w);
	CALL ptu_moviment_benef_a1300_pck.gerar_dados_carencia(dados_plano_benef_w,dt_inicio_p);
	
	dados_plano_benef_w.ds_razao_social.delete;
	dados_plano_benef_w.dt_inclusao.delete;
	dados_plano_benef_w.dt_exclusao.delete;
	dados_plano_benef_w.ds_plano_origem.delete;
	dados_plano_benef_w.ie_abrangencia.delete;
	dados_plano_benef_w.ie_natureza.delete;
	dados_plano_benef_w.ie_acomodacao.delete;
	dados_plano_benef_w.ie_plano.delete;
	dados_plano_benef_w.cd_prod_ans.delete;
	dados_plano_benef_w.ie_segmentacao.delete;
	dados_plano_benef_w.cd_rede.delete;
	dados_plano_benef_w.ds_rede.delete;
	dados_plano_benef_w.nr_via_solicitacao.delete;
	dados_plano_benef_w.dt_validade_carteira.delete;
	dados_plano_benef_w.cd_local_atendimento.delete;
	dados_plano_benef_w.ie_carencia_temp.delete;
	dados_plano_benef_w.dt_fim_carencia.delete;
	dados_plano_benef_w.ie_repasse.delete;
	dados_plano_benef_w.cd_tipo_logradouro.delete;
	dados_plano_benef_w.cd_motivo_exclusao.delete;
	dados_plano_benef_w.nr_seq_mov_benef_seg.delete;
	dados_plano_benef_w.nr_contrato.delete;
	dados_plano_benef_w.dt_contr_plano.delete;
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_moviment_benef_a1300_pck.gerar_dados_plano_benef ( pls_segurado_w pls_segurado_w_record, cd_unimed_p text, dt_inicio_p timestamp) FROM PUBLIC;
