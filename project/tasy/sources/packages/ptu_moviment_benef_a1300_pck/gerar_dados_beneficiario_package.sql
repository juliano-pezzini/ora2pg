-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_moviment_benef_a1300_pck.gerar_dados_beneficiario ( nr_seq_lote_p bigint, pessoa_fisica_w pessoa_fisica_w_record, nr_seq_contrato_p bigint, dt_inicio_p timestamp) AS $body$
DECLARE

	
	cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
	pls_segurado_w			pls_segurado_w_record;
	index_w				integer := 0;
	nr_seq_parentesco_w		pls_segurado.nr_seq_parentesco%type;
	nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
	cd_unimed_w			varchar(10);
	nr_seq_motivo_cancelamento_w	varchar(10);
	cd_motivo_exclusao_w		varchar(10);
	
	C01 CURSOR FOR
		SELECT	a.nr_seq_segurado
		from (SELECT	nr_seq_segurado
			from	w_ptu_mov_benef
			where	nr_seq_lote		= nr_seq_lote_p
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	ie_tipo_contrato = 'PF'
			and	ie_tipo_mov_cadastral	<> 'E'
			and	coalesce(nr_seq_contrato_p::text, '') = ''
			
union all

			select	nr_seq_segurado
			from	w_ptu_mov_benef
			where	nr_seq_lote		= nr_seq_lote_p
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_seq_contrato		= nr_seq_contrato_p
			and	ie_tipo_contrato	= 'PJ'
			and	ie_tipo_mov_cadastral	<> 'E'
			and	(nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '')
			
union all

			select	nr_seq_segurado
			from	w_ptu_mov_benef
			where	nr_seq_lote		= nr_seq_lote_p
			and	cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	nr_seq_contrato		= nr_seq_contrato_p
			and	ie_tipo_contrato	= 'PF'
			and	ie_empresario_individual = 'S'
			and	ie_tipo_mov_cadastral	<> 'E'
			and	(nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '')) a
		group by
			a.nr_seq_segurado;
	
	
BEGIN
	
	cd_unimed_w	:= pls_obter_cd_cooperativa(get_cd_estabelecimento);
	
	if (pessoa_fisica_w.nm_pessoa_fisica.count > 0) then
		for i in pessoa_fisica_w.nm_pessoa_fisica.first ..pessoa_fisica_w.nm_pessoa_fisica.count loop
			cd_pessoa_fisica_w	:= pessoa_fisica_w.cd_pessoa_fisica(i);
			for r_c01_w in C01 loop
				begin
				
				index_w	:= index_w + 1;
				pls_segurado_w.nr_seq_mov_benef_pf(index_w)	:= pessoa_fisica_w.nr_seq_mov_benef_pf(i);
				pls_segurado_w.nr_seq_segurado(index_w)		:= r_c01_w.nr_seq_segurado;
				pls_segurado_w.cd_pessoa_fisica(index_w)	:= pessoa_fisica_w.cd_pessoa_fisica(i);
				
				select	coalesce(a.dt_reativacao,a.dt_inclusao_operadora),
					a.dt_rescisao,
					CASE WHEN coalesce(a.cd_cco::text, '') = '' THEN 'N'  ELSE 'S' END ,
					a.nr_seq_parentesco,
					coalesce(a.nr_seq_titular,a.nr_sequencia),
					substr(cd_usuario_plano,5,13),
					a.ie_tipo_segurado,
					a.nr_seq_motivo_cancelamento
				into STRICT	pls_segurado_w.dt_inclusao(index_w),
					pls_segurado_w.dt_exclusao(index_w),
					pls_segurado_w.ie_consta_sib(index_w),
					nr_seq_parentesco_w,
					nr_seq_titular_w,
					pls_segurado_w.cd_usuario_plano(index_w),
					pls_segurado_w.ie_tipo_segurado(index_w),
					nr_seq_motivo_cancelamento_w
				from	pls_segurado_carteira	b,
					pls_segurado		a
				where	b.nr_seq_segurado	= a.nr_sequencia
				and	a.nr_sequencia		= r_c01_w.nr_seq_segurado  LIMIT 1;
				
				if (nr_seq_motivo_cancelamento_w IS NOT NULL AND nr_seq_motivo_cancelamento_w::text <> '') then
					select	max(cd_intercambio)
					into STRICT	cd_motivo_exclusao_w
					from	pls_motivo_cancelamento
					where	nr_sequencia = nr_seq_motivo_cancelamento_w;
					
					pls_segurado_w.cd_motivo_exclusao(index_w)	:= cd_motivo_exclusao_w;
				else
					pls_segurado_w.cd_motivo_exclusao(index_w)	:= null;
				end if;
				
				if (nr_seq_parentesco_w IS NOT NULL AND nr_seq_parentesco_w::text <> '') then
					pls_segurado_w.cd_dependencia(index_w)	:= coalesce(ptu_moviment_benef_a1300_pck.obter_codigo_grau_parentesco(nr_seq_parentesco_w),0);
				else
					pls_segurado_w.cd_dependencia(index_w) := 00;
				end if;
				
				if (nr_seq_titular_w = r_c01_w.nr_seq_segurado) then
					pls_segurado_w.cd_titular_plano(index_w) := pls_segurado_w.CD_USUARIO_PLANO(index_w);
				else
					begin
					select	coalesce(substr(cd_usuario_plano,5,13),0)
					into STRICT	pls_segurado_w.cd_titular_plano(index_w)
					from	pls_segurado_carteira
					where	nr_seq_segurado =	nr_seq_titular_w  LIMIT 1;
					exception
					when others then
						pls_segurado_w.cd_titular_plano(index_w) := '0000000000000';
					end;
				end if;
				
				pls_segurado_w.nr_prot_ans_origem(index_w)	:= '';
				pls_segurado_w.ie_beneficio_obito(index_w)	:= 'N';
				end;
			end loop;
		end loop;
		
		forall i in pls_segurado_w.nr_seq_mov_benef_pf.first .. pls_segurado_w.nr_seq_mov_benef_pf.last
			insert into ptu_mov_benef_segurado(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_mov_pessoa,cd_unimed,cd_usuario_plano,
					cd_titular_plano,cd_dependencia,dt_inclusao,
					dt_exclusao,ie_consta_sib,nr_prot_ans_origem,
					ie_beneficio_obito,nr_seq_segurado, cd_motivo_exclusao)
			values (	nextval('ptu_mov_benef_segurado_seq'),clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
					pls_segurado_w.nr_seq_mov_benef_pf(i), cd_unimed_w,pls_segurado_w.cd_usuario_plano(i),
					pls_segurado_w.cd_titular_plano(i), pls_segurado_w.cd_dependencia(i),pls_segurado_w.dt_inclusao(i),
					pls_segurado_w.dt_exclusao(i), pls_segurado_w.ie_consta_sib(i),pls_segurado_w.nr_prot_ans_origem(i),
					pls_segurado_w.ie_beneficio_obito(i),pls_segurado_w.nr_seq_segurado(i), pls_segurado_w.cd_motivo_exclusao(i))
			returning nr_sequencia bulk collect into pls_segurado_w.nr_seq_mov_benef_seg;
		
		PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r306_w', current_setting('ptu_moviment_benef_a1300_pck.qt_total_r306_w')::ptu_mov_benef_trailer.qt_total_r306%type + pls_segurado_w.nr_seq_mov_benef_pf.count, false);
		
		CALL ptu_moviment_benef_a1300_pck.gerar_dados_plano_benef(pls_segurado_w,cd_unimed_w,dt_inicio_p);
		CALL ptu_moviment_benef_a1300_pck.gerar_dados_repasse(pls_segurado_w,cd_unimed_w);
	end if;
	
	pls_segurado_w.nr_seq_mov_benef_pf.delete;
	pls_segurado_w.cd_usuario_plano.delete;
	pls_segurado_w.cd_titular_plano.delete;
	pls_segurado_w.cd_dependencia.delete;
	pls_segurado_w.dt_inclusao.delete;
	pls_segurado_w.dt_exclusao.delete;
	pls_segurado_w.ie_consta_sib.delete;
	pls_segurado_w.nr_prot_ans_origem.delete;
	pls_segurado_w.ie_beneficio_obito.delete;
	pls_segurado_w.nr_seq_segurado.delete;
	pls_segurado_w.cd_pessoa_fisica.delete;
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_moviment_benef_a1300_pck.gerar_dados_beneficiario ( nr_seq_lote_p bigint, pessoa_fisica_w pessoa_fisica_w_record, nr_seq_contrato_p bigint, dt_inicio_p timestamp) FROM PUBLIC;
