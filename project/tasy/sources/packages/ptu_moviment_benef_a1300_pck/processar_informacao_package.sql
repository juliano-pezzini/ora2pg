-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE empresa_w_record AS (	nr_seq_mov_empresa	dbms_sql.number_table,
						nr_seq_contrato		dbms_sql.number_table,
						cd_filial		dbms_sql.number_table,
						ds_razao_social		dbms_sql.varchar2_table,
						nm_empresa_abre		dbms_sql.varchar2_table,
						cd_cnpj_cei		dbms_sql.varchar2_table,
						nr_inscricao_estadual	dbms_sql.varchar2_table,
						ds_endereco		dbms_sql.varchar2_table,
						ds_complemento		dbms_sql.varchar2_table,
						ds_bairro		dbms_sql.varchar2_table,
						cd_cep			dbms_sql.varchar2_table,
						ds_cidade		dbms_sql.varchar2_table,
						sg_uf			dbms_sql.varchar2_table,
						nr_ddd			dbms_sql.varchar2_table,
						dt_inclusao		dbms_sql.date_table,
						dt_exclusao		dbms_sql.date_table,
						cd_operadora_empresa	dbms_sql.number_table,
						cd_municipio_ibge	dbms_sql.varchar2_table,
						nr_telefone		dbms_sql.varchar2_table,
						nr_fax			dbms_sql.varchar2_table,
						nm_fantasia_empr	dbms_sql.varchar2_table,
						nr_matricula_cei	dbms_sql.varchar2_table,
						cd_caepf		dbms_sql.varchar2_table,
						ie_tipo_movimentacao	dbms_sql.varchar2_table);


CREATE OR REPLACE PROCEDURE ptu_moviment_benef_a1300_pck.processar_informacao ( nr_seq_lote_p ptu_mov_benef_lote.nr_sequencia%type, ie_tipo_movimentacao_p ptu_mov_benef_lote.ie_tipo_movimentacao%type, dt_inicio_p timestamp, dt_fim_p timestamp) AS $body$
DECLARE

	
	empresa_w		empresa_w_record;
	
	type ptu_mov_benef_exclusao_t is table of ptu_mov_benef_exclusao%rowtype index by integer;
	ptu_mov_benef_exclusao_w	ptu_mov_benef_exclusao_t;
	
	nr_seq_contrato_w	bigint;
	index_w			integer;
	
	C02 CURSOR FOR
		SELECT	'PJ' ie_tipo_contrato,
			nr_seq_contrato
		from	w_ptu_mov_benef
		where	nr_seq_lote		= nr_seq_lote_p
		and	ie_tipo_contrato	= 'PJ'
		and	ie_tipo_mov_cadastral	<> 'E'
		group by nr_seq_contrato
		
union all

		SELECT	'PF' ie_tipo_contrato,
			nr_seq_contrato
		from	w_ptu_mov_benef
		where	nr_seq_lote		= nr_seq_lote_p
		and	ie_tipo_contrato	= 'PF'
		and	ie_empresario_individual = 'S'
		and	ie_tipo_mov_cadastral	<> 'E'
		group by nr_seq_contrato;
	
	C03 CURSOR FOR
		SELECT	a.nr_seq_segurado,
			b.dt_rescisao dt_exclusao,
			coalesce(b.dt_limite_utilizacao,b.dt_rescisao) dt_fim_vigencia,
			(	SELECT	max(x.cd_intercambio)
				from	pls_motivo_cancelamento x
				where	x.nr_sequencia = b.nr_seq_motivo_cancelamento) cd_motivo_exclusao,
			substr(c.cd_usuario_plano,1,4) cd_operadora,
			substr(c.cd_usuario_plano,5,13) cd_beneficiario
		FROM w_ptu_mov_benef a, pls_segurado b
LEFT OUTER JOIN pls_segurado_carteira c ON (b.nr_sequencia = c.nr_seq_segurado)
WHERE b.nr_sequencia	= a.nr_seq_segurado  and a.ie_tipo_mov_cadastral	= 'E' and (b.dt_rescisao IS NOT NULL AND b.dt_rescisao::text <> '') and a.nr_seq_lote	= nr_seq_lote_p;
	
	
BEGIN
	
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r305_w', 0, false);
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r306_w', 0, false);
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r307_w', 0, false);
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r308_w', 0, false);
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r309_w', 0, false);
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r310_w', 0, false);
	PERFORM set_config('ptu_moviment_benef_a1300_pck.qt_total_r311_w', 0, false);
	index_w		:= 0;
	
	if (ie_tipo_movimentacao_p <> 'E') then
		--Processa primeiro todos os contratos PF

		CALL ptu_moviment_benef_a1300_pck.processar_pf_beneficiario(nr_seq_lote_p,null,null,dt_inicio_p);
		
		--Agrupa todos os contratos PJ

		for r_c02_w in C02 loop
			begin
			index_w	:= C02%rowCount;
			
			if (r_c02_w.ie_tipo_contrato = 'PJ') then
				select	b.ds_razao_social,
					b.nm_fantasia,
					b.nr_inscricao_estadual,
					substr(b.ds_endereco, 1, 40),
					substr(b.cd_cep, 1, 8),
					substr(b.ds_complemento, 1, 20),
					substr(b.ds_bairro, 1, 30),
					substr(b.ds_municipio, 1, 30),
					b.sg_estado,
					b.nr_ddd_telefone,
					substr(b.nr_telefone, 1, 8),
					substr(b.nr_fax, 1, 8),
					b.cd_municipio_ibge,
					a.nr_sequencia,
					b.cd_cgc,
					a.dt_contrato,
					a.dt_rescisao_contrato,
					a.cd_operadora_empresa,
					substr(a.nr_contrato, 1, 3),
					b.nm_fantasia,
					substr(b.nr_matricula_cei,1,12),
					a.cd_caepf,
					(select	CASE WHEN count(1)='1' THEN  'I'  ELSE 'A' END
					from	pls_contrato x
					where	x.nr_sequencia = a.nr_sequencia
					and	x.dt_contrato between coalesce(dt_inicio_p, x.dt_contrato) and coalesce(dt_fim_p, x.dt_contrato)) ie_tipo_movimentacao 
				into STRICT	empresa_w.ds_razao_social(index_w),
					empresa_w.nm_empresa_abre(index_w),
					empresa_w.nr_inscricao_estadual(index_w),
					empresa_w.ds_endereco(index_w),
					empresa_w.cd_cep(index_w),
					empresa_w.ds_complemento(index_w),
					empresa_w.ds_bairro(index_w),
					empresa_w.ds_cidade(index_w),
					empresa_w.sg_uf(index_w),
					empresa_w.nr_ddd(index_w),
					empresa_w.nr_telefone(index_w),
					empresa_w.nr_fax(index_w),
					empresa_w.cd_municipio_ibge(index_w),
					empresa_w.nr_seq_contrato(index_w),
					empresa_w.cd_cnpj_cei(index_w),
					empresa_w.dt_inclusao(index_w),
					empresa_w.dt_exclusao(index_w),
					empresa_w.cd_operadora_empresa(index_w),
					empresa_w.cd_filial(index_w),
					empresa_w.nm_fantasia_empr(index_w),
					empresa_w.nr_matricula_cei(index_w),
					empresa_w.cd_caepf(index_w),
					empresa_w.ie_tipo_movimentacao(index_w)
				from	pessoa_juridica	b,
					pls_contrato	a
				where	b.cd_cgc	= a.cd_cgc_estipulante
				and	a.nr_sequencia	= r_c02_w.nr_seq_contrato;
			elsif (r_c02_w.ie_tipo_contrato = 'PF') then
				select	b.nm_pessoa_fisica,
					b.nm_abreviado,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					a.nr_sequencia,
					null,
					a.dt_contrato,
					a.dt_rescisao_contrato,
					a.cd_operadora_empresa,
					null,
					b.nm_pessoa_fisica,
					null,
					a.cd_caepf,
					(select	CASE WHEN count(1)='1' THEN  'I'  ELSE 'A' END
					from	pls_contrato x
					where	x.nr_sequencia = a.nr_sequencia
					and	x.dt_contrato between coalesce(dt_inicio_p, x.dt_contrato) and coalesce(dt_fim_p, x.dt_contrato)) ie_tipo_movimentacao 
				into STRICT	empresa_w.ds_razao_social(index_w),
					empresa_w.nm_empresa_abre(index_w),
					empresa_w.nr_inscricao_estadual(index_w),
					empresa_w.ds_endereco(index_w),
					empresa_w.cd_cep(index_w),
					empresa_w.ds_complemento(index_w),
					empresa_w.ds_bairro(index_w),
					empresa_w.ds_cidade(index_w),
					empresa_w.sg_uf(index_w),
					empresa_w.nr_ddd(index_w),
					empresa_w.nr_telefone(index_w),
					empresa_w.nr_fax(index_w),
					empresa_w.cd_municipio_ibge(index_w),
					empresa_w.nr_seq_contrato(index_w),
					empresa_w.cd_cnpj_cei(index_w),
					empresa_w.dt_inclusao(index_w),
					empresa_w.dt_exclusao(index_w),
					empresa_w.cd_operadora_empresa(index_w),
					empresa_w.cd_filial(index_w),
					empresa_w.nm_fantasia_empr(index_w),
					empresa_w.nr_matricula_cei(index_w),
					empresa_w.cd_caepf(index_w),
					empresa_w.ie_tipo_movimentacao(index_w)
				from	pessoa_fisica	b,
					pls_contrato	a
				where	b.cd_pessoa_fisica	= a.cd_pf_estipulante
				and	a.nr_sequencia		= r_c02_w.nr_seq_contrato;
			end if;
			
			select	nextval('ptu_mov_benef_empresa_seq')
			into STRICT	empresa_w.nr_seq_mov_empresa(index_w)
			;
			
			empresa_w.nr_telefone(index_w)			:= somente_numero(empresa_w.nr_telefone(index_w));
			empresa_w.nr_ddd(index_w)			:= somente_numero(empresa_w.nr_ddd(index_w));
			empresa_w.nr_fax(index_w)			:= somente_numero(empresa_w.nr_fax(index_w));
			empresa_w.nr_inscricao_estadual(index_w)	:= somente_numero(empresa_w.nr_inscricao_estadual(index_w));
			if (length(empresa_w.ds_razao_social(index_w)) > 40) then
				empresa_w.ds_razao_social(index_w)		:= substr(trim(both pls_gerar_nome_abreviado(ptu_somente_caracter_permitido(empresa_w.ds_razao_social(index_w),'ANS'))), 1,40);
			else
				empresa_w.ds_razao_social(index_w)		:= trim(both ptu_somente_caracter_permitido(empresa_w.ds_razao_social(index_w),'ANS'));
			end if;
			empresa_w.nm_empresa_abre(index_w)		:= substr(trim(both ptu_somente_caracter_permitido(empresa_w.nm_empresa_abre(index_w),'ANS')),1,30);
			empresa_w.ds_endereco(index_w)			:= ptu_somente_caracter_permitido(empresa_w.ds_endereco(index_w),'ANS');
			empresa_w.ds_complemento(index_w)		:= ptu_somente_caracter_permitido(empresa_w.ds_complemento(index_w),'ANS');
			empresa_w.ds_bairro(index_w)			:= ptu_somente_caracter_permitido(empresa_w.ds_bairro(index_w),'ANS');
			empresa_w.ds_cidade(index_w)			:= ptu_somente_caracter_permitido(empresa_w.ds_cidade(index_w),'ANS');
			empresa_w.nm_fantasia_empr(index_w)		:= substr(trim(both ptu_somente_caracter_permitido(empresa_w.nm_fantasia_empr(index_w),'ANS')),1,40);
			end;
		end loop;
		
		forall i in empresa_w.nr_seq_contrato.first .. empresa_w.nr_seq_contrato.last
			insert into ptu_mov_benef_empresa(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					ds_razao_social,nm_empr_abrev,cd_cgc_cpf,
					ds_endereco,cd_cep, cd_empresa_origem,
					cd_filial,nr_insc_estadual,ds_complemento,
					ds_bairro,nm_cidade,sg_uf,
					nr_ddd, nr_telefone,nr_fax,
					dt_inclusao,dt_exclusao,cd_municipio_ibge,
					nr_seq_contrato,nr_seq_lote,nm_fantasia_empr,
					nr_cei, cd_caepf, ie_tipo_movimentacao)
			values (	empresa_w.nr_seq_mov_empresa(i),clock_timestamp(),get_nm_usuario,clock_timestamp(),get_nm_usuario,
					empresa_w.ds_razao_social(i),empresa_w.nm_empresa_abre(i),empresa_w.cd_cnpj_cei(i),
					empresa_w.ds_endereco(i),empresa_w.cd_cep(i), empresa_w.cd_operadora_empresa(i),
					empresa_w.cd_filial(i),empresa_w.nr_inscricao_estadual(i),empresa_w.ds_complemento(i),
					empresa_w.ds_bairro(i),empresa_w.ds_cidade(i),empresa_w.sg_uf(i),
					empresa_w.nr_ddd(i), empresa_w.nr_telefone(i),empresa_w.nr_fax(i),
					empresa_w.dt_inclusao(i),empresa_w.dt_exclusao(i),empresa_w.cd_municipio_ibge(i),
					empresa_w.nr_seq_contrato(i),nr_seq_lote_p,empresa_w.nm_fantasia_empr(i),
					empresa_w.nr_matricula_cei(i), empresa_w.cd_caepf(i), empresa_w.ie_tipo_movimentacao(i));
		commit;
		
		if (empresa_w.nr_seq_contrato.count > 0) then
			for i in empresa_w.nr_seq_contrato.first ..empresa_w.nr_seq_contrato.count loop
				begin
				CALL ptu_moviment_benef_a1300_pck.processar_pf_beneficiario(nr_seq_lote_p,empresa_w.nr_seq_mov_empresa(i),empresa_w.nr_seq_contrato(i),dt_inicio_p);
				commit;
				end;
			end loop;
		end if;
		
		--Gerar beneficiarios de autogestao

		CALL ptu_moviment_benef_a1300_pck.gerar_benef_autogestao(nr_seq_lote_p, ie_tipo_movimentacao_p, dt_inicio_p, dt_fim_p);
	end if;
	
	if (ie_tipo_movimentacao_p in ('E','P')) then
		for r_c03_w in C03 loop
			begin
			index_w	:= index_w + 1;
			
			select nextval('ptu_mov_benef_exclusao_seq') into STRICT ptu_mov_benef_exclusao_w[index_w].nr_sequencia;
			ptu_mov_benef_exclusao_w[index_w].nr_seq_lote		:= nr_seq_lote_p;
			ptu_mov_benef_exclusao_w[index_w].nr_seq_segurado	:= r_c03_w.nr_seq_segurado;
			ptu_mov_benef_exclusao_w[index_w].dt_atualizacao	:= clock_timestamp();
			ptu_mov_benef_exclusao_w[index_w].nm_usuario		:= ptu_moviment_benef_a1300_pck.get_nm_usuario();
			ptu_mov_benef_exclusao_w[index_w].dt_atualizacao_nrec	:= clock_timestamp();
			ptu_mov_benef_exclusao_w[index_w].nm_usuario_nrec	:= ptu_moviment_benef_a1300_pck.get_nm_usuario();
			ptu_mov_benef_exclusao_w[index_w].cd_motivo_exclusao	:= r_c03_w.cd_motivo_exclusao;
			ptu_mov_benef_exclusao_w[index_w].dt_exclusao		:= r_c03_w.dt_exclusao;
			ptu_mov_benef_exclusao_w[index_w].dt_fim_vigencia	:= r_c03_w.dt_fim_vigencia;
			ptu_mov_benef_exclusao_w[index_w].cd_operadora		:= r_c03_w.cd_operadora;
			ptu_mov_benef_exclusao_w[index_w].cd_beneficiario	:= r_c03_w.cd_beneficiario;
			
			if (mod(index_w,5000) = 0) then
				forall m in ptu_mov_benef_exclusao_w.first .. ptu_mov_benef_exclusao_w.last
					insert into ptu_mov_benef_exclusao values ptu_mov_benef_exclusao_w(m);
				commit;
				ptu_mov_benef_exclusao_w.delete;
				index_w	:= 0;
			end if;
			end;
		end loop;
		
		forall m in ptu_mov_benef_exclusao_w.first .. ptu_mov_benef_exclusao_w.last
			insert into ptu_mov_benef_exclusao values ptu_mov_benef_exclusao_w(m);
		commit;
		ptu_mov_benef_exclusao_w.delete;
	end if;
	
	--Gera a contagem dos beneficiarios

	CALL ptu_moviment_benef_a1300_pck.gerar_contagem_beneficiarios(nr_seq_lote_p);
	
	--Gerar trailer

	CALL ptu_moviment_benef_a1300_pck.gerar_trailer_arquivo(nr_seq_lote_p);
	
	empresa_w.nr_seq_mov_empresa.delete;
	empresa_w.ds_razao_social.delete;
	empresa_w.nm_empresa_abre.delete;
	empresa_w.cd_cnpj_cei.delete;
	empresa_w.ds_endereco.delete;
	empresa_w.cd_cep.delete;
	empresa_w.cd_operadora_empresa.delete;
	empresa_w.cd_filial.delete;
	empresa_w.nr_inscricao_estadual.delete;
	empresa_w.ds_complemento.delete;
	empresa_w.ds_bairro.delete;
	empresa_w.ds_cidade.delete;
	empresa_w.sg_uf.delete;
	empresa_w.nr_ddd.delete;
	empresa_w.nr_telefone.delete;
	empresa_w.nr_fax.delete;
	empresa_w.dt_inclusao.delete;
	empresa_w.dt_exclusao.delete;
	empresa_w.cd_municipio_ibge.delete;
	empresa_w.nr_seq_contrato.delete;
	empresa_w.nm_fantasia_empr.delete;
	empresa_w.nr_matricula_cei.delete;
	empresa_w.cd_caepf.delete;
	
	end;
	

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_moviment_benef_a1300_pck.processar_informacao ( nr_seq_lote_p ptu_mov_benef_lote.nr_sequencia%type, ie_tipo_movimentacao_p ptu_mov_benef_lote.ie_tipo_movimentacao%type, dt_inicio_p timestamp, dt_fim_p timestamp) FROM PUBLIC;
