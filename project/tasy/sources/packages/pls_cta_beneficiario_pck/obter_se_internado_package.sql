-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION pls_cta_beneficiario_pck.obter_se_internado ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_referencia_p pls_conta.dt_atendimento_referencia%type, ie_considera_autor_p text default 'S') RETURNS SETOF T_PLS_INTERNACAO_BENEF_DATA AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	retornar dados sobre a internação do beneficiário, recebendo o sequencial do benef, e uma data de referencia

	Para saber se o beneficiário está internado, é buscado uma guia de resumo de internação, onde
	a data de internação e de alta compreenda a data de referencia passada, para o beneficiário passado no parâmetro

	Pode-se ainda, utilizar os dados da autorização para tentar "Presumir" um periodo de internação.
	Isso pode ser util, pois os hospitais podem internar um beneficiário, e enviar o resumo de internação
	algum tempo após o mesmo sair da internação, neste caso é realizada seguinte busca:

	1. Procura-se uma autorização para internação, para o beneficiário
	2. A data de inicio de internação na pasta "dados atendimento" deve ser menor que a data de referencia
	3. A data de alta é levantada da seguinte forma
		a) Buscado o campo "dt alta" da pasta acima
		b) caso não esteja informado é somada as diarias autorizadas,
		   e diárias de guias de solicitação de prorrogação de internação referenciadas.
		   a soma das diarias é atribuida a data de itnernação, presumindo a data de alta

-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:	A utilização da autorização causa um processamento extra, impactando na performance
		da busca

Alterações:
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w	pls_segurado.nr_sequencia%type;
dt_referencia_w		pls_conta.dt_atendimento_referencia%type;
ie_considerar_hora_w	varchar(1);
ie_considera_autor_w	varchar(1);

t_internacao_benef_row_w	pls_cta_beneficiario_pck.t_pls_internacao_benef_row;

c01 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		dt_referencia_pc	pls_conta.dt_atendimento_referencia%type,
		ie_considerar_hora_pc	text,
		ie_considera_autor_pc	text) FOR

SELECT	t.tipo_registro,
	t.nr_seq_segurado,
	t.cd_guia_referencia,
	t.nr_seq_registro,
	t.tipo_guia,
	t.status,
	t.dt_entrada,
	t.dt_alta,
	t.dt_alta_estimado,
	t.dt_atendimento,
	t.cd_tiss_atendimento
from (	SELECT	'C' tipo_registro,
		a.nr_seq_segurado,
		a.cd_guia_ok cd_guia_referencia,
		a.nr_sequencia nr_seq_registro,
		a.ie_tipo_guia tipo_guia,
		a.ie_status status,
		a.dt_entrada,
		a.dt_alta,
		to_date(null) dt_alta_estimado,
		a.dt_atendimento_referencia dt_atendimento,
		b.cd_tiss cd_tiss_atendimento
	FROM pls_conta a
LEFT OUTER JOIN pls_tipo_atendimento b ON (a.nr_seq_tipo_atendimento = b.nr_sequencia)
WHERE a.nr_seq_segurado	= nr_seq_segurado_pc and dt_referencia_pc	between a.dt_entrada and coalesce(a.dt_alta, coalesce(a.dt_fim_faturamento, clock_timestamp())) and a.ie_tipo_guia		= '5' --  resumo de internação
  and a.ie_status		!= 'C' -- Cancelada
  and ie_considerar_hora_pc	= 'S'
	
union all

	select	'C' tipo_registro,
		a.nr_seq_segurado,
		a.cd_guia_ok cd_guia_referencia,
		a.nr_sequencia nr_seq_registro,
		a.ie_tipo_guia tipo_guia,
		a.ie_status status,
		a.dt_entrada,
		a.dt_alta,
		to_date(null) dt_alta_estimado,
		a.dt_atendimento_referencia dt_atendimento,
		b.cd_tiss cd_tiss_atendimento
	FROM pls_conta a
LEFT OUTER JOIN pls_tipo_atendimento b ON (a.nr_seq_tipo_atendimento = b.nr_sequencia)
WHERE a.nr_seq_segurado	= nr_seq_segurado_pc and dt_referencia_pc	between trunc(a.dt_entrada, 'dd') and trunc(coalesce(a.dt_alta, coalesce(a.dt_fim_faturamento, clock_timestamp())), 'dd') and a.ie_tipo_guia		= '5' --  resumo de internação
  and a.ie_status		!= 'C' -- Cancelada
  and ie_considerar_hora_pc	= 'N' ) t
-- busca as autorizações
union all

select	x.tipo_registro,
	x.nr_seq_segurado,
	x.cd_guia_referencia,
	x.nr_seq_registro,
	x.tipo_guia,
	x.status,
	x.dt_entrada,
	x.dt_alta,
	x.dt_alta_estimado,
	x.dt_atendimento,
	x.cd_tiss_atendimento
from(	select	'G' tipo_registro,
		a.nr_seq_segurado,
		a.cd_guia cd_guia_referencia,
		a.nr_sequencia nr_seq_registro,
		a.ie_tipo_guia tipo_guia,
		a.ie_status status,
		b.dt_internacao dt_entrada,
		b.dt_alta,
		b.dt_internacao + coalesce(a.qt_dia_autorizado, 1) dt_alta_estimado,
		to_date(null) dt_atendimento,
		null cd_tiss_atendimento
	from	pls_guia_plano		a,
		pls_guia_atendimento	b
	where	b.nr_seq_guia		= a.nr_sequencia
	and	a.nr_seq_segurado	= nr_seq_segurado_pc
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	b.dt_internacao		<= dt_referencia_pc
	-- Considera inicialmente a data de alta informada, caso não tenha, soma as diarias da guia, juntamente com as diárias da guia de prorrogação de autorização
	and	(coalesce(b.dt_alta, b.dt_internacao + coalesce(a.qt_dia_autorizado, 1) + coalesce((	select	sum(coalesce(z.qt_dia_autorizado,1))
											from	pls_guia_plano		z
											where	z.nr_seq_guia_principal	= a.nr_sequencia
											and	coalesce(z.dt_cancelamento::text, '') = ''  -- Não considera as guias canceladas
											and	z.ie_tipo_guia = '8' -- Retona apenas as guias de solicitação de prorrogação de internação
											and	z.ie_status = '1'), 0)) >= dt_referencia_pc)
	and	a.ie_tipo_guia		= '1' --  resumo de internação
	and	a.ie_status		= '1' -- Apenas autorizadas
	and	ie_considerar_hora_pc	= 'S'
	and	ie_considera_autor_pc	= 'S' -- Apenas se foi marcado para considerar as altorizações
	
union all

	select	'G' tipo_registro,
		a.nr_seq_segurado,
		a.cd_guia cd_guia_referencia,
		a.nr_sequencia nr_seq_registro,
		a.ie_tipo_guia tipo_guia,
		a.ie_status status,
		b.dt_internacao dt_entrada,
		b.dt_alta,
		b.dt_internacao + coalesce(a.qt_dia_autorizado, 1) dt_alta_estimado,
		to_date(null) dt_atendimento,
		null cd_tiss_atendimento
	from	pls_guia_plano		a,
		pls_guia_atendimento	b
	where	b.nr_seq_guia			= a.nr_sequencia
	and	a.nr_seq_segurado		= nr_seq_segurado_pc
	and	coalesce(a.dt_cancelamento::text, '') = ''
	and	trunc(b.dt_internacao, 'dd')	<= dt_referencia_pc
	-- Considera inicialmente a data de alta informada, caso não tenha, soma as diarias da guia, juntamente com as diárias da guia de prorrogação de autorização
	and	(trunc(coalesce(b.dt_alta, b.dt_internacao + coalesce(a.qt_dia_autorizado, 1) + coalesce((	select	sum(coalesce(z.qt_dia_autorizado,1))
												from	pls_guia_plano		z
												where	z.nr_seq_guia_principal	= a.nr_sequencia
												and	coalesce(z.dt_cancelamento::text, '') = ''  -- Não considera as guias canceladas
												and	z.ie_tipo_guia = '8' -- Retona apenas as guias de solicitação de prorrogação de internação
												and	z.ie_status = '1'),0)), 'dd') >= dt_referencia_pc)

	and	a.ie_tipo_guia		= '1' --  resumo de internação
	and	a.ie_status		= '1' -- Apenas autorizadas
	and	ie_considera_autor_pc	= 'S' -- Apenas se foi marcado para considerar as altorizações
	and	ie_considerar_hora_pc	= 'N')	x;

BEGIN

nr_seq_segurado_w	:= nr_seq_segurado_p;
dt_referencia_w		:= dt_referencia_p;
ie_considera_autor_w	:= coalesce(ie_considera_autor_p, 'S');

-- Apenas executa se o segurado e dt_referencia estiverem informados
if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') and (dt_referencia_w IS NOT NULL AND dt_referencia_w::text <> '') then

	-- verifica se é para considerar as horas
	if (trunc(dt_referencia_w, 'dd') = dt_referencia_w) then
		ie_considerar_hora_w := 'N';
	else
		ie_considerar_hora_w := 'S';
	end if;

	for r_c01_w in c01(nr_seq_segurado_w, dt_referencia_w, ie_considerar_hora_w, ie_considera_autor_w) loop

		t_internacao_benef_row_w.tipo_registro		:= r_c01_w.tipo_registro;
		t_internacao_benef_row_w.nr_seq_segurado	:= r_c01_w.nr_seq_segurado;
		t_internacao_benef_row_w.cd_guia_referencia	:= r_c01_w.cd_guia_referencia;
		t_internacao_benef_row_w.nr_seq_registro	:= r_c01_w.nr_seq_registro;
		t_internacao_benef_row_w.tipo_guia		:= r_c01_w.tipo_guia;
		t_internacao_benef_row_w.status			:= r_c01_w.status;
		t_internacao_benef_row_w.dt_entrada		:= r_c01_w.dt_entrada;
		t_internacao_benef_row_w.dt_alta		:= r_c01_w.dt_alta;
		t_internacao_benef_row_w.dt_alta_estimado	:= r_c01_w.dt_alta_estimado;
		t_internacao_benef_row_w.dt_atendimento		:= r_c01_w.dt_atendimento;
		t_internacao_benef_row_w.cd_tiss_atendimento	:= r_c01_w.cd_tiss_atendimento;

		RETURN NEXT t_internacao_benef_row_w;

	end loop; -- fim c01
end if; -- fim se possui segurado e dt referencia
return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION pls_cta_beneficiario_pck.obter_se_internado ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_referencia_p pls_conta.dt_atendimento_referencia%type, ie_considera_autor_p text default 'S') FROM PUBLIC;
