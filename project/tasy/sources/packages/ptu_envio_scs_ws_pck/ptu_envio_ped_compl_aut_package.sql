-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


-- Enviar Pedido de Complemento de Autorização 00605 - Pedido de Complemento de Autorização
CREATE OR REPLACE PROCEDURE ptu_envio_scs_ws_pck.ptu_envio_ped_compl_aut ( nr_seq_guia_p pls_guia_plano_proc.nr_seq_guia%type, nr_seq_requisicao_p pls_requisicao_proc.nr_seq_requisicao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_pedido_novo_p INOUT ptu_pedido_compl_aut.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a transação de pedido de complemento de autorização do PTU, via SCS
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_cliente_w		ptu_pedido_compl_aut.ie_tipo_cliente%type;
nr_seq_execucao_w		ptu_pedido_autorizacao.nr_seq_execucao%type;
cd_unimed_w			ptu_pedido_compl_aut.cd_unimed%type;
cd_usuario_plano_w		ptu_pedido_compl_aut.cd_usuario_plano%type;
nr_seq_prestador_w		pls_requisicao.nr_seq_prestador%type;
cd_especialidade_w		especialidade_medica.cd_especialidade%type;
ds_observacao_w			ptu_pedido_compl_aut.ds_observacao%type;
ds_biometria_w			ptu_pedido_compl_aut.ds_biometria%type;
nr_seq_origem_w			ptu_pedido_compl_aut.nr_seq_origem%type;
cd_servico_w			pls_guia_plano_proc.cd_procedimento%type;
qt_registros_w			integer;
qt_procedimento_w		ptu_pedido_compl_aut_serv.qt_servico%type;
ie_tipo_tabela_w		ptu_pedido_compl_aut_serv.ie_tipo_tabela%type;
ie_classificacao_w		procedimento.ie_classificacao%type;
ie_tipo_despesa_w		pls_material.ie_tipo_despesa%type;
cd_material_w			pls_guia_plano_proc.cd_procedimento%type;
qt_material_w			ptu_pedido_compl_aut_serv.qt_servico%type;
nr_seq_pacote_w			pls_guia_plano_proc.nr_seq_pacote%type;
cd_cooperativa_w		ptu_pedido_compl_aut.cd_unimed_executora%type;
cd_cooperativa_ww		ptu_pedido_compl_aut.cd_unimed_beneficiario%type;
nr_seq_segurado_w		pls_requisicao.nr_seq_segurado%type;
cd_carteirinha_w		pls_segurado_carteira.cd_usuario_plano%type;
nr_seq_prestador_exec_w		ptu_pedido_compl_aut.nr_seq_prestador%type;
nr_seq_congenere_w		pls_segurado.nr_seq_congenere%type;
ie_tipo_processo_w		pls_requisicao.ie_tipo_processo%type;
nr_seq_controle_exec_w		ptu_controle_execucao.nr_sequencia%type;
nr_seq_pedido_compl_serv_w	ptu_pedido_compl_aut_serv.nr_sequencia%type;
ie_tipo_pacote_w		varchar(2);
ds_proc_pacote_w		varchar(100);
nr_seq_guia_princ_w		pls_execucao_req_item.nr_seq_guia%type;
nr_seq_requisicao_w		pls_execucao_req_item.nr_seq_requisicao%type;
ie_permite_pacote_w		pls_param_intercambio_scs.ie_permite_pacote%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
vl_total_w			ptu_pedido_compl_aut_serv.vl_servico%type	:= 0;

ds_procedimento_ptu_w		pls_guia_plano_proc.ds_procedimento_ptu%type;
ds_material_ptu_w		pls_guia_plano_mat.ds_material_ptu%type;
qt_reg_generico_w		integer;
cd_cgc_outorgante_w		pls_outorgante.cd_cgc_outorgante%type;
cd_espec_ptu_w			especialidade_medica.cd_ptu%type;
ie_tipo_anexo_w			pls_requisicao_proc.ie_tipo_anexo%type;
dt_prevista_w			pls_lote_anexo_mat_aut.dt_prevista%type;
ds_opme_w			varchar(255);
nr_seq_uni_exec_w		pls_requisicao.nr_seq_uni_exec%type;
ie_origem_proced_w		pls_guia_plano_proc.ie_origem_proced%type;

nm_medico_solicitante_w			ptu_pedido_compl_aut.nm_prof_solicitante%type;
nr_telefone_med_solic_w			ptu_pedido_compl_aut.nr_fone_prof_solic%type;
ds_email_med_solic_w			ptu_pedido_compl_aut.ds_email_prof_solic%type;
nr_seq_guia_diagnostico_w		pls_diagnostico.nr_sequencia%type;
nr_seq_req_diagnostico_w		pls_requisicao_diagnostico.nr_sequencia%type;
nr_registro_anvisa_w			ptu_pedido_compl_aut_serv.cd_anvisa%type;
ds_indicacao_clinica_w			ptu_pedido_compl_aut.ds_indicacao_clinica%type;
cd_pessoa_fisica_w			pls_segurado.cd_pessoa_fisica%type;
dt_nascimento_benef_w			pessoa_fisica.dt_nascimento%type;
ie_sexo_w				ptu_pedido_compl_aut.ie_sexo%type;
nr_idade_w				ptu_pedido_compl_aut.nr_idade%type;
ie_anexo_guia_w				ptu_pedido_compl_aut.ie_anexo%type;
dt_prev_realizacao_w			ptu_pedido_compl_aut_serv.dt_provavel%type;
cd_ref_fabricante_imp_w			pls_lote_anexo_mat_aut.cd_ref_fabricante_imp%type;
ie_via_administracao_w			pls_lote_anexo_mat_aut.ie_via_administracao%type;
ie_frequencia_dose_w			pls_lote_anexo_mat_aut.ie_frequencia_dose%type;
ie_opcao_fabricante_w			pls_lote_anexo_mat_aut.ie_opcao_fabricante%type;

ie_pacote_w				ptu_pedido_compl_aut_serv.ie_pacote%type;
ie_req_web_finalizada_w			pls_requisicao.ie_req_web_finalizada%type;
ie_origem_solic_w			pls_requisicao.ie_origem_solic%Type;
ie_bloq_req_interc_web_w		pls_param_requisicao.ie_bloq_req_interc_web%type;
ie_req_interc_lib_manual_w		pls_requisicao.ie_req_interc_lib_manual%type;
nr_seq_composicao_w			pls_pacote_tipo_acomodacao.nr_seq_composicao%type;
sg_estado_congenere_w			pessoa_juridica.sg_estado%type;
sg_estado_exec_w			pessoa_juridica.sg_estado%type;

c01 CURSOR(	nr_seq_guia_pc 		pls_guia_plano_proc.nr_seq_guia%type,
		nr_seq_requisicao_pc	pls_requisicao_proc.nr_seq_requisicao%type) FOR

	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitada 		qt_solicitado,
		qt_autorizada		qt_procedimento,
		vl_procedimento,
		nr_seq_pacote,
		nr_seq_preco_pacote,
		cd_procedimento_ptu,
		ds_procedimento_ptu,
		ie_pacote_ptu
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_pc
	and	ie_status		= 'I'
	
union

	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitado 		qt_solicitado,
		qt_procedimento		qt_procedimento,
		vl_procedimento,
		nr_seq_pacote,
		nr_seq_preco_pacote,
		cd_procedimento_ptu,
		ds_procedimento_ptu,
		ie_pacote_ptu
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_pc
	and	ie_status		= 'I';

c02 CURSOR(	nr_seq_guia_pc 		pls_guia_plano_proc.nr_seq_guia%type,
		nr_seq_requisicao_pc	pls_requisicao_proc.nr_seq_requisicao%type) FOR

	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitada		qt_solicitado,
		qt_autorizada		qt_material,
		vl_material,
		cd_material_ptu,
		ds_material_ptu
	from	pls_guia_plano_mat
	where	nr_seq_guia		= nr_seq_guia_pc
	and	ie_status		= 'I'
	
union

	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitado		qt_solicitado,
		qt_material		qt_material,
		vl_material,
		cd_material_ptu,
		ds_material_ptu
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_pc
	and	ie_status		= 'I';

C03 CURSOR(	nr_seq_composicao_pc 	pls_pacote_tipo_acomodacao.nr_seq_composicao%type ) FOR

	SELECT	a.cd_procedimento 	cd_procedimento,
		a.ie_origem_proced	ie_origem_proced
	from	pls_pacote_composicao	b,
		pls_pacote_procedimento	a
	where	a.nr_seq_composicao 	= b.nr_sequencia
	and	a.nr_seq_composicao	= nr_seq_composicao_pc;

C04 CURSOR(	nr_seq_composicao_pc 	pls_pacote_tipo_acomodacao.nr_seq_composicao%type ) FOR

	SELECT	a.nr_seq_material	nr_seq_material
	from	pls_pacote_composicao	b,
		pls_pacote_material	a
	where	a.nr_seq_composicao 	= b.nr_sequencia
	and	a.nr_seq_composicao	= nr_seq_composicao_pc;
BEGIN

select	max(ie_bloq_req_interc_web)
into STRICT	ie_bloq_req_interc_web_w
from	pls_param_requisicao;

if (coalesce(ie_bloq_req_interc_web_w, 'N')	= 'S') and (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	ie_req_web_finalizada,
		ie_origem_solic
	into STRICT	ie_req_web_finalizada_w,
		ie_origem_solic_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_p;

	if	((ie_origem_solic_w	= 'P') and ((coalesce(ie_req_web_finalizada_w::text, '') = '') or (ie_req_web_finalizada_w <> 'S'))) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(356549);
	end if;
end if;

select	max(cd_cgc_outorgante)
into STRICT	cd_cgc_outorgante_w
from	pls_outorgante;

select	max(cd_cooperativa)
into STRICT	cd_cooperativa_w
from	pls_congenere
where	cd_cgc			= cd_cgc_outorgante_w
and	(cd_cooperativa IS NOT NULL AND cd_cooperativa::text <> '');

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_pedido_compl_aut
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	if (qt_registros_w	<> 0) then
		goto final;
	end if;

	select	pls_obter_dados_segurado(nr_seq_segurado, 'C'),
		nr_seq_segurado,
		nr_seq_prestador,
		nr_seq_prestador_exec,
		ie_tipo_processo,
		substr(replace(replace(ds_observacao,chr(13),''),chr(10),''),1,999),
		substr(replace(replace(ds_indicacao_clinica,chr(13),''),chr(10),''),1,999),
		cd_especialidade,
		nr_seq_guia_principal,
		ie_anexo_guia,
		nr_seq_uni_exec
	into STRICT	cd_carteirinha_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		nr_seq_prestador_exec_w,
		ie_tipo_processo_w,
		ds_observacao_w,
		ds_indicacao_clinica_w,
		cd_especialidade_w,
		nr_seq_guia_princ_w,
		ie_anexo_guia_w,
		nr_seq_uni_exec_w
	from	pls_requisicao
	where	nr_sequencia		= nr_seq_requisicao_p;

	if (coalesce(nr_seq_guia_princ_w,0)	<> 0) then
		select	max(nr_seq_requisicao)
		into STRICT	nr_seq_requisicao_w
		from	pls_execucao_req_item
		where	nr_seq_guia	= nr_seq_guia_princ_w;
	end if;

	begin
		select	nr_seq_execucao
		into STRICT	nr_seq_execucao_w
		from	ptu_pedido_autorizacao
		where	nr_seq_requisicao	= nr_seq_requisicao_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(179718);
	end;

	select	ie_req_interc_lib_manual
	into STRICT	ie_req_interc_lib_manual_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_w;

	if (coalesce(ie_req_interc_lib_manual_w, 'N') = 'S') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(358275);
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_req_diagnostico_w
	from	pls_requisicao_diagnostico
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	begin
		select	ie_tipo_segurado,
			cd_pessoa_fisica
		into STRICT	ie_tipo_segurado_w,
			cd_pessoa_fisica_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		ie_tipo_segurado_w	:= 'X';
	end;

	if (coalesce(ie_tipo_segurado_w,'X')	= 'T') then
		begin
			select	coalesce(nr_cartao_intercambio,cd_usuario_plano)
			into STRICT	cd_carteirinha_w
			from	pls_segurado_carteira
			where	nr_seq_segurado	= nr_seq_segurado_w;
		exception
		when others then
			cd_carteirinha_w	:= 'X';
		end;

		if (coalesce(cd_carteirinha_w,'X')	= 'X') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(191728);
		end if;
	end if;

	begin
		select  cd_ptu
		into STRICT  	cd_espec_ptu_w
		from  	especialidade_medica
		where  	cd_especialidade  = cd_especialidade_w;
	exception
	when others then
		cd_espec_ptu_w  := cd_especialidade_w;
	end;

	begin
		select	substr(nm_profissional_solic,1,70),
			substr(nr_telef_prof_solic,1,11),
			substr(ds_email_prof_solic,1,60)
		into STRICT	nm_medico_solicitante_w,
			nr_telefone_med_solic_w,
			ds_email_med_solic_w
		from	pls_lote_anexo_guias_aut
		where	nr_seq_requisicao	= nr_seq_requisicao_p
		and	ie_tipo_anexo		= 	'OP';
	exception
	when others then
		nm_medico_solicitante_w	:= null;
		nr_telefone_med_solic_w	:= null;
		ds_email_med_solic_w	:= null;
	end;

	begin
		select	CASE WHEN ie_sexo='M' THEN 1 WHEN ie_sexo='I' THEN 2 WHEN ie_sexo='F' THEN 3 END ,
			dt_nascimento
		into STRICT	ie_sexo_w,
			dt_nascimento_benef_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception
	when others then
		ie_sexo_w		:= null;
		dt_nascimento_benef_w	:= null;
	end;

	cd_cooperativa_ww	:= adiciona_zeros_esquerda(pls_obter_unimed_benef(nr_seq_segurado_w),4);
	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_p,'L','Enviado pedido de complemento de autorização para a Unimed.'||cd_cooperativa_ww,null,nm_usuario_p);
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_pedido_compl_aut
	where	nr_seq_guia	= nr_seq_guia_p;

	if (qt_registros_w	<> 0) then
		goto final;
	end if;

	select	pls_obter_dados_segurado(nr_seq_segurado, 'C'),
		nr_seq_segurado,
		nr_seq_prestador,
		ie_tipo_processo,
		substr(replace(replace(ds_observacao,chr(13),''),chr(10),''),1,999),
		substr(replace(replace(ds_indicacao_clinica,chr(13),''),chr(10),''),1,999),
		cd_especialidade,
		nr_seq_guia_principal,
		ie_anexo_guia,
		nr_seq_uni_exec
	into STRICT	cd_carteirinha_w,
		nr_seq_segurado_w,
		nr_seq_prestador_w,
		ie_tipo_processo_w,
		ds_observacao_w,
		ds_indicacao_clinica_w,
		cd_especialidade_w,
		nr_seq_guia_princ_w,
		ie_anexo_guia_w,
		nr_seq_uni_exec_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	begin
		select	nr_seq_execucao
		into STRICT	nr_seq_execucao_w
		from	ptu_pedido_autorizacao
		where	nr_seq_guia	= nr_seq_guia_princ_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(179718);
	end;

	select	max(nr_sequencia)
	into STRICT	nr_seq_guia_diagnostico_w
	from	pls_diagnostico
	where	ie_classificacao	= 'P'
	and	nr_seq_guia		= nr_seq_guia_p;

	begin
		select	ie_tipo_segurado,
			cd_pessoa_fisica
		into STRICT	ie_tipo_segurado_w,
			cd_pessoa_fisica_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		ie_tipo_segurado_w	:= 'X';
	end;

	if (coalesce(ie_tipo_segurado_w,'X')	= 'T') then
		begin
			select	coalesce(nr_cartao_intercambio,cd_usuario_plano)
			into STRICT	cd_carteirinha_w
			from	pls_segurado_carteira
			where	nr_seq_segurado	= nr_seq_segurado_w;
		exception
		when others then
			cd_carteirinha_w	:= 'X';
		end;

		if (coalesce(cd_carteirinha_w,'X')	= 'X') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(191728);
		end if;
	end if;

	begin
		select  cd_ptu
		into STRICT  	cd_espec_ptu_w
		from  	especialidade_medica
		where  	cd_especialidade  = cd_especialidade_w;
	exception
	when others then
		cd_espec_ptu_w  := cd_especialidade_w;
	end;

	begin
		select	substr(nm_profissional_solic,1,70),
			substr(nr_telef_prof_solic,1,11),
			substr(ds_email_prof_solic,1,60)
		into STRICT	nm_medico_solicitante_w,
			nr_telefone_med_solic_w,
			ds_email_med_solic_w
		from	pls_lote_anexo_guias_aut
		where	nr_seq_guia	= nr_seq_guia_p
		and	ie_tipo_anexo	= 	'OP';
	exception
	when others then
		nm_medico_solicitante_w	:= null;
		nr_telefone_med_solic_w	:= null;
		ds_email_med_solic_w	:= null;
	end;

	begin
		select	CASE WHEN ie_sexo='M' THEN 1 WHEN ie_sexo='I' THEN 2 WHEN ie_sexo='F' THEN 3 END ,
			dt_nascimento
		into STRICT	ie_sexo_w,
			dt_nascimento_benef_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	exception
	when others then
		ie_sexo_w		:= null;
		dt_nascimento_benef_w	:= null;
	end;

	cd_cooperativa_ww	:= adiciona_zeros_esquerda(pls_obter_unimed_benef(nr_seq_segurado_w),4);
	CALL pls_guia_gravar_historico(nr_seq_guia_p,2,'Enviado pedido de complemento de autorização para a Unimed.'||cd_cooperativa_ww,'',nm_usuario_p);
end if;

if (length(cd_carteirinha_w) >= 17) then
	select	nr_seq_congenere
	into STRICT	nr_seq_congenere_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;

	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		cd_unimed_w		:= adiciona_zeros_esquerda(pls_obter_unimed_benef(nr_seq_segurado_w),4);
		cd_usuario_plano_w	:= substr(cd_carteirinha_w,5,17);
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(131177);
	end if;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(179717);
end if;

select	coalesce(max(a.sg_estado),'X')
into STRICT	sg_estado_congenere_w
from	pessoa_juridica	a,
	pls_congenere	b
where	a.cd_cgc	= b.cd_cgc
and	b.nr_sequencia	= nr_seq_congenere_w;

select	coalesce(max(a.sg_estado),'X')
into STRICT	sg_estado_exec_w
from	pessoa_juridica	a,
	pls_congenere	b
where	a.cd_cgc	= b.cd_cgc
and	b.nr_sequencia	= nr_seq_uni_exec_w;

if (ie_tipo_processo_w	= 'I') then
	ie_tipo_cliente_w	:= 'U';
elsif (ie_tipo_processo_w	in ('P', 'W')) then
	ie_tipo_cliente_w	:= 'P';
end if;

begin
	select	ie_permite_pacote
	into STRICT	ie_permite_pacote_w
	from	pls_param_intercambio_scs;
exception
when others then
	ie_permite_pacote_w	:= 'N';
end;

select	obter_idade(dt_nascimento_benef_w, clock_timestamp(), 'A')
into STRICT	nr_idade_w
;

select	nextval('ptu_pedido_compl_aut_seq')
into STRICT	nr_seq_pedido_novo_p
;

select	nextval('ptu_controle_execucao_seq')
into STRICT	nr_seq_controle_exec_w
;

nr_seq_origem_w		:= nr_seq_execucao_w;
nr_seq_execucao_w	:= nr_seq_controle_exec_w;

insert	into ptu_pedido_compl_aut(nr_sequencia, ie_tipo_cliente, cd_unimed_executora,
	 cd_unimed_beneficiario, nr_seq_execucao, nr_seq_origem,
	 cd_unimed, cd_usuario_plano, dt_atualizacao,
	 nm_usuario, nr_seq_requisicao, nr_seq_guia,
	 cd_unimed_prestador_req, nr_seq_prestador_req, nr_seq_prestador,
	 cd_especialidade, ds_observacao, ds_biometria,
	 cd_transacao, cd_unimed_prestador, nm_usuario_nrec,
	 dt_atualizacao_nrec,nr_versao, nm_prof_solicitante,
	 nr_fone_prof_solic, ds_email_prof_solic, ie_anexo,
	 ds_indicacao_clinica, ie_sexo, nr_idade)
values (nr_seq_pedido_novo_p, ie_tipo_cliente_w, cd_cooperativa_w,
	 cd_cooperativa_ww, nr_seq_execucao_w, nr_seq_origem_w,
	 cd_unimed_w, cd_usuario_plano_w, clock_timestamp(),
	 nm_usuario_p, nr_seq_requisicao_p, nr_seq_guia_p,
	 CASE WHEN coalesce(nr_seq_prestador_w::text, '') = '' THEN null  ELSE cd_cooperativa_w END , nr_seq_prestador_w, nr_seq_prestador_exec_w,
	 cd_espec_ptu_w, ds_observacao_w, ds_biometria_w,
	 '00605', CASE WHEN coalesce(nr_seq_prestador_exec_w::text, '') = '' THEN null  ELSE cd_cooperativa_w END , nm_usuario_p,
	 clock_timestamp(), '050', nm_medico_solicitante_w,
	 nr_telefone_med_solic_w, ds_email_med_solic_w, ie_anexo_guia_w,
	 ds_indicacao_clinica_w, ie_sexo_w, nr_idade_w);

insert	into ptu_controle_execucao(nr_sequencia, dt_atualizacao, nm_usuario,
	 nr_seq_pedido_compl, nr_seq_pedido_aut, nm_usuario_nrec,
	 dt_atualizacao_nrec)
values (nr_seq_controle_exec_w, clock_timestamp(), nm_usuario_p,
	 nr_seq_pedido_novo_p, null, nm_usuario_p,
	 clock_timestamp());


if (ie_anexo_guia_w	= 'S') then
	CALL ptu_inserir_dados_anexo_pedido(nr_seq_guia_p, nr_seq_requisicao_p, null, nr_seq_pedido_novo_p, nm_usuario_p);
end if;

for c01_w in C01( nr_seq_guia_p, nr_seq_requisicao_p ) loop
	vl_total_w		:= 0;
	ds_procedimento_ptu_w 	:= c01_w.ds_procedimento_ptu;
	ie_origem_proced_w 	:= c01_w.ie_origem_proced;

	select	max(ie_classificacao)
	into STRICT	ie_classificacao_w
	from	procedimento
	where	cd_procedimento		= c01_w.cd_procedimento
	and	ie_origem_proced	= c01_w.ie_origem_proced;

	if (ie_classificacao_w	= 1) then
		ie_tipo_tabela_w	:= '0';
	elsif (ie_classificacao_w	= 2) then
		ie_tipo_tabela_w	:= '1';
	elsif (ie_classificacao_w	= 3) then
		ie_tipo_tabela_w	:= '1';
	else
		ie_tipo_tabela_w	:= '0';
	end if;

	if (c01_w.nr_seq_pacote IS NOT NULL AND c01_w.nr_seq_pacote::text <> '') and (coalesce(ie_permite_pacote_w,'N')	= 'S') then
		ie_tipo_pacote_w	:= ptu_obter_modo_envio_pacote(cd_cooperativa_w, cd_cooperativa_ww, nm_usuario_p);

		if (ie_tipo_pacote_w	= 'A') then

			select	nr_seq_composicao
			into STRICT	nr_seq_composicao_w
			from	pls_pacote_tipo_acomodacao
			where	nr_sequencia	= c01_w.nr_seq_preco_pacote;

			for c03_w in C03( nr_seq_composicao_w ) loop
				ie_origem_proced_w := c03_w.ie_origem_proced;

				ds_proc_pacote_w	:= substr(obter_descricao_procedimento(c03_w.cd_procedimento,null),1,100);

				update	ptu_pedido_compl_aut
				set	ds_observacao	= ds_observacao||c03_w.cd_procedimento||' - '||ds_proc_pacote_w||','
				where	nr_sequencia	= nr_seq_pedido_novo_p;

			end loop;

			if (sg_estado_congenere_w <> 'X') and (sg_estado_exec_w <> 'X') and (sg_estado_congenere_w <> sg_estado_exec_w) then

				for c04_w in C04( nr_seq_composicao_w ) loop
					select	ie_tipo_despesa
					into STRICT	ie_tipo_despesa_w
					from	pls_material
					where	nr_sequencia	= c04_w.nr_seq_material;

					if (ie_tipo_despesa_w = '7') then
						cd_material_w	:= substr(pls_obter_seq_codigo_material(c04_w.nr_seq_material,''),1,8);
						ds_opme_w	:= substr(pls_obter_desc_material(c04_w.nr_seq_material),1,255);

						update	ptu_pedido_autorizacao
						set	ds_observacao	= ds_observacao||cd_material_w||' - '||ds_opme_w||','
						where	nr_sequencia	= nr_seq_pedido_novo_p;
					end if;
				end loop;
			end if;
		end if;

		ie_tipo_tabela_w	:= '4';
	end if;

	select	nextval('ptu_pedido_compl_aut_serv_seq')
	into STRICT	nr_seq_pedido_compl_serv_w
	;

	if (c01_w.qt_procedimento IS NOT NULL AND c01_w.qt_procedimento::text <> '') and (c01_w.qt_procedimento > 0) then
		qt_procedimento_w	:= c01_w.qt_procedimento;
	else
		qt_procedimento_w	:= c01_w.qt_solicitado;
	end if;

	if (coalesce(c01_w.vl_procedimento, 0) > 0) then
		vl_total_w	:= c01_w.vl_procedimento * qt_procedimento_w;
	end if;

	if (coalesce(c01_w.ie_pacote_ptu,'N')	= 'S') then
		ie_pacote_w	:= 'S';
	else
		ie_pacote_w	:= 'N';
	end if;

	if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
		begin
			select	ie_tipo_anexo
			into STRICT	ie_tipo_anexo_w
			from	pls_requisicao_proc
			where	nr_sequencia	= c01_w.nr_sequencia;
		exception
		when others then
			ie_tipo_anexo_w	:= null;
		end;

		begin
			select	dt_prev_realizacao
			into STRICT	dt_prev_realizacao_w
			from	pls_lote_anexo_proc_aut
			where	nr_seq_plano_proc	= c01_w.nr_sequencia;
		exception
		when others then
			dt_prev_realizacao_w	:= null;
		end;

		if (c01_w.cd_procedimento_ptu	<> 99999919) then
			ds_procedimento_ptu_w	:= '';
		end if;

		insert	into ptu_pedido_compl_aut_serv(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
			 cd_servico, qt_servico, dt_atualizacao,
			 nm_usuario, vl_servico, ie_origem_servico,
			 cd_servico_conversao, nr_seq_req_proc, ds_opme,
			 nm_usuario_nrec, dt_atualizacao_nrec, cd_anvisa,
			 cd_referencia_fab, ie_tipo_anexo, dt_provavel,
			 cd_via_administracao, qt_frequencia_adm, ie_pacote,
			 ie_tipo_ordem, vl_uni_servico)
		values (nr_seq_pedido_compl_serv_w, nr_seq_pedido_novo_p, ie_tipo_tabela_w,
			 c01_w.cd_procedimento, qt_procedimento_w, clock_timestamp(),
			 nm_usuario_p, vl_total_w, c01_w.ie_origem_proced,
			 c01_w.cd_procedimento_ptu, c01_w.nr_sequencia, ds_procedimento_ptu_w,
			 nm_usuario_p, clock_timestamp(), null,
			 null, CASE WHEN ie_tipo_anexo_w='OP' THEN 3 WHEN ie_tipo_anexo_w='QU' THEN 1 WHEN ie_tipo_anexo_w='RA' THEN 2  ELSE 9 END , dt_prev_realizacao_w,
			 null, null, ie_pacote_w,
			 null, c01_w.vl_procedimento);

	elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then

		begin
			select	dt_prev_realizacao
			into STRICT	dt_prev_realizacao_w
			from	pls_lote_anexo_proc_aut
			where	nr_seq_plano_proc	= c01_w.nr_sequencia;
		exception
		when others then
			dt_prev_realizacao_w	:= null;
		end;

		begin
			select	ie_tipo_anexo
			into STRICT	ie_tipo_anexo_w
			from	pls_guia_plano_proc
			where	nr_sequencia	= c01_w.nr_sequencia;
		exception
		when others then
			ie_tipo_anexo_w	:= null;
		end;

		if (c01_w.cd_procedimento_ptu	<> 99999919) then
			ds_procedimento_ptu_w	:= '';
		end if;

		insert	into ptu_pedido_compl_aut_serv(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
			 cd_servico, qt_servico, dt_atualizacao,
			 nm_usuario, vl_servico, ie_origem_servico,
			 cd_servico_conversao, nr_seq_guia_proc, ds_opme,
			 nm_usuario_nrec, dt_atualizacao_nrec, cd_anvisa,
			 cd_referencia_fab, ie_tipo_anexo, dt_provavel,
			 cd_via_administracao, qt_frequencia_adm, ie_pacote,
			 ie_tipo_ordem, vl_uni_servico)
		values (nr_seq_pedido_compl_serv_w, nr_seq_pedido_novo_p, ie_tipo_tabela_w,
			 c01_w.cd_procedimento, qt_procedimento_w, clock_timestamp(),
			 nm_usuario_p, vl_total_w, c01_w.ie_origem_proced,
			 c01_w.cd_procedimento_ptu, c01_w.nr_sequencia, ds_procedimento_ptu_w,
			 nm_usuario_p, clock_timestamp(), null,
			 null, CASE WHEN ie_tipo_anexo_w='OP' THEN 3 WHEN ie_tipo_anexo_w='QU' THEN 1 WHEN ie_tipo_anexo_w='RA' THEN 2  ELSE 9 END , dt_prev_realizacao_w,
			 null, null, ie_pacote_w,
			 null, c01_w.vl_procedimento);

	end if;

	if (coalesce(c01_w.cd_procedimento_ptu,0)	<> 0) then
		if (coalesce(c01_w.vl_procedimento,0)	= 0) and ((coalesce(ds_procedimento_ptu_w,'X')	<> 'X') or (ie_pacote_w	= 'S')) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(196741);
		end if;

		select	count(1)
		into STRICT	qt_reg_generico_w
		from	pls_regra_generico_ptu
		where	cd_proc_mat_generico	= c01_w.cd_procedimento_ptu
		and	ie_situacao		= 'A';

		if (qt_reg_generico_w	> 0) and (coalesce(ds_procedimento_ptu_w,'X')	= 'X') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(216706);
		end if;
	end if;
end loop;

for c02_w in C02( nr_seq_guia_p, nr_seq_requisicao_p ) loop
	vl_total_w		:= 0;
	ds_material_ptu_w	:= c02_w.ds_material_ptu;

	select	ie_tipo_despesa,
		nr_registro_anvisa
	into STRICT	ie_tipo_despesa_w,
		nr_registro_anvisa_w
	from	pls_material
	where	nr_sequencia	= c02_w.nr_seq_material;

	cd_material_w	:= substr(pls_obter_seq_codigo_material(c02_w.nr_seq_material,''),1,8);

	if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
		cd_servico_w		:= cd_material_w;

		if (ie_tipo_despesa_w	= 2) then
			ie_tipo_tabela_w	:= '3';
		elsif (ie_tipo_despesa_w	= 3) then
			ie_tipo_tabela_w	:= '2';
		else
			ie_tipo_tabela_w	:= '2';
		end if;

		select	nextval('ptu_pedido_compl_aut_serv_seq')
		into STRICT	nr_seq_pedido_compl_serv_w
		;

		if (c02_w.qt_material IS NOT NULL AND c02_w.qt_material::text <> '') and (c02_w.qt_material > 0) then
			qt_material_w	:= c02_w.qt_material;
		else
			qt_material_w	:= c02_w.qt_solicitado;
		end if;

		if (coalesce(c02_w.vl_material,0)	> 0) then
			vl_total_w	:= c02_w.vl_material * qt_material_w;
		end if;

		if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then

			begin
				select	ie_tipo_anexo
				into STRICT	ie_tipo_anexo_w
				from	pls_requisicao_mat
				where	nr_sequencia	= c02_w.nr_sequencia;
			exception
			when others then
				ie_tipo_anexo_w	:= null;
			end;

			begin
				select	nr_registro_anvisa,
					cd_ref_fabricante_imp,
					ie_via_administracao,
					ie_frequencia_dose,
					dt_prevista,
					ie_opcao_fabricante
				into STRICT	nr_registro_anvisa_w,
					cd_ref_fabricante_imp_w,
					ie_via_administracao_w,
					ie_frequencia_dose_w,
					dt_prevista_w,
					ie_opcao_fabricante_w
				from	pls_lote_anexo_mat_aut
				where	nr_seq_req_mat	= c02_w.nr_sequencia;
			exception
			when others then
				nr_registro_anvisa_w		:= null;
				cd_ref_fabricante_imp_w		:= null;
				ie_via_administracao_w		:= null;
				ie_opcao_fabricante_w		:= null;
			end;

			if (ie_tipo_despesa_w = '7') or ((trim(both c02_w.cd_material_ptu) IS NOT NULL AND (trim(both c02_w.cd_material_ptu))::text <> '')) then
				ds_material_ptu_w	:= substr(pls_obter_desc_material(c02_w.nr_seq_material),1,80);
			else
				ds_material_ptu_w	:= '';
			end if;

			insert	into ptu_pedido_compl_aut_serv(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
				 cd_servico, qt_servico, dt_atualizacao,
				 nm_usuario, vl_servico, ds_opme,
				 cd_servico_conversao, nr_seq_req_mat, nm_usuario_nrec,
				 dt_atualizacao_nrec, cd_anvisa, cd_referencia_fab,
				 ie_tipo_anexo, dt_provavel, cd_via_administracao,
				 qt_frequencia_adm, ie_pacote, ie_tipo_ordem,
				 vl_uni_servico)
			values (nr_seq_pedido_compl_serv_w, nr_seq_pedido_novo_p, ie_tipo_tabela_w,
				 cd_servico_w, qt_material_w, clock_timestamp(),
				 nm_usuario_p, vl_total_w, ds_material_ptu_w,
				 c02_w.cd_material_ptu, c02_w.nr_sequencia, nm_usuario_p,
				 clock_timestamp(), nr_registro_anvisa_w, cd_ref_fabricante_imp_w,
				 CASE WHEN ie_tipo_anexo_w='OP' THEN 3 WHEN ie_tipo_anexo_w='QU' THEN 1 WHEN ie_tipo_anexo_w='RA' THEN 2  ELSE 9 END , dt_prevista_w, ie_via_administracao_w,
				 ie_frequencia_dose_w, 'N', CASE WHEN ie_tipo_anexo_w='OP' THEN ie_opcao_fabricante_w  ELSE null END ,
				 c02_w.vl_material);
		elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then

			begin
				select	ie_tipo_anexo
				into STRICT	ie_tipo_anexo_w
				from	pls_guia_plano_mat
				where	nr_sequencia	= c02_w.nr_sequencia;
			exception
			when others then
				ie_tipo_anexo_w	:= null;
			end;

			begin
				select	nr_registro_anvisa,
					cd_ref_fabricante_imp,
					ie_via_administracao,
					ie_frequencia_dose,
					dt_prevista,
					ie_opcao_fabricante
				into STRICT	nr_registro_anvisa_w,
					cd_ref_fabricante_imp_w,
					ie_via_administracao_w,
					ie_frequencia_dose_w,
					dt_prevista_w,
					ie_opcao_fabricante_w
				from	pls_lote_anexo_mat_aut
				where	nr_seq_plano_mat	= c02_w.nr_sequencia;
			exception
			when others then
				nr_registro_anvisa_w		:= null;
				cd_ref_fabricante_imp_w		:= null;
				ie_via_administracao_w		:= null;
				ie_frequencia_dose_w		:= null;
				ie_opcao_fabricante_w		:= null;
			end;

			if (ie_tipo_despesa_w = '7') or ((trim(both c02_w.cd_material_ptu) IS NOT NULL AND (trim(both c02_w.cd_material_ptu))::text <> '')) then
				ds_material_ptu_w	:= substr(pls_obter_desc_material(c02_w.nr_seq_material),1,80);
			else
				ds_material_ptu_w	:= '';
			end if;

			insert	into ptu_pedido_compl_aut_serv(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
				 cd_servico, qt_servico, dt_atualizacao,
				 nm_usuario, vl_servico, ds_opme,
				 cd_servico_conversao, nr_seq_guia_mat, nm_usuario_nrec,
				 dt_atualizacao_nrec, cd_anvisa, cd_referencia_fab,
				 ie_tipo_anexo, dt_provavel, cd_via_administracao,
				 qt_frequencia_adm, ie_pacote, ie_tipo_ordem,
				 vl_uni_servico)
			values (nr_seq_pedido_compl_serv_w, nr_seq_pedido_novo_p, ie_tipo_tabela_w,
				 cd_servico_w, qt_material_w, clock_timestamp(),
				 nm_usuario_p, vl_total_w, ds_material_ptu_w,
				 c02_w.cd_material_ptu, c02_w.nr_sequencia, nm_usuario_p,
				 clock_timestamp(), nr_registro_anvisa_w, cd_ref_fabricante_imp_w,
				 CASE WHEN ie_tipo_anexo_w='OP' THEN 3 WHEN ie_tipo_anexo_w='QU' THEN 1 WHEN ie_tipo_anexo_w='RA' THEN 2  ELSE 9 END , dt_prevista_w, ie_via_administracao_w,
				 ie_frequencia_dose_w, 'N', CASE WHEN ie_tipo_anexo_w='OP' THEN ie_opcao_fabricante_w  ELSE null END ,
				 c02_w.vl_material);

		end if;

		if (coalesce(c02_w.cd_material_ptu,0)	<> 0) then
			if (coalesce(c02_w.vl_material,0)	= 0) and (coalesce(ds_material_ptu_w,'X')	<> 'X') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(196741);
			end if;

			select	count(1)
			into STRICT	qt_reg_generico_w
			from	pls_regra_generico_ptu
			where	cd_proc_mat_generico	= c02_w.cd_material_ptu
			and	ie_situacao		= 'A';

			if (qt_reg_generico_w	> 0) and (coalesce(ds_material_ptu_w,'X')	= 'X') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(216706);
			end if;
		end if;
	end if;
end loop;

<<final>>
qt_registros_w	:= 0;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_envio_scs_ws_pck.ptu_envio_ped_compl_aut ( nr_seq_guia_p pls_guia_plano_proc.nr_seq_guia%type, nr_seq_requisicao_p pls_requisicao_proc.nr_seq_requisicao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_pedido_novo_p INOUT ptu_pedido_compl_aut.nr_sequencia%type) FROM PUBLIC;
