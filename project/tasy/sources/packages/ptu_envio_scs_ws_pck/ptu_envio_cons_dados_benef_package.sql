-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

-- Enviar consulta dados do beneficiário, transação 00412 - Consulta Dados Beneficiario.
CREATE OR REPLACE PROCEDURE ptu_envio_scs_ws_pck.ptu_envio_cons_dados_benef ( cd_unimed_benef_p ptu_consulta_beneficiario.cd_unimed_beneficiario%type, cd_usuario_plano_p text, nm_beneficiario_p ptu_consulta_beneficiario.nm_beneficiario%type, sobrenome_benef_p ptu_consulta_beneficiario.sobrenome_beneficiario%type, dt_nascimento_p ptu_consulta_beneficiario.dt_nascimento%type, nr_versao_ptu_p ptu_consulta_beneficiario.nr_versao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_cons_benef_p INOUT ptu_consulta_beneficiario.nr_sequencia%type ) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Preparar os dados para enviar o pedido de Consulta Dados Beneficiário a Unimed Destino
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:

Verificar para passar o campo Dt nascimento, somente se houver valor
Verificar se o tratamento para a quantidade de caracteres da carteirinha não pode ser feito direto no Delphi

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_cooperativa_w		ptu_consulta_beneficiario.cd_unimed_executora%type;
cd_unimed_w			ptu_consulta_beneficiario.cd_unimed%type;
cd_usuario_plano_w		ptu_consulta_beneficiario.cd_usuario_plano%type;


BEGIN


cd_cooperativa_w	:= pls_obter_unimed_estab(cd_estabelecimento_p);
cd_unimed_w		:= substr(cd_usuario_plano_p,1,4);
cd_usuario_plano_w	:= substr(cd_usuario_plano_p,5,17);


select	nextval('ptu_consulta_beneficiario_seq')
into STRICT	nr_seq_cons_benef_p
;

insert	into ptu_consulta_beneficiario(nr_sequencia, cd_transacao, ie_tipo_cliente,
	 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
	 dt_atualizacao, nm_usuario, cd_unimed,
	 cd_usuario_plano, dt_nascimento, nm_beneficiario,
	 sobrenome_beneficiario,  nm_usuario_nrec, dt_atualizacao_nrec,
	 nr_versao)
values ( nr_seq_cons_benef_p, '00412', 'U',
	 cd_cooperativa_w, cd_unimed_benef_p, nr_seq_cons_benef_p,
	 clock_timestamp(), nm_usuario_p, cd_unimed_w,
	 cd_usuario_plano_w, dt_nascimento_p, substr(nm_beneficiario_p,1,25),
	 substr(sobrenome_benef_p,1,10),  nm_usuario_p, clock_timestamp(),
	 nr_versao_ptu_p);

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_envio_scs_ws_pck.ptu_envio_cons_dados_benef ( cd_unimed_benef_p ptu_consulta_beneficiario.cd_unimed_beneficiario%type, cd_usuario_plano_p text, nm_beneficiario_p ptu_consulta_beneficiario.nm_beneficiario%type, sobrenome_benef_p ptu_consulta_beneficiario.sobrenome_beneficiario%type, dt_nascimento_p ptu_consulta_beneficiario.dt_nascimento%type, nr_versao_ptu_p ptu_consulta_beneficiario.nr_versao%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_cons_benef_p INOUT ptu_consulta_beneficiario.nr_sequencia%type ) FROM PUBLIC;
