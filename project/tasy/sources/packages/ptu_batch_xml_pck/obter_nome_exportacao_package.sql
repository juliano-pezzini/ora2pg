-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ptu_batch_xml_pck.obter_nome_exportacao ( nr_seq_referencia_p bigint, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, cd_cooperativa_p pls_congenere.cd_cooperativa%type, dt_referencia_p timestamp, ie_tipo_ptu_p text, -- Tipo do PTU
 ie_opcao_p text ) RETURNS varchar AS $body$
 -- Compactado ou descompactado por exemplo
DECLARE


ds_retorno_w			varchar(255);
cd_versao_ptu_xml_w		ptu_regra_interface.cd_versao_ptu_xml%type;
cd_unimed_origem_w		varchar(4);
nr_fatura_w			varchar(30);
nr_mov_w			bigint;
dt_pacote_w			timestamp;
nr_seq_arquivo_w		ptu_pacote.nr_seq_arquivo%type;
dt_geracao_a1200_w		ptu_pacote.dt_geracao%type;
ie_tipo_cobranca_fatura_w	ptu_fatura.ie_tipo_cobranca_fatura%type;
qtd_aviso_w			smallint;
nm_usuario_w			varchar(15);
ie_tipo_exportacao_w ptu_fatura.ie_tipo_exportacao%type;
dt_geracao_w			ptu_fatura.dt_geracao%type;
ie_atualizar_reg_nf_a500_w 	pls_parametros.ie_atualizar_reg_nf_a500%type;
nr_seq_ptu_fatura_w 		ptu_fatura.nr_sequencia%type;


BEGIN

if (ie_tipo_ptu_p = 'A410') then
	cd_unimed_origem_w	:= substr(lpad(coalesce(pls_obter_unimed_estab(cd_estabelecimento_p),'0'),4,'0'),2,3);
	ds_retorno_w		:= 'CR'||to_char(clock_timestamp(),'ddmmyy')||'.'||cd_unimed_origem_w;
	
elsif (ie_tipo_ptu_p = 'A500') then
	
	nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;
	ie_tipo_cobranca_fatura_w	:= 'C';
	
	update 	ptu_fatura
	set 	ie_tipo_exportacao = 'XML'
	where  	nr_sequencia = nr_seq_referencia_p;

	COMMIT;

	select 	max(pt.nr_sequencia )
	into STRICT   	nr_seq_ptu_fatura_w
	from    ptu_fatura pt
	where   pt.nr_sequencia  = nr_seq_referencia_p;

	select  coalesce(max(ie_atualizar_reg_nf_a500),'N')
	into STRICT    ie_atualizar_reg_nf_a500_w
	from    pls_parametros
	where   cd_estabelecimento  = cd_estabelecimento_p;

	if (ie_atualizar_reg_nf_a500_w in ('S','D')) then
		CALL pls_atualizar_infor_nf_ptu( nr_seq_ptu_fatura_w, nm_usuario_w, 'S', ie_atualizar_reg_nf_a500_w);
	end if;	
	
	select  substr((pf.cd_unimed_origem)::numeric ,1,3),
		coalesce(pf.nr_fatura,pf.nr_nota_credito_debito),
		coalesce(pf.ie_tipo_cobranca_fatura,'C'),
		coalesce(pf.ie_tipo_exportacao,'TXT'),
		pf.dt_geracao
	into STRICT  	cd_unimed_origem_w,
		nr_fatura_w,
		ie_tipo_cobranca_fatura_w,
		ie_tipo_exportacao_w,
		dt_geracao_w
	from  	ptu_fatura pf
	where  	pf.nr_sequencia  = nr_seq_referencia_p;
	
	-- se for cobranca

	if ie_tipo_cobranca_fatura_w = 'C' then
		if (length(nr_fatura_w) <= 7) then
			nr_fatura_w	:= to_char(lpad(nr_fatura_w,7,'_'));
		else
			nr_fatura_w	:= lpad(to_char(substr(substr(nr_fatura_w,length(nr_fatura_w)-6,7),1,7)),7,'_');
		end if;
		
		-- Monta nome

		ds_retorno_w	:= 'N'||nr_fatura_w;
	
	-- se for aviso de cobranca

	elsif ie_tipo_cobranca_fatura_w = 'A' then
		
		nm_usuario_w	:= coalesce(nm_usuario_w,'AVXML');
		
		select	coalesce(max(pl.seq_geracao),0) + 1
		into STRICT  	qtd_aviso_w
		from   	pls_seq_aviso_cobranca pl
		where  	trunc(pl.dt_geracao)    = trunc(dt_geracao_w)
		and    	pl.ie_tipo = ie_opcao_p;

		ds_retorno_w  := 'AV'|| to_char(dt_geracao_w,'ddmmyy') || lpad(qtd_aviso_w,3,'0');

		-- se for o primeiro do dia insere na tabela

		if qtd_aviso_w  = 1 then
			insert into pls_seq_aviso_cobranca(	nr_sequencia,				dt_geracao,		seq_geracao,
								ie_tipo,				dt_atualizacao,		nm_usuario,
								dt_atualizacao_nrec,			nm_usuario_nrec)
			values (				nextval('pls_seq_aviso_cobranca_seq'),	trunc(clock_timestamp()),		qtd_aviso_w,
								ie_opcao_p,				clock_timestamp(), 		nm_usuario_w,
								clock_timestamp(),				nm_usuario_w);
		else
			-- senao apenas atualiza

			update 	pls_seq_aviso_cobranca
			set 	seq_geracao 	= qtd_aviso_w,
				nm_usuario	= nm_usuario_w,
				dt_atualizacao	= clock_timestamp()
			where 	dt_geracao 	= trunc(dt_geracao_w)
			and 	ie_tipo 	= ie_opcao_p;
		end if;	
	end if;
	
	-- Monta extenso

	if (ie_opcao_p = 'FA') then
		ds_retorno_w := ds_retorno_w ||'.'|| lpad(to_char(cd_unimed_origem_w),3,'0');
	elsif (ie_opcao_p = 'FZIP') then
	
		if 	ie_tipo_exportacao_w = 'TXT' then
			if 	ie_tipo_cobranca_fatura_w = 'A' then
				ds_retorno_w := 'XML_' || ds_retorno_w ||'.zip';
			else
				ds_retorno_w := 'TXT_' || ds_retorno_w ||'.zip';
			end if;
		else
			ds_retorno_w := 'XML_' || ds_retorno_w ||'.zip';
		end if;
	end if;
	
elsif (ie_tipo_ptu_p = 'A200') then
	begin
	select	'V' || substr(a.nm_arquivo,2,15)
	into STRICT	ds_retorno_w
	from	ptu_intercambio			a,
		ptu_retorno_movimentacao	b
	where	a.nr_sequencia = b.nr_seq_intercambio
	and	b.nr_sequencia = nr_seq_referencia_p;
	exception
	when others then
		ds_retorno_w := null;
	end;
elsif (ie_tipo_ptu_p = 'A1300') then
	select	count(1)
	into STRICT	nr_mov_w
	from	ptu_mov_benef_destino
	where	lpad(cd_unimed_destino,4,'0') = lpad(cd_cooperativa_p,4,'0')
	and	trunc(dt_geracao_arquivo) = trunc(clock_timestamp());
	
	nr_mov_w := nr_mov_w + 1;
	ds_retorno_w	:= 'CN'||to_char(clock_timestamp(),'ddmmyy')||lpad(nr_mov_w, 4, 0)||'.'|| substr(lpad(pls_obter_cd_cooperativa(cd_estabelecimento_p),4,0),2, 3);
elsif (ie_tipo_ptu_p = 'A1200') then
	
	select	max(nr_seq_arquivo),
		max(cd_unimed_origem),
		max(dt_geracao)
	into STRICT	nr_seq_arquivo_w,
		cd_unimed_origem_w,
		dt_geracao_a1200_w
	from	ptu_pacote
	where	nr_sequencia	= nr_seq_referencia_p;
	
	if (coalesce(nr_seq_arquivo_w::text, '') = '') then
		select	coalesce(max(nr_seq_arquivo),0) + 1
		into STRICT	nr_seq_arquivo_w
		from	ptu_pacote
		where	trunc(dt_geracao_arquivo)	= trunc(coalesce(dt_geracao_a1200_w,clock_timestamp()))
		and	cd_unimed_origem		= cd_unimed_origem_w
		and	nr_sequencia			= nr_seq_referencia_p;
	else
		nr_seq_arquivo_w := nr_seq_arquivo_w + 1;
	end if;
	
	cd_unimed_origem_w	:= substr(lpad(somente_numero(cd_unimed_origem_w),3,'0'),1,3);
	ds_retorno_w		:= 'PC' || to_char(coalesce(dt_geracao_a1200_w, clock_timestamp()),'ddmmyy') || lpad(coalesce(nr_seq_arquivo_w, 1),2,'0') || '.' || cd_unimed_origem_w;

end if;


return	ds_retorno_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ptu_batch_xml_pck.obter_nome_exportacao ( nr_seq_referencia_p bigint, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_congenere_p pls_congenere.nr_sequencia%type, cd_cooperativa_p pls_congenere.cd_cooperativa%type, dt_referencia_p timestamp, ie_tipo_ptu_p text, ie_opcao_p text ) FROM PUBLIC;
