-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_sne ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint, ie_solucoes_continuas_p text) AS $body$
DECLARE

	ds_sep_bv_w				varchar(50);				
	nr_seq_solucao_w		integer;
	nr_seq_horario_w		bigint;
	ie_status_horario_w		varchar(15);
	ds_comando_update_w		varchar(4000);
	ie_utiliza_servico_w	varchar(1);
	current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp			timestamp;
	nr_horario_w			integer;
	nr_Seq_servico_w		bigint;
	ie_ciente_w				varchar(1);
	ie_recem_nato_w			varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();
	ie_sne_por_horario_w	varchar(1);
	cd_intervalo_w			varchar(7);
	ie_status_sne_w			varchar(5);
	ie_status_w				varchar(1);
	ie_horario_suspenso_w   varchar(1);
	nr_prescricoes_agrup_w	varchar(4000);
	nr_seq_dieta_cpoe_w		prescr_material.nr_seq_dieta_cpoe%type;
	cd_material_w			prescr_material.cd_material%type;
	qt_dose_w               prescr_material.qt_dose%type;

	c01 CURSOR FOR	
	SELECT	a.nr_prescricao,
			x.nr_sequencia,
			coalesce(x.ie_suspenso,'N') ie_status,
			coalesce(x.ie_horario_susp, 'N') ie_horario_suspenso,
			x.dt_status,
			null,
			x.ie_ciente,
			x.cd_intervalo,
			substr(obter_status_solucao_prescr(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status_solucao,			
			x.nr_seq_dieta_cpoe
	from	prescr_material x,
			prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	--and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
	and	((obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico,x.dt_lib_material), coalesce(a.dt_liberacao,x.dt_lib_material), coalesce(a.dt_liberacao_farmacia,x.dt_lib_material), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	x.ie_agrupador = 8
	and	x.ie_status = 'N'
	and 	((ie_utiliza_servico_w <> 'S') or (get_servico_sem_dieta = 'S'))
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SNE',
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		x.cd_material, 
																		null, 
																		null, 
																		null,
																		a.cd_Setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																		null) = 'S')))	 -- nr_seq_exame_p
	and	x.dt_status between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		a.nr_prescricao,
		x.nr_sequencia,
		coalesce(x.ie_suspenso,'N'),
		coalesce(x.ie_horario_susp, 'N'),
		x.dt_status,
		x.ie_ciente,
		x.cd_intervalo,
		substr(obter_status_solucao_prescr(2,a.nr_prescricao,x.nr_sequencia),1,3),
		x.nr_seq_dieta_cpoe
	
union all

	SELECT	a.nr_prescricao,
			x.nr_sequencia,
			CASE WHEN coalesce(b.dt_liberacao::text, '') = '' THEN 'Y'  ELSE b.ie_status_adep END ,
			null,
			b.dt_servico dt_status,
			b.nr_sequencia,
			x.ie_ciente,
			x.cd_intervalo,
			substr(obter_status_solucao_prescr(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status_solucao,			
			x.nr_seq_dieta_cpoe
	from	prescr_material x,
			nut_atend_serv_dia b,
			prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and 	x.nr_prescricao = b.nr_prescricao
	and 	x.nr_sequencia = b.nr_seq_material
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	--and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
	and	((obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico,x.dt_lib_material), coalesce(a.dt_liberacao,x.dt_lib_material), coalesce(a.dt_liberacao_farmacia,x.dt_lib_material), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	x.ie_agrupador = 8
	and 	ie_utiliza_servico_w = 'S'
	and	 get_servico_sem_dieta = 'N'
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SNE', 
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		x.cd_material, 
																		null, 
																		null, 
																		null,
																		a.cd_Setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																		null) = 'S')))	  -- nr_seq_exame_p
	and	b.dt_servico between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		a.nr_prescricao,
		x.nr_sequencia,
		CASE WHEN coalesce(b.dt_liberacao::text, '') = '' THEN 'Y'  ELSE b.ie_status_adep END ,
		b.dt_servico,
		b.nr_sequencia,
		x.ie_ciente,
		x.cd_intervalo,
		substr(obter_status_solucao_prescr(2,a.nr_prescricao,x.nr_sequencia),1,3),
		x.nr_seq_dieta_cpoe
	order by dt_status;
	c02 CURSOR FOR
	SELECT	a.nr_prescricao,
			x.nr_sequencia,
			x.cd_material,
			CASE WHEN CASE WHEN coalesce(c.dt_primeira_checagem::text, '') = '' THEN substr(obter_status_hor_sol_adep(c.dt_inicio_horario,c.dt_fim_horario,c.dt_suspensao,c.dt_interrupcao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep,a.nr_prescricao,null),1,15)  ELSE 'Q' END ='N' THEN CASE WHEN coalesce(coalesce(c.ie_ciente,x.ie_ciente),'N')='S' THEN 'W'  ELSE 'N' END   ELSE CASE WHEN coalesce(c.dt_primeira_checagem::text, '') = '' THEN substr(obter_status_hor_sol_adep(c.dt_inicio_horario,c.dt_fim_horario,c.dt_suspensao,c.dt_interrupcao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep,a.nr_prescricao,null),1,15)  ELSE 'Q' END  END ,
			c.dt_horario,
			c.nr_Sequencia,
			coalesce(c.ie_ciente,x.ie_ciente),
			x.cd_intervalo,
			substr(obter_status_solucao_prescr(2,a.nr_prescricao,x.nr_sequencia),1,3) ie_status_solucao,
			x.nr_seq_dieta_cpoe,
			x.qt_dose
	from	prescr_Material x,
			prescr_medica a,
			prescR_mat_hor c
	where	x.nr_prescricao = c.nr_prescricao
	and	x.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = x.nr_prescricao
	and	c.nr_seq_material  = x.nr_Sequencia
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	c.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	--and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
	and	((obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico,x.dt_lib_material), coalesce(a.dt_liberacao,x.dt_lib_material), coalesce(a.dt_liberacao_farmacia,x.dt_lib_material), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and 	x.ie_Agrupador = 8
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	coalesce(c.ie_adep,'S') = 'S'
	and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_sol_realizadas_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SNE',
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null,
																		a.cd_Setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	((ie_prescr_setor_p = 'N') or 
		 (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))	 
	group by
		c.dt_horario,
		c.nr_Sequencia,
		x.nr_sequencia,
		a.nr_prescricao,
		c.dt_inicio_horario,
		c.dt_fim_horario,
		c.dt_interrupcao,
		c.dt_primeira_checagem,
		c.dt_suspensao,
		c.ie_dose_especial,
		c.nr_seq_processo,
		c.nr_seq_area_prep,
		c.dt_prev_fim_horario,
		coalesce(c.ie_ciente,x.ie_ciente),
		x.cd_intervalo,
		x.nr_seq_dieta_cpoe,
		x.cd_material,
		x.qt_dose
	order by c.dt_horario;	
	
BEGIN
	ds_sep_bv_w	:= obter_separador_bv;
	ie_utiliza_servico_w := coalesce(get_usa_servico_dietas,'N');
	if (get_ie_SNE_por_horario = 'N') then
		open c01;
		loop
		fetch c01 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				nr_seq_solucao_w,
				ie_status_horario_w,
				ie_horario_suspenso_w,
				current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp,
				nr_Seq_servico_w,
				ie_ciente_w,
				cd_intervalo_w,
				ie_status_sne_w,
				nr_seq_dieta_cpoe_w;				
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp );
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
				if (ie_status_horario_w = 'N' AND ie_horario_suspenso_w = 'S') then
					ie_status_horario_w := ie_horario_suspenso_w;
				end if;
                if ((ie_status_horario_w = 'N' AND ie_horario_suspenso_w = 'N') or
                        ((coalesce(ie_status_horario_w::text, '') = '') and (coalesce(ie_status_sne_w, 'N') = 'S'))) then
                    ie_status_horario_w := ie_status_sne_w;
                end if;
				ds_comando_update_w	:=	' update w_adep_t ' ||
										' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
										' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
										' ie_ciencia = :ie_ciencia ' ||
										' where nm_usuario = :nm_usuario ' ||
										' and ie_tipo_item = :ie_tipo ' ||
										' and nvl(cd_intervalo,''0'') = nvl(:cd_intervalo,''0'') ' ||
										' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ' ||
										' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||												
										' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||										
										' and nvl(ie_status_item,''N'') = :ie_status_item ';
				CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_Seq_servico_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'ie_ciencia=' || ie_ciente_w || ds_sep_bv_w ||
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w ||
											'ie_tipo=SNE' || ds_sep_bv_w ||
											'cd_intervalo=' || cd_intervalo_w || ds_sep_bv_w ||
											'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w ||
											'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||											
											'ie_status_item=' || ie_status_sne_w || ds_sep_bv_w);
				commit;
			end if;
			end;
		end loop;
		close c01;
	else
		open c02;
		loop
		fetch c02 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				nr_seq_solucao_w,
				cd_material_w,
				ie_status_horario_w,
				current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp,
				nr_Seq_servico_w,
				ie_ciente_w,
				cd_intervalo_w,
				ie_status_sne_w,
				nr_seq_dieta_cpoe_w,
				qt_dose_w;				
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp );
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
				if (coalesce(ie_status_sne_w,'N') not in ('S', 'T')) then
					ie_status_sne_w := 'AGRUP';
				end if;
				if (ie_status_sne_w = 'T') and (current_setting('adep_gerar_horarios_pck.nr_prescricoes_sne_term_w')::(varchar(4000) IS NOT NULL AND (varchar(4000))::text <> '')) then
					nr_prescricoes_agrup_w := current_setting('adep_gerar_horarios_pck.nr_prescricoes_sne_term_w')::varchar(4000);
				else
					nr_prescricoes_agrup_w := current_setting('adep_gerar_horarios_pck.nr_prescricoes_sne_w')::varchar(4000);
				end if;
				--Para os horarios de SNE, devem ser agrupados os horarios, caso o item nao tenha sido terminado.
				ds_comando_update_w	:=	' update	w_adep_t ' ||
										'			set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
										'			nr_prescricoes = adep_juntar_prescricao(:nr_prescricoes_agrup,:nr_prescricao), ' ||--adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
										'			ie_ciencia = ie_ciencia ' ||
										' where		(((ie_status_sne = ''AGRUP'') and ' ||
										'			  (ie_status_item not in (''S'', ''T''))) or ' ||
										'			 (ie_status_sne = ie_status_item)) ' ||
										' and		(((coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0)) and  ' ||
										'			  (coalesce(nr_seq_cpoe,coalesce(nr_seq_cpoe,0)) = coalesce(nr_seq_cpoe,0)) and  ' ||
										'			  (coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0))) or ' ||										
										'			 (((ie_agrupa_acm_sn = ''S'') or ' ||
										'			   (coalesce(ie_acm_sn,''N'')  <> ''S'')) and ' ||
										'			  (coalesce(nr_prescricao,coalesce(nr_prescricao,0)) <> coalesce(nr_prescricao,0)) and' || 
										'			  (obter_se_contido(nr_prescricao, ''('' || nr_prescricoes || '')'') = ''S'') and ' ||
										'			  (ie_solucoes_continuas_p = ''N''))) ' ||
										' and		coalesce(cd_intervalo,''0'') = coalesce(cd_intervalo,''0'') ' ||
										' and		ie_tipo_item = ie_tipo ' || 
										' and		cd_item = cd_item ' || 
										' and		nm_usuario = nm_usuario ' ||
										' and       	qt_item = qt_item' ;
				exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_Seq_servico_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 											
											'ie_ciencia=' || ie_ciente_w || ds_sep_bv_w ||
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
											'ie_tipo=SNE' || ds_sep_bv_w ||
											'cd_intervalo=' || cd_intervalo_w || ds_sep_bv_w ||
											'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w ||
											'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
											'ie_agrupa_acm_sn=' || ie_agrupar_acm_sn_p || ds_sep_bv_w ||
											'ie_solucoes_continuas_p=' || ie_solucoes_continuas_p || ds_sep_bv_w ||
											'nr_prescricoes=' || nr_prescricoes_sne_w || ds_sep_bv_w ||
											'nr_prescricoes_agrup=' || nr_prescricoes_agrup_w || ds_sep_bv_w ||
											'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
											'cd_item=' || to_char(cd_material_w) || ds_sep_bv_w ||
											'ie_status_sne=' || ie_status_sne_w || ds_sep_bv_w ||
											'qt_item=' || qt_dose_w);
				ie_status_sne_w	:= '';
				commit;
			end if;
			end;
		end loop;
		close c02;
	end if;
	Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'SNE', 'N');
	end adep_gerar_horarios_pck.adep_sincronizar_sne();
	procedure adep_gerar_horarios_pck.adep_sincronizar_npt_adul(
			cd_estabelecimento_p		number,
			cd_setor_usuario_p		number,
			cd_perfil_p			number,
			nm_usuario_p			varchar2,
			nr_atendimento_p		number,
			dt_inicial_horarios_p		date,
			dt_final_horarios_p		date,					
			dt_validade_limite_p		date,					
			ie_exibir_sol_realizadas_p	varchar2,
			ie_exibir_sol_suspensas_p	varchar2,
			ie_regra_inclusao_p		varchar2,
			ie_data_lib_prescr_p		varchar2,
			ie_exibir_suspensos_p		varchar2,
			ie_agrupar_acm_sn_p		varchar2,
			dt_horario_p			date,
			nr_horario_p			integer,
			ie_exibe_sem_lib_farm_p		varchar2,
			ie_prescr_setor_p		varchar2,
			cd_setor_paciente_p		number) as
	ds_sep_bv_w		varchar2(50);				
	nr_seq_solucao_w	number(10,0);
	nr_seq_horario_w	number(15);
	ie_status_horario_w	varchar2(15);
	ds_comando_update_w	varchar2(4000);
	dt_horario_w	date;
	nr_horario_w	number(5);
	ie_recem_nato_w		varchar2(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	dt_prev_term_w		date;
	qt_hora_inf_w		number(3);
	nr_seq_npt_cpoe_w	nut_pac.nr_seq_npt_cpoe%type;
	dt_preparo_w		date;
	cursor c01 is
		select	a.nr_prescricao,
				x.nr_sequencia,
				decode(nvl(b.ie_status,'N'),'INT','T','T','A',nvl(b.ie_status,'N')) ie_status,
				b.dt_horario,
				b.nr_sequencia,
				nvl(x.qt_hora_inf,0),
				x.nr_seq_npt_cpoe
		from		nut_paciente_hor b,
				nut_pac x,
				prescr_medica a
		where	x.nr_prescricao = a.nr_prescricao
		and		b.nr_seq_nut_protocolo = x.nr_sequencia
		and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,nvl(a.ie_adep,'S')) = 'S'
		and		a.nr_atendimento = nr_atendimento_p
		and		a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
		and		((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
				 ((ie_exibe_sem_lib_farm_p = 'S') and
				  (nvl(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
		and		((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
		and		x.dt_suspensao is null
		and		((ie_exibir_suspensos_p = 'S') or (x.dt_suspensao is null))
		and		((nvl(b.ie_horario_especial,'N') = 'N') or (b.dt_fim_horario is not null))
		and		((a.dt_liberacao_farmacia is not null) or (Get_NPTAntesFarmacia = 'N'))
		and		((nvl(a.ie_recem_nato,'N')	= 'N') or
				 (ie_recem_nato_w		= 'S'))		
		and		((ie_regra_inclusao_p = 'S') or
				 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'NAN', 
																				cd_estabelecimento_p, 
																				cd_setor_usuario_p, 
																				cd_perfil_p, 
																				null, 
																				null, 
																				null, 
																				null,
																				a.cd_Setor_atendimento,
																				null,
																				null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																				null) = 'S'))) -- nr_seq_exame_p
		and		((b.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w) or (nvl(b.ie_horario_especial,'N') = 'S'))
		and		((ie_prescr_setor_p = 'N') or ((ie_prescr_setor_p = 'S') and (a.cd_setor_atendimento = cd_setor_paciente_p)))
		and		((get_ie_vigente = 'N') or (sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440));
	begin
	ds_sep_bv_w	:= obter_separador_bv;
	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ie_status_horario_w,
			dt_horario_w,
			nr_seq_horario_w,
			qt_hora_inf_w,
			nr_seq_npt_cpoe_w;
	exit when c01%notfound;
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( dt_horario_w );
		if (nr_horario_w is not null) then
			if	(ie_status_horario_w	= 'I') and
				(qt_hora_inf_w			> 0) then
				dt_prev_term_w	:= dt_horario_w + (qt_hora_inf_w / 24);
			elsif (ie_status_horario_w	= 'N') then	
				select	max(a.dt_preparo)
				into	dt_preparo_w
				from	adep_processo a,
						prescr_mat_hor b,
						prescr_material c
				where	a.nr_sequencia = b.nr_seq_processo
				and		b.nr_prescricao = c.nr_prescricao
				and		b.nr_seq_material = c.nr_sequencia
				and		c.nr_prescricao = nr_prescricao_w
				and		c.nr_seq_nut_pac = nr_seq_solucao_w;
				if	(dt_preparo_w is not null) then
					ie_status_horario_w	:= 'P';
				end if;
			end if;
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,nr_prescricao), ' ||
							' dt_prev_term = dt_prev_term ' ||							
							' where nm_usuario = nm_usuario ' ||
							' and ie_tipo_item = ie_tipo ' ||
							' and coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0) ' ||
							' and coalesce(nr_seq_cpoe,coalesce(nr_seq_cpoe,0)) = coalesce(nr_seq_cpoe,0) ' ||
							' and coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0) ';
			exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
										'nr_seq_cpoe=' || to_char(nr_seq_npt_cpoe_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=NAN' || ds_sep_bv_w ||
										'dt_prev_term=' || to_char(dt_prev_term_w,'dd/mm/yyyy hh24:mi:ss') || ds_sep_bv_w ||										
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'NPA', 'N');
	end adep_gerar_horarios_pck.adep_sincronizar_npt_adul();
	procedure adep_gerar_horarios_pck.adep_sincronizar_npt_neo(
			cd_estabelecimento_p		number,
			cd_setor_usuario_p		number,
			cd_perfil_p			number,
			nm_usuario_p			varchar2,
			nr_atendimento_p		number,
			dt_inicial_horarios_p		date,
			dt_final_horarios_p		date,					
			dt_validade_limite_p		date,					
			ie_exibir_sol_realizadas_p	varchar2,
			ie_exibir_sol_suspensas_p	varchar2,
			ie_regra_inclusao_p		varchar2,
			ie_data_lib_prescr_p		varchar2,
			ie_exibir_suspensos_p		varchar2,
			ie_agrupar_acm_sn_p		varchar2,
			dt_horario_p			date,
			nr_horario_p			integer,
			ie_exibe_sem_lib_farm_p		varchar2,
			ie_prescr_setor_p		varchar2,
			cd_setor_paciente_p		number,
			ie_palm_p				varchar2) as
	ds_sep_bv_w		varchar2(50);				
	nr_seq_solucao_w	number(10,0);
	nr_seq_horario_w	number(15);
	ie_status_horario_w	varchar2(15);
	ds_comando_update_w	varchar2(4000);
	dt_horario_w	date;
	nr_horario_w	number(5);
	ie_recem_nato_w		varchar2(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	dt_prev_term_w		date;
	qt_hora_inf_w		number(3);
	nr_seq_npt_cpoe_w	nut_pac.nr_seq_npt_cpoe%type;
	cursor c01 is
		select	a.nr_prescricao,
				x.nr_sequencia,
				decode(nvl(b.ie_status,'N'),'INT','T','T','A',nvl(b.ie_status,'N')) ie_status,
				b.dt_horario,
				b.nr_sequencia,
				nvl(x.qt_hora_inf,0),
				x.nr_seq_npt_cpoe
		from		nut_paciente_hor b,
				nut_pac x,
				prescr_medica a
		where	x.nr_prescricao = a.nr_prescricao
		and		b.nr_seq_nut_protocolo = x.nr_sequencia
		and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,nvl(a.ie_adep,'S')) = 'S'
		and		a.nr_atendimento = nr_atendimento_p
		and		a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w		
		and		((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
				 ((ie_exibe_sem_lib_farm_p = 'S') and
				  (nvl(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))				  
		and		((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
		and		((ie_exibir_sol_suspensas_p = 'S') or (x.dt_suspensao is null))
		and		x.dt_suspensao is null
		and		((nvl(b.ie_horario_especial,'N') = 'N') and (x.ie_status = 'N'))
		and		((a.dt_liberacao_farmacia is not null) or (Get_NPTAntesFarmacia = 'N'))		
		and		((nvl(a.ie_recem_nato,'N')	= 'N') or
				 (ie_recem_nato_w		= 'S'))		
		and		((ie_regra_inclusao_p = 'S') or
				 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'NPN', 
																				cd_estabelecimento_p, 
																				cd_setor_usuario_p, 
																				cd_perfil_p, 
																				null, 
																				null, 
																				null, 
																				null,
																				a.cd_Setor_atendimento,
																				null,
																				null, 
																				null) = 'S'))) 																				
		and		((b.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w) or (nvl(b.ie_horario_especial,'N') = 'S'))
		and		((ie_prescr_setor_p = 'N') or ((ie_prescr_setor_p = 'S') and (a.cd_setor_atendimento = cd_setor_paciente_p)))
		and		((get_ie_vigente = 'N') or (sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))		
		and		ie_npt_adulta = 'N';
	begin
	ds_sep_bv_w	:= obter_separador_bv;
	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ie_status_horario_w,
			dt_horario_w,
			nr_seq_horario_w,
			qt_hora_inf_w,
			nr_seq_npt_cpoe_w;
	exit when c01%notfound;
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( dt_horario_w );
		if (nr_horario_w is not null) then
			if	(ie_status_horario_w	= 'I') and
				(qt_hora_inf_w			> 0) then
				dt_prev_term_w	:= dt_horario_w + (qt_hora_inf_w / 24);
			end if;
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,nr_prescricao), ' ||
							' dt_prev_term = dt_prev_term ' ||							
							' where nm_usuario = nm_usuario ' ||
							' and ie_tipo_item = ie_tipo ' ||
							' and coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0) ' ||
							' and coalesce(nr_seq_cpoe,coalesce(nr_seq_cpoe,0)) = coalesce(nr_seq_cpoe,0) ' ||
							' and coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0) ';
			exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
										'nr_seq_cpoe=' || to_char(nr_seq_npt_cpoe_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=NPN' || ds_sep_bv_w ||
										'dt_prev_term=' || to_char(dt_prev_term_w,'dd/mm/yyyy hh24:mi:ss') || ds_sep_bv_w ||										
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'NPN', 'N');
	end adep_gerar_horarios_pck.adep_sincronizar_npt_neo();
	procedure adep_gerar_horarios_pck.adep_sincronizar_npt_ped(
			cd_estabelecimento_p		number,
			cd_setor_usuario_p		number,
			cd_perfil_p			number,
			nm_usuario_p			varchar2,
			nr_atendimento_p		number,
			dt_inicial_horarios_p		date,
			dt_final_horarios_p		date,					
			dt_validade_limite_p		date,					
			ie_exibir_sol_realizadas_p	varchar2,
			ie_exibir_sol_suspensas_p	varchar2,
			ie_regra_inclusao_p		varchar2,
			ie_data_lib_prescr_p		varchar2,
			ie_exibir_suspensos_p		varchar2,
			ie_agrupar_acm_sn_p		varchar2,
			dt_horario_p			date,
			nr_horario_p			integer,
			ie_exibe_sem_lib_farm_p		varchar2,
			ie_prescr_setor_p		varchar2,
			cd_setor_paciente_p		number,
			ie_palm_p				varchar2) as
	ds_sep_bv_w		varchar2(50);				
	nr_seq_solucao_w	number(10,0);
	nr_seq_horario_w	number(15);
	ie_status_horario_w	varchar2(15);
	ds_comando_update_w	varchar2(4000);
	dt_horario_w	date;
	nr_horario_w	number(5);
	ie_recem_nato_w		varchar2(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	dt_prev_term_w		date;
	qt_hora_inf_w		number(3);
	nr_seq_npt_cpoe_w	nut_pac.nr_seq_npt_cpoe%type;
	cursor c01 is
		select	a.nr_prescricao,
				x.nr_sequencia,
				decode(nvl(b.ie_status,'N'),'INT','T','T','A',nvl(b.ie_status,'N')) ie_status,
				b.dt_horario,
				b.nr_sequencia,
				nvl(x.qt_hora_inf,0),
				x.nr_seq_npt_cpoe
		from		nut_paciente_hor b,
				nut_pac x,
				prescr_medica a
		where	x.nr_prescricao = a.nr_prescricao
		and		b.nr_seq_nut_protocolo = x.nr_sequencia
		and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,nvl(a.ie_adep,'S')) = 'S'
		and		a.nr_atendimento = nr_atendimento_p
		and		a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w		
		and		((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
				 ((ie_exibe_sem_lib_farm_p = 'S') and
				  (nvl(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))				  
		and		((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
		and		x.dt_suspensao is null
		and		((ie_exibir_suspensos_p = 'S') or (x.dt_suspensao is null))
		and		((nvl(b.ie_horario_especial,'N') = 'N') and (x.ie_status = 'N'))
		and		((a.dt_liberacao_farmacia is not null) or (Get_NPTAntesFarmacia = 'N'))		
		and		((nvl(a.ie_recem_nato,'N')	= 'N') or
				 (ie_recem_nato_w		= 'S'))		
		and		((ie_regra_inclusao_p = 'S') or
				 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'NPN', 
																				cd_estabelecimento_p, 
																				cd_setor_usuario_p, 
																				cd_perfil_p, 
																				null, 
																				null, 
																				null, 
																				null,
																				a.cd_Setor_atendimento,
																				null,
																				null, 
																				null) = 'S'))) 																				
		and		((b.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w) or (nvl(b.ie_horario_especial,'N') = 'S'))
		and		((ie_prescr_setor_p = 'N') or ((ie_prescr_setor_p = 'S') and (a.cd_setor_atendimento = cd_setor_paciente_p)))
		and		((get_ie_vigente = 'N') or (sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))		
		and		ie_npt_adulta = 'P';
	begin
	ds_sep_bv_w	:= obter_separador_bv;
	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ie_status_horario_w,
			dt_horario_w,
			nr_seq_horario_w,
			qt_hora_inf_w,
			nr_seq_npt_cpoe_w;
	exit when c01%notfound;
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( dt_horario_w );
		if (nr_horario_w is not null) then
			if	(ie_status_horario_w	= 'I') and
				(qt_hora_inf_w			> 0) then
				dt_prev_term_w	:= dt_horario_w + (qt_hora_inf_w / 24);
			end if;
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,nr_prescricao), ' ||
							' dt_prev_term = dt_prev_term ' ||							
							' where nm_usuario = nm_usuario ' ||
							' and ie_tipo_item = ie_tipo ' ||
							' and coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0) ' ||
							' and coalesce(nr_seq_cpoe,coalesce(nr_seq_cpoe,0)) = coalesce(nr_seq_cpoe,0) ' ||
							' and coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0) ';
			exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
										'nr_seq_cpoe=' || to_char(nr_seq_npt_cpoe_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=NPP' || ds_sep_bv_w ||
										'dt_prev_term=' || to_char(dt_prev_term_w,'dd/mm/yyyy hh24:mi:ss') || ds_sep_bv_w ||										
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'NPP', 'N');
	end adep_gerar_horarios_pck.adep_sincronizar_npt_ped();
	procedure adep_gerar_horarios_pck.adep_sincronizar_npt_adul_ant(
			cd_estabelecimento_p		number,
			cd_setor_usuario_p		number,
			cd_perfil_p			number,
			nm_usuario_p			varchar2,
			nr_atendimento_p		number,
			dt_inicial_horarios_p		date,
			dt_final_horarios_p		date,					
			dt_validade_limite_p		date,					
			ie_exibir_sol_realizadas_p	varchar2,
			ie_exibir_sol_suspensas_p	varchar2,
			ie_regra_inclusao_p		varchar2,
			ie_data_lib_prescr_p		varchar2,
			ie_exibir_suspensos_p		varchar2,
			ie_agrupar_acm_sn_p		varchar2,
			dt_horario_p			date,
			nr_horario_p			integer,
			ie_exibe_sem_lib_farm_p		varchar2,
			ie_prescr_setor_p		varchar2,
			cd_setor_paciente_p		number) as
	ds_sep_bv_w			varchar2(50);				
	nr_seq_solucao_w	number(10,0);
	ie_status_horario_w	varchar2(15);
	ds_comando_update_w	varchar2(4000);
	dt_horario_w		date;
	nr_horario_w		number(5);
	nr_seq_horario_w	number(15);
	ie_recem_nato_w		varchar2(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	cursor c01 is
	select	a.nr_prescricao,
			x.nr_sequencia,
			decode(nvl(b.ie_status,'N'),'INT','T','T','A',nvl(b.ie_status,'N')) ie_status,
			b.dt_horario,
			b.nr_sequencia
	from	nut_paciente_hor b,
			nut_paciente x,
			prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and		b.nr_seq_nut_pac = x.nr_sequencia
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,nvl(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and
		(nvl(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (x.dt_suspensao is null))
	and	((ie_exibir_suspensos_p = 'S') or (x.dt_suspensao is null))
	and	((a.dt_liberacao_farmacia is not null) or (Get_NPTAntesFarmacia = 'N'))
	and	((nvl(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'NAN', 
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null,
																		a.cd_Setor_atendimento,
																		null,
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	b.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or ((ie_prescr_setor_p = 'S') and (a.cd_setor_atendimento = cd_setor_paciente_p)))
	and	((get_ie_vigente = 'N') or (sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440));
	begin
	ds_sep_bv_w	:= obter_separador_bv;
	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_solucao_w,
			ie_status_horario_w,
			dt_horario_w,
			nr_seq_horario_w;
	exit when c01%notfound;
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( dt_horario_w );
		if (nr_horario_w is not null) then
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,nr_prescricao) ' ||
							' where nm_usuario = nm_usuario ' ||
							' and ie_tipo_item = ie_tipo ' ||
							' and coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0) ' ||
							' and coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0) ';
			exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=NPA' || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'NPA', 'N');
	end adep_gerar_horarios_pck.adep_sincronizar_npt_adul_ant();
	procedure adep_gerar_horarios_pck.adep_sincronizar_medic_hd(
		cd_estabelecimento_p		number,
		cd_setor_usuario_p		number,
		cd_perfil_p			number,
		nm_usuario_p			varchar2,
		nr_atendimento_p		number,
		nr_seq_dialise_p		number,
		dt_inicial_horarios_p		date,
		dt_final_horarios_p		date,					
		dt_validade_limite_p		date,					
		ie_exibir_hor_realizados_p	varchar2,
		ie_exibir_hor_suspensos_p	varchar2,
		ie_regra_inclusao_p		varchar2,
		ie_data_lib_prescr_p		varchar2,
		ie_exibir_suspensos_p		varchar2,
		ie_agrupar_acm_sn_p		varchar2,
		ie_agrupar_dose_esp_p		varchar2,
		ie_obs_diferenciar_p		varchar2,
		dt_horario_p			date,
		nr_horario_p			integer,
		ie_prescr_setor_p		varchar2,
		cd_setor_paciente_p		number) as				
	ds_sep_bv_w		varchar2(50);
	nr_seq_material_w	number(6,0);
	nr_seq_horario_w	number(10,0);
	ie_status_horario_w	varchar2(15);
	cd_material_w		number(6,0);
	ds_material_w		varchar2(255);
	ie_acm_sn_w		varchar2(1);
	cd_intervalo_w		varchar2(7);
	qt_dose_w		number(18,6);
	nr_agrupamento_w	number(7,1);
	ie_controlado_w		varchar2(1);
	ds_prescricao_w		varchar2(240);
	ie_status_w		varchar2(1);
	dt_suspensao_w		date;
	ie_diferenciado_w	varchar2(1);
	ds_dil_obs_w		varchar2(2000);
	nr_dia_util_w		number(10,0);
	ds_comando_update_w	varchar2(4000);
	dt_horario_w	date;
	nr_horario_w	number(5);
	ie_recem_nato_w		varchar2(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	nr_seq_mat_cpoe_w	prescr_material.nr_seq_mat_cpoe%type;
	cursor c01 is	
	select	a.nr_prescricao,
			c.nr_seq_material,
			c.nr_sequencia,
			substr(obter_status_hor_medic(c.dt_fim_horario,c.dt_suspensao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep),1,15),
			c.cd_material,
			y.ds_material,
			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		
			x.cd_intervalo,
			x.qt_dose,
			decode(obter_se_agrupa_composto(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,c.cd_material),'S',x.nr_agrupamento,0) nr_agrupamento,
			c.ie_controlado,
			substr(adep_obter_um_dosagem_prescr(a.nr_prescricao,c.nr_seq_material,x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
			nvl(x.ie_suspenso,'N') ie_suspenso,
			c.dt_suspensao,
			substr(nvl(obter_se_item_dif_adep(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,'M',ie_obs_diferenciar_p,x.ds_observacao),'N'),1,1) ie_diferenciado,
			substr(adep_obter_inf_dil_obs(a.nr_prescricao,c.nr_seq_material),1,2000) ds_dil_obs,
			x.nr_dia_util,
			c.dt_horario,
			x.nr_seq_mat_cpoe
	from	material y,
		prescr_material x,
		prescr_mat_hor c,
		prescr_medica a
	where	y.cd_material = x.cd_material
	and	x.nr_prescricao = c.nr_prescricao
	and	x.nr_sequencia = c.nr_seq_material	
	and	x.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao	
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,nvl(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'
	and	x.ie_agrupador = 1
	and	((nvl(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	((ie_exibir_suspensos_p = 'S') or (x.dt_suspensao is null))
	and	obter_se_gerar_item_adep('M',a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,getie_apres_kit) = 'S'
	and	nvl(c.ie_situacao,'A') = 'A'
	and	nvl(c.ie_adep,'S') = 'S'
	and	c.ie_agrupador = 1
	and	((ie_agrupar_dose_esp_p = 'S') or (nvl(c.ie_dose_especial,'N') = 'N'))
	and	((nvl(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario is not null))
	and	((ie_exibir_hor_realizados_p = 'S') or (c.dt_fim_horario is null))
	and	((ie_exibir_hor_suspensos_p = 'S') or (c.dt_suspensao is null))
	and	c.nr_seq_dialise = nr_seq_dialise_p
	and	c.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or ((ie_prescr_setor_p = 'S') and (a.cd_setor_atendimento = cd_setor_paciente_p)))
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and	((get_ie_vigente = 'N') or (sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		c.dt_horario,
		a.nr_prescricao,
		c.nr_seq_material,
		c.nr_sequencia,
		c.dt_fim_horario,
		c.dt_suspensao,
		c.ie_dose_especial,
		c.nr_seq_processo,
		c.nr_seq_area_prep,
		c.cd_material,
		y.ds_material,
		x.ie_acm,
		x.ie_se_necessario,		
		x.cd_intervalo,
		x.qt_dose,
		x.nr_agrupamento,
		c.ie_controlado,
		x.ie_suspenso,
		c.dt_suspensao,
		x.ds_observacao,
		x.nr_dia_util,
		x.nr_seq_mat_cpoe
	order by
		c.dt_horario,
		c.dt_suspensao;
	begin
	ds_sep_bv_w	:= obter_separador_bv;
	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_material_w,
			nr_seq_horario_w,
			ie_status_horario_w,
			cd_material_w,
			ds_material_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			qt_dose_w,
			nr_agrupamento_w,
			ie_controlado_w,
			ds_prescricao_w,
			ie_status_w,
			dt_suspensao_w,
			ie_diferenciado_w,
			ds_dil_obs_w,
			nr_dia_util_w,	
			dt_horario_w,
			nr_seq_mat_cpoe_w;
	exit when c01%notfound;
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( dt_horario_w );
		if (nr_horario_w is not null) then
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,nr_prescricao), ' ||
							' ie_diferenciado = ie_diferenciado, ' ||
							' ds_diluicao = ds_dil_obs, ' ||
							' ie_medic_controlado = ie_controlado, ' ||
							' nr_dia_util = nr_dia_util ' ||
							' where nm_usuario = nm_usuario ' ||
							' and ie_tipo_item = ie_tipo ' ||
							' and coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0) ' ||
							' and coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0) ' ||					
							' and coalesce(nr_seq_cpoe,coalesce(nr_seq_cpoe,0)) = coalesce(nr_seq_cpoe,0) ' ||					
							' and cd_item = cd_item ' ||
							' and coalesce(cd_intervalo,0) = coalesce(cd_intervalo,0) ' ||
							' and coalesce(qt_item,0) = coalesce(qt_item,0) ' ||
							' and coalesce(nr_agrupamento,0) = coalesce(nr_agrupamento,0) ' ||
							' and ((ds_prescricao = ds_prescricao) or (coalesce(ds_prescricao::text, '') = '')) ';
			exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
										'nr_seq_cpoe=' || to_char(nr_seq_mat_cpoe_w) || ds_sep_bv_w || 
										'ie_diferenciado=' || ie_diferenciado_w || ds_sep_bv_w || 
										'ds_dil_obs=' || ds_dil_obs_w || ds_sep_bv_w || 
										'ie_controlado=' || ie_controlado_w || ds_sep_bv_w || 
										'nr_dia_util=' || to_char(nr_dia_util_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=ME' || ds_sep_bv_w ||
										'nr_seq_item='|| to_char(nr_seq_material_w) || ds_sep_bv_w ||
										'cd_item=' || to_char(cd_material_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'qt_item=' || to_char(qt_dose_w) || ds_sep_bv_w ||
										'nr_agrupamento=' || to_char(nr_agrupamento_w) || ds_sep_bv_w ||
										'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	end adep_gerar_horarios_pck.adep_sincronizar_medic_hd();
	procedure adep_gerar_horarios_pck.adep_sincronizar_medic_hd_de(
		cd_estabelecimento_p		number,
		cd_setor_usuario_p		number,
		cd_perfil_p			number,
		nm_usuario_p			varchar2,
		nr_atendimento_p		number,
		nr_seq_dialise_p		number,
		dt_inicial_horarios_p		date,
		dt_final_horarios_p		date,					
		dt_validade_limite_p		date,					
		ie_exibir_hor_realizados_p	varchar2,
		ie_exibir_hor_suspensos_p	varchar2,
		ie_regra_inclusao_p		varchar2,
		ie_data_lib_prescr_p		varchar2,
		ie_exibir_suspensos_p		varchar2,
		ie_agrupar_acm_sn_p		varchar2,
		ie_agrupar_dose_esp_p		varchar2,
		ie_obs_diferenciar_p		varchar2,
		dt_horario_p			date,
		nr_horario_p			integer,
		ie_prescr_setor_p		varchar2,
		cd_setor_paciente_p		number) as				
	ds_sep_bv_w		varchar2(50);
	nr_seq_material_w	number(6,0);
	nr_seq_horario_w	number(10,0);
	ie_status_horario_w	varchar2(15);
	cd_material_w		number(6,0);
	ds_material_w		varchar2(255);
	ie_acm_sn_w		varchar2(1);
	cd_intervalo_w		varchar2(7);
	qt_dose_w		number(18,6);
	nr_agrupamento_w	number(7,1);
	ie_controlado_w		varchar2(1);
	ds_prescricao_w		varchar2(240);
	ie_status_w		varchar2(1);
	dt_suspensao_w		date;
	ie_diferenciado_w	varchar2(1);
	ds_dil_obs_w		varchar2(2000);
	nr_dia_util_w		number(10,0);
	ds_comando_update_w	varchar2(4000);
	dt_horario_w	date;
	nr_horario_w	number(5);
	ie_recem_nato_w		varchar2(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	cursor c01 is	
	select	a.nr_prescricao,
		c.nr_seq_material,
		c.nr_sequencia,
		substr(obter_status_hor_medic(c.dt_fim_horario,c.dt_suspensao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep),1,15),
		c.cd_material,
		y.ds_material,
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		
		x.cd_intervalo,
		x.qt_dose,
		decode(obter_se_agrupa_composto(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,c.cd_material),'S',x.nr_agrupamento,0) nr_agrupamento,
		c.ie_controlado,
		'DE ' || to_char(x.qt_dose_especial) || ' ' || x.cd_unidade_medida_dose ds_prescricao,	
		nvl(x.ie_suspenso,'N') ie_suspenso,
		c.dt_suspensao,
		substr(nvl(obter_se_item_dif_adep(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,'M',ie_obs_diferenciar_p,x.ds_observacao),'N'),1,1) ie_diferenciado,
		substr(adep_obter_inf_dil_obs(a.nr_prescricao,c.nr_seq_material),1,2000) ds_dil_obs,
		x.nr_dia_util,
		c.dt_horario
	from	material y,
		prescr_material x,
		prescr_mat_hor c,
		prescr_medica a
	where	y.cd_material = x.cd_material
	and	x.nr_prescricao = c.nr_prescricao
	and	x.nr_sequencia = c.nr_seq_material	
	and	x.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao	
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,nvl(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'
	and	x.ie_agrupador = 1
	and	((ie_exibir_suspensos_p = 'S') or (x.dt_suspensao is null))
	and	obter_se_gerar_item_adep('M',a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,getie_apres_kit) = 'S'
	and	nvl(c.ie_situacao,'A') = 'A'
	and	nvl(c.ie_adep,'S') = 'S'
	and	c.ie_agrupador = 1
	and	((nvl(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	nvl(c.ie_dose_especial,'N') = 'S'
	and	((nvl(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario is not null))
	and	((ie_exibir_hor_realizados_p = 'S') or (c.dt_fim_horario is null))
	and	((ie_exibir_hor_suspensos_p = 'S') or (c.dt_suspensao is null))
	and	c.nr_seq_dialise = nr_seq_dialise_p
	and	c.dt_horario = dt_horario_p
	and	((ie_prescr_setor_p = 'N') or ((ie_prescr_setor_p = 'S') and (a.cd_setor_atendimento = cd_setor_paciente_p)))
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and	((get_ie_vigente = 'N') or (sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by 
		c.dt_horario,
		a.nr_prescricao,
		c.nr_seq_material,
		c.nr_sequencia,
		c.dt_fim_horario,
		c.dt_suspensao,
		c.ie_dose_especial,
		c.nr_seq_processo,
		c.nr_seq_area_prep,
		c.cd_material,
		y.ds_material,
		x.ie_acm,
		x.ie_se_necessario,		
		x.cd_intervalo,
		x.qt_dose,
		x.nr_agrupamento,
		c.ie_controlado,
		x.qt_dose_especial,
		x.cd_unidade_medida_dose,
		x.ie_suspenso,
		x.ds_observacao,
		x.nr_dia_util
	order by
		c.dt_horario,
		c.dt_suspensao;
	begin
	ds_sep_bv_w	:= obter_separador_bv;
	open c01;
	loop
	fetch c01 into	nr_prescricao_w,
			nr_seq_material_w,
			nr_seq_horario_w,
			ie_status_horario_w,
			cd_material_w,
			ds_material_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			qt_dose_w,
			nr_agrupamento_w,
			ie_controlado_w,
			ds_prescricao_w,
			ie_status_w,
			dt_suspensao_w,
			ie_diferenciado_w,
			ds_dil_obs_w,
			nr_dia_util_w,	
			dt_horario_w;
	exit when c01%notfound;
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( dt_horario_w );
		if (nr_horario_w is not null) then
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,nr_prescricao), ' ||
							' ie_diferenciado = ie_diferenciado, ' ||
							' ds_diluicao = ds_dil_obs, ' ||
							' ie_medic_controlado = ie_controlado, ' ||
							' nr_dia_util = nr_dia_util ' ||
							' where nm_usuario = nm_usuario ' ||
							' and ie_tipo_item = ie_tipo ' ||
							' and coalesce(nr_prescricao,coalesce(nr_prescricao,0)) = coalesce(nr_prescricao,0) ' ||
							' and coalesce(nr_seq_item,coalesce(nr_seq_item,0)) = coalesce(nr_seq_item,0) ' ||					
							' and cd_item = cd_item ' ||
							' and coalesce(cd_intervalo,0) = coalesce(cd_intervalo,0) ' ||
							' and coalesce(qt_item,0) = coalesce(qt_item,0) ' ||
							' and coalesce(nr_agrupamento,0) = coalesce(nr_agrupamento,0) ' ||
							' and ((ds_prescricao = ds_prescricao) or (coalesce(ds_prescricao::text, '') = '')) ';
			exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
										'ie_diferenciado=' || ie_diferenciado_w || ds_sep_bv_w || 
										'ds_dil_obs=' || ds_dil_obs_w || ds_sep_bv_w || 
										'ie_controlado=' || ie_controlado_w || ds_sep_bv_w || 
										'nr_dia_util=' || to_char(nr_dia_util_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=ME' || ds_sep_bv_w ||
										'nr_seq_item='|| to_char(nr_seq_material_w) || ds_sep_bv_w ||
										'cd_item=' || to_char(cd_material_w) || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w  || ds_sep_bv_w ||
										'qt_item=' || to_char(qt_dose_w) || ds_sep_bv_w ||
										'nr_agrupamento=' || to_char(nr_agrupamento_w) || ds_sep_bv_w ||
										'ds_prescricao=' || ds_prescricao_w || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	end adep_gerar_horarios_pck.adep_sincronizar_medic_hd_de();
	procedure adep_gerar_horarios_pck.set_parametros_funcao(	cd_estabelecimento_p		number,
						cd_setor_usuario_p		number,
						cd_perfil_p			number,
						ie_aba_p			varchar2,						
						nr_atendimento_p		number,
						nr_seq_dialise_p		number,
						qt_horas_anteriores_p		number,
						qt_horas_adicionais_p		number,
						qt_horas_vigencia_p		number,
						dt_referencia_p			date,
						ie_exibir_hor_realizados_p	varchar2,
						ie_exibir_hor_suspensos_p	varchar2,
						ie_so_proc_setor_usuario_p	varchar2,
						ie_so_interv_setor_usuario_p	varchar2,
						ie_solucoes_continuas_p		varchar2,
						nm_usuario_p			varchar2) as
	begin
	cd_perfil_w 			:= cd_perfil_p;
	cd_estabelecimento_w		:= cd_estabelecimento_p;
	nm_usuario_w			:= nm_usuario_p;
	ie_aba_w			:= ie_aba_p;
	nr_atendimento_w		:= nr_atendimento_p;
	nr_seq_dialise_w		:= nr_seq_dialise_p;
	qt_horas_anteriores_w		:= qt_horas_anteriores_p;
	qt_horas_adicionais_w		:= qt_horas_adicionais_p;
	qt_horas_vigencia_w		:= qt_horas_vigencia_p;
	dt_referencia_w			:= dt_referencia_p;
	ie_exibir_hor_realizados_w	:= ie_exibir_hor_realizados_p;
	ie_exibir_hor_suspensos_w	:= ie_exibir_hor_suspensos_p;
	ie_so_proc_setor_usuario_w	:= ie_so_proc_setor_usuario_p;
	ie_so_interv_setor_usuario_w	:= ie_so_interv_setor_usuario_p;
	ie_solucoes_continuas_w		:= ie_solucoes_continuas_p;
	end;
	function get_ie_exibe_cuidados_hm return varchar2 as
	begin
		if	(ie_exibe_cuidados_hm_w is null ) then
			ie_exibe_cuidados_hm_w := Wheb_assist_pck.obterParametroFuncao(1113,594, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibe_cuidados_hm_w;
	end;
	function get_ie_subdividir_proc return varchar2 as
	begin
		if	(ie_subdividir_proc_w is null ) then
			ie_subdividir_proc_w := Wheb_assist_pck.obterParametroFuncao(1113,48, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_subdividir_proc_w;
	end;
	function getIeMostraDialiseAntesFarm return varchar2 as
	begin
		if	(ie_dialise_antes_farm_w is null ) then
			ie_dialise_antes_farm_w := Wheb_assist_pck.obterParametroFuncao(1113,500, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_dialise_antes_farm_w;
	end;
	function getie_apres_kit return varchar2 as
	begin
		if	(ie_mostrar_kit_w is null ) then
			ie_mostrar_kit_w := Wheb_assist_pck.obterParametroFuncao(1113,515, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mostrar_kit_w;
	end;
	function get_apresentar_sol_Agora_lib return varchar2 as
	begin
		if	(ie_mostrar_sol_Agora_lib_w is null ) then
			ie_mostrar_sol_Agora_lib_w := Wheb_assist_pck.obterParametroFuncao(1113,632, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mostrar_sol_Agora_lib_w;
	end;
	function getIE_mostrar_outasBS return varchar2 as
	begin
		if	(ie_mostrar_outras_w is null ) then
			ie_mostrar_outras_w := Wheb_assist_pck.obterParametroFuncao(1113,442, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mostrar_outras_w;
	end;
	function getIe_apresentar_dieta_nao_lib return varchar2 as
	begin
		if	(ie_mostrar_nao_lib_w is null ) then
			ie_mostrar_nao_lib_w := Wheb_assist_pck.obterParametroFuncao(1113,473, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mostrar_nao_lib_w;
	end;
	function GetIeAgruparServicos return varchar2 as
	begin
		if	(ie_agrupa_servico_w is null ) then
			ie_agrupa_servico_w := Wheb_assist_pck.obterParametroFuncao(1113,477, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_agrupa_servico_w;
	end;
	function get_ie_apres_inf_dieta return varchar2 as
	begin
		if	(ie_apres_inf_dieta_w is null ) then
			ie_apres_inf_dieta_w := Wheb_assist_pck.obterParametroFuncao(1113,398, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_apres_inf_dieta_w;
	end;
	function get_ie_exibeSol_filtro return varchar2 as
	begin
		if	(ie_sol_filtro_w is null ) then
			ie_sol_filtro_w := Wheb_assist_pck.obterParametroFuncao(1113,229, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_sol_filtro_w;
	end;
	function get_ie_mostrar_reservado return varchar2 as
	begin
		if	(ie_apres_reservado_w is null ) then
			ie_apres_reservado_w := Wheb_assist_pck.obterParametroFuncao(1113,406, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_apres_reservado_w;
	end;
	function	get_ie_status_recoleta return varchar2 as
	begin
		if	(ie_status_recoleta_w is null) then
			Obter_Param_Usuario(722, 12, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_status_recoleta_w);
		end if;
		return ie_status_recoleta_w;
	end;
	function	get_ie_exibir_status_recoleta return varchar2 as
	begin
		if	(ie_exibir_status_recoleta_w is null) then
			ie_exibir_status_recoleta_w := Wheb_assist_pck.obterParametroFuncao(1113,366, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibir_status_recoleta_w;
	end;
	function	get_ie_exibir_dialise return varchar2 as
	begin
		if	(ie_exibir_dialise_w is null) then
			ie_exibir_dialise_w := Wheb_assist_pck.obterParametroFuncao(1113,380, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibir_dialise_w;
	end;
	function get_ie_exibir_coleta_gestao return varchar2 as
	begin
		if	(ie_exibir_coleta_gestao_w is null ) then
			ie_exibir_coleta_gestao_w := Wheb_assist_pck.obterParametroFuncao(1113,47, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibir_coleta_gestao_w;
	end;
	function get_ie_exibir_solucao_gestao return varchar2 as
	begin
		if	(ie_exibir_solucoes_gestao_w is null ) then
			ie_exibir_solucoes_gestao_w := Wheb_assist_pck.obterParametroFuncao(1113,46, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibir_solucoes_gestao_w;
	end;
	function get_qt_minutos_atraso return number as
	begin
		if	(qt_minutos_atraso_w is null ) then
			qt_minutos_atraso_w := Wheb_assist_pck.obterParametroFuncao(1113,174, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return qt_minutos_atraso_w;
	end;
	function get_ie_data_lib_prescr return varchar2 as
	begin
		if	(ie_data_lib_prescr_w is null ) then
			ie_data_lib_prescr_w := Wheb_assist_pck.obterParametroFuncao(1113,115, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_data_lib_prescr_w;
	end;
	function getagruparec return varchar2 as
	begin
		if	(ie_agrupa_rec_w is null ) then
			ie_agrupa_rec_w := Wheb_assist_pck.obterParametroFuncao(1113,539, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_agrupa_rec_w;
	end;
	function GetJuntaCompSolucao return varchar2 as
	begin
		if	(ie_Junta_com_sol_w is null ) then
			ie_Junta_com_sol_w := Wheb_assist_pck.obterParametroFuncao(1113,567, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_Junta_com_sol_w;
	end;	
	function Get_NPTAntesFarmacia return varchar2 as
	begin
		if	(ie_Get_NPTAntesFarmacia_w is null ) then
			ie_Get_NPTAntesFarmacia_w := Wheb_assist_pck.obterParametroFuncao(1113,651, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_Get_NPTAntesFarmacia_w;
	end;	
	function get_ApresHorNPTAntiga return varchar2 as
	begin
		if	(ie_horNPTAntiga_w is null ) then
			ie_horNPTAntiga_w := Wheb_assist_pck.obterParametroFuncao(1113,647, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_horNPTAntiga_w;
	end;	
	function get_ie_Visualiza_hem_naoLib return varchar2 as
	begin
		if	(ie_hemo_nao_lib_w is null ) then
			ie_hemo_nao_lib_w := Wheb_assist_pck.obterParametroFuncao(1113,547, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_hemo_nao_lib_w;
	end;
	function VarOrdenaProtocolo return varchar2 as
	begin
		if	(ie_VarOrdenaProtocolo_w is null ) then
			ie_VarOrdenaProtocolo_w := Wheb_assist_pck.obterParametroFuncao(1113,573, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_VarOrdenaProtocolo_w;
	end;
	function Get_Param652 return varchar2 as
	begin
		if	(ie_Get_Param652_w is null ) then
			ie_Get_Param652_w := Wheb_assist_pck.obterParametroFuncao(1113,652, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_Get_Param652_w;
	end;
	function get_ie_gravar_diluicao_sol return varchar2 as
	begin
		if	(ie_diluicao_w is null ) then
			ie_diluicao_w := Wheb_assist_pck.obterParametroFuncao(1113,311, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_diluicao_w;
	end;
	function get_ie_obs_medico return varchar2 as
	begin
		if	(ie_obs_medico_w is null ) then
			ie_obs_medico_w := Wheb_assist_pck.obterParametroFuncao(1113,298, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_obs_medico_w;
	end;
	function get_ie_agrupar_acm_sn return varchar2 as
	begin
		if	(ie_agrupar_acm_sn_w is null ) then
			ie_agrupar_acm_sn_w := Wheb_assist_pck.obterParametroFuncao(1113,74, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_agrupar_acm_sn_w;
	end;
	function get_ie_exibir_suspensos return varchar2 as
	begin
		if	(ie_exibir_suspensos_w is null ) then
			ie_exibir_suspensos_w := Wheb_assist_pck.obterParametroFuncao(1113,117, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibir_suspensos_w;
	end;
	function get_ie_agrupar_dose_esp return varchar2 as
	begin
		if	(ie_agrupar_dose_esp_w is null ) then
			ie_agrupar_dose_esp_w := Wheb_assist_pck.obterParametroFuncao(1113,99, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_agrupar_dose_esp_w;
	end;
	function get_ie_obs_diferenciar return varchar2 as
	begin
		if	(ie_obs_diferenciar_w is null ) then
			ie_obs_diferenciar_w := Wheb_assist_pck.obterParametroFuncao(1113,111, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_obs_diferenciar_w;
	end;
	function get_ie_data_lib_proced return varchar2 as
	begin
		if	(ie_data_lib_proced_w is null ) then
			ie_data_lib_proced_w := Wheb_assist_pck.obterParametroFuncao(924,223, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_data_lib_proced_w;
	end;
	function get_ie_horarios_dietas_orais return varchar2 as
	begin
		if	(ie_horarios_dietas_orais_w is null ) then
			ie_horarios_dietas_orais_w := Wheb_assist_pck.obterParametroFuncao(1113,148, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_horarios_dietas_orais_w;
	end;
	function get_ie_regra_incl_ordem_medica return varchar2 as
	begin
		if	(ie_regra_incl_ordem_medica_w is null ) then
			ie_regra_incl_ordem_medica_w := Wheb_assist_pck.obterParametroFuncao(1113,172, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_regra_incl_ordem_medica_w;
	end;
	function get_ie_mat_med_proc_gestao return varchar2 as
	begin
		if	(ie_mat_med_proc_gestao_w is null ) then
			ie_mat_med_proc_gestao_w := Wheb_assist_pck.obterParametroFuncao(1113,180, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mat_med_proc_gestao_w;
	end;
	function get_ie_diluicao_acm_sn_gestao return varchar2 as
	begin
		if	(ie_diluicao_acm_sn_gestao_w is null ) then
			ie_diluicao_acm_sn_gestao_w := Wheb_assist_pck.obterParametroFuncao(1113,41, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_diluicao_acm_sn_gestao_w;
	end;
	function get_ie_agrupar_associados return varchar2 as
	begin
		if	(ie_agrupar_associados_w is null ) then
			ie_agrupar_associados_w := Wheb_assist_pck.obterParametroFuncao(1113,139, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_agrupar_associados_w;
	end;
	function GetIEObsProced return varchar2 as
	begin
		if	(ie_visualizar_obs_proced_w is null ) then
			ie_visualizar_obs_proced_w := Wheb_assist_pck.obterParametroFuncao(1113,645, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_visualizar_obs_proced_w;
	end;
	function get_ie_lib_pend_rep return varchar2 as
	begin
		if	(ie_lib_pend_rep_w is null ) then
			ie_lib_pend_rep_w := Wheb_assist_pck.obterParametroFuncao(1113,154, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_lib_pend_rep_w;
	end;
	function get_ie_gerar_horarios_glic return varchar2 as
	begin
		if	(ie_gerar_horarios_glic_w is null ) then		
			ie_gerar_horarios_glic_w := Wheb_assist_pck.obterParametroFuncao(1113,191, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_gerar_horarios_glic_w;
	end;
	function get_ie_assoc_glic return varchar2 as
	begin
		if	(ie_horarios_glic_w is null ) then		
			ie_horarios_glic_w := Wheb_assist_pck.obterParametroFuncao(1113,532, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_horarios_glic_w;
	end;
	function get_ie_mostrar_subs return varchar2 as
	begin
		if	(ie_mostrar_subs_w is null ) then
			ie_mostrar_subs_w := Wheb_assist_pck.obterParametroFuncao(1113,234, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mostrar_subs_w;
	end;
	function get_ie_exibir_dil_ccg return varchar2 as
	begin
		if	(ie_exibir_dil_ccg_w is null ) then
			ie_exibir_dil_ccg_w := Wheb_assist_pck.obterParametroFuncao(1113,235, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibir_dil_ccg_w;
	end;
	function get_ie_exibe_sem_lib_farm return varchar2 as
	begin
		if	(ie_exibe_sem_lib_farm_w is null ) then
			ie_exibe_sem_lib_farm_w := Wheb_assist_pck.obterParametroFuncao(1113,236, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibe_sem_lib_farm_w;
	end;
	function get_ie_exibe_dietas return varchar2 as
	begin
		if	(ie_exibe_dietas_w is null ) then
			ie_exibe_dietas_w := Wheb_assist_pck.obterParametroFuncao(1113,239, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibe_dietas_w;
	end;
	function get_ie_prescr_setor_atual return varchar2 as
	begin
		if	(ie_prescr_setor_atual_w is null ) then
			ie_prescr_setor_atual_w := Wheb_assist_pck.obterParametroFuncao(1113,240, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_prescr_setor_atual_w;
	end;
	function get_ie_gas_horario return varchar2 as
	begin
		if	(ie_gas_horario_w is null ) then
			ie_gas_horario_w := Wheb_assist_pck.obterParametroFuncao(1113,538, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_gas_horario_w;
	end;
	function get_ie_formato_solucoes return varchar2 as
	begin
		if	(ie_formato_solucoes_w is null ) then
			if	(ie_palm_w = 'S') or
				(ie_ios_w = 'S') then
				ie_formato_solucoes_w := 'H';
			else
				ie_formato_solucoes_w := Wheb_assist_pck.obterParametroFuncao(1113,241, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
			end if;
		end if;
		return ie_formato_solucoes_w;
	end;
	function get_nr_regra_ordem return number as
	begin
		if	(nr_regra_ordem_w is null ) then
			nr_regra_ordem_w := Wheb_assist_pck.obterParametroFuncao(1113,244, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return nr_regra_ordem_w;
	end;
	function get_agrupar_suspensos return varchar2 as
	begin
		if	(ie_agrupar_suspensos_w is null ) then
			ie_agrupar_suspensos_w := Wheb_assist_pck.obterParametroFuncao(1113,257, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_agrupar_suspensos_w;
	end;
	function get_usa_apelido_exame return varchar2 as
	begin
		if	(ie_apelido_exame_w is null ) then
			ie_apelido_exame_w := Wheb_assist_pck.obterParametroFuncao(1113,181, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_apelido_exame_w;
	end;
	function get_usa_servico_dietas return varchar2 as
	begin
		if	(ie_servico_dietas_w is null) then
			ie_servico_dietas_w := Wheb_assist_pck.obterParametroFuncao(1113,309, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_servico_dietas_w;
	end;
	function get_servico_sem_dieta return varchar2 as
	begin
		if	(ie_servico_sem_dieta_w is null) then
			ie_servico_sem_dieta_w := Wheb_assist_pck.obterParametroFuncao(924,834, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_servico_sem_dieta_w;
	end;
	function get_usa_legenda_item_baixado return varchar2 as
	begin
		if	(ie_legenda_item_baixado_w is null) then
			ie_legenda_item_baixado_w := Wheb_assist_pck.obterParametroFuncao(1113,310, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
			if	(ie_legenda_item_baixado_w = 'N') then
				ie_legenda_item_baixado_w := Wheb_assist_pck.obterParametroFuncao(1113,368, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
			end if;
		end if;
		return ie_legenda_item_baixado_w;
	end;
	function 	get_ie_exibe_hor_gas return varchar2 as
	begin
		if	(ie_exibe_hor_gas_w is null) then
			ie_exibe_hor_gas_w := Wheb_assist_pck.obterParametroFuncao(1113,339, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibe_hor_gas_w;
	end;
	function	get_ie_SNE_por_horario return varchar2 as
	begin
		if	(ie_SNE_horario_w is null) then
			ie_SNE_horario_w := Wheb_assist_pck.obterParametroFuncao(1113,422, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_SNE_horario_w;
	end;
	function	get_ie_utiliza_hem_p_hor return varchar2 as
	begin
		if	(ie_utiliza_hem_p_hor_w is null) then
			ie_utiliza_hem_p_hor_w := Wheb_assist_pck.obterParametroFuncao(1113,440, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_utiliza_hem_p_hor_w;
	end;
	function getQtDiasAnteriorSolucao return number as
	begin
		if	(QtDiasAnteriorSolucao_w is null) then
			begin
			QtDiasAnteriorSolucao_w := Wheb_assist_pck.obterParametroFuncao(1113,456, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, 0);
			exception
			when others then
				QtDiasAnteriorSolucao_w	:= 0;
			end;			
		end if;
		return QtDiasAnteriorSolucao_w;
	end;	
	function getDuplicaDietaInformacao return varchar2 as
	begin
		if	(ie_duplica_dieta_inf_w  is null ) then
			begin
			ie_duplica_dieta_inf_w := Wheb_assist_pck.obterParametroFuncao(1113,461, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, 'N');
			exception
			when others then
				ie_duplica_dieta_inf_w	:= 'N';
			end;			
		end if;
		return ie_duplica_dieta_inf_w;
	end;		
	function	getDesagrupaProcedimento return varchar2 as
	begin
		if	(ie_desagrupa_proced_w is null) then
			ie_desagrupa_proced_w := Wheb_assist_pck.obterParametroFuncao(1113,463, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_desagrupa_proced_w;
	end;
	function	get_ie_vigente return varchar2 as
	begin
		if	(ie_vigente_w is null) then
			ie_vigente_w := Wheb_assist_pck.obterParametroFuncao(1113,466, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_vigente_w;
	end;
	function	get_minutos_vigente return number as
	begin
		if	(qt_minutos_ww2 is null) then
			qt_minutos_ww2 := nvl(Wheb_assist_pck.obterParametroFuncao(1113,12, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w),0);
		end if;
		return qt_minutos_ww2;
	end;
	function get_ie_todos_proced return varchar2 as
	begin
		if	(ie_todos_proc_w is null ) then
			ie_todos_proc_w := Wheb_assist_pck.obterParametroFuncao(1113,462, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_todos_proc_w;
	end;
	function getIeDescDietasAgrupadas return varchar2 as
	begin
		if	(ieDescDietasAgrupadas_w is null ) then
			ieDescDietasAgrupadas_w := Wheb_assist_pck.obterParametroFuncao(1113,468, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ieDescDietasAgrupadas_w;
	end;
	function getExibeSAEPalm return varchar2 as
	begin
		if	(ie_palm_w	<> 'S') then
			return 'N';
		end if;
		if	(ie_exibe_sae_palm_w is null ) then
			Obter_Param_Usuario(88, 113, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_exibe_sae_palm_w);
		end if;
		return ie_exibe_sae_palm_w;
	end;
	function	getExibeRecPalm return varchar2 as
	begin
		if	(ie_palm_w	<> 'S') then
			return 'N';
		end if;
		if	(ie_exibe_rec_palm_w is null ) then
			Obter_Param_Usuario(88, 127, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_exibe_rec_palm_w);
		end if;
		return ie_exibe_rec_palm_w;
	end;
	function	getExibeIVCPalm return varchar2 as
	begin
		if	(ie_palm_w	<> 'S') then
			return 'N';
		end if;
		if	(ie_exibe_ivc_palm_w is null ) then
			Obter_Param_Usuario(88, 264, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_exibe_ivc_palm_w);
		end if;
		return ie_exibe_ivc_palm_w;
	end;
	function	getExibeDietaEmJejum return varchar2 as
	begin
		if	(ie_exibe_dieta_jejum_w is null ) then
			ie_exibe_dieta_jejum_w := Wheb_assist_pck.obterParametroFuncao(924,854, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibe_dieta_jejum_w;
	end;	
	function	getExibeAssocGas return varchar2 as
	begin
		if	(ie_exibe_assoc_gas_w is null ) then
			ie_exibe_assoc_gas_w := Wheb_assist_pck.obterParametroFuncao(1113,520, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_exibe_assoc_gas_w;
	end;		
	function get_horas_solucao_vence return number as
	begin
		if	(nr_horas_sol_valid_w is null ) then
			nr_horas_sol_valid_w := Wheb_assist_pck.obterParametroFuncao(1113,516, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return nr_horas_sol_valid_w;
	end;
	function	get_ie_recem_nato return varchar2 as
	begin
		if	(ie_rn_w is null) then
			ie_rn_w := Wheb_assist_pck.obterParametroFuncao(1113,566, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_rn_w;
	end;	
	function	getItensGasTerm return varchar2 as
	begin
		if	(ie_itens_gas_term_w is null) then
			ie_itens_gas_term_w := Wheb_assist_pck.obterParametroFuncao(1113,588, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_itens_gas_term_w;
	end;
	function	getIeMostraDataGas return varchar2 as
	begin
		if	(ie_mostra_data_gas_w is null) then
			ie_mostra_data_gas_w := Wheb_assist_pck.obterParametroFuncao(1113,591, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_mostra_data_gas_w;
	end;
	function	getIeGasSeparada return varchar2 as
	begin
		if	(ie_gas_separada_w is null) then
			ie_gas_separada_w := Wheb_assist_pck.obterParametroFuncao(1113,704, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_gas_separada_w;
	end;
	function	getIeConsisteTempoProcesso return varchar2 as
	begin
		if	(ie_consiste_tempo_processo_w is null) then
			if (ie_clinician_w = 'S') then
				ie_consiste_tempo_processo_w := 'D';
			else
				Obter_Param_Usuario(88, 176, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_consiste_tempo_processo_w);
			end if;
		end if;
		return ie_consiste_tempo_processo_w;
	end;
	function	getFormaAdmPalm return varchar2 as
	begin
		if	(ie_forma_adm_palm_w is null) then
			if (ie_clinician_w = 'S') then
				Obter_Param_Usuario(9129, 8, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_forma_adm_palm_w);
			else
				Obter_Param_Usuario(88, 36, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_forma_adm_palm_w);
			end if;
		end if;
		return ie_forma_adm_palm_w;
	end;
	function	getQtMinutosItemDuplic return number as
	begin
		if	(qt_minutos_item_duplic_w is null) then
			if (ie_clinician_w = 'S') then
				Obter_Param_Usuario(9129, 11, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, qt_minutos_item_duplic_w);
			else 
				Obter_Param_Usuario(88, 185, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, qt_minutos_item_duplic_w);
			end if;
		end if;
		return qt_minutos_item_duplic_w;
	end;
	function	get_ie_fonte_alto_risco	return	varchar2 as
	begin
		if	(ie_fonte_alto_risco_w is null)	then
			ie_fonte_alto_risco_w := Wheb_assist_pck.obterParametroFuncao(1113,331, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w); 
		end if;
		return ie_fonte_alto_risco_w;
	end;
	function	get_vl_param673	return	varchar2 as
	begin
		if	(ie_param673_w is null)	then
			ie_param673_w := Wheb_assist_pck.obterParametroFuncao(1113,673, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w); 
		end if;
		return ie_param673_w;
	end;
	function get_ie_exibe_mat_assoc_proced return varchar2 as
	begin
		if	(ie_exibe_mat_assoc_proc_w is null) then
			Obter_Param_Usuario(88,291, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_exibe_mat_assoc_proc_w);
		end if;
		return ie_exibe_mat_assoc_proc_w;
	end;
	function get_ie_chec_mat_assoc_proc_lab return varchar2 as
	begin
		if	(ie_checar_mat_assoc_proc_lab_w is null ) then
			ie_checar_mat_assoc_proc_lab_w := Wheb_assist_pck.obterParametroFuncao(1113,691, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_checar_mat_assoc_proc_lab_w;
	end;
	function get_ie_usa_status_gedipa return varchar2 as
	begin
		if	(ie_usa_status_gedipa_w is null ) then
			ie_usa_status_gedipa_w := Wheb_assist_pck.obterParametroFuncao(1113,713, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_usa_status_gedipa_w;
	end;
	function get_ie_gera_ciclo_dialise return varchar2 as
	begin
		if	(ie_gera_ciclo_dialise_w is null) then
			Obter_Param_Usuario(1113,465, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_gera_ciclo_dialise_w);
		end if;
		return ie_gera_ciclo_dialise_w;
	end;
	function Get_Param356 return varchar2 as
	begin
		if	(ie_Get_Param356_w is null ) then
			ie_Get_Param356_w := Wheb_assist_pck.obterParametroFuncao(1113,356, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w);
		end if;
		return ie_Get_Param356_w;
	end;
	procedure	adep_gerar_horarios_pck.set_tipo_item_atualizacao( 	ie_tipo_item_p	varchar2,
							cd_item_p	number) as
	begin
		if	(vetor_w.count > 0) and (ie_tipo_item_p not in ('NPN')) then
			ie_tipo_item_Atualizar_w	:= ie_tipo_item_p;
			cd_item_atualizar_w		:= cd_item_p;
		else
			ie_tipo_item_Atualizar_w	:= null;
			cd_item_atualizar_w		:= null;
		end if;
	end;
	procedure       ClearPackage as
	begin
		cd_setor_usuario_w		:= null;
		cd_perfil_w			:= null;
		cd_estabelecimento_w		:= null;
		nm_usuario_w			:= null;
		ie_data_lib_prescr_w		:= null;
		ie_agrupa_rec_w			:= null;
		ie_Junta_com_sol_w		:= null;
		ie_horNPTAntiga_w		:= null;
		ie_hemo_nao_lib_w		:= null;
		ie_VarOrdenaProtocolo_w		:= null;
		ie_Get_Param652_w			:= null;
		ie_Get_Param356_w			:= null;
		ie_agrupar_acm_sn_w		:= null;
		ie_diluicao_w			:= null;
		ie_exibir_suspensos_w		:= null;
		ie_agrupar_dose_esp_w		:= null;
		ie_obs_diferenciar_w		:= null;
		ie_data_lib_proced_w		:= null;
		ie_horarios_dietas_orais_w	:= null;
		ie_mat_med_proc_gestao_w	:= null;
		ie_diluicao_acm_sn_gestao_w	:= null;
		ie_agrupar_associados_w		:= null;
		ie_lib_pend_rep_w		:= null;
		ie_mostrar_subs_w		:= null;
		ie_gerar_horarios_glic_w	:= null;
		ie_exibir_dil_ccg_w		:= null;
		ie_exibe_sem_lib_farm_w		:= null;
		ie_exibe_dietas_w		:= null;
		ie_prescr_setor_atual_w		:= null;
		ie_gas_horario_w		:= null;
		ie_filtro_w			:= null;
		ie_formato_solucoes_w		:= null;
		nr_regra_ordem_w		:= null;
		cd_setor_pac_w			:= null;
		ie_aba_w			:= null;
		ie_obs_medico_w			:= null;
		nr_atendimento_w		:= null;
		nr_seq_dialise_w		:= null;
		qt_horas_anteriores_w		:= null;
		qt_horas_adicionais_w		:= null;
		qt_horas_vigencia_w		:= null;
		dt_referencia_w			:= null;
		ie_exibir_hor_realizados_w	:= null;
		ie_exibir_hor_suspensos_w	:= null;
		ie_so_proc_setor_usuario_w	:= null;
		ie_so_interv_setor_usuario_w	:= null;
		ie_solucoes_continuas_w		:= null;
		ie_exibe_hor_gas_w		:= null;
		dt_horario_w			:= null;	
		dt_validade_limite_w		:= null;
		dt_inicial_horarios_w		:= null;
		dt_final_horarios_w		:= null;
		ie_agrupar_suspensos_w		:= null;
		ie_apelido_exame_w		:= null;
		ie_servico_dietas_w		:= null;
		ie_servico_sem_dieta_w		:= null;
		ie_duplica_dieta_inf_w		:= null;		
		ie_legenda_item_baixado_w	:= null;
		qt_minutos_atraso_w		:= null;
		ie_exibir_solucoes_gestao_w	:= null;
		ie_exibir_coleta_gestao_w	:= null;
		ie_subdividir_proc_w		:= null;
		ie_dialise_antes_farm_w		:= null;
		ie_exibe_cuidados_hm_w		:= null;
		ie_mostrar_kit_w		:= null;
		ie_mostrar_sol_Agora_lib_w	:= null;
		ie_mostrar_outras_w		:= null;
		ie_apres_inf_dieta_w		:= null;
		ie_sol_filtro_w			:= null;
		ie_apres_reservado_w		:= null;
		ie_status_recoleta_w		:= null;
		ie_exibir_status_recoleta_w	:= null;
		ie_exibir_dialise_w		:= null;
		ie_utiliza_hem_p_hor_w		:= null;
		ie_desagrupa_proced_w		:= null;
		ie_itens_gas_term_w		:= null;
		dt_horario_inicio_sinc_w	:= null;
		dt_horario_fim_sinc_w		:= null;
		ie_SNE_horario_w		:= null;
		ie_vigente_w			:= null;
		ie_todos_proc_w			:= null;
		ie_exibe_sae_palm_w		:= null;
		ie_exibe_rec_palm_w		:= null;
		nr_horas_sol_valid_w		:= null;
		ie_rn_w				:= null;
		ie_atualizar_dieta_w	:= 'S';
		ie_atualizar_jejum_w	:= 'S';
		ie_atualizar_supl_w	:= 'S';
		ie_atualizar_sne_w	:= 'S';
		ie_atualizar_npt_adulta_w	:= 'S';
		ie_atualizar_npt_neo_w	:= 'S';
		ie_atualizar_npt_ped_w	:= 'S';
		ie_atualizar_leite_w	:= 'S';
		ie_atualizar_solucao_w	:= 'S';
		ie_atualizar_medic_w	:= 'S';
		ie_atualizar_material_w	:= 'S';
		ie_atualizar_proced_w	:= 'S';
		ie_atualizar_lab_w	:= 'S';
		ie_atualizar_ccg_w	:= 'S';
		ie_atualizar_cig_w	:= 'S';
		ie_atualizar_ivc_w	:= 'S';
		ie_atualizar_gas_w	:= 'S';
		ie_atualizar_hemoterap_w	:= 'S';
		ie_atualizar_rec_w	:= 'S';
		ie_atualizar_dialise_w	:= 'S';
		ie_regra_incl_dieta_oral_w	:= 'S';
		ie_regra_incl_supl_oral_w	:= 'S';
		ie_regra_incl_solucao_w		:= 'S';
		ie_regra_incl_medicamento_w	:= 'S';
		ie_regra_incl_leite_w		:= 'S';		
		ie_regra_incl_material_w	:= 'R';
		ie_regra_incl_procedimento_w	:= 'S';
		ie_regra_incl_coleta_w		:= 'S';
		ie_regra_incl_ccg_w		:= 'S';
		ie_regra_incl_cig_w		:= 'S';
		ie_regra_incl_recomendacao_w	:= 'S';
		ie_regra_incl_intervencao_w	:= 'S';
		ie_regra_incl_ivc_w		:= 'N';
		ie_regra_incl_gas_w		:= 'N';
		ie_regra_incl_hemoterapia_w	:= 'N';
		ie_regra_incl_jejum_w		:= 'S';
		ie_regra_incl_sne_w		:= 'N';
		ie_regra_incl_npt_adulta_w	:= 'N';
		ie_regra_incl_npt_neonatal_w	:= 'N';
		ie_regra_incl_npt_pediatrica_w	:= 'N';
		ie_regra_incl_dialise_w		:= 'N';	
	end;
	procedure adep_gerar_horarios_pck.gerar_horarios_adep(
		cd_estabelecimento_p			number,
		cd_setor_usuario_p				number,
		cd_perfil_p						number,
		ie_aba_p						varchar2,
		ie_palm_p						varchar2,
		nm_usuario_p					varchar2,
		nr_atendimento_p				number,
		nr_seq_dialise_p				number,
		qt_horas_anteriores_p			number,
		qt_horas_adicionais_p			number,
		qt_horas_vigencia_p				number,
		dt_referencia_p					date,
		ie_exibir_hor_realizados_p		varchar2,
		ie_exibir_hor_suspensos_p		varchar2,
		ie_so_proc_setor_usuario_p		varchar2,
		ie_so_interv_setor_usuario_p	varchar2,
		ie_solucoes_continuas_p			varchar2,
		ie_solucoes_interrompidas_p		varchar2,
		ie_quimio_p						varchar2,
		ie_exibir_suspensos_p			varchar2,
		ie_ios_p						varchar2,
		ie_cpoe_p						varchar2,
		ie_html_p						varchar2,
		ie_java_p						varchar2,
		ie_clinician_p				in	varchar2) as
	i							integer		:= 0;
	j							integer		:= 0;
	k							integer		:= 0;
	nr_seq_wadep_w				number(10,0);	
	ie_exibe_itens_realizado_w 	varchar2(1);
	
	cursor c01 is
	select	nvl(ie_dieta_oral,'S'),
		nvl(ie_suplemento_oral,'S'),
		nvl(ie_solucao,'S'),
		nvl(ie_medicamento,'S'),
		nvl(ie_material,'R'),
		nvl(ie_procedimento,'S'),
		nvl(ie_coleta,'S'),
		nvl(ie_ccg,'S'),
		nvl(ie_cig,'S'),
		nvl(ie_recomendacao,'S'),
		nvl(ie_sae,'S'),
		nvl(ie_ivc,'N'),
		nvl(ie_oxigenio,'N'),
		nvl(ie_hemoterapia,'N'),
		nvl(ie_sup_nutricional,'N'),
		nvl(ie_npt_adulta,'N'),
		nvl(ie_npt_neonatal,'N'),
		nvl(ie_dialise,'N'),
		nvl(ie_leite_deriv,'N'),
		nvl(ie_npt_pediatrica,'N')
	from	adep_regra_inclusao
	where	cd_estabelecimento				= cd_estabelecimento_p
	and	nvl(cd_setor_atendimento,cd_setor_usuario_w)	= cd_setor_usuario_w
	and	nvl(cd_perfil,cd_perfil_w)			= cd_perfil_w
	order by
		nvl(cd_setor_atendimento,99999) desc,
		nvl(cd_perfil,99999) desc,
		nr_sequencia;
	cursor c02 is
	select	dt_horario
	from	w_adep_horarios_t
	where	nm_usuario = nm_usuario_p
	and		dt_horario is not null
	group by
		dt_horario
	order by
		dt_horario;
	begin
	if	(nvl(nr_atendimento_p,0) = 0) then
		exec_sql_dinamico(nm_usuario_p, 'truncate table w_adep_t');
		exec_sql_dinamico(nm_usuario_p, 'truncate table w_adep_horarios_t');
		commit;
		return;
	end if;
	
	if (obter_rastreabilidade_adep(nr_atendimento_p, 'PT') = 'S') then
		adep_gerar_log_rastr(substr($$plsql_unit || ':' || $$plsql_line || chr(13)
			|| 'cd_estabelecimento_p:' || cd_estabelecimento_p || chr(13)
			|| 'cd_setor_usuario_p:' || cd_setor_usuario_p || chr(13)
			|| 'cd_perfil_p:' || cd_perfil_p || chr(13)
			|| 'ie_aba_p:' || ie_aba_p || chr(13)
			|| 'ie_palm_p:' || ie_palm_p || chr(13)
			|| 'nm_usuario_p:' || nm_usuario_p || chr(13)
			|| 'nr_atendimento_p:' || nr_atendimento_p || chr(13)
			|| 'nr_seq_dialise_p:' || nr_seq_dialise_p || chr(13)
			|| 'qt_horas_anteriores_p:' || qt_horas_anteriores_p || chr(13)
			|| 'qt_horas_adicionais_p:' || qt_horas_adicionais_p || chr(13)
			|| 'qt_horas_vigencia_p:' || qt_horas_vigencia_p || chr(13)
			|| 'dt_referencia_p:' || dt_referencia_p || chr(13)
			|| 'ie_exibir_hor_realizados_p:' || ie_exibir_hor_realizados_p || chr(13)
			|| 'ie_exibir_hor_suspensos_p:' || ie_exibir_hor_suspensos_p || chr(13)
			|| 'ie_so_proc_setor_usuario_p:' || ie_so_proc_setor_usuario_p || chr(13)
			|| 'ie_so_interv_setor_usuario_p:' || ie_so_interv_setor_usuario_p || chr(13)
			|| 'ie_solucoes_continuas_p:' || ie_solucoes_continuas_p || chr(13)
			|| 'ie_solucoes_interrompidas_p:' || ie_solucoes_interrompidas_p || chr(13)
			|| 'ie_quimio_p:' || ie_quimio_p || chr(13)
			|| 'ie_exibir_suspensos_p:' || ie_exibir_suspensos_p || chr(13)
			|| 'ie_ios_p:' || ie_ios_p || chr(13)
			|| 'ie_cpoe_p:' || ie_cpoe_p || chr(13)
			|| 'ie_html_p:' || ie_html_p || chr(13)
			|| 'ie_java_p:' || ie_java_p, 1, 1500
		));
	end if;
		
	if	(nvl(ie_palm_p,'N') = 'N') and
		((nvl(cd_estabelecimento_w,cd_estabelecimento_p) <> cd_estabelecimento_p) or
		 (nvl(cd_perfil_w,cd_perfil_p) <> cd_perfil_p) or
		 (nvl(nm_usuario_w,nm_usuario_p) <> nm_usuario_p)) then
		adep_gerar_horarios_pck.clearpackage();
		cd_estabelecimento_w	:= cd_estabelecimento_p;
		cd_perfil_w				:= cd_perfil_p;
		nm_usuario_w			:= nm_usuario_p;
	end if;
	ie_cpoe_w		:= nvl(ie_cpoe_p,'N');
	ie_ios_w		:= nvl(ie_ios_p,'N');
	ie_exibir_suspensos_w	:= ie_exibir_suspensos_p;
	if (ie_palm_p = 'S') then
		adep_gerar_horarios_pck.set_tipo_item_atualizacao(null,null);
	else
		adep_gerar_horarios_pck.set_tipo_item_atualizacao(ie_tipo_item_Atualizar_w, cd_item_atualizar_w);
	end if;
	if	(ie_tipo_item_Atualizar_w is not null) and (nr_atendimento_p = nr_atendimento_w) then
		adep_gerar_horarios_pck.sincronizar_tipo_item(
				ie_tipo_item_Atualizar_w,
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				ie_aba_p,
				ie_palm_p,
				nm_usuario_p,
				nr_atendimento_p,
				nr_seq_dialise_p,
				qt_horas_anteriores_p,
				qt_horas_adicionais_p,
				qt_horas_vigencia_p,
				dt_referencia_p,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_so_proc_setor_usuario_p,
				ie_so_interv_setor_usuario_p,
				ie_solucoes_continuas_p,
				ie_solucoes_interrompidas_p,
				cd_item_atualizar_w,
				ie_quimio_p,
				ie_exibir_suspensos_p,
				ie_html_p,
				ie_java_p,
				ie_clinician_p);
		return;
	else
		adep_gerar_horarios_pck.set_tipo_item_atualizacao(null, null);
	end if;
	ie_palm_w	:= nvl(ie_palm_p,'N');
	ie_clinician_w		:= nvl(ie_clinician_p,'N');
	if (ie_palm_w	= 'S') then
		adep_gerar_horarios_pck.clearpackage();
	end if;
	adep_gerar_horarios_pck.set_parametros_funcao(cd_estabelecimento_p, cd_setor_usuario_p, cd_perfil_p, ie_aba_p, nr_atendimento_p,
			      nr_seq_dialise_p,	qt_horas_anteriores_p, qt_horas_adicionais_p, qt_horas_vigencia_p, dt_referencia_p,
			      ie_exibir_hor_realizados_p, ie_exibir_hor_suspensos_p, ie_so_proc_setor_usuario_p, ie_so_interv_setor_usuario_p,
			      ie_solucoes_continuas_p, nm_usuario_p);
	ie_atualizar_medic_w	:= 'S';
	ie_tipo_item_atualizar_2w	:= null;
	if	(ie_atualizar_dieta_w = 'S') then
		ie_tipo_item_atualizar_2w	:= 'D';
	end if;
	if	(ie_atualizar_jejum_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'J';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',J';
		end if;
	end if;
	if	(ie_atualizar_supl_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'S';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',S';
		end if;
	end if;
	if	(ie_atualizar_sne_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'SNE';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',SNE';
		end if;
	end if;
	if	(ie_atualizar_npt_adulta_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'NPA';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',NPA';
		end if;
	end if;
	if	(ie_atualizar_npt_neo_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'NPO';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',NPO';
		end if;
	end if;
	if	(ie_atualizar_npt_ped_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'NPP';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',NPP';
		end if;
	end if;
	if	(ie_atualizar_leite_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'LD';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',LD';
		end if;
	end if;
	if	(ie_atualizar_solucao_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'SOL';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',SOL';
		end if;
	end if;
	if	(ie_atualizar_medic_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'M';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',M';
		end if;
	end if;
	if	(ie_atualizar_material_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'MAT';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',MAT';
		end if;
	end if;
	if	(ie_atualizar_proced_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'P';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',P';
		end if;
	end if;
	if	(ie_atualizar_proced_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'MP';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',MP';
		end if;
	end if;
	if	(ie_atualizar_lab_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'L';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',L';
		end if;
	end if;
	if	(ie_atualizar_ccg_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'G';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',G';
		end if;
	end if;
	if	(ie_atualizar_cig_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'C';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',C';
		end if;
	end if;
	if	(ie_atualizar_ivc_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'IVC';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',IVC';
		end if;
	end if;
	if	(ie_atualizar_gas_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'O';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',O';
		end if;
	end if;
	if	(ie_atualizar_hemoterap_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'HM';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',HM';
		end if;
	end if;
	if	(ie_atualizar_rec_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'R';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',R';
		end if;
	end if;
	if	(ie_atualizar_dialise_w = 'S') then
		if	(ie_tipo_item_atualizar_2w is null) then
			ie_tipo_item_atualizar_2w	:= 'DI';
		else
			ie_tipo_item_atualizar_2w	:= ie_tipo_item_atualizar_2w || ',DI';
		end if;
	end if;	
	if	(ie_atualizar_medic_w = 'N') then
		delete from w_adep_t
		where	nm_usuario = nm_usuario_p
		and		ie_tipo_item	<> 'M';
		exec_sql_dinamico(nm_usuario_p, 'truncate table w_adep_horarios_t');
	else
		exec_sql_dinamico(nm_usuario_p, 'truncate table w_adep_t');
		exec_sql_dinamico(nm_usuario_p, 'truncate table w_adep_horarios_t');
	end if;
	if	(dt_referencia_p is not null) then
		begin
		dt_validade_limite_w	:= dt_referencia_p;
		dt_inicial_horarios_w	:= dt_referencia_p;
		if	(qt_horas_adicionais_p = 24) then
			dt_final_horarios_w	:= dt_referencia_p + dividir(qt_horas_adicionais_p,24) - 1/86400;
		else
			dt_final_horarios_w	:= dt_referencia_p + dividir(qt_horas_adicionais_p,24);
		end if;
		ie_filtro_w		:= 'D';
		end;
	else
		begin
		dt_validade_limite_w	:= sysdate - dividir(qt_horas_vigencia_p,24);
		dt_inicial_horarios_w	:= to_date(to_char(trunc(sysdate - dividir(qt_horas_anteriores_p,24),'hh24'),'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		if	(qt_horas_adicionais_p = 24) then
			dt_final_horarios_w	:= to_date(to_char(trunc(sysdate + dividir(qt_horas_adicionais_p,24),'hh24'),'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') - 1/86400;	
		else
			dt_final_horarios_w	:= to_date(to_char(trunc(sysdate + dividir(qt_horas_adicionais_p,24),'hh24'),'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		end if;
		ie_filtro_w		:= 'H';
		end;
	end if;
	cd_setor_usuario_w	:= nvl(cd_setor_usuario_p,0);
	cd_setor_pac_w		:= Obter_Unidade_Atendimento(nr_atendimento_p, 'IAR', 'CS');
	dt_fim_w			:= adep_gerar_horarios_pck.getdtfimvalidade(dt_validade_limite_w);
	open c01;
	loop
	fetch c01 into	ie_regra_incl_dieta_oral_w,
			ie_regra_incl_supl_oral_w,
			ie_regra_incl_solucao_w,
			ie_regra_incl_medicamento_w,
			ie_regra_incl_material_w,
			ie_regra_incl_procedimento_w,
			ie_regra_incl_coleta_w,
			ie_regra_incl_ccg_w,
			ie_regra_incl_cig_w,
			ie_regra_incl_recomendacao_w,
			ie_regra_incl_intervencao_w,
			ie_regra_incl_ivc_w,
			ie_regra_incl_gas_w,
			ie_regra_incl_hemoterapia_w,
			ie_regra_incl_sne_w,
			ie_regra_incl_npt_adulta_w,
			ie_regra_incl_npt_neonatal_w,
			ie_regra_incl_dialise_w,
			ie_regra_incl_leite_w,
			ie_regra_incl_npt_pediatrica_w;
	exit when c01%notfound;
		begin
		ie_regra_incl_dieta_oral_w	:= ie_regra_incl_dieta_oral_w;
		ie_regra_incl_supl_oral_w	:= ie_regra_incl_supl_oral_w;
		ie_regra_incl_solucao_w		:= ie_regra_incl_solucao_w;
		ie_regra_incl_medicamento_w	:= ie_regra_incl_medicamento_w;
		ie_regra_incl_material_w	:= ie_regra_incl_material_w;
		ie_regra_incl_procedimento_w	:= ie_regra_incl_procedimento_w;
		ie_regra_incl_coleta_w		:= ie_regra_incl_coleta_w;
		ie_regra_incl_ccg_w		:= ie_regra_incl_ccg_w;
		ie_regra_incl_cig_w		:= ie_regra_incl_cig_w;
		ie_regra_incl_recomendacao_w	:= ie_regra_incl_recomendacao_w;
		ie_regra_incl_intervencao_w	:= ie_regra_incl_intervencao_w;
		ie_regra_incl_ivc_w		:= ie_regra_incl_ivc_w;
		ie_regra_incl_gas_w		:= ie_regra_incl_gas_w;
		ie_regra_incl_hemoterapia_w	:= ie_regra_incl_hemoterapia_w;
		ie_regra_incl_jejum_w		:= ie_regra_incl_dieta_oral_w;
		ie_regra_incl_sne_w		:= ie_regra_incl_sne_w;
		ie_regra_incl_npt_adulta_w	:= ie_regra_incl_npt_adulta_w;
		ie_regra_incl_npt_neonatal_w	:= ie_regra_incl_npt_neonatal_w;
		ie_regra_incl_dialise_w		:= ie_regra_incl_dialise_w;
		ie_regra_incl_leite_w		:= ie_regra_incl_leite_w;		
		end;
	end loop;
	close c01;
	if	(nr_seq_dialise_p is null) then
		begin
		if	(ie_palm_p = 'S') then
			begin
			
			if (ie_clinician_p = 'S') then
				ie_exibe_itens_realizado_w:= ie_exibir_hor_realizados_p;
			else	
				ie_exibe_itens_realizado_w:= 'N';
			end if;
			
			adep_gerar_horarios_pck.adep_obter_horarios_medic(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibe_itens_realizado_w, 
				'N',
				ie_regra_incl_medicamento_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_mostrar_subs,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_quimio_p,
				'S',
				ie_clinician_p);	
			adep_gerar_horarios_pck.adep_obter_horarios_proced_ass(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				'N',
				'N',
				ie_regra_incl_procedimento_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_p);
			adep_gerar_horarios_pck.adep_obter_horarios_solucao(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_solucao_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				ie_solucoes_continuas_p,
				ie_solucoes_interrompidas_p,
				get_ie_prescr_setor_atual,
				get_ie_formato_solucoes,
				cd_setor_pac_w,
				ie_quimio_p,
				ie_palm_w,
				nvl(ie_html_p, 'N'),
				dt_referencia_p,
				ie_clinician_p);
			adep_gerar_horarios_pck.adep_obter_horarios_dieta_oral(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_dieta_oral_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			adep_gerar_horarios_pck.adep_obter_horarios_supl_oral(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_supl_oral_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_w);
			adep_gerar_horarios_pck.adep_obter_horarios_hemoterap(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_hemoterapia_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_data_lib_proced,
				ie_so_interv_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_w);
			adep_gerar_horarios_pck.adep_obter_horarios_sne(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_sne_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_w);
			adep_gerar_horarios_pck.adep_obter_horarios_ccg(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_ccg_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			if 	(adep_gerar_horarios_pck.getexibesaepalm() = 'S') then
				adep_gerar_horarios_pck.adep_obter_horarios_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
			end if;
			if 	(adep_gerar_horarios_pck.getexibeivcpalm() = 'S') then
				adep_gerar_horarios_pck.adep_obter_horarios_ivc(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
				    dt_inicial_horarios_w,
					dt_final_horarios_w,
				    dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_ivc_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			end if;	
			if 	(adep_gerar_horarios_pck.getexiberecpalm() = 'S') then
				adep_gerar_horarios_pck.adep_obter_horarios_rec(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_recomendacao_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					ie_quimio_p);
			end if;	
			adep_gerar_horarios_pck.adep_obter_horarios_cig(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_cig_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			if 	(ie_regra_incl_gas_w <> 'N') and
				(get_ie_exibe_hor_gas = 'S')then
				adep_gerar_horarios_pck.adep_obter_horarios_gas(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_gas_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					null,
					get_ie_prescr_setor_atual,
					null,
					cd_setor_pac_w,
					get_ie_gas_horario,
					ie_palm_p);
			end if;	
			if	(ie_regra_incl_leite_w <> 'N') then
				begin
				adep_gerar_horarios_pck.adep_obter_horarios_leite(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_leite_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
				end;
			end if;
			adep_gerar_horarios_pck.adep_obter_horarios_npt_adulta(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S',
				'N');
			adep_gerar_horarios_pck.adep_obter_horarios_npt_neo(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			adep_gerar_horarios_pck.adep_obter_horarios_npt_ped(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');	
			end;
		else
			begin	
			if	(ie_aba_p <> 'L') then
				begin
				if	(ie_so_proc_setor_usuario_p = 'N') then
					begin
					if	(ie_regra_incl_dieta_oral_w <> 'N') and
						(get_ie_horarios_dietas_orais <> 'N') then
						begin
						if	(get_usa_servico_dietas = 'S') then
							adep_gerar_horarios_pck.adep_obter_hor_dieta_oral_serv(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_dieta_oral_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
						else
							adep_gerar_horarios_pck.adep_obter_horarios_dieta_oral(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_dieta_oral_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
						end if;
						end;
					end if;
					if	(ie_regra_incl_supl_oral_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_supl_oral(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_supl_oral_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_w);
						end;
					end if;	
					if	(ie_regra_incl_leite_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_leite(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_leite_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;						
					if	(ie_regra_incl_medicamento_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_medic(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_medicamento_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_mostrar_subs,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p,
							ie_palm_w,
							ie_clinician_p);
						end;
					end if;		
					if	(ie_regra_incl_material_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_material(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_material_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p);
						end;
					end if;	
					if	(ie_regra_incl_procedimento_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_proced(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_procedimento_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p);
						adep_gerar_horarios_pck.adep_obter_horarios_proced_ass(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_procedimento_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_p);
						if	(get_ie_mat_med_proc_gestao = 'S') or
							(getExibeAssocGas = 'S') then
							begin
							adep_gerar_horarios_pck.adep_obter_horarios_assoc_proc(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								null,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_quimio_p);			
							end;
						end if;
						end;
					end if;
					if	(ie_regra_incl_coleta_w <> 'N') and
						(get_ie_exibir_coleta_gestao <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_coleta(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							ie_aba_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_coleta_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w
							);
						end;
					end if;
					if	(ie_regra_incl_cig_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_cig(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_cig_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;	
					if	(ie_regra_incl_ccg_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_ccg(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_ccg_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N');
					--	if	(get_ie_mat_med_proc_gestao = 'S') and
					--		(get_ie_gerar_horarios_glic = 'N') then
						if	(get_ie_assoc_glic = 'S') then
							begin
							adep_gerar_horarios_pck.adep_obter_horarios_assoc_glic(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								null,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);			
							end;
						end if;			
						end;
					end if;		
					if	(ie_regra_incl_ivc_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_ivc(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_ivc_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;		
					if	(ie_regra_incl_solucao_w <> 'N') and
						((get_ie_exibir_solucao_gestao <> 'N') or (ie_html_p = 'S'))  then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_solucao(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_solucao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							ie_solucoes_continuas_p,
							ie_solucoes_interrompidas_p,
							get_ie_prescr_setor_atual,
							get_ie_formato_solucoes,
							cd_setor_pac_w,
							ie_quimio_p,
							ie_palm_w,
							nvl(ie_html_p, 'N'),
							dt_referencia_p,
							ie_clinician_p);
						end;
					end if;
					if	(ie_regra_incl_dialise_w <> 'N' and
						get_ie_exibir_dialise <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_dialise(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_dialise_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							ie_solucoes_continuas_p,
							get_ie_prescr_setor_atual,
							get_ie_formato_solucoes,
							cd_setor_pac_w,
							dt_referencia_p);
						end;
					end if;
					if 	(ie_regra_incl_gas_w <> 'N') and
						(get_ie_exibe_hor_gas = 'S')then
						adep_gerar_horarios_pck.adep_obter_horarios_gas(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_gas_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							null,
							get_ie_prescr_setor_atual,
							null,
							cd_setor_pac_w,
							get_ie_gas_horario,
							ie_palm_w);
					end if;
					if	(ie_regra_incl_recomendacao_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_rec(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_recomendacao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p);
						end;
					end if;	
					if	(ie_regra_incl_intervencao_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					if	(ie_regra_incl_hemoterapia_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_hemoterap(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_hemoterapia_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_interv_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_w);
						adep_gerar_horarios_pck.adep_obter_horarios_assoc_hemo(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_medicamento_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_mostrar_subs,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p,
							ie_palm_w);						
						end;
					end if;	
					if	(ie_regra_incl_jejum_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_jejum(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_jejum_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					if	(get_ie_regra_incl_ordem_medica = 'G') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_ordem_med(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							get_ie_regra_incl_ordem_medica,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					if	(ie_regra_incl_sne_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_sne(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_sne_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_w);
						end;
					end if;	
					if	(ie_regra_incl_npt_adulta_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_npt_adulta(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_adulta_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N',
							nvl(ie_html_p,'N'));

						if	(get_ApresHorNPTAntiga = 'S') then
							adep_gerar_horarios_pck.adep_obter_horarios_npt_antiga(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_npt_adulta_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
						end if;
						end;
					end if;
					if	(ie_regra_incl_npt_neonatal_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_npt_neo(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_adulta_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N');
						end;
					end if;
					if	(ie_regra_incl_npt_pediatrica_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_npt_ped(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_npt_adulta_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								'N');
						end;
					end if;
					end;
				elsif	(ie_regra_incl_procedimento_w <> 'N') then
					begin
					adep_gerar_horarios_pck.adep_obter_horarios_proced(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_procedimento_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w,
						ie_quimio_p);
					adep_gerar_horarios_pck.adep_obter_horarios_proced_ass(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_procedimento_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_p);
					if	(ie_regra_incl_intervencao_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_horarios_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					end;
				end if;
				end;
			elsif	(ie_aba_p = 'L') then
				begin		
				adep_gerar_horarios_pck.adep_obter_horarios_coleta(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					ie_aba_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_coleta_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
				end;
			end if;
			end;
		end if;
		end;
	else	
		begin
		adep_gerar_horarios_pck.adep_obter_horarios_medic_hd(
			cd_estabelecimento_p,
			cd_setor_usuario_p,
			cd_perfil_p,
			nm_usuario_p,
			nr_atendimento_p,
			nr_seq_dialise_p,
			dt_inicial_horarios_w,
			dt_final_horarios_w,
			dt_validade_limite_w,
			ie_exibir_hor_realizados_p,
			ie_exibir_hor_suspensos_p,
			ie_regra_incl_medicamento_w,
			get_ie_data_lib_prescr,
			get_ie_exibir_suspensos,
			get_ie_prescr_setor_atual,
			cd_setor_pac_w);
		end;
	end if;
	dt_horario_inicio_sinc_w := null;
	dt_horario_fim_sinc_w := null;
	open c02;
	loop
	fetch c02 into dt_horario_w;
	exit when c02%notfound;
		begin
		if	(i < 40) then
			begin
			if (dt_horario_inicio_sinc_w is null) then
				dt_horario_inicio_sinc_w := dt_horario_w;
			end if;
			dt_horario_fim_sinc_w	:= dt_horario_w;
			i			:= i + 1;
			vetor_w(i).horario_w	:= to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss');
			end;
		end if;
		end;
	end loop;
	close c02;
	j	:= i;
	while	(j < 40) loop
		begin
		j			:= j + 1;
		vetor_w(j).horario_w	:= null;
		end;
	end loop;
	select	w_adep_t_seq.nextval
	into	nr_seq_wadep_w
	from	dual;
	insert into w_adep_t (
		nr_sequencia,
		nm_usuario,
		ie_tipo_item,
		hora1, 	hora2,	hora3,	hora4,	hora5,	hora6,	hora7,	hora8,	hora9,	hora10,
		hora11, hora12, hora13, hora14, hora15, hora16, hora17, hora18, hora19, hora20,
		hora21, hora22, hora23, hora24, hora25, hora26, hora27, hora28, hora29, hora30,
		hora31, hora32, hora33, hora34, hora35, hora36, hora37, hora38, hora39, hora40)
	values (
		nr_seq_wadep_w,
		nm_usuario_p,
		'H',
		vetor_w(1).horario_w,
		vetor_w(2).horario_w,
		vetor_w(3).horario_w,
		vetor_w(4).horario_w,
		vetor_w(5).horario_w,
		vetor_w(6).horario_w,
		vetor_w(7).horario_w,
		vetor_w(8).horario_w,
		vetor_w(9).horario_w,
		vetor_w(10).horario_w,
		vetor_w(11).horario_w,
		vetor_w(12).horario_w,
		vetor_w(13).horario_w,
		vetor_w(14).horario_w,
		vetor_w(15).horario_w,
		vetor_w(16).horario_w,
		vetor_w(17).horario_w,
		vetor_w(18).horario_w,
		vetor_w(19).horario_w,
		vetor_w(20).horario_w,
		vetor_w(21).horario_w,
		vetor_w(22).horario_w,
		vetor_w(23).horario_w,
		vetor_w(24).horario_w,
		vetor_w(25).horario_w,
		vetor_w(26).horario_w,
		vetor_w(27).horario_w,
		vetor_w(28).horario_w,
		vetor_w(29).horario_w,
		vetor_w(30).horario_w,
		vetor_w(31).horario_w,
		vetor_w(32).horario_w,
		vetor_w(33).horario_w,
		vetor_w(34).horario_w,
		vetor_w(35).horario_w,
		vetor_w(36).horario_w,
		vetor_w(37).horario_w,
		vetor_w(38).horario_w,
		vetor_w(39).horario_w,
		vetor_w(40).horario_w);
	commit;
	if	(nr_seq_dialise_p is null) then
		begin
		if	(ie_palm_p = 'S') then
			begin
			adep_gerar_horarios_pck.adep_obter_medic(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p, 
				'N',
				ie_regra_incl_medicamento_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,			
				get_ie_agrupar_dose_esp,
				get_ie_diluicao_acm_sn_gestao,
				get_ie_mostrar_subs,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				get_agrupar_suspensos,
				'S',
				ie_quimio_p,
				ie_clinician_p,
				nvl(ie_html_p, 'N'));
			adep_gerar_horarios_pck.adep_obter_proced_assoc(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				'N',
				'N',
				ie_regra_incl_procedimento_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_agrupar_associados,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_p);	
			adep_gerar_horarios_pck.adep_obter_solucao(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_solucao_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				ie_solucoes_continuas_p,
				ie_solucoes_interrompidas_p,
				get_ie_prescr_setor_atual,
				get_ie_formato_solucoes,
				cd_setor_pac_w,
				dividir(qt_horas_anteriores_p,24),
				dividir(qt_horas_adicionais_p,24),
				dt_referencia_p,
				'S',
				ie_quimio_p,
        nvl(ie_html_p,'N'));
			adep_gerar_horarios_pck.adep_obter_dieta_oral(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_dieta_oral_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_horarios_dietas_orais,
				get_ie_exibe_sem_lib_farm,
				get_ie_exibe_dietas,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			adep_gerar_horarios_pck.adep_obter_supl_oral(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_supl_oral_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			adep_gerar_horarios_pck.adep_obter_hemoterap(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_hemoterapia_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				ie_so_proc_setor_usuario_p,
				ie_so_interv_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			adep_gerar_horarios_pck.adep_obter_sne(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_sne_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_solucoes_continuas_p,
				'S',
				ie_solucoes_interrompidas_p);
			adep_gerar_horarios_pck.adep_obter_ccg(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_ccg_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_exibir_dil_ccg,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S',
				ie_quimio_p);
				if 	(adep_gerar_horarios_pck.getexibesaepalm() = 'S') then
					adep_gerar_horarios_pck.adep_obter_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							'S');
				end if;
			if 	(adep_gerar_horarios_pck.getexibeivcpalm() = 'S') then	
				adep_gerar_horarios_pck.adep_obter_ivc(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_ivc_w,
					get_ie_data_lib_prescr,
					get_ie_lib_pend_rep,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);				
			end if;	
			if 	(adep_gerar_horarios_pck.getexiberecpalm() = 'S') then
				adep_gerar_horarios_pck.adep_obter_rec(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_recomendacao_w,
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w,
						'S',
						ie_quimio_p);
			end if;	
			adep_gerar_horarios_pck.adep_obter_cig(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_cig_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w 
				);
			if	(ie_regra_incl_gas_w <> 'N') then
				begin
				adep_gerar_horarios_pck.adep_obter_gas(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_gas_w,
					get_ie_data_lib_prescr,
					get_ie_lib_pend_rep,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					get_ie_gas_horario,
					nvl(ie_html_p,'N'),
					nvl(ie_java_p,'N'));
				end;
			end if;
			if	(get_ie_agrupar_dose_esp = 'N') then
				begin
				adep_gerar_horarios_pck.adep_obter_medic_de(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_medicamento_w,
					get_ie_data_lib_prescr,
					get_ie_lib_pend_rep,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,			
					get_ie_agrupar_dose_esp,
					get_ie_diluicao_acm_sn_gestao,
					cd_setor_pac_w,
					'S');
				end;
			end if;
			if	(ie_regra_incl_leite_w <> 'N') then
				begin
				adep_gerar_horarios_pck.adep_obter_leite(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_leite_w,
					get_ie_data_lib_prescr,
					get_ie_lib_pend_rep,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
				end;
			end if;
			adep_gerar_horarios_pck.adep_obter_npt_adulta(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			adep_gerar_horarios_pck.adep_obter_npt_neonatal(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_neonatal_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_p);			
			adep_gerar_horarios_pck.adep_obter_npt_ped(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_neonatal_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_palm_p);				
			end;
		else
			begin
			if	(ie_aba_p <> 'L') then
				begin
				if	(ie_so_proc_setor_usuario_p = 'N') then
					begin
					if	(ie_regra_incl_dieta_oral_w <> 'N') then
						begin
						if (get_usa_servico_dietas = 'S') then
							adep_gerar_horarios_pck.adep_obter_dieta_oral_servico(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_dieta_oral_w,
								get_ie_data_lib_prescr,
								get_ie_lib_pend_rep,
								get_ie_exibir_suspensos,
								get_ie_horarios_dietas_orais,
								get_ie_exibe_sem_lib_farm,
								get_ie_exibe_dietas,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
						else
							adep_gerar_horarios_pck.adep_obter_dieta_oral(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_dieta_oral_w,
								get_ie_data_lib_prescr,
								get_ie_lib_pend_rep,
								get_ie_exibir_suspensos,
								get_ie_horarios_dietas_orais,
								get_ie_exibe_sem_lib_farm,
								get_ie_exibe_dietas,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								'N');			
						end if;
						end;
					end if;
					if	(ie_regra_incl_supl_oral_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_supl_oral(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_supl_oral_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N');
						end;
					end if;	
					if	(ie_regra_incl_leite_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_leite(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_leite_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					if	(ie_regra_incl_medicamento_w <> 'N') and
						(ie_atualizar_medic_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_medic(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_medicamento_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,			
							get_ie_agrupar_dose_esp,
							get_ie_diluicao_acm_sn_gestao,
							get_ie_mostrar_subs,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							get_agrupar_suspensos,
							'N',
							ie_quimio_p,
							ie_clinician_p,
							nvl(ie_html_p, 'N'));
						if	(get_ie_agrupar_dose_esp = 'N') then
							begin
							adep_gerar_horarios_pck.adep_obter_medic_de(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_medicamento_w,
								get_ie_data_lib_prescr,
								get_ie_lib_pend_rep,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,			
								get_ie_agrupar_dose_esp,
								get_ie_diluicao_acm_sn_gestao,
								cd_setor_pac_w,
								'N');
							end;
						end if;
						end;
					end if;	
					if	(ie_regra_incl_material_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_material(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_material_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p);
						end;
					end if;
					if	(ie_regra_incl_procedimento_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_proced(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_procedimento_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_associados,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p);
					adep_gerar_horarios_pck.adep_obter_proced_assoc(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_procedimento_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_associados,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_p);
						if	(get_ie_mat_med_proc_gestao = 'S') or
							(getExibeAssocGas = 'S') then
							begin
							adep_gerar_horarios_pck.adep_obter_assoc_proc(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								null,
								get_ie_data_lib_prescr,
								get_ie_lib_pend_rep,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,			
								get_ie_agrupar_dose_esp,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_quimio_p);
							end;
						end if;
						end;
					end if;
					if	(ie_regra_incl_coleta_w <> 'N') and
						(get_ie_exibir_coleta_gestao <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_coleta(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							ie_aba_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_coleta_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					if	(ie_regra_incl_cig_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_cig(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_cig_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w 
							);
						end;
					end if;	
					if	(ie_regra_incl_ccg_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_ccg(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_ccg_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_exibir_dil_ccg,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N',
							ie_quimio_p);
						--if	(get_ie_mat_med_proc_gestao = 'S') and
						--	(get_ie_gerar_horarios_glic  = 'N') then
						if	(get_ie_assoc_glic = 'S') then
							begin
							adep_gerar_horarios_pck.adep_obter_assoc_glic(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								null,
								get_ie_data_lib_prescr,					
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,			
								get_ie_agrupar_dose_esp,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;
						end;
					end if;		
					if	(ie_regra_incl_ivc_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_ivc(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_ivc_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;	
					if	(ie_regra_incl_solucao_w <> 'N') and
						((get_ie_exibir_solucao_gestao <> 'N') or (ie_html_p = 'S')) then
						begin
						adep_gerar_horarios_pck.adep_obter_solucao(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_solucao_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_solucoes_continuas_p,
							ie_solucoes_interrompidas_p,
							get_ie_prescr_setor_atual,
							get_ie_formato_solucoes,
							cd_setor_pac_w,
							dividir(qt_horas_anteriores_p,24),
							dividir(qt_horas_adicionais_p,24),
							dt_referencia_p,
							'N',
							ie_quimio_p,
              nvl(ie_html_p,'N'));
						end;
					end if;
					if	(ie_regra_incl_dialise_w <> 'N' and
						get_ie_exibir_dialise <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_dialise(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_dialise_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_solucoes_continuas_p,
							get_ie_prescr_setor_atual,
							get_ie_formato_solucoes,
							cd_setor_pac_w,
							dt_referencia_p);
						end;
					end if;
					if	(ie_regra_incl_gas_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_gas(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_gas_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							get_ie_gas_horario,
							nvl(ie_html_p,'N'),
							nvl(ie_java_p,'N'));
						end;
					end if;
					if	(ie_regra_incl_recomendacao_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_rec(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_recomendacao_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N',
							ie_quimio_p);
						end;
					end if;
					if	(ie_regra_incl_intervencao_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							'N');
						end;
					end if;
					if	(ie_regra_incl_hemoterapia_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_hemoterap(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_hemoterapia_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N'); 
						adep_gerar_horarios_pck.adep_obter_assoc_hemoterap(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_medicamento_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,			
							get_ie_agrupar_dose_esp,
							get_ie_diluicao_acm_sn_gestao,
							get_ie_mostrar_subs,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							get_agrupar_suspensos,
							'N',
							ie_quimio_p);	
						end;
					end if;	
					if	(ie_regra_incl_jejum_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_jejum(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_jejum_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end;
					end if;
					if	(get_ie_regra_incl_ordem_medica = 'G') then
						begin
						adep_gerar_horarios_pck.adep_obter_ordem_med(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							get_ie_regra_incl_ordem_medica,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);			
						end;
					end if;	
					if	(ie_regra_incl_sne_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_sne(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_sne_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_solucoes_continuas_p,
							'N',
							ie_solucoes_interrompidas_p);
						end;
					end if;
					if	(ie_regra_incl_npt_adulta_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_npt_adulta(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_adulta_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);			
						if	(get_ApresHorNPTAntiga = 'S') then	
						adep_gerar_horarios_pck.adep_obter_npt_adulta_velha(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_adulta_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w);
						end if;
						end;
					end if;	
					if	(ie_regra_incl_npt_neonatal_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_npt_neonatal(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_neonatal_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_p);			
						end;
					end if;	
					if	(ie_regra_incl_npt_pediatrica_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_npt_ped(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_neonatal_w,
							get_ie_data_lib_prescr,
							get_ie_lib_pend_rep,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_palm_p);			
						end;
					end if;
					end;
				elsif	(ie_regra_incl_procedimento_w <> 'N') then
					begin
					adep_gerar_horarios_pck.adep_obter_proced(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w, 
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_procedimento_w,
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_agrupar_associados,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w,
						ie_quimio_p);	
					adep_gerar_horarios_pck.adep_obter_proced_assoc(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_procedimento_w,
						get_ie_data_lib_prescr,
						get_ie_lib_pend_rep,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_agrupar_associados,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w,
						ie_palm_p);
					if	(ie_regra_incl_intervencao_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_obter_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							'N');
						end;
					end if;		
					end;
				end if;
				end;
			elsif	(ie_aba_p = 'L') then
				begin
				adep_gerar_horarios_pck.adep_obter_coleta(cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					ie_aba_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_coleta_w,
					get_ie_data_lib_prescr,
					get_ie_lib_pend_rep,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w); 	
				end;
			end if;
			end;
		end if;
		end;
	else
		begin
		adep_gerar_horarios_pck.adep_obter_medic_hd(
			cd_estabelecimento_p,
			cd_setor_usuario_p,
			cd_perfil_p,
			nm_usuario_p,
			nr_atendimento_p,
			nr_seq_dialise_p,
			dt_inicial_horarios_w,
			dt_final_horarios_w,
			dt_validade_limite_w,
			ie_exibir_hor_realizados_p,
			ie_exibir_hor_suspensos_p,
			ie_regra_incl_medicamento_w,
			get_ie_data_lib_prescr,
			get_ie_lib_pend_rep,
			get_ie_exibir_suspensos,
			get_ie_agrupar_acm_sn,			
			get_ie_agrupar_dose_esp,
			get_ie_diluicao_acm_sn_gestao,
			get_ie_prescr_setor_atual,
			cd_setor_pac_w);
		if	(get_ie_agrupar_dose_esp = 'N') then
			begin
			adep_gerar_horarios_pck.adep_obter_medic_hd_de(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				nr_seq_dialise_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_medicamento_w,
				get_ie_data_lib_prescr,
				get_ie_lib_pend_rep,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,			
				get_ie_agrupar_dose_esp,
				get_ie_diluicao_acm_sn_gestao,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			end;
		end if;
		end;
	end if;
	if	(nr_seq_dialise_p is null) then
		begin
		if	(ie_palm_p = 'S') then
			begin
			
			if (ie_clinician_p = 'S') then
				ie_exibe_itens_realizado_w:= ie_exibir_hor_realizados_p;
			else	
				ie_exibe_itens_realizado_w:= 'N';
			end if;
			
			adep_gerar_horarios_pck.adep_sincronizar_medic(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibe_itens_realizado_w,
				'N',
				ie_regra_incl_medicamento_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,			
				get_ie_agrupar_dose_esp,
				get_ie_obs_diferenciar,
				null,
				null,
				get_ie_mostrar_subs,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				get_agrupar_suspensos,
				cd_item_atualizar_w,
				ie_quimio_p,
				'S',
				nvl(ie_html_p, 'N'));
			adep_gerar_horarios_pck.adep_sincronizar_proced_assoc(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				'N',
				'N',
				ie_regra_incl_procedimento_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_agrupar_associados,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				null,
				null,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			adep_gerar_horarios_pck.adep_sincronizar_solucao(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_solucao_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				ie_solucoes_continuas_p,
				null,
				null,
				get_ie_prescr_setor_atual,
				get_ie_formato_solucoes,
				cd_setor_pac_w,
				ie_quimio_p,
				ie_palm_w,
				'N',
				dt_referencia_p,
				nvl(ie_html_p,'N'),
				nvl(ie_clinician_p,'N'));	
			adep_gerar_horarios_pck.adep_sincronizar_dieta_oral(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_dieta_oral_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_horarios_dietas_orais,
				null,
				null,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			adep_gerar_horarios_pck.adep_sincronizar_supl_oral(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p, 					
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_supl_oral_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				null,
				null,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			adep_gerar_horarios_pck.adep_sincronizar_hemoterap(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_hemoterapia_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_data_lib_proced,
				ie_so_interv_setor_usuario_p,
				null,
				null,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S'
				);
			adep_gerar_horarios_pck.adep_sincronizar_sne(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_sne_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				null,
				null,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				ie_solucoes_continuas_p);
			adep_gerar_horarios_pck.adep_sincronizar_ccg(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_ccg_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				null,
				null,
				get_ie_exibir_dil_ccg,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
				if 	(adep_gerar_horarios_pck.getexibesaepalm() = 'S') then
					adep_gerar_horarios_pck.adep_sincronizar_interv(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_intervencao_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							ie_so_proc_setor_usuario_p,
							ie_so_interv_setor_usuario_p,
							null,
							null,
							get_ie_prescr_setor_atual);
				end if;
			if	(adep_gerar_horarios_pck.getexibeivcpalm() = 'S')  then	
				adep_gerar_horarios_pck.adep_sincronizar_ivc(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_ivc_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					NULL,
					NULL,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			end if;	
			if	(adep_gerar_horarios_pck.getexiberecpalm() = 'S')  then
				adep_gerar_horarios_pck.adep_sincronizar_rec(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_recomendacao_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					ie_quimio_p);
			end if;
			adep_gerar_horarios_pck.adep_sincronizar_cig(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_cig_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				get_ie_data_lib_proced,
				ie_so_proc_setor_usuario_p,
				null,
				null,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			if 	(ie_regra_incl_gas_w <> 'N') and
				(get_ie_exibe_hor_gas = 'S')then
				adep_gerar_horarios_pck.adep_sincronizar_gas(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_gas_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					get_ie_gas_horario,
					'S',
					nvl(ie_html_p,'N'),
					nvl(ie_java_p,'N'));
			end if;
			if	(get_ie_agrupar_dose_esp = 'N') then				
				adep_gerar_horarios_pck.adep_sincronizar_medic_de(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_medicamento_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,			
					get_ie_agrupar_dose_esp,
					get_ie_obs_diferenciar,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w
					);	 			
			end if;
			if	(ie_regra_incl_leite_w <> 'N') then
				begin
				adep_gerar_horarios_pck.adep_sincronizar_leite(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_leite_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
				end;
			end if;
			adep_gerar_horarios_pck.adep_sincronizar_npt_adul(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				null,
				null,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			adep_gerar_horarios_pck.adep_sincronizar_npt_neo(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				null,
				null,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');
			adep_gerar_horarios_pck.adep_sincronizar_npt_ped(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_npt_adulta_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,
				null,
				null,
				get_ie_exibe_sem_lib_farm,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w,
				'S');	
			end;
		else
			begin
			if	(ie_aba_p <> 'L') then
				begin
				if	(ie_so_proc_setor_usuario_p = 'N') then
					begin
						if	(ie_regra_incl_dieta_oral_w <> 'N') then
							begin
							if	(get_usa_servico_dietas = 'S') then
								adep_gerar_horarios_pck.adep_sinc_diet_oral_serv(
									cd_estabelecimento_p,
									cd_setor_usuario_p,
									cd_perfil_p,
									nm_usuario_p,
									nr_atendimento_p,
									dt_inicial_horarios_w,
									dt_final_horarios_w,
									dt_validade_limite_w,
									ie_exibir_hor_realizados_p,
									ie_exibir_hor_suspensos_p,
									ie_regra_incl_dieta_oral_w,
									get_ie_data_lib_prescr,
									get_ie_exibir_suspensos,
									get_ie_horarios_dietas_orais,
									null,
									null,
									get_ie_exibe_sem_lib_farm,
									get_ie_prescr_setor_atual,
									cd_setor_pac_w);
							else
								adep_gerar_horarios_pck.adep_sincronizar_dieta_oral(
									cd_estabelecimento_p,
									cd_setor_usuario_p,
									cd_perfil_p,
									nm_usuario_p,
									nr_atendimento_p,
									dt_inicial_horarios_w,
									dt_final_horarios_w,
									dt_validade_limite_w,
									ie_exibir_hor_realizados_p,
									ie_exibir_hor_suspensos_p,
									ie_regra_incl_dieta_oral_w,
									get_ie_data_lib_prescr,
									get_ie_exibir_suspensos,
									get_ie_horarios_dietas_orais,
									null,
									null,
									get_ie_exibe_sem_lib_farm,
									get_ie_prescr_setor_atual,
									cd_setor_pac_w);
							end if;
							end;
						end if;
						if	(ie_regra_incl_supl_oral_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_supl_oral(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p, 					
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_supl_oral_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;		
						if	(ie_regra_incl_leite_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_leite(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p, 					
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_leite_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;	
						if	(ie_regra_incl_medicamento_w <> 'N') and
							(ie_atualizar_medic_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_medic(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_medicamento_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,			
								get_ie_agrupar_dose_esp,
								get_ie_obs_diferenciar,
								null,
								null,
								get_ie_mostrar_subs,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								get_agrupar_suspensos,
								cd_item_atualizar_w,
								ie_quimio_p,
								ie_palm_w,
								nvl(ie_html_p, 'N'));
							if	(get_ie_agrupar_dose_esp = 'N') and
								(ie_atualizar_medic_w <> 'N') then				
								begin
								adep_gerar_horarios_pck.adep_sincronizar_medic_de(
									cd_estabelecimento_p,
									cd_setor_usuario_p,
									cd_perfil_p,
									nm_usuario_p,
									nr_atendimento_p,
									dt_inicial_horarios_w,
									dt_final_horarios_w,
									dt_validade_limite_w,
									ie_exibir_hor_realizados_p,
									ie_exibir_hor_suspensos_p,
									ie_regra_incl_medicamento_w,
									get_ie_data_lib_prescr,
									get_ie_exibir_suspensos,
									get_ie_agrupar_acm_sn,			
									get_ie_agrupar_dose_esp,
									get_ie_obs_diferenciar,
									null,
									null,
									get_ie_prescr_setor_atual,
									cd_setor_pac_w
									);	 			
								end;
							end if;
							end;
						end if;
						if	(ie_regra_incl_material_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_material(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_material_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_quimio_p);
							end;
						end if;
						if	(ie_regra_incl_procedimento_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_proced(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_procedimento_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_agrupar_associados,
								get_ie_data_lib_proced,
								ie_so_proc_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_quimio_p);
							if	(get_ie_mat_med_proc_gestao = 'S') or
								(getExibeAssocGas = 'S') then				
								begin
								adep_gerar_horarios_pck.adep_sincronizar_assoc_proc(
									cd_estabelecimento_p,
									cd_setor_usuario_p,
									cd_perfil_p,
									nm_usuario_p,
									nr_atendimento_p,
									dt_inicial_horarios_w,
									dt_final_horarios_w,
									dt_validade_limite_w,
									ie_exibir_hor_realizados_p,
									ie_exibir_hor_suspensos_p,
									null,
									get_ie_data_lib_prescr,
									get_ie_exibir_suspensos,
									get_ie_agrupar_acm_sn,			
									get_ie_agrupar_dose_esp,
									get_ie_obs_diferenciar,
									null,
									null,
									get_ie_prescr_setor_atual,
									cd_setor_pac_w,
									ie_quimio_p);
								end;
							end if;
							end;
						end if;		
						if	(ie_regra_incl_coleta_w <> 'N') and
							(get_ie_exibir_coleta_gestao <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_coleta(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								ie_aba_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_coleta_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_data_lib_proced,
								ie_so_proc_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;
						if	(ie_regra_incl_cig_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_cig(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_cig_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_data_lib_proced,
								ie_so_proc_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;		
						if	(ie_regra_incl_ccg_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_ccg(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_ccg_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_data_lib_proced,
								ie_so_proc_setor_usuario_p,
								null,
								null,
								get_ie_exibir_dil_ccg,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								'N');
							--if	(get_ie_mat_med_proc_gestao = 'S') and
							--	(get_ie_gerar_horarios_glic  = 'N') then
							if	(get_ie_assoc_glic = 'S') then
								begin
								adep_gerar_horarios_pck.adep_sincronizar_assoc_glic(
									cd_estabelecimento_p,
									cd_setor_usuario_p,
									cd_perfil_p,
									nm_usuario_p,
									nr_atendimento_p,
									dt_inicial_horarios_w,
									dt_final_horarios_w,
									dt_validade_limite_w,
									ie_exibir_hor_realizados_p,
									ie_exibir_hor_suspensos_p,
									null,
									get_ie_data_lib_prescr,
									get_ie_exibir_suspensos,
									get_ie_agrupar_acm_sn,			
									get_ie_agrupar_dose_esp,
									get_ie_obs_diferenciar,
									null,
									null,
									get_ie_prescr_setor_atual,
									cd_setor_pac_w);
								end;
							end if;
							end;
						end if;				
						if	(ie_regra_incl_ivc_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_ivc(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_ivc_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_data_lib_proced,
								ie_so_proc_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;	
						if	(ie_regra_incl_solucao_w <> 'N') and
							((get_ie_exibir_solucao_gestao <> 'N') or (ie_html_p = 'S')) then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_solucao(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_solucao_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								ie_solucoes_continuas_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								get_ie_formato_solucoes,
								cd_setor_pac_w,
								ie_quimio_p,
								ie_palm_w,
								get_vl_param673,
								dt_referencia_p,
								nvl(ie_html_p,'N'),
								nvl(ie_clinician_p,'N'));
							end;
						end if;
						if	(ie_regra_incl_dialise_w <> 'N' and
							get_ie_exibir_dialise <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_dialise(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_dialise_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								ie_solucoes_continuas_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								get_ie_formato_solucoes,
								cd_setor_pac_w,
								dt_referencia_p);
							end;
						end if;
						if 	(ie_regra_incl_gas_w <> 'N') and
							(get_ie_exibe_hor_gas = 'S')then
							adep_gerar_horarios_pck.adep_sincronizar_gas(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_gas_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								get_ie_gas_horario,
								'N',
								nvl(ie_html_p,'N'),
								nvl(ie_java_p,'N'));
						end if;
						if	(ie_regra_incl_recomendacao_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_rec(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_recomendacao_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_quimio_p);
							end;
						end if;
						if	(ie_regra_incl_intervencao_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_interv(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_intervencao_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								ie_so_proc_setor_usuario_p,
								ie_so_interv_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual);
							end;
						end if;
						if	(ie_regra_incl_hemoterapia_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_hemoterap(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_hemoterapia_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								get_ie_data_lib_proced,
								ie_so_interv_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_palm_w);
							adep_gerar_horarios_pck.adep_sincronizar_assoc_hemot(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_hemoterapia_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,			
								get_ie_agrupar_dose_esp,
								get_ie_obs_diferenciar,
								null,
								null,
								get_ie_mostrar_subs,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								get_agrupar_suspensos,
								cd_item_atualizar_w,
								ie_quimio_p,
								'S');								
							end;
						end if;
						if	(ie_regra_incl_jejum_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_jejum(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_jejum_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								null,
								null,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;
						if	(get_ie_regra_incl_ordem_medica = 'G') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_ordem_med(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								get_ie_regra_incl_ordem_medica,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							end;
						end if;	
						if	(ie_regra_incl_sne_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_sne(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_sne_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								ie_solucoes_continuas_p);
							end;
						end if;	
						if	(ie_regra_incl_npt_adulta_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_npt_adul(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_npt_adulta_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w);
							if	(get_ApresHorNPTAntiga = 'S') then
								adep_gerar_horarios_pck.adep_sincronizar_npt_adul_ant(
									cd_estabelecimento_p,
									cd_setor_usuario_p,
									cd_perfil_p,
									nm_usuario_p,
									nr_atendimento_p,
									dt_inicial_horarios_w,
									dt_final_horarios_w,
									dt_validade_limite_w,
									ie_exibir_hor_realizados_p,
									ie_exibir_hor_suspensos_p,
									ie_regra_incl_npt_adulta_w,
									get_ie_data_lib_prescr,
									get_ie_exibir_suspensos,
									get_ie_agrupar_acm_sn,
									null,
									null,
									get_ie_exibe_sem_lib_farm,
									get_ie_prescr_setor_atual,
									cd_setor_pac_w);
							end if;
						end;
					end if;
					if	(ie_regra_incl_npt_neonatal_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_sincronizar_npt_neo(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_npt_adulta_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							null,
							null,
							get_ie_exibe_sem_lib_farm,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							'N');	
						end;
					end if;
					if	(ie_regra_incl_npt_pediatrica_w <> 'N') then
						begin
						adep_gerar_horarios_pck.adep_sincronizar_npt_ped(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_npt_adulta_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								null,
								null,
								get_ie_exibe_sem_lib_farm,
								get_ie_prescr_setor_atual,
								cd_setor_pac_w,
								'N');	
							end;
						end if;	
					end;
				elsif	(ie_regra_incl_procedimento_w <> 'N') then
					begin
						adep_gerar_horarios_pck.adep_sincronizar_proced(
							cd_estabelecimento_p,
							cd_setor_usuario_p,
							cd_perfil_p,
							nm_usuario_p,
							nr_atendimento_p,
							dt_inicial_horarios_w,
							dt_final_horarios_w,
							dt_validade_limite_w,
							ie_exibir_hor_realizados_p,
							ie_exibir_hor_suspensos_p,
							ie_regra_incl_procedimento_w,
							get_ie_data_lib_prescr,
							get_ie_exibir_suspensos,
							get_ie_agrupar_acm_sn,
							get_ie_agrupar_associados,
							get_ie_data_lib_proced,
							ie_so_proc_setor_usuario_p,
							null,
							null,
							get_ie_prescr_setor_atual,
							cd_setor_pac_w,
							ie_quimio_p);				
						if	(ie_regra_incl_intervencao_w <> 'N') then
							begin
							adep_gerar_horarios_pck.adep_sincronizar_interv(
								cd_estabelecimento_p,
								cd_setor_usuario_p,
								cd_perfil_p,
								nm_usuario_p,
								nr_atendimento_p,
								dt_inicial_horarios_w,
								dt_final_horarios_w,
								dt_validade_limite_w,
								ie_exibir_hor_realizados_p,
								ie_exibir_hor_suspensos_p,
								ie_regra_incl_intervencao_w,
								get_ie_data_lib_prescr,
								get_ie_exibir_suspensos,
								get_ie_agrupar_acm_sn,
								ie_so_proc_setor_usuario_p,
								ie_so_interv_setor_usuario_p,
								null,
								null,
								get_ie_prescr_setor_atual);
							end;
						end if;				
						end;
				end if;
				end;
			elsif	(ie_aba_p = 'L') then
				begin		
					adep_gerar_horarios_pck.adep_sincronizar_coleta(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						ie_aba_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_coleta_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						null,
						null,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w);
				end;
			end if;
			end;
		end if;
		end;
	else
		begin
			adep_gerar_horarios_pck.adep_sincronizar_medic_hd(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				nm_usuario_p,
				nr_atendimento_p,
				nr_seq_dialise_p,
				dt_inicial_horarios_w,
				dt_final_horarios_w,
				dt_validade_limite_w,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_regra_incl_medicamento_w,
				get_ie_data_lib_prescr,
				get_ie_exibir_suspensos,
				get_ie_agrupar_acm_sn,			
				get_ie_agrupar_dose_esp,
				get_ie_obs_diferenciar,
				null,
				null,
				get_ie_prescr_setor_atual,
				cd_setor_pac_w);
			if	(get_ie_agrupar_dose_esp = 'N') then				
				begin
				adep_gerar_horarios_pck.adep_sincronizar_medic_hd_de(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					nr_seq_dialise_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_medicamento_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,			
					get_ie_agrupar_dose_esp,
					get_ie_obs_diferenciar,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);				
				end;
			end if;
		end;
	end if;
	update	w_adep_t
	set	nr_prescricoes = adep_obter_prescricoes(nr_atendimento_p, ie_tipo_item, cd_item, nr_seq_proc_interno, cd_intervalo, qt_item, ie_data_lib_proced_w, ie_data_lib_prescr_w, ie_exibir_suspensos_w, dt_validade_limite_w,cd_setor_pac_w,nr_seq_cpoe)
	where	nm_usuario = nm_usuario_p
	and	nr_prescricoes is null;
	update	w_adep_t
	set	ie_prescricao_alta = obter_se_prescr_alta_adep(nr_prescricoes),
		ie_hemodialise = obter_se_prescricao_hemo(nr_atendimento_p,null,nr_prescricoes)
	where	nm_usuario = nm_usuario_p;
	if	(get_ie_fonte_alto_risco	=	'M')  then
		update  w_adep_t
		set	ds_item			=	upper(ds_item)
		where	ie_alto_risco		=	'S'
		and	nm_usuario		=	nm_usuario_p
		and	ie_tipo_item		in      ('M','SOL');		
	end if;
	adep_gerar_ordem_apresent(nr_regra_ordem_w);
	adep_gerar_ordem_apres_gas(nm_usuario_p);
	adep_gerar_horarios_pck.gerar_flag_horarios(nm_usuario_p);
	end;
--	Dieta Oral =	D;
--	Dieta Oral Servico = DE;
--	Suplemento oral = S
--	Medicamentos = M
--	Medicamentos DE = M
--	Material = MAT
--	Procedimentos = P
--	AssocProc = IA
--	Coletas = (ieaba == L) ? P : L
--	CIG = C
--	CCG = G
--	Assoc Gli = IAG
--	IVC = I
--	Solucao = SOL
--	Dialise = DI
--	Gasoterapia = O
--	Recomendacoes  = R
--	Intervencoes = E
--	Hemoterapias = HM
--	Jejum = J
--	Sup Nutricional Enteral = SNE
--	NPT neonatal = NPN
--	NPT Adulta = NAN
--	NPT Velha = NPA
--	Ordem Medica = B
--	Medica hd = ME
--	Medic hd de = ME
--	Leite e derivados= LD
--	Itens associados Hemoterapia = IAH
--	Flag de horarios gerados = XH
	procedure	adep_gerar_horarios_pck.sincronizar_tipo_item(			
				ie_tipo_item_p			varchar2,
				cd_estabelecimento_p		number,
				cd_setor_usuario_p		number,
				cd_perfil_p			number,
				ie_aba_p			varchar2,
				ie_palm_p			varchar2,
				nm_usuario_p			varchar2,
				nr_atendimento_p		number,
				nr_seq_dialise_p		number,
				qt_horas_anteriores_p		number,
				qt_horas_adicionais_p		number,
				qt_horas_vigencia_p		number,
				dt_referencia_p			date,
				ie_exibir_hor_realizados_p	varchar2,
				ie_exibir_hor_suspensos_p	varchar2,
				ie_so_proc_setor_usuario_p	varchar2,
				ie_so_interv_setor_usuario_p	varchar2,
				ie_solucoes_continuas_p		varchar2,
				ie_solucoes_interrompidas_p	varchar2,
				cd_item_atualizar_p		number,
				ie_quimio_p			varchar2,
				ie_exibir_suspensos_p		varchar2,
				ie_html_p			varchar2,
				ie_java_p			varchar2,
				ie_clinician_p in varchar2) as	
		ie_tipo_w	varchar2(5) := nvl(ie_tipo_item_p, ie_tipo_item_Atualizar_w);
		cd_item_w	varchar2(255) := nvl(cd_item_atualizar_p, cd_item_atualizar_w);
	begin
		adep_gerar_horarios_pck.set_tipo_item_atualizacao(null, null);
		if (vetor_w.count = 0) then
			adep_gerar_horarios_pck.gerar_horarios_adep(
				cd_estabelecimento_p,
				cd_setor_usuario_p,
				cd_perfil_p,
				ie_aba_p,
				ie_palm_p,
				nm_usuario_p,
				nr_atendimento_p,
				nr_seq_dialise_p,
				qt_horas_anteriores_p,
				qt_horas_adicionais_p,
				qt_horas_vigencia_p,
				dt_referencia_p,
				ie_exibir_hor_realizados_p,
				ie_exibir_hor_suspensos_p,
				ie_so_proc_setor_usuario_p,
				ie_so_interv_setor_usuario_p,
				ie_solucoes_continuas_p,
				ie_solucoes_interrompidas_p,
				ie_quimio_p,
				ie_exibir_suspensos_p,
				'N',
				'N',
				ie_html_p,
				ie_java_p,
				ie_clinician_p);
		else
			if (ie_tipo_w in ('P','L')) then
				update	w_adep_t
				set	hora1 = null,  hora2 = null,  hora3 = null,  
					hora4 = null,  hora5 = null,  hora6 = null,  
					hora7 = null,  hora8 = null,  hora9 = null,  
					hora10 = null, hora11 = null, hora12 = null, 
					hora13 = null, hora14 = null, hora15 = null, 
					hora16 = null, hora17 = null, hora18 = null, 
					hora19 = null, hora20 = null, hora21 = null, 
					hora22 = null, hora23 = null, hora24 = null, 
					hora25 = null, hora26 = null, hora27 = null, 
					hora28 = null, hora29 = null, hora30 = null, 
					hora31 = null, hora32 = null, hora33 = null, 
					hora34 = null, hora35 = null, hora36 = null, 
					hora37 = null, hora38 = null, hora39 = null, 
					hora40 = null
				where	ie_tipo_item in ('P','L');
				commit;
			else
				update	w_adep_t
				set	hora1 = null,  hora2 = null,  hora3 = null,  
					hora4 = null,  hora5 = null,  hora6 = null,  
					hora7 = null,  hora8 = null,  hora9 = null,  
					hora10 = null, hora11 = null, hora12 = null, 
					hora13 = null, hora14 = null, hora15 = null, 
					hora16 = null, hora17 = null, hora18 = null, 
					hora19 = null, hora20 = null, hora21 = null, 
					hora22 = null, hora23 = null, hora24 = null, 
					hora25 = null, hora26 = null, hora27 = null, 
					hora28 = null, hora29 = null, hora30 = null, 
					hora31 = null, hora32 = null, hora33 = null, 
					hora34 = null, hora35 = null, hora36 = null, 
					hora37 = null, hora38 = null, hora39 = null, 
					hora40 = null
				where	ie_tipo_item = ie_tipo_w
				and	((cd_item_w is null) or ((cd_item	= cd_item_w) and (ie_tipo_w = 'M')));
				commit;
			end if;
			if ( ie_tipo_w = 'D') then
				adep_gerar_horarios_pck.adep_sincronizar_dieta_oral(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_dieta_oral_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_horarios_dietas_orais,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'DE') then
				adep_gerar_horarios_pck.adep_sinc_diet_oral_serv(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_dieta_oral_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_horarios_dietas_orais,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'S') then
				adep_gerar_horarios_pck.adep_sincronizar_supl_oral(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p, 					
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_supl_oral_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'M') then
				adep_gerar_horarios_pck.adep_sincronizar_medic(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_medicamento_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,			
					get_ie_agrupar_dose_esp,
					get_ie_obs_diferenciar,
					null,
					null,
					get_ie_mostrar_subs,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					get_agrupar_suspensos,
					cd_item_w,
					ie_quimio_p,
					ie_palm_w,
					nvl(ie_html_p, 'N'));
				if	(get_ie_agrupar_dose_esp = 'N') then				
					adep_gerar_horarios_pck.adep_sincronizar_medic_de(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_medicamento_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,			
						get_ie_agrupar_dose_esp,
						get_ie_obs_diferenciar,
						null,
						null,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w
						);	 			
				end if;
			elsif (ie_tipo_w = 'MAT') then
				adep_gerar_horarios_pck.adep_sincronizar_material(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_material_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					ie_quimio_p);		
			elsif ie_tipo_w in ('P','L') then
				if not (ie_aba_p = 'L') then
					adep_gerar_horarios_pck.adep_sincronizar_proced(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_procedimento_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						get_ie_agrupar_associados,
						get_ie_data_lib_proced,
						ie_so_proc_setor_usuario_p,
						null,
						null,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w,
						ie_quimio_p);
				end if;
				adep_gerar_horarios_pck.adep_sincronizar_coleta(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					ie_aba_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_coleta_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'IA') then
				adep_gerar_horarios_pck.adep_sincronizar_assoc_proc(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						null,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,			
						get_ie_agrupar_dose_esp,
						get_ie_obs_diferenciar,
						null,
						null,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w,
						ie_quimio_p);
			elsif (ie_tipo_w = 'C') then
				adep_gerar_horarios_pck.adep_sincronizar_cig(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_cig_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'G') then
				adep_gerar_horarios_pck.adep_sincronizar_ccg(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_ccg_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					null,
					null,
					get_ie_exibir_dil_ccg,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					'N');
			elsif (ie_tipo_w = 'IAG') then
				adep_gerar_horarios_pck.adep_sincronizar_assoc_glic(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					null,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,			
					get_ie_agrupar_dose_esp,
					get_ie_obs_diferenciar,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'I') then
				adep_gerar_horarios_pck.adep_sincronizar_ivc(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_ivc_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_proc_setor_usuario_p,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'SOL') then
				adep_gerar_horarios_pck.adep_sincronizar_solucao(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_solucao_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					ie_solucoes_continuas_p,
					null,
					null,
					get_ie_prescr_setor_atual,
					get_ie_formato_solucoes,
					cd_setor_pac_w,
					ie_quimio_p,
					ie_palm_w,
					get_vl_param673,
					dt_referencia_p,
					nvl(ie_html_p,'N'),
					nvl(ie_clinician_p,'N'));
			elsif (ie_tipo_w = 'DI') then
				adep_gerar_horarios_pck.adep_sincronizar_dialise(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_dialise_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					ie_solucoes_continuas_p,
					null,
					null,
					get_ie_prescr_setor_atual,
					get_ie_formato_solucoes,
					cd_setor_pac_w,
					dt_referencia_p);
			elsif (ie_tipo_w = 'O') then
				adep_gerar_horarios_pck.adep_sincronizar_gas(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_gas_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					get_ie_gas_horario,
					ie_palm_p,
					nvl(ie_html_p,'N'),
					nvl(ie_java_p,'N'));
			elsif (ie_tipo_w = 'R') then
				adep_gerar_horarios_pck.adep_sincronizar_rec(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_recomendacao_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					ie_quimio_p);
			elsif (ie_tipo_w = 'E') then
				adep_gerar_horarios_pck.adep_sincronizar_interv(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_intervencao_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					ie_so_proc_setor_usuario_p,
					ie_so_interv_setor_usuario_p,
					null,
					null,
					get_ie_prescr_setor_atual);
			elsif (ie_tipo_w = 'HM') then
				adep_gerar_horarios_pck.adep_sincronizar_hemoterap(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_hemoterapia_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					get_ie_data_lib_proced,
					ie_so_interv_setor_usuario_p,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					ie_palm_p);
			elsif (ie_tipo_w = 'IAH') then			
				adep_gerar_horarios_pck.adep_sincronizar_assoc_hemot(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					'N',
					'N',
					ie_regra_incl_medicamento_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,			
					get_ie_agrupar_dose_esp,
					get_ie_obs_diferenciar,
					null,
					null,
					get_ie_mostrar_subs,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					get_agrupar_suspensos,
					cd_item_atualizar_w,
					ie_quimio_p,
					'S');			
			elsif (ie_tipo_w = 'J') then
				adep_gerar_horarios_pck.adep_sincronizar_jejum(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_jejum_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'SNE') then
				adep_gerar_horarios_pck.adep_sincronizar_sne(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_sne_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w,
					ie_solucoes_continuas_p);
			elsif (ie_tipo_w = 'NPA') then
				adep_gerar_horarios_pck.adep_sincronizar_npt_adul(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					ie_regra_incl_npt_adulta_w,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
				if	(get_ApresHorNPTAntiga = 'S') then
					adep_gerar_horarios_pck.adep_sincronizar_npt_adul_ant(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_npt_adulta_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,
						null,
						null,
						get_ie_exibe_sem_lib_farm,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w);
				end if;
			elsif (ie_tipo_w = 'B') then
				adep_gerar_horarios_pck.adep_sincronizar_ordem_med(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p,
					dt_inicial_horarios_w,
					dt_final_horarios_w,
					dt_validade_limite_w,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					get_ie_regra_incl_ordem_medica,
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_prescr_setor_atual,
					cd_setor_pac_w);
			elsif (ie_tipo_w = 'ME') then
				adep_gerar_horarios_pck.adep_sincronizar_medic_hd(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						nr_seq_dialise_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_medicamento_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,			
						get_ie_agrupar_dose_esp,
						get_ie_obs_diferenciar,
						null,
						null,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w);
				if	(get_ie_agrupar_dose_esp = 'N') then				
					adep_gerar_horarios_pck.adep_sincronizar_medic_hd_de(
						cd_estabelecimento_p,
						cd_setor_usuario_p,
						cd_perfil_p,
						nm_usuario_p,
						nr_atendimento_p,
						nr_seq_dialise_p,
						dt_inicial_horarios_w,
						dt_final_horarios_w,
						dt_validade_limite_w,
						ie_exibir_hor_realizados_p,
						ie_exibir_hor_suspensos_p,
						ie_regra_incl_medicamento_w,
						get_ie_data_lib_prescr,
						get_ie_exibir_suspensos,
						get_ie_agrupar_acm_sn,			
						get_ie_agrupar_dose_esp,
						get_ie_obs_diferenciar,
						null,
						null,
						get_ie_prescr_setor_atual,
						cd_setor_pac_w);
				end if;
			elsif	(ie_tipo_w = 'LD') then
				CALL adep_gerar_horarios_pck.adep_sincronizar_leite(
					cd_estabelecimento_p,
					cd_setor_usuario_p,
					cd_perfil_p,
					nm_usuario_p,
					nr_atendimento_p, 
					current_setting('adep_gerar_horarios_pck.dt_inicial_horarios_w')::timestamp,
					current_setting('adep_gerar_horarios_pck.dt_final_horarios_w')::timestamp, 
					current_setting('adep_gerar_horarios_pck.dt_validade_limite_w')::timestamp,
					ie_exibir_hor_realizados_p,
					ie_exibir_hor_suspensos_p,
					current_setting('adep_gerar_horarios_pck.ie_regra_incl_leite_w')::varchar(15),
					get_ie_data_lib_prescr,
					get_ie_exibir_suspensos,
					get_ie_agrupar_acm_sn,
					null,
					null,
					get_ie_exibe_sem_lib_farm,
					get_ie_prescr_setor_atual,
					current_setting('adep_gerar_horarios_pck.cd_setor_pac_w')::integer);
			end if;
		end if;
		commit;
	end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_sne ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint, ie_solucoes_continuas_p text) FROM PUBLIC;
