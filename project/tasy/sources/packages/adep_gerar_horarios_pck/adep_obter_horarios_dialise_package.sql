-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_obter_horarios_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_solucoes_continuas_p text, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint, dt_referencia_p timestamp default null) AS $body$
DECLARE

	dt_horario_w	timestamp;
	dt_lib_farm_w	timestamp;
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	dt_inicio_solucao_w timestamp;
	dt_fim_solucao_w timestamp;
	c01 CURSOR FOR
	SELECT	x.dt_status
	from	hd_prescricao b,
		prescr_solucao x,
		prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and     b.nr_sequencia  = x.nr_seq_dialise	
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	((get_ie_exibeSol_filtro = 'N') OR (obter_se_sol_vig_adep(a.nr_prescricao, x.ie_status, qt_horas_anteriores_w, qt_horas_adicionais_w, dt_referencia_p, x.dt_suspensao, x.dt_status) = 'S'))
	and	obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia),dt_lib_farm_w), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'	
	and     b.ie_tipo_dialise in ('H','P')
	and	(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))
	and ((x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p) or (x.ie_status     not in ('N','T')) or
			(((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'S') and (obter_se_prescr_vig_adep(CASE WHEN Get_Param652='P' THEN a.dt_prescricao  ELSE a.dt_inicio_prescr END ,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or			
			((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'N') and (exists ( SELECT 1 from prescr_mat_hor k where coalesce(k.ie_horario_especial,'N') = 'N' and k.nr_prescricao = x.nr_prescricao and k.nr_seq_solucao = x.nr_seq_solucao and Obter_se_horario_liberado(k.dt_lib_horario, k.dt_horario) = 'S' and k.dt_horario  between dt_inicial_horarios_p and dt_final_horarios_p)))))																																																																													  		
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))	
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'DI', 
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null,
																		a.cd_setor_Atendimento,
																		null,
																		null,			-- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	and	a.dt_validade_prescr between dt_inicio_solucao_w and  dt_fim_solucao_w
	group by
		x.dt_status;

	cDialiseMatHor CURSOR FOR
	SELECT	h.dt_horario
	from	prescr_mat_hor h,
			prescr_material m,
			hd_prescricao b,
			prescr_solucao x,
			prescr_medica a
	where	x.nr_prescricao = a.nr_prescricao
	and     b.nr_sequencia  = x.nr_seq_dialise
	and		x.nr_seq_solucao = m.nr_sequencia_solucao
	and		x.nr_prescricao = m.nr_prescricao
	and		m.nr_sequencia = h.nr_seq_material
	and		m.nr_prescricao = h.nr_prescricao
	and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and		a.nr_atendimento = nr_atendimento_p
	and		((get_ie_exibeSol_filtro = 'N') OR (obter_se_sol_vig_adep(a.nr_prescricao, x.ie_status, qt_horas_anteriores_w, qt_horas_adicionais_w, dt_referencia_p, x.dt_suspensao, x.dt_status) = 'S'))
	and		obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia),dt_lib_farm_w), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'	
	and     b.ie_tipo_dialise in ('H','P')
	and		(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
	and		((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))
	and 	((h.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p) or (x.ie_status not in ('N','T')) or
			((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'S') and (obter_se_prescr_vig_adep(CASE WHEN Get_Param652='P' THEN a.dt_prescricao  ELSE a.dt_inicio_prescr END ,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	and		((ie_exibir_sol_realizadas_p = 'S') or (coalesce(h.dt_fim_horario::text, '') = ''))
	and		((ie_exibir_sol_suspensas_p = 'S') or (coalesce(h.dt_suspensao::text, '') = ''))
	and		((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))	
	and		((ie_regra_inclusao_p = 'S') or
			((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'DI',
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null,
																		a.cd_setor_Atendimento,
																		null,
																		null,
																		null) = 'S')))
	and		((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and		((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	and		a.dt_validade_prescr between dt_inicio_solucao_w and  dt_fim_solucao_w
	group by
			h.dt_horario;

	tb_datas_w	dbms_sql.date_table;
	
BEGIN
	if (getIeMostraDialiseAntesFarm = 'S') then
		dt_lib_farm_w	:= clock_timestamp();
	end if;
	SELECT * FROM adep_gerar_horarios_pck.getdtrefsol(dt_validade_limite_p, dt_inicio_solucao_w, dt_fim_solucao_w) INTO STRICT dt_inicio_solucao_w, dt_fim_solucao_w;
	if (get_ie_gera_ciclo_dialise = 'I') then
		open cDialiseMatHor;
		loop
		fetch cDialiseMatHor bulk collect into tb_datas_w
		limit 100;
		exit when tb_datas_w.count = 0;
			begin
			forall i in tb_datas_w.first..tb_datas_w.last
				insert into w_adep_horarios_t(	nm_usuario,
												dt_horario,
												ie_solucao)
											values (
												nm_usuario_p,
												tb_datas_w(i),
												'S');
				commit;
			end;
		end loop;
		close cDialiseMatHor;
	else
		open c01;
		loop
		fetch C01 bulk collect into tb_datas_w
		limit 100;
		exit when tb_datas_w.count = 0;
			begin
			forall i in tb_datas_w.first..tb_datas_w.last
				insert into w_adep_horarios_t(	nm_usuario,
												dt_horario,
												ie_solucao)
											values (
												nm_usuario_p,
												tb_datas_w(i),
												'S');
				commit;
			end;
		end loop;
		close c01;
	end if;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_obter_horarios_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_solucoes_continuas_p text, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint, dt_referencia_p timestamp default null) FROM PUBLIC;
