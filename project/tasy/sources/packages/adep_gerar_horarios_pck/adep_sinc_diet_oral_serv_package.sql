-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_sinc_diet_oral_serv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_horarios_dietas_orais_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE

	ds_sep_bv_w		varchar(50);
	nr_seq_horario_w	bigint;
	ie_status_horario_w	varchar(15);
	cd_refeicao_w		varchar(15);
	ds_informacoes_w	varchar(4000);
	ds_observacoes_w	varchar(255);
	ds_informacoes_ww	varchar(2000);
	ds_comando_update_w	varchar(4000);
	ds_dieta_w		varchar(2000);
	current_setting('adep_gerar_horarios_pck.iedescdietasagrupadas_w')::varchar(1)	varchar(4000);
	current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp		timestamp;
	nr_horario_w		integer;
	ie_gerar_w		varchar(1) := 'S';
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	nr_seq_dieta_cpoe_w	prescr_dieta.nr_seq_dieta_cpoe%type;
	dt_suspensao_cpoe_w	timestamp;
	c01 CURSOR FOR	
	SELECT 	a.nr_prescricao,
			x.nr_sequencia,
			CASE WHEN coalesce(x.dt_bloqueio::text, '') = '' THEN CASE WHEN coalesce(d.dt_suspensao::text, '') = '' THEN x.ie_status_adep  ELSE 'S' END   ELSE 'B' END ,
			CASE WHEN GetIeAgruparServicos='S' THEN  to_char(d.nr_sequencia)  ELSE to_char(x.nr_sequencia) END ,
			OBTER_NOME_DIETA(d.cd_dieta),
			x.ds_observacao,
			x.dt_servico dt_horario,
			CASE WHEN current_setting('adep_gerar_horarios_pck.iedescdietasagrupadas_w')::varchar(1)='S' THEN  substr(OBTER_NOME_DIETA(d.cd_dieta),1,240)  ELSE b.ds_servico END ,
			d.nr_seq_dieta_cpoe
	from	prescr_dieta d,
		nut_servico b,
		prescr_medica a,
		nut_atend_serv_dia x
	where	d.nr_prescricao	= a.nr_prescricao
	and 	x.nr_atendimento = a.nr_atendimento
	and	x.nr_seq_servico = b.nr_sequencia
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	Obter_se_servico_vig_dieta(a.dt_inicio_prescr, a.dt_validade_prescr, a.nr_Atendimento, '1', ie_exibir_hor_realizados_p, ie_exibir_hor_suspensos_p) = 'S'
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	(((coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')) or
		 ((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
	and 	((coalesce(b.IE_TIPO_PRESCRICAO_SERVICO::text, '') = '') or (b.IE_TIPO_PRESCRICAO_SERVICO = '1'))
	and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(x.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	x.dt_servico between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	x.ie_status_adep = 'Y'
	and	getIe_apresentar_dieta_nao_lib = 'S'
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by 	x.dt_servico,
			a.nr_prescricao,
			x.nr_sequencia,
			CASE WHEN GetIeAgruparServicos='S' THEN  to_char(d.nr_sequencia)  ELSE to_char(x.nr_sequencia) END ,
			x.ie_status_adep,
			OBTER_NOME_DIETA(d.cd_dieta),
			CASE WHEN coalesce(x.dt_bloqueio::text, '') = '' THEN CASE WHEN coalesce(d.dt_suspensao::text, '') = '' THEN x.ie_status_adep  ELSE 'S' END   ELSE 'B' END ,
			x.ds_observacao,
			x.dt_bloqueio,
			CASE WHEN current_setting('adep_gerar_horarios_pck.iedescdietasagrupadas_w')::varchar(1)='S' THEN  substr(OBTER_NOME_DIETA(d.cd_dieta),1,240)  ELSE b.ds_servico END ,
			d.nr_seq_dieta_cpoe
	
union

	SELECT 	a.nr_prescricao,
		x.nr_sequencia,
		CASE WHEN coalesce(x.dt_bloqueio::text, '') = '' THEN CASE WHEN coalesce(d.dt_suspensao::text, '') = '' THEN x.ie_status_adep  ELSE 'S' END   ELSE 'B' END ,
		CASE WHEN GetIeAgruparServicos='S' THEN  to_char(d.nr_sequencia)  ELSE to_char(x.nr_sequencia) END ,
		OBTER_NOME_DIETA(d.cd_dieta),
		x.ds_observacao,
		x.dt_servico,
		CASE WHEN current_setting('adep_gerar_horarios_pck.iedescdietasagrupadas_w')::varchar(1)='S' THEN  substr(OBTER_NOME_DIETA(d.cd_dieta),1,240)  ELSE b.ds_servico END ,
		d.nr_seq_dieta_cpoe
	from	prescr_dieta d,
		nut_servico b,
		nut_atend_serv_dia_rep c,
		prescr_medica a,
		nut_atend_serv_dia x		
	where	d.nr_prescricao	= a.nr_prescricao
	and 	x.nr_atendimento = a.nr_atendimento
	and	x.nr_seq_servico = b.nr_sequencia
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.nr_prescricao = c.nr_prescr_oral
	and	c.nr_seq_serv_dia = x.nr_sequencia
	and	Obter_se_servico_vig_dieta(a.dt_inicio_prescr, a.dt_validade_prescr, a.nr_Atendimento, '1', ie_exibir_hor_realizados_p, ie_exibir_hor_suspensos_p) = 'S'
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	(((coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')) or
		 ((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))		
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
	and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(x.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and 	((coalesce(b.IE_TIPO_PRESCRICAO_SERVICO::text, '') = '') or (b.IE_TIPO_PRESCRICAO_SERVICO = '1'))
	and	x.dt_servico  between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and x.ie_status_adep <> 'Y'
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by x.dt_servico,
		a.nr_prescricao,
		x.nr_sequencia,
		CASE WHEN GetIeAgruparServicos='S' THEN  to_char(d.nr_sequencia)  ELSE to_char(x.nr_sequencia) END ,
		x.ie_status_adep,
		OBTER_NOME_DIETA(d.cd_dieta),
		CASE WHEN coalesce(x.dt_bloqueio::text, '') = '' THEN CASE WHEN coalesce(d.dt_suspensao::text, '') = '' THEN x.ie_status_adep  ELSE 'S' END   ELSE 'B' END ,
		x.ds_observacao,
		x.dt_bloqueio,
		CASE WHEN current_setting('adep_gerar_horarios_pck.iedescdietasagrupadas_w')::varchar(1)='S' THEN  substr(OBTER_NOME_DIETA(d.cd_dieta),1,240)  ELSE b.ds_servico END ,
		d.nr_seq_dieta_cpoe
	order by dt_horario;
	
BEGIN
	ds_sep_bv_w	:= obter_separador_bv;
	PERFORM set_config('adep_gerar_horarios_pck.iedescdietasagrupadas_w', getIeDescDietasAgrupadas, false);
	open c01;
	loop
	fetch c01 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
			nr_seq_horario_w,
			ie_status_horario_w,
			cd_refeicao_w,
			ds_informacoes_w,
			ds_observacoes_w,
			current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp,
			ds_dieta_w,
			nr_seq_dieta_cpoe_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		--Dieta
		dt_suspensao_cpoe_w := cpoe_obter_dt_suspensao(nr_seq_dieta_cpoe_w, 'N');
		if	dt_suspensao_cpoe_w <= clock_timestamp() then
			ds_dieta_w := wheb_mensagem_pck.get_texto(820376) || ' ' || substr(ds_dieta_w,1,240);
		elsif (dt_suspensao_cpoe_w > clock_timestamp()) then
			ds_dieta_w := '(' || wheb_mensagem_pck.get_texto(1061446, 'DT_SUSPENSAO=' || TO_CHAR(dt_suspensao_cpoe_w, pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario)))) || ') ' || substr(ds_dieta_w,1,240);
		end if;
		if (getExibeDietaEmJejum = 'N') then
			select	coalesce(max('N'),'S')
			into STRICT	ie_gerar_w
			from	rep_jejum a,
				prescr_medica b where current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp	between dt_inicio and (dt_fim - 1/1440)
			and	a.nr_prescricao	= b.nr_prescricao
			and	(coalesce(b.dt_liberacao_medico,b.dt_liberacao) IS NOT NULL AND (coalesce(b.dt_liberacao_medico,b.dt_liberacao))::text <> '')
			and	coalesce(b.dt_suspensao::text, '') = ''
			and	coalesce(a.ie_suspenso,'N') <> 'S'
			and	b.nr_atendimento	= nr_atendimento_p LIMIT 1;
		end if;	
		if (ie_gerar_w = 'S') then
			nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario(current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp);
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
				ds_informacoes_ww	:= substr(ds_informacoes_w || ' - Obs: ' || ds_observacoes_w,1,2000);
				ds_comando_update_w	:=	' update w_adep_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ds_diluicao = :ds_informacoes ' ||
								' where nm_usuario = :nm_usuario ' ||
								' and	ds_item = :ds_item ' ||
								' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and cd_item = :cd_item ';
				CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||
											'ds_informacoes=' || ds_informacoes_ww || ds_sep_bv_w || 
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
											'ds_item='|| ds_dieta_w || ds_sep_bv_w || 
											'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w || 
											'ie_tipo=DE' || ds_sep_bv_w || 
											'cd_item=' || cd_refeicao_w || ds_sep_bv_w );
			commit;
			end if;
		end if;	
		end;
	end loop;
	close c01;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_sinc_diet_oral_serv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_horarios_dietas_orais_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
