-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_obter_horarios_dieta_oral ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint ) AS $body$
DECLARE

	dt_horario_w	timestamp;
	
	cCursor REFCURSOR;
	tb_datas_w	dbms_sql.date_table;
    ds_bind_cCursor_w	sql_pck.t_dado_bind;
	
BEGIN
	PERFORM set_config('adep_gerar_horarios_pck.ds_sql_where_generico_w', adep_gerar_horarios_pck.iflinha(coalesce(get_ie_recem_nato,'S')='S',			'',		' and		nvl(a.ie_recem_nato,''N'')	= ''N'' ') ||
		' and		((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, :ie_data_lib_prescr_p , a.ie_lib_farm) = ''S'')' ||
		adep_gerar_horarios_pck.iflinha(ie_exibe_sem_lib_farm_p = 'S',' or (nvl(a.ie_prescr_nutricao, ''N'') = ''S'')','') || ') ' ||
		adep_gerar_horarios_pck.iflinha(coalesce(ie_exibir_suspensos_p,'S')='S',		'',		' and		x.dt_suspensao is null ') ||
		adep_gerar_horarios_pck.iflinha(coalesce(ie_exibir_hor_realizados_p,'S')='S','',		' and		c.dt_fim_horario is null ') ||
		adep_gerar_horarios_pck.iflinha(coalesce(ie_exibir_hor_suspensos_p,'S')='S',	'',		' and		c.dt_suspensao is null ') ||
		adep_gerar_horarios_pck.iflinha(coalesce(ie_prescr_setor_p,'N')<>'S',		'',		' and		a.cd_setor_atendimento = :cd_setor_paciente_p ') ||
		adep_gerar_horarios_pck.iflinha(coalesce(get_ie_vigente,'N')='N',			'',		' and		sysdate between a.dt_inicio_prescr and a.dt_validade_prescr + :get_minutos_vigente /1440 '), false);
	PERFORM set_config('adep_gerar_horarios_pck.ds_sql_cursor_w', ' select	c.dt_horario ' ||
		' from		prescr_dieta x, ' ||
		' 			prescr_dieta_hor c, ' ||
		' 			prescr_medica a ' ||
		' where		x.nr_prescricao = c.nr_prescricao ' ||
		' and		x.nr_prescricao = a.nr_prescricao ' ||
		' and		c.nr_prescricao = a.nr_prescricao ' ||
		' and		obter_se_exibir_rep_adep_setor(:cd_setor_paciente_p ,a.cd_setor_atendimento,nvl(a.ie_adep,''S'')) = ''S'' ' ||
		' and		c.nr_seq_dieta	= x.nr_sequencia ' ||
		' and		nvl(c.ie_situacao,''A'') = ''A'' ' ||
		' and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = ''S'' ' ||
		' and		a.dt_validade_prescr between :dt_validade_limite_p and :dt_fim_w ' ||
		' and		c.dt_horario between :dt_inicial_horarios_p and :dt_final_horarios_p ' ||
		' and		a.nr_atendimento = :nr_atendimento_p' ||
		current_setting('adep_gerar_horarios_pck.ds_sql_where_generico_w')::varchar(10000) ||
		' group by	c.dt_horario ', false);
    ds_bind_cCursor_w := sql_pck.bind_variable(':nr_atendimento_p', nr_atendimento_p, ds_bind_cCursor_w);
    ds_bind_cCursor_w := sql_pck.bind_variable(':cd_setor_paciente_p', cd_setor_paciente_p, ds_bind_cCursor_w);
    ds_bind_cCursor_w := sql_pck.bind_variable(':dt_validade_limite_p', dt_validade_limite_p, ds_bind_cCursor_w, 'DATAHORA');
    ds_bind_cCursor_w := sql_pck.bind_variable(':dt_fim_w', current_setting('adep_gerar_horarios_pck.dt_fim_w')::timestamp, ds_bind_cCursor_w, 'DATAHORA');
    ds_bind_cCursor_w := sql_pck.bind_variable(':dt_inicial_horarios_p', dt_inicial_horarios_p, ds_bind_cCursor_w, 'DATAHORA');
    ds_bind_cCursor_w := sql_pck.bind_variable(':dt_final_horarios_p', dt_final_horarios_p, ds_bind_cCursor_w, 'DATAHORA');
    ds_bind_cCursor_w := sql_pck.bind_variable(':ie_data_lib_prescr_p', ie_data_lib_prescr_p, ds_bind_cCursor_w);
	ds_bind_cCursor_w := sql_pck.bind_variable(':get_minutos_vigente', get_minutos_vigente, ds_bind_cCursor_w);
    ds_bind_cCursor_w := sql_pck.executa_sql_cursor(current_setting('adep_gerar_horarios_pck.ds_sql_cursor_w')::varchar(30000), ds_bind_cCursor_w);
	loop
	fetch cCursor bulk collect into tb_datas_w
	limit 100;
	exit when tb_datas_w.count = 0;
		begin
		forall i in tb_datas_w.first..tb_datas_w.last
			insert into w_adep_horarios_t(	nm_usuario,
											dt_horario)
										values (
											nm_usuario_p,
											tb_datas_w(i));
			commit;
		end;
	end loop;
	close cCursor;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_obter_horarios_dieta_oral ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint ) FROM PUBLIC;
