-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_jejum ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE

	ds_sep_bv_w		varchar(50);
	cd_jejum_w		varchar(255);
	ds_jejum_w		varchar(255);
	ds_vigencia_w		varchar(255);
	ds_comando_update_w	varchar(4000);
	current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp	timestamp;
	nr_horario_w	integer;
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	ie_status_horario_w		varchar(1);
	nr_sequencia_w			bigint;
	vl_hora_w			varchar(1000);
	nr_seq_dieta_cpoe_w		rep_jejum.nr_seq_dieta_cpoe%type;
	c01 CURSOR FOR	
	SELECT	a.nr_prescricao,
		TO_CHAR(coalesce(c.dt_inicio,a.dt_inicio_prescr),'dd/mm/yyyy hh24:mi:ss') || '-' || TO_CHAR(CASE WHEN TO_CHAR(coalesce(c.dt_fim,a.dt_validade_prescr), 'mi')='00' THEN  coalesce(c.dt_fim,a.dt_validade_prescr) - 1/86400  ELSE coalesce(c.dt_fim,a.dt_validade_prescr) END ,'dd/mm/yyyy hh24:mi:ss') cd_jejum,
		x.ds_tipo ds_jejum,
		obter_desc_expressao(301700) || ': ' || to_char(c.dt_inicio,'dd/mm/yyyy hh24:mi:ss') || ' ' || obter_desc_expressao(347642) || ' ' || to_char(c.dt_fim,'dd/mm/yyyy hh24:mi:ss') ds_vigencia,
		c.dt_inicio,
		coalesce(c.ie_suspenso,'N'),
		c.nr_sequencia,
		c.nr_seq_dieta_cpoe
	from	rep_tipo_jejum x,
		rep_jejum c,
		prescr_medica a
	where	x.nr_sequencia = c.nr_seq_tipo
	and	c.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(c.ie_suspenso,'N') = 'N'))
	and	((c.dt_inicio between dt_horario_inicio_sinc_w and current_setting('adep_gerar_horarios_pck.dt_horario_fim_sinc_jejum_w')::rep_jejum.dt_inicio%type) or (c.dt_fim between dt_horario_inicio_sinc_w and current_setting('adep_gerar_horarios_pck.dt_horario_fim_sinc_jejum_w')::rep_jejum.dt_inicio%type))
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		c.dt_inicio,
		a.nr_prescricao,
		c.dt_inicio,
		c.dt_fim,
		TO_CHAR(coalesce(c.dt_inicio,a.dt_inicio_prescr),'dd/mm/yyyy hh24:mi:ss') || '-' || TO_CHAR(CASE WHEN TO_CHAR(coalesce(c.dt_fim,a.dt_validade_prescr), 'mi')='00' THEN  coalesce(c.dt_fim,a.dt_validade_prescr) - 1/86400  ELSE coalesce(c.dt_fim,a.dt_validade_prescr) END ,'dd/mm/yyyy hh24:mi:ss'),
		obter_desc_expressao(301700) || ': ' || to_char(c.dt_inicio,'dd/mm/yyyy hh24:mi:ss') || ' ' || obter_desc_expressao(347642) || ' ' || to_char(c.dt_fim,'dd/mm/yyyy hh24:mi:ss'),
		x.ds_tipo,
		c.ie_suspenso,
		c.nr_sequencia,
		c.nr_seq_dieta_cpoe
	order by c.dt_inicio;	
	
BEGIN
	ds_sep_bv_w := obter_separador_bv;
	
	if (current_setting('adep_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp > dt_final_horarios_p) then
		PERFORM set_config('adep_gerar_horarios_pck.dt_horario_fim_sinc_jejum_w', current_setting('adep_gerar_horarios_pck.dt_horario_fim_sinc_w')::timestamp, false);
	else
		PERFORM set_config('adep_gerar_horarios_pck.dt_horario_fim_sinc_jejum_w', dt_final_horarios_p, false);
	end if;
		
	open c01;
	loop
	fetch c01 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
			cd_jejum_w,
			ds_jejum_w,
			ds_vigencia_w,
			current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp,
			ie_status_horario_w,
			nr_sequencia_w,
			nr_seq_dieta_cpoe_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp );
	
		ds_comando_update_w	:=	' update w_adep_t ' ||
						' set nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
						' where nm_usuario = :nm_usuario ' ||
						' and ie_tipo_item = :ie_tipo ' ||
						' and cd_item = :cd_item ' ||
						' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
						' and	ie_status_item = :ie_status ' ||
						' and ((ds_prescricao = :ds_vigencia) or (ds_prescricao is null)) ';
	
		CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||
									'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
									'ie_tipo=J' || ds_sep_bv_w || 
									'cd_item=' || cd_jejum_w || ds_sep_bv_w ||
									'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
									'ie_status=' || ie_status_horario_w || ds_sep_bv_w ||
									'ds_vigencia=' || ds_vigencia_w || ds_sep_bv_w );
		commit;
	
		if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
		    if (ie_status_horario_w	= 'S') then
				vl_hora_w	:= 'S' ||to_char(nr_sequencia_w) || 'H' || ie_status_horario_w;
			else	
				vl_hora_w	:= null;
			end if;	
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora'|| to_char(nr_horario_w) || ' = nvl(:vl_hora, hora'||to_char(nr_horario_w)||'),'||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and cd_item = :cd_item ' ||
							' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
							' and	ie_status_item = :ie_status ' ||
							' and ((ds_prescricao = :ds_vigencia) or (ds_prescricao is null)) ';
							
			CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,'vl_hora=' || vl_hora_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=J' || ds_sep_bv_w || 
										'cd_item=' || cd_jejum_w || ds_sep_bv_w ||
										'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
										'ie_status=' || ie_status_horario_w || ds_sep_bv_w ||
										'ds_vigencia=' || ds_vigencia_w || ds_sep_bv_w );
			commit;
		end if;
		end;
	end loop;
	close c01;
	CALL Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'J', 'N');
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_jejum ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
