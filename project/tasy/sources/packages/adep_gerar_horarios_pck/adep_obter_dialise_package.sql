-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_obter_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_lib_pend_rep_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint, dt_referencia_p timestamp default null) AS $body$
DECLARE

	nr_seq_wadep_w		bigint;
	nr_seq_solucao_w	integer;
	ds_solucao_w		varchar(4000);
	ie_acm_sn_w		varchar(1);
	ds_prescricao_w		varchar(4000);
	ds_componentes_w	varchar(4000);
	ie_status_solucao_w	varchar(15);
	ie_suspensa_w		varchar(1);
	dt_prev_prox_etapa_w	timestamp;
	dt_lib_farm_w		timestamp;
	ie_lib_pend_rep_w	varchar(1);
	cd_motivo_baixa_w	bigint;
	nr_agrupamento_w	bigint;
	nr_seq_dialise_cpoe_w	prescr_solucao.nr_seq_dialise_cpoe%type;
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	dt_inicio_solucao_w	timestamp;
	dt_fim_solucao_w	timestamp;	
	dt_suspensao_cpoe_w	timestamp;
	ie_item_ordem_w		varchar(1);
	c01 CURSOR FOR
	SELECT	nr_prescricao,
			nr_seq_solucao,
			ds_solucao,
			ie_acm_sn,	
			ds_prescricao,
			ds_componentes,
			ie_status_solucao,
			null,
			dt_prev_prox_etapa,
			cd_motivo_baixa,
			nr_agrupamento,
			nr_seq_dialise_cpoe,
			ie_item_ordem
	from	(
		SELECT	a.nr_prescricao,
			x.nr_seq_solucao,
			substr(coalesce(obter_desc_prot_npt(x.nr_seq_protocolo),obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao,
			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
			substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao,
			adep_dados_horarios_pck.get_ds_componente_dialise(a.nr_prescricao, x.nr_seq_solucao, x.nr_seq_dialise_cpoe, x.nr_seq_dialise, nm_usuario_p, cd_estabelecimento_p) ds_componentes,
			x.ie_status ie_status_solucao,
			coalesce(x.ie_suspenso,'N') ie_suspenso,
			x.dt_prev_prox_etapa,
			CASE WHEN get_usa_legenda_item_baixado='S' THEN  CASE WHEN obter_se_item_sol_baixa(a.nr_prescricao,x.nr_seq_solucao)='S' THEN 1  ELSE 0 END   ELSE null END  cd_motivo_baixa,
			x.nr_agrupamento,
			x.nr_seq_dialise_cpoe,
			obter_se_item_ordem_medica(x.nr_prescricao, x.nr_seq_solucao, 'DI') ie_item_ordem
		from	hd_prescricao b,
			prescr_solucao x,
			prescr_medica a
		where	x.nr_prescricao = a.nr_prescricao
		and     b.nr_sequencia    = x.nr_seq_dialise
		and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
		and	a.nr_atendimento = nr_atendimento_p
		and	obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia),dt_lib_farm_w), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'
		and      x.ie_status       <> 'V'
		and	((get_ie_exibeSol_filtro = 'N') OR (obter_se_sol_vig_adep(a.nr_prescricao, x.ie_status, qt_horas_anteriores_w, qt_horas_adicionais_w, dt_referencia_p, x.dt_suspensao, x.dt_status) = 'S'))
		and ((get_ie_gera_ciclo_dialise <> 'I' and
			((x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p) or (x.ie_status     not in ('N','T')))) or
			 (((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'S') and (obter_se_prescr_vig_adep(CASE WHEN Get_Param652='P' THEN a.dt_prescricao  ELSE a.dt_inicio_prescr END ,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or			  
			  ((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'N') and (exists ( select 1 from prescr_mat_hor k where coalesce(k.ie_horario_especial,'N') = 'N' and k.nr_prescricao = x.nr_prescricao and k.nr_seq_solucao = x.nr_seq_solucao and Obter_se_horario_liberado(k.dt_lib_horario, k.dt_horario) = 'S' and k.dt_horario  between dt_inicial_horarios_p and dt_final_horarios_p)))))																																																																													  
		and      b.ie_tipo_dialise in ('H','P')
		and	(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')	
		and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w		= 'S'))	
		and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
		and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
		and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))		
		and	((ie_regra_inclusao_p = 'S') or
			 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'DI', 
																			cd_estabelecimento_p, 
																			cd_setor_usuario_p, 
																			cd_perfil_p, 
																			null, 
																			null, 
																			null, 
																			null,
																			a.cd_setor_Atendimento,
																			null,
																			null, 			-- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																			null) = 'S'))) -- nr_seq_exame_p
		and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
		and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
		and	a.dt_validade_prescr between dt_inicio_solucao_w and  dt_fim_solucao_w		
		group by
			a.nr_prescricao,
			x.nr_seq_solucao,
			x.nr_seq_protocolo,
			x.ie_acm,
			x.ie_se_necessario,
			nm_usuario_p,
			cd_estabelecimento_p,
			x.ie_suspenso,
			x.dt_prev_prox_etapa,
			x.ie_status,
			x.nr_agrupamento,
			x.nr_seq_dialise_cpoe,
			x.nr_seq_dialise,
			obter_se_item_ordem_medica(x.nr_prescricao, x.nr_seq_solucao, 'DI')
		) alias72
	group by
		nr_prescricao, 
		nr_seq_solucao, 
		ds_solucao,
		ie_acm_sn,	
		ds_prescricao,
		ds_componentes,
		ie_status_solucao,
		null,
		dt_prev_prox_etapa,
		cd_motivo_baixa,
		nr_agrupamento,
		nr_seq_dialise_cpoe,
		ie_item_ordem;
	
BEGIN
	if (getIeMostraDialiseAntesFarm = 'S') then
		dt_lib_farm_w	:= clock_timestamp();
	end if;
	SELECT * FROM adep_gerar_horarios_pck.getdtrefsol(dt_validade_limite_p, dt_inicio_solucao_w, dt_fim_solucao_w) INTO STRICT dt_inicio_solucao_w, dt_fim_solucao_w;
	open c01;
	loop
	fetch c01 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
			nr_seq_solucao_w,
			ds_solucao_w,
			ie_acm_sn_w,		
			ds_prescricao_w,
			ds_componentes_w,
			ie_status_solucao_w,
			ie_suspensa_w,
			dt_prev_prox_etapa_w,
			cd_motivo_baixa_w,
			nr_agrupamento_w,
			nr_seq_dialise_cpoe_w,
			ie_item_ordem_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin		
		--Dialise
		dt_suspensao_cpoe_w := cpoe_obter_dt_suspensao(nr_seq_dialise_cpoe_w, 'D');
		if (coalesce(nr_seq_dialise_cpoe_w, 0) = 0 or (coalesce(dt_suspensao_cpoe_w::text, '') = '' or ((dt_suspensao_cpoe_w IS NOT NULL AND dt_suspensao_cpoe_w::text <> '') and
				ie_exibir_sol_suspensas_p = 'S' and
				ie_exibir_suspensos_p = 'S'))) then
			if	dt_suspensao_cpoe_w <= clock_timestamp() then
				ds_solucao_w := wheb_mensagem_pck.get_texto(820376) || ' ' || substr(ds_solucao_w,1,240);
			elsif (dt_suspensao_cpoe_w > clock_timestamp()) then
				ds_solucao_w := '(' || wheb_mensagem_pck.get_texto(1061446, 'DT_SUSPENSAO=' || TO_CHAR(dt_suspensao_cpoe_w, pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario)))) || ') ' || substr(ds_solucao_w,1,240);
			end if;
			select	nextval('w_adep_t_seq')
			into STRICT	nr_seq_wadep_w
			;
			insert into w_adep_t(
				nr_sequencia,
				nm_usuario,
				ie_tipo_item,
				nr_prescricao,
				nr_seq_item,
				ds_item,
				ie_acm_sn,
				ds_prescricao,
				ds_diluicao,
				ie_status_item,
				ie_suspenso,
				dt_prev_term,
				nr_seq_proc_interno,
				nr_agrupamento,
				ie_diferenciado,
				nr_prescricoes,
				cd_item,
				cd_motivo_baixa,
				ds_componentes,
				nr_seq_cpoe,
				ie_item_ordem)
			values (
				nr_seq_wadep_w,
				nm_usuario_p,
				'DI',
				current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				nr_seq_solucao_w,
				substr(ds_solucao_w,1,240),
				ie_acm_sn_w,
				ds_prescricao_w,
				CASE WHEN get_ie_gravar_diluicao_sol='S' THEN  ds_componentes_w  ELSE obter_desc_expressao(689983) END ,
				ie_status_solucao_w,
				ie_suspensa_w,
				dt_prev_prox_etapa_w,
				0,
				nr_agrupamento_w,
				'N',
				current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				0,
				cd_motivo_baixa_w,
				ds_componentes_w,
				nr_seq_dialise_cpoe_w,
				ie_item_ordem_w);
			commit;
		end if;
		end;
	end loop;
	close c01;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_obter_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_lib_pend_rep_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint, dt_referencia_p timestamp default null) FROM PUBLIC;
