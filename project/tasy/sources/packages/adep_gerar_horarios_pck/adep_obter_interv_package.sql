-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_obter_interv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_so_proc_setor_usuario_p text, ie_so_interv_setor_usuario_p text, ie_palm_p text) AS $body$
DECLARE

	nr_seq_wadep_w		bigint;
	nr_seq_pe_prescr_w	bigint;
	nr_seq_pe_proc_w	bigint;
	nr_seq_grupo_w		bigint;
	cd_intervencao_w	varchar(255);
	ds_intervencao_w	varchar(255);
	ie_acm_sn_w		varchar(1);
	cd_intervalo_w		varchar(7);
	ds_intervalo_w		varchar(255);
	ie_status_w		varchar(1);
	ie_lado_w		varchar(15);
	ds_observacao_w		varchar(255);
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();
	ie_oncologia_w		varchar(1);
	nr_seq_topografia_w	bigint;
	nr_seq_tipo_w		tipo_perda_ganho.nr_sequencia%type;
	dt_validade_prescr_sae_w	pe_prescricao.dt_validade_prescr%type;
	c01 CURSOR FOR
	SELECT	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END ,
		CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	
		cd_intervencao,
		ds_intervencao,
		ie_acm_sn,	
		cd_intervalo,
		ds_prescricao,
		null,
		substr(ds_observacao,1,255),
		ie_lado,
		nr_seq_grupo,
		ie_oncologia,
		nr_seq_topografia,
		nr_seq_tipo
	from	(
		SELECT	a.nr_sequencia nr_seq_pe_prescr,
			c.nr_seq_pe_proc,
			c.nr_seq_proc cd_intervencao,
			substr(y.ds_procedimento,1,240) ds_intervencao,
			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
			x.cd_intervalo,
			obter_desc_inf_sae_adep(x.ie_se_necessario,coalesce(w.ds_prescricao,w.cd_intervalo), x.nr_seq_topografia, x.ie_lado, a.nr_seq_modelo) ds_prescricao,
			coalesce(x.ie_suspenso,'N') ie_suspenso,
			obter_desc_expressao(692668) || x.ds_observacao ds_observacao,
			--substr(obter_valor_dominio(1372,x.ie_lado),1,150) ie_lado,
			x.ie_lado,
			CASE WHEN Get_Param356='M' THEN coalesce(obter_apres_modelo_sae(a.nr_seq_modelo),999)  ELSE y.nr_seq_grupo END  nr_seq_grupo,
			CASE WHEN ie_palm_p='S' THEN obter_se_setor_oncologia(a.cd_setor_atendimento)  ELSE null END  ie_oncologia,
			x.nr_seq_topografia,
			y.nr_seq_tipo
		FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr between dt_validade_limite_p and dt_validade_prescr_sae_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(x.ie_adep,'N') = 'S' and ((coalesce(a.ie_situacao,'A') <> 'I') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> '')) and ((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) and ADEP_Obter_se_intervencao_lib(y.nr_sequencia, cd_perfil_p, cd_setor_usuario_p, nm_usuario_p, 'A') = 'S' and obter_se_exibir_interv_adep(ie_so_proc_setor_usuario_p, ie_so_interv_setor_usuario_p, x.nr_seq_proc, cd_perfil_p, cd_setor_usuario_p, nm_usuario_p) = 'S' and coalesce(c.ie_situacao,'A') = 'A' and (((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_agora, 'N') = 'N') and (c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)) or
			 ((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_agora, 'N') = 'S') and (obter_se_prescr_vig_adep(a.dt_prescricao,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S'))) and ((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = '')) and ((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = '')) and ((ie_regra_inclusao_p = 'S') or
			 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SAE',
																			cd_estabelecimento_p, 
																			cd_setor_usuario_p, 
																			cd_perfil_p, 
																			null, 
																			null, 
																			null, 
																			null,
																			null,
																			null,
																			null,			-- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																			null) = 'S')))  -- nr_seq_exame_p
 group by
			a.nr_sequencia,
			c.nr_seq_pe_proc,
			c.nr_seq_proc,
			y.ds_procedimento,
			CASE WHEN Get_Param356='M' THEN coalesce(obter_apres_modelo_sae(a.nr_seq_modelo),999)  ELSE y.nr_seq_grupo END ,
			x.ie_se_necessario,
			obter_desc_inf_sae_adep(x.ie_se_necessario,coalesce(w.ds_prescricao,w.cd_intervalo), x.nr_seq_topografia, x.ie_lado, a.nr_seq_modelo),
			x.ie_acm,
			x.cd_intervalo,
			x.ie_lado,
			coalesce(w.ds_prescricao,w.cd_intervalo),
			x.ie_suspenso,
			x.ds_observacao,
			CASE WHEN ie_palm_p='S' THEN obter_se_setor_oncologia(a.cd_setor_atendimento)  ELSE null END ,
			nr_seq_topografia,
			y.nr_seq_tipo
		) alias55
	group by
		CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_prescr  ELSE null END   ELSE null END ,
		CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_seq_pe_prescr,nr_seq_pe_proc,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_pe_proc  ELSE null END   ELSE null END ,	
		cd_intervencao,
		ds_intervencao,
		ie_acm_sn,	
		cd_intervalo,
		ds_prescricao,
		ie_lado,
		nr_seq_grupo,
		null,
		substr(ds_observacao,1,255),
		ie_oncologia,
		nr_seq_topografia,
		nr_seq_tipo;
	c02 CURSOR FOR
	SELECT	nr_seq_pe_prescr,
		nr_seq_pe_proc,
		cd_intervencao,
		ds_intervencao,
		ie_acm_sn,	
		cd_intervalo,
		ds_prescricao,
		null,
		substr(ds_observacao,1,255),
		null,
		nr_seq_grupo,
		ie_oncologia,
		nr_seq_topografia,
		nr_seq_tipo
	from	(
		SELECT	a.nr_sequencia nr_seq_pe_prescr,
			c.nr_seq_pe_proc,
			c.nr_seq_proc cd_intervencao,
			substr(y.ds_procedimento,1,240) ds_intervencao,
			obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		
			x.cd_intervalo,
			obter_desc_inf_sae_adep(x.ie_se_necessario,coalesce(w.ds_prescricao,w.cd_intervalo), x.nr_seq_topografia, x.ie_lado, a.nr_seq_modelo) ds_prescricao,
			coalesce(x.ie_suspenso,'N') ie_suspenso,
			obter_desc_expressao(692668) || x.ds_observacao ds_observacao,
			x.ie_lado ie_lado,
			CASE WHEN Get_Param356='M' THEN coalesce(obter_apres_modelo_sae(a.nr_seq_modelo),999)  ELSE y.nr_seq_grupo END  nr_seq_grupo,
			CASE WHEN ie_palm_p='S' THEN obter_se_setor_oncologia(a.cd_setor_atendimento)  ELSE null END  ie_oncologia,
			x.nr_seq_topografia,
			y.nr_seq_tipo
		FROM pe_procedimento y, pe_prescr_proc_hor c, pe_prescricao a, pe_prescr_proc x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
WHERE y.nr_sequencia = x.nr_seq_proc and y.nr_sequencia = c.nr_seq_proc and x.nr_seq_prescr = c.nr_seq_pe_prescr and x.nr_sequencia = c.nr_seq_pe_proc and x.nr_seq_prescr = a.nr_sequencia and c.nr_seq_pe_prescr = a.nr_sequencia and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr between dt_validade_limite_p and dt_validade_prescr_sae_w and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and coalesce(x.ie_adep,'N') = 'M' and ((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) and obter_se_exibir_interv_adep(ie_so_proc_setor_usuario_p, ie_so_interv_setor_usuario_p, x.nr_seq_proc, cd_perfil_p, cd_setor_usuario_p, nm_usuario_p) = 'S' and coalesce(c.ie_situacao,'A') = 'A' and coalesce(a.ie_situacao,'A') <> 'I' and (((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_agora, 'N') = 'N') and (c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)) or
			 ((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_agora, 'N') = 'S') and (obter_se_prescr_vig_adep(a.dt_prescricao,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S'))) and ((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = '')) and ((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = '')) and ((ie_regra_inclusao_p = 'S') or
			 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SAE',
																			cd_estabelecimento_p, 
																			cd_setor_usuario_p, 
																			cd_perfil_p, 
																			null, 
																			null, 
																			null, 
																			null,
																			null,
																			null,
																			null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																			null) = 'S')))  -- nr_seq_exame_p
 group by
			a.nr_sequencia,
			c.nr_seq_pe_proc,
			c.nr_seq_proc,
			CASE WHEN Get_Param356='M' THEN coalesce(obter_apres_modelo_sae(a.nr_seq_modelo),999)  ELSE y.nr_seq_grupo END ,
			y.ds_procedimento,
			x.ie_se_necessario,
			x.ie_acm,
			obter_desc_inf_sae_adep(x.ie_se_necessario,coalesce(w.ds_prescricao,w.cd_intervalo), x.nr_seq_topografia, x.ie_lado, a.nr_seq_modelo),
			x.cd_intervalo,
			x.ie_lado,
			coalesce(w.ds_prescricao,w.cd_intervalo),
			x.ie_suspenso,
			x.ds_observacao,
			CASE WHEN ie_palm_p='S' THEN obter_se_setor_oncologia(a.cd_setor_atendimento)  ELSE null END ,
			x.nr_seq_topografia,
			nr_seq_tipo
		) alias49
	group by
		nr_seq_pe_prescr,
		nr_seq_pe_proc,
		cd_intervencao,
		ds_intervencao,
		ie_acm_sn,	
		cd_intervalo,
		ds_prescricao,
		null,
		nr_seq_grupo,
		substr(ds_observacao,1,255),
		ie_lado,
		ie_oncologia,
		nr_seq_topografia,
		nr_seq_tipo;
	
BEGIN
	dt_validade_prescr_sae_w := current_setting('adep_gerar_horarios_pck.dt_fim_w')::timestamp + 2;
	open c01;
	loop
	fetch c01 into	nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			cd_intervencao_w,
			ds_intervencao_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			ds_intervalo_w,
			ie_status_w,
			ds_observacao_w,
			ie_lado_w,
			nr_seq_grupo_w,
			ie_oncologia_w,
			nr_seq_topografia_w,
			nr_seq_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('w_adep_t_seq')
		into STRICT	nr_seq_wadep_w
		;
		insert into w_adep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,		
			cd_item,
			ds_item,
			ie_acm_sn,		
			cd_intervalo,
			ds_prescricao,
			ie_status_item,
			nr_agrupamento,
			ie_diferenciado,
			nr_seq_proc_interno,
			ds_diluicao,
			ie_lado,
			nr_seq_grupo_interv,
			ie_oncologia,
			nr_seq_onc,
			ds_observacao,
			nr_seq_tipo)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'E',
			nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			cd_intervencao_w,
			substr(ds_intervencao_w,1,240),
			ie_acm_sn_w,
			cd_intervalo_w,
			ds_intervalo_w,
			ie_status_w,
			0,
			'N',
			0,
			ds_observacao_w,
			ie_lado_w,
			nr_seq_grupo_w,
			ie_oncologia_w,
			nr_seq_topografia_w,
			ds_observacao_w,
			nr_seq_tipo_w);
		commit;
		end;
	end loop;
	close c01;
	open c02;
	loop
	fetch c02 into	nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			cd_intervencao_w,
			ds_intervencao_w,
			ie_acm_sn_w,		
			cd_intervalo_w,
			ds_intervalo_w,
			ie_status_w,
			ds_observacao_w,
			ie_lado_w,
			nr_seq_grupo_w,
			ie_oncologia_w,
			nr_seq_topografia_w,
			nr_seq_tipo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	nextval('w_adep_t_seq')
		into STRICT	nr_seq_wadep_w
		;
		insert into w_adep_t(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			nr_prescricao,
			nr_seq_item,		
			cd_item,
			ds_item,
			ie_acm_sn,		
			cd_intervalo,
			ds_prescricao,
			ie_status_item,
			nr_agrupamento,
			ie_diferenciado,
			nr_seq_proc_interno,
			ds_diluicao,
			ie_lado,
			nr_seq_grupo_interv,
			ie_oncologia,
			nr_seq_onc,
			ds_observacao,
			nr_seq_tipo)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			'E',
			nr_seq_pe_prescr_w,
			nr_seq_pe_proc_w,
			cd_intervencao_w,
			substr(ds_intervencao_w,1,240),
			ie_acm_sn_w,
			cd_intervalo_w,
			ds_intervalo_w,
			ie_status_w,
			0,
			'N',
			0,
			ds_observacao_w,
			ie_lado_w,
			nr_seq_grupo_w,
			ie_oncologia_w,
			nr_seq_topografia_w,
			ds_observacao_w,
			nr_seq_tipo_w);
		commit;
		end;
	end loop;
	close c02;
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_obter_interv ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_so_proc_setor_usuario_p text, ie_so_interv_setor_usuario_p text, ie_palm_p text) FROM PUBLIC;
