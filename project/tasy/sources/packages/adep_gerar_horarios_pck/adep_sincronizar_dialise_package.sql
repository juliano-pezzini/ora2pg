-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint, dt_referencia_p timestamp default null) AS $body$
DECLARE

	ds_sep_bv_w		varchar(50);				
	nr_seq_solucao_w	integer;
	nr_seq_horario_w	bigint;
	ie_status_horario_w	varchar(15);
	ds_comando_update_w	varchar(4000);
	nr_etapa_sol_w		bigint;
	dt_etapa_prev_w		timestamp;
	dt_inicial_w		timestamp;
	dt_final_w		timestamp;
	current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp	timestamp;
	nr_horario_w	integer;
	dt_lib_farm_w	timestamp;
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	nr_seq_dialise_cpoe_w	prescr_solucao.nr_seq_dialise_cpoe%type;
	dt_inicio_solucao_w	timestamp;
	dt_fim_solucao_w	timestamp;
	c01 CURSOR FOR	
	SELECT	a.nr_prescricao,
			x.nr_seq_solucao,
			CASE WHEN obter_se_solucao_checada(a.nr_prescricao,x.nr_seq_solucao)='N' THEN CASE WHEN obter_se_solucao_suspensa(a.nr_prescricao,x.nr_seq_solucao)='N' THEN x.ie_status  ELSE 'S' END   ELSE 'Q' END ,
			x.dt_status,
			x.nr_seq_dialise_cpoe
	from	prescr_solucao x,
			prescr_medica a,
			hd_prescricao b
	where	x.nr_prescricao   = a.nr_prescricao
	and     a.nr_prescricao   = b.nr_prescricao
	and     b.nr_sequencia    = x.nr_seq_dialise
	and     b.nr_prescricao   = a.nr_prescricao
	and     x.ie_status       <> 'V'
	and     b.ie_tipo_dialise in ('H','P')
	and	(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	((get_ie_exibeSol_filtro = 'N') OR (obter_se_sol_vig_adep(a.nr_prescricao, x.ie_status, qt_horas_anteriores_w, qt_horas_adicionais_w, dt_referencia_p, x.dt_suspensao, x.dt_status) = 'S'))
	and	obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia),dt_lib_farm_w), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'		
	and ((x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p) or (x.ie_status     not in ('N','T')) or
			(((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'S') and (obter_se_prescr_vig_adep(CASE WHEN Get_Param652='P' THEN a.dt_prescricao  ELSE a.dt_inicio_prescr END ,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')) or			  
			((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'N') and (exists ( SELECT 1 from prescr_mat_hor k where coalesce(k.ie_horario_especial,'N') = 'N' and k.nr_prescricao = x.nr_prescricao and k.nr_seq_solucao = x.nr_seq_solucao and Obter_se_horario_liberado(k.dt_lib_horario, k.dt_horario) = 'S' and k.dt_horario  between dt_inicial_horarios_p and dt_final_horarios_p)))))																																																																													  
	and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))	
	and	((ie_regra_inclusao_p = 'S') or
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'DI', 
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null,
																		a.cd_Setor_atendimento,
																		null,
																		null,			-- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nao haviam passado nada
																		null) = 'S'))) -- nr_seq_exame_p
	and	x.dt_status between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	and	a.dt_validade_prescr between dt_inicio_solucao_w and  dt_fim_solucao_w
	group by
			a.nr_prescricao,
			x.nr_seq_solucao,
			x.ie_status,
			x.dt_status,
			x.nr_seq_dialise_cpoe
	order by x.dt_status;

	cDialiseMatHor CURSOR FOR
	SELECT	a.nr_prescricao,
			x.nr_seq_solucao,
      CASE WHEN obter_status_hd_etapa(a.nr_prescricao, x.nr_seq_solucao, h.nr_etapa_sol)='SE' THEN  'SE'  ELSE CASE WHEN x.ie_status='T' THEN  x.ie_status  ELSE obter_status_hd_etapa(a.nr_prescricao, x.nr_seq_solucao, h.nr_etapa_sol) END  END  ie_status_horario,
			h.dt_horario,
			h.nr_etapa_sol nr_etapa_sol,
			x.nr_seq_dialise_cpoe
	from	prescr_mat_hor h,
			prescr_solucao x,
			prescr_medica a,
			hd_prescricao b
	where	x.nr_prescricao   = a.nr_prescricao
	and     a.nr_prescricao   = b.nr_prescricao
	and		x.nr_prescricao   = h.nr_prescricao
	and     b.nr_sequencia    = x.nr_seq_dialise
	and     b.nr_prescricao   = a.nr_prescricao
	and		x.nr_seq_solucao  = h.nr_seq_solucao
	and     x.ie_status       <> 'V'
	and     b.ie_tipo_dialise in ('H','P')
	and		(x.nr_seq_dialise IS NOT NULL AND x.nr_seq_dialise::text <> '')
	and		((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and		obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and		a.nr_atendimento = nr_atendimento_p
	and		h.ie_agrupador = 13
	and		((get_ie_exibeSol_filtro = 'N') OR (obter_se_sol_vig_adep(a.nr_prescricao, x.ie_status, qt_horas_anteriores_w, qt_horas_adicionais_w, dt_referencia_p, x.dt_suspensao, x.dt_status) = 'S'))
	and		obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia),dt_lib_farm_w), ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'		
	and 	((h.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p) or (x.ie_status     not in ('N','T')) or
			((Obter_se_acm_sn_agora_especial(x.ie_acm, x.ie_se_necessario, x.ie_urgencia, x.ie_etapa_especial) = 'S') and (obter_se_prescr_vig_adep(CASE WHEN Get_Param652='P' THEN a.dt_prescricao  ELSE a.dt_inicio_prescr END ,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	and		((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T'))
	and		((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))
	and		((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = ''))	
	and		((ie_regra_inclusao_p = 'S') or
			((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'DI', 
																			cd_estabelecimento_p, 
																			cd_setor_usuario_p, 
																			cd_perfil_p, 
																			null, 
																			null, 
																			null, 
																			null,
																			a.cd_Setor_atendimento,
																			null,
																			null,
																			null) = 'S')))
	and		h.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and		((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and		((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	and		a.dt_validade_prescr between dt_inicio_solucao_w and  dt_fim_solucao_w
	group by
			a.nr_prescricao,
			x.nr_seq_solucao,
			x.ie_status,
			h.nr_etapa_sol,
			h.dt_horario,
			x.nr_seq_dialise_cpoe
	order by h.dt_horario;
	
BEGIN
	ds_sep_bv_w	:= obter_separador_bv;
	dt_inicial_w	:= dt_horario_p	- 2;
	dt_final_w	:= dt_horario_p + 2;
	if (getIeMostraDialiseAntesFarm = 'S') then
		dt_lib_farm_w	:= clock_timestamp();
	end if;
	SELECT * FROM adep_gerar_horarios_pck.getdtrefsol(dt_validade_limite_p, dt_inicio_solucao_w, dt_fim_solucao_w) INTO STRICT dt_inicio_solucao_w, dt_fim_solucao_w;
	if (get_ie_gera_ciclo_dialise = 'I') then
		for cDialiseMatHor_w in cDialiseMatHor loop
			begin		
				nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario(cDialiseMatHor_w.dt_horario);
				if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
					ds_comando_update_w	:=	' update w_adep_t ' ||
									' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
									' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
									' ds_horarios = adep_atualizar_inf_horarios(ds_horarios,:nr_horario,:vl_hora) ' ||
									' where nm_usuario = :nm_usuario ' ||
									' and ie_tipo_item = :ie_tipo ' ||
									' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
									--' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
									' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';
					CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(cDialiseMatHor_w.nr_etapa_sol) || 'H' || cDialiseMatHor_w.ie_status_horario || ds_sep_bv_w ||
												'nr_prescricao=' || to_char(cDialiseMatHor_w.nr_prescricao) || ds_sep_bv_w ||
												--'nr_seq_cpoe=' || to_char(nr_seq_dialise_cpoe_w) || ds_sep_bv_w || 
												'nr_horario=' || to_char(nr_horario_w) || ds_sep_bv_w || 
												'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
												'ie_tipo=DI' || ds_sep_bv_w ||
												'nr_seq_item=' || to_char(cDialiseMatHor_w.nr_seq_solucao) || ds_sep_bv_w );
					commit;
				end if;
			end;
		end loop;
	else
		open c01;
		loop
		fetch c01 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				nr_seq_solucao_w,
				ie_status_horario_w,
				current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp,
				nr_seq_dialise_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin		
			nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario( current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp );
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
							' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
							' ds_horarios = adep_atualizar_inf_horarios(ds_horarios,:nr_horario,:vl_hora) ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							--' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
							' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';
			CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
										'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||
										--'nr_seq_cpoe=' || to_char(nr_seq_dialise_cpoe_w) || ds_sep_bv_w || 
										'nr_horario=' || to_char(nr_horario_w) || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=DI' || ds_sep_bv_w ||
										'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
			commit;
			end if;
			end;
		end loop;
		close c01;
	end if;
	CALL Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'DIA', 'N');
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_dialise ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint, dt_referencia_p timestamp default null) FROM PUBLIC;
