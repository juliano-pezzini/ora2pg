-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


CREATE TYPE r_ds_inf AS (ds_informacao		varchar(2000),
		cd_refeicao		varchar(15),
		nr_horario		integer);


CREATE OR REPLACE PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_dieta_oral ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_horarios_dietas_orais_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE

	ds_sep_bv_w		varchar(50);
	nr_seq_horario_w	bigint;
	qt_parametro_w		double precision;
	ie_status_horario_w	varchar(15);
	cd_refeicao_w		varchar(15);
	ds_informacoes_w	varchar(2000);
	ds_observacoes_w	varchar(255);
	cd_intervalo_w		varchar(255);
	ds_intervalo_w		varchar(255);
	ds_informacoes_ww	varchar(2000);
	ds_comando_update_w	varchar(4000);
	ie_inf_existente_w	varchar(1);
	current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp		timestamp;
	nr_horario_w		integer;
	ie_ciente_w		varchar(1);
	acho_w			boolean;
	dummy_w			timestamp;
	ie_recem_nato_w		varchar(1) := adep_gerar_horarios_pck.get_ie_recem_nato();	
	nr_seq_dieta_cpoe_w	prescr_dieta.nr_seq_dieta_cpoe%type;
	type V_ds_inf is table of r_ds_inf index by integer;
	vt_ds_inf_w		V_ds_inf;
	x	integer := 1;
	c01 CURSOR FOR	
	SELECT	c.nr_prescricao,
		c.nr_sequencia,
		CASE WHEN coalesce(c.dt_bloqueio::text, '') = '' THEN CASE WHEN substr(obter_status_hor_dieta_oral(c.dt_fim_horario,c.dt_suspensao),1,1)='N' THEN CASE WHEN coalesce(c.ie_ciente,'N')='S' THEN 'W'  ELSE 'N' END   ELSE substr(obter_status_hor_dieta_oral(c.dt_fim_horario,c.dt_suspensao),1,1) END   ELSE 'B' END ,
		c.cd_refeicao,
		substr(CASE WHEN get_ie_apres_inf_dieta='S' THEN obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DIO') END  || substr(adep_gerar_horarios_pck.obter_ds_justificativa(obter_justificativa_item(a.nr_prescricao, d.nr_sequencia, 'D')), 1, 1000),1,2000) ds_informacoes,
		c.ds_observacao,
		c.dt_horario,
		c.ie_ciente,
		c.dt_suspensao,
		d.cd_intervalo,
		coalesce(Obter_Desc_Intervalo_prescr(d.cd_intervalo), d.cd_intervalo),
		d.qt_parametro,
		d.nr_seq_dieta_cpoe
	from	valor_dominio_v x,
		prescr_dieta d,
		prescr_dieta_hor c,
		prescr_medica a
	where	x.vl_dominio = c.cd_refeicao
	and	d.nr_prescricao = c.nr_prescricao
	and	d.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao
	and	c.nr_seq_dieta	= d.nr_sequencia
	and	x.cd_dominio = 99
	and	(c.cd_refeicao IS NOT NULL AND c.cd_refeicao::text <> '')	
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.IE_PRESCR_NUTRICAO, 'N') = 'S')))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
	and	c.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		c.dt_horario,
		get_ie_apres_inf_dieta,
		c.nr_prescricao,
		substr(CASE WHEN get_ie_apres_inf_dieta='S' THEN obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DIO') END  || substr(adep_gerar_horarios_pck.obter_ds_justificativa(obter_justificativa_item(a.nr_prescricao, d.nr_sequencia, 'D')), 1, 1000),1,2000),
		c.nr_sequencia,
		c.dt_bloqueio,
		c.dt_fim_horario,
		c.dt_suspensao,
		c.cd_refeicao,
		coalesce(Obter_Desc_Intervalo_prescr(d.cd_intervalo), d.cd_intervalo),
		c.ds_observacao,
		d.cd_intervalo,
		c.ie_ciente,
		d.qt_parametro,
		d.nr_seq_dieta_cpoe
	
union

	SELECT	c.nr_prescricao,
		c.nr_sequencia,
		CASE WHEN coalesce(c.dt_bloqueio::text, '') = '' THEN CASE WHEN substr(obter_status_hor_dieta_oral(c.dt_fim_horario,c.dt_suspensao),1,1)='N' THEN CASE WHEN coalesce(c.ie_ciente,'N')='S' THEN 'W'  ELSE 'N' END   ELSE substr(obter_status_hor_dieta_oral(c.dt_fim_horario,c.dt_suspensao),1,1) END   ELSE 'B' END ,
		to_char(d.cd_dieta),
		substr(CASE WHEN get_ie_apres_inf_dieta='S' THEN obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DIO') END  || substr(adep_gerar_horarios_pck.obter_ds_justificativa(obter_justificativa_item(a.nr_prescricao, d.nr_sequencia, 'D')), 1, 1000),1,2000) ds_informacoes,
		c.ds_observacao,
		c.dt_horario,
		c.ie_ciente,
		c.dt_suspensao,
		d.cd_intervalo,
		coalesce(Obter_Desc_Intervalo_prescr(d.cd_intervalo), d.cd_intervalo),
		d.qt_parametro,
		d.nr_seq_dieta_cpoe
	from	dieta x,
		prescr_dieta d,
		prescr_dieta_hor c,
		prescr_medica a
	where	x.cd_dieta	= d.cd_dieta
	and	d.nr_prescricao = c.nr_prescricao
	and	d.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao
	and	c.nr_seq_dieta	= d.nr_sequencia
	and	coalesce(c.cd_refeicao::text, '') = ''	
	and	c.nr_seq_dieta	= d.nr_sequencia	
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	((obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S') or
		((ie_exibe_sem_lib_farm_p = 'S') and (coalesce(a.ie_prescr_nutricao, 'N') = 'S')))
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
	and	c.dt_horario between dt_horario_inicio_sinc_w and dt_horario_fim_sinc_w
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		c.dt_horario,
		c.nr_prescricao,
		c.nr_sequencia,
		to_char(d.cd_dieta),
		c.dt_fim_horario,
		get_ie_apres_inf_dieta,
		c.dt_suspensao,
		c.dt_bloqueio,
		substr(CASE WHEN get_ie_apres_inf_dieta='S' THEN obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DIO') END  || substr(adep_gerar_horarios_pck.obter_ds_justificativa(obter_justificativa_item(a.nr_prescricao, d.nr_sequencia, 'D')), 1, 1000),1,2000),
		coalesce(Obter_Desc_Intervalo_prescr(d.cd_intervalo), d.cd_intervalo),
		c.cd_refeicao,	
		d.cd_intervalo,
		c.ds_observacao,
		c.ie_ciente,
		d.qt_parametro,
		d.nr_seq_dieta_cpoe
	order by
		7, dt_suspensao, ds_informacoes;
	c02 CURSOR FOR	
	SELECT	c.nr_prescricao,
		c.nr_sequencia,
		CASE WHEN coalesce(c.dt_bloqueio::text, '') = '' THEN CASE WHEN substr(obter_status_hor_dieta_oral(c.dt_fim_horario,c.dt_suspensao),1,1)='N' THEN CASE WHEN coalesce(c.ie_ciente,'N')='S' THEN 'W'  ELSE 'N' END   ELSE substr(obter_status_hor_dieta_oral(c.dt_fim_horario,c.dt_suspensao),1,1) END   ELSE 'B' END ,
		to_char(d.cd_dieta),
		CASE WHEN get_ie_apres_inf_dieta='S' THEN substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,2000) END  ds_informacoes,
		c.ds_observacao,
		c.ie_ciente,
		d.cd_intervalo,
		coalesce(Obter_Desc_Intervalo_prescr(d.cd_intervalo), d.cd_intervalo),
		d.qt_parametro,
		d.nr_seq_dieta_cpoe
	from	prescr_dieta d,
		prescr_dieta_hor c,
		prescr_medica a
	where	d.nr_prescricao = c.nr_prescricao
	and	d.nr_prescricao = a.nr_prescricao
	and	c.nr_prescricao = a.nr_prescricao
	and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S'
	and	a.nr_atendimento = nr_atendimento_p
	and	c.nr_seq_dieta	= d.nr_sequencia
	and	((coalesce(a.ie_recem_nato,'N')	= 'N') or (ie_recem_nato_w = 'S'))	
	and	a.dt_validade_prescr between dt_validade_limite_p and dt_fim_w
	and	obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p, a.ie_lib_farm) = 'S'
	and	obter_se_prescr_vig_adep(a.dt_prescricao,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S'
	and	((ie_exibir_suspensos_p = 'S') or (coalesce(d.dt_suspensao::text, '') = ''))
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = ''))
	and	((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = ''))
	and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p))
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and	((get_ie_vigente = 'N') or (clock_timestamp() between a.dt_inicio_prescr and a.dt_validade_prescr + get_minutos_vigente/1440))
	group by
		c.nr_prescricao,
		c.nr_sequencia,
		c.dt_fim_horario,
		c.dt_suspensao,
		d.cd_dieta,
		c.dt_bloqueio,
		CASE WHEN get_ie_apres_inf_dieta='S' THEN substr(obter_inf_dieta_adep(c.nr_prescricao,d.nr_sequencia,'DI'),1,2000) END ,
		get_ie_apres_inf_dieta,
		coalesce(Obter_Desc_Intervalo_prescr(d.cd_intervalo), d.cd_intervalo),
		c.ds_observacao,
		d.cd_intervalo,
		c.ie_ciente,
		d.qt_parametro,
		d.nr_seq_dieta_cpoe
	order by
		c.dt_suspensao;
	
BEGIN
	ds_sep_bv_w	:= obter_separador_bv;
	if (ie_horarios_dietas_orais_p <> 'N') then
		begin
		open c01;
		loop
		fetch c01 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				nr_seq_horario_w,
				ie_status_horario_w,
				cd_refeicao_w,
				ds_informacoes_w,
				ds_observacoes_w,
				current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp,
				ie_ciente_w,
				dummy_w,
				cd_intervalo_w,
				ds_intervalo_w,
				qt_parametro_w,
				nr_seq_dieta_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			nr_horario_w := adep_gerar_horarios_pck.get_posicao_horario(current_setting('adep_gerar_horarios_pck.dt_horario_w')::timestamp);
			if (nr_horario_w IS NOT NULL AND nr_horario_w::text <> '') then
				if (pkg_i18n.get_user_locale() = 'en_AU') then
					ds_informacoes_ww	:= substr(wheb_mensagem_pck.get_texto(334581) || ds_observacoes_w || ' - ' || ds_informacoes_w,1,2000);
				else
					ds_informacoes_ww	:= substr(ds_informacoes_w,1,2000);
				end if;

				acho_w	:= false;
				for i in 1..vt_ds_inf_w.count loop
					begin
						if (vt_ds_inf_w[i].ds_informacao	= ds_informacoes_ww) and (vt_ds_inf_w[i].cd_refeicao	= cd_refeicao_w) and (vt_ds_inf_w[i].nr_horario	= nr_horario_w) then
							acho_w	:= true;
						end if;
					end;
				end loop;
				if (not acho_w) then
					vt_ds_inf_w[x].ds_informacao	:= ds_informacoes_ww;
					vt_ds_inf_w[x].cd_refeicao	:= cd_refeicao_w;
					vt_ds_inf_w[x].nr_horario	:= nr_horario_w;
					x := x +1;
				elsif (getDuplicaDietaInformacao = 'N') then
					ds_informacoes_ww := null;
				end if;
				if	(ds_informacoes_ww IS NOT NULL AND ds_informacoes_ww::text <> '' AND getDuplicaDietaInformacao	= 'N') then
					select	coalesce(max('S'),'N')
					into STRICT	ie_inf_existente_w
					from	w_adep_t b where		b.cd_item		= cd_refeicao_w
					and		b.ie_tipo_item	= 'D'
					and		b.nm_usuario	= nm_usuario_p
					and		b.ds_diluicao	like('%'||ds_informacoes_ww||'%')
					and		exists (	SELECT  1
										from	w_adep_t a where		a.cd_item		= cd_refeicao_w
										and		a.ie_tipo_item	= 'D'
										and		a.nm_usuario	= nm_usuario_p
										and		a.ds_diluicao	like('%'||ds_informacoes_ww||'%')
										and		a.nr_sequencia	<> b.nr_sequencia LIMIT 1) LIMIT 1;
					if (ie_inf_existente_w		= 'S') and (getDuplicaDietaInformacao	= 'N') then
						ds_informacoes_ww := null;
					end if;				
				end if;
				ds_comando_update_w	:=	' update w_adep_t ' ||
								' set hora' || to_char(nr_horario_w) || ' = :vl_hora, ' ||
								' nr_prescricoes= adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
								' ds_diluicao   = :ds_informacoes, ' ||
								' ie_ciencia	= :ie_ciencia, ' ||
								' ds_prescricao = :ds_prescricao ' ||
								' where nm_usuario = :nm_usuario ' ||
								' and ie_tipo_item = :ie_tipo ' ||
								' and nvl(qt_item,0) = :qt_item ' ||
								' and cd_item = :cd_item ' ||
								' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
								' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
								' and nvl(cd_intervalo, ''XPTO'') = :cd_intervalo ';
				CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w ||
											'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||
											'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
											'ds_informacoes=' || ds_informacoes_ww || ds_sep_bv_w || 
											'ie_ciencia=' || ie_ciente_w || ds_sep_bv_w || 
											'ds_prescricao=' || ds_intervalo_w || ds_sep_bv_w || 
											'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
											'ie_tipo=D' || ds_sep_bv_w || 
											'qt_item=' || to_char(coalesce(qt_parametro_w,0)) || ds_sep_bv_w || 
											'cd_item=' || cd_refeicao_w || ds_sep_bv_w ||
											'cd_intervalo=' || coalesce(cd_intervalo_w, 'XPTO') || ds_sep_bv_w);
				commit;
			end if;
			end;
		end loop;
		close c01;
		end;
	else
		begin
		open c02;
		loop
		fetch c02 into	current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type,
				nr_seq_horario_w,
				ie_status_horario_w,
				cd_refeicao_w,
				ds_informacoes_w,
				ds_observacoes_w,
				ie_ciente_w,
				cd_intervalo_w,
				ds_intervalo_w,
				qt_parametro_w,
				nr_seq_dieta_cpoe_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (pkg_i18n.get_user_locale() = 'en_AU') then
				ds_informacoes_ww	:= substr(wheb_mensagem_pck.get_texto(334581) || ds_observacoes_w || ' - ' || ds_informacoes_w,1,2000);
			else
				ds_informacoes_ww	:= substr(ds_informacoes_w || ' - ' || wheb_mensagem_pck.get_texto(334581) || ds_observacoes_w,1,2000);
			end if;
			ds_comando_update_w	:=	' update w_adep_t ' ||
							' set nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao), ' ||
							' ds_diluicao = :ds_informacoes, ' ||
							' ie_ciencia   = :ie_ciencia, ' ||
							' ds_prescricao = :ds_prescricao ' ||
							' where nm_usuario = :nm_usuario ' ||
							' and ie_tipo_item = :ie_tipo ' ||
							' and nvl(qt_item,0) = :qt_item ' ||
							' and cd_item = :cd_item ' ||
							' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' ||
							' and nvl(nr_seq_cpoe,nvl(:nr_seq_cpoe,0)) = nvl(:nr_seq_cpoe,0) ' ||
							' and cd_intervalo = :cd_intervalo ';
			CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'nr_prescricao=' || to_char(current_setting('adep_gerar_horarios_pck.nr_prescricao_w')::prescr_medica.nr_prescricao%type) || ds_sep_bv_w ||
										'nr_seq_cpoe=' || to_char(nr_seq_dieta_cpoe_w) || ds_sep_bv_w ||
										'ds_informacoes=' || ds_informacoes_ww || ds_sep_bv_w || 
										'ie_ciencia=' || ie_ciente_w || ds_sep_bv_w ||
										'ds_prescricao=' || ds_intervalo_w || ds_sep_bv_w || 
										'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
										'ie_tipo=D' || ds_sep_bv_w || 
										'qt_item=' || to_char(coalesce(qt_parametro_w,0)) || ds_sep_bv_w || 
										'cd_item=' || cd_refeicao_w || ds_sep_bv_w ||
										'cd_intervalo=' || cd_intervalo_w || ds_sep_bv_w);
			commit;
			end;
		end loop;
		close c02;	
		end;
	end if;
	CALL Atualizar_adep_controle(nm_usuario_p, nr_atendimento_p, 'D', 'N');
	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_horarios_pck.adep_sincronizar_dieta_oral ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_horarios_dietas_orais_p text, dt_horario_p timestamp, nr_horario_p integer, ie_exibe_sem_lib_farm_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) FROM PUBLIC;
