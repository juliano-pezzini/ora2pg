-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OBTER RESTRICOES PESSOAS<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--



CREATE OR REPLACE FUNCTION mprev_pop_alvo_pck.obter_restricao_pessoa (dados_regra_p mprev_pop_alvo_pck.regra_pessoa) RETURNS varchar AS $body$
DECLARE


	ds_retorno_w		varchar(4000)	:= null;
	dt_idade_minima_w	timestamp		:= null;
	dt_idade_maxima_w	timestamp		:= null;

	
BEGIN

	--IE_SEXO

	if (dados_regra_p.ie_sexo IS NOT NULL AND dados_regra_p.ie_sexo::text <> '') then
		-- Aqui verifica monta a restricao do select.

		if (dados_regra_p.ie_sexo = 'F') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							'and	pessoa.ie_sexo = ' || current_setting('mprev_pop_alvo_pck.aspas_w')::pls_util_pck.aspas_w%type || 'F' || current_setting('mprev_pop_alvo_pck.aspas_w')::pls_util_pck.aspas_w%type;
		elsif (dados_regra_p.ie_sexo = 'M') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							'and	pessoa.ie_sexo = ' || current_setting('mprev_pop_alvo_pck.aspas_w')::pls_util_pck.aspas_w%type || 'M' || current_setting('mprev_pop_alvo_pck.aspas_w')::pls_util_pck.aspas_w%type;
		else
			null;
		end if;
	end if;

	--QT_IDADE_MAXIMA

	if (dados_regra_p.qt_idade_maxima IS NOT NULL AND dados_regra_p.qt_idade_maxima::text <> '') then
		-- Converte a idade maxima em data

		dt_idade_maxima_w	:= pkg_date_utils.add_month(clock_timestamp(),  -((dados_regra_p.qt_idade_maxima *12)+12), 0);

		-- Aqui monta a restricao do select

		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and    pessoa.dt_nascimento >= :dt_idade_maxima_pc ';
		-- Aqui adiciona o valor da bild variable

		current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_idade_maxima_pc', dt_idade_maxima_w, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	--QT_IDADE_MINIMA

	if (dados_regra_p.qt_idade_minima IS NOT NULL AND dados_regra_p.qt_idade_minima::text <> '') then
		-- Converter a idade minima em data

		dt_idade_minima_w	:= pkg_date_utils.add_month(clock_timestamp(),  -(dados_regra_p.qt_idade_minima *12), 0);

		-- Aqui monta a restricao do select

		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and    pessoa.dt_nascimento <= :dt_idade_minima_pc ';
		-- Aqui adiciona o valor da bild variable

		current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_idade_minima_pc', dt_idade_minima_w, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	--IE_PARTICIPANTE

	if (dados_regra_p.ie_participante IS NOT NULL AND dados_regra_p.ie_participante::text <> '') then
		-- Aqui monta o select com as restricoes

		if (dados_regra_p.ie_participante = 'S') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	exists '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	(select 1 '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	from 	mprev_programa_partic p, '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 		mprev_participante a '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	where 	pessoa.cd_pessoa_fisica = a.cd_pessoa_fisica '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	and	p.nr_seq_participante = a.nr_sequencia '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	and 	sysdate between p.dt_inclusao and nvl(p.dt_exclusao,sysdate) '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	)';
		elsif (dados_regra_p.ie_participante = 'N') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	not exists '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	(select 1 '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	from 	mprev_programa_partic p, '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 		mprev_participante a '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	where 	pessoa.cd_pessoa_fisica = a.cd_pessoa_fisica '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	and	p.nr_seq_participante = a.nr_sequencia '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	and 	sysdate between p.dt_inclusao and nvl(p.dt_exclusao,sysdate) '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	)';
		else
			null;
		end if;
	end if;

	--IE_GRUPO_CONTROLE

	if (dados_regra_p.ie_grupo_controle IS NOT NULL AND dados_regra_p.ie_grupo_controle::text <> '') then
		-- -- Aqui monta o select com as restricoes

		if (dados_regra_p.ie_grupo_controle = 'S') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	exists '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	(select 1 '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	from 	mprev_grupo_cont_pessoa a '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	where 	pessoa.cd_pessoa_fisica = a.cd_pessoa_fisica '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	and 	sysdate between a.dt_inclusao and nvl(a.dt_exclusao,sysdate) '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	)';
		elsif (dados_regra_p.ie_grupo_controle = 'N') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	not exists '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	(select 1 '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	from 	mprev_grupo_cont_pessoa a '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	where 	pessoa.cd_pessoa_fisica = a.cd_pessoa_fisica '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	and 	sysdate between a.dt_inclusao and nvl(a.dt_exclusao,sysdate) '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' 	)';
		else
			null;
		end if;
	end if;
	
	if (dados_regra_p.nr_seq_parentesco IS NOT NULL AND dados_regra_p.nr_seq_parentesco::text <> '') then
		-- -- Aqui monta o select com as restricoes

		
		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	exists '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	(select 1 '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	from 	pls_segurado a, grau_parentesco b '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	where 	benef.nr_seq_segurado = a.nr_sequencia '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'	and	a.nr_seq_parentesco = b.nr_sequencia '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	and 	b.ie_grau_parentesco = :nr_seq_parentesco ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	and 	b.nr_seq_titular is not null ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	)';
		current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_parentesco', dados_regra_p.nr_seq_parentesco, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);		
	end if;
	
	if (dados_regra_p.nr_seq_classif_beneficiario IS NOT NULL AND dados_regra_p.nr_seq_classif_beneficiario::text <> '') then
		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	exists '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	(select 1 '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	from 	pls_segurado a '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'       , pls_segurado t '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	where 	benef.nr_seq_segurado = a.nr_sequencia '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'	and   t.nr_sequencia = decode(a.nr_seq_titular,null,a.nr_sequencia,a.nr_seq_titular) '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'	and 	t.nr_seq_classificacao = :nr_seq_classif_beneficiario'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type;

		if (coalesce(dados_regra_p.nr_seq_parentesco::text, '') = '') then

            		ds_retorno_w :=	ds_retorno_w ||	'	and 	a.nr_seq_titular IS NULL '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type;
		
		else

			ds_retorno_w :=	ds_retorno_w ||	'	and 	a.nr_seq_titular IS NOT NULL '|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type;

		end if;
				
		ds_retorno_w :=	ds_retorno_w ||' )';	
		current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_classif_beneficiario', dados_regra_p.nr_seq_classif_beneficiario, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	return	ds_retorno_w;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION mprev_pop_alvo_pck.obter_restricao_pessoa (dados_regra_p mprev_pop_alvo_pck.regra_pessoa) FROM PUBLIC;
