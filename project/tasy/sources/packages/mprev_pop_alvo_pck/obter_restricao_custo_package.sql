-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OBTER RESTRICOES CUSTO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--



CREATE OR REPLACE FUNCTION mprev_pop_alvo_pck.obter_restricao_custo ( dados_regra_p mprev_pop_alvo_pck.regra_custo) RETURNS varchar AS $body$
DECLARE


	ds_retorno_w	varchar(4000)	:= null;

	
BEGIN

	--CUSTO (VL_CUSTO_MEDIO_MINIMO e VL_CUSTO_MEDIO_MAXIMO)

	if ((dados_regra_p.vl_custo_medio_minimo IS NOT NULL AND dados_regra_p.vl_custo_medio_minimo::text <> '') or (dados_regra_p.vl_custo_medio_maximo IS NOT NULL AND dados_regra_p.vl_custo_medio_maximo::text <> '')) then
		-- Aqui monta a restricao e atualiza o valor das binds.

		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	(select	dividir(sum(custo.vl_custo),count(1)) ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'	from	mprev_benef_custo_cubo_ops custo ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'	where	custo.nr_seq_benef_cubo = benef.nr_sequencia ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						'	and	custo.dt_mesano_referencia >= :dt_referencia_pc) ';
		if (dados_regra_p.vl_custo_medio_minimo IS NOT NULL AND dados_regra_p.vl_custo_medio_minimo::text <> '' AND dados_regra_p.vl_custo_medio_maximo IS NOT NULL AND dados_regra_p.vl_custo_medio_maximo::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' between :vl_custo_medio_minimo_pc and :vl_custo_medio_maximo_pc ';
		elsif (dados_regra_p.vl_custo_medio_minimo IS NOT NULL AND dados_regra_p.vl_custo_medio_minimo::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' > :vl_custo_medio_minimo_pc ';
		elsif (dados_regra_p.vl_custo_medio_maximo IS NOT NULL AND dados_regra_p.vl_custo_medio_maximo::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' < :vl_custo_medio_maximo_pc ';
		end if;

		if (dados_regra_p.vl_custo_medio_minimo IS NOT NULL AND dados_regra_p.vl_custo_medio_minimo::text <> '' AND dados_regra_p.vl_custo_medio_maximo IS NOT NULL AND dados_regra_p.vl_custo_medio_maximo::text <> '') then
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_custo_medio_minimo_pc', dados_regra_p.vl_custo_medio_minimo, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_custo_medio_maximo_pc', dados_regra_p.vl_custo_medio_maximo, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		elsif (dados_regra_p.vl_custo_medio_minimo IS NOT NULL AND dados_regra_p.vl_custo_medio_minimo::text <> '') then
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_custo_medio_minimo_pc', dados_regra_p.vl_custo_medio_minimo, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		elsif (dados_regra_p.vl_custo_medio_maximo IS NOT NULL AND dados_regra_p.vl_custo_medio_maximo::text <> '') then
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_custo_medio_maximo_pc', dados_regra_p.vl_custo_medio_maximo, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;
		current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	--SINISTRALIDADE (VL_SINISTRALIDADE_MINIMA e VL_SINISTRALIDADE_MAXIMA)

	if ((dados_regra_p.vl_sinistralidade_minima IS NOT NULL AND dados_regra_p.vl_sinistralidade_minima::text <> '') or (dados_regra_p.vl_sinistralidade_maxima IS NOT NULL AND dados_regra_p.vl_sinistralidade_maxima::text <> '')) then
		-- Aqui monta a restricao e atualiza o valor das binds.

		ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	(select	dividir(sum(custo.pr_sinistralidade),count(1)) ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	from	mprev_benef_custo_cubo_ops custo ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	where	custo.nr_seq_benef_cubo = benef.nr_sequencia ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' 	and	custo.dt_mesano_referencia >= :dt_referencia_pc) ';
		if (dados_regra_p.vl_sinistralidade_minima IS NOT NULL AND dados_regra_p.vl_sinistralidade_minima::text <> '' AND dados_regra_p.vl_sinistralidade_maxima IS NOT NULL AND dados_regra_p.vl_sinistralidade_maxima::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' between :vl_sinistralidade_minima_pc and :vl_sinistralidade_maxima_pc ';
		elsif (dados_regra_p.vl_sinistralidade_minima IS NOT NULL AND dados_regra_p.vl_sinistralidade_minima::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' > :vl_sinistralidade_minima_pc ';
		elsif (dados_regra_p.vl_sinistralidade_maxima IS NOT NULL AND dados_regra_p.vl_sinistralidade_maxima::text <> '') then
			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' < :vl_sinistralidade_maxima_pc ';
		end if;

		if (dados_regra_p.vl_sinistralidade_minima IS NOT NULL AND dados_regra_p.vl_sinistralidade_minima::text <> '' AND dados_regra_p.vl_sinistralidade_maxima IS NOT NULL AND dados_regra_p.vl_sinistralidade_maxima::text <> '') then
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_sinistralidade_minima_pc', dados_regra_p.vl_sinistralidade_minima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_sinistralidade_maxima_pc', dados_regra_p.vl_sinistralidade_maxima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		elsif (dados_regra_p.vl_sinistralidade_minima IS NOT NULL AND dados_regra_p.vl_sinistralidade_minima::text <> '') then
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_sinistralidade_minima_pc', dados_regra_p.vl_sinistralidade_minima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		elsif (dados_regra_p.vl_sinistralidade_maxima IS NOT NULL AND dados_regra_p.vl_sinistralidade_maxima::text <> '') then
			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':vl_sinistralidade_maxima_pc', dados_regra_p.vl_sinistralidade_maxima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;
		current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
	end if;

	return	ds_retorno_w;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION mprev_pop_alvo_pck.obter_restricao_custo ( dados_regra_p mprev_pop_alvo_pck.regra_custo) FROM PUBLIC;
