-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OBTER RESTRICOES ATENDIMENTO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--



CREATE OR REPLACE FUNCTION mprev_pop_alvo_pck.obter_restricao_atend (dados_regra_p mprev_pop_alvo_pck.regra_atend) RETURNS varchar AS $body$
DECLARE


	ds_retorno_w	varchar(4000)	:= null;

	
BEGIN

	if (dados_regra_p.ie_busca = 'CO') then

		--IE_TIPO_GUIA

		if (dados_regra_p.ie_tipo_guia IS NOT NULL AND dados_regra_p.ie_tipo_guia::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.ie_tipo_guia = :ie_tipo_guia_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':ie_tipo_guia_pc', dados_regra_p.ie_tipo_guia, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--NR_SEQ_TIPO_ATENDIMENTO

		if (dados_regra_p.nr_seq_tipo_atendimento IS NOT NULL AND dados_regra_p.nr_seq_tipo_atendimento::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.nr_seq_tipo_atendimento = :nr_seq_tipo_atendimento_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_tipo_atendimento_pc', dados_regra_p.nr_seq_tipo_atendimento, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--NR_SEQ_CLINICA

		if (dados_regra_p.nr_seq_clinica IS NOT NULL AND dados_regra_p.nr_seq_clinica::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.nr_seq_clinica = :nr_seq_clinica_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_clinica_pc', dados_regra_p.nr_seq_clinica, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--CD_ESPECIALIDADE

		if (dados_regra_p.cd_especialidade IS NOT NULL AND dados_regra_p.cd_especialidade::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.cd_especialidade = :cd_especialidade_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_especialidade_pc', dados_regra_p.cd_especialidade, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--NR_SEQ_PRESTADOR_EXEC

		if (dados_regra_p.nr_seq_prestador_exec IS NOT NULL AND dados_regra_p.nr_seq_prestador_exec::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	conta.nr_seq_prestador_exec = :nr_seq_prestador_exec_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_prestador_exec_pc', dados_regra_p.nr_seq_prestador_exec, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--CD_MEDICO_EXECUTOR

		if (dados_regra_p.cd_medico_executor IS NOT NULL AND dados_regra_p.cd_medico_executor::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.cd_medico_executor = :cd_medico_executor_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_medico_executor_pc', dados_regra_p.cd_medico_executor, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--CD_MEDICO_SOLICITANTE

		if (dados_regra_p.cd_medico_solicitante IS NOT NULL AND dados_regra_p.cd_medico_solicitante::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.cd_medico_solicitante = :cd_medico_solicitante_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_medico_solicitante_pc', dados_regra_p.cd_medico_solicitante, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--DT_REFERENCIA_W

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	conta.dt_mes_competencia >= :dt_referencia_pc ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' group by benef.nr_sequencia ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' having count(conta.nr_sequencia) ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);

		--QT_OCORRENCIA_MINIMA e QT_OCORRENCIA_MAXIMA

		if ((dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') or (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '')) then
			-- Aqui monta a restricao e atualiza o valor das binds.

			if (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '' AND dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' between :qt_ocorrencia_minima_pc and :qt_ocorrencia_maxima_pc ';
			elsif (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' >= :qt_ocorrencia_minima_pc ';
			elsif (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' <= :qt_ocorrencia_maxima_pc ';
			end if;

			if (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '' AND dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_minima_pc', dados_regra_p.qt_ocorrencia_minima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_maxima_pc', dados_regra_p.qt_ocorrencia_maxima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			elsif (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') then
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_minima_pc', dados_regra_p.qt_ocorrencia_minima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			elsif (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_maxima_pc', dados_regra_p.qt_ocorrencia_maxima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			end if;
		end if;

	elsif (dados_regra_p.ie_busca = 'AO') then

		if (dados_regra_p.ie_tipo_guia IS NOT NULL AND dados_regra_p.ie_tipo_guia::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.ie_tipo_guia = :ie_tipo_guia_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':ie_tipo_guia_pc', dados_regra_p.ie_tipo_guia, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--NR_SEQ_TIPO_ATENDIMENTO

		if (dados_regra_p.nr_seq_tipo_atendimento IS NOT NULL AND dados_regra_p.nr_seq_tipo_atendimento::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.nr_seq_tipo_atendimento = :nr_seq_tipo_atendimento_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_tipo_atendimento_pc', dados_regra_p.nr_seq_tipo_atendimento, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--NR_SEQ_CLINICA

		if (dados_regra_p.nr_seq_clinica IS NOT NULL AND dados_regra_p.nr_seq_clinica::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.nr_seq_clinica = :nr_seq_clinica_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_clinica_pc', dados_regra_p.nr_seq_clinica, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--CD_ESPECIALIDADE

		if (dados_regra_p.cd_especialidade IS NOT NULL AND dados_regra_p.cd_especialidade::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.cd_especialidade = :cd_especialidade_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_especialidade_pc', dados_regra_p.cd_especialidade, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--CD_MEDICO_SOLICITANTE

		if (dados_regra_p.cd_medico_solicitante IS NOT NULL AND dados_regra_p.cd_medico_solicitante::text <> '') then
			-- Aqui monta a restricao e atualiza o valor das binds.

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
							' and	conta.cd_medico_solicitante = :cd_medico_solicitante_pc ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':cd_medico_solicitante_pc', dados_regra_p.cd_medico_solicitante, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
		end if;

		--DT_REFERENCIA_W

			ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and	conta.dt_mes_competencia >= :dt_referencia_pc ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' group by benef.nr_sequencia ' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' having count(conta.nr_sequencia) ';

			current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':dt_referencia_pc', current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);

		--QT_OCORRENCIA_MINIMA e QT_OCORRENCIA_MAXIMA

		if ((dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') or (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '')) then
			-- Aqui monta a restricao e atualiza o valor das binds.

			if (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '' AND dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' between :qt_ocorrencia_minima_pc and :qt_ocorrencia_maxima_pc ';
			elsif (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' >= :qt_ocorrencia_minima_pc ';
			elsif (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				ds_retorno_w :=	ds_retorno_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||  ' <= :qt_ocorrencia_maxima_pc ';
			end if;

			if (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '' AND dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_minima_pc', dados_regra_p.qt_ocorrencia_minima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_maxima_pc', dados_regra_p.qt_ocorrencia_maxima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			elsif (dados_regra_p.qt_ocorrencia_minima IS NOT NULL AND dados_regra_p.qt_ocorrencia_minima::text <> '') then
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_minima_pc', dados_regra_p.qt_ocorrencia_minima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			elsif (dados_regra_p.qt_ocorrencia_maxima IS NOT NULL AND dados_regra_p.qt_ocorrencia_maxima::text <> '') then
				current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':qt_ocorrencia_maxima_pc', dados_regra_p.qt_ocorrencia_maxima, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);
			end if;
		end if;

	end if;

	return	ds_retorno_w;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION mprev_pop_alvo_pck.obter_restricao_atend (dados_regra_p mprev_pop_alvo_pck.regra_atend) FROM PUBLIC;
