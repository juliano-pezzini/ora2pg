-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


	-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>GERAR POPULACAO ALVO<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<--



CREATE OR REPLACE PROCEDURE mprev_pop_alvo_pck.gerar_populacao_alvo ( nr_seq_regra_cubo_p bigint, nr_seq_populacao_alvo_p bigint, nm_usuario_p text) AS $body$
DECLARE


	c_regras_utilizadas CURSOR(nr_seq_populacao_alvo_pc	bigint) FOR
		SELECT	'MPREV_REGRA_CUBO_PESSOA' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			7 ordem_desc
		from	mprev_regra_cubo_pessoa c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir
		
union all

		SELECT	'HDM_REGRA_CUBO_COMPL' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			6 ordem_desc
		from	hdm_regra_cubo_compl c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir
		
union all

		select	'MPREV_REGRA_CUBO_BENEF' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			5 ordem_desc
		from	mprev_regra_cubo_benef c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir
		
union all

		select	'MPREV_REGRA_CUBO_CUSTO' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			4 ordem_desc
		from	mprev_regra_cubo_custo c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir
		
union all

		select	'MPREV_REGRA_CUBO_ATEND' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			3 ordem_desc
		from	mprev_regra_cubo_atend c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir
		
union all

		select	'MPREV_REGRA_CUBO_DIAG' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			2 ordem_desc
		from	mprev_regra_cubo_diag c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir
		
union all

		select	'MPREV_REGRA_CUBO_PROC' nm_tabela_regra_cubo,
			c.ie_incluir ie_selecionar,
			1 ordem_desc
		from	mprev_regra_cubo_proc c,
			mprev_regra_cubo b,
			mprev_populacao_alvo a
		where	a.nr_seq_regra_cubo = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_regra_cubo
		and	a.nr_sequencia = nr_seq_populacao_alvo_pc
		group by
			c.ie_incluir;

	c_regras_util_ordenadas CURSOR(nr_seq_populacao_alvo_pc	bigint) FOR
		SELECT	x.nm_tabela_regra_cubo,
			nr_seq_controle
		from (SELECT 'MPREV_REGRA_CUBO_PESSOA' nm_tabela_regra_cubo,
				7 nr_seq_controle
			from	mprev_regra_cubo_pessoa c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc
			
union all

			select	'HDM_REGRA_CUBO_COMPL' nm_tabela_regra_cubo,
				6 nr_seq_controle
			from	hdm_regra_cubo_compl c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc
			
union all

			select	'MPREV_REGRA_CUBO_BENEF' nm_tabela_regra_cubo,
				5 nr_seq_controle
			from	mprev_regra_cubo_benef c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc
			
union all

			select	'MPREV_REGRA_CUBO_CUSTO' nm_tabela_regra_cubo,
				4 nr_seq_controle
			from	mprev_regra_cubo_custo c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc
			
union

			select	'MPREV_REGRA_CUBO_ATEND' nm_tabela_regra_cubo,
				3 nr_seq_controle
			from	mprev_regra_cubo_atend c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc
			
union

			select	'MPREV_REGRA_CUBO_DIAG' nm_tabela_regra_cubo,
				2 nr_seq_controle
			from	mprev_regra_cubo_diag c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc
			
union

			select	'MPREV_REGRA_CUBO_PROC' nm_tabela_regra_cubo,
				1 nr_seq_controle
			from	mprev_regra_cubo_proc c,
				mprev_regra_cubo b,
				mprev_populacao_alvo a
			where	a.nr_seq_regra_cubo = b.nr_sequencia
			and	b.nr_sequencia = c.nr_seq_regra_cubo
			and	a.nr_sequencia = nr_seq_populacao_alvo_pc) x
		order by 2;

	c_contas_guias CURSOR(nr_seq_populacao_alvo_pc	bigint) FOR
		SELECT	1 ie_union,
			a.nr_sequencia nr_seq_conta_cubo,
			c.nr_sequencia nr_seq_pop_alvo_benef,
			p.nr_sequencia nr_seq_pop_alvo_pessoa,
			a.cd_medico_solicitante,
			a.cd_medico_executor,
			a.ie_carater_internacao,
			a.nr_seq_tipo_atendimento,
			a.nr_seq_prestador_exec,
			a.cd_especialidade,
			a.nr_seq_clinica,
			a.dt_atendimento,
			a.dt_mes_competencia,
			a.cd_guia,
			a.cd_guia_principal,
			a.ie_tipo_guia,
			substr(obter_desc_expressao(285928),1,254) ds_guia_conta, --'Conta'
			a.vl_conta
		from	mprev_conta_cubo_ops a,
			mprev_benef_cubo_ops b,
			mprev_pop_alvo_benef c,
			mprev_pop_alvo_pessoa p
		where	p.nr_sequencia	= c.nr_seq_pop_alvo_pessoa
		and	c.nr_seq_segurado = b.nr_seq_segurado
		and	b.nr_sequencia	= a.nr_seq_benef_cubo
		and	p.nr_seq_populacao_alvo = nr_seq_populacao_alvo_pc
		and	a.dt_mes_competencia >= current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp
		
union all

		SELECT	2 ie_union,
			a.nr_sequencia nr_seq_conta_cubo,
			c.nr_sequencia nr_seq_pop_alvo_benef,
			p.nr_sequencia nr_seq_pop_alvo_pessoa,
			null cd_medico_solicitante,
			null cd_medico_executor,
			a.ie_carater_internacao,
			a.nr_seq_tipo_atendimento,
			null nr_seq_prestador_exec,
			a.cd_especialidade,
			a.nr_seq_clinica,
			a.dt_atendimento,
			a.dt_mes_competencia,
			a.cd_guia,
			a.cd_guia_principal,
			a.ie_tipo_guia,
			substr(obter_desc_expressao(650944),1,254) ds_guia_conta,--'Guia'
			null
		from	mprev_guia_plano_cubo_ops a,
			mprev_benef_cubo_ops b,
			mprev_pop_alvo_benef c,
			mprev_pop_alvo_pessoa p
		where	p.nr_sequencia	= c.nr_seq_pop_alvo_pessoa
		and	c.nr_seq_segurado = b.nr_seq_segurado
		and	b.nr_sequencia	= a.nr_seq_benef_cubo
		and	p.nr_seq_populacao_alvo = nr_seq_populacao_alvo_pc
		and	a.dt_mes_competencia >= current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp;

	c_diagnostico CURSOR(nr_seq_conta_cubo_pc	bigint) FOR
		SELECT	a.cd_doenca
		from	mprev_diagnostico_cubo_ops a
		where	a.nr_seq_conta_cubo	= nr_seq_conta_cubo_pc;

	c_procedimento CURSOR(nr_seq_conta_cubo_pc	bigint) FOR
		SELECT	a.cd_procedimento,
			a.ie_origem_proced,
			a.qt_procedimento
		from	mprev_conta_proc_cubo_ops a
		where	a.nr_seq_conta_cubo_ops	= nr_seq_conta_cubo_pc
		and 1 = current_setting('mprev_pop_alvo_pck.ie_union_w')::numeric(20)
		
union all

		SELECT	a.cd_procedimento,
			a.ie_origem_proced,
			a.qt_procedimento
		from	mprev_guia_proc_cubo_ops a
		where	a.nr_seq_guia_cubo	= nr_seq_conta_cubo_pc
		and 2 = current_setting('mprev_pop_alvo_pck.ie_union_w')::numeric(20);

	c_custo CURSOR(nr_seq_populacao_alvo_pc	bigint) FOR
		SELECT	c.nr_sequencia nr_seq_pop_alvo_benef,
			p.nr_sequencia nr_seq_pop_alvo_pessoa,
			a.dt_mesano_referencia,
			a.vl_custo,
			a.vl_receita,
			a.vl_resultado,
			a.pr_sinistralidade
		from	mprev_benef_custo_cubo_ops a,
			mprev_benef_cubo_ops b,
			mprev_pop_alvo_benef c,
			mprev_pop_alvo_pessoa p
		where	p.nr_sequencia	= c.nr_seq_pop_alvo_pessoa
		and	c.nr_seq_segurado = b.nr_seq_segurado
		and	b.nr_sequencia	= a.nr_seq_benef_cubo
		and	p.nr_seq_populacao_alvo = nr_seq_populacao_alvo_pc
		and	a.dt_mesano_referencia >= current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp;

	pop_alvo_w			pop_alvo;

	cd_pessoa_fisica_w 		mprev_pessoa_cubo_ops.cd_pessoa_fisica%type;
	cd_pessoa_fisica_old_w 		mprev_pessoa_cubo_ops.cd_pessoa_fisica%type;
	nr_seq_segurado_w		mprev_benef_cubo_ops.nr_seq_segurado%type	:= 0;
	dt_nascimento_w			mprev_pessoa_cubo_ops.dt_nascimento%type	:= null;
	cd_usuario_plano_w		mprev_pop_alvo_benef.cd_usuario_plano%type	:= null;
	ie_preco_plano_w		mprev_pop_alvo_benef.ie_preco_plano%type	:= null;
	ds_preco_plano_w		mprev_pop_alvo_benef.ds_preco_plano%type	:= null;
	dt_inclusao_plano_w		mprev_pop_alvo_benef.dt_inclusao_plano%type	:= null;
	ie_situacao_contrato_w		mprev_pop_alvo_benef.ie_situacao_contrato%type	:= null;
	ie_situacao_atend_w		mprev_pop_alvo_benef.ie_situacao_atend%type	:= null;
	qt_idade_anos_w 		mprev_pop_alvo_pessoa.qt_idade_anos%type 	:= null;
	nr_seq_partic_programa_w 	numeric(20) 					:= null;
	ie_partic_programa_w 		mprev_pop_alvo_pessoa.ie_partic_programa%type 	:= null;
	ie_grupo_controle_w		mprev_pop_alvo_pessoa.ie_grupo_controle%type	:= null;
	nm_pessoa_w			mprev_pop_alvo_pessoa.nm_pessoa%type		:= null;
	ie_sexo_w			mprev_pop_alvo_pessoa.ie_sexo%type		:= null;
	nr_seq_pop_alvo_data_w		mprev_pop_alvo_data.nr_sequencia%type		:= null;
	/*Nome da pessoa em maisculo e sem acentuacao, para otimizar performance na pesquisa.*/


	nm_pessoa_pesquisa_w		mprev_pop_alvo_pessoa.nm_pessoa_pesquisa%type	:= null;
	/*Indices*/


	nr_seq_pessoa_w			mprev_pop_alvo_pessoa.nr_sequencia%type		:= null;
	nr_seq_atend_w			mprev_pop_pes_atend.nr_sequencia%type;
	cursor_w			sql_pck.t_cursor;
	nr_seq_controle_w		mprev_pessoa_cubo_ops_w.nr_seq_controle%type;

	
BEGIN

	select 	pkg_date_utils.add_month(pkg_date_utils.start_of(clock_timestamp(),'MONTH', 0),- coalesce(qt_meses_atras,0), 0) dt_referencia
	into STRICT 	current_setting('mprev_pop_alvo_pck.dt_referencia_w')::timestamp
	from 	mprev_regra_cubo
	where 	nr_sequencia = nr_seq_regra_cubo_p;

	CALL mprev_pop_alvo_pck.selecionar_benef(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);

	CALL CALL mprev_pop_alvo_pck.selecionar_pessoa(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);

	CALL mprev_pop_alvo_pck.selecionar_custo(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);

	CALL CALL mprev_pop_alvo_pck.selecionar_diag(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);

	CALL CALL mprev_pop_alvo_pck.selecionar_atend(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);

	CALL CALL mprev_pop_alvo_pck.selecionar_proc(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);
		
	CALL CALL mprev_pop_alvo_pck.selecionar_compl_pf(nr_seq_regra_cubo_p,nr_seq_populacao_alvo_p,nm_usuario_p);

	pop_alvo_w.nr_seq_populacao_alvo := nr_seq_populacao_alvo_p;

	PERFORM set_config('mprev_pop_alvo_pck.ds_select_w', ' select 	distinct b.cd_pessoa_fisica,	'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
				'		b.dt_nascimento,		'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
				'		b.nr_sequencia			'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
				' from 		mprev_pessoa_cubo_ops b 	'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
				' where 	1 = 1 ', false);

	PERFORM set_config('mprev_pop_alvo_pck.ds_select_tabela_temp_w', ' select 	distinct b.cd_pessoa_fisica,	'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
					'		b.dt_nascimento,		'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
					'		b.nr_sequencia			'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
					' from 		mprev_pessoa_cubo_ops_w b 	'|| current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
					' where 	1 = 1 ', false);

	/* Verificar quais foram as regras alimentadas na selecao para esta populacao alvo */


	for r_c_regras_utilizadas in c_regras_utilizadas(nr_seq_populacao_alvo_p) loop
			--Verifica se deve incluir na pesquisa ou excluir da pesquisa.

		if (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'MPREV_REGRA_CUBO_PESSOA') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_pessoa	:= 'S';
			else
				pop_alvo_w.ie_regra_exc_pessoa	:= 'S';
			end if;
		elsif (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'HDM_REGRA_CUBO_COMPL') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_compl_pf		:= 'S';
			else
				pop_alvo_w.ie_regra_exc_compl_pf	:= 'S';
			end if;		
		elsif (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'MPREV_REGRA_CUBO_BENEF') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_benef	:= 'S';
			else
				pop_alvo_w.ie_regra_exc_benef	:= 'S';
			end if;
		elsif (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'MPREV_REGRA_CUBO_ATEND') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_atend	:= 'S';
			else
				pop_alvo_w.ie_regra_exc_atend	:= 'S';
			end if;
		elsif (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'MPREV_REGRA_CUBO_CUSTO') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_custo	:= 'S';
			else
				pop_alvo_w.ie_regra_exc_custo	:= 'S';
			end if;
		elsif (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'MPREV_REGRA_CUBO_PROC') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_proc	:= 'S';
			else
				pop_alvo_w.ie_regra_exc_proc	:= 'S';
			end if;
		elsif (r_c_regras_utilizadas.nm_tabela_regra_cubo = 'MPREV_REGRA_CUBO_DIAG') then
			if (r_c_regras_utilizadas.ie_selecionar = 'S') then
				pop_alvo_w.ie_regra_diag	:= 'S';
			else
				pop_alvo_w.ie_regra_exc_diag	:= 'S';
			end if;
		end if;
	end loop;

	PERFORM set_config('mprev_pop_alvo_pck.ie_exec_select_princ_w', 'S', false);
	
	/*Busca todas as regras informadas para buscar as pessoas */


	for r_c_regras_util_ordenadas in c_regras_util_ordenadas(nr_seq_populacao_alvo_p) loop
		begin

		PERFORM set_config('mprev_pop_alvo_pck.ds_restricao_w', mprev_pop_alvo_pck.obter_restricao_pop_alvo(pop_alvo_w, r_c_regras_util_ordenadas.nm_tabela_regra_cubo), false);

		if (current_setting('mprev_pop_alvo_pck.ds_restricao_w')::(varchar(4000) IS NOT NULL AND (varchar(4000))::text <> '')) then
			/*O primeiro que entrar executa o select principal*/


			if (current_setting('mprev_pop_alvo_pck.ie_exec_select_princ_w')::varchar(1) = 'S') then
				PERFORM set_config('mprev_pop_alvo_pck.ie_exec_select_princ_w', 'N', false);
				PERFORM set_config('mprev_pop_alvo_pck.ds_select_comp_w', current_setting('mprev_pop_alvo_pck.ds_select_w')::varchar(2000) || current_setting('mprev_pop_alvo_pck.ds_restricao_w')::varchar(4000), false); -- || ' order by b.cd_pessoa_fisica ';
			else
				/*Busca o maior nr_seq_controle inserido na tabela mprev_pessoa_cubo_ops_w*/


				select	coalesce(max(nr_seq_controle),0)
				into STRICT	nr_seq_controle_w
				from	mprev_pessoa_cubo_ops_w
				where	nm_usuario = nm_usuario_p
				and	nr_seq_pop_alvo = nr_seq_populacao_alvo_p;

				/*Restringe pela sequencia de controle para buscar apenas os registros ja selecionados pela ultima regra*/


				PERFORM set_config('mprev_pop_alvo_pck.ds_select_comp_w', current_setting('mprev_pop_alvo_pck.ds_select_tabela_temp_w')::varchar(4000) || current_setting('mprev_pop_alvo_pck.ds_restricao_w')::varchar(4000) || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and b.nr_seq_controle = ' || nr_seq_controle_w || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
						' and b.nr_seq_pop_alvo = ' || nr_seq_populacao_alvo_p, false);

			end if;
			
			CALL CALL mprev_pop_alvo_pck.gravar_pessoas_cubo_ops_w(	nr_seq_populacao_alvo_p, nm_usuario_p, r_c_regras_util_ordenadas.nr_seq_controle,
							current_setting('mprev_pop_alvo_pck.ds_select_comp_w')::varchar(4000));

		end if;
		end;
	end loop;
	
	-- Chama a procedure mprev_pop_alvo_pck.gravar_pessoas_populacao() para alimentar as pessoas encontradas na tabela mprev_pop_alvo_pessoa_w

	PERFORM set_config('mprev_pop_alvo_pck.ds_select_comp_w', '	select	distinct(cd_pessoa_fisica),										'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'		trunc(months_between(sysdate,dt_nascimento)/12) qt_idade_anos,					'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'		decode(nvl(mprev_obter_participante(cd_pessoa_fisica),0),0,''N'',''S'') ie_partic_programa,	'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'		mprev_obter_se_part_grupo_cont(cd_pessoa_fisica,sysdate) ie_grupo_controle,			'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'		substr(obter_nome_pf(cd_pessoa_fisica),1,60) nm_pessoa,						'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'		nvl(obter_sexo_pf(cd_pessoa_fisica,''C''),''I'') ie_sexo					'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'	from 	mprev_pessoa_cubo_ops_w										'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'	where	nm_usuario = '|| current_setting('mprev_pop_alvo_pck.aspas_w')::pls_util_pck.aspas_w%type || nm_usuario_p || current_setting('mprev_pop_alvo_pck.aspas_w')::pls_util_pck.aspas_w%type || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
				'	and	nr_seq_controle = :nr_seq_controle_pc								'||current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type||
				'	and	nr_seq_pop_alvo = :nr_seq_populacao_alvo_pc ', false);

	CALL CALL mprev_pop_alvo_pck.gravar_pessoas_populacao(nr_seq_populacao_alvo_p, nm_usuario_p, current_setting('mprev_pop_alvo_pck.ds_select_comp_w')::varchar(4000));

	/* Novo cursor para beneficiarios */


	PERFORM set_config('mprev_pop_alvo_pck.ds_select_w', ' select	a.nr_seq_segurado,				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		a.cd_usuario_plano, 				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		a.ie_preco_plano, 				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		a.ds_preco_plano, 				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		a.dt_inclusao_plano, 				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		a.ie_situacao_contrato, 			' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		a.ie_situacao_atend, 				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		pes.nr_sequencia				' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			' from 		mprev_pop_alvo_pessoa pes,			' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		mprev_benef_cubo_ops a, 			' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			'		mprev_pessoa_cubo_ops b 			' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			' where 	pes.cd_pessoa_fisica = b.cd_pessoa_fisica	' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			' and		a.nr_seq_pessoa_cubo = b.nr_sequencia 		' || current_setting('mprev_pop_alvo_pck.enter_w')::pls_util_pck.enter_w%type ||
			' and		pes.nr_seq_populacao_alvo = :nr_seq_populacao_pc', false);

	--Adciona valor a bind :nr_seq_populacao_pc do select principal

	current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind := sql_pck.bind_variable(':nr_seq_populacao_pc', nr_seq_populacao_alvo_p, current_setting('mprev_pop_alvo_pck.bind_sql_w')::sql_pck.t_dado_bind);

	PERFORM set_config('mprev_pop_alvo_pck.ds_select_comp_w', current_setting('mprev_pop_alvo_pck.ds_select_w')::varchar(2000), false);

	--Chama a procedure mprev_pop_alvo_pck.gravar_benef_populacao() para alimentar os beneficiarios na tabela mprev_benef_pop_alvo.

	CALL mprev_pop_alvo_pck.gravar_benef_populacao(nr_seq_populacao_alvo_p, nm_usuario_p, current_setting('mprev_pop_alvo_pck.ds_select_comp_w')::varchar(4000));

	/* Buscar todos os dados da base para os beneficiarios que foram salvos */


	for r_c_contas_guias in c_contas_guias(nr_seq_populacao_alvo_p) loop

		nr_seq_pop_alvo_data_w := mprev_pop_alvo_pck.inserir_data(nr_seq_populacao_alvo_p, r_c_contas_guias.dt_atendimento, nm_usuario_p, nr_seq_pop_alvo_data_w);

		insert into mprev_pop_pes_atend(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nr_seq_pop_alvo_benef,
			nr_seq_pop_alvo_data,
			cd_medico_solicitante,
			cd_medico_executor,
			ie_carater_internacao,
			nr_seq_tipo_atendimento,
			nr_seq_prestador_exec,
			cd_especialidade_solic,
			nr_seq_clinica,
			nr_crm_medico_solic,
			nr_crm_medico_exec,
			nm_medico_solic,
			nm_medico_exec,
			nm_prestador_exec,
			ds_especialidade_solic,
			ds_tipo_internacao,
			ds_tipo_atendimento,
			qt_atendimento,
			nr_seq_pop_alvo_pessoa,
			ie_tipo_guia,
			ds_guia_conta,
			vl_atendimento,
			nr_seq_populacao_alvo)
		values (nextval('mprev_pop_pes_atend_seq'),
			nm_usuario_p,
			clock_timestamp(),
			r_c_contas_guias.nr_seq_pop_alvo_benef,
			nr_seq_pop_alvo_data_w,
			r_c_contas_guias.cd_medico_solicitante,
			r_c_contas_guias.cd_medico_executor,
			r_c_contas_guias.ie_carater_internacao,
			r_c_contas_guias.nr_seq_tipo_atendimento,
			r_c_contas_guias.nr_seq_prestador_exec,
			r_c_contas_guias.cd_especialidade,
			r_c_contas_guias.nr_seq_clinica,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			1,
			r_c_contas_guias.nr_seq_pop_alvo_pessoa,
			r_c_contas_guias.ie_tipo_guia,
			r_c_contas_guias.ds_guia_conta,
			r_c_contas_guias.vl_conta,
			nr_seq_populacao_alvo_p)
		returning nr_sequencia into nr_seq_atend_w;

		/* DIAGNOSTICOS */


		if (r_c_contas_guias.ie_union = 1) then
			for r_c_diagnostico in c_diagnostico(r_c_contas_guias.nr_seq_conta_cubo) loop
				insert into mprev_pop_pes_diagnostico(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nr_seq_pop_alvo_pessoa,
					nr_seq_pop_alvo_benef,
					nr_seq_pop_alvo_data,
					nr_seq_pop_alvo_atend,
					cd_doenca,
					nr_seq_populacao_alvo)
				values (nextval('mprev_pop_pes_diagnostico_seq'),
					nm_usuario_p,
					clock_timestamp(),
					r_c_contas_guias.nr_seq_pop_alvo_pessoa,
					r_c_contas_guias.nr_seq_pop_alvo_benef,
					nr_seq_pop_alvo_data_w,
					nr_seq_atend_w,
					r_c_diagnostico.cd_doenca,
					nr_seq_populacao_alvo_p);
			end loop;
		end if;

		PERFORM set_config('mprev_pop_alvo_pck.ie_union_w', r_c_contas_guias.ie_union, false);
		
		/* Procedimentos */


		for r_c_procedimento in c_procedimento(r_c_contas_guias.nr_seq_conta_cubo) loop

			insert into mprev_pop_pes_atend_proc(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nr_seq_pop_alvo_pessoa,
				nr_seq_pop_alvo_benef,
				nr_seq_pop_alvo_data,
				nr_seq_pop_alvo_atend,
				cd_procedimento,
				ie_origem_procedimento,
				qt_procedimento,
				nr_seq_populacao_alvo)
			values (nextval('mprev_pop_pes_atend_proc_seq'),
				nm_usuario_p,
				clock_timestamp(),
				r_c_contas_guias.nr_seq_pop_alvo_pessoa,
				r_c_contas_guias.nr_seq_pop_alvo_benef,
				nr_seq_pop_alvo_data_w,
				nr_seq_atend_w,
				r_c_procedimento.cd_procedimento,
				r_c_procedimento.ie_origem_proced,
				r_c_procedimento.qt_procedimento,
				nr_seq_populacao_alvo_p);
		end loop;
	end loop;

	/* Custo */


	for r_c_custo in c_custo(nr_seq_populacao_alvo_p) loop

		nr_seq_pop_alvo_data_w := mprev_pop_alvo_pck.inserir_data(nr_seq_populacao_alvo_p, r_c_custo.dt_mesano_referencia, nm_usuario_p, nr_seq_pop_alvo_data_w);

		insert into mprev_pop_pes_custo(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nr_seq_pop_alvo_pessoa,
			nr_seq_pop_alvo_benef,
			nr_seq_pop_alvo_data,
			vl_custo,
			vl_receita,
			vl_resultado,
			pr_sinistralidade,
			nr_seq_populacao_alvo)
		values (nextval('mprev_pop_pes_custo_seq'),
			nm_usuario_p,
			clock_timestamp(),
			r_c_custo.nr_seq_pop_alvo_pessoa,
			r_c_custo.nr_seq_pop_alvo_benef,
			nr_seq_pop_alvo_data_w,
			r_c_custo.vl_custo,
			r_c_custo.vl_receita,
			r_c_custo.vl_resultado,
			r_c_custo.pr_sinistralidade,
			nr_seq_populacao_alvo_p);
	end loop;

	END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_pop_alvo_pck.gerar_populacao_alvo ( nr_seq_regra_cubo_p bigint, nr_seq_populacao_alvo_p bigint, nm_usuario_p text) FROM PUBLIC;
