-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION search_panel_surgery_pck.get_data ( cd_agenda_p bigint, cd_setor_painel_p bigint, cd_setor_internacao_p bigint, cd_turno_p bigint, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp) RETURNS SETOF T_OBJETO_ROW_DATA AS $body$
DECLARE


t_objeto_row_w						t_objeto_row;
cd_perfil_w						perfil.cd_perfil%TYPE;
nm_usuario_w					usuario.nm_usuario%TYPE;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%TYPE;
ie_restringe_estab_w			varchar(15);
ie_opcao_w						smallint;
ie_restringe_setor_w			varchar(15);
ie_circulante_w				varchar(15);
ie_completo_w					varchar(15);
ie_apelido_anestesista_w	varchar(15);
ie_forma_ordena_painel_w	varchar(15);
nr_seq_apresentacao_w		bigint;
ie_anestesista_cirurgia_w	varchar(15);
nr_seq_evento_entrada_w		bigint;
nr_seq_evento_anestesia_w	bigint;
nr_seq_evento_procedimento_w bigint;
ds_lista_status_w				varchar(255);
hr_visual_canceladas_w		bigint;
ie_regra_w						varchar(1);
ds_lista_setores_w			varchar(2000);
ds_lista_estabelecimento_w	varchar(2000);
ie_continua_w					varchar(1) := 'S';
nr_cirurgia_w					cirurgia.nr_cirurgia%type;
nr_seq_pepo_w					cirurgia.nr_seq_pepo%type;

surgey CURSOR FOR
		SELECT	obter_inicio_evento_cirurgia(coalesce(nr_cirurgia_w,0), coalesce(nr_seq_evento_entrada_w,0)) dt_evento_cir_entrada,
					obter_inicio_evento_cirurgia(coalesce(nr_cirurgia_w,0), coalesce(nr_seq_evento_anestesia_w,0)) dt_evento_cir_anestesia,
					obter_inicio_evento_cirurgia(coalesce(nr_cirurgia_w,0), coalesce(nr_seq_evento_procedimento_w,0)) dt_evento_cir_procedimento,
					CASE WHEN ie_circulante_w='S' THEN SUBSTR(d.nm_outros,1,255)  ELSE '' END  nm_profissional_cirurgia,
					e.nm_medico_anestesista,
					SUBSTR(obter_desc_tipo_cirurgia(e.cd_tipo_cirurgia),1,100) ds_classificacao,
					SUBSTR(obter_valor_dominio(1901,e.ie_porte),1,100) ds_porte,
					TRUNC(pkg_date_utils.get_DiffDate(coalesce(e.dt_inicio_real, clock_timestamp()),coalesce(e.dt_termino, clock_timestamp()),  'MINUTE')) qt_mim_duracao,
					SUBSTR(Obter_evento_exibir_painel(nr_cirurgia_w,nr_seq_pepo_w),1,250) ds_evento,
					SUBSTR(OBTER_INCONSISTENCIAS_PEPO(nr_cirurgia_w,nr_seq_pepo_w),1,255) ds_inconsistencia,
					SUBSTR(obter_status_cirurgia(OBTER_STATUS_CIRUR_PACIENTE(nr_cirurgia_w)),1,200) ds_status_cirurgia,
					SUBSTR(d.nm_instrumentadores,1,255) nm_instrumentador,
					SUBSTR(d.nm_circulantes,1,255) nm_circulante,
					SUBSTR(e.ds_setor_unid,1,80) ds_sala_setor,
					e.dt_inicio_real,
					SUBSTR(e.nr_min_duracao_prev,1,10) nr_min_duracao,
					SUBSTR(OBTER_VALOR_DOMINIO(1287,e.ie_asa_estado_paciente),1,155) ds_asa,
					obter_min_sala_ociosa_painel(nr_cirurgia_w) qt_tempo_ocioso,
					SUBSTR(obter_demarcacao_cirurgia(nr_cirurgia_w),1,255) ds_demarcacao
		from		table(surgery_pck.get_participantes(nr_cirurgia_w)) d,
					table(surgery_pck.get_dados_cirurgia(nr_cirurgia_w)) e;
					
					
	
surgical_panel CURSOR FOR
	SELECT	a.nm_medico_externo,
				a.nr_cirurgia,
				a.nr_seq_pepo,
				a.cd_pessoa_fisica,
				a.nm_paciente,
				a.nr_sequencia,
				a.cd_anestesista,
				a.cd_medico,
				a.cd_convenio,
				a.ie_lado,
				a.dt_agenda,
				a.hr_inicio,
				a.nr_seq_sala_cir,
				a.ie_carater_cirurgia,
				a.qt_idade_paciente,
				a.qt_idade_mes,
				a.ds_observacao,
				a.dt_chegada,
				a.dt_paciente_aguardo,
				a.dt_chegada_fim,
				a.dt_paciente_termino,
				a.dt_analise,
				a.dt_chamada_pre_inducao,
				a.dt_sala_recuperacao,
				a.dt_alta_cc,
				a.hr_revisada,
				a.dt_saida_paciente_cc,
				a.cd_agenda,
				a.ds_inf_painel,
				a.ie_status_agenda,
				a.cd_turno,
				a.ie_reserva_leito,
				a.cd_pessoa_chamada_setor,
				a.cd_tipo_acomodacao,
				a.cd_tipo_anestesia,
				a.ie_anestesia,
				a.dt_visita_pre_anest,
				a.ie_atencao,
				a.nr_atendimento,
				a.nr_seq_classif_agenda,
				a.cd_procedimento,
				a.ie_origem_proced,
				a.nr_seq_proc_interno,
				a.nr_seq_tipo_classif_pac,
				a.dt_nascimento_pac,
				a.nr_seq_status_painel,
				a.nm_buscar_paciente,
				substr(obter_nome_usuario(a.nm_usuario_exige_demarc),1,255) nm_usuario_exige_demarc,
				a.dt_buscar_paciente dt_busca,
				b.cd_setor_exclusivo,
				b.cd_estabelecimento,
				substr(obter_desc_radio_group(337508,a.ie_anestesia),1,255) ds_anest,
				SUBSTR(CASE WHEN ie_circulante_w='S' THEN c.nm_outros  ELSE c.nm_participantes END ,1,255) nm_profissional,
				SUBSTR(obter_desc_proc_painel(a.nr_sequencia,ie_opcao_w),1,255) ds_procedimento,
				SUBSTR(abrevia_nome_pessoa(a.cd_pessoa_fisica),1,50) nm_paciente1,
				coalesce(SUBSTR(abrevia_nome_pf(a.cd_pessoa_fisica,'C'),1,30),SUBSTR(abrevia_nome(nm_paciente, NULL),1,50)) nm_paciente2,
				SUBSTR(f.nm_apelido_anestesista,1,255) nm_apelido_anestesista,
				SUBSTR(f.nm_medico_anestesista,1,255) nm_medico_anestesista,
				SUBSTR(c.nm_anestesistas,1,255) nm_anestesistas,
				SUBSTR(obter_desc_status_pac_ag(a.nr_seq_status_pac),1,100) ds_status_paciente,
				SUBSTR(f.nm_contato,1,200) nm_contato,
				CASE WHEN obter_se_bco_sangue_agenda(a.nr_sequencia)='S' THEN obter_desc_expressao_idioma(327113,NULL,wheb_usuario_pck.get_nr_seq_idioma)  ELSE '' END  ie_banco_sangue,
				SUBSTR(obter_nome_sala_cirur(a.nr_seq_sala_cir,''),1,100) ds_sala_cir,
				SUBSTR(obter_desc_tipo_cirurgia(obter_dados_proc_interno(a.nr_seq_proc_interno,'TC')),1,100) ds_classificacao,
				SUBSTR(obter_valor_dominio(1901,obter_dados_proc_interno(a.nr_seq_proc_interno,'PO')),1,100) ds_porte,
				SUBSTR(Obter_autoriz_estagio_concat(a.nr_sequencia),1,255) ds_autorizacao_conv,
				SUBSTR(obter_status_painel_cir(a.NR_SEQ_STATUS_PAINEL, 'S'),1,255) ds_status_painel,
				coalesce(coalesce(obter_peso_pf(a.cd_pessoa_fisica),CASE WHEN coalesce(a.nr_atendimento::text, '') = '' THEN NULL  ELSE obter_sinal_vital(a.nr_atendimento,'Peso') END ),obter_peso_pf_gestao_vaga(a.cd_pessoa_fisica)) peso_pf,
				SUBSTR(obter_valor_dominio(36,a.cd_tipo_anestesia),1,254) ds_anestesia,
				SUBSTR(OBTER_DESC_TIPO_ACOMOD(a.cd_tipo_acomodacao),1,254) ds_acomodacao,
				SUBSTR(e.ds_lista_conjunto,1,4000) ds_lista_cme,
				SUBSTR(b.ds_agenda,1,30) nm_agenda,
				coalesce(SUBSTR(obter_unidade_atendimento(a.nr_atendimento,'IA','U'),1,30),SUBSTR(obter_unidade_atendimento(a.nr_atendimento,'A','U'),1,30)) nm_unidade,
				SUBSTR(f.nm_medico,1,50) nm_cirurgiao,
				SUBSTR(e.ds_lista_opme,1,4000) ds_lista_opme,
				SUBSTR(e.ds_lista_equip,1,4000) ds_lista_equip,
				SUBSTR(e.ds_lista_servico,1,4000) ds_lista_servico,
				SUBSTR(obter_se_agenda_a_seguir_html(a.nr_sequencia,a.hr_inicio,a.cd_medico),1,1) ds_as,
				CASE WHEN coalesce(a.dt_visita_pre_anest::text, '') = '' THEN ''  ELSE obter_desc_expressao_idioma(327113,NULL,wheb_usuario_pck.get_nr_seq_idioma) END  ie_visita_pre_anestesica,
				CASE WHEN coalesce(a.ie_atencao::text, '') = '' THEN ''  ELSE obter_desc_expressao_idioma(327113,NULL,wheb_usuario_pck.get_nr_seq_idioma) END  ds_atencao,
				SUBSTR(obter_unidade_atendimento(a.nr_atendimento,'A','SU'),1,50)  nm_unidade_atual,
				SUBSTR(e.ds_banco_sangue,1,4000) ds_bolsa,
				SUBSTR(OBTER_VALOR_DOMINIO(1545,a.ie_reserva_leito),1,155) ds_reserva_leito,
				SUBSTR(Obter_dados_gestao_vaga(Obter_seq_gestao_vaga(a.nr_sequencia),'UD'),1,100) ds_unidade_desejada,
				SUBSTR(obter_valor_dominio(1372,a.ie_lado),1,254) ds_lado,
				SUBSTR(c.nm_instrumentadores,1,255) nm_instrumentador,
				SUBSTR(c.nm_circulantes,1,255) nm_circulante,
				SUBSTR(obter_nome_convenio(a.cd_convenio),1,99) ds_convenio,
				SUBSTR(obter_desc_classif_agenda_pac(a.nr_seq_classif_agenda),1,80) ds_classif_agenda,
				e.ds_proc_adicional,
				SUBSTR(obter_prontuario_pf(Obter_Dados_Atendimento(a.nr_atendimento,'EST'),a.cd_pessoa_fisica),1,10) nr_pr,
				SUBSTR(obter_medic_adic_agenda_painel(a.nr_sequencia),1,255) nm_medico_adicional,
				SUBSTR(OBTER_GRUPO_PROCEDIMENTO(a.cd_procedimento,a.ie_origem_proced,'D'),1,200) ds_grupo_proced,
				SUBSTR(exibe_itens_sem_codigo(a.nr_sequencia),1,255) ds_sem_codigo,
				SUBSTR(obter_tipo_classif(nr_seq_tipo_classif_pac),1,90) ds_classificacao_pac,
				e.ds_lista_kit ds_kit_vinculado,
				coalesce(a.ie_necessita_demarcacao,(SELECT max(h.ie_necessita_demarcacao) FROM proc_interno h WHERE h.nr_sequencia = a.nr_seq_proc_interno)) ie_necessita_demarcacao_param,
				SUBSTR(obter_nome_usuario(nm_buscar_paciente),1,255) nm_usuario_busca,
				SUBSTR(Obter_Idade(dt_nascimento_pac,clock_timestamp(),'DI'),1,3) qt_dias_nasc,
				SUBSTR(obter_se_pac_isolamento(a.nr_atendimento),1,1) ie_isolamento_pac,
				SUBSTR(Obter_se_pacote_convenio(a.cd_procedimento,a.ie_origem_proced,a.cd_convenio,obter_estab_agenda(a.cd_agenda)),1,1) ie_pacote,
				substr(obter_valor_dominio(1016,a.ie_carater_cirurgia),1,255) ds_carater_cirurgia,
				TO_DATE(obter_dados_atendimento(a.nr_atendimento,'DE'),'dd/mm/yyyy hh24:mi:ss') dt_entrada_pac,
				coalesce(a.dt_nascimento_pac,TO_DATE(obter_dados_pf(a.cd_pessoa_fisica,'DN'),'dd/mm/yyyy hh24:mi:ss')) dt_nascimento,
				ocultar_paciente_painel_agenda(nr_cirurgia,nr_seq_pepo) ie_ocultar,
				a.dt_cancelamento,
				CASE WHEN ie_regra_w='S' THEN (SELECT coalesce(MAX('S'),'N') FROM agenda_painel w WHERE a.cd_agenda = w.cd_agenda AND coalesce(w.cd_perfil,cd_perfil_w) = cd_perfil_w AND coalesce(w.nm_usuario_liberacao,nm_usuario_w) = nm_usuario_w)  ELSE 'S' END  ie_visualiza,
				obter_unidade_atendimento(a.nr_atendimento,'IA','CS') cd_setor_internacao,
				obter_minutos_espera(a.hr_inicio,clock_timestamp()) qt_minuto_espera,
				obter_status_paciente_painel(a.dt_analise, a.dt_chegada, a.dt_paciente_aguardo, a.dt_alta_cc, a.dt_chamada_pre_inducao, a.dt_sala_recuperacao, a.dt_chegada_fim, a.dt_saida_paciente_cc, a.ie_status_agenda) ie_status_paciente_painel,
				CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN null  ELSE Obter_Alergias(a.cd_pessoa_fisica) END  ds_alergias,
				coalesce(a.hr_revisada, a.hr_inicio) hr_horario_efetivo,
				obter_dados_pf(a.cd_pessoa_fisica,'NSOC') nm_social,
				substr(obter_desc_tipo_nec_espe(a.nr_seq_tipo_nec_esp),1,100) ds_tipo_nec_esp
	FROM		agenda_paciente a,
				agenda b,
				TABLE(surgery_schedule_pck.get_profissionais(a.nr_sequencia)) c,
				TABLE(surgery_schedule_pck.get_dados(a.nr_sequencia)) f,
				TABLE(surgery_schedule_pck.get_listas(a.nr_sequencia,a.cd_medico,a.nr_seq_proc_interno)) e
	WHERE		a.cd_agenda 				= b.cd_agenda
	AND 		a.ie_status_agenda 		<> 'L'
	AND		a.hr_inicio BETWEEN 		dt_inicial_p AND dt_final_p
	AND 		coalesce(b.ie_situacao,'A') 	= 'A'
	AND 		b.cd_tipo_agenda 			= 1
	AND 		coalesce(a.ie_exibir_painel, 'S') <> 'N'
	AND		((cd_turno_p = 2) OR (a.cd_turno	= cd_turno_p))
	AND (obter_se_contido_char(a.ie_status_agenda,ds_lista_status_w) = 'S');
	
estabelecimento_usuario CURSOR FOR	
	SELECT	cd_estabelecimento
	FROM 		usuario_estabelecimento
	WHERE 	nm_usuario_param = nm_usuario_w;	
	
BEGIN



cd_perfil_w					:= wheb_usuario_pck.get_cd_perfil;
nm_usuario_w				:= wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;

obter_param_usuario(871, 35, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_restringe_estab_w);
obter_param_usuario(871, 80, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_opcao_w);
obter_param_usuario(871, 83, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_restringe_setor_w);
obter_param_usuario(871, 102, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_circulante_w);
obter_param_usuario(871, 104, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_completo_w);
obter_param_usuario(871, 116, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_apelido_anestesista_w);
obter_param_usuario(871, 150, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_anestesista_cirurgia_w);
obter_param_usuario(871, 207, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, nr_seq_evento_entrada_w);
obter_param_usuario(871, 208, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, nr_seq_evento_anestesia_w);
obter_param_usuario(871, 209, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, nr_seq_evento_procedimento_w);
obter_param_usuario(871, 509, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ds_lista_status_w);
obter_param_usuario(871, 562, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, hr_visual_canceladas_w);


SELECT 	coalesce(MAX('S'),'N')
INTO STRICT		ie_regra_w
FROM 		agenda_painel;

IF (coalesce(cd_setor_painel_p,0) > 0) THEN
	ds_lista_setores_w := cd_setor_painel_p;
ELSIF (ie_restringe_setor_w = 'S') THEN
	SELECT 	MAX(obter_setor_exclusivo_painel(nm_usuario_w))
	INTO STRICT		ds_lista_setores_w
	;
END IF;

IF (ie_restringe_estab_w = 'S') THEN
	ds_lista_estabelecimento_w := cd_estabelecimento_w;
ELSE
	FOR r_c03 IN estabelecimento_usuario LOOP
		BEGIN
		if (coalesce(ds_lista_estabelecimento_w::text, '') = '') then
			ds_lista_estabelecimento_w := r_c03.cd_estabelecimento;
		else
			ds_lista_estabelecimento_w := ds_lista_estabelecimento_w ||','||r_c03.cd_estabelecimento;
		end if;	
		end;
	end loop;	
END IF;

FOR r_c01 IN surgical_panel LOOP
	BEGIN
	ie_continua_w := 'S';
	IF (coalesce(cd_agenda_p,0) > 0) AND (r_c01.cd_agenda <> cd_agenda_p) THEN
		ie_continua_w := 'N';
	END IF;
	IF (ds_lista_setores_w IS NOT NULL AND ds_lista_setores_w::text <> '') AND (obter_se_contido_char(TO_CHAR(r_c01.cd_setor_exclusivo),ds_lista_setores_w) = 'N') THEN
		ie_continua_w := 'N';
	END IF;
	IF (coalesce(hr_visual_canceladas_w,0) > 0) AND (r_c01.dt_cancelamento IS NOT NULL AND r_c01.dt_cancelamento::text <> '') AND (r_c01.dt_cancelamento <= clock_timestamp() - (hr_visual_canceladas_w/24)) THEN
		ie_continua_w := 'N';
	END IF;
	IF (r_c01.ie_visualiza = 'N') THEN
		ie_continua_w := 'N';
	END IF;
	IF (coalesce(cd_setor_internacao_p,0) > 0) AND ((r_c01.cd_setor_internacao <> cd_setor_internacao_p) or (coalesce(r_c01.cd_setor_internacao::text, '') = '')) then
		ie_continua_w := 'N';
	END IF;
	IF (ds_lista_estabelecimento_w IS NOT NULL AND ds_lista_estabelecimento_w::text <> '') AND (obter_se_contido_char(TO_CHAR(r_c01.cd_estabelecimento),ds_lista_estabelecimento_w) = 'N') THEN
		ie_continua_w := 'N';
	END IF;
	
	IF (coalesce(nr_atendimento_p,0) > 0) AND (coalesce(r_c01.nr_atendimento,0) <> nr_atendimento_p) then
		ie_continua_w := 'N';
	END IF;

	IF (ie_continua_w = 'S') THEN
		t_objeto_row_w.ds_status_paciente			:= r_c01.ds_status_paciente;
		t_objeto_row_w.nm_contato						:= r_c01.nm_contato;
		t_objeto_row_w.dt_chegada						:= r_c01.dt_chegada;
		t_objeto_row_w.ie_banco_sangue				:= r_c01.ie_banco_sangue;
		t_objeto_row_w.ds_sala_cir						:= r_c01.ds_sala_cir;
		t_objeto_row_w.ds_autorizacao_conv			:= r_c01.ds_autorizacao_conv;
		t_objeto_row_w.ds_status_painel				:= r_c01.ds_status_painel;
		t_objeto_row_w.peso_pf							:= r_c01.peso_pf;
		t_objeto_row_w.ds_anestesia					:= r_c01.ds_anestesia;
		t_objeto_row_w.ds_acomodacao					:= r_c01.ds_acomodacao;
		t_objeto_row_w.qt_idade_mes					:=	r_c01.qt_idade_mes;
		t_objeto_row_w.ds_inf_painel					:= r_c01.ds_inf_painel;
		t_objeto_row_w.nr_atendimento					:= r_c01.nr_atendimento;
		t_objeto_row_w.hr_revisada						:= r_c01.hr_revisada;
		t_objeto_row_w.ds_lista_cme					:= r_c01.ds_lista_cme;
		t_objeto_row_w.hr_agenda						:=	r_c01.hr_inicio;
		t_objeto_row_w.hr_inicio						:=	r_c01.hr_inicio;
		t_objeto_row_w.nm_agenda						:= r_c01.nm_agenda;
		t_objeto_row_w.nm_unidade						:= r_c01.nm_unidade;
		t_objeto_row_w.ie_carater_cirurgia			:= r_c01.ie_carater_cirurgia;
		t_objeto_row_w.nm_pac							:= null;
		IF (ie_completo_w = 'T') THEN
			t_objeto_row_w.nm_pac						:= r_c01.nm_paciente1;
		ELSIF (ie_completo_w = 'S') THEN
			t_objeto_row_w.nm_pac						:= r_c01.nm_paciente;
		ELSE
			t_objeto_row_w.nm_pac						:= r_c01.nm_paciente2;
		END IF;
		t_objeto_row_w.nm_pac_sem_idade_concat 			:= t_objeto_row_w.nm_pac;
		IF (r_c01.qt_idade_paciente IS NOT NULL AND r_c01.qt_idade_paciente::text <> '') THEN
			t_objeto_row_w.nm_pac					:= t_objeto_row_w.nm_pac ||CHR(13) || CHR(10)||r_c01.qt_idade_paciente|| ' ' || obter_desc_expressao(620432);
		END IF;
		IF (r_c01.qt_idade_mes IS NOT NULL AND r_c01.qt_idade_mes::text <> '') THEN
			t_objeto_row_w.nm_pac					:= t_objeto_row_w.nm_pac ||CHR(13) || CHR(10)||r_c01.qt_idade_mes|| ' ' || obter_desc_expressao(348664);
		END IF;
		t_objeto_row_w.nm_social						:= r_c01.nm_social;
		if (coalesce(t_objeto_row_w.nm_social::text, '') = '') then
			t_objeto_row_w.nm_social	:= t_objeto_row_w.nm_pac;
      else
         IF (r_c01.qt_idade_paciente IS NOT NULL AND r_c01.qt_idade_paciente::text <> '') THEN
            t_objeto_row_w.nm_social					:= t_objeto_row_w.nm_social ||CHR(13) || CHR(10)||r_c01.qt_idade_paciente|| ' ' || obter_desc_expressao(620432);
         END IF;
         IF (r_c01.qt_idade_mes IS NOT NULL AND r_c01.qt_idade_mes::text <> '') THEN
            t_objeto_row_w.nm_social					:= t_objeto_row_w.nm_social ||CHR(13) || CHR(10)||r_c01.qt_idade_mes|| ' ' || obter_desc_expressao(348664);
         END IF;
		end if;	
		t_objeto_row_w.dt_evento_cir_entrada		:= null;
		t_objeto_row_w.dt_evento_cir_anestesia		:=	null;
		t_objeto_row_w.dt_evento_cir_procedimento	:=	null;
		t_objeto_row_w.nm_profissional_cirurgia	:=	null;
		t_objeto_row_w.qt_mim_duracao					:= null;
		t_objeto_row_w.ds_evento						:=	null;
		t_objeto_row_w.ds_inconsistencia				:= null;
		t_objeto_row_w.ds_status_cirurgia			:= null;
		t_objeto_row_w.ds_sala_setor					:= null;
		t_objeto_row_w.dt_inicio_real					:= null;
		t_objeto_row_w.nr_min_duracao					:= null;
		t_objeto_row_w.ds_asa							:= null;
		t_objeto_row_w.qt_tempo_ocioso				:= null;
		t_objeto_row_w.ds_demarcacao					:= null;
		t_objeto_row_w.ie_status_agenda				:= r_c01.ie_status_agenda;
		t_objeto_row_w.qt_idade_paciente				:= r_c01.qt_idade_paciente;
		t_objeto_row_w.ds_procedimento				:= r_c01.ds_procedimento;
		t_objeto_row_w.nm_cirurgiao					:= r_c01.nm_cirurgiao;
		t_objeto_row_w.ds_observacao					:= r_c01.ds_observacao;
		t_objeto_row_w.ds_lista_opme					:= r_c01.ds_lista_opme;
		t_objeto_row_w.ds_lista_equip					:= r_c01.ds_lista_equip;
		t_objeto_row_w.ds_lista_servico				:= r_c01.ds_lista_servico;
		t_objeto_row_w.ds_as								:= r_c01.ds_as;
		t_objeto_row_w.dt_referencia					:= r_c01.hr_inicio;
		t_objeto_row_w.ie_visita_pre_anestesica	:= r_c01.ie_visita_pre_anestesica;
		t_objeto_row_w.ds_atencao						:=	r_c01.ds_atencao;
		t_objeto_row_w.ds_anest							:= r_c01.ds_anest;
		t_objeto_row_w.nm_unidade_atual				:= r_c01.nm_unidade_atual;
		t_objeto_row_w.ds_bolsa							:= r_c01.ds_bolsa;
		t_objeto_row_w.ds_reserva_leito				:= r_c01.ds_reserva_leito;
		t_objeto_row_w.cd_pessoa_fisica				:= r_c01.cd_pessoa_fisica;
		t_objeto_row_w.nr_sequencia					:=	r_c01.nr_sequencia;
		t_objeto_row_w.nr_seq_status_painel			:= r_c01.nr_seq_status_painel;
		t_objeto_row_w.nr_seq_classif_agenda		:= r_c01.nr_seq_classif_agenda;
		t_objeto_row_w.ds_unidade_desejada			:= r_c01.ds_unidade_desejada;
		t_objeto_row_w.ds_lado							:= r_c01.ds_lado;
		t_objeto_row_w.nm_profissional				:= r_c01.nm_profissional;
		t_objeto_row_w.ds_convenio						:= r_c01.ds_convenio;
		t_objeto_row_w.ds_classif_agenda				:=	r_c01.ds_classif_agenda;
		t_objeto_row_w.dt_entrada_pac					:=	r_c01.dt_entrada_pac;
		t_objeto_row_w.ds_proc_adicional				:= r_c01.ds_proc_adicional;
		t_objeto_row_w.nr_pr								:= r_c01.nr_pr;
		t_objeto_row_w.nm_medico_adicional			:= r_c01.nm_medico_adicional;
		t_objeto_row_w.ds_grupo_proced				:= r_c01.ds_grupo_proced;
		t_objeto_row_w.nm_medico_externo				:= r_c01.nm_medico_externo;
		t_objeto_row_w.ds_tipo_nec_esp				:= r_c01.ds_tipo_nec_esp;
		t_objeto_row_w.ds_sem_codigo					:=	r_c01.ds_sem_codigo;
		t_objeto_row_w.ds_classificacao_pac			:=	r_c01.ds_classificacao_pac;
		t_objeto_row_w.ds_kit_vinculado				:= r_c01.ds_kit_vinculado;
		t_objeto_row_w.ie_necessita_demarcacao_param	:= r_c01.ie_necessita_demarcacao_param;
		t_objeto_row_w.ie_necessita_demarcacao		:= null;
		IF (r_c01.ie_necessita_demarcacao_param = 'S') THEN
			t_objeto_row_w.ie_necessita_demarcacao		:= obter_desc_expressao_idioma(327113,NULL,wheb_usuario_pck.get_nr_seq_idioma);
		ELSIF (r_c01.ie_necessita_demarcacao_param = 'N') THEN
			t_objeto_row_w.ie_necessita_demarcacao		:= obter_desc_expressao_idioma(327114,NULL,wheb_usuario_pck.get_nr_seq_idioma);
		END IF;
		t_objeto_row_w.nm_usuario_busca				:= r_c01.nm_usuario_busca;
		t_objeto_row_w.dt_busca							:= r_c01.dt_busca;
		t_objeto_row_w.qt_dias_nasc					:= r_c01.qt_dias_nasc;
		t_objeto_row_w.dt_nascimento					:= r_c01.dt_nascimento;
		t_objeto_row_w.ie_ocultar					:= r_c01.ie_ocultar;
		t_objeto_row_w.ie_isolamento_pac				:= r_c01.ie_isolamento_pac;
		t_objeto_row_w.ie_pacote						:=	r_c01.ie_pacote;
		t_objeto_row_w.nr_cirurgia						:= r_c01.nr_cirurgia;
		t_objeto_row_w.nm_usuario_exige_demarc		:= r_c01.nm_usuario_exige_demarc;
		t_objeto_row_w.cd_agenda						:= r_c01.cd_agenda;
		t_objeto_row_w.ds_carater_cirurgia			:= r_c01.ds_carater_cirurgia;
		t_objeto_row_w.nr_seq_sala_cir				:=	r_c01.nr_seq_sala_cir;
		t_objeto_row_w.ds_classificacao 				:= r_c01.ds_classificacao;
		t_objeto_row_w.ds_porte 						:= r_c01.ds_porte;
		t_objeto_row_w.nm_instrumentador				:= r_c01.nm_instrumentador;	
		t_objeto_row_w.nm_circulante					:= r_c01.nm_circulante;	
		t_objeto_row_w.qt_minuto_espera				:= r_c01.qt_minuto_espera;	
		t_objeto_row_w.ie_status_paciente_painel	:= r_c01.ie_status_paciente_painel;	
		t_objeto_row_w.ds_alergias						:= r_c01.ds_alergias;
		t_objeto_row_w.cd_estabelecimento			:= r_c01.cd_estabelecimento;
		t_objeto_row_w.dt_chamada_pre_inducao		:= r_c01.dt_chamada_pre_inducao;
		t_objeto_row_w.dt_chegada						:= r_c01.dt_chegada;
		t_objeto_row_w.dt_chegada_fim					:= r_c01.dt_chegada_fim;
		t_objeto_row_w.dt_alta_cc						:= r_c01.dt_alta_cc;
		t_objeto_row_w.dt_analise						:= r_c01.dt_analise;
		t_objeto_row_w.dt_paciente_aguardo			:= r_c01.dt_paciente_aguardo;
		t_objeto_row_w.dt_sala_recuperacao			:= r_c01.dt_sala_recuperacao;
		t_objeto_row_w.dt_paciente_termino			:= r_c01.dt_paciente_termino;
		t_objeto_row_w.dt_saida_paciente_cc			:= r_c01.dt_saida_paciente_cc;
		t_objeto_row_w.hr_horario_efetivo			:= r_c01.hr_horario_efetivo;
		if (ie_apelido_anestesista_w = 'S') then
			if (r_c01.nm_apelido_anestesista IS NOT NULL AND r_c01.nm_apelido_anestesista::text <> '') then
				t_objeto_row_w.nm_anestesista :=	r_c01.nm_apelido_anestesista;
			elsif (r_c01.nm_medico_anestesista IS NOT NULL AND r_c01.nm_medico_anestesista::text <> '') then
				t_objeto_row_w.nm_anestesista :=	r_c01.nm_medico_anestesista;
			end if;
		else
			t_objeto_row_w.nm_anestesista :=	r_c01.nm_medico_anestesista;
		end if;
		if (coalesce(r_c01.nr_cirurgia,0) > 0) then
			nr_cirurgia_w	:=	r_c01.nr_cirurgia;
			nr_seq_pepo_w	:=	r_c01.nr_seq_pepo;
			for r_c02 in surgey loop
				begin
				t_objeto_row_w.dt_evento_cir_entrada			:= r_c02.dt_evento_cir_entrada;
            t_objeto_row_w.dt_evento_cir_anestesia			:=	r_c02.dt_evento_cir_anestesia;
            t_objeto_row_w.dt_evento_cir_procedimento		:=	r_c02.dt_evento_cir_procedimento;
				t_objeto_row_w.nm_profissional_cirurgia		:=	r_c02.nm_profissional_cirurgia;
				t_objeto_row_w.qt_mim_duracao						:= r_c02.qt_mim_duracao;
				t_objeto_row_w.ds_evento							:=	r_c02.ds_evento;
				t_objeto_row_w.ds_inconsistencia					:= r_c02.ds_inconsistencia;
				t_objeto_row_w.ds_status_cirurgia				:= r_c02.ds_status_cirurgia;
				t_objeto_row_w.ds_sala_setor						:= r_c02.ds_sala_setor;
				t_objeto_row_w.dt_inicio_real						:= r_c02.dt_inicio_real;
				t_objeto_row_w.nr_min_duracao						:= r_c02.nr_min_duracao;
				t_objeto_row_w.ds_asa								:= r_c02.ds_asa;
				t_objeto_row_w.qt_tempo_ocioso					:= r_c02.qt_tempo_ocioso;
				t_objeto_row_w.ds_demarcacao						:= r_c02.ds_demarcacao;
				if (coalesce(t_objeto_row_w.nm_anestesista::text, '') = '') then
					if (ie_anestesista_cirurgia_w = 'S') then
						t_objeto_row_w.nm_anestesista := r_c02.nm_medico_anestesista;
					end if;	
				end if;
				if (r_c02.ds_classificacao IS NOT NULL AND r_c02.ds_classificacao::text <> '') then
					t_objeto_row_w.ds_classificacao := r_c02.ds_classificacao;
				end if;
				if (r_c02.ds_porte IS NOT NULL AND r_c02.ds_porte::text <> '') then
					t_objeto_row_w.ds_porte := r_c02.ds_porte;
				end if;
				if (r_c02.nm_instrumentador IS NOT NULL AND r_c02.nm_instrumentador::text <> '') then
					t_objeto_row_w.nm_instrumentador			:= r_c02.nm_instrumentador;	
				end if;	
				if (r_c02.nm_circulante IS NOT NULL AND r_c02.nm_circulante::text <> '') then
					t_objeto_row_w.nm_circulante				:= r_c02.nm_circulante;	
				end if;
				end;
			end loop;
		end if;	
		if (coalesce(t_objeto_row_w.nm_anestesista::text, '') = '') then
			t_objeto_row_w.nm_anestesista := r_c01.nm_anestesistas;
		end if;
		RETURN NEXT t_objeto_row_w;
	END IF;
	END;
END LOOP;


RETURN;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION search_panel_surgery_pck.get_data ( cd_agenda_p bigint, cd_setor_painel_p bigint, cd_setor_internacao_p bigint, cd_turno_p bigint, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;
