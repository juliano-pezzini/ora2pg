-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_gerar_confirmacao_v70 ( nr_seq_execucao_p bigint, cd_estabelecimento_p bigint, ie_tipo_resposta_p text, nr_versao_p text, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a transacao de confirmacao do PTU, via SCS.

ie_tipo_resposta_p
RA	- Resposta de Auditoria
PI	- Pedido de Insistencia
C	- Cancelamento
DP	- Decurso de Prazo
RAI	- Resposta de Auditoria Invalida
CI	- Cancelamento Invalido
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


cd_unimed_exec_w		smallint;
cd_unimed_benef_w		smallint;
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
ie_tipo_cliente_w		varchar(15);
nr_seq_requisicao_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_auditoria_w		bigint;
nr_seq_insistencia_w		bigint;
nr_seq_cancelamento_w		bigint;
qt_registros_w			bigint;
ie_tipo_identificador_w		ptu_confirmacao.ie_tipo_identificador%type;
dt_atualizacao_w		ptu_resposta_autorizacao.dt_atualizacao%type;
nr_seq_pedido_compl_w		ptu_pedido_compl_aut.nr_sequencia%type;
nr_seq_pedido_aut_w		ptu_pedido_autorizacao.nr_sequencia%type;
qt_opme_w			integer;
nr_seq_aut_ordem_w		ptu_autorizacao_ordem_serv.nr_sequencia%type;
nr_seq_comunica_alta_w		ptu_comunicacao_internacao.nr_sequencia%type;
qt_reg_cancel_w			integer	:= 0;
qt_dias_uteis			integer;
ds_observacao_w			varchar(255);
ie_tipo_resposta_w		varchar(2);
qt_compl_diaria_w		bigint;


BEGIN

if (ie_tipo_resposta_p	in ('RA', 'RAI')) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_auditoria_w
	from	ptu_resposta_auditoria
	where	nr_seq_execucao	= nr_seq_execucao_p;

	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_execucao	= nr_seq_execucao_p
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_execucao	= nr_seq_execucao_p
		and	ie_enviado	= 'N';
	end if;

	begin
		select	cd_unimed_executora,
			cd_unimed_beneficiario,
			nr_seq_origem,
			ie_tipo_cliente,
			nr_seq_guia,
			nr_seq_requisicao,
			trim(both substr(ds_observacao,1,255))
		into STRICT	cd_unimed_exec_w,
			cd_unimed_benef_w,
			nr_seq_origem_w,
			ie_tipo_cliente_w,
			nr_seq_guia_w,
			nr_seq_requisicao_w,
			ds_observacao_w
		from	ptu_resposta_auditoria
		where	nr_sequencia	= nr_seq_auditoria_w;
	exception
	when others then
		ds_observacao_w	:= null;
	end;

	nr_seq_execucao_w	:= nr_seq_execucao_p;

	if (coalesce(ds_observacao_w::text, '') = '') or (ie_tipo_resposta_p = 'RAI') then
		ie_tipo_resposta_w 	:= 'RA';
		ie_tipo_identificador_w	:= 3;
	else
		ie_tipo_identificador_w	:= 1;
	end if;

elsif (ie_tipo_resposta_p	= 'PI') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_insistencia_w
	from	ptu_pedido_insistencia
	where	nr_seq_origem	= nr_seq_execucao_p;

	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_origem	= nr_seq_execucao_p
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_origem	= nr_seq_execucao_p
		and	ie_enviado	= 'N';
	end if;

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		nr_seq_execucao,
		ie_tipo_cliente,
		nr_seq_guia,
		nr_seq_requisicao
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		nr_seq_execucao_w,
		ie_tipo_cliente_w,
		nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_insistencia
	where	nr_sequencia	= nr_seq_insistencia_w;

	nr_seq_origem_w		:= nr_seq_execucao_p;

	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')	or (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		ie_tipo_identificador_w	:= 1;
	else
		ie_tipo_identificador_w	:= 2;
	end if;
elsif (ie_tipo_resposta_p	in ('C', 'CI')) then
	if (ie_tipo_resposta_p = 'CI') then
		nr_seq_cancelamento_w := nr_seq_execucao_p;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_cancelamento_w
		from	ptu_cancelamento
		where	nr_seq_origem	= nr_seq_execucao_p;
	end if;

	begin
		select	cd_unimed_executora,
			cd_unimed_beneficiario,
			nr_seq_execucao,
			ie_tipo_cliente,
			nr_seq_guia,
			nr_seq_requisicao
		into STRICT	cd_unimed_exec_w,
			cd_unimed_benef_w,
			nr_seq_execucao_w,
			ie_tipo_cliente_w,
			nr_seq_guia_w,
			nr_seq_requisicao_w
		from	ptu_cancelamento
		where	nr_sequencia	= nr_seq_cancelamento_w;
	exception
	when others then
		qt_reg_cancel_w	:= 0;
	end;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		select	count(1)
		into STRICT	qt_reg_cancel_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_w
		and	ie_estagio	in (3,7);
	elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		select	count(1)
		into STRICT	qt_reg_cancel_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w
		and	ie_status	= '3';
	end if;

	if (qt_reg_cancel_w	= 0) or (ie_tipo_resposta_p = 'CI') then
		if (qt_reg_cancel_w = 0) then
			ie_tipo_identificador_w	:= 2;
		else
			ie_tipo_identificador_w	:= 3;
		end if;
		ie_tipo_resposta_w 	:= 'C';
		nr_seq_origem_w		:= null;
	else
		ie_tipo_identificador_w	:= 1;
		nr_seq_origem_w		:= nr_seq_execucao_p;
	end if;
elsif (ie_tipo_resposta_p	= 'DP') then
	-- Para transacao de decurso de prazo o parametro NR_SEQ_EXECUCAO_P

	-- possui o valor do campo NR_SEQUENCIA da tabela PTU_DECURSO_PRAZO.

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		nr_seq_execucao,
		ie_tipo_cliente,
		nr_seq_guia,
		nr_seq_requisicao,
		nr_seq_origem
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		nr_seq_execucao_w,
		ie_tipo_cliente_w,
		nr_seq_guia_w,
		nr_seq_requisicao_w,
		nr_seq_origem_w
	from	ptu_decurso_prazo
	where	nr_sequencia	= nr_seq_execucao_p;

	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_origem	= nr_seq_origem_w
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_origem	= nr_seq_origem_w
		and	ie_enviado	= 'N';
	end if;

	select	dt_atualizacao
	into STRICT	dt_atualizacao_w
	from	ptu_resposta_autorizacao
	where	nr_seq_execucao		= nr_seq_execucao_w
	and	cd_unimed_executora	= cd_unimed_exec_w;

	if (nr_seq_origem_w IS NOT NULL AND nr_seq_origem_w::text <> '') then
		begin
			select	nr_seq_pedido_compl,
				nr_seq_pedido_aut
			into STRICT	nr_seq_pedido_compl_w,
				nr_seq_pedido_aut_w
			from	ptu_controle_execucao
			where	nr_sequencia	= nr_seq_origem_w;
		exception
		when others then
			nr_seq_pedido_compl_w	:= null;
			nr_seq_pedido_aut_w	:= null;
		end;
	else
		select	nextval('ptu_controle_execucao_seq')
		into STRICT	nr_seq_origem_w
		;

		if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
			begin
				select	nr_sequencia
				into STRICT	nr_seq_pedido_compl_w
				from	ptu_pedido_compl_aut
				where	nr_seq_requisicao = nr_seq_requisicao_w;
			exception
			when others then
				select	nr_sequencia
				into STRICT	nr_seq_pedido_aut_w
				from	ptu_pedido_autorizacao
				where	nr_seq_requisicao = nr_seq_requisicao_w;
			end;
		elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
			begin
				select	nr_sequencia
				into STRICT	nr_seq_pedido_compl_w
				from	ptu_pedido_compl_aut
				where	nr_seq_guia = nr_seq_guia_w;
			exception
			when others then
				select	nr_sequencia
				into STRICT	nr_seq_pedido_aut_w
				from	ptu_pedido_autorizacao
				where	nr_seq_guia = nr_seq_guia_w;
			end;
		end if;
	end if;

	select	pls_obter_dias_uteis_periodo(dt_atualizacao_w, clock_timestamp())
	into STRICT	qt_dias_uteis
	;

	if ((nr_seq_pedido_compl_w IS NOT NULL AND nr_seq_pedido_compl_w::text <> '') and nr_seq_pedido_compl_w <> 0) then
		begin
			select	count(1)
			into STRICT	qt_compl_diaria_w
			from	ptu_pedido_compl_aut_serv a
			where	a.nr_seq_pedido	=	nr_seq_pedido_compl_w
			and	(coalesce(a.nr_seq_req_proc, a.nr_seq_guia_proc) IS NOT NULL AND (coalesce(a.nr_seq_req_proc, a.nr_seq_guia_proc))::text <> '')
			and	1	=	(	SELECT	count(1)
					from	ptu_pedido_compl_aut_serv b
					where	b.nr_seq_pedido	=	nr_seq_pedido_compl_w)
			and	37	=	(	select	max(cd_tipo_procedimento )
							from	procedimento c
							where	c.cd_procedimento	=	a.cd_servico);
		exception
		when others then
			qt_compl_diaria_w := 0;
		end;

		if (qt_compl_diaria_w = 1) then
				ie_tipo_identificador_w	:= 1;
		else
			select	count(1)
			into STRICT	qt_opme_w
			from	ptu_pedido_compl_aut_serv
			where	ie_tipo_tabela	in (2, 5)
			and	(trim(both ds_opme) IS NOT NULL AND (trim(both ds_opme))::text <> '')
			and	nr_seq_pedido		= nr_seq_pedido_compl_w;

			if (qt_opme_w	= 0) and (qt_dias_uteis	<= 2) then
				ie_tipo_identificador_w	:= 3;
			elsif (qt_opme_w	> 0) and (qt_dias_uteis	<= 5) then
				ie_tipo_identificador_w	:= 3;
			else
				ie_tipo_identificador_w	:= 1;
			end if;
		end if;
	elsif ((nr_seq_pedido_aut_w IS NOT NULL AND nr_seq_pedido_aut_w::text <> '') and nr_seq_pedido_aut_w <> 0) then
		select	count(1)
		into STRICT	qt_opme_w
		from	ptu_pedido_aut_servico
		where	ie_tipo_tabela		in (2,5)
		and	(trim(both ds_opme) IS NOT NULL AND (trim(both ds_opme))::text <> '')
		and	nr_seq_pedido		= nr_seq_pedido_aut_w;

		if (qt_opme_w	= 0) and (qt_dias_uteis	<= 2) then
			ie_tipo_identificador_w	:= 3;
		elsif (qt_opme_w	> 0) and (qt_dias_uteis	<= 5) then
			ie_tipo_identificador_w	:= 3;
		else
			ie_tipo_identificador_w	:= 1;
		end if;
	end if;

	if (ie_tipo_identificador_w	= 1) then
		CALL ptu_autorizar_decurso_prazo(nr_seq_guia_w, nr_seq_requisicao_w, nr_seq_origem_w, nm_usuario_p);
	end if;
elsif (ie_tipo_resposta_p	= 'AO') then
	nr_seq_execucao_w	:= nr_seq_execucao_p;

	select	max(nr_sequencia)
	into STRICT	nr_seq_aut_ordem_w
	from	ptu_autorizacao_ordem_serv
	where	nr_seq_execucao	= nr_seq_execucao_w;

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		nr_seq_origem,
		ie_tipo_cliente
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		nr_seq_origem_w,
		ie_tipo_cliente_w
	from	ptu_autorizacao_ordem_serv
	where	nr_sequencia	= nr_seq_aut_ordem_w;

	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_execucao	= nr_seq_execucao_w
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_execucao	= nr_seq_execucao_w
		and	ie_enviado	= 'N';
	end if;

	ie_tipo_identificador_w	:= 1;
elsif (ie_tipo_resposta_p	= 'IA') then

	select	max(nr_sequencia)
	into STRICT	nr_seq_comunica_alta_w
	from	ptu_comunicacao_internacao
	where	nr_sequencia	= nr_seq_execucao_p;

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		ie_tipo_cliente,
		nr_seq_requisicao,
		nr_seq_guia,
		nr_seq_execucao
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		ie_tipo_cliente_w,
		nr_seq_requisicao_w,
		nr_seq_guia_w,
		nr_seq_execucao_w
	from	ptu_comunicacao_internacao
	where	nr_sequencia	= nr_seq_comunica_alta_w;

	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_execucao	= nr_seq_execucao_w
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_execucao	= nr_seq_execucao_w
		and	ie_enviado	= 'N';
	end if;

	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')	or (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		ie_tipo_identificador_w	:= 1;
	else
		ie_tipo_identificador_w	:= 2;
	end if;

	select	max(nr_seq_origem)
	into STRICT	nr_seq_origem_w
	from	ptu_resposta_autorizacao
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	or	nr_seq_guia		= nr_seq_guia_w;

end if;

insert	into ptu_confirmacao(nr_sequencia, cd_transacao, ie_tipo_cliente,
	cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
	dt_atualizacao, nm_usuario, nr_seq_origem,
	nr_seq_requisicao, nr_seq_guia, ie_tipo_identificador,
	ie_tipo_resposta, ie_enviado, nm_usuario_nrec,
	dt_atualizacao_nrec, nr_versao)
values (nextval('ptu_confirmacao_seq'), '00309', ie_tipo_cliente_w,
	cd_unimed_exec_w, cd_unimed_benef_w, nr_seq_execucao_w,
	clock_timestamp(), nm_usuario_p, nr_seq_origem_w,
	nr_seq_requisicao_w, nr_seq_guia_w, ie_tipo_identificador_w,
	coalesce(ie_tipo_resposta_w,ie_tipo_resposta_p), 'N', nm_usuario_p,
	clock_timestamp(), nr_versao_p);
commit;

if (ie_tipo_resposta_p	in ('PI','C','CI','DP','AI')) then
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		CALL pls_guia_gravar_historico(nr_seq_guia_w,2,wheb_mensagem_pck.get_texto(1108626,'CD_UNIMED_BENEF=' || cd_unimed_exec_w)||substr(obter_valor_dominio(3626, ie_tipo_identificador_w),1,255),'',nm_usuario_p);
	elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',wheb_mensagem_pck.get_texto(1108626,'CD_UNIMED_BENEF=' || cd_unimed_exec_w)||substr(obter_valor_dominio(3626, ie_tipo_identificador_w),1,255),null,nm_usuario_p);
	end if;
elsif (ie_tipo_resposta_p	in ('RA','RAI')) then
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		CALL pls_guia_gravar_historico(nr_seq_guia_w,2,wheb_mensagem_pck.get_texto(1108626,'CD_UNIMED_BENEF=' || cd_unimed_benef_w)||substr(obter_valor_dominio(3626, ie_tipo_identificador_w),1,255),'',nm_usuario_p);
	elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',wheb_mensagem_pck.get_texto(1108626,'CD_UNIMED_BENEF=' || cd_unimed_benef_w)||substr(obter_valor_dominio(3626, ie_tipo_identificador_w),1,255),null,nm_usuario_p);
	end if;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_gerar_confirmacao_v70 ( nr_seq_execucao_p bigint, cd_estabelecimento_p bigint, ie_tipo_resposta_p text, nr_versao_p text, nm_usuario_p text) FROM PUBLIC;
