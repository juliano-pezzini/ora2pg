-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--------------------------------------------------------------------------------00806 Ordem de Servico---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_imp_cab_00806_v70 ( cd_transacao_p ptu_requisicao_ordem_serv.cd_transacao%type, ie_tipo_cliente_p ptu_requisicao_ordem_serv.ie_tipo_cliente%type, cd_unimed_benef_p ptu_requisicao_ordem_serv.cd_unimed_beneficiario%type, cd_unimed_exec_p ptu_requisicao_ordem_serv.cd_unimed_executora%type, cd_unimed_solicitante_p ptu_requisicao_ordem_serv.cd_unimed_solicitante%type, nr_ident_exec_p ptu_requisicao_ordem_serv.nr_seq_origem%type, nr_transacao_solicitante_p ptu_requisicao_ordem_serv.nr_transacao_solicitante%type, cd_unimed_p ptu_requisicao_ordem_serv.cd_unimed%type, cd_carteirinha_p ptu_requisicao_ordem_serv.cd_usuario_plano%type, nr_via_cartao_p ptu_requisicao_ordem_serv.nr_via_cartao%type, nm_beneficiario_p ptu_requisicao_ordem_serv.nm_benficiario%type, cd_cid_p ptu_requisicao_ordem_serv.cd_doenca_cid%type, cd_unimed_prestador_req_p ptu_requisicao_ordem_serv.cd_unimed_prestador_req%type, nr_seq_prestador_req_p ptu_requisicao_ordem_serv.nr_seq_prestador_req%type, cd_unimed_prestador_p ptu_requisicao_ordem_serv.cd_unimed_prestador%type, nr_seq_prestador_p ptu_requisicao_ordem_serv.nr_seq_prestador%type, cd_especialidade_medica_p ptu_requisicao_ordem_serv.cd_especialidade%type, ie_urgencia_emergencia_p ptu_requisicao_ordem_serv.ie_urg_emerg%type, dt_suge_internacao_p text, dt_validade_p text, ie_rn_p ptu_requisicao_ordem_serv.ie_recem_nascido%type, ie_anexo_p ptu_requisicao_ordem_serv.ie_anexo%type, ie_sexo_p ptu_requisicao_ordem_serv.ie_sexo%type, nr_idade_p ptu_requisicao_ordem_serv.nr_idade%type, nm_prestador_p ptu_requisicao_ordem_serv.nm_prestador%type, sg_conselho_profissional_p ptu_requisicao_ordem_serv.sg_conselho_profissional%type, nr_conselho_profissional_p ptu_requisicao_ordem_serv.nr_conselho_profissional%type, uf_conselho_profissional_p ptu_requisicao_ordem_serv.uf_conselho_profissional%type, nr_versao_p ptu_requisicao_ordem_serv.nr_versao%type, ds_observacao_p ptu_requisicao_ordem_serv.ds_observacao%type, ds_ind_clinica_p ptu_requisicao_ordem_serv.ds_ind_clinica%type, ie_liminar_p ptu_requisicao_ordem_serv.ie_liminar%type, cd_ibge_p ptu_requisicao_ordem_serv.cd_municipio_ibge%type, ie_acidente_p ptu_requisicao_ordem_serv.ie_tipo_acidente%type, nr_versao_tiss_p ptu_requisicao_ordem_serv.nr_versao_tiss%type, ie_tipo_guia_p ptu_requisicao_ordem_serv.ie_tipo_guia%type, cd_cbo_prest_solic_p ptu_requisicao_ordem_serv.cd_cbo_prest_solic%type, cd_cbo_prest_exec_p ptu_requisicao_ordem_serv.cd_cbo_prest_exec%type, ie_cobertura_especial_p ptu_requisicao_ordem_serv.ie_cobertura_especial%type, nm_social_p ptu_requisicao_ordem_serv.nm_social%type, nm_usuario_p usuario.nm_usuario%type, ie_tipo_internacao_p ptu_requisicao_ordem_serv.ie_tipo_internacao%type, ie_possui_registro_p INOUT text, nr_seq_ordem_serv_p INOUT ptu_requisicao_ordem_serv.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar a importacao do arquivo de 00806 - Pedido Ordem de Servico
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ x] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ x] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */



ie_tipo_cliente_w		ptu_requisicao_ordem_serv.ie_tipo_cliente%type;
nr_seq_req_ordem_serv_w		ptu_requisicao_ordem_serv.nr_sequencia%type;
dt_suge_internacao_w		ptu_requisicao_ordem_serv.dt_prov_atendimento%type;
dt_validade_w			ptu_requisicao_ordem_serv.dt_validade%type;
cd_usuario_plano_w		pls_segurado_carteira.cd_usuario_plano%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
cd_medico_solic_w		pls_prestador.cd_pessoa_fisica%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_tipo_guia_w			ptu_requisicao_ordem_serv.ie_tipo_guia%type := ptu_obter_dados_pedido(null,null,1,ie_tipo_guia_p,'','');
sg_conselho_profissional_w	conselho_profissional.nr_sequencia%type;

BEGIN
-- Se a operadora de origem do beneficiario for igual a operadora solicitante da ordem de servico, e caracterizada uma transacao ponto-a-ponto

if (cd_unimed_solicitante_p	= cd_unimed_benef_p) then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_req_ordem_serv_w
		from	ptu_requisicao_ordem_serv
		where	nr_transacao_solicitante	= nr_transacao_solicitante_p
		and	cd_unimed_beneficiario		= cd_unimed_benef_p;
	exception
	when others then
		nr_seq_req_ordem_serv_w	:= null;
	end;

-- Se a operadora de origem do beneficiario for diferente da operadora solicitante da ordem de servico, e caracterizada uma Triangulacao

elsif (cd_unimed_solicitante_p	<> cd_unimed_benef_p) then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_req_ordem_serv_w
		from	ptu_requisicao_ordem_serv
		where	nr_transacao_solicitante	= nr_transacao_solicitante_p
		and	cd_unimed_solicitante		= cd_unimed_solicitante_p;
	exception
	when others then
		nr_seq_req_ordem_serv_w	:= null;
	end;
end if;

ie_possui_registro_p := 'S';
if (nr_seq_req_ordem_serv_w IS NOT NULL AND nr_seq_req_ordem_serv_w::text <> '') then
	goto final;
end if;
ie_possui_registro_p := 'N';

if (dt_suge_internacao_p IS NOT NULL AND dt_suge_internacao_p::text <> '') then
	dt_suge_internacao_w	:= to_date(dt_suge_internacao_p, 'dd/mm/yyyy hh24:mi:ss');
end if;

if (dt_validade_p IS NOT NULL AND dt_validade_p::text <> '') then
	dt_validade_w		:= to_date(dt_validade_p, 'dd/mm/yyyy');
end if;

--Verifica qual o estabelecimento padrao utilizado no SCS

select	coalesce(max(cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	pls_parametros_scs
where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

select	nextval('ptu_requisicao_ordem_serv_seq')
into STRICT	nr_seq_req_ordem_serv_w
;

cd_usuario_plano_w	:= lpad(cd_unimed_p,4,'0') || lpad(cd_carteirinha_p,13,'0');

select	max(b.nr_sequencia),
	max(b.nr_seq_plano)
into STRICT	nr_seq_segurado_w,
	nr_seq_plano_w
from    pls_segurado_carteira a,
	pls_segurado b
where   a.nr_cartao_intercambio	= cd_usuario_plano_w
and     a.nr_seq_segurado	= b.nr_sequencia
and	coalesce(b.dt_rescisao::text, '') = ''
and	coalesce(b.dt_cancelamento::text, '') = '';

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(b.nr_sequencia),
		max(b.nr_seq_plano)
	into STRICT	nr_seq_segurado_w,
		nr_seq_plano_w
	from    pls_segurado_carteira a,
		pls_segurado b
	where   a.cd_usuario_plano	= cd_usuario_plano_w
	and     a.nr_seq_segurado	= b.nr_sequencia
	and	coalesce(b.dt_rescisao::text, '') = ''
	and	coalesce(b.dt_cancelamento::text, '') = '';

	if (coalesce(nr_seq_segurado_w::text, '') = '') then
		ptu_gerar_novo_beneficiario(	nm_beneficiario_p, cd_unimed_benef_p, cd_usuario_plano_w,
					cd_unimed_exec_p, dt_validade_w, cd_estabelecimento_w,
					nm_usuario_p, nr_via_cartao_p, nr_seq_segurado_w);
	end if;
end if;

begin
	select	cd_pessoa_fisica
	into STRICT	cd_medico_solic_w
	from    pls_prestador
	where   nr_sequencia	=  nr_seq_prestador_req_p;
exception
when others then
	cd_medico_solic_w	:= '';
end;

select	max(nr_sequencia)
into STRICT	sg_conselho_profissional_w
from	conselho_profissional
where	cd_ptu = sg_conselho_profissional_p;

if (coalesce(sg_conselho_profissional_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	sg_conselho_profissional_w
	from	conselho_profissional
	where	sg_conselho = sg_conselho_profissional_p;
end if;

-- Validacao e necessario converter os dados para  somente uma letra

ie_tipo_cliente_w := ptu_converter_tipo_cliente(ie_tipo_cliente_p);

insert	into ptu_requisicao_ordem_serv(nr_sequencia, cd_transacao, ie_tipo_cliente,
	cd_unimed_executora, cd_unimed_beneficiario, cd_unimed,
	cd_usuario_plano, nr_via_cartao, nr_seq_origem,
	dt_atualizacao, nm_usuario, ie_urg_emerg,
	dt_validade, nm_benficiario, dt_prov_atendimento,
	cd_doenca_cid, cd_unimed_prestador_req, nr_seq_prestador_req,
	cd_unimed_prestador, nr_seq_prestador, cd_especialidade,
	nr_seq_guia, nr_transacao_solicitante,
	cd_unimed_solicitante, nm_prestador, sg_conselho_profissional,
	nr_conselho_profissional, uf_conselho_profissional, nr_seq_requisicao,
	cd_unimed_carteira, nm_usuario_nrec, dt_atualizacao_nrec,
	nr_versao, nr_seq_segurado, ds_observacao,
	ds_ind_clinica, ie_recem_nascido, ie_anexo,
	ie_sexo, nr_idade, ie_liminar,
	cd_municipio_ibge, ie_tipo_acidente, nr_versao_tiss,
	ie_tipo_guia, cd_cbo_prest_solic, cd_cbo_prest_exec,
	ie_cobertura_especial, nm_social, ie_tipo_internacao)
values (nr_seq_req_ordem_serv_w, cd_transacao_p, ie_tipo_cliente_w,
	(cd_unimed_exec_p)::numeric , cd_unimed_benef_p, cd_unimed_p,
	lpad(cd_carteirinha_p,13,'0'), nr_via_cartao_p, nr_ident_exec_p,
	clock_timestamp(), nm_usuario_p, ie_urgencia_emergencia_p,
	coalesce(dt_validade_w,clock_timestamp()), nm_beneficiario_p, dt_suge_internacao_w,
	cd_cid_p, cd_unimed_prestador_req_p, nr_seq_prestador_req_p,
	cd_unimed_prestador_p, nr_seq_prestador_p, cd_especialidade_medica_p,
	null, nr_transacao_solicitante_p,
	cd_unimed_solicitante_p, nm_prestador_p, sg_conselho_profissional_w,
	nr_conselho_profissional_p, uf_conselho_profissional_p, null,
	cd_unimed_p, nm_usuario_p, clock_timestamp(),
	nr_versao_p, nr_seq_segurado_w, ds_observacao_p,
	ds_ind_clinica_p, ie_rn_p, ie_anexo_p,
	CASE WHEN ie_sexo_p=1 THEN  'M'  ELSE 'F' END , nr_idade_p, ie_liminar_p,
	cd_ibge_p, ie_acidente_p, nr_versao_tiss_p,
	ie_tipo_guia_w,	cd_cbo_prest_solic_p, cd_cbo_prest_exec_p,
	ie_cobertura_especial_p, nm_social_p, ie_tipo_internacao_p) returning nr_sequencia into nr_seq_ordem_serv_p;

insert	into ptu_controle_execucao(nr_sequencia, dt_atualizacao, nm_usuario,
	nr_seq_pedido_compl, nr_seq_pedido_aut, nm_usuario_nrec,
	dt_atualizacao_nrec, nr_seq_ordem_serv)
values (nextval('ptu_controle_execucao_seq'), clock_timestamp(), nm_usuario_p,
	null, null, nm_usuario_p,
	clock_timestamp(), nr_seq_req_ordem_serv_w);

commit;

<<final>>
if (coalesce(nr_seq_ordem_serv_p::text, '') = '') then
	nr_seq_ordem_serv_p	:= nr_seq_req_ordem_serv_w;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_imp_cab_00806_v70 ( cd_transacao_p ptu_requisicao_ordem_serv.cd_transacao%type, ie_tipo_cliente_p ptu_requisicao_ordem_serv.ie_tipo_cliente%type, cd_unimed_benef_p ptu_requisicao_ordem_serv.cd_unimed_beneficiario%type, cd_unimed_exec_p ptu_requisicao_ordem_serv.cd_unimed_executora%type, cd_unimed_solicitante_p ptu_requisicao_ordem_serv.cd_unimed_solicitante%type, nr_ident_exec_p ptu_requisicao_ordem_serv.nr_seq_origem%type, nr_transacao_solicitante_p ptu_requisicao_ordem_serv.nr_transacao_solicitante%type, cd_unimed_p ptu_requisicao_ordem_serv.cd_unimed%type, cd_carteirinha_p ptu_requisicao_ordem_serv.cd_usuario_plano%type, nr_via_cartao_p ptu_requisicao_ordem_serv.nr_via_cartao%type, nm_beneficiario_p ptu_requisicao_ordem_serv.nm_benficiario%type, cd_cid_p ptu_requisicao_ordem_serv.cd_doenca_cid%type, cd_unimed_prestador_req_p ptu_requisicao_ordem_serv.cd_unimed_prestador_req%type, nr_seq_prestador_req_p ptu_requisicao_ordem_serv.nr_seq_prestador_req%type, cd_unimed_prestador_p ptu_requisicao_ordem_serv.cd_unimed_prestador%type, nr_seq_prestador_p ptu_requisicao_ordem_serv.nr_seq_prestador%type, cd_especialidade_medica_p ptu_requisicao_ordem_serv.cd_especialidade%type, ie_urgencia_emergencia_p ptu_requisicao_ordem_serv.ie_urg_emerg%type, dt_suge_internacao_p text, dt_validade_p text, ie_rn_p ptu_requisicao_ordem_serv.ie_recem_nascido%type, ie_anexo_p ptu_requisicao_ordem_serv.ie_anexo%type, ie_sexo_p ptu_requisicao_ordem_serv.ie_sexo%type, nr_idade_p ptu_requisicao_ordem_serv.nr_idade%type, nm_prestador_p ptu_requisicao_ordem_serv.nm_prestador%type, sg_conselho_profissional_p ptu_requisicao_ordem_serv.sg_conselho_profissional%type, nr_conselho_profissional_p ptu_requisicao_ordem_serv.nr_conselho_profissional%type, uf_conselho_profissional_p ptu_requisicao_ordem_serv.uf_conselho_profissional%type, nr_versao_p ptu_requisicao_ordem_serv.nr_versao%type, ds_observacao_p ptu_requisicao_ordem_serv.ds_observacao%type, ds_ind_clinica_p ptu_requisicao_ordem_serv.ds_ind_clinica%type, ie_liminar_p ptu_requisicao_ordem_serv.ie_liminar%type, cd_ibge_p ptu_requisicao_ordem_serv.cd_municipio_ibge%type, ie_acidente_p ptu_requisicao_ordem_serv.ie_tipo_acidente%type, nr_versao_tiss_p ptu_requisicao_ordem_serv.nr_versao_tiss%type, ie_tipo_guia_p ptu_requisicao_ordem_serv.ie_tipo_guia%type, cd_cbo_prest_solic_p ptu_requisicao_ordem_serv.cd_cbo_prest_solic%type, cd_cbo_prest_exec_p ptu_requisicao_ordem_serv.cd_cbo_prest_exec%type, ie_cobertura_especial_p ptu_requisicao_ordem_serv.ie_cobertura_especial%type, nm_social_p ptu_requisicao_ordem_serv.nm_social%type, nm_usuario_p usuario.nm_usuario%type, ie_tipo_internacao_p ptu_requisicao_ordem_serv.ie_tipo_internacao%type, ie_possui_registro_p INOUT text, nr_seq_ordem_serv_p INOUT ptu_requisicao_ordem_serv.nr_sequencia%type) FROM PUBLIC;
