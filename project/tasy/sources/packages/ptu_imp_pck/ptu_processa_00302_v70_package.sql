-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_processa_00302_v70 ( nr_seq_pedido_insistencia_p ptu_pedido_insistencia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_conf_ped_insis_p INOUT ptu_confirmacao.nr_sequencia%type) AS $body$
DECLARE


cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_origem_w			ptu_pedido_insistencia.nr_seq_origem%type;
nr_seq_pedido_compl_w		ptu_pedido_compl_aut.nr_sequencia%type;
nr_seq_pedido_aut_w		ptu_pedido_autorizacao.nr_sequencia%type;

C01 CURSOR( nr_seq_pedido_insistencia_pc  ptu_pedido_insistencia.nr_sequencia%type) FOR
	SELECT	a.nr_seq_origem,
		a.cd_unimed_executora,
		a.ds_mensagem,
		a.nr_seq_execucao,
		(SELECT	max(b.nr_seq_pedido_aut)
		from	ptu_controle_execucao b
		where	b.nr_sequencia	= a.nr_seq_origem) nr_seq_pedido_aut,
		(select	max(b.nr_seq_pedido_compl)
		from	ptu_controle_execucao b
		where	b.nr_sequencia	= a.nr_seq_origem) nr_seq_pedido_compl
	from	ptu_pedido_insistencia a
	where	a.nr_sequencia = nr_seq_pedido_insistencia_pc;

BEGIN

cd_estabelecimento_w := cd_estabelecimento_p;

--Quando as transacoes sao geradas pelo WebService, nao existe estabelecimento definido, entao e verificado o estabeleicmento do parametro

if ( coalesce(cd_estabelecimento_w::text, '') = ''	) then
	cd_estabelecimento_w := ptu_obter_estab_padrao;
end if;


--Carrega os dados do Pedido de Insistencia

for c01_w in C01( nr_seq_pedido_insistencia_p ) loop

	nr_seq_origem_w 	:= c01_w.nr_seq_origem;
	nr_seq_pedido_compl_w	:= c01_w.nr_seq_pedido_compl;
	nr_seq_pedido_aut_w	:= c01_w.nr_seq_pedido_aut;

	--Se nao encontrar o pedido de autorizacao ou de complemento pelo NR_SEQ_ORIGEM e necessario buscar pela sequencia da execucao gerada e da unimed executora

	--Este tratamento e necessario porque o campo NR_SEQ_ORIGEM nao e obrigatorio pelo PTU e o Pedido pode vim ser este campo informado

	if (  coalesce(nr_seq_pedido_aut_w::text, '') = '' and coalesce(nr_seq_pedido_compl_w::text, '') = '' ) then
		select	max(nr_seq_origem)
		into STRICT	nr_seq_origem_w
		from	ptu_resposta_autorizacao
		where	nr_seq_execucao		= c01_w.nr_seq_execucao
		and	cd_unimed_executora	= c01_w.cd_unimed_executora;

		begin
			select	nr_seq_pedido_compl,
				nr_seq_pedido_aut
			into STRICT	nr_seq_pedido_compl_w,
				nr_seq_pedido_aut_w
			from	ptu_controle_execucao
			where	nr_sequencia	= nr_seq_origem_w;
		exception
		when others then
			nr_seq_pedido_compl_w := null;
			nr_seq_pedido_aut_w := null;
		end;
	end if;

	--Se o Pedido de Insistencia for para um Pedido de Complemento de Autorizacao exsistente

	--Sempre deve ser verificar primeiramente o complemento, pois ele e o ultimo pedido recebido na Operadora, se existe um complemento e porque ja existe uma guia autorizada

	if (nr_seq_pedido_compl_w IS NOT NULL AND nr_seq_pedido_compl_w::text <> '') then
		select	nr_seq_guia,
			nr_seq_requisicao
		into STRICT	nr_seq_guia_w,
			nr_seq_requisicao_w
		from	ptu_pedido_compl_aut
		where	nr_sequencia	= nr_seq_pedido_compl_w;

	--Se o Pedido de Insistencia for para um Pedido de Autorizacao exsistente

	elsif (nr_seq_pedido_aut_w IS NOT NULL AND nr_seq_pedido_aut_w::text <> '') then
		select	nr_seq_guia,
			nr_seq_requisicao
		into STRICT	nr_seq_guia_w,
			nr_seq_requisicao_w
		from	ptu_pedido_autorizacao
		where	nr_sequencia	= nr_seq_pedido_aut_w;

	--Caso nao encontre informacoes sera gerada uma transacao inexistente na base

	else
		nr_seq_guia_w		:= null;
		nr_seq_requisicao_w	:= null;

		-- Se for enviado referenciando uma transacao que nao exista, sera respondido como guia inexistente

		select	nextval('ptu_controle_execucao_seq')
		into STRICT	nr_seq_origem_w
		;
	end if;

	--So sera gerada auditoria se existir uma Guia ou uma Requisicao, para aplicar a insistencia

	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		CALL ptu_gerar_auditoria_guia(nr_seq_guia_w, null, cd_estabelecimento_w, nm_usuario_p);
		CALL pls_gerar_auditoria_guia(nr_seq_guia_w, nm_usuario_p);
		CALL ptu_gerar_grupo_aud_padrao(nr_seq_guia_w, null, 'GA', nm_usuario_p);
		CALL pls_guia_gravar_historico(nr_seq_guia_w,2,substr(wheb_mensagem_pck.get_texto(1108618,'CD_UNIMED_EXECUTORA=' || c01_w.cd_unimed_executora)||chr(10)||c01_w.ds_mensagem,1,4000),'',nm_usuario_p);
	elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		CALL ptu_gerar_auditoria_req(nr_seq_requisicao_w, null, cd_estabelecimento_w, nm_usuario_p);
		CALL pls_gerar_auditoria_requisicao(nr_seq_requisicao_w, nm_usuario_p, 'AI');
		CALL ptu_gerar_grupo_aud_padrao(null, nr_seq_requisicao_w, 'GA', nm_usuario_p);
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',substr(wheb_mensagem_pck.get_texto(1108618,'CD_UNIMED_EXECUTORA=' || c01_w.cd_unimed_executora)||chr(10)||c01_w.ds_mensagem,1,4000),null,nm_usuario_p);
	end if;
end loop;

--Atualiza as informacoes da Guia, Requisicao e a Origem do pedido

update 	ptu_pedido_insistencia
set	nr_seq_origem		= nr_seq_origem_w,
	nr_seq_guia		= nr_seq_guia_w,
	nr_seq_requisicao	= nr_seq_requisicao_w,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	nr_sequencia		= nr_seq_pedido_insistencia_p;

commit;

--Gera transacao de Confirmacao para o Pedido de Insistencia recebido

CALL ptu_imp_pck.ptu_gerar_confirmacao_v70(nr_seq_origem_w, cd_estabelecimento_w, 'PI', pls_obter_versao_scs, nm_usuario_p);

select  max(a.nr_sequencia)
into STRICT 	nr_seq_conf_ped_insis_p
from	ptu_confirmacao a
where	a.nr_seq_origem = nr_seq_origem_w;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_processa_00302_v70 ( nr_seq_pedido_insistencia_p ptu_pedido_insistencia.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_conf_ped_insis_p INOUT ptu_confirmacao.nr_sequencia%type) FROM PUBLIC;
