-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


--------------------------------------------------------------------------------00501 Resposta de Pedido de Autorizacao----------------------------------------------------------------------------------------------------------------------------------------------------------------



CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_imp_cab_00501_v70 ( cd_transacao_p ptu_resposta_autorizacao.cd_transacao%type, ie_tipo_cliente_p ptu_resposta_autorizacao.ie_tipo_cliente%type, cd_unimed_exec_p ptu_resposta_autorizacao.cd_unimed_executora%type, cd_unimed_benef_p ptu_resposta_autorizacao.cd_unimed_beneficiario%type, nr_seq_execucao_p text, nr_seq_origem_p text, cd_unimed_p ptu_resposta_autorizacao.cd_unimed%type, cd_usuario_plano_p ptu_resposta_autorizacao.cd_usuario_plano%type, nm_beneficiario_p ptu_resposta_autorizacao.nm_beneficiario%type, dt_validade_p text, ie_tipo_autorizacao_p ptu_resposta_autorizacao.ie_tipo_autorizacao%type, ie_tipo_acomodacao_p ptu_resposta_autorizacao.ie_tipo_acomodacao%type, nr_versao_p ptu_resposta_autorizacao.nr_versao%type, ie_sexo_p ptu_resposta_autorizacao.ie_sexo%type, dt_nascimento_p text, ds_observacao_p ptu_resposta_autorizacao.ds_observacao%type, nm_social_p ptu_resposta_autorizacao.nm_social%type, qt_idade_benef_p ptu_resposta_autorizacao.qt_idade_benef%type, ie_complementar_1_p ptu_resposta_autorizacao.ie_complementar_1%type, ie_complementar_2_p ptu_resposta_autorizacao.ie_complementar_2%type, ie_complementar_3_p ptu_resposta_autorizacao.ie_complementar_3%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_resp_autorizacao_p INOUT ptu_resposta_autorizacao.nr_sequencia%type) AS $body$
DECLARE


dt_validade_w			ptu_resposta_autorizacao.dt_validade%type;
dt_nascimento_w			ptu_resposta_autorizacao.dt_nasc_beneficiario%type;
nr_seq_pedido_compl_w		ptu_controle_execucao.nr_seq_pedido_compl%type;
nr_seq_pedido_aut_w		ptu_controle_execucao.nr_seq_pedido_aut%type;
nr_seq_guia_w			ptu_pedido_compl_aut.nr_seq_guia%type;
nr_seq_requisicao_w		ptu_pedido_compl_aut.nr_seq_requisicao%type;
ds_observacao_w			ptu_resposta_autorizacao.ds_observacao%type;
ie_tipo_resposta_w		ptu_resposta_autorizacao.ie_tipo_resposta%type;
ie_tipo_cliente_w		ptu_resposta_autorizacao.ie_tipo_cliente%type;
nm_beneficiario_w		varchar(255);
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;


BEGIN

if (coalesce(dt_validade_p,'X')	<> 'X') then
	begin
		dt_validade_w	:= to_date(dt_validade_p, 'dd/mm/rrrr');
	exception
	when others then
		dt_validade_w	:= clock_timestamp();
	end;
end if;

if (coalesce(dt_nascimento_p,'X')	<> 'X') then
	begin
		dt_nascimento_w	:= to_date(dt_validade_p, 'dd/mm/rrrr');
	exception
	when others then
		dt_nascimento_w	:= null;
	end;
end if;

select	coalesce(nr_seq_pedido_compl,0),
	coalesce(nr_seq_pedido_aut,0)
into STRICT	nr_seq_pedido_compl_w,
	nr_seq_pedido_aut_w
from	ptu_controle_execucao
where	nr_sequencia	= nr_seq_execucao_p;

if (nr_seq_pedido_compl_w	<> 0) then
	select	nr_seq_guia,
		nr_seq_requisicao
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_compl_aut
	where	nr_sequencia	= nr_seq_pedido_compl_w;

	ie_tipo_resposta_w	:= 'PC';
elsif (nr_seq_pedido_aut_w	<> 0) then
	select	nr_seq_guia,
		nr_seq_requisicao
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_autorizacao
	where	nr_sequencia	= nr_seq_pedido_aut_w;

	ie_tipo_resposta_w	:= 'PA';
end if;

-- Validacao e necessario converter os dados para  somente uma letra

ie_tipo_cliente_w := ptu_converter_tipo_cliente(ie_tipo_cliente_p);

ds_observacao_w := trim(both substr(ds_observacao_p,1,255));

if (coalesce(nm_beneficiario_p::text, '') = '') or (nm_beneficiario_p = '') then

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		select	nr_seq_segurado
		into STRICT	nr_seq_segurado_w
		from	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_w;
	elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		select	nr_seq_segurado
		into STRICT	nr_seq_segurado_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w;
	end if;

	nm_beneficiario_w := substr(pls_obter_dados_segurado( nr_seq_segurado_w ,'N'),1,255);

	if (nm_beneficiario_w = '') then
		nm_beneficiario_w	:= expressao_pck.obter_desc_expressao(620578);
	end if;
else
	nm_beneficiario_w := nm_beneficiario_p;
end if;

insert	into ptu_resposta_autorizacao(nr_sequencia, cd_unimed_executora, cd_unimed_beneficiario,
	nr_seq_execucao, nr_seq_requisicao, cd_unimed,
	cd_usuario_plano, nm_beneficiario, dt_atualizacao,
	nm_usuario, dt_validade, ie_tipo_cliente,
	nr_seq_origem, nr_seq_guia, cd_transacao,
	ie_tipo_resposta, ie_tipo_autorizacao, ie_tipo_acomodacao,
	nm_usuario_nrec, dt_atualizacao_nrec, nr_versao,
	ie_sexo, dt_nasc_beneficiario, ds_observacao,
	nm_social, qt_idade_benef, ie_complementar_1,
	ie_complementar_2, ie_complementar_3)
values (nextval('ptu_resposta_autorizacao_seq'), cd_unimed_exec_p, cd_unimed_benef_p,
	coalesce((nr_seq_execucao_p)::numeric ,0), nr_seq_requisicao_w, cd_unimed_p,
	cd_usuario_plano_p, nm_beneficiario_w, clock_timestamp(),
	nm_usuario_p, dt_validade_w, ie_tipo_cliente_w,
	coalesce((nr_seq_origem_p)::numeric ,0), nr_seq_guia_w, cd_transacao_p,
	ie_tipo_resposta_w, ie_tipo_autorizacao_p ,ie_tipo_acomodacao_p,
	nm_usuario_p, clock_timestamp(), nr_versao_p,
	ie_sexo_p, dt_nascimento_w,ds_observacao_w,
	nm_social_p, qt_idade_benef_p, ie_complementar_1_p,
	ie_complementar_2_p, ie_complementar_3_p) returning nr_sequencia into nr_seq_resp_autorizacao_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_imp_cab_00501_v70 ( cd_transacao_p ptu_resposta_autorizacao.cd_transacao%type, ie_tipo_cliente_p ptu_resposta_autorizacao.ie_tipo_cliente%type, cd_unimed_exec_p ptu_resposta_autorizacao.cd_unimed_executora%type, cd_unimed_benef_p ptu_resposta_autorizacao.cd_unimed_beneficiario%type, nr_seq_execucao_p text, nr_seq_origem_p text, cd_unimed_p ptu_resposta_autorizacao.cd_unimed%type, cd_usuario_plano_p ptu_resposta_autorizacao.cd_usuario_plano%type, nm_beneficiario_p ptu_resposta_autorizacao.nm_beneficiario%type, dt_validade_p text, ie_tipo_autorizacao_p ptu_resposta_autorizacao.ie_tipo_autorizacao%type, ie_tipo_acomodacao_p ptu_resposta_autorizacao.ie_tipo_acomodacao%type, nr_versao_p ptu_resposta_autorizacao.nr_versao%type, ie_sexo_p ptu_resposta_autorizacao.ie_sexo%type, dt_nascimento_p text, ds_observacao_p ptu_resposta_autorizacao.ds_observacao%type, nm_social_p ptu_resposta_autorizacao.nm_social%type, qt_idade_benef_p ptu_resposta_autorizacao.qt_idade_benef%type, ie_complementar_1_p ptu_resposta_autorizacao.ie_complementar_1%type, ie_complementar_2_p ptu_resposta_autorizacao.ie_complementar_2%type, ie_complementar_3_p ptu_resposta_autorizacao.ie_complementar_3%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_resp_autorizacao_p INOUT ptu_resposta_autorizacao.nr_sequencia%type) FROM PUBLIC;
