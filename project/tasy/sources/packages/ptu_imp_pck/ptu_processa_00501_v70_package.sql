-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_processa_00501_v70 ( nr_seq_resp_autorizacao_p ptu_resposta_autorizacao.nr_sequencia%type, nr_seq_execucao_p ptu_resposta_autorizacao.nr_seq_execucao%type, dt_validade_p text, cd_unimed_benef_p ptu_resposta_autorizacao.cd_unimed_beneficiario%type, ds_observacao_p ptu_resposta_autorizacao.ds_observacao%type, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pedido_compl_w		ptu_controle_execucao.nr_seq_pedido_compl%type;
ie_autorizado_w			ptu_resposta_aut_servico.ie_autorizado%type;
nr_seq_pedido_aut_w		ptu_controle_execucao.nr_seq_pedido_aut%type;
nr_seq_guia_w			ptu_pedido_compl_aut.nr_seq_guia%type;
nr_seq_requisicao_w		ptu_pedido_compl_aut.nr_seq_requisicao%type;
qt_registros_w			integer;
qt_registros_ww			integer;
qt_reg_neg_w			integer;
qt_reg_neg_ww			integer;
qt_reg_aprov_w			integer;
qt_reg_aprov_ww			integer;
cd_senha_w			pls_guia_plano.cd_senha%type;
nr_seq_ordem_w			ptu_pedido_autorizacao.nr_seq_ordem%type;
nr_seq_ordem_ser_w		ptu_requisicao_ordem_serv.nr_sequencia%type;
cd_unimed_beneficiario_w	ptu_requisicao_ordem_serv.cd_unimed_beneficiario%type;
cd_unimed_solicitante_w		ptu_requisicao_ordem_serv.cd_unimed_solicitante%type;
ie_gerar_senha_interna_w	pls_param_intercambio_scs.ie_gerar_senha_interna%type;
dt_validade_senha_w		pls_guia_plano.dt_validade_senha%type;
dt_validade_w		ptu_resposta_autorizacao.dt_validade%type;
nr_seq_origem_w			ptu_resposta_autorizacao.nr_seq_origem%type;
ds_observacao_w			ptu_resposta_autorizacao.ds_observacao%type;
ie_controle_estab_w	varchar(2);
ie_origem_solic_w		pls_requisicao.ie_origem_solic%type;
nr_seq_atend_pls_w		bigint;
nr_seq_evento_atend_w		bigint;
dt_fim_evento_w			timestamp;
ie_estagio_w			bigint;
nr_seq_segurado_w 		pls_requisicao.nr_seq_segurado%type;
dt_requisicao_w			pls_requisicao.dt_requisicao%type;
ie_tipo_guia_w			pls_requisicao.ie_tipo_guia%type;
dt_solicitacao_w		pls_guia_plano.dt_solicitacao%type;


BEGIN
select	pls_obter_se_controle_estab('RE')
into STRICT	ie_controle_estab_w
;

ds_observacao_w := trim(both substr(ds_observacao_p,1,255));
-- Verificar o parametro na funcao OPS - Gestao de Operadoras / Parametros OPS / Intercambio / Intercambio SCS

begin
	select	ie_gerar_senha_interna
	into STRICT	ie_gerar_senha_interna_w
	from	pls_param_intercambio_scs;
exception
when others then
	ie_gerar_senha_interna_w	:= null;
end;

select	coalesce(nr_seq_pedido_compl,0),
	coalesce(nr_seq_pedido_aut,0)
into STRICT	nr_seq_pedido_compl_w,
	nr_seq_pedido_aut_w
from	ptu_controle_execucao
where	nr_sequencia	= nr_seq_execucao_p;

select	nr_seq_origem
into STRICT	nr_seq_origem_w
from	ptu_resposta_autorizacao
where	nr_sequencia	= nr_seq_resp_autorizacao_p;

if (coalesce(dt_validade_p,'X')	<> 'X') then
	begin
		dt_validade_w	:= to_date(dt_validade_p, 'dd/mm/rrrr');
	exception
	when others then
		dt_validade_w	:= clock_timestamp();
	end;
end if;

if (nr_seq_pedido_compl_w	<> 0) then
	select	nr_seq_guia,
		nr_seq_requisicao
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_compl_aut
	where	nr_sequencia	= nr_seq_pedido_compl_w;
elsif (nr_seq_pedido_aut_w	<> 0) then
	select	nr_seq_guia,
		nr_seq_requisicao
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_autorizacao
	where	nr_sequencia	= nr_seq_pedido_aut_w;
end if;

if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then

	--Tratamento para atualizar a guia e a requisicao geradas pelo processo de WebService(Eletronico(XML))

	select	coalesce(ie_origem_solic, 'M')
	into STRICT	ie_origem_solic_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_w;

	if (ie_origem_solic_w = 'E') then
		select	max(a.nr_seq_guia)
		into STRICT	nr_seq_guia_w
		from	pls_requisicao c,
			pls_execucao_requisicao a
		where	a.nr_seq_requisicao	= c.nr_sequencia
		and	c.nr_sequencia		= nr_seq_requisicao_w;
	end if;

	select	count(1)
	into STRICT	qt_registros_w
	from	pls_requisicao_proc
	where	ie_status	= 'A'
	and	nr_seq_requisicao	= nr_seq_requisicao_w;

	select	count(1)
	into STRICT	qt_registros_ww
	from	pls_requisicao_mat
	where	ie_status	= 'A'
	and	nr_seq_requisicao	= nr_seq_requisicao_w;

	if	((qt_registros_w > 0) or (qt_registros_ww > 0)) then
		update	pls_requisicao
		set	ie_estagio	= 5,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_requisicao_w;

		if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
			update	pls_guia_plano
			set	ie_estagio	= 11,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_guia_w;
		end if;

		CALL pls_gerar_auditoria_requisicao(nr_seq_requisicao_w, nm_usuario_p,'AE');
		CALL ptu_gerar_grupo_aud_padrao(null,nr_seq_requisicao_w,'GC',nm_usuario_p);
	elsif (qt_registros_w = 0) and (qt_registros_ww = 0) then
		select	count(1)
		into STRICT	qt_reg_neg_w
		from	pls_requisicao_proc
		where	ie_status		= 'N'
		and	nr_seq_requisicao	= nr_seq_requisicao_w;

		select	count(1)
		into STRICT	qt_reg_neg_ww
		from	pls_requisicao_mat
		where	ie_status		= 'N'
		and	nr_seq_requisicao	= nr_seq_requisicao_w;

		qt_registros_w	:= qt_reg_neg_w + qt_reg_neg_ww;

		select	count(1)
		into STRICT	qt_reg_aprov_w
		from	pls_requisicao_proc
		where	ie_status	= 'S'
		and	nr_seq_requisicao	= nr_seq_requisicao_w;

		select	count(1)
		into STRICT	qt_reg_aprov_ww
		from	pls_requisicao_mat
		where	ie_status	= 'S'
		and	nr_seq_requisicao	= nr_seq_requisicao_w;

		qt_registros_ww	:= qt_reg_aprov_w + qt_reg_aprov_ww;

		if (qt_registros_w > 0) and (qt_registros_ww > 0) then
		
			select	nr_seq_segurado,
				dt_requisicao,
				ie_tipo_guia
			into STRICT 	nr_seq_segurado_w,
				dt_requisicao_w,
				ie_tipo_guia_w
			from 	pls_requisicao
			where 	nr_sequencia = nr_seq_requisicao_w;

			CALL pls_gerar_validade_senha_req(nr_seq_requisicao_w, nr_seq_segurado_w, dt_requisicao_w, ie_tipo_guia_w, nm_usuario_p);

			update	pls_requisicao
			set	ie_estagio		= 6,
				dt_valid_senha_ext	= dt_validade_w,
				dt_validade_senha	= dt_validade_w,
				cd_senha_externa	= to_char(nr_seq_origem_w),
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_requisicao_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
				update	pls_guia_plano
				set	ie_estagio	= 10,
					ie_status	= 1,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_guia_w;
			end if;

			CALL pls_gerar_solic_entreg_mat_med(nr_seq_requisicao_w, nm_usuario_p);
		elsif (qt_registros_w > 0) and (qt_registros_ww = 0) then
			update	pls_requisicao
			set	ie_estagio		= 7,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_requisicao_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
				update	pls_guia_plano
				set	ie_estagio	= 4,
					ie_status	= 3,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_guia_w;
			end if;
		elsif (qt_registros_w = 0) and (qt_registros_ww > 0) then

			select	nr_seq_segurado,
				dt_requisicao,
				ie_tipo_guia
			into STRICT	nr_seq_segurado_w,
				dt_requisicao_w,
				ie_tipo_guia_w
			from	pls_requisicao
			where	nr_sequencia = nr_seq_requisicao_w;

			CALL pls_gerar_validade_senha_req(nr_seq_requisicao_w, nr_seq_segurado_w, dt_requisicao_w, ie_tipo_guia_w, nm_usuario_p);

			update	pls_requisicao
			set	ie_estagio			= 2,
				dt_valid_senha_ext	= dt_validade_w,
				dt_validade_senha	= dt_validade_w,
				cd_senha_externa	= to_char(nr_seq_origem_w),
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_requisicao_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

				begin
					select	cd_senha,
						dt_validade_senha
					into STRICT	cd_senha_w,
						dt_validade_senha_w
					from	pls_requisicao
					where	nr_sequencia	= nr_seq_requisicao_w;
				exception
				when others then
					cd_senha_w	:= null;
					dt_validade_senha_w := null;
				end;

				update	pls_guia_plano
				set	ie_estagio		= 6,
					ie_status		= 1,
					dt_atualizacao		= clock_timestamp(),
					cd_senha_externa	= to_char(nr_seq_origem_w),
					dt_valid_senha_ext	= dt_validade_w,
					dt_validade_senha	= dt_validade_senha_w,
					cd_senha		= cd_senha_w,
					nm_usuario		= nm_usuario_p,
					dt_autorizacao		= clock_timestamp()
				where	nr_sequencia		= nr_seq_guia_w;
			end if;

			CALL pls_gerar_solic_entreg_mat_med(nr_seq_requisicao_w, nm_usuario_p);
		end if;
	end if;

	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',substr(wheb_mensagem_pck.get_texto(1108619,'CD_UNIMED_BENEF=' || cd_unimed_benef_p)||chr(10)||ds_observacao_w,1,4000),null,nm_usuario_p);

	if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		if (nr_seq_pedido_compl_w	<> 0) then
			update	ptu_pedido_compl_aut
			set	nr_seq_guia	= nr_seq_guia_w
			where	nr_sequencia	= nr_seq_pedido_compl_w;

			update	ptu_resposta_autorizacao
			set	nr_seq_guia	= nr_seq_guia_w
			where	nr_sequencia	= nr_seq_resp_autorizacao_p;
		elsif (nr_seq_pedido_aut_w	<> 0) then
			update	ptu_pedido_autorizacao
			set	nr_seq_guia	= nr_seq_guia_w
			where	nr_sequencia	= nr_seq_pedido_aut_w;

			update	ptu_resposta_autorizacao
			set	nr_seq_guia	= nr_seq_guia_w
			where	nr_sequencia	= nr_seq_resp_autorizacao_p;
		end if;

		nr_seq_guia_w := null;
	end if;
elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_guia_plano_proc
	where	ie_status	= 'A'
	and	nr_seq_guia	= nr_seq_guia_w;

	select	count(1)
	into STRICT	qt_registros_ww
	from	pls_guia_plano_mat
	where	ie_status	= 'A'
	and	nr_seq_guia	= nr_seq_guia_w;
	/*
	O valor que vier no campo ie_autorizado_w ira valer para todos os itens.
	Ex: se um item vier em auditoria todos os itens do xml serao em auditoria.
	*/

	select	max(ie_autorizado)
	into STRICT	ie_autorizado_w
	from	ptu_resposta_aut_servico
	where	nr_seq_pedido = nr_seq_resp_autorizacao_p;

	if	((qt_registros_w > 0) or (qt_registros_ww > 0)) then
		update	pls_guia_plano
		set	ie_estagio	= 11,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_guia_w;

		CALL pls_gerar_auditoria_guia(nr_seq_guia_w, nm_usuario_p);
		CALL ptu_gerar_grupo_aud_padrao(nr_seq_guia_w,null,'GC',nm_usuario_p);
	elsif (qt_registros_w = 0) and (qt_registros_ww = 0) and (ie_autorizado_w = 3) then
		update	pls_guia_plano
		set	ie_estagio	= 9,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_guia_w;
	elsif (qt_registros_w = 0) and (qt_registros_ww = 0) and (ie_autorizado_w <> 3) then
		select	count(1)
		into STRICT	qt_reg_neg_w
		from	pls_guia_plano_proc
		where	ie_status	= 'N'
		and	nr_seq_guia	= nr_seq_guia_w;

		select	count(1)
		into STRICT	qt_reg_neg_ww
		from	pls_guia_plano_mat
		where	ie_status		= 'N'
		and	nr_seq_guia	= nr_seq_guia_w;

		qt_registros_w	:= qt_reg_neg_w + qt_reg_neg_ww;

		select	count(1)
		into STRICT	qt_reg_aprov_w
		from	pls_guia_plano_proc
		where	ie_status	= 'S'
		and	nr_seq_guia	= nr_seq_guia_w;

		select	count(1)
		into STRICT	qt_reg_aprov_ww
		from	pls_guia_plano_mat
		where	ie_status	= 'S'
		and	nr_seq_guia	= nr_seq_guia_w;

		qt_registros_ww	:= qt_reg_aprov_w + qt_reg_aprov_ww;

		if (qt_registros_w > 0) and (qt_registros_ww > 0) then
			if (coalesce(ie_gerar_senha_interna_w,'S')	= 'S') then
				select	nr_seq_segurado,
					dt_solicitacao,
					ie_tipo_guia
				into STRICT	nr_seq_segurado_w,
					dt_solicitacao_w,
					ie_tipo_guia_w
				from	pls_guia_plano
				where	nr_sequencia	= nr_seq_guia_w;

				pls_gerar_validade_senha(nr_seq_guia_w, nr_seq_segurado_w, 0, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_senha_w, cd_senha_w);
			else
				cd_senha_w	:= null;
				dt_validade_senha_w := null;

			end if;

			update	pls_guia_plano
			set	ie_estagio		= 10,
				ie_status		= 1,
				dt_atualizacao		= clock_timestamp(),
				cd_senha_externa	= to_char(nr_seq_origem_w),
				dt_valid_senha_ext	= dt_validade_w,
				dt_validade_senha	= dt_validade_senha_w,
				cd_senha		= cd_senha_w,
				nm_usuario		= nm_usuario_p,
				dt_autorizacao		= clock_timestamp()
			where	nr_sequencia		= nr_seq_guia_w;

		elsif (qt_registros_w > 0) and (qt_registros_ww = 0) then
			update	pls_guia_plano
			set	ie_estagio	= 4,
				ie_status	= 3,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_guia_w;
		elsif (qt_registros_w = 0) and (qt_registros_ww > 0) then

			if (coalesce(ie_gerar_senha_interna_w,'S')	= 'S') then
				select	nr_seq_segurado,
					dt_solicitacao,
					ie_tipo_guia
				into STRICT	nr_seq_segurado_w,
					dt_solicitacao_w,
					ie_tipo_guia_w
				from	pls_guia_plano
				where	nr_sequencia	= nr_seq_guia_w;

				pls_gerar_validade_senha(nr_seq_guia_w, nr_seq_segurado_w, 0, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_senha_w, cd_senha_w);
			else
				cd_senha_w	:= null;
				dt_validade_senha_w := null;
			end if;

			update	pls_guia_plano
			set	ie_estagio		= 6,
				ie_status		= 1,
				dt_atualizacao		= clock_timestamp(),
				cd_senha_externa	= to_char(nr_seq_origem_w),
				dt_valid_senha_ext	= dt_validade_w,
				dt_validade_senha	= dt_validade_senha_w,
				cd_senha		= cd_senha_w,
				nm_usuario		= nm_usuario_p,
				dt_autorizacao		= clock_timestamp()
			where	nr_sequencia		= nr_seq_guia_w;
		end if;
	end if;

	CALL pls_guia_gravar_historico(nr_seq_guia_w,2,substr(wheb_mensagem_pck.get_texto(1108619,'CD_UNIMED_BENEF=' || cd_unimed_benef_p)||chr(10)||ds_observacao_w,1,4000),'',nm_usuario_p);
end if;

/*
Apos receber a resposta de pedido de autorizacao, sera verificado se o pedido foi originado de uma ordem de servico e se e uma ordem de servico de triangulacao,
caso sim deve ser atualizado o estagio da ordem de servico para Pendente autorizacao ordem servico (triangulacao)
*/

begin
	select	nr_seq_ordem
	into STRICT	nr_seq_ordem_w
	from	ptu_pedido_autorizacao
	where	nr_sequencia	= nr_seq_pedido_aut_w;
exception
when others then
	nr_seq_ordem_w	:= null;
end;

if (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_ordem_ser_w
	from	ptu_requisicao_ordem_serv
	where	nr_transacao_solicitante	= nr_seq_ordem_w;

	if (nr_seq_ordem_ser_w IS NOT NULL AND nr_seq_ordem_ser_w::text <> '') then
		select	cd_unimed_beneficiario,
			cd_unimed_solicitante
		into STRICT	cd_unimed_beneficiario_w,
			cd_unimed_solicitante_w
		from	ptu_requisicao_ordem_serv
		where	nr_sequencia	= nr_seq_ordem_ser_w;
	end if;

	if (cd_unimed_beneficiario_w	<> cd_unimed_solicitante_w) then

		-- Atualizar o estagio da ordem de servico para Pendente autorizacao ordem servico (triangulacao)

		update	ptu_requisicao_ordem_serv
		set	ie_estagio			= 9
		where	nr_transacao_solicitante	= nr_seq_ordem_w
		and	cd_unimed_solicitante		= cd_unimed_solicitante_w;
	end if;
end if;


-- Inserir as glosas das inconsistencias PTU,  e necessario chamar esta rotina apos atualizar o status da requisicao e da guia


if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
	CALL pls_obter_glosa_incons(nr_seq_requisicao_w, 'R', nm_usuario_p);

	begin
		select	nr_seq_atend_pls,
			nr_seq_evento_atend,
			ie_estagio
		into STRICT	nr_seq_atend_pls_w,
			nr_seq_evento_atend_w,
			ie_estagio_w
		from	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_w;
	exception
	when others then
		nr_seq_atend_pls_w := null;
		nr_seq_evento_atend_w := null;
	end;

	begin
		select	dt_fim_evento
		into STRICT	dt_fim_evento_w
		from	pls_atendimento_evento
		where	nr_sequencia = nr_seq_evento_atend_w;
	exception
	when others then
		dt_fim_evento_w := null;
	end;

	if (ie_estagio_w not in (1,4,8)) and (nr_seq_atend_pls_w IS NOT NULL AND nr_seq_atend_pls_w::text <> '') and (dt_fim_evento_w IS NOT NULL AND dt_fim_evento_w::text <> '') then
		CALL pls_finalizar_atendimento(	nr_seq_atend_pls_w,
						nr_seq_evento_atend_w,
						null,
						null,
						nm_usuario_p);
	end if;
elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
	CALL pls_obter_glosa_incons(nr_seq_guia_w, 'G', nm_usuario_p);

	begin
		select	nr_seq_atend_pls,
			nr_seq_evento_atend,
			ie_estagio
		into STRICT	nr_seq_atend_pls_w,
			nr_seq_evento_atend_w,
			ie_estagio_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w;
	exception
	when others then
		nr_seq_atend_pls_w := null;
	end;

	begin
		select	dt_fim_evento
		into STRICT	dt_fim_evento_w
		from	pls_atendimento_evento
		where	nr_sequencia = nr_seq_evento_atend_w;
	exception
	when others then
		dt_fim_evento_w := null;
	end;

	if (ie_estagio_w not in (1,2,3,7)) and (nr_seq_atend_pls_w IS NOT NULL AND nr_seq_atend_pls_w::text <> '') and (dt_fim_evento_w IS NOT NULL AND dt_fim_evento_w::text <> '') then
		CALL pls_finalizar_atendimento(	nr_seq_atend_pls_w,
						nr_seq_evento_atend_w,
						null,
						null,
						nm_usuario_p);
	end if;
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_processa_00501_v70 ( nr_seq_resp_autorizacao_p ptu_resposta_autorizacao.nr_sequencia%type, nr_seq_execucao_p ptu_resposta_autorizacao.nr_seq_execucao%type, dt_validade_p text, cd_unimed_benef_p ptu_resposta_autorizacao.cd_unimed_beneficiario%type, ds_observacao_p ptu_resposta_autorizacao.ds_observacao%type, nm_usuario_p text) FROM PUBLIC;
