-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_gerar_resp_aud_item_v70 ( nr_seq_resp_aud_p ptu_resposta_auditoria.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_item_existe_p INOUT text) AS $body$
DECLARE


nr_seq_guia_w		pls_guia_plano.nr_sequencia%type;

nr_seq_req_proc_w	pls_requisicao_proc.nr_sequencia%type;
nr_seq_guia_proc_w	pls_guia_plano_proc.nr_sequencia%type;
nr_seq_req_mat_w	pls_requisicao_mat.nr_sequencia%type;
nr_seq_guia_mat_w	pls_guia_plano_mat.nr_sequencia%type;

ie_origem_solic_w	pls_requisicao.ie_origem_solic%type;
nr_seq_mat_w		pls_requisicao_mat.nr_seq_material%type;
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proc_w	procedimento.ie_origem_proced%type;
nr_seq_proc_guia_w	pls_guia_plano_proc.nr_sequencia%type;
nr_seq_mat_guia_w	pls_guia_plano_mat.nr_sequencia%type;
--Parametro utilizado para definir se algum item que retornou na Resposta de Auditoria nao foi encontrado na base

--Enquanto o valor for S todos os itens estao corretos, se tiver pelo menos 1 item errado o valor sera alterado para N

ie_item_existe_w	varchar(1) := 'S';
ie_existe_w		varchar(1) := 'N';
qt_resp_w		integer := 0;

C01 CURSOR(nr_seq_resp_aud_pc  	ptu_resposta_auditoria.nr_sequencia%type) FOR
	SELECT	b.ie_tipo_tabela,
		b.ie_autorizado,
		b.ie_origem_servico,
		b.cd_servico,
		a.nr_seq_guia,
		a.nr_seq_requisicao,
		b.qt_autorizado,
		CASE WHEN b.ie_autorizado=1 THEN 'N' WHEN b.ie_autorizado=2 THEN 'S' END  ie_status,
		trim(both upper(elimina_acentuacao(b.ds_servico))) ds_servico,
		(SELECT	c.nr_seq_pedido_compl
		from	ptu_controle_execucao c
		where	c.nr_sequencia = a.nr_seq_execucao) nr_seq_pedido_compl,
		(select	c.nr_seq_pedido_aut
		from	ptu_controle_execucao c
		where	c.nr_sequencia = a.nr_seq_execucao) nr_seq_pedido_aut,
		nr_seq_item
	from	ptu_resposta_auditoria a,
		ptu_resp_auditoria_servico b
	where	b.nr_seq_auditoria	= a.nr_sequencia
	and	a.nr_sequencia 		= nr_seq_resp_aud_pc;


C02 CURSOR(	nr_seq_pedido_compl_pc	ptu_pedido_compl_aut_serv.nr_seq_pedido%type ) FOR
	SELECT	nr_sequencia,
		nr_seq_req_proc,
		nr_seq_guia_proc,
		nr_seq_guia_mat,
		nr_seq_req_mat,
		ie_tipo_tabela,
		coalesce(cd_servico_conversao,cd_servico) cd_servico_val,
		trim(both upper(elimina_acentuacao(ds_opme))) ds_opme_val,
		nr_seq_item nr_seq_item_val
	from	ptu_pedido_compl_aut_serv
	where	nr_seq_pedido	= nr_seq_pedido_compl_pc;


C03 CURSOR( nr_seq_pedido_aut_pc	ptu_pedido_aut_servico.nr_seq_pedido%type  ) FOR
	SELECT	nr_sequencia,
		nr_seq_req_proc,
		nr_seq_guia_proc,
		nr_seq_guia_mat,
		nr_seq_req_mat,
		ie_tipo_tabela,
		coalesce(cd_servico_consersao,cd_servico) cd_servico_val,
		trim(both upper(elimina_acentuacao(ds_opme))) ds_opme_val,
		nr_seq_item nr_seq_item_val
	from	ptu_pedido_aut_servico
	where	nr_seq_pedido = nr_seq_pedido_aut_pc;

BEGIN

--Carrega os dados importados no XML para as tabelas quentes

for c01_w in C01( nr_seq_resp_aud_p ) loop
	nr_seq_req_proc_w		:= null;
	nr_seq_guia_proc_w		:= null;
	nr_seq_req_mat_w		:= null;
	nr_seq_guia_mat_w		:= null;

	if (c01_w.nr_seq_requisicao IS NOT NULL AND c01_w.nr_seq_requisicao::text <> '') then
		select	count(1)
		into STRICT	qt_resp_w
		from	ptu_resposta_autorizacao
		where	nr_seq_requisicao = c01_w.nr_seq_requisicao;
	elsif (c01_w.nr_seq_guia IS NOT NULL AND c01_w.nr_seq_guia::text <> '') then
		select	count(1)
		into STRICT	qt_resp_w
		from	ptu_resposta_autorizacao
		where	nr_seq_guia = c01_w.nr_seq_guia;
	end if;

	if (qt_resp_w = 0) then
		ie_item_existe_w	:= 'N';
		exit;
	end if;

	--Tratamento realizado para quando a resposta for referente a um pedido de complemento

	if (c01_w.nr_seq_pedido_compl IS NOT NULL AND c01_w.nr_seq_pedido_compl::text <> '') then
		ie_existe_w	:= 'N';
		for c02_w in C02( c01_w.nr_seq_pedido_compl ) loop
			if ( c02_w.ie_tipo_tabela 	in ('0','1','4')) then
				if (c02_w.nr_seq_item_val	= 99) then
					if (c02_w.cd_servico_val	= c01_w.cd_servico)									and (c02_w.ds_opme_val 		= c01_w.ds_servico) 								and (c02_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)								and ((c02_w.nr_seq_req_proc IS NOT NULL AND c02_w.nr_seq_req_proc::text <> '') or (c02_w.nr_seq_guia_proc IS NOT NULL AND c02_w.nr_seq_guia_proc::text <> ''))	then
						nr_seq_req_proc_w		:= c02_w.nr_seq_req_proc;
						nr_seq_guia_proc_w		:= c02_w.nr_seq_guia_proc;
						ie_existe_w			:= 'S';
					end if;
				else
					if (c02_w.nr_seq_item_val	= c01_w.nr_seq_item)								and (c02_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)								and ((c02_w.nr_seq_req_proc IS NOT NULL AND c02_w.nr_seq_req_proc::text <> '') or (c02_w.nr_seq_guia_proc IS NOT NULL AND c02_w.nr_seq_guia_proc::text <> '') )	then
						nr_seq_req_proc_w		:= c02_w.nr_seq_req_proc;
						nr_seq_guia_proc_w		:= c02_w.nr_seq_guia_proc;
						ie_existe_w			:= 'S';
					end if;
				end if;
			elsif ( c02_w.ie_tipo_tabela in ('2','3','5','6')) then
				if (c02_w.nr_seq_item_val	= 99) then
					if (c02_w.cd_servico_val = c01_w.cd_servico)								and (c02_w.ds_opme_val 		= c01_w.ds_servico) 							and (c02_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)							and ((c02_w.nr_seq_req_mat IS NOT NULL AND c02_w.nr_seq_req_mat::text <> '') or (c02_w.nr_seq_guia_mat IS NOT NULL AND c02_w.nr_seq_guia_mat::text <> ''))	then
						nr_seq_req_mat_w		:= c02_w.nr_seq_req_mat;
						nr_seq_guia_mat_w		:= c02_w.nr_seq_guia_mat;
						ie_existe_w			:= 'S';
					end if;
				else
					if (c02_w.nr_seq_item_val	= c01_w.nr_seq_item)								and (c02_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)								and ((c02_w.nr_seq_req_mat IS NOT NULL AND c02_w.nr_seq_req_mat::text <> '') or (c02_w.nr_seq_guia_mat IS NOT NULL AND c02_w.nr_seq_guia_mat::text <> ''))		then
						nr_seq_req_mat_w		:= c02_w.nr_seq_req_mat;
						nr_seq_guia_mat_w		:= c02_w.nr_seq_guia_mat;
						ie_existe_w			:= 'S';
					end if;
				end if;
			end if;

			if (c01_w.nr_seq_requisicao IS NOT NULL AND c01_w.nr_seq_requisicao::text <> '') then
				select	coalesce(ie_origem_solic, 'M')
				into STRICT	ie_origem_solic_w
				from	pls_requisicao
				where	nr_sequencia	= c01_w.nr_seq_requisicao;

				if (ie_origem_solic_w = 'E') then
					select	max(a.nr_seq_guia)
					into STRICT	nr_seq_guia_w
					from	pls_requisicao c,
						pls_execucao_requisicao a
					where	a.nr_seq_requisicao	= c.nr_sequencia
					and	c.nr_sequencia		= c01_w.nr_seq_requisicao;
				end if;

				if (nr_seq_req_proc_w IS NOT NULL AND nr_seq_req_proc_w::text <> '') then
					update	pls_requisicao_proc
					set	ie_status	= c01_w.ie_status,
						qt_procedimento	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_req_proc_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_req_proc =	nr_seq_req_proc_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

					if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

						select	cd_procedimento,
							ie_origem_proced
						into STRICT	cd_procedimento_w,
							ie_origem_proc_w
						from	pls_requisicao_proc
						where	nr_sequencia		= nr_seq_req_proc_w;

						update	pls_itens_lote_execucao
						set	qt_item_exec = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_aprovado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_executado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_proc = nr_seq_req_proc_w;

						update	pls_execucao_req_item
						set	qt_item = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_proc = nr_seq_req_proc_w;

						select	max(nr_sequencia)
						into STRICT	nr_seq_proc_guia_w
						from	pls_guia_plano_proc
						where	cd_procedimento		= cd_procedimento_w
						and	ie_origem_proced	= ie_origem_proc_w
						and	ie_status		= 'A'
						and	nr_seq_guia		= nr_seq_guia_w;

						update	pls_guia_plano_proc
						set	ie_status		= c01_w.ie_status,
							qt_autorizada		= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_sequencia		= nr_seq_proc_guia_w;
					end if;
				elsif (nr_seq_req_mat_w IS NOT NULL AND nr_seq_req_mat_w::text <> '') then
					update	pls_requisicao_mat
					set	ie_status	= c01_w.ie_status,
						qt_material	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_req_mat_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_req_mat =	nr_seq_req_mat_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

					if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

						select	nr_seq_material
						into STRICT	nr_seq_mat_w
						from	pls_requisicao_mat
						where	nr_sequencia		= nr_seq_req_mat_w;

						update	pls_itens_lote_execucao
						set	qt_item_exec = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_aprovado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_executado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_mat = nr_seq_req_mat_w;

						update	pls_execucao_req_item
						set	qt_item = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_mat = nr_seq_req_mat_w;

						select	max(nr_sequencia)
						into STRICT	nr_seq_mat_guia_w
						from	pls_guia_plano_mat
						where	nr_seq_material		= nr_seq_mat_w
						and	ie_status		= 'A'
						and	nr_seq_guia		= nr_seq_guia_w;

						update	pls_guia_plano_mat
						set	ie_status		= c01_w.ie_status,
							qt_autorizada		= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_sequencia		= nr_seq_mat_guia_w;
					end if;
				end if;
			elsif (c01_w.nr_seq_guia IS NOT NULL AND c01_w.nr_seq_guia::text <> '') then
				if (nr_seq_guia_proc_w IS NOT NULL AND nr_seq_guia_proc_w::text <> '') then
					update	pls_guia_plano_proc
					set	ie_status	= c01_w.ie_status,
						qt_autorizada	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_guia_proc_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_guia_proc =	nr_seq_guia_proc_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

				elsif (nr_seq_guia_mat_w IS NOT NULL AND nr_seq_guia_mat_w::text <> '') then
					update	pls_guia_plano_mat
					set	ie_status	= c01_w.ie_status,
						qt_autorizada	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_guia_mat_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_guia_mat =	nr_seq_guia_mat_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

				end if;
			end if;
		end loop;
		if (ie_existe_w = 'N') then
			ie_item_existe_w	:= 'N';
			exit;
		end if;
		ie_existe_w := 'N';

	--Tratamento realizado para quando a resposta for referente a um Pedido de Autorizacao

	elsif (c01_w.nr_seq_pedido_aut IS NOT NULL AND c01_w.nr_seq_pedido_aut::text <> '') then
		ie_existe_w	:= 'N';
		for c03_w in C03( c01_w.nr_seq_pedido_aut ) loop
			if ( c03_w.ie_tipo_tabela 	in ('0','1','4')) then
				if (c03_w.nr_seq_item_val	= 99) then
					if (c03_w.cd_servico_val	= c01_w.cd_servico)									and (c03_w.ds_opme_val 		= c01_w.ds_servico) 								and (c03_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)								and ((c03_w.nr_seq_req_proc IS NOT NULL AND c03_w.nr_seq_req_proc::text <> '') or (c03_w.nr_seq_guia_proc IS NOT NULL AND c03_w.nr_seq_guia_proc::text <> ''))	then
						nr_seq_req_proc_w		:= c03_w.nr_seq_req_proc;
						nr_seq_guia_proc_w		:= c03_w.nr_seq_guia_proc;
						ie_existe_w			:= 'S';
					end if;
				else
					if (c03_w.nr_seq_item_val	= c01_w.nr_seq_item)								and (c03_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)								and ((c03_w.nr_seq_req_proc IS NOT NULL AND c03_w.nr_seq_req_proc::text <> '') or (c03_w.nr_seq_guia_proc IS NOT NULL AND c03_w.nr_seq_guia_proc::text <> '') )	then
						nr_seq_req_proc_w		:= c03_w.nr_seq_req_proc;
						nr_seq_guia_proc_w		:= c03_w.nr_seq_guia_proc;
						ie_existe_w			:= 'S';
					end if;
				end if;
			elsif ( c03_w.ie_tipo_tabela in ('2','3','5','6')) then
				if (c03_w.nr_seq_item_val	= 99) then
					if (c03_w.cd_servico_val = c01_w.cd_servico)								and (c03_w.ds_opme_val 		= c01_w.ds_servico) 							and (c03_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)							and ((c03_w.nr_seq_req_mat IS NOT NULL AND c03_w.nr_seq_req_mat::text <> '') or (c03_w.nr_seq_guia_mat IS NOT NULL AND c03_w.nr_seq_guia_mat::text <> ''))	then
						nr_seq_req_mat_w		:= c03_w.nr_seq_req_mat;
						nr_seq_guia_mat_w		:= c03_w.nr_seq_guia_mat;
						ie_existe_w			:= 'S';
					end if;
				else
					if (c03_w.nr_seq_item_val	= c01_w.nr_seq_item)								and (c03_w.ie_tipo_tabela 	= c01_w.ie_tipo_tabela)								and ((c03_w.nr_seq_req_mat IS NOT NULL AND c03_w.nr_seq_req_mat::text <> '') or (c03_w.nr_seq_guia_mat IS NOT NULL AND c03_w.nr_seq_guia_mat::text <> ''))		then
						nr_seq_req_mat_w		:= c03_w.nr_seq_req_mat;
						nr_seq_guia_mat_w		:= c03_w.nr_seq_guia_mat;
						ie_existe_w			:= 'S';
					end if;
				end if;
			end if;

			if (c01_w.nr_seq_requisicao IS NOT NULL AND c01_w.nr_seq_requisicao::text <> '') then
				select	coalesce(ie_origem_solic, 'M')
				into STRICT	ie_origem_solic_w
				from	pls_requisicao
				where	nr_sequencia	= c01_w.nr_seq_requisicao;

				if (ie_origem_solic_w = 'E') then
					select	max(a.nr_seq_guia)
					into STRICT	nr_seq_guia_w
					from	pls_requisicao c,
						pls_execucao_requisicao a
					where	a.nr_seq_requisicao	= c.nr_sequencia
					and	c.nr_sequencia		= c01_w.nr_seq_requisicao;
				end if;

				if (nr_seq_req_proc_w IS NOT NULL AND nr_seq_req_proc_w::text <> '') then
					update	pls_requisicao_proc
					set	ie_status	= c01_w.ie_status,
						qt_procedimento	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_req_proc_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_req_proc =	nr_seq_req_proc_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

					if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

						select	cd_procedimento,
							ie_origem_proced
						into STRICT	cd_procedimento_w,
							ie_origem_proc_w
						from	pls_requisicao_proc
						where	nr_sequencia		= nr_seq_req_proc_w;

						update	pls_itens_lote_execucao
						set	qt_item_exec = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_aprovado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_executado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_proc = nr_seq_req_proc_w;

						update	pls_execucao_req_item
						set	qt_item = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_proc = nr_seq_req_proc_w;

						select	max(nr_sequencia)
						into STRICT	nr_seq_proc_guia_w
						from	pls_guia_plano_proc
						where	cd_procedimento		= cd_procedimento_w
						and	ie_origem_proced	= ie_origem_proc_w
						and	ie_status		= 'A'
						and	nr_seq_guia		= nr_seq_guia_w;

						update	pls_guia_plano_proc
						set	ie_status		= c01_w.ie_status,
							qt_autorizada		= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_sequencia		= nr_seq_proc_guia_w;
					end if;
				elsif (nr_seq_req_mat_w IS NOT NULL AND nr_seq_req_mat_w::text <> '') then
					update	pls_requisicao_mat
					set	ie_status	= c01_w.ie_status,
						qt_material	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_req_mat_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_req_mat =	nr_seq_req_mat_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

					if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

						select	nr_seq_material
						into STRICT	nr_seq_mat_w
						from	pls_requisicao_mat
						where	nr_sequencia		= nr_seq_req_mat_w;

						update	pls_itens_lote_execucao
						set	qt_item_exec = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_aprovado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
							qt_executado = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_mat = nr_seq_req_mat_w;

						update	pls_execucao_req_item
						set	qt_item = CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_seq_req_mat = nr_seq_req_mat_w;

						select	max(nr_sequencia)
						into STRICT	nr_seq_mat_guia_w
						from	pls_guia_plano_mat
						where	nr_seq_material		= nr_seq_mat_w
						and	ie_status		= 'A'
						and	nr_seq_guia		= nr_seq_guia_w;

						update	pls_guia_plano_mat
						set	ie_status		= c01_w.ie_status,
							qt_autorizada		= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END
						where	nr_sequencia		= nr_seq_mat_guia_w;
					end if;
				end if;
			elsif (c01_w.nr_seq_guia IS NOT NULL AND c01_w.nr_seq_guia::text <> '') then
				if (nr_seq_guia_proc_w IS NOT NULL AND nr_seq_guia_proc_w::text <> '') then
					update	pls_guia_plano_proc
					set	ie_status	= c01_w.ie_status,
						qt_autorizada	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_guia_proc_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_guia_proc =	nr_seq_guia_proc_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

				elsif (nr_seq_guia_mat_w IS NOT NULL AND nr_seq_guia_mat_w::text <> '') then
					update	pls_guia_plano_mat
					set	ie_status	= c01_w.ie_status,
						qt_autorizada	= CASE WHEN c01_w.ie_status='N' THEN  0  ELSE c01_w.qt_autorizado END ,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	nr_sequencia	= nr_seq_guia_mat_w;

					update	ptu_resp_auditoria_servico
					set		nr_seq_guia_mat =	nr_seq_guia_mat_w
					where	nr_seq_auditoria =	nr_seq_resp_aud_p;

				end if;
			end if;
		end loop;
		if (ie_existe_w = 'N') then
			ie_item_existe_w	:= 'N';
			exit;
		end if;
		ie_existe_w := 'N';
	end if;

	--Se nao foi encontrado nenhum item na base referente a Resposta de Auditoria o sistema  nao ira atualizar as informacoes na guia e na requisicao, gerando diretamente o pedido de confirmacao

	/*if	( nr_seq_guia_proc_w is null and nr_seq_guia_mat_w is null and nr_seq_req_proc_w is null and nr_seq_req_mat_w is null  ) then
		ie_item_existe_w := 'N';
	end if;*/

end loop;

ie_item_existe_p := ie_item_existe_w;

if (ie_item_existe_w = 'N') then
	rollback;
else
	commit;
end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_gerar_resp_aud_item_v70 ( nr_seq_resp_aud_p ptu_resposta_auditoria.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_item_existe_p INOUT text) FROM PUBLIC;
