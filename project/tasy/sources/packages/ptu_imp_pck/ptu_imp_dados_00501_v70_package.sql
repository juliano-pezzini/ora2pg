-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_imp_dados_00501_v70 ( nr_seq_resp_autorizacao_p ptu_resposta_autorizacao.nr_sequencia%type, nr_seq_execucao_p ptu_resposta_autorizacao.nr_seq_execucao%type, nr_seq_item_p ptu_resposta_aut_servico.nr_seq_item%type, ie_tipo_tabela_p ptu_pedido_aut_servico.ie_tipo_tabela%type, cd_servico_p ptu_pedido_compl_aut_serv.cd_servico%type, ds_servico_p ptu_resposta_aut_servico.ds_servico%type, qt_autorizada_p ptu_resposta_aut_servico.qt_autorizado%type, ie_autorizado_p ptu_resposta_aut_servico.ie_autorizado%type, cd_mens_espec_1_p bigint, cd_mens_espec_2_p bigint, cd_mens_espec_3_p bigint, cd_mens_espec_4_p bigint, cd_mens_espec_5_p bigint, ds_mensagem_espec_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


qt_procedimento_ww  		pls_requisicao_proc.qt_procedimento%type;
nr_seq_pedido_compl_w		ptu_controle_execucao.nr_seq_pedido_compl%type;
nr_seq_pedido_aut_w		ptu_controle_execucao.nr_seq_pedido_aut%type;
nr_seq_guia_w			ptu_pedido_compl_aut.nr_seq_guia%type;
nr_seq_requisicao_w		ptu_pedido_compl_aut.nr_seq_requisicao%type;
nr_seq_transacao_w		ptu_pedido_compl_aut.nr_seq_guia%type;
ie_tipo_transacao_w		varchar(2);
ie_status_w			pls_guia_plano_proc.ie_status%type;
nr_seq_ped_aut_compl_serv_w	ptu_pedido_aut_servico.nr_sequencia%type;
nr_seq_req_proc_w		ptu_pedido_aut_servico.nr_seq_req_proc%type;
nr_seq_guia_proc_w		ptu_pedido_aut_servico.nr_seq_guia_proc%type;
nr_seq_procedimento_w		ptu_pedido_aut_servico.nr_seq_req_proc%type;
cd_transacao_w			ptu_resposta_autorizacao.cd_transacao%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_req_mat_w		ptu_pedido_aut_servico.nr_seq_req_mat%type;
nr_seq_guia_mat_w		ptu_pedido_aut_servico.nr_seq_guia_mat%type;
nr_seq_material_w		ptu_pedido_aut_servico.nr_seq_guia_mat%type;
qt_material_ww			pls_guia_plano_mat.qt_autorizada%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_origem_solic_w		pls_requisicao.ie_origem_solic%type;
qt_solic_proc_w			pls_requisicao_proc.qt_solicitado%type;
qt_solic_mat_w			pls_requisicao_mat.qt_solicitado%type;
nr_seq_mat_w			pls_requisicao_mat.nr_seq_material%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proc_w		procedimento.ie_origem_proced%type;
ie_tipo_tabela_w		ptu_pedido_aut_servico.ie_tipo_tabela%type := ptu_conversao_tipo_tabela(ie_tipo_tabela_p, cd_servico_p,'R', null);
cd_servico_w			ptu_pedido_aut_servico.cd_servico%type := ptu_conversao_item_tabela(ie_tipo_tabela_p, cd_servico_p, null);


BEGIN

if (coalesce(cd_estabelecimento_p,0) > 0) then
	cd_estabelecimento_w := cd_estabelecimento_p;
else
	cd_estabelecimento_w := ptu_obter_estab_padrao;
end if;


select	coalesce(nr_seq_pedido_compl,0),
	coalesce(nr_seq_pedido_aut,0)
into STRICT	nr_seq_pedido_compl_w,
	nr_seq_pedido_aut_w
from	ptu_controle_execucao
where	nr_sequencia	= nr_seq_execucao_p;

if (nr_seq_pedido_compl_w	<> 0) then
	select	nr_seq_guia,
		nr_seq_requisicao
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_compl_aut
	where	nr_sequencia	= nr_seq_pedido_compl_w;
elsif (nr_seq_pedido_aut_w	<> 0) then
	select	nr_seq_guia,
		nr_seq_requisicao
	into STRICT	nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_autorizacao
	where	nr_sequencia	= nr_seq_pedido_aut_w;
end if;

if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')then
	nr_seq_transacao_w 	:= nr_seq_guia_w;
	ie_tipo_transacao_w	:= 'G';
else
	nr_seq_transacao_w	:= nr_seq_requisicao_w;
	ie_tipo_transacao_w	:= 'R';

	--Tratamento para atualizar a guia e a requisicao geradas pelo processo de WebService(Eletronico(XML))

	select	coalesce(ie_origem_solic, 'M')
	into STRICT	ie_origem_solic_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_w;

	if (ie_origem_solic_w = 'E') then
		select	max(a.nr_seq_guia)
		into STRICT	nr_seq_guia_w
		from	pls_requisicao c,
			pls_execucao_requisicao a
		where	a.nr_seq_requisicao	= c.nr_sequencia
		and	c.nr_sequencia		= nr_seq_requisicao_w;
	end if;
end if;

if (ie_autorizado_p	= 1) then
	ie_status_w	:= 'N';
elsif (ie_autorizado_p	= 2) then
	ie_status_w	:= 'S';
elsif (ie_autorizado_p	= 3) then
	ie_status_w	:= 'A';
elsif (ie_autorizado_p	= 4) then
	ie_status_w	:= 'A';
end if;

begin
	qt_procedimento_ww	:= (ptu_obter_qtd_env_itens_scs(null, qt_autorizada_p,'R'))::numeric;
exception
when others then
	qt_procedimento_ww  	:= (replace(ptu_obter_qtd_env_itens_scs(null, qt_autorizada_p,'R'),',','.'))::numeric;
end;

select	max(cd_transacao)
into STRICT	cd_transacao_w
from	ptu_resposta_autorizacao
where	nr_sequencia = nr_seq_resp_autorizacao_p;

if (ie_tipo_tabela_w	in ('0','1','4')) then
	if (coalesce(nr_seq_pedido_aut_w,0)	<> 0) then
		begin
			select	nr_sequencia,
				nr_seq_req_proc,
				nr_seq_guia_proc
			into STRICT	nr_seq_ped_aut_compl_serv_w,
				nr_seq_req_proc_w,
				nr_seq_guia_proc_w
			from	ptu_pedido_aut_servico
			where	nr_seq_pedido					= nr_seq_pedido_aut_w
			and	ie_tipo_tabela					= ie_tipo_tabela_w
			and	coalesce(cd_servico_consersao,cd_servico)		= cd_servico_w
			and	nr_seq_item					= nr_seq_item_p;
		exception
		when others then
			nr_seq_ped_aut_compl_serv_w	:= null;
			nr_seq_req_proc_w		:= null;
			nr_seq_guia_proc_w		:= null;
		end;
	elsif (coalesce(nr_seq_pedido_compl_w,0)	<> 0) then
		begin
			select	nr_sequencia,
				nr_seq_req_proc,
				nr_seq_guia_proc
			into STRICT	nr_seq_ped_aut_compl_serv_w,
				nr_seq_req_proc_w,
				nr_seq_guia_proc_w
			from	ptu_pedido_compl_aut_serv
			where	nr_seq_pedido					= nr_seq_pedido_compl_w
			and	ie_tipo_tabela					= ie_tipo_tabela_w
			and	coalesce(cd_servico_conversao,cd_servico)		= cd_servico_w
			and	nr_seq_item					= nr_seq_item_p;
		exception
		when others then
			nr_seq_ped_aut_compl_serv_w	:= null;
			nr_seq_req_proc_w		:= null;
			nr_seq_guia_proc_w		:= null;
		end;
	end if;

	nr_seq_procedimento_w	:= coalesce(nr_seq_guia_proc_w,nr_seq_req_proc_w);

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then

		if (ie_status_w	in ('A','N')) then
			update	pls_requisicao_proc
			set	ie_status		= ie_status_w,
				qt_procedimento		= 0
			where	nr_sequencia		= nr_seq_req_proc_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

				update	pls_requisicao_proc
				set	qt_proc_executado	= 0
				where	nr_sequencia		= nr_seq_req_proc_w;

				select	qt_solicitado,
					cd_procedimento,
					ie_origem_proced
				into STRICT	qt_solic_proc_w,
					cd_procedimento_w,
					ie_origem_proc_w
				from	pls_requisicao_proc
				where	nr_sequencia		= nr_seq_req_proc_w;

				select	max(nr_sequencia)
				into STRICT	nr_seq_guia_proc_w
				from	pls_guia_plano_proc
				where	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proc_w
				and	ie_status		= 'I'
				and	nr_seq_guia		= nr_seq_guia_w;

				update	pls_guia_plano_proc
				set	ie_status		= ie_status_w,
					qt_solicitada		= qt_solic_proc_w,
					qt_autorizada		= 0
				where	nr_sequencia		= nr_seq_guia_proc_w;
			end if;
		else
			update	pls_requisicao_proc
			set	ie_status		= ie_status_w,
				qt_procedimento		= (qt_procedimento_ww)::numeric
			where	nr_sequencia		= nr_seq_req_proc_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

				update	pls_requisicao_proc
				set	qt_proc_executado	= (qt_procedimento_ww)::numeric
				where	nr_sequencia		= nr_seq_req_proc_w;

				select	qt_solicitado,
					cd_procedimento,
					ie_origem_proced
				into STRICT	qt_solic_proc_w,
					cd_procedimento_w,
					ie_origem_proc_w
				from	pls_requisicao_proc
				where	nr_sequencia		= nr_seq_req_proc_w;

				update	pls_itens_lote_execucao
				set	qt_item_exec = (qt_procedimento_ww)::numeric ,
					qt_aprovado = (qt_procedimento_ww)::numeric ,
					qt_executado = (qt_procedimento_ww)::numeric
				where	nr_seq_req_proc = nr_seq_req_proc_w;

				update	pls_execucao_req_item
				set	qt_item = (qt_procedimento_ww)::numeric
				where	nr_seq_req_proc = nr_seq_req_proc_w;

				select	max(nr_sequencia)
				into STRICT	nr_seq_guia_proc_w
				from	pls_guia_plano_proc
				where	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proc_w
				and	ie_status		= 'I'
				and	nr_seq_guia		= nr_seq_guia_w;

				update	pls_guia_plano_proc
				set	ie_status		= ie_status_w,
					qt_solicitada		= qt_solic_proc_w,
					qt_autorizada		= (qt_procedimento_ww)::numeric
				where	nr_sequencia		= nr_seq_guia_proc_w;
			end if;
		end if;
	elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		if (ie_status_w	in ('A','N')) then
			update	pls_guia_plano_proc
			set	ie_status		= ie_status_w,
				qt_autorizada		= 0
			where	nr_sequencia		= nr_seq_guia_proc_w;
		else
			update	pls_guia_plano_proc
			set	ie_status		= ie_status_w,
				qt_autorizada		= (qt_procedimento_ww)::numeric
			where	nr_sequencia		= nr_seq_guia_proc_w;
		end if;
	end if;

	if (cd_mens_espec_1_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_2_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_2_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_3_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_3_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_4_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_4_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_5_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_5_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
	end if;

	select	max(ie_origem_proced)
	into STRICT	ie_origem_proced_w
	from    procedimento
	where   cd_procedimento	= cd_servico_p
	and	ie_situacao	= 'A';

	insert	into ptu_resposta_aut_servico(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
		cd_servico, ds_servico, ie_autorizado,
		dt_atualizacao, nm_usuario, qt_autorizado,
		ie_origem_servico, nr_seq_guia_proc, nr_seq_req_proc,
		nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_item)
	values (nextval('ptu_resposta_aut_servico_seq'), nr_seq_resp_autorizacao_p, ie_tipo_tabela_w,
		cd_servico_w, coalesce(ds_servico_p, expressao_pck.obter_desc_expressao(960582)), ie_autorizado_p,
		clock_timestamp(), nm_usuario_p, (qt_procedimento_ww)::numeric ,
		CASE WHEN ie_tipo_tabela_p='00' THEN  4  ELSE ie_origem_proced_w END , nr_seq_guia_proc_w, nr_seq_req_proc_w,
		nm_usuario_p, clock_timestamp(), nr_seq_item_p);

elsif (ie_tipo_tabela_w	in ('2','3','5','6')) then
	if (coalesce(nr_seq_pedido_aut_w,0)	<> 0) then
		begin
			select	nr_sequencia,
				nr_seq_req_mat,
				nr_seq_guia_mat
			into STRICT	nr_seq_ped_aut_compl_serv_w,
				nr_seq_req_mat_w,
				nr_seq_guia_mat_w
			from	ptu_pedido_aut_servico
			where	nr_seq_pedido					= nr_seq_pedido_aut_w
			and	ie_tipo_tabela					= ie_tipo_tabela_w
			and	coalesce(cd_servico_consersao,cd_servico)		= cd_servico_w
			and	nr_seq_item					= nr_seq_item_p;
		exception
		when others then
			nr_seq_ped_aut_compl_serv_w	:= null;
			nr_seq_req_proc_w		:= null;
			nr_seq_guia_proc_w		:= null;
		end;
	elsif (coalesce(nr_seq_pedido_compl_w,0)	<> 0) then
		begin
			select	nr_sequencia,
				nr_seq_req_mat,
				nr_seq_guia_mat
			into STRICT	nr_seq_ped_aut_compl_serv_w,
				nr_seq_req_mat_w,
				nr_seq_guia_mat_w
			from	ptu_pedido_compl_aut_serv
			where	nr_seq_pedido					= nr_seq_pedido_compl_w
			and	ie_tipo_tabela					= ie_tipo_tabela_w
			and	coalesce(cd_servico_conversao,cd_servico)		= cd_servico_w
			and	nr_seq_item					= nr_seq_item_p;
		exception
		when others then
			nr_seq_ped_aut_compl_serv_w	:= null;
			nr_seq_req_proc_w		:= null;
			nr_seq_guia_proc_w		:= null;
		end;
	end if;

	nr_seq_material_w	:= coalesce(nr_seq_guia_mat_w,nr_seq_req_mat_w);

	begin
		qt_material_ww	:= (ptu_obter_qtd_env_itens_scs(null, qt_autorizada_p,'R'))::numeric;
	exception
	when others then
		qt_material_ww  := (replace(ptu_obter_qtd_env_itens_scs(null, qt_autorizada_p,'R'),',','.'))::numeric;
	end;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then

		if (ie_status_w	in ('A','N')) then
			update	pls_requisicao_mat
			set	ie_status	= ie_status_w,
				qt_material	= 0
			where	nr_sequencia	= nr_seq_req_mat_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

				update	pls_requisicao_mat
				set	qt_mat_executado	= 0
				where	nr_sequencia		= nr_seq_req_mat_w;

				select	qt_solicitado,
					nr_seq_material
				into STRICT	qt_solic_mat_w,
					nr_seq_mat_w
				from	pls_requisicao_mat
				where	nr_sequencia		= nr_seq_req_mat_w;

				select	max(nr_sequencia)
				into STRICT	nr_seq_guia_mat_w
				from	pls_guia_plano_mat
				where	nr_seq_material		= nr_seq_mat_w
				and	ie_status		= 'I'
				and	nr_seq_guia		= nr_seq_guia_w;

				update	pls_guia_plano_mat
				set	ie_status		= ie_status_w,
					qt_solicitada		= qt_solic_mat_w,
					qt_autorizada		= 0
				where	nr_sequencia		= nr_seq_guia_mat_w;
			end if;
		else
			update	pls_requisicao_mat
			set	ie_status	= ie_status_w,
				qt_material	= (qt_material_ww)::numeric
			where	nr_sequencia	= nr_seq_req_mat_w;

			if (ie_origem_solic_w = 'E') and (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

				update	pls_requisicao_mat
				set	qt_mat_executado	= (qt_material_ww)::numeric
				where	nr_sequencia		= nr_seq_req_mat_w;

				select	qt_solicitado,
					nr_seq_material
				into STRICT	qt_solic_mat_w,
					nr_seq_mat_w
				from	pls_requisicao_mat
				where	nr_sequencia		= nr_seq_req_mat_w;

				update	pls_itens_lote_execucao
				set 	qt_item_exec = (qt_material_ww)::numeric ,
					qt_aprovado = (qt_material_ww)::numeric ,
					qt_executado = (qt_material_ww)::numeric
				where	nr_seq_req_mat = nr_seq_req_mat_w;

				update	pls_execucao_req_item
				set	qt_item = (qt_material_ww)::numeric
				where	nr_seq_req_mat = nr_seq_req_mat_w;

				select	max(nr_sequencia)
				into STRICT	nr_seq_guia_mat_w
				from	pls_guia_plano_mat
				where	nr_seq_material		= nr_seq_mat_w
				and	ie_status		= 'I'
				and	nr_seq_guia		= nr_seq_guia_w;

				update	pls_guia_plano_mat
				set	ie_status		= ie_status_w,
					qt_solicitada		= qt_solic_mat_w,
					qt_autorizada		= (qt_material_ww)::numeric
				where	nr_sequencia		= nr_seq_guia_mat_w;
			end if;
		end if;
	elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		if (ie_status_w	in ('A','N')) then
			update	pls_guia_plano_mat
			set	ie_status	= ie_status_w,
				qt_autorizada	= 0
			where	nr_sequencia	= nr_seq_guia_mat_w;
		else
			update	pls_guia_plano_mat
			set	ie_status	= ie_status_w,
				qt_autorizada	= (qt_material_ww)::numeric
			where	nr_sequencia	= nr_seq_guia_mat_w;
		end if;
	end if;

	if (cd_mens_espec_1_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_2_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_2_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_3_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_3_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_4_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_4_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
	end if;

	if (cd_mens_espec_5_p	<> 0) then
		CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_5_p,ds_mensagem_espec_p,cd_estabelecimento_w, nr_seq_transacao_w, ie_tipo_transacao_w,
						cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
	end if;

	insert	into ptu_resposta_aut_servico(nr_sequencia, nr_seq_pedido, ie_tipo_tabela,
		cd_servico, ds_servico, ie_autorizado,
		dt_atualizacao, nm_usuario, qt_autorizado,
		ie_origem_servico, nr_seq_guia_mat, nr_seq_guia_proc,
		nr_seq_req_mat, nr_seq_req_proc, nm_usuario_nrec,
		dt_atualizacao_nrec, nr_seq_item)
	values (nextval('ptu_resposta_aut_servico_seq'), nr_seq_resp_autorizacao_p, ie_tipo_tabela_w,
		cd_servico_w, coalesce(ds_servico_p, expressao_pck.obter_desc_expressao(960582)), ie_autorizado_p,
		clock_timestamp(), nm_usuario_p, (qt_material_ww)::numeric ,
		CASE WHEN ie_tipo_tabela_p='00' THEN  4  ELSE ie_origem_proced_w END , nr_seq_guia_mat_w, nr_seq_guia_proc_w,
		nr_seq_req_mat_w, nr_seq_req_proc_w, nm_usuario_p,
		clock_timestamp(), nr_seq_item_p);
end if;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_imp_dados_00501_v70 ( nr_seq_resp_autorizacao_p ptu_resposta_autorizacao.nr_sequencia%type, nr_seq_execucao_p ptu_resposta_autorizacao.nr_seq_execucao%type, nr_seq_item_p ptu_resposta_aut_servico.nr_seq_item%type, ie_tipo_tabela_p ptu_pedido_aut_servico.ie_tipo_tabela%type, cd_servico_p ptu_pedido_compl_aut_serv.cd_servico%type, ds_servico_p ptu_resposta_aut_servico.ds_servico%type, qt_autorizada_p ptu_resposta_aut_servico.qt_autorizado%type, ie_autorizado_p ptu_resposta_aut_servico.ie_autorizado%type, cd_mens_espec_1_p bigint, cd_mens_espec_2_p bigint, cd_mens_espec_3_p bigint, cd_mens_espec_4_p bigint, cd_mens_espec_5_p bigint, ds_mensagem_espec_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
