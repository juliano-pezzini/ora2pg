-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ptu_imp_pck.ptu_processa_00430_v70 ( nr_seq_pedido_cont_p ptu_pedido_contagem_benef.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_ret_cont_p INOUT ptu_resp_contagem_benef.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar a validacao do arquivo de  00430 - Requisicao Contagem Benef.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


cd_unimed_destino_w		ptu_pedido_contagem_benef.cd_unimed_destino%type;
cd_unimed_requisitante_w	ptu_pedido_contagem_benef.cd_unimed_requisitante%type;
dt_ano_referencia_w		ptu_pedido_contagem_benef.ds_ano_referencia%type;
nr_versao_w			ptu_pedido_contagem_benef.nr_versao%type;
qt_registros_w			bigint;
ie_status_retorno_w		bigint;
dt_referencia_w			timestamp;
qt_benef_pf_co_loc_w		ptu_resp_contagem_benef.qt_ben_pf_co_loc%type;
qt_benef_pf_pre_loc_w		ptu_resp_contagem_benef.qt_ben_pf_pp_loc%type;
qt_benef_pf_co_rec_w		ptu_resp_contagem_benef.qt_ben_pf_rec_co%type;
qt_benef_pf_pre_rec_w		ptu_resp_contagem_benef.qt_ben_pf_rec_pp%type;
qt_benef_pf_co_rep_w		ptu_resp_contagem_benef.qt_ben_pf_rep_co%type;
qt_benef_pf_pre_rep_w		ptu_resp_contagem_benef.qt_ben_pf_rep_pp%type;
qt_benef_pj_co_loc_w		ptu_resp_contagem_benef.qt_ben_pj_co_loc%type;
qt_benef_pj_pre_loc_w		ptu_resp_contagem_benef.qt_ben_pj_pp_loc%type;
qt_benef_pj_co_rec_w		ptu_resp_contagem_benef.qt_ben_pj_rec_co%type;
qt_benef_pj_pre_rec_w		ptu_resp_contagem_benef.qt_ben_pj_rec_pp%type;
qt_benef_pj_co_rep_w		ptu_resp_contagem_benef.qt_ben_pj_rep_co%type;
qt_benef_pj_pre_rep_w		ptu_resp_contagem_benef.qt_ben_pj_rep_pp%type;


BEGIN

select	cd_unimed_destino,
	cd_unimed_requisitante,
	ds_ano_referencia,
	nr_versao
into STRICT	cd_unimed_destino_w,
	cd_unimed_requisitante_w,
	dt_ano_referencia_w,
	nr_versao_w
from	ptu_pedido_contagem_benef
where	nr_sequencia	= nr_seq_pedido_cont_p;

--dt_mes_referencia e dt_ano_referencia, sao iguais e completos(com mes e ano).

dt_referencia_w	:= to_date(dt_ano_referencia_w, 'dd/mm/rrrr');

select	count(1)
into STRICT	qt_registros_w

where	trunc(dt_referencia_w,'month') between add_months(trunc(clock_timestamp(),'month'), - 3) and (trunc(clock_timestamp(),'month'));

if (qt_registros_w	> 0) then
	select	count(1)
	into STRICT	qt_benef_pf_co_loc_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	c.ie_preco 		in (2,3)
	and	(a.cd_pf_estipulante IS NOT NULL AND a.cd_pf_estipulante::text <> '')
	and	coalesce(a.cd_cgc_estipulante::text, '') = ''
	and	d.ie_tipo_segurado	= 'B'
	and	d.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pf_pre_loc_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	c.ie_preco 		= 1
	and	(a.cd_pf_estipulante IS NOT NULL AND a.cd_pf_estipulante::text <> '')
	and	coalesce(a.cd_cgc_estipulante::text, '') = ''
	and	d.ie_tipo_segurado	= 'B'
	and	d.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pj_co_loc_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	c.ie_preco 		in (2,3)
	and	coalesce(a.cd_pf_estipulante::text, '') = ''
	and	(a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '')
	and	d.ie_tipo_segurado	= 'B'
	and	d.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pj_pre_loc_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	c.ie_preco 		= 1
	and	coalesce(a.cd_pf_estipulante::text, '') = ''
	and	(a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '')
	and	d.ie_tipo_segurado	= 'B'
	and	d.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pf_co_rep_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d,
		pls_segurado_repasse	e
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	d.nr_sequencia		= e.nr_seq_segurado
	and	(a.cd_pf_estipulante IS NOT NULL AND a.cd_pf_estipulante::text <> '')
	and	coalesce(a.cd_cgc_estipulante::text, '') = ''
	and	d.ie_tipo_segurado	= 'R'
	and	e.ie_tipo_repasse	= 'C'
	and	d.ie_situacao_atend	= 'A'
	and	trunc(dt_referencia_w,'month') between trunc(e.dt_repasse,'month') and trunc(coalesce(e.dt_fim_repasse,clock_timestamp()),'month')
	and	trunc(dt_referencia_w,'month')	>= trunc(e.dt_liberacao,'month');

	select	count(1)
	into STRICT	qt_benef_pf_pre_rep_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d,
		pls_segurado_repasse	e
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	d.nr_sequencia		= e.nr_seq_segurado
	and	(a.cd_pf_estipulante IS NOT NULL AND a.cd_pf_estipulante::text <> '')
	and	coalesce(a.cd_cgc_estipulante::text, '') = ''
	and	d.ie_tipo_segurado	= 'R'
	and	e.ie_tipo_repasse	= 'P'
	and	d.ie_situacao_atend	= 'A'
	and	trunc(dt_referencia_w,'month') between trunc(e.dt_repasse,'month') and trunc(coalesce(e.dt_fim_repasse,clock_timestamp()),'month')
	and	trunc(dt_referencia_w,'month')	>= trunc(e.dt_liberacao,'month');

	select	count(1)
	into STRICT	qt_benef_pj_co_rep_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d,
		pls_segurado_repasse	e
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	d.nr_sequencia		= e.nr_seq_segurado
	and	coalesce(a.cd_pf_estipulante::text, '') = ''
	and	(a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '')
	and	d.ie_tipo_segurado	= 'R'
	and	e.ie_tipo_repasse	= 'C'
	and	d.ie_situacao_atend	= 'A'
	and	trunc(dt_referencia_w,'month') between trunc(e.dt_repasse,'month') and trunc(coalesce(e.dt_fim_repasse,clock_timestamp()),'month')
	and	trunc(dt_referencia_w,'month')	>= trunc(e.dt_liberacao,'month');

	select	count(1)
	into STRICT	qt_benef_pj_pre_rep_w
	from	pls_contrato		a,
		pls_contrato_plano	b,
		pls_plano		c,
		pls_segurado		d,
		pls_segurado_repasse	e
	where	a.nr_sequencia		= b.nr_seq_contrato
	and	b.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= d.nr_seq_contrato
	and	d.nr_sequencia		= e.nr_seq_segurado
	and	coalesce(a.cd_pf_estipulante::text, '') = ''
	and	(a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '')
	and	d.ie_tipo_segurado	= 'R'
	and	e.ie_tipo_repasse	= 'P'
	and	d.ie_situacao_atend	= 'A'
	and	trunc(dt_referencia_w,'month') between trunc(e.dt_repasse,'month') and trunc(coalesce(e.dt_fim_repasse,clock_timestamp()),'month')
	and	trunc(dt_referencia_w,'month')	>= trunc(e.dt_liberacao,'month');

	select	count(1)
	into STRICT	qt_benef_pf_co_rec_w
	from	pls_intercambio		a,
		pls_segurado		b
	where	a.nr_sequencia		= b.nr_seq_intercambio
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	coalesce(a.cd_cgc::text, '') = ''
	and	b.ie_tipo_segurado	in ('C','T')
	and	b.ie_tipo_repasse	= 'C'
	and	b.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pf_pre_rec_w
	from	pls_intercambio		a,
		pls_segurado		b
	where	a.nr_sequencia		= b.nr_seq_intercambio
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	coalesce(a.cd_cgc::text, '') = ''
	and	b.ie_tipo_segurado	in ('C','T')
	and	b.ie_tipo_repasse	= 'P'
	and	b.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pj_co_rec_w
	from	pls_intercambio		a,
		pls_segurado		b
	where	a.nr_sequencia		= b.nr_seq_intercambio
	and	coalesce(a.cd_pessoa_fisica::text, '') = ''
	and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')
	and	b.ie_tipo_segurado	in ('C','T')
	and	b.ie_tipo_repasse	= 'C'
	and	b.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	select	count(1)
	into STRICT	qt_benef_pj_pre_rec_w
	from	pls_intercambio		a,
		pls_segurado		b
	where	a.nr_sequencia		= b.nr_seq_intercambio
	and	coalesce(a.cd_pessoa_fisica::text, '') = ''
	and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')
	and	b.ie_tipo_segurado	in ('C','T')
	and	b.ie_tipo_repasse	= 'P'
	and	b.ie_situacao_atend	= 'A'
	and	dt_contratacao		<= dt_referencia_w;

	ie_status_retorno_w	:= 1;
else
	ie_status_retorno_w	:= 3;
end if;

insert	into ptu_resp_contagem_benef(nr_sequencia, cd_transacao, cd_unimed_destino,
	cd_unimed_requisitante, ie_status_retorno, ie_tipo_cliente,
	nr_seq_contagem_benef, qt_ben_pf_co_loc, qt_ben_pf_pp_loc,
	qt_ben_pf_rec_co, qt_ben_pf_rec_pp, qt_ben_pf_rep_co,
	qt_ben_pf_rep_pp, qt_ben_pj_co_loc, qt_ben_pj_pp_loc,
	qt_ben_pj_rec_co, qt_ben_pj_rec_pp, qt_ben_pj_rep_co,
	qt_ben_pj_rep_pp, dt_atualizacao, dt_atualizacao_nrec,
	nm_usuario, nm_usuario_nrec, nr_versao)
values (nextval('ptu_resp_contagem_benef_seq'), '00431', cd_unimed_destino_w,
	cd_unimed_requisitante_w, ie_status_retorno_w, 'U',
	nr_seq_pedido_cont_p, qt_benef_pf_co_loc_w, qt_benef_pf_pre_loc_w,
	qt_benef_pf_co_rec_w, qt_benef_pf_pre_rec_w, qt_benef_pf_co_rep_w,
	qt_benef_pf_pre_rep_w, qt_benef_pj_co_loc_w, qt_benef_pj_pre_loc_w,
	qt_benef_pj_co_rec_w, qt_benef_pj_pre_rec_w, qt_benef_pj_co_rep_w,
	qt_benef_pj_pre_rep_w, clock_timestamp(), clock_timestamp(),
	nm_usuario_p, nm_usuario_p, nr_versao_w) returning nr_sequencia into nr_seq_ret_cont_p;

commit;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pck.ptu_processa_00430_v70 ( nr_seq_pedido_cont_p ptu_pedido_contagem_benef.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_ret_cont_p INOUT ptu_resp_contagem_benef.nr_sequencia%type) FROM PUBLIC;
