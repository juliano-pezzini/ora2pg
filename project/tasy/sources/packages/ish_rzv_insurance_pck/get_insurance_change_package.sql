-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------
'_-rzvish_-insuranceChange'
*/
CREATE OR REPLACE FUNCTION ish_rzv_insurance_pck.get_insurance_change (nr_seq_fila_p bigint) RETURNS SETOF T_INSURANCE_CHANGE AS $body$
DECLARE


nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;

atend_categoria_convenio_w	atend_categoria_convenio%rowtype;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_sexo_w			pessoa_fisica.ie_sexo%type;
cd_empresa_refer_w		compl_pessoa_fisica.cd_empresa_refer%type;
qt_dias_pagamento_w		pessoa_fisica_taxa.qt_dias_pagamento%type;
nr_seq_episodio_w		episodio_paciente.nr_sequencia%type;

r_insurance_change_w		r_insurance_change;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_interno_w		varchar(80);
ie_sexo_ww			pessoa_fisica.ie_sexo%type;

cd_empresa_w			estabelecimento.cd_empresa%type;
cd_estab_w			atendimento_paciente.cd_estabelecimento%type;
nr_episodio_w			episodio_paciente.nr_episodio%type;
dt_vigencia_w			varchar(255);
ie_obriga_pag_adicional_w	pessoa_fisica_taxa.ie_obriga_pag_adicional%type;
ie_obriga_pag_adic_w		varchar(1);
nr_seq_justificativa_w		pessoa_fisica_taxa.nr_seq_justificativa%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10)			varchar(10)	:=	ish_param_pck.get_separador;
nr_seq_fila_troca_tp_case_w	bigint;

c01 CURSOR FOR
SELECT	substr(ds_family_name,1,30) ds_family_name,
	substr(ds_given_name,1,30) ds_given_name,
	a.dt_nascimento,
	d.cd_cep,
	d.ds_endereco,
	d.ds_municipio,
	d.nr_seq_pais,
	a.ie_sexo,
	a.cd_nacionalidade	
from	pessoa_fisica a,
	person_name b,
	pessoa_titular_convenio c,
	compl_pessoa_fisica d
where	b.nr_sequencia 		= a.nr_seq_person_name
and	d.cd_pessoa_fisica	= a.cd_pessoa_fisica
and	d.ie_tipo_complemento	= '1'
and	a.cd_pessoa_fisica	= c.cd_pessoa_titular
and	c.cd_pessoa_fisica	= cd_pessoa_fisica_w
and	c.cd_convenio		= atend_categoria_convenio_w.cd_convenio
and	c.cd_categoria		= atend_categoria_convenio_w.cd_categoria  LIMIT 1;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	a.cd_cep,
	a.ds_endereco,
	a.ds_municipio,
	a.nr_seq_pais
from	atend_convenio_end_cob a
where	a.nr_atendimento	= atend_categoria_convenio_w.nr_atendimento  LIMIT 1;

c02_w	c02%rowtype;


BEGIN
begin
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
	ie_conversao_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia	= nr_seq_fila_p;
exception
when others then
	null;
end;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);
reg_integracao_w.ie_somente_alterados		:= 'S';


begin
atend_categoria_convenio_w.nr_atendimento	:= obter_valor_campo_separador(nr_seq_documento_w, 1, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
atend_categoria_convenio_w.nr_seq_interno	:= obter_valor_campo_separador(nr_seq_documento_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
nr_seq_episodio_w				:= obter_valor_campo_separador(nr_seq_documento_w, 3, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));

begin
select	b.cd_estabelecimento,
	c.nr_episodio,
	b.cd_pessoa_fisica
into STRICT	cd_estabelecimento_w,
	nr_episodio_w,
	cd_pessoa_fisica_w
FROM estabelecimento a, atendimento_paciente b
LEFT OUTER JOIN episodio_paciente c ON (b.nr_seq_episodio = c.nr_sequencia)
WHERE b.cd_estabelecimento = a.cd_estabelecimento  and b.nr_atendimento = atend_categoria_convenio_w.nr_atendimento;
exception
when others then
	null;
end;

select	cd_estabelecimento,
	ie_tipo_atendimento
into STRICT	cd_estab_w,
	ie_tipo_atendimento_w
from	atendimento_paciente
where	nr_atendimento = atend_categoria_convenio_w.nr_atendimento;

begin
select	nr_sequencia
into STRICT	nr_seq_fila_troca_tp_case_w
from	intpd_fila_transmissao
where	nr_seq_documento	= nr_seq_episodio_w
and	ie_evento		= '220'
and	ie_status		in ('P','AP')  LIMIT 1;
exception
when others then
	nr_seq_fila_troca_tp_case_w := null;
end;

select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estab_w;

reg_integracao_w.nm_tabela 	:= 'ESTABELECIMENTO';
reg_integracao_w.nm_elemento	:= '_-rzvish_-insuranceChange';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'client', 'N', cd_empresa_w, 'S', r_insurance_change_w.client);
intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', cd_estab_w, 'S', r_insurance_change_w.institution);
reg_integracao_w.nm_tabela 		:= 'EPISODIO_PACIENTE';
intpd_processar_atrib_envio(reg_integracao_w, 'NR_EPISODIO', 'patcaseid', 'N', nr_episodio_w, 'N', r_insurance_change_w.patcaseid);

select	*
into STRICT	atend_categoria_convenio_w
from	atend_categoria_convenio
where	nr_seq_interno = atend_categoria_convenio_w.nr_seq_interno;
exception
when others then
	null;
end;

begin
select	ie_sexo
into STRICT	ie_sexo_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;
exception
when others then
	null;
end;

begin
select	a.cd_pessoa_fisica_externo
into STRICT	r_insurance_change_w.patientid
from	pf_codigo_externo a
where	a.cd_pessoa_fisica = cd_pessoa_fisica_w
and	a.ie_tipo_codigo_externo = 'ISH'  LIMIT 1;
exception
when others then
	null;
end;

reg_integracao_w.nm_elemento		:= 'InsurDataCh';
reg_integracao_w.nm_tabela 		:= 'PF_CODIGO_EXTERNO';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_PESSOA_FISICA_EXTERNO', 'patientid', 'N', r_insurance_change_w.patientid, 'N', r_insurance_change_w.patientid);

select	max(cd_empresa_refer)
into STRICT	cd_empresa_refer_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	(cd_empresa_refer IS NOT NULL AND cd_empresa_refer::text <> '');

select	coalesce(max(ie_tipo_convenio),0)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= atend_categoria_convenio_w.cd_convenio;

begin
select	qt_dias_pagamento,
	ie_obriga_pag_adicional,
	nr_seq_justificativa
into STRICT	qt_dias_pagamento_w,
	ie_obriga_pag_adicional_w,
	nr_seq_justificativa_w
from (
SELECT	qt_dias_pagamento,
	ie_obriga_pag_adicional,
	nr_seq_justificativa
from	pessoa_fisica_taxa
where	nr_atendimento	= atend_categoria_convenio_w.nr_atendimento
and	nr_seq_atecaco = atend_categoria_convenio_w.nr_seq_interno
and	ie_tipo_convenio_w <> 1
order by dt_pagamento desc, dt_atualizacao desc) alias0 LIMIT 1;
exception
when others then
	null;
end;

reg_integracao_w.nm_tabela 	:= 'COMPL_PESSOA_FISICA';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA_REFER','agnam', 'N', cd_empresa_refer_w, 'S', r_insurance_change_w.agnam);
intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA_REFER','agnamx', 'S', cd_empresa_refer_w, 'N', r_insurance_change_w.agnamx);

if (ie_tipo_atendimento_w = 1) then --Envia estes dados somente para internado, para nao ocorrer de limpar para outpatient.
    reg_integracao_w.nm_tabela  := 'PESSOA_FISICA_TAXA';
    reg_integracao_w.ie_somente_alterados := 'N';
    intpd_processar_atrib_envio(reg_integracao_w, 'QT_DIAS_PAGAMENTO','vtage', 'N', qt_dias_pagamento_w, 'N', r_insurance_change_w.vtage);
    r_insurance_change_w.vtagex :=  'X';
    intpd_processar_atrib_envio(reg_integracao_w, 'IE_OBRIGA_PAG_ADICIONAL', 'pflzz', 'N', ie_obriga_pag_adicional_w, 'N', ie_obriga_pag_adic_w);

    if (ie_obriga_pag_adic_w = 'S') then
        r_insurance_change_w.pflzz  := 'X';
    end if;

    r_insurance_change_w.pflzzx := 'X';
    intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_JUSTIFICATIVA', 'nzzgr', 'N', nr_seq_justificativa_w, 'S', r_insurance_change_w.nzzgr);
    r_insurance_change_w.nzzgrx := 'X';
    reg_integracao_w.ie_somente_alterados := 'S';
end if;

reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';
intpd_processar_atrib_envio(reg_integracao_w, 'IE_SEXO','verge', 'N', ie_sexo_w, 'N', ie_sexo_ww);
r_insurance_change_w.verge	:= intpd_conv('PESSOA_FISICA', 'IE_GENDER_NUMBER', ie_sexo_ww, reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, ie_conversao_w);
intpd_processar_atrib_envio(reg_integracao_w, 'IE_SEXO','vergex', 'S', ie_sexo_w, 'N', r_insurance_change_w.vergex);

reg_integracao_w.nm_tabela 	:= 'ATEND_CATEGORIA_CONVENIO';
if (atend_categoria_convenio_w.nr_seq_interno IS NOT NULL AND atend_categoria_convenio_w.nr_seq_interno::text <> '') then	
	begin
	
	if (atend_categoria_convenio_w.cd_convenio IS NOT NULL AND atend_categoria_convenio_w.cd_convenio::text <> '') then
		begin
		select	min(intpd_conv('ATEND_CATEGORIA_CONVENIO', 'NR_SEQ_INTERNO', a.nr_seq_interno, reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, 'E'))
		into STRICT	nr_seq_interno_w
		from	atend_categoria_convenio a,
			atendimento_paciente b
		where	a.nr_atendimento	= b.nr_atendimento
		and	b.nr_seq_episodio	= nr_seq_episodio_w
		and	a.cd_convenio	= atend_categoria_convenio_w.cd_convenio;
		exception
		when others then
			nr_seq_interno_w	:=	null;	
		end;
	end if;

	if (coalesce(nr_seq_interno_w,'X')  = 'X') then
		begin
		select	max(somente_numero(obter_valor_campo_separador(ds_chave, 2, ';')))
		into STRICT	atend_categoria_convenio_w.cd_convenio
		from	intpd_reg_alteracao a,
			intpd_reg_alter_fila b
		where	a.nr_sequencia = b.nr_seq_reg_alter
		and	b.nr_seq_fila = nr_seq_fila_p;
		
		if (atend_categoria_convenio_w.cd_convenio IS NOT NULL AND atend_categoria_convenio_w.cd_convenio::text <> '') then
			select	max(intpd_conv('ATEND_CATEGORIA_CONVENIO', 'NR_SEQ_INTERNO', coalesce(b.ds_valor_new, b.ds_valor_old),
					reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, 'E'))
			into STRICT	nr_seq_interno_w
			from	intpd_reg_alteracao a,
				intpd_reg_alter_campo b
			where	a.nr_sequencia = b.nr_sequencia
			and	a.nm_tabela = 'ATEND_CATEGORIA_CONVENIO'
			and	b.nm_atributo = 'NR_SEQ_INTERNO'
			and	exists (	SELECT	1
					from	atendimento_paciente y,
						intpd_reg_alter_campo x
					where	y.nr_seq_episodio = nr_seq_episodio_w
					and	x.nr_sequencia = a.nr_sequencia
					and	coalesce(x.ds_valor_new, x.ds_valor_old) like to_char(y.nr_atendimento)
					and	x.nm_atributo = 'NR_ATENDIMENTO')
			and	exists (	select	1
					from	intpd_reg_alter_campo x
					where	x.nr_sequencia = a.nr_sequencia
					and	coalesce(x.ds_valor_new, x.ds_valor_old) like to_char(atend_categoria_convenio_w.cd_convenio)
					and	x.nm_atributo = 'CD_CONVENIO');
		end if;
		exception
		when others then
			nr_seq_interno_w	:=	null;
		end;
	end if;
	
	if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') then
		r_insurance_change_w.lfdnr := obter_valor_campo_separador(nr_seq_interno_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
	else
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO','lfdnr', 'N', atend_categoria_convenio_w.nr_seq_interno, 'S', nr_seq_interno_w);
		r_insurance_change_w.lfdnr := obter_valor_campo_separador(nr_seq_interno_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
	end if;
	
	begin
	select	cd_cgc
	into STRICT	r_insurance_change_w.kostr
	from	convenio
	where	cd_convenio = atend_categoria_convenio_w.cd_convenio;
	exception
	when others then
		r_insurance_change_w.kostr	:=	null;
	end;
	
	begin
	select	'X'
	into STRICT	r_insurance_change_w.patkz
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_convenio_partic = atend_categoria_convenio_w.cd_convenio;
	
	exception
	when others then
		r_insurance_change_w.patkz	:=	null;
	end;
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_PRIORIDADE','rangf', 'N', atend_categoria_convenio_w.nr_prioridade, 'N', r_insurance_change_w.rangf);
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_PRIORIDADE','rangfx', 'S', atend_categoria_convenio_w.nr_prioridade, 'N', r_insurance_change_w.rangfx);
	
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_CONVENIADO','mgart', 'N', atend_categoria_convenio_w.ie_tipo_conveniado, 'S', r_insurance_change_w.mgart);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_CONVENIADO','mgartx', 'S', atend_categoria_convenio_w.ie_tipo_conveniado, 'N', r_insurance_change_w.mgartx);
	
	dt_vigencia_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_INICIO_VIGENCIA','verab', 'N', atend_categoria_convenio_w.dt_inicio_vigencia, 'N', dt_vigencia_w);
	r_insurance_change_w.verab	:= to_char(to_date(dt_vigencia_w), 'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_INICIO_VIGENCIA','verabx', 'S', atend_categoria_convenio_w.dt_inicio_vigencia, 'N', r_insurance_change_w.verabx);
		
	dt_vigencia_w	:= null;
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_FINAL_VIGENCIA','verbi', 'N', atend_categoria_convenio_w.dt_final_vigencia, 'N', dt_vigencia_w);
	r_insurance_change_w.verbi	:= to_char(to_date(dt_vigencia_w), 'yyyy-mm-dd');
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_FINAL_VIGENCIA','verbix', 'S', atend_categoria_convenio_w.dt_final_vigencia, 'N', r_insurance_change_w.verbix);

--	r_insurance_change_w.vkvst		:=
--	r_insurance_change_w.vkvsty	:=
--	r_insurance_change_w.vkvse		:=
--	r_insurance_change_w.vkvsex	:=
--	r_insurance_change_w.vknra		:=
--	r_insurance_change_w.vknrax	:=
--	r_insurance_change_w.vknum	:=
--	r_insurance_change_w.vknumx	:=
--	r_insurance_change_w.vcend	:=
--	r_insurance_change_w.vcendx	:=
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_USUARIO_CONVENIO','vernr', 'N', atend_categoria_convenio_w.cd_usuario_convenio, 'N', r_insurance_change_w.vernr);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_USUARIO_CONVENIO','vernrx', 'S', atend_categoria_convenio_w.cd_usuario_convenio, 'N', r_insurance_change_w.vernrx);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_PLANO_CONVENIO','vtrty', 'N', atend_categoria_convenio_w.cd_plano_convenio, 'S', r_insurance_change_w.vtrty);
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_PLANO_CONVENIO','vtrtyx', 'S', atend_categoria_convenio_w.cd_plano_convenio, 'N', r_insurance_change_w.vtrtyx);

	/*hvvernn => last name of main insured person
	hvvervn => first name of main insured person
	hvvergb => date of birth of main person insured
	hvpstlz => postal code of city of main person insured
	hvstras => street of main person insured
	hvort => city of main person insured
	hvland => country key of main person insured
	hvverge => sex of person insured of main person insured
	hvverna => nationality of person of main person insured*/
	
	reg_integracao_w.ie_somente_alterados	:= 'N'; --para sempre enviar os dados do maininsuranceperson, mesmo no change
	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
		reg_integracao_w.nm_tabela 	:= 'PERSON_NAME';
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME', 'hvvernn', 'N', c01_w.ds_family_name, 'N', r_insurance_change_w.hvvernn );
		r_insurance_change_w.hvvernnx	:= 'X';
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME', 'hvvervn', 'N', c01_w.ds_given_name, 'N', r_insurance_change_w.hvvervn );
		r_insurance_change_w.hvvervnx	:= 'X';
		
		r_insurance_change_w.hvvergb	:= to_char(c01_w.dt_nascimento, 'yyyy-mm-dd');
		r_insurance_change_w.hvvergbx	:= 'X';
		
		reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';	
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_GENDER_NUMBER', 'hvverge', 'N', c01_w.ie_sexo, 'S', r_insurance_change_w.hvverge );
		r_insurance_change_w.hvvergex	:= 'X';
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_NACIONALIDADE', 'hvverna', 'N', c01_w.cd_nacionalidade, 'S', r_insurance_change_w.hvverna );
		r_insurance_change_w.hvvernax	:= 'X';

		reg_integracao_w.nm_tabela 	:= 'COMPL_PESSOA_FISICA';
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'hvpstlz', 'N', c01_w.cd_cep, 'N', r_insurance_change_w.hvpstlz );
		r_insurance_change_w.hvpstlzx	:= 'X';
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'hvstras', 'N', c01_w.ds_endereco, 'N', r_insurance_change_w.hvstras );
		r_insurance_change_w.hvstrasx	:= 'X';
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'hvort', 'N', c01_w.ds_municipio, 'N', r_insurance_change_w.hvort );
		r_insurance_change_w.hvortx	:= 'X';
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'hvland', 'N', c01_w.nr_seq_pais, 'S', r_insurance_change_w.hvland );
		r_insurance_change_w.hvlandx	:= 'X';
	
	
		if (r_insurance_change_w.patkz = 'X') then
			begin
			reg_integracao_w.nm_tabela 	:= 'PERSON_NAME';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME', 'szvernn', 'N', c01_w.ds_family_name, 'N', r_insurance_change_w.szvernn );
			r_insurance_change_w.szvernnx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME', 'szvervn', 'N', c01_w.ds_given_name, 'N', r_insurance_change_w.szvervn );
			r_insurance_change_w.szvervnx	:= 'X';
			
			r_insurance_change_w.szvergb	:= to_char(c01_w.dt_nascimento, 'yyyy-mm-dd');
			r_insurance_change_w.szvergbx	:= 'X';
			
			reg_integracao_w.nm_tabela 	:= 'PESSOA_FISICA';	
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_GENDER_NUMBER', 'szverge', 'N', c01_w.ie_sexo, 'S', r_insurance_change_w.szverge );
			r_insurance_change_w.szvergex	:= 'X';

			reg_integracao_w.nm_tabela 	:= 'COMPL_PESSOA_FISICA';
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'szpstlz', 'N', c01_w.cd_cep, 'N', r_insurance_change_w.szpstlz );
			r_insurance_change_w.szpstlzx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'szstras', 'N', c01_w.ds_endereco, 'N', r_insurance_change_w.szstras );
			r_insurance_change_w.szstrasx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'szort', 'N', c01_w.ds_municipio, 'N', r_insurance_change_w.szort );
			r_insurance_change_w.szortx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'szland', 'N', c01_w.nr_seq_pais, 'S', r_insurance_change_w.szland );
			r_insurance_change_w.szlandx	:= 'X';
			r_insurance_change_w.abree	:= null;
			r_insurance_change_w.abreex	:= 'X';
			
			end;
		end if;
		
	end loop;
	close c01;

	if (atend_categoria_convenio_w.ie_tipo_conveniado = 6) then
		open c02;
		loop
		fetch c02 into
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			reg_integracao_w.nm_tabela 		:= 'ATEND_CONVENIO_END_COB';
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'szpstlz', 'N', c02_w.cd_cep, 'N', r_insurance_change_w.szpstlz );
			r_insurance_change_w.szpstlzx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'szstras', 'N', c02_w.ds_endereco, 'N', r_insurance_change_w.szstras );
			r_insurance_change_w.szstrasx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'szort', 'N', c02_w.ds_municipio, 'N', r_insurance_change_w.szort );
			r_insurance_change_w.szortx	:= 'X';
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'szland', 'N', c02_w.nr_seq_pais, 'S', r_insurance_change_w.szland );
			r_insurance_change_w.szlandx	:= 'X';
			r_insurance_change_w.abree	:= 'X';
			r_insurance_change_w.abreex	:= 'X';
		end loop;
		close c02;
	end if;

	begin
	select	CASE WHEN somente_numero(b.cd_cnes)=0 THEN  null  ELSE somente_numero(b.cd_cnes) END
	into STRICT	r_insurance_change_w.vknum
	from	convenio a,
		pessoa_juridica b
	where	a.cd_convenio	= atend_categoria_convenio_w.cd_convenio
	and	a.cd_cgc	= b.cd_cgc;	
	exception
	when others then		
		r_insurance_change_w.vknum	:= null;
	end;
	
	if (somente_numero(r_insurance_change_w.vknum) > 0) then
		r_insurance_change_w.vknumx		:= 'X';
	else
		r_insurance_change_w.vknumx		:= null;
	end if;
	
--	r_insurance_change_w.szvernn		:=
--	r_insurance_change_w.szvernnx		:=
--	r_insurance_change_w.szvervn		:=
--	r_insurance_change_w.szvervnx		:=
--	r_insurance_change_w.szvergb		:=
--	r_insurance_change_w.szvergbx		:=
--	r_insurance_change_w.szpstlz		:=
--	r_insurance_change_w.szpstlzx		:=
--	r_insurance_change_w.szstras		:=
--	r_insurance_change_w.szstraxx		:=
--	r_insurance_change_w.szort			:=
--	r_insurance_change_w.szortx			:=
--	r_insurance_change_w.szland		:=
--	r_insurance_change_w.szlandx		:=
--	r_insurance_change_w.szverge		:=
--	r_insurance_change_w.szvergex		:=
--	r_insurance_change_w.szverna		:=
--	r_insurance_change_w.szvernax		:=
--	r_insurance_change_w.agpstlz		:=
--	r_insurance_change_w.agpstlzx		:=
--	r_insurance_change_w.agstras		:=
--	r_insurance_change_w.agstraxx		:=
--	r_insurance_change_w.agort			:=
--	r_insurance_change_w.agortx			:=
--	r_insurance_change_w.agverna		:=
--	r_insurance_change_w.agvernax		:=
--	r_insurance_change_w.abree			:=
--	r_insurance_change_w.abreex		:=
--	r_insurance_change_w.copreceipt		:=
--	r_insurance_change_w.copreceiptx		:=
--	r_insurance_change_w.lncrd			:=
--	r_insurance_change_w.lncrdx			:=
--	r_insurance_change_w.lncrdpat		:=
--	r_insurance_change_w.lncrdpatx		:=
--	r_insurance_change_w.lncrdins		:=
--	r_insurance_change_w.lncrdinsx		:=
--	r_insurance_change_w.egkbespersgru		:=
--	r_insurance_change_w.egkbespersgrux		:=
--	r_insurance_change_w.egkdmpkz		:=
--	r_insurance_change_w.egkdmpkzx		:=
--	r_insurance_change_w.egkwop		:=
--	r_insurance_change_w.egkwopx		:=	
	end;
end if;
	
RETURN NEXT r_insurance_change_w;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_rzv_insurance_pck.get_insurance_change (nr_seq_fila_p bigint) FROM PUBLIC;
