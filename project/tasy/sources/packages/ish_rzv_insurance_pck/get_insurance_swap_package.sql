-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------
'_-rzvish_-insuranceSwapInsprov'
*/
CREATE OR REPLACE FUNCTION ish_rzv_insurance_pck.get_insurance_swap (nr_seq_fila_p bigint) RETURNS SETOF T_INSURANCE_SWAP AS $body$
DECLARE


nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;

atend_categoria_convenio_w	atend_categoria_convenio%rowtype;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nr_seq_episodio_w		episodio_paciente.nr_sequencia%type;

r_insurance_swap_w		r_insurance_swap;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_interno_w		varchar(80);

cd_empresa_w			estabelecimento.cd_empresa%type;
cd_estab_w			atendimento_paciente.cd_estabelecimento%type;
nr_episodio_w			episodio_paciente.nr_episodio%type;
current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10)			varchar(10)	:=	ish_param_pck.get_separador;


BEGIN
begin
  select  a.nr_seq_documento
  into STRICT    nr_seq_documento_w
  from    intpd_fila_transmissao a,
          intpd_eventos_sistema b
  where   a.nr_seq_evento_sistema = b.nr_sequencia
  and     a.nr_sequencia	= nr_seq_fila_p;
exception
when others then
	null;
end;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

begin
atend_categoria_convenio_w.nr_atendimento	:= obter_valor_campo_separador(nr_seq_documento_w, 1, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
atend_categoria_convenio_w.nr_seq_interno	:= obter_valor_campo_separador(nr_seq_documento_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
nr_seq_episodio_w := obter_valor_campo_separador(nr_seq_documento_w, 3, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));

begin
  select	b.cd_estabelecimento,
          c.nr_episodio,
          b.cd_pessoa_fisica
  into STRICT    cd_estabelecimento_w,
          nr_episodio_w,
          cd_pessoa_fisica_w
  FROM estabelecimento a, atendimento_paciente b
LEFT OUTER JOIN episodio_paciente c ON (b.nr_seq_episodio = c.nr_sequencia)
WHERE b.cd_estabelecimento = a.cd_estabelecimento  and b.nr_atendimento = atend_categoria_convenio_w.nr_atendimento;
exception
when others then
	null;
end;

select  cd_estabelecimento
into STRICT    cd_estab_w
from    atendimento_paciente
where   nr_atendimento = atend_categoria_convenio_w.nr_atendimento;

select  cd_empresa
into STRICT    cd_empresa_w
from    estabelecimento
where   cd_estabelecimento = cd_estab_w;

reg_integracao_w.nm_tabela 	:= 'ESTABELECIMENTO';
reg_integracao_w.nm_elemento	:= '_-rzvish_-insuranceSwapInsprov';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'client', 'N', cd_empresa_w, 'S', r_insurance_swap_w.client);
intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', cd_estab_w, 'S', r_insurance_swap_w.institution);
reg_integracao_w.nm_tabela 		:= 'EPISODIO_PACIENTE';
intpd_processar_atrib_envio(reg_integracao_w, 'NR_EPISODIO', 'patcaseid', 'N', nr_episodio_w, 'N', r_insurance_swap_w.patcaseid);

select	*
into STRICT	atend_categoria_convenio_w
from	atend_categoria_convenio
where	nr_seq_interno = atend_categoria_convenio_w.nr_seq_interno;
exception
when others then
	null;
end;

begin
  select  a.cd_pessoa_fisica_externo
  into STRICT    r_insurance_swap_w.patientid
  from    pf_codigo_externo a
  where   a.cd_pessoa_fisica = cd_pessoa_fisica_w
  and     a.ie_tipo_codigo_externo = 'ISH'  LIMIT 1;
exception
when others then
	null;
end;

reg_integracao_w.nm_elemento		:= 'NewInsurData';
reg_integracao_w.nm_tabela 		:= 'PF_CODIGO_EXTERNO';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_PESSOA_FISICA_EXTERNO', 'patientid', 'N', r_insurance_swap_w.patientid, 'N', r_insurance_swap_w.patientid);

reg_integracao_w.nm_tabela 	:= 'ATEND_CATEGORIA_CONVENIO';
if (atend_categoria_convenio_w.nr_seq_interno IS NOT NULL AND atend_categoria_convenio_w.nr_seq_interno::text <> '') then	
	begin
	
	if (atend_categoria_convenio_w.cd_convenio IS NOT NULL AND atend_categoria_convenio_w.cd_convenio::text <> '') then
		begin
      select  min(intpd_conv('ATEND_CATEGORIA_CONVENIO', 'NR_SEQ_INTERNO', a.nr_seq_interno, reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, 'E'))
      into STRICT    nr_seq_interno_w
      from    atend_categoria_convenio a,
              atendimento_paciente b
      where   a.nr_atendimento	= b.nr_atendimento
      and     b.nr_seq_episodio	= nr_seq_episodio_w
      and     a.cd_convenio	= atend_categoria_convenio_w.cd_convenio;
		exception
		when others then
			nr_seq_interno_w	:=	null;	
		end;
	end if;

	if (coalesce(nr_seq_interno_w,'X')  = 'X') then
		begin
      select  max(somente_numero(obter_valor_campo_separador(ds_chave, 2, ';')))
      into STRICT    atend_categoria_convenio_w.cd_convenio
      from    intpd_reg_alteracao a,
              intpd_reg_alter_fila b
      where   a.nr_sequencia = b.nr_seq_reg_alter
      and     b.nr_seq_fila = nr_seq_fila_p;

      if (atend_categoria_convenio_w.cd_convenio IS NOT NULL AND atend_categoria_convenio_w.cd_convenio::text <> '') then
        select  max(intpd_conv('ATEND_CATEGORIA_CONVENIO', 'NR_SEQ_INTERNO', coalesce(b.ds_valor_new, b.ds_valor_old),
                reg_integracao_w.nr_seq_regra_conversao, reg_integracao_w.ie_conversao, 'E'))
        into STRICT    nr_seq_interno_w
        from    intpd_reg_alteracao a,
                intpd_reg_alter_campo b
        where   a.nr_sequencia = b.nr_sequencia
        and     a.nm_tabela = 'ATEND_CATEGORIA_CONVENIO'
        and     b.nm_atributo = 'NR_SEQ_INTERNO'
        and	exists ( SELECT  1
                    from    atendimento_paciente y,
                            intpd_reg_alter_campo x
                    where   y.nr_seq_episodio = nr_seq_episodio_w
                    and     x.nr_sequencia = a.nr_sequencia
                    and     coalesce(x.ds_valor_new, x.ds_valor_old) like to_char(y.nr_atendimento)
                    and     x.nm_atributo = 'NR_ATENDIMENTO')
        and	exists (	select  1
                    from    intpd_reg_alter_campo x
                    where   x.nr_sequencia = a.nr_sequencia
                    and     coalesce(x.ds_valor_new, x.ds_valor_old) like to_char(atend_categoria_convenio_w.cd_convenio)
                    and     x.nm_atributo = 'CD_CONVENIO');
      end if;
		exception
		when others then
			nr_seq_interno_w	:=	null;
		end;
	end if;
	
	if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') then
		r_insurance_swap_w.lfdnr := obter_valor_campo_separador(nr_seq_interno_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		reg_integracao_w.nm_elemento	:= '_-rzvish_-insuranceSwapInsprov';
		r_insurance_swap_w.currentlfdnr := obter_valor_campo_separador(nr_seq_interno_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		reg_integracao_w.nm_elemento		:= 'NewInsurData';
	else
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_INTERNO','lfdnr', 'N', atend_categoria_convenio_w.nr_seq_interno, 'S', nr_seq_interno_w);
		r_insurance_swap_w.lfdnr := obter_valor_campo_separador(nr_seq_interno_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		reg_integracao_w.nm_elemento	:= '_-rzvish_-insuranceSwapInsprov';
		r_insurance_swap_w.currentlfdnr := obter_valor_campo_separador(nr_seq_interno_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		reg_integracao_w.nm_elemento		:= 'NewInsurData';
	end if;

	begin
	  select  cd_cgc
	  into STRICT    r_insurance_swap_w.kostr
	  from    convenio
	  where   cd_convenio = atend_categoria_convenio_w.cd_convenio;
	exception
	when others then
	  r_insurance_swap_w.kostr	:=	null;
	end;

	begin
    select  'X'
    into STRICT    r_insurance_swap_w.patkz
    from    parametro_faturamento
    where   cd_estabelecimento = cd_estabelecimento_w
    and     cd_convenio_partic = atend_categoria_convenio_w.cd_convenio;

	exception
	when others then
	  r_insurance_swap_w.patkz	:=	null;
	end;
	
	end;

  r_insurance_swap_w.storn  :=  '';
end if;
	
RETURN NEXT r_insurance_swap_w;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_rzv_insurance_pck.get_insurance_swap (nr_seq_fila_p bigint) FROM PUBLIC;
