-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE ish_rzv_insurance_pck.get_egk_create_response (nr_sequencia_p bigint, ds_xml_p text) AS $body$
DECLARE


ds_erro_w			varchar(4000);
xml_w				xml;

c01 CURSOR FOR
SELECT  a.lncrd,
	a.lncrdpat,
	a.lncrdins,
	a.retorno
from (select	lncrd,
		lncrdpat,
		lncrdins,
		retorno
	from	xmltable(
		xmlnamespaces(
		'urn:sap-com:document:sap:soap:functions:mc-style' as "urn",
		'http://schemas.xmlsoap.org/soap/envelope/' as "soap-env"),
		'soap-env:Envelope/soap-env:Body/urn:_-rzvish_-egkCreateResponse' passing xml_w columns
	lncrd		varchar(10)	path	'Lncrd',
	lncrdpat	varchar(5)	path	'LncrdPat',
	lncrdins	varchar(5)	path	'LncrdIns',
	retorno  	xml		path	'Return')
	where	length(lncrd) > 0
	
union all

	SELECT	lncrd,
		lncrdpat,
		lncrdins,
		retorno
	from	xmltable(
		xmlnamespaces(
		'urn:sap-com:document:sap:soap:functions:mc-style' as "urn",
		'http://schemas.xmlsoap.org/soap/envelope/' as "soap-env"),
		'soap-env:Envelope/soap-env:Body/urn:_-rzvish_-egkCreateResponse' passing xml_w columns
	lncrd		varchar(10)	path	'LNCRD',
	lncrdpat	varchar(5)	path	'LNCRDPAT',
	lncrdins	varchar(5)	path	'LNCRDINS',
	retorno 	xml		path	'RETURN')
	where	length(lncrd) > 0) a;

c01_w	c01%rowtype;

ie_status_w			intpd_fila_transmissao.ie_status%type		:=	'S';
ie_tipo_erro_w			intpd_fila_transmissao.ie_tipo_erro%type	:=	'F';
nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
nr_seq_pf_egk_w			pessoa_fisica_egk.nr_sequencia%type;
nr_doc_externo_w		varchar(40);


BEGIN
CALL intpd_inicializacao(nr_sequencia_p);
ish_converter_response(nr_sequencia_p, ds_xml_p, ie_status_w, ie_tipo_erro_w, xml_w);

if (ie_status_w = 'E') then
	update	intpd_fila_transmissao
	set	ie_status = ie_status_w,
		ie_tipo_erro = ie_tipo_erro_w,
		nr_doc_externo  = NULL,
		ie_response_procedure = 'S',
		ds_log  = NULL,
		dt_atualizacao = clock_timestamp(),
		ds_xml_retorno = ds_xml_p
	where	nr_sequencia = nr_sequencia_p;
else
	begin
	select	a.nr_seq_documento,		
		b.nr_seq_regra_conv
	into STRICT	nr_seq_documento_w,		
		nr_seq_regra_w
	from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
	where	a.nr_seq_evento_sistema = b.nr_sequencia
	and	a.nr_sequencia	= nr_sequencia_p;
	
	nr_seq_pf_egk_w		:= obter_valor_campo_separador(nr_seq_documento_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
	
	open C01;
	loop
	fetch C01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_doc_externo_w	:=	substr( c01_w.lncrd || current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10) || c01_w.lncrdpat || current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10) || c01_w.lncrdins, 1, 40);
		
		CALL gerar_conv_meio_externo(
			null,
			'PESSOA_FISICA_EGK',
			'NR_SEQUENCIA',
			nr_seq_pf_egk_w,
			nr_doc_externo_w,
			null,
			nr_seq_regra_w,
			'A',
			'INTPDTASY');
		end;
	end loop;
	close C01;
	
	update	intpd_fila_transmissao
	set	ie_status 		= coalesce(ie_status_w,'S'),
		nr_doc_externo 		= nr_doc_externo_w,
		ie_response_procedure	= 'S',
		ds_xml_retorno		= ds_xml_p
	where	nr_sequencia 		= nr_sequencia_p;
	exception
	when others then
		ds_erro_w	:=	substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);

		rollback;

		update	intpd_fila_transmissao
		set	ie_status 			= 'E',
			ie_response_procedure	= 'S',
			ds_log 			= ds_erro_w,
			ds_xml_retorno		= ds_xml_p
		where	nr_sequencia 		= nr_sequencia_p;
	end;
end if;	
commit;
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_rzv_insurance_pck.get_egk_create_response (nr_sequencia_p bigint, ds_xml_p text) FROM PUBLIC;
