-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION ish_rzv_insurance_pck.get_egk_create (nr_seq_fila_p bigint) RETURNS SETOF T_EGK_CREATE AS $body$
DECLARE



nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_empresa_w			empresa.cd_empresa%type;
ds_xml_pessoa_w 		pessoa_fisica_egk.ds_xml_pessoa%type;
ds_xml_convenio_w		pessoa_fisica_egk.ds_xml_convenio%type;
ds_xml_certificado_w		pessoa_fisica_egk.ds_xml_certificado%type;
nr_seq_pf_egk_w			pessoa_fisica_egk.nr_sequencia%type;
nr_seq_episodio_w		episodio_paciente.nr_sequencia%type;
nr_episodio_w			episodio_paciente.nr_episodio%type;
ds_xml_conv1_w			text;
ds_xml_conv2_w			text;
r_egk_create_w			r_egk_create;
ds_name_space_w			varchar(255);
current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10)			varchar(10)	:= ish_param_pck.get_separador;


BEGIN
begin
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
	ie_conversao_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia	= nr_seq_fila_p;
exception
when others then
	null;
end;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
nr_seq_episodio_w	:= obter_valor_campo_separador(nr_seq_documento_w, 1, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
nr_seq_pf_egk_w		:= obter_valor_campo_separador(nr_seq_documento_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));

begin
select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;
exception
when others then
	cd_estabelecimento_w	:= null;
end;

begin
select	ds_xml_pessoa,
	ds_xml_convenio,
	ds_xml_certificado
into STRICT	ds_xml_pessoa_w,
	ds_xml_convenio_w,
	ds_xml_certificado_w
from	pessoa_fisica_egk
where	nr_sequencia	= nr_seq_pf_egk_w;
exception
when others then
	null;
end;

if (ds_xml_pessoa_w IS NOT NULL AND ds_xml_pessoa_w::text <> '') then
	begin
	ds_xml_pessoa_w	:= replace(ds_xml_pessoa_w, 'vsdp:','');
	ds_xml_pessoa_w	:= replace(ds_xml_pessoa_w, ':vsdp','');
	ds_xml_pessoa_w := substr(ds_xml_pessoa_w,instr(ds_xml_pessoa_w,'<UC_PersoenlicheVersichertendatenXML',1,1),4000);
	ds_xml_pessoa_w	:= '<ListOfDocs>' || ds_xml_pessoa_w || '</ListOfDocs>';
	ds_xml_pessoa_w	:= ish_rzv_insurance_pck.replace_character_tag_xml(ds_xml_pessoa_w);
	end;
end if;

if (ds_xml_certificado_w IS NOT NULL AND ds_xml_certificado_w::text <> '') then
	begin
		ds_xml_certificado_w := substr(ds_xml_certificado_w, instr(ds_xml_certificado_w, '<PN', 1, 1), 4000);
		ds_xml_certificado_w := replace(ds_xml_certificado_w, CHR(10), ' ');
		ds_xml_certificado_w := ish_rzv_insurance_pck.replace_character_tag_xml(ds_xml_certificado_w);
	end;
end if;

begin
select	max(nr_episodio)
into STRICT	nr_episodio_w
from	episodio_paciente
where	nr_sequencia = nr_seq_episodio_w;
exception
when others then
	nr_episodio_w	:= null;
end;

if (coalesce(ds_xml_convenio_w,'NULL') <> 'NULL') then
	SELECT * FROM ish_rzv_insurance_pck.get_xml_convenio_separado(ds_xml_convenio_w, ds_xml_conv1_w, ds_xml_conv2_w) INTO STRICT ds_xml_conv1_w, ds_xml_conv2_w;
end if;

reg_integracao_w.nm_tabela 		:= 'ESTABELECIMENTO';
reg_integracao_w.nm_elemento		:= '_-rzvish_-egkCreate';

intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'client', 'N', cd_empresa_w, 'S', r_egk_create_w.client);
intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', cd_estabelecimento_w, 'S', r_egk_create_w.institution);

reg_integracao_w.nm_tabela 		:= 'EPISODIO_PACIENTE';
intpd_processar_atrib_envio(reg_integracao_w, 'NR_EPISODIO', 'patcaseid', 'N', nr_episodio_w, 'N', r_egk_create_w.patcaseid);

reg_integracao_w.nm_tabela		:= 'PESSOA_FISICA_EGK';
intpd_processar_atrib_envio(reg_integracao_w, 'DS_XML_PESSOA', 'inputpd', 'N', ds_xml_pessoa_w, 'N', r_egk_create_w.inputpd);
intpd_processar_atrib_envio(reg_integracao_w, 'DS_XML_CONVENIO', 'inputvd', 'N', ds_xml_conv1_w, 'N', r_egk_create_w.inputvd);
intpd_processar_atrib_envio(reg_integracao_w, 'DS_XML_CONVENIO', 'inputgvd', 'N', ds_xml_conv2_w, 'N', r_egk_create_w.inputgvd);
intpd_processar_atrib_envio(reg_integracao_w, 'DS_XML_CERTIFICADO', 'inputpn', 'N', ds_xml_certificado_w, 'N', r_egk_create_w.inputpn);


RETURN NEXT r_egk_create_w;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_rzv_insurance_pck.get_egk_create (nr_seq_fila_p bigint) FROM PUBLIC;
