-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------
'_-rzvish_-insuranceCreate'
*/
CREATE OR REPLACE FUNCTION ish_rzv_insurance_pck.get_insurance_create (nr_seq_fila_p bigint) RETURNS SETOF T_INSURANCE_CREATE AS $body$
DECLARE




nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;

atend_categoria_convenio_w		atend_categoria_convenio%rowtype;

cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

r_insurance_create_w		r_insurance_create;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;

cd_empresa_w			estabelecimento.cd_empresa%type;
cd_estab_w			atendimento_paciente.cd_estabelecimento%type;
nr_episodio_w			episodio_paciente.nr_episodio%type;
ie_sexo_w			pessoa_fisica.ie_sexo%type;
cd_pessoa_fisica_externo_w		pf_codigo_externo.cd_pessoa_fisica_externo%type;
cd_empresa_refer_w		compl_pessoa_fisica.cd_empresa_refer%type;
qt_dias_pagamento_w		pessoa_fisica_taxa.qt_dias_pagamento%type;
dt_vigencia_w			varchar(255);
ie_obriga_pag_adicional_w		pessoa_fisica_taxa.ie_obriga_pag_adicional%type;
ie_obriga_pag_adic_w		varchar(1);
nr_seq_justificativa_w		pessoa_fisica_taxa.nr_seq_justificativa%type;
dt_atualizacao_w			pessoa_fisica_egk.dt_atualizacao%type;
dt_atualizacao_egk_w		varchar(50);
ie_tipo_convenio_w			convenio.ie_tipo_convenio%type;
cd_cnes_w			varchar(20);
cd_cnes_num_w			bigint;
nr_seq_pessoa_fisica_egk_w		pessoa_fisica_egk.nr_sequencia%type;
pessoa_fisica_egk_w		pessoa_fisica_egk%rowtype;
cd_externo_w			varchar(40);
current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10)			varchar(10)	:=	ish_param_pck.get_separador;

c01 CURSOR FOR
SELECT	substr(ds_family_name,1,30) ds_family_name,
	substr(ds_given_name,1,30) ds_given_name,
	a.dt_nascimento,
	d.cd_cep,
	d.ds_endereco,
	d.ds_municipio,
	d.nr_seq_pais,
	a.ie_sexo,
	a.cd_nacionalidade	
from	pessoa_fisica a,
	person_name b,
	pessoa_titular_convenio c,
	compl_pessoa_fisica d
where	b.nr_sequencia 		= a.nr_seq_person_name
and	d.cd_pessoa_fisica	= a.cd_pessoa_fisica
and	d.ie_tipo_complemento	= '1'
and	a.cd_pessoa_fisica	= c.cd_pessoa_titular
and	c.cd_pessoa_fisica	= cd_pessoa_fisica_w
and	c.cd_convenio		= atend_categoria_convenio_w.cd_convenio
and	c.cd_categoria		= atend_categoria_convenio_w.cd_categoria  LIMIT 1;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	substr(ds_family_name,1,30) ds_family_name,
	substr(ds_given_name,1,30) ds_given_name,
	a.dt_nascimento,
	d.cd_cep,
	d.ds_endereco,
	d.ds_municipio,
	d.nr_seq_pais,
	a.ie_sexo,
	a.cd_nacionalidade	
from	pessoa_fisica a,
	person_name b,
	compl_pessoa_fisica d
where	b.nr_sequencia 		= a.nr_seq_person_name
and	d.cd_pessoa_fisica	= a.cd_pessoa_fisica
and	d.ie_tipo_complemento	= '1'
and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w  LIMIT 1;

c02_w	c02%rowtype;

c03 CURSOR FOR
SELECT	a.cd_cep,
	a.ds_endereco,
	a.ds_municipio,
	a.nr_seq_pais
from	atend_convenio_end_cob a
where	a.nr_atendimento	= atend_categoria_convenio_w.nr_atendimento  LIMIT 1;

c03_w	c03%rowtype;


BEGIN
begin
select	a.nr_seq_documento,
	coalesce(b.ie_conversao,'I'),
	b.nr_seq_regra_conv
into STRICT	nr_seq_documento_w,
	ie_conversao_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia	= nr_seq_fila_p;
exception
when others then
	null;
end;

intpd_reg_integracao_inicio(nr_seq_fila_p, 'E', reg_integracao_w);

begin
atend_categoria_convenio_w.nr_atendimento	:=	obter_valor_campo_separador(nr_seq_documento_w, 1, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
atend_categoria_convenio_w.nr_seq_interno	:=	obter_valor_campo_separador(nr_seq_documento_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));

begin
select	b.cd_estabelecimento,
	a.cd_empresa,
	a.cd_estabelecimento,
	c.nr_episodio,
	b.cd_pessoa_fisica
into STRICT	cd_estabelecimento_w,
	cd_empresa_w,
	cd_estab_w,
	nr_episodio_w,
	cd_pessoa_fisica_w
FROM estabelecimento a, atendimento_paciente b
LEFT OUTER JOIN episodio_paciente c ON (b.nr_seq_episodio = c.nr_sequencia)
WHERE b.cd_estabelecimento = a.cd_estabelecimento  and b.nr_atendimento = atend_categoria_convenio_w.nr_atendimento;
exception
when others then
	null;
end;
reg_integracao_w.nm_tabela 		:= 'ESTABELECIMENTO';
reg_integracao_w.nm_elemento	:= '_-rzvish_-insuranceCreate';

intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA', 'client', 'N', cd_empresa_w, 'S', r_insurance_create_w.client);
intpd_processar_atrib_envio(reg_integracao_w, 'CD_ESTABELECIMENTO', 'institution', 'N', cd_estab_w, 'S', r_insurance_create_w.institution);

reg_integracao_w.nm_tabela 		:= 'EPISODIO_PACIENTE';
intpd_processar_atrib_envio(reg_integracao_w, 'NR_EPISODIO', 'patcaseid', 'N', nr_episodio_w, 'N', r_insurance_create_w.patcaseid);

select	*
into STRICT	atend_categoria_convenio_w
from	atend_categoria_convenio
where	nr_seq_interno = atend_categoria_convenio_w.nr_seq_interno;
exception
when others then
	null;
end;

select	coalesce(max(ie_tipo_convenio),0)
into STRICT	ie_tipo_convenio_w
from	convenio
where	cd_convenio	= atend_categoria_convenio_w.cd_convenio;

begin
select	ie_sexo
into STRICT	ie_sexo_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;
exception
when others then
	null;
end;
reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA';
reg_integracao_w.nm_elemento	:= 'InsurData';
intpd_processar_atrib_envio(reg_integracao_w, 'IE_GENDER_NUMBER', 'verge', 'N', ie_sexo_w, 'S', r_insurance_create_w.verge);

begin
select	a.cd_pessoa_fisica_externo
into STRICT	cd_pessoa_fisica_externo_w
from	pf_codigo_externo a
where	a.cd_pessoa_fisica = cd_pessoa_fisica_w
and	a.ie_tipo_codigo_externo = 'ISH'  LIMIT 1;
exception
when others then
	null;
end;
reg_integracao_w.nm_tabela 		:= 'PF_CODIGO_EXTERNO';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_PESSOA_FISICA_EXTERNO', 'patientid', 'N', cd_pessoa_fisica_externo_w, 'N', r_insurance_create_w.patientid);

select	max(cd_empresa_refer)
into STRICT	cd_empresa_refer_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w
and	(cd_empresa_refer IS NOT NULL AND cd_empresa_refer::text <> '');
reg_integracao_w.nm_tabela 		:= 'COMPL_PESSOA_FISICA';
intpd_processar_atrib_envio(reg_integracao_w, 'CD_EMPRESA_REFER', 'agnam', 'N', cd_empresa_refer_w, 'S', r_insurance_create_w.agnam);

begin
select	qt_dias_pagamento,
	ie_obriga_pag_adicional,
	nr_seq_justificativa
into STRICT	qt_dias_pagamento_w,
	ie_obriga_pag_adicional_w,
	nr_seq_justificativa_w
from (
SELECT	qt_dias_pagamento,
	ie_obriga_pag_adicional,
	nr_seq_justificativa
from	pessoa_fisica_taxa
where	nr_atendimento = atend_categoria_convenio_w.nr_atendimento
and	nr_seq_atecaco = atend_categoria_convenio_w.nr_seq_interno
and	ie_tipo_convenio_w <> 1
order by dt_pagamento desc, dt_atualizacao desc) alias0 LIMIT 1;
exception
when others then
	null;
end;
reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA_TAXA';
intpd_processar_atrib_envio(reg_integracao_w, 'QT_DIAS_PAGAMENTO', 'vtage', 'N', qt_dias_pagamento_w, 'N', r_insurance_create_w.vtage);
intpd_processar_atrib_envio(reg_integracao_w, 'IE_OBRIGA_PAG_ADICIONAL', 'pflzz', 'N', ie_obriga_pag_adicional_w, 'N', ie_obriga_pag_adic_w);
if (ie_obriga_pag_adic_w = 'S') then
	r_insurance_create_w.pflzz	:= 'X';
end if;

intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_JUSTIFICATIVA', 'nzzgr', 'N', nr_seq_justificativa_w, 'S', r_insurance_create_w.nzzgr);

if (atend_categoria_convenio_w.nr_seq_interno IS NOT NULL AND atend_categoria_convenio_w.nr_seq_interno::text <> '') then
	begin
--	r_insurance_create_w.lfdnr		:= intpd_conv('ATEND_CATEGORIA_CONVENIO', 'NR_SEQ_INTERNO', nr_seq_documento_w, nr_seq_regra_w, ie_conversao_w, 'E');
--	r_insurance_create_w.lfdnr		:= lpad(c01_w.seq_reg,3,'0');
	reg_integracao_w.nm_tabela 		:= 'ATEND_CATEGORIA_CONVENIO';
	
	begin
	select	cd_cgc
	into STRICT	r_insurance_create_w.kostr
	from	convenio
	where	cd_convenio = atend_categoria_convenio_w.cd_convenio;
	exception
	when others then
		r_insurance_create_w.kostr	:=	null;
	end;
	
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_CONVENIO', 'kostr', 'N', r_insurance_create_w.kostr, 'N', r_insurance_create_w.kostr);
	
	begin
	select	'X'
	into STRICT	r_insurance_create_w.patkz
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_convenio_partic = atend_categoria_convenio_w.cd_convenio  LIMIT 1;
	exception
	when others then
		r_insurance_create_w.patkz 	:= null;
	end;
		
	/*r_insurance_create_w.rangf	:=	'98';
	exception
	when others then
		r_insurance_create_w.patkz	:=	null;		
						
		/*select	count(1)
		into	r_insurance_create_w.rangf
		from	atend_categoria_convenio a,
			parametro_faturamento b
		where	a.nr_atendimento	= atend_categoria_convenio_w.nr_atendimento
		and	a.cd_convenio		<> atend_categoria_convenio_w.cd_convenio
		and	a.cd_convenio		<> b.cd_convenio_partic
		and	b.cd_estabelecimento	= cd_estabelecimento_w;*/
		
		/*select	max(x.id)
		into	r_insurance_create_w.rangf
		from	(select rownum id, 
				x.nr_seq_interno  
			from 	(select	a.nr_seq_interno
				from	atend_categoria_convenio a
				where 	a.nr_atendimento = atend_categoria_convenio_w.nr_atendimento
				order by a.nr_seq_interno asc) x ) x
		where 	x.nr_seq_interno = atend_categoria_convenio_w.nr_seq_interno;

		if	(r_insurance_create_w.rangf is null) then
			r_insurance_create_w.rangf	:=	'1';
		end if;
	end;*/
			
	intpd_processar_atrib_envio(reg_integracao_w, 'NR_PRIORIDADE', 'rangf', 'N', atend_categoria_convenio_w.nr_prioridade, 'N', r_insurance_create_w.rangf);
	intpd_processar_atrib_envio(reg_integracao_w, 'IE_TIPO_CONVENIADO', 'mgart', 'N', atend_categoria_convenio_w.ie_tipo_conveniado, 'S', r_insurance_create_w.mgart);
	
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_PLANO_CONVENIO', 'vtrty', 'N', atend_categoria_convenio_w.cd_plano_convenio, 'S', r_insurance_create_w.vtrty);
	
	
	/*hvvernn => last name of main insured person
	hvvervn => first name of main insured person
	hvvergb => date of birth of main person insured
	hvpstlz => postal code of city of main person insured
	hvstras => street of main person insured
	hvort => city of main person insured
	hvland => country key of main person insured
	hvverge => sex of person insured of main person insured
	hvverna => nationality of person of main person insured*/
	
	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
		reg_integracao_w.nm_tabela 		:= 'PERSON_NAME';
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME', 'hvvernn', 'N', c01_w.ds_family_name, 'N', r_insurance_create_w.hvvernn );
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME', 'hvvervn', 'N', c01_w.ds_given_name, 'N', r_insurance_create_w.hvvervn );
		
		r_insurance_create_w.hvvergb	:= to_char(c01_w.dt_nascimento, 'yyyy-mm-dd');
		
		reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA';	
		intpd_processar_atrib_envio(reg_integracao_w, 'IE_GENDER_NUMBER', 'hvverge', 'N', c01_w.ie_sexo, 'S', r_insurance_create_w.hvverge );
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_NACIONALIDADE', 'hvverna', 'N', c01_w.cd_nacionalidade, 'S', r_insurance_create_w.hvverna );

		reg_integracao_w.nm_tabela 		:= 'COMPL_PESSOA_FISICA';
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'hvpstlz', 'N', c01_w.cd_cep, 'N', r_insurance_create_w.hvpstlz );
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'hvstras', 'N', c01_w.ds_endereco, 'N', r_insurance_create_w.hvstras );
		intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'hvort', 'N', c01_w.ds_municipio, 'N', r_insurance_create_w.hvort );
		intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'hvland', 'N', c01_w.nr_seq_pais, 'S', r_insurance_create_w.hvland );
		
		if (coalesce(r_insurance_create_w.patkz,'NULL') = 'X') then
			begin
			reg_integracao_w.nm_tabela 		:= 'PERSON_NAME';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME', 'szvernn', 'N', c01_w.ds_family_name, 'N', r_insurance_create_w.szvernn );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME', 'szvervn', 'N', c01_w.ds_given_name, 'N', r_insurance_create_w.szvervn );
			
			r_insurance_create_w.SZVERGB	:= to_char(c01_w.dt_nascimento, 'yyyy-mm-dd');
			
			reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA';	
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_GENDER_NUMBER', 'szverge', 'N', c01_w.ie_sexo, 'S', r_insurance_create_w.szverge );

			reg_integracao_w.nm_tabela 		:= 'COMPL_PESSOA_FISICA';
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'szpstlz', 'N', c01_w.cd_cep, 'N', r_insurance_create_w.szpstlz );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'szstras', 'N', c01_w.ds_endereco, 'N', r_insurance_create_w.szstras );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'szort', 'N', c01_w.ds_municipio, 'N', r_insurance_create_w.szort );
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'szland', 'N', c01_w.nr_seq_pais, 'S', r_insurance_create_w.szland );
			end;
		end if;
	
	end loop;
	close c01;
	
	if (coalesce(r_insurance_create_w.patkz,'NULL') = 'X') then	
		open c02;
		loop
		fetch c02 into
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		
			reg_integracao_w.nm_tabela 		:= 'PERSON_NAME';
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_FAMILY_NAME', 'szvernn', 'N', c02_w.ds_family_name, 'N', r_insurance_create_w.szvernn );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_GIVEN_NAME', 'szvervn', 'N', c02_w.ds_given_name, 'N', r_insurance_create_w.szvervn );
			
			r_insurance_create_w.SZVERGB	:= to_char(c02_w.dt_nascimento, 'yyyy-mm-dd');
			
			reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA';	
			intpd_processar_atrib_envio(reg_integracao_w, 'IE_GENDER_NUMBER', 'szverge', 'N', c02_w.ie_sexo, 'S', r_insurance_create_w.szverge );

			reg_integracao_w.nm_tabela 		:= 'COMPL_PESSOA_FISICA';
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'szpstlz', 'N', c02_w.cd_cep, 'N', r_insurance_create_w.szpstlz );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'szstras', 'N', c02_w.ds_endereco, 'N', r_insurance_create_w.szstras );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'szort', 'N', c02_w.ds_municipio, 'N', r_insurance_create_w.szort );
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'szland', 'N', c02_w.nr_seq_pais, 'S', r_insurance_create_w.szland );
			r_insurance_create_w.abree := null;
			
		end loop;
		close c02;	
	end if;
	
	if (atend_categoria_convenio_w.ie_tipo_conveniado = 6) then
		open c03;
		loop
		fetch c03 into
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			reg_integracao_w.nm_tabela 		:= 'ATEND_CONVENIO_END_COB';
			intpd_processar_atrib_envio(reg_integracao_w, 'CD_CEP', 'szpstlz', 'N', c03_w.cd_cep, 'N', r_insurance_create_w.szpstlz );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_ENDERECO', 'szstras', 'N', c03_w.ds_endereco, 'N', r_insurance_create_w.szstras );
			intpd_processar_atrib_envio(reg_integracao_w, 'DS_MUNICIPIO', 'szort', 'N', c03_w.ds_municipio, 'N', r_insurance_create_w.szort );
			intpd_processar_atrib_envio(reg_integracao_w, 'NR_SEQ_PAIS', 'szland', 'N', c03_w.nr_seq_pais, 'S', r_insurance_create_w.szland );
			r_insurance_create_w.abree := 'X';
			
		end loop;
		close c03;
	end if;
	
	begin
	select	CASE WHEN somente_numero(b.cd_cnes)=0 THEN  null  ELSE somente_numero(b.cd_cnes) END
	into STRICT	cd_cnes_w
	from	convenio a,
		pessoa_juridica b
	where	a.cd_convenio	= atend_categoria_convenio_w.cd_convenio
	and	a.cd_cgc	= b.cd_cgc;
	exception
	when others then
		r_insurance_create_w.vknum	:= null;
	end;
	
	begin
	cd_cnes_num_w	:=	somente_numero(cd_cnes_w);
	
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_pessoa_fisica_egk_w
	from	pessoa_fisica_egk a
	where	a.nr_sequencia = egk_get_person_sequence(cd_pessoa_fisica_w)
	and	coalesce(a.abrechnender_kennung, a.kostentraeger_kennung) = cd_cnes_num_w;
	
	select	a.*
	into STRICT	pessoa_fisica_egk_w
	from	pessoa_fisica_egk a
	where	a.nr_sequencia = nr_seq_pessoa_fisica_egk_w;
	exception
	when others then
		pessoa_fisica_egk_w			:=	null;
		pessoa_fisica_egk_w.nr_sequencia	:=	null;
	end;
	
	reg_integracao_w.nm_tabela 		:= 'PESSOA_JURIDICA';
	intpd_processar_atrib_envio(reg_integracao_w, 'CD_CNES', 'vknum', 'N', cd_cnes_w, 'N', r_insurance_create_w.vknum);
	
	reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA_EGK';
	intpd_processar_atrib_envio(reg_integracao_w, 'DT_ATUALIZACAO', 'kvdat', 'N', coalesce(pessoa_fisica_egk_w.dt_atualizacao_nrec, pessoa_fisica_egk_w.dt_atualizacao), 'N', dt_atualizacao_egk_w);
	r_insurance_create_w.kvdat	:= to_char(to_date(dt_atualizacao_egk_w), 'yyyy-mm-dd');
	
	if (coalesce(pessoa_fisica_egk_w.nr_sequencia::text, '') = '') then
		reg_integracao_w.nm_tabela 		:= 'ATEND_CATEGORIA_CONVENIO';
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_INICIO_VIGENCIA', 'verab', 'N', atend_categoria_convenio_w.dt_inicio_vigencia, 'N', dt_vigencia_w);
		r_insurance_create_w.verab	:= to_char(to_date(dt_vigencia_w), 'yyyy-mm-dd');		
		
		dt_vigencia_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'DT_FINAL_VIGENCIA', 'verbi', 'N', atend_categoria_convenio_w.dt_final_vigencia, 'N', dt_vigencia_w);
		r_insurance_create_w.verbi	:= to_char(to_date(dt_vigencia_w), 'yyyy-mm-dd');		
		
		intpd_processar_atrib_envio(reg_integracao_w, 'CD_USUARIO_CONVENIO', 'vernr', 'N', atend_categoria_convenio_w.cd_usuario_convenio, 'N', r_insurance_create_w.vernr);
		
		if (ie_tipo_convenio_w = 2) then
			intpd_processar_atrib_envio(reg_integracao_w, 'VKVSE', 'vkvse', 'N', null, 'S', r_insurance_create_w.vkvst);
			r_insurance_create_w.vkvse		:=	'1';
		else
			intpd_processar_atrib_envio(reg_integracao_w, 'VKVSE', 'vkvse', 'N', atend_categoria_convenio_w.ie_tipo_conveniado, 'S', r_insurance_create_w.vkvst);
			r_insurance_create_w.vkvse		:=	'1';		
		end if;
	else
		reg_integracao_w.nm_tabela 		:= 'PESSOA_FISICA_EGK';
		intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERUNGSSCHUTZ_BEGINN', 'verab', 'N', pessoa_fisica_egk_w.versicherungsschutz_beginn, 'N', dt_vigencia_w);
		r_insurance_create_w.verab	:= to_char(to_date(dt_vigencia_w), 'yyyy-mm-dd');		
		
		dt_vigencia_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERUNGSSCHUTZ_ENDE', 'verbi', 'N', pessoa_fisica_egk_w.versicherungsschutz_ende, 'N', dt_vigencia_w);
		r_insurance_create_w.verbi	:= to_char(coalesce(to_date(dt_vigencia_w), to_date('9999-12-31','yyyy-mm-dd')), 'yyyy-mm-dd');		
		
		intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERTEN_ID', 'vernr', 'N', pessoa_fisica_egk_w.versicherten_id, 'N', r_insurance_create_w.vernr);		
		intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERTENART', 'vkvse', 'N', pessoa_fisica_egk_w.versichertenart, 'N', r_insurance_create_w.vkvse);		
		intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERTENART', 'vknra', 'N', pessoa_fisica_egk_w.zusatzinfos_wop, 'N', r_insurance_create_w.vknra);		
		dt_vigencia_w	:= null;
		intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERUNGSSCHUTZ_ENDE', 'vcend', 'N', pessoa_fisica_egk_w.gueltig_bis, 'N', dt_vigencia_w);
		r_insurance_create_w.vcend	:= to_char(coalesce(to_date(dt_vigencia_w), to_date('9999-12-31','yyyy-mm-dd')), 'yyyy-mm-dd');
		r_insurance_create_w.vkvst		:=	r_insurance_create_w.vkvse;
		
		cd_externo_w			:=	substr(intpd_conv('PESSOA_FISICA_EGK', 'NR_SEQUENCIA', nr_seq_pessoa_fisica_egk_w, nr_seq_regra_w, 'I', 'E'), 1, 40);	
		r_insurance_create_w.lncrd	:=	obter_valor_campo_separador(cd_externo_w, 1, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		r_insurance_create_w.lncrdpat	:=	obter_valor_campo_separador(cd_externo_w, 2, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		r_insurance_create_w.lncrdins	:=	obter_valor_campo_separador(cd_externo_w, 3, current_setting('ish_rzv_insurance_pck.ds_separador_w')::varchar(10));
		
		if (pessoa_fisica_egk_w.ds_conteudo_kvk IS NOT NULL AND pessoa_fisica_egk_w.ds_conteudo_kvk::text <> '') then
		
			intpd_processar_atrib_envio(reg_integracao_w, 'VERSICHERTENSTATUS_KVK', 'vkvst', 'N', pessoa_fisica_egk_w.versichertenstatus_kvk, 'N', r_insurance_create_w.vkvst);	
			intpd_processar_atrib_envio(reg_integracao_w, 'STATUSERGANZUNG_KVK', 'vkvse', 'N', pessoa_fisica_egk_w.statuserganzung_kvk, 'N', r_insurance_create_w.vkvse);			
		
		end if;
		
	end if;
	
--	r_insurance_create_w.szvernn		:=
--	r_insurance_create_w.szvervn		:=
--	r_insurance_create_w.szvergb		:=
--	r_insurance_create_w.szpstlz		:=
--	r_insurance_create_w.szstras		:=
--	r_insurance_create_w.szort		:=
--	r_insurance_create_w.szland		:=
--	r_insurance_create_w.szverge		:=
--	r_insurance_create_w.szverna		:=
--	r_insurance_create_w.agpstlz		:=
--	r_insurance_create_w.agstras		:=
--	r_insurance_create_w.agort		:=
--	r_insurance_create_w.agverna		:=
--	r_insurance_create_w.abree		:=
--	r_insurance_create_w.nzzgr		:=
--	r_insurance_create_w.copreceipt		:=
--	r_insurance_create_w.egkbespersgru	:=
--	r_insurance_create_w.egkdmpkz		:=
--	r_insurance_create_w.egkwop		:=
	end;
end if;
	
RETURN NEXT r_insurance_create_w;
CALL intpd_gravar_log_fila(reg_integracao_w);
END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION ish_rzv_insurance_pck.get_insurance_create (nr_seq_fila_p bigint) FROM PUBLIC;
