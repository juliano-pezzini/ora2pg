-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE FUNCTION dpc_pkg.get_possible_dpc_score (nr_seq_patient_dpc_p bigint) RETURNS SETOF T_DPC_SCORE_DATA AS $body$
DECLARE



r_dpc_conversion dpc_conversion_table%rowtype;
row_w t_dpc_score_row;

cd_mdc_w dpc_mdc.cd_mdc%type;
nr_seq_mdc_w patient_dpc_general_cond.nr_seq_classification%type;
si_pneumonia_state_w patient_dpc_general_cond.si_pneumonia_state%type;
si_jcs_w patient_dpc_general_cond.si_jcs%type;
vl_gaf_score_w patient_dpc_general_cond.vl_gaf_score%type;
vl_burn_index_w patient_dpc_general_cond.vl_burn_index%type;
qt_pregnancy_age_weeks_w patient_dpc_general_cond.qt_pregnancy_age_weeks%type;
qt_birth_weight_grams_w patient_dpc_general_cond.qt_birth_weight_grams%type;
si_stroke_onset_w patient_dpc_general_cond.si_stroke_onset%type;
vl_acute_pancreatitis_0_2_w patient_dpc_general_cond.vl_acute_pancreatitis_0_2%type;
vl_acute_pancreatitis_3_9_w patient_dpc_general_cond.vl_acute_pancreatitis_3_9%type;
vl_rankin_scale_w patient_dpc_general_cond.vl_rankin_scale%type;
vl_drop_score_w patient_dpc_general_cond.vl_drop_score%type;
si_surgery_w patient_dpc.si_surgery%type;
nr_seq_edition_w patient_dpc.nr_seq_edition%type;
nr_atendimento_w patient_dpc.nr_atendimento%type;
cd_classification_w dpc_classification.cd_classification%type;
qt_patient_age_w integer;
cd_corresp_code_surgery_w dpc_surgery.cd_corresp_code%type;
cd_corresp_treatment_2_w dpc_treatment.cd_corresp_code%type;
cd_corresp_definition_w  dpc_classif_definition.cd_corresp_code%type;
nr_seq_dpc_score_w dpc_score.nr_sequencia%type;
cd_dpc_w dpc_score.cd_dpc%type;
nm_dpc_w dpc_score.nm_dpc%type;
nm_surgery_w dpc_score.nm_surgery%type;
si_surgery_treat_1_w dpc_score.si_surgery_treat_1%type;
si_surgery_treat_2_w dpc_score.si_surgery_treat_2%type;
si_definition_w dpc_score.si_definition%type;
si_severity_w dpc_score.si_severity%type;
qt_days_hosp_1_w dpc_score.qt_days_hosp_1%type;
qt_days_hosp_2_w dpc_score.qt_days_hosp_2%type;
qt_days_hosp_3_w dpc_score.qt_days_hosp_3%type;
qt_points_hosp_1_w dpc_score.qt_points_hosp_1%type;
qt_points_hosp_2_w dpc_score.qt_points_hosp_2%type;
qt_points_hosp_3_w dpc_score.qt_points_hosp_3%type;
si_inclusion_flag_w dpc_conversion_table.si_inclusion_flag%type;
qt_dias_internacao_w bigint;
qt_current_points_w double precision;
cd_corresp_disease_state_w dpc_classif_disease_state.cd_correspondence%type;
cd_corresp_treatment_1_w varchar(10);
cd_times_surgery_w patient_dpc_surgery.cd_times_surgery%type;
cd_external_part_w patient_dpc_surgery.cd_external_part%type;
cd_internal_part_w patient_dpc_surgery.cd_internal_part%type;
cd_eyes_w patient_dpc_surgery.cd_eyes%type;
cd_rehabilitation_w patient_dpc_surgery.cd_rehabilitation%type;
si_range_w 	smallint;
qt_found_w	bigint;
qt_patient_dpc_surgery_w bigint;
nr_seq_dpc_treatment1_w bigint;
nr_seq_dpc_treatment2_w bigint;
qt_patient_dpc_diagnosis_w bigint;
qt_tx_hospital_converted_w  fat_conta_ponto.tx_hospital%type;

C01 CURSOR FOR
SELECT	a.*
from	dpc_conversion_table a
where	a.nr_seq_edition = nr_seq_edition_w
and	a.cd_mdc = cd_mdc_w
and	a.cd_classification = cd_classification_w;

c_patient_condition CURSOR(cd_condition_pc text,vl_condition_pc bigint,si_stroke_onset_pc text) FOR
SELECT    a.cd_condition_1_value cd_corresp
from    dpc_patient_condition a
where    a.nr_seq_edition    = nr_seq_edition_w
and    a.cd_mdc        = cd_mdc_w
and    a.cd_classification    = cd_classification_w
and    a.cd_condition        = cd_condition_pc
and (a.cd_stroke_classif = si_stroke_onset_pc or coalesce(si_stroke_onset_pc::text, '') = '')
and (vl_condition_pc >= a.qt_condition_1_from and a.qt_condition_1_to > vl_condition_pc)

union all

select    a.cd_condition_2_value cd_corresp
from    dpc_patient_condition a
where    a.nr_seq_edition    = nr_seq_edition_w
and    a.cd_mdc            = cd_mdc_w
and    a.cd_classification    = cd_classification_w
and    a.cd_condition        = cd_condition_pc
and (a.cd_stroke_classif = si_stroke_onset_pc or coalesce(si_stroke_onset_pc::text, '') = '')
and (vl_condition_pc >= a.qt_condition_2_from and a.qt_condition_2_to > vl_condition_pc)

union all

select    a.cd_condition_3_value cd_corresp
from    dpc_patient_condition a
where    a.nr_seq_edition    = nr_seq_edition_w
and    a.cd_mdc            = cd_mdc_w
and    a.cd_classification    = cd_classification_w
and    a.cd_condition        = cd_condition_pc
and (a.cd_stroke_classif = si_stroke_onset_pc or coalesce(si_stroke_onset_pc::text, '') = '')
and (vl_condition_pc >= a.qt_condition_3_from and a.qt_condition_3_to > vl_condition_pc)

union all

select    a.cd_condition_4_value cd_corresp
from    dpc_patient_condition a
where    a.nr_seq_edition    = nr_seq_edition_w
and    a.cd_mdc            = cd_mdc_w
and    a.cd_classification    = cd_classification_w
and    a.cd_condition        = cd_condition_pc
and (a.cd_stroke_classif = si_stroke_onset_pc or coalesce(si_stroke_onset_pc::text, '') = '')
and (vl_condition_pc >= a.qt_condition_4_from and a.qt_condition_4_to > vl_condition_pc)

union all

select    a.cd_condition_5_value cd_corresp
from    dpc_patient_condition a
where    a.nr_seq_edition    = nr_seq_edition_w
and    a.cd_mdc            = cd_mdc_w
and    a.cd_classification    = cd_classification_w
and    a.cd_condition        = cd_condition_pc
and (a.cd_stroke_classif = si_stroke_onset_pc or coalesce(si_stroke_onset_pc::text, '') = '')
and (vl_condition_pc >= a.qt_condition_5_from and a.qt_condition_5_to > vl_condition_pc);

c_severity CURSOR(cd_condition_pc text, vl_condition_pc bigint) FOR
SELECT    b.cd_corresp_code, '' || (b.CD_CONDTION_1_VALUE) cd_condition_value
from    dpc_severity b
where    b.nr_seq_edition    = nr_seq_edition_w
and    b.cd_mdc = cd_mdc_w
and    b.cd_classification = cd_classification_w
and    b.cd_condition_classif = cd_condition_pc
and (vl_condition_pc >= b.qt_condition_1_from and b.qt_condition_1_to >= vl_condition_pc)

union all

select    b.cd_corresp_code, '' || (b.CD_CONDTION_1_VALUE) cd_condition_value
from    dpc_severity b
where    b.nr_seq_edition    = nr_seq_edition_w
and    b.cd_mdc = cd_mdc_w
and    b.cd_classification = cd_classification_w
and    b. cd_condition_classif = cd_condition_pc
and (vl_condition_pc >= b.qt_condition_2_from and b.qt_condition_2_to >= vl_condition_pc)

union all

select    b.cd_corresp_code, '' || (b.CD_CONDTION_1_VALUE) cd_condition_value
from    dpc_severity b
where    b.nr_seq_edition    = nr_seq_edition_w
and    b.cd_mdc = cd_mdc_w
and    b.cd_classification = cd_classification_w
and    b.cd_condition_classif = cd_condition_pc
and (vl_condition_pc >= b.qt_condition_3_from and b.qt_condition_3_to >= vl_condition_pc);

c_severity_corresp_code CURSOR(cd_condition_pc text, vl_condition_pc bigint) FOR
SELECT  b.cd_corresp_code
from    dpc_severity b
where   b.nr_seq_edition    = nr_seq_edition_w
and    b.cd_mdc = cd_mdc_w
and    b.cd_classification = cd_classification_w
and    b.cd_condition_classif = cd_condition_pc
and    b.cd_condtion_1_value = vl_condition_pc;
BEGIN
Select max(d.cd_mdc) cd_mdc,
	a.nr_seq_classification,
	a.si_pneumonia_state,
	a.si_jcs,
	a.vl_gaf_score,
	a.vl_burn_index,
	a.qt_pregnancy_age_weeks,
	a.qt_birth_weight_grams,
	a.si_stroke_onset,
	a.vl_acute_pancreatitis_0_2,
	a.vl_acute_pancreatitis_3_9,
	a.vl_rankin_scale,
	a.vl_drop_score,
	b.si_surgery,
	b.nr_seq_edition,
	b.nr_atendimento,
	c.cd_Classification
into STRICT 	cd_mdc_w,
	nr_seq_mdc_w,
	si_pneumonia_state_w,
	si_jcs_w,
	vl_gaf_score_w,
	vl_burn_index_w,
	qt_pregnancy_age_weeks_w,
	qt_birth_weight_grams_w,
	si_stroke_onset_w,
	vl_acute_pancreatitis_0_2_w,
	vl_acute_pancreatitis_3_9_w,
	vl_rankin_scale_w,
	vl_drop_score_w,
	si_surgery_w,
	nr_seq_edition_w,
	nr_atendimento_w,
	cd_Classification_w
from	dpc_mdc d,
	dpc_classification c,
	patient_dpc_general_cond a,
	patient_dpc b
where	a.nr_seq_mdc	= d.nr_sequencia
and	a.nr_seq_classification = c.nr_sequencia
and	a.nr_seq_patient_dpc = b.nr_sequencia
and	b.nr_sequencia		= nr_seq_patient_dpc_p
group by a.nr_seq_classification,
	a.si_pneumonia_state,
	a.si_jcs,
	a.vl_gaf_score,
	a.vl_burn_index,
	a.qt_pregnancy_age_weeks,
	a.qt_birth_weight_grams,
	a.si_stroke_onset,
	a.vl_acute_pancreatitis_0_2,
	a.vl_acute_pancreatitis_3_9,
	a.vl_rankin_scale,
	a.vl_drop_score,
	b.si_surgery,
	b.nr_seq_edition,
	b.nr_atendimento,
	c.cd_Classification;

Select obter_idade_pf(a.cd_pessoa_fisica,coalesce(a.dt_alta,clock_timestamp()),'A')
into STRICT	qt_patient_age_w
from	atendimento_paciente a
where	a.nr_atendimento	= nr_atendimento_w;

select 	count(1)
into STRICT	qt_patient_dpc_surgery_w
from	patient_dpc_surgery a
where 	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p
and	a.ie_situacao = 'A';

select 	max(nr_seq_dpc_treat_1),
	max(nr_seq_dpc_treat_2)
into STRICT	nr_seq_dpc_treatment1_w,		
	nr_seq_dpc_treatment2_w
from	patient_dpc_treatment a
where 	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p;

select 	count(1)
into STRICT	qt_patient_dpc_diagnosis_w
from	patient_dpc_diagnosis a
where 	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p;

open C01;
loop
fetch C01 into r_dpc_conversion;
EXIT WHEN NOT FOUND; /* apply on C01 */
begin
	if (r_dpc_conversion.CD_MDC <> CD_MDC_W)then
		GOTO end_loop;
	end if;
	if (r_dpc_conversion.CD_CLASSIFICATION <> CD_CLASSIFICATION_W)then
		GOTO end_loop;
	end if;
	
	if (si_pneumonia_state_w IS NOT NULL AND si_pneumonia_state_w::text <> '') then
		if (r_dpc_conversion.cd_classif_disease_state IS NOT NULL AND r_dpc_conversion.cd_classif_disease_state::text <> '') then
			select	min(cd_correspondence)
			into STRICT	cd_corresp_disease_state_w
			from	dpc_classif_disease_state a
			where	a.nr_seq_edition = nr_seq_edition_w
			and	a.cd_mdc = cd_mdc_w
			and	a.cd_classification	= cd_classification_w
			and	qt_patient_age_w between qt_age_from and qt_age_to
			and (a.cd_classif_disease = si_pneumonia_state_w or coalesce(a.cd_classif_disease::text, '') = '');
			if (r_dpc_conversion.cd_classif_disease_state <> cd_corresp_disease_state_w) then
				GOTO end_loop;
			end if;
		else
			GOTO end_loop;
		end if;
	end if;
	
  	if ((r_dpc_conversion.CD_PAT_COND_AGE_1 IS NOT NULL AND r_dpc_conversion.CD_PAT_COND_AGE_1::text <> '') and r_dpc_conversion.CD_PAT_COND_AGE_1 <>'a' )then
		qt_found_w := 0;
		for r_Patient_w in c_patient_condition(1,qt_patient_age_w,null)loop
			if (r_Patient_w.cd_corresp = r_dpc_conversion.cd_pat_cond_age_1) then
					qt_found_w := qt_found_w+1;
			end if;
		end loop;
		if (qt_found_w = 0) then
			GOTO end_loop;
		end if;
	end if;
	
  	if ((r_dpc_conversion.CD_PAT_COND_BIRTH_WEIGHT IS NOT NULL AND r_dpc_conversion.CD_PAT_COND_BIRTH_WEIGHT::text <> '') and r_dpc_conversion.CD_PAT_COND_BIRTH_WEIGHT <>'a') then
		qt_found_w := 0;
		for r_Patient_w in c_patient_condition(3,qt_birth_weight_grams_w,null) loop
			if (r_Patient_w.cd_corresp = r_dpc_conversion.CD_PAT_COND_BIRTH_WEIGHT)then
				qt_found_w := qt_found_w+1;
			end if;
		end loop;
		if (qt_found_w = 0) then
			GOTO end_loop;
		end if;
	end if;
	
	if (si_jcs_w IS NOT NULL AND si_jcs_w::text <> '') then
		if ((r_dpc_conversion.CD_PAT_COND_JCS IS NOT NULL AND r_dpc_conversion.CD_PAT_COND_JCS::text <> '') and r_dpc_conversion.CD_PAT_COND_JCS<>'a')then
			qt_found_w := 0;
			for r_Patient_w in c_patient_condition(2,SI_JCS_W,SI_STROKE_ONSET_W)loop
				if (r_Patient_w.cd_corresp = r_dpc_conversion.CD_PAT_COND_JCS) then
					qt_found_w := qt_found_w+1;
				end if;
			end loop;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		else
			GOTO end_loop;
		end if;	
	end if;

	if (vl_burn_index_w IS NOT NULL AND vl_burn_index_w::text <> '') then
		if ((r_dpc_conversion.CD_PAT_COND_BURN_INDEX IS NOT NULL AND r_dpc_conversion.CD_PAT_COND_BURN_INDEX::text <> '') and r_dpc_conversion.CD_PAT_COND_BURN_INDEX <>'a')then
			qt_found_w := 0;
			for r_Patient_w in c_patient_condition(4,VL_BURN_INDEX_W,null)loop
				if (r_Patient_w.cd_corresp= r_dpc_conversion.CD_PAT_COND_BURN_INDEX)then
					qt_found_w := qt_found_w+1;
				end if;
			end loop;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		else
			GOTO end_loop;
		end if;
	end if;

	if (vl_gaf_score_w IS NOT NULL AND vl_gaf_score_w::text <> '') then
		if ((r_dpc_conversion.CD_PAT_COND_GAF IS NOT NULL AND r_dpc_conversion.CD_PAT_COND_GAF::text <> '') and r_dpc_conversion.CD_PAT_COND_GAF <>'a')then
			qt_found_w := 0;
			for r_Patient_w in c_patient_condition(5,VL_GAF_SCORE_W,null)loop
				if (r_Patient_w.cd_corresp = r_dpc_conversion.CD_PAT_COND_GAF)then
					qt_found_w := qt_found_w+1;
				end if;
			end loop;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
	end if;


	if (qt_patient_dpc_surgery_w > 0) then
		select	max(b.cd_corresp_code)
		into STRICT 	cd_corresp_code_surgery_w
		from 	dpc_surgery b,
			patient_dpc_surgery a
		where 	a.nr_seq_dpc_surgery = b.nr_sequencia
		and	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p;
		if (r_dpc_conversion.cd_surgery <> cd_corresp_code_surgery_w)then
			GOTO end_loop;
		end if;
	end if;
	
	if (nr_seq_dpc_treatment1_w IS NOT NULL AND nr_seq_dpc_treatment1_w::text <> '') then
		select	max(b.cd_corresp_code)
		into STRICT 	cd_corresp_treatment_1_w
		from 	dpc_treatment b,
			patient_dpc_treatment a
		where 	a.nr_seq_dpc_treat_1 = b.nr_sequencia
		and	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p;
		if (r_dpc_conversion.CD_TREATMENT_1 <> cd_corresp_treatment_1_w)then
			GOTO end_loop;
		end if;
	end if;
	
	if (nr_seq_dpc_treatment2_w IS NOT NULL AND nr_seq_dpc_treatment2_w::text <> '') then
		select	max(b.cd_corresp_code)
		into STRICT 	cd_corresp_treatment_2_w
		from 	dpc_treatment b,
			patient_dpc_treatment a
		where 	a.nr_seq_dpc_treat_2 = b.nr_sequencia
		and	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p;
		if (r_dpc_conversion.cd_treatment_2 <> cd_corresp_treatment_2_w)then
			GOTO end_loop;
		end if;
	end if;
	
	if (qt_patient_dpc_diagnosis_w > 0) then
		select 	max(b.cd_corresp_code)
		into STRICT 	cd_corresp_definition_w
		from 	dpc_classif_definition b,
			patient_dpc_diagnosis a,
			diagnostico_doenca c
		where 	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p
		and 	c.nr_seq_interno = a.nr_seq_diagnosis
		and 	a.si_sub_disease = 'Y'
		and 	b.cd_mdc = cd_mdc_w
		and 	b.cd_classification = cd_classification_w
		and 	b.cd_icd = c.cd_doenca;

		if (r_dpc_conversion.cd_classif_definition <> cd_corresp_definition_w)then
			GOTO end_loop;
		end if;
	end if;


	if ((r_dpc_conversion.CD_SEVERITY_AGE IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_AGE::text <> '') and r_dpc_conversion.CD_SEVERITY_AGE <>'a'
	   and r_dpc_conversion.CD_SEVERITY_AGE <>'1'
           and r_dpc_conversion.CD_SEVERITY_AGE <>'0')then
		qt_found_w := 0;
		for r_severity_w in c_severity(1,QT_PATIENT_AGE_W)loop
			if (r_severity_w.cd_condition_value = r_dpc_conversion.CD_SEVERITY_AGE)then
				qt_found_w := qt_found_w+1;
			end if;
		end loop;
		if (qt_found_w = 0) then
			GOTO end_loop;
		end if;
	end if;
	
	if (si_jcs_w IS NOT NULL AND si_jcs_w::text <> '') then
		if ((r_dpc_conversion.CD_SEVERITY_JCS IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_JCS::text <> '') and r_dpc_conversion.CD_SEVERITY_JCS <>'a')then
			qt_found_w := 0;
			for r_severity_w in c_severity(2,SI_JCS_W) loop
				if (r_severity_w.cd_condition_value = r_dpc_conversion.CD_SEVERITY_JCS)then
					qt_found_w := qt_found_w+1;
				end if;
			end loop;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
	end if;
	
	if (qt_patient_dpc_surgery_w > 0) then
		select	max(a.cd_times_surgery),
			max(a.cd_external_part),
			max(a.cd_internal_part),
			max(a.cd_eyes),
			max(a.cd_rehabilitation)
		into STRICT 	cd_times_surgery_w,
			cd_external_part_w,
			cd_internal_part_w,
			cd_eyes_w,
			cd_rehabilitation_w
		from 	patient_dpc_surgery a
		where 	a.nr_seq_patient_dpc = nr_seq_patient_dpc_p
		and	a.ie_situacao = 'A';
		
		if ((cd_internal_part_w IS NOT NULL AND cd_internal_part_w::text <> '') and (r_dpc_conversion.CD_SEVERITY_SIDE_1 IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_SIDE_1::text <> '') and r_dpc_conversion.CD_SEVERITY_SIDE_1<>'a')then
			qt_found_w := 0;
			if (cd_internal_part_w = r_dpc_conversion.CD_SEVERITY_SIDE_1)then
				qt_found_w := qt_found_w+1;
			end if;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
		
		if ((cd_times_surgery_w IS NOT NULL AND cd_times_surgery_w::text <> '') and (r_dpc_conversion.CD_SEVERITY_REOPERATION IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_REOPERATION::text <> '') and r_dpc_conversion.CD_SEVERITY_REOPERATION<>'a')then
			qt_found_w := 0;
			if (cd_internal_part_w = r_dpc_conversion.CD_SEVERITY_REOPERATION)then
				qt_found_w := qt_found_w+1;
			end if;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
		
		if ((cd_eyes_w IS NOT NULL AND cd_eyes_w::text <> '') and (r_dpc_conversion.CD_SEVERITY_EYE_SIDES IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_EYE_SIDES::text <> '') and r_dpc_conversion.CD_SEVERITY_EYE_SIDES<>'a')then
			qt_found_w := 0;
			if (cd_eyes_w = r_dpc_conversion.CD_SEVERITY_EYE_SIDES)then
				qt_found_w := qt_found_w+1;
			end if;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
		
		if ((cd_internal_part_w IS NOT NULL AND cd_internal_part_w::text <> '') and (r_dpc_conversion.CD_SEVERITY_SIDE_2 IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_SIDE_2::text <> '') and r_dpc_conversion.CD_SEVERITY_SIDE_2<>'a')then
			qt_found_w := 0;
			if (cd_internal_part_w = r_dpc_conversion.CD_SEVERITY_SIDE_2)then
				qt_found_w := qt_found_w+1;
			end if;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
		
		if ((cd_rehabilitation_w IS NOT NULL AND cd_rehabilitation_w::text <> '') and (r_dpc_conversion.CD_SEVERITY_REHAB IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_REHAB::text <> '') and r_dpc_conversion.CD_SEVERITY_REHAB<>'a')then
			qt_found_w := 0;
			if (cd_rehabilitation_w = r_dpc_conversion.CD_SEVERITY_REHAB)then
				qt_found_w := qt_found_w+1;
			end if;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		end if;
	end if;

	if (vl_acute_pancreatitis_0_2_w IS NOT NULL AND vl_acute_pancreatitis_0_2_w::text <> '') then
		if ((r_dpc_conversion.CD_SEVERITY_MILD_SEV IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_MILD_SEV::text <> '') and r_dpc_conversion.CD_SEVERITY_MILD_SEV <>'a')then
			qt_found_w := 0;
			for r_severity_w in c_severity(9,VL_ACUTE_PANCREATITIS_0_2_W)loop
				if (r_severity_w.cd_condition_value = r_dpc_conversion.CD_SEVERITY_MILD_SEV)then
					qt_found_w := qt_found_w+1;
				end if;
			end loop;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		else	
			GOTO end_loop;
		end if;
	end if;
	
	if (vl_acute_pancreatitis_3_9_w IS NOT NULL AND vl_acute_pancreatitis_3_9_w::text <> '') then
		if ((r_dpc_conversion.CD_SEVERITY_MILD_SEV IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_MILD_SEV::text <> '') and r_dpc_conversion.CD_SEVERITY_MILD_SEV <>'a')then
			qt_found_w := 0;
			for r_severity_w in c_severity(10,VL_ACUTE_PANCREATITIS_3_9_W)loop
				if (r_severity_w.cd_condition_value = r_dpc_conversion.CD_SEVERITY_MILD_SEV)then
					qt_found_w := qt_found_w+1;
				end if;
			end loop;
			if (qt_found_w = 0) then
				GOTO end_loop;
			end if;
		else
			GOTO end_loop;
		end if;
	end if;

	if (vl_rankin_scale_w IS NOT NULL AND vl_rankin_scale_w::text <> '') then
        if ((r_dpc_conversion.CD_SEVERITY_RANKIN_SCALE IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_RANKIN_SCALE::text <> '') and r_dpc_conversion.CD_SEVERITY_RANKIN_SCALE <>'a')then
            qt_found_w := 0;
            for r_severity_corresp_cod_w in c_severity_corresp_code(11,vl_rankin_scale_w)loop
                if (r_severity_corresp_cod_w.cd_corresp_code = r_dpc_conversion.CD_SEVERITY_RANKIN_SCALE)then
                    qt_found_w := qt_found_w+1;
                end if;
            end loop;
            if (qt_found_w = 0) then
                GOTO end_loop;
            end if;
        else
            GOTO end_loop;
        end if;
    end if;

    if (vl_drop_score_w IS NOT NULL AND vl_drop_score_w::text <> '') then
        if ((r_dpc_conversion.CD_SEVERITY_A_DROP IS NOT NULL AND r_dpc_conversion.CD_SEVERITY_A_DROP::text <> '') and r_dpc_conversion.CD_SEVERITY_A_DROP <>'a')then
            qt_found_w := 0;
            for r_severity_corresp_cod_w in c_severity_corresp_code(12,vl_drop_score_w)loop
                if (r_severity_corresp_cod_w.cd_corresp_code = r_dpc_conversion.CD_SEVERITY_A_DROP)then
                    qt_found_w := qt_found_w+1;
                end if;
            end loop;
            if (qt_found_w = 0) then
                GOTO end_loop;
            end if;
        else
            GOTO end_loop;
        end if;
    end if;

	SELECT Obter_Dias_Internacao(nr_atendimento_w)
	into STRICT qt_Dias_Internacao_w
	;

	select 	a.nr_sequencia,
		a.cd_dpc,
		a.nm_dpc,
		a.nm_surgery,
		a.si_surgery_treat_1,
		a.si_surgery_treat_2,
		a.si_definition,
		a.si_severity,
		a.qt_days_hosp_1,
		a.qt_days_hosp_2,
		a.qt_days_hosp_3,
		a.qt_points_hosp_1,
		a.qt_points_hosp_2,
		a.qt_points_hosp_3,
		r_dpc_conversion.si_inclusion_flag
	into STRICT 	nr_seq_dpc_score_w,
		cd_dpc_w,
		nm_dpc_w,
		nm_surgery_w,
		si_surgery_treat_1_w,
		si_surgery_treat_2_w,
		si_definition_w,
		si_severity_w,
		qt_days_hosp_1_w,
		qt_days_hosp_2_w,
		qt_days_hosp_3_w,
		qt_points_hosp_1_w,
		qt_points_hosp_2_w,
		qt_points_hosp_3_w,
		si_inclusion_flag_w
	from 	dpc_score a
	where 	a.cd_dpc = r_dpc_conversion.cd_dpc
	and	a.nr_seq_edition = nr_seq_edition_w;

	if (qt_dias_internacao_w<= qt_days_hosp_1_w) then
		si_range_w :=1;
	elsif (qt_dias_internacao_w > qt_days_hosp_1_w and qt_dias_internacao_w <= qt_days_hosp_2_w) then
		si_range_w :=2;
	elsif (qt_dias_internacao_w > qt_days_hosp_2_w and qt_dias_internacao_w <= qt_days_hosp_3_w) then
		si_range_w :=3;
	end if;
	
	select	coalesce(max(TX_HOSPITAL),0)
	into STRICT	qt_tx_hospital_converted_w
	from	fat_conta_ponto;


	qt_current_points_w := (((qt_days_hosp_1_w * (qt_points_hosp_1_w/qt_days_hosp_1_w)) + (qt_days_hosp_2_w * (qt_points_hosp_2_w/qt_days_hosp_2_w) ) + (qt_days_hosp_3_w * (qt_points_hosp_3_w/qt_days_hosp_3_w ))) * qt_tx_hospital_converted_w);

	row_w.NR_SEQUENCIA := NR_SEQ_DPC_SCORE_W;
	row_w.CD_DPC := CD_DPC_W;
	row_w.QT_CURRENT_POINTS := QT_CURRENT_POINTS_W;
	row_w.SI_RANGE := SI_RANGE_W;
	row_w.QT_POINTS_2 := QT_POINTS_HOSP_2_W;
	row_w.DS_DPC :=  nm_dpc_w || '_' || NM_SURGERY_W || '_' || SI_SURGERY_TREAT_1_W || '_' || SI_SURGERY_TREAT_2_W || '_' || SI_DEFINITION_W || '_' || SI_SEVERITY_W;
	row_w.si_inclusion_flag := si_inclusion_flag_w;
	RETURN NEXT row_w;
	<<end_loop>>
	null;
end;
end loop;
return;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION dpc_pkg.get_possible_dpc_score (nr_seq_patient_dpc_p bigint) FROM PUBLIC;
