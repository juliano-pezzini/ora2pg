-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dpc_pkg.validate_patient_dpc (NR_SEQ_PATIENT_DPC_P bigint, DT_START_DPC_P timestamp,DT_END_DPC_P timestamp) AS $body$
DECLARE

CD_MAIN_ICD_W DIAGNOSTICO_DOENCA.CD_DOENCA%type;
NR_SEQ_EDITION_W PATIENT_DPC.NR_SEQ_EDITION%type;
NR_SEQ_DPC_SCORE_W PATIENT_DPC.NR_SEQ_DPC_SCORE%type;
CD_MDC_W DPC_MDC.CD_MDC%type;
CD_CLASSIFICATION_W DPC_CLASSIFICATION.CD_CLASSIFICATION%type;
QT_REGISTER_w bigint;

BEGIN

	if (DT_END_DPC_P<DT_START_DPC_P) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1121731);
	end if;


SELECT max(E.CD_DOENCA),
	   max(A.NR_SEQ_EDITION),
	   max(A.NR_SEQ_DPC_SCORE),
	   max(C.CD_MDC),
	   max(D.CD_CLASSIFICATION)
INTO STRICT CD_MAIN_ICD_W,
	 NR_SEQ_EDITION_W,
     NR_SEQ_DPC_SCORE_W,
     CD_MDC_W,
     CD_CLASSIFICATION_W
FROM PATIENT_DPC A,
     PATIENT_DPC_GENERAL_COND B,
     DPC_MDC C,
     DPC_CLASSIFICATION D,
     DIAGNOSTICO_DOENCA E
WHERE    B.NR_SEQ_PATIENT_DPC = A.NR_SEQUENCIA
AND    C.NR_SEQUENCIA = B.NR_SEQ_MDC
AND    D.NR_SEQUENCIA = B.NR_SEQ_CLASSIFICATION
AND    E.NR_SEQ_INTERNO = A.NR_SEQ_MOST_EXP_DIAGNOSIS
AND    A.NR_SEQUENCIA = NR_SEQ_PATIENT_DPC_P;

QT_REGISTER_w :=0;
SELECT	COUNT(1)
INTO STRICT QT_REGISTER_w
FROM DPC_ICD
WHERE NR_SEQ_EDITION = NR_SEQ_EDITION_W
AND	CD_MDC = CD_MDC_W
AND	CD_CLASSIFICATION = CD_CLASSIFICATION_W
AND	CD_ICD = CD_MAIN_ICD_W
AND (DT_START >DT_START_DPC_P OR DT_END < coalesce(DT_END_DPC_P,clock_timestamp()));
	if (QT_REGISTER_w>0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1121733);
	end if;
QT_REGISTER_w :=0;

SELECT	COUNT(1)
INTO STRICT QT_REGISTER_w
FROM DPC_SCORE
WHERE NR_SEQUENCIA = NR_SEQ_DPC_SCORE_W
AND	NR_SEQ_EDITION = NR_SEQ_EDITION_W
AND (DT_START >DT_START_DPC_P OR DT_END < coalesce(DT_END_DPC_P,clock_timestamp()));

	if (QT_REGISTER_w>0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1121734);
	end if;
QT_REGISTER_w :=0;

SELECT	COUNT(1)
INTO STRICT QT_REGISTER_w
FROM DPC_SURGERY A,
	 PATIENT_DPC_SURGERY B
WHERE	A.NR_SEQUENCIA = B.NR_SEQ_DPC_SURGERY
AND	B.NR_SEQ_PATIENT_DPC = NR_SEQ_PATIENT_DPC_P
AND	B.IE_SITUACAO = 'A'
AND	A.NR_SEQ_EDITION <> NR_SEQ_EDITION_W;

	if (QT_REGISTER_w>0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1121735);
	end if;

QT_REGISTER_w :=0;

SELECT	COUNT(1)
INTO STRICT QT_REGISTER_w
FROM DPC_TREATMENT A,
	 PATIENT_DPC_TREATMENT B
WHERE (A.NR_SEQUENCIA = B.NR_SEQ_DPC_TREAT_1 or A.NR_SEQUENCIA = B.NR_SEQ_DPC_TREAT_2)
AND	B.NR_SEQ_PATIENT_DPC = NR_SEQ_PATIENT_DPC_P
AND	A.NR_SEQ_EDITION <> NR_SEQ_EDITION_W;

	if (QT_REGISTER_w>0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1121736);
	end if;

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dpc_pkg.validate_patient_dpc (NR_SEQ_PATIENT_DPC_P bigint, DT_START_DPC_P timestamp,DT_END_DPC_P timestamp) FROM PUBLIC;
