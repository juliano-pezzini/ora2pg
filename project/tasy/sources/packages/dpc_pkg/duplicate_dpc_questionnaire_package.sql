-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dpc_pkg.duplicate_dpc_questionnaire (nr_seq_dpc_quest_p bigint,nm_usuario_p text) AS $body$
DECLARE

  		
c01 CURSOR FOR
			SELECT 
			NR_SEQUENCIA,
			NR_SEQ_DPC_QUEST,
			NR_SEQ_FORMULARY,
			CD_FORMULARY,
			CD_SERIAL_NUMBER,
			CD_CODE,
			CD_VERSION
			FROM PAT_DPC_QUEST_FORM 
			WHERE NR_SEQ_DPC_QUEST  = nr_seq_dpc_quest_p;
      row_w c01%rowtype;

NR_SEQ_NEW_DPC_QUESTIONNAIRE PATIENT_DPC_QUESTIONNAIRE.NR_SEQUENCIA%TYPE;


BEGIN
	IF (nr_seq_dpc_quest_p IS NOT NULL AND nr_seq_dpc_quest_p::text <> '') THEN
		SELECT	nextval('patient_dpc_seq')
		INTO STRICT NR_SEQ_NEW_DPC_QUESTIONNAIRE
		;
		
		INSERT INTO PATIENT_DPC_QUESTIONNAIRE(
			NR_SEQUENCIA,
			DS_INCONSISTENCIES,
			DT_START_FORM,
			DT_END_FORM,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			NR_SEQ_PATIENT_DPC,
			CD_GENERAL_MEDICAL_INFO,
			IE_SITUACAO,
			DT_LIBERACAO,
			DT_INATIVACAO,
			NM_USUARIO_INATIVACAO,
			NM_USUARIO_LIBERACAO,
			NM_USUARIO_MEDICO,
			DT_LIBERACAO_MEDICO,
			CD_FREQUENCY_CONTROL,
			CD_FACILITY_CODE,
			CD_DATA_IDENTIFICATION,
			DT_ADMISSION,
			SI_NURSE_COMPLETE,
			SI_MED_OFFICE_COMPLETE,
			SI_PHYSICIAN_COMPLETE,
			SI_STATUS
			)
			SELECT NR_SEQ_NEW_DPC_QUESTIONNAIRE,
			DS_INCONSISTENCIES,
			DT_START_FORM,
			DT_END_FORM,
			clock_timestamp(),
			NM_USUARIO_P,
			clock_timestamp(),
			NM_USUARIO_P,
			NR_SEQ_PATIENT_DPC,
			CD_GENERAL_MEDICAL_INFO,
			IE_SITUACAO,
			DT_LIBERACAO,
			DT_INATIVACAO,
			NM_USUARIO_INATIVACAO,
			NM_USUARIO_LIBERACAO,
			NM_USUARIO_MEDICO,
			DT_LIBERACAO_MEDICO,
			CD_FREQUENCY_CONTROL,
			CD_FACILITY_CODE,
			CD_DATA_IDENTIFICATION,
			DT_ADMISSION,
			SI_NURSE_COMPLETE,
			SI_MED_OFFICE_COMPLETE,
			SI_PHYSICIAN_COMPLETE,
			SI_STATUS
			FROM PATIENT_DPC_QUESTIONNAIRE WHERE NR_SEQUENCIA = NR_SEQ_DPC_QUEST_P;
			
		INSERT INTO pat_dpc_quest_form(
                       nr_sequencia,
                       dt_atualizacao,
                       nm_usuario,
                       dt_atualizacao_nrec,
                       nm_usuario_nrec,
                       nr_seq_dpc_quest,
                       nr_seq_formulary,
                       cd_formulary,
                      cd_serial_number,
                       cd_code,
                       cd_version)
		       SELECT nextval('pat_dpc_quest_form_seq'),
                       clock_timestamp(),
                       nm_usuario_p,
                       clock_timestamp(),
                       nm_usuario_p,
                       NR_SEQ_NEW_DPC_QUESTIONNAIRE,
                       nr_seq_formulary,
                       cd_formulary,
                      cd_serial_number,
                      cd_code,cd_version
                      from pat_dpc_quest_form where nr_seq_dpc_quest=NR_SEQ_DPC_QUEST_P;
		
		OPEN C01;
		LOOP
		       FETCH C01 INTO row_w;
		       EXIT WHEN NOT FOUND; /* apply on C01 */
		       BEGIN
		       INSERT INTO pat_dpc_quest_item(
                       nr_sequencia,
                       nr_seq_quest_form,
                       nr_seq_form_obj,
                       dt_atualizacao,
                       nm_usuario,
                       dt_atualizacao_nrec,
                       nm_usuario_nrec,
                       ds_column,
                       cd_group,
                       ds_value,
                       dt_value)
                       SELECT  nextval('pat_dpc_quest_item_seq'),
                       (SELECT nr_sequencia from pat_dpc_quest_form where NR_SEQ_DPC_QUEST=NR_SEQ_NEW_DPC_QUESTIONNAIRE and NR_SEQ_FORMULARY=row_w.NR_SEQ_FORMULARY) ,
                       nr_seq_form_obj,
                       clock_timestamp(),
                       nm_usuario_p,
                       clock_timestamp(),
                       nm_usuario_p,
                       ds_column,
                       cd_group,
                       ds_value,
                       dt_value
                       from pat_dpc_quest_item where nr_seq_quest_form=row_w.NR_SEQUENCIA;
		      END;		
		END LOOP;
		
	END IF;
	COMMIT;

	exception when others then
		rollback;
		CALL gravar_log_tasy(91210,'Error when trying to insert record in patient dpc questionnaire',NM_USUARIO_P);
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dpc_pkg.duplicate_dpc_questionnaire (nr_seq_dpc_quest_p bigint,nm_usuario_p text) FROM PUBLIC;
