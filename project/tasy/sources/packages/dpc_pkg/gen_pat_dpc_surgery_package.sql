-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dpc_pkg.gen_pat_dpc_surgery (nr_seq_patient_dpc_p bigint,nm_usuario_p text) AS $body$
DECLARE

ie_result_w               patient_dpc_surgery.ie_situacao%type;
cd_mdc_w                  dpc_surgery.cd_mdc%type;
cd_classification_w       dpc_classification.cd_classification%type;
nr_seq_cirg_w             cirurgia.nr_cirurgia%type;
nr_atendimento_w          patient_dpc.nr_atendimento%type;
dt_inicio_real_w          cirurgia.dt_inicio_real%type;
cd_tipo_anestesia_w       cirurgia.cd_tipo_anestesia%type;

c01 CURSOR(cd_mdc_pc            dpc_surgery.cd_mdc%type,
        cd_classification_pc    dpc_classification.cd_classification%type) FOR
        SELECT cd_k_surgery_1,nr_sequencia,count(nr_sequencia) over (order by nr_sequencia) as runid from (
            SELECT distinct cd_k_surgery_1,nr_sequencia
            from dpc_surgery where   cd_mdc = cd_mdc_pc and cd_classification = cd_classification_pc and (cd_k_surgery_1 IS NOT NULL AND cd_k_surgery_1::text <> '')

union all

            select distinct cd_k_surgery_2,nr_sequencia
            from dpc_surgery where   cd_mdc = cd_mdc_pc and cd_classification = cd_classification_pc and (cd_k_surgery_2 IS NOT NULL AND cd_k_surgery_2::text <> '')
            
union all

            select distinct cd_k_surgery_3,nr_sequencia
            from dpc_surgery where   cd_mdc = cd_mdc_pc and cd_classification = cd_classification_pc and (cd_k_surgery_3 IS NOT NULL AND cd_k_surgery_3::text <> '')
            
union all

            select distinct cd_k_surgery_4,nr_sequencia
            from dpc_surgery where   cd_mdc = cd_mdc_pc and cd_classification = cd_classification_pc and (cd_k_surgery_4 IS NOT NULL AND cd_k_surgery_4::text <> '')
            
union all

            select distinct cd_k_surgery_5,nr_sequencia
            from dpc_surgery where   cd_mdc = cd_mdc_pc and cd_classification = cd_classification_pc and (cd_k_surgery_5 IS NOT NULL AND cd_k_surgery_5::text <> ''))a;


BEGIN

select  coalesce(max('Y'),'N')
into STRICT    ie_result_w
from    patient_dpc_surgery
where   nr_seq_patient_dpc = nr_seq_patient_dpc_p
and     ie_situacao = 'A';

if (ie_result_w = 'N') then

        select  b.cd_mdc, c.cd_classification, d.nr_atendimento
        into STRICT    cd_mdc_w, cd_classification_w, nr_atendimento_w
        from    patient_dpc_general_cond a,
                dpc_surgery b,
                dpc_classification c,
                patient_dpc d
        where  a.nr_seq_patient_dpc = nr_seq_patient_dpc_p
        and    b.nr_sequencia = a.nr_seq_mdc
        and    c.nr_sequencia = a.nr_seq_classification
        and    d.nr_sequencia = a.nr_seq_patient_dpc;
        
              
        for r_c01_w in c01(cd_mdc_w, cd_classification_w) loop
        
         exit when r_c01_w.runid>1;

        
                select  max(a.nr_cirurgia), 
                        max(a.DT_INICIO_REAL), 
                        max(a.CD_TIPO_ANESTESIA)
                into STRICT    nr_seq_cirg_w,
                        dt_inicio_real_w,
                        cd_tipo_anestesia_w
                from    cirurgia a,
                        proc_interno b,
                        procedimento c
                where (c.CD_PROCEDIMENTO_LOC = r_c01_w.CD_K_SURGERY_1)
                and     c.ie_origem_proced = b.ie_origem_proced
                and     c.cd_procedimento = b.cd_procedimento
                and     b.nr_sequencia = a.nr_seq_proc_interno
                and     a.nr_atendimento = nr_atendimento_w;

                if (nr_seq_cirg_w > 0) then
              
                        insert into PATIENT_DPC_SURGERY(
                        NR_SEQUENCIA,           
                        DT_ATUALIZACAO,               
                        NM_USUARIO,         
                        DT_ATUALIZACAO_NREC,           
                        NM_USUARIO_NREC,             
                        NR_SEQ_PATIENT_DPC,      
                        IE_SITUACAO,
                        NR_SEQ_DPC_SURGERY,
                        DT_SURGERY,
                        CD_ANESTHESIA)
                        values (
                                nextval('patient_dpc_surgery_seq'),
                                clock_timestamp(),
                                nm_usuario_p,
                                clock_timestamp(),
                                nm_usuario_p,
                                NR_SEQ_PATIENT_DPC_P,
                                'A',
                                r_c01_w.NR_SEQUENCIA,
                                dt_inicio_real_w,
                                cd_tipo_anestesia_w         
                        );
                end if;

        end loop;

end if;
commit;
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dpc_pkg.gen_pat_dpc_surgery (nr_seq_patient_dpc_p bigint,nm_usuario_p text) FROM PUBLIC;
