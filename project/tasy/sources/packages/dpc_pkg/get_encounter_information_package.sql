-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE dpc_pkg.get_encounter_information ( nr_atendimento_p bigint, dt_start_dpc_p INOUT timestamp, dt_end_dpc_p INOUT timestamp, cd_departamento_p INOUT bigint) AS $body$
DECLARE

					
		dt_admission_w timestamp;
		dt_discharge_w timestamp;
		dt_transferencia_w timestamp;
		cd_departamento_w bigint;
		qt_w bigint;


BEGIN
	dt_admission_w := obter_data_entrada(nr_atendimento_p);
        dt_discharge_w := obter_dt_alta_medica(nr_atendimento_p);

    if (dt_discharge_w IS NOT NULL AND dt_discharge_w::text <> '') then
			select	count(1)
			into STRICT	qt_w
			from	transf_departamento_medico a,
					departamento_medico b
			where	a.cd_depart_destino = b.cd_departamento
			and	a.nr_atendimento = nr_atendimento_p
			and	a.dt_transferencia 	= (	SELECT	max(x.dt_transferencia)
										from	transf_departamento_medico x
										where	x.nr_atendimento = nr_atendimento_p
										and	x.dt_transferencia <= dt_discharge_w);			
			if (qt_w > 0) then
				select	max(b.cd_departamento),
						max(a.dt_transferencia) 
				into STRICT	cd_departamento_w,
						dt_transferencia_w
				from	TRANSF_DEPARTAMENTO_MEDICO a, 
						departamento_medico b
				where	a.cd_depart_destino = b.cd_departamento
				and	a.nr_atendimento = nr_atendimento_p
				and	a.dt_transferencia = (	SELECT	max(x.dt_transferencia)
											from transf_departamento_medico x
											where x.nr_atendimento = nr_atendimento_p
											and	x.dt_transferencia <= dt_discharge_w); 			
				dt_start_dpc_p := dt_transferencia_w;
				dt_end_dpc_p := dt_discharge_w;
				cd_departamento_p := cd_departamento_w;
			else
				select 	max(b.cd_departamento)
				into STRICT	cd_departamento_w
				from	atend_paciente_unidade a,
						departamento_medico b
				where	a.cd_departamento = b.cd_departamento
				and	a.nr_atendimento = nr_atendimento_p
				and	a.dt_entrada_unidade = ( SELECT	max(x.dt_entrada_unidade)
											 from atend_paciente_unidade x
											 where	x.nr_atendimento = nr_atendimento_p
											 and x.dt_entrada_unidade <= dt_discharge_w);
				dt_start_dpc_p := dt_admission_w;
				dt_end_dpc_p := dt_discharge_w;
				cd_departamento_p := cd_departamento_w;
    		end if;
    else
        	begin
        		select	count(1)
				into STRICT	qt_w
				from	transf_departamento_medico a,
                        departamento_medico b
				where	a.cd_depart_destino = b.cd_departamento
				and	a.nr_atendimento = nr_atendimento_p
				and	a.dt_transferencia 	= (	SELECT	max(x.dt_transferencia)
											from	transf_departamento_medico x
											where	x.nr_atendimento = nr_atendimento_p);
				if (qt_w > 0) then
        			select	max(b.cd_departamento), max(a.dt_transferencia)
					into STRICT	cd_departamento_w, dt_transferencia_w
					from	transf_departamento_medico a, 
                            departamento_medico b
					where	a.cd_depart_destino = b.cd_departamento
					and	a.nr_atendimento = nr_atendimento_p
					and	a.dt_transferencia 	= (	SELECT	max(x.dt_transferencia)
												from	transf_departamento_medico x
												where	x.nr_atendimento = nr_atendimento_p);
					dt_start_dpc_p := dt_transferencia_w;
					dt_end_dpc_p := null;
					cd_departamento_p := cd_departamento_w;
				else
        			select 	max(b.cd_departamento)
					into STRICT	cd_departamento_w
					from	atend_paciente_unidade a,
                            departamento_medico b
					where	a.cd_departamento = b.cd_departamento
					and	a.nr_atendimento = nr_atendimento_p
					and	a.dt_entrada_unidade = (SELECT	max(x.dt_entrada_unidade)
												from	atend_paciente_unidade x
												where	x.nr_atendimento =  nr_atendimento_p
												and	coalesce(dt_saida_unidade::text, '') = '');
					dt_start_dpc_p := dt_admission_w;
					dt_end_dpc_p := null;
					cd_departamento_p := cd_departamento_w;
				end if;
			end;
    end if;
end;


$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dpc_pkg.get_encounter_information ( nr_atendimento_p bigint, dt_start_dpc_p INOUT timestamp, dt_end_dpc_p INOUT timestamp, cd_departamento_p INOUT bigint) FROM PUBLIC;
