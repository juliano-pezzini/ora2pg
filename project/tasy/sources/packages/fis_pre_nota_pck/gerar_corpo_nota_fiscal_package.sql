-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';




CREATE OR REPLACE PROCEDURE fis_pre_nota_pck.gerar_corpo_nota_fiscal ( cd_estabelecimento_p nota_fiscal.cd_estabelecimento%type, nr_nota_fiscal_p nota_fiscal.nr_nota_fiscal%type, cd_serie_nf_p nota_fiscal.cd_serie_nf%type, nr_ordem_compra_p nota_fiscal.nr_ordem_compra%type, nm_usuario_p nota_fiscal.nm_usuario%type, cd_operacao_nota_p nota_fiscal.cd_operacao_nf%type, cd_natureza_operacao_p nota_fiscal.cd_natureza_operacao%type, dt_emissao_p nota_fiscal.dt_emissao%type, nr_sequencia_p INOUT nota_fiscal.nr_sequencia%type, dt_entrada_saida_p nota_fiscal.dt_entrada_saida%type, cd_cgc_emitente_p nota_fiscal.cd_cgc_emitente%type default '', cd_cgc_p nota_fiscal.cd_cgc%type default '', vl_total_nota_p nota_fiscal.vl_total_nota%type DEFAULT NULL, ie_situacao_p nota_fiscal.ie_situacao%type DEFAULT NULL) AS $body$
DECLARE


        nr_sequencia_nf_w	   nota_fiscal.nr_sequencia_nf%type;
        nr_sequencia_w	       nota_fiscal.nr_sequencia%type;
        vl_mercadoria_w	       nota_fiscal.vl_mercadoria%type	 := 0;
        qt_peso_bruto_w		   nota_fiscal.qt_peso_bruto%type	 := 0;
        qt_peso_liquido_w	   nota_fiscal.qt_peso_liquido%type  := 0;

        /* ordem_compra */

        dt_entrada_saida_w	timestamp;


BEGIN

            if (dt_entrada_saida_p IS NOT NULL AND dt_entrada_saida_p::text <> '') then
                dt_entrada_saida_w	:= to_date(to_char(dt_entrada_saida_p, 'dd/mm/yyyy') || ' ' ||  to_char(clock_timestamp(),'hh24:mi:ss') ,'dd/mm/yyyy hh24:mi:ss');
            end if;

            select nextval('nota_fiscal_seq')
            into STRICT   nr_sequencia_w
;

            /* selecionar a proxima sequencia da nota */

            select (coalesce(max(nr_sequencia_nf),0)+1)
            into STRICT  nr_sequencia_nf_w
            from  nota_fiscal
            where cd_estabelecimento = cd_estabelecimento_p
            and	nr_nota_fiscal = nr_nota_fiscal_p
            and	cd_serie_nf = cd_serie_nf_p;

            insert into nota_fiscal(
                cd_estabelecimento,
                cd_cgc_emitente,
                cd_serie_nf,
                nr_nota_fiscal,
                nr_sequencia_nf,
                cd_operacao_nf,
                dt_emissao,
                dt_entrada_saida,
                ie_acao_nf,
                ie_emissao_nf,
                ie_tipo_frete,
                vl_mercadoria,
                vl_total_nota,
                qt_peso_bruto,
                qt_peso_liquido,
                dt_atualizacao,
                nm_usuario,
                cd_cgc,
                cd_natureza_operacao,
                nr_ordem_compra,
                nr_sequencia,
                ie_situacao,
                ie_tipo_nota)
            values (	cd_estabelecimento_p,
                cd_cgc_emitente_p,
                cd_serie_nf_p,
                nr_nota_fiscal_p,
                nr_sequencia_nf_w,
                cd_operacao_nota_p,
                coalesce(dt_emissao_p, trunc(clock_timestamp())),
                coalesce(dt_entrada_saida_w, clock_timestamp()),
                '1',
                '0',
                'F',
                vl_mercadoria_w,
                vl_total_nota_p,
                qt_peso_bruto_w,
                qt_peso_liquido_w,
                clock_timestamp(),
                nm_usuario_p,
                cd_cgc_p,
                cd_natureza_operacao_p,
                nr_ordem_compra_p,
                nr_sequencia_w,
                ie_situacao_p,
                'EN');

            CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '7', WHEB_MENSAGEM_PCK.get_texto(301607,'NR_ORDEM_COMPRA_P='||nr_ordem_compra_p));

            nr_sequencia_p := nr_sequencia_w;
            commit;

    END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_pre_nota_pck.gerar_corpo_nota_fiscal ( cd_estabelecimento_p nota_fiscal.cd_estabelecimento%type, nr_nota_fiscal_p nota_fiscal.nr_nota_fiscal%type, cd_serie_nf_p nota_fiscal.cd_serie_nf%type, nr_ordem_compra_p nota_fiscal.nr_ordem_compra%type, nm_usuario_p nota_fiscal.nm_usuario%type, cd_operacao_nota_p nota_fiscal.cd_operacao_nf%type, cd_natureza_operacao_p nota_fiscal.cd_natureza_operacao%type, dt_emissao_p nota_fiscal.dt_emissao%type, nr_sequencia_p INOUT nota_fiscal.nr_sequencia%type, dt_entrada_saida_p nota_fiscal.dt_entrada_saida%type, cd_cgc_emitente_p nota_fiscal.cd_cgc_emitente%type default '', cd_cgc_p nota_fiscal.cd_cgc%type default '', vl_total_nota_p nota_fiscal.vl_total_nota%type DEFAULT NULL, ie_situacao_p nota_fiscal.ie_situacao%type DEFAULT NULL) FROM PUBLIC;
