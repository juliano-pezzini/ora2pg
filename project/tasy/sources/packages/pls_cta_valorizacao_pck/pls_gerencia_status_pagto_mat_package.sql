-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

				
--Gerencia o status de pagamento dos materiais



CREATE OR REPLACE PROCEDURE pls_cta_valorizacao_pck.pls_gerencia_status_pagto_mat ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE
	

ie_status_pagamento_w	varchar(1);	
ie_ocor_pagamento_w	varchar(1);	
tb_seq_item_w		dbms_sql.number_table;
tb_status_pagamento_w	dbms_sql.varchar2_table;
nr_sequencia_w		integer;
nr_indice_w		integer;
		
C01 CURSOR(	nr_seq_lote_pc			pls_lote_protocolo_conta.nr_sequencia%type,
		nr_seq_protocolo_pc		pls_protocolo_conta.nr_sequencia%type,
		nr_seq_lote_processo_pc		pls_cta_lote_processo.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type,
		nr_seq_mat_pc			pls_conta_mat.nr_sequencia%type,
		nm_usuario_pc			usuario.nm_usuario%type,
		cd_estabelecimento_pc		estabelecimento.cd_estabelecimento%type) FOR
	
	SELECT	mat.ie_status,
		mat.qt_material_imp,
		mat.qt_material,
		mat.vl_material_imp,
		mat.vl_material,
		mat.vl_liberado,
		mat.vl_glosa,
		mat.ie_glosa,
		mat.nr_sequencia
	from	pls_conta_mat_v	mat
	where	mat.nr_sequencia	= nr_seq_mat_pc
	and	mat.ie_status 	in ('A', 'F', 'L', 'P', 'U')
	
union all

	SELECT	mat.ie_status,
		mat.qt_material_imp,
		mat.qt_material,
		mat.vl_material_imp,
		mat.vl_material,
		mat.vl_liberado,
		mat.vl_glosa,
		mat.ie_glosa,
		mat.nr_sequencia
	from	pls_conta_mat_v	mat
	where	mat.nr_seq_conta 	= nr_seq_conta_pc
	and	mat.ie_status 	in ('A', 'F', 'L', 'P', 'U')
	and	(nr_seq_mat_pc IS NOT NULL AND nr_seq_mat_pc::text <> '')
	
union all

	select	mat.ie_status,
		mat.qt_material_imp,
		mat.qt_material,
		mat.vl_material_imp,
		mat.vl_material,
		mat.vl_liberado,
		mat.vl_glosa,
		mat.ie_glosa,
		mat.nr_sequencia
	from	pls_conta_mat_v	mat
	where	mat.nr_seq_protocolo 	= nr_seq_protocolo_pc
	and	coalesce(nr_seq_conta_pc::text, '') = ''
	and	mat.ie_status 	in ('A', 'F', 'L', 'P', 'U')
	
union all

	select	mat.ie_status,
		mat.qt_material_imp,
		mat.qt_material,
		mat.vl_material_imp,
		mat.vl_material,
		mat.vl_liberado,
		mat.vl_glosa,
		mat.ie_glosa,
		mat.nr_sequencia
	from	pls_conta_mat_v	mat
	where	mat.nr_seq_lote_conta 	= nr_seq_lote_pc
	and	mat.ie_status 	in ('A', 'F', 'L', 'P', 'U')
	and	coalesce(nr_seq_conta_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''	
	
union all

	select	mat.ie_status,
		mat.qt_material_imp,
		mat.qt_material,
		mat.vl_material_imp,
		mat.vl_material,
		mat.vl_liberado,
		mat.vl_glosa,
		mat.ie_glosa,
		mat.nr_sequencia
	from	pls_conta_mat_v	mat
	where	coalesce(nr_seq_lote_pc::text, '') = ''
	and	coalesce(nr_seq_conta_pc::text, '') = ''
	and	coalesce(nr_seq_protocolo_pc::text, '') = ''	
	and	mat.ie_status 	in ('A', 'F', 'L', 'P', 'U')
	and	exists (select	1
			from	pls_cta_lote_proc_conta lote
			where	lote.nr_seq_lote_processo	= nr_seq_lote_processo_pc 
			and     lote.nr_seq_conta  		= mat.nr_seq_conta );	
	
BEGIN

nr_sequencia_w := 0;
tb_seq_item_w.delete;		
tb_status_pagamento_w.delete;
nr_indice_w	:= 0;

for	r_C01_w in C01(nr_seq_lote_p, nr_seq_protocolo_p, nr_seq_lote_processo_p,	
                       nr_seq_conta_p, nr_seq_conta_mat_p, nm_usuario_p, cd_estabelecimento_p) loop	
		
	--Obtem o status do pagamento

	ie_status_pagamento_w	:= pls_analise_obter_status_pag(	r_C01_w.ie_status,
									r_C01_w.qt_material_imp,
									r_C01_w.qt_material,
									r_C01_w.vl_material_imp,
									r_C01_w.vl_material,
									r_C01_w.vl_liberado,
									r_C01_w.vl_glosa,
									r_C01_w.ie_glosa);
									
	ie_ocor_pagamento_w	:= pls_gerencia_dados_ocor_pck.pls_obter_se_glosa_ocor(nr_seq_conta_p);
		
	--Verifica se tem alguma ocorrencia que impede pogamento

	if (ie_ocor_pagamento_w = 'N') then
		Select	CASE WHEN Count(1)=0 THEN  'N'  ELSE 'S' END
		into STRICT	ie_ocor_pagamento_w
		from	pls_ocorrencia_benef	b,
			Pls_Ocorrencia		C
		where	b.nr_seq_conta_mat	= r_C01_w.nr_sequencia
		and	b.ie_situacao		= 'A'
		and	c.nr_sequencia		= b.nr_seq_ocorrencia
		and	c.ie_situacao		= 'A'
		And	C.Ie_Glosar_Pagamento	= 'S'
		And ( SELECT	count(1)
			  From	Tiss_Motivo_Glosa A
			  Where	A.Cd_Motivo_Tiss = '1705'
			  and	a.nr_sequencia = c.nr_seq_motivo_glosa) = 0
			  
		and ( select	count(1)
			  from 	pls_conta_glosa x
			  where	x.nr_seq_ocorrencia_benef	= b.nr_sequencia
			  and	x.ie_lib_manual			= 'S') = 0
			  
		and ( select	count(1)
			  from 	pls_conta_glosa x
			  Where	X.Nr_Sequencia			= B.Nr_Seq_Glosa
			  and	x.ie_lib_manual			= 'S') = 0;
	end if;
	
	--Muda status de pagamento para indefinido

	if (ie_ocor_pagamento_w = 'S') 	and (coalesce(r_C01_w.ie_glosa,'N')	<> 'S')	then
		ie_status_pagamento_w	:= 'I';
	end if;
	
	tb_seq_item_w(nr_indice_w) :=	r_C01_w.nr_sequencia;		
	tb_status_pagamento_w(nr_indice_w) := ie_status_pagamento_w;
	--Quando atingir numero de registros predefinido, manda atualizar os registros das listas.

	if (nr_indice_w  = pls_util_cta_pck.qt_registro_transacao_w) then
		
		CALL pls_cta_valorizacao_pck.atualiza_status_item( tb_seq_item_w, tb_status_pagamento_w, 'M');	
		tb_seq_item_w.delete;
		tb_status_pagamento_w.delete;
		nr_indice_w	:= 0;
	--Caso nao atingiu o numero de registros predefinidos, acrescenta os valores nas listas.	

	else
		nr_indice_w := nr_indice_w + 1;		
	end if;
								
end loop;
	
--Faz chamada para atualizacao de itens, pois podem sobrar alguns nas listas.

CALL pls_cta_valorizacao_pck.atualiza_status_item( tb_seq_item_w, tb_status_pagamento_w, 'M');	

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cta_valorizacao_pck.pls_gerencia_status_pagto_mat ( nr_seq_lote_p pls_lote_protocolo_conta.nr_sequencia%type, nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nr_seq_lote_processo_p pls_cta_lote_processo.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;
